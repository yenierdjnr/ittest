{
  "description": "The Linux Command Line show is designed to introduce viewers to working on Linux based computers using only the command line interface. This is considered the first step in learning BASH scripting as most scripts are made up of a series of CLI commands.",
  "descriptionMD": "The Linux Command Line show is designed to introduce viewers to working on Linux based computers using only the command line interface. This is considered the first step in learning BASH scripting as most scripts are made up of a series of CLI commands.",
  "length": "33155",
  "name": "Linux Command Line",
  "practiceExam": false,
  "subtitle": "Getting started in the Linux command line",
  "tagUrl": "help-desk",
  "topics": [
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Don take a look how to use a Linux terminal to gain access to the command line. They demonstrate Gnome terminal, Xterm, Konsole and several other terminals and walk through their configruation and use.",
          "length": "2110",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-1-1-1-terminals_and_shells-091917-PGM.00_34_53_06.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-1-1-1-terminals_and_shells-091917-PGM.00_34_53_06.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-1-1-1-terminals_and_shells-091917-PGM.00_34_53_06.Still001-sm.jpg",
          "title": "Terminals and Shells",
          "transcript": "WEBVTT\n\n1\n00:00:00.210 --> 00:00:01.446\nWelcome to ITProTV.\n\n2\n00:00:01.446 --> 00:00:06.490\nI'm your host, Don Pezet [CROSSTALK]\n\n3\n00:00:06.490 --> 00:00:08.482\n[MUSIC]\n\n4\n00:00:08.482 --> 00:00:12.317\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:12.317 --> 00:00:14.275\n&gt;&gt; All right, greetings everyone and\n\n6\n00:00:14.275 --> 00:00:16.825\nwelcome to another great\nepisode of ITProTV.\n\n7\n00:00:16.825 --> 00:00:18.614\nI'm your host Daniel Lowrie, and\n\n8\n00:00:18.614 --> 00:00:22.260\nin today's episode we are kicking\noff our Linux command line series.\n\n9\n00:00:22.260 --> 00:00:24.540\nIt's gonna be a lot of fun,\ngonna learn a lot about Linux.\n\n10\n00:00:24.540 --> 00:00:27.590\nAnd joining us in the studio,\nour good friend, Mr. Don Pezet.\n\n11\n00:00:27.590 --> 00:00:29.010\nDon, welcome to the show, sir.\n\n12\n00:00:29.010 --> 00:00:30.020\nThanks for coming today.\n\n13\n00:00:30.020 --> 00:00:31.149\n&gt;&gt; Hey, thanks for having me, Daniel.\n\n14\n00:00:31.149 --> 00:00:33.410\nAnd this is a really fun topic for me.\n\n15\n00:00:33.410 --> 00:00:36.050\nDiving into the shell and\nactually getting these working.\n\n16\n00:00:36.050 --> 00:00:39.050\nWe've got a series coming up on batch\nscripting that's gonna have a ton of\n\n17\n00:00:39.050 --> 00:00:44.250\nreally cool things that you can do that\nare all driven by the command line.\n\n18\n00:00:44.250 --> 00:00:46.960\nSo we need to know how to get in and\ninteract with that shell,\n\n19\n00:00:46.960 --> 00:00:50.380\ninteract with the interface that we have,\nto actually kind of\n\n20\n00:00:50.380 --> 00:00:53.810\ntalk right to the Linux kernel and\nget to do some really neat stuff.\n\n21\n00:00:53.810 --> 00:00:57.930\nAnd one of the things that I always try\nand remember is that in the Linux world,\n\n22\n00:00:57.930 --> 00:01:02.450\nalmost everything is developed\nfrom the command line first, and\n\n23\n00:01:02.450 --> 00:01:06.330\nthen eventually gets a nice little GUI\nstuck on it, a graphical user interface.\n\n24\n00:01:06.330 --> 00:01:09.087\nBut if you just stick in\nthe graphical environment,\n\n25\n00:01:09.087 --> 00:01:12.605\nyou're really limited, there's only so\nmany things you can do.\n\n26\n00:01:12.605 --> 00:01:16.325\nAnd when you pull those shackles off and\ndive right into the command line,\n\n27\n00:01:16.325 --> 00:01:17.286\nsky's the limit.\n\n28\n00:01:17.286 --> 00:01:19.520\nSo you can do so much stuff.\n\n29\n00:01:19.520 --> 00:01:23.240\nSo I'm excited to dive into it here in\nthis episode, and really the whole series,\n\n30\n00:01:23.240 --> 00:01:25.930\nto be able to see what we can do from\nthe command line, how we can use it, and\n\n31\n00:01:25.930 --> 00:01:28.960\nsome of the neat utilities that are there\nthat let us talk to that system.\n\n32\n00:01:28.960 --> 00:01:32.840\n&gt;&gt; Well, Don, when we start talking about\nterminals, right, the command line stuff,\n\n33\n00:01:32.840 --> 00:01:33.640\nthere are terminals.\n\n34\n00:01:33.640 --> 00:01:36.690\nIt's a little black box that pops up and\nwe type command into it.\n\n35\n00:01:36.690 --> 00:01:39.144\nAnd we think, that's kind of vanilla.\n\n36\n00:01:39.144 --> 00:01:41.221\nBut there's a bit more to it than that,\nright?\n\n37\n00:01:41.221 --> 00:01:45.916\n&gt;&gt; Yeah, in the olden days where we had\na mainframe or something in that nature,\n\n38\n00:01:45.916 --> 00:01:48.330\nyou would have a dummy terminal.\n\n39\n00:01:48.330 --> 00:01:52.100\nAnd a dummy terminal was a keyboard and\na monitor, and when you sat down at it,\n\n40\n00:01:52.100 --> 00:01:54.600\nyou would just see a command prompt.\n\n41\n00:01:54.600 --> 00:01:58.000\nYou didn't have a graphical user\ninterface, you didn't have a mouse.\n\n42\n00:01:58.000 --> 00:02:00.350\nBut on most computers these days,\n\n43\n00:02:00.350 --> 00:02:03.722\nwhen you sit down at them, you actually\nget a graphical user interface.\n\n44\n00:02:03.722 --> 00:02:05.520\nSo that the terminal, the command line,\n\n45\n00:02:05.520 --> 00:02:08.740\nis kind of hidden away behind the scenes,\nright?\n\n46\n00:02:08.740 --> 00:02:10.082\nSo we need to know how to get to it.\n\n47\n00:02:10.082 --> 00:02:13.232\nAnd fortunately, there's actually\na number of different ways to get to it.\n\n48\n00:02:13.232 --> 00:02:16.563\nNow, remember that Linux,\nwhether it's running as a desktop or\n\n49\n00:02:16.563 --> 00:02:20.270\nwhether it's running as a server,\nit really is the same under the hood.\n\n50\n00:02:20.270 --> 00:02:22.090\nThere's a lot of operating\nsystems that differentiate.\n\n51\n00:02:22.090 --> 00:02:25.480\nYou have Windows Server versus\nWindows Desktop, two different products.\n\n52\n00:02:25.480 --> 00:02:28.850\nBut in the Linux world,\nit's really the same.\n\n53\n00:02:28.850 --> 00:02:31.170\nThe big difference is that when\nyou install Linux as a server,\n\n54\n00:02:31.170 --> 00:02:33.440\nyou normally leave the GUI off.\n\n55\n00:02:33.440 --> 00:02:36.490\nSo if you push the power\nbutton on a Linux server,\n\n56\n00:02:36.490 --> 00:02:39.600\non the screen you see\nthe text-based terminal,\n\n57\n00:02:39.600 --> 00:02:42.960\nthe command prompt that you can jump\ninto and start to work with, right?\n\n58\n00:02:42.960 --> 00:02:46.800\nBut if you do it on a desktop,\nyou get a graphic user interface.\n\n59\n00:02:46.800 --> 00:02:48.970\nSome people put a graphic\nuser interface on a server.\n\n60\n00:02:48.970 --> 00:02:51.300\nBut you're not really supposed to,\nbut you can.\n\n61\n00:02:51.300 --> 00:02:54.780\nSo either way, if we get the graphical\ninterface, how do we get at it?\n\n62\n00:02:54.780 --> 00:02:57.140\nWell, it's not that\nthe text-based one is gone,\n\n63\n00:02:57.140 --> 00:02:58.810\nthe text-based one is\njust kind of hidden away.\n\n64\n00:02:58.810 --> 00:03:00.110\nSo let me show you here on my laptop.\n\n65\n00:03:00.110 --> 00:03:03.446\nSo this is my laptop, I use it every\nsingle day, and so I have a graphical user\n\n66\n00:03:03.446 --> 00:03:06.912\ninterface on it because I don't want to\ndo everything from the command shell.\n\n67\n00:03:06.912 --> 00:03:08.750\nAlthough, I do a surprising\namount of things.\n\n68\n00:03:08.750 --> 00:03:09.655\n&gt;&gt; Quite a bit, yeah.\n\n69\n00:03:09.655 --> 00:03:12.400\n&gt;&gt; [LAUGH] So when I log in,\nit's graphical, right?\n\n70\n00:03:12.400 --> 00:03:14.980\nSo I can launch in here and\nI can browse my files, and\n\n71\n00:03:14.980 --> 00:03:18.250\ndo all the different things that I\nneed to do right here through a GUI.\n\n72\n00:03:18.250 --> 00:03:19.540\nAnd then that's great, right?\n\n73\n00:03:19.540 --> 00:03:23.160\nBut if I want to access the terminal,\n\n74\n00:03:23.160 --> 00:03:26.050\nthe command prompt is actually\nrunning in the background.\n\n75\n00:03:26.050 --> 00:03:27.830\nI just don't see it, right?\n\n76\n00:03:27.830 --> 00:03:33.470\nOn most Linux distributions, you actually\nhave usually about six text-mode\n\n77\n00:03:33.470 --> 00:03:37.580\nterminals that are running in the\nbackground you're just not seeing, right?\n\n78\n00:03:37.580 --> 00:03:41.130\nThey fire up briefly while the computer's\nbooting up, and then the GUI loads and\n\n79\n00:03:41.130 --> 00:03:41.920\ntakes over from there.\n\n80\n00:03:41.920 --> 00:03:46.250\nSo I'm in X Windows but no Window\nmanagers, all kind of running and\n\n81\n00:03:46.250 --> 00:03:47.580\ngiving a GUI.\n\n82\n00:03:47.580 --> 00:03:50.720\nIf you wanna see the text based stuff,\nyou can, but\n\n83\n00:03:50.720 --> 00:03:52.330\nit's not as good as it used to be.\n\n84\n00:03:52.330 --> 00:03:54.885\nAnd the main problem with that\nis high resolution monitors.\n\n85\n00:03:54.885 --> 00:03:57.123\nSo the monitor on my laptop,\nI forget my resolution,\n\n86\n00:03:57.123 --> 00:04:00.580\nit's something like 3,200 by 1,800\nsomething ridiculous like that.\n\n87\n00:04:00.580 --> 00:04:02.450\n&gt;&gt; Crazy.\n&gt;&gt; And high resolution monitor,\n\n88\n00:04:02.450 --> 00:04:07.505\neven like a 1920 by 1080 monitor these\ndays makes the terminal almost unreadable.\n\n89\n00:04:07.505 --> 00:04:09.910\n&gt;&gt; It's like a postage stamp\non your screen, it's crazy.\n\n90\n00:04:09.910 --> 00:04:11.410\n&gt;&gt; It's really tiny.\n\n91\n00:04:11.410 --> 00:04:12.800\nSo here, let me pull mine up.\n\n92\n00:04:12.800 --> 00:04:17.110\nAnd I'm just gonna switch right over\nto one of my text-mode terminals.\n\n93\n00:04:17.110 --> 00:04:20.350\nSo you're gonna see my monitor blank out,\nand then there it is, okay?\n\n94\n00:04:20.350 --> 00:04:22.280\nI'm now in a text-mode terminal.\n\n95\n00:04:22.280 --> 00:04:24.070\nAnd it's asking me to login.\n\n96\n00:04:24.070 --> 00:04:25.208\nNow, how do I know that?\n\n97\n00:04:25.208 --> 00:04:26.890\n&gt;&gt; [LAUGH]\n&gt;&gt; Because if you look, I mean,\n\n98\n00:04:26.890 --> 00:04:29.060\nthat is really, really small.\n\n99\n00:04:29.060 --> 00:04:35.040\nI know for you guys in TV land, you're\nseeing this in the little boxed in view.\n\n100\n00:04:35.040 --> 00:04:37.480\nBut even if you were to full screen it,\nit's really small.\n\n101\n00:04:37.480 --> 00:04:40.790\nEven looking at my own monitor,\nit is really small, I can barely read it.\n\n102\n00:04:40.790 --> 00:04:42.458\nAnd unfortunately, there's no way for\n\n103\n00:04:42.458 --> 00:04:45.900\nme to adjust that without like really\ngoing in and re-engineering this terminal.\n\n104\n00:04:45.900 --> 00:04:48.381\nYou have to put in a giant font and\nall this other stuff, so\n\n105\n00:04:48.381 --> 00:04:50.480\nthere's not an easy way to do it.\n\n106\n00:04:50.480 --> 00:04:53.710\nAs a result, this is not how we\nnormally access the terminal.\n\n107\n00:04:53.710 --> 00:05:00.000\nIf you do, if you ever want to do this,\nthe keyboard shortcuts are Ctrl+Alt+F1.\n\n108\n00:05:00.000 --> 00:05:06.580\nAnd it's usually Ctrl+ F1 through F7, and\none of those will have the GUI, okay?\n\n109\n00:05:06.580 --> 00:05:10.219\nMost operating systems\ntoday put the GUI on F1.\n\n110\n00:05:10.219 --> 00:05:14.490\nSo if I hit ctrl+alt+F1, it should\nreturn me back to my GUI, all right?\n\n111\n00:05:14.490 --> 00:05:16.300\nSome distros put it one F7, though.\n\n112\n00:05:16.300 --> 00:05:19.140\nAnd you hit Ctrl+Alt+F7, and there you go.\n\n113\n00:05:19.140 --> 00:05:21.982\nMeanwhile, one through six,\nor whatever ones aren't used,\n\n114\n00:05:21.982 --> 00:05:23.760\nthose are the text-based terminals.\n\n115\n00:05:23.760 --> 00:05:25.920\nSo they're there, they're running,\nand you use them.\n\n116\n00:05:25.920 --> 00:05:28.979\nIf you ever lock up your graphical\nuser interface and you're stuck,\n\n117\n00:05:28.979 --> 00:05:31.878\nyou can drop to one of those terminals and\ntry and fix the problem,\n\n118\n00:05:31.878 --> 00:05:34.697\nit's nice to have, if you also\nhave a magnifying glass [LAUGH].\n\n119\n00:05:34.697 --> 00:05:35.823\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n120\n00:05:35.823 --> 00:05:39.293\nthat's not the normal way that\nwe get into our command prompt,\n\n121\n00:05:39.293 --> 00:05:42.450\nto get into that kind session\nto talk to the Linux kernel.\n\n122\n00:05:42.450 --> 00:05:46.910\nSo instead, what we normally\nuse is a terminal program.\n\n123\n00:05:46.910 --> 00:05:50.830\nAnd there are a number of different\nterminal programs that are available.\n\n124\n00:05:50.830 --> 00:05:54.647\nAnd what you'll find is that over time,\nyou'll find one you really like,\n\n125\n00:05:54.647 --> 00:05:57.934\nthat you'll kind of bond with,\nyou'll team up and be buddies.\n\n126\n00:05:57.934 --> 00:06:00.035\n&gt;&gt; That's like the Linux manifesto, right?\n\n127\n00:06:00.035 --> 00:06:04.750\nIs do it the way you like to do it and\nthere's many options on the smorgasbord\n\n128\n00:06:04.750 --> 00:06:07.300\nof different things that do\nkinda the same stuff, right?\n\n129\n00:06:07.300 --> 00:06:08.310\n&gt;&gt; Yeah, absolutely.\n\n130\n00:06:08.310 --> 00:06:10.740\nAnd there's no right or wrong answer here.\n\n131\n00:06:10.740 --> 00:06:13.780\nYou need to find the one that\nworks out the best for you.\n\n132\n00:06:13.780 --> 00:06:17.989\nNow, the best piece of advice I can\ngive you is don't just use what I use,\n\n133\n00:06:17.989 --> 00:06:20.197\nbecause what I use is just what I like.\n\n134\n00:06:20.197 --> 00:06:25.013\nAnd I get a little bit lazy sometimes,\nnot lazy as in I don't want to do work,\n\n135\n00:06:25.013 --> 00:06:29.630\nbut lazy as in I'm in a hurry and I want\nto get to a terminal as fast as I can.\n\n136\n00:06:29.630 --> 00:06:32.159\nThere might be some flashy terminal\nthat has a lot of bells and\n\n137\n00:06:32.159 --> 00:06:33.357\nwhistles that's awesome.\n\n138\n00:06:33.357 --> 00:06:34.863\nBut if it's not installed by default,\n\n139\n00:06:34.863 --> 00:06:37.750\nI don't want to deal with it cuz I don't\nhave time to install the terminal.\n\n140\n00:06:37.750 --> 00:06:39.358\nI want to use something\nthat's already there.\n\n141\n00:06:39.358 --> 00:06:42.446\nSo a lot of times, I'll pick one\nthat I know is not as feature rich.\n\n142\n00:06:42.446 --> 00:06:44.733\nSo don't let me influence you.\n\n143\n00:06:44.733 --> 00:06:46.072\nYou need to find out what works for you.\n\n144\n00:06:46.072 --> 00:06:47.500\nOr you might agree with me and say, hey,\n\n145\n00:06:47.500 --> 00:06:49.403\nI only want to use stuff\nthat's installed natively.\n\n146\n00:06:49.403 --> 00:06:53.420\nI don't want to have to install extra\npackages to get to some crazy terminal.\n\n147\n00:06:53.420 --> 00:06:55.900\nNow, when you install your Linux distro,\n\n148\n00:06:55.900 --> 00:06:59.290\nit will have at least\none terminal available.\n\n149\n00:06:59.290 --> 00:07:02.490\nAnd so you can use whatever GUI\nyou've got, if you got Unity,\n\n150\n00:07:02.490 --> 00:07:06.290\nor I'm on GNOME here, if you have KDE.\n\n151\n00:07:06.290 --> 00:07:09.375\nWhen you bring up your menu and\nyou just type in terminal,\n\n152\n00:07:09.375 --> 00:07:11.507\nsomething's going to come up, okay?\n\n153\n00:07:11.507 --> 00:07:14.166\nNow, I have a number of terminals\ninstalled in my machine, so\n\n154\n00:07:14.166 --> 00:07:15.500\nI see several choices.\n\n155\n00:07:15.500 --> 00:07:18.010\nBut you may only see one, right?\n\n156\n00:07:18.010 --> 00:07:19.910\nIt just depends on the distro.\n\n157\n00:07:19.910 --> 00:07:21.790\nAnd the one that you'll normally\nhave is this guy right here,\n\n158\n00:07:21.790 --> 00:07:23.990\nhe's called Xterm, right?\n\n159\n00:07:23.990 --> 00:07:29.880\nThe X Windows GUI is kind of the defacto\nstandard for graphical interfaces.\n\n160\n00:07:29.880 --> 00:07:30.860\nNow, it's changing.\n\n161\n00:07:30.860 --> 00:07:35.370\nWe have a replacement for X Windows\ncalled, or Xterm is what that's actually\n\n162\n00:07:35.370 --> 00:07:38.620\ncalled, that's slowly being\nreplaced by a product called Mir.\n\n163\n00:07:38.620 --> 00:07:40.390\nAnd, or sorry, not Mir, Wayland.\n\n164\n00:07:40.390 --> 00:07:40.955\n&gt;&gt; There we go [LAUGH].\n\n165\n00:07:40.955 --> 00:07:42.350\n&gt;&gt; Gotta get my managers right.\n\n166\n00:07:42.350 --> 00:07:46.100\nSo Wayland is kinda taking over, so\nyou might not have XTerm in that case.\n\n167\n00:07:46.100 --> 00:07:48.688\nIn which case, you have other\nterminals that might be available.\n\n168\n00:07:48.688 --> 00:07:52.859\nBut normally,\na distro will take some terminal and\n\n169\n00:07:52.859 --> 00:07:56.450\nlabel it as just plain old terminal, okay?\n\n170\n00:07:56.450 --> 00:08:00.142\nNow in a GNOME environment that's actually\nwhat's called the GNOME Terminal.\n\n171\n00:08:00.142 --> 00:08:04.154\nIn a KDE environment, this would be\nlinking to what's called Konsole.\n\n172\n00:08:04.154 --> 00:08:06.860\nWhich I actually have installed also,\nKonsole with a K.\n\n173\n00:08:06.860 --> 00:08:08.190\nThis is from KDE.\n\n174\n00:08:08.190 --> 00:08:12.530\nBut there are other terminals that\nare out there that you might see.\n\n175\n00:08:12.530 --> 00:08:16.430\nAll of them provide the same\nbasic functionality.\n\n176\n00:08:16.430 --> 00:08:18.350\nBut then some of them\nadd a lot of bells and\n\n177\n00:08:18.350 --> 00:08:21.020\nwhistles that enable you to\ndo some really neat things.\n\n178\n00:08:21.020 --> 00:08:24.870\nSo if I were to launch into xterm,\nthat's the oldest one.\n\n179\n00:08:24.870 --> 00:08:26.690\nThat's the most basic terminal.\n\n180\n00:08:26.690 --> 00:08:29.939\nAnd when I get into it, I see-\n&gt;&gt; A postage stamp.\n\n181\n00:08:29.939 --> 00:08:30.451\n&gt;&gt; It's pretty small.\n\n182\n00:08:30.451 --> 00:08:34.550\n&gt;&gt; [LAUGH]\n&gt;&gt; And if I were to zoom in,\n\n183\n00:08:34.550 --> 00:08:36.500\nI can read it now, right?\n\n184\n00:08:36.500 --> 00:08:41.130\nBut xterm is really operating the same way\n\n185\n00:08:41.130 --> 00:08:42.850\nas those text mode terminals\nin the background.\n\n186\n00:08:42.850 --> 00:08:47.130\nIt's just putting a GUI\nwrapper around that terminal.\n\n187\n00:08:47.130 --> 00:08:50.170\nAnd I can get in and\nI can do some set term commands to try and\n\n188\n00:08:50.170 --> 00:08:51.650\nchange the background color.\n\n189\n00:08:51.650 --> 00:08:54.140\nAnd other things to try and\nmake it useful.\n\n190\n00:08:54.140 --> 00:08:59.410\nBut as far as the GUI is concerned,\nthere's not really any options for me.\n\n191\n00:08:59.410 --> 00:09:02.910\nThere's not much of a menu here\nother than minimize and maximize.\n\n192\n00:09:02.910 --> 00:09:05.610\nAnd even if I go up to the menu\nitems up here, there's just quit.\n\n193\n00:09:05.610 --> 00:09:08.770\nI don't get a lot of\nfunctionality with xterm.\n\n194\n00:09:08.770 --> 00:09:12.520\nThis was the original, graphical\nterminal that was made available and so\n\n195\n00:09:12.520 --> 00:09:15.090\nit's got a very basic set.\n\n196\n00:09:15.090 --> 00:09:16.590\nSo most of us aren't gonna use that one.\n\n197\n00:09:16.590 --> 00:09:20.520\nMost of us are gonna use GNOME Term or\nKonsole if you're in KDE.\n\n198\n00:09:20.520 --> 00:09:22.830\nBut GNOME Term is really\nthe most popular one.\n\n199\n00:09:22.830 --> 00:09:28.190\nIf you're running Ubuntu,\nDebian, Fedora, RedHat, Centos.\n\n200\n00:09:28.190 --> 00:09:31.780\nAll of those distros\ndefault to Gnome Term.\n\n201\n00:09:31.780 --> 00:09:34.550\nUbuntu is using the Unity window manager.\n\n202\n00:09:34.550 --> 00:09:37.770\nBut the Unity window manager actually\nuses GNOME Term as its terminal.\n\n203\n00:09:37.770 --> 00:09:40.520\nSo even though it's not GNOME,\nit's still using that terminal.\n\n204\n00:09:40.520 --> 00:09:42.400\nSo that's kind of the most popular one.\n\n205\n00:09:42.400 --> 00:09:45.610\nAnd that's the one that I'm gonna use for\nthe rest of this series.\n\n206\n00:09:45.610 --> 00:09:48.680\nSo for the whole series,\nI'm going to be using the GNOME Terminal.\n\n207\n00:09:48.680 --> 00:09:51.740\nBut I wanna walk you through a few of the\nother terminals here in this episode to\n\n208\n00:09:51.740 --> 00:09:55.830\ngive you an idea of which ones might\nbe great or which ones might be lame.\n\n209\n00:09:55.830 --> 00:09:57.930\n&gt;&gt; They get kind of fancy,\ndon't they, Don?\n\n210\n00:09:57.930 --> 00:09:58.650\n&gt;&gt; They really do.\n\n211\n00:09:58.650 --> 00:10:01.090\nSome of them, some have some\nreally impressive feature sets.\n\n212\n00:10:01.090 --> 00:10:04.660\nSo, for example,\nlet me just fire up real quick.\n\n213\n00:10:04.660 --> 00:10:06.170\nWe'll breeze through a few real quick and\n\n214\n00:10:06.170 --> 00:10:08.110\nthen I'll do a deeper\ndive into some of them.\n\n215\n00:10:08.110 --> 00:10:09.840\nSo, for example, the GNOME Termina.\n\n216\n00:10:09.840 --> 00:10:14.670\nIf I just fire up my terminal, this is the\nGNOME Terminal, the default built one in.\n\n217\n00:10:14.670 --> 00:10:16.640\nSee how I got a nice big font?\n\n218\n00:10:16.640 --> 00:10:19.890\nWell, it didn't have that by default but I\nwas able to change it because I've got all\n\n219\n00:10:19.890 --> 00:10:21.940\nthese menu options up here\nwhere I can tweak it.\n\n220\n00:10:21.940 --> 00:10:23.600\nI can change the font size.\n\n221\n00:10:23.600 --> 00:10:24.920\nI can change the colors.\n\n222\n00:10:24.920 --> 00:10:26.450\nI can change what's being rendered.\n\n223\n00:10:26.450 --> 00:10:27.875\nThere's a lot that you can do [CROSSTALK].\n\n224\n00:10:27.875 --> 00:10:30.652\n&gt;&gt; I love the fact that once\nyou make those changes,\n\n225\n00:10:30.652 --> 00:10:33.440\na lot of these will have\nprofiles you can create.\n\n226\n00:10:33.440 --> 00:10:36.830\nAnd say,\nI want this to be my default profile.\n\n227\n00:10:36.830 --> 00:10:39.140\nAnd that way if I want\nto do different things,\n\n228\n00:10:39.140 --> 00:10:41.540\nI can just load different profiles\nthat's already preset for me.\n\n229\n00:10:41.540 --> 00:10:44.540\nThat is a fantastic option on\nnewer style terminals like this.\n\n230\n00:10:44.540 --> 00:10:48.080\n&gt;&gt; Yeah, and some of the other features\nthey add really take advantage of the GUI.\n\n231\n00:10:48.080 --> 00:10:52.900\nIf I need more than one terminal open,\nI can open more than one window, right?\n\n232\n00:10:52.900 --> 00:10:55.860\nYou can go up here to file and\nopen terminal and\n\n233\n00:10:55.860 --> 00:10:59.170\nnow I've got two terminal windows open so\nI could run two different commands.\n\n234\n00:10:59.170 --> 00:11:03.030\nBut this one actually have\ntabbed terminals as well.\n\n235\n00:11:03.030 --> 00:11:05.590\nUnder that file option here,\nI had open tab.\n\n236\n00:11:05.590 --> 00:11:09.010\nAnd so now I could have two tabs,\nor three tabs, or four tabs.\n\n237\n00:11:09.010 --> 00:11:12.200\nYou just do Ctrl+Shift+T and\nI get more and more tabs.\n\n238\n00:11:12.200 --> 00:11:16.120\nSo I might run something like,\nmaybe I run Midnight Commander which\n\n239\n00:11:16.120 --> 00:11:18.800\nI don't have installed, so\nlet me install Midnight Commander.\n\n240\n00:11:18.800 --> 00:11:21.070\nSo I'm installing a program here and\n\n241\n00:11:21.070 --> 00:11:25.160\nwhile it's installing I could jump\nover to another tab and be doing work.\n\n242\n00:11:25.160 --> 00:11:28.200\nAnd then when I come back to the first\ntab, it finished installing.\n\n243\n00:11:28.200 --> 00:11:30.880\nI can run Midnight Commander so\nnow it's running.\n\n244\n00:11:30.880 --> 00:11:34.090\nAnd I can switch over to another tab and\nperform more work.\n\n245\n00:11:34.090 --> 00:11:36.690\nAnd so I can take advantage of those tabs\n\n246\n00:11:36.690 --> 00:11:40.857\nto do more than one thing all from\nright inside of the terminal.\n\n247\n00:11:40.857 --> 00:11:44.320\nSo that's kind of a nice feature to have\nthat we didn't have in the older xterm.\n\n248\n00:11:44.320 --> 00:11:49.083\nOr you definitely don't have in the\ntext-based console if I do Ctrl+Alt+F1.\n\n249\n00:11:49.083 --> 00:11:53.200\nAlthough I could Ctrl+Alt+F1,\nF2, F3 and move between them.\n\n250\n00:11:53.200 --> 00:11:54.990\nThat was the earliest\nform of multitasking.\n\n251\n00:11:54.990 --> 00:11:56.560\nThat you could run these full screen or\n\n252\n00:11:56.560 --> 00:11:58.880\nlocked applications that\nwould lock your session and\n\n253\n00:11:58.880 --> 00:12:02.410\njust switch over to another terminal and\nfire up more applications that way.\n\n254\n00:12:02.410 --> 00:12:04.230\nSo you had that functionality.\n\n255\n00:12:04.230 --> 00:12:06.910\nNow, GNOME Term is pretty powerful.\n\n256\n00:12:06.910 --> 00:12:09.960\nBut there're some things that it\ndoesn't do that other consoles or\n\n257\n00:12:09.960 --> 00:12:12.480\nother terminals might\ndo that you appreciate.\n\n258\n00:12:12.480 --> 00:12:18.690\nSo, for example,\nI use one called Guake, G-U-A-K-E.\n\n259\n00:12:18.690 --> 00:12:20.900\nGuake is nice because it is built off of,\n\n260\n00:12:20.900 --> 00:12:23.960\nit's actually modeled after\nthe old video game Quake.\n\n261\n00:12:23.960 --> 00:12:25.240\nIn the video game Quake,\n\n262\n00:12:25.240 --> 00:12:28.200\nit was one of the first video\ngames that had a dropdown console.\n\n263\n00:12:28.200 --> 00:12:30.440\nYou could hit,\nI think it was tilde on the keyboard.\n\n264\n00:12:30.440 --> 00:12:32.704\nAnd this little console would drop\ndown from the top of the screen, and\n\n265\n00:12:32.704 --> 00:12:34.300\nyou could type in cheat codes.\n\n266\n00:12:34.300 --> 00:12:35.780\nIt's really all you ever type.\n\n267\n00:12:35.780 --> 00:12:39.980\nFor people like me that\nuse a terminal a lot.\n\n268\n00:12:39.980 --> 00:12:41.460\nI'm constantly going to the terminal.\n\n269\n00:12:41.460 --> 00:12:44.110\nI don't necessarily want it to be\na window that pops up like this.\n\n270\n00:12:44.110 --> 00:12:46.550\nI would like it just to be something\nthat I can quickly access.\n\n271\n00:12:46.550 --> 00:12:50.890\nAnd if you install Guake,\nit's running in the background.\n\n272\n00:12:50.890 --> 00:12:57.561\nI've actually got a little tool item,\nwhoops, somewhere up here that shows it.\n\n273\n00:12:57.561 --> 00:12:59.841\nWell, anyhow, it's way up here.\n\n274\n00:12:59.841 --> 00:13:04.125\nThis little tool item and\nI can hit F12 on on my keyboard and\n\n275\n00:13:04.125 --> 00:13:08.105\nthere's a console that pops up and\nI have that access.\n\n276\n00:13:08.105 --> 00:13:10.561\nAnd so if I wanna jump in and\nrun something really quick I can.\n\n277\n00:13:10.561 --> 00:13:15.061\nAnd it's really handy if I'm, now,\nI'm browsing on the internet and\n\n278\n00:13:15.061 --> 00:13:17.470\nI come across some tutorial, right?\n\n279\n00:13:17.470 --> 00:13:23.370\nSo maybe I'm doing a Vim tutorial\nto learn some Vim commands.\n\n280\n00:13:23.370 --> 00:13:24.547\nAnd so I'm here and\n\n281\n00:13:24.547 --> 00:13:29.030\nI'm reading about how to do something and\nthen I pull up that terminal.\n\n282\n00:13:29.030 --> 00:13:30.120\nI run something real quick.\n\n283\n00:13:30.120 --> 00:13:31.130\nI get it out of the way.\n\n284\n00:13:31.130 --> 00:13:34.142\nAnd so just tied to my F12 key,\nI can make that pop up and come and go, so\n\n285\n00:13:34.142 --> 00:13:35.530\nthat's a neat feature.\n\n286\n00:13:35.530 --> 00:13:39.370\nIt's a different terminal but I like it\nbecause it gives me some functionality\n\n287\n00:13:39.370 --> 00:13:41.315\nthat I don't have in the normal terminal.\n\n288\n00:13:42.690 --> 00:13:46.180\nAnother one that I use from\ntime to time is Terminator.\n\n289\n00:13:46.180 --> 00:13:48.370\nTerminator is a third-party terminal.\n\n290\n00:13:48.370 --> 00:13:53.200\nIt's available in Ubuntu, and Debian,\nFedora, it's available in all of them.\n\n291\n00:13:53.200 --> 00:13:57.697\nAnd it has a neat function that\nlet's you split the screen, right?\n\n292\n00:13:57.697 --> 00:14:02.710\nIn GNOME Terminal, I could do tabs and\nif I had multiple tabs I could\n\n293\n00:14:02.710 --> 00:14:06.080\nhave multiple terminals but I couldn't\nsee them both at the same time, right?\n\n294\n00:14:06.080 --> 00:14:11.830\nIf I wanted to see more then one thing at\nthe same time, I could fire up Terminator.\n\n295\n00:14:11.830 --> 00:14:15.280\nAnd with a simple right-click\nI can split horizontally, or\n\n296\n00:14:15.280 --> 00:14:18.200\nsplit vertically, so\nI'll do a vertical split.\n\n297\n00:14:18.200 --> 00:14:20.115\nAnd now I've got two\nterminals side-by-side.\n\n298\n00:14:20.115 --> 00:14:24.560\nAnd I could even come in and take one and\nI could split it horizontally.\n\n299\n00:14:24.560 --> 00:14:26.920\nAnd now I'm starting to lay these out\nwhere I've got all these different\n\n300\n00:14:26.920 --> 00:14:27.820\nterminals.\n\n301\n00:14:27.820 --> 00:14:32.850\nAnd that's handy because I might be\nrunning something like htop here.\n\n302\n00:14:32.850 --> 00:14:35.740\nSo I'm monitoring\nperformance on my server.\n\n303\n00:14:35.740 --> 00:14:39.950\nAnd then down here,\nmaybe I'm doing a little journal CTL-F.\n\n304\n00:14:39.950 --> 00:14:43.740\nAnd so I'm following my system d-logs,\nright.\n\n305\n00:14:43.740 --> 00:14:46.261\nSo now in the top left,\nI'm seeing system performance.\n\n306\n00:14:46.261 --> 00:14:48.224\nIn the bottom left,\nI'm seeing what's going on.\n\n307\n00:14:48.224 --> 00:14:50.950\nAnd in the right,\nI could be doing my work.\n\n308\n00:14:50.950 --> 00:14:55.360\nI could come in and I could say,\nwell, I need to restart some service.\n\n309\n00:14:55.360 --> 00:15:00.410\nI'll restart I don't know,\nI'll restart my network stack, right.\n\n310\n00:15:00.410 --> 00:15:00.980\nWhy not?\n\n311\n00:15:00.980 --> 00:15:02.250\nSo I'll restart something and\n\n312\n00:15:02.250 --> 00:15:05.550\nI can see the log messages down here\nbeing generated as part of that restart.\n\n313\n00:15:05.550 --> 00:15:09.750\nAnd I can see any CPU or\nmemory activity that was modified by it.\n\n314\n00:15:09.750 --> 00:15:12.030\nAnd I could start to\ndo more than one task.\n\n315\n00:15:12.030 --> 00:15:13.140\nThat's a pretty neat function.\n\n316\n00:15:13.140 --> 00:15:15.729\nBy being able to slice\nyour screen up like this,\n\n317\n00:15:15.729 --> 00:15:18.250\nis not something I could do in GNOME.\n\n318\n00:15:18.250 --> 00:15:20.590\nBut I can easily do it\nright here in Terminator.\n\n319\n00:15:21.640 --> 00:15:26.400\nSo that's where I go back in saying when\nit comes to picking a terminal, there's\n\n320\n00:15:26.400 --> 00:15:31.040\na ton of them that are out there and you\nneed to find the one that you like best.\n\n321\n00:15:31.040 --> 00:15:36.580\nThese guys right here, they each have some\nkind of shining advantage to them, right?\n\n322\n00:15:36.580 --> 00:15:40.010\nTerminator can split the screen but\nit's not installed by default.\n\n323\n00:15:40.010 --> 00:15:42.740\nI would have to install it if\nI wanted to use it, right?\n\n324\n00:15:42.740 --> 00:15:45.260\nSo if I'm in a hurry on a system,\nI might not want to install it.\n\n325\n00:15:45.260 --> 00:15:46.439\nI might wanna use\nsomething that's built-in.\n\n326\n00:15:46.439 --> 00:15:50.029\nBut boy, slicing up the screen\nlike this is pretty handy, right?\n\n327\n00:15:50.029 --> 00:15:52.296\nSame thing goes for Guake.\n\n328\n00:15:52.296 --> 00:15:55.878\nIt's really nice to have that drop down\nfrom the top that I have to install it and\n\n329\n00:15:55.878 --> 00:15:56.543\nget it set up.\n\n330\n00:15:56.543 --> 00:15:57.781\nIt's not installed by default.\n\n331\n00:15:57.781 --> 00:16:00.020\nSo I might not wanna deal with that.\n\n332\n00:16:00.020 --> 00:16:02.350\nIt's kind of a pros and\ncons type approach.\n\n333\n00:16:02.350 --> 00:16:03.602\nYou need to find out which\none meets your needs.\n\n334\n00:16:03.602 --> 00:16:06.549\n&gt;&gt; Yeah, Don, and I really like\nhow it splits the screen for you.\n\n335\n00:16:06.549 --> 00:16:09.570\nBecause if you've ever tried to, and even\nif you come from a Windows background.\n\n336\n00:16:09.570 --> 00:16:12.116\nAnd you're like,\nlet me check out this Linux thing.\n\n337\n00:16:12.116 --> 00:16:13.919\nYou have the black screens and\nyou're moving around.\n\n338\n00:16:13.919 --> 00:16:17.130\nYou're trying to, I'll snap to this side,\nsnap to that side.\n\n339\n00:16:17.130 --> 00:16:19.011\nAnd try to get everything\nto look just like you like.\n\n340\n00:16:19.011 --> 00:16:22.860\nWhere I'm just, okay, split this, split\nthat, and it's kind of doing that for me.\n\n341\n00:16:22.860 --> 00:16:26.740\nIt takes a lot of the hard work out of it,\nof getting everything lined up perfectly.\n\n342\n00:16:26.740 --> 00:16:31.209\nAnd that kind of takes us into something\nelse, Don, which we kind of alluded to,\n\n343\n00:16:31.209 --> 00:16:33.537\nwhich was customizing these terminals.\n\n344\n00:16:33.537 --> 00:16:36.090\nCan you walk us through\nsome of that customization?\n\n345\n00:16:36.090 --> 00:16:39.269\n&gt;&gt; Yeah, so let me fire up my\nregular Gnome terminal again.\n\n346\n00:16:39.269 --> 00:16:42.760\nAnd I want to show you guys profiles,\nright?\n\n347\n00:16:42.760 --> 00:16:44.412\nProfiles, Daniel mentioned them earlier,\n\n348\n00:16:44.412 --> 00:16:46.330\nare a way that we can kind\nof customize our terminal.\n\n349\n00:16:46.330 --> 00:16:50.260\nAnd change the way that it appears and\nget it to suit our needs.\n\n350\n00:16:50.260 --> 00:16:53.501\nThe default profile for\nmost systems is not something that I like.\n\n351\n00:16:53.501 --> 00:16:56.630\nIt's usually very small,\nit's maybe not a font that I like.\n\n352\n00:16:56.630 --> 00:16:59.963\nAnd so I usually do some customizations\nthere that are part of my user profile.\n\n353\n00:16:59.963 --> 00:17:03.434\nI bring it along with me when\nI sit down at a new system.\n\n354\n00:17:03.434 --> 00:17:06.486\nSo if I wanna go in and\ntake a look at that.\n\n355\n00:17:06.486 --> 00:17:11.343\nWhat we do is inside of Gnome,\nif you take a look at your menus up top,\n\n356\n00:17:11.343 --> 00:17:13.860\nor inside a Gnome terminal.\n\n357\n00:17:13.860 --> 00:17:18.060\nWe can go to Edit, and\nunder Edit you'll see two options,\n\n358\n00:17:18.060 --> 00:17:21.300\nthere's Preferences, and\nProfile Preferences.\n\n359\n00:17:21.300 --> 00:17:23.820\nAnd that is a little bit confusing,\n\n360\n00:17:23.820 --> 00:17:26.870\nwhy do I have these two\nthings that are very similar?\n\n361\n00:17:26.870 --> 00:17:31.610\nPreferences, those are settings that\naffect the entire terminal, right?\n\n362\n00:17:31.610 --> 00:17:34.960\nNot just my little session inside of it.\n\n363\n00:17:34.960 --> 00:17:37.600\nAnd the Profile Preferences,\nthat's what affects my session.\n\n364\n00:17:37.600 --> 00:17:40.260\nSo let's start with Preferences,\nand kind of see what's in there.\n\n365\n00:17:40.260 --> 00:17:43.672\nYou'll find that there's actually not\na whole lot of options tucked away inside\n\n366\n00:17:43.672 --> 00:17:44.330\nof this.\n\n367\n00:17:44.330 --> 00:17:48.390\nSo taking a quick glance at it,\nfirst I've got, Show menubar by default.\n\n368\n00:17:48.390 --> 00:17:50.500\nWell, I need my menubar,\nthat's why I'm in the options.\n\n369\n00:17:50.500 --> 00:17:52.340\nBut if you've memorized all\nthe keyboard shortcuts,\n\n370\n00:17:52.340 --> 00:17:53.460\nyou might not need that menubar.\n\n371\n00:17:53.460 --> 00:17:55.303\nYou can get a little\nmore screen real estate.\n\n372\n00:17:55.303 --> 00:17:59.700\nEnable mnemonics, such as Alt+F\nto open the File menu, right?\n\n373\n00:17:59.700 --> 00:18:03.570\nThose are turned off by default because we\nmight need to send Alt+F to the program\n\n374\n00:18:03.570 --> 00:18:05.520\nrunning inside of the terminal, right?\n\n375\n00:18:05.520 --> 00:18:07.980\nBut if you use those, you can turn it on.\n\n376\n00:18:07.980 --> 00:18:11.430\nThis is one that I usually turn off,\nthis is on by default.\n\n377\n00:18:11.430 --> 00:18:14.168\nEnable the menu accelerator key,\nF10 by default.\n\n378\n00:18:14.168 --> 00:18:15.711\nWhich means if you hit F10,\n\n379\n00:18:15.711 --> 00:18:19.920\nthe next series of keys you hit is being\nsent to the menu for the terminal.\n\n380\n00:18:19.920 --> 00:18:23.370\nWell, there's a lot of programs like\nMidnight Commander that I ran earlier.\n\n381\n00:18:23.370 --> 00:18:26.100\nF10 is the key to exit Midnight Commander.\n\n382\n00:18:26.100 --> 00:18:27.661\nIf it's mapped to the terminal,\n\n383\n00:18:27.661 --> 00:18:31.360\nthat's gonna make it where I can't exit\nMidnight Commander, it's a [LAUGH].\n\n384\n00:18:31.360 --> 00:18:34.250\n&gt;&gt; Open another terminal, and [LAUGH].\n\n385\n00:18:34.250 --> 00:18:35.326\n&gt;&gt; You could, you find a way around it.\n\n386\n00:18:35.326 --> 00:18:37.350\nBut it's neat that we can come in and\nwe can change that.\n\n387\n00:18:37.350 --> 00:18:39.010\nAnd then you've got themes.\n\n388\n00:18:39.010 --> 00:18:41.360\nSo we can do the Light theme or\nthe Dark theme.\n\n389\n00:18:41.360 --> 00:18:43.410\nYou got shortcuts that you can define.\n\n390\n00:18:43.410 --> 00:18:46.000\nYou can override keyboard shortcuts\nto set them with different themes.\n\n391\n00:18:46.000 --> 00:18:49.190\nMaybe you just don't find\nthe default ones very intuitive.\n\n392\n00:18:49.190 --> 00:18:50.870\nThe Profiles I'll talk about in a second.\n\n393\n00:18:50.870 --> 00:18:52.690\nAnd then the Encodings, right?\n\n394\n00:18:52.690 --> 00:18:55.941\nIf you're here in the US,\nit usually defaults to UTF-8,\n\n395\n00:18:55.941 --> 00:18:58.031\nwhich is probably what this one is at.\n\n396\n00:18:58.031 --> 00:19:00.710\nLet's find out, yeah, UTF-8.\n\n397\n00:19:00.710 --> 00:19:03.940\nBut if you are in another country,\nif you're typing in other languages.\n\n398\n00:19:03.940 --> 00:19:07.550\nWell, UTF-8 is designed to be universal,\nthat's what the whole U part is.\n\n399\n00:19:07.550 --> 00:19:10.530\nBut some languages still\naren't perfect with that.\n\n400\n00:19:10.530 --> 00:19:13.600\nSo you will see where there's other\ncharacter sets that you can use.\n\n401\n00:19:13.600 --> 00:19:16.770\nLike Greek or Cyrillic to be able\nto support your alphabet and\n\n402\n00:19:16.770 --> 00:19:17.950\nrender it better on screen.\n\n403\n00:19:17.950 --> 00:19:19.900\nSo those are things we can change.\n\n404\n00:19:19.900 --> 00:19:24.880\nNone of those settings that I just\nshowed you have to do with font size,\n\n405\n00:19:24.880 --> 00:19:28.500\nor color, or\nperformance of the console itself.\n\n406\n00:19:28.500 --> 00:19:32.460\nSo these are all just kinda general\nsettings that apply to the terminal.\n\n407\n00:19:32.460 --> 00:19:36.520\nUnder Profiles,\nthis is where we create Profiles.\n\n408\n00:19:36.520 --> 00:19:39.860\nAnd you'll have one profile by\ndefault it's usually called Default.\n\n409\n00:19:39.860 --> 00:19:43.360\nI've renamed mine Don's Custom, but\nyou can call it whatever you want.\n\n410\n00:19:43.360 --> 00:19:45.540\nYou can have one or more Profiles, and\n\n411\n00:19:45.540 --> 00:19:49.234\nthe Profiles are where all your\nspecial settings really end up.\n\n412\n00:19:49.234 --> 00:19:52.790\nThat's where the real work gets\ndone inside of these things.\n\n413\n00:19:52.790 --> 00:19:55.610\nSo if I have a shared computer\nthat I use alongside Daniel.\n\n414\n00:19:55.610 --> 00:19:58.370\nHe might have his profile and\nI have my own profile, and\n\n415\n00:19:58.370 --> 00:20:00.290\nwe can easily switch back and forth.\n\n416\n00:20:00.290 --> 00:20:01.970\nNow that doesn't normally happen.\n\n417\n00:20:01.970 --> 00:20:05.660\nBecause normally, Daniel has his own user\naccount, I have my own user account, so\n\n418\n00:20:05.660 --> 00:20:07.270\nwe don't bump heads.\n\n419\n00:20:07.270 --> 00:20:09.378\n&gt;&gt; Never the twain shall meet, right?\n\n420\n00:20:09.378 --> 00:20:12.140\n&gt;&gt; But I might need some\ndifferent profile based on\n\n421\n00:20:12.140 --> 00:20:13.950\napplications that I'm running, right?\n\n422\n00:20:13.950 --> 00:20:16.643\nI might have a certain color scheme that\nworks well with one application, and\n\n423\n00:20:16.643 --> 00:20:17.853\ndoesn't work well with another.\n\n424\n00:20:17.853 --> 00:20:19.995\nSo I can come in, and I can create those.\n\n425\n00:20:19.995 --> 00:20:22.940\nBut a lot of times, we'll just have one.\n\n426\n00:20:22.940 --> 00:20:24.870\nYou can use the Default one if you want,\nand\n\n427\n00:20:24.870 --> 00:20:26.810\nyou can edit it to\ncustomize it how you want.\n\n428\n00:20:26.810 --> 00:20:28.469\nNow I went into the Preferences screen.\n\n429\n00:20:28.469 --> 00:20:33.510\nAnd if I choose Edit, it's going to\ntake me to the Profile Preferences.\n\n430\n00:20:33.510 --> 00:20:37.740\nThat's the same as if I've gone\nback out here and gone to Edit and\n\n431\n00:20:37.740 --> 00:20:39.580\nProfile Preferences.\n\n432\n00:20:39.580 --> 00:20:43.790\nThe difference is this immediately\ntakes me to the Don's Custom profile.\n\n433\n00:20:43.790 --> 00:20:46.101\nVersus going to the regular\nPreferences screen,\n\n434\n00:20:46.101 --> 00:20:49.300\nI can pick which profile I want to\nedit if I have more than one profile.\n\n435\n00:20:49.300 --> 00:20:50.590\nSo that's the only difference.\n\n436\n00:20:50.590 --> 00:20:54.060\nIf I just wanna modify the profile I'm\ncurrently in, I can go to Edit, and\n\n437\n00:20:54.060 --> 00:20:55.670\nProfile Preferences and\njump right in there.\n\n438\n00:20:56.870 --> 00:20:58.812\nAnd now we can jump in and\nstart to customize things.\n\n439\n00:20:58.812 --> 00:21:02.430\nNow I wanna show you some of the standard\nthings that I customize, right?\n\n440\n00:21:02.430 --> 00:21:07.250\nThe first thing, just the very first thing\nthat I do is go to a custom font, right?\n\n441\n00:21:07.250 --> 00:21:10.837\nA lot of times the default\nfont is set to Monospace 10.\n\n442\n00:21:10.837 --> 00:21:15.940\nAnd a 10 pitch font on a high resolution\nmonitor is very, very difficult to read.\n\n443\n00:21:15.940 --> 00:21:17.795\nNow, I'm getting older.\n\n444\n00:21:17.795 --> 00:21:19.912\n&gt;&gt; [LAUGH]\n&gt;&gt; Getting a little older each day, and\n\n445\n00:21:19.912 --> 00:21:21.775\nit gets harder and harder for me to see.\n\n446\n00:21:21.775 --> 00:21:24.188\nSo I need a slightly bigger font.\n\n447\n00:21:24.188 --> 00:21:27.463\nYou might be young, you're 18,\nyou're in high school, and\n\n448\n00:21:27.463 --> 00:21:29.170\nyou can read a microscopic font.\n\n449\n00:21:29.170 --> 00:21:31.540\nAnd so you set the highest\nresolution font, good for you.\n\n450\n00:21:31.540 --> 00:21:33.159\n&gt;&gt; Or you're Mike Rodrick.\n&gt;&gt; One of our other hosts,\n\n451\n00:21:33.159 --> 00:21:36.360\nhe always has tiny fonts,\nI don't understand it.\n\n452\n00:21:36.360 --> 00:21:39.940\nBut you can pick whatever font you want,\nand you can make that larger or smaller.\n\n453\n00:21:39.940 --> 00:21:42.190\nYou can actually choose from\na number of different fonts.\n\n454\n00:21:42.190 --> 00:21:45.268\nMaybe, I have seen people that like the\nones that look like cursive or whatever.\n\n455\n00:21:45.268 --> 00:21:48.813\nYou can get all kinds of fancy-pants\nwith this stuff, if you want.\n\n456\n00:21:48.813 --> 00:21:51.902\nAnd you can load custom fonts too,\nif you really wanna go crazy.\n\n457\n00:21:51.902 --> 00:21:53.860\n&gt;&gt; Those look good, I like that.\n\n458\n00:21:53.860 --> 00:21:55.542\n&gt;&gt; Some don't work as well as others.\n\n459\n00:21:55.542 --> 00:21:58.140\n[LAUGH] So you might not want those.\n\n460\n00:21:58.140 --> 00:22:01.488\nWe're not going to pick the Wingdings\nfont or whatever, or Webdings.\n\n461\n00:22:01.488 --> 00:22:05.390\nBut you can customize this\nto be pleasing to you.\n\n462\n00:22:05.390 --> 00:22:07.570\nIf you are going to be working\nin this terminal a lot,\n\n463\n00:22:07.570 --> 00:22:09.980\nyou want it to be\nsomething that makes sense.\n\n464\n00:22:09.980 --> 00:22:12.770\nBut for me it's normally the font\nsize that impacts me the most, and\n\n465\n00:22:12.770 --> 00:22:14.340\nI can see that right down here.\n\n466\n00:22:14.340 --> 00:22:17.390\nI've got mine at a 16 pitch,\nyou might need to go even larger.\n\n467\n00:22:17.390 --> 00:22:19.150\nIf you're on a super\nhigh resolution monitor,\n\n468\n00:22:19.150 --> 00:22:22.280\nyou may want it at a 24 or\nsomething higher like that.\n\n469\n00:22:22.280 --> 00:22:26.120\nBut usually, 10 or 11 is the default and\nfor me that's just too small.\n\n470\n00:22:26.120 --> 00:22:27.630\nSo we can customize that.\n\n471\n00:22:28.710 --> 00:22:29.240\nAfter that,\n\n472\n00:22:29.240 --> 00:22:33.230\nthere's other things we can customize\nlike the Initial terminal size, okay.\n\n473\n00:22:33.230 --> 00:22:34.884\nNow, the default here, let's do this.\n\n474\n00:22:34.884 --> 00:22:36.580\nLet me get out of this one.\n\n475\n00:22:38.390 --> 00:22:42.630\nAnd I'm gonna go and I'm gonna switch, let\nme go into my Preferences and Profiles,\n\n476\n00:22:42.630 --> 00:22:43.237\nall right?\n\n477\n00:22:43.237 --> 00:22:46.430\nAnd I'm gonna create a new Profile here,\nright?\n\n478\n00:22:46.430 --> 00:22:49.470\nAnd this is just at the default,\nso see how it's Monospace 12,\n\n479\n00:22:49.470 --> 00:22:51.240\nslightly off on that.\n\n480\n00:22:51.240 --> 00:22:54.389\nBut the initial terminal size is 80 and\n24, right?\n\n481\n00:22:54.389 --> 00:22:56.829\nSo that's kind of the default\nsettings here for\n\n482\n00:22:56.829 --> 00:22:59.540\nthis Unnamed profile that I've created.\n\n483\n00:22:59.540 --> 00:23:02.341\nSo I'm going to take that profile, and so\n\n484\n00:23:02.341 --> 00:23:05.472\nwe've got this Unnamed\nprofile right there.\n\n485\n00:23:05.472 --> 00:23:08.220\nAnd I'm going to switch\nmy terminal to use that.\n\n486\n00:23:08.220 --> 00:23:11.362\nNow, you probably noticed the option\nwhere I can pick the default\n\n487\n00:23:11.362 --> 00:23:13.030\nprofile that's going to be used.\n\n488\n00:23:13.030 --> 00:23:15.365\nAnd right now it's going\nto default to Don's Custom.\n\n489\n00:23:15.365 --> 00:23:17.083\nSo I'm gonna choose Unnamed,\n\n490\n00:23:17.083 --> 00:23:21.560\nand the reason I'm doing that is I want\nit to just launch when I first launch.\n\n491\n00:23:21.560 --> 00:23:23.360\nWe can always switch when\nwe launch a new terminal,\n\n492\n00:23:23.360 --> 00:23:26.320\nwhen we open one from\nan existing terminal.\n\n493\n00:23:26.320 --> 00:23:27.895\nBut when you open a new one\nit takes that default value.\n\n494\n00:23:27.895 --> 00:23:30.567\nAnd so here's the default terminal.\n\n495\n00:23:30.567 --> 00:23:34.550\nAnd you'll see kind of my point,\nit's really small, it's hard to read.\n\n496\n00:23:34.550 --> 00:23:37.060\nIt's not necessarily the ideal situation.\n\n497\n00:23:37.060 --> 00:23:38.830\nIt's also not very wide, okay?\n\n498\n00:23:38.830 --> 00:23:46.360\nNow, I can come in and hit\nCtrl+Shift+Plus and make it bigger, okay?\n\n499\n00:23:46.360 --> 00:23:47.581\nBut that's a one time thing.\n\n500\n00:23:47.581 --> 00:23:50.641\nIf I come up here and\nsay File &gt; Open Terminal,\n\n501\n00:23:50.641 --> 00:23:55.122\nuntil I actually get choices now\nbetween which Profile I wanna use.\n\n502\n00:23:55.122 --> 00:23:59.884\nI can open another one unnamed and\nsee how the new one comes back small.\n\n503\n00:23:59.884 --> 00:24:02.176\nIt even does that with tabs,\nwhich is super annoying.\n\n504\n00:24:02.176 --> 00:24:04.632\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] If I go to open a tab and\n\n505\n00:24:04.632 --> 00:24:08.840\nI do it unnamed, see how this tab\nis small, and then this tab is big?\n\n506\n00:24:08.840 --> 00:24:10.940\nAs I switch tabs, it's changing.\n\n507\n00:24:10.940 --> 00:24:12.082\nThat's pretty annoying, too.\n\n508\n00:24:12.082 --> 00:24:13.762\n&gt;&gt; I feel like I'm on\npsychedelics watching that.\n\n509\n00:24:13.762 --> 00:24:14.463\nWhat's going on here?\n\n510\n00:24:14.463 --> 00:24:16.890\n[LAUGH]\n&gt;&gt; It's usability, right?\n\n511\n00:24:16.890 --> 00:24:21.220\nWe have to get in here and kind of\ncustomize this to meet our needs, right?\n\n512\n00:24:21.220 --> 00:24:24.150\nThat's just really the whole\npoint of having these profiles\n\n513\n00:24:24.150 --> 00:24:28.240\nis being able to set them to whatever\nit is that our system needs.\n\n514\n00:24:28.240 --> 00:24:32.329\nSo if I go back into my preferences, I can\nchange that default profile back to mine.\n\n515\n00:24:33.550 --> 00:24:35.400\nAnd I can edit it.\n\n516\n00:24:35.400 --> 00:24:38.750\nBut I like to modify the font size,\nand then the width of the terminal.\n\n517\n00:24:38.750 --> 00:24:41.728\nThe terminal itself will\ndefault to 80 by 24,\n\n518\n00:24:41.728 --> 00:24:44.260\ncuz that's what the old\ndummy terminals used.\n\n519\n00:24:44.260 --> 00:24:48.704\nThe mainframe terminals I mentioned,\nthey were 80 characters wide and\n\n520\n00:24:48.704 --> 00:24:50.646\n24 characters or lines tall.\n\n521\n00:24:50.646 --> 00:24:54.130\nThat can be kind of small on\nour new widescreen monitors.\n\n522\n00:24:54.130 --> 00:24:56.510\nMost people buy 16 by\n9 monitors these days.\n\n523\n00:24:56.510 --> 00:24:58.670\nSo it makes sense to make\nthe terminal a little wider.\n\n524\n00:24:58.670 --> 00:25:03.133\ni usually go 100 by 24,\nlike that, is kinda my default.\n\n525\n00:25:03.133 --> 00:25:04.786\nA few other things you can tweak,\nthe terminal bell.\n\n526\n00:25:04.786 --> 00:25:05.798\nThe terminal bell is super annoying.\n\n527\n00:25:05.798 --> 00:25:07.093\n&gt;&gt; [LAUGH]\n&gt;&gt; Any time,\n\n528\n00:25:07.093 --> 00:25:10.985\nmaybe you backspace to delete characters\nand there's no more characters,\n\n529\n00:25:10.985 --> 00:25:14.170\nevery time you hit backspace it goes ding,\nding, ding.\n\n530\n00:25:14.170 --> 00:25:15.110\nIt gets annoying.\n\n531\n00:25:15.110 --> 00:25:16.380\nSome people really like that, right?\n\n532\n00:25:16.380 --> 00:25:18.320\nSo we can leave that bell on or off.\n\n533\n00:25:18.320 --> 00:25:21.700\nMine's on, but I keep my laptop muted so\nit doesn't matter.\n\n534\n00:25:21.700 --> 00:25:23.570\nBut you might wanna disable that.\n\n535\n00:25:23.570 --> 00:25:25.240\nYou can specify a command.\n\n536\n00:25:25.240 --> 00:25:28.520\nWhen you first launch the terminal,\nwhat does it do?\n\n537\n00:25:28.520 --> 00:25:31.824\nWell, the default is it drops you to\ncommand prompt, and it sits there and\n\n538\n00:25:31.824 --> 00:25:33.333\nit waits for you to do something.\n\n539\n00:25:33.333 --> 00:25:37.081\nBut if there's a command that you run\nevery time you launch the terminal,\n\n540\n00:25:37.081 --> 00:25:40.420\nyou can come in here and tell it,\nhey, I want you to run a command.\n\n541\n00:25:40.420 --> 00:25:42.253\nMaybe I don't want it to\ngo to a regular terminal.\n\n542\n00:25:42.253 --> 00:25:44.802\nMaybe I want it to go to\nsomething special, like tmux.\n\n543\n00:25:44.802 --> 00:25:49.150\nTmux is a special kind of terminal\nthat's very much like Terminator.\n\n544\n00:25:49.150 --> 00:25:52.424\nThey'll let you slice up the screen, but\nit does it all with keyboard shortcuts,\n\n545\n00:25:52.424 --> 00:25:53.762\nand it does it all in one session.\n\n546\n00:25:53.762 --> 00:25:55.257\nIt's kind of,\nit's almost borderline magic.\n\n547\n00:25:55.257 --> 00:25:57.030\n&gt;&gt; [LAUGH]\n&gt;&gt; So I can say, hey,\n\n548\n00:25:57.030 --> 00:26:01.520\nwhen I launch a shell, I want you to just\ngo straight into tmux, don't go into Bash,\n\n549\n00:26:01.520 --> 00:26:03.440\nor whatever my default\nshell happens to be.\n\n550\n00:26:03.440 --> 00:26:05.370\nSo you can override those values here.\n\n551\n00:26:05.370 --> 00:26:07.060\nNormally, we don't do that,\nbut you could do it.\n\n552\n00:26:08.090 --> 00:26:08.810\nThe colors?\n\n553\n00:26:08.810 --> 00:26:09.990\nThe colors are kinda fun.\n\n554\n00:26:09.990 --> 00:26:13.750\nIn the olden days, right, we just had\nwhite text on a black background.\n\n555\n00:26:13.750 --> 00:26:15.140\nOr maybe the other way around.\n\n556\n00:26:15.140 --> 00:26:17.930\nBlack text on a white background.\n\n557\n00:26:17.930 --> 00:26:19.535\n&gt;&gt; Or your favorite,\nblack text on black background.\n\n558\n00:26:19.535 --> 00:26:20.330\n[LAUGH]\n&gt;&gt; Yeah, yeah.\n\n559\n00:26:20.330 --> 00:26:20.845\n&gt;&gt; It's always great.\n\n560\n00:26:20.845 --> 00:26:22.891\n[LAUGH]\n&gt;&gt; The stealth shell, right?\n\n561\n00:26:22.891 --> 00:26:25.002\n[LAUGH] But you can change it.\n\n562\n00:26:25.002 --> 00:26:27.870\nYou'll see like green on black,\nto get that true retro feel.\n\n563\n00:26:27.870 --> 00:26:30.110\n[LAUGH] [INAUDIBLE] that,\nyou'll really feel like a dummy terminal.\n\n564\n00:26:30.110 --> 00:26:31.190\nYou can do that.\n\n565\n00:26:31.190 --> 00:26:35.030\nBut all of these color settings\ncan be overridden from within\n\n566\n00:26:35.030 --> 00:26:36.550\nthe terminal itself.\n\n567\n00:26:36.550 --> 00:26:40.641\nAnd you'll see that pretty frequently\nwhen you're working with these terminals\n\n568\n00:26:40.641 --> 00:26:42.248\nbecause things get colorized.\n\n569\n00:26:42.248 --> 00:26:45.730\nWhen I pulled up my directory listing,\ndifferent files had different colors.\n\n570\n00:26:45.730 --> 00:26:48.210\nThat's being determined by\nthe shell that I'm using.\n\n571\n00:26:48.210 --> 00:26:50.717\nSo the terminal has a default color set,\n\n572\n00:26:50.717 --> 00:26:53.677\nand that's really what\nyou're picking here.\n\n573\n00:26:53.677 --> 00:26:55.999\nAnd then the shell can override\nthat at different places.\n\n574\n00:26:57.032 --> 00:26:59.190\nAnd there's some default schemes\nthat you can choose from.\n\n575\n00:26:59.190 --> 00:27:01.730\nYou'll see down here,\nmine's set to custom for some reason.\n\n576\n00:27:01.730 --> 00:27:02.990\nI don't remember customizing it.\n\n577\n00:27:02.990 --> 00:27:07.520\nBut you can choose from some of these\nother default color schemes to pick\n\n578\n00:27:07.520 --> 00:27:10.860\nwhatever it is that you want and\nget things kind of set to your liking.\n\n579\n00:27:12.170 --> 00:27:15.120\nThe scrolling tab is kind\nof an important one for me.\n\n580\n00:27:15.120 --> 00:27:18.070\nAs you run commands, there's often\ntimes when commands will exceed\n\n581\n00:27:18.070 --> 00:27:20.650\nthe top row of your screen,\nit'll scroll off the screen.\n\n582\n00:27:20.650 --> 00:27:22.660\nYou need to be able to scroll back and\nsee it.\n\n583\n00:27:22.660 --> 00:27:26.700\nSome operating systems have that\nscroll back buffer set really small.\n\n584\n00:27:26.700 --> 00:27:29.260\nIf it's only set to 100 lines, and\n\n585\n00:27:29.260 --> 00:27:32.210\nI do a yum update and\nthere's more than 50 updates,\n\n586\n00:27:32.210 --> 00:27:36.140\nit's gonna be more than 100 lines, I'm\ngonna lose messages that were at the top.\n\n587\n00:27:36.140 --> 00:27:37.810\nOkay, that's how it works.\n\n588\n00:27:37.810 --> 00:27:40.270\nSo I need to have scrollback buffer\n\n589\n00:27:40.270 --> 00:27:43.310\nthat's big enough to let me\nscroll back to see messages.\n\n590\n00:27:43.310 --> 00:27:44.778\nNow you don't want to go too big,\n\n591\n00:27:44.778 --> 00:27:47.253\nbecause where does that\nscrollback buffer get stored?\n\n592\n00:27:47.253 --> 00:27:48.420\nIt's stored in RAM.\n\n593\n00:27:48.420 --> 00:27:51.180\nSo the bigger your scrollback buffer,\nthe more RAM you're eating up.\n\n594\n00:27:51.180 --> 00:27:55.540\nNow this day and age, we usually have tons\nof RAM, so it's not that big of a deal.\n\n595\n00:27:55.540 --> 00:28:00.078\nBut you don't wanna set this to be\nmillions of lines stored in RAM.\n\n596\n00:28:00.078 --> 00:28:04.210\nSo 10,000 here is actually a really good\nnumber, that's a huge number of lines to\n\n597\n00:28:04.210 --> 00:28:07.540\nscroll back and see, but\nwithout consuming too much memory.\n\n598\n00:28:07.540 --> 00:28:09.950\nBut you might wanna tweak that and change\nit, make it smaller, make it bigger.\n\n599\n00:28:09.950 --> 00:28:11.600\nYou certainly have that option.\n\n600\n00:28:11.600 --> 00:28:15.130\n&gt;&gt; Well, Don, I know a lot of people\nlike to, and with these newer terminals,\n\n601\n00:28:15.130 --> 00:28:18.210\nthey have the ability to increase\nthe transparency of the terminal.\n\n602\n00:28:18.210 --> 00:28:20.739\nVery cool stuff, kind of an effect thing.\n\n603\n00:28:20.739 --> 00:28:22.990\nBut that's kind of a personal thing,\nright?\n\n604\n00:28:22.990 --> 00:28:24.657\n&gt;&gt; It is, I hate it.\n\n605\n00:28:24.657 --> 00:28:25.357\nWhere is that, is that under colors?\n&gt;&gt; Yeah,\n\n606\n00:28:25.357 --> 00:28:26.588\nI've noticed you're not a huge fan.\n\n607\n00:28:26.588 --> 00:28:27.900\n&gt;&gt; No, I absolutely hate it.\n\n608\n00:28:27.900 --> 00:28:30.160\nHere it is, transparent background.\n\n609\n00:28:30.160 --> 00:28:32.230\nIf you watch a hacker movie-\n&gt;&gt; [LAUGH]\n\n610\n00:28:32.230 --> 00:28:33.589\n&gt;&gt; Any hacker movie.\n\n611\n00:28:33.589 --> 00:28:37.090\n&gt;&gt; Any hacker movie,\nthey love the transparent terminals.\n\n612\n00:28:37.090 --> 00:28:38.080\nI don't know why.\n\n613\n00:28:38.080 --> 00:28:42.370\nIt's like, I've got this readable\nterminal, let's make it less readable.\n\n614\n00:28:42.370 --> 00:28:45.294\nThe transparency, right, so if I turn\nthat on, this transparent background,\n\n615\n00:28:45.294 --> 00:28:47.401\nwhat it does is it takes\nthe background of your terminal and\n\n616\n00:28:47.401 --> 00:28:49.280\nit makes it read kind of see through it.\n\n617\n00:28:49.280 --> 00:28:54.290\nAnd the idea behind that is if I\nhave multiple terminals, right?\n\n618\n00:28:54.290 --> 00:28:55.710\nSo let me close out of this.\n\n619\n00:28:55.710 --> 00:28:57.920\nI'm gonna open up a new terminal, right?\n\n620\n00:28:57.920 --> 00:29:00.220\nAnd I'm in here and I'm doing work, well,\n\n621\n00:29:00.220 --> 00:29:03.279\nsee how you can see my wallpaper\nthrough the terminal now?\n\n622\n00:29:03.279 --> 00:29:04.494\nYou can see the big 7.\n\n623\n00:29:04.494 --> 00:29:05.420\n&gt;&gt; I see the Linux.\n\n624\n00:29:05.420 --> 00:29:07.210\n&gt;&gt; The word Linux up there, yeah.\n\n625\n00:29:07.210 --> 00:29:09.500\nI'm seeing through my terminal.\n\n626\n00:29:09.500 --> 00:29:12.870\nAnd if I open up another terminal window,\n\n627\n00:29:12.870 --> 00:29:16.840\nsee how I can see the old\nterminal through my new terminal?\n\n628\n00:29:16.840 --> 00:29:17.962\nIt gets super confusing, doesn't it?\n\n629\n00:29:17.962 --> 00:29:20.755\n[LAUGH]\n&gt;&gt; Well, I think the idea was if I needed\n\n630\n00:29:20.755 --> 00:29:25.440\nsome information from the other terminal\nI could see it while I'm in here.\n\n631\n00:29:25.440 --> 00:29:28.930\nBut in practice what happens is you\nend up with just overlapping stuff.\n\n632\n00:29:28.930 --> 00:29:31.687\nAnd it becomes really confusing and\ndifficult to read.\n\n633\n00:29:31.687 --> 00:29:34.326\nAnd this is just terminal windows, right?\n\n634\n00:29:34.326 --> 00:29:39.771\nMaybe I've got a webpage open,\nand so I'm browsing to ITProTV,\n\n635\n00:29:39.771 --> 00:29:43.835\nand so I'm browsing the Internet,\nthere we go.\n\n636\n00:29:43.835 --> 00:29:47.432\nAnd so I fire open my terminals,\nand I can kind of see through them.\n\n637\n00:29:47.432 --> 00:29:49.165\nAnd I've got the transparency set at 50%.\n\n638\n00:29:49.165 --> 00:29:51.150\nThat's probably a little\ntoo aggressive here.\n\n639\n00:29:51.150 --> 00:29:52.980\nIf we were to tweak that down a bit,\n\n640\n00:29:52.980 --> 00:29:56.410\nit creates a kind of artistic\neffect that some people like.\n\n641\n00:29:56.410 --> 00:29:57.284\nI absolutely hate it.\n\n642\n00:29:57.284 --> 00:30:00.040\n&gt;&gt; [LAUGH]\n&gt;&gt; But some people, boy,\n\n643\n00:30:00.040 --> 00:30:01.360\nthey just love that stuff.\n\n644\n00:30:01.360 --> 00:30:03.540\nSo if I take that transparent background,\nand\n\n645\n00:30:03.540 --> 00:30:06.770\nlet me ratchet it down to\na more reasonable level, right?\n\n646\n00:30:06.770 --> 00:30:08.920\nNow you can still sort of\nsee the web page behind it,\n\n647\n00:30:08.920 --> 00:30:10.740\nbut it's not totally in the way.\n\n648\n00:30:10.740 --> 00:30:13.360\nYou can get that and\nincrease a nice little artistic effect.\n\n649\n00:30:13.360 --> 00:30:16.158\nThere are some distros that\nhave this set by default.\n\n650\n00:30:16.158 --> 00:30:19.660\nAgain, I usually just come in and\ndisable that transparent background.\n\n651\n00:30:19.660 --> 00:30:21.340\nNow I can read everything nice and neat.\n\n652\n00:30:21.340 --> 00:30:22.670\nThat's the way that I like it.\n\n653\n00:30:22.670 --> 00:30:24.410\n&gt;&gt; Now Don, I know we're running\nsuper short on time, but\n\n654\n00:30:24.410 --> 00:30:28.500\nI was wondering if you could just touch on\nsome of the, or one of the major things\n\n655\n00:30:28.500 --> 00:30:33.380\nthat we do inside of our computing\nexperience, which is copy, cut, or paste.\n\n656\n00:30:33.380 --> 00:30:35.520\n&gt;&gt; Okay.\n&gt;&gt; Can we do this in the terminal and\n\n657\n00:30:35.520 --> 00:30:38.150\ncan we go from like your web\nbrowser to the terminal?\n\n658\n00:30:38.150 --> 00:30:40.370\n&gt;&gt; Yeah, you can, but\nit does get a little bit tricky, right?\n\n659\n00:30:40.370 --> 00:30:41.030\nSo normally,\n\n660\n00:30:41.030 --> 00:30:43.950\nwhen you're in an application,\nlike if I'm in a web browser back here.\n\n661\n00:30:43.950 --> 00:30:46.410\nAnd I wanna copy\nEnjoy IT Training Courses, so\n\n662\n00:30:46.410 --> 00:30:49.630\nI wanna copy this little marketing slogan.\n\n663\n00:30:49.630 --> 00:30:53.450\nI can take that and I can hit Ctrl+C\non my keyboard and that copies.\n\n664\n00:30:53.450 --> 00:30:57.530\nAnd then when I go up here,\nI can hit Ctrl+V and it pastes, right?\n\n665\n00:30:57.530 --> 00:30:59.092\nWell, that works.\n\n666\n00:30:59.092 --> 00:31:02.370\nIt even works in a lot of terminals,\nbut it doesn't work in every terminal.\n\n667\n00:31:02.370 --> 00:31:07.490\nAnd, the main reason is that Ctrl+C\nis usually a breaking command.\n\n668\n00:31:07.490 --> 00:31:09.120\nIt's how you abort a command.\n\n669\n00:31:09.120 --> 00:31:13.093\nSo for example, if I start pinging\nsome server, It's gonna ping, and\n\n670\n00:31:13.093 --> 00:31:16.010\nit's gonna ping forever,\nuntil I hit Ctrl+C.\n\n671\n00:31:16.010 --> 00:31:18.730\nCtrl+C tells it to stop, right?\n\n672\n00:31:18.730 --> 00:31:21.960\nCtrl+C doesn't tell it to copy,\nit tells it to stop.\n\n673\n00:31:21.960 --> 00:31:26.800\nAnd so if I highlight some text, like with\nmy mouse here, I'll highlight some text,\n\n674\n00:31:26.800 --> 00:31:28.829\nand hit Ctrl+C, it didn't copy.\n\n675\n00:31:28.829 --> 00:31:33.670\nAnd if I do Ctrl+V,\nit doesn't do much of anything, right?\n\n676\n00:31:33.670 --> 00:31:35.720\nSo those traditional copy and\n\n677\n00:31:35.720 --> 00:31:39.430\npaste don't quite work the way\nthat you might expect them to.\n\n678\n00:31:39.430 --> 00:31:42.390\nNow you can always use your mouse,\nright, which is a little bit anti-Unix.\n\n679\n00:31:42.390 --> 00:31:44.031\nBut we're not in Unix,\nright, we're in Linux.\n\n680\n00:31:44.031 --> 00:31:47.705\nI can highlight with the mouse and\nI can right-click and I can choose copy,\n\n681\n00:31:47.705 --> 00:31:50.225\nand then I can right-click and\nI can choose paste.\n\n682\n00:31:50.225 --> 00:31:52.484\nAnd there we go, it worked, right?\n\n683\n00:31:52.484 --> 00:31:57.411\nBut a lot of terminals will rematch\nshortcuts to something that actually does\n\n684\n00:31:57.411 --> 00:31:59.165\nwork inside of a terminal.\n\n685\n00:31:59.165 --> 00:32:02.678\nWhichever terminal you pick, you'll need\nto look at what its defaults are, right?\n\n686\n00:32:02.678 --> 00:32:06.870\nBack up here and edit and preferences.\n\n687\n00:32:06.870 --> 00:32:11.698\nWe had the shortcuts and right here is\nwhere I could define a number of shortcuts\n\n688\n00:32:11.698 --> 00:32:13.391\nincluding copy and paste.\n\n689\n00:32:13.391 --> 00:32:16.639\nAnd if you take a look at\nthe ones that are in here,\n\n690\n00:32:16.639 --> 00:32:19.824\nit's got Shift+Ctrl+C, Shift+Ctrl+V.\n\n691\n00:32:19.824 --> 00:32:22.973\nSo instead of just hitting\nCtrl+C I hit shift as well and\n\n692\n00:32:22.973 --> 00:32:26.464\nthat's how it avoids sending\nthe breaking command, right?\n\n693\n00:32:26.464 --> 00:32:30.456\nSo that'll make sure that it does that and\nensures that I can copy it.\n\n694\n00:32:30.456 --> 00:32:33.812\nSo now, I could come in and\nI could highlight something.\n\n695\n00:32:33.812 --> 00:32:37.556\nAnd I could hit, I don't usually do\nShift+Ctrl, I usually do Ctrl+Shift.\n\n696\n00:32:37.556 --> 00:32:41.320\nBut Ctrl+Shift+C to copy and\nthen Ctrl+Shift+V and\n\n697\n00:32:41.320 --> 00:32:44.851\nthere I'm pasting what I highlighted,\nall right?\n\n698\n00:32:44.851 --> 00:32:47.047\nNow in the GNOME Terminal,\nthat's the way you do it.\n\n699\n00:32:47.047 --> 00:32:48.869\nThat's the shortcut that you remember.\n\n700\n00:32:48.869 --> 00:32:52.361\nIn some terminals though they do\nwhat's called copy on highlight,\n\n701\n00:32:52.361 --> 00:32:55.059\nwhere if you just highlight\nsomething the moment you\n\n702\n00:32:55.059 --> 00:32:57.835\nlet go off your mouse it\ncopies it into the clipboard.\n\n703\n00:32:57.835 --> 00:33:02.456\nAnd the moment you right click it\nimmediately paste that data, right?\n\n704\n00:33:02.456 --> 00:33:05.298\nThe GNOME Terminal doesn't do that but\nthere are terminals that do.\n\n705\n00:33:05.298 --> 00:33:08.558\nAnd they usually just call that\ncopy on click or copy on highlight.\n\n706\n00:33:08.558 --> 00:33:10.676\nSo as you dig through\nthe options on your terminal,\n\n707\n00:33:10.676 --> 00:33:12.560\nyou may find something\nthat indicates that.\n\n708\n00:33:12.560 --> 00:33:16.817\nAnd I don't think I have\nthat option here at all.\n\n709\n00:33:16.817 --> 00:33:18.788\nIf we take a look at even Shortcuts,\n\n710\n00:33:18.788 --> 00:33:21.959\nO'm pretty sure GNOME Terminal\ndoesn't support that.\n\n711\n00:33:21.959 --> 00:33:25.599\nBut like I said, yours might and if you\ndig through your options you may find it\n\n712\n00:33:25.599 --> 00:33:28.406\nand see where you can turn that on or\ncustomize that option.\n\n713\n00:33:28.406 --> 00:33:30.323\nSo that's another way we might do that.\n\n714\n00:33:30.323 --> 00:33:32.963\nBut again, it does vary a bit\nfrom terminal to terminal.\n\n715\n00:33:32.963 --> 00:33:33.468\n&gt;&gt; All right.\n\n716\n00:33:33.468 --> 00:33:35.133\nWell Don,\nwe've run out of time with this episode.\n\n717\n00:33:35.133 --> 00:33:39.960\nI know you have more to go,\njumping into the shells area or the arena,\n\n718\n00:33:39.960 --> 00:33:40.967\nshould I say.\n\n719\n00:33:40.967 --> 00:33:43.257\n&gt;&gt; Yeah.\n&gt;&gt; But looks like we'll have to wait for\n\n720\n00:33:43.257 --> 00:33:44.135\npart two on that.\n\n721\n00:33:44.135 --> 00:33:45.302\nWe do thank you for joining today.\n\n722\n00:33:45.302 --> 00:33:48.717\nIs there anything you'd like to\npart our guests with before we go?\n\n723\n00:33:48.717 --> 00:33:50.768\n&gt;&gt; I certainly didn't get to\nevery terminal in the world,\n\n724\n00:33:50.768 --> 00:33:53.136\nthere's hundreds of them, and\nyou might have a favourite one.\n\n725\n00:33:53.136 --> 00:33:56.218\nI know I left out Konsole,\nthe one from KDE.\n\n726\n00:33:56.218 --> 00:34:00.595\nKDE's console has a neat little bookmark\nfeature, where you can bookmark folders as\n\n727\n00:34:00.595 --> 00:34:03.714\nyou navigate your file system,\nyou can bookmark location.\n\n728\n00:34:03.714 --> 00:34:05.864\nAnd so when you launch that console,\nyou can say go to this bookmark and\n\n729\n00:34:05.864 --> 00:34:07.437\nit jumps right to that\nlocation on the file system.\n\n730\n00:34:07.437 --> 00:34:09.265\n&gt;&gt; Very nice.\n&gt;&gt; It's a neat feature.\n\n731\n00:34:09.265 --> 00:34:14.125\nAll of those terminals, they have bright\nshiny spots that make them great to use.\n\n732\n00:34:14.125 --> 00:34:16.349\nThey usually have a couple of\ncons that make them not so great.\n\n733\n00:34:16.349 --> 00:34:19.574\nYou just gotta find the one that's\nperfect for you and it's trial and error.\n\n734\n00:34:19.574 --> 00:34:21.970\nUsually they're very small so\nit's easy to install a bunch of them.\n\n735\n00:34:21.970 --> 00:34:24.989\nI probably have five different\nterminals installed here.\n\n736\n00:34:24.989 --> 00:34:28.070\nJust take a look at what you've got and\nfind out what one you like and\n\n737\n00:34:28.070 --> 00:34:31.333\njust know that it's pretty easy to\nmove to another one if you chose to.\n\n738\n00:34:31.333 --> 00:34:31.946\n&gt;&gt; That's right.\n\n739\n00:34:31.946 --> 00:34:33.054\nIt never hurts to test drive something,\nright?\n\n740\n00:34:33.054 --> 00:34:35.076\nYou're not locked into it.\n\n741\n00:34:35.076 --> 00:34:37.752\nYou don't like it, you delete it,\nand you move on to the next thing.\n\n742\n00:34:37.752 --> 00:34:38.972\nDon, thanks for joining us today.\n\n743\n00:34:38.972 --> 00:34:42.865\nWe appreciate your expertise on this and\nimparting that into us.\n\n744\n00:34:42.865 --> 00:34:45.048\nBut as I've said,\nwe're out of time for this episode.\n\n745\n00:34:45.048 --> 00:34:47.877\nDefinitely come back for\npart two as we look into shells.\n\n746\n00:34:47.877 --> 00:34:51.363\nBut as for this episode and we are gonna\ngo ahead and sign off for ITProTV.\n\n747\n00:34:51.363 --> 00:34:52.928\nI've been your host Daniel Lawry.\n\n748\n00:34:52.928 --> 00:34:53.865\n&gt;&gt; And I'm Don Pezet.\n\n749\n00:34:53.865 --> 00:34:56.548\n&gt;&gt; And we'll see you next time.\n\n750\n00:34:56.548 --> 00:35:02.089\n[MUSIC]\n\n751\n00:35:02.089 --> 00:35:05.459\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "234666504"
        },
        {
          "description": "In this episode, Daniel and Don take a look how to interact with the Linux kernel using a shell. They demonstrate the bash shell and highlight zsh, dash, and sh and walk through their configuration and use.",
          "length": "1802",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-1-1-2-terminals_and_shells_pt_2-092017-PGM.00_30_51_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-1-1-2-terminals_and_shells_pt_2-092017-PGM.00_30_51_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-1-1-2-terminals_and_shells_pt_2-092017-PGM.00_30_51_01.Still001-sm.jpg",
          "title": "Terminals and Shells Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.190 --> 00:00:01.251\nWelcome to ITProTV.\n\n2\n00:00:01.251 --> 00:00:02.092\nI'm your host, Don Pezet.\n\n3\n00:00:02.092 --> 00:00:02.828\n&gt;&gt; We're creating vectors.\n\n4\n00:00:02.828 --> 00:00:04.986\n&gt;&gt; Coming at you live from San Francisco,\nCalifornia.\n\n5\n00:00:04.986 --> 00:00:11.887\n&gt;&gt; [CROSSTALK]\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:11.887 --> 00:00:13.736\n&gt;&gt; All right, greetings, everyone,\n\n7\n00:00:13.736 --> 00:00:16.488\nand welcome back to another\ngreat episode of ITProTV.\n\n8\n00:00:16.488 --> 00:00:19.067\nI'm your host, Daniel Lowrie,\nand in today's episode,\n\n9\n00:00:19.067 --> 00:00:21.700\nwe're back with more on our\nLinux Command Line series.\n\n10\n00:00:21.700 --> 00:00:23.330\nAnd of course,\njoining us back in the studio,\n\n11\n00:00:23.330 --> 00:00:26.390\nlending his expertise in that topic,\nour good friend, Mr. Don Pezet.\n\n12\n00:00:26.390 --> 00:00:28.180\nDon, we're so\nglad to have you yet again today.\n\n13\n00:00:28.180 --> 00:00:28.910\nHow's it going?\n\n14\n00:00:28.910 --> 00:00:30.040\n&gt;&gt; It is going great, Daniel,\n\n15\n00:00:30.040 --> 00:00:32.830\nready to dive into the world\nof terminals and shells.\n\n16\n00:00:32.830 --> 00:00:33.825\nAnd this is part two.\n\n17\n00:00:33.825 --> 00:00:34.896\nIf you watched part one,\n\n18\n00:00:34.896 --> 00:00:37.660\nwe really spent our time just\ntalking about terminals, right?\n\n19\n00:00:37.660 --> 00:00:40.370\nWe didn't really delve\ninto a shell at all.\n\n20\n00:00:40.370 --> 00:00:41.310\nWe saw a shell a few times.\n\n21\n00:00:41.310 --> 00:00:42.510\nWe didn't actually work with it.\n\n22\n00:00:42.510 --> 00:00:43.520\nSo in this episode,\n\n23\n00:00:43.520 --> 00:00:47.400\nwhat I wanna do is actually hit the more\nimportant part, what the heck a shell is.\n\n24\n00:00:47.400 --> 00:00:49.730\nAnd so we're gonna see some of\nthe different shells that are available.\n\n25\n00:00:49.730 --> 00:00:53.458\nUnderstand what that difference between\na terminal and a shell happens to be.\n\n26\n00:00:53.458 --> 00:00:56.523\nAnd get in there and get that chance to\nkinda work with it and start to see some\n\n27\n00:00:56.523 --> 00:00:59.783\nof our first commands, because for a\ncommand line show, we were pretty light on\n\n28\n00:00:59.783 --> 00:01:02.231\nthe commands in the last episode, so-\n&gt;&gt; [LAUGH]\n\n29\n00:01:02.231 --> 00:01:03.488\n&gt;&gt; It's probably time to start running\n\n30\n00:01:03.488 --> 00:01:04.059\nsome commands.\n\n31\n00:01:04.059 --> 00:01:06.810\nSo we're gonna get you to see all\nthat right here in this episode.\n\n32\n00:01:06.810 --> 00:01:08.590\n&gt;&gt; All right, Don this sounds interesting.\n\n33\n00:01:08.590 --> 00:01:11.230\nLet's talk about that,\nwhat in the world is a shell,\n\n34\n00:01:11.230 --> 00:01:14.620\nbecause I know\nthe Linux-uninitiated is going,\n\n35\n00:01:14.620 --> 00:01:19.170\neverybody keeps talking about shells, but\nno one's telling me what they are exactly.\n\n36\n00:01:19.170 --> 00:01:21.883\n&gt;&gt; All right,\nwhen we work with the command line, right,\n\n37\n00:01:21.883 --> 00:01:23.923\na lot of people will call it a CLI, right?\n\n38\n00:01:23.923 --> 00:01:26.860\nAnd CLI stands for\ncommand line interpreter.\n\n39\n00:01:26.860 --> 00:01:28.043\nYou got a line on the screen.\n\n40\n00:01:28.043 --> 00:01:30.020\nYou type a command.\n\n41\n00:01:30.020 --> 00:01:34.183\nAnd the operating system has to interpret\nwhat you typed into something the computer\n\n42\n00:01:34.183 --> 00:01:38.239\nunderstands, cuz what we type is usually\nwhat's considered human-readable.\n\n43\n00:01:38.239 --> 00:01:41.430\nI know the commands sometimes are wacky\nand weird and don't make any sense.\n\n44\n00:01:41.430 --> 00:01:44.680\nBut they're somewhat human-readable, but\nthey're not what the computer wants.\n\n45\n00:01:44.680 --> 00:01:46.490\nThe computer wants machine code.\n\n46\n00:01:46.490 --> 00:01:50.640\nThat's what it wants, is the really\nlow-level programming language that\n\n47\n00:01:50.640 --> 00:01:53.200\nnone of us can really work with.\n\n48\n00:01:53.200 --> 00:01:55.138\nNone of us here on camera, at least.\n\n49\n00:01:55.138 --> 00:01:57.230\n&gt;&gt; [LAUGH]\n&gt;&gt; Certainly can.\n\n50\n00:01:57.230 --> 00:01:59.400\nIt is very difficult to work\nwith is the point, though.\n\n51\n00:01:59.400 --> 00:02:01.360\nSo we have these easier terms,\n\n52\n00:02:01.360 --> 00:02:04.460\nthese easier executables that we run and\nthe computer then works with.\n\n53\n00:02:04.460 --> 00:02:08.280\nSo a command line interpreter\nis kind of like a translator,\n\n54\n00:02:08.280 --> 00:02:10.890\ntranslating between the human and\nthe computer.\n\n55\n00:02:10.890 --> 00:02:13.519\nAnd that's really what your shell is.\n\n56\n00:02:13.519 --> 00:02:16.587\nThe shell is the interpreter that\nyou're choosing to work with,\n\n57\n00:02:16.587 --> 00:02:18.439\nthat you're handing the commands to.\n\n58\n00:02:18.439 --> 00:02:22.377\nAnd then it's figuring out what\nto do with those commands.\n\n59\n00:02:22.377 --> 00:02:25.905\nThe terminal, what we saw yesterday, or\nin the previous episode, depending on when\n\n60\n00:02:25.905 --> 00:02:28.970\nyou watched it, maybe not yesterday-\n&gt;&gt; [LAUGH]\n\n61\n00:02:28.970 --> 00:02:30.160\n&gt;&gt; The terminal\n\n62\n00:02:30.160 --> 00:02:32.790\nis simply a way to see the shell.\n\n63\n00:02:33.860 --> 00:02:36.820\nHow can I actually view\nthe shell on my screen?\n\n64\n00:02:36.820 --> 00:02:37.790\nI use a terminal.\n\n65\n00:02:37.790 --> 00:02:41.366\nAnd it might be a physical hardware\nterminal, like the old dummy terminals.\n\n66\n00:02:41.366 --> 00:02:43.137\nOr it might be a graphical terminal,\n\n67\n00:02:43.137 --> 00:02:45.601\nlike GNOME Term that I'm\nusing here on the screen.\n\n68\n00:02:45.601 --> 00:02:50.584\nOr XTERM or Konsole, any of the various\nother products that are out there,\n\n69\n00:02:50.584 --> 00:02:53.049\nthose are just a way to see the shell.\n\n70\n00:02:53.049 --> 00:02:54.662\nAnd the shell is what's\nreally doing the work.\n\n71\n00:02:54.662 --> 00:02:56.760\nSo your terminal is just bells and\nwhistles,\n\n72\n00:02:56.760 --> 00:02:58.702\njust making things look pretty, right?\n\n73\n00:02:58.702 --> 00:03:01.123\nAnd that's really what the last\nepisode centered around.\n\n74\n00:03:01.123 --> 00:03:02.692\nThat's why we didn't\nhave to run any commands,\n\n75\n00:03:02.692 --> 00:03:04.043\ncuz it's all just making it look pretty.\n\n76\n00:03:04.043 --> 00:03:08.453\nBut the shell itself\nis all about commands.\n\n77\n00:03:08.453 --> 00:03:12.892\nAnd so when we fire up a terminal,\nwhat we see is our actual shell.\n\n78\n00:03:12.892 --> 00:03:15.610\nSo if we look in my screen,\nI've got my GNOME Terminal fired up.\n\n79\n00:03:15.610 --> 00:03:17.637\nAnd here's a command prompt.\n\n80\n00:03:17.637 --> 00:03:21.056\nHere's an entry where I can\nstart to type commands, and\n\n81\n00:03:21.056 --> 00:03:24.053\nI can tell the computer to do something,\nright?\n\n82\n00:03:24.053 --> 00:03:26.519\nI can tell it, hey,\nI wanna know what my hostname is.\n\n83\n00:03:26.519 --> 00:03:32.410\nAnd so I type in hostnamectl,\nand I press Enter, right?\n\n84\n00:03:32.410 --> 00:03:36.111\nWhen I press Enter,\nthat tells the shell to do something.\n\n85\n00:03:36.111 --> 00:03:37.780\nAnd the shell says, okay,\nwell, what did you type?\n\n86\n00:03:37.780 --> 00:03:38.780\nYou typed hostnamectl.\n\n87\n00:03:38.780 --> 00:03:39.606\nWhat does that mean?\n\n88\n00:03:39.606 --> 00:03:42.123\nAll right, I've got a binary file\nover here that has the same name,\n\n89\n00:03:42.123 --> 00:03:43.960\nso that's must be what you're calling.\n\n90\n00:03:43.960 --> 00:03:47.240\nSo let me go and find that binary and\nexecute it and run it and\n\n91\n00:03:47.240 --> 00:03:48.710\ndo whatever it says.\n\n92\n00:03:48.710 --> 00:03:52.910\nAnd then that binary says, we're\ngonna output on the screen this data.\n\n93\n00:03:52.910 --> 00:03:55.660\nAnd so then the interpreter says,\nlet me take that data and\n\n94\n00:03:55.660 --> 00:03:58.610\nturn it into a human-readable format,\nnot ones and zeroes.\n\n95\n00:03:58.610 --> 00:04:00.840\nAnd let me throw it on the screen,\nand here it is.\n\n96\n00:04:00.840 --> 00:04:02.703\nI can see my computer\nis called Dons-Laptop,\n\n97\n00:04:02.703 --> 00:04:04.535\ncuz I'm very creative with computer names.\n\n98\n00:04:04.535 --> 00:04:07.230\n&gt;&gt; Yeah.\n&gt;&gt; So I can see that information.\n\n99\n00:04:07.230 --> 00:04:10.270\nThat's me interacting with the shell.\n\n100\n00:04:10.270 --> 00:04:13.097\nTechnically, it's me interacting\nwith the terminal and the shell.\n\n101\n00:04:13.097 --> 00:04:14.262\nThe two go together.\n\n102\n00:04:14.262 --> 00:04:18.170\nIt's kinda like chocolate and\npeanut butter in a peanut butter cup.\n\n103\n00:04:18.170 --> 00:04:19.530\n&gt;&gt; [LAUGH]\n&gt;&gt; The two work together to\n\n104\n00:04:19.530 --> 00:04:22.770\ngive me that way to\ninterface with the computer.\n\n105\n00:04:22.770 --> 00:04:24.100\nAnd so I'm accessing it.\n\n106\n00:04:24.100 --> 00:04:27.520\nI'm typing commands, and\nthat's with the shell is doing.\n\n107\n00:04:27.520 --> 00:04:30.630\nSo this is the Linux shell, in this case.\n\n108\n00:04:30.630 --> 00:04:32.730\n&gt;&gt; So Don, the shell is our interpreter.\n\n109\n00:04:32.730 --> 00:04:35.580\nIt's the middleman between us and\nthe computer hardware.\n\n110\n00:04:35.580 --> 00:04:37.990\nIs there any other specific thing\nwe need to know about the shell?\n\n111\n00:04:37.990 --> 00:04:40.710\nI opened this black terminal\nprompt you have opened.\n\n112\n00:04:40.710 --> 00:04:44.380\nAnd is there something specific\nabout that that I'll need to know?\n\n113\n00:04:44.380 --> 00:04:47.820\n&gt;&gt; Well, on most systems,\nthe shell is the same.\n\n114\n00:04:47.820 --> 00:04:50.110\nSo you drop, and you'll get a prompt,\nsomething like this.\n\n115\n00:04:50.110 --> 00:04:51.650\nNow, the prompt can be customized, right?\n\n116\n00:04:51.650 --> 00:04:52.560\nYou can tweak and change it.\n\n117\n00:04:52.560 --> 00:04:54.160\nPeople go crazy with it.\n\n118\n00:04:54.160 --> 00:04:58.090\nMine is just [COUGH] a default prompt\nwhere I've got the username and\n\n119\n00:04:58.090 --> 00:05:02.750\ncomputer name, followed by\nthe file system path that I'm in,\n\n120\n00:05:02.750 --> 00:05:05.830\nfollowed by a little symbol here that\nlet's me know my privilege level.\n\n121\n00:05:05.830 --> 00:05:11.210\nSo a $ in this case means I'm\njust a regular old user, versus,\n\n122\n00:05:11.210 --> 00:05:14.840\nif it was a pound symbol, that would mean\nthat I was an administrative user or\n\n123\n00:05:14.840 --> 00:05:17.940\nthe root user, somebody who's got\na lot more control over the system.\n\n124\n00:05:17.940 --> 00:05:20.510\nSo all of that's being\ncommunicated to me via the prompt.\n\n125\n00:05:20.510 --> 00:05:21.670\nBut none of that has to be there.\n\n126\n00:05:21.670 --> 00:05:24.060\nYou can actually make the prompt\ncompletely blank if you want.\n\n127\n00:05:24.060 --> 00:05:25.649\nIt makes it annoying, but you can do that.\n\n128\n00:05:25.649 --> 00:05:27.311\n&gt;&gt; [LAUGH]\n&gt;&gt; So now you start typing commands, and\n\n129\n00:05:27.311 --> 00:05:29.670\nit works, so\nthe prompt is purely optional.\n\n130\n00:05:29.670 --> 00:05:35.190\nBut the shell itself, in this case,\nI'm using a shell that's called Bash.\n\n131\n00:05:35.190 --> 00:05:37.942\nAnd Bash stands for\nthe Bourne Again Shell.\n\n132\n00:05:37.942 --> 00:05:39.521\nI say it's just a shell.\n\n133\n00:05:39.521 --> 00:05:45.330\nAnd it is one of a multitude of shells\nthat are available, that are out there.\n\n134\n00:05:45.330 --> 00:05:48.330\nNow, in the first episode,\nwe talked about terminals.\n\n135\n00:05:48.330 --> 00:05:50.690\nAnd I said, hey,\njust pick the terminal that works for you.\n\n136\n00:05:50.690 --> 00:05:52.650\nPick the one that you like the best,\nright?\n\n137\n00:05:52.650 --> 00:05:54.130\nYou got a lot of flexibility there.\n\n138\n00:05:54.130 --> 00:05:57.010\nAnd if I fire up three\ndifferent terminals,\n\n139\n00:05:57.010 --> 00:06:00.590\nthey might all be giving me\naccess to the Bash shell.\n\n140\n00:06:00.590 --> 00:06:03.850\nAnd the Bash shell works\nthe same under each one.\n\n141\n00:06:03.850 --> 00:06:08.282\nSo it doesn't matter\nif I use Terminator or\n\n142\n00:06:08.282 --> 00:06:12.351\ntmux or Konsole or XTERM or GNOME Term.\n\n143\n00:06:12.351 --> 00:06:16.590\nIt doesn't matter, cuz they're all\njust giving me the Bash shell.\n\n144\n00:06:16.590 --> 00:06:18.975\nBut Bash is not the only one, right?\n\n145\n00:06:18.975 --> 00:06:23.068\nThere's actually many other shells that\nare available, that your system may or\n\n146\n00:06:23.068 --> 00:06:23.801\nmay not have.\n\n147\n00:06:23.801 --> 00:06:28.882\nNow, if you're running Red Hat Linux or\nFedora, CentOS, a lot\n\n148\n00:06:28.882 --> 00:06:35.295\nof the other distributions like Slackware,\nthey all default to the Bash shell.\n\n149\n00:06:35.295 --> 00:06:38.570\nSo that's kind of a common\nexperience that you're gonna have.\n\n150\n00:06:38.570 --> 00:06:41.780\nBut there are some distros,\nlike Debian and\n\n151\n00:06:41.780 --> 00:06:46.570\nUbuntu, that default to a different shell,\na shell called DASH, right?\n\n152\n00:06:46.570 --> 00:06:50.428\nNow, DASH, which, I'm trying to\nremember what that stands for.\n\n153\n00:06:50.428 --> 00:06:51.726\nI think I've got it written down.\n&gt;&gt; It's Debian something.\n\n154\n00:06:51.726 --> 00:06:53.497\n&gt;&gt; Yeah, the Debian something shell.\n\n155\n00:06:53.497 --> 00:06:56.899\nIt was created for them,\nand they tweaked it.\n\n156\n00:06:56.899 --> 00:06:59.060\nThey changed its behavior a little bit.\n\n157\n00:06:59.060 --> 00:07:02.950\nAnd so you might drop into a DASH shell,\nand it looks very, very similar.\n\n158\n00:07:02.950 --> 00:07:07.140\nAnd 99% of the commands are the same, and\nthe way you work with it is the same.\n\n159\n00:07:07.140 --> 00:07:10.750\nBut then there's that 1%,\nthe extra features that they've added,\n\n160\n00:07:10.750 --> 00:07:13.920\nthat might make it the most\namazing shell ever.\n\n161\n00:07:13.920 --> 00:07:17.210\nBut it's different than\nwhat we're used to.\n\n162\n00:07:17.210 --> 00:07:20.247\nSo one of the first things that\nI wanna show you guys here,\n\n163\n00:07:20.247 --> 00:07:25.180\nbefore we kind of nitpick on shells, is to\nfigure out which one you're running, okay?\n\n164\n00:07:25.180 --> 00:07:29.465\nBecause when you log in,\nyour user account has a default shell.\n\n165\n00:07:29.465 --> 00:07:32.481\nAnd if you have five different users, you\ncould actually have five default shells.\n\n166\n00:07:32.481 --> 00:07:34.143\nSo different users could\nhave a different experience.\n\n167\n00:07:34.143 --> 00:07:36.550\nBut I wanna show you guys\nhow to figure that out and\n\n168\n00:07:36.550 --> 00:07:38.973\ndetermine the shell that you're using,\nokay?\n\n169\n00:07:38.973 --> 00:07:42.090\nAnd there's a couple of commands that\nwe can run, that make this really easy.\n\n170\n00:07:42.090 --> 00:07:44.988\nThe first command is,\nwe need to know what your username is.\n\n171\n00:07:44.988 --> 00:07:47.480\nNow, hopefully,\nyou already know what your username is.\n\n172\n00:07:47.480 --> 00:07:50.145\nBut if the terminal is already logged in,\nlike on dummy terminals,\n\n173\n00:07:50.145 --> 00:07:52.505\nthey're normally already logged in,\nyou might not know.\n\n174\n00:07:52.505 --> 00:07:57.093\nAnd so we can run the command whoami,\njust to find out what our username is.\n\n175\n00:07:57.093 --> 00:07:59.837\nSo I'm logged in as dpezet.\n\n176\n00:07:59.837 --> 00:08:05.100\nAnd now that I know my user,\nI can pull what my default shell is.\n\n177\n00:08:05.100 --> 00:08:09.810\nNow the default shell is stored alongside\nyour user account in a file on the file\n\n178\n00:08:09.810 --> 00:08:14.890\nsystem, and we can view that by using\nthe grep command, grep will search for\n\n179\n00:08:14.890 --> 00:08:19.900\na string, so I'm going to search for\ndpezet, so grep dpezet.\n\n180\n00:08:19.900 --> 00:08:22.125\nSearch for this string dpezet.\n\n181\n00:08:22.125 --> 00:08:28.330\nAnd then I'm going to tell it to\nlook in the /ETC/passWD file,okay.\n\n182\n00:08:28.330 --> 00:08:31.100\nThere's another command I could\nuse here which is GETENT.\n\n183\n00:08:31.100 --> 00:08:34.530\nGETENT, is another one that can basically\ndo the same thing that I'm doing here.\n\n184\n00:08:34.530 --> 00:08:38.260\nSo, what we'll find with Linux\nis that often times there's\n\n185\n00:08:38.260 --> 00:08:40.870\nten different ways to do the same task.\n\n186\n00:08:40.870 --> 00:08:43.950\nSo I'm just using the grep utility,\ncuz it's incredibly flexible and\n\n187\n00:08:43.950 --> 00:08:49.120\nI use it a lot but I'm searching that file\nto find information about my user account.\n\n188\n00:08:49.120 --> 00:08:52.830\nAnd when I do that,\nit shows my user account and\n\n189\n00:08:52.830 --> 00:08:57.710\nright here at the end,\nit tells me what my default shell is.\n\n190\n00:08:57.710 --> 00:09:02.910\nWhen I log into the system\nit's launching /bin/bash,\n\n191\n00:09:02.910 --> 00:09:06.600\nI'm launching the Bash shell so\nthat's what I'm in.\n\n192\n00:09:06.600 --> 00:09:10.920\nBut you might find where you've changed\nyours to dash, or maybe not you,\n\n193\n00:09:10.920 --> 00:09:13.570\nmaybe the system administrator\nhas changed what the default is.\n\n194\n00:09:13.570 --> 00:09:16.530\nOr that distro that you installed\nuses a different default.\n\n195\n00:09:16.530 --> 00:09:19.510\nAnd so when you launch a terminal,\nyou might think getting a different shell.\n\n196\n00:09:19.510 --> 00:09:21.320\nIt's important to understand that.\n\n197\n00:09:21.320 --> 00:09:24.210\nIf you're trying to do some of the same\ncommands that we do in this series and\n\n198\n00:09:24.210 --> 00:09:27.120\nyou're finding they're not working, it\nmight be that you're in a different shell.\n\n199\n00:09:27.120 --> 00:09:30.470\nSo this is an important thing,\nnot all shells are created equally and\n\n200\n00:09:30.470 --> 00:09:33.630\nthey are by and\nlarge compatible with each other.\n\n201\n00:09:33.630 --> 00:09:35.760\nBut some of them have some neat\nlittle features that aren't\n\n202\n00:09:35.760 --> 00:09:38.190\npresent in the others, and\nthat can cause some confusion.\n\n203\n00:09:38.190 --> 00:09:38.770\n&gt;&gt; Alright, Don.\nWell,\n\n204\n00:09:38.770 --> 00:09:41.010\nif there's all these multitudes\nof different shells,\n\n205\n00:09:41.010 --> 00:09:44.100\nhow do we know which shells we have or\nare supported by our system,\n\n206\n00:09:44.100 --> 00:09:45.930\nother than the one that's defaulted?\n\n207\n00:09:45.930 --> 00:09:49.510\n&gt;&gt; Alright, so there's a couple\nof big ones that are out there.\n\n208\n00:09:49.510 --> 00:09:53.030\nAnd, if you wanted to be\nthe true super Unix guy,\n\n209\n00:09:53.030 --> 00:09:57.520\nway back in the beginning,\nUnix had one shell, and it was called sh.\n\n210\n00:09:57.520 --> 00:09:58.460\nJust shell.\n\n211\n00:09:58.460 --> 00:10:00.770\nThat was it.\nThat was the shell.\n\n212\n00:10:00.770 --> 00:10:04.780\nAnd believe it or not,\nmost current modern Linux distros\n\n213\n00:10:04.780 --> 00:10:08.320\nstill have that original sh shell\navailable, in case you ever wanna go for\n\n214\n00:10:08.320 --> 00:10:12.290\ntrue compatibility,\nyou can launch that shell and use it.\n\n215\n00:10:12.290 --> 00:10:16.140\nBut there are other shells like dash,\nor zsh, csh, tcsh.\n\n216\n00:10:16.140 --> 00:10:22.070\nEach of these are different shells\nthat behave a little differently.\n\n217\n00:10:22.070 --> 00:10:25.365\nSo for example csh,\ncsh is the c shell, get it c shell.\n\n218\n00:10:25.365 --> 00:10:28.380\n&gt;&gt; [LAUGH] I see what you did there.\n\n219\n00:10:28.380 --> 00:10:31.700\n&gt;&gt; But it's c like the programming\nlanguage, not c like the sea.\n\n220\n00:10:31.700 --> 00:10:38.619\n[CROSSTALK] But\nit's C like the programming language.\n\n221\n00:10:38.619 --> 00:10:42.978\nAnd with the C shell, the idea was that\nif you were a programmer and you wrote in\n\n222\n00:10:42.978 --> 00:10:47.474\nthe C language that you could actually\njust instead of issuing normal command,\n\n223\n00:10:47.474 --> 00:10:51.260\nyou could type C programming\ncharacters right here in the prompt.\n\n224\n00:10:51.260 --> 00:10:55.105\nAnd it would interpret and run them And\nwhen you made a script, the script was\n\n225\n00:10:55.105 --> 00:10:59.360\nC-code and it would do a just in time\ncompilation and actually run it.\n\n226\n00:10:59.360 --> 00:11:01.710\nAnd it would knock everything out for\nus, right?\n\n227\n00:11:01.710 --> 00:11:03.350\nSo that was the idea behind the C shell.\n\n228\n00:11:03.350 --> 00:11:04.970\nWell if you're not a developer,\n\n229\n00:11:04.970 --> 00:11:08.210\nif you don't right in C\nthen that doesn't help you.\n\n230\n00:11:08.210 --> 00:11:10.390\nAnd so\nyou don't necessarily need the C shell.\n\n231\n00:11:10.390 --> 00:11:13.090\nBut we need to know if we have\nthat if I want to use it.\n\n232\n00:11:13.090 --> 00:11:14.690\nI can always switch, right?\n\n233\n00:11:14.690 --> 00:11:17.410\nThere's a new little command, chsh.\n\n234\n00:11:17.410 --> 00:11:22.320\nAnd the chsh command,\nit's short for change shell.\n\n235\n00:11:22.320 --> 00:11:25.580\nAnd this is a command that we can\nuse to change our default shell.\n\n236\n00:11:25.580 --> 00:11:28.960\nIf you don't want to default to bash,\nyou can pick something else.\n\n237\n00:11:28.960 --> 00:11:35.848\nBut even if we don't use the change,\nyou can just use chsh and a space -l.\n\n238\n00:11:35.848 --> 00:11:40.590\nAnd that -l will list\nthe available shells on my system.\n\n239\n00:11:40.590 --> 00:11:41.200\nOkay.\n\n240\n00:11:41.200 --> 00:11:45.630\nAnd when you do that list you can see\nthe shells that you've got, and I can see,\n\n241\n00:11:45.630 --> 00:11:49.160\nI actually do have\nthe original Unix sh shell.\n\n242\n00:11:49.160 --> 00:11:50.050\nThere it is.\n\n243\n00:11:50.050 --> 00:11:50.640\nRight?\n\n244\n00:11:50.640 --> 00:11:53.130\nI'm also got bash.\n\n245\n00:11:53.130 --> 00:11:54.600\nB a s h right there.\n\n246\n00:11:54.600 --> 00:11:56.810\nThat's the default,\nthe one that I'm using right now,\n\n247\n00:11:56.810 --> 00:11:59.480\nthe one that most distros\nuse as a default.\n\n248\n00:11:59.480 --> 00:12:03.380\nBut I've got others,I've\ngot /sbin/nologin,\n\n249\n00:12:03.380 --> 00:12:07.390\nwell, that's a special shell that a lot\nof service accounts will use if you have\n\n250\n00:12:07.390 --> 00:12:09.730\na service account, something that's\nrunning a demon in the background,\n\n251\n00:12:09.730 --> 00:12:10.710\n&gt;&gt; Just like Apache or\n\n252\n00:12:10.710 --> 00:12:11.540\nsomething like that.\n\n253\n00:12:11.540 --> 00:12:12.830\n&gt;&gt; Yeah, it doesn't need to log in and\n\n254\n00:12:12.830 --> 00:12:15.620\nget a shell,that's something a hacker\ncould use, they could take advantage of\n\n255\n00:12:15.620 --> 00:12:18.760\nthat So instead of giving them\na shell it gives them nologin.\n\n256\n00:12:18.760 --> 00:12:21.720\nSo the service can run,\nit can do it's job but\n\n257\n00:12:21.720 --> 00:12:25.800\nit can never actually get to an\ninteractive shell to talk to the system.\n\n258\n00:12:25.800 --> 00:12:27.430\nSo I've got a protection mechanism.\n\n259\n00:12:27.430 --> 00:12:28.050\nRight.\n\n260\n00:12:28.050 --> 00:12:30.290\nI'm now running Red Hat Enterprise Linux.\n\n261\n00:12:30.290 --> 00:12:34.324\nAnd in Red Hat they take the /bin and\n/sbin directories and\n\n262\n00:12:34.324 --> 00:12:35.986\nmirror them to /user.\n\n263\n00:12:35.986 --> 00:12:40.700\n&gt;&gt; /bin and /sbin so that's why I see\neach of those twice, I see sh twice,\n\n264\n00:12:40.700 --> 00:12:42.770\nbash twice, nologin twice,\n\n265\n00:12:42.770 --> 00:12:46.090\nyou probably won't see them twice in your\nsystem that's kind of a Red Hat thing.\n\n266\n00:12:46.090 --> 00:12:50.010\nBut then I've got tCsh which is\nanother shell it's out there,\n\n267\n00:12:50.010 --> 00:12:55.250\ntCsh is the 10X C shell\nwhich was this guy,\n\n268\n00:12:55.250 --> 00:12:58.320\nthe C shell implemented on\nthe 10X operating system.\n\n269\n00:12:58.320 --> 00:13:01.390\nNow most of you have probably never\nheard of the 10X operating system and\n\n270\n00:13:01.390 --> 00:13:03.250\nthat's perfectly fine, you know.\n\n271\n00:13:03.250 --> 00:13:07.690\nBut if you are backporting code, or\nif you've got scripts that were written\n\n272\n00:13:07.690 --> 00:13:12.460\nunder 10X you could run them under the 10X\nC shell here and it would run just fine.\n\n273\n00:13:12.460 --> 00:13:15.280\n&gt;&gt; You've got some 10X fan boy\nout there going, yeah, 10X!\n\n274\n00:13:17.150 --> 00:13:19.090\n&gt;&gt; Don't quote me on this,\nbut if I remember right,\n\n275\n00:13:19.090 --> 00:13:22.080\nthe C-shell is not\nexactly Posix compliant.\n\n276\n00:13:22.080 --> 00:13:24.530\nAnd the 10X C-shell is Posix compliant.\n\n277\n00:13:24.530 --> 00:13:26.090\nSo that's one of the reasons\nit sticks around.\n\n278\n00:13:26.090 --> 00:13:31.948\nIf you've never heard of Posix,\nit's P-O-S-I-X, that's Posix.\n\n279\n00:13:31.948 --> 00:13:35.910\nWhen AT&amp;T originally created\nthe UNIX operating system.\n\n280\n00:13:35.910 --> 00:13:37.570\nThey weren't allowed to sell it.\n\n281\n00:13:37.570 --> 00:13:41.340\nThey couldn't sell Unix because they\nwere going to the whole anti-trust,\n\n282\n00:13:41.340 --> 00:13:42.860\nthe monopoly stuff.\n\n283\n00:13:42.860 --> 00:13:46.850\nAnd the government said, look, you\nare a monopoly in the telecom industry.\n\n284\n00:13:46.850 --> 00:13:50.330\nWe will not allow you to become a monopoly\nin the computer industry as well.\n\n285\n00:13:50.330 --> 00:13:52.290\nSo they were not allowed to sell Unix.\n\n286\n00:13:52.290 --> 00:13:57.190\nSo instead what they did is they licensed\nthe Unix technology to other vendors.\n\n287\n00:13:57.190 --> 00:13:59.000\nSo they can make their\nown operating systems.\n\n288\n00:13:59.000 --> 00:14:01.910\nSo that's where things\nlike 10X came from and and\n\n289\n00:14:01.910 --> 00:14:06.150\nbsd and a number of other operating\nsystems that are out there.\n\n290\n00:14:06.150 --> 00:14:09.350\nThey were all licensed versions of Unix.\n\n291\n00:14:09.350 --> 00:14:11.950\nWell, in order to make them all\ncompatible with each other,\n\n292\n00:14:11.950 --> 00:14:14.210\nwe have the POSIX compliance.\n\n293\n00:14:14.210 --> 00:14:17.270\nAnd POSIX compliance was\na series of rules that said,\n\n294\n00:14:17.270 --> 00:14:21.230\nif you wanna call your operating\nsystem Unix, It's gotta conform to\n\n295\n00:14:21.230 --> 00:14:24.370\nthese rules otherwise you're\nnot allowed to call it Unix.\n\n296\n00:14:24.370 --> 00:14:28.720\nAnd BSD was one of the first ones to\nkind of start breaking that line and\n\n297\n00:14:28.720 --> 00:14:30.960\nthat's why they said we're not going\nto call ourselves Unix anymore,\n\n298\n00:14:30.960 --> 00:14:33.290\nwe'll just call it BSD,\nand that's what they did.\n\n299\n00:14:33.290 --> 00:14:36.860\nEventually the BSD changes got\nincorporated back into Unix, and\n\n300\n00:14:36.860 --> 00:14:40.930\nso then they became POSIX\ncompliant there stuff in there.\n\n301\n00:14:40.930 --> 00:14:46.840\nTo this very day,\nMac OS is POSIX compliant so technically,\n\n302\n00:14:46.840 --> 00:14:50.400\nyou can say that your Mac is running\nUnix if you want, like you say that.\n\n303\n00:14:50.400 --> 00:14:53.330\nWell, in the shell world,\nsome of them are POSIX compliance,\n\n304\n00:14:53.330 --> 00:14:57.160\nsome of them aren't and\nthe ones that aren't can cause problems.\n\n305\n00:14:57.160 --> 00:14:58.880\nYou could write a script that\nworks fine on that shell and\n\n306\n00:14:58.880 --> 00:15:00.450\nit won't work fine on other shells.\n\n307\n00:15:00.450 --> 00:15:04.110\nSo, that's why we have so\nmany choices like this that are available.\n\n308\n00:15:04.110 --> 00:15:06.370\nAnd then I have one more shell,\nTMUX, installed.\n\n309\n00:15:06.370 --> 00:15:09.210\nTMUX is actually not installed,\non most systems, by default, but\n\n310\n00:15:09.210 --> 00:15:12.030\nit's incredibly useful, because it\nallows you to take one shell and\n\n311\n00:15:12.030 --> 00:15:14.410\nsplit it up into multiple screens.\n\n312\n00:15:14.410 --> 00:15:17.230\nKind of like the demonstration I\ndid with terminator yesterday.\n\n313\n00:15:17.230 --> 00:15:20.990\nExcept terminator is a GUI program,\nTMUX is not.\n\n314\n00:15:20.990 --> 00:15:23.540\nIt works inside of a command line session.\n\n315\n00:15:23.540 --> 00:15:26.050\nAnd you can split I could\nremote into a server and\n\n316\n00:15:26.050 --> 00:15:28.620\nstart creating split screens\nright from inside of TMUX.\n\n317\n00:15:28.620 --> 00:15:30.340\n&gt;&gt; Great for headless systems right?\n\n318\n00:15:30.340 --> 00:15:31.690\n&gt;&gt; Yeah really good for that stuff.\n\n319\n00:15:31.690 --> 00:15:34.100\nSo I like TMUX I do use it a lot.\n\n320\n00:15:34.100 --> 00:15:36.130\nNot enough to set it as\nmy default shell though.\n\n321\n00:15:36.130 --> 00:15:36.930\n&gt;&gt; Yeah.\n&gt;&gt; Right.\n\n322\n00:15:36.930 --> 00:15:40.470\nAnd that's the other thing is\nyou have a default shell, right.\n\n323\n00:15:40.470 --> 00:15:44.730\nI just found out a moment ago,\nmy default shell was /bin/bash, right.\n\n324\n00:15:44.730 --> 00:15:49.450\nSo, whenever I open a terminal\nthat's the shell I'm going to be in.\n\n325\n00:15:49.450 --> 00:15:52.620\nBut I can switch to another\nshell at anytime, if I want.\n\n326\n00:15:52.620 --> 00:15:55.526\nAll I have to do is type the name\nof the other shell that I want.\n\n327\n00:15:55.526 --> 00:15:59.745\nSo if I wanna run in the old style\nUnix shell, the original, right?\n\n328\n00:15:59.745 --> 00:16:03.826\nI can just type SH And press enter,\nand now I'm in that shell.\n\n329\n00:16:03.826 --> 00:16:07.184\nNow, my screen didn't change which tells\nme that Red Hat might have actually link\n\n330\n00:16:07.184 --> 00:16:10.270\nsh-2 bash, so\nlet's just try a different shell.\n\n331\n00:16:10.270 --> 00:16:12.656\n&gt;&gt; Let's just do the /bin/sh.\n\n332\n00:16:12.656 --> 00:16:13.790\nThat will definitely fire it off.\n\n333\n00:16:13.790 --> 00:16:15.022\n&gt;&gt; Well I think it's linked though,\nso it's linking over.\n\n334\n00:16:15.022 --> 00:16:17.838\n&gt;&gt; It's linked over, sorry.\n&gt;&gt; Yeah, let me do a tcsh.\n\n335\n00:16:17.838 --> 00:16:21.732\nSo if I do tcsh and I run that,\nyou see how my prompt changed?\n\n336\n00:16:21.732 --> 00:16:23.120\nTcsh has a different prompt.\n\n337\n00:16:23.120 --> 00:16:28.034\nIt's still got my username and host name,\nand then the tilde, which is my path, but\n\n338\n00:16:28.034 --> 00:16:31.289\nit's kind of rearranged\na little bit differently, and\n\n339\n00:16:31.289 --> 00:16:35.651\nnow I'm in this alternate shell, and\nthere might be certain commands that\n\n340\n00:16:35.651 --> 00:16:38.585\nwork fine here that don't\nwork in another shell.\n\n341\n00:16:38.585 --> 00:16:39.923\nSo that's kind of where we are.\n\n342\n00:16:39.923 --> 00:16:43.388\nNow I could actually start doing C\nprogramming language right here in\n\n343\n00:16:43.388 --> 00:16:46.913\nthe prompt, and it's gonna recognize and\nunderstand what I'm doing\n\n344\n00:16:46.913 --> 00:16:50.314\nverses if I was in regular SH it\nmight not recognize some of that, and\n\n345\n00:16:50.314 --> 00:16:53.265\nwhen you switch to a shell like\nthis you're in that shell.\n\n346\n00:16:53.265 --> 00:16:57.052\nEvery command you run is now in that\nshell until you type exit to get out of\n\n347\n00:16:57.052 --> 00:16:59.150\nthe shell, and see how it puts me back?\n\n348\n00:16:59.150 --> 00:17:02.340\nSo I basically just exited\nfrom tcsh back down to bash.\n\n349\n00:17:02.340 --> 00:17:04.917\nSo I moved from one shell to the other.\n\n350\n00:17:04.917 --> 00:17:07.956\nIf I go into tmux, I can run that,\nand now I'm inside of tmux,\n\n351\n00:17:07.956 --> 00:17:11.641\nwhich apparently I've got a syntax error,\n[LAUGH] and so I can get in here and\n\n352\n00:17:11.641 --> 00:17:14.679\nthen I can type exit, and\nI can get out of that, well except for\n\n353\n00:17:14.679 --> 00:17:16.232\nmy syntax errors,-\n&gt;&gt; You think you can [LAUGH].\n\n354\n00:17:16.232 --> 00:17:17.869\n&gt;&gt; I'll Ctrl+C out of that one.\n\n355\n00:17:17.869 --> 00:17:21.490\nBut, no actually, I'm still in tmux.\n\n356\n00:17:21.490 --> 00:17:22.075\n&gt;&gt; In tmux, yeah.\n\n357\n00:17:22.075 --> 00:17:25.620\n&gt;&gt; This is tricky, cuz it looks like\nI'm not in tmux, but I can see my\n\n358\n00:17:25.620 --> 00:17:29.554\nstatus line down here at the bottom so\nI know I'm in this other shell, and\n\n359\n00:17:29.554 --> 00:17:34.004\nso now I can start doing the crazy things\nthat tmux can do like splitting my screen,\n\n360\n00:17:34.004 --> 00:17:38.260\nand now I'm working in two different\nenvironments, and I can exit out of those\n\n361\n00:17:38.260 --> 00:17:42.775\nindividually, but when I exit out of the\nfinal window, it's gonna dump back, and\n\n362\n00:17:42.775 --> 00:17:47.148\nnow I'm back into just my regular old\nshell, that which, in my case, is Bash.\n\n363\n00:17:47.148 --> 00:17:50.393\nSo, pretty easily able to move\nfrom one shell to another,\n\n364\n00:17:50.393 --> 00:17:52.125\nif you want it to be temporary.\n\n365\n00:17:52.125 --> 00:17:55.078\nIf you want it to be permanent, that's\nwhen we actually have to modify our user\n\n366\n00:17:55.078 --> 00:17:56.800\naccount to change what\nour default shell is.\n\n367\n00:17:56.800 --> 00:18:00.450\nBut, if you just wanna try out another\nshell, it's really easy to do it, and\n\n368\n00:18:00.450 --> 00:18:02.280\nyou can install other shells too.\n\n369\n00:18:02.280 --> 00:18:06.404\nI mentioned Dash, which Dash is gaining\nin popularity because of Ubuntu,\n\n370\n00:18:06.404 --> 00:18:09.224\nwhich is one of the more\nwidely used distros today.\n\n371\n00:18:09.224 --> 00:18:13.869\nI don't have it installed, in fact it\nmight not even be in the repositories,\n\n372\n00:18:13.869 --> 00:18:16.304\nlet me see if I can install it real quick.\n\n373\n00:18:16.304 --> 00:18:20.026\nI will see if I can find that one,\nand if you, no it's not available, so\n\n374\n00:18:20.026 --> 00:18:23.378\nif you can reach out and\nfind the install package for that shell,\n\n375\n00:18:23.378 --> 00:18:26.668\nyou can install additional shells,\nand then you can run them,\n\n376\n00:18:26.668 --> 00:18:30.798\nand make use of them, and launch them,\nand maybe that works out great for you.\n\n377\n00:18:30.798 --> 00:18:33.949\nBut if you don't need a shell then you\ndon't necessarily need to install, but\n\n378\n00:18:33.949 --> 00:18:35.779\nthere are other ones\nthat are just out there.\n\n379\n00:18:35.779 --> 00:18:38.874\nIt just depends on you\ndistros what you might find.\n\n380\n00:18:38.874 --> 00:18:43.374\nSo, for example, if I wanted zsh,\nthat's not installed by default, but\n\n381\n00:18:43.374 --> 00:18:47.814\nif I take a look, there's a package,\nso I could install that real quick.\n\n382\n00:18:47.814 --> 00:18:53.032\nLet me just install zsh, and we'll get\nthat one, and then once I've got it,\n\n383\n00:18:53.032 --> 00:18:57.954\nnow any time that I wanna use that shell,\nI can just jump in and fire it up.\n\n384\n00:18:57.954 --> 00:19:02.050\nThe package was a whopping 2.4 MB in size,\nwe're not talking about a lot here.\n\n385\n00:19:02.050 --> 00:19:04.320\nThe shells themselves\nare usually even smaller.\n\n386\n00:19:04.320 --> 00:19:07.961\nThe bulk of that file size is usually the\nhelp documentation, because these shells\n\n387\n00:19:07.961 --> 00:19:10.936\nwere written a long time ago,\nwhen you didn't have a lot of memory.\n\n388\n00:19:10.936 --> 00:19:15.576\nBut now I can run this and here I am,\nI'm in the Z shell and I'm ready to go and\n\n389\n00:19:15.576 --> 00:19:17.734\ndo whatever it is the Z shell does.\n\n390\n00:19:17.734 --> 00:19:20.256\n&gt;&gt; I think it's another\nderivation of the C shell.\n\n391\n00:19:20.256 --> 00:19:20.759\n&gt;&gt; Is it?\n\n392\n00:19:20.759 --> 00:19:21.429\n&gt;&gt; Yeah.\n&gt;&gt; I never use it [LAUGH].\n\n393\n00:19:21.429 --> 00:19:23.820\n&gt;&gt; It's just more about being C compliant.\n\n394\n00:19:23.820 --> 00:19:26.931\nApparently people that use Linux\nreally like C programming.\n\n395\n00:19:26.931 --> 00:19:30.560\n[LAUGH]\n&gt;&gt; If I remember right the Z shell\n\n396\n00:19:30.560 --> 00:19:34.990\nwas popular amongst a lot of BSD users,\nso I don't know where it came from there.\n\n397\n00:19:34.990 --> 00:19:38.750\nBut you've got other people out there that\nare maybe coming from the Solaris world,\n\n398\n00:19:38.750 --> 00:19:42.040\nwhere the Solaris operating\nsystem which was BSD based.\n\n399\n00:19:42.040 --> 00:19:45.254\nIt had some different shells and\nso you could certainly add those.\n\n400\n00:19:45.254 --> 00:19:50.029\nNow for most of us we just\nstick with the Bash shell.\n\n401\n00:19:50.029 --> 00:19:53.116\nBash is the most commonly used,\nmost scripts are written assuming the Bash\n\n402\n00:19:53.116 --> 00:19:55.272\nshell was there, but\nyou certainly don't have to,\n\n403\n00:19:55.272 --> 00:19:57.634\nso you can find one that you like and\nyou can stick with it.\n\n404\n00:19:57.634 --> 00:20:01.077\nNow how do you know that you\nlike one better than the other?\n\n405\n00:20:01.077 --> 00:20:03.126\nIf you're just typing commands and\nthey work in any of them,\n\n406\n00:20:03.126 --> 00:20:04.061\naren't they all the same?\n\n407\n00:20:04.061 --> 00:20:07.651\nWhat it really comes down to\nare what are called shell built-ins.\n\n408\n00:20:07.651 --> 00:20:11.764\nWhen I run a command, a command is\nnormally a binary stored somewhere.\n\n409\n00:20:11.764 --> 00:20:14.000\nSo I ran host name CTL earlier.\n\n410\n00:20:14.000 --> 00:20:17.950\nSo that was the command I ran to\nfind out what my host name was.\n\n411\n00:20:19.080 --> 00:20:22.000\nWell, where's that command come from?\n\n412\n00:20:22.000 --> 00:20:27.480\nYou can use the which command, which will\ntell you which files provide that command.\n\n413\n00:20:27.480 --> 00:20:31.914\nAnd so if I say which hostname ctl and\nthen run that,\n\n414\n00:20:31.914 --> 00:20:35.126\nI get /users/bin/hostnamectl.\n\n415\n00:20:35.126 --> 00:20:37.569\nThat's the binary that powers that.\n\n416\n00:20:37.569 --> 00:20:41.458\nBut there's other commands\nlike the history command.\n\n417\n00:20:41.458 --> 00:20:43.448\nIf I type history, and I run that,\n\n418\n00:20:43.448 --> 00:20:47.363\nI get a list of all the commands that\nI've typed since I logged in, or\n\n419\n00:20:47.363 --> 00:20:51.790\non some systems actually keeps the file,\nand it might even go further back.\n\n420\n00:20:51.790 --> 00:20:54.620\nIt might go back thousand commands,\nover multiple sessions.\n\n421\n00:20:54.620 --> 00:20:57.150\nBut I can see the commands\nthat I've typed.\n\n422\n00:20:57.150 --> 00:21:02.820\nIf I do a which history, and\nI run that, I get an error.\n\n423\n00:21:02.820 --> 00:21:07.669\nIt searched in a bunch of places,\nI'm trying to find this command,\n\n424\n00:21:07.669 --> 00:21:09.209\nand I can't find it.\n\n425\n00:21:09.209 --> 00:21:10.660\nWhere's that command come from?\n\n426\n00:21:10.660 --> 00:21:14.790\nIf there's no binary that's\nproviding that command, where is it?\n\n427\n00:21:14.790 --> 00:21:16.570\nIt's coming from our shell.\n\n428\n00:21:16.570 --> 00:21:19.909\nThat history command is an example\nof what's called a shell built-in.\n\n429\n00:21:19.909 --> 00:21:24.095\nA built-in is a command that's\nnot a binary on your file system,\n\n430\n00:21:24.095 --> 00:21:27.368\nit's built in to the shell\nthat you're using, and\n\n431\n00:21:27.368 --> 00:21:31.344\nas long as I'm in Bash,\nI know the built-ins that I've got.\n\n432\n00:21:31.344 --> 00:21:31.890\nI'm used to them.\n\n433\n00:21:31.890 --> 00:21:33.214\nI work in Bash all the time.\n\n434\n00:21:33.214 --> 00:21:37.090\nBut if I jump over into zsh,\nI don't know the built-ins over there.\n\n435\n00:21:37.090 --> 00:21:40.762\nI don't use that shell very often, and so\nit might be commands that I'm used to, or\n\n436\n00:21:40.762 --> 00:21:44.434\neven commands that I'm using in scripts\nthat aren't available, or there might be\n\n437\n00:21:44.434 --> 00:21:47.964\nsome that are available in the other\nshell that aren't available here in Bash.\n\n438\n00:21:47.964 --> 00:21:50.107\nThat might be the reason why\nI like that other shell.\n\n439\n00:21:50.107 --> 00:21:52.147\n&gt;&gt; My favorite's when,\nit is the same command, but\n\n440\n00:21:52.147 --> 00:21:53.465\nthey work kind of differently.\n\n441\n00:21:53.465 --> 00:21:56.329\n&gt;&gt; [LAUGH] That's always fun.\n\n442\n00:21:56.329 --> 00:21:58.843\n&gt;&gt; Yeah, that's a standard Linux problem.\n\n443\n00:21:58.843 --> 00:21:59.439\n&gt;&gt; Yeah, it is.\n\n444\n00:21:59.439 --> 00:22:01.515\n[LAUGH]\n&gt;&gt; Or you can say it's a benefit, right?\n\n445\n00:22:01.515 --> 00:22:02.181\n&gt;&gt; Yeah.\n\n446\n00:22:02.181 --> 00:22:05.026\n&gt;&gt; Somebody doesn't like the way something\nworks, and so they change it, and\n\n447\n00:22:05.026 --> 00:22:05.656\nmake it better.\n\n448\n00:22:05.656 --> 00:22:07.645\nIf you really wanna find out\nthose differences you'll have\n\n449\n00:22:07.645 --> 00:22:09.127\nto pull up the documentation for\nthe shell.\n\n450\n00:22:09.127 --> 00:22:13.821\nSo for example I've got the GNU page\nhere for the Bash shell pulled up, and\n\n451\n00:22:13.821 --> 00:22:18.590\nthey've got a list where you can come in\nand you can pull up all the born shell\n\n452\n00:22:18.590 --> 00:22:23.058\nbuilt ins and get in there and\nsee which built-ins are available, and\n\n453\n00:22:23.058 --> 00:22:27.408\nif we take a look, you'll see some\nof them are really like aliases.\n\n454\n00:22:27.408 --> 00:22:31.655\nBut you'll find other commands in here\nlike cd for changing directory, exec for\n\n455\n00:22:31.655 --> 00:22:34.900\nrunning a program, exit for\ngetting out of a shell.\n\n456\n00:22:34.900 --> 00:22:38.258\nThe shell has to actually provide you\nthe function to get out of the shell.\n\n457\n00:22:38.258 --> 00:22:41.271\nThat's important, and\nsomewhere in here we'll probably find,\n\n458\n00:22:41.271 --> 00:22:44.937\nyou know, I didn't see a history,\nalthough I know history is a built-in.\n\n459\n00:22:44.937 --> 00:22:49.437\nYou know what, I'm in Bash,\nthe born again shell.\n\n460\n00:22:49.437 --> 00:22:50.007\n&gt;&gt; Right.\n\n461\n00:22:50.007 --> 00:22:53.387\n&gt;&gt; This is the documentation for\nthe original Bash or born shell.\n\n462\n00:22:53.387 --> 00:22:54.194\n&gt;&gt; The born shell, yeah.\n\n463\n00:22:54.194 --> 00:22:58.785\n&gt;&gt; So history must be a new feature or\nI'm just missing it here.\n\n464\n00:22:58.785 --> 00:23:04.181\nBut that's the case with these shells, and\nthis is largely the biggest difference.\n\n465\n00:23:04.181 --> 00:23:06.690\nThere'll be other differences\nlike posix compliance,\n\n466\n00:23:06.690 --> 00:23:10.205\nbut the big difference that affects you,\nthe end user, are these built-ins.\n\n467\n00:23:10.205 --> 00:23:12.340\nWhat's available and what isn't, and\n\n468\n00:23:12.340 --> 00:23:16.357\nyou'll have to look at your shells\ndocumentation to find out exactly what it\n\n469\n00:23:16.357 --> 00:23:20.990\nis that it provides that you need, or that\nit makes your life glorious and great, so.\n\n470\n00:23:20.990 --> 00:23:23.918\n&gt;&gt; All right Don, well you did say that\nyou were gonna show us how to actually,\n\n471\n00:23:23.918 --> 00:23:26.123\nwe've seen how to list which\nshells we have available.\n\n472\n00:23:26.123 --> 00:23:29.149\nI actually want to change shells\nI've decided you know what,\n\n473\n00:23:29.149 --> 00:23:32.620\nthe tonic shell is the answer of\nall my prayers, I need that 24/7.\n\n474\n00:23:32.620 --> 00:23:34.701\nHow do I make that change?\n\n475\n00:23:34.701 --> 00:23:38.394\n&gt;&gt; All right so if I wanna switch my\ndefault shell, if this is a temporary\n\n476\n00:23:38.394 --> 00:23:42.597\nthing, I just open up my normal shell and\nI type the name of the other shell, and\n\n477\n00:23:42.597 --> 00:23:46.228\nthat's it, it's temporary, and\nthen I type exit it's gone, but\n\n478\n00:23:46.228 --> 00:23:49.221\nif I wanna make it where every\ntime I launch my terminal,\n\n479\n00:23:49.221 --> 00:23:53.145\nthat it goes to this other shell,\nthen I need to change my default entry.\n\n480\n00:23:53.145 --> 00:23:57.496\nNow, earlier I found my default entry\nby the looking in the past WD file.\n\n481\n00:23:57.496 --> 00:24:00.310\nAnd we're not allowed to edit that, right?\n\n482\n00:24:00.310 --> 00:24:02.960\nA root user, can edit that file but\na regular user cannot and\n\n483\n00:24:02.960 --> 00:24:05.190\nyou're not supposed to\nedit it directly anyway.\n\n484\n00:24:05.190 --> 00:24:08.120\nWe have a whole suite of utilities\nthat can help us to do that.\n\n485\n00:24:08.120 --> 00:24:12.290\nAnd as far as the shells are concerned,\nit's the chsh command.\n\n486\n00:24:12.290 --> 00:24:13.170\nI used it earlier,\n\n487\n00:24:13.170 --> 00:24:17.490\nI just ran it again here, chsh -l to\nlist the available shells, right?\n\n488\n00:24:17.490 --> 00:24:19.590\nSo now I know what's\navailable on my system.\n\n489\n00:24:19.590 --> 00:24:23.370\nMaybe I want to make zsh my default shell,\n\n490\n00:24:23.370 --> 00:24:28.455\nthat's the one that I want to go to, like\nI think it's awesome for whatever reason.\n\n491\n00:24:28.455 --> 00:24:31.377\n&gt;&gt; [LAUGH]\n&gt;&gt; So I can come in and I can say,\n\n492\n00:24:31.377 --> 00:24:37.260\nchsh -s, -l was to list the shell,\n-s is to set the shell.\n\n493\n00:24:37.260 --> 00:24:42.602\nSo I'm going to set my shell\nto /bin/zsh like that okay,\n\n494\n00:24:42.602 --> 00:24:46.321\nand it changing it from my user account.\n\n495\n00:24:46.321 --> 00:24:50.655\nSo I've gotta provide my password so\nI'll punch that in,\n\n496\n00:24:50.655 --> 00:24:54.135\nhere we go and\nit says that my shell is changed.\n\n497\n00:24:54.135 --> 00:24:56.340\nOkay now how do I know\nwhat actually changed?\n\n498\n00:24:56.340 --> 00:25:00.607\nI can test it, I can launch new terminal,\nbut before I do that, let me just grep for\n\n499\n00:25:00.607 --> 00:25:04.260\ndpset in /etc/passwd.\n\n500\n00:25:04.260 --> 00:25:10.304\nAnd when I look in there, I can see that\nmy default shell is now /bin/zsh, right?\n\n501\n00:25:10.304 --> 00:25:13.549\nAnd if I open up a new terminal window, so\n\n502\n00:25:13.549 --> 00:25:17.105\nI'll just go up here to\nopen a new terminal.\n\n503\n00:25:17.105 --> 00:25:20.890\nAll right actually know what,\nI'm gonna close out of this one.\n\n504\n00:25:20.890 --> 00:25:26.070\nHere we go, and if I open up a new\nterminal even if I go to x term or\n\n505\n00:25:26.070 --> 00:25:29.080\nsomebody else,\nwhen I go in it's gonna launch.\n\n506\n00:25:29.080 --> 00:25:33.855\nAnd it's gonna be launching in\nthe zsh which I picked a terminal.\n\n507\n00:25:33.855 --> 00:25:34.368\n&gt;&gt; [CROSSTALK]\n&gt;&gt; [LAUGH]\n\n508\n00:25:34.368 --> 00:25:36.150\n&gt;&gt; Let me just do my normal terminal,\n\n509\n00:25:36.150 --> 00:25:38.550\nit's not so tiny, and I come in here.\n\n510\n00:25:38.550 --> 00:25:41.410\n&gt;&gt; Don it does look like we're still\n\n511\n00:25:41.410 --> 00:25:44.726\ndriving the same car here, [LAUGH]\n&gt;&gt; [LAUGH] Yeah I kind of forgot\n\n512\n00:25:44.726 --> 00:25:45.455\nsomething.\n\n513\n00:25:45.455 --> 00:25:46.077\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n514\n00:25:46.077 --> 00:25:48.815\nthe nom terminal is actually\nhard coded to use dash so\n\n515\n00:25:48.815 --> 00:25:50.940\nit's ignoring my default login shell.\n\n516\n00:25:50.940 --> 00:25:52.195\n&gt;&gt; Of course not sweet of them.\n\n517\n00:25:52.195 --> 00:25:53.850\n[LAUGH]\n&gt;&gt; Let me show you guys real quick.\n\n518\n00:25:53.850 --> 00:25:55.950\nIf I had done an actual terminal right?\n\n519\n00:25:55.950 --> 00:25:58.407\nSo if I did it like here\nI'll do a control F2 and\n\n520\n00:25:58.407 --> 00:26:00.685\nI know this is gonna be microscopic right?\n\n521\n00:26:00.685 --> 00:26:02.348\n&gt;&gt; Yeah.\n&gt;&gt; So way up there at the top is really,\n\n522\n00:26:02.348 --> 00:26:02.878\nreally tiny.\n\n523\n00:26:02.878 --> 00:26:04.180\nAnd I can't really do anything about that.\n\n524\n00:26:04.180 --> 00:26:05.230\nLet me just show you real quick.\n\n525\n00:26:05.230 --> 00:26:09.514\nI'm gonna login here and\nwhen l log in there is that message,\n\n526\n00:26:09.514 --> 00:26:12.549\nthe zsh show to say\nlike hey you're in zsh.\n\n527\n00:26:12.549 --> 00:26:14.258\nAnd here is your shell and\nyou start working with it.\n\n528\n00:26:14.258 --> 00:26:18.402\nSo l know that it's working,\nmy default shell is zsh,\n\n529\n00:26:18.402 --> 00:26:22.288\nif l would ssh into my system,\nl would get that zsh.\n\n530\n00:26:22.288 --> 00:26:26.110\nThe problem here is that gnome\nterminal is ignoring that.\n\n531\n00:26:26.110 --> 00:26:29.211\nSo let me show you how to fix that in\ngnome terminal, if this were a server,\n\n532\n00:26:29.211 --> 00:26:30.423\nI wouldn't worry about it.\n\n533\n00:26:30.423 --> 00:26:31.031\n&gt;&gt; Right.\n\n534\n00:26:31.031 --> 00:26:33.466\n&gt;&gt; Cuz I always ssh into\na server I'll get zsh.\n\n535\n00:26:33.466 --> 00:26:36.730\nBut in gnome terminal it's got\nit's own little kinda hard coding.\n\n536\n00:26:36.730 --> 00:26:39.630\nI don't know why they do that but\nthey certainly do.\n\n537\n00:26:39.630 --> 00:26:44.103\nBut if you go into your profile\npreferences, you can come in here and\n\n538\n00:26:44.103 --> 00:26:47.179\nyou can tell it a command\nto run when you log in.\n\n539\n00:26:47.179 --> 00:26:51.890\nAnd see how it's got run a custom\ncommand instead of my shell,\n\n540\n00:26:51.890 --> 00:26:54.253\nI can tell that I wanna run zsh.\n\n541\n00:26:54.253 --> 00:26:57.330\nThere we go, I can run a zsh,\nI make my own shell.\n\n542\n00:26:57.330 --> 00:27:01.980\nAnd once I tell it that,\nnow any time I open up a new terminal\n\n543\n00:27:01.980 --> 00:27:04.980\nI can come in here and\njust say I wanna open a new terminal.\n\n544\n00:27:04.980 --> 00:27:09.369\nAnd now it's defaulting into zsh so\nthat kind of solves that problem and\n\n545\n00:27:09.369 --> 00:27:11.573\ngets that set the way that I want it.\n\n546\n00:27:11.573 --> 00:27:14.606\nAlso if I had been remoting into a server,\n\n547\n00:27:14.606 --> 00:27:19.660\nlike if I remote into this one and\noops I need a syntax right here.\n\n548\n00:27:19.660 --> 00:27:21.640\nIf I had been remoting into this server,\n\n549\n00:27:21.640 --> 00:27:24.060\nthen it would have\nhonored it there as well.\n\n550\n00:27:24.060 --> 00:27:30.450\nAnd I could have logged in and there's my\nzsh shell, and it's observing it there.\n\n551\n00:27:30.450 --> 00:27:34.890\nSo be aware that your terminal that you're\nusing could override that default shell.\n\n552\n00:27:34.890 --> 00:27:38.523\nLike in my case Gnome terminal did\noverride me but the default shell was set.\n\n553\n00:27:38.523 --> 00:27:42.789\nI'm set for zsh, I'm not a fan of zsh,\nnot saying it's bad.\n\n554\n00:27:42.789 --> 00:27:46.051\nI'm just saying I never use it so I don't\nwanna stick with that as my default shell.\n\n555\n00:27:46.051 --> 00:27:49.383\n&gt;&gt; [LAUGH]\n&gt;&gt; So I'm gonna do a quick chsh -s and\n\n556\n00:27:49.383 --> 00:27:54.430\nI'm gonna put myself back to\n/bin/bash like it used to be.\n\n557\n00:27:54.430 --> 00:27:59.368\nAnd so I'll put that in there and\nthen I'm just gonna verify that\n\n558\n00:27:59.368 --> 00:28:04.495\nchange stuck by doing a grep for\nthe dpezet screen /etc/passwd.\n\n559\n00:28:04.495 --> 00:28:08.115\nAnd I can see that I back to\n/bin/bash where I wanna be and\n\n560\n00:28:08.115 --> 00:28:11.143\nnow we're good to go, so\nthose are the shells.\n\n561\n00:28:11.143 --> 00:28:13.726\nAnd how we switch between them and\nit's not so bad right?\n\n562\n00:28:13.726 --> 00:28:17.360\nBut you do experiment around with it,\nthe other shells are a lot less popular.\n\n563\n00:28:17.360 --> 00:28:20.169\nBash is the defacto standard\nespecially when it comes to\n\n564\n00:28:20.169 --> 00:28:22.571\nscripting because if you\nwanna write a script.\n\n565\n00:28:22.571 --> 00:28:25.652\nAnd have it run everywhere,\neverybody has worked bash.\n\n566\n00:28:25.652 --> 00:28:28.831\nBut do know that there's other shells like\ndash that are gaining in popularity, and\n\n567\n00:28:28.831 --> 00:28:30.330\nmore and more people are running them.\n\n568\n00:28:30.330 --> 00:28:31.820\nSo definitely check out the other shells.\n\n569\n00:28:31.820 --> 00:28:35.240\nSee if they offer something that you\nmight find that really benefits you.\n\n570\n00:28:35.240 --> 00:28:38.340\n&gt;&gt; All right Don, well this is a great\nlook at what a shell is, right?\n\n571\n00:28:38.340 --> 00:28:41.160\nHopefully we've answered that question for\nyou, if you've never heard it before.\n\n572\n00:28:41.160 --> 00:28:43.020\nAnd what shells are available\non our system and\n\n573\n00:28:43.020 --> 00:28:44.770\nhow we can switch in between them.\n\n574\n00:28:44.770 --> 00:28:47.005\nAnd make those changes\npermanent if necessary.\n\n575\n00:28:47.005 --> 00:28:49.967\nDon, thanks for\nimparting that knowledge onto us.\n\n576\n00:28:49.967 --> 00:28:51.420\nI always give you the opportunity-\n&gt;&gt; [LAUGH]\n\n577\n00:28:51.420 --> 00:28:52.270\n&gt;&gt; Give us some parting\n\n578\n00:28:52.270 --> 00:28:53.630\nwords before we close the show.\n\n579\n00:28:53.630 --> 00:28:55.240\nAnything you got for us?\n\n580\n00:28:55.240 --> 00:28:57.876\n&gt;&gt; For those who go on to\nwatch our scripting shows,\n\n581\n00:28:57.876 --> 00:29:01.602\nwhat you'll notice is that in a lot\nof scripts on the very first line,\n\n582\n00:29:01.602 --> 00:29:04.451\nit'll actually call the interpret or\ncall a shell.\n\n583\n00:29:04.451 --> 00:29:07.490\nBecause they don't know which shell\nyou're running when the script runs.\n\n584\n00:29:07.490 --> 00:29:10.670\nAnd so\nthey almost always call the bash shell.\n\n585\n00:29:10.670 --> 00:29:13.860\nSo if you're just getting started\nwith Linux, if you're new to this,\n\n586\n00:29:13.860 --> 00:29:16.910\nI do recommend you stick with the bash\nshell at least to start with.\n\n587\n00:29:16.910 --> 00:29:20.155\nBut as you become a more advanced user you\nmay find the other shells can benefit you.\n\n588\n00:29:20.155 --> 00:29:24.373\nSo just know that the bash is the standard\nbasically because of compatibility.\n\n589\n00:29:24.373 --> 00:29:26.575\nWe want things to be able to run\non all the different systems.\n\n590\n00:29:26.575 --> 00:29:28.675\n&gt;&gt; All right Don, well thanks again for\njoining us today and\n\n591\n00:29:28.675 --> 00:29:30.625\nwe do thank our audience for watching.\n\n592\n00:29:30.625 --> 00:29:34.246\nHopefully this has been a very educational\nand entertaining episode to watch.\n\n593\n00:29:34.246 --> 00:29:36.003\nWe try real hard to do that for\nyou good folks out there.\n\n594\n00:29:36.003 --> 00:29:37.015\n&gt;&gt; [LAUGH]\n&gt;&gt; But\n\n595\n00:29:37.015 --> 00:29:40.235\nit is that time looking at the clock,\nwe've run out of the precious little\n\n596\n00:29:40.235 --> 00:29:42.400\nseconds that make up our episode\n&gt;&gt; We're gonna go ahead and\n\n597\n00:29:42.400 --> 00:29:45.700\nsign off for ITPro.TV,\nI've been your host Daniel Lowrie.\n\n598\n00:29:45.700 --> 00:29:46.340\n&gt;&gt; And I'm Don Pezet.\n\n599\n00:29:46.340 --> 00:29:48.745\n&gt;&gt; And we'll see you next time.\n\n600\n00:29:48.745 --> 00:29:54.730\n[MUSIC]\n\n601\n00:29:54.730 --> 00:29:57.245\n&gt;&gt; Thank you for watching ITPro.TV\n\n",
          "vimeoId": "234904291"
        },
        {
          "description": "In this episode, Don walks the viewers through the various ways you can get help from the Linux command line. He demonstrates the man command as well as info, apropos and other methods of retrieving help.",
          "length": "1738",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-1-2-1-getting_help-092017-PGM.00_28_43_16.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-1-2-1-getting_help-092017-PGM.00_28_43_16.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-1-2-1-getting_help-092017-PGM.00_28_43_16.Still001-sm.jpg",
          "title": "Getting Help",
          "transcript": "WEBVTT\n\n1\n00:00:00.250 --> 00:00:01.641\nWelcome to ITProTV.\n\n2\n00:00:01.641 --> 00:00:06.086\n[CROSSTALK]\n\n3\n00:00:06.086 --> 00:00:08.208\n[MUSIC]\n\n4\n00:00:08.208 --> 00:00:12.216\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:12.216 --> 00:00:13.925\n&gt;&gt; All right, greetings, everyone,\n\n6\n00:00:13.925 --> 00:00:17.220\nwelcome back to another\nexciting episode of ITProTV.\n\n7\n00:00:17.220 --> 00:00:18.960\nI'm your host, Daniel Lowrie,\nand in today's episode,\n\n8\n00:00:18.960 --> 00:00:21.280\nwe're back talking more about\nthe Linux command line.\n\n9\n00:00:21.280 --> 00:00:23.602\nAnd it has been an interesting\nconversation thus far.\n\n10\n00:00:23.602 --> 00:00:25.680\nI see no change in that\nin the near future.\n\n11\n00:00:25.680 --> 00:00:26.550\nThat's for sure.\n\n12\n00:00:26.550 --> 00:00:31.120\nThis is the disembodied laughter you hear\noff this camera, is our good friend,\n\n13\n00:00:31.120 --> 00:00:32.480\nMr Don Pezet, joining us today.\n\n14\n00:00:32.480 --> 00:00:33.290\nDon, welcome back, sir.\n\n15\n00:00:33.290 --> 00:00:33.930\nHow's it going, man?\n\n16\n00:00:33.930 --> 00:00:35.300\n&gt;&gt; Hey, it is going great, Daniel.\n\n17\n00:00:35.300 --> 00:00:37.890\nReady to dive right back\ninto the Linux command line.\n\n18\n00:00:37.890 --> 00:00:42.048\nAnd in the upcoming episodes, really,\nthe whole rest of this series, we're what,\n\n19\n00:00:42.048 --> 00:00:43.050\nthree episodes in?\n\n20\n00:00:43.050 --> 00:00:45.127\n&gt;&gt; Yeah.\n&gt;&gt; Now the whole rest of the series,\n\n21\n00:00:45.127 --> 00:00:47.861\nwe're gonna be opening\na fire hose of commands,\n\n22\n00:00:47.861 --> 00:00:50.610\njust stuff that you can\ndo from the command line.\n\n23\n00:00:50.610 --> 00:00:53.688\nAnd it can be overwhelming commands,\nand even more so,\n\n24\n00:00:53.688 --> 00:00:58.206\nnot just the commands itself, but all the\ncommand line arguments we can provide to\n\n25\n00:00:58.206 --> 00:01:00.500\nchange the way the commands work\n&gt;&gt; Those are my favorite.\n\n26\n00:01:00.500 --> 00:01:02.860\n&gt;&gt; It's a lot, yeah, it's overwhelming.\n\n27\n00:01:02.860 --> 00:01:07.815\nSo before we do that, though, before we\nbreak out the fire hose and let it go,\n\n28\n00:01:07.815 --> 00:01:12.780\nI wanted to take a moment and\ndo an episode just on getting help, right?\n\n29\n00:01:12.780 --> 00:01:15.830\nHow do we find out what\ncommands are available?\n\n30\n00:01:15.830 --> 00:01:18.130\nHow do we find out what command\nline arguments are available?\n\n31\n00:01:18.130 --> 00:01:20.380\nHow we do we figure out\nhow to use a command?\n\n32\n00:01:20.380 --> 00:01:23.390\nHow do we figure out if\na command even exists, right?\n\n33\n00:01:23.390 --> 00:01:25.190\nSo in this episode,\nwe're gonna learn about that.\n\n34\n00:01:25.190 --> 00:01:27.450\nThat Linux, as an operating system,\n\n35\n00:01:27.450 --> 00:01:31.140\nas a whole, has really good documentation\non the bulk of the commands.\n\n36\n00:01:31.140 --> 00:01:32.930\nNow a lot of that comes\nfrom the Unix background.\n\n37\n00:01:32.930 --> 00:01:37.100\nSo some of the documentation is really\nold, but it's still very, very accurate.\n\n38\n00:01:37.100 --> 00:01:38.920\nWe just need to know that it's there.\n\n39\n00:01:38.920 --> 00:01:40.960\nAnd there's great utilities\nto help us find things.\n\n40\n00:01:40.960 --> 00:01:44.016\nAnd so the stuff in this episode\nis the stuff you wanna memorize,\n\n41\n00:01:44.016 --> 00:01:46.400\nthat you want to always\nhave committed to memory.\n\n42\n00:01:46.400 --> 00:01:48.050\nYou can forget all the other commands.\n\n43\n00:01:48.050 --> 00:01:49.380\nAnd if you know the commands\nfrom this episode,\n\n44\n00:01:49.380 --> 00:01:53.870\nyou'll be able to find them, stumble\nback upon them and make some use of it.\n\n45\n00:01:53.870 --> 00:01:55.576\nSo this is stuff that's\nreally critical for\n\n46\n00:01:55.576 --> 00:01:58.010\nthe day-to-day operation of\nusing the Linux command line.\n\n47\n00:01:58.010 --> 00:01:59.410\n&gt;&gt; Don, this is not a joke.\n\n48\n00:01:59.410 --> 00:02:04.011\nI have been using Linux since 1999,\nI believe,\n\n49\n00:02:04.011 --> 00:02:07.370\nand I still use all the help features.\n\n50\n00:02:07.370 --> 00:02:09.747\nYou're never gonna memorize\nevery little switch and\n\n51\n00:02:09.747 --> 00:02:11.410\noption that comes with a command.\n\n52\n00:02:11.410 --> 00:02:13.880\nHeck, I might not even remember\nexactly what the command is, or\n\n53\n00:02:13.880 --> 00:02:16.190\nwhere it's located, or\nthose configuration files.\n\n54\n00:02:16.190 --> 00:02:20.530\nWe need to be able to get help with our\nsystem because man, you're gonna need it,\n\n55\n00:02:20.530 --> 00:02:21.810\nso this is great stuff.\n\n56\n00:02:21.810 --> 00:02:24.020\nDon, where do we start when\nit comes to getting help?\n\n57\n00:02:24.020 --> 00:02:27.640\n&gt;&gt; All right, so some commands,\nif you just remember their name,\n\n58\n00:02:27.640 --> 00:02:31.210\nthey have a simple thing that you run,\nand that's it, right?\n\n59\n00:02:31.210 --> 00:02:35.379\nSo if I'm in my shell, like I am right\nnow, and I wanna know what folder I'm in,\n\n60\n00:02:35.379 --> 00:02:37.390\nthere's a command for that, right?\n\n61\n00:02:37.390 --> 00:02:41.990\nThere's the pwd command or\nthe present working directory.\n\n62\n00:02:41.990 --> 00:02:45.030\nSo it's gonna show me the direct\nribbon I'm in in the file system.\n\n63\n00:02:45.030 --> 00:02:48.920\nAnd if I run it, I just run the command,\nand there it is, right?\n\n64\n00:02:48.920 --> 00:02:52.260\nSo some commands, it's really just\na matter of remembering their name.\n\n65\n00:02:52.260 --> 00:02:56.370\nBut a lot of commands will require\nadditional arguments to make them work.\n\n66\n00:02:56.370 --> 00:02:59.650\nYou have to provide additional\nfeedback into them, otherwise,\n\n67\n00:02:59.650 --> 00:03:01.120\nthey just don't work by themselves.\n\n68\n00:03:01.120 --> 00:03:05.132\nSo for example, the copy command,\ncopy is cp, all right?\n\n69\n00:03:05.132 --> 00:03:09.899\nAnd if I do copy, it's expecting me to\nsay a source file and a destination file,\n\n70\n00:03:09.899 --> 00:03:11.290\nall right?\n\n71\n00:03:11.290 --> 00:03:15.550\nSo I might copy file1 to file2, right?\n\n72\n00:03:15.550 --> 00:03:19.150\nIf I don't give it those arguments,\nif I just type cp, and\n\n73\n00:03:19.150 --> 00:03:22.200\npress Enter,\nit gives me a little bit of help, right?\n\n74\n00:03:22.200 --> 00:03:24.108\nAnd when I say a little bit,\nI mean that literally.\n\n75\n00:03:24.108 --> 00:03:26.320\n&gt;&gt; [LAUGH]\n&gt;&gt; It is a little bit of help.\n\n76\n00:03:26.320 --> 00:03:29.275\nSometimes they're very, very detailed,\nbut usually, it's something like this.\n\n77\n00:03:29.275 --> 00:03:32.800\nAnd it's telling me,\nyou kind of forgot to provide an operand.\n\n78\n00:03:32.800 --> 00:03:36.534\nYou didn't provide the command\nline options and arguments,\n\n79\n00:03:36.534 --> 00:03:39.370\nso it's not able to do its job, okay?\n\n80\n00:03:39.370 --> 00:03:40.978\nWe need to give it some more.\n\n81\n00:03:40.978 --> 00:03:45.714\nSo if you've forgotten just the argument,\nthat's not such a big deal, right?\n\n82\n00:03:45.714 --> 00:03:47.378\nYou can just run the command, and\n\n83\n00:03:47.378 --> 00:03:49.950\nit will usually tell you\nhow you can find more help.\n\n84\n00:03:49.950 --> 00:03:53.962\nAnd in this case,\nit's telling me that I can run cp -- help.\n\n85\n00:03:53.962 --> 00:03:57.580\nAll right, now, when it comes to\ncommand line arguments like this,\n\n86\n00:03:57.580 --> 00:03:59.980\nthere's actually two different forms for\nproviding it.\n\n87\n00:03:59.980 --> 00:04:02.900\nAnd you'll see this commonly throughout\nall the commands that we run.\n\n88\n00:04:02.900 --> 00:04:08.397\nThe old style Unix way of doing it was\na single dash followed by a single letter,\n\n89\n00:04:08.397 --> 00:04:09.540\nall right?\n\n90\n00:04:09.540 --> 00:04:15.190\nSo you might see cp-h,\nand that -h was help.\n\n91\n00:04:15.190 --> 00:04:18.750\nBut in the BSD world,\nthey started using words instead.\n\n92\n00:04:18.750 --> 00:04:20.800\nIt was a little more user friendly, right?\n\n93\n00:04:20.800 --> 00:04:22.350\nAnd so here it's help.\n\n94\n00:04:22.350 --> 00:04:26.790\nBut we wanna make sure that Unix or\nLinux in this case understands\n\n95\n00:04:26.790 --> 00:04:32.030\nthat it's not H-E-L-P, individual letters,\nit's not four arguments.\n\n96\n00:04:32.030 --> 00:04:33.880\nIt's one word, called help.\n\n97\n00:04:33.880 --> 00:04:37.880\nAnd that's where the double\ndashes come in, the --help.\n\n98\n00:04:37.880 --> 00:04:42.480\nSo if I wanna learn more about cp,\nI can run cp- -help,\n\n99\n00:04:42.480 --> 00:04:46.330\nand it's gonna provide me\nwith the help information.\n\n100\n00:04:46.330 --> 00:04:48.949\nAnd when I look at the information here,\n\n101\n00:04:48.949 --> 00:04:53.350\nas it goes to tell me how to use\nthe command, it lays it all out for me.\n\n102\n00:04:53.350 --> 00:04:56.350\nAnd I can start to see it, and\nhere's actually that --help right here.\n\n103\n00:04:56.350 --> 00:04:59.840\nThat displays this help,\nand then it exits, right?\n\n104\n00:04:59.840 --> 00:05:04.020\nBut there's plenty of other\ncommands that I could've run.\n\n105\n00:05:04.020 --> 00:05:09.510\nAnd as I look down the list, I'll see -a,\n-b, -d, all of these are options.\n\n106\n00:05:09.510 --> 00:05:14.140\nAnd when I look at the very top,\nthat's where it gives me my actual syntax,\n\n107\n00:05:14.140 --> 00:05:16.070\nmy actual usage.\n\n108\n00:05:16.070 --> 00:05:20.800\nAnd the usage is made up of a couple of\ndifferent pieces in this case, right?\n\n109\n00:05:20.800 --> 00:05:25.090\nSo let me kinda show you the syntax here\nof how help documentation is written.\n\n110\n00:05:25.090 --> 00:05:28.810\nThat it starts by giving you the command,\nand\n\n111\n00:05:28.810 --> 00:05:32.910\nthen everything else that we need to\nprovide to make that command work.\n\n112\n00:05:32.910 --> 00:05:37.390\nIf it's in square brackets like this,\nthen it's an optional thing.\n\n113\n00:05:37.390 --> 00:05:39.500\nWe don't have to have it.\n\n114\n00:05:39.500 --> 00:05:43.300\nIf it's not in square brackets,\nthen you do have to have it.\n\n115\n00:05:43.300 --> 00:05:50.370\nSo the cp command has to have\na source file and a destination file.\n\n116\n00:05:50.370 --> 00:05:55.040\nIt's got to have those two things,\nor it doesn't work, all right?\n\n117\n00:05:55.040 --> 00:06:00.430\nThe options in -t, we can do this if\nwe want, we don't have to, right?\n\n118\n00:06:00.430 --> 00:06:07.600\nAnd then be careful because there's things\nlike a -T capital and a -t lower case.\n\n119\n00:06:07.600 --> 00:06:10.570\nAnd sometimes they do the same thing,\nbut a lot of times,\n\n120\n00:06:10.570 --> 00:06:12.560\nthey do two different things.\n\n121\n00:06:12.560 --> 00:06:15.710\nAnd if I scroll down here and\nlook at the help,\n\n122\n00:06:15.710 --> 00:06:20.600\nI can see that -t with a lowercase\nis specifying a target directory.\n\n123\n00:06:20.600 --> 00:06:24.639\nOops, sorry, and a -t with an upper\ncase is saying no target directory,\n\n124\n00:06:24.639 --> 00:06:27.860\nright, just treat it as a file,\nnot a directory.\n\n125\n00:06:27.860 --> 00:06:30.600\nTwo different things, they're\nactually the opposite of each other,\n\n126\n00:06:30.600 --> 00:06:32.870\nby making one capital and one lower case.\n\n127\n00:06:32.870 --> 00:06:35.540\nSo that's a big difference.\n\n128\n00:06:35.540 --> 00:06:39.160\nAnd we find that here in the help, okay?\n\n129\n00:06:39.160 --> 00:06:43.850\nNow this help is not written\nto be read like a book.\n\n130\n00:06:43.850 --> 00:06:46.650\nI don't say, boy,\nI wanna learn about the copy command.\n\n131\n00:06:46.650 --> 00:06:52.270\nLet me go run cp--help, and I'm just gonna\nread this from the beginning to the end.\n\n132\n00:06:52.270 --> 00:06:53.810\nThat's not what this is designed for.\n\n133\n00:06:53.810 --> 00:06:56.580\nThis is designed to be a quick reference,\nall right?\n\n134\n00:06:56.580 --> 00:07:00.230\nI'm trying if it, what was that little\ntag I needed to specify a target?\n\n135\n00:07:00.230 --> 00:07:02.647\n&gt;&gt; Is it capital T or\ncapital lower case t?\n\n136\n00:07:02.647 --> 00:07:06.547\n&gt;&gt; Yeah, and you can scan through this\nreally quick, find what you're looking\n\n137\n00:07:06.547 --> 00:07:10.130\nfor, and there it is,\nright there is that information, right?\n\n138\n00:07:10.130 --> 00:07:12.680\nAnd that was just by running --help.\n\n139\n00:07:12.680 --> 00:07:17.300\nOn some applications, it's actually not\n-- help, it will be -h, the old style.\n\n140\n00:07:17.300 --> 00:07:20.240\nIf I do that here,\nthat's an invalid option.\n\n141\n00:07:20.240 --> 00:07:22.930\nUnfortunately, this is not\nexactly standardized, so\n\n142\n00:07:22.930 --> 00:07:25.560\nnot every application\nfollows the same method.\n\n143\n00:07:25.560 --> 00:07:32.950\nIf I take the hostnamectl command and\nI run --help, I get the help.\n\n144\n00:07:32.950 --> 00:07:36.930\nAnd if I run -h, I get a help, right?\n\n145\n00:07:36.930 --> 00:07:38.340\nThis one supports both.\n\n146\n00:07:38.340 --> 00:07:43.941\nIt supports both modifications of -h,\nbut cp didn't, right?\n\n147\n00:07:43.941 --> 00:07:47.848\nSo you might have to stumble through this\na few times before you find the right one.\n\n148\n00:07:47.848 --> 00:07:52.536\nAnd where it gets a little tricky is\nwith cp, if I just type cp by itself,\n\n149\n00:07:52.536 --> 00:07:55.366\nit told me what to type, type cp--help.\n\n150\n00:07:55.366 --> 00:07:57.130\nhostnamectl, though,\n\n151\n00:07:57.130 --> 00:08:02.174\nif I just run hostnamectl It doesn't\nneed any command line arguments.\n\n152\n00:08:02.174 --> 00:08:05.040\nSo if I just run it,\nit runs and does it's thing.\n\n153\n00:08:05.040 --> 00:08:10.070\nSo I have to know, in the back of my mind,\nthat if I wanna figure out how this works,\n\n154\n00:08:10.070 --> 00:08:15.260\nI can run it, with --help or -h, or\nI might have to try them both, right?\n\n155\n00:08:15.260 --> 00:08:17.790\nAnd some applications go even crazier.\n\n156\n00:08:17.790 --> 00:08:19.472\nAnd they say, you know this is wild\n&gt;&gt; [LAUGH]\n\n157\n00:08:19.472 --> 00:08:20.382\n&gt;&gt; And they say you know what,\n\n158\n00:08:20.382 --> 00:08:21.850\nyou type question mark.\n\n159\n00:08:21.850 --> 00:08:26.170\nIf you do hostnamectl space ?,\nit will display the help.\n\n160\n00:08:26.170 --> 00:08:27.900\nWell, this one doesn't support that,\nmaybe it's a -?.\n\n161\n00:08:27.900 --> 00:08:31.840\nYou might have to try a few different\nthings before you hit on the winner, and\n\n162\n00:08:31.840 --> 00:08:33.750\nit just depends on who\nwrote that application.\n\n163\n00:08:33.750 --> 00:08:37.090\nWhich is a frustrating aspect\nof using this method for help.\n\n164\n00:08:37.090 --> 00:08:40.880\nSo this is not normally my go to\nwhen I need help, but it is there.\n\n165\n00:08:40.880 --> 00:08:44.590\nIt's built into a lot of commands and I\nwant you guys to be aware of it because if\n\n166\n00:08:44.590 --> 00:08:47.380\nyou know the command name and you're\njust trying to figure out the arguments,\n\n167\n00:08:47.380 --> 00:08:49.340\nthis is going to be a pretty\neasy way to do that.\n\n168\n00:08:49.340 --> 00:08:53.112\n&gt;&gt; And Don, I'm with you on that as far as\nthis my, I kind of have some familiarity\n\n169\n00:08:53.112 --> 00:08:56.010\nwith the command or\nwhatever it is I'm working with.\n\n170\n00:08:56.010 --> 00:08:57.676\nAnd I just need that quick reference.\n\n171\n00:08:57.676 --> 00:08:59.920\nYeah, let me just ask\n--help that really quickly.\n\n172\n00:08:59.920 --> 00:09:01.230\nThere, it was capital T.\n\n173\n00:09:01.230 --> 00:09:02.590\nThat's what I need to use.\n\n174\n00:09:02.590 --> 00:09:05.360\nBut what if I want a more exhaustive,\nhelp file,\n\n175\n00:09:05.360 --> 00:09:10.300\nsomething that is going to take me from\nsoup to nuts on how to use this operation?\n\n176\n00:09:10.300 --> 00:09:13.230\n&gt;&gt; All right, there are a few other\nways to get good documentation on this.\n\n177\n00:09:13.230 --> 00:09:18.230\nAnd the most commonly is using\nthe Unix manual system, okay.\n\n178\n00:09:18.230 --> 00:09:23.630\nThe manual system is basically a part of\nthe command that's called man, and when we\n\n179\n00:09:23.630 --> 00:09:27.930\nrun that, we can find detailed information\nabout, just about any command, right?\n\n180\n00:09:27.930 --> 00:09:33.200\nSo if I wanna learn more about cp, or\nI wanna learn more about pwd or one of\n\n181\n00:09:33.200 --> 00:09:38.650\nthese other commands, I can just type man,\nand then the name of the command, so cp.\n\n182\n00:09:38.650 --> 00:09:42.290\nI wanna see the manual page for cp.\n\n183\n00:09:42.290 --> 00:09:45.000\nAnd when I run that, here we go.\n\n184\n00:09:45.000 --> 00:09:46.340\nWe get output on the screen.\n\n185\n00:09:46.340 --> 00:09:48.820\nAnd I can see, here's the cp command.\n\n186\n00:09:48.820 --> 00:09:50.450\nHere's the options for it.\n\n187\n00:09:50.450 --> 00:09:51.640\nAnd, as I start scrolling down,\n\n188\n00:09:51.640 --> 00:09:55.910\nI can see all the other modifiers and\nadditional details.\n\n189\n00:09:55.910 --> 00:09:59.040\nAnd some of it is really descriptive,\nreally well documented.\n\n190\n00:09:59.040 --> 00:10:02.040\nSometimes they'll have examples\nof how you can run the command.\n\n191\n00:10:02.040 --> 00:10:02.850\nSometimes they don't.\n\n192\n00:10:02.850 --> 00:10:04.470\nSometimes it's much abbreviated.\n\n193\n00:10:04.470 --> 00:10:08.170\nIn fact, this really doesn't look that\nmuch different than the output that I got\n\n194\n00:10:08.170 --> 00:10:11.580\nwhen I ran cp--help, right?\n\n195\n00:10:11.580 --> 00:10:16.105\nSo this one, the authors didn't really\ngo too far into adding more to it.\n\n196\n00:10:16.105 --> 00:10:18.965\nBut you can see recommendations\nto other commands and\n\n197\n00:10:18.965 --> 00:10:24.635\nvarious other things we can use to find\nout information about this utility, right?\n\n198\n00:10:24.635 --> 00:10:29.798\nNow, when I look at this data, I'm pulling\nit up for any number of commands, right?\n\n199\n00:10:29.798 --> 00:10:32.975\nSo I can do manpwd for\npresent working directory, and\n\n200\n00:10:32.975 --> 00:10:34.347\nI can look at it's documentation.\n\n201\n00:10:34.347 --> 00:10:39.100\nOr manpostname CTL, and\nnow I'm looking at it's documentation.\n\n202\n00:10:39.100 --> 00:10:40.460\nAnd we can go through,\nand we can find out more.\n\n203\n00:10:40.460 --> 00:10:47.550\nNow, with hostnamectl, remember when\nI ran hostnamectl --help, I got this.\n\n204\n00:10:47.550 --> 00:10:49.000\nIt all fits on one screen.\n\n205\n00:10:49.000 --> 00:10:50.610\nJust a simple layout.\n\n206\n00:10:50.610 --> 00:10:52.980\nHere's the arguments we can use.\n\n207\n00:10:52.980 --> 00:10:55.070\nHere's the commands that are available.\n\n208\n00:10:55.070 --> 00:10:56.690\nThis is it, right?\n\n209\n00:10:56.690 --> 00:11:00.780\nBut when I run man hostnamectl and\nI pull up the man page,\n\n210\n00:11:00.780 --> 00:11:05.730\nthe manual,\nnow I get screens of data, all right?\n\n211\n00:11:05.730 --> 00:11:07.690\nWhere they really go through and\n\n212\n00:11:07.690 --> 00:11:11.970\nexplain exactly how each\nof these tags work, right?\n\n213\n00:11:11.970 --> 00:11:13.980\nAnd I say they explain exactly how.\n\n214\n00:11:13.980 --> 00:11:16.389\nSometimes it can be a little cryptic.\n\n215\n00:11:16.389 --> 00:11:19.486\nThe people that write these\nare done on volunteer basis, and\n\n216\n00:11:19.486 --> 00:11:22.474\nIT people are not necessarily\nthe most eloquent writers.\n\n217\n00:11:22.474 --> 00:11:25.174\n&gt;&gt; [LAUGH]\n&gt;&gt; [CROSSTALK]\n\n218\n00:11:25.174 --> 00:11:27.006\n&gt;&gt; And I've heard from a lot of people,\n\n219\n00:11:27.006 --> 00:11:30.256\nthey say, I want to contribute to\nLinux but I'm not a developer,\n\n220\n00:11:30.256 --> 00:11:32.520\nI'm not a programmer, I can't write code.\n\n221\n00:11:32.520 --> 00:11:35.050\nSo how can I contribute to the product?\n\n222\n00:11:35.050 --> 00:11:38.290\nAnd man pages are great way to do it.\n\n223\n00:11:38.290 --> 00:11:42.749\nIf you are not a programmer, but you're\ngood in English, or you can talk to people\n\n224\n00:11:42.749 --> 00:11:47.545\nand people can understand you, then that's\na gift, that's a talent in and of itself.\n\n225\n00:11:47.545 --> 00:11:49.577\nAnd you can go and\ncontribute documentation.\n\n226\n00:11:49.577 --> 00:11:52.500\nAnd let me tell you that the developers\nlove it when people do that.\n\n227\n00:11:52.500 --> 00:11:57.640\nIt's a great way to contribute to the open\nsource movement, so keep that in mind.\n\n228\n00:11:57.640 --> 00:12:01.290\nBut I can really get detailed\ninformation here on exactly what\n\n229\n00:12:01.290 --> 00:12:05.050\nI need to know about this\nparticular program, how it works.\n\n230\n00:12:05.050 --> 00:12:06.200\nAnd down at the bottom,\n\n231\n00:12:06.200 --> 00:12:10.530\nI'll usually see references to other\ncommands that get tied into it.\n\n232\n00:12:10.530 --> 00:12:12.227\nSo, for example, I ran hostnamectl.\n\n233\n00:12:12.227 --> 00:12:14.940\nThere's also the host name command.\n\n234\n00:12:14.940 --> 00:12:17.130\nWell, that's pretty similar isn't it,\nright?\n\n235\n00:12:17.130 --> 00:12:21.580\nIf I run hostnamectl, I see that my\ncomputer is called Don's laptop.\n\n236\n00:12:21.580 --> 00:12:24.110\nBut I also see a lot of other stuff\nin here like that I'm running\n\n237\n00:12:24.110 --> 00:12:25.100\nRed Hat Enterprise Linux.\n\n238\n00:12:25.100 --> 00:12:26.200\nI see all that stuff.\n\n239\n00:12:26.200 --> 00:12:31.600\nBut if I run host name by itself,\nI just get the host name.\n\n240\n00:12:31.600 --> 00:12:33.790\nWell, when would I need that?\n\n241\n00:12:33.790 --> 00:12:37.550\nMaybe I'm running some kind of script\nthat just needs to query the host name.\n\n242\n00:12:37.550 --> 00:12:40.420\nIf I use the hostname command,\nI just get a hostname.\n\n243\n00:12:40.420 --> 00:12:43.980\nIf I do a hostnamectl,\nI might have to use a cut command or\n\n244\n00:12:43.980 --> 00:12:47.580\nsomething to be able to cut out just\nthe part of the data that I want.\n\n245\n00:12:47.580 --> 00:12:50.200\nAnd it's a lot more work\nthan if I just use hostname.\n\n246\n00:12:50.200 --> 00:12:54.690\nSo I can discover additional commands\nby using the manual pages and\n\n247\n00:12:54.690 --> 00:12:56.060\nfinding that out.\n\n248\n00:12:56.060 --> 00:13:01.970\nNow, you might have noticed at the bottom\nof that when I looked at hostnamectl and\n\n249\n00:13:01.970 --> 00:13:06.632\nI was down at the bottom, and it was\ntelling me about the host name command.\n\n250\n00:13:06.632 --> 00:13:11.877\nWhich, there it is,\nsee how there's this hostname(1)?\n\n251\n00:13:11.877 --> 00:13:14.940\nAnd then there's a hostnname(5).\n\n252\n00:13:14.940 --> 00:13:15.488\n&gt;&gt; What's that about?\n\n253\n00:13:15.488 --> 00:13:16.740\n&gt;&gt; Yeah, what's that about?\n\n254\n00:13:16.740 --> 00:13:19.720\nWell, these numbers on the backside of it,\n\n255\n00:13:19.720 --> 00:13:23.240\nidentify what kind of man page\nwe're dealing with, all right?\n\n256\n00:13:23.240 --> 00:13:27.610\nThere's actually a number of different,\nnine, nine different types of man pages,\n\n257\n00:13:27.610 --> 00:13:29.970\nso you can see one through nine.\n\n258\n00:13:29.970 --> 00:13:34.400\nFive is what we're normally seeing, sorry,\none is what we're normally seeing, right?\n\n259\n00:13:34.400 --> 00:13:37.610\nSo you have one here for system d and\nhostname d, one is a normal,\n\n260\n00:13:37.610 --> 00:13:38.645\nexecutable command.\n\n261\n00:13:38.645 --> 00:13:42.200\nFive is a file format.\n\n262\n00:13:43.220 --> 00:13:47.290\nSo there's a file on my\nsystem called host name.\n\n263\n00:13:47.290 --> 00:13:50.490\nBut there's a command on\nmy system called hostname.\n\n264\n00:13:50.490 --> 00:13:52.647\nAnother example that we passwd, right?\n\n265\n00:13:52.647 --> 00:13:56.516\nI can run the passwd command if I\nwanna change my password, right?\n\n266\n00:13:56.516 --> 00:14:00.120\nAnd so now, I can go in and\nI can change what my password is.\n\n267\n00:14:00.120 --> 00:14:06.776\nBut there is also the /etc/passwd file\nwhere the accounts are stored, right?\n\n268\n00:14:06.776 --> 00:14:09.680\nTwo different things,\nthey just happen to have the same name.\n\n269\n00:14:09.680 --> 00:14:15.347\nWell, the passwd command,\nthat would be the man page for passwd1.\n\n270\n00:14:15.347 --> 00:14:18.660\nAnd the passwd file would be passwd5.\n\n271\n00:14:18.660 --> 00:14:23.400\nSo if I were to pull up the man page for\npasswd, which one do I get?\n\n272\n00:14:23.400 --> 00:14:26.440\nWell, they go in order of the number,\nso it starts with 1.\n\n273\n00:14:26.440 --> 00:14:30.100\nIf there's an executable, they assume\nthat's the information you want.\n\n274\n00:14:30.100 --> 00:14:34.546\nSo when I run man passwd, right up\nat the very top-left, right there,\n\n275\n00:14:34.546 --> 00:14:36.485\nsee how it says PASSWD(1)?\n\n276\n00:14:36.485 --> 00:14:40.812\nThat lets me know I'm looking at\nthe executables documentation.\n\n277\n00:14:40.812 --> 00:14:43.881\nAnd the other big hint is this\nwhol- [CROSSTALK] Run the command.\n\n278\n00:14:43.881 --> 00:14:49.140\nSo, I see that, and as I read through it,\nI'm learning about the PASSWD command.\n\n279\n00:14:49.140 --> 00:14:50.130\nThat's great.\n\n280\n00:14:50.130 --> 00:14:53.880\nBut down here, we'll find where\nit will reference other things.\n\n281\n00:14:53.880 --> 00:14:55.450\nAnd, that's interesting.\n\n282\n00:14:55.450 --> 00:14:58.810\nThe passwd file, here it is.\n\n283\n00:14:58.810 --> 00:15:01.710\nA different one but\nit is referencing that this file exists.\n\n284\n00:15:01.710 --> 00:15:05.830\nIt's actually not linking to passwd(5)\nat all, which is interesting.\n\n285\n00:15:05.830 --> 00:15:06.810\nYou'd think that it would.\n\n286\n00:15:06.810 --> 00:15:07.750\nBut I know it's there.\n\n287\n00:15:09.030 --> 00:15:10.840\nHow do I view that one?\n\n288\n00:15:10.840 --> 00:15:14.300\nWell, when you use that man command,\nit's defaulting to\n\n289\n00:15:14.300 --> 00:15:18.990\nwhatever the lowest number available is,\none is a command that's what we expect.\n\n290\n00:15:18.990 --> 00:15:19.570\nI wanna see five.\n\n291\n00:15:19.570 --> 00:15:23.220\nAnd so if I come in here and\n\n292\n00:15:23.220 --> 00:15:27.970\nsay man 5 passwd, that's gonna tell it\nI don't wanna learn about the program,\n\n293\n00:15:27.970 --> 00:15:31.910\nthe executable, I wanna learn about\nthe file, tell me about this passwd file.\n\n294\n00:15:31.910 --> 00:15:35.743\nAnd when I run that,\nnow I can see up here, this is PASSWD5,\n\n295\n00:15:35.743 --> 00:15:41.360\nit tells me it's the PASSWD file, and\nthen it goes to describe the file,\n\n296\n00:15:41.360 --> 00:15:45.600\nwhat it does, what it used for, how it's\nformatted, how things are arranged, and\n\n297\n00:15:45.600 --> 00:15:48.340\nI can learn all about that file,\nall right?\n\n298\n00:15:48.340 --> 00:15:49.850\nSame thing with hostname.\n\n299\n00:15:49.850 --> 00:15:53.983\nIf I do a man 5 hostname,\nI can then learn about that file.\n\n300\n00:15:53.983 --> 00:15:56.006\nIt's slash etc slash hostname.\n\n301\n00:15:56.006 --> 00:15:57.053\nHere's what it does.\n\n302\n00:15:57.053 --> 00:15:58.382\nHere's how it's formatted.\n\n303\n00:15:58.382 --> 00:16:01.835\nAnd here's some other places you\ncan look to learn more About it.\n\n304\n00:16:01.835 --> 00:16:03.779\nSo that's a big part of it.\n\n305\n00:16:03.779 --> 00:16:08.120\nThe other man page types\nare a lot less common.\n\n306\n00:16:08.120 --> 00:16:11.040\nNotice on host name,\nthere's actually a hostname(7).\n\n307\n00:16:11.040 --> 00:16:15.590\nWell, 1 and 5 are the most common,\n1 is programs, 5 are files.\n\n308\n00:16:15.590 --> 00:16:20.353\nSome of the other ones are like 7 is\na overview convention or miscellaneous, so\n\n309\n00:16:20.353 --> 00:16:22.996\nadditional data about that host name file.\n\n310\n00:16:22.996 --> 00:16:27.780\nAnd so if I do a man 7 hostname, now I\ncan come in and I circle under there.\n\n311\n00:16:27.780 --> 00:16:32.571\nHost Name Resolution description, so the\nhost name file is used in DNS resolution,\n\n312\n00:16:32.571 --> 00:16:34.261\nso how does it resolve a name?\n\n313\n00:16:34.261 --> 00:16:35.920\nAnd then it goes through and\nit gives out an example.\n\n314\n00:16:35.920 --> 00:16:39.540\nThere's actually a decent narrative\nhere on how that one works.\n\n315\n00:16:39.540 --> 00:16:44.320\nSo you can learn a ton\nwith the man commands,\n\n316\n00:16:44.320 --> 00:16:45.640\nif you know the name\nof the program to run.\n\n317\n00:16:45.640 --> 00:16:47.040\nIf you know what to look for,\nyou can go in and\n\n318\n00:16:47.040 --> 00:16:50.140\nyou can learn everything there is\nabout that command, about that file,\n\n319\n00:16:50.140 --> 00:16:52.940\nabout that convention or whatever\nit is that you're trying to learn.\n\n320\n00:16:52.940 --> 00:16:55.660\n&gt;&gt; Don, it really seems like\nman is it's own command.\n\n321\n00:16:55.660 --> 00:16:59.020\nAnd I'm assuming that means there's\nit's own command structure,\n\n322\n00:16:59.020 --> 00:17:00.710\nand help file that goes along with it.\n\n323\n00:17:00.710 --> 00:17:03.536\n&gt;&gt; You know there is,\nif you do a man man and\n\n324\n00:17:03.536 --> 00:17:07.497\nthat'll pull up the manual page for\nthe manual pager.\n\n325\n00:17:07.497 --> 00:17:11.170\n[LAUGH] And so it lays it out here with\nall the various things you can do with it.\n\n326\n00:17:11.170 --> 00:17:13.045\nAnd this is a great place to come in and\n\n327\n00:17:13.045 --> 00:17:15.415\nfind the nine levels\nthat I was talking about.\n\n328\n00:17:15.415 --> 00:17:19.590\nSo I can see 1 is an executable,\n5 is a file format, 7 is miscellaneous.\n\n329\n00:17:19.590 --> 00:17:21.016\nHere they're laid out, so\n\n330\n00:17:21.016 --> 00:17:25.000\nif you ever wanna figure out what those\nnumbers are man man will tell you.\n\n331\n00:17:25.000 --> 00:17:26.900\n&gt;&gt; Well, are there any other types of\n\n332\n00:17:27.950 --> 00:17:32.060\nhelp file systems that we can have\navailable in our Linux software system?\n\n333\n00:17:32.060 --> 00:17:36.360\n&gt;&gt; Sure, so there was a movement\na few years ago to replace man.\n\n334\n00:17:36.360 --> 00:17:40.036\nI say a few years, it's probably\nbeen like five or seven years now,\n\n335\n00:17:40.036 --> 00:17:44.150\nto replace because the man page\ndoesn't do cross-linking very well.\n\n336\n00:17:44.150 --> 00:17:47.207\nSo, for example,\nwhen I was in the passwd file,\n\n337\n00:17:47.207 --> 00:17:51.620\nit didn't link back to the passwd\nexecutable, for whatever reason.\n\n338\n00:17:51.620 --> 00:17:54.100\nSo that was a link that should\nhave been there that wasn't.\n\n339\n00:17:54.100 --> 00:17:55.110\nSo there was a movement for\n\n340\n00:17:55.110 --> 00:17:59.480\na while there to replace man with\na new command, a command called info.\n\n341\n00:18:00.570 --> 00:18:06.345\nInfo is almost identical to man, except it\nhas a better way of interrelating commands\n\n342\n00:18:06.345 --> 00:18:09.660\nand files and other things to make it\neasier to find stuff that's related.\n\n343\n00:18:09.660 --> 00:18:11.470\nSo this is supposed to be\nthe logical successor.\n\n344\n00:18:11.470 --> 00:18:14.180\nIt's actually got they\ncall it deep linking,\n\n345\n00:18:14.180 --> 00:18:19.680\nwhere they link one thing to another\nby whatever connections they have.\n\n346\n00:18:19.680 --> 00:18:24.130\nIt sort of caught on in that almost all\ndocumentations been ported over to info,\n\n347\n00:18:24.130 --> 00:18:26.370\nbut most people still don't\nuse it as a matter of course.\n\n348\n00:18:26.370 --> 00:18:29.650\nJust because it's been the man command for\n30 years now, so it's hard for\n\n349\n00:18:29.650 --> 00:18:30.960\npeople to make that change.\n\n350\n00:18:30.960 --> 00:18:34.020\nBut the info command is there, and you\nmight have noticed when I had the man page\n\n351\n00:18:34.020 --> 00:18:40.070\nfor hostnamectl up, down at the bottom\nwhere it had the see also stuff.\n\n352\n00:18:40.070 --> 00:18:42.427\nSo here's see also.\n\n353\n00:18:42.427 --> 00:18:43.810\nMaybe I was wrong on this one.\n\n354\n00:18:43.810 --> 00:18:46.420\nThere was one of them that I pulled up\nearlier in the show where it actually said\n\n355\n00:18:46.420 --> 00:18:49.920\nhey if you wanna learn more about this you\nshould look at the info command for it.\n\n356\n00:18:49.920 --> 00:18:55.390\nAnd so you'll see that sometimes where\nit will reference an info command.\n\n357\n00:18:55.390 --> 00:18:56.840\nLet me show you guys a quick trick.\n\n358\n00:18:59.320 --> 00:19:00.750\nAnd I was hoping to spot it here.\n\n359\n00:19:00.750 --> 00:19:05.810\nWhen you're in the man page, you can hit\nthe forward slash key on your keyboard and\n\n360\n00:19:05.810 --> 00:19:08.260\nyou can type a word and\nit will look to find that word.\n\n361\n00:19:08.260 --> 00:19:11.850\nSo if I wanted to look for info, I could\njust type that and it will look for it.\n\n362\n00:19:11.850 --> 00:19:14.370\nAnd yeah, I got a couple hits for\nthose are the right ones.\n\n363\n00:19:14.370 --> 00:19:17.112\nAnd you can just keep hitting / and\nit'll keep searching for\n\n364\n00:19:17.112 --> 00:19:20.143\nthat term until hopefully you'll\nfind what you're looking for.\n\n365\n00:19:20.143 --> 00:19:22.820\nAnd so, it must not have been that one,\nI think it was host name command.\n\n366\n00:19:22.820 --> 00:19:24.270\nThere's one of them that\npulled up earlier and\n\n367\n00:19:24.270 --> 00:19:26.430\nI won't bore us by hunting too much more.\n\n368\n00:19:26.430 --> 00:19:29.990\nBut it said like you may want\nto see these other commands and\n\n369\n00:19:29.990 --> 00:19:31.140\nthere's the info command.\n\n370\n00:19:31.140 --> 00:19:37.204\nSo if I do info hostnamectl,\nit's gonna pull up the info page.\n\n371\n00:19:37.204 --> 00:19:39.501\nAnd the info page is\na little bit different,\n\n372\n00:19:39.501 --> 00:19:43.165\nyou'll notice that it's got a little\nstatus bar down at the bottom and\n\n373\n00:19:43.165 --> 00:19:46.600\nI can now scroll through and\nlook at this information here.\n\n374\n00:19:46.600 --> 00:19:49.840\nAnd as we go through we can find out and\n\n375\n00:19:49.840 --> 00:19:54.618\nactually what is showing here\nis the help file or info.\n\n376\n00:19:54.618 --> 00:19:59.060\nAnd oops [LAUGH] I'm screwing it up here.\n\n377\n00:19:59.060 --> 00:20:03.785\nIt's really like a text web browser,\nas you move through you find links and\n\n378\n00:20:03.785 --> 00:20:04.390\nthings.\n\n379\n00:20:04.390 --> 00:20:07.061\nAnd if you put your cursor on there and\npress Enter,\n\n380\n00:20:07.061 --> 00:20:09.570\nsee it's actually following that link.\n\n381\n00:20:09.570 --> 00:20:12.237\nIt's kinda like the old links web browser,\nso this are all hyperlink,\n\n382\n00:20:12.237 --> 00:20:14.341\nthey're interconnected, so\nyou can browse through.\n\n383\n00:20:14.341 --> 00:20:18.300\nAnd I've gotten way away from\nhostnamectl at this point.\n\n384\n00:20:18.300 --> 00:20:22.910\nBut the info subsystem was supposed to\nbe that new documentation and who knows,\n\n385\n00:20:22.910 --> 00:20:24.650\nmaybe a few years from\nnow this will take over.\n\n386\n00:20:24.650 --> 00:20:26.710\nBut the reality is,\nif we want link documentation like this,\n\n387\n00:20:26.710 --> 00:20:28.050\nyou go to the vendor's website, [LAUGH]\n&gt;&gt; [LAUGH]\n\n388\n00:20:28.050 --> 00:20:29.730\n&gt;&gt; And you pull it up from there, and\n\n389\n00:20:29.730 --> 00:20:30.450\nthere you go.\n\n390\n00:20:30.450 --> 00:20:34.139\nBut we can come through and find all\nsorts of good information here, and\n\n391\n00:20:34.139 --> 00:20:36.980\nit is all cross-linked and\nwell documented and so on.\n\n392\n00:20:36.980 --> 00:20:41.970\nSo as you go through, that's the way\nthat this stuff is designed to work.\n\n393\n00:20:41.970 --> 00:20:44.710\nAnd you'll see here there's\ndocumentation not just for commands, but\n\n394\n00:20:44.710 --> 00:20:46.570\nthe GNU C library.\n\n395\n00:20:46.570 --> 00:20:50.190\nHere's all these different functions and\ncalls that we can make and\n\n396\n00:20:50.190 --> 00:20:51.640\nthen other commands that we keep going.\n\n397\n00:20:51.640 --> 00:20:55.649\nYou'll find a lot of stuff kind of buried\nin here depending on what it is you're\n\n398\n00:20:55.649 --> 00:20:56.397\ntrying to do.\n\n399\n00:20:56.397 --> 00:21:00.077\nNow, do know that no everything\nhas documentation in here yet,\n\n400\n00:21:00.077 --> 00:21:04.630\nit is still kind of an evolving thing,\nthat we'll see change over time.\n\n401\n00:21:04.630 --> 00:21:08.560\nBut it is available and\nit is a navigable thing,\n\n402\n00:21:08.560 --> 00:21:11.225\nthat you find something,\npresented around it, you navigate into it,\n\n403\n00:21:11.225 --> 00:21:14.600\nand now you are learning more about\nwhatever that particular topic is.\n\n404\n00:21:14.600 --> 00:21:16.080\nSo the info command is available.\n\n405\n00:21:16.080 --> 00:21:19.800\nIf you wanna learn more about it,\nyou can do info info.\n\n406\n00:21:19.800 --> 00:21:23.610\nAnd pull up that, and start to see\na little bit more about what it is,\n\n407\n00:21:23.610 --> 00:21:26.100\nand how it's designed to work, and so on.\n\n408\n00:21:26.100 --> 00:21:28.480\nSo that's the info command.\n\n409\n00:21:28.480 --> 00:21:30.620\nI don't use it terribly often,\nmost people don't, but it is there, so\n\n410\n00:21:30.620 --> 00:21:31.890\nI wanted you to be aware of it.\n\n411\n00:21:31.890 --> 00:21:35.820\n&gt;&gt; Well Don, I know you got one more help\ntool for us, slated for this episode,\n\n412\n00:21:35.820 --> 00:21:37.720\nlet's just go ahead and\njust dive right into that.\n\n413\n00:21:37.720 --> 00:21:41.790\n&gt;&gt; All right so there is a problem here,\nthe man command, and\n\n414\n00:21:41.790 --> 00:21:46.170\neven the info command assumes that we\nknow the command that we're looking for.\n\n415\n00:21:46.170 --> 00:21:48.540\nAnd I'll tell you guys my memory\nis not what it used to be,\n\n416\n00:21:48.540 --> 00:21:51.970\nand there's plenty of times where I'm\nlike man I wanna change my default shell,\n\n417\n00:21:53.170 --> 00:21:54.620\nI can't remember what the command is.\n\n418\n00:21:54.620 --> 00:21:57.197\nSo how can I pull up the help\ndocumentation if I don't even know\n\n419\n00:21:57.197 --> 00:21:58.395\nwhat the command is called.\n\n420\n00:21:58.395 --> 00:22:02.098\nWell man isn't gonna help me, info\nmaybe cuz info I could kind of browse,\n\n421\n00:22:02.098 --> 00:22:05.293\nmaybe I could stumble upon it,\nbut it would take me a long time.\n\n422\n00:22:05.293 --> 00:22:10.334\nSo there is another\ncommand called apropos,\n\n423\n00:22:10.334 --> 00:22:13.700\na-p-r-o-p-o-s.\n\n424\n00:22:13.700 --> 00:22:17.230\nAnd one those are apropos or\nhowever you're supposed to say it.\n\n425\n00:22:17.230 --> 00:22:20.598\nIt will let you search the help\ndocumentation for a term.\n\n426\n00:22:20.598 --> 00:22:24.694\nSo I can say like, I wanna change\nmy shell, I can't remember what\n\n427\n00:22:24.694 --> 00:22:29.625\nthe command is, but I'm sure it involves\na shell, so let me do apropos shell.\n\n428\n00:22:29.625 --> 00:22:33.846\nAnd when I run that it's gonna\ngive me a list of every command\n\n429\n00:22:33.846 --> 00:22:36.470\nthat hit on that word shell.\n\n430\n00:22:36.470 --> 00:22:41.320\nAnd as I look, a lot these are not what I\nwant, end user shell, get user shell, and\n\n431\n00:22:41.320 --> 00:22:43.590\na lot of these are like type three.\n\n432\n00:22:43.590 --> 00:22:46.061\nI'm looking for a command, I'm looking for\nsomething that's a type one, so\n\n433\n00:22:46.061 --> 00:22:46.896\nI can kinda ignore those.\n\n434\n00:22:46.896 --> 00:22:51.569\nBut as we start scrolling down I\ncan hopefully find right here,\n\n435\n00:22:51.569 --> 00:22:54.690\nchsh, change your log in shell.\n\n436\n00:22:54.690 --> 00:22:58.480\nSo I didn't remember the name of\nthe command, but now I've found it.\n\n437\n00:22:58.480 --> 00:23:00.990\nAnd once I've found it\nthen I can use man or\n\n438\n00:23:00.990 --> 00:23:05.120\ninfo to go in and look at the command and\nfigure out what's going on there.\n\n439\n00:23:05.120 --> 00:23:09.060\nSo I can say man cshs and\nnow I actually get what I wanted.\n\n440\n00:23:09.060 --> 00:23:13.470\nBut that apropos is really handy for\nfiguring stuff out.\n\n441\n00:23:13.470 --> 00:23:17.871\nI wanna add a new user account,\nso I might do apropos user.\n\n442\n00:23:17.871 --> 00:23:21.572\nAnd so when I run that I start\ngetting all these list of commands and\n\n443\n00:23:21.572 --> 00:23:22.860\nright there user add.\n\n444\n00:23:22.860 --> 00:23:25.930\nYou gotta nice short description\nnot a big long description or\n\n445\n00:23:25.930 --> 00:23:29.140\nyour crazy terminology just\ncreate a new user account.\n\n446\n00:23:29.140 --> 00:23:32.047\nAnd I probably could have been\na little more specific and\n\n447\n00:23:32.047 --> 00:23:36.420\nsaid like I wanna add a user and now it\ntries to find it a little bit better.\n\n448\n00:23:36.420 --> 00:23:39.215\nBut sometimes less is more.\n\n449\n00:23:39.215 --> 00:23:42.209\nSo by saying add user it might find\nthings that use the word add, but\n\n450\n00:23:42.209 --> 00:23:45.330\nnot the word user and now I've made\nmy results a little more complex.\n\n451\n00:23:45.330 --> 00:23:48.140\nSo usually you wanna provide the minimum\npossible here when you search\n\n452\n00:23:48.140 --> 00:23:49.300\nfor a command.\n\n453\n00:23:49.300 --> 00:23:54.898\nIf I wanna change my network interfaces\nconfiguration, I might do apropos network.\n\n454\n00:23:54.898 --> 00:23:57.832\nAnd now I get a list of\ncommands that hit on network.\n\n455\n00:23:57.832 --> 00:24:01.047\nAnd I can sift through these and\nboy that's a lot of commands there.\n\n456\n00:24:01.047 --> 00:24:03.149\nBut you know many of them are type three.\n\n457\n00:24:03.149 --> 00:24:05.940\nSo I can ignore those,\nI'm looking at type ones.\n\n458\n00:24:05.940 --> 00:24:08.160\nSo I can come down and find the type ones.\n\n459\n00:24:08.160 --> 00:24:09.850\nI could even, to filter,\n\n460\n00:24:09.850 --> 00:24:14.190\nI think, if I remember right apropos\nactually has a way to filter that.\n\n461\n00:24:14.190 --> 00:24:17.570\nSo, if you do man apropos you\ncan find out it's information.\n\n462\n00:24:17.570 --> 00:24:21.600\nAnd you can filter in here by the type,\nthere's a operand for\n\n463\n00:24:21.600 --> 00:24:23.170\nthat I can't remember what it is though.\n\n464\n00:24:23.170 --> 00:24:25.775\nSo that you can say like,\njust show me the type ones.\n\n465\n00:24:26.970 --> 00:24:30.693\nFor me sometimes I don't remember these\nthings cuz I just cheat around it.\n\n466\n00:24:30.693 --> 00:24:33.088\n&gt;&gt; [LAUGH]\n&gt;&gt; Like, cuz I'll do a apropos network and\n\n467\n00:24:33.088 --> 00:24:34.410\nthen I'll just like grip.\n\n468\n00:24:34.410 --> 00:24:37.250\n&gt;&gt; Exactly.\n&gt;&gt; for one or something,\n\n469\n00:24:37.250 --> 00:24:38.700\nI gotta skip those.\n\n470\n00:24:40.180 --> 00:24:42.740\nAnd by doing it that way now\nI just find the type ones.\n\n471\n00:24:42.740 --> 00:24:44.340\nAnd so it's a little bit of a cheat.\n\n472\n00:24:44.340 --> 00:24:48.120\nBut there is actually a command line\noperator that'll do that as well.\n\n473\n00:24:48.120 --> 00:24:51.660\nBut here I'm seeing executables\nthat involve the network.\n\n474\n00:24:51.660 --> 00:24:55.240\nAnd so I can look and start to spot and\ntry and find what I'm looking for.\n\n475\n00:24:55.240 --> 00:24:57.210\nNow actually,\nthis is kind of an interesting example.\n\n476\n00:24:57.210 --> 00:24:59.920\nBecause, none of these\nactually do what I want.\n\n477\n00:24:59.920 --> 00:25:01.500\nWell, I guess this is\nthe network manager stuff.\n\n478\n00:25:01.500 --> 00:25:02.760\nThat would do it.\n\n479\n00:25:02.760 --> 00:25:03.800\n&gt;&gt; Yeah.\n\n480\n00:25:03.800 --> 00:25:06.050\n&gt;&gt; But the IP command is not showing up.\n\n481\n00:25:06.050 --> 00:25:08.530\nThe IF Config command is not showing up.\n\n482\n00:25:08.530 --> 00:25:12.370\nSo, some that I know would work\nare not here in this list.\n\n483\n00:25:12.370 --> 00:25:14.130\nSo, it's not a perfect system.\n\n484\n00:25:14.130 --> 00:25:15.670\nYou have got to kind of work with it.\n\n485\n00:25:15.670 --> 00:25:16.650\nYou might have to search for\n\n486\n00:25:16.650 --> 00:25:19.150\na couple of different terms before you\nfind the command that you're looking for.\n\n487\n00:25:19.150 --> 00:25:23.050\nBut if you can't remember the name of\nthe command, Apropos, it'll save you,\n\n488\n00:25:23.050 --> 00:25:27.370\nit'll help you find that command, get in\nthere, and start to locate what you want.\n\n489\n00:25:27.370 --> 00:25:31.110\n&gt;&gt; Now Don, our chatroom actually shouted\nout with a little bit of a neat thing, and\n\n490\n00:25:31.110 --> 00:25:33.510\njust typing the word\nhelp is an interesting,\n\n491\n00:25:33.510 --> 00:25:35.710\nI don't know if you've ever done it,\nI never have before.\n\n492\n00:25:35.710 --> 00:25:37.370\nIf you type help you get this.\n\n493\n00:25:37.370 --> 00:25:40.790\n&gt;&gt; So this is actually a Shell built in,\nand it's a great way,\n\n494\n00:25:40.790 --> 00:25:42.530\nif you're using different shells.\n\n495\n00:25:42.530 --> 00:25:45.130\nSo if I'm using zsh or bash or whatever.\n\n496\n00:25:45.130 --> 00:25:45.930\nWe can run help and\n\n497\n00:25:45.930 --> 00:25:48.580\nyou can see some some of the commands\nare kind built into that shell.\n\n498\n00:25:48.580 --> 00:25:51.000\nWe will about those a little\nbit in the last one,\n\n499\n00:25:51.000 --> 00:25:53.230\nI mentioned going to\nthe shell documentation but\n\n500\n00:25:53.230 --> 00:25:57.190\nthis is a great way to see it,\nyou will see like aliases, dots, or colon,\n\n501\n00:25:57.190 --> 00:26:01.678\nargument but you will see other commands\nhere that we use all the time like exit.\n\n502\n00:26:01.678 --> 00:26:03.430\nI run exit at all the time.\n\n503\n00:26:03.430 --> 00:26:07.360\nIt's not a binary that's on the system\nthough, if I look for that command,\n\n504\n00:26:07.360 --> 00:26:10.310\nif I look for exist it's not on\nthe system, it's built in the Shell so\n\n505\n00:26:10.310 --> 00:26:11.520\nI could see it right there.\n\n506\n00:26:11.520 --> 00:26:14.279\nSo if you wanna see commands like that,\nthat are available the help commands\n\n507\n00:26:14.279 --> 00:26:17.440\nare a great way to see that and spot it,\nand most of those do have man pages\n\n508\n00:26:17.440 --> 00:26:21.560\nthough, so if you do like man exist,\nyou'll find documentation and here to see.\n\n509\n00:26:21.560 --> 00:26:25.190\nSee up here, it doesn't say exit 1,\nit says bash built in 1.\n\n510\n00:26:25.190 --> 00:26:27.542\nAnd so,\nI can see the information there for\n\n511\n00:26:27.542 --> 00:26:30.890\nall the built ins lumped into\nthe one convenient file.\n\n512\n00:26:30.890 --> 00:26:32.639\nIt's actually not convenient at all,\n\n513\n00:26:32.639 --> 00:26:35.320\nwhich is where that search\ncommand comes in really handy.\n\n514\n00:26:35.320 --> 00:26:36.760\nThis is a big file here.\n\n515\n00:26:36.760 --> 00:26:38.300\n&gt;&gt; It's quite large.\n\n516\n00:26:38.300 --> 00:26:40.860\nBut key thing here,\neverybody forgets stuff, right?\n\n517\n00:26:40.860 --> 00:26:41.760\nEspecially in the command line,\n\n518\n00:26:41.760 --> 00:26:44.480\nthere is a lot of the commands\nthat are used every single day.\n\n519\n00:26:44.480 --> 00:26:47.020\nAnd you'll remember those, right?\n\n520\n00:26:47.020 --> 00:26:50.090\nBut there's commands that you don't run\neveryday that you run once a month, or\n\n521\n00:26:50.090 --> 00:26:52.730\neven once a year,\nmaybe you just run it one time.\n\n522\n00:26:52.730 --> 00:26:54.470\nAnd those are ones you're\nnot gonna remember.\n\n523\n00:26:54.470 --> 00:26:56.440\nAnd so\nthat's where Apropos comes in handy.\n\n524\n00:26:56.440 --> 00:26:57.580\nAfter that man and\n\n525\n00:26:57.580 --> 00:27:00.550\ninfo will get you into the documentation,\nyou can learn what you need.\n\n526\n00:27:00.550 --> 00:27:04.441\nAnd if all of those fail,\nthen there's Google right, [CROSSTALK].\n\n527\n00:27:04.441 --> 00:27:07.550\nSo, don't shy away from the online\nresources that are out there.\n\n528\n00:27:07.550 --> 00:27:10.580\nA lot of the vendors have great\ndocumentation on their websites,\n\n529\n00:27:10.580 --> 00:27:13.420\neven if you don't run it,\nthe Arch Linux wiki,\n\n530\n00:27:13.420 --> 00:27:18.510\nis like some of the best documentation\nthat's available I go to it all the time.\n\n531\n00:27:18.510 --> 00:27:19.607\nAnd I hate-\n&gt;&gt; I don't know\n\n532\n00:27:19.607 --> 00:27:20.306\n[CROSSTALK] [LAUGH]\n&gt;&gt; Linux.\n\n533\n00:27:20.306 --> 00:27:22.190\nIt's a pain to run that operating system.\n\n534\n00:27:22.190 --> 00:27:23.500\nBut their documentation is great.\n\n535\n00:27:23.500 --> 00:27:26.490\nSo, great place to go and\nfind that information.\n\n536\n00:27:26.490 --> 00:27:27.920\nJust use whatever resources available.\n\n537\n00:27:27.920 --> 00:27:29.160\n&gt;&gt; That's right.\nThere's also the Linux\n\n538\n00:27:29.160 --> 00:27:30.250\ndocumentation projects.\n\n539\n00:27:30.250 --> 00:27:32.200\nVery nicely put together.\n\n540\n00:27:32.200 --> 00:27:33.950\nLot of documentation there as well.\n\n541\n00:27:33.950 --> 00:27:38.458\nWell, Don, I'd like to thank you for\nhelping me help you help them.\n\n542\n00:27:38.458 --> 00:27:38.990\n&gt;&gt; [LAUGH]\n&gt;&gt; Help [LAUGH].\n\n543\n00:27:38.990 --> 00:27:39.990\nLot of help going on today.\n\n544\n00:27:39.990 --> 00:27:42.570\nAnd that's sort of what it's all about.\n\n545\n00:27:42.570 --> 00:27:44.380\nWe got a lot of resources\nthat are ready so\n\n546\n00:27:44.380 --> 00:27:47.270\nthat when do forget where that\ncommand is or we're just not familiar.\n\n547\n00:27:47.270 --> 00:27:49.650\nSomething new we've just downloaded and\ninstalled.\n\n548\n00:27:49.650 --> 00:27:51.160\nAnd I need some help with that,\n\n549\n00:27:51.160 --> 00:27:54.070\nI now have some good resources\nin which I can find that help.\n\n550\n00:27:54.070 --> 00:27:55.040\nDon we do thank you for that.\n\n551\n00:27:55.040 --> 00:27:57.690\nAnd as always any parting\nwords before we go?\n\n552\n00:27:57.690 --> 00:28:00.810\n&gt;&gt; Stanley mentioned in the chatroom\nthat we were shown the info command that\n\n553\n00:28:00.810 --> 00:28:02.080\nthere's a p info command.\n\n554\n00:28:02.080 --> 00:28:03.960\nI'm not familiar with that one but\nhe says it's got better linking.\n\n555\n00:28:03.960 --> 00:28:04.470\n&gt;&gt; There you go.\n\n556\n00:28:04.470 --> 00:28:06.800\n&gt;&gt; So there's always new documentation\nsources that come out, so\n\n557\n00:28:06.800 --> 00:28:09.940\nbe sure to check those, thanks for\nthrowing that in there Stanley.\n\n558\n00:28:09.940 --> 00:28:11.830\nDon't shy away from help\nwhenever you can get it.\n\n559\n00:28:11.830 --> 00:28:13.590\nIf you got a new command\ndefinitely try it out.\n\n560\n00:28:13.590 --> 00:28:16.850\nBut hopefully you've got enough here\nat least to get you started as you're\n\n561\n00:28:16.850 --> 00:28:21.200\nlearning the command line, you'll find you\nlean on these help documents quite a bit.\n\n562\n00:28:21.200 --> 00:28:25.220\nAnd the man command even today, and\nI've been using Linux and Unix for\n\n563\n00:28:25.220 --> 00:28:27.950\na long time I use man\npages every single day.\n\n564\n00:28:27.950 --> 00:28:30.640\nSo, definitely you're making\na part of your regularity.\n\n565\n00:28:30.640 --> 00:28:33.370\n&gt;&gt; All right, we don't take so\nmuch for job right here again and\n\n566\n00:28:33.370 --> 00:28:37.530\nwe do thank our audience for watching but\nit is that time for us to sign off.\n\n567\n00:28:37.530 --> 00:28:39.180\nWe do thank you again for watching.\n\n568\n00:28:39.180 --> 00:28:42.092\nSo, on behalf of ITPRO.TV I'm\nyour host Daniel Lowry.\n\n569\n00:28:42.092 --> 00:28:42.700\n&gt;&gt; And Don Pezet.\n\n570\n00:28:42.700 --> 00:28:45.285\n&gt;&gt; We will see you next time\n\n571\n00:28:45.285 --> 00:28:51.269\n[MUSIC]\n\n572\n00:28:51.269 --> 00:28:54.793\nThank you for watching ITPRO.TV\n\n",
          "vimeoId": "234904069"
        }
      ],
      "title": "Getting Started with the CLI"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Don demonstrates how to navigate the Linux filesystem. He explains the typical folder hierarchy found on most Linux distributions and then demonstrates the various commands for moving around those directories.",
          "length": "2045",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-2-1-1-navigating_the_filesystem-092017-PGM.00_33_49_22.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-2-1-1-navigating_the_filesystem-092017-PGM.00_33_49_22.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-2-1-1-navigating_the_filesystem-092017-PGM.00_33_49_22.Still001-sm.jpg",
          "title": "Navigating the Filesystem",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:03.944\nWelcome to ITProTV,\nI'm your host Don Pezet [CROSSTALK].\n\n2\n00:00:03.944 --> 00:00:08.850\n&gt;&gt; You're watching ITProTV.\n\n3\n00:00:08.850 --> 00:00:12.135\n&gt;&gt; All right, greetings everyone,\n\n4\n00:00:12.135 --> 00:00:17.014\nwelcome back to another\ngreat episode of ITProTV.\n\n5\n00:00:17.014 --> 00:00:21.318\nI'm your host Daniel Lowrie and in today's\nepisode we're back with more in our Linux\n\n6\n00:00:21.318 --> 00:00:24.210\ncommand line series,\nIt's been so interesting so far.\n\n7\n00:00:24.210 --> 00:00:27.560\nI'm having a great time doing this\nseries cuz I love me some Linux.\n\n8\n00:00:27.560 --> 00:00:31.257\nAnd the gentleman standing right here next\nto me, he loves it probably just as much,\n\n9\n00:00:31.257 --> 00:00:32.206\nif not more than I do.\n\n10\n00:00:32.206 --> 00:00:33.560\nMr. Don Pezet, welcome back, sir.\n\n11\n00:00:33.560 --> 00:00:34.110\nHow's it going today?\n\n12\n00:00:34.110 --> 00:00:34.850\n&gt;&gt; It's going good.\n\n13\n00:00:34.850 --> 00:00:38.495\nI thought you were gonna try and\nsell me out as a Mac user or something.\n\n14\n00:00:38.495 --> 00:00:39.810\n&gt;&gt; No.\n&gt;&gt; [LAUGH]\n\n15\n00:00:39.810 --> 00:00:40.888\n&gt;&gt; No, I can do that to you, man.\n\n16\n00:00:40.888 --> 00:00:41.840\n&gt;&gt; All right.\n&gt;&gt; [LAUGH]\n\n17\n00:00:41.840 --> 00:00:42.940\n&gt;&gt; We do the fun episode.\n\n18\n00:00:42.940 --> 00:00:44.490\nIf you've been watching this whole series,\n\n19\n00:00:44.490 --> 00:00:47.570\nyou know the first three episodes are\nreally just kind of spent of familiarizing\n\n20\n00:00:47.570 --> 00:00:50.160\nourselves with the command line itself,\nright?\n\n21\n00:00:50.160 --> 00:00:51.920\nBut not actually diving in the commands.\n\n22\n00:00:51.920 --> 00:00:54.830\nAnd so in this episode, we're gonna\nkick that off, we're gonna start with\n\n23\n00:00:54.830 --> 00:00:58.720\nactual commands and interacting with\nthe system via the command line And\n\n24\n00:00:58.720 --> 00:01:03.230\nI thought the best place to start\nwould be navigating the file system.\n\n25\n00:01:03.230 --> 00:01:08.160\nThat a lot of the commands we run are\ngonna be very dependent on which folder on\n\n26\n00:01:08.160 --> 00:01:11.815\nthe hard drive we happen to be in or which\nlocation inside Inside of a directory.\n\n27\n00:01:11.815 --> 00:01:12.795\nBecause in the Unix and\n\n28\n00:01:12.795 --> 00:01:17.685\nLinux world, almost everything\nis represented as a file.\n\n29\n00:01:17.685 --> 00:01:19.835\nSo when we interact with things,\nwe really interact with files.\n\n30\n00:01:19.835 --> 00:01:22.725\nSo in this episode, we're gonna take\na look at how we can navigate around our\n\n31\n00:01:22.725 --> 00:01:26.090\nfolders, how we can find our files and\nsee that information.\n\n32\n00:01:26.090 --> 00:01:28.728\nAnd it will build up with all\nthe commands you run through out the rest\n\n33\n00:01:28.728 --> 00:01:29.350\nof the series.\n\n34\n00:01:29.350 --> 00:01:32.346\n&gt;&gt; All right, Don, let's do those,\nlet's start right there,\n\n35\n00:01:32.346 --> 00:01:34.841\nl've launched my terminal,\nl'm in my bash shell.\n\n36\n00:01:34.841 --> 00:01:38.467\nAnd now l want to start working with\nmanipulating moving around inside\n\n37\n00:01:38.467 --> 00:01:41.130\nthe directory structure, how do I do that?\n\n38\n00:01:41.130 --> 00:01:45.470\n&gt;&gt; All right, so when you log in\non pretty much any Linux system\n\n39\n00:01:45.470 --> 00:01:49.380\nunless somebody is messed with it, you log\nin to what's called you're home directory.\n\n40\n00:01:49.380 --> 00:01:52.260\nAnd the home directory\nbelongs to your user account.\n\n41\n00:01:52.260 --> 00:01:55.510\nSo it's got files and folders and\nthings that are for you.\n\n42\n00:01:55.510 --> 00:01:59.140\nNow for other users just [INAUDIBLE]\nprivate little space on that server\n\n43\n00:01:59.140 --> 00:02:00.320\nor work station.\n\n44\n00:02:00.320 --> 00:02:04.070\nEvery user should have their own home\ndirectory where they can put their stuff.\n\n45\n00:02:04.070 --> 00:02:06.870\nBut there is tons of directories that\nare kind of shared that everybody has\n\n46\n00:02:06.870 --> 00:02:07.750\naccess too.\n\n47\n00:02:07.750 --> 00:02:11.030\nWhen we run a command, all the commands\nhave to be stored in a common areas, so\n\n48\n00:02:11.030 --> 00:02:12.530\nall of the users can see them.\n\n49\n00:02:12.530 --> 00:02:13.850\nOtherwise, every time we add at a command,\n\n50\n00:02:13.850 --> 00:02:16.760\neverybody have that copy of\nit that be very inefficient.\n\n51\n00:02:16.760 --> 00:02:20.820\nSo that home directory is just yours.\n\n52\n00:02:20.820 --> 00:02:24.790\nAnd usually it's in the same\nplace on most distros but\n\n53\n00:02:24.790 --> 00:02:27.850\nit can be changed though the location\nof a home directory can be overwritten.\n\n54\n00:02:27.850 --> 00:02:32.150\nSo the first command I wanna show you\nis how to find your home directory.\n\n55\n00:02:32.150 --> 00:02:36.700\nAnd so when you log in on a system like\nI've logged in here, my shell isn't really\n\n56\n00:02:36.700 --> 00:02:40.630\nall that descriptive about where I'm at\nand we'll find out a little bit later,\n\n57\n00:02:40.630 --> 00:02:43.210\nit does actually have some\ngood information in here.\n\n58\n00:02:43.210 --> 00:02:46.145\nMy shell is telling me, or\nat least my shell prompt,\n\n59\n00:02:46.145 --> 00:02:50.030\nis telling me that I'm logged in as\nthe dpezet user on Don's laptop.\n\n60\n00:02:50.030 --> 00:02:53.070\nAnd it's telling me that\nI'm in the tild directory.\n\n61\n00:02:53.070 --> 00:02:55.710\nAnd I'll explain what that\ntild is here in a little bit.\n\n62\n00:02:55.710 --> 00:02:57.510\nBut then, that's just it.\n\n63\n00:02:57.510 --> 00:03:00.774\nI'm in this prompt, and\nI'm just kind of sitting here, and\n\n64\n00:03:00.774 --> 00:03:03.912\nif I wanna find out what directory I'm in,\nI can type pwd.\n\n65\n00:03:03.912 --> 00:03:09.120\nAnd when I type that it's gonna show\nme my present working directory.\n\n66\n00:03:09.120 --> 00:03:11.700\nThe directory that I'm in,\nthat I'm executing.\n\n67\n00:03:11.700 --> 00:03:14.760\nIf I execute a command right now, it's\ngonna executing inside this directory,\n\n68\n00:03:14.760 --> 00:03:16.780\nwhich may or may not impact it.\n\n69\n00:03:16.780 --> 00:03:20.060\nSome commands run the same no\nmatter what folder you're in.\n\n70\n00:03:20.060 --> 00:03:23.340\nOther commands run differently depending\non what folder you happen to be in.\n\n71\n00:03:23.340 --> 00:03:29.980\nSo when I run pwd, it tells me\nthat I'm actually in /home/dpezet.\n\n72\n00:03:29.980 --> 00:03:32.300\nThat's the folder that I'm in, right?\n\n73\n00:03:32.300 --> 00:03:38.330\nNow if we take a look at that, /home,\nright, so what does all this mean?\n\n74\n00:03:38.330 --> 00:03:40.500\nOkay, that very first slash.\n\n75\n00:03:40.500 --> 00:03:43.773\nThat is the root of the file system,\nright,\n\n76\n00:03:43.773 --> 00:03:47.582\nthe very beginning of where\nmy file system starts.\n\n77\n00:03:47.582 --> 00:03:52.309\nSo everything should be inside of slash,\neverything starts with a slash,\n\n78\n00:03:52.309 --> 00:03:56.340\nand there might be files in here or\nthere might be folders.\n\n79\n00:03:56.340 --> 00:03:59.797\nIf there's a folder like here\nthere's a folder called home,\n\n80\n00:03:59.797 --> 00:04:03.796\nI know it's a folder because there's\na slash after it as well, right?\n\n81\n00:04:03.796 --> 00:04:09.610\nSo /home/, and then inside of that is yet\nanother folder called dpezet.\n\n82\n00:04:09.610 --> 00:04:14.485\nNow this one isn't showing a slash because\nI asked for my present working directory\n\n83\n00:04:14.485 --> 00:04:17.845\nand it's saying that this is\na directory and so that's where I'm at.\n\n84\n00:04:17.845 --> 00:04:22.355\nBut technically there is a slash after\nit to identify that I'm in a folder,\n\n85\n00:04:22.355 --> 00:04:24.605\nit's just not displayed\non the screen by default.\n\n86\n00:04:24.605 --> 00:04:28.895\nSo /home/dpezet is the folder that I'm in.\n\n87\n00:04:28.895 --> 00:04:34.290\nIf Daniel logged in, it would be in /home/\nand whatever his user account was called.\n\n88\n00:04:34.290 --> 00:04:36.070\nUnless an administrator overwrites it.\n\n89\n00:04:36.070 --> 00:04:38.560\nAn administrator can change\nwhere your home directory is,\n\n90\n00:04:38.560 --> 00:04:40.060\nit can be moved somewhere else.\n\n91\n00:04:40.060 --> 00:04:44.630\nBy logging in and immediately running pwd,\nI can find where at my home folder is.\n\n92\n00:04:44.630 --> 00:04:47.042\nThis is the folder that I've got, right.\n\n93\n00:04:47.042 --> 00:04:51.790\nNow, I know about the folder but\nI don't really know what's inside of it.\n\n94\n00:04:51.790 --> 00:04:55.832\nAnd so if I wanna see what is inside of a\nfolder, I will show you what is literally\n\n95\n00:04:55.832 --> 00:04:59.407\nthe command that I run the most out\nof any other command, which is ls.\n\n96\n00:04:59.407 --> 00:05:02.070\nLs is short for list.\n\n97\n00:05:02.070 --> 00:05:07.660\nGive me a list of the files that are\ninside of this folder and when I run a ls\n\n98\n00:05:07.660 --> 00:05:12.290\nhere comes this list and I see a mixture\nof the things that are displayed here.\n\n99\n00:05:12.290 --> 00:05:14.320\nNow, my prompt is colorized.\n\n100\n00:05:14.320 --> 00:05:16.000\nIf you're using a graphical\nuser interface,\n\n101\n00:05:16.000 --> 00:05:18.200\nthe odds are your prompt\nis colorized also.\n\n102\n00:05:18.200 --> 00:05:22.800\nIf you're using a shell, a remote shell,\nSSH, it may or may not be colorized.\n\n103\n00:05:22.800 --> 00:05:24.684\nIt might just be black and\nwhite, and that's that.\n\n104\n00:05:24.684 --> 00:05:27.616\nBut when they're colorized, they're\nnice because you can really quickly and\n\n105\n00:05:27.616 --> 00:05:29.780\neasily tell the difference between things.\n\n106\n00:05:29.780 --> 00:05:32.880\nHere, I've got a Downloads folder,\nall right?\n\n107\n00:05:32.880 --> 00:05:35.230\nBut here I've got file.txt.\n\n108\n00:05:35.230 --> 00:05:38.250\nAnd I know one's a file\nbecause it's white, and\n\n109\n00:05:38.250 --> 00:05:40.450\nI know one's a folder because its blue.\n\n110\n00:05:40.450 --> 00:05:45.300\nBut you have to be careful because\njust because they have a color here.\n\n111\n00:05:45.300 --> 00:05:48.520\nIf I log in without a color,\nI wouldn't know which one is which.\n\n112\n00:05:48.520 --> 00:05:53.301\nAnd I potentially could have a file\nthat didn't have an extension like this,\n\n113\n00:05:53.301 --> 00:05:55.005\nyou see we have file.txt.\n\n114\n00:05:55.005 --> 00:05:58.734\nThat's a good indicator this is a file or\n\n115\n00:05:58.734 --> 00:06:03.570\na folder, yeah, but\nI might have, let's just do.\n\n116\n00:06:06.010 --> 00:06:09.607\nRight, so now I've got one this is called\nmovies if I can find it, where did it go?.\n\n117\n00:06:09.607 --> 00:06:10.633\n&gt;&gt; Little screen.\n\n118\n00:06:10.633 --> 00:06:12.040\n&gt;&gt; Where?\n&gt;&gt; [LAUGH]\n\n119\n00:06:12.040 --> 00:06:13.351\n&gt;&gt; I'm in the middle of screen.\n\n120\n00:06:13.351 --> 00:06:14.920\nThere's movies.\n\n121\n00:06:14.920 --> 00:06:16.610\nIt doesn't have an extension on it.\n\n122\n00:06:16.610 --> 00:06:18.020\nSo is it a folder?\n\n123\n00:06:18.020 --> 00:06:20.110\nNo.\nJust a file, just a file.\n\n124\n00:06:20.110 --> 00:06:24.720\nAnd we do our normal ls, I'm pulling up\na listing of what's in the folder and\n\n125\n00:06:24.720 --> 00:06:27.400\nI don't really get gray\nindicators aside from the color\n\n126\n00:06:27.400 --> 00:06:29.970\nover whether is something is a folder or\nwhether is something is a file.\n\n127\n00:06:29.970 --> 00:06:32.250\nBut I get a listing to see what's there.\n\n128\n00:06:32.250 --> 00:06:37.293\nAnd the ls command can be modified\nquite a bit to show me better data,\n\n129\n00:06:37.293 --> 00:06:41.996\nin fact, normally when I run ls,\nI do ls followed by -l right?\n\n130\n00:06:41.996 --> 00:06:45.445\n-l tells it to give me\nthe long form of the output,\n\n131\n00:06:45.445 --> 00:06:49.481\ngive me detailed information\non each item inside of here.\n\n132\n00:06:49.481 --> 00:06:50.984\nAnd when we do ls- l,\n\n133\n00:06:50.984 --> 00:06:55.970\nyou get the list of those files\nwith a lot more information, right?\n\n134\n00:06:55.970 --> 00:06:59.850\nWe get the file sizes, so\nhere's how big each of these files are.\n\n135\n00:06:59.850 --> 00:07:03.050\nWe get who owns the file and\nwe get other information.\n\n136\n00:07:03.050 --> 00:07:08.520\nBut what's really handy is right at\nthe very beginning, the very first letter.\n\n137\n00:07:08.520 --> 00:07:11.340\nSee how some of these start with a d and\n\n138\n00:07:11.340 --> 00:07:15.434\nsome start with a-, if they start\nwith a d, they're a directory,\n\n139\n00:07:15.434 --> 00:07:19.180\nthey're a folder,\nif they start with a dash, they're a file.\n\n140\n00:07:19.180 --> 00:07:22.580\nThat's the easiest way to tell\neven if I didn't have colors,\n\n141\n00:07:22.580 --> 00:07:25.590\nif I didn't know if they're file\nextensions or not, if it starts with a d,\n\n142\n00:07:25.590 --> 00:07:28.830\nit's a directory, if it starts\nwith a dash, it's a folder, right?\n\n143\n00:07:28.830 --> 00:07:32.130\nSo, the ls command,\ncan tell us a lot of information,\n\n144\n00:07:32.130 --> 00:07:34.460\nthe ls command is actually really,\nreally powerful.\n\n145\n00:07:34.460 --> 00:07:40.316\nThere's a ton more you can do, in fact,\nwhen I run ls, I normally do ls -lh.\n\n146\n00:07:40.316 --> 00:07:44.823\nThese file sizes are kind of annoying,\nright?\n\n147\n00:07:44.823 --> 00:07:50.960\nSo file.txt right here,\nI can see it is 310,847 bytes in size.\n\n148\n00:07:50.960 --> 00:07:52.166\n&gt;&gt; Let me do the math on that, Don.\n\n149\n00:07:52.166 --> 00:07:53.243\nHold on.\n\n150\n00:07:53.243 --> 00:07:56.377\n&gt;&gt; [LAUGH]\n&gt;&gt; It can be especially when you large\n\n151\n00:07:56.377 --> 00:07:59.209\nnumbers, right,\nthat can be really difficult to read.\n\n152\n00:07:59.209 --> 00:08:02.617\n&gt;&gt; Yeah, and we don't normally think in\nterms of bytes, we think in kilobytes or\n\n153\n00:08:02.617 --> 00:08:04.128\nmegabytes or gigabytes, right.\n\n154\n00:08:04.128 --> 00:08:09.176\nSo I can run ls -lh and\nnow make the output human\n\n155\n00:08:09.176 --> 00:08:14.250\nreadable, -h makes it human friendly.\n\n156\n00:08:14.250 --> 00:08:18.820\nAnd when I run that I get the same output,\nbut look at the file sizes, now it's 304K.\n\n157\n00:08:20.200 --> 00:08:24.230\nSo I know it's 304 kilobytes in size or\nit can go to gigabytes, or terabytes,\n\n158\n00:08:24.230 --> 00:08:27.510\npetabytes, whatever,\nit will show that on the screen and\n\n159\n00:08:27.510 --> 00:08:28.610\nmakes it a lot more readable.\n\n160\n00:08:28.610 --> 00:08:32.720\nSo these commands, you kind of need to\nfind out what works best for you and\n\n161\n00:08:32.720 --> 00:08:34.280\nwhat you're the happiest with.\n\n162\n00:08:34.280 --> 00:08:39.240\nBut ls -lh is really one of the easiest\nlittle command sequences to\n\n163\n00:08:39.240 --> 00:08:43.790\nrun to see the files and folders and\nknow for a fact whether they are a file or\n\n164\n00:08:43.790 --> 00:08:46.860\nwhether they are a folder and\nwe can see that information there.\n\n165\n00:08:46.860 --> 00:08:49.160\nSo easy way to differentiate and see that.\n\n166\n00:08:50.590 --> 00:08:53.880\nSo far we've seen the pwd command to\nfind out what directory we're in,\n\n167\n00:08:53.880 --> 00:08:58.570\nand we've seen the ls command to list\nwhat's inside that directory, but\n\n168\n00:08:58.570 --> 00:09:01.810\nlet's say I wanna move to\na different directory.\n\n169\n00:09:01.810 --> 00:09:07.030\nSo for example I've got a I don't know,\ndocuments folder here,\n\n170\n00:09:07.030 --> 00:09:11.490\nI want to see what documents I have or I\nhave downloads, what downloads do I have?\n\n171\n00:09:11.490 --> 00:09:14.510\nI want to go in that directory and\nsee what's there.\n\n172\n00:09:15.690 --> 00:09:18.730\nWell, there's two ways\nI can go about that.\n\n173\n00:09:18.730 --> 00:09:25.153\nOne way is I can use the ls command and I\ncan say show me what's in that directory.\n\n174\n00:09:25.153 --> 00:09:34.350\nI can say ls\n/home/dpezet/Downloads like that.\n\n175\n00:09:34.350 --> 00:09:38.280\nAnd when I run that command or documents\nor whatever folder it is that I'm\n\n176\n00:09:38.280 --> 00:09:43.410\nwanting to interact with, when I run that\nit's gonna show me what's in that folder.\n\n177\n00:09:43.410 --> 00:09:48.360\nI'm not in that folder, but it's\nlooking over to that other location and\n\n178\n00:09:48.360 --> 00:09:49.920\nit's gonna tell me what's in there.\n\n179\n00:09:49.920 --> 00:09:54.420\nAnd so, when I run that I can see what\nI've got couple of little files here, for\n\n180\n00:09:54.420 --> 00:09:56.910\ndifferent things,\ninstructions on how to do stuff.\n\n181\n00:09:56.910 --> 00:10:00.640\nI can see what's in there and\nthere's that information.\n\n182\n00:10:01.970 --> 00:10:07.170\nNow that ls command,\nwhen you run it, by default it runs\n\n183\n00:10:07.170 --> 00:10:12.520\nin the directory you're in,\nyour present working directory, your pwd.\n\n184\n00:10:12.520 --> 00:10:17.811\nSo if I run ls by itself,\nit's gonna show me what's in /home/depzet.\n\n185\n00:10:17.811 --> 00:10:22.062\nBut by overwriting that here,\nnow it's gonna show me what's in\n\n186\n00:10:22.062 --> 00:10:26.695\n/home/depezet/Documents and\nthat's really what I wanted here.\n\n187\n00:10:26.695 --> 00:10:30.200\nBut if I'm going to be\nrunning several commands and\n\n188\n00:10:30.200 --> 00:10:34.490\nI want them all being run inside\nof /home/dpezet/Documents\n\n189\n00:10:34.490 --> 00:10:39.230\nit makes more sense to change\nmy present working directory.\n\n190\n00:10:39.230 --> 00:10:44.390\nAnd you can do that using the cd command,\ncd is change directory.\n\n191\n00:10:44.390 --> 00:10:47.310\nI wanna change my present working\ndirectory into something else.\n\n192\n00:10:47.310 --> 00:10:52.434\nAnd I could say cd/home/dpezet/Documents\n\n193\n00:10:52.434 --> 00:10:57.166\nlike that and now, it's gonna change it.\n\n194\n00:10:57.166 --> 00:10:59.130\nAnd my prompt is updated.\n\n195\n00:10:59.130 --> 00:11:02.580\nNot every terminal or shell is\ngonna have a different prompt, but\n\n196\n00:11:02.580 --> 00:11:05.390\nthis one updated to show that\nI'm in the documents folder.\n\n197\n00:11:05.390 --> 00:11:09.210\nBut if I don't know that, if my prompt\ndoesn't show it, I can always type pwd and\n\n198\n00:11:09.210 --> 00:11:13.100\nI'll see it right there,\nthat I'm now in /home/dpezet/Documents.\n\n199\n00:11:13.100 --> 00:11:17.180\nAnd now when I do an ls -lh or\n\n200\n00:11:17.180 --> 00:11:20.720\nwhatever, I'm seeing the documents that\nare right here inside of this folder.\n\n201\n00:11:20.720 --> 00:11:24.850\nI don't have to provide the full path\nanymore because my present directory\n\n202\n00:11:24.850 --> 00:11:27.430\nis now set to this Documents folder.\n\n203\n00:11:27.430 --> 00:11:31.160\n&gt;&gt; Yeah, can you imagine having to\ntype in the full path for everything?\n\n204\n00:11:31.160 --> 00:11:33.590\nWhen it came to just using ls,\nwell, I can't move around,\n\n205\n00:11:33.590 --> 00:11:36.070\nI guess I'm stuck here in my home folder.\n\n206\n00:11:36.070 --> 00:11:38.870\nAnd if I wanna ls something,\nI have to work my way through it and\n\n207\n00:11:38.870 --> 00:11:39.520\nthen type in that path.\n\n208\n00:11:39.520 --> 00:11:40.782\nThat would get a little crazy.\n\n209\n00:11:40.782 --> 00:11:45.180\nLike Don said, it's better just to move\ninto that directory and then use ls.\n\n210\n00:11:45.180 --> 00:11:46.570\nThat way you only have to do it once.\n\n211\n00:11:46.570 --> 00:11:50.247\n&gt;&gt; Yeah, and when I did that, that cd\ncommand that change directory command,\n\n212\n00:11:50.247 --> 00:11:51.805\nit kind look annoying, right?\n\n213\n00:11:51.805 --> 00:11:52.509\n&gt;&gt; Yeah.\n\n214\n00:11:52.509 --> 00:11:57.399\n&gt;&gt; Change directory\n/home/dpezet/Documents.\n\n215\n00:11:57.399 --> 00:11:59.690\nThere we go, can't spell it /Documents.\n\n216\n00:11:59.690 --> 00:12:00.810\nIt's kind of a long command.\n\n217\n00:12:00.810 --> 00:12:03.280\nI didn't actually have to\ntype all of that, right?\n\n218\n00:12:03.280 --> 00:12:07.480\nLet me go back and\nlet say I wanna get into /home/dpezet, so\n\n219\n00:12:07.480 --> 00:12:11.360\nI'm gonna type cd/home/dpezet.\n\n220\n00:12:11.360 --> 00:12:16.120\nAnd then, I know the Documents folder\nis there, I want to change into it.\n\n221\n00:12:16.120 --> 00:12:21.850\nInstead of typing the full path,\nI could type cd Documents.\n\n222\n00:12:21.850 --> 00:12:23.400\nAnd what it's going to do is\nit's gonna say, all right,\n\n223\n00:12:23.400 --> 00:12:26.870\nwell you didn't give me a full path,\nyou didn't reference / as the root and\n\n224\n00:12:26.870 --> 00:12:28.150\neverything underneath it.\n\n225\n00:12:28.150 --> 00:12:31.828\nSo, I'm assuming that you're telling me\nthere's a folder right here in the present\n\n226\n00:12:31.828 --> 00:12:35.417\nworking directory that's called Documents\nand that's what I wanna change into.\n\n227\n00:12:35.417 --> 00:12:38.665\nAnd so, by typing cd Documents,\nI navigate right in there and\n\n228\n00:12:38.665 --> 00:12:40.610\nI didn't have to type the full path.\n\n229\n00:12:41.700 --> 00:12:44.892\nBut if wanna change to a folder to\nsomewhere completely different on\n\n230\n00:12:44.892 --> 00:12:47.975\nthe hard drive, I'm likely going\nto have to type the whole path.\n\n231\n00:12:47.975 --> 00:12:55.082\nI'm gonna have to type cd /var/log because\nthat's where I wanna go, into that folder.\n\n232\n00:12:55.082 --> 00:12:59.090\nAnd then if I wanna get home I\ngotta do cd /home/depezet because\n\n233\n00:12:59.090 --> 00:13:01.480\nthat's where I wanted to get.\n\n234\n00:13:01.480 --> 00:13:04.920\nSo, doing that, moving to\nan entirely different folder, yes,\n\n235\n00:13:04.920 --> 00:13:09.490\nthat requires a much\nlonger string to type.\n\n236\n00:13:09.490 --> 00:13:14.380\nBut moving to something right here in\nour own directory is nice and easy.\n\n237\n00:13:14.380 --> 00:13:19.620\nI can just type cd Documents or downloads\nor whatever and now I'm in that folder.\n\n238\n00:13:20.680 --> 00:13:23.760\nSo navigating around like that\nis pretty straight forward.\n\n239\n00:13:23.760 --> 00:13:26.900\nThere are a few other commands that\nare really handy like if I wanna make\n\n240\n00:13:26.900 --> 00:13:27.960\na directory.\n\n241\n00:13:27.960 --> 00:13:33.895\nSo earlier I made a file called movies,\nbut, it's not actually a folder.\n\n242\n00:13:33.895 --> 00:13:37.350\nI might want a directory,\na folder, that's called movies.\n\n243\n00:13:37.350 --> 00:13:39.722\nAnd in my case, I don't have that.\n\n244\n00:13:39.722 --> 00:13:44.596\nSo, what I can do is I can remove\nthat file that I made, I gonna do rm,\n\n245\n00:13:44.596 --> 00:13:48.050\nand I'll remove the movies file.\n\n246\n00:13:48.050 --> 00:13:52.580\nAnd I'm gonna run mkdir,\nthat's make directory.\n\n247\n00:13:52.580 --> 00:13:56.730\nI'm gonna make a directory called Movies.\n\n248\n00:13:56.730 --> 00:14:00.470\nAnd this time unlike when\nI made a file earlier,\n\n249\n00:14:00.470 --> 00:14:04.132\nthis time it is going to be a directory,\nbecause I used mkdir.\n\n250\n00:14:04.132 --> 00:14:07.770\nAnd when I use ls to pull up the listing,\nthere's Movies and it's nice and\n\n251\n00:14:07.770 --> 00:14:10.130\nblue this time, so\nI know it's a directory.\n\n252\n00:14:10.130 --> 00:14:14.290\nEven if it wasn't colorized,\nI can do ls -lh and\n\n253\n00:14:14.290 --> 00:14:18.560\nI can see that movies has a d at the very\nbeginning, so it is a directory.\n\n254\n00:14:19.660 --> 00:14:24.530\nAnd I can do cd Movies and\nnow I'm in that folder and\n\n255\n00:14:24.530 --> 00:14:26.850\nI can start to put data in there and\nstart to work with it.\n\n256\n00:14:26.850 --> 00:14:30.820\nSo that's mkdir to make a directory and\nget that put in place.\n\n257\n00:14:32.580 --> 00:14:35.728\nThe only other one I'm gonna mention here\nis probably not really about navigation,\n\n258\n00:14:35.728 --> 00:14:37.648\nbut you will notice that\nsome files are different.\n\n259\n00:14:37.648 --> 00:14:41.774\nLike if you look at this awsdemo.pem,\nthat's a security certificate,\n\n260\n00:14:41.774 --> 00:14:43.981\nthat's a regular file that's white.\n\n261\n00:14:43.981 --> 00:14:48.536\nAnd then I've got this 1920x1080.sh,\nit is green.\n\n262\n00:14:48.536 --> 00:14:52.170\nIt's green because its a program,\nit's been made executable.\n\n263\n00:14:52.170 --> 00:14:56.210\nFiles are not executable by default,\nwe have to make them executable.\n\n264\n00:14:56.210 --> 00:14:58.940\nAnd so there's a command, we'll talk\nabout it in another episode, but\n\n265\n00:14:58.940 --> 00:15:01.120\nit's called chmod or change mode.\n\n266\n00:15:01.120 --> 00:15:03.220\nAnd we can change the mode of a file,\n\n267\n00:15:03.220 --> 00:15:07.310\nand we can change it from being a regular\nfile to being an executable file.\n\n268\n00:15:07.310 --> 00:15:10.404\nAnd so, that's how some of these end up\ngreen like this is they've had their mode\n\n269\n00:15:10.404 --> 00:15:11.734\nchanged to make them executable.\n\n270\n00:15:11.734 --> 00:15:15.356\nWhich you can spot If you see an x\nin the permissions like this,\n\n271\n00:15:15.356 --> 00:15:19.884\nthe x indicates that it's executable,\nthat it's able to be run like that and\n\n272\n00:15:19.884 --> 00:15:22.020\nchmod is how we assigned that.\n\n273\n00:15:22.020 --> 00:15:26.200\nOther files like that, security key where\nit's all dashes here, there's no x,\n\n274\n00:15:26.200 --> 00:15:27.421\nit's not executable.\n\n275\n00:15:27.421 --> 00:15:29.980\nSo that's another one for\nmanipulating kind of files.\n\n276\n00:15:29.980 --> 00:15:32.967\nYou usually don't have to use that\nexcept for certain scenarios.\n\n277\n00:15:32.967 --> 00:15:37.879\n&gt;&gt; All right, Don, one thing I noticed\nas you were navigating around inside of\n\n278\n00:15:37.879 --> 00:15:41.717\nour file system here was that\nwhen you went of /var/log and\n\n279\n00:15:41.717 --> 00:15:45.506\nyou hit the Enter key,\nyour prompt change to /var/log.\n\n280\n00:15:45.506 --> 00:15:49.820\nBut when you went to /home/dpezet,\nit change to like a little wavy line or\n\n281\n00:15:49.820 --> 00:15:52.660\nthe tilde or whatever it's called.\n\n282\n00:15:52.660 --> 00:15:54.150\nWhat the heck is that all about?\n\n283\n00:15:54.150 --> 00:15:56.942\n&gt;&gt; So there are a number of aliases\nthat are designed to help us.\n\n284\n00:15:56.942 --> 00:15:59.953\nThey're like shortcuts that help\nus to not have to type so much and\n\n285\n00:15:59.953 --> 00:16:01.448\nwe can take advantage of those.\n\n286\n00:16:01.448 --> 00:16:02.321\nLet me just show you.\n\n287\n00:16:02.321 --> 00:16:08.040\nSo the example that Daniel was giving\nwas I had moved into /var/log and\n\n288\n00:16:08.040 --> 00:16:12.804\nwhen I did that my prompt shows\nthe full path, right there,\n\n289\n00:16:12.804 --> 00:16:15.900\n/var/log, I can see that.\n\n290\n00:16:15.900 --> 00:16:20.012\nBut when I went back to my home directory\nit was a tilde, or however you say it.\n\n291\n00:16:20.012 --> 00:16:22.360\n[LAUGH] So what's going on there,\n\n292\n00:16:22.360 --> 00:16:27.400\nwell, there's an alias,or tilde that says,\nthat's your home directory.\n\n293\n00:16:27.400 --> 00:16:31.020\nIt's kind of like a shortcut name or\nyour home directory.\n\n294\n00:16:31.020 --> 00:16:34.970\nIf I wanna get from /var/log back to my\nhome directory there's actually a few\n\n295\n00:16:34.970 --> 00:16:39.960\ndifferent ways to do it but I could\ntype cd followed by a ~, like that.\n\n296\n00:16:39.960 --> 00:16:43.030\nAnd when you do that, it takes you\nright back to your home directory.\n\n297\n00:16:43.030 --> 00:16:44.950\nNow, it really doesn't show\nit here on the screen, but\n\n298\n00:16:44.950 --> 00:16:48.060\nif I do a pwd,\nI can see I'm in /home/dpezet.\n\n299\n00:16:48.060 --> 00:16:51.440\nThe ~ is an alias that gets us back there.\n\n300\n00:16:51.440 --> 00:16:55.040\nIn fact, there's another alias\nthat isn't even shown on screen.\n\n301\n00:16:55.040 --> 00:16:57.511\nWhich is, if you just type cd by itself,\n\n302\n00:16:57.511 --> 00:17:00.289\nit'll take you back to\nyour home directory.\n\n303\n00:17:00.289 --> 00:17:04.967\nSo if I was in /var/log and\nI wanted to go back to my home directory,\n\n304\n00:17:04.967 --> 00:17:10.720\nI could just type cd and press Enter,\nand I'm back in my home directory.\n\n305\n00:17:10.720 --> 00:17:14.857\nA lot of shells have that as a built-in\nthat let some change record right back to\n\n306\n00:17:14.857 --> 00:17:16.374\nyour home just by typing cd.\n\n307\n00:17:16.374 --> 00:17:18.637\nBut let's say I was in /var/log and\n\n308\n00:17:18.637 --> 00:17:24.180\nI wanted to change back into my home\nfolder and back into the Documents folder.\n\n309\n00:17:24.180 --> 00:17:28.804\nI could type cd/home/dpezet/Documents, and\n\n310\n00:17:28.804 --> 00:17:34.747\nhopefully you just witnessed\nthe amount of typos I need there and\n\n311\n00:17:34.747 --> 00:17:37.540\nkind annoying, right?\n\n312\n00:17:37.540 --> 00:17:39.307\nI did manage to spell documents right.\n\n313\n00:17:39.307 --> 00:17:46.691\nI could also say, cd~/Documents,\nwhich means go to my home folder and\n\n314\n00:17:46.691 --> 00:17:51.788\ninside of home folder go\nto the Documents folder.\n\n315\n00:17:51.788 --> 00:17:56.210\nAnd by running that I end up right back in\nmy home directory and back in Documents.\n\n316\n00:17:56.210 --> 00:18:01.240\nSo, the ~ is simply an alias, and\nin my case it's an alias for /home/dpezet.\n\n317\n00:18:01.240 --> 00:18:05.300\nIn your case, it'll be for\nwhatever your home directory is set to.\n\n318\n00:18:05.300 --> 00:18:08.350\nAnd if you aren't certain\nabout your home directory,\n\n319\n00:18:08.350 --> 00:18:11.850\nI said when you first log in you can\nuse pwd, that's a dead giveaway.\n\n320\n00:18:11.850 --> 00:18:15.720\nBut we can also find it, if you use\nthe grep command, and you look for\n\n321\n00:18:15.720 --> 00:18:16.530\nyour username.\n\n322\n00:18:16.530 --> 00:18:20.896\nSo I'm gonna grep for\ndpezet in /etc/passwd.\n\n323\n00:18:20.896 --> 00:18:25.540\nThat file contains all\nthe information about user account\n\n324\n00:18:25.540 --> 00:18:27.580\nincluding your home directory.\n\n325\n00:18:27.580 --> 00:18:30.861\nAnd so, I can see right here in\nmy home directory /home/dpezet.\n\n326\n00:18:30.861 --> 00:18:32.193\nIf it been moved somewhere else,\n\n327\n00:18:32.193 --> 00:18:34.250\nthen it would show up here\nas being somewhere else.\n\n328\n00:18:34.250 --> 00:18:36.940\nAnd in our shell episode we saw\nthis file cuz it also shows\n\n329\n00:18:36.940 --> 00:18:39.340\nour default shell as well.\n\n330\n00:18:39.340 --> 00:18:41.450\nSo we can find an information right there.\n\n331\n00:18:41.450 --> 00:18:45.300\nBut the ~ is an alias\nthat sends us back home.\n\n332\n00:18:45.300 --> 00:18:50.050\nAnd the ~ is actually an alias for\nwhatever is right here in passwd.\n\n333\n00:18:50.050 --> 00:18:51.890\nNow that's not the only alias,\nthere's some other ones.\n\n334\n00:18:51.890 --> 00:18:57.960\nFor example, I'm in the Documents folder,\nI want to move back to my home folder.\n\n335\n00:18:57.960 --> 00:18:59.750\nI know I can type cd or\n\n336\n00:18:59.750 --> 00:19:03.350\nI can type cd ~ and either one will\ntake me back to my home folder.\n\n337\n00:19:04.710 --> 00:19:08.128\nBut what if I was in /var/log and\n\n338\n00:19:08.128 --> 00:19:14.110\nin here maybe even deeper,\nmaybe I'm in the libvirt log,\n\n339\n00:19:14.110 --> 00:19:19.255\nwhoops which I don't have\npermission to be in..\n\n340\n00:19:19.255 --> 00:19:24.390\nSo /var/logs/tuned, so\nthis is the folder that I'm in.\n\n341\n00:19:24.390 --> 00:19:27.155\nMaybe I wanna get back to /log,\n\n342\n00:19:27.155 --> 00:19:33.020\nwell I could type cd/var/log and\nthat will get me there.\n\n343\n00:19:33.020 --> 00:19:35.652\nBut I can't type cd ~ that\nwould take me home, right?\n\n344\n00:19:35.652 --> 00:19:36.455\nThat doesn't work.\n\n345\n00:19:36.455 --> 00:19:38.360\nI'm wanna get in to /var/log.\n\n346\n00:19:38.360 --> 00:19:43.447\nWell, there's an alias that\nrefers to the folder your in,\n\n347\n00:19:43.447 --> 00:19:48.865\nwhich in my case would be tuned,\nor the parent folder above me.\n\n348\n00:19:48.865 --> 00:19:54.129\nAnd there's an alias that's called .., and\nthe .., alias points to the parent folder.\n\n349\n00:19:54.129 --> 00:19:56.202\nThere's another alias that's\njust a single dot that points to\n\n350\n00:19:56.202 --> 00:19:57.480\nthe folder that you're in.\n\n351\n00:19:57.480 --> 00:20:00.750\nNow these aliases are hidden and\nyou don't normally see them.\n\n352\n00:20:00.750 --> 00:20:07.360\nIf I do an ls -lh like this, I see all the\nfiles in here and I see their information.\n\n353\n00:20:08.390 --> 00:20:14.300\nI'm gonna add an a to that, a says show\nme all files including hidden files.\n\n354\n00:20:14.300 --> 00:20:15.442\nI wanna see the hidden stuff.\n\n355\n00:20:15.442 --> 00:20:18.880\nAnd when I run that,\nthere is the tuned.log but\n\n356\n00:20:18.880 --> 00:20:23.274\nlook at those two other values\nthat just showed up, ., and\n\n357\n00:20:23.274 --> 00:20:28.780\nThe single ., points to this directory\nright here that I am in right now.\n\n358\n00:20:28.780 --> 00:20:33.207\nAnd the .., points to the parent,\nthe parent folder.\n\n359\n00:20:33.207 --> 00:20:34.010\nAnd those are handy.\n\n360\n00:20:34.010 --> 00:20:37.630\nNow, we'll use the ., when we start\nto try executing scripts later on.\n\n361\n00:20:37.630 --> 00:20:42.270\nBut for right now the one I care about is\nthe .., cuz the .., points to the parent.\n\n362\n00:20:42.270 --> 00:20:49.373\nAnd so if I wanna go from\n/var/log/tuned to /var/log,\n\n363\n00:20:49.373 --> 00:20:55.915\nI can type cd .., and\nthat moves me into /var/log.\n\n364\n00:20:55.915 --> 00:20:59.450\nSo I can quickly and\neasily move up one folder.\n\n365\n00:20:59.450 --> 00:21:01.670\n&gt;&gt; Well what if I wanna\ndo multiple folders, Don?\n\n366\n00:21:01.670 --> 00:21:05.690\n&gt;&gt; You can do multiple folders,\nthis is where you get the diminishing-\n\n367\n00:21:05.690 --> 00:21:06.858\n&gt;&gt; Returns.\n\n368\n00:21:06.858 --> 00:21:10.283\n&gt;&gt; Cost of returns or whatever yeah, so\n\n369\n00:21:10.283 --> 00:21:15.036\nif I wanna get into /var,\nI could type c../..\n\n370\n00:21:15.036 --> 00:21:18.295\nThat means go to the parent of this\nfolder and then go to it's parent and\n\n371\n00:21:18.295 --> 00:21:21.222\nyou could do it over and over and\nover again, parent, parent,\n\n372\n00:21:21.222 --> 00:21:24.340\nparent until you get all the way\nback to the root if you want.\n\n373\n00:21:24.340 --> 00:21:28.790\nBut if I just do ../..,\nthat means go to tuned's parent,\n\n374\n00:21:28.790 --> 00:21:34.135\nwhich is log and then go to log's parent,\nwhich is var and I end up in /var.\n\n375\n00:21:34.135 --> 00:21:39.280\nNow, the reality is,\nif I were actually in there.\n\n376\n00:21:40.370 --> 00:21:45.479\nSo, if I was in /var,\n/log/tuned, like that, cd../..,\n\n377\n00:21:45.479 --> 00:21:50.064\nthat's five characters,\nI could have just typed cd/var.\n\n378\n00:21:50.064 --> 00:21:51.400\nThat's only four characters.\n\n379\n00:21:51.400 --> 00:21:55.946\nI had to move my fingers more on the\nkeyboard, the letters are further apart.\n\n380\n00:21:55.946 --> 00:21:58.933\n&gt;&gt; It just depends on how great\nof a typist you are, right?\n\n381\n00:21:58.933 --> 00:22:01.050\n&gt;&gt; Yeah, it really is.\nAnd these are all about convenience.\n\n382\n00:22:01.050 --> 00:22:03.870\nBecause the Linux kernel\nitself doesn't use these.\n\n383\n00:22:03.870 --> 00:22:05.620\nThere are just for\nhumans, these are for us.\n\n384\n00:22:05.620 --> 00:22:07.670\nIt has simple aliases for\nus interacting with the system.\n\n385\n00:22:07.670 --> 00:22:12.081\nBut they are there and\nyou're welcome to take advantage of them.\n\n386\n00:22:12.081 --> 00:22:16.990\nBut they do create a kind\nof interesting thing.\n\n387\n00:22:16.990 --> 00:22:21.340\nFor example, let's say I was in /var and\n\n388\n00:22:21.340 --> 00:22:26.124\nI knew that I wanted to\ngo into /var/log/tuned.\n\n389\n00:22:26.124 --> 00:22:31.780\nWell, I could type, cd log and\nthen cd tuned like that.\n\n390\n00:22:31.780 --> 00:22:35.914\nAnd now I'm in /var/log/tuned\nI had to do two commands.\n\n391\n00:22:35.914 --> 00:22:41.081\nOr if I was in /var I could\nhave typed cd/var/log/tuned\n\n392\n00:22:41.081 --> 00:22:44.990\nlike that the full path and\ngotten in there.\n\n393\n00:22:46.290 --> 00:22:50.648\nOr I could have leveraged the .,\nalias and said I wanna go to,\n\n394\n00:22:50.648 --> 00:22:57.480\nthis folder /log/tuned,\nthat saved me a whole two letters.\n\n395\n00:22:57.480 --> 00:22:59.480\nThat's not a great advance.\n\n396\n00:22:59.480 --> 00:23:01.950\nBut it can be a little\nbit useful sometimes.\n\n397\n00:23:01.950 --> 00:23:03.920\nSo that's using the ., alias.\n\n398\n00:23:03.920 --> 00:23:08.850\nSo we saw a ., a .., and a ~,\nall aliases for different places.\n\n399\n00:23:08.850 --> 00:23:10.020\nThe ~ is the most handy.\n\n400\n00:23:10.020 --> 00:23:11.890\nIf you wanna get back to\nyour home directory or\n\n401\n00:23:11.890 --> 00:23:15.490\nif you wanna reference files in your home\ndirectory that ~ comes in really handy.\n\n402\n00:23:15.490 --> 00:23:18.218\nI might wanna copy this\nlog file somewhere.\n\n403\n00:23:18.218 --> 00:23:19.620\nSo I could use the cp command,\n\n404\n00:23:19.620 --> 00:23:24.340\nI wanna copy tuned.log, and\nI'm wanna copy it to my home folder.\n\n405\n00:23:24.340 --> 00:23:28.869\nSo I can say, I wanna cp tuned.log to ~\n/ and I could just stop right there and\n\n406\n00:23:28.869 --> 00:23:32.770\nit would just copy it to my home folder or\nI can even give it a name like\n\n407\n00:23:32.770 --> 00:23:36.400\ntuned.log.bak or something and\nnow it's gonna copy it.\n\n408\n00:23:36.400 --> 00:23:38.608\nAnd I'll have a copy of that right\nthere in my home directory and\n\n409\n00:23:38.608 --> 00:23:40.000\nI didn't have to type the full path.\n\n410\n00:23:40.000 --> 00:23:42.854\nThat's where these aliases\nreally coming in handy.\n\n411\n00:23:42.854 --> 00:23:46.987\n&gt;&gt; All right, man I can really see using\nthat ~ if my last name is something like\n\n412\n00:23:46.987 --> 00:23:48.613\nPappadopolis or something.\n\n413\n00:23:48.613 --> 00:23:51.346\nIt's a lot of typing even\nthough you know your own name,\n\n414\n00:23:51.346 --> 00:23:53.041\nwell we saw Don struggle with his.\n\n415\n00:23:53.041 --> 00:23:56.293\nBut, [LAUGH] that does happen,\nthat ~ I use that a lot.\n\n416\n00:23:56.293 --> 00:24:00.052\nNow another thing that,\nI haven't seen you do it yet,\n\n417\n00:24:00.052 --> 00:24:03.663\nwe can list out just\nthe properties of a single file.\n\n418\n00:24:03.663 --> 00:24:06.728\nAnd a lot of times, especially\nwhen you're working with logs or\n\n419\n00:24:06.728 --> 00:24:10.230\nthings that have repetitive nature\nas far as file naming goes.\n\n420\n00:24:10.230 --> 00:24:12.640\nIt can be difficult because now we've\ngotta weed through a bunch of stuff.\n\n421\n00:24:12.640 --> 00:24:14.370\nIs there any way we can\nmake that a little easier?\n\n422\n00:24:14.370 --> 00:24:14.954\n&gt;&gt; Yeah, absolutely.\n\n423\n00:24:14.954 --> 00:24:18.620\nSo let's say, for example,\nI want to format a system,\n\n424\n00:24:18.620 --> 00:24:21.990\nand so\nI know I need to use the mkfs command.\n\n425\n00:24:21.990 --> 00:24:25.850\nWell, it's tucked away in /user/bin,\nor at least I think it is.\n\n426\n00:24:25.850 --> 00:24:29.550\nSo I'm gonna change directory into\n/user/bin, and I'm gonna try and\n\n427\n00:24:29.550 --> 00:24:30.807\nfind this command.\n\n428\n00:24:30.807 --> 00:24:34.270\nWell, there's a lot of commands\nthat are in this folder.\n\n429\n00:24:34.270 --> 00:24:37.642\nI mean, I've got screen after\nscreen after screen of stuff, okay?\n\n430\n00:24:37.642 --> 00:24:41.238\nSo sometimes our directory\nlistings can be really big-\n\n431\n00:24:41.238 --> 00:24:43.267\n&gt;&gt; [CROSSTALK]\n\n432\n00:24:43.267 --> 00:24:44.422\n&gt;&gt; This is a great example,\n\n433\n00:24:44.422 --> 00:24:45.582\nthis folder is massive.\n\n434\n00:24:45.582 --> 00:24:49.411\nSo, if I want to try and find something,\nthis is not the way to do it, right?\n\n435\n00:24:49.411 --> 00:24:51.316\nThis is taking way too long.\n\n436\n00:24:51.316 --> 00:24:51.953\nAnd in the end,\n\n437\n00:24:51.953 --> 00:24:54.660\nit turned out to be the wrong folder\ncuz the mkfs stuff is not here.\n\n438\n00:24:54.660 --> 00:25:00.399\n[CROSSTALK] Yeah,\nmust be in the other one.\n\n439\n00:25:00.399 --> 00:25:02.148\nSo, I can switch into that one.\n\n440\n00:25:02.148 --> 00:25:05.195\nAnd so there,\nI'm using my ..alias to move up in /user.\n\n441\n00:25:05.195 --> 00:25:07.235\nAnd then cd into s bin and getting here.\n\n442\n00:25:07.235 --> 00:25:08.145\nThis is also a big one.\n\n443\n00:25:08.145 --> 00:25:11.218\nThere's a lot of stuff in here, including\nthe commands that I was talking about.\n\n444\n00:25:11.218 --> 00:25:15.047\n&gt;&gt; [CROSSTALK]\n&gt;&gt; So if I'm just trying to find those\n\n445\n00:25:15.047 --> 00:25:19.309\nMKFS commands, when I run ls,\nit shows everything, all right?\n\n446\n00:25:19.309 --> 00:25:22.610\nWell, there's something that's\ncalled a wild card I can use.\n\n447\n00:25:22.610 --> 00:25:27.030\nAnd a wild card says show me files\nthat match a certain pattern.\n\n448\n00:25:27.030 --> 00:25:30.540\nAnd I can say, for example,\nI know the commands start with MKFS.\n\n449\n00:25:30.540 --> 00:25:34.390\nSo show me every command that\nstarts with MKFS or maybe just M.\n\n450\n00:25:34.390 --> 00:25:35.883\nShow me every command that starts with M.\n\n451\n00:25:35.883 --> 00:25:41.260\nSo I'm gonna say, lsm, and\nstick and asterisk or a star there.\n\n452\n00:25:41.260 --> 00:25:43.880\nAnd the asterisk means any string.\n\n453\n00:25:43.880 --> 00:25:46.960\nSo, it starts with an M,\nfollowed by any string.\n\n454\n00:25:46.960 --> 00:25:50.930\nAnd when I run that,\nI just get the commands that start with M.\n\n455\n00:25:50.930 --> 00:25:54.480\nAnd man, that makes it a lot easier\nto find the MKFS stuff, right?\n\n456\n00:25:54.480 --> 00:25:58.520\nOr if I had done ls mkfs*, right?\n\n457\n00:25:58.520 --> 00:26:01.420\nNow, I just see the make\nfiles system commands.\n\n458\n00:26:01.420 --> 00:26:04.180\nAnd now,\nI'm getting a much more filtered view.\n\n459\n00:26:04.180 --> 00:26:07.333\nSo that little asterisk\nis pretty darn handy.\n\n460\n00:26:07.333 --> 00:26:10.232\nAnd it's even handy if\nthe command you wanna use,\n\n461\n00:26:10.232 --> 00:26:13.740\nmaybe you know something is\nin the middle of it, right?\n\n462\n00:26:13.740 --> 00:26:16.640\nLike maybe I'm working with\na logical volume manager, and\n\n463\n00:26:16.640 --> 00:26:21.470\nI need to create something and I can't\nremember what the first two letters are.\n\n464\n00:26:21.470 --> 00:26:23.015\nBut I know it's got the word create in it.\n\n465\n00:26:23.015 --> 00:26:27.189\nSo I might do a ls*create*.\n\n466\n00:26:27.189 --> 00:26:29.180\nSo, it's got something at the beginning.\n\n467\n00:26:29.180 --> 00:26:30.120\nIt's got something at the end.\n\n468\n00:26:30.120 --> 00:26:31.780\nBut the word create is in the middle.\n\n469\n00:26:31.780 --> 00:26:32.822\nAnd I can run that.\n\n470\n00:26:32.822 --> 00:26:38.610\nAnd here I get, lvcreate, pvcreate,\nvgcreate, create crack lib- dict,\n\n471\n00:26:38.610 --> 00:26:42.537\nI don't actually [CROSSTALK]\npassword complexity.\n\n472\n00:26:42.537 --> 00:26:46.139\nYeah, so I've got each of these\ndifferent things here and\n\n473\n00:26:46.139 --> 00:26:48.280\nthey all contain the word create.\n\n474\n00:26:48.280 --> 00:26:49.438\nSo it's an easy way to find that.\n\n475\n00:26:49.438 --> 00:26:52.860\nIf I had just done just ls create,\nI would have gotten nothing.\n\n476\n00:26:52.860 --> 00:26:55.198\nThere's no command called create.\n\n477\n00:26:55.198 --> 00:26:56.745\nAnd if I had done create*,\n\n478\n00:26:56.745 --> 00:27:01.200\nI would have only gotten the crack lib\ncommand because its starts with create.\n\n479\n00:27:01.200 --> 00:27:03.150\nThe other commands ended with create.\n\n480\n00:27:03.150 --> 00:27:06.017\nSo by doing *create*, I get all of them.\n\n481\n00:27:06.017 --> 00:27:07.073\n&gt;&gt; So it's a wild card.\n\n482\n00:27:07.073 --> 00:27:08.400\n&gt;&gt; It's wild card, yeah.\n\n483\n00:27:08.400 --> 00:27:10.660\nAnd it's the most common wild card,\nan asterisk.\n\n484\n00:27:10.660 --> 00:27:16.340\nYou could be very specific, though,\nlike with the logical volume manager.\n\n485\n00:27:16.340 --> 00:27:21.080\nMaybe l wanna find lvcreate and\npvcreate, but not vgcreate, right?\n\n486\n00:27:21.080 --> 00:27:25.440\nSo, these two they both start, well,\none starts with l, one starts with p.\n\n487\n00:27:25.440 --> 00:27:27.189\nBut then the whole rest of it is the same.\n\n488\n00:27:27.189 --> 00:27:30.510\nInstead of an asterisks,\nI can do a question mark.\n\n489\n00:27:31.850 --> 00:27:35.860\nAnd the question mark means\nany one character, right?\n\n490\n00:27:35.860 --> 00:27:38.530\nNot any number of characters, just one.\n\n491\n00:27:38.530 --> 00:27:42.430\nSo I can have any letter\nfollowed by vcreate.\n\n492\n00:27:42.430 --> 00:27:45.840\nAnd when I run that, I get lv create and\npvcreate and that's it.\n\n493\n00:27:45.840 --> 00:27:47.830\nI don't get vgcreate or whatever.\n\n494\n00:27:47.830 --> 00:27:50.540\nCuz I'm just saying one single letter.\n\n495\n00:27:50.540 --> 00:27:53.700\nAnd that's handy if there's like\ncommands that had a number in it.\n\n496\n00:27:53.700 --> 00:27:57.110\nAnd so there might be a few different\nvariations until you can hunt those and\n\n497\n00:27:57.110 --> 00:27:59.300\nfind them down like that.\n\n498\n00:27:59.300 --> 00:28:00.680\nIt could be useful sometimes.\n\n499\n00:28:00.680 --> 00:28:03.150\nBut far less useful than just\ndoing an asterisk, right?\n\n500\n00:28:03.150 --> 00:28:07.999\nCuz I could have done the same thing with\nan asterisk and found those same commands.\n\n501\n00:28:07.999 --> 00:28:14.645\nBut I might have also found something\nlike RMV creatorm for example.\n\n502\n00:28:14.645 --> 00:28:16.241\nSomething that had more\nthan one letter in there.\n\n503\n00:28:16.241 --> 00:28:17.983\nSo the question mark is very similar.\n\n504\n00:28:17.983 --> 00:28:21.520\nAsterisk will get any\nnumber of characters.\n\n505\n00:28:21.520 --> 00:28:24.780\n&gt;&gt; So, Don, I've noticed that as\nyou've been perusing through the file\n\n506\n00:28:24.780 --> 00:28:29.150\nsystem here on your lovely LINUX machine,\nthat you didn't seem to have to do\n\n507\n00:28:29.150 --> 00:28:33.240\na lot of hunting and fishing for\nwhere do I want to go again.\n\n508\n00:28:33.240 --> 00:28:36.750\nYou seemed to almost intuitively\nknow where you wanted to go,\n\n509\n00:28:36.750 --> 00:28:38.460\nand there's a good reason for that, right?\n\n510\n00:28:38.460 --> 00:28:39.320\n&gt;&gt; That's right.\n\n511\n00:28:39.320 --> 00:28:42.520\nSo in the Linux world,\nwe have what's called the FHS, so\n\n512\n00:28:42.520 --> 00:28:44.950\nthe filesystem hierarchy standard.\n\n513\n00:28:44.950 --> 00:28:49.070\nAnd almost every distro follows\nthe file system hierarchy standard.\n\n514\n00:28:49.070 --> 00:28:54.080\nSo I can sit down on a DEBIAN system, on\nan Ubuntu system, on a Fedora or Red Hat,\n\n515\n00:28:54.080 --> 00:28:57.180\nCentOS, and have a pretty good\nidea where my files are gonna be.\n\n516\n00:28:57.180 --> 00:28:59.053\nNow, I was wrong once, right?\n\n517\n00:28:59.053 --> 00:29:01.722\nBut I knew exactly where\nto go after I was wrong, so\n\n518\n00:29:01.722 --> 00:29:05.940\nthat's the file hierarchical system,\nthat's how I knew where to go.\n\n519\n00:29:05.940 --> 00:29:08.590\nAnd the more you work with Linux, the more\nyou'll get familiarized with that.\n\n520\n00:29:08.590 --> 00:29:09.990\nBut just as a quick overview, and\n\n521\n00:29:09.990 --> 00:29:12.645\nI'll put this in the show notes as well so\nyou guys will have it.\n\n522\n00:29:12.645 --> 00:29:17.146\nBut as a quick overview, when you look at\nyour root folder, so I'm just gonna type\n\n523\n00:29:17.146 --> 00:29:21.720\ncd /, that takes me to the root of\nmy file system, the very beginning.\n\n524\n00:29:21.720 --> 00:29:26.870\nIf I do an ls, and take a look at what's\nin there, I'm gonna see some folders.\n\n525\n00:29:26.870 --> 00:29:29.530\nAnd these folders each have\nnames that are specific to\n\n526\n00:29:29.530 --> 00:29:31.560\nwhat's contained inside of them.\n\n527\n00:29:31.560 --> 00:29:35.620\nAnd I have a pretty good idea of where\nsomething is gonna be because this names\n\n528\n00:29:35.620 --> 00:29:36.850\nare consistent.\n\n529\n00:29:36.850 --> 00:29:38.910\nSo I'm running Red Hat Enterprise Linux.\n\n530\n00:29:38.910 --> 00:29:40.345\nYou might be running Debian.\n\n531\n00:29:40.345 --> 00:29:44.180\nAnd if you're doing the same thing as me,\nyou probably see the same folders.\n\n532\n00:29:44.180 --> 00:29:46.450\nMaybe some little variations,\nbut mostly the same.\n\n533\n00:29:46.450 --> 00:29:51.860\nSo, for example, bin and sbin, that's for\nbinaries and shared binaries, right?\n\n534\n00:29:51.860 --> 00:29:55.350\nIf you look inside of the user folder,\nusr, that's for\n\n535\n00:29:55.350 --> 00:29:59.221\nbinaries that have been installed\nby us as part of the system.\n\n536\n00:29:59.221 --> 00:30:02.894\nAnd so you have a /user/bin and\n/user/sbin.\n\n537\n00:30:02.894 --> 00:30:06.299\nAnd those are our available your\nexecutables are normally gonna be one of\n\n538\n00:30:06.299 --> 00:30:07.182\nthose four folders.\n\n539\n00:30:07.182 --> 00:30:10.851\nSo when l am looking for a program,\nl know it's gonna be one of those four.\n\n540\n00:30:10.851 --> 00:30:12.502\nAnd in the Red Hat world,\n\n541\n00:30:12.502 --> 00:30:17.000\nsbin and bin are actually linked\nto /user/bin and /user/sbin.\n\n542\n00:30:17.000 --> 00:30:18.930\nSo that really narrows it\ndown to two folders for me.\n\n543\n00:30:18.930 --> 00:30:21.170\nI know programs are going to be\nin one of those two folders,\n\n544\n00:30:21.170 --> 00:30:22.940\nthat's why I didn't have to hunt for\nthat program.\n\n545\n00:30:24.120 --> 00:30:27.280\nAny services that generate\nfiles like log files,\n\n546\n00:30:27.280 --> 00:30:31.204\nthose will normally go into VAR,\nVAR, which is for various.\n\n547\n00:30:31.204 --> 00:30:33.277\nThat's where our various\nfiles it gets stored.\n\n548\n00:30:33.277 --> 00:30:38.800\nAnd so I know when I'm looking for\nlogs, /VAR/log is where to go.\n\n549\n00:30:38.800 --> 00:30:41.780\nOr your principle would be /var/spool.\n\n550\n00:30:41.780 --> 00:30:46.247\nYour website which stores\nweb files in /var or /www.\n\n551\n00:30:46.247 --> 00:30:48.240\nSo you kind of know those places.\n\n552\n00:30:48.240 --> 00:30:51.600\nYou learn them because it's a standard,\nit's pretty common.\n\n553\n00:30:51.600 --> 00:30:54.114\nSome of the other ones, you've got /proc,\n\n554\n00:30:54.114 --> 00:30:57.367\nwhich is where a lot of\nthe information about your system.\n\n555\n00:30:57.367 --> 00:30:58.620\nIt's short for processes.\n\n556\n00:30:58.620 --> 00:31:01.652\nA lot of the system statistics\nwill come out of there.\n\n557\n00:31:01.652 --> 00:31:06.214\n/etc, that's where the majority of\nyour system configuration is stored,\n\n558\n00:31:06.214 --> 00:31:10.450\nthe config files that dictate how\nLinux is running are stored in /etc.\n\n559\n00:31:10.450 --> 00:31:14.850\n/opt ore optional binaries, binaries\nthat were not a part of the distro you\n\n560\n00:31:14.850 --> 00:31:18.840\ninstalled but were a part of third party\nsoftware that you added afterwards.\n\n561\n00:31:18.840 --> 00:31:20.320\nSome systems don't use /opt.\n\n562\n00:31:20.320 --> 00:31:24.690\nInstead, they use /local,\nwhich is confusing, but it does happen.\n\n563\n00:31:24.690 --> 00:31:27.770\nNot everybody follows the file\nsystem hierarchy, but if they do,\n\n564\n00:31:27.770 --> 00:31:30.840\nyou'll have /opt, and\nthat's where that will be.\n\n565\n00:31:30.840 --> 00:31:34.102\nA couple others that are important,\nlet's see.\n\n566\n00:31:34.102 --> 00:31:35.052\n/home, right?\n\n567\n00:31:35.052 --> 00:31:37.580\nWhere our home directory's are,\nthat's a pretty handy one.\n\n568\n00:31:37.580 --> 00:31:42.547\nAnd /dev, that's where all of our\nhardware gets detected and mapped.\n\n569\n00:31:42.547 --> 00:31:45.290\nI made the comment earlier\nthat in the Linux world,\n\n570\n00:31:45.290 --> 00:31:49.340\nalmost everything is referenced as a file,\nincluding all your hardware.\n\n571\n00:31:49.340 --> 00:31:52.149\nIf I go into the dev folder and\nI take a look, I'll see these\n\n572\n00:31:52.149 --> 00:31:55.400\nlittle names that are all mapping\nto different hardware on my system.\n\n573\n00:31:55.400 --> 00:31:58.910\nMy hard drive is an nvme drive,\nand so there it is right there,\n\n574\n00:31:58.910 --> 00:31:59.610\nthat's my hard drive.\n\n575\n00:31:59.610 --> 00:32:03.528\nI get a second hard drive in here,\nit should show as sda, yeah, there it is,\n\n576\n00:32:03.528 --> 00:32:05.019\nthere's my sda hard drive.\n\n577\n00:32:05.019 --> 00:32:06.779\nHow do I know that sda is my hard drive?\n\n578\n00:32:06.779 --> 00:32:07.995\nCuz I memorized that, right?\n\n579\n00:32:07.995 --> 00:32:10.405\nSome of this stuff we have to memorize,\nit's not intuitive.\n\n580\n00:32:10.405 --> 00:32:11.787\nSome of it is intuitive, though.\n\n581\n00:32:11.787 --> 00:32:17.904\nLike if you see /CDROM, it's a pretty good\nidea that that's probably your CDROM.\n\n582\n00:32:17.904 --> 00:32:19.781\nMost of mine, well CPU.\n\n583\n00:32:19.781 --> 00:32:21.083\nI had a pretty good guess where that is,\nright?\n\n584\n00:32:21.083 --> 00:32:21.710\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n585\n00:32:21.710 --> 00:32:23.372\neach of these are represented, though.\n\n586\n00:32:23.372 --> 00:32:24.388\nAnd if you learn this,\n\n587\n00:32:24.388 --> 00:32:27.972\nif you get used to this file system,\nthe file system hierarchy standard, FHS,\n\n588\n00:32:27.972 --> 00:32:31.474\nthen you'll be able to jump from Linux\nbox to Linux box, and even to Unix box.\n\n589\n00:32:31.474 --> 00:32:34.360\nYou can jump over to BSD and\na lot of this will be the same.\n\n590\n00:32:34.360 --> 00:32:36.584\nNot everything, but\na lot of it will be the same.\n\n591\n00:32:36.584 --> 00:32:38.580\nThat certainly makes life easier on us.\n\n592\n00:32:38.580 --> 00:32:42.285\n&gt;&gt; Well, Don, this has been a great look\nat the Linux file system, all the ways in\n\n593\n00:32:42.285 --> 00:32:45.599\nwhich we can move around it,\ncuz that can definitely be very helpful,\n\n594\n00:32:45.599 --> 00:32:48.602\neven create directories,\nadd to the file system if we need to.\n\n595\n00:32:48.602 --> 00:32:51.162\nNow I can create that dash loser and\nput your home directory there.\n\n596\n00:32:51.162 --> 00:32:54.789\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] That'll be a lot of fun for me.\n\n597\n00:32:54.789 --> 00:32:57.860\nBut, and also,\njust some of the basic understanding.\n\n598\n00:32:57.860 --> 00:33:02.035\nThis is the typical template that you'll\nsee, as far as a file system goes,\n\n599\n00:33:02.035 --> 00:33:04.135\ninside of most Linux distributions.\n\n600\n00:33:04.135 --> 00:33:04.995\nDon, thanks so much.\n\n601\n00:33:04.995 --> 00:33:08.240\nAnd as always, do you have any\nparting words of wisdom for us?\n\n602\n00:33:08.240 --> 00:33:10.580\n&gt;&gt; Just get in there, browse around,\nyou'll get used to this pretty quick.\n\n603\n00:33:10.580 --> 00:33:13.150\nNavigating the file system is\nsomething you do every day, so these\n\n604\n00:33:13.150 --> 00:33:16.930\nare commands that will get committed to\nmemory really quick and that will be that.\n\n605\n00:33:16.930 --> 00:33:19.949\nThere's aliases and other things you can\ndo to make your job a little easier.\n\n606\n00:33:19.949 --> 00:33:22.830\nA lot of these commands have advanced\nfunctions you can do to really kind of\n\n607\n00:33:22.830 --> 00:33:24.049\ncrank out some productivity.\n\n608\n00:33:24.049 --> 00:33:27.279\nBut just for the basics,\nls, cd, couple of aliases,\n\n609\n00:33:27.279 --> 00:33:30.245\nthat will be enough to get\nyou by in the beginning.\n\n610\n00:33:30.245 --> 00:33:33.636\nAnd these are commands that you'll learn\nfor life, ones that you'll use all the way\n\n611\n00:33:33.636 --> 00:33:36.520\nuntil you stop using computers,\nthey're that frequently used.\n\n612\n00:33:36.520 --> 00:33:38.731\n&gt;&gt; All right, well, Don,\nthanks again for dropping by,\n\n613\n00:33:38.731 --> 00:33:40.295\nwe do thank our audience for watching.\n\n614\n00:33:40.295 --> 00:33:43.626\nBut I'm looking at the clock and\nit is well past time for us to quit,\n\n615\n00:33:43.626 --> 00:33:45.187\nso thanks again for watching.\n\n616\n00:33:45.187 --> 00:33:48.486\nWe're gonna go ahead and sign off,\nfor ITProTV, I've been your host,\n\n617\n00:33:48.486 --> 00:33:49.255\nDaniel Lowrie.\n\n618\n00:33:49.255 --> 00:33:50.151\n&gt;&gt; And I'm Don Pezet.\n\n619\n00:33:50.151 --> 00:33:52.476\n&gt;&gt; And we'll see you next time.\n\n620\n00:33:52.476 --> 00:33:58.471\n[MUSIC]\n\n621\n00:33:58.471 --> 00:34:01.649\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "234903815"
        },
        {
          "description": "In this episode, Don demonstrates how to work with files while in the Linux command line. He begins by demonstrating how to create empty files, how to create multiple files at once, and how to create files containing data by using the output from other commands.",
          "length": "1728",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-2-2-1-working_with_files-092117-PGM.00_28_32_15.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-2-2-1-working_with_files-092117-PGM.00_28_32_15.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-2-2-1-working_with_files-092117-PGM.00_28_32_15.Still001-sm.jpg",
          "title": "Working with Files",
          "transcript": "WEBVTT\n\n1\n00:00:00.300 --> 00:00:03.483\nWelcome to ITProTV I'm\nyour host Don Pezet.\n\n2\n00:00:03.483 --> 00:00:05.937\n&gt;&gt; [CROSSTALK]\n\n3\n00:00:05.937 --> 00:00:08.249\n[MUSIC]\n\n4\n00:00:08.249 --> 00:00:09.917\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:09.917 --> 00:00:13.410\n&gt;&gt; All right greetings everyone and\n\n6\n00:00:13.410 --> 00:00:15.915\nwelcome back\n&gt;&gt; To another exciting episode of\n\n7\n00:00:15.915 --> 00:00:18.735\nIT PRO.TV, I am your host Daniel Lowrie.\n\n8\n00:00:18.735 --> 00:00:21.645\nAnd in today's episode we are getting\nback on the swing of things with more\n\n9\n00:00:21.645 --> 00:00:23.515\nin our analytics command line series.\n\n10\n00:00:23.515 --> 00:00:25.615\nJoining us in the studio yet\nagain, you know him and love him,\n\n11\n00:00:25.615 --> 00:00:27.275\nhe' s agood friend Mr. Don Pezet.\n\n12\n00:00:27.275 --> 00:00:29.515\nDon welcome back sir,\nhow's it going your day?\n\n13\n00:00:29.515 --> 00:00:30.635\n&gt;&gt; It is going great Dan.\n\n14\n00:00:30.635 --> 00:00:32.675\nReady to dive back in\nto the command line and\n\n15\n00:00:32.675 --> 00:00:35.815\nin this episode we are going to be taking\na look at working with files, right.\n\n16\n00:00:35.815 --> 00:00:37.880\nIn the last episode or earlier ones.\n\n17\n00:00:37.880 --> 00:00:41.190\nWe got a chance to look at the LS command,\nand how we can look at the file system,\n\n18\n00:00:41.190 --> 00:00:43.090\nwe can navigate the file system,\nand get around.\n\n19\n00:00:43.090 --> 00:00:46.605\nBut the whole point about the file\nsystem is that it's got files,\n\n20\n00:00:46.605 --> 00:00:50.700\n[LAUGH] We should probably learn a little\nbit about messing around with those files.\n\n21\n00:00:50.700 --> 00:00:53.100\nSo that's what we're gonna take\na look at right here in this episode.\n\n22\n00:00:53.100 --> 00:00:55.710\n&gt;&gt; All right Don,\nwhen you say messing around with files.\n\n23\n00:00:55.710 --> 00:00:59.720\nI assume you mean Manipulating them,\nlooking at them, moving them,\n\n24\n00:00:59.720 --> 00:01:00.660\ndoing stuff like that.\n\n25\n00:01:00.660 --> 00:01:03.520\n&gt;&gt; Absolutely yeah, and\nlet's start with looking at them right.\n\n26\n00:01:03.520 --> 00:01:04.300\n&gt;&gt; Okay.\n&gt;&gt; So just\n\n27\n00:01:04.300 --> 00:01:08.140\nbeing able to see the contents\nof a file is an important thing.\n\n28\n00:01:08.140 --> 00:01:11.380\nWe've already seen the contents\nof files through various other\n\n29\n00:01:11.380 --> 00:01:15.060\nutilities like when we ran the man\ncommand to view man pages.\n\n30\n00:01:15.060 --> 00:01:18.200\nManual pages are really just files\nstored on the hard drive somewhere.\n\n31\n00:01:18.200 --> 00:01:20.830\nAnd it finds them and retrieves them and\nputs them on the screen.\n\n32\n00:01:20.830 --> 00:01:24.140\nBut as you work with the operating system\nyou're going to wanna view files as well.\n\n33\n00:01:24.140 --> 00:01:26.380\nEither your own files or\nconfiguration files,\n\n34\n00:01:26.380 --> 00:01:30.460\nmaybe you just wanna see how the OS is\nconfigured, I need to see those files.\n\n35\n00:01:30.460 --> 00:01:32.090\nSo we're gonna do that right here.\n\n36\n00:01:32.090 --> 00:01:36.950\nAnd I'll start with one of the oldest\nUnix commands, one that is present in\n\n37\n00:01:36.950 --> 00:01:41.830\nevery operating system it is the cat\ncommand, C-A-T And what cat does,\n\n38\n00:01:41.830 --> 00:01:48.110\nis it lets us take the data from inside\nof a file, and display it on the screen.\n\n39\n00:01:48.110 --> 00:01:49.670\nAll right, we can just take it and\n\n40\n00:01:49.670 --> 00:01:53.660\nexport it and bring it into what's called\nthe standard out which is your screen.\n\n41\n00:01:53.660 --> 00:01:54.710\nThat's what you see.\n\n42\n00:01:54.710 --> 00:01:58.940\nSo for example here on my system,\nI have a copy.\n\n43\n00:01:58.940 --> 00:02:01.790\nOf the full text of Moby Dick\nwhich Daniel has suggested.\n\n44\n00:02:01.790 --> 00:02:03.560\nThat came from Project Guttenberg.\n\n45\n00:02:03.560 --> 00:02:07.690\nMoby Dick is a massive novel, so\nI figured this was a pretty good example.\n\n46\n00:02:07.690 --> 00:02:08.535\n&gt;&gt; Plenty of text to work with.\n\n47\n00:02:08.535 --> 00:02:10.120\n[LAUGH]\n&gt;&gt; Yeah, absolutely.\n\n48\n00:02:10.120 --> 00:02:11.960\nSo if I wanna read this,\n\n49\n00:02:11.960 --> 00:02:16.150\nif I wanna see the data that's inside of\nthat file, I can use the cat command.\n\n50\n00:02:16.150 --> 00:02:20.780\nAnd I can just say cat mobydick\n&gt;&gt; Mobydick [LAUGH]\n\n51\n00:02:20.780 --> 00:02:22.290\n&gt;&gt; If I can spell it mobydick.txt.\n\n52\n00:02:22.290 --> 00:02:22.830\nThere we go.\n\n53\n00:02:22.830 --> 00:02:23.510\nAll right.\n\n54\n00:02:23.510 --> 00:02:27.960\nSo I can type that in and it's gonna\nbasically use that test file as the input\n\n55\n00:02:27.960 --> 00:02:32.960\nto feed that into the cat command\nwhich will then display it on screen.\n\n56\n00:02:32.960 --> 00:02:35.960\nRight?\nSo if we wanna read it, there we go.\n\n57\n00:02:35.960 --> 00:02:36.730\nAnd that was it.\n\n58\n00:02:36.730 --> 00:02:38.930\nWe just read Moby Dick in record time.\n\n59\n00:02:38.930 --> 00:02:41.930\n&gt;&gt; [LAUGH] Yeah, I hope you're Superman or\nsomething like that.\n\n60\n00:02:41.930 --> 00:02:44.060\nBecause that was pretty quick Flash-like.\n\n61\n00:02:44.060 --> 00:02:48.900\n&gt;&gt; Yeah, it was something about the Cat\ncommand is that no holds barred, right?\n\n62\n00:02:48.900 --> 00:02:50.970\nHolds no punches.\n\n63\n00:02:50.970 --> 00:02:53.420\nAll the text right at you all at once.\n\n64\n00:02:53.420 --> 00:02:56.660\nIf you got a file just contains one or\ntwo lines.\n\n65\n00:02:56.660 --> 00:02:57.630\nThe cat command is great.\n\n66\n00:02:57.630 --> 00:02:59.570\nIt'll show those one or\ntwo lines and that's it.\n\n67\n00:02:59.570 --> 00:03:04.390\nBut Moby Dick is thousands\nof pages long or whatever.\n\n68\n00:03:04.390 --> 00:03:06.140\nIt's a massive amount of data.\n\n69\n00:03:06.140 --> 00:03:11.160\nAnd so while the cat command is handy, it\ncan be a little bit on the excessive side.\n\n70\n00:03:11.160 --> 00:03:14.540\nAnd so while it is a very old tool,\none that's been around a long time,\n\n71\n00:03:14.540 --> 00:03:19.160\none that is there to be used I admittedly\ndon't use it very often because there\n\n72\n00:03:19.160 --> 00:03:22.580\nare other utilities we can use\nthat help with that right?\n\n73\n00:03:22.580 --> 00:03:25.630\nFor example the more utility.\n\n74\n00:03:25.630 --> 00:03:30.480\nMore is just like cat,\nexcept it creates little\n\n75\n00:03:30.480 --> 00:03:35.190\npauses every 24 lines so that you can\nread the text and then move forward.\n\n76\n00:03:35.190 --> 00:03:37.900\nSo this is a little more handy,\na little more human right?\n\n77\n00:03:37.900 --> 00:03:40.570\nThe cat command is a little more\nuseful when we're doing scripting.\n\n78\n00:03:40.570 --> 00:03:43.730\nWhen I want to take the content to one\nfile and dump it into another file,\n\n79\n00:03:43.730 --> 00:03:44.660\nI don't need page breaks.\n\n80\n00:03:44.660 --> 00:03:46.020\nThat's not a human operation.\n\n81\n00:03:46.020 --> 00:03:50.681\nIt's a script image, just give me all the\ntext at once and let me fill it over here.\n\n82\n00:03:50.681 --> 00:03:54.505\nThat's what CAT does, but as a human,\nthe more Command is better and\n\n83\n00:03:54.505 --> 00:03:59.095\nif I do more and I provide that,\nI can type to that.\n\n84\n00:03:59.095 --> 00:04:03.815\nWith the command line you got\ntab auto complete which is nice.\n\n85\n00:04:03.815 --> 00:04:07.380\nSo you type the first couple\nof characters and you hit tab.\n\n86\n00:04:07.380 --> 00:04:10.875\n&gt;&gt; [LAUGH]\n&gt;&gt; So I'll do more mobydick.text and\n\n87\n00:04:10.875 --> 00:04:13.790\nthis time when I run it\n&gt;&gt; Say what stopped.\n\n88\n00:04:13.790 --> 00:04:14.930\nAnd here's the very beginning.\n\n89\n00:04:14.930 --> 00:04:16.900\nWe have that famous first line.\n\n90\n00:04:16.900 --> 00:04:18.920\nThat [COUGH] call me Ishmael.\n\n91\n00:04:18.920 --> 00:04:20.210\nRight?\nAnd here it goes.\n\n92\n00:04:20.210 --> 00:04:21.560\nAnd we get the text.\n\n93\n00:04:21.560 --> 00:04:24.320\nAnd I can see I'm 0% through this novel.\n\n94\n00:04:24.320 --> 00:04:29.650\nAnd if I press the space bar,\nIt jumps to the next page, and\n\n95\n00:04:29.650 --> 00:04:30.405\nthe next page, and the next page.\n\n96\n00:04:30.405 --> 00:04:35.790\nAnd unfortunately this novel is so\nlong that I'm still 0% of the way through.\n\n97\n00:04:35.790 --> 00:04:38.334\nBut if I hold that space bar I'm 8%.\n\n98\n00:04:38.334 --> 00:04:41.080\n&gt;&gt; You're 8% son.\n&gt;&gt; This would take a while to get through.\n\n99\n00:04:41.080 --> 00:04:44.860\nBut I can scroll through now and\nI can get pagination.\n\n100\n00:04:44.860 --> 00:04:48.830\nSo when you know you're gonna be looking\nat something that is longer than the one\n\n101\n00:04:48.830 --> 00:04:52.910\nscreen, right, or if you just don't\nwanna scroll back, because I might do,\n\n102\n00:04:52.910 --> 00:04:55.995\nI might scroll back here on my-\n&gt;&gt; Hold on I was reading that.\n\n103\n00:04:55.995 --> 00:04:58.750\n&gt;&gt; [LAUGH] So I can always use my\n&gt;&gt; My scroll back buffer if I've got one,\n\n104\n00:04:58.750 --> 00:05:01.660\nI might not have a scroll\nback buffer if I'm using like\n\n105\n00:05:01.660 --> 00:05:04.600\nthe physical console of\na machine I wouldn't have that.\n\n106\n00:05:04.600 --> 00:05:08.890\nBut gives me that page break,\nevery 24 lines, I can read,\n\n107\n00:05:08.890 --> 00:05:10.930\nI can advance, and we can move forward.\n\n108\n00:05:10.930 --> 00:05:14.850\nNow, there's really three kind of\nkey strokes we need to remember with\n\n109\n00:05:14.850 --> 00:05:16.070\nthe more command.\n\n110\n00:05:16.070 --> 00:05:16.860\nOne's the space bar.\n\n111\n00:05:16.860 --> 00:05:17.870\nThat's what I was just using.\n\n112\n00:05:17.870 --> 00:05:21.310\nEvery time I hit space,\nit advances a page, okay.\n\n113\n00:05:21.310 --> 00:05:23.120\nThere's also the enter key.\n\n114\n00:05:23.120 --> 00:05:27.390\nIf I press enter, it's moving one line.\n\n115\n00:05:27.390 --> 00:05:29.890\nIf I just wanna go ahead one\nline it's the enter key.\n\n116\n00:05:29.890 --> 00:05:33.950\nIf I wanna go a full page or\n24 lines, That's space.\n\n117\n00:05:33.950 --> 00:05:38.260\nSo enter and space, and\nif I reach the end of this document which\n\n118\n00:05:38.260 --> 00:05:41.560\neventually would happen,\nthen enter space exit the document,\n\n119\n00:05:41.560 --> 00:05:46.470\nI've reach the end, but if I wanna get out\nof it right now I'm 90% of the way through\n\n120\n00:05:46.470 --> 00:05:50.730\nI don't wanna get the rest of the way,\nI can just hit Q on the keyboard and\n\n121\n00:05:50.730 --> 00:05:53.590\nQ will take me out, and\nnow I'm out of the file, and\n\n122\n00:05:53.590 --> 00:05:56.535\nnow I'm never learning about what happens\nto clickwaves and that's just all.\n\n123\n00:05:56.535 --> 00:05:57.130\n&gt;&gt; [LAUGH]\n&gt;&gt; So,\n\n124\n00:05:58.150 --> 00:05:59.660\n&gt;&gt; We had space for\n\n125\n00:05:59.660 --> 00:06:04.390\nmoving at a page, enter for moving at\na line and queue for quitting out, right?\n\n126\n00:06:04.390 --> 00:06:08.320\nIf you remember those three things, that's\nthe three most useful things to use inside\n\n127\n00:06:08.320 --> 00:06:13.610\nof the more command but\njust think of more as like cat for humans.\n\n128\n00:06:13.610 --> 00:06:16.450\nCat is great for programmatic operations.\n\n129\n00:06:16.450 --> 00:06:17.960\nMore is great for human.\n\n130\n00:06:17.960 --> 00:06:20.940\n&gt;&gt; Now, Don, there's a similar\ncommand to more called less.\n\n131\n00:06:20.940 --> 00:06:21.930\nAm I correct?\n\n132\n00:06:21.930 --> 00:06:26.393\n&gt;&gt; Yes, there is and\nhonestly I use less more than I use more.\n\n133\n00:06:26.393 --> 00:06:28.675\n&gt;&gt; [LAUGH]\n&gt;&gt; This gets a little confusing.\n\n134\n00:06:28.675 --> 00:06:32.100\nSo the more command is the original\none that adds pagination to pretty\n\n135\n00:06:32.100 --> 00:06:33.130\nmuch anything.\n\n136\n00:06:33.130 --> 00:06:39.360\nBut More has some limitations, for\nexample, More only moves forward, right.\n\n137\n00:06:39.360 --> 00:06:43.820\nSo what if I'm reading Mobi Dick,\nlet me clear my screen and\n\n138\n00:06:43.820 --> 00:06:48.640\nI'm reading it and I move forward a few\npages and shu, I wanna go back a page.\n\n139\n00:06:48.640 --> 00:06:49.520\nWell too bad.\n\n140\n00:06:49.520 --> 00:06:53.150\nMore only goes forward, and that's it.\n\n141\n00:06:53.150 --> 00:06:56.060\nSo somebody came up with a new utility,\n\n142\n00:06:56.060 --> 00:07:00.320\na More on steroids as they came up\nwith the creative name of less,\n\n143\n00:07:00.320 --> 00:07:04.140\nand unlike the name implies less actually\nhas more features than the more.\n\n144\n00:07:04.140 --> 00:07:06.000\nSo sometimes less is more.\n\n145\n00:07:06.000 --> 00:07:07.220\n&gt;&gt; That's right.\n&gt;&gt; I think it's the way to joke,\n\n146\n00:07:07.220 --> 00:07:08.820\nwe're supposed to go along with that.\n\n147\n00:07:08.820 --> 00:07:13.100\nBut if I do less, and\nI say less mobydick.test,\n\n148\n00:07:13.100 --> 00:07:17.310\nwhen I pull that up it\nlooks a lot like more.\n\n149\n00:07:17.310 --> 00:07:18.840\nOkay?\nIt's not giving my percentage of\n\n150\n00:07:18.840 --> 00:07:20.470\nthe bottom, but\notherwise it kinda looks the same.\n\n151\n00:07:20.470 --> 00:07:25.010\nAnd if I hit the space bar,\nI go forward a page, And\n\n152\n00:07:25.010 --> 00:07:29.870\nif I press enter forward align,\nand if I press Q,\n\n153\n00:07:29.870 --> 00:07:34.570\nI exit it, so far it's exactly\nlike the more command, okay?\n\n154\n00:07:34.570 --> 00:07:36.300\nBut let me show you\nthe big difference here,\n\n155\n00:07:36.300 --> 00:07:41.580\nif I move forward I can also move back,\nI can use my up and\n\n156\n00:07:41.580 --> 00:07:46.010\ndown arrow keys to go forward and\nbackwards through this file.\n\n157\n00:07:46.010 --> 00:07:48.415\nAll right so I'm just hitting up and\ndown the arrow keys.\n\n158\n00:07:48.415 --> 00:07:52.457\nI can also hit page down and page up and\nit's honoring those, mole doesn't honor\n\n159\n00:07:52.457 --> 00:07:56.204\npage honor page down and page up So,\nif you have page up page down keys on your\n\n160\n00:07:56.204 --> 00:07:59.616\nkeyboard, you can hit those and\nit gives you backward and forward.\n\n161\n00:07:59.616 --> 00:08:01.693\nSo, now I just only turned backward\nto the top of the document.\n\n162\n00:08:01.693 --> 00:08:03.992\nOr I can go forward like that.\n\n163\n00:08:03.992 --> 00:08:08.748\nSo I get a lot more flexibility with\nthis command, the ability to easily\n\n164\n00:08:08.748 --> 00:08:13.920\nscroll forwards and backwards, and\nthat makes less a lot more common for me.\n\n165\n00:08:13.920 --> 00:08:17.440\nI'll use it cuz it gives me the ability\nto move around in the text like that.\n\n166\n00:08:17.440 --> 00:08:19.340\nAnd that's a pretty handy thing.\n\n167\n00:08:19.340 --> 00:08:21.955\nNow less actually added\na lot of other features too,\n\n168\n00:08:21.955 --> 00:08:25.720\nfeatures that some of which\nare implemented more, some aren't.\n\n169\n00:08:25.720 --> 00:08:29.620\nFor example, I can do a search,\nif I wanna search for a term.\n\n170\n00:08:29.620 --> 00:08:33.700\nSo when we originally pulled this\ndocument up before the show.\n\n171\n00:08:33.700 --> 00:08:34.930\nI got it from Project Gutenberg.\n\n172\n00:08:34.930 --> 00:08:36.160\nThey're a free service.\n\n173\n00:08:36.160 --> 00:08:39.120\nThey take classic literature,\nand they turn it into text files,\n\n174\n00:08:39.120 --> 00:08:40.948\nmake it available for free.\n\n175\n00:08:40.948 --> 00:08:43.120\nThey had appended, for whatever reason,\n\n176\n00:08:43.120 --> 00:08:47.060\nlike 500 lines of text at the beginning\nof this file that were all just junk.\n\n177\n00:08:47.060 --> 00:08:50.560\nAnd so I had to find out where\nthe book actually started.\n\n178\n00:08:50.560 --> 00:08:53.592\nAnd I remembered it starts\nwith call me Ishmael, right?\n\n179\n00:08:53.592 --> 00:08:54.970\nThat's that famous first line.\n\n180\n00:08:54.970 --> 00:08:59.835\nAnd so what I did is from the beginning\nof the book, I did a search.\n\n181\n00:08:59.835 --> 00:09:01.585\nl searched from that string.\n\n182\n00:09:01.585 --> 00:09:03.745\nAnd in both, less and more,\n\n183\n00:09:03.745 --> 00:09:09.164\nyou can hit the forward slash on your\nkeyboard and now we can do a search.\n\n184\n00:09:09.164 --> 00:09:12.567\nAnd so l can search for call me Ishmael.\n\n185\n00:09:12.567 --> 00:09:14.733\nAnd the hardest part there is\nremembering how to spell Ishmael,\n\n186\n00:09:14.733 --> 00:09:16.550\nwhich I'll be honest with you,\nI didn't remember.\n\n187\n00:09:16.550 --> 00:09:18.692\nSo I actually searched for call me.\n\n188\n00:09:18.692 --> 00:09:21.644\n&gt;&gt; [LAUGH]\n&gt;&gt; I searched for, and l searched, and\n\n189\n00:09:21.644 --> 00:09:22.520\nit found it.\n\n190\n00:09:22.520 --> 00:09:24.847\nIt took me right to that line.\n\n191\n00:09:24.847 --> 00:09:27.490\nNow that works in more as well as less.\n\n192\n00:09:27.490 --> 00:09:31.600\nAnd if I wanna search again, like maybe I\nactually am searching for Ishmael, right?\n\n193\n00:09:31.600 --> 00:09:35.440\nSo I wanna know every time Ishmael\nis mentioned in the novel, right?\n\n194\n00:09:35.440 --> 00:09:38.500\nAnd so I do a forward slash,\nI type Ishmael, and I do a search.\n\n195\n00:09:38.500 --> 00:09:39.580\nAnd I found them.\n\n196\n00:09:39.580 --> 00:09:40.950\nAnd then I can search again.\n\n197\n00:09:40.950 --> 00:09:44.264\nI can hit forward slash and\npress enter, and now it searches again.\n\n198\n00:09:44.264 --> 00:09:46.630\nAnd it keeps moving forward and forward.\n\n199\n00:09:46.630 --> 00:09:49.040\nAnd I can search through\nthe whole novel looking for that.\n\n200\n00:09:49.040 --> 00:09:50.393\nI'm already in chapter 8, chapter 11.\n\n201\n00:09:50.393 --> 00:09:52.400\nWe're cruising right through this novel.\n\n202\n00:09:52.400 --> 00:09:53.610\nThat's really neat.\n\n203\n00:09:53.610 --> 00:09:55.670\nThat works in more, but\n\n204\n00:09:55.670 --> 00:10:01.490\nin less not only can I search forward,\nI can search backwards as well.\n\n205\n00:10:01.490 --> 00:10:04.030\nIt was a forward slash to search forward.\n\n206\n00:10:04.030 --> 00:10:06.610\nIt's a question mark to search backwards.\n\n207\n00:10:06.610 --> 00:10:08.860\nNow that might not sound intuitive.\n\n208\n00:10:08.860 --> 00:10:13.412\nYou might say to yourself, why didn't they\nuse the backslash to search backwards?\n\n209\n00:10:13.412 --> 00:10:14.560\nWouldn't that make sense?\n\n210\n00:10:14.560 --> 00:10:16.570\nAnd the reason is if you\nlook at your keyboard,\n\n211\n00:10:16.570 --> 00:10:20.430\nat least on a standard US keyboard,\nthe forward slash and\n\n212\n00:10:20.430 --> 00:10:24.150\nthe question mark share the same key,\nso that's why they use that.\n\n213\n00:10:24.150 --> 00:10:25.920\nThat becomes your search key.\n\n214\n00:10:25.920 --> 00:10:28.660\nAnd the default is forward\nwhich is a forward slash, and\n\n215\n00:10:28.660 --> 00:10:30.290\nthen the question is backward.\n\n216\n00:10:30.290 --> 00:10:35.055\n&gt;&gt; Don, I believe the hot key combination\nthat they give you as well is using the n\n\n217\n00:10:35.055 --> 00:10:36.020\nand u buttons.\n\n218\n00:10:36.020 --> 00:10:38.934\nSo n lets you search down and\nthen u searches up or up paging.\n\n219\n00:10:38.934 --> 00:10:41.974\n&gt;&gt; Yes, after your first search.\n\n220\n00:10:41.974 --> 00:10:43.019\n&gt;&gt; Right.\n&gt;&gt; So you have to do the first search-\n\n221\n00:10:43.019 --> 00:10:43.715\n&gt;&gt; You have to use the search.\n\n222\n00:10:43.715 --> 00:10:45.403\n&gt;&gt; Using slash or question mark.\n\n223\n00:10:45.403 --> 00:10:49.214\nAnd then after that, you can continue\nto use slash and question mark or\n\n224\n00:10:49.214 --> 00:10:52.975\nyou can use n and u, and those will\nmove to the next or previous entry.\n\n225\n00:10:52.975 --> 00:10:54.195\nSo you can look and find those.\n\n226\n00:10:54.195 --> 00:10:56.495\nThere's a lot of shortcuts that\nare available for these things.\n\n227\n00:10:56.495 --> 00:10:58.605\nAnd these programs are a lot\nmore powerful, too.\n\n228\n00:10:58.605 --> 00:11:00.845\nI'm just showing you some of the-\n&gt;&gt; Basics.\n\n229\n00:11:00.845 --> 00:11:01.889\n&gt;&gt; Key features to get by.\n\n230\n00:11:01.889 --> 00:11:05.255\nI think the searching forwards, backwards\nis a pretty key feature though, so.\n\n231\n00:11:05.255 --> 00:11:08.525\nBut you'll see here that less is\nactually a lot more powerful than more.\n\n232\n00:11:08.525 --> 00:11:10.155\nAnd I know a lot of people who alias it.\n\n233\n00:11:10.155 --> 00:11:14.130\nSo any time they go to run more\nit actually runs less instead.\n\n234\n00:11:14.130 --> 00:11:17.160\nBoth commands are pretty standard on\noperating systems these days, and\n\n235\n00:11:17.160 --> 00:11:19.660\nyou'll find them just\ninstalled by default.\n\n236\n00:11:19.660 --> 00:11:22.280\nI didn't have to install more, and\nI didn't have to install less, or\n\n237\n00:11:22.280 --> 00:11:23.490\ncat for that matter.\n\n238\n00:11:23.490 --> 00:11:26.720\nAll of them are there,\nit's just me making a decision.\n\n239\n00:11:26.720 --> 00:11:30.210\nDo I want the whole volume\nof text displayed at once?\n\n240\n00:11:30.210 --> 00:11:31.420\nUse cat.\n\n241\n00:11:31.420 --> 00:11:35.420\nDo I just want simple pagination and I'm\nonly moving forward like in a log file?\n\n242\n00:11:35.420 --> 00:11:36.665\nWell, more is fine.\n\n243\n00:11:36.665 --> 00:11:40.224\nBut if I want full flexibility\nto move backwards and forward,\n\n244\n00:11:40.224 --> 00:11:41.780\nless is the best one.\n\n245\n00:11:41.780 --> 00:11:42.730\nSo all three are available.\n\n246\n00:11:42.730 --> 00:11:44.560\nYou kind of choose for your scenario.\n\n247\n00:11:44.560 --> 00:11:48.670\nYou really can't go wrong with less,\nif it's you.\n\n248\n00:11:48.670 --> 00:11:50.560\nBut programmatically,\nless is really annoying,\n\n249\n00:11:50.560 --> 00:11:52.450\ncuz programatically\nyou'd want to go with n.\n\n250\n00:11:52.450 --> 00:11:55.250\n&gt;&gt; Now Don, what if I have\na huge file much like Moby Dick?\n\n251\n00:11:55.250 --> 00:11:59.710\nTypically though, as a user, I've probably\ngot some long files that I need to look\n\n252\n00:11:59.710 --> 00:12:01.040\nthrough\n&gt;&gt; But\n\n253\n00:12:01.040 --> 00:12:04.380\nif I cat the file,\nit's gonna dump the entire log.\n\n254\n00:12:04.380 --> 00:12:05.670\nIt's gonna be a very large one.\n\n255\n00:12:05.670 --> 00:12:09.580\nI may have to scroll to, I could use\nmore and less, what if I just wanna see,\n\n256\n00:12:09.580 --> 00:12:13.090\nwhat was the last entry,\nor the last few entries?\n\n257\n00:12:13.090 --> 00:12:14.557\n&gt;&gt; A long file is a great example of that,\nright?\n\n258\n00:12:14.557 --> 00:12:16.268\n&gt;&gt; Yeah.\n&gt;&gt; So when my system boots up,\n\n259\n00:12:16.268 --> 00:12:20.895\nit generates this big log file, and\nI might wanna see just the first couple of\n\n260\n00:12:20.895 --> 00:12:23.590\nlines or\nthe last couple of lines of the log.\n\n261\n00:12:23.590 --> 00:12:26.080\nShow me the last things that happened.\n\n262\n00:12:26.080 --> 00:12:28.918\nI just got an error so I know\nthe entry is right there at the end.\n\n263\n00:12:28.918 --> 00:12:33.870\nSo I could use a command like more or\nless or cat to view the log and\n\n264\n00:12:33.870 --> 00:12:36.940\nsee the whole thing, but\nif I just wanna to see the beginning or\n\n265\n00:12:36.940 --> 00:12:40.540\nthe end, you got the tail and\nthe head commands.\n\n266\n00:12:40.540 --> 00:12:41.810\nRight, there are heads and tails, right?\n\n267\n00:12:41.810 --> 00:12:42.842\n&gt;&gt; Heads and tails.\n[LAUGH]\n\n268\n00:12:42.842 --> 00:12:43.781\n&gt;&gt; The head shows you\n\n269\n00:12:43.781 --> 00:12:46.980\nthe beginning of a file, and\ntail shows you the end of a file.\n\n270\n00:12:48.010 --> 00:12:50.050\nAnd by default they show you ten lines,\nbut\n\n271\n00:12:50.050 --> 00:12:51.800\nyou can customize that however you want.\n\n272\n00:12:51.800 --> 00:12:55.210\nSo if I just wanna see just the first\nten lines of the Moby Dick file,\n\n273\n00:12:55.210 --> 00:12:55.810\nI can come in here.\n\n274\n00:12:55.810 --> 00:12:59.350\nI can type head mobydick.txt.\n\n275\n00:12:59.350 --> 00:13:02.800\nAnd when I run that,\nthere's the first ten lines and that's it.\n\n276\n00:13:02.800 --> 00:13:04.210\nIt stops, right?\n\n277\n00:13:04.210 --> 00:13:06.281\nI never even got to call me Ismael.\n\n278\n00:13:06.281 --> 00:13:09.510\nSo it just displayed the first\nten lines and there it is.\n\n279\n00:13:09.510 --> 00:13:12.558\nOr I can tail and\nruin the ending of the story.\n\n280\n00:13:12.558 --> 00:13:15.200\n&gt;&gt; [LAUGH]\n&gt;&gt; And do mobydick.text.\n\n281\n00:13:15.200 --> 00:13:16.217\nAnd there, good.\n\n282\n00:13:16.217 --> 00:13:17.470\n&gt;&gt; It's Project Guttenberg stuff.\n\n283\n00:13:17.470 --> 00:13:18.450\n&gt;&gt; I did ruin the ending.\n\n284\n00:13:18.450 --> 00:13:20.360\nWe've got a, yeah, yeah,\na little footer there.\n\n285\n00:13:20.360 --> 00:13:23.000\nSo I see just the last ten lines.\n\n286\n00:13:23.000 --> 00:13:26.330\nWell, maybe I want the last 15 lines or\n\n287\n00:13:26.330 --> 00:13:29.540\nthe first lines until I get to\nthat call me Ishmael, right?\n\n288\n00:13:29.540 --> 00:13:33.870\nBut with each of these,\nif you take a look at the head command,\n\n289\n00:13:33.870 --> 00:13:38.750\nif I take a look at its documentation,\nyou'll see that it's got this -n option\n\n290\n00:13:38.750 --> 00:13:42.550\nwhere you can specify the number\nof lines that you want.\n\n291\n00:13:42.550 --> 00:13:47.550\nSo I could say head -n 15 mobydick.txt,\nand\n\n292\n00:13:47.550 --> 00:13:49.790\nnow it's gonna give me the first 15 lines.\n\n293\n00:13:49.790 --> 00:13:50.460\nAnd there it is.\n\n294\n00:13:50.460 --> 00:13:51.480\nThere's Call me Ishmael.\n\n295\n00:13:51.480 --> 00:13:53.300\nOr if I really wanted to be strict and\n\n296\n00:13:53.300 --> 00:13:56.850\nnot even get to that 15th line,\nI could drop that down to 14.\n\n297\n00:13:56.850 --> 00:14:00.790\nAnd now there I am, and I get it, and\nwe can kinda roll forward from there.\n\n298\n00:14:00.790 --> 00:14:04.492\nTail works the same way,\nI might wanna tail the last 50 lines and\n\n299\n00:14:04.492 --> 00:14:08.609\nyou can do that and you'll get just\nthose last 50 and they'll come up.\n\n300\n00:14:08.609 --> 00:14:13.252\nNow another neat thing is you can actually\ncombine some of these commands together\n\n301\n00:14:13.252 --> 00:14:16.520\nand there's times where\nyou might wanna do that.\n\n302\n00:14:16.520 --> 00:14:20.470\nI might have a large file like mobydick.\n\n303\n00:14:21.630 --> 00:14:25.630\nWhen I use less on the mobydick file,\n\n304\n00:14:25.630 --> 00:14:30.230\nit loads the entire file into memory,\nso that I can scroll through it, right?\n\n305\n00:14:30.230 --> 00:14:33.400\nSo the bigger the file,\nthe more of it's gonna go into memory.\n\n306\n00:14:33.400 --> 00:14:37.040\nWell, maybe I only wanna\nlook at the first 100 lines.\n\n307\n00:14:37.040 --> 00:14:38.230\nI know the head can do that.\n\n308\n00:14:38.230 --> 00:14:42.799\nI can say head -n 100 mobydick, right?\n\n309\n00:14:42.799 --> 00:14:45.970\nBut now I am not getting my\nability to scroll and search.\n\n310\n00:14:45.970 --> 00:14:51.344\nSo I loaded less into memory, but\nI didn't, I loaded less content.\n\n311\n00:14:51.344 --> 00:14:51.977\nIsn't that right?\n\n312\n00:14:51.977 --> 00:14:53.960\nGotta be careful here.\n\n313\n00:14:53.960 --> 00:14:58.330\nBut I kind of lost the ability to use\nscrolling and searching and all that.\n\n314\n00:14:58.330 --> 00:15:01.770\nSo I could take the head command or\nthe cat command, and\n\n315\n00:15:01.770 --> 00:15:07.060\nI could take their output and\nsend it to one of the other commands.\n\n316\n00:15:07.060 --> 00:15:11.710\nIn the Linux and Unix command prompt,\nyou can use the pipe symbol.\n\n317\n00:15:11.710 --> 00:15:15.550\nIt's the two vertical lines,\nit's usually right above your Enter key.\n\n318\n00:15:15.550 --> 00:15:17.480\nIt shares the back slash key.\n\n319\n00:15:17.480 --> 00:15:21.540\nYou can use the pipe symbol to say,\ntake the output from one command, and\n\n320\n00:15:21.540 --> 00:15:23.500\nsend it to another command.\n\n321\n00:15:23.500 --> 00:15:28.800\nSo I can take the output from head\n-n 100 and I can send it to less.\n\n322\n00:15:28.800 --> 00:15:32.080\nAnd now I get all\nthe advantages of less for\n\n323\n00:15:32.080 --> 00:15:36.010\nthe first 100 lines of mobidick, so\nI haven't loaded this much into RAM.\n\n324\n00:15:36.010 --> 00:15:37.342\nAnd that can be really handy.\n\n325\n00:15:37.342 --> 00:15:39.950\nSee how it just reads the end of the file,\nand\n\n326\n00:15:39.950 --> 00:15:42.620\nI'm not even through\nchapter one of the book.\n\n327\n00:15:42.620 --> 00:15:45.700\nI'm combining the commands together,\nright?\n\n328\n00:15:45.700 --> 00:15:48.530\nAnd you'll see people who do like,\nwhere they cat a file,\n\n329\n00:15:48.530 --> 00:15:52.500\nand then they redirect it\ninto the more command, right?\n\n330\n00:15:52.500 --> 00:15:53.653\nTo say, I wanna see the whole file.\n\n331\n00:15:53.653 --> 00:15:58.481\nI want pagination, so I'll use more\nto do it, which is really redundant\n\n332\n00:15:58.481 --> 00:16:02.374\nbecause you could just say more for\nthe mobydick clients.\n\n333\n00:16:02.374 --> 00:16:03.626\nIt's the same result, right?\n\n334\n00:16:03.626 --> 00:16:04.347\nBut they work.\n\n335\n00:16:04.347 --> 00:16:07.365\nYou can take the output of one command and\nfeed it into another.\n\n336\n00:16:07.365 --> 00:16:11.364\nAnd feeding it into less,\nor feeding it into tail,\n\n337\n00:16:11.364 --> 00:16:16.120\nthat'll help you to just get\nthe information that you want.\n\n338\n00:16:16.120 --> 00:16:18.828\nSo it's a great way to kinda view it and\nmanipulate that text and\n\n339\n00:16:18.828 --> 00:16:19.807\nsee what's going on.\n\n340\n00:16:19.807 --> 00:16:23.353\n&gt;&gt; All right, Don, well we've been\nworking with files that we already have\n\n341\n00:16:23.353 --> 00:16:25.940\non our system,\nwhat if I wanted to create my own file?\n\n342\n00:16:25.940 --> 00:16:28.800\n&gt;&gt; All right, so\nif I wanna create my own file,\n\n343\n00:16:29.920 --> 00:16:32.950\nbasically I need to get data in there,\nand we're gonna see later on,\n\n344\n00:16:32.950 --> 00:16:37.110\nthere's various text editors we can use\nlike VIM and Nano and all those guys.\n\n345\n00:16:37.110 --> 00:16:41.280\nBut a lot of times the data is\ncoming from somewhere on our system.\n\n346\n00:16:41.280 --> 00:16:42.780\nSo I mentioned, for example,\n\n347\n00:16:42.780 --> 00:16:46.200\nthat there is a log that's generated\nwhen my system boots up, right.\n\n348\n00:16:46.200 --> 00:16:51.461\nIf I use the d message command,\nd m e s g, d message,\n\n349\n00:16:51.461 --> 00:16:57.250\nif I run the dmesg command it\nshows me my boot log ,okay.\n\n350\n00:16:57.250 --> 00:16:59.590\nAnd it's a lot of data.\n\n351\n00:16:59.590 --> 00:17:03.155\nIn fact a lot of this-\n&gt;&gt; That's a lot, wireless stuff.\n\n352\n00:17:03.155 --> 00:17:04.182\n&gt;&gt; In fact this isn't even included,\n\n353\n00:17:04.182 --> 00:17:06.540\nthis is me bouncing from access point\nto access point here in the building.\n\n354\n00:17:06.540 --> 00:17:09.170\nBut we've got I don't know 14\naccess points or something.\n\n355\n00:17:09.170 --> 00:17:12.100\nSo any time you have access points\nit generates a log message.\n\n356\n00:17:12.100 --> 00:17:14.957\nBut somewhere back here in\nthe beginning I'm going to\n\n357\n00:17:14.957 --> 00:17:17.941\nencounter where my system\nactually booted up, right,\n\n358\n00:17:17.941 --> 00:17:21.253\nwhich you know it might have been\na few days since I did do this.\n\n359\n00:17:21.253 --> 00:17:22.905\n&gt;&gt; [LAUGH]\n&gt;&gt; But\n\n360\n00:17:22.905 --> 00:17:27.768\nhere's a great example where my terminal\nonly has a buffer of 10,000 lines, so\n\n361\n00:17:27.768 --> 00:17:32.020\nif I haven't rebooted in a few days then\nI might not even be able to scroll all\n\n362\n00:17:32.020 --> 00:17:34.880\nthe way back to where this thing started,\nright.\n\n363\n00:17:34.880 --> 00:17:36.250\nSo I might have a problem there.\n\n364\n00:17:36.250 --> 00:17:39.180\nIn fact, I could use the up\ntime command to find out.\n\n365\n00:17:39.180 --> 00:17:41.850\nIt's been two days, yeah, two days and\nan hour since I've rebooted.\n\n366\n00:17:41.850 --> 00:17:45.540\nSo I'd have to go back quite a ways\nto actually find the boot log, right.\n\n367\n00:17:45.540 --> 00:17:50.260\nBut what I could do is I could\ntake that dmesg output and\n\n368\n00:17:50.260 --> 00:17:55.090\nI could put it into a file and I could\nthen use less and search through it, or\n\n369\n00:17:55.090 --> 00:17:59.100\nmore or head, tail, I could use\nall that other stuff on the data.\n\n370\n00:17:59.100 --> 00:18:04.830\nSo I wanna take the output of this\ncommand and I wanna send it into a file,\n\n371\n00:18:04.830 --> 00:18:08.300\nand we can do that through\na few different means, right.\n\n372\n00:18:08.300 --> 00:18:11.820\nWe could either do it live where\nthe file already exists or\n\n373\n00:18:11.820 --> 00:18:16.530\nwe can create files ahead of time and\nthen add the data into them.\n\n374\n00:18:16.530 --> 00:18:19.160\nAnd it's kind of up to us how\nwe want to go about that.\n\n375\n00:18:19.160 --> 00:18:21.600\nBut just to show you a quick example here.\n\n376\n00:18:21.600 --> 00:18:26.230\nI'm gonna do a dmesg, and\nI'm gonna use a greater than symbol.\n\n377\n00:18:26.230 --> 00:18:32.430\nAnd a greater than symbol says take the\noutput of whatever the first command is,\n\n378\n00:18:32.430 --> 00:18:37.030\nand then stick it somewhere else,\nright, into a file somewhere else.\n\n379\n00:18:37.030 --> 00:18:39.982\nAnd so\nI'm gonna take this dmesg output and\n\n380\n00:18:39.982 --> 00:18:43.510\nI'm gonna put it into bootlog.txt, okay.\n\n381\n00:18:43.510 --> 00:18:46.431\nSo it's gonna run, and\nwhat do I see on the screen?\n\n382\n00:18:46.431 --> 00:18:47.660\nNothing, right.\n\n383\n00:18:47.660 --> 00:18:52.550\nInstead of putting this data on my screen,\nit redirected it.\n\n384\n00:18:52.550 --> 00:18:57.630\nIt redirected that outlet from standard\nout to this file, bootlog.txt.\n\n385\n00:18:57.630 --> 00:19:00.661\nAnd if I take a look at my directory\nI've now got a bootlog.txt.\n\n386\n00:19:00.661 --> 00:19:06.508\nAnd if I pull the long output for\nthat, let me make that human readable,\n\n387\n00:19:06.508 --> 00:19:11.025\nit is 336K, not as long as Moby Dick for\nthe record.\n\n388\n00:19:11.025 --> 00:19:13.120\n&gt;&gt; [LAUGH] Still substantial.\n\n389\n00:19:13.120 --> 00:19:17.920\n&gt;&gt; Yeah, and now I can come in and\nI can take the command like less and\n\n390\n00:19:17.920 --> 00:19:23.570\nI could feed into it that bootlog.txt, and\nnow it starts from the very beginning.\n\n391\n00:19:23.570 --> 00:19:25.860\nAnd here is where my computer booted up.\n\n392\n00:19:25.860 --> 00:19:29.680\nI see the Linux kernel\ninitializing right there, and\n\n393\n00:19:29.680 --> 00:19:34.390\nit initialized my c groups, the processor\ngroups, and then memory is initializing.\n\n394\n00:19:34.390 --> 00:19:37.220\nThis is when my computer booted up,\nI'm right here at the beginning.\n\n395\n00:19:37.220 --> 00:19:39.200\nAnd I can search through and\nI can look for things.\n\n396\n00:19:39.200 --> 00:19:43.140\nMaybe I wanna find if there\nwere any errors that occurred.\n\n397\n00:19:43.140 --> 00:19:45.700\nI might be error free, apparently I am.\n\n398\n00:19:45.700 --> 00:19:46.250\n&gt;&gt; Good for you.\n\n399\n00:19:46.250 --> 00:19:47.320\n[LAUGH]\n&gt;&gt; Look I'm error free.\n\n400\n00:19:47.320 --> 00:19:49.250\nBut I can search through and\nlook for various things.\n\n401\n00:19:49.250 --> 00:19:52.700\nMaybe I wanna find where it mounted\na hard drive or something like that.\n\n402\n00:19:52.700 --> 00:19:55.270\nAnd so I can search and\nI can find that, and here it is.\n\n403\n00:19:55.270 --> 00:19:59.970\nAnd I might be thousands of lines in but\nI just jumped to it and got there.\n\n404\n00:19:59.970 --> 00:20:01.971\nSo we can pull that\ninformation really easily.\n\n405\n00:20:01.971 --> 00:20:06.130\nAnd I got the data into this\nfile by just doing a redirect.\n\n406\n00:20:06.130 --> 00:20:09.230\nI took the output of one command,\ndmesg, and\n\n407\n00:20:09.230 --> 00:20:12.670\nI used the greater than symbol to\nthen dump it right into a text file.\n\n408\n00:20:12.670 --> 00:20:16.730\n&gt;&gt; And this text file,\nthis bootlog.txt, did not exist.\n\n409\n00:20:16.730 --> 00:20:20.100\nSo Linux created and said,\nyou want this, it's not there.\n\n410\n00:20:20.100 --> 00:20:22.042\nI'll just make that file and\nput this content inside it.\n\n411\n00:20:22.042 --> 00:20:24.220\n&gt;&gt; Yeah, yep,\nthat's basically how it works.\n\n412\n00:20:24.220 --> 00:20:27.500\nAnd so now I've got that file and\nit's there.\n\n413\n00:20:27.500 --> 00:20:31.310\nThere are a few other ways that we could\nhave done this to get the data in there.\n\n414\n00:20:31.310 --> 00:20:35.690\nAnd there's other things that\nI could have output into it.\n\n415\n00:20:35.690 --> 00:20:40.770\nIf I run this command again,\nit's gonna overwrite that bootlog.txt,\n\n416\n00:20:40.770 --> 00:20:41.550\nso what was that?\n\n417\n00:20:41.550 --> 00:20:45.565\nWhatever was in bootlog is gonna get\noverwritten with whatever is in the new\n\n418\n00:20:45.565 --> 00:20:46.610\ndmesg command.\n\n419\n00:20:46.610 --> 00:20:51.463\nOr if I ran something else,\nmaybe I ran uname-a like that,\n\n420\n00:20:51.463 --> 00:20:54.385\nand the uname-a command if you're\nnot familiar with that one,\n\n421\n00:20:54.385 --> 00:20:56.505\nit just shows what kernel you're running,\nright.\n\n422\n00:20:56.505 --> 00:20:59.115\nSo if that's all I wanted to know,\nI didn't have to go to my dmesg for that,\n\n423\n00:20:59.115 --> 00:21:00.645\nI could have pulled it right from uname.\n\n424\n00:21:00.645 --> 00:21:01.995\nOr you can run uname by itself, and\n\n425\n00:21:01.995 --> 00:21:04.760\nit just says you're running Linux,\nwhich is pretty pointless.\n\n426\n00:21:04.760 --> 00:21:06.305\n&gt;&gt; [LAUGH]\n&gt;&gt; But if I want uname-a and\n\n427\n00:21:06.305 --> 00:21:11.750\nI send that into bootlog.txt,\nthe file already exists.\n\n428\n00:21:11.750 --> 00:21:13.080\nSo what does it do?\n\n429\n00:21:13.080 --> 00:21:14.701\nIt overwrites the file.\n\n430\n00:21:14.701 --> 00:21:17.766\nAnd so\nnow when I take a look at bootlog.txt,\n\n431\n00:21:17.766 --> 00:21:22.285\nthat's all it's got is that one line,\nthat little one entry, and\n\n432\n00:21:22.285 --> 00:21:26.340\nI just lost all the d message\nstuff that was in there, okay.\n\n433\n00:21:26.340 --> 00:21:30.282\nSo when you do a redirect like this,\nif the file already exists,\n\n434\n00:21:30.282 --> 00:21:32.039\nyou need to make a decision.\n\n435\n00:21:32.039 --> 00:21:36.070\nYou might want to overwrite it, in which\ncase you just redirect like I did.\n\n436\n00:21:36.070 --> 00:21:38.372\nBut you might want to append and\n\n437\n00:21:38.372 --> 00:21:42.000\nsay, I wanna add on to the end\nof that file instead, okay.\n\n438\n00:21:42.000 --> 00:21:46.318\nAnd you can do that by doing two,\nwhoops, by screwing up the prompt,\n\n439\n00:21:46.318 --> 00:21:48.940\nby doing two greater than signs, right.\n\n440\n00:21:48.940 --> 00:21:52.060\nBy doing this, by saying, and\nI'll change this so it's dmesg this time.\n\n441\n00:21:52.060 --> 00:21:58.560\nI'm gonna do a dmesg and\ntwo greater than symbols, bootlog.txt.\n\n442\n00:21:58.560 --> 00:22:01.430\nThat's gonna take the dmesg output and\nstick it on the end of that file.\n\n443\n00:22:01.430 --> 00:22:03.590\nSo don't override it, add to it.\n\n444\n00:22:03.590 --> 00:22:05.600\nAnd this is often times what we want.\n\n445\n00:22:05.600 --> 00:22:08.830\nAnd when I run that, again I don't\nget any output on my screen, but\n\n446\n00:22:08.830 --> 00:22:16.280\nwhen I take a look at bootlog.txt, there's\nthe output for uname-a right at the top.\n\n447\n00:22:16.280 --> 00:22:20.570\nAnd then after that it starts the output\nfor d message, all right after it.\n\n448\n00:22:20.570 --> 00:22:22.560\nI just appended and added on to it.\n\n449\n00:22:22.560 --> 00:22:25.640\nSo a single greater than sign\nversus a double greater than sign,\n\n450\n00:22:25.640 --> 00:22:27.610\nthat's gonna move that data and\nget it in there.\n\n451\n00:22:27.610 --> 00:22:29.275\n&gt;&gt; Well Don,\nthese redirectors seem pretty handy.\n\n452\n00:22:29.275 --> 00:22:31.915\nAre there any others that we need to be\naware of when it comes to redirection?\n\n453\n00:22:31.915 --> 00:22:36.005\n&gt;&gt; There's a few other where a little more\nuseful, like in our scripting series.\n\n454\n00:22:36.005 --> 00:22:38.325\nI know we'll redirect errors.\n\n455\n00:22:38.325 --> 00:22:41.085\nWhen you run a program, there's two\ndifferent outputs that you get.\n\n456\n00:22:41.085 --> 00:22:43.065\nThere's the successful output with data,\nand\n\n457\n00:22:43.065 --> 00:22:47.040\nthen there's the error output if there's\na problem, if something goes wrong.\n\n458\n00:22:47.040 --> 00:22:51.920\nAnd so you might wanna redirect just\nthe good stuff, or just the error.\n\n459\n00:22:51.920 --> 00:22:54.330\nWell by default it is just\noutputting the good stuff.\n\n460\n00:22:54.330 --> 00:22:57.330\nSo when the command runs, the greater than\nsymbol is grabbing the good stuff and\n\n461\n00:22:57.330 --> 00:22:58.770\nputting it where you want it to go, right.\n\n462\n00:22:58.770 --> 00:23:00.100\nThat's standard out.\n\n463\n00:23:00.100 --> 00:23:03.970\nBut there's standard error,\nalso STDERR, and\n\n464\n00:23:03.970 --> 00:23:06.410\nstandard error is just\nthe errors if you have them.\n\n465\n00:23:06.410 --> 00:23:09.010\nNow I didn't have any errors,\nthere is nothing to output, right.\n\n466\n00:23:09.010 --> 00:23:14.970\nIf I run dmesg and I just do the normal\nthing that I've been doing here so\n\n467\n00:23:14.970 --> 00:23:19.080\nfar, that's redirecting the standard out,\nthe good stuff.\n\n468\n00:23:19.080 --> 00:23:23.368\nAnd if I want the errors, what I need\nto do is stick a two before it, okay.\n\n469\n00:23:23.368 --> 00:23:28.824\nThe first output is the good stuff,\nthe second output are the errors.\n\n470\n00:23:28.824 --> 00:23:33.950\nAnd if there are any errors it will take\nthem and dump them into bootlog.txt.\n\n471\n00:23:33.950 --> 00:23:37.250\nNow when I run that,\nsee how I got stuff on the screen?\n\n472\n00:23:37.250 --> 00:23:39.350\nThat's because I didn't\nredirect the standard out.\n\n473\n00:23:39.350 --> 00:23:41.720\nThe standard out still goes to\nwhere ever it's supposed to go,\n\n474\n00:23:41.720 --> 00:23:46.060\nwhich is my screen,\njust the errors get redirected.\n\n475\n00:23:46.060 --> 00:23:50.340\nAnd if I take a look at bootlog.txt,\n\n476\n00:23:50.340 --> 00:23:54.020\nit's now empty because there were no\nerrors, there were no errors to output.\n\n477\n00:23:54.020 --> 00:23:55.169\nBut if there were errors,\nthey would get saved there.\n\n478\n00:23:55.169 --> 00:23:57.669\nAnd that's a great way when\nyou're running a script,\n\n479\n00:23:57.669 --> 00:23:59.949\nto say I need to log\nthe errors somewhere else, and\n\n480\n00:23:59.949 --> 00:24:03.615\nyou could do that by redirecting it this\nway and dumping it that way, all right.\n\n481\n00:24:03.615 --> 00:24:08.368\nAnother thing is that the redirectors,\nyou can flip it around.\n\n482\n00:24:08.368 --> 00:24:13.063\nAnd instead of taking the output of\na command and sending it into a file,\n\n483\n00:24:13.063 --> 00:24:16.821\nI can do the opposite where I\ntake the contents of a file and\n\n484\n00:24:16.821 --> 00:24:19.424\nI send them into a command, all right?\n\n485\n00:24:19.424 --> 00:24:23.885\nSo, for example, the, let's say I do,\n\n486\n00:24:23.885 --> 00:24:27.465\nI don't know, LS-LH, right?\n\n487\n00:24:27.465 --> 00:24:31.300\nThat shows me all the files that\nare in my directory, all right?\n\n488\n00:24:31.300 --> 00:24:34.530\nOr just ls, for that matter, and\nI see the files that are in my directory.\n\n489\n00:24:34.530 --> 00:24:39.210\nWell, I might want to take those and\nalphabetize them.\n\n490\n00:24:39.210 --> 00:24:41.198\nAnd, or actually it wont work\nhere cuz it's all on one line.\n\n491\n00:24:41.198 --> 00:24:42.540\n&gt;&gt; It's already alphabetized.\n\n492\n00:24:42.540 --> 00:24:43.040\nIs it?\n\n493\n00:24:43.040 --> 00:24:44.900\n&gt;&gt; Yeah.\n&gt;&gt; It does alphabetize, doesn't it?\n\n494\n00:24:44.900 --> 00:24:49.520\nSo if I wanted to take this, though,\nand feed it into some other command,\n\n495\n00:24:49.520 --> 00:24:52.330\nI could take a document, I could take\nMobyDick for that matter, right?\n\n496\n00:24:52.330 --> 00:24:56.941\nAnd let's say that I wanted to take the\ncontents of Moby Dick and alphabetize it.\n\n497\n00:24:56.941 --> 00:24:59.010\nI don't know why you'd wanna do this.\n\n498\n00:24:59.010 --> 00:25:02.480\nBut you can use the sort command\nto alphabetize anything, right?\n\n499\n00:25:02.480 --> 00:25:07.246\nSo if you look at the syntax or the sort\ncommand, it tells you to provide it\n\n500\n00:25:07.246 --> 00:25:12.460\na file, and it'll take that file and\nit will sort it to match what you need.\n\n501\n00:25:12.460 --> 00:25:17.232\nSo, for example, if I take, here,\nlet's just do /user/bin all right?\n\n502\n00:25:17.232 --> 00:25:19.270\nSo here's a bunch of binaries.\n\n503\n00:25:19.270 --> 00:25:22.240\nAnd they're already alphabetized for\nme in here, right?\n\n504\n00:25:22.240 --> 00:25:26.160\nBut if I take that directory listing, and\n\n505\n00:25:26.160 --> 00:25:30.340\nI'm gonna drop that into a file\ncalled binaries.txt, okay?\n\n506\n00:25:30.340 --> 00:25:35.280\nWell, maybe I want that, I wanna be able\nto see the files that are in there, right?\n\n507\n00:25:35.280 --> 00:25:38.470\nSo if I take a look at my\nnew binaries.txt files here,\n\n508\n00:25:38.470 --> 00:25:43.130\nhere's all of the binaries, and\nthey're alphabetized from A to Z, okay?\n\n509\n00:25:43.130 --> 00:25:45.000\nWell, maybe that's not what I want.\n\n510\n00:25:45.000 --> 00:25:47.905\nMaybe I want it to be from Z to A, right?\n\n511\n00:25:47.905 --> 00:25:55.216\nWell, if I do it from a command,\nI could say ls /user/bin,\n\n512\n00:25:55.216 --> 00:25:59.490\nand I could pipe the output\ninto the sort command,\n\n513\n00:25:59.490 --> 00:26:01.450\nwhich by default would\nsort alphabetically.\n\n514\n00:26:01.450 --> 00:26:07.596\nAnd I could sort it with a -r to reverse\nthe sort order, and there it goes, right?\n\n515\n00:26:07.596 --> 00:26:12.540\nAnd I'd have to scroll back to see it all,\nbut now it was from Z and A, the A was at\n\n516\n00:26:12.540 --> 00:26:18.390\nthe end versus of I did sort without the\ndash r, the Zs would it be the end, okay?\n\n517\n00:26:18.390 --> 00:26:20.290\nThat's good if you can\nrun the command now.\n\n518\n00:26:20.290 --> 00:26:23.826\nBut if somebody gives you a file,\nthe command's already been run, and so\n\n519\n00:26:23.826 --> 00:26:27.874\nyou've got this data, this output from the\ndatabase, and I might want to sort it and\n\n520\n00:26:27.874 --> 00:26:28.860\nchange that order.\n\n521\n00:26:28.860 --> 00:26:33.065\nWhat I could do is I could\nuse the sort command and\n\n522\n00:26:33.065 --> 00:26:38.660\nI could do a less than symbol,\nand feed in a file like that.\n\n523\n00:26:38.660 --> 00:26:42.930\nI'm gonna take that text file and\nmake it input instead of output.\n\n524\n00:26:42.930 --> 00:26:45.940\nInstead of taking the output of a command\nand saving it, I'm taking the file's\n\n525\n00:26:45.940 --> 00:26:49.350\ninput and feeding it into the command,\ndoing it the other way around.\n\n526\n00:26:49.350 --> 00:26:52.600\nAnd now I can do that, and\nit sorts it from A to Z.\n\n527\n00:26:52.600 --> 00:26:54.980\nAnd I can even go further,\nwe can get really crazy with this.\n\n528\n00:26:54.980 --> 00:26:58.300\nAnd then I could pipe that\ninto the less command.\n\n529\n00:26:58.300 --> 00:27:00.680\nAnd now we really get some fun, right?\n\n530\n00:27:00.680 --> 00:27:03.860\nAnd here's the Zs first\ngoing all the way down to A.\n\n531\n00:27:03.860 --> 00:27:06.260\nAnd we're kinda three levels deep, right?\n\n532\n00:27:06.260 --> 00:27:08.870\nI redirected the file's input and\n\n533\n00:27:08.870 --> 00:27:11.590\nthen I redirected all of\nthat into the less command.\n\n534\n00:27:11.590 --> 00:27:12.580\nNow you can keep going on.\n\n535\n00:27:12.580 --> 00:27:13.430\nThis is called pipelining.\n\n536\n00:27:13.430 --> 00:27:16.330\nYou can keep going adding command after\ncommand after command to really create\n\n537\n00:27:16.330 --> 00:27:17.660\nsome powerful scenarios.\n\n538\n00:27:17.660 --> 00:27:21.810\nSo if you mix all these together you\ncan really get some great information.\n\n539\n00:27:21.810 --> 00:27:23.305\nInformation put the way that you want it.\n\n540\n00:27:23.305 --> 00:27:26.860\n&gt;&gt; Yeah, there's a fun thing,\nthey call them one-liners a lot of times.\n\n541\n00:27:26.860 --> 00:27:29.400\nThere's a site called Bash One-Liners and\n\n542\n00:27:29.400 --> 00:27:33.350\nthey just give you crazy one-liners that\nyou can type in on a single line and hit.\n\n543\n00:27:33.350 --> 00:27:35.570\nIt does a lot of amazing powerful stuff.\n\n544\n00:27:35.570 --> 00:27:36.420\nVery cool.\n\n545\n00:27:36.420 --> 00:27:39.100\nDon, I know we got\na little bit of time left.\n\n546\n00:27:39.100 --> 00:27:41.345\nI don't know if you want to\ntry to finish this up or-\n\n547\n00:27:41.345 --> 00:27:41.970\n&gt;&gt; Well, I've\n\n548\n00:27:41.970 --> 00:27:45.320\ngot a couple of things I wanna\ntalk about like copying files,\n\n549\n00:27:45.320 --> 00:27:48.100\nmoving files, deleting files,\nrenaming files.\n\n550\n00:27:48.100 --> 00:27:51.180\nI also want to talk\nabout file expansion and\n\n551\n00:27:51.180 --> 00:27:55.135\nhow we kind of create files,\nsomething I kinda missed my notes.\n\n552\n00:27:55.135 --> 00:27:55.680\nWe need to cover that.\n\n553\n00:27:55.680 --> 00:27:57.800\nSo let's do a part two on this one, and\n\n554\n00:27:57.800 --> 00:28:00.420\nwe'll tackle some of those other elements\nthat all kind of come into this.\n\n555\n00:28:00.420 --> 00:28:03.150\nSo really what we did here in\nthis episode was all really\n\n556\n00:28:03.150 --> 00:28:04.607\nlooking at the contents of a file.\n\n557\n00:28:04.607 --> 00:28:05.760\nAnd sure, we created some, but\n\n558\n00:28:05.760 --> 00:28:08.610\nwe're really just redirecting\ncontent somewhere else.\n\n559\n00:28:08.610 --> 00:28:11.440\nSo now I wanna talk about how we\nactually create some files and\n\n560\n00:28:11.440 --> 00:28:12.857\nwe'll do that in part two.\n\n561\n00:28:12.857 --> 00:28:14.460\n&gt;&gt; Alright, well, Don,\nlook forward to that part two.\n\n562\n00:28:14.460 --> 00:28:16.010\nThanks for joining us today.\n\n563\n00:28:16.010 --> 00:28:18.020\nWe do thank you good folks out there for\nwatching.\n\n564\n00:28:18.020 --> 00:28:20.900\nBut as the man has said,\nwe are outside this episode.\n\n565\n00:28:20.900 --> 00:28:24.620\nSo join us back for that part two, gonna\nbe a lot more good stuff when it comes to\n\n566\n00:28:24.620 --> 00:28:26.900\nworking with files in\nthe Linux command line.\n\n567\n00:28:26.900 --> 00:28:31.083\nAs for us, though, signing off for ITPRO\nTV I've been your host Daniel Lowrie,\n\n568\n00:28:31.083 --> 00:28:31.955\n&gt;&gt; And I'm Don Pezet.\n\n569\n00:28:31.955 --> 00:28:34.699\n&gt;&gt; We'll see you next time.\n\n570\n00:28:34.699 --> 00:28:40.622\n[MUSIC]\n\n571\n00:28:40.622 --> 00:28:44.015\n&gt;&gt; Thank you for watching ITPRO TV.\n\n",
          "vimeoId": "234903618"
        },
        {
          "description": "In this episode, Don continues working with files in the Linux command line. Specifically, he focuses on duplicating files with the cp command, relocating files using the mv command, and deleting files using the rm command.",
          "length": "1656",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-2-2-2-working_with_files_pt_2-092117-PGM.00_27_20_07.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-2-2-2-working_with_files_pt_2-092117-PGM.00_27_20_07.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-2-2-2-working_with_files_pt_2-092117-PGM.00_27_20_07.Still001-sm.jpg",
          "title": "Working with Files Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.230 --> 00:00:02.780\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:02.780 --> 00:00:05.813\nWe're coming at you live from\nSan Francisco, California.\n\n3\n00:00:05.813 --> 00:00:06.358\n[CROSSTALK]\n\n4\n00:00:06.358 --> 00:00:08.228\n[MUSIC]\n\n5\n00:00:08.228 --> 00:00:11.619\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:11.619 --> 00:00:13.492\n&gt;&gt; All right, greetings everyone and\n\n7\n00:00:13.492 --> 00:00:16.185\nwelcome back to another\ngreat episode of ITProTV.\n\n8\n00:00:16.185 --> 00:00:18.065\nI'm your host, Daniel Lowrie.\n\n9\n00:00:18.065 --> 00:00:19.395\nAnd in today's episode, well guess what,\n\n10\n00:00:19.395 --> 00:00:22.035\nwe're back with more\nLinux command line stuff.\n\n11\n00:00:22.035 --> 00:00:25.785\nJoining us back in the studio yet\nagain, our good friend, Mr. Don Pezet.\n\n12\n00:00:25.785 --> 00:00:26.915\nDon, we're so glad to have you again.\n\n13\n00:00:26.915 --> 00:00:27.685\nHow's it going today?\n\n14\n00:00:27.685 --> 00:00:30.165\n&gt;&gt; It is going great, and thank you for\nthe chance to come back and\n\n15\n00:00:30.165 --> 00:00:33.155\ncover all the stuff that I didn't get\nto in the last episode which, and\n\n16\n00:00:33.155 --> 00:00:35.615\nthere were a couple of things\nthat we wanted to tackle, but\n\n17\n00:00:35.615 --> 00:00:39.880\nwe're gonna continue our adventure\nwith manipulating files right?\n\n18\n00:00:39.880 --> 00:00:43.530\nWe spent our time in the last episode\nreading files, redirecting output, and\n\n19\n00:00:43.530 --> 00:00:44.550\nkind of messing around with them.\n\n20\n00:00:44.550 --> 00:00:47.480\nBut there's a lot more that we can\ndo that are basic shell commands,\n\n21\n00:00:47.480 --> 00:00:50.000\nand we're gonna take a look at\nthem right here in this episode.\n\n22\n00:00:50.000 --> 00:00:53.240\n&gt;&gt; Now, Don, you made a great point when\nwe were creating our files we're basically\n\n23\n00:00:53.240 --> 00:00:57.700\nkind of using commands or\nredirecting that output into a file and\n\n24\n00:00:57.700 --> 00:00:59.760\nthat's where the file creation came from.\n\n25\n00:00:59.760 --> 00:01:01.582\nBut what if, and hang with me here.\n\n26\n00:01:01.582 --> 00:01:03.130\n&gt;&gt; [LAUGH]\n&gt;&gt; Follow me, if you will.\n\n27\n00:01:03.130 --> 00:01:06.230\nWhat if I just wanna create a file\nwith a file name, but it's empty?\n\n28\n00:01:06.230 --> 00:01:09.730\nI just want an empty file so\nthat I can manipulate it later.\n\n29\n00:01:09.730 --> 00:01:12.390\n&gt;&gt; Yeah, it's actually pretty\neasy to create a file.\n\n30\n00:01:12.390 --> 00:01:15.880\nAnd usually we don't just\ncreate an empty file,\n\n31\n00:01:15.880 --> 00:01:18.830\nwe use a program that generates data so\nthat we can save it.\n\n32\n00:01:18.830 --> 00:01:21.090\nIf we don't have data, well,\nthere's not really a whole lot of need for\n\n33\n00:01:21.090 --> 00:01:21.930\na placeholder.\n\n34\n00:01:21.930 --> 00:01:24.030\nBut there are times that we\nwanna create place orders.\n\n35\n00:01:24.030 --> 00:01:25.750\nAnd usually, it's with folders.\n\n36\n00:01:25.750 --> 00:01:28.150\nI'm gonna create bunch of\ndirectories that are there so\n\n37\n00:01:28.150 --> 00:01:29.500\npeople can start to put their documents.\n\n38\n00:01:29.500 --> 00:01:33.280\nI may need to set permissions before\npeople put their documents there.\n\n39\n00:01:33.280 --> 00:01:36.580\nSo we need to know how to go\nabout doing those things,\n\n40\n00:01:36.580 --> 00:01:40.350\nhow we can create these files, these place\nholders, so we can have permissions,\n\n41\n00:01:40.350 --> 00:01:42.060\nset them ahead of time, right?\n\n42\n00:01:42.060 --> 00:01:45.550\nAnd one of the easiest ways to do\nit is using the touch command.\n\n43\n00:01:45.550 --> 00:01:47.535\nTouch is a command that lets you,\n\n44\n00:01:47.535 --> 00:01:51.320\nwell, in the past it would just\nmake a subtle alteration to a file.\n\n45\n00:01:51.320 --> 00:01:53.680\nEvery file has a time stamp, right?\n\n46\n00:01:53.680 --> 00:01:56.150\nAnd the time stamp reflects\nthe last time that it was modified.\n\n47\n00:01:56.150 --> 00:02:00.970\nSo, for example, if I look at my little\nlab folder here, I'm gonna do a ls- lh.\n\n48\n00:02:00.970 --> 00:02:04.310\nI want the long output and\nI want the sizes human readable.\n\n49\n00:02:04.310 --> 00:02:09.350\nBut when I look, there is\nthe September 21st 10:26 on binaries.\n\n50\n00:02:09.350 --> 00:02:12.390\nAnd September 21st 10:24,\non bootlog, right?\n\n51\n00:02:12.390 --> 00:02:17.827\nWhat that means is that these files were\nlast modified on September 21st at 10:24\n\n52\n00:02:17.827 --> 00:02:23.639\nand 10:26 versus the mobydick file that\nwas modified much earlier at 9:53, right?\n\n53\n00:02:23.639 --> 00:02:24.881\nThose are the time stamps.\n\n54\n00:02:24.881 --> 00:02:27.710\nAnd the touch command\nallows you to touch a file,\n\n55\n00:02:27.710 --> 00:02:33.140\nwhich doesn't actually change it, but it\ndoes update the time stamp to now, right?\n\n56\n00:02:33.140 --> 00:02:34.740\nThat was it's original intent.\n\n57\n00:02:34.740 --> 00:02:39.110\nBut we can actually use the touch\ncommand to create our own files as well.\n\n58\n00:02:39.110 --> 00:02:42.300\nSo maybe I want to start\ncreating some memos.\n\n59\n00:02:42.300 --> 00:02:45.470\nAnd I want Daniel to be able to\ncome in and edit the memos as well.\n\n60\n00:02:45.470 --> 00:02:48.790\nSo I need to set some permissions on them\nahead of time before I've actually put\n\n61\n00:02:48.790 --> 00:02:49.850\nanything in there.\n\n62\n00:02:49.850 --> 00:02:55.490\nSo I might wanna create a file\ncalled memo.txt, right?\n\n63\n00:02:55.490 --> 00:02:57.024\nAnd I'll throw that in there.\n\n64\n00:02:57.024 --> 00:02:59.670\nAnd let me make a quick\nclarifying statement here.\n\n65\n00:02:59.670 --> 00:03:01.390\nStanley in the chat room\nhad a good comment.\n\n66\n00:03:01.390 --> 00:03:02.940\nI keep doing file extensions,\n\n67\n00:03:02.940 --> 00:03:08.210\nwhich is really a carryover to the old\nMicrosoft days but most people do them.\n\n68\n00:03:08.210 --> 00:03:12.270\nRemember that in the Linux and Unix world,\nwe're not beholden to file extensions,\n\n69\n00:03:12.270 --> 00:03:13.890\nyou don't have to have them.\n\n70\n00:03:13.890 --> 00:03:16.770\nThat we typically do them as a way\n\n71\n00:03:16.770 --> 00:03:19.540\nto let people know what the type\nof data is in the file.\n\n72\n00:03:19.540 --> 00:03:21.213\nBut it actually has no bearing\n[CROSSTALK] it's what?\n\n73\n00:03:21.213 --> 00:03:22.188\n&gt;&gt; A courtesy.\n\n74\n00:03:22.188 --> 00:03:22.871\n&gt;&gt; Yeah.\n&gt;&gt; Yeah,\n\n75\n00:03:22.871 --> 00:03:26.510\ncuz a lot of times we're like what kind\nof file is this, what do I open it with?\n\n76\n00:03:26.510 --> 00:03:28.260\nSo those extensions can help us.\n\n77\n00:03:28.260 --> 00:03:31.000\n&gt;&gt; Yeah, cuz there is a risk that\nmaybe it's not a text file at all,\n\n78\n00:03:31.000 --> 00:03:31.520\nmaybe it's a binary.\n\n79\n00:03:31.520 --> 00:03:34.320\nAnd if I open that it's gonna\ncause various problems.\n\n80\n00:03:34.320 --> 00:03:38.090\nAnd so by placing the extension on\nthat we've kind of got that note.\n\n81\n00:03:38.090 --> 00:03:40.840\nAnd what Stanley in the chat room was\nmentioning was that if we don't have\n\n82\n00:03:40.840 --> 00:03:42.650\nan extension it still works, but\n\n83\n00:03:42.650 --> 00:03:45.930\nyou can use the file command to\nsee what kind of data is in there.\n\n84\n00:03:45.930 --> 00:03:50.090\nSo if I do like file mobydick.txt\nit tells me it's ASCII text.\n\n85\n00:03:50.090 --> 00:03:52.850\nIf it tells me it's a binary,\nI don't wanna go messing with the file,\n\n86\n00:03:52.850 --> 00:03:53.830\nthe file need to be left alone.\n\n87\n00:03:53.830 --> 00:03:56.736\nBut if it tells me its text,\nthen it's okay to manipulate it.\n\n88\n00:03:56.736 --> 00:03:58.470\nSo I do the extensions.\n\n89\n00:03:58.470 --> 00:04:01.320\nMost people do just because it's just\nthat they kind of flag let people\n\n90\n00:04:01.320 --> 00:04:02.430\nknow what's in there.\n\n91\n00:04:02.430 --> 00:04:06.948\nSo when I ran touchmemo.text\nwhat it did is it made\n\n92\n00:04:06.948 --> 00:04:12.440\na completely empty file called memo.text,\nall right?\n\n93\n00:04:12.440 --> 00:04:15.050\nAnd if I do the ls-lh, and\nlook at it right there,\n\n94\n00:04:15.050 --> 00:04:17.800\nI can tell that it's completely empty.\n\n95\n00:04:17.800 --> 00:04:19.960\nThere's nothing in it,\nit's got a zero byte size.\n\n96\n00:04:19.960 --> 00:04:24.560\nIn fact, if I were to use that file\ncommand on it and run it against it,\n\n97\n00:04:24.560 --> 00:04:27.000\nit can't tell me whether it's a binary or\nnot because it's completely empty.\n\n98\n00:04:27.000 --> 00:04:30.260\nSo it just tells me it's empty, you can do\nwhatever you want with this file, right?\n\n99\n00:04:30.260 --> 00:04:33.920\nSo I just created a placeholder\nby using that touch command.\n\n100\n00:04:33.920 --> 00:04:36.420\nAnd now I can manipulate\nthat file however I need to.\n\n101\n00:04:36.420 --> 00:04:38.900\nI can set permissions or whatever.\n\n102\n00:04:38.900 --> 00:04:42.890\nAnd then we can flow data into it,\nand get it in there.\n\n103\n00:04:42.890 --> 00:04:45.458\nNow the touch command by itself Is really,\nreally simple.\n\n104\n00:04:45.458 --> 00:04:47.530\nYou just provide the file name,\nand that's it.\n\n105\n00:04:47.530 --> 00:04:48.890\n&gt;&gt; Yeah.\n\n106\n00:04:48.890 --> 00:04:52.410\n&gt;&gt; But you can take advantage of some\nother bash technologies here to really do\n\n107\n00:04:52.410 --> 00:04:53.730\nsome fun stuff.\n\n108\n00:04:53.730 --> 00:04:57.545\nSo, for example, let's say that\nI wanted to create five memos.\n\n109\n00:04:57.545 --> 00:05:03.500\nmemo1.txt, memo2.txt, memo3.txt,\nmemo4.tct, memo5.txt.\n\n110\n00:05:03.500 --> 00:05:04.910\nI could run each one of those.\n\n111\n00:05:04.910 --> 00:05:08.040\nI could say touch and then each entry.\n\n112\n00:05:08.040 --> 00:05:12.910\nOr in the bash prompt we can actually do\nwhat's called expansion, where I can send\n\n113\n00:05:12.910 --> 00:05:18.270\nit one command that's then run multiple\nways depending on a field of values.\n\n114\n00:05:18.270 --> 00:05:19.510\nRight?\nI know that sounds confusing, so\n\n115\n00:05:19.510 --> 00:05:21.020\nlet me just show you an example\nof what I'm talking about.\n\n116\n00:05:22.020 --> 00:05:26.712\nI can say touch memo and\nthen do a curly brace which is the little\n\n117\n00:05:26.712 --> 00:05:30.425\nsquiggly bracket or\nwhatever on your keyboard.\n\n118\n00:05:30.425 --> 00:05:35.660\nI'll do a curly brace, and\nI'm gonna say 1, 2, 3, 4, 5.\n\n119\n00:05:35.660 --> 00:05:41.350\nAnd then I'll close that curly brace,\nand I'll put .txt okay?\n\n120\n00:05:41.350 --> 00:05:45.610\nWhat's gonna happen is bash is going\nto see that, my shell is going to see\n\n121\n00:05:45.610 --> 00:05:49.710\nthe curly braces and say wait a minute,\nthis isn't the name of the file anymore.\n\n122\n00:05:49.710 --> 00:05:51.310\nThis is an expansion.\n\n123\n00:05:51.310 --> 00:05:56.240\nWhat Don is actually saying is memo1.txt,\nmemo2.txt, memo3.txt.\n\n124\n00:05:56.240 --> 00:05:59.340\nIt's going to interpret that and\nit's going to run it.\n\n125\n00:05:59.340 --> 00:06:02.780\nI ran one command,\nit's actually going to run it five times.\n\n126\n00:06:02.780 --> 00:06:04.270\nWell, assuming I did it right.\n\n127\n00:06:04.270 --> 00:06:09.400\nAnd so, if I take a look, sure enough,\nthere I've got memo one through memo five.\n\n128\n00:06:09.400 --> 00:06:12.190\nLet me get that as a list.\nSo I can see each one was created,\n\n129\n00:06:12.190 --> 00:06:14.270\nand they're right there in place.\n\n130\n00:06:14.270 --> 00:06:16.990\nSo, if I'm creating\nplaceholder directories, or\n\n131\n00:06:16.990 --> 00:06:20.170\nplaceholder files like this, usually,\nwe're creating a lot of them.\n\n132\n00:06:20.170 --> 00:06:23.940\nAnd a simple expansion like this\ncan be really, really handy.\n\n133\n00:06:23.940 --> 00:06:27.230\nI mean, you can even get really advanced,\nyou can do more than one expansion right?\n\n134\n00:06:27.230 --> 00:06:29.920\nMaybe I'm creating schedules for\nthree people?\n\n135\n00:06:29.920 --> 00:06:33.760\nSo I'm gonna do me, Daniel, and Ronnie.\n\n136\n00:06:33.760 --> 00:06:37.040\nAnd I wanna have a morning and\nan afternoon schedule for everybody.\n\n137\n00:06:37.040 --> 00:06:42.440\nSo I want don-morning, don-afternoon,\nronnie-morning, ronnie-afternoon.\n\n138\n00:06:42.440 --> 00:06:45.980\nSo that would be a lot of files to\ncreate if there's two schedules, and\n\n139\n00:06:45.980 --> 00:06:48.210\nthree people it would be six\nfiles I've gotta create.\n\n140\n00:06:48.210 --> 00:06:52.310\nBut I could do it all right here\nin one command, I could say touch.\n\n141\n00:06:52.310 --> 00:06:58.300\nAnd then I'm gonna do Don,\nRonnie, Daniel, right?\n\n142\n00:06:58.300 --> 00:07:00.080\nThere's my first expansion.\n\n143\n00:07:00.080 --> 00:07:05.070\nAnd then I'm gonna say dash and\na second expansion where I'll say Morning.\n\n144\n00:07:06.620 --> 00:07:07.160\nAfternoon, right?\n\n145\n00:07:08.460 --> 00:07:12.690\nAnd then if I wanna stick an extension\non there or whatever we can live it off.\n\n146\n00:07:12.690 --> 00:07:15.728\nAnd it'll create those and\nit's gonna run the commands.\n\n147\n00:07:15.728 --> 00:07:18.435\nIt'll take it and\nrun don-morning, don-afternoon.\n\n148\n00:07:18.435 --> 00:07:21.031\nThen it'll do ronnie-morning,\nronnie-afternoon.\n\n149\n00:07:21.031 --> 00:07:23.627\nThen it'll do daniel-morning,\ndaniel-afternoon.\n\n150\n00:07:23.627 --> 00:07:27.060\nMore than one expansion\nhappening here at the same time.\n\n151\n00:07:27.060 --> 00:07:31.690\nAnd when I run that, and\ntake a look at it, there I can see\n\n152\n00:07:31.690 --> 00:07:35.620\nthe two Daniel schedules, the two Don\nschedules, and the two Ronnie schedules.\n\n153\n00:07:35.620 --> 00:07:40.040\nAll created in place, and\nthat's doing what's called an expansion.\n\n154\n00:07:40.040 --> 00:07:43.980\nI'm expanding text inside of\na command into more than one command.\n\n155\n00:07:43.980 --> 00:07:46.180\nAnd that really does save us time.\n\n156\n00:07:46.180 --> 00:07:47.770\nI'm doing it here with the touch command.\n\n157\n00:07:47.770 --> 00:07:49.370\nYou can do this with really any command.\n\n158\n00:07:49.370 --> 00:07:54.265\nAny time that you're manipulating\nmultiple files, expansion can really\n\n159\n00:07:54.265 --> 00:07:58.856\nsave you a lot of effort to be able to\ngrab those files and act upon them.\n\n160\n00:07:58.856 --> 00:08:01.621\nI kind of did it the hard way,\nlike when I made those memos,\n\n161\n00:08:01.621 --> 00:08:04.850\nwhere I did memo one through five,\nI listed each one individually.\n\n162\n00:08:04.850 --> 00:08:09.360\nIt does support ranges, so like if I\nwanted to create six through nine,\n\n163\n00:08:09.360 --> 00:08:14.035\nI could come in here and say memo 6..9,\n\n164\n00:08:14.035 --> 00:08:18.780\nuse double dots to indicate the range.\n\n165\n00:08:18.780 --> 00:08:23.290\nAnd by doing that I don't have to\nlist every number in between, right?\n\n166\n00:08:23.290 --> 00:08:27.690\nSo now it's going to be a range of numbers\nthat I'll creat and when i do that and\n\n167\n00:08:27.690 --> 00:08:28.980\ntake a look at it.\n\n168\n00:08:28.980 --> 00:08:33.887\nNow I've go [6..9] created and by doing\na range you go into the hundreds or\n\n169\n00:08:33.887 --> 00:08:38.062\nthousands and it will rip out a thousand\nfiles [SOUND] just like that,\n\n170\n00:08:38.062 --> 00:08:39.396\nreally really easy.\n\n171\n00:08:39.396 --> 00:08:42.725\nAll the other commands we're gonna see\nin this episode, like copy and move and\n\n172\n00:08:42.725 --> 00:08:46.207\nstuff, they work with these expansions\nwell, so this is really a handy technique\n\n173\n00:08:46.207 --> 00:08:48.740\nto learn to make it easy to work\nwith larger amounts of file.\n\n174\n00:08:48.740 --> 00:08:50.470\n&gt;&gt; All right Dan, let's go down that road.\n\n175\n00:08:50.470 --> 00:08:53.490\nLet's talk about copying files,\nwe've created some files,\n\n176\n00:08:53.490 --> 00:08:54.720\nwe know how to make that happen.\n\n177\n00:08:54.720 --> 00:08:58.210\nIt's pretty simple and you've given us\nsome really great power in which to make,\n\n178\n00:08:58.210 --> 00:09:02.690\nmaking multiple files very very easy,\nLet's say I plugged in a USB drive.\n\n179\n00:09:02.690 --> 00:09:05.630\nI made some files here now I\nwant to make a backup of them.\n\n180\n00:09:05.630 --> 00:09:07.090\nI want to copy them to my USB drive.\n\n181\n00:09:07.090 --> 00:09:07.910\nHow would I do that?\n\n182\n00:09:07.910 --> 00:09:11.230\n&gt;&gt; All right so the files we've made so\nfar are empty which is pretty lame.\n\n183\n00:09:11.230 --> 00:09:14.360\nSo [LAUGH] we want to make\na file that has some data in it.\n\n184\n00:09:14.360 --> 00:09:16.780\nAnd a lot of times we're getting\nthat data from somewhere else.\n\n185\n00:09:16.780 --> 00:09:19.170\nAnd so the copy command can\nbe used to reach out and\n\n186\n00:09:19.170 --> 00:09:20.910\ngrab that data from somewhere else.\n\n187\n00:09:20.910 --> 00:09:23.310\nAnd place it into our file.\n\n188\n00:09:23.310 --> 00:09:25.310\nThe copy command is\npretty straight forward.\n\n189\n00:09:25.310 --> 00:09:27.880\nThe command itself is actually cp.\n\n190\n00:09:27.880 --> 00:09:31.320\nRight in the original Unix days\nthey would just take a verb and\n\n191\n00:09:31.320 --> 00:09:32.570\ndrop the vowels out of it.\n\n192\n00:09:32.570 --> 00:09:34.290\nAnd y sometimes cast it out.\n\n193\n00:09:34.290 --> 00:09:37.880\nSo, the o and the y display a cp\nThey didn't always do that,so\n\n194\n00:09:37.880 --> 00:09:42.720\nwhen you wanna make a directory they\ndidn't just do md as m, k, d, i, r,\n\n195\n00:09:42.720 --> 00:09:46.140\nthe i is still there so\nit's not always that way but\n\n196\n00:09:46.140 --> 00:09:50.170\nthe original commands are usually\njust two letters of this cp.\n\n197\n00:09:50.170 --> 00:09:55.190\nAnd if I wanna copy a file I then\nspecify the source of the data And\n\n198\n00:09:55.190 --> 00:09:56.700\nthen the destination.\n\n199\n00:09:56.700 --> 00:10:01.991\nSo maybe I wanna copy mobydick.text,\n\n200\n00:10:01.991 --> 00:10:05.295\ninto you know just a file.txt.\n\n201\n00:10:05.295 --> 00:10:11.270\nThe source is mobydick.text,\nthe destination is file.txt.\n\n202\n00:10:11.270 --> 00:10:14.720\nAnd so when I run that,\nit's just gonna copy one and the others.\n\n203\n00:10:14.720 --> 00:10:17.080\nNow I have two copies of mobydick.\n\n204\n00:10:17.080 --> 00:10:22.360\nAnd if I do ls-lh,\nI can see moby deck right here 1.2 and\n\n205\n00:10:22.360 --> 00:10:26.772\nI can see file.txt here at 1.2 also.\n\n206\n00:10:26.772 --> 00:10:30.280\nNow from that respect is pretty simple,\nbut\n\n207\n00:10:30.280 --> 00:10:34.020\nlet's think back to our navigating\nthe file system episode, because\n\n208\n00:10:34.020 --> 00:10:38.850\nnormally the file that you\\re copying is\ngoing to be copied to somewhere else.\n\n209\n00:10:38.850 --> 00:10:43.430\nI'm copying from one location\nTo another location so\n\n210\n00:10:43.430 --> 00:10:47.450\nI might want to make a backup of a log\nfile that's available somewhere.\n\n211\n00:10:47.450 --> 00:10:48.380\nSo maybe I wanna edit it.\n\n212\n00:10:48.380 --> 00:10:50.210\nI don't wanna edit a real log file.\n\n213\n00:10:50.210 --> 00:10:56.010\nSo if I get into /var/log and\nI look around here for a log\n\n214\n00:10:56.010 --> 00:10:59.870\nfile like the messages file, actually\nI probably don't have access to that.\n\n215\n00:10:59.870 --> 00:11:04.350\nLet me make sure that is a file that\nl have accessed it here All right,\n\n216\n00:11:04.350 --> 00:11:09.070\nl can do CPE,\nD message because l am in this folder and\n\n217\n00:11:09.070 --> 00:11:13.000\nthen l might wanna copy that,\noops l am gonna hold the right key here,\n\n218\n00:11:13.000 --> 00:11:17.610\nl am wanna copy that to my home folder and\nl can type that out, your slash home,\n\n219\n00:11:17.610 --> 00:11:23.450\nslash dpreset,\nslash lab slash bootlog.txt right,\n\n220\n00:11:23.450 --> 00:11:27.310\nI'm copying from the source\nlocation to the destination, and\n\n221\n00:11:27.310 --> 00:11:32.412\nremember all the aliases that you have\nwork so instead of /home/dpezet I could\n\n222\n00:11:32.412 --> 00:11:38.350\nhave done [INAUDIBLE] /Lab/bootlog.txt and\nthat's gonna copy it and paste it there,\n\n223\n00:11:38.350 --> 00:11:43.540\nright I was able to say that I was copying\nD message, because there is a file\n\n224\n00:11:43.540 --> 00:11:47.940\ncalled D message right here, and I just\nhappened to already be in that folder.\n\n225\n00:11:47.940 --> 00:11:49.780\nI was in that directory.\n\n226\n00:11:49.780 --> 00:11:51.030\nBut what if I wasn't?\n\n227\n00:11:51.030 --> 00:11:53.770\nIf I wasn't in that directory,\nif I was somewhere else,\n\n228\n00:11:53.770 --> 00:11:58.230\nlike in my home directory, then I would\nreally do four paths for these guys.\n\n229\n00:11:58.230 --> 00:12:03.272\nI would need to say that I'm\ncp/var/Log/dmsg Right or\n\n230\n00:12:03.272 --> 00:12:05.670\ndmesg.old whichever one I was grabbing.\n\n231\n00:12:05.670 --> 00:12:09.930\nI'll do dmesg and\nI wanna send it to ~/lab/bootlog.txt.\n\n232\n00:12:09.930 --> 00:12:17.100\nAnd I can run that and\nit copies it over okay?\n\n233\n00:12:17.100 --> 00:12:20.410\nNow quick note here,\neach time that I copied it,\n\n234\n00:12:20.410 --> 00:12:25.270\nI've been overwriting the same file\neach time, it never warned me did it?\n\n235\n00:12:25.270 --> 00:12:25.860\nRight?\n\n236\n00:12:25.860 --> 00:12:28.000\nCopy does not warn you.\n\n237\n00:12:28.000 --> 00:12:30.720\nIt just overwrites, so\nbe careful with that.\n\n238\n00:12:30.720 --> 00:12:34.070\nIf you're trying to append,\nthis is not the way that you do it.\n\n239\n00:12:34.070 --> 00:12:36.110\nOr if you don't know if\nthere's data there or not,\n\n240\n00:12:36.110 --> 00:12:39.040\nyou should go ahead and\ncheck before you do this.\n\n241\n00:12:39.040 --> 00:12:39.990\nIt doesn't give you a warning.\n\n242\n00:12:39.990 --> 00:12:43.544\nIt assumes that you\nknow What you're doing.\n\n243\n00:12:43.544 --> 00:12:45.910\n&gt;&gt; [LAUGH]\n&gt;&gt; And that's not always the case.\n\n244\n00:12:45.910 --> 00:12:48.800\nAnd I do know some people who\nactually take a safety measure.\n\n245\n00:12:48.800 --> 00:12:50.890\nThere's a command line argument\nwith copy I think it's -i,\n\n246\n00:12:50.890 --> 00:12:52.930\nlet's find it here real quick.\n\n247\n00:12:52.930 --> 00:12:54.710\nYeah -i it's interactive right?\n\n248\n00:12:54.710 --> 00:12:57.120\nThat makes it prompt before overwrite.\n\n249\n00:12:57.120 --> 00:13:01.510\nAnd so a lot of administrators people\nwho perform sensitive actions,\n\n250\n00:13:01.510 --> 00:13:05.940\na lot of times they will alias\nthe cp command to always use -i And\n\n251\n00:13:05.940 --> 00:13:10.570\nwhen you do that if the file already\nexist it will want you but it will say,\n\n252\n00:13:10.570 --> 00:13:13.810\nare you sure you wanna overwrite this?\n\n253\n00:13:13.810 --> 00:13:16.715\nAnd maybe you are, yeah I know\nwhat I'm doing, yes stop asking.\n\n254\n00:13:16.715 --> 00:13:18.750\n&gt;&gt; [LAUGH]\n&gt;&gt; Or maybe you didn't and\n\n255\n00:13:18.750 --> 00:13:21.180\nyou're like, I need to double check that,\nyou can say no,\n\n256\n00:13:21.180 --> 00:13:24.440\nit gives it a chance to stop\n&gt;&gt; But cp by default,\n\n257\n00:13:24.440 --> 00:13:26.390\ndoes not, give you that one.\n\n258\n00:13:26.390 --> 00:13:29.080\n&gt;&gt; Yeah, I think That's a really\ngreat option especially because,\n\n259\n00:13:29.080 --> 00:13:33.320\nwhen you are typing, it's really easy to,\nwhat we like to call, flat finger, and\n\n260\n00:13:33.320 --> 00:13:37.470\nthen do the wrong thing, so, just having\na little extra set of training wheels on,\n\n261\n00:13:37.470 --> 00:13:40.560\nmakes sure that you don't overwrite\na file that you don't want overwritten\n\n262\n00:13:40.560 --> 00:13:42.550\n&gt;&gt; That can definitely be helpful.\n\n263\n00:13:42.550 --> 00:13:46.810\nBut we are talking about\ncopying files okay.\n\n264\n00:13:46.810 --> 00:13:50.690\nThis file is great but it doesn't belong\nhere I need to move it somewhere else,\n\n265\n00:13:50.690 --> 00:13:54.165\nI wanna move the file and\nnot just copy and have two versions of it.\n\n266\n00:13:54.165 --> 00:13:55.900\n&gt;&gt; yeah,you know that\nis a good point,right?\n\n267\n00:13:55.900 --> 00:13:58.290\nWhen you copy a file.\n\n268\n00:13:58.290 --> 00:13:59.610\nYou end up with two copies, right?\n\n269\n00:13:59.610 --> 00:14:00.210\n&gt;&gt; Right.\n&gt;&gt; Well.\n\n270\n00:14:00.210 --> 00:14:00.900\nNot really two copies.\n\n271\n00:14:00.900 --> 00:14:02.340\nYou end up with an original and\n\n272\n00:14:02.340 --> 00:14:03.150\none copy, right?\n\n273\n00:14:03.150 --> 00:14:05.870\nSo you end up with two duplicates.\n\n274\n00:14:05.870 --> 00:14:06.370\n&gt;&gt; Yeah.\n\n275\n00:14:06.370 --> 00:14:07.495\n&gt;&gt; Whatever the terminology.\n\n276\n00:14:07.495 --> 00:14:08.329\n[INAUDIBLE] fast, right?\n\n277\n00:14:08.329 --> 00:14:09.010\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n278\n00:14:09.010 --> 00:14:11.030\n&gt;&gt; So if I wanna move it somewhere else.\n\n279\n00:14:11.030 --> 00:14:12.030\nThat's a different story, right?\n\n280\n00:14:12.030 --> 00:14:14.990\nSo let's say that I have an all new lab.\n\n281\n00:14:14.990 --> 00:14:21.410\nSo I'm gonna make a directory called\nLab2 And my files are in just Lab, right?\n\n282\n00:14:21.410 --> 00:14:23.010\nSo, that my files are right here.\n\n283\n00:14:23.010 --> 00:14:26.490\nI want these to be in Lab2 instead,\nbut I dont want them to stay here,\n\n284\n00:14:26.490 --> 00:14:29.400\nI want to move them over to Lab2.\n\n285\n00:14:29.400 --> 00:14:34.080\nWell, instead of cp,\nwe just use the move command, mv, right?\n\n286\n00:14:34.080 --> 00:14:35.900\nAnd at that,\nthe syntax is really the same.\n\n287\n00:14:35.900 --> 00:14:38.760\nI wanna move these files\nto another location.\n\n288\n00:14:38.760 --> 00:14:44.950\nNow when you move, you typically are\nspecifying a directory as a destination.\n\n289\n00:14:44.950 --> 00:14:47.670\nEspecially if you're\nmoving more that one file.\n\n290\n00:14:47.670 --> 00:14:53.120\nIf I wanna move all of these files,\nI can say mv *,\n\n291\n00:14:53.120 --> 00:14:58.760\nI wanna move everything in this folder\n&gt;&gt; And l wanna send that to\n\n292\n00:14:58.760 --> 00:15:04.470\nSlash lab two, all right and\nl have to be careful here because\n\n293\n00:15:05.490 --> 00:15:10.880\nhow does the system know if lab two\nis a folder or lab two is a file.\n\n294\n00:15:10.880 --> 00:15:16.320\nI wanna move all these into a file called\nlab two It doesn't necessarily know.\n\n295\n00:15:16.320 --> 00:15:18.210\nIf I want into a move into a folder,\nI need to make sure,\n\n296\n00:15:18.210 --> 00:15:19.960\nI throw a trailing slash on there.\n\n297\n00:15:19.960 --> 00:15:23.120\nAnd now, it knows, you're not\ntalking about a file of called Lab2,\n\n298\n00:15:23.120 --> 00:15:24.920\nyou're talking a folder called Lab2.\n\n299\n00:15:24.920 --> 00:15:27.900\nYou wanna move everything in this folder\n\n300\n00:15:27.900 --> 00:15:32.340\nover to these other folder where I\ncould say an individual file, right?\n\n301\n00:15:32.340 --> 00:15:35.430\nIf I wanted to move binaries.txt.\n\n302\n00:15:35.430 --> 00:15:37.510\nI could just move that one.\n\n303\n00:15:37.510 --> 00:15:39.040\nI wanna move the whole thing.\n\n304\n00:15:39.040 --> 00:15:41.670\nSo, I'm gonna move everything\nin here into Lab2.\n\n305\n00:15:41.670 --> 00:15:47.294\nAnd when I ran that, now, the Lab\nfolder's empty, ls returns nothing.\n\n306\n00:15:47.294 --> 00:15:53.136\nBut if I pull a directory listing for\nLab2, there's all the files, right?\n\n307\n00:15:53.136 --> 00:15:55.287\nSo, I only got one copy of these files,\n\n308\n00:15:55.287 --> 00:15:57.711\nthey been moved over\nto the other location.\n\n309\n00:15:57.711 --> 00:15:59.344\nAnd that's where they are.\n\n310\n00:15:59.344 --> 00:16:03.460\nNow, a couple of interesting,\nkind of, sides on this.\n\n311\n00:16:03.460 --> 00:16:06.640\nFirst off, Move is great for\nmoving these to other directories, but\n\n312\n00:16:06.640 --> 00:16:09.340\nyou can also use Move to rename a file.\n\n313\n00:16:09.340 --> 00:16:12.920\nIn the Unix and Linux world,\nthere is no rename command, right?\n\n314\n00:16:12.920 --> 00:16:16.490\nIn Windows, I think it's\nactually called Rename isn't it?\n\n315\n00:16:16.490 --> 00:16:17.120\n&gt;&gt; Yeah I think so.\n\n316\n00:16:17.120 --> 00:16:20.390\n&gt;&gt; So you have a command line still\nthere in Linux well we don't need that,\n\n317\n00:16:20.390 --> 00:16:25.370\nbecause you can just use move,right, if I\nwanna rename,I've got memo.txt, maybe I\n\n318\n00:16:25.370 --> 00:16:30.260\nwant that to be memo0.txt, right, it's the\nvery first one so I want it to me memo0.\n\n319\n00:16:30.260 --> 00:16:35.000\nSo I can say move memo.txt to\n\n320\n00:16:35.000 --> 00:16:39.990\nmemo 0.text, all right?\n\n321\n00:16:39.990 --> 00:16:41.540\nI'm moving the file.\n\n322\n00:16:41.540 --> 00:16:45.260\nThe old file goes away,\nthe one that was called memo.text and\n\n323\n00:16:45.260 --> 00:16:48.520\nthe new file is now called memo0.text.\n\n324\n00:16:48.520 --> 00:16:51.320\nSo I'm basically renaming\na file by using move.\n\n325\n00:16:51.320 --> 00:16:54.310\nBut in the file system, I'm technically\nmoving it to a new location,\n\n326\n00:16:54.310 --> 00:16:57.700\nand it just happens to have\na new name in that new location.\n\n327\n00:16:57.700 --> 00:17:01.800\nBut now if I take a look at what's\nin here I've got that memo zero and\n\n328\n00:17:01.800 --> 00:17:06.900\nthe one that's just final memo.txt is\ngone, and this whole time I've been\n\n329\n00:17:06.900 --> 00:17:12.310\ncopying and moving files but we can copy\nand move directories as well, right?\n\n330\n00:17:12.310 --> 00:17:18.170\nSo for example let's say I\ngot rid of the lab folder,\n\n331\n00:17:18.170 --> 00:17:21.050\nSo I just did a rmdir to\nremove direct [INAUDIBLE].\n\n332\n00:17:21.050 --> 00:17:22.950\nRemove the lab folder.\n\n333\n00:17:22.950 --> 00:17:29.180\nAnd I've got the Lab2 folder\nthat has all of my files.\n\n334\n00:17:29.180 --> 00:17:29.880\nAnd I decide.\n\n335\n00:17:29.880 --> 00:17:30.918\nThat was kind of dumb.\n\n336\n00:17:30.918 --> 00:17:31.710\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n337\n00:17:31.710 --> 00:17:34.020\nI wanna rename it back to just lab again.\n\n338\n00:17:34.020 --> 00:17:34.580\nOkay?\n\n339\n00:17:34.580 --> 00:17:37.750\nOr I wanna move it somewhere\nelse on my hard drive Well,\n\n340\n00:17:37.750 --> 00:17:41.870\nyou can use the move command and\nyou can move a folder.\n\n341\n00:17:41.870 --> 00:17:49.980\nI can say I wanna move\nto /lab to 2/lab.Right,\n\n342\n00:17:49.980 --> 00:17:55.130\nso I am moving on an extra mode\nin the forms I could just say.\n\n343\n00:17:55.130 --> 00:17:59.460\nLike that without a path at all,\nand I'm a bit of\n\n344\n00:18:00.710 --> 00:18:05.610\na stickler for path names, and the reason\nis that I started my Unix sequence really\n\n345\n00:18:05.610 --> 00:18:09.660\nstated some where else, and in the slowest\nworld it was really particular about path,\n\n346\n00:18:09.660 --> 00:18:12.640\nso if you wanted to move something that's\nin the folder that you're in, you actually\n\n347\n00:18:12.640 --> 00:18:15.690\nhad to say like dot slash, so that we\nreally know what you're talking about,\n\n348\n00:18:15.690 --> 00:18:19.000\nI'm trying to tell something right here in\nthis folder, not something In the path,\n\n349\n00:18:19.000 --> 00:18:22.280\nit's stored somewhere else on my hard\ndrive, I'm being really particular.\n\n350\n00:18:22.280 --> 00:18:25.330\nSo I, out of habit,\nit's actually hard for me to break that.\n\n351\n00:18:25.330 --> 00:18:26.910\n&gt;&gt; Old habits die hard they say Don.\n\n352\n00:18:26.910 --> 00:18:29.900\n&gt;&gt; So a lot of the times I'll type paths\nwhen I don't necessarily need them, but\n\n353\n00:18:29.900 --> 00:18:33.450\nhere if I want to move lab2 to lab,\nI can just do that, and\n\n354\n00:18:33.450 --> 00:18:35.350\nwhen I look, there it is.\n\n355\n00:18:35.350 --> 00:18:38.710\nIt's moved it And\nit's brought that over okay?\n\n356\n00:18:38.710 --> 00:18:41.820\nNow this can be a little\nproblematic sometimes.\n\n357\n00:18:41.820 --> 00:18:44.120\nFor example with the copy command.\n\n358\n00:18:44.120 --> 00:18:47.800\nIf I have multiple directories\ninside of something, so for\n\n359\n00:18:47.800 --> 00:18:51.850\nexample inside of the lab folder,\n\n360\n00:18:51.850 --> 00:18:55.910\nmaybe I have another directory\ncalled test1, or test2 right?\n\n361\n00:18:55.910 --> 00:18:59.490\nAnd inside of test 1 and\n\n362\n00:18:59.490 --> 00:19:03.550\nI may have a bunch of files right,\ntouch files 1.20.txt, right?\n\n363\n00:19:03.550 --> 00:19:10.030\nIf I got all these files inside here,\n\n364\n00:19:10.030 --> 00:19:14.480\nand then I git files inside of lab,\nand if I wanna copy all of those, so,\n\n365\n00:19:14.480 --> 00:19:20.050\nmay be I have some kind of\ndirectory as your lab.backup And\n\n366\n00:19:20.050 --> 00:19:25.050\nso I wanna have a back up of\nall of my lab files right here.\n\n367\n00:19:25.050 --> 00:19:25.680\nOkay?\n\n368\n00:19:25.680 --> 00:19:29.920\nWell when I do CP and\nI go to copy a folder.\n\n369\n00:19:29.920 --> 00:19:31.890\nIt's not gonna get those sub folders.\n\n370\n00:19:31.890 --> 00:19:34.090\nIt's not gonna get those\nitems underneath it,\n\n371\n00:19:34.090 --> 00:19:36.920\nI need to tell it that\nI want it to do that.\n\n372\n00:19:36.920 --> 00:19:39.620\nAnd in the copy command you have a tag,\n\n373\n00:19:39.620 --> 00:19:45.230\na command line argument which is\na -r,and if we find it right here -r,\n\n374\n00:19:45.230 --> 00:19:50.700\nit makes it recursive, in other words\ndon't just get the parent directory\n\n375\n00:19:50.700 --> 00:19:54.040\nget the directories inside of it,\nget all the stuff that's inside,\n\n376\n00:19:54.040 --> 00:19:58.470\nfollow that tree all the way down\nTo get what's inside of there and\n\n377\n00:19:58.470 --> 00:20:03.560\nthat recursion is really handy when\nyou're doing a back up like this.\n\n378\n00:20:03.560 --> 00:20:07.850\nI might wanna do a cp -/lab and\n\n379\n00:20:09.180 --> 00:20:13.460\nI might wanna copy that to -/lab.backup,\nOkay.\n\n380\n00:20:13.460 --> 00:20:16.190\nBut when I do it I want\nthat to be recursive so\n\n381\n00:20:16.190 --> 00:20:21.130\nI'm gonna add a -r To make sure\nit gets the sub folders as well.\n\n382\n00:20:21.130 --> 00:20:22.280\nAnd when I run that and\n\n383\n00:20:22.280 --> 00:20:26.730\nI look inside of my backup, shoot I\ngrabbed the lab file itself, sorry.\n\n384\n00:20:27.880 --> 00:20:31.680\nI specified slash lab literally and\nI meant to do a slash\n\n385\n00:20:31.680 --> 00:20:35.160\nstar after that to get everything\nthat's inside of it which I did not do.\n\n386\n00:20:35.160 --> 00:20:39.800\nSo anyway now I have a lab which I can\nmove this to fix it or whatever, but\n\n387\n00:20:39.800 --> 00:20:45.240\nnow there they are and the sub folder\nwent along with it and it got everything\n\n388\n00:20:45.240 --> 00:20:49.780\nthat was inside of that okay, so what I\nshould have done in that command, there's\n\n389\n00:20:49.780 --> 00:20:53.230\na ew ways to run it, right, and when I\nShould have done is said that I wanna copy\n\n390\n00:20:54.670 --> 00:20:59.980\nfrom what's in that folder\nto in this other folder.\n\n391\n00:20:59.980 --> 00:21:03.340\nAnd you can do that by\ndoing a /* like that.\n\n392\n00:21:03.340 --> 00:21:05.900\nSaying get all the contents of the folder.\n\n393\n00:21:05.900 --> 00:21:08.730\nBut I copied the folder itself.\n\n394\n00:21:08.730 --> 00:21:12.720\nAnd so that's why it kind of put\nit inside of this other one SO\n\n395\n00:21:12.720 --> 00:21:14.690\nI should have done a slash\nstar in this case.\n\n396\n00:21:14.690 --> 00:21:17.980\nThat would have got it, brought it over\nas well as all the sub directories and\n\n397\n00:21:17.980 --> 00:21:22.250\nput things where actually one of that\nwould be, which was right here so.\n\n398\n00:21:22.250 --> 00:21:25.460\nLittle things again like the subtle\npositioning of a character.\n\n399\n00:21:25.460 --> 00:21:26.420\n&gt;&gt; Yeah.\n&gt;&gt; You leave one thing out and\n\n400\n00:21:26.420 --> 00:21:28.270\nit actually performs\nquite a different task.\n\n401\n00:21:28.270 --> 00:21:32.300\n&gt;&gt; It's kind of funny, i t really,\n&gt;&gt; Happens a lot because like\n\n402\n00:21:32.300 --> 00:21:35.360\nwe're talking about fat fingering\nguess what that's what going on here.\n\n403\n00:21:35.360 --> 00:21:38.240\nYou just get a little bit rushed and\nyou're thinking, man\n\n404\n00:21:38.240 --> 00:21:43.030\nnow I've created a bunch of files I don't\nactually need or I got us the wrong name.\n\n405\n00:21:43.030 --> 00:21:44.350\nI could do renaming, but\n\n406\n00:21:44.350 --> 00:21:46.410\nsometimes it's just like I just\nwanna start from the scratch.\n\n407\n00:21:46.410 --> 00:21:47.360\nSomething blow that away.\n\n408\n00:21:47.360 --> 00:21:49.160\nI wanna delete the files.\n\n409\n00:21:49.160 --> 00:21:52.720\nOr it's just information that I no\nlonger need for whatever reason.\n\n410\n00:21:52.720 --> 00:21:54.680\nI want to delete the files done.\n\n411\n00:21:54.680 --> 00:21:56.040\nShows us how we can delete files.\n\n412\n00:21:56.040 --> 00:22:00.930\n&gt;&gt; Absolutely so following our two\nletter commands we've got rm for remove.\n\n413\n00:22:00.930 --> 00:22:06.810\nSo we had cp for copy, mv for\nmove, rm for remove or delete.\n\n414\n00:22:06.810 --> 00:22:08.990\nSo I can say rm and then a file.\n\n415\n00:22:08.990 --> 00:22:11.410\nSo maybe I wanna get rid of memo.txt or\nmemo0.\n\n416\n00:22:11.410 --> 00:22:15.980\nI'll do memo0.txt, and so\nI'm gonna remove that one.\n\n417\n00:22:15.980 --> 00:22:18.260\nAnd now when I pull up my listing.\n\n418\n00:22:18.260 --> 00:22:19.810\nmemo0 is gone.\n\n419\n00:22:19.810 --> 00:22:22.070\nRight?\nRM just worked.\n\n420\n00:22:22.070 --> 00:22:25.090\nNow, when you go to remove files,\nyou do have to be a little bit careful.\n\n421\n00:22:25.090 --> 00:22:26.080\nYou can remove many files.\n\n422\n00:22:26.080 --> 00:22:30.840\nOnes that say RMStar, and\nthat'll delete it all, right.\n\n423\n00:22:30.840 --> 00:22:33.470\nWhen I do that, it's going to delete.\n\n424\n00:22:33.470 --> 00:22:35.360\nAnd see how it got some errors?\n\n425\n00:22:35.360 --> 00:22:37.830\nRM doesn't work so well on directories.\n\n426\n00:22:37.830 --> 00:22:39.180\nIt throws an error.\n\n427\n00:22:39.180 --> 00:22:41.150\nIt says, you can't remove that,\nit's a directory.\n\n428\n00:22:41.150 --> 00:22:43.140\nThere might be stuff inside of it And\n\n429\n00:22:43.140 --> 00:22:45.480\nif I pull up a listing though it\ndid get rid of everything else.\n\n430\n00:22:45.480 --> 00:22:47.010\nAll that's left of the directories.\n\n431\n00:22:47.010 --> 00:22:48.630\nThat's good right.\n\n432\n00:22:48.630 --> 00:22:51.280\nBut how do I get rid of a directory\nif it's got stuff inside.\n\n433\n00:22:51.280 --> 00:22:54.310\nWell technically you could\ngo inside the directory.\n\n434\n00:22:54.310 --> 00:22:56.520\nDelete everything from inside\nthen when you come out,\n\n435\n00:22:56.520 --> 00:22:59.780\nyou could use the rmdir command\nwhich is remove directory.\n\n436\n00:22:59.780 --> 00:23:04.240\nRight if I do that, if I try and remove\ndirectory lab, It's not empty, so now I'd\n\n437\n00:23:04.240 --> 00:23:07.700\nhave to go into the directory to remove\nsome items, come out of the directory use\n\n438\n00:23:07.700 --> 00:23:12.870\nrmdir to delete the directory and then go\nfrom there so it's a lot of work okay?\n\n439\n00:23:12.870 --> 00:23:16.420\nSo what we can do is we can change the rm\ncommand a little bit to make it a bit\n\n440\n00:23:16.420 --> 00:23:17.580\nmore aggressive.\n\n441\n00:23:17.580 --> 00:23:23.140\nAnd say I don't care what those files are,\ndelete them right?\n\n442\n00:23:23.140 --> 00:23:26.220\nIf you do rm -r Remember what RM-R did for\nCP?\n\n443\n00:23:26.220 --> 00:23:28.500\nIt made it reperceive.\n\n444\n00:23:28.500 --> 00:23:31.200\nIt went into solve/ folders, right?\n\n445\n00:23:31.200 --> 00:23:32.370\nI can do that with RM-R, right?\n\n446\n00:23:32.370 --> 00:23:38.150\nI can say RM-R lab, right?\n\n447\n00:23:38.150 --> 00:23:39.780\nAnd now it's gonna go and\n\n448\n00:23:39.780 --> 00:23:43.370\nit doesn't complain about it\nbeing the directory, right?\n\n449\n00:23:43.370 --> 00:23:44.658\nI'm fine with that being in directory.\n\n450\n00:23:44.658 --> 00:23:49.458\nBut, It, or no yeah, so\n[CROSSTALK], but in this\n\n451\n00:23:49.458 --> 00:23:54.041\ncase I'll have the exception, so yeah it\nworks, it removes it and there we go.\n\n452\n00:23:54.041 --> 00:23:54.932\nThere is an exception.\n\n453\n00:23:54.932 --> 00:23:58.299\nEvery now and then you can hit where\nthere's like a protected file, or\n\n454\n00:23:58.299 --> 00:24:01.190\nsomething that stops you from\nbeing able to delete it.\n\n455\n00:24:01.190 --> 00:24:02.210\nAnd it didn't happen for me.\n\n456\n00:24:02.210 --> 00:24:04.170\nI thought it was going to, and it didn't.\n\n457\n00:24:04.170 --> 00:24:06.210\nSo rm-r worked perfect.\n\n458\n00:24:06.210 --> 00:24:11.080\nBut if you hit one of those exceptions\nwhere there's files under there that maybe\n\n459\n00:24:11.080 --> 00:24:13.550\nyou're the owner of, but the permissions\nhave been changed to read only or\n\n460\n00:24:13.550 --> 00:24:15.340\nsomething like that, it might stop you.\n\n461\n00:24:15.340 --> 00:24:18.796\nAnd if you ever encounter that, you can\nchange the command just a little bit.\n\n462\n00:24:18.796 --> 00:24:22.684\nMaybe I wanna get rid of test 1 and\n2, so I'm using expansion so\n\n463\n00:24:22.684 --> 00:24:26.080\nthat I can delete test1 and\ntest2 at the same time.\n\n464\n00:24:26.080 --> 00:24:27.320\nOr you could actually write them out.\n\n465\n00:24:27.320 --> 00:24:29.723\nI could say test1, test2 like that.\n\n466\n00:24:29.723 --> 00:24:33.680\nIt works either way, but\nthe expansion is just a little bit short.\n\n467\n00:24:33.680 --> 00:24:34.810\nI think it's one keystroke short.\n\n468\n00:24:36.250 --> 00:24:42.930\nSo if I wanna remove those, you can do\nan rm-rf, and that f says to force it.\n\n469\n00:24:42.930 --> 00:24:45.871\nNow this is what we have to be\ncareful with because basically we're\n\n470\n00:24:45.871 --> 00:24:47.457\ntaking off the safety gloves here.\n\n471\n00:24:47.457 --> 00:24:50.315\nAnd it's saying I don't care what I\nencounter underneath as long as you're\n\n472\n00:24:50.315 --> 00:24:53.306\nthe owner or you have the permission to\nmess with it, we're going to toast it and\n\n473\n00:24:53.306 --> 00:24:54.081\nget it out of there.\n\n474\n00:24:54.081 --> 00:24:55.553\nSo that's what rm-rf does.\n\n475\n00:24:55.553 --> 00:24:59.220\nThis is the command I run when I\nwanna just get something going on and\n\n476\n00:24:59.220 --> 00:25:01.985\nI don't want to be bothered\nwith error messages.\n\n477\n00:25:01.985 --> 00:25:03.740\nJust do it, get rid of it.\n\n478\n00:25:03.740 --> 00:25:06.710\nAnd when I run that,\nit's gonna go through and purge it.\n\n479\n00:25:06.710 --> 00:25:09.500\nAnd now all of those folders are gone,\nokay.\n\n480\n00:25:09.500 --> 00:25:11.011\nSo -r made it recursive.\n\n481\n00:25:11.011 --> 00:25:13.987\nThat's what got me around\nthe directory problem.\n\n482\n00:25:13.987 --> 00:25:18.566\n-rf made it force and just get\npast any kind of blocks, just say,\n\n483\n00:25:18.566 --> 00:25:20.330\nwe're gonna remove it.\n\n484\n00:25:20.330 --> 00:25:22.480\nYou can't delete something\nyou don't have permission to.\n\n485\n00:25:22.480 --> 00:25:24.210\nSo force isn't magic.\n\n486\n00:25:24.210 --> 00:25:27.150\nIt's just, there's some things that\nyou may have set yourself to have\n\n487\n00:25:27.150 --> 00:25:29.658\nread only permission, and\nthat's what it will [INAUDIBLE].\n\n488\n00:25:29.658 --> 00:25:32.910\nA couple of different manipulations there\non that rm command to remove the data and\n\n489\n00:25:32.910 --> 00:25:33.745\nget it out of there.\n\n490\n00:25:33.745 --> 00:25:37.305\n&gt;&gt; All right, Don, well, we've gone\nthrough a litany of very basic, but\n\n491\n00:25:37.305 --> 00:25:41.315\nvery crucial items of manipulating files,\nworking with files.\n\n492\n00:25:41.315 --> 00:25:45.675\nWe've copied, we've moved them, we've\ndeleted them, we've done a lot of stuff.\n\n493\n00:25:45.675 --> 00:25:49.566\nYou've shown us expansion, which was a\ngreat thing, because it helps us minimize\n\n494\n00:25:49.566 --> 00:25:53.620\nthe amount of typing and time that it's\ngonna take to make a lot of stuff.\n\n495\n00:25:53.620 --> 00:25:56.010\nOr just move stuff or\nwhatever it is we're doing.\n\n496\n00:25:56.010 --> 00:25:59.380\nAs you say, it works so\nubiquitously through our batch system,\n\n497\n00:25:59.380 --> 00:26:01.775\nit can be very helpful in\na lot of great places.\n\n498\n00:26:01.775 --> 00:26:05.617\nIs there anything else you want to\nenlighten our audience with before we go?\n\n499\n00:26:05.617 --> 00:26:06.805\nWe're running short on time.\n\n500\n00:26:06.805 --> 00:26:09.598\n&gt;&gt; Well, I know I've made this comment\nin some of the other episodes, but\n\n501\n00:26:09.598 --> 00:26:12.035\nwe've really just scratched\nthe tip of the iceberg, right?\n\n502\n00:26:12.035 --> 00:26:14.035\nIt's kind of an introductory,\ngetting used to it.\n\n503\n00:26:14.035 --> 00:26:18.398\nSo there are a ton of other commands that\nare out there that are incredibly useful\n\n504\n00:26:18.398 --> 00:26:22.465\nthat you'll use all the time, but these\nare kinda the core ones, the base ones,\n\n505\n00:26:22.465 --> 00:26:23.735\nthe ones you're expected to know.\n\n506\n00:26:23.735 --> 00:26:27.750\nAnd more importantly, because they're core\nutilities, these are present everywhere.\n\n507\n00:26:27.750 --> 00:26:32.800\nSo if you go to a BSD machine, or a Linux\nMachine, if it's Ubuntu or Fedora or\n\n508\n00:26:32.800 --> 00:26:37.345\nRed Hat, if you go to a Solaris machine,\nOracle Linux, whatever, these\n\n509\n00:26:37.345 --> 00:26:41.190\ncommands are there, these same commands,\nthe same way we manipulate things.\n\n510\n00:26:41.190 --> 00:26:45.600\nSo this is a consistent set of\ncore utilities they always have.\n\n511\n00:26:45.600 --> 00:26:46.320\nThe fancier bills and\n\n512\n00:26:46.320 --> 00:26:49.040\nwhistles are great, but\nyou don't necessarily always have those.\n\n513\n00:26:49.040 --> 00:26:52.140\nSo this is kind of that starting point for\nmanipulating files.\n\n514\n00:26:52.140 --> 00:26:53.200\n&gt;&gt; All right, great stuff, Don.\n\n515\n00:26:53.200 --> 00:26:55.421\nWe do appreciate your time and\neffort into this show and\n\n516\n00:26:55.421 --> 00:26:57.320\nall the great examples\nthat you've shown us.\n\n517\n00:26:57.320 --> 00:27:01.200\nThe demonstrations, they were\nreally well-executed and explained.\n\n518\n00:27:01.200 --> 00:27:02.090\nAnd that's the important part.\n\n519\n00:27:02.090 --> 00:27:04.510\nHopefully you guys out there that\nare watching this are like, man,\n\n520\n00:27:04.510 --> 00:27:05.470\nI'm eating this up.\n\n521\n00:27:05.470 --> 00:27:07.315\nI can run me some Linux now.\n\n522\n00:27:07.315 --> 00:27:10.580\nThat's kind of the purpose of why we're\ndoing this for you folks out there.\n\n523\n00:27:10.580 --> 00:27:13.360\nDon, thanks again for joining us,\nand we do thank you for watching.\n\n524\n00:27:13.360 --> 00:27:15.990\nWell, looking at the clock, we have\ndwindled down to nothing yet again for\n\n525\n00:27:15.990 --> 00:27:16.780\nanother show.\n\n526\n00:27:16.780 --> 00:27:19.460\nSigning off for ITProTV,\nI've been your host Daniel Lowrie.\n\n527\n00:27:19.460 --> 00:27:20.090\n&gt;&gt; And I'm Don Pezet.\n\n528\n00:27:20.090 --> 00:27:22.657\n&gt;&gt; And we'll see you next time.\n\n529\n00:27:22.657 --> 00:27:28.512\n[MUSIC]\n\n530\n00:27:28.512 --> 00:27:31.596\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "234903345"
        }
      ],
      "title": "Basic Shell Commands"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Don explains how applications execute in Linux and demonstrates how to view what processes are currently running. He then demonstrates how to pull additional detailed information on each process running and how to terminate a malfunctioning process if required.",
          "length": "1654",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-1-1-managing_processes-092117-CLN.00_27_18_05.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-1-1-managing_processes-092117-CLN.00_27_18_05.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-1-1-managing_processes-092117-CLN.00_27_18_05.Still001-sm.jpg",
          "title": "Managing Processes",
          "transcript": "WEBVTT\n\n1\n00:00:00.240 --> 00:00:00.957\nWelcome to IT Pro TV, I'm your host\nDon Pezet coming at you live from\n\n2\n00:00:00.957 --> 00:00:06.535\nSan Francisco's\n&gt;&gt; [CROSSTALK]\n\n3\n00:00:06.535 --> 00:00:08.291\n[MUSIC]\n\n4\n00:00:08.291 --> 00:00:12.035\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:12.035 --> 00:00:13.949\n&gt;&gt; All right, greetings everyone and\n\n6\n00:00:13.949 --> 00:00:16.705\nwelcome back to another\ngreat episode of ITProTV.\n\n7\n00:00:16.705 --> 00:00:18.337\nI'm your host, Daniel Lowrie and\n\n8\n00:00:18.337 --> 00:00:21.899\nin today's episode we are back with\nmore in our Linux Command line series.\n\n9\n00:00:21.899 --> 00:00:25.340\nAnd it's definitely been\nan interesting conversation so far.\n\n10\n00:00:25.340 --> 00:00:29.500\nJoining us back to continue that talk,\nour good friend, Mr. Don Pezet.\n\n11\n00:00:29.500 --> 00:00:31.120\nDon, welcome back sir,\nhow's it going today?\n\n12\n00:00:31.120 --> 00:00:34.704\n&gt;&gt; It is going great, ready to dive back\ninto the world of the Linux Command line.\n\n13\n00:00:34.704 --> 00:00:38.400\nAnd in this episode we're gonna be taking\na look at how to manage processes, right?\n\n14\n00:00:38.400 --> 00:00:40.720\nAnd processes are all those\nprograms that we run.\n\n15\n00:00:40.720 --> 00:00:44.060\nLinux is a true multi-tasking\noperating system which,\n\n16\n00:00:44.060 --> 00:00:46.200\nit used to be a really\nbig deal in the Eighties.\n\n17\n00:00:46.200 --> 00:00:49.600\nBut in today's age we just\nexpect it to have it,\n\n18\n00:00:49.600 --> 00:00:52.270\nthat our system can run more\nthan one program at once.\n\n19\n00:00:52.270 --> 00:00:57.013\nBut the power that we get from that\nbrings a little bit of a flip side.\n\n20\n00:00:57.013 --> 00:00:58.752\nWhich is that if you get too much running,\n\n21\n00:00:58.752 --> 00:01:01.250\nyour system performance\ncan start to be affected.\n\n22\n00:01:01.250 --> 00:01:04.060\nSo in this episode we're gonna get\na chance to see how to determine\n\n23\n00:01:04.060 --> 00:01:05.330\nwhat all is running on our system.\n\n24\n00:01:05.330 --> 00:01:07.000\nBe able to see if it is impacting us or\n\n25\n00:01:07.000 --> 00:01:09.060\nif we're perfectly in\nthe bounds of our hardware.\n\n26\n00:01:09.060 --> 00:01:12.465\nAnd then see how we can kind of recover\nfrom it in the event that we are consuming\n\n27\n00:01:12.465 --> 00:01:13.085\ntoo many resources.\n\n28\n00:01:13.085 --> 00:01:15.427\nSo all that laid out right\nhere in this episode.\n\n29\n00:01:15.427 --> 00:01:18.195\n&gt;&gt; All right Don, well let's do that and\nlet's start at the very beginning.\n\n30\n00:01:18.195 --> 00:01:21.055\nI've got processes running\nin my Linux system,\n\n31\n00:01:21.055 --> 00:01:24.705\nI wanna see what they are and\nwhat the heck is going on with them.\n\n32\n00:01:24.705 --> 00:01:25.813\nWhere do I begin there?\n\n33\n00:01:25.813 --> 00:01:30.945\n&gt;&gt; All right so in the Unix world, there\nwas a command that was introduced a long,\n\n34\n00:01:30.945 --> 00:01:32.550\nlong time ago called ps.\n\n35\n00:01:32.550 --> 00:01:35.950\nAnd the ps command would just\nshow you all of your processes.\n\n36\n00:01:35.950 --> 00:01:39.320\nUnfortunately, the ps command,\nit's critical, it's a core utility,\n\n37\n00:01:39.320 --> 00:01:40.760\nit's part of every distro.\n\n38\n00:01:40.760 --> 00:01:43.110\nBut it's evolved a lot over the years.\n\n39\n00:01:43.110 --> 00:01:46.540\nAnd so the way it gets used is\nkind of strange because there's\n\n40\n00:01:46.540 --> 00:01:48.150\nthe original Unix way.\n\n41\n00:01:48.150 --> 00:01:51.300\nThere's the BSD way,\nthere's the newer GNU version.\n\n42\n00:01:51.300 --> 00:01:53.700\nAnd so there's all sorts of changes and\nmanipulations.\n\n43\n00:01:53.700 --> 00:01:58.070\nSo what I'm gonna show you here in this\nshow is one way of using the ps utility,\n\n44\n00:01:58.070 --> 00:01:59.490\nbut know there's more than one way.\n\n45\n00:01:59.490 --> 00:02:02.576\nAnd if you read the man file for\nit it's almost like a history documentary,\n\n46\n00:02:02.576 --> 00:02:03.160\n&gt;&gt; [LAUGH]\n\n47\n00:02:03.160 --> 00:02:04.535\n&gt;&gt; On this command's mutations\n\n48\n00:02:04.535 --> 00:02:05.760\nthrough the years.\n\n49\n00:02:05.760 --> 00:02:09.103\nBut I'll just use the standard Linux way\nof kind of manipulating with it to look at\n\n50\n00:02:09.103 --> 00:02:10.120\nour processes.\n\n51\n00:02:10.120 --> 00:02:13.323\nBut if I'm in a command prompt\nlike this and I run ps,\n\n52\n00:02:13.323 --> 00:02:18.140\nthat's gonna show me the processes for\nmy session.\n\n53\n00:02:18.140 --> 00:02:20.630\nAnd so\nmy session currently has two processes.\n\n54\n00:02:20.630 --> 00:02:23.240\nOne is the ps command,\nwhich I was just running.\n\n55\n00:02:23.240 --> 00:02:27.360\nAnd the other one is the bash command,\nwhich I'm in right now.\n\n56\n00:02:27.360 --> 00:02:29.430\nThat's my shell, right so\nthat's what I'm seeing.\n\n57\n00:02:29.430 --> 00:02:31.780\nThat's my session all right?\n\n58\n00:02:31.780 --> 00:02:36.320\nBut the key thing to remember here is that\nthe ps command by default is just showing\n\n59\n00:02:36.320 --> 00:02:39.360\nyou the processes for your session.\n\n60\n00:02:39.360 --> 00:02:41.440\nWhat if we have more than one session,\nright?\n\n61\n00:02:41.440 --> 00:02:43.290\nWhat if I whip open another tab, and\n\n62\n00:02:43.290 --> 00:02:45.980\nI'm gonna fire up the Midnight Commander,\nright?\n\n63\n00:02:45.980 --> 00:02:48.040\nSo I'm running the Midnight Commander\nin this other tab, and\n\n64\n00:02:48.040 --> 00:02:50.580\nI come back to my first tab, and I run ps.\n\n65\n00:02:51.900 --> 00:02:53.980\nNo Midnight Commander right and\n\n66\n00:02:53.980 --> 00:02:58.550\nthat's because it's in a different\nsession, running somewhere else, right?\n\n67\n00:02:58.550 --> 00:03:02.200\nIf I had run it here in this shell and\nthen hidden it,\n\n68\n00:03:02.200 --> 00:03:05.300\nthrown it in the background or\nsomething of that nature, right?\n\n69\n00:03:05.300 --> 00:03:09.430\nIf I had run it that way,\nthen it would show here in this list.\n\n70\n00:03:09.430 --> 00:03:13.340\nSo ps by itself is not\nthat incredibly useful.\n\n71\n00:03:13.340 --> 00:03:16.772\nInstead, we're normally gonna add some\ncommand line arguments to expand that out\n\n72\n00:03:16.772 --> 00:03:17.730\nall right?\n\n73\n00:03:17.730 --> 00:03:21.552\nAnd probably one of the most\nimportant ones is -a.\n\n74\n00:03:21.552 --> 00:03:28.190\nps -a says show me all processes,\nnot just the ones tied to this session.\n\n75\n00:03:28.190 --> 00:03:34.560\nAnd when I run ps -a I can see\nMidnight Commander right there, MC.\n\n76\n00:03:34.560 --> 00:03:38.870\nAnd I can see ps right,\nthe process command that I ran.\n\n77\n00:03:38.870 --> 00:03:42.577\nSo I can see those,\nnow notice how bash disappears right.\n\n78\n00:03:42.577 --> 00:03:46.537\nAnd that's because when I start\nmodifying the way that ps behaves.\n\n79\n00:03:46.537 --> 00:03:51.089\nNow I'm getting into that area of, are you\nrunning at the BSD way or the Unix way or\n\n80\n00:03:51.089 --> 00:03:51.950\nthe Linux way.\n\n81\n00:03:51.950 --> 00:03:57.100\nI'm running at the Linux way now and\nin the Linux way they don't show processes\n\n82\n00:03:57.100 --> 00:04:01.710\nthat are basically like a startup or\ninit processes.\n\n83\n00:04:01.710 --> 00:04:04.310\nAnd then your bash shell in this case,\nwould be one of those, so\n\n84\n00:04:04.310 --> 00:04:05.700\nit's getting left off.\n\n85\n00:04:05.700 --> 00:04:09.576\nSo I actually need to modify this just\na little bit more to make it show\n\n86\n00:04:09.576 --> 00:04:11.010\nother things like that.\n\n87\n00:04:11.010 --> 00:04:14.966\nBy adding in for\nexample an x to show a little bit more and\n\n88\n00:04:14.966 --> 00:04:19.530\nwe'll start to see processes\nthat are tied to the system.\n\n89\n00:04:19.530 --> 00:04:23.910\nAnd somewhere in all of this my bash\ninstance will show up in here too,\n\n90\n00:04:23.910 --> 00:04:26.430\nit's a lot, right?\n\n91\n00:04:26.430 --> 00:04:29.650\nThe other problem here is,\nI'm now seeing that x technically says\n\n92\n00:04:29.650 --> 00:04:34.620\nshow me everything that's not bound to\na TTY, which would be a shell session.\n\n93\n00:04:34.620 --> 00:04:37.360\nSo I'm seeing a ton of system processes,\n\n94\n00:04:37.360 --> 00:04:39.370\nwhich are not necessarily\nthings that I'm running.\n\n95\n00:04:39.370 --> 00:04:41.680\nThere's things in here that\nare being run by the root user, or\n\n96\n00:04:41.680 --> 00:04:44.025\nmaybe other users on my system,\nwhich hopefully there aren't any.\n\n97\n00:04:44.025 --> 00:04:46.880\n[LAUGH] But\nthings are being run by other people.\n\n98\n00:04:46.880 --> 00:04:51.749\nSo I normally add one more thing to this,\nI typically run ps -aux, like this.\n\n99\n00:04:51.749 --> 00:04:55.820\nAnd that u says tell me\nthe username as well all right?\n\n100\n00:04:55.820 --> 00:04:57.900\nIt actually does a little more,\nin addition to the user name,\n\n101\n00:04:57.900 --> 00:05:02.470\nit'll show things like the processor\nutilization and stuff.\n\n102\n00:05:02.470 --> 00:05:06.450\nSo you get an idea of who's really\nconsuming resources on your system.\n\n103\n00:05:06.450 --> 00:05:11.320\nAnd when I run that, now I get a nice\nbig layout here and right here,\n\n104\n00:05:11.320 --> 00:05:15.355\nI just lucked out and\nsaw it I can find dpozet bash, right?\n\n105\n00:05:15.355 --> 00:05:17.390\nThere's my bash process running.\n\n106\n00:05:17.390 --> 00:05:20.800\nAnd I can start to see all these other\nthings that I happen to be running that\n\n107\n00:05:20.800 --> 00:05:23.680\naren't necessarily a part of my shell.\n\n108\n00:05:23.680 --> 00:05:27.720\nNow, the ps output, it can be really big,\nit can be hard to find,\n\n109\n00:05:27.720 --> 00:05:30.250\nI got lucky here and\nfound that bash instance.\n\n110\n00:05:30.250 --> 00:05:34.622\nBut I could have come in and\npiped the output of that\n\n111\n00:05:34.622 --> 00:05:39.010\ninto grep, grep lets you search for\na string and find it.\n\n112\n00:05:39.010 --> 00:05:41.230\nI could have searched for the word bash.\n\n113\n00:05:41.230 --> 00:05:44.450\nInstead, you'll find this\nparticular process, and\n\n114\n00:05:44.450 --> 00:05:46.360\nwhen I run that, there's more than one.\n\n115\n00:05:46.360 --> 00:05:49.940\nAnd there's more than one because\nwell one's gonna be my search,\n\n116\n00:05:49.940 --> 00:05:52.130\nthe actual grep command right there.\n\n117\n00:05:52.130 --> 00:05:55.595\nBut the other ones, I've got more than one\nterminal open in different places, and\n\n118\n00:05:55.595 --> 00:05:57.293\nso they're each kinda showing up here.\n\n119\n00:05:57.293 --> 00:06:00.160\nAnd I can see them and\nkind of find where they are.\n\n120\n00:06:00.160 --> 00:06:02.370\nNow I've located them a lot more easily.\n\n121\n00:06:02.370 --> 00:06:05.404\nI could have done the same thing\nsearching by username and said,\n\n122\n00:06:05.404 --> 00:06:07.492\nshow me everything that dpozet is running.\n\n123\n00:06:07.492 --> 00:06:12.510\nAnd now it's all the processes that are\ntied to me so I get much better output.\n\n124\n00:06:12.510 --> 00:06:18.420\nThe ps command went from being this\nto being all of that above it, right?\n\n125\n00:06:18.420 --> 00:06:22.180\nIt all comes down to those command line\narguments and having the right extensions\n\n126\n00:06:22.180 --> 00:06:26.820\nto use to get the output that you want to\nbe able to see what's running in the back.\n\n127\n00:06:26.820 --> 00:06:31.230\n&gt;&gt; Now Don, ps also allows us to kind of,\nsometimes processes\n\n128\n00:06:31.230 --> 00:06:33.880\nare a bundle of processes or-\n&gt;&gt; Yeah.\n\n129\n00:06:33.880 --> 00:06:37.400\n&gt;&gt; There's things like that, we can\neven flesh that out as well, can't we?\n\n130\n00:06:37.400 --> 00:06:40.440\n&gt;&gt; Sure so a lot of these\nprocesses are interrelated, right?\n\n131\n00:06:40.440 --> 00:06:46.660\nAnd we kind of saw that when,\nwell like here, where I've got ps running.\n\n132\n00:06:46.660 --> 00:06:49.990\nAnd ps is technically\nrunning in the bash shell.\n\n133\n00:06:49.990 --> 00:06:51.290\nIf I were to kill the bash shell,\n\n134\n00:06:51.290 --> 00:06:53.350\nwhat do you think's gonna\nhappen to the ps command?\n\n135\n00:06:53.350 --> 00:06:53.930\n&gt;&gt; Bye bye.\n\n136\n00:06:53.930 --> 00:06:55.670\n&gt;&gt; It's gonna go away,\nthey're related, right?\n\n137\n00:06:55.670 --> 00:06:59.140\nIt's like a parent child, bash is\nthe parent, ps is the child underneath it.\n\n138\n00:06:59.140 --> 00:07:03.760\nWe don't see that normally,\nwhen I run ps -aux, I just see a list,\n\n139\n00:07:03.760 --> 00:07:06.560\nhere's all the processes,\ngood luck, right?\n\n140\n00:07:06.560 --> 00:07:12.440\nBut if we add a little bit to that,\nI'm gonna add --Forest.\n\n141\n00:07:12.440 --> 00:07:16.990\nThat says,\narrange things in a tree format, right?\n\n142\n00:07:16.990 --> 00:07:19.590\nThere's actually a command called tree,\nit's useful in the file system.\n\n143\n00:07:19.590 --> 00:07:22.070\nYou can see the tree\nthat builds up a folder.\n\n144\n00:07:22.070 --> 00:07:24.540\nBut here, it can take the processes and\narrange them as trees.\n\n145\n00:07:24.540 --> 00:07:27.080\nAnd then when it puts them all together,\nyou've got forest,\n\n146\n00:07:27.080 --> 00:07:28.520\nthat's where the term comes from.\n\n147\n00:07:28.520 --> 00:07:33.790\nSo by saying -- Forest, now I start to\nsee how these processes are related.\n\n148\n00:07:33.790 --> 00:07:38.310\nAnd so I can see, for example,\nI've got the gnome Terminal server, and\n\n149\n00:07:38.310 --> 00:07:45.220\ninside of that I've got bash, and\ninside of that I've got ps -aux --forest.\n\n150\n00:07:45.220 --> 00:07:47.760\nThey're related,\nthey're tied to each other.\n\n151\n00:07:47.760 --> 00:07:49.475\nI start to see that hierarchy.\n\n152\n00:07:49.475 --> 00:07:52.821\nAnd the little lines here help\nme to see that relationship and\n\n153\n00:07:52.821 --> 00:07:54.141\nhow that branches out.\n\n154\n00:07:54.141 --> 00:08:00.077\nThis is the exact command And interface\nthat I just used as part of my example.\n\n155\n00:08:00.077 --> 00:08:03.368\nBut you can see there's a lot of other\nstuff on the system that is related like\n\n156\n00:08:03.368 --> 00:08:06.100\nthat, things that are just\nrunning in the background.\n\n157\n00:08:06.100 --> 00:08:07.360\nSome of them go pretty deep.\n\n158\n00:08:07.360 --> 00:08:12.800\nRight here, like here the GDM which\nwhen I press Power on my laptop and it\n\n159\n00:08:12.800 --> 00:08:16.840\nboots up and I get to a login screen, that\nlogin screen is being rendered by GDM.\n\n160\n00:08:16.840 --> 00:08:20.600\nAnd then GDM is launching my window\nmanager, which is GNOME, and so\n\n161\n00:08:20.600 --> 00:08:23.990\nthat's where I see my GNOME session, and\nthe GNOME shell, and all the other things.\n\n162\n00:08:23.990 --> 00:08:25.220\nThat's all part of my GUI.\n\n163\n00:08:26.280 --> 00:08:29.730\nI can see it all right here nested out and\nsee that relationship.\n\n164\n00:08:29.730 --> 00:08:34.020\nIf I were to kill the GDM,\neverything underneath it would fall.\n\n165\n00:08:34.020 --> 00:08:34.975\nMy system would become unusable.\n\n166\n00:08:34.975 --> 00:08:38.940\nI'd have to reboot, or\ndrop to a text based shell, a TTY.\n\n167\n00:08:38.940 --> 00:08:41.827\nSo that kinda helps us to see that,\nbut it's kind of a neat little option.\n\n168\n00:08:41.827 --> 00:08:47.380\nThat --4 is really giving you an idea\nof what is tied to everything else.\n\n169\n00:08:47.380 --> 00:08:50.990\nNow Don, when you did the process,\nyou did the PS command, and\n\n170\n00:08:50.990 --> 00:08:54.810\nthen you piped it into Grep because you\nwere looking for a specific string.\n\n171\n00:08:54.810 --> 00:08:59.670\nThis is a very common practice because\nof the immense output that can come from\n\n172\n00:08:59.670 --> 00:09:04.830\ndoing the ps-aux portion\nof the proceedings.\n\n173\n00:09:04.830 --> 00:09:08.590\nIsn't there, correct me if I'm wrong,\nthey've actually created a tool.\n\n174\n00:09:08.590 --> 00:09:09.240\nSaid you know what?\n\n175\n00:09:09.240 --> 00:09:12.330\nSince this has done so much, let's just\nmake a tool that does that, right.\n\n176\n00:09:12.330 --> 00:09:13.350\n&gt;&gt; There actually is.\n\n177\n00:09:13.350 --> 00:09:14.600\nIt's not on every system.\n\n178\n00:09:14.600 --> 00:09:16.870\nBut on a lot of them,\nthey recognize that we do this so much,\n\n179\n00:09:16.870 --> 00:09:19.060\nthey created a utility called PSGREP,\nright?\n\n180\n00:09:19.060 --> 00:09:21.700\nRight, and, sorry, PGREP.\n\n181\n00:09:21.700 --> 00:09:25.620\nAnd what PGREP does is it's GREP for\nprocesses, right?\n\n182\n00:09:25.620 --> 00:09:29.900\nSo PS is like the process show command,\nand then PGREP would then search it.\n\n183\n00:09:29.900 --> 00:09:33.815\nSo the example that Daniel is mentioning,\n\n184\n00:09:33.815 --> 00:09:38.391\nI did ps-aux and\nthen I grepped for bash, right?\n\n185\n00:09:38.391 --> 00:09:39.688\nWhich, boy,\nI'm having a hard time typing that.\n\n186\n00:09:39.688 --> 00:09:42.080\n&gt;&gt; [LAUGH]\n&gt;&gt; So I searched for bash.\n\n187\n00:09:42.080 --> 00:09:44.730\nAnd when I ran it, I found it,\nand there we go, right?\n\n188\n00:09:44.730 --> 00:09:47.800\nIf your system has it, well,\nwe can check for that, right?\n\n189\n00:09:47.800 --> 00:09:49.460\nI’ll do a which pgrep just to see.\n\n190\n00:09:49.460 --> 00:09:50.340\nI do have it.\n\n191\n00:09:50.340 --> 00:09:52.480\n/user, /bin, /pgrep.\n\n192\n00:09:52.480 --> 00:09:58.990\nI could have just run pgrep bash and\nit'll search for that process.\n\n193\n00:09:58.990 --> 00:10:03.830\nNow when it searches,\nit found four processes called bash and\n\n194\n00:10:03.830 --> 00:10:06.468\nit gives me the process ID.\n\n195\n00:10:06.468 --> 00:10:11.420\nSee, this one here is ID 1187 and\nup here I can see 1187.\n\n196\n00:10:11.420 --> 00:10:14.030\nAnd down here I've got 1317,\nup here I've got 1317.\n\n197\n00:10:14.030 --> 00:10:16.055\nSo it found the same processes.\n\n198\n00:10:16.055 --> 00:10:20.316\nOne of them, this guy right here,\n2135, isn't present any more.\n\n199\n00:10:20.316 --> 00:10:21.830\nAnd that means it's not running any more.\n\n200\n00:10:21.830 --> 00:10:25.630\nIn fact, if you look, it actually\nwasn't bash in the first place,\n\n201\n00:10:25.630 --> 00:10:29.530\nit was grep that was looking for\nthe word bash.\n\n202\n00:10:29.530 --> 00:10:30.740\nSo that one's gone.\n\n203\n00:10:30.740 --> 00:10:35.340\nOr 866, this one was actually run by root,\nand that's why I'm not seeing it here.\n\n204\n00:10:35.340 --> 00:10:39.340\npgrep is looking for me, my processes,\nwhat processes do I have?\n\n205\n00:10:39.340 --> 00:10:41.940\nAnd this is really handy\nbecause I might have\n\n206\n00:10:41.940 --> 00:10:44.890\nlaunched a midnight commander\nsomewhere and I've lost it.\n\n207\n00:10:44.890 --> 00:10:45.780\nI don't know where it is.\n\n208\n00:10:45.780 --> 00:10:47.350\nIt's gone.\nI wanna get rid of it.\n\n209\n00:10:47.350 --> 00:10:51.760\nI could come in and I could do a pgrep for\nmidnight commander, and\n\n210\n00:10:51.760 --> 00:10:53.810\nnow it's gonna show me,\nthere's two process IDs.\n\n211\n00:10:53.810 --> 00:10:55.530\nI actually have two copies of it running.\n\n212\n00:10:55.530 --> 00:10:57.520\nWell, midnight commander,\nit's actually the two windows,\n\n213\n00:10:57.520 --> 00:11:00.220\nbut anyhow, I can see that it's\nrunning and I can go in and\n\n214\n00:11:00.220 --> 00:11:02.950\nI can clear those out, and\nget rid of them if need be.\n\n215\n00:11:02.950 --> 00:11:05.000\nBut that's what the pegrep does.\n\n216\n00:11:05.000 --> 00:11:07.310\nDon't be shocked if you don't\nhave it on your system.\n\n217\n00:11:07.310 --> 00:11:09.370\nNot every system does,\nbut most of them do.\n\n218\n00:11:09.370 --> 00:11:10.730\nIt's kind of a handy way to do it.\n\n219\n00:11:10.730 --> 00:11:12.922\nAnd if you pull up the documentation for\npgrep,\n\n220\n00:11:12.922 --> 00:11:17.250\nyou'll see that it's got a lot of\noptions you can specify as well\n\n221\n00:11:17.250 --> 00:11:19.875\nto be able to get a little more\ninformation out of it, right?\n\n222\n00:11:19.875 --> 00:11:22.890\nCuz normally we're just\ngetting the process ID,\n\n223\n00:11:22.890 --> 00:11:27.830\nbut you can tell it to show a little\nbit more and show extra information.\n\n224\n00:11:27.830 --> 00:11:32.270\nSee, like here we've got the list-full,\nwhich will actually show\n\n225\n00:11:32.270 --> 00:11:36.360\nthe whole command that was run and\nnot just the executable or whatever.\n\n226\n00:11:36.360 --> 00:11:39.950\nEach of these add more\ninformation to that command line\n\n227\n00:11:39.950 --> 00:11:42.300\nto be able to see more about\nit than just the process ID.\n\n228\n00:11:42.300 --> 00:11:44.410\nSo it is available, and\nyou can certainly use it.\n\n229\n00:11:44.410 --> 00:11:47.340\n&gt;&gt; Now Don, an interesting thing\nis talking about processes,\n\n230\n00:11:47.340 --> 00:11:50.420\nanybody coming from the Windows world is\nprobably familiar with the task manager.\n\n231\n00:11:50.420 --> 00:11:53.730\nYou open that thing up and it shows you\nall the currently running processes,\n\n232\n00:11:53.730 --> 00:11:57.310\nhow much CPU usage they are taking up,\nmemory issues, that type of thing.\n\n233\n00:11:57.310 --> 00:12:00.460\nDo we have anything that's similar\nto that inside of our Linux systems?\n\n234\n00:12:00.460 --> 00:12:01.642\n&gt;&gt; Yeah, absolutely, and\n\n235\n00:12:01.642 --> 00:12:04.916\nwhat you're describing in the Windows\nworld is graphical, right?\n\n236\n00:12:04.916 --> 00:12:08.820\nOn your Linux distro you probably should\nhave what's called a system monitor.\n\n237\n00:12:08.820 --> 00:12:12.856\nAnd if you fire that up, you get a list\nof processes and even pretty pictures.\n\n238\n00:12:12.856 --> 00:12:16.110\nHere's my CPU usage and all that.\n\n239\n00:12:16.110 --> 00:12:19.900\nThat's cool and all, but we've got\nto remember the name of the show.\n\n240\n00:12:19.900 --> 00:12:21.790\nThis is the Linux command line show.\n\n241\n00:12:21.790 --> 00:12:22.830\nIf I don't have that stuff,\n\n242\n00:12:22.830 --> 00:12:25.210\nI've got to do something right\nhere from the command line.\n\n243\n00:12:25.210 --> 00:12:28.600\n&gt;&gt; And if I wanna monitor\nperformance on my system,\n\n244\n00:12:28.600 --> 00:12:32.900\none of the best commands that\nwe can use is the top command.\n\n245\n00:12:32.900 --> 00:12:36.466\nTop is a neat utility that's built\nin to almost every distro, so\n\n246\n00:12:36.466 --> 00:12:37.861\nthe odds are you have it.\n\n247\n00:12:37.861 --> 00:12:42.788\nAnd if you run top, you get a, I don't\nwanna call it a graphical representation.\n\n248\n00:12:42.788 --> 00:12:45.710\n&gt;&gt; [LAUGH]\n&gt;&gt; But at least a really neat\n\n249\n00:12:45.710 --> 00:12:49.140\nactive layout of the processes\nthat are running on your system.\n\n250\n00:12:49.140 --> 00:12:50.790\n&gt;&gt; And well formatted.\n\n251\n00:12:50.790 --> 00:12:52.440\n&gt;&gt; Yeah, it is well formatted.\n\n252\n00:12:52.440 --> 00:12:54.160\nIt's pretty.\n&gt;&gt; Yeah.\n\n253\n00:12:54.160 --> 00:12:59.190\n&gt;&gt; And so I get this list of all sorts\nof information and it's live, right?\n\n254\n00:12:59.190 --> 00:13:00.560\nThis wasn't just a one time display.\n\n255\n00:13:00.560 --> 00:13:03.535\nSee how my screen is updating\nas things are being run.\n\n256\n00:13:03.535 --> 00:13:08.572\n&gt;&gt; And it's showing those processes\nsorted by CPU utilization, right?\n\n257\n00:13:08.572 --> 00:13:13.190\nSo right now I can see that\nx is consuming 2% of my CPU.\n\n258\n00:13:13.190 --> 00:13:16.176\nX is the Xor Windows\nsystem that I'm running.\n\n259\n00:13:16.176 --> 00:13:17.560\nThat's my GUI.\n\n260\n00:13:17.560 --> 00:13:19.620\nThat's why people don't\nusually run a GUI on servers.\n\n261\n00:13:19.620 --> 00:13:23.130\nYou don't want to waste 2% of your CPU.\n\n262\n00:13:23.130 --> 00:13:24.110\nI've got my file sync.\n\n263\n00:13:24.110 --> 00:13:26.028\nIt's consuming 0.7%.\n\n264\n00:13:26.028 --> 00:13:28.330\nMy GNOME terminal's at 1.7.\n\n265\n00:13:28.330 --> 00:13:31.832\nMy GNOME terminal is running top, and\nif I look down a little bit further,\n\n266\n00:13:31.832 --> 00:13:33.934\ntop just appeared for\na brief moment there.\n\n267\n00:13:33.934 --> 00:13:36.300\nThey're at 0.3% of my CPU.\n\n268\n00:13:36.300 --> 00:13:40.680\nIt takes CPU power to generate the data\nfrom monitoring the CPU utilization.\n\n269\n00:13:40.680 --> 00:13:42.786\nSo top is really handy.\n\n270\n00:13:42.786 --> 00:13:46.228\nThis list here is pretty cool\nbecause you see the processes, but\n\n271\n00:13:46.228 --> 00:13:49.780\nwhat's above it is even more cool,\nat least in my opinion.\n\n272\n00:13:49.780 --> 00:13:51.380\nCuz you see all sorts of cool stuff here,\n\n273\n00:13:51.380 --> 00:13:55.930\nlike your up time, my laptop has been\nup for two days and two and half hours.\n\n274\n00:13:55.930 --> 00:13:59.110\nYou can see your average load, so\n\n275\n00:13:59.110 --> 00:14:03.650\nhow much CPU you've been eating\nup over a certain period of time.\n\n276\n00:14:03.650 --> 00:14:05.640\nYou can see how many tasks you're running,\n\n277\n00:14:05.640 --> 00:14:09.410\nhow much memory you've got available,\nhow much memory you're actually consuming.\n\n278\n00:14:09.410 --> 00:14:12.800\nIt's all laid out right here in\na pretty easy to read system.\n\n279\n00:14:12.800 --> 00:14:17.168\nSo this is a nice way to be able to see\nthat and understand what's going on.\n\n280\n00:14:17.168 --> 00:14:18.977\nNow when we pull this up,\n\n281\n00:14:18.977 --> 00:14:25.500\nthere's actually some keys that we can\nhit to change what we're looking at.\n\n282\n00:14:25.500 --> 00:14:30.562\nSo some of those, for example,\nis sorted by process, by CPU by default.\n\n283\n00:14:30.562 --> 00:14:32.350\nMaybe I'm running low on memory, so\n\n284\n00:14:32.350 --> 00:14:34.480\nI wanna see what is eating up\nall the memory on my system.\n\n285\n00:14:34.480 --> 00:14:39.680\nIf you do a capital M, it will change\nthe sort order to sort by memory, right?\n\n286\n00:14:39.680 --> 00:14:40.830\nSo capital M for memory.\n\n287\n00:14:40.830 --> 00:14:44.960\nNow I can see that my file synchronization\nutility is eating the most memory on my\n\n288\n00:14:44.960 --> 00:14:47.160\nsystem, 0.3% CPU.\n\n289\n00:14:47.160 --> 00:14:52.550\nBut if I was sorted by CPU, which is\na capital P, now it's back to sorting by\n\n290\n00:14:52.550 --> 00:14:58.190\nCPU and I can see that GNOME shell is at\nthe top, or whatever, constantly changing.\n\n291\n00:14:58.190 --> 00:15:01.230\nSo capital M and capital P\nare a quick way to move between them.\n\n292\n00:15:02.340 --> 00:15:07.008\nBut another thing we can do is if I've\ngot a process that's gone rogue, that is\n\n293\n00:15:07.008 --> 00:15:12.334\nconsuming 100% of my CPU, that is really\ntying down my performance, you can type K.\n\n294\n00:15:12.334 --> 00:15:17.372\nK says that we're going to send\na kill signal to that process and\n\n295\n00:15:17.372 --> 00:15:20.760\nit defaults to whoever is at the top.\n\n296\n00:15:20.760 --> 00:15:23.360\nWell, it's funny for\nme cuz the top one right now is top.\n\n297\n00:15:23.360 --> 00:15:26.419\nI just happened to catch it, so\nit's offering to kill itself.\n\n298\n00:15:26.419 --> 00:15:28.140\n&gt;&gt; [LAUGH]\n&gt;&gt; There's probably a moral,\n\n299\n00:15:28.140 --> 00:15:29.190\nethical thing here.\n\n300\n00:15:29.190 --> 00:15:33.510\nBut if it's not the very top one that you\nwanna kill, you can find the process ID.\n\n301\n00:15:33.510 --> 00:15:35.810\nThe process ID is over\nhere on the left side.\n\n302\n00:15:35.810 --> 00:15:38.820\nAnd you can take that number and\nyou can just type it in.\n\n303\n00:15:38.820 --> 00:15:42.650\nSo if I wanted to kill process ID 1817,\nwhich was one of my bash shells,\n\n304\n00:15:42.650 --> 00:15:45.700\nI could type that and press Enter,\nand it would kill it.\n\n305\n00:15:45.700 --> 00:15:49.097\nAnd that would stop that rogue\napplication from eating up my CPU.\n\n306\n00:15:49.097 --> 00:15:50.294\nIt doesn't solve the problem.\n\n307\n00:15:50.294 --> 00:15:51.507\nIt solves the symptom, right?\n\n308\n00:15:51.507 --> 00:15:52.509\nThere's obviously a problem.\n\n309\n00:15:52.509 --> 00:15:55.068\nWhy was that application\nconsuming 100% of my CPU?\n\n310\n00:15:55.068 --> 00:15:56.442\nI need to go and figure that out.\n\n311\n00:15:56.442 --> 00:16:00.177\nBut at least this gets us out of the woods\nfor the main issue, for right now, and\n\n312\n00:16:00.177 --> 00:16:02.620\nthen we kinda figure it out from there.\n\n313\n00:16:02.620 --> 00:16:04.897\nNow, I aborted just by hitting Esc, so\n\n314\n00:16:04.897 --> 00:16:07.726\nyou know I didn't actually\nwanna stay in there.\n\n315\n00:16:07.726 --> 00:16:09.698\nWe can get out of this with Ctrl+C.\n\n316\n00:16:09.698 --> 00:16:12.968\nCtrl+C you'll break out of it,\nand now I'm back out,\n\n317\n00:16:12.968 --> 00:16:15.730\nand ready to go about my\nbusiness on my system.\n\n318\n00:16:15.730 --> 00:16:19.284\nBut capital P and capital M, those are the\ntwo to remember, to switch between CPU and\n\n319\n00:16:19.284 --> 00:16:20.494\nmemory for your sort order.\n\n320\n00:16:20.494 --> 00:16:24.826\n&gt;&gt; Now, Tom, I typically,\nwhen I run top, because it's updating so\n\n321\n00:16:24.826 --> 00:16:25.880\nquickly-\n&gt;&gt; [LAUGH]\n\n322\n00:16:25.880 --> 00:16:27.050\n&gt;&gt; I'll say, look there's the thing but\n\n323\n00:16:27.050 --> 00:16:30.180\nI couldn't, where's the PID,\nthere it is again, well, and it,\n\n324\n00:16:30.180 --> 00:16:31.310\nit goes a little too fast.\n\n325\n00:16:31.310 --> 00:16:33.410\nSometimes I wanna get it more static.\n\n326\n00:16:33.410 --> 00:16:34.515\nI want it to update, but\n\n327\n00:16:34.515 --> 00:16:38.000\nI need a little more time to\ndigest what it is, it's giving me.\n\n328\n00:16:38.000 --> 00:16:40.425\nIs there any way I can\nslow that update down?\n\n329\n00:16:40.425 --> 00:16:43.395\n&gt;&gt; You can pause the screen,\nyou can freeze it, but\n\n330\n00:16:43.395 --> 00:16:47.620\nthere's also command line options\nthat you can use to do delays.\n\n331\n00:16:47.620 --> 00:16:52.660\nAnd I'll do that a lot, where I'll do top\nand then I will do like -d, which sets how\n\n332\n00:16:52.660 --> 00:16:57.649\noften the screen updates, and so I might\nset it to 10, just every 10 seconds.\n\n333\n00:16:57.649 --> 00:16:59.790\nThe default was pretty quick,\nyou guys saw it.\n\n334\n00:16:59.790 --> 00:17:00.903\n&gt;&gt; One second, I think.\n\n335\n00:17:00.903 --> 00:17:05.044\n&gt;&gt; Something short, yeah, so I can do a\ntop -d 10, and that creates that delay and\n\n336\n00:17:05.044 --> 00:17:09.200\nsays don't refresh but every 10 seconds,\nit buys me a little more time.\n\n337\n00:17:09.200 --> 00:17:12.092\nYou can do 20 seconds,\n30 seconds, or even longer.\n\n338\n00:17:12.092 --> 00:17:16.075\nAnd now, you get the same output, but\nit's just updating less frequently, so\n\n339\n00:17:16.075 --> 00:17:18.756\nthat we don't get kinda\noverwhelmed with that data.\n\n340\n00:17:18.756 --> 00:17:19.969\nIt's a good way to do it.\n\n341\n00:17:21.050 --> 00:17:24.210\nAlso if you know exactly\nwhat you're looking for,\n\n342\n00:17:24.210 --> 00:17:25.940\nyou could get really specific.\n\n343\n00:17:25.940 --> 00:17:30.408\nSo for example, if I did a pgrep for\nMidnight Commander, and so\n\n344\n00:17:30.408 --> 00:17:36.580\nI wanted to monitor process 1291, I could\ncome in and I could say top -p 1291.\n\n345\n00:17:36.580 --> 00:17:39.871\nAnd now it's gonna run, and\nI only see that process, so\n\n346\n00:17:39.871 --> 00:17:43.515\nnow I'm not getting overwhelmed\nwith a thousand processes,\n\n347\n00:17:43.515 --> 00:17:48.370\nI'm just seeing the one that I actually\nwanted to monitor, and I'm watching it.\n\n348\n00:17:48.370 --> 00:17:50.503\nThis is actually the wrong one, isn't it?\n\n349\n00:17:50.503 --> 00:17:52.560\n&gt;&gt; [LAUGH]\n&gt;&gt; This is one of my Red Hat,\n\n350\n00:17:52.560 --> 00:17:55.900\nthat must be like the DRM that redhat has.\n\n351\n00:17:55.900 --> 00:17:58.235\nI'll just do the other one, 1313.\n\n352\n00:17:58.235 --> 00:18:00.508\nLucky number 1313, there we go.\n\n353\n00:18:00.508 --> 00:18:02.442\n&gt;&gt; Yes.\n&gt;&gt; That's the actual Midnight Commander,\n\n354\n00:18:02.442 --> 00:18:05.027\nand so I can see how much CPU and\nhow much memory it's consuming.\n\n355\n00:18:05.027 --> 00:18:06.458\nSo it is important to double check.\n\n356\n00:18:06.458 --> 00:18:06.966\n[LAUGH]\n&gt;&gt; Yeah.\n\n357\n00:18:06.966 --> 00:18:08.575\n[LAUGH] &gt;&gt; Make sure\nyou have the right one.\n\n358\n00:18:08.575 --> 00:18:09.185\nIn my case,\n\n359\n00:18:09.185 --> 00:18:10.771\npgrep actually gave me an ID for\n\n360\n00:18:10.771 --> 00:18:13.363\nsomething unrelated.\nIt must've just had mc in\n\n361\n00:18:13.363 --> 00:18:14.399\nthe command name,\n\n362\n00:18:14.399 --> 00:18:16.856\nbut wasn't the actual Midnight Command.\nSee,\n\n363\n00:18:16.856 --> 00:18:19.642\nyou gotta be careful with that\n&gt;&gt; Now, one of the ways I've used this in\n\n364\n00:18:19.642 --> 00:18:23.500\nmy experience,\nhas been I need to find the process ID.\n\n365\n00:18:23.500 --> 00:18:27.267\nBecause a lot of times, web browsers,\nthey're notorious for this, you've\n\n366\n00:18:27.267 --> 00:18:31.317\nlaunched your web browser, you've maybe\ngotten a little too much action going on,\n\n367\n00:18:31.317 --> 00:18:32.758\nand your web browser is hung.\n\n368\n00:18:32.758 --> 00:18:38.441\nIt's kind of not responding, you're\nhitting the x and it's not responding.\n\n369\n00:18:38.441 --> 00:18:41.680\nI can drop to a terminal and\nmake these things disappear.\n\n370\n00:18:41.680 --> 00:18:43.117\nWe saw a little bit of that using top.\n\n371\n00:18:43.117 --> 00:18:43.811\n&gt;&gt; [LAUGH]\n&gt;&gt; But\n\n372\n00:18:43.811 --> 00:18:46.420\nthere's other ways to\nkill process as well.\n\n373\n00:18:46.420 --> 00:18:50.279\n&gt;&gt; Yeah, so in the top command, it give me\nthe option to hit k to kill the process,\n\n374\n00:18:50.279 --> 00:18:51.932\nand then you type the process ID.\n\n375\n00:18:51.932 --> 00:18:54.007\nAnd what it's doing is in the background,\n\n376\n00:18:54.007 --> 00:18:56.729\nit's actually running\na command called kill, right?\n\n377\n00:18:56.729 --> 00:18:57.661\nKind of aggressive.\n\n378\n00:18:57.661 --> 00:18:58.181\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n379\n00:18:58.181 --> 00:19:01.377\nif we take a look at the documentation for\nkill, I'll just do a man kill.\n\n380\n00:19:01.377 --> 00:19:02.671\nThis is-\n&gt;&gt; [LAUGH]\n\n381\n00:19:02.671 --> 00:19:04.745\n&gt;&gt; At least it's not the other way round.\n\n382\n00:19:04.745 --> 00:19:06.552\n[LAUGH]\n&gt;&gt; So what you'll see here is the kill\n\n383\n00:19:06.552 --> 00:19:08.024\ncommand is pretty simple, right?\n\n384\n00:19:08.024 --> 00:19:11.389\nYou say kill, and then you specify\na process ID, and kills it.\n\n385\n00:19:11.389 --> 00:19:14.597\nAnd there's a lot of other options here\nwhere we can change the way the kill\n\n386\n00:19:14.597 --> 00:19:18.040\nworks, so you can even change the way\nthat it is actually killing the process.\n\n387\n00:19:18.040 --> 00:19:20.398\nSo you can tell it to simulate an error.\n\n388\n00:19:20.398 --> 00:19:23.781\nYou can tell it to tell it to just restart\nthe process, or you could tell it to act\n\n389\n00:19:23.781 --> 00:19:27.350\nlike it crashed, you'll make the program\nthink it crashed, and then it resets.\n\n390\n00:19:27.350 --> 00:19:29.170\nThere's all sorts of different\nthings that you can send.\n\n391\n00:19:29.170 --> 00:19:31.452\nFor developers,\nthey'll use this frequently,\n\n392\n00:19:31.452 --> 00:19:34.943\nto test out various scenarios to make\nsure their applications can recover.\n\n393\n00:19:34.943 --> 00:19:38.563\nBut for us, if I've got an application\nlike Midnight Commander that's just\n\n394\n00:19:38.563 --> 00:19:40.968\nrunning and\nmaybe it's just going crazy, right?\n\n395\n00:19:40.968 --> 00:19:47.681\nSo I do a ps -aux, I grep for\nMidnight Commander, and there it is.\n\n396\n00:19:47.681 --> 00:19:49.414\nAnd, yeah, see that RHS?\n\n397\n00:19:49.414 --> 00:19:52.740\nThat line, it just has MC in the name,\nso that's why it came up earlier.\n\n398\n00:19:52.740 --> 00:19:55.392\nBut here's that Midnight Commander\nprocess 1313, and\n\n399\n00:19:55.392 --> 00:19:57.427\nI decided I don't want\nthat running anymore.\n\n400\n00:19:57.427 --> 00:20:00.260\nI can do a kill 1313, like that.\n\n401\n00:20:01.360 --> 00:20:02.750\nAnd it's gonna send a signal to it,\n\n402\n00:20:02.750 --> 00:20:05.020\ntelling it that the process has ended,\nright?\n\n403\n00:20:05.020 --> 00:20:07.670\nIt's gonna terminate it,\nwith what's called a sig term.\n\n404\n00:20:07.670 --> 00:20:11.570\nI could do a one of\nthe other different modes.\n\n405\n00:20:13.870 --> 00:20:16.110\nWell, they all have a number\ncoded to them, right?\n\n406\n00:20:16.110 --> 00:20:21.000\nSo if you do a kill -l,\nyou get a list of the numbers, right?\n\n407\n00:20:21.000 --> 00:20:22.845\nSo I don't have these memorized, and\n\n408\n00:20:22.845 --> 00:20:25.507\nI don't feel bad about that\ncuz there's a ton of them.\n\n409\n00:20:25.507 --> 00:20:27.296\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] You see all the different\n\n410\n00:20:27.296 --> 00:20:29.797\nnumbers here, but\nsome of these are telling it,\n\n411\n00:20:29.797 --> 00:20:32.002\nlike it's an aborted operation, right?\n\n412\n00:20:32.002 --> 00:20:34.128\nSo cancel the operation\nyou're performing right now.\n\n413\n00:20:34.128 --> 00:20:38.010\nMost applications will recover from that,\nand just retry their operation.\n\n414\n00:20:38.010 --> 00:20:41.984\nSIGTERM, which is buried in here\nsomewhere, is telling it to terminate,\n\n415\n00:20:41.984 --> 00:20:45.717\nto actually end and stop running,\nand that's normally what we want.\n\n416\n00:20:45.717 --> 00:20:48.960\nYou've also got SIGKILL, where it\nknows that we're manually killing it,\n\n417\n00:20:48.960 --> 00:20:50.591\nversus thinking of some kinda error.\n\n418\n00:20:50.591 --> 00:20:52.429\n&gt;&gt; There's SIGTERM, number 15.\n\n419\n00:20:52.429 --> 00:20:56.592\n&gt;&gt; 15, yep, so 1, 9, and 15,\nare probably the most common.\n\n420\n00:20:56.592 --> 00:20:59.330\nAnd 9, that sigkill, is the default.\n\n421\n00:20:59.330 --> 00:21:00.527\nThat's what we're sending it.\n\n422\n00:21:00.527 --> 00:21:05.280\nBut we could say, kill -9, and\nnow we know we're sending it a SIGKILL, or\n\n423\n00:21:05.280 --> 00:21:09.290\nkill -15, and\nnow we know we're sending it a SIGTERM.\n\n424\n00:21:09.290 --> 00:21:11.614\nBut for most of us,\nif we just wanna kill it, right?\n\n425\n00:21:11.614 --> 00:21:16.160\nWe just wanna get it out of there,\nI see that process ID 1313 running, right?\n\n426\n00:21:16.160 --> 00:21:20.170\nActually, let me change this up,\njust searching for that one process.\n\n427\n00:21:20.170 --> 00:21:21.260\nSo there it is.\n\n428\n00:21:21.260 --> 00:21:26.060\nAnd then, if I do a kill 1313,\nthat's gonna terminate it.\n\n429\n00:21:26.060 --> 00:21:29.780\nAnd now, when I pull up that listing,\nall I get is my grep command,\n\n430\n00:21:29.780 --> 00:21:31.960\nthe actual process is gone.\n\n431\n00:21:31.960 --> 00:21:36.210\nAnd if I switch over to my tab, Midnight\nCommander, it's still running, sort of.\n\n432\n00:21:36.210 --> 00:21:39.792\nLook at that little note down\nthere at the bottom, Terminated.\n\n433\n00:21:39.792 --> 00:21:40.515\n&gt;&gt; Terminated.\n\n434\n00:21:40.515 --> 00:21:45.120\nOkay and it's actually returned me to my\nprompt, but the screen hasn't refreshed.\n\n435\n00:21:45.120 --> 00:21:45.852\nSo there we go.\n\n436\n00:21:45.852 --> 00:21:48.195\nAnd it can't refresh\nbecause it's terminated,\n\n437\n00:21:48.195 --> 00:21:50.280\nthe process itself is already dead.\n\n438\n00:21:50.280 --> 00:21:52.370\nSo it's not able to reload.\n\n439\n00:21:52.370 --> 00:21:55.628\nSo that's it though, well,\nnow we're back in business, and\n\n440\n00:21:55.628 --> 00:21:58.157\nthat process is no longer\ntaking over my system.\n\n441\n00:21:58.157 --> 00:22:00.707\nSo that's the kill command,\nit's a pretty handy on,\n\n442\n00:22:00.707 --> 00:22:02.711\nespecially when you know that process ID.\n\n443\n00:22:02.711 --> 00:22:05.025\n&gt;&gt; Now, Don,\nwhat if I do not know the process ID.\n\n444\n00:22:05.025 --> 00:22:08.471\nFor whatever reason, I couldn't grab that,\nis there anything I can do?\n\n445\n00:22:08.471 --> 00:22:10.415\n&gt;&gt; Yeah, you can.\n\n446\n00:22:10.415 --> 00:22:13.335\nIf you don’t know the process ID,\nif you just know the application name,\n\n447\n00:22:13.335 --> 00:22:15.455\nor let me give you a different scenario,\nright?\n\n448\n00:22:15.455 --> 00:22:16.452\nYou mentioned web browsers.\n\n449\n00:22:16.452 --> 00:22:17.121\n&gt;&gt; I did.\n\n450\n00:22:17.121 --> 00:22:20.103\n&gt;&gt; Web browsers, say, boy,\nwhat a pain in the butt.\n\n451\n00:22:20.103 --> 00:22:21.691\n&gt;&gt; [LAUGH]\n&gt;&gt; Web browsers crash a lot.\n\n452\n00:22:21.691 --> 00:22:25.930\nAnd sometimes we don’t realize how often\nthey crash, but web browsers crash a lot,\n\n453\n00:22:25.930 --> 00:22:28.600\nand they go crazy a lot,\nconsume memory a lot.\n\n454\n00:22:28.600 --> 00:22:31.482\nAnd so most vendors like Firefox and\n\n455\n00:22:31.482 --> 00:22:36.396\nGoogle Chrome, they make each\ntab run in it's own process.\n\n456\n00:22:36.396 --> 00:22:37.610\nSo that's awesome.\n\n457\n00:22:37.610 --> 00:22:40.288\nIf Chrome starts going nuts on my system,\n\n458\n00:22:40.288 --> 00:22:44.890\nI might have fifteen processes to kill,\nand that's really annoying.\n\n459\n00:22:44.890 --> 00:22:49.100\nSo instead of killing by a process number,\nwe can kill by a name.\n\n460\n00:22:49.100 --> 00:22:51.895\nAnd we can say, I'm gonna look for any\noccurrence of this name, and kill them.\n\n461\n00:22:51.895 --> 00:22:53.809\nYou gotta be really\ncareful with it though,\n\n462\n00:22:53.809 --> 00:22:55.515\ncuz in my Midnight Commander example,\n\n463\n00:22:55.515 --> 00:22:58.998\nthere is more than one process that had MC\nin it, so we gotta be a little careful.\n\n464\n00:22:58.998 --> 00:23:01.120\nBut if I were to fire up\nsomething like Chromium.\n\n465\n00:23:02.260 --> 00:23:07.139\nAnd so here we go, and maybe I'll\ngo to CNN.com, I'll go to ITPro.TV,\n\n466\n00:23:07.139 --> 00:23:08.571\nI'll go to Fox News.\n\n467\n00:23:08.571 --> 00:23:12.022\nWe'll be fair and balanced, right?\n\n468\n00:23:12.022 --> 00:23:14.000\nWe gotta get all of it.\n\n469\n00:23:14.000 --> 00:23:16.470\nSo I'm pulling up all these\ndifferent web pages, right?\n\n470\n00:23:16.470 --> 00:23:19.828\nEach one is technically\na different process.\n\n471\n00:23:19.828 --> 00:23:23.913\nAnd so when I come back here,\nand I do a ps -aux, and\n\n472\n00:23:23.913 --> 00:23:28.780\nI start looking around,\nI can find Chromium in here.\n\n473\n00:23:28.780 --> 00:23:30.140\nAnd look at that, right?\n\n474\n00:23:30.140 --> 00:23:32.290\nIt's a bunch of different processes.\n\n475\n00:23:33.440 --> 00:23:35.464\nSo if I wanna kill them all, right?\n\n476\n00:23:35.464 --> 00:23:37.878\n[LAUGH] Really aggressive this afternoon.\n\n477\n00:23:37.878 --> 00:23:39.407\n&gt;&gt; [LAUGH]\n&gt;&gt; I wanna kill them all,\n\n478\n00:23:39.407 --> 00:23:40.305\nso- [LAUGH]\n&gt;&gt; It's a Metallica album.\n\n479\n00:23:40.305 --> 00:23:43.045\n[LAUGH]\n&gt;&gt; Yeah, [LAUGH] so I can come in here and\n\n480\n00:23:43.045 --> 00:23:47.860\nI can use the killall command,\nfollowed by a name instead.\n\n481\n00:23:47.860 --> 00:23:49.823\nAnd so I can look for that name.\n\n482\n00:23:49.823 --> 00:23:53.259\nI'm gonna go killall chromium,\nlike that, and it's gonna look for it.\n\n483\n00:23:53.259 --> 00:23:54.856\nNow, notice how I got process not found,\nright?\n\n484\n00:23:54.856 --> 00:23:58.702\nAnd that's because it's not called\nchromium, it's called chromium-browser,\n\n485\n00:23:58.702 --> 00:23:59.685\nif I remember right.\n\n486\n00:23:59.685 --> 00:24:00.234\nIt isn't.\n\n487\n00:24:00.234 --> 00:24:00.873\n&gt;&gt; Shoot it's not.\n\n488\n00:24:00.873 --> 00:24:05.634\n&gt;&gt; Yeah, now I really gotta figure\nout what this thing is called.\n\n489\n00:24:05.634 --> 00:24:09.400\nAnd I think my problem is that I'm getting\nscrolled off the edge of the screen to see\n\n490\n00:24:09.400 --> 00:24:11.650\nwhat the actual executable is named.\n\n491\n00:24:11.650 --> 00:24:15.790\nSo let me pull this up.\n\n492\n00:24:15.790 --> 00:24:17.670\nNormally what I would do is\njust export this thing out.\n\n493\n00:24:17.670 --> 00:24:20.270\nWell, actually I could export it to less,\ncouldn't I?\n\n494\n00:24:20.270 --> 00:24:22.004\n&gt;&gt; Yeah.\n&gt;&gt; Pipe that to less.\n\n495\n00:24:22.004 --> 00:24:25.510\nCuz less will let you scroll left and\nright and see the rest of it, and\n\n496\n00:24:25.510 --> 00:24:27.100\nI can search for old Chromium,\n\n497\n00:24:27.100 --> 00:24:29.910\nand we're gonna find out what\nthat thing is actually called.\n\n498\n00:24:30.930 --> 00:24:33.800\nIt is called Chromium-browser.\n\n499\n00:24:33.800 --> 00:24:35.480\nThat's interesting,\nit didn't pull the name.\n\n500\n00:24:35.480 --> 00:24:37.352\nS did I spell it wrong?\n\n501\n00:24:37.352 --> 00:24:38.590\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n502\n00:24:38.590 --> 00:24:40.565\n&gt;&gt; It doesn't help it with that.\n\n503\n00:24:40.565 --> 00:24:41.800\n&gt;&gt; No.\n\n504\n00:24:41.800 --> 00:24:42.690\n&gt;&gt; But yeah, there it is.\n\n505\n00:24:42.690 --> 00:24:46.140\nWe'll do full path,\nmaybe that will make it happy.\n\n506\n00:24:46.140 --> 00:24:49.573\nAnd grab that.\n\n507\n00:24:49.573 --> 00:24:52.680\nAll right, and we'll do a kill all.\n\n508\n00:24:52.680 --> 00:24:54.096\nAnd we'll feed that in there.\n\n509\n00:24:54.096 --> 00:24:54.960\nThere we go.\n\n510\n00:24:54.960 --> 00:24:57.150\nSo it must have hit some kind\nof duplicate for some reason.\n\n511\n00:24:57.150 --> 00:25:00.835\nBut by doing it that way it's gonna say,\nI'm not just looking for\n\n512\n00:25:00.835 --> 00:25:05.290\na single process ID, I'm looking for\nevery instance of Chromium-browser.\n\n513\n00:25:05.290 --> 00:25:10.505\nWe're gonna knock that out as well as\nthe child processes that might spawn.\n\n514\n00:25:10.505 --> 00:25:13.390\nCuz a web browser can spawn plugins and\nextensions and\n\n515\n00:25:13.390 --> 00:25:16.980\nother things, it will kill all those\ntoo and nail them and knock them out.\n\n516\n00:25:16.980 --> 00:25:20.040\nSo now when I come in and\nI take a look and\n\n517\n00:25:20.040 --> 00:25:24.750\nsee if I have any Chromium instances,\nI don't.\n\n518\n00:25:24.750 --> 00:25:27.500\nOkay, I killed them and\nknocked them all out.\n\n519\n00:25:27.500 --> 00:25:31.990\nSo if you don't know the number,\nyou can use a name if you know the name.\n\n520\n00:25:31.990 --> 00:25:32.960\nThat was my challenge.\n\n521\n00:25:32.960 --> 00:25:37.020\nOr if there's just more than one\nprocess you can kill them all by using\n\n522\n00:25:37.020 --> 00:25:37.880\nthat kill all command.\n\n523\n00:25:37.880 --> 00:25:39.960\nReally handy one to do right there.\n\n524\n00:25:39.960 --> 00:25:43.730\n&gt;&gt; All right, Don,\nwell you've given us a great, a bite of\n\n525\n00:25:43.730 --> 00:25:47.030\na food when it comes to working with\nthe processes inside of our Linux system.\n\n526\n00:25:47.030 --> 00:25:51.350\nWe now know how to find them, list them,\nwork through them, see who's running what.\n\n527\n00:25:51.350 --> 00:25:55.970\nAnd if need be,\ntake the old [LAUGH] the old\n\n528\n00:25:55.970 --> 00:26:00.000\ngeeter to a process that's gone rogue on\nus cuz that does happen from time to time.\n\n529\n00:26:00.000 --> 00:26:02.890\nSo it's really great that we have\nthe ability to make them stop and\n\n530\n00:26:02.890 --> 00:26:05.080\nwork with our system,\nmake it do what we need it to do.\n\n531\n00:26:05.080 --> 00:26:07.410\nDon, anything that you want\nto part us with before we go?\n\n532\n00:26:07.410 --> 00:26:08.950\n&gt;&gt; Yeah, the commands you saw in here,\n\n533\n00:26:08.950 --> 00:26:10.670\nthey're pretty much\npresent on every system.\n\n534\n00:26:10.670 --> 00:26:12.370\nBut there are other ones that\nare out there, I know Daniel and\n\n535\n00:26:12.370 --> 00:26:14.280\nI were talking before the show.\n\n536\n00:26:14.280 --> 00:26:17.070\nI use top just because it's what I'm\nused to, it's been around forever.\n\n537\n00:26:17.070 --> 00:26:21.630\nDaniel uses htop, which is present in\nmost distros, let me show you real quick.\n\n538\n00:26:21.630 --> 00:26:27.010\nThe top that I was using is just black and\nwhite, here's the data, whatever.\n\n539\n00:26:27.010 --> 00:26:30.580\nIf you have htop on your system,\nyou can run it and it looks pretty.\n\n540\n00:26:30.580 --> 00:26:31.730\n&gt;&gt; Look at that.\n\n541\n00:26:31.730 --> 00:26:33.432\n&gt;&gt; [LAUGH] It's the same data,\n\n542\n00:26:33.432 --> 00:26:38.070\n[LAUGH] it's just being rendered in\na pretty format, so people like it.\n\n543\n00:26:38.070 --> 00:26:39.360\nIt's got a lot more options.\n\n544\n00:26:39.360 --> 00:26:41.880\nYou see down there the F keys that you\ncan hit to do all sorts of things.\n\n545\n00:26:41.880 --> 00:26:45.612\nSo don't think that top and kill and kill\nall are the only ones that are out there.\n\n546\n00:26:45.612 --> 00:26:48.200\nThere's plenty of other\ndifferent techniques.\n\n547\n00:26:48.200 --> 00:26:50.560\nFind the ones that you like,\nthe ones that you want to use.\n\n548\n00:26:50.560 --> 00:26:52.970\nBut just know that there\nare a ton of different ways.\n\n549\n00:26:52.970 --> 00:26:54.999\nBut you can always count\non top being there, and\n\n550\n00:26:54.999 --> 00:26:57.300\nyou can always count on kill and\nkill all being there.\n\n551\n00:26:57.300 --> 00:26:59.520\nThe rest of them may or\nmay not always be there for\n\n552\n00:26:59.520 --> 00:27:00.860\nyou when you're working on a server.\n\n553\n00:27:00.860 --> 00:27:02.830\n&gt;&gt; All right, well Don thanks so\nmuch for dropping by today and\n\n554\n00:27:02.830 --> 00:27:07.140\nteaching us how to work with our processes\ninside of our Linux command line area.\n\n555\n00:27:07.140 --> 00:27:09.590\nBut it does look like we are out\nof time for this episode.\n\n556\n00:27:09.590 --> 00:27:12.140\nWe do thank you good folks out there for\nwatching as well, but\n\n557\n00:27:12.140 --> 00:27:14.920\nI guess it's that time for us to sign off.\n\n558\n00:27:14.920 --> 00:27:17.470\nFor ITProTV I've been your host,\nDaniel Lowrie.\n\n559\n00:27:17.470 --> 00:27:18.110\n&gt;&gt; And I'm Don Pezet.\n\n560\n00:27:18.110 --> 00:27:20.801\n&gt;&gt; And we'll see you next time.\n\n561\n00:27:20.801 --> 00:27:26.714\n[MUSIC]\n\n562\n00:27:26.714 --> 00:27:29.562\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "235067226"
        },
        {
          "description": "In this episode, Don explains how Linux manages storage. He demonstrates how storage is detected by Linux, and then shows how to mount the drives to make them usable. At the end of the episode, he explains how to monitor disk utilization to see if you are running low on space.",
          "length": "1727",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-2-1-managing_storage-092217-PGM.00_28_31_23.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-2-1-managing_storage-092217-PGM.00_28_31_23.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-2-1-managing_storage-092217-PGM.00_28_31_23.Still001-sm.jpg",
          "title": "Managing Storage",
          "transcript": "WEBVTT\n\n1\n00:00:00.220 --> 00:00:01.150\nWelcome to IT Pro TV.\n\n2\n00:00:01.150 --> 00:00:02.709\nI'm your host Don.\n\n3\n00:00:02.709 --> 00:00:08.447\n[CROSSTALK]\n\n4\n00:00:08.447 --> 00:00:12.273\n&gt;&gt; You're watching IT Pro TV.\n\n5\n00:00:12.273 --> 00:00:12.886\n&gt;&gt; All right,\n\n6\n00:00:12.886 --> 00:00:16.884\ngreetings everyone, and welcome back\nto another great episode of IT Pro TV.\n\n7\n00:00:16.884 --> 00:00:18.424\nI'm you host Daniel Lowrie, and\n\n8\n00:00:18.424 --> 00:00:22.230\nin today's episode we are back with\nmore on our Linux command line series.\n\n9\n00:00:22.230 --> 00:00:25.440\nJoining us in the studio yet again,\nour good friend, Mr. Don Pezet.\n\n10\n00:00:25.440 --> 00:00:26.540\nDon, welcome back, sir.\n\n11\n00:00:26.540 --> 00:00:27.410\nHow's it going today?\n\n12\n00:00:27.410 --> 00:00:28.290\n&gt;&gt; It is going great, Daniel.\n\n13\n00:00:28.290 --> 00:00:30.872\nReady to dive right back into\nthe world of Linux command prompt.\n\n14\n00:00:30.872 --> 00:00:33.810\nAnd in this episode we\nare focusing on storage, right?\n\n15\n00:00:33.810 --> 00:00:37.735\nWe're going to be taking a look at how\nwe can identify disks on our systems.\n\n16\n00:00:37.735 --> 00:00:40.355\nHow we can connect and even use them, and\n\n17\n00:00:40.355 --> 00:00:43.415\nonce they're there how we can monitor\nthem to see whether they're full or\n\n18\n00:00:43.415 --> 00:00:46.800\nwhat's eating up all of our space\nbecause that's generally what happens.\n\n19\n00:00:46.800 --> 00:00:49.903\nWe'll get a chance to see that and\ndo it all from the command line.\n\n20\n00:00:49.903 --> 00:00:53.638\n&gt;&gt; Now, Don, I know that in this modern\nday and age most of the time you plug in\n\n21\n00:00:53.638 --> 00:00:57.310\nsome sort of external drive,\nmaybe a USB thumb drive, or hard drive, or\n\n22\n00:00:57.310 --> 00:01:00.442\neven if you put it in an internal drive,\na lot of times there's\n\n23\n00:01:00.442 --> 00:01:04.000\nsome auto configuration anymore,\nbut that's not always the case.\n\n24\n00:01:04.000 --> 00:01:07.719\nAnd it can be some consternation there\nwhen we're trying to get something up and\n\n25\n00:01:07.719 --> 00:01:08.530\nrunning.\n\n26\n00:01:08.530 --> 00:01:11.210\nCan we start there with I've got a drive,\nI'm slapping it in,\n\n27\n00:01:11.210 --> 00:01:12.800\nI want to make it work in my system?\n\n28\n00:01:12.800 --> 00:01:14.070\n&gt;&gt; Yeah, absolutely.\n\n29\n00:01:14.070 --> 00:01:19.004\nAnd to your point, if you're running\na Linux install that has a graphical user\n\n30\n00:01:19.004 --> 00:01:23.570\ninterface the odds are its got\nautomount installed, right?\n\n31\n00:01:23.570 --> 00:01:25.880\nUbuntu does it, Fedora does it,\n\n32\n00:01:25.880 --> 00:01:30.410\neven the slightly older stalwarts\nlike Red Hat, they do it.\n\n33\n00:01:30.410 --> 00:01:31.780\nIt's automatic mounting.\n\n34\n00:01:31.780 --> 00:01:35.090\nIf you have a GUI, they assume that\nit's an end user using the system and\n\n35\n00:01:35.090 --> 00:01:38.300\nthat you're going to want access\nto what you just plugged in or\n\n36\n00:01:38.300 --> 00:01:39.545\nsomething in that nature.\n\n37\n00:01:39.545 --> 00:01:44.190\nBut if you're on a server and it's got\nno GUI, well servers don't automount.\n\n38\n00:01:44.190 --> 00:01:45.700\nAnd there's a few reasons for that.\n\n39\n00:01:45.700 --> 00:01:49.070\nOne, we're not normally adding\nremovable storage to a server.\n\n40\n00:01:49.070 --> 00:01:51.700\nAnd two,\nthere are a number of attacks that can\n\n41\n00:01:51.700 --> 00:01:55.070\ntake place thanks to automatic\nmounting of removable storage.\n\n42\n00:01:55.070 --> 00:01:58.070\nSo on a server that's normally\ndisabled for security reasons, right?\n\n43\n00:01:58.070 --> 00:02:02.010\nBut to Daniel's point,\nif I take my USB hard drive right here.\n\n44\n00:02:02.010 --> 00:02:02.570\n&gt;&gt; Look at that [LAUGH].\n\n45\n00:02:02.570 --> 00:02:06.060\n&gt;&gt; So if I take this USB hard drive and\nI wanna plug it in to make use of it,\n\n46\n00:02:06.060 --> 00:02:08.210\nI might not have to use\nthe command line at all, right?\n\n47\n00:02:08.210 --> 00:02:09.410\nSo I can take this guy in here.\n\n48\n00:02:09.410 --> 00:02:12.150\nLet me get into my file manager.\n\n49\n00:02:12.150 --> 00:02:16.000\nAnd so you can see on the left side here\nkind of what I've got on my systems and\n\n50\n00:02:16.000 --> 00:02:17.790\nfolders and notes and things like that.\n\n51\n00:02:17.790 --> 00:02:22.280\nAnd when I come in and plug this drive in,\nif I can find my USB port.\n\n52\n00:02:22.280 --> 00:02:23.490\nThere we go.\n\n53\n00:02:23.490 --> 00:02:25.530\nIt's going to detect that drive, and\n\n54\n00:02:25.530 --> 00:02:27.770\nit'll show up here in my\nleft side navigation bar.\n\n55\n00:02:27.770 --> 00:02:29.700\nIt's automatically mounting.\n\n56\n00:02:29.700 --> 00:02:31.123\nAnd I'm stalling here.\n\n57\n00:02:31.123 --> 00:02:32.790\nThere we go.\n[LAUGH] Just a moment [LAUGH] there we go.\n\n58\n00:02:35.000 --> 00:02:37.890\nI see this 1 terabyte volume\njust magically appeared,\n\n59\n00:02:37.890 --> 00:02:40.610\nand I've got a bunch of Fedora\nimages that are on there.\n\n60\n00:02:40.610 --> 00:02:41.860\nAnd so there it is right?\n\n61\n00:02:41.860 --> 00:02:43.192\nI can use it.\n\n62\n00:02:43.192 --> 00:02:45.140\nMounting a disk is the easiest\nthing with the world.\n\n63\n00:02:45.140 --> 00:02:48.620\nAnd when I'm done with it, I don't\njust unplug that cable and walk away.\n\n64\n00:02:48.620 --> 00:02:51.090\nI hit the little eject button right there.\n\n65\n00:02:51.090 --> 00:02:52.420\nAnd it ejects.\n\n66\n00:02:52.420 --> 00:02:54.140\nAnd now, as soon as that disappears,\n\n67\n00:02:54.140 --> 00:02:59.490\nit's safe to take it off of\nthe machine and now it's done right?\n\n68\n00:02:59.490 --> 00:03:02.180\nSo that's automatic mounting,\nand that's nice.\n\n69\n00:03:02.180 --> 00:03:06.180\nBut if you're working from the command\nline that automatic mounting\n\n70\n00:03:06.180 --> 00:03:07.820\nmight not happen, right?\n\n71\n00:03:07.820 --> 00:03:12.450\nSo we've gotta get in and\nmake sure that we mount this ourselves.\n\n72\n00:03:12.450 --> 00:03:13.621\nAnd then do it by hand, right?\n\n73\n00:03:13.621 --> 00:03:14.850\nThe old fashioned way.\n\n74\n00:03:14.850 --> 00:03:18.066\nAnd this way works everywhere versus\nautomount which only works when automount\n\n75\n00:03:18.066 --> 00:03:18.600\nis enabled.\n\n76\n00:03:18.600 --> 00:03:23.118\nSo the key secret here is that we're\ngonna be using a command called mount.\n\n77\n00:03:23.118 --> 00:03:25.820\nAnd the mount command will let us\nbring a disk online to use it.\n\n78\n00:03:25.820 --> 00:03:28.220\nAnd if you just run\nthe mount command by itself,\n\n79\n00:03:28.220 --> 00:03:31.650\nit'll list all the disks that\nyou presently have mounted.\n\n80\n00:03:31.650 --> 00:03:35.520\nNow, don't be surprised if\nyou see a lot of stuff here.\n\n81\n00:03:35.520 --> 00:03:37.890\nBecause you might only have\none physical disk, but\n\n82\n00:03:37.890 --> 00:03:39.570\nthe odds are it's broken up into four or\n\n83\n00:03:39.570 --> 00:03:43.852\nfive partitions, and each partition can\nbe mounted to a different mount point.\n\n84\n00:03:43.852 --> 00:03:46.320\nAnd then, if your running something\nlike a logical volume manage,\n\n85\n00:03:46.320 --> 00:03:48.170\nyou might even have more\nwhich are virtual entries.\n\n86\n00:03:48.170 --> 00:03:53.100\nAnd you'll see I am so,\nI've got these dev/mapper/ blah blah blah.\n\n87\n00:03:53.100 --> 00:03:56.381\nthat is the logical volume manager that\nhas created these fake volumes, and\n\n88\n00:03:56.381 --> 00:03:59.777\nby doing that they can be resized, you\nhave all sorts of other magic and stuff.\n\n89\n00:03:59.777 --> 00:04:04.469\nBut for a traditional disk, it'll show up\nin here as a very simple entry that'll\n\n90\n00:04:04.469 --> 00:04:08.910\njust show what the disk's name is and\nwhat folder it's mounted on.\n\n91\n00:04:08.910 --> 00:04:13.160\nSo for example, if I look through here and\nfind something like slash sys, right?\n\n92\n00:04:13.160 --> 00:04:17.690\nSlash sys is just a real simple line\nright here, the system file system,\n\n93\n00:04:17.690 --> 00:04:22.566\nwhich is where the kernel is stored, is\nmounted right there inside of slash sys,\n\n94\n00:04:22.566 --> 00:04:24.740\ntand here it is, it's available.\n\n95\n00:04:24.740 --> 00:04:27.750\nVersus some of these other lines that\nactually wrap around the screen they're so\n\n96\n00:04:27.750 --> 00:04:29.010\nlong.\n\n97\n00:04:29.010 --> 00:04:31.350\nLike temp FS here that's wrapping around,\n\n98\n00:04:31.350 --> 00:04:35.870\nwhere these are temporary file\nsystems that are just stored in RAM\n\n99\n00:04:35.870 --> 00:04:40.800\nthat'll go away later on when you reboot\nor whatever, so they kind of come and go.\n\n100\n00:04:40.800 --> 00:04:42.730\nThey're transient file systems, right?\n\n101\n00:04:42.730 --> 00:04:46.960\nBut when I plug in my USB drive,\nI want to make use of it.\n\n102\n00:04:46.960 --> 00:04:49.960\nI want to mount it and bring it online.\n\n103\n00:04:49.960 --> 00:04:52.670\nAnd right now it's not online,\nand I can't get to it, all right?\n\n104\n00:04:52.670 --> 00:04:57.520\nThe first trip to mounting a disk is\nfiguring out what the disk is called.\n\n105\n00:04:57.520 --> 00:04:59.430\nEvery disk has a name, it's a signed name.\n\n106\n00:04:59.430 --> 00:05:02.425\nAnd if you look inside\nof this -dev folder,\n\n107\n00:05:02.425 --> 00:05:06.880\ninside of -dev you have a file\nrepresentation of all of your hardware.\n\n108\n00:05:06.880 --> 00:05:11.610\nAnd when you plug in that removable disk,\nit appears in here somewhere, okay?\n\n109\n00:05:11.610 --> 00:05:15.250\nNow, I'm being a little\nvague on this because\n\n110\n00:05:15.250 --> 00:05:18.310\nI don't necessarily know what the name\nof a disk is gonna be when I plug it in.\n\n111\n00:05:18.310 --> 00:05:21.340\nFor example,\nmy laptop has a NVME disk in it.\n\n112\n00:05:21.340 --> 00:05:23.248\nAnd so, I see that right here, NVME zero.\n\n113\n00:05:24.360 --> 00:05:27.300\nAnd then on that disk\nthere are partitions.\n\n114\n00:05:27.300 --> 00:05:31.860\nAnd so I see NVME0, N1, P1, P2, P3,\nthere's three partitions on that disk.\n\n115\n00:05:31.860 --> 00:05:36.910\nI have a second hard drive on my\nlaptop which is labelled sda, okay?\n\n116\n00:05:36.910 --> 00:05:41.060\nWhy sda instead of NVME blah, blah, blah?\n\n117\n00:05:41.060 --> 00:05:42.550\nThat's because it's a SATA disk.\n\n118\n00:05:42.550 --> 00:05:45.940\nIt's a serial ATA, and Not an NVMe.\n\n119\n00:05:45.940 --> 00:05:47.780\nSo it's gonna give it a different name.\n\n120\n00:05:47.780 --> 00:05:52.060\nWell, my USB drive that I just plugged in,\nit's a SATA disk as well.\n\n121\n00:05:52.060 --> 00:05:53.980\nAnd so I already had SDA.\n\n122\n00:05:53.980 --> 00:05:57.030\nWhen I plugged this disk in it became SDB,\nall right?\n\n123\n00:05:57.030 --> 00:06:00.490\nAnd then on it I've got one partition,\nwhich is SDB1.\n\n124\n00:06:00.490 --> 00:06:02.060\nSo now I know its name.\n\n125\n00:06:02.060 --> 00:06:03.680\nBut be careful.\n\n126\n00:06:03.680 --> 00:06:06.290\nIf you're on a server with 50 hard drives,\n\n127\n00:06:06.290 --> 00:06:10.640\nit's really easy to pick the wrong one\nabout to format the drive to get it ready.\n\n128\n00:06:10.640 --> 00:06:15.070\nI don't wanna format [LAUGH]\nthe wrong drive by accident.\n\n129\n00:06:15.070 --> 00:06:18.700\nIf I formatted my SDA1 drive,\nI'd be really sad.\n\n130\n00:06:18.700 --> 00:06:20.215\nThat would be video\nfootage we'd wanna keep.\n\n131\n00:06:20.215 --> 00:06:23.570\n&gt;&gt; [LAUGH]\n&gt;&gt; Cuz I've got stuff that's on there.\n\n132\n00:06:23.570 --> 00:06:26.500\nGranted, I backed it up, but it would\nannoy the heck out of me if I deleted it.\n\n133\n00:06:26.500 --> 00:06:29.970\nSDB, that USB drive,\nI don't care about the data on it.\n\n134\n00:06:29.970 --> 00:06:30.988\nErase it all the time.\n\n135\n00:06:30.988 --> 00:06:32.700\nSo making sure we know the right one.\n\n136\n00:06:32.700 --> 00:06:37.210\nAnd the way I do this with removable\nmedia to be certain is you can\n\n137\n00:06:37.210 --> 00:06:42.330\nunplug the removable media,\nand then plug it back in, and\n\n138\n00:06:42.330 --> 00:06:44.760\nit'll be the last entries\nin your log file.\n\n139\n00:06:44.760 --> 00:06:48.850\nWhen your system boots up\nit generate a bootlog, and\n\n140\n00:06:48.850 --> 00:06:51.010\nyou can view that with\na D message command.\n\n141\n00:06:51.010 --> 00:06:54.130\nAnd when you add removable media,\nit shows up.\n\n142\n00:06:54.130 --> 00:06:58.512\nAnd so I can see all of these\nmessages right here for SDB.\n\n143\n00:06:58.512 --> 00:07:02.360\nAnd SDB1, right there,\nthere's where it was automounted, right,\n\n144\n00:07:02.360 --> 00:07:03.600\nto become available for us.\n\n145\n00:07:03.600 --> 00:07:07.810\nBut I can see that that disk is\nnamed SDB1, or SDB at least, right?\n\n146\n00:07:07.810 --> 00:07:09.476\nSo now I know what that disk is called.\n\n147\n00:07:09.476 --> 00:07:16.055\nAnd if I'm not certain, I could\nalways unplug it and plug it back in.\n\n148\n00:07:16.055 --> 00:07:19.930\nIf you're on a D system,\nyou can do journal CTL dash F, and\n\n149\n00:07:19.930 --> 00:07:21.920\nit'll follow that log file.\n\n150\n00:07:21.920 --> 00:07:26.190\nYou can unplug it and plug it back in and\nyou'll see the log messages appear.\n\n151\n00:07:26.190 --> 00:07:29.270\nSo if I unplug it, right,\n\n152\n00:07:29.270 --> 00:07:32.640\nthere's a little message that's popped\nup telling me a USB device was removed.\n\n153\n00:07:32.640 --> 00:07:37.450\nAnd then if I plug it back in,\nwhich I can do, there we go.\n\n154\n00:07:37.450 --> 00:07:39.520\nI start to see log messages come up, and\n\n155\n00:07:39.520 --> 00:07:43.140\nI'll see where it's picked up the device\nand it's telling me the name.\n\n156\n00:07:43.140 --> 00:07:45.640\nIt's a western digital elements disk.\n\n157\n00:07:45.640 --> 00:07:48.330\nAnd it just assigned it that name of sdb.\n\n158\n00:07:48.330 --> 00:07:51.830\nSo now I know I'm working\nwith the right disk.\n\n159\n00:07:51.830 --> 00:07:53.679\nAnd in the background it's automounting.\n\n160\n00:07:53.679 --> 00:07:58.000\nSo let me eject it, or\nactually I guess it didn't automount.\n\n161\n00:07:58.000 --> 00:07:59.201\nWell, we'll wait.\nIt takes some time.\n\n162\n00:07:59.201 --> 00:08:01.980\nSo anyhow, now I know I'm\nworking with the right disk.\n\n163\n00:08:01.980 --> 00:08:03.050\nThat's really important, right?\n\n164\n00:08:03.050 --> 00:08:07.854\nThere's a lot of ways to see the disks\nthat are attached to your system,\n\n165\n00:08:07.854 --> 00:08:10.230\nlike the lsbok command.\n\n166\n00:08:10.230 --> 00:08:13.680\nLsbok is nice cuz it lists\nthe block devices on your system.\n\n167\n00:08:13.680 --> 00:08:19.640\nSo I can see mvme 0 and 1, sdb,\nsda and I can see the partitions\n\n168\n00:08:19.640 --> 00:08:23.590\nunderneath them and if they're mounted,\nI can see where they are mounted to.\n\n169\n00:08:23.590 --> 00:08:27.090\nSo for example, my sda disk or sda1\n\n170\n00:08:27.090 --> 00:08:32.390\nis mounted to /mnt/storage I can browse\nthat folder and ask for their diskettes.\n\n171\n00:08:32.390 --> 00:08:38.140\nBut I can see that sdb1 on the other\nhand is not in anywhere, right.\n\n172\n00:08:38.140 --> 00:08:39.700\nIt's just sitting there and\nit's available.\n\n173\n00:08:39.700 --> 00:08:42.800\nSo lsbok is pretty handy\nto be able to see that.\n\n174\n00:08:42.800 --> 00:08:47.860\nBut now if I want to take advantage of\nthis disk, I've got to mount it and\n\n175\n00:08:47.860 --> 00:08:49.930\nmake it available and\nwe'll use the mount command for that.\n\n176\n00:08:49.930 --> 00:08:54.360\nNow, we do need to be a little bit\ncareful on this because technically,\n\n177\n00:08:54.360 --> 00:08:58.390\nadministrators are the only\npeople allowed to mount a disk.\n\n178\n00:08:58.390 --> 00:09:01.410\nThe auto mount service does it\non an administrator's behalf.\n\n179\n00:09:01.410 --> 00:09:04.130\nBut as a regular user, you're not\ntypically allowed to mount things.\n\n180\n00:09:04.130 --> 00:09:06.470\nSo you've gotta make sure\nyou have permissions.\n\n181\n00:09:06.470 --> 00:09:09.420\nIf you're logged in as the root user,\nyou can this all day long and\n\n182\n00:09:09.420 --> 00:09:10.530\nit's no big deal.\n\n183\n00:09:10.530 --> 00:09:12.710\nIf you're logged in as\na regular end-user though,\n\n184\n00:09:12.710 --> 00:09:14.680\nyou may need to elevate\nyour privileges to do that.\n\n185\n00:09:14.680 --> 00:09:18.334\nSo I'm gonna go ahead and do a sudo-s.\n\n186\n00:09:18.334 --> 00:09:21.395\nAnd that's gonna give me a shell\nthat's running as the superuser or\n\n187\n00:09:21.395 --> 00:09:22.760\nrunning as the root.\n\n188\n00:09:22.760 --> 00:09:26.200\nSo now when I run that,\nnot much has changed on my screen.\n\n189\n00:09:26.200 --> 00:09:27.650\nBut if I do a whoami?\n\n190\n00:09:27.650 --> 00:09:29.040\nSee how I'm now root.\n\n191\n00:09:29.040 --> 00:09:31.120\nSo the commands that I'm\nrunning are being run as root.\n\n192\n00:09:31.120 --> 00:09:32.350\nI don't have to do a root shell,\n\n193\n00:09:32.350 --> 00:09:36.340\nI could actually just use the pseudo for\nevery command that I run.\n\n194\n00:09:36.340 --> 00:09:39.280\nIf I do a whoami, I see I'm D Pezet.\n\n195\n00:09:39.280 --> 00:09:42.776\nIf I do a sudo whoami,\nI'm now root, right?\n\n196\n00:09:42.776 --> 00:09:45.500\nSo I can run these commands with elevated\nprivileges and with the mount command,\n\n197\n00:09:45.500 --> 00:09:46.310\nwe'll want to do that.\n\n198\n00:09:47.410 --> 00:09:48.720\nAll right now,\nbefore I can mount the disk,\n\n199\n00:09:48.720 --> 00:09:50.680\nI have to figure out where I\nwant to mount it to, right.\n\n200\n00:09:50.680 --> 00:09:55.080\nI've got a disk which I\nknow now is /dev/sdb1,\n\n201\n00:09:55.080 --> 00:09:58.890\nI need to attach it somewhere in\nthe file system to get there and\n\n202\n00:09:58.890 --> 00:10:02.031\nthat somewhere needs to\nexist ahead of time, right?\n\n203\n00:10:02.031 --> 00:10:05.196\n&gt;&gt; [LAUGH] You can't just\nmake it up on the fly?\n\n204\n00:10:05.196 --> 00:10:07.880\n&gt;&gt; Yeah, I guess you sort of could but\nyou have to at least make the directories.\n\n205\n00:10:07.880 --> 00:10:09.860\nThere has to be at least\na little bit of forethought.\n\n206\n00:10:09.860 --> 00:10:12.450\nSo I'm going to get into the MNT folder,\nright?\n\n207\n00:10:12.450 --> 00:10:15.340\nAnd that's where I have my other\ndisk mounted, disk called storage.\n\n208\n00:10:15.340 --> 00:10:18.740\nSo I'm gonna make a new directory\nin there, and I'll sudo this.\n\n209\n00:10:18.740 --> 00:10:22.940\nSo I'm gonna make a directory and\nI'm gonna call it usb-storage, or\n\n210\n00:10:22.940 --> 00:10:26.340\nI might make it prettier it just\ndepends on what mood I'm in.\n\n211\n00:10:26.340 --> 00:10:29.660\nAnd so I'll make a directory that's\ncalled usb storage and there we go.\n\n212\n00:10:29.660 --> 00:10:31.970\nSo now I've got that folder.\n\n213\n00:10:31.970 --> 00:10:35.220\nAnd if I navigate into that folder\nthere's, there's nothing in it, right?\n\n214\n00:10:35.220 --> 00:10:38.290\nIt's a, whoops, it's an empty folder,\nI just made it.\n\n215\n00:10:38.290 --> 00:10:43.680\nBut I can now attach that external disk to\nthis folder, and we'll have access to it.\n\n216\n00:10:43.680 --> 00:10:50.113\nSo I can say, sudu mount /dev/sdb1, right?\n\n217\n00:10:50.113 --> 00:10:52.380\nYou mount the partition, not the disk.\n\n218\n00:10:52.380 --> 00:10:53.570\nAnd so if there's five partitions,\n\n219\n00:10:53.570 --> 00:10:55.910\nI'll have to do five mount\ncommands to mount each one.\n\n220\n00:10:55.910 --> 00:11:00.774\nI'm mounting /dev.sdb1 and\nI wanna attach that\n\n221\n00:11:00.774 --> 00:11:05.880\nto /mnt/usb-storage, that folder, okay?\n\n222\n00:11:05.880 --> 00:11:11.140\nNow let's just assume for a moment that\nthere was some data inside of that folder.\n\n223\n00:11:11.140 --> 00:11:15.800\nOkay, when I mount to that folder,\nthe data doesn't get deleted.\n\n224\n00:11:15.800 --> 00:11:18.710\nThe data stays there, I just can't get\nto it anymore because any time I try\n\n225\n00:11:18.710 --> 00:11:21.090\nto go to that folder I'm\ngetting sent to my USB drive.\n\n226\n00:11:21.090 --> 00:11:24.090\nBut when I unmount, the data will\nstill be there waiting for me.\n\n227\n00:11:24.090 --> 00:11:26.300\nNow while that is the case,\n\n228\n00:11:26.300 --> 00:11:28.410\nyou really don't normally do\nthat kind of thing, right.\n\n229\n00:11:28.410 --> 00:11:30.570\nYou want the directory to\nbe an empty directory.\n\n230\n00:11:30.570 --> 00:11:33.910\nAnd now that I'm mounted to it,\nit was empty a moment ago.\n\n231\n00:11:33.910 --> 00:11:37.300\nAnd now when I take a look,\nit's still empty.\n\n232\n00:11:37.300 --> 00:11:38.000\nWhat the heck happened?\n\n233\n00:11:38.000 --> 00:11:40.350\nWell, I made a amateur mistake here.\n\n234\n00:11:40.350 --> 00:11:44.240\nWhich is I was in the folder\nwhen I did the mount command.\n\n235\n00:11:44.240 --> 00:11:47.750\nSo it doesn't like that so much and\nin fact, I think I'll have to unmount.\n\n236\n00:11:47.750 --> 00:11:48.760\nNo, I didn't.\n\n237\n00:11:48.760 --> 00:11:51.142\n&gt;&gt; [CROSSTALK] Looks like it kind of\nrefreshed by going out and back in.\n\n238\n00:11:51.142 --> 00:11:55.610\n&gt;&gt; Right because I was already in there,\nI was technically still in the folder,\n\n239\n00:11:55.610 --> 00:11:57.343\nnot in the mounted location.\n\n240\n00:11:57.343 --> 00:11:59.541\nAnd so\nwhen I do the cd dot dot to move up,\n\n241\n00:11:59.541 --> 00:12:02.210\nthat took me out of the original folder.\n\n242\n00:12:02.210 --> 00:12:05.590\nAnd now when I change directory\nright back in to usb-storage,\n\n243\n00:12:05.590 --> 00:12:09.780\nit's following that mount point and\ntaking me right to that removable media.\n\n244\n00:12:09.780 --> 00:12:13.920\nAnd now when I pull up that directory\nlisting, there's all the stuff, right.\n\n245\n00:12:13.920 --> 00:12:21.480\nAnd if I do an unmount, if I remove\nthe disk, then it comes out and\n\n246\n00:12:21.480 --> 00:12:25.040\nI'll be back in the original folder,\nwhich may or may not have data in it.\n\n247\n00:12:25.040 --> 00:12:27.030\nNow unmounting a disk is pretty easy.\n\n248\n00:12:27.030 --> 00:12:29.510\nYou can use the umount command.\n\n249\n00:12:29.510 --> 00:12:34.400\nSome operating systems actually have it\nas a secondary command called unmount, or\n\n250\n00:12:34.400 --> 00:12:38.360\neven an alias for\nunmount that points to umount.\n\n251\n00:12:38.360 --> 00:12:39.500\nBut the actual command is umount.\n\n252\n00:12:39.500 --> 00:12:41.550\nAnd so I can say sudo umount.\n\n253\n00:12:42.600 --> 00:12:44.300\nAnd I can tell it what I want to unmount.\n\n254\n00:12:44.300 --> 00:12:49.080\nAnd I can unmount either by the folder or\nby the drive, so I could unmount and\n\n255\n00:12:49.080 --> 00:12:52.250\ndo this to /dev/sdb1.\n\n256\n00:12:52.250 --> 00:12:53.810\nAnd it would know what I'm talking about.\n\n257\n00:12:53.810 --> 00:12:58.870\nOr I could say /mnt/usbstorage, and\nit would know what I'm talking about.\n\n258\n00:12:58.870 --> 00:12:59.860\nIt would go and unmount that.\n\n259\n00:12:59.860 --> 00:13:03.720\nNow, I tried to unmount it\nwhen I was in the folder.\n\n260\n00:13:03.720 --> 00:13:07.880\nAnd so I get a warning saying hey,\nit's in use, it's busy, all right?\n\n261\n00:13:07.880 --> 00:13:08.400\nAnd that's good,\n\n262\n00:13:08.400 --> 00:13:11.880\nbecause we don't wanna unmount something\nwhile we're still writing to it, right?\n\n263\n00:13:11.880 --> 00:13:13.910\nWe we're half way through our ride,\nwe get corrupted data.\n\n264\n00:13:13.910 --> 00:13:16.550\nSo it's warning me,\nit's getting me a little safety net.\n\n265\n00:13:16.550 --> 00:13:22.630\nAnd if I get out of that folder, and\nrerun that umount command, now it's gonna\n\n266\n00:13:22.630 --> 00:13:27.940\nunmount it and take that disk offline,\nwhich I can verify with the lsbok command.\n\n267\n00:13:27.940 --> 00:13:33.290\nAnd I can look and\nI see that sdb1 is not mounted anywhere.\n\n268\n00:13:33.290 --> 00:13:37.284\nAnd if I remount it,\nlet me get back here and remount it.\n\n269\n00:13:37.284 --> 00:13:38.885\nI thought it'd be faster\nto pull it up from history.\n\n270\n00:13:38.885 --> 00:13:40.394\n&gt;&gt; [LAUGH]\n&gt;&gt; There we go.\n\n271\n00:13:40.394 --> 00:13:44.984\nNow I can run lsbok again and\nnow I can see right there that it is\n\n272\n00:13:44.984 --> 00:13:50.110\nmounted to /mnt/usb-storage,\nso pretty easy to mount.\n\n273\n00:13:50.110 --> 00:13:53.537\nNow, this used to be a lot harder because\nyou used to have to know what the file\n\n274\n00:13:53.537 --> 00:13:56.968\nsystem was and you had to provide them,\nand you still can, you can do a -t and\n\n275\n00:13:56.968 --> 00:13:59.075\nthen the type of file\nsystem that's on there.\n\n276\n00:13:59.075 --> 00:14:03.286\nBut Linux kernels for the last three or\nfour years have auto detected what\n\n277\n00:14:03.286 --> 00:14:06.960\nthat file system is and so\nwe don't have to provide it anymore.\n\n278\n00:14:06.960 --> 00:14:07.942\nIt makes life a lot more simple.\n\n279\n00:14:07.942 --> 00:14:10.570\n&gt;&gt; Yeah, we're all more thankful and\nbetter off for it.\n\n280\n00:14:10.570 --> 00:14:14.115\nSo thank you, Linux kernel people\nout there for adding that support.\n\n281\n00:14:14.115 --> 00:14:15.730\n[LAUGH] That's a very good thing.\n\n282\n00:14:15.730 --> 00:14:17.930\nNow, Don,\nthis is an interesting thing, right?\n\n283\n00:14:17.930 --> 00:14:19.600\nMounting, it's not too difficult.\n\n284\n00:14:19.600 --> 00:14:23.690\nWe just have to have our mount point,\nknow what our device is,\n\n285\n00:14:23.690 --> 00:14:25.370\nput the two together and voila.\n\n286\n00:14:25.370 --> 00:14:29.405\nWe have a lovely drive that is now\nready to be used inside of our system.\n\n287\n00:14:29.405 --> 00:14:32.790\nBut there's a little caveat to this and\n\n288\n00:14:32.790 --> 00:14:36.270\nthat is, if we reboot our machine\n&gt;&gt; [LAUGH]\n\n289\n00:14:36.270 --> 00:14:38.170\n&gt;&gt; That's not gonna persist, is it?\n\n290\n00:14:38.170 --> 00:14:40.658\n&gt;&gt; That's right, yeah,\nthis is a temporary thing, right?\n\n291\n00:14:40.658 --> 00:14:43.016\nIf I reboot,\nthe system forgets about that drive.\n\n292\n00:14:43.016 --> 00:14:46.498\nAll right and if I,\neven if I unplug it and plug it back in,\n\n293\n00:14:46.498 --> 00:14:49.340\nit doesn't automatically mount it, right.\n\n294\n00:14:49.340 --> 00:14:51.250\nI've got to go in and manually do that.\n\n295\n00:14:51.250 --> 00:14:53.320\nIf we want it to be a little\nbit more automated,\n\n296\n00:14:53.320 --> 00:14:55.820\nwe can tell the system when it\nboots up to look for this disk.\n\n297\n00:14:55.820 --> 00:14:57.590\nAnd if its there,\ngo ahead and mount it, right.\n\n298\n00:14:57.590 --> 00:14:59.550\nThe operating system maintains a file.\n\n299\n00:14:59.550 --> 00:15:00.530\nLet me show you the file.\n\n300\n00:15:00.530 --> 00:15:05.303\nIt is, I'll just [INAUDIBLE],\nit's /etc/fstab,\n\n301\n00:15:05.303 --> 00:15:09.120\nright, which is file system table.\n\n302\n00:15:09.120 --> 00:15:11.190\nAnd it's just a simple text file, and\n\n303\n00:15:11.190 --> 00:15:15.060\nit lists each of the discs that it's\ngonna mount when the system boots up.\n\n304\n00:15:15.060 --> 00:15:19.750\nSo when my system boots up, it's looking\nfor these disks and mounting them.\n\n305\n00:15:19.750 --> 00:15:24.420\nSo here I've got /dev/sda1, right,\nthat's my other internal hard drive.\n\n306\n00:15:24.420 --> 00:15:26.090\nAnd when it boots up,\nit's gonna look for that disk and\n\n307\n00:15:26.090 --> 00:15:30.160\nif it finds it,\nit's gonna mount to /mnt/storage.\n\n308\n00:15:30.160 --> 00:15:31.770\nThat's where it's going to attach it.\n\n309\n00:15:31.770 --> 00:15:34.090\nAnd then I can see some other\nbasic information about it.\n\n310\n00:15:34.090 --> 00:15:38.310\nThere's a lot of options and\nthings that are tied to it.\n\n311\n00:15:38.310 --> 00:15:42.070\nAnd then it goes on to say\nI want to mount this disk.\n\n312\n00:15:42.070 --> 00:15:45.330\nSo let's say that I wanted to mount\nthis USB disk every time I boot it.\n\n313\n00:15:45.330 --> 00:15:48.460\nWell, I actually wouldn't\nbecause it's a USB disk, right?\n\n314\n00:15:48.460 --> 00:15:50.080\nIt's not always going to be attached.\n\n315\n00:15:50.080 --> 00:15:51.600\nWell, I don't want to\nmount it at boot time.\n\n316\n00:15:51.600 --> 00:15:53.134\nBut let's just say that I did.\n\n317\n00:15:53.134 --> 00:15:55.910\nAnd if I wanted to,\nI could edit that file.\n\n318\n00:15:55.910 --> 00:15:59.007\nNow you do have to be an administrator\nto edit that file, so\n\n319\n00:15:59.007 --> 00:16:03.510\nI'm gonna use sudo again and I'll say\nsudo And I'll use vi to edit, /etc/fstab.\n\n320\n00:16:03.510 --> 00:16:07.163\nYou can use whatever text\neditor it is you're happy with.\n\n321\n00:16:07.163 --> 00:16:08.798\nAnd so we can go into that file.\n\n322\n00:16:08.798 --> 00:16:12.429\nAnd I'm just gonna add a new line right\nhere to the end and I'm gonna give it\n\n323\n00:16:12.429 --> 00:16:15.662\nthe bare minimum information to\nget this thing mounted, right?\n\n324\n00:16:15.662 --> 00:16:16.646\nSo add a minimum.\n\n325\n00:16:16.646 --> 00:16:18.616\nWe need to tell it what\ndevice to look for.\n\n326\n00:16:18.616 --> 00:16:23.183\nI'm looking for /dev/sdb1, okay?\n\n327\n00:16:23.183 --> 00:16:26.855\nAnd if I find that device I\nwant to mount it somewhere.\n\n328\n00:16:26.855 --> 00:16:32.512\nAnd I'm gonna mount it\nto /mmt/usb-storage.\n\n329\n00:16:32.512 --> 00:16:33.389\nThat's where I want it to go.\n\n330\n00:16:33.389 --> 00:16:33.990\nAll right.\n\n331\n00:16:33.990 --> 00:16:36.168\nNow, I use tabs to separate that out.\n\n332\n00:16:36.168 --> 00:16:39.774\nIn the olden days, these files\nalways look nice and neat, right?\n\n333\n00:16:39.774 --> 00:16:41.468\nAnd they use tabs to separate them out.\n\n334\n00:16:41.468 --> 00:16:46.071\nBut when things like LVM came along,\nthe LVM titles are really long.\n\n335\n00:16:46.071 --> 00:16:49.383\nOr disks that are mounted with the UUID,\nthey're really long as well and\n\n336\n00:16:49.383 --> 00:16:50.753\nit messes up the formatting.\n\n337\n00:16:50.753 --> 00:16:53.338\nSo I still try and\nfollow it just because I'm used to it, but\n\n338\n00:16:53.338 --> 00:16:54.594\nit doesn't really matter.\n\n339\n00:16:54.594 --> 00:16:58.440\nYou just have to have a minimum\nof one space after the drive and\n\n340\n00:16:58.440 --> 00:16:59.880\nthen the mount point.\n\n341\n00:16:59.880 --> 00:17:00.618\nOkay.\n\n342\n00:17:00.618 --> 00:17:03.527\nThe next thing I need to provide\nis what the final system is.\n\n343\n00:17:03.527 --> 00:17:06.353\nAnd in the olden days,\nthis was really important.\n\n344\n00:17:06.353 --> 00:17:07.480\nYou had to put the file system.\n\n345\n00:17:07.480 --> 00:17:09.352\nIf it was xfs, you had to put xfs.\n\n346\n00:17:09.352 --> 00:17:15.129\nIf it was ext4, you had to put ext4 or\n3 or whatever file system it was.\n\n347\n00:17:15.129 --> 00:17:19.464\nBut I'm pretty much any new stuff\nyou could use the auto flag here and\n\n348\n00:17:19.464 --> 00:17:21.914\nit'll automatically figure it out.\n\n349\n00:17:21.914 --> 00:17:26.123\nNow, I know that minus ext4, cuz I'm the\none who formatted it, if I didn't know I\n\n350\n00:17:26.123 --> 00:17:29.990\ncould use F Disk rather utilities to be\nable to see what that file system was.\n\n351\n00:17:29.990 --> 00:17:32.625\nOr I could mount it with auto and\nthen look at the mount output and\n\n352\n00:17:32.625 --> 00:17:34.879\nit would tell me what the file\nsystem was there, too.\n\n353\n00:17:34.879 --> 00:17:38.398\nThere are a few different ways to do it,\nbut in my case, I know that it's ext4, so\n\n354\n00:17:38.398 --> 00:17:39.525\nI'm gonna provide that.\n\n355\n00:17:39.525 --> 00:17:40.277\nAll right.\n\n356\n00:17:40.277 --> 00:17:44.505\nThe next couple of parts are where things\nget a little bit on the interesting\n\n357\n00:17:44.505 --> 00:17:45.385\nside, right?\n\n358\n00:17:45.385 --> 00:17:48.301\nIf you look at the ones above me,\nlike this one here, my home directory.\n\n359\n00:17:48.301 --> 00:17:50.855\nIt's xfs, is the file system.\n\n360\n00:17:50.855 --> 00:17:53.760\nAnd then it just says default\nright after it, right?\n\n361\n00:17:53.760 --> 00:17:57.789\nThere's a number of options you can\nprovide when you mount a disk and\n\n362\n00:17:57.789 --> 00:18:01.904\nyou can tell it to do things like\nmaybe you wanna mount it read-only.\n\n363\n00:18:01.904 --> 00:18:04.241\nAnd, if you want to mount it read-only,\nwell,\n\n364\n00:18:04.241 --> 00:18:07.214\nyou can provide that as an option\nright here and you can put ro.\n\n365\n00:18:07.214 --> 00:18:09.649\nAnd now it's gonna boot and\nnobody will be able to write to it.\n\n366\n00:18:09.649 --> 00:18:11.826\nThey'll be able to read to it and\nthat's it.\n\n367\n00:18:11.826 --> 00:18:16.118\nThere's a ton of other options that\nare available to change performance and\n\n368\n00:18:16.118 --> 00:18:20.622\nhow we write, but usually we just say,\ndefault for typical storage like this.\n\n369\n00:18:20.622 --> 00:18:22.634\nAnd then the last two numbers\nare probably the weirdest one.\n\n370\n00:18:22.634 --> 00:18:25.587\nNotice how they all have a 00 after them,\nthat's actually not normal.\n\n371\n00:18:25.587 --> 00:18:32.070\nNormally you'll see a couple that\nare like a 01 or a 02, right?\n\n372\n00:18:32.070 --> 00:18:36.092\nThe first number,\nthat 0 is actually kind of obsolete now.\n\n373\n00:18:36.092 --> 00:18:40.061\nThere used to be a command called dump and\nyou could use the dump command to back up\n\n374\n00:18:40.061 --> 00:18:43.083\na partition and we've got tons\nof other ways to do that now and\n\n375\n00:18:43.083 --> 00:18:46.780\nthe dump command is ancient and\nI don't know anybody who still uses that.\n\n376\n00:18:46.780 --> 00:18:50.211\nBut basically what this first\none would do is it would say,\n\n377\n00:18:50.211 --> 00:18:54.832\nif you used the dump command it will dump\nany drive that has a 1 for this value and\n\n378\n00:18:54.832 --> 00:18:56.256\nmake a backup out of it.\n\n379\n00:18:56.256 --> 00:18:59.248\nAnd so you'd say, I wanna back up these\ndrives, I'll make these 1s and that's it.\n\n380\n00:18:59.248 --> 00:19:02.748\nBut if you don't use the dump command and\nthese numbers are completely useless and\n\n381\n00:19:02.748 --> 00:19:04.791\nso you'll usually see\na 0 in that first entry.\n\n382\n00:19:04.791 --> 00:19:07.648\nThe second entry is\na little more important.\n\n383\n00:19:07.648 --> 00:19:10.997\nIt says, periodically when the system\nboots up it's gonna run a file\n\n384\n00:19:10.997 --> 00:19:11.759\nsystem check.\n\n385\n00:19:11.759 --> 00:19:14.627\nIt's gonna look for corruption on\nthe disk and try and fix it, okay?\n\n386\n00:19:14.627 --> 00:19:17.363\nAnd if it finds it, great, it'll fix it.\n\n387\n00:19:17.363 --> 00:19:20.103\nWell, what order does it check in?\n\n388\n00:19:20.103 --> 00:19:22.607\nIf you've got a 0, it says,\ndon't do the check,\n\n389\n00:19:22.607 --> 00:19:25.309\ndon't bother checking this file system,\nall right?\n\n390\n00:19:25.309 --> 00:19:30.045\nIf it's got a 1, it means that this will\nbe the first partition that's checked and\n\n391\n00:19:30.045 --> 00:19:32.698\nthen if it's a 2, it'll mean it's second.\n\n392\n00:19:32.698 --> 00:19:34.701\nWell, I should clarify that a little bit.\n\n393\n00:19:34.701 --> 00:19:37.935\nYou should only have one\ndisk that has a 1, right?\n\n394\n00:19:37.935 --> 00:19:42.871\nAnd it should be where your\nboot files are stored, right?\n\n395\n00:19:42.871 --> 00:19:44.255\nYou can't boot unless you have the kernel.\n\n396\n00:19:44.255 --> 00:19:48.095\n[LAUGH] So the one that's got the kernel\nand the one that is your primary system\n\n397\n00:19:48.095 --> 00:19:50.743\npartition, that's what\nshould be checked first.\n\n398\n00:19:50.743 --> 00:19:53.478\nAnd then everything else should have a 2,\nright?\n\n399\n00:19:53.478 --> 00:19:56.381\nSo there's no 3, 4, 5,\nwhich everything else should be a 2.\n\n400\n00:19:56.381 --> 00:20:00.452\n&gt;&gt; Does that mean that it doesn't matter\nwhat order those were checked in?\n\n401\n00:20:00.452 --> 00:20:02.375\nThe only order that\nmatters is that first one?\n\n402\n00:20:02.375 --> 00:20:03.061\n&gt;&gt; Right, and\n\n403\n00:20:03.061 --> 00:20:07.389\nit's because if my storage disk doesn't\nmount I can still boot my system.\n\n404\n00:20:07.389 --> 00:20:09.316\n&gt;&gt; Right.\n&gt;&gt; But if my system disk doesn't mount,\n\n405\n00:20:09.316 --> 00:20:10.683\nI can't boot the system anymore.\n\n406\n00:20:10.683 --> 00:20:12.472\nSo that's really want\nthe differentiation is here.\n\n407\n00:20:12.472 --> 00:20:13.737\nSo you have 0, 1, or 2.\n\n408\n00:20:13.737 --> 00:20:16.322\n0 means don't do a check,\nwe'll do it manually.\n\n409\n00:20:16.322 --> 00:20:19.039\n1 means go ahead and do the check first.\n\n410\n00:20:19.039 --> 00:20:22.638\nAnd 2 just means do it after\nanything with a 1 is done, right?\n\n411\n00:20:22.638 --> 00:20:24.977\nNow, mine,\nyou'll notice most of mine are disabled.\n\n412\n00:20:24.977 --> 00:20:27.589\nThis is my actual laptop, so you might\nbe wondering why do I disable that.\n\n413\n00:20:27.589 --> 00:20:31.314\nAnd it's because I use xfs and\nxfs has its own maintenance plan.\n\n414\n00:20:31.314 --> 00:20:36.849\nSo the file system check here, fsck really\nis expecting you have an ext file system.\n\n415\n00:20:36.849 --> 00:20:41.271\nSo if you have ext2, 3, or 4,\nwhich are all really common, you'll see 0,\n\n416\n00:20:41.271 --> 00:20:42.529\n1s, and 2s in here.\n\n417\n00:20:42.529 --> 00:20:43.214\n&gt;&gt; All right.\n\n418\n00:20:43.214 --> 00:20:45.953\nWell, Don, that's very interesting stuff.\n\n419\n00:20:45.953 --> 00:20:49.825\nNow, that we've got this thing,\nif we've set this, we write this file,\n\n420\n00:20:49.825 --> 00:20:52.349\nonce we reboot,\nthis will all stay persistent.\n\n421\n00:20:52.349 --> 00:20:53.174\n&gt;&gt; Right.\nYep, and\n\n422\n00:20:53.174 --> 00:20:55.935\nany time it sees that disk\nat boot time it'll mount it.\n\n423\n00:20:55.935 --> 00:20:58.281\nIt doesn't make a difference\nafter boot time.\n\n424\n00:20:58.281 --> 00:21:02.902\nThe fstat file is only read during the\nboot or when you run the mount command.\n\n425\n00:21:02.902 --> 00:21:05.866\nAnd so if I run mount,\nit can actually look at fstat file and\n\n426\n00:21:05.866 --> 00:21:09.208\nunmount anything that isn't\nalready mounted and bring that up.\n\n427\n00:21:09.208 --> 00:21:10.362\nSo you can certainly go that route.\n\n428\n00:21:10.362 --> 00:21:13.339\nBut yeah, this is what it would take\nto make it persistent across places.\n\n429\n00:21:13.339 --> 00:21:13.981\n&gt;&gt; All right.\n\n430\n00:21:13.981 --> 00:21:15.432\nWell, now we've got some drives.\n\n431\n00:21:15.432 --> 00:21:16.496\nWe've actually got them mounted.\n\n432\n00:21:16.496 --> 00:21:18.398\nWe've even made that permanent.\n\n433\n00:21:18.398 --> 00:21:20.108\nSo I've loaded my disk.\n\n434\n00:21:20.108 --> 00:21:21.911\nI'm going through life and\nI said, you know what?\n\n435\n00:21:21.911 --> 00:21:25.382\nI need to check how much space because\nsometimes my people love working with\n\n436\n00:21:25.382 --> 00:21:27.487\nlarge files, ISOs, things of that nature.\n\n437\n00:21:27.487 --> 00:21:31.226\nThat'll be quite large and after\na while I've done it plenty of times,\n\n438\n00:21:31.226 --> 00:21:32.295\nfilled up my drive.\n\n439\n00:21:32.295 --> 00:21:32.922\n&gt;&gt; Yeah.\n\n440\n00:21:32.922 --> 00:21:36.386\n&gt;&gt; Within I go in, not enough disk space,\nI get a little prompt or something.\n\n441\n00:21:36.386 --> 00:21:39.888\nHow do I keep an eye on that especially\nif I'm working with a headless system?\n\n442\n00:21:39.888 --> 00:21:42.013\n&gt;&gt; All right.\nWe got two really handy commands here to\n\n443\n00:21:42.013 --> 00:21:43.085\nbe able to see the disk.\n\n444\n00:21:43.085 --> 00:21:46.627\nAnd the best command really is df, right?\n\n445\n00:21:46.627 --> 00:21:49.594\nDf which is disk free,\nsomething like that.\n\n446\n00:21:49.594 --> 00:21:51.650\nThese old Unix-\n&gt;&gt; [CROSSTALK]\n\n447\n00:21:51.650 --> 00:21:53.341\n&gt;&gt; If you run df it gives you a list of\n\n448\n00:21:53.341 --> 00:21:55.928\nall your mount points and\nwhat their storage is.\n\n449\n00:21:55.928 --> 00:22:00.026\nNow, I rarely run df by itself because\nit gives you all the sizes in 1k blocks,\n\n450\n00:22:00.026 --> 00:22:03.071\nwhich are not very convenient,\nso I normally do df/h, so\n\n451\n00:22:03.071 --> 00:22:06.080\nI get human readable sizes\nthat make a little more sense.\n\n452\n00:22:06.080 --> 00:22:10.322\nSo you can see the root of my\nfile system is a 64-gig drive.\n\n453\n00:22:10.322 --> 00:22:12.531\nI'm currently using\na whopping ten gigs of it.\n\n454\n00:22:12.531 --> 00:22:16.788\nSo I've got 55 gigs free and\nI'm only using 16%.\n\n455\n00:22:16.788 --> 00:22:20.442\nBut I can scan down this really quick and\nI can see,\n\n456\n00:22:20.442 --> 00:22:24.192\nfor example here,\nmy storage disk is 35% full.\n\n457\n00:22:24.192 --> 00:22:27.750\nAll right.\nWell, I'm eating up a lot of that storage.\n\n458\n00:22:27.750 --> 00:22:31.362\nI wonder what it is that's\neating up that storage.\n\n459\n00:22:31.362 --> 00:22:32.505\nWell, I don't know.\n\n460\n00:22:32.505 --> 00:22:33.632\nDf doesn't show me that, right?\n\n461\n00:22:33.632 --> 00:22:36.996\nDf is really good at giving me\nmy overall high level view but\n\n462\n00:22:36.996 --> 00:22:39.064\nit doesn't really go beyond that.\n\n463\n00:22:39.064 --> 00:22:42.638\nSo if I just want a quick glimpse across\nall my partitions which may include\n\n464\n00:22:42.638 --> 00:22:46.520\nexternal disks like down here, I can see\nthe external one that we just mounted.\n\n465\n00:22:46.520 --> 00:22:49.579\n&gt;&gt; If we just want to get a quick view,\ndf is really good for that.\n\n466\n00:22:49.579 --> 00:22:50.480\nWe can see it.\n\n467\n00:22:50.480 --> 00:22:52.997\nBut it doesn't necessarily\ngive us that drill down then\n\n468\n00:22:52.997 --> 00:22:54.826\ngo find out what's eating up our space.\n\n469\n00:22:54.826 --> 00:22:56.560\n&gt;&gt; So Don,\nwhat do we do that make that happen?\n\n470\n00:22:56.560 --> 00:23:00.591\n&gt;&gt; Well, we bring in another command\nwhich is named actually very similar.\n\n471\n00:23:00.591 --> 00:23:03.917\nSo, df was really about free disk space.\n\n472\n00:23:03.917 --> 00:23:08.203\nThere is du which is about utilization,\nright?\n\n473\n00:23:08.203 --> 00:23:12.623\nNow the du command, if you just run it by\nitself it looks at the folder that you're\n\n474\n00:23:12.623 --> 00:23:15.173\nin and\nI've got some permission denied here.\n\n475\n00:23:15.173 --> 00:23:16.293\n&gt;&gt; Little permission action there.\n\n476\n00:23:16.293 --> 00:23:17.932\n&gt;&gt; Let me switch over\nto my own folder here.\n\n477\n00:23:17.932 --> 00:23:21.654\nAnd you can pull it up and\nit will give you a layout of everything.\n\n478\n00:23:21.654 --> 00:23:22.615\nAnd look what it does.\n\n479\n00:23:22.615 --> 00:23:28.822\nSee how it breaks down into all the\nsubfolders and it really dives in there.\n\n480\n00:23:28.822 --> 00:23:33.096\nAnd it can really give you,\nI don't know, a ton of-\n\n481\n00:23:33.096 --> 00:23:33.824\n&gt;&gt; Information overload?\n\n482\n00:23:33.824 --> 00:23:35.987\n&gt;&gt; Yeah, a ton of information\nthat's hard to deal with.\n\n483\n00:23:35.987 --> 00:23:39.377\nSo I rarely run du by itself.\n\n484\n00:23:39.377 --> 00:23:41.932\nInstead, I normally modify it a good bit.\n\n485\n00:23:41.932 --> 00:23:46.093\nAnd so let's take for\nexample my internal drive,\n\n486\n00:23:46.093 --> 00:23:52.050\nthis /mnt/storage, which df-h\ntold me a moment ago is 35% full.\n\n487\n00:23:52.050 --> 00:23:53.664\nAll right.\nWell, why is it 35% full?\n\n488\n00:23:53.664 --> 00:23:56.347\nI wanna find out who is eating up so much\nspace cuz maybe I thought it was empty.\n\n489\n00:23:56.347 --> 00:23:58.348\nOr maybe I'm at 99% full, and\n\n490\n00:23:58.348 --> 00:24:01.996\nso I just need to find out where\nthat space is being consumed.\n\n491\n00:24:01.996 --> 00:24:04.666\nSo I can jump in there with du,\nand with du,\n\n492\n00:24:04.666 --> 00:24:07.650\nyou can actually point\nit at another location.\n\n493\n00:24:07.650 --> 00:24:12.150\nSo I can say du/mnt/storage, and so\nnow it's gonna point over there.\n\n494\n00:24:12.150 --> 00:24:15.306\nBut if I just run that, man,\nit's gonna hit that whole drive.\n\n495\n00:24:15.306 --> 00:24:19.489\nAnd I've got a ton of stuff over there,\nreally important stuff like Zork.\n\n496\n00:24:19.489 --> 00:24:23.844\nAnd so [LAUGH] I see all that\ninformation right there.\n\n497\n00:24:23.844 --> 00:24:28.689\nAnd it gives it to me, and it gives it\nto me in these byte values and stuff.\n\n498\n00:24:28.689 --> 00:24:30.449\nSo let's make this-\n&gt;&gt; Always fun to read.\n\n499\n00:24:30.449 --> 00:24:32.050\n&gt;&gt; Let's make it a little more friendly,\nright?\n\n500\n00:24:32.050 --> 00:24:34.862\nSo I'm gonna take this,\nI'm gonna add a little bit more to it.\n\n501\n00:24:34.862 --> 00:24:37.764\nI'm gonna add -chd.\n\n502\n00:24:37.764 --> 00:24:39.384\nFirst off, because there\nare a couple of options, right?\n\n503\n00:24:39.384 --> 00:24:43.596\nSo -c is me telling it I\nwant to get a grand total.\n\n504\n00:24:43.596 --> 00:24:47.755\nGive me a summary of the amount\nof storage at the end, right?\n\n505\n00:24:47.755 --> 00:24:49.710\n-h, I want it to be human readable.\n\n506\n00:24:49.710 --> 00:24:53.100\nI want it to have sizes like gigabyte,\nand megabyte, and kilobyte,\n\n507\n00:24:53.100 --> 00:24:54.580\nnot just straight up bytes.\n\n508\n00:24:54.580 --> 00:24:56.610\nMake it a little more easier to read.\n\n509\n00:24:56.610 --> 00:24:59.340\nAnd then d, I want to set a depth.\n\n510\n00:24:59.340 --> 00:25:02.170\nI don't want it to go into\nevery subfolder, right?\n\n511\n00:25:02.170 --> 00:25:06.230\nOn this disk, I've only got a couple\nof folders that are present.\n\n512\n00:25:06.230 --> 00:25:09.200\nAnd I just wanna know which\nfolder is eating the most space.\n\n513\n00:25:09.200 --> 00:25:13.802\nIf I go into my Storage Disks,\nI've got my Google Drive, my ISOs,\n\n514\n00:25:13.802 --> 00:25:15.872\nQEMU, I've got shared VMs.\n\n515\n00:25:15.872 --> 00:25:18.676\nI just wanna know which folder\nis eating up that space.\n\n516\n00:25:18.676 --> 00:25:22.562\nSo -d lets you set a depth, and\nyou need to follow it by a number.\n\n517\n00:25:22.562 --> 00:25:25.781\nI wanna go one folder deep and that's it.\n\n518\n00:25:25.781 --> 00:25:31.932\nSo this would be -d 1, instead of\ncombining my letters, it's -chd 1.\n\n519\n00:25:31.932 --> 00:25:36.780\nAnd the way I remember this is, Daniel,\ndid you ever see the movie C.H.U.D?\n\n520\n00:25:36.780 --> 00:25:39.448\n&gt;&gt; C.H.U.D, when you wrote chd,\n\n521\n00:25:39.448 --> 00:25:44.027\nI thought C.H.U.D. [LAUGH]\n&gt;&gt; It's a terrible B horror film from\n\n522\n00:25:44.027 --> 00:25:44.820\nthe 80s.\n\n523\n00:25:44.820 --> 00:25:46.036\n&gt;&gt; That Don loves.\n\n524\n00:25:46.036 --> 00:25:48.054\n&gt;&gt; It's how I remember disk utilization.\n\n525\n00:25:48.054 --> 00:25:49.744\nWhat is eating up all of my space,\nC.H.U.D. [LAUGH].\n\n526\n00:25:49.744 --> 00:25:52.876\n&gt;&gt; You see it had its purpose,\nDon, it had its purpose.\n\n527\n00:25:52.876 --> 00:25:55.240\n&gt;&gt; That's my mnemonic on this one.\n\n528\n00:25:55.240 --> 00:25:57.737\nSo anyhow I'm gonna go ahead and do du.\n\n529\n00:25:57.737 --> 00:26:03.010\nAnd I'll do -chd1/mnt/storage and it's\ngonna lay the folders out for me, right?\n\n530\n00:26:03.010 --> 00:26:07.139\nAnd when I run that, now this is a heck\nof a lot more useful to me, right?\n\n531\n00:26:07.139 --> 00:26:10.710\nBecause I can see my Google Drive\nis eating up 1.7 gigs.\n\n532\n00:26:10.710 --> 00:26:16.329\nI can see that my ISOs are eating up\n114 gigs, I've got a lot of ISO images.\n\n533\n00:26:16.329 --> 00:26:18.121\nMy profile is four and a half gigs.\n\n534\n00:26:18.121 --> 00:26:20.796\nI've got Show Notes at 4.3 gigs.\n\n535\n00:26:20.796 --> 00:26:24.151\nMy VMs,\nlooks like they're the winner at 141 gigs.\n\n536\n00:26:24.151 --> 00:26:28.828\nSo I've got virtual machines that\nare consuming the most space.\n\n537\n00:26:28.828 --> 00:26:32.290\nAnd from here, we can start drilling\ndown and say okay, well which VMs?\n\n538\n00:26:32.290 --> 00:26:34.750\nSo let me go ahead and\nlook inside of the VMs folder.\n\n539\n00:26:34.750 --> 00:26:38.729\nAnd now I can look in here,\nand I can see that looks like,\n\n540\n00:26:38.729 --> 00:26:40.950\nwho's our winner on this one?\n\n541\n00:26:40.950 --> 00:26:43.640\nI guess the Windows VM,\nI got a Windows VM here.\n\n542\n00:26:43.640 --> 00:26:44.933\n&gt;&gt; It is lab-dc01.\n\n543\n00:26:44.933 --> 00:26:46.890\n&gt;&gt; No, macOS, lab-dc01?\n\n544\n00:26:46.890 --> 00:26:48.085\n&gt;&gt; No, that is 28 gigs.\n\n545\n00:26:48.085 --> 00:26:50.672\n&gt;&gt; Looking over it,\nyeah, macOS at 28 gigs.\n\n546\n00:26:50.672 --> 00:26:53.304\nSo I got a Mac virtual machine,\nit is at 28 gigs inside.\n\n547\n00:26:53.304 --> 00:26:55.949\nSo now I've identified\nwho's eating up that space.\n\n548\n00:26:55.949 --> 00:26:59.470\nI might have to run the command a few\ntimes before I finally get all the way\n\n549\n00:26:59.470 --> 00:27:02.756\ndown to the level where I'm able to\nidentify if I am able to see it and\n\n550\n00:27:02.756 --> 00:27:03.892\ndrill down with that.\n\n551\n00:27:03.892 --> 00:27:05.726\nSo df is great for a quick view,\n\n552\n00:27:05.726 --> 00:27:10.751\ndu is really useful when we actually need\nto find out what's consuming our storage.\n\n553\n00:27:10.751 --> 00:27:11.306\n&gt;&gt; Well, Don,\n\n554\n00:27:11.306 --> 00:27:14.394\nI wish I would have had this episode\nback when I first started with Linux.\n\n555\n00:27:14.394 --> 00:27:17.881\nBecause it takes you a little while,\nusually fill to fill up your drive.\n\n556\n00:27:17.881 --> 00:27:20.753\nAnd where you're actually\nneeding these types of\n\n557\n00:27:20.753 --> 00:27:22.812\nthings in some real emergency way.\n\n558\n00:27:22.812 --> 00:27:26.014\nAnd then you're, I don't know how to check\nfor this, this would've been fantastic.\n\n559\n00:27:26.014 --> 00:27:29.213\nIt was a great demonstration showing\nus how we can mount our drives,\n\n560\n00:27:29.213 --> 00:27:31.460\nhow we can permanently make that happen.\n\n561\n00:27:31.460 --> 00:27:34.620\nAnd then start looking at utilization\nwhen it comes what is actually going\n\n562\n00:27:34.620 --> 00:27:35.690\non inside of those drives.\n\n563\n00:27:35.690 --> 00:27:39.162\nDon, you did a fantastic job with these\ndemonstrations today, appreciate it.\n\n564\n00:27:39.162 --> 00:27:43.630\nBut looking at the clock over here, and\nit has certainly run out of time for us.\n\n565\n00:27:43.630 --> 00:27:46.172\n&gt;&gt; [LAUGH]\n&gt;&gt; I do like to give you a chance to add\n\n566\n00:27:46.172 --> 00:27:48.286\nanything to the show before we close.\n\n567\n00:27:48.286 --> 00:27:50.619\n&gt;&gt; Obviously there's a lot more\ncommands involved with storage,\n\n568\n00:27:50.619 --> 00:27:52.179\nbut the ones you see\nhere are pretty basic.\n\n569\n00:27:52.179 --> 00:27:55.114\nAnd I'll just say that I was pretty\nshocked that Zork wasn't what was\n\n570\n00:27:55.114 --> 00:27:56.746\nactually eating up all my disk space.\n\n571\n00:27:56.746 --> 00:27:58.807\nYeah, that's a whole whopping 16k or\nsomething.\n\n572\n00:27:58.807 --> 00:28:02.300\n[LAUGH] But\nthese are pretty handy commands.\n\n573\n00:28:02.300 --> 00:28:04.890\nDaniel, you mentioned you wished\nyou would have known that earlier.\n\n574\n00:28:04.890 --> 00:28:07.952\nThere's a lot of stuff that can happen,\nusually centering around log files.\n\n575\n00:28:07.952 --> 00:28:12.116\nWhere some service starts crashing on your\nsystem, or some daemon is restarting, and\n\n576\n00:28:12.116 --> 00:28:13.382\nit floods your log files.\n\n577\n00:28:13.382 --> 00:28:16.256\nIt fills up your hard drives, and\ndu is a great way to find that.\n\n578\n00:28:16.256 --> 00:28:19.310\nSo a wonderful troubleshooting tool,\nnot just an informational tool.\n\n579\n00:28:19.310 --> 00:28:20.932\n&gt;&gt; All right, well, Don,\nthanks for joining us today.\n\n580\n00:28:20.932 --> 00:28:24.300\nWe appreciate your time, and we appreciate\nour audience out there for watching.\n\n581\n00:28:24.300 --> 00:28:26.092\nBut as I've said,\nwe've run out of time for this episode.\n\n582\n00:28:26.092 --> 00:28:27.991\nCome back for more though,\nwe've got plenty to come.\n\n583\n00:28:27.991 --> 00:28:30.999\nSigning off for ITProTV,\nI've been your host, Daniel Lowrie.\n\n584\n00:28:30.999 --> 00:28:31.982\n&gt;&gt; And I'm Don Pezet.\n\n585\n00:28:31.982 --> 00:28:33.498\n&gt;&gt; And we'll see you next time.\n\n586\n00:28:33.498 --> 00:28:40.704\n[MUSIC]\n\n587\n00:28:40.704 --> 00:28:43.964\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "235066420"
        },
        {
          "description": "In this episode, Don explains how difficult it can be to find files inside of a Linux system due to distribution fragmentation. He then demonstrates numerous methods that can be used to locate files quickly and easily. Specifically, he demonstrates the which, whereis, locate, find and grep commands.",
          "length": "1579",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-3-1-finding_files-092217.00_26_06_10.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-3-1-finding_files-092217.00_26_06_10.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-3-1-finding_files-092217.00_26_06_10.Still001-sm.jpg",
          "title": "Finding Files",
          "transcript": "WEBVTT\n\n1\n00:00:00.138 --> 00:00:06.185\nWelcome to ITPRO.TV I'm your host,\nDon Pezet.\n\n2\n00:00:06.185 --> 00:00:07.088\n[CROSSTALK]\n\n3\n00:00:07.088 --> 00:00:08.336\n[MUSIC]\n\n4\n00:00:08.336 --> 00:00:12.310\n&gt;&gt; You're watching ITPRO.TV.\n\n5\n00:00:12.310 --> 00:00:14.264\n&gt;&gt; All right, greetings everyone and\n\n6\n00:00:14.264 --> 00:00:17.203\nwelcome back to another\ngreat episode of ITPRO.TV.\n\n7\n00:00:17.203 --> 00:00:18.443\nI'm your host, Daniel Lowrie.\n\n8\n00:00:18.443 --> 00:00:21.039\nAnd in today's episode,\nwe have a treat for you.\n\n9\n00:00:21.039 --> 00:00:24.152\nWe're doing Linux in the, or\n[LAUGH] command line Linux stuff.\n\n10\n00:00:24.152 --> 00:00:25.486\n&gt;&gt; [LAUGH]\n&gt;&gt; That's what we've been working on.\n\n11\n00:00:25.486 --> 00:00:28.380\nDon's laughing at me because I'm\nbutchering our intro here, but\n\n12\n00:00:28.380 --> 00:00:29.626\nthat's what we're doing.\n\n13\n00:00:29.626 --> 00:00:32.965\nAnd joining us today,\nthe laughter is coming from Mr. Don Pezet.\n\n14\n00:00:32.965 --> 00:00:34.695\n&gt;&gt; [LAUGH]\n&gt;&gt; Don, welcome to the show.\n\n15\n00:00:34.695 --> 00:00:35.764\nHow are you, Mr. Funny Man?\n\n16\n00:00:35.764 --> 00:00:37.251\n[LAUGH]\n&gt;&gt; Hey, I'm doing great, and\n\n17\n00:00:37.251 --> 00:00:39.126\nnow that we've set the bar at\nthat high level of quality,\n\n18\n00:00:39.126 --> 00:00:39.961\nI know I can live up to it.\n\n19\n00:00:39.961 --> 00:00:40.998\n&gt;&gt; [LAUGH] That's right.\n\n20\n00:00:40.998 --> 00:00:41.670\nWell, I could help you out.\n\n21\n00:00:41.670 --> 00:00:46.496\n&gt;&gt; [LAUGH] We're going to be finding\nfiles and this is a fun episode for\n\n22\n00:00:46.496 --> 00:00:49.230\nme because I lose stuff all the time.\n\n23\n00:00:49.230 --> 00:00:52.430\nI can't remember where I put things in the\nfile system, and then I gotta find them,\n\n24\n00:00:52.430 --> 00:00:57.770\nand in the Linux world,\nwe actually have a ton of ways to find it.\n\n25\n00:00:57.770 --> 00:01:00.100\nAlmost all of which\nare faster than the GUI.\n\n26\n00:01:00.100 --> 00:01:03.631\nIn the GUI, you have the ability, usually\nthrough whatever your file manager is,\n\n27\n00:01:03.631 --> 00:01:06.880\nlike Nautilus where you can go in and\ndo a search and it'll find files.\n\n28\n00:01:06.880 --> 00:01:07.790\nBut they're all slow.\n\n29\n00:01:07.790 --> 00:01:09.100\nI've tried them all, they're all slow.\n\n30\n00:01:09.100 --> 00:01:10.690\nI don't know why, they just are.\n\n31\n00:01:10.690 --> 00:01:14.861\nBut when you go to the command line,\nwe have a virtual cornucopia of utilities\n\n32\n00:01:14.861 --> 00:01:19.113\nthat we can [LAUGH] use to locate files\nand locate information across the drive.\n\n33\n00:01:19.113 --> 00:01:21.902\nAnd so I wanna walk you\nthrough a handful of those,\n\n34\n00:01:21.902 --> 00:01:25.169\nall of which have saved my bacon\nat some point in my career.\n\n35\n00:01:25.169 --> 00:01:27.795\n[LAUGH] So we'll get a chance to see\nthem right here in this episode.\n\n36\n00:01:27.795 --> 00:01:28.390\n&gt;&gt; All right, Don.\n\n37\n00:01:28.390 --> 00:01:31.554\nWell let's pick the first fruit\nout of that veritable cornucopia.\n\n38\n00:01:31.554 --> 00:01:32.977\nWhat are we going to do?\n\n39\n00:01:32.977 --> 00:01:36.698\n&gt;&gt; Let's start off with the which command,\nwhich-\n\n40\n00:01:36.698 --> 00:01:38.419\n&gt;&gt; So top hat, pointy broom, cauldron?\n\n41\n00:01:38.419 --> 00:01:40.068\n&gt;&gt; We're gonna burn it at the stake.\n\n42\n00:01:40.068 --> 00:01:44.023\n&gt;&gt; [LAUGH]\n&gt;&gt; This is going on [CROSSTALK]\n\n43\n00:01:44.023 --> 00:01:45.177\n&gt;&gt; We're having fun.\n\n44\n00:01:45.177 --> 00:01:47.787\n&gt;&gt; So if you watched all of these\nepisodes, I've actually already used\n\n45\n00:01:47.787 --> 00:01:50.770\nthe which command in some other episodes\nlike when we were setting our Shells.\n\n46\n00:01:50.770 --> 00:01:54.630\nIf I want to set my default shell,\nI need to know where the shell was stored.\n\n47\n00:01:54.630 --> 00:01:57.390\nYou might have a utility that you run,\nthat you run all the time, but\n\n48\n00:01:57.390 --> 00:02:01.630\nyou have no idea where it is on the file\nsystem thanks to the search path.\n\n49\n00:02:01.630 --> 00:02:02.970\nIt finds things for me.\n\n50\n00:02:02.970 --> 00:02:07.219\nSo maybe for example,\nI start using the nano text editor.\n\n51\n00:02:07.219 --> 00:02:09.519\nThis is where you know I'm\nlying cuz I don't use it.\n\n52\n00:02:09.519 --> 00:02:13.460\n[LAUGH] So I'm gonna go to my command\nline here and I'm just gonna run nano and\n\n53\n00:02:13.460 --> 00:02:15.349\nthere it is, the nano text editor.\n\n54\n00:02:15.349 --> 00:02:15.900\nIt's amazing.\n\n55\n00:02:15.900 --> 00:02:17.987\n&gt;&gt; [LAUGH]\n&gt;&gt; Now where did that come from?\n\n56\n00:02:17.987 --> 00:02:21.019\nWhere is that executable actually stored?\n\n57\n00:02:21.019 --> 00:02:25.000\nAnd you can use the which command,\nwhich is not W-I-T-C-H.\n\n58\n00:02:25.000 --> 00:02:27.103\n&gt;&gt; [LAUGH]\n&gt;&gt; But W-H-I-C-H, and\n\n59\n00:02:27.103 --> 00:02:28.469\nI can say which nano.\n\n60\n00:02:28.469 --> 00:02:29.250\nAnd it'll tell me.\n\n61\n00:02:29.250 --> 00:02:32.820\nIt'll say yeah yeah yeah,\nthat's in /user/bin/nano.\n\n62\n00:02:32.820 --> 00:02:33.496\nThat's where it's at.\n\n63\n00:02:33.496 --> 00:02:35.540\nSo now I've found that binary.\n\n64\n00:02:35.540 --> 00:02:40.211\nAnd the which command works great when I'm\nlooking for binary executables like this.\n\n65\n00:02:40.211 --> 00:02:41.870\nBut it's not perfect.\n\n66\n00:02:41.870 --> 00:02:47.070\nWhat the which command does is it\nlooks for the very first match.\n\n67\n00:02:47.070 --> 00:02:50.880\nIn other words, there could be more\nthan one copy of nano on my disk or\n\n68\n00:02:50.880 --> 00:02:55.690\nnano could have other supporting files\non the disk and witch won't find them.\n\n69\n00:02:55.690 --> 00:02:59.128\nIt finds the very first one and\nreturns it.\n\n70\n00:02:59.128 --> 00:03:01.150\nThat means it goes quick, which is nice.\n\n71\n00:03:01.150 --> 00:03:05.100\nAnd it usually gonna find the right one,\nbut occasionally it doesn't, so\n\n72\n00:03:05.100 --> 00:03:05.860\nit's not perfect.\n\n73\n00:03:05.860 --> 00:03:07.910\nBut if you're in a hurry,\nlike in the shell episode.\n\n74\n00:03:07.910 --> 00:03:09.676\nI just didn't know where the shell was,\nand\n\n75\n00:03:09.676 --> 00:03:11.269\nthe first one is gonna be the right hit.\n\n76\n00:03:11.269 --> 00:03:14.230\nThat's what I want, and\nI used that which command.\n\n77\n00:03:14.230 --> 00:03:18.536\nBut you can also do, where is.\n\n78\n00:03:18.536 --> 00:03:23.062\nProbably the first full on appropriately\nnamed UNIX command you will ever see.\n\n79\n00:03:23.062 --> 00:03:24.043\n&gt;&gt; [LAUGH]\n&gt;&gt; They didn't drop\n\n80\n00:03:24.043 --> 00:03:24.854\nthe vowels or anything.\n\n81\n00:03:24.854 --> 00:03:25.385\n&gt;&gt; Nah.\n\n82\n00:03:25.385 --> 00:03:27.293\n&gt;&gt; It's just, where is, and\nthen you can type something.\n\n83\n00:03:27.293 --> 00:03:29.080\nIt's like you say where is nano?\n\n84\n00:03:29.080 --> 00:03:34.610\nAnd when I run that,\nthis one gives me more than one hit, okay?\n\n85\n00:03:34.610 --> 00:03:36.480\nSo it shows,\nif we look at the output here,\n\n86\n00:03:36.480 --> 00:03:40.330\nit shows the search term that I used,\nnano, right?\n\n87\n00:03:40.330 --> 00:03:45.804\nAnd, it found /user/bin/nano,\nthat was the first hit.\n\n88\n00:03:45.804 --> 00:03:51.125\nBut then it found /user/share/nano.\n\n89\n00:03:51.125 --> 00:03:53.680\nWell, I have a second copy, that binary.\n\n90\n00:03:53.680 --> 00:03:55.546\nApparently, I didn't\nknow that part of second.\n\n91\n00:03:55.546 --> 00:03:59.176\nWe got a second copy of that binary and\nmaybe I did that on purpose,\n\n92\n00:03:59.176 --> 00:04:02.146\nmaybe some software did,\nmaybe that was just a link,\n\n93\n00:04:02.146 --> 00:04:05.919\nthat might not even be a real file,\nwe'd have to go and check it out.\n\n94\n00:04:05.919 --> 00:04:07.928\nBut it also found the man page.\n\n95\n00:04:07.928 --> 00:04:11.930\nOr nano.one.gz, right,\nit's gzipped in archived.\n\n96\n00:04:11.930 --> 00:04:14.910\nBut notice how the file extension\ndidn't count towards the name here.\n\n97\n00:04:14.910 --> 00:04:16.600\nIt found it and it returned it.\n\n98\n00:04:16.600 --> 00:04:20.423\nSo where is,\nis a much more thorough kind of search.\n\n99\n00:04:20.423 --> 00:04:25.400\nSo in that shell episode where I\nsaid which bash and I found there\n\n100\n00:04:25.400 --> 00:04:30.190\nwas /user/bin/bash, I also could have\nalso done where is bash and it would have\n\n101\n00:04:30.190 --> 00:04:35.000\nlooked and found it and it finds that\nsame file as well as the man file for it.\n\n102\n00:04:35.000 --> 00:04:36.310\nWe locate it, we can spot it.\n\n103\n00:04:36.310 --> 00:04:39.895\nSo those to two commands are pretty\ninterchangeable, it's just whether or\n\n104\n00:04:39.895 --> 00:04:43.378\nnot you want to get the first hit and\nrun with it, or if you want to get more.\n\n105\n00:04:43.378 --> 00:04:44.588\nIt's like when you go to Google and\n\n106\n00:04:44.588 --> 00:04:46.345\nthey've got the are you\nfeeling lucky button.\n\n107\n00:04:46.345 --> 00:04:49.424\n&gt;&gt; Yeah.\n&gt;&gt; Which is the I'm feeling lucky button,\n\n108\n00:04:49.424 --> 00:04:53.600\nand the where is, is the give me\nthe Yahoo results or something.\n\n109\n00:04:53.600 --> 00:04:54.712\nI don't know.\n\n110\n00:04:54.712 --> 00:04:55.480\nKinda deluge.\n\n111\n00:04:55.480 --> 00:04:58.531\n&gt;&gt; Now Don, will that work with\nthings like, we use stars and\n\n112\n00:04:58.531 --> 00:05:01.854\nperiods and stuff as kind of like\nwild cards in other episodes.\n\n113\n00:05:01.854 --> 00:05:05.880\nIf I just run bash, and I know bash is\nlike in the command that I'm looking for,\n\n114\n00:05:05.880 --> 00:05:08.150\nbut it's not the command I'm looking for.\n\n115\n00:05:08.150 --> 00:05:09.055\nDoes that work?\n\n116\n00:05:09.055 --> 00:05:10.760\nOr does it just look for prompt command?\n\n117\n00:05:10.760 --> 00:05:11.759\n&gt;&gt; It will actually do it.\n\n118\n00:05:11.759 --> 00:05:16.466\nSo if I do which * bash *, it will try it.\n\n119\n00:05:16.466 --> 00:05:17.883\nBut it doesn't work.\n\n120\n00:05:17.883 --> 00:05:20.830\nIt's one of those things where you\ncan do it, but it doesn't work.\n\n121\n00:05:20.830 --> 00:05:22.307\nAnd if you look, I've just ran that.\n\n122\n00:05:22.307 --> 00:05:27.790\nAnd see how it says, it looked for\nit and it did run the command, right?\n\n123\n00:05:27.790 --> 00:05:31.288\nBut it wasn't able to find\nthe literal star bash star.\n\n124\n00:05:31.288 --> 00:05:34.875\nIt treated those stars as being\nliteral and I can't remember, but\n\n125\n00:05:34.875 --> 00:05:36.741\nI think where is, is the same way.\n\n126\n00:05:36.741 --> 00:05:40.670\nLet's give a shot here and yeah, so\nyou just kinda recruit that one.\n\n127\n00:05:40.670 --> 00:05:43.373\nSo it didn't find it there, so\nwildcards don't work so well.\n\n128\n00:05:43.373 --> 00:05:46.268\nIt expects you to know\nthe name of the command.\n\n129\n00:05:46.268 --> 00:05:49.873\nAnd if you don't know the name of\nthe command, that's where you can go to\n\n130\n00:05:49.873 --> 00:05:53.539\napropos or one of those other commands\nto be able to find it and then go in and\n\n131\n00:05:53.539 --> 00:05:54.923\nactually locate the file.\n\n132\n00:05:54.923 --> 00:05:57.310\nSo wildcard is not so\nfriendly on this one.\n\n133\n00:05:57.310 --> 00:06:01.796\n&gt;&gt; All right, well Don, sometimes I've\nrun into this, I've tried to use a which,\n\n134\n00:06:01.796 --> 00:06:05.308\nI've tried to use where is, and\nI know it exists on the system but\n\n135\n00:06:05.308 --> 00:06:07.370\nit comes back with nothing.\n\n136\n00:06:07.370 --> 00:06:09.046\n&gt;&gt; All right.\n\n137\n00:06:09.046 --> 00:06:09.828\n&gt;&gt; What is that about?\n\n138\n00:06:09.828 --> 00:06:12.082\n&gt;&gt; There's one big scenario\nwhere that normally happens and\n\n139\n00:06:12.082 --> 00:06:14.060\nit's what they called\nshell built-in commands.\n\n140\n00:06:14.060 --> 00:06:16.020\nSo there's some commands like exit.\n\n141\n00:06:16.020 --> 00:06:19.080\nIf I type exit right now,\nI know that it works.\n\n142\n00:06:19.080 --> 00:06:22.620\nIn bash, it'll exit and\ntake me out of the bash shell, right?\n\n143\n00:06:22.620 --> 00:06:26.970\nBut if I do a which exit,\nit doesn't find it.\n\n144\n00:06:26.970 --> 00:06:30.582\nIt says, no exit in, and then it lists\nout all the folders that it searched in.\n\n145\n00:06:30.582 --> 00:06:34.829\nOr if I do a whereis exit,\nit doesn't find it, right?\n\n146\n00:06:34.829 --> 00:06:38.030\nWell actually it did,\nit found the man pages, apparently.\n\n147\n00:06:38.030 --> 00:06:41.787\nBut not the actual, there's no binary\nin this list, these are all man pages.\n\n148\n00:06:41.787 --> 00:06:43.097\nOr the exit command, right?\n\n149\n00:06:43.097 --> 00:06:44.127\nSo whereis did a better job.\n\n150\n00:06:44.127 --> 00:06:44.663\n&gt;&gt; Right.\n\n151\n00:06:44.663 --> 00:06:46.407\n&gt;&gt; But\nit still didn't actually find the command.\n\n152\n00:06:46.407 --> 00:06:47.940\nWhere the heck is that\ncommand coming from?\n\n153\n00:06:47.940 --> 00:06:51.275\nWell, I know that it's a shell built in,\nso it's built into the Bash shell.\n\n154\n00:06:51.275 --> 00:06:55.438\nSo Bash is the actual executable, not\nexit, and that's why it's not showing up.\n\n155\n00:06:55.438 --> 00:07:00.087\nBut if you didn't know that, a quick way\nto verify is to use the type command.\n\n156\n00:07:00.087 --> 00:07:01.943\nIf you do type and\nthen you type the command.\n\n157\n00:07:01.943 --> 00:07:06.260\nIf I say like type ls,\nit tells me that ls is a command.\n\n158\n00:07:06.260 --> 00:07:10.460\nWell, in my case,\nls is more than a command, ls is an alias.\n\n159\n00:07:10.460 --> 00:07:16.773\nIn Red Hat, they have alias ls\nto actually run ls- -color=auto.\n\n160\n00:07:16.773 --> 00:07:20.540\nAnd that's why when I run ls, it's all\nnice and pretty with colors, right?\n\n161\n00:07:20.540 --> 00:07:21.903\nCuz they've aliased that.\n\n162\n00:07:21.903 --> 00:07:27.080\nBut if I do type CP, well,\nthat's just the copy command.\n\n163\n00:07:27.080 --> 00:07:29.491\nIt's /user/bin/cp, right?\n\n164\n00:07:29.491 --> 00:07:31.736\nThat's where it's coming from,\nit's just a regular old binary.\n\n165\n00:07:31.736 --> 00:07:37.930\nBut if I do type exit, it's going to tell\nme that's not a binary on the file system.\n\n166\n00:07:37.930 --> 00:07:39.100\nIt's a shell built in.\n\n167\n00:07:39.100 --> 00:07:43.380\nSo if we can't find a binary,\nthere's a chance that it's a built in,\n\n168\n00:07:43.380 --> 00:07:45.360\nthat it's coming from somewhere else.\n\n169\n00:07:45.360 --> 00:07:48.664\nAnd if you do type followed by the name\nof the command that you're issuing,\n\n170\n00:07:48.664 --> 00:07:50.298\nyou can find that out pretty easily.\n\n171\n00:07:50.298 --> 00:07:53.581\nSo it's a neat command to figure\nout why you've got this, in theory,\n\n172\n00:07:53.581 --> 00:07:54.591\ninvisible command.\n\n173\n00:07:54.591 --> 00:07:56.570\n&gt;&gt; [LAUGH]\n&gt;&gt; It works, but we just can't find it.\n\n174\n00:07:56.570 --> 00:07:57.220\nType will tell us.\n\n175\n00:07:57.220 --> 00:07:57.812\n&gt;&gt; Well, this is great.\n\n176\n00:07:57.812 --> 00:08:01.396\nNow I can find out where all my commands\nare coming from, or at least most of them,\n\n177\n00:08:01.396 --> 00:08:03.894\nthe vast majority,\nwith these three simple commands.\n\n178\n00:08:03.894 --> 00:08:05.525\nVery, very nice for me.\n\n179\n00:08:05.525 --> 00:08:07.469\nBut I also have files that I lose.\n\n180\n00:08:07.469 --> 00:08:08.831\nI'm like you, Don,\nI lose stuff all the time.\n\n181\n00:08:08.831 --> 00:08:10.320\nI'm like, where the heck did\nI put that stinking file?\n\n182\n00:08:10.320 --> 00:08:11.070\nWhere's that directory?\n\n183\n00:08:11.070 --> 00:08:12.360\nWhere's this, where's that?\n\n184\n00:08:12.360 --> 00:08:15.190\nAnd I need to find files.\n\n185\n00:08:15.190 --> 00:08:15.900\nLet's dive into that.\n\n186\n00:08:15.900 --> 00:08:17.310\nHow do we start finding files?\n\n187\n00:08:17.310 --> 00:08:19.765\n&gt;&gt; All right, so\nwe've been finding commands so far, but\n\n188\n00:08:19.765 --> 00:08:20.655\nfinding a file is different.\n\n189\n00:08:20.655 --> 00:08:24.015\nSo for example, I've got this\nfile right here pastlist.txt.\n\n190\n00:08:24.015 --> 00:08:25.755\nSo let's say I didn't know where that was.\n\n191\n00:08:25.755 --> 00:08:26.735\nActually, I did a bad job.\n\n192\n00:08:26.735 --> 00:08:28.765\nI stuck it in my home directory,\nnot in my documents folder.\n\n193\n00:08:28.765 --> 00:08:31.045\nSo this is an example of\na file that I would lose.\n\n194\n00:08:31.045 --> 00:08:36.700\nIf I can't remember where I put this\nthing, I can search for it, right?\n\n195\n00:08:36.700 --> 00:08:40.450\nAnd there's a few different ways to\nsearch for a file on your system, but\n\n196\n00:08:40.450 --> 00:08:44.120\none of the best ways is by\nusing the locate command.\n\n197\n00:08:44.120 --> 00:08:47.430\nLocate is a really cool command that will\n\n198\n00:08:47.430 --> 00:08:51.970\nvery very quickly scan across your system\nto be able to find out where that file is.\n\n199\n00:08:51.970 --> 00:08:56.280\nSo I can say, locate passlist.txt.\n\n200\n00:08:56.280 --> 00:09:00.590\nAnd it immediately returned slash home\nslash disposed slash past list dot txt.\n\n201\n00:09:00.590 --> 00:09:03.790\nOr if I looked for like a read me.\n\n202\n00:09:03.790 --> 00:09:05.200\nI'm looking for read me files.\n\n203\n00:09:05.200 --> 00:09:10.240\nAnd here's all these read me files and\nnotice how it's not counting extensions,\n\n204\n00:09:10.240 --> 00:09:13.140\nit's looking like it's finding\nthese read me dot texts and so on.\n\n205\n00:09:13.140 --> 00:09:18.290\nAnd it's finding a ton of these spread all\nacross the place, and so I can look and\n\n206\n00:09:18.290 --> 00:09:23.490\ntry to find the one that I'm hunting and\nI locate that to read it.\n\n207\n00:09:23.490 --> 00:09:26.840\nSo, locate's big advantage\nis that it's just so fast.\n\n208\n00:09:26.840 --> 00:09:28.553\n&gt;&gt; Yeah.\n&gt;&gt; It finds that data really quickly and\n\n209\n00:09:28.553 --> 00:09:30.190\nreturns it just as fast as the GUI does.\n\n210\n00:09:30.190 --> 00:09:34.190\n&gt;&gt; And it's obviously looking for\nthat string of text that you give it\n\n211\n00:09:34.190 --> 00:09:38.710\nregardless of where it exists, if it has\n.txt after it, maybe something before it,\n\n212\n00:09:38.710 --> 00:09:41.530\nit's looking for\nthat actual string of characters right?\n\n213\n00:09:41.530 --> 00:09:44.220\n&gt;&gt; Yes and while it seems like\nit's all sunshine and rainbows,\n\n214\n00:09:44.220 --> 00:09:46.410\nhere's the greatest command ever,\nwhy don't I use it always?\n\n215\n00:09:46.410 --> 00:09:49.430\nIt does actually have one\nlittle negative to it.\n\n216\n00:09:49.430 --> 00:09:50.580\nThe way that it searches so\n\n217\n00:09:50.580 --> 00:09:56.400\nfast is that it has pre-indexed all\nof your files ahead of time, right?\n\n218\n00:09:56.400 --> 00:10:00.180\nSo it's built a database of all\nthe files in your file system.\n\n219\n00:10:00.180 --> 00:10:02.040\nAnd so when I run the locate command,\n\n220\n00:10:02.040 --> 00:10:05.270\nit's not actually scanning\nacross all of my disks.\n\n221\n00:10:05.270 --> 00:10:07.980\nIt's just looking at this database,\nand that's why it's so fast.\n\n222\n00:10:07.980 --> 00:10:12.530\nWhen you use the GUI, it's not only using\nthe database, it's actually looking and\n\n223\n00:10:12.530 --> 00:10:14.460\nparsing through all the files,\nand that takes time.\n\n224\n00:10:14.460 --> 00:10:16.470\nThis is fast, because it's got a database.\n\n225\n00:10:16.470 --> 00:10:19.540\nBut as a result,\nthe database could be missing something.\n\n226\n00:10:19.540 --> 00:10:25.925\nSo for example, if I create a file,\nlike test123.txt in my home directory,\n\n227\n00:10:25.925 --> 00:10:30.944\nand then I do a locate for test123.txt.\n\n228\n00:10:30.944 --> 00:10:35.893\nIt didn't find it and\nthe reason is I just made that file and\n\n229\n00:10:35.893 --> 00:10:38.610\nit's not in the database yet.\n\n230\n00:10:38.610 --> 00:10:42.790\nYou'll have to look at your system,\nmost systems have a chron job that runs\n\n231\n00:10:42.790 --> 00:10:46.520\nperiodically that will\nupdate the locate database.\n\n232\n00:10:46.520 --> 00:10:49.440\nAnd it might be tied to your user,\nor if you're the administrator,\n\n233\n00:10:49.440 --> 00:10:53.020\nyou can look inside of /etc/cron,\nbut even for\n\n234\n00:10:53.020 --> 00:10:57.900\nyou as a user, you can do like,\ncrontab -e, to look at your cron jobs.\n\n235\n00:10:57.900 --> 00:10:58.920\nAnd I don't have any.\n\n236\n00:10:58.920 --> 00:10:59.520\n&gt;&gt; Yeah [LAUGH].\n\n237\n00:10:59.520 --> 00:11:01.450\n&gt;&gt; So I'm not updating my database.\n\n238\n00:11:01.450 --> 00:11:02.640\nSo when's it gonna update?\n\n239\n00:11:02.640 --> 00:11:05.570\nWell whenever the system decides\nthat it is time to update.\n\n240\n00:11:05.570 --> 00:11:08.720\nSo, if you want to run locate and\nknow that you are looking\n\n241\n00:11:08.720 --> 00:11:13.057\nat everything you’ll need to update\nthat database by running update dB.\n\n242\n00:11:13.057 --> 00:11:15.810\nI’m pretty sure you need to\nbe an administrator for that.\n\n243\n00:11:15.810 --> 00:11:19.260\nSo I’m going to pseudo update dB and\nit’s going to run and\n\n244\n00:11:19.260 --> 00:11:23.260\nthat service kicks off in the background\nand it is now indexing my disks.\n\n245\n00:11:23.260 --> 00:11:27.730\nNow, the larger your disks, the more data\nyou have, the longer this will take.\n\n246\n00:11:27.730 --> 00:11:31.000\nThe faster your disks, the smaller\nthey are, the faster this will go.\n\n247\n00:11:31.000 --> 00:11:34.410\nMy disks aren't that large and\ntheir SSD's, so it should go pretty quick,\n\n248\n00:11:34.410 --> 00:11:36.915\nand if I repeat that locate.\n\n249\n00:11:36.915 --> 00:11:38.675\nThere we go, now it found it, all right?\n\n250\n00:11:38.675 --> 00:11:41.635\nSo understand that locate is really fast\n\n251\n00:11:41.635 --> 00:11:44.965\nbecause it's using potentially\noutdated information.\n\n252\n00:11:44.965 --> 00:11:47.555\nSo if you wanna guarantee that\nyou're scanning everything,\n\n253\n00:11:47.555 --> 00:11:50.495\nmake sure you run update db first,\nand then you can do locate and\n\n254\n00:11:50.495 --> 00:11:51.675\nyou'll find that stuff really fast.\n\n255\n00:11:51.675 --> 00:11:53.405\n&gt;&gt; Don loves the locate command.\n\n256\n00:11:53.405 --> 00:11:57.430\nEver since I've discovered it,\nit's been a great thing for me.\n\n257\n00:11:57.430 --> 00:12:00.280\nBut there is also the granddaddy of all,\n\n258\n00:12:00.280 --> 00:12:04.570\nfinding utilities inside of our\nsystem which is skill find, right?\n\n259\n00:12:04.570 --> 00:12:06.080\n&gt;&gt; Right, that's the find command.\n\n260\n00:12:06.080 --> 00:12:08.850\nThe find command is like\nthe original way of searching for\n\n261\n00:12:08.850 --> 00:12:09.630\nthis stuff, and with find,\n\n262\n00:12:09.630 --> 00:12:14.340\nwe don't have a database, we don't have\nsome kind of precognition or anything.\n\n263\n00:12:14.340 --> 00:12:17.790\nIt just says, you know, screw it, I'm\ngoing to scan the whole file system and\n\n264\n00:12:17.790 --> 00:12:20.350\nI'll find every file that\nmatches your criteria and\n\n265\n00:12:20.350 --> 00:12:22.760\nif it takes me an hour to do it,\nit'll take me an hour to do it, right.\n\n266\n00:12:22.760 --> 00:12:24.220\nThat's just how it is.\n\n267\n00:12:24.220 --> 00:12:27.010\nFind will scan through looking at every\n\n268\n00:12:27.010 --> 00:12:30.420\nsingle file until it finds\nwhat you tell it to look for.\n\n269\n00:12:30.420 --> 00:12:33.940\nThe nice thing about the find command,\nit doesn't need updates.\n\n270\n00:12:33.940 --> 00:12:35.850\nYou know it's always looking\nat the current data.\n\n271\n00:12:35.850 --> 00:12:38.070\nIt's slower but\nyou get this better search.\n\n272\n00:12:38.070 --> 00:12:40.480\nAnd with find we can tell it to look for\nall sorts of things.\n\n273\n00:12:40.480 --> 00:12:46.790\nNow my normal method for using find is to\ncome in and tell it that I want to search.\n\n274\n00:12:46.790 --> 00:12:48.720\nI'll say find and then you tell it where.\n\n275\n00:12:48.720 --> 00:12:51.000\nSo I might want to search\nmy home directory.\n\n276\n00:12:51.000 --> 00:12:53.420\nI'll say tilt slash, or\nI'm in my home directory.\n\n277\n00:12:53.420 --> 00:12:54.400\nI could say dot slash, I guess.\n\n278\n00:12:54.400 --> 00:12:57.770\nBut I want to search this directory.\n\n279\n00:12:57.770 --> 00:13:02.750\nAnd then I'm gonna search by name, so\nI'll do dash name and then the name that\n\n280\n00:13:02.750 --> 00:13:07.700\nI wanna find, in my case,\nI want to look for \"passlist.txt.\" And\n\n281\n00:13:07.700 --> 00:13:11.870\nI'll run that and it'll scan through\nmy home directory and it will find it.\n\n282\n00:13:11.870 --> 00:13:15.400\nThat is the most basic\nform of the find command.\n\n283\n00:13:15.400 --> 00:13:16.520\nYou basically give it two things.\n\n284\n00:13:16.520 --> 00:13:19.780\nThe first thing is a directory\nyou want to search.\n\n285\n00:13:19.780 --> 00:13:23.640\nAnd then after that, the criteria\nyou're looking for and in this example,\n\n286\n00:13:23.640 --> 00:13:26.260\nI used name as what I was looking for.\n\n287\n00:13:26.260 --> 00:13:27.810\nBut I mean, you can look for other things,\n\n288\n00:13:27.810 --> 00:13:29.210\nthe find command's\nactually really powerful,\n\n289\n00:13:29.210 --> 00:13:32.660\nyou can search based on file permissions,\nyou can search based on file size.\n\n290\n00:13:32.660 --> 00:13:36.290\nMaybe I want to look\ninside of a folder and\n\n291\n00:13:36.290 --> 00:13:41.670\nfind any file that's over a certain size,\nright, so in the last episode we found\n\n292\n00:13:41.670 --> 00:13:47.380\nwhere I had some some iso images that\nwere eating up a lot of space, right.\n\n293\n00:13:47.380 --> 00:13:50.110\nSo is I go into /MNT/Storage/ISOs.\n\n294\n00:13:50.110 --> 00:13:53.780\nI've got a bunch of ISO images.\n\n295\n00:13:53.780 --> 00:13:57.570\nRight, all this different software that I\nwork with, they're all occupying space.\n\n296\n00:13:57.570 --> 00:14:00.680\nAnd I might say to myself,\nman I'll bet some of these are just\n\n297\n00:14:00.680 --> 00:14:04.420\nbigger than they should be, I want to see\nanyone that's over four gigs in size.\n\n298\n00:14:04.420 --> 00:14:05.650\nAnd if it's over four gigs in size,\n\n299\n00:14:05.650 --> 00:14:09.300\nI probably need to evaluate whether\nI really need to keep that disk.\n\n300\n00:14:09.300 --> 00:14:12.950\nAnd so I can do, I could have\njust done an ls and [LAUGH] but\n\n301\n00:14:12.950 --> 00:14:17.170\nif I wanted to search across my entire\ndisk and find files everywhere that\n\n302\n00:14:17.170 --> 00:14:19.700\nare over four gigs in size,\nmaybe we're running low on disk space.\n\n303\n00:14:19.700 --> 00:14:20.760\nI just wanna search everywhere.\n\n304\n00:14:20.760 --> 00:14:23.890\nI could say \"find\" and then I could\npoint to where I wanted it to go.\n\n305\n00:14:23.890 --> 00:14:26.050\nLike I could just go to\nthe root if I wanted.\n\n306\n00:14:26.050 --> 00:14:27.170\nRight?\nI'm not gonna do that,\n\n307\n00:14:27.170 --> 00:14:32.170\nI'll do \"/mount/storage/isos\" Alright,\nI'm gonna look in that folder.\n\n308\n00:14:32.170 --> 00:14:35.720\nAnd instead of \"-name\"\nI'm gonna do \"-size\".\n\n309\n00:14:35.720 --> 00:14:39.810\nAnd when I specify \"-size\",\nI need to tell it what I'm looking for,\n\n310\n00:14:39.810 --> 00:14:45.190\nand dash size,\nit actually defaults to a specific size.\n\n311\n00:14:45.190 --> 00:14:47.600\nI don't know a specific size.\n\n312\n00:14:47.600 --> 00:14:50.330\nI want it to be dynamic,\nI'm going to use the plus sign so\n\n313\n00:14:50.330 --> 00:14:53.490\nit knows I'm talking about files\ngreater than a particular size.\n\n314\n00:14:53.490 --> 00:14:56.490\nYou can do a minus and that'd be\nfiles smaller than a certain size.\n\n315\n00:14:56.490 --> 00:14:59.920\nI'll save for G like that.\n\n316\n00:14:59.920 --> 00:15:03.190\nSo it knows now I'm looking for\nfiles over four gigs in size.\n\n317\n00:15:03.190 --> 00:15:05.790\nSo you could do four M,\nit would be four megs.\n\n318\n00:15:05.790 --> 00:15:07.730\nFour K for kilobytes.\n\n319\n00:15:07.730 --> 00:15:09.840\nFor bytes it's actually four C.\n\n320\n00:15:09.840 --> 00:15:11.830\nI dunno why it's C instead of B,\nbut it is.\n\n321\n00:15:11.830 --> 00:15:12.740\n&gt;&gt; That's right.\n\n322\n00:15:12.740 --> 00:15:13.840\n&gt;&gt; So you have some different ones.\n\n323\n00:15:13.840 --> 00:15:15.390\nYou can look at the man page for fine,\n\n324\n00:15:15.390 --> 00:15:17.550\nand you'll see where they lay\nout all the different stuff.\n\n325\n00:15:17.550 --> 00:15:19.220\nBut I'm gonna look through here and\n\n326\n00:15:19.220 --> 00:15:22.240\nit's gonna return any ISO that\nI have that's over four gigs.\n\n327\n00:15:22.240 --> 00:15:24.370\nAnd while the directory had a lot of ISOs,\n\n328\n00:15:24.370 --> 00:15:26.640\nthere's only about ten here\nthat are over four gigs.\n\n329\n00:15:26.640 --> 00:15:28.321\nMost of them are ones.\n\n330\n00:15:28.321 --> 00:15:32.480\nBut I got a red hat one that's\nover four gigs and a little.\n\n331\n00:15:32.480 --> 00:15:37.432\nNo Ubuntu which I usually make fun of for\nbeing bloated cuz there's ISO images, so.\n\n332\n00:15:37.432 --> 00:15:40.270\n&gt;&gt; [LAUGH]\n&gt;&gt; So who's right now?\n\n333\n00:15:40.270 --> 00:15:41.135\n&gt;&gt; That's right.\n\n334\n00:15:41.135 --> 00:15:43.660\n&gt;&gt; [LAUGH] All right so\nthat's the find command.\n\n335\n00:15:43.660 --> 00:15:44.540\nI did name.\n\n336\n00:15:44.540 --> 00:15:45.570\nI did size.\n\n337\n00:15:45.570 --> 00:15:47.110\nYou can do a lot more.\n\n338\n00:15:47.110 --> 00:15:48.190\nYou can do permissions.\n\n339\n00:15:48.190 --> 00:15:50.220\nYou can use ands and ors.\n\n340\n00:15:50.220 --> 00:15:54.360\nI can say like if the size\nwas over four gigs.\n\n341\n00:15:54.360 --> 00:15:56.911\nAnd the name and an n dot ISO.\n\n342\n00:15:56.911 --> 00:15:59.084\nAlright, I could be really specific, so\n\n343\n00:15:59.084 --> 00:16:02.249\nyou can do notations like that\nto really get it specific, and\n\n344\n00:16:02.249 --> 00:16:06.175\nkinda tailor what it is you're looking for\nand get that information back.\n\n345\n00:16:06.175 --> 00:16:08.002\nOne warning about the Find command.\n\n346\n00:16:08.002 --> 00:16:13.112\nIf I want to, let's say I just want\nto find ISO images on my disk,\n\n347\n00:16:13.112 --> 00:16:16.437\nand I want to find them anywhere, right?\n\n348\n00:16:16.437 --> 00:16:20.525\nI could do a find slash dash name\nstar dot ISO like that, all right?\n\n349\n00:16:20.525 --> 00:16:23.660\nI'm looking for anything that ends in ISO.\n\n350\n00:16:23.660 --> 00:16:28.980\nWhen I run that as a regular user, I don't\nhave permission to a lot of folders.\n\n351\n00:16:28.980 --> 00:16:33.970\nAnd so, I'm gonna start getting\nmessages that come up and, oops,\n\n352\n00:16:33.970 --> 00:16:39.380\nscrew that up, dash name and\n[INAUDIBLE] Do I have to quote that?\n\n353\n00:16:39.380 --> 00:16:40.530\nI didn't think I had to quote it.\n\n354\n00:16:40.530 --> 00:16:42.470\n&gt;&gt; Yeah,\nI think you do have to quote it actually.\n\n355\n00:16:42.470 --> 00:16:43.430\n&gt;&gt; There we go.\n\n356\n00:16:43.430 --> 00:16:46.270\nSo it starts scanning across and\nyou'll see where it found the ISOs.\n\n357\n00:16:46.270 --> 00:16:47.680\nI did that kind of quick.\n\n358\n00:16:47.680 --> 00:16:51.565\nI put single ticks around the star dot ISO\nso it knew what I was talking about there,\n\n359\n00:16:51.565 --> 00:16:53.722\nso that's what fixed\nmy little error there.\n\n360\n00:16:53.722 --> 00:16:57.980\nBut you'll see where it did find the ISOs,\nso that was good, right?\n\n361\n00:16:57.980 --> 00:17:01.899\nIt found some of the trash, it found some\nin slash mount slash storage slash ISO.\n\n362\n00:17:01.899 --> 00:17:02.960\nThat's good.\n\n363\n00:17:02.960 --> 00:17:07.190\nBut I got a lot of permission\ndenied messages, right?\n\n364\n00:17:07.190 --> 00:17:08.390\nBecause as a regular user,\n\n365\n00:17:08.390 --> 00:17:10.810\nthere's a lot of stuff that\nyou don't have permission to.\n\n366\n00:17:10.810 --> 00:17:15.860\nAnd so you get an error for every one of\nthose, and I actually got a lot of errors.\n\n367\n00:17:15.860 --> 00:17:18.740\nSo when I run the find command like that,\n\n368\n00:17:18.740 --> 00:17:23.490\na lot of times I'll redirect\nthe errors to just throw them away.\n\n369\n00:17:23.490 --> 00:17:25.760\nDon't give me the errors,\njust show me the good stuff!\n\n370\n00:17:25.760 --> 00:17:28.890\nAnd if you want to redirect errors,\nyou can stick a to greater than,\n\n371\n00:17:28.890 --> 00:17:32.025\nthat redirect standard error,\nand you can redirect it,\n\n372\n00:17:32.025 --> 00:17:37.155\njust chuck it into slash dev slash null,\nwhich is the black hole of Linux.\n\n373\n00:17:37.155 --> 00:17:38.990\n&gt;&gt; [CROSSTALK] it's called the bit bucket.\n\n374\n00:17:38.990 --> 00:17:40.060\n&gt;&gt; The bit bucket, yeah!\n\n375\n00:17:40.060 --> 00:17:40.922\nI've heard that expression, too.\n\n376\n00:17:40.922 --> 00:17:43.310\nWhere you take the bits and just chuck\nthem over there and they go away.\n\n377\n00:17:43.310 --> 00:17:46.150\nSo, by doing this I'm just\nredirecting errors, and\n\n378\n00:17:46.150 --> 00:17:47.960\nall I should be left\nwith is the good stuff.\n\n379\n00:17:47.960 --> 00:17:50.220\nSo if you ever search\nthe whole file system,\n\n380\n00:17:50.220 --> 00:17:54.020\nI recommend you add this little bit onto\nthe end, and that'll make it a lot neater.\n\n381\n00:17:54.020 --> 00:17:56.030\nAnd now, I just get the ISOs.\n\n382\n00:17:56.030 --> 00:17:58.500\nAnd see how all those errors are gone?\n\n383\n00:17:58.500 --> 00:18:00.830\nI still don't have permission to\nthose folders, that didn't change.\n\n384\n00:18:00.830 --> 00:18:02.840\nBut at least I'm not\noverwhelmed with them.\n\n385\n00:18:02.840 --> 00:18:06.718\nAnd now, I see all those ISOs that\nI found, and I can locate them and\n\n386\n00:18:06.718 --> 00:18:08.461\ndo whatever it is [INAUDIBLE].\n\n387\n00:18:08.461 --> 00:18:12.623\n&gt;&gt; [LAUGH] Well, Don, I notice that when I\ndo finds, especially when I'm working with\n\n388\n00:18:12.623 --> 00:18:15.720\nthe Find command,\nyou get a lot of that type of output.\n\n389\n00:18:15.720 --> 00:18:19.100\nThe real power comes in when I'm\nlooking for something specific.\n\n390\n00:18:19.100 --> 00:18:21.900\nI'm not a 100% on what\nexactly I'm looking for, but\n\n391\n00:18:21.900 --> 00:18:25.210\nI know some portion of it or\nsomething to that effect.\n\n392\n00:18:25.210 --> 00:18:29.079\nI will typically work with the GREP\ncommand as well to help me weed down\n\n393\n00:18:29.079 --> 00:18:31.230\nexactly what I'm looking for.\n\n394\n00:18:31.230 --> 00:18:34.156\n&gt;&gt; Yeah, GREP is really handy\ncan look inside a file, right?\n\n395\n00:18:34.156 --> 00:18:36.807\nEverything that I've done\nthis whole episode, right,?\n\n396\n00:18:36.807 --> 00:18:38.428\nWe are almost at the end now, and\n\n397\n00:18:38.428 --> 00:18:42.048\nin this whole episode I have been\nsearching based on file name, right?\n\n398\n00:18:42.048 --> 00:18:44.293\nWhat if we don't know the file name,\nlike Daniel said?\n\n399\n00:18:44.293 --> 00:18:46.080\nOr what if it's not\nthe file name that matters?\n\n400\n00:18:46.080 --> 00:18:49.200\nMaybe I know, I've got 20 files,\nI know their names.\n\n401\n00:18:49.200 --> 00:18:52.168\nI just wanna know which files\ncontain a certain value, right?\n\n402\n00:18:52.168 --> 00:18:54.310\nI'm looking for something like that.\n\n403\n00:18:54.310 --> 00:18:58.960\nYou can use GREP and\nGREP will search inside of files and\n\n404\n00:18:58.960 --> 00:19:00.920\nstart to locate that information.\n\n405\n00:19:00.920 --> 00:19:06.420\nSo, for example, in my home directory\nI might have a couple of files, right?\n\n406\n00:19:07.740 --> 00:19:11.956\nHere, let's kind of make\nthis a little bit smaller.\n\n407\n00:19:11.956 --> 00:19:15.430\nAnd I will make a couple of files.\n\n408\n00:19:17.330 --> 00:19:20.890\nSo I've got test one, two,\nand three.txt, right?\n\n409\n00:19:20.890 --> 00:19:22.210\nSo there they are.\n\n410\n00:19:22.210 --> 00:19:27.120\nAnd I might edit, we'll do test two, and\nI'm going to insert a string, right?\n\n411\n00:19:27.120 --> 00:19:28.470\nSo I'll just type string.\n\n412\n00:19:28.470 --> 00:19:30.360\nAnd so there's my string.\n\n413\n00:19:30.360 --> 00:19:34.200\nAnd then, I might edit some of\nthe other files like file three.\n\n414\n00:19:34.200 --> 00:19:36.800\nAnd it doesn't have a string, or\n\n415\n00:19:36.800 --> 00:19:42.770\nit's got some other word like\nwhatever it is that's inside of it.\n\n416\n00:19:42.770 --> 00:19:45.710\nMaybe file one as a couple of terms in it,\nright?\n\n417\n00:19:45.710 --> 00:19:48.381\nSo it's got this is, let me restart this.\n\n418\n00:19:48.381 --> 00:19:51.450\n&gt;&gt; [LAUGH]\n&gt;&gt; This is a string.\n\n419\n00:19:51.450 --> 00:19:52.905\nWhatever, right?\n\n420\n00:19:52.905 --> 00:19:58.017\nSo if I wanted to find files\nthat contained the word string,\n\n421\n00:19:58.017 --> 00:20:00.080\nI can use GREP for that.\n\n422\n00:20:00.080 --> 00:20:04.080\nNow GREP, it can run against\nbinaries as well as text files.\n\n423\n00:20:04.080 --> 00:20:05.660\nAnd so\nI don't really wanna search binaries.\n\n424\n00:20:05.660 --> 00:20:08.631\nI wouldn't want to search\nmy ISO folder for a string.\n\n425\n00:20:08.631 --> 00:20:09.819\n&gt;&gt; [LAUGH]\n&gt;&gt; It'll take a long time, first off.\n\n426\n00:20:09.819 --> 00:20:12.312\nBut also,\nit's not gonna return me good results But\n\n427\n00:20:12.312 --> 00:20:15.884\nwhen you're dealing with a text file,\nespecially configuration files,\n\n428\n00:20:15.884 --> 00:20:17.810\nI do this inside of /etc all the time.\n\n429\n00:20:17.810 --> 00:20:20.690\nWhere I'm like, I need\nthe configuration file for Apache, but\n\n430\n00:20:20.690 --> 00:20:22.740\nI can't remember what it's called.\n\n431\n00:20:22.740 --> 00:20:27.850\nIs it httpd.conf, or is it apache.conf,\napache2.conf, I don't know.\n\n432\n00:20:27.850 --> 00:20:30.941\nLet me search for ssl,\nbecause I know it'll turn up in the file.\n\n433\n00:20:30.941 --> 00:20:32.132\n&gt;&gt; [LAUGH] It's gonna be in there, yeah.\n\n434\n00:20:32.132 --> 00:20:33.640\n&gt;&gt; And we can return it like that.\n\n435\n00:20:33.640 --> 00:20:34.600\nGREP can do that.\n\n436\n00:20:34.600 --> 00:20:38.420\nAnd the way the GREP command\nworks is you run, well, GREP,\n\n437\n00:20:38.420 --> 00:20:41.790\nand then you follow it by\nwhat you're gonna search for.\n\n438\n00:20:41.790 --> 00:20:45.330\nSo I'm gonna search for\nthe word string, right?\n\n439\n00:20:45.330 --> 00:20:47.430\nThat's what I'm looking for, but\nyou might be looking for something else.\n\n440\n00:20:47.430 --> 00:20:50.180\nYou might be looking for\napache or whatever.\n\n441\n00:20:50.180 --> 00:20:53.090\nYou type whatever search string\nit is that you want, and\n\n442\n00:20:53.090 --> 00:20:54.760\nthen you tell it where to look, right?\n\n443\n00:20:54.760 --> 00:20:58.390\nSo I might want it to look right\nhere in the test folder which is\n\n444\n00:20:58.390 --> 00:20:59.530\nthe current directory that I'm in.\n\n445\n00:20:59.530 --> 00:21:03.840\nSo I can type dot slash, or\nI could do slash test or whatever.\n\n446\n00:21:03.840 --> 00:21:06.880\nLook in that folder, search the files, and\n\n447\n00:21:06.880 --> 00:21:09.500\ntell me which ones\ncontain the word string.\n\n448\n00:21:09.500 --> 00:21:11.860\nAnd when I run that, I get,\noops, that is a directory.\n\n449\n00:21:11.860 --> 00:21:15.010\nSo I need to actually add a slash so\nthat I know it's a directory.\n\n450\n00:21:15.010 --> 00:21:18.960\nDarn it, slash star, so it knows to look\nat all the files inside of that directory.\n\n451\n00:21:18.960 --> 00:21:21.316\nThere we go, [LAUGH] we'll get it.\n\n452\n00:21:21.316 --> 00:21:22.635\n&gt;&gt; You can do it, Todd.\n\n453\n00:21:22.635 --> 00:21:23.140\n&gt;&gt; I know.\n\n454\n00:21:23.140 --> 00:21:27.597\nAnd so it looked, and it found test one,\nit found test two, and\n\n455\n00:21:27.597 --> 00:21:30.000\nit didn't find test three.\n\n456\n00:21:30.000 --> 00:21:31.860\nTest three didn't contain the word string.\n\n457\n00:21:31.860 --> 00:21:33.670\nTest one and test two did.\n\n458\n00:21:33.670 --> 00:21:36.450\nIn fact, let me edit test one.\n\n459\n00:21:38.270 --> 00:21:42.170\nAnd on that line that's got the string,\nlet me turn that into a sentence, right?\n\n460\n00:21:42.170 --> 00:21:44.270\nSo, like this is a string.\n\n461\n00:21:44.270 --> 00:21:46.030\nIsn't it awesome?\n\n462\n00:21:47.410 --> 00:21:48.100\nThere we go.\n\n463\n00:21:48.100 --> 00:21:50.320\nNow its a full on string, okay?\n\n464\n00:21:50.320 --> 00:21:54.536\nAnd now, when I rerun that search, what\nit's returning is not just that it found\n\n465\n00:21:54.536 --> 00:21:58.150\nthe word, it's returning the entire\nline that it found it on.\n\n466\n00:21:58.150 --> 00:22:01.076\nNow, I'm on Red Hat, and\nRed Hat colorizes GREP.\n\n467\n00:22:01.076 --> 00:22:02.910\nUbuntu does as well.\n\n468\n00:22:02.910 --> 00:22:03.871\nFedora does, too.\n\n469\n00:22:03.871 --> 00:22:06.472\nSo, it's actually highlighting\nit in red for me.\n\n470\n00:22:06.472 --> 00:22:08.880\nThe default for\nGREP is not to do that, though.\n\n471\n00:22:08.880 --> 00:22:10.790\nSo if your distro is doing it, great.\n\n472\n00:22:10.790 --> 00:22:13.280\nBut on a normal system it'll\njust come up as black and white.\n\n473\n00:22:13.280 --> 00:22:15.540\nBut you see it,\nlike here's the whole sentence,\n\n474\n00:22:15.540 --> 00:22:17.480\nthat line that it found the string on.\n\n475\n00:22:17.480 --> 00:22:21.990\nSo now, I can quickly locate which file\nit is that contains the data that I want.\n\n476\n00:22:21.990 --> 00:22:25.990\nNow, the search that I did is\nonly seraching the files in\n\n477\n00:22:25.990 --> 00:22:28.440\nright here in this folder.\n\n478\n00:22:28.440 --> 00:22:31.560\nAnd oftentimes you'll want to\nsearch subfolders as well.\n\n479\n00:22:31.560 --> 00:22:33.300\nAnd so if I want to look in subfolders,\n\n480\n00:22:33.300 --> 00:22:37.200\nI need to change GREP by just\na little bit by adding -r.\n\n481\n00:22:37.200 --> 00:22:39.970\nAnd that's gonna make it\ndo a recursive search.\n\n482\n00:22:39.970 --> 00:22:43.750\nIt'll search in this folder and\nany subfolder it finds underneath.\n\n483\n00:22:43.750 --> 00:22:46.990\nAnd now you can look across your entire\nfile system if you wanted to, right?\n\n484\n00:22:46.990 --> 00:22:50.850\nWe could change this to,\nif we really wanna do it crazy, /*.\n\n485\n00:22:50.850 --> 00:22:56.240\nAnd now it's gonna search the whole\nfile system and try and locate\n\n486\n00:22:56.240 --> 00:23:00.800\nanything that contains that word string\nin it and see where it goes from there.\n\n487\n00:23:00.800 --> 00:23:01.970\nSo you can certainly do that.\n\n488\n00:23:01.970 --> 00:23:04.020\nIt'll take a long time,\nyou'll get a ton of errors so\n\n489\n00:23:04.020 --> 00:23:07.240\nyou'll wanna redirect that error\noutput like I showed you a moment ago.\n\n490\n00:23:07.240 --> 00:23:09.380\nBut it'll hunt through and\nit'll find those.\n\n491\n00:23:09.380 --> 00:23:12.600\n&gt;&gt; Don, I'm starting to see a pattern with\nthat dash r showing up everywhere when it\n\n492\n00:23:12.600 --> 00:23:13.680\ncomes to recursiveness.\n\n493\n00:23:13.680 --> 00:23:16.000\n&gt;&gt; Yeah, yeah, and\nit's nice that it's consistent.\n\n494\n00:23:16.000 --> 00:23:18.210\nSome commands do expect it to be\na capital R, which is annoying.\n\n495\n00:23:18.210 --> 00:23:21.490\nBut for most of them, it's just\na lower case r, and you're good there.\n\n496\n00:23:21.490 --> 00:23:24.620\nA couple other little command\noptions that I use with gREP.\n\n497\n00:23:24.620 --> 00:23:29.130\nIf color is turned off by default,\nyou can actually add an i,\n\n498\n00:23:29.130 --> 00:23:32.180\nthe letter i,\nthat will tell it to colorize.\n\n499\n00:23:32.180 --> 00:23:33.490\nNo, sorry, it's not.\n\n500\n00:23:33.490 --> 00:23:35.410\nIt's --color, there we go.\n\n501\n00:23:35.410 --> 00:23:37.230\nSo if it's not displaying with color,\nI could come in and\n\n502\n00:23:37.230 --> 00:23:40.070\nsay, not search the whole system.\n\n503\n00:23:40.070 --> 00:23:40.915\n&gt;&gt; Probably a good idea.\n\n504\n00:23:40.915 --> 00:23:44.840\n[LAUGH]\n&gt;&gt; Yeah, so it would be --color,\n\n505\n00:23:44.840 --> 00:23:48.480\nlike that, and then it would search and\nit would know to colorize it and show it.\n\n506\n00:23:48.480 --> 00:23:52.600\nSo if it wasn't coloring for you, the i\nthat I mentioned is another one that's\n\n507\n00:23:52.600 --> 00:23:56.910\nkind of handy, cuz what it does is\nit makes it case insensitive, right?\n\n508\n00:23:56.910 --> 00:23:58.530\nLet me show you an example here.\n\n509\n00:23:58.530 --> 00:24:02.240\nIf I edit We'll do test, what is it?\n\n510\n00:24:02.240 --> 00:24:03.560\nTest2.\n\n511\n00:24:03.560 --> 00:24:08.190\nI'm gonna take that string and\nI'm gonna make it a capital S, right?\n\n512\n00:24:08.190 --> 00:24:12.820\nAnd when I do that search, and\nI come in and I look for it,\n\n513\n00:24:12.820 --> 00:24:15.130\nsee how it didn't find test2 anymore?\n\n514\n00:24:15.130 --> 00:24:18.120\nBecause string started with a capital S,\nit's case sensitive.\n\n515\n00:24:18.120 --> 00:24:21.370\nSo if you add an I that\nmakes it case insensitive.\n\n516\n00:24:21.370 --> 00:24:24.410\nAnd when I run that,\nnow it finds test two again.\n\n517\n00:24:24.410 --> 00:24:26.350\nAnd that's really handy,\nespecially in config files,\n\n518\n00:24:26.350 --> 00:24:29.540\nwhere you don't know whether maybe\nit's all caps, all lower case,\n\n519\n00:24:29.540 --> 00:24:33.132\nmaybe the first letter is capitalized,\nwe dunno, an i can really help with that.\n\n520\n00:24:33.132 --> 00:24:33.720\n&gt;&gt; All right, well,\n\n521\n00:24:33.720 --> 00:24:37.500\nDon, we've gone through many, many ways in\nwhich we can look through our file system.\n\n522\n00:24:37.500 --> 00:24:42.940\nFind binaries, find files, find actual\npieces of strings that we're looking for\n\n523\n00:24:42.940 --> 00:24:46.020\ninside of specific files that\nwe might not know the names of.\n\n524\n00:24:46.020 --> 00:24:47.140\nVery, very handy stuff.\n\n525\n00:24:47.140 --> 00:24:50.890\nIs there any other finding utilities or\nfinding tricks and\n\n526\n00:24:50.890 --> 00:24:52.600\ntips that you have for us?\n\n527\n00:24:52.600 --> 00:24:55.010\n&gt;&gt; Sometimes you don't\nwanna find something.\n\n528\n00:24:55.010 --> 00:24:58.880\nMaybe I wanna search for\nfiles that don't contain a string.\n\n529\n00:24:58.880 --> 00:25:00.380\nIt's not as common, but maybe.\n\n530\n00:25:00.380 --> 00:25:04.190\nAnd with GREP you can do a dash v,\nand dash v is like the exclusion.\n\n531\n00:25:04.190 --> 00:25:06.720\nWe don't want to search for\na particular string.\n\n532\n00:25:06.720 --> 00:25:08.720\nAnd then, you'll return\nthe files that don't have it.\n\n533\n00:25:08.720 --> 00:25:10.000\nThat, that can be useful.\n\n534\n00:25:10.000 --> 00:25:13.110\nMaybe I want files that don't\nend in .back or something.\n\n535\n00:25:13.110 --> 00:25:14.360\n&gt;&gt; Yeah.\n&gt;&gt; And, and grep can turn those up.\n\n536\n00:25:14.360 --> 00:25:17.160\nSo, just be aware sometimes it's\nnot searching for something,\n\n537\n00:25:17.160 --> 00:25:18.690\nit's searching for\nthe absence of something.\n\n538\n00:25:18.690 --> 00:25:20.575\nAnd, and most of these\ncommands support that as well.\n\n539\n00:25:20.575 --> 00:25:23.580\n&gt;&gt; Great, that's, it's kind of like\nbuilding a white list versus a black list,\n\n540\n00:25:23.580 --> 00:25:26.240\ndepending on what's going\nto overwhelm the other.\n\n541\n00:25:26.240 --> 00:25:29.265\nSometimes you meet right in the middle and\nits choose wherever you like.\n\n542\n00:25:29.265 --> 00:25:30.270\n&gt;&gt; [LAUGH]\n&gt;&gt; Very fun stuff.\n\n543\n00:25:30.270 --> 00:25:34.900\nBut now, hopefully if you felt a little\nlost at sea when it comes to looking for\n\n544\n00:25:34.900 --> 00:25:40.280\nthings inside of a terminal, inside of\na console, and you're like, man, I would\n\n545\n00:25:40.280 --> 00:25:43.008\nlove to be able to find it, hopefully this\nepisode has helped you out with that.\n\n546\n00:25:43.008 --> 00:25:46.110\nDon, I think you did a fantastic\njob of showing us many of\n\n547\n00:25:46.110 --> 00:25:50.850\nthe options that we have for locating\nitems inside of our Linux systems.\n\n548\n00:25:50.850 --> 00:25:53.302\nSo I think you've equipped\nour audience out there.\n\n549\n00:25:53.302 --> 00:25:54.630\nAnd we appreciate that.\n\n550\n00:25:54.630 --> 00:25:57.660\nThanks for joining us again, and\nwe do thank our audience as always for\n\n551\n00:25:57.660 --> 00:25:58.710\njoining us as well.\n\n552\n00:25:58.710 --> 00:26:00.020\nWe do appreciate your viewership.\n\n553\n00:26:00.020 --> 00:26:02.620\nBut its that time for us to sign off.\n\n554\n00:26:02.620 --> 00:26:04.760\nFor IT ProTv,\nI've been your host Daniel Lawry.\n\n555\n00:26:04.760 --> 00:26:05.840\n&gt;&gt; And I'm Don Pissant.\n\n556\n00:26:05.840 --> 00:26:08.373\n&gt;&gt; We'll see you next time.\n\n557\n00:26:08.373 --> 00:26:14.214\n[MUSIC]\n\n558\n00:26:14.214 --> 00:26:18.035\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "235065633"
        },
        {
          "description": "In this episode, Don demonstrates a number of useful commands that, while incredibly useful, did not fit in with any of the other episodes. Specifically, he demonstrates running applications as background processes, chaining commands, entering commands on multiple lines for easier readability, viewing and using your command history, and creating aliases to speed up command entry.",
          "length": "1735",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-4-1-other_useful_commands-092217-PGM.00_28_39_08.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-4-1-other_useful_commands-092217-PGM.00_28_39_08.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-3-4-1-other_useful_commands-092217-PGM.00_28_39_08.Still001-sm.jpg",
          "title": "Other Useful Commands",
          "transcript": "WEBVTT\n\n1\n00:00:00.230 --> 00:00:03.228\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:03.228 --> 00:00:05.809\n[CROSSTALK]\n\n3\n00:00:05.809 --> 00:00:08.184\n[MUSIC]\n\n4\n00:00:08.184 --> 00:00:11.353\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:11.353 --> 00:00:13.460\n&gt;&gt; All right, greetings everyone.\n\n6\n00:00:13.460 --> 00:00:15.902\nWelcome to another exciting\nepisode of ITProTV.\n\n7\n00:00:15.902 --> 00:00:20.256\nI'm your host Daniel Lowry and in today's\nepisode wel,l guess what we're back with\n\n8\n00:00:20.256 --> 00:00:22.079\nmore on Linux commandline series.\n\n9\n00:00:22.079 --> 00:00:25.462\nAnd joining us in the studio the man,\nthe myth, the legend you know him as,\n\n10\n00:00:25.462 --> 00:00:26.040\nDon Pezet.\n\n11\n00:00:26.040 --> 00:00:27.322\nDon, welcome back sir,\nhow's it going today?\n\n12\n00:00:27.322 --> 00:00:30.254\n&gt;&gt; [LAUGH] Great,\nnow I've got this high bar to live up to.\n\n13\n00:00:30.254 --> 00:00:31.918\n&gt;&gt; That's right, good to see you,\nmake the magic happen.\n\n14\n00:00:31.918 --> 00:00:32.869\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] All right,\n\n15\n00:00:32.869 --> 00:00:33.642\nwell I am glad to be back.\n\n16\n00:00:33.642 --> 00:00:36.520\nIn this episode, we're gonna do\nsomething a little bit different.\n\n17\n00:00:36.520 --> 00:00:39.700\nEach episode I've kinda picked\na single topic to address, and\n\n18\n00:00:39.700 --> 00:00:42.348\nshown a series of commands\nall related to one topic.\n\n19\n00:00:42.348 --> 00:00:45.412\nAnd then, I kinda got to the bottom of my\ncommand barrel, and said [LAUGH] here's\n\n20\n00:00:45.412 --> 00:00:48.159\nhere's stuff that's really import\nthat I think people need to know but\n\n21\n00:00:48.159 --> 00:00:49.650\nit's just not necessarily related.\n\n22\n00:00:49.650 --> 00:00:53.628\nSo this is going to be our grab bag\nepisode, or potpourri, pot luck,\n\n23\n00:00:53.628 --> 00:00:57.621\nI don't know, whatever, our our\nmixed nuts bag of [LAUGH] commands.\n\n24\n00:00:57.621 --> 00:01:01.779\nThat I think are handy to know to make\nyour commandline experience a lot more\n\n25\n00:01:01.779 --> 00:01:02.443\nfriendly.\n\n26\n00:01:02.443 --> 00:01:05.545\nSo yeah,\nI don't have some great summary here,\n\n27\n00:01:05.545 --> 00:01:10.624\njust we've covered a bunch of useful\ntechnologies right here in this episode.\n\n28\n00:01:10.624 --> 00:01:12.637\n&gt;&gt; Well Don,\nthis is gonna be a real fun for\n\n29\n00:01:12.637 --> 00:01:15.165\nme as a host because they\ndon't really connect.\n\n30\n00:01:15.165 --> 00:01:17.058\n&gt;&gt; [LAUGH]\n&gt;&gt; They're all very disjointed,\n\n31\n00:01:17.058 --> 00:01:21.056\nso I'm just gonna kinda tee you up for\neach one of our topics that we have.\n\n32\n00:01:21.056 --> 00:01:22.570\n&gt;&gt; All right.\n&gt;&gt; And you'll take it away from there.\n\n33\n00:01:22.570 --> 00:01:25.199\nFirst one is gonna be foreground and\nbackground processes.\n\n34\n00:01:25.199 --> 00:01:28.375\nVery important thing and\nit can really be helpful for us, right?\n\n35\n00:01:28.375 --> 00:01:31.763\n&gt;&gt; Absolutely, yep, so\nthe Linux operating system or\n\n36\n00:01:31.763 --> 00:01:35.613\nthe Kernel is a multi-tasking\noperating system at heart.\n\n37\n00:01:35.613 --> 00:01:38.633\nIt can run more than one\napplication at the same time.\n\n38\n00:01:38.633 --> 00:01:42.095\nAnd via the GUI, we do that easy\nit's just a bunch of windows, right?\n\n39\n00:01:42.095 --> 00:01:46.054\nBut you can actually multi-task\nfrom the commandline as well.\n\n40\n00:01:46.054 --> 00:01:50.751\nAnd it's a far less used technique but\nit is actually really useful especially if\n\n41\n00:01:50.751 --> 00:01:54.135\nyou're SSH into a system and\nyou've only got one shell but\n\n42\n00:01:54.135 --> 00:01:57.678\nyou wanna run more than one\nprogram it can be a little tricky.\n\n43\n00:01:57.678 --> 00:02:01.366\nSo there are built in commands we can\nuse to actually run more than one thing\n\n44\n00:02:01.366 --> 00:02:02.370\nat a time.\n\n45\n00:02:02.370 --> 00:02:05.083\nSo let me show you for\nexample I'm in my terminal here.\n\n46\n00:02:05.083 --> 00:02:07.400\nAnd if I run something like\nthe Midnight Commander, right?\n\n47\n00:02:07.400 --> 00:02:11.140\nI run MC, fire up the Midnight Commander,\nit goes full screen,\n\n48\n00:02:11.140 --> 00:02:12.540\nit takes over my shell.\n\n49\n00:02:12.540 --> 00:02:15.929\nSo now my entire session is\noccupied by this one program.\n\n50\n00:02:15.929 --> 00:02:16.595\n&gt;&gt; Blue awesomeness.\n\n51\n00:02:16.595 --> 00:02:19.132\n[LAUGH]\n&gt;&gt; It is, I like the messenger.\n\n52\n00:02:19.132 --> 00:02:20.180\nSo I'm in here, it's working.\n\n53\n00:02:20.180 --> 00:02:21.426\nIt's great, there we go, right?\n\n54\n00:02:21.426 --> 00:02:26.080\nBut maybe I really quick just want\nto see what my IP address is, okay?\n\n55\n00:02:26.080 --> 00:02:30.427\nWell, I know that if I were in my regular\ncommand prompt I could run ip addr, right?\n\n56\n00:02:30.427 --> 00:02:33.854\nAnd there's actually a way to run\na command here in Midnight Commander,\n\n57\n00:02:33.854 --> 00:02:35.101\nwhich I can't remember.\n\n58\n00:02:35.101 --> 00:02:36.753\n&gt;&gt; [LAUGH]\n&gt;&gt; But wouldn't it be nice if,\n\n59\n00:02:36.753 --> 00:02:39.859\njust like in a GUI, if I could just\nminimize this window for a moment,\n\n60\n00:02:39.859 --> 00:02:42.940\nrun my other command, and\nthen bring this window back up?\n\n61\n00:02:42.940 --> 00:02:45.794\nBut it's not a window, it's a full\nscreen application, it's running and\n\n62\n00:02:45.794 --> 00:02:46.782\nit's taking my session.\n\n63\n00:02:46.782 --> 00:02:51.485\nSo what you can do is you can stuff\nthis application in the background by\n\n64\n00:02:51.485 --> 00:02:52.774\nhitting Ctrl+Z.\n\n65\n00:02:52.774 --> 00:02:57.067\nCtrl+Z, some people call it\nthe sleep combination, I don't know,\n\n66\n00:02:57.067 --> 00:02:59.426\ntell you a sleep number bit\n&gt;&gt; [LAUGH]\n\n67\n00:02:59.426 --> 00:03:00.636\n&gt;&gt; Obviously Ctrl+Z and\n\n68\n00:03:00.636 --> 00:03:04.240\nthe application goes in the background,\nokay?\n\n69\n00:03:04.240 --> 00:03:06.843\nSo it's now hiding in the background for\nme and\n\n70\n00:03:06.843 --> 00:03:11.402\nI can recover it whenever I'm ready, but I\ncan drop in here and I can do an ip addr.\n\n71\n00:03:11.402 --> 00:03:13.195\nI can see an IP address,\n\n72\n00:03:13.195 --> 00:03:17.967\nand then when I'm ready to pull\nthat application back up I can.\n\n73\n00:03:17.967 --> 00:03:22.850\nAnd the way you do that is\nby knowing the job number.\n\n74\n00:03:22.850 --> 00:03:26.608\nEach application that you run is\ntreated as a job for your session.\n\n75\n00:03:26.608 --> 00:03:28.954\nAnd it gets stuffed in the background and\n\n76\n00:03:28.954 --> 00:03:32.200\nif you run the jobs command\nyou'll see the jobs you got.\n\n77\n00:03:32.200 --> 00:03:34.461\nNow I only got one so\nI knew it was job number one.\n\n78\n00:03:34.461 --> 00:03:38.231\nBut you can have three or four different\nprograms that you've been launching and\n\n79\n00:03:38.231 --> 00:03:40.960\nusing and maybe I launched into\nnano which actually is it.\n\n80\n00:03:40.960 --> 00:03:43.728\nI don't think nano lets me\ndo the Ctrl+Z combination.\n\n81\n00:03:43.728 --> 00:03:47.386\nBut maybe I'm in VIM and\nI stuff that one in the background and\n\n82\n00:03:47.386 --> 00:03:49.770\nany other applications I can think of.\n\n83\n00:03:49.770 --> 00:03:52.408\nEven simple applications like FTP,\nwhich I don't have installed.\n\n84\n00:03:52.408 --> 00:03:54.469\n&gt;&gt; [LAUGH]\n&gt;&gt; The applications like that,\n\n85\n00:03:54.469 --> 00:03:58.140\nyou can stuff them in the background and\nwhen you run jobs, there they are, right?\n\n86\n00:03:58.140 --> 00:04:01.846\nNow, some applications keep\nrunning in the background,\n\n87\n00:04:01.846 --> 00:04:05.260\nmost applications stop,\nthey just freeze, right?\n\n88\n00:04:05.260 --> 00:04:08.289\nWhat is Midnight Commander gonna do when\nit's sitting there in the background,\n\n89\n00:04:08.289 --> 00:04:09.610\nit's gonna do nothing.\n\n90\n00:04:09.610 --> 00:04:12.850\nSo it stops, it's still running,\nit's still consuming memory, but\n\n91\n00:04:12.850 --> 00:04:15.285\nit's not consuming CPUs,\nit's saving resources.\n\n92\n00:04:15.285 --> 00:04:18.080\nSometimes we do want them to keep running\nand I'll show you some tricks with that.\n\n93\n00:04:18.080 --> 00:04:23.218\nBut here it's up and I can pull it\nback up by just doing a percent and\n\n94\n00:04:23.218 --> 00:04:27.057\nthen the number of the job\nthat I want to recover.\n\n95\n00:04:27.057 --> 00:04:30.356\nSo if I wanna back into\nMidnight Commander I would type %1 and\n\n96\n00:04:30.356 --> 00:04:33.120\nnow I'm back into Midnight Commander.\n\n97\n00:04:33.120 --> 00:04:38.410\nAnd I hit Ctrl+Z and I could type %2 and\nnow I'm back into VIM, right?\n\n98\n00:04:38.410 --> 00:04:42.644\nSo I'm able to quickly move between these\napplications without actually closing\n\n99\n00:04:42.644 --> 00:04:44.374\nthem, they're still running.\n\n100\n00:04:44.374 --> 00:04:46.854\nI could be in VIM and\nhave not saved my file yet and\n\n101\n00:04:46.854 --> 00:04:51.012\njust park it in the background with\nCtrl+Z, jump over to Midnight Commander,\n\n102\n00:04:51.012 --> 00:04:54.325\ndo whatever it is I need, and\nthen come back again very easily.\n\n103\n00:04:54.325 --> 00:04:57.410\nSo I'm multitasking with\nthese applications.\n\n104\n00:04:57.410 --> 00:05:01.387\nEven though I'm just in a single\nshell I'm able to do that.\n\n105\n00:05:01.387 --> 00:05:04.994\nNow I mentioned how they're in\nthe background but they're stopped, and\n\n106\n00:05:04.994 --> 00:05:06.850\nthat's usually a good thing.\n\n107\n00:05:06.850 --> 00:05:09.721\nBut maybe I'm doing something\nlike running Apache, right?\n\n108\n00:05:09.721 --> 00:05:11.008\nI wanna fire up a web server, but\n\n109\n00:05:11.008 --> 00:05:13.984\nnot I don't want it to be a demon that\nruns every time my computer boots up.\n\n110\n00:05:13.984 --> 00:05:17.520\nI just wanna run it right now, right?\n\n111\n00:05:17.520 --> 00:05:21.198\nAnd so you can run httpd-d, and\nit'll run just one time, right?\n\n112\n00:05:21.198 --> 00:05:22.800\nAs opposed to running as a service.\n\n113\n00:05:22.800 --> 00:05:25.942\nBut if I run it and I stick it in\nthe background, it's gonna stop and\n\n114\n00:05:25.942 --> 00:05:27.620\nthat's not so good, right?\n\n115\n00:05:27.620 --> 00:05:30.069\nSo if I wanna run it and\nhave it keep running,\n\n116\n00:05:30.069 --> 00:05:33.458\nwhat I need to do is hit Ctrl+Z\nto stick it in the back ground.\n\n117\n00:05:33.458 --> 00:05:36.476\nAnd then you can type bg, and bg will say,\n\n118\n00:05:36.476 --> 00:05:41.590\ntake that background task and\nlet it run in the background, okay?\n\n119\n00:05:41.590 --> 00:05:43.343\nLet it run and keep doing its thing.\n\n120\n00:05:43.343 --> 00:05:44.860\nNow, I did Midnight Commander.\n\n121\n00:05:44.860 --> 00:05:47.027\nMidnight Commander doesn't support\nrunning in the background, so\n\n122\n00:05:47.027 --> 00:05:48.006\nit just stopped immediately.\n\n123\n00:05:48.006 --> 00:05:49.546\nAgain, but I can look at my jobs,\n\n124\n00:05:49.546 --> 00:05:53.830\nand there they are, and so you might have\none in the background that says running.\n\n125\n00:05:53.830 --> 00:05:57.345\nAnd I might have that web server that's\nnow running, and its a temporary thing,\n\n126\n00:05:57.345 --> 00:05:59.788\nand its in the background and\nthat's that, all right?\n\n127\n00:05:59.788 --> 00:06:03.197\nWhen you use Ctrl+Z though\nthe default is to stop, and\n\n128\n00:06:03.197 --> 00:06:05.890\nyou use bg to then stick it back there.\n\n129\n00:06:05.890 --> 00:06:07.438\nYou can use fg which is foreground.\n\n130\n00:06:07.438 --> 00:06:10.673\nI don't normally use this one but\nfg will bring the application back into\n\n131\n00:06:10.673 --> 00:06:14.080\nthe foreground again and take you\nright back into it, so there I am.\n\n132\n00:06:14.080 --> 00:06:16.289\nI usually use the percent,\nand then a number,\n\n133\n00:06:16.289 --> 00:06:20.200\nbecause if you have multiple programs you\nwanna pick, and with fg, you can do fg,\n\n134\n00:06:20.200 --> 00:06:23.116\nfollowed by a number, but\nit's just faster to do a percent.\n\n135\n00:06:23.116 --> 00:06:27.350\n&gt;&gt; Yeah, I typically only running one\nthing in the background if I'm doing this,\n\n136\n00:06:27.350 --> 00:06:28.814\nso fg works quickly for me.\n\n137\n00:06:28.814 --> 00:06:32.340\nBut if I do have these multiple\nprocesses then yeah, I go percent style.\n\n138\n00:06:32.340 --> 00:06:35.612\n&gt;&gt; Yep, and there's actually another\nalias that makes this even easier.\n\n139\n00:06:35.612 --> 00:06:40.169\nIf I'm doing something like Apache and\nI wanna run it in the background and\n\n140\n00:06:40.169 --> 00:06:42.320\nI'm doing httpd-d, like that.\n\n141\n00:06:42.320 --> 00:06:45.112\nSo I'm gonna run it, and\nI want it to go into the background but\n\n142\n00:06:45.112 --> 00:06:46.315\nI want it to keep running.\n\n143\n00:06:46.315 --> 00:06:50.570\nI can do that all at once just by\nrunning and typing an ampersand.\n\n144\n00:06:50.570 --> 00:06:55.139\nAmpersand means go ahead and run and\nthen just get out of my way, right?\n\n145\n00:06:55.139 --> 00:06:58.889\nAnd you would do this any time that you\nlike maybe you called a GUI utility from\n\n146\n00:06:58.889 --> 00:07:00.250\nthe commandline, right?\n\n147\n00:07:00.250 --> 00:07:01.894\nIf I’m in the command line and\nI launch gedit, right?\n\n148\n00:07:01.894 --> 00:07:06.050\nThat’s a graphical editor so\nit is gonna launch the window.\n\n149\n00:07:06.050 --> 00:07:08.320\nBut look at my shell back here.\n\n150\n00:07:08.320 --> 00:07:11.094\nIn my shell,\nit is taken over by gedit, right?\n\n151\n00:07:11.094 --> 00:07:15.542\nIt's locked this shell for me, and\nthe application is running and\n\n152\n00:07:15.542 --> 00:07:18.950\nif I close it then I get\nmy shell back again.\n\n153\n00:07:18.950 --> 00:07:23.777\nBut if I ran gedit followed by\nan ampersand, that means run the program,\n\n154\n00:07:23.777 --> 00:07:26.956\nstick it in the background but\nkeep it running.\n\n155\n00:07:26.956 --> 00:07:32.140\nAnd now it runs, and so there's my gedit.\n\n156\n00:07:32.140 --> 00:07:36.471\nIt's working, I can type in it,\nthe great American novel or whatever.\n\n157\n00:07:36.471 --> 00:07:39.740\nAnd back here, I have my shell again,\nand I can keep working.\n\n158\n00:07:39.740 --> 00:07:44.517\nAnd if I look at my jobs, there's gedit,\nand see how gedit shows as running,\n\n159\n00:07:44.517 --> 00:07:45.777\nit's not stopped.\n\n160\n00:07:45.777 --> 00:07:48.708\nLike the other ones it's running,\nits doing its job,\n\n161\n00:07:48.708 --> 00:07:51.076\neven though its in the background, right?\n\n162\n00:07:51.076 --> 00:07:54.301\nSo using Ctrl+Z will stick\nit in the background and\n\n163\n00:07:54.301 --> 00:07:56.552\nit will freeze it, it will stop it.\n\n164\n00:07:56.552 --> 00:07:58.794\nBg would it start running\nagain if it supports that, Or\n\n165\n00:07:58.794 --> 00:08:01.740\nyou can just straight up run it and\nstick it in the background like this.\n\n166\n00:08:01.740 --> 00:08:06.698\nI could do a %3 and switch over to that\none, except it's a graphical utility,\n\n167\n00:08:06.698 --> 00:08:09.460\nso if I do that it doesn't quite work.\n\n168\n00:08:09.460 --> 00:08:11.219\nAnd now, my shell has taken over.\n\n169\n00:08:11.219 --> 00:08:14.430\nAnd if I do a Ctrl+Z, see how it stopped?\n\n170\n00:08:14.430 --> 00:08:16.880\nAnd so,\nthat's not necessarily a good thing.\n\n171\n00:08:16.880 --> 00:08:19.740\nIt stopped even though I've\ngot it open back here.\n\n172\n00:08:19.740 --> 00:08:23.120\nAnd if I try and type,\nit's actually not responding to me typing.\n\n173\n00:08:23.120 --> 00:08:25.470\nI've frozen it now, which is not so good.\n\n174\n00:08:25.470 --> 00:08:29.600\nAnd I can use bg and I don't know\nif you saw, all of a sudden my\n\n175\n00:08:29.600 --> 00:08:32.730\nletters appeared as soon as I ran\nbg to start it back up again.\n\n176\n00:08:32.730 --> 00:08:36.640\nAnd if I look at the jobs, there it is,\nit's running and it's working.\n\n177\n00:08:36.640 --> 00:08:39.710\nSo it was kind of a series\nof commands there.\n\n178\n00:08:39.710 --> 00:08:41.817\nSo there was Ctrl+Z to stick\nsomething in the background.\n\n179\n00:08:41.817 --> 00:08:45.070\nOr the &amp; and just run it in\nthe background from in the beginning.\n\n180\n00:08:45.070 --> 00:08:50.400\nAnd then bg and fg to start something\nrunning in the background or\n\n181\n00:08:50.400 --> 00:08:51.560\nbring it to the foreground again.\n\n182\n00:08:51.560 --> 00:08:54.420\nAnd then there was the %\nnumbers to pick from a job.\n\n183\n00:08:54.420 --> 00:08:57.210\nSo that's kinda the little\nmultitasking system that's built\n\n184\n00:08:57.210 --> 00:09:02.230\ninto every Linux distro that's out there,\nand really every Unix and BSD one as well.\n\n185\n00:09:02.230 --> 00:09:04.720\nSo a great way to do that all\nright from the command line.\n\n186\n00:09:04.720 --> 00:09:08.320\n&gt;&gt; Don, I like how you framed it as\nbasically the command line version of\n\n187\n00:09:08.320 --> 00:09:09.610\nminimizing and maximizing.\n\n188\n00:09:09.610 --> 00:09:12.840\nJust getting things out of our way,\nso that we can do other things and\n\n189\n00:09:12.840 --> 00:09:15.450\nhave our task and then we're ready for\nit, bring her right back up.\n\n190\n00:09:15.450 --> 00:09:16.880\nVery, very helpful thing.\n\n191\n00:09:16.880 --> 00:09:19.800\nThis is something that you're\nactually probably going to engage in\n\n192\n00:09:19.800 --> 00:09:21.040\nwith quite some frequency.\n\n193\n00:09:21.040 --> 00:09:25.422\nSo, get familiar with those commands so\nthat you can do that whenever you need it.\n\n194\n00:09:25.422 --> 00:09:28.200\nNow Don, moving on,\nwe're just talking about odds and ends.\n\n195\n00:09:28.200 --> 00:09:32.300\nAnother one you've got put down in\nour notes here is chaining commands.\n\n196\n00:09:32.300 --> 00:09:37.420\nAnd this is actually super helpful because\nI don't want to type in a command,\n\n197\n00:09:37.420 --> 00:09:41.097\nhit Enter, type in a command, hit Enter or\nhave a command take over my shell, so\n\n198\n00:09:41.097 --> 00:09:42.290\nI've got to put that in the background.\n\n199\n00:09:42.290 --> 00:09:44.980\nI just want to put them all together and\nlet them run and be done with it.\n\n200\n00:09:44.980 --> 00:09:45.900\n&gt;&gt; Yeah, absolutely.\n\n201\n00:09:45.900 --> 00:09:49.870\nIn other episodes I talk about pipelining\ncommands where you take the output for\n\n202\n00:09:49.870 --> 00:09:52.250\none command,\nyou feed into another command.\n\n203\n00:09:52.250 --> 00:09:57.390\nSo like if I just run dmesg and when I\nrun this, I take a look at my computer,\n\n204\n00:09:57.390 --> 00:10:01.380\nwhen I run dmesg,\nit's going to give me a flood of data.\n\n205\n00:10:01.380 --> 00:10:05.220\nAnd so I'm like pipe the output of\none command into the next command.\n\n206\n00:10:05.220 --> 00:10:10.300\nLike I might pipe that into more and\nnow I get paginated output.\n\n207\n00:10:10.300 --> 00:10:12.750\nThat's the two commands working together.\n\n208\n00:10:12.750 --> 00:10:14.310\nBut sometimes I don't want\nthem to work together.\n\n209\n00:10:14.310 --> 00:10:18.021\nI just want them in two completely\ndifferent unrelated commands,\n\n210\n00:10:18.021 --> 00:10:20.150\nI just want to run them all on one line.\n\n211\n00:10:20.150 --> 00:10:24.670\nAnd so you can do that by chaining them\nand we chain by using a semicolon.\n\n212\n00:10:24.670 --> 00:10:27.450\nSo for example, maybe I want to\nget information about this system.\n\n213\n00:10:27.450 --> 00:10:30.472\nThis is the first time I've logged in\nto the laptop, I want to know about it.\n\n214\n00:10:30.472 --> 00:10:34.924\nSo I wanna run uname -a to be able\nfind what kernel is running and\n\n215\n00:10:34.924 --> 00:10:39.124\nthen I want to run hostname to\nfind out what its host name is or\n\n216\n00:10:39.124 --> 00:10:43.480\nmaybe hostnamectl to get\neven better information.\n\n217\n00:10:43.480 --> 00:10:48.290\nAnd then I want to run ipaddr\nto find what ip address it is.\n\n218\n00:10:48.290 --> 00:10:51.880\nEach of these are valid commands\nthat I could run by themselves, but\n\n219\n00:10:51.880 --> 00:10:54.120\nI'm separating them with semicolons.\n\n220\n00:10:54.120 --> 00:10:59.340\nAnd the semicolons are telling the command\nline, don't run these together,\n\n221\n00:10:59.340 --> 00:11:00.460\nrun them one at a time.\n\n222\n00:11:00.460 --> 00:11:01.970\nThey're independent commands.\n\n223\n00:11:01.970 --> 00:11:03.620\nThey're independent from each other.\n\n224\n00:11:03.620 --> 00:11:06.570\nAnd when I run that, I get my output.\n\n225\n00:11:06.570 --> 00:11:11.180\nAnd right here in the first line,\nthat is uname -a, its output.\n\n226\n00:11:11.180 --> 00:11:14.800\nAnd then right after that I\nget a hostnamectl's output.\n\n227\n00:11:14.800 --> 00:11:18.130\nAnd right after that I\nget ipaddr's output.\n\n228\n00:11:18.130 --> 00:11:21.540\nIt ran each command in\nthe order that I type in.\n\n229\n00:11:21.540 --> 00:11:23.090\nThat's command chaining.\n\n230\n00:11:23.090 --> 00:11:26.318\nAnd so, if you've got two things\nthat you know you're going to do.\n\n231\n00:11:26.318 --> 00:11:29.813\nFor example,\nmaybe I just installed Apache.\n\n232\n00:11:29.813 --> 00:11:33.251\nAnd I know that I want to enable the\ndaemon, so that it will start a boot time\n\n233\n00:11:33.251 --> 00:11:36.592\nand I know that I want to start the daemon\nso that it will start right now.\n\n234\n00:11:36.592 --> 00:11:40.901\nYou could say systemctl start\n\n235\n00:11:40.901 --> 00:11:46.440\nhttpd: systemctl start httpd.\n\n236\n00:11:46.440 --> 00:11:50.160\nThat will tell it, start up when\nthe system boots and start it right now.\n\n237\n00:11:51.270 --> 00:11:53.250\nNow there's other shortcuts\nthat make it easier, but\n\n238\n00:11:53.250 --> 00:11:55.110\nthis is the way that I would do this,\njust run the two commands.\n\n239\n00:11:55.110 --> 00:11:57.600\nI know I'm gonna run them anyway, but\nhere I can put them on one command.\n\n240\n00:11:57.600 --> 00:12:00.290\nReally handy when you're scripting and\nautomating, you can shrink the size of\n\n241\n00:12:00.290 --> 00:12:03.600\nyour script files a good bit by\nchaining commands together like this.\n\n242\n00:12:03.600 --> 00:12:06.511\n&gt;&gt; Now, Don, a lot of times\nwhen I'm typing commands and\n\n243\n00:12:06.511 --> 00:12:10.752\nif anybody out there has worked in Linux\nand any stretch of the imagination, for\n\n244\n00:12:10.752 --> 00:12:15.143\nany length of time, you'll notice a lot of\ncommands tend to take up a lot of space.\n\n245\n00:12:15.143 --> 00:12:17.317\n&gt;&gt; [LAUGH]\n&gt;&gt; They'll wrap around and down and\n\n246\n00:12:17.317 --> 00:12:20.271\nbelow and if your chain of commands\nis together, God help you,\n\n247\n00:12:20.271 --> 00:12:22.754\nbecause it just gets a little\ntoo difficult to read.\n\n248\n00:12:22.754 --> 00:12:27.268\nIt's almost obfuscated to our human\nacumen to see it and go what is this,\n\n249\n00:12:27.268 --> 00:12:31.050\nis there a way that we can break\nthat up to see those easier?\n\n250\n00:12:31.050 --> 00:12:32.040\n&gt;&gt; Yeah absolutely,\n\n251\n00:12:32.040 --> 00:12:36.290\nso take a command like user add,\nI wanna add a new user to my system.\n\n252\n00:12:36.290 --> 00:12:40.250\nAnd so when I start to run this I need\nto specify a lot of data like where's\n\n253\n00:12:40.250 --> 00:12:41.160\nthe home directory.\n\n254\n00:12:41.160 --> 00:12:43.610\nSo I'm gonna create a user\ncalled John Doe, right?\n\n255\n00:12:43.610 --> 00:12:49.070\nSo I'll say -d /home/jdoe, that's gonna\nbe where their home directory is.\n\n256\n00:12:49.070 --> 00:12:52.658\nAnd then I might specify when\ntheir account expires, so\n\n257\n00:12:52.658 --> 00:12:56.255\nI would say that it's gonna be 01/01/2018.\n\n258\n00:12:56.255 --> 00:12:57.841\nSo it's gonna expire on January 1st.\n\n259\n00:12:57.841 --> 00:12:58.737\nAnd I keep going on.\n\n260\n00:12:58.737 --> 00:13:01.580\nI want to put them in a group,\nI'll call the group jdoe.\n\n261\n00:13:01.580 --> 00:13:05.898\nAnd I might have some\nsecondary groups like adm or\n\n262\n00:13:05.898 --> 00:13:10.910\nwheel, whatever it is that\nI want to stick them in.\n\n263\n00:13:10.910 --> 00:13:12.760\nSo I provide those and then I keep going.\n\n264\n00:13:12.760 --> 00:13:16.373\nMaybe I wanna do a password,\nso I'll provide the password.\n\n265\n00:13:16.373 --> 00:13:19.290\nI'll do password123,\ncuz I'm all about security.\n\n266\n00:13:19.290 --> 00:13:24.410\nAnd then, I'll do maybe what shell they're\ngonna use, they're gonna use /bin/esh.\n\n267\n00:13:24.410 --> 00:13:29.480\nAnd then maybe I'll do a user ID,\nI'll hard set that, 1,001.\n\n268\n00:13:29.480 --> 00:13:32.420\nA user name, they probably need this,\nso I'll throw that here on the end.\n\n269\n00:13:32.420 --> 00:13:37.360\nThis command got so\nlong that it's wrapped around my screen.\n\n270\n00:13:37.360 --> 00:13:39.980\nThis is the right command, this is it,\nbut it's wrapped around the screen and\n\n271\n00:13:39.980 --> 00:13:42.090\nit's getting kind of hard to deal with.\n\n272\n00:13:42.090 --> 00:13:45.690\nSo, when you're dealing with\na large command like this,\n\n273\n00:13:45.690 --> 00:13:49.470\nit can actually be a lot easier to\nbreak it up into multiple lines.\n\n274\n00:13:49.470 --> 00:13:54.510\nAnd so what you can do is any time\nyou want to break to another line,\n\n275\n00:13:54.510 --> 00:13:57.940\nyou just add a \\ like this,\nand that tells the shell hey,\n\n276\n00:13:57.940 --> 00:13:59.560\nI gonna move onto the next line.\n\n277\n00:13:59.560 --> 00:14:01.680\nNormally when you press Enter,\nit runs a command, but\n\n278\n00:14:01.680 --> 00:14:04.800\nwhen I press Enter this time,\nsee what it did.\n\n279\n00:14:04.800 --> 00:14:06.880\nI'm still in the first prompt.\n\n280\n00:14:06.880 --> 00:14:08.160\nI'm not in a new prompt.\n\n281\n00:14:08.160 --> 00:14:10.670\nI'm still continuing\nthe command that I just ran.\n\n282\n00:14:10.670 --> 00:14:14.000\nAnd I like to do this with\neach command line argument.\n\n283\n00:14:14.000 --> 00:14:16.133\nSo I can say -d, this is gonna\nbe the home directory, right?\n\n284\n00:14:16.133 --> 00:14:20.590\nSo that'll be /home /jdoe and\nthen I'll do another \\.\n\n285\n00:14:20.590 --> 00:14:21.900\nAnd now, I can do the next argument.\n\n286\n00:14:21.900 --> 00:14:25.340\nThe next argument was, -e,\nwhen's it going to expire?\n\n287\n00:14:25.340 --> 00:14:28.680\nAnd so, I'll put in\nthe expiration date and another \\.\n\n288\n00:14:28.680 --> 00:14:33.146\nAnd then, we'll to kind of keep\nrunning with that -g jdoe.\n\n289\n00:14:33.146 --> 00:14:35.060\nThat was the group I wanted him to be in.\n\n290\n00:14:35.060 --> 00:14:38.830\nAnd I won't do them all, but you guys see\nwhere I can kinda break them up on a line.\n\n291\n00:14:38.830 --> 00:14:41.800\nThis makes it a little more manageable,\na little easier to see on the screen.\n\n292\n00:14:41.800 --> 00:14:44.519\nScript, you wouldn't care how\nthe long the command was.\n\n293\n00:14:44.519 --> 00:14:47.005\nBut when you're doing it by hand,\nsometimes in a terminal,\n\n294\n00:14:47.005 --> 00:14:50.610\nyou just don't have a lot of screen real\nestate, this makes life a lot easier.\n\n295\n00:14:50.610 --> 00:14:55.390\nAnd I can do that and\nwhen I get to a line and I don't put\n\n296\n00:14:55.390 --> 00:15:00.900\na \\, that's when it's gonna step in and\nit's actually going to run the command.\n\n297\n00:15:00.900 --> 00:15:04.850\nAnd so, when I do that one,\nnow it knows time to run the command.\n\n298\n00:15:06.350 --> 00:15:10.659\nAnd it tried to run the jdoe command and\nwhat it did, it's all permission denied,\n\n299\n00:15:10.659 --> 00:15:14.450\nbecause I didn't sudo it,\nI didn't run it as an administrator.\n\n300\n00:15:14.450 --> 00:15:17.200\nBut if I hit my up arrow\nto bring up my history.\n\n301\n00:15:17.200 --> 00:15:18.140\nLook at that.\n\n302\n00:15:18.140 --> 00:15:20.720\nIt's all one line.\n\n303\n00:15:20.720 --> 00:15:24.410\nIt processes it as one line, so\nit's simply a visual change.\n\n304\n00:15:24.410 --> 00:15:28.630\nBy doing those \\'s like that,\nit's a visual thing to help us as humans\n\n305\n00:15:28.630 --> 00:15:31.980\nto get that data entry put in there and\nget it right and look nice.\n\n306\n00:15:31.980 --> 00:15:34.860\nThe computer, it's gonna string it all\ntogether in one line and then run it.\n\n307\n00:15:34.860 --> 00:15:37.960\nSo that's basically a multi line command.\n\n308\n00:15:37.960 --> 00:15:38.950\n&gt;&gt; Don, I love that to death.\n\n309\n00:15:38.950 --> 00:15:39.642\nThat is great and\n\n310\n00:15:39.642 --> 00:15:42.663\nI really like the way that you do it\nwith the every option has its own line.\n\n311\n00:15:42.663 --> 00:15:46.412\nIt really makes it easy to follow and\nread what exactly you're trying to do.\n\n312\n00:15:46.412 --> 00:15:49.702\nAnd then if you make any mistakes,\njust look back at your output.\n\n313\n00:15:49.702 --> 00:15:54.469\nNow we talk about, you said this if\nI go back to my history That history,\n\n314\n00:15:54.469 --> 00:15:59.960\nit seems like a mundane thing but it's\nactually very important and very helpful.\n\n315\n00:15:59.960 --> 00:16:03.183\nAnd there's a lot of powerful ways in\nwhich we can use artistry, correct?\n\n316\n00:16:03.183 --> 00:16:03.704\n&gt;&gt; Yeah, yeah.\n\n317\n00:16:03.704 --> 00:16:07.470\nWe haven't really talked about\nhistory in all these episodes, so\n\n318\n00:16:07.470 --> 00:16:09.670\nlet's talk about it now.\n\n319\n00:16:09.670 --> 00:16:12.590\nWhen you type a command,\nthe shell remembers it.\n\n320\n00:16:12.590 --> 00:16:13.520\nIt remembers your command,\n\n321\n00:16:13.520 --> 00:16:17.320\nit maintains a history of all\nthe commands that you've typed.\n\n322\n00:16:17.320 --> 00:16:20.040\nAnd you can just easily use your\nkeyboard to view that history.\n\n323\n00:16:20.040 --> 00:16:21.930\nYou can press up, the up arrow, and\n\n324\n00:16:21.930 --> 00:16:25.839\nyou're scrolling backwards through\nall the commands that you've run.\n\n325\n00:16:25.839 --> 00:16:28.190\nOr you can press down and\nnow you're scrolling forward.\n\n326\n00:16:28.190 --> 00:16:29.144\nSo you can scroll back and\n\n327\n00:16:29.144 --> 00:16:31.701\nforth through all the commands\nyou've run that session, right?\n\n328\n00:16:31.701 --> 00:16:36.037\nIt's a nice way if you maybe had a little\ntypo, you can just hit that up arrow and\n\n329\n00:16:36.037 --> 00:16:39.676\nthen you can go and fix the typo and\nthen you're back in business.\n\n330\n00:16:39.676 --> 00:16:43.400\nMaybe you're in a shell that\ndoesn't support arrow keys, right?\n\n331\n00:16:43.400 --> 00:16:47.460\nThere are some that don't, especially\nwhen you're remoting into a terminal.\n\n332\n00:16:47.460 --> 00:16:50.030\nSee, there's some keyboard shortcuts for\nthis as well.\n\n333\n00:16:50.030 --> 00:16:53.143\nYou can do Ctrl+P and Ctrl+N.\n\n334\n00:16:53.143 --> 00:16:56.930\nCtrl+P for the previous command,\nCtrl+N for the next command.\n\n335\n00:16:56.930 --> 00:16:59.485\nSo, previous and next,\nit kind of makes sense, which is odd.\n\n336\n00:16:59.485 --> 00:17:01.334\n&gt;&gt; [LAUGH]\n&gt;&gt; So but Ctrl+P and\n\n337\n00:17:01.334 --> 00:17:04.170\nCtrl+N to be able to scroll back and\nforth between those and\n\n338\n00:17:04.170 --> 00:17:06.300\nbe able to see everything\nthat you've run before.\n\n339\n00:17:06.300 --> 00:17:08.750\nBut I'll tell you one of\nthe most handy ways to do this to\n\n340\n00:17:08.750 --> 00:17:10.290\nactually just type history.\n\n341\n00:17:11.700 --> 00:17:12.820\nThat's the history command and\n\n342\n00:17:12.820 --> 00:17:16.090\nit will show you all of\nthe commands that you've typed.\n\n343\n00:17:16.090 --> 00:17:18.890\nAnd so we can see from the beginning\nof the episode where I started running\n\n344\n00:17:18.890 --> 00:17:23.460\nmidnight commander and nano and all those\nand putting them in the background.\n\n345\n00:17:23.460 --> 00:17:24.870\nI can see where I did that.\n\n346\n00:17:24.870 --> 00:17:27.490\nAnd then we can see where I\nstarted running uname and\n\n347\n00:17:27.490 --> 00:17:30.200\nchaining commands and\nthen the multiline command which\n\n348\n00:17:30.200 --> 00:17:34.210\ndoesn't show as multiline because\nthe system strung it all together.\n\n349\n00:17:34.210 --> 00:17:38.350\nBut I can see everything that I type\nright there to be able to look at it and\n\n350\n00:17:38.350 --> 00:17:39.630\nrecall it and get that information.\n\n351\n00:17:39.630 --> 00:17:42.150\nSo the history command is\na great way to view that.\n\n352\n00:17:43.370 --> 00:17:45.660\nBut we can go even further with it.\n\n353\n00:17:45.660 --> 00:17:48.650\nWith the history command, I'm not just\nlimited to being able to scroll up and\n\n354\n00:17:48.650 --> 00:17:49.398\nscroll down like that.\n\n355\n00:17:49.398 --> 00:17:54.000\nIf I wanna try to run a command again,\nmaybe I want to try and add J Doe again.\n\n356\n00:17:54.000 --> 00:17:57.070\nAll right,\nwhat you can do from your command line\n\n357\n00:17:57.070 --> 00:18:00.830\nis you can type an exclamation point,\nand the exclamation point lets\n\n358\n00:18:00.830 --> 00:18:04.920\nthe system know that you want to work\nwith the history command, all right?\n\n359\n00:18:04.920 --> 00:18:08.400\nAnd then you can type the number\nof a previous command.\n\n360\n00:18:08.400 --> 00:18:11.780\nSo that user add command for\nme was command number 28.\n\n361\n00:18:11.780 --> 00:18:15.907\nSo if I do an exclamation point and\nthen type 28, it's gonna rerun that line.\n\n362\n00:18:15.907 --> 00:18:17.820\nAnd it shows me the line.\n\n363\n00:18:17.820 --> 00:18:21.420\nIt shows me the command that it ran,\nand then I got permission denied again.\n\n364\n00:18:21.420 --> 00:18:23.250\nCuz I'm not an administrator,\nbut it ran it.\n\n365\n00:18:23.250 --> 00:18:24.998\nSo I can easily do it with any of them.\n\n366\n00:18:24.998 --> 00:18:27.150\nIf I wanna view my jobs,\nthat was number 13, right?\n\n367\n00:18:27.150 --> 00:18:33.120\nSo I can say !13 and that lists my jobs,\nor whatever else it is that I want to do.\n\n368\n00:18:33.120 --> 00:18:38.130\nI want to launch gedit again, I can do\n!16, and there it goes, launching gedit,\n\n369\n00:18:38.130 --> 00:18:39.440\njust like we did before.\n\n370\n00:18:39.440 --> 00:18:43.210\nSo being able to view that history and\nrecall those commands, it's pretty nice.\n\n371\n00:18:43.210 --> 00:18:47.030\nIt saves you a lot of typing, and it does\ngive you a chance to go in there and\n\n372\n00:18:47.030 --> 00:18:49.490\nfix typos that you might have had,\nor whatever.\n\n373\n00:18:49.490 --> 00:18:52.380\n&gt;&gt; Yeah, Don, speaking of saving typing,\nhere's one of my,\n\n374\n00:18:52.380 --> 00:18:56.490\nI do this all the time and\nI always wanna flog myself for\n\n375\n00:18:56.490 --> 00:18:58.690\ndoing it cuz I can't believe\nI never remember to do this.\n\n376\n00:18:58.690 --> 00:19:02.300\nWhen I need to run elevated privileges,\nI'll type in these long commands for\n\n377\n00:19:02.300 --> 00:19:04.930\nwhatever it is I'm doing and\nI forgot to put the sudo, right?\n\n378\n00:19:04.930 --> 00:19:09.530\nJust forgot, I hit Enter, and\nnow I have to type it in again, or\n\n379\n00:19:09.530 --> 00:19:13.380\nI've got to up to my last history and\nthen move over.\n\n380\n00:19:13.380 --> 00:19:15.160\nOr I can use some command\nshortcuts if I know them.\n\n381\n00:19:15.160 --> 00:19:18.600\nBut probably just using arrow to\narrow over this massive command, so\n\n382\n00:19:18.600 --> 00:19:19.970\nI can type sudo in again.\n\n383\n00:19:19.970 --> 00:19:23.600\nThere's a neat little shortcut\nbuilt in and it saves my bacon.\n\n384\n00:19:23.600 --> 00:19:25.270\nI'll let you hammer it home.\n\n385\n00:19:25.270 --> 00:19:26.030\n&gt;&gt; Sure, so\n\n386\n00:19:26.030 --> 00:19:30.070\nlet's say I had a command that I wanted\nto run as an administrator, and I didn't.\n\n387\n00:19:30.070 --> 00:19:33.000\nSo maybe I'll just run a command\nline to illustrate the point.\n\n388\n00:19:33.000 --> 00:19:34.930\nAnd so when I run it, it runs as me.\n\n389\n00:19:34.930 --> 00:19:36.932\nHang on, I've got a job ending there,\nthere we go.\n\n390\n00:19:36.932 --> 00:19:39.960\nSo I run it through MI and\nit shows it running as deep.\n\n391\n00:19:39.960 --> 00:19:43.605\nI'm like shoot, I meant to run\nthat as an administrator, right?\n\n392\n00:19:43.605 --> 00:19:44.914\nWell, I could press the up arrow.\n\n393\n00:19:44.914 --> 00:19:47.930\nWe'll take the user [INAUDIBLE] because\nthat one's actually long, right?\n\n394\n00:19:47.930 --> 00:19:49.410\nI run it and I get an error.\n\n395\n00:19:49.410 --> 00:19:53.203\nI could press the up arrow and then\nhold the left arrow to scroll back, or\n\n396\n00:19:53.203 --> 00:19:57.600\nmaybe I'm a keyboard junkie, so\nI do Ctrl+P to get the previous command.\n\n397\n00:19:57.600 --> 00:20:00.310\nAnd then you've got Ctrl+A\nto jump to the beginning.\n\n398\n00:20:00.310 --> 00:20:03.280\nThat's nice if I remember it,\nand I can say sudo, right?\n\n399\n00:20:03.280 --> 00:20:08.060\nBut what's even better\nis in the history world,\n\n400\n00:20:08.060 --> 00:20:13.190\nif you do !!,\nthat reruns your previous command.\n\n401\n00:20:13.190 --> 00:20:15.323\nSo I had user add as my previous command.\n\n402\n00:20:15.323 --> 00:20:19.390\nSo if I do, !!, it reruns it.\n\n403\n00:20:19.390 --> 00:20:24.374\nEven better though,\nI could type sudo !!, now,\n\n404\n00:20:24.374 --> 00:20:29.410\nit's gonna rerun that same command but\nit's gonna run it as root.\n\n405\n00:20:29.410 --> 00:20:33.580\nSo for example, if I do whoami,\nthat ran as dpezet.\n\n406\n00:20:33.580 --> 00:20:40.690\nBut if I do sudu !!, it's gonna rerun\nwho am I and it runs it as root.\n\n407\n00:20:40.690 --> 00:20:43.760\nSo real quick way,\nno matter how long your command was,\n\n408\n00:20:43.760 --> 00:20:48.220\nit could wrap around the screen five\ntimes, and you just do sudo bang bang and\n\n409\n00:20:48.220 --> 00:20:51.160\nthen there we go, and\nit runs with those elevated privileges.\n\n410\n00:20:51.160 --> 00:20:54.120\nSo a really handy way to do that and\na neat way.\n\n411\n00:20:54.120 --> 00:20:57.910\nYou can also use this if you forget\nan argument, I wanna run you name-a.\n\n412\n00:20:57.910 --> 00:21:01.850\nI wanna see what kernel I'm running,\nand instead I just run you name, oops.\n\n413\n00:21:01.850 --> 00:21:05.180\nI forgot the -a, so\nI need to add -a to it.\n\n414\n00:21:05.180 --> 00:21:11.280\nAnd so if I wanna do that,\nI could just say !!-a.\n\n415\n00:21:11.280 --> 00:21:14.920\nSo run the same command I just ran but\nadd a -a to the end and\n\n416\n00:21:14.920 --> 00:21:16.970\nnow I get the output that I want.\n\n417\n00:21:16.970 --> 00:21:19.030\nSo quick,\neasy way to interact with that, and\n\n418\n00:21:19.030 --> 00:21:21.560\nyou can do that with any\nof the history commands.\n\n419\n00:21:21.560 --> 00:21:26.562\nSo if I'm looking at my history, and\nI see where I ran d message, right?\n\n420\n00:21:26.562 --> 00:21:27.994\nIt was number 25, right?\n\n421\n00:21:27.994 --> 00:21:33.920\nSo if I were to call up number 25\nlike this, there's d message, right?\n\n422\n00:21:33.920 --> 00:21:36.420\nBut I really wanted to\npipe that into less.\n\n423\n00:21:36.420 --> 00:21:41.680\nWell, I could just say !25 and\nthen pipe that into less.\n\n424\n00:21:41.680 --> 00:21:43.440\nAnd so\nnow I'm gonna rerun that same command.\n\n425\n00:21:43.440 --> 00:21:44.690\nAnd that's useful if you run one and\n\n426\n00:21:44.690 --> 00:21:46.910\nyou don't realize that there's\ngonna be a flood of information,\n\n427\n00:21:46.910 --> 00:21:50.900\nyou can just say let me quit that and\nthen I'll rerun it like that.\n\n428\n00:21:50.900 --> 00:21:52.460\nAnd then pipe that into less or\n\n429\n00:21:52.460 --> 00:21:55.530\nwherever it is that you want it to go,\nquick way to easily redo that.\n\n430\n00:21:55.530 --> 00:21:58.790\nSo really neat stuff there when it\ncomes to manipulating your history.\n\n431\n00:21:58.790 --> 00:21:59.790\n&gt;&gt; Yeah, go ahead.\n\n432\n00:21:59.790 --> 00:22:02.070\n&gt;&gt; Let me just add one\nquick thing about this.\n\n433\n00:22:02.070 --> 00:22:03.840\nHistory is tied to your session.\n\n434\n00:22:03.840 --> 00:22:07.490\nAnd so if I close my session,\nthis history goes away.\n\n435\n00:22:07.490 --> 00:22:12.350\nAnd when I log in again, I get an all new\nsession, which means an all new history.\n\n436\n00:22:12.350 --> 00:22:17.030\nSome distros have started writing\nyour history to a file, right?\n\n437\n00:22:17.030 --> 00:22:22.300\nIf you look in your home directory,\nif you like a ls-la and\n\n438\n00:22:22.300 --> 00:22:26.940\nlook, you may have a file in\nthere called .bash_history.\n\n439\n00:22:26.940 --> 00:22:31.180\nThere's mine right there, okay?\n\n440\n00:22:31.180 --> 00:22:34.320\nAnd as you run your commands,\nwhen you log out,\n\n441\n00:22:34.320 --> 00:22:38.160\na lot of operating systems will\nstart to write to that file.\n\n442\n00:22:38.160 --> 00:22:40.138\nSo when you log in the next time,\nyour history is still there.\n\n443\n00:22:40.138 --> 00:22:45.589\nThat's kind of nice, okay, so some of\nthem don't do it automatically though and\n\n444\n00:22:45.589 --> 00:22:48.987\nyou can make the system do\nit by saying history -w.\n\n445\n00:22:48.987 --> 00:22:51.340\n-w is for write.\n\n446\n00:22:51.340 --> 00:22:53.540\nI wanna write my history to a file.\n\n447\n00:22:53.540 --> 00:22:55.280\nAnd that's gonna make sure\nthat it gets committed, so\n\n448\n00:22:55.280 --> 00:23:00.120\nthe next time I log in, the very first\ncommand I could run is history and\n\n449\n00:23:00.120 --> 00:23:02.780\nall of my previous commands\nwould pop up and show up there.\n\n450\n00:23:02.780 --> 00:23:04.501\nSo history -w, really handy for that.\n\n451\n00:23:04.501 --> 00:23:05.984\n&gt;&gt; All right, Don.\n\n452\n00:23:05.984 --> 00:23:09.030\nWell, that moves us into the last\nthing we have for the show.\n\n453\n00:23:09.030 --> 00:23:09.800\nVery interesting,\n\n454\n00:23:09.800 --> 00:23:13.425\nI think this is one of the crowning\njewels of working in the Linux system.\n\n455\n00:23:13.425 --> 00:23:16.666\nAnd it's because Linux is meant\nto be very configurable, right?\n\n456\n00:23:16.666 --> 00:23:19.148\nIt was meant to be the way you like it.\n\n457\n00:23:19.148 --> 00:23:23.462\nA lot of times, and you've talked about\nthis as well, things like ls commands.\n\n458\n00:23:23.462 --> 00:23:26.100\nI wanna add certain options,\nor I always add those options.\n\n459\n00:23:27.150 --> 00:23:29.950\nAnd Linux, they give us\nthe ability to make it to where it\n\n460\n00:23:29.950 --> 00:23:34.250\nalways runs that option through a little\ncommand that they give us, correct?\n\n461\n00:23:34.250 --> 00:23:38.314\n&gt;&gt; Absolutely, yeah, we have aliases where\nyou can create your own custom name for\n\n462\n00:23:38.314 --> 00:23:39.462\nany command, right?\n\n463\n00:23:39.462 --> 00:23:41.249\nI used to do this with the ones\nthat I would always type wrong.\n\n464\n00:23:41.249 --> 00:23:43.839\n&gt;&gt; [LAUGH]\n&gt;&gt; There were some that I would always\n\n465\n00:23:43.839 --> 00:23:47.463\nspell them wrong, so in the Unix world,\nit's an old command now,\n\n466\n00:23:47.463 --> 00:23:51.241\nbut you used to have IF config Which,\nit's still there, ifconfig.\n\n467\n00:23:51.241 --> 00:23:54.473\nIf you work in the Windows world,\nthe command is ipconfig.\n\n468\n00:23:54.473 --> 00:23:57.590\nAnd I would move between Windows and Linux\nso much that sometimes I would screw up.\n\n469\n00:23:57.590 --> 00:24:00.360\nSo I started creating an alias,\nso that any time I ran ipconfig,\n\n470\n00:24:00.360 --> 00:24:03.670\nit would just call ifconfig and\nsave me the screw up.\n\n471\n00:24:03.670 --> 00:24:06.910\nIt doesn't matter now,\ncuz ifconfig is going away.\n\n472\n00:24:06.910 --> 00:24:10.770\nBut you can create aliases to\nmap any name to any command.\n\n473\n00:24:10.770 --> 00:24:12.160\nAnd it's pretty handy.\n\n474\n00:24:12.160 --> 00:24:14.560\nWhat you do is you just type alias and\n\n475\n00:24:14.560 --> 00:24:18.300\nthen the command that\nyou want to overwrite.\n\n476\n00:24:18.300 --> 00:24:24.417\nOkay, so for example,\nI may want to overwrite ipconfig, right?\n\n477\n00:24:24.417 --> 00:24:27.200\nSo that's the command that I keep running.\n\n478\n00:24:27.200 --> 00:24:28.802\nI want it to run as ifconfig.\n\n479\n00:24:28.802 --> 00:24:32.575\nAnd so then you can say, equals and\na single tick for a quote mark, and\n\n480\n00:24:32.575 --> 00:24:35.290\nwhatever command you\nwant it to actually run.\n\n481\n00:24:35.290 --> 00:24:38.828\nI want it to run ifconfig instead.\n\n482\n00:24:38.828 --> 00:24:40.001\nSo now when I screw up and\n\n483\n00:24:40.001 --> 00:24:43.180\ntype the wrong thing,\nit's gonna make me type the right thing.\n\n484\n00:24:43.180 --> 00:24:44.790\nNow, before I do that,\nlet me clear that out.\n\n485\n00:24:45.910 --> 00:24:47.680\nI'm gonna run ipconfig.\n\n486\n00:24:47.680 --> 00:24:48.380\nCommand not found.\n\n487\n00:24:48.380 --> 00:24:50.480\nAll right, it doesn't exist in Linux.\n\n488\n00:24:50.480 --> 00:24:55.340\nThen I'm gonna run alias\nipconfig=ifconfig.\n\n489\n00:24:55.340 --> 00:25:01.080\nNow when I run ipconfig, it says,\nyou meant to run ifconfig, and it runs it.\n\n490\n00:25:01.080 --> 00:25:02.760\nThat's one example of using an alias.\n\n491\n00:25:04.330 --> 00:25:05.680\nOver the years you learn your commands.\n\n492\n00:25:05.680 --> 00:25:06.320\nYou stop screwing up.\n\n493\n00:25:06.320 --> 00:25:07.460\nSo you don't need it that way.\n\n494\n00:25:07.460 --> 00:25:10.070\nBut where I use it\nare command line arguments.\n\n495\n00:25:10.070 --> 00:25:12.912\nI rarely want just ls.\n\n496\n00:25:12.912 --> 00:25:16.207\nI almost always want ls -lah, right?\n\n497\n00:25:16.207 --> 00:25:17.460\nI want the long output.\n\n498\n00:25:17.460 --> 00:25:19.760\nI wanna show all files, even hidden files.\n\n499\n00:25:19.760 --> 00:25:21.797\nAnd I want it to be human\nreadable file sizes.\n\n500\n00:25:21.797 --> 00:25:23.720\nThat's what I want, lah.\n\n501\n00:25:23.720 --> 00:25:25.500\nSo I have to type that every time.\n\n502\n00:25:25.500 --> 00:25:27.036\nAnd that's annoying.\n\n503\n00:25:27.036 --> 00:25:32.708\nI could just say alias ls equals,\nand then I'll do a single tick and\n\n504\n00:25:32.708 --> 00:25:37.980\ntell it that I actually mean\nthat to be ls-lah, right?\n\n505\n00:25:37.980 --> 00:25:41.242\nAnd when I do that, now whenever I run ls,\n\n506\n00:25:41.242 --> 00:25:44.888\nit actually runs it the way\nthat I wanted it to.\n\n507\n00:25:44.888 --> 00:25:47.829\nAnd it lays it out here and\nI see all the files and\n\n508\n00:25:47.829 --> 00:25:50.500\ninformation laid out nice and neat.\n\n509\n00:25:50.500 --> 00:25:52.810\nAnd I might even want to go\na little bit further, and\n\n510\n00:25:52.810 --> 00:25:57.520\nhave like a --color=auto,\ncuz I lost my coloring in that one.\n\n511\n00:25:57.520 --> 00:25:58.920\nAnd so I can add that to it, or\n\n512\n00:25:58.920 --> 00:26:02.230\nwhatever else it is that I need to make\nthat alias work the way that I want.\n\n513\n00:26:02.230 --> 00:26:05.830\nAnd now when I look at it, I get the long\noutput and it's nice and colorized.\n\n514\n00:26:05.830 --> 00:26:08.632\nAnd all I had to run was ls.\n\n515\n00:26:08.632 --> 00:26:12.450\nNow, quick word of caution about this,\naliases are a temporary thing.\n\n516\n00:26:12.450 --> 00:26:15.110\nSo the moment I log out,\nthe aliases go away.\n\n517\n00:26:15.110 --> 00:26:17.674\nWe're gonna do another episode\non environment variables and\n\n518\n00:26:17.674 --> 00:26:20.001\nhow we can make these things\npersist between sessions.\n\n519\n00:26:20.001 --> 00:26:22.584\nBut just using the alias\ncommand like this is temporary.\n\n520\n00:26:22.584 --> 00:26:25.976\nSo you really wanna put it into a login\nscript, so that every time you log in,\n\n521\n00:26:25.976 --> 00:26:27.670\nthe aliases are recreated.\n\n522\n00:26:27.670 --> 00:26:30.630\nAnd you already have some of\nthose whether you know it or not.\n\n523\n00:26:30.630 --> 00:26:32.540\nIf you just run the alias command,\n\n524\n00:26:32.540 --> 00:26:37.040\nit'll show you any aliases you've already\ngot and you'll see the ones that I made.\n\n525\n00:26:37.040 --> 00:26:41.020\nThere's the alias for\nipconfig right there.\n\n526\n00:26:41.020 --> 00:26:45.480\nBut there's other aliases like egrep and\nfgrep, I didnt make those.\n\n527\n00:26:45.480 --> 00:26:48.468\nBut the system has them anyway,\nthey've been created.\n\n528\n00:26:48.468 --> 00:26:51.824\nAnd that's because somebody at Red Hat,\nin my case, decided to go ahead and\n\n529\n00:26:51.824 --> 00:26:52.620\nput those there.\n\n530\n00:26:52.620 --> 00:26:54.049\nif you're running Ubuntu\nyou may see different ones.\n\n531\n00:26:54.049 --> 00:26:57.829\nIf you're running Debian you'll see\ndifferent ones just based on whatever it\n\n532\n00:26:57.829 --> 00:27:00.020\nis that was set up for your system.\n\n533\n00:27:00.020 --> 00:27:04.384\n&gt;&gt; Well, Don you named this other useful\ncommands and that's definitely what it is.\n\n534\n00:27:04.384 --> 00:27:07.562\nThere's a lot of great, useful commands\nthat are inside of our Linux systems.\n\n535\n00:27:07.562 --> 00:27:11.756\nThey're gonna help us navigate, help us\nget around the place a whole lot easier.\n\n536\n00:27:11.756 --> 00:27:16.182\nEmpower us to use the system in\na better way that's more convenient,\n\n537\n00:27:16.182 --> 00:27:17.660\nmore efficient.\n\n538\n00:27:17.660 --> 00:27:20.160\nSo we just have to be aware of\nthose things that are in there.\n\n539\n00:27:20.160 --> 00:27:24.010\nAnd Don, you did a fantastic job of\nshowing us today some of those commands\n\n540\n00:27:24.010 --> 00:27:26.960\nthat are lurking around\ninside of our Linux box.\n\n541\n00:27:26.960 --> 00:27:28.835\nGot any parting words before\nwe close the show today?\n\n542\n00:27:28.835 --> 00:27:31.280\n&gt;&gt; I tried to cover a lot\nof stuff that I use,\n\n543\n00:27:31.280 --> 00:27:33.960\nthings that make my life a little better.\n\n544\n00:27:33.960 --> 00:27:37.090\nBe careful as you start to find tools and\nutilities that you really enjoy.\n\n545\n00:27:37.090 --> 00:27:40.200\nI always try and stick with ones that\nare standard, they're core utilities,\n\n546\n00:27:40.200 --> 00:27:42.980\nones that I know are going to be\nthere no matter what system I get on.\n\n547\n00:27:42.980 --> 00:27:45.100\nWhen you start creating\na bunch of aliases,\n\n548\n00:27:45.100 --> 00:27:47.830\nwhat happens when you go to a system\nthat doesn't have those aliases?\n\n549\n00:27:47.830 --> 00:27:50.168\nNow that that's gone,\nyou can have a really hard time.\n\n550\n00:27:50.168 --> 00:27:52.600\nSo I try not to rely on them too much.\n\n551\n00:27:52.600 --> 00:27:55.859\nIf you do rely on them a lot, start\ncarrying a thumb drive with little script\n\n552\n00:27:55.859 --> 00:27:59.042\nfile that creates those aliases real\nquick or something of that nature.\n\n553\n00:27:59.042 --> 00:28:01.306\nBut you don't want to lean on it too much,\nbut\n\n554\n00:28:01.306 --> 00:28:04.465\nthere are a ton of built in utilities\nthat really can help you and\n\n555\n00:28:04.465 --> 00:28:07.945\nmake that command line environment\na lot more friendly to use.\n\n556\n00:28:07.945 --> 00:28:08.755\nJust explore around.\n\n557\n00:28:08.755 --> 00:28:10.568\nMess around with them.\nYou'll find that that's actually\n\n558\n00:28:10.568 --> 00:28:11.975\npretty neat what you can do in there.\n\n559\n00:28:11.975 --> 00:28:13.785\n&gt;&gt; Words of wisdom from Don Pezet.\n\n560\n00:28:13.785 --> 00:28:17.135\nMy departing words will be check the man\nfiles for each one of these commands.\n\n561\n00:28:17.135 --> 00:28:19.070\nThey have a lot of great\ninformation inside of them.\n\n562\n00:28:19.070 --> 00:28:21.740\nIt might do something you haven't\neven realize it could do and\n\n563\n00:28:21.740 --> 00:28:23.580\nmake your life a whole lot easier.\n\n564\n00:28:23.580 --> 00:28:25.142\nI know I found out to be true for myself.\n\n565\n00:28:25.142 --> 00:28:28.800\nDon, thanks so much for joining us today,\nappreciate your time and effort as always.\n\n566\n00:28:28.800 --> 00:28:31.461\nAnd as always, we appreciate you\ngood folks out there for watching.\n\n567\n00:28:31.461 --> 00:28:35.150\nBut look at the clock, we have exhausted\nthe time for yet another great show.\n\n568\n00:28:35.150 --> 00:28:35.910\nThanks for joining us,\n\n569\n00:28:35.910 --> 00:28:38.870\nsigning off for ITProTV,\nI've been your host Daniel Lowrie.\n\n570\n00:28:38.870 --> 00:28:39.582\n&gt;&gt; And I'm Don Pezet.\n\n571\n00:28:39.582 --> 00:28:42.141\n&gt;&gt; And we'll see you next time\n\n572\n00:28:42.141 --> 00:28:48.181\n[MUSIC]\n\n573\n00:28:48.181 --> 00:28:50.185\nThank you for watching, ITProTV\n\n",
          "vimeoId": "235067465"
        }
      ],
      "title": "Advanced Shell Commands"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Don introduces viewers to variables. He demonstrates how you can store data in a variable for retrieval at a later time. He then shows a few examples of how these can be used.",
          "length": "1739",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-1-1-environment_variables-092517.00_28_45_15.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-1-1-environment_variables-092517.00_28_45_15.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-1-1-environment_variables-092517.00_28_45_15.Still001-sm.jpg",
          "title": "Environment Variables",
          "transcript": "WEBVTT\n\n1\n00:00:00.230 --> 00:00:03.174\nWelcome to ITPro.TV,\nI'm your host, Don Pezet.\n\n2\n00:00:03.174 --> 00:00:08.196\n[CROSSTALK]\n[MUSIC]\n\n3\n00:00:08.196 --> 00:00:10.705\n&gt;&gt; You're watching ITPro.TV.\n\n4\n00:00:10.705 --> 00:00:13.343\n&gt;&gt; All right, greetings everyone.\n\n5\n00:00:13.343 --> 00:00:16.114\nAnd welcome back to another\ngreat episode of ITPro.TV.\n\n6\n00:00:16.114 --> 00:00:17.863\nI'm your host, Daniel Lowrie.\n\n7\n00:00:17.863 --> 00:00:21.902\nAnd in today's episode, we are back with\nmore in our Linux Command Line series.\n\n8\n00:00:21.902 --> 00:00:23.985\nJoining us in the studio,\nyou know who it is.\n\n9\n00:00:23.985 --> 00:00:25.650\nOur good friend, Mr. Don Pezet.\n\n10\n00:00:25.650 --> 00:00:26.515\nDon, welcome back sir.\n\n11\n00:00:26.515 --> 00:00:27.360\nWe're so glad to have you again.\n\n12\n00:00:27.360 --> 00:00:28.160\nHow is it going today?\n\n13\n00:00:28.160 --> 00:00:28.731\n&gt;&gt; It is going so well.\n\n14\n00:00:28.731 --> 00:00:32.160\nAnd we are ready to dive right back\ninto the world of Linux Command Line.\n\n15\n00:00:32.160 --> 00:00:35.950\nAnd in this episode, we are taking\na look at environment variables.\n\n16\n00:00:35.950 --> 00:00:39.620\nWhich are odd little things that float\naround in the back of our [LAUGH]\n\n17\n00:00:39.620 --> 00:00:42.630\nshell prompts that we\ndon't think much about.\n\n18\n00:00:42.630 --> 00:00:44.680\nBut they are actually really important.\n\n19\n00:00:44.680 --> 00:00:46.078\nThey're incredibly useful.\n\n20\n00:00:46.078 --> 00:00:48.200\nSo we're gonna take\na look at how they work.\n\n21\n00:00:48.200 --> 00:00:50.960\nKeep in mind, in this episode,\nwe're really gonna be doing\n\n22\n00:00:50.960 --> 00:00:54.910\na high level overview of environment\nvariables and how they function.\n\n23\n00:00:54.910 --> 00:00:58.339\nBut in a later series,\nwe're doing the Linux shell scripting.\n\n24\n00:00:58.339 --> 00:01:02.640\nAnd in the shell scripting,\nyou use variables all the time.\n\n25\n00:01:02.640 --> 00:01:03.770\nThey are a pivotal piece of that.\n\n26\n00:01:03.770 --> 00:01:06.790\nSo here we're gonna focus\non the foundational side.\n\n27\n00:01:06.790 --> 00:01:09.340\nBut be sure to check out the scripting\nseries if you wanna really see these\n\n28\n00:01:09.340 --> 00:01:11.290\nthings in action and what all they can do.\n\n29\n00:01:11.290 --> 00:01:13.940\n&gt;&gt; All right, Don, well,\nlet's talk about environment variables.\n\n30\n00:01:13.940 --> 00:01:15.717\nYou say they are lurking in our machine.\n\n31\n00:01:15.717 --> 00:01:17.733\nThey're super duper powerful.\n\n32\n00:01:17.733 --> 00:01:19.319\nWhat the heck are they?\n\n33\n00:01:19.319 --> 00:01:20.360\n[LAUGH]\n&gt;&gt; All right, so\n\n34\n00:01:20.360 --> 00:01:23.130\nlet's just start with the variable.\n\n35\n00:01:23.130 --> 00:01:24.712\nSo a variable is basically a placeholder.\n\n36\n00:01:24.712 --> 00:01:27.410\nIt's a little placeholder in memory.\n\n37\n00:01:27.410 --> 00:01:31.240\nWhere the operating system sets\naside a little spot in memory, and\n\n38\n00:01:31.240 --> 00:01:33.477\nsays you can put stuff here.\n\n39\n00:01:33.477 --> 00:01:34.902\nThink of this like a storage unit.\n\n40\n00:01:34.902 --> 00:01:37.368\n[LAUGH] so I rent a storage unit and\nI can put junk in there.\n\n41\n00:01:37.368 --> 00:01:37.901\n&gt;&gt; Listen to this storage.\n\n42\n00:01:37.901 --> 00:01:39.940\n[LAUGH]\n&gt;&gt; And when I need it, I can go and\n\n43\n00:01:39.940 --> 00:01:40.780\nget it out.\n\n44\n00:01:40.780 --> 00:01:42.078\nThat's all a variable is,\nit's mini storage.\n\n45\n00:01:42.078 --> 00:01:43.062\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n46\n00:01:43.062 --> 00:01:45.176\n&gt;&gt; You've got it and you can reach out and\n\n47\n00:01:45.176 --> 00:01:47.590\ngrab data out of it whenever you want.\n\n48\n00:01:47.590 --> 00:01:50.058\nYou can put data there and\nit'll sit there.\n\n49\n00:01:50.058 --> 00:01:53.304\nSit there until you're ready for\nit and you go and you retrieve it.\n\n50\n00:01:53.304 --> 00:01:55.810\nSo that's what a variable does.\n\n51\n00:01:55.810 --> 00:01:59.860\nNow you can use them, but\nyour computer uses them all the time,\n\n52\n00:01:59.860 --> 00:02:01.660\nregardless of whether you use them or not.\n\n53\n00:02:01.660 --> 00:02:04.060\nVariables are constantly in use.\n\n54\n00:02:04.060 --> 00:02:08.510\nAnd so in your system, you have user\nvariables and system variables.\n\n55\n00:02:08.510 --> 00:02:10.460\nApplications that create\ntheir own variables.\n\n56\n00:02:10.460 --> 00:02:13.560\nYou have session variables\nthat are tied to your shell.\n\n57\n00:02:13.560 --> 00:02:16.770\nYou have global variables that\nare tied to all of your shells.\n\n58\n00:02:16.770 --> 00:02:20.500\nThere's a number of variations of\nthe way these things get used.\n\n59\n00:02:20.500 --> 00:02:23.550\nBut at the end of the day, they're\nall just a little piece of storage.\n\n60\n00:02:23.550 --> 00:02:24.727\nA little storage unit.\n\n61\n00:02:24.727 --> 00:02:28.160\nYou can chunk data in there and\nretrieve it when you want.\n\n62\n00:02:28.160 --> 00:02:32.310\nNow if you create your own,\nyou certainly can make use them.\n\n63\n00:02:32.310 --> 00:02:35.730\nBut even if you don't, there are system\nvariables that are already created.\n\n64\n00:02:35.730 --> 00:02:40.290\n&gt;&gt; So Don, we've actually been using\nvariables throughout this series so far.\n\n65\n00:02:40.290 --> 00:02:42.090\nWe just haven't been calling them that,\nright?\n\n66\n00:02:42.090 --> 00:02:43.130\n&gt;&gt; Yeah, absolutely.\n\n67\n00:02:43.130 --> 00:02:46.228\nA lot of the commands that we run\nare actually just leveraging variables.\n\n68\n00:02:46.228 --> 00:02:47.880\nNow let me show you an example here.\n\n69\n00:02:47.880 --> 00:02:50.380\nSo in my command prompt,\n\n70\n00:02:50.380 --> 00:02:54.960\nif I wanna find out what my computer's\nname is, I can run the hostname command.\n\n71\n00:02:54.960 --> 00:02:56.440\nAnd hostname returns it.\n\n72\n00:02:56.440 --> 00:02:58.240\nAnd it just says, it's called Dons Laptop.\n\n73\n00:02:58.240 --> 00:02:59.830\nWell, where did it get that from?\n\n74\n00:02:59.830 --> 00:03:02.440\nIt got that from an environment variable.\n\n75\n00:03:02.440 --> 00:03:05.530\nThere's a variable that's storing\nwhat my computer's name is.\n\n76\n00:03:05.530 --> 00:03:06.350\nAnd when I run hostname,\n\n77\n00:03:06.350 --> 00:03:09.710\nit's just reaching out there and\ngrabbing it out of that variable.\n\n78\n00:03:09.710 --> 00:03:12.171\nThe variable in this case is\nactually called hostname.\n\n79\n00:03:12.171 --> 00:03:16.174\nAnd if I pull that up\nthrough another application,\n\n80\n00:03:16.174 --> 00:03:21.110\nI can do an echo $HOSTNAME,\nand there it is, Dons Laptop.\n\n81\n00:03:21.110 --> 00:03:24.350\nThe variable in this\ncase was called hostname.\n\n82\n00:03:24.350 --> 00:03:25.750\nAnd when I typed it here in this command,\n\n83\n00:03:25.750 --> 00:03:29.120\nyou know that it's a variable because\nit starts with a dollar sign.\n\n84\n00:03:29.120 --> 00:03:32.320\nThe dollar sign is the command\nline's little flag that says,\n\n85\n00:03:32.320 --> 00:03:34.610\nwhat I'm about to type is a variable name,\nokay?\n\n86\n00:03:34.610 --> 00:03:36.220\nAnd the variables are case sensitive.\n\n87\n00:03:36.220 --> 00:03:38.010\nThis one happens to be\nall capital letters.\n\n88\n00:03:38.010 --> 00:03:38.700\nThey don't have to be.\n\n89\n00:03:38.700 --> 00:03:41.000\nIt could be all lowercase letters,\nbut they are case sensitive.\n\n90\n00:03:41.000 --> 00:03:44.488\nSo when I run that hostname command,\nthat's what it's actually looking for.\n\n91\n00:03:44.488 --> 00:03:45.967\nOr if I do whoami.\n\n92\n00:03:45.967 --> 00:03:48.295\nwhoami, I'm dpezet.\n\n93\n00:03:48.295 --> 00:03:51.260\nAll it did was look at\nan environment variable.\n\n94\n00:03:51.260 --> 00:03:57.570\nAnd the environment variable in this case,\nif I echo that one, is called $USER.\n\n95\n00:03:57.570 --> 00:03:59.440\nAnd there it is, dpezet.\n\n96\n00:03:59.440 --> 00:04:00.240\nSo that's the variable.\n\n97\n00:04:00.240 --> 00:04:02.520\nIt queries it and it pulls it back.\n\n98\n00:04:02.520 --> 00:04:05.590\nEven some of the more fancy\ncommands like hostnamectl.\n\n99\n00:04:05.590 --> 00:04:08.500\nIf I run that one,\nit returns a bunch of data.\n\n100\n00:04:08.500 --> 00:04:10.640\nHere's my computer name,\nmy chassis, and so on.\n\n101\n00:04:10.640 --> 00:04:12.150\nAll of these are the data.\n\n102\n00:04:12.150 --> 00:04:14.930\nIt really is reaching out to these\ndifferent environment variables,\n\n103\n00:04:14.930 --> 00:04:18.210\ngrabbing that data and bringing it here.\n\n104\n00:04:18.210 --> 00:04:21.347\nNow, how did I know that\nit was called $HOSTNAME?\n\n105\n00:04:21.347 --> 00:04:23.510\nOr how do I know that it was called $USER?\n\n106\n00:04:23.510 --> 00:04:26.240\nWell, the dollar sign isn't\nactually part of the name.\n\n107\n00:04:26.240 --> 00:04:29.925\nThe dollar sign is just a flag that says,\nI'm about to type a variable name.\n\n108\n00:04:29.925 --> 00:04:32.942\nSo the variables are actually\ncalled HOSTNAME or USER.\n\n109\n00:04:32.942 --> 00:04:34.025\nHow did I know that?\n\n110\n00:04:34.025 --> 00:04:34.853\nWell, I memorize it.\n\n111\n00:04:34.853 --> 00:04:37.330\n&gt;&gt; [LAUGH]\n&gt;&gt; Or I write it on a piece of paper.\n\n112\n00:04:37.330 --> 00:04:39.490\n&gt;&gt; Yeah.\n&gt;&gt; [LAUGH] It's in the documentation.\n\n113\n00:04:39.490 --> 00:04:41.580\nI'm in the bash shell right now.\n\n114\n00:04:41.580 --> 00:04:44.370\nAnd if I do man bash and\n\n115\n00:04:44.370 --> 00:04:47.810\nI pull up the bash documentation,\nI can do a forward search.\n\n116\n00:04:47.810 --> 00:04:53.270\nSo I'm gonna hit the forward slash and\nI'll just type shell variables like that.\n\n117\n00:04:53.270 --> 00:04:57.330\nAnd when I search for that, it's gonna\njump me down to the shell variables\n\n118\n00:04:57.330 --> 00:05:00.090\nsection, where we sell seashells-\n\n119\n00:05:00.090 --> 00:05:00.999\n&gt;&gt; [LAUGH]\n&gt;&gt; By the seashore.\n\n120\n00:05:00.999 --> 00:05:03.024\nAnd [LAUGH] I can then find all\n\n121\n00:05:03.024 --> 00:05:07.490\nthe variables that are stored.\nAnd it's gonna list them all.\n\n122\n00:05:07.490 --> 00:05:08.489\nAnd there's a lot.\n\n123\n00:05:08.489 --> 00:05:10.248\nThere's a bunch that are in here.\n\n124\n00:05:10.248 --> 00:05:11.559\nBut if I look far enough,\n\n125\n00:05:11.559 --> 00:05:14.784\nI'll get to HOSTNAME here.\nAutomatically set to the name of\n\n126\n00:05:14.784 --> 00:05:15.850\nthe current host.\n\n127\n00:05:15.850 --> 00:05:18.117\nOr I can find USER,\nUSER's in here somewhere.\n\n128\n00:05:18.117 --> 00:05:23.630\nAnd that will be, let's see, some of\nthem actually don't show up right here.\n\n129\n00:05:23.630 --> 00:05:24.505\nSome of them show up in\na different section.\n\n130\n00:05:24.505 --> 00:05:27.640\nAnd you'll notice the alphabet resets\nhere and it starts over again.\n\n131\n00:05:27.640 --> 00:05:30.130\nSo I might have to hunt around\na bit before I find the one\n\n132\n00:05:30.130 --> 00:05:32.330\nis actually storing USER.\n\n133\n00:05:33.350 --> 00:05:34.631\nBe faster, search this one.\n\n134\n00:05:34.631 --> 00:05:37.280\nBut you can read through and\nthere are a ton of them.\n\n135\n00:05:37.280 --> 00:05:40.250\nI've got screen after screen\nof different variables.\n\n136\n00:05:40.250 --> 00:05:41.870\nThere's variables like this one here, PS1.\n\n137\n00:05:41.870 --> 00:05:45.200\nThat's what shows my prompt,\nmy command prompt.\n\n138\n00:05:45.200 --> 00:05:46.304\nI've got a nice little\npretty one right now.\n\n139\n00:05:46.304 --> 00:05:50.537\nAnd it's because the PS1 variable is\nstoring information of how my prompt\n\n140\n00:05:50.537 --> 00:05:51.830\nshould get rendered.\n\n141\n00:05:51.830 --> 00:05:55.940\nSo all of these things\nare already created by bash.\n\n142\n00:05:55.940 --> 00:05:58.190\nJust by opening up a bash shell,\n\n143\n00:05:58.190 --> 00:06:02.230\nI've already got all of these\nvariables that I can pull from.\n\n144\n00:06:02.230 --> 00:06:03.348\nAnd most of them are pre-populated.\n\n145\n00:06:03.348 --> 00:06:06.050\nIn other words,\nthey've already got data inside of them.\n\n146\n00:06:06.050 --> 00:06:09.600\nAnd so if I just query them,\nI can pull that data out.\n\n147\n00:06:09.600 --> 00:06:11.240\nIf I create my own variable, it's empty.\n\n148\n00:06:12.430 --> 00:06:14.840\nAnd I have to put data in\nit before it's useful.\n\n149\n00:06:14.840 --> 00:06:17.980\nSo if I go and get a storage unit,\na storage unit's going to be empty, and\n\n150\n00:06:17.980 --> 00:06:19.048\nI put my stuff in there.\n\n151\n00:06:19.048 --> 00:06:22.345\nBut these guys are ones that\nalready have data in them.\n\n152\n00:06:22.345 --> 00:06:25.780\nAnd it's usually populated by\nthe system so that it's accurate.\n\n153\n00:06:25.780 --> 00:06:28.540\nWe don't want it to be wrong cuz we wanna\nrely on the values that are in here.\n\n154\n00:06:28.540 --> 00:06:30.864\nSo the system maintains all of these.\n\n155\n00:06:30.864 --> 00:06:35.180\nNow see how all of these\nvariables are capitalized?\n\n156\n00:06:35.180 --> 00:06:36.730\nThey don't have to be.\n\n157\n00:06:36.730 --> 00:06:39.640\nBut this is a notation used to help us\n\n158\n00:06:39.640 --> 00:06:43.440\nrecognize when we're dealing with\na system variable versus a user variable.\n\n159\n00:06:43.440 --> 00:06:45.658\nA system is one that was created\nby your operating system.\n\n160\n00:06:45.658 --> 00:06:49.720\nAnd so\nthey always use all capital letters.\n\n161\n00:06:49.720 --> 00:06:54.160\nAnd as a rule of thumb, when you make\nvariables, you should do all lowercase.\n\n162\n00:06:54.160 --> 00:06:57.920\nAnd the reasoning there is you can quickly\nspot whether it's a user variable that you\n\n163\n00:06:57.920 --> 00:07:00.150\nmade or a system variable\nthat came with the system.\n\n164\n00:07:00.150 --> 00:07:04.340\nNow, you can make variables that are all\ncapital letters, it'll let you do it.\n\n165\n00:07:04.340 --> 00:07:06.885\nBut then it becomes really hard\nto tell who made that one.\n\n166\n00:07:06.885 --> 00:07:08.425\nWas it you or was it the disk?\n\n167\n00:07:08.425 --> 00:07:09.425\n&gt;&gt; I'll tell you, Don.\n\n168\n00:07:09.425 --> 00:07:12.745\nIt's no more confusing to\nlook at somebody's script.\n\n169\n00:07:12.745 --> 00:07:14.305\nAs you get further along and\n\n170\n00:07:14.305 --> 00:07:17.235\nyou get into scripting and\nyou see user created variables.\n\n171\n00:07:17.235 --> 00:07:19.745\nAnd if someone does use\nthat naming convention of\n\n172\n00:07:19.745 --> 00:07:22.455\nI'll make everything uppercase,\nit gets super confusing.\n\n173\n00:07:22.455 --> 00:07:24.055\nSo definitely follow it.\n\n174\n00:07:24.055 --> 00:07:26.315\nLike we said,\nyou can do whatever you want.\n\n175\n00:07:26.315 --> 00:07:29.820\nBut it's helpful not only for you, but for\neverybody else that's trying to look at\n\n176\n00:07:29.820 --> 00:07:33.195\nwhat you're doing to make it all lowercase\nwhen you create your own variables.\n\n177\n00:07:33.195 --> 00:07:36.720\nNow Don, can we talk a little bit\nabout that creating our own variables\n\n178\n00:07:36.720 --> 00:07:38.830\nversus these environmental variables?\n\n179\n00:07:38.830 --> 00:07:40.872\n&gt;&gt; Well, the first thing we need\nto think about is whether or\n\n180\n00:07:40.872 --> 00:07:41.944\nnot we need to create our own.\n\n181\n00:07:41.944 --> 00:07:42.660\n&gt;&gt; That's true.\n\n182\n00:07:42.660 --> 00:07:44.362\n&gt;&gt; Sometimes I might say,\nI wanna create my own variable.\n\n183\n00:07:44.362 --> 00:07:47.540\nBut it turns out there was a perfectly\ngood variable sitting right there that\n\n184\n00:07:47.540 --> 00:07:49.270\nalready had the data that I wanted.\n\n185\n00:07:49.270 --> 00:07:52.510\nSo it is a good idea to make sure you know\nthe variables that are on your system.\n\n186\n00:07:52.510 --> 00:07:55.068\nAnd if you're one of those people that\nsays, I'm not reading that man file.\n\n187\n00:07:55.068 --> 00:07:56.943\n&gt;&gt; [LAUGH]\n&gt;&gt; I don't care how many times Don brings\n\n188\n00:07:56.943 --> 00:07:57.546\nit up on the screen.\n\n189\n00:07:57.546 --> 00:08:00.667\nLet me show you a quick handy command,\nwhich is printenv, Right,\n\n190\n00:08:00.667 --> 00:08:04.597\nthis will print the environment variables,\nand we can see what's already there.\n\n191\n00:08:04.597 --> 00:08:07.949\nSo in a perfect world,\nyou don't have to make your own.\n\n192\n00:08:07.949 --> 00:08:09.255\nThat there's already a variable.\n\n193\n00:08:09.255 --> 00:08:11.140\nWe can just look at it and use it.\n\n194\n00:08:11.140 --> 00:08:14.159\nSo if I want to find one\nthat represents my name,\n\n195\n00:08:14.159 --> 00:08:17.938\nI can look in here and I can find,\nwell, there's LOGNAME.\n\n196\n00:08:17.938 --> 00:08:21.190\nI'm actually not entirely\nsure what LOGNAME is for.\n\n197\n00:08:21.190 --> 00:08:23.156\nProbably the entries go in the logs.\n\n198\n00:08:23.156 --> 00:08:24.934\nNot necessarily a login name, but\n\n199\n00:08:24.934 --> 00:08:27.639\nif I keep looking I'll find\nuser in here somewhere.\n\n200\n00:08:27.639 --> 00:08:28.300\nThere we go.\n\n201\n00:08:28.300 --> 00:08:32.930\nAnd so I can use user, or I've got user\nname up here so now there's a difference.\n\n202\n00:08:32.930 --> 00:08:37.010\nSo, we've got a couple but this is showing\nme all of the different variables that\n\n203\n00:08:37.010 --> 00:08:39.710\nare already there and\nwhat they're populated with.\n\n204\n00:08:39.710 --> 00:08:42.479\nWhat the information is\nthat stored inside of them.\n\n205\n00:08:42.479 --> 00:08:47.070\nAnd some of them, like my LS colors here\n&gt;&gt; [LAUGH] They're really getting tough.\n\n206\n00:08:47.070 --> 00:08:50.091\n&gt;&gt; Pretty detailed and this is how\nit's colorizing the different file\n\n207\n00:08:50.091 --> 00:08:53.167\nextensions and things that it knows\nwhat pretty colors to make them.\n\n208\n00:08:53.167 --> 00:08:56.880\nBut you may find that you've\nalready got a variable in place.\n\n209\n00:08:56.880 --> 00:09:00.249\nAt a minimum you can use print EMV to\nsee if a variable already exists with\n\n210\n00:09:00.249 --> 00:09:02.790\na certain name so\nyou don't over ride it by accident.\n\n211\n00:09:02.790 --> 00:09:06.170\nAnd so when you create your own variable,\nyou don't want to overlap with the system\n\n212\n00:09:06.170 --> 00:09:08.547\none, which goes back to\nthe capital versus lower-case.\n\n213\n00:09:08.547 --> 00:09:11.752\nIf you just use lower-case letters, you\ndon't have to worry about overlapping with\n\n214\n00:09:11.752 --> 00:09:13.810\nthe system,\ncuz all of their's are capital, right?\n\n215\n00:09:13.810 --> 00:09:16.407\nThis whole screen, as I scroll back,\nthey're all capitalized.\n\n216\n00:09:16.407 --> 00:09:20.323\n&gt;&gt; Now, Don, we tend to actually, there is\none variable that I know for myself and\n\n217\n00:09:20.323 --> 00:09:22.500\na lot of people I know that use Linux.\n\n218\n00:09:22.500 --> 00:09:24.601\nWe actually do change quite often and\n\n219\n00:09:24.601 --> 00:09:29.006\nthat's the path environment of a variable\ncuz we're wanting to add paths for\n\n220\n00:09:29.006 --> 00:09:32.821\nthings that we can, I can stop\nputting full path names in, right?\n\n221\n00:09:32.821 --> 00:09:34.850\n&gt;&gt; Yeah, absolutely.\n\n222\n00:09:34.850 --> 00:09:37.049\nWhen it comes to just\nrunning an application.\n\n223\n00:09:37.049 --> 00:09:40.436\nSo when I type LS and I press enter,\nit's gonna find the LS binary and\n\n224\n00:09:40.436 --> 00:09:43.190\nit's gotta look a few\ndifferent places to find it.\n\n225\n00:09:43.190 --> 00:09:44.727\nAnd it uses the path variable to do that.\n\n226\n00:09:44.727 --> 00:09:46.754\nSo if I were to take a look\nat that path variable,\n\n227\n00:09:46.754 --> 00:09:48.800\nit's actually still on my screen,\nisn't it?\n\n228\n00:09:48.800 --> 00:09:50.073\nRight here.\nPath Equal, and\n\n229\n00:09:50.073 --> 00:09:55.350\nhere's all the folders that it's looking\nto whenever I run an executable, right?\n\n230\n00:09:55.350 --> 00:09:57.090\nAnd that's just order\nthe variable called path.\n\n231\n00:09:57.090 --> 00:10:03.310\nIf I wanted to find a specific I could've\njust typed like print in the path.\n\n232\n00:10:03.310 --> 00:10:04.841\nAnd then we go in would\nshow me that value, right?\n\n233\n00:10:04.841 --> 00:10:07.675\nUsing that just to see a single variable.\n\n234\n00:10:07.675 --> 00:10:12.481\nOr I can always use that eco command which\necho is a lot more useful because print NV\n\n235\n00:10:12.481 --> 00:10:17.360\nis really focusing on just environmental\nvariables that created by the system and\n\n236\n00:10:17.360 --> 00:10:18.649\nscripts typically.\n\n237\n00:10:18.649 --> 00:10:20.043\nBut eco can actually show any variable,\n\n238\n00:10:20.043 --> 00:10:21.815\neven ones that have been\ncreated by applications.\n\n239\n00:10:21.815 --> 00:10:25.708\nSo it's a little bit more handy to pull\nthis way, and I can do an echo $path.\n\n240\n00:10:25.708 --> 00:10:28.161\nAnd there I get the same data out of it,\nright?\n\n241\n00:10:28.161 --> 00:10:32.466\nBut there some things that might\nseen here that aren't included but\n\n242\n00:10:32.466 --> 00:10:34.816\nmine I have /home/ /bin.\n\n243\n00:10:34.816 --> 00:10:37.953\nSo if I have a program that I want to\nbe available just for me, I can but\n\n244\n00:10:37.953 --> 00:10:39.230\nit in a bin folder, right?\n\n245\n00:10:39.230 --> 00:10:40.427\nIn my own home directory.\n\n246\n00:10:40.427 --> 00:10:45.260\nNot every distro has that, so\nI might want to add that to the path.\n\n247\n00:10:45.260 --> 00:10:47.350\nAnd you can quickly set a variable or\n\n248\n00:10:47.350 --> 00:10:51.403\nmodify a variable to add on to the end\nof it or to change it altogether.\n\n249\n00:10:51.403 --> 00:10:56.000\nOne that I like to do,\nis I like to add dot to the path.\n\n250\n00:10:56.000 --> 00:10:57.071\nNow, what does dot mean?\n\n251\n00:10:57.071 --> 00:10:59.245\nThat means the current directory.\n\n252\n00:10:59.245 --> 00:11:02.989\nSo now, when I run an application, it will\nlook in the current directory as well, and\n\n253\n00:11:02.989 --> 00:11:05.420\nthat's really handy when\nyou're calling scripts.\n\n254\n00:11:05.420 --> 00:11:09.581\nSo let's say I had a file right in\nmy folder called myscript.sh, right?\n\n255\n00:11:09.581 --> 00:11:12.221\nSo there's my script.\n\n256\n00:11:12.221 --> 00:11:15.500\nAnd if I wanna run it,\nwell I guess I can make it executable.\n\n257\n00:11:15.500 --> 00:11:16.375\nSo we'll do that.\n\n258\n00:11:16.375 --> 00:11:20.780\nSo if I wanted to run this script,\nif I just type myscript.sh and\n\n259\n00:11:20.780 --> 00:11:23.568\nI run that, command not found, right?\n\n260\n00:11:23.568 --> 00:11:26.940\nIt doesn't look in this\nfolder to find that script.\n\n261\n00:11:26.940 --> 00:11:27.665\nI would have to run it like this.\n\n262\n00:11:27.665 --> 00:11:30.502\nI would have to say ./myscript.sh, so\n\n263\n00:11:30.502 --> 00:11:34.645\nit knew to look right here in this\nfolder to find it and run it.\n\n264\n00:11:34.645 --> 00:11:38.059\nAnd this time instead of command\nnot found, it found it [LAUGH] and\n\n265\n00:11:38.059 --> 00:11:39.360\nit ran it, right?\n\n266\n00:11:39.360 --> 00:11:41.022\nSo really handy when\nyou're running scripts and\n\n267\n00:11:41.022 --> 00:11:42.612\nyou don't want it to\nspecify a path like that.\n\n268\n00:11:42.612 --> 00:11:47.940\nWell, if I look at my path, it doesn't\nlook at the folder that I'm in, right?\n\n269\n00:11:47.940 --> 00:11:49.605\nMy current folder is /home/dpazet.\n\n270\n00:11:49.605 --> 00:11:55.690\nI've got /home/dpazet/bin, so if I put\nmy scripts in there it would find them.\n\n271\n00:11:55.690 --> 00:11:59.176\nBut scripts aren't binary, so I kinda\ndon't wanna stick it into a bin folder so\n\n272\n00:11:59.176 --> 00:12:01.583\nit doesn't make a whole lot of sense for\nit to be there.\n\n273\n00:12:01.583 --> 00:12:09.180\nWell, I could add either this specific\nfolder to the path or really anything.\n\n274\n00:12:09.180 --> 00:12:14.140\nIf you wanna set a variable, what you\ndo is you type the variable name and\n\n275\n00:12:14.140 --> 00:12:18.617\nthen an equal sign, and\nthen the value you want it to be, right?\n\n276\n00:12:18.617 --> 00:12:23.633\nSo if I want to set my path,\nI could say Path =, and\n\n277\n00:12:23.633 --> 00:12:28.300\nthen I could add /home/dpezet, like that.\n\n278\n00:12:28.300 --> 00:12:31.043\nBut I've gotta be really careful\nhere cuz I'm not adding anything.\n\n279\n00:12:31.043 --> 00:12:35.430\nIf I press Enter right now\nI'm gonna overwrite my path.\n\n280\n00:12:35.430 --> 00:12:38.527\nSo when I do that,\nthere it goes to set it and\n\n281\n00:12:38.527 --> 00:12:41.552\nit's actually really upset with me now.\n\n282\n00:12:41.552 --> 00:12:43.440\nOkay, why is it upset with me now?\n\n283\n00:12:43.440 --> 00:12:47.093\nI'm getting these bash WC\ncommand not found, core utils.\n\n284\n00:12:47.093 --> 00:12:49.300\nI just overwrote my path.\n\n285\n00:12:49.300 --> 00:12:54.534\nIt's looking for every binary right here\ninside of the directory that I'm in,\n\n286\n00:12:54.534 --> 00:12:56.107\nand that's a problem.\n\n287\n00:12:56.107 --> 00:12:58.710\nMy path is kind of\nmessed up at this point.\n\n288\n00:12:58.710 --> 00:13:02.256\nAnd I've got powerline, which is what\nmakes my pretty little prompt, and I've\n\n289\n00:13:02.256 --> 00:13:05.879\ngot a set, and a few other things that are\nall really getting kind of upset with me.\n\n290\n00:13:05.879 --> 00:13:07.622\nAnd, so now, I've kind of-\n&gt;&gt; It's very mad.\n\n291\n00:13:07.622 --> 00:13:08.920\n[LAUGH]\n&gt;&gt; I've kind of worked myself into\n\n292\n00:13:08.920 --> 00:13:09.649\na problem, right?\n\n293\n00:13:09.649 --> 00:13:14.440\nWell, the nice part about this is\nthe path variable can get reset.\n\n294\n00:13:14.440 --> 00:13:16.720\nWhen I modify variables like this,\nthey're temporary.\n\n295\n00:13:16.720 --> 00:13:19.480\nWe'll see how to make them permanent\nlater on, but they're temporary.\n\n296\n00:13:19.480 --> 00:13:22.100\nSo I can always, if I've really\nscrewed up, I can just close it.\n\n297\n00:13:22.100 --> 00:13:26.750\nI can open another terminal, and\nwhen I come in here, I'm in this nice,\n\n298\n00:13:26.750 --> 00:13:28.880\nnew, shiny terminal.\n\n299\n00:13:28.880 --> 00:13:33.433\nAnd if I do it echo $path, now it's\nback to the way that it was, right?\n\n300\n00:13:33.433 --> 00:13:35.560\nWe've kind of fixed ourselves.\n\n301\n00:13:35.560 --> 00:13:39.504\nAnd the reality is that I could have\navoided that whole situation from\n\n302\n00:13:39.504 --> 00:13:41.750\nhappening in the first place, right?\n\n303\n00:13:41.750 --> 00:13:47.740\nWhat I should have done,\ninstead of saying, where did I set it?\n\n304\n00:13:47.740 --> 00:13:52.207\nIt's actually gone.\nInstead of path = /home/dpezet,\n\n305\n00:13:52.207 --> 00:14:00.047\nwhat I should have done is said\npath = $path:/home/dpazet.\n\n306\n00:14:00.047 --> 00:14:00.951\nNow what does that do?\n\n307\n00:14:00.951 --> 00:14:04.486\nWell, it says I wanna change\nthe path variable and\n\n308\n00:14:04.486 --> 00:14:09.041\nI'm gonna change it to include\nto whatever the current path is.\n\n309\n00:14:09.041 --> 00:14:12.373\nSo $path,\nwhatever that current path is and\n\n310\n00:14:12.373 --> 00:14:16.930\nthen I'm adding /home/dpazet\nto the end of it, okay?\n\n311\n00:14:16.930 --> 00:14:19.702\nAnd when I do that, now I can echo $path.\n\n312\n00:14:19.702 --> 00:14:25.832\nAnd I see where /home/deepset has\nbeen stuck right on the end of it.\n\n313\n00:14:25.832 --> 00:14:29.094\nAnd it's now going to look\nhere in my home directory.\n\n314\n00:14:29.094 --> 00:14:32.964\nSo when I run my program,\nlike if I run my script .hs,\n\n315\n00:14:32.964 --> 00:14:35.286\nit will know to look right here.\n\n316\n00:14:35.286 --> 00:14:38.791\nI don't get a command not found,\nit found the script right here, and\n\n317\n00:14:38.791 --> 00:14:40.132\nit actually executed it.\n\n318\n00:14:40.132 --> 00:14:42.863\nI started this whole diatribe\nby saying I like to add dot.\n\n319\n00:14:42.863 --> 00:14:46.441\n&gt;&gt; Yeah.\n&gt;&gt; So if I wanted to change that path\n\n320\n00:14:46.441 --> 00:14:53.678\nagain, and you know what I'll do is\nI don't want /home/dpezet there.\n\n321\n00:14:53.678 --> 00:14:57.397\nSo I'm just gonna copy this and\nI'll say path =,\n\n322\n00:14:57.397 --> 00:15:01.660\nd I'm gonna paste the full\npath right to the end.\n\n323\n00:15:01.660 --> 00:15:05.123\nAnd that says, looking whatever\nfolder I just happen to be in.\n\n324\n00:15:05.123 --> 00:15:09.596\nAnd so now when I look at that value I\nsee the dot on there and if I just run my\n\n325\n00:15:09.596 --> 00:15:15.284\nscript, .sh defines it right here but it's\nstill looking in the other folders, right?\n\n326\n00:15:15.284 --> 00:15:18.561\nMy command pumped in blew up on\nme because it's still able to\n\n327\n00:15:18.561 --> 00:15:21.590\nlook in /user/bin in the other places,\nright?\n\n328\n00:15:21.590 --> 00:15:24.153\nThis is modifying a variable.\n\n329\n00:15:24.153 --> 00:15:28.063\nAnd in this case it happens to be\na variable that was already in existence,\n\n330\n00:15:28.063 --> 00:15:30.978\nbut we can be working with\nour variables at this point.\n\n331\n00:15:30.978 --> 00:15:33.980\nI could come in and\nsay any name that I wanted, right?\n\n332\n00:15:33.980 --> 00:15:36.503\nI might create a variable called var1,\nright?\n\n333\n00:15:36.503 --> 00:15:39.912\nAnd I'll say var1 = value1, right?\n\n334\n00:15:39.912 --> 00:15:43.632\nAnd so now I've created a variable or\n\n335\n00:15:43.632 --> 00:15:48.554\nI might say like Daniel's shirt color,\nright?\n\n336\n00:15:48.554 --> 00:15:51.962\nAnd you can't have spaces in a variable\nname so I'm using underscores, but\n\n337\n00:15:51.962 --> 00:15:53.568\nyou could use hyphens or whatever.\n\n338\n00:15:53.568 --> 00:15:58.191\nSo I'm saying Daniel shirt color = one,\nall right?\n\n339\n00:15:58.191 --> 00:16:02.510\nAnd so now I got that variable and\nwhenever I want it I can go and\n\n340\n00:16:02.510 --> 00:16:07.002\nI can query that and\nI can say what echo$danielsshirt Color and\n\n341\n00:16:07.002 --> 00:16:09.230\nit returns, and it's black.\n\n342\n00:16:09.230 --> 00:16:12.719\nAnd if I wanna change it, maybe there's\na wardrobe change like Britney Spears or\n\n343\n00:16:12.719 --> 00:16:14.085\nsomething-\n&gt;&gt; [LAUGH]\n\n344\n00:16:14.085 --> 00:16:15.897\n&gt;&gt; And he changes to a blue shirt, right?\n\n345\n00:16:15.897 --> 00:16:17.557\nNow I can go on, I can query that.\n\n346\n00:16:17.557 --> 00:16:20.833\nI'll do echo $daniels shirt color and\nthis time I get blue.\n\n347\n00:16:20.833 --> 00:16:22.783\nSo super easy to set these variables.\n\n348\n00:16:22.783 --> 00:16:26.970\nIf they already exist though be careful,\nbecause if I've contained something useful\n\n349\n00:16:26.970 --> 00:16:30.653\nlike the path, and if you mess with it\nenough, you kind of break your shell.\n\n350\n00:16:30.653 --> 00:16:34.509\nBut it's all good because at the end of\nthe day, you can just close the shell, and\n\n351\n00:16:34.509 --> 00:16:36.852\nwhen you open it again,\nit's a fresh new slate.\n\n352\n00:16:36.852 --> 00:16:39.477\nEverything's back to the way that it was,\nso\n\n353\n00:16:39.477 --> 00:16:42.253\nif I take this echo\n$Daniels shirt color here.\n\n354\n00:16:42.253 --> 00:16:46.096\nI'm gonna copy that, and\nI'll open up an all new terminal.\n\n355\n00:16:46.096 --> 00:16:49.520\nAnd so here's my shiny new terminal.\n\n356\n00:16:49.520 --> 00:16:55.537\nAnd this time, when I, guess my copy and\npaste didn't work so well.\n\n357\n00:16:55.537 --> 00:17:02.503\nIf I echo $Daniels shirt color,\nI get nothing.\n\n358\n00:17:02.503 --> 00:17:05.700\nBecause the variable is now gone,\nthe variable doesn't exist because it was\n\n359\n00:17:05.700 --> 00:17:07.483\ncreated just in that\nsession that I was in.\n\n360\n00:17:07.483 --> 00:17:11.595\n&gt;&gt; Now Don, if I start creating\na bunch of these local variables,\n\n361\n00:17:11.595 --> 00:17:13.710\nthese user defined variables.\n\n362\n00:17:13.710 --> 00:17:16.434\nAm I then able to go\nthrough using the print and\n\n363\n00:17:16.434 --> 00:17:19.744\ncommand to see them as well\nas those global variables?\n\n364\n00:17:19.744 --> 00:17:21.207\n&gt;&gt; It's kind of weird.\n\n365\n00:17:21.207 --> 00:17:24.933\nVariables, they get separated up\ninto a couple of areas, right?\n\n366\n00:17:24.933 --> 00:17:28.289\nSo you have global variables and\nyou have the user variables.\n\n367\n00:17:28.289 --> 00:17:32.353\nOr what are called local variables,\nI need to use the right terms here.\n\n368\n00:17:32.353 --> 00:17:36.578\nSo a global variable is one that's\navailable through out all of your shells,\n\n369\n00:17:36.578 --> 00:17:38.989\nall of your different sessions and things.\n\n370\n00:17:38.989 --> 00:17:43.728\nA local variable is one that's tied\njust to your current session, and\n\n371\n00:17:43.728 --> 00:17:45.909\nwhen you run printenv, right?\n\n372\n00:17:45.909 --> 00:17:49.252\nSo here, I'll do var1 = value 1.\n\n373\n00:17:49.252 --> 00:17:52.690\nAll right, so I've got this variable,\nand I know it works.\n\n374\n00:17:52.690 --> 00:17:58.842\nIf I do an echo $ var1, I get value 1\nback, so I know that it is working, right?\n\n375\n00:17:58.842 --> 00:18:03.300\nI'm gonna make this just a little\nbit bigger, just so we can read it.\n\n376\n00:18:03.300 --> 00:18:07.890\nIf I run printenv and\nI'm gonna grep that for var1.\n\n377\n00:18:09.130 --> 00:18:10.414\nIt doesn't come back, okay?\n\n378\n00:18:10.414 --> 00:18:14.652\nAnd that's because printenv is showing\nme environment variables, right?\n\n379\n00:18:14.652 --> 00:18:18.910\nThese are ones that are set by the system\nthat are part of my environment regardless\n\n380\n00:18:18.910 --> 00:18:21.010\nof which shell that I'm in.\n\n381\n00:18:21.010 --> 00:18:23.671\nVersus the variable that I just made\nthat's really a local variable.\n\n382\n00:18:23.671 --> 00:18:26.668\nIt's just for\nme in the shell that I'm in right now.\n\n383\n00:18:26.668 --> 00:18:29.754\nAnd if I wanna see those,\nI have to use a different command, right?\n\n384\n00:18:29.754 --> 00:18:31.649\nThe command I'm gonna use is set.\n\n385\n00:18:31.649 --> 00:18:37.094\nIf you just run the set command, it\nwill show you all sorts of stuff, right?\n\n386\n00:18:37.094 --> 00:18:40.975\nLots of things here, not just variables,\nbut it's showing you also functions and\n\n387\n00:18:40.975 --> 00:18:43.199\nthings like that that\nare tied to your account.\n\n388\n00:18:43.199 --> 00:18:46.102\nAnd so you see a lot and\nsomewhere in here.\n\n389\n00:18:46.102 --> 00:18:48.111\n[LAUGH]\n&gt;&gt; I thought we should have grep that one.\n\n390\n00:18:48.111 --> 00:18:49.380\n[LAUGH]\n&gt;&gt; My goodness, yeah,\n\n391\n00:18:49.380 --> 00:18:50.193\nI thought might be easy.\n\n392\n00:18:50.193 --> 00:18:52.918\nBut somewhere in here,\nwe will find the variables, yeah,\n\n393\n00:18:52.918 --> 00:18:54.183\nI'm gonna give up on this.\n\n394\n00:18:54.183 --> 00:18:55.750\n&gt;&gt; [LAUGH]\n&gt;&gt; I've got so\n\n395\n00:18:55.750 --> 00:18:58.572\nmany functions that came back,\nthat it's just kind of flooding me.\n\n396\n00:18:58.572 --> 00:19:00.789\nBut if I do set, and I'll grep it.\n\n397\n00:19:00.789 --> 00:19:04.423\nI'll pipe that into the grep command and\nlook for var1.\n\n398\n00:19:04.423 --> 00:19:06.826\nThere it is, var1 = value1.\n\n399\n00:19:06.826 --> 00:19:09.917\nSo we get it, I think they're\nactually right at the beginning.\n\n400\n00:19:09.917 --> 00:19:12.528\nSo if I do set and\nmaybe pipe that into the head command.\n\n401\n00:19:12.528 --> 00:19:14.303\nWell, there's some of them.\n\n402\n00:19:14.303 --> 00:19:18.323\nSo you kind of see where\nsome of those are coming in,\n\n403\n00:19:18.323 --> 00:19:22.603\nmaybe if I do the top 20 whatever, anyhow-\n&gt;&gt; It's in there, [LAUGH].\n\n404\n00:19:22.603 --> 00:19:23.581\n&gt;&gt; They're in there, right?\n\n405\n00:19:23.581 --> 00:19:26.110\ngrep returns it in a such\na giant amount of data.\n\n406\n00:19:26.110 --> 00:19:28.467\nBut I can find them and they are there.\n\n407\n00:19:28.467 --> 00:19:32.588\nSo they don't show up with printenv, but\nthey do show up with the set command.\n\n408\n00:19:32.588 --> 00:19:34.212\nNow be careful, the set command,\n\n409\n00:19:34.212 --> 00:19:37.639\nthe name makes you think that this\nwould set something, but you don't.\n\n410\n00:19:37.639 --> 00:19:39.157\nThat's not how you set a variable,\n\n411\n00:19:39.157 --> 00:19:41.239\nyou don't use the set\ncommand to set a variable.\n\n412\n00:19:41.239 --> 00:19:43.351\nYou use the set command\nto see the variable.\n\n413\n00:19:43.351 --> 00:19:45.882\nIt's kind of one of those named\na little inappropriately.\n\n414\n00:19:45.882 --> 00:19:48.181\nAnd maybe it's an acronym-\n&gt;&gt; [LAUGH]\n\n415\n00:19:48.181 --> 00:19:49.486\n&gt;&gt; I don't realize it, but\n\n416\n00:19:49.486 --> 00:19:50.735\nsession environment.\n\n417\n00:19:50.735 --> 00:19:52.628\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n418\n00:19:52.628 --> 00:19:54.129\n&gt;&gt; But that's how we go in and see them,\n\n419\n00:19:54.129 --> 00:19:56.075\nso I know I've got that\nvariable that it is set.\n\n420\n00:19:56.075 --> 00:20:00.050\nIt is in place, and\nthere it is, it's tied to me.\n\n421\n00:20:00.050 --> 00:20:03.447\nNow while the set command\ncan't set a variable.\n\n422\n00:20:03.447 --> 00:20:08.127\nThere's a similar command called unset\nthat will let you remove a variable,\n\n423\n00:20:08.127 --> 00:20:10.650\nwhich again not necessarily intuitive.\n\n424\n00:20:10.650 --> 00:20:16.463\nIf I don't want var1 anymore,\nI could do unset var1 to get rid of it.\n\n425\n00:20:16.463 --> 00:20:19.934\nAnd now when I go and look for\nit, I can see that it's gone.\n\n426\n00:20:19.934 --> 00:20:23.691\nWell, see what it's returning\nhere is a underscore equals,\n\n427\n00:20:23.691 --> 00:20:26.070\nthat's it removing the variable.\n\n428\n00:20:26.070 --> 00:20:27.556\nIf I run it again, there, now it's gone.\n\n429\n00:20:27.556 --> 00:20:29.961\nSo it takes a second\nbefore it's actually gone.\n\n430\n00:20:29.961 --> 00:20:32.176\nI ran my command too fast,\nI should have stalled.\n\n431\n00:20:32.176 --> 00:20:34.866\nBut [LAUGH] well I mean, if you see it\nin real life, that's what would happen.\n\n432\n00:20:34.866 --> 00:20:36.409\n&gt;&gt; Yeah.\n&gt;&gt; It's removing the variable and\n\n433\n00:20:36.409 --> 00:20:37.015\nthen it's gone.\n\n434\n00:20:37.015 --> 00:20:42.526\nSo at this point, it is out of there, and\nnow I've freed up that massive one and\n\n435\n00:20:42.526 --> 00:20:44.016\na half byte of-\n&gt;&gt; [LAUGH]\n\n436\n00:20:44.016 --> 00:20:44.935\n&gt;&gt; Memory of whatever it\n\n437\n00:20:44.935 --> 00:20:46.062\nwas that it was stored in.\n\n438\n00:20:46.062 --> 00:20:48.387\n&gt;&gt; Now here's an interesting\nthing I'm thinking of, Don.\n\n439\n00:20:48.387 --> 00:20:50.304\nWe've got the environmental variables,\nright?\n\n440\n00:20:50.304 --> 00:20:53.904\nThey're there because they're very handy,\nwe use them, other programs use them,\n\n441\n00:20:53.904 --> 00:20:54.704\nscripts use them.\n\n442\n00:20:54.704 --> 00:20:58.976\nLinux environment used them\nbecause they're very common,\n\n443\n00:20:58.976 --> 00:21:01.300\nwe use them all the time.\n\n444\n00:21:01.300 --> 00:21:05.167\nWhat if I create my own variable,\na user variable or local variable?\n\n445\n00:21:05.167 --> 00:21:09.762\nI'm like man this is super handy, I would\nlike this to be everywhere all the times\n\n446\n00:21:09.762 --> 00:21:13.050\nthat of me having to set it,\nevery time I open a new shell.\n\n447\n00:21:13.050 --> 00:21:17.359\n&gt;&gt; All right, so what we bumped into with\nthis, we have variable that we need.\n\n448\n00:21:17.359 --> 00:21:20.506\nSo to be available all the time,\nthere's two problems that we bumped into.\n\n449\n00:21:20.506 --> 00:21:25.234\nOne problem is persistance and\none problem is locality.\n\n450\n00:21:25.234 --> 00:21:29.971\nSo on the persistance side, what happens\nwhen I close my shell and open a new one?\n\n451\n00:21:29.971 --> 00:21:31.561\nAll my variables are gone.\n\n452\n00:21:31.561 --> 00:21:35.132\nSo if want these variables\nto be here all the time,\n\n453\n00:21:35.132 --> 00:21:37.436\nI need to store them in a script.\n\n454\n00:21:37.436 --> 00:21:40.373\nSo that they'll be available\nevery time I fire it up, right?\n\n455\n00:21:40.373 --> 00:21:43.287\nNow if it's just for me,\nit's actually really easy to do.\n\n456\n00:21:43.287 --> 00:21:47.966\nIf it's a variable just for one user,\nthen in their home directory,\n\n457\n00:21:47.966 --> 00:21:51.205\nthey'll have a file called .bashrc, right?\n\n458\n00:21:51.205 --> 00:21:56.181\nAnd what it is the bash configuration\nfile that's run every time you start\n\n459\n00:21:56.181 --> 00:21:57.590\na bash shell.\n\n460\n00:21:57.590 --> 00:21:59.700\nAnd if you put the variable in there,\n\n461\n00:21:59.700 --> 00:22:02.020\nit'll be there every\ntime you run your shell.\n\n462\n00:22:02.020 --> 00:22:05.359\nSo for example,\nright now if I use my set command and\n\n463\n00:22:05.359 --> 00:22:09.179\nI'll just look for,\nwell I'll just grab var1, right?\n\n464\n00:22:09.179 --> 00:22:10.143\nSo it's not there, right?\n\n465\n00:22:10.143 --> 00:22:11.664\nI know I don't have it.\n\n466\n00:22:11.664 --> 00:22:14.912\nIf I edit in my home directory, so\n\n467\n00:22:14.912 --> 00:22:19.905\nI'll do ~/ bashrc,\nI can pull up my bash RC file.\n\n468\n00:22:19.905 --> 00:22:25.120\nAnd I can go to the end of that file and\nI can add my variables.\n\n469\n00:22:25.120 --> 00:22:27.129\nYou can actually add them at\nthe beginning or the middle.\n\n470\n00:22:27.129 --> 00:22:29.375\nYou just don't wanna break some\nof the stuff you've already got,\n\n471\n00:22:29.375 --> 00:22:31.955\nlike I've got some power line stuff in\nhere, I don't wanna mess with that.\n\n472\n00:22:31.955 --> 00:22:37.031\nBut down at the very bottom, I can come\nin here and I can just add variables.\n\n473\n00:22:37.031 --> 00:22:41.571\nSo I'll say var1=value1 or var2=value2.\n\n474\n00:22:41.571 --> 00:22:46.982\nMaybe I'll add daniels_shirt_color-black,\nright?\n\n475\n00:22:46.982 --> 00:22:50.150\nSo I'm adding those variables right there.\n\n476\n00:22:50.150 --> 00:22:54.425\nAnd because I'm putting them\nin that bashrc file, right?\n\n477\n00:22:54.425 --> 00:22:59.080\nNow, every time I launch a new shell,\nthat file gets read and\n\n478\n00:22:59.080 --> 00:23:01.829\nthose variables would be present.\n\n479\n00:23:01.829 --> 00:23:05.764\nNow, they're not present for me right now,\nI guess I could source that file.\n\n480\n00:23:05.764 --> 00:23:08.045\nIf you use the source command,\nthat will tell it to read it, and\n\n481\n00:23:08.045 --> 00:23:08.829\nload all that stuff.\n\n482\n00:23:08.829 --> 00:23:12.394\nBut the best way to do this,\nwe exit shell.\n\n483\n00:23:12.394 --> 00:23:15.883\nAnd if I go and create an all new shell,\nwhen I fire this one up,\n\n484\n00:23:15.883 --> 00:23:18.516\nI haven't created those variables, right?\n\n485\n00:23:18.516 --> 00:23:23.497\nBut that script runs, and when the script\nruns, it should have found it.\n\n486\n00:23:23.497 --> 00:23:30.029\nSo I'll grep for var, whoops, var [LAUGH]-\n&gt;&gt; [INAUDIBLE]\n\n487\n00:23:30.029 --> 00:23:31.045\n[LAUGH]\n&gt;&gt; var1 and 2,\n\n488\n00:23:31.045 --> 00:23:32.098\nthat's what I'm looking for.\n\n489\n00:23:32.098 --> 00:23:34.362\nAll right, so I'm gonna look for\nthose variables and they there are.\n\n490\n00:23:34.362 --> 00:23:36.800\nvar1 = value 1, var2 = value 2.\n\n491\n00:23:36.800 --> 00:23:39.389\nThey're set because that's\na part of my shell.\n\n492\n00:23:39.389 --> 00:23:45.798\nIf I echo $daniels shirt color,\nI get black, right?\n\n493\n00:23:45.798 --> 00:23:48.640\nThey're now persistent, but\nit's just for me, right?\n\n494\n00:23:48.640 --> 00:23:52.374\nSo if someone else logs in on my computer,\nthey don't have that, right?\n\n495\n00:23:52.374 --> 00:23:56.688\nSo they don't have it, if you wanna\nmake it where the variable exists for\n\n496\n00:23:56.688 --> 00:23:57.475\neverybody.\n\n497\n00:23:57.475 --> 00:23:59.818\nEverybody logs in on this computer,\nservices and\n\n498\n00:23:59.818 --> 00:24:03.624\ndemons as well as interactive users, then\nwe can actually do an extra step here.\n\n499\n00:24:03.624 --> 00:24:08.673\nWhat we can do is we can put it into,\nwell, The old way was that\n\n500\n00:24:08.673 --> 00:24:13.880\nyou put it in a file that was\ncalled /etc/profile, okay?\n\n501\n00:24:13.880 --> 00:24:17.860\nThat file right there and\nyou still have that file.\n\n502\n00:24:17.860 --> 00:24:20.997\nYou can go in there and\nyou can edit it and pop it at the end.\n\n503\n00:24:20.997 --> 00:24:23.048\nBut it's recommended\nyou don't that anymore.\n\n504\n00:24:23.048 --> 00:24:25.189\nAnd the reason is a lot of\ndistros when they upgrade,\n\n505\n00:24:25.189 --> 00:24:28.561\nthey'll overwrite this file with the\ndefault one, so you lose those variables.\n\n506\n00:24:28.561 --> 00:24:34.377\nSo instead there's a folder,\nnotice right here where it says for\n\n507\n00:24:34.377 --> 00:24:38.310\ni in /etc/profile.d/*.sh, right?\n\n508\n00:24:38.310 --> 00:24:42.860\nIt's basically running any\nscript found in this folder.\n\n509\n00:24:42.860 --> 00:24:45.830\nSo if you have a variable you want\nto be available for everybody,\n\n510\n00:24:45.830 --> 00:24:50.999\nyou should turn it into a script and\nstick it inside of /etc/profile.d.\n\n511\n00:24:50.999 --> 00:24:54.184\nAnd you'll see I've\nactually got quite a few.\n\n512\n00:24:54.184 --> 00:24:57.759\nSome of my terminal colors and\nother things, most of these are defaults,\n\n513\n00:24:57.759 --> 00:24:58.923\nI didn't create them.\n\n514\n00:24:58.923 --> 00:25:02.640\nBut there's like a vim.sh\nover here that's creating\n\n515\n00:25:02.640 --> 00:25:05.790\nthe variables that vim uses when it runs.\n\n516\n00:25:05.790 --> 00:25:08.360\nAll of these are just\nlittle shell files and\n\n517\n00:25:08.360 --> 00:25:11.670\nthese don't get overwritten\nwhen you do an upgrade.\n\n518\n00:25:11.670 --> 00:25:16.470\nSo if I want a variable to persist for\neverybody when they log in to the system,\n\n519\n00:25:16.470 --> 00:25:19.370\nyou can actually use a little\none liner here to do this.\n\n520\n00:25:19.370 --> 00:25:23.490\nYou can say echo and\n\n521\n00:25:23.490 --> 00:25:27.080\nthen we can echo a line\nthat sets a variable.\n\n522\n00:25:27.080 --> 00:25:33.940\nSo you could say like var1=value1, right?\n\n523\n00:25:33.940 --> 00:25:36.060\nThat's what I want to echo.\n\n524\n00:25:36.060 --> 00:25:40.100\nAnd I can append that,\nI'll use the double greater than signs.\n\n525\n00:25:40.100 --> 00:25:46.950\nAnd I'm going to stick that into\na file inside of /etc/profile.d/ and\n\n526\n00:25:46.950 --> 00:25:50.990\nthen we'll stick that in inside of\na file which I'll call it something,\n\n527\n00:25:50.990 --> 00:25:56.210\nlike donsvariables or something like that.\n\n528\n00:25:56.210 --> 00:25:57.800\nWhatever you wanted it to be.\n\n529\n00:25:57.800 --> 00:26:01.500\nMaybe it's just called variables.sh,\nright?\n\n530\n00:26:01.500 --> 00:26:04.960\nAnd it's gonna store that variable right\nthere and I could continue to run this\n\n531\n00:26:04.960 --> 00:26:07.487\nline over and over and\nover again and build up the script.\n\n532\n00:26:07.487 --> 00:26:11.527\nNow I do need to sudo this, you need to\nbe an administrator to write this folder\n\n533\n00:26:11.527 --> 00:26:14.335\nbecause you're modifying\nevery user in the system.\n\n534\n00:26:14.335 --> 00:26:18.230\nSo I'm gonna do that and,\nI got permission denied\n\n535\n00:26:18.230 --> 00:26:18.920\n&gt;&gt; Look at that.\n\n536\n00:26:18.920 --> 00:26:21.380\n&gt;&gt; All right, so what happened there?\n\n537\n00:26:21.380 --> 00:26:26.730\nWell, what's going on here is we've got\na couple of problems that are going on.\n\n538\n00:26:26.730 --> 00:26:31.130\nWhat I've got is a parent shell\ndealing with a child shell.\n\n539\n00:26:31.130 --> 00:26:34.050\nAnd this happens,\nthey're called subshells.\n\n540\n00:26:34.050 --> 00:26:37.150\nWhen you run commands you\nmight be in one shell, and\n\n541\n00:26:37.150 --> 00:26:40.930\nthen you're performing a command and it's\nactually running in a secondary shell.\n\n542\n00:26:40.930 --> 00:26:42.940\nAnd this can actually wreak\nhavoc with variables too.\n\n543\n00:26:42.940 --> 00:26:44.430\nIt can cause a lot of problems.\n\n544\n00:26:44.430 --> 00:26:45.590\nSo I wanna show that to you.\n\n545\n00:26:45.590 --> 00:26:48.310\nI know we're running low on time too,\nbut I really wanna show this.\n\n546\n00:26:48.310 --> 00:26:50.065\nBut, I guess,\njust to make the Is kind of quick.\n\n547\n00:26:51.375 --> 00:26:54.615\nLet's do this Daniel, let's do a part\ntwo because I really want to show that.\n\n548\n00:26:54.615 --> 00:26:56.273\nBut let me, we'll make this work.\n\n549\n00:26:56.273 --> 00:26:58.405\n&gt;&gt; Okay. [LAUGH] &gt;&gt; [LAUGH]\nWe'll make this work and\n\n550\n00:26:58.405 --> 00:27:02.975\nthen in part two I'll explain why\nthis happened and kind of fix it.\n\n551\n00:27:02.975 --> 00:27:07.833\nBut basically what's happening is my\ncommands are breaking into more than one\n\n552\n00:27:07.833 --> 00:27:13.400\nshell and not everyone has permissions\nto write to /etc/profile.d or whatever.\n\n553\n00:27:13.400 --> 00:27:16.660\nSo I can just go in and\nI can use vi to do this.\n\n554\n00:27:16.660 --> 00:27:21.623\nSo I can sudo vi and\nI can edit /etc/profile.d.\n\n555\n00:27:21.623 --> 00:27:25.948\nAnd we'll make one called variable.sh,\nokay?\n\n556\n00:27:25.948 --> 00:27:31.351\nAnd when I come in here I can\nset my variables and I can say,\n\n557\n00:27:31.351 --> 00:27:35.866\nvar1=value1 and var2=value2 and so on.\n\n558\n00:27:35.866 --> 00:27:39.207\nAnd by putting them here in this\nprofile folder when users log in,\n\n559\n00:27:39.207 --> 00:27:42.245\nwhen they get that interactive shell,\nthis will be read and\n\n560\n00:27:42.245 --> 00:27:46.040\nnow they'll get those variables and\nthey'll be able to use them, okay.\n\n561\n00:27:46.040 --> 00:27:49.920\nBut there's still one little problem with\nthis which, again I wanna show you guys,\n\n562\n00:27:49.920 --> 00:27:54.070\nI want to explain in more depth, so,\nlet's break in to part two though cuz I'm\n\n563\n00:27:54.070 --> 00:27:55.960\ndefinitely gonna need\na little more time for it.\n\n564\n00:27:55.960 --> 00:28:00.040\nBut I want to explain how\nthese variables still aren't\n\n565\n00:28:00.040 --> 00:28:01.670\nquite gonna be visible for everybody.\n\n566\n00:28:01.670 --> 00:28:04.660\nAnd there's an extra little step that we\nneed to go through to take care of that.\n\n567\n00:28:04.660 --> 00:28:07.450\nMost variables default to just\nbeing visible to you, and so\n\n568\n00:28:07.450 --> 00:28:09.700\nhere we gotta do a little extra\nwork to get this one ready.\n\n569\n00:28:09.700 --> 00:28:13.630\nBut this is the starting work for that,\nto get those variables pushed out.\n\n570\n00:28:13.630 --> 00:28:18.375\n&gt;&gt; Definitely looking forward to seeing\nhow parent shells deal with their\n\n571\n00:28:18.375 --> 00:28:19.250\nteenage sons.\n\n572\n00:28:19.250 --> 00:28:19.750\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n573\n00:28:19.750 --> 00:28:20.995\n&gt;&gt; Cuz they can be annoying.\n\n574\n00:28:20.995 --> 00:28:23.225\nThey won't take out the garbage or\nanything.\n\n575\n00:28:23.225 --> 00:28:24.125\n&gt;&gt; That's right.\n&gt;&gt; Or clean their room.\n\n576\n00:28:24.125 --> 00:28:26.620\n[LAUGH] All right, Don, well part\ntwo looks like is on our horizon.\n\n577\n00:28:26.620 --> 00:28:28.270\nI do thank you for joining us so far.\n\n578\n00:28:28.270 --> 00:28:30.910\nBut we're gonna go ahead and\ncall it a day for this episode.\n\n579\n00:28:30.910 --> 00:28:32.680\nCome back and watch part two.\n\n580\n00:28:32.680 --> 00:28:35.750\nSee the culmination of John's epic\nwork that he's got going on here\n\n581\n00:28:35.750 --> 00:28:38.568\nwith environmental and local variables.\n\n582\n00:28:38.568 --> 00:28:40.750\nBut looking at the clock,\nwe're gonna go ahead and call it a day.\n\n583\n00:28:40.750 --> 00:28:41.870\nThanks for watching.\n\n584\n00:28:41.870 --> 00:28:42.850\nSigning off for ITProTV.\n\n585\n00:28:42.850 --> 00:28:44.770\nI've been your host Daniel Lowrie.\n\n586\n00:28:44.770 --> 00:28:45.370\n&gt;&gt; And I'm Don Pezet.\n\n587\n00:28:45.370 --> 00:28:46.759\n&gt;&gt; And we'll see you next time.\n\n588\n00:28:46.759 --> 00:28:53.530\n[MUSIC]\n\n589\n00:28:53.530 --> 00:28:58.579\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "235607090"
        },
        {
          "description": "In this episode, Don continues working with environment variables. He demonstrates how to make a variable globally available between shells. He also demonstrates how to make variables persist between logins.",
          "length": "1198",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-1-2-environment_variables-092517.00_19_44_07.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-1-2-environment_variables-092517.00_19_44_07.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-1-2-environment_variables-092517.00_19_44_07.Still001-sm.jpg",
          "title": "Environment Variables Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:01.160\nWelcome to ITPro.TV.\n\n2\n00:00:01.160 --> 00:00:03.554\nI'm your host Don Pezet.\n\n3\n00:00:03.554 --> 00:00:07.366\n&gt;&gt; [CROSSTALK]\n\n4\n00:00:07.366 --> 00:00:08.339\n&gt;&gt; [MUSIC]\n\n5\n00:00:08.339 --> 00:00:12.230\n&gt;&gt; You're watching ITPro.TV.\n\n6\n00:00:12.230 --> 00:00:14.092\n&gt;&gt; All right, greetings everyone and\n\n7\n00:00:14.092 --> 00:00:17.077\nwelcome back to another\nexciting episode of ITPro.TV.\n\n8\n00:00:17.077 --> 00:00:18.474\nI'm your host, Daniel Lowrie, and\n\n9\n00:00:18.474 --> 00:00:21.374\nin today's episode we're back with\nmore of our Linux Command Line series.\n\n10\n00:00:21.374 --> 00:00:24.740\nAnd joining us back in the studio for\na part two on variables,\n\n11\n00:00:24.740 --> 00:00:26.730\nour good friend, Mr. Don Pezant.\n\n12\n00:00:26.730 --> 00:00:28.280\nDon, welcome back sir, how's it going?\n\n13\n00:00:28.280 --> 00:00:30.720\n&gt;&gt; It is going great Daniel,\nready to dive back in and\n\n14\n00:00:30.720 --> 00:00:34.450\nwrap up with all of the stuff that I\njust didn't quite get to in part one.\n\n15\n00:00:34.450 --> 00:00:36.217\nRemember we're talking about variables and\n\n16\n00:00:36.217 --> 00:00:39.154\nin the last episode we got a chance to\nsee how to set up some local variables.\n\n17\n00:00:39.154 --> 00:00:42.280\nAnd we were setting up global variables\nwhen I kind or ran out of time, and\n\n18\n00:00:42.280 --> 00:00:44.192\nI have a lot more that\nI wanted to talk about.\n\n19\n00:00:44.192 --> 00:00:46.613\nSo here in this episode we're\ngonna be diving back in and\n\n20\n00:00:46.613 --> 00:00:48.891\nkinda wrapping up with some\nof the advanced points.\n\n21\n00:00:48.891 --> 00:00:51.499\nAnd slight adjustments we need\nto make to get everything\n\n22\n00:00:51.499 --> 00:00:53.172\nworking the way that we want right.\n\n23\n00:00:53.172 --> 00:00:56.960\n&gt;&gt; Now Don when we left the previous show\nwe were kind of setting some persistent\n\n24\n00:00:56.960 --> 00:00:59.919\nvariables globally that everyone\nwould be able to use, and\n\n25\n00:00:59.919 --> 00:01:04.140\nI guess that's a good place for us to pick\nback up on setting those global variables.\n\n26\n00:01:04.140 --> 00:01:07.220\n&gt;&gt; Right so,\nthe challenge that I ran into,\n\n27\n00:01:07.220 --> 00:01:10.040\nright there at the end of the episode, is\nthat I forgot to talk about a particular\n\n28\n00:01:10.040 --> 00:01:12.560\ntopic, which is called\nexporting variables.\n\n29\n00:01:12.560 --> 00:01:15.020\nWhen you create a variable it's\nusually just created for you.\n\n30\n00:01:15.020 --> 00:01:19.370\nAnd it's usually even more so just\ncreated for the session that you're in.\n\n31\n00:01:19.370 --> 00:01:23.200\nAnd so, I showed how to add variables\nto your bashrc file, right?\n\n32\n00:01:23.200 --> 00:01:28.720\nSo if I pull that up here let me\njust tail my dot dash rc file.\n\n33\n00:01:28.720 --> 00:01:31.521\nAnd so, I added these three variables,\nwhich are just for me, right?\n\n34\n00:01:31.521 --> 00:01:32.890\nThey're designed for me.\n\n35\n00:01:32.890 --> 00:01:34.380\nThat's great.\nAnd there they go.\n\n36\n00:01:34.380 --> 00:01:37.900\nWell those variables\nare called local variables.\n\n37\n00:01:37.900 --> 00:01:40.900\nThey're just for the session that I'm in.\n\n38\n00:01:40.900 --> 00:01:43.750\nUnfortunately, when you run some commands,\n\n39\n00:01:43.750 --> 00:01:47.130\nsome commands will do what's\ncalled spawning a sub-shell.\n\n40\n00:01:47.130 --> 00:01:50.830\nYou've get one shell running, and\nthey spawn a shell underneath it.\n\n41\n00:01:50.830 --> 00:01:52.170\nIt happens quite a bit.\n\n42\n00:01:52.170 --> 00:01:56.160\nSo for example, if I just run ls, right?\n\n43\n00:01:56.160 --> 00:01:58.380\nI'm in my shell, I ran ls.\n\n44\n00:01:58.380 --> 00:01:59.360\nIt ran in my shell.\n\n45\n00:01:59.360 --> 00:02:02.030\nIt all happened in the same shell.\n\n46\n00:02:02.030 --> 00:02:05.160\nIf I do ls and a semicolon.\n\n47\n00:02:05.160 --> 00:02:08.890\nAnd then, I do something like\nps dash dash forest, right?\n\n48\n00:02:08.890 --> 00:02:12.440\nWhich shows me my running processes and\nmaps them into a tree.\n\n49\n00:02:12.440 --> 00:02:16.170\nWell the ls command is gonna run and\nthen the ps command is gonna run.\n\n50\n00:02:16.170 --> 00:02:19.340\nSo by the time ps runs,\nls is already done.\n\n51\n00:02:19.340 --> 00:02:23.430\nSo PS has a shell that's available\nright there for it and it uses it so\n\n52\n00:02:23.430 --> 00:02:25.690\nit's right underneath bash, right?\n\n53\n00:02:25.690 --> 00:02:29.321\nBut if I stick parentheses\naround this that tells,\n\n54\n00:02:29.321 --> 00:02:32.368\nwhoops if I can actually do it,\nhere we go.\n\n55\n00:02:32.368 --> 00:02:34.210\n&gt;&gt; [LAUGH]\n&gt;&gt; That tells bash\n\n56\n00:02:34.210 --> 00:02:35.920\nthat I don't want to run\nthese as separate commands,\n\n57\n00:02:35.920 --> 00:02:38.570\ninstead I'm giving it what's\ncalled a process list.\n\n58\n00:02:38.570 --> 00:02:41.230\nHere's a list of processes\nI want you to start.\n\n59\n00:02:41.230 --> 00:02:46.160\nAnd when this happens,\nps can't take the same shell that ls\n\n60\n00:02:46.160 --> 00:02:50.520\nis already running in and so\nit's gonna spawn off into its own shell.\n\n61\n00:02:50.520 --> 00:02:53.640\nAnd when that happens,\nlook at what happened at the forest.\n\n62\n00:02:53.640 --> 00:02:56.440\nI have the bar shell that I was in.\n\n63\n00:02:56.440 --> 00:02:59.590\nAnd now I have a sub shell underneath it.\n\n64\n00:02:59.590 --> 00:03:04.090\nAnd ps actually ran in that sub shell.\n\n65\n00:03:04.090 --> 00:03:05.970\nNow why do I care about that?\n\n66\n00:03:05.970 --> 00:03:07.250\nNormally we don't, right?\n\n67\n00:03:07.250 --> 00:03:10.750\nTo an N user it ran,\nit did it's job, I got my data,\n\n68\n00:03:10.750 --> 00:03:13.310\nwhat do I care if it ran in a sub shell or\nnot?\n\n69\n00:03:13.310 --> 00:03:15.520\nWith variables we care, right?\n\n70\n00:03:15.520 --> 00:03:20.120\nSo for example,\nif I say var 3 equals value 3, right, so\n\n71\n00:03:20.120 --> 00:03:22.760\nI created variable 3 and there it is.\n\n72\n00:03:22.760 --> 00:03:25.140\nAnd then, I type bash and\nI move into a subshell.\n\n73\n00:03:25.140 --> 00:03:28.590\nNow I'm manually moving into\na subshell here, alright?\n\n74\n00:03:28.590 --> 00:03:34.910\nAnd when I do that,\nif I do echo$ var 3, I get nothing.\n\n75\n00:03:34.910 --> 00:03:40.398\nAnd if I type exit and\nmove out of that shell and\n\n76\n00:03:40.398 --> 00:03:45.173\nI do an echo $var 3 there it is, okay?\n\n77\n00:03:45.173 --> 00:03:49.675\nThe variable was set for\nmy local session and local is very,\n\n78\n00:03:49.675 --> 00:03:54.330\nvery literal it means\nthe session that you're in.\n\n79\n00:03:54.330 --> 00:03:57.900\nAnd so,\nwhen I edited that profiles.dscript\n\n80\n00:03:57.900 --> 00:04:02.270\nat the end of the last episode and I set\na variable there, that would happen for\n\n81\n00:04:02.270 --> 00:04:05.050\nthe initial session that's\na part of my user account.\n\n82\n00:04:05.050 --> 00:04:06.600\nAnd all of the other\nsessions that I spawn,\n\n83\n00:04:06.600 --> 00:04:08.500\nthey're not gonna have it and\nit's not gonna work.\n\n84\n00:04:08.500 --> 00:04:11.260\nIt actually does work for\nthat first session but\n\n85\n00:04:11.260 --> 00:04:13.280\nas a user we never see that first session.\n\n86\n00:04:13.280 --> 00:04:18.960\nSo it doesn't work for us, I guess it\nwould work if you were on one of the TTY\n\n87\n00:04:18.960 --> 00:04:24.120\nactual console terminals on a server,\nbut whoever does that, right?\n\n88\n00:04:24.120 --> 00:04:27.210\nSo we've normally SHH'ed in or\nsomething of that nature and\n\n89\n00:04:27.210 --> 00:04:29.960\nyou're in some secondary shell\nthat doesn't benefit from that.\n\n90\n00:04:29.960 --> 00:04:32.560\nSo, what we need to do is a little extra.\n\n91\n00:04:32.560 --> 00:04:33.810\nNow to help illustrate this,\n\n92\n00:04:33.810 --> 00:04:37.080\nbecause it does get confusing when\nyou start launching bash after bash.\n\n93\n00:04:37.080 --> 00:04:42.500\nYou know, if I sit here and\nrun bash three times, technically\n\n94\n00:04:42.500 --> 00:04:46.690\nI'm four levels deep, right, from my\ninitial shell all the way down to here.\n\n95\n00:04:46.690 --> 00:04:50.760\nAnd if I do a ps dash dash forest I can\nsee that, see I'm getting deeper and\n\n96\n00:04:50.760 --> 00:04:52.020\ndeeper into sub-shells.\n\n97\n00:04:52.020 --> 00:04:54.190\nBut there actually is\na variable that's stored.\n\n98\n00:04:54.190 --> 00:04:59.950\nWhich I'll do a echo dollar sign,\nSHLVL, right, shell level.\n\n99\n00:04:59.950 --> 00:05:02.300\nAnd that tells you how\nmany levels deep you are.\n\n100\n00:05:02.300 --> 00:05:05.860\nOkay, now be careful cuz you're always one\nmore level deep than you think you are,\n\n101\n00:05:05.860 --> 00:05:07.150\nthe variable itself.\n\n102\n00:05:07.150 --> 00:05:10.920\nSo I can tell that I've got\nfour bash prompts open and\n\n103\n00:05:10.920 --> 00:05:12.730\nit says that I'm five levels deep.\n\n104\n00:05:12.730 --> 00:05:14.560\nAnd that first level doesn't show up here.\n\n105\n00:05:14.560 --> 00:05:16.260\nIt's technically my TTY.\n\n106\n00:05:16.260 --> 00:05:19.792\nSo, if I would type Exit five times,\nthis whole thing's gonna close.\n\n107\n00:05:19.792 --> 00:05:22.060\nActually if I type it four times,\nthe whole thing's gonna close.\n\n108\n00:05:22.060 --> 00:05:23.890\nSo I don't even get all\nthe way to the end.\n\n109\n00:05:23.890 --> 00:05:29.430\nBut you can see how far deep you\nare by doing that echo $SHLVL and\n\n110\n00:05:29.430 --> 00:05:32.560\nfor a normal user, for somebody who's\njust doing stuff on the command line,\n\n111\n00:05:32.560 --> 00:05:34.300\nwe don't really care, right?\n\n112\n00:05:34.300 --> 00:05:36.633\nIt just matters if I'm in\na subshell at all, right?\n\n113\n00:05:36.633 --> 00:05:37.800\nThat's really all that matters.\n\n114\n00:05:39.550 --> 00:05:42.520\nSo even ps -forest is enough for us.\n\n115\n00:05:42.520 --> 00:05:45.080\nBut if you're writing a script,\nyou do care.\n\n116\n00:05:45.080 --> 00:05:47.860\nYou do want to know where\nyou're at in that level.\n\n117\n00:05:47.860 --> 00:05:54.470\nNow, when I ran variable\nthree equals value three.\n\n118\n00:05:54.470 --> 00:05:57.380\nThat's my normal way of\nsetting a variable as local.\n\n119\n00:05:57.380 --> 00:05:59.090\nI can make it global though.\n\n120\n00:05:59.090 --> 00:06:03.510\nI can make it persist across all of my\ndifferent shelves, including sub-shelves.\n\n121\n00:06:03.510 --> 00:06:05.150\nAnd we do that with the export command.\n\n122\n00:06:05.150 --> 00:06:09.157\nIf I type export bar three,\nthat takes variable 3 and\n\n123\n00:06:09.157 --> 00:06:14.110\nit changes from a local variable,\ninto a global one, right?\n\n124\n00:06:14.110 --> 00:06:18.590\nSo now if I echo $var 3, there it is.\n\n125\n00:06:18.590 --> 00:06:23.880\nAnd if I type bash again,\nnow I'm in a subshell, right?\n\n126\n00:06:23.880 --> 00:06:28.290\nOops, if I can type my command\nthere we go I'm in the sub shell.\n\n127\n00:06:28.290 --> 00:06:31.632\nAnd if I echo $var 3, there it is, right?\n\n128\n00:06:31.632 --> 00:06:34.730\nI've now made it move across my sessions.\n\n129\n00:06:34.730 --> 00:06:37.239\nAnd so, if I'm going to be\nrunning commands that spawn other\n\n130\n00:06:37.239 --> 00:06:40.489\ncommands this is really important in\norder for these variables to be visible,\n\n131\n00:06:40.489 --> 00:06:42.081\nfor us to be able to see these, right?\n\n132\n00:06:42.081 --> 00:06:44.601\nSo that's the way that sub shell works and\n\n133\n00:06:44.601 --> 00:06:47.554\nthat's the way we can take\nthe local variable and\n\n134\n00:06:47.554 --> 00:06:52.179\nturn it into a global variable, so\nthat it's then present in other places.\n\n135\n00:06:53.370 --> 00:06:55.350\nWhy is all this important, right?\n\n136\n00:06:55.350 --> 00:06:58.633\nDaniel's giving me the look,\nwhich you guys can't see.\n\n137\n00:06:58.633 --> 00:07:00.403\n&gt;&gt; [LAUGH]\n&gt;&gt; It's the,\n\n138\n00:07:00.403 --> 00:07:01.770\nwhy are you telling us all this stuff?\n\n139\n00:07:01.770 --> 00:07:03.961\n&gt;&gt; What are you talking about, Don Pezet?\n\n140\n00:07:03.961 --> 00:07:05.580\n[LAUGH]\n&gt;&gt; And the reason is,\n\n141\n00:07:05.580 --> 00:07:10.090\nwhen you're setting things\ninside of your bashrc file,\n\n142\n00:07:10.090 --> 00:07:13.930\nyou can do them as simple,\nlocal variables, who cares, right?\n\n143\n00:07:13.930 --> 00:07:16.220\nBut it's gonna break your sub shell stuff.\n\n144\n00:07:16.220 --> 00:07:20.290\nAnd if you set it in profiles.d\nthat's applying to all the users, and\n\n145\n00:07:20.290 --> 00:07:23.320\nit's messed up all their sub shells, and\nnow everybody's gotta start tracking\n\n146\n00:07:23.320 --> 00:07:25.440\nthe shell level and\nseeing where they're at or whatever.\n\n147\n00:07:25.440 --> 00:07:30.782\nIt's a mess, and so when you start posting\nvariables that way you wanna export them.\n\n148\n00:07:30.782 --> 00:07:34.242\nOkay, now I showed you an example\nhere in two steps, right?\n\n149\n00:07:34.242 --> 00:07:41.082\nI said var 4 equals value 4,\nand then export var 4, right?\n\n150\n00:07:41.082 --> 00:07:43.928\nBut I could have done it all in one line,\n\n151\n00:07:43.928 --> 00:07:47.562\nI could say export var 5 equals value 5,\nright?\n\n152\n00:07:47.562 --> 00:07:50.769\nThat creates the variable,\npopulates the variable, and\n\n153\n00:07:50.769 --> 00:07:53.020\nmakes it global all in one line.\n\n154\n00:07:53.020 --> 00:07:58.270\nAnd now, if I drop into a sub shell\nI can echo dollar sign var five,\n\n155\n00:07:58.270 --> 00:08:02.090\nand there it is, just like 4 or 3 or\nany of the other ones that I've done.\n\n156\n00:08:02.090 --> 00:08:03.990\nSo I can do it all in one line, right?\n\n157\n00:08:03.990 --> 00:08:07.100\nAnd that's what I wanted to do\nat the end of the last episode.\n\n158\n00:08:07.100 --> 00:08:08.101\n&gt;&gt; [LAUGH].\n&gt;&gt; Before I realized\n\n159\n00:08:08.101 --> 00:08:09.542\nI hadn't really explained why-\n&gt;&gt; It happens.\n\n160\n00:08:09.542 --> 00:08:10.274\n&gt;&gt; I wanted to do that in the first place.\n\n161\n00:08:10.274 --> 00:08:13.340\nYeah it's my habit it's kinda built in.\n\n162\n00:08:13.340 --> 00:08:18.850\nWhen I modify things in /etc/profiles.d,\n\n163\n00:08:18.850 --> 00:08:22.970\nI always do an export there, and\nthat's because I want those variables to\n\n164\n00:08:22.970 --> 00:08:25.170\nbe available in each of\nthe shells that we do.\n\n165\n00:08:25.170 --> 00:08:29.635\nSo if we go back to that,\nso I'm gonna do a sudo by\n\n166\n00:08:29.635 --> 00:08:35.660\n/etc/profile.d/, and then whatever\nI wanna name this script, right?\n\n167\n00:08:35.660 --> 00:08:39.580\nSo I might call it custom.sh.\n\n168\n00:08:39.580 --> 00:08:42.540\nAnd then I start putting in my variables.\n\n169\n00:08:42.540 --> 00:08:46.120\nAnd you could do one variable in each\nscript and have a ton of scripts,\n\n170\n00:08:46.120 --> 00:08:46.830\nthat's fine.\n\n171\n00:08:46.830 --> 00:08:48.770\nOr you could put all your\nvariables in one script.\n\n172\n00:08:48.770 --> 00:08:51.770\nIt doesn't really matter, the system's\ngonna go through an run each one.\n\n173\n00:08:51.770 --> 00:08:57.242\nSo I could come in here and\nI could say not just Var 1 equals value 1,\n\n174\n00:08:57.242 --> 00:09:02.138\nI would wanna make sure I said\nexport var 1 equals value 1 and\n\n175\n00:09:02.138 --> 00:09:04.637\nexport var 2 equals value 2.\n\n176\n00:09:04.637 --> 00:09:07.868\nAnd you can do the same\nthing in your bashrc file.\n\n177\n00:09:07.868 --> 00:09:10.360\nIn your bashrc file it\ndoesn't really matter\n\n178\n00:09:10.360 --> 00:09:12.840\nwhich one you do if you're\nnot using sub shells.\n\n179\n00:09:12.840 --> 00:09:15.545\nBecause It'll work inside your session.\n\n180\n00:09:15.545 --> 00:09:19.020\nbashrc is loaded every time you run bash,\nbut\n\n181\n00:09:19.020 --> 00:09:22.320\nthis one,\nthis isn't run every time we run bash.\n\n182\n00:09:22.320 --> 00:09:24.210\nThis is part of our profile.\n\n183\n00:09:24.210 --> 00:09:25.290\nAnd so that's different,.\n\n184\n00:09:25.290 --> 00:09:27.260\nand that's why we want to make\nsure that we do exports here, so\n\n185\n00:09:27.260 --> 00:09:28.790\nit'll be present everywhere else.\n\n186\n00:09:28.790 --> 00:09:32.760\nAnd you can just come through and\nlist whatever ones you want.\n\n187\n00:09:32.760 --> 00:09:35.090\nLike Neil's shirt color.\n\n188\n00:09:35.090 --> 00:09:36.560\n&gt;&gt; That's a very important variable.\n\n189\n00:09:36.560 --> 00:09:37.610\n&gt;&gt; It really is.\n\n190\n00:09:37.610 --> 00:09:40.470\nAnd so, we can [INAUDIBLE] this stuff and\nnow it'll be available.\n\n191\n00:09:40.470 --> 00:09:44.093\nAnd because I'm putting it inside\na script inside of profiles.d,\n\n192\n00:09:44.093 --> 00:09:47.510\nit's going to be there for every user.\n\n193\n00:09:47.510 --> 00:09:49.350\nEvery user will now be able to query this.\n\n194\n00:09:49.350 --> 00:09:52.040\nNow, I'm actually\nforgetting one extra thing,\n\n195\n00:09:52.040 --> 00:09:54.425\nwhich is This script file doesn't work.\n\n196\n00:09:54.425 --> 00:09:56.790\n[LAUGH]\n&gt;&gt; Well, there you go.\n\n197\n00:09:56.790 --> 00:09:59.730\n&gt;&gt; And the reason that it doesn't work\nis I haven't made it executable yet, so\n\n198\n00:09:59.730 --> 00:10:04.870\nI do need to make it executable,\nso I'm gonna do a CH mode\n\n199\n00:10:04.870 --> 00:10:09.850\nplus X on that file, I'm still sue doing,\nbecause I need to be an administrator, but\n\n200\n00:10:09.850 --> 00:10:14.620\nthat's gonna make it executable, and now\n&gt;&gt; It will actively run and\n\n201\n00:10:14.620 --> 00:10:16.160\nbecome a part of our profile.\n\n202\n00:10:16.160 --> 00:10:18.950\nSo that's kind of a critical thing\nin order to get this to work, and\n\n203\n00:10:18.950 --> 00:10:21.850\nto be present throughout each\nof our different shells, and\n\n204\n00:10:21.850 --> 00:10:23.860\nbe able to make use of those variables.\n\n205\n00:10:23.860 --> 00:10:26.460\nSo a lot that's involved, right,\nthe system variables are already made.\n\n206\n00:10:26.460 --> 00:10:28.300\nThey're already there,\nthey're in our environment,\n\n207\n00:10:28.300 --> 00:10:30.490\nyou do a print ENV to see them\n&gt;&gt; But\n\n208\n00:10:30.490 --> 00:10:33.680\nthe user variables, the ones that\nwe mess with, there's a lot to it.\n\n209\n00:10:33.680 --> 00:10:36.300\nRight, we can just create\nthem dynamically on the fly.\n\n210\n00:10:36.300 --> 00:10:37.880\nWe can put them in our bashrc file.\n\n211\n00:10:37.880 --> 00:10:41.000\nWe can put them over here\nin the profile.d folder.\n\n212\n00:10:41.000 --> 00:10:43.378\nIt's just depending on what it\nis we're trying to achieve.\n\n213\n00:10:43.378 --> 00:10:44.322\nWe have a lot of flexibility.\n\n214\n00:10:44.322 --> 00:10:46.700\n&gt;&gt; Well Don,\nthis definitely seems to be very,\n\n215\n00:10:46.700 --> 00:10:50.220\nit sounds like you could get yourself\nin trouble very quickly if you're not\n\n216\n00:10:50.220 --> 00:10:53.030\npaying attention to how\nyour setting the variables.\n\n217\n00:10:53.030 --> 00:10:55.452\nAre they being set globally or\nare they only being set locally?\n\n218\n00:10:55.452 --> 00:10:57.340\nDo they persist into sub shells?\n\n219\n00:10:57.340 --> 00:11:02.891\nBut you don't take all those variables\ninto account, why isn't this working?\n\n220\n00:11:02.891 --> 00:11:06.299\nAnd you have to go through and debunk,\nthat's right, I forgot to make it to where\n\n221\n00:11:06.299 --> 00:11:08.908\nit will span in sub shells and\nthings of that nature, correct?\n\n222\n00:11:08.908 --> 00:11:11.370\n&gt;&gt; Yeah absolutely, and\n\n223\n00:11:11.370 --> 00:11:16.150\nit can get complex it can take a little\nbit of head scratching to sort things out.\n\n224\n00:11:16.150 --> 00:11:17.910\nAnd it's a complex environment.\n\n225\n00:11:17.910 --> 00:11:21.130\nThere's actually other things that\ncan start to mess with this as well.\n\n226\n00:11:21.130 --> 00:11:26.080\nFor example, the default system shell,\n\n227\n00:11:26.080 --> 00:11:29.280\nin your user account you have\ndefault user shell, right?\n\n228\n00:11:29.280 --> 00:11:34.660\nSo when you log in the system\nlooks at /etc, /passwd.\n\n229\n00:11:34.660 --> 00:11:36.790\nAnd it says, okay,\nwell what is your default shell?\n\n230\n00:11:36.790 --> 00:11:39.057\nSo in my case, if I do a.\n\n231\n00:11:40.456 --> 00:11:43.984\nLet's just do a grep /etc.\n\n232\n00:11:43.984 --> 00:11:48.677\nHang on, let's do a cet, /etc/passwd and\n\n233\n00:11:48.677 --> 00:11:53.011\nI'll grep from my username, all right?\n\n234\n00:11:53.011 --> 00:11:53.577\nDpezzer.\n\n235\n00:11:53.577 --> 00:11:55.165\n&gt;&gt; [LAUGH]\n&gt;&gt; Okay, dpezet.\n\n236\n00:11:55.165 --> 00:11:58.903\nAnd I can see my default\nshell is /bin/bash, right?\n\n237\n00:11:58.903 --> 00:11:59.900\nThat's great.\n\n238\n00:11:59.900 --> 00:12:00.850\nSo, I go and\n\n239\n00:12:00.850 --> 00:12:04.970\nI put all of my custom variables that\nI want right in my bashrc file, right?\n\n240\n00:12:04.970 --> 00:12:07.000\nAnd I use export and all that,\nso it's good, right?\n\n241\n00:12:07.000 --> 00:12:08.180\nI do it all in bashrc.\n\n242\n00:12:08.180 --> 00:12:09.140\nThat's my default shell.\n\n243\n00:12:09.140 --> 00:12:10.625\n&gt;&gt; As Nate would say, you're set to jet.\n\n244\n00:12:10.625 --> 00:12:12.650\n[LAUGH]\n&gt;&gt; I am set to jet, that's right.\n\n245\n00:12:12.650 --> 00:12:18.080\nNow, every time I launch a bash instance,\nwhen I go into that bash shell\n\n246\n00:12:18.080 --> 00:12:22.160\nit reads bash rc, it loads my variables\nand I see them and they're great.\n\n247\n00:12:22.160 --> 00:12:26.110\nAnd then, later on I schedule\nsome kind of cron job or\n\n248\n00:12:26.110 --> 00:12:29.890\nI have a demon that runs in\nthe background that calls a script and\n\n249\n00:12:29.890 --> 00:12:33.200\nmy variables aren't working,\nand I can't figure out why.\n\n250\n00:12:33.200 --> 00:12:38.270\nAlright this shell,\nthis is your interactive shell.\n\n251\n00:12:38.270 --> 00:12:42.040\nWhen I log in an interactive mode in other\nwords when I get a terminal like this,\n\n252\n00:12:42.040 --> 00:12:45.590\na command line interface like this,\nthat's my default shell.\n\n253\n00:12:45.590 --> 00:12:50.080\nBut when the system runs, when there's\nsomething noninteractive that runs in\n\n254\n00:12:50.080 --> 00:12:53.030\nthe background,\nit uses what's called the system shell.\n\n255\n00:12:53.030 --> 00:12:57.610\nAnd the system shell might be\ndifferent than your user shell.\n\n256\n00:12:57.610 --> 00:13:03.490\nAll right, and that means I might have\nbash as my user shell, but it might\n\n257\n00:13:03.490 --> 00:13:09.550\ndash or more commonly the original sh is\nthe default system shell and guess what?\n\n258\n00:13:09.550 --> 00:13:12.540\nThe original sh doesn't look at bashrc.\n\n259\n00:13:12.540 --> 00:13:16.770\nAnd dash doesn't look at bashrc.\n\n260\n00:13:16.770 --> 00:13:20.230\nSo other shells will ignore this file and\nnot load your variable.\n\n261\n00:13:20.230 --> 00:13:22.890\nSo you need to be aware\nof the system shell.\n\n262\n00:13:22.890 --> 00:13:29.240\nNow on a lot of distros, like on this one,\nI'm on Fedora, or if you're on Red Hat,\n\n263\n00:13:29.240 --> 00:13:33.880\nor whatever, a lot of them will\njust use bash as the system shell.\n\n264\n00:13:33.880 --> 00:13:36.080\nSo now you're fine,\nbash everywhere, works great.\n\n265\n00:13:36.080 --> 00:13:39.480\nBut there are distros like Ubuntu\nthat use dash by default, and\n\n266\n00:13:39.480 --> 00:13:41.350\nthat can cause some problems.\n\n267\n00:13:41.350 --> 00:13:44.950\nNow if you're curious about which\none is the default system shell\n\n268\n00:13:44.950 --> 00:13:48.320\nWhat you can do is POSIX, right?\n\n269\n00:13:48.320 --> 00:13:52.180\nThere's the POSIX compliance rules that,\nif you want to be UNIX compatible,\n\n270\n00:13:52.180 --> 00:13:53.750\nyou have to be POSIX compliant.\n\n271\n00:13:53.750 --> 00:13:59.953\nAnd according to POSIX,\nthe system shell has to be /bin/sh.\n\n272\n00:13:59.953 --> 00:14:01.630\nIt has to be.\n\n273\n00:14:01.630 --> 00:14:03.840\nNow, I know what you're thinking.\n\n274\n00:14:03.840 --> 00:14:07.118\nDon, you just said Fedora uses\nbash as the default shell, so\n\n275\n00:14:07.118 --> 00:14:10.417\nhow can you use bash if the default\nshell has to be /bin/sh.\n\n276\n00:14:10.417 --> 00:14:15.305\nWell the default shell doesn't\nhave to be the original sh,\n\n277\n00:14:15.305 --> 00:14:18.590\nbut the file has to be /bin/sh.\n\n278\n00:14:18.590 --> 00:14:23.260\nSo if I go into /bin and I take\na look at everything that's in here.\n\n279\n00:14:23.260 --> 00:14:26.490\nLet me do a dash l so\nwe get the long output on this.\n\n280\n00:14:26.490 --> 00:14:29.440\nAnd I find sh here in my list.\n\n281\n00:14:29.440 --> 00:14:32.653\nWhat you'll find is that\nmost distros do a sim link.\n\n282\n00:14:32.653 --> 00:14:37.480\nThey do a sim link that\nties sh to something else.\n\n283\n00:14:37.480 --> 00:14:38.730\nWe'll find, I should've filtered it.\n\n284\n00:14:38.730 --> 00:14:39.670\nThere we go.\n\n285\n00:14:39.670 --> 00:14:44.220\nAnd so on mine,\nif I look I can actually see right here\n\n286\n00:14:44.220 --> 00:14:47.690\nthat sh is linked to bash, right?\n\n287\n00:14:47.690 --> 00:14:53.500\nSo when the system goes to call /bin/sh,\nit actually ends up running bash.\n\n288\n00:14:53.500 --> 00:14:54.900\nAnd that's good, that's what I want.\n\n289\n00:14:54.900 --> 00:14:55.950\nAnd I can change that right here.\n\n290\n00:14:55.950 --> 00:14:58.056\nMaybe I love dash, which I don't.\n\n291\n00:14:58.056 --> 00:14:59.075\n&gt;&gt; [LAUGH]\n&gt;&gt; But maybe I did, right.\n\n292\n00:14:59.075 --> 00:15:03.730\nAnd if I wanted to use that, I could come\nin and I could relink sh to point to dash.\n\n293\n00:15:03.730 --> 00:15:05.860\nAnd now that would be my\nsystem default shell.\n\n294\n00:15:05.860 --> 00:15:09.820\nSo some systems have done that,\nsome people have done that.\n\n295\n00:15:09.820 --> 00:15:12.500\nSo if you run into a scenario\nwhere your variables just\n\n296\n00:15:12.500 --> 00:15:15.040\naren't working the way\nthat they're supposed to,\n\n297\n00:15:15.040 --> 00:15:18.040\nthen you may have a situation where\nthe system shell is different.\n\n298\n00:15:18.040 --> 00:15:22.320\nOr another user is trying to run your\nscript and they've used a different shell.\n\n299\n00:15:22.320 --> 00:15:25.690\nAnd that's where, we'll see in the\nscripting shells, where we almost always\n\n300\n00:15:25.690 --> 00:15:29.520\nhave to define the execution\nenvironment in the very first line.\n\n301\n00:15:29.520 --> 00:15:32.850\nIn other words, which shell are we going\nto use in order to run this script to\n\n302\n00:15:32.850 --> 00:15:34.710\navoid this very situation?\n\n303\n00:15:34.710 --> 00:15:36.534\nBut, when it comes to setting variables,\n\n304\n00:15:36.534 --> 00:15:39.160\nit is important to\nunderstand that difference.\n\n305\n00:15:39.160 --> 00:15:39.808\n&gt;&gt; Well done, Don.\n\n306\n00:15:39.808 --> 00:15:43.010\nIt definitely gives us plenty to\ndigest when it comes to setting\n\n307\n00:15:43.010 --> 00:15:44.148\nthese variables up.\n\n308\n00:15:44.148 --> 00:15:45.713\nMaking sure that we're\ndoing them the right way,\n\n309\n00:15:45.713 --> 00:15:47.584\nbecause otherwise they're just\nnot gonna work very well.\n\n310\n00:15:47.584 --> 00:15:49.790\nNow we do have an interesting\nquestion from our chat room.\n\n311\n00:15:49.790 --> 00:15:52.650\nBill Stanley's piping back up,\nhe wants to know if the env command or\n\n312\n00:15:52.650 --> 00:15:56.960\nprintenv will show those variables\nthat we set in our script?\n\n313\n00:15:56.960 --> 00:15:58.850\nYeah they will.\n\n314\n00:15:58.850 --> 00:16:00.659\nAssuming we send them right.\n\n315\n00:16:00.659 --> 00:16:02.340\n&gt;&gt; [LAUGH]\n&gt;&gt; In the last episode I showed you guys\n\n316\n00:16:02.340 --> 00:16:04.530\na command, print env and set.\n\n317\n00:16:04.530 --> 00:16:05.550\nThose are two commands.\n\n318\n00:16:05.550 --> 00:16:08.520\nLet's bring these up real quick,\nlet me get out of this folder.\n\n319\n00:16:08.520 --> 00:16:12.920\nSo I showed you print env which showed\nus our system environment variables.\n\n320\n00:16:12.920 --> 00:16:17.740\nThese are ones that are generally set by\nthe system that we can certainly override.\n\n321\n00:16:17.740 --> 00:16:19.270\nAnd then I showed you the set command,\n\n322\n00:16:19.270 --> 00:16:24.070\nwhich yeah, it's got a lot of\noutput that comes out of that one.\n\n323\n00:16:24.070 --> 00:16:28.510\nI guess we could maybe grab for the equal\nsign or something and then try and\n\n324\n00:16:28.510 --> 00:16:30.130\nfind just the variables out of it.\n\n325\n00:16:30.130 --> 00:16:31.650\nBut it's got a ton of information,\n\n326\n00:16:31.650 --> 00:16:34.310\nincluding a lot of the variables\nthat we have been setting.\n\n327\n00:16:34.310 --> 00:16:39.840\nSo like if I say var 6 equals value 6.\n\n328\n00:16:39.840 --> 00:16:43.710\nI could then use the set command and\nI could look for var 6.\n\n329\n00:16:43.710 --> 00:16:45.610\nAnd there it is, it's right there, okay?\n\n330\n00:16:45.610 --> 00:16:48.450\nWell, the set command gives\nyou a lot of extra data.\n\n331\n00:16:48.450 --> 00:16:51.280\nThe command that Stanley\nis mentioning is env and\n\n332\n00:16:51.280 --> 00:16:54.110\nit gives you a much\nsimpler view of that data.\n\n333\n00:16:54.110 --> 00:16:58.920\nSo if I just run env, what I get here\nare all the session variables for\n\n334\n00:16:58.920 --> 00:17:04.210\nmy environment, not differentiating\nbetween whether they're system or user.\n\n335\n00:17:04.210 --> 00:17:07.620\nAnd so, when I look at this I see\na mixture, which is a decent thing.\n\n336\n00:17:07.620 --> 00:17:09.470\nCuz now you can kinda\nget it all in one place.\n\n337\n00:17:09.470 --> 00:17:11.540\nYou just lose where it's coming from.\n\n338\n00:17:11.540 --> 00:17:14.270\nBut the nice part here is it\nbecomes really easy to find.\n\n339\n00:17:14.270 --> 00:17:16.270\nThere's var 3, var 4, var 5, you know,\n\n340\n00:17:16.270 --> 00:17:19.090\nwhichever one's that I've set,\nthey show up there.\n\n341\n00:17:19.090 --> 00:17:21.530\nVar 6 will be in here somewhere.\n\n342\n00:17:21.530 --> 00:17:27.330\nActually, I guess it won't,\nbecause it was set after the show loaded,\n\n343\n00:17:27.330 --> 00:17:29.480\nso it's not a predefined one.\n\n344\n00:17:29.480 --> 00:17:31.960\nSo unless I'm just missing it.\n\n345\n00:17:31.960 --> 00:17:35.220\nBut emv is another command\nthat's available to see it.\n\n346\n00:17:35.220 --> 00:17:38.190\nOn a positive side, it gives you that kind\nof an abbreviated view of the variables.\n\n347\n00:17:38.190 --> 00:17:38.890\nOn the negative side,\n\n348\n00:17:38.890 --> 00:17:40.630\nyou just don't necessarily know\nwhere they're coming from.\n\n349\n00:17:40.630 --> 00:17:44.210\nBut again, realistically, most users\ndon't care where they come from.\n\n350\n00:17:44.210 --> 00:17:46.003\nThey just want to see\n&gt;&gt; [CROSSTALK] that it works.\n\n351\n00:17:46.003 --> 00:17:46.734\n[LAUGH]\n&gt;&gt; So they can see it.\n\n352\n00:17:46.734 --> 00:17:49.440\nAnd so, you get a chance to spot that.\n\n353\n00:17:49.440 --> 00:17:52.300\nAnd you know, actually, on that same note.\n\n354\n00:17:52.300 --> 00:17:55.150\nDid I mention the SHLVL?\n\n355\n00:17:55.150 --> 00:17:55.800\n&gt;&gt; Yes.\n&gt;&gt; Variable?\n\n356\n00:17:55.800 --> 00:17:57.000\nI did, okay, good.\n\n357\n00:17:57.000 --> 00:17:59.980\nJust making sure so\nwe know how many levels deep we are.\n\n358\n00:17:59.980 --> 00:18:01.040\n&gt;&gt; The shovel.\n\n359\n00:18:01.040 --> 00:18:01.540\nHow deep am I?\n\n360\n00:18:01.540 --> 00:18:02.645\nYou could shovel out.\n\n361\n00:18:02.645 --> 00:18:04.080\n[LAUGH]\n&gt;&gt; We're getting deeper by\n\n362\n00:18:04.080 --> 00:18:05.315\nthe minute here.\n\n363\n00:18:05.315 --> 00:18:07.690\n[LAUGH] All right so.\n\n364\n00:18:07.690 --> 00:18:10.690\nSo anyhow, those are a couple of\ndifferent ways that we can see those, and\n\n365\n00:18:10.690 --> 00:18:13.090\njust stuff that we need\nto be aware of there.\n\n366\n00:18:13.090 --> 00:18:15.680\nWhen you define your variables,\nit doesn't hurt to use export.\n\n367\n00:18:15.680 --> 00:18:19.100\nYou might use export all the time,\nand just always do globals.\n\n368\n00:18:19.100 --> 00:18:22.770\nBut there are times where you might wanna\nhave a variable that's storing data in\n\n369\n00:18:22.770 --> 00:18:25.780\none shell that's different from\ndata in another shell, but\n\n370\n00:18:25.780 --> 00:18:26.510\nwith the same variable name.\n\n371\n00:18:26.510 --> 00:18:28.810\nAnd in that scenario you\nwouldn't want to export it.\n\n372\n00:18:28.810 --> 00:18:30.690\nYou would want that to\nbe a local variable, so\n\n373\n00:18:30.690 --> 00:18:32.860\nthat's a situation that\nyou will encounter.\n\n374\n00:18:32.860 --> 00:18:35.860\n&gt;&gt; All right, well, Don, there's a lot\ngoings on when it comes to variables\n\n375\n00:18:35.860 --> 00:18:38.170\ninside of our link systems,\nglobal variables,\n\n376\n00:18:38.170 --> 00:18:43.190\nlocal variables, exporting variables,\nsetting them, moving them, unsetting them.\n\n377\n00:18:43.190 --> 00:18:44.230\nIt's a lot of fun.\n\n378\n00:18:44.230 --> 00:18:45.160\nJust be careful.\n\n379\n00:18:45.160 --> 00:18:47.001\nDon't drink and set, right?\n\n380\n00:18:47.001 --> 00:18:49.235\n&gt;&gt; [LAUGH]\n&gt;&gt; Cuz then you'll get crazy variables.\n\n381\n00:18:49.235 --> 00:18:50.464\nWhat's going on my system?\n\n382\n00:18:50.464 --> 00:18:52.620\nIt's crazy, it's lost its mind.\n\n383\n00:18:52.620 --> 00:18:53.850\nBut take a little time.\n\n384\n00:18:53.850 --> 00:18:55.410\nWatch these episodes over and over again.\n\n385\n00:18:55.410 --> 00:18:57.500\nI understand.\nI remember it took me a little bit\n\n386\n00:18:57.500 --> 00:18:59.390\nbefore I was like, okay.\n\n387\n00:18:59.390 --> 00:19:01.750\nI see what's going here and\nnow I can make use of them.\n\n388\n00:19:01.750 --> 00:19:03.770\nBecause they are extremely useful.\n\n389\n00:19:03.770 --> 00:19:06.110\nEspecially when you start\ngetting into scripting.\n\n390\n00:19:06.110 --> 00:19:08.840\nAll this stuff is gonna make a whole\nlot more sense down the road.\n\n391\n00:19:08.840 --> 00:19:10.740\nDon thanks so much for\nexplaining variables to us.\n\n392\n00:19:10.740 --> 00:19:12.840\nIs there anything else you want to add\nto the show before we close it down?\n\n393\n00:19:12.840 --> 00:19:15.600\n&gt;&gt; Yeah, you know, the main thing,\nI didn't really show you guys a practical\n\n394\n00:19:15.600 --> 00:19:18.600\nreal world example other than finding\nout what shirt color Daniel has.\n\n395\n00:19:18.600 --> 00:19:21.950\nBut in the scripting show you'll find that\nwe can actually leverage these variables\n\n396\n00:19:21.950 --> 00:19:24.360\nto do a lot of powerful things.\n\n397\n00:19:24.360 --> 00:19:25.920\nSo just be aware,\nthey are incredibly useful.\n\n398\n00:19:25.920 --> 00:19:29.230\nEven though here we were just kind of\nlearning more the fundamentals of it,\n\n399\n00:19:29.230 --> 00:19:31.790\nwe will get to some real world\nstuff in the show's episodes.\n\n400\n00:19:31.790 --> 00:19:34.980\n&gt;&gt; All right, well Don, thanks for joining\nus, and we do thank our audience for\n\n401\n00:19:34.980 --> 00:19:35.760\nwatching as well.\n\n402\n00:19:35.760 --> 00:19:40.180\nHopefully you've enjoyed this episode, but\nit is that time for us to call it a day.\n\n403\n00:19:40.180 --> 00:19:43.200\nSigning off for ITPro,TV,\nI've been your host Daniel Lowrie.\n\n404\n00:19:43.200 --> 00:19:43.810\n&gt;&gt; And I'm Don Pezet.\n\n405\n00:19:43.810 --> 00:19:45.238\n&gt;&gt; And we'll see you next time.\n\n406\n00:19:49.476 --> 00:19:52.406\n[MUSIC]\n\n407\n00:19:52.406 --> 00:19:55.657\nThank you for watching ITPro.TV.\n\n",
          "vimeoId": "235606861"
        },
        {
          "description": "In this episode, Don explains how file and directory permissions are used in Linux. He then demonstrates how the permissions can be modified. Finally, he shows how users and groups can be assigned permissions according to your company's needs.",
          "length": "1843",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-2-1-file_permissions-092517.00_34_14_04.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-2-1-file_permissions-092517.00_34_14_04.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-2-1-file_permissions-092517.00_34_14_04.Still001-sm.jpg",
          "title": "File Permissions",
          "transcript": "WEBVTT\n\n1\n00:00:00.260 --> 00:00:01.282\nWelcome to ITProTV.\n\n2\n00:00:01.282 --> 00:00:02.673\nI'm your host, Don Pezet.\n\n3\n00:00:02.673 --> 00:00:06.360\n[CROSSTALK]\n\n4\n00:00:06.360 --> 00:00:08.263\n[MUSIC]\n\n5\n00:00:08.263 --> 00:00:12.270\nYou're watching ITProTV.\n\n6\n00:00:12.270 --> 00:00:14.162\n&gt;&gt; All right, greetings, everyone and\n\n7\n00:00:14.162 --> 00:00:16.713\nwelcome back to another\ngreat episode of ITProTV.\n\n8\n00:00:16.713 --> 00:00:20.045\nI'm your host, Daniel Lowrie, and in\ntoday's episode we are coming back at you\n\n9\n00:00:20.045 --> 00:00:22.220\nwith more in our Linux\ncommand line series.\n\n10\n00:00:22.220 --> 00:00:24.550\nJoining us in the studio yet\nagain, you know him, you love him.\n\n11\n00:00:24.550 --> 00:00:26.270\nHe's a good friend, Mr. Don Pezet.\n\n12\n00:00:26.270 --> 00:00:27.850\nDon, welcome back, man,\nhow's it going today?\n\n13\n00:00:27.850 --> 00:00:28.800\n&gt;&gt; It is going great.\n\n14\n00:00:28.800 --> 00:00:33.771\nReady to continue on with our section on\nstuff that can screw up your command line\n\n15\n00:00:33.771 --> 00:00:34.669\nexperience.\n\n16\n00:00:34.669 --> 00:00:35.580\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n17\n00:00:35.580 --> 00:00:37.980\nwe had a chance to talk about\nenvironment variables, and\n\n18\n00:00:37.980 --> 00:00:40.510\nwe've talked about a few other things\nthat are all stuff we need to be aware of\n\n19\n00:00:40.510 --> 00:00:41.920\nwhile we're working on the command line.\n\n20\n00:00:41.920 --> 00:00:45.433\nAnd in this episode we're gonna talk about\nwhat is probably the biggest bane to my\n\n21\n00:00:45.433 --> 00:00:48.550\ncommand line existence\nwhich are file permissions.\n\n22\n00:00:48.550 --> 00:00:52.430\nFile permissions influence everything\nwe do whenever we touch files.\n\n23\n00:00:52.430 --> 00:00:55.540\nAnd when you're working for the command\nline, you're touching files a lot.\n\n24\n00:00:55.540 --> 00:00:58.875\nSo we need to have a basic understanding\nof how file permissions work And\n\n25\n00:00:58.875 --> 00:01:02.044\nkind of understand how they can,\nI keep saying interfere, right,\n\n26\n00:01:02.044 --> 00:01:03.338\nwhich is what they do to me.\n\n27\n00:01:03.338 --> 00:01:06.555\n&gt;&gt; [LAUGH]\n&gt;&gt; But how they can influence the way that\n\n28\n00:01:06.555 --> 00:01:11.130\nwe [LAUGH] execute commands and\nwork with files on our files system.\n\n29\n00:01:11.130 --> 00:01:13.450\nSo that's what we're gonna take\na look at right here in this episode.\n\n30\n00:01:13.450 --> 00:01:16.280\n&gt;&gt; Don, this is gonna be a great\nepisode cuz if you've ever been banging\n\n31\n00:01:16.280 --> 00:01:17.600\naway at a keyboard and you're like,\n\n32\n00:01:17.600 --> 00:01:22.560\nyes, I just wanna mess around with this\nEtsy shadow file, that'll be a lot of fun.\n\n33\n00:01:22.560 --> 00:01:24.410\nAnd you get permission denied.\n\n34\n00:01:24.410 --> 00:01:26.670\nWell, okay, let me try another file.\n\n35\n00:01:26.670 --> 00:01:27.640\nPermission denied.\n\n36\n00:01:27.640 --> 00:01:29.600\nI wanna run one of Don's scripts.\n\n37\n00:01:29.600 --> 00:01:30.900\nPermission denied.\n\n38\n00:01:30.900 --> 00:01:31.820\nI don't wanna open this.\n\n39\n00:01:31.820 --> 00:01:33.590\nAnd again, down, down, down we go.\n\n40\n00:01:33.590 --> 00:01:35.390\nWe tend to get that a lot.\n\n41\n00:01:35.390 --> 00:01:38.480\nIs this what file permissions is doing?\n\n42\n00:01:38.480 --> 00:01:39.875\n&gt;&gt; Yeah, sometimes it's file permissions.\n\n43\n00:01:39.875 --> 00:01:42.570\nSometimes it's other security policies.\n\n44\n00:01:42.570 --> 00:01:46.970\nYou mentioned /et/passwd,\nwhich is a protected file.\n\n45\n00:01:48.630 --> 00:01:51.200\nThere's times where you might\nnot be able to access a file,\n\n46\n00:01:51.200 --> 00:01:52.570\nyou might not be able to form an action.\n\n47\n00:01:52.570 --> 00:01:54.562\nAnd so you say, you know what?\nForget it, I'm just gonna use sudo and\n\n48\n00:01:54.562 --> 00:01:55.401\nI'll run it as root.\n\n49\n00:01:55.401 --> 00:01:56.141\n&gt;&gt; Yeah.\n\n50\n00:01:56.141 --> 00:01:57.199\n&gt;&gt; And it certainly works then,\ndoesn't it?\n\n51\n00:01:57.199 --> 00:01:58.330\n&gt;&gt; [LAUGH] Yeah, it does.\n\n52\n00:01:58.330 --> 00:02:00.900\n&gt;&gt; But that's not always\nthe appropriate thing to do.\n\n53\n00:02:00.900 --> 00:02:04.660\nSometimes you just need to modify\nthe permissions on that file to suit your\n\n54\n00:02:04.660 --> 00:02:08.090\nneeds, and now you don't have to get the\nroot user involved every time you go to\n\n55\n00:02:08.090 --> 00:02:08.880\nperform an action.\n\n56\n00:02:08.880 --> 00:02:14.280\nSo there are things that are better left\nnot done by root if you can avoid it.\n\n57\n00:02:14.280 --> 00:02:20.010\nSo sudo should not be your go-to,\nevery day, every command kind of use.\n\n58\n00:02:20.010 --> 00:02:21.990\nIt should be more a one off type thing.\n\n59\n00:02:21.990 --> 00:02:25.660\nAnd if you're finding something that's\nrepeatedly being done with sudo,\n\n60\n00:02:25.660 --> 00:02:28.500\nyou probably need to find some\nway to get around that and\n\n61\n00:02:28.500 --> 00:02:30.100\nto make it where it doesn't need that.\n\n62\n00:02:30.100 --> 00:02:32.290\nOr where you can grant\nyourself permissions.\n\n63\n00:02:32.290 --> 00:02:35.790\nAnd this is why we need to have that basic\nunderstanding of how permissions work.\n\n64\n00:02:35.790 --> 00:02:40.900\nSo for example, here in my home folder,\nif I take a look at my files,\n\n65\n00:02:40.900 --> 00:02:45.073\nI've got a file called myscript.sh, okay.\n\n66\n00:02:45.073 --> 00:02:48.720\nAnd it's sitting right there,\nit's right on the file system.\n\n67\n00:02:48.720 --> 00:02:51.130\nAnd if I want to run it,\nI can try and run it.\n\n68\n00:02:51.130 --> 00:02:56.880\nSo I'll call myscript.sh,\nand I get permission denied.\n\n69\n00:02:56.880 --> 00:03:00.660\nNow that's really weird\nbecause I'm in my home folder.\n\n70\n00:03:00.660 --> 00:03:02.020\nI'm the one who made this file.\n\n71\n00:03:02.020 --> 00:03:04.030\nI made this script, and I can't run it?\n\n72\n00:03:04.030 --> 00:03:06.700\nI'm getting permission\ndenied on my own stuff?\n\n73\n00:03:06.700 --> 00:03:11.090\nAnd if I do a ls-l, and\nlook at a long output and\n\n74\n00:03:11.090 --> 00:03:15.790\nI find myscript.sh,\nI'm the owner of this file.\n\n75\n00:03:15.790 --> 00:03:18.291\nI should be able to do whatever I want.\n\n76\n00:03:18.291 --> 00:03:23.460\nThe problem is the permissions\nare stopping me from executing it.\n\n77\n00:03:23.460 --> 00:03:27.450\nAnd this is one of those scenarios\nwhere even if I was the root user,\n\n78\n00:03:27.450 --> 00:03:29.960\nI wouldn't be able to execute it, right?\n\n79\n00:03:29.960 --> 00:03:33.710\nIf I tried to do a sudu./myscript.sh,\n\n80\n00:03:33.710 --> 00:03:38.740\nand run it, I get not found because\nsudu is running in some other folder.\n\n81\n00:03:38.740 --> 00:03:43.699\nSo let's make sure we actually\ngive it the whole thing here.\n\n82\n00:03:43.699 --> 00:03:45.968\nAnd am I typing it wrong?\n\n83\n00:03:45.968 --> 00:03:52.240\nIt is myscript, shoot, I'm forgetting\nthat it's not gonna find it there.\n\n84\n00:03:52.240 --> 00:03:55.160\nBut when I go and\nfire it up here with myscript.sh,\n\n85\n00:03:55.160 --> 00:04:00.120\nthere we go, it's not even finding\nthat shell script to execute.\n\n86\n00:04:00.120 --> 00:04:01.350\nThat's a little odd.\n\n87\n00:04:01.350 --> 00:04:04.090\nI mean, I could just do su and\nbecome the root user.\n\n88\n00:04:04.090 --> 00:04:05.128\nThat's a fun one, right?\n\n89\n00:04:05.128 --> 00:04:08.249\nSo now I'm actually the root user, and\n\n90\n00:04:08.249 --> 00:04:12.992\nI can get into my home directory and\nI can run myscript.sh.\n\n91\n00:04:12.992 --> 00:04:14.520\nPermission was denied.\n\n92\n00:04:14.520 --> 00:04:17.200\nSo pretty unusual for the root user\nto not be able to do something.\n\n93\n00:04:17.200 --> 00:04:20.300\nSo sudo, or even logging in as root,\n\n94\n00:04:20.300 --> 00:04:23.850\nthat’s not always going to be our\nsolution to get around this stuff.\n\n95\n00:04:23.850 --> 00:04:28.170\nWe need to understand how the permissions\nare influencing what we do, all right?\n\n96\n00:04:28.170 --> 00:04:30.810\nNow when I take a look at myscript.sh,\n\n97\n00:04:30.810 --> 00:04:34.816\nthat permissions line,\nthis is the whole line right here.\n\n98\n00:04:34.816 --> 00:04:39.390\nLet me just do a slightly different view.\n\n99\n00:04:39.390 --> 00:04:40.230\nThere we go.\n\n100\n00:04:40.230 --> 00:04:42.610\nSo we can kind of dial in on\nthat one file specifically.\n\n101\n00:04:42.610 --> 00:04:46.830\nI wanna explain what each kind\nof piece of this line means.\n\n102\n00:04:46.830 --> 00:04:48.150\nAnd when we look at it,\n\n103\n00:04:48.150 --> 00:04:53.170\nwe're actually seeing a collection of\nseveral different pieces of data, right?\n\n104\n00:04:53.170 --> 00:04:56.160\nRight here at the beginning,\nthis whole jumbly mess of letters and\n\n105\n00:04:56.160 --> 00:05:00.720\nnumbers, that right there,\nthose are the actual file permissions,\n\n106\n00:05:00.720 --> 00:05:02.130\nthe permissions assigned to this file.\n\n107\n00:05:02.130 --> 00:05:04.885\nAnd they're telling me\nwhat we're allowed to do.\n\n108\n00:05:04.885 --> 00:05:08.040\nAnd there's three different values\nthat you're gonna see here.\n\n109\n00:05:08.040 --> 00:05:11.610\nThere's r, which means you have\npermission to read the file,\n\n110\n00:05:11.610 --> 00:05:16.350\nw, you have permission to write\nto the file, you can change it.\n\n111\n00:05:16.350 --> 00:05:19.290\nAnd then, x,\nyou have permission to execute it.\n\n112\n00:05:19.290 --> 00:05:24.000\nNow you might notice, there's no x,\nno x anywhere in this list.\n\n113\n00:05:24.000 --> 00:05:27.880\nAnd that's because nobody has\npermission to execute this file.\n\n114\n00:05:27.880 --> 00:05:30.730\nThe permissions that you're looking\nat right here are the defaults for\n\n115\n00:05:30.730 --> 00:05:32.790\nmost Linux distributions.\n\n116\n00:05:32.790 --> 00:05:35.850\nAnd distributions can choose to change\nthe default permissions if they want, but\n\n117\n00:05:35.850 --> 00:05:37.730\nthis is pretty standard right here.\n\n118\n00:05:37.730 --> 00:05:40.725\nIt's giving me read and write permissions.\n\n119\n00:05:40.725 --> 00:05:43.165\nIt's giving the group read and\nwrite permissions.\n\n120\n00:05:43.165 --> 00:05:45.635\nAnd it's giving everyone\nelse read permissions.\n\n121\n00:05:45.635 --> 00:05:49.915\nSee, these letters here, it's actually\nthree different sections, right?\n\n122\n00:05:49.915 --> 00:05:51.095\nThe first section.\n\n123\n00:05:51.095 --> 00:05:52.487\nWell, actually let's start at\nthe very beginning, right?\n\n124\n00:05:52.487 --> 00:05:56.715\nThis very first dash is telling me\nwhether this is a file or a directory.\n\n125\n00:05:56.715 --> 00:05:59.060\nIf it's a dash, it's a file.\n\n126\n00:05:59.060 --> 00:06:01.870\nIf it's a d, it's a directory, right?\n\n127\n00:06:01.870 --> 00:06:05.480\nSo if I pull up the bigger listing again,\nand I take a look at it,\n\n128\n00:06:05.480 --> 00:06:08.680\nsee how some of the files start with\na dash, and some start with a d.\n\n129\n00:06:08.680 --> 00:06:11.100\nThe d's are our directory,\nso I have a music directory.\n\n130\n00:06:11.100 --> 00:06:12.320\nAnd there it is, the ID.\n\n131\n00:06:12.320 --> 00:06:14.910\nBut my script has a dash, right?\n\n132\n00:06:14.910 --> 00:06:16.930\nSo that's what the first one does.\n\n133\n00:06:16.930 --> 00:06:23.720\nThen the next three letters are the\npermissions for whoever owns this file.\n\n134\n00:06:23.720 --> 00:06:26.080\nI own the file, it's my file.\n\n135\n00:06:26.080 --> 00:06:29.930\nI have read so I can look inside it,\nand I have write so I can change it.\n\n136\n00:06:29.930 --> 00:06:34.670\nBut I don't have X,\nI don't have execute, so I can't run it.\n\n137\n00:06:34.670 --> 00:06:38.900\nAnd that's why when I try to run\nmyscript.sh, it fails to run.\n\n138\n00:06:38.900 --> 00:06:42.510\nThe next three letters are for the group.\n\n139\n00:06:42.510 --> 00:06:46.970\nA group is more than one person that\nmight have access to that file, and\n\n140\n00:06:46.970 --> 00:06:48.960\nwhat permissions they get.\n\n141\n00:06:48.960 --> 00:06:53.080\nAnd in this case the group would\nhave read and write, and no execute.\n\n142\n00:06:53.080 --> 00:06:54.900\nNow who is the group?\n\n143\n00:06:54.900 --> 00:06:59.880\nWell, if we just look over here a little\nbit, I've got the user that owns it and\n\n144\n00:06:59.880 --> 00:07:03.260\nthen the group that's attached to it,\nall right?\n\n145\n00:07:03.260 --> 00:07:04.350\nNow the user is dpezet.\n\n146\n00:07:04.350 --> 00:07:05.620\nThat makes sense, that's me, right?\n\n147\n00:07:05.620 --> 00:07:06.900\nI made it, it's mine.\n\n148\n00:07:06.900 --> 00:07:11.295\nBut then the group, that doesn't make\nsense, dpezet, that's me, right?\n\n149\n00:07:11.295 --> 00:07:14.650\nWell, whenever you create\na user account in Linux,\n\n150\n00:07:14.650 --> 00:07:16.790\nit creates a group with the same name.\n\n151\n00:07:16.790 --> 00:07:18.830\nSo there's actually a dpezet group.\n\n152\n00:07:18.830 --> 00:07:21.600\nAnd if I want to give somebody\naccess to my files, so\n\n153\n00:07:21.600 --> 00:07:25.550\nmaybe I hired Daniel as my secretary, and\nI want him to have access to all of my\n\n154\n00:07:25.550 --> 00:07:28.660\ndata, I'm pretty sure you'd make a bad\nsecretary, but let's take a chance.\n\n155\n00:07:28.660 --> 00:07:29.703\n&gt;&gt; Most likely.\n[LAUGH]\n\n156\n00:07:29.703 --> 00:07:31.513\n&gt;&gt; And so I wanna give him access to all\n\n157\n00:07:31.513 --> 00:07:32.270\nmy stuff.\n\n158\n00:07:32.270 --> 00:07:34.500\nI could just put him in the dpezet group.\n\n159\n00:07:34.500 --> 00:07:36.050\nAnd now he would have access to my files,\n\n160\n00:07:36.050 --> 00:07:39.040\nor at least based on whatever\nthe permissions here indicate.\n\n161\n00:07:39.040 --> 00:07:42.370\nBecause the group can have different\npermissions than the user.\n\n162\n00:07:42.370 --> 00:07:47.121\nI might have read and write, and I give\nthe group just read permissions, and\n\n163\n00:07:47.121 --> 00:07:48.392\nthat's it, okay.\n\n164\n00:07:48.392 --> 00:07:50.323\nAnd then the last little bit here,\n\n165\n00:07:50.323 --> 00:07:54.185\nthis one doesn't correspond to\na name column over here, right, and\n\n166\n00:07:54.185 --> 00:07:58.001\nthat's because this is the column\nthat applies to everybody else.\n\n167\n00:07:58.001 --> 00:07:59.870\nSo this is called the other.\n\n168\n00:07:59.870 --> 00:08:04.333\nYou have user, group and\nother, or U-G-O, and\n\n169\n00:08:04.333 --> 00:08:08.620\nthat O, the other is just everybody else.\n\n170\n00:08:08.620 --> 00:08:12.320\nSo if you're not the dpzet user or\nin the dpzet group,\n\n171\n00:08:12.320 --> 00:08:14.960\nthen you get whatever's right here,\nand the default here is just read.\n\n172\n00:08:14.960 --> 00:08:18.120\nYou'd be able to read this file, but you\nwouldn't be able to write to it to change\n\n173\n00:08:18.120 --> 00:08:20.220\nit, and you definitely wouldn't\nbe able to execute it.\n\n174\n00:08:20.220 --> 00:08:22.340\nYou don't have those permissions.\n\n175\n00:08:22.340 --> 00:08:27.060\nThose permissions right there,\ndictate how this file works.\n\n176\n00:08:27.060 --> 00:08:30.520\nHow this is going to work to allow\nme to connect up to a system,\n\n177\n00:08:30.520 --> 00:08:33.380\nor to run the script, or whatever.\n\n178\n00:08:33.380 --> 00:08:34.840\nIt's gonna influence that.\n\n179\n00:08:34.840 --> 00:08:38.700\nSo when you start getting things like\npermission denied, on a file that you own,\n\n180\n00:08:38.700 --> 00:08:42.020\nthat you created, well, that's when\nyou might need to get in here and\n\n181\n00:08:42.020 --> 00:08:44.080\nstart manipulating these permissions.\n\n182\n00:08:44.080 --> 00:08:45.530\nSo I wanna show you how that works.\n\n183\n00:08:45.530 --> 00:08:48.450\nAnd what you'll find is that\nit's actually pretty easy.\n\n184\n00:08:48.450 --> 00:08:51.850\nIn the olden days, it was actually\nreally annoying to go in and\n\n185\n00:08:51.850 --> 00:08:53.000\nchange file permissions.\n\n186\n00:08:54.250 --> 00:08:56.990\nEach permission didn't have\na simple letter that identified it.\n\n187\n00:08:56.990 --> 00:08:58.150\nIt had a number.\n\n188\n00:08:58.150 --> 00:09:02.510\nSo for example, if I said that\nyour permissions were 7-5-5.\n\n189\n00:09:02.510 --> 00:09:05.108\nSeven, meant I had to read,\nwrite and execute.\n\n190\n00:09:05.108 --> 00:09:08.239\nFive, meant I had to read and execute.\n\n191\n00:09:08.239 --> 00:09:13.200\nSo if it was 7-5-5,\nthe user had to read, write and execute.\n\n192\n00:09:13.200 --> 00:09:15.600\nThe group had read and execute.\n\n193\n00:09:15.600 --> 00:09:16.900\nAnd everyone else had read and execute.\n\n194\n00:09:16.900 --> 00:09:18.610\nIt was a pretty standard permission.\n\n195\n00:09:18.610 --> 00:09:20.940\nBut, if I just walk up to\nsomebody off the street and said,\n\n196\n00:09:20.940 --> 00:09:21.961\nhey your permission's a 7-5-5.\n\n197\n00:09:21.961 --> 00:09:24.153\n[LAUGH]\n&gt;&gt; That doesn't mean anything.\n\n198\n00:09:24.153 --> 00:09:26.334\n&gt;&gt; They're gonna look at you like,\naren't you a crazy person?\n\n199\n00:09:26.334 --> 00:09:28.930\nCuz that doesn't make any sense.\n\n200\n00:09:28.930 --> 00:09:30.979\n[LAUGH]\n&gt;&gt; You must be one of those Unix guys.\n\n201\n00:09:30.979 --> 00:09:34.038\n[LAUGH]\n&gt;&gt; And it's true.\n\n202\n00:09:34.038 --> 00:09:37.074\nIt's not intuitive and\nit steams from the whole idea of,\n\n203\n00:09:37.074 --> 00:09:39.170\nit was developer that made this stuff.\n\n204\n00:09:39.170 --> 00:09:43.540\nIt was for developers, so sure let's use\nbyte values instead of actual levers.\n\n205\n00:09:43.540 --> 00:09:48.260\n&gt;&gt; It's actually kinda genius once\nyou understand how the system works.\n\n206\n00:09:48.260 --> 00:09:51.610\nBut it's not very intuitive, and\nthat's the problem with it right?\n\n207\n00:09:51.610 --> 00:09:53.430\n&gt;&gt; Right.\nAnd so, years ago they introduced\n\n208\n00:09:53.430 --> 00:09:55.180\nthe letter structure instead.\n\n209\n00:09:55.180 --> 00:09:58.000\nAnd today, the numbering structure\nis actually being deprecated, or\n\n210\n00:09:58.000 --> 00:09:59.640\nat least inside of most commands it is.\n\n211\n00:09:59.640 --> 00:10:01.250\nSo we wanna use the letter\nstructure instead.\n\n212\n00:10:01.250 --> 00:10:05.180\nAnd the letter structure is so\nmuch easier, because you have R, W, X.\n\n213\n00:10:05.180 --> 00:10:06.402\nRead, write and execute.\n\n214\n00:10:06.402 --> 00:10:08.300\nAnd we can assign permissions and\ntake them away,\n\n215\n00:10:08.300 --> 00:10:11.650\njust by remembering those letters.\n\n216\n00:10:11.650 --> 00:10:14.170\nSo, for example here, when I look at this,\n\n217\n00:10:14.170 --> 00:10:18.780\nI might decide that I\nwant to be able to read,\n\n218\n00:10:18.780 --> 00:10:23.290\nwrite and execute this script, and I don't\nwant anybody else to be able to touch it.\n\n219\n00:10:23.290 --> 00:10:25.720\nJust me, and that's it.\n\n220\n00:10:25.720 --> 00:10:27.720\nSo we can go in and\nwe can modify these permissions.\n\n221\n00:10:27.720 --> 00:10:28.730\nWe can add permissions.\n\n222\n00:10:28.730 --> 00:10:34.090\nWe can take away permissions,\nusing a very important command, chmod.\n\n223\n00:10:34.090 --> 00:10:36.100\nchmod, that's the change mode command.\n\n224\n00:10:36.100 --> 00:10:39.790\nAnd we can change the permission\nmode that's running on this file.\n\n225\n00:10:39.790 --> 00:10:42.370\nAnd the chmod command,\nif you pull up a file,\n\n226\n00:10:42.370 --> 00:10:45.920\nit's very well documented on how it works\nand permissions that get set for it.\n\n227\n00:10:45.920 --> 00:10:49.660\nYou can also view more on permissions\ninside of like the Bash documentation.\n\n228\n00:10:49.660 --> 00:10:51.430\nIt's got some in there.\n\n229\n00:10:51.430 --> 00:10:53.090\nBut really it's not so bad.\n\n230\n00:10:53.090 --> 00:10:56.560\nSo let me give you the quick primer\nhere on how these permissions work.\n\n231\n00:10:56.560 --> 00:11:00.424\nIf I wanna change permissions,\nI type chmod.\n\n232\n00:11:00.424 --> 00:11:02.895\nAnd then I type,\nwhose permissions I want to change.\n\n233\n00:11:02.895 --> 00:11:04.800\nDo I wanna change the user?\n\n234\n00:11:04.800 --> 00:11:06.900\nThen I would type a U.\n\n235\n00:11:06.900 --> 00:11:07.730\nI wanna change the group?\n\n236\n00:11:07.730 --> 00:11:08.780\nI would type a G.\n\n237\n00:11:08.780 --> 00:11:11.030\nOr I wanna change the other,\nit would be the O.\n\n238\n00:11:11.030 --> 00:11:13.050\nU, G, O, those three letters.\n\n239\n00:11:13.050 --> 00:11:13.840\nThat's who I'm gonna change.\n\n240\n00:11:13.840 --> 00:11:14.670\nI wanna change the user.\n\n241\n00:11:15.760 --> 00:11:19.680\nI want to have read, write and execute.\n\n242\n00:11:19.680 --> 00:11:24.670\nWell, I've already got read and\nwrite, so I just need to add execute.\n\n243\n00:11:24.670 --> 00:11:28.470\nSo I'm gonna say, plus x, so\n\n244\n00:11:28.470 --> 00:11:32.890\ntake the user and add execute,\nthat's what I want.\n\n245\n00:11:34.340 --> 00:11:41.290\nAnd the I tell the file, that I wanna\nmodify, and so I'll say ./myscript.sh.\n\n246\n00:11:41.290 --> 00:11:44.590\nAnd when I run that,\nit modifies the user permissions.\n\n247\n00:11:44.590 --> 00:11:48.790\nSo now, when I pull up\nthe directory listing for it,\n\n248\n00:11:48.790 --> 00:11:55.130\nI can see that the user actually has read,\nwrite and execute.\n\n249\n00:11:55.130 --> 00:11:58.050\nAnd then the group still has read and\nwrite, and everybody else has read.\n\n250\n00:11:58.050 --> 00:12:00.210\nNow I've added permissions here.\n\n251\n00:12:00.210 --> 00:12:02.920\nI could take away permissions as well.\n\n252\n00:12:02.920 --> 00:12:08.880\nSo I could say, for example,\nchmod and then maybe I don't want\n\n253\n00:12:08.880 --> 00:12:14.530\nthe group to have right permissions, and\nI don't want everyone else to have read.\n\n254\n00:12:14.530 --> 00:12:17.882\nIf you're in the group I want you to read,\nbut I don't want you to write, so\n\n255\n00:12:17.882 --> 00:12:19.389\nI'm gonna take away something.\n\n256\n00:12:19.389 --> 00:12:23.072\nI could say g-w.\n\n257\n00:12:23.072 --> 00:12:27.720\nAnd then I can even do a comma and\nsay o-r.\n\n258\n00:12:27.720 --> 00:12:30.110\nI'm taking away read permission.\n\n259\n00:12:30.110 --> 00:12:34.530\nAnd you can mix and match some of these,\nlike I can add execute for one and\n\n260\n00:12:34.530 --> 00:12:37.400\nremove execute for another,\nso you can add and remove.\n\n261\n00:12:37.400 --> 00:12:40.130\n&gt;&gt; So\njust separating them out by the comma.\n\n262\n00:12:40.130 --> 00:12:40.930\nYeah that's it.\n\n263\n00:12:40.930 --> 00:12:44.820\nAnd so you can add in as many as you need,\nand then I'll do myscript.sh,\n\n264\n00:12:44.820 --> 00:12:49.810\nand we'll run that, and\nnow if I pull that listing back up,\n\n265\n00:12:49.810 --> 00:12:52.325\nand this is kinda making\nmy zoom go crazy there.\n\n266\n00:12:52.325 --> 00:12:54.460\n[LAUGH]\n&gt;&gt; But if I pull my listing back up,\n\n267\n00:12:54.460 --> 00:12:59.070\nwhat I'll see is that my read,\nwrite, execute is there for my user.\n\n268\n00:12:59.070 --> 00:13:03.470\nThe group now just has read,\nand the other has nothing.\n\n269\n00:13:03.470 --> 00:13:05.680\nThe permissions are set\nthe way that I want it.\n\n270\n00:13:05.680 --> 00:13:08.850\nNow, you do need to be careful\nwith this because if you\n\n271\n00:13:08.850 --> 00:13:13.430\nforget to specify the u the g or\nthe o, then it affects everybody.\n\n272\n00:13:13.430 --> 00:13:19.417\nSo for example, if I just did chmod + x,\nand specify myscript.sh like that,\n\n273\n00:13:19.417 --> 00:13:24.280\nthat's gonna add execute permissions for\neveryone.\n\n274\n00:13:24.280 --> 00:13:25.440\nAnd so when I run that and\n\n275\n00:13:25.440 --> 00:13:29.310\nthen pull up those permissions again,\nsee how everybody got execute?\n\n276\n00:13:29.310 --> 00:13:31.700\nNow, interesting note here.\n\n277\n00:13:31.700 --> 00:13:33.600\nThe group has read and execute.\n\n278\n00:13:33.600 --> 00:13:34.620\nSo they can run the file.\n\n279\n00:13:35.690 --> 00:13:38.676\nEverybody else still wouldn't\nbe able to run the file.\n\n280\n00:13:38.676 --> 00:13:41.360\nCuz, how am I supposed to run\nthe file if I can't even read it?\n\n281\n00:13:41.360 --> 00:13:43.590\nI need to be able to read\nit in order to execute.\n\n282\n00:13:43.590 --> 00:13:46.130\nSo, the permissions aren't\ncorrect in that scenario.\n\n283\n00:13:46.130 --> 00:13:47.900\nThey're actually kind of\nbroken a little bit, but\n\n284\n00:13:47.900 --> 00:13:51.410\nit'll let you get it as soon\nas you know what you're doing.\n\n285\n00:13:51.410 --> 00:13:53.295\nSometimes it's not the case.\n\n286\n00:13:53.295 --> 00:13:54.600\n[LAUGH]\n&gt;&gt; Or it's just an accident, you know?\n\n287\n00:13:54.600 --> 00:13:57.320\nSo I might need to come back and\ncorrect that.\n\n288\n00:13:57.320 --> 00:14:01.220\nBut basically by doing this,\nwe're setting those permissions.\n\n289\n00:14:01.220 --> 00:14:02.420\nAnd getting them put in place.\n\n290\n00:14:02.420 --> 00:14:05.630\nI'm assigning them and getting them\nset the way that I need them to be, so\n\n291\n00:14:05.630 --> 00:14:08.400\nthat now the script will actually work.\n\n292\n00:14:08.400 --> 00:14:09.870\nAnd since I have read, write and\n\n293\n00:14:09.870 --> 00:14:13.940\nexecute on it,\nI should be able to call that script.\n\n294\n00:14:13.940 --> 00:14:17.780\nAnd when I run it, instead of getting\npermission denied, it actually runs and\n\n295\n00:14:17.780 --> 00:14:19.980\nmy little scriptor says hello world,\nso there it is.\n\n296\n00:14:19.980 --> 00:14:23.410\nAnd, I see that it ran and\nit actually worked.\n\n297\n00:14:23.410 --> 00:14:25.550\nAnd if I logged in as somebody\nthat was in my group,\n\n298\n00:14:25.550 --> 00:14:30.410\nlike if I put Daniel in my group, then he\nwould be able to run this script as well,\n\n299\n00:14:30.410 --> 00:14:31.920\nand it would execute for him.\n\n300\n00:14:31.920 --> 00:14:35.110\nAnybody else tries to run it,\nthey can't even read it.\n\n301\n00:14:35.110 --> 00:14:36.120\nSo it's not gonna run.\n\n302\n00:14:36.120 --> 00:14:38.490\nThey would actually have to call\nit through some interpreter,\n\n303\n00:14:38.490 --> 00:14:40.870\nthat in turn had permissions to access it.\n\n304\n00:14:40.870 --> 00:14:42.870\nAnd usually, that's gonna break.\n\n305\n00:14:42.870 --> 00:14:46.834\nIn this case,\nit's now set up in a certain way.\n\n306\n00:14:46.834 --> 00:14:50.560\nI really just need to go ahead and remove\nthose Execute permissions for the other.\n\n307\n00:14:50.560 --> 00:14:53.858\nSo I'll say, ch mod o-x for\nmyscript.sh, and\n\n308\n00:14:53.858 --> 00:14:58.928\nI'll just remove their permissions,\nand now when I pull up that listing,\n\n309\n00:14:58.928 --> 00:15:04.500\nI can see I have read, write and execute,\nand then the group has read and execute.\n\n310\n00:15:04.500 --> 00:15:07.960\nAnd you wanna be careful with\nwrite permissions on a script.\n\n311\n00:15:07.960 --> 00:15:10.230\nBecause anybody who has write\npermissions could change the script and\n\n312\n00:15:10.230 --> 00:15:11.600\nmake it do different things, and\n\n313\n00:15:11.600 --> 00:15:14.290\nthen when I run it the next time now\nit's doing stuff I didn't intend it to.\n\n314\n00:15:14.290 --> 00:15:17.610\nSo, you only wanna give write permissions\nto somebody you really trust,\n\n315\n00:15:17.610 --> 00:15:19.550\nwhen it comes to scripts like this.\n\n316\n00:15:19.550 --> 00:15:22.490\nBut this applies really to any file,\neven just text files or\n\n317\n00:15:22.490 --> 00:15:24.520\nwhatever and\nif you wanna have access to them,\n\n318\n00:15:24.520 --> 00:15:28.800\nyou need at least read to get to them, and\nyou can modify permissions just like this.\n\n319\n00:15:28.800 --> 00:15:30.630\n&gt;&gt; Now Don, riddle me this.\n\n320\n00:15:30.630 --> 00:15:33.590\nWe've got the owner,\nwe've got the group, and we have other.\n\n321\n00:15:33.590 --> 00:15:35.450\nThat's everybody else\nthat's on the system.\n\n322\n00:15:35.450 --> 00:15:40.280\nWe laid that out for everyone out there\nbut, that tends to people come and\n\n323\n00:15:40.280 --> 00:15:42.880\ngo, especially inside of\ncorporate environments.\n\n324\n00:15:42.880 --> 00:15:46.745\nSo you hired me as your secretary and\nI've made some scripts.\n\n325\n00:15:46.745 --> 00:15:48.110\n[LAUGH]\n&gt;&gt; And they run great and\n\n326\n00:15:48.110 --> 00:15:52.425\nall of a sudden I'm gone, I'm no longer\na user on the system, and you hire Bill.\n\n327\n00:15:52.425 --> 00:15:53.725\nBill comes in.\n\n328\n00:15:53.725 --> 00:15:56.444\nHow's Bill supposed to run\nthose without you having to\n\n329\n00:15:56.444 --> 00:15:58.167\nkeep resetting things like that?\n\n330\n00:15:58.167 --> 00:16:01.415\n&gt;&gt; In a perfect world,\nyou'll use groups for everything.\n\n331\n00:16:01.415 --> 00:16:03.454\nSo if I have a group that\nhas access to this file.\n\n332\n00:16:03.454 --> 00:16:06.760\nWhen I hire Bill, I just put him in\nthe group, and when I fire Daniel,\n\n333\n00:16:06.760 --> 00:16:07.729\nan inevitability.\n\n334\n00:16:07.729 --> 00:16:09.260\n&gt;&gt; [LAUGH] Inevitably.\n\n335\n00:16:09.260 --> 00:16:11.151\n&gt;&gt; And\nthen I just take him out of the group, and\n\n336\n00:16:11.151 --> 00:16:12.800\nnow he doesn't have the permission.\n\n337\n00:16:12.800 --> 00:16:14.550\nSo the groups are kinda\nwhat manages everything, so\n\n338\n00:16:14.550 --> 00:16:15.930\nthat's how you really want to do it.\n\n339\n00:16:15.930 --> 00:16:19.668\nBut you could do it by the owner as well,\nyou might be the owner of the file today.\n\n340\n00:16:19.668 --> 00:16:20.868\n&gt;&gt; Maybe I created the file.\n\n341\n00:16:20.868 --> 00:16:25.245\n&gt;&gt; Yeah, and so now we just take that\nfile, and we assign Bill as the new owner.\n\n342\n00:16:25.245 --> 00:16:28.575\nYou can certainly do that, we've got\ntwo commands that come into play here.\n\n343\n00:16:28.575 --> 00:16:34.780\nThere's chown which is change owner, and\nthen there's chgrp which is change group.\n\n344\n00:16:34.780 --> 00:16:38.010\nAnd like their names imply, one changes\nthe group, one changes the owner.\n\n345\n00:16:38.010 --> 00:16:42.680\nNow I'll be honest with you,\nI never use chgrp because chown\n\n346\n00:16:42.680 --> 00:16:44.730\ncan actually change both the owner and\nthe group.\n\n347\n00:16:44.730 --> 00:16:47.990\nAnd so I just use chown for everything,\nbut there are two commands.\n\n348\n00:16:47.990 --> 00:16:52.060\nSo let's say that, for example,\nmy script that I made, there's a number of\n\n349\n00:16:52.060 --> 00:16:54.420\nadministrators on my system, and\nI want them all to be able to run it.\n\n350\n00:16:54.420 --> 00:16:57.810\nWell, there's an administrators\ngroup called ADM, and\n\n351\n00:16:57.810 --> 00:17:01.090\nso I want the ADM group to be\nattached to this, not dpezet.\n\n352\n00:17:01.090 --> 00:17:05.930\nSo I could do chgrp, and\nthen the name of the group, so in my case,\n\n353\n00:17:05.930 --> 00:17:08.460\nADM, and then the file I wanna change.\n\n354\n00:17:08.460 --> 00:17:15.295\nSo I'll do myscript.sh, and chgrp, oops,\nI'm getting a permission problem here.\n\n355\n00:17:15.295 --> 00:17:18.382\nBut chgrp, it can actually\nbe run recursively as well,\n\n356\n00:17:18.382 --> 00:17:19.573\nyou can do a -r on it.\n\n357\n00:17:19.573 --> 00:17:21.702\nAnd it will get all the subfiles and\nsubfolders as well, so\n\n358\n00:17:21.702 --> 00:17:23.085\nyou might need to do that.\n\n359\n00:17:23.085 --> 00:17:25.985\nI'm getting a permission problem here\nbecause I'm doing an administrative group.\n\n360\n00:17:25.985 --> 00:17:28.494\nIf I had done a regular group,\nit would have worked just fine, so\n\n361\n00:17:28.494 --> 00:17:30.565\nI'm gonna need to sudo this one.\n\n362\n00:17:30.565 --> 00:17:33.980\nThere we go [LAUGH] and so\nnow it lets me change that group.\n\n363\n00:17:33.980 --> 00:17:35.810\nAgain, just because I\npicked an administrative,\n\n364\n00:17:35.810 --> 00:17:39.110\nif you had a group like called accounting,\nand you had permission to manage that\n\n365\n00:17:39.110 --> 00:17:42.020\ngroup, then you'd be able to assign that,\nand you wouldn't have to sudo it.\n\n366\n00:17:42.020 --> 00:17:46.403\nNow if I take a look at my listing now for\nmyscript.sh,\n\n367\n00:17:46.403 --> 00:17:49.561\nI can see that the user is still dpezet.\n\n368\n00:17:49.561 --> 00:17:53.486\nBut now the group is ADM,\nI've changed the group to admin.\n\n369\n00:17:53.486 --> 00:17:58.214\nAnd I could easily change that group\nback just by specifying the group\n\n370\n00:17:58.214 --> 00:18:02.720\nthat I want it to be, and\nputting it back like that.\n\n371\n00:18:02.720 --> 00:18:06.530\nIf I want to change the owner, maybe I\ndon't want dpezet to be the owner anymore.\n\n372\n00:18:06.530 --> 00:18:09.370\nI want to make Daniel or\nthe root user or somebody like that,\n\n373\n00:18:09.370 --> 00:18:11.030\nI want them to be the owner.\n\n374\n00:18:11.030 --> 00:18:15.180\nThen I could do chown and\nthe name of the owner.\n\n375\n00:18:15.180 --> 00:18:19.750\nSo maybe I want it to be root, which\nI'll have to sudo in order to do that.\n\n376\n00:18:19.750 --> 00:18:23.970\nAnd then I can specify that file,\nand now it's changing the owner.\n\n377\n00:18:23.970 --> 00:18:29.260\nAnd when I look at that listing again,\nI can see it's now owned by root.\n\n378\n00:18:29.260 --> 00:18:33.510\nBut remember what I said, I can use\nchown to change both the owner and\n\n379\n00:18:33.510 --> 00:18:34.820\nthe group at the same time.\n\n380\n00:18:34.820 --> 00:18:39.650\nSo just to show you here, I'm gonna\nchange that owner back to dpezet,\n\n381\n00:18:40.670 --> 00:18:44.400\nthere, and so\nnow it's back to dpezet, dpezet.\n\n382\n00:18:44.400 --> 00:18:49.013\nIf I wanna change the owner as root,\nand the group is ADM, I can say chown,\n\n383\n00:18:49.013 --> 00:18:52.977\nI'm gonna sudo it here cuz I'm\nmessing with with admin stuff.\n\n384\n00:18:52.977 --> 00:18:53.724\n&gt;&gt; No, you're not [LAUGH].\n\n385\n00:18:53.724 --> 00:18:58.542\n&gt;&gt; Now I'm gonna accidentally\ndo a recursive search, so\n\n386\n00:18:58.542 --> 00:19:02.860\nI'm gonna do a chown,\nand I'll say root:adm.\n\n387\n00:19:02.860 --> 00:19:08.990\nSo I'm changing the owner and the group,\nyou just use a colon to separate them.\n\n388\n00:19:08.990 --> 00:19:12.480\nAnd then we specify the file, and\nit will change them both at the same time.\n\n389\n00:19:12.480 --> 00:19:17.594\nSo I don't need the chgrp command,\nI can just chown, and now when I take\n\n390\n00:19:17.594 --> 00:19:22.639\na look at it, we can see that the owner\nand the group have both changed.\n\n391\n00:19:22.639 --> 00:19:25.414\nNow, I know what you're thinking,\nactually,\n\n392\n00:19:25.414 --> 00:19:26.334\nI don't, but-\n&gt;&gt; [LAUGH]\n\n393\n00:19:26.334 --> 00:19:27.467\n&gt;&gt; We'll just pretend that you're\n\n394\n00:19:27.467 --> 00:19:29.417\nthinking, what if I just want\nto change the group, Don?\n\n395\n00:19:29.417 --> 00:19:32.270\nThen can't I just use chgrp,\ncome on, there's a command here.\n\n396\n00:19:32.270 --> 00:19:33.460\nAnd you certainly could, but\n\n397\n00:19:33.460 --> 00:19:37.230\nyou can actually still use chown, even\nif you just wanted to change the group.\n\n398\n00:19:37.230 --> 00:19:41.791\nAll you do is leave the owner part off, so\nif I wanted to put it back to being owned\n\n399\n00:19:41.791 --> 00:19:44.919\nby the dpezet group,\nI could say :dpezet like that.\n\n400\n00:19:44.919 --> 00:19:49.379\nAnd the colon lets it know that\nI'm leaving the owner alone,\n\n401\n00:19:49.379 --> 00:19:53.180\nthe u, but I am changing the group,\nthat part.\n\n402\n00:19:53.180 --> 00:19:56.540\nAnd by doing that,\nnow we can take a look at that file, and\n\n403\n00:19:56.540 --> 00:19:57.500\nI see that it changed it.\n\n404\n00:19:57.500 --> 00:20:01.795\nSo really, you can use chown for\neverything, but chgrp is there.\n\n405\n00:20:01.795 --> 00:20:03.780\nchgrp's just not as flexible,\n\n406\n00:20:03.780 --> 00:20:06.160\nand I've kind of gotten out\nof the habit of using it.\n\n407\n00:20:06.160 --> 00:20:08.830\nAnd if I want to put my file\ncompletely back to the way it was,\n\n408\n00:20:08.830 --> 00:20:10.330\nI can just do it right here.\n\n409\n00:20:10.330 --> 00:20:13.800\nBut the whole point of this little\ndiatribe is that I can pick a particular\n\n410\n00:20:13.800 --> 00:20:18.700\ngroup and attach it, and any user that's\nin that group would get those permissions.\n\n411\n00:20:18.700 --> 00:20:21.820\nAnd if it's a script,\nas long as I give them read and\n\n412\n00:20:21.820 --> 00:20:26.480\nexecute, they'll be able to run that,\nbut it's not just scripts that matter.\n\n413\n00:20:26.480 --> 00:20:31.448\nSo for example, I work with Amazon Web\nServices, with AWS, and when you spin up\n\n414\n00:20:31.448 --> 00:20:36.660\na server in AWS, and you want to SSH into\nit, you've gotta provide a security key.\n\n415\n00:20:36.660 --> 00:20:42.220\nAnd so I've got one of those security keys\nsitting right here, this AWSdemo.pem.\n\n416\n00:20:42.220 --> 00:20:46.720\nThat's my security certificate that I\nuse to log into my demo environment.\n\n417\n00:20:46.720 --> 00:20:52.760\nWell, they require that only\nyou have access to that file,\n\n418\n00:20:52.760 --> 00:20:54.590\nor they won't accept it.\n\n419\n00:20:54.590 --> 00:20:57.210\nAnd not only should you be\nthe only one who has access,\n\n420\n00:20:57.210 --> 00:21:00.210\nit should be read-only even for you.\n\n421\n00:21:00.210 --> 00:21:03.740\nAnd so when you first create this\ncertificate, you likely have read, write,\n\n422\n00:21:03.740 --> 00:21:05.880\nand execute on it, or\nat least read and write on it,\n\n423\n00:21:05.880 --> 00:21:07.610\nso you have to change the permissions.\n\n424\n00:21:07.610 --> 00:21:11.740\nAnd so what I had to do for\nthis one was to set the permissions so\n\n425\n00:21:11.740 --> 00:21:14.760\nthat only I had read.\n\n426\n00:21:14.760 --> 00:21:17.709\nAnd if you look at the permissions\nthat are set on it,\n\n427\n00:21:17.709 --> 00:21:19.591\nthat's exactly what I've got.\n\n428\n00:21:19.591 --> 00:21:23.629\nAnd where this gets tricky is if there's\na bunch of permissions that are on it\n\n429\n00:21:23.629 --> 00:21:24.205\nalready.\n\n430\n00:21:24.205 --> 00:21:32.140\nSo let's say I did\na chmod +rwx awsdemo.pem.\n\n431\n00:21:32.140 --> 00:21:36.163\nSo I'm adding rewrite and\nexecute for everyone,\n\n432\n00:21:36.163 --> 00:21:40.578\nwhich is not a great idea,\nbut I'm doing it, darn it.\n\n433\n00:21:40.578 --> 00:21:42.536\n&gt;&gt; I'm gonna log in right now,\nDon [LAUGH].\n\n434\n00:21:42.536 --> 00:21:43.071\n&gt;&gt; Well, and\n\n435\n00:21:43.071 --> 00:21:47.010\nthis actually gives me a chance to\nhighlight I'm doing something bad.\n\n436\n00:21:47.010 --> 00:21:50.309\nI shouldn't give read, write,\nand execute to everyone, and\n\n437\n00:21:50.309 --> 00:21:52.470\nit's actually protecting me.\n\n438\n00:21:52.470 --> 00:21:55.710\nThere's this thing called a permissions\nmask, it's part of a security policy,\n\n439\n00:21:55.710 --> 00:21:57.790\nI'm running Fedora, so it's protecting me.\n\n440\n00:21:57.790 --> 00:22:02.190\nNot every distro protects you, but\nwhen I ran that +rwx, I was saying,\n\n441\n00:22:02.190 --> 00:22:04.260\ngive everybody read, write, and execute.\n\n442\n00:22:04.260 --> 00:22:07.870\nWell, if you'll notice it, didn't do\nwhat I told it, I mean, it did for\n\n443\n00:22:07.870 --> 00:22:09.130\nthe user and the group.\n\n444\n00:22:09.130 --> 00:22:13.877\nBut notice that for everyone,\nit did not give them write access.\n\n445\n00:22:13.877 --> 00:22:16.969\nAnd that's because it says, wow, Don,\nyou're doing something really stupid,\n\n446\n00:22:16.969 --> 00:22:18.136\n[LAUGH] we're gonna stop that.\n\n447\n00:22:18.136 --> 00:22:19.090\n&gt;&gt; [LAUGH] It puts\nthe training wheels on you?\n\n448\n00:22:19.090 --> 00:22:22.842\n&gt;&gt; So it's protecting me a little bit,\nnot every distro does that, though, so\n\n449\n00:22:22.842 --> 00:22:24.640\nbe aware of that behavior.\n\n450\n00:22:24.640 --> 00:22:28.096\nNow at this point, Amazon is no longer\ngonna accept my certificate because it\n\n451\n00:22:28.096 --> 00:22:30.290\nknows the odds of it being\ncompromised are high.\n\n452\n00:22:30.290 --> 00:22:33.839\nBecause the permissions are way whacked\nout on it, so I need to change it so\n\n453\n00:22:33.839 --> 00:22:35.310\nthat only I have read.\n\n454\n00:22:35.310 --> 00:22:39.380\nNow, I could go crazy on this and\ntype out something really long.\n\n455\n00:22:39.380 --> 00:22:44.650\nI could say chmod user minus write and\n\n456\n00:22:44.650 --> 00:22:49.480\nexecute, and then group would be\nminus read, write, and execute, and\n\n457\n00:22:49.480 --> 00:22:52.410\nthen other would be minus read and\nexecute.\n\n458\n00:22:52.410 --> 00:22:54.180\nI've gotta kinda look\nat the permissions and\n\n459\n00:22:54.180 --> 00:22:58.410\nfigure all this stuff out to write\nit out like that, and that's a pain.\n\n460\n00:22:58.410 --> 00:23:01.510\nSo instead, what you can do is,\n\n461\n00:23:01.510 --> 00:23:06.880\nyou can use u=, and\nyou can set it this way.\n\n462\n00:23:06.880 --> 00:23:11.410\nEquals overwrites the permissions\nthat are in there right now.\n\n463\n00:23:11.410 --> 00:23:16.260\nSo I can say user equals read,\nand when I do that,\n\n464\n00:23:16.260 --> 00:23:21.110\nit doesn't care that\nthere was a rwx before.\n\n465\n00:23:21.110 --> 00:23:24.939\nWhen I do that, and\nI look at the permissions again,\n\n466\n00:23:24.939 --> 00:23:28.082\nsee how the user, oops, it didn't do it.\n\n467\n00:23:28.082 --> 00:23:32.383\n&gt;&gt; And Don, I think there's a good reason\nthat your permission thing isn't working\n\n468\n00:23:32.383 --> 00:23:34.703\nthere, because you're in the wrong file.\n\n469\n00:23:34.703 --> 00:23:39.044\n&gt;&gt; [LAUGH] [CROSSTALK]\n&gt;&gt; This is a classic PEBKAC, right,\n\n470\n00:23:39.044 --> 00:23:41.730\nthe problem exists between keyboard and\nchair.\n\n471\n00:23:41.730 --> 00:23:42.410\n&gt;&gt; ID10T, right?\n\n472\n00:23:42.410 --> 00:23:44.087\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH]\n\n473\n00:23:44.087 --> 00:23:46.631\n&gt;&gt; I put the permission on the wrong file,\n\n474\n00:23:46.631 --> 00:23:51.579\nso what I did is I did chmod u=r, and\nthen I did it on my script instead of AWS.\n\n475\n00:23:51.579 --> 00:23:55.262\nSo let's go back and fix that,\nI needed to that on my PEM key.\n\n476\n00:23:55.262 --> 00:24:01.363\nSo what I'm doing here is I'm setting\nthat u=r, and when I do that,\n\n477\n00:24:01.363 --> 00:24:07.100\nnow there we go,\nnotice how my user has been overwritten.\n\n478\n00:24:07.100 --> 00:24:09.430\nAnd it shows just r dash dash, right?\n\n479\n00:24:09.430 --> 00:24:13.667\nThe w and the x, I didn't mention them,\nso they're considered unmentioned bits,\n\n480\n00:24:13.667 --> 00:24:15.830\nthey go away, and now it's reset.\n\n481\n00:24:15.830 --> 00:24:17.790\nOkay, what about everybody else?\n\n482\n00:24:17.790 --> 00:24:21.070\nWell, they actually get left alone, so if\nyou look at the others they've got left,\n\n483\n00:24:21.070 --> 00:24:24.020\nwhat I should have done was run\nthis a little bit different, and\n\n484\n00:24:24.020 --> 00:24:28.860\nsaid something like this,\nu equals r and then G O,\n\n485\n00:24:28.860 --> 00:24:34.900\nwhich would be group and\nother equals and then that's that.\n\n486\n00:24:34.900 --> 00:24:37.700\nRight?\nAnd when you do that now\n\n487\n00:24:37.700 --> 00:24:41.530\nthose get overwritten as well and\ntheir permissions get removed.\n\n488\n00:24:41.530 --> 00:24:45.199\nAnd so if we take a look at that,\nnow it's set the way that I want.\n\n489\n00:24:45.199 --> 00:24:49.747\nSo when Amazon or whoever says\nyou need to have re-access and\n\n490\n00:24:49.747 --> 00:24:56.280\nnobody else should have anything, you\nequals r comma, G-O equals nothing, right.\n\n491\n00:24:56.280 --> 00:25:00.060\nYou don't type a dash or anything,\nyou just leave it empty and that gets set.\n\n492\n00:25:00.060 --> 00:25:02.130\nSo pretty easy to modify\nthose permissions, but\n\n493\n00:25:02.130 --> 00:25:05.080\nwhat you'll find is as your working with\nthe file system, as you're working with\n\n494\n00:25:05.080 --> 00:25:09.110\nscripts and especially downloaded files,\nyou'll run into this a lot.\n\n495\n00:25:09.110 --> 00:25:13.070\nYou'll download a file, and it'll be\nowned by the wrong user, or you SUDUed\n\n496\n00:25:13.070 --> 00:25:17.530\nsomething- I get this a lot, where I might\nbe temporarily working in route shell.\n\n497\n00:25:17.530 --> 00:25:20.350\nRight, so I do a sudu/s.\n\n498\n00:25:20.350 --> 00:25:21.469\nWell, I'm running something.\n\n499\n00:25:21.469 --> 00:25:23.160\nMaybe I'm installing a service real quick.\n\n500\n00:25:23.160 --> 00:25:25.200\nSo I install the service,\nand I get it configured.\n\n501\n00:25:25.200 --> 00:25:28.510\nAnd then as part of the configuration I do\nsomething crazy, I'm trying to give you\n\n502\n00:25:28.510 --> 00:25:30.280\na real world example here of\n&gt;&gt; Yea.\n\n503\n00:25:30.280 --> 00:25:34.850\n&gt;&gt; I might copy something\nfrom slash bar slash log.\n\n504\n00:25:34.850 --> 00:25:38.100\nSo here I'll get boot dot log, right.\n\n505\n00:25:38.100 --> 00:25:41.830\nSo I'm getting this or\nactually I'll give you a great example.\n\n506\n00:25:41.830 --> 00:25:46.729\nI'm looking at d message and\nso I take something like the d\n\n507\n00:25:46.729 --> 00:25:51.116\nmessage output and\nI hype that to a file, right, so\n\n508\n00:25:51.116 --> 00:25:55.622\nI'll send it to home/dpzet/boot.log,\nright?\n\n509\n00:25:55.622 --> 00:25:56.720\nAnd so I run that.\n\n510\n00:25:56.720 --> 00:26:01.064\nNow I was sudo or in a super user shell\nwhile I did it, so then I exit out and\n\n511\n00:26:01.064 --> 00:26:03.400\nI'm in my home directory.\n\n512\n00:26:03.400 --> 00:26:06.310\nAnd I see that boot dot log\nfile sitting right there,\n\n513\n00:26:06.310 --> 00:26:07.770\nalright I'm ready to go at it.\n\n514\n00:26:07.770 --> 00:26:13.109\nBut if you look at it in a little more\ndetail you'll see that it is owned\n\n515\n00:26:13.109 --> 00:26:18.926\nby root and the group is root because I\nwas in a super user shell when I did it.\n\n516\n00:26:18.926 --> 00:26:21.977\nSo just the fact that I put it in\nmy home directory is not enough I\n\n517\n00:26:21.977 --> 00:26:25.679\nwould have read access because at least\neveryone has read on this file, but\n\n518\n00:26:25.679 --> 00:26:29.290\nI wouldn't be able to write to it,\nand I shouldn't be able to remove it.\n\n519\n00:26:29.290 --> 00:26:33.320\nSo if I try and delete boot.log,\nsee how it's right protected?\n\n520\n00:26:33.320 --> 00:26:37.570\nAnd if I say, yeah, do it anyway, well\nwhat it's doing here is it's trying to\n\n521\n00:26:37.570 --> 00:26:41.750\noverride it and because I own the folder,\nit's allowing me to override it just like\n\n522\n00:26:41.750 --> 00:26:44.630\nI would be allowed to change\nthe ownership of it too.\n\n523\n00:26:44.630 --> 00:26:46.230\nBut I got that right protected myself,\n\n524\n00:26:46.230 --> 00:26:50.300\nbecause I didn't have permissions\nto write to the file, so\n\n525\n00:26:50.300 --> 00:26:53.230\nthat's another example of how sometimes we\ncan mess these permissions up, and we have\n\n526\n00:26:53.230 --> 00:26:57.800\nto clean it up a little bit, so CHmode,\nand CH own, those are your friends.\n\n527\n00:26:57.800 --> 00:27:00.390\nThey help you to correct these\npermissions and get it set right.\n\n528\n00:27:01.390 --> 00:27:02.630\nAnd so that's, I think,\n\n529\n00:27:02.630 --> 00:27:05.480\na pretty good rundown of the scenarios\nwhere I've bumped into issues.\n\n530\n00:27:05.480 --> 00:27:08.400\n&gt;&gt; Well, Don, it can definitely seem\nlike Sanskrit when you see these\n\n531\n00:27:08.400 --> 00:27:11.550\nch commands for the first time and you're\nlike, all these U's and G's and O's and\n\n532\n00:27:11.550 --> 00:27:14.520\narrow and X and W, plus and\nminus and equals and this and that.\n\n533\n00:27:14.520 --> 00:27:18.550\nIt gets a little strange, but if you just\nknow what each one of those individual\n\n534\n00:27:18.550 --> 00:27:22.410\npieces mean, then you're gonna have a much\nbetter time with working with them.\n\n535\n00:27:22.410 --> 00:27:25.230\nDon, anything else that you want to add\nto the show before we call it a day?\n\n536\n00:27:25.230 --> 00:27:28.330\n&gt;&gt; You know, there was a question in\nthe chat room that I want to mention,\n\n537\n00:27:28.330 --> 00:27:31.009\nwhen I look at all pieces I explain\nwhat each of them were, and\n\n538\n00:27:31.009 --> 00:27:32.974\nI kind of ignored this\nlittle dot at the end.\n\n539\n00:27:32.974 --> 00:27:38.311\nThat technically, if we really want to\nbe official it means nothing [LAUGH] but\n\n540\n00:27:38.311 --> 00:27:41.470\nif it changes then it does mean something.\n\n541\n00:27:41.470 --> 00:27:45.940\nThat little dot is indicating whether\nthere are additional attributes attached\n\n542\n00:27:45.940 --> 00:27:49.530\nto the file and a lot of times we don't\ndeal with additional attributes but\n\n543\n00:27:49.530 --> 00:27:54.740\nwhere we can are with what are called\ncustom ACLs, or file ACLs, F-A-C-Ls,\n\n544\n00:27:54.740 --> 00:27:59.162\nwhich some people call FACLs and I hate\nthat name for some reason, but FACLs.\n\n545\n00:27:59.162 --> 00:28:02.190\nFile ACLs, where you can do\nsomething really detailed.\n\n546\n00:28:02.190 --> 00:28:06.220\nI can only have one user and\none group attached to this file.\n\n547\n00:28:06.220 --> 00:28:08.680\nWhat if I just want to give\nDaniel access to the file,\n\n548\n00:28:08.680 --> 00:28:09.820\nI don't want to give it to anyone else.\n\n549\n00:28:09.820 --> 00:28:13.500\nI don't want to create a group just for\nthat and bump other group memberships.\n\n550\n00:28:13.500 --> 00:28:15.100\nI wanna add a second user.\n\n551\n00:28:15.100 --> 00:28:15.920\nYou can't.\n\n552\n00:28:15.920 --> 00:28:19.190\nIn the traditional Unix permissions,\nin the POSIX permissions,\n\n553\n00:28:19.190 --> 00:28:22.540\nyou have one user, one group and\nthen everybody else.\n\n554\n00:28:22.540 --> 00:28:27.860\nWith file ACLs with FACLs, you can have\nmultiple users and multiple groups.\n\n555\n00:28:27.860 --> 00:28:29.400\nThey can have different permissions.\n\n556\n00:28:29.400 --> 00:28:33.339\nYou can do really fine-grained\nsecurity controls, right.\n\n557\n00:28:33.339 --> 00:28:34.620\nAnd they're very powerful.\n\n558\n00:28:34.620 --> 00:28:38.340\nIf you watch our becoming a Linux,\nI believe it's becoming a Linux system\n\n559\n00:28:38.340 --> 00:28:41.660\nadministrator show,\nI actually do the File ACLs.\n\n560\n00:28:41.660 --> 00:28:43.680\nI call it Advanced File Permissions.\n\n561\n00:28:43.680 --> 00:28:46.900\nAnd show how to do that so you can always\njump over to that show and catch it, but\n\n562\n00:28:46.900 --> 00:28:51.150\nif there's advanced permissions set like\nthat, that dot will change to a plus.\n\n563\n00:28:51.150 --> 00:28:53.256\nIf you see a little plus\nsign there at the end,\n\n564\n00:28:53.256 --> 00:28:57.375\nthat's the indicator that let's you know,\nthere's some other stuff on this file.\n\n565\n00:28:57.375 --> 00:29:00.467\nAnd when you go and\nlook at the file you can pull those up and\n\n566\n00:29:00.467 --> 00:29:02.800\nyou'll actually see those permissions.\n\n567\n00:29:02.800 --> 00:29:04.860\nI don't have any set on mine here so\nI can't show them, but\n\n568\n00:29:04.860 --> 00:29:08.100\nif you jump over to the System Admin show,\nwe go and configure them in there, and\n\n569\n00:29:08.100 --> 00:29:09.960\nyou can get a change to see that.\n\n570\n00:29:09.960 --> 00:29:14.810\nIf you really want to actually see it,\nwhen you do the LS command, if you add\n\n571\n00:29:14.810 --> 00:29:19.820\na dash at, the at symbol, that will\nactually show the advanced permissions and\n\n572\n00:29:19.820 --> 00:29:21.520\nyou'll be able to see those if they exist.\n\n573\n00:29:21.520 --> 00:29:23.120\nBut otherwise it'll just be\na dot like all my files here.\n\n574\n00:29:23.120 --> 00:29:27.020\n&gt;&gt; Wow, Don, well it definitely pays\nto know your ls command a little bit.\n\n575\n00:29:27.020 --> 00:29:28.290\nJust is, right?\n\n576\n00:29:28.290 --> 00:29:30.090\nAnd that does actually kinda ring true.\n\n577\n00:29:30.090 --> 00:29:32.130\nWe do need to be able to see that, look.\n\n578\n00:29:32.130 --> 00:29:34.605\nI'm having a problem accessing this\nfile because root is the owner.\n\n579\n00:29:34.605 --> 00:29:37.312\nI need to change ownership or\nit's in my directory or\n\n580\n00:29:37.312 --> 00:29:41.490\nI've given somebody else permissions\nover it, anything of that nature.\n\n581\n00:29:41.490 --> 00:29:46.400\nAnd knowing what those UG and\nO plus those RWX and the plus, minus and\n\n582\n00:29:46.400 --> 00:29:47.080\nequal sign are.\n\n583\n00:29:47.080 --> 00:29:51.370\nAll that comes together to help us be able\nto create the correct file permissions\n\n584\n00:29:51.370 --> 00:29:55.890\non each one of our files specifically when\nwe get into the scripting area of things.\n\n585\n00:29:55.890 --> 00:29:56.910\nWhy is this not running?\n\n586\n00:29:56.910 --> 00:29:58.337\nWell, you didn't put\nthe correct permissions on it.\n\n587\n00:29:58.337 --> 00:30:01.506\nAnd to this day,\nI still forget to do this stupid,\n\n588\n00:30:01.506 --> 00:30:04.680\nwho make this thing\nexecutable from time to time.\n\n589\n00:30:04.680 --> 00:30:07.360\nIt still bites me in the tail,\nevery now and then.\n\n590\n00:30:07.360 --> 00:30:10.932\nDon, thanks so much for dropping by today,\nand explaining file permissions,\n\n591\n00:30:10.932 --> 00:30:14.073\nI know it can be a bit of a bear\nespecially, if you're new to this, but I\n\n592\n00:30:14.073 --> 00:30:17.850\nthink you did a fantastic job of laying it\nout for us making it very understandable.\n\n593\n00:30:17.850 --> 00:30:20.474\nWith that being said,\nlooking at the clock, we are out of time.\n\n594\n00:30:20.474 --> 00:30:22.460\nWe do thank you for joining us today.\n\n595\n00:30:22.460 --> 00:30:25.595\nHope you've enjoyed this episode,\nbut time to sign off for IT PRO TV.\n\n596\n00:30:25.595 --> 00:30:27.362\nI've been your host Daniel Lowrie.\n\n597\n00:30:27.362 --> 00:30:28.397\n&gt;&gt; And I'm Don Pezet.\n\n598\n00:30:28.397 --> 00:30:29.560\n&gt;&gt; And we'll see you next time.\n\n599\n00:30:29.560 --> 00:30:37.932\n[MUSIC]\n\n600\n00:30:37.932 --> 00:30:40.120\n&gt;&gt; Thank you for watching IT Pro Tv.\n\n",
          "vimeoId": "235606502"
        },
        {
          "description": "In this episode, Don walks the viewers through the more popular filesystems available for Linux. He explains the pros and cons of EXT4, XFS and BTRFS to help the viewers select which filesystem is right for their environment.",
          "length": "1330",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-3-1-file_systems-092517-PGM.00_21_55_14.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-3-1-file_systems-092517-PGM.00_21_55_14.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-4-3-1-file_systems-092517-PGM.00_21_55_14.Still001-sm.jpg",
          "title": "File Systems",
          "transcript": "WEBVTT\n\n1\n00:00:00.105 --> 00:00:02.478\nWelcome to ITproTV,\nI'm your host Don Pezet.\n\n2\n00:00:02.478 --> 00:00:06.603\n&gt;&gt; [CROSSTALK]\n\n3\n00:00:06.603 --> 00:00:08.363\n[MUSIC]\n\n4\n00:00:08.363 --> 00:00:12.113\n&gt;&gt; You're watching ITpro TV.\n\n5\n00:00:12.113 --> 00:00:14.112\n&gt;&gt; All right, greetings everyone, and\n\n6\n00:00:14.112 --> 00:00:16.994\nwelcome back to another\nexciting episode of ITProTV.\n\n7\n00:00:16.994 --> 00:00:19.532\nI'm your host, Daniel Lowrie,\nand in today's episode,\n\n8\n00:00:19.532 --> 00:00:21.936\nwe're back with more in our\nLinux Command Line series.\n\n9\n00:00:21.936 --> 00:00:23.888\nAnd you'll never guess\nwho's joining us today,\n\n10\n00:00:23.888 --> 00:00:26.223\nit's the President of the United States,\nMr. Don Pezet.\n\n11\n00:00:26.223 --> 00:00:26.992\nDon, [LAUGH] welcome back.\n\n12\n00:00:26.992 --> 00:00:28.047\n&gt;&gt; [LAUGH]\n&gt;&gt; How's it going today?\n\n13\n00:00:28.047 --> 00:00:29.576\n[LAUGH]\n&gt;&gt; Well you know if we\n\n14\n00:00:29.576 --> 00:00:31.468\nmess up enough voting\nmachines it can happen.\n\n15\n00:00:31.468 --> 00:00:33.243\n&gt;&gt; There you go [LAUGH].\n&gt;&gt; [LAUGH] Speaking of messing with\n\n16\n00:00:33.243 --> 00:00:36.598\nthings, in the last few episodes we were\nlooking at our Shell environment, and\n\n17\n00:00:36.598 --> 00:00:38.315\nthings that can mess\nwith our Shell [LAUGH]\n\n18\n00:00:38.315 --> 00:00:38.874\n&gt;&gt; [LAUGH]\n\n19\n00:00:38.874 --> 00:00:39.690\n&gt;&gt; And really make our\n\n20\n00:00:39.690 --> 00:00:43.317\nexperience different, and so we learned\nabout environment variables, we learned\n\n21\n00:00:43.317 --> 00:00:46.753\nabout file permissions, and in this\nepisode I want to talk about file systems.\n\n22\n00:00:46.753 --> 00:00:49.733\nThat when we're interacting\nwith the Linux environment,\n\n23\n00:00:49.733 --> 00:00:52.903\nit's typically happening through\na file system of some sort.\n\n24\n00:00:52.903 --> 00:00:54.644\nAnd there's several different choices.\n\n25\n00:00:54.644 --> 00:00:58.033\nEach one can change\nthe behavior of our experience.\n\n26\n00:00:58.033 --> 00:01:01.150\nAnd so I wanna highlight the different\nfile systems that are available, and\n\n27\n00:01:01.150 --> 00:01:03.156\nreally what the difference\nis between each one.\n\n28\n00:01:03.156 --> 00:01:06.905\nJust so that we're aware, and that we\nknow what to expect when we're working\n\n29\n00:01:06.905 --> 00:01:09.798\non a system formatted with one\nfile system versus another.\n\n30\n00:01:09.798 --> 00:01:11.541\nSo that's what we've got lined\nup right here in this episode.\n\n31\n00:01:11.541 --> 00:01:12.942\n&gt;&gt; Well Don,\nsounds like a whole lot of fun.\n\n32\n00:01:12.942 --> 00:01:13.836\nSo let's get cracking.\n\n33\n00:01:13.836 --> 00:01:17.391\nI guess since you've posed the idea\nof looking at the differences\n\n34\n00:01:17.391 --> 00:01:21.073\nbetween the file systems,\na good place to start would probably be,\n\n35\n00:01:21.073 --> 00:01:24.420\nwhat file system am I running,\nand how we figure that out.\n\n36\n00:01:24.420 --> 00:01:27.330\n&gt;&gt; Yeah, so if you wanna know what file\nsystem you've already got on your disk,\n\n37\n00:01:27.330 --> 00:01:28.910\nthere's a number of different\ncommands that can do it.\n\n38\n00:01:28.910 --> 00:01:31.899\nBut probably the easiest one is\njust to look at your mount output.\n\n39\n00:01:31.899 --> 00:01:35.686\nWhen you type mount on your keyboard,\nit'll show everything that's mounted.\n\n40\n00:01:35.686 --> 00:01:37.838\nAnd when you look at\nhow it's been mounted,\n\n41\n00:01:37.838 --> 00:01:39.900\nyou'll see what the file system is.\n\n42\n00:01:39.900 --> 00:01:43.138\nSo if I look in here, and\nfind my NVME for example.\n\n43\n00:01:43.138 --> 00:01:47.959\nSo here's my main hard drive, I can\nsee that the file system type is XFS,\n\n44\n00:01:47.959 --> 00:01:50.582\nall right, so that's my file system.\n\n45\n00:01:50.582 --> 00:01:53.007\nBut if I look,\nI've got several partitions, and\n\n46\n00:01:53.007 --> 00:01:54.814\nsome of them might be formatted XFS.\n\n47\n00:01:54.814 --> 00:01:57.687\nOther ones might be formatted\nwith some other file system,\n\n48\n00:01:57.687 --> 00:01:59.070\ncuz you've got the choice.\n\n49\n00:01:59.070 --> 00:02:02.130\nYou can format things any number\nof different file system types.\n\n50\n00:02:02.130 --> 00:02:04.678\nSo, this is XFS.\n\n51\n00:02:04.678 --> 00:02:06.100\nWhat does that mean to me, right?\n\n52\n00:02:06.100 --> 00:02:10.741\nI might come in here and find EXT4,\nor BTRFS, or GFS, or ZFS, who knows,\n\n53\n00:02:10.741 --> 00:02:13.610\nany number of different file systems.\n\n54\n00:02:13.610 --> 00:02:17.990\nAnd at the end of the day, once it's\nmounted, I just browse into it, and\n\n55\n00:02:17.990 --> 00:02:20.210\naccess the disk, and what do I care?\n\n56\n00:02:20.210 --> 00:02:24.976\nBut there actually are some things we need\nto be aware of, that when you're working\n\n57\n00:02:24.976 --> 00:02:29.491\nwith different file systems, some\nsupport some features, and some don't.\n\n58\n00:02:29.491 --> 00:02:34.076\nFor example, often times you'll spot\nthings that are mounted with FUSE,\n\n59\n00:02:34.076 --> 00:02:34.815\nall right?\n\n60\n00:02:34.815 --> 00:02:36.280\nFUSE, F-U-S-E.\n\n61\n00:02:36.280 --> 00:02:41.590\nFUSE is actually a collection of\ndrivers for third party file systems.\n\n62\n00:02:41.590 --> 00:02:48.400\nThings like Microsoft's NTFS or\nApple's HFS+, or Google drive even.\n\n63\n00:02:48.400 --> 00:02:53.323\nAnd so you can mount this really weird\nfile systems inside of Linux, and\n\n64\n00:02:53.323 --> 00:02:54.564\naccess the data.\n\n65\n00:02:54.564 --> 00:02:56.674\nThe majority of times those are read-only.\n\n66\n00:02:56.674 --> 00:03:00.151\nBecause they're having to reverse\nengineer how to access the data, and\n\n67\n00:03:00.151 --> 00:03:02.546\nthey do the best they can,\nbut it's not perfect.\n\n68\n00:03:02.546 --> 00:03:05.045\nAnd that means that if they were\nto allow you to write to it,\n\n69\n00:03:05.045 --> 00:03:07.802\nyou could potentially corrupt\nyour data and lose information.\n\n70\n00:03:07.802 --> 00:03:10.252\nSo FUSE will typically\nmount things read-only.\n\n71\n00:03:10.252 --> 00:03:11.165\nNow, it's not always the case.\n\n72\n00:03:11.165 --> 00:03:14.048\nIf you look here mine, the connection's\nhere are mounted read/write.\n\n73\n00:03:14.048 --> 00:03:16.523\nSo, there are times that\nthey're mounted read/write, but\n\n74\n00:03:16.523 --> 00:03:17.864\nyou need to be careful with that.\n\n75\n00:03:17.864 --> 00:03:19.753\nThat's a great example, right there,\n\n76\n00:03:19.753 --> 00:03:22.670\nof something that would impact\nmy use of a file system.\n\n77\n00:03:22.670 --> 00:03:25.520\nIf it's mounted read-only,\nI can't write to it.\n\n78\n00:03:25.520 --> 00:03:29.770\nAnd if it's a third-party file system,\nlike Windows NTFS, I probably don't want\n\n79\n00:03:29.770 --> 00:03:33.290\nto write to it, because the risk\nof corruption is too great.\n\n80\n00:03:33.290 --> 00:03:36.199\nVersus XFS,\nwhich is a fully supported file system.\n\n81\n00:03:36.199 --> 00:03:38.367\nIt's natively supported\nby my operating system.\n\n82\n00:03:38.367 --> 00:03:40.625\nIt was developed inside of\nthe Open Source community.\n\n83\n00:03:40.625 --> 00:03:42.431\nI can read and write to that all day long.\n\n84\n00:03:42.431 --> 00:03:43.920\nIt's incredibly stable.\n\n85\n00:03:43.920 --> 00:03:45.693\nGreat file system to use, all right?\n\n86\n00:03:45.693 --> 00:03:48.004\nSo, that's kind of one of\nthe things that we need to know is.\n\n87\n00:03:48.004 --> 00:03:51.153\nWe need to understand which\nfile systems we're using so\n\n88\n00:03:51.153 --> 00:03:55.380\nthat we know what we can and can't do,\nor what we should and shouldn't do.\n\n89\n00:03:55.380 --> 00:03:57.160\nJust because I could write,\n\n90\n00:03:57.160 --> 00:04:01.120\ndoesn't mean that I should write to that\nfile system if I wanna maintain integrity.\n\n91\n00:04:01.120 --> 00:04:04.879\n&gt;&gt; Now, Don, you kind of brought up a good\npoint there about the different file\n\n92\n00:04:04.879 --> 00:04:09.051\nsystems, and this one does this, and that\none is supported natively by my operating\n\n93\n00:04:09.051 --> 00:04:10.912\nsystem, and things of that nature.\n\n94\n00:04:10.912 --> 00:04:16.176\nDoes that mean there is,\nnot necessarily a better file system,\n\n95\n00:04:16.176 --> 00:04:19.887\nbut just better for\nmy use kind of a scenario?\n\n96\n00:04:19.887 --> 00:04:21.296\n&gt;&gt; [LAUGH] Yeah.\nWe could start a whole file\n\n97\n00:04:21.296 --> 00:04:23.749\nsystem religious war,\nif we wanted, on this.\n\n98\n00:04:23.749 --> 00:04:25.561\n&gt;&gt; [LAUGH]\n&gt;&gt; There's a lot of people that\n\n99\n00:04:25.561 --> 00:04:29.472\nhave a favorite, and they stick by it,\nand they don't wanna deviate, but\n\n100\n00:04:29.472 --> 00:04:31.976\nthe reality is most file\nsystems work the same.\n\n101\n00:04:31.976 --> 00:04:33.699\n[LAUGH] You got a table with a file name,\nand\n\n102\n00:04:33.699 --> 00:04:37.310\nit points to data on the drive somewhere,\nyou go, and you get it, and you're happy.\n\n103\n00:04:37.310 --> 00:04:42.430\nSo most end users really couldn't careless\nwhich file system they were using.\n\n104\n00:04:42.430 --> 00:04:45.113\nBut we need to understand which\nfile system we're using so\n\n105\n00:04:45.113 --> 00:04:48.780\nthat we know the limitations that we've\ngot, and we might find that there is one\n\n106\n00:04:48.780 --> 00:04:51.428\nthat better suits our needs and\nthat's our preference.\n\n107\n00:04:51.428 --> 00:04:54.893\nBut I encourage you not to kind of fall\ninto that trap where you stick with one\n\n108\n00:04:54.893 --> 00:04:57.588\nfile system,\nbecause as you start working with servers,\n\n109\n00:04:57.588 --> 00:05:00.841\nyou may find ones that are already\nset up for a particular file system.\n\n110\n00:05:00.841 --> 00:05:02.009\nIt's pretty hard to change.\n\n111\n00:05:02.009 --> 00:05:04.558\nSo a lot of times you just have\nto make yourself exist within\n\n112\n00:05:04.558 --> 00:05:06.859\nthe boundaries of that file system and\ndeal with it.\n\n113\n00:05:06.859 --> 00:05:09.682\n&gt;&gt; I kind of feel like we were\nshopping for laptops, and\n\n114\n00:05:09.682 --> 00:05:13.092\nyou're thinking, do I want this one,\nor do I want that one?\n\n115\n00:05:13.092 --> 00:05:14.578\nNeither of them are really a bad choice.\n\n116\n00:05:14.578 --> 00:05:16.998\nBut one of them fit my scenario\na whole lot better, so\n\n117\n00:05:16.998 --> 00:05:20.628\nI need to be able to see, it does this,\nand if I didn't know that it did that\n\n118\n00:05:20.628 --> 00:05:23.818\nI wouldn't know that that's the best\nthing for my environment, and\n\n119\n00:05:23.818 --> 00:05:27.620\nthat's kind of what we're doing with these\ndifferent file systems that we have.\n\n120\n00:05:27.620 --> 00:05:31.820\nWe have the EXT, and the old riser FS,\nand this, and that, and the other.\n\n121\n00:05:31.820 --> 00:05:35.406\nCan you walk us through some of the common\nfile systems that we might run into,\n\n122\n00:05:35.406 --> 00:05:36.910\nlimitations, and abilities?\n\n123\n00:05:36.910 --> 00:05:39.134\n&gt;&gt; All right,\nlet's start with the most popular.\n\n124\n00:05:39.134 --> 00:05:41.031\nThe most popular is EXT.\n\n125\n00:05:41.031 --> 00:05:43.416\nEXT was developed in the Linux world.\n\n126\n00:05:43.416 --> 00:05:45.941\nIt was developed for Linux, so\nit's supported by every single Linux\n\n127\n00:05:45.941 --> 00:05:49.102\ndistribution that's out there, unless\nsomebody has purposefully messed with it.\n\n128\n00:05:49.102 --> 00:05:49.872\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n129\n00:05:49.872 --> 00:05:52.024\n&gt;&gt; And so EXT has been around a long time,\n\n130\n00:05:52.024 --> 00:05:56.128\nit's very robust, very stable, and\nas a result, it's the default for\n\n131\n00:05:56.128 --> 00:05:58.165\na lot of different distributions.\n\n132\n00:05:58.165 --> 00:06:00.895\nBut because it's old,\nit's been updated a number of times.\n\n133\n00:06:00.895 --> 00:06:03.003\nSo there's more than one version of EXT.\n\n134\n00:06:03.003 --> 00:06:07.456\nEXT, it actually stands for the Extended\nFile System that they took older file\n\n135\n00:06:07.456 --> 00:06:11.639\nsystem technology and extended that\nfunctionality out, and right now,\n\n136\n00:06:11.639 --> 00:06:15.550\nthe oldest version that most\ndistros support is EXT2.\n\n137\n00:06:15.550 --> 00:06:17.317\nMost people don't run EXT2.\n\n138\n00:06:17.317 --> 00:06:20.541\nUsually either EXT3 or EXT4.\n\n139\n00:06:20.541 --> 00:06:22.630\nEXT3 was a big deal.\n\n140\n00:06:22.630 --> 00:06:24.240\nI remember when it first came out,\n\n141\n00:06:24.240 --> 00:06:26.550\nbecause it was the first\none to support journaling.\n\n142\n00:06:26.550 --> 00:06:29.749\nIn the olden days,\nwhen I started writing to a file,\n\n143\n00:06:29.749 --> 00:06:34.494\nlet's add a one meg file, and I made\na change in some program, and I hit save.\n\n144\n00:06:34.494 --> 00:06:37.543\nWell, I'm actually working with it in RAM,\nand so then,\n\n145\n00:06:37.543 --> 00:06:41.653\nit's got to write it to the disk, and\nit would start to overwrite the file, and\n\n146\n00:06:41.653 --> 00:06:45.479\nif we got halfway through overwriting\nthe file, and then we lost power.\n\n147\n00:06:45.479 --> 00:06:47.804\nWhen I power the computer back on,\nthat file was corrupt,\n\n148\n00:06:47.804 --> 00:06:50.230\ncuz it was overwriting the file\nthat I was just working with.\n\n149\n00:06:50.230 --> 00:06:53.860\nI had a partial write to it, and\nnow my data's corrupt, that's bad.\n\n150\n00:06:53.860 --> 00:06:55.166\nBut what journaling does it says,\n\n151\n00:06:55.166 --> 00:06:58.720\nfrom now on when you go to write to\na file, you don't write to the file.\n\n152\n00:06:58.720 --> 00:07:00.766\nYou write to a separate spot on the disk.\n\n153\n00:07:00.766 --> 00:07:04.481\nYou write to a journal, which is\nreally just a separate place, and so\n\n154\n00:07:04.481 --> 00:07:08.964\nyou write to a separate file, and when\nit's a 100% written to that other file,\n\n155\n00:07:08.964 --> 00:07:12.254\nthen we can swap that data with\nthe data of the original file.\n\n156\n00:07:12.254 --> 00:07:16.331\nAnd that way if you're writing and you're\nhalfway through the write, you lose power,\n\n157\n00:07:16.331 --> 00:07:18.260\nonly the journal is corrupt.\n\n158\n00:07:18.260 --> 00:07:21.179\nSo when you power the computer back on,\nit just flushes the journal.\n\n159\n00:07:21.179 --> 00:07:24.689\nWe throw all the junk out, and then\nyour original file is still intact, and\n\n160\n00:07:24.689 --> 00:07:27.827\nsure you lost your changes, but\nat least your data is not corrupt.\n\n161\n00:07:27.827 --> 00:07:29.990\nAnd that's what journaling is,\nit's very, very valuable.\n\n162\n00:07:29.990 --> 00:07:32.075\nYou want to have a journaling file system.\n\n163\n00:07:32.075 --> 00:07:35.670\nAll the modern file systems support\njournaling one way or another.\n\n164\n00:07:35.670 --> 00:07:38.727\nSo EXT3 was the first\nversion of EXT that did that.\n\n165\n00:07:38.727 --> 00:07:42.687\nSo that's why EXT3 is usually what\nyou'll see that's out there, and\n\n166\n00:07:42.687 --> 00:07:44.671\nEXT4 is an improvement upon that.\n\n167\n00:07:44.671 --> 00:07:45.431\nThey've expanded it.\n\n168\n00:07:45.431 --> 00:07:46.276\n&gt;&gt; It journals twice.\n\n169\n00:07:46.276 --> 00:07:48.558\n[LAUGH]\n&gt;&gt; [LAUGH] It still journals once, but\n\n170\n00:07:48.558 --> 00:07:51.858\nit does better incorporate it\ninto the file system itself,\n\n171\n00:07:51.858 --> 00:07:53.577\nwhereas EXT3 was an add-on.\n\n172\n00:07:53.577 --> 00:07:58.037\nYou could actually take EXT2, and\nyou could add journaling to it.\n\n173\n00:07:58.037 --> 00:07:59.641\nWhich made it ext3.\n\n174\n00:07:59.641 --> 00:08:00.698\nThat's how you upgraded it.\n\n175\n00:08:00.698 --> 00:08:03.192\nReally, ext3 and ext2 are the same thing,\n\n176\n00:08:03.192 --> 00:08:06.810\nexcept ext3 is just ext2 with\nthe journaling turned on.\n\n177\n00:08:06.810 --> 00:08:08.873\nExt4 actually has the journaling\nintegrated into it.\n\n178\n00:08:08.873 --> 00:08:12.238\nSo it does a better job, and it can\nhandle a larger file systems and so on.\n\n179\n00:08:12.238 --> 00:08:17.000\nSo that's kind of what ext3 and 4 are.\n\n180\n00:08:17.000 --> 00:08:22.578\nSo with those file systems,\nI'll be inclined to pick ext3 or\n\n181\n00:08:22.578 --> 00:08:25.920\next4 if I'm trying to get\nthe most compatibility,\n\n182\n00:08:25.920 --> 00:08:28.600\nif I wanna know that this disc\ncan be accessed from anywhere.\n\n183\n00:08:28.600 --> 00:08:32.452\nIf I have a USB drive, I'll usually format\nit ext4 cuz I know I can move it to\n\n184\n00:08:32.452 --> 00:08:35.774\ndifferent systems, and\next will be read, and it'll be happy.\n\n185\n00:08:35.774 --> 00:08:38.328\nAnd that's a good,\nstable file system to use.\n\n186\n00:08:38.328 --> 00:08:41.379\nSo we do see that one as a default for\na lot of distros.\n\n187\n00:08:41.379 --> 00:08:46.255\nIf you install Ubuntu today, or if you\ninstall Debian, they both default to ext4.\n\n188\n00:08:46.255 --> 00:08:50.693\nYes, ext4, [LAUGH] I was thinking 3 for\na second, but they both switched to 4.\n\n189\n00:08:50.693 --> 00:08:53.510\nAnd so that's kind of a file system\nthat you'll encounter a lot.\n\n190\n00:08:53.510 --> 00:08:58.720\n&gt;&gt; Don, was there a reason that ext3 still\nmight have been an option in your mind?\n\n191\n00:08:58.720 --> 00:09:00.280\n&gt;&gt; Yeah, ext4 is newer.\n\n192\n00:09:00.280 --> 00:09:04.140\nAnd what you'll find is that people\ntend to be very cautious with a file\n\n193\n00:09:04.140 --> 00:09:05.360\nsystem, right?\n\n194\n00:09:05.360 --> 00:09:07.970\nWhat happens if your\nfile system messes up?\n\n195\n00:09:07.970 --> 00:09:09.742\nYou lose data.\nDo you wanna lose data?\n\n196\n00:09:09.742 --> 00:09:10.644\nI don't.\n\n197\n00:09:10.644 --> 00:09:11.149\n&gt;&gt; Not a big fan.\n\n198\n00:09:11.149 --> 00:09:12.063\n&gt;&gt; Yeah.\n&gt;&gt; [LAUGH]\n\n199\n00:09:12.063 --> 00:09:13.576\n&gt;&gt; Most people don't want that,\n\n200\n00:09:13.576 --> 00:09:14.868\nso vendors are cautious.\n\n201\n00:09:14.868 --> 00:09:16.320\nThey don't wanna jump on the latest and\n\n202\n00:09:16.320 --> 00:09:20.540\ngreatest right away, because they\nwanna make sure the data is safe.\n\n203\n00:09:20.540 --> 00:09:24.270\nAnd you need to store large quantities of\ndata for long periods of time before you\n\n204\n00:09:24.270 --> 00:09:26.800\ncan identify any potential\ndata loss scenarios.\n\n205\n00:09:26.800 --> 00:09:30.570\nAnd so that's why we see some people\nhaven't quite gone to 4 just yet.\n\n206\n00:09:30.570 --> 00:09:32.023\nBut most of the vendors, I believe, have.\n\n207\n00:09:32.023 --> 00:09:34.401\nAnd that's just kinda\nhow file systems are.\n\n208\n00:09:34.401 --> 00:09:36.345\nIt takes time to build out traction and\n\n209\n00:09:36.345 --> 00:09:38.940\nthen jump into some new\nversion of a file system.\n\n210\n00:09:38.940 --> 00:09:41.820\n&gt;&gt; Now, Don,\nwhat if I was on an older version of ext?\n\n211\n00:09:41.820 --> 00:09:42.932\nMaybe I'm still running ext2.\n\n212\n00:09:42.932 --> 00:09:46.080\nI've got a machine sitting\naround from God knows when.\n\n213\n00:09:46.080 --> 00:09:49.771\nI've decided, you know what,\nthis ext3 thing, or maybe even ext4, well,\n\n214\n00:09:49.771 --> 00:09:51.278\nit seems like the bee's knees.\n\n215\n00:09:51.278 --> 00:09:52.910\nI wanna go from this to that.\n\n216\n00:09:52.910 --> 00:09:54.810\nIs there a way I can do\nthat without reformatting?\n\n217\n00:09:54.810 --> 00:09:57.480\n&gt;&gt; Well,\nyou can upgrade from ext2 to ext3,\n\n218\n00:09:57.480 --> 00:09:59.820\ncuz you just add Journal Export, right?\n\n219\n00:09:59.820 --> 00:10:01.480\nThere's the tune2fs command\nthat let's you do that.\n\n220\n00:10:01.480 --> 00:10:03.841\nThere's not a way to upgrade to ext4,\nthough,\n\n221\n00:10:03.841 --> 00:10:06.843\nbecause the journaling's\nincorporated in the file system.\n\n222\n00:10:06.843 --> 00:10:08.450\nYou actually have to reformat.\n\n223\n00:10:08.450 --> 00:10:10.560\nAnd really, with all the other file\nsystems we're gonna talk about here\n\n224\n00:10:10.560 --> 00:10:13.585\nin this episode, there's no way to\njust quickly switch between them.\n\n225\n00:10:13.585 --> 00:10:14.990\n&gt;&gt; Mm.\n&gt;&gt; You back up your data.\n\n226\n00:10:14.990 --> 00:10:16.840\nYou format the disk with\nthe new file system.\n\n227\n00:10:16.840 --> 00:10:18.520\nAnd then you restore your data to it.\n\n228\n00:10:18.520 --> 00:10:22.827\nSo that's why I say, don't put yourself in\na situation where you just have one file\n\n229\n00:10:22.827 --> 00:10:25.760\nsystem you wanna work with,\nbecause it's hard to change.\n\n230\n00:10:25.760 --> 00:10:29.265\nSo if you go and start supporting a new\nserver that's already got some other file\n\n231\n00:10:29.265 --> 00:10:32.700\nsystem, if it meets your requirements,\nleave it at that other file system.\n\n232\n00:10:32.700 --> 00:10:35.940\nAnd then just work with it and\nunderstand the boundaries that are there.\n\n233\n00:10:35.940 --> 00:10:37.566\n&gt;&gt; All right, Don, we also mentioned XFS.\n\n234\n00:10:37.566 --> 00:10:39.989\nApparently, you like it a little bit.\n\n235\n00:10:39.989 --> 00:10:40.628\nYou're using it.\n\n236\n00:10:40.628 --> 00:10:42.435\nCould you explain a little\nbit about that one?\n\n237\n00:10:42.435 --> 00:10:45.959\n&gt;&gt; All right, XFS,\nI'm a Red Hat guy, right?\n\n238\n00:10:45.959 --> 00:10:48.829\nRed Hat's my favorite distro cuz I\nwork in business environments and\n\n239\n00:10:48.829 --> 00:10:51.890\nI like to have support, and\nso Red Hat's what I choose.\n\n240\n00:10:51.890 --> 00:10:54.160\nXFS is the default file system for\nRed Hat,\n\n241\n00:10:54.160 --> 00:10:57.897\nwhich means it's also the default\nfile system for CentOS and Fedora.\n\n242\n00:10:57.897 --> 00:11:00.640\nSo they all are kinda tied together.\n\n243\n00:11:00.640 --> 00:11:05.113\nSo [COUGH] what XFS does is, it's\nthe extensible file system, I'm sorry,\n\n244\n00:11:05.113 --> 00:11:06.675\nthe extents file system.\n\n245\n00:11:06.675 --> 00:11:07.359\nI'm getting the right name.\n\n246\n00:11:07.359 --> 00:11:11.610\nAnd it stores files\na different way than ext does.\n\n247\n00:11:11.610 --> 00:11:13.170\nSo it's a little bit more optimized.\n\n248\n00:11:13.170 --> 00:11:15.120\nIt has better indexing\nto locate data faster.\n\n249\n00:11:15.120 --> 00:11:17.345\nIt's designed for performance.\n\n250\n00:11:17.345 --> 00:11:21.860\nIt's not as old as ext, so not as\nfield-tested and as widely supported.\n\n251\n00:11:21.860 --> 00:11:25.622\nBut it's extremely stable, and\nthat's the key thing with Red Hat.\n\n252\n00:11:25.622 --> 00:11:29.233\nBecause they offer commercial support for\nthe file system,\n\n253\n00:11:29.233 --> 00:11:33.677\nthey don't want to have something\nthat could have potential data loss.\n\n254\n00:11:33.677 --> 00:11:37.185\nThey wanna have a nice, stable file\nsystem that is feature-rich, but\n\n255\n00:11:37.185 --> 00:11:39.970\nnot so feature-rich that it\nintroduces a lot of risk.\n\n256\n00:11:39.970 --> 00:11:44.510\nXFS supports things like snapshots, so I\ncan quickly back up a partition if I want.\n\n257\n00:11:44.510 --> 00:11:47.011\nIt does support growing a partition,\nso I can make it bigger.\n\n258\n00:11:47.011 --> 00:11:50.270\nIt does have problems with shrinking.\n\n259\n00:11:50.270 --> 00:11:51.880\nA lot of file systems don't shrink.\n\n260\n00:11:51.880 --> 00:11:52.445\nXFS is one of those.\n\n261\n00:11:52.445 --> 00:11:56.910\nSo if I wanna shrink a partition, I've\nactually gotta back it up, wipe it, reset.\n\n262\n00:11:56.910 --> 00:11:59.760\nSo it's kind of a pain there,\nso it's not perfect.\n\n263\n00:11:59.760 --> 00:12:03.100\nBut if you want stability and\nperformance, XFS is a winner.\n\n264\n00:12:03.100 --> 00:12:05.878\nAnd so yeah, you'll notice, most of the\ndiscs that I use on my own laptop here.\n\n265\n00:12:05.878 --> 00:12:09.140\nI'll pull up the Disks utility.\n\n266\n00:12:09.140 --> 00:12:11.524\nIf we take a look at most of my disks,\n\n267\n00:12:11.524 --> 00:12:15.505\nlike my one-terabyte disk here\nis entirely formated XFS.\n\n268\n00:12:15.505 --> 00:12:20.671\nAnd then I've got my home\ndirectory also formatted XFS.\n\n269\n00:12:20.671 --> 00:12:24.311\nThat's what I use because I'm\nconcerned about stability, right?\n\n270\n00:12:24.311 --> 00:12:26.838\nI'm not necessarily concerned\nabout crazy features.\n\n271\n00:12:26.838 --> 00:12:29.670\nA lot of the features have to\ndeal with things like RAID.\n\n272\n00:12:29.670 --> 00:12:33.280\nIf I wanna do a RAID 1 mirror,\nwell, I'm in a laptop.\n\n273\n00:12:33.280 --> 00:12:36.910\nI don't have the benefit of multiple\ndrives to be able to do a RAID 1 mirror or\n\n274\n00:12:36.910 --> 00:12:38.140\nRAID 5 or whatever.\n\n275\n00:12:38.140 --> 00:12:39.310\nSo I don't care about those features.\n\n276\n00:12:39.310 --> 00:12:40.460\nThose don't help me.\n\n277\n00:12:40.460 --> 00:12:43.840\nMoving to a file system that provided\nthose features would not help me.\n\n278\n00:12:43.840 --> 00:12:46.964\nSo I stick with one that's focused\nmore on stability than features.\n\n279\n00:12:46.964 --> 00:12:49.710\nAnd that's why I've chosen XFS.\n\n280\n00:12:49.710 --> 00:12:53.959\n&gt;&gt; Now, Don, the latest and greatest,\nthe new hotness, as the kids say,\n\n281\n00:12:53.959 --> 00:12:57.510\nwhen it comes to file systems\ninside of Linux, is the Btrfs,\n\n282\n00:12:57.510 --> 00:12:59.758\nif I'm not mistaken on that acronym.\n\n283\n00:12:59.758 --> 00:13:00.459\n&gt;&gt; Yeah.\n\n284\n00:13:00.459 --> 00:13:02.019\n&gt;&gt; Well,\nthen what do you know about that guy?\n\n285\n00:13:02.019 --> 00:13:05.384\n&gt;&gt; All right, if you do your Googling on\nfile systems, you will find countless\n\n286\n00:13:05.384 --> 00:13:08.290\nthreads about, Btrfs is the greatest\nfile system on the planet.\n\n287\n00:13:08.290 --> 00:13:11.865\nAnd I could see where you\ncould come up with that.\n\n288\n00:13:11.865 --> 00:13:14.687\nBtrfs is super feature-rich.\n\n289\n00:13:14.687 --> 00:13:16.755\nNow, there's some arguments\nover what it stands for.\n\n290\n00:13:16.755 --> 00:13:19.935\nThe name actually stands for\nthe B-tree file system.\n\n291\n00:13:19.935 --> 00:13:22.998\nAnd B-tree is a term that\ndescribes how an index is filed so\n\n292\n00:13:22.998 --> 00:13:24.631\nthat it can find information.\n\n293\n00:13:24.631 --> 00:13:28.980\nBut you'll find, a lot of people\ncall it the better file system or\n\n294\n00:13:28.980 --> 00:13:31.877\nthe butter file system cuz it's smooth.\n\n295\n00:13:31.877 --> 00:13:34.927\nIt's a fancy file system, and\na lot of people feel that it is the way of\n\n296\n00:13:34.927 --> 00:13:38.977\nthe future, that three years from now,\nif I record a show like this,\n\n297\n00:13:38.977 --> 00:13:42.187\nthat Btrfs will be the file\nsystem everybody's running, okay?\n\n298\n00:13:42.187 --> 00:13:45.940\nBut Btrfs actually has a number\nof data loss scenarios.\n\n299\n00:13:45.940 --> 00:13:47.665\nIts RAID functionality is not good.\n\n300\n00:13:47.665 --> 00:13:53.910\nSo if you're doing RAID 1 or RAID 5 inside\nof Btrfs, there are a number of scenarios.\n\n301\n00:13:53.910 --> 00:13:57.025\nYou can just go and pull the bug\nlist up on the Btrfs project site.\n\n302\n00:13:57.025 --> 00:14:00.440\nAnd you'll find a number of scenarios\nwhere you can actually lose data.\n\n303\n00:14:00.440 --> 00:14:04.640\nThat's not something that I\nlike to see in a file system.\n\n304\n00:14:04.640 --> 00:14:05.160\n&gt;&gt; That's [FOREIGN].\n\n305\n00:14:05.160 --> 00:14:05.775\n&gt;&gt; Yeah.\n\n306\n00:14:05.775 --> 00:14:07.065\n&gt;&gt; [LAUGH]\n&gt;&gt; So on a laptop,\n\n307\n00:14:07.065 --> 00:14:10.254\nwhere I'm not using RAID, where I'm\njust running the core Btrfs stuff,\n\n308\n00:14:10.254 --> 00:14:12.360\nthat might be great, and\nso it works out fine.\n\n309\n00:14:12.360 --> 00:14:15.340\nSo a lot of home users will use\nBtrfs cuz they think it's awesome.\n\n310\n00:14:15.340 --> 00:14:18.430\nBut in the business world,\nBtrfs is actually kinda being shunned.\n\n311\n00:14:18.430 --> 00:14:21.610\nAnd let me just show you an example,\nRed Hat.\n\n312\n00:14:21.610 --> 00:14:24.030\nSo here's the Red Hat\nsupported file systems page,\n\n313\n00:14:24.030 --> 00:14:26.210\nwhere they list all the file\nsystems they support.\n\n314\n00:14:26.210 --> 00:14:31.184\nAnd in Red Hat Enterprise Linux 7.3 and\nearlier, they had support for Btrfs.\n\n315\n00:14:31.184 --> 00:14:32.903\nBut it was flagged as preview, right,\n\n316\n00:14:32.903 --> 00:14:36.290\nbecause they were trying to test it\nto make sure it was stable enough.\n\n317\n00:14:36.290 --> 00:14:42.250\nWell, starting in 7.4, Red Hat has\nofficially dropped support for Btrfs.\n\n318\n00:14:42.250 --> 00:14:44.610\nNot even a preview anymore,\nit's just gone.\n\n319\n00:14:44.610 --> 00:14:46.790\nSo when you come and\nlook at their supported file systems,\n\n320\n00:14:46.790 --> 00:14:49.698\nit's not even in the list,\nso it's just not there.\n\n321\n00:14:49.698 --> 00:14:51.740\nYou've got ext2, 3, and 4.\n\n322\n00:14:51.740 --> 00:14:54.210\nYou've got XFS that I've\nalready talked about.\n\n323\n00:14:54.210 --> 00:14:56.460\nYou got GFS,\nwhich is the Gluster File System.\n\n324\n00:14:56.460 --> 00:14:59.165\nThat's designed for server clusters,\nnot for workstations.\n\n325\n00:14:59.165 --> 00:15:03.120\nBut those file systems,\nthose are the ones they support.\n\n326\n00:15:03.120 --> 00:15:07.342\nThose are the ones where they can\nguarantee data resiliency, all right?\n\n327\n00:15:07.342 --> 00:15:10.645\nBtrfs is off, so\nit's a very powerful file system.\n\n328\n00:15:10.645 --> 00:15:12.710\nBtrfs has a ton of bells and whistles.\n\n329\n00:15:12.710 --> 00:15:13.435\nIt can do really cool stuff.\n\n330\n00:15:13.435 --> 00:15:15.160\nIt can create logical volumes.\n\n331\n00:15:15.160 --> 00:15:16.930\nYou can grow and shrink them.\n\n332\n00:15:16.930 --> 00:15:18.580\nYou can clone volumes.\n\n333\n00:15:18.580 --> 00:15:20.230\nYou can create multiple RAID arrays.\n\n334\n00:15:20.230 --> 00:15:23.500\nYou can do all sorts of really\ncool stuff right inside of Btrfs.\n\n335\n00:15:23.500 --> 00:15:27.550\nVery powerful, but it just needs more time\nto mature and become more data stable.\n\n336\n00:15:27.550 --> 00:15:30.560\nAnd once that happens,\nI do believe that Btrfs is the future.\n\n337\n00:15:30.560 --> 00:15:33.286\nI think we will all be running\nBtrfs five years from now,\n\n338\n00:15:33.286 --> 00:15:35.152\nmaybe not two years from now, right?\n\n339\n00:15:35.152 --> 00:15:36.800\nIt's just gonna take time for\nthat to evolve, but\n\n340\n00:15:36.800 --> 00:15:38.520\nit is another file\nsystem that's out there.\n\n341\n00:15:38.520 --> 00:15:40.350\n&gt;&gt; Well, Don,\nwhat if I like living on the edge, man?\n\n342\n00:15:40.350 --> 00:15:45.040\nI play the ponies, and\nI download unstable [LAUGH] file systems.\n\n343\n00:15:45.040 --> 00:15:46.010\nCan I still do that?\n\n344\n00:15:46.010 --> 00:15:49.767\n&gt;&gt; Yeah, I mean, if you installed Ubuntu\ntoday, or if you installed Debian today,\n\n345\n00:15:49.767 --> 00:15:52.064\nin the installer,\nyou can choose Btrfs, right?\n\n346\n00:15:52.064 --> 00:15:55.731\nIf you install CentOS, they've actually\nkept the driver in on theirs, and\n\n347\n00:15:55.731 --> 00:15:56.834\nyou can choose Btrfs.\n\n348\n00:15:56.834 --> 00:15:58.801\nBut if you install\nRed Hat Enterprise Linux,\n\n349\n00:15:58.801 --> 00:16:00.417\nit's not even an option in the list.\n\n350\n00:16:00.417 --> 00:16:04.619\nAnd if you add it yourself, cuz you\ncan do that, if you add it yourself,\n\n351\n00:16:04.619 --> 00:16:06.390\nRed Hat won't support you.\n\n352\n00:16:06.390 --> 00:16:08.700\nIf you call them on the phone and\nyou've got some problems on your disks,\n\n353\n00:16:08.700 --> 00:16:11.839\nthey'll look and they'll say, well you're\nrunning VTRFS, what do you expect?\n\n354\n00:16:11.839 --> 00:16:13.038\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n355\n00:16:13.038 --> 00:16:14.013\n&gt;&gt; And so that's what you get.\n\n356\n00:16:14.013 --> 00:16:14.823\n&gt;&gt; Bye [LAUGH].\n\n357\n00:16:14.823 --> 00:16:18.400\n&gt;&gt; But that makes me think about\nsomething else, speaking about support.\n\n358\n00:16:18.400 --> 00:16:20.808\nWhen it comes to working\nin these file systems,\n\n359\n00:16:20.808 --> 00:16:22.924\nthey all support a standard feature set.\n\n360\n00:16:22.924 --> 00:16:26.693\nThings like file permissions, right, and\nthe path directory structure and all that.\n\n361\n00:16:26.693 --> 00:16:30.303\nThey all support that, but\nthere are some file systems that don't.\n\n362\n00:16:30.303 --> 00:16:35.740\nSo for example, if I format a disc as FAT,\nthe old Microsoft file allocation table.\n\n363\n00:16:35.740 --> 00:16:39.460\nEvery Linux distribution supports FAT\nbecause we use it on SD cards and stuff.\n\n364\n00:16:39.460 --> 00:16:43.730\nBut if you format a file system as FAT,\nit doesn't support file permissions.\n\n365\n00:16:43.730 --> 00:16:45.920\nSo you can't set permissions\non files anywhere.\n\n366\n00:16:45.920 --> 00:16:49.150\nYou can't set disk quotas on folders,\nyou lose that support.\n\n367\n00:16:49.150 --> 00:16:50.600\nAnd it may be important, it may not.\n\n368\n00:16:50.600 --> 00:16:53.260\nOn an SD card, it's not really\nimportant so, what do you care?\n\n369\n00:16:53.260 --> 00:16:56.200\nBut on your main hard drive, you do care.\n\n370\n00:16:56.200 --> 00:17:00.490\nBut where I find I'm impacted the most\nare by the maximum file sizes.\n\n371\n00:17:00.490 --> 00:17:05.910\nAnd so this page that I'm on here, let me\ngo back to this, what Red Hat is doing,\n\n372\n00:17:05.910 --> 00:17:09.320\nis they're listing the certified and\n\n373\n00:17:09.320 --> 00:17:14.330\nmaximum file size and\nfile system size, okay?\n\n374\n00:17:14.330 --> 00:17:17.560\nThe file system means if\nI create a partition,\n\n375\n00:17:17.560 --> 00:17:23.120\nwhat's the biggest partition I can support\nwhile using a particular file system?\n\n376\n00:17:23.120 --> 00:17:26.100\nAnd if we look at this,\nlet me try and zoom in a bit here.\n\n377\n00:17:26.100 --> 00:17:29.991\nBut we've got EXT2, 3, and 4,\nthe top two, and XFS at the bottom.\n\n378\n00:17:29.991 --> 00:17:34.746\nSo if I look over here at the file system,\nI can see that EXT2.\n\n379\n00:17:34.746 --> 00:17:39.080\nYou can do a 16TB partition with EXT2 or\n3.\n\n380\n00:17:39.080 --> 00:17:43.820\nWell, if I wanted more than 16TB,\nI can't do that with EXT2 and 3.\n\n381\n00:17:43.820 --> 00:17:49.380\nI'd have to go up to EXT4\nwhere I could get 50TB.\n\n382\n00:17:49.380 --> 00:17:53.180\nNow notice the little bracketed\nnumber there, that 1EB right?\n\n383\n00:17:53.180 --> 00:17:57.725\nThat means that theoretically,\nEXT4 can go all the way to 1EB for\n\n384\n00:17:57.725 --> 00:18:01.312\na single partition, but\nRed Hat hasn't tested it.\n\n385\n00:18:01.312 --> 00:18:05.142\nThey haven't created a 1TB array and\nrun it through thorough testing,\n\n386\n00:18:05.142 --> 00:18:07.729\nso they're saying we'll\nsupport up to 50TB.\n\n387\n00:18:07.729 --> 00:18:11.416\nAnd I encourage you guys, even if you\ndon't run Red Hat, if you run Ubuntu or\n\n388\n00:18:11.416 --> 00:18:12.440\nwhatever.\n\n389\n00:18:12.440 --> 00:18:15.250\nFollow Red Hat's list here\nbecause they've tested and\n\n390\n00:18:15.250 --> 00:18:18.920\ncertified that there's no data\nloss up to this particular size.\n\n391\n00:18:18.920 --> 00:18:21.480\nAnd if you look down to XFS,\nit can go, well,\n\n392\n00:18:21.480 --> 00:18:26.300\nthey've tested to 500TB and\nall the way up to 16EB.\n\n393\n00:18:26.300 --> 00:18:29.720\nReally huge amount of\ndata there to be tested.\n\n394\n00:18:29.720 --> 00:18:35.150\nNow back when BTRFS was\nsupported by Red Hat,\n\n395\n00:18:35.150 --> 00:18:38.770\nthey didn't have a certified number at\nall, they just had the theoretical and\n\n396\n00:18:38.770 --> 00:18:40.630\nthe theoretical in it was 8EB.\n\n397\n00:18:40.630 --> 00:18:45.620\nSo very comparable to what we get\nwith XFS, but on the file size,\n\n398\n00:18:45.620 --> 00:18:48.170\nthat's where we're most\nlikely to run into an issue.\n\n399\n00:18:48.170 --> 00:18:53.517\nBecause when we're creating files,\nit's not often that I have a 16TB drive.\n\n400\n00:18:53.517 --> 00:18:58.624\nBut I might have database that has\na file that's over 2TB in size.\n\n401\n00:18:58.624 --> 00:19:02.913\nAnd if I've got EXT2 or 3,\n2TB is the maximum size for a file.\n\n402\n00:19:02.913 --> 00:19:04.860\nThat database is gonna have some problems.\n\n403\n00:19:04.860 --> 00:19:07.460\nAll right, so if you're running\ninto an issue with files,\n\n404\n00:19:07.460 --> 00:19:09.190\nyou've might of exceeded that file size.\n\n405\n00:19:09.190 --> 00:19:12.800\nOn some of the older file formats\nlike FAT, this limit is like 2 gigs.\n\n406\n00:19:12.800 --> 00:19:16.130\nIt's really, really low and\nwe bump into that problem all the time.\n\n407\n00:19:16.130 --> 00:19:19.360\nBut with these file systems,\nthey support much larger sets of data.\n\n408\n00:19:19.360 --> 00:19:25.490\nIf you look at XFS, an individual file\ncan be 500TB or theoretically, 8EB.\n\n409\n00:19:25.490 --> 00:19:29.940\nSame thing with BTRFS, they go up to 8EB\non a file, that's a huge amount of data.\n\n410\n00:19:29.940 --> 00:19:32.950\nBut if you find that you're\ntrying to copy a file and\n\n411\n00:19:32.950 --> 00:19:37.362\nit's telling you there's not enough\ndisk space and you look and there is.\n\n412\n00:19:37.362 --> 00:19:40.738\nIt might be that the file itself\nis actually bigger than the limit\n\n413\n00:19:40.738 --> 00:19:41.871\nof that file system.\n\n414\n00:19:41.871 --> 00:19:42.712\nAnd that happens, right?\n\n415\n00:19:42.712 --> 00:19:44.321\nThat's the kind of limitation,\n\n416\n00:19:44.321 --> 00:19:47.142\nthat's why we need to understand\nwhat the file system is.\n\n417\n00:19:47.142 --> 00:19:49.478\nWe don't necessarily need\nto change the file system,\n\n418\n00:19:49.478 --> 00:19:51.407\nwe just need to understand\nthe file system and\n\n419\n00:19:51.407 --> 00:19:54.840\nsay all right, I'm trying to do something\nthis file system doesn't support.\n\n420\n00:19:54.840 --> 00:19:56.550\nSo maybe I need to break that file up.\n\n421\n00:19:56.550 --> 00:20:00.664\nOr maybe I do need to format it and\nput this data on a different file system.\n\n422\n00:20:00.664 --> 00:20:03.257\nSo you can certainly go through that, but\n\n423\n00:20:03.257 --> 00:20:07.568\nI didn't want to really delve into\nthe actual administrative side.\n\n424\n00:20:07.568 --> 00:20:10.499\n[INAUDIBLE] More of an understanding\nof that limitation.\n\n425\n00:20:10.499 --> 00:20:14.461\nBecause we're remoted into a cloud server\nwhere the drives are already formatted or\n\n426\n00:20:14.461 --> 00:20:17.809\nwhatever, we need to understand those\nlimitations that we can operate\n\n427\n00:20:17.809 --> 00:20:18.612\ninside of that.\n\n428\n00:20:18.612 --> 00:20:21.973\nAnd as you work with a command line, you\nwill occasionally bump into these limits.\n\n429\n00:20:21.973 --> 00:20:25.400\n&gt;&gt; All right, well Don, that's a really\ngreat compare and contrast when it comes\n\n430\n00:20:25.400 --> 00:20:28.213\nto the different file systems that\nwe might find in our systems and\n\n431\n00:20:28.213 --> 00:20:30.024\nwhy I might wanna choose one or the other.\n\n432\n00:20:30.024 --> 00:20:30.618\nAnd heck,\n\n433\n00:20:30.618 --> 00:20:34.715\nhow to find out what one I'm actually\nrunning if I do wanna make that leap.\n\n434\n00:20:34.715 --> 00:20:37.715\nOr if I'm running into problems\nwhen trying to do something,\n\n435\n00:20:37.715 --> 00:20:40.031\nmaybe moving a file that's\na little too large.\n\n436\n00:20:40.031 --> 00:20:42.543\nDon, anything else that you want to add\nto the show before we call it a day?\n\n437\n00:20:42.543 --> 00:20:45.581\n&gt;&gt; Yeah, if you're really interested\nin learning about this and\n\n438\n00:20:45.581 --> 00:20:48.732\nyou want to learn more about how to\nactually format a file system or\n\n439\n00:20:48.732 --> 00:20:51.043\nhow to work with some of\nthe advanced features.\n\n440\n00:20:51.043 --> 00:20:54.503\nCheck out our Linux Administrator show\nbecause we actually go through and\n\n441\n00:20:54.503 --> 00:20:55.530\ndo this stuff there.\n\n442\n00:20:55.530 --> 00:20:58.225\nHere in the command line show, I just\nwanted to focus on what those differences\n\n443\n00:20:58.225 --> 00:21:01.470\nwere, but we do cover it in other shows,\nso be sure to check it out there.\n\n444\n00:21:01.470 --> 00:21:06.290\nAnd then as far as picking a final system,\nI said I like XFS, but that's just me.\n\n445\n00:21:06.290 --> 00:21:07.520\nAnd who the heck am I, right?\n\n446\n00:21:07.520 --> 00:21:12.455\nSo if you If you like BTRFS,\nstick with it, if you like EXT4, great,\n\n447\n00:21:12.455 --> 00:21:13.625\nstick with it.\n\n448\n00:21:13.625 --> 00:21:17.715\nOnly switch if there's actually some\nparticular tangible benefit and\n\n449\n00:21:17.715 --> 00:21:19.685\nin my case,\nthe tangible benefit is support.\n\n450\n00:21:19.685 --> 00:21:22.555\nI know the Red Hat has tested it,\nand it makes me happy, right?\n\n451\n00:21:22.555 --> 00:21:25.205\nIf you don't care about that,\nthen that doesn't make you happy and\n\n452\n00:21:25.205 --> 00:21:26.115\nthere's no reason to go with it.\n\n453\n00:21:26.115 --> 00:21:30.273\nSo find the one that you like,\nbut don't pigeon hole yourself,\n\n454\n00:21:30.273 --> 00:21:31.900\nI still learn about\nthe other file systems,\n\n455\n00:21:31.900 --> 00:21:34.950\ncuz I know I need to know them in case\nI encounter systems that I have that.\n\n456\n00:21:34.950 --> 00:21:36.370\nAnd I don't necessarily\nwanna do that change.\n\n457\n00:21:36.370 --> 00:21:37.870\n&gt;&gt; All right, well, thanks so\nmuch for your time and\n\n458\n00:21:37.870 --> 00:21:40.760\neffort on this Don,\nwe definitely appreciate it.\n\n459\n00:21:40.760 --> 00:21:44.121\nAnd we appreciate you good folks out\nthere for watching but unfortunately,\n\n460\n00:21:44.121 --> 00:21:46.075\nit's that time for\nus again to call it a day.\n\n461\n00:21:46.075 --> 00:21:47.932\n&gt;&gt; [LAUGH]\n&gt;&gt; Thanks for watching, join us back for\n\n462\n00:21:47.932 --> 00:21:49.710\nmore Linux command line coming up.\n\n463\n00:21:49.710 --> 00:21:51.630\nAs for this show goes, time to sign off.\n\n464\n00:21:51.630 --> 00:21:53.875\nFor ITProTV, I've been your host,\nDaniel Lowrie.\n\n465\n00:21:53.875 --> 00:21:54.535\n&gt;&gt; And I'm Don Pezet.\n\n466\n00:21:54.535 --> 00:21:56.968\n&gt;&gt; And we'll see you next time.\n\n467\n00:21:56.968 --> 00:22:02.131\n[MUSIC]\n\n468\n00:22:02.131 --> 00:22:06.398\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "235606203"
        }
      ],
      "title": "Shell Environments"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Don explains how software is managed in Debian based systems (Ubuntu, Mint, etc). He demonstrates how to install, update and remove software using the apt and apt-get utilities.",
          "length": "2000",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-5-1-1-debian_package_management-092917-PGM.00_33_51_27.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-5-1-1-debian_package_management-092917-PGM.00_33_51_27.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-5-1-1-debian_package_management-092917-PGM.00_33_51_27.Still001-sm.jpg",
          "title": "Debian Package Management",
          "transcript": "WEBVTT\n\n1\n00:00:00.240 --> 00:00:04.082\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:04.082 --> 00:00:10.610\n[CROSSTALK]\n&gt;&gt; You're watching ITProTV.\n\n3\n00:00:12.210 --> 00:00:14.045\n&gt;&gt; All right, greetings everyone and\n\n4\n00:00:14.045 --> 00:00:16.687\nwelcome back to another\ngreat episode of ITProTV.\n\n5\n00:00:16.687 --> 00:00:20.230\nI am your host Daniel Lowrie and in\ntoday's episode, we're back with more in\n\n6\n00:00:20.230 --> 00:00:24.210\nour Linux command line series and\nit's been such a great time so far.\n\n7\n00:00:24.210 --> 00:00:27.230\nJoining us back in the studio again,\nhe likes it so much, Mr. Don Pezet.\n\n8\n00:00:27.230 --> 00:00:28.395\nHe's here with us again today.\n\n9\n00:00:28.395 --> 00:00:29.390\nDon, how's it going today?\n\n10\n00:00:29.390 --> 00:00:32.635\n&gt;&gt; Well you just can't keep me away\nfrom that Linux command line, so\n\n11\n00:00:32.635 --> 00:00:34.445\n[LAUGH] we are back at it today.\n\n12\n00:00:34.445 --> 00:00:37.330\nIn this episode, we're gonna be\ntaking a look at package management\n\n13\n00:00:37.330 --> 00:00:39.850\nwhich is a fancy way of\nsaying installing software.\n\n14\n00:00:39.850 --> 00:00:40.458\nAnd-\n&gt;&gt; [LAUGH]\n\n15\n00:00:40.458 --> 00:00:42.062\n&gt;&gt; So, we're gonna take a look at\n\n16\n00:00:42.062 --> 00:00:45.911\nthe Debian operating system, or\nthe Debian variants that are out there.\n\n17\n00:00:45.911 --> 00:00:47.448\n&gt;&gt; Mm.\n&gt;&gt; And get a chance to see how we can\n\n18\n00:00:47.448 --> 00:00:50.720\ninstall software on them, how we can work\nwith it, how we can remove software.\n\n19\n00:00:50.720 --> 00:00:53.450\nAnd the various ways that we\nget software packages up and\n\n20\n00:00:53.450 --> 00:00:55.070\nrunning from the command line.\n\n21\n00:00:55.070 --> 00:00:56.892\n&gt;&gt; All right, Don.\nWell let's go ahead and,\n\n22\n00:00:56.892 --> 00:01:01.130\nwithout further ado,\nlet's jump into Debian package management.\n\n23\n00:01:01.130 --> 00:01:03.761\nObviously, when we say to\nbe in package management,\n\n24\n00:01:03.761 --> 00:01:07.512\nthat means that this is some sort\nof to be in type systems, correct?\n\n25\n00:01:07.512 --> 00:01:10.695\n&gt;&gt; Yes, yeah, and\nit used to be back in the day when half of\n\n26\n00:01:10.695 --> 00:01:13.346\nthe viewers [INAUDIBLE]\nsay that's awesome.\n\n27\n00:01:13.346 --> 00:01:14.880\nI run Debian.\nI love it, right?\n\n28\n00:01:14.880 --> 00:01:19.380\nBut today, actually,\nnot many people run straight up Debian.\n\n29\n00:01:19.380 --> 00:01:22.840\nBut they do run some of the variants\nthat come from it, right?\n\n30\n00:01:22.840 --> 00:01:28.080\nUbuntu, one of the most popular Linux\ndistros out there is a fork of Debian.\n\n31\n00:01:28.080 --> 00:01:33.300\nSo that they take Debian, the Deb fork of\nit and then they turn that into Ubuntu.\n\n32\n00:01:33.300 --> 00:01:36.158\nIf you're on Linux Mint,\nLinux Mint is a fork of Ubuntu.\n\n33\n00:01:36.158 --> 00:01:38.490\nWhich in turn is a fork of Debian.\n\n34\n00:01:38.490 --> 00:01:42.398\nSo they all kind of have Debian deep\ndown under their deep dark souls.\n\n35\n00:01:42.398 --> 00:01:45.139\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] And that means, fortunately,\n\n36\n00:01:45.139 --> 00:01:48.040\nthe way we manage packages\non them is the same.\n\n37\n00:01:48.040 --> 00:01:52.760\nSo if you're running Debian,\nLinux Mint, Ubuntu, Kali Linux,\n\n38\n00:01:52.760 --> 00:01:56.320\na number of the other variants that are\nout there, they all use the same package\n\n39\n00:01:56.320 --> 00:01:58.290\nmanager, and the stuff we're gonna\nsee right here in this episode.\n\n40\n00:01:58.290 --> 00:02:00.400\nSo while it's titled\nDebian Package Management,\n\n41\n00:02:00.400 --> 00:02:02.510\nit really applies to a lot\nmore distros than that.\n\n42\n00:02:02.510 --> 00:02:07.060\nNow if you're running Red Hat or\nFedora or CentOS.\n\n43\n00:02:07.060 --> 00:02:07.956\nThey're all Red Hat based.\n\n44\n00:02:07.956 --> 00:02:09.950\nThey have a different package manager.\n\n45\n00:02:09.950 --> 00:02:13.304\nSo when you go out on the Internet and\nyou go to look for software,\n\n46\n00:02:13.304 --> 00:02:16.929\nyou might find where software is\npackaged for Debian based systems.\n\n47\n00:02:16.929 --> 00:02:20.640\nOr it's packaged for Red Hat based systems\nor better, maybe it's packaged for both.\n\n48\n00:02:20.640 --> 00:02:22.700\nBut that's not always the case.\n\n49\n00:02:22.700 --> 00:02:27.115\nNow, I think you'll find that\nmost software is packaged for\n\n50\n00:02:27.115 --> 00:02:29.910\nDebian because of Ubuntu,\nbecause of its popularity.\n\n51\n00:02:29.910 --> 00:02:33.159\nSo you're more likely to find that\nthan you are the Red Hat's side so\n\n52\n00:02:33.159 --> 00:02:35.667\nif you're in this camp,\nthe camp for this episode,\n\n53\n00:02:35.667 --> 00:02:38.578\nyou're in luck because most\npeople are gonna build for you.\n\n54\n00:02:38.578 --> 00:02:41.639\nAnd that package, let's talk about\nwhy that's important, right?\n\n55\n00:02:41.639 --> 00:02:44.740\nBecause the package itself\ndoes something important.\n\n56\n00:02:44.740 --> 00:02:47.700\nWe don't technically need\npackages to install software.\n\n57\n00:02:47.700 --> 00:02:49.068\nWe just need source code, right?\n\n58\n00:02:49.068 --> 00:02:52.602\nA developer can release the source code,\nwe could download it, and\n\n59\n00:02:52.602 --> 00:02:54.220\nwe could compile it and run it.\n\n60\n00:02:54.220 --> 00:02:56.250\nAnd we'll see how to do\nthat in another episode.\n\n61\n00:02:56.250 --> 00:02:57.739\nBut we can do that on Red Hat or Debian.\n\n62\n00:02:57.739 --> 00:02:59.140\nWe wouldn't care what distro we were on.\n\n63\n00:02:59.140 --> 00:03:01.129\nWe could compile the source code.\n\n64\n00:03:01.129 --> 00:03:03.655\nThe problem is, first off,\nit's pain in the butt.\n\n65\n00:03:03.655 --> 00:03:04.927\n&gt;&gt; [LAUGH] Yeah.\n&gt;&gt; So there's that,\n\n66\n00:03:04.927 --> 00:03:06.530\nthere's not a lot of fun.\n\n67\n00:03:06.530 --> 00:03:09.722\nThe second thing is software\nis a lot of pieces, right?\n\n68\n00:03:09.722 --> 00:03:11.715\nThere's manual pages\nthat go in one directory.\n\n69\n00:03:11.715 --> 00:03:13.485\nThere's binaries that go\nin another directory.\n\n70\n00:03:13.485 --> 00:03:15.740\nThere's libraries that\ngo in a third directory.\n\n71\n00:03:15.740 --> 00:03:17.697\nAnd config files that go who knows where.\n\n72\n00:03:17.697 --> 00:03:23.340\nMaybe your home directory, maybe /etc,\nthings go in /var, it's a mess, right?\n\n73\n00:03:23.340 --> 00:03:26.220\nAnd if you know the software intimately\nthen you know where to copy those files\n\n74\n00:03:26.220 --> 00:03:27.400\nand that's great.\n\n75\n00:03:27.400 --> 00:03:28.717\nBut most of us don't.\n\n76\n00:03:28.717 --> 00:03:30.584\nMost of us don't know\nall the little bits and\n\n77\n00:03:30.584 --> 00:03:32.670\npieces that go along with\nthe piece of software.\n\n78\n00:03:32.670 --> 00:03:36.960\nSo when you download a package,\nthe package is actually two things in one.\n\n79\n00:03:36.960 --> 00:03:38.660\nOne, it's an archive.\n\n80\n00:03:38.660 --> 00:03:42.176\nIt's a collection of all\nthe files you need in one file.\n\n81\n00:03:42.176 --> 00:03:45.072\nSo we just downloaded one file instead\nof a thousand and that's convenient.\n\n82\n00:03:45.072 --> 00:03:50.394\nAnd then two, it's got metadata inside\nof it that describes what the name of\n\n83\n00:03:50.394 --> 00:03:56.147\nthe software is, what version the software\nis, where all those files should go.\n\n84\n00:03:56.147 --> 00:03:58.746\nAnd other security policy information\nthat's necessary to get that\n\n85\n00:03:58.746 --> 00:03:59.865\nsoftware working.\n\n86\n00:03:59.865 --> 00:04:05.580\nAll of that is in there along with\nthis neat magical word, dependencies.\n\n87\n00:04:05.580 --> 00:04:06.466\n&gt;&gt; Uh-huh-huh.\n\n88\n00:04:06.466 --> 00:04:08.610\n&gt;&gt; Right?\nWhen you download and install software,\n\n89\n00:04:08.610 --> 00:04:12.480\nit normally depends on other libraries\nthat they'd expect you to already have\n\n90\n00:04:12.480 --> 00:04:13.420\ninstalled.\n\n91\n00:04:13.420 --> 00:04:15.110\nAnd you may not have them installed.\n\n92\n00:04:15.110 --> 00:04:17.800\nSo it's got a dependency\nlist in that package\n\n93\n00:04:17.800 --> 00:04:19.850\nto help you figure out what you need.\n\n94\n00:04:19.850 --> 00:04:22.500\nAll of that stuck in one convenient file.\n\n95\n00:04:22.500 --> 00:04:25.280\nAnd that's what makes a package manager so\nimportant.\n\n96\n00:04:25.280 --> 00:04:29.260\nIt used to be a nightmare to\ninstall software in Linux.\n\n97\n00:04:29.260 --> 00:04:31.425\nIt isn't anymore, really for\nthe last ten years.\n\n98\n00:04:31.425 --> 00:04:35.940\nIt's been pretty convenient and doing it\nfrom the command line which kinda sounds\n\n99\n00:04:35.940 --> 00:04:39.410\nhard, you'll see it's actually pretty easy\ntoo to get that software installed and\n\n100\n00:04:39.410 --> 00:04:40.220\nget it up and running.\n\n101\n00:04:40.220 --> 00:04:43.560\n&gt;&gt; Now, Don, do we have to worry about\nthings like architectures as well because,\n\n102\n00:04:43.560 --> 00:04:45.650\nwell, once we get into\nthe source installing that,\n\n103\n00:04:45.650 --> 00:04:47.170\nwe do have to take that into account.\n\n104\n00:04:47.170 --> 00:04:50.720\nThat's been the history of Linux when\ngetting software installed, correct?\n\n105\n00:04:50.720 --> 00:04:53.840\n&gt;&gt; Yeah, and sometimes you do\nhave to worry about that, right?\n\n106\n00:04:53.840 --> 00:04:55.710\nIt kind of depends on developer, right?\n\n107\n00:04:55.710 --> 00:04:59.490\nSo I mentioned that a package\ncontains a bunch of files, right?\n\n108\n00:04:59.490 --> 00:05:03.790\nAnd when you download it,\nthat package might contain files for\n\n109\n00:05:03.790 --> 00:05:08.420\npeople with Intel CPUs like a 32-bit,\nan x86 processor.\n\n110\n00:05:08.420 --> 00:05:15.119\nOr it might contain binaries for a 64-bit\nCPU, like AMD 64, the Intel 64 bits.\n\n111\n00:05:15.119 --> 00:05:18.260\nIt might contain software ARM processor,\nright?\n\n112\n00:05:18.260 --> 00:05:19.587\nOr it might contain all of them.\n\n113\n00:05:19.587 --> 00:05:21.380\nThey might all be rolled\ninto one package value.\n\n114\n00:05:21.380 --> 00:05:24.534\nIt makes the package bigger, but it makes\nit easier on us cuz we don't have to worry\n\n115\n00:05:24.534 --> 00:05:26.514\nabout which one we get when\nwe download it, right?\n\n116\n00:05:26.514 --> 00:05:30.372\nLet me show you an example, so\nI'm gonna use this software called Webmin.\n\n117\n00:05:30.372 --> 00:05:32.978\nOn a server,\nwe don't normally have a GUI, right?\n\n118\n00:05:32.978 --> 00:05:34.682\nWe just have a command line and\nthat's it and\n\n119\n00:05:34.682 --> 00:05:36.955\nworking with the command line\ncan be annoying sometimes.\n\n120\n00:05:36.955 --> 00:05:39.099\nSo I'm saying that here we are-\n&gt;&gt; [LAUGH] Yeah.\n\n121\n00:05:39.099 --> 00:05:39.756\n&gt;&gt; Command line series.\n\n122\n00:05:39.756 --> 00:05:40.689\n&gt;&gt; The Linux command line series.\n\n123\n00:05:40.689 --> 00:05:42.527\n[LAUGH]\n&gt;&gt; But we can install Webmin and\n\n124\n00:05:42.527 --> 00:05:46.555\nit gives us a web-based user interface for\nbeing able to interact with the server and\n\n125\n00:05:46.555 --> 00:05:49.100\nsupport is pretty convenient, right?\n\n126\n00:05:49.100 --> 00:05:51.850\nIt's not installed by default\nwith any Linux distros.\n\n127\n00:05:51.850 --> 00:05:54.090\nSo if I want it,\nI've got to install it myself.\n\n128\n00:05:54.090 --> 00:05:57.330\nAnd when I go to their web page,\nI'm just on webmin.com.\n\n129\n00:05:57.330 --> 00:05:59.632\nI could see a couple\nof links over here and\n\n130\n00:05:59.632 --> 00:06:02.759\nthey've got RPM which is\nthe Red Hat Package Manager.\n\n131\n00:06:02.759 --> 00:06:07.450\nThat's what I would use for Red Hat,\nFedora and CentOS and Suse.\n\n132\n00:06:07.450 --> 00:06:12.630\nAnd then I've got the Debian package\nwhich would be what I run for Debian,\n\n133\n00:06:12.630 --> 00:06:15.560\nUbuntu and Linux Mint and their like.\n\n134\n00:06:15.560 --> 00:06:17.080\nThere's also a TAR file.\n\n135\n00:06:17.080 --> 00:06:18.470\nThat's gonna just be the source files.\n\n136\n00:06:18.470 --> 00:06:19.890\n&gt;&gt; Mm.\n&gt;&gt; And that's what I could use for\n\n137\n00:06:19.890 --> 00:06:21.400\nanybody else's not listed.\n\n138\n00:06:21.400 --> 00:06:24.860\nI can just use that one and\ncompile and go from there, right?\n\n139\n00:06:24.860 --> 00:06:27.170\nBut if I want to be in,\nthis is the file that I want.\n\n140\n00:06:27.170 --> 00:06:32.991\nNow, let me copy that link real quick and\nI'm gonna paste it up here, there, whoops.\n\n141\n00:06:32.991 --> 00:06:35.360\nI'm gonna try and paste it up there.\n\n142\n00:06:35.360 --> 00:06:38.380\nAnd let's take a quick look at that,\nright?\n\n143\n00:06:38.380 --> 00:06:41.393\nAnd so if you look at the URL,\nhere's the package name right here.\n\n144\n00:06:41.393 --> 00:06:47.025\nIt's webmin_1.850_all.deb.\n\n145\n00:06:47.025 --> 00:06:48.970\nAll right, so what does that name mean?\n\n146\n00:06:48.970 --> 00:06:52.240\nPackages generally follow\na standard naming convention.\n\n147\n00:06:52.240 --> 00:06:54.560\nThe first part is the name\nof the software, so\n\n148\n00:06:54.560 --> 00:06:56.221\nthe software is called Webmin.\n\n149\n00:06:56.221 --> 00:06:57.195\nThat's what its name is.\n\n150\n00:06:57.195 --> 00:06:58.156\nVery exciting, right?\n\n151\n00:06:58.156 --> 00:07:00.156\nSo if you're downloading others off here,\nI'll have a different name.\n\n152\n00:07:00.156 --> 00:07:02.500\n&gt;&gt; [INAUDIBLE] [LAUGH]\n&gt;&gt; And\n\n153\n00:07:02.500 --> 00:07:07.920\nthen this is an underscore which let's it\nknow there's a separation, and then 1.850.\n\n154\n00:07:07.920 --> 00:07:09.602\nThat's the version of the software.\n\n155\n00:07:09.602 --> 00:07:11.987\nIf you're running 1.71 then that's old.\n\n156\n00:07:11.987 --> 00:07:13.481\n1.85, that's new, right?\n\n157\n00:07:13.481 --> 00:07:15.160\nSo that tells me the version.\n\n158\n00:07:15.160 --> 00:07:19.820\nAnd then another underscore which tells me\nthere's a separation and then all, right?\n\n159\n00:07:19.820 --> 00:07:22.630\nThat all is telling you\nabout the architecture.\n\n160\n00:07:22.630 --> 00:07:27.780\nIf it said x86 or i686,\nis what a lot of them are doing now.\n\n161\n00:07:27.780 --> 00:07:30.020\nThat means it's a 32-bit package.\n\n162\n00:07:30.020 --> 00:07:35.020\nIf it says x86-64, it's a 64-bit package.\n\n163\n00:07:35.020 --> 00:07:37.900\nOr sometimes they'll say\nAMD64 cuz technically AMD is\n\n164\n00:07:37.900 --> 00:07:40.300\nthe one that created our\ncurrent 64-bit standard.\n\n165\n00:07:40.300 --> 00:07:44.090\nYou might see where it says SPARC\nif you're running on a Sun or\n\n166\n00:07:44.090 --> 00:07:47.523\nOracle SPARC station,\nthere's SPARC based server.\n\n167\n00:07:47.523 --> 00:07:52.246\nIt might say PowerPC or\nPPC if it's built for, well, PowerPC.\n\n168\n00:07:52.246 --> 00:07:56.071\nIt might say all like this which means\nit's got more than one architecture or\n\n169\n00:07:56.071 --> 00:07:57.087\n[INAUDIBLE] into it Or\n\n170\n00:07:57.087 --> 00:08:00.575\nit could be that the software\ndoesn't care about the architecture.\n\n171\n00:08:00.575 --> 00:08:02.401\nIf the software is just\na collection of webpages,\n\n172\n00:08:02.401 --> 00:08:04.060\nit doesn't matter what processor you have.\n\n173\n00:08:04.060 --> 00:08:04.660\nIt could be any of them.\n\n174\n00:08:04.660 --> 00:08:06.130\nIt doesn't matter, those are webpages.\n\n175\n00:08:06.130 --> 00:08:10.650\nAnd so it may say noarch, N-O-A-R-C-H,\nwhich means no architecture.\n\n176\n00:08:10.650 --> 00:08:12.350\nIt doesn't care what architecture.\n\n177\n00:08:12.350 --> 00:08:15.510\nUsually when it says all,\nit's got more than one build inside of it.\n\n178\n00:08:15.510 --> 00:08:17.668\nWhen it no R, it just has one build and\n\n179\n00:08:17.668 --> 00:08:21.373\nthat one build doesn't care\nabout the architecture, right?\n\n180\n00:08:21.373 --> 00:08:27.869\nAnd then .deb, back in the olden days, the\nDebian packages actually ended in .pkg.\n\n181\n00:08:27.869 --> 00:08:30.983\nBut there's a ton of different software\napplications out there that use that pkg\n\n182\n00:08:30.983 --> 00:08:31.498\nextension.\n\n183\n00:08:31.498 --> 00:08:34.629\nSo several years ago\nthey switched it to .deb.\n\n184\n00:08:34.629 --> 00:08:38.091\nSo when you see dot deb, that lets you\nknow that this is a Debian package.\n\n185\n00:08:38.091 --> 00:08:42.062\nIt is not just for Debian, we can use this\nfor Ubuntu, and end for the other ones.\n\n186\n00:08:42.062 --> 00:08:45.594\nSo, that's the package, and\nI can download that and\n\n187\n00:08:45.594 --> 00:08:50.082\nget it installed using the built-in\ntools that are part of Debian.\n\n188\n00:08:50.082 --> 00:08:54.729\nAnd that's just one example, like Webmin,\nif you go and download other things, so\n\n189\n00:08:54.729 --> 00:08:58.143\nfor example, if I wanted to\ndownload Google chrome, right?\n\n190\n00:08:58.143 --> 00:09:03.478\nIf I go to google.com/chrome and I go to\ndownload chrome, when I go to download it,\n\n191\n00:09:03.478 --> 00:09:08.604\nit see's that I'm running Linux, but\nit doesn't know beyond that what I want.\n\n192\n00:09:08.604 --> 00:09:10.133\nAnd so here it's given me a choice.\n\n193\n00:09:10.133 --> 00:09:13.573\nDo I want to download a 64-bit deb for\nDebian, Ubuntu, or\n\n194\n00:09:13.573 --> 00:09:17.086\ndo I want to download a 64-bit rpm for\nFedora and openSUSE.\n\n195\n00:09:17.086 --> 00:09:18.082\nAnd it didn't list RedHat.\n\n196\n00:09:18.082 --> 00:09:19.158\nThat's odd.\nBut anyhow [LAUGH]\n\n197\n00:09:19.158 --> 00:09:19.661\n&gt;&gt; [LAUGH]\n\n198\n00:09:19.661 --> 00:09:21.806\n&gt;&gt; So it's given me the choice there based\n\n199\n00:09:21.806 --> 00:09:23.044\non which one I wanted.\n\n200\n00:09:23.044 --> 00:09:24.430\n[CROSSTALK]\n\n201\n00:09:24.430 --> 00:09:25.130\n&gt;&gt; [LAUGH]\n&gt;&gt; I guess so.\n\n202\n00:09:25.130 --> 00:09:28.570\nSo when I go and download software,\nI get that choice.\n\n203\n00:09:28.570 --> 00:09:29.910\nSometimes you get both.\n\n204\n00:09:29.910 --> 00:09:31.340\nSometimes you don't, right?\n\n205\n00:09:31.340 --> 00:09:33.310\nSometimes you really wanna\ndownload a program and\n\n206\n00:09:33.310 --> 00:09:35.730\nthe only offer in one form or another.\n\n207\n00:09:35.730 --> 00:09:40.897\nSo, for example,\nwhat is it steampower.com?\n\n208\n00:09:40.897 --> 00:09:43.540\nStam is a video game platform, and\n\n209\n00:09:43.540 --> 00:09:47.780\nif I wanna go and install Steam,\nit supports Linux, right?\n\n210\n00:09:47.780 --> 00:09:49.010\nSo that's nice.\n\n211\n00:09:49.010 --> 00:09:52.950\nAnd when I go to install it,\nit didn't give me a choice for\n\n212\n00:09:52.950 --> 00:09:55.680\nwhether I wanted to do an rpm or a deb.\n\n213\n00:09:55.680 --> 00:09:56.770\nIt just did deb.\n\n214\n00:09:56.770 --> 00:10:01.590\nAnd that's because they don't\ndistribute an rpm version of this.\n\n215\n00:10:01.590 --> 00:10:04.110\nSo, if I'm on a Fedora machine\nI can't really install.\n\n216\n00:10:04.110 --> 00:10:05.980\nBut if I'm on a Debian or Ubuntu I can.\n\n217\n00:10:05.980 --> 00:10:09.400\nThere it is, it downloaded\nsteam_latest.deb, which doesn't follow\n\n218\n00:10:09.400 --> 00:10:12.370\nthe naming convention, but anyhow it got\nit, and now I can go and install it.\n\n219\n00:10:12.370 --> 00:10:15.500\nSo just be aware that you will have that\nchoice when you go to find software.\n\n220\n00:10:15.500 --> 00:10:19.135\n&gt;&gt; All right, Don, so\nnow that we've found our installation or\n\n221\n00:10:19.135 --> 00:10:22.510\nour software that we wanna download,\nwe hit the good old download button.\n\n222\n00:10:22.510 --> 00:10:26.250\nYou got your Webmin going on there,\nand it downloads to my machine.\n\n223\n00:10:26.250 --> 00:10:27.520\nWhat do I do with it after that?\n\n224\n00:10:27.520 --> 00:10:28.511\nI just double-click it?\n\n225\n00:10:28.511 --> 00:10:30.210\n[LAUGH]\n&gt;&gt; All right, well, first off,\n\n226\n00:10:30.210 --> 00:10:33.300\nif we're working entirely\nfrom the command line,\n\n227\n00:10:33.300 --> 00:10:36.380\nthen we don't go to a web browser and\ndownload, right?\n\n228\n00:10:36.380 --> 00:10:38.630\nWe've got to be able to download and\nget right here on this machine.\n\n229\n00:10:38.630 --> 00:10:40.440\nAnd I've already done that, so\n\n230\n00:10:40.440 --> 00:10:42.910\nI've got the Webmin file right there\nalready downloaded on this machine.\n\n231\n00:10:42.910 --> 00:10:44.220\nBut let me show you how I did that.\n\n232\n00:10:44.220 --> 00:10:46.630\nI used the utility called wget, right?\n\n233\n00:10:46.630 --> 00:10:51.420\nWget is a web get utility,\nand you can point it to URLs.\n\n234\n00:10:51.420 --> 00:10:54.370\nSo you can copy a URL from a webpage,\nright?\n\n235\n00:10:54.370 --> 00:10:59.060\nSo maybe on my desktop I come in and\nI copy this link address.\n\n236\n00:10:59.060 --> 00:11:02.907\nAnd then back on my remote server or\nwherever I'm on a command line,\n\n237\n00:11:02.907 --> 00:11:05.481\nI can do wget and\nthen just point to that file.\n\n238\n00:11:05.481 --> 00:11:08.669\nAnd it'll reach right out, and\nit will download that file.\n\n239\n00:11:08.669 --> 00:11:12.185\nSo there it goes, it downloads it and\nnow I've got that copy right here,\n\n240\n00:11:12.185 --> 00:11:13.200\nready to work with.\n\n241\n00:11:13.200 --> 00:11:16.440\nSo you can do this entirely\nfrom the command line, and\n\n242\n00:11:16.440 --> 00:11:19.470\nnot have to have that GUI\nweb browser to download it.\n\n243\n00:11:19.470 --> 00:11:22.020\nBut once we've got it,\nthere it is, now I've got two.\n\n244\n00:11:22.020 --> 00:11:22.830\n&gt;&gt; Yeah, two.\n[LAUGH]\n\n245\n00:11:22.830 --> 00:11:24.310\n&gt;&gt; Let me just get rid\n\n246\n00:11:24.310 --> 00:11:25.292\nof that other one, there.\n\n247\n00:11:25.292 --> 00:11:28.920\nSo now I've got it, and I'm ready\nto actually get it installed, okay?\n\n248\n00:11:28.920 --> 00:11:30.270\nNow to get it installed,\n\n249\n00:11:30.270 --> 00:11:35.090\nwe can use a utility that's built into the\noperating system, it's called dpkg, right?\n\n250\n00:11:35.090 --> 00:11:36.890\nOr Debian Package Manager.\n\n251\n00:11:36.890 --> 00:11:38.730\nThis is the original package utility.\n\n252\n00:11:38.730 --> 00:11:40.940\nAnd I'm gonna show you,\nthis is not the one you use every day,\n\n253\n00:11:40.940 --> 00:11:41.958\nthis is the old one.\n\n254\n00:11:41.958 --> 00:11:48.380\nBut the Debian package utility is what\nwill let me install the software.\n\n255\n00:11:48.380 --> 00:11:51.100\nAnd if you just run it,\nyou get some basic information.\n\n256\n00:11:51.100 --> 00:11:54.940\nOr if you do //help it'll show you\nall the different options it has.\n\n257\n00:11:54.940 --> 00:11:57.970\nIt's got a bunch of options, right?\n\n258\n00:11:57.970 --> 00:12:01.500\nBut normally, there's really only one\noption we care about, we're installing.\n\n259\n00:12:01.500 --> 00:12:04.620\nAnd that's right here, -i, or |--install.\n\n260\n00:12:04.620 --> 00:12:06.250\nI want to install a package.\n\n261\n00:12:06.250 --> 00:12:11.920\nSo if I want to install Webmin,\nI can come in and just say dpkg -i.\n\n262\n00:12:11.920 --> 00:12:17.488\nAnd then I can point to that file,\nwebmin 1.850 all.deb.\n\n263\n00:12:17.488 --> 00:12:20.180\nAnd when I do that, it's gonna install it.\n\n264\n00:12:20.180 --> 00:12:21.490\nWell, not necessarily.\n\n265\n00:12:21.490 --> 00:12:23.220\n&gt;&gt; Yeah.\n&gt;&gt; I need to be an administrator\n\n266\n00:12:23.220 --> 00:12:23.910\nto install it.\n\n267\n00:12:23.910 --> 00:12:25.590\nI'm just logged in as\na regular user right now.\n\n268\n00:12:25.590 --> 00:12:26.590\nSo I'm gonna change that.\n\n269\n00:12:26.590 --> 00:12:30.920\nI'll do a sudo of the d package so\nthat it runs as an administrator.\n\n270\n00:12:30.920 --> 00:12:34.750\nAnd now it runs, and\nhere it goes doing the install.\n\n271\n00:12:34.750 --> 00:12:35.280\nAll right.\n\n272\n00:12:35.280 --> 00:12:38.500\nNow the install's gonna happen\nlargely automatic, right?\n\n273\n00:12:38.500 --> 00:12:39.760\nI'm not gonna have to get involved.\n\n274\n00:12:39.760 --> 00:12:40.330\nThere it goes.\n\n275\n00:12:40.330 --> 00:12:42.100\nIt did it, installed.\n\n276\n00:12:42.100 --> 00:12:44.010\nActually it didn't install, did it?\n\n277\n00:12:44.010 --> 00:12:44.670\n&gt;&gt; Error.\n\n278\n00:12:44.670 --> 00:12:46.220\n&gt;&gt; I got errors, right?\n\n279\n00:12:46.220 --> 00:12:49.210\nThis is the big limitation with dpkg.\n\n280\n00:12:49.210 --> 00:12:52.660\nDpkg does not do dependency tracking.\n\n281\n00:12:52.660 --> 00:12:55.880\nAnd I got a bunch of\ndependency errors right here.\n\n282\n00:12:55.880 --> 00:12:59.350\nDependency problems prevent\nconfiguration of webmin.\n\n283\n00:12:59.350 --> 00:13:05.060\nAnd then it's telling me,\nI need libnet -ssleay -perl.\n\n284\n00:13:05.060 --> 00:13:10.380\nI need libauthentication, libio,\napt-show versions, python.\n\n285\n00:13:10.380 --> 00:13:14.125\nI need all this stuff,\nand I don't have it, okay?\n\n286\n00:13:14.125 --> 00:13:18.005\nSo in the olden days I would have to\ngo to each of these websites, and\n\n287\n00:13:18.005 --> 00:13:21.765\nfind each of these packages, and\ndownload and install them as well.\n\n288\n00:13:21.765 --> 00:13:22.665\nOr if I'm lucky,\n\n289\n00:13:22.665 --> 00:13:26.265\nthey might be in a repository somewhere\nthat I can pull them all in one place.\n\n290\n00:13:26.265 --> 00:13:28.405\nBut the odds are I have to go to\ndifferent places to find them.\n\n291\n00:13:28.405 --> 00:13:32.235\n&gt;&gt; My favorite is when you go to get a\ndependency, and it requires dependencies,\n\n292\n00:13:32.235 --> 00:13:34.000\nand you've gotta go get\nthose dependencies.\n\n293\n00:13:34.000 --> 00:13:35.210\n&gt;&gt; Yeah.\n&gt;&gt; It's a lot of fun.\n\n294\n00:13:35.210 --> 00:13:35.850\n&gt;&gt; Yeah.\n&gt;&gt; [LAUGH]\n\n295\n00:13:35.850 --> 00:13:37.480\n&gt;&gt; So that, I mean,\n\n296\n00:13:37.480 --> 00:13:39.280\nwe put up with that years ago.\n\n297\n00:13:39.280 --> 00:13:42.770\nBut starting, I don't know, probably\naround ten years ago, it was a long time\n\n298\n00:13:42.770 --> 00:13:46.397\nago, we started to get better package\nmanagement, better utilities.\n\n299\n00:13:46.397 --> 00:13:51.276\nAnd in the Debian world, the one that\ntook hold was the utility called app-get,\n\n300\n00:13:51.276 --> 00:13:52.007\nall right?\n\n301\n00:13:52.007 --> 00:13:56.584\nApp-get was basically a package\ntracker that could not\n\n302\n00:13:56.584 --> 00:14:01.525\njust track a package, but\nall its dependencies as well.\n\n303\n00:14:01.525 --> 00:14:04.180\nSo when you went to install something,\n\n304\n00:14:04.180 --> 00:14:08.480\nit could find the application you want,\nfind all the other stuff that it needed,\n\n305\n00:14:08.480 --> 00:14:11.300\nand install it for you so\nyou didn't have to worry about it.\n\n306\n00:14:11.300 --> 00:14:13.290\nSo while dpkg is is still here,\n\n307\n00:14:13.290 --> 00:14:17.580\nwe can still use it, we don't normally\nbecause of the dependency mess.\n\n308\n00:14:17.580 --> 00:14:21.670\nSo instead, we're gonna use\nutilities like app-get, okay?\n\n309\n00:14:21.670 --> 00:14:25.845\nNow, I do wanna mention something real\nquick before I get too far int app-get.\n\n310\n00:14:25.845 --> 00:14:30.720\nApp-get is the official standard command,\nand it's the one most of you will use.\n\n311\n00:14:30.720 --> 00:14:35.330\nBut it's in the process of getting\nreplaced with a newer fancier version.\n\n312\n00:14:35.330 --> 00:14:40.480\nSo you'll likely have app get, but\nthere's another utility called Apt, right?\n\n313\n00:14:40.480 --> 00:14:43.470\nAn Apt by itself does\nbasically the same thing,\n\n314\n00:14:43.470 --> 00:14:45.530\nit's just an upgraded fancier version.\n\n315\n00:14:45.530 --> 00:14:49.240\nSo a few years from now all\nyou'll have is apt, right?\n\n316\n00:14:49.240 --> 00:14:51.350\nBut right now you have app get and apt.\n\n317\n00:14:51.350 --> 00:14:55.090\nNow for this show, I'm gonna use, well,\nI'll probably go back and forth, but\n\n318\n00:14:55.090 --> 00:14:57.970\nyou'll find that the command\nline option are the same.\n\n319\n00:14:57.970 --> 00:15:00.490\nAnd so by and large you can use\nthem interchangeably, right?\n\n320\n00:15:00.490 --> 00:15:02.427\nSo there's not a whole lot of reason.\n\n321\n00:15:02.427 --> 00:15:04.608\nBut you'll wanna start using apt, if for\n\n322\n00:15:04.608 --> 00:15:07.616\nno other reason than the fact\nthat it has super cow power.\n\n323\n00:15:07.616 --> 00:15:10.170\n&gt;&gt; [LAUGH]\n&gt;&gt; So we certainly got that.\n\n324\n00:15:10.170 --> 00:15:11.590\nBut-\n&gt;&gt; You really\n\n325\n00:15:11.590 --> 00:15:12.975\nargument there [LAUGH]\n&gt;&gt; I know.\n\n326\n00:15:12.975 --> 00:15:16.554\nSo if I want to get something installed,\nthough, I can do this.\n\n327\n00:15:16.554 --> 00:15:20.626\nBefore I move on to apt, though,\nlet me show one more thing about dpkg.\n\n328\n00:15:20.626 --> 00:15:25.390\nI was doing dpkg-I to do the install\nThere's also -r to do the remove.\n\n329\n00:15:25.390 --> 00:15:28.570\nSo that's how you get rid of\nsoftware that you're done with and\n\n330\n00:15:28.570 --> 00:15:29.560\nyou didn't need it anymore.\n\n331\n00:15:29.560 --> 00:15:31.100\nBut like I said, by and large,\n\n332\n00:15:31.100 --> 00:15:34.035\nwe're not gonna be using dpkg much\nbecause of the dependency tracking.\n\n333\n00:15:35.170 --> 00:15:38.820\nAll right, so let's take a look at what\nthis would have been like if I used apt\n\n334\n00:15:38.820 --> 00:15:39.970\ninstead, right?\n\n335\n00:15:39.970 --> 00:15:41.730\nLet's say that I wanted\nto spin up a web server.\n\n336\n00:15:41.730 --> 00:15:44.270\nSo I want HTTPD installed.\n\n337\n00:15:44.270 --> 00:15:49.530\nWell, the way apt works, and\napp-get, is they use repositories.\n\n338\n00:15:49.530 --> 00:15:52.475\nRepositories are servers that\ncontain tons of software.\n\n339\n00:15:52.475 --> 00:15:54.961\nAnd that's one of the reasons why we\ncan check in with that server, and\n\n340\n00:15:54.961 --> 00:15:56.073\nwe can find the dependencies.\n\n341\n00:15:56.073 --> 00:15:57.444\nIt's all in one place.\n\n342\n00:15:57.444 --> 00:15:59.303\nSo I don't have to go a vendor's website.\n\n343\n00:15:59.303 --> 00:16:01.313\nI don't have to go to the Webmin website.\n\n344\n00:16:01.313 --> 00:16:05.352\nTo find Webmin, it might be in\na repository that I can search already,\n\n345\n00:16:05.352 --> 00:16:06.796\nI can just go in and find.\n\n346\n00:16:06.796 --> 00:16:12.626\nI can come in and do a apt search and\nlook for some software, I'm gonna look for\n\n347\n00:16:12.626 --> 00:16:18.210\nWebmin, and when I run that it's gonna\nlook and there it is, it found it.\n\n348\n00:16:18.210 --> 00:16:20.850\nAnd it actually shows it's\nbeing installed already because\n\n349\n00:16:20.850 --> 00:16:25.110\nwhen I did that dkpg install,\nit did install.\n\n350\n00:16:25.110 --> 00:16:28.530\nIt's just broken because all\nthe dependencies are missing, right?\n\n351\n00:16:28.530 --> 00:16:34.480\nAnd so if I did a dkpg-r webmin,\nwhoops, and\n\n352\n00:16:34.480 --> 00:16:38.720\nremoved it, let me just remove that, so\nthere we go, so it's removed that package.\n\n353\n00:16:38.720 --> 00:16:41.489\nNow, when I run that apt search webmin and\n\n354\n00:16:41.489 --> 00:16:45.458\nit goes to look, now it finds it,\nbut it's not installed.\n\n355\n00:16:45.458 --> 00:16:50.276\nAnd see how it says, a residual config,\nit sees a history of how it was there but\n\n356\n00:16:50.276 --> 00:16:52.300\nit's not installed.\n\n357\n00:16:52.300 --> 00:16:54.451\nWe can search for just about any software,\n\n358\n00:16:54.451 --> 00:16:57.271\nif I wanna bring up a web server\nI could search for httpd.\n\n359\n00:16:57.271 --> 00:16:59.666\nAnd it's gonna look in\nthe repositories and\n\n360\n00:16:59.666 --> 00:17:04.076\nhere it returns a number of different\nprograms that matched what I searched for.\n\n361\n00:17:04.076 --> 00:17:08.839\nAnd I might find the one I wanted, that\nwas lighthttpd right there, I want apache,\n\n362\n00:17:08.839 --> 00:17:12.120\nI probably should have searched\na little bit different.\n\n363\n00:17:12.120 --> 00:17:14.863\nBut as you poke around in here you'll\nfind the various things that it also just\n\n364\n00:17:14.863 --> 00:17:17.390\nsearched for, Apache,\nyeah that's what I want.\n\n365\n00:17:17.390 --> 00:17:20.880\nWe could find it that way but\nyou could look for the software and\n\n366\n00:17:20.880 --> 00:17:23.940\nyou can install it all\nright from the repository.\n\n367\n00:17:23.940 --> 00:17:29.640\nThat's pretty handy if the software\nyou want is in the repository.\n\n368\n00:17:29.640 --> 00:17:32.494\nIf it isn't though, then you're\ngonna do what we did a moment ago,\n\n369\n00:17:32.494 --> 00:17:35.360\nyou go to the vendors website,\ndownload the package that you want.\n\n370\n00:17:35.360 --> 00:17:42.205\nSo I've downloaded Webmin 1.850, and\nthen I could use apt to install it.\n\n371\n00:17:42.205 --> 00:17:46.067\nIf it's in the repository,\nI can just say, apt install and\n\n372\n00:17:46.067 --> 00:17:49.660\nwhatever the name of the program\nis that I wanna add.\n\n373\n00:17:49.660 --> 00:17:52.315\nSo if I wanna add I don't know,\nI'm just gonna try and\n\n374\n00:17:52.315 --> 00:17:55.560\npick something here right off\nthe screen but most of this is junk.\n\n375\n00:17:56.600 --> 00:18:00.768\nYou do run into that,\na lot of stuff is not what you want,\n\n376\n00:18:00.768 --> 00:18:03.590\nlet's say that I wanna be FTP client,\nall right.\n\n377\n00:18:03.590 --> 00:18:08.650\nSo if I do a sudo apt search ftp,\nit will look and\n\n378\n00:18:08.650 --> 00:18:13.420\nfind tons of ftp clients,\nthe one I want is just called ftp,\n\n379\n00:18:13.420 --> 00:18:16.180\nI should have grabbed this to\ncut it down a little bit more.\n\n380\n00:18:16.180 --> 00:18:19.060\nBut we can come in and say-\n&gt;&gt; [INAUDIBLE] NGINX?\n\n381\n00:18:20.738 --> 00:18:23.170\n&gt;&gt; Probably a little less return [LAUGH].\n\n382\n00:18:23.170 --> 00:18:28.230\n&gt;&gt; Yeah, so we'll do a sudo apt\ninstall nginx and the to find it,\n\n383\n00:18:28.230 --> 00:18:33.095\nso there it is, and notice it not\nonly found nginx but it says, oops.\n\n384\n00:18:33.095 --> 00:18:35.450\n&gt;&gt; [LAUGH]\n&gt;&gt; If I can click in the right spot,\n\n385\n00:18:35.450 --> 00:18:38.100\nthese following packages\nwill be installed.\n\n386\n00:18:38.100 --> 00:18:42.380\nLook at all the dependencies\nthat it found, libgd, libjpeg,\n\n387\n00:18:42.380 --> 00:18:47.490\nall of these other ones, apt finds those\nand app again finds those as well.\n\n388\n00:18:47.490 --> 00:18:50.900\nIt finds them and tells me it saw it,\nin fact, let me cancel this, I'll say, no.\n\n389\n00:18:50.900 --> 00:18:54.800\nAnd let me do the same thing, and\nthis time I'm gonna say apt -get\n\n390\n00:18:54.800 --> 00:18:59.270\ninstead of apt, and it goes and it finds,\nit not only finds but looks the same.\n\n391\n00:18:59.270 --> 00:19:02.750\nThey're trying to get apt\nat feature parity and\n\n392\n00:19:02.750 --> 00:19:04.820\nwhen it's there they'll\nget rid of apt get.\n\n393\n00:19:04.820 --> 00:19:07.970\nBut that hasn't happened yet so we're\nreally getting the same results here.\n\n394\n00:19:07.970 --> 00:19:12.150\nAnd I can say yes and that's gonna\ninstall and now I've got, nginx.\n\n395\n00:19:12.150 --> 00:19:13.670\nAnd look at all the work\nit's having to do,\n\n396\n00:19:13.670 --> 00:19:18.300\nall the extra software that it's\nhaving to install, that's good work.\n\n397\n00:19:18.300 --> 00:19:22.320\n&gt;&gt; Now Don, with stuff that we\nhave installed if it's in apt,\n\n398\n00:19:22.320 --> 00:19:26.050\nif you got to apt you type it in and\nsend the repository that's set up for it.\n\n399\n00:19:26.050 --> 00:19:29.240\nThat's great, everything works but if we\ndid have to go to the vendor website.\n\n400\n00:19:29.240 --> 00:19:32.990\nHow do we track that software's\nupdates and things like that,\n\n401\n00:19:32.990 --> 00:19:34.640\ndo we have to continue to go back?\n\n402\n00:19:34.640 --> 00:19:39.560\n&gt;&gt; That's a challenge, what happens\nhere is, if I install a local copy, so\n\n403\n00:19:39.560 --> 00:19:40.880\nI've got this local copy right here.\n\n404\n00:19:40.880 --> 00:19:46.100\nI could say, pseudo apt install and\nI could point it right at that\n\n405\n00:19:47.250 --> 00:19:51.340\nfile, I can try, let me just,\n./webmin, there we go.\n\n406\n00:19:51.340 --> 00:19:53.570\nI can point it right at that file and\n\n407\n00:19:53.570 --> 00:19:56.940\nit's gonna read it,\nit's gonna find all the dependencies.\n\n408\n00:19:56.940 --> 00:19:58.880\nSo even though I downloaded\nthe file from the vendor,\n\n409\n00:19:58.880 --> 00:20:02.540\nit's using dependency tracking and\nfinding it in the other repositories.\n\n410\n00:20:02.540 --> 00:20:04.040\nAnd I can say, yes and\n\n411\n00:20:04.040 --> 00:20:08.190\nit's going to install it, and instead in\ngiving me a bunch of errors like before,\n\n412\n00:20:08.190 --> 00:20:10.240\nthis time it's actually gonna\ngo through and install it.\n\n413\n00:20:10.240 --> 00:20:14.520\nIt will have the dependency so\nit'll be able to configured and\n\n414\n00:20:14.520 --> 00:20:18.800\nit will work, so that's great, this seems\nperfect, we're done, this episode is over.\n\n415\n00:20:18.800 --> 00:20:20.940\n&gt;&gt; Well Don, thanks for\njoining us today [LAUGH].\n\n416\n00:20:20.940 --> 00:20:28.306\n&gt;&gt; But what happens when Webmin 1.86 or\nWebmin 2.0 comes out?\n\n417\n00:20:28.306 --> 00:20:31.895\nI installed a package right from\nmy hard drive, there's no way for\n\n418\n00:20:31.895 --> 00:20:35.365\napt to know that new versions\nof that software have come out.\n\n419\n00:20:35.365 --> 00:20:38.735\n&gt;&gt; And it's not actively\nautomatically looking for updates for\n\n420\n00:20:38.735 --> 00:20:39.635\nyour software, correct?\n\n421\n00:20:39.635 --> 00:20:43.345\n&gt;&gt; Well it does for\nthe stuff that's built into the OS.\n\n422\n00:20:43.345 --> 00:20:45.155\n&gt;&gt; Gotcha.\n&gt;&gt; And I mean you can manually do that,\n\n423\n00:20:45.155 --> 00:20:48.795\nI can come in and\nI can say sudo apt update.\n\n424\n00:20:49.815 --> 00:20:53.440\nAnd that tells it, I want you to go\nlook at all your repositories and\n\n425\n00:20:53.440 --> 00:20:55.060\nlook for new versions of software.\n\n426\n00:20:55.060 --> 00:20:58.280\nAnd so it will reach out there and\nit'll look, pseudo apps update or\n\n427\n00:20:58.280 --> 00:21:01.970\npseudo apt dash get update, either one,\nand it's gonna look at and it found me.\n\n428\n00:21:01.970 --> 00:21:07.170\n48 packages have updates, it didn't\nactually do the update but it found them.\n\n429\n00:21:07.170 --> 00:21:10.980\n&gt;&gt; Yeah.\n&gt;&gt; And then I can say pseudo apt upgrade,\n\n430\n00:21:13.960 --> 00:21:16.340\nthere we go, and\nnow it's gonna reach out and\n\n431\n00:21:16.340 --> 00:21:21.220\nit's gonna upgrade those 48 packages,\nthere it goes, nice and neat.\n\n432\n00:21:21.220 --> 00:21:25.235\nBut if an update from Webmin\ncame out it wouldn't update it,\n\n433\n00:21:25.235 --> 00:21:29.440\nit wouldn't update it because it\nhas no idea the update exists.\n\n434\n00:21:29.440 --> 00:21:33.040\nSo what happens here is\nthat vendors have a choice,\n\n435\n00:21:33.040 --> 00:21:36.230\nthey can make a package\navailable just like this.\n\n436\n00:21:36.230 --> 00:21:39.480\nWhere you go and you download it and you\nget the package and that's the end of it.\n\n437\n00:21:40.670 --> 00:21:44.270\nBut a lot of them,\nif you go into their documentation and you\n\n438\n00:21:44.270 --> 00:21:48.590\npull up their installation instructions\nand things, you can find in here.\n\n439\n00:21:53.200 --> 00:21:56.804\nLet me get to the page here, where they\npush out installation instructions, and\n\n440\n00:21:56.804 --> 00:21:59.882\nhere it's showing basically what I\ndid at the beginning of the show.\n\n441\n00:21:59.882 --> 00:22:00.566\n&gt;&gt; Yeah.\n\n442\n00:22:00.566 --> 00:22:04.127\n&gt;&gt; You use wget to download it and you use\ndpkg to install it, they did a --install,\n\n443\n00:22:04.127 --> 00:22:05.740\nI did a dash i, it's the same thing.\n\n444\n00:22:06.860 --> 00:22:10.704\nBut if I keep scrolling down, here they\nwarn me about the dependencies, so\n\n445\n00:22:10.704 --> 00:22:14.313\nif I wanted to install those,\nI should have read that before the show.\n\n446\n00:22:14.313 --> 00:22:15.369\n&gt;&gt; It's like they knew about\nthis beforehand [LAUGH].\n\n447\n00:22:15.369 --> 00:22:18.169\n[CROSSTALK]\n&gt;&gt; Yeah, but if I keep going down\n\n448\n00:22:18.169 --> 00:22:23.750\nright here using the Webmin apt\nrepository, I can add repositories.\n\n449\n00:22:23.750 --> 00:22:28.200\nAll the repositories are stored\nin this file right here,\n\n450\n00:22:28.200 --> 00:22:34.750\n/etc/apt/sources.list, I'm gonna copy\nthat and go back into my terminal.\n\n451\n00:22:34.750 --> 00:22:39.474\nMy terminal is finishing a install,\nlet's see, grub is updating something,\n\n452\n00:22:39.474 --> 00:22:41.810\nyeah, I'll accept defaults on that.\n\n453\n00:22:43.140 --> 00:22:46.230\nSo back in my terminal if I edit that file\n\n454\n00:22:46.230 --> 00:22:49.360\nI'll see all the places that it's\nlooking when it doesn't update.\n\n455\n00:22:49.360 --> 00:22:54.970\nSo I'm just gonna do a sudo vi and\nI'll edit /etc/apt/sources.list,\n\n456\n00:22:54.970 --> 00:22:57.980\nthis file is used by both apt and apt get.\n\n457\n00:22:57.980 --> 00:22:59.830\nSo I can pull that up, and\n\n458\n00:22:59.830 --> 00:23:03.840\nhere's a list, some of these will be\nenabled, some of these will be disabled.\n\n459\n00:23:03.840 --> 00:23:07.190\nSo as I look, there might be some\nsources that I'm not actually using.\n\n460\n00:23:07.190 --> 00:23:09.970\nBut the majority of these are enabled,\nsee down here at the bottom,\n\n461\n00:23:09.970 --> 00:23:12.740\nthere's two, this archive is disabled.\n\n462\n00:23:12.740 --> 00:23:16.222\nSo there's a couple that are disabled,\nthey'll have hash signs or pound symbols,\n\n463\n00:23:16.222 --> 00:23:16.867\nnumber signs.\n\n464\n00:23:16.867 --> 00:23:19.268\nWhatever at the beginning of\nthe line that disables them,\n\n465\n00:23:19.268 --> 00:23:20.885\nall these others are turned on though.\n\n466\n00:23:20.885 --> 00:23:24.422\nAnd I can add third party\nrepositories into this stuff,\n\n467\n00:23:24.422 --> 00:23:27.744\nall I need to do is come down\nto the bottom of the line.\n\n468\n00:23:27.744 --> 00:23:33.039\nAnd if the vendor has released\na repository, I can take this line right\n\n469\n00:23:33.039 --> 00:23:39.082\nhere that they're posting for me and I can\ncopy and paste it right into the file.\n\n470\n00:23:39.082 --> 00:23:42.686\nAnd now whenever we check for\nupdates it'll look there also and\n\n471\n00:23:42.686 --> 00:23:44.620\nit will find those updates.\n\n472\n00:23:44.620 --> 00:23:50.966\nNow, little problem with this,\nwe can trust all of these repositories.\n\n473\n00:23:50.966 --> 00:23:53.788\nThey come from the original\noperating system vendor, so\n\n474\n00:23:53.788 --> 00:23:57.272\nin this case Canonical, they make Ubuntu,\nI'm on an Ubuntu server.\n\n475\n00:23:57.272 --> 00:24:01.167\nAnd so they make it,\nWebmin, can I trust them?\n\n476\n00:24:01.167 --> 00:24:04.643\nWell, maybe their repository gets\ncompromised and they are starting to push\n\n477\n00:24:04.643 --> 00:24:07.863\nout versions of the software that\nhave malware attached to it, right?\n\n478\n00:24:07.863 --> 00:24:09.328\nWe need a way to verify that.\n\n479\n00:24:09.328 --> 00:24:14.731\nAnd so most vendors that have a repository\nlike this will also have security\n\n480\n00:24:14.731 --> 00:24:19.462\nkeys that you can use to verify\nthe authenticity of the software.\n\n481\n00:24:19.462 --> 00:24:21.592\nYou always want to look for that.\n\n482\n00:24:21.592 --> 00:24:26.221\nAnd so here they're giving me\nthe instructions on how I could do that,\n\n483\n00:24:26.221 --> 00:24:26.773\nright?\n\n484\n00:24:26.773 --> 00:24:28.653\nAnd their instructions\nare a little bit weird.\n\n485\n00:24:28.653 --> 00:24:34.343\nSo we're gonna just grab this line so that\nI can come in here and download that key.\n\n486\n00:24:34.343 --> 00:24:36.047\nWhoops, they already put wget in for me.\n\n487\n00:24:36.047 --> 00:24:41.397\nSo I'm gonna download that key and then\nyou need to be a root user to add keys.\n\n488\n00:24:41.397 --> 00:24:42.967\nSo that's what this next line is.\n\n489\n00:24:42.967 --> 00:24:43.700\nI'll sudo it.\n\n490\n00:24:43.700 --> 00:24:46.475\nThey don't sudo it in their example but\nyou need to.\n\n491\n00:24:46.475 --> 00:24:50.385\nAnd I'll do apt-key add and\nI'm gonna add the key for that developer.\n\n492\n00:24:50.385 --> 00:24:54.265\nAnd now, whenever I download software from\nthat developer, I can use that key to\n\n493\n00:24:54.265 --> 00:24:57.470\nverify whether it's been tampered with and\nmake sure it's safe.\n\n494\n00:24:57.470 --> 00:25:01.260\nBut now, whenever I do a sudo apt update,\nit's not just looking at\n\n495\n00:25:01.260 --> 00:25:05.068\nCanonical's repositories anymore or\nthe Debian repositories.\n\n496\n00:25:05.068 --> 00:25:08.045\nNow, it's also looking at\nthe Webmin repositories and\n\n497\n00:25:08.045 --> 00:25:10.588\nmaking sure that I've\ngot the latest version.\n\n498\n00:25:10.588 --> 00:25:14.840\nSo right there, I can see that\nit's hitting lines six, seven, and\n\n499\n00:25:14.840 --> 00:25:17.762\neight were all Webmin repositories, right?\n\n500\n00:25:17.762 --> 00:25:21.832\nLine five there was an ignore, so\napparently it's one that's disabled, but\n\n501\n00:25:21.832 --> 00:25:23.073\nthe other three eject.\n\n502\n00:25:23.073 --> 00:25:27.170\nAnd now when an update for Webmin\ncomes out, I'll be able to get it and\n\n503\n00:25:27.170 --> 00:25:29.938\nit's just part of my\nroutine update process.\n\n504\n00:25:29.938 --> 00:25:32.507\nI don't have to do anything\nspecial to update Webmin.\n\n505\n00:25:32.507 --> 00:25:34.466\nIt's just there and it's done.\n\n506\n00:25:34.466 --> 00:25:37.790\n&gt;&gt; Now Don, one of our chat room\nmembers there is asking Stan Lee,\n\n507\n00:25:37.790 --> 00:25:40.568\nhe is piping in yet\nagain with great stuff as always.\n\n508\n00:25:40.568 --> 00:25:45.242\nDo we want to go with these suggested\npackages that they give to you?\n\n509\n00:25:45.242 --> 00:25:47.736\nSometimes, yeah.\n&gt;&gt; Sometimes?\n\n510\n00:25:47.736 --> 00:25:48.816\n[LAUGH]\n&gt;&gt; It depends.\n\n511\n00:25:48.816 --> 00:25:52.450\nWhen you install software, a lot of times\nthere'll be suggested packages that come\n\n512\n00:25:52.450 --> 00:25:53.994\nalong with it that you may not need.\n\n513\n00:25:53.994 --> 00:25:56.979\nNow, on a workstation,\nI'll usually install them just so\n\n514\n00:25:56.979 --> 00:25:58.542\nit doesn't annoy me, right?\n\n515\n00:25:58.542 --> 00:25:59.166\n&gt;&gt; [LAUGH]\n&gt;&gt; Now,\n\n516\n00:25:59.166 --> 00:26:03.445\non a server, we're usually trying to\nmaintain the minimal footprint possible.\n\n517\n00:26:03.445 --> 00:26:05.966\nAnd so when you get a suggested package,\n\n518\n00:26:05.966 --> 00:26:09.168\nsometimes that's not\nnecessarily what you want.\n\n519\n00:26:09.168 --> 00:26:11.751\nFor example,\nlet's say that I'm on a server and\n\n520\n00:26:11.751 --> 00:26:13.519\nlet's see if this one will do it.\n\n521\n00:26:13.519 --> 00:26:14.347\nI don't know if it will or not.\n\n522\n00:26:14.347 --> 00:26:17.971\nThis is actually an Ubuntu server that's\nhosted in the Amazon Web Services and so\n\n523\n00:26:17.971 --> 00:26:19.903\nthey have a special deployment of Ubuntu.\n\n524\n00:26:19.903 --> 00:26:22.606\nIt's a little bit different, so\nI'm not sure if it'll do it.\n\n525\n00:26:22.606 --> 00:26:26.760\nBut sometimes you'll see when you run a\ncommand and it can't find the command and\n\n526\n00:26:26.760 --> 00:26:30.874\nit says, if you want it, here's a quick\nway you can install it and have it.\n\n527\n00:26:30.874 --> 00:26:32.793\nI can do a sudo app install mc, right?\n\n528\n00:26:32.793 --> 00:26:35.626\nAnd Midnight Commander's not installed,\nhere's how I can install it real quick.\n\n529\n00:26:35.626 --> 00:26:39.723\nNow, that's kind of a suggestion or when\nyou install another software it might have\n\n530\n00:26:39.723 --> 00:26:43.552\nall the packages that it needs and then\nhave additional ones that it suggests.\n\n531\n00:26:43.552 --> 00:26:48.388\nIn those scenarios, if you choose to\ninstall them, it doesn't necessarily hurt\n\n532\n00:26:48.388 --> 00:26:52.746\nyou or hurt the application, but\nit increases your security footprint.\n\n533\n00:26:52.746 --> 00:26:55.026\nIf I'm trying to maintain\na secure server and\n\n534\n00:26:55.026 --> 00:26:57.486\nI see that Midnight Commander\nis not installed,\n\n535\n00:26:57.486 --> 00:27:01.271\nthat's not a message to me saying,\nI need to install Midnight Commander.\n\n536\n00:27:01.271 --> 00:27:04.813\nIt's a message to me saying, I just\nneed to find a different way to do this.\n\n537\n00:27:04.813 --> 00:27:08.031\nI wanted to copy some files, so\nI'll use cp cuz I know that's built in.\n\n538\n00:27:08.031 --> 00:27:08.654\n&gt;&gt; Yeah.\n&gt;&gt; I don't need\n\n539\n00:27:08.654 --> 00:27:09.498\nMidnight Commander for that.\n\n540\n00:27:09.498 --> 00:27:13.587\nI run into that with editors a lot\nwhere you run nano and, well,\n\n541\n00:27:13.587 --> 00:27:15.423\nthat's installed, but-\n&gt;&gt; [LAUGH]\n\n542\n00:27:15.423 --> 00:27:15.945\n&gt;&gt; But it's not installed.\n\n543\n00:27:15.945 --> 00:27:20.200\nAll right, well, fine, I'll use vi or\nvim or whatever, right?\n\n544\n00:27:20.200 --> 00:27:22.631\nYou try not to install things,\nyou install extra things.\n\n545\n00:27:22.631 --> 00:27:26.800\nAnd what you'll find is that when you're\ninstalling software, like with app-get.\n\n546\n00:27:26.800 --> 00:27:30.818\nIf I do man for apt-get,\nit's got a ton of options and\n\n547\n00:27:30.818 --> 00:27:33.956\nyou can tell it not to pull dependencies.\n\n548\n00:27:33.956 --> 00:27:36.710\nYou can tell it not to\npull suggested packages.\n\n549\n00:27:36.710 --> 00:27:39.888\nYou can really configure and\nget advanced with it.\n\n550\n00:27:39.888 --> 00:27:44.346\nUsually, you just want to install the\nminimum amount to get things working on\n\n551\n00:27:44.346 --> 00:27:45.290\na server.\n\n552\n00:27:45.290 --> 00:27:46.761\nOn a workstation you can\ngo a little bit further.\n\n553\n00:27:46.761 --> 00:27:48.223\n&gt;&gt; Right.\n&gt;&gt; And you know what,\n\n554\n00:27:48.223 --> 00:27:51.838\nit's also worth mentioning,\nI’m doing apt-get here, right?\n\n555\n00:27:51.838 --> 00:27:52.592\n&gt;&gt; Yeah.\n&gt;&gt; Or apt.\n\n556\n00:27:52.592 --> 00:27:57.390\nThere are other utilities out there that\nmaybe available, for example, aptitude.\n\n557\n00:27:57.390 --> 00:27:59.318\nLet me see if I got it here.\n\n558\n00:27:59.318 --> 00:28:00.633\nNope, but I can install it.\n\n559\n00:28:00.633 --> 00:28:01.218\n&gt;&gt; Yeah.\n\n560\n00:28:01.218 --> 00:28:02.721\n[LAUGH]\n&gt;&gt; Yeah,\n\n561\n00:28:02.721 --> 00:28:04.279\nlet me install it cuz I just\nkinda wanna show it to you.\n\n562\n00:28:04.279 --> 00:28:07.791\nI don't use aptitude myself, but\nI know that it is available and\n\n563\n00:28:07.791 --> 00:28:08.970\nsome people like it.\n\n564\n00:28:08.970 --> 00:28:09.625\n&gt;&gt; I do, I'm using it.\n\n565\n00:28:09.625 --> 00:28:13.086\nIt's pretty convenient especially for\nsearching through things and\n\n566\n00:28:13.086 --> 00:28:14.087\nlooking for stuff.\n\n567\n00:28:14.087 --> 00:28:14.842\nI like it.\n&gt;&gt; Yeah,\n\n568\n00:28:14.842 --> 00:28:20.040\nwhen you're working with the command line\nyou gotta remember the commands, but\n\n569\n00:28:20.040 --> 00:28:25.400\nthere's sometimes, I'm gonna call them\nsudo GUI utilities or whatever that is.\n\n570\n00:28:25.400 --> 00:28:26.412\nAnd-\n&gt;&gt; As in PSE.\n\n571\n00:28:26.412 --> 00:28:27.144\n[LAUGH]\n&gt;&gt; Yeah,\n\n572\n00:28:27.144 --> 00:28:30.650\nthen a really graphically user\ninterface but it's kinda close.\n\n573\n00:28:30.650 --> 00:28:31.232\nAptitude is like that.\n\n574\n00:28:31.232 --> 00:28:37.590\nIf I pull up aptitude, here we go,\nwe get kind of a navigable menu.\n\n575\n00:28:37.590 --> 00:28:40.081\nAnd I can come in and say,\nlet me look at my Installed Packages or\n\n576\n00:28:40.081 --> 00:28:42.438\nlet me look at Not Installed packages,\nVirtual Packages.\n\n577\n00:28:42.438 --> 00:28:44.370\nI'll go into Not Installed, right?\n\n578\n00:28:44.370 --> 00:28:45.971\nAnd then it gives me categories.\n\n579\n00:28:45.971 --> 00:28:49.850\nI wanna find, I don't know, http, right?\n\n580\n00:28:49.850 --> 00:28:51.212\nI want webservers, right?\n\n581\n00:28:51.212 --> 00:28:54.540\nAnd the number of packages\ngets smaller and smaller.\n\n582\n00:28:54.540 --> 00:28:58.572\nThere were 50,000 packages a second ago,\nthere's only 44 in the webserver category.\n\n583\n00:28:58.572 --> 00:29:04.380\nAnd I can go in there, and there's only\nfive in the main fully supported category.\n\n584\n00:29:04.380 --> 00:29:05.540\nMeanwhile, it's 39 in universe.\n\n585\n00:29:05.540 --> 00:29:06.383\n&gt;&gt; [LAUGH]\n&gt;&gt; Just everything.\n\n586\n00:29:06.383 --> 00:29:08.936\nI'm gonna go in main and now I can find.\n\n587\n00:29:08.936 --> 00:29:09.634\nHere's apache.\n\n588\n00:29:09.634 --> 00:29:12.391\nIf I wanna install that and that's it.\n\n589\n00:29:12.391 --> 00:29:15.050\nI figured light httpd would be there but\nno.\n\n590\n00:29:15.050 --> 00:29:18.770\nSo I can find that though and\nif I wanna install apache, there it is.\n\n591\n00:29:18.770 --> 00:29:22.970\nI can choose that package and\nwe can go in and choose to install it.\n\n592\n00:29:22.970 --> 00:29:26.988\nYou'll see right now it's not installed\nbut I can install it if I wanted.\n\n593\n00:29:26.988 --> 00:29:30.310\nShowing me the dependencies,\nthe information about the package.\n\n594\n00:29:30.310 --> 00:29:33.406\nRead about it and then I can choose\nto install it or update it or\n\n595\n00:29:33.406 --> 00:29:35.126\nwhatever if that's what I want.\n\n596\n00:29:35.126 --> 00:29:39.200\nUp at the top it's giving me\nthe menu kinda commands, right?\n\n597\n00:29:39.200 --> 00:29:42.760\nI could push g to preview, download,\ninstall, or remove packages.\n\n598\n00:29:42.760 --> 00:29:46.330\nSo if I hit g, I haven't tagged this\none yet, so I would need to tag it.\n\n599\n00:29:46.330 --> 00:29:48.605\nYou gotta do a Ctrl + T and\nthen you come in.\n\n600\n00:29:48.605 --> 00:29:52.520\nAnd it's got this whole kinda menu system\nthat you can use to be able to work\n\n601\n00:29:52.520 --> 00:29:53.164\nwith that.\n\n602\n00:29:53.164 --> 00:29:56.365\nSo I'm a little awkward in this\none because I don't use it much.\n\n603\n00:29:56.365 --> 00:29:57.770\nPlay Minesweeper?\n\n604\n00:29:57.770 --> 00:30:00.819\n&gt;&gt; Where are you going?\n\n605\n00:30:00.819 --> 00:30:01.945\n[LAUGH] That is very Minesweeper.\n\n606\n00:30:01.945 --> 00:30:03.098\n&gt;&gt; My first pick I lost.\n\n607\n00:30:03.098 --> 00:30:04.124\nSo I had no idea what's in it.\n\n608\n00:30:04.124 --> 00:30:05.273\nSo-\n&gt;&gt; That's great.\n\n609\n00:30:05.273 --> 00:30:08.451\n&gt;&gt; Hey, this is a great example of\nincreasing your security footprint.\n\n610\n00:30:08.451 --> 00:30:09.468\n&gt;&gt; That's right.\n&gt;&gt; Right?\n\n611\n00:30:09.468 --> 00:30:12.266\nI wanted to install an easy\npackage manager on a server.\n\n612\n00:30:12.266 --> 00:30:13.346\nAnd I got Minesweeper.\n\n613\n00:30:13.346 --> 00:30:15.452\n&gt;&gt; [LAUGH]\n&gt;&gt; And that's not something we want.\n\n614\n00:30:15.452 --> 00:30:19.764\nThat's why we have to be careful about\nwhat we install on a server, but\n\n615\n00:30:19.764 --> 00:30:24.236\notherwise, I guess now the real question\nis how we get out of this thing?\n\n616\n00:30:24.236 --> 00:30:24.736\nQ?\n&gt;&gt; Q enough.\n\n617\n00:30:24.736 --> 00:30:25.320\n&gt;&gt; And we'll get out, there we go.\n\n618\n00:30:25.320 --> 00:30:26.272\nApt-get is one example.\n\n619\n00:30:26.272 --> 00:30:28.361\nIf you got a GUI that's the whole software\n\n620\n00:30:28.361 --> 00:30:31.882\nstore that you use on there,\nthat's design to be simple but design for\n\n621\n00:30:31.882 --> 00:30:33.750\nwork stations not for servers.\n\n622\n00:30:33.750 --> 00:30:36.362\nSo don't feel like you've\nonly got one choice.\n\n623\n00:30:36.362 --> 00:30:40.630\nThe graphical one is actually called\nSynaptic, is the GUI-based one.\n\n624\n00:30:40.630 --> 00:30:41.887\nAptitude is command line.\n\n625\n00:30:41.887 --> 00:30:44.270\nThere's Deselect,\nis another one that's command line.\n\n626\n00:30:44.270 --> 00:30:45.506\nI know some people like it.\n\n627\n00:30:45.506 --> 00:30:48.510\nI just stick with what's built-in\nbecause minimal foot print.\n\n628\n00:30:48.510 --> 00:30:49.801\nThat's what I normally think, right?\n\n629\n00:30:49.801 --> 00:30:52.410\nSo apt-get or just apt by itself.\n\n630\n00:30:52.410 --> 00:30:52.949\nThose are available.\nAnd\n\n631\n00:30:52.949 --> 00:30:57.240\nthere's also another utility called\napt-cache, which is a kind of handy one.\n\n632\n00:30:57.240 --> 00:30:59.223\nWith apt-get you could search for\npackages.\n\n633\n00:30:59.223 --> 00:31:03.381\nWith the newer apt, you're supposed to\nsearch with apt-cache cuz you cache this\n\n634\n00:31:03.381 --> 00:31:07.615\nlist of packages and you can just search\nlocally, so it's faster and more robust.\n\n635\n00:31:07.615 --> 00:31:10.043\nSo there's new tools like that\nthat are coming off all the time.\n\n636\n00:31:10.043 --> 00:31:14.595\nBut as far as getting software installed,\nthat's really all there is to it.\n\n637\n00:31:14.595 --> 00:31:17.616\nIf it's already in a repo then\nyou're just doing apt, install, and\n\n638\n00:31:17.616 --> 00:31:18.772\nthe name of the software.\n\n639\n00:31:18.772 --> 00:31:22.860\nIf it's not in the repo, you can download\nthe package and install it individually.\n\n640\n00:31:22.860 --> 00:31:26.704\nOr if that developer has a repo, hopefully\nthey do, you could add it to the list and\n\n641\n00:31:26.704 --> 00:31:29.292\nnow anytime you do updates,\nthat'll update as well.\n\n642\n00:31:29.292 --> 00:31:33.550\nInstalling from a repository is always\nthe best if you have the choice.\n\n643\n00:31:33.550 --> 00:31:34.170\n&gt;&gt; Excellent stuff, Don.\n\n644\n00:31:34.170 --> 00:31:36.617\nBecause when it comes to software,\n\n645\n00:31:36.617 --> 00:31:42.010\ninstallation has been one of the more\ndifficult things for the new Linux user.\n\n646\n00:31:42.010 --> 00:31:45.981\nSo, being able to easily download, install\nsoftware onto their system is really\n\n647\n00:31:45.981 --> 00:31:48.871\ngonna help a lot of people that\nare new to the Linux's game.\n\n648\n00:31:48.871 --> 00:31:53.571\nI think you did a great job of showing\nus how we can actually do that without\n\n649\n00:31:53.571 --> 00:31:55.278\nmaking it so convoluted.\n\n650\n00:31:55.278 --> 00:31:56.808\n&gt;&gt; [LAUGH]\n&gt;&gt; It makes you just run for\n\n651\n00:31:56.808 --> 00:31:58.685\nthe nearest Windows system.\n\n652\n00:31:58.685 --> 00:32:01.814\n[LAUGH] So anything else you like to add\nto the segment before we close it down?\n\n653\n00:32:01.814 --> 00:32:02.587\n&gt;&gt; That's really about it.\n\n654\n00:32:02.587 --> 00:32:06.900\nThere are a few other package managers\nthat are always on the horizon.\n\n655\n00:32:06.900 --> 00:32:11.616\nI encourage you not to jump to the latest\nshiny package manager that comes along cuz\n\n656\n00:32:11.616 --> 00:32:14.500\na lot of them do have\ndependency tracking issues.\n\n657\n00:32:14.500 --> 00:32:17.020\nThey get better and more robust over time.\n\n658\n00:32:17.020 --> 00:32:19.559\nIf your package manager makes a mistake,\nit can break software and\n\n659\n00:32:19.559 --> 00:32:20.884\nit can be very difficult to fix it.\n\n660\n00:32:20.884 --> 00:32:23.797\nSo, I encourage you to stick\nwith the tried and true ones,\n\n661\n00:32:23.797 --> 00:32:27.423\nlike all the ones I mentioned on the show\ntoday those are all very stable,\n\n662\n00:32:27.423 --> 00:32:31.585\nmature ones that are available and welcome\nto be used, but if you hear about some new\n\n663\n00:32:31.585 --> 00:32:35.240\nshiny one on the Internet,\nmaybe I'll try that one instead.\n\n664\n00:32:35.240 --> 00:32:37.700\nJust be really careful,\ndon't do that on production systems.\n\n665\n00:32:37.700 --> 00:32:40.300\nPackages aren't something\nyou want to mess up.\n\n666\n00:32:40.300 --> 00:32:41.500\n&gt;&gt; All right.\nWell, there you go, everyone.\n\n667\n00:32:41.500 --> 00:32:45.617\nNow you know how to run out and install\nsoftware on your Debian-based systems if\n\n668\n00:32:45.617 --> 00:32:48.752\nyou're running Ubuntu or\nanything like that, Linux Mint,\n\n669\n00:32:48.752 --> 00:32:51.596\nyou can with confidence get\nsome software installed.\n\n670\n00:32:51.596 --> 00:32:54.515\nThat Minesweepers' calling your name,\nI know that for a fact.\n\n671\n00:32:54.515 --> 00:32:55.925\n&gt;&gt; [LAUGH]\n&gt;&gt; Don, thanks for joining us today and\n\n672\n00:32:55.925 --> 00:32:57.435\nwe do thank our audience for watching.\n\n673\n00:32:57.435 --> 00:32:59.946\nWell, it looks like it's that time\nagain for us to call it a day.\n\n674\n00:32:59.946 --> 00:33:03.410\nSigning off for ITProTV,\nI've been your host Daniel Lowrie.\n\n675\n00:33:03.410 --> 00:33:03.965\n&gt;&gt; And I'm Don Pezet.\n\n676\n00:33:03.965 --> 00:33:04.639\n&gt;&gt; And we'll see you next time.\n\n677\n00:33:04.639 --> 00:33:12.475\n[MUSIC]\n\n678\n00:33:12.475 --> 00:33:15.396\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "236473455"
        },
        {
          "description": "In this episode, Don explains how software is managed in Redhat based systems (CentOS, Fedora, etc). He demonstrates how to install, update and remove software using the yum and dnf utilities.",
          "length": "1866",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-5-2-1-redhat_package_management-092917-PGM.00_30_50_10.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-5-2-1-redhat_package_management-092917-PGM.00_30_50_10.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-5-2-1-redhat_package_management-092917-PGM.00_30_50_10.Still001-sm.jpg",
          "title": "Redhat Package Management",
          "transcript": "WEBVTT\n\n1\n00:00:00.092 --> 00:00:02.269\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:02.269 --> 00:00:08.284\n[CROSSTALK]\n\n3\n00:00:08.284 --> 00:00:12.003\n&gt;&gt; You're watching ITProTV.\n\n4\n00:00:12.003 --> 00:00:13.860\n&gt;&gt; All right, greetings to everyone, and\n\n5\n00:00:13.860 --> 00:00:16.380\nwelcome back to another\nexciting episode of ITProTV.\n\n6\n00:00:16.380 --> 00:00:20.460\nI'm your host Daniel Lowrie and in today's\nepisode, we're back with more in our Linux\n\n7\n00:00:20.460 --> 00:00:25.250\ncommand line series and joining us in\nthe studio, you know him as Don Pezet.\n\n8\n00:00:25.250 --> 00:00:28.050\nBut he's our good friend,\nmentor in this endeavor.\n\n9\n00:00:28.050 --> 00:00:29.400\nHow's it going today, Don?\n\n10\n00:00:29.400 --> 00:00:30.440\nGlad to have you again, sir.\n\n11\n00:00:30.440 --> 00:00:33.360\n&gt;&gt; Well I'm ready to dive right back\nin to the world of Linux command line.\n\n12\n00:00:33.360 --> 00:00:36.220\nAnd in this episode we're\ngonna be taking a look at\n\n13\n00:00:36.220 --> 00:00:40.100\nInstalling software on Red Hat\nbased systems or RPM based systems.\n\n14\n00:00:40.100 --> 00:00:42.330\nSo we'll see some of the utilities\nwe can use to install it.\n\n15\n00:00:42.330 --> 00:00:43.830\nWhat's involved with that process and\n\n16\n00:00:43.830 --> 00:00:47.420\nsome of the kind of best practices as far\nas how we get that software in there and\n\n17\n00:00:47.420 --> 00:00:50.870\nultimately get it out if we need to,\nall right here in this episode.\n\n18\n00:00:50.870 --> 00:00:54.948\n&gt;&gt; So we took a look at Debian\npackages in our previous episode.\n\n19\n00:00:54.948 --> 00:00:59.412\nThis is kinda like the same thing, right,\nit allows you to, be able to install\n\n20\n00:00:59.412 --> 00:01:03.694\nsoftware as a package instead of having\nto run around finding everything.\n\n21\n00:01:03.694 --> 00:01:07.540\nHow is it different should I say\nis what I'm trying to get to.\n\n22\n00:01:07.540 --> 00:01:10.833\n&gt;&gt; All right, well in the last episode we\ntalked about those Debian packages and\n\n23\n00:01:10.833 --> 00:01:14.076\nI said how the advantage of a package\nis that when you download software it's\n\n24\n00:01:14.076 --> 00:01:16.018\nusually on more than one component, right.\n\n25\n00:01:16.018 --> 00:01:20.290\nSo you've got binaries, and manpages,\nand libraries and all this stuff.\n\n26\n00:01:20.290 --> 00:01:21.760\nAnd if you had to install it manually,\n\n27\n00:01:21.760 --> 00:01:23.340\nyou'd have to know where\nall that stuff went.\n\n28\n00:01:23.340 --> 00:01:25.750\nYou'd have to copy the right\nfiles to the right locations and\n\n29\n00:01:25.750 --> 00:01:28.130\nif you get even one wrong,\nthe whole thing breaks.\n\n30\n00:01:28.130 --> 00:01:29.890\nIt's a bit of a nightmare, right, so\n\n31\n00:01:29.890 --> 00:01:35.145\nthe purpose of a package file is to\ncontain not just the finals that we need,\n\n32\n00:01:35.145 --> 00:01:38.775\nbut information about what to do\nwith the finals, where to put them.\n\n33\n00:01:38.775 --> 00:01:42.125\nWhere does the manpage go,\nwhere do the libraries go,\n\n34\n00:01:42.125 --> 00:01:45.505\nwhat permissions need to be set for\nthese things to execute right.\n\n35\n00:01:45.505 --> 00:01:46.873\nThat's called metadata.\n\n36\n00:01:46.873 --> 00:01:48.992\nAnd the metadata that's\npart of the package has it,\n\n37\n00:01:48.992 --> 00:01:52.430\nit's basically an instruction sheet that\nsays here's what to do to do the install.\n\n38\n00:01:52.430 --> 00:01:57.607\nWell, in the Debian episode we did\nthe .deb packages which were developed for\n\n39\n00:01:57.607 --> 00:01:59.230\nDebian.\n\n40\n00:01:59.230 --> 00:02:02.920\nAnd those are effective but\nthey store their metadata a certain way.\n\n41\n00:02:02.920 --> 00:02:04.800\nIn the Red Hat world we use RPM.\n\n42\n00:02:06.040 --> 00:02:08.320\nRPM is the Red Hat Package Manager.\n\n43\n00:02:08.320 --> 00:02:12.050\nAnd RPM packages have the same\nfiles in them, the same libraries,\n\n44\n00:02:12.050 --> 00:02:13.400\nthe same binaries.\n\n45\n00:02:13.400 --> 00:02:16.180\nBut the metadata is stored\nin a different format and so\n\n46\n00:02:16.180 --> 00:02:17.920\nthey're not compatible with each other.\n\n47\n00:02:17.920 --> 00:02:21.449\nThere's actually two things that break\ncompatibility one is the metadata format,\n\n48\n00:02:21.449 --> 00:02:22.849\nwhich by and large, is just XML.\n\n49\n00:02:22.849 --> 00:02:25.625\nBut they use different names for\nthings for whatever reason, right.\n\n50\n00:02:25.625 --> 00:02:29.757\nThe other thing is that in the Red Hat\nworld they use cpio compression,\n\n51\n00:02:29.757 --> 00:02:34.055\nwhich is different than in the Debian\nworld where they use just use gzip.\n\n52\n00:02:34.055 --> 00:02:36.125\nSo it's two different\ncompression types too,\n\n53\n00:02:36.125 --> 00:02:39.815\nand your software has to expect that to\nknow how to work within that environment.\n\n54\n00:02:39.815 --> 00:02:42.285\nSo Red Hat packages are just\nfundamentally different,\n\n55\n00:02:42.285 --> 00:02:47.085\nbut inside of them it technically is\nthe same data as far as that application.\n\n56\n00:02:47.085 --> 00:02:49.000\nWhich is a different instruction set.\n\n57\n00:02:49.000 --> 00:02:51.290\nSo when we go and\ndownload one of these packages and\n\n58\n00:02:51.290 --> 00:02:54.000\ninstall with it, we get all the benefits\nwe did from the Debian world.\n\n59\n00:02:54.000 --> 00:02:57.509\nWe get all the files we need, we get\nthe information on where they go and\n\n60\n00:02:57.509 --> 00:03:00.319\nwe get information on their\nassociated dependencies.\n\n61\n00:03:00.319 --> 00:03:04.639\nSo if there's other pieces of software\nwe need, to make our single piece work,\n\n62\n00:03:04.639 --> 00:03:08.125\nthen it'll have the instructions for\nthat and what is missing.\n\n63\n00:03:08.125 --> 00:03:08.902\nNow whether or\n\n64\n00:03:08.902 --> 00:03:12.938\nnot we're able to act on that information\ndepends on the tool that we use.\n\n65\n00:03:12.938 --> 00:03:15.410\nAnd I wanna start us off\nwith the original tool and\n\n66\n00:03:15.410 --> 00:03:17.740\nthen we'll move into some of the more\nadvanced stuff as episode goes on.\n\n67\n00:03:17.740 --> 00:03:20.560\nAnd show you kind of what we're really\ngonna use out there in the real world.\n\n68\n00:03:20.560 --> 00:03:24.800\n&gt;&gt; Now Don in the other episode we also\ntalked about the packages themselves.\n\n69\n00:03:24.800 --> 00:03:28.840\nAnd they had a very specific naming\nconvention that they used to kinda give us\n\n70\n00:03:28.840 --> 00:03:29.540\ninformation about it.\n\n71\n00:03:29.540 --> 00:03:31.314\nDid we see that with RPMs as well?\n\n72\n00:03:31.314 --> 00:03:33.832\n&gt;&gt; Yeah, yeah in fact it's almost\nthe same in last episode we used\n\n73\n00:03:33.832 --> 00:03:35.030\nWebmin as the example right.\n\n74\n00:03:35.030 --> 00:03:38.825\nSo I've got the webmin page pulled up\nhere and we went to the Debian package.\n\n75\n00:03:38.825 --> 00:03:42.611\nBut if I look right above it I've got RPM,\nthe Red Hat package manager, and\n\n76\n00:03:42.611 --> 00:03:46.639\nlet me clarify real quick, it's Red Hat,\nright, Red Hat Enterprise Linux but\n\n77\n00:03:46.639 --> 00:03:48.769\nthere's many other distros that use it.\n\n78\n00:03:48.769 --> 00:03:51.870\nThere's Fedora which is\nreally a Red Hat project,\n\n79\n00:03:51.870 --> 00:03:54.693\nthere's CentOS which is\nbuilt off of Red Hat.\n\n80\n00:03:54.693 --> 00:03:58.380\nAnd there is SUSE Linux which\nalso uses the RPM format.\n\n81\n00:03:58.380 --> 00:04:00.650\nSo it's not just Red Hat that uses this,\n\n82\n00:04:00.650 --> 00:04:03.110\nthere's actually several\ndifferent distros that do it.\n\n83\n00:04:03.110 --> 00:04:07.250\nSo when I take a look at that link though,\nI'll just copy that link and\n\n84\n00:04:07.250 --> 00:04:09.130\nlet me past it up here.\n\n85\n00:04:09.130 --> 00:04:13.860\nIf we take a look at that package\nthat I'm about to download the name\n\n86\n00:04:13.860 --> 00:04:18.590\nis actually very similar to what we\njust saw in the last episode for Debian.\n\n87\n00:04:18.590 --> 00:04:21.442\nWe get the name of the package,\nit's called Webmin and\n\n88\n00:04:21.442 --> 00:04:23.933\nthen after that we get the version 1.850.\n\n89\n00:04:23.933 --> 00:04:28.102\nNow unlike a Debian package instead\nof using underscores for separations,\n\n90\n00:04:28.102 --> 00:04:31.370\nhere they use just a hyphen,\nslightly different, right.\n\n91\n00:04:31.370 --> 00:04:35.560\nAnd then we've got .noarch,\nright, no architecture.\n\n92\n00:04:35.560 --> 00:04:38.380\nThat's telling me the hardware\narchitecture this package is built for.\n\n93\n00:04:38.380 --> 00:04:42.050\nAnd right now, this one is built for\nany architecture, 32 bit, 64 bit,\n\n94\n00:04:42.050 --> 00:04:44.450\nit doesn't care, so it says noarch.\n\n95\n00:04:44.450 --> 00:04:47.770\nAnd then .rpm,\nthat's what the package files end in.\n\n96\n00:04:47.770 --> 00:04:51.330\nAnd I pulled up in the background here,\nthis is a CentOS repository.\n\n97\n00:04:51.330 --> 00:04:56.570\nAnd so its got tons and\ntons of packages in here and\n\n98\n00:04:56.570 --> 00:04:59.390\nif you look at them they all\nhave that same basic name.\n\n99\n00:04:59.390 --> 00:05:03.420\nThe name of the software,\nfollowed by the version number,\n\n100\n00:05:03.420 --> 00:05:05.320\nfollowed by the architecture.\n\n101\n00:05:05.320 --> 00:05:09.669\nAnd if you look at the architectures here,\nI've got x86_64,\n\n102\n00:05:09.669 --> 00:05:14.628\nthose would be the 64-bit versions,\nor i686, which are the 32 bit,\n\n103\n00:05:14.628 --> 00:05:17.701\nsometimes you'll see x86 also for 32 bit.\n\n104\n00:05:17.701 --> 00:05:23.504\nYou might see spark or PPC or arm,\nright if you're in different areas.\n\n105\n00:05:23.504 --> 00:05:26.102\nI'm actually browsing this repo, and\n\n106\n00:05:26.102 --> 00:05:31.065\nI'm in the, actually, hang on,\nmy zoom is a little too crazy on this one.\n\n107\n00:05:31.065 --> 00:05:34.975\nIf you look at the folder that I'm in,\nI'm actually in the 64 bit folder, and so\n\n108\n00:05:34.975 --> 00:05:37.316\nthat's why I'm only\nseeing 64 bit packages.\n\n109\n00:05:37.316 --> 00:05:40.584\nBut if I were to navigate a little higher\nyou'd be able to see all the different\n\n110\n00:05:40.584 --> 00:05:42.843\nhardware architectures that are supported.\n\n111\n00:05:42.843 --> 00:05:46.519\nNow some distros are starting\nto go 64 bit only and so\n\n112\n00:05:46.519 --> 00:05:49.139\nyou might only see a 64 bit version.\n\n113\n00:05:49.139 --> 00:05:52.293\nOthers like in Gentoo and Arch Linux\nyou might see a ton of different\n\n114\n00:05:52.293 --> 00:05:56.029\nhardware architecture are supported and\nthe packages are divided up in that.\n\n115\n00:05:56.029 --> 00:05:59.424\nBut the name of the architectural be\nincluded in the package file name so\n\n116\n00:05:59.424 --> 00:06:01.753\nthat you can make sure that\nyou got the right one.\n\n117\n00:06:01.753 --> 00:06:06.107\nThat is kind of an important thing\nto install the right package.\n\n118\n00:06:06.107 --> 00:06:10.565\nAll right, so let's say I wanted to\nuse one of these package, right.\n\n119\n00:06:10.565 --> 00:06:11.857\nI would just download it and\n\n120\n00:06:11.857 --> 00:06:15.500\nif it's coming right from the vendor\nthen I would go to their website.\n\n121\n00:06:15.500 --> 00:06:19.560\nI'd click on that link and I'd download it\nand then I'd be ready to get it installed.\n\n122\n00:06:19.560 --> 00:06:23.700\nNow, if we've got a GUI like this,\ngreat, we can just click on the link and\n\n123\n00:06:23.700 --> 00:06:27.520\ngo, but if we're trying to\ndo this the command line,\n\n124\n00:06:27.520 --> 00:06:30.130\nwhat we need to do is get the link for\nthat file.\n\n125\n00:06:31.130 --> 00:06:34.240\nAnd then we can use a command\nline utility called wget,\n\n126\n00:06:34.240 --> 00:06:38.330\nto actually go and download that and\nhave it available to do the install.\n\n127\n00:06:38.330 --> 00:06:43.829\nSo for example,\nlet me switch over to a Red Hat server and\n\n128\n00:06:43.829 --> 00:06:47.924\nlet's see, we'll do a switch here and so\n\n129\n00:06:47.924 --> 00:06:51.800\nI'm gonna jump over to Red Hat server.\n\n130\n00:06:52.950 --> 00:06:57.858\nAnd once I'm in on that Red Hat server if\nI wanna get that software I can do wget\n\n131\n00:06:57.858 --> 00:07:01.360\nfollowed by the URL that\npoints to that package.\n\n132\n00:07:01.360 --> 00:07:04.260\nAnd when I run it it's gonna reach out and\nit's gonna download it and\n\n133\n00:07:04.260 --> 00:07:09.130\nnow I've got that local copy that I can\ngo in and install and get set up for\n\n134\n00:07:09.130 --> 00:07:10.140\nmy system, right.\n\n135\n00:07:10.140 --> 00:07:13.850\nSo I don't need a GUI to get these\npackages, if I know the URL if I\n\n136\n00:07:13.850 --> 00:07:17.400\nhave a link I can pull them right\nfrom the command line using wget.\n\n137\n00:07:17.400 --> 00:07:20.477\n&gt;&gt; Now, Don once we've wgetted our file,\nit's downloaded,\n\n138\n00:07:20.477 --> 00:07:22.740\nwe verify that the package is there,\n\n139\n00:07:22.740 --> 00:07:25.750\nI guess the next phase would be\nto actually install the thing.\n\n140\n00:07:25.750 --> 00:07:28.940\nHow do I tell Red Hat\ninstall this package?\n\n141\n00:07:28.940 --> 00:07:32.787\n&gt;&gt; All right, at its most basic,\nthe original tool for this was RPM,\n\n142\n00:07:32.787 --> 00:07:35.470\nwhich is the Red Hat package manager\n&gt;&gt; And\n\n143\n00:07:35.470 --> 00:07:39.570\nRPM would just let me give it an RPM\nfile and actually get it installed.\n\n144\n00:07:39.570 --> 00:07:44.520\nNow, like most utilities RPM has a bunch\nof command line operators that it can\n\n145\n00:07:44.520 --> 00:07:46.830\nuse that change its behavior,\nright, those are-\n\n146\n00:07:46.830 --> 00:07:47.750\n&gt;&gt; That's an understatement.\n\n147\n00:07:47.750 --> 00:07:48.343\n&gt;&gt; Yeah.\n&gt;&gt; [LAUGH]\n\n148\n00:07:48.343 --> 00:07:49.196\n&gt;&gt; There is a bunch, but\n\n149\n00:07:49.196 --> 00:07:52.044\nthere's a few that we really care about,\ndash I is the most important,\n\n150\n00:07:52.044 --> 00:07:53.150\nwe wanna install, right?\n\n151\n00:07:53.150 --> 00:07:55.676\nAnd usually we're installing software\nwith this, and that's what we want.\n\n152\n00:07:55.676 --> 00:08:01.694\nThere's a few others that can be\nuseful though, like U is upgrade.\n\n153\n00:08:01.694 --> 00:08:03.795\nLet's find that one in here,\nright here, -use upgrade.\n\n154\n00:08:03.795 --> 00:08:08.394\nIf the package is already installed and\nI'm installing an upgraded version of it,\n\n155\n00:08:08.394 --> 00:08:12.597\nand I can do a -u if the current version\nmatches the version that I'm about to\n\n156\n00:08:12.597 --> 00:08:14.263\ninstall then it was nothing.\n\n157\n00:08:14.263 --> 00:08:17.476\nIf I do dash I had to reinstall\neven if I already had it, right?\n\n158\n00:08:17.476 --> 00:08:22.196\nSo that's kind of a little difference in\nbehavior there between dash i and dash u.\n\n159\n00:08:22.196 --> 00:08:27.340\nThere's also V and H which give us\na bit more of a user-friendly screen.\n\n160\n00:08:27.340 --> 00:08:30.277\nMost systems default to having V and\nH turned on already,\n\n161\n00:08:30.277 --> 00:08:32.541\nH means give me human\nreadable file sizes and\n\n162\n00:08:32.541 --> 00:08:36.659\nV means give me a little status bars as\nit installs it scrolls across the screen.\n\n163\n00:08:36.659 --> 00:08:38.910\nAgain most systems do those by default.\n\n164\n00:08:38.910 --> 00:08:42.842\nSo if I want to install a package really\n-i is the only one I truly need to\n\n165\n00:08:42.842 --> 00:08:43.520\nremember.\n\n166\n00:08:43.520 --> 00:08:46.602\nSo if I look at my files here and\nI already have a copy so\n\n167\n00:08:46.602 --> 00:08:50.080\nI ended up downloading a second copy,\nthere we go.\n\n168\n00:08:50.080 --> 00:08:54.369\nSo if I wanna install Webman,\nI can just say rpm-i,\n\n169\n00:08:54.369 --> 00:08:59.256\ncuz I want to install, and\nthen I can point to that rpm file.\n\n170\n00:08:59.256 --> 00:09:01.330\nAnd that'll start the install.\n\n171\n00:09:01.330 --> 00:09:05.212\nNow, in order to install software,\nyou need to be an administrator.\n\n172\n00:09:05.212 --> 00:09:08.470\nSo when I go to do the install,\nthis is not gonna work for me.\n\n173\n00:09:08.470 --> 00:09:10.872\nWell, actually,\nI didn't even get that far, right?\n\n174\n00:09:10.872 --> 00:09:14.400\nIt didn't try the install\nbecause it's telling me,\n\n175\n00:09:14.400 --> 00:09:18.540\nI looked inside of this file,\nand it's got some dependencies.\n\n176\n00:09:18.540 --> 00:09:22.698\nit needs Perl installed,\nit needs net SSLeay the SSL driver, it\n\n177\n00:09:22.698 --> 00:09:27.484\nneeds some other kind of Perl extensions\nthat I don't know what they are.\n\n178\n00:09:27.484 --> 00:09:30.707\nSo I don't have Perl installed so\nthis whole thing is not gonna work,\n\n179\n00:09:30.707 --> 00:09:32.220\nit's not gonna let me install.\n\n180\n00:09:32.220 --> 00:09:36.727\nRPM can read the metadata inside of the\npackage to find the dependencies that we\n\n181\n00:09:36.727 --> 00:09:39.660\nneed but\nit can't really do anything about it.\n\n182\n00:09:39.660 --> 00:09:42.467\n&gt;&gt; So it kinda rounds up to the same\nwall that from source steps, really.\n\n183\n00:09:42.467 --> 00:09:44.439\n&gt;&gt; Yeah.\n&gt;&gt; You have to know all those dependencies\n\n184\n00:09:44.439 --> 00:09:47.331\nand then if you are missing anything\nyou are gonna go out find them and\n\n185\n00:09:47.331 --> 00:09:49.594\ninstall them so\nthat you can get your RPM to install.\n\n186\n00:09:49.594 --> 00:09:50.121\n&gt;&gt; Yeah and\n\n187\n00:09:50.121 --> 00:09:54.864\nthat's one of the big challenges that\nwe have with RPM is that it doesn't,\n\n188\n00:09:54.864 --> 00:10:00.005\nit does dependency tracking, sort of,\nbut it can't resolve the issues for us.\n\n189\n00:10:00.005 --> 00:10:01.546\n&gt;&gt; Hey, you got a real issue there.\n\n190\n00:10:01.546 --> 00:10:03.152\nGood luck with that, right?\n\n191\n00:10:03.152 --> 00:10:04.276\n[LAUGH]\n&gt;&gt; And it is also is\n\n192\n00:10:04.276 --> 00:10:07.260\nnot a great about giving updates, right?\n\n193\n00:10:07.260 --> 00:10:13.675\nSo if I install webmin version 1.850, and\na new version comes out, 1.9 comes out.\n\n194\n00:10:13.675 --> 00:10:15.790\nRPM doesn't automatically\nupgrade anything.\n\n195\n00:10:15.790 --> 00:10:17.822\nI would have to go and\ndownload the new file and\n\n196\n00:10:17.822 --> 00:10:21.207\nthen install it with the -u option to\ndo the upgrade and get it put in place.\n\n197\n00:10:21.207 --> 00:10:25.925\nSo RPM is not terribly flexible, and\nas a result most of us don't use it.\n\n198\n00:10:25.925 --> 00:10:28.532\nMost of us don't use the RPM utility,\n\n199\n00:10:28.532 --> 00:10:32.480\ninstead we use one of\nthe modern package managers.\n\n200\n00:10:32.480 --> 00:10:36.430\nNow, in the Red Hat world\nthere's actually two kinds of\n\n201\n00:10:36.430 --> 00:10:39.380\ncoexisting package managers right now.\n\n202\n00:10:39.380 --> 00:10:45.900\nThere's YUM, Y-U-M, which is the current\nname one that's supported everywhere, and\n\n203\n00:10:45.900 --> 00:10:52.260\nthen there's DNF which is the new one YUM\nstands for the Yellowdog Update Manager.\n\n204\n00:10:52.260 --> 00:10:56.175\nYellowdog Linux is a version Linux,\nI don't know if it exists anymore.\n\n205\n00:10:56.175 --> 00:11:01.809\nBut it was a fork of Red Hat or really of\nCentOS that was designed to run on a Mac,\n\n206\n00:11:01.809 --> 00:11:06.410\non Mac laptops and so on and\nit was called Yellowdog Linux.\n\n207\n00:11:06.410 --> 00:11:10.920\nAnd they created this package manager,\nit was really cool, that would track and\n\n208\n00:11:10.920 --> 00:11:12.325\nresolve dependencies.\n\n209\n00:11:12.325 --> 00:11:13.968\nAnd it caught on and did so\n\n210\n00:11:13.968 --> 00:11:18.750\nwell that the guy incorporated that\nthe actual Red Hat upstream server.\n\n211\n00:11:18.750 --> 00:11:23.177\nAnd so now it's a part of every Red Hat\ndistro that's out there, Red Hat,\n\n212\n00:11:23.177 --> 00:11:25.620\nCentOS, Fedora, and several others.\n\n213\n00:11:25.620 --> 00:11:27.545\n&gt;&gt; And we're all forever grateful.\n\n214\n00:11:27.545 --> 00:11:28.066\n[LAUGH] It's nice.\n\n215\n00:11:28.066 --> 00:11:31.945\n&gt;&gt; It really is, so\nYUM is everywhere, right?\n\n216\n00:11:31.945 --> 00:11:35.464\nYUM has a little bit of a problem though,\nin that sometimes its database can get\n\n217\n00:11:35.464 --> 00:11:38.360\nreally cluttered and\nit has a hard time tracking dependencies.\n\n218\n00:11:38.360 --> 00:11:41.000\nSo DNF Is a replacement for it.\n\n219\n00:11:41.000 --> 00:11:45.723\nNow DNF is not in Red Hat Linux, and DNF\nis not in CentOS but it is in Fedora, and\n\n220\n00:11:45.723 --> 00:11:47.930\nFedora is like the testing ground.\n\n221\n00:11:47.930 --> 00:11:51.549\nSo in the future DNF will make\ninto the other products and\n\n222\n00:11:51.549 --> 00:11:53.551\nit'll be everywhere, but for\n\n223\n00:11:53.551 --> 00:11:58.329\nright now if you wanna know a command\nthat works everywhere It'll be YUM.\n\n224\n00:11:58.329 --> 00:11:59.821\nYUM works everywhere.\n\n225\n00:11:59.821 --> 00:12:02.502\nAnd the commands are really\nthe same between YUM and\n\n226\n00:12:02.502 --> 00:12:03.880\nDNF if I can swap them out.\n\n227\n00:12:03.880 --> 00:12:08.624\nBut, if I wanted to install the same\npackage, I can say YUM install and\n\n228\n00:12:08.624 --> 00:12:11.935\nthen point to that Webman\nfile to do the install.\n\n229\n00:12:11.935 --> 00:12:15.341\nOr if I DNF it would be DNF install,\nright?\n\n230\n00:12:15.341 --> 00:12:17.397\nSo you just change it for the right tab.\n\n231\n00:12:17.397 --> 00:12:20.751\nSo I'll say YUM install and\npoint to that Webmin file.\n\n232\n00:12:20.751 --> 00:12:22.774\nNow it's gonna look at it and\n\n233\n00:12:22.774 --> 00:12:27.426\nit's going to find that it's\ngot missing dependencies, okay?\n\n234\n00:12:27.426 --> 00:12:32.149\nThe difference here is, actually right\nhere, the difference here is it's okay\n\n235\n00:12:32.149 --> 00:12:36.803\nwith the missing dependencies, and then\nit tries to actually do the install, but\n\n236\n00:12:36.803 --> 00:12:40.640\nits got a number of problems\nhere because I'm not root.\n\n237\n00:12:40.640 --> 00:12:42.030\nI don't have permissions, okay?\n\n238\n00:12:42.030 --> 00:12:44.202\nSo let's change this\ncommand a little bit more.\n\n239\n00:12:44.202 --> 00:12:47.518\nI'm gonna add sudo to the beginning of\nit so that I run it as an administrator.\n\n240\n00:12:47.518 --> 00:12:51.790\nAnd now it's gonna look at it, it's gonna\nfind those missing dependencies and\n\n241\n00:12:51.790 --> 00:12:55.250\nit's gonna say,\ncan I get those from somewhere?\n\n242\n00:12:55.250 --> 00:12:59.423\nAnd YUM maintains a list of repositories,\nservers that are out there in the Internet\n\n243\n00:12:59.423 --> 00:13:01.560\nthat it can go to to\nfind the dependencies.\n\n244\n00:13:01.560 --> 00:13:05.514\nAnd while I'm trying to install\njust one little package,\n\n245\n00:13:05.514 --> 00:13:10.070\nit found 29 other dependent\npackages that I had to have, right?\n\n246\n00:13:10.070 --> 00:13:14.690\nRPM didn't find 29, RPM found like five,\nbut those also had dependencies and so\n\n247\n00:13:14.690 --> 00:13:16.871\nit grows and it gets bigger and bigger.\n\n248\n00:13:16.871 --> 00:13:19.740\nSo here is webmin that I wanna install,\noops.\n\n249\n00:13:20.850 --> 00:13:24.700\nAnd then right after that are the 29\ndependencies which were to be mostly\n\n250\n00:13:24.700 --> 00:13:28.378\nPerl-based but it needs to get\ninstalled in order to support webmin.\n\n251\n00:13:28.378 --> 00:13:31.141\nThat's one of the big\nshining features of YUM,\n\n252\n00:13:31.141 --> 00:13:34.663\nis that it handles all of\nthe dependency mass forming, and so\n\n253\n00:13:34.663 --> 00:13:38.790\nI can say yes to that, and\nnow it's gonna get in there install it.\n\n254\n00:13:38.790 --> 00:13:42.803\nAnd have it up and running on my\nsystem including all the dependencies\n\n255\n00:13:42.803 --> 00:13:43.432\n&gt;&gt; Okay, Don,\n\n256\n00:13:43.432 --> 00:13:47.327\nonce we do have this installed, sometimes\nI've done this where I have installed\n\n257\n00:13:47.327 --> 00:13:49.463\nsomething or\nit might come with the system.\n\n258\n00:13:49.463 --> 00:13:52.920\nNow, I can fire it up and\nthen just see is it installed?\n\n259\n00:13:52.920 --> 00:13:55.470\nYeah, cuz I could type in the command and\nit works.\n\n260\n00:13:55.470 --> 00:13:57.270\nSometimes I need a little\nmore information about it.\n\n261\n00:13:57.270 --> 00:13:58.590\nCan we do that as well?\n\n262\n00:13:58.590 --> 00:14:02.540\n&gt;&gt; Yeah, absolutely.\nSo let's say that I want a utility.\n\n263\n00:14:02.540 --> 00:14:03.990\nI think I've showed you\nMidnight Commander as an example, right?\n\n264\n00:14:03.990 --> 00:14:05.940\nSo I want Midnight Commander.\n\n265\n00:14:05.940 --> 00:14:08.079\nSo I come in here and I run mc Not found.\n\n266\n00:14:08.079 --> 00:14:09.090\nSo it's not installed.\n\n267\n00:14:09.090 --> 00:14:09.991\n&gt;&gt; Not there.\n&gt;&gt; All right,\n\n268\n00:14:09.991 --> 00:14:13.147\nwell I could go find\nthe Midnight Commander website and\n\n269\n00:14:13.147 --> 00:14:17.690\nI could download the RPM from them and\ninstall it if they even have one, right?\n\n270\n00:14:17.690 --> 00:14:19.195\nBut it might be built in.\n\n271\n00:14:19.195 --> 00:14:22.109\nLike Daniel said it might be\npart of the Red Hat or CentOS or\n\n272\n00:14:22.109 --> 00:14:25.890\nFedora libraries, I mean repositories and\nI can just pull it from there.\n\n273\n00:14:25.890 --> 00:14:29.990\nYou can do a YUM list, right?\n\n274\n00:14:29.990 --> 00:14:32.630\nYUM list can look for\na package and find it for you.\n\n275\n00:14:32.630 --> 00:14:36.282\nSo I'm gonna look for mc,\nand so it's gonna look and\n\n276\n00:14:36.282 --> 00:14:40.740\nreach out there and shoot,\nI forgot to sudo that one.\n\n277\n00:14:40.740 --> 00:14:42.390\nSo let me bump up my privileges.\n\n278\n00:14:42.390 --> 00:14:45.570\nAnd now it's gonna go out there and\nit's gonna look, and there it is.\n\n279\n00:14:45.570 --> 00:14:48.199\nI found the package, I found MC.X86_64.\n\n280\n00:14:48.199 --> 00:14:52.320\nNow that's good if you know\nthe name of the package.\n\n281\n00:14:52.320 --> 00:14:55.390\nI knew the package was called MC,\nbut what if I didn't know that?\n\n282\n00:14:55.390 --> 00:14:59.000\nWhat if, I knew it was called\nMidnight Commander, right?\n\n283\n00:14:59.000 --> 00:15:04.340\nIf I do a Yum list Midnight, well,\nit doesn't find anything, right?\n\n284\n00:15:04.340 --> 00:15:07.630\nYou can actually do a YUM search.\n\n285\n00:15:07.630 --> 00:15:11.904\nAnd YUM search, search is not just a file\nname, but the description as well.\n\n286\n00:15:11.904 --> 00:15:16.324\nAnd now when I search by Midnight, it\nfinds MC, right there, user friendly text\n\n287\n00:15:16.324 --> 00:15:20.440\nconsole file manager and visual shell,\nthat's Midnight Commander.\n\n288\n00:15:20.440 --> 00:15:22.578\nI found some other stuff too, like GPM.\n\n289\n00:15:22.578 --> 00:15:27.369\nNot quite sure why GPM turned up but\nit did, and then Perl some kind of local\n\n290\n00:15:27.369 --> 00:15:31.173\ntime, I guess maybe Midnight\nis a keyword inside of time.\n\n291\n00:15:31.173 --> 00:15:32.560\n&gt;&gt; Yeah.\n&gt;&gt; That makes sense.\n\n292\n00:15:32.560 --> 00:15:33.121\n&gt;&gt; Yeah, that makes sense.\n\n293\n00:15:33.121 --> 00:15:36.759\n&gt;&gt; Not quite sure how GPM does it but\nanyhow, so it finds that and it returns as\n\n294\n00:15:36.759 --> 00:15:40.516\nthat's another handy way to find these\npackages to see if they are built in,\n\n295\n00:15:40.516 --> 00:15:44.090\nbecause if they are,\nthen I can just do a sudo yum install mc.\n\n296\n00:15:44.090 --> 00:15:45.320\nI don't need to go and\ndownload the package.\n\n297\n00:15:45.320 --> 00:15:50.091\nIt's already a part of one of the servers'\nrepositories, it finds it and then it says\n\n298\n00:15:50.091 --> 00:15:54.490\nthere's, looks like a GPM is a dependency\nfor MC, so that's why it turned out.\n\n299\n00:15:54.490 --> 00:15:57.440\nAnd so there's how it shows that,\nsearch command searches more than just\n\n300\n00:15:57.440 --> 00:16:00.260\na file name, really powerful way\nto find what's already installed.\n\n301\n00:16:00.260 --> 00:16:03.420\n&gt;&gt; All right Don, let's say we throw\nin our commander on our system,\n\n302\n00:16:03.420 --> 00:16:07.329\nwe are like yeah this All right, I guess,\nbut I don't really see myself using it.\n\n303\n00:16:07.329 --> 00:16:10.940\nAnd now it's just taking up space, what\nif I wanna get that off of the system?\n\n304\n00:16:10.940 --> 00:16:13.750\n&gt;&gt; Then you'd just do a sudo yum erase,\nand\n\n305\n00:16:13.750 --> 00:16:16.981\nwe can erase that and\nget it right out of there.\n\n306\n00:16:16.981 --> 00:16:19.140\nNow, this is one of the commands\nthat actually deviates.\n\n307\n00:16:19.140 --> 00:16:22.950\nI know I said, with DNF,\neverything was the same, so yum install,\n\n308\n00:16:22.950 --> 00:16:25.130\ndnf install, yum list, dnf list.\n\n309\n00:16:25.130 --> 00:16:28.730\nWell, this one's a little different\nbecause it's yum erase and\n\n310\n00:16:28.730 --> 00:16:30.450\nit's dnf remove.\n\n311\n00:16:30.450 --> 00:16:32.339\nSo I don't know why they changed that,\nbut they did.\n\n312\n00:16:32.339 --> 00:16:35.110\nSo if I wanna get rid of\nMidnight Commander, I can do that.\n\n313\n00:16:35.110 --> 00:16:37.310\nAnd you can actually do more than\none package at the same time.\n\n314\n00:16:37.310 --> 00:16:40.007\nSo if I wanna get rid of\nMidnight Commander and webmin,\n\n315\n00:16:40.007 --> 00:16:42.240\nyou just do a space in each package name.\n\n316\n00:16:42.240 --> 00:16:43.080\nSame thing with install,\n\n317\n00:16:43.080 --> 00:16:46.180\nI could install more than one package\nat the same time by doing that.\n\n318\n00:16:46.180 --> 00:16:48.198\nSo there it's gonna remove\nMidnight Commander and webmin.\n\n319\n00:16:48.198 --> 00:16:52.429\nGet them both out of there, I'll say yes,\nand now they're getting removed and\n\n320\n00:16:52.429 --> 00:16:54.230\ntaken off of the system.\n\n321\n00:16:54.230 --> 00:16:57.357\nAnd there they go, so they're erased,\nverified they're gone, and\n\n322\n00:16:57.357 --> 00:16:58.426\nnow software's gone.\n\n323\n00:16:58.426 --> 00:17:01.271\n&gt;&gt; All right, now here's one of the\nproblems that you'll run into when you're\n\n324\n00:17:01.271 --> 00:17:02.480\ninstalling software.\n\n325\n00:17:02.480 --> 00:17:05.225\nFrom time to time, this happens right,\nyou run over here, you go yum.\n\n326\n00:17:05.225 --> 00:17:12.190\nYes, I'm going to install x software, yum\ninstall x software, and not found, right?\n\n327\n00:17:12.190 --> 00:17:15.710\nOkay let's do the list, let's do the\nsearching options that Don has showed us.\n\n328\n00:17:15.710 --> 00:17:18.440\nAnd we're not finding anything, all right,\nlet me go to their website, well,\n\n329\n00:17:18.440 --> 00:17:20.220\nthere it is.\n\n330\n00:17:20.220 --> 00:17:23.980\nBut I wanna pull it, I wanna be able\nto use yum without having to just\n\n331\n00:17:23.980 --> 00:17:27.300\ndownload it from their website,\nhow can we fix that if possible?\n\n332\n00:17:27.300 --> 00:17:29.100\n&gt;&gt; All right, we can certainly\ndownload from the website, right?\n\n333\n00:17:29.100 --> 00:17:30.840\nThat's what I did at\nthe beginning of the show.\n\n334\n00:17:30.840 --> 00:17:32.884\nThe negative there is, one,\nyou gotta do it, right?\n\n335\n00:17:32.884 --> 00:17:34.760\nYou gotta go and download the file.\n\n336\n00:17:34.760 --> 00:17:37.435\nBut the other negative is upgrades,\nwhen an upgrade comes out,\n\n337\n00:17:37.435 --> 00:17:38.832\nwe don't know about it, right?\n\n338\n00:17:38.832 --> 00:17:44.347\nWhen you run yum, if I come in here and\nsay sudo yum update.\n\n339\n00:17:44.347 --> 00:17:48.500\nIt will look for every installed package,\nand see if there's a new version.\n\n340\n00:17:48.500 --> 00:17:53.430\nIt found 29 packages on my\nservers that all have updates.\n\n341\n00:17:53.430 --> 00:17:57.350\nBut webmin won't be one of them,\nbecause it doesn't have a way to check and\n\n342\n00:17:57.350 --> 00:17:58.960\nsee if webmin has an update.\n\n343\n00:17:58.960 --> 00:18:01.298\nBecause I just installed from\nan RPM file that I downloaded.\n\n344\n00:18:01.298 --> 00:18:04.682\nAnd that RPM file sitting on my hard\ndrive is still the same as it was before,\n\n345\n00:18:04.682 --> 00:18:06.970\nso it has no idea that\na new version is out.\n\n346\n00:18:06.970 --> 00:18:10.130\nSo that's one of the challenges we have\nwith going out and downloading software.\n\n347\n00:18:10.130 --> 00:18:11.760\nWhile we can do it,\n\n348\n00:18:11.760 --> 00:18:15.560\nIt's not necessarily the greatest\nway because of the maintenance.\n\n349\n00:18:15.560 --> 00:18:19.200\nAny time a new version comes out, I've\ngot to go and manually do that update.\n\n350\n00:18:19.200 --> 00:18:22.510\nSo when you download the software,\ndon't just jump in and\n\n351\n00:18:22.510 --> 00:18:25.060\ndownload the package,\ndo a little reading on the site.\n\n352\n00:18:25.060 --> 00:18:27.496\nCuz a lot of times,\nwhat you'll find, like with webmin,\n\n353\n00:18:27.496 --> 00:18:31.053\nif I go into the documentation, they've\ngot the instructions for installing RPM.\n\n354\n00:18:31.053 --> 00:18:37.740\nBut they've also got instructions for\nusing the Webmin YUM repository.\n\n355\n00:18:37.740 --> 00:18:40.901\nThey actually have a repo set up and\nI can point to that.\n\n356\n00:18:40.901 --> 00:18:44.867\nAnd now, whenever I run yum update, it'll\nlook at all the normal repositories, and\n\n357\n00:18:44.867 --> 00:18:47.040\nit'll look at Webmin's repository.\n\n358\n00:18:47.040 --> 00:18:51.710\nIt will find new versions of\nthe software and install them, right?\n\n359\n00:18:51.710 --> 00:18:56.947\nNow, yum tracks all of its\nrepositories in /etc//yum.repost.d.\n\n360\n00:18:56.947 --> 00:18:59.174\nDNF does the exact same thing,\n\n361\n00:18:59.174 --> 00:19:04.170\nit actually uses /etc/yum even\nthough it's the DNF command.\n\n362\n00:19:04.170 --> 00:19:07.090\nAnd that's because they're trying\nto be backwards compatible, right?\n\n363\n00:19:07.090 --> 00:19:10.820\nSo if I go and take a look at that folder,\nthis is almost done.\n\n364\n00:19:10.820 --> 00:19:14.460\nIf I go and take a look at that folder,\nI'll find existing repos that are already\n\n365\n00:19:14.460 --> 00:19:18.300\nsitting there, that are what yum has\nbeen using this whole episode, right?\n\n366\n00:19:18.300 --> 00:19:20.840\nAnd if you installed Red Hat Enterprise\nLinux, it will be their repos.\n\n367\n00:19:20.840 --> 00:19:23.665\nIf you installed CentOS,\nit will be theirs or Fedora.\n\n368\n00:19:23.665 --> 00:19:26.992\nThey've each got their own set\nof repos that they key off of.\n\n369\n00:19:26.992 --> 00:19:30.759\nBut if we want to install\nthird party software,\n\n370\n00:19:30.759 --> 00:19:33.620\nthey can give us additional repos.\n\n371\n00:19:33.620 --> 00:19:38.043\nAnd here's the text that I need\nto use Webmin's repo, right?\n\n372\n00:19:38.043 --> 00:19:44.960\nSo they're telling me that I can look\nat download.webmin.com/download/yum.\n\n373\n00:19:44.960 --> 00:19:49.250\nAnd in there, I'll find a mirror list\nwith the packages that I need and\n\n374\n00:19:49.250 --> 00:19:53.540\nthe information that I want to be able to\nlook for updates and go in and install it.\n\n375\n00:19:53.540 --> 00:19:55.430\nSo I'm wanna add that,\nI'm just having to wait for\n\n376\n00:19:55.430 --> 00:19:57.510\nthis to finish doing some kind of cleanup.\n\n377\n00:19:57.510 --> 00:20:01.140\nWhile I'm waiting, let me explain another\nconcept that goes along with this.\n\n378\n00:20:01.140 --> 00:20:05.695\nI can trust the CentOS repos, or\nI can trust the Red Hat repos,\n\n379\n00:20:05.695 --> 00:20:07.983\ncuz I know they maintain them.\n\n380\n00:20:07.983 --> 00:20:10.940\nBut what about Webmin,\ndo I trust their repo?\n\n381\n00:20:10.940 --> 00:20:12.839\nMaybe, right, but it is possible,\n\n382\n00:20:12.839 --> 00:20:15.793\nthere's been a couple of cases\nwhere they get attacked.\n\n383\n00:20:15.793 --> 00:20:18.350\nAnd their files get modified, and\nmalware gets tagged onto them.\n\n384\n00:20:18.350 --> 00:20:21.340\nAnd now I'm downloading\nmalware onto my system.\n\n385\n00:20:21.340 --> 00:20:24.900\nThat's bad because when we run yum,\nwe run it as a root user, as a sudo user.\n\n386\n00:20:24.900 --> 00:20:26.851\n&gt;&gt; Yeah, CCCleaner or the CCleaner or\n\n387\n00:20:26.851 --> 00:20:28.287\nwhatever it was-\n&gt;&gt; That was a big one, yeah.\n\n388\n00:20:28.287 --> 00:20:30.284\n&gt;&gt; Yeah, that just happened,\nand it's still malware.\n\n389\n00:20:30.284 --> 00:20:32.990\n&gt;&gt; Yeah, the Transmission BitTorrent\nclient, it happened to them too.\n\n390\n00:20:32.990 --> 00:20:35.497\nSo when developers post their own repo,\n\n391\n00:20:35.497 --> 00:20:38.550\nalways look to see if\nthey post security keys.\n\n392\n00:20:38.550 --> 00:20:41.770\nThey'll usually post keys so that you\ncan verify the authenticity of the file.\n\n393\n00:20:41.770 --> 00:20:44.400\nAnd sure enough, I've got that right here,\nif I just look down,\n\n394\n00:20:44.400 --> 00:20:48.150\nthey've got the command to download their\nsecurity key, and then to install it.\n\n395\n00:20:48.150 --> 00:20:50.990\nAnd notice, when they install it,\nthey're using the rpm utility,\n\n396\n00:20:50.990 --> 00:20:53.850\nright, security keys\ndon't dynamically update.\n\n397\n00:20:53.850 --> 00:20:57.076\nYou wouldn't wanna use yum, you'd just\nuse rpm, and it installs that key.\n\n398\n00:20:57.076 --> 00:20:59.727\nAnd now we'll trust the software\nthat comes from that vendor,\n\n399\n00:20:59.727 --> 00:21:01.880\nthat's really important, all right?\n\n400\n00:21:01.880 --> 00:21:09.466\nSo if I go back to my server, there we go,\nI can go into /etc/yum.repos.d.\n\n401\n00:21:09.466 --> 00:21:12.690\nAnd I can take a look in there,\nand I'll see some repos, right?\n\n402\n00:21:12.690 --> 00:21:18.970\nI've got the Red Hat repository, or\nthe RHUI, that's their utilities.\n\n403\n00:21:18.970 --> 00:21:20.650\nI've got a few other\nthings that are in here,\n\n404\n00:21:20.650 --> 00:21:23.780\nthat are all part of\nthe official repositories.\n\n405\n00:21:23.780 --> 00:21:26.740\nAnd what I can do is create another\ntext file in here, I'll do sudo vi,\n\n406\n00:21:26.740 --> 00:21:30.330\ncuz you have to be an administrator\nto write to this folder.\n\n407\n00:21:30.330 --> 00:21:33.578\nAnd I'm gonna create a file\ncalled webim.repo, all right,\n\n408\n00:21:33.578 --> 00:21:35.400\nyou can call it whatever you want.\n\n409\n00:21:35.400 --> 00:21:38.100\nYou can call it Bob, but\nit does need to end in .repo so\n\n410\n00:21:38.100 --> 00:21:39.841\nthat it knows what you're doing.\n\n411\n00:21:39.841 --> 00:21:40.905\nAnd then in that file,\n\n412\n00:21:40.905 --> 00:21:44.190\nI'm just gonna paste the text\nright from their website, right?\n\n413\n00:21:44.190 --> 00:21:47.026\nIt's got all the information for\nthat repository right there, and\n\n414\n00:21:47.026 --> 00:21:48.830\nmore importantly it's got enabled=1.\n\n415\n00:21:48.830 --> 00:21:52.038\nIf I change it to enabled=0,\nthen it knows about the repository, but\n\n416\n00:21:52.038 --> 00:21:53.490\nit doesn't look at it, right?\n\n417\n00:21:53.490 --> 00:21:55.169\nSo we can turn them on and off as we need.\n\n418\n00:21:55.169 --> 00:21:58.508\nSo I'm gonna set that,\nI'll save that file, and\n\n419\n00:21:58.508 --> 00:22:02.254\nnow we've got a repository\nthat we can look at, right?\n\n420\n00:22:02.254 --> 00:22:05.294\nIf I do a sudo yum list webmin, before,\n\n421\n00:22:05.294 --> 00:22:11.600\nwebmin wasn't a part of the official\nrepository, so it wouldn't find it.\n\n422\n00:22:11.600 --> 00:22:14.752\nBut now,\nit has this other repository to look at.\n\n423\n00:22:14.752 --> 00:22:18.492\nAnd it can look, and sure enough, it found\nit right there in the webmin repository.\n\n424\n00:22:18.492 --> 00:22:23.940\nHere's webmin.noarch, right,\nso I can get it installed,\n\n425\n00:22:23.940 --> 00:22:27.530\nbut that developer uses security keys.\n\n426\n00:22:27.530 --> 00:22:31.393\nSo if I try to install it, if I do\na sudo yum install webmin, all right?\n\n427\n00:22:31.393 --> 00:22:35.891\nIt's gonna look at the repositories,\nit's gonna find it, there it is,\n\n428\n00:22:35.891 --> 00:22:37.710\nfrom the webmin repository.\n\n429\n00:22:37.710 --> 00:22:40.584\nI'll say yes to install it, and\nit's gonna go to install it.\n\n430\n00:22:40.584 --> 00:22:45.450\nIt's gonna download it, and it's gonna\nfail because of the security keys.\n\n431\n00:22:45.450 --> 00:22:50.449\nI don't have a way to verify that\nthat file hasn't been tampered with.\n\n432\n00:22:50.449 --> 00:22:54.643\nSo I need to go back here and\nget the key installed, okay?\n\n433\n00:22:54.643 --> 00:22:59.240\nSo I'll copy that text and\nI'm going to paste it in.\n\n434\n00:22:59.240 --> 00:23:02.331\nThe first command, that wget,\njust downloads the key files,\n\n435\n00:23:02.331 --> 00:23:04.470\nit's an ASCII text key file.\n\n436\n00:23:04.470 --> 00:23:07.580\nThe second command, the rpm command,\nis going to install it.\n\n437\n00:23:07.580 --> 00:23:09.826\nAnd I need to sudo that,\nthey didn't do that in their notes.\n\n438\n00:23:09.826 --> 00:23:11.986\nBut I need to do that, cuz you have to\nbe an administrator to add the keys.\n\n439\n00:23:11.986 --> 00:23:14.230\n&gt;&gt; You don't log in as root, Don, [LAUGH]?\n\n440\n00:23:14.230 --> 00:23:17.892\n&gt;&gt; I try not to, [LAUGH] but once I've\ngot that done, now I've got the key.\n\n441\n00:23:17.892 --> 00:23:20.785\nAnd now I can go and\ntry to install it again.\n\n442\n00:23:20.785 --> 00:23:25.620\nAnd now it'll be able to verify that\nthe file hasn't been tampered with, right?\n\n443\n00:23:25.620 --> 00:23:28.818\nSo as it looks, it finds it,\nit downloads it.\n\n444\n00:23:28.818 --> 00:23:31.635\nIt's going to install it,\nand it will verify that key.\n\n445\n00:23:31.635 --> 00:23:35.120\nAnd if it's the very first time I've done\nthis, it might ask me whether I accept\n\n446\n00:23:35.120 --> 00:23:37.530\nthe fingerprint of the key,\nto make sure the key is valid.\n\n447\n00:23:37.530 --> 00:23:40.480\nI know the key is valid cuz I just\ndownloaded it right from the vendor.\n\n448\n00:23:40.480 --> 00:23:43.359\nBut in theory, an attacker could\ncompromise the key on the site.\n\n449\n00:23:43.359 --> 00:23:48.920\nIn my case, it was okay with it, and\nit says that it's up and installed.\n\n450\n00:23:48.920 --> 00:23:53.478\nSays I can use it, I can, say,\ntest and find out, let me try and\n\n451\n00:23:53.478 --> 00:23:54.944\nbrowse the server.\n\n452\n00:23:54.944 --> 00:24:02.456\nIt uses a secure page, and\nport 10000, and I'll browse.\n\n453\n00:24:02.456 --> 00:24:06.318\nIt's using a self signed certificate,\nso I'll just clear past that, and\n\n454\n00:24:06.318 --> 00:24:09.702\nI'll get the Webmin login so\nI know the package is up and running.\n\n455\n00:24:09.702 --> 00:24:13.334\nAnd even better,\nbecause I installed it with yum,\n\n456\n00:24:13.334 --> 00:24:17.808\nnow anytime I want I can do a pseudo\nyum update and it will look for\n\n457\n00:24:17.808 --> 00:24:22.453\nupdates for all of my operating\nsystem files as well as updates for\n\n458\n00:24:22.453 --> 00:24:27.350\nWebmin and so if a Webmin update\ncomes out, it will find it.\n\n459\n00:24:27.350 --> 00:24:30.800\nApply the update and now we don't have\nto go back to the vendor website again,\n\n460\n00:24:30.800 --> 00:24:32.240\neverything is nice and automated.\n\n461\n00:24:32.240 --> 00:24:34.040\nIt's the important part of how we use yum.\n\n462\n00:24:34.040 --> 00:24:36.240\n&gt;&gt; That's a slice of heaven\non earth right there and\n\n463\n00:24:36.240 --> 00:24:39.350\nI hate having to jump around from website\nto website having to look, well this,\n\n464\n00:24:39.350 --> 00:24:41.070\nthey have an update ready for me\n&gt;&gt; And\n\n465\n00:24:41.070 --> 00:24:44.400\nnow I've got it downloaded installed and\ngo through that, let just the package\n\n466\n00:24:44.400 --> 00:24:48.590\nmanager do all the heavy lifting for me,\nthat's my kind of admining right there.\n\n467\n00:24:48.590 --> 00:24:52.620\nNow Don, from time to tim,e I don't\nuse a lot of Red hat based systems.\n\n468\n00:24:52.620 --> 00:24:55.860\nEvery now and then I have CentOS\nbox that I'll jump on and\n\n469\n00:24:55.860 --> 00:24:57.450\nI've noticed that every now and\n\n470\n00:24:57.450 --> 00:24:59.800\nthen I've gotta do something with EPEL\n&gt;&gt; What.\n\n471\n00:24:59.800 --> 00:25:01.940\n&gt;&gt; Yeah.\n&gt;&gt; I know we got a little bit of time.\n\n472\n00:25:01.940 --> 00:25:03.420\n&gt;&gt; Sure.\n&gt;&gt; I don't understand that, what is that?\n\n473\n00:25:03.420 --> 00:25:10.250\n&gt;&gt; Yeah so CentOS and Red Hat,\nthey focus on stability.\n\n474\n00:25:10.250 --> 00:25:13.560\nNot necessarily the latest and\ngreatest features and so\n\n475\n00:25:13.560 --> 00:25:15.750\na lot of times when yo go\nto download a package.\n\n476\n00:25:15.750 --> 00:25:19.750\nIt might depend on a particular\nversion of a library that Red Hat or\n\n477\n00:25:19.750 --> 00:25:21.000\nCentOS just don't have.\n\n478\n00:25:21.000 --> 00:25:27.100\nSo maybe I have some software and\nit needs glibc 1.7, but in the official\n\n479\n00:25:27.100 --> 00:25:32.230\nRed Hat repository, the official CentOS\nrepository, it's just glibc 1.6.\n\n480\n00:25:32.230 --> 00:25:34.600\nWhat do you do then,\nyou can't meet the dependency,\n\n481\n00:25:34.600 --> 00:25:36.330\nyou can't install the software, and\n\n482\n00:25:36.330 --> 00:25:40.270\nthat's because it's not officially\nsupported by Red Hat or CentOS yet.\n\n483\n00:25:40.270 --> 00:25:44.420\nFedora on the other hand,\nFedora is the testing bed for Red Hat and\n\n484\n00:25:44.420 --> 00:25:48.680\nthey'll have 1.7 maybe 1.8, they always\nhave the latest and greatest as what's\n\n485\n00:25:48.680 --> 00:25:53.302\nfound in Fedora, so what they did is they\ncreated a special repository called EPEL.\n\n486\n00:25:53.302 --> 00:25:58.280\nAnd it's the EPEL repository and\nit has the Fedora\n\n487\n00:25:58.280 --> 00:26:02.770\npackages that can be installed on\nRed Hat Enterprise Linux or CentOS.\n\n488\n00:26:02.770 --> 00:26:05.950\nSo you can get a newer versions of stuff\nin them or would normally be available.\n\n489\n00:26:05.950 --> 00:26:09.670\nNow it's not officially supported, so\nanything you install with EPEL could\n\n490\n00:26:09.670 --> 00:26:13.140\npotentially break your system\n&gt;&gt; On a workstation that's not a big deal,\n\n491\n00:26:13.140 --> 00:26:15.650\non a server it's not a good idea.\n\n492\n00:26:15.650 --> 00:26:19.220\nAll right, but you'll find\na lot of people reference that.\n\n493\n00:26:19.220 --> 00:26:23.620\nAnd in the future do like a quick\nGoogle search for EPEL repo.\n\n494\n00:26:23.620 --> 00:26:24.900\nYou'll find it.\n\n495\n00:26:24.900 --> 00:26:27.402\nSo here's the FedoraProject wiki for it.\n\n496\n00:26:27.402 --> 00:26:29.720\nAnd they tell you all about EPEL and\nwhat it is.\n\n497\n00:26:29.720 --> 00:26:32.810\nIf you're using Fedora,\nyou've likely already got it.\n\n498\n00:26:32.810 --> 00:26:34.010\nIf you're CentOS,\n\n499\n00:26:34.010 --> 00:26:38.465\nyou can install it pretty easy, on RedHat\nit's actually not so easy to install it.\n\n500\n00:26:38.465 --> 00:26:42.256\n&gt;&gt; [LAUGH]\n&gt;&gt; On CentOS, all you would do let's say\n\n501\n00:26:42.256 --> 00:26:50.190\nyum, sudo, yum install EPEL dash release,\nthat command right there, all right?\n\n502\n00:26:50.190 --> 00:26:55.220\nAnd on CentOS,\nthey actually have an EPEL repo package\n\n503\n00:26:55.220 --> 00:26:58.440\nin the normal repo, right,\nbut you choose to install it.\n\n504\n00:26:58.440 --> 00:26:59.090\nAnd when you run that,\n\n505\n00:26:59.090 --> 00:27:00.330\nit gets it installed\n&gt;&gt; But\n\n506\n00:27:00.330 --> 00:27:02.640\nin Red Hat, they don't support that.\n\n507\n00:27:02.640 --> 00:27:05.990\nAnd so they don't have\nthe EPEL library available.\n\n508\n00:27:05.990 --> 00:27:10.220\nBut if you go to the EPEL website, you'll\nfind where they've got the instructions\n\n509\n00:27:10.220 --> 00:27:13.540\nand where you can browse their packages,\nand get installed and set up.\n\n510\n00:27:13.540 --> 00:27:15.860\nThere's a link in here somewhere\nthat says like, how do I use it.\n\n511\n00:27:15.860 --> 00:27:19.300\nNot how do I contribute, but here,\nhow can I use these packages?\n\n512\n00:27:19.300 --> 00:27:20.970\nAnd they give a link to pull.\n\n513\n00:27:20.970 --> 00:27:24.090\nSo I'm running Red Hat Enterprise Linux 7,\nor at least I think I am.\n\n514\n00:27:24.090 --> 00:27:25.140\nLet's find out.\n\n515\n00:27:25.140 --> 00:27:27.680\nI will do a host, hostname.\n\n516\n00:27:27.680 --> 00:27:28.430\nAll right?\n\n517\n00:27:28.430 --> 00:27:29.250\n&gt;&gt; No you won't.\n\n518\n00:27:29.250 --> 00:27:31.410\n&gt;&gt; hostnamectl, there we go.\n\n519\n00:27:31.410 --> 00:27:33.576\nSo I am running\nRed Hat Enterprise Linux 7.4.\n\n520\n00:27:33.576 --> 00:27:36.720\nSo on the EPEL website, I can come in and\n\n521\n00:27:36.720 --> 00:27:40.930\nfind the newest version of\nEPEL release for EL 7, right?\n\n522\n00:27:40.930 --> 00:27:42.070\nThat's what I want.\n\n523\n00:27:42.070 --> 00:27:46.780\nAnd you can just copy that link and\nthen back on your server,\n\n524\n00:27:46.780 --> 00:27:50.020\nyou can say, sudo yum install and\npaste that in.\n\n525\n00:27:50.020 --> 00:27:55.337\nAnd it's gonna reach out and\ngrab that EPEL release package, right?\n\n526\n00:27:55.337 --> 00:27:55.926\n&gt;&gt; Space between.\n\n527\n00:27:55.926 --> 00:27:56.508\n&gt;&gt; There.\n&gt;&gt; Did I spell it wrong?\n\n528\n00:27:56.508 --> 00:27:58.472\n&gt;&gt; There's a space between.\n&gt;&gt; Space, there we go.\n\n529\n00:27:58.472 --> 00:28:01.000\nSo it'll install it.\n\n530\n00:28:01.000 --> 00:28:03.830\nAnd what it's really doing\nis not installing software,\n\n531\n00:28:03.830 --> 00:28:06.600\njust adding that file.\n\n532\n00:28:06.600 --> 00:28:12.450\nIf I go into \\etc\\yum.repos.d\\ and look,\n\n533\n00:28:12.450 --> 00:28:17.440\nyou'll see where it's added epel.repo and\nepel-testing.repo and\n\n534\n00:28:17.440 --> 00:28:20.485\nthat one's dangerous,\nlet me tell you it's not quite safe.\n\n535\n00:28:20.485 --> 00:28:25.430\n&gt;&gt; [LAUGH]\n&gt;&gt; And if I look at that file, if I If I\n\n536\n00:28:25.430 --> 00:28:30.120\npull up the EPEL testing,\none sales got enabled equals zero.\n\n537\n00:28:30.120 --> 00:28:31.550\nIt's not turned on.\n\n538\n00:28:31.550 --> 00:28:32.680\nSo I don't have to worry about.\n\n539\n00:28:32.680 --> 00:28:35.120\nI could turn on if I wanted but\nit's turned off by default.\n\n540\n00:28:35.120 --> 00:28:38.340\nVersus if I just look at epel.repo,\nthat one is, actually,\n\n541\n00:28:38.340 --> 00:28:42.240\nit was not turned on either by default.\n\n542\n00:28:42.240 --> 00:28:43.879\nWait, that's EPEL source.\n\n543\n00:28:43.879 --> 00:28:45.450\nWhere's actual, up here.\n\n544\n00:28:45.450 --> 00:28:45.990\nThere we go.\n\n545\n00:28:45.990 --> 00:28:46.890\nThey're full on EPEL.\n\n546\n00:28:46.890 --> 00:28:47.986\nThat one right there.\n\n547\n00:28:47.986 --> 00:28:49.066\nEnabled equals one.\n\n548\n00:28:49.066 --> 00:28:52.320\nAnd so now there might be\nsome software that I want.\n\n549\n00:28:52.320 --> 00:28:55.770\nIt's not in the normal repo and\nnow I can go in and find it.\n\n550\n00:28:55.770 --> 00:29:00.760\nSo the Guake terminal that I used,\nI don't think that's in the normal repo.\n\n551\n00:29:00.760 --> 00:29:05.253\nBut now if I come in and I do a yum list,\nsudo that, it'll go out on a look, and\n\n552\n00:29:05.253 --> 00:29:10.062\nit's looking not just in the regular\nrepositories but it's also looking EPEL.\n\n553\n00:29:10.062 --> 00:29:13.696\nSo there's Guake, and\nif I look way over here on the right,\n\n554\n00:29:13.696 --> 00:29:16.310\nit found it in the EPEL repository.\n\n555\n00:29:16.310 --> 00:29:18.320\nRed Hat doesn't officially support Guake.\n\n556\n00:29:18.320 --> 00:29:19.395\nWorked fine, though.\n\n557\n00:29:19.395 --> 00:29:20.630\n&gt;&gt; [LAUGH]\n&gt;&gt; And I can get it from EPEL.\n\n558\n00:29:20.630 --> 00:29:22.160\nSo you'll see people talk about that.\n\n559\n00:29:22.160 --> 00:29:23.740\nThat's a third-party repository.\n\n560\n00:29:23.740 --> 00:29:26.570\nAnd if you trust them, great.\n\n561\n00:29:26.570 --> 00:29:29.800\nBut some of them are pretty\ndodgy that are out there.\n\n562\n00:29:29.800 --> 00:29:33.340\nI know a lot of people like RPMForge,\nand I don't trust them one single bit.\n\n563\n00:29:33.340 --> 00:29:37.270\nBut there's various repositories out\nthere that you may trust or not.\n\n564\n00:29:37.270 --> 00:29:39.440\nAnd you can set up your own repo too.\n\n565\n00:29:39.440 --> 00:29:42.750\nMaybe you have your own in\nhouse developed software.\n\n566\n00:29:42.750 --> 00:29:44.090\nYou can create your own repository and\n\n567\n00:29:44.090 --> 00:29:47.200\npoint your servers to it and you can\ndistribute your own software that way.\n\n568\n00:29:47.200 --> 00:29:50.360\nOr limited versions of public\nsoftwares that you do trust.\n\n569\n00:29:50.360 --> 00:29:53.640\nMaybe I don't want the whole EPEL,\nI just wanna a couple of packages from it.\n\n570\n00:29:53.640 --> 00:29:55.090\nSo I can maintain my own repository.\n\n571\n00:29:55.090 --> 00:29:58.452\nThere is a lot of power that you can\nget when you mess with repositories.\n\n572\n00:29:58.452 --> 00:30:01.310\n&gt;&gt; Don, this is super cool stuff,\nbeing able to manage\n\n573\n00:30:01.310 --> 00:30:04.650\nour software on our systems is\na very important thing obviously.\n\n574\n00:30:04.650 --> 00:30:08.280\nCuz if we can't get tools installed to\ndo work that we need to get done, well,\n\n575\n00:30:08.280 --> 00:30:10.690\nthen we're gonna have a bad day at work,\nthat's for sure.\n\n576\n00:30:10.690 --> 00:30:11.700\nAnd someone's gonna be looking for\n\n577\n00:30:11.700 --> 00:30:13.375\nsomebody that does know\nhow to get that happening.\n\n578\n00:30:13.375 --> 00:30:14.160\n&gt;&gt; [LAUGH]\n&gt;&gt; Now, Don,\n\n579\n00:30:14.160 --> 00:30:17.860\nI think you've done a masterful job\nof showing us how we can use yum and\n\n580\n00:30:17.860 --> 00:30:21.810\nRPM and working with the repositories\ninside a Red Hat based systems,\n\n581\n00:30:21.810 --> 00:30:25.570\nvery very cool stuff and\neven learned a few things myself today.\n\n582\n00:30:25.570 --> 00:30:28.360\nVery very cool, Don thanks for\njoining us today, I appreciate it for\n\n583\n00:30:28.360 --> 00:30:29.150\nyou showing up today.\n\n584\n00:30:29.150 --> 00:30:31.250\nI also appreciate our audience for\nwatching.\n\n585\n00:30:31.250 --> 00:30:34.630\nI know we thoroughly appreciate\nour audience everyday,\n\n586\n00:30:34.630 --> 00:30:36.450\nas you guys are what make\nthe magic happen here.\n\n587\n00:30:36.450 --> 00:30:39.840\nBut it does look like we're\nout of time for this episode.\n\n588\n00:30:39.840 --> 00:30:43.640\nDon't worry though, we have plenty of\nother shows going on if not this one,\n\n589\n00:30:43.640 --> 00:30:47.150\nI don't know if we're continuing on,\nbut signing off for\n\n590\n00:30:47.150 --> 00:30:49.660\nITProTV, I've been your\nhost Daniel Lowrie.\n\n591\n00:30:49.660 --> 00:30:50.290\n&gt;&gt; And I'm Don Pezet.\n\n592\n00:30:50.290 --> 00:30:53.329\n&gt;&gt; And we'll see you next time.\n\n593\n00:30:53.329 --> 00:30:59.178\n[MUSIC]\n\n594\n00:30:59.178 --> 00:31:00.840\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "236473728"
        },
        {
          "description": "In this episode, Don explains how not every application is provided in a nice package. He then demonstrates how you can build software from the original source code. He also explains some scenarios where you may chose to build from source even when a package is available.",
          "length": "1487",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-5-3-1-installing_from_source-092617-CLN.00_24_31_27.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-5-3-1-installing_from_source-092617-CLN.00_24_31_27.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-5-3-1-installing_from_source-092617-CLN.00_24_31_27.Still001-sm.jpg",
          "title": "Installing from Source",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:00.894\nWelcome to ITProTV.\n\n2\n00:00:00.894 --> 00:00:02.558\nI'm your host Don Pezet.\n\n3\n00:00:02.558 --> 00:00:06.397\n&gt;&gt; [CROSSTALK]\n\n4\n00:00:06.397 --> 00:00:08.158\n[MUSIC]\n\n5\n00:00:08.158 --> 00:00:12.165\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:12.165 --> 00:00:13.495\n&gt;&gt; All right greetings everyone.\n\n7\n00:00:13.495 --> 00:00:16.465\nWe wanna welcome back to another\ngreat episode of ITProTV.\n\n8\n00:00:16.465 --> 00:00:19.605\nI'm your host, Daniel Lowrie, and\nin today's episode, we're back with more\n\n9\n00:00:19.605 --> 00:00:22.556\nin our Linux Command Line series, and\nof course, joining us in the studio,\n\n10\n00:00:22.556 --> 00:00:25.602\nit would be like a day without sunshine\nif we didn't have our good friend, Mr.\n\n11\n00:00:25.602 --> 00:00:26.966\nDon Pezet joining us today again.\n\n12\n00:00:26.966 --> 00:00:28.015\nDon, how's it going, man?\n\n13\n00:00:28.015 --> 00:00:29.204\n&gt;&gt; It is going just swell, and\n\n14\n00:00:29.204 --> 00:00:31.595\nwe're diving right back into\nthe Linux command line.\n\n15\n00:00:31.595 --> 00:00:32.603\nIn this episode,\n\n16\n00:00:32.603 --> 00:00:37.121\nwe're gonna be taking a look at how to\nInstall an application from source code.\n\n17\n00:00:37.121 --> 00:00:38.610\n&gt;&gt; [LAUGH]\n&gt;&gt; Basically building an app.\n\n18\n00:00:38.610 --> 00:00:40.275\nI like to say building it from scratch,\nbut\n\n19\n00:00:40.275 --> 00:00:42.091\nyou're not really\nbuilding it from scratch.\n\n20\n00:00:42.091 --> 00:00:42.630\nSomebody else has already made that thing.\n\n21\n00:00:42.630 --> 00:00:44.597\n[LAUGH]\n&gt;&gt; We're programming the entire\n\n22\n00:00:44.597 --> 00:00:45.301\n[LAUGH] thing.\n\n23\n00:00:45.301 --> 00:00:46.334\nNo.\n&gt;&gt; We just need to make it work.\n\n24\n00:00:46.334 --> 00:00:46.920\n&gt;&gt; Yeah.\n&gt;&gt; So\n\n25\n00:00:46.920 --> 00:00:48.851\nin this episode that's\nwhat we're gonna do.\n\n26\n00:00:48.851 --> 00:00:51.760\nNo package managers,\nno automated installers.\n\n27\n00:00:51.760 --> 00:00:54.824\nWe're gonna get source code, turn it into\na working application, get it up and\n\n28\n00:00:54.824 --> 00:00:57.520\nrunning, and we're gonna do it\nall right here in this episode.\n\n29\n00:00:57.520 --> 00:00:59.799\n&gt;&gt; All right,\nwell it sounds like a lot of fun Don, but\n\n30\n00:00:59.799 --> 00:01:03.297\nif anybody has worked with Linux, for\nany length of time, when someone starts\n\n31\n00:01:03.297 --> 00:01:06.814\ntalking about installing from source,\nyou probably get a couple of kickbox.\n\n32\n00:01:06.814 --> 00:01:09.398\nA, why don't you just use one of\nthe package management systems?\n\n33\n00:01:09.398 --> 00:01:11.970\n&gt;&gt; [LAUGH]\n&gt;&gt; They seem to work quite well, and\n\n34\n00:01:11.970 --> 00:01:14.880\nthat's the facto and\ndefault way to do things.\n\n35\n00:01:14.880 --> 00:01:18.770\nSo Don, what would be the advantage,\nwhy would we want to do it this way,\n\n36\n00:01:18.770 --> 00:01:21.155\nespecially since most people find\nthis to be kind of difficult?\n\n37\n00:01:21.155 --> 00:01:23.700\n&gt;&gt; Yeah, as a routine matter of course,\n\n38\n00:01:23.700 --> 00:01:26.410\nI generally don't like to install\nfrom source, if I can avoid it.\n\n39\n00:01:26.410 --> 00:01:29.426\nSo if there is a package,\nif there is an RPM, or a DEB, or\n\n40\n00:01:29.426 --> 00:01:33.927\nwhatever that's available for me to\ndownload, that software's already built,\n\n41\n00:01:33.927 --> 00:01:36.946\nand it makes it a heck of a lot\neasier to get it installed,\n\n42\n00:01:36.946 --> 00:01:39.745\nand so that's the better\nway to do it in most cases.\n\n43\n00:01:39.745 --> 00:01:43.122\nBut there are times when we\ndon't really have a choice.\n\n44\n00:01:43.122 --> 00:01:46.062\nThat choice is taken away from us,\nor there's times where we might have\n\n45\n00:01:46.062 --> 00:01:48.510\na legitimate reason from wanting to,\nfrom source.\n\n46\n00:01:48.510 --> 00:01:50.730\nSo let me run through a couple of reasons.\n\n47\n00:01:50.730 --> 00:01:53.400\nOne, there might not\nbe packages available.\n\n48\n00:01:53.400 --> 00:01:57.312\nThere might be some software that I want\nto install, but there's no RPM, there's no\n\n49\n00:01:57.312 --> 00:02:01.603\ndev, there's no prebuilt package\navailable, all there is a source code.\n\n50\n00:02:01.603 --> 00:02:04.960\nSo if I wanna run it, I don't have a\nchoice, I've got to build it from source,\n\n51\n00:02:04.960 --> 00:02:06.150\nthat's one reason.\n\n52\n00:02:06.150 --> 00:02:11.656\nAnother reason is, maybe it's really\nsensitive software, and you don't trust\n\n53\n00:02:11.656 --> 00:02:17.496\nthe people that built it, and that's not a\nbad thing, we should trust no one, right?\n\n54\n00:02:17.496 --> 00:02:18.581\nWhat was it, the Xbox.\n\n55\n00:02:18.581 --> 00:02:21.645\n[LAUGH] We might be like that.\n\n56\n00:02:21.645 --> 00:02:23.742\nIf you're in a high security environment,\n\n57\n00:02:23.742 --> 00:02:26.520\nyou might require code\nreview of an application.\n\n58\n00:02:26.520 --> 00:02:30.270\nI got to review the code, well even\nif I review the code, if I'm using\n\n59\n00:02:30.270 --> 00:02:35.200\na precompiled binary, who's to say it\nwas built from the same code I reviewed.\n\n60\n00:02:35.200 --> 00:02:39.670\nSo if you wanna be absolutely certain, you\ndownload the source code, you review it.\n\n61\n00:02:39.670 --> 00:02:42.723\nYou look for back doors or\nother security weaknesses.\n\n62\n00:02:42.723 --> 00:02:44.908\nWhen you're confident everything's fine,\n\n63\n00:02:44.908 --> 00:02:48.212\nyou can then compile the software\nyourself from that source code, and\n\n64\n00:02:48.212 --> 00:02:50.970\nnow you know that it's safe,\nit works the way you want it.\n\n65\n00:02:50.970 --> 00:02:52.750\nSo that's another reason\nwhy I might do it.\n\n66\n00:02:52.750 --> 00:02:56.253\nBut both of those are not\nnecessarily the greatest reasons.\n\n67\n00:02:56.253 --> 00:02:58.348\nWell I mean,\nif you're in the security world.\n\n68\n00:02:58.348 --> 00:02:58.980\n&gt;&gt; Yeah [LAUGH].\n\n69\n00:02:58.980 --> 00:02:59.770\n&gt;&gt; That one's pretty good.\n\n70\n00:02:59.770 --> 00:03:04.215\nBut one of the reasons, for me, where I\nwill sometimes build software from source,\n\n71\n00:03:04.215 --> 00:03:08.050\nis because sometimes it can optimized for\nyour hardware architecture.\n\n72\n00:03:08.050 --> 00:03:11.596\nWhen a developer makes a package\nthat package file has to\n\n73\n00:03:11.596 --> 00:03:14.549\ncater to like the lowest\ncommon denominator.\n\n74\n00:03:14.549 --> 00:03:18.508\nSo when they precompile a binary\nthey don't know if you're\n\n75\n00:03:18.508 --> 00:03:23.506\ngonna be running it on a system with\nan Intel processor or an AMD processor.\n\n76\n00:03:23.506 --> 00:03:28.422\nThey don't know if you're gonna be on\nan Intel Xeon, with, 30 MB of L2 cache,\n\n77\n00:03:28.422 --> 00:03:29.726\nor 32, whatever.\n\n78\n00:03:29.726 --> 00:03:32.251\n&gt;&gt; [LAUGH]\n&gt;&gt; Or if you're running on an old Athlon\n\n79\n00:03:32.251 --> 00:03:36.620\nwith only 1 MB of L2 cache, they don't\nknow what hardware you're gonna run.\n\n80\n00:03:36.620 --> 00:03:40.360\nSo they create a generic binary,\nthat'll run on as many\n\n81\n00:03:40.360 --> 00:03:44.140\nhardware architectures as possible,\nwithin usually single architecture.\n\n82\n00:03:44.140 --> 00:03:47.087\nNow, If we want to really take\nadvantage of the bells and\n\n83\n00:03:47.087 --> 00:03:50.663\nwhistles in our processor,\nif we're doing like video and coding,\n\n84\n00:03:50.663 --> 00:03:53.424\nour processor might have\naccelerators in their, or\n\n85\n00:03:53.424 --> 00:03:57.714\nwith encryption, a lot of processors have\nAES acceleration built into the CPU.\n\n86\n00:03:57.714 --> 00:04:01.814\nWell, if we wanna take advantage of that,\nwe can get the source code, and\n\n87\n00:04:01.814 --> 00:04:06.181\nwe could compile it ourselves, and\nwe can use compile options to enable that,\n\n88\n00:04:06.181 --> 00:04:07.460\nthey call them flags.\n\n89\n00:04:07.460 --> 00:04:11.170\nWe can do these flags to enable these\nfeatures because we know we have them.\n\n90\n00:04:11.170 --> 00:04:13.760\nWho cares if the other\ncustomers don't have it, we do.\n\n91\n00:04:13.760 --> 00:04:15.238\nSo let's take advantage of those features.\n\n92\n00:04:15.238 --> 00:04:18.692\nSo sometimes when you\ncompile software from code,\n\n93\n00:04:18.692 --> 00:04:21.353\nyou actually get better performance.\n\n94\n00:04:21.353 --> 00:04:24.183\nIt takes better advantage of\nthe hardware resources that you've got,\n\n95\n00:04:24.183 --> 00:04:27.056\nbecause it was built right on the machine\nthat you intend to run it on, and\n\n96\n00:04:27.056 --> 00:04:28.540\nit's able to see all that hardware.\n\n97\n00:04:28.540 --> 00:04:30.900\n&gt;&gt; Well Don, if it's so\nawesome do to it that way,\n\n98\n00:04:30.900 --> 00:04:33.030\nwhy aren't we doing everything this way?\n\n99\n00:04:33.030 --> 00:04:34.755\n&gt;&gt; Cuz it's a pain in the butt.\n\n100\n00:04:34.755 --> 00:04:36.732\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] You know it used to be\n\n101\n00:04:36.732 --> 00:04:37.634\na nightmare.\n\n102\n00:04:37.634 --> 00:04:40.828\nIt used to be an absolute nightmare\nthat you'd get the source code,\n\n103\n00:04:40.828 --> 00:04:43.079\nand it wasn't good enough\nright out of the box.\n\n104\n00:04:43.079 --> 00:04:45.936\nYou had to go through, and\nedit lines inside the code,\n\n105\n00:04:45.936 --> 00:04:47.815\nand change it to match your system.\n\n106\n00:04:47.815 --> 00:04:51.360\nYou had to put in a bunch of paths, and\nother things, that made it really just\n\n107\n00:04:51.360 --> 00:04:54.920\nextremely difficult, and I remember back\nin the old days like building a custom\n\n108\n00:04:54.920 --> 00:04:58.090\nkernel and stuff, it was an all\nday process, it took a long time.\n\n109\n00:04:58.090 --> 00:04:59.263\n&gt;&gt; Scariest environment imaginable.\n\n110\n00:04:59.263 --> 00:04:59.879\nThat's all you had to say.\n\n111\n00:04:59.879 --> 00:05:01.783\n&gt;&gt; That's all you had to say.\n&gt;&gt; [LAUGH]\n\n112\n00:05:01.783 --> 00:05:03.086\n&gt;&gt; But what you'll see in this episode\n\n113\n00:05:03.086 --> 00:05:04.440\nis that it's not like that anymore.\n\n114\n00:05:04.440 --> 00:05:08.642\nThat there's a lot of utilities that are\navailable that make it super simple for\n\n115\n00:05:08.642 --> 00:05:11.286\nus to be able to compile this and\nget things going.\n\n116\n00:05:11.286 --> 00:05:13.203\nSo that's a really big help, but\n\n117\n00:05:13.203 --> 00:05:16.500\nthe main reason we don't want\nto do this is it's harder.\n\n118\n00:05:16.500 --> 00:05:18.940\nIt's harder than just getting\na package and installing it.\n\n119\n00:05:18.940 --> 00:05:20.950\nBut, there's other negatives as well.\n\n120\n00:05:20.950 --> 00:05:22.740\nIf I install with a package,\n\n121\n00:05:22.740 --> 00:05:26.090\na lot of times I can use a package\nmanager to manage my updates.\n\n122\n00:05:26.090 --> 00:05:30.520\nSo, if a new version comes out,\nI just run yum update, or\n\n123\n00:05:30.520 --> 00:05:33.440\napp update, or app upgrade I guess.\n\n124\n00:05:33.440 --> 00:05:37.313\nWhatever it is I need to do to update the\npackages, and then reach out to repos, and\n\n125\n00:05:37.313 --> 00:05:40.928\npull down the new packages, and\nupdate them, all nice and automatic like.\n\n126\n00:05:40.928 --> 00:05:43.604\nBut if I'm building from source,\nwhen an update comes out,\n\n127\n00:05:43.604 --> 00:05:45.500\nI've got to download the new source code.\n\n128\n00:05:45.500 --> 00:05:47.274\nI've got to compile the source code, and\n\n129\n00:05:47.274 --> 00:05:49.820\nthen I've got to replace\nthe binary with a new updated one.\n\n130\n00:05:49.820 --> 00:05:52.640\nI have to do it by hand,\nand that's a pain.\n\n131\n00:05:52.640 --> 00:05:55.300\nIt's harder to maintain software\nwhen we do it from source code, so\n\n132\n00:05:55.300 --> 00:05:57.840\nthat's another reason why\nwe might not want to do it,\n\n133\n00:05:57.840 --> 00:06:02.562\nand then the other reason\nis it requires some tools.\n\n134\n00:06:02.562 --> 00:06:05.090\nIf you're gonna compile source\ncode you need to compile it.\n\n135\n00:06:05.090 --> 00:06:08.934\nThe most common one is the GNUC compiler,\nor GCC, but there's several\n\n136\n00:06:08.934 --> 00:06:13.357\nothers like Cling, and a bunch of other\nthat people are starting to use today, but\n\n137\n00:06:13.357 --> 00:06:16.330\nGCC is by and\nfar the most common one that's out there.\n\n138\n00:06:16.330 --> 00:06:21.732\nWell, if you are deploying a minimal\nfootprint server you don't want GCC on it.\n\n139\n00:06:21.732 --> 00:06:23.668\nYou want a minimal footprint.\n\n140\n00:06:23.668 --> 00:06:28.586\nSo now, you got to go to a separate\nmachine somewhere, that's built the same\n\n141\n00:06:28.586 --> 00:06:33.580\nway as that server, so that you can\ninstall GCC, and the other utilities.\n\n142\n00:06:33.580 --> 00:06:37.381\nYou can compile the software there,\nand then move the compiled version of\n\n143\n00:06:37.381 --> 00:06:41.503\nthe software over to the server so the\nserver maintains its minimal footprint.\n\n144\n00:06:41.503 --> 00:06:44.531\nThat's a lot of extra work, and again,\nif you're in a high security environment,\n\n145\n00:06:44.531 --> 00:06:47.177\nyou're probably listening to me\nsaying this saying, that's awesome,\n\n146\n00:06:47.177 --> 00:06:47.830\nI'm doing that.\n\n147\n00:06:47.830 --> 00:06:48.563\n&gt;&gt; [LAUGH] Yeah.\n\n148\n00:06:48.563 --> 00:06:50.908\n&gt;&gt; But the rest of you are probably\nsaying, wow, what a pain.\n\n149\n00:06:50.908 --> 00:06:53.537\n&gt;&gt; [LAUGH]\n&gt;&gt; There's no way I would do that, and\n\n150\n00:06:53.537 --> 00:06:54.899\nthat's the negative.\n\n151\n00:06:54.899 --> 00:06:56.283\nSo for some people it's a great thing.\n\n152\n00:06:56.283 --> 00:06:57.515\nFor some people it isn't.\n\n153\n00:06:57.515 --> 00:07:01.717\nThat's kind of another reason why we\nmight choose not to build from source.\n\n154\n00:07:01.717 --> 00:07:04.527\n&gt;&gt; Yeah, I always love when you're trying\nto build something from source and\n\n155\n00:07:04.527 --> 00:07:06.100\nyou're like, okay, we're cranking.\n\n156\n00:07:06.100 --> 00:07:09.780\nWe're firing away, and all of a sudden\nit starts telling you about error.\n\n157\n00:07:09.780 --> 00:07:13.820\nI'm missing these dependencies, and then\nyou gotta go get those dependencies, and\n\n158\n00:07:13.820 --> 00:07:16.402\nthose dependencies rely on\nsome other dependencies,\n\n159\n00:07:16.402 --> 00:07:20.273\nand you're down this rabbit trail, which\nis when package management came out and\n\n160\n00:07:20.273 --> 00:07:23.952\nI said, man, because that does all\nthat for me, I didn't have to do it.\n\n161\n00:07:23.952 --> 00:07:27.649\nIt's a little more work to use\nthe old source way, right, Don?\n\n162\n00:07:27.649 --> 00:07:31.272\n&gt;&gt; Absolutely, and you know, I left off\none other reason why you might choose to\n\n163\n00:07:31.272 --> 00:07:33.700\nbuild from source, a good reason, right?\n\n164\n00:07:33.700 --> 00:07:34.542\nIf you're a cheap skate.\n\n165\n00:07:34.542 --> 00:07:36.927\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] If you don't wanna pay for\n\n166\n00:07:36.927 --> 00:07:37.820\nthings.\n\n167\n00:07:37.820 --> 00:07:42.696\nSee a lot of things in the open\nsource world are done under the GPL.\n\n168\n00:07:42.696 --> 00:07:44.580\nOne of the, what is it?\n\n169\n00:07:44.580 --> 00:07:47.650\nThe GNU Public License, or\nwhatever that stands for, and\n\n170\n00:07:47.650 --> 00:07:49.780\nthat license dictates\nthat the software's free.\n\n171\n00:07:49.780 --> 00:07:50.397\nYou can use it.\n\n172\n00:07:50.397 --> 00:07:54.976\nBut there's certain requirements that if\nyou use that, and you customize software\n\n173\n00:07:54.976 --> 00:07:59.167\nthat's under the GPL, you have to release\nThe source code, and to those a lot\n\n174\n00:07:59.167 --> 00:08:04.460\nof commercial entities out there that\nhave commercial software that they sell.\n\n175\n00:08:04.460 --> 00:08:07.220\nBut they have to make\nthe source code available for\n\n176\n00:08:07.220 --> 00:08:09.550\nfree because of the GPL all right.\n\n177\n00:08:09.550 --> 00:08:13.368\nOne of the best examples of that is\nthe Red Hat Enterprise Linux, Distro.\n\n178\n00:08:13.368 --> 00:08:17.273\nThat Red Hat enterprise Linux has\ncommercial software, I wanna go and\n\n179\n00:08:17.273 --> 00:08:19.868\nbuy and a server license is $350, right?\n\n180\n00:08:19.868 --> 00:08:23.485\nOr a work station license that start\nat $50 but then they go up from there,\n\n181\n00:08:23.485 --> 00:08:25.302\nI think my license is 180, right?\n\n182\n00:08:25.302 --> 00:08:28.908\nSo it just depends on what you're\nbuying but it costs money.\n\n183\n00:08:28.908 --> 00:08:33.119\nWell, they have to release their\nsource code because of the GPL and so\n\n184\n00:08:33.119 --> 00:08:37.780\nother people have taken that code and\ncompiled it and that's where CentOS.\n\n185\n00:08:37.780 --> 00:08:42.800\nThe community enterprise operating system\ncomes from, it is compiling Red Hat code.\n\n186\n00:08:42.800 --> 00:08:45.783\nSo, there is times where you might\nwanna use commercial software and\n\n187\n00:08:45.783 --> 00:08:47.031\nyou're just a cheap skate.\n\n188\n00:08:47.031 --> 00:08:49.251\n&gt;&gt; [LAUGH]\n&gt;&gt; Where you don't need the support, so\n\n189\n00:08:49.251 --> 00:08:50.558\nyou might choose to go and\n\n190\n00:08:50.558 --> 00:08:54.690\ncompile their code that they released\nto get the same features, right?\n\n191\n00:08:54.690 --> 00:08:58.560\nAnd that's one one of the example I'm\ngonna use right here in this episode is\n\n192\n00:08:58.560 --> 00:09:01.500\nthere is a software package out\nthere called John the Ripper.\n\n193\n00:09:01.500 --> 00:09:05.300\nAnd it's a pen testing tool for\ntesting password integrity, right?\n\n194\n00:09:05.300 --> 00:09:08.720\nSo it allows us to basically\nrun against passwords files and\n\n195\n00:09:08.720 --> 00:09:10.510\nsee if we can decrypt the password, right?\n\n196\n00:09:10.510 --> 00:09:12.930\nSo as a security researcher\nit's a good tool for\n\n197\n00:09:12.930 --> 00:09:15.850\nmeasuring, how strong\npeople's passwords are.\n\n198\n00:09:15.850 --> 00:09:18.980\nWell, John the Ripper\nis commercial software.\n\n199\n00:09:18.980 --> 00:09:20.570\nYou can go and you can buy it from them.\n\n200\n00:09:20.570 --> 00:09:25.600\nAnd if you buy it from them,\nthen they have RPMs and DEVs.\n\n201\n00:09:25.600 --> 00:09:27.520\nThey have package files\nthat you can download and\n\n202\n00:09:27.520 --> 00:09:29.770\ninstall super easy, all right.\n\n203\n00:09:29.770 --> 00:09:32.260\nBut if you don't buy it from them.\n\n204\n00:09:32.260 --> 00:09:33.880\nHere is the source code right here.\n\n205\n00:09:33.880 --> 00:09:36.310\nYou can download the source code and\nrun it.\n\n206\n00:09:36.310 --> 00:09:37.335\nNow, ironically,\n\n207\n00:09:37.335 --> 00:09:39.419\nthey do have a Windows binary that's,\n&gt;&gt; [CROSSTALK]\n\n208\n00:09:39.419 --> 00:09:40.973\n&gt;&gt; For some reason, I don't know why.\n\n209\n00:09:40.973 --> 00:09:45.487\nBut on the Linux side they just\ndistribute the source code.\n\n210\n00:09:45.487 --> 00:09:48.424\nSo if I wanna run John the Ripper,\nI can buy it, right?\n\n211\n00:09:48.424 --> 00:09:53.100\nIt's actually not very expensive,\nI think it's $50 or something like that.\n\n212\n00:09:53.100 --> 00:09:55.595\nOr I could just download the source code.\n\n213\n00:09:55.595 --> 00:09:58.662\nNow, In this case,\neven if I wanted to buy it,\n\n214\n00:09:58.662 --> 00:10:03.690\nJohn the Ripper Pro is built off of\ntheir standard official version.\n\n215\n00:10:03.690 --> 00:10:06.700\nBut there's these extra builds\nthat other people have done.\n\n216\n00:10:06.700 --> 00:10:08.940\nThey call them jumbo builds\nadd a ton of features,\n\n217\n00:10:08.940 --> 00:10:10.330\nthose are not in the commercial one.\n\n218\n00:10:10.330 --> 00:10:13.960\nAnd so\nthese are actually better in a way and\n\n219\n00:10:13.960 --> 00:10:17.950\nthey're free if you download\nthe source and compile it yourself.\n\n220\n00:10:17.950 --> 00:10:21.270\nSo this is an example right here\nwhere if I wanna run this software,\n\n221\n00:10:21.270 --> 00:10:24.947\nI need to download the source code and\nthen I'm gonna [INAUDIBLE] compile it\n\n222\n00:10:24.947 --> 00:10:27.520\nby hand in order to get\nthe software up and running.\n\n223\n00:10:27.520 --> 00:10:31.887\n&gt;&gt; All right, well Don,\nlet's get this party started.\n\n224\n00:10:31.887 --> 00:10:34.837\nIf I've downloaded John the Ripper,\nI wanna get it installed,\n\n225\n00:10:34.837 --> 00:10:36.257\nwhat is it that I've got to do,\n\n226\n00:10:36.257 --> 00:10:39.340\nhow does it differ from using\nsomething like apt get or [INAUDIBLE]?\n\n227\n00:10:39.340 --> 00:10:43.310\n&gt;&gt; Okay, well, there's a couple of pieces\nof software that I'm gonna need, right?\n\n228\n00:10:43.310 --> 00:10:45.890\nFirst off, I'm gonna be compiling code and\n\n229\n00:10:45.890 --> 00:10:49.040\nalmost everything in the Linux\nworld is written in C.\n\n230\n00:10:49.040 --> 00:10:52.090\nBut you'll need to identify what\nlanguage the software was written in.\n\n231\n00:10:52.090 --> 00:10:54.870\nIf it's written in Java,\nif it's written in some other language,\n\n232\n00:10:54.870 --> 00:10:57.560\nyou need to make sure that you're\nusing the appropriate compiler.\n\n233\n00:10:57.560 --> 00:11:01.580\nMostly, everything is written in C so\nI'm gonna need the GNU C compiler, right?\n\n234\n00:11:01.580 --> 00:11:05.590\nAnd then, I'm gonna need another\nutility that's called make.\n\n235\n00:11:05.590 --> 00:11:10.600\nThe make utility is what has turned\ncompiling from source from a nightmare\n\n236\n00:11:10.600 --> 00:11:12.600\nto actually a really pleasant experience.\n\n237\n00:11:12.600 --> 00:11:16.540\nMake allows the developer to\npre define flags and options,\n\n238\n00:11:16.540 --> 00:11:18.840\nso that you can customize software and\n\n239\n00:11:18.840 --> 00:11:22.200\ndo it really easily without having to go\nand edit a bunch of code files, right?\n\n240\n00:11:22.200 --> 00:11:23.380\nSo for example here.\n\n241\n00:11:23.380 --> 00:11:24.520\nLet me show you that process.\n\n242\n00:11:24.520 --> 00:11:27.820\nI wanna make sure that I have GCC and\nthat I have make installed.\n\n243\n00:11:27.820 --> 00:11:29.540\nAnd I'm on a Fedora system.\n\n244\n00:11:29.540 --> 00:11:35.750\nSo I gonna do dnf install gcc make,\nall right?\n\n245\n00:11:35.750 --> 00:11:36.740\nThose are the two utilities.\n\n246\n00:11:36.740 --> 00:11:39.472\nAnd there'll likely be many other\nutilities that come along with them unless\n\n247\n00:11:39.472 --> 00:11:41.500\nI've already got it installed\nwhich I can't remember.\n\n248\n00:11:41.500 --> 00:11:42.980\nOr I might already have it installed,\nI do.\n\n249\n00:11:42.980 --> 00:11:46.040\nActually, I've already got both of them\ninstalled But if I didn't it wouldn't\n\n250\n00:11:46.040 --> 00:11:49.850\nsolve in here now I've got the utilities\nI need to run this process, all right.\n\n251\n00:11:49.850 --> 00:11:51.880\nThen I need the source code.\n\n252\n00:11:51.880 --> 00:11:56.520\nWell, I've downloaded the source code\nfrom their site and most software will be\n\n253\n00:11:56.520 --> 00:12:01.510\ndistributed in this format right here,\n.TAR.GC or sometimes we got TGC.\n\n254\n00:12:01.510 --> 00:12:05.220\nAnd that means they took all the source\ncode files and they wrapped it up in\n\n255\n00:12:05.220 --> 00:12:09.430\na tar, a tarball is what it's called but\na tape archive really.\n\n256\n00:12:09.430 --> 00:12:12.610\nSo I'm gonna have thousands of files and\nthey all show up as one file.\n\n257\n00:12:12.610 --> 00:12:16.560\nAnd then they compress it with gzip, so\nthey're actually using two different\n\n258\n00:12:16.560 --> 00:12:19.530\nutilities, one to combine it,\none to compress it, right?\n\n259\n00:12:19.530 --> 00:12:22.560\nSo I need to open up this source code,\nso I'll use tar-\n\n260\n00:12:23.680 --> 00:12:28.150\nxvzf and I'll point to that file.\n\n261\n00:12:28.150 --> 00:12:30.770\nNow, xvzf most of you are probably\nfamiliar with tar but\n\n262\n00:12:30.770 --> 00:12:32.121\njust [INAUDIBLE] real quick.\n\n263\n00:12:32.121 --> 00:12:36.881\nX on extracting, v I want verbose, output,\nz is gzip, I need to ungzip it and\n\n264\n00:12:36.881 --> 00:12:40.570\nthen f, I'm pointing to a file,\nthis is the file, right?\n\n265\n00:12:40.570 --> 00:12:43.166\nSo that's what I'm doing right there.\n\n266\n00:12:43.166 --> 00:12:46.881\nThose command line [INAUDIBLE]\nmemorize and use all the time.\n\n267\n00:12:46.881 --> 00:12:51.290\nSo I'm gonna open that up and\nthat's different.\n\n268\n00:12:51.290 --> 00:12:53.130\nAll right, well,\nthis is a little bit different.\n\n269\n00:12:53.130 --> 00:12:55.590\nSo [LAUGH] it's telling me that\nit's not in a gzip format.\n\n270\n00:12:55.590 --> 00:12:57.830\nSo, I'm just gonna rerun the command and\n\n271\n00:12:57.830 --> 00:13:00.790\nI'll leave off the z,\nsince it's telling me it's not gzip.\n\n272\n00:13:01.910 --> 00:13:05.171\nSometimes developers might do\na wrong file extension here [LAUGH].\n\n273\n00:13:05.171 --> 00:13:06.580\n&gt;&gt; Yeah [LAUGH].\n&gt;&gt; So let's see if that does it,\n\n274\n00:13:06.580 --> 00:13:07.490\nthere we go, all right.\n\n275\n00:13:07.490 --> 00:13:10.860\nSo in this case, it just wasn't\ncompressed for whatever reason.\n\n276\n00:13:10.860 --> 00:13:14.520\nAll right, so now,\nI've extracted the source code, right?\n\n277\n00:13:14.520 --> 00:13:19.020\nAnd you'll see all the little files\nhere that came along with it, right?\n\n278\n00:13:19.020 --> 00:13:22.280\nThese .c files,\nthat's the actual source code for\n\n279\n00:13:22.280 --> 00:13:25.938\neach of the various commands and\nfeatures that are a part of this software.\n\n280\n00:13:25.938 --> 00:13:30.450\nAnd the .h files, those are include files\nthat have all sorts of variables and all\n\n281\n00:13:30.450 --> 00:13:33.950\nother information and settings that are a\npart of them, that come in along with it.\n\n282\n00:13:33.950 --> 00:13:38.840\nBut the point here is, it's a lot of\nfiles, there is a lot of stuff in here,\n\n283\n00:13:38.840 --> 00:13:42.150\nincluding things like a read me file\nthat gives me some information or\n\n284\n00:13:42.150 --> 00:13:44.360\nthe document folder here\nthat can really help me out.\n\n285\n00:13:44.360 --> 00:13:48.720\nBut most of what I want is gonna\nbe inside of this src folder,\n\n286\n00:13:48.720 --> 00:13:51.920\nthis source folder,\nthat's where all the source code is and\n\n287\n00:13:51.920 --> 00:13:55.630\nI need to compile that to\ncreate a binary to run.\n\n288\n00:13:55.630 --> 00:14:00.200\nNow looking at this folder here,\nso if I get into that folder.\n\n289\n00:14:01.270 --> 00:14:05.240\nAnd I take a look at, I've got three\nfolders, I've got dock, run and source.\n\n290\n00:14:05.240 --> 00:14:09.550\nOkay, when you compile\nsoftware from source,\n\n291\n00:14:09.550 --> 00:14:11.520\nit will sometimes create a binary and\n\n292\n00:14:11.520 --> 00:14:15.990\nstick it right here alongside the source\ncode in a run folder like this one, right?\n\n293\n00:14:15.990 --> 00:14:20.051\nOther times,\nit will actually install the binary and\n\n294\n00:14:20.051 --> 00:14:24.430\nput it in /user/bin or\n/user/sbin or wherever.\n\n295\n00:14:24.430 --> 00:14:26.590\nIn that case, you might not\nhave a run folder like this, so\n\n296\n00:14:26.590 --> 00:14:29.430\nthere are some little variations\nyou need to be aware of and\n\n297\n00:14:29.430 --> 00:14:31.590\nI'll show you how we\nkind of identify that.\n\n298\n00:14:31.590 --> 00:14:34.300\nWith this one,\nI've got the source code and\n\n299\n00:14:34.300 --> 00:14:37.440\nI can move into this source folder and\nhere it is, right?\n\n300\n00:14:37.440 --> 00:14:41.537\nSo now, I'm ready to compile and this is\nwhere it used to be so difficult cuz you\n\n301\n00:14:41.537 --> 00:14:45.656\nget to use the GCC command and it would\nwrap around your screen like four times.\n\n302\n00:14:45.656 --> 00:14:47.792\n&gt;&gt; [LAUGH]\n&gt;&gt; So it import all the files and\n\n303\n00:14:47.792 --> 00:14:48.930\ndo all that.\n\n304\n00:14:48.930 --> 00:14:50.950\nIt was really, really challenging.\n\n305\n00:14:50.950 --> 00:14:55.990\nBut now thanks to the make command,\nlife is a heck of a lot easier.\n\n306\n00:14:55.990 --> 00:15:01.580\nThat we can get into this folder and\nwe can run make and\n\n307\n00:15:01.580 --> 00:15:06.860\nit will configure the software for us and\nget it ready to build to then be compiled.\n\n308\n00:15:06.860 --> 00:15:12.130\nNow quick word of advise here, I need\nto build the configuration file first.\n\n309\n00:15:12.130 --> 00:15:15.136\nOlder software might actually\nuse the config command, and\n\n310\n00:15:15.136 --> 00:15:16.938\nyou might need to type configure and\n\n311\n00:15:16.938 --> 00:15:20.860\nrun that command by itself, and\nthat's gonna get the software configured.\n\n312\n00:15:20.860 --> 00:15:23.560\nIt might ask you a few questions or\nwhatever.\n\n313\n00:15:23.560 --> 00:15:28.390\nNewer software puts that in the make\ncommand and so you'll type make config,\n\n314\n00:15:28.390 --> 00:15:28.921\nright?\n\n315\n00:15:28.921 --> 00:15:31.190\nSo that's what I'm gonna run here,\nmake config.\n\n316\n00:15:31.190 --> 00:15:36.390\nAnd that's gonna take a look at this, and\nset any configuration options that I need.\n\n317\n00:15:36.390 --> 00:15:39.680\nNow, when it runs,\nI might get an error like this and\n\n318\n00:15:39.680 --> 00:15:41.270\nthe error can indicate\na few different things.\n\n319\n00:15:41.270 --> 00:15:44.540\nIt can indicate that you're missing\nsome dependencies for this to work.\n\n320\n00:15:44.540 --> 00:15:48.495\nI might have to install something or\nyou might be missing some parameters or\n\n321\n00:15:48.495 --> 00:15:53.162\nother information and here, I can see I've\ngot a fatal error on architecture, right?\n\n322\n00:15:53.162 --> 00:15:55.774\nIt's trying to include\nan architecture file, so\n\n323\n00:15:55.774 --> 00:15:59.020\nit doesn't know what architecture\nI'm building this from.\n\n324\n00:15:59.020 --> 00:16:04.036\nYou might ask yourself wait a minute,\nbut can it just look at the CPU and\n\n325\n00:16:04.036 --> 00:16:08.680\nknow this is x86 or\nthis is x64 or whatever.\n\n326\n00:16:08.680 --> 00:16:11.822\nUnfortunately, it doesn't know for\nbuilding this for us or\n\n327\n00:16:11.822 --> 00:16:13.680\nbuilding it for another computer.\n\n328\n00:16:13.680 --> 00:16:16.453\nSo we could specify the architecture, so\n\n329\n00:16:16.453 --> 00:16:20.410\nwe may need to give it a little\nbit more to go on, right?\n\n330\n00:16:20.410 --> 00:16:21.947\nIf I just run make by itself,\n\n331\n00:16:21.947 --> 00:16:25.352\nit'll tell me the various\narchitectures that are available.\n\n332\n00:16:25.352 --> 00:16:29.440\nAnd you'll see there's quite a few\nthat are right here in the list.\n\n333\n00:16:29.440 --> 00:16:33.832\nAnd many of them are Linux, but\nLinux is compatible with a lot of OS's.\n\n334\n00:16:33.832 --> 00:16:39.920\nI can actually create a binary for FreeBSD\nor OpenBSD, Solaris, Mac Os, right?\n\n335\n00:16:39.920 --> 00:16:43.453\nI can create binaries for other systems,\nBbut I'm creating this for Linux.\n\n336\n00:16:43.453 --> 00:16:48.820\nAnd then inside of Linux,\nI need to pick mix86-64.\n\n337\n00:16:48.820 --> 00:16:52.600\nDo I have a 65-bit CPU or\ndo I have 32-bit CPU, or\n\n338\n00:16:52.600 --> 00:16:55.373\ndo I have a SPARC processor, PowerPC?\n\n339\n00:16:55.373 --> 00:16:58.300\nYou pick the type of processor you've got.\n\n340\n00:16:58.300 --> 00:17:00.803\nI've got a 64-bit processor, so\nmy list is getting smaller, right?\n\n341\n00:17:00.803 --> 00:17:05.053\nAnd then here is where we really get the\nbenefit that I mentioned at the beginning\n\n342\n00:17:05.053 --> 00:17:06.220\nof the show.\n\n343\n00:17:06.220 --> 00:17:09.297\nThere are hardware features that may or\nmay not be a part of your processor.\n\n344\n00:17:09.297 --> 00:17:12.690\nMy processor might have AVX support in it.\n\n345\n00:17:12.690 --> 00:17:16.915\nIt might have AVX and XOP support in it,\nwouldn't that be awesome, right?\n\n346\n00:17:16.915 --> 00:17:19.057\n&gt;&gt; [LAUGH]\n&gt;&gt; But not everybody has that, so\n\n347\n00:17:19.057 --> 00:17:20.776\nwe can't just-\n&gt;&gt; Never mind,\n\n348\n00:17:20.776 --> 00:17:22.339\ncuz that's your kind of money, Don.\n\n349\n00:17:22.339 --> 00:17:23.354\n[LAUGH]\n&gt;&gt; In this case,\n\n350\n00:17:23.354 --> 00:17:24.744\nit's actually pretty old, right?\n\n351\n00:17:24.744 --> 00:17:26.466\n&gt;&gt; Yeah.\n&gt;&gt; 2011 plus odds are you are going\n\n352\n00:17:26.466 --> 00:17:28.779\nto have it, but-\n&gt;&gt; Not everybody's got your kind of\n\n353\n00:17:28.779 --> 00:17:29.378\nmoney Don.\n\n354\n00:17:29.378 --> 00:17:29.966\n[LAUGH]\n&gt;&gt; [LAUGH] So\n\n355\n00:17:29.966 --> 00:17:32.500\nif you got a ten year old computer,\nnow you got a problem, right?\n\n356\n00:17:32.500 --> 00:17:33.002\n&gt;&gt; That's right.\n\n357\n00:17:33.002 --> 00:17:35.800\n&gt;&gt; The default that would be for\nme to just choose Linux x86-64.\n\n358\n00:17:35.800 --> 00:17:40.285\nAnd that's gonna build this to the most\ncompatible settings possible for\n\n359\n00:17:40.285 --> 00:17:42.390\nany 64-bit, AMD 64 system.\n\n360\n00:17:42.390 --> 00:17:46.380\n&gt;&gt; So it kinda just filters,\nit goes from general to more specific.\n\n361\n00:17:46.380 --> 00:17:47.849\n&gt;&gt; Exactly.\n&gt;&gt; And them or specific it can be,\n\n362\n00:17:47.849 --> 00:17:49.760\nthe better performance you're gonna get.\n\n363\n00:17:49.760 --> 00:17:50.338\n&gt;&gt; Usually, yes.\n\n364\n00:17:50.338 --> 00:17:54.120\nIt is possible,\nthe software doesn't use entropy at all.\n\n365\n00:17:54.120 --> 00:17:54.732\n&gt;&gt; Yeah.\n&gt;&gt; And so\n\n366\n00:17:54.732 --> 00:17:56.670\nit doesn't matter if you have support for\nit or not.\n\n367\n00:17:56.670 --> 00:17:59.905\nIf a software can't take advantage of it,\nthen if the softwares a text editor.\n\n368\n00:17:59.905 --> 00:18:03.420\nIt doesn't matter if you built in\nsome kind of 3D video acceleration.\n\n369\n00:18:03.420 --> 00:18:05.629\nIt's a text editor, so\nthey have to be aware of that.\n\n370\n00:18:05.629 --> 00:18:08.400\nBut this is the architecture\nthat I got out of Linux x86-64.\n\n371\n00:18:08.400 --> 00:18:13.347\nSo when I go to do a make command,\nI need to give it a little more\n\n372\n00:18:13.347 --> 00:18:18.399\ninformation so it knows\nthe architecture that I want, okay?\n\n373\n00:18:18.399 --> 00:18:23.030\nAnd so when I go to build this,\nI'm gonna provide it that information.\n\n374\n00:18:23.030 --> 00:18:26.807\nNow when I build it,\nI've got a choice here.\n\n375\n00:18:26.807 --> 00:18:29.944\nIf this is the first time\nI've built this application,\n\n376\n00:18:29.944 --> 00:18:35.150\nthen it's gonna make the configuration\nall from scratch, and that's good.\n\n377\n00:18:35.150 --> 00:18:39.796\nBut the second time that I build it,\nit will reuse that configuration file.\n\n378\n00:18:39.796 --> 00:18:43.178\nSo if I made some kind of mistake, maybe I\nbuilt it with extra hardware options and\n\n379\n00:18:43.178 --> 00:18:46.210\nthey're just not working, so\nI wanna come back and rebuild it.\n\n380\n00:18:46.210 --> 00:18:49.085\nThen you wanna get in the habit\nof saying make clean.\n\n381\n00:18:49.085 --> 00:18:52.920\nIn other words,\nignore any previous build that I've done.\n\n382\n00:18:52.920 --> 00:18:55.247\nI want a clean build with all new options,\nand\n\n383\n00:18:55.247 --> 00:18:57.708\nthen I need to provide\nwith that architecture.\n\n384\n00:18:57.708 --> 00:19:05.150\nSo I'm gonna say Linux-x86-64, okay?\n\n385\n00:19:05.150 --> 00:19:10.099\nAnd that right there is gonna tell it to\ncompile this application clean, right?\n\n386\n00:19:10.099 --> 00:19:15.870\nWith all the default configuration, and\nbuilt it for a 64-bit Linux install.\n\n387\n00:19:15.870 --> 00:19:20.828\nNow I have intentionally picked software\nthat's a little bit harder to do.\n\n388\n00:19:20.828 --> 00:19:23.849\nTo be honest with you,\na lot of times when you get new software,\n\n389\n00:19:23.849 --> 00:19:25.880\nyou just wanna make by itself.\n\n390\n00:19:25.880 --> 00:19:28.984\nAnd if not dependant on architecture,\nit will build it and that's it.\n\n391\n00:19:28.984 --> 00:19:32.907\nYou shall make, and you're done, or\nmaybe make clean and you're done.\n\n392\n00:19:32.907 --> 00:19:33.531\n&gt;&gt; Yeah.\n&gt;&gt; So this one,\n\n393\n00:19:33.531 --> 00:19:36.420\nI have to go little bit further and\nprovide that option.\n\n394\n00:19:36.420 --> 00:19:40.553\nAnd when I do that, it's now gonna launch\nand it's gonna start compiling, all right?\n\n395\n00:19:40.553 --> 00:19:45.530\nNow just because it started compiling\ndoesn't mean I've done everything correct.\n\n396\n00:19:45.530 --> 00:19:48.029\nI could still get and error in here,\nif I have some missing dependency.\n\n397\n00:19:48.029 --> 00:19:52.223\nIt might depend on a library,\nlike an SSL library or something, and\n\n398\n00:19:52.223 --> 00:19:53.730\nit fails to build.\n\n399\n00:19:53.730 --> 00:19:57.811\nSo we need to double check as it's\nbuilding, look for the errors, okay?\n\n400\n00:19:57.811 --> 00:20:00.748\nMine's pretty clean here, so\nI didn't get any errors, so\n\n401\n00:20:00.748 --> 00:20:02.750\nit looks like I'm in good shape.\n\n402\n00:20:02.750 --> 00:20:06.147\nBut if you did, you need to fix that and\nthen recompile again, right?\n\n403\n00:20:06.147 --> 00:20:09.880\nAnd keep reiterating through that\nuntil you've got everything set.\n\n404\n00:20:09.880 --> 00:20:12.091\nPeople output a lot of\nlines on your screen, and\n\n405\n00:20:12.091 --> 00:20:14.260\neven with a 10,000 line scroll buffer.\n\n406\n00:20:14.260 --> 00:20:17.800\nIt's not uncommon to exceed that when\nyou're compiling large applications.\n\n407\n00:20:17.800 --> 00:20:23.910\nYou can compile LibreOffice, it will way\ngo beyond what your scroll back buffer is.\n\n408\n00:20:23.910 --> 00:20:26.208\nSo you might even choose to\nexport this to a text file,\n\n409\n00:20:26.208 --> 00:20:28.110\nlike you redirect\nthe output to a text file.\n\n410\n00:20:28.110 --> 00:20:30.740\nSo that you can then go and\nlook at it afterwards.\n\n411\n00:20:30.740 --> 00:20:32.886\nBut at this point it's built, and\n\n412\n00:20:32.886 --> 00:20:36.510\nit's telling me that it\ndoesn't have an installer.\n\n413\n00:20:36.510 --> 00:20:40.035\nThat instead it just dropped itself into\nthe run folder and it's right there.\n\n414\n00:20:40.035 --> 00:20:41.142\nBut on most software,\n\n415\n00:20:41.142 --> 00:20:44.070\nyou'll have an installer and\nyou can run one more command.\n\n416\n00:20:44.070 --> 00:20:46.131\nYou can say make install, and\n\n417\n00:20:46.131 --> 00:20:50.765\nthat will actually install it\ninto /user/bin or /user/sbin.\n\n418\n00:20:50.765 --> 00:20:52.103\nNow in order to write to those folders,\n\n419\n00:20:52.103 --> 00:20:53.690\nyou have to have\nadministrative privileges.\n\n420\n00:20:53.690 --> 00:20:55.484\nSo I would need to pseudo that and\n\n421\n00:20:55.484 --> 00:20:58.430\nthen it will be able to\ninstall to those locations.\n\n422\n00:20:58.430 --> 00:21:02.043\nBut if I now want the application\navailable for everybody, it's just for\n\n423\n00:21:02.043 --> 00:21:04.441\nme, then I can run it right\nfrom that run folder.\n\n424\n00:21:04.441 --> 00:21:08.870\nOr I can move it into my home\ndirectory/bin, it'd be there for just me.\n\n425\n00:21:08.870 --> 00:21:11.680\nIn my case, I know what this\nutility available for everybody, so\n\n426\n00:21:11.680 --> 00:21:15.200\nI'm perfectly fine with it\nbeing here in the run folder.\n\n427\n00:21:15.200 --> 00:21:17.329\nAnd if I take a look in that run folder,\n\n428\n00:21:17.329 --> 00:21:20.267\nI can find that it now\ncontains a binary called John.\n\n429\n00:21:20.267 --> 00:21:23.470\nAnd it's got some other stuff, like config\nfiles and all that came along with it.\n\n430\n00:21:23.470 --> 00:21:26.476\nBut it's right here,\nit's ready to rock and\n\n431\n00:21:26.476 --> 00:21:29.730\nthat executel has been\ncompiled from my system.\n\n432\n00:21:29.730 --> 00:21:33.066\nAnd hopefully, it works,\nI mean I guess it could be broken.\n\n433\n00:21:33.066 --> 00:21:34.527\n&gt;&gt; [LAUGH]\n&gt;&gt; I'll try and run it here.\n\n434\n00:21:34.527 --> 00:21:38.890\nI'll call John//test, and there it goes.\n\n435\n00:21:38.890 --> 00:21:41.849\nIt's firing up, we're probably gonna hear\nthe fans on my laptop ramp up in a second.\n\n436\n00:21:41.849 --> 00:21:44.357\n&gt;&gt; Yesh.\n&gt;&gt; Cuz it's testing how many cryptographic\n\n437\n00:21:44.357 --> 00:21:46.760\ncycles it can run through per second.\n\n438\n00:21:46.760 --> 00:21:50.449\nSo it's gonna churn along and\nmove through each one, but it is working.\n\n439\n00:21:50.449 --> 00:21:53.611\nAnd I have now compiled this\nsoftware from source code.\n\n440\n00:21:53.611 --> 00:21:56.470\nIt wasn't the easiest thing in the world,\nright?\n\n441\n00:21:56.470 --> 00:21:57.193\nCuz we had to know the commands to run.\n\n442\n00:21:57.193 --> 00:22:00.196\nAnd a lot of vendors will put out\ndocumentation that tells you exactly what\n\n443\n00:22:00.196 --> 00:22:02.070\nto run and that's helpful, right?\n\n444\n00:22:02.070 --> 00:22:04.674\nBut when it's done, I end up with\nthe same product as if I'd gone and\n\n445\n00:22:04.674 --> 00:22:05.784\nbought the commercial one.\n\n446\n00:22:05.784 --> 00:22:08.300\nI just didn't have\na package to install it.\n\n447\n00:22:08.300 --> 00:22:10.807\nHere, I had to do it by hand,\nbut it wasn't too bad.\n\n448\n00:22:10.807 --> 00:22:13.471\n&gt;&gt; Yeah, and that's the thing about it,\nit's not too bad.\n\n449\n00:22:13.471 --> 00:22:17.930\nIt's definitely a whole lot easier than\nit used to be as we've tried to elude to.\n\n450\n00:22:17.930 --> 00:22:20.734\nYou guys out there if you're new to Linux,\nyou really don't know the pain and\n\n451\n00:22:20.734 --> 00:22:22.540\nsuffering that went along-\n&gt;&gt; [LAUGH]\n\n452\n00:22:22.540 --> 00:22:23.738\n&gt;&gt; With compiling from source.\n\n453\n00:22:23.738 --> 00:22:26.853\nBut it did make you really good,\nat finding dependencies and\n\n454\n00:22:26.853 --> 00:22:30.590\ndoing the things necessary to get\nsoftware installed onto your system.\n\n455\n00:22:30.590 --> 00:22:33.056\nBut now, we've tried to streamline\nthat process quite a bit.\n\n456\n00:22:33.056 --> 00:22:37.340\nAnd Don has walked you through each one of\nthe steps that you're probably going to\n\n457\n00:22:37.340 --> 00:22:40.430\nencounter when it comes to\ninstalling from source.\n\n458\n00:22:40.430 --> 00:22:44.290\nA lot of times, it just comes down\nto running your make configure and\n\n459\n00:22:44.290 --> 00:22:47.148\nmake install and yeah,\nyou're off to the races.\n\n460\n00:22:47.148 --> 00:22:48.809\nIt's usually that easy, sometimes not.\n\n461\n00:22:48.809 --> 00:22:49.428\n&gt;&gt; [LAUGH]\n&gt;&gt; You gotta get\n\n462\n00:22:49.428 --> 00:22:51.370\nthose dependencies out there.\n\n463\n00:22:51.370 --> 00:22:54.780\nDon, that brings us to,\nwell we've install some software.\n\n464\n00:22:54.780 --> 00:22:56.950\nIt is running, we are successful.\n\n465\n00:22:56.950 --> 00:23:00.593\nAnything else you wanna throw on\nthe heat before we call it a show?\n\n466\n00:23:00.593 --> 00:23:01.872\n&gt;&gt; At this point, we are successful,\n\n467\n00:23:01.872 --> 00:23:03.101\nit's easy to celebrate, yeah-\n&gt;&gt; [LAUGH]\n\n468\n00:23:03.101 --> 00:23:03.639\n&gt;&gt; I got a software.\n\n469\n00:23:03.639 --> 00:23:08.602\nBut remember, it's still lot of work\non the maintenance side, right?\n\n470\n00:23:08.602 --> 00:23:11.396\nSo if the John the Ripper team\nreleases an update or open walls,\n\n471\n00:23:11.396 --> 00:23:13.833\nthe company of releases\nan update next month.\n\n472\n00:23:13.833 --> 00:23:15.840\nI'm gonna go and\ndownload that source code.\n\n473\n00:23:15.840 --> 00:23:18.530\nAnd I've gotta rebuild it, and\nI've gotta move it into place.\n\n474\n00:23:18.530 --> 00:23:21.923\nSo you have to do this, it's an ongoing\nthing, it's not a heck of a lot of fun.\n\n475\n00:23:21.923 --> 00:23:26.450\nPackage managers solve that for us, so\ndon't feel like you're being hardcore or\n\n476\n00:23:26.450 --> 00:23:31.160\nthat you're an extra super Linux\nexpert because you build from source.\n\n477\n00:23:31.160 --> 00:23:33.930\nIt's actually kinda nice to have a package\nmanager on from the update side.\n\n478\n00:23:33.930 --> 00:23:35.175\nBut on the security side,\n\n479\n00:23:35.175 --> 00:23:38.909\nif you wanna guarantee that you're only\nrunning code that you've reviewed,\n\n480\n00:23:38.909 --> 00:23:42.093\nthat you've looked at and you trust,\nthen this is the way to do it.\n\n481\n00:23:42.093 --> 00:23:45.010\nThis is the way that you can certify,\nI know that code is okay.\n\n482\n00:23:45.010 --> 00:23:48.769\nThis binary is built from\nthe source code that I reviewed.\n\n483\n00:23:48.769 --> 00:23:51.739\nIt does give you a bit of\na sense of accomplishment,\n\n484\n00:23:51.739 --> 00:23:54.040\nthat you feel like you did something.\n\n485\n00:23:54.040 --> 00:23:54.867\nAnd you write the software.\n&gt;&gt; Yeah.\n\n486\n00:23:54.867 --> 00:23:56.232\n[LAUGH]\n&gt;&gt; Write one line of code, but\n\n487\n00:23:56.232 --> 00:23:57.870\nI feel like I built something.\n\n488\n00:23:57.870 --> 00:23:59.154\n&gt;&gt; Yeah, it definitely does do that.\n\n489\n00:23:59.154 --> 00:24:01.880\nIt gives you that power user feel.\n\n490\n00:24:01.880 --> 00:24:04.815\n&gt;&gt; [LAUGH]\n&gt;&gt; You use an app there, that's nice.\n\n491\n00:24:04.815 --> 00:24:05.555\n[LAUGH] Your sipping coffee.\n\n492\n00:24:05.555 --> 00:24:06.560\n&gt;&gt; [LAUGH] Yeah.\n\n493\n00:24:07.760 --> 00:24:08.679\n&gt;&gt; [LAUGH] Very cool stuff, Don.\nThanks for\n\n494\n00:24:08.679 --> 00:24:12.208\nshowing us how to maybe bump our game up\na little bit when it comes to installing\n\n495\n00:24:12.208 --> 00:24:13.690\nsoftware in our Linux systems.\n\n496\n00:24:13.690 --> 00:24:17.639\nBecause you never know when those package\nmanagement systems just don't give you\n\n497\n00:24:17.639 --> 00:24:18.390\nwhat you need.\n\n498\n00:24:18.390 --> 00:24:22.160\nAnd you gotta go right to the source and\ninstall from there.\n\n499\n00:24:22.160 --> 00:24:23.882\nDon, thanks for\njoining us today yet again, and\n\n500\n00:24:23.882 --> 00:24:25.609\nwe do thank our audience out there for\nwatching.\n\n501\n00:24:25.609 --> 00:24:26.670\nBut guess what?\n\n502\n00:24:26.670 --> 00:24:29.149\nIt is that time for\nus to sign off, for ITPro.TV.\n\n503\n00:24:29.149 --> 00:24:30.815\nI've been your host Daniel Lowrie.\n\n504\n00:24:30.815 --> 00:24:31.752\n&gt;&gt; And I'm Don Pezet.\n\n505\n00:24:31.752 --> 00:24:32.867\n&gt;&gt; And we'll see you next time.\n\n506\n00:24:32.867 --> 00:24:40.686\n[MUSIC]\n\n507\n00:24:40.686 --> 00:24:43.171\n&gt;&gt; Thank you for watching ITPro.TV.\n\n",
          "vimeoId": "235605898"
        }
      ],
      "title": "Installing Software"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Don introduces the viewers to the Vi and Vim text editors. He explains why you would use Vi/Vim over other editors. Next he walks the user through the basic editing commands and how to work with text files in the editor.",
          "length": "1559",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-6-1-1-vi_and_vim-092717-PGM.00_25_43_22.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-6-1-1-vi_and_vim-092717-PGM.00_25_43_22.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-6-1-1-vi_and_vim-092717-PGM.00_25_43_22.Still001-sm.jpg",
          "title": "vi and vim",
          "transcript": "WEBVTT\n\n1\n00:00:00.230 --> 00:00:02.304\nWelcome to ITPro TV I'm your host.\n\n2\n00:00:02.304 --> 00:00:07.969\n&gt;&gt; [CROSSTALK]\n\n3\n00:00:07.969 --> 00:00:11.969\n&gt;&gt; You're watching ITProTV.\n\n4\n00:00:11.969 --> 00:00:16.324\n&gt;&gt; All right, greetings everyone welcome\nback to another great episode of ITProTV.\n\n5\n00:00:16.324 --> 00:00:17.750\nI'm your host Daniel Lowrie.\n\n6\n00:00:17.750 --> 00:00:21.740\nAnd in today's episode we're back with\nmore in our Linux command line series.\n\n7\n00:00:21.740 --> 00:00:24.220\nJoining us in the studio, yet again,\nthe man, the myth, the legend.\n\n8\n00:00:24.220 --> 00:00:25.610\nYou know him as Don Pezet.\n\n9\n00:00:25.610 --> 00:00:27.520\nDon, welcome back, how's it going today?\n\n10\n00:00:27.520 --> 00:00:28.760\n&gt;&gt; It is going great, Daniel.\n\n11\n00:00:28.760 --> 00:00:32.420\nAnd we're ready to move into an area\nthat I have a little trepidation for.\n\n12\n00:00:32.420 --> 00:00:33.730\n&gt;&gt; [LAUGH]\n&gt;&gt; This is where we start\n\n13\n00:00:33.730 --> 00:00:34.320\ngetting into the.\n\n14\n00:00:34.320 --> 00:00:37.510\n&gt;&gt; You need a little scotch\nmaybe to calm the nerves?\n\n15\n00:00:37.510 --> 00:00:39.360\n&gt;&gt; Yeah,\nwe get into the Linux religious wars here.\n\n16\n00:00:39.360 --> 00:00:42.007\nWe're gonna talk about text editors, and.\n\n17\n00:00:42.007 --> 00:00:44.462\nWell that sounds like a really benign,\nsimple thing.\n\n18\n00:00:44.462 --> 00:00:46.886\n&gt;&gt; [LAUGH]\n&gt;&gt; Hey, editing some text files,\n\n19\n00:00:46.886 --> 00:00:48.800\npeople love their text editors.\n\n20\n00:00:48.800 --> 00:00:53.609\nEspecially their command line based text\neditors and there is so much about that.\n\n21\n00:00:53.609 --> 00:00:57.239\nAnd we use them so frequently, that when\nyou have one that you really get used to\n\n22\n00:00:57.239 --> 00:01:00.878\nand you get attached to, you don't want\nto acknowledge any other text [LAUGH].\n\n23\n00:01:00.878 --> 00:01:02.208\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n24\n00:01:02.208 --> 00:01:06.790\nwe're gonna kick this off by\ntalking about the VI editor.\n\n25\n00:01:06.790 --> 00:01:09.650\nAnd this is really kinda\nwhere it all starts.\n\n26\n00:01:09.650 --> 00:01:11.010\nIs the pronunciation of VI.\n\n27\n00:01:11.010 --> 00:01:11.970\nWe'll just cover this real quick.\n\n28\n00:01:11.970 --> 00:01:13.631\n&gt;&gt; Let's see what flavor\nof heresy you're into.\n\n29\n00:01:13.631 --> 00:01:15.533\n[LAUGH]\n&gt;&gt; Some people say, vee,\n\n30\n00:01:15.533 --> 00:01:18.443\nsome people say vie,\nsome people say it's vi.\n\n31\n00:01:18.443 --> 00:01:22.679\nWhat makes it even worse is that\nmost of us don't actually use vi,\n\n32\n00:01:22.679 --> 00:01:25.849\nwe use vim, which is,\nsome people say V-I-M.\n\n33\n00:01:25.849 --> 00:01:27.069\nIt's kind of all over the place.\n\n34\n00:01:27.069 --> 00:01:30.642\nBut, the VI text editor is what we're\ngonna be taking a look at here.\n\n35\n00:01:30.642 --> 00:01:32.589\nAnd how we can use it\nto edit text files and\n\n36\n00:01:32.589 --> 00:01:34.721\nwork with them right\nfrom the command line.\n\n37\n00:01:34.721 --> 00:01:38.956\nSo, I want you, to make sure you\ntake your Linux Zell hat off.\n\n38\n00:01:38.956 --> 00:01:40.575\n&gt;&gt; [LAUGH]\n&gt;&gt; Just for the episode.\n\n39\n00:01:40.575 --> 00:01:44.445\nAnd don't fixate on pronunciation of\nthings because there is no like official\n\n40\n00:01:44.445 --> 00:01:45.355\nright way.\n\n41\n00:01:45.355 --> 00:01:48.148\nBut we're gonna take a look at\nhow to use the text editor and\n\n42\n00:01:48.148 --> 00:01:50.095\nI will tell you that it is a great editor.\n\n43\n00:01:50.095 --> 00:01:52.332\nIt's really powerful can\ndo a lot of neat things.\n\n44\n00:01:52.332 --> 00:01:56.686\nAnd it's extremely valuable to learn\nbecause it's almost ubiquitous\n\n45\n00:01:56.686 --> 00:02:01.184\nthat just about every Linux distro\ncomes with VI installed on it already,\n\n46\n00:02:01.184 --> 00:02:04.320\nwhich means you can always\ncount on it being there.\n\n47\n00:02:04.320 --> 00:02:05.580\nIt's not a guarantee.\n\n48\n00:02:05.580 --> 00:02:07.340\nSome systems don't have it as a default,\nbut\n\n49\n00:02:07.340 --> 00:02:09.800\nmost of them do, so\nit's a good one to learn.\n\n50\n00:02:09.800 --> 00:02:12.630\n&gt;&gt; Well, Don, let's,\ncan we just a little bit there.\n\n51\n00:02:12.630 --> 00:02:14.003\nI don't wanna get into zealotry.\n\n52\n00:02:14.003 --> 00:02:15.292\n&gt;&gt; [LAUGH]\n&gt;&gt; But I do wanna make a.\n\n53\n00:02:15.292 --> 00:02:17.792\nYou mentioned VI and VIM.\n\n54\n00:02:17.792 --> 00:02:20.292\nWhich one is it that that I'm\nprobably going to be using?\n\n55\n00:02:20.292 --> 00:02:22.005\n&gt;&gt; Alright so,\nit's depends on your distro,\n\n56\n00:02:22.005 --> 00:02:23.823\nbut most of them are actually\ngoing to use VIM.\n\n57\n00:02:23.823 --> 00:02:25.327\nThe VI is very old, right?\n\n58\n00:02:25.327 --> 00:02:28.280\nIt was developed a long long time ago.\n\n59\n00:02:28.280 --> 00:02:30.109\nAnd it was developed in the Unix world,\nright?\n\n60\n00:02:30.109 --> 00:02:33.040\nAnd then brought into\nthe Linux world from there.\n\n61\n00:02:33.040 --> 00:02:37.099\nAnd with VI, it stands for\nthe visual editor.\n\n62\n00:02:37.099 --> 00:02:39.684\nSo, VI is short for visual,\nwhich we were joking.\n\n63\n00:02:39.684 --> 00:02:40.548\n&gt;&gt; [LAUGH]\n&gt;&gt; Before the show,\n\n64\n00:02:40.548 --> 00:02:41.620\nit should actually be pronounced, vih.\n\n65\n00:02:41.620 --> 00:02:43.163\n&gt;&gt; [LAUGH]\n&gt;&gt; But anyhow, so\n\n66\n00:02:43.163 --> 00:02:47.793\nit's a text editor that gives you a visual\ninterface and you got to remember that,\n\n67\n00:02:47.793 --> 00:02:52.510\nback in the 1980's visual meant something\na lot different than it does today.\n\n68\n00:02:52.510 --> 00:02:54.990\nIt doesn't mean I've got\na graphical user interface.\n\n69\n00:02:54.990 --> 00:02:58.780\nBut, you actually see on the screen\nwhat you're editing, right?\n\n70\n00:02:58.780 --> 00:03:02.010\nIt's like a what you see is\nwhat you get type interface.\n\n71\n00:03:02.010 --> 00:03:04.350\nAnd that part of it\nmakes you very powerful.\n\n72\n00:03:04.350 --> 00:03:07.428\nBut, it wasn't that\npowerful in the beginning.\n\n73\n00:03:07.428 --> 00:03:08.460\nSo it got upgraded.\n\n74\n00:03:08.460 --> 00:03:10.663\nOther versions of it started coming out.\n\n75\n00:03:10.663 --> 00:03:13.135\nAnd the one that gained\nthe most acceptance,\n\n76\n00:03:13.135 --> 00:03:17.248\nwas one that was called VI Improved\nwhich is abbreviated to VIM or V-I-M.\n\n77\n00:03:17.248 --> 00:03:20.153\nNow, in order to follow POSIX standards or\n\n78\n00:03:20.153 --> 00:03:25.573\nwhen somebody builds a Linux distribution,\nif they wanna be POSIX compliant.\n\n79\n00:03:25.573 --> 00:03:31.440\nThey have to have /vin/vi as\ntheir default editor, right?\n\n80\n00:03:31.440 --> 00:03:32.525\nThat has to exist.\n\n81\n00:03:32.525 --> 00:03:33.980\nIt has to be there.\n\n82\n00:03:33.980 --> 00:03:37.190\nBut the distros can choose to\nmap that to whatever they want.\n\n83\n00:03:37.190 --> 00:03:43.300\nAnd so you'll often find what your distro\nhas /bin/vi, linked to something else.\n\n84\n00:03:43.300 --> 00:03:46.220\nSo like in Ubuntu,\nit's actually linked to GNU nano.\n\n85\n00:03:46.220 --> 00:03:47.960\nIt's not linked to VI.\n\n86\n00:03:47.960 --> 00:03:49.700\nIt has VI installed,\n\n87\n00:03:49.700 --> 00:03:53.930\nyou can user you can install VIM if you\nwant but it's actually linked to nano.\n\n88\n00:03:53.930 --> 00:03:57.150\nSo, you might be dropping to a command\nline, here I'll do in on mine.\n\n89\n00:03:57.150 --> 00:03:58.780\nI'm running Fedora, right?\n\n90\n00:03:58.780 --> 00:04:03.335\nAny time I drop to a command line I\njust type vi and press enter, right?\n\n91\n00:04:03.335 --> 00:04:04.090\nBut, see what it did.\n\n92\n00:04:04.090 --> 00:04:06.420\nIt didn't take me to Vi, the old one.\n\n93\n00:04:06.420 --> 00:04:09.820\nIt took me to VIM,\nwhich is VI Improved, right?\n\n94\n00:04:09.820 --> 00:04:13.280\nSo that's where it's landing me because\nthat's how my distro is mapped.\n\n95\n00:04:13.280 --> 00:04:14.850\nAnd if you ever wanna see,\n\n96\n00:04:14.850 --> 00:04:19.232\nwhich one it is that you're using,\nif you do a long listing.\n\n97\n00:04:19.232 --> 00:04:25.201\nOf /bin, you can go in there and look,\nand, oops, sorry minus is linked I forgot.\n\n98\n00:04:25.201 --> 00:04:30.350\nSo, linked, here, you can go in and\nyou can look, and you can find VI,\n\n99\n00:04:30.350 --> 00:04:33.620\nwhich instead of hunting for\nit, let's just do that.\n\n100\n00:04:33.620 --> 00:04:35.420\nAnd you can see if it's linked somewhere.\n\n101\n00:04:35.420 --> 00:04:37.220\nAnd, actually in my case it's\nnot linked anywhere is it?\n\n102\n00:04:37.220 --> 00:04:40.160\nI've got /usr/bin/vi that\n\n103\n00:04:40.160 --> 00:04:42.660\nFedora has apparently just\nchosen to swap out that binary.\n\n104\n00:04:42.660 --> 00:04:46.200\nAnd so the VI binary is taking me to VIM.\n\n105\n00:04:46.200 --> 00:04:48.250\nBut that's not a guarantee, right?\n\n106\n00:04:48.250 --> 00:04:51.940\nFortunately, as far as the commands\nwe're gonna see in this episode,\n\n107\n00:04:51.940 --> 00:04:53.960\nit doesn't really matter\nif you're in VI or Vim.\n\n108\n00:04:53.960 --> 00:04:55.870\nVIM does have some advanced functionality,\n\n109\n00:04:55.870 --> 00:04:58.960\nlike if you're writing HTML\nit can do colorized tagging.\n\n110\n00:04:58.960 --> 00:05:01.870\nThe original VI couldn't do that,\nthe original VI didn't have colors at all.\n\n111\n00:05:01.870 --> 00:05:03.030\nBut VIM does.\n\n112\n00:05:03.030 --> 00:05:04.880\nBut that doesn't impact all\nthe commands that we issue.\n\n113\n00:05:04.880 --> 00:05:08.510\nSo what were gonna see in this episode,\napplies to both VI and\n\n114\n00:05:08.510 --> 00:05:10.070\nVIM, so it doesn't matter which.\n\n115\n00:05:10.070 --> 00:05:12.603\nBut if you're on Ubuntu and you type VI,\nyou actually end up in Nano.\n\n116\n00:05:12.603 --> 00:05:13.178\nAnd nothing.\n\n117\n00:05:13.178 --> 00:05:14.613\n&gt;&gt; [LAUGH].\n&gt;&gt; We show you in this episode is\n\n118\n00:05:14.613 --> 00:05:15.142\ngoing to work.\n\n119\n00:05:15.142 --> 00:05:16.610\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] And\n\n120\n00:05:16.610 --> 00:05:18.600\nthat is something that happens.\n\n121\n00:05:18.600 --> 00:05:22.410\nYou can have more than one editor\ninstalled, and in fact here,\n\n122\n00:05:22.410 --> 00:05:26.720\nI've got this VI binary, but\nI'm certain I've got a VIM one, as well.\n\n123\n00:05:26.720 --> 00:05:28.110\nSure enough, there it is.\n\n124\n00:05:28.110 --> 00:05:30.460\nAnd they're even different file sizes.\n\n125\n00:05:30.460 --> 00:05:33.190\nNotice how the VI one, if we,\n\n126\n00:05:33.190 --> 00:05:38.050\nlet's do just a little bit different here\nI'm gonna add an h so its human readable.\n\n127\n00:05:38.050 --> 00:05:43.930\nBut the VI one was 1.1 megs in size,\nthe VIM one is 2.9 megs in size, right?\n\n128\n00:05:43.930 --> 00:05:47.290\nSo, in the Fedora world they actually\nhave two different versions of VIM.\n\n129\n00:05:47.290 --> 00:05:52.220\nThere is VIM light, which is trying\nto be more compatible with VI and\n\n130\n00:05:52.220 --> 00:05:54.280\nnot allow the extra bells and\nwhistles in it.\n\n131\n00:05:54.280 --> 00:05:56.100\nAnd then there's VIM enhanced.\n\n132\n00:05:56.100 --> 00:05:58.603\nAnd VIM Enhanced,\nthere's already VI Improved.\n\n133\n00:05:58.603 --> 00:06:00.508\n&gt;&gt; Yeah.\n&gt;&gt; Now there's VI Improved Enhanced.\n\n134\n00:06:00.508 --> 00:06:02.630\nSo VIM Enhanced adds even more bells and\n\n135\n00:06:02.630 --> 00:06:05.540\nwhistles to it with things like\nthe code coloring and stuff.\n\n136\n00:06:05.540 --> 00:06:07.210\nThat you may or may not need.\n\n137\n00:06:07.210 --> 00:06:10.030\nSo, again,\ncreates a little bit of uncertainty.\n\n138\n00:06:10.030 --> 00:06:11.030\nAm I running VI?\n\n139\n00:06:11.030 --> 00:06:11.860\nAm I running VIM?\n\n140\n00:06:11.860 --> 00:06:13.228\nAm I running Vim Enhanced?\n\n141\n00:06:13.228 --> 00:06:15.366\nYou may need to double\ncheck in your distro.\n\n142\n00:06:15.366 --> 00:06:17.664\nBut at the end of the day,\nif you're just run VI,\n\n143\n00:06:17.664 --> 00:06:19.925\nit'll usually tell you\nwhat you're running.\n\n144\n00:06:19.925 --> 00:06:22.197\nAnd you'll get that note\nright there on the screen and\n\n145\n00:06:22.197 --> 00:06:23.520\nthe version that you've got.\n\n146\n00:06:23.520 --> 00:06:26.094\nAnd it gives you kind of\nan idea of how that should be.\n\n147\n00:06:26.094 --> 00:06:28.701\nNow, remember the,\nI mentioned the zealotry over things.\n\n148\n00:06:28.701 --> 00:06:29.838\n&gt;&gt; Yeah.\n&gt;&gt; We were talking about\n\n149\n00:06:29.838 --> 00:06:30.875\ncapitalization before show.\n\n150\n00:06:30.875 --> 00:06:34.099\nAnd so you have VIM here all capital,\nbut then right beneath it capital V,\n\n151\n00:06:34.099 --> 00:06:35.348\nlowercase i, lowercase m.\n\n152\n00:06:35.348 --> 00:06:38.907\nSo, there is no real hard set way for\nhow this stuff works,\n\n153\n00:06:38.907 --> 00:06:40.953\nit's kind of all over the place.\n\n154\n00:06:40.953 --> 00:06:43.702\n&gt;&gt; All right Donald,\nlet's take some baby steps here and\n\n155\n00:06:43.702 --> 00:06:45.385\nlet's jump into opening a file.\n\n156\n00:06:45.385 --> 00:06:48.550\nI've already got a file or\nI wanna open a file, how do I do that?\n\n157\n00:06:48.550 --> 00:06:52.570\n&gt;&gt; Okay, so if you wanna open up a file\ninside of VIM there's two ways to do it.\n\n158\n00:06:52.570 --> 00:06:55.830\nThere is, one way to is if\nyou're from your command line.\n\n159\n00:06:55.830 --> 00:06:59.210\nThe other way is to do it right from\nin here, if you're already in VIM.\n\n160\n00:06:59.210 --> 00:07:02.125\nBut most of us don't do it this way,\nwhat you'll do, is,\n\n161\n00:07:02.125 --> 00:07:04.280\nif you've got a file\nthat you want to edit.\n\n162\n00:07:04.280 --> 00:07:07.637\nSo for example, here in my home directory,\nI've got the text of Moby Dick,\n\n163\n00:07:07.637 --> 00:07:08.950\nright there, right?\n\n164\n00:07:08.950 --> 00:07:14.860\nSo, if I wanna open that file up in VI,\nI would just say vi and\n\n165\n00:07:14.860 --> 00:07:18.800\nthen the name of the file, all right,\nso mobydick.text, and when I run that,\n\n166\n00:07:18.800 --> 00:07:24.990\nthere it goes, it opens it up, and now I'm\nediting my first file inside of VI, okay?\n\n167\n00:07:24.990 --> 00:07:29.100\nNow, if I didn't do that,\nif I just typed VI,\n\n168\n00:07:29.100 --> 00:07:34.600\nthat takes me into the editor, and\nI'm technically looking at a new file.\n\n169\n00:07:34.600 --> 00:07:37.730\nIt's displaying a what they\ncall a splash page, right?\n\n170\n00:07:37.730 --> 00:07:40.430\nThat's not actually text\nin the file though.\n\n171\n00:07:40.430 --> 00:07:44.378\nIf I start typing in here,\nsee how it all disappeared, right?\n\n172\n00:07:44.378 --> 00:07:47.164\nSo this is technically a blank file and\n\n173\n00:07:47.164 --> 00:07:52.661\nthat little bit that appears at the very\nbeginning, is just a splash page.\n\n174\n00:07:52.661 --> 00:07:56.217\nIt's letting you know some basic\ninformation because if you're lost,\n\n175\n00:07:56.217 --> 00:07:59.539\nif you get in here by accident,\nyou might only care about one thing,\n\n176\n00:07:59.539 --> 00:08:02.300\nhow do I get out of it,\nwhich fortunately is right here.\n\n177\n00:08:02.300 --> 00:08:04.665\nThey actually tell you how to get out of\nit, in case you launch it by accident.\n\n178\n00:08:04.665 --> 00:08:05.879\nCuz it's not intuitive.\n\n179\n00:08:05.879 --> 00:08:09.000\n[LAUGH] So there's that, and\nthey've got other things in here.\n\n180\n00:08:09.000 --> 00:08:12.359\nA lot of times they'll actually tell you\nthat if you wanna learn more there's\n\n181\n00:08:12.359 --> 00:08:13.880\na tutorial you can run.\n\n182\n00:08:13.880 --> 00:08:18.081\nThis particular version doesn't say it,\nbut you can type colon vim tutorial and\n\n183\n00:08:18.081 --> 00:08:21.724\nit'll actually walk you through\na whole lesson on how to learn it, and\n\n184\n00:08:21.724 --> 00:08:25.919\nyou've got help, and so on, but if I just\nwanna create a file from scratch I can do\n\n185\n00:08:25.919 --> 00:08:28.685\nit right from here, and\njust start to put in my data.\n\n186\n00:08:28.685 --> 00:08:32.589\nBut if I wanna work with a file, I just\ndo it right here from the command line,\n\n187\n00:08:32.589 --> 00:08:34.179\nI specify it, and there we go.\n\n188\n00:08:34.179 --> 00:08:37.260\nNow we're into it, and\nwe can start working with that file and\n\n189\n00:08:37.260 --> 00:08:38.515\nmodifying it as we need.\n\n190\n00:08:38.515 --> 00:08:42.192\n&gt;&gt; Now Don, I remember the first\ntime I fired up vi, or vim,\n\n191\n00:08:42.192 --> 00:08:46.560\nor whichever you'd like to call it,\nthe first thing I noticed was,\n\n192\n00:08:46.560 --> 00:08:51.027\nI wasn't able to just start typing\ninto and make changes on the file.\n\n193\n00:08:51.027 --> 00:08:55.941\nIt had me kind of locked into a system\nwhere things were kind of crazy,\n\n194\n00:08:55.941 --> 00:08:56.968\nwhat is that?\n\n195\n00:08:56.968 --> 00:08:57.810\nWhy is that happening?\n\n196\n00:08:57.810 --> 00:08:59.530\n&gt;&gt; All right, so this is the hardest part.\n\n197\n00:08:59.530 --> 00:09:02.180\nIf you can get past this\none little learning curve,\n\n198\n00:09:02.180 --> 00:09:03.949\nthe rest of vi is actually pretty easy.\n\n199\n00:09:04.970 --> 00:09:07.730\nThere's two modes,\ntwo interface modes, in vi,\n\n200\n00:09:07.730 --> 00:09:12.170\nand when you first go into it,\nyou're in what's called the command mode.\n\n201\n00:09:12.170 --> 00:09:14.130\nYou're issuing commands to the editor.\n\n202\n00:09:14.130 --> 00:09:14.790\nYou're not typing.\n\n203\n00:09:14.790 --> 00:09:17.540\nThe other mode is the insert mode.\n\n204\n00:09:17.540 --> 00:09:19.757\nIn the insert mode that's\nwhen you're typing.\n\n205\n00:09:19.757 --> 00:09:22.083\nSo the problem is that I don't know that.\n\n206\n00:09:22.083 --> 00:09:25.182\nMost text editors when you fire them\nup you're ready to just start typing.\n\n207\n00:09:25.182 --> 00:09:28.281\nYou put your cursor where you want\nit to be, and you start typing, but\n\n208\n00:09:28.281 --> 00:09:30.697\nin vi it's not like that,\nyou start in command mode.\n\n209\n00:09:30.697 --> 00:09:34.520\nSo if we go back here,\nI'm in the text for Moby-Dick, and\n\n210\n00:09:34.520 --> 00:09:36.405\nI can move my cursor around.\n\n211\n00:09:36.405 --> 00:09:40.513\nI'm just using the arrows on my keyboard\nto move around, and let's say, right here,\n\n212\n00:09:40.513 --> 00:09:44.790\nI wanna change this where it says English,\nand I wanna change it to French.\n\n213\n00:09:44.790 --> 00:09:49.697\nSo I put my cursor right on that H,\nand that hit backspace, and?\n\n214\n00:09:49.697 --> 00:09:50.625\n&gt;&gt; A whole lot of nothing.\n\n215\n00:09:50.625 --> 00:09:51.159\n&gt;&gt; It's moving back.\n\n216\n00:09:51.159 --> 00:09:51.713\n&gt;&gt; Yeah.\n[LAUGH]\n\n217\n00:09:51.713 --> 00:09:52.864\n&gt;&gt; But it's not actually removing\n\n218\n00:09:52.864 --> 00:09:54.530\nanything, and I'm like, well, all right.\n\n219\n00:09:54.530 --> 00:09:56.657\nI can try and type something.\n\n220\n00:09:56.657 --> 00:09:57.965\nMemo moved down to this blank line.\n\n221\n00:09:57.965 --> 00:09:59.676\nI'm gonna type the word this.\n\n222\n00:09:59.676 --> 00:10:03.996\nOkay, so I'm gonna type T-H-I-S.\n\n223\n00:10:03.996 --> 00:10:05.095\n&gt;&gt; You got the S in there.\n\n224\n00:10:05.095 --> 00:10:06.190\n&gt;&gt; The S appeared, and that's it.\n\n225\n00:10:06.190 --> 00:10:10.580\nAll right, the reason is,\neach letter that I pressed was a command.\n\n226\n00:10:10.580 --> 00:10:13.519\nI sent the T command, that did nothing.\n\n227\n00:10:13.519 --> 00:10:16.110\nI sent the H command, that did nothing.\n\n228\n00:10:16.110 --> 00:10:21.480\nI sent the I command, that did something,\nand then I type S and now I'm typing,\n\n229\n00:10:21.480 --> 00:10:25.910\nwhat happens is when I type I,\nthat switched me into insert mode.\n\n230\n00:10:25.910 --> 00:10:28.738\nI was in command mode and\nnow I'm in insert mode, and\n\n231\n00:10:28.738 --> 00:10:31.840\ninsert mode is the typing mode\nthat most of us are used to.\n\n232\n00:10:31.840 --> 00:10:34.010\n&gt;&gt; So now I can type this.\n\n233\n00:10:34.010 --> 00:10:38.610\nI can move up to where it says English,\nand I can backspace, and there it goes.\n\n234\n00:10:38.610 --> 00:10:42.900\nThe insert mode is what most of\nus are used to, all right, but\n\n235\n00:10:42.900 --> 00:10:47.125\nwhen you fire up vi,\nyou will be in command mode by default.\n\n236\n00:10:47.125 --> 00:10:50.932\nNow, I know that by looking\ndown here at the bottom left.\n\n237\n00:10:50.932 --> 00:10:54.430\nSee how it's telling me\nthat I'm in insert mode?\n\n238\n00:10:54.430 --> 00:10:58.299\nLet me get back out of this, and\nI'm gonna go back in, and now,\n\n239\n00:10:58.299 --> 00:11:01.075\nwhen I look at the bottom left,\nwhat do I see?\n\n240\n00:11:01.075 --> 00:11:07.036\nWell, I saw the file and its file size for\na moment, and now it's gone.\n\n241\n00:11:07.036 --> 00:11:09.055\nAs soon as I move my cursor\nthat disappears, and\n\n242\n00:11:09.055 --> 00:11:10.525\nnow there's nothing down there.\n\n243\n00:11:10.525 --> 00:11:14.173\nIf you see nothing in the bottom left,\nyou're in command mode, and\n\n244\n00:11:14.173 --> 00:11:19.050\nhere's where it gets even weirder, there's\nactually two different types of commands.\n\n245\n00:11:19.050 --> 00:11:21.410\n&gt;&gt; [LAUGH]\n&gt;&gt; There's commands that you can just type\n\n246\n00:11:21.410 --> 00:11:26.570\nright here, like I,\nthat would move me into insert mode, and\n\n247\n00:11:26.570 --> 00:11:32.590\nthere's other commands that you actually\nhave to type a colon to get to first.\n\n248\n00:11:32.590 --> 00:11:37.938\nSo, I type the word this a moment ago,\nand the second letter of this is H,\n\n249\n00:11:37.938 --> 00:11:41.032\nand when I typed that H nothing happened.\n\n250\n00:11:41.032 --> 00:11:42.930\nBut H is actually a valid command.\n\n251\n00:11:42.930 --> 00:11:46.290\nIt's just not a valid command\nin this particular mode.\n\n252\n00:11:46.290 --> 00:11:50.930\nIf I type a colon, see down at\nthe bottom left that colon appeared?\n\n253\n00:11:50.930 --> 00:11:54.340\nNow, I can type other commands,\ncommands that might be different.\n\n254\n00:11:54.340 --> 00:11:56.550\nSo, remember that H that\ndidn't do anything?\n\n255\n00:11:56.550 --> 00:11:59.817\nNow, I can type an H, and\npress enter, and it does something.\n\n256\n00:11:59.817 --> 00:12:04.745\nNow, I'm in the help, or vim, or\nvi, or whatever it is I'm using.\n\n257\n00:12:04.745 --> 00:12:07.330\nSo I can go in and I can start to read the\nhelp file, and start to learn about that.\n\n258\n00:12:07.330 --> 00:12:09.095\nIt's very, very exciting.\n\n259\n00:12:09.095 --> 00:12:14.638\nSo that information is available, and\nit's just kind of tricky to recognize\n\n260\n00:12:14.638 --> 00:12:19.923\nwhat it is that you're in if you're in\none mode or the other, and so, like\n\n261\n00:12:19.923 --> 00:12:25.585\nif I wanna exit out, I can hit :q, and\nI can exit, I just quit out of that file.\n\n262\n00:12:25.585 --> 00:12:28.310\nI had to type a colon\nfirst before I did it.\n\n263\n00:12:28.310 --> 00:12:31.870\nIf I just typed a Q,\nnothing happens, right?\n\n264\n00:12:31.870 --> 00:12:36.568\nWell not entirely nothing, you'll notice\ndown here at the bottom right that Q did\n\n265\n00:12:36.568 --> 00:12:40.860\nactually appear, because it's expecting\nme to do something with it, and\n\n266\n00:12:40.860 --> 00:12:43.742\nif I hit it again,\nsee how it started a recording?\n\n267\n00:12:43.742 --> 00:12:47.441\nSome commands do all sorts of different\nthings, I can create Macros, or\n\n268\n00:12:47.441 --> 00:12:49.817\nother recordings here, that's what Q does.\n\n269\n00:12:49.817 --> 00:12:54.113\nBut if I didn't recognize that I could\naccidentally issue that command,\n\n270\n00:12:54.113 --> 00:12:58.494\nlike I've done now, and it's starting\nthat mode, and I need to exit out.\n\n271\n00:12:58.494 --> 00:13:00.962\nI'll have hit Q again, so\nwe're not get get into recording methods.\n\n272\n00:13:00.962 --> 00:13:01.751\n&gt;&gt; [LAUGH] Yeah.\n\n273\n00:13:01.751 --> 00:13:04.905\n&gt;&gt; But [COUGH] it's really easy to\naccidentally issue a command, and\n\n274\n00:13:04.905 --> 00:13:07.910\nthat's what makes vi so\nintimidating for people.\n\n275\n00:13:07.910 --> 00:13:09.140\nTo kind of get used to that,\n\n276\n00:13:09.140 --> 00:13:12.810\nto understand that there's times\nwhere the H key can do one thing,\n\n277\n00:13:12.810 --> 00:13:16.040\nthere's times when it does another thing,\nand how do I remember which is which?\n\n278\n00:13:16.040 --> 00:13:18.180\nYou've gotta learn the modes.\n\n279\n00:13:18.180 --> 00:13:21.560\nSo, if we really wanted to get\ndown to the brass tax of it,\n\n280\n00:13:21.560 --> 00:13:23.760\nI guess there's technically three modes.\n\n281\n00:13:23.760 --> 00:13:28.102\nThere's the insert mode where we type like\nnormal, there's the command mode with no\n\n282\n00:13:28.102 --> 00:13:32.505\ncolon, and then there's the command mode\nwith a colon, and so we've gotta recognize\n\n283\n00:13:32.505 --> 00:13:35.665\nthe behavior of vim depending on\nwhich mode we happen to be in.\n\n284\n00:13:35.665 --> 00:13:39.056\n&gt;&gt; Well Don, I would assume that for\nthe most part, especially\n\n285\n00:13:39.056 --> 00:13:43.591\nif we're beginning in vim or vi, that we\njust want to start creating a text file.\n\n286\n00:13:43.591 --> 00:13:47.522\nI just wanna add text to my file, put my\ngrocery list, put things I need to do,\n\n287\n00:13:47.522 --> 00:13:50.989\nmaybe server list, whatever it is\nI'm doing, I wanna get that in.\n\n288\n00:13:50.989 --> 00:13:53.457\nSo I would think maybe insert\nmode might be a good place for\n\n289\n00:13:53.457 --> 00:13:54.801\nus to start learning about it.\n\n290\n00:13:54.801 --> 00:13:55.910\n&gt;&gt; Yes, absolutely.\n\n291\n00:13:55.910 --> 00:14:00.984\nSo if I wanna insert more text, or\neven delete text, or whatever, I need to\n\n292\n00:14:00.984 --> 00:14:06.157\nget into insert mode, and there is just\none command you can remember right?\n\n293\n00:14:06.157 --> 00:14:08.463\n&gt;&gt; [LAUGH]\n&gt;&gt; There's actually like eight commands\n\n294\n00:14:08.463 --> 00:14:11.395\nthat you can use, but there's one\nthat is the easiest, and it's just I,\n\n295\n00:14:11.395 --> 00:14:12.355\nI for insert.\n\n296\n00:14:12.355 --> 00:14:13.405\nSo if I wanna come in here and\n\n297\n00:14:13.405 --> 00:14:17.845\nstart typing in this file, I can move\nmy cursor to where I want it to be, and\n\n298\n00:14:17.845 --> 00:14:22.315\nI can type I, and now I'm in\nthe insert mode and I can start going.\n\n299\n00:14:22.315 --> 00:14:26.115\nNow, technically, that I, when I press it,\n\n300\n00:14:26.115 --> 00:14:32.130\nit's telling me that I want to insert\ntext after the cursor, all right.\n\n301\n00:14:32.130 --> 00:14:35.330\nSo, let me show you what I mean, so\nI get this in a little more detail.\n\n302\n00:14:35.330 --> 00:14:38.570\nSee how cursor right now is\nblinking on the end in English?\n\n303\n00:14:39.940 --> 00:14:41.600\nThat's where my cursor is.\n\n304\n00:14:41.600 --> 00:14:46.150\nWhen I press I,\nnow I can start typing, and\n\n305\n00:14:46.150 --> 00:14:50.300\nwhen I start typing it's\ntyping right on that cursor.\n\n306\n00:14:50.300 --> 00:14:53.440\nOkay, I can change that behavior.\n\n307\n00:14:53.440 --> 00:14:58.460\nIf I, instead of typing a lower case i,\nif I typed a capital I, so if\n\n308\n00:14:58.460 --> 00:15:03.490\nI put that cursor right back on the end,\nand I'll do a capital I, look what it did.\n\n309\n00:15:03.490 --> 00:15:06.510\nIt jumped to the beginning of the line.\n\n310\n00:15:06.510 --> 00:15:11.024\nSo a lower case i is looking for where\nthe cursor is, a capital I is going to\n\n311\n00:15:11.024 --> 00:15:16.352\nthe beginning of the line, and we can go\neven more advanced with things like if l,\n\n312\n00:15:16.352 --> 00:15:21.405\nl'm gonna make sure that l'm showing my\nbottom left part of the screen here too.\n\n313\n00:15:21.405 --> 00:15:26.137\nIf l type o, it goes after the line.\n\n314\n00:15:26.137 --> 00:15:30.300\nMaybe l wanna add a line after the one\nthat l'm on, and l can do that, and see so\n\n315\n00:15:30.300 --> 00:15:34.784\nit did flip me to insert mode, l see that\nnote right there, and l'm now inserting,\n\n316\n00:15:34.784 --> 00:15:36.850\nand typing right here after it.\n\n317\n00:15:36.850 --> 00:15:38.505\nThat was a lower case o.\n\n318\n00:15:38.505 --> 00:15:43.790\nIf I do a capital O,\nwell it behaves pretty much the same.\n\n319\n00:15:43.790 --> 00:15:46.308\nNow, I'm in insert mode, and\nI can come in, and I can type, and\n\n320\n00:15:46.308 --> 00:15:47.112\nI can start to work.\n\n321\n00:15:47.112 --> 00:15:51.436\nSometimes the capital letter just\nbehaves the same as the lower case,\n\n322\n00:15:51.436 --> 00:15:54.159\nother times it doesn't, for example, a.\n\n323\n00:15:54.159 --> 00:15:58.413\nWith I,\nI inserted right where my cursor was.\n\n324\n00:15:58.413 --> 00:16:00.756\nSo, if my cursor is here on the u,\nif I type an I,\n\n325\n00:16:00.756 --> 00:16:02.593\nI would start inserting right here.\n\n326\n00:16:02.593 --> 00:16:07.692\nIf I type a lower case a, oops,\nsorry I was still in command mode.\n\n327\n00:16:07.692 --> 00:16:09.640\nAll right, again, I screwed up.\n\n328\n00:16:09.640 --> 00:16:16.120\nSo, if I put my cursor on the g, and\nI hit the lower case a, it's going\n\n329\n00:16:16.120 --> 00:16:20.442\nright after the cursor, so I was right on\nthe cursor, a is right after the cursor.\n\n330\n00:16:20.442 --> 00:16:25.390\nIf I had done a capital A, though,\nit goes to the end of the line.\n\n331\n00:16:25.390 --> 00:16:28.870\nSo, capital A goes to the end,\ncapital I goes to the beginning,\n\n332\n00:16:28.870 --> 00:16:33.130\nlower case i goes on the cursor,\nlower case a goes after the cursor.\n\n333\n00:16:33.130 --> 00:16:34.650\nIt's confusing, right?\n\n334\n00:16:34.650 --> 00:16:40.430\nAnd you might ask yourself,\nhow do you remember all of this?\n\n335\n00:16:40.430 --> 00:16:43.680\nWell, there's about kinda\nfew [INAUDIBLE] on this.\n\n336\n00:16:43.680 --> 00:16:44.866\nYou could choose not to.\n\n337\n00:16:44.866 --> 00:16:45.630\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n338\n00:16:45.630 --> 00:16:46.530\n&gt;&gt; I'm not gonna remember.\n\n339\n00:16:46.530 --> 00:16:48.800\nI'm just going to always use lower case i.\n\n340\n00:16:48.800 --> 00:16:51.030\nCuz the reality is, I can do that, right?\n\n341\n00:16:51.030 --> 00:16:52.523\nAnd, whoops, [LAUGH].\n\n342\n00:16:52.523 --> 00:16:53.710\nDo a lower case i and\n\n343\n00:16:53.710 --> 00:16:57.340\nnow I can just move my cursor to\nwherever it is that I want it to be.\n\n344\n00:16:57.340 --> 00:16:59.160\nSo you can certainly do that.\n\n345\n00:16:59.160 --> 00:17:01.145\nOr you can memorize it.\n\n346\n00:17:01.145 --> 00:17:02.670\n&gt;&gt; Mm-hm.\n&gt;&gt; You just print out a list like\n\n347\n00:17:02.670 --> 00:17:05.535\nmine here and try and memorize it and\nthen have it committed to memory.\n\n348\n00:17:05.535 --> 00:17:07.253\nOr you could cheat.\n\n349\n00:17:07.253 --> 00:17:08.980\n&gt;&gt; [LAUGH] I like cheating.\n\n350\n00:17:08.980 --> 00:17:11.800\n&gt;&gt; Yeah, sometimes theres a real\nbenefit for cheating, and\n\n351\n00:17:11.800 --> 00:17:14.210\nI absolutely cheat when it's necessary.\n\n352\n00:17:15.230 --> 00:17:17.560\nWith vi shortcuts it's kinda handy.\n\n353\n00:17:17.560 --> 00:17:20.000\nCan we show my keyboard on my laptop?\n\n354\n00:17:20.000 --> 00:17:21.780\nSo you guys don't normally see my laptop.\n\n355\n00:17:21.780 --> 00:17:27.430\nBut if you look at my laptop, for $7\nonline, you can buy these little stickers.\n\n356\n00:17:27.430 --> 00:17:31.910\nAnd these are all the vi commands,\nright here on my keys.\n\n357\n00:17:31.910 --> 00:17:33.820\nBecause some of them we\ndon't use very often, right?\n\n358\n00:17:33.820 --> 00:17:35.480\n&gt;&gt; Right.\n&gt;&gt; I use the insert commands all the time.\n\n359\n00:17:35.480 --> 00:17:38.100\nSo that's not something that I\nreally have to remember, but\n\n360\n00:17:38.100 --> 00:17:39.610\nI don't record macros all the time.\n\n361\n00:17:39.610 --> 00:17:43.520\nSo I'm might not remember the q\nis a way to record macros.\n\n362\n00:17:43.520 --> 00:17:48.000\nBut I can see right here on my little\nnote, lower keys q, record macro.\n\n363\n00:17:48.000 --> 00:17:48.630\n&gt;&gt; Macro.\n\n364\n00:17:48.630 --> 00:17:51.516\n&gt;&gt; Capital Q is x mode, so\nit's completely different.\n\n365\n00:17:51.516 --> 00:17:55.585\nBut I can see each of those, and\nsee we've got A's appended end of line,\n\n366\n00:17:55.585 --> 00:17:57.535\nlower case a is append right here.\n\n367\n00:17:57.535 --> 00:17:59.467\nThat helps to memorize, helps to learn.\n\n368\n00:17:59.467 --> 00:18:03.518\nSo when you're getting started with vi\ntools like these keyboard overlays, or\n\n369\n00:18:03.518 --> 00:18:05.090\nlittle printed cheat sheets,\n\n370\n00:18:05.090 --> 00:18:08.183\nthose can really help you with\nlearning all these commands.\n\n371\n00:18:08.183 --> 00:18:09.575\nBecause it is kind of a like fire hose,\n\n372\n00:18:09.575 --> 00:18:12.040\nthere's so\nmany different command that's available.\n\n373\n00:18:12.040 --> 00:18:14.890\nBut just to get started,\nif you just remember the letter I,\n\n374\n00:18:14.890 --> 00:18:17.840\nyou can get into insert mode and\nthen you can start typing.\n\n375\n00:18:17.840 --> 00:18:20.590\nYou can just move your cursor where\nyou need it to go and start typing.\n\n376\n00:18:20.590 --> 00:18:23.200\nThat's the one that's at least\nenough to get you in there.\n\n377\n00:18:23.200 --> 00:18:28.580\nBut if you remember the capital I, A,\ncapital A, O, those all help as well\n\n378\n00:18:28.580 --> 00:18:31.960\nto be able to get right to where you want\nwithout having to move your cursor around.\n\n379\n00:18:31.960 --> 00:18:36.530\nWell Don, how were you bouncing in and\nout of insert mode to command mode?\n\n380\n00:18:36.530 --> 00:18:39.860\nCuz you would type stuff and\nthen you would, I'm still in insert mode,\n\n381\n00:18:39.860 --> 00:18:40.820\nI need to go to command mode.\n\n382\n00:18:40.820 --> 00:18:41.960\nHow did you get back to that?\n\n383\n00:18:41.960 --> 00:18:44.445\n&gt;&gt; Well, I didn't do it very well,\ncuz I screwed up several times.\n\n384\n00:18:44.445 --> 00:18:46.900\n&gt;&gt; [LAUGH]\n&gt;&gt; But I type i to get me in insert mode,\n\n385\n00:18:46.900 --> 00:18:51.130\nhere let's go back and I'll get into\ninsert So I just type a lowercase i,\n\n386\n00:18:51.130 --> 00:18:53.710\nand down at the bottom left I\nsee I'm now in insert mode.\n\n387\n00:18:53.710 --> 00:18:55.400\nAnd I start typing, right?\n\n388\n00:18:55.400 --> 00:18:58.560\nIf I wanna get back to command mode,\nyou just hit escape.\n\n389\n00:18:58.560 --> 00:19:02.540\nWhen you hit the escape button on your\nkeyboard, see how insert just went away?\n\n390\n00:19:02.540 --> 00:19:06.930\nAnd now that it's gone,\nI can start working like normal.\n\n391\n00:19:06.930 --> 00:19:08.980\n&gt;&gt; So Don,\nwhat do people with new MacBook Pros do?\n\n392\n00:19:08.980 --> 00:19:09.730\n[LAUGH] Right,\n\n393\n00:19:09.730 --> 00:19:13.370\ncuz it's a little consternation\ngoing on because of that LCD bar.\n\n394\n00:19:13.370 --> 00:19:16.460\n&gt;&gt; There is, so on the newer Macs,\nthey've got that touch bar, and\n\n395\n00:19:16.460 --> 00:19:17.650\nthe Escape key is in there.\n\n396\n00:19:17.650 --> 00:19:19.770\nAnd I know Justin,\n&gt;&gt; You have to hit it like nine times to\n\n397\n00:19:19.770 --> 00:19:21.252\nget the escape key to show up.\n\n398\n00:19:21.252 --> 00:19:22.128\n[LAUGH]\n&gt;&gt; Justin,\n\n399\n00:19:22.128 --> 00:19:25.320\none of our developers,\nhas been having some fun with that.\n\n400\n00:19:25.320 --> 00:19:27.935\nBut for most of us, we have a real\ncomputer that still has Escape key.\n\n401\n00:19:27.935 --> 00:19:29.850\n&gt;&gt; [LAUGH]\n&gt;&gt; And you can press that and\n\n402\n00:19:29.850 --> 00:19:30.790\nyou'll get right out of it.\n\n403\n00:19:30.790 --> 00:19:32.600\nBut yeah, that Escape key is really handy.\n\n404\n00:19:32.600 --> 00:19:35.610\nI think Stanley in the chatroom said,\nescape is your friend.\n\n405\n00:19:35.610 --> 00:19:36.690\n&gt;&gt; Darn right.\n&gt;&gt; And absolutely,\n\n406\n00:19:36.690 --> 00:19:38.430\nthat's how we get out of insert mode, and\n\n407\n00:19:38.430 --> 00:19:41.440\nnow we're back in command mode and\nready to start issuing commands.\n\n408\n00:19:41.440 --> 00:19:43.980\n&gt;&gt; All right, well now that I'm back\nin command mode, I've typed up my file,\n\n409\n00:19:43.980 --> 00:19:47.220\nI've edited Moby Dick, that Melville,\nhe didn't know what he was talking about,\n\n410\n00:19:47.220 --> 00:19:49.390\nI had to make some editing and\nchanging it.\n\n411\n00:19:49.390 --> 00:19:50.970\nI have made it just right.\n\n412\n00:19:50.970 --> 00:19:54.480\nAnd now, I want to save that file,\nwhat will I got to do?\n\n413\n00:19:54.480 --> 00:19:56.760\n&gt;&gt; All right, so\nthe few different ways to go about this,\n\n414\n00:19:56.760 --> 00:20:01.200\nif we're ready to save a file,\nwe can just save it.\n\n415\n00:20:01.200 --> 00:20:04.220\nThe save command is a w,\nso you would type a colon.\n\n416\n00:20:04.220 --> 00:20:06.552\nSo now, I'm in my colon command mode.\n\n417\n00:20:06.552 --> 00:20:07.540\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n418\n00:20:07.540 --> 00:20:08.040\n&gt;&gt; Just type a W.\n\n419\n00:20:08.040 --> 00:20:09.200\n&gt;&gt; Just couldn't help\n\n420\n00:20:09.200 --> 00:20:10.330\nyourself on that one.\n\n421\n00:20:10.330 --> 00:20:12.280\n&gt;&gt; I know it, this is terrible.\n\n422\n00:20:12.280 --> 00:20:13.270\n&gt;&gt; We're children.\n\n423\n00:20:13.270 --> 00:20:15.550\n&gt;&gt; Colon W, presenter and there we go.\n\n424\n00:20:15.550 --> 00:20:18.160\nI see that I just saved it,\nand that was it.\n\n425\n00:20:18.160 --> 00:20:22.770\nAnd if I'm done editing the file,\nI can follow it up by doing a colon Q.\n\n426\n00:20:22.770 --> 00:20:25.580\nAnd I quit out of it, and now I'm out.\n\n427\n00:20:25.580 --> 00:20:28.350\nAnd you can even combine the commands,\nyou can string them together.\n\n428\n00:20:28.350 --> 00:20:32.457\nSo if I get back into it, and I get\nin insert mode, and I type something,\n\n429\n00:20:32.457 --> 00:20:34.734\nI hit escape to go back to command mode.\n\n430\n00:20:34.734 --> 00:20:39.449\nI can do a colon wq and it'll do both,\nit will write the file and\n\n431\n00:20:39.449 --> 00:20:41.820\nthen it will quit the program.\n\n432\n00:20:41.820 --> 00:20:43.090\n&gt;&gt; So you just put the commands together.\n\n433\n00:20:43.090 --> 00:20:44.710\n&gt;&gt; Yeah, the order is important.\n\n434\n00:20:44.710 --> 00:20:46.900\nI don't want it to try quitting first and\nthen writing.\n\n435\n00:20:46.900 --> 00:20:48.700\nThat doesn't work out so well.\n\n436\n00:20:48.700 --> 00:20:51.245\nBut here, I want to write and\nthen quit, and it will do that, and\n\n437\n00:20:51.245 --> 00:20:52.665\nit takes me right out.\n\n438\n00:20:52.665 --> 00:20:54.730\nAnd it's actually protecting you a bit.\n\n439\n00:20:54.730 --> 00:20:58.960\nIf I were to have come in here and\nlet's say that I removed that line, okay.\n\n440\n00:20:58.960 --> 00:21:00.730\nAnd then I decide that I'm gonna quit.\n\n441\n00:21:02.300 --> 00:21:05.840\nWell, error 37,\nno right since last changed.\n\n442\n00:21:05.840 --> 00:21:09.580\nIt's telling me, you've made changes,\nyou probably want to save.\n\n443\n00:21:09.580 --> 00:21:11.280\nOkay, so it helps me there, it protects.\n\n444\n00:21:11.280 --> 00:21:14.710\nNow, sometimes its a change by accident.\n\n445\n00:21:14.710 --> 00:21:17.900\nMaybe I forgot that I was in command\nmode and I type something and\n\n446\n00:21:17.900 --> 00:21:20.110\nit did all sorts of\nscrewy stuff to the file.\n\n447\n00:21:20.110 --> 00:21:22.450\nThat's a true story,\nit happens all too often.\n\n448\n00:21:22.450 --> 00:21:25.610\nSo you mess it up and\nmaybe you wanna quit and not save.\n\n449\n00:21:25.610 --> 00:21:28.300\nWell, it's telling you, you can add\nan exclamation point to overwrite.\n\n450\n00:21:28.300 --> 00:21:31.840\nYou can type a colon q and\nan exclamation point,\n\n451\n00:21:31.840 --> 00:21:35.940\nthat's gonna quit out of the editor and\nthrow away my changes.\n\n452\n00:21:35.940 --> 00:21:39.550\nSo I deleted the word test\nunder language English.\n\n453\n00:21:39.550 --> 00:21:44.120\nAnd so if I quit and I go back in,\nthere's test right back again.\n\n454\n00:21:44.120 --> 00:21:45.410\nIt didn't save my changes.\n\n455\n00:21:45.410 --> 00:21:46.470\nThat's kinda nice.\n\n456\n00:21:46.470 --> 00:21:50.910\nBut colon q,\nthat'll get you out of there and save it.\n\n457\n00:21:50.910 --> 00:21:54.920\nNow, I mentioned how there's\ntwo different command modes.\n\n458\n00:21:56.030 --> 00:21:58.840\nThe main command mode, the one that we\nuse the most is the one with the colon.\n\n459\n00:21:58.840 --> 00:22:01.820\nSo I type a colon and\nI start typing commands.\n\n460\n00:22:01.820 --> 00:22:07.350\nBut there are other commands available\nthat don't use the colon mode.\n\n461\n00:22:07.350 --> 00:22:12.380\nSo, for example, if I wanna get out of Vi,\nI just got out of it,\n\n462\n00:22:12.380 --> 00:22:13.710\nbut I never did type a colon.\n\n463\n00:22:13.710 --> 00:22:15.520\nLet me show you how I did that.\n\n464\n00:22:15.520 --> 00:22:19.020\nIf you type a capital Z, watch down\nhere at the bottom of my screen,\n\n465\n00:22:19.020 --> 00:22:21.180\nyou're gonna see it appear\nright in here somewhere.\n\n466\n00:22:21.180 --> 00:22:24.640\nI'm gonna type a capital Z, so\nit receive that command and\n\n467\n00:22:24.640 --> 00:22:26.030\nlet me type another capital Z.\n\n468\n00:22:27.170 --> 00:22:30.730\nTwo capital Zs,\nthat's another command for exit.\n\n469\n00:22:30.730 --> 00:22:32.180\nI want to get out of vi.\n\n470\n00:22:32.180 --> 00:22:35.050\nAnd it's done,\nnot from the colon command mode, but\n\n471\n00:22:35.050 --> 00:22:38.680\nfrom the regular just\nlettered command mode.\n\n472\n00:22:38.680 --> 00:22:40.430\nNow, that's the less common one,\n\n473\n00:22:40.430 --> 00:22:43.920\nbecause there's far fewer\ncommands that work in that mode.\n\n474\n00:22:43.920 --> 00:22:47.310\nSo, as a general rule of thumb, if you're\njust learning vi, I encourage you to learn\n\n475\n00:22:47.310 --> 00:22:51.230\nthe colon commands first\nbecause there is more of them.\n\n476\n00:22:51.230 --> 00:22:53.080\nThat you can get everything\ndone with that one.\n\n477\n00:22:53.080 --> 00:22:55.630\nVersus the other letters which\nare technically shorter so\n\n478\n00:22:55.630 --> 00:22:58.540\na few less keystrokes,\nlike its not really isn't?\n\n479\n00:22:58.540 --> 00:23:00.630\n&gt;&gt; No, not a lot.\n&gt;&gt; And you get to capitalize.\n\n480\n00:23:00.630 --> 00:23:02.070\nAll right, maybe it's not so good.\n\n481\n00:23:02.070 --> 00:23:05.770\nBut it is there and its mostly different\nbackground compatibility from the original\n\n482\n00:23:05.770 --> 00:23:08.130\nvie that you use those commands.\n\n483\n00:23:08.130 --> 00:23:11.720\nThe colon commands are added to this part\nof them, I mean, it really has a part when\n\n484\n00:23:11.720 --> 00:23:15.250\nwe get there, so, part of\nthe enhancements, and it's upgrades.\n\n485\n00:23:15.250 --> 00:23:21.330\nBut that gets me in, and it gets me in now\nof the file so I'm able to start working.\n\n486\n00:23:21.330 --> 00:23:25.267\nIf I just wanted to read the file, I don't\nwant to get into it, read it, look around,\n\n487\n00:23:25.267 --> 00:23:26.990\nand then do a colon q to get out.\n\n488\n00:23:26.990 --> 00:23:29.550\nI never changed it, so\nI don't need to save, so\n\n489\n00:23:29.550 --> 00:23:33.730\nthe colon q is enough to get there,\nand now we're in business.\n\n490\n00:23:33.730 --> 00:23:37.940\n&gt;&gt; Well, Don, I know that vi and\nvim, they also have some really cool\n\n491\n00:23:37.940 --> 00:23:41.510\nshortcuts when it comes to working\ninside of it, doing things with it.\n\n492\n00:23:41.510 --> 00:23:45.000\nAnd I think that's a lot of the reason for\nits popularity,\n\n493\n00:23:45.000 --> 00:23:49.190\nbecause deleting text,\nthat's one of my favorite things.\n\n494\n00:23:49.190 --> 00:23:52.800\nI can go in, right, we saw Don,\nhe wrote some stuff, he goes in and\n\n495\n00:23:52.800 --> 00:23:54.580\nyou can backspace and delete, or\n\n496\n00:23:54.580 --> 00:23:57.560\nyou can hit the delete key and\nbring it from the other side.\n\n497\n00:23:57.560 --> 00:24:01.970\nBut you can also do a little more quicker,\nand a little better.\n\n498\n00:24:01.970 --> 00:24:06.310\n&gt;&gt; The colon commands,\nthey can be executed on a range of lines.\n\n499\n00:24:06.310 --> 00:24:09.040\nSo, if I just press the delete key,\nI'm deleting something on one line.\n\n500\n00:24:09.040 --> 00:24:12.190\nBut if I wanna delete five lines,\nI don't want to sit there and\n\n501\n00:24:12.190 --> 00:24:14.510\nhold the delete key while it\nslowly deletes five lines.\n\n502\n00:24:14.510 --> 00:24:16.560\nAnd that's where those colon\ncommands come in really powerful.\n\n503\n00:24:16.560 --> 00:24:20.220\nSo I want to walk you\nthrough several of those.\n\n504\n00:24:20.220 --> 00:24:23.780\nThing like, multiline deletes,\narrange commands, copy and paste,\n\n505\n00:24:23.780 --> 00:24:29.170\nsearch and replace, and those things\nare all powered by those colon commands.\n\n506\n00:24:29.170 --> 00:24:30.120\nBut what we've seen so\n\n507\n00:24:30.120 --> 00:24:33.680\nfar in this episode are kind of the basics\nof what you need just to get started with\n\n508\n00:24:33.680 --> 00:24:38.100\nvi and get in there and edit a config\nfile or change something just real quick.\n\n509\n00:24:38.100 --> 00:24:40.060\nAnd it's really the important\nstuff that you need to know,\n\n510\n00:24:40.060 --> 00:24:44.970\nso getting in,\nusing I to get into insert mode.\n\n511\n00:24:44.970 --> 00:24:48.580\nDoing colon W and\ncolon Q to save and quit.\n\n512\n00:24:48.580 --> 00:24:52.710\nThose are key and\nyou're gonna use those every single day.\n\n513\n00:24:52.710 --> 00:24:54.420\nThe rest of them are all nice to know.\n\n514\n00:24:54.420 --> 00:24:56.940\nThey make your life easier, and\nthe more proficient you get with it,\n\n515\n00:24:56.940 --> 00:24:59.540\nthe faster you'll be able\nto edit files with vi.\n\n516\n00:24:59.540 --> 00:25:00.840\nSo I wanna walk you through those, but\n\n517\n00:25:00.840 --> 00:25:02.650\nI don't really have enough\ntime here in this episode.\n\n518\n00:25:02.650 --> 00:25:04.310\nSo, Daniel, let's do a part two.\n\n519\n00:25:04.310 --> 00:25:05.520\n&gt;&gt; Sounds good.\n&gt;&gt; And we'll treat it like this.\n\n520\n00:25:05.520 --> 00:25:07.650\nSo, part one, these were the core,\n\n521\n00:25:07.650 --> 00:25:10.390\nfundamental commands we need\nto know to work with vi.\n\n522\n00:25:10.390 --> 00:25:13.710\nAnd then in Part Two, we're gonna show you\nthe ones that can really start to ratchet\n\n523\n00:25:13.710 --> 00:25:17.860\nup your productivity and\ntake advantage of some of the quick,\n\n524\n00:25:17.860 --> 00:25:20.000\nlarge scale bulk editing\nthat we can do inside of vi.\n\n525\n00:25:20.000 --> 00:25:21.330\n&gt;&gt; All right, well Don, sounds great,\n\n526\n00:25:21.330 --> 00:25:25.260\nI can't wait to see what's gonna go on\ninside of that Part Two because I know\n\n527\n00:25:25.260 --> 00:25:28.390\nmy vi skills could definitely use\na little bit of polishing, I'm sure.\n\n528\n00:25:28.390 --> 00:25:30.170\nMost of us are in the same boat.\n\n529\n00:25:30.170 --> 00:25:32.790\nSo thanks for joining us today,\nwe appreciate your time and effort.\n\n530\n00:25:32.790 --> 00:25:34.930\nAppreciate our audience out there for\nwatching.\n\n531\n00:25:34.930 --> 00:25:38.340\nBut as the man has said, we are out of\ntime for this episode, come on back for\n\n532\n00:25:38.340 --> 00:25:40.390\nthat part two and\nlearn a little more about vi though.\n\n533\n00:25:40.390 --> 00:25:43.190\nSigning off for ITPro.TV,\nI've been your host Daniel Lowrie.\n\n534\n00:25:43.190 --> 00:25:43.850\n&gt;&gt; And I'm Don Pezet.\n\n535\n00:25:43.850 --> 00:25:44.992\n&gt;&gt; And we'll see you next time.\n\n536\n00:25:46.959 --> 00:25:52.437\n[MUSIC]\n\n537\n00:25:52.437 --> 00:25:55.436\n&gt;&gt; Thank you for watching IT Pro TV.\n\n",
          "vimeoId": "236078959"
        },
        {
          "description": "In this episode, Don continues to work with Vi/Vim. He walks the viewers through more advanced commands that can increase productivity while in the editor. Specifically, he demonstrates how to copy and paste, work with multiple lines at once, and how to search through a document.",
          "length": "1182",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-6-1-2-vi_and_vim_pt_2-092717-PGM.00_19_27_10.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-6-1-2-vi_and_vim_pt_2-092717-PGM.00_19_27_10.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-6-1-2-vi_and_vim_pt_2-092717-PGM.00_19_27_10.Still001-sm.jpg",
          "title": "vi and vim Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:01.301\nWelcome to ITPRO.TV.\n\n2\n00:00:01.301 --> 00:00:06.389\n[CROSSTALK]\n\n3\n00:00:06.389 --> 00:00:08.229\n[MUSIC]\n\n4\n00:00:08.229 --> 00:00:12.039\n&gt;&gt; You're watching ITPRO.TV.\n\n5\n00:00:12.039 --> 00:00:14.049\n&gt;&gt; All right, greetings, everyone, and\n\n6\n00:00:14.049 --> 00:00:16.482\nwelcome to another great\nepisode of ITPRO.TV.\n\n7\n00:00:16.482 --> 00:00:18.050\nI'm your host, Daniel Lowrie.\n\n8\n00:00:18.050 --> 00:00:21.180\nAnd in today's episode, we're back with\nmore in our command line series for\n\n9\n00:00:21.180 --> 00:00:22.378\nthe Linux operating system.\n\n10\n00:00:22.378 --> 00:00:26.180\nAnd joining us back in the studio again,\nwe're continuing our conversation\n\n11\n00:00:26.180 --> 00:00:29.960\non the vi or vim editor,\nour good friend, Don Pezet.\n\n12\n00:00:29.960 --> 00:00:30.860\nDon, welcome back, sir.\n\n13\n00:00:30.860 --> 00:00:31.590\nHow's it going today?\n\n14\n00:00:31.590 --> 00:00:32.810\n&gt;&gt; It is going just well, Daniel.\n\n15\n00:00:32.810 --> 00:00:33.740\nWe're gonna dive right back in and\n\n16\n00:00:33.740 --> 00:00:37.550\ngo a little further into vi than\nwe did in the last episode.\n\n17\n00:00:37.550 --> 00:00:41.140\nLast episode kind of served as a primer,\nteaching us the basics that we need to\n\n18\n00:00:41.140 --> 00:00:44.260\nknow just to get in,\nedit a file, save, and get out.\n\n19\n00:00:44.260 --> 00:00:47.782\nBut now, I wanna kick it up a notch and go\ninto some of the more advanced functions\n\n20\n00:00:47.782 --> 00:00:50.686\nthat are, I mean, it's not super advanced,\nbut delete stuff.\n\n21\n00:00:50.686 --> 00:00:52.288\n&gt;&gt; [LAUGH]\n&gt;&gt; Things like that, but\n\n22\n00:00:52.288 --> 00:00:55.831\nthey are important, ones that will\nmake our job a little bit easier and\n\n23\n00:00:55.831 --> 00:00:59.455\nhelp you to see how vi can be used to\nquickly and efficiently edit files.\n\n24\n00:00:59.455 --> 00:01:02.829\n&gt;&gt; Well, Don, it'll be a lot of fun\nbecause I know that once I've written\n\n25\n00:01:02.829 --> 00:01:04.515\nup that letter, that email to you,\n\n26\n00:01:04.515 --> 00:01:08.310\nor just my first draft of it,\nthat tells you how much I can't stand you.\n\n27\n00:01:08.310 --> 00:01:11.205\nI realize, yeah, it felt good to write,\nbut I probably shouldn't send that.\n\n28\n00:01:11.205 --> 00:01:13.341\n&gt;&gt; [LAUGH]\n&gt;&gt; Get it out of the file that we're\n\n29\n00:01:13.341 --> 00:01:15.753\nsharing, and\ndeletion is a good place to start.\n\n30\n00:01:15.753 --> 00:01:16.811\nLet's start there.\n\n31\n00:01:16.811 --> 00:01:20.442\n&gt;&gt; [LAUGH] All right, so let's go, and\nwe'll jump back into that Moby Dick file\n\n32\n00:01:20.442 --> 00:01:24.095\nthat I've been kind of using this show,\nand we'll edit that one.\n\n33\n00:01:24.095 --> 00:01:26.765\nAnd let's say that I wanna\ndelete some data out of here.\n\n34\n00:01:26.765 --> 00:01:30.235\nWell, if you're in insert mode, so\nI'll press i to get into insert mode,\n\n35\n00:01:30.235 --> 00:01:33.485\nyou can just move wherever you want,\nand you can use your Backspace and\n\n36\n00:01:33.485 --> 00:01:35.605\nDelete keys just like normal, right?\n\n37\n00:01:35.605 --> 00:01:37.790\nSo it's not too big of a deal there.\n\n38\n00:01:37.790 --> 00:01:40.570\nWe can go through and\nwe can delete things just like normal.\n\n39\n00:01:40.570 --> 00:01:43.790\nBut if I wanna delete an entire line,\nlike let's say this line here,\n\n40\n00:01:43.790 --> 00:01:47.840\nthis START OF THIS PROJECT GUTENBERG\nEBOOK MOBY DICK; OR THE WHALE.\n\n41\n00:01:47.840 --> 00:01:49.200\nSo I wanna delete that whole line.\n\n42\n00:01:49.200 --> 00:01:50.960\nWell, I could move to it and\n\n43\n00:01:50.960 --> 00:01:53.600\nthen hold down the Delete key\nwhile it slowly went away.\n\n44\n00:01:53.600 --> 00:01:54.490\n&gt;&gt; That's fun.\n\n45\n00:01:54.490 --> 00:01:57.265\n&gt;&gt; Or we could take advantage of, well,\n\n46\n00:01:57.265 --> 00:02:02.050\nvi's plethora of shortcuts and\ncommands that can do the same thing.\n\n47\n00:02:02.050 --> 00:02:06.060\nSo for example, if I hit Escape,\nI'm in command mode now.\n\n48\n00:02:06.060 --> 00:02:09.061\nAnd in command mode, it is important to\npay attention where the cursor is cuz I'm\n\n49\n00:02:09.061 --> 00:02:12.590\ngonna tell it to delete\na line that I'm on, right?\n\n50\n00:02:12.590 --> 00:02:16.543\nAnd the old way of doing it without\nthe colon would be to use the d command.\n\n51\n00:02:16.543 --> 00:02:19.311\nAnd if I press d twice,\nit will delete this sign.\n\n52\n00:02:19.311 --> 00:02:22.466\nAnd so if you watch down here\nat the bottom of my screen,\n\n53\n00:02:22.466 --> 00:02:24.370\nI'm gonna press d, right?\n\n54\n00:02:24.370 --> 00:02:26.520\nThere's the first d, and\nnothing has happened.\n\n55\n00:02:26.520 --> 00:02:30.130\nAnd then I can hit d again and\nthen with that line, all right?\n\n56\n00:02:30.130 --> 00:02:32.270\nSo if I wanna delete one,\nI can certainly do that.\n\n57\n00:02:32.270 --> 00:02:36.278\nAnd I can just come up here and I can keep\ndoing it, dd, dd, dd, woo hoo, all right,\n\n58\n00:02:36.278 --> 00:02:37.114\nso-\n&gt;&gt; [LAUGH]\n\n59\n00:02:37.114 --> 00:02:38.900\n&gt;&gt; Just going through it and deleting it.\n\n60\n00:02:38.900 --> 00:02:42.680\nThe newer way to do it, the colon-based\ncommand, would be to come in and\n\n61\n00:02:42.680 --> 00:02:46.190\npick a line, like this Produced\nby Daniel Lazarus and Jonesey,\n\n62\n00:02:46.190 --> 00:02:51.070\napparently, and I will do a colon and\nthen just d, all right?\n\n63\n00:02:51.070 --> 00:02:54.510\nA single d, the same amount of keystrokes,\nright, but :d, and\n\n64\n00:02:54.510 --> 00:02:56.410\nthat will tell it to delete that line.\n\n65\n00:02:56.410 --> 00:03:01.738\nSo same basic command, just being issued\nagain to go in and delete that line.\n\n66\n00:03:01.738 --> 00:03:05.226\nSo pretty straightforward there,\nyou can choose to ignore one and\n\n67\n00:03:05.226 --> 00:03:06.290\njust use the other.\n\n68\n00:03:06.290 --> 00:03:08.934\nMaybe I like dd better than :d, but\n\n69\n00:03:08.934 --> 00:03:13.446\nI tend to use the colon command,\nso :d knocks out that line.\n\n70\n00:03:13.446 --> 00:03:16.290\n&gt;&gt; All right, well, Don, another\nfundamental thing that we use when we're\n\n71\n00:03:16.290 --> 00:03:19.240\nediting text is the copy and paste,\nright, that we couldn't live without.\n\n72\n00:03:19.240 --> 00:03:21.390\nThis is a must have.\n\n73\n00:03:21.390 --> 00:03:23.308\nAm I just highlighting text and\nright-clicking?\n\n74\n00:03:23.308 --> 00:03:24.657\nWait, I might be ahead of the system,\nright?\n\n75\n00:03:24.657 --> 00:03:25.536\n[LAUGH]\n&gt;&gt; Yeah,\n\n76\n00:03:25.536 --> 00:03:28.090\nvi was developed before the mouse.\n\n77\n00:03:28.090 --> 00:03:31.760\nSo we don't have a mouse cursor where\nyou can just go and highlight text and\n\n78\n00:03:31.760 --> 00:03:32.390\ncopy and paste.\n\n79\n00:03:32.390 --> 00:03:34.760\nI mean, you actually do if\nyou're on your desktop, right?\n\n80\n00:03:34.760 --> 00:03:36.960\nI can come in, and\nI can highlight and copy and paste.\n\n81\n00:03:36.960 --> 00:03:39.710\nBut if I'm SSHed into a server or\nsomething like that,\n\n82\n00:03:39.710 --> 00:03:41.200\nI might not have that functionality.\n\n83\n00:03:41.200 --> 00:03:45.098\nSo you can actually do copy and\npaste right from the inside of vi.\n\n84\n00:03:45.098 --> 00:03:47.270\nThey don't call it copy and paste though.\n\n85\n00:03:47.270 --> 00:03:49.280\nThey call it yank and put.\n\n86\n00:03:49.280 --> 00:03:52.430\nRemember, this stuff was developed back\nbefore these were standard industry terms.\n\n87\n00:03:52.430 --> 00:03:54.410\nAnd so\nthey could call it whatever they wanted.\n\n88\n00:03:54.410 --> 00:03:59.650\nAnd so we can yank text from the screen,\nand we can put it somewhere else, right?\n\n89\n00:03:59.650 --> 00:04:03.131\nSo if I wanna yank text,\nI can come up to a line and\n\n90\n00:04:03.131 --> 00:04:05.408\nI can use the y command to yank.\n\n91\n00:04:05.408 --> 00:04:08.872\nAnd again, I can do yy or\nI can do :y, either one.\n\n92\n00:04:10.100 --> 00:04:13.220\nAnd so I'll do yy, for example.\n\n93\n00:04:13.220 --> 00:04:16.810\nNow when I do that,\nnothing really changes on the screen.\n\n94\n00:04:16.810 --> 00:04:19.816\nRight, and that's because I've\ncopied that line into my buffer.\n\n95\n00:04:19.816 --> 00:04:24.470\nAnd I can move to another place and\nI can say, p, to put,\n\n96\n00:04:24.470 --> 00:04:27.850\nand now it puts that line right there.\n\n97\n00:04:27.850 --> 00:04:30.197\nSo now I've got it and\nI can do it over and over again.\n\n98\n00:04:30.197 --> 00:04:33.048\nAnd you keep putting, cuz it's stored\nin the memory buffer, right, so\n\n99\n00:04:33.048 --> 00:04:35.380\nyou can keep laying that\nmemory buffer out there.\n\n100\n00:04:35.380 --> 00:04:36.420\nAnd we're now putting it in.\n\n101\n00:04:36.420 --> 00:04:38.430\nSo we've copied and pasted.\n\n102\n00:04:38.430 --> 00:04:41.630\nNow feel free to use your mouse.\n\n103\n00:04:41.630 --> 00:04:43.600\nUse your GUI if you've got it.\n\n104\n00:04:43.600 --> 00:04:46.110\nYou can cut and paste all you want, right?\n\n105\n00:04:46.110 --> 00:04:50.440\nBut be careful, here, I'm copying and\npasting using the command mode.\n\n106\n00:04:50.440 --> 00:04:54.760\nIf I use my mouse and I come in and\nI highlight this line, right, and\n\n107\n00:04:54.760 --> 00:04:58.820\nI copy it, right, or I think in\nGNOME terminal, it's Ctrl+Shift+C.\n\n108\n00:04:58.820 --> 00:05:00.280\nAnd then I go and paste it.\n\n109\n00:05:00.280 --> 00:05:02.630\nWell, I'm still in command mode.\n\n110\n00:05:02.630 --> 00:05:04.605\nI don't wanna paste\nanything in command mode,\n\n111\n00:05:04.605 --> 00:05:06.410\nthere's a lot of commands\nthat I'd be sending.\n\n112\n00:05:06.410 --> 00:05:10.100\nSo you gotta make sure you get\ninto insert mode before you start\n\n113\n00:05:10.100 --> 00:05:12.770\npasting with your GUI or\nwhatever if you do that.\n\n114\n00:05:12.770 --> 00:05:17.570\nBut if you wanna be a purist and just\nuse y, you've got y for yank and p for\n\n115\n00:05:17.570 --> 00:05:19.573\nput, easy to copy and paste.\n\n116\n00:05:19.573 --> 00:05:24.442\n&gt;&gt; Now Don, I've noticed that sometimes\nwhen I'm using vi, I'm in command mode,\n\n117\n00:05:24.442 --> 00:05:28.889\nand my cursor will start jumping around\ncuz I forgot to go into insert mode or\n\n118\n00:05:28.889 --> 00:05:29.688\nsomething.\n\n119\n00:05:29.688 --> 00:05:34.240\nAnd I'm typing something away, maybe like\nthis, and I notice that my cursor moves.\n\n120\n00:05:34.240 --> 00:05:35.513\nWhat is going on there?\n\n121\n00:05:35.513 --> 00:05:39.787\n&gt;&gt; All right, so again,\nthis was all developed before mice.\n\n122\n00:05:39.787 --> 00:05:44.008\nIn the olden days, there were several\ndifferent keyboards that were used, and\n\n123\n00:05:44.008 --> 00:05:46.320\nnot every keyboard had arrow keys on them.\n\n124\n00:05:46.320 --> 00:05:48.129\nMost of us, you look at your laptop or\nyour desktop, and\n\n125\n00:05:48.129 --> 00:05:49.217\nyou've got arrow keys on there.\n\n126\n00:05:49.217 --> 00:05:50.692\nAnd you can use them to navigate,\n\n127\n00:05:50.692 --> 00:05:53.410\nI'm doing it here in this\nshow all the time, right?\n\n128\n00:05:53.410 --> 00:05:56.470\nBut if you didn't have arrow keys or\nif your arrow keys didn't work,\n\n129\n00:05:56.470 --> 00:05:59.650\nif you are remoted into a terminal\nsession that didn't sport arrow keys,\n\n130\n00:05:59.650 --> 00:06:01.560\nyou needed a different way to navigate.\n\n131\n00:06:01.560 --> 00:06:05.810\nSo, inside of vi,\nit actually mapped a series of keys.\n\n132\n00:06:05.810 --> 00:06:08.930\nIt's the H, J, K, L keys.\n\n133\n00:06:08.930 --> 00:06:12.535\nOn a US keyboard, they're all\nright in a row, H, J, K, and L.\n\n134\n00:06:12.535 --> 00:06:15.810\nAnd can we show my keyboard for a second?\n\n135\n00:06:15.810 --> 00:06:19.770\nSo here you can see on my keyboard where\nthe H, J, K, and L, they're all in a row.\n\n136\n00:06:19.770 --> 00:06:21.612\nAnd because of my little\ncheating stickers,\n\n137\n00:06:21.612 --> 00:06:23.410\nI see the little arrow\nkeys that are on here.\n\n138\n00:06:23.410 --> 00:06:28.240\nThe H is left and L is right,\nJ is down, K is up, all right?\n\n139\n00:06:28.240 --> 00:06:31.930\nThey don't actually stand for something,\nlike H isn't higher or whatever.\n\n140\n00:06:31.930 --> 00:06:34.020\nIt's just, they're all in a row,\nthey're convenient to use.\n\n141\n00:06:34.020 --> 00:06:36.270\nYou can place one hand on them and\nnavigate around.\n\n142\n00:06:36.270 --> 00:06:41.230\nSo when I'm in the command mode,\nif I press H, J, K,\n\n143\n00:06:41.230 --> 00:06:46.120\nor L, I'm gonna move around based\non which of those that I hit.\n\n144\n00:06:46.120 --> 00:06:49.279\nAnd that's what normally happens when\nsomebody forgets that they're in command\n\n145\n00:06:49.279 --> 00:06:51.166\nmode or\ndoesn't even know what command mode is.\n\n146\n00:06:51.166 --> 00:06:52.974\nAnd they just try and start typing.\n\n147\n00:06:52.974 --> 00:06:56.381\nThey'll use our arrow keys to move where\nthey want, and then they'll start to type.\n\n148\n00:06:56.381 --> 00:06:59.310\nAnd if I type the word this, T-H,\n\n149\n00:06:59.310 --> 00:07:03.969\neventually, shoot-\n&gt;&gt; T and I, [LAUGH].\n\n150\n00:07:03.969 --> 00:07:07.623\n&gt;&gt; But it will start moving that cursor\naround, and they won't know why.\n\n151\n00:07:07.623 --> 00:07:09.457\nRight, and\nit's because of those keys that are there.\n\n152\n00:07:09.457 --> 00:07:11.750\nNow those keys are valuable.\n\n153\n00:07:11.750 --> 00:07:15.060\nBecause I find even today, there'll be\ntimes where I've remoted into a server and\n\n154\n00:07:15.060 --> 00:07:16.690\nmy arrow keys aren't working.\n\n155\n00:07:16.690 --> 00:07:18.963\nAnd so you fall back to using those,\nH, J, K, and L.\n\n156\n00:07:18.963 --> 00:07:20.177\nAnd you can navigate around using it.\n\n157\n00:07:20.177 --> 00:07:22.039\n&gt;&gt; Yeah,\nGod forbid you type the word history.\n\n158\n00:07:22.039 --> 00:07:25.716\nBecause then it would be H, which would\nmove your cursor to the left, and then I,\n\n159\n00:07:25.716 --> 00:07:27.135\nwhich would be in insert mode.\n\n160\n00:07:27.135 --> 00:07:30.141\nThen S, which will actually start\ntyping into the wrong spot.\n\n161\n00:07:30.141 --> 00:07:32.947\nAnd it freaks you out, it's like,\nit kinda takes you out of your element.\n\n162\n00:07:32.947 --> 00:07:34.133\nYou're like, what is going on?\n\n163\n00:07:34.133 --> 00:07:37.163\nAnd it can really disturb your calm,\n\n164\n00:07:37.163 --> 00:07:41.868\n[LAUGH] if you don't understand\nwhat the heck is going on.\n\n165\n00:07:41.868 --> 00:07:44.141\n&gt;&gt; Yeah, absolutely,\nand you can fix it, but\n\n166\n00:07:44.141 --> 00:07:47.100\nit gets kind of annoying having\nto go back and fix things.\n\n167\n00:07:47.100 --> 00:07:48.730\nYou wanna try and avoid that.\n\n168\n00:07:48.730 --> 00:07:51.729\nAll right, now, I have made quite a bit\nof a mess of my little file here with all\n\n169\n00:07:51.729 --> 00:07:52.801\nthese lines that I pasted.\n\n170\n00:07:52.801 --> 00:07:53.850\n&gt;&gt; Gone a little berserk.\n\n171\n00:07:53.850 --> 00:07:55.610\n&gt;&gt; And if I wanna delete them,\nI can sit here and\n\n172\n00:07:55.610 --> 00:07:57.510\ndo individual deletes over and over again.\n\n173\n00:07:57.510 --> 00:08:02.090\nBut one of the more powerful commands that\nwe have inside of vim is that we can do\n\n174\n00:08:02.090 --> 00:08:02.900\nranges.\n\n175\n00:08:02.900 --> 00:08:06.676\nWe can have a command applied not just\nto one line, but more than one line.\n\n176\n00:08:06.676 --> 00:08:08.684\nAll right, we don't see it here.\n\n177\n00:08:08.684 --> 00:08:11.560\nWell, I guess we sort of see it,\nmy head's on it.\n\n178\n00:08:11.560 --> 00:08:14.850\nBut at the bottom right, you see those\nnumbers that are changing, all right?\n\n179\n00:08:14.850 --> 00:08:16.297\nThose numbers are tracking\nwhat line I'm on.\n\n180\n00:08:16.297 --> 00:08:18.170\nSo right now, I'm on line 27.\n\n181\n00:08:18.170 --> 00:08:19.729\nAnd then I'm on line 30.\n\n182\n00:08:19.729 --> 00:08:22.660\nAnd now I'm on line 35, all right?\n\n183\n00:08:22.660 --> 00:08:26.940\nAnd as I navigate around looking at\nthis stuff, as I move to the right, see,\n\n184\n00:08:26.940 --> 00:08:28.490\nthe second number is changing.\n\n185\n00:08:28.490 --> 00:08:31.627\nI'm on line 30 and\nI'm 16 characters in, or\n\n186\n00:08:31.627 --> 00:08:35.844\nI'm 25 characters in, right,\nso it's tracking that for me.\n\n187\n00:08:35.844 --> 00:08:39.452\nIf I wanted to delete a range of lines,\nI could say, look,\n\n188\n00:08:39.452 --> 00:08:44.870\nit starts here on line 25, all the way\ndown here to line 33, these are bad lines.\n\n189\n00:08:44.870 --> 00:08:47.246\nI wanna get rid of 25 to 33, all right?\n\n190\n00:08:47.246 --> 00:08:50.676\nNow I know that :d will delete a line, but\n\n191\n00:08:50.676 --> 00:08:54.510\nI can actually put a range\nof lines right here.\n\n192\n00:08:54.510 --> 00:09:00.246\nI could say 25,33d, that's gonna go in and\ndelete all of those lines,\n\n193\n00:09:00.246 --> 00:09:05.520\nor hopefully, it will delete all\nof those lines if we were right.\n\n194\n00:09:05.520 --> 00:09:08.330\nSo I'm gonna run that,\nand they all go away.\n\n195\n00:09:08.330 --> 00:09:10.430\nI just deleted a range of lines.\n\n196\n00:09:10.430 --> 00:09:12.350\nAnd that's really handy with the copy and\npaste.\n\n197\n00:09:12.350 --> 00:09:15.410\nLike yank, I could yank ten lines.\n\n198\n00:09:15.410 --> 00:09:17.274\nAnd then go and\npaste them somewhere as needed.\n\n199\n00:09:17.274 --> 00:09:20.000\nSo we've got that kind of available for\nus.\n\n200\n00:09:20.000 --> 00:09:22.270\nAnd it's a really handy thing\nto be able to do ranges.\n\n201\n00:09:22.270 --> 00:09:24.030\nNow let me add one more thing to it.\n\n202\n00:09:24.030 --> 00:09:26.441\nThe numbers at the bottom right\nof the screen are kinda nice.\n\n203\n00:09:26.441 --> 00:09:28.445\nBut in my day, when I learned,\n\n204\n00:09:28.445 --> 00:09:32.081\nwe always had the line numbers\ndisplayed on the screen.\n\n205\n00:09:32.081 --> 00:09:33.177\n&gt;&gt; Which was super handy.\n\n206\n00:09:33.177 --> 00:09:37.070\n&gt;&gt; It really is, and in vi,\nit's not like that by default.\n\n207\n00:09:37.070 --> 00:09:39.800\nSo if you wanna see line numbers,\nit's a simple command you can run.\n\n208\n00:09:39.800 --> 00:09:42.770\nIf you do a :, we can use the set command.\n\n209\n00:09:42.770 --> 00:09:47.386\nNow we haven't used this yet,\nset modifies the configuration of vi.\n\n210\n00:09:47.386 --> 00:09:53.600\nAnd I can say set number, and when I\ndo that, now I get line numbers, right?\n\n211\n00:09:53.600 --> 00:09:55.990\n&gt;&gt; Yeah.\n&gt;&gt; That's really handy, in fact, it's so\n\n212\n00:09:55.990 --> 00:09:58.950\nhandy that I like to\nhave this on by default.\n\n213\n00:09:58.950 --> 00:10:00.792\nWell, this command is temporary.\n\n214\n00:10:00.792 --> 00:10:04.514\nWhen I get in here and I use it,\nif I save and exit and\n\n215\n00:10:04.514 --> 00:10:09.150\nthen I go back into Moby Dick,\nsee how it's gone, right?\n\n216\n00:10:09.150 --> 00:10:11.230\nSo I think there's a set\nnumber every time.\n\n217\n00:10:11.230 --> 00:10:13.160\nWell, I do set number every time.\n\n218\n00:10:13.160 --> 00:10:14.540\ni like to have that running.\n\n219\n00:10:14.540 --> 00:10:16.940\nSo let me show you a neat little trick.\n\n220\n00:10:16.940 --> 00:10:22.300\nIn your home directory,\nif you create a file called .vimrc, you\n\n221\n00:10:22.300 --> 00:10:27.780\ncan pack it full of commands, and they'll\nall be run every time you run vi or vim.\n\n222\n00:10:27.780 --> 00:10:30.670\nSo that .vimrc,\nthat's the name of the file.\n\n223\n00:10:30.670 --> 00:10:34.180\nAnd I'll actually use vi to create\nits own configuration file.\n\n224\n00:10:34.180 --> 00:10:36.188\nIt'll be empty if this is\nthe first time you've made it.\n\n225\n00:10:36.188 --> 00:10:40.182\nAnd in the first line,\nI'm just gonna type set number, all right.\n\n226\n00:10:40.182 --> 00:10:45.240\nSo now whenever I run vim, it will run\nthis command and get it configured for me.\n\n227\n00:10:45.240 --> 00:10:49.310\nSo I'm gonna save,\nI'll do a :wq and save that, right?\n\n228\n00:10:49.310 --> 00:10:53.750\nAnd now when I go and edit the mobydick\nfile, there's those line numbers.\n\n229\n00:10:53.750 --> 00:10:56.691\nI didn't turn it on, and\nnow when I'm doing range commands,\n\n230\n00:10:56.691 --> 00:10:57.831\nit can be really handy.\n\n231\n00:10:57.831 --> 00:11:01.816\nSo for example now,\nwe got the Project Gutenberg header,\n\n232\n00:11:01.816 --> 00:11:07.200\nI wanna delete all this header stuff and\nget to where the book actually starts.\n\n233\n00:11:07.200 --> 00:11:09.836\nWell, they've added a bunch of\njunk here at the beginning, so\n\n234\n00:11:09.836 --> 00:11:12.070\nmaybe they'll wanna get\nrid of some of that.\n\n235\n00:11:12.070 --> 00:11:14.318\nI can look here and easily see the lines,\n\n236\n00:11:14.318 --> 00:11:17.044\nI wanna get rid of lines 1 through 22,\nright?\n\n237\n00:11:17.044 --> 00:11:21.560\nSo I can do :1,22, delete.\n\n238\n00:11:21.560 --> 00:11:23.191\nAnd there they go, and now they're gone.\n\n239\n00:11:23.191 --> 00:11:25.186\nAnd having the numbers on\nthe screen really helps with that.\n\n240\n00:11:25.186 --> 00:11:29.681\n&gt;&gt; Now Don, it probably would have\nbeen more easier to find what you were\n\n241\n00:11:29.681 --> 00:11:34.150\nlooking for if you could actually\nfind what you're looking for.\n\n242\n00:11:34.150 --> 00:11:38.120\nUse some sort of searching function to\nsay, where is the beginning of Moby Dick?\n\n243\n00:11:38.120 --> 00:11:41.600\nIt's call me Ishmael,\nis the tagline, I guess.\n\n244\n00:11:41.600 --> 00:11:43.890\nIf I could have just looked for that,\nit would have been a whole lot easier.\n\n245\n00:11:43.890 --> 00:11:45.350\n&gt;&gt; Yeah, and we can search, right?\n\n246\n00:11:45.350 --> 00:11:47.715\nWe can search this and\nfind something, and again,\n\n247\n00:11:47.715 --> 00:11:50.083\nI kind of expected to find\nit just a page or two down.\n\n248\n00:11:50.083 --> 00:11:53.640\nBut it looks like they've\ngot some kind of glossary,\n\n249\n00:11:53.640 --> 00:11:57.127\n[CROSSTALK] yeah,\nthere it is, so line 513.\n\n250\n00:11:57.127 --> 00:12:00.286\n&gt;&gt; Now Don, I noticed you had a little\ntrouble finding the beginning of\n\n251\n00:12:00.286 --> 00:12:00.850\nthat book.\n\n252\n00:12:00.850 --> 00:12:02.980\nIs there a search\nfunctionality built into that?\n\n253\n00:12:02.980 --> 00:12:05.139\n&gt;&gt; Yeah, there's actually a few\ndifferent ways to do a search.\n\n254\n00:12:05.139 --> 00:12:08.232\nAnd the way I normally do it is the same\nway we would do it in the more command or\n\n255\n00:12:08.232 --> 00:12:11.792\nthe less command, where you just type out\nforward slash and then you search, right?\n\n256\n00:12:11.792 --> 00:12:12.460\nSo I can do that right here.\n\n257\n00:12:12.460 --> 00:12:16.270\nIf I just type, I'm on line 1,\nand I'll type a forward slash,\n\n258\n00:12:16.270 --> 00:12:18.560\nand I don't have to be on line 1,\nI just happened to be there.\n\n259\n00:12:18.560 --> 00:12:20.310\nAnd I can type that forward slash, and\n\n260\n00:12:20.310 --> 00:12:23.280\nI can type in a search\nstring like Ishmael, right?\n\n261\n00:12:23.280 --> 00:12:25.730\nWe know the first line of the story's\ncall me Ishmael, so I can just search for\n\n262\n00:12:25.730 --> 00:12:27.458\nthat, and there it is, right?\n\n263\n00:12:27.458 --> 00:12:31.230\nIt took me right to line 535,\nand now I'm able to find it.\n\n264\n00:12:31.230 --> 00:12:34.570\nAnd now I'm in what's kind\nof a search mode, right?\n\n265\n00:12:34.570 --> 00:12:38.040\nSo see how the command or\nthe term that I search for is highlighted?\n\n266\n00:12:38.040 --> 00:12:41.450\nFrom here, I might wanna search for\nthe next instance and the next instance.\n\n267\n00:12:41.450 --> 00:12:45.570\nThere's a few different ways to do it, you\ncan just hit the forward slash again and\n\n268\n00:12:45.570 --> 00:12:47.590\npress Enter, and\nI can do that over and over again and\n\n269\n00:12:47.590 --> 00:12:50.220\nsee it's kinda moving from\ninstance to instance.\n\n270\n00:12:50.220 --> 00:12:54.405\nOr you can hit n, lowercase n,\nmoves to the next one,\n\n271\n00:12:54.405 --> 00:12:57.009\na capital N goes to the previous.\n\n272\n00:12:57.009 --> 00:13:00.744\nSo you can use lowercase n and\ncapital N to move back and\n\n273\n00:13:00.744 --> 00:13:05.310\nforth amongst these different\nones that you searched for.\n\n274\n00:13:05.310 --> 00:13:09.360\nYou can use the question mark as well, but\n\n275\n00:13:09.360 --> 00:13:12.030\nthe question mark requires\nyou to actually press Enter.\n\n276\n00:13:12.030 --> 00:13:16.580\nSo it's a little bit different than\njust using n to move back and forth.\n\n277\n00:13:16.580 --> 00:13:18.850\nSo a few different ways to kind of\nnavigate through and get to it.\n\n278\n00:13:18.850 --> 00:13:24.126\nAnd in fact, let's say I knew ahead of\ntime that I'm gonna open up this file,\n\n279\n00:13:24.126 --> 00:13:29.170\nand I wanna go straight to the first\ninstance of the word Ishmael, right?\n\n280\n00:13:29.170 --> 00:13:32.535\nI can actually modify the way\nI open it just a little bit.\n\n281\n00:13:32.535 --> 00:13:38.320\nAnd I could say +/Ishmael like that.\n\n282\n00:13:38.320 --> 00:13:41.193\nOkay, I'm telling it,\nI want you to open this file and\n\n283\n00:13:41.193 --> 00:13:44.261\nI want you to go straight to\nthe first instance of Ishmael.\n\n284\n00:13:44.261 --> 00:13:46.210\nAnd I'm doing this right\nfrom the command line.\n\n285\n00:13:46.210 --> 00:13:48.663\nAnd when I run that, there we go, and\nit jumps in, and actually, shoot,\n\n286\n00:13:48.663 --> 00:13:49.905\nit didn't go to the first instance.\n\n287\n00:13:49.905 --> 00:13:53.480\nAnd so I left it in the search screen,\nyeah, the previous one.\n\n288\n00:13:53.480 --> 00:13:55.990\nSo it actually remembers\nthe search that you did.\n\n289\n00:13:55.990 --> 00:13:58.210\nThat's a part of vim enhanced,\nif I was running the native vi,\n\n290\n00:13:58.210 --> 00:14:01.430\nthat wouldn't have happened, but\nit remembers it takes you there.\n\n291\n00:14:01.430 --> 00:14:03.730\nSo it helps you to get right back to or\n\n292\n00:14:03.730 --> 00:14:05.540\nright where you wanna be\nfrom the very beginning.\n\n293\n00:14:05.540 --> 00:14:09.240\nBut that search functionality's built\nright in, and it's pretty powerful.\n\n294\n00:14:09.240 --> 00:14:13.112\n&gt;&gt; Yeah, Don, and you also said you could\ndo not only just search, but search and\n\n295\n00:14:13.112 --> 00:14:13.647\nreplace.\n\n296\n00:14:13.647 --> 00:14:17.344\nSo if you said, I'm gonna rewrite Melville\nagain cuz he was a horrible writer.\n\n297\n00:14:17.344 --> 00:14:19.758\n[LAUGH] He wasn't,\nhe was actually quite brilliant.\n\n298\n00:14:19.758 --> 00:14:23.074\nBut you wanna say, call me Don,\ninstead of call me Ishmael.\n\n299\n00:14:23.074 --> 00:14:25.440\nI wanna change Ishmael to Don,\nwe can do that?\n\n300\n00:14:25.440 --> 00:14:26.370\n&gt;&gt; Yeah, absolutely.\n\n301\n00:14:26.370 --> 00:14:30.870\nNot so much with the forward slash, but if\nwe use the colon command version of this,\n\n302\n00:14:30.870 --> 00:14:32.830\nwe can do a search or replace pretty easy.\n\n303\n00:14:32.830 --> 00:14:36.757\nIt actually integrates the said\neditor kind of right into them.\n\n304\n00:14:36.757 --> 00:14:43.522\nBut if we do a colon,\nyou can type s/ and search for a term.\n\n305\n00:14:43.522 --> 00:14:44.872\nAnd then replace it with another one.\n\n306\n00:14:44.872 --> 00:14:50.307\nSo I could search for Ishmael,\nand I could replace it with Don.\n\n307\n00:14:50.307 --> 00:14:51.795\nAll right, so\nI'm gonna search for that line.\n\n308\n00:14:51.795 --> 00:14:55.760\nNow it's doing that on\nthe line that I'm on.\n\n309\n00:14:55.760 --> 00:14:57.132\nSo I need to pay attention\nwhere my cursor was.\n\n310\n00:14:57.132 --> 00:15:00.541\nMy cursor was on line 535,\nso it's gonna search and\n\n311\n00:15:00.541 --> 00:15:03.510\nreplace Ishmael right there on that line.\n\n312\n00:15:03.510 --> 00:15:05.804\nAnd when I run it, now it's call me Don.\n\n313\n00:15:05.804 --> 00:15:08.660\nOkay, but it didn't do that\nthroughout the whole file, right?\n\n314\n00:15:08.660 --> 00:15:10.030\nIf I go and do a search for\n\n315\n00:15:10.030 --> 00:15:13.580\nIshmael, I'll find that it's\nstill in other places, right?\n\n316\n00:15:13.580 --> 00:15:15.130\nIt was just on that one line.\n\n317\n00:15:15.130 --> 00:15:19.540\nSo the way we call this command actually\nimpacts what it's going to be affecting.\n\n318\n00:15:19.540 --> 00:15:24.140\nSo in my case, that was just on line 535.\n\n319\n00:15:24.140 --> 00:15:27.160\nIf I want it to affect more of the file,\n\n320\n00:15:27.160 --> 00:15:31.520\nI could either do a range or\ntell it to do the entire file, right?\n\n321\n00:15:31.520 --> 00:15:34.770\nSo the next Ishmael was here.\n\n322\n00:15:34.770 --> 00:15:39.900\nSo this paragraph has two instances\nof Ishmael right here on line 771 and\n\n323\n00:15:39.900 --> 00:15:40.680\non line 774.\n\n324\n00:15:40.680 --> 00:15:47.698\nSo I could do a colon, and maybe we'll do\na whole paragraph, right, so 765, 775.\n\n325\n00:15:47.698 --> 00:15:51.513\nRight, so that's the lines\nthat cover that paragraph.\n\n326\n00:15:51.513 --> 00:15:53.720\nAnd then I tell it I wanna search.\n\n327\n00:15:53.720 --> 00:15:56.780\nI wanna search for Ishmael, and\nI wanna replace it with Don.\n\n328\n00:15:56.780 --> 00:15:57.960\nAnd it's gonna run.\n\n329\n00:15:57.960 --> 00:16:00.060\nAnd those two instances just changed.\n\n330\n00:16:00.060 --> 00:16:02.570\nThere's Don there, and there's Don there.\n\n331\n00:16:02.570 --> 00:16:04.689\nBut it still didn't do the whole file,\nright?\n\n332\n00:16:04.689 --> 00:16:11.890\nIf I search for Ishmael, he still turns\nup through the rest of the novel, right?\n\n333\n00:16:11.890 --> 00:16:13.980\nSo if we wanna do the whole thing,\n\n334\n00:16:13.980 --> 00:16:16.980\nwe need to use another little wild\ncard that I haven't shown yet.\n\n335\n00:16:16.980 --> 00:16:18.690\nWhen we do a range like this, normally,\n\n336\n00:16:18.690 --> 00:16:22.300\nwe're specifying a beginning number and\nan ending number.\n\n337\n00:16:22.300 --> 00:16:24.870\nBut if you do a colon and\ninstead of numbers,\n\n338\n00:16:24.870 --> 00:16:29.090\nyou just put percent,\npercent means every line.\n\n339\n00:16:29.090 --> 00:16:30.790\nI want this to run on every line.\n\n340\n00:16:30.790 --> 00:16:34.198\nI wanna do a search, so I'll say s/.\n\n341\n00:16:34.198 --> 00:16:35.896\nI wanna search for Ishmael.\n\n342\n00:16:35.896 --> 00:16:37.740\nI wanna replace it with Don.\n\n343\n00:16:37.740 --> 00:16:41.230\nAnd now it's gonna do it across\nthe entire file, all right?\n\n344\n00:16:41.230 --> 00:16:43.020\nAnd I got 15 substitutions, right?\n\n345\n00:16:43.020 --> 00:16:49.489\nSo this 17,000 line file, apparently\nhis name only popped up 15 times.\n\n346\n00:16:49.489 --> 00:16:53.167\nBut now I can come in and\nI can do a search, and I can look for\n\n347\n00:16:53.167 --> 00:16:57.022\nIshmael, I'll do a backwards search here,\nfor Ishmael.\n\n348\n00:16:57.022 --> 00:17:00.126\nAnd apparently, we missed one.\n\n349\n00:17:00.126 --> 00:17:00.974\nWell, that's interesting, isn't it?\n\n350\n00:17:00.974 --> 00:17:01.613\n&gt;&gt; It is interesting.\n\n351\n00:17:01.613 --> 00:17:02.598\n&gt;&gt; Is it spelled different?\n\n352\n00:17:02.598 --> 00:17:06.695\nNo, it's there, but yeah,\nmissed at least one.\n\n353\n00:17:06.695 --> 00:17:11.544\n[LAUGH] Yeah, well, just one, that's odd.\n\n354\n00:17:11.544 --> 00:17:15.249\nBut yeah, I'm searching, it's not finding\nany others, it was just that one instance,\n\n355\n00:17:15.249 --> 00:17:16.420\nit was kind of a weird one.\n\n356\n00:17:16.420 --> 00:17:18.756\n&gt;&gt; That has been my experience,\nthat search and\n\n357\n00:17:18.756 --> 00:17:21.160\nreplace functionality\ncan be a little weird.\n\n358\n00:17:21.160 --> 00:17:24.966\nYou've gotta hit just on with the correct\nparameters if there's any kind of weird\n\n359\n00:17:24.966 --> 00:17:28.234\ncharacteristics going on with\nthe word you're searching for again.\n\n360\n00:17:28.234 --> 00:17:31.270\n&gt;&gt; Yeah, the comma after it might\nhave thrown it or whatever.\n\n361\n00:17:31.270 --> 00:17:33.580\nBut basically, we can search and\nreplace, and you can specify,\n\n362\n00:17:33.580 --> 00:17:35.330\nyou're doing that percentage,\nhitting the whole file.\n\n363\n00:17:35.330 --> 00:17:36.480\nThat's kind of a really handy one.\n\n364\n00:17:36.480 --> 00:17:38.370\nAnd I didn't think about mentioning it,\nbut\n\n365\n00:17:38.370 --> 00:17:43.410\nI just did something that I do out of hand\nthat I probably should have mentioned,\n\n366\n00:17:43.410 --> 00:17:46.030\nis when you have line numbers like this,\nright?\n\n367\n00:17:46.030 --> 00:17:50.290\nSo if I'm searching for Ishmael,\nand I find him on line 3,385, and\n\n368\n00:17:50.290 --> 00:17:54.520\nthen I wanna get back to\nthe top of the file, right?\n\n369\n00:17:54.520 --> 00:17:58.240\nI could sit here and page up and\neventually get to the top.\n\n370\n00:17:58.240 --> 00:18:00.700\nBut if you type colon,\nyou can type a line number, and\n\n371\n00:18:00.700 --> 00:18:01.850\nit'll jump you right to that line.\n\n372\n00:18:01.850 --> 00:18:04.740\nSo I just did a :1 to\ntake me to line number 1.\n\n373\n00:18:04.740 --> 00:18:05.630\n&gt;&gt; Nice.\n\n374\n00:18:05.630 --> 00:18:08.218\n&gt;&gt; That's something that is pretty\nhandy to be able to just jump\n\n375\n00:18:08.218 --> 00:18:10.615\nright back to the top, or\njump to the end, or whatever.\n\n376\n00:18:10.615 --> 00:18:15.966\nIf I do :10,000, it'll jump me all the way\nto line 10,000, and we can work there too.\n\n377\n00:18:15.966 --> 00:18:18.396\nSo it's another kind of quick\nway to navigate around and\n\n378\n00:18:18.396 --> 00:18:19.801\nbe able to see what's going on.\n\n379\n00:18:19.801 --> 00:18:23.689\n&gt;&gt; All right, well, Don, we definitely\nhad a really good look into the vi and\n\n380\n00:18:23.689 --> 00:18:25.140\nthe vim text editors.\n\n381\n00:18:25.140 --> 00:18:29.230\nThey have a lot of power inside of them,\nbut they can be a bit of a learning curve\n\n382\n00:18:29.230 --> 00:18:32.800\ninvolved when it comes to learning how\nto actually use the stinking thing.\n\n383\n00:18:32.800 --> 00:18:33.899\nThere's a lot of commands.\n\n384\n00:18:33.899 --> 00:18:35.408\nAnd do what Don did.\n\n385\n00:18:35.408 --> 00:18:39.439\nGo get yourselves some stickies that\nget in your keys cuz it is a bear to\n\n386\n00:18:39.439 --> 00:18:41.140\nmemorize everything.\n\n387\n00:18:41.140 --> 00:18:44.610\nYou will end up with a subset of commands\nthat you just know off the top of your\n\n388\n00:18:44.610 --> 00:18:46.340\nhead cuz you use them all the time.\n\n389\n00:18:46.340 --> 00:18:49.492\nAnd the ones that Don has shown you\nare probably gonna be those very things.\n\n390\n00:18:49.492 --> 00:18:53.050\nBut it's gonna be good for you to get\nyour hand on them cuz not every stinking\n\n391\n00:18:53.050 --> 00:18:55.210\nLinux system comes with\na graphical editor.\n\n392\n00:18:55.210 --> 00:18:56.970\nYou may be in a headless system.\n\n393\n00:18:56.970 --> 00:19:00.140\nAnd knowing how to work with vi or\nvim can definitely save your bacon.\n\n394\n00:19:00.140 --> 00:19:01.290\nDon, thanks for joining us today.\n\n395\n00:19:01.290 --> 00:19:03.460\nAnything else you wanna add\nbefore we close the show down?\n\n396\n00:19:03.460 --> 00:19:06.322\n&gt;&gt; Boy, we've only scraped\nthe tip of the iceberg with vim.\n\n397\n00:19:06.322 --> 00:19:09.305\nAnd there is so much more that it can do,\nbut these are the key things,\n\n398\n00:19:09.305 --> 00:19:12.630\nthe main stuff that you need just\nto get by on a regular operation.\n\n399\n00:19:12.630 --> 00:19:14.816\nIf you learn these commands,\nyou'll be pretty good with it, and\n\n400\n00:19:14.816 --> 00:19:16.505\nyou'll be right at home\nwhenever you run into Vi.\n\n401\n00:19:16.505 --> 00:19:18.794\n&gt;&gt; All right, well, thanks again,\nDon, for joining us today.\n\n402\n00:19:18.794 --> 00:19:20.780\nAnd we do thank our audience for watching.\n\n403\n00:19:20.780 --> 00:19:23.340\nBut it looks like it's that time for\nus to call it a day.\n\n404\n00:19:23.340 --> 00:19:26.440\nSigning off for ITProTV,\nI've been your host, Daniel Lowrie.\n\n405\n00:19:26.440 --> 00:19:27.067\n&gt;&gt; And I'm Don Pezet.\n\n406\n00:19:27.067 --> 00:19:30.003\n&gt;&gt; And we'll see you next time.\n\n407\n00:19:30.003 --> 00:19:35.867\n[MUSIC]\n\n408\n00:19:35.867 --> 00:19:39.427\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "235786860"
        },
        {
          "description": "In this episode, Don introduces the viewers to the GNU Nano editor which is gaining popularity in most modern Linux distributions. He explains the basic features of the editor before walking the viewers through the typical commands needed to edit text files with Nano.",
          "length": "1177",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-6-2-1-gnu_nano-092717-PGM.00_19_22_06.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-6-2-1-gnu_nano-092717-PGM.00_19_22_06.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxcommandline/techskills-linuxcommandline-6-2-1-gnu_nano-092717-PGM.00_19_22_06.Still001-sm.jpg",
          "title": "GNU nano",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:01.918\nWelcome to ITProTV, I'm your host.\n\n2\n00:00:01.918 --> 00:00:05.109\n&gt;&gt; [CROSSTALK]\n&gt;&gt; Coming to you live from San Francisco.\n\n3\n00:00:05.109 --> 00:00:07.032\n&gt;&gt; [CROSSTALK]\n\n4\n00:00:07.032 --> 00:00:08.275\n&gt;&gt; [MUSIC]\n\n5\n00:00:08.275 --> 00:00:11.975\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:11.975 --> 00:00:13.934\n&gt;&gt; All right, greetings everyone and\n\n7\n00:00:13.934 --> 00:00:16.944\nwelcome back to another\nexciting episode of ITProTV.\n\n8\n00:00:16.944 --> 00:00:18.402\nI'm your host Daniel Lowrie, and\n\n9\n00:00:18.402 --> 00:00:21.850\nit today's episode we're back with\nmore in our Linux command line series.\n\n10\n00:00:21.850 --> 00:00:23.463\nIt's been a lot of fun so far.\n\n11\n00:00:23.463 --> 00:00:27.380\nJoining us back in the studio to lend to\nthat fun, our good friend Mr. Don Pezet.\n\n12\n00:00:27.380 --> 00:00:29.938\nDon, we're glad to have you yet\nagain Sir, how's it going today?\n\n13\n00:00:29.938 --> 00:00:33.094\n&gt;&gt; Hey, I am pumped up for another\nexciting episode of Linux command line.\n\n14\n00:00:33.094 --> 00:00:35.356\nAnd in this episode,\nwe're gonna be looking at, well,\n\n15\n00:00:35.356 --> 00:00:36.971\nMork from Ork's favorite text editor.\n\n16\n00:00:36.971 --> 00:00:38.541\n&gt;&gt; [LAUGH]\n&gt;&gt; Nano, nano,\n\n17\n00:00:38.541 --> 00:00:40.589\nthat's my witty joke of the day.\n\n18\n00:00:40.589 --> 00:00:43.251\nSo anyhow,\nwe're gonna look at the nano text editor.\n\n19\n00:00:43.251 --> 00:00:45.222\nYeah, I-\n&gt;&gt; It takes a-\n\n20\n00:00:45.222 --> 00:00:45.902\n&gt;&gt; [LAUGH]\n\n21\n00:00:45.902 --> 00:00:46.810\n&gt;&gt; Child of the 80s or\n\n22\n00:00:46.810 --> 00:00:47.884\n70s to get that joke.\n\n23\n00:00:47.884 --> 00:00:50.209\n[LAUGH]\n&gt;&gt; All right, well, the nano text editor,\n\n24\n00:00:50.209 --> 00:00:53.886\nthough, which is one that's been\ngaining in popularity quite a bit,\n\n25\n00:00:53.886 --> 00:00:56.590\nwe're seeing it in a lot\nof distros by default now.\n\n26\n00:00:56.590 --> 00:00:59.880\nNot in every distro, like I'm running\nFedora, it's not in mine by default.\n\n27\n00:00:59.880 --> 00:01:01.891\nBut it is gaining in popularity.\n\n28\n00:01:01.891 --> 00:01:04.159\nSo we're gonna take a look at\nhow it works, how to use it, and\n\n29\n00:01:04.159 --> 00:01:06.784\nthen how we can use it to manipulate\ntext files, and find out whether or\n\n30\n00:01:06.784 --> 00:01:08.140\nnot it's the right editor for you.\n\n31\n00:01:08.140 --> 00:01:10.841\nBecause it might be the default in\nthe distro that you are running.\n\n32\n00:01:10.841 --> 00:01:14.361\n&gt;&gt; Now, Don, this kind of begs the\nquestion of what is so great about this\n\n33\n00:01:14.361 --> 00:01:18.580\ntext editor, that we are abandoning\nolder text editors that work just fine?\n\n34\n00:01:18.580 --> 00:01:22.965\n&gt;&gt; All right, well, the most ubiquitous\ntext editor out of there in a Linux system\n\n35\n00:01:22.965 --> 00:01:25.596\nor even a Unix system,\nis the vi or Vim, right?\n\n36\n00:01:25.596 --> 00:01:29.059\nAnd they're very powerful, very flexible,\nthey've been around a long time, but\n\n37\n00:01:29.059 --> 00:01:31.780\nthey're also very complicated,\nthey're hard to use, right?\n\n38\n00:01:31.780 --> 00:01:36.641\nSo years ago, developers had a chance to\nsee some other ways of editing text files,\n\n39\n00:01:36.641 --> 00:01:40.954\nand they said, man, these are so\nmuch easier, let's use that instead.\n\n40\n00:01:40.954 --> 00:01:42.559\nAnd that's really where nano came from.\n\n41\n00:01:42.559 --> 00:01:46.720\nNano wasn't originally developed\nas its own standalone product,\n\n42\n00:01:46.720 --> 00:01:50.790\nthere used to be a text-based\nemail client called Pine.\n\n43\n00:01:50.790 --> 00:01:54.767\nAnd the Pine email client, a lot of\nus used it back in the late 80s and\n\n44\n00:01:54.767 --> 00:01:56.833\nthe early 90s, it was for email.\n\n45\n00:01:56.833 --> 00:02:01.166\nAnd if you're writing an email, you don't\nwant the complexities of Vim, right?\n\n46\n00:02:01.166 --> 00:02:04.168\nYour regular end user\ncan't handle them [LAUGH]-\n\n47\n00:02:04.168 --> 00:02:04.874\n&gt;&gt; [LAUGH]\n\n48\n00:02:04.874 --> 00:02:06.568\n&gt;&gt; So it's too much, so in Pine,\n\n49\n00:02:06.568 --> 00:02:10.950\nthey created their own text editor for\nwriting emails, and it was called Pico.\n\n50\n00:02:10.950 --> 00:02:14.479\nAnd the Pico Text Editor was simple,\nyou just typed.\n\n51\n00:02:14.479 --> 00:02:17.636\nAnd then there were a couple of keyboard\nshortcuts that were printed right on\n\n52\n00:02:17.636 --> 00:02:19.377\nthe bottom of the screen, it was simple.\n\n53\n00:02:19.377 --> 00:02:21.970\nAnd a lot of administrators liked that.\n\n54\n00:02:21.970 --> 00:02:24.340\nThey said, man,\nwhy can't we have that in our text editor?\n\n55\n00:02:24.340 --> 00:02:27.140\nWhy do we have to have these crazy\ncolon commands and stuff like that?\n\n56\n00:02:27.140 --> 00:02:29.270\nCan't I just use simple\nkeyboard shortcuts?\n\n57\n00:02:29.270 --> 00:02:31.700\nAnd so that's where nano came from,\n\n58\n00:02:31.700 --> 00:02:35.370\nis they took the Pico editor\nthat was part of Pine.\n\n59\n00:02:35.370 --> 00:02:38.620\nAnd they've turned it into\na standalone text editor,\n\n60\n00:02:38.620 --> 00:02:41.290\nthat's designed to be\na lot more user-friendly.\n\n61\n00:02:41.290 --> 00:02:45.460\nIt's still command line driven, so\nit's still very low on the resource usage,\n\n62\n00:02:45.460 --> 00:02:47.610\nvery easy to get it installed.\n\n63\n00:02:47.610 --> 00:02:52.135\nBut it is a lot more simple,\na lot easier to manipulate and\n\n64\n00:02:52.135 --> 00:02:57.151\nwork with, and that's kind of\nthe shining pro for using nano.\n\n65\n00:02:57.151 --> 00:02:59.894\nOn the negative side, it's not quite\nas powerful as some of the other text\n\n66\n00:02:59.894 --> 00:03:01.988\neditors, especially if\nyou're opening large files.\n\n67\n00:03:01.988 --> 00:03:03.546\nBut it does a good job.\n\n68\n00:03:03.546 --> 00:03:07.234\nAnd for most of us, it meets our\nneeds as a standard text editor, and\n\n69\n00:03:07.234 --> 00:03:10.560\nyou can certainly use it with\na much smaller learning curve.\n\n70\n00:03:10.560 --> 00:03:13.756\n&gt;&gt; All right, well, that being said, let's\ndive into how the heck we use this thing.\n\n71\n00:03:13.756 --> 00:03:16.534\nLike we like to start off with\nwhen it comes to text editors,\n\n72\n00:03:16.534 --> 00:03:19.664\nprobably wanna open a file, and\nthat's a great place to jump off.\n\n73\n00:03:19.664 --> 00:03:22.314\n&gt;&gt; All right, well first off, we need\nto see if we even have nano installed.\n\n74\n00:03:22.314 --> 00:03:24.146\n&gt;&gt; [LAUGH]\n&gt;&gt; Because you may or may not, right?\n\n75\n00:03:24.146 --> 00:03:25.670\nAnd you can find that\nreally easy on your system.\n\n76\n00:03:25.670 --> 00:03:29.755\nYou can just type which nano, and\nif you've got it, great, right?\n\n77\n00:03:29.755 --> 00:03:32.030\nNow, on my system,\nI didn't have it, right?\n\n78\n00:03:32.030 --> 00:03:34.306\nFedora doesn't package nano by default.\n\n79\n00:03:34.306 --> 00:03:36.858\nUbuntu, not only do they\npackage it by default, but\n\n80\n00:03:36.858 --> 00:03:38.730\nthey've mapped it to the vi command.\n\n81\n00:03:38.730 --> 00:03:42.212\nSo when you type vi, you're actually\nrunning nano on an Ubuntu system.\n\n82\n00:03:42.212 --> 00:03:45.926\nSo some systems have really adopted it,\nsome haven't.\n\n83\n00:03:45.926 --> 00:03:48.948\nIn Red Hat Enterprise Linux, I think\nthey have nano installed by default.\n\n84\n00:03:48.948 --> 00:03:53.440\nBut it's not the one that's used\nby default, but it is installed.\n\n85\n00:03:53.440 --> 00:03:54.680\nSo you might need to install it.\n\n86\n00:03:54.680 --> 00:04:00.735\nIn a Fedora system I would just\nsay sudo dnf install nano.\n\n87\n00:04:00.735 --> 00:04:06.880\nOn a Debian system, it would be apt-get or\napt install nano, and it'll install.\n\n88\n00:04:06.880 --> 00:04:09.080\nIt's very small, so\nan install is pretty quick.\n\n89\n00:04:09.080 --> 00:04:10.840\nIt does have a handful of dependencies.\n\n90\n00:04:10.840 --> 00:04:13.557\nIf you're installing this on a server,\nyou might not have some of those, so\n\n91\n00:04:13.557 --> 00:04:15.601\nit may need to install some\nadditional packages as well.\n\n92\n00:04:15.601 --> 00:04:18.547\nBut once you've got it,\nyou're ready to use it.\n\n93\n00:04:18.547 --> 00:04:20.367\nAnd you can just type nano, and\n\n94\n00:04:20.367 --> 00:04:23.810\nthat'll take you right into\nthe editor with a blank file.\n\n95\n00:04:23.810 --> 00:04:27.754\nSo if you wanna create a brand new\nfile from scratch, you type nano and\n\n96\n00:04:27.754 --> 00:04:30.147\nhere we go, we're in a new file, right?\n\n97\n00:04:30.147 --> 00:04:32.009\nNow, if you watched our vi episode,\n\n98\n00:04:32.009 --> 00:04:35.375\nyou'll know that it launches in\na fairly unintuitive manner, and\n\n99\n00:04:35.375 --> 00:04:38.574\nthere's a learning curve just\nto even be able to start typing.\n\n100\n00:04:38.574 --> 00:04:43.730\nBut here, I type nano, and\nnow I can just start typing, right?\n\n101\n00:04:43.730 --> 00:04:45.220\nI can type whatever it is I want.\n\n102\n00:04:45.220 --> 00:04:48.465\nThat's what people expect, they expect\nto go into an editor and be editing.\n\n103\n00:04:48.465 --> 00:04:49.741\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n104\n00:04:49.741 --> 00:04:51.608\n&gt;&gt; And that's what we get here.\n\n105\n00:04:51.608 --> 00:04:55.122\nAnd if I don't know my keyboard shortcuts,\nit's okay.\n\n106\n00:04:55.122 --> 00:04:57.250\nBecause look at the bottom of my screen,\nright?\n\n107\n00:04:57.250 --> 00:04:59.537\nIf I wanna get help, Ctrl+G, right?\n\n108\n00:04:59.537 --> 00:05:03.795\nI do have to know that little character\nsymbol, and that's pretty standard, right?\n\n109\n00:05:03.795 --> 00:05:05.521\nWe see that in most systems.\n\n110\n00:05:05.521 --> 00:05:09.002\nCtrl+X is exit, Ctrl+R is to read a file.\n\n111\n00:05:09.002 --> 00:05:12.753\nCtrl+O is write out,\nthat's a little bit weird,\n\n112\n00:05:12.753 --> 00:05:15.816\nit means save the file, but it's there.\n\n113\n00:05:15.816 --> 00:05:17.069\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n114\n00:05:17.069 --> 00:05:19.557\n&gt;&gt; Ctrl+W for where is, or Ctrl+/ for\n\n115\n00:05:19.557 --> 00:05:20.266\nreplace.\n\n116\n00:05:20.266 --> 00:05:26.510\nIt's giving me the most commonly used\nelements right here that I need.\n\n117\n00:05:26.510 --> 00:05:29.830\nAnd in other editors, like Vim,\nI have to memorize this stuff, but\n\n118\n00:05:29.830 --> 00:05:35.160\nhere in nano, I can just see it right on\nmy screen, it makes life so much easier.\n\n119\n00:05:35.160 --> 00:05:38.349\nWe can navigate around,\nmake our edits, make our changes.\n\n120\n00:05:38.349 --> 00:05:40.057\nI've got a nice big flag\nup here at the top,\n\n121\n00:05:40.057 --> 00:05:43.490\nthat's telling me that this file has\nbeen modified, so I need to save it.\n\n122\n00:05:43.490 --> 00:05:46.511\nAnd if I try and exit and\nI don't save, it's okay, right?\n\n123\n00:05:46.511 --> 00:05:47.340\nIt warns me.\n\n124\n00:05:47.340 --> 00:05:51.680\nRemember in vi, if I try and exit\nan unsaved file, I get like an error, and\n\n125\n00:05:51.680 --> 00:05:54.350\nthen it just sits there and that's it.\n\n126\n00:05:54.350 --> 00:05:57.090\nBut here,\nif I hit Ctrl+x to exit, it says,\n\n127\n00:05:57.090 --> 00:06:01.287\nhey you haven't saved, would you like to,\nwe can help you, right?\n\n128\n00:06:01.287 --> 00:06:03.945\nYou can hit y for yes, and it'll save for\nyou, or you can say no, and\n\n129\n00:06:03.945 --> 00:06:05.220\nit'll throw away the changes.\n\n130\n00:06:05.220 --> 00:06:08.100\nSo I'll say no, I'm gonna throw\naway the changes, and that's it.\n\n131\n00:06:08.100 --> 00:06:11.739\nSo hopefully, you kinda see here how much\nmore user-friendly this experience is.\n\n132\n00:06:11.739 --> 00:06:14.470\nNano is designed to be easy.\n\n133\n00:06:14.470 --> 00:06:17.785\nAnd if I wanna edit an existing file,\nI can just say nano and\n\n134\n00:06:17.785 --> 00:06:19.282\nthen the name of the file.\n\n135\n00:06:19.282 --> 00:06:22.737\nSo mine is mobydick.txt,\nand I can open that up.\n\n136\n00:06:22.737 --> 00:06:27.965\nAnd here I am, it's read it up,\nI've got that file up here, 22,104 lines,\n\n137\n00:06:27.965 --> 00:06:32.388\nand I can scroll around, and\nthis is mobydick, it's very exciting.\n\n138\n00:06:32.388 --> 00:06:33.283\n&gt;&gt; [LAUGH]\n&gt;&gt; But\n\n139\n00:06:33.283 --> 00:06:37.380\nthat's basically getting into something\nwith nano,and kind of getting started.\n\n140\n00:06:37.380 --> 00:06:41.720\n&gt;&gt; Well, Don, A, I do love\nthe fact that when I fire up nano,\n\n141\n00:06:41.720 --> 00:06:43.810\nI can just immediately start typing.\n\n142\n00:06:43.810 --> 00:06:46.494\nCuz I invariably forget to type i for\n\n143\n00:06:46.494 --> 00:06:50.889\nthe insert mode in vi,\neven though I like to use vi as well.\n\n144\n00:06:50.889 --> 00:06:54.780\nSo it is nice when I wanna quickly do\nsomething, I usually fire up nano.\n\n145\n00:06:54.780 --> 00:06:58.740\nI also love menu-driven systems,\nso the fact that it shows you\n\n146\n00:06:58.740 --> 00:07:01.660\neach one of the options that\nare [INAUDIBLE], is very very nice.\n\n147\n00:07:01.660 --> 00:07:04.498\nIt's gonna be very nice for you, because\nwe're gonna kind of go through these\n\n148\n00:07:04.498 --> 00:07:06.092\noptions right here on your screen, right?\n\n149\n00:07:06.092 --> 00:07:08.367\n[LAUGH]\n&gt;&gt; [LAUGH] And you know it's funny Daniel,\n\n150\n00:07:08.367 --> 00:07:10.985\ncuz in all honesty,\nI don't normally use nano.\n\n151\n00:07:10.985 --> 00:07:12.434\n&gt;&gt; [LAUGH]\n&gt;&gt; I'll tell you how great it is,\n\n152\n00:07:12.434 --> 00:07:15.230\nit's really easy, and if you're\njust getting started, it's perfect.\n\n153\n00:07:15.230 --> 00:07:18.455\nBut I don't normally use it, and the\nreasons is it's not normally installed by\n\n154\n00:07:18.455 --> 00:07:20.155\ndefault on the systems I work on, right?\n\n155\n00:07:20.155 --> 00:07:24.690\nSo when you're doing a minimal install on\na server, it's not going to have nano.\n\n156\n00:07:24.690 --> 00:07:28.064\nIt is gonna have Vim, or at least vi.\n\n157\n00:07:28.064 --> 00:07:31.520\nAnd so that's what I use, I always go\nto vi, it's kinda my default letter.\n\n158\n00:07:31.520 --> 00:07:33.266\nI know it's gonna be there, right?\n\n159\n00:07:33.266 --> 00:07:34.704\nNano, I don't know if it's gonna be there.\n\n160\n00:07:34.704 --> 00:07:38.299\nAnd so while it is easier and it certainly\nworks, I typically don't use it.\n\n161\n00:07:38.299 --> 00:07:41.686\nBut even for somebody like me who doesn't\nuse it on the regular basis, it's still\n\n162\n00:07:41.686 --> 00:07:44.001\neasy because everything is right there-\n&gt;&gt; [LAUGH]\n\n163\n00:07:44.001 --> 00:07:44.685\n&gt;&gt; On the screen.\n\n164\n00:07:44.685 --> 00:07:48.715\nSo if I wanna take this file for\nexample, so I'm in here, and\n\n165\n00:07:48.715 --> 00:07:52.049\nI wanna do something like copy and\npaste, right?\n\n166\n00:07:52.049 --> 00:07:55.966\nI don't have to do anything too crazy,\nit's only right on here, Ctrl+K and Ctrl,\n\n167\n00:07:55.966 --> 00:07:56.583\nlet's see.\n\n168\n00:07:56.583 --> 00:07:58.024\n&gt;&gt; U?\n\n169\n00:07:58.024 --> 00:08:01.135\n&gt;&gt; So you've got to cut the text and\nthen to uncut it, right?\n\n170\n00:08:01.135 --> 00:08:03.126\nWhich is a little confusing, right?\n\n171\n00:08:03.126 --> 00:08:04.511\nCuz it's not paste, right?\n\n172\n00:08:04.511 --> 00:08:05.428\nIt's Uncut.\n\n173\n00:08:05.428 --> 00:08:10.511\nBut [LAUGH] we can come in and\nwe can find our text that we want.\n\n174\n00:08:10.511 --> 00:08:15.436\n&gt;&gt; And when you get to where you wanted\nto be, we can highlight text by holding\n\n175\n00:08:15.436 --> 00:08:19.259\ndown our shift key, and\nkind of going like that, right?\n\n176\n00:08:19.259 --> 00:08:22.765\nAnd so I'm just holding shift and\nusing my arrows to highlight what I want.\n\n177\n00:08:22.765 --> 00:08:27.232\nAnd I can hit Ctrl+K, and\nI just grabbed it, right?\n\n178\n00:08:27.232 --> 00:08:31.334\nAnd then I can go and\nI can paste it wherever I want it to go,\n\n179\n00:08:31.334 --> 00:08:34.511\nby doing Ctrl+U and uncutting it, right?\n\n180\n00:08:34.511 --> 00:08:38.310\nAnd it's in a buffer, so\nI can Ctrl+U as many times as I want.\n\n181\n00:08:38.310 --> 00:08:42.315\nI can actually go back to that\noriginal line, and Ctrl+U right there.\n\n182\n00:08:42.315 --> 00:08:45.610\nSo Ctrl+K to cut, Ctrl+U to uncut,\n\n183\n00:08:45.610 --> 00:08:49.190\nor what we could call paste,\nand put it back, pretty easy.\n\n184\n00:08:49.190 --> 00:08:51.781\nAgain, right there on the screen for\nus, simple transition.\n\n185\n00:08:51.781 --> 00:08:56.340\n&gt;&gt; And Don, you showed us how to,\nif we were done editing a file,\n\n186\n00:08:56.340 --> 00:08:58.640\nwe did the Ctrl+X to exit out.\n\n187\n00:08:58.640 --> 00:09:01.961\nAnd they would ask us, you've made\nsome changes, do you wanna save,\n\n188\n00:09:01.961 --> 00:09:04.880\nkind of l that safety net for us,\nif we hadn't saved the changes.\n\n189\n00:09:04.880 --> 00:09:07.070\nBut a lot of times,\nthat's exactly what we wanna do.\n\n190\n00:09:07.070 --> 00:09:10.220\nWe don't want to exit the file,\nbut we do wanna save the file so\n\n191\n00:09:10.220 --> 00:09:11.330\nthat we can continue editing.\n\n192\n00:09:11.330 --> 00:09:14.822\nI know I like to do random saves\nafter x amount of time in a file, so\n\n193\n00:09:14.822 --> 00:09:17.685\nthat I don't lose anything,\njust in case, right?\n\n194\n00:09:17.685 --> 00:09:18.839\nHow can I do that?\n\n195\n00:09:18.839 --> 00:09:19.879\n&gt;&gt; All right, so first off,\n\n196\n00:09:19.879 --> 00:09:22.680\nyou just need to pay attention\nwhether your file is modified, right?\n\n197\n00:09:22.680 --> 00:09:25.550\nMine is now modified, so I see that up\non the top, I know it's been changed.\n\n198\n00:09:25.550 --> 00:09:28.508\nAnd if I'm worried about losing\na connection or something,\n\n199\n00:09:28.508 --> 00:09:31.556\nthat I might lose my changes,\nat any time you can hit Ctrl+O.\n\n200\n00:09:31.556 --> 00:09:34.696\nCtrl+O is that right out,\nand it's gonna save it.\n\n201\n00:09:34.696 --> 00:09:37.662\nAnd it gives me the chance to\nchange the file name if I want.\n\n202\n00:09:37.662 --> 00:09:40.762\nSee it's offering to save it as\nmobydick.txt, the original name.\n\n203\n00:09:40.762 --> 00:09:41.961\nAnd if that's what I want,\nI just press Enter.\n\n204\n00:09:41.961 --> 00:09:44.558\nSo Ctrl+O and then enter,\nand you saved, right?\n\n205\n00:09:44.558 --> 00:09:48.003\nOr I might choose to rename the file,\nwhich I can do right here,\n\n206\n00:09:48.003 --> 00:09:49.243\nsave as a second copy.\n\n207\n00:09:49.243 --> 00:09:52.574\nI'll leave it alone, and\nit saves it, and now I keep working.\n\n208\n00:09:52.574 --> 00:09:56.213\nSo it really doesn't get in your way,\njust Ctrl+O, Enter, you've saved, and\n\n209\n00:09:56.213 --> 00:09:57.387\nnow you're in business.\n\n210\n00:09:57.387 --> 00:10:00.917\nOr you cannot save, and just keep making\nyour changes, and then when you exit it,\n\n211\n00:10:00.917 --> 00:10:03.490\nit will prompt you and\nyou can save then too, if you want to.\n\n212\n00:10:03.490 --> 00:10:05.039\nSo it is kinda up to you,\nhow you wanna handle it out.\n\n213\n00:10:05.039 --> 00:10:07.444\n&gt;&gt; And, Don,\nalso when we did the vi episode,\n\n214\n00:10:07.444 --> 00:10:11.149\nyou talked about how sometimes\nyou've run across the keyboard, or\n\n215\n00:10:11.149 --> 00:10:15.320\nmaybe even an operating system,\nthat's not supportive of the arrow keys.\n\n216\n00:10:15.320 --> 00:10:18.610\nWe don't have arrow key functionality,\nif that is the case,\n\n217\n00:10:18.610 --> 00:10:20.820\nhow can we bounce around inside of here?\n\n218\n00:10:20.820 --> 00:10:22.655\n&gt;&gt; It doesn't happen as much here.\n\n219\n00:10:22.655 --> 00:10:24.851\nCuz normally if you remote\ninto a server that has nano,\n\n220\n00:10:24.851 --> 00:10:28.172\nthen it's usually got a feature-rich\nterminal, and your arrow keys will work.\n\n221\n00:10:28.172 --> 00:10:31.030\nBut if your arrow keys don't work,\nyou can get by on the keyboard.\n\n222\n00:10:32.150 --> 00:10:34.759\nThey aren't all in a row,\nlike on the vi editor,\n\n223\n00:10:34.759 --> 00:10:36.807\nit's a little bit weird how it works.\n\n224\n00:10:36.807 --> 00:10:43.081\nBut basically, you can do Ctrl+F, and\nCtrl+F moves you forwards, right?\n\n225\n00:10:43.081 --> 00:10:44.989\nSo that makes sense, F for forward.\n\n226\n00:10:44.989 --> 00:10:46.810\nCtrl+B is backwards, right?\n\n227\n00:10:46.810 --> 00:10:50.350\nSo I've got forward and backward, so\nmoving left and right, right there.\n\n228\n00:10:50.350 --> 00:10:56.691\nAnd then you've got Ctrl+P for previous\nline and Ctrl+N for next line, right?\n\n229\n00:10:56.691 --> 00:10:59.423\nWhich is basically up and down, right?\n\n230\n00:10:59.423 --> 00:11:01.824\nSo B and F, backwards and forwards.\n\n231\n00:11:01.824 --> 00:11:03.494\nP and N, previous and next.\n\n232\n00:11:03.494 --> 00:11:06.702\nSo you're holding Ctrl while you do this,\nand you can navigate around.\n\n233\n00:11:06.702 --> 00:11:09.738\nSo while they're not all next to\neach other on the keyboard, to me,\n\n234\n00:11:09.738 --> 00:11:11.728\nit's actually easier than things like vi.\n\n235\n00:11:11.728 --> 00:11:16.530\nCuz with vi, I have to remember,\nall right, is h up, or left, or down?\n\n236\n00:11:16.530 --> 00:11:17.821\nIs j up, or left, or down?\n\n237\n00:11:17.821 --> 00:11:22.557\nI can't remember, but here, we've got\nthose mnemonics of backwards, forwards,\n\n238\n00:11:22.557 --> 00:11:23.817\nprevious, and next.\n\n239\n00:11:23.817 --> 00:11:26.715\n&gt;&gt; Well, Don,\nof course any text editor worth its salt,\n\n240\n00:11:26.715 --> 00:11:29.874\nis gonna have to give me some\nsort of search functionality.\n\n241\n00:11:29.874 --> 00:11:33.056\nEspecially when we're dealing with\nfiles the size of Moby Dick here.\n\n242\n00:11:33.056 --> 00:11:35.527\n&gt;&gt; [LAUGH]\n&gt;&gt; With 17,000-some odd lines that\n\n243\n00:11:35.527 --> 00:11:36.240\nwe've seen.\n\n244\n00:11:36.240 --> 00:11:38.149\nIs there a search functionality,\nand if so, how do we use it?\n\n245\n00:11:38.149 --> 00:11:41.395\n&gt;&gt; Absolutely, so in the vi episode,\nwe searched for Ishmael, and\n\n246\n00:11:41.395 --> 00:11:43.587\nwe replaced that name with my name, right?\n\n247\n00:11:43.587 --> 00:11:47.480\nSo we can do the same thing here,\nI wanna search and find Ishmael.\n\n248\n00:11:47.480 --> 00:11:53.433\nWell, right here, we've got the where\nis command, and that's a Ctrl+w.\n\n249\n00:11:53.433 --> 00:11:54.924\nAnd now it's asking me\nwhat I wanna search for.\n\n250\n00:11:54.924 --> 00:11:57.701\nI wanna search for Ishmael.\n\n251\n00:11:57.701 --> 00:12:01.285\nAnd when I search for that, it jumps\nforward, and there it is, right there,\n\n252\n00:12:01.285 --> 00:12:03.507\nwe just found it, and\nnow, we know where he is.\n\n253\n00:12:03.507 --> 00:12:07.680\nSo Ctrl+W where is, that searches\nforward and finds that text for us.\n\n254\n00:12:07.680 --> 00:12:11.108\nAnd once we've found it, if we wanna go\nthat step further, we can actually go in,\n\n255\n00:12:11.108 --> 00:12:13.810\nand do the replace as well,\nwhich is just the Ctrl+backslash.\n\n256\n00:12:13.810 --> 00:12:17.300\nSo I'll do a Ctrl+backslash, and\nit's asking me what I wanna replace.\n\n257\n00:12:17.300 --> 00:12:20.130\nNow, it remembers that I just searched for\nIshmael.\n\n258\n00:12:20.130 --> 00:12:21.150\nIf I hadn't searched,\n\n259\n00:12:21.150 --> 00:12:25.460\nit would put whatever word was there\nthat my cursor was on right now, okay?\n\n260\n00:12:25.460 --> 00:12:27.380\nAnd so it's saying,\nyou might wanna search for Ishmael.\n\n261\n00:12:27.380 --> 00:12:29.830\nBut I can search for anything,\nyou just type the word.\n\n262\n00:12:29.830 --> 00:12:32.610\nIf I do wanna search for Ishmael,\nI just press Enter, right?\n\n263\n00:12:32.610 --> 00:12:35.547\nBut if I wanna search for anything else,\nI could just type it in here, and\n\n264\n00:12:35.547 --> 00:12:36.861\nit'll search for that string.\n\n265\n00:12:36.861 --> 00:12:40.450\nAnd then when I press Enter, it asks\nme what I wanna replace it with, okay?\n\n266\n00:12:40.450 --> 00:12:42.402\nI wanna replace it with Don.\n\n267\n00:12:42.402 --> 00:12:45.410\nAnd now I get to make a bit of a decision,\nright?\n\n268\n00:12:45.410 --> 00:12:48.740\nBecause, if you'll see, it's got some\nother shortcuts down here in the bottom to\n\n269\n00:12:48.740 --> 00:12:53.070\njump to the first line, go to the last\nline, previous history, next history.\n\n270\n00:12:53.070 --> 00:12:57.020\nSo if I'm doing instance by instance,\nI can do that, right?\n\n271\n00:12:57.020 --> 00:13:01.180\nWhen I press Enter here,\nit's gonna find the first one, and\n\n272\n00:13:01.180 --> 00:13:03.620\nit's asking me if I wanna change it.\n\n273\n00:13:03.620 --> 00:13:08.350\nNow, I said I found the first one, that's\nnot the one I was on a minute ago, right?\n\n274\n00:13:08.350 --> 00:13:10.775\nNotice that ISHMAEL here is all capital.\n\n275\n00:13:10.775 --> 00:13:13.531\nThe search I did a moment ago\nwas capital I and lowercase, so\n\n276\n00:13:13.531 --> 00:13:17.760\nit's actually finding each of them, and\nit's asking me what I wanna do about that.\n\n277\n00:13:17.760 --> 00:13:19.040\nDo I wanna replace this one or not?\n\n278\n00:13:19.040 --> 00:13:22.381\nAnd I can sit here and just say yes and\nno, and pick for each instance, or\n\n279\n00:13:22.381 --> 00:13:25.590\nI could hit A for all, and just knock\nthem all out in the entire file.\n\n280\n00:13:25.590 --> 00:13:28.919\nAnd that's what I'm gonna do, I'm just\ngonna hit A and now it replaces it, and\n\n281\n00:13:28.919 --> 00:13:31.350\nthat Call me Ishmael\njust became Call me Don.\n\n282\n00:13:31.350 --> 00:13:34.211\nAnd it's like that throughout\nthe whole file, at least it should.\n\n283\n00:13:34.211 --> 00:13:38.710\nI got 20 occurrences, so it replaced all\nof those, and now we've got it updated.\n\n284\n00:13:38.710 --> 00:13:41.455\nAnd that's far more simple than\nthe syntax that we have to type in,\n\n285\n00:13:41.455 --> 00:13:43.429\nin some of the other\neditors that are out there.\n\n286\n00:13:43.429 --> 00:13:48.139\n&gt;&gt; Yes, this is definitely a much\nmore simple text editor that we have.\n\n287\n00:13:48.139 --> 00:13:52.818\nI go back and forth, Don, when it\ncomes to vi, because that's my roots.\n\n288\n00:13:52.818 --> 00:13:55.676\n&gt;&gt; Yeah. [LAUGH] &gt;&gt; It's where I came\nfrom, and I don't wanna lose, well,\n\n289\n00:13:55.676 --> 00:13:56.270\nmy culture.\n\n290\n00:13:56.270 --> 00:13:59.647\n[LAUGH] But\nnano sure is a whole easier to mess with.\n\n291\n00:13:59.647 --> 00:14:02.278\nIs there any good reason\nto use one over the other,\n\n292\n00:14:02.278 --> 00:14:04.292\nother than it's just not supported?\n\n293\n00:14:04.292 --> 00:14:07.178\n&gt;&gt; It usually comes down to personal\npreference, but the support is a big deal.\n\n294\n00:14:07.178 --> 00:14:09.016\nI just don't know if nano\nis gonna be there for me.\n\n295\n00:14:09.016 --> 00:14:11.536\nIf I knew Nano was always\ngoing to be there,\n\n296\n00:14:11.536 --> 00:14:13.989\nthen I might start using it more, right?\n\n297\n00:14:13.989 --> 00:14:17.622\nThe vi and Vim, they actually do have\nsome advanced functionality in them\n\n298\n00:14:17.622 --> 00:14:19.687\nthat can be useful, that nano doesn't.\n\n299\n00:14:19.687 --> 00:14:21.848\nLike if you have multiple tabs,\n\n300\n00:14:21.848 --> 00:14:25.859\nyou can actually do these tabs\nfrom the command line in Vim.\n\n301\n00:14:25.859 --> 00:14:26.911\nThat kind of stuff might be handy,\n\n302\n00:14:26.911 --> 00:14:29.660\nmost people don't use that functionality\nthough, so it doesn't matter.\n\n303\n00:14:29.660 --> 00:14:33.395\nNow, I will say that we keep positioning\nnano as being this super easy thing,\n\n304\n00:14:33.395 --> 00:14:36.397\nit actually does have a good bit\nof power that's hidden away.\n\n305\n00:14:36.397 --> 00:14:39.044\nWhen I look at my screen,\nwhat I'm seeing right here,\n\n306\n00:14:39.044 --> 00:14:41.590\nare just the main kind of\ndefault commands, right?\n\n307\n00:14:41.590 --> 00:14:45.750\nLike get help and write out, but notice\non the right side, the undo and redo,\n\n308\n00:14:45.750 --> 00:14:47.806\nthey don't have a control, do they?\n\n309\n00:14:47.806 --> 00:14:49.216\nThey have an M, right?\n\n310\n00:14:49.216 --> 00:14:53.947\nM is actually short for Meta, so\nthis is saying hit your Meta plus U,\n\n311\n00:14:53.947 --> 00:14:56.113\nMeta key plus E, or whatever.\n\n312\n00:14:56.113 --> 00:14:59.920\nThe Meta key in most Linux\ndistros is the Alt key.\n\n313\n00:14:59.920 --> 00:15:03.893\nSo it's saying Alt+U will undo,\nAlt+E will redo.\n\n314\n00:15:03.893 --> 00:15:07.910\nAnd so if I hit Alt+U,\nsee how Don just became Ishmael again?\n\n315\n00:15:07.910 --> 00:15:11.450\nIt just undid all those text and replace.\n\n316\n00:15:11.450 --> 00:15:14.400\nWell, because we have control, and\n\n317\n00:15:14.400 --> 00:15:19.420\nwe have the Meta key, we actually have a\nlarge set of commands that we could send.\n\n318\n00:15:19.420 --> 00:15:22.718\nWhat you're seeing here on screen is,\nI mean, what is this?\n\n319\n00:15:22.718 --> 00:15:25.310\n14 commands, right?\n\n320\n00:15:25.310 --> 00:15:29.070\nVery very simple,\nthese are the most common 14 commands.\n\n321\n00:15:29.070 --> 00:15:31.844\nBut if you do Ctrl+G and go into the help,\n\n322\n00:15:31.844 --> 00:15:35.032\nyou'll find where there\nare tons of commands.\n\n323\n00:15:35.032 --> 00:15:40.490\nAnd a lot of them have control shortcuts,\nand some even have F key shortcuts.\n\n324\n00:15:40.490 --> 00:15:44.061\nSo Ctrl+G takes me to help,\nF1 takes me to help as well.\n\n325\n00:15:44.061 --> 00:15:45.560\nSo some of them have F keys.\n\n326\n00:15:45.560 --> 00:15:47.280\nNot a lot of them do though.\n\n327\n00:15:47.280 --> 00:15:49.991\nNotice when I did my search,\nI did Control+backslash,\n\n328\n00:15:49.991 --> 00:15:52.970\nI could've done Meta key R.\n\n329\n00:15:52.970 --> 00:15:55.760\nThat would have done search and\nreplace as well.\n\n330\n00:15:55.760 --> 00:15:57.560\nAnd so as you read through,\n\n331\n00:15:57.560 --> 00:16:03.160\nyou'll find all sorts of functionality\nthat is locked behind the Meta key.\n\n332\n00:16:03.160 --> 00:16:06.337\nAnd so you can really replicate\nthe majority of what you do in the more\n\n333\n00:16:06.337 --> 00:16:07.855\ncomplex editors, right here.\n\n334\n00:16:07.855 --> 00:16:12.409\nSo if you ever browse through here,\nyou can find some really neat stuff, and\n\n335\n00:16:12.409 --> 00:16:17.570\nfind that nano can actually do more\nthings than you would normally think.\n\n336\n00:16:17.570 --> 00:16:22.144\nThis documentation is full\nof interesting stuff.\n\n337\n00:16:22.144 --> 00:16:25.144\nIf we look in here,\nyou can kinda search, here we go,\n\n338\n00:16:25.144 --> 00:16:28.975\nline numbering enabled disabled,\nthat's what I was looking for.\n\n339\n00:16:28.975 --> 00:16:30.740\nI'm don't have line numbers on my screen.\n\n340\n00:16:30.740 --> 00:16:33.660\nBut it's not because nano doesn't support\nit, they're just not on by default.\n\n341\n00:16:33.660 --> 00:16:36.783\nAnd I'll see that's locked\nbehind Meta key Pound symbol.\n\n342\n00:16:36.783 --> 00:16:41.425\nSo if I get out of help by doing Ctrl+X,\n\n343\n00:16:41.425 --> 00:16:44.957\nI could say Alt+Shift+#.\n\n344\n00:16:44.957 --> 00:16:48.079\nI have to Shift cuz the Pound\nsymbol is on the number three, so\n\n345\n00:16:48.079 --> 00:16:51.706\nI have to do Alt+Shift+3, and\nnow I've got line numbers, right?\n\n346\n00:16:51.706 --> 00:16:56.672\nSo don't assume that nano is some\nlightweight editor that isn't as great as\n\n347\n00:16:56.672 --> 00:16:58.079\nVim, it can do a lot.\n\n348\n00:16:58.079 --> 00:16:59.726\nThe reason that I don't use it,\n\n349\n00:16:59.726 --> 00:17:02.880\nis just because I know it's\nnot always there for me.\n\n350\n00:17:02.880 --> 00:17:04.991\nAnd if I'm working on\nsomeone else's server,\n\n351\n00:17:04.991 --> 00:17:08.338\nI don't necessarily have permission\nto install software on that server.\n\n352\n00:17:08.338 --> 00:17:10.055\nIf that server is air-gapped,\n\n353\n00:17:10.055 --> 00:17:14.250\nI might not even have access to\na repository to be able to download nano.\n\n354\n00:17:14.250 --> 00:17:16.571\nI might have to work with what's there,\nand\n\n355\n00:17:16.571 --> 00:17:18.847\nI always know that the vi\nis gonna be there.\n\n356\n00:17:18.847 --> 00:17:23.633\nAnd I shouldn't say always, because\nthe POSIX compliance requirement says\n\n357\n00:17:23.633 --> 00:17:26.797\nthat there has to be\na default editor at /bin/vi,\n\n358\n00:17:26.797 --> 00:17:29.006\nit doesn't say it has to be vi-\n&gt;&gt; [LAUGH] Yeah\n\n359\n00:17:29.006 --> 00:17:30.481\n&gt;&gt; It just says it has to be there.\n\n360\n00:17:30.481 --> 00:17:34.740\nAnd that's where the Ubuntu guys,\nthey have linked /bin/vi to nano.\n\n361\n00:17:34.740 --> 00:17:38.180\nAnd so in Ubuntu, if you type vi,\nyou actually end up in nano.\n\n362\n00:17:38.180 --> 00:17:39.778\nSo it is gaining that kind of traction.\n\n363\n00:17:39.778 --> 00:17:42.641\nWe might see, a few years from now,\nwhere everybody is using nano, and\n\n364\n00:17:42.641 --> 00:17:45.582\nwe laugh at the the vi shows, like\nremember we used to use that dinosaur.\n\n365\n00:17:45.582 --> 00:17:46.220\n[LAUGH]\n&gt;&gt; Stupid vi.\n\n366\n00:17:46.220 --> 00:17:49.311\nYeah, [LAUGH] but for now,\nit's still pretty impressive, and\n\n367\n00:17:49.311 --> 00:17:51.716\ndefinitely an editor you\ncan take advantage of.\n\n368\n00:17:51.716 --> 00:17:57.414\n&gt;&gt; There also is a .nanorc file or\n.nano file, that you can configure.\n\n369\n00:17:57.414 --> 00:18:02.516\nKinda like what we did with the Vim file\nas well, to make those changes persistent\n\n370\n00:18:02.516 --> 00:18:07.113\nevery time you fire them up and it would\nlike to put the syntax high again.\n\n371\n00:18:07.113 --> 00:18:08.649\nBecause I do a lot of Batch scripting,\n\n372\n00:18:08.649 --> 00:18:10.930\nit helps me able to visualize\na whole lot better.\n\n373\n00:18:10.930 --> 00:18:11.969\nVery very nice thing.\n\n374\n00:18:11.969 --> 00:18:15.230\nDon, it looks like we've\ncome to the end of nano.\n\n375\n00:18:15.230 --> 00:18:19.126\nIt's a short episode, because it's a short\nlittle guy, but it does a lot of stuff and\n\n376\n00:18:19.126 --> 00:18:21.412\nit's a very easy text editor\nto get your feet wet.\n\n377\n00:18:21.412 --> 00:18:26.182\nAnd a lot of distributions that are based\noff of Debian and are coming with nano, so\n\n378\n00:18:26.182 --> 00:18:29.307\nyou're probably gonna run\ninto it from time to time.\n\n379\n00:18:29.307 --> 00:18:30.336\nI say learn both.\n\n380\n00:18:30.336 --> 00:18:34.683\nI say learn vi, learn Vim, learn nano,\nso that no matter what system you're on,\n\n381\n00:18:34.683 --> 00:18:37.005\nyou can definitely work with your text.\n\n382\n00:18:37.005 --> 00:18:38.864\nDon, anything else that you wanna add\nto the show before we call it a day.\n\n383\n00:18:38.864 --> 00:18:42.627\n&gt;&gt; Well, you mentioned how this was\nkind of shorter show, well, technically,\n\n384\n00:18:42.627 --> 00:18:44.688\nif you watch our vi show,\nit was two parts.\n\n385\n00:18:44.688 --> 00:18:45.398\n&gt;&gt; It was.\n\n386\n00:18:45.398 --> 00:18:48.158\n&gt;&gt; And\nI showed you in this episode everything\n\n387\n00:18:48.158 --> 00:18:51.310\nthat we did in vi in two\nshows that you hear in one.\n\n388\n00:18:51.310 --> 00:18:53.891\nAnd it just kind of is a-\n&gt;&gt; A testament.\n\n389\n00:18:53.891 --> 00:18:56.509\n&gt;&gt; Yeah, to how much easier it's doing,\nthat we don't have different command\n\n390\n00:18:56.509 --> 00:18:58.295\nmodes, we don't have\ndifferent things like that.\n\n391\n00:18:58.295 --> 00:19:01.262\nIt's a testament to how easy Nano is,\nand that's why it's so popular.\n\n392\n00:19:01.262 --> 00:19:03.517\nAll right, well, Don, thanks for\njoining us today, thanks for\n\n393\n00:19:03.517 --> 00:19:04.880\nwalking us through working with Nano.\n\n394\n00:19:04.880 --> 00:19:08.087\nIt's a lot of fun and very easy\ntext editor obviously to work with.\n\n395\n00:19:08.087 --> 00:19:11.331\nHopefully, you guys get out there and\nhave some fun with it, make some files,\n\n396\n00:19:11.331 --> 00:19:13.590\nstart doing some stuff,\nlearn all about it.\n\n397\n00:19:13.590 --> 00:19:16.460\nBut it does look like we are out\nof show for this show, so\n\n398\n00:19:16.460 --> 00:19:17.250\nwe're gonna call it a day.\n\n399\n00:19:17.250 --> 00:19:19.925\nThanks for watching,\nsigning off for ITProTV.\n\n400\n00:19:19.925 --> 00:19:21.284\nI've been your host, Daniel Lowrie.\n\n401\n00:19:21.284 --> 00:19:22.109\n&gt;&gt; And I'm Don Pezet.\n\n402\n00:19:22.109 --> 00:19:24.708\n&gt;&gt; And we'll see you next time.\n\n403\n00:19:24.708 --> 00:19:30.308\n[MUSIC]\n\n404\n00:19:30.308 --> 00:19:34.386\nThank you for watching ITProTV.\n\n",
          "vimeoId": "235788761"
        }
      ],
      "title": "Editing Files"
    }
  ],
  "url": "linux-command-line",
  "vLab": false
}
