{
  "description": "The Linux Security Techniques series introduces the viewers to the various security features found in modern Linux distributions. Topics covered include data encryption, auditing access, SELinux and firewall configuration among others. The series also lightly covers penetration testing to ensure that each security technique is implemented properly.",
  "descriptionMD": "The *Linux Security Techniques* series introduces the viewers to the various security features found in modern Linux distributions. Topics covered include data encryption, auditing access, SELinux and firewall configuration among others. The series also *lightly* covers penetration testing to ensure that each security technique is implemented properly.",
  "length": "38833",
  "name": "Linux Security Techniques",
  "practiceExam": false,
  "subtitle": "Security features found in modern Linux distributions",
  "tagUrl": "security-admin",
  "topics": [
    {
      "episodes": [
        {
          "description": "The Linux Security Techniques series introduces the viewers to the various security features found in modern Linux distributions. Topics covered include data encryption, auditing access, SELinux and firewall configuration among others. The series also lightly covers penetration testing to ensure that each security technique is implemented properly.",
          "length": "296",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-0-0-overview-082917.00_04_49_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-0-0-overview-082917.00_04_49_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-0-0-overview-082917.00_04_49_01.Still001-sm.jpg",
          "title": "Overview",
          "transcript": "",
          "vimeoId": "231608082"
        },
        {
          "description": "Don and Zach cover what we need to do to enable syslog, what we need to configure & maintain it, modifying/tampering with/deleting the logs, and other considerations for syslog including RELP.",
          "length": "1590",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-1-managing_logs_with_syslog-081617-PGM.00_27_17_04.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-1-managing_logs_with_syslog-081617-PGM.00_27_17_04.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-1-managing_logs_with_syslog-081617-PGM.00_27_17_04.Still001-sm.jpg",
          "title": "Managing Logs with syslog",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:07.767\nWelcome to ITProTV, I'm your host, Don-\n&gt;&gt; [CROSSTALK]\n\n2\n00:00:07.767 --> 00:00:11.956\n&gt;&gt; You're watching ITProTV.\n\n3\n00:00:11.956 --> 00:00:14.348\n&gt;&gt; Hello and thank you for\nchoosing ITProTV,\n\n4\n00:00:14.348 --> 00:00:16.350\nhelping you learn wherever you go.\n\n5\n00:00:16.350 --> 00:00:20.590\nI'm your host, Zach Memos, as we continue\non with Linux Security techniques.\n\n6\n00:00:20.590 --> 00:00:23.790\nWe're gonna be looking at\nmanaging logs with syslog.\n\n7\n00:00:23.790 --> 00:00:27.839\nAnd our very own Don Pezet is bringing us\nall the information we need because he\n\n8\n00:00:27.839 --> 00:00:29.533\nknows it, he knows this stuff.\n\n9\n00:00:29.533 --> 00:00:31.142\n&gt;&gt; [LAUGH]\n&gt;&gt; Yes he does.\n\n10\n00:00:31.142 --> 00:00:33.622\n&gt;&gt; All right, well in this episode\nwe're going to be tackling syslog.\n\n11\n00:00:33.622 --> 00:00:36.718\nAnd hopefully, if you're watching\na Linux security technique show,\n\n12\n00:00:36.718 --> 00:00:38.117\nyou already know about syslog.\n\n13\n00:00:38.117 --> 00:00:40.091\nAnd you know what it is,\nand you know what it does,\n\n14\n00:00:40.091 --> 00:00:41.561\nbecause it is so important, right?\n\n15\n00:00:41.561 --> 00:00:46.330\nIt is that kind of core logging\nsubsystem found in most Linux distros.\n\n16\n00:00:46.330 --> 00:00:50.590\nAnd as a security professional we\nneed to know about it because one,\n\n17\n00:00:50.590 --> 00:00:52.730\nthat's how we're gonna find out\nwhat's going on in our system, right?\n\n18\n00:00:52.730 --> 00:00:56.440\nWe need to know when inappropriate\naccess or unusual behavior is occurring,\n\n19\n00:00:56.440 --> 00:00:58.050\nanything that might cause an outage.\n\n20\n00:00:58.050 --> 00:00:59.560\nWe need to know that's occurring.\n\n21\n00:00:59.560 --> 00:01:03.700\nAnd two, we need to be protecting\nthose logs, because for\n\n22\n00:01:03.700 --> 00:01:07.850\na hacker, their number one\ngoal is to damage your logs.\n\n23\n00:01:07.850 --> 00:01:11.180\nTheir number two goal is to\nthen gain access to your data.\n\n24\n00:01:11.180 --> 00:01:14.188\nThey need to damage the logs first so\nthey can hide their tracks,\n\n25\n00:01:14.188 --> 00:01:15.478\nthen they get at your data.\n\n26\n00:01:15.478 --> 00:01:18.662\nIf they go straight for the data, you'll\nhave logs, you'll be able to track that.\n\n27\n00:01:18.662 --> 00:01:19.976\nYou'll be able to see what happens and\n\n28\n00:01:19.976 --> 00:01:21.980\nthat's how you'll be able\nto build a court case.\n\n29\n00:01:21.980 --> 00:01:23.880\nSo they target the logs first.\n\n30\n00:01:23.880 --> 00:01:28.960\nThis is a very high priority target,\nI guess, for an attacker.\n\n31\n00:01:28.960 --> 00:01:31.760\nSo we wanna make sure that we're doing\nwhat we can to ensure that these logs\n\n32\n00:01:31.760 --> 00:01:36.450\nare working properly, that we don't\nlose our logs and that we've got them\n\n33\n00:01:36.450 --> 00:01:39.800\nprotected in the event that somebody\ndoes manage to find a way to erase them.\n\n34\n00:01:39.800 --> 00:01:41.930\nAnd that's all the stuff that we're\ngonna be taking a look at right here\n\n35\n00:01:41.930 --> 00:01:42.840\nin this episode.\n\n36\n00:01:42.840 --> 00:01:46.260\n&gt;&gt; So Don,\nwhat do we need to do to enable syslog?\n\n37\n00:01:46.260 --> 00:01:48.990\n&gt;&gt; Well,\nthis is one of those services that is\n\n38\n00:01:48.990 --> 00:01:53.380\ninstalled by default in every\ndistro that's worth its salt today,\n\n39\n00:01:53.380 --> 00:01:56.610\nand really has a default\nconfiguration that's pretty good.\n\n40\n00:01:56.610 --> 00:02:00.020\nSo technically,\nyou don't have to do anything, right?\n\n41\n00:02:00.020 --> 00:02:03.880\nAnd that's a bit of a double edged sword,\nbecause on one hand it's super easy.\n\n42\n00:02:03.880 --> 00:02:05.074\nHey syslog's already running,\nit's doing its thing.\n\n43\n00:02:05.074 --> 00:02:06.161\n&gt;&gt; It's already doing it, right.\n\n44\n00:02:06.161 --> 00:02:10.794\n&gt;&gt; But on the other hand, the default\nconfiguration is not as ideal as\n\n45\n00:02:10.794 --> 00:02:15.670\nwe'd like to see it for\na security focused environment, right?\n\n46\n00:02:15.670 --> 00:02:19.680\nSo it's good enough for basic trouble\nshooting, and simple auditing,\n\n47\n00:02:19.680 --> 00:02:20.750\nand things like that.\n\n48\n00:02:20.750 --> 00:02:22.640\nBut it's not quite where we want it to be.\n\n49\n00:02:22.640 --> 00:02:25.180\nSo there are somethings that we\nwanna get in there and change.\n\n50\n00:02:25.180 --> 00:02:28.799\nBut pretty much every distro\nthat's out there has syslog.\n\n51\n00:02:28.799 --> 00:02:30.050\nI mean, syslog's been around a long time.\n\n52\n00:02:30.050 --> 00:02:33.818\nIt was developed in the 1970s\nit's been around with Unix and\n\n53\n00:02:33.818 --> 00:02:37.601\nimported into Linux and it does its job,\nit does it really well.\n\n54\n00:02:37.601 --> 00:02:44.299\nSome of you may know that syslog,\nits time is ticking, right?\n\n55\n00:02:44.299 --> 00:02:49.889\nThat Journald is replacing syslog,\nand so we know that's happening.\n\n56\n00:02:49.889 --> 00:02:54.040\nBut even the distros that have switched\nto Journald, still run syslog.\n\n57\n00:02:54.040 --> 00:02:54.900\nThey run them together.\n\n58\n00:02:54.900 --> 00:02:58.450\nI don't know a single distro\nthat has abandoned syslog yet.\n\n59\n00:02:58.450 --> 00:02:59.990\nI can't think of a single one.\n\n60\n00:02:59.990 --> 00:03:02.080\nAll the commercially supported\nones still use syslog.\n\n61\n00:03:02.080 --> 00:03:06.540\nSo it's the one we want,\nit's configured and enabled by default.\n\n62\n00:03:06.540 --> 00:03:10.030\nWe can verify if you don't know, right?\n\n63\n00:03:10.030 --> 00:03:14.550\nWhen syslog runs,\nit is logging to /var/log, right?\n\n64\n00:03:14.550 --> 00:03:16.610\nThat's the folder that it logs to.\n\n65\n00:03:16.610 --> 00:03:21.260\nAnd if I wanna get into that folder,\ncd /var/ log,\n\n66\n00:03:21.260 --> 00:03:25.170\nwell this folder has logs for\na lot of different things.\n\n67\n00:03:25.170 --> 00:03:29.902\nAnd if you are running a syslog it'll\nusually be this guy right here,\n\n68\n00:03:29.902 --> 00:03:31.706\n/var/log/messages.\n\n69\n00:03:31.706 --> 00:03:33.779\nThat is where our message\nare getting dumped to.\n\n70\n00:03:33.779 --> 00:03:37.667\nNow if you have messed with the\nconfiguration, then it may not be there or\n\n71\n00:03:37.667 --> 00:03:41.685\nI have seen some distros which they\nactually name the file syslog instead of\n\n72\n00:03:41.685 --> 00:03:43.180\nnaming it messages.\n\n73\n00:03:43.180 --> 00:03:46.860\nBut that's where it's logging to and\nall of the various server activity that's\n\n74\n00:03:46.860 --> 00:03:49.870\noccurring is being dumped\nright into that file.\n\n75\n00:03:49.870 --> 00:03:53.590\nSo I know the syslog is kinda there and\ndoing its job.\n\n76\n00:03:53.590 --> 00:03:56.280\nBut I can also hunt down its\nprocess if I want, right?\n\n77\n00:03:56.280 --> 00:04:02.870\nIt starts pretty early in the system if\nwe come in and hunt down that process.\n\n78\n00:04:02.870 --> 00:04:07.420\nSo I'm just doing a ps aux to view my\nprocess list and grepping for syslog.\n\n79\n00:04:07.420 --> 00:04:14.810\nAnd I can see it right here, process ID\n790/user/sbin/rsyslogd -n is running.\n\n80\n00:04:14.810 --> 00:04:16.400\nSo, it's running in the background,\n\n81\n00:04:16.400 --> 00:04:21.070\nit's doing its job, and we don't\nnecessarily need to worry about it.\n\n82\n00:04:21.070 --> 00:04:23.720\nI can verify that the logs\nare actually growing.\n\n83\n00:04:23.720 --> 00:04:26.980\nUsually when I'm watching the logs,\nI don't just go and\n\n84\n00:04:26.980 --> 00:04:28.830\nopen the messages file\nitself cuz it's pretty big.\n\n85\n00:04:28.830 --> 00:04:30.470\nI normally tail it, right?\n\n86\n00:04:30.470 --> 00:04:33.210\nAnd say just show me the last\nten lines which is the default.\n\n87\n00:04:33.210 --> 00:04:40.090\nSo I'll say tail/var/log/messages and\nwe can go in and look at it.\n\n88\n00:04:40.090 --> 00:04:44.540\nNow I get Permission denied, and\nthis is part of the default configuration.\n\n89\n00:04:44.540 --> 00:04:47.090\nI'm logged in as a regular user.\n\n90\n00:04:47.090 --> 00:04:48.460\nI'm just logged in as dpezet.\n\n91\n00:04:48.460 --> 00:04:51.830\nAnd a regular user doesn't\nhave access to the syslog.\n\n92\n00:04:51.830 --> 00:04:53.210\nWhy is that?\n\n93\n00:04:53.210 --> 00:04:55.710\nWell a regular user\nshouldn't need access to it.\n\n94\n00:04:55.710 --> 00:04:58.410\nAnd if they could, if they could\nget in there and tamper with it,\n\n95\n00:04:58.410 --> 00:04:59.662\nthen they could hide things.\n\n96\n00:04:59.662 --> 00:05:01.399\nOr they could run some tests to see,\nall right,\n\n97\n00:05:01.399 --> 00:05:03.630\nwhat's gonna show up in the logs and\nwhat isn't.\n\n98\n00:05:03.630 --> 00:05:04.670\nWe don't want that.\n\n99\n00:05:04.670 --> 00:05:08.000\nSo there are some basic permissions\nthat are assigned to this if we\n\n100\n00:05:09.690 --> 00:05:11.750\nlook at that file.\n\n101\n00:05:11.750 --> 00:05:16.408\nYou'll see where it's owned by root,\nand the root user has read and\n\n102\n00:05:16.408 --> 00:05:18.550\nwrite, nobody else, right?\n\n103\n00:05:18.550 --> 00:05:19.930\nNot even the root group.\n\n104\n00:05:19.930 --> 00:05:22.200\nSo if I have a user like my dpezet user,\n\n105\n00:05:22.200 --> 00:05:26.840\nif I put myself in the admin group, I add\nmyself to adm, I can use the sudo command,\n\n106\n00:05:26.840 --> 00:05:30.790\nand I can use other things, but\nI can't edit this file, right?\n\n107\n00:05:30.790 --> 00:05:32.050\nI don't have that permission.\n\n108\n00:05:32.050 --> 00:05:34.220\nOnly the root user does.\n\n109\n00:05:34.220 --> 00:05:40.010\nAnd as we saw up here,\nsyslogd is running as root, okay?\n\n110\n00:05:40.010 --> 00:05:42.600\nThis is why when you read about\nsecurity vulnerabilities and exploits,\n\n111\n00:05:42.600 --> 00:05:47.520\nany time there's a privilege escalation\nexploit, those are a big deal.\n\n112\n00:05:47.520 --> 00:05:51.590\nBecause that means a hacker is able to\nget in under one set of credentials and\n\n113\n00:05:51.590 --> 00:05:54.770\nthen escalate their\nprivileges up to root level.\n\n114\n00:05:54.770 --> 00:05:58.350\nBecause once they can do that,\nonce they can act on behalf of root,\n\n115\n00:05:58.350 --> 00:06:02.780\nnow they can modify this file,\nand that's a real problem.\n\n116\n00:06:02.780 --> 00:06:04.510\nSo it is limited down just like that.\n\n117\n00:06:04.510 --> 00:06:08.150\nIf I wanna look at this,\nI need to step up to a root.\n\n118\n00:06:08.150 --> 00:06:09.720\nI can either sudo my commands or\n\n119\n00:06:09.720 --> 00:06:13.060\ndo a sudo -s, that's what I'm\ngonna do to get a root shell.\n\n120\n00:06:13.060 --> 00:06:17.662\nAnd then that way, I can come in and\nI can tail /var/log/messages and\n\n121\n00:06:17.662 --> 00:06:19.361\nsee those last ten lines.\n\n122\n00:06:19.361 --> 00:06:21.159\nAnd so there's those entries.\n\n123\n00:06:21.159 --> 00:06:24.820\nIf I was troubleshooting something,\nI would do a tail- f to follow it.\n\n124\n00:06:24.820 --> 00:06:28.000\nAnd then that way as new entries were\ncreated, they would just start to kind of\n\n125\n00:06:28.000 --> 00:06:30.720\nappear here on the screen and I could\nwatch it while I was doing something.\n\n126\n00:06:30.720 --> 00:06:32.774\nBut I can see the log messages are there.\n\n127\n00:06:32.774 --> 00:06:38.857\nI've got entries from 10:54:09 and looking\nat my watch, it is 10:54 right now.\n\n128\n00:06:38.857 --> 00:06:40.670\nSo I know it's currently logging.\n\n129\n00:06:40.670 --> 00:06:43.870\nIt is doing its job and\nI didn't really configure anything,\n\n130\n00:06:43.870 --> 00:06:46.550\nI just powered on my system and\nthere it goes.\n\n131\n00:06:46.550 --> 00:06:51.220\nSo as far as getting configured,\nthere's not too much to it.\n\n132\n00:06:51.220 --> 00:06:55.478\nDo be aware that not everything\nlogs to that messages file.\n\n133\n00:06:55.478 --> 00:06:59.040\nNotice how there's a MariaDB folder\nhere from when I had a database server\n\n134\n00:06:59.040 --> 00:07:03.050\ninstalled or\nsome other entries like the audit folder.\n\n135\n00:07:03.050 --> 00:07:06.080\nThere are other logs that\nare just as important, but\n\n136\n00:07:06.080 --> 00:07:10.070\nthe syslog is gonna contain the general\ninformation about our system that is\n\n137\n00:07:10.070 --> 00:07:12.720\ntypically really useful\nwhen we're troubleshooting.\n\n138\n00:07:12.720 --> 00:07:17.270\nSo all the logs are important, but\nthe message one especially so,\n\n139\n00:07:17.270 --> 00:07:22.115\nbecause that's kind of our core logging\nsystem when the system fires up.\n\n140\n00:07:22.115 --> 00:07:26.260\n&gt;&gt; Don, is there anything we\nneed to maintain or configure?\n\n141\n00:07:26.260 --> 00:07:28.310\n&gt;&gt; Yeah, so I mentioned in\nthe beginning of the episode,\n\n142\n00:07:28.310 --> 00:07:30.290\nas a security administrator,\n\n143\n00:07:30.290 --> 00:07:33.710\none of the things that we need to be\naware of is log retention, right?\n\n144\n00:07:33.710 --> 00:07:39.232\nWe need to keep logs for a certain period\nof time, and how long is up to you.\n\n145\n00:07:39.232 --> 00:07:43.270\nNow the default configuration is\nusing what's called log rotation.\n\n146\n00:07:43.270 --> 00:07:45.478\nAnd log rotation says every so\n\n147\n00:07:45.478 --> 00:07:49.726\noften I\"m gonna close one log file and\nopen another one.\n\n148\n00:07:49.726 --> 00:07:51.130\nAnd you can see mine has done that.\n\n149\n00:07:51.130 --> 00:07:53.392\nI've got messages, that's my current file.\n\n150\n00:07:53.392 --> 00:07:58.100\nBut then I've got messages-20170807, and\n\n151\n00:07:58.100 --> 00:08:03.224\nmessages-2017-0815 It\nlooks like once a week.\n\n152\n00:08:03.224 --> 00:08:07.280\nOnce a week it's splitting\nthese off into a separate file.\n\n153\n00:08:07.280 --> 00:08:10.197\nSo this would be the week of August 15th.\n\n154\n00:08:10.197 --> 00:08:12.370\nThis other one would be\nthe week of August 7th.\n\n155\n00:08:12.370 --> 00:08:16.040\nAnd then I've got this one,\nwhich is my current week that I'm in.\n\n156\n00:08:16.040 --> 00:08:17.400\nSo it's splitting these off.\n\n157\n00:08:17.400 --> 00:08:19.710\nWell it's gonna keep these.\n\n158\n00:08:19.710 --> 00:08:21.290\nHow long is it gonna keep them?\n\n159\n00:08:21.290 --> 00:08:24.460\nNot forever, If it keeps them forever\nthe log files grow grow and grow and\n\n160\n00:08:24.460 --> 00:08:25.800\neventually they fill the hard drive.\n\n161\n00:08:25.800 --> 00:08:26.990\nAnd then what happens?\n\n162\n00:08:26.990 --> 00:08:30.381\nWell usually your system freezes or\nsomething bad happens when it gets full.\n\n163\n00:08:30.381 --> 00:08:31.665\nIt depends on how your\npartitioning is set up.\n\n164\n00:08:31.665 --> 00:08:34.259\nBut we don't want that to happen and so\n\n165\n00:08:34.259 --> 00:08:39.287\nthe log rotation will oftentimes have\na maximum interval, like a maximum\n\n166\n00:08:39.287 --> 00:08:43.933\namount of logs it'll maintain,\nand then it starts deleting logs.\n\n167\n00:08:43.933 --> 00:08:46.024\nNow, you need to look at\nyour security policy and\n\n168\n00:08:46.024 --> 00:08:48.760\nsay how long do I actually\nhave to retain this?\n\n169\n00:08:48.760 --> 00:08:50.110\nIn high security environments,\n\n170\n00:08:50.110 --> 00:08:53.300\nenvironments where you're handling\nthings like patient medical records or\n\n171\n00:08:53.300 --> 00:08:57.620\nfinancial records, you might be\nrequired to retain data for ten years.\n\n172\n00:08:57.620 --> 00:08:58.950\nAnd so, if that's the case,\n\n173\n00:08:58.950 --> 00:09:02.400\nI can't have log rotate deleting\nlogs after eight weeks.\n\n174\n00:09:02.400 --> 00:09:04.060\nI need to customize that.\n\n175\n00:09:04.060 --> 00:09:05.780\nSo this is one of the first\nthings that I'll jump in and\n\n176\n00:09:05.780 --> 00:09:09.920\ncustomize on a server deployment,\nis how log rotation is being handled.\n\n177\n00:09:09.920 --> 00:09:13.970\nAnd it's all kind of tucked\naway in a simple file.\n\n178\n00:09:13.970 --> 00:09:18.668\nIf you go into slash etc and look you'll\nfind two things of interest, one is\n\n179\n00:09:18.668 --> 00:09:23.215\nLogrotate.com, and the other one was\nLogrotate.d, which is actually a folder.\n\n180\n00:09:23.215 --> 00:09:27.640\nAll right, Logrotate.com it used to\nbe that this one file controlled\n\n181\n00:09:27.640 --> 00:09:31.363\nlog rotational all by itself,\nnow it includes configuration files from\n\n182\n00:09:31.363 --> 00:09:34.455\ninside of LogRotate.D\nin that folder as well.\n\n183\n00:09:34.455 --> 00:09:38.005\nBut if we take a look at that\nLogRotate.com,I'm just gonna edit that,\n\n184\n00:09:39.491 --> 00:09:44.246\nAnd pull that up, okay, right here I\ncan see the standard log rotation,and\n\n185\n00:09:44.246 --> 00:09:48.615\nremember how I guessed mine was set for\nweekly cuz of those dates?\n\n186\n00:09:48.615 --> 00:09:52.580\nSure enough, right here, I want to\nrotate these log files weekly and\n\n187\n00:09:52.580 --> 00:09:54.300\nyou can change this,\nit actually takes plain English.\n\n188\n00:09:54.300 --> 00:09:56.568\nYou can say daily, monthly, yearly.\n\n189\n00:09:56.568 --> 00:09:58.536\nYou can actually just put\nthose values in here.\n\n190\n00:09:58.536 --> 00:10:01.462\nAnd they're telling you to pull up\nthe log rotate manual command for\n\n191\n00:10:01.462 --> 00:10:04.670\ndetails on all this,\ncuz there are a lot of other options, too.\n\n192\n00:10:04.670 --> 00:10:09.760\nBut right now, the default is weekly and\nthen keep four week's worth of backlogs.\n\n193\n00:10:09.760 --> 00:10:13.260\nSo what's gonna happen in four weeks?\n\n194\n00:10:13.260 --> 00:10:18.550\nIn four weeks it's gonna delete the old\nlist backlog to make room for a new one.\n\n195\n00:10:18.550 --> 00:10:22.408\nSo I've only got only four weeks of Sys\nlog if my security policy says I need\n\n196\n00:10:22.408 --> 00:10:24.349\nto maintain this data for ten years.\n\n197\n00:10:24.349 --> 00:10:28.792\nI've got two options, okay,\noption one is to increase this right,\n\n198\n00:10:28.792 --> 00:10:31.870\nincrease it to a higher\nnumber maybe ten years.\n\n199\n00:10:31.870 --> 00:10:33.319\nBut again,\nI don't wanna fill up my hard drive.\n\n200\n00:10:33.319 --> 00:10:35.970\nBut whatever it needs to be,\nI can increase it.\n\n201\n00:10:35.970 --> 00:10:38.990\nOr, option two, I can set up\n\n202\n00:10:38.990 --> 00:10:43.890\na manual backup plan that says I'm gonna\nback up these log files somewhere else.\n\n203\n00:10:43.890 --> 00:10:46.630\nAnd that way, I don't care if they get\ndeleted here after only four weeks cuz\n\n204\n00:10:46.630 --> 00:10:48.200\nI've got them backed up somewhere else.\n\n205\n00:10:48.200 --> 00:10:51.620\nSo we need to be aware of\nthat kind of balance, of\n\n206\n00:10:51.620 --> 00:10:55.730\nhow many logs I wanna keep on the server\nversus backing them up somewhere else.\n\n207\n00:10:55.730 --> 00:10:57.560\nAnd you really wanna back then\nup somewhere else anyway,\n\n208\n00:10:57.560 --> 00:10:59.620\nso that's often times what we're gonna do.\n\n209\n00:10:59.620 --> 00:11:03.683\nBut you can set that value right here\njust by modifying these two values,\n\n210\n00:11:03.683 --> 00:11:08.097\nwhether it's gonna be weekly, and\nhow many you'll store as far as rotation.\n\n211\n00:11:08.097 --> 00:11:12.790\nThose are kinda two important\nthings to get set in there.\n\n212\n00:11:12.790 --> 00:11:17.995\nIf you set rotate to zero\nthen it will never maintain\n\n213\n00:11:17.995 --> 00:11:23.091\nsecondary logs,\nit will just keep them forever.\n\n214\n00:11:23.091 --> 00:11:25.918\nAnd you might want that you might\nwant to keep them forever but\n\n215\n00:11:25.918 --> 00:11:28.868\nit's really difficult to back that up and\nstart over and so on.\n\n216\n00:11:28.868 --> 00:11:31.912\nIf you're doing that so you usually\nwant to have that at least be rotate\n\n217\n00:11:31.912 --> 00:11:34.150\none to create that second file for\nyou to back it up.\n\n218\n00:11:34.150 --> 00:11:37.930\nYou can disable log rotate it's not\na great idea cuz what will happen is your\n\n219\n00:11:37.930 --> 00:11:40.570\nlog file just grow and grow and\ngrow eventually get so\n\n220\n00:11:40.570 --> 00:11:43.150\nbig that sys log has problems\ntracking in memory and\n\n221\n00:11:43.150 --> 00:11:46.510\nworking with it it's just kind\nof becomes a bit of a burden.\n\n222\n00:11:46.510 --> 00:11:48.280\nSo we don't normally want that but\n\n223\n00:11:48.280 --> 00:11:51.100\nthen there's other settings in here\nyou can tweak with if you need to.\n\n224\n00:11:51.100 --> 00:11:53.528\nWhere these are stored and the permissions\nthat are set on it and so on.\n\n225\n00:11:53.528 --> 00:11:57.150\nBut usually all we care about\nare these first two options.\n\n226\n00:11:57.150 --> 00:12:00.260\nSo you'll wanna customize those to\nmatch whatever the security policy for\n\n227\n00:12:00.260 --> 00:12:01.150\nyour company is.\n\n228\n00:12:01.150 --> 00:12:04.176\n&gt;&gt; So Don, can these logs be\ntampered with or deleted?\n\n229\n00:12:04.176 --> 00:12:06.440\n&gt;&gt; That's the big challenge, right?\n\n230\n00:12:06.440 --> 00:12:11.121\nNormally, in a perfect world we'd say no,\nthat hey, it's owned by root,\n\n231\n00:12:11.121 --> 00:12:15.523\nthe root user is the only person who\nhas read and write access to it so no.\n\n232\n00:12:15.523 --> 00:12:17.227\nAll the other users credentials,\n\n233\n00:12:17.227 --> 00:12:20.464\nall the other services they can't\ngo on modify this, I'm fine.\n\n234\n00:12:20.464 --> 00:12:23.311\n&gt;&gt; [LAUGH]\n&gt;&gt; You're fine until somebody finds\n\n235\n00:12:23.311 --> 00:12:27.220\nan exploit that lets them\nperform activities as Root.\n\n236\n00:12:27.220 --> 00:12:30.500\nIf I'm the Root user, I can go in and\nI can mess with these files.\n\n237\n00:12:30.500 --> 00:12:32.620\nSo I can edit the file.\n\n238\n00:12:32.620 --> 00:12:34.960\nI can delete the file,\njust get rid of it, right?\n\n239\n00:12:34.960 --> 00:12:35.930\nIt really doesn't like that, but\n\n240\n00:12:35.930 --> 00:12:39.240\nyou can do it, and ultimately\nit'll just create a new blank one.\n\n241\n00:12:39.240 --> 00:12:42.330\nAnd so if I don't know that happened,\nI might come in and\n\n242\n00:12:42.330 --> 00:12:44.900\nI look at the log file and\nI'm like, well that's really odd.\n\n243\n00:12:44.900 --> 00:12:46.630\nThe log file just starts at 10 AM.\n\n244\n00:12:46.630 --> 00:12:49.570\nWhat happened to all\nthe stuff before 10 AM?\n\n245\n00:12:49.570 --> 00:12:51.180\nIt's just gone, right?\n\n246\n00:12:51.180 --> 00:12:53.374\nThe hacker could have gone in there and\nremoved that or\n\n247\n00:12:53.374 --> 00:12:56.219\nwhoever it is that gained that access\ncould have gone and removed it.\n\n248\n00:12:56.219 --> 00:13:00.347\nThat can certainly happen if they can\ngain access to the root credentials, so\n\n249\n00:13:00.347 --> 00:13:03.093\nour real protection here\nis not file permissions.\n\n250\n00:13:03.093 --> 00:13:06.990\nIt's not auditing, It's not\nsomething we do here on the system.\n\n251\n00:13:06.990 --> 00:13:08.360\nOur real protection is saying,\n\n252\n00:13:08.360 --> 00:13:12.650\nyou know what, I'm not gonna store the\nsyslog just right here on this machine.\n\n253\n00:13:12.650 --> 00:13:17.000\nI wanna ship a copy of them\nsomewhere else, right?\n\n254\n00:13:17.000 --> 00:13:21.062\nAnd that's really the best solution\nbecause then even if a hacker gets in here\n\n255\n00:13:21.062 --> 00:13:25.063\nand erases the logs completely I've\nalready got a backup storage somewhere\n\n256\n00:13:25.063 --> 00:13:26.330\nelse that I can pull up.\n\n257\n00:13:26.330 --> 00:13:27.615\nAnd I can look at, so\n\n258\n00:13:27.615 --> 00:13:32.615\nin your environment it is really important\nif you haven't done this already,\n\n259\n00:13:32.615 --> 00:13:37.990\nto setup a centralized sys log server and\nthere's two main reasons for this.\n\n260\n00:13:37.990 --> 00:13:42.256\nOne all your logs go to one place, so when\nyou're troubleshooting, you can parse all\n\n261\n00:13:42.256 --> 00:13:46.776\nyour logs right there in this centralized\nlocation, if you've got 1,000 servers.\n\n262\n00:13:46.776 --> 00:13:48.972\nYou don't want to go and\nlook at a 1000 logs,\n\n263\n00:13:48.972 --> 00:13:52.202\nso wouldn't it be nice if they were\nall in one place that's reason one.\n\n264\n00:13:52.202 --> 00:13:56.356\nReason two is on that centralized sys log\nserver I can have tones of storage, and\n\n265\n00:13:56.356 --> 00:13:58.940\nI can keep years worth of syslog.\n\n266\n00:13:58.940 --> 00:14:00.590\nWell just having one or\n\n267\n00:14:00.590 --> 00:14:04.880\ntwo weeks of syslogs on each individual\nserver right the centralized servers\n\n268\n00:14:04.880 --> 00:14:07.840\nserving that purpose of\nmaintaining long amounts of data.\n\n269\n00:14:07.840 --> 00:14:10.450\nAnd my individual machine\ndon't have to worry about it.\n\n270\n00:14:10.450 --> 00:14:12.810\nSo it's two big reasons right there.\n\n271\n00:14:12.810 --> 00:14:16.930\nBut ultimately the main protection is if\nsomebody completely erases the sys log on\n\n272\n00:14:16.930 --> 00:14:22.000\na server, I can go to centralized server\nand it's already got a copy right?\n\n273\n00:14:22.000 --> 00:14:26.640\nWhen we deploy sys log we're not actually\ndeploying sys log anymore we're deploying\n\n274\n00:14:26.640 --> 00:14:28.580\nour sys log and they are different.\n\n275\n00:14:28.580 --> 00:14:33.180\nWay back at the beginning of the show\nwhen I pulled up the process, hang on,\n\n276\n00:14:33.180 --> 00:14:38.320\nlet me just, well I did a PS AUX and\n\n277\n00:14:38.320 --> 00:14:41.730\nI grabbed for sys log, right?\n\n278\n00:14:41.730 --> 00:14:47.438\nThe process that came up wasn't sys log d,\nit was r sys log d.\n\n279\n00:14:47.438 --> 00:14:53.080\nOkay, the original sys log was the system\nlog for creating a local log file.\n\n280\n00:14:53.080 --> 00:14:59.270\nAnd then they develop a replacement for\nit called remote syslog or rsyslog.\n\n281\n00:14:59.270 --> 00:15:04.362\nAnd remote syslog supports logging to the\nlocal server as well as remote servers.\n\n282\n00:15:04.362 --> 00:15:08.604\nAnd when I say that I'm running syslog,\nI'm actually not, I'm actually running\n\n283\n00:15:08.604 --> 00:15:12.317\nrsyslog and every distro out there,\nthis happened back in the 80's.\n\n284\n00:15:12.317 --> 00:15:14.690\nSo, it was a long,\nlong time ago this change happened.\n\n285\n00:15:14.690 --> 00:15:18.610\nSo, most of us are actually running\nrsyslog and we can configure it to say,\n\n286\n00:15:18.610 --> 00:15:22.095\nhey, when a log message is generated,\ndon't just store it here,\n\n287\n00:15:22.095 --> 00:15:24.357\nalso store it over in this other location.\n\n288\n00:15:24.357 --> 00:15:26.600\nNow we do want to store in both all right?\n\n289\n00:15:26.600 --> 00:15:27.770\nThere's reasons for that.\n\n290\n00:15:27.770 --> 00:15:29.670\nYou don't want to say just\nstore everything remote.\n\n291\n00:15:29.670 --> 00:15:31.110\nYou can, you can tell it to do that, but\n\n292\n00:15:31.110 --> 00:15:34.420\nyou don't want to and the reason is what\nhappens if the network is not available?\n\n293\n00:15:35.440 --> 00:15:38.840\nWhat happens if a hacker manages\nto block that network interface?\n\n294\n00:15:38.840 --> 00:15:42.120\nIf they've gained root access,\nthey can modify the software firewall.\n\n295\n00:15:42.120 --> 00:15:45.360\nSo they could stop\noutbound syslog messages.\n\n296\n00:15:45.360 --> 00:15:49.315\nAnd you're not logging locally, and\nso now syslog's effectively done.\n\n297\n00:15:49.315 --> 00:15:51.932\nNow hopefully you'll notice it,\nif they're tampering with the firewall,\n\n298\n00:15:51.932 --> 00:15:53.268\nyour system should alert you for that.\n\n299\n00:15:53.268 --> 00:15:57.384\nBut if you don't,\nyou need to be logging in both places and\n\n300\n00:15:57.384 --> 00:16:01.087\nthe other reasons if\nthe networks just unreliable.\n\n301\n00:16:01.087 --> 00:16:02.913\nIf the network goes down it comes back up,\n\n302\n00:16:02.913 --> 00:16:06.318\nour syslog can actually queue those\nmessages up and send them after the fact.\n\n303\n00:16:06.318 --> 00:16:10.238\nSo we wanna make sure that we get\nthis setup to be able to log to both,\n\n304\n00:16:10.238 --> 00:16:11.870\nlocally and remote.\n\n305\n00:16:11.870 --> 00:16:14.850\nAnd our syslog will let us do that.\n\n306\n00:16:14.850 --> 00:16:18.170\nIt's not configured by default,\nbut we've gotta get a set up.\n\n307\n00:16:18.170 --> 00:16:20.860\nAnd you need to do this on\nyour centralized server,\n\n308\n00:16:20.860 --> 00:16:22.820\nas well as each of the nodes\nthat are gonna be sending to it.\n\n309\n00:16:22.820 --> 00:16:25.040\nSo there's really two different\nconfigurations here, right, the sender and\n\n310\n00:16:25.040 --> 00:16:25.980\nthe recipient.\n\n311\n00:16:25.980 --> 00:16:29.540\nThe recipient we just do on\nour centralized syslog server,\n\n312\n00:16:29.540 --> 00:16:32.080\nwhich can be any Linux\nserver that you've got.\n\n313\n00:16:32.080 --> 00:16:36.930\nIf it runs our syslog, our syslog can act\nas a server or as a client, it does both.\n\n314\n00:16:36.930 --> 00:16:38.850\nSo it's not like we have\nto install anything extra.\n\n315\n00:16:38.850 --> 00:16:40.810\nWe just have to configure it, okay?\n\n316\n00:16:40.810 --> 00:16:46.370\nSo let's walk through that process\nof what it takes to get this set up.\n\n317\n00:16:46.370 --> 00:16:50.340\nIf I wanna configure for example,\nwe'll start with the receiver,\n\n318\n00:16:50.340 --> 00:16:53.980\nlet's say I wanna make this\nserver my centralized server.\n\n319\n00:16:53.980 --> 00:17:00.809\nWhat I'm gonna do is I'm gonna\nedit /etc/rsyslog.com, okay?\n\n320\n00:17:00.809 --> 00:17:06.000\nNow I'm gonna go into this file right\nhere, so that was /etc/rsyslog.com.\n\n321\n00:17:06.000 --> 00:17:09.980\nAnd when you look, you'll see a lot of\nmodules and other things that are loaded.\n\n322\n00:17:09.980 --> 00:17:12.130\nWell, are sort of loaded.\n\n323\n00:17:12.130 --> 00:17:13.850\nEverything in here is commented out,\nright?\n\n324\n00:17:13.850 --> 00:17:15.400\nIf you look at this file,\n\n325\n00:17:15.400 --> 00:17:19.080\nalmost every line has a pound\nsymbol at the beginning of it.\n\n326\n00:17:19.080 --> 00:17:22.220\nThe only lines that don't are things like\nsome of these modules that are loading\n\n327\n00:17:22.220 --> 00:17:25.920\nup here, and down where you\nspecify a work directory, right?\n\n328\n00:17:25.920 --> 00:17:30.920\nBut the network stuff, see here, where\nit says, Provides UDP syslog reception,\n\n329\n00:17:30.920 --> 00:17:35.090\nand provides TCP syslog reception,\nthese are all commented out, right?\n\n330\n00:17:35.090 --> 00:17:39.010\nThis is what would turn my\nsystem into a syslog server,\n\n331\n00:17:39.010 --> 00:17:41.850\none that can receive syslog messages.\n\n332\n00:17:41.850 --> 00:17:44.450\nSo I would take a centralized\nserver somewhere, or\n\n333\n00:17:44.450 --> 00:17:47.360\nit could be a work station, it could\nbe a virtual machine, it just needs to\n\n334\n00:17:47.360 --> 00:17:50.570\nbe somebody that's got the storage\nto be able to hold all this stuff.\n\n335\n00:17:50.570 --> 00:17:51.830\nAnd we can come in here, and\n\n336\n00:17:51.830 --> 00:17:54.677\nwe can turn these on by removing\nthe comment marks, okay.\n\n337\n00:17:56.490 --> 00:17:59.347\nAnd so we pick what we wanna use,\nI usually use TCP, but\n\n338\n00:17:59.347 --> 00:18:01.150\nyou can use UDP if you want.\n\n339\n00:18:01.150 --> 00:18:06.460\nAnd so I'm going to just modify this file,\nand I'm gonna tell it to load the module,\n\n340\n00:18:06.460 --> 00:18:10.830\nimtcp, and then input TCPServerRun 514.\n\n341\n00:18:10.830 --> 00:18:15.520\nThat means TCP port 514\nis now listening from\n\n342\n00:18:15.520 --> 00:18:18.480\nmessages coming in from other people,\nright?\n\n343\n00:18:18.480 --> 00:18:21.670\nAnd I can use the software\nfirewall on the server to restrict\n\n344\n00:18:21.670 --> 00:18:25.580\nwho is allowed to contact me, and so\nyou can restrict at your own service\n\n345\n00:18:25.580 --> 00:18:27.680\ncuz you don't want people sending\nfalse messages in, right?\n\n346\n00:18:27.680 --> 00:18:30.180\nI could forward a syslog message and\nthrow it at the server,\n\n347\n00:18:30.180 --> 00:18:33.040\nbecause syslog doesn't do authentication.\n\n348\n00:18:33.040 --> 00:18:36.980\nBut if I use a firewall, I can start\nto restrict that based on source ip or\n\n349\n00:18:36.980 --> 00:18:38.350\nother criteria.\n\n350\n00:18:38.350 --> 00:18:41.720\nI've seen people in high\nsecurity environments,\n\n351\n00:18:41.720 --> 00:18:46.680\nwhere they make this port blocked off\nunless your coming in over an SSH tunnel.\n\n352\n00:18:46.680 --> 00:18:51.120\nSo they build SSH tunnel from the nodes so\nthat it authenticates.\n\n353\n00:18:51.120 --> 00:18:54.250\nAnd once it authenticates then they can\nforward the syslog messages across and\n\n354\n00:18:54.250 --> 00:18:54.875\nencrypted tunnel.\n\n355\n00:18:54.875 --> 00:18:56.022\nTwo benefits there, right.\n\n356\n00:18:56.022 --> 00:18:59.513\nOne, you get authentication so you know\nit's a legitimate message, and two,\n\n357\n00:18:59.513 --> 00:19:01.160\nyou get encrypted communication.\n\n358\n00:19:01.160 --> 00:19:05.554\nSo we're gonna do another episode\non SSH tunnels in this series,\n\n359\n00:19:05.554 --> 00:19:06.970\nit's just we haven't filmed it yet.\n\n360\n00:19:06.970 --> 00:19:09.320\nSo we'll get a chance to see that, but\n\n361\n00:19:09.320 --> 00:19:11.750\nthat's if we want even more\nsecurity on top of this.\n\n362\n00:19:11.750 --> 00:19:13.040\nBut that's gonna enable it.\n\n363\n00:19:13.040 --> 00:19:16.310\nI can enable, both TCP, and\nUDP, if I wanna go that route.\n\n364\n00:19:16.310 --> 00:19:19.620\nBut normally, I like TCP, cuz if\nthe package gets damaged in transit,\n\n365\n00:19:19.620 --> 00:19:24.320\nit will retransmit it, UDP won't, so\na little bit more reliable on us.\n\n366\n00:19:24.320 --> 00:19:28.190\nBut we can enable that, and\nnow that's really done.\n\n367\n00:19:28.190 --> 00:19:32.270\nIf I restart our syslog my\ncentral server's now listening.\n\n368\n00:19:32.270 --> 00:19:35.590\nI'll need to open up port 514\non my firewall if I've got it.\n\n369\n00:19:35.590 --> 00:19:42.820\nSo for example, I would say\nfirewall-cmd--permanent--add-service.\n\n370\n00:19:42.820 --> 00:19:43.895\nOops, I gotta spell that right.\n\n371\n00:19:43.895 --> 00:19:49.427\nAnd then = syslog,\n\n372\n00:19:49.427 --> 00:19:52.530\nso that I allow the syslog\ncommunication to come through.\n\n373\n00:19:52.530 --> 00:19:56.440\nAnd if I want that to actually take effect\nI give it permanent and there we go.\n\n374\n00:19:56.440 --> 00:19:58.620\nAll right,\nnow I'm allowing the traffic to build and\n\n375\n00:19:58.620 --> 00:20:03.070\ncompletely get to me but I'm now set up\nhours as I centralized syslog server.\n\n376\n00:20:03.070 --> 00:20:06.176\nAs now I can go all my other\nmillions that were out there and\n\n377\n00:20:06.176 --> 00:20:09.500\nI could tell them to send\ntheir syslogs right here.\n\n378\n00:20:09.500 --> 00:20:12.500\nAnd I do that a little bit different.\n\n379\n00:20:12.500 --> 00:20:16.580\nI go into that rsyslog.com\nfile where I just was right,\n\n380\n00:20:16.580 --> 00:20:20.230\nso the same file I did on the server\nI would do on the client.\n\n381\n00:20:20.230 --> 00:20:24.650\nAnd instead of configuring this server,\nif you keep scrolling down you'll find\n\n382\n00:20:24.650 --> 00:20:29.980\na section down towards the bottom where\nit talks about sending logs remote.\n\n383\n00:20:29.980 --> 00:20:33.730\nNow as I'm scrolling down you\nhit this rules section, and\n\n384\n00:20:33.730 --> 00:20:36.070\nthe rules section is dictating\nwhere these log messages go.\n\n385\n00:20:36.070 --> 00:20:41.010\nAnd you'll see things like authorization,\nor authentication privileges, right.\n\n386\n00:20:41.010 --> 00:20:42.860\nActually it is authorization privileges.\n\n387\n00:20:42.860 --> 00:20:44.760\nSo here it's saying off priv.\n\n388\n00:20:44.760 --> 00:20:48.672\nWhen there's an off priv message\ngenerated instead of putting it in\n\n389\n00:20:48.672 --> 00:20:52.690\n/var/log/messages, it's\nputting it in /var/log/secure.\n\n390\n00:20:52.690 --> 00:20:54.290\nIt's sending it to a different spot.\n\n391\n00:20:54.290 --> 00:20:57.680\nSo this is where we can\nredirect our log messages and\n\n392\n00:20:57.680 --> 00:21:01.834\nyou'll see like the main entry\nhere start.info mail.none,\n\n393\n00:21:01.834 --> 00:21:07.510\nauthpriv.none cron.none all these\nguys are going to /var/log/messages.\n\n394\n00:21:07.510 --> 00:21:09.880\nBut we can redirect to other places.\n\n395\n00:21:09.880 --> 00:21:12.840\nAnd you can redirect to\nmore than one place.\n\n396\n00:21:12.840 --> 00:21:14.970\nAnd as you get down towards the bottom,\n\n397\n00:21:14.970 --> 00:21:18.790\nyou'll see the example of\ndoing a network redirect.\n\n398\n00:21:18.790 --> 00:21:22.300\nAnd for the network redirect,\nwe need to pick what we wanna redirect.\n\n399\n00:21:22.300 --> 00:21:23.610\nWe don't have to redirect everything.\n\n400\n00:21:23.610 --> 00:21:26.890\nYou can redirect individual\ntypes of messages if you want.\n\n401\n00:21:26.890 --> 00:21:29.570\nBut if you want everything\nwhich is normally what I do.\n\n402\n00:21:29.570 --> 00:21:33.070\nWhat you'll say is star.star.\n\n403\n00:21:33.070 --> 00:21:35.740\nThe first star means every service.\n\n404\n00:21:35.740 --> 00:21:41.050\nAnd the second star means every message\ntype inside of that service, right?\n\n405\n00:21:41.050 --> 00:21:42.380\nSo you're doing kinda category.\n\n406\n00:21:42.380 --> 00:21:43.690\nSome services have that.\n\n407\n00:21:43.690 --> 00:21:46.530\nThey'll have mail.info, mail.alert.\n\n408\n00:21:46.530 --> 00:21:48.530\nWell, this one's gonna get all of it.\n\n409\n00:21:48.530 --> 00:21:50.896\nIt'll get mail because of the first starr,\nand then alert and\n\n410\n00:21:50.896 --> 00:21:52.502\ninfo because of the second star.\n\n411\n00:21:52.502 --> 00:21:57.310\nSo I'm saying take every message and\nI wanna send it to a remote host.\n\n412\n00:21:57.310 --> 00:22:00.710\nAnd the remote host,\nyou can just specify by saying @@ and\n\n413\n00:22:00.710 --> 00:22:05.586\nthen the IP address of that host,\nso mine is 172.16.0.100.\n\n414\n00:22:05.586 --> 00:22:08.870\nAnd then we follow that\nup with a port number.\n\n415\n00:22:08.870 --> 00:22:10.760\nAnd you see the example right here,\nit's the same thing.\n\n416\n00:22:10.760 --> 00:22:12.556\nYou can do a host name if you want.\n\n417\n00:22:12.556 --> 00:22:15.950\nI generally don't do host names on this\nbecause I don't want to be dependent on\n\n418\n00:22:15.950 --> 00:22:16.670\nother services.\n\n419\n00:22:16.670 --> 00:22:20.170\nI don't wanna be dependent on DNS\nworking in order for this to work, so\n\n420\n00:22:20.170 --> 00:22:21.830\nI usually do an IP.\n\n421\n00:22:21.830 --> 00:22:25.600\nBut that's going to tell it,\nI wanna redirect everything, and\n\n422\n00:22:25.600 --> 00:22:29.250\nsend it right over to there and\nget that information communicated over.\n\n423\n00:22:29.250 --> 00:22:33.470\nNotice up here, for\nremote logging it says, we use TCP for\n\n424\n00:22:33.470 --> 00:22:35.840\nreliable delivery, right.\n\n425\n00:22:35.840 --> 00:22:39.491\nIf I had enabled UDP earlier,\nthis is defaulting to TCP.\n\n426\n00:22:39.491 --> 00:22:42.810\nSo I would need to override\nthat to tell it to use UDP.\n\n427\n00:22:42.810 --> 00:22:45.522\nTCP is the default, that's normally what\nwe want and that's what I've turned on.\n\n428\n00:22:45.522 --> 00:22:49.231\nAnd so with that in place, now,\nwhenever I generate a log message,\n\n429\n00:22:49.231 --> 00:22:51.890\nI'm gonna send it to that server, right.\n\n430\n00:22:51.890 --> 00:22:56.790\nAnd get it kinda placed in there and\nnow I've got this centralized log system.\n\n431\n00:22:56.790 --> 00:23:01.243\nAnd the nice part is it's sending\nthose log messages to two places.\n\n432\n00:23:01.243 --> 00:23:06.876\nI left all the other entries alone that go\nto /var/log/messages, I added this entry.\n\n433\n00:23:06.876 --> 00:23:10.976\nSo now if somebody blows it away\n/var/log/messages or modifies or\n\n434\n00:23:10.976 --> 00:23:12.752\ntampers with it, I'm fine.\n\n435\n00:23:12.752 --> 00:23:15.574\nBecause when those\nmessages were generated,\n\n436\n00:23:15.574 --> 00:23:18.940\na simultaneous copy was\nsent over to this server.\n\n437\n00:23:18.940 --> 00:23:20.460\nSo when I go to that server and\n\n438\n00:23:20.460 --> 00:23:24.540\nlook, it's going to have those\nlog messages right in there and\n\n439\n00:23:24.540 --> 00:23:28.270\nI know they haven't been tampered with,\nunless my log server's been broken into.\n\n440\n00:23:28.270 --> 00:23:30.880\nAnd so we need to make sure we've\nhardened that log server and\n\n441\n00:23:30.880 --> 00:23:34.040\nsecured it properly and\napplied proper practices there.\n\n442\n00:23:34.040 --> 00:23:39.580\nBut otherwise, that one's in business and\nit is up and doing shop.\n\n443\n00:23:39.580 --> 00:23:43.310\nNow, I do need to restart our syslog for\nit to read all that and kick in, but\n\n444\n00:23:43.310 --> 00:23:45.440\nnow it's sending that traffic over and\n\n445\n00:23:45.440 --> 00:23:49.270\nI've got a secure logging facility\nset up that is nice and centralized.\n\n446\n00:23:49.270 --> 00:23:52.765\n&gt;&gt; Well, are there any other\nthings to consider with syslog?\n\n447\n00:23:52.765 --> 00:23:55.840\nThere's a couple of things we definitely\nneed to set up a backup strategy.\n\n448\n00:23:55.840 --> 00:23:58.820\nI've got this great\ncentralized server now, and\n\n449\n00:23:58.820 --> 00:24:01.430\nI'm letting my nodes age\nout logs after four weeks.\n\n450\n00:24:01.430 --> 00:24:04.240\nSo my nodes only go back four weeks,\nthat's probably not long enough.\n\n451\n00:24:04.240 --> 00:24:05.360\nOn my centralized server,\n\n452\n00:24:05.360 --> 00:24:08.340\nI need a backup regimen put in\nplace to be able to contain that.\n\n453\n00:24:08.340 --> 00:24:09.800\nSo that's one thing to think about.\n\n454\n00:24:09.800 --> 00:24:10.890\nThe other thing is,\n\n455\n00:24:10.890 --> 00:24:16.090\nthe more nodes you have, the harder it\ngets to find records in these messages.\n\n456\n00:24:16.090 --> 00:24:18.002\nThe messages files are just text files.\n\n457\n00:24:18.002 --> 00:24:21.890\nIf it's millions of lines long and\nyou've gotta search through it for\n\n458\n00:24:21.890 --> 00:24:26.205\nentries, you have to load the file into\nmemory, and it really is kind of a pain.\n\n459\n00:24:26.205 --> 00:24:29.255\nSo if you go out there and\ndig through the documentation,\n\n460\n00:24:29.255 --> 00:24:33.930\nyou'll actually find where syslog\ndoesn't have to log to a text file.\n\n461\n00:24:33.930 --> 00:24:38.020\nYou can set it up to log to a MySQL or\nMariaDB Server.\n\n462\n00:24:38.020 --> 00:24:41.520\nAnd if you do that,\nif you have it log into a database server,\n\n463\n00:24:41.520 --> 00:24:44.920\nthen it becomes trivial to go in and\nfind records.\n\n464\n00:24:44.920 --> 00:24:48.740\nI could just say take\na look at my whole network.\n\n465\n00:24:48.740 --> 00:24:51.010\nI might have thousands of servers.\n\n466\n00:24:51.010 --> 00:24:54.560\nAnd say, show me every time\nthis IP address connected or\n\n467\n00:24:54.560 --> 00:24:58.810\na IP address in the logs and it could\nscan that database very quickly and\n\n468\n00:24:58.810 --> 00:25:01.810\nreturn it, and now you get that data,\nthe much more manageable environment.\n\n469\n00:25:01.810 --> 00:25:04.020\nSo the larger a network you have,\n\n470\n00:25:04.020 --> 00:25:07.050\nthe more likely you'll want to switch\nto doing database backed storage.\n\n471\n00:25:07.050 --> 00:25:08.820\nSo that's something you can look up and\n\n472\n00:25:08.820 --> 00:25:11.180\nsee, maybe one day we'll\nfilm an episode on that one.\n\n473\n00:25:11.180 --> 00:25:12.790\nIt's actually not that hard to get set up.\n\n474\n00:25:12.790 --> 00:25:13.970\n&gt;&gt; We should.\n\n475\n00:25:13.970 --> 00:25:17.134\n&gt;&gt; But for most of us, the log\nmessages don't get that big, and so\n\n476\n00:25:17.134 --> 00:25:19.000\nyou can kind of manage it right here.\n\n477\n00:25:19.000 --> 00:25:21.086\nBut when you've got thousands\nof servers it does.\n\n478\n00:25:21.086 --> 00:25:24.700\nSo you need some kind of centralized\nsolution, that's a database backed.\n\n479\n00:25:24.700 --> 00:25:27.240\n&gt;&gt; Fantastic, managing logs with syslog.\n\n480\n00:25:27.240 --> 00:25:29.850\nGreat information, final thoughts, Don?\n\n481\n00:25:29.850 --> 00:25:32.510\n&gt;&gt; Main thing here is syslog is\nnot going anywhere anytime soon.\n\n482\n00:25:32.510 --> 00:25:33.920\nSo you definitely wanna learn it.\n\n483\n00:25:33.920 --> 00:25:34.662\nYou definitely wanna know it.\n\n484\n00:25:34.662 --> 00:25:36.360\nYou definitely want to secure it.\n\n485\n00:25:36.360 --> 00:25:40.130\nRemember, it's target number one for\nany hacker that's not an idiot.\n\n486\n00:25:40.130 --> 00:25:44.440\nThat if they know what they're doing, they\nknow they've gotta to cover their tracks.\n\n487\n00:25:44.440 --> 00:25:46.290\nThey'll target the logs first and\n\n488\n00:25:46.290 --> 00:25:49.940\nafter they get past that, then they\nstart going after everything else.\n\n489\n00:25:49.940 --> 00:25:54.580\nSo if we keep our logs secure, a lot of\ntimes that'll stop the attack right there\n\n490\n00:25:54.580 --> 00:25:57.020\nand they don't progress to\nthe rest of the payload.\n\n491\n00:25:57.020 --> 00:25:59.791\n&gt;&gt; Now, we gotta watch for\nthe bad actors and that's why we're doing\n\n492\n00:25:59.791 --> 00:26:02.530\nthis episode and all the episodes\nof Linux security techniques.\n\n493\n00:26:02.530 --> 00:26:05.370\nMake sure you watch all of them and\nyou'll be glad you did.\n\n494\n00:26:05.370 --> 00:26:09.510\nAnd thank you for watching ITProTV,\nremember a good IT pro is always learning.\n\n495\n00:26:09.510 --> 00:26:10.590\nI'm Zack Memos.\n\n496\n00:26:10.590 --> 00:26:13.495\n&gt;&gt; And\nI'm Don the bad actor Pezet [LAUGH].\n\n497\n00:26:13.495 --> 00:26:18.993\n&gt;&gt; Sometime, and we'll see you soon.\n\n498\n00:26:18.993 --> 00:26:22.789\n[MUSIC]\n\n499\n00:26:22.789 --> 00:26:25.289\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "230002685"
        },
        {
          "description": "Don and Zach cover the similarities and differences of syslog & journald, journald designed as replacement for syslog, how we interact with journald, where the journald logs are stored, who is allowed access to the logs, journald equivalent to rsyslog, and using rsyslog in production.",
          "length": "2056",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-2-managing_logs_with_journald-081817-PGM.00_34_00_03.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-2-managing_logs_with_journald-081817-PGM.00_34_00_03.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-2-managing_logs_with_journald-081817-PGM.00_34_00_03.Still001-sm.jpg",
          "title": "Managing Logs with journald",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:02.733\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:02.733 --> 00:00:05.810\n&gt;&gt; We're coming at you live\nfrom San Francisco, California.\n\n3\n00:00:05.810 --> 00:00:06.469\n&gt;&gt; [CROSSTALK]\n\n4\n00:00:06.469 --> 00:00:08.413\n[MUSIC]\n\n5\n00:00:08.413 --> 00:00:12.260\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:12.260 --> 00:00:14.720\n&gt;&gt; Hello, and thank you for\nwatching ITProTV.\n\n7\n00:00:14.720 --> 00:00:16.480\nHelping you learn wherever you go.\n\n8\n00:00:16.480 --> 00:00:18.060\nI'm your host Zach Memos.\n\n9\n00:00:18.060 --> 00:00:20.786\nAs we continue with\nLinux Security Techniques,\n\n10\n00:00:20.786 --> 00:00:25.446\nwe're gonna manage logs with journald and\nDon Pezet is gonna tell us how to do that.\n\n11\n00:00:25.446 --> 00:00:26.510\nDon, good morning, Sir.\n\n12\n00:00:26.510 --> 00:00:27.435\n&gt;&gt; Hi, good morning, Zach.\n\n13\n00:00:27.435 --> 00:00:30.547\nAnd we're ready to dive back into\nthe world of Linux security techniques.\n\n14\n00:00:30.547 --> 00:00:33.327\nAnd one thing that I know I've\nmentioned in other episodes\n\n15\n00:00:33.327 --> 00:00:36.333\nis that one of our key security\ntechniques is having log files,\n\n16\n00:00:36.333 --> 00:00:39.410\nbeing able to reference log files,\nread them, view them.\n\n17\n00:00:39.410 --> 00:00:40.920\nThat's a really critical piece.\n\n18\n00:00:40.920 --> 00:00:44.270\nAnd in another episode,\nwe took a look at syslog and the syslogd,\n\n19\n00:00:44.270 --> 00:00:48.036\nwhich is the standard login subsystem\nfound in almost every Linux system that\n\n20\n00:00:48.036 --> 00:00:53.922\nare out there, but a lot of systems\nare now moving over to journald.\n\n21\n00:00:53.922 --> 00:00:55.847\nJournald is the replacement for syslog and\n\n22\n00:00:55.847 --> 00:00:58.474\nit's a part of the system D\npackage that we're seeing it.\n\n23\n00:00:58.474 --> 00:01:01.750\nWe're seeing it in Ubuntu,\nRed Hat, Fedora, Debian,\n\n24\n00:01:01.750 --> 00:01:05.600\nall these different distros have\nmoved kinda in that direction.\n\n25\n00:01:05.600 --> 00:01:09.252\nSo I wanted to make sure we took a little\nbit of time in this series to talk about\n\n26\n00:01:09.252 --> 00:01:10.850\njournald and how it impacts us and\n\n27\n00:01:10.850 --> 00:01:14.126\nhow we need to maintain it to make\nsure that our system stays secure.\n\n28\n00:01:14.126 --> 00:01:16.440\nSo that's what we're gonna be looking\nat right here in this episode.\n\n29\n00:01:16.440 --> 00:01:19.890\n&gt;&gt; Well, Don, at the end of the day,\nisn't it the same with syslog?\n\n30\n00:01:19.890 --> 00:01:21.215\n&gt;&gt; It's pretty darn close, right?\n\n31\n00:01:21.215 --> 00:01:25.791\nSo whenever they develop a new technology,\nthe first goal is to make it replicate\n\n32\n00:01:25.791 --> 00:01:30.350\nthe functionality of the old technology,\nand then you add new stuff to it.\n\n33\n00:01:30.350 --> 00:01:33.610\nSo basically, they said, look,\nsyslog was designed in the 1970s.\n\n34\n00:01:33.610 --> 00:01:38.403\nIt's been around well over 30 years,\nalmost 40 years, probably over 40 years,\n\n35\n00:01:38.403 --> 00:01:38.935\nI guess.\n\n36\n00:01:38.935 --> 00:01:41.360\n[LAUGH] And so,\nit's been around a long time, and\n\n37\n00:01:41.360 --> 00:01:44.188\nthere's things that it\njust doesn't do well.\n\n38\n00:01:44.188 --> 00:01:49.420\nAnd so journald, which the official\nname of it is the System D Journal,\n\n39\n00:01:49.420 --> 00:01:52.550\nbut journald is the service,\nthe journal daemon,\n\n40\n00:01:52.550 --> 00:01:56.780\nthat it tries to fix a lot of\nthe problems that syslog had.\n\n41\n00:01:56.780 --> 00:01:59.677\nAnd when it first came out,\njournald was not very feature rich.\n\n42\n00:01:59.677 --> 00:02:02.990\nIt did not completely replicate\nthe features in syslog.\n\n43\n00:02:02.990 --> 00:02:06.006\nAnd so what happened is a lot\nof distros said, you know what,\n\n44\n00:02:06.006 --> 00:02:07.257\njournald is the future.\n\n45\n00:02:07.257 --> 00:02:11.280\nWe want to go that route,\nbut it's not quite there.\n\n46\n00:02:11.280 --> 00:02:12.800\nSo let's run both.\n\n47\n00:02:12.800 --> 00:02:17.782\nAnd if you install Fedora 24 or\n25 or 26, 26 is the current one,\n\n48\n00:02:17.782 --> 00:02:22.682\nif you install Red Hat Enterprise Linux 7,\nif you install CentOS 7,\n\n49\n00:02:22.682 --> 00:02:25.191\nif you install Ubuntu 16.04.\n\n50\n00:02:25.191 --> 00:02:28.045\nI'm just trying to rattle off what's\ncurrent and supported right now,\n\n51\n00:02:28.045 --> 00:02:29.710\nas of the filming of this episode.\n\n52\n00:02:29.710 --> 00:02:34.500\nIf you install any of those that I just\nnamed, they're all running syslog and\n\n53\n00:02:34.500 --> 00:02:35.983\njournald side by side.\n\n54\n00:02:35.983 --> 00:02:37.140\nThey're running both.\n\n55\n00:02:37.140 --> 00:02:41.530\nAnd so when I wanna look at the logs\nof a system, I can look at either one.\n\n56\n00:02:41.530 --> 00:02:44.420\nI can go to the syslog messages file and\nparse through it and try and\n\n57\n00:02:44.420 --> 00:02:46.940\nfind things or I can go to journald.\n\n58\n00:02:46.940 --> 00:02:50.213\nAnd I'll tell you, for me personally,\nI go to journald because we've got command\n\n59\n00:02:50.213 --> 00:02:52.861\nline utilities that allow us to\nsearch through it and find things.\n\n60\n00:02:52.861 --> 00:02:56.190\nIt's a little bit easier to work with and\nyou get more detailed information in it.\n\n61\n00:02:56.190 --> 00:03:00.210\nBut there are sometimes where\nwe still need syslog hanging in\n\n62\n00:03:00.210 --> 00:03:03.340\nthere cuz there are some features\nthat haven't been fully recreated.\n\n63\n00:03:03.340 --> 00:03:06.927\nBut as soon as we get to that point where\nthere's feature parity between the two,\n\n64\n00:03:06.927 --> 00:03:10.328\nwe'll see distros starting to move over\nto it and we'll see syslog go away.\n\n65\n00:03:10.328 --> 00:03:11.561\nBut that hasn't really happened.\n\n66\n00:03:11.561 --> 00:03:16.070\nAnd so, as of this very moment,\nyeah, they are practically the same.\n\n67\n00:03:16.070 --> 00:03:17.234\nThey are very, very close.\n\n68\n00:03:17.234 --> 00:03:20.231\nBut there are some features that have\nchanged in journald that are nice to have.\n\n69\n00:03:20.231 --> 00:03:23.130\nAnd we'll get a chance to see some\nof those here in this episode.\n\n70\n00:03:23.130 --> 00:03:27.580\nBut, one of the main features that I\nwanna point out, is that, in syslog,\n\n71\n00:03:27.580 --> 00:03:33.190\nall the log messages were stored\nin a text file, /var/log/messages.\n\n72\n00:03:33.190 --> 00:03:36.110\nAnd that file, it's just a text file.\n\n73\n00:03:36.110 --> 00:03:37.810\nSo if somebody could get root privileges,\n\n74\n00:03:37.810 --> 00:03:39.780\nthey could edit it very\neasy with any text editor.\n\n75\n00:03:39.780 --> 00:03:41.769\nGo in there and change whatever they want.\n\n76\n00:03:41.769 --> 00:03:46.050\nWith journald,\nit stores logs as a binary file.\n\n77\n00:03:46.050 --> 00:03:46.570\nIt's a binary.\n\n78\n00:03:46.570 --> 00:03:47.740\nIt's compiled.\n\n79\n00:03:47.740 --> 00:03:49.400\nNot compiled like programming language,\n\n80\n00:03:49.400 --> 00:03:51.440\nbut just kind of compiled\nin their own file format.\n\n81\n00:03:51.440 --> 00:03:53.860\nAnd that way, it can't be modified.\n\n82\n00:03:53.860 --> 00:03:56.900\nYou can't go in and\njust edit an entry inside of this file.\n\n83\n00:03:56.900 --> 00:03:57.870\nYou can clear it.\n\n84\n00:03:57.870 --> 00:04:01.720\nYou can erase it, but you can't tamper\nwith it and that's really nice.\n\n85\n00:04:01.720 --> 00:04:04.190\nThat gives us an extra layer\nof security and improve, but\n\n86\n00:04:04.190 --> 00:04:06.260\nit also gives us improved performance.\n\n87\n00:04:06.260 --> 00:04:09.900\nBecause it is stored in this different\nformat, we have search utilities that can\n\n88\n00:04:09.900 --> 00:04:12.180\nparse right through it and\nget us the information we want.\n\n89\n00:04:12.180 --> 00:04:15.180\nWe can take actions based on\nwhat comes into the logs,\n\n90\n00:04:15.180 --> 00:04:16.390\nand other advanced features.\n\n91\n00:04:16.390 --> 00:04:18.685\nThose are all reasons why we\nwould want to go to journald.\n\n92\n00:04:19.710 --> 00:04:23.926\nIf you say, I hate journald and I'm gonna\nstick with syslog, you will be fine.\n\n93\n00:04:23.926 --> 00:04:27.847\nSyslog is not gonna go anywhere any time\nsoon, it's gonna be around probably for\n\n94\n00:04:27.847 --> 00:04:29.241\nat least another ten years.\n\n95\n00:04:29.241 --> 00:04:32.538\nI mean, this is a big transition to make,\nchanging your logging sub system.\n\n96\n00:04:32.538 --> 00:04:35.290\nSo you're not gonna hurt yourself\nby just staying with syslog.\n\n97\n00:04:35.290 --> 00:04:39.141\nBut there are new features in journald\nthat l think you'll appreciate and\n\n98\n00:04:39.141 --> 00:04:41.635\nso a lot of will start\nmoving in that direction.\n\n99\n00:04:41.635 --> 00:04:44.987\nl already find that l go to journald more\nthan l do to sysog when I'm going and\n\n100\n00:04:44.987 --> 00:04:46.063\nlooking for messages.\n\n101\n00:04:46.063 --> 00:04:48.433\nSo just bear that in mind as\nwe go through this episode,\n\n102\n00:04:48.433 --> 00:04:51.633\nthat it might not be right for everybody\nbut if you choose to use journald,\n\n103\n00:04:51.633 --> 00:04:53.970\nthere's just a few things\nthat we need to be aware of.\n\n104\n00:04:53.970 --> 00:04:59.000\n&gt;&gt; So Don, how do we interact with\njournald if it's in a binary format?\n\n105\n00:04:59.000 --> 00:05:02.235\n&gt;&gt; All right yeah, so\nsince we can't just go and view a file,\n\n106\n00:05:02.235 --> 00:05:04.295\nright, we don't have that option.\n\n107\n00:05:04.295 --> 00:05:06.315\nWe have to use Journalctl, right?\n\n108\n00:05:06.315 --> 00:05:10.130\nJournalctl is the interface and\nhere, I'll pull it up on my system.\n\n109\n00:05:10.130 --> 00:05:12.573\nThis is a Red Hat Enterprise Linux\n7.4 system.\n\n110\n00:05:12.573 --> 00:05:16.069\nAnd actually, I'm gonna switch to\na root shell real quick just so\n\n111\n00:05:16.069 --> 00:05:18.770\nthat I don't have to sudo every command.\n\n112\n00:05:18.770 --> 00:05:21.070\nIn order to have access to the logs,\nyou need to be an administrator.\n\n113\n00:05:21.070 --> 00:05:22.350\nAnd I was logged in as a regular user.\n\n114\n00:05:22.350 --> 00:05:26.119\nSo if I pseudo everything, that would\nwork or I can just move to a root shell.\n\n115\n00:05:26.119 --> 00:05:29.658\nBut [COUGH] if I want to\ntake a look at the logs,\n\n116\n00:05:29.658 --> 00:05:33.220\nI can just type journalctl, that command.\n\n117\n00:05:33.220 --> 00:05:36.040\nWe've got a systemctl for\ninteracting with system D.\n\n118\n00:05:36.040 --> 00:05:40.940\nThen journalctl for interacting with\nthe journald, which is system Ds logs.\n\n119\n00:05:40.940 --> 00:05:43.470\nSo when I run that,\nif I just run it by itself.\n\n120\n00:05:43.470 --> 00:05:45.096\nThere's my logs, right?\n\n121\n00:05:45.096 --> 00:05:47.690\nAnd if you look at what's in here,\n\n122\n00:05:47.690 --> 00:05:53.270\nit's actually gonna look really similar\nto what we would have in syslog.\n\n123\n00:05:53.270 --> 00:05:58.970\nSo for example, let's say I open up\nanother terminal window here and\n\n124\n00:05:58.970 --> 00:06:02.224\nlet me get into that server real quick.\n\n125\n00:06:02.224 --> 00:06:07.319\nI'm just gonna open up another session,\nand get in here.\n\n126\n00:06:07.319 --> 00:06:10.332\nIn the syslog days, I would say, whoops,\n\n127\n00:06:10.332 --> 00:06:13.780\nI would punch in my password,\nis what I would do.\n\n128\n00:06:15.350 --> 00:06:15.890\nOnce I'm in here.\n\n129\n00:06:17.890 --> 00:06:23.047\nApparently my big challenge is knowing my\npassword so let me try this one more time.\n\n130\n00:06:23.047 --> 00:06:27.727\nThere we go, and I would do something\nlike less/var/log/messages and\n\n131\n00:06:27.727 --> 00:06:31.285\nI would go in and\nI'd take a look at my messages, right?\n\n132\n00:06:31.285 --> 00:06:34.500\nAnd I could go through and\nscroll in here and look at the logs.\n\n133\n00:06:34.500 --> 00:06:36.492\nNow, as I look through here,\n\n134\n00:06:36.492 --> 00:06:41.458\nthe majority of what's stored in syslog\nwill also be stored in journald.\n\n135\n00:06:41.458 --> 00:06:47.431\nAnd in fact, journald will often have\nmore in it than the syslog does.\n\n136\n00:06:47.431 --> 00:06:51.350\nSo for example, dmesg,\nwhen the system boots up, right?\n\n137\n00:06:51.350 --> 00:06:53.670\nWe get all this hardware\ndetection that's happening.\n\n138\n00:06:53.670 --> 00:06:55.080\nThat's what I'm seeing right here.\n\n139\n00:06:55.080 --> 00:06:57.607\nThis is all the dmesg output.\n\n140\n00:06:57.607 --> 00:07:01.592\nI don't see that in the old syslog\nbecause it's not stored here.\n\n141\n00:07:01.592 --> 00:07:04.260\nIt's stored in /var/log/dmesg instead.\n\n142\n00:07:04.260 --> 00:07:05.281\nIt's stored in a different file.\n\n143\n00:07:05.281 --> 00:07:08.580\nJournald puts it all together because\nwe can parse and search on it.\n\n144\n00:07:08.580 --> 00:07:12.300\nThe other thing is if you look here,\nwe see the date, the host name, and\n\n145\n00:07:12.300 --> 00:07:16.654\nthe service that generated the message,\nfollowed by the actual message, right?\n\n146\n00:07:16.654 --> 00:07:20.010\nAs we kinda scroll through, you'll see\nthat kind of set on each of these.\n\n147\n00:07:20.010 --> 00:07:22.540\nWhen I look over here, it's similar.\n\n148\n00:07:22.540 --> 00:07:23.760\nI get the date, and\n\n149\n00:07:23.760 --> 00:07:27.780\nI get the fully qualified host name,\nfollowed by the service.\n\n150\n00:07:27.780 --> 00:07:30.710\nSo we get a little bit more information\nthere as far as identifying where this\n\n151\n00:07:30.710 --> 00:07:32.070\ndata is coming from.\n\n152\n00:07:32.070 --> 00:07:33.994\nAnd then after that, we see the messages.\n\n153\n00:07:33.994 --> 00:07:40.000\nAnd this file will grow and grow and grow\nas more and more data gets pumped into it.\n\n154\n00:07:40.000 --> 00:07:42.610\nAnd as I kinda scroll through here,\nall the way to the end,\n\n155\n00:07:42.610 --> 00:07:47.820\nI get where I had three incorrect password\nattempts when I was trying to sudo, right?\n\n156\n00:07:47.820 --> 00:07:52.303\nAnd if I were to do the same thing over\nhere and kinda sift through all the way to\n\n157\n00:07:52.303 --> 00:07:56.107\nthe end, I should have just tailed\nthis file, cuz it's so big.\n\n158\n00:07:56.107 --> 00:07:57.221\nAgain, all the way down to\nthe end of these messages.\n\n159\n00:07:57.221 --> 00:07:59.334\nIn fact, I'm gonna change that and\njust tail it.\n\n160\n00:07:59.334 --> 00:08:00.720\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n161\n00:08:00.720 --> 00:08:03.002\n&gt;&gt; So we can kinda see the end of that one\n\n162\n00:08:03.002 --> 00:08:07.950\nThere we go, and I can see right here\nwhere session 3 for user D Pezet came in,\n\n163\n00:08:07.950 --> 00:08:09.568\nI created a new session.\n\n164\n00:08:09.568 --> 00:08:13.604\nBut I don't see that\nfailure of sudo right?\n\n165\n00:08:13.604 --> 00:08:16.810\nAnd again, that's because\nthat's an audit message, and\n\n166\n00:08:16.810 --> 00:08:21.639\nthat's actually stored in /var/log/audit/\n.log in a different log file.\n\n167\n00:08:21.639 --> 00:08:25.180\nWith Journal D, It's all right here.\n\n168\n00:08:25.180 --> 00:08:27.466\nI see that information and\nthere's some basic,\n\n169\n00:08:27.466 --> 00:08:30.435\nI don't know what you would call this,\nbut a prettiness to it.\n\n170\n00:08:30.435 --> 00:08:33.690\nWhere it will bold certain things\nif they're alert, or colorize them.\n\n171\n00:08:33.690 --> 00:08:35.010\nI didn't tell it to colorize this.\n\n172\n00:08:35.010 --> 00:08:38.590\nIt just did that to help me know\nthat that was something significant,\n\n173\n00:08:38.590 --> 00:08:40.575\nan event of significant importance.\n\n174\n00:08:40.575 --> 00:08:41.164\n&gt;&gt; Aesthetics.\n\n175\n00:08:41.164 --> 00:08:44.423\n&gt;&gt; Aesthetics, yeah, makes it look pretty.\n\n176\n00:08:44.423 --> 00:08:45.978\n&gt;&gt; There you go.\n&gt;&gt; So that's kinda going on there.\n\n177\n00:08:45.978 --> 00:08:49.062\nJournal CTL is really handy, right?\n\n178\n00:08:49.062 --> 00:08:51.752\nBut there are times where it isn't\n\n179\n00:08:51.752 --> 00:08:55.660\nnecessarily work the way\nthat the old sys log did.\n\n180\n00:08:55.660 --> 00:08:59.870\nSince sys log was text file, I could\ntail it and get just the last few lines.\n\n181\n00:08:59.870 --> 00:09:04.730\nWith journal ctl I can kind of do the same\nthing by saying dash n and specifying\n\n182\n00:09:04.730 --> 00:09:07.800\na number of lines, right how many\nnumbers of lines do I want to get back.\n\n183\n00:09:07.800 --> 00:09:11.330\nAnd so I could come in and\nsay just give me the last ten and\n\n184\n00:09:11.330 --> 00:09:17.390\nthat would be the equivalent of tailing\nthe sys log in fact ten is the default.\n\n185\n00:09:17.390 --> 00:09:19.540\nSo if I had just done\njournal ctl dash ten and\n\n186\n00:09:19.540 --> 00:09:24.060\nnot provided a number it would have showed\nme just the last ten lines, all right?\n\n187\n00:09:24.060 --> 00:09:25.580\nSo I can start to see that.\n\n188\n00:09:25.580 --> 00:09:29.600\nI know one common thing I do when\ntroubleshooting is I will tail sys log.\n\n189\n00:09:29.600 --> 00:09:31.060\nSo if I wanna monitor it, right?\n\n190\n00:09:31.060 --> 00:09:33.760\nAnd just kinda see what's going on,\nI can come in and\n\n191\n00:09:33.760 --> 00:09:39.020\nI can say, here I'll do a tail.\n\n192\n00:09:39.020 --> 00:09:42.710\nAnd specify /var, /log, /messages, right?\n\n193\n00:09:42.710 --> 00:09:47.820\nAnd so that's gonna, or not tail, tail-f\nand that tells it I want to follow it.\n\n194\n00:09:47.820 --> 00:09:50.445\nAnd now it showed me the last\nten as new entries appear.\n\n195\n00:09:50.445 --> 00:09:53.780\nThey'll start to get\nkind of entered in here.\n\n196\n00:09:53.780 --> 00:09:55.670\nSo we'll see that information appear.\n\n197\n00:09:55.670 --> 00:09:58.390\nWell, I can do the same\nthing with Journal CTL.\n\n198\n00:09:58.390 --> 00:10:01.030\nWith journalctl if you\njust do journalctl-f.\n\n199\n00:10:01.030 --> 00:10:05.757\nIt's gonna show me the last few lines and\nit's tailing it, so it's now gonna\n\n200\n00:10:05.757 --> 00:10:10.790\nwatch it and it's following it, and\nas new entries appear they'll update here.\n\n201\n00:10:10.790 --> 00:10:13.449\nSo I can watch it, and kind of and see\nwhat's going on, and monitor that system.\n\n202\n00:10:13.449 --> 00:10:17.499\nSo kind of a simple way to interact with\na little bit different than what we had\n\n203\n00:10:17.499 --> 00:10:20.940\nbefore, but\nthe real power comes with the filtering.\n\n204\n00:10:20.940 --> 00:10:26.430\nThat if I want to take a look and find\nthings that have like a priority of error,\n\n205\n00:10:26.430 --> 00:10:28.830\nI want to look for\nthings that are in error.\n\n206\n00:10:28.830 --> 00:10:34.151\nWell, under syslog,\nI would have to grep the syslog file.\n\n207\n00:10:34.151 --> 00:10:36.870\nAnd I could grep it, and\nI could look for the word, error.\n\n208\n00:10:36.870 --> 00:10:37.892\nBut I always had to worry,\n\n209\n00:10:37.892 --> 00:10:40.133\ndoes it have a capital E or\na lowercase e at the beginning?\n\n210\n00:10:40.133 --> 00:10:40.900\nIs it all capital?\n\n211\n00:10:40.900 --> 00:10:43.739\nIs it E-R-R, or\nis it the word, error, right?\n\n212\n00:10:43.739 --> 00:10:46.000\nThere's all these different variations.\n\n213\n00:10:46.000 --> 00:10:51.012\nBut with journalctl, I can come in and\nI can say journalctl -p err and\n\n214\n00:10:51.012 --> 00:10:56.112\nthat selling it to showing me any\nmessage that has a priority of alert or\n\n215\n00:10:56.112 --> 00:11:00.015\nerror, sorry if that was alert,\nI would type alert.\n\n216\n00:11:00.015 --> 00:11:03.275\nAnd so now I start to see the errors and\nthis is really neat because you'll notice\n\n217\n00:11:03.275 --> 00:11:06.208\nthat some of these lines, they don't\neven have the word error in them.\n\n218\n00:11:06.208 --> 00:11:09.086\nAnd so if had just been doing\na grep search for the word error,\n\n219\n00:11:09.086 --> 00:11:11.231\nI wouldn't have seen\nthis line right here but\n\n220\n00:11:11.231 --> 00:11:14.295\nthere is a priority that's logged\nwith each of these messages.\n\n221\n00:11:14.295 --> 00:11:19.669\nAnd it's stating what that error level is,\nor what the message level is.\n\n222\n00:11:19.669 --> 00:11:23.530\nAnd in this case, I can go through and\nsee all of my errors.\n\n223\n00:11:23.530 --> 00:11:25.181\nWhich there's a decent few in here, right,\n\n224\n00:11:25.181 --> 00:11:27.279\nthose are my password attempts\nright here at the bottom.\n\n225\n00:11:27.279 --> 00:11:31.902\nBut then you'll see other things, looks\nlike smb and winbind, had some kind of\n\n226\n00:11:31.902 --> 00:11:36.058\nissue, or actually there it just\nsays that they finished starting up.\n\n227\n00:11:36.058 --> 00:11:39.370\nIt must have generated some\nkind of error somewhere but\n\n228\n00:11:39.370 --> 00:11:44.342\nI can start to see that information and\nfilter through it by using journal ctl-p.\n\n229\n00:11:44.342 --> 00:11:47.596\nI can also do dates if I wanna\ndo like a date or time range,\n\n230\n00:11:47.596 --> 00:11:51.633\nmaybe I wanna see just messages that\nwere generated in the last hour.\n\n231\n00:11:51.633 --> 00:11:57.630\nSo I could come through and\nI could say journalctl --since and\n\n232\n00:11:57.630 --> 00:12:00.468\nthen punch in a date and time.\n\n233\n00:12:00.468 --> 00:12:05.761\nSo it is, let's see, it's 2017-08-18 and\n\n234\n00:12:05.761 --> 00:12:09.708\nmaybe I'll do first thing this morning.\n\n235\n00:12:09.708 --> 00:12:15.552\nAll right, or we could go even further,\nwe'll say like 9:00 o'clock this morning.\n\n236\n00:12:15.552 --> 00:12:19.764\nAll right, and then I can say -- until,\nif I leave this off,\n\n237\n00:12:19.764 --> 00:12:24.624\nit'll just go all the way to current,\nwhich will probably be fine, but\n\n238\n00:12:24.624 --> 00:12:31.591\nI might move this to say 10:00 o'clock and\nso, I could say until equals 2017-08-18.\n\n239\n00:12:31.591 --> 00:12:35.884\nAnd I'll do 10 o'clock\nthis time like that and\n\n240\n00:12:35.884 --> 00:12:40.699\nI can even continue to go on and\nsay like -perr like just\n\n241\n00:12:40.699 --> 00:12:45.633\nshow me the errors that\noccurred between nine and 10.\n\n242\n00:12:45.633 --> 00:12:51.091\nAnd when I run that, actually all of mine\noccurred between nine and 10 [CROSSTALK].\n\n243\n00:12:51.091 --> 00:12:51.895\n&gt;&gt; That was a nice hour.\n\n244\n00:12:51.895 --> 00:12:53.870\n&gt;&gt; Yeah,\nthat didn't really achieve anything.\n\n245\n00:12:53.870 --> 00:12:55.820\nBut if I were to bump those times back,\n\n246\n00:12:55.820 --> 00:13:00.330\nif I were to go back to let's\nsay 8:00 to 9:00 AM, right?\n\n247\n00:13:00.330 --> 00:13:05.860\nSo if I got 8:00 AM to 9:00 AM and\nI look for errors, there weren't any,\n\n248\n00:13:05.860 --> 00:13:08.980\nI get the log file begin and there weren't\nany error in that time so, I can really\n\n249\n00:13:08.980 --> 00:13:12.570\nstart to filter that information and get\nexactly what it is that I want out of it.\n\n250\n00:13:12.570 --> 00:13:16.250\nAnd know that I'm getting complete data\nas opposed to possibly missing some\n\n251\n00:13:16.250 --> 00:13:18.130\nentries or glancing over something.\n\n252\n00:13:18.130 --> 00:13:19.780\nLog files can grow really big.\n\n253\n00:13:19.780 --> 00:13:22.330\nEspecially if we're aggregating\nthem to some central location so\n\n254\n00:13:22.330 --> 00:13:26.840\nit becomes increasingly easy to miss\nsomething and then you're in real trouble.\n\n255\n00:13:26.840 --> 00:13:28.728\nNow let me give you an example of\nhow I would troubleshoot with this.\n\n256\n00:13:28.728 --> 00:13:32.272\nSo for example,\nSamba had some errors in there, right?\n\n257\n00:13:32.272 --> 00:13:35.596\nTheir SMB daemon,\nI saw it in here somewhere.\n\n258\n00:13:35.596 --> 00:13:37.410\nThis guy right here, smbd.\n\n259\n00:13:37.410 --> 00:13:42.955\nSo if I am having a problem with\na service, I'll usually run journalctl\n\n260\n00:13:42.955 --> 00:13:49.120\n-xau followed by the name of the service,\nokay?\n\n261\n00:13:49.120 --> 00:13:53.280\nAnd so what this is doing is the u\nis the important part, that's U for\n\n262\n00:13:53.280 --> 00:13:56.700\nunit inside of system D\neverything is a unit.\n\n263\n00:13:56.700 --> 00:14:00.310\nThere's sockets and there's services and\nso on but they're all units and\n\n264\n00:14:00.310 --> 00:14:03.300\nI can search for\nany message tied to a unit name.\n\n265\n00:14:03.300 --> 00:14:06.440\nSo I can say journal CTL dash U SNBD and\n\n266\n00:14:06.440 --> 00:14:09.320\nthen I'm gonna see the messages\nthat relate to Samba.\n\n267\n00:14:10.340 --> 00:14:14.300\nDash X says give me extended output.\n\n268\n00:14:14.300 --> 00:14:16.620\nThat when we get output on this screen,\n\n269\n00:14:16.620 --> 00:14:19.970\nsometimes it will do what's called\nan ellipses, the three little dots.\n\n270\n00:14:19.970 --> 00:14:21.510\nAnd it'll shorten the information,\n\n271\n00:14:21.510 --> 00:14:24.311\nx will tell it to give me the extended\ninformation, show me all of it.\n\n272\n00:14:24.311 --> 00:14:28.722\nAnd you can actually do\nan e on this as well, and\n\n273\n00:14:28.722 --> 00:14:36.324\nit would give you additional details and\nkind of help information inside of it.\n\n274\n00:14:36.324 --> 00:14:38.650\nThere we go, I got those backwards.\n\n275\n00:14:38.650 --> 00:14:40.760\nSo it's gonna show me that information and\n\n276\n00:14:40.760 --> 00:14:44.110\ngive me the full data that I wanna see,\njust on Samba.\n\n277\n00:14:44.110 --> 00:14:47.880\nSo this is a quick easy command to run,\njust XAU, and\n\n278\n00:14:47.880 --> 00:14:49.500\nthen whatever it is\nyou're troubleshooting.\n\n279\n00:14:49.500 --> 00:14:52.920\nAnd now when I get those log messages,\nthey come back and\n\n280\n00:14:52.920 --> 00:14:55.350\nyou know that message must have\nbeen generated by something else?\n\n281\n00:14:55.350 --> 00:14:58.690\nIt was, sorry,\nI was looking at the message here.\n\n282\n00:14:58.690 --> 00:15:01.005\nWhere it says SMBD, but if I look,\n\n283\n00:15:01.005 --> 00:15:05.303\nno actually it was spawned by SMBD I\nthought it was NMB for a minute there.\n\n284\n00:15:05.303 --> 00:15:08.688\nBut yeah it didn't return those messages,\nlet's try that again.\n\n285\n00:15:08.688 --> 00:15:13.117\nLet's try firewall D,\nthat one worked right.\n\n286\n00:15:13.117 --> 00:15:17.060\n[LAUGH] So, I'm gonna have to find\nout why it didn't pull Samba.\n\n287\n00:15:17.060 --> 00:15:19.520\nIt might be registered under a different\nname and it didn't come back.\n\n288\n00:15:19.520 --> 00:15:21.790\nBut, like, firewalld here,\nI just ran it, and\n\n289\n00:15:21.790 --> 00:15:25.710\nit gives me the extended information here\nabout what I'm seeing in the firewall.\n\n290\n00:15:25.710 --> 00:15:28.480\nAnd then, here's the actual log\nmessages that were tied to it.\n\n291\n00:15:28.480 --> 00:15:31.654\nIt looks like a couple of\nwarnings that were in there and\n\n292\n00:15:31.654 --> 00:15:33.387\nI see the full extent of that.\n\n293\n00:15:33.387 --> 00:15:34.884\nIf I stretch my window out,\n\n294\n00:15:34.884 --> 00:15:38.927\nI would see the rest of that log messages\nkinda going on off my screen here.\n\n295\n00:15:38.927 --> 00:15:45.760\nBut I can see that data and kinda look\nthrough it and troubleshoot and find it.\n\n296\n00:15:45.760 --> 00:15:52.010\nSamba, maybe it's registered under samba,\nS-M-B,\n\n297\n00:15:52.010 --> 00:15:55.740\nthere we go, it's not registered as SMBD,\nit's registered as just SMB.\n\n298\n00:15:55.740 --> 00:15:58.620\nSo when I run it that way,\nnow I see the information.\n\n299\n00:15:58.620 --> 00:16:00.877\nSo you do have to know\nwhat the unit is called.\n\n300\n00:16:00.877 --> 00:16:04.644\nAnd if you don't know, you can always go\nand look inside of system d's library\n\n301\n00:16:04.644 --> 00:16:08.800\nfiles, and you'll find where it's\ngot all the unit names in there.\n\n302\n00:16:08.800 --> 00:16:10.511\nBut it was just called SMB.\n\n303\n00:16:10.511 --> 00:16:13.822\nSo there it is, and now I can see\nthe information as related just to SMB and\n\n304\n00:16:13.822 --> 00:16:15.614\nany problems that it might've had, or\n\n305\n00:16:15.614 --> 00:16:18.461\nany other service that I might\nhave floating around in there.\n\n306\n00:16:18.461 --> 00:16:22.168\nSo that's a quick easy way to look in and\ntroubleshoot one particular service and\n\n307\n00:16:22.168 --> 00:16:24.237\nsay just give me all\nthe details on that one and\n\n308\n00:16:24.237 --> 00:16:26.113\ndon't show me the whole rest of the log.\n\n309\n00:16:26.113 --> 00:16:30.675\n&gt;&gt; That's good information, so\nwhere are the journald logs stored?\n\n310\n00:16:30.675 --> 00:16:35.597\nWell that's a good point, right, so\nwith syslog I mentioned they're in\n\n311\n00:16:35.597 --> 00:16:38.550\n/var/log/messages and\nwe can go and mess with that file.\n\n312\n00:16:38.550 --> 00:16:41.685\nBut here I haven't really talked\nabout that location at all, have I?\n\n313\n00:16:41.685 --> 00:16:42.920\n&gt;&gt; No.\n&gt;&gt; I keep using journalctl and\n\n314\n00:16:42.920 --> 00:16:45.747\nit's just going and magically getting\nthese log files from somewhere.\n\n315\n00:16:45.747 --> 00:16:48.144\n&gt;&gt; I thought it was magic,\nand because you're magical.\n\n316\n00:16:48.144 --> 00:16:50.295\n&gt;&gt; [LAUGH] Well, it is close.\n\n317\n00:16:50.295 --> 00:16:53.583\n&gt;&gt; [LAUGH]\n&gt;&gt; In this case it is pulling the data out\n\n318\n00:16:53.583 --> 00:16:59.160\nof thin air in that thin air is your RAM,\nright, journald logs to RAM by default.\n\n319\n00:16:59.160 --> 00:17:01.219\n&gt;&gt; There it is.\n&gt;&gt; Now that makes it very fast which is\n\n320\n00:17:01.219 --> 00:17:04.960\ngood but there is a little problem here,\nwhat happens when I reboot my computer?\n\n321\n00:17:04.960 --> 00:17:08.680\nWhen you reboot your computer,\nRAM is erased.\n\n322\n00:17:08.680 --> 00:17:12.820\nIf an attacker can get in and they can't\nmess with your logs, all they have to do\n\n323\n00:17:12.820 --> 00:17:14.860\nis go in and make all the changes\nthey want and then reboot the system.\n\n324\n00:17:14.860 --> 00:17:15.710\n[LAUGH] And\n\n325\n00:17:15.710 --> 00:17:20.270\nwhen the system reboots everything\njournald had logged is gone and that's it.\n\n326\n00:17:20.270 --> 00:17:26.140\nOkay, now that sounds kinda crazy, doesn't\nit, why wouldn't I want persistent logs?\n\n327\n00:17:26.140 --> 00:17:31.420\nAnd the short answer is that\nmost systems run syslog and\n\n328\n00:17:31.420 --> 00:17:35.950\njournald, right, and if you're running\nboth why log them both to disk,\n\n329\n00:17:35.950 --> 00:17:38.000\nyou're just getting duplicate logs, right.\n\n330\n00:17:38.000 --> 00:17:40.900\nGranted syslog kind of spreads\nit out across several files,\n\n331\n00:17:40.900 --> 00:17:45.210\njournald keeps it all together, but\nstill, syslog is writing it down.\n\n332\n00:17:45.210 --> 00:17:49.010\nAnd so most of the distros, I'm gonna\nsay most to be on the safe side but\n\n333\n00:17:49.010 --> 00:17:54.065\nevery distro that I've seen, just still\ndefaults to syslog writing to disk and\n\n334\n00:17:54.065 --> 00:17:57.670\njournald only writing to memory so\ntechnically there is no file.\n\n335\n00:17:57.670 --> 00:18:02.500\nThere is no file for me to show you for\njournald, now long term\n\n336\n00:18:02.500 --> 00:18:06.720\nthat's not a great solution and the\nreality is log files aren't that big so\n\n337\n00:18:06.720 --> 00:18:09.020\nwho cares if you write it to disk twice?\n\n338\n00:18:09.020 --> 00:18:13.620\nI always change journald's behavior\nto say don't just write to memory,\n\n339\n00:18:13.620 --> 00:18:17.500\nwrite to disk as well, and that way when\nI reboot it's persistent, it's there,\n\n340\n00:18:17.500 --> 00:18:21.660\nand when I use journalctl now I can go\nback days, or weeks, or months, and\n\n341\n00:18:21.660 --> 00:18:24.640\nI don't have to worry about only being\nable to go back to the last reboot\n\n342\n00:18:24.640 --> 00:18:29.199\nwhich is what you would\nnormally have with journald.\n\n343\n00:18:29.199 --> 00:18:32.555\nSo if I want this thing to write\nto disk I'm gonna have to change\n\n344\n00:18:32.555 --> 00:18:35.526\njournald's behavior,\nthere's two ways to do this,\n\n345\n00:18:35.526 --> 00:18:38.966\nif you go out on the Internet\nyou'll find a few different ways.\n\n346\n00:18:38.966 --> 00:18:44.100\nBasically what happens is when journald\nfires up, when that service starts,\n\n347\n00:18:44.100 --> 00:18:49.880\nit looks for a folder, it's looking for\na folder called /var/log/journal, okay.\n\n348\n00:18:49.880 --> 00:18:56.300\nWell I'm in /var/log and if you look at my\nlisting here, there's no journal folder.\n\n349\n00:18:56.300 --> 00:19:00.380\nSo when journald fires up it sees that\nfolder is missing and it says well,\n\n350\n00:19:00.380 --> 00:19:03.000\nI guess they don't want me to write\nto disk, and then it doesn't, and\n\n351\n00:19:03.000 --> 00:19:05.860\nit only writes to memory, so\nthat's what it's doing by default.\n\n352\n00:19:05.860 --> 00:19:10.430\nNow technically if I wanted to\nstart logging all I have to do is\n\n353\n00:19:10.430 --> 00:19:14.090\nmake the folder, I could make that\nfolder right here, /var/log/journal and\n\n354\n00:19:14.090 --> 00:19:19.210\nthen restart journald, and as soon as I do\nthat it'll start writing to disk, okay.\n\n355\n00:19:19.210 --> 00:19:22.940\nBut if you make the folder yourself\nit's actually pretty easy to mess up\n\n356\n00:19:22.940 --> 00:19:25.240\nthe permissions, and\npermissions are really important here,\n\n357\n00:19:25.240 --> 00:19:29.430\nwe don't want unauthorized people messing\nwith the folder, messing with the file.\n\n358\n00:19:29.430 --> 00:19:33.400\nAnd there's file permissions in SELinux\nand other things that all kind of apply to\n\n359\n00:19:33.400 --> 00:19:37.460\nthis, so I do it a different way and\nit's just one of those things,\n\n360\n00:19:37.460 --> 00:19:41.724\nkind of like a safety net for me,\nI wanna make sure this gets set right.\n\n361\n00:19:41.724 --> 00:19:45.990\nSo that the way that I enable it is\nI edit systemd's configuration and\n\n362\n00:19:45.990 --> 00:19:51.195\nthere's a value in there where we can\ntell it to start logging this to disk.\n\n363\n00:19:51.195 --> 00:19:54.721\nAnd so what we need to do\nis we need to edit a file,\n\n364\n00:19:54.721 --> 00:19:58.871\nit's /etc/systemd/journald.conf,\nall right,\n\n365\n00:19:58.871 --> 00:20:03.615\nthat's the configuration file for\nthe journal daemon.\n\n366\n00:20:03.615 --> 00:20:05.915\nAnd if you go in there you'll\nsee a bunch of options, but\n\n367\n00:20:05.915 --> 00:20:10.893\nthe very first option right here\nis storage=auto, all right.\n\n368\n00:20:10.893 --> 00:20:14.979\nAnd storage=auto means that,\nand this is the default value,\n\n369\n00:20:14.979 --> 00:20:19.220\nit means if /var/log/journal\nexists then we'll log to disk,\n\n370\n00:20:19.220 --> 00:20:24.172\nand if it doesn't then we'll only log\nto memory, that's what auto means.\n\n371\n00:20:24.172 --> 00:20:29.116\nWell there's three values here,\nokay, there's storage=no which\n\n372\n00:20:29.116 --> 00:20:34.142\nmeans we won't write to disc no\nmatter what, storage=auto will write\n\n373\n00:20:34.142 --> 00:20:38.797\nto disk if the folder exists, or\nwe can do storage=persistent.\n\n374\n00:20:38.797 --> 00:20:41.786\n&gt;&gt; Mm-hm!\n\n375\n00:20:41.786 --> 00:20:46.685\n&gt;&gt; All right, persistent, and by saying\nthat, by saying storage=persistent we're\n\n376\n00:20:46.685 --> 00:20:50.660\ntelling it I want you to have\npersistent storage on the disk.\n\n377\n00:20:50.660 --> 00:20:51.790\nAnd that way,\n\n378\n00:20:51.790 --> 00:20:56.000\nwhen you fire up if the folder is\nmissing you need to make that folder.\n\n379\n00:20:56.000 --> 00:21:00.640\nMake the folder, get it enabled, and\nstart putting your logs in there.\n\n380\n00:21:00.640 --> 00:21:04.400\nThis is gonna make journald\ncreate the folder for us, and\n\n381\n00:21:04.400 --> 00:21:07.500\nby doing this we'll know\nthe permissions are right, and\n\n382\n00:21:07.500 --> 00:21:10.410\nthe SELinux context is right, and\nall of that other stuff is right.\n\n383\n00:21:10.410 --> 00:21:15.050\nAnd all we had to do is change one little\noption right here, storage=persistent, so\n\n384\n00:21:15.050 --> 00:21:20.690\nI'm gonna set that value and now that\nit's done I'm just going to restart.\n\n385\n00:21:20.690 --> 00:21:24.760\nI'll do a systemctl\nrestart systemd-journald,\n\n386\n00:21:24.760 --> 00:21:29.985\nthat's the actual name of the journal\ndaemon, it's kind of a long one,\n\n387\n00:21:29.985 --> 00:21:33.950\nsystemd-journald, and\nwhen I run that's it's gonna restart it.\n\n388\n00:21:33.950 --> 00:21:38.150\nWhen it restarts it'll read its config\nfile, and when it reads its config file\n\n389\n00:21:38.150 --> 00:21:42.220\nit'll see storage=persistent,\nall right we need to write to disk, and so\n\n390\n00:21:42.220 --> 00:21:49.330\nit goes into /var/log and it makes\na folder called journal, there it is.\n\n391\n00:21:49.330 --> 00:21:49.910\n&gt;&gt; That makes sense.\n\n392\n00:21:49.910 --> 00:21:55.140\n&gt;&gt; It named the folder for me and if I,\nwhoops, if I look at it here with a LAZ,\n\n393\n00:21:55.140 --> 00:21:59.840\nI can find that folder, and here it is.\n\n394\n00:21:59.840 --> 00:22:03.530\nIt's got the right systemd context,\nit's var log t, so it's got that,\n\n395\n00:22:03.530 --> 00:22:05.120\nit's owned by root.\n\n396\n00:22:05.120 --> 00:22:07.560\nAnd if I go into that folder and\n\n397\n00:22:07.560 --> 00:22:12.880\ntake a look, there's the name of the log\nthat it's working with right now,\n\n398\n00:22:12.880 --> 00:22:18.830\nit creates kind of a GUID for it, it's\nnot a true GUID but an ID number for it.\n\n399\n00:22:18.830 --> 00:22:22.740\nAnd if I take a look in there,\nsystem.journal,\n\n400\n00:22:22.740 --> 00:22:27.240\nright, there's the journal file and as it\ngrows it will do log rotation, it will\n\n401\n00:22:27.240 --> 00:22:32.110\nspin out more and all that, but this is\nthe journal, it's now writing it to disk.\n\n402\n00:22:32.110 --> 00:22:38.150\nAnd if I take a look at that one you'll\nsee how the root user has read and\n\n403\n00:22:38.150 --> 00:22:42.750\nwrite, the root group has read,\nand everybody else has nothing,\n\n404\n00:22:42.750 --> 00:22:44.080\nright, they have no access.\n\n405\n00:22:44.080 --> 00:22:48.760\nSo the permissions are set correctly,\nthe security context is set correctly,\n\n406\n00:22:48.760 --> 00:22:50.590\nthis is now defined\nthe way that I want it.\n\n407\n00:22:50.590 --> 00:22:55.426\nAnd more importantly if I reboot my\nsystem, when the system reboots it's gonna\n\n408\n00:22:55.426 --> 00:22:59.897\nkeep the logs, the logs are written to\ndisk and so now I can go back as far as I\n\n409\n00:22:59.897 --> 00:23:03.392\nneed to and actually see that\ninformation and retain it.\n\n410\n00:23:03.392 --> 00:23:06.727\nSo this is really important if you're\ngonna be using journald as your go-to log\n\n411\n00:23:06.727 --> 00:23:09.910\nsource, that you make sure you turn this\non cuz otherwise you can only go back\n\n412\n00:23:09.910 --> 00:23:11.940\nto the last reboot when\nlooking at the log data.\n\n413\n00:23:11.940 --> 00:23:13.354\n&gt;&gt; So Don,\nwho is allowed to access the logs?\n\n414\n00:23:13.354 --> 00:23:18.827\n&gt;&gt; All right, well I know I just said\nthat technically the root user and\n\n415\n00:23:18.827 --> 00:23:20.920\nthe root group has it.\n\n416\n00:23:20.920 --> 00:23:22.725\n&gt;&gt; Right.\n&gt;&gt; But there is a little bit more,\n\n417\n00:23:22.725 --> 00:23:27.229\na few other people can have access to it,\ntechnically anybody who is a administrator\n\n418\n00:23:27.229 --> 00:23:29.716\non the system can use\nthe journalctl command.\n\n419\n00:23:29.716 --> 00:23:34.860\nOnly root can see this file, but anybody\nwho's an administrator can use journalctl,\n\n420\n00:23:34.860 --> 00:23:38.313\nand journalctl will look at\nthis file on their behalf, and\n\n421\n00:23:38.313 --> 00:23:42.683\nactually it doesn't even really look\nat this file, it looks in memory and\n\n422\n00:23:42.683 --> 00:23:47.098\nthen goes to the file if we kind\nof move back in time far enough.\n\n423\n00:23:47.098 --> 00:23:51.399\nSo that journalctl command is kind of\nthe key, that's the gateway to getting at\n\n424\n00:23:51.399 --> 00:23:55.847\njournald's information, and anybody who\nis an administrator can get in there.\n\n425\n00:23:55.847 --> 00:23:59.274\nSo if I have a user\naccount like my account,\n\n426\n00:23:59.274 --> 00:24:02.799\nmy account is the dpezet account right,\nand\n\n427\n00:24:02.799 --> 00:24:07.750\nif I wanted to allow my account\nto be able to look at these logs,\n\n428\n00:24:07.750 --> 00:24:13.497\nI could just come in and say usermod-a-G\nADM and then my user account.\n\n429\n00:24:13.497 --> 00:24:16.986\nI'm putting myself in the ADM group,\nthe administrator group, all right?\n\n430\n00:24:16.986 --> 00:24:22.040\nAnd when I'm in the ADM group, I'll now\nbe able to use the general CTL command.\n\n431\n00:24:22.040 --> 00:24:24.160\nAnd so\nnow I can run it without having to sudu,\n\n432\n00:24:24.160 --> 00:24:26.390\nwithout having to switch to\na root shell or anything.\n\n433\n00:24:26.390 --> 00:24:27.879\nI can just use general CTL.\n\n434\n00:24:27.879 --> 00:24:31.996\nI can't navigate to /var/log/journal and\nstart poking around in there,\n\n435\n00:24:31.996 --> 00:24:33.850\nit won't let me, right?\n\n436\n00:24:33.850 --> 00:24:37.390\nAnd even if I could, I didn't show you\nguys this, but even if I could get into\n\n437\n00:24:37.390 --> 00:24:43.340\nthis folder, if we take a look\nat that file, it's binary data.\n\n438\n00:24:43.340 --> 00:24:45.250\nSee I'm just getting blank screens here.\n\n439\n00:24:45.250 --> 00:24:49.844\nIt's actually like binary junk\nthat it won't even render,\n\n440\n00:24:49.844 --> 00:24:51.834\nI wonder if I can cut that.\n\n441\n00:24:51.834 --> 00:24:52.354\nThere you go.\n\n442\n00:24:52.354 --> 00:24:55.629\nSo now you can kind of see it here just\nkind of this junk that comes up on\n\n443\n00:24:55.629 --> 00:24:56.890\nthe screen.\n\n444\n00:24:56.890 --> 00:24:59.626\n[LAUGH] It messed with my prompt and\na few other things.\n\n445\n00:24:59.626 --> 00:25:00.730\n&gt;&gt; But it's important junk.\n\n446\n00:25:00.730 --> 00:25:03.398\n&gt;&gt; But it is, yeah, and\nit's just getting in there and\n\n447\n00:25:03.398 --> 00:25:06.686\nshowing me this binary data that\nit can't actually interpret.\n\n448\n00:25:06.686 --> 00:25:10.297\nAnd some of it, you can sort of read some\nof this, source, realtime, timestamp, and\n\n449\n00:25:10.297 --> 00:25:13.100\nthe others, here's some kind\nof text that made it through.\n\n450\n00:25:13.100 --> 00:25:15.447\nBut if I modify any of this,\nit damages the whole file.\n\n451\n00:25:15.447 --> 00:25:18.532\nSo it would be very obvious, it would be\nvery evident that its been tampered with\n\n452\n00:25:18.532 --> 00:25:20.350\nif somebody does get in there to do it.\n\n453\n00:25:20.350 --> 00:25:24.526\nSo there's not much somebody can do if\nthey wanna get in and tamper with it.\n\n454\n00:25:24.526 --> 00:25:28.710\nBut now that I'm in that group,\nI don't have to tamper with the file.\n\n455\n00:25:28.710 --> 00:25:29.821\nI can use journalctl.\n\n456\n00:25:29.821 --> 00:25:32.159\nI can read it, run it, and pull from it.\n\n457\n00:25:32.159 --> 00:25:35.060\n&gt;&gt; Is there a journald\nequivalent to our syslog?\n\n458\n00:25:35.060 --> 00:25:37.730\n&gt;&gt; Yeah, so in the sys log episode\n\n459\n00:25:37.730 --> 00:25:41.510\nI showed you guys how to do our\nsys log which is remote sys log.\n\n460\n00:25:41.510 --> 00:25:43.810\nRight here,\nlet's say somebody does break in and\n\n461\n00:25:43.810 --> 00:25:47.750\nthey do get privileges to elevate up to\nroot and they start damaging the journal.\n\n462\n00:25:47.750 --> 00:25:49.286\nWell, they could damage it really easy.\n\n463\n00:25:49.286 --> 00:25:50.730\nAll they have to do is\nchange one bit in it, and\n\n464\n00:25:50.730 --> 00:25:52.350\nnow the file's corrupt and it goes away.\n\n465\n00:25:52.350 --> 00:25:54.808\nSo they can hide their tracks pretty easy.\n\n466\n00:25:54.808 --> 00:25:57.020\nWith our syslog,\nwe would take our logs and\n\n467\n00:25:57.020 --> 00:26:00.270\nsend them over the network to another\nserver somewhere else, all right?\n\n468\n00:26:00.270 --> 00:26:03.720\nWell, remember at the beginning of\nthe episode, where I said journald is not\n\n469\n00:26:03.720 --> 00:26:08.410\nquite at feature parity with syslog yet,\nthis is one of those areas.\n\n470\n00:26:08.410 --> 00:26:11.900\nJournald does have a remote\nlogging functionality in it.\n\n471\n00:26:11.900 --> 00:26:13.890\nIt just doesn't work very well, all right?\n\n472\n00:26:13.890 --> 00:26:16.940\nI don't like to use it in production yet,\nbecause it's just not quite there.\n\n473\n00:26:17.960 --> 00:26:19.800\nBut let me give you the quick\nrundown of how it works,\n\n474\n00:26:19.800 --> 00:26:20.780\nthen I'll give you an alternative.\n\n475\n00:26:20.780 --> 00:26:22.170\nI'll show you what I actually use.\n\n476\n00:26:22.170 --> 00:26:25.860\nSo, if you are hardcore journald,\nyou wanna get rid of syslog.\n\n477\n00:26:25.860 --> 00:26:28.870\nYou want everything to happen\nin the journald world.\n\n478\n00:26:28.870 --> 00:26:32.180\nWell, it's pretty close to being\nto that point where you can,\n\n479\n00:26:32.180 --> 00:26:34.190\nthe remote logging is kind of our problem.\n\n480\n00:26:34.190 --> 00:26:36.820\nAnd for remote logging, there's a service,\n\n481\n00:26:36.820 --> 00:26:39.270\na demon that we can install\nthat will allow us to do it.\n\n482\n00:26:39.270 --> 00:26:40.670\nIt's still a work in progress.\n\n483\n00:26:40.670 --> 00:26:42.470\nIt's still basically\nconsidered beta level,\n\n484\n00:26:42.470 --> 00:26:45.070\neven in the enterprise supported systems.\n\n485\n00:26:45.070 --> 00:26:47.590\nSo it's something you wanna be a little\nbit careful with in production.\n\n486\n00:26:47.590 --> 00:26:51.260\nBut for testing purposes, this is what\nwill eventually become the standard.\n\n487\n00:26:51.260 --> 00:26:53.934\nYou need to install it,\nso I'll say, yum install.\n\n488\n00:26:53.934 --> 00:26:59.779\nAnd it's systemd-journal-remote, right?\n\n489\n00:26:59.779 --> 00:27:01.280\nThat's the service.\n\n490\n00:27:01.280 --> 00:27:07.290\nAnd this service is allowing us to send,\nas well as receive, journald messages.\n\n491\n00:27:07.290 --> 00:27:09.290\nOkay, so this one,\nwe would install this on both.\n\n492\n00:27:09.290 --> 00:27:12.954\nIf I'm setting up a centralized server,\nI would install a systemd journal remote.\n\n493\n00:27:12.954 --> 00:27:16.548\nIf I'm setting up my server to send out,\nI would do that one.\n\n494\n00:27:16.548 --> 00:27:22.720\nAnd we'll get that one installed in,\nshoot I forgot, I'm on a Red Hat box.\n\n495\n00:27:22.720 --> 00:27:27.080\nAnd in Red Hat, they haven't\nactually approved that one yet.\n\n496\n00:27:27.080 --> 00:27:31.088\nLet me just make sure it's not actually\ncalled something different and\n\n497\n00:27:31.088 --> 00:27:31.899\nverify that.\n\n498\n00:27:31.899 --> 00:27:35.290\nBut they've only approved\nit in their beta track.\n\n499\n00:27:35.290 --> 00:27:36.680\nAnd so I'm not gonna see it and\n\n500\n00:27:36.680 --> 00:27:39.470\nlet me just verify that real\nquick that it doesn't show up.\n\n501\n00:27:39.470 --> 00:27:41.760\nYeah, the journal gateway,\nbut not the journal remote.\n\n502\n00:27:41.760 --> 00:27:43.687\nAll right, so,\nthey haven't approved in their beta track.\n\n503\n00:27:43.687 --> 00:27:46.240\nAll right, it is in the beta track but\nthis system is in separate beta.\n\n504\n00:27:46.240 --> 00:27:48.898\nI'm set for the production system,\nso I can't install it.\n\n505\n00:27:48.898 --> 00:27:54.284\nBut if I run a CentOS machine and I added\nthe EPEL libraries, if I did a yum install\n\n506\n00:27:54.284 --> 00:27:59.710\nepel-release, like that, I would get\nthe ability to install this package.\n\n507\n00:27:59.710 --> 00:28:03.310\nThe systemd journal remote\nto facilitate that.\n\n508\n00:28:03.310 --> 00:28:08.304\nIn Ubuntu and in Debian, they actually\nhave it in their package libraries also\n\n509\n00:28:08.304 --> 00:28:13.006\nthat you can install it and\nit is just called systemd-journal-remote.\n\n510\n00:28:13.006 --> 00:28:14.879\nAnd once it's installed,\n\n511\n00:28:14.879 --> 00:28:18.958\nit has a very simple configuration\nfile that you work with.\n\n512\n00:28:18.958 --> 00:28:21.040\nHere, I'll just pretend like I have it.\n\n513\n00:28:21.040 --> 00:28:26.207\nIf I go into /etc/systemd, the file that\n\n514\n00:28:26.207 --> 00:28:31.527\nit uses is called journal-upload.conf.\n\n515\n00:28:31.527 --> 00:28:36.269\nAll right, so on my client, my server\nI'm willing to send logs out from,\n\n516\n00:28:36.269 --> 00:28:39.110\nI would create this journal upload.conf.\n\n517\n00:28:39.110 --> 00:28:41.916\nAnd here's what I would\ndefine what I wanna send.\n\n518\n00:28:41.916 --> 00:28:46.860\nAnd so I would say upload,\nI'm sending data to a server somewhere.\n\n519\n00:28:46.860 --> 00:28:53.030\nAnd then you just say URL = http:// and\nthen who you're sending it to.\n\n520\n00:28:53.030 --> 00:28:58.424\nSo you've got a server out there\nsomewhere and we'll send it usually\n\n521\n00:28:58.424 --> 00:29:03.261\non port.514 and there we go,\nthat's where I wanna send.\n\n522\n00:29:03.261 --> 00:29:06.053\nAnd that remote service will see\nthis entry and say, okay, for\n\n523\n00:29:06.053 --> 00:29:07.880\nnow on I'm gonna write to memory.\n\n524\n00:29:07.880 --> 00:29:10.274\nI may or may not write to\ndisk depending our settings.\n\n525\n00:29:10.274 --> 00:29:14.620\nAnd I will send results over\nto this server as well.\n\n526\n00:29:14.620 --> 00:29:18.750\nOkay, and then that basically takes care\nof the client and gets that data sent out.\n\n527\n00:29:18.750 --> 00:29:21.407\nAnd from there it's up and running.\n\n528\n00:29:21.407 --> 00:29:24.790\nOn the receiving side,\nit doesn't have to upload.\n\n529\n00:29:24.790 --> 00:29:26.470\nOn the receiving side you\njust start the service.\n\n530\n00:29:26.470 --> 00:29:28.382\nAnd then you open port\n514 on your firewall, and\n\n531\n00:29:28.382 --> 00:29:30.081\nthen this traffic starts coming in, right?\n\n532\n00:29:30.081 --> 00:29:32.580\nOr if you picked a different port,\nyou'd open that port on the firewall.\n\n533\n00:29:32.580 --> 00:29:34.540\nAnd then you'd have to update that socket.\n\n534\n00:29:34.540 --> 00:29:36.690\nBut that's all it takes to get it up and\ngoing.\n\n535\n00:29:36.690 --> 00:29:37.960\nIt seems pretty simple.\n\n536\n00:29:37.960 --> 00:29:40.260\nAnd so I know what you're thinking,\nis well if it's that simple,\n\n537\n00:29:40.260 --> 00:29:42.020\nwhy isn't this supported yet?\n\n538\n00:29:42.020 --> 00:29:42.870\nIt's buggy.\n\n539\n00:29:42.870 --> 00:29:45.760\nThere's some log messages\nthat don't carry correctly.\n\n540\n00:29:45.760 --> 00:29:48.450\nThey're still working on adding\nencryption and authentication and\n\n541\n00:29:48.450 --> 00:29:49.690\na few other things to it.\n\n542\n00:29:49.690 --> 00:29:53.830\nSo if you go and you pull up the mailing\nlist for the system d journal remote\n\n543\n00:29:53.830 --> 00:29:56.550\npackage, there's still a lot of\nupdates that are in there and\n\n544\n00:29:56.550 --> 00:29:58.960\na lot of stuff that is considered\nnot production worthy.\n\n545\n00:29:58.960 --> 00:30:01.830\nSo, while there is a subsystem for\n\n546\n00:30:01.830 --> 00:30:07.640\nit, I don't recommend this particular\nsolution just because it's not stable yet.\n\n547\n00:30:07.640 --> 00:30:10.390\nI'll change that probably a year\nfrom now when it is stable and\n\n548\n00:30:10.390 --> 00:30:11.960\nwe're talking about removing syslog.\n\n549\n00:30:11.960 --> 00:30:14.035\nAnd we say, yeah, yeah, journal deal\ndo it, here's how we setup remote.\n\n550\n00:30:14.035 --> 00:30:15.580\nIt's super easy, right?\n\n551\n00:30:15.580 --> 00:30:18.060\nBut for right now,\nthe configuration is easy, but\n\n552\n00:30:18.060 --> 00:30:22.990\nactually getting it to work in a stable\nform is a little more challenging, right?\n\n553\n00:30:22.990 --> 00:30:25.920\nSo instead,\nlet me show you what I normally do, right?\n\n554\n00:30:25.920 --> 00:30:27.595\nI don't normally use this package, right,\n\n555\n00:30:27.595 --> 00:30:29.278\nwhich is obvious cuz I\ncouldn't install it.\n\n556\n00:30:29.278 --> 00:30:33.642\n[LAUGH] So what I normally do is,\nI say look, we're running journald and\n\n557\n00:30:33.642 --> 00:30:37.700\nwe're running syslog, so\nwe're running both of them.\n\n558\n00:30:37.700 --> 00:30:41.560\nAnd syslog has rsyslog functionality,\nright?\n\n559\n00:30:41.560 --> 00:30:42.930\nIt's already got it right there.\n\n560\n00:30:42.930 --> 00:30:46.630\nAnd it is stable, and it is tried and\ntrue, and it's been around a long time.\n\n561\n00:30:46.630 --> 00:30:51.180\nSo what you can do, is you can tell your\njournald, hey, when you log to memory,\n\n562\n00:30:51.180 --> 00:30:55.082\nwhen you log to disk, can you also\nsend your messages over to syslog?\n\n563\n00:30:55.082 --> 00:31:00.390\nAnd journald is smart enough\nthat it will look at syslog and\n\n564\n00:31:00.390 --> 00:31:02.770\nit'll see if a message\nalready exist in syslog.\n\n565\n00:31:02.770 --> 00:31:04.048\nAnd if it does, it'll just leave it be.\n\n566\n00:31:04.048 --> 00:31:08.940\nBut if journald gets a message that's not\nin sys log, or if we've disabled syslog,\n\n567\n00:31:08.940 --> 00:31:12.680\nthen it will start to forward\nits messages over to syslog.\n\n568\n00:31:12.680 --> 00:31:15.980\nAnd then our syslog can ship\nthe data over to another system.\n\n569\n00:31:15.980 --> 00:31:18.549\nSo that's what I normally do to\nmake sure those get moved across.\n\n570\n00:31:18.549 --> 00:31:22.480\nAnd let me show you how that works,\ncuz it's not really that hard to do.\n\n571\n00:31:22.480 --> 00:31:26.991\nBasically, what you have do is you edit\n\n572\n00:31:26.991 --> 00:31:31.234\n/etc/systemd/journald.com.\n\n573\n00:31:31.234 --> 00:31:33.522\nAnd in that file,\nthis is the same place we went for\n\n574\n00:31:33.522 --> 00:31:35.550\nstorage equals persistence, right?\n\n575\n00:31:35.550 --> 00:31:37.850\nSo I'm back in the same place.\n\n576\n00:31:37.850 --> 00:31:45.510\nIf you look in here, you should find\nan entry that says ForwardToSyslog=yes.\n\n577\n00:31:45.510 --> 00:31:51.460\nAll right, if that is turned on like that,\nif that is turned on,\n\n578\n00:31:51.460 --> 00:31:56.020\nthen any log message that makes it to\njournald will also be sent to syslog.\n\n579\n00:31:56.020 --> 00:32:00.850\nAnd if syslog has rsyslog configured,\nit'll now remotely send to another system,\n\n580\n00:32:00.850 --> 00:32:04.638\nwhich is very stable, very tried and\ntrue, and's that the way I look at it.\n\n581\n00:32:04.638 --> 00:32:07.180\nIt's that journald is great,\nit's the new way,\n\n582\n00:32:07.180 --> 00:32:11.200\nbut sometimes it's better just to do\nthings like in the good old days, right?\n\n583\n00:32:11.200 --> 00:32:13.040\nAnd send back over to syslog.\n\n584\n00:32:13.040 --> 00:32:15.940\nSo, for now that's kind of\nthe way to go about it, and\n\n585\n00:32:15.940 --> 00:32:17.700\nthen in the future that might change.\n\n586\n00:32:17.700 --> 00:32:20.868\nIn the future I might come here and\nsay, forward the syslog, no.\n\n587\n00:32:20.868 --> 00:32:23.583\nDon't send to syslog,\nleave it empty, we're done with it.\n\n588\n00:32:23.583 --> 00:32:25.300\nIt might not even be installed.\n\n589\n00:32:25.300 --> 00:32:27.260\nAnd we'll let journald do\nthe remote transmission.\n\n590\n00:32:27.260 --> 00:32:30.387\nSo, that's basically what it takes\nto get that kinda set up and\n\n591\n00:32:30.387 --> 00:32:32.048\nremotely sending across.\n\n592\n00:32:32.048 --> 00:32:34.290\n&gt;&gt; Managing logs with journald.\n\n593\n00:32:34.290 --> 00:32:35.490\nAwesome information.\n\n594\n00:32:35.490 --> 00:32:38.950\nAnd before we move on to something else,\nyou have any last words?\n\n595\n00:32:39.980 --> 00:32:41.710\n&gt;&gt; That's about it.\n\n596\n00:32:41.710 --> 00:32:44.869\nObviously, there's more to journald, but\nI think we kinda covered the basics.\n\n597\n00:32:44.869 --> 00:32:46.630\nChris had a good point in the chat room.\n\n598\n00:32:46.630 --> 00:32:47.560\nI didn't mention.\n\n599\n00:32:47.560 --> 00:32:49.920\nWhen I had my text that was\nrunning off the screen,\n\n600\n00:32:49.920 --> 00:32:53.190\nI could've used my arrow keys to scroll\nover instead of stretching my window,\n\n601\n00:32:53.190 --> 00:32:55.700\nthat's important if it's a really,\nreally message, you can do that.\n\n602\n00:32:55.700 --> 00:32:58.950\nSo, when you're using journalctl and\nlooking at it,\n\n603\n00:32:58.950 --> 00:33:03.250\nit's really using the less command which\nlets you scroll up and down, left and\n\n604\n00:33:03.250 --> 00:33:05.490\nright, and you can search forward and\nbackwards.\n\n605\n00:33:05.490 --> 00:33:08.066\nForward slash to search forward,\nquestion mark to search backwards.\n\n606\n00:33:08.066 --> 00:33:10.636\nAll that functionality is there\njust like in the less command.\n\n607\n00:33:10.636 --> 00:33:13.090\nSo it's very easy to work with.\n\n608\n00:33:13.090 --> 00:33:15.440\nA lot easier than kinda like\nhaving to fuss with text files.\n\n609\n00:33:15.440 --> 00:33:17.370\nBut mess around with it.\n\n610\n00:33:17.370 --> 00:33:18.500\nDon't hate journald.\n\n611\n00:33:18.500 --> 00:33:20.817\nThere are people out there\nthat hate systemd, and\n\n612\n00:33:20.817 --> 00:33:22.702\nthey hate journald because of systemd.\n\n613\n00:33:22.702 --> 00:33:24.080\nI'll tell you, they're great systems.\n\n614\n00:33:24.080 --> 00:33:24.670\nI like them.\n\n615\n00:33:24.670 --> 00:33:26.446\nI enjoy working with them.\n\n616\n00:33:26.446 --> 00:33:29.970\nAnd they're production ready\nas far as collecting logs.\n\n617\n00:33:29.970 --> 00:33:32.500\nBut there's certain areas that\nare just not production ready,\n\n618\n00:33:32.500 --> 00:33:34.210\nand remote log shipping is one of those.\n\n619\n00:33:34.210 --> 00:33:36.960\nSo just be aware of\nthe limitations of journald, and\n\n620\n00:33:36.960 --> 00:33:39.740\ndon't go whole hog into it right now.\n\n621\n00:33:39.740 --> 00:33:41.789\nIt takes time to sift into this stuff.\n\n622\n00:33:41.789 --> 00:33:43.735\nAnd your logs are not something\nyou wanna jeopardize.\n\n623\n00:33:43.735 --> 00:33:45.085\n&gt;&gt; Great presentation as usual, Don.\n\n624\n00:33:45.085 --> 00:33:46.638\nAnd thank you, Chris, for the questions.\n\n625\n00:33:46.638 --> 00:33:50.415\nAnd there's a lot of episodes in\nthe Linux Security Techniques series.\n\n626\n00:33:50.415 --> 00:33:53.228\nMake sure you watch them all\nbecause you'll be glad you did.\n\n627\n00:33:53.228 --> 00:33:56.065\nAnd thank you for watching ITPRO.TV.\n\n628\n00:33:56.065 --> 00:33:58.355\nRemember, a good IT pro\nis always learning.\n\n629\n00:33:58.355 --> 00:33:59.345\nI'm Zach Memos.\n\n630\n00:33:59.345 --> 00:34:00.195\n&gt;&gt; And I'm Don Pezet.\n\n631\n00:34:00.195 --> 00:34:02.996\n&gt;&gt; And we will see you soon.\n\n632\n00:34:02.996 --> 00:34:08.809\n[MUSIC]\n\n633\n00:34:08.809 --> 00:34:12.711\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "230449858"
        },
        {
          "description": "Don and Zach discuss how we set a password policy for users, how all users can be affected by password policy, requiring a complex password, how we can know if our users are using a strong password, and passwords stored as non-reversible hashes.",
          "length": "1663",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-3-1-auditing_user_passwords-082117-PGM.00_31_28_05.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-3-1-auditing_user_passwords-082117-PGM.00_31_28_05.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-3-1-auditing_user_passwords-082117-PGM.00_31_28_05.Still001-sm.jpg",
          "title": "Auditing User Passwords",
          "transcript": "WEBVTT\n\n1\n00:00:00.250 --> 00:00:05.909\nWelcome to ITProTV,\nI'm your host Don [CROSSTALK].\n\n2\n00:00:05.909 --> 00:00:08.249\n[MUSIC]\n\n3\n00:00:08.249 --> 00:00:12.140\n&gt;&gt; You're watching ITProTV.\n\n4\n00:00:12.140 --> 00:00:14.220\n&gt;&gt; Hello, and thank you for\nchoosing ITProTV,\n\n5\n00:00:14.220 --> 00:00:16.220\nhelping you learn wherever you go.\n\n6\n00:00:16.220 --> 00:00:17.640\nI'm your host Zach Memos.\n\n7\n00:00:17.640 --> 00:00:20.920\nAs we continue with Linux\nsecurity techniques.\n\n8\n00:00:20.920 --> 00:00:24.550\nAnd our topic right now is\nauditing user passwords.\n\n9\n00:00:24.550 --> 00:00:28.360\nAnd the only person I know who can tell\nus how to do that is Don Pezet, and\n\n10\n00:00:28.360 --> 00:00:28.955\nhe's right here.\n\n11\n00:00:28.955 --> 00:00:30.520\n&gt;&gt; [LAUGH]\n&gt;&gt; Hey Don, good morning.\n\n12\n00:00:30.520 --> 00:00:31.230\n&gt;&gt; Good morning, Zach.\n\n13\n00:00:31.230 --> 00:00:34.062\nAnd I'm the only person cuz you\njust don't know a lot of people.\n\n14\n00:00:34.062 --> 00:00:34.680\n&gt;&gt; [LAUGH] I live in a shell.\n\n15\n00:00:34.680 --> 00:00:39.370\n&gt;&gt; Auditing user passwords,\nit is a really important task.\n\n16\n00:00:39.370 --> 00:00:42.887\nThat we need before network administrators\nand system administrators, server admins\n\n17\n00:00:42.887 --> 00:00:45.750\nand really if you're in any kind of\nsecurity role inside of Linux role.\n\n18\n00:00:45.750 --> 00:00:49.654\nThis is something you gotta pay attention\nto and really not even just Linux,\n\n19\n00:00:49.654 --> 00:00:54.610\nWindows, Mac, whatever, users are really\nbad about maintaining secure passwords.\n\n20\n00:00:54.610 --> 00:00:56.550\nSo, there's steps that we need to take.\n\n21\n00:00:56.550 --> 00:00:59.898\nOne, to make sure that people have secure\npasswords in the first place and then two,\n\n22\n00:00:59.898 --> 00:01:03.165\nto be able to double check and make sure\nthey actually are using strong passwords.\n\n23\n00:01:03.165 --> 00:01:05.863\nSo, that's what we're gonna\ntake a look at right here\n\n24\n00:01:05.863 --> 00:01:09.103\nin this episode is how we can kinda\nmanage that security concern.\n\n25\n00:01:09.103 --> 00:01:12.536\nHow we can make sure people have secure\npasswords, and how we can test and\n\n26\n00:01:12.536 --> 00:01:15.030\nverify, all right here in this episode.\n\n27\n00:01:15.030 --> 00:01:17.300\n&gt;&gt; So it makes sense, doesn't it?\n\n28\n00:01:17.300 --> 00:01:20.330\nIt really does.\nHow can we set a policy about setting\n\n29\n00:01:20.330 --> 00:01:23.090\na password that is secure for our users?\n\n30\n00:01:23.090 --> 00:01:24.690\n&gt;&gt; And\nthat's really where we need to start.\n\n31\n00:01:24.690 --> 00:01:28.090\nBecause a user can pick whatever\npassword they want, and\n\n32\n00:01:28.090 --> 00:01:31.250\na lot of Linux distros either\ndon't stop them, right?\n\n33\n00:01:31.250 --> 00:01:33.850\nIt'll let you set even a weak password,\nif you want.\n\n34\n00:01:33.850 --> 00:01:38.300\nOr it'll do a dictionary check, but beyond\nthat won't enforce any kind of complexity.\n\n35\n00:01:38.300 --> 00:01:41.370\nSo you end up with this very,\nvery simple security policy.\n\n36\n00:01:41.370 --> 00:01:43.470\nIn fact,\nif you've been watching this series,\n\n37\n00:01:43.470 --> 00:01:45.380\nthe whole Linux series\nthat we've been doing.\n\n38\n00:01:45.380 --> 00:01:47.930\nIn the installation shows,\nI kept putting in weak passwords.\n\n39\n00:01:47.930 --> 00:01:51.140\nAnd it would complain but it would let me\ndo it anyway if you just click Done twice.\n\n40\n00:01:51.140 --> 00:01:53.500\nOr whatever,\nit would let you use these weak passwords.\n\n41\n00:01:53.500 --> 00:01:57.690\nSo I do that in a lab because\nit's fine but in production,\n\n42\n00:01:57.690 --> 00:02:01.340\nin a commercial environment,\nin an enterprise, that's not fine.\n\n43\n00:02:01.340 --> 00:02:02.860\nWe need to put a rule in place.\n\n44\n00:02:02.860 --> 00:02:04.740\nWe need this put our foot down and\n\n45\n00:02:04.740 --> 00:02:08.160\nsay look, this is how you're\ngonna manage your password.\n\n46\n00:02:08.160 --> 00:02:12.720\nOne of the things we want to enforce on\nthe password policy is a password age.\n\n47\n00:02:12.720 --> 00:02:16.190\nWe don't want people to use the same\npassword for years on end, right?\n\n48\n00:02:16.190 --> 00:02:20.444\nPasswords, even strong ones, can be brute\nforced, and the more time an attacker has\n\n49\n00:02:20.444 --> 00:02:24.010\nto brute force your password,\nthe more likely it is they'll succeed.\n\n50\n00:02:24.010 --> 00:02:26.910\nSo we want to enforce time limitations.\n\n51\n00:02:26.910 --> 00:02:29.543\nAnd say you gotta change your\npassword after a certain period.\n\n52\n00:02:29.543 --> 00:02:34.940\nAnd we can do that pretty easily using the\nchage command, which is the change age.\n\n53\n00:02:34.940 --> 00:02:37.270\nAnd so\nI've got my RedHat box fired up here, and\n\n54\n00:02:37.270 --> 00:02:40.980\nactually I'm gonna switch to\nan admin Shell real quick.\n\n55\n00:02:40.980 --> 00:02:43.670\nAnd what I can do is I can come in and\nI can take the user.\n\n56\n00:02:43.670 --> 00:02:45.610\nSo, maybe I'll add a user here.\n\n57\n00:02:45.610 --> 00:02:47.219\nWhich I will just call user1.\n\n58\n00:02:47.219 --> 00:02:50.880\nAnd I want to assign\na password to that user.\n\n59\n00:02:50.880 --> 00:02:54.050\nSo I can say passwd user1.\n\n60\n00:02:54.050 --> 00:02:56.320\nAnd it's gonna ask me to pick a password.\n\n61\n00:02:56.320 --> 00:02:59.260\nNow I'm gonna put in the word password,\nall lower case.\n\n62\n00:03:00.320 --> 00:03:01.810\nAnd I get bad password.\n\n63\n00:03:01.810 --> 00:03:05.110\nThe password fails a dictionary check,\nright?\n\n64\n00:03:05.110 --> 00:03:07.294\nSo this password is not complex enough.\n\n65\n00:03:07.294 --> 00:03:09.680\nIt's just too easy to guess.\n\n66\n00:03:09.680 --> 00:03:14.204\nIt's a word straight out of\nthe dictionary and that's it, right?\n\n67\n00:03:14.204 --> 00:03:19.315\nIf I would've put in something\nlike 12345678 right well,\n\n68\n00:03:19.315 --> 00:03:21.509\nI get password's unmatched.\n\n69\n00:03:21.509 --> 00:03:24.960\nSo if I punch in 12345678,\nI get that it fails the dictionary test.\n\n70\n00:03:24.960 --> 00:03:28.860\nIt's not that it's a dictionary word,\nI just did one through eight, right,\n\n71\n00:03:28.860 --> 00:03:32.090\nit's just that it's too simplistic, and\nyou can see that little note right there.\n\n72\n00:03:32.090 --> 00:03:33.290\nOr it's systematic.\n\n73\n00:03:33.290 --> 00:03:35.970\nIt follows some kind of\neasily recognizable pattern.\n\n74\n00:03:35.970 --> 00:03:38.880\nSo the distro is kinda\nprotecting me from this.\n\n75\n00:03:38.880 --> 00:03:43.430\nProtecting me from you know using\nthis weak password in the system.\n\n76\n00:03:43.430 --> 00:03:47.860\nBut it doesn't take much, to navigate\na way from a dictionary attack.\n\n77\n00:03:47.860 --> 00:03:54.350\nAnd in fact, if i go in and\ntype 12345678 again, see what I did?\n\n78\n00:03:54.350 --> 00:03:57.070\nIt let me assign it so it's\n\n79\n00:03:57.070 --> 00:04:00.940\nletting me put in this weak password even\nthough it's warning me that it's weak.\n\n80\n00:04:00.940 --> 00:04:02.970\nIt let me do it anyway.\n\n81\n00:04:02.970 --> 00:04:05.950\nAnd that's what happens with a lot\nof distros that are out there.\n\n82\n00:04:05.950 --> 00:04:08.710\nThey don't enforce\nthe password restrictions.\n\n83\n00:04:08.710 --> 00:04:14.230\nNow I just created a user and\nthat user has a weak password and\n\n84\n00:04:14.230 --> 00:04:16.460\nI don't necessarily know that\nas an administrator right?\n\n85\n00:04:16.460 --> 00:04:21.670\nSo I need to create a policy that kind\nof teaches them to become more secure.\n\n86\n00:04:21.670 --> 00:04:23.410\nAnd I'm gonna start with password age.\n\n87\n00:04:23.410 --> 00:04:28.280\nThe chage command is the first step\nin creating a good security policy.\n\n88\n00:04:28.280 --> 00:04:30.010\nI can apply restrictions on to that user.\n\n89\n00:04:30.010 --> 00:04:33.449\nThey say your password can only be so\nmany days old and it has to be reset.\n\n90\n00:04:33.449 --> 00:04:35.200\n&gt;&gt; Mm-hm.\n\n91\n00:04:35.200 --> 00:04:37.630\n&gt;&gt; If you pull up the main page, there's\na lot of good information in there but\n\n92\n00:04:37.630 --> 00:04:39.580\nthe basics of the command work like this.\n\n93\n00:04:39.580 --> 00:04:43.480\nI can say chage -l followed by a user.\n\n94\n00:04:43.480 --> 00:04:48.117\nSo I'll do user1 and it's gonna show\nme what they're currently set at.\n\n95\n00:04:48.117 --> 00:04:52.150\nHere's where I can see how long it's been\nsince the user changed their password.\n\n96\n00:04:52.150 --> 00:04:56.120\nAnd when I look at this user, password\nnever expires, right, so that means they\n\n97\n00:04:56.120 --> 00:05:00.340\ncan have the same password as long as\nthey want and it's never going to expire.\n\n98\n00:05:00.340 --> 00:05:02.160\nNumber of days between password change, 0.\n\n99\n00:05:02.160 --> 00:05:08.063\nNumber of days between, or maximum number\nof days between password change 99999.\n\n100\n00:05:08.063 --> 00:05:11.778\nThis is set to several decades right?\n\n101\n00:05:11.778 --> 00:05:13.750\n&gt;&gt; Good.\n&gt;&gt; So the user is not going to be required\n\n102\n00:05:13.750 --> 00:05:15.134\nto change that password.\n\n103\n00:05:15.134 --> 00:05:20.030\nNever going to expire and number of\ndays of warning before expire, 7 days.\n\n104\n00:05:20.030 --> 00:05:21.973\nBefore 100,000 days from now.\n\n105\n00:05:21.973 --> 00:05:23.135\n[LAUGH] So 999,990 days.\n\n106\n00:05:23.135 --> 00:05:27.998\n&gt;&gt; We do have a magic elixir by then,\nso you'll be fine.\n\n107\n00:05:27.998 --> 00:05:32.902\n&gt;&gt; Yeah, so they'll get a warning so\nI can see right here this is just\n\n108\n00:05:32.902 --> 00:05:36.751\nnot really enforcing\nanything great on this user.\n\n109\n00:05:36.751 --> 00:05:39.910\nThey got a weak password and\nthey can use it forever now.\n\n110\n00:05:39.910 --> 00:05:45.260\nSo I can say chage and\nthen I can specify a minimum day and\n\n111\n00:05:45.260 --> 00:05:47.380\na maximum day that I want\nthis password to survive.\n\n112\n00:05:47.380 --> 00:05:50.010\nNow the maximum days is what\nwe normally think of right?\n\n113\n00:05:50.010 --> 00:05:52.480\nI want them to change their\npasswords every 90 days.\n\n114\n00:05:52.480 --> 00:05:55.670\nEvery three months, you've got to change\nyour password that's not too bad.\n\n115\n00:05:55.670 --> 00:05:58.530\nYou do it every one month you'll really\nannoy the users that they'll start writing\n\n116\n00:05:58.530 --> 00:06:01.720\nit on post-it notes, if you do it too\nlong you start to lose the effectiveness.\n\n117\n00:06:01.720 --> 00:06:03.175\nSo you've got to find a happy medium.\n\n118\n00:06:03.175 --> 00:06:05.240\nI'm gonna say 90 days, right.\n\n119\n00:06:05.240 --> 00:06:09.201\nNow a capital M is the maximum days,\nyou can do a lower case m,\n\n120\n00:06:09.201 --> 00:06:13.420\nwhich is the minimum days and\nI'm gonna set my minimum day to 1.\n\n121\n00:06:13.420 --> 00:06:16.980\nIf they change their password,\nthey have to use that password for\n\n122\n00:06:16.980 --> 00:06:19.061\nat least 24 hours, right, 1 day.\n\n123\n00:06:19.061 --> 00:06:22.110\nNow, why would I set a minimum?\n\n124\n00:06:22.110 --> 00:06:25.320\nWell, you don't want somebody\nrapidly changing their password,\n\n125\n00:06:25.320 --> 00:06:27.720\nwe might set a password reuse policy,\n\n126\n00:06:27.720 --> 00:06:33.410\nthis is you can't re-use the password for\nfive iterations, right?\n\n127\n00:06:33.410 --> 00:06:37.125\nSo they have to use five different\npasswords before they can go back and\n\n128\n00:06:37.125 --> 00:06:38.460\nre-use the first one.\n\n129\n00:06:38.460 --> 00:06:42.502\nWell, if I've got a 90 day password\nexpiration, three months, and they can't\n\n130\n00:06:42.502 --> 00:06:46.508\nreuse the password for five iterations,\nthat means 50 months for that to go by.\n\n131\n00:06:46.508 --> 00:06:51.380\nOr a little over a year before they can\ngo back and reuse that first password.\n\n132\n00:06:51.380 --> 00:06:54.747\nBut if I don't set a minimum password\ninterval here, they could just say,\n\n133\n00:06:54.747 --> 00:06:56.838\nall right,\nit's time to change my password.\n\n134\n00:06:56.838 --> 00:07:00.899\nI'm gonna change it five times, and\njust change it over and over and over,\n\n135\n00:07:00.899 --> 00:07:05.110\nuntil they can get back to their original\npassword to beat that reuse policy.\n\n136\n00:07:05.110 --> 00:07:08.580\nSo by setting a minimum of one day,\nthey would have to reset it once a day for\n\n137\n00:07:08.580 --> 00:07:10.350\nfive days to be able to\nget all the way back and\n\n138\n00:07:10.350 --> 00:07:13.550\nthat would annoy them as much as\nanything so that's not gonna happen.\n\n139\n00:07:13.550 --> 00:07:18.390\nSo I'm setting a minimum of 1 day and\na maximum of 90 days.\n\n140\n00:07:18.390 --> 00:07:20.690\nI can set an expiration day and\n\n141\n00:07:20.690 --> 00:07:25.040\nthis is really handy cuz in this case,\nI made up this user's password.\n\n142\n00:07:25.040 --> 00:07:28.010\nAnd if I'm gonna give this account\nto the user, and I say hey,\n\n143\n00:07:28.010 --> 00:07:33.010\nyour password's 12345678, then they\nmight use that password for 90 days.\n\n144\n00:07:33.010 --> 00:07:33.970\nAnd I might not want that.\n\n145\n00:07:33.970 --> 00:07:36.920\nI could say -e and\nexpire the password tomorrow.\n\n146\n00:07:36.920 --> 00:07:38.730\nAnd so nope,\nthat password's gonna expire tomorrow.\n\n147\n00:07:38.730 --> 00:07:41.130\nYou've got to change it by\nthe end of the day tomorrow.\n\n148\n00:07:41.130 --> 00:07:43.830\nAnd you would just say -e and\nthen specify a date.\n\n149\n00:07:43.830 --> 00:07:47.090\nAnd you kinda see how that\ndate format is up there.\n\n150\n00:07:47.090 --> 00:07:49.360\nBut you can put the date in\nin several different formats.\n\n151\n00:07:49.360 --> 00:07:53.479\nI'll just say August 22, 2017.\n\n152\n00:07:53.479 --> 00:07:56.295\nAnd I don't think this one needs the time\ninterval, so I'll leave that out.\n\n153\n00:07:56.295 --> 00:07:59.879\nSometimes they need the hour,\nminute, second interval as well.\n\n154\n00:07:59.879 --> 00:08:03.101\nAnd then lastly, I can set the warn days.\n\n155\n00:08:03.101 --> 00:08:06.380\nI want to warn the user,\nafter a certain period of time has passed,\n\n156\n00:08:06.380 --> 00:08:08.440\nthat they need to change their password.\n\n157\n00:08:08.440 --> 00:08:09.750\nAnd I'll stick with seven days,\nthat's fine.\n\n158\n00:08:09.750 --> 00:08:13.740\nSo if their password normally\nwould expire in 90 days,\n\n159\n00:08:13.740 --> 00:08:17.720\nin 83 days they'll start getting a warning\nevery time they log in that it's about\n\n160\n00:08:17.720 --> 00:08:18.890\ntime to change their password.\n\n161\n00:08:18.890 --> 00:08:21.170\nHopefully we encourage them\nto change the password early.\n\n162\n00:08:21.170 --> 00:08:25.853\nAnd then after that I just specify the\nuser, and then I'll reach in and do it.\n\n163\n00:08:25.853 --> 00:08:28.053\nIt looks like I messed up\nthe date on this one, so\n\n164\n00:08:28.053 --> 00:08:30.538\nit's complaining a little\nbit about my option here.\n\n165\n00:08:30.538 --> 00:08:37.480\nInvalid date Aug, so let me just put\nthat in as just a standard date.\n\n166\n00:08:37.480 --> 00:08:42.297\nI'll do 09/22/2017, there we go,\nthat'll make it happy.\n\n167\n00:08:42.297 --> 00:08:46.020\nAll right,\nnow that I've got that assigned,\n\n168\n00:08:46.020 --> 00:08:49.950\nI can verify it with that chage-l user1.\n\n169\n00:08:49.950 --> 00:08:54.530\nAnd I can look, and now I can see\nthe last password change was today.\n\n170\n00:08:54.530 --> 00:08:56.815\nI can see the password\nexpires November 19th, so\n\n171\n00:08:56.815 --> 00:09:01.400\nthat's 90 days from now,\nthe password has never been inactive.\n\n172\n00:09:01.400 --> 00:09:03.730\nI can see the account\nexpires September 22nd.\n\n173\n00:09:03.730 --> 00:09:08.270\nShoot, I put in 9/22 instead of 8/22,\nI forgot what month I was in.\n\n174\n00:09:08.270 --> 00:09:11.570\nSo it's gonna expire a month from now,\nbut we can fix that easy enough.\n\n175\n00:09:11.570 --> 00:09:13.000\nLet me go back in here and change.\n\n176\n00:09:14.550 --> 00:09:17.421\nSee, if I paid more attention in\nelementary school and learned my months.\n\n177\n00:09:17.421 --> 00:09:19.160\n&gt;&gt; I thought you were testing us,\nactually [LAUGH].\n\n178\n00:09:19.160 --> 00:09:20.970\n&gt;&gt; Well, let's do it that way.\n\n179\n00:09:20.970 --> 00:09:25.005\nWe always wanna do chage-l\nto verify our changes.\n\n180\n00:09:25.005 --> 00:09:26.290\n[LAUGH] There we go.\n\n181\n00:09:26.290 --> 00:09:29.550\nSo now I can see it does expire\ntomorrow like I wanted it to expire.\n\n182\n00:09:29.550 --> 00:09:33.210\nAnd then the number of days between\nchanges has been set the way I want.\n\n183\n00:09:33.210 --> 00:09:36.382\nSo now I've got that password policy,\nI've got it put in place.\n\n184\n00:09:36.382 --> 00:09:42.190\nAnd I know that User1 will be changing\ntheir password every 90 days, like I want.\n\n185\n00:09:42.190 --> 00:09:44.850\n&gt;&gt; Now Don,\nactually a couple of questions for you.\n\n186\n00:09:44.850 --> 00:09:47.260\nI worked for a company that\nthey had that password change,\n\n187\n00:09:47.260 --> 00:09:48.960\nit was every three months.\n\n188\n00:09:48.960 --> 00:09:52.740\nThere was a time where I let it lapse,\nI was locked out.\n\n189\n00:09:52.740 --> 00:09:54.190\nThat's bad, right?\n\n190\n00:09:54.190 --> 00:09:57.050\n&gt;&gt; Well,\nit depends on who it's bad for, right?\n\n191\n00:09:57.050 --> 00:09:59.320\nAs administrator it's not bad for\nus, it's great, it's perfect.\n\n192\n00:09:59.320 --> 00:10:02.850\nThis user didn't change their password,\nthey will be locked out after 90 days.\n\n193\n00:10:02.850 --> 00:10:04.380\nThey won't be able to log in.\n\n194\n00:10:04.380 --> 00:10:06.993\nIf they log in, they will have to\nchange their password immediately.\n\n195\n00:10:06.993 --> 00:10:10.360\nAnd if they don't change their password,\nit just kicks them out again, right?\n\n196\n00:10:10.360 --> 00:10:13.210\nSo it is effectively forcing\nthem to be logged out.\n\n197\n00:10:15.300 --> 00:10:17.160\nSorry, forcing them to\nchange their password or\n\n198\n00:10:17.160 --> 00:10:18.850\nbe logged out,\nthat's usually a good thing.\n\n199\n00:10:18.850 --> 00:10:20.440\n&gt;&gt; And it took an admin to fix that up.\n\n200\n00:10:20.440 --> 00:10:23.100\nNow the second part of my question is,\nwhat you were just discussing,\n\n201\n00:10:23.100 --> 00:10:25.790\ncan that affect all\nusers across the board?\n\n202\n00:10:25.790 --> 00:10:27.780\n&gt;&gt; Sure, well, yes and no [LAUGH].\n\n203\n00:10:27.780 --> 00:10:30.900\nThe chage command,\nwe use that to modify the policy for\n\n204\n00:10:30.900 --> 00:10:33.380\none user,\nwhich is what I just did right here.\n\n205\n00:10:33.380 --> 00:10:36.880\nBut what if this is a directory server and\nI've got 1,000 users?\n\n206\n00:10:36.880 --> 00:10:40.450\nWell, the directory service will\nlikely manage your password policy.\n\n207\n00:10:40.450 --> 00:10:44.660\nBut you might have a scenario where you\nhave a number of user accounts right here,\n\n208\n00:10:44.660 --> 00:10:46.770\njust local Linux user accounts.\n\n209\n00:10:46.770 --> 00:10:49.530\nAnd when local Linux user accounts,\nwhen you create them\n\n210\n00:10:49.530 --> 00:10:54.720\nthey get their password policy from a file\ncalled login.defs, or log in definitions.\n\n211\n00:10:54.720 --> 00:10:56.750\nIt's a little file,\nlet me pull it up here.\n\n212\n00:10:56.750 --> 00:11:00.719\nIt's in /etc/login.defs.\n\n213\n00:11:00.719 --> 00:11:04.420\nThat's login, actually I think it's\nlogin defaults is what that stands for.\n\n214\n00:11:04.420 --> 00:11:06.420\nAnd if you take a look\ninside your login defaults,\n\n215\n00:11:06.420 --> 00:11:09.310\nhere's where it determines where\nyour email would be stored,\n\n216\n00:11:09.310 --> 00:11:11.650\nwhere your home directory's gonna be,\nthat kind of thing.\n\n217\n00:11:11.650 --> 00:11:15.610\nBut also, right here is where\nthe password policy is coming from.\n\n218\n00:11:15.610 --> 00:11:18.308\nAnd I can come in and\nchange this and just say,\n\n219\n00:11:18.308 --> 00:11:22.216\nI want the password maximum days to be 90,\nthe minimum to be 1.\n\n220\n00:11:22.216 --> 00:11:24.280\nI can set a minimum password length.\n\n221\n00:11:24.280 --> 00:11:27.295\nNow, I couldn't do that with chage,\nit just dealt with the async command, but\n\n222\n00:11:27.295 --> 00:11:28.871\nhere I can set a minimum password length.\n\n223\n00:11:28.871 --> 00:11:30.835\nI'm gonna require eight characters.\n\n224\n00:11:30.835 --> 00:11:33.646\nSo I'm gonna bump that up and\nmake it a stronger password, and\n\n225\n00:11:33.646 --> 00:11:36.150\nthen a password warning age,\nI'll leave it at seven.\n\n226\n00:11:36.150 --> 00:11:40.670\nSo now that I've got those set,\nas I create new users, so\n\n227\n00:11:40.670 --> 00:11:44.020\nif I do a user_add user2, right?\n\n228\n00:11:44.020 --> 00:11:48.390\nAnd I'll do a passwd user2, and for\n\n229\n00:11:48.390 --> 00:11:52.370\nthis user I'll just set their password\nto the word password, all lowercase.\n\n230\n00:11:52.370 --> 00:11:54.950\nIt's warning me that it's bad, but\nit let me do it anyway, right?\n\n231\n00:11:54.950 --> 00:11:58.489\nThe word password is eight characters,\nso it's okay.\n\n232\n00:11:58.489 --> 00:12:03.643\nAnd if I do a chage-l for user2,\nI can take a look at the user,\n\n233\n00:12:03.643 --> 00:12:08.850\nand see how they got all\nthe values that we set for user1?\n\n234\n00:12:08.850 --> 00:12:11.070\nAnd that's because I had\nto find it in login.defs,\n\n235\n00:12:11.070 --> 00:12:13.375\ndidn't have to restart any service or\nanything like that.\n\n236\n00:12:13.375 --> 00:12:15.770\nUser_add reads from this\nfile when you add a user.\n\n237\n00:12:15.770 --> 00:12:17.940\nAnd so now,\nas I continue to add more users,\n\n238\n00:12:17.940 --> 00:12:20.595\nthey're gonna continue to\npull it from right there.\n\n239\n00:12:20.595 --> 00:12:25.501\nAnd if I do like a user_add user3 and\n\n240\n00:12:25.501 --> 00:12:29.940\ntry and set user3's password.\n\n241\n00:12:29.940 --> 00:12:33.950\nWhoops, I spell the command right,\npasswd user3.\n\n242\n00:12:33.950 --> 00:12:38.260\nAnd I just try and\nset it to something like pass, right?.\n\n243\n00:12:38.260 --> 00:12:42.595\nWell, it's too short, and I got a warning\nthe password is shorter than eight\n\n244\n00:12:42.595 --> 00:12:44.810\ncharacters, but it still let me do it.\n\n245\n00:12:44.810 --> 00:12:46.902\n&gt;&gt; [LAUGH]\n&gt;&gt; It still let me do it because I'm\n\n246\n00:12:46.902 --> 00:12:48.110\nthe root user.\n\n247\n00:12:48.110 --> 00:12:50.930\nAnd the root user,\nit will let you break that policy.\n\n248\n00:12:50.930 --> 00:12:54.030\nIf that user tried to set a password\nlower than eight characters,\n\n249\n00:12:54.030 --> 00:12:54.740\nit wouldn't let them.\n\n250\n00:12:54.740 --> 00:12:56.590\nBut because I'm a root user,\nI'm allowed to do it.\n\n251\n00:12:56.590 --> 00:13:01.010\nAnd so in this case, I have bumped\nthat down and it let me do it.\n\n252\n00:13:01.010 --> 00:13:04.920\nSo now that user has a very weak password,\nbut that's what I've assigned.\n\n253\n00:13:04.920 --> 00:13:09.378\nBut at least we know that they'll\nhave to change it within 90 days.\n\n254\n00:13:09.378 --> 00:13:11.090\n[LAUGH] So they'll be weak for\nthree months.\n\n255\n00:13:11.090 --> 00:13:12.754\nBut eventually they'll\nhave to change that.\n\n256\n00:13:12.754 --> 00:13:15.652\n&gt;&gt; Okay, so I think we're all in agreement\nthat we need a complex password,\n\n257\n00:13:15.652 --> 00:13:16.600\nthat just makes sense.\n\n258\n00:13:16.600 --> 00:13:20.020\nSo what about requiring\nthe complex password?\n\n259\n00:13:20.020 --> 00:13:22.511\n&gt;&gt; Okay, we can certainly do that,\nnot here in this file,\n\n260\n00:13:22.511 --> 00:13:24.585\ncuz god forbid all this\nwas in one place [LAUGH].\n\n261\n00:13:24.585 --> 00:13:25.350\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n262\n00:13:25.350 --> 00:13:28.690\nwe saw it changing the password\nages on the user, and\n\n263\n00:13:28.690 --> 00:13:33.560\nthen we saw changing the default\npassword ages in policy and the length.\n\n264\n00:13:33.560 --> 00:13:35.150\nBut nothing about complexity, right?\n\n265\n00:13:35.150 --> 00:13:39.010\nSo if we wanna do complexity,\nthat's done in a different place.\n\n266\n00:13:39.010 --> 00:13:40.847\nAnd if anything,\nif you have a directory server,\n\n267\n00:13:40.847 --> 00:13:42.262\nyou'd do it on the directory server.\n\n268\n00:13:42.262 --> 00:13:43.763\nBut with local user accounts,\n\n269\n00:13:43.763 --> 00:13:48.080\nthere's actually another configuration\nfile tucked away inside of ETC.\n\n270\n00:13:48.080 --> 00:13:53.670\nIf you go in /etc/security, inside of\nthat folder you'll find a bunch of stuff.\n\n271\n00:13:53.670 --> 00:14:00.970\nBut what I'm looking forward in here is\npwquality.comf, that file right there.\n\n272\n00:14:00.970 --> 00:14:05.030\nThat file has the password\nquality configuration.\n\n273\n00:14:05.030 --> 00:14:08.775\nAnd this is where we can come in and we\ncan tell the system exactly what we want\n\n274\n00:14:08.775 --> 00:14:11.040\nour users to be doing for\npassword strength.\n\n275\n00:14:11.040 --> 00:14:16.436\nIf I go into /etc/security/pwquality.comf,\nthe file,\n\n276\n00:14:16.436 --> 00:14:21.070\nby default,\nwill have everything commented out.\n\n277\n00:14:21.070 --> 00:14:25.120\nIf I scroll down this file, every line\nhas a pound symbol at the very beginning,\n\n278\n00:14:25.120 --> 00:14:28.100\nwhich means every line is being ignored,\nright?\n\n279\n00:14:28.100 --> 00:14:31.460\nSo there is no password\ncomplexity configured by default.\n\n280\n00:14:31.460 --> 00:14:35.750\nI need to get in and set it up myself and\ntell it what I wanna do.\n\n281\n00:14:35.750 --> 00:14:37.270\nAnd I'll be honest with you guys,\n\n282\n00:14:37.270 --> 00:14:42.100\nthis is one of the most confusing systems\naround for how to configure this.\n\n283\n00:14:42.100 --> 00:14:44.760\nSo let me give you a quick run\nthrough on how this works.\n\n284\n00:14:44.760 --> 00:14:46.200\nAs you look down the line,\n\n285\n00:14:46.200 --> 00:14:49.681\nyou'll notice that a lot of\nthe settings are well documented.\n\n286\n00:14:49.681 --> 00:14:52.705\nAnd they're explained pretty well,\nlike here, number of characters in the new\n\n287\n00:14:52.705 --> 00:14:55.260\npassword that must not be\npresent in the old password.\n\n288\n00:14:55.260 --> 00:14:57.140\nThis is the way that we can\nenforce people to change.\n\n289\n00:14:57.140 --> 00:15:01.730\nWe used to bump into this where somebody\nwould set their password to gators123.\n\n290\n00:15:01.730 --> 00:15:05.179\nAnd then their password would expire and\nthe next month they would say, okay,\n\n291\n00:15:05.179 --> 00:15:06.601\nI'll make it gators1234.\n\n292\n00:15:06.601 --> 00:15:09.010\nOr gators321,\nit's the same basic password.\n\n293\n00:15:09.010 --> 00:15:11.370\nThey just changed a little bit of it,\nand this is where we can prevent that.\n\n294\n00:15:11.370 --> 00:15:14.330\nWe can tell them, you gotta have\na certain number of characters that\n\n295\n00:15:14.330 --> 00:15:15.780\nare now different.\n\n296\n00:15:15.780 --> 00:15:18.900\nYou can set the maximum\nacceptable size for the password,\n\n297\n00:15:18.900 --> 00:15:21.500\nyou can set the minimum size.\n\n298\n00:15:21.500 --> 00:15:24.520\nYou can set whether it has\nto have numbers, right?\n\n299\n00:15:24.520 --> 00:15:28.660\nSo we have digits, we have uppercase\ncharacters, lowercase characters, and\n\n300\n00:15:28.660 --> 00:15:29.725\nother characters.\n\n301\n00:15:29.725 --> 00:15:33.424\nWhich would be special characters like\npunctuation marks, the at symbol,\n\n302\n00:15:33.424 --> 00:15:36.010\nthings like that,\nwould fall under other credits.\n\n303\n00:15:36.010 --> 00:15:40.220\nSo as we look at this stuff,\nit doesn't seem very difficult, right?\n\n304\n00:15:40.220 --> 00:15:43.826\nI can just come in and change it, and\na lot of these say like, ucredit=1.\n\n305\n00:15:43.826 --> 00:15:46.010\nSo that's uppercase character.\n\n306\n00:15:46.010 --> 00:15:47.010\nIf I set that to 1,\n\n307\n00:15:47.010 --> 00:15:49.950\nthen I must be requiring at least\none uppercase character, right?\n\n308\n00:15:49.950 --> 00:15:51.520\nWell, not exactly.\n\n309\n00:15:51.520 --> 00:15:52.307\n&gt;&gt; [LAUGH].\n\n310\n00:15:52.307 --> 00:15:55.325\n&gt;&gt; This works on a credit system,\nand the credit system is weird.\n\n311\n00:15:55.325 --> 00:16:00.831\nBasically what you doCommands\nThey have to have a certain\n\n312\n00:16:00.831 --> 00:16:07.260\namount of credits in order for\nthem to have a valid password.\n\n313\n00:16:07.260 --> 00:16:12.010\nAnd the credits are defined up here,\nunder minimum length.\n\n314\n00:16:12.010 --> 00:16:14.400\nI know when we see that, we think\nminimum length as a password length.\n\n315\n00:16:14.400 --> 00:16:18.430\nSo if I have an eight character\npassword then a min lin of eight would\n\n316\n00:16:18.430 --> 00:16:19.390\nmean I'm okay.\n\n317\n00:16:19.390 --> 00:16:22.540\nBut minimum link is actually\nit should be renamed,\n\n318\n00:16:22.540 --> 00:16:24.400\nit should be called minimum credit.\n\n319\n00:16:24.400 --> 00:16:29.040\nHow many credits do you need in\norder to have a valid password?\n\n320\n00:16:29.040 --> 00:16:32.853\nIf I set and\nif it sounds confusing it's because it is.\n\n321\n00:16:32.853 --> 00:16:34.430\n[LAUGH] It's just not worded very well.\n\n322\n00:16:34.430 --> 00:16:39.640\nBut if I set a minimum\nlength of eight like that.\n\n323\n00:16:39.640 --> 00:16:43.670\nI'm saying that I need eight credits,\nright, well,\n\n324\n00:16:43.670 --> 00:16:47.830\nby default every character you\ntype counts for one credit.\n\n325\n00:16:47.830 --> 00:16:48.450\n&gt;&gt; That makes sense.\n\n326\n00:16:48.450 --> 00:16:52.130\n&gt;&gt; So if I type eight letters,\nI'll get eight credits.\n\n327\n00:16:52.130 --> 00:16:55.443\nIf I type eight numbers, or eight special\ncharacters, or a mixture of them,\n\n328\n00:16:55.443 --> 00:16:59.284\nit's eight characters, I get eight\ncredits and so I meet the minimum length.\n\n329\n00:16:59.284 --> 00:17:01.270\nSo from that perspective,\n\n330\n00:17:01.270 --> 00:17:05.130\nI just set this one value, then it's\ntrue I am setting a minimum length.\n\n331\n00:17:06.150 --> 00:17:11.750\nBut that changes the moment I mess with\nany of these other values down here.\n\n332\n00:17:11.750 --> 00:17:15.100\nThese other values are sending\nadditional credits that I get.\n\n333\n00:17:16.330 --> 00:17:19.190\nFor example this next one is digits.\n\n334\n00:17:19.190 --> 00:17:23.530\nHow many digits do I get or\nhow many credits do I get for a digit?\n\n335\n00:17:23.530 --> 00:17:28.960\nIf I set that to one,\nif I say decredit =1,\n\n336\n00:17:28.960 --> 00:17:33.520\nthen for\nevery number I type I get a credit.\n\n337\n00:17:33.520 --> 00:17:36.790\nI get a credit for the character and\nI get a credit for the number,\n\n338\n00:17:36.790 --> 00:17:40.280\nI just get two credits,\nI get two credits for typing a number.\n\n339\n00:17:40.280 --> 00:17:42.630\nIf I make that at two,\nnow I get three credits.\n\n340\n00:17:42.630 --> 00:17:44.300\nI get one credit for being a character and\n\n341\n00:17:44.300 --> 00:17:46.600\nthen two more credits for\nit being a number.\n\n342\n00:17:46.600 --> 00:17:50.954\nSo now,\nif I bump this value up sufficiently high,\n\n343\n00:17:50.954 --> 00:17:55.934\nlet's say I make it four,\nI can set my password to 100.\n\n344\n00:17:55.934 --> 00:17:57.214\nOne, zero, zero.\n\n345\n00:17:57.214 --> 00:18:00.124\nI would get three credits for\nthe characters and\n\n346\n00:18:00.124 --> 00:18:02.970\nthen I would get 12 credits for\nthe numbers.\n\n347\n00:18:02.970 --> 00:18:06.190\nI have the strongest password in the world\nas far as min length was concerned.\n\n348\n00:18:06.190 --> 00:18:08.560\nI would have a password\nthat was well over that.\n\n349\n00:18:08.560 --> 00:18:10.150\nIn fact, I could just do two numbers.\n\n350\n00:18:10.150 --> 00:18:10.960\nI could say 99.\n\n351\n00:18:10.960 --> 00:18:12.310\nThat's my password, right?\n\n352\n00:18:12.310 --> 00:18:15.850\nI would get two credits for the characters\nand then eight credits for the numbers.\n\n353\n00:18:15.850 --> 00:18:18.320\nI got a ten length now.\n\n354\n00:18:18.320 --> 00:18:23.650\nSo that's not truly the password length\nit's the amount of credits I have to have.\n\n355\n00:18:23.650 --> 00:18:26.240\nSo be careful as you go through and\nset this.\n\n356\n00:18:26.240 --> 00:18:30.290\nAnd I'll tell you, there's really no value\nin setting these numbers to anything high.\n\n357\n00:18:30.290 --> 00:18:34.460\nWhat you really wanna do is you wanna\nuse a special setting that's not\n\n358\n00:18:34.460 --> 00:18:35.520\nvery well documented in here.\n\n359\n00:18:35.520 --> 00:18:37.550\nIn fact, I don't think it's\ndocumented in here at all, but\n\n360\n00:18:37.550 --> 00:18:40.070\nit's the one that I use in\nthe real world everywhere.\n\n361\n00:18:40.070 --> 00:18:43.890\nThey tell you, as you look down here,\nbut it'll say this check is disabled and\n\n362\n00:18:43.890 --> 00:18:44.530\nthe value is zero.\n\n363\n00:18:44.530 --> 00:18:47.000\nBut they don't really tell what\nother values you can put in there.\n\n364\n00:18:47.000 --> 00:18:49.910\nAnd at first glance it looks like we\ncan only put positive numbers in.\n\n365\n00:18:49.910 --> 00:18:52.170\nBut you can actually put\na negative one in as a value.\n\n366\n00:18:52.170 --> 00:18:54.120\nAnd let me tell what that does.\n\n367\n00:18:54.120 --> 00:18:58.440\nA negative one says you don't get any\nextra credits for this character.\n\n368\n00:18:58.440 --> 00:19:01.450\nBut you still have to have this character.\n\n369\n00:19:01.450 --> 00:19:04.680\nSo if I want a minimum\npassword length of eight,\n\n370\n00:19:04.680 --> 00:19:07.245\nI'll set that as min length = 8, right?\n\n371\n00:19:07.245 --> 00:19:09.410\nThere's my minimum length of eight.\n\n372\n00:19:09.410 --> 00:19:14.220\nAnd I'll come through and I'll say if\nI wanna require at least one number\n\n373\n00:19:14.220 --> 00:19:19.040\nthen I can set that to -1, Dcredit =-1.\n\n374\n00:19:19.040 --> 00:19:22.980\nYou'll get extra credit for a number but\nyou've got to have a number.\n\n375\n00:19:22.980 --> 00:19:25.360\nIf I set it to zero,\nI don't have to have numbers anymore.\n\n376\n00:19:25.360 --> 00:19:26.840\nBut in negative one, I've gotta have it.\n\n377\n00:19:26.840 --> 00:19:29.523\nAnd then if I wanna have\nan uppercase letter?\n\n378\n00:19:29.523 --> 00:19:33.916\nI can say ucredit = -1.\n\n379\n00:19:33.916 --> 00:19:36.340\nAnd then if I wanna reply lowercase,\nthe same thing.\n\n380\n00:19:36.340 --> 00:19:41.940\nWe'll just say lcredit = -1 and\nthen the special characters or\n\n381\n00:19:41.940 --> 00:19:47.780\nother characters, all set to ocredit=-1.\n\n382\n00:19:47.780 --> 00:19:50.610\nBy doing that,\nI have a minimum length of eight,\n\n383\n00:19:50.610 --> 00:19:52.540\nyou gotta type at least eight characters.\n\n384\n00:19:52.540 --> 00:19:57.110\nAnd then,\nI have to have a special character,\n\n385\n00:19:57.110 --> 00:20:00.510\na number, an uppercase character and\na lowercase character.\n\n386\n00:20:00.510 --> 00:20:04.580\nIf I don't I don't meet\nthe credit requirement and\n\n387\n00:20:04.580 --> 00:20:06.970\nthen I fail to create a password.\n\n388\n00:20:06.970 --> 00:20:08.090\nIt won't let me assign it.\n\n389\n00:20:08.090 --> 00:20:11.150\nSo negative ones are really\nthe only things I ever use in here.\n\n390\n00:20:11.150 --> 00:20:13.950\nI never said, I'd only get 72 credits for\nusing special care.\n\n391\n00:20:13.950 --> 00:20:15.690\nIt just doesn't make a lot of sense to me.\n\n392\n00:20:15.690 --> 00:20:16.310\nYou certainly can.\n\n393\n00:20:16.310 --> 00:20:18.290\nYou can build a really\ncustomized policy here.\n\n394\n00:20:18.290 --> 00:20:22.740\nBut once you get all of this set,\nnow it's defined the way that we want.\n\n395\n00:20:22.740 --> 00:20:25.210\nAnd in fact, I came through and\ndid negative one on all of these.\n\n396\n00:20:25.210 --> 00:20:29.320\nIf I'm going to use all of them you can\ncome down here minimum number of classes\n\n397\n00:20:29.320 --> 00:20:30.810\nand I can set that to four.\n\n398\n00:20:30.810 --> 00:20:35.520\nFour would say you gotta have at least one\ndigit one upper case one lower case and\n\n399\n00:20:35.520 --> 00:20:38.270\none other to meet the minimum\nnumber of classes.\n\n400\n00:20:38.270 --> 00:20:40.860\nAnd then if I had\na minimum length of eight.\n\n401\n00:20:40.860 --> 00:20:44.970\nThen we would require at least eight\ncharacters and one of each class.\n\n402\n00:20:44.970 --> 00:20:46.320\nSo you could do it that way as well.\n\n403\n00:20:46.320 --> 00:20:49.070\nSo all different ways of\nkind of setting this but\n\n404\n00:20:49.070 --> 00:20:52.120\njust be careful with this file\ncuz it's super confusing.\n\n405\n00:20:52.120 --> 00:20:56.110\nWhen you look at this file, it's just\nstructured odd and it's because it's\n\n406\n00:20:56.110 --> 00:21:00.150\nevolved so much over the years from what\nit originally was to what it is now.\n\n407\n00:21:00.150 --> 00:21:04.360\nBut once you've got that credit system\nset up, now when the users come in and\n\n408\n00:21:04.360 --> 00:21:05.540\nstart to create their accounts and\n\n409\n00:21:05.540 --> 00:21:09.320\nset their passwords, they'll be held\nto a password complexity requirement.\n\n410\n00:21:09.320 --> 00:21:11.010\nSo, I'm gonna save that file.\n\n411\n00:21:11.010 --> 00:21:16.590\nAnd just remember,\nthat was /etc/security/pwquality.pub.\n\n412\n00:21:16.590 --> 00:21:17.710\n&gt;&gt; Perfect, so\n\n413\n00:21:17.710 --> 00:21:21.780\nhow we know if our users are actually\nusing complex passwords afterall?\n\n414\n00:21:21.780 --> 00:21:27.860\n&gt;&gt; This is the tricky part because when\nsomebody sets a password it gets stored,\n\n415\n00:21:27.860 --> 00:21:33.260\nwell it used to get stored in /etc/passwd,\nright?\n\n416\n00:21:33.260 --> 00:21:34.580\nSo if I take a look at that file.\n\n417\n00:21:34.580 --> 00:21:39.170\nI'll just do it cat/etc/passwd,\nand I take a look in here,\n\n418\n00:21:39.170 --> 00:21:41.880\nI can find who's user one, two, and three.\n\n419\n00:21:41.880 --> 00:21:42.965\nAnd if you.\n\n420\n00:21:42.965 --> 00:21:47.350\n[LAUGH] Sorry guys I was\ntrying to zoom in there we go.\n\n421\n00:21:47.350 --> 00:21:51.634\nSo if you take a look at user one,\ntwo and three, see how it says user1:x,\n\n422\n00:21:51.634 --> 00:21:53.137\nuser2:x, user3:x.\n\n423\n00:21:53.137 --> 00:21:56.340\nWhere that x is,\nin the olden days of Unix.\n\n424\n00:21:56.340 --> 00:21:57.430\n&gt;&gt; The olden days?\n\n425\n00:21:57.430 --> 00:21:58.800\n&gt;&gt; That's where the passwords are stored.\n\n426\n00:21:58.800 --> 00:22:01.190\nAnd they were right there and\nthey were in plain text.\n\n427\n00:22:01.190 --> 00:22:03.187\nAnd that's not a good idea.\n\n428\n00:22:03.187 --> 00:22:04.090\n&gt;&gt; No, no.\n\n429\n00:22:04.090 --> 00:22:05.620\n&gt;&gt; Over time they started encrypting them.\n\n430\n00:22:05.620 --> 00:22:09.000\nThey would hash them, they would do\na one way, non-reversible hash and\n\n431\n00:22:09.000 --> 00:22:09.850\nstore it there.\n\n432\n00:22:09.850 --> 00:22:11.680\nAnd so the user name and\nthe hash were stored there.\n\n433\n00:22:11.680 --> 00:22:15.430\nBut that wasn't so good either, because\nevery user can read from this file.\n\n434\n00:22:15.430 --> 00:22:18.520\nAnd that means you could read the hash and\npotentially attack it.\n\n435\n00:22:18.520 --> 00:22:20.840\nSo over time they said you know\nwhat we're going to split that off.\n\n436\n00:22:20.840 --> 00:22:23.697\nWe're gonna take the password\nhashes out of your put here and\n\n437\n00:22:23.697 --> 00:22:25.460\nput them in a separate file.\n\n438\n00:22:25.460 --> 00:22:31.212\nAnd so now we have another file that\nonly the root user can get to and\n\n439\n00:22:31.212 --> 00:22:33.530\nthat's /etc / shadow.\n\n440\n00:22:33.530 --> 00:22:38.800\nAnd that's the shadow password file and\nit goes hand in hand with the passwd file.\n\n441\n00:22:38.800 --> 00:22:42.628\nAnd if I'm looking here I\ncan find user one, two and\n\n442\n00:22:42.628 --> 00:22:46.738\nthree and then a colon and\nthere's the password hash.\n\n443\n00:22:46.738 --> 00:22:51.000\nThe password hash that was removed from\nthe other files has been moved into\n\n444\n00:22:51.000 --> 00:22:52.230\nhere, okay.\n\n445\n00:22:52.230 --> 00:22:56.090\nNow user one,\nI think gave him a pretty decent password.\n\n446\n00:22:56.090 --> 00:22:59.456\nUser two just has one, two,\nthree four, five, six, seven, eight.\n\n447\n00:22:59.456 --> 00:23:03.830\nAnd user3 has p-a-s-s and that's it.\n\n448\n00:23:03.830 --> 00:23:07.270\nBut looking at this password,\ncould you tell?\n\n449\n00:23:07.270 --> 00:23:08.510\nYou can't really tell.\n\n450\n00:23:08.510 --> 00:23:10.110\nAnd that's the thing about hashes.\n\n451\n00:23:10.110 --> 00:23:14.320\nHashes can hide whether you provided\na good password or a password.\n\n452\n00:23:14.320 --> 00:23:18.010\nI can't tell looking at this data\nwhether or not that's a strong password.\n\n453\n00:23:18.010 --> 00:23:21.670\nAnd if you're ever curious to see this\non your own, you can do it yourself,\n\n454\n00:23:21.670 --> 00:23:24.670\nlike if I use sha256, right?\n\n455\n00:23:24.670 --> 00:23:29.734\nAnd take a sha256sum of anything,\nlets take for\n\n456\n00:23:29.734 --> 00:23:33.519\nexample sha256sum, [INAUDIBLE].\n\n457\n00:23:33.519 --> 00:23:39.956\nI'll do it echo -in pass | sha256sum.\n\n458\n00:23:39.956 --> 00:23:44.797\nSo I'm gonna generate a sha256sum\nof just the word pass.\n\n459\n00:23:44.797 --> 00:23:46.010\nP-A-S-S.\n\n460\n00:23:46.010 --> 00:23:47.880\nThat's not a good password.\n\n461\n00:23:47.880 --> 00:23:52.886\nAnd when I take a sum of it,\nI get this big long string of letters and\n\n462\n00:23:52.886 --> 00:23:55.719\nnumbers that looks pretty complex.\n\n463\n00:23:55.719 --> 00:23:57.799\nI can't tell whether that's complex or\nsimple.\n\n464\n00:23:57.799 --> 00:24:03.218\nI can do a sha256sum of just\nthe number one, there, just the number.\n\n465\n00:24:03.218 --> 00:24:04.679\nAnd it looks complex.\n\n466\n00:24:04.679 --> 00:24:07.598\nI mean, I could actually put\nsomething in really complex, right?\n\n467\n00:24:07.598 --> 00:24:14.810\nI could come in and\nsay like this is my complex password.\n\n468\n00:24:14.810 --> 00:24:18.050\nWhatever you're gonna start typing in,\ncapital letters,\n\n469\n00:24:18.050 --> 00:24:20.500\nlower case letters, numbers, spaces.\n\n470\n00:24:20.500 --> 00:24:24.990\nWhatever it is that I wanna punch all that\njunk in there and beat it into a, oops.\n\n471\n00:24:24.990 --> 00:24:29.160\nAnd I'm gonna have to\nput that into a quote.\n\n472\n00:24:30.950 --> 00:24:33.070\nMy special characters kind of\ntrip that command up a bit.\n\n473\n00:24:33.070 --> 00:24:35.815\nSo let me redo that.\n\n474\n00:24:35.815 --> 00:24:37.510\nAnd stick that into some quote marks.\n\n475\n00:24:37.510 --> 00:24:43.443\nAnd when I do that, when I echo that\ninto it and generate a sum, [INAUDIBLE].\n\n476\n00:24:43.443 --> 00:24:46.700\n[LAUGH] Save myself some trouble here.\n\n477\n00:24:46.700 --> 00:24:48.330\nI made it too complex.\n\n478\n00:24:48.330 --> 00:24:51.170\nSo when it feeds that in and\nit processes it and\n\n479\n00:24:51.170 --> 00:24:55.610\ngenerates it, I have no way of knowing\nwhether it's complex or it's weak.\n\n480\n00:24:55.610 --> 00:24:59.440\nSo really, the only good way that we can\naudit and test whether users are using\n\n481\n00:24:59.440 --> 00:25:02.210\nstrong passwords, is try and\nbreak them ourselves, right?\n\n482\n00:25:02.210 --> 00:25:05.810\nTo understand the tools that the hackers\nuse to try and break these passwords.\n\n483\n00:25:05.810 --> 00:25:09.320\nIf a hacker breaks into your system,\nthen if they can\n\n484\n00:25:09.320 --> 00:25:12.430\nelevate themselves from root privileges,\nthey can reset anybody's password, right?\n\n485\n00:25:12.430 --> 00:25:15.080\nBut a lot of times they don't wanna\ndo that because it becomes obvious.\n\n486\n00:25:15.080 --> 00:25:16.840\nIf they reset somebody's password,\n\n487\n00:25:16.840 --> 00:25:19.410\nthen that user will know that\nsomething happened to their account.\n\n488\n00:25:19.410 --> 00:25:21.350\nSo instead they'll target a shadow file.\n\n489\n00:25:21.350 --> 00:25:25.314\nIf they can get the shadow file,\nthey can take it to their own system, and\n\n490\n00:25:25.314 --> 00:25:29.070\nthen they can try and brute force it and\nfigure out somebody's actual password.\n\n491\n00:25:29.070 --> 00:25:31.650\nAnd once I have the actual password,\nthey don't use crazy exploits and\n\n492\n00:25:31.650 --> 00:25:32.256\nhacks anymore.\n\n493\n00:25:32.256 --> 00:25:33.690\nNow they just log in as you, right?\n\n494\n00:25:33.690 --> 00:25:35.940\nAnd now they've got that access.\n\n495\n00:25:35.940 --> 00:25:38.100\nAnd it won't even show up\nvery well in audit logs,\n\n496\n00:25:38.100 --> 00:25:40.330\ncuz it just looks like your\nregular access at that point.\n\n497\n00:25:40.330 --> 00:25:41.785\nSo, very dangerous.\n\n498\n00:25:41.785 --> 00:25:43.900\nWell, we can do the same thing they do.\n\n499\n00:25:43.900 --> 00:25:48.550\nWe can take the shadow file and we can run\nit through a utility, through a tool, and\n\n500\n00:25:48.550 --> 00:25:52.020\nget a chance to see if we can break\nthat password and find it out, right?\n\n501\n00:25:52.020 --> 00:25:52.926\n&gt;&gt; Wow.\n&gt;&gt; And if it's weak,\n\n502\n00:25:52.926 --> 00:25:56.042\nthen we should be able to break it\njust like an attacker will, all right?\n\n503\n00:25:56.042 --> 00:25:59.729\nSo I wanna show you that process, I wanna\nshow you what an attacker would do, but\n\n504\n00:25:59.729 --> 00:26:01.890\nI know I'm running a little\nbit short on time.\n\n505\n00:26:01.890 --> 00:26:04.030\nI don't think I can do it in the time\nwe have left on this episode.\n\n506\n00:26:04.030 --> 00:26:05.770\nSo, Zach, why don't we break\ninto a part two on this one?\n\n507\n00:26:05.770 --> 00:26:06.685\n&gt;&gt; That sounds great.\n\n508\n00:26:06.685 --> 00:26:08.029\n&gt;&gt; And then, In part two,\n\n509\n00:26:08.029 --> 00:26:11.942\nI'll show you guys how to basically\nsteal the shadow password file.\n\n510\n00:26:11.942 --> 00:26:13.921\nAnd then we will run a brute\nforce against it, and\n\n511\n00:26:13.921 --> 00:26:16.529\nsee if we can find anything and\nkinda run through that process and\n\n512\n00:26:16.529 --> 00:26:18.476\nsee what it would take to\nbreak into [CROSSTALK].\n\n513\n00:26:18.476 --> 00:26:18.992\n&gt;&gt; I'm excited.\n\n514\n00:26:18.992 --> 00:26:20.290\nI can't wait to see that.\n\n515\n00:26:20.290 --> 00:26:22.440\nAuditing user passwords part two.\n\n516\n00:26:22.440 --> 00:26:24.230\nAnd we just did part one.\n\n517\n00:26:24.230 --> 00:26:29.050\nAnd make sure you watch all the videos in\nthe series of Linux security techniques.\n\n518\n00:26:29.050 --> 00:26:31.720\nBut before we leave, Don, any last words?\n\n519\n00:26:31.720 --> 00:26:33.810\n&gt;&gt; Well, as far as getting things set up,\n\n520\n00:26:33.810 --> 00:26:35.590\nwe've seen everything we need\nto in this episode, right?\n\n521\n00:26:35.590 --> 00:26:36.880\nSetting up the password policy.\n\n522\n00:26:36.880 --> 00:26:39.840\nIt is important to try and set this up\nearly, geting your users used to it.\n\n523\n00:26:39.840 --> 00:26:42.400\nEnforcing it after the fact is\nalways a bit of a challenge, but\n\n524\n00:26:42.400 --> 00:26:43.440\nthat's a big part of it.\n\n525\n00:26:43.440 --> 00:26:47.130\nYou might also wanna stack on one more\nthing that I didn't mention which is,\n\n526\n00:26:47.130 --> 00:26:49.790\nwe had another episode on\nauditing the file system, and\n\n527\n00:26:49.790 --> 00:26:51.850\nwe're talked about auditing files for\nchanges.\n\n528\n00:26:51.850 --> 00:26:56.593\nYou can audit the /etc/passwd file and\nthe /etc/shadow files.\n\n529\n00:26:56.593 --> 00:26:58.830\nIt's harder to audit shadow file,\nbut you can.\n\n530\n00:26:58.830 --> 00:27:01.580\nAnd when you do that,\nanytime somebody changes a password,\n\n531\n00:27:01.580 --> 00:27:03.920\nyou get an audit record of it,\nyou see that change.\n\n532\n00:27:03.920 --> 00:27:05.990\nSo you can track when users are changing\ntheir password that way, too.\n\n533\n00:27:05.990 --> 00:27:07.571\nIt's just another technique we can use,\n\n534\n00:27:07.571 --> 00:27:09.885\njust to make sure that people\nare changing their passwords.\n\n535\n00:27:09.885 --> 00:27:10.690\n&gt;&gt; Fantastic.\n\n536\n00:27:10.690 --> 00:27:11.790\nGreat job, as usual Don.\n\n537\n00:27:11.790 --> 00:27:16.050\nAnd auditing user passwords part two where\nwe do some ethical hacking, can't wait.\n\n538\n00:27:16.050 --> 00:27:18.920\nAnd once again,\nmake sure you watch every single episode\n\n539\n00:27:18.920 --> 00:27:21.690\nin the Linux security techniques,\ncuz you'll be glad you did.\n\n540\n00:27:21.690 --> 00:27:23.250\nAnd thank you for watching ITProTV.\n\n541\n00:27:23.250 --> 00:27:26.100\nRemember, a good ITPro always is learning.\n\n542\n00:27:26.100 --> 00:27:27.260\nAnd I'm Zach Memos.\n\n543\n00:27:27.260 --> 00:27:27.880\n&gt;&gt; I'm Don Pezet.\n\n544\n00:27:27.880 --> 00:27:30.276\n&gt;&gt; And we will see you soon.\n\n545\n00:27:30.276 --> 00:27:36.119\n[MUSIC]\n\n546\n00:27:36.119 --> 00:27:39.495\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "230615323"
        },
        {
          "description": "Don and Zach explain using John The Ripper to use brute force to check the strength of users passwords, installing John The Ripper, exporting hashed passwords to a text file, auditing our actual users, and running the John The Ripper Attack.",
          "length": "1640",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-3-2-auditing_user_passwords_pt_2-082117-PGM.00_32_39_19.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-3-2-auditing_user_passwords_pt_2-082117-PGM.00_32_39_19.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-3-2-auditing_user_passwords_pt_2-082117-PGM.00_32_39_19.Still001-sm.jpg",
          "title": "Auditing User Passwords Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:02.003\nWelcome to ITPRO.TV I'm your host.\n\n2\n00:00:02.003 --> 00:00:06.859\n[CROSSTALK]\n\n3\n00:00:06.859 --> 00:00:08.274\n[MUSIC]\n\n4\n00:00:08.274 --> 00:00:12.025\nYou're watching ITProTV.\n\n5\n00:00:12.025 --> 00:00:12.675\n&gt;&gt; Hello again.\n\n6\n00:00:12.675 --> 00:00:16.575\nThank you for choosing ITProTV,\nhelping you learn where ever you go.\n\n7\n00:00:16.575 --> 00:00:21.224\nI'm your host Zach Memos as we continue\nwith Linux Security Techniques, and\n\n8\n00:00:21.224 --> 00:00:23.951\nthis is part two of\nauditing user passwords.\n\n9\n00:00:23.951 --> 00:00:26.349\nAnd this is gonna be an excellent,\nexcellent episode.\n\n10\n00:00:26.349 --> 00:00:30.011\nWe're gonna actually look into how we can\ndo an ethical hack into ourselves for\n\n11\n00:00:30.011 --> 00:00:30.574\none thing.\n\n12\n00:00:30.574 --> 00:00:32.271\n&gt;&gt; [LAUGH]\n&gt;&gt; But giving us all the information\n\n13\n00:00:32.271 --> 00:00:33.957\nwe need is the one, the only Don Pezet.\n\n14\n00:00:33.957 --> 00:00:35.590\nDon, hello, nice to see you again,\nthanks for being here.\n\n15\n00:00:35.590 --> 00:00:36.777\n&gt;&gt; It's great to see you Zach.\n\n16\n00:00:36.777 --> 00:00:38.377\nAnd yeah, ready to dive right back in.\n\n17\n00:00:38.377 --> 00:00:41.998\nAnd actually but before we get started on\nthe password stuff I wanna just kinda do\n\n18\n00:00:41.998 --> 00:00:43.684\none quick correction from part one.\n\n19\n00:00:43.684 --> 00:00:47.044\nOur viewer Doug out in the chat room\nhad noticed I made a mistake when I was\n\n20\n00:00:47.044 --> 00:00:50.637\nexpiring a password and I actually\nexpired the account, not the password.\n\n21\n00:00:50.637 --> 00:00:52.158\nSo I just wanna correct that real quick,\n\n22\n00:00:52.158 --> 00:00:54.144\nso you don't make that\nmistake out there like I did.\n\n23\n00:00:54.144 --> 00:00:56.278\n[LAUGH] So, just to recap what I did,\n\n24\n00:00:56.278 --> 00:01:00.798\nwe were using the CH age command to set\npassword policy on the user, right?\n\n25\n00:01:00.798 --> 00:01:03.186\n&gt;&gt; Yeah.\n&gt;&gt; And so, if you do like a CH age-l,\n\n26\n00:01:03.186 --> 00:01:08.050\nI'll do user 3, and take a look at that\nuser, see how you've got password expires,\n\n27\n00:01:08.050 --> 00:01:10.298\nbut you've also got account expires.\n\n28\n00:01:10.298 --> 00:01:12.040\nYou got two different entities there.\n\n29\n00:01:12.040 --> 00:01:12.636\n&gt;&gt; Right.\n\n30\n00:01:12.636 --> 00:01:13.988\n&gt;&gt; When the password expires,\n\n31\n00:01:13.988 --> 00:01:17.660\nthe user is required to change the\npassword they log on the next time, right?\n\n32\n00:01:17.660 --> 00:01:19.468\nIf they don't change their password,\nthey get logged out.\n\n33\n00:01:19.468 --> 00:01:23.206\nBut their account is still valid,\nthey just have to change their password.\n\n34\n00:01:23.206 --> 00:01:27.398\nIf the account expires, on the other\nhand they can't log in no matter what,\n\n35\n00:01:27.398 --> 00:01:31.476\nwhether they have a good password or\nbad password that just can't log in.\n\n36\n00:01:31.476 --> 00:01:35.113\nAnd so I was talking about\npassword expiration, and\n\n37\n00:01:35.113 --> 00:01:37.850\nat the same time I expired the account.\n\n38\n00:01:37.850 --> 00:01:42.917\nAnd so I did it wrong, so I just wanna\ncorrect that real quick, so you guys know,\n\n39\n00:01:42.917 --> 00:01:48.079\nbasically, what I did is I did a chage-E\nto send expiration date on the account.\n\n40\n00:01:48.079 --> 00:01:50.622\nAnd see how the account\nexpire is set to never?\n\n41\n00:01:50.622 --> 00:01:53.960\nAnd if I set to that to like 01/01/2018,\nright?\n\n42\n00:01:53.960 --> 00:01:57.031\nMaybe I hired this employee just for\nthe holiday seasons and\n\n43\n00:01:57.031 --> 00:01:59.129\nwe'll terminate them on New Years Day.\n\n44\n00:01:59.129 --> 00:02:00.549\n&gt;&gt; [LAUGH]\n&gt;&gt; What better time to do it for\n\n45\n00:02:00.549 --> 00:02:01.102\ntax purposes.\n\n46\n00:02:01.102 --> 00:02:01.748\n&gt;&gt; Sure, wonderful.\n\n47\n00:02:01.748 --> 00:02:05.320\n&gt;&gt; So, I can do that for user3 and\nI can set that expiration.\n\n48\n00:02:05.320 --> 00:02:12.040\nNow when I do a chage -l user3,\nthey're set to expire January 1st, 2018.\n\n49\n00:02:12.040 --> 00:02:15.086\nAnd that means, as of that date,\ntheir account will no longer work,\n\n50\n00:02:15.086 --> 00:02:16.880\nregardless of what password they type.\n\n51\n00:02:16.880 --> 00:02:20.605\nSo that's what I did during the show but\nI said I was expiring the password, and\n\n52\n00:02:20.605 --> 00:02:21.520\nthat's not true.\n\n53\n00:02:21.520 --> 00:02:23.484\nIf I wanted to expire the password,\n\n54\n00:02:23.484 --> 00:02:27.620\nlike let's just say that I think user\n3's account has been compromised.\n\n55\n00:02:27.620 --> 00:02:29.793\nMaybe I think they got phished or\nsomething, and\n\n56\n00:02:29.793 --> 00:02:32.766\nI noticed some weird activity on\ntheir account, on my audit logs.\n\n57\n00:02:32.766 --> 00:02:34.706\nI can do a chage -d, and\n\n58\n00:02:34.706 --> 00:02:40.250\nI can specify how many days until\nthey have to reset their password.\n\n59\n00:02:40.250 --> 00:02:44.379\nAnd if I set that to 0,\nif I do -d 0 user3,\n\n60\n00:02:44.379 --> 00:02:48.645\nthat means expire their\npassword right now.\n\n61\n00:02:48.645 --> 00:02:51.347\nDon't expire their account,\njust expire their password.\n\n62\n00:02:51.347 --> 00:02:53.629\n&gt;&gt; Correct.\n&gt;&gt; And the next time they log in,\n\n63\n00:02:53.629 --> 00:02:55.453\nthey'll have to change it,\n\n64\n00:02:55.453 --> 00:02:59.796\nand if I do a chage -l on user3,\nI can see password must be changed.\n\n65\n00:02:59.796 --> 00:03:01.390\nGreat big wall, right up here.\n\n66\n00:03:01.390 --> 00:03:03.228\nIt doesn't care about when\nthe password expires or\n\n67\n00:03:03.228 --> 00:03:04.776\nwhen the passwords inactive or whatever.\n\n68\n00:03:04.776 --> 00:03:07.030\nThey have to change it\nwhen they log back in.\n\n69\n00:03:07.030 --> 00:03:11.127\nIf I had said password chAge -d 5,\nthen it would have set the expiration date\n\n70\n00:03:11.127 --> 00:03:15.049\nout five days from now, and the regular\nwarning intervals would kick in.\n\n71\n00:03:15.049 --> 00:03:21.650\nSo that's how we do that, -d for expiring\nthe password, -E for expiring the account.\n\n72\n00:03:21.650 --> 00:03:23.255\nSo sorry about the confusion on that,\n\n73\n00:03:23.255 --> 00:03:26.077\nI just wanted to clear it up right\nhere at the beginning of episode.\n\n74\n00:03:26.077 --> 00:03:28.821\n&gt;&gt; Well, awesome, now we know how to\ndo both things which is really great.\n\n75\n00:03:28.821 --> 00:03:30.628\n&gt;&gt; [LAUGH]\n&gt;&gt; So I know in this episode which\n\n76\n00:03:30.628 --> 00:03:32.249\nI'm really excited about,\n\n77\n00:03:32.249 --> 00:03:36.785\nwe're gonna do a brute force attack to\ntest the password strength and so forth.\n\n78\n00:03:36.785 --> 00:03:38.880\nWell what tools are we\ngonna use to do that?\n\n79\n00:03:38.880 --> 00:03:39.416\n&gt;&gt; All right,\n\n80\n00:03:39.416 --> 00:03:42.698\nthe main tool that we're gonna make\nuse is a tool called John the Ripper.\n\n81\n00:03:42.698 --> 00:03:47.123\nAnd John the Ripper is a open source free\nutility that you can get, that we can\n\n82\n00:03:47.123 --> 00:03:51.960\ninstall and it allows us to basically\ngo in and brute force a password file.\n\n83\n00:03:51.960 --> 00:03:53.927\nNow if you wanted to brute force password,\n\n84\n00:03:53.927 --> 00:03:56.987\nin theory you could write some\nautomated script that tried to SSH or\n\n85\n00:03:56.987 --> 00:04:00.448\ntell that into a server or whatever and\njust started filling in passwords.\n\n86\n00:04:00.448 --> 00:04:04.724\nBut what's gonna happen is your gonna\nwrap against services like failtoman or\n\n87\n00:04:04.724 --> 00:04:09.261\njust password timeouts like RedHat has a\ndefault of three failed password attempts\n\n88\n00:04:09.261 --> 00:04:10.540\nand it kicks you out.\n\n89\n00:04:10.540 --> 00:04:12.371\n&gt;&gt; Right, right.\n&gt;&gt; So that type of brute force attack\n\n90\n00:04:12.371 --> 00:04:13.479\ndoesn't really work.\n\n91\n00:04:13.479 --> 00:04:17.055\nBut if an attacker can get in,\nand get your shadow file.\n\n92\n00:04:17.055 --> 00:04:21.233\nI they can get that file that has all\nthe hash passwords, they could take it to\n\n93\n00:04:21.233 --> 00:04:24.761\ntheir own computer and then use\na utility like John the Ripper and\n\n94\n00:04:24.761 --> 00:04:28.056\nbasically sit there and\nwork out what those passwords are.\n\n95\n00:04:28.056 --> 00:04:29.444\nCuz they're not gonna ban themselves.\n\n96\n00:04:29.444 --> 00:04:32.815\nThey can just sit there and run millions\nof attempts against it per minute or\n\n97\n00:04:32.815 --> 00:04:36.527\nper hour or whatever until they finally\nfigure out what the actual passwords are.\n\n98\n00:04:36.527 --> 00:04:38.539\nAnd once they've got\nthose actual passwords,\n\n99\n00:04:38.539 --> 00:04:40.507\nnow they can just walk\nright into your system.\n\n100\n00:04:40.507 --> 00:04:41.630\nThey can log in, they get access.\n\n101\n00:04:41.630 --> 00:04:42.911\n&gt;&gt; Those bad actors.\n\n102\n00:04:42.911 --> 00:04:43.970\n&gt;&gt; It's a problem, right?\n\n103\n00:04:43.970 --> 00:04:45.365\n&gt;&gt; Yeah.\n&gt;&gt; So we need to make sure that\n\n104\n00:04:45.365 --> 00:04:46.168\ncan't happen.\n\n105\n00:04:46.168 --> 00:04:49.182\nAnd the way we do that is by using\nthose same utilities ourselves.\n\n106\n00:04:49.182 --> 00:04:53.415\nWe can go in and we can run a password\nattack against our own files.\n\n107\n00:04:53.415 --> 00:04:55.746\nAnd that way,\nif somebody has a weak password,\n\n108\n00:04:55.746 --> 00:04:58.205\nwe'll find it instead of\nan attacker finding it.\n\n109\n00:04:58.205 --> 00:05:01.468\nAnd that's really kind of the secret\nbehind getting this stuff set up.\n\n110\n00:05:01.468 --> 00:05:05.064\nIs that you wanna make sure that\nyou're able to use the same tools that\n\n111\n00:05:05.064 --> 00:05:08.800\nthe attackers use so that you can get\nin and kind of protect your system.\n\n112\n00:05:08.800 --> 00:05:11.784\nSo that utility that I'm\ntalking about John the Ripper,\n\n113\n00:05:11.784 --> 00:05:13.870\nit's from a company called OpenWall.\n\n114\n00:05:13.870 --> 00:05:16.332\nAnd I'm pulling up their website\nright here, OpenWall.com.\n\n115\n00:05:16.332 --> 00:05:19.906\nThey actually make a lot of stuff and\nI don't need that, illegible.\n\n116\n00:05:19.906 --> 00:05:22.074\n&gt;&gt; [LAUGH]\n&gt;&gt; They make a lot of different stuff, but\n\n117\n00:05:22.074 --> 00:05:23.894\nif you go to their website OpenWall.com,\n\n118\n00:05:23.894 --> 00:05:27.450\nyou can go under Products and you'll see\nsome of the different products they make.\n\n119\n00:05:27.450 --> 00:05:30.608\nAnd John the Ripper is\ntheir number two product.\n\n120\n00:05:30.608 --> 00:05:33.241\nIt's free and open source, so\nyou can go and pull that up and\n\n121\n00:05:33.241 --> 00:05:34.830\nyou can learn a little bit about it.\n\n122\n00:05:34.830 --> 00:05:36.106\nIt's a password cracker.\n\n123\n00:05:36.106 --> 00:05:38.440\nIt's a part of\nthe Kali Linux distribution.\n\n124\n00:05:38.440 --> 00:05:41.799\nIf you've got the Kali Linux, the security\nand pen testing distro that's out there.\n\n125\n00:05:41.799 --> 00:05:42.437\n&gt;&gt; Yeah.\n&gt;&gt; It will\n\n126\n00:05:42.437 --> 00:05:45.294\nalready have John the Ripper in it but\nif you're like me.\n\n127\n00:05:45.294 --> 00:05:47.550\nI'm just running RedHat enterprise.\n\n128\n00:05:47.550 --> 00:05:49.393\nI don't have this tool.\n\n129\n00:05:49.393 --> 00:05:50.909\nI can go and I can download it,\n\n130\n00:05:50.909 --> 00:05:54.819\ninstall it and then have that to be able\nto break in and test these passwords.\n\n131\n00:05:56.070 --> 00:05:57.877\n&gt;&gt; Is it hard to compile it ourselves?\n\n132\n00:05:57.877 --> 00:06:01.450\n&gt;&gt; It's not, and that's one thing\nthat you'll notice as you look at it.\n\n133\n00:06:01.450 --> 00:06:04.647\nWhen I clicked on that product link I\nwent to the free and open source for\n\n134\n00:06:04.647 --> 00:06:08.128\nany platform and we've got that there's\na pro version available, right?\n\n135\n00:06:08.128 --> 00:06:11.926\nAnd the Pro version has some nice little\nfeatures to it but the main feature for\n\n136\n00:06:11.926 --> 00:06:15.316\nthe Pro version is they have a package for\nUbuntu, Debian, RedHat,\n\n137\n00:06:15.316 --> 00:06:17.900\nyou just download a package file and\nyou install it.\n\n138\n00:06:17.900 --> 00:06:19.146\nSo getting it installed is easy.\n\n139\n00:06:19.146 --> 00:06:21.444\nBut if you wanna do the open source one,\nyou have to compile it.\n\n140\n00:06:21.444 --> 00:06:24.985\nAnd this is kind of that little part\nwhere people get intimidated like,\n\n141\n00:06:24.985 --> 00:06:25.760\nI wanna run it.\n\n142\n00:06:25.760 --> 00:06:28.980\nI don't wanna buy it necessarily cuz\nit's a couple of hundred dollars.\n\n143\n00:06:28.980 --> 00:06:30.955\nIf you use it in your business,\nyou should buy it.\n\n144\n00:06:30.955 --> 00:06:32.364\nIt's worth a couple of hundred dollars.\n\n145\n00:06:32.364 --> 00:06:32.897\n&gt;&gt; Yeah.\n&gt;&gt; But\n\n146\n00:06:32.897 --> 00:06:36.515\nif you're just learning the utility, then\nthat's a big chunk of change to pay for\n\n147\n00:06:36.515 --> 00:06:38.889\nsomething that you are just\nkinda using in practice.\n\n148\n00:06:38.889 --> 00:06:44.760\nSo it is free, and in being free, they\npost all the source code to it right here.\n\n149\n00:06:44.760 --> 00:06:48.440\nThe only challenge is we've\ngot to compile it ourselves.\n\n150\n00:06:48.440 --> 00:06:50.554\nAnd like Zach asked,\nis it hard to compile it?\n\n151\n00:06:50.554 --> 00:06:51.638\nNo, it really isn't.\n\n152\n00:06:51.638 --> 00:06:54.631\nIf you just get in and well, do it.\n\n153\n00:06:54.631 --> 00:06:56.108\n[LAUGH]\n&gt;&gt; Yeah.\n\n154\n00:06:56.108 --> 00:06:58.660\n&gt;&gt; So let me walk you through that\nprocess of what it would take.\n\n155\n00:06:58.660 --> 00:06:59.195\n&gt;&gt; Yeah, good.\n\n156\n00:06:59.195 --> 00:07:01.710\n&gt;&gt; Now, normally I would run\nthis on my own work station.\n\n157\n00:07:01.710 --> 00:07:04.891\nBut I'm gonna show you guys most of the\nstuff on one of my servers here just to\n\n158\n00:07:04.891 --> 00:07:06.416\nkinda keep it all in the same place.\n\n159\n00:07:06.416 --> 00:07:09.960\nSo that server I've been using this\nwhole series, I'll use that one.\n\n160\n00:07:09.960 --> 00:07:14.195\nAnd I'm gonna go in here and basically\nI wanna start by downloading the file,\n\n161\n00:07:14.195 --> 00:07:16.616\nthe source code from the OpenWall website.\n\n162\n00:07:16.616 --> 00:07:20.000\nAnd we can use the wget command for that\nif you have that installed, if you don't,\n\n163\n00:07:20.000 --> 00:07:21.190\nyou'll need to install it.\n\n164\n00:07:21.190 --> 00:07:24.941\nIn fact, there's a couple of things\nwe might need to get installed first.\n\n165\n00:07:24.941 --> 00:07:26.991\nIf we're breaking\na password file like this,\n\n166\n00:07:26.991 --> 00:07:29.790\nthe password file is likely\ncoming from a server.\n\n167\n00:07:29.790 --> 00:07:33.802\nAnd we don't want to install a bunch of\nstuff on the server if we don't need to.\n\n168\n00:07:33.802 --> 00:07:37.564\nSo, ideally, you'll install John\nthe Ripper on your own machine and\n\n169\n00:07:37.564 --> 00:07:40.710\nwe'll just get the password\nfile from the server, okay?\n\n170\n00:07:40.710 --> 00:07:42.877\nThat's the ideal situation, right?\n\n171\n00:07:42.877 --> 00:07:44.862\nBut, in my case, because it's just a lab,\n\n172\n00:07:44.862 --> 00:07:47.180\nI'm gonna put it all\ntogether in one place.\n\n173\n00:07:47.180 --> 00:07:51.340\nBut some of the things that I'm gonna\nneed, I'll do a yum install and\n\n174\n00:07:51.340 --> 00:07:55.572\nI need wget, which is a command line\nutility you can use to download web\n\n175\n00:07:55.572 --> 00:07:57.758\nlinks right from the command line.\n\n176\n00:07:57.758 --> 00:07:58.911\nBecause again on a server,\n\n177\n00:07:58.911 --> 00:08:01.624\nyou might not have a GUI, so\nwe gotta do it from the command line.\n\n178\n00:08:01.624 --> 00:08:05.477\nSo I need wget so I can download\nthe file I need the make utility,\n\n179\n00:08:05.477 --> 00:08:08.259\nwhich is what we're\ngonna use to compile it.\n\n180\n00:08:08.259 --> 00:08:12.955\nAnd make is really like an automated\ncompiler that references a dedicated\n\n181\n00:08:12.955 --> 00:08:16.450\ncompiler, which is gonna\nbe the gnuc compiler, gcc.\n\n182\n00:08:16.450 --> 00:08:18.950\nSo those are the few things that I need.\n\n183\n00:08:18.950 --> 00:08:22.410\nWhen you install gcc,\nit's got a lot of dependencies.\n\n184\n00:08:22.410 --> 00:08:26.000\nAnd so\nit can install quite a few packages,\n\n185\n00:08:26.000 --> 00:08:29.840\nwhich is then again other reason why it's\nnot idea to install this on the server.\n\n186\n00:08:29.840 --> 00:08:33.360\nInstead, you could do this on\nyour workstation, compile it and\n\n187\n00:08:33.360 --> 00:08:35.640\nthen copy the compiled\nexecutable up to the server.\n\n188\n00:08:35.640 --> 00:08:38.300\nAnd now you don't have to bring\nalong a lot of this extra stuff.\n\n189\n00:08:38.300 --> 00:08:41.800\nBut you'll see all these other libraries\nthat are getting installed and so on.\n\n190\n00:08:41.800 --> 00:08:42.990\nI might not want those on my server.\n\n191\n00:08:42.990 --> 00:08:44.480\nI might already have them on the server.\n\n192\n00:08:44.480 --> 00:08:47.617\nIt just depends on what\nthat topology is like.\n\n193\n00:08:47.617 --> 00:08:50.766\nBut I'm gonna go ahead and\ninstall those that so that I've got them,\n\n194\n00:08:50.766 --> 00:08:53.004\notherwise this is gonna\nbe a failed experiment.\n\n195\n00:08:53.004 --> 00:08:54.674\n&gt;&gt; [LAUGH]\n&gt;&gt; I need to have these, and\n\n196\n00:08:54.674 --> 00:08:58.000\nthen I need to download\nthe actual file from Openwall.\n\n197\n00:08:58.000 --> 00:09:03.782\nSo I'll do wget, and\nI'll point to that file on their server,\n\n198\n00:09:03.782 --> 00:09:11.217\nwhich was just\nwww.openwall.com/john/j/john-1.8.0.tar.gz.\n\n199\n00:09:11.217 --> 00:09:15.326\nAll right, it's version 1.8.\n\n200\n00:09:15.326 --> 00:09:16.818\nAt the time this episode is filmed,\n\n201\n00:09:16.818 --> 00:09:19.125\nit might be a different version\nby the time you do this.\n\n202\n00:09:19.125 --> 00:09:22.395\nSo be sure to check their website to make\nsure you have the latest version and\n\n203\n00:09:22.395 --> 00:09:23.125\ndownload it.\n\n204\n00:09:23.125 --> 00:09:24.855\nSo that's the command we\nuse to download it now.\n\n205\n00:09:24.855 --> 00:09:27.435\nI will tell you their server is\nrunning a little slow this morning,\n\n206\n00:09:27.435 --> 00:09:30.985\nso I went ahead and downloaded it\nbefore the show to save a bit of time.\n\n207\n00:09:30.985 --> 00:09:34.678\nWe'll try again here and see, yeah,\nit's kinda crawling along there.\n\n208\n00:09:34.678 --> 00:09:36.252\nI guess it's moving along fine.\n\n209\n00:09:36.252 --> 00:09:37.642\nBut I did download it\nkinda before this show,\n\n210\n00:09:37.642 --> 00:09:39.777\nbecause sometimes this server does\nrun a little bit on the slow side.\n\n211\n00:09:39.777 --> 00:09:41.030\nBut eh, it's almost done.\n\n212\n00:09:41.030 --> 00:09:43.440\nWhen we download it,\nthis is the source code.\n\n213\n00:09:43.440 --> 00:09:46.560\nAnd the source code is kind of not useful.\n\n214\n00:09:46.560 --> 00:09:48.050\nWe can't run it by default.\n\n215\n00:09:48.050 --> 00:09:49.270\nWe've got to compile it and\n\n216\n00:09:49.270 --> 00:09:51.460\nthat's the part that a lot of\npeople have not compiled software.\n\n217\n00:09:51.460 --> 00:09:53.318\nIf you're a developer,\nyou do this every day.\n\n218\n00:09:53.318 --> 00:09:54.628\nBut if you're a system administrator,\n\n219\n00:09:54.628 --> 00:09:56.719\nit's probably not something\nthat's in your regular toolkit.\n\n220\n00:09:56.719 --> 00:09:58.070\n&gt;&gt; Right, right, right.\n\n221\n00:09:58.070 --> 00:09:59.950\n&gt;&gt; Fortunately, it's not that hard to do.\n\n222\n00:09:59.950 --> 00:10:02.513\nSo, first off,\nI need to extract that archive.\n\n223\n00:10:02.513 --> 00:10:08.072\nSo I'm gonna go tar-xvzf and\nI will point to that archive and\n\n224\n00:10:08.072 --> 00:10:10.910\nI'll extract it, all right?\n\n225\n00:10:10.910 --> 00:10:12.560\nSo that's gonna extract out.\n\n226\n00:10:12.560 --> 00:10:14.890\nAnd then I can change into that folder.\n\n227\n00:10:14.890 --> 00:10:17.530\nAnd in the folder, you'll see there's\na couple of things that have been created.\n\n228\n00:10:17.530 --> 00:10:20.310\nThe main one that I'm concerned\nabout is this src folder.\n\n229\n00:10:20.310 --> 00:10:21.714\nThat's where the source code is.\n\n230\n00:10:21.714 --> 00:10:25.509\nSo I'm gonna get into the src folder,\nand here's the source code for\n\n231\n00:10:25.509 --> 00:10:26.498\nJohn the Ripper.\n\n232\n00:10:26.498 --> 00:10:27.443\nIt's open source, so here it is.\n\n233\n00:10:27.443 --> 00:10:30.665\nHere's the whole program, you can get in,\ndo whatever you want, right?\n\n234\n00:10:30.665 --> 00:10:34.680\nWell, we need to compile this\nto make it an actual program.\n\n235\n00:10:34.680 --> 00:10:37.160\nAnd we can use the make\nutility to do that.\n\n236\n00:10:37.160 --> 00:10:41.710\nNow when you use the make utility,\nit compiles the binary based on what\n\n237\n00:10:41.710 --> 00:10:44.940\nkernel you're using and\nwhat hardware you're running on, right?\n\n238\n00:10:44.940 --> 00:10:46.320\nThat's why this is not precompiled,\n\n239\n00:10:46.320 --> 00:10:48.720\ncuz there's several different\ntypes of hardware out there.\n\n240\n00:10:48.720 --> 00:10:51.700\nIf we wanna compile this,\nwe have to tell it what hardware we have.\n\n241\n00:10:51.700 --> 00:10:56.780\nIf you run make clean like that,\nwhen you run make clean,\n\n242\n00:10:56.780 --> 00:11:00.460\nit will give you a list of all\nthe hardware platforms that are supported.\n\n243\n00:11:00.460 --> 00:11:02.920\nOr actually, sorry, just make,\nwe can just run make by itself.\n\n244\n00:11:02.920 --> 00:11:03.820\nThere we go.\n\n245\n00:11:03.820 --> 00:11:05.180\nWe should run make by itself.\n\n246\n00:11:05.180 --> 00:11:07.422\nWe get a list of all\nthe hardware platforms and\n\n247\n00:11:07.422 --> 00:11:12.024\nyou'll see Linux is in the list, FreeBSD,\nOpenBSD, Solaris, all different platforms.\n\n248\n00:11:12.024 --> 00:11:16.365\nWell, I'm running Linux, and\nin here we can find Linux x86_64 for\n\n249\n00:11:16.365 --> 00:11:19.250\n64 bit Linux, that's what I'm running.\n\n250\n00:11:19.250 --> 00:11:22.984\nBut there's also ones for\nones with XOP extensions or AVX.\n\n251\n00:11:22.984 --> 00:11:25.592\nSo you might get benefits\nfrom you doing hardware\n\n252\n00:11:25.592 --> 00:11:28.210\nacceleration if your\nplatform supports those.\n\n253\n00:11:29.230 --> 00:11:30.290\nIn my case,\n\n254\n00:11:30.290 --> 00:11:34.300\nI'm just gonna go with the regular\nLinux x86 64 that we see right there.\n\n255\n00:11:35.410 --> 00:11:39.030\nSo I'm gonna run make clean,\nthere's that clean.\n\n256\n00:11:39.030 --> 00:11:40.900\nAnd then I'm gonna specify the platform.\n\n257\n00:11:40.900 --> 00:11:44.840\nMine was Linux -x86 -x64 and\n\n258\n00:11:44.840 --> 00:11:48.980\nwhen I run that, it's gonna go through and\nit's gonna compile the program.\n\n259\n00:11:48.980 --> 00:11:54.760\nAnd because it's written well, [LAUGH] it\nrun through, it compiles, and I'm done.\n\n260\n00:11:54.760 --> 00:11:55.560\nIt's actually built in.\n\n261\n00:11:55.560 --> 00:11:59.570\nIt's telling me that it dropped\nthe executable in the run folder.\n\n262\n00:11:59.570 --> 00:12:03.760\nAnd so\nif I drop back to the run folder and\n\n263\n00:12:03.760 --> 00:12:07.510\ntake a look,\nI've now got a binary in here called John.\n\n264\n00:12:08.760 --> 00:12:11.680\nAnd that John binary\nis the John the Ripper\n\n265\n00:12:11.680 --> 00:12:13.430\nutility that we're gonna be making use of.\n\n266\n00:12:13.430 --> 00:12:18.116\nAnd I can test it real quick by\njust running ./john//test, and\n\n267\n00:12:18.116 --> 00:12:23.985\nit'll start running through its tests,\ntest hashing for different algorithms.\n\n268\n00:12:23.985 --> 00:12:26.390\nAnd so when I run it, right there,\nit's benchmarking a few.\n\n269\n00:12:26.390 --> 00:12:30.365\nAnd it's starting to perform that test and\nmake sure that it's working properly.\n\n270\n00:12:30.365 --> 00:12:33.718\nAt this point, I've got John\nthe Ripper's a functional executable.\n\n271\n00:12:33.718 --> 00:12:37.381\nAnd I can use that to start brute\nforcing passwords and attacks and\n\n272\n00:12:37.381 --> 00:12:39.120\ntesting this out on my system.\n\n273\n00:12:39.120 --> 00:12:42.538\nNow I'm gonna stop this, because the\nbenchmark can actually take hours to run,\n\n274\n00:12:42.538 --> 00:12:44.910\ncuz it runs through several algorithms.\n\n275\n00:12:44.910 --> 00:12:46.585\nBut you'd normally want to\nlet it run the whole way,\n\n276\n00:12:46.585 --> 00:12:48.046\nbecause then it can estimate times, right?\n\n277\n00:12:48.046 --> 00:12:49.780\nBut I'll stop it right here.\n\n278\n00:12:49.780 --> 00:12:52.231\nBut that's done, and\nnow I know the utility's good to go.\n\n279\n00:12:52.231 --> 00:12:53.980\n&gt;&gt; So, we're done with the test.\n\n280\n00:12:53.980 --> 00:12:56.295\nSo how do we now audit our actual users?\n\n281\n00:12:56.295 --> 00:12:59.059\n&gt;&gt; All right, so now,\nif we wanna audit the users,\n\n282\n00:12:59.059 --> 00:13:03.360\nwe need to get our user data and\nwe need to feed it into John the Ripper.\n\n283\n00:13:03.360 --> 00:13:06.256\nWell, our user data's\nspread across two files.\n\n284\n00:13:06.256 --> 00:13:09.161\nThere's the /etc/passwd,\n\n285\n00:13:09.161 --> 00:13:14.640\nhich contains the list of usernames and\nuser IDs, right?\n\n286\n00:13:14.640 --> 00:13:16.519\nBut it doesn't contain the passwords.\n\n287\n00:13:16.519 --> 00:13:21.615\nAnd then there is the /etc/shadow,\nand when I look at that,\n\n288\n00:13:21.615 --> 00:13:25.245\nit's got the usernames and the passwords.\n\n289\n00:13:25.245 --> 00:13:28.120\nBut it doesn't have\nthe other identifying names.\n\n290\n00:13:28.120 --> 00:13:32.660\nSo, really I wanna combine these two files\ntogether to create one perfect file that\n\n291\n00:13:32.660 --> 00:13:35.280\nhas usernames, passwords and\nother identity information,\n\n292\n00:13:35.280 --> 00:13:36.510\nall kinda tucked together.\n\n293\n00:13:36.510 --> 00:13:38.972\nWell, fortunately, John the Ripper has\na little script that'll do that for us.\n\n294\n00:13:38.972 --> 00:13:43.100\nYou might've noticed this command\nover here called unshadow, all right?\n\n295\n00:13:43.100 --> 00:13:46.510\nUnshadow says, take the password\ndata out of the shadow file and\n\n296\n00:13:46.510 --> 00:13:49.750\nput it into the past wd files so\nthat we can work with it.\n\n297\n00:13:49.750 --> 00:13:51.370\nIt doesn't actually modify the real files.\n\n298\n00:13:51.370 --> 00:13:52.310\nWe don't wanna do that.\n\n299\n00:13:52.310 --> 00:13:53.800\nWe don't wanna break our users, right?\n\n300\n00:13:53.800 --> 00:13:55.403\nIt's creating a separate file for me.\n\n301\n00:13:55.403 --> 00:13:57.724\nAnd so I can use that to put\nthe information together.\n\n302\n00:13:57.724 --> 00:14:03.100\nI'm gonna run unshadow, and then I'm\ngonna tell it where to get the files.\n\n303\n00:14:03.100 --> 00:14:05.140\nNow the reason I have to tell\nit where to get the files,\n\n304\n00:14:05.140 --> 00:14:09.060\ncuz you might think to yourself,\naren't the files always in the same place,\n\n305\n00:14:09.060 --> 00:14:11.630\nis remember I said we might not\nwanna install this on our server?\n\n306\n00:14:11.630 --> 00:14:13.050\nYou might wanna run it\non your workstation.\n\n307\n00:14:13.050 --> 00:14:14.090\nMight's really not a good word.\n\n308\n00:14:14.090 --> 00:14:16.226\nYou really should run\nit on your workstation.\n\n309\n00:14:16.226 --> 00:14:18.605\nWell, that means you might\ncopy the past wd and\n\n310\n00:14:18.605 --> 00:14:21.510\nshadow files from the server\ndown to your workstation.\n\n311\n00:14:21.510 --> 00:14:23.646\nSo now we would need to point through\na different location for that.\n\n312\n00:14:23.646 --> 00:14:25.110\nSo, that's why we have to tell it.\n\n313\n00:14:25.110 --> 00:14:27.226\nI'm gonna tell it unshadow those.\n\n314\n00:14:27.226 --> 00:14:29.839\nIt's gonna combine the two files together,\nand\n\n315\n00:14:29.839 --> 00:14:32.076\nit's gonna output to screen by default.\n\n316\n00:14:32.076 --> 00:14:38.982\nSo I'm gonna redirect that into a file\ncalled, I'll call it users.txt, okay?\n\n317\n00:14:38.982 --> 00:14:41.832\nSo I'm gonna output that into users.txt.\n\n318\n00:14:41.832 --> 00:14:45.158\nNow that that's done,\nit runs really fast, okay?\n\n319\n00:14:45.158 --> 00:14:49.422\nAnd if I take a look at,\nactually, let me edit it.\n\n320\n00:14:49.422 --> 00:14:53.511\nI'm gonna take a look\nat that users.txt file,\n\n321\n00:14:53.511 --> 00:14:58.650\nwhich is if I type right,\nthere we go, and here it is.\n\n322\n00:14:58.650 --> 00:15:03.060\nAnd what I'll see is that it is\na true combination of passwd and\n\n323\n00:15:03.060 --> 00:15:07.150\nshadow, that when I go down here and\nI find a user, like user1, user2, user3,\n\n324\n00:15:07.150 --> 00:15:10.518\nI see their name followed\nby their password hash.\n\n325\n00:15:10.518 --> 00:15:14.954\nFollowed by their user ID,\nthe group ID, the home folder,\n\n326\n00:15:14.954 --> 00:15:19.770\ntheir shell, all that information\nkinda put together, okay?\n\n327\n00:15:19.770 --> 00:15:21.375\nNow, before I go any further,\n\n328\n00:15:21.375 --> 00:15:26.000\nthere's a lot of stuff in this file that\nI don't necessarily care about, right?\n\n329\n00:15:26.000 --> 00:15:29.040\nNotice all the accounts\nthat are service accounts.\n\n330\n00:15:29.040 --> 00:15:32.980\nService accounts are pretty easy to spot\ncuz they'll usually have something like\n\n331\n00:15:32.980 --> 00:15:37.170\nthis where it says, ftp: and then there's\nan asterisk instead of a password, okay?\n\n332\n00:15:37.170 --> 00:15:39.230\nAn asterisk means it\ndoesn't have a password.\n\n333\n00:15:39.230 --> 00:15:42.750\nYou're not allowed to interactive log\nin with this and exclamation point,\n\n334\n00:15:42.750 --> 00:15:44.100\nexclamation point is very similar.\n\n335\n00:15:44.100 --> 00:15:45.690\nAgain, it's not a valid account.\n\n336\n00:15:45.690 --> 00:15:50.700\nSo the dbus utility,\nit runs under root authority, right?\n\n337\n00:15:50.700 --> 00:15:54.560\nSo, it doesn't run under its own authority\nand so it can't be logged in with.\n\n338\n00:15:54.560 --> 00:15:55.660\nSo it doesn't have a password.\n\n339\n00:15:55.660 --> 00:15:57.880\nIt has a exclamation point,\nexclamation point.\n\n340\n00:15:57.880 --> 00:15:59.746\nSo those are ones that I\ndon't need to brute force.\n\n341\n00:15:59.746 --> 00:16:02.375\nAnd in fact, if I try and brute force\nthem, it's gonna cause some problems.\n\n342\n00:16:02.375 --> 00:16:06.138\nSo what I can do, I'm in the vy editor.\n\n343\n00:16:06.138 --> 00:16:09.653\nAnd in vi,\nthere's a little shortcut that we can\n\n344\n00:16:09.653 --> 00:16:13.460\nrun that will quickly\ndelete these out of here.\n\n345\n00:16:13.460 --> 00:16:17.840\nAnd remember, I'm editing my users.txt\nfile, I'm not editing the shadow file or\n\n346\n00:16:17.840 --> 00:16:21.020\nthe password file, because if you edit\nthose, you can really break things.\n\n347\n00:16:21.020 --> 00:16:21.910\nSo I'm not messing with those,\n\n348\n00:16:21.910 --> 00:16:25.420\nI'm messing with this text file that\nunshadow just generated for me.\n\n349\n00:16:25.420 --> 00:16:30.460\nAnd I come in here, and I'm gonna do a :g,\nand I'm gonna tell it to look for\n\n350\n00:16:30.460 --> 00:16:35.290\nany line that contains exclamation point,\nexclamation point.\n\n351\n00:16:35.290 --> 00:16:38.712\nSo I will say g/!!, bang bang or\n\n352\n00:16:38.712 --> 00:16:43.551\nexclamation point, exclamation point, /d.\n\n353\n00:16:43.551 --> 00:16:47.778\nSo do a global search for\nany line with !!, and\n\n354\n00:16:47.778 --> 00:16:53.190\nthen delete it, so pretty simple,\ng/ the characters /d.\n\n355\n00:16:53.190 --> 00:16:54.950\nAnd so when I run that,\nit just deleted 15 lines.\n\n356\n00:16:54.950 --> 00:16:59.500\nAnd then I want to do the same thing for\nones that have the *.\n\n357\n00:16:59.500 --> 00:17:03.390\n* is a little trickier, though, because\nthat's a wildcard, if I just search for\n\n358\n00:17:03.390 --> 00:17:04.600\nthat, I'd delete every line.\n\n359\n00:17:04.600 --> 00:17:11.720\nSo I need to do :g/ and\nthen I've got to escape the asterisk.\n\n360\n00:17:11.720 --> 00:17:13.920\nAnd I'm not just gonna search for\nthe asterisk, I'll search for\n\n361\n00:17:13.920 --> 00:17:14.685\nthe colons, as well.\n\n362\n00:17:14.685 --> 00:17:18.059\nSo I'm gonna search for :\\*:,\n\n363\n00:17:18.059 --> 00:17:23.580\nI had to put a \\ before the star\nto escape it, to make sure.\n\n364\n00:17:23.580 --> 00:17:26.620\nLet me zoom in so\nyou guys can see that really clear, so\n\n365\n00:17:26.620 --> 00:17:31.185\nwhat I'm doing here is g/ and\nI'm looking for :*:.\n\n366\n00:17:31.185 --> 00:17:34.570\nAnd I'm just putting a backslash\nbefore the star so it's not treated as\n\n367\n00:17:34.570 --> 00:17:38.720\na wildcard, it's treated as\na character instead, and then a /d.\n\n368\n00:17:38.720 --> 00:17:39.850\nAnd so by running that,\n\n369\n00:17:39.850 --> 00:17:43.250\nit'll delete all the other ones\nthat have a hidden password.\n\n370\n00:17:43.250 --> 00:17:47.003\nAnd all that's left are my regular users.\n\n371\n00:17:47.003 --> 00:17:48.762\n&gt;&gt; Fantastic.\n&gt;&gt; So now the file is smaller, and\n\n372\n00:17:48.762 --> 00:17:51.898\nI'm gonna pare down a little more,\nI don't wanna brute force root or mine,\n\n373\n00:17:51.898 --> 00:17:53.098\ncuz I know those passwords.\n\n374\n00:17:53.098 --> 00:17:55.509\nI know those, I know they're secure,\nso I don't wanna waste time on them.\n\n375\n00:17:55.509 --> 00:18:00.290\nAnd so I'll just delete those lines out,\nso now I've user1, user2, user3 and\n\n376\n00:18:00.290 --> 00:18:02.290\nthat's all that's in here.\n\n377\n00:18:02.290 --> 00:18:05.030\nThe smaller you make this file,\nthe faster this whole process runs,\n\n378\n00:18:05.030 --> 00:18:10.030\nso we wanna make sure that we\nget that kinda pared down.\n\n379\n00:18:10.030 --> 00:18:13.500\nBut also, if I'm gonna transmit this file\nover the network, I wanna be careful.\n\n380\n00:18:13.500 --> 00:18:17.230\nI don't wanna send my root hash across\nthe network in an unsecured method.\n\n381\n00:18:17.230 --> 00:18:20.530\nThis file is still important,\neven though everything's hashed in it.\n\n382\n00:18:20.530 --> 00:18:24.915\nBut at this point, now I've got my input\nfile kinda built the way that I want, and\n\n383\n00:18:24.915 --> 00:18:26.604\nI should be ready to do my test.\n\n384\n00:18:26.604 --> 00:18:30.032\n&gt;&gt; So is there a way we can speed\nthat up and run the process faster?\n\n385\n00:18:30.032 --> 00:18:33.283\n&gt;&gt; All right, so the best way to speed\nit up, I mean, what we just did helps\n\n386\n00:18:33.283 --> 00:18:36.340\na little bit, getting rid of\nuser accounts we don't need.\n\n387\n00:18:36.340 --> 00:18:39.630\nBut the other thing is, if you're\nrunning a server in a virtual machine,\n\n388\n00:18:39.630 --> 00:18:43.450\nthis process is really CPU intensive, and\nvirtual machines are usually competing for\n\n389\n00:18:43.450 --> 00:18:46.300\nCPU access, and it's gonna run slow.\n\n390\n00:18:46.300 --> 00:18:51.550\nThe other thing is, if your server is\nin production, you don't want people\n\n391\n00:18:51.550 --> 00:18:55.140\ngetting a slow experience on your server\ncuz you're trying to break passwords.\n\n392\n00:18:55.140 --> 00:18:56.050\nSo ideally,\n\n393\n00:18:56.050 --> 00:19:00.910\nwe'll take this users.txt file, and\ncopy it to a dedicated machine somewhere.\n\n394\n00:19:00.910 --> 00:19:05.375\nMaybe you've got a desktop or\na secure server, something that is secure.\n\n395\n00:19:05.375 --> 00:19:07.820\nWhere we can take this and\nset it on there, and start to run it.\n\n396\n00:19:07.820 --> 00:19:11.100\nAnd the main reason I say we wanna do\nthis somewhere else is that this process,\n\n397\n00:19:11.100 --> 00:19:13.510\nit can take a long time.\n\n398\n00:19:13.510 --> 00:19:17.581\nI ran an audit on one of mine a few weeks\nago, and I started it on Friday, and\n\n399\n00:19:17.581 --> 00:19:20.428\nwhen I came back on Monday,\nit still wasn't done.\n\n400\n00:19:20.428 --> 00:19:21.470\n&gt;&gt; Goodness gracious.\n\n401\n00:19:21.470 --> 00:19:23.718\n&gt;&gt; And it ran all through the weekend,\nand it still wasn't done, and\n\n402\n00:19:23.718 --> 00:19:25.542\nit wasn't until Tuesday\nthat it actually finished.\n\n403\n00:19:25.542 --> 00:19:28.511\nBecause what it does is,\nit tries dictionary words first, and\n\n404\n00:19:28.511 --> 00:19:31.430\ndictionary words,\nthey'll match pretty quickly.\n\n405\n00:19:31.430 --> 00:19:34.909\nBut then after that, it starts doing\ncharacter lengths, and so it will start\n\n406\n00:19:34.909 --> 00:19:38.349\nlooking for short passwords and\nthen medium passwords and long passwords.\n\n407\n00:19:38.349 --> 00:19:41.805\nAnd it's running through, doing these\nhashes, and that takes a long time, right,\n\n408\n00:19:41.805 --> 00:19:43.548\nthat really makes things very difficult.\n\n409\n00:19:43.548 --> 00:19:46.771\nAnd so If you have a dedicated\nmachine working this,\n\n410\n00:19:46.771 --> 00:19:49.410\nit's gonna get it done a lot faster.\n\n411\n00:19:49.410 --> 00:19:51.820\nIf you're piggy backing off\nof some existing machine or\n\n412\n00:19:51.820 --> 00:19:54.240\neven your own workstation,\nit can make it take a lot longer.\n\n413\n00:19:54.240 --> 00:19:56.610\nBut now that I've got that users.txt file,\n\n414\n00:19:56.610 --> 00:20:00.250\nI could copy that anywhere to any\nmachine that was out there that had John\n\n415\n00:20:00.250 --> 00:20:04.060\nthe Ripper on it, and I can feed\nthat in as input to John the Ripper.\n\n416\n00:20:04.060 --> 00:20:09.830\nI would just say ./John, so, I'm going to\ncall the John the Ripper executable and\n\n417\n00:20:09.830 --> 00:20:13.880\nthen I'll feed into it\nthat users.txt file.\n\n418\n00:20:13.880 --> 00:20:15.440\nAnd when I start to run it,\n\n419\n00:20:15.440 --> 00:20:18.950\nhere it says loaded three password\nhashes with three different salts.\n\n420\n00:20:18.950 --> 00:20:22.790\nThis is a fairly secure system,\nand now it's running through and\n\n421\n00:20:22.790 --> 00:20:28.660\ntrying to break them, and it immediately\nfound user one and user two.\n\n422\n00:20:28.660 --> 00:20:31.391\nIt says user two has a password\njust the word password, and\n\n423\n00:20:31.391 --> 00:20:33.584\nuser one has a password of 12345678.\n\n424\n00:20:33.584 --> 00:20:34.318\n&gt;&gt; That quick!\n\n425\n00:20:34.318 --> 00:20:38.854\n&gt;&gt; And user three has a password of pass,\nand it found them and it hid them, and\n\n426\n00:20:38.854 --> 00:20:40.030\nit's done.\n\n427\n00:20:40.030 --> 00:20:40.744\n&gt;&gt; Holy mackerel!\n\n428\n00:20:40.744 --> 00:20:44.594\n&gt;&gt; Now, I just got done telling\nyou this can take all weekend,\n\n429\n00:20:44.594 --> 00:20:45.984\nwhy did it go so fast?\n\n430\n00:20:45.984 --> 00:20:48.660\n&gt;&gt; Cuz those were very,\nyeah, they weren't secure.\n\n431\n00:20:48.660 --> 00:20:50.520\n&gt;&gt; Yeah, the passwords are crap [LAUGH]!\n\n432\n00:20:50.520 --> 00:20:53.883\n&gt;&gt; I wasn't going to say that,\nbut you're right, they were that.\n\n433\n00:20:53.883 --> 00:20:58.500\n&gt;&gt; So for users that have really bad\npasswords, you'll turn up really quick.\n\n434\n00:20:58.500 --> 00:21:01.110\nYou'll find those really fast, and\n\n435\n00:21:01.110 --> 00:21:03.290\nthey should be violating your\ncomplexity requirements.\n\n436\n00:21:03.290 --> 00:21:06.060\nIf you don't have a complexity\nrequirement, then you'll find these bad\n\n437\n00:21:06.060 --> 00:21:09.460\npasswords really fast, and now you\ncan go and make fun of those users.\n\n438\n00:21:09.460 --> 00:21:12.093\nWell, a hacker could have found\nthese passwords really fast too,\n\n439\n00:21:12.093 --> 00:21:13.233\nthat's the real risk here.\n\n440\n00:21:13.233 --> 00:21:15.859\n&gt;&gt; That's scary.\n&gt;&gt; We found these quick, if I had\n\n441\n00:21:15.859 --> 00:21:21.820\na complex password, then this process\nwould have taken a heck of a lot longer.\n\n442\n00:21:21.820 --> 00:21:28.055\nFor example,\nlet me get to another machine, and\n\n443\n00:21:28.055 --> 00:21:33.832\nlet me get into this\nwhere I've got an example\n\n444\n00:21:33.832 --> 00:21:40.990\nhere of a users.txt file that\nis a little more complex.\n\n445\n00:21:40.990 --> 00:21:44.600\nSo these are the accounts that I've been\ncreating on my own system during the show,\n\n446\n00:21:44.600 --> 00:21:49.750\nand these accounts are better passwords,\nnot as weak.\n\n447\n00:21:49.750 --> 00:21:56.258\nAnd if we were to feed those into John the\nRipper, now it's going to start running.\n\n448\n00:21:56.258 --> 00:21:59.119\nLoaded four password hashes\nwith four different salts, and\n\n449\n00:21:59.119 --> 00:22:01.880\nit's starting to do it's work,\nand it's sitting here.\n\n450\n00:22:02.900 --> 00:22:04.569\nAnd we're sitting,\nright now, at this point,\n\n451\n00:22:04.569 --> 00:22:06.290\nthe other one had already\ngiven me two passwords.\n\n452\n00:22:06.290 --> 00:22:08.404\n&gt;&gt; Yeah [CROSSTALK].\n\n453\n00:22:08.404 --> 00:22:11.239\n&gt;&gt; This one is still sitting here, well,\nif you press a key on your keyboard,\n\n454\n00:22:11.239 --> 00:22:13.632\nit will tell you what it's doing,\nright, so I pressed Enter.\n\n455\n00:22:13.632 --> 00:22:17.934\nAnd I can see that it's 40%\nof the way through its first\n\n456\n00:22:17.934 --> 00:22:21.670\npass of running through\njust regular words.\n\n457\n00:22:21.670 --> 00:22:25.580\nAnd if I zoom in on what it's doing,\nit's trying\n\n458\n00:22:25.580 --> 00:22:30.330\nhroot all the way through Mrroot, with\ncapital letters and lowercase letters.\n\n459\n00:22:30.330 --> 00:22:33.302\nIt's cycling through possible words, and\n\n460\n00:22:33.302 --> 00:22:38.720\nthese are still dictionary words, so\nit's saying Mr. Root or whatever.\n\n461\n00:22:38.720 --> 00:22:41.870\nAfter it gets through the dictionary\nwords, then it starts making words up.\n\n462\n00:22:41.870 --> 00:22:44.590\nI mean, cycling through all the different\ncharacter combinations, and\n\n463\n00:22:44.590 --> 00:22:50.230\nthat process can take a long time,\nit's telling you the amount of attempts.\n\n464\n00:22:50.230 --> 00:22:53.375\nAnd I don't know if the microphones\nwill pick this up or not, but\n\n465\n00:22:53.375 --> 00:22:55.571\nmy fans in my laptop\nare starting to ramp up.\n\n466\n00:22:55.571 --> 00:22:57.197\n&gt;&gt; Yeah, I hear it.\n&gt;&gt; And that's because it is running\n\n467\n00:22:57.197 --> 00:22:58.640\nthis very CPU intensive process.\n\n468\n00:22:58.640 --> 00:23:02.690\nIt is It's having to hash passwords and\nrun them against this script.\n\n469\n00:23:02.690 --> 00:23:07.127\nAnd it's doing them as fast as it can,\nso it's probably maxing out my CPU.\n\n470\n00:23:07.127 --> 00:23:10.408\nI have a Intel i7 with\na quad core processor, so\n\n471\n00:23:10.408 --> 00:23:15.810\na really good CPU in the system, and\nit's still going to take a long time.\n\n472\n00:23:15.810 --> 00:23:20.070\nI'm on my second pass here, and\nthe second pass is only 1% through, and\n\n473\n00:23:20.070 --> 00:23:22.970\nit's already taking longer\nthan the first pass.\n\n474\n00:23:22.970 --> 00:23:28.470\nThe first pass is straight up dictionary\nwords, it will find those really fast.\n\n475\n00:23:28.470 --> 00:23:30.990\nThose are the ones that you really\nneed to red flag those users on,\n\n476\n00:23:30.990 --> 00:23:33.470\nthose are users that need re-education.\n\n477\n00:23:33.470 --> 00:23:37.250\nThe second pass takes longer,\nthese are harder passwords, but\n\n478\n00:23:37.250 --> 00:23:39.310\nthey're reasonably achievable.\n\n479\n00:23:39.310 --> 00:23:41.184\nThe third pass,\nthird pass is like a nightmare,\n\n480\n00:23:41.184 --> 00:23:43.162\nthat's the one that does\nall sorts of crazy stuff.\n\n481\n00:23:43.162 --> 00:23:46.394\nAnd if a user gets caught in a third pass,\nit's really not that bad,\n\n482\n00:23:46.394 --> 00:23:47.770\nthey had a strong password.\n\n483\n00:23:47.770 --> 00:23:51.409\nIt would take days or even weeks for\nsomebody to be able to break into that.\n\n484\n00:23:51.409 --> 00:23:55.487\nBut if I just keep pressing Enter,\nit'll show me where it's getting to, and\n\n485\n00:23:55.487 --> 00:24:00.260\nhere we got Undertaker, Simone, varying\ncase, moving uppercase and lowercase.\n\n486\n00:24:00.260 --> 00:24:02.587\nAnd you can sit here and watch this for\ndays, and it'll go through and it-\n\n487\n00:24:02.587 --> 00:24:04.580\n&gt;&gt; It's fascinating, it really is.\n\n488\n00:24:04.580 --> 00:24:06.186\nNow I'm gonna stop it\ncuz I don't have days,\n\n489\n00:24:06.186 --> 00:24:06.872\nbut-\n&gt;&gt; [LAUGH]\n\n490\n00:24:06.872 --> 00:24:08.501\n&gt;&gt; That's basically how this\n\n491\n00:24:08.501 --> 00:24:10.140\nwhole system worked.\n\n492\n00:24:10.140 --> 00:24:11.650\nIt's a really neat utility.\n\n493\n00:24:11.650 --> 00:24:13.460\nIt's a brute force attacker.\n\n494\n00:24:13.460 --> 00:24:15.310\nAnd for auditing your own systems,\n\n495\n00:24:15.310 --> 00:24:17.380\nit works really well cuz you\nhave access to those files.\n\n496\n00:24:17.380 --> 00:24:19.630\nYou don't have to hack into a server and\ntry and get those files.\n\n497\n00:24:19.630 --> 00:24:21.100\nYou've already got the access.\n\n498\n00:24:21.100 --> 00:24:24.100\nSo clean up the file a little bit,\nfeed it into the John the Ripper.\n\n499\n00:24:24.100 --> 00:24:26.020\nLet it run for 24 hours.\n\n500\n00:24:26.020 --> 00:24:28.650\nAnd anybody who gets caught\nin the first 24 hours,\n\n501\n00:24:28.650 --> 00:24:30.400\nthat's somebody that you need to talk to.\n\n502\n00:24:30.400 --> 00:24:34.010\nYou need to teach them about stronger\npasswords, and if somebody doesn't get\n\n503\n00:24:34.010 --> 00:24:37.250\ncaught in the first 24 hours, then they've\ngot a pretty good password, right?\n\n504\n00:24:37.250 --> 00:24:38.640\nAnd beyond that,\n\n505\n00:24:38.640 --> 00:24:41.380\nwe still have the risk of how long\nwould it take to break that password.\n\n506\n00:24:41.380 --> 00:24:42.580\nMaybe it only takes a week.\n\n507\n00:24:42.580 --> 00:24:45.070\nAn attacker might spend a week,\nwhereas we may not.\n\n508\n00:24:45.070 --> 00:24:47.380\nSo just be aware you can use this utility.\n\n509\n00:24:47.380 --> 00:24:49.780\nThis is the same tool that they have.\n\n510\n00:24:49.780 --> 00:24:51.731\nThere's a few other advanced\nthings like rainbow tables and\n\n511\n00:24:51.731 --> 00:24:55.280\nstuff like that that you can use to speed\nthings up, but for the most part this will\n\n512\n00:24:55.280 --> 00:25:01.450\nhelp us catch the most egregious\nviolators of our password policy,\n\n513\n00:25:01.450 --> 00:25:04.370\nand let us audit and find out whether\nthose passwords are good or bad.\n\n514\n00:25:04.370 --> 00:25:08.952\n&gt;&gt; Fantastic job as usual Don, and\nauditing user passwords part two, and\n\n515\n00:25:08.952 --> 00:25:10.590\nthere was a part one,\nmake sure you watch that too.\n\n516\n00:25:10.590 --> 00:25:15.600\nI have another question for\nyou here on part two Don, John the Ripper,\n\n517\n00:25:15.600 --> 00:25:20.050\nwhat is his success rate, is it 100%,\nare they like 90%, I mean do we know?\n\n518\n00:25:20.050 --> 00:25:24.830\n&gt;&gt; Yeah, given enough time\n&gt;&gt; Up to a certain amount of characters,\n\n519\n00:25:24.830 --> 00:25:26.150\nits success rate's 100%.\n\n520\n00:25:26.150 --> 00:25:30.120\nIf you let it run long enough, it will\ncycle through every password combination.\n\n521\n00:25:30.120 --> 00:25:32.260\nSo eventually,\nit is going to find your password.\n\n522\n00:25:32.260 --> 00:25:33.160\n&gt;&gt; Fantastic.\n\n523\n00:25:33.160 --> 00:25:35.320\n&gt;&gt; The way you defeat that\nis with a long password.\n\n524\n00:25:35.320 --> 00:25:36.145\n&gt;&gt; Right.\n\n525\n00:25:36.145 --> 00:25:39.315\n&gt;&gt; I wanna say John the Ripper\nstops at 15 characters, but\n\n526\n00:25:39.315 --> 00:25:41.365\nby default you can\nobviously manipulate that.\n\n527\n00:25:41.365 --> 00:25:45.225\nBut if you've got a password over 15\ncharacters, it just takes so much compute\n\n528\n00:25:45.225 --> 00:25:48.157\ntime, that it's not worth it for an\nattacker to try and guess your password.\n\n529\n00:25:48.157 --> 00:25:49.312\n&gt;&gt; Okay.\n&gt;&gt; So long passwords,\n\n530\n00:25:49.312 --> 00:25:51.555\nstronger passwords like that really help.\n\n531\n00:25:51.555 --> 00:25:54.315\nAfter that they might as well\njust be trying to compute to\n\n532\n00:25:54.315 --> 00:25:57.075\nsolve cuz then once they get that\nthey can break all the passwords too.\n\n533\n00:25:57.075 --> 00:25:59.950\nThere's better attacks that are easier.\n\n534\n00:25:59.950 --> 00:26:02.840\nHackers will normally go for\nthe low hanging fruit, the easy stuff.\n\n535\n00:26:02.840 --> 00:26:06.500\nSo if you have a nice strong password,\nif you use a pass phrase instead of\n\n536\n00:26:06.500 --> 00:26:10.160\na password then you'll have a nice\nlong one that's easy to remember and\n\n537\n00:26:10.160 --> 00:26:11.820\nit defeats attacks like these.\n\n538\n00:26:11.820 --> 00:26:13.030\nIt just takes too long to calculate.\n\n539\n00:26:13.030 --> 00:26:14.320\n&gt;&gt; Yeah in fact that's what I use.\n\n540\n00:26:14.320 --> 00:26:17.748\nI use pass phrases with symbols and-\n&gt;&gt; Which one do you use?\n\n541\n00:26:17.748 --> 00:26:19.879\n[LAUGH] No.\n\n542\n00:26:19.879 --> 00:26:22.170\n&gt;&gt; [LAUGH]\n&gt;&gt; So Don,\n\n543\n00:26:22.170 --> 00:26:25.140\nany last words on auditing user passwords?\n\n544\n00:26:25.140 --> 00:26:27.130\n&gt;&gt; The main thing is to do it, right.\n\n545\n00:26:27.130 --> 00:26:28.020\nAudit the passwords.\n\n546\n00:26:28.020 --> 00:26:31.310\nEverything I've done here is focused\nreally on local Linux user accounts,\n\n547\n00:26:31.310 --> 00:26:35.170\nwhich is great cuz these are what we use,\nbut if you've got a directory service\n\n548\n00:26:35.170 --> 00:26:37.550\nbe aware that we're not going\nto catch them this way.\n\n549\n00:26:37.550 --> 00:26:40.270\nWe need to get the data out\nof the directory service.\n\n550\n00:26:40.270 --> 00:26:40.970\nAnd you can use the same tool.\n\n551\n00:26:40.970 --> 00:26:42.820\nIt 's just that you get the data\nfrom a different place.\n\n552\n00:26:42.820 --> 00:26:46.301\nSo, remember that we focused on local\npasswords, there are other passwords that\n\n553\n00:26:46.301 --> 00:26:48.770\nare out there you need to\nbe concerned about as well.\n\n554\n00:26:48.770 --> 00:26:49.700\n&gt;&gt; Fantastic Don.\n\n555\n00:26:49.700 --> 00:26:53.330\nI really have enjoyed these couple\nof episodes.they were amazing.\n\n556\n00:26:53.330 --> 00:26:54.150\nWell, they're all amazing!\n\n557\n00:26:54.150 --> 00:26:58.110\nIn fact you should watch every\nepisode of Linux Security Techniques,\n\n558\n00:26:58.110 --> 00:27:00.070\ncuz you'll be very glad you did.\n\n559\n00:27:00.070 --> 00:27:01.540\nAnd thank you for watching ITPRO.TV.\n\n560\n00:27:01.540 --> 00:27:03.910\nRemember, a good IT Pro\nis always learning.\n\n561\n00:27:03.910 --> 00:27:04.960\nI'm Zach Memos.\n\n562\n00:27:04.960 --> 00:27:05.470\n&gt;&gt; I'm Don Pezet.\n\n563\n00:27:05.470 --> 00:27:06.460\n&gt;&gt; And we will see you soon.\n\n564\n00:27:06.460 --> 00:27:13.650\n[MUSIC]\n\n565\n00:27:13.650 --> 00:27:17.088\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "230614901"
        },
        {
          "description": "Don and Zach cover how we get our system setup to audit file access, how we can see if it is already running (auditd), auditctl, audit folders for access, how to make the rules persistent, and how we review the audit logs.",
          "length": "1912",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-4-auditing_the_filesystem-081517-PGM.00_31_36_13.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-4-auditing_the_filesystem-081517-PGM.00_31_36_13.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-4-auditing_the_filesystem-081517-PGM.00_31_36_13.Still001-sm.jpg",
          "title": "Auditing the Filesystem",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:06.515\nWelcome to ITProTV.\n\n2\n00:00:06.515 --> 00:00:08.141\n[MUSIC]\n\n3\n00:00:08.141 --> 00:00:10.591\n&gt;&gt; You're watching ITPro TV.\n\n4\n00:00:12.420 --> 00:00:13.260\n&gt;&gt; Hello, and thanking for\n\n5\n00:00:13.260 --> 00:00:17.940\nwatching ITProTV, helping you learn\nwherever you go, I'm your host Zach Memos.\n\n6\n00:00:17.940 --> 00:00:20.860\nAs we continue with Linux\nsecurity techniques we're\n\n7\n00:00:20.860 --> 00:00:25.490\ngonna be auditing the file system today,\nwho's gonna show us how to do that?\n\n8\n00:00:25.490 --> 00:00:28.120\nWho's gonna do that, I know,\nDon Pezet, he's right over here.\n\n9\n00:00:28.120 --> 00:00:29.800\nDon, good to see you again, sir.\n\n10\n00:00:29.800 --> 00:00:30.830\n&gt;&gt; Thanks for having me back, Zach.\n\n11\n00:00:30.830 --> 00:00:34.340\nAnd in this episode we are gonna be taking\na look at auditing the file system,\n\n12\n00:00:34.340 --> 00:00:38.470\nthis is a really important technique that\nwe can use to help secure our systems.\n\n13\n00:00:38.470 --> 00:00:42.280\nA lot of security, it kinda falls into\ntwo camps, either being proactive or\n\n14\n00:00:42.280 --> 00:00:43.640\nbeing reactive.\n\n15\n00:00:43.640 --> 00:00:46.696\nAnd being proactive is where we try and\nstop attacks, and exploits, and\n\n16\n00:00:46.696 --> 00:00:48.313\nthings like that before they happen.\n\n17\n00:00:48.313 --> 00:00:51.171\nReactive is, well,\nreacting after the attack and\n\n18\n00:00:51.171 --> 00:00:53.633\ntaking some kind of\nresponse to correct it.\n\n19\n00:00:53.633 --> 00:00:58.593\nWell in order for us to be reactive we\nneed to know that an attack happened,\n\n20\n00:00:58.593 --> 00:01:02.833\nand the way we can know an attack\nhappened is we are proactive and\n\n21\n00:01:02.833 --> 00:01:05.380\nset up some kind of monitoring.\n\n22\n00:01:05.380 --> 00:01:09.240\nWe need to be monitoring our file system,\nmonitoring the accesses occurring on our\n\n23\n00:01:09.240 --> 00:01:12.630\nsystem, so that we have a record so\nthat we can tell whether or\n\n24\n00:01:12.630 --> 00:01:16.530\nnot somebody has gotten into resources\nthey shouldn't have been able to get into.\n\n25\n00:01:16.530 --> 00:01:20.610\nOr if you find out you've been hacked,\nlet's go worst case scenario,\n\n26\n00:01:20.610 --> 00:01:24.410\nthat an attacker defaces your website.\n\n27\n00:01:24.410 --> 00:01:28.832\nSo you come into work one day and your\nwebsite, your homepage for your company,\n\n28\n00:01:28.832 --> 00:01:30.945\nnow has all sorts of crazy stuff on it.\n\n29\n00:01:30.945 --> 00:01:33.640\nWell you know you've been compromised so\nyou don't really need an alert system for\n\n30\n00:01:33.640 --> 00:01:35.462\nthat, you can kind of see it\nright there on the webpage.\n\n31\n00:01:35.462 --> 00:01:38.255\nYou know it's been compromised,\nwell how do you clean it up,\n\n32\n00:01:38.255 --> 00:01:40.040\nhow do you recover from that?\n\n33\n00:01:40.040 --> 00:01:41.180\nYou need to find out what's been changed,\n\n34\n00:01:41.180 --> 00:01:44.800\nyou need to find out what files have been\naccessed, what files have been changed.\n\n35\n00:01:44.800 --> 00:01:48.190\nHas your customer data been leaked,\nhas somebody gained access to that?\n\n36\n00:01:48.190 --> 00:01:53.037\nYou need a record, and unfortunately a lot\nof Linux distributions don't create that\n\n37\n00:01:53.037 --> 00:01:55.863\nrecord, they just don't\nhave that available and\n\n38\n00:01:55.863 --> 00:02:00.662\nas a result you're left guessing was my\ncustomer data compromised, I don't know.\n\n39\n00:02:00.662 --> 00:02:04.658\nSo in this episode what I wanna do is I\nwanna show you guys a technique that we\n\n40\n00:02:04.658 --> 00:02:08.719\ncan use inside of pretty much every\nLinux distro to actually audit that file\n\n41\n00:02:08.719 --> 00:02:13.231\nsystem access to keep track of who touched\nwhat file when, and that way we know these\n\n42\n00:02:13.231 --> 00:02:17.253\nare the files that were affected by\na particular compromise or whatever.\n\n43\n00:02:17.253 --> 00:02:19.511\nSo that's what we're gonna take\na look at right here in this episode.\n\n44\n00:02:19.511 --> 00:02:21.001\n&gt;&gt; So you have me very intrigued.\n\n45\n00:02:21.001 --> 00:02:23.764\nSo how do we get our system\nset up to audit file access?\n\n46\n00:02:23.764 --> 00:02:24.328\n&gt;&gt; All right,\n\n47\n00:02:24.328 --> 00:02:28.116\nthe main thing that we need is a simple\nservice that's called the audit daemon.\n\n48\n00:02:28.116 --> 00:02:31.613\nThe audit daemon runs in the background\nand it tracks file access, and\n\n49\n00:02:31.613 --> 00:02:35.108\nwhen people access those files,\nit can actually do more than files but\n\n50\n00:02:35.108 --> 00:02:37.833\nwe're gonna use it here for\nfiles in this episode, but\n\n51\n00:02:37.833 --> 00:02:41.233\nwhen it tracks that file access it\nlogs it through the audit system.\n\n52\n00:02:41.233 --> 00:02:42.884\nJust like SELinux has an audit log,\n\n53\n00:02:42.884 --> 00:02:46.380\nhere we have the file system log\nthat the audit daemon is powering.\n\n54\n00:02:46.380 --> 00:02:48.820\nSo you may already have it,\n\n55\n00:02:48.820 --> 00:02:52.200\nthis could be one of those super\neasy simple ones to get configured.\n\n56\n00:02:52.200 --> 00:02:55.800\nSo for example if you have Red Hat\nEnterprise Linux, what I'm using for\n\n57\n00:02:55.800 --> 00:02:57.870\nmy servers, it's already got it,\n\n58\n00:02:57.870 --> 00:03:01.520\nthe auto daemon is installed and\nenabled by default.\n\n59\n00:03:01.520 --> 00:03:04.571\nBut on a lot of distros it isn't and so\nyou'll need to get it installed, and\n\n60\n00:03:04.571 --> 00:03:06.763\nfortunately it's really easy\nto get it up and going.\n\n61\n00:03:06.763 --> 00:03:11.388\nSo for example if you're on a Red Hat\nbased system like Cintas you\n\n62\n00:03:11.388 --> 00:03:14.729\nwould say yum install audit,\njust like that,\n\n63\n00:03:14.729 --> 00:03:18.667\nif I was on Fedora I would make\nthat a DNF instead of yum,\n\n64\n00:03:18.667 --> 00:03:23.632\nif I was on a Ubuntu or Debian system\nI would say apt get install audit,\n\n65\n00:03:23.632 --> 00:03:27.946\nthe name of the package is\npretty much the same everywhere.\n\n66\n00:03:27.946 --> 00:03:32.783\nI have seen some versions of Ubuntu\nwhere for whatever reason they called it\n\n67\n00:03:32.783 --> 00:03:37.157\nthe audit-service, so if you try and\ndo an install of just audit and\n\n68\n00:03:37.157 --> 00:03:41.991\nit doesn't pick it up maybe try adding\n-service to the end or just do a quick\n\n69\n00:03:41.991 --> 00:03:47.710\nsearch like an app-get-list-audit-* and\njust see kinda what's out there.\n\n70\n00:03:47.710 --> 00:03:50.129\nBut for the most part its\nusually just called audit and\n\n71\n00:03:50.129 --> 00:03:52.134\nyou can have that\ninstalled in a heartbeat.\n\n72\n00:03:52.134 --> 00:03:55.074\nMy system I've already got it so\nif I try and install that,\n\n73\n00:03:55.074 --> 00:03:57.234\nwhich actually I need to sudo this anyway,\n\n74\n00:03:57.234 --> 00:04:00.775\nthen when I go to install it's just\ngonna tell me it's already there.\n\n75\n00:04:00.775 --> 00:04:04.800\nIt's already there, and\nis it already running?\n\n76\n00:04:04.800 --> 00:04:07.567\nWell it actually is in Red Hat but\nit may not be on yours, so\n\n77\n00:04:07.567 --> 00:04:09.021\nwe need to double check that.\n\n78\n00:04:09.021 --> 00:04:14.301\nAnd you can double check that pretty easy\njust by doing a quick system ctl status\n\n79\n00:04:14.301 --> 00:04:19.683\nauditd, and so I'm gonna check for\nthat audit daemon and see if it's running.\n\n80\n00:04:19.683 --> 00:04:21.365\nI can see mine's active and running, and\n\n81\n00:04:21.365 --> 00:04:23.767\nthis is a pretty clean install\nof Red Hat Enterprise Linux,\n\n82\n00:04:23.767 --> 00:04:26.987\nif you've been watching this show then\nyou've seen everything that I've done\n\n83\n00:04:26.987 --> 00:04:30.210\nto this particular server cuz I've\nbeen using it throughout the show.\n\n84\n00:04:30.210 --> 00:04:34.060\nBut auditd is already up and running,\nand the main reason is because we've got\n\n85\n00:04:34.060 --> 00:04:38.920\nSELinux and SELinux needs to use auto logs\nand so it's all tied into the same system.\n\n86\n00:04:38.920 --> 00:04:41.390\nIf you're using Ubuntu though\nyou don't have SELinux, and\n\n87\n00:04:41.390 --> 00:04:45.870\nso you don't have audit except in\ncertain installation packages.\n\n88\n00:04:45.870 --> 00:04:47.630\nSo getting it installed not a big deal,\n\n89\n00:04:47.630 --> 00:04:52.476\ngetting it turned on is like any other\nservice we can say system ctl and\n\n90\n00:04:52.476 --> 00:04:57.410\nthen just enable auditd to enable it and\nthen start,\n\n91\n00:04:57.410 --> 00:05:02.750\nor you can do a --now to go ahead enable\nand start it all at the same time and\n\n92\n00:05:02.750 --> 00:05:05.140\nthat's gonna get that up and\ngoing and get us in business.\n\n93\n00:05:05.140 --> 00:05:08.077\nSo once that's done now we're up and\nrunning auditd and\n\n94\n00:05:08.077 --> 00:05:11.370\nwe're ready to actually\nstart auditing access.\n\n95\n00:05:11.370 --> 00:05:14.090\nIt has a default configuration\nfile that's read which I\n\n96\n00:05:14.090 --> 00:05:14.990\nhaven't really looked at here.\n\n97\n00:05:14.990 --> 00:05:19.360\nIf I go into /etc/audit I get permission\ndenied, and that's because auditing\n\n98\n00:05:19.360 --> 00:05:24.177\nis very critical infrastructure, right, we\ndon't want just regular end users going in\n\n99\n00:05:24.177 --> 00:05:27.904\nand seeing what's being monitored or\neven trying to modify that, so\n\n100\n00:05:27.904 --> 00:05:31.722\nI will need to be an administrator\nto see that default configuration.\n\n101\n00:05:31.722 --> 00:05:34.417\nI'm gonna just bump up my whole shell,\nI'd do a sudo-s.\n\n102\n00:05:34.417 --> 00:05:35.441\n&gt;&gt; That's what I was gonna say do a sudo,\nyeah.\n\n103\n00:05:35.441 --> 00:05:37.837\n&gt;&gt; Yeah, cuz otherwise I'm gonna have\nto sudo every single command for\n\n104\n00:05:37.837 --> 00:05:39.320\nthe rest of the show.\n\n105\n00:05:39.320 --> 00:05:43.720\nBut I'm gonna do that and\njust jump into /etc/audit, and\n\n106\n00:05:43.720 --> 00:05:48.850\nright in there you'll see this auditd.com,\nthat's the default configuration.\n\n107\n00:05:48.850 --> 00:05:52.350\nAnd you may actually be fine with the\ndefault configuration, the odds are you\n\n108\n00:05:52.350 --> 00:05:55.260\nwon't be though, that you'll want\nto add custom rules and things.\n\n109\n00:05:55.260 --> 00:06:00.510\nBut if we take a look at what's\nin there you'll see that it's\n\n110\n00:06:00.510 --> 00:06:05.870\ngot a lot of options, a lot of things that\nwe can tweak, and change, and configure.\n\n111\n00:06:05.870 --> 00:06:09.820\nYou might be okay with the defaults but\nyou, again, might not.\n\n112\n00:06:09.820 --> 00:06:11.980\nSome of the things that you might\nwanna change, if you look around,\n\n113\n00:06:11.980 --> 00:06:14.270\nare things like where\nthe log file is stored.\n\n114\n00:06:14.270 --> 00:06:17.110\nAnd the default is\n/var/log/audit/audit.log,\n\n115\n00:06:17.110 --> 00:06:21.130\nand if you watched our\nSELinux episode you know\n\n116\n00:06:21.130 --> 00:06:23.630\nwe dug into that file quite a bit\nto find our SELinux entries.\n\n117\n00:06:23.630 --> 00:06:26.580\nSo that's where it's stored by default,\nyou could move it somewhere else, or\n\n118\n00:06:26.580 --> 00:06:28.030\nyou could give it a different name,\n\n119\n00:06:28.030 --> 00:06:31.430\nyou can specify the group that\nlog is gonna be owned by.\n\n120\n00:06:31.430 --> 00:06:35.280\nWhether you write a log at all, you don't\nhave to, not a whole lot of point in doing\n\n121\n00:06:35.280 --> 00:06:38.150\nthis if you're not gonna write\nthe logs but you can choose not to.\n\n122\n00:06:38.150 --> 00:06:41.530\nThe log format, the way that it's\ngonna store the file format,\n\n123\n00:06:41.530 --> 00:06:44.740\nthese are all things that you can\nkind of tailor and customize.\n\n124\n00:06:44.740 --> 00:06:47.920\nBut the main ones that I usually pay\nattention to are these guys right here,\n\n125\n00:06:47.920 --> 00:06:51.960\nthe maximum log file, right, how many log\nfiles we can create, cuz if we have log\n\n126\n00:06:51.960 --> 00:06:54.910\nrotate it's gonna be rotating out logs so\nthey don't get too big.\n\n127\n00:06:54.910 --> 00:06:58.330\nWell these are security logs,\nyou may wanna maintain them for a long,\n\n128\n00:06:58.330 --> 00:07:02.050\nlong time, so you may need to get in\nhere and tweak how many maximum logs you\n\n129\n00:07:02.050 --> 00:07:05.800\nkeep to set that data retention for\nyou as you need.\n\n130\n00:07:05.800 --> 00:07:09.250\nAnd down here we'll see\nthe max log file action,\n\n131\n00:07:09.250 --> 00:07:13.750\nif the log file gets full what does it do,\nit rotates and it's gonna rotate\n\n132\n00:07:13.750 --> 00:07:17.070\neight times before it starts overwriting\nwith this default configuration.\n\n133\n00:07:17.070 --> 00:07:18.500\nSo you may need to tweak these or\n\n134\n00:07:18.500 --> 00:07:22.582\nchange them, each of these options in\nhere is really kind of built around that.\n\n135\n00:07:22.582 --> 00:07:25.945\nIf you're just trying to get\nbasic auditing in place and\n\n136\n00:07:25.945 --> 00:07:30.170\nyou're sending to a remote syslog server\nyou may be storing data forever on\n\n137\n00:07:30.170 --> 00:07:32.820\nthe remote syslog server so\nonly having eight days of activity, or\n\n138\n00:07:32.820 --> 00:07:36.320\neight logs of activity,\nright here is probably enough, and so\n\n139\n00:07:36.320 --> 00:07:39.580\nyou may just stick with this default\nconfiguration and let it run.\n\n140\n00:07:39.580 --> 00:07:42.500\nBut just be aware that each of\nthese can kinda be tweaked and\n\n141\n00:07:42.500 --> 00:07:45.852\ntailored to dictate how the audit\ndaemon is gonna handle that log.\n\n142\n00:07:45.852 --> 00:07:49.390\nNow nothing in here actually has\nto deal with what's being audited,\n\n143\n00:07:49.390 --> 00:07:53.182\nright, that's something that we're\nabsolutely gonna have to change.\n\n144\n00:07:53.182 --> 00:07:56.313\nEverybody is gonna pick and\nchoose what's gonna be audited.\n\n145\n00:07:56.313 --> 00:08:01.620\nThis is really just how the daemon is\nworking, how it's tracking it's logs.\n\n146\n00:08:01.620 --> 00:08:04.910\nSo, most people do leave this\nat the default, and then go and\n\n147\n00:08:04.910 --> 00:08:06.910\ncustomize what you're\nactually tracking afterwards.\n\n148\n00:08:06.910 --> 00:08:07.910\nSo there's a lot more work to do.\n\n149\n00:08:07.910 --> 00:08:11.330\nBut as far as the basic configuration,\nthis is pretty good.\n\n150\n00:08:11.330 --> 00:08:12.530\nIt's already up and running.\n\n151\n00:08:12.530 --> 00:08:14.850\nIn my case,\nI don't really have to do much.\n\n152\n00:08:14.850 --> 00:08:18.200\nSo the daemon is done and\nnow I'm able to track access.\n\n153\n00:08:18.200 --> 00:08:21.470\nSo once again,\nhow can we see if it's still running?\n\n154\n00:08:21.470 --> 00:08:24.530\n&gt;&gt; So the main way,\nkinda what I did a moment ago,\n\n155\n00:08:24.530 --> 00:08:29.000\nwas systemctl status and\nthen pulled up the audit d.\n\n156\n00:08:29.000 --> 00:08:30.870\nSo I can see that it's up and\nit's running.\n\n157\n00:08:30.870 --> 00:08:32.110\n&gt;&gt; Right.\n&gt;&gt; But there's other ways that I\n\n158\n00:08:32.110 --> 00:08:32.670\ncould have done this.\n\n159\n00:08:32.670 --> 00:08:35.910\nSo for example, when we interact\nwith the audit command, or\n\n160\n00:08:35.910 --> 00:08:40.580\nthe audit daemon, I don't normally\ngo directly to the log file.\n\n161\n00:08:40.580 --> 00:08:42.780\nWe actually have a collection\nof utilities we can use,\n\n162\n00:08:42.780 --> 00:08:45.780\nand I haven't used these in the other\nshows to try to keep things simple,\n\n163\n00:08:45.780 --> 00:08:47.760\nbut now is the time to\ntake a look at them.\n\n164\n00:08:47.760 --> 00:08:48.440\n&gt;&gt; Yeah.\n\n165\n00:08:48.440 --> 00:08:51.604\n&gt;&gt; So we have a utility called auditctl.\n\n166\n00:08:51.604 --> 00:08:54.176\nLike you have systemctl,\nand journalctl, and\n\n167\n00:08:54.176 --> 00:08:58.292\nall these other commands that kind of\ncame along with the system D movement,\n\n168\n00:08:58.292 --> 00:09:02.103\nwe have auditctl and that let'sus talk and\ncontrol the audit daemon.\n\n169\n00:09:02.103 --> 00:09:07.660\nAnd you can run auditctl-S\nto get a quick status.\n\n170\n00:09:07.660 --> 00:09:11.340\nAnd if I only clear that out so\nwe can see it kinda clean here.\n\n171\n00:09:11.340 --> 00:09:14.260\nWhat we can see right here is real quick,\nis it enabled?\n\n172\n00:09:14.260 --> 00:09:15.020\nYes or no.\n\n173\n00:09:15.020 --> 00:09:18.400\nIs it turned on and\ndo I have a rate limit assigned?\n\n174\n00:09:18.400 --> 00:09:19.630\nIs there a backlog?\n\n175\n00:09:19.630 --> 00:09:21.030\nIs it healthy?\n\n176\n00:09:21.030 --> 00:09:22.950\nAnd what I'm seeing right\nhere is healthy information.\n\n177\n00:09:22.950 --> 00:09:26.250\nI can see that audit d is\nrunning its process Id 733.\n\n178\n00:09:26.250 --> 00:09:30.310\nIt's enabled, it's up and it's running,\nand there's currently no back log with no\n\n179\n00:09:30.310 --> 00:09:33.600\nlost values, everything's up and\nrunning healthy.\n\n180\n00:09:33.600 --> 00:09:37.340\nSo that's another way we kinda quickly\ntake a look and see if it's running.\n\n181\n00:09:37.340 --> 00:09:41.240\nIf you run auditctl and you get command\nnot found, that's a good indicator that\n\n182\n00:09:41.240 --> 00:09:44.478\nyou haven't installed the audit daemon or\nthat it's not a part of your.\n\n183\n00:09:44.478 --> 00:09:46.129\nSo you need to get that installed.\n\n184\n00:09:46.129 --> 00:09:47.367\nBut I can see that status.\n\n185\n00:09:47.367 --> 00:09:52.090\nI can go a little bit further and\nsay auditctl-l to get a list of the rules.\n\n186\n00:09:52.090 --> 00:09:54.140\nNow, we haven't see the rules yet.\n\n187\n00:09:54.140 --> 00:09:57.410\nThat config file,\nit just had tweaks for the daemon.\n\n188\n00:09:57.410 --> 00:10:01.140\nLittle knobs to adjust how much\nlog information we retain and\n\n189\n00:10:01.140 --> 00:10:02.650\nthings like that.\n\n190\n00:10:02.650 --> 00:10:05.980\nBut -l will show me\nthe actual audit rules.\n\n191\n00:10:05.980 --> 00:10:10.620\nAnd the rules are what it's\nactually keeping track of.\n\n192\n00:10:10.620 --> 00:10:13.030\nAnd I get no rules.\n\n193\n00:10:13.030 --> 00:10:17.330\nSo this is how I know that auditd is\nrunning, but it hasn't been set up.\n\n194\n00:10:18.330 --> 00:10:20.410\nAnd that's not entirely true.\n\n195\n00:10:20.410 --> 00:10:22.255\nauditd can monitor a lot of stuff.\n\n196\n00:10:22.255 --> 00:10:25.240\nIt's being used for SELinux's reporting.\n\n197\n00:10:25.240 --> 00:10:30.210\nYou can use it to monitor user changes, so\nif a user account gets put into a group,\n\n198\n00:10:30.210 --> 00:10:32.080\nwe can audit and we can track that.\n\n199\n00:10:32.080 --> 00:10:36.380\nBut on the file system, we need to tell\nit exactly which files to monitor,\n\n200\n00:10:36.380 --> 00:10:38.710\nbecause if it just monitored\nthe whole hard drive,\n\n201\n00:10:38.710 --> 00:10:41.972\nyour lungs would fill up\nalmost instantaneously.\n\n202\n00:10:41.972 --> 00:10:47.450\nI mean, you have so much file access going\non in your system at any given moment that\n\n203\n00:10:47.450 --> 00:10:49.120\nif you let this thing running,\n\n204\n00:10:49.120 --> 00:10:51.330\nit would really just fill\nyour hard drive with logs.\n\n205\n00:10:51.330 --> 00:10:55.640\nSo we've got to actively tell it what we\nwant to log so we can keep track of that,\n\n206\n00:10:55.640 --> 00:11:00.710\nwe can have that record of what's\nbeing done, and who did it, and\n\n207\n00:11:00.710 --> 00:11:01.280\nwhen it was done.\n\n208\n00:11:01.280 --> 00:11:03.690\nSo all of that is information\nwe wanna have and\n\n209\n00:11:03.690 --> 00:11:06.310\nwith the default configuration,\nI've got no rules.\n\n210\n00:11:06.310 --> 00:11:09.098\nSo it's not actually\nmonitoring much at all.\n\n211\n00:11:09.098 --> 00:11:10.670\nIt's just kinda sitting there waiting for\n\n212\n00:11:10.670 --> 00:11:12.890\npeople to tell it to\nenter in log messages.\n\n213\n00:11:12.890 --> 00:11:16.960\n&gt;&gt; So Don, if it's not monitoring\nanything already, how do we tell it to?\n\n214\n00:11:16.960 --> 00:11:20.170\n&gt;&gt; Well, we just need to add some rules to\nit and the rules are written in kind of\n\n215\n00:11:20.170 --> 00:11:22.000\nan interesting format,\nit's really not that bad.\n\n216\n00:11:22.000 --> 00:11:23.500\nWe're gonna use Odyssey TL and\n\n217\n00:11:23.500 --> 00:11:26.710\nwe're gonna tack in some rules\nthat we tell it to monitor.\n\n218\n00:11:26.710 --> 00:11:29.660\nIt's a little bit different based on\nwhether you're monitoring a file versus\n\n219\n00:11:29.660 --> 00:11:30.160\na folder.\n\n220\n00:11:30.160 --> 00:11:33.680\nA lot of times you want to monitor\nthe entire contents of a folder, so for\n\n221\n00:11:33.680 --> 00:11:39.270\nexample, let's say that\nmaybe I have a script.\n\n222\n00:11:39.270 --> 00:11:41.530\nLet me get into my home folder here.\n\n223\n00:11:41.530 --> 00:11:44.660\nMaybe I've got some kind of script,\nor here, these SQL files that I've\n\n224\n00:11:44.660 --> 00:11:48.030\ngot leftover from one of our other shows,\nI want to monitor these files.\n\n225\n00:11:49.050 --> 00:11:51.450\nIf somebody messes with these files,\nI wanna know about it,\n\n226\n00:11:51.450 --> 00:11:54.620\nmaybe I've got customer data, or\ncredit card data, in these files,\n\n227\n00:11:54.620 --> 00:11:56.750\ncuz these are my database files.\n\n228\n00:11:56.750 --> 00:11:59.970\nSo, I wanna audit those\nfiles specifically.\n\n229\n00:11:59.970 --> 00:12:00.510\n&gt;&gt; Right.\n&gt;&gt; So\n\n230\n00:12:00.510 --> 00:12:03.630\nwhat I would do is I would say,\nauditctl-w.\n\n231\n00:12:03.630 --> 00:12:08.710\nAnd I don't know what it actually stands\nfor, but in my mind, I always think watch.\n\n232\n00:12:08.710 --> 00:12:11.480\nI want to watch a file, or watch a folder.\n\n233\n00:12:11.480 --> 00:12:12.320\n&gt;&gt; Don, The Watcher.\n\n234\n00:12:12.320 --> 00:12:16.680\n&gt;&gt; So I'm gonna say odysseytl-w, and\nthen I tell it what I want to monitor.\n\n235\n00:12:16.680 --> 00:12:22.353\nSo in my case,\nI'm gonna say I wanna monitor /home/\n\n236\n00:12:22.353 --> 00:12:26.400\nslash employees.csv or .sql either one.\n\n237\n00:12:26.400 --> 00:12:29.040\nI'll do the csv cuz it's easier to read.\n\n238\n00:12:29.040 --> 00:12:31.032\nSo that's the file I wanna watch and\n\n239\n00:12:31.032 --> 00:12:33.830\nnow I need to tell it what\nit is that I want to watch.\n\n240\n00:12:35.080 --> 00:12:36.950\nWhen I say it that way it\ndoesn't make sense, but\n\n241\n00:12:36.950 --> 00:12:39.730\nI want to tell it what\nactions I'm watching for.\n\n242\n00:12:39.730 --> 00:12:44.450\nAnd the actions are controlled by\npermissions, so I do -p for permissions.\n\n243\n00:12:44.450 --> 00:12:47.840\nAnd then I say, do I wanna\nmonitor when somebody reads it or\n\n244\n00:12:47.840 --> 00:12:49.010\nwhen somebody writes it.\n\n245\n00:12:49.010 --> 00:12:52.520\nOr if it's a script,\nmaybe I wanna monitor if they execute it.\n\n246\n00:12:52.520 --> 00:12:55.130\nSo it's written just like\nUnix file permissions.\n\n247\n00:12:55.130 --> 00:12:56.660\nI could say RWX.\n\n248\n00:12:56.660 --> 00:13:00.210\nAnd now I'm gonna monitor and\naudit anytime somebody reads,\n\n249\n00:13:00.210 --> 00:13:02.170\nwrites, or executes the file.\n\n250\n00:13:02.170 --> 00:13:05.684\nWell, in these cases, they're just text\nfiles so they're not gonna execute.\n\n251\n00:13:05.684 --> 00:13:08.316\nSo there's really not a need for\nme to monitor for that, so\n\n252\n00:13:08.316 --> 00:13:10.002\nI might just monitor read and write.\n\n253\n00:13:10.002 --> 00:13:12.657\nOr, I might say, you know what,\nI don't care if somebody reads this,\n\n254\n00:13:12.657 --> 00:13:14.804\nit's public data,\nI just don't want them changing it.\n\n255\n00:13:14.804 --> 00:13:17.440\nSo I'm just gonna monitor write and\nso you'll say w.\n\n256\n00:13:17.440 --> 00:13:18.580\nAnd that's it.\n\n257\n00:13:18.580 --> 00:13:20.080\nWell, I'm gonna do a reads and writes.\n\n258\n00:13:20.080 --> 00:13:25.160\nI want to know any time somebody\nhas read or written to these files.\n\n259\n00:13:25.160 --> 00:13:28.209\nOr I'm just doing one file right now,\nthe employees.csv.\n\n260\n00:13:28.209 --> 00:13:32.260\nSo -p for permissions and\nthen which permissions I want to monitor.\n\n261\n00:13:32.260 --> 00:13:35.200\nAnd then after that, technically,\n\n262\n00:13:35.200 --> 00:13:39.690\nI'm done, but you'll wanna do -k and\nadd a key name to this.\n\n263\n00:13:39.690 --> 00:13:44.310\nWhen it logs these entries in the log\nfile, it can be really hard to find them,\n\n264\n00:13:44.310 --> 00:13:46.280\nthey kinda get lost in the log file.\n\n265\n00:13:46.280 --> 00:13:49.180\nSo by assigning a key,\nit's like giving it a nickname,\n\n266\n00:13:49.180 --> 00:13:51.890\nsome kind of a policy that\nhelps you to find it.\n\n267\n00:13:51.890 --> 00:13:54.580\nAnd there's a number of different naming\nstandards that are out there that\n\n268\n00:13:54.580 --> 00:13:55.350\npeople use.\n\n269\n00:13:55.350 --> 00:14:01.320\nSo for example, if I was just doing\nwrites, I might call this employees,\n\n270\n00:14:02.690 --> 00:14:07.550\nI wanna spell it right,\nemployees csv write.\n\n271\n00:14:07.550 --> 00:14:12.600\nAnd that way, I've got a record here that\nsays anytime somebody writes to that file,\n\n272\n00:14:12.600 --> 00:14:14.080\nI can find it really easy.\n\n273\n00:14:14.080 --> 00:14:17.180\nI can just query the logs for\nemployee csv write, and\n\n274\n00:14:17.180 --> 00:14:19.500\nany entry that comes up will\nbe somebody who wrote to it.\n\n275\n00:14:19.500 --> 00:14:24.960\nAnd I might add another rule where I do,\nwhoops, where I do reads and\n\n276\n00:14:24.960 --> 00:14:28.860\nI'll create a key name\nof employee csv reads.\n\n277\n00:14:28.860 --> 00:14:30.960\nAnd then that way I can go and\ncreate based on that.\n\n278\n00:14:30.960 --> 00:14:33.590\nSo you kind of come up with\nsomething that helps you find it.\n\n279\n00:14:33.590 --> 00:14:38.090\nI'm gonna do reads and writes and I'll\njust give it a key name of employees_csv,\n\n280\n00:14:38.090 --> 00:14:41.070\nand that way, I can search and\nfind that string and\n\n281\n00:14:41.070 --> 00:14:43.180\nI'll easily be able to\nidentify this record.\n\n282\n00:14:43.180 --> 00:14:44.995\nThere's a few different\nways we could search and\n\n283\n00:14:44.995 --> 00:14:46.861\nfind records that makes\nit a little less painful.\n\n284\n00:14:46.861 --> 00:14:51.063\nBut assigning a key name here will really\nhelp you so I pretty much always do that.\n\n285\n00:14:51.063 --> 00:14:55.181\nNow, when I apply that,\nnow I've got my first rule.\n\n286\n00:14:55.181 --> 00:14:57.012\nBut I'm just monitoring a single file.\n\n287\n00:14:57.012 --> 00:15:01.033\nIf I wanted to do a folder, it would\nbe a path name that I would provide.\n\n288\n00:15:01.033 --> 00:15:06.699\nInstead of going out like that,\nI would say something like this,\n\n289\n00:15:06.699 --> 00:15:11.850\nauditctl-w and then a path, so\nmaybe I have a web server and\n\n290\n00:15:11.850 --> 00:15:15.987\nthe web pages are stored in /var/www/html.\n\n291\n00:15:15.987 --> 00:15:20.110\nAnd I wanna know any time somebody\nchanges anything in that folder.\n\n292\n00:15:20.110 --> 00:15:23.970\nWell, all I need to do is make sure\nthat I provide it as a path, like that.\n\n293\n00:15:23.970 --> 00:15:26.090\nSo you put that trailing slash on there,\nand\n\n294\n00:15:26.090 --> 00:15:29.190\nthat way, it's gonna track\neverything that's inside of it.\n\n295\n00:15:29.190 --> 00:15:33.230\nAnd I just say, I wanna monitor,\nI'm just gonna do writes on this one.\n\n296\n00:15:33.230 --> 00:15:35.560\nIt's a website, so I expect reads.\n\n297\n00:15:35.560 --> 00:15:38.071\nI expect it to be tons of\nreads inside of that folder.\n\n298\n00:15:38.071 --> 00:15:41.231\nI just want them under when\nsomebody writes to it, and\n\n299\n00:15:41.231 --> 00:15:45.936\nthen I can give it a key name and I might\ncall it, website writes or some other name\n\n300\n00:15:45.936 --> 00:15:50.100\nlike that that I can keep track of And\nso that I can remember it, right?\n\n301\n00:15:50.100 --> 00:15:52.505\nAnd so now, I can create that rule.\n\n302\n00:15:52.505 --> 00:15:56.384\nAnd it if I do an auditctl -l,\nI can list my rules.\n\n303\n00:15:56.384 --> 00:15:59.342\nAnd there,\nI see the two rules that I've created.\n\n304\n00:15:59.342 --> 00:16:02.827\nNow, I'm tracking that access, and\nin keeping track of if somebody\n\n305\n00:16:02.827 --> 00:16:06.930\ngets in there and starts to mess with it,\nchange the things, and so on.\n\n306\n00:16:06.930 --> 00:16:08.325\nI've got rules that are in place to do it.\n\n307\n00:16:08.325 --> 00:16:11.442\n&gt;&gt; Well, Don, are these rules persistent?\n\n308\n00:16:11.442 --> 00:16:14.302\n&gt;&gt; You would think they would be because\nit's auditing, but they aren't [LAUGH].\n\n309\n00:16:14.302 --> 00:16:15.723\n&gt;&gt; Yeah, [LAUGH] okay, shoot.\n\n310\n00:16:15.723 --> 00:16:19.730\n&gt;&gt; So what I just did is I created these\nrules, and they're effectively temporary.\n\n311\n00:16:19.730 --> 00:16:21.580\nIf I were to reboot right now, or heck,\n\n312\n00:16:21.580 --> 00:16:25.962\nif I even just restart the Audit Daemon,\nit's not auditing anymore and that's bad.\n\n313\n00:16:25.962 --> 00:16:27.495\nWe wanna make sure that\nwe're always auditing.\n\n314\n00:16:27.495 --> 00:16:28.210\n&gt;&gt; Right.\n\n315\n00:16:28.210 --> 00:16:30.356\n&gt;&gt; So if you want these to be permanent,\n\n316\n00:16:30.356 --> 00:16:33.972\nyou've gotta store them in\nthe audit daemon configuration.\n\n317\n00:16:33.972 --> 00:16:36.000\nSo let me show you how that works.\n\n318\n00:16:36.000 --> 00:16:39.850\nNotice these rules, they're written\nthe exact same way as I did on\n\n319\n00:16:39.850 --> 00:16:43.725\nthe command line just without\naudit CTL at the beginning, right?\n\n320\n00:16:43.725 --> 00:16:45.596\n&gt;&gt; Right.\n&gt;&gt; So it's nice that there's just this one\n\n321\n00:16:45.596 --> 00:16:46.442\nsyntax to remember.\n\n322\n00:16:46.442 --> 00:16:48.901\nBut I'm gonna take those and\nI'm gonna copy those rules, so\n\n323\n00:16:48.901 --> 00:16:50.780\nI don't have to write this twice.\n\n324\n00:16:50.780 --> 00:16:55.260\nAnd then,\nI'm gonna edit the configuration file.\n\n325\n00:16:55.260 --> 00:17:01.878\nSo what I need to edit is /etc/,\nlet's see,\n\n326\n00:17:01.878 --> 00:17:07.840\n/etc/audit/audit.rules, right?\n\n327\n00:17:07.840 --> 00:17:11.340\nRemember, we had the auditd.com file,\nwhich was its configuration file.\n\n328\n00:17:11.340 --> 00:17:14.490\nThe rules are stored in their\nown file in audit.rules.\n\n329\n00:17:14.490 --> 00:17:18.300\nAnd when you take a look at that valley,\nit might not exist by default.\n\n330\n00:17:18.300 --> 00:17:19.820\nLet's see if it even exists.\n\n331\n00:17:19.820 --> 00:17:23.720\nIt might not exist by default,\nin which case, we're gonna be creating it.\n\n332\n00:17:23.720 --> 00:17:28.070\nAnd, actually, I do have it,\nso audit.rules.\n\n333\n00:17:28.070 --> 00:17:30.260\nBut in my case, it's empty, right?\n\n334\n00:17:30.260 --> 00:17:32.390\nRemember, when I first run audit -l,\nnothing came back.\n\n335\n00:17:32.390 --> 00:17:36.582\nSo now, it's just telling me,\nthis file is automatically generated from\n\n336\n00:17:36.582 --> 00:17:40.970\n/etc/audit/rules.d, all right,\nthat's a warning for me.\n\n337\n00:17:40.970 --> 00:17:45.510\nIf I go and put my rules right here in\nthis file, and this file is automatically\n\n338\n00:17:45.510 --> 00:17:49.540\nbeing generated from a subfolder,\nthen this file's gonna get overwritten.\n\n339\n00:17:49.540 --> 00:17:51.070\nSo I don't wanna make changes here.\n\n340\n00:17:51.070 --> 00:17:53.700\nInstead, I'm gonna get into that rules.d.\n\n341\n00:17:53.700 --> 00:17:57.570\nNow, on Red Hat,\nthey're using the rules.d folder.\n\n342\n00:17:57.570 --> 00:17:59.040\nOn some distros, they don't.\n\n343\n00:17:59.040 --> 00:18:02.380\nSo when you check that audit.rules file,\n\n344\n00:18:02.380 --> 00:18:04.424\nif you don't have that\nautomatic generation message,\n\n345\n00:18:04.424 --> 00:18:07.380\nthen it's okay to just paste\nthe rules right there into that file.\n\n346\n00:18:07.380 --> 00:18:09.460\nDifferent distros handle\nthis a different way.\n\n347\n00:18:09.460 --> 00:18:11.094\nBut in mine, I've got the rules.d folder.\n\n348\n00:18:11.094 --> 00:18:16.930\nAnd if I look in here, I've got\naudit.rules again, I got a separate file.\n\n349\n00:18:16.930 --> 00:18:19.600\nAnd I can go into this one and edit it.\n\n350\n00:18:19.600 --> 00:18:22.640\nThe reality is I can create\nseveral files in here, and\n\n351\n00:18:22.640 --> 00:18:23.980\neach one can be doing something different.\n\n352\n00:18:23.980 --> 00:18:26.340\nI could have one file that's just for\nwebsite tracking.\n\n353\n00:18:26.340 --> 00:18:28.660\nAnd one file is for my email server.\n\n354\n00:18:28.660 --> 00:18:30.490\nAnd each of them have their\nrules to separate them out,\n\n355\n00:18:30.490 --> 00:18:32.310\nmake it a little easier to manage.\n\n356\n00:18:32.310 --> 00:18:34.720\nBut in my scenario,\nI've only got a couple of things.\n\n357\n00:18:34.720 --> 00:18:36.980\nSo I'm just gonna go and\npaste those in here.\n\n358\n00:18:36.980 --> 00:18:39.616\nAnd again,\nit's that same syntax as the command line,\n\n359\n00:18:39.616 --> 00:18:41.940\njust without auditctl at the beginning.\n\n360\n00:18:41.940 --> 00:18:42.945\nSo I'm gonna put those there.\n\n361\n00:18:42.945 --> 00:18:46.710\nAnd now, that they're there,\nnow, it's persistent.\n\n362\n00:18:46.710 --> 00:18:50.700\nNow, anytime I restart auditd,\nlike a reboot or\n\n363\n00:18:50.700 --> 00:18:54.120\nwhatever, it's gonna grab these rules and\nput them back into place.\n\n364\n00:18:54.120 --> 00:18:56.020\nAnd so now, it'll survive a reboot.\n\n365\n00:18:56.020 --> 00:18:59.483\nBut remember, just using auditctl to\ncreate the rules are not persistent.\n\n366\n00:18:59.483 --> 00:19:02.600\nThose are temporary and\nyou'll lose them during a reboot or\n\n367\n00:19:02.600 --> 00:19:03.981\na restart of the service.\n\n368\n00:19:03.981 --> 00:19:06.430\n&gt;&gt; So Don,\nhow do we review the audit logs?\n\n369\n00:19:06.430 --> 00:19:08.705\n&gt;&gt; Okay, so\nwe have some rules in place now and\n\n370\n00:19:08.705 --> 00:19:11.121\nthey're in theory doing their job, right?\n\n371\n00:19:11.121 --> 00:19:15.765\nSo if changes are happening to\nthese folders, we should see it,\n\n372\n00:19:15.765 --> 00:19:18.182\nwe should know what's going on.\n\n373\n00:19:18.182 --> 00:19:20.980\nWell, let me generate some activity\nfirst to know that we have much on\n\n374\n00:19:20.980 --> 00:19:21.715\nmonitor anyway.\n\n375\n00:19:21.715 --> 00:19:22.841\n&gt;&gt; Yeah.\n\n376\n00:19:22.841 --> 00:19:27.604\n&gt;&gt; So I'm going to, let me,\noops, that's not what I wanted.\n\n377\n00:19:27.604 --> 00:19:29.459\nApparently, I'm gonna resize my window for\nno reason.\n\n378\n00:19:29.459 --> 00:19:31.010\n&gt;&gt; [LAUGH]\n&gt;&gt; There we go,\n\n379\n00:19:31.010 --> 00:19:37.210\nI'm gonna just ssh back into that server,\nand stay logged in as myself, right?\n\n380\n00:19:37.210 --> 00:19:40.200\nSo here, I'm logged in as myself,\nand in my home folder,\n\n381\n00:19:40.200 --> 00:19:42.950\nI've got that employees.csv file, right?\n\n382\n00:19:42.950 --> 00:19:46.820\nIf I were to read that file, if I were\nto just CAT that one to the screen.\n\n383\n00:19:48.030 --> 00:19:50.491\nThere it is, I can read it,\nit's very exciting.\n\n384\n00:19:50.491 --> 00:19:54.731\nAnd if I were to edit it, I could\npull that up and I could come in and\n\n385\n00:19:54.731 --> 00:19:58.360\nmaybe I'll take somebody like Athena here,\nor Dean.\n\n386\n00:19:59.620 --> 00:20:01.980\nAnd we'll take, this is Athena.\n\n387\n00:20:01.980 --> 00:20:04.383\nI'm gonna move her into department four,\nright?\n\n388\n00:20:04.383 --> 00:20:07.300\nSo I'm just changing her department,\nor Donovan here,\n\n389\n00:20:07.300 --> 00:20:09.262\nwe'll move him into department one.\n\n390\n00:20:09.262 --> 00:20:13.104\nSo I'm starting to kinda mess with\nthe data, and I'm gonna save that.\n\n391\n00:20:13.104 --> 00:20:17.400\nSo now, I've modified that file,\nright, I've made a change.\n\n392\n00:20:17.400 --> 00:20:24.925\nOr as the root user over here,\nI might go into /bar/www/html.\n\n393\n00:20:24.925 --> 00:20:26.900\nAnd I might deface the website.\n\n394\n00:20:26.900 --> 00:20:30.440\nI might edit that index.html file.\n\n395\n00:20:30.440 --> 00:20:36.110\nAnd so I come in here and I say,\na little paragraph, this page stinks.\n\n396\n00:20:37.390 --> 00:20:39.890\nI know, I'm very aggressive today,\nusing harsh words.\n\n397\n00:20:39.890 --> 00:20:41.640\n&gt;&gt; [LAUGH]\n&gt;&gt; There we go, all right, so now,\n\n398\n00:20:41.640 --> 00:20:42.910\nI have defaced the webpage, right?\n\n399\n00:20:42.910 --> 00:20:44.234\nWe've made changes to this.\n\n400\n00:20:44.234 --> 00:20:47.700\nNow, the audit demon, remember,\nis not a preventative measure.\n\n401\n00:20:47.700 --> 00:20:49.860\nIt doesn't stop people\nfrom doing anything.\n\n402\n00:20:49.860 --> 00:20:55.660\nIt's a reactive measure,\nsomething occurred and now, it logs it.\n\n403\n00:20:55.660 --> 00:20:57.613\nAnd it's logging it to\nthat audit log file.\n\n404\n00:20:57.613 --> 00:21:04.212\nAnd if I were to, say,\ntail/var/audit/audit.log.\n\n405\n00:21:04.212 --> 00:21:08.816\nIf I were to tail it and\ngo in there and look, well, first off,\n\n406\n00:21:08.816 --> 00:21:10.951\nI have to get the path right.\n\n407\n00:21:10.951 --> 00:21:18.112\nSo [LAUGH] it is, which I thought it was,\n/var/audit, it is not.\n\n408\n00:21:18.112 --> 00:21:21.450\nSo it's var/log, audit, there we go.\n\n409\n00:21:21.450 --> 00:21:23.397\nIf I get my path right,\nthat's what I need to do.\n\n410\n00:21:23.397 --> 00:21:27.710\nSo it's /var/log/audit.log.\n\n411\n00:21:27.710 --> 00:21:32.510\nIf I tail it and go in and I look,\nI should be able to find those entries\n\n412\n00:21:32.510 --> 00:21:34.790\nunless more access has\nhappened since then, right?\n\n413\n00:21:34.790 --> 00:21:37.470\nOther things are going on,\nI see Linux is doing its job.\n\n414\n00:21:37.470 --> 00:21:42.180\nAnd you'll see that it's easy\nto get lost in this file, okay.\n\n415\n00:21:42.180 --> 00:21:44.300\nAlthough right here,\nI just happened to catch it.\n\n416\n00:21:44.300 --> 00:21:48.085\nI can see /var/www/html got hit, and then,\n\n417\n00:21:48.085 --> 00:21:52.162\nit's giving me information\nabout what happened.\n\n418\n00:21:52.162 --> 00:21:56.760\nOkay, now, if I had to try and\nfind this, it would be very difficult.\n\n419\n00:21:56.760 --> 00:22:00.620\nBut notice right here,\nkey=\"website writes\".\n\n420\n00:22:00.620 --> 00:22:04.522\nThat's that key, I say, we can use that\nto search and we can find information.\n\n421\n00:22:04.522 --> 00:22:07.330\nThere are far easier ways\nthan going into this file.\n\n422\n00:22:07.330 --> 00:22:11.152\nSo you might've notice that I didn't\nhad a hard time actually finding that\n\n423\n00:22:11.152 --> 00:22:11.980\naudit log file.\n\n424\n00:22:11.980 --> 00:22:15.258\nAnd that's because I don't normally go\nright to the audit log file like this.\n\n425\n00:22:15.258 --> 00:22:18.880\nIf we wanna look in and\nfind these logs, and actually,\n\n426\n00:22:18.880 --> 00:22:23.830\nretrieve information, I usually use\nanother command called ausearch,\n\n427\n00:22:23.830 --> 00:22:25.450\nwhich is the audit search command.\n\n428\n00:22:25.450 --> 00:22:28.153\nIt lets us search that log, you don't\nhave to know where the audit logs are.\n\n429\n00:22:28.153 --> 00:22:32.354\nYou can just run this and find the\ninformation that you're looking to pull\n\n430\n00:22:32.354 --> 00:22:35.030\nthat back and not have to sift through it.\n\n431\n00:22:35.030 --> 00:22:38.612\nAnd see how you can do a -k to search for\na key.\n\n432\n00:22:38.612 --> 00:22:43.778\nAnd so I can say, if I suspect somebody\nchanged the website, let me go in and\n\n433\n00:22:43.778 --> 00:22:49.390\ndo an audit search with -k and specify\nthat I'm looking for website_changes.\n\n434\n00:22:49.390 --> 00:22:52.358\nOr I'm looking for employees_csv.\n\n435\n00:22:52.358 --> 00:22:56.860\nAnd now, I can search by that key and\nfind exactly what I'm looking for.\n\n436\n00:22:56.860 --> 00:23:01.053\nAnd If I forget the key,\nI can always do auditctl -l.\n\n437\n00:23:01.053 --> 00:23:03.930\nI can look at the rules and\nI can find the key right there.\n\n438\n00:23:03.930 --> 00:23:06.540\nI need to find out who changed\nthis website, all right?\n\n439\n00:23:06.540 --> 00:23:11.300\nI've got a key called website writes, and\nso I can use that to look in and find it.\n\n440\n00:23:11.300 --> 00:23:15.170\nI can say that I wanna do a ausearch and\n\n441\n00:23:18.025 --> 00:23:21.425\nI'll do a -k website writes.\n\n442\n00:23:21.425 --> 00:23:24.825\nAnd it's gonna look through, and\nit's gonna give me just those records.\n\n443\n00:23:24.825 --> 00:23:27.495\nSo now, I don't have to sift through\nthe log files or even know where it is.\n\n444\n00:23:27.495 --> 00:23:28.985\nNow, I do need to be\nan administrator to do this.\n\n445\n00:23:28.985 --> 00:23:31.491\nRemember, I elevated\nthe privileges of my shell, so\n\n446\n00:23:31.491 --> 00:23:33.283\nyou'd need to pseudo this normally.\n\n447\n00:23:33.283 --> 00:23:35.491\nBut I can see the entries in here.\n\n448\n00:23:35.491 --> 00:23:38.529\nI've got a date and a time, so\nI know exactly when this access happened.\n\n449\n00:23:38.529 --> 00:23:41.665\nAnd then after that,\nI can see what it did.\n\n450\n00:23:41.665 --> 00:23:43.669\nWhat exactly occurred?\n\n451\n00:23:43.669 --> 00:23:48.853\nI'm seeing that this is an audit\nmessage The file that was accessed\n\n452\n00:23:48.853 --> 00:23:53.680\nwas /var/www/html, and\nthen I've got a couple of files.\n\n453\n00:23:53.680 --> 00:23:56.377\nThis one is .index.html.swp.\n\n454\n00:23:56.377 --> 00:23:58.010\n.swp.\nWhat's that?\n\n455\n00:23:58.010 --> 00:24:02.340\nWell, I used Vi as my text editor,\nand Vi creates a temporary file, so\n\n456\n00:24:02.340 --> 00:24:03.620\nit created a temporary file.\n\n457\n00:24:03.620 --> 00:24:06.555\nNow, if I didn't know that,\nI know that, but if I didn't,\n\n458\n00:24:06.555 --> 00:24:09.147\nyou can actually figure it\nout cuz if you look in here,\n\n459\n00:24:09.147 --> 00:24:11.762\nright down here I can see\nthe command that was issued.\n\n460\n00:24:11.762 --> 00:24:17.090\nI used /usr/bin/vi,\nI can see that that was done.\n\n461\n00:24:17.090 --> 00:24:21.211\nAnd you can see other things in here\nlike the user ID that executed it,\n\n462\n00:24:21.211 --> 00:24:24.340\nthis was done by uid0,\nwhich was the root user.\n\n463\n00:24:24.340 --> 00:24:28.150\nI have a sudo shell right now so\nI'm running as root, so\n\n464\n00:24:28.150 --> 00:24:29.460\nit shows that I did that.\n\n465\n00:24:29.460 --> 00:24:33.040\nIf I were to look at that employ csv,\n\n466\n00:24:33.040 --> 00:24:37.360\non the other hand,\nthat one I did as a regular old Dpezet.\n\n467\n00:24:37.360 --> 00:24:41.850\nSo if I go and look for that key and\nfind it, and look in here,\n\n468\n00:24:41.850 --> 00:24:44.910\nwe can go ahead and find out that\nit was done by a regular user.\n\n469\n00:24:44.910 --> 00:24:47.190\nIn this case UID1000, right?\n\n470\n00:24:47.190 --> 00:24:50.555\nAnd so, if I go into PASSWD and\nlookup UID1000,\n\n471\n00:24:50.555 --> 00:24:53.010\nI'll see that's my User ID, right?\n\n472\n00:24:53.010 --> 00:24:56.924\nIf I do a, I'll pull up /etc/password,\n\n473\n00:24:56.924 --> 00:25:00.855\nand I'll just scrap that for 1,000.\n\n474\n00:25:00.855 --> 00:25:02.115\nAnd there it is, Dpezet.\n\n475\n00:25:02.115 --> 00:25:05.480\nSo I know that I am the one\nwho accessed that file.\n\n476\n00:25:05.480 --> 00:25:07.880\nI'm the one who cracked it open and\ntook a look at it.\n\n477\n00:25:07.880 --> 00:25:11.420\nAnd this was off of\nthat key employees CSV.\n\n478\n00:25:11.420 --> 00:25:13.130\nSo I've got that record.\n\n479\n00:25:13.130 --> 00:25:16.110\nI now have an audit log of that entry,\nand I can see it.\n\n480\n00:25:16.110 --> 00:25:19.500\nSo AU search really makes that handy.\n\n481\n00:25:19.500 --> 00:25:22.970\nThe only problem, I shouldn't call\nit a problem, the only challenge\n\n482\n00:25:22.970 --> 00:25:25.555\nthat we face with AU search-\n&gt;&gt; Yeah, it's always a challenge.\n\n483\n00:25:25.555 --> 00:25:28.720\n&gt;&gt; [LAUGH] Is it can give you\na little too much information, right?\n\n484\n00:25:28.720 --> 00:25:31.210\nAnd so there's actually another\nutility I want to show you.\n\n485\n00:25:31.210 --> 00:25:34.580\nIt's not critical, everything I've showed\nyou up to this point is really all you\n\n486\n00:25:34.580 --> 00:25:36.650\nneed to really get good\nauditing put in place.\n\n487\n00:25:36.650 --> 00:25:39.855\nBut there's another\nutility called AUreport.\n\n488\n00:25:39.855 --> 00:25:44.430\nAnd AUreport lets you kind\nof summarize the data.\n\n489\n00:25:44.430 --> 00:25:48.800\nAnd remember that the audit logs can\ncollect a lot more than just file access.\n\n490\n00:25:48.800 --> 00:25:53.520\nSo when I run aureport, I'm getting\na summary of all sort of different things\n\n491\n00:25:53.520 --> 00:25:57.990\nlike executables that were run, files that\nwere accessed, and so on, a ton of data.\n\n492\n00:25:57.990 --> 00:26:02.580\nBut I can manipulate aureport to kinda\nfilter and show me different information.\n\n493\n00:26:02.580 --> 00:26:04.400\nAnd I can do the same thing with ausearch.\n\n494\n00:26:04.400 --> 00:26:06.870\nI just showed you ausearch-k, right?\n\n495\n00:26:06.870 --> 00:26:08.940\nBut you can go way beyond that.\n\n496\n00:26:08.940 --> 00:26:14.050\nYou can say ausearch -- start today.\n\n497\n00:26:14.050 --> 00:26:18.580\nI could say just search today's entries,\ndon't go back yesterday or whatever and\n\n498\n00:26:18.580 --> 00:26:20.310\nthen -K whatever.\n\n499\n00:26:20.310 --> 00:26:25.570\nI could say --start and\nspecify a date, right?\n\n500\n00:26:25.570 --> 00:26:28.870\nSo maybe I just wanna search for\nJanuary 1st of this\n\n501\n00:26:28.870 --> 00:26:33.460\nyear, and then it would go\nfrom there forward, right?\n\n502\n00:26:33.460 --> 00:26:35.290\nSo this is looking back all\nthe way to January 1st.\n\n503\n00:26:35.290 --> 00:26:36.370\nOr I could even set and end.\n\n504\n00:26:36.370 --> 00:26:43.209\nI could say --end, and\nthen maybe I end on 01, 02, 2017.\n\n505\n00:26:43.209 --> 00:26:45.829\nAnd, actually I think I think if\nI remember right, you do have to\n\n506\n00:26:45.829 --> 00:26:49.560\nput the hours, minutes and seconds on\nthat date in order for it to be happy.\n\n507\n00:26:49.560 --> 00:26:51.300\nSo I'll add that.\nThere we go.\n\n508\n00:26:51.300 --> 00:26:53.940\nSo now I'm setting a search\nrange on that AU search, and\n\n509\n00:26:53.940 --> 00:26:55.490\nlimiting it to this particular day.\n\n510\n00:26:55.490 --> 00:26:57.030\nLook at this day, or this time.\n\n511\n00:26:57.030 --> 00:27:02.260\nAnd I can continue to add dash K,\nwebsite changes, or whatever.\n\n512\n00:27:02.260 --> 00:27:04.620\nAnd it'll start to filter and\nreturn back that data.\n\n513\n00:27:04.620 --> 00:27:07.900\nI got no changes here, so I know that\nthe page wasn't changed during this time.\n\n514\n00:27:07.900 --> 00:27:09.050\nYou start to get that information.\n\n515\n00:27:09.050 --> 00:27:10.860\nAUsearch is very powerful.\n\n516\n00:27:10.860 --> 00:27:13.300\nAureport is very powerful also.\n\n517\n00:27:13.300 --> 00:27:16.660\nWe can do things like aureport-u.\n\n518\n00:27:16.660 --> 00:27:20.731\nI want to see user data,\nand I'll say --failed.\n\n519\n00:27:20.731 --> 00:27:23.115\nI want to see when users\ndid something that failed,\n\n520\n00:27:23.115 --> 00:27:26.170\nwhen somebody tried to do something\nthey weren't allowed to do.\n\n521\n00:27:26.170 --> 00:27:30.580\nAnd then I can tell it to give me\na summary of that information.\n\n522\n00:27:30.580 --> 00:27:34.410\nAnd so it spits it out here, and\nI can see the user ID1000 did\n\n523\n00:27:34.410 --> 00:27:38.910\nsomething 14 times apparently\nthat resulted in a failure.\n\n524\n00:27:40.192 --> 00:27:43.539\nSo Aureport, if you run auroport --help,\n\n525\n00:27:43.539 --> 00:27:48.020\nyou'll see there a lot of other\noptions in here that kind of tweak and\n\n526\n00:27:48.020 --> 00:27:52.150\nchange that data, like dash I for\ninterpretive mode.\n\n527\n00:27:52.150 --> 00:27:55.670\nWhen I ran this command,\nI'm getting back user IDs and so on.\n\n528\n00:27:55.670 --> 00:28:00.350\nIf I add a little -i to it, it actually\nresolves the user ID to a name for me.\n\n529\n00:28:00.350 --> 00:28:06.500\nAnd so now, I can see that it was dpezet\nthat's got 14 failures that are in here.\n\n530\n00:28:06.500 --> 00:28:08.770\nThat's another powerful one for us.\n\n531\n00:28:08.770 --> 00:28:13.440\nAnd so we can really, you can really\nget complex and get fancy with this.\n\n532\n00:28:13.440 --> 00:28:17.090\nLet me just show you a more complex\nexample, and then we'll wrap it up.\n\n533\n00:28:17.090 --> 00:28:21.150\nI might do an AU search and\nlimit it to just today.\n\n534\n00:28:21.150 --> 00:28:24.270\nSo I do a start today, right?\n\n535\n00:28:24.270 --> 00:28:29.300\nAnd I might limit it to log in ID,\nlogin new ID 1000.\n\n536\n00:28:29.300 --> 00:28:32.520\nI just want to see entries for Dpezet.\n\n537\n00:28:32.520 --> 00:28:35.038\nMaybe we just fired me.\n\n538\n00:28:35.038 --> 00:28:38.130\n&gt;&gt; [LAUGH]\n&gt;&gt; And you're like I wonder if\n\n539\n00:28:38.130 --> 00:28:41.390\nthat guy got in there and did anything\n&gt;&gt; I don't know if that's possible.\n\n540\n00:28:41.390 --> 00:28:42.790\n&gt;&gt; So you wonder,\ndid they get in there and\n\n541\n00:28:42.790 --> 00:28:44.230\ndo anything before they left the building?\n\n542\n00:28:44.230 --> 00:28:45.220\nLet's go and find out, right?\n\n543\n00:28:45.220 --> 00:28:46.812\nSo I'm going to search all of the logs for\ntoday.\n\n544\n00:28:46.812 --> 00:28:49.970\nI'm going to look for that User ID, right?\n\n545\n00:28:49.970 --> 00:28:52.320\nAnd I'm gonna output this in a raw format.\n\n546\n00:28:52.320 --> 00:28:55.916\nAnd the reason I'm gonna output it in\na raw format is that I wanna pipe it and\n\n547\n00:28:55.916 --> 00:28:57.940\nsend that over to aureport, right?\n\n548\n00:28:57.940 --> 00:28:59.220\nCuz I'm gonna get a bunch of data back.\n\n549\n00:28:59.220 --> 00:29:00.920\nSo let's filter that through aureport and\n\n550\n00:29:00.920 --> 00:29:03.490\nsee if we even need to\ndo a detailed analysis.\n\n551\n00:29:03.490 --> 00:29:07.130\nAnd so I can come in and\nI can look for those failures.\n\n552\n00:29:07.130 --> 00:29:10.710\nAnd pull up a summary and pull it up,\nops, apparently got a typo in there.\n\n553\n00:29:10.710 --> 00:29:14.790\nAnd so I can look for\nthat data in here and basically say,\n\n554\n00:29:14.790 --> 00:29:16.720\ngive me just a second while I\nfigure out what my typo is.\n\n555\n00:29:16.720 --> 00:29:17.500\nI spelled summary wrong.\n\n556\n00:29:17.500 --> 00:29:21.270\nIt turns out there is like extra\nvowels and things, there we go.\n\n557\n00:29:21.270 --> 00:29:23.740\nAnd so now I can pull that\ninformation up and I can say, no,\n\n558\n00:29:23.740 --> 00:29:25.550\nthis user didn't access anything.\n\n559\n00:29:25.550 --> 00:29:30.190\nOr I go on and like say man, they got\non and they messed with this CSV or\n\n560\n00:29:30.190 --> 00:29:32.050\nsome other file or wherever.\n\n561\n00:29:32.050 --> 00:29:33.930\nWe get an idea of what they accessed.\n\n562\n00:29:33.930 --> 00:29:37.195\nI've got a record here, and I know\nthat command's a little bit alongside.\n\n563\n00:29:37.195 --> 00:29:41.200\nBut I've got a record of all\nthe things that user did today.\n\n564\n00:29:41.200 --> 00:29:42.050\nAnd here it is.\n\n565\n00:29:42.050 --> 00:29:42.810\nI can see it.\n\n566\n00:29:42.810 --> 00:29:45.550\nLet me stretch this out so\nit, kind of, there you go.\n\n567\n00:29:45.550 --> 00:29:47.580\nSo you see kind of the whole\ncommand on one line there.\n\n568\n00:29:47.580 --> 00:29:50.158\nI can see everything that dpezet\ndid today as far as file access,\n\n569\n00:29:50.158 --> 00:29:51.870\nas far as what we're auditing, right?\n\n570\n00:29:51.870 --> 00:29:54.420\nIf you haven't turned on auditing,\nthen this doesn't work, right?\n\n571\n00:29:54.420 --> 00:29:59.190\nBut now I can see it so I know what that\nuser's been doing, what they've touched.\n\n572\n00:29:59.190 --> 00:29:59.870\nAnd you can filter that.\n\n573\n00:29:59.870 --> 00:30:01.390\nYou can do the same thing in reverse.\n\n574\n00:30:01.390 --> 00:30:03.710\nI can look at a particular\nfile instead of a user, and\n\n575\n00:30:03.710 --> 00:30:05.760\nsay show me everything that\nhappened to this file.\n\n576\n00:30:05.760 --> 00:30:10.180\nAnd then, do a summary, interpret it and\nlay out so it's a way that I can read it.\n\n577\n00:30:10.180 --> 00:30:11.810\nThat's the power of this.\n\n578\n00:30:11.810 --> 00:30:17.030\nBut you've gotta turn it on\nbefore you need it, right?\n\n579\n00:30:17.030 --> 00:30:19.380\nIt's not like one of those things\nwhere you say my website got hacked,\n\n580\n00:30:19.380 --> 00:30:22.320\nlet me go see what files they changed,\nI'll turn on auditing.\n\n581\n00:30:22.320 --> 00:30:22.850\nIt's too late.\n\n582\n00:30:22.850 --> 00:30:23.480\n&gt;&gt; Right.\n\n583\n00:30:23.480 --> 00:30:26.810\n&gt;&gt; Auditing has to be on\nbefore the compromise.\n\n584\n00:30:26.810 --> 00:30:30.950\nSo get this turned on, get it set up,\nget familiarized with it, and\n\n585\n00:30:30.950 --> 00:30:34.030\nmake sure that you know how to use it so\nthat you can pull\n\n586\n00:30:34.030 --> 00:30:36.860\nthat information when you actually do need\nit when you hit that critical moment.\n\n587\n00:30:36.860 --> 00:30:39.280\n&gt;&gt; Awesome information as usual,\nDon, thank you so very much.\n\n588\n00:30:39.280 --> 00:30:41.420\nAuditing the file system.\n\n589\n00:30:41.420 --> 00:30:44.080\nAnd before we move on,\nany last words, sir?\n\n590\n00:30:44.080 --> 00:30:45.690\n&gt;&gt; One quick word of caution.\n\n591\n00:30:45.690 --> 00:30:47.796\nMake sure you backup your audit logs.\n\n592\n00:30:47.796 --> 00:30:49.440\nYour audit logs are really important.\n\n593\n00:30:49.440 --> 00:30:51.360\nAnd if a hacker, a good hacker,\n\n594\n00:30:51.360 --> 00:30:55.810\nbreaks into your system, their job number\none is to compromising your audit log.\n\n595\n00:30:55.810 --> 00:30:59.940\nBecause if they can compromise he audit\nlogs, they can hide whatever they did.\n\n596\n00:30:59.940 --> 00:31:02.530\nSo you need to make sure that your audit\nlogs are protected, which they already\n\n597\n00:31:02.530 --> 00:31:06.300\nare, but that you're backing them\nup to another system somewhere.\n\n598\n00:31:06.300 --> 00:31:07.350\nIf you haven't watched it,\n\n599\n00:31:07.350 --> 00:31:11.890\ncheck our our RSS log show where we'll\ntalk about how to log to a remote system,\n\n600\n00:31:11.890 --> 00:31:15.420\nand then that way your logs are stored\nsomewhere else as well as right here.\n\n601\n00:31:15.420 --> 00:31:17.470\nSo even if these get erased you\nstill have a copy somewhere else.\n\n602\n00:31:17.470 --> 00:31:20.350\nBut definitely make sure you back up\nthose audit logs and keep them safe.\n\n603\n00:31:20.350 --> 00:31:22.400\n&gt;&gt; Back up, back up, back up.\n\n604\n00:31:22.400 --> 00:31:23.560\nLinux Security Techniques.\n\n605\n00:31:23.560 --> 00:31:25.500\nThere's a lot of episodes to watch.\n\n606\n00:31:25.500 --> 00:31:28.070\nMake sure you watch them all\nbecause you'll be glad you did now.\n\n607\n00:31:28.070 --> 00:31:29.320\nHelp you out too.\n\n608\n00:31:29.320 --> 00:31:29.861\nThanks, Don.\n\n609\n00:31:29.861 --> 00:31:31.510\nAnd thank you for watching ITPRO.TV.\n\n610\n00:31:31.510 --> 00:31:34.340\nRemember, good ITPRO is always learning.\n\n611\n00:31:34.340 --> 00:31:35.260\nI'm Zach Memos.\n\n612\n00:31:35.260 --> 00:31:35.930\n&gt;&gt; And I'm Don Pezet.\n\n613\n00:31:35.930 --> 00:31:38.734\n&gt;&gt; And we will see you very soon.\n\n614\n00:31:38.734 --> 00:31:44.682\n[MUSIC]\n\n615\n00:31:44.682 --> 00:31:48.469\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "229849112"
        },
        {
          "description": "Don and Zach discuss what the SUID bit is & why we should care about it, how we use the SUID bit, set group ID bit (SGID), and monitoring SUID & SGID.",
          "length": "1409",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-5-auditung_suid_and_sgid-081517-PGM.00_23_13_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-5-auditung_suid_and_sgid-081517-PGM.00_23_13_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-5-auditung_suid_and_sgid-081517-PGM.00_23_13_18.Still001-sm.jpg",
          "title": "Auditing SUID and SGID",
          "transcript": "WEBVTT\n\n1\n00:00:00.320 --> 00:00:03.492\nWelcome to ITProTV,\nI'm your host, Don Pezet.\n\n2\n00:00:03.492 --> 00:00:06.675\n[SOUND]\n\n3\n00:00:06.675 --> 00:00:08.176\n[MUSIC]\n\n4\n00:00:08.176 --> 00:00:12.171\n&gt;&gt; You're watching ITPro.TV.\n\n5\n00:00:12.171 --> 00:00:14.801\n&gt;&gt; Hello, and thank you for\nchoosing ITPro.TV,\n\n6\n00:00:14.801 --> 00:00:16.783\nhelping you learn wherever you go.\n\n7\n00:00:16.783 --> 00:00:20.662\nI'm your host, Zach Memos, as we\ncontinue with Linux security techniques,\n\n8\n00:00:20.662 --> 00:00:22.780\nwe're gonna be auditing SUID and SGID.\n\n9\n00:00:22.780 --> 00:00:25.660\nWhat in the world is that?\n\n10\n00:00:25.660 --> 00:00:27.270\nAnd Don Pezet is gonna\ntell us all about that.\n\n11\n00:00:27.270 --> 00:00:28.660\nDon, thank you so very much.\n\n12\n00:00:28.660 --> 00:00:33.440\n&gt;&gt; You know Zach, I felt that in your\nlife, you were just missing more acronyms,\n\n13\n00:00:33.440 --> 00:00:35.222\nand so-\n&gt;&gt; I wanna call it suid but suid,\n\n14\n00:00:35.222 --> 00:00:37.263\nit sounds like something, I don't know.\n\n15\n00:00:37.263 --> 00:00:41.120\n&gt;&gt; There's actually a lot of people who\nsay suid, which makes me think of sewer.\n\n16\n00:00:41.120 --> 00:00:44.535\nBut, you know,\nyou can call it what you want, as guid,\n\n17\n00:00:44.535 --> 00:00:46.943\nwhatever you wanna call the other one.\n\n18\n00:00:46.943 --> 00:00:52.861\nAll right, well in this episode,\nwe're gonna talk about the SUID or\n\n19\n00:00:52.861 --> 00:00:57.060\nSet User ID bit, and\nthe SGID or Set Group ID bit.\n\n20\n00:00:57.060 --> 00:01:00.679\nWe're gonna talk a little bit about\nwhat those bits are, what they do, and\n\n21\n00:01:00.679 --> 00:01:03.503\nwhy we care about them,\ncuz here we are in a security show.\n\n22\n00:01:03.503 --> 00:01:06.737\nSo why we even really care about\nthese bits and how they function and\n\n23\n00:01:06.737 --> 00:01:10.374\nwhat we need to watch out for, because\nthey are something that can be very,\n\n24\n00:01:10.374 --> 00:01:11.280\nvery dangerous.\n\n25\n00:01:11.280 --> 00:01:13.430\nThey have a particular purpose,\na particular use, and\n\n26\n00:01:13.430 --> 00:01:15.170\nwhen used right they're great.\n\n27\n00:01:15.170 --> 00:01:16.220\nBut when used wrong,\n\n28\n00:01:16.220 --> 00:01:19.320\nthey can significantly weaken\nthe security of your system.\n\n29\n00:01:19.320 --> 00:01:22.450\nSo we need to have a way to be\nable to audit, and look and\n\n30\n00:01:22.450 --> 00:01:24.380\nfind where these things are being used.\n\n31\n00:01:24.380 --> 00:01:27.670\nAnd that way we can track and make sure\nthey're actually being used properly and\n\n32\n00:01:27.670 --> 00:01:29.160\nnot in an insecure way.\n\n33\n00:01:29.160 --> 00:01:32.040\nSo we're gonna see all of that right here,\nin this episode,\n\n34\n00:01:32.040 --> 00:01:36.502\nas we walk through SUID and\nSGID, or suid and sgid.\n\n35\n00:01:36.502 --> 00:01:38.770\n[LAUGH]\n&gt;&gt; So let me officially ask you,\n\n36\n00:01:38.770 --> 00:01:42.100\nwhat is the SUID bit, and\nwhy do we care about it?\n\n37\n00:01:42.100 --> 00:01:45.660\n&gt;&gt; All right, so we'll start there,\nthe Set User ID bit.\n\n38\n00:01:45.660 --> 00:01:51.540\nNow, in the Linux kernel, when a user runs\nan application, it sees the user do it,\n\n39\n00:01:51.540 --> 00:01:54.840\nit takes the user's identity, and\nit attaches it to that application.\n\n40\n00:01:54.840 --> 00:01:59.300\nAnd the application runs with that user's\nidentity, with their credentials and\n\n41\n00:01:59.300 --> 00:01:59.920\ntheir access.\n\n42\n00:01:59.920 --> 00:02:01.539\nThat's how things normally work.\n\n43\n00:02:02.600 --> 00:02:07.440\nSUID, the Set User ID bit,\nlet's us change that behavior, all right?\n\n44\n00:02:07.440 --> 00:02:11.690\nSo, for example if I run something\nlike the LS command, right?\n\n45\n00:02:11.690 --> 00:02:16.520\nSo if I come in here and I take a look\nat LS, all right, or, who am I.\n\n46\n00:02:16.520 --> 00:02:18.330\nThese commands, I run them.\n\n47\n00:02:18.330 --> 00:02:22.490\nWhen they run, they're being run as me,\nas dpezet, right?\n\n48\n00:02:22.490 --> 00:02:24.181\nSo that's who I'm logged in as.\n\n49\n00:02:24.181 --> 00:02:29.652\nBut if I find that file,\nif I find the whoami command, right,\n\n50\n00:02:29.652 --> 00:02:36.940\n/usr/pin/whoami, and I take a look\nat that file's actual information,\n\n51\n00:02:36.940 --> 00:02:43.480\nSo if I go in and pull it up, I can see\nthat it's got a owner and a group, right.\n\n52\n00:02:43.480 --> 00:02:47.040\nAnd the owner of this file,\nthe user, is root.\n\n53\n00:02:47.040 --> 00:02:51.941\nSo the root user owns the whoami\ncommand but I'm running it.\n\n54\n00:02:51.941 --> 00:02:53.790\nDoes that mean I'm running as root?\n\n55\n00:02:53.790 --> 00:02:55.552\nNo.\nI'm just running as a regular old user.\n\n56\n00:02:55.552 --> 00:02:57.440\nI run it as me.\n\n57\n00:02:57.440 --> 00:02:59.822\nAnd so the whoami command\nreturns that it's me running it,\n\n58\n00:02:59.822 --> 00:03:01.021\nthat's important, right?\n\n59\n00:03:01.021 --> 00:03:04.830\nIf we sudo it, what happens then, right?\n\n60\n00:03:04.830 --> 00:03:08.757\nWell, it's gonna run,\nit's gonna run as the root user,\n\n61\n00:03:08.757 --> 00:03:11.736\nsudo modifies that behavior temporarily.\n\n62\n00:03:11.736 --> 00:03:15.877\nAnd that's normally what we want,\nif I wanna run an administrative command,\n\n63\n00:03:15.877 --> 00:03:19.280\nI'll sudo it, and\nthat temporarily changes the user context.\n\n64\n00:03:19.280 --> 00:03:21.700\nIt changes which user that\ncommand is running at.\n\n65\n00:03:21.700 --> 00:03:27.020\nThe problem with sudo though,\nis you have to give somebody permissions.\n\n66\n00:03:27.020 --> 00:03:28.700\nYou have to give somebody\nthe ability to use it.\n\n67\n00:03:28.700 --> 00:03:32.370\nThey have to have a password, right.\n\n68\n00:03:32.370 --> 00:03:36.393\nWhat if I want somebody to run\na command that needs to run as root.\n\n69\n00:03:36.393 --> 00:03:38.830\nBut I don't wanna give\nthem the root password?\n\n70\n00:03:38.830 --> 00:03:41.500\nI don't wanna give them that access and\nthat freedom.\n\n71\n00:03:41.500 --> 00:03:44.056\nWell, that's where Set User ID comes in.\n\n72\n00:03:44.056 --> 00:03:47.717\nSet User ID says when\nyou run this program,\n\n73\n00:03:47.717 --> 00:03:52.270\ndon't run it as the user,\nrun it as the owner.\n\n74\n00:03:52.270 --> 00:03:55.460\nSo, if it's owned by root,\nthen it will run as root.\n\n75\n00:03:56.550 --> 00:04:00.530\nEven if I run it, without using sudo,\nif I were to just run whoami, and\n\n76\n00:04:00.530 --> 00:04:06.292\nit had the Set User ID bit assigned to it,\nthen it would run as root.\n\n77\n00:04:06.292 --> 00:04:09.590\nAnd some of you are probably out there\nthinking, this is really dangerous, right?\n\n78\n00:04:09.590 --> 00:04:12.540\nIf I want somebody to run something\nas root then they need to be somebody\n\n79\n00:04:12.540 --> 00:04:14.818\nI trust, otherwise I shouldn't do it.\n\n80\n00:04:14.818 --> 00:04:17.970\nBut there are some great examples\nwhere you need the ability to\n\n81\n00:04:17.970 --> 00:04:19.590\nrun something without being root.\n\n82\n00:04:19.590 --> 00:04:22.390\nFor example, the passwd command.\n\n83\n00:04:22.390 --> 00:04:24.540\nRight?\nWe use that to change our passwords.\n\n84\n00:04:24.540 --> 00:04:30.750\nIf any user wants to change their\npassword, they run passwd to do it, right?\n\n85\n00:04:30.750 --> 00:04:37.110\nWell that command, what it does is it\nmodifies the /etc/passwd file, right?\n\n86\n00:04:38.380 --> 00:04:43.030\nSo if I were to look at /etc/passwd,\nthat's where all the user accounts\n\n87\n00:04:43.030 --> 00:04:45.640\nare stored, and\nmy user account's in here somewhere.\n\n88\n00:04:45.640 --> 00:04:47.571\nThat's where my information will be.\n\n89\n00:04:47.571 --> 00:04:50.500\nI should have just gripped the thing,\ncuz now I'm not gonna find myself.\n\n90\n00:04:50.500 --> 00:04:54.298\nSo we'll just grip that and\nwe'll find dpezet.\n\n91\n00:04:54.298 --> 00:04:56.000\nThere, all right, so there I am.\n\n92\n00:04:56.000 --> 00:04:59.560\nNow technically, as a user,\nI can change my own shell.\n\n93\n00:04:59.560 --> 00:05:02.120\nI can run chsh and change my shell.\n\n94\n00:05:02.120 --> 00:05:08.540\nIf I do,\nchsh has to modify this password file.\n\n95\n00:05:08.540 --> 00:05:09.910\nWell what if I just wanna do it myself?\n\n96\n00:05:09.910 --> 00:05:12.474\nI'm just gonna go in here and\nedit, passwd.\n\n97\n00:05:12.474 --> 00:05:15.840\nI'm gonna go in, I'm gonna find myself.\n\n98\n00:05:15.840 --> 00:05:16.950\nAnd there I am.\n\n99\n00:05:16.950 --> 00:05:21.690\nAnd I'm gonna go in here,\nI'm gonna change my shell.\n\n100\n00:05:21.690 --> 00:05:25.140\nI wanna use .tcsh instead, right?\n\n101\n00:05:25.140 --> 00:05:26.730\nWell see the big warning at the bottom?\n\n102\n00:05:26.730 --> 00:05:28.740\nWarning, changing a read only file.\n\n103\n00:05:29.810 --> 00:05:32.530\nI don't have access,\nI'm not allowed to modify this file.\n\n104\n00:05:32.530 --> 00:05:34.510\nBut if I run CHSH I can.\n\n105\n00:05:34.510 --> 00:05:38.560\nI am allowed to modify\nthe file by using CHSH.\n\n106\n00:05:38.560 --> 00:05:41.890\nOr if I change my password, well,\npasswords aren't actually stored here.\n\n107\n00:05:41.890 --> 00:05:43.960\nThey're stored in the shadow file, right?\n\n108\n00:05:43.960 --> 00:05:49.053\nSo let me get out of this and\nI can do the same thing with /etc/shadow.\n\n109\n00:05:49.053 --> 00:05:51.030\nThat's where the passwords are stored.\n\n110\n00:05:51.030 --> 00:05:52.045\nI can't even read it.\n\n111\n00:05:52.045 --> 00:05:55.510\nI can't even, I get permission denying\njust trying to open the file, right?\n\n112\n00:05:55.510 --> 00:06:00.290\nBut if I run, if I can get out of this,\nif I run passwd,\n\n113\n00:06:00.290 --> 00:06:04.730\nit will let me change my password and\nit's gonna modify that shadow file.\n\n114\n00:06:04.730 --> 00:06:09.402\nAnd the reason it's able to do that\nis because of the Set User ID bit.\n\n115\n00:06:09.402 --> 00:06:15.898\nIf I do a which passwd, right, so\nthere it is, /user/bin/passwd,\n\n116\n00:06:15.898 --> 00:06:20.663\nand I do a long listing\non /user/bin/passwd, and\n\n117\n00:06:20.663 --> 00:06:24.798\nI take a look at it,\nsee how it's in bold red?\n\n118\n00:06:24.798 --> 00:06:26.700\nYou don't normally see that, right?\n\n119\n00:06:26.700 --> 00:06:33.090\nIf I were to just pull up the /usr/bin\nfolder, there's a lot of stuff in here.\n\n120\n00:06:33.090 --> 00:06:36.430\nAnd binaries are normally,\nwell in my distro they're green, right.\n\n121\n00:06:36.430 --> 00:06:38.300\nSo these are binaries that I can run.\n\n122\n00:06:38.300 --> 00:06:40.950\nLinks are light blue in mine.\n\n123\n00:06:40.950 --> 00:06:43.720\nIt is just the default for\nred, I haven't changed it.\n\n124\n00:06:43.720 --> 00:06:46.818\nSo as I scroll up though, I see most\nof the users here are green or blue.\n\n125\n00:06:46.818 --> 00:06:52.408\nBut every now and then,\nI see red like umount is red,\n\n126\n00:06:52.408 --> 00:06:56.233\nor passwd, sudu is red, su is red.\n\n127\n00:06:56.233 --> 00:06:57.720\nWhat does that mean?\n\n128\n00:06:57.720 --> 00:07:01.330\nIt means they've got the Set User ID\nbit assigned to them.\n\n129\n00:07:01.330 --> 00:07:03.870\nAnd you can spot it if you\nlook at the permissions.\n\n130\n00:07:03.870 --> 00:07:07.560\nLet me find passwd again cuz\nthat's the one I wanna show you.\n\n131\n00:07:07.560 --> 00:07:11.340\nIf I look over here at the permissions,\nlet me zoom in on this a little bit here,\n\n132\n00:07:11.340 --> 00:07:13.340\nI'll make gigantic-\n&gt;&gt; Wow, that is good.\n\n133\n00:07:13.340 --> 00:07:17.330\n&gt;&gt; Oops, see the permissions here,\nwhere it's not a directory so\n\n134\n00:07:17.330 --> 00:07:19.000\nI have a dash, that's expected.\n\n135\n00:07:19.000 --> 00:07:22.910\nAnd then I normally expect to see read,\nwrite and execute, rwx, but\n\n136\n00:07:22.910 --> 00:07:27.658\ninstead I see RWs, right, a lower case s.\n\n137\n00:07:27.658 --> 00:07:31.760\nThat lowercase s tells me that\nthe Set User ID bit is assigned here.\n\n138\n00:07:31.760 --> 00:07:36.950\nAnd that means whoever runs passwd,\nit won't run as them.\n\n139\n00:07:36.950 --> 00:07:40.511\nIt'll run as the user, it'll run as root.\n\n140\n00:07:40.511 --> 00:07:42.650\n&gt;&gt; Okay, now this is a lowercase s.\n\n141\n00:07:42.650 --> 00:07:45.740\nYou may occasionally see a capital S.\n\n142\n00:07:45.740 --> 00:07:47.820\nA capital S is not a good thing.\n\n143\n00:07:47.820 --> 00:07:50.873\nA capital S means the Set User ID\nthat is assigned but\n\n144\n00:07:50.873 --> 00:07:53.643\nthe user doesn't have execute permissions.\n\n145\n00:07:53.643 --> 00:07:57.943\nIf they have Set UID and execute,\nit would be a lower case s.\n\n146\n00:07:57.943 --> 00:08:00.111\nThat's what you want,\nthat means it functions.\n\n147\n00:08:00.111 --> 00:08:04.095\nIf you have the set user ID bit assigned\nand no execute, you don't have permission\n\n148\n00:08:04.095 --> 00:08:07.430\nto execute, you get the capitalize,\nwhich is broken, right.\n\n149\n00:08:07.430 --> 00:08:08.820\nSo, you don't want to see a capitalize.\n\n150\n00:08:08.820 --> 00:08:10.610\nIt means you need to add\nexecute permissions.\n\n151\n00:08:10.610 --> 00:08:14.490\nBut in this case, I've got RWS,\nwhich means I can run this.\n\n152\n00:08:14.490 --> 00:08:18.110\nAnd if I look further at the permissions,\nthe other group, right,\n\n153\n00:08:18.110 --> 00:08:20.530\neverybody else has read and execute.\n\n154\n00:08:20.530 --> 00:08:24.770\nSo anybody with the user account\non this system can run past WD.\n\n155\n00:08:24.770 --> 00:08:29.190\nAnd when they run it,\nit's going to run as root.\n\n156\n00:08:29.190 --> 00:08:30.540\nAnd hopefully, you guys see why.\n\n157\n00:08:30.540 --> 00:08:35.095\nWe need that to happen because we need\nthe user to be able to modify the size\n\n158\n00:08:35.095 --> 00:08:36.910\nETC/WD file.\n\n159\n00:08:36.910 --> 00:08:39.470\nOr we need them to be\nable modify /ETC/Shadow.\n\n160\n00:08:39.470 --> 00:08:41.400\nTo be able to update their password.\n\n161\n00:08:41.400 --> 00:08:43.580\nI don't want users to\nhave access to that file.\n\n162\n00:08:43.580 --> 00:08:46.050\nI don't want them to edit\nthe contents of the file.\n\n163\n00:08:46.050 --> 00:08:49.350\nBut I want them to be able to change\ntheir own record, and this lets us do it.\n\n164\n00:08:49.350 --> 00:08:55.130\nNow this puts an incredible amount\nof trust on that pass wd utility,\n\n165\n00:08:55.130 --> 00:08:57.480\nor any other utility that has this set.\n\n166\n00:08:57.480 --> 00:09:01.050\nBecause what if this command\ntakes command line arguments?\n\n167\n00:09:01.050 --> 00:09:04.510\nAnd I now specify other users, right?\n\n168\n00:09:04.510 --> 00:09:08.000\nIf I specify a different user,\nI could change their password.\n\n169\n00:09:08.000 --> 00:09:09.190\nThat would be bad.\n\n170\n00:09:09.190 --> 00:09:10.540\nWe could change the root user, right?\n\n171\n00:09:10.540 --> 00:09:15.260\nI'm just logged in here as dpezet,\nso I could say pass wd- u root.\n\n172\n00:09:15.260 --> 00:09:16.310\nI wanna change somebody else.\n\n173\n00:09:17.520 --> 00:09:19.920\nOnly root can do that, right.\n\n174\n00:09:19.920 --> 00:09:21.380\nWhoever wrote this, or, you know,\n\n175\n00:09:21.380 --> 00:09:24.260\nthe group of people that wrote\nthis software, put checks in here.\n\n176\n00:09:24.260 --> 00:09:27.950\nThey did safety checks to say you\ncan only change your own password,\n\n177\n00:09:27.950 --> 00:09:29.290\nnot somebody else's.\n\n178\n00:09:29.290 --> 00:09:31.700\nBut what if this was\npoorly written software?\n\n179\n00:09:31.700 --> 00:09:35.680\nIf it was poorly written,\nthere could be all sorts of holes in here.\n\n180\n00:09:35.680 --> 00:09:39.040\nAnd any use could now\ntake this application and\n\n181\n00:09:39.040 --> 00:09:41.250\nuse it to run things as root.\n\n182\n00:09:41.250 --> 00:09:43.580\nTo start exploiting that access and\n\n183\n00:09:43.580 --> 00:09:46.060\nreally gaining access to resources\nthey shouldn't have access to.\n\n184\n00:09:46.060 --> 00:09:49.920\nAnd that's the risky part\nabout the set user id bit.\n\n185\n00:09:49.920 --> 00:09:52.550\nIt's dangerous when used improperly.\n\n186\n00:09:52.550 --> 00:09:56.700\nWhen used correctly like this, this is\na correct use of it, it works great.\n\n187\n00:09:56.700 --> 00:09:59.800\nIt serves it's purpose and I don't have\nto give people the root password just so\n\n188\n00:09:59.800 --> 00:10:01.500\nthey can change the wrong password right?.\n\n189\n00:10:01.500 --> 00:10:03.050\nSo that's really what it's goal is,\n\n190\n00:10:03.050 --> 00:10:06.060\nso it's a great technology\ndon't be afraid of it.\n\n191\n00:10:06.060 --> 00:10:08.790\nWe just need to know if someone's\ninappropriately using it,\n\n192\n00:10:08.790 --> 00:10:11.770\nthat's why we need to learn\nabout the set user ID bit.\n\n193\n00:10:11.770 --> 00:10:15.620\n&gt;&gt; So Don,\nhow do we go about using the SUID bit?\n\n194\n00:10:15.620 --> 00:10:17.050\n&gt;&gt; All right so if you want to use it.\n\n195\n00:10:17.050 --> 00:10:17.740\n&gt;&gt; Yes.\n&gt;&gt; So let's say\n\n196\n00:10:17.740 --> 00:10:20.380\nyou've got an example where you need that.\n\n197\n00:10:20.380 --> 00:10:27.610\nI need something to have that and maybe\nit's the, let's see, the who am I command.\n\n198\n00:10:27.610 --> 00:10:32.180\nIf I look at that one, how is that one\nset, if I look at who am I, there we go.\n\n199\n00:10:32.180 --> 00:10:35.250\nSo looking at the who am\nI command When it runs,\n\n200\n00:10:35.250 --> 00:10:38.130\nit's just running with read,\nwrite and acute.\n\n201\n00:10:38.130 --> 00:10:39.460\nIt runs as the user.\n\n202\n00:10:39.460 --> 00:10:40.140\nThat's what we want.\n\n203\n00:10:40.140 --> 00:10:41.540\nWe want it to run as the user.\n\n204\n00:10:41.540 --> 00:10:44.000\nIt's owned by Route, but\nwe want it to run as the user.\n\n205\n00:10:44.000 --> 00:10:46.050\nLet's say I had some reason\nI wanted to change that.\n\n206\n00:10:46.050 --> 00:10:49.514\nI don't have a reason, but just for\nthe sake of this show, I could change it.\n\n207\n00:10:49.514 --> 00:10:53.960\nQuick caviat out here, normally where I\nthink of needing this is with a script.\n\n208\n00:10:53.960 --> 00:10:58.030\nMost Linux distros will ignore\nthe set user id bit on a script.\n\n209\n00:10:58.030 --> 00:11:00.670\nSo it's really binaries\nthat we apply this to.\n\n210\n00:11:00.670 --> 00:11:03.780\nSo even if I apply it to a script,\nthe odds are it won't work.\n\n211\n00:11:03.780 --> 00:11:06.690\nBut if I apply it to a binary,\nthat's where it's designed to work.\n\n212\n00:11:06.690 --> 00:11:11.650\nAnd so, if I wanna change this to have\nthe set UID bit I'm going to, first off,\n\n213\n00:11:11.650 --> 00:11:13.660\nI'm gonna need to be\nan administrator to do it.\n\n214\n00:11:13.660 --> 00:11:17.570\nRight now, you don't have to be\nan administrator technically.\n\n215\n00:11:17.570 --> 00:11:22.530\nIf you're the owner of the file,\nyou need to be the owner.\n\n216\n00:11:22.530 --> 00:11:25.810\nThis one is owned by root, so\nthat's why I need to be an administrator.\n\n217\n00:11:25.810 --> 00:11:27.860\nBut if I had a binary that\nwas in my home directory,\n\n218\n00:11:27.860 --> 00:11:29.320\nmaybe I downloaded something\nfrom the Internet.\n\n219\n00:11:29.320 --> 00:11:30.670\nIt's in my home directory, I'm the owner.\n\n220\n00:11:30.670 --> 00:11:32.620\nAnd so I can set the user ID bit on it.\n\n221\n00:11:32.620 --> 00:11:36.010\nCuz I'm telling it to allow other\npeople to run that application as me.\n\n222\n00:11:36.010 --> 00:11:37.330\nYou can give away your own access.\n\n223\n00:11:37.330 --> 00:11:39.110\nLinux will let you do stupid things.\n\n224\n00:11:39.110 --> 00:11:40.810\nBut you can't give away\nsomebody else's access.\n\n225\n00:11:40.810 --> 00:11:43.710\nSo if I want to give away root's\naccess I need to be root.\n\n226\n00:11:43.710 --> 00:11:51.290\nSo I'm going to do a sudo -s just to\nswitch my shell over to a root shell.\n\n227\n00:11:51.290 --> 00:11:52.720\nI just pressed Enter a bunch of times\n\n228\n00:11:52.720 --> 00:11:54.260\ninstead of typing the password,\nthere we go.\n\n229\n00:11:57.270 --> 00:11:58.036\nAnd I'm gonna go in and\n\n230\n00:11:58.036 --> 00:12:02.880\nI'm gonna change the who am I command\nto change who its being run as, okay?\n\n231\n00:12:02.880 --> 00:12:06.515\nSo right now its got RWX,\nI'm gonna say chmod.\n\n232\n00:12:06.515 --> 00:12:10.880\nAnd then I'm gonna modify\nthe user permissions.\n\n233\n00:12:10.880 --> 00:12:14.949\nAnd I'll say u plus s I'm\nadding the s attribute.\n\n234\n00:12:14.949 --> 00:12:21.445\nAnd that's that SU ID bit what I wanna\nassign to it, so I'll say u plus s.\n\n235\n00:12:21.445 --> 00:12:26.148\nI said sticky, sticky bits actually\nsomething a little bit different.\n\n236\n00:12:26.148 --> 00:12:28.711\nSo this is just setting\nthe set U ID that u plus s.\n\n237\n00:12:28.711 --> 00:12:32.588\nAnd then I'll specify what is it I'm\nmodifying, I'll say /user/bin/who am I.\n\n238\n00:12:32.588 --> 00:12:36.260\nAnd now that I have done that If I go\nback and look at it now it is red.\n\n239\n00:12:36.260 --> 00:12:39.520\nAnd instead of RWX I can\nsee that I have RWS and\n\n240\n00:12:39.520 --> 00:12:43.110\nit is lower case that is good it\nmeans I have execute permissions.\n\n241\n00:12:43.110 --> 00:12:45.210\nAnd we're in good shape.\n\n242\n00:12:45.210 --> 00:12:49.720\nSo now that who am I command is a little\nbit different than it was before.\n\n243\n00:12:49.720 --> 00:12:53.150\nAnd if I come in and\nI run who am I, look what I got.\n\n244\n00:12:53.150 --> 00:12:54.310\nI didn't get that I'm D.\n\n245\n00:12:54.310 --> 00:12:58.570\nPezet, I exited out of root, so now I'm\nback to being logged in as D Pezet.\n\n246\n00:12:58.570 --> 00:13:02.750\nIf I echo $ user, I'm D Pezet.\n\n247\n00:13:02.750 --> 00:13:05.990\nBut if I run the who am I command,\nwho am I has set user id.\n\n248\n00:13:05.990 --> 00:13:09.020\nAnd it's set so\nthat it's going to run as root, and\n\n249\n00:13:09.020 --> 00:13:10.920\nI get that I'm that root user right?\n\n250\n00:13:10.920 --> 00:13:12.970\nSo, now, if I know an exploit for\nthe who am I command,\n\n251\n00:13:12.970 --> 00:13:14.240\nI can really take advantage of that.\n\n252\n00:13:14.240 --> 00:13:14.740\nRight?\nMaybe,\n\n253\n00:13:14.740 --> 00:13:18.060\nI can start messing around with it and\nsee what else can it do?\n\n254\n00:13:18.060 --> 00:13:21.320\nIf I pull up it's help documentation,\ndoes it take any options?\n\n255\n00:13:21.320 --> 00:13:24.030\nWell it doesn't, so\nI picked a bad command to exploit.\n\n256\n00:13:24.030 --> 00:13:27.740\nBut if it had other options I might be\nable to do all sorts of crazy things.\n\n257\n00:13:27.740 --> 00:13:30.930\nEven sometimes you can take\nadvantage of piping and\n\n258\n00:13:30.930 --> 00:13:33.320\npipe it into other commands and\nyou might be able to leverage that way.\n\n259\n00:13:33.320 --> 00:13:35.470\nThere's all sorts of\nneat stuff you can do.\n\n260\n00:13:35.470 --> 00:13:40.090\nI say neat, all sorts of dangerous stuff\nif it's not really well thought out.\n\n261\n00:13:40.090 --> 00:13:44.000\nSo the default implementations of set\nuser ID are really well thought out.\n\n262\n00:13:44.000 --> 00:13:45.970\nIt's your implementations\nyou have to worry about.\n\n263\n00:13:45.970 --> 00:13:49.480\nSo while I can set that big,\nit's not necessarily a great idea.\n\n264\n00:13:49.480 --> 00:13:54.475\nNow, I set it by whoops, now everybody\nknows my super secret password.\n\n265\n00:13:54.475 --> 00:13:59.630\n[LAUGH] So\nI set it by using a ch mod u plus s.\n\n266\n00:13:59.630 --> 00:14:03.730\nAnd you can remove it the same way by\nsaying u minus s to remove that and\n\n267\n00:14:03.730 --> 00:14:05.010\nget it out of there.\n\n268\n00:14:05.010 --> 00:14:07.500\nThat is one way to do it.\n\n269\n00:14:07.500 --> 00:14:13.350\nAnd then the other way, is you can\nuse the old number format right?\n\n270\n00:14:13.350 --> 00:14:16.340\nThe old number format,\nthis was a special bit right?\n\n271\n00:14:16.340 --> 00:14:18.720\nSo you normally have like three values, so\n\n272\n00:14:18.720 --> 00:14:23.900\nif I said 777 that was read right next que\nfor the user, the group and the other.\n\n273\n00:14:23.900 --> 00:14:26.510\nWell there's actually another digit\non here that we don't normally see\n\n274\n00:14:26.510 --> 00:14:27.840\na fourth digit.\n\n275\n00:14:27.840 --> 00:14:31.880\nAnd if you wanted to do the setuid(),\nyou would do a four, like that.\n\n276\n00:14:31.880 --> 00:14:35.230\nSo I might say,\nfour seven five five, like that.\n\n277\n00:14:35.230 --> 00:14:38.070\nThat would give the owner read write and\nexecute,\n\n278\n00:14:38.070 --> 00:14:42.070\nit would give everybody else read and\nexecute, and it would set the SUID bit.\n\n279\n00:14:42.070 --> 00:14:44.180\nThat four, is what does it.\n\n280\n00:14:44.180 --> 00:14:45.560\nBut that's the old way so\n\n281\n00:14:45.560 --> 00:14:50.110\nwe don't really see that so\nmuch anymore, we use the u+s or u-s.\n\n282\n00:14:50.110 --> 00:14:54.050\nBut at this point, everything should\nbe put back to the way that I had it\n\n283\n00:14:54.050 --> 00:14:55.980\noriginally before I\nstarted messing with it.\n\n284\n00:14:55.980 --> 00:14:57.660\nAnd there we go.\nSo now the who am I command is back to\n\n285\n00:14:57.660 --> 00:14:58.860\noperating the way that it should.\n\n286\n00:14:58.860 --> 00:15:03.310\nBut that's how we can actually get in\nthere and use that set user id bit.\n\n287\n00:15:03.310 --> 00:15:04.700\n&gt;&gt; Now, you've already teased this,\n\n288\n00:15:04.700 --> 00:15:07.910\nbut is there something\nsimilar we can do for groups?\n\n289\n00:15:07.910 --> 00:15:11.650\n&gt;&gt; Yes, so that's the SGID, set group id.\n\n290\n00:15:11.650 --> 00:15:12.930\n&gt;&gt; Somehow I knew that.\n\n291\n00:15:12.930 --> 00:15:15.600\n&gt;&gt; And it works the same way,\nit really does work the same way.\n\n292\n00:15:15.600 --> 00:15:16.810\nIt's just tied to the group, right?\n\n293\n00:15:16.810 --> 00:15:18.220\nIn this case, the group is root, but\n\n294\n00:15:18.220 --> 00:15:20.670\nwe could have this to be any\nother group if we wanted.\n\n295\n00:15:20.670 --> 00:15:24.300\nAnd we could say this application\nalways runs as this particular group.\n\n296\n00:15:24.300 --> 00:15:26.880\nIt's another gateway to give\napplication access to files so\n\n297\n00:15:26.880 --> 00:15:29.540\nthat's actually giving\nthe user access to files.\n\n298\n00:15:29.540 --> 00:15:30.970\nIt might only be able to access a file\n\n299\n00:15:30.970 --> 00:15:33.530\nwhen their using this one\nparticular application.\n\n300\n00:15:33.530 --> 00:15:37.290\nYou assign it the same way,\nexcept instead of doing what I did,\n\n301\n00:15:37.290 --> 00:15:40.370\nU plus S, you would do G plus S, right?\n\n302\n00:15:40.370 --> 00:15:45.770\nSo, I'm adding that SGID bit by doing\nG plus S and tacking it on there.\n\n303\n00:15:45.770 --> 00:15:50.355\nAnd And when I do that and I take a look\nat it, see how it becomes yellow?\n\n304\n00:15:50.355 --> 00:15:53.466\nRed is set user ID,\nthat's the one we're really worried about.\n\n305\n00:15:53.466 --> 00:15:56.536\nYellow is not as dangerous\nbecause it's the group.\n\n306\n00:15:56.536 --> 00:15:58.673\nBut you can still give away more\npermissions than you want So\n\n307\n00:15:58.673 --> 00:15:59.620\nit lights it up as yellow.\n\n308\n00:15:59.620 --> 00:16:02.976\nAnd you probably noticed that when I\nwas looking at the /users/bin earlier.\n\n309\n00:16:02.976 --> 00:16:04.860\nThere were a couple in\nthere that were yellow.\n\n310\n00:16:04.860 --> 00:16:08.410\nThat means that it's gonna\nrun as the group by default.\n\n311\n00:16:08.410 --> 00:16:10.270\nBut otherwise it functions the same way.\n\n312\n00:16:10.270 --> 00:16:12.440\nWe remove the bit the same way, and\n\n313\n00:16:12.440 --> 00:16:15.320\nwe'll detect the bit the same\nway here in a few minutes.\n\n314\n00:16:15.320 --> 00:16:18.180\nBut that's basically what we do for\ngroups.\n\n315\n00:16:18.180 --> 00:16:22.380\n&gt;&gt; Mm-hm, so Don, how can we find out if\nit's being used improperly on our system?\n\n316\n00:16:22.380 --> 00:16:24.920\n&gt;&gt; All right, well,\nif you've got kind of a default set,\n\n317\n00:16:24.920 --> 00:16:27.940\nthen you don't have to worry about it,\nbut somebody might have changed it.\n\n318\n00:16:27.940 --> 00:16:29.980\nIf you have more than one\nadministrator in your system,\n\n319\n00:16:29.980 --> 00:16:34.760\nsomebody could have used setuid or setgid\nsomewhere and you don't even know it, and\n\n320\n00:16:34.760 --> 00:16:36.300\nnow you've got a system that's weakened.\n\n321\n00:16:36.300 --> 00:16:37.420\nSo we need a way to audit it.\n\n322\n00:16:37.420 --> 00:16:40.718\nAnd, fortunately,\nwe can use the find command to do that.\n\n323\n00:16:40.718 --> 00:16:44.894\nWith the find command, you can search\nacross your whole file system and\n\n324\n00:16:44.894 --> 00:16:49.520\nget a list of every binary that's\nleveraging the setuid or setgid bit.\n\n325\n00:16:49.520 --> 00:16:50.120\nAnd that way,\n\n326\n00:16:50.120 --> 00:16:52.936\nyou can identify when something\nis on the list that shouldn't be.\n\n327\n00:16:52.936 --> 00:16:55.886\nNow, I know a lot of people have created\nscripts that will actually do file\n\n328\n00:16:55.886 --> 00:16:56.542\ncomparisons.\n\n329\n00:16:56.542 --> 00:16:59.620\nAnytime there's a difference then\nit'll throw up that warning flag and\n\n330\n00:16:59.620 --> 00:17:00.940\nemail you or whatever.\n\n331\n00:17:00.940 --> 00:17:03.970\nBut deep down, at the heart and soul of\nit, we can just use the find command to\n\n332\n00:17:03.970 --> 00:17:07.030\nscan our file system and identify\nwhere these are being used, all right?\n\n333\n00:17:07.030 --> 00:17:09.660\nSo let me show you how we can do that.\n\n334\n00:17:09.660 --> 00:17:13.510\nFirst off, if you wanna use find and\nsearch the entire file system,\n\n335\n00:17:13.510 --> 00:17:17.670\nyou do need to be a administrator,\nso I'm in my root shell to do this.\n\n336\n00:17:17.670 --> 00:17:20.180\nThere's a lot of folders you might\nnot have access to unless you elevate\n\n337\n00:17:20.180 --> 00:17:20.790\nyour privileges.\n\n338\n00:17:20.790 --> 00:17:24.447\nSo you wanna make sure you sudu this or\nget into a root shell.\n\n339\n00:17:24.447 --> 00:17:27.400\nAnd I'm gonna say find /.\n\n340\n00:17:27.400 --> 00:17:29.531\nI'm gonna search my entire file system, so\n\n341\n00:17:29.531 --> 00:17:32.596\njust slash at the very beginning\nof the file system, the root.\n\n342\n00:17:32.596 --> 00:17:33.958\nAnd so I'll say find /.\n\n343\n00:17:33.958 --> 00:17:37.870\nAnd then -perm.\n\n344\n00:17:37.870 --> 00:17:39.445\nI'm looking for file parameters.\n\n345\n00:17:39.445 --> 00:17:40.160\n&gt;&gt; Right.\n\n346\n00:17:40.160 --> 00:17:41.970\n&gt;&gt; Normally we look for\na file name, right?\n\n347\n00:17:41.970 --> 00:17:44.880\nI might look for\nfile.txt here or whatever.\n\n348\n00:17:44.880 --> 00:17:48.060\nBut in this case, I don't care\nabout the name cuz I don't know it.\n\n349\n00:17:48.060 --> 00:17:49.520\nI care about the parameters.\n\n350\n00:17:49.520 --> 00:17:52.790\nI need to find people that\nhave that sticky bit set.\n\n351\n00:17:52.790 --> 00:17:57.769\nAnd then after that,\nI can just say that I'm looking -u+s\n\n352\n00:17:57.769 --> 00:18:04.150\nanywhere with the user permissions\nhave that s bit assigned.\n\n353\n00:18:04.150 --> 00:18:07.680\nOkay, now you'll find tons of websites out\nthere that have a slightly different way\n\n354\n00:18:07.680 --> 00:18:14.950\nof doing this, where instead of doing it,\nthey say -perm and then, -perm +4000.\n\n355\n00:18:14.950 --> 00:18:18.541\nRight, remember I mentioned that\nthe numerical way of assigning these and\n\n356\n00:18:18.541 --> 00:18:20.023\nhow that fourth bit was a four,\n\n357\n00:18:20.023 --> 00:18:22.774\nand so they should looking for\nanybody has that four set.\n\n358\n00:18:22.774 --> 00:18:25.327\nWell that functionality is actually\nbeen removed from find and it's so\n\n359\n00:18:25.327 --> 00:18:25.930\nkind of broken.\n\n360\n00:18:25.930 --> 00:18:26.762\nSee if I run it.\n\n361\n00:18:26.762 --> 00:18:28.213\nIt tells me it has been removed.\n\n362\n00:18:28.213 --> 00:18:29.090\nIt doesn't work.\n\n363\n00:18:29.090 --> 00:18:32.702\nSo you'll find a lot of documentation that\nshows that because that worked for years.\n\n364\n00:18:32.702 --> 00:18:34.872\nFor 30 years that worked and\nnow it's gone.\n\n365\n00:18:34.872 --> 00:18:35.960\n&gt;&gt; In the olden days.\n\n366\n00:18:35.960 --> 00:18:37.090\n&gt;&gt; In the olden days.\n\n367\n00:18:37.090 --> 00:18:40.071\nSo the way we do it now\nthough is we say -perm,\n\n368\n00:18:40.071 --> 00:18:43.616\nso we're looking for\nparameters, and then -u+s.\n\n369\n00:18:43.616 --> 00:18:46.670\nI'm looking for\nanywhere where that is set.\n\n370\n00:18:46.670 --> 00:18:50.303\nAnd before I run that,\nlet me just copy that real quick.\n\n371\n00:18:50.303 --> 00:18:51.580\nI'm gonna clear my screen.\n\n372\n00:18:52.670 --> 00:18:54.040\nAnd there we go.\n\n373\n00:18:54.040 --> 00:18:57.625\nAll right, so, what I just did,\nis I ran find,\n\n374\n00:18:57.625 --> 00:19:02.420\n/ for the root folder, -perm, -u+s.\n\n375\n00:19:02.420 --> 00:19:03.955\nLooking for anybody with that set.\n\n376\n00:19:03.955 --> 00:19:04.850\nAnd then I get a list.\n\n377\n00:19:04.850 --> 00:19:08.374\nNow, there is some folders that even\nthe root user doesn't have access to,\n\n378\n00:19:08.374 --> 00:19:09.653\nusually process folders.\n\n379\n00:19:09.653 --> 00:19:11.450\nOnes that appear and disappear.\n\n380\n00:19:11.450 --> 00:19:14.540\nSo, I got a couple right here at\nthe beginning that I got no such file or\n\n381\n00:19:14.540 --> 00:19:15.230\ndirectory.\n\n382\n00:19:15.230 --> 00:19:18.170\nThose are ones that probably disappeared\nwhile it was doing its search so\n\n383\n00:19:18.170 --> 00:19:19.420\nI can ignore those.\n\n384\n00:19:19.420 --> 00:19:26.550\nBut after that, everything else, these are\nfiles that have the set, User ID bit set.\n\n385\n00:19:26.550 --> 00:19:28.712\nAnd, while I don't have a ton of them,\nI do have quite a few.\n\n386\n00:19:28.712 --> 00:19:30.427\nI mean,\nthere's a solid 20 entries in here, right?\n\n387\n00:19:31.460 --> 00:19:33.705\nI have VMware Workstation installed.\n\n388\n00:19:33.705 --> 00:19:36.387\nAnd the server is actually\nrunning on top of VMware.\n\n389\n00:19:36.387 --> 00:19:41.047\nAnd I can see the VMware tools\nhave a vmware-user-suid-wrapper.\n\n390\n00:19:41.047 --> 00:19:43.480\nSo it makes sense that\nthat would have suid set.\n\n391\n00:19:43.480 --> 00:19:46.200\nAnd then after that, I've got fusermount.\n\n392\n00:19:46.200 --> 00:19:48.400\nfusermount is for mounting file systems.\n\n393\n00:19:48.400 --> 00:19:51.400\nWell, if a user wants to mount a file\nsystem, they need to be root to do that.\n\n394\n00:19:51.400 --> 00:19:53.210\nAnd fuse is allowing it.\n\n395\n00:19:53.210 --> 00:19:55.140\nHere's passwd, right?\n\n396\n00:19:55.140 --> 00:19:58.140\nchsh, which I mentioned earlier,\nchange shell.\n\n397\n00:19:58.140 --> 00:19:59.450\nThese have suid.\n\n398\n00:19:59.450 --> 00:20:01.650\nI expect these guys to have that.\n\n399\n00:20:01.650 --> 00:20:03.070\nBecause that's how those tools function.\n\n400\n00:20:03.070 --> 00:20:05.650\nThese are default commands,\nbut as I look around,\n\n401\n00:20:05.650 --> 00:20:08.961\nI might find something in here\nthat's not supposed to be in here.\n\n402\n00:20:08.961 --> 00:20:10.325\nSomething that I didn't know.\n\n403\n00:20:10.325 --> 00:20:11.734\nLook at some of these guys over here.\n\n404\n00:20:11.734 --> 00:20:13.930\nThey're in the library folder.\n\n405\n00:20:13.930 --> 00:20:16.757\nAnd again, this is VMware and\na few other things that are activating.\n\n406\n00:20:16.757 --> 00:20:18.854\nThese are ones that I'll\nneed to pay attention to.\n\n407\n00:20:18.854 --> 00:20:20.415\nAre those supposed to have SUID?\n\n408\n00:20:20.415 --> 00:20:21.365\nIs it safe?\n\n409\n00:20:21.365 --> 00:20:22.239\nWell now I can find it.\n\n410\n00:20:22.239 --> 00:20:24.405\nI can look in there and\nI can track it down.\n\n411\n00:20:24.405 --> 00:20:26.030\nAnd I was just doing SUID.\n\n412\n00:20:26.030 --> 00:20:28.645\nYou can do SGID as well.\n\n413\n00:20:28.645 --> 00:20:35.035\nSo I could say,\nfind / -perm and then -g+s,\n\n414\n00:20:35.035 --> 00:20:40.210\nand so now I'm looking for\nthe same thing but with the SGID bit set.\n\n415\n00:20:40.210 --> 00:20:42.043\nAnd if you look,\nthere's far fewer of these.\n\n416\n00:20:42.043 --> 00:20:44.836\nAll right, so I've got a couple of\nlog files that have SGID set, for\n\n417\n00:20:44.836 --> 00:20:45.850\nwhatever reason.\n\n418\n00:20:45.850 --> 00:20:49.120\nNot quite sure why on that one,\nsince log files aren't executable anyway.\n\n419\n00:20:49.120 --> 00:20:54.328\nBut [LAUGH] we'll see a few other things\nin here as far as other binary commands.\n\n420\n00:20:54.328 --> 00:20:58.795\nThat an SGID set that are set to\nrun as the group that owns them.\n\n421\n00:20:58.795 --> 00:21:04.853\nAnd it's not really a great way.\n\n422\n00:21:04.853 --> 00:21:06.550\nI searched for both of them.\n\n423\n00:21:06.550 --> 00:21:12.510\nIf I come to and I do something like this,\nif I look for user end group,\n\n424\n00:21:12.510 --> 00:21:17.010\nit doesn't really return it because it's\nlooking for it to have both bits set.\n\n425\n00:21:17.010 --> 00:21:18.841\nSo it's not really a great\nway that I can search for\n\n426\n00:21:18.841 --> 00:21:21.890\nboth of that doing a crazy a regular\nexpression which would be a nightmare.\n\n427\n00:21:21.890 --> 00:21:24.418\nSo we'll usually just kinda run\nthem separately like this but\n\n428\n00:21:24.418 --> 00:21:25.741\nthat will scan the file system.\n\n429\n00:21:25.741 --> 00:21:29.566\nWe can identify anywhere it's in use and\nthen we can audit whether or not that's\n\n430\n00:21:29.566 --> 00:21:33.530\nappropriate, and that's an important thing\nto do as part of hardening a server.\n\n431\n00:21:33.530 --> 00:21:37.330\nBut also maintaining it, because again,\nif a hacker breaks into your system,\n\n432\n00:21:37.330 --> 00:21:41.810\nif they gain access, all they have to\ndo is, while they're logged in as root,\n\n433\n00:21:41.810 --> 00:21:43.040\nthat's a big red flag.\n\n434\n00:21:43.040 --> 00:21:46.510\nYou'll see that this root users logged in,\nyou're like who's logged in as root?\n\n435\n00:21:46.510 --> 00:21:51.010\nBut if they can take some application,\nand get the SUID bit set,\n\n436\n00:21:51.010 --> 00:21:54.590\nnow they can log in as any regular\nuser and not set off a red flag.\n\n437\n00:21:54.590 --> 00:21:57.890\nAnd then feed their commands\nthrough this SUID application,\n\n438\n00:21:57.890 --> 00:21:59.416\nhiding everything they do.\n\n439\n00:21:59.416 --> 00:22:01.100\nSo that's why we need\nto keep an eye on it.\n\n440\n00:22:01.100 --> 00:22:02.072\nWe need to watch our file system.\n\n441\n00:22:02.072 --> 00:22:04.530\nWe need to look for in that set,\nand be aware of it.\n\n442\n00:22:04.530 --> 00:22:08.720\nSo, that's basically what we need\nto know about SUID and SGID or\n\n443\n00:22:08.720 --> 00:22:10.975\nhowever we wanna say those things.\n\n444\n00:22:10.975 --> 00:22:14.100\n&gt;&gt; Don, we rely on you to\nhelp us protect our systems.\n\n445\n00:22:14.100 --> 00:22:15.300\nThank you so very much.\n\n446\n00:22:15.300 --> 00:22:19.410\nAuditing SUID and SGID, any last words?\n\n447\n00:22:19.410 --> 00:22:22.860\n&gt;&gt; The main one is,\ndon't be afraid to use them.\n\n448\n00:22:22.860 --> 00:22:23.813\nThey have a purpose.\n\n449\n00:22:23.813 --> 00:22:24.650\nThere is a need.\n\n450\n00:22:24.650 --> 00:22:26.999\nYou may have a scenario where\nyou need to use these bits.\n\n451\n00:22:26.999 --> 00:22:28.224\nThat's what they're for.\n\n452\n00:22:28.224 --> 00:22:29.990\nThe trick here is just vigilance, right?\n\n453\n00:22:29.990 --> 00:22:31.960\nMonitoring, making sure they're\nnot being used inappropriately.\n\n454\n00:22:31.960 --> 00:22:34.760\nSo, always keep track of that, and\njust keep an eye on the system.\n\n455\n00:22:34.760 --> 00:22:36.362\nAnd if you really wanna go crazy with it,\n\n456\n00:22:36.362 --> 00:22:38.540\nyou can create audit rules\nthat audit Windows change.\n\n457\n00:22:38.540 --> 00:22:41.700\nBut it's very difficult to do\nacross an entire file system.\n\n458\n00:22:41.700 --> 00:22:45.420\nAuditing is not designed to be used as\na shotgun to cover the entire file system.\n\n459\n00:22:45.420 --> 00:22:47.640\nSo, that's why we don't\nsee this used in auditing,\n\n460\n00:22:47.640 --> 00:22:49.362\nas far as the audit daemon, right?\n\n461\n00:22:49.362 --> 00:22:52.620\nInstead, it's more manual, like what I\nam doing here with the find command.\n\n462\n00:22:52.620 --> 00:22:54.521\nBut just know that it does have a purpose.\n\n463\n00:22:54.521 --> 00:22:56.180\nThere is a reason to have it.\n\n464\n00:22:56.180 --> 00:22:56.983\nJust use it carefully.\n\n465\n00:22:56.983 --> 00:22:59.070\n&gt;&gt; Yeah, you can't be too secure.\n\n466\n00:22:59.070 --> 00:23:02.292\nLinux security techniques, there is\na lot of episodes for you to watch.\n\n467\n00:23:02.292 --> 00:23:03.238\nPlease watch them all.\n\n468\n00:23:03.238 --> 00:23:04.350\nYou'd be very glad you did.\n\n469\n00:23:04.350 --> 00:23:08.470\nDon, excellent job as usual, and\nthank you for watching ITProTV.\n\n470\n00:23:08.470 --> 00:23:11.781\nRemember, good IT Pro is always learning.\n\n471\n00:23:11.781 --> 00:23:12.810\nI'm Zach Memos.\n\n472\n00:23:12.810 --> 00:23:13.550\n&gt;&gt; And I'm Don Pezet.\n\n473\n00:23:13.550 --> 00:23:15.914\n&gt;&gt; And we will see you very soon.\n\n474\n00:23:15.914 --> 00:23:21.841\n[MUSIC]\n\n475\n00:23:21.841 --> 00:23:25.672\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "229848842"
        },
        {
          "description": "Don and Zach discuss what is 'fail2ban,' how we install fail2ban, the EPEL repository, how we can tell if fail2ban is running, how we configure fail2ban to audit logins, example of protecting something like SSH, performing a login attack, verifying the ban is in place, and how we can avoid accidentally locking ourselves out.",
          "length": "1685",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-6-auditing_logins_with_fail2ban-082517-PGM.00_27_49_24.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-6-auditing_logins_with_fail2ban-082517-PGM.00_27_49_24.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-1-6-auditing_logins_with_fail2ban-082517-PGM.00_27_49_24.Still001-sm.jpg",
          "title": "Auditing Logins with fail2ban",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:02.103\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:02.103 --> 00:00:05.974\n[CROSSTALK]\n\n3\n00:00:05.974 --> 00:00:08.186\n[MUSIC]\n\n4\n00:00:08.186 --> 00:00:11.886\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:11.886 --> 00:00:13.996\n&gt;&gt; Hello, and thank you for\nchoosing ITProTV,\n\n6\n00:00:13.996 --> 00:00:15.780\nhelping you learn everywhere you go.\n\n7\n00:00:15.780 --> 00:00:17.300\nI'm your host, Zach Memos.\n\n8\n00:00:17.300 --> 00:00:20.826\nAs we're gonna be auditing logins\nwith Fail2ban as we continue\n\n9\n00:00:20.826 --> 00:00:22.730\nwith Linux security techniques.\n\n10\n00:00:22.730 --> 00:00:26.570\nThe person giving us all the information\nwe need is the one and only Don Pezet.\n\n11\n00:00:26.570 --> 00:00:27.990\nDon, thanks for being here.\n\n12\n00:00:27.990 --> 00:00:30.039\nHe's such a good guy.\n\n13\n00:00:30.039 --> 00:00:33.010\n&gt;&gt; I managed to show up.\n\n14\n00:00:33.010 --> 00:00:36.412\nIn this episode, like Zach said,\nwe're gonna be taking a look at how we can\n\n15\n00:00:36.412 --> 00:00:38.910\naudit our logins by using\na utility called Fail2ban.\n\n16\n00:00:38.910 --> 00:00:42.342\nAnd Fail2ban is one of those really\ninteresting services that kind of came\n\n17\n00:00:42.342 --> 00:00:45.609\nacross where if someone recognized\na need that wasn't being filled and\n\n18\n00:00:45.609 --> 00:00:47.570\ncame up with a great solution for it.\n\n19\n00:00:47.570 --> 00:00:50.320\nAnd so we're gonna get a chance to see\nhow to do that, to be able to track\n\n20\n00:00:50.320 --> 00:00:52.870\nwhen failed logins are happening and\nother types of failed activities.\n\n21\n00:00:52.870 --> 00:00:55.830\nAnd then take some kind of\naction to protect our servers.\n\n22\n00:00:55.830 --> 00:00:58.921\nWe'll see that all right here in this\nepisode with auditing logins with\n\n23\n00:00:58.921 --> 00:00:59.630\nFail2ban.\n\n24\n00:00:59.630 --> 00:01:02.570\n&gt;&gt; Well, first and\nforemost, what is Fail2ban?\n\n25\n00:01:02.570 --> 00:01:05.500\n&gt;&gt; All right, well, let's start\nwith the name, the name Fail2ban.\n\n26\n00:01:05.500 --> 00:01:07.935\nFail is referring to failed logins, right?\n\n27\n00:01:07.935 --> 00:01:11.140\nFail2ban is a service\nthat monitors your logs.\n\n28\n00:01:11.140 --> 00:01:13.370\nIt monitors your syslogs and\nall the logs for\n\n29\n00:01:13.370 --> 00:01:16.180\nall the various other services and\nit looks for failed logins.\n\n30\n00:01:16.180 --> 00:01:19.140\nNot just failed logins, it can look for\ncertain other malicious activity, too.\n\n31\n00:01:19.140 --> 00:01:20.968\nBut the main thing it looks for\nis failed logins.\n\n32\n00:01:20.968 --> 00:01:23.930\nAnd then when it finds a failed login,\n\n33\n00:01:23.930 --> 00:01:27.549\nit can convert it from\na log message into a ban.\n\n34\n00:01:27.549 --> 00:01:31.380\nAnd the ban is actually talking\nabout a firewall rule, right?\n\n35\n00:01:31.380 --> 00:01:32.220\nThink about it for a minute.\n\n36\n00:01:32.220 --> 00:01:37.700\nMost Linux distros have a three login\nlimit, that if I try and log in\n\n37\n00:01:37.700 --> 00:01:43.315\nto a server and I do the wrong password\nthree times, it disconnects, right?\n\n38\n00:01:43.315 --> 00:01:43.990\n&gt;&gt; Mm-hm.\n\n39\n00:01:43.990 --> 00:01:46.730\n&gt;&gt; But then I can just turn right around\nand connect again and try three more.\n\n40\n00:01:46.730 --> 00:01:48.630\nAnd disconnect and\ntry again three more, right?\n\n41\n00:01:48.630 --> 00:01:50.410\nSo that's a brute force attack.\n\n42\n00:01:50.410 --> 00:01:51.577\nSomebody can brute force.\n\n43\n00:01:51.577 --> 00:01:54.562\nThey can sit there and try and\nguess your password all day long and\n\n44\n00:01:54.562 --> 00:01:56.190\nnothing ever happens, right?\n\n45\n00:01:56.190 --> 00:01:59.120\nThat's just until they get it right,\nthen something really bad happens, right?\n\n46\n00:01:59.120 --> 00:02:00.260\nThey get in.\n\n47\n00:02:00.260 --> 00:02:02.930\nWell, Fail2ban sees that happening.\n\n48\n00:02:02.930 --> 00:02:06.830\nIt sees the log files, it sees these\nfailed logins starting to accumulate.\n\n49\n00:02:06.830 --> 00:02:08.972\nAnd then it says I'm gonna take an action.\n\n50\n00:02:08.972 --> 00:02:13.064\nI'm gonna take the IP address that I see\nthese login attempts coming from and I'm\n\n51\n00:02:13.064 --> 00:02:17.167\ngonna add a firewall rule, it'll actually\nreach out to IP tables or Firewalld.\n\n52\n00:02:17.167 --> 00:02:19.870\nAnd it'll add a rule and\nsay block this IP.\n\n53\n00:02:19.870 --> 00:02:22.450\nDon't just block it\nfrom that one protocol.\n\n54\n00:02:22.450 --> 00:02:23.520\nBlock it entirely.\n\n55\n00:02:23.520 --> 00:02:27.805\nJust close off that IP and\ndon't allow it to contact my system again.\n\n56\n00:02:27.805 --> 00:02:31.969\nAnd you can set a timer on it that says, I\nonly want to block it for five minutes or\n\n57\n00:02:31.969 --> 00:02:35.475\nten minutes, and\nthat will stop a brute force attack.\n\n58\n00:02:35.475 --> 00:02:39.235\nThey try and guess a few times, they get\nkicked out, and now they're held out for\n\n59\n00:02:39.235 --> 00:02:39.805\nten minutes.\n\n60\n00:02:39.805 --> 00:02:41.195\nAnd so the ability for\n\n61\n00:02:41.195 --> 00:02:45.305\nthe brute forcing guess will take\na much longer window of time to do.\n\n62\n00:02:45.305 --> 00:02:46.355\nAnd that's what failed demand does.\n\n63\n00:02:46.355 --> 00:02:47.695\nIt's actually a pretty simple idea.\n\n64\n00:02:47.695 --> 00:02:49.200\nThe people who thought of it,\n\n65\n00:02:49.200 --> 00:02:52.130\nthey were just recognizing this\nsimple weakness that we already had.\n\n66\n00:02:52.130 --> 00:02:55.455\nThe systems were already\ndetecting these failures.\n\n67\n00:02:55.455 --> 00:02:57.140\nThey just weren't doing anything about it.\n\n68\n00:02:57.140 --> 00:02:58.060\nSo let's do something.\n\n69\n00:02:58.060 --> 00:03:01.690\nLet's take an extra step and leverage our\nfirewalls to actually protect our servers.\n\n70\n00:03:01.690 --> 00:03:03.420\nSo that's what Fail2ban is.\n\n71\n00:03:03.420 --> 00:03:08.350\nIt converts failed logins to bans,\nIP bans that are in our firewall rules.\n\n72\n00:03:08.350 --> 00:03:10.400\n&gt;&gt; So how do we install Fail2ban?\n\n73\n00:03:10.400 --> 00:03:11.660\n&gt;&gt; It's pretty straightforward.\n\n74\n00:03:11.660 --> 00:03:14.340\nFail2ban to my knowledge is\nnot installed by default on\n\n75\n00:03:14.340 --> 00:03:16.120\nany of the major distros\nthat are out there.\n\n76\n00:03:16.120 --> 00:03:20.550\nThere's a lot of custom distros\nthat'll have it, like FreePBX, right?\n\n77\n00:03:20.550 --> 00:03:23.420\nFreePBX is really where I first started\nworking with Fail2ban because you\n\n78\n00:03:23.420 --> 00:03:27.201\nhave SIP calls, where people connect and\ntry and authenticate.\n\n79\n00:03:27.201 --> 00:03:31.697\nAnd if somebody can authenticate and break\ninto your system with SIP, they can start\n\n80\n00:03:31.697 --> 00:03:36.270\ncalling 1-900 numbers that they own and\nactually generate money effectively.\n\n81\n00:03:36.270 --> 00:03:36.839\n&gt;&gt; That's terrible.\n\n82\n00:03:36.839 --> 00:03:37.371\n&gt;&gt; Generate toll charges.\n\n83\n00:03:37.371 --> 00:03:41.108\nSo that's where a lot of this stuff,\nI don't know if it originated there, but\n\n84\n00:03:41.108 --> 00:03:43.400\nthat's where I learned\nabout it was with VOIP.\n\n85\n00:03:43.400 --> 00:03:46.540\nBut you can use it really with\nany number of services, but\n\n86\n00:03:46.540 --> 00:03:49.130\nthe first step is we've\ngot to get it installed.\n\n87\n00:03:49.130 --> 00:03:52.600\nAnd depending on your disk drill,\nit may be part of your standard repos or\n\n88\n00:03:52.600 --> 00:03:54.710\nyou might have to get it\nfrom an alternate repo.\n\n89\n00:03:54.710 --> 00:03:57.235\nI'm gonna use a CentOS box,\nso I'm running CentOS7.\n\n90\n00:03:57.235 --> 00:04:01.459\nAnd on CentOS,\nit actually doesn't have that package.\n\n91\n00:04:01.459 --> 00:04:06.262\nLet me do a sudo -s to become a root user.\n\n92\n00:04:06.262 --> 00:04:11.330\nAnd I'll do a yum list fail2ban and\nit will likely come back with nothing.\n\n93\n00:04:11.330 --> 00:04:12.542\nYeah, no matching packages.\n\n94\n00:04:12.542 --> 00:04:17.190\nSo it's not a part of the CentOS standard\nrepo, or even Red Hats, for that matter.\n\n95\n00:04:17.190 --> 00:04:19.219\nBut we can get it from EPEL,\nso I'm just gonna add that.\n\n96\n00:04:19.219 --> 00:04:23.151\nI'll do a yum install epel-release and\n\n97\n00:04:23.151 --> 00:04:27.720\nthat will add the EPEL repo to my system.\n\n98\n00:04:27.720 --> 00:04:31.860\nAnd once I've got that, then I can do\na yum list Fail2ban and it'll turn up.\n\n99\n00:04:31.860 --> 00:04:35.565\nAt least I hope it does,\notherwise this'll be a short show.\n\n100\n00:04:35.565 --> 00:04:36.820\n&gt;&gt; [LAUGH]\n&gt;&gt; Thank you very much.\n\n101\n00:04:36.820 --> 00:04:38.635\n&gt;&gt; And that'll turn up, there it is.\n\n102\n00:04:38.635 --> 00:04:40.490\nFail2ban.noarchitecture.\n\n103\n00:04:40.490 --> 00:04:41.680\nSo I can get that installed.\n\n104\n00:04:41.680 --> 00:04:44.550\nNow, when I install it,\nthere's actually three pieces to it, but\n\n105\n00:04:44.550 --> 00:04:46.350\njust installing that main\npackage will get all three.\n\n106\n00:04:46.350 --> 00:04:50.450\nIf I do a yum install fail2ban,\nit'll show me the three packages.\n\n107\n00:04:50.450 --> 00:04:51.144\nThere they are.\n\n108\n00:04:51.144 --> 00:04:54.265\nThere's fail2ban-firewalld, okay?\n\n109\n00:04:54.265 --> 00:04:56.157\nI'm running Firewalld.\n\n110\n00:04:56.157 --> 00:04:59.348\nIf I was running IP tables,\nI would need fail2ban-iptables.\n\n111\n00:04:59.348 --> 00:05:02.296\nAnd then you've got fail2ban-sendmail.\n\n112\n00:05:02.296 --> 00:05:04.428\nThat one's actually optional.\n\n113\n00:05:04.428 --> 00:05:08.415\nWith Fail2ban, it can create\na ban rule in the firewall and\n\n114\n00:05:08.415 --> 00:05:10.140\nit can also send you an email about it.\n\n115\n00:05:10.140 --> 00:05:12.850\nSo if you wanna be notified by email\nabout a failure, you can do that.\n\n116\n00:05:12.850 --> 00:05:15.330\nAnd it needs fail2ban-sendmail to do it.\n\n117\n00:05:15.330 --> 00:05:19.610\nI don't normally do that because you'd be\nshocked at how many times people try and\n\n118\n00:05:19.610 --> 00:05:21.420\nbrute force a server on the Internet.\n\n119\n00:05:21.420 --> 00:05:23.060\nYou can email us all times of the day.\n\n120\n00:05:23.060 --> 00:05:25.090\nIt's really been frustrating.\n\n121\n00:05:25.090 --> 00:05:28.948\nAnd then lastly Fail2ban server,\nthat's the most important piece, right?\n\n122\n00:05:28.948 --> 00:05:31.090\nThat's the daemon that's\ngonna run in the background,\n\n123\n00:05:31.090 --> 00:05:34.650\nthat's gonna monitor our log files, and\ncheck for when these attacks occur.\n\n124\n00:05:34.650 --> 00:05:36.620\n&gt;&gt; Right.\n&gt;&gt; So I'll go ahead and say yes to that.\n\n125\n00:05:36.620 --> 00:05:39.840\nThat's gonna install, and\nthen I'll have it on my system.\n\n126\n00:05:39.840 --> 00:05:43.940\nNow it does have a default configuration,\nbut\n\n127\n00:05:43.940 --> 00:05:47.140\nthe default configuration doesn't\nsecure the server at all.\n\n128\n00:05:47.140 --> 00:05:50.726\nSo we can go ahead and start it.\n\n129\n00:05:50.726 --> 00:05:56.881\nI can say systemctl enable --now fail2ban,\nlike that.\n\n130\n00:05:56.881 --> 00:06:00.208\nAnd it links it, it starts it and\nnow it's up and running, so\n\n131\n00:06:00.208 --> 00:06:02.930\nI'm officially running Fail2ban.\n\n132\n00:06:02.930 --> 00:06:05.170\nBut it's not really doing anything for me.\n\n133\n00:06:05.170 --> 00:06:08.100\nIt can protect a number of different\nservices, it's just not on by default.\n\n134\n00:06:08.100 --> 00:06:10.500\nBut as far as getting it installed and\ngetting it started,\n\n135\n00:06:10.500 --> 00:06:14.430\nit's not much different than any other\nservice that we might choose to install.\n\n136\n00:06:14.430 --> 00:06:16.830\n&gt;&gt; Well, how can we tell if\nFail2ban is running then?\n\n137\n00:06:16.830 --> 00:06:19.890\n&gt;&gt; All right, so if you're on a server and\nyou don't know, right?\n\n138\n00:06:19.890 --> 00:06:23.470\nMaybe the packages are installed but you\ndon't know if it's configured or running.\n\n139\n00:06:23.470 --> 00:06:26.710\nThere's a couple of commands we can use,\nand I'll use these throughout the show.\n\n140\n00:06:26.710 --> 00:06:29.870\nBut one way is that we can look\nat the fail2ban log, right?\n\n141\n00:06:29.870 --> 00:06:31.780\nSo it will log what it's doing.\n\n142\n00:06:31.780 --> 00:06:37.560\nSo if I say cat /var/log/fail2ban.log,\nright?\n\n143\n00:06:39.325 --> 00:06:40.785\nThat's the log file that it creates.\n\n144\n00:06:40.785 --> 00:06:43.085\nAnd you can look in there and\nsee what it's doing, right?\n\n145\n00:06:43.085 --> 00:06:46.415\nI can see mine only has a couple of\nmessages, changed logging target,\n\n146\n00:06:46.415 --> 00:06:50.585\nconnected fail2ban persisted new database\ncreated cuz it's a brand new install.\n\n147\n00:06:50.585 --> 00:06:53.705\nNotice how it's a warning,\nWARNING New database created.\n\n148\n00:06:53.705 --> 00:06:54.295\n&gt;&gt; Danger.\n\n149\n00:06:54.295 --> 00:06:55.265\n&gt;&gt; It means one of two things.\n\n150\n00:06:55.265 --> 00:06:58.185\nIt means one, it's a new install,\nwhich mine is, so I can ignore it.\n\n151\n00:06:58.185 --> 00:07:01.450\nOr two, an attacker managed\nto blow away your logs.\n\n152\n00:07:01.450 --> 00:07:02.400\nThat's bad, right?\n\n153\n00:07:02.400 --> 00:07:04.350\n&gt;&gt; No, that's quick\n&gt;&gt; That's why it's a warning.\n\n154\n00:07:04.350 --> 00:07:06.444\nIn my case it's a new install,\nso I'm fine with that.\n\n155\n00:07:06.444 --> 00:07:07.550\nSo I got a new database.\n\n156\n00:07:07.550 --> 00:07:10.940\nBut I can tell here by these log messages\nthat I know it is up and running.\n\n157\n00:07:10.940 --> 00:07:12.500\nNow that's just one way to look.\n\n158\n00:07:12.500 --> 00:07:16.121\nNormally what I'll do is I'll\nuse the Fail2ban client, so\n\n159\n00:07:16.121 --> 00:07:21.387\nif you run fail2ban-client, that's the\nutility that let's you talk to Fail2ban.\n\n160\n00:07:21.387 --> 00:07:22.587\nAnd it can kind of see how it's doing.\n\n161\n00:07:22.587 --> 00:07:23.730\nSay hey, how you doing?\n\n162\n00:07:23.730 --> 00:07:25.152\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n163\n00:07:25.152 --> 00:07:26.443\n&gt;&gt; So if I wanna know if it's working-\n\n164\n00:07:26.443 --> 00:07:27.243\n&gt;&gt; Want a cup of coffee?\n\n165\n00:07:27.243 --> 00:07:29.502\n[LAUGH]\n&gt;&gt; It is really the best way.\n\n166\n00:07:29.502 --> 00:07:31.870\nWe can say fail2ban-client status.\n\n167\n00:07:31.870 --> 00:07:33.110\nGive me the status, right?\n\n168\n00:07:33.110 --> 00:07:35.860\nAnd it comes back and it lets me know\nthat it is running cuz I got a response.\n\n169\n00:07:35.860 --> 00:07:39.120\nAnd it's telling me the number of jails,\nzero.\n\n170\n00:07:39.120 --> 00:07:42.090\nNow if you watched our CH Root episode,\n\n171\n00:07:42.090 --> 00:07:45.160\nwe talk about CH Root jails\nwhere we isolated applications.\n\n172\n00:07:45.160 --> 00:07:46.079\n&gt;&gt; Yep, I watched that.\n\n173\n00:07:46.079 --> 00:07:50.620\n&gt;&gt; Well, Fail2ban uses the jail\nterminology, but it's not truly isolating.\n\n174\n00:07:50.620 --> 00:07:53.050\nWhat it's doing is it's\nwatching the logins and so\n\n175\n00:07:53.050 --> 00:07:54.590\nit's treating that as a jail.\n\n176\n00:07:54.590 --> 00:07:57.485\nSo they use the same term but\nit means something a little bit different.\n\n177\n00:07:57.485 --> 00:08:00.307\nBut right now it's telling\nme number of jails, zero.\n\n178\n00:08:00.307 --> 00:08:03.182\nIn other words,\nit's not watching any of my services.\n\n179\n00:08:03.182 --> 00:08:04.461\nSo there's nothing for it to isolate.\n\n180\n00:08:04.461 --> 00:08:07.122\nSo it is running,\nit's just not doing anything yet.\n\n181\n00:08:07.122 --> 00:08:10.109\nSo I'll need to configure that, and\nif I really wanna be specific and\n\n182\n00:08:10.109 --> 00:08:12.644\nlet's say I ran this,\nit told me there was a jail, right?\n\n183\n00:08:12.644 --> 00:08:14.940\nAnd then we had jailed like SSH.\n\n184\n00:08:14.940 --> 00:08:19.243\nI could add just the end of this SSHD,\nand I could say tell me about that jail.\n\n185\n00:08:19.243 --> 00:08:23.321\nAnd it would tell me if the jail existed,\nwhether any IP's are currently banned and\n\n186\n00:08:23.321 --> 00:08:25.841\nthat kind of information,\nI would get to see that.\n\n187\n00:08:25.841 --> 00:08:28.300\nIn my case it's not configured,\nso I get nothing back.\n\n188\n00:08:28.300 --> 00:08:29.730\nThat jail doesn't exist.\n\n189\n00:08:30.750 --> 00:08:34.368\nThe only other way I can really think of\nthat we'd monitor if this is running is it\n\n190\n00:08:34.368 --> 00:08:35.401\ndoes log to journal D.\n\n191\n00:08:35.401 --> 00:08:38.490\nOn a system D system it\nwill log to journal D.\n\n192\n00:08:38.490 --> 00:08:43.190\nSo I can say journal ctl‐xau.\n\n193\n00:08:43.190 --> 00:08:47.740\nX and A, because I wanna see the extended\ninformation and show the full output.\n\n194\n00:08:47.740 --> 00:08:50.590\nAnd then U, I want a specific unit.\n\n195\n00:08:50.590 --> 00:08:52.700\nAnd the unit I'm looking for is fail2ban.\n\n196\n00:08:52.700 --> 00:08:56.813\nAnd so when I look, I should see log\nmessages from fail2ban that show that it\n\n197\n00:08:56.813 --> 00:08:59.270\nstarted up and\nthat it's now up and running.\n\n198\n00:08:59.270 --> 00:09:02.710\nSo these are all different ways that I\ncan verify fail2ban is actually up and\n\n199\n00:09:02.710 --> 00:09:04.920\ngoing right here on my system.\n\n200\n00:09:04.920 --> 00:09:08.670\n&gt;&gt; So how do we configure\nfail2ban to audit logins, Don?\n\n201\n00:09:08.670 --> 00:09:11.030\n&gt;&gt; All right, so\nwe actually want it to do something.\n\n202\n00:09:11.030 --> 00:09:11.610\n&gt;&gt; Yeah.\n\n203\n00:09:11.610 --> 00:09:13.080\nIt's not doing anything right now.\n\n204\n00:09:13.080 --> 00:09:14.360\nSo I want it to do something.\n\n205\n00:09:14.360 --> 00:09:17.470\nIt's got a couple of configuration files,\nand they're a little bit confusing.\n\n206\n00:09:17.470 --> 00:09:20.010\nSo I wanna kinda walk you through\nthe process of how these work.\n\n207\n00:09:20.010 --> 00:09:25.280\nWhen we installed it,\nit created a file inside of /etc/fail2ban.\n\n208\n00:09:25.280 --> 00:09:26.070\nAll right.\n\n209\n00:09:26.070 --> 00:09:28.900\nAnd so, if I look at that folder,\n/etc/fail2ban,\n\n210\n00:09:28.900 --> 00:09:33.700\nand poke around in there,\nyou'll see jail.conf.\n\n211\n00:09:33.700 --> 00:09:36.140\nThat's the main configuration file for\nfail2ban.\n\n212\n00:09:37.380 --> 00:09:41.150\nBut, I'm gonna warn you real quick,\njail.conf is really well-documented.\n\n213\n00:09:41.150 --> 00:09:43.500\nOut of all the servers out there,\nthis is probably one of the most detailed.\n\n214\n00:09:43.500 --> 00:09:44.690\nIt tells you everything you need to know.\n\n215\n00:09:44.690 --> 00:09:47.540\nYou can practically read it like\na book and learn everything you need.\n\n216\n00:09:47.540 --> 00:09:50.030\nBut, you're not supposed to edit it.\n\n217\n00:09:50.030 --> 00:09:52.202\nYou're not supposed to modify jail.conf.\n\n218\n00:09:52.202 --> 00:09:56.280\nAnd the reason is every time they do\nan upgrade, there's times when they roll\n\n219\n00:09:56.280 --> 00:09:58.540\nout a new jail.conf, and\nyou'll lose all your changes.\n\n220\n00:09:58.540 --> 00:10:01.935\nSo, I don't want you to edit that.\n\n221\n00:10:01.935 --> 00:10:03.994\nYou can, [LAUGH].\nIf you edit that file you can, but\n\n222\n00:10:03.994 --> 00:10:05.790\nit might get overwritten, right?\n\n223\n00:10:05.790 --> 00:10:07.330\nSo that's kind of the risk.\n\n224\n00:10:07.330 --> 00:10:10.330\nSo while that's the main config\nfile we don't really mess with it.\n\n225\n00:10:10.330 --> 00:10:18.040\nInstead, we're gonna create a new file\nthat is called jail.local, all right.\n\n226\n00:10:18.040 --> 00:10:22.689\nAnd anything that you put in\njail.local will override jail.conf, so\n\n227\n00:10:22.689 --> 00:10:26.408\nwe look at jail.conf find\nthe settings that we want, and\n\n228\n00:10:26.408 --> 00:10:30.670\nthen we put the settings in\njail.locale instead, right.\n\n229\n00:10:30.670 --> 00:10:35.830\nSo, I'm gonna just use the last\ncommand to take a look at jail.conf,\n\n230\n00:10:35.830 --> 00:10:38.300\nand as we look at it you'll see,\nactually, you know what?\n\n231\n00:10:38.300 --> 00:10:39.555\nI didn't notice this before.\n\n232\n00:10:39.555 --> 00:10:41.785\nThis giant warning right\nhere at the beginning.\n\n233\n00:10:41.785 --> 00:10:43.705\n&gt;&gt; Danger.\n&gt;&gt; You should not modify this file.\n\n234\n00:10:43.705 --> 00:10:45.615\nThey're even telling you\ndon't modify this file.\n\n235\n00:10:45.615 --> 00:10:46.155\n&gt;&gt; Yeah.\n\n236\n00:10:46.155 --> 00:10:49.415\n&gt;&gt; But, you look through here and\nyou can see things that are defaults.\n\n237\n00:10:49.415 --> 00:10:50.165\nAnd they give you examples.\n\n238\n00:10:50.165 --> 00:10:54.908\nIf I want to monitor SSH, here's\nthe commands that I might need for SSH.\n\n239\n00:10:54.908 --> 00:10:56.745\nActually real easy to turn on.\n\n240\n00:10:56.745 --> 00:10:57.895\nYou can scroll through and\n\n241\n00:10:57.895 --> 00:10:59.910\nsee all different sorts of\nthings you can configure.\n\n242\n00:10:59.910 --> 00:11:03.490\nWell, you find what you want\nto configure in here and\n\n243\n00:11:03.490 --> 00:11:06.450\nyou go and put it in jail.local.\n\n244\n00:11:06.450 --> 00:11:09.120\nWell there's a lot of stuff in here.\n\n245\n00:11:09.120 --> 00:11:13.760\nIf I keep scrolling here,\nit just keeps going on here, SSH,\n\n246\n00:11:13.760 --> 00:11:17.340\nHTTP, NGINX, this is a list of\nall the services we can protect.\n\n247\n00:11:17.340 --> 00:11:20.060\nYou are seeing all these different things.\n\n248\n00:11:20.060 --> 00:11:23.880\nWell, usually there's only a handful of\nthings that we actually need to configure\n\n249\n00:11:23.880 --> 00:11:25.050\nto get this stuff up and going.\n\n250\n00:11:25.050 --> 00:11:29.590\nSo, what I do is I'll typically\ngo into just jail.conf, and\n\n251\n00:11:29.590 --> 00:11:31.365\nadd just the entries that I need there.\n\n252\n00:11:31.365 --> 00:11:34.703\nIt's much, I'm sorry,\njail.local, much smaller,\n\n253\n00:11:34.703 --> 00:11:37.491\nkeeps things a lot more consistent,\nand easy.\n\n254\n00:11:37.491 --> 00:11:41.729\nNow, that's kind of a key thing to\nremember when we configure this, just so\n\n255\n00:11:41.729 --> 00:11:44.790\nwe make sure that our changes\ndon't get overwritten.\n\n256\n00:11:45.974 --> 00:11:48.192\n&gt;&gt; Can you give us an example\nparticularly something like SSH?\n\n257\n00:11:48.192 --> 00:11:50.187\n&gt;&gt; All right so, SSH.\n\n258\n00:11:50.187 --> 00:11:55.850\nYou first off, if we're going to protect\nthe service, how do we know if we can?\n\n259\n00:11:55.850 --> 00:11:59.530\nLike we've mentioned,\nhow do I know I can protect SSH?\n\n260\n00:11:59.530 --> 00:12:01.320\nWell, wait,\nI know because I've done it before but\n\n261\n00:12:01.320 --> 00:12:02.830\nwhat if I never worked\nwith Fail2ban before?\n\n262\n00:12:02.830 --> 00:12:05.660\nIf this is the first time you've\never heard of the product, right?\n\n263\n00:12:05.660 --> 00:12:08.808\nWell the first thing that I would do\nis I would take a look at this folder.\n\n264\n00:12:08.808 --> 00:12:14.430\nInside of /etc/fail2ban there's\na folder called filter.d.\n\n265\n00:12:14.430 --> 00:12:15.770\nThat guy right there.\n\n266\n00:12:15.770 --> 00:12:20.670\nAnd if you go into filter.d,\nthis folder contains all the log filters.\n\n267\n00:12:20.670 --> 00:12:22.110\nRemember, I said this\nis going to watch our\n\n268\n00:12:22.110 --> 00:12:22.975\nsystem logs,\n&gt;&gt; Right\n\n269\n00:12:22.975 --> 00:12:24.130\n&gt;&gt; and our other logs and look for\n\n270\n00:12:24.130 --> 00:12:25.720\nthese failed log ins and\nmalicious activity.\n\n271\n00:12:25.720 --> 00:12:26.587\n&gt;&gt; Right, right, right.\n\n272\n00:12:26.587 --> 00:12:29.935\n&gt;&gt; They create filters,\nto recognize that malicious activity.\n\n273\n00:12:29.935 --> 00:12:35.095\nAnd you can see them right here\nin /etc/failedtoban/filterd.\n\n274\n00:12:35.095 --> 00:12:38.075\nSo step one of securing a service\nis to find out whether or\n\n275\n00:12:38.075 --> 00:12:40.475\nnot Fail2ban even supports\nit in the first place.\n\n276\n00:12:40.475 --> 00:12:45.315\nAnd if I look in here,\nyou'll find they support a lot of stuff.\n\n277\n00:12:45.315 --> 00:12:50.685\nSo I've got, you'll see vsftp,\nthe security demon there.\n\n278\n00:12:50.685 --> 00:12:56.000\nIf I'm doing SSH, It should be in here\nsomewhere, who is SSH, right sshd.conf.\n\n279\n00:12:56.000 --> 00:12:59.380\nYou'll find NGINX,\nthe web server there's Apache, asterisk.\n\n280\n00:12:59.380 --> 00:13:02.820\nWell I mentioned voice over IP like\nFreePBX that would be asterisk.\n\n281\n00:13:02.820 --> 00:13:05.687\nThere's all sorts of different\nservices these are the ones,\n\n282\n00:13:05.687 --> 00:13:08.370\nthat fail2ban supports.\n\n283\n00:13:08.370 --> 00:13:10.990\nAnd if you look in these files you,\ndon't really need to configure these, but\n\n284\n00:13:10.990 --> 00:13:11.890\nyou'll see the filter,\n\n285\n00:13:11.890 --> 00:13:15.870\nwhat words they are looking for in the log\nfile that identify an attack is going on.\n\n286\n00:13:15.870 --> 00:13:17.430\nThese are where the filters are defined.\n\n287\n00:13:17.430 --> 00:13:18.450\n&gt;&gt; Right.\n\n288\n00:13:18.450 --> 00:13:19.910\n&gt;&gt; This is the list of services.\n\n289\n00:13:19.910 --> 00:13:24.260\nAnd more importantly they're\nnamed the way that SSH, or\n\n290\n00:13:24.260 --> 00:13:26.690\nthe way that fail2ban is\ngoing to treat it right.\n\n291\n00:13:26.690 --> 00:13:27.790\nRemember like apache,\n\n292\n00:13:27.790 --> 00:13:32.470\nwhen I install apache,\nthe system will normally call it HTTPD.\n\n293\n00:13:32.470 --> 00:13:35.140\nSo if I go in and put the configuration\nfor HTTPD it's going to be wrong.\n\n294\n00:13:35.140 --> 00:13:39.670\nI need it to be apache‐off, or whatever it\nis that I'm going to be feeding from here,\n\n295\n00:13:39.670 --> 00:13:40.990\nso it knows what to look for.\n\n296\n00:13:40.990 --> 00:13:43.077\nSo this helps me to kinda\nidentify that name too.\n\n297\n00:13:43.077 --> 00:13:47.713\nAll right so then, if I want SSH\nto be the one that gets secured,\n\n298\n00:13:47.713 --> 00:13:53.141\nI need to edit jail.local, so\nit's /etc/failtoban/jail.local,\n\n299\n00:13:53.141 --> 00:13:58.860\nand that file, if you just created it,\nit's gonna be empty, right?\n\n300\n00:13:58.860 --> 00:14:03.120\nAnd at a minimum,\nI just need to create a section for SSH.\n\n301\n00:14:03.120 --> 00:14:06.792\nSo I'll do a [sshd], right, so\nthat's gonna open the session for SSH.\n\n302\n00:14:06.792 --> 00:14:13.832\nAnd then I'm gonna put in enabled = true,\nlike that, all right?\n\n303\n00:14:13.832 --> 00:14:18.484\nNow, I could stop right here, and I just\ncreated a jail for SSH and it's gonna\n\n304\n00:14:18.484 --> 00:14:23.515\nstart protecting it and filtering it,\nwell, after I restart fail2ban, right?\n\n305\n00:14:23.515 --> 00:14:28.090\nBut, there's probably some of the default\nsettings that I want to modify as well.\n\n306\n00:14:28.090 --> 00:14:30.480\nSo, let me show you some of\nthe common ones that I work with.\n\n307\n00:14:30.480 --> 00:14:32.550\nI'm going to create a section here for\ndefault.\n\n308\n00:14:32.550 --> 00:14:34.930\nFor whatever reason they\ndo default in all capitals.\n\n309\n00:14:34.930 --> 00:14:36.090\nSo, I'll maintain that.\n\n310\n00:14:36.090 --> 00:14:38.870\nI always try and\ncopy what's in the main file.\n\n311\n00:14:38.870 --> 00:14:41.040\nThere's a few settings that\nwe will likely want to tweak.\n\n312\n00:14:41.040 --> 00:14:44.790\nFor example, the ban time is usually\nthe one that I want to work with.\n\n313\n00:14:44.790 --> 00:14:46.310\nHow long do we want to ban it?\n\n314\n00:14:46.310 --> 00:14:47.630\nAnd it's done in seconds.\n\n315\n00:14:47.630 --> 00:14:50.351\nRemember, it's gonna create\na firewall rule to block this IP.\n\n316\n00:14:50.351 --> 00:14:53.960\nAnd then when a certain period of time\nexpires then it removes the firewall rule.\n\n317\n00:14:53.960 --> 00:14:55.750\nSo how long do you want\nto ban somebody for?\n\n318\n00:14:55.750 --> 00:14:57.930\nFive minutes, ten minutes?\n\n319\n00:14:57.930 --> 00:14:59.950\nThe default is 3,600 seconds, right?\n\n320\n00:14:59.950 --> 00:15:04.280\nThat's the default from the other\nfile which, is that six minutes?\n\n321\n00:15:04.280 --> 00:15:05.514\nNo, 60 minutes, that's an hour.\n\n322\n00:15:05.514 --> 00:15:06.670\n&gt;&gt; Mm-hm, it is.\n\n323\n00:15:06.670 --> 00:15:08.660\n&gt;&gt; So it's gonna ban an IP for\nan entire hour.\n\n324\n00:15:08.660 --> 00:15:10.927\nThat might be a little long.\n\n325\n00:15:10.927 --> 00:15:13.998\n&gt;&gt; [LAUGH]\n&gt;&gt; It just depends on how long you want to\n\n326\n00:15:13.998 --> 00:15:14.769\ndo the ban.\n\n327\n00:15:14.769 --> 00:15:16.369\n&gt;&gt; Teach them a lesson by golly.\n\n328\n00:15:16.369 --> 00:15:17.795\n&gt;&gt; I dont work, gotta do it.\n\n329\n00:15:17.795 --> 00:15:20.782\nMaybe I only want to do it for\nfive minutes.\n\n330\n00:15:20.782 --> 00:15:23.345\nWhich would be 300 seconds.\n\n331\n00:15:23.345 --> 00:15:26.240\nIf they continue the attack\nthey'll just get banned again.\n\n332\n00:15:26.240 --> 00:15:27.580\nIf they continue they\njust keep getting banned.\n\n333\n00:15:27.580 --> 00:15:29.530\nI can set a ban time.\n\n334\n00:15:29.530 --> 00:15:34.300\nI can set a, if I'm using the email\nnotifications I need to set a sender.\n\n335\n00:15:34.300 --> 00:15:37.910\nWhen I send an email who does\nit show as being from, right?\n\n336\n00:15:37.910 --> 00:15:42.685\nI might want it to be\nfail2ban@lab.itpro.tv.\n\n337\n00:15:42.685 --> 00:15:45.635\nSo that'll be who the email comes from,\nthe sender.\n\n338\n00:15:45.635 --> 00:15:49.353\nI can specify the destination mail,\nwho does the email go to?\n\n339\n00:15:49.353 --> 00:15:55.122\nNow, even if you're not running a mail\nserver, you can just put root in here.\n\n340\n00:15:55.122 --> 00:15:59.214\nThe local root user can actually receive\nemail through sendmail all locally on\n\n341\n00:15:59.214 --> 00:15:59.896\nthe system.\n\n342\n00:15:59.896 --> 00:16:02.943\nAnd then it can access it with\na command line mail program.\n\n343\n00:16:02.943 --> 00:16:03.883\nWe don't normally do that, though.\n\n344\n00:16:03.883 --> 00:16:07.841\nWe normally send it to somebody else,\nso I might send this to don@itpro.tv.\n\n345\n00:16:07.841 --> 00:16:08.722\nSend it to me, right?\n\n346\n00:16:08.722 --> 00:16:09.629\nOr wherever it is.\n\n347\n00:16:09.629 --> 00:16:12.995\nUsually, we do like a mailing list and\nthat way you can put people in and\n\n348\n00:16:12.995 --> 00:16:16.322\ntake people out of the mailing list\nto control those notifications.\n\n349\n00:16:16.322 --> 00:16:19.772\nAnd then the most important\none is the action.\n\n350\n00:16:19.772 --> 00:16:24.260\nThe action is what do we\ndo if we detect an attack?\n\n351\n00:16:24.260 --> 00:16:27.410\nOkay, now there are a ton\nof different actions.\n\n352\n00:16:27.410 --> 00:16:29.596\nThey're all documented\nin that jail.com file.\n\n353\n00:16:29.596 --> 00:16:31.642\nIf you ever get bored,\nyou can go in and look at it.\n\n354\n00:16:31.642 --> 00:16:33.809\nBut there's two that really get used.\n\n355\n00:16:33.809 --> 00:16:34.922\n&gt;&gt; Laser beams.\n\n356\n00:16:34.922 --> 00:16:36.704\n&gt;&gt; Yeah, that would be nice.\n\n357\n00:16:36.704 --> 00:16:37.698\n&gt;&gt; [INAUDIBLE] good.\n\n358\n00:16:37.698 --> 00:16:40.196\n[CROSSTALK]\n&gt;&gt; But\n\n359\n00:16:40.196 --> 00:16:44.236\nthe two main ones that we use are one to\njust put a ban in place and that's it.\n\n360\n00:16:44.236 --> 00:16:48.480\nAnd any other one says,\nput a ban in place and send an email.\n\n361\n00:16:48.480 --> 00:16:52.280\nThose are choices now I don't know when do\nthe email because I know she can overwhelm\n\n362\n00:16:52.280 --> 00:16:54.160\nme and I have logs for that anyway.\n\n363\n00:16:54.160 --> 00:16:56.985\nSo instead,\nI usually just put the ban in place.\n\n364\n00:16:56.985 --> 00:17:00.059\nAnd so if we want that,\nthe action we need to put in is this.\n\n365\n00:17:00.059 --> 00:17:06.083\nIt's %, we need to open a parentheses and\nsay action.\n\n366\n00:17:06.083 --> 00:17:11.076\nAnd then in the action,\nyou just say _ close parenthesis s.\n\n367\n00:17:11.076 --> 00:17:12.154\nLike that, right?\n\n368\n00:17:12.154 --> 00:17:15.466\nLet me zoom in on that, so that you\nguys can definitely see it, right there.\n\n369\n00:17:15.466 --> 00:17:21.072\nSo %(action_)s, if you leave it like that,\n\n370\n00:17:21.072 --> 00:17:25.598\nthe action is putting the ban in place.\n\n371\n00:17:25.598 --> 00:17:30.152\nWe're gonna put a ban in and\nthen that's it, the rule goes in, okay?\n\n372\n00:17:30.152 --> 00:17:36.205\nIf we wanted to make it send\nan email as well, you could do mwl.\n\n373\n00:17:36.205 --> 00:17:38.444\nSo now it's actually going- [CROSSTALK]\n&gt;&gt; Okay.\n\n374\n00:17:38.444 --> 00:17:41.030\n&gt;&gt; That means mail with logs.\n\n375\n00:17:41.030 --> 00:17:42.310\n&gt;&gt; Got it.\n&gt;&gt; Right?\n\n376\n00:17:42.310 --> 00:17:44.264\nI'm gonna send a mail, it could just do m.\n\n377\n00:17:44.264 --> 00:17:45.320\nBut mwl, mail with logs,\n\n378\n00:17:45.320 --> 00:17:47.771\nthat means I'm gonna send an email\nthat that a ban happened.\n\n379\n00:17:47.771 --> 00:17:53.189\nIt's gonna contain the IP as well as the\nactual logs that triggered this, right?\n\n380\n00:17:53.189 --> 00:17:57.908\nSo I can see the syslog or SSH log or\nwhatever it was that triggered this event.\n\n381\n00:17:57.908 --> 00:17:59.975\nYou don't necessarily\nneed those log files.\n\n382\n00:17:59.975 --> 00:18:02.033\nYou just need to know a ban\nhappened with an IP, but\n\n383\n00:18:02.033 --> 00:18:03.851\nit's kind of nice to\nhave the log files too.\n\n384\n00:18:03.851 --> 00:18:07.207\nSo that's kind of the two\nthat I'll normally use,\n\n385\n00:18:07.207 --> 00:18:11.120\nis either just straight up action_ or\naction_ [COUGH] mwl.\n\n386\n00:18:11.120 --> 00:18:13.862\nBut if you ever get bored,\nlook inside of the jail.com file and\n\n387\n00:18:13.862 --> 00:18:17.247\nyou'll see there's a lot more in there,\na lot of other actions you can take.\n\n388\n00:18:17.247 --> 00:18:20.745\nYou can do all sorts of weird,\ncrazy things, but this is what I want.\n\n389\n00:18:20.745 --> 00:18:22.588\nI want to ban people, just do it.\n\n390\n00:18:22.588 --> 00:18:24.317\nBan them, don't send me any email.\n\n391\n00:18:24.317 --> 00:18:26.486\nI don't want to hear about it,\njust do it, okay?\n\n392\n00:18:26.486 --> 00:18:31.548\nNow all of these settings\nare defined in the actual jail.com.\n\n393\n00:18:31.548 --> 00:18:34.266\nAnd I'm defining them\na second time right here,\n\n394\n00:18:34.266 --> 00:18:37.398\nbut these will override\nwhat's in jail.com, right?\n\n395\n00:18:37.398 --> 00:18:40.465\nSo jail.local overrides jail.com.\n\n396\n00:18:40.465 --> 00:18:44.698\nSo now I've got everything set up\nthe way that I need it for SSH.\n\n397\n00:18:44.698 --> 00:18:51.048\nI can get out of that file, and\nI can do a systemctl restart fail2ban.\n\n398\n00:18:51.048 --> 00:18:55.964\nThat one's gonna restart, and\nnow I'm protecting my SSH connection.\n\n399\n00:18:55.964 --> 00:18:59.160\nWe're all set up, we're protected,\nand we're in business.\n\n400\n00:19:00.690 --> 00:19:05.381\nNow one of the things that I've\nstressed in other episodes is that we\n\n401\n00:19:05.381 --> 00:19:08.070\nneed to trust but verify, right?\n\n402\n00:19:08.070 --> 00:19:08.945\n&gt;&gt; Yeah.\n\n403\n00:19:08.945 --> 00:19:11.613\n&gt;&gt; I got this set up,\nI know I'm protecting the sessions, right?\n\n404\n00:19:11.613 --> 00:19:12.484\nWell do I?\n\n405\n00:19:12.484 --> 00:19:13.328\nDo I really know?\n\n406\n00:19:13.328 --> 00:19:14.740\nIs it really working?\n\n407\n00:19:14.740 --> 00:19:17.780\nWe need to perform an attack\nto actually see it.\n\n408\n00:19:17.780 --> 00:19:20.980\nAnd just doing a couple of failed logins\non our own probably won't trigger it.\n\n409\n00:19:20.980 --> 00:19:25.118\nIt's probably not enough, because what's\ngonna happen is people make mistakes.\n\n410\n00:19:25.118 --> 00:19:28.520\nIt's gotta leave at least enough leniency\nfor people to make regular mistakes.\n\n411\n00:19:28.520 --> 00:19:31.720\nBut if I pull off a full\non attack on this system,\n\n412\n00:19:31.720 --> 00:19:35.813\nthen I should be able to trigger\nfail2ban and see it happen.\n\n413\n00:19:35.813 --> 00:19:39.243\nOkay, now before I do that,\nI'm gonna stop fail2ban.\n\n414\n00:19:39.243 --> 00:19:43.468\nSo let me do a systemctl stop,\nwhich I'll have to spell right,\n\n415\n00:19:43.468 --> 00:19:45.401\nsystemctl stop fail2ban.\n\n416\n00:19:45.401 --> 00:19:47.187\nOkay, so I'm gonna stop it.\n\n417\n00:19:47.187 --> 00:19:50.269\nSo I'm not protecting my system, okay?\n\n418\n00:19:50.269 --> 00:19:53.858\nAnd I'm gonna get out, so\nI'm just gonna exit out.\n\n419\n00:19:53.858 --> 00:19:57.121\nAnd now I'm gonna pull off an attack, I'm\ngonna use a little utility called hydra.\n\n420\n00:19:57.121 --> 00:19:58.778\nIt's a utility with the cool name.\n\n421\n00:19:58.778 --> 00:20:00.296\n&gt;&gt; They have a cool name.\n\n422\n00:20:00.296 --> 00:20:04.548\n&gt;&gt; Hydra,\nlet's me perform attacks against a system.\n\n423\n00:20:04.548 --> 00:20:10.661\nAnd I can throw passwords at it,\nand see if I can get in, right?\n\n424\n00:20:10.661 --> 00:20:13.542\nAnd I can then try and\nbrute force an account.\n\n425\n00:20:13.542 --> 00:20:17.385\nI'm gonna brute force my account,\nI'll do hydra-l.\n\n426\n00:20:17.385 --> 00:20:20.238\nI'm gonna try to brute force\nthe dpezet account, right?\n\n427\n00:20:20.238 --> 00:20:24.314\nAnd I will specify how\nI wanna go about this.\n\n428\n00:20:24.314 --> 00:20:27.656\nNow, when you run hydra it actually tries\nto run multiple log ins at the same time,\n\n429\n00:20:27.656 --> 00:20:29.021\nand it can overwhelm the system.\n\n430\n00:20:29.021 --> 00:20:31.430\nSo I'm gonna filter that down,\nI'm gonna do -t2.\n\n431\n00:20:31.430 --> 00:20:34.306\nSo it's gonna try and do two\nsimultaneous logins at the same time.\n\n432\n00:20:34.306 --> 00:20:35.089\n&gt;&gt; Okay.\n\n433\n00:20:35.089 --> 00:20:36.800\n&gt;&gt; And then, here's the neat part.\n\n434\n00:20:37.910 --> 00:20:39.655\nI'm gonna try and guess the password.\n\n435\n00:20:39.655 --> 00:20:40.784\n&gt;&gt; Ethical hacking, I love it.\n\n436\n00:20:40.784 --> 00:20:42.225\nWe're gonna ethically hack ourselves.\n\n437\n00:20:42.225 --> 00:20:43.564\nHow can we guess the password?\n\n438\n00:20:43.564 --> 00:20:44.277\n&gt;&gt; All right, so\n\n439\n00:20:44.277 --> 00:20:47.731\nI could just let it run through\na whole sequence of random passwords.\n\n440\n00:20:47.731 --> 00:20:49.623\nBut let me show you guys\na fun way to use hydra.\n\n441\n00:20:49.623 --> 00:20:52.697\nActually we're not supposed to be doing\na hacking show, but I'll show you anyway.\n\n442\n00:20:52.697 --> 00:20:54.872\nI'm gonna fire up Chromium here,\n\n443\n00:20:54.872 --> 00:20:59.448\nand there's a GitHub repository out\nthere that has a really cool thing.\n\n444\n00:20:59.448 --> 00:21:02.980\nIt's a list of the 10,000\nmost common passwords.\n\n445\n00:21:02.980 --> 00:21:04.655\n&gt;&gt; [INAUDIBLE] right?\n&gt;&gt; And you just get the 10,000 most\n\n446\n00:21:04.655 --> 00:21:05.173\ncommon ones.\n\n447\n00:21:05.173 --> 00:21:08.892\nFor the sake of this show,\nI'm just gonna grab the first hundred and\n\n448\n00:21:08.892 --> 00:21:09.943\nI'll find those.\n\n449\n00:21:09.943 --> 00:21:13.457\nYou wanna just scroll down until\nwe get to 100, right there.\n\n450\n00:21:13.457 --> 00:21:19.135\nAnd I'm gonna copy those and we will take\nthose 10,000 most common passwords and\n\n451\n00:21:19.135 --> 00:21:21.559\nlet me create a text file real quick.\n\n452\n00:21:21.559 --> 00:21:26.348\nAnd I will just throw those in there,\nso let's see, I am back here.\n\n453\n00:21:26.348 --> 00:21:27.734\nI actually need to be on\nmy server anyways, so\n\n454\n00:21:27.734 --> 00:21:29.410\njust let me get rid of that command.\n\n455\n00:21:29.410 --> 00:21:32.923\nAnd I will create a file\nwhich is called passlist.txt.\n\n456\n00:21:32.923 --> 00:21:34.750\nI'm gonna do a little insert, and\n\n457\n00:21:34.750 --> 00:21:37.870\nI'm going to drop those\nthousand passwords in there.\n\n458\n00:21:37.870 --> 00:21:40.936\nAnd I'm gonna add my account's actual\npassword right here to the end, so\n\n459\n00:21:40.936 --> 00:21:41.929\nI know it will guess it.\n\n460\n00:21:41.929 --> 00:21:44.208\nBut basically what I've just done,\n\n461\n00:21:44.208 --> 00:21:49.657\nis I've created a text file that contains\nall 10,000 the most common passwords.\n\n462\n00:21:49.657 --> 00:21:52.650\nI can start spewing at various\nservers trying to rude account and\n\n463\n00:21:52.650 --> 00:21:55.434\nseeing if I can get in and\nyou'd be surprised what happens.\n\n464\n00:21:55.434 --> 00:21:58.939\nSo now I'll gonna comeback and\nI'll do hydra,\n\n465\n00:21:58.939 --> 00:22:01.928\nI'm going to use a login user of dpezet.\n\n466\n00:22:01.928 --> 00:22:05.658\nI'll do 2 simultaneous tracks,\nI'll say -P and\n\n467\n00:22:05.658 --> 00:22:09.315\nI'm gonna point to that passlist.txt,\nright?\n\n468\n00:22:09.315 --> 00:22:11.210\nThat's the file that I'm gonna use.\n\n469\n00:22:11.210 --> 00:22:14.443\nAnd then lastly, I need a point to\nthe server that I'm gonna be attacking.\n\n470\n00:22:14.443 --> 00:22:20.843\nI'm gonna attack 172.16.0.237,\nand it's ssh that I'm using.\n\n471\n00:22:20.843 --> 00:22:23.954\nAnd actually I'm still in the server,\naren't I?\n\n472\n00:22:23.954 --> 00:22:29.602\nLet me copy that, and\nI will get out of the server.\n\n473\n00:22:29.602 --> 00:22:31.164\nThere we go,\nnow I'm actually out of the server.\n\n474\n00:22:31.164 --> 00:22:32.998\nAnd I'm gonna perform that attack, right?\n\n475\n00:22:32.998 --> 00:22:34.452\nSo let me go ahead and hit that server.\n\n476\n00:22:34.452 --> 00:22:35.756\nSo now hydra fires up.\n\n477\n00:22:35.756 --> 00:22:37.788\n&gt;&gt; Right.\n&gt;&gt; It is sending two simultaneous text.\n\n478\n00:22:37.788 --> 00:22:40.328\nIt's trying to long in,\nit's running down that password list,\n\n479\n00:22:40.328 --> 00:22:41.396\ntrying to log in as dpezet.\n\n480\n00:22:41.396 --> 00:22:45.640\nAnd what's happening, well every\nthree log ins, it gets disconnected.\n\n481\n00:22:45.640 --> 00:22:47.788\nHydra just reconnects, tries again, right?\n\n482\n00:22:47.788 --> 00:22:50.600\nAnd keeps going and going and going.\n\n483\n00:22:50.600 --> 00:22:53.760\nAnd eventually, they get to the end of\nthe list when it hits my actual password.\n\n484\n00:22:53.760 --> 00:22:56.192\nAnd it'll win, it'll pop up right here\non the screen and it'll say, hey,\n\n485\n00:22:56.192 --> 00:22:57.347\nwe found that person's password.\n\n486\n00:22:57.347 --> 00:22:58.935\nAnd now I can go login whenever I want.\n\n487\n00:22:58.935 --> 00:23:01.600\nWell what does the user see?\n\n488\n00:23:01.600 --> 00:23:05.750\nIf I cancel this and\nI connect back into that server,\n\n489\n00:23:05.750 --> 00:23:09.090\nwhen I go to log in,\nI'll see a message, look at this.\n\n490\n00:23:09.090 --> 00:23:12.432\nThere were 20 failed login attempts\nsince the last successful login-\n\n491\n00:23:12.432 --> 00:23:12.945\n&gt;&gt; [LAUGH]\n\n492\n00:23:12.945 --> 00:23:13.584\n&gt;&gt; Right?\n\n493\n00:23:13.584 --> 00:23:18.581\nSo in the amount of time Hydra was\nrunning, it logged in 20 times.\n\n494\n00:23:18.581 --> 00:23:20.209\nThey were all failures, right?\n\n495\n00:23:20.209 --> 00:23:23.227\nBut it could going and going and\nit wouldn't stop, right?\n\n496\n00:23:23.227 --> 00:23:25.850\nNow let's try that again with,\n\n497\n00:23:25.850 --> 00:23:31.601\nactually this run you a seperate tab,\ncuz I'm gonna ban myself.\n\n498\n00:23:31.601 --> 00:23:32.123\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] So\n\n499\n00:23:32.123 --> 00:23:36.978\nlet's try that again and this time, we're\ngonna do it with failed to ban on, right?\n\n500\n00:23:36.978 --> 00:23:39.289\nSo we're gonna test it to make\nsure it's actually working.\n\n501\n00:23:39.289 --> 00:23:44.778\nSo I'm gonna get in and\nI will do a systems ctl start\n\n502\n00:23:44.778 --> 00:23:49.768\nfail2ban which we've configured for ssh.\n\n503\n00:23:49.768 --> 00:23:53.086\nI'm gonna jump back over\nto my other tab here, and\n\n504\n00:23:53.086 --> 00:23:56.171\nI'm gonna fire up that attack again,\nright?\n\n505\n00:23:56.171 --> 00:24:00.990\nSo here goes the attack, it's reaching\nout and it's gonna try and login.\n\n506\n00:24:00.990 --> 00:24:04.448\nAnd what should happen is\nafter a handful of attempts,\n\n507\n00:24:04.448 --> 00:24:07.693\nFail2ban will detect it,\nblock it, and stop it.\n\n508\n00:24:07.693 --> 00:24:10.251\nAnd right there, see,\nthe attack just stopped.\n\n509\n00:24:10.251 --> 00:24:17.832\nAnd I get this message, could not connect\nto ssh://172.16.0.237, connection refused.\n\n510\n00:24:17.832 --> 00:24:19.680\nThe server didn't answer back.\n\n511\n00:24:19.680 --> 00:24:23.960\nAnd if I go look at my server real quick,\nif I do a firewall-cmd--list-all,\n\n512\n00:24:23.960 --> 00:24:29.200\nand I take a look at my firewall rules,\n\n513\n00:24:29.200 --> 00:24:32.070\nI don't really see anything\ndifferent there, right?\n\n514\n00:24:32.070 --> 00:24:33.720\nI don't see like specific IPs.\n\n515\n00:24:33.720 --> 00:24:36.000\nIt's fail2ban getting involved.\n\n516\n00:24:36.000 --> 00:24:40.230\nAnd so if we go back and\nlook at like fail2ban status,\n\n517\n00:24:40.230 --> 00:24:44.720\nif we use the fail2ban -client.\n\n518\n00:24:44.720 --> 00:24:49.230\nAnd we pull up our list which\nis what I was trying to do here.\n\n519\n00:24:49.230 --> 00:24:52.360\nBut if we go and we pull up our status,\nwe pull up the status for our site,\n\n520\n00:24:52.360 --> 00:24:53.140\nwe'll start to see that.\n\n521\n00:24:53.140 --> 00:24:59.470\nSo if I say fail2ban-client status,\nI can see I have one jail, which is ssh.\n\n522\n00:24:59.470 --> 00:25:05.623\nAnd if I add sshd to the end,\nI can see that I've got a filter in place.\n\n523\n00:25:05.623 --> 00:25:08.150\nI've got an action, currently banned 1.\n\n524\n00:25:08.150 --> 00:25:10.300\nAnd here's the banned IP list.\n\n525\n00:25:10.300 --> 00:25:14.470\n172.16.01.1, which in my\nlaptop is now banned.\n\n526\n00:25:14.470 --> 00:25:18.290\nAnd I can't connect on any IP for\nnew connections.\n\n527\n00:25:18.290 --> 00:25:20.010\nThat's why I had to open\nthis other tab first.\n\n528\n00:25:20.010 --> 00:25:21.690\nSo I would have an existing connection.\n\n529\n00:25:21.690 --> 00:25:25.740\nThe firewall rule applies to the ones\nthat come in, in the future, right?\n\n530\n00:25:25.740 --> 00:25:28.280\nSo fail2ban just did its job.\n\n531\n00:25:28.280 --> 00:25:31.790\nIt blocked that access, and\nnow my system is protected.\n\n532\n00:25:31.790 --> 00:25:34.890\nI've effectively killed off the ability\nto do brute force attacks on SSH.\n\n533\n00:25:34.890 --> 00:25:37.060\nAnd my other services are still weak,\nright?\n\n534\n00:25:37.060 --> 00:25:38.880\nI still need to secure the other services.\n\n535\n00:25:38.880 --> 00:25:41.824\nSo I need to look at what fail2ban can\nprotect, and then enable those for\n\n536\n00:25:41.824 --> 00:25:44.642\nthe other services to release\nthe ones that are publicly available.\n\n537\n00:25:44.642 --> 00:25:46.500\nThose are the ones that\npeople could brute force.\n\n538\n00:25:46.500 --> 00:25:49.670\nBut, at this point, it's up, it's going.\n\n539\n00:25:49.670 --> 00:25:51.900\nAnd, yeah, this is pretty much it.\n\n540\n00:25:51.900 --> 00:25:55.040\nIt's not that hard to get configured\nas long as you remember to configure\n\n541\n00:25:55.040 --> 00:25:57.410\nthe jail.local file instead of jail.com.\n\n542\n00:25:57.410 --> 00:26:01.610\n&gt;&gt; But Don, how can we avoid\naccidentally locking ourselves out?\n\n543\n00:26:01.610 --> 00:26:05.000\n&gt;&gt; Okay, so let's say I was really worried\nabout that and in real life I would be.\n\n544\n00:26:05.000 --> 00:26:06.880\n&gt;&gt; I'm worried about it right now.\n\n545\n00:26:06.880 --> 00:26:09.647\n&gt;&gt; You'd probably want\nto white list your IP.\n\n546\n00:26:09.647 --> 00:26:12.993\nOkay, and you can white list\nIPs right in that jail.local.\n\n547\n00:26:12.993 --> 00:26:18.498\nIf I edit that, /etc/fail2ban/jail.local.\n\n548\n00:26:18.498 --> 00:26:23.840\nWhen I go in there, under default,\nyou can add in an entry and\n\n549\n00:26:23.840 --> 00:26:27.840\nyou can just say ignoreip =, and\n\n550\n00:26:27.840 --> 00:26:32.200\nthen punch in whatever the IP is\nthat you're trying to protect.\n\n551\n00:26:32.200 --> 00:26:33.860\nSo if I wanna do 16.0.1,\n\n552\n00:26:33.860 --> 00:26:38.000\nI'd punch that in and now that one's\ngonna be ignored and white listed.\n\n553\n00:26:38.000 --> 00:26:39.470\nSo you can add in multiple IPs.\n\n554\n00:26:39.470 --> 00:26:43.400\nYou might have a network scanner on your\nsystem and you want that network scanner\n\n555\n00:26:43.400 --> 00:26:45.840\nto be able to do these types of checks and\nnot get banned.\n\n556\n00:26:45.840 --> 00:26:47.242\nYou can put that in.\n\n557\n00:26:47.242 --> 00:26:50.300\nSo that there might be trusted IPs and\nthose are ones you protect.\n\n558\n00:26:50.300 --> 00:26:54.290\nSo that's another thing we can\nconfigure right inside of jail.local.\n\n559\n00:26:54.290 --> 00:26:56.180\n&gt;&gt; Awesome episode as usual, Don.\n\n560\n00:26:56.180 --> 00:26:58.870\nAuditing logins with fail2ban.\n\n561\n00:26:58.870 --> 00:27:01.250\nAny last words before we move on?\n\n562\n00:27:01.250 --> 00:27:03.390\n&gt;&gt; Just remember the fail2ban is,\nto my knowledge,\n\n563\n00:27:03.390 --> 00:27:05.420\nnot installed by default\non any major distro.\n\n564\n00:27:05.420 --> 00:27:08.960\nIt's usually on specialized distros,\nthings like FreePBX.\n\n565\n00:27:08.960 --> 00:27:11.180\nBut it's a great service,\nreally simple idea.\n\n566\n00:27:11.180 --> 00:27:13.313\nDoesn't create a lot of\noverhead on your server.\n\n567\n00:27:13.313 --> 00:27:17.352\nSo it's a neat one that you can get\nenabled for any Internet facing service.\n\n568\n00:27:17.352 --> 00:27:20.634\nIt's a great way to just kill out\nbrute force attacks outright.\n\n569\n00:27:20.634 --> 00:27:25.728\nAnd with files out there like that 10,000\nmost common passwords, you'd be surprised\n\n570\n00:27:25.728 --> 00:27:29.790\nhow many times they get a positive hit\non that, and it's not a good thing.\n\n571\n00:27:29.790 --> 00:27:32.440\nSo definitely something\nthat is easy to implement,\n\n572\n00:27:32.440 --> 00:27:34.330\nand improves the security of your server.\n\n573\n00:27:34.330 --> 00:27:36.960\n&gt;&gt; Right on, and I say it often but\nbetter be safe than sorry.\n\n574\n00:27:36.960 --> 00:27:39.880\nAnd that's what this whole series of\nLinux security techniques was about.\n\n575\n00:27:39.880 --> 00:27:43.490\nSo make sure you watch every single\nepisode, you'll be glad you did.\n\n576\n00:27:43.490 --> 00:27:45.060\nAnd thank you for watching ITProTV.\n\n577\n00:27:45.060 --> 00:27:48.070\nRemember, a good IT pro\nis always learning.\n\n578\n00:27:48.070 --> 00:27:48.990\nI'm Zach Memos.\n\n579\n00:27:48.990 --> 00:27:49.770\n&gt;&gt; And I'm Don Pezet.\n\n580\n00:27:49.770 --> 00:27:52.490\n&gt;&gt; And we will see you again very soon.\n\n581\n00:27:52.490 --> 00:27:58.560\n[MUSIC]\n\n582\n00:27:58.560 --> 00:28:04.510\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "231400328"
        }
      ],
      "title": "Monitoring and Auditing Security"
    },
    {
      "episodes": [
        {
          "description": "Don and Zach discuss what we need to know about LUKS, how we go about enabling LUKS during the install, enabling from the CLI, initializing the device, restoring SELinux context, reboot procedures, and maintenance that LUKS requires.",
          "length": "2202",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-1-luks_disk_encryption-081717-PGM.00_36_25_13.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-1-luks_disk_encryption-081717-PGM.00_36_25_13.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-1-luks_disk_encryption-081717-PGM.00_36_25_13.Still001-sm.jpg",
          "title": "LUKS Disk Encryption",
          "transcript": "WEBVTT\n\n1\n00:00:00.330 --> 00:00:06.040\nWelcome to ITProTV,\nI'm your host Don [CROSSTALK]\n\n2\n00:00:06.040 --> 00:00:08.408\n[MUSIC]\n\n3\n00:00:08.408 --> 00:00:12.130\n&gt;&gt; You're watching ITProTV.\n\n4\n00:00:12.130 --> 00:00:12.647\n&gt;&gt; Hello and\n\n5\n00:00:12.647 --> 00:00:16.398\nthank you for choosing ITProTV,\nhelping you learn wherever you go.\n\n6\n00:00:16.398 --> 00:00:21.275\nI'm your host Zach Memos, as we continue\non with Linux security techniques.\n\n7\n00:00:21.275 --> 00:00:23.581\nLUKS Disk Encryption is our episode.\n\n8\n00:00:23.581 --> 00:00:26.479\nAnd bringing us all the information\nwe need is Don Pezet.\n\n9\n00:00:26.479 --> 00:00:28.143\n&gt;&gt; [LAUGH]\n&gt;&gt; There he is.\n\n10\n00:00:28.143 --> 00:00:28.900\n&gt;&gt; (laughter).\n&gt;&gt; Hey, Don.\n\n11\n00:00:28.900 --> 00:00:29.667\nHow are you?\n&gt;&gt; It's me.\n\n12\n00:00:29.667 --> 00:00:35.040\n[LAUGH] All right, in this episode we are\ngoing to be tackling LUKS Disk Encryption.\n\n13\n00:00:35.040 --> 00:00:38.680\n&gt;&gt; Which is, you know, LUKS,\nanother acronym for us to add to the pile.\n\n14\n00:00:38.680 --> 00:00:43.670\nDisk encryption is a increasingly\nimportant need for organizations.\n\n15\n00:00:43.670 --> 00:00:46.740\nAnd from a security perspective,\nit's something we need to address for\n\n16\n00:00:46.740 --> 00:00:48.345\nany kind of mobile devices.\n\n17\n00:00:48.345 --> 00:00:50.525\nDevices that could walk out of a building.\n\n18\n00:00:50.525 --> 00:00:53.675\nEven some physical servers,\nwe have that risk.\n\n19\n00:00:53.675 --> 00:00:57.395\nThere was the Los Alamos Laboratories\na few years back, ten years for now,\n\n20\n00:00:57.395 --> 00:00:59.925\nwhen someone actually stole some\nhard drives out of a server.\n\n21\n00:00:59.925 --> 00:01:02.925\nThey found them a few days later\nhidden behind a photocopier.\n\n22\n00:01:02.925 --> 00:01:05.745\nWell, you know the drives have\nbeen duplicated at that point.\n\n23\n00:01:05.745 --> 00:01:09.520\nThat's the risk that we have when somebody\ncan gain physical access to our systems.\n\n24\n00:01:09.520 --> 00:01:14.258\nAnd doing whole disk encryption is\na great way to protect us from that.\n\n25\n00:01:14.258 --> 00:01:17.580\nAnd so, LUKS's implementation of that\nis built right into a lot of Linux\n\n26\n00:01:17.580 --> 00:01:18.670\ndistros that are out there.\n\n27\n00:01:18.670 --> 00:01:21.450\nAnd in this episode we're gonna\nget a chance to see how it works,\n\n28\n00:01:21.450 --> 00:01:24.867\nhow it does the stuff that it does and how\nwe can implement it to secure our data.\n\n29\n00:01:24.867 --> 00:01:27.390\nSo, that's what we've got right\nhere on our agenda today.\n\n30\n00:01:27.390 --> 00:01:30.810\n&gt;&gt; So Don, what do we need to know about\nLUKS before we get started with it?\n\n31\n00:01:30.810 --> 00:01:34.439\nAlright, first off, what it stands for\nis kind of a handy thing.\n\n32\n00:01:34.439 --> 00:01:39.750\nThe LUKS, L-U-K-S, stands for\nthe Linux Unified Key Setup.\n\n33\n00:01:39.750 --> 00:01:44.095\nActually the full name is\nLinux Unified Key Setup on Disk Format.\n\n34\n00:01:44.095 --> 00:01:44.597\n&gt;&gt; Mmm.\n\n35\n00:01:44.597 --> 00:01:46.858\n&gt;&gt; Which is a little bit\nmore than just L-U-K-S.\n\n36\n00:01:46.858 --> 00:01:48.494\nThe S is Setup on Disk Format.\n\n37\n00:01:48.494 --> 00:01:53.178\n[CROSSTALK] [LAUGH]\n&gt;&gt; Not the most graceful acronym,\n\n38\n00:01:53.178 --> 00:01:55.980\ncertainly, but\nwhat it does is reallyy effective.\n\n39\n00:01:55.980 --> 00:01:56.500\nRight.\n\n40\n00:01:56.500 --> 00:01:58.750\nWhen it comes to whole disk encryption,\n\n41\n00:01:58.750 --> 00:02:01.690\nthere are a lot of commercial\nsolutions that are out there.\n\n42\n00:02:01.690 --> 00:02:04.850\nBut in the open source world,\nthere's not all that many.\n\n43\n00:02:04.850 --> 00:02:06.450\nAnd of the ones that are out there,\n\n44\n00:02:06.450 --> 00:02:10.380\nthere's even fewer that have been\nunder a formal security review.\n\n45\n00:02:10.380 --> 00:02:14.920\nThere's solutions like VeraCrypt, where\nsecurity teams have taken the time to pour\n\n46\n00:02:14.920 --> 00:02:18.900\nthrough the code, and review it to make\nsure that it's safe, LUKS is one of those.\n\n47\n00:02:18.900 --> 00:02:20.030\nIt's been reviewed.\n\n48\n00:02:20.030 --> 00:02:21.410\nIt has been tested.\n\n49\n00:02:21.410 --> 00:02:23.610\nAnd a lot of companies\nhave their eyes on it.\n\n50\n00:02:23.610 --> 00:02:25.590\nRed Hat has dumped a lot of money into it.\n\n51\n00:02:25.590 --> 00:02:27.540\nCanonical has put money into it.\n\n52\n00:02:27.540 --> 00:02:29.060\nAnd so it's got that review.\n\n53\n00:02:29.060 --> 00:02:31.590\nThat means that LUKS is one of the better\nsolutions if you wanna encrypt\n\n54\n00:02:31.590 --> 00:02:32.880\nan entire disk.\n\n55\n00:02:32.880 --> 00:02:35.340\nThe other thing is, it's Linux native.\n\n56\n00:02:35.340 --> 00:02:38.310\nSome of the other solutions that\nare out there focus more on the like\n\n57\n00:02:38.310 --> 00:02:39.840\nMicrosoft Windows side first.\n\n58\n00:02:39.840 --> 00:02:41.770\nAnd Linux is a bit of an afterthought.\n\n59\n00:02:41.770 --> 00:02:45.440\nHere, LUKS is designed specifically for\nus, right?\n\n60\n00:02:45.440 --> 00:02:48.145\nSo that's the first thing that\nwe need to know about LUKS,\n\n61\n00:02:48.145 --> 00:02:51.863\nthe second thing is that it works based\non keys, right, the Linux unified key-\n\n62\n00:02:51.863 --> 00:02:52.508\n&gt;&gt; Mm-hm.\n\n63\n00:02:52.508 --> 00:02:54.480\n&gt;&gt; Is that the lock sends for.\n\n64\n00:02:54.480 --> 00:02:58.610\nSo, that key part is if\nI encrypt the disk, and\n\n65\n00:02:58.610 --> 00:03:03.340\nsomebody wants to read and use that disk,\nthey're going to have to have the key.\n\n66\n00:03:03.340 --> 00:03:04.740\nWell, if I encrypt my system disk,\n\n67\n00:03:04.740 --> 00:03:07.240\nyou can't even power the computer\non without having that key.\n\n68\n00:03:07.240 --> 00:03:09.560\nYou got to have a key present.\n\n69\n00:03:09.560 --> 00:03:12.770\nAnd that key, it could be stored in\nlike a trusted platform module, a TPM,\n\n70\n00:03:12.770 --> 00:03:13.880\non the motherboard.\n\n71\n00:03:13.880 --> 00:03:16.240\nAnd that way, if somebody removed\nthe hard drives, they wouldn't work, but\n\n72\n00:03:16.240 --> 00:03:19.110\nas long as the hard drives were\nin that system, it would work.\n\n73\n00:03:19.110 --> 00:03:21.990\nThat's not really effective with\na laptop where somebody could just steal\n\n74\n00:03:21.990 --> 00:03:22.890\nthe whole system.\n\n75\n00:03:22.890 --> 00:03:23.480\nRight?\n\n76\n00:03:23.480 --> 00:03:26.910\nSo the other way is that we\nhave it as a manual entry key.\n\n77\n00:03:26.910 --> 00:03:30.100\nA key you've got to type\nin to unlock the disk.\n\n78\n00:03:30.100 --> 00:03:34.210\nNow, when we work with a key like that,\nif you have a system that\n\n79\n00:03:34.210 --> 00:03:37.110\nmore than one person uses, that can\ncause a bit of a problem, all right?\n\n80\n00:03:37.110 --> 00:03:39.150\nLet's say, I share my laptop with Zach.\n\n81\n00:03:39.150 --> 00:03:41.960\nAnd so now I have to give him the key,\nso he and I both have the key.\n\n82\n00:03:41.960 --> 00:03:44.315\nAnd then one day, I decide you know what?\n\n83\n00:03:44.315 --> 00:03:46.365\nI've had enough of Zach, I let him go.\n\n84\n00:03:46.365 --> 00:03:47.649\nRight.\n\n85\n00:03:47.649 --> 00:03:48.259\n&gt;&gt; [LAUGH]\n&gt;&gt; We fire him, we get him out of here.\n\n86\n00:03:48.259 --> 00:03:50.110\n&gt;&gt; He does that to me all the time.\n\n87\n00:03:50.110 --> 00:03:51.380\n&gt;&gt; Well now, I got a problem.\n\n88\n00:03:51.380 --> 00:03:53.520\nHe and I share a key, right?\n\n89\n00:03:53.520 --> 00:03:56.320\nSo he's still got a valid key,\ncuz it's the same key I use.\n\n90\n00:03:56.320 --> 00:04:00.960\nAnd I can't disable that key because\nnow I'll lose access to the system.\n\n91\n00:04:00.960 --> 00:04:01.893\nSo what do I have to do?\n\n92\n00:04:01.893 --> 00:04:06.180\nI have to decrypt the whole disk and\nthen re-encrypt it with a new key and\n\n93\n00:04:06.180 --> 00:04:07.580\nthat's a pain.\n\n94\n00:04:07.580 --> 00:04:11.775\nSo, with LUKS, we can actually do multiple\nkeys that you can actually do eight keys,\n\n95\n00:04:11.775 --> 00:04:14.658\nthey're assigned a number and\nit's zero through seven.\n\n96\n00:04:14.658 --> 00:04:17.200\nSo you have eight keys\nthat you can assign out.\n\n97\n00:04:17.200 --> 00:04:20.000\nAnd that might be eight different people.\n\n98\n00:04:20.000 --> 00:04:22.440\nIt might be one person and\nyou keep rotation over time.\n\n99\n00:04:22.440 --> 00:04:25.280\nAnd you change the different keys, so\nyou're not constantly reusing them.\n\n100\n00:04:25.280 --> 00:04:28.670\nBut there is a maximum of eight.\n\n101\n00:04:28.670 --> 00:04:31.765\nAnd that means that if you've got a shared\nsystem with more than eight users,\n\n102\n00:04:31.765 --> 00:04:33.650\nLUKS is not gonna be a good solution for\nyou.\n\n103\n00:04:33.650 --> 00:04:36.110\nYou'll need to look for\nsome other solution that's out there.\n\n104\n00:04:36.110 --> 00:04:41.110\nBut, for a standard laptop or a desktop\ntype solution, LUKS works really well.\n\n105\n00:04:41.110 --> 00:04:43.380\nYou generate this keys and\nyou assign them.\n\n106\n00:04:43.380 --> 00:04:46.120\nTypically that's a laptop\non generating two keys.\n\n107\n00:04:46.120 --> 00:04:49.660\nOne for Administrators and one for\nthe actual user of laptop.\n\n108\n00:04:49.660 --> 00:04:51.676\nThe Administrator key just\nback up somewhere and\n\n109\n00:04:51.676 --> 00:04:53.897\nnow we are able to decrypt\nthat disk if ever we need to.\n\n110\n00:04:53.897 --> 00:04:58.021\nAnd then the user keys is what we actually\ngive to the user so they can go in and\n\n111\n00:04:58.021 --> 00:05:00.769\ndecrypt the disk and use it and\nif I ever fire them or\n\n112\n00:05:00.769 --> 00:05:05.280\nwanna give the laptop to somebody else,\nI can just disable that user key.\n\n113\n00:05:05.280 --> 00:05:06.320\n&gt;&gt; That's what I was gonna ask you.\n\n114\n00:05:06.320 --> 00:05:08.290\n&gt;&gt; And the admin key stays the same,\nright?\n\n115\n00:05:08.290 --> 00:05:12.160\nSo we get that kind of flexibility\nto be able to manage those keys.\n\n116\n00:05:12.160 --> 00:05:14.940\nLUKS can do that, just remember\nthat it is a maximum of eight,\n\n117\n00:05:14.940 --> 00:05:18.140\neight keys is kind of what we cap out at.\n\n118\n00:05:18.140 --> 00:05:19.895\nSome other things to think about.\n\n119\n00:05:19.895 --> 00:05:22.560\nLUKS will encrypt the entire disk.\n\n120\n00:05:22.560 --> 00:05:24.750\nThere's technologies out there where\nyou can encrypt just a folder.\n\n121\n00:05:24.750 --> 00:05:29.770\nIn fact, we did an episode on PGP or\nGPG, Genu Privacy Guard,\n\n122\n00:05:29.770 --> 00:05:33.480\nwhere you can go in and\nencrypt individual data or entire folder.\n\n123\n00:05:33.480 --> 00:05:34.565\nThat works great.\n\n124\n00:05:34.565 --> 00:05:38.680\nLUKS is very similar to that,\nexcept it's doing the entire disk.\n\n125\n00:05:38.680 --> 00:05:42.240\nAnd if we set up LUKS during\nthe installation, right,\n\n126\n00:05:42.240 --> 00:05:43.450\nwhile we are installing our LUKS.\n\n127\n00:05:43.450 --> 00:05:46.550\nIt can actually encrypt everything,\nand it does it with a 512 bit AES\n\n128\n00:05:46.550 --> 00:05:51.290\nkey strength which is really,\nreally strong so that's a good encryption.\n\n129\n00:05:51.290 --> 00:05:53.490\nIf we do it after the fact cuz\nactually a little cork here.\n\n130\n00:05:53.490 --> 00:05:56.040\nIf we do it after the fact,\nwe can encrypt our data and\n\n131\n00:05:56.040 --> 00:05:59.240\nit defaults only a 256 bits, key string.\n\n132\n00:05:59.240 --> 00:06:00.370\nI'm not sure why they do that.\n\n133\n00:06:00.370 --> 00:06:02.510\nWe can overwrite that easy\nenough to go back to 512.\n\n134\n00:06:02.510 --> 00:06:06.586\nBut there are different implementations\nof LUKS where you can increase that\n\n135\n00:06:06.586 --> 00:06:10.480\nkey string and get an even higher level\nof security encryption out of it.\n\n136\n00:06:10.480 --> 00:06:14.540\nSo, it's a great solution,\nit's baked into a lot of distros.\n\n137\n00:06:15.770 --> 00:06:18.822\nRedhat, CentOS, Fedora,\nthey all have it as a default option.\n\n138\n00:06:18.822 --> 00:06:24.520\nUbuntu has it as is the default option to\nbe in, I think has it a default option.\n\n139\n00:06:24.520 --> 00:06:27.170\nIf not, it's easy enough to\ninstall it on a daemon system.\n\n140\n00:06:27.170 --> 00:06:29.980\nSo, it's really supportive across\nall these different platforms and\n\n141\n00:06:29.980 --> 00:06:32.150\nit's very effective at what it does,\nso if you're looking for\n\n142\n00:06:32.150 --> 00:06:36.385\nwhole disk encryption, LUKS is usually\ngonna be your solution in the Linux world.\n\n143\n00:06:36.385 --> 00:06:38.795\n&gt;&gt; It sounds like it should\nbe one of your solutions.\n\n144\n00:06:38.795 --> 00:06:41.509\nSo how do you go about enabling\nLUKS during the install?\n\n145\n00:06:41.509 --> 00:06:43.735\n&gt;&gt; Yup,\nthe install is the easiest way, right?\n\n146\n00:06:43.735 --> 00:06:45.865\nSo there's two ways to implement LUKS.\n\n147\n00:06:45.865 --> 00:06:48.515\nWe can do it during the install when\nwe originally install in the operating\n\n148\n00:06:48.515 --> 00:06:51.715\nsystem, or we can do it after the fact,\nall right?\n\n149\n00:06:51.715 --> 00:06:55.045\nThe problem with after the fact\nis to encrypt the drive,\n\n150\n00:06:55.045 --> 00:06:59.100\nwe've got to back the data up of it,\nencrypt it and put the data back on it.\n\n151\n00:06:59.100 --> 00:07:01.893\nAnd you can't really do that with your\noperating system partitions, right,\n\n152\n00:07:01.893 --> 00:07:03.102\nwhere all your system files are.\n\n153\n00:07:03.102 --> 00:07:04.430\nIt is not an easy way to do that.\n\n154\n00:07:04.430 --> 00:07:06.580\nThere's hard ways to do it,\nbut not really an easy way.\n\n155\n00:07:06.580 --> 00:07:08.200\nDuring the install, your drive is blind.\n\n156\n00:07:08.200 --> 00:07:09.485\nYou're about to format your drive.\n\n157\n00:07:09.485 --> 00:07:11.515\nSo it's very easy for\nthe system to encrypt it.\n\n158\n00:07:11.515 --> 00:07:12.565\nSo, let me show you here,\n\n159\n00:07:12.565 --> 00:07:16.995\nI've got packed away here in one\nof these windows, here we go.\n\n160\n00:07:16.995 --> 00:07:19.453\nRed Hat Enterprise Linux,\ni'm starting the install.\n\n161\n00:07:19.453 --> 00:07:22.540\nSo I'm pretending the install\non a brand new system, and\n\n162\n00:07:22.540 --> 00:07:26.740\nI'll go in here told I wanna do my install\nand as we walk to the installer it starts\n\n163\n00:07:26.740 --> 00:07:29.330\nasking us all sorts of\ndifferent questions, right?\n\n164\n00:07:29.330 --> 00:07:32.010\nQuestions about what\nsoftware I wanna install?\n\n165\n00:07:32.010 --> 00:07:33.800\nOr what my username and password is?\n\n166\n00:07:33.800 --> 00:07:35.300\nAnd all of those other different things,\nright?\n\n167\n00:07:35.300 --> 00:07:38.500\nSo it's gonna be asking me that as\nwe kinda run through this process.\n\n168\n00:07:38.500 --> 00:07:42.620\nAnd when I get to the disk format screen\nyou'll see where those little check marks\n\n169\n00:07:42.620 --> 00:07:45.070\nthat lets me encrypt\nthe contents of the disk.\n\n170\n00:07:45.070 --> 00:07:49.482\nIt's as easy as clicking that check\nmark to get the system running through.\n\n171\n00:07:49.482 --> 00:07:51.369\nI'm gonna get black bars here on the side.\n\n172\n00:07:51.369 --> 00:07:54.537\nIt hasn't loaded the video\ncard drivers for this.\n\n173\n00:07:54.537 --> 00:07:58.321\nAs I move through the install we only have\nto go a couple of screens in to get To\n\n174\n00:07:58.321 --> 00:08:00.494\nwhere we pick where we're gonna install.\n\n175\n00:08:00.494 --> 00:08:02.255\nSo here it's got my installation source.\n\n176\n00:08:02.255 --> 00:08:04.589\nIf I scroll down,\nhere's my installation destination, right?\n\n177\n00:08:04.589 --> 00:08:06.551\nSo what drive I wanna install to.\n\n178\n00:08:06.551 --> 00:08:08.499\nAnd I can pick the hard drive, right?\n\n179\n00:08:08.499 --> 00:08:10.150\nSo I'll pick this 64 gig disk.\n\n180\n00:08:10.150 --> 00:08:11.840\nThat's what I wanna install to.\n\n181\n00:08:11.840 --> 00:08:16.810\nAs I scroll down here, I can see that I\ncan automatically configure partitioning.\n\n182\n00:08:16.810 --> 00:08:18.440\nI can configure it myself.\n\n183\n00:08:18.440 --> 00:08:20.640\nAnd I can make additional space available.\n\n184\n00:08:20.640 --> 00:08:24.940\nThere's not really any option in here\nthat's talking about encryption.\n\n185\n00:08:24.940 --> 00:08:28.000\nBut if you I that I'll configure\npartitioning myself, and\n\n186\n00:08:28.000 --> 00:08:33.000\nI hit Done, that's gonna take me to the\nscreen where I can configure partitioning.\n\n187\n00:08:33.000 --> 00:08:37.600\nAnd in here, we can tell it how we wanna\nset this up, cuz when you use LVM or\n\n188\n00:08:37.600 --> 00:08:39.620\nwhatever, we can create it automatically.\n\n189\n00:08:39.620 --> 00:08:44.290\nAnd when we look at the options in here,\nhere's my boot disk, my root,\n\n190\n00:08:44.290 --> 00:08:46.280\nmy swap, and my home.\n\n191\n00:08:46.280 --> 00:08:47.280\nAnd with each one,\n\n192\n00:08:47.280 --> 00:08:51.480\nthere's a little check mark right\nhere where I can encrypt them, okay?\n\n193\n00:08:51.480 --> 00:08:54.603\nYou can encrypt,\nI call it a whole disk encryption, right?\n\n194\n00:08:54.603 --> 00:08:55.260\nI don't call it that.\n\n195\n00:08:55.260 --> 00:08:57.440\nThe industry calls it that,\ncuz it encrypts an entire disk.\n\n196\n00:08:57.440 --> 00:09:01.540\nBut really what it is,\nis a whole partition encryption, right?\n\n197\n00:09:01.540 --> 00:09:04.690\nSo if I have one disk that has one\npartition on it and I encrypt it,\n\n198\n00:09:04.690 --> 00:09:06.800\nthen I technically\nencrypted the whole disk.\n\n199\n00:09:06.800 --> 00:09:10.300\nBut I've got one disk that's being\ndivided into partitions here.\n\n200\n00:09:10.300 --> 00:09:13.760\nAnd so I can choose to\nencrypt different partitions.\n\n201\n00:09:13.760 --> 00:09:18.020\nI can take my home folder where all my\nuser's data is, that's one partition.\n\n202\n00:09:18.020 --> 00:09:20.845\nAnd so I can chose to encrypt it.\n\n203\n00:09:20.845 --> 00:09:24.510\nAnd if I update that,\nnow it knows that I wanna encrypt that.\n\n204\n00:09:24.510 --> 00:09:28.340\nI can take my root folder and I can\nchoose to encrypt that as well, right?\n\n205\n00:09:28.340 --> 00:09:31.440\nI wanna get that one, that's pretty much\ngonna be the rest of the file system.\n\n206\n00:09:31.440 --> 00:09:35.515\nThe swap, there's really not a whole lot\nof point in encrypting that one, and\n\n207\n00:09:35.515 --> 00:09:37.137\nI don't think it even lets us.\n\n208\n00:09:37.137 --> 00:09:37.810\nYou know what?\n\n209\n00:09:37.810 --> 00:09:40.589\nIt's got the check mark, but\nI'm pretty sure that doesn't work,\n\n210\n00:09:40.589 --> 00:09:43.414\nbecause we need to be able to swap to\nthe disk for our memory usage, and\n\n211\n00:09:43.414 --> 00:09:46.136\nif we're encrypting that it's\ngonna really hurt performance.\n\n212\n00:09:46.136 --> 00:09:49.422\nI didn't think you could do it but\nthat check mark is there,\n\n213\n00:09:49.422 --> 00:09:52.998\nI'm kind of curious now,\nI just wanna, it's letting me do it.\n\n214\n00:09:52.998 --> 00:09:54.297\n[LAUGH] I don't think that's gonna work.\n\n215\n00:09:54.297 --> 00:09:55.626\nSo I'm gonna turn that off.\n\n216\n00:09:55.626 --> 00:09:58.394\nBut we really want to encrypt where\nour data is being stored, right?\n\n217\n00:09:58.394 --> 00:10:00.612\nSo the root folder in this case,\nthe home folder.\n\n218\n00:10:00.612 --> 00:10:04.510\nNow /boot is listed and it even has\nthe option here to encrypt that one.\n\n219\n00:10:04.510 --> 00:10:05.581\nI know this one doesn't work.\n\n220\n00:10:05.581 --> 00:10:10.771\nWhen our system boots, if you got UFEI\nbios, it's looking for the UEFI boot file.\n\n221\n00:10:10.771 --> 00:10:13.810\nSo that the EFI boot\nfile's inside of /boot.\n\n222\n00:10:13.810 --> 00:10:16.020\nAnd that needs to be unencrypted.\n\n223\n00:10:16.020 --> 00:10:17.670\nIt needs to be where we can read it,\n\n224\n00:10:17.670 --> 00:10:21.230\nwhere we can see that data and\nread from it to get the boot files.\n\n225\n00:10:21.230 --> 00:10:24.907\nAnd the boot files will have the\ninformation to then prompt us for the key\n\n226\n00:10:24.907 --> 00:10:29.025\nto let us decrypt the home directory and\nthe root directory and get in that data.\n\n227\n00:10:29.025 --> 00:10:33.311\nAll right, if it couldn't load the files\nto ask me for a key, then it wouldn't even\n\n228\n00:10:33.311 --> 00:10:37.435\nbe able to decrypt a boot folder and I\nwouldn't even be able to boot this system.\n\n229\n00:10:37.435 --> 00:10:39.580\nSo that's one that we\ndon't want to decrypt.\n\n230\n00:10:39.580 --> 00:10:42.740\nNow, notice how that partition is\nreally small, it's one gig in size.\n\n231\n00:10:42.740 --> 00:10:43.830\nIt just has boot files and\n\n232\n00:10:43.830 --> 00:10:47.690\nit has a couple of our basic items that\nare in there to get the system running.\n\n233\n00:10:47.690 --> 00:10:52.163\nBut all our critical data is in\nthe root folder or /home and\n\n234\n00:10:52.163 --> 00:10:54.826\nall of that will now be encrypted.\n\n235\n00:10:54.826 --> 00:10:58.979\nAnd so, by checking those marks,\nI can tell it what I want and\n\n236\n00:10:58.979 --> 00:11:02.760\nwhen I hit done,\nit's gonna ask me to pick a key.\n\n237\n00:11:02.760 --> 00:11:04.860\nThis is the first of my eight keys.\n\n238\n00:11:04.860 --> 00:11:06.150\nRemember, I get eight keys.\n\n239\n00:11:06.150 --> 00:11:07.440\nAnd so, this is the first one.\n\n240\n00:11:07.440 --> 00:11:09.560\nAnd if I'm the only one\nwho uses this machine,\n\n241\n00:11:09.560 --> 00:11:10.720\nthen one key might be enough for me.\n\n242\n00:11:10.720 --> 00:11:12.405\nThat might be all I need, right?\n\n243\n00:11:12.405 --> 00:11:15.555\nBut if I have more than one\nperson that shares this machine,\n\n244\n00:11:15.555 --> 00:11:18.090\nthen I may need to come in and\ncreate more.\n\n245\n00:11:18.090 --> 00:11:20.570\nI'm gonna punch in the password and\nI'm using a dictionary word.\n\n246\n00:11:20.570 --> 00:11:22.110\nSo it's complaining that it's weak.\n\n247\n00:11:22.110 --> 00:11:25.960\nBut, you'd wanna pick a secure\npassword that you can remember.\n\n248\n00:11:25.960 --> 00:11:28.890\nYou definitely wanna remember it\nbecause if you forget your key,\n\n249\n00:11:28.890 --> 00:11:31.203\nguess what the recovery is,\nthere isn't one, right?\n\n250\n00:11:31.203 --> 00:11:33.400\n&gt;&gt; [LAUGH]\n&gt;&gt; If there was a recovery mechanism,\n\n251\n00:11:33.400 --> 00:11:35.450\nsomebody could just bypass the encryption.\n\n252\n00:11:35.450 --> 00:11:37.030\nYou need a key.\n\n253\n00:11:37.030 --> 00:11:40.060\nIf you're worried about forgetting it,\nyou wanna create additional keys so\n\n254\n00:11:40.060 --> 00:11:41.830\nyou can store one somewhere safe.\n\n255\n00:11:41.830 --> 00:11:45.490\nBut if you forget this key, your disk\nis encrypted, you got to lock, and\n\n256\n00:11:45.490 --> 00:11:49.136\nyou don't have a good way to get-\n&gt;&gt; No, actually I was gonna ask you that\n\n257\n00:11:49.136 --> 00:11:53.377\nDon, where would you recommend that we\nstore the keys, the actual eight keys,\n\n258\n00:11:53.377 --> 00:11:54.482\nthat information.\n\n259\n00:11:54.482 --> 00:11:57.004\n&gt;&gt; All right, so\nif you're backing this information up,\n\n260\n00:11:57.004 --> 00:12:00.181\nin theory you should just have it\nmemorized, and that's it, right?\n\n261\n00:12:00.181 --> 00:12:04.051\nBut you can write it on a piece\nof paper and lock it in a safe.\n\n262\n00:12:04.051 --> 00:12:05.530\nPut it in a safe deposit box.\n\n263\n00:12:05.530 --> 00:12:08.490\nStore it in the company vault, wherever\nit is that you store that information.\n\n264\n00:12:08.490 --> 00:12:11.326\nIt's critical secret data,\nbecause if somebody has that,\n\n265\n00:12:11.326 --> 00:12:13.283\nthey can now decrypt your entire device.\n\n266\n00:12:13.283 --> 00:12:14.770\n&gt;&gt; Well,\nyou shouldn't do it electronically,\n\n267\n00:12:14.770 --> 00:12:16.342\nyou should just write it down and\nput it in a safe.\n\n268\n00:12:16.342 --> 00:12:17.850\n&gt;&gt; Yeah, I mean maybe.\n\n269\n00:12:17.850 --> 00:12:21.550\nYou could put it in a text file and burn\nthat to a CD and stick that somewhere so\n\n270\n00:12:21.550 --> 00:12:22.660\nnow it is electronic.\n\n271\n00:12:22.660 --> 00:12:24.365\nBut where ever you write that file,\n\n272\n00:12:24.365 --> 00:12:28.175\nyou are technically creating a temporary\nfile and that's stored on a disk, and\n\n273\n00:12:28.175 --> 00:12:31.545\nif that disk is not encrypted you're\npotentially putting yourself at risk.\n\n274\n00:12:31.545 --> 00:12:34.885\nIt depends on your level of paranoia,\nhow crazy you wanna go on it.\n\n275\n00:12:34.885 --> 00:12:37.165\n&gt;&gt; Paranoia will destroy you.\n\n276\n00:12:37.165 --> 00:12:38.980\n[LAUGH] It certainly can, but\nit can also protect your data.\n\n277\n00:12:38.980 --> 00:12:40.035\n&gt;&gt; That's right-\n&gt;&gt; [LAUGH]\n\n278\n00:12:40.035 --> 00:12:40.790\n&gt;&gt; I was gonna say that.\n\n279\n00:12:40.790 --> 00:12:43.570\n&gt;&gt; So there's two sides apparently-\n&gt;&gt; But don't be too safe.\n\n280\n00:12:43.570 --> 00:12:45.410\n&gt;&gt; What was it Kurt Cobain said, right.\n\n281\n00:12:45.410 --> 00:12:47.624\nJust because your paranoid,\ndoesn't mean they're not after you?\n\n282\n00:12:47.624 --> 00:12:48.331\n&gt;&gt; That's right.\n\n283\n00:12:48.331 --> 00:12:49.690\n[LAUGH]\n&gt;&gt; [LAUGH] So\n\n284\n00:12:49.690 --> 00:12:51.360\nwe can certainly go that angle.\n\n285\n00:12:51.360 --> 00:12:53.998\nBut once that's done, I can go ahead and\nbegin the installation.\n\n286\n00:12:53.998 --> 00:12:58.288\nAnd it's gonna go through and\ninstall, Red Hat in this case,\n\n287\n00:12:58.288 --> 00:13:02.530\nand it's going to encrypt\nthe disk during the install.\n\n288\n00:13:02.530 --> 00:13:05.690\nAnd when that's done, I'm done, right?\n\n289\n00:13:05.690 --> 00:13:08.640\nIt's encrypted,\nI don't have to worry about it.\n\n290\n00:13:08.640 --> 00:13:13.460\nIt was that easy, Linux is not hard\nto turn on at boot time, okay?\n\n291\n00:13:13.460 --> 00:13:17.850\nDuring the installation time on an new\nmachine, if you have an existing machine,\n\n292\n00:13:17.850 --> 00:13:19.040\nit's far more challenging.\n\n293\n00:13:19.040 --> 00:13:22.430\nBut in a new machine,\nit's really just a check mark and\n\n294\n00:13:22.430 --> 00:13:23.920\na pass phrase, and you're done.\n\n295\n00:13:23.920 --> 00:13:28.230\n&gt;&gt; Right, and I was gonna say, is it just\nas easy if you do it after an install?\n\n296\n00:13:29.362 --> 00:13:31.500\n&gt;&gt; All right, so after an install,\nit's harder, right?\n\n297\n00:13:31.500 --> 00:13:32.870\nAnd let me show you an example here.\n\n298\n00:13:32.870 --> 00:13:33.900\nSo I've got another machine.\n\n299\n00:13:33.900 --> 00:13:35.200\nThis one's actually CentOS.\n\n300\n00:13:35.200 --> 00:13:36.699\nSo I'm on an early, so I think it is.\n\n301\n00:13:36.699 --> 00:13:37.633\nLet's find out.\n\n302\n00:13:37.633 --> 00:13:41.271\nSo [LAUGH] yeah, CentOS 7 machine.\n\n303\n00:13:41.271 --> 00:13:44.941\nAnd on this machine,\nI didn't do Lux encryption.\n\n304\n00:13:44.941 --> 00:13:48.272\nI just did a standard install,\nlet it churn along.\n\n305\n00:13:48.272 --> 00:13:51.308\nAnd so it set up the file\nsystems the default way, right?\n\n306\n00:13:51.308 --> 00:13:56.289\nAnd if I were to do a mount and take\na look at it here, I can look at what's\n\n307\n00:13:56.289 --> 00:14:01.538\nbeen mounted, like /dev/sda1/boot\nis mounted and its XFS, right?\n\n308\n00:14:01.538 --> 00:14:05.367\nSo just the regular file system,\nwhere /dev/sdb1,\n\n309\n00:14:05.367 --> 00:14:08.720\nwhich is where I'm storing\nmy website is XFS.\n\n310\n00:14:08.720 --> 00:14:10.440\nRight, so they're not encrypted.\n\n311\n00:14:10.440 --> 00:14:13.250\nThey're not showing that they have\nLux encryption applied to them.\n\n312\n00:14:13.250 --> 00:14:14.760\nYou can verify that a few different ways,\n\n313\n00:14:14.760 --> 00:14:17.980\nlike you can use the block\nID command if you are.\n\n314\n00:14:17.980 --> 00:14:23.274\nActually you can just run block ID,\nB-L-K I-D and it'll list your disks,\n\n315\n00:14:23.274 --> 00:14:27.192\nand see the types on all of\nthese says XFS or SWAP, right?\n\n316\n00:14:27.192 --> 00:14:29.376\nIf they're encrypted,\nthey would actually say,\n\n317\n00:14:29.376 --> 00:14:32.184\nthat it was actually encrypted by there,\ninstead of saying XFS.\n\n318\n00:14:32.184 --> 00:14:36.070\nSo in my case, it's all unencrypted,\nand that's how I set it up.\n\n319\n00:14:36.070 --> 00:14:39.242\nNow, if I wanna encrypted,\nremember what I said a minute ago.\n\n320\n00:14:39.242 --> 00:14:42.360\nI gotta take the data off of the disk,\nand encrypt it.\n\n321\n00:14:42.360 --> 00:14:46.485\nBecause encrypting it, you're actually\nformat it with a different file system.\n\n322\n00:14:46.485 --> 00:14:49.225\nAnd I can't do that while\nthere's data on it.\n\n323\n00:14:49.225 --> 00:14:50.530\nSo I gotta get the data off.\n\n324\n00:14:50.530 --> 00:14:57.160\nIf it's my boot folder or my root folder,\nI can't get the data off of that.\n\n325\n00:14:57.160 --> 00:14:59.990\nNot without taking the system off line,\nbooting off a live CD, or\n\n326\n00:14:59.990 --> 00:15:01.050\nsomething like that.\n\n327\n00:15:01.050 --> 00:15:03.230\nBacking up the data then,\ngoing through that process,\n\n328\n00:15:03.230 --> 00:15:07.100\nit's often easier to just reinstall,\nand that will take care of that.\n\n329\n00:15:07.100 --> 00:15:09.910\nBut let's say that I wasn't\nworried about the whole system.\n\n330\n00:15:09.910 --> 00:15:13.064\nMaybe I just wanted to\nget this disk right here.\n\n331\n00:15:13.064 --> 00:15:17.355\nI have my website, and my website is\nstored in a folder called /website.\n\n332\n00:15:17.355 --> 00:15:19.560\nAnd that folder is just a mount point.\n\n333\n00:15:19.560 --> 00:15:22.460\nAnd it's a mount point for /dev/sdb1.\n\n334\n00:15:22.460 --> 00:15:26.022\nSo I wanna back up /dev/sdb1.\n\n335\n00:15:26.022 --> 00:15:29.740\nAnd then I wanna encrypt it, so\nthat data is stored safely on the disk.\n\n336\n00:15:29.740 --> 00:15:33.550\nSo the first thing I'll do is maybe I'll\njust make a directory here in my home\n\n337\n00:15:33.550 --> 00:15:35.510\nfolder called backup.\n\n338\n00:15:35.510 --> 00:15:41.276\nAnd I will just back up everything\ninside of the website folder into that,\n\n339\n00:15:41.276 --> 00:15:44.346\nwhich I think I just have an index file.\n\n340\n00:15:44.346 --> 00:15:46.860\nLet's see here, pretty sure.\n\n341\n00:15:46.860 --> 00:15:47.706\nYeah, you just an index file.\n\n342\n00:15:47.706 --> 00:15:49.410\nSo nothing really exciting there,\nright, but\n\n343\n00:15:49.410 --> 00:15:51.763\nwhatever content you've got we're\ngonna back it up somewhere.\n\n344\n00:15:51.763 --> 00:15:55.017\nOkay, we need to back it up so\nthat we can erase the drive.\n\n345\n00:15:55.017 --> 00:15:57.459\nAnd we erase it we'll be able\nto encrypt that information.\n\n346\n00:15:57.459 --> 00:15:59.987\nSo this is where things get a lot harder.\n\n347\n00:15:59.987 --> 00:16:03.763\nDuring the default install, it's just\na little check mark that you tick, right?\n\n348\n00:16:03.763 --> 00:16:07.469\nBut to do it after the fact,\nI've got to back up the data, and\n\n349\n00:16:07.469 --> 00:16:09.737\nthen I've gotta unmount that disc.\n\n350\n00:16:09.737 --> 00:16:12.050\nActually here, let me do a sudo-s.\n\n351\n00:16:12.050 --> 00:16:14.143\nA lot of these commands you need\nto be an administrator for, and so\n\n352\n00:16:14.143 --> 00:16:15.182\nI don't want to sudo everyone.\n\n353\n00:16:15.182 --> 00:16:17.519\nI'll just do a sudo-s to\nget that elevated shell.\n\n354\n00:16:17.519 --> 00:16:22.009\n&gt;&gt; Good.\n&gt;&gt; And I will unmount /website, all right,\n\n355\n00:16:22.009 --> 00:16:24.953\nso I'm gonna take it offline.\n\n356\n00:16:24.953 --> 00:16:30.520\nAnd now that it's offline I can get ready\nto drop an encrypted petition on it.\n\n357\n00:16:30.520 --> 00:16:35.810\nNow I all ready had my data on there and\nanybody who\n\n358\n00:16:37.600 --> 00:16:41.050\nis trained in doing\nmagnetic data forensics,\n\n359\n00:16:41.050 --> 00:16:45.000\nthey can actually recover data from\na drive even after it's been formatted.\n\n360\n00:16:45.000 --> 00:16:49.310\nSo if I'm really worried about the\nsensitivity of this data, it's a good idea\n\n361\n00:16:49.310 --> 00:16:53.590\nto prepare the disk before I drop\nan encrypted file system on it.\n\n362\n00:16:53.590 --> 00:16:56.240\nSo if you want,\nthis is kind of an optional step, but\n\n363\n00:16:56.240 --> 00:16:58.295\nif you want you can use the shred command.\n\n364\n00:16:58.295 --> 00:17:03.125\nAnd what shred does is it let's you write\nzeros or ones to the disk to kind of\n\n365\n00:17:03.125 --> 00:17:06.595\noverwrite the data that's there and\nthat will help defeat magnetic forensics.\n\n366\n00:17:06.595 --> 00:17:09.165\nSo it can help that to predict that area.\n\n367\n00:17:09.165 --> 00:17:11.820\nJust kind of depends on\nthe sensitivity level of your data.\n\n368\n00:17:11.820 --> 00:17:15.230\nBut if I wanted to shred it for\nexample, I'll do a verbose.\n\n369\n00:17:15.230 --> 00:17:17.900\nAnd you can tell it --iterations and\n\n370\n00:17:17.900 --> 00:17:21.245\nhow many times you want\nto write over that disk.\n\n371\n00:17:21.245 --> 00:17:24.902\nI'll just do it one time,\nright, I'll say iterations 1, or\n\n372\n00:17:24.902 --> 00:17:27.310\niterations=1 is what we want.\n\n373\n00:17:27.310 --> 00:17:29.952\nAnd then point it /dos/sdm1.\n\n374\n00:17:29.952 --> 00:17:34.391\nAnd when you run that, see how it's doing\na random pass and it's writing data,\n\n375\n00:17:34.391 --> 00:17:37.440\nit's that disk and\nbasically helping to overwrite and\n\n376\n00:17:37.440 --> 00:17:39.405\nensure that data is taken care of.\n\n377\n00:17:39.405 --> 00:17:42.880\nNow, this process can take a while,\nso I'm gonna stop it.\n\n378\n00:17:42.880 --> 00:17:44.200\nBut you would just let that run.\n\n379\n00:17:44.200 --> 00:17:47.035\nIf you do two or three iteration,\nit can take hours to complete.\n\n380\n00:17:47.035 --> 00:17:49.544\nThe bigger your data is,\nthe longer it takes but\n\n381\n00:17:49.544 --> 00:17:52.410\nthis ensures that the driver\nis truly scrambled.\n\n382\n00:17:52.410 --> 00:17:56.210\nThat there's just not any\nrecoverable data on it at all.\n\n383\n00:17:56.210 --> 00:17:58.324\nAnd once we're saved with that,\n\n384\n00:17:58.324 --> 00:18:01.731\nnow we're ready to drop\nan encrypt file system on it.\n\n385\n00:18:01.731 --> 00:18:05.070\nAnd to do it we're gonna use\na utility called cryptsetup.\n\n386\n00:18:06.120 --> 00:18:09.769\ncryptsetup is a command line utility\nthat helps with the whole process.\n\n387\n00:18:09.769 --> 00:18:12.237\nIt's almost like a wizard in a way.\n\n388\n00:18:12.237 --> 00:18:15.297\nIt does all the steps that we need\nto get this thing encrypted and\n\n389\n00:18:15.297 --> 00:18:16.643\nget Lux configured for it.\n\n390\n00:18:16.643 --> 00:18:19.814\nSo I'm going to say, cryptsetup and\njust because we're on the show,\n\n391\n00:18:19.814 --> 00:18:22.792\nI'm going to do --verbose just\nto make sure we get full output.\n\n392\n00:18:22.792 --> 00:18:26.824\nYou don't need to do that if you're\nnot going to get any errors.\n\n393\n00:18:26.824 --> 00:18:28.960\nIf you're worried about troubleshooting,\nit really helps.\n\n394\n00:18:28.960 --> 00:18:34.875\nSo I'll do that,\nI'm gonna do --verify- passphrase.\n\n395\n00:18:34.875 --> 00:18:40.390\nNow what this is doing is I'm telling\nthe system to prompt me for a key, right?\n\n396\n00:18:40.390 --> 00:18:44.400\nI could provide the key right here in the\ncommand line, but again depending on our\n\n397\n00:18:44.400 --> 00:18:47.500\nlevel of paranoia, you probably don't\nwanna type the key on the screen.\n\n398\n00:18:47.500 --> 00:18:49.160\nAnd so this is telling to prompt and\n\n399\n00:18:49.160 --> 00:18:53.850\nthat way I type it in a little input\nbox that won't display on screen.\n\n400\n00:18:53.850 --> 00:18:58.620\nSo I'm doing --verify passphrase, and\nthen I need to tell it what I'm doing.\n\n401\n00:18:58.620 --> 00:19:04.431\nI'm doing luksformat /dev/sdb1, all right.\n\n402\n00:19:04.431 --> 00:19:10.630\nI'm applying an encrypted\nfile system onto /dev/sdb1.\n\n403\n00:19:10.630 --> 00:19:14.860\nAnd when I run that, it's warning me,\nit's going to overwrite that disc.\n\n404\n00:19:14.860 --> 00:19:15.965\nI'm gonna lose the data.\n\n405\n00:19:15.965 --> 00:19:20.019\nThis is not a conversion,\nthis is actually erasing the disc, and\n\n406\n00:19:20.019 --> 00:19:22.580\nI need to say yes to do that, okay?\n\n407\n00:19:22.580 --> 00:19:26.300\nAnd because I did verify passphrase, now\nit's asking me for a passphrase to use for\n\n408\n00:19:26.300 --> 00:19:28.850\nencrypting this disk, and\nso I'll punch one in.\n\n409\n00:19:28.850 --> 00:19:33.120\nAnd I will type it in again and\nthere we go.\n\n410\n00:19:33.120 --> 00:19:34.844\nFailed dictionary check.\n\n411\n00:19:34.844 --> 00:19:37.640\nWell, I used a dictionary word so\nit's not happy about that.\n\n412\n00:19:37.640 --> 00:19:39.395\nObviously, if we're\nworried about security,\n\n413\n00:19:39.395 --> 00:19:41.595\nwe should be using a strong password so\nI'll have to redo it.\n\n414\n00:19:41.595 --> 00:19:46.047\nIt does give me a chance to mention one\nother option I forgot to mention which is,\n\n415\n00:19:46.047 --> 00:19:50.299\nat the beginning of the show, I said if\nwe turn on Lux in the install It'll use\n\n416\n00:19:50.299 --> 00:19:55.149\na 512-bit key size, but if we turn it on\nafter the fact, like I'm doing right now,\n\n417\n00:19:55.149 --> 00:19:57.158\nit'll use a 256-bit key size.\n\n418\n00:19:57.158 --> 00:20:00.420\nIt defaults to a smaller key size,\nfor some reason.\n\n419\n00:20:00.420 --> 00:20:04.730\nI actually don't know what the reasoning\nis there, but it defaults to a weaker key.\n\n420\n00:20:04.730 --> 00:20:07.520\nSo if I want to correct that,\nnow is actually the time to do it.\n\n421\n00:20:07.520 --> 00:20:09.100\nSo I'm gonna clear this\narea out here real quick.\n\n422\n00:20:09.100 --> 00:20:11.140\nLet's go back to this command.\n\n423\n00:20:11.140 --> 00:20:12.730\nSo this is the command that I just ran,\nright?\n\n424\n00:20:12.730 --> 00:20:16.220\ncryptsetup --verbose --verify.passphrase.\n\n425\n00:20:16.220 --> 00:20:17.524\nI'm gonna add one more entry to this.\n\n426\n00:20:17.524 --> 00:20:25.085\nI'm gonna say --key-sizea and\nI'll specify 512.\n\n427\n00:20:25.085 --> 00:20:28.430\nAnd then I'll do the luksFormat /dev/sdb1.\n\n428\n00:20:28.430 --> 00:20:32.676\nSo I'm just telling it, hey I wanna use a\nstronger key than what the default is, and\n\n429\n00:20:32.676 --> 00:20:36.512\nthis is gonna make it the same as what\nit would be during an install of the OS.\n\n430\n00:20:36.512 --> 00:20:38.329\n&gt;&gt; And\nthat's all you have to do to make it 512?\n\n431\n00:20:38.329 --> 00:20:40.196\n&gt;&gt; That's it, you just have to tell it.\n\n432\n00:20:40.196 --> 00:20:45.180\nIf you don't know, then it defaults\nto 56 and it's hard to fix later on.\n\n433\n00:20:45.180 --> 00:20:45.984\n&gt;&gt; Fantastic.\n\n434\n00:20:45.984 --> 00:20:47.130\n&gt;&gt; So I'm going to punch that in.\n\n435\n00:20:47.130 --> 00:20:50.050\nI'll say yes to this again and\nthis time I'll pick a stronger password.\n\n436\n00:20:50.050 --> 00:20:50.845\nI promise.\n\n437\n00:20:50.845 --> 00:20:52.560\nSo let me put that in.\n\n438\n00:20:52.560 --> 00:20:56.545\nI'll use a non-dictionary word.\n\n439\n00:20:56.545 --> 00:20:57.780\nIt's gonna pause for a second.\n\n440\n00:20:57.780 --> 00:21:00.940\nWhat it's doing while it pauses there\nis actually formatting the disk.\n\n441\n00:21:00.940 --> 00:21:02.980\nSo the size of your disk\nis gonna impact this.\n\n442\n00:21:02.980 --> 00:21:06.020\nThe larger the disk, the longer it takes,\nbut it's formatting the disk and\n\n443\n00:21:06.020 --> 00:21:09.150\nlaying the encrypted file system on there.\n\n444\n00:21:09.150 --> 00:21:10.850\nNow how do I know it did it?\n\n445\n00:21:10.850 --> 00:21:13.620\nWell before,\nremember when I ran blkid, right?\n\n446\n00:21:13.620 --> 00:21:15.140\nThe block ID command?\n\n447\n00:21:15.140 --> 00:21:17.010\nThat showed me all my block devices.\n\n448\n00:21:17.010 --> 00:21:20.060\nAnd their partitions were xfs, or swab.\n\n449\n00:21:20.060 --> 00:21:25.310\nNow when I run it,\nI can see my partitions are xfs, or swap,\n\n450\n00:21:25.310 --> 00:21:30.190\nor crypto LUKS,\nright that last one is crypto LUX.\n\n451\n00:21:30.190 --> 00:21:32.290\nAnd that's telling me that\nit's got the crypt fs, so\n\n452\n00:21:32.290 --> 00:21:36.180\nthe encrypted file system on\nthat particular partition.\n\n453\n00:21:36.180 --> 00:21:40.550\nI can no longer mount this partition\nlike a normal disk, right?\n\n454\n00:21:40.550 --> 00:21:41.770\nBecause it's encrypted.\n\n455\n00:21:41.770 --> 00:21:45.370\nIf I ever want to mount it,\nI've got to unlock it first.\n\n456\n00:21:45.370 --> 00:21:50.115\nAnd when we unlock it, what we do\nis we take this physical item here,\n\n457\n00:21:50.115 --> 00:21:53.810\n/deb/db1, we unlock it, and\n\n458\n00:21:53.810 --> 00:21:58.800\nwe create a virtual item that represents\nthe unlocked version of this disk.\n\n459\n00:21:58.800 --> 00:22:01.960\nSo If I wanted to mount this guy up here,\n/dev/sda3,\n\n460\n00:22:01.960 --> 00:22:05.450\nI just mount that directly to a folder,\nand that's it.\n\n461\n00:22:05.450 --> 00:22:09.850\nBut for anything that's encrypted,\nyou have to create a second virtual device\n\n462\n00:22:09.850 --> 00:22:12.200\nthat represents the unlocked\nversion of it, right?\n\n463\n00:22:12.200 --> 00:22:14.222\nThat's part of unlocking the disk.\n\n464\n00:22:14.222 --> 00:22:16.420\nYou mount the unlocked part.\n\n465\n00:22:16.420 --> 00:22:19.190\nYou actually work with the unlocked\npart just like any other normal disk.\n\n466\n00:22:19.190 --> 00:22:21.210\nThe trick is just getting\nto the unlocked part.\n\n467\n00:22:21.210 --> 00:22:22.740\nLet me unlock this one.\n\n468\n00:22:22.740 --> 00:22:26.585\nTo unlock it,\nwe use cryptsetup just like we did before.\n\n469\n00:22:26.585 --> 00:22:31.560\nAnd up here, I was doing cryptsetup\nwith the luksformat command.\n\n470\n00:22:31.560 --> 00:22:36.170\nDown here's I'm gonna run cryptsetup\nwith the luksopen command.\n\n471\n00:22:36.170 --> 00:22:38.680\nI'm opening up an encrypted container.\n\n472\n00:22:38.680 --> 00:22:45.960\nSo I'll say cryptsetup luksopen/dev/sdb1,\nright, that's the partition.\n\n473\n00:22:45.960 --> 00:22:48.590\nAnd then I need to create a name.\n\n474\n00:22:48.590 --> 00:22:50.750\nAnd this name is representing\nthat virtual device.\n\n475\n00:22:50.750 --> 00:22:53.782\nThe virtual device that will\nrepresent the unlocked disk.\n\n476\n00:22:53.782 --> 00:22:56.961\nNow, mine's my website folder, so\nI'm just gonna call it website.\n\n477\n00:22:56.961 --> 00:22:58.090\nYou can call it whatever you want.\n\n478\n00:22:58.090 --> 00:22:59.060\nIt's just a name.\n\n479\n00:22:59.060 --> 00:23:00.777\nEnd users will never see this name, right?\n\n480\n00:23:00.777 --> 00:23:01.754\nThis doesn't show up.\n\n481\n00:23:01.754 --> 00:23:03.690\nIt just shows up when we're mounting it.\n\n482\n00:23:03.690 --> 00:23:07.030\nThat's when you see this name,\nso I'm gonna unlock it.\n\n483\n00:23:07.030 --> 00:23:08.920\nAnd it's gonna ask me for\nmy passphrase, right?\n\n484\n00:23:08.920 --> 00:23:13.701\nIn order to unlock it we gotta have a\npassphrase, we come in here we punch it in\n\n485\n00:23:13.701 --> 00:23:17.387\nand once that's done,\nit's going to unlock it, right.\n\n486\n00:23:17.387 --> 00:23:20.673\nSo there we go, not a whole lot of\nfeedback on the screen here but\n\n487\n00:23:20.673 --> 00:23:23.200\nit is unlocked and so now it's available.\n\n488\n00:23:23.200 --> 00:23:25.511\nIf I run my bokid, I don't see it, and\n\n489\n00:23:25.511 --> 00:23:29.795\nthat's because it's not a blocked device,\nit's a virtual device.\n\n490\n00:23:29.795 --> 00:23:34.398\nIt's not real, but it has been created and\nI now have a pointer,\n\n491\n00:23:34.398 --> 00:23:39.004\nthat points the unlocked version and\nthat pointer is actually,\n\n492\n00:23:39.004 --> 00:23:43.715\n/dev/mapper/whatever the name is,\nand so mine was website.\n\n493\n00:23:43.715 --> 00:23:48.942\nSo /dev/mapper/website is the pointer\nto the unlocked version of that disk.\n\n494\n00:23:48.942 --> 00:23:52.967\nAnd if I want to mount it,\nall I've gotta do is mount this device,\n\n495\n00:23:52.967 --> 00:23:55.694\nthis virtual device to\nwhere I want it to go.\n\n496\n00:23:55.694 --> 00:23:57.934\nSo I could come in, and I could, actually.\n\n497\n00:23:57.934 --> 00:23:59.107\nBefore I mount it.\n\n498\n00:23:59.107 --> 00:24:01.678\nIt's a brand new disk, so\nit has no file system on it.\n\n499\n00:24:01.678 --> 00:24:03.180\nSo it's gonna be a little upset.\n\n500\n00:24:03.180 --> 00:24:05.771\nSo I need to drop a file system\non this thing real quick.\n\n501\n00:24:05.771 --> 00:24:08.349\nAnd you might ask yourself, wait a minute.\n\n502\n00:24:08.349 --> 00:24:11.784\nI thought I had the Cryptfs, the encrypted\nfile system, the LUKS file system.\n\n503\n00:24:11.784 --> 00:24:15.750\nThat, not a real file system, that's\nencrypted data, that's ciphertext, right?\n\n504\n00:24:15.750 --> 00:24:17.060\nSo, that's not useful.\n\n505\n00:24:17.060 --> 00:24:19.050\nI need to put a real file\nsystem on top of it, now,\n\n506\n00:24:19.050 --> 00:24:21.310\na real file system will get encrypted.\n\n507\n00:24:21.310 --> 00:24:25.170\nSo, I'm gonna do a quick mkfs.xfs.\n\n508\n00:24:25.170 --> 00:24:29.440\nI'm gonna drop the xfs file\nsystem on /dev/mapper/website.\n\n509\n00:24:29.440 --> 00:24:33.760\nReal important here,\nthat you point to the virtual device.\n\n510\n00:24:33.760 --> 00:24:38.080\nIf I pointed to /dev/sdb1,\nit would drop a file system on it and\n\n511\n00:24:38.080 --> 00:24:39.530\nnow I've just all my encrypted data.\n\n512\n00:24:39.530 --> 00:24:40.550\nThat would be bad, right?\n\n513\n00:24:40.550 --> 00:24:42.860\nSo I've gotta point to the unlocked drive,\n\n514\n00:24:42.860 --> 00:24:47.750\nand when I do that,\nit's gonna drop an xfs file system on it.\n\n515\n00:24:47.750 --> 00:24:51.710\nAnd now I'll be able to go in and\nmount this disk.\n\n516\n00:24:51.710 --> 00:24:53.770\nAnd so I can say,\njust like any other disk,\n\n517\n00:24:53.770 --> 00:24:59.950\nI can say mount /dev/mapper/website and\nI can mount that to where I need it to go.\n\n518\n00:24:59.950 --> 00:25:03.330\nI need this one to go to /website, okay?\n\n519\n00:25:03.330 --> 00:25:08.900\nSo now it's mounted, it's up, if I run the\nblkid command, It even shows up here now.\n\n520\n00:25:08.900 --> 00:25:14.941\nNow that it's got that file system,\nand I can see that while /dev/sdb1\n\n521\n00:25:14.941 --> 00:25:20.300\nis crypto_LUKS,\nI can see that /dev/map/website is xfs.\n\n522\n00:25:20.300 --> 00:25:23.000\nAnd I can work with it\njust like any old disk.\n\n523\n00:25:23.000 --> 00:25:30.810\nAt this point, I would copy everything\nfrom my backup folder into /website,\n\n524\n00:25:30.810 --> 00:25:36.624\nI forgot, I'm rooted now, so\nI need to do /home /depezet.\n\n525\n00:25:36.624 --> 00:25:39.280\ndpezer, apparently I don't\nknow how to spell my own name.\n\n526\n00:25:39.280 --> 00:25:42.560\nAnd I'll copy that over to /website so\nI'm copying my files over.\n\n527\n00:25:42.560 --> 00:25:43.962\nIf I've got SELinux,\n\n528\n00:25:43.962 --> 00:25:48.520\nI need to do a little change context\non this stuff to get it set right.\n\n529\n00:25:48.520 --> 00:25:53.858\nSo I'll set the context to be httpd sys\n\n530\n00:25:53.858 --> 00:25:58.620\ncontent t /website.\n\n531\n00:25:58.620 --> 00:26:01.940\nSo I'll get the SELinux context put right,\nand\n\n532\n00:26:01.940 --> 00:26:04.080\nI'm doing the same things i'd\nbe doing on a normal disk.\n\n533\n00:26:04.080 --> 00:26:05.120\nIn fact, from this point on,\n\n534\n00:26:05.120 --> 00:26:08.460\nI'm really working with it just\nlike any other normal disk.\n\n535\n00:26:08.460 --> 00:26:10.570\nAnd when I go into /website and\nI take a look,\n\n536\n00:26:10.570 --> 00:26:15.480\nthere's index.html and when I take\na look at the file, there it is.\n\n537\n00:26:15.480 --> 00:26:19.160\nI worked with it and everything's normal,\nI don't even realize it's encrypted.\n\n538\n00:26:19.160 --> 00:26:24.149\nBut in the background, every time I write\nto the virtual device to /dev, /map,\n\n539\n00:26:24.149 --> 00:26:26.950\nor /website, it's taking the data.\n\n540\n00:26:26.950 --> 00:26:31.406\nIt's encrypting it, and\nstoring it in /dev, /sdb1, which is using\n\n541\n00:26:31.406 --> 00:26:36.096\nthe crypto_LUKS file system and\nthat's ensuring that data is encrypted.\n\n542\n00:26:36.096 --> 00:26:39.313\nAnd if I shut this system down, and\nsomebody steals the hard drive out of it,\n\n543\n00:26:39.313 --> 00:26:41.480\nor steals the whole system, that's fine.\n\n544\n00:26:41.480 --> 00:26:46.410\nThis partition is encrypted, unless they\nuse the LUKS open command to unlock it and\n\n545\n00:26:46.410 --> 00:26:49.420\nprovide that passphrase to\nbe able to get into it.\n\n546\n00:26:49.420 --> 00:26:51.430\nSo, that's kind of\nthe key difference there.\n\n547\n00:26:51.430 --> 00:26:53.610\nBut now that it's done, it's up,\n\n548\n00:26:53.610 --> 00:26:57.570\nwe're in business and we've now\nencrypted something after the install.\n\n549\n00:26:57.570 --> 00:27:00.535\n&gt;&gt; Well, I still think you should've\ncalled instead of website, the air wolf.\n\n550\n00:27:00.535 --> 00:27:01.964\n&gt;&gt; [LAUGH]\n&gt;&gt; Nevertheless,\n\n551\n00:27:01.964 --> 00:27:05.020\ndo we have to manually bump\nthis after each reboot?\n\n552\n00:27:06.080 --> 00:27:06.840\n&gt;&gt; You would, right?\n\n553\n00:27:06.840 --> 00:27:12.708\nSo it, much like a television series\nfrom the 80s, we got to reboot.\n\n554\n00:27:12.708 --> 00:27:14.336\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] And so,\n\n555\n00:27:14.336 --> 00:27:18.048\nevery time I wanna access this disk,\nI've got to provide the passphrase, right?\n\n556\n00:27:18.048 --> 00:27:19.720\nIf I had done this during the install and\n\n557\n00:27:19.720 --> 00:27:22.250\nit was my root partition\nthat was encrypted.\n\n558\n00:27:22.250 --> 00:27:25.770\nWhen I power on the system,\nit's gonna prompt me for that passphrase.\n\n559\n00:27:25.770 --> 00:27:27.640\nI got to provide it just\nto be able to boot.\n\n560\n00:27:27.640 --> 00:27:29.600\nBut in my case, I did a data disk, right?\n\n561\n00:27:29.600 --> 00:27:32.400\nA data disk that I could\ntechnically boot without.\n\n562\n00:27:32.400 --> 00:27:35.690\nIf I booted without decrypting this,\nApache would be broken,\n\n563\n00:27:35.690 --> 00:27:37.740\nbut everything else would be fine.\n\n564\n00:27:37.740 --> 00:27:39.470\nSo, I need to provide that passphrase.\n\n565\n00:27:39.470 --> 00:27:41.736\nWell, that means I have to\nmanually intervene, and\n\n566\n00:27:41.736 --> 00:27:44.631\nthat's not necessarily the greatest\nthing in the world, right?\n\n567\n00:27:44.631 --> 00:27:48.210\nWe don't wanna have to manually get\ninvolved with mounting these partitions.\n\n568\n00:27:48.210 --> 00:27:49.890\nSo you can automate it.\n\n569\n00:27:49.890 --> 00:27:53.460\nBut you've got to be really careful\nabout how you automate this.\n\n570\n00:27:53.460 --> 00:27:56.700\nBecause what's gonna happen is,\nif you automate it you've got to store\n\n571\n00:27:56.700 --> 00:28:00.790\nthe password somewhere, and if you store\nthe password, now it's an attack factor.\n\n572\n00:28:00.790 --> 00:28:05.050\nSo what a lot of people will do is set up\na key store somewhere on their network.\n\n573\n00:28:05.050 --> 00:28:08.650\nIt says that when the machine boots\nin a script, it's gonna reach out,\n\n574\n00:28:08.650 --> 00:28:11.560\nquery the key and then unlock\nit with the key to bring it on.\n\n575\n00:28:11.560 --> 00:28:13.710\nAnd if somebody steals the machine and\n\n576\n00:28:13.710 --> 00:28:17.247\nleaves, they don't have access to that\nkey store so now it's safe, right?\n\n577\n00:28:18.260 --> 00:28:22.730\nBut you can actually put\nthe keys in your fstab file,\n\n578\n00:28:22.730 --> 00:28:26.520\nin the file system table file and\nit'll mount them automatically.\n\n579\n00:28:26.520 --> 00:28:29.140\nThat's not the greatest idea in the world.\n\n580\n00:28:29.140 --> 00:28:31.510\nIt doesn't work for your main partition.\n\n581\n00:28:31.510 --> 00:28:34.670\nBut it would work for\nall of your data drives.\n\n582\n00:28:34.670 --> 00:28:37.250\nAnd so, if I've got data drives,\nthat are encrypted,\n\n583\n00:28:37.250 --> 00:28:40.930\nI can store their keys,\ninside of my file system table.\n\n584\n00:28:40.930 --> 00:28:44.250\nAnd that would be okay, because the file\nsystem table will be encrypted.\n\n585\n00:28:44.250 --> 00:28:47.390\nAs part of the root drive as long as\nI set that up during the install.\n\n586\n00:28:47.390 --> 00:28:52.820\nSo, to see how to do that, there's\nactually two places we have to work with.\n\n587\n00:28:52.820 --> 00:28:55.070\nWe have the file system table, right?\n\n588\n00:28:55.070 --> 00:29:01.750\nSo if I were to go and take a look at\n/etc/fstab, right, we can go in here,\n\n589\n00:29:01.750 --> 00:29:06.870\nand we can add an entry to\nmount the website, right?\n\n590\n00:29:06.870 --> 00:29:12.060\nWell the website is actually\nin /dev/mapper/website.\n\n591\n00:29:12.060 --> 00:29:18.050\nAnd we mounted it to /website,\nand it's file system was xfs,\n\n592\n00:29:18.050 --> 00:29:23.810\nand I might just do defaults on this\none and get that kinda set up, right?\n\n593\n00:29:23.810 --> 00:29:26.942\nWell, that is assuming\nthat the virtual device,\n\n594\n00:29:26.942 --> 00:29:30.640\nthat /dev/mapper/website, exists already.\n\n595\n00:29:30.640 --> 00:29:32.400\nSo, where does that come from?\n\n596\n00:29:32.400 --> 00:29:40.840\nThat actually comes from another\nfile which is /etc/crypttab.\n\n597\n00:29:40.840 --> 00:29:44.090\nAnd, if I go inside of\nthe crypttab file so,\n\n598\n00:29:44.090 --> 00:29:47.120\ninstead of file system tab,\nthis is crypttab.\n\n599\n00:29:47.120 --> 00:29:48.030\nIt may not exist.\n\n600\n00:29:48.030 --> 00:29:48.840\nIn my case, it doesn't.\n\n601\n00:29:48.840 --> 00:29:52.190\nSo, there is no crypttab file\nby default on my system.\n\n602\n00:29:52.190 --> 00:29:54.320\nBecause I didn't turn on\nencryption during the install.\n\n603\n00:29:54.320 --> 00:29:56.220\nHad I, this file would already exist.\n\n604\n00:29:56.220 --> 00:30:01.000\nSo, I'm gonna add an entry here for any\nencrypted volumes, that I want to unlock.\n\n605\n00:30:01.000 --> 00:30:06.421\nAnd so I want to unlock this other one,\nso I'm gonna say website, whoops.\n\n606\n00:30:06.421 --> 00:30:10.070\nThere we go,\nwebsite is the name of the virtual device.\n\n607\n00:30:10.070 --> 00:30:14.821\nAnd then I will tell it that it's in /dev,\n/sdb1 and\n\n608\n00:30:14.821 --> 00:30:19.350\nthen here's the part\nwhere I have a choice.\n\n609\n00:30:19.350 --> 00:30:24.295\nIf I stop right here when I boot\nthe system up, it'll go to automatically\n\n610\n00:30:24.295 --> 00:30:27.240\nmount this and it'll prompt me for\nthe password, and I can type it.\n\n611\n00:30:27.240 --> 00:30:28.740\nOkay, so\nthat's probably the most secure way.\n\n612\n00:30:29.850 --> 00:30:34.230\nOr option two,\nI could type the password in here.\n\n613\n00:30:34.230 --> 00:30:38.080\nAll right, and now it's here but\nit stored in the crypttab file.\n\n614\n00:30:38.080 --> 00:30:41.810\nAnd if somebody has access to my main\ndrive, then they might have access to this\n\n615\n00:30:41.810 --> 00:30:44.630\nfile and be able to find out\nwhat that passphrase is, okay.\n\n616\n00:30:44.630 --> 00:30:45.910\nSo that's the risk there.\n\n617\n00:30:45.910 --> 00:30:48.880\nOr three,\nwe can point to a network location.\n\n618\n00:30:48.880 --> 00:30:52.250\nAnd that's where we have the ability\nto start reaching out, and\n\n619\n00:30:52.250 --> 00:30:54.730\nusing a centralized network keystore,\nall right.\n\n620\n00:30:54.730 --> 00:30:58.320\nSo I'll leave it blank, so\nthat it prompts me, right?\n\n621\n00:30:58.320 --> 00:31:02.294\nSo now when the system boots,\nit will prompt me for this passphrase.\n\n622\n00:31:02.294 --> 00:31:07.477\nAnd that will unlock, /dev, /mapper,\n/website, and once that's unlocked,\n\n623\n00:31:07.477 --> 00:31:11.972\nthe file system table can get read,\nand that will mount it to /website.\n\n624\n00:31:11.972 --> 00:31:13.820\nSo, that's how we kinda take care of that,\nand\n\n625\n00:31:13.820 --> 00:31:17.420\nget that so it'll fire up at boot time,\nand be available for us.\n\n626\n00:31:17.420 --> 00:31:19.522\nSo, that's kinda the main way\nof how we would handle that,\n\n627\n00:31:19.522 --> 00:31:21.580\nif we want it to be\na little more automated.\n\n628\n00:31:21.580 --> 00:31:25.041\n&gt;&gt; So what kind of on going\nmaintenance does LUKS require, Don?\n\n629\n00:31:25.041 --> 00:31:26.629\n&gt;&gt; Well, as far as service maintenance,\n\n630\n00:31:26.629 --> 00:31:28.515\nthere's not a whole lot\nyou have to do with it.\n\n631\n00:31:28.515 --> 00:31:29.324\nIt kinda does its job.\n\n632\n00:31:29.324 --> 00:31:31.991\nIt just sits there and\nencrypts and decrypts seamlessly.\n\n633\n00:31:31.991 --> 00:31:36.335\nThe end users, it's all transparent, they\ndon't really see it, and it does its job.\n\n634\n00:31:36.335 --> 00:31:39.672\nThe only real maintenance we have\nto do is kinda key rotation,\n\n635\n00:31:39.672 --> 00:31:41.350\nadding keys, removing keys.\n\n636\n00:31:41.350 --> 00:31:42.702\nI have one key right now.\n\n637\n00:31:42.702 --> 00:31:45.480\nThe passphrase that I\nassign when we set it up.\n\n638\n00:31:45.480 --> 00:31:48.730\nSo I might wanna add some more keys or\ntake some keys away.\n\n639\n00:31:48.730 --> 00:31:52.130\nSo, you've got a few\ndifferent things you can do.\n\n640\n00:31:52.130 --> 00:31:53.919\nWe can look at how many\nkeys we've got already.\n\n641\n00:31:53.919 --> 00:31:58.389\nI can say cryptsetup luksDump.\n\n642\n00:31:58.389 --> 00:32:02.005\nAnd the luksdump command gives\nus information about a disk.\n\n643\n00:32:02.005 --> 00:32:04.821\nAnd I can look at /dev/sdb1.\n\n644\n00:32:04.821 --> 00:32:08.770\nNow if I just run this, luksDump\ngives you way too much information.\n\n645\n00:32:08.770 --> 00:32:10.730\nSo I'm gonna filter that.\n\n646\n00:32:10.730 --> 00:32:14.614\nI'm gonna grip for Key Slot.\n\n647\n00:32:14.614 --> 00:32:16.230\nAnd there's a space in between Key Slot so\n\n648\n00:32:16.230 --> 00:32:17.995\nI'm doing a backslash\nto escape that space.\n\n649\n00:32:17.995 --> 00:32:19.870\nBut I'm just looking for the Key Slots.\n\n650\n00:32:19.870 --> 00:32:20.967\nAnd when I run that,\n\n651\n00:32:20.967 --> 00:32:24.334\nhere I can see my eight key slots\nnumbered zero through seven.\n\n652\n00:32:24.334 --> 00:32:28.280\nSee how Key Slot of zero is enable and\nall of the other ones is disabled.\n\n653\n00:32:28.280 --> 00:32:29.540\nI haven't created any more keys.\n\n654\n00:32:29.540 --> 00:32:31.740\nBut this is where that\nmaximum of eight comes from.\n\n655\n00:32:31.740 --> 00:32:33.710\nI can only have eight keys.\n\n656\n00:32:33.710 --> 00:32:37.253\nSo I can create new ones and add them\nin and I can take away old ones and\n\n657\n00:32:37.253 --> 00:32:41.230\nkind of rotate through and\nget all that set up right through here.\n\n658\n00:32:41.230 --> 00:32:48.643\nIf I wanted to add I key,\nI would say cryptsetup luksaddkey.\n\n659\n00:32:48.643 --> 00:32:49.354\nThere we go.\n\n660\n00:32:49.354 --> 00:32:51.466\nI want to add a key and\nthen and from here,\n\n661\n00:32:51.466 --> 00:32:54.210\nI would tell the device that\nI wanted to add a key too.\n\n662\n00:32:54.210 --> 00:32:57.320\nI wanna add it to /dev/sdb1, okay?\n\n663\n00:32:57.320 --> 00:33:00.710\nAnd then I need to punch\nin an existing key.\n\n664\n00:33:00.710 --> 00:33:04.220\nOne of the existing keys has to\nbe used just to ask the disk.\n\n665\n00:33:04.220 --> 00:33:06.670\nAnd so\nI'll punch in the key that I used earlier.\n\n666\n00:33:08.280 --> 00:33:11.924\nAnd then I'll be able to\npunch in a new key, right?\n\n667\n00:33:11.924 --> 00:33:14.930\nAnd so here it is,\nenter a new passphrase for the key slot.\n\n668\n00:33:14.930 --> 00:33:19.737\nAnd so now I can come in and I can punch\nin what I want this new key to be.\n\n669\n00:33:19.737 --> 00:33:23.820\nI don't wanna use a dictionary word again,\nlet's see if I can't get around that.\n\n670\n00:33:26.060 --> 00:33:27.560\nAnd I will, oops.\n\n671\n00:33:27.560 --> 00:33:30.840\nI will try and\npunch in a better password this time.\n\n672\n00:33:31.840 --> 00:33:32.830\nAnd there we go.\n\n673\n00:33:32.830 --> 00:33:36.380\nAnd so I punch in, and\nnow it's adding that second key, right.\n\n674\n00:33:36.380 --> 00:33:37.172\nAnd I can do same thing.\n\n675\n00:33:37.172 --> 00:33:38.780\nA third key, a fourth key, a fifth key.\n\n676\n00:33:38.780 --> 00:33:40.488\nYou just keep punching them in.\n\n677\n00:33:40.488 --> 00:33:41.880\nAnd each one is getting added.\n\n678\n00:33:41.880 --> 00:33:43.940\nSo, see now I have two keys.\n\n679\n00:33:43.940 --> 00:33:46.590\nAnd over time I might\n\n680\n00:33:46.590 --> 00:33:49.760\nencounter a situation where I need\nto remove somebody's key, right?\n\n681\n00:33:49.760 --> 00:33:52.710\nSo we released an employee,\nor maybe it's just time.\n\n682\n00:33:52.710 --> 00:33:54.340\nTime to change out a key.\n\n683\n00:33:54.340 --> 00:34:01.270\nI can come in and say, instead of\nluksaddkey, I can do a luksremovekey.\n\n684\n00:34:01.270 --> 00:34:03.720\nAnd so I'll do that right here,\nremove key.\n\n685\n00:34:03.720 --> 00:34:06.440\nAnd then enter the passphrase\nto be deleted.\n\n686\n00:34:06.440 --> 00:34:09.700\nI punch in the key that I\nwant to take out, right?\n\n687\n00:34:09.700 --> 00:34:14.018\nI'm gonna take out the second key and\nwhen I do that,\n\n688\n00:34:14.018 --> 00:34:16.972\nI'll punch in that key [INAUDIBLE].\n\n689\n00:34:16.972 --> 00:34:19.540\nNow this assumes that we\nknow what that key is.\n\n690\n00:34:19.540 --> 00:34:22.160\nIf we don't there are ways\nto override that.\n\n691\n00:34:22.160 --> 00:34:26.330\nBut assuming you know what that key is\nyou can punch the key in, it removes it.\n\n692\n00:34:26.330 --> 00:34:30.236\nAnd now when I go and look,\nkey two is now disabled, right.\n\n693\n00:34:30.236 --> 00:34:33.347\nSo I can add and remove this keys to\nenable people to be able to get in and\n\n694\n00:34:33.347 --> 00:34:34.160\nuse that system.\n\n695\n00:34:34.160 --> 00:34:37.730\nSo that's really the only ongoing\nmaintenance that we've got for it.\n\n696\n00:34:37.730 --> 00:34:40.926\nBut after that it kind of does its job and\nit does it really well.\n\n697\n00:34:40.926 --> 00:34:44.740\nSo it's a great way to encrypt that data\nand ensure that your data's safe even\n\n698\n00:34:44.740 --> 00:34:47.390\nif someone manages to\nphysically steal those disks.\n\n699\n00:34:47.390 --> 00:34:50.570\n&gt;&gt; Powerful Linux tool,\nLUKS disk encryption.\n\n700\n00:34:50.570 --> 00:34:53.054\nDon did a great job delivering\nall that information.\n\n701\n00:34:53.054 --> 00:34:56.170\nAny final thoughts on this, or no?\n\n702\n00:34:56.170 --> 00:34:58.470\n&gt;&gt; Remember,\nthere is a ton more that goes into this.\n\n703\n00:34:58.470 --> 00:35:01.980\nI've shown you the basics of what\nwe can use to LUKS up and going.\n\n704\n00:35:01.980 --> 00:35:07.330\nI know we had some comments in the chat\nroom about storing keys on a YubiKey,\n\n705\n00:35:07.330 --> 00:35:09.470\nor some kind of third party device.\n\n706\n00:35:09.470 --> 00:35:12.770\nI don't know of any that have\ndirect support for LUKS, but\n\n707\n00:35:12.770 --> 00:35:16.240\na lot of them actually do have support for\njust storing generic keys in there.\n\n708\n00:35:16.240 --> 00:35:18.610\nAnd so this is really no different\nthan storing any other passwords.\n\n709\n00:35:18.610 --> 00:35:24.189\nSo you can leverage password vaults,\nthings like LastPass or KeePass, YubiKey.\n\n710\n00:35:24.189 --> 00:35:28.590\nAnything that gives you general\nencrypted storage of a key.\n\n711\n00:35:28.590 --> 00:35:31.860\nYou can do that, you just wouldn't be able\nto dynamically retrieve it from that key.\n\n712\n00:35:31.860 --> 00:35:33.481\nYou plug it in and it just works.\n\n713\n00:35:33.481 --> 00:35:35.459\nYou have to get a little\nmore involved in that.\n\n714\n00:35:35.459 --> 00:35:38.653\nWe also had another question in the chat\nroom about, can we encrypt USB drives?\n\n715\n00:35:38.653 --> 00:35:40.278\nThe answer is yes, absolutely.\n\n716\n00:35:40.278 --> 00:35:41.080\n&gt;&gt; I thought so, yeah.\n\n717\n00:35:41.080 --> 00:35:42.670\n&gt;&gt; You can do it.\n\n718\n00:35:42.670 --> 00:35:45.280\nThey're a little harder\nto mount at boot time\n\n719\n00:35:45.280 --> 00:35:47.710\nbecause USB is detected\nkind of strange and\n\n720\n00:35:47.710 --> 00:35:50.590\nthe naming can change depending on\nwhat port you're plugged in and stuff.\n\n721\n00:35:50.590 --> 00:35:53.120\nSo they're harder to mount automatically.\n\n722\n00:35:53.120 --> 00:35:56.350\nBut as far as dynamically mounting them,\nyou plug it in and\n\n723\n00:35:56.350 --> 00:35:57.840\nthen you go in and mount it.\n\n724\n00:35:57.840 --> 00:36:02.770\nThat is just like any other disk,\nit'll show up as a device in slash dev and\n\n725\n00:36:02.770 --> 00:36:06.310\nas soon as you know that device name you\ncan mount it and then pop it right open.\n\n726\n00:36:06.310 --> 00:36:07.838\nLUKS works great on this.\n\n727\n00:36:07.838 --> 00:36:11.819\n&gt;&gt; Yeah, fantastic, great job as\nalways Don and it was a lot of videos,\n\n728\n00:36:11.819 --> 00:36:14.840\na lot of episodes in the Linux\nsecurity techniques,\n\n729\n00:36:14.840 --> 00:36:17.950\nserious make sure you watch\nevery single one of them.\n\n730\n00:36:17.950 --> 00:36:19.630\nBecause you'd be very glad you did.\n\n731\n00:36:19.630 --> 00:36:21.684\nAnd thank you for watching ITPRO.TV.\n\n732\n00:36:21.684 --> 00:36:23.800\nRemember, a good ITPRO is always learning.\n\n733\n00:36:23.800 --> 00:36:24.640\nI'm Zack Memos.\n\n734\n00:36:24.640 --> 00:36:25.410\n&gt;&gt; And I'm Don Pezet.\n\n735\n00:36:25.410 --> 00:36:30.789\n&gt;&gt; And we'll see you again real soon.\n\n736\n00:36:30.789 --> 00:36:34.664\n[MUSIC]\n\n737\n00:36:34.664 --> 00:36:37.580\n&gt;&gt; Thank you for watching ITPro.TV.\n\n",
          "vimeoId": "230151841"
        },
        {
          "description": "Don and Zach discuss what GPG is, what PGP is, 'Data-At-Rest,' setup of GPG, GNU Privacy Guard, steps for encrypting data, creating private & public keys, keyring files, gotchas when generating a private key, determining available entropy, changing your random number generator, exchanging keys with sender, how sender uses the key, and how the recipient can decrypt the data.",
          "length": "1851",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-2-data_encryption_with_gpg-081417-PGM.00_34_19_12.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-2-data_encryption_with_gpg-081417-PGM.00_34_19_12.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-2-data_encryption_with_gpg-081417-PGM.00_34_19_12.Still001-sm.jpg",
          "title": "Data Encryption with GPG",
          "transcript": "WEBVTT\n\n1\n00:00:00.290 --> 00:00:01.230\nWelcome to ITProTV.\n\n2\n00:00:01.230 --> 00:00:03.163\n&gt;&gt; I'm your host, Don Pezet.\n\n3\n00:00:03.163 --> 00:00:06.597\n&gt;&gt; [CROSSTALK]\n\n4\n00:00:06.597 --> 00:00:08.074\n[MUSIC]\n\n5\n00:00:08.074 --> 00:00:12.101\n&gt;&gt; You're watching ITPro.TV.\n\n6\n00:00:12.101 --> 00:00:14.314\n&gt;&gt; Hello, and thank you for\nchoosing ITPro.TV,\n\n7\n00:00:14.314 --> 00:00:16.400\nhelping you learn wherever you go.\n\n8\n00:00:16.400 --> 00:00:17.445\nI'm your host, Zach Memos.\n\n9\n00:00:17.445 --> 00:00:21.751\nAs we have Linux security\ntechniques on tap for you.\n\n10\n00:00:21.751 --> 00:00:25.220\nAnd bringing us all\nthe information we need about GPG.\n\n11\n00:00:25.220 --> 00:00:25.740\nWhat is that?\n\n12\n00:00:25.740 --> 00:00:26.530\nWe're gonna find out.\n\n13\n00:00:26.530 --> 00:00:27.910\nDon Pezet is gonna bring us the info.\n\n14\n00:00:27.910 --> 00:00:29.335\nDon, good to see you, sir.\n\n15\n00:00:29.335 --> 00:00:30.394\n&gt;&gt; Great to see you, Zach.\n\n16\n00:00:30.394 --> 00:00:33.324\nAnd I'm ready to jump in to that\nworld of Linux security techniques.\n\n17\n00:00:33.324 --> 00:00:38.054\nIn each episode, we've kind of focused on\na different area of Linux security, and\n\n18\n00:00:38.054 --> 00:00:40.500\nin this one,\nI wanna focus on data at rest.\n\n19\n00:00:40.500 --> 00:00:42.450\nAnd actually, I'm gonna kind of\nblur the lines a little bit and\n\n20\n00:00:42.450 --> 00:00:44.380\ndo some data at rest and data in motion.\n\n21\n00:00:44.380 --> 00:00:47.920\nYou know that when we protect data,\nwe need to keep it secure, we need to make\n\n22\n00:00:47.920 --> 00:00:51.340\nsure prying eyes can't get into it, and\nthe best way to do that is encryption.\n\n23\n00:00:51.340 --> 00:00:54.460\nAnd when data at rest,\ndata is sitting there on our hard drive,\n\n24\n00:00:54.460 --> 00:00:57.120\nit's nice to have it encrypted, because\nif somebody gets into our computer,\n\n25\n00:00:57.120 --> 00:00:58.320\nwe don't want them to have access.\n\n26\n00:00:58.320 --> 00:00:58.865\n&gt;&gt; Mm-hm.\n\n27\n00:00:58.865 --> 00:01:02.795\n&gt;&gt; But when data is crossing the network,\nwe also want it to be encrypted,\n\n28\n00:01:02.795 --> 00:01:05.155\nbecause somebody could intercept\nthat traffic on the network.\n\n29\n00:01:05.155 --> 00:01:08.505\nAnd it's actually easier to\nintercept data crossing the network.\n\n30\n00:01:08.505 --> 00:01:11.245\nSo there's a nice little technology\navailable that we can use.\n\n31\n00:01:11.245 --> 00:01:13.035\nIt kind of helps in both situations.\n\n32\n00:01:13.035 --> 00:01:16.174\nAnd it's called GPG, or GNU Privacy Guard.\n\n33\n00:01:16.174 --> 00:01:23.380\nAnd with GPG is an open source alternative\nto an older technology called PGP.\n\n34\n00:01:23.380 --> 00:01:28.395\nAnd PGP was the Pretty Good Privacy\nis what it stood for.\n\n35\n00:01:28.395 --> 00:01:31.917\n&gt;&gt; [LAUGH]\n&gt;&gt; It was developed by a gentleman whose\n\n36\n00:01:31.917 --> 00:01:34.693\nname has completely escaped me,\nback in the 80s.\n\n37\n00:01:34.693 --> 00:01:36.627\nIt ultimately got bought by Symantec.\n\n38\n00:01:36.627 --> 00:01:41.119\nAnd so Symantec owns PGP which means,\nit is not open source and free for\n\n39\n00:01:41.119 --> 00:01:42.470\neveryone to use.\n\n40\n00:01:42.470 --> 00:01:47.660\nSo we need an open source alternative and\nGPG is that alternative.\n\n41\n00:01:47.660 --> 00:01:49.310\nSo it snaps in, and in this episode,\n\n42\n00:01:49.310 --> 00:01:52.860\nI'm gonna show you how we can use\nthat to encrypt our data at rest, and\n\n43\n00:01:52.860 --> 00:01:55.490\nthen if you transmit that data over\nthe network, it's already encrypted.\n\n44\n00:01:55.490 --> 00:01:59.350\nSo effectively, it's encrypted\nwhile it's in transit as well, or\n\n45\n00:01:59.350 --> 00:02:00.390\nwhile it's in motion.\n\n46\n00:02:00.390 --> 00:02:03.250\nSo really neat technology,\nreally easy to use, so\n\n47\n00:02:03.250 --> 00:02:05.980\ndefinitely one that you wanna be familiar\nwith if you're trying to secure your data.\n\n48\n00:02:05.980 --> 00:02:07.770\n&gt;&gt; So, data encryption with GPG.\n\n49\n00:02:07.770 --> 00:02:08.650\nSo how does it all work?\n\n50\n00:02:08.650 --> 00:02:09.740\nHow do we get started with it?\n\n51\n00:02:09.740 --> 00:02:12.650\n&gt;&gt; All right,\nwell GPG itself is a utility.\n\n52\n00:02:12.650 --> 00:02:17.190\nIt's a program, it's not like a protocol,\nit's not like HTTPS where, hey, when I hit\n\n53\n00:02:17.190 --> 00:02:20.210\na web server, I just pick the right port\nand now I'm using a secured connection.\n\n54\n00:02:20.210 --> 00:02:22.103\nWith GPG, it's a utility.\n\n55\n00:02:22.103 --> 00:02:25.390\nYou feed data into it, and\nit encrypts that data, right?\n\n56\n00:02:25.390 --> 00:02:28.290\nAnd then the recipient can receive it,\nthey can feed\n\n57\n00:02:28.290 --> 00:02:31.200\nthe data into GPG on their side and\nthey can decrypt it and access it.\n\n58\n00:02:31.200 --> 00:02:34.650\nWhich means,\nwe take an active part in the encryption.\n\n59\n00:02:34.650 --> 00:02:38.370\nIf I have a disk that I'm\nstoring back ups on, well,\n\n60\n00:02:38.370 --> 00:02:41.320\nmy backups might be plain text,\nthey might be raw data.\n\n61\n00:02:41.320 --> 00:02:43.460\nIf it's a removable disk like a USB drive,\n\n62\n00:02:43.460 --> 00:02:48.360\nwell, it's USB, so somebody could\npop that off and steal the drive.\n\n63\n00:02:48.360 --> 00:02:53.300\nI could use GPG to encrypt all the data\non that drive and now it's all protected.\n\n64\n00:02:53.300 --> 00:02:54.840\nI know what some of you\nare thinking right now.\n\n65\n00:02:54.840 --> 00:02:57.000\nYou're hearing me say that and\nyou're like, well Dan,\n\n66\n00:02:57.000 --> 00:02:58.486\nwe can just encrypt the drive, right?\n\n67\n00:02:58.486 --> 00:03:02.113\nThere's technology like Locks or\nBitLocker, VeriCrypt,\n\n68\n00:03:02.113 --> 00:03:05.892\nany utility like that,\nthat can encrypt an entire hard drive.\n\n69\n00:03:05.892 --> 00:03:09.099\nAnd that's fine and good, but\nif I do something like Locks encryption,\n\n70\n00:03:09.099 --> 00:03:12.240\nthat works great on Linux,\ndoesn't work so well on Windows or Mac.\n\n71\n00:03:12.240 --> 00:03:15.080\nIf I do BitLocker, that works on Windows,\ndoesn't work on Mac or Linux.\n\n72\n00:03:15.080 --> 00:03:19.340\nSo it's hard to find one encryption\ntechnology that works everywhere.\n\n73\n00:03:19.340 --> 00:03:21.026\nWell, GPG is one of those.\n\n74\n00:03:21.026 --> 00:03:22.820\nGPG works darn, they're everywhere.\n\n75\n00:03:22.820 --> 00:03:25.171\nSo if I encrypt my backups\nin that USB drive,\n\n76\n00:03:25.171 --> 00:03:27.904\nI know I can take that drive\nto any other computer and\n\n77\n00:03:27.904 --> 00:03:31.480\nas long as I have my private key I\ncan decrypt that data and get at it.\n\n78\n00:03:31.480 --> 00:03:38.130\nSo that what GPG does and\nit is build around the idea of key pairs.\n\n79\n00:03:38.130 --> 00:03:41.150\nThat we have public keys and private keys.\n\n80\n00:03:41.150 --> 00:03:44.960\nAnd it might just be you that,\nif I'm encrypting backups, right,\n\n81\n00:03:44.960 --> 00:03:47.500\nI'm gonna use my public key\nto encrypt those backups.\n\n82\n00:03:47.500 --> 00:03:50.308\nAnd I'm gonna keep my private\nkeys somewhere safe and secure.\n\n83\n00:03:50.308 --> 00:03:53.920\nAnd that way, when I need those backups,\nI can decrypt it and get at it, right.\n\n84\n00:03:53.920 --> 00:03:58.321\nBut it could also be multiple people,\nand this is where GPG normally comes in.\n\n85\n00:03:58.321 --> 00:04:03.430\nIf I wanna send something to Zach,\nright, Zach can send me his public key.\n\n86\n00:04:03.430 --> 00:04:06.599\nAnd I can use his public key to encrypt\nthe data and send it to him and\n\n87\n00:04:06.599 --> 00:04:09.220\nthen he can use his\nprivate key to decrypt it.\n\n88\n00:04:09.220 --> 00:04:11.680\nI never saw his private key,\nI never touched it.\n\n89\n00:04:11.680 --> 00:04:14.980\nSo that data is safe and\nsecure and I couldn't\n\n90\n00:04:14.980 --> 00:04:18.330\ncompromise it although I've got the\nunencrypted data I'm the one encrypting.\n\n91\n00:04:18.330 --> 00:04:22.923\nBut if anybody intercepted it, they would\nnever be able to to decrypt that data.\n\n92\n00:04:22.923 --> 00:04:26.505\nIt keeps it safe, safe all ton the hard\ndrive, safe while in transit, safe all\n\n93\n00:04:26.505 --> 00:04:30.220\nthe weapon to the point where Zach\ndecrypts it and the it's his own problem.\n\n94\n00:04:30.220 --> 00:04:34.990\nSo that's what GPG does, but\nit means we got to be the setup, right and\n\n95\n00:04:34.990 --> 00:04:36.170\nwe got to get GDP installed.\n\n96\n00:04:36.170 --> 00:04:39.617\nWe gotta create a few keys,\nwe got a few different things to do there.\n\n97\n00:04:39.617 --> 00:04:42.684\nSo going back to Zach's questions,\nwhat does it take to get GPG set up?\n\n98\n00:04:42.684 --> 00:04:46.750\nWell, as far as getting it installed,\nit's pretty simple.\n\n99\n00:04:46.750 --> 00:04:51.670\nIn fact, you'll find most Linux distros\nhave GPG installed by default, right.\n\n100\n00:04:51.670 --> 00:04:53.101\nSo quick easy way to test here.\n\n101\n00:04:53.101 --> 00:04:57.810\nI'm on a Red Hat Enterprise Linux\n7.4 machine, and on this one,\n\n102\n00:04:57.810 --> 00:05:02.450\nif I just type GPG and press Enter,\nI can see it's running, okay?\n\n103\n00:05:02.450 --> 00:05:03.660\nIt's running, it's there, it's installed.\n\n104\n00:05:03.660 --> 00:05:05.370\nI didn't have to do anything.\n\n105\n00:05:05.370 --> 00:05:08.492\nIf your distro doesn't have it,\nthe odds are,\n\n106\n00:05:08.492 --> 00:05:13.036\nall you need to do is type yum install\nGPG or DNF install GPG or app get.\n\n107\n00:05:13.036 --> 00:05:18.150\nInstall GPG, and it'll install those, but\nreally most distros have it by default.\n\n108\n00:05:18.150 --> 00:05:20.804\nAnd the first time you run it,\nsee what it's doing here?\n\n109\n00:05:20.804 --> 00:05:23.340\nAnd again, I just typed GPG and\npress Enter.\n\n110\n00:05:23.340 --> 00:05:25.710\nIt says,\na new configuration file is created.\n\n111\n00:05:25.710 --> 00:05:29.740\nSo it created a configuration file to\nget it setup with a default config.\n\n112\n00:05:29.740 --> 00:05:33.940\nAnd then, it's building a keyring for\nme, right?\n\n113\n00:05:33.940 --> 00:05:38.370\nAnd see how I've got a public keyring and\na secret keyring?\n\n114\n00:05:38.370 --> 00:05:42.258\nThe public keyring, that's my collection\nof public keys that other people have sent\n\n115\n00:05:42.258 --> 00:05:43.288\nme, as well as my own.\n\n116\n00:05:43.288 --> 00:05:48.060\nAnd then the secret keyring,\nthat's what's got my private key in there.\n\n117\n00:05:48.060 --> 00:05:51.110\nSo it's got that information,\nand now it's telling me.\n\n118\n00:05:51.110 --> 00:05:52.810\nGo ahead and type my message.\n\n119\n00:05:52.810 --> 00:05:55.360\nAll right, well,\nwhen GPG was originally developed,\n\n120\n00:05:55.360 --> 00:05:57.430\nit was developed with email in mind.\n\n121\n00:05:57.430 --> 00:05:59.750\nThat, if you're about to write an email,\nfire up GPG,\n\n122\n00:05:59.750 --> 00:06:01.560\ntype the email in here, right?\n\n123\n00:06:01.560 --> 00:06:03.854\nSo you type your whole message, and\n\n124\n00:06:03.854 --> 00:06:07.841\nyou get everything kind of put in\nhere the way that you want it.\n\n125\n00:06:07.841 --> 00:06:11.960\nAnd then when your done, it can encrypt it\nand generate that output on the screen.\n\n126\n00:06:11.960 --> 00:06:14.985\nYou copy and paste that in your email,\nand ain't gonna that rock, okay.\n\n127\n00:06:14.985 --> 00:06:19.310\nWell, there's other ways to do that today,\nand there's usually GUIs.\n\n128\n00:06:19.310 --> 00:06:22.850\nA lot of email programs have GPG\nintegrated into them, you got that route.\n\n129\n00:06:22.850 --> 00:06:24.330\nSo very few people use it this way.\n\n130\n00:06:25.380 --> 00:06:28.750\nThe way we normally use it\nnow is we encrypt files.\n\n131\n00:06:28.750 --> 00:06:31.460\nI have a file that I wanna send,\nand I want to encrypt that.\n\n132\n00:06:31.460 --> 00:06:34.480\nAnd that requires a little bit\nmore work than just running with\n\n133\n00:06:34.480 --> 00:06:35.800\nthe default settings here.\n\n134\n00:06:35.800 --> 00:06:40.400\nSo if you're just trying to get the basic\ndefault stuff, like for simple email,\n\n135\n00:06:40.400 --> 00:06:41.920\nthere's really not much setup at all.\n\n136\n00:06:41.920 --> 00:06:44.220\nYou just run GPG and start typing.\n\n137\n00:06:44.220 --> 00:06:45.670\nBut there's uncertainty,\n\n138\n00:06:45.670 --> 00:06:50.710\nthere's uncertainty in how strong that\nkey is, how the key was generated?\n\n139\n00:06:50.710 --> 00:06:54.310\nHow it can encrypt individual files and\nso there's usually a bit more of\n\n140\n00:06:54.310 --> 00:06:57.190\nyou to get out actually set up and\nget input in place.\n\n141\n00:06:57.190 --> 00:07:00.340\n&gt;&gt; So, what is the first step\nwe need to do to encrypt data?\n\n142\n00:07:00.340 --> 00:07:03.160\n&gt;&gt; All right, so if we wanna\nencrypt our data, right, step one,\n\n143\n00:07:03.160 --> 00:07:05.320\nwe need to get some good keys, right?\n\n144\n00:07:05.320 --> 00:07:06.470\nIt generated some keys for me.\n\n145\n00:07:06.470 --> 00:07:07.890\nI just don't know about them, right?\n\n146\n00:07:07.890 --> 00:07:09.720\nIt went with defaults and so on.\n\n147\n00:07:09.720 --> 00:07:16.671\nSo I can generate my own keys by\nrunning gpg--gen-key, all right?\n\n148\n00:07:16.671 --> 00:07:18.730\nThat's gonna tell it to generate new keys.\n\n149\n00:07:18.730 --> 00:07:23.478\nNow when I run that, it's gonna ask what\nkind of key I want, all right, and so\n\n150\n00:07:23.478 --> 00:07:26.273\nhere I start getting\na little more involved.\n\n151\n00:07:26.273 --> 00:07:29.051\nI start having a better understanding\nwhat keys that I'm working with.\n\n152\n00:07:29.051 --> 00:07:30.880\nAnd if you look, we've got four choices.\n\n153\n00:07:30.880 --> 00:07:33.813\nThe default is RSA and RSA.\n\n154\n00:07:33.813 --> 00:07:36.146\nIt sounds a little redundant,\nbut that means a public key and\n\n155\n00:07:36.146 --> 00:07:36.980\na private key ready.\n\n156\n00:07:36.980 --> 00:07:41.770\nHe's using RSA for encryption as well\nas for digital signatures, right, so\n\n157\n00:07:41.770 --> 00:07:43.060\nit can do both.\n\n158\n00:07:43.060 --> 00:07:47.290\nYou got DSA and Elgamal, which originally\nwas thought to be a bit stronger and\n\n159\n00:07:47.290 --> 00:07:49.480\nhas now be proven not to\nbe that much stronger.\n\n160\n00:07:49.480 --> 00:07:52.620\nSo, RSA and RSA is still the default.\n\n161\n00:07:52.620 --> 00:07:56.358\nAnd then you've got DSA and\nRSA for signing only.\n\n162\n00:07:56.358 --> 00:07:59.317\nIt could be,\nyou don't care about encryption, right?\n\n163\n00:07:59.317 --> 00:08:01.998\nMaybe you work for\nthe United States government.\n\n164\n00:08:01.998 --> 00:08:06.229\nAnd then the U.S. government they have\nthis law that says that any communication\n\n165\n00:08:06.229 --> 00:08:09.244\nto the U.S. government is\nsupposed to be public record.\n\n166\n00:08:09.244 --> 00:08:10.300\nIt ultimately isn't?\n\n167\n00:08:10.300 --> 00:08:11.690\nBut they say that, [LAUGH] and\n\n168\n00:08:11.690 --> 00:08:16.070\nso if I don't need to hide my data,\nI might choose to just digitally sign it.\n\n169\n00:08:16.070 --> 00:08:18.620\nThen by digitally signing it if\nsomebody tampers with the data,\n\n170\n00:08:18.620 --> 00:08:21.590\nthe signature will fail so\nwe can see if it's been tampered with.\n\n171\n00:08:21.590 --> 00:08:24.170\nBut if I want to encrypt it.\n\n172\n00:08:24.170 --> 00:08:27.000\nThat's where I need to do one\nof the first two options, and\n\n173\n00:08:27.000 --> 00:08:28.870\noption number one is normally what I want.\n\n174\n00:08:28.870 --> 00:08:33.770\nRemember that in this security world\nyou have what's called the CIA tripod.\n\n175\n00:08:33.770 --> 00:08:37.610\nIt's confidentiality,\nintegrity and availability.\n\n176\n00:08:37.610 --> 00:08:40.180\nWell, GPG really doesn't deal\nanything with availability,\n\n177\n00:08:40.180 --> 00:08:44.260\nbut confidentiality, if we encrypt\nthe data, it's now confidential,\n\n178\n00:08:44.260 --> 00:08:46.150\nsomebody has to decrypt it to read it.\n\n179\n00:08:46.150 --> 00:08:50.340\nAnd integrity if somebody modifies\nthe data the signature fails and so\n\n180\n00:08:50.340 --> 00:08:50.900\nnow we get it.\n\n181\n00:08:50.900 --> 00:08:55.220\nSo it's really asking us,\ndo we want confidentiality and integrity?\n\n182\n00:08:55.220 --> 00:08:57.720\nOr do we just want integrity?\n\n183\n00:08:57.720 --> 00:09:00.470\nRight, so I want confidentiality and\nintegrity.\n\n184\n00:09:00.470 --> 00:09:02.780\nSo I'm gonna choose option number one, and\n\n185\n00:09:02.780 --> 00:09:04.100\nthen it's gonna ask me\nto pick the key size.\n\n186\n00:09:04.100 --> 00:09:05.720\nAnd this is the important part.\n\n187\n00:09:05.720 --> 00:09:08.180\nWhen I said earlier I didn't\nknow how strong the keys were.\n\n188\n00:09:08.180 --> 00:09:11.060\nWhat I'm really saying is I just don't\nknow what the bit strength of that\n\n189\n00:09:11.060 --> 00:09:11.970\nkey size is.\n\n190\n00:09:11.970 --> 00:09:17.410\nSo it's defaulting to 2048 bits\nwhich is pretty darn good, right?\n\n191\n00:09:17.410 --> 00:09:21.280\nToday, but in a few years as processes get\nbetter maybe that's not so strong anymore.\n\n192\n00:09:21.280 --> 00:09:22.675\nRight?\nThere was a time when\n\n193\n00:09:22.675 --> 00:09:24.420\n1024 was really strong.\n\n194\n00:09:24.420 --> 00:09:25.670\nNot any more, right?\n\n195\n00:09:25.670 --> 00:09:29.390\nSo I was worried it might have done\n1024 it looks like a default 2048 so\n\n196\n00:09:29.390 --> 00:09:33.050\nI didn't have to worry but\nnow I know by typing it in.\n\n197\n00:09:33.050 --> 00:09:35.320\nOr I can even grow stronger,\nright let me go all the way up to 4096.\n\n198\n00:09:35.320 --> 00:09:39.899\nYou should make sure that whoever's on\nthe receiving end of this also supports.\n\n199\n00:09:40.900 --> 00:09:42.170\nA 4k bit link like that.\n\n200\n00:09:43.620 --> 00:09:46.130\nAll right, then,\nhow long do I want the key to be valid?\n\n201\n00:09:46.130 --> 00:09:47.590\nNow, I'm generating this key.\n\n202\n00:09:47.590 --> 00:09:50.390\nI can make the key last forever,\nif I wanted.\n\n203\n00:09:50.390 --> 00:09:53.010\nBut, it's a good idea to make sure\nyou rotate these keys over time.\n\n204\n00:09:53.010 --> 00:09:56.520\nThe problem is, if I'm saving backups for\nthree years, and\n\n205\n00:09:56.520 --> 00:09:58.640\nI have a key that expires in one year.\n\n206\n00:09:58.640 --> 00:10:00.620\nThat's gonna be a bit of\na challenge to use that, right?\n\n207\n00:10:00.620 --> 00:10:03.280\nI'm gonna have backups that I can't\nrecover any more because the keys\n\n208\n00:10:03.280 --> 00:10:04.130\nhave expired.\n\n209\n00:10:04.130 --> 00:10:07.880\nSo you wanna think about your data and\nthink about the sensitivity of the data.\n\n210\n00:10:07.880 --> 00:10:12.240\nI'm gonna ahead and tell it that I wanna\ngo ahead and tell it not to expire.\n\n211\n00:10:12.240 --> 00:10:14.830\nBut again, you might want to\nset an expiration date on it.\n\n212\n00:10:14.830 --> 00:10:17.020\nAnd that's a good way to\neliminate a liability.\n\n213\n00:10:17.020 --> 00:10:21.100\nIf you have old data laying around,\nold backups, and somebody gets it.\n\n214\n00:10:21.100 --> 00:10:22.020\nBut the key is expired.\n\n215\n00:10:22.020 --> 00:10:23.560\nYour keys aren't even valid anymore.\n\n216\n00:10:23.560 --> 00:10:25.730\nThen they're not gonna be\nable to decrypt that data,\n\n217\n00:10:25.730 --> 00:10:29.725\nunless they create an entire environment\nto falsify the date, which can be done.\n\n218\n00:10:29.725 --> 00:10:30.500\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n219\n00:10:30.500 --> 00:10:34.210\nI guess you could make the argument there\nthe data's not necessarily that effective.\n\n220\n00:10:34.210 --> 00:10:37.250\nBut if I sent somebody an email.\n\n221\n00:10:37.250 --> 00:10:38.080\nThat was encrypted.\n\n222\n00:10:38.080 --> 00:10:41.640\nAnd they don't decrypt it in the time\nperiod before that certificate expires.\n\n223\n00:10:41.640 --> 00:10:42.490\nNow they can't decrypt it.\n\n224\n00:10:42.490 --> 00:10:45.200\nSo I've effectively set\na time bomb on that email.\n\n225\n00:10:45.200 --> 00:10:47.600\nIt's like the old\nMission Impossible episodes,\n\n226\n00:10:47.600 --> 00:10:49.930\nthis message will self\ndestruct in five seconds.\n\n227\n00:10:49.930 --> 00:10:52.540\nWell that's kind of what we're\npicking here, except it doesn't.\n\n228\n00:10:52.540 --> 00:10:54.080\nTruly destructive.\n\n229\n00:10:54.080 --> 00:10:54.945\nThat'd be pretty cool.\n\n230\n00:10:54.945 --> 00:10:56.380\n&gt;&gt; [LAUGH].\n&gt;&gt; All right, so\n\n231\n00:10:56.380 --> 00:10:57.680\nit's just asking me to confirm that.\n\n232\n00:10:57.680 --> 00:10:58.290\nI'll say yeah.\n\n233\n00:10:58.290 --> 00:10:59.780\nI don't want it to expire.\n\n234\n00:10:59.780 --> 00:11:02.220\nAnd then it's gonna construct my identity.\n\n235\n00:11:02.220 --> 00:11:04.610\nNow, my identity is gonna be\nthe name that's attached to this.\n\n236\n00:11:04.610 --> 00:11:06.720\nWhen you go to a website and\nthey've got an SSL certificate,\n\n237\n00:11:06.720 --> 00:11:08.590\nthere's all sorts of information on there.\n\n238\n00:11:08.590 --> 00:11:11.390\nThe company name and\nemail address and stuff.\n\n239\n00:11:11.390 --> 00:11:12.880\nWell, these are certificates\njust like that,\n\n240\n00:11:12.880 --> 00:11:14.780\nso they've gotta have\nthe same basic information.\n\n241\n00:11:14.780 --> 00:11:17.380\nSo I'll say that I'm Don Pezet.\n\n242\n00:11:17.380 --> 00:11:21.180\nI'll punch in my e-mail address,\nand then any comment that I have.\n\n243\n00:11:21.180 --> 00:11:23.700\nThis is Don's GPG Key.\n\n244\n00:11:23.700 --> 00:11:27.390\nI might put something else in there,\nwhatever kind of note it is.\n\n245\n00:11:27.390 --> 00:11:30.660\nIf I'm using this key just for backups,\ncoz you can have more than one key for\n\n246\n00:11:30.660 --> 00:11:34.090\ndifferent purposes,\nyou'd put what that was right in there.\n\n247\n00:11:34.090 --> 00:11:34.840\nAll right.\n\n248\n00:11:34.840 --> 00:11:35.850\nSo it's got the information there.\n\n249\n00:11:35.850 --> 00:11:39.070\nI'm okay with everything,\nso I'll tell it o for okay.\n\n250\n00:11:39.070 --> 00:11:41.865\nAnd now, I need to enter a pass phrase.\n\n251\n00:11:41.865 --> 00:11:42.510\nRight?\n\n252\n00:11:42.510 --> 00:11:45.220\nThe private key is going to\nhave a password attached to it.\n\n253\n00:11:45.220 --> 00:11:47.160\nYou can't use the private\nkey without that password.\n\n254\n00:11:47.160 --> 00:11:49.460\nThat's good,\nif somebody intercepts my private key,\n\n255\n00:11:49.460 --> 00:11:51.410\nwhich should never be in transit anyway.\n\n256\n00:11:51.410 --> 00:11:53.410\nBut if they manage to get it somehow,\n\n257\n00:11:53.410 --> 00:11:56.540\nwe can at least have one\nextra layer of security.\n\n258\n00:11:56.540 --> 00:11:59.290\nSo I'll punch in a password on that.\n\n259\n00:11:59.290 --> 00:12:03.400\nAnd I will re-enter it.\n\n260\n00:12:03.400 --> 00:12:05.210\nAnd now is the tricky part.\n\n261\n00:12:05.210 --> 00:12:07.230\nAnd this is something that\nI wanted to point out.\n\n262\n00:12:07.230 --> 00:12:10.990\nRight here it tells me we need to\ngenerate a lot of random bytes.\n\n263\n00:12:10.990 --> 00:12:13.860\nIt's gotta generate random data.\n\n264\n00:12:13.860 --> 00:12:16.760\nIn order to construct this key, okay?\n\n265\n00:12:16.760 --> 00:12:20.790\nNow, the random data normally comes\nfrom a hardware random number generator,\n\n266\n00:12:20.790 --> 00:12:24.760\nright, slash dev slash h-w random\nis what the device is called.\n\n267\n00:12:25.842 --> 00:12:29.265\nBut works great on a desktop,\nin fact if I was running this on my\n\n268\n00:12:29.265 --> 00:12:32.635\nactual laptop I probably be done\nalready if I already generate the key.\n\n269\n00:12:32.635 --> 00:12:34.035\nBut I just sitting here.\n\n270\n00:12:34.035 --> 00:12:36.075\nSitting here saying you need\nto generate that activity.\n\n271\n00:12:36.075 --> 00:12:41.185\nThe problem I'm running into is that\nI'm running this on a server, and\n\n272\n00:12:41.185 --> 00:12:43.955\nmy server is a Virtual Machine.\n\n273\n00:12:43.955 --> 00:12:45.790\nAnd on a Virtual Machine.\n\n274\n00:12:45.790 --> 00:12:49.770\nYou don't have a hardware random number\ngenerator, it's virtualized, okay?\n\n275\n00:12:49.770 --> 00:12:52.120\nSo in my case, this is a server.\n\n276\n00:12:52.120 --> 00:12:54.930\nIt's Red Hat Enterprise Linux Server\nrunning on top of VMWare.\n\n277\n00:12:54.930 --> 00:13:00.250\nAnd so VMWare is not passing a hardware\nrandom number generator to my client.\n\n278\n00:13:00.250 --> 00:13:02.470\nSome virtualization platforms do that.\n\n279\n00:13:02.470 --> 00:13:05.820\nIf I was running KVM,\nit doesn't do it by default, but\n\n280\n00:13:05.820 --> 00:13:09.000\nyou can turn it on and\nenable it to pass that information in.\n\n281\n00:13:09.000 --> 00:13:11.810\nVMWare, you can actually turn it on also,\nbut it's just not on by default.\n\n282\n00:13:11.810 --> 00:13:14.920\nSo now I've got a machine that's trying\nto generate a secure key [INAUDIBLE].\n\n283\n00:13:14.920 --> 00:13:18.890\nAnd the reason is, if it can't find\na hardware random number generator,\n\n284\n00:13:18.890 --> 00:13:22.100\nit starts looking for other sources of\nactivity to generate this random number\n\n285\n00:13:22.100 --> 00:13:24.440\nfrom It'll look for\nthings like mouse movements.\n\n286\n00:13:24.440 --> 00:13:28.790\nIt will look for keyboard strokes,\nit will look for processor fluctuations.\n\n287\n00:13:28.790 --> 00:13:31.590\nNone of that stuff is\npresent in a Virtual Machine.\n\n288\n00:13:31.590 --> 00:13:35.330\nAnd so this could sit here for\na long time, and\n\n289\n00:13:35.330 --> 00:13:37.990\nlet me show you why that's happening,\ncoz this is kind of a tricky one.\n\n290\n00:13:37.990 --> 00:13:43.510\nI'm gonna open up another session to\nthat server, and when I get into it.\n\n291\n00:13:43.510 --> 00:13:47.840\nWhat you’re actually dealing with is\nnot a problem with a random number.\n\n292\n00:13:47.840 --> 00:13:51.850\nBut a problem with what’s called entropy\nwhen you generate a random number it\n\n293\n00:13:51.850 --> 00:13:56.619\ncomes out of a pool, and if I were to say\nhey Zach, pick a number one through ten.\n\n294\n00:13:56.619 --> 00:13:57.140\nRight?\n\n295\n00:13:57.140 --> 00:13:59.760\nAnd you picked that number in your head,\nwhat would you pick?\n\n296\n00:13:59.760 --> 00:14:01.290\n&gt;&gt; Eight.\n&gt;&gt; Okay, so you picked eight,\n\n297\n00:14:01.290 --> 00:14:04.400\nnow I could have tried to guess that,\nright, what is it going to be?\n\n298\n00:14:04.400 --> 00:14:07.130\nWell I bet I could guess\nwhat number you picked.\n\n299\n00:14:07.130 --> 00:14:08.135\nIn just ten guesses.\n\n300\n00:14:08.135 --> 00:14:10.220\n&gt;&gt; [LAUGH]\n&gt;&gt; It's not very strong, right?\n\n301\n00:14:10.220 --> 00:14:10.770\nIt's random.\n\n302\n00:14:10.770 --> 00:14:12.490\nI have no idea why he picked eight, right?\n\n303\n00:14:12.490 --> 00:14:15.730\nSo just something in Zach's\nchemical mind made him pick eight.\n\n304\n00:14:15.730 --> 00:14:16.300\nI don't know why.\n\n305\n00:14:16.300 --> 00:14:18.236\n&gt;&gt; Cuz I'm hungry and\nI wanna eat something.\n\n306\n00:14:18.236 --> 00:14:20.270\n&gt;&gt; [LAUGH] But it would be easy enough for\nme to guess it,\n\n307\n00:14:20.270 --> 00:14:23.330\nbecause the pool I gave him\nwas really small, right?\n\n308\n00:14:23.330 --> 00:14:24.730\nAnd that's what the server\nis trying to avoid.\n\n309\n00:14:24.730 --> 00:14:26.540\nIt's trying to have a nice, big pool.\n\n310\n00:14:26.540 --> 00:14:28.900\nThe problem is, on a Virtual Machine,\nthat pool is not very big.\n\n311\n00:14:28.900 --> 00:14:31.690\nAnd let me show you,\nI usually don't have to look at this but\n\n312\n00:14:31.690 --> 00:14:32.930\nI just wanna say yes for completeness.\n\n313\n00:14:32.930 --> 00:14:37.247\nIf I take a look inside of\na little file on the hard at it's\n\n314\n00:14:37.247 --> 00:14:43.650\n/proc/sys/kernel/random/entropy_avail.\n\n315\n00:14:43.650 --> 00:14:49.930\nThat guy right there when I look in\nthere it's showing me how much random.\n\n316\n00:14:49.930 --> 00:14:53.870\nEntropy I've got as a pool\nto pull random numbers from.\n\n317\n00:14:53.870 --> 00:14:56.760\nAnd right now I've only\ngot 44 bytes of data.\n\n318\n00:14:56.760 --> 00:15:01.800\nNow, the Linux kernel\ntries to generate 4k.\n\n319\n00:15:01.800 --> 00:15:05.210\nIt tries to have 4096 bytes of entropy.\n\n320\n00:15:05.210 --> 00:15:07.640\nBut if it doesn't good\nhardware backing it,\n\n321\n00:15:07.640 --> 00:15:09.470\nthen you're gonna end up\nreally low like this.\n\n322\n00:15:09.470 --> 00:15:11.730\nIf I were to take my laptop, for example.\n\n323\n00:15:11.730 --> 00:15:14.630\nLet me just open up another tab.\n\n324\n00:15:14.630 --> 00:15:15.950\nSo this is my laptop.\n\n325\n00:15:15.950 --> 00:15:19.641\nIf I were to look at the same thing,\nsee how I've got 3562 or\n\n326\n00:15:19.641 --> 00:15:22.130\n3.5k of random entropies in there.\n\n327\n00:15:22.130 --> 00:15:22.980\nI'm on hardware.\n\n328\n00:15:22.980 --> 00:15:24.180\nHardware will do that.\n\n329\n00:15:24.180 --> 00:15:27.770\nBut in todays world we more and\nmore deal with virtual machines and\n\n330\n00:15:27.770 --> 00:15:33.230\nvirtual machines don't do that and you end\nup with really poor entropy like this.\n\n331\n00:15:33.230 --> 00:15:38.782\nAnd if I were to come in and let me do\na watch, I'm wanna say watch -n 0.5,\n\n332\n00:15:38.782 --> 00:15:41.235\nthere, okay.\n\n333\n00:15:41.235 --> 00:15:42.665\nSo this number is now updating.\n\n334\n00:15:42.665 --> 00:15:47.895\nAnd see, there's my entropy number,\nand it's slowly climbing up, okay?\n\n335\n00:15:47.895 --> 00:15:49.205\nIt's refilling.\n\n336\n00:15:49.205 --> 00:15:49.913\nBut over here,\n\n337\n00:15:49.913 --> 00:15:53.136\nI've got this key generation that's\ngonna be taking that data away.\n\n338\n00:15:53.136 --> 00:15:55.463\nSo we're gonna be seeing the number go up,\nand then it's gonna go down again, and\n\n339\n00:15:55.463 --> 00:15:56.013\nit's gonna go up.\n\n340\n00:15:56.013 --> 00:15:59.625\nBut it's never gonna get very high, coz\nI'm eating up all the available entropy.\n\n341\n00:15:59.625 --> 00:16:02.691\nSo, when you're dealing with virtual\nmachine, this is a real problem.\n\n342\n00:16:02.691 --> 00:16:05.287\nAnd there's hardware and\nrandom number generators you can add and\n\n343\n00:16:05.287 --> 00:16:07.450\nother things that can\nkinda fix this problem.\n\n344\n00:16:07.450 --> 00:16:09.410\nBut if you ever bump into this,\n\n345\n00:16:09.410 --> 00:16:12.420\nyou gotta find some way to generate\nentropy on the virtual machine.\n\n346\n00:16:12.420 --> 00:16:14.000\nAnd there's a few different ways.\n\n347\n00:16:14.000 --> 00:16:17.370\nOne little trick that I like to use,\nlet me open up yet another session.\n\n348\n00:16:17.370 --> 00:16:19.510\nI should have used,\nif I knew I was gonna do as many sessions,\n\n349\n00:16:19.510 --> 00:16:22.940\nI would have used team ups or\nsomething like that.\n\n350\n00:16:22.940 --> 00:16:25.063\nBut we'll do it this way.\n\n351\n00:16:26.840 --> 00:16:29.132\nI'm gonna bump up to a root shell for\na second.\n\n352\n00:16:29.132 --> 00:16:31.440\nAnd I'm gonna thrash the hard drive,\nright?\n\n353\n00:16:31.440 --> 00:16:33.300\nThrashing the hard drive\ngenerates entropy.\n\n354\n00:16:33.300 --> 00:16:36.670\nIt's hardware activity that\nit can use as a random seed.\n\n355\n00:16:36.670 --> 00:16:38.370\nAnd so,\nI can do this a few different ways.\n\n356\n00:16:38.370 --> 00:16:45.104\nI could pull a really big directory\nlisting, like ls -laR on the root.\n\n357\n00:16:45.104 --> 00:16:48.290\nAnd that's gonna list every file\nacross the entire hard drive.\n\n358\n00:16:48.290 --> 00:16:50.020\nBut that's only so much data.\n\n359\n00:16:50.020 --> 00:16:54.451\nSo the one that I like to do is just do\na straight up md5sum of the entire hard\n\n360\n00:16:54.451 --> 00:16:54.962\ndrive.\n\n361\n00:16:54.962 --> 00:16:58.886\nWhich actually I need to know\nwhat the hard drive is, don't I?\n\n362\n00:16:58.886 --> 00:17:04.129\nSo, if I take /dev/SDA1.\n\n363\n00:17:04.129 --> 00:17:08.120\nSo, if I say md5sum/dev/SDA1.\n\n364\n00:17:08.120 --> 00:17:13.470\nI don't actually care what the md5sum is,\nbut it's now gotta read the entire\n\n365\n00:17:13.470 --> 00:17:17.730\nhard drive to generate this check sum\nvalue and, my goodness, that went fast.\n\n366\n00:17:17.730 --> 00:17:20.570\nThat must've been a partition or\nsomething really small.\n\n367\n00:17:20.570 --> 00:17:21.580\nSo, let me do SDA2.\n\n368\n00:17:21.580 --> 00:17:23.060\nSo, it's gonna run, though.\n\n369\n00:17:23.060 --> 00:17:24.570\nAnd it's generating a ton of activity, and\n\n370\n00:17:24.570 --> 00:17:28.650\nif I watch my entropy number,\nwell, it's not really climbing.\n\n371\n00:17:28.650 --> 00:17:31.410\nAnd the reason it's not is because,\nmeanwhile, back over here,\n\n372\n00:17:31.410 --> 00:17:34.820\nmy key generation is eating\nup all the available entropy.\n\n373\n00:17:34.820 --> 00:17:36.590\nAnd I'm actually getting\na warning right now.\n\n374\n00:17:36.590 --> 00:17:39.910\nSee how it's telling me we\nstill need to generate it.\n\n375\n00:17:39.910 --> 00:17:41.850\nWe aren't getting that information.\n\n376\n00:17:41.850 --> 00:17:43.630\nSo I'm kind of bumping into a problem.\n\n377\n00:17:43.630 --> 00:17:44.250\nThere it goes.\n\n378\n00:17:44.250 --> 00:17:45.640\nIt just finished, right?\n\n379\n00:17:45.640 --> 00:17:49.420\nSo, bumping into that\nproblem is a real issue when\n\n380\n00:17:49.420 --> 00:17:50.680\nyou're dealing with virtual servers.\n\n381\n00:17:50.680 --> 00:17:53.710\nWhen you're dealing with Cloud servers,\nif you've deployed in AWS,\n\n382\n00:17:53.710 --> 00:17:57.660\nso Azure or Google Compute,\nthis is a real problem.\n\n383\n00:17:57.660 --> 00:17:59.440\nSo definitely something you\nwanna pay attention to,\n\n384\n00:17:59.440 --> 00:18:01.440\nand make sure you generate good entropy.\n\n385\n00:18:01.440 --> 00:18:03.790\nAnd now, if I go back and\nlook at my entropy, see how it's climbed?\n\n386\n00:18:03.790 --> 00:18:05.310\nI'm over 1,000 now.\n\n387\n00:18:05.310 --> 00:18:07.540\nI never got over 50 earlier, but\n\n388\n00:18:07.540 --> 00:18:10.280\nthat's because GPG is not\ndraining my entropy pool.\n\n389\n00:18:10.280 --> 00:18:12.330\nSo that's something\nthat you may bump into.\n\n390\n00:18:12.330 --> 00:18:15.090\nAgain, if you were doing this on your\ndesktop, none of that would have happened.\n\n391\n00:18:15.090 --> 00:18:17.219\nYou just [SOUND] breeze right through it.\n\n392\n00:18:17.219 --> 00:18:18.730\nAnd there's other tricks.\n\n393\n00:18:18.730 --> 00:18:20.790\nI'll put some things in the show\nnotes that you can use.\n\n394\n00:18:20.790 --> 00:18:22.640\nYou can install the RNG tools package,\n\n395\n00:18:22.640 --> 00:18:26.030\nwhich helps with generating some\nother random number generation.\n\n396\n00:18:26.030 --> 00:18:28.200\nIt helps you kinda get\naround this as well.\n\n397\n00:18:28.200 --> 00:18:31.000\nThere's a few different ways to fix that,\nbut that's a whole topic for\n\n398\n00:18:31.000 --> 00:18:32.480\nanother series one day.\n\n399\n00:18:32.480 --> 00:18:35.450\nBut right now, my pool,\nit's almost fully refreshed at this point.\n\n400\n00:18:35.450 --> 00:18:39.770\nI can go ahead and\nstop the MD5 sum, I don't need that.\n\n401\n00:18:39.770 --> 00:18:40.626\nAnd so now,\n\n402\n00:18:40.626 --> 00:18:46.303\nthat pool will just continue to grow\nuntil it gets somewhere over 4,000.\n\n403\n00:18:46.303 --> 00:18:48.125\nIt'll usually stop, and\nthen it'll just sit there and\n\n404\n00:18:48.125 --> 00:18:50.162\nconstantly get drained any time\nwe deal with random numbers.\n\n405\n00:18:50.162 --> 00:18:54.246\nBut at this point I now have a key, right?\n\n406\n00:18:54.246 --> 00:18:55.820\nAnd I know the key is good.\n\n407\n00:18:55.820 --> 00:18:57.470\nI know it's using RSA.\n\n408\n00:18:57.470 --> 00:18:59.270\nI know it's 2,048 bit.\n\n409\n00:18:59.270 --> 00:19:00.680\nI know I generated it.\n\n410\n00:19:00.680 --> 00:19:03.950\nIt's not some default key that\ncame pre-packaged with the system.\n\n411\n00:19:03.950 --> 00:19:05.370\nThat's a recipe for disaster.\n\n412\n00:19:05.370 --> 00:19:10.020\nBut now I know I've got a good key,\nand I can use this for\n\n413\n00:19:10.020 --> 00:19:12.070\nencryption and decryption.\n\n414\n00:19:12.070 --> 00:19:17.025\nNow what I just did is really what\nthe recipient of the data would do.\n\n415\n00:19:17.025 --> 00:19:20.765\nWhen you're dealing with data, you've\ngot a sender and a recipient, right?\n\n416\n00:19:20.765 --> 00:19:23.965\nThe sender encrypts data and sends it.\n\n417\n00:19:23.965 --> 00:19:26.681\nThe recipient receives it and decrypts it.\n\n418\n00:19:26.681 --> 00:19:31.375\nWell, the person who decrypts is the one\nwho has to have the private key.\n\n419\n00:19:31.375 --> 00:19:34.425\nAnd the public key is generated\nfrom the private key.\n\n420\n00:19:34.425 --> 00:19:36.991\nSo it's funny,\nif I want to send a file to Zach,\n\n421\n00:19:36.991 --> 00:19:40.360\nZach's the one who actually\nhas to start the process.\n\n422\n00:19:40.360 --> 00:19:42.720\nHe would have to generate\nthe private key so\n\n423\n00:19:42.720 --> 00:19:46.710\nthat in turn he could create the public\nkey and send me his public key.\n\n424\n00:19:46.710 --> 00:19:50.222\nSo what we just saw is what\nthe recipient of the data would do.\n\n425\n00:19:50.222 --> 00:19:52.092\nThey're generating that private key.\n\n426\n00:19:52.092 --> 00:19:55.995\nAnd so I've done that, and it's displaying\non the screen for me here, the key\n\n427\n00:19:55.995 --> 00:20:00.630\nfingerprint for my public key, because it\ngenerated a private and public key pair.\n\n428\n00:20:00.630 --> 00:20:04.540\nBut I've now got those available, and\nI can use those with GPG to encrypt and\n\n429\n00:20:04.540 --> 00:20:05.640\nstart to transmit data.\n\n430\n00:20:05.640 --> 00:20:11.570\nSo, I've got that in place, and\nnow we're able to actually use GPG.\n\n431\n00:20:11.570 --> 00:20:15.360\n&gt;&gt; So, Don, now that we have the key,\nwhat do we do next?\n\n432\n00:20:15.360 --> 00:20:16.484\nI'm on pins and needles [LAUGH].\n\n433\n00:20:16.484 --> 00:20:21.010\nOkay, so if I want, Leo,\nif I want you to send me some data,\n\n434\n00:20:21.010 --> 00:20:23.120\nwe'll keep it the same way so\nit doesn't get confusing.\n\n435\n00:20:23.120 --> 00:20:24.440\nI wanna end you some data.\n\n436\n00:20:24.440 --> 00:20:28.460\nSo you just ran this utility, you just\ngenerated this private key and public key.\n\n437\n00:20:28.460 --> 00:20:32.092\nSo the next step is you need to\nsend me your public key, okay?\n\n438\n00:20:32.092 --> 00:20:39.040\nSo to do that,\nyou're gonna run gpg --export --output.\n\n439\n00:20:39.040 --> 00:20:42.780\nYou're exporting your public key, and\nyou want to output that to a file.\n\n440\n00:20:42.780 --> 00:20:46.750\nI'll just drop it in my home file and\nI'll call it public.key.\n\n441\n00:20:46.750 --> 00:20:50.840\nYou're normally give it like your name and\nyou wouldn't call .key,\n\n442\n00:20:50.840 --> 00:20:52.830\nyou'd call it .pub.\n\n443\n00:20:52.830 --> 00:20:54.460\nYou can call it whatever you want.\n\n444\n00:20:54.460 --> 00:20:55.480\n&gt;&gt; [LAUGH]\n&gt;&gt; The reality is you call it\n\n445\n00:20:55.480 --> 00:20:56.210\nwhatever you like.\n\n446\n00:20:56.210 --> 00:20:57.090\n&gt;&gt; Call it Bob.\n\n447\n00:20:57.090 --> 00:21:00.030\n&gt;&gt; Usually,\nwhen we say .key it's the private key, and\n\n448\n00:21:00.030 --> 00:21:01.340\nwhen we say .pub, it's the public key.\n\n449\n00:21:01.340 --> 00:21:02.380\nSo, I just want to keep this straight and\n\n450\n00:21:02.380 --> 00:21:04.690\nremember this is the public\nkey that I'm exporting.\n\n451\n00:21:04.690 --> 00:21:07.960\nAnd so, when I run that,\nit's gonna output a file, and\n\n452\n00:21:07.960 --> 00:21:10.000\nI can see it right here,\ndpezet.pub, right?\n\n453\n00:21:11.210 --> 00:21:16.760\nAnd if I take a look at what's in that\nfile, well, it's binary data, right?\n\n454\n00:21:16.760 --> 00:21:21.260\nBecause it is that public key,\nand so I can't actually read it.\n\n455\n00:21:21.260 --> 00:21:25.320\nBut now, I would send this key to\nthe person who wanted to send me data.\n\n456\n00:21:25.320 --> 00:21:28.050\nSo if this were you, Zach,\nyou'd send me this key.\n\n457\n00:21:28.050 --> 00:21:29.900\nNow, how do you send it to me?\n\n458\n00:21:29.900 --> 00:21:30.810\nE-mail it.\n\n459\n00:21:30.810 --> 00:21:34.670\nYou can just put it on FTP server,\nyou stick it on the website.\n\n460\n00:21:34.670 --> 00:21:37.160\nThe public key is public.\n\n461\n00:21:37.160 --> 00:21:38.340\nWe don't have to keep this hidden.\n\n462\n00:21:38.340 --> 00:21:39.420\nIt's not a secret.\n\n463\n00:21:39.420 --> 00:21:41.880\nI don't care if people\nintercept my public key.\n\n464\n00:21:41.880 --> 00:21:43.660\nI can put this on my business card.\n\n465\n00:21:43.660 --> 00:21:45.590\nKinda hard to do but [LAUGH] whatever.\n\n466\n00:21:45.590 --> 00:21:48.240\nYou can make it freely and\npublicly available and you can say,\n\n467\n00:21:48.240 --> 00:21:53.010\nhey, if anybody want to send me\nencrypted data, here's my public key.\n\n468\n00:21:53.010 --> 00:21:54.230\nUse my this public key to encrypt it.\n\n469\n00:21:54.230 --> 00:21:58.290\nBecause a public key will let you\nencrypt it, it won't let you decrypt.\n\n470\n00:21:58.290 --> 00:22:01.490\nSo if somebody gets\na hold of my public key,\n\n471\n00:22:01.490 --> 00:22:05.760\nI don't care because all they can do\nis encrypt data and send it to me.\n\n472\n00:22:05.760 --> 00:22:07.080\nThey can't decrypt any of mine.\n\n473\n00:22:07.080 --> 00:22:11.600\nAnd there's actually a few different\nservices out there that act as GPG,\n\n474\n00:22:11.600 --> 00:22:15.700\nor PGP key,\ncall it key escrow or whatever,\n\n475\n00:22:15.700 --> 00:22:19.530\nthey're these big directories where\nthey have everybody's public key.\n\n476\n00:22:19.530 --> 00:22:21.930\nSo if I wanna send something to Zach,\nI don't have to reach out to Zach and say,\n\n477\n00:22:21.930 --> 00:22:22.750\nhey, can I get your public key?\n\n478\n00:22:22.750 --> 00:22:25.490\nI can just go to this directory and\nfind his public key, and\n\n479\n00:22:25.490 --> 00:22:26.580\nnow I can send that data over.\n\n480\n00:22:26.580 --> 00:22:29.030\nSo there's a few different\norganizations that do that.\n\n481\n00:22:29.030 --> 00:22:32.100\nBut in my scenario, I just wanna\nencrypt this data for my own sake.\n\n482\n00:22:32.100 --> 00:22:34.610\nSo I don't need a crazy directory or\nanything like this.\n\n483\n00:22:34.610 --> 00:22:35.780\nI just need this public key,\n\n484\n00:22:35.780 --> 00:22:39.230\ncuz that's what I'll be able to\nuse to encrypt data with, right?\n\n485\n00:22:39.230 --> 00:22:43.365\nSo he's gonna send that key over to me,\nso I get it.\n\n486\n00:22:43.365 --> 00:22:44.435\nAnd once I've got it,\n\n487\n00:22:44.435 --> 00:22:49.475\nnow I'll be able to encrypt\nthe data using his key or whatever.\n\n488\n00:22:49.475 --> 00:22:52.115\nAnd then be able to send it\nacross the network securely.\n\n489\n00:22:52.115 --> 00:22:55.545\nSo that's basically getting it output, and\n\n490\n00:22:55.545 --> 00:23:00.255\nhaving that kind of step done as far\nas the recipient is gonna be concerned.\n\n491\n00:23:00.255 --> 00:23:02.685\nAfter that,\nwe move over to the sender side.\n\n492\n00:23:02.685 --> 00:23:04.732\n&gt;&gt; So how does the sender use the key?\n\n493\n00:23:04.732 --> 00:23:07.950\nAll right, so on the sender side,\nif they are receiving this key,\n\n494\n00:23:07.950 --> 00:23:08.950\nthey need to import it.\n\n495\n00:23:08.950 --> 00:23:13.218\nSo what I just ran was gpg --export,\nright?\n\n496\n00:23:13.218 --> 00:23:17.278\nNow I'm gonna say gpg --import,\n\n497\n00:23:17.278 --> 00:23:21.208\nand you point to that key, right?\n\n498\n00:23:21.208 --> 00:23:23.914\nAnd that's gonna add my key,\nor Zach's key, or\n\n499\n00:23:23.914 --> 00:23:26.234\nwhoever's public key to your database.\n\n500\n00:23:26.234 --> 00:23:29.503\nSo the sender,\nwhoever is gonna be sending this data,\n\n501\n00:23:29.503 --> 00:23:32.000\nis going to import the recipient's key.\n\n502\n00:23:32.000 --> 00:23:35.300\nGotta have a copy of their key so\nyou can encrypt data with it, right?\n\n503\n00:23:35.300 --> 00:23:37.470\nI don't need to import this\none cuz I've already got it.\n\n504\n00:23:37.470 --> 00:23:40.780\nBut you would just say --import,\nand you'd point to that key.\n\n505\n00:23:40.780 --> 00:23:44.960\nAnd once it's imported,\nyou can do a gpg --list-key,\n\n506\n00:23:44.960 --> 00:23:48.212\njust to make sure that you've got it,\nokay?\n\n507\n00:23:48.212 --> 00:23:51.476\nYou might already have a key\nfrom some previous event, and so\n\n508\n00:23:51.476 --> 00:23:53.400\nyou don't need to import it again.\n\n509\n00:23:53.400 --> 00:23:56.681\nBut I can see in my key ring here\nI've got Don Pezet's GPG key,\n\n510\n00:23:56.681 --> 00:23:59.289\nor anybody else's that I\nmight have brought in.\n\n511\n00:23:59.289 --> 00:24:00.018\nIt shows up right there.\n\n512\n00:24:00.018 --> 00:24:02.893\nSo I've got the key and\nnow I am ready to use it.\n\n513\n00:24:02.893 --> 00:24:04.540\nAnd using it it's really not that hard.\n\n514\n00:24:04.540 --> 00:24:11.020\nWe just come in and\nwe say gpg --encrypt -r,\n\n515\n00:24:11.020 --> 00:24:16.270\nand then we specify who is that\nwe want to use the key for.\n\n516\n00:24:16.270 --> 00:24:20.664\nAnd so if you look every user has a UID,\na user ID.\n\n517\n00:24:20.664 --> 00:24:26.410\nAnd we can use that identity to be able\nto pick which key we're going to use.\n\n518\n00:24:26.410 --> 00:24:30.830\nAnd a lot of times we'll just use\nan email address to feed that.\n\n519\n00:24:30.830 --> 00:24:33.197\nSo I'll say don@itpro.tv.\n\n520\n00:24:33.197 --> 00:24:34.620\nSo I can pick up off of that.\n\n521\n00:24:34.620 --> 00:24:36.690\nAnd then we tell it what\nwe want to encrypt.\n\n522\n00:24:36.690 --> 00:24:41.090\nI've got a file, let's see right here,\nwhich is the full text of\n\n523\n00:24:41.090 --> 00:24:44.650\nAlice's Adventures in Wonderland,\nproject Gutenberg this morning.\n\n524\n00:24:44.650 --> 00:24:46.990\nSo it's a big text file, a lot of data.\n\n525\n00:24:46.990 --> 00:24:50.695\nAnd if I were to sent this via email, it's\nplain text, somebody could intercept it,\n\n526\n00:24:50.695 --> 00:24:52.198\nread the whole thing, modify it.\n\n527\n00:24:52.198 --> 00:24:55.500\nChange it, all of a sudden it becomes\nBob's Adventures in Wonderland.\n\n528\n00:24:55.500 --> 00:24:56.484\nAnd when Zach-\n&gt;&gt; Yeah, Bob,\n\n529\n00:24:56.484 --> 00:24:57.372\nthere he goes again I knew it [LAUGH].\n\n530\n00:24:57.372 --> 00:24:58.410\n&gt;&gt; [LAUGH] He gets in everything.\n\n531\n00:24:58.410 --> 00:25:01.260\nSo when Zach receives it,\nhe doesn't know it has been tampered with.\n\n532\n00:25:01.260 --> 00:25:05.180\nBut if I encrypt it and\nthat's really the big deal.\n\n533\n00:25:05.180 --> 00:25:08.820\nIf I encrypt it then it won't\nbe able to be tampered with, and\n\n534\n00:25:08.820 --> 00:25:09.750\nit won't be able to be read.\n\n535\n00:25:09.750 --> 00:25:12.100\nAnd so I'm gonna feed that file into it.\n\n536\n00:25:12.100 --> 00:25:15.210\nAnd when I run that,\nit's a pretty fast operation.\n\n537\n00:25:15.210 --> 00:25:22.620\nIt takes that public key and uses that\nas the seed to encrypt that file.\n\n538\n00:25:22.620 --> 00:25:26.230\nAnd when it's done, see how I've\ngot a second file all of a sudden?\n\n539\n00:25:26.230 --> 00:25:30.240\nBefore, I had just Alice's Adventures\nin Wonderland.txt.\n\n540\n00:25:30.240 --> 00:25:35.120\nNow I've got one that .gpg and\nit's even smaller, look, it compressed it.\n\n541\n00:25:35.120 --> 00:25:41.830\nIt was 173k now it's only 61k in size but\nit's been fully encrypted.\n\n542\n00:25:41.830 --> 00:25:46.440\nIf I were to pull up\nthe unencrypted version.\n\n543\n00:25:47.750 --> 00:25:50.920\nHere I can see the header in\nProject Gutenberg's Alice's Adventures in\n\n544\n00:25:50.920 --> 00:25:54.690\nWonderland, and then I can keep\nreading and there's all the text.\n\n545\n00:25:54.690 --> 00:26:00.540\nBut if I were to do that for the encrypted\none and pull it up, well, what do I get?\n\n546\n00:26:00.540 --> 00:26:03.290\nActually here, let me clear my screen\ncuz we're seeing a little overlap.\n\n547\n00:26:03.290 --> 00:26:04.376\nThere we go.\n\n548\n00:26:04.376 --> 00:26:06.911\nI see binary data.\n\n549\n00:26:08.020 --> 00:26:09.495\nAnd it's just a jumbled mess.\n\n550\n00:26:09.495 --> 00:26:12.420\nThis is a cipher text, it's meaningless\nto anybody who intercepts it,\n\n551\n00:26:12.420 --> 00:26:17.470\nand if they change even one character\nin it, it invalidates the whole thing.\n\n552\n00:26:17.470 --> 00:26:21.750\nThis file can now be safely\nstored on a USB key.\n\n553\n00:26:21.750 --> 00:26:27.845\nIt can be safely emailed to somebody,\nit can be made publicly available.\n\n554\n00:26:27.845 --> 00:26:32.692\nAnd unless somebody gets my private key,\nor has a computer of sufficient strength\n\n555\n00:26:32.692 --> 00:26:37.414\nto brute force a private key, which really\nwould take quantum computing to do.\n\n556\n00:26:37.414 --> 00:26:39.440\nThen they are not going to\nbe able to get at this data.\n\n557\n00:26:39.440 --> 00:26:40.770\nYou've got to have the private key.\n\n558\n00:26:40.770 --> 00:26:42.170\nThat's the secret.\n\n559\n00:26:42.170 --> 00:26:46.830\nAnd, Zach sent me his public key, so\nI can encrypt this with his public key.\n\n560\n00:26:46.830 --> 00:26:49.770\nI can't even decrypt it, even though I'm\nthe one who encrypted it in the first\n\n561\n00:26:49.770 --> 00:26:51.350\nplace, because I used his public key.\n\n562\n00:26:51.350 --> 00:26:55.500\nI can send it to him, and he can use\nhis private key to decrypt it and\n\n563\n00:26:55.500 --> 00:26:56.050\nget at that data.\n\n564\n00:26:56.050 --> 00:26:57.790\nBut right now, that's nicely encrypted.\n\n565\n00:26:57.790 --> 00:27:01.183\nAnd this lets me place it on a hard drive,\non a USB key, on email.\n\n566\n00:27:01.183 --> 00:27:05.849\nAnd I know that on the other end,\nif I'm running Windows or Linux or Mac,\n\n567\n00:27:05.849 --> 00:27:08.690\nthey've all got GPG clients as well or\nPGP.\n\n568\n00:27:08.690 --> 00:27:10.534\nYou can use the official paid client, and\n\n569\n00:27:10.534 --> 00:27:13.490\nthey will be able to decrypt this\nif they have that public key.\n\n570\n00:27:13.490 --> 00:27:16.976\nThat's the real advantage of this, it's\none of the most flexible ways to encrypt\n\n571\n00:27:16.976 --> 00:27:19.010\nthe data and\nit's encrypted your data at rest.\n\n572\n00:27:19.010 --> 00:27:20.700\nIt's encrypted on my hard drive.\n\n573\n00:27:20.700 --> 00:27:23.390\nBut if I email and stuff,\nit stays encrypted the whole time.\n\n574\n00:27:23.390 --> 00:27:25.870\nSo, this can give us true\nend-to-end encryption.\n\n575\n00:27:25.870 --> 00:27:29.700\nAnd that's why GPG is so\npowerful for protecting this data.\n\n576\n00:27:29.700 --> 00:27:32.520\nThe only time it can't be encrypted\nis when it's called data in use.\n\n577\n00:27:32.520 --> 00:27:35.110\nIf I want to read the file I\nhave got to decrypt if first.\n\n578\n00:27:35.110 --> 00:27:36.860\nI can't read it like it is right now.\n\n579\n00:27:36.860 --> 00:27:40.030\nSo, I've taken care of data in rest and\ndata in motion.\n\n580\n00:27:40.030 --> 00:27:41.860\nI haven't taken for a data in.\n\n581\n00:27:41.860 --> 00:27:46.715\n&gt;&gt; So the now the recipient can decrypt\nthe data and find out about the Java walk.\n\n582\n00:27:46.715 --> 00:27:48.520\n[LAUGH]\n&gt;&gt; Yeah, absolutely.\n\n583\n00:27:48.520 --> 00:27:50.550\nAnd in fact that's really the easiest\npart of this whole thing.\n\n584\n00:27:50.550 --> 00:27:53.010\nSo, as the recipient,\nyou send me your public key.\n\n585\n00:27:53.010 --> 00:27:56.830\nI encrypt this file with your public\nkey and I send it back to you.\n\n586\n00:27:56.830 --> 00:28:01.430\nWell, on your side here,\nI'm gonna get rid of the unencrypted ones.\n\n587\n00:28:01.430 --> 00:28:07.140\nSo it's gone, and all I have now is\nthe encrypted file, and that's it.\n\n588\n00:28:07.140 --> 00:28:09.160\nSo on your side, you'd receive it.\n\n589\n00:28:09.160 --> 00:28:11.100\nYou've got your private key.\n\n590\n00:28:11.100 --> 00:28:15.920\nSo all you type is gpg\nfollowed by the file name.\n\n591\n00:28:15.920 --> 00:28:17.410\nAnd so you need to punch that in.\n\n592\n00:28:17.410 --> 00:28:20.200\nAnd when you do that, it will\nautomatically apply your private key.\n\n593\n00:28:20.200 --> 00:28:24.400\nWell remember when I create to my\nprivate key, I assigned a password.\n\n594\n00:28:24.400 --> 00:28:26.350\nSo I've got to apply my passphrase.\n\n595\n00:28:26.350 --> 00:28:29.104\nIf I leave my computer unlocked,\nI know sitting down and\n\n596\n00:28:29.104 --> 00:28:31.000\njust really quick decrypting all my stuff.\n\n597\n00:28:31.000 --> 00:28:34.120\nSo they've got to provide that passphrase.\n\n598\n00:28:34.120 --> 00:28:38.950\nAnd once they do, it applies the key and\nit decrypts the data.\n\n599\n00:28:38.950 --> 00:28:42.740\nAnd now I've got that unencrypted\nversion of the data right there.\n\n600\n00:28:42.740 --> 00:28:45.560\nSo if these were backups and\nsomething really went bad and\n\n601\n00:28:45.560 --> 00:28:49.720\nI needed to restore, all I would do is\ncome and decrypt the backup and now,\n\n602\n00:28:49.720 --> 00:28:52.100\nI could go and restore it and\nput it back in my system.\n\n603\n00:28:52.100 --> 00:28:52.810\nBut meanwhile,\n\n604\n00:28:52.810 --> 00:28:56.620\nit was sitting there encrypted all\nthat time nice, safe, and secure.\n\n605\n00:28:56.620 --> 00:28:58.040\nAnd that's the real advantage of GPG.\n\n606\n00:28:58.040 --> 00:28:59.310\nIt's great technology.\n\n607\n00:28:59.310 --> 00:29:00.010\nIt's really powerful.\n\n608\n00:29:00.010 --> 00:29:03.750\nIt's build into almost every\ndistro that's out there.\n\n609\n00:29:03.750 --> 00:29:05.760\nSo, definitely something\nto take advantage of and\n\n610\n00:29:05.760 --> 00:29:11.125\nfar easier to use than things like LUKS\nDisc Encryption, which even things like\n\n611\n00:29:11.125 --> 00:29:14.830\nLUKS which is really good it only does\ndata at rest it doesn't do data in motion.\n\n612\n00:29:14.830 --> 00:29:16.900\nGPG gives you end-to-end security, so\n\n613\n00:29:16.900 --> 00:29:19.810\nit's a great technology for\nensuring that data stays safe.\n\n614\n00:29:19.810 --> 00:29:20.938\n&gt;&gt; Don great job as usual and\n\n615\n00:29:20.938 --> 00:29:24.665\nthoroughly understandable because of\nthe way you present it, thank you so much.\n\n616\n00:29:24.665 --> 00:29:26.432\n&gt;&gt; [LAUGHS]\n&gt;&gt; Data encryption with\n\n617\n00:29:26.432 --> 00:29:28.070\nGPG any final words.\n\n618\n00:29:28.070 --> 00:29:31.137\n&gt;&gt; Key thing here well that's\na bit of a pun, the keys.\n\n619\n00:29:31.137 --> 00:29:33.380\n&gt;&gt; [LAUGH]\n&gt;&gt; Remember your keys,\n\n620\n00:29:33.380 --> 00:29:35.770\nwhat happens if you lose your private key?\n\n621\n00:29:35.770 --> 00:29:37.360\nYou can't decrypt this data.\n\n622\n00:29:37.360 --> 00:29:38.520\n&gt;&gt; You can't get in the house.\n\n623\n00:29:38.520 --> 00:29:39.110\n&gt;&gt; Absolutely.\n\n624\n00:29:39.110 --> 00:29:41.180\nSo you need to make sure\nthat you back up your keys,\n\n625\n00:29:41.180 --> 00:29:42.440\nthat you keep them somewhere safe.\n\n626\n00:29:42.440 --> 00:29:45.013\nAnd when I say safe, I don't mean\nput them on another server, or\n\n627\n00:29:45.013 --> 00:29:46.390\nkeep them in your desktop.\n\n628\n00:29:46.390 --> 00:29:51.030\nI mean, burn them to a CD and lock them\nin a safe, lock them in a vault cuz if\n\n629\n00:29:51.030 --> 00:29:52.830\nsomebody gets those private keys,\nthey can decrypt your data.\n\n630\n00:29:52.830 --> 00:29:56.080\nBut you need to have a backup\nof your keys somewhere so\n\n631\n00:29:56.080 --> 00:29:57.360\nthat you can get that information.\n\n632\n00:29:57.360 --> 00:29:58.820\nAnd there's a few\ndifferent ways to do that.\n\n633\n00:29:59.830 --> 00:30:02.380\nIt starts to go beyond what I\ncan kind of fit in this show.\n\n634\n00:30:02.380 --> 00:30:05.180\nBut, for example, my actual private key,\n\n635\n00:30:05.180 --> 00:30:08.870\nI keep backed up onto this guy right here,\nmy YubiKey.\n\n636\n00:30:08.870 --> 00:30:10.550\n&gt;&gt; Aah.\n&gt;&gt; So, I got a YubiKey on my keychain,\n\n637\n00:30:10.550 --> 00:30:12.080\nand I'm able to back it up to that.\n\n638\n00:30:12.080 --> 00:30:14.992\nBut, different people have different\nthings that they use for backing it up.\n\n639\n00:30:14.992 --> 00:30:18.580\nBut you definitely want to keep a second\ncopy of your private key somewhere.\n\n640\n00:30:18.580 --> 00:30:20.680\nSomewhere very safe because\nif somebody gets it,\n\n641\n00:30:20.680 --> 00:30:22.880\nit is literally the keys to the kingdom.\n\n642\n00:30:22.880 --> 00:30:24.220\n&gt;&gt; Better be safe than sorry.\n\n643\n00:30:24.220 --> 00:30:27.370\nLinux security techniques, make sure you\nwatch all the videos in this series.\n\n644\n00:30:27.370 --> 00:30:28.427\nYou'll be glad you did.\n\n645\n00:30:28.427 --> 00:30:30.050\nGreat job, Don, thank you so much.\n\n646\n00:30:30.050 --> 00:30:31.650\nAnd thank you for watching ITProTV.\n\n647\n00:30:31.650 --> 00:30:34.660\nRemember, a good ITPro is always learning.\n\n648\n00:30:34.660 --> 00:30:35.780\nI'm Zach Memos.\n\n649\n00:30:35.780 --> 00:30:36.530\n&gt;&gt; And I'm Don Pezet.\n\n650\n00:30:36.530 --> 00:30:38.845\n&gt;&gt; And we'll see you very soon.\n\n651\n00:30:38.845 --> 00:30:44.921\n[MUSIC]\n\n652\n00:30:44.921 --> 00:30:47.870\n&gt;&gt; Thank you for watching ITPRO.TV\n\n",
          "vimeoId": "a"
        },
        {
          "description": "Don and Zach discuss file integrity, verifying if files have been tampered with, MD5 has been compromised, where we get checksums from, if multiple files may be checked at one time, is it possible to compromise checksum files, GPG public keys, PGP keys, and deleting the GPG keys.",
          "length": "1872",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-3-md5_and_sha_checksums-081817-PGM.00_30_56_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-3-md5_and_sha_checksums-081817-PGM.00_30_56_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-3-md5_and_sha_checksums-081817-PGM.00_30_56_01.Still001-sm.jpg",
          "title": "MD5 and SHA Checksums",
          "transcript": "WEBVTT\n\n1\n00:00:00.072 --> 00:00:02.915\nWelcome to ITPRO.TV,\nI'm your host, Don Pezet.\n\n2\n00:00:02.915 --> 00:00:06.646\n[CROSSTALK]\n\n3\n00:00:06.646 --> 00:00:08.291\n[MUSIC]\n\n4\n00:00:08.291 --> 00:00:12.178\n&gt;&gt; You're watching ITPRO.TV.\n\n5\n00:00:12.178 --> 00:00:14.648\n&gt;&gt; Hello and thank you for\nchoosing ITPRO.TV,\n\n6\n00:00:14.648 --> 00:00:16.810\nhelping you learn wherever you go.\n\n7\n00:00:16.810 --> 00:00:21.630\nI'm your host Zach Memos as we continue\non with Linux security techniques.\n\n8\n00:00:21.630 --> 00:00:26.070\nWe're gonna be looking at MD5 and SHA\nchecksums and the person bringing us all\n\n9\n00:00:26.070 --> 00:00:30.210\nthe information we need is our IT PRO and\nall around good guy, Don Pezet.\n\n10\n00:00:30.210 --> 00:00:31.550\nHey Don, good to see you again sir.\n\n11\n00:00:31.550 --> 00:00:32.675\n&gt;&gt; Hey, great to see you Zach,\n\n12\n00:00:32.675 --> 00:00:35.790\nI\"m ready to dive back into the world\nof Linux security techniques.\n\n13\n00:00:35.790 --> 00:00:40.090\nAnd like Zach said in this episode we're\ngonna take a look at MD5 and SHA checksums\n\n14\n00:00:40.090 --> 00:00:44.720\nwhich are both hashing algorithms we can\nuse to take signatures of a file and\n\n15\n00:00:44.720 --> 00:00:46.900\ndetermine whether or\nnot it's been tampered with.\n\n16\n00:00:46.900 --> 00:00:50.780\nIt's a really important process that we go\nthrough, not just for protecting us but\n\n17\n00:00:50.780 --> 00:00:52.070\nalso for protecting other people.\n\n18\n00:00:52.070 --> 00:00:55.370\nPeople we might be sending files to, they\nneed a way to know that the files haven't\n\n19\n00:00:55.370 --> 00:00:57.210\nbeen tampered with since\nwe transmitted them.\n\n20\n00:00:57.210 --> 00:00:59.550\nSo we're gonna walk through a few\nexamples on how to do that,\n\n21\n00:00:59.550 --> 00:01:01.330\nutilities that are available to us.\n\n22\n00:01:01.330 --> 00:01:04.690\nAnd get a chance to see how to use them,\nright here, in this episode.\n\n23\n00:01:04.690 --> 00:01:06.705\n&gt;&gt; Now it might seem sort of rhetorical,\nbut\n\n24\n00:01:06.705 --> 00:01:08.900\nwhy do we need to worry\nabout file integrity?\n\n25\n00:01:08.900 --> 00:01:11.430\n&gt;&gt; In the olden days.\n\n26\n00:01:11.430 --> 00:01:11.969\n[LAUGH]\n&gt;&gt; In the olden days,\n\n27\n00:01:11.969 --> 00:01:12.585\nI knew that was coming.\n\n28\n00:01:12.585 --> 00:01:14.648\n&gt;&gt; [LAUGH] It always starts this way.\n\n29\n00:01:14.648 --> 00:01:17.453\nThe Internet used to be\na pretty safe place, right?\n\n30\n00:01:17.453 --> 00:01:22.044\nIt was mostly IT guys that were out there,\nand it was men and women that were\n\n31\n00:01:22.044 --> 00:01:27.397\npassionate about IT that were creating\nthe Internet, and creating these services.\n\n32\n00:01:27.397 --> 00:01:29.078\nIt's not like that anymore.\n\n33\n00:01:29.078 --> 00:01:31.450\nNow there's tons of\npeople on the Internet,\n\n34\n00:01:31.450 --> 00:01:34.590\nmany of which barely know\nanything about computers.\n\n35\n00:01:34.590 --> 00:01:38.480\nAnd others that are there for\nmalicious reasons.\n\n36\n00:01:38.480 --> 00:01:40.330\nThey are criminals,right?.\n\n37\n00:01:40.330 --> 00:01:41.360\n&gt;&gt; The bad actors.\n\n38\n00:01:41.360 --> 00:01:46.000\n&gt;&gt; Absolutely, and I know it sounds\nkind of cliched and paranoid and\n\n39\n00:01:46.000 --> 00:01:48.300\nall that and stuff but it's a reality.\n\n40\n00:01:48.300 --> 00:01:52.070\nIs that when you go and download files\nfrom the Internet or even transmit files\n\n41\n00:01:52.070 --> 00:01:55.650\nacross the Internet, there is a chance\nthose files could be tampered with.\n\n42\n00:01:55.650 --> 00:01:59.170\nEither tampered with at the location\nyou're downloading them from or\n\n43\n00:01:59.170 --> 00:02:00.780\neven tampered with in transit.\n\n44\n00:02:00.780 --> 00:02:05.740\nThere's some documented cases where data\nbeing moved across the Tor network is\n\n45\n00:02:05.740 --> 00:02:10.820\nbeing intercepted at Tor Nodes, modified,\nand then continued along its path.\n\n46\n00:02:10.820 --> 00:02:14.390\nAnd so you might be downloading something\nthat's perfectly fine on the server.\n\n47\n00:02:14.390 --> 00:02:18.650\nAnd in transit it's modified before it\neven gets to you, and now it's backdoored.\n\n48\n00:02:18.650 --> 00:02:19.180\n&gt;&gt; Wow.\n\n49\n00:02:19.180 --> 00:02:22.790\n&gt;&gt; Imagine installing some software,\nright, and the software prompt says, hey,\n\n50\n00:02:22.790 --> 00:02:25.650\nwe need admin privileges\nto install the software.\n\n51\n00:02:25.650 --> 00:02:28.620\nWell, sure, you're installing software,\nyou're gonna give it the admin privileges.\n\n52\n00:02:28.620 --> 00:02:31.350\nYou're punch in your root password or\nwhatever.\n\n53\n00:02:31.350 --> 00:02:33.880\nIt elevates privileges,\nand it runs the install.\n\n54\n00:02:33.880 --> 00:02:38.330\nNow, imagine if somebody inserted\na backdoor into that software.\n\n55\n00:02:38.330 --> 00:02:40.838\nAnd when you install it,\nyou're giving it root privileges.\n\n56\n00:02:40.838 --> 00:02:42.940\nNow the backdoored application\nhas root privileges,\n\n57\n00:02:42.940 --> 00:02:46.770\nit can do whatever it wants\nacross your entire system.\n\n58\n00:02:46.770 --> 00:02:50.640\nSo when we receive files,\nit's really important\n\n59\n00:02:50.640 --> 00:02:54.880\nthat we verify they haven't been\ntempered with from their original state.\n\n60\n00:02:54.880 --> 00:02:58.060\nAnd this is been something that's not new,\nit's been going on for long time,\n\n61\n00:02:58.060 --> 00:02:59.450\nfor years and years now.\n\n62\n00:02:59.450 --> 00:03:02.140\nSo much so that,\nmost places where you go and\n\n63\n00:03:02.140 --> 00:03:06.710\ndownload content from, will provide you\nsome kind of a digital signature so\n\n64\n00:03:06.710 --> 00:03:09.340\nyou can verify the authenticity\nof the file, all right?\n\n65\n00:03:09.340 --> 00:03:13.460\nBut, most people ignore it,\nmost people ignore the signatures.\n\n66\n00:03:13.460 --> 00:03:16.310\nAnd if you're thinking this is paranoia,\nI just wanna show you a great example.\n\n67\n00:03:16.310 --> 00:03:18.400\nSo, this is from January of last year.\n\n68\n00:03:18.400 --> 00:03:19.090\nSo, about a year and\n\n69\n00:03:19.090 --> 00:03:23.830\na half ago, the Linux Mint\nDistribution Servers were compromised.\n\n70\n00:03:23.830 --> 00:03:26.960\nAnd they had to make a big\nannouncement basically, saying, look,\n\n71\n00:03:26.960 --> 00:03:32.400\nif you downloaded Linux Mint on\nFebruary 20th, it was backdoored.\n\n72\n00:03:32.400 --> 00:03:35.554\nSomebody had broken into\nthe distribution server, and\n\n73\n00:03:35.554 --> 00:03:39.796\nreplaced the standard ISO images with\nISOs that were already backdoored.\n\n74\n00:03:39.796 --> 00:03:42.947\nThey would build up SSA channels to\na command and control server, and\n\n75\n00:03:42.947 --> 00:03:44.752\nthose installs would be compromised.\n\n76\n00:03:44.752 --> 00:03:48.274\nYou could roll out 1,000\nservers with Linux Mint, and\n\n77\n00:03:48.274 --> 00:03:53.280\nthey would all already be compromised,\nno matter what you really did to them.\n\n78\n00:03:53.280 --> 00:03:55.930\nAnd you wouldn't even know it,\nyou might even think to yourself,\n\n79\n00:03:55.930 --> 00:03:59.220\nI downloaded the image right\nfrom the Linux Mint team.\n\n80\n00:03:59.220 --> 00:04:02.020\nWell, it was their servers\nthat got compromised.\n\n81\n00:04:02.020 --> 00:04:06.980\nAnd we don't normally download\nimages right from the vendor, do we?\n\n82\n00:04:06.980 --> 00:04:09.280\nA lot of times,\nwe go to a download mirror.\n\n83\n00:04:09.280 --> 00:04:12.150\n&gt;&gt; Yes.\n&gt;&gt; I might go to CentOS, but\n\n84\n00:04:12.150 --> 00:04:14.960\nthey don't wanna pay for the bandwidth for\nall these downloads so they go to mirrors,\n\n85\n00:04:14.960 --> 00:04:18.540\nand I get sent to a mirror But what are\nthe odds of the mirror being compromised?\n\n86\n00:04:18.540 --> 00:04:21.080\nEven higher than the odds\nof the actual people.\n\n87\n00:04:21.080 --> 00:04:23.510\nSo this does happen, this is a real thing.\n\n88\n00:04:23.510 --> 00:04:26.020\nThere's been instances of it even\n\n89\n00:04:26.020 --> 00:04:30.780\nas recently as the last couple of months a\ncouple of bit-torrent clients, a couple of\n\n90\n00:04:30.780 --> 00:04:35.420\nother BitCoin wallet software have had\nthis happen where it's tampered with.\n\n91\n00:04:35.420 --> 00:04:39.470\nThere is malicious software injected in\nthere and you just downloaded and saw and\n\n92\n00:04:39.470 --> 00:04:42.290\ngave it your admin privileges cuz\nthat's what you do when you install and\n\n93\n00:04:42.290 --> 00:04:42.900\nnow it's compromised.\n\n94\n00:04:42.900 --> 00:04:45.180\nThat's why we worry about this so much.\n\n95\n00:04:45.180 --> 00:04:48.597\nAnd why we need to make sure we take\ncare of ourselves with it, all right?\n\n96\n00:04:48.597 --> 00:04:54.016\nSo, that's the background for\nwhy we're even doing this.\n\n97\n00:04:54.016 --> 00:04:57.960\n&gt;&gt; Well how can we verify if a file's been\ntampered with or not been tampered with?\n\n98\n00:04:57.960 --> 00:05:01.280\n&gt;&gt; All right, so actually this blog post,\nif you've ever read it,\n\n99\n00:05:01.280 --> 00:05:02.880\nthey go through and start to explain it.\n\n100\n00:05:02.880 --> 00:05:06.470\nAnd it's funny because what they're\nexplaining is not really anything new.\n\n101\n00:05:06.470 --> 00:05:11.940\nThey're saying look, when you download\nour images you've got signature files.\n\n102\n00:05:11.940 --> 00:05:15.550\nAnd the signature files can be\nused to validate that data.\n\n103\n00:05:15.550 --> 00:05:17.710\nSo for example, I mentioned CentOS.\n\n104\n00:05:17.710 --> 00:05:21.070\nWhen you go and download CentOS,\nthey don't, they are non-profit, right?\n\n105\n00:05:21.070 --> 00:05:23.680\nThey don't make a ton of money, they get\ndonations, so they don't have a ton of\n\n106\n00:05:23.680 --> 00:05:29.030\nbandwidth, they rely on a network of\nmirrors to host all their distributions.\n\n107\n00:05:29.030 --> 00:05:31.560\nSo when I get new copies of CentOS,\n\n108\n00:05:31.560 --> 00:05:34.280\nI normally get them from one of\nthe colleges that's near here, right?\n\n109\n00:05:34.280 --> 00:05:37.950\nSo the University of\nSouth Florida ftp.usf.edu,\n\n110\n00:05:37.950 --> 00:05:39.798\nthat's usually where I download CentOS.\n\n111\n00:05:39.798 --> 00:05:41.190\nNow, if you're watching this show and\n\n112\n00:05:41.190 --> 00:05:44.640\nyou want to backdoor my CentOS\ninstallations as a server to target.\n\n113\n00:05:44.640 --> 00:05:48.340\n[LAUGH] So, this is where I\nusually get my CentOS images.\n\n114\n00:05:48.340 --> 00:05:53.500\nAnd when you go to download them, you'll\nsee the ISO images right here, right?\n\n115\n00:05:53.500 --> 00:05:54.990\nAs, I look at these ISOs.\n\n116\n00:05:54.990 --> 00:05:59.030\nNow, there's ISOs, and\nthere is torrent files.\n\n117\n00:05:59.030 --> 00:06:01.330\nTorrent, I can use BitTorrent\nto download these ISO images.\n\n118\n00:06:01.330 --> 00:06:02.970\nAnd now,\ninstead of downloading from a mirror,\n\n119\n00:06:02.970 --> 00:06:06.660\nI'm downloading from it, and hundreds,\nor even thousands of other people that\n\n120\n00:06:06.660 --> 00:06:09.230\nare simultaneously downloading,\nI'm getting it from them too.\n\n121\n00:06:09.230 --> 00:06:12.430\nThat even more increases the odds\nof tampering with the software.\n\n122\n00:06:12.430 --> 00:06:16.560\nWell, most BitTorrent software\nuses hashing algorithms itself,\n\n123\n00:06:16.560 --> 00:06:19.100\nto be able to make sure the files haven't\nbeen tampered with, to prevent that.\n\n124\n00:06:19.100 --> 00:06:22.620\nSo it's usually pretty safe to\npull data from the torrent.\n\n125\n00:06:22.620 --> 00:06:27.871\nBut even if I do, I can still verify\nwhether the data's been tampered with.\n\n126\n00:06:27.871 --> 00:06:31.118\nWay down here at the bottom,\nnotice all these files that are down here.\n\n127\n00:06:31.118 --> 00:06:37.150\nI've got sha1sum, sha256sum,\nright, .txt and .asc.\n\n128\n00:06:37.150 --> 00:06:43.460\nI might see md5sum.txt or sha512sum, those\nare some other ones that you might see.\n\n129\n00:06:43.460 --> 00:06:47.600\nThese are the check sums for\nall of those files.\n\n130\n00:06:47.600 --> 00:06:51.550\nAnd if I take a look at one, like,\nI'll take a look at sha256sum, right?\n\n131\n00:06:51.550 --> 00:06:54.610\nSo, if I pull that up, inside of the file,\n\n132\n00:06:54.610 --> 00:06:59.210\nit's got a big long hash, right, that's\nthe signature that's been generated for\n\n133\n00:06:59.210 --> 00:07:02.080\nthat file, and then right beside it,\nis the file name.\n\n134\n00:07:02.080 --> 00:07:10.340\nSo, for this first one, this CentOS 7 x86\n64 DVD 1611.ISO, this is the hash for it.\n\n135\n00:07:10.340 --> 00:07:16.110\nIf I download that ISO file,\nI can make my own hash of that file.\n\n136\n00:07:16.110 --> 00:07:18.796\nAnd then I can compare it to\nwhat's posted on the site.\n\n137\n00:07:18.796 --> 00:07:21.929\nAnd if they match,\nthen I know it hasn't been tampered with.\n\n138\n00:07:21.929 --> 00:07:26.611\nAnd if they don't match, then I know\nsomething is wrong, and it could be that\n\n139\n00:07:26.611 --> 00:07:31.550\nthere's malicious software in there and\nthe hackers are coming after me.\n\n140\n00:07:31.550 --> 00:07:34.360\nOr it could be just a bad download.\n\n141\n00:07:34.360 --> 00:07:37.390\nSometimes that happens and a download gets\ninterrupted halfway and we don't know it.\n\n142\n00:07:37.390 --> 00:07:41.560\nThis is supposed to be a four gig file,\nmaybe I only got three gigs of it.\n\n143\n00:07:41.560 --> 00:07:42.630\nAny number of things could happen.\n\n144\n00:07:42.630 --> 00:07:46.600\nI could have corruption on my disk,\njust on my hard drive where I'm saving it.\n\n145\n00:07:46.600 --> 00:07:49.293\nEither way,\nI end up with an ISO I don't want to use.\n\n146\n00:07:49.293 --> 00:07:52.440\nAnd so this is a great way to verify and\nfind that.\n\n147\n00:07:52.440 --> 00:07:56.617\nAnd most software post\nthese check sums now.\n\n148\n00:07:56.617 --> 00:08:00.419\nWhen they put out a new distribution or\na new application is released,\n\n149\n00:08:00.419 --> 00:08:03.963\nthey'll put the check sums online so\nthat you can get that data and\n\n150\n00:08:03.963 --> 00:08:06.620\nverify whether or\nnot it's been tampered with.\n\n151\n00:08:06.620 --> 00:08:10.900\nSo we've got those kind of options\nto be able to pull it up and\n\n152\n00:08:10.900 --> 00:08:15.150\nkind of test that out and\nfigure out which is good and which is bad.\n\n153\n00:08:15.150 --> 00:08:17.040\n&gt;&gt; Well which one's preferred, Don?\n\n154\n00:08:17.040 --> 00:08:19.200\n&gt;&gt; All right, well you'll see\na couple of different ones.\n\n155\n00:08:19.200 --> 00:08:21.130\nAnd let me go back to screen here.\n\n156\n00:08:21.130 --> 00:08:24.140\nSo here we had sha1sum and sha256sum.\n\n157\n00:08:24.140 --> 00:08:27.510\nThere's usually four that\nyou'll see people pick from.\n\n158\n00:08:27.510 --> 00:08:30.440\nmd5sum, which uses Message Digest 5.\n\n159\n00:08:30.440 --> 00:08:36.260\nThen you'll see sha1, the securing\nhashing algorithm 1, or version 1.\n\n160\n00:08:36.260 --> 00:08:42.760\nThen there's sha256 and sha512,\nmd5 is considered broken.\n\n161\n00:08:42.760 --> 00:08:47.400\nThat you can actually create two\nfiles that are different files and\n\n162\n00:08:47.400 --> 00:08:49.330\ngenerate the same signature for them.\n\n163\n00:08:49.330 --> 00:08:51.510\nSo that means that somebody\ncould tamper with the file and\n\n164\n00:08:51.510 --> 00:08:53.300\ncreate a false signature\nthat still matches.\n\n165\n00:08:53.300 --> 00:08:55.824\nSo you shouldn't rely on md5sums.\n\n166\n00:08:55.824 --> 00:08:59.149\nThere's still a lot of websites that post\nthem, but you shouldn't rely on them.\n\n167\n00:08:59.149 --> 00:09:01.997\nIt's a lot harder for\nan attacker to modify something but\n\n168\n00:09:01.997 --> 00:09:05.213\nit's not impossible with md5sums,\nso we try not to use those.\n\n169\n00:09:05.213 --> 00:09:08.505\nAnd you see here they're not even\nposting an md5sum, so that's good.\n\n170\n00:09:08.505 --> 00:09:13.602\nsha1 sums have been proven to be\ntheoretically breakable, right.\n\n171\n00:09:13.602 --> 00:09:17.542\nGoogle actually did a big thing a few\nmonths ago where they showed creating two\n\n172\n00:09:17.542 --> 00:09:20.890\nPDFs that had the same sha1sum\neven though they were different.\n\n173\n00:09:20.890 --> 00:09:25.270\nOne had a blue background, one had a red\nbackground, but they had the same sha1sum.\n\n174\n00:09:25.270 --> 00:09:29.819\nSo it's still considered good enough,\nbut it's theoretically breakable.\n\n175\n00:09:29.819 --> 00:09:33.760\nAnd theoretically breakable today means\neasily breakable five years from now.\n\n176\n00:09:33.760 --> 00:09:39.099\nSo sha1 is kind of on its way out, and\nyou'll see they've got sha256sum next.\n\n177\n00:09:39.099 --> 00:09:43.880\nsha256sum is considered the standard\ncheck sum algorithm right now,\n\n178\n00:09:43.880 --> 00:09:45.840\nthat's what most people are using.\n\n179\n00:09:45.840 --> 00:09:49.690\nBut one day, there will come a day\nwhen that one gets broken too, right.\n\n180\n00:09:49.690 --> 00:09:51.300\nIt happens as computers get faster and\n\n181\n00:09:51.300 --> 00:09:53.930\nstronger they get where they\ncan break these things.\n\n182\n00:09:53.930 --> 00:09:57.060\nSo sha512sum is the next one.\n\n183\n00:09:57.060 --> 00:10:01.027\nAnd we're going to see more and more\npeople doing sha512sums as times go on.\n\n184\n00:10:01.027 --> 00:10:03.697\nAnd what you'll see with these is\nthere's not that much difference,\n\n185\n00:10:03.697 --> 00:10:06.070\nit's really the length of\nthe key that's different.\n\n186\n00:10:06.070 --> 00:10:11.770\nSo if I take a look at the sha1sum here,\nsee how short that key is?\n\n187\n00:10:11.770 --> 00:10:16.500\nAnd then if I look at the sha256sum,\nsee how much longer that key is?\n\n188\n00:10:16.500 --> 00:10:19.920\nThat's the big difference, right,\nit's a stronger key because it's longer.\n\n189\n00:10:19.920 --> 00:10:23.250\nInstead of using a 10 character password,\nyou could use a 20 character password.\n\n190\n00:10:23.250 --> 00:10:25.150\nThat's the kind of equivalent here.\n\n191\n00:10:25.150 --> 00:10:28.210\nAnd by doing that it makes it\nthat much more difficult for\n\n192\n00:10:28.210 --> 00:10:32.630\nsome other computer to create alternate\ncontent with the same signature.\n\n193\n00:10:32.630 --> 00:10:35.540\nSo in a perfect world, you'll use sha512.\n\n194\n00:10:35.540 --> 00:10:41.440\nBut if it's not available,\nsha256 is next, sha1 is next,\n\n195\n00:10:41.440 --> 00:10:45.326\nand then md5, it's better than nothing,\nbut it's certainly not preferred.\n\n196\n00:10:45.326 --> 00:10:45.940\n&gt;&gt; [LAUGH]\n&gt;&gt; Right, so\n\n197\n00:10:45.940 --> 00:10:49.950\nthat would be kind of the last resort for\nthe checksum that we use.\n\n198\n00:10:49.950 --> 00:10:52.280\n&gt;&gt; Well I don't want but\nany other thing I want it good.\n\n199\n00:10:52.280 --> 00:10:53.200\n[LAUGH]\n&gt;&gt; Absolutely.\n\n200\n00:10:53.200 --> 00:10:55.805\n&gt;&gt; So where do we get the checks ins from?\n\n201\n00:10:55.805 --> 00:11:00.000\n&gt;&gt; All right, so the checks,\nthis is important and actually the people\n\n202\n00:11:00.000 --> 00:11:04.119\nin the chat room watching, I know Chris\nand Stanley are kinda yelling at me.\n\n203\n00:11:04.119 --> 00:11:05.700\n&gt;&gt; [LAUGH]\n&gt;&gt; Don't pull the checksum\n\n204\n00:11:05.700 --> 00:11:09.048\nfrom the same server you downloaded\nthe file, and they're absolutely right.\n\n205\n00:11:09.048 --> 00:11:11.790\nThat, hey,\nI can download the file right here, and\n\n206\n00:11:11.790 --> 00:11:13.510\nI can download the checksum right here,\nthat's great.\n\n207\n00:11:13.510 --> 00:11:15.380\nIt's so convenient, it's in one place.\n\n208\n00:11:15.380 --> 00:11:17.230\nWell think about an attacker.\n\n209\n00:11:17.230 --> 00:11:19.690\nIf I'm an attacker,\nI break into this server, right?\n\n210\n00:11:19.690 --> 00:11:21.530\nI somehow get write access,\n\n211\n00:11:21.530 --> 00:11:24.960\nI replace this ISO image with\none that has my malware in it.\n\n212\n00:11:24.960 --> 00:11:25.650\nWell guess what I can do?\n\n213\n00:11:25.650 --> 00:11:28.450\nI can replace this checksum also.\n\n214\n00:11:28.450 --> 00:11:32.530\nI can take my own checksum of my malware\ninfected ISO and just replace it.\n\n215\n00:11:32.530 --> 00:11:33.900\nI've already got access to the server.\n\n216\n00:11:33.900 --> 00:11:37.090\nIf I'm able to replace the ISO,\nI can replace the checksum also.\n\n217\n00:11:37.090 --> 00:11:42.250\nSo you never ever ever\nwant to get the checksum\n\n218\n00:11:42.250 --> 00:11:45.460\nfrom the same place you got\nthe file you're testing, right.\n\n219\n00:11:45.460 --> 00:11:48.341\nWell I'm gonna back off\nthat not ever [INAUDIBLE].\n\n220\n00:11:48.341 --> 00:11:51.320\n&gt;&gt; [LAUGH]\n&gt;&gt; If you don't care about security,\n\n221\n00:11:51.320 --> 00:11:53.785\nif you're just concerned\nabout having a valid ISO.\n\n222\n00:11:53.785 --> 00:11:57.310\nLike how do I know this ISO\ndidn't get damaged in transit or\n\n223\n00:11:57.310 --> 00:11:58.910\ndamaged when I stored it on my hard drive?\n\n224\n00:11:58.910 --> 00:12:01.490\nIf you're worried about like data\ncorruption, then yeah it's fine,\n\n225\n00:12:01.490 --> 00:12:03.310\nyou can pull the checksum\nright from the server.\n\n226\n00:12:03.310 --> 00:12:05.319\nBut for security, never,\n\n227\n00:12:05.319 --> 00:12:10.400\nnever [LAUGH] pull that checksum from\nthe same server where you get the file.\n\n228\n00:12:10.400 --> 00:12:13.510\nHere I'm pulling from a mirror,\nand it makes sense.\n\n229\n00:12:13.510 --> 00:12:18.210\nThe CentOS team is a non-profit,\nthey don't wanna pay for\n\n230\n00:12:18.210 --> 00:12:19.540\nbandwidth to ship all the stuff out.\n\n231\n00:12:19.540 --> 00:12:21.860\nAnd they shouldn't have to,\nright, they do enough.\n\n232\n00:12:21.860 --> 00:12:26.800\nWe can at least flip the bill\nsomewhere and pay for some bandwidth.\n\n233\n00:12:26.800 --> 00:12:29.900\nWell they push these\nISOs out onto a mirror.\n\n234\n00:12:29.900 --> 00:12:32.615\nBut these checksums,\nlook how small they are, right.\n\n235\n00:12:32.615 --> 00:12:37.246\nThe sha1sum 454 bytes,\nthe sha256 598 bytes.\n\n236\n00:12:37.246 --> 00:12:39.018\nThese are small-\n&gt;&gt; Tiny.\n\n237\n00:12:39.018 --> 00:12:43.890\n&gt;&gt; And so\nthey host the checksums on their own page.\n\n238\n00:12:43.890 --> 00:12:46.470\nI might get the ISO from USF.\n\n239\n00:12:46.470 --> 00:12:51.110\nBut then I can go to the CentOS webpage,\nI'm using CentOS as an example.\n\n240\n00:12:51.110 --> 00:12:54.660\nIt could be Debian, Ubuntu, right,\nthey all do the same thing, right.\n\n241\n00:12:54.660 --> 00:12:55.470\n&gt;&gt; Right, right, right.\n\n242\n00:12:55.470 --> 00:12:58.618\n&gt;&gt; And whenever CentOS puts out a new\nrelease, they put out new release notes.\n\n243\n00:12:58.618 --> 00:13:00.510\nSo here's the release notes for\nCentOS 7 1611.\n\n244\n00:13:00.510 --> 00:13:05.800\nAnd if you read in the release notes,\nyou'll get to a part\n\n245\n00:13:05.800 --> 00:13:09.430\nwhere it talks about verifying\nthe downloaded installation images.\n\n246\n00:13:09.430 --> 00:13:13.660\nAnd here's the checksums right here,\nwell just the sha256,\n\n247\n00:13:13.660 --> 00:13:14.550\nthey're not giving me the sha1s.\n\n248\n00:13:14.550 --> 00:13:16.720\nBut these are the ones that I want anyway,\nright.\n\n249\n00:13:16.720 --> 00:13:17.320\n&gt;&gt; Right, right right.\n\n250\n00:13:17.320 --> 00:13:19.630\n&gt;&gt; So\nhere's the sha256 checksums right here.\n\n251\n00:13:19.630 --> 00:13:24.030\nI'm not getting these from USF,\nI'm getting these from the CentOS team,\n\n252\n00:13:24.030 --> 00:13:25.730\nfrom the main server.\n\n253\n00:13:25.730 --> 00:13:29.460\nSo now if the CentOS\nwebsite was compromised and\n\n254\n00:13:29.460 --> 00:13:32.740\nthese values are wrong,\nUSF should still be safe.\n\n255\n00:13:32.740 --> 00:13:34.800\nAnd the hash will fail and\nI'll know there's a problem.\n\n256\n00:13:34.800 --> 00:13:37.750\nOr if USF gets compromised and\nthe CentOS site is fine,\n\n257\n00:13:37.750 --> 00:13:41.730\nthen the hash will fail and\nI know there's a problem.\n\n258\n00:13:41.730 --> 00:13:46.300\nBut if I get the ISO from USF and\nit's fine and\n\n259\n00:13:46.300 --> 00:13:50.260\nI get the hash here from\nthe CentOS website and\n\n260\n00:13:50.260 --> 00:13:54.830\nthey match up, then I know the file\nhasn't been tampered with, right.\n\n261\n00:13:54.830 --> 00:13:56.250\nAnd we can test that pretty easily,\n\n262\n00:13:56.250 --> 00:14:00.320\nbut that's really the main thing is\nI want to make sure that I get this\n\n263\n00:14:00.320 --> 00:14:04.390\nfrom somewhere I trust, right, and\ndefinitely from a separate place.\n\n264\n00:14:04.390 --> 00:14:08.710\nYou could say,\nI'll get the ISO from one server,\n\n265\n00:14:08.710 --> 00:14:12.310\none mirror, and I'll get the checksums\nfrom another mirror, right.\n\n266\n00:14:12.310 --> 00:14:13.950\nI don't like to do that, right.\n\n267\n00:14:13.950 --> 00:14:17.460\nAnd the reason is mirrors usually use\nthese automated scripting processes,\n\n268\n00:14:17.460 --> 00:14:19.150\njust copy data from the other mirrors.\n\n269\n00:14:19.150 --> 00:14:20.840\nSo when one mirror gets compromised,\n\n270\n00:14:20.840 --> 00:14:23.090\npotentially it could bleed\nover to other mirrors.\n\n271\n00:14:23.090 --> 00:14:25.660\nYou don't know how they're\nreplicating that data, right.\n\n272\n00:14:25.660 --> 00:14:26.940\nSometimes you have these parent and\n\n273\n00:14:26.940 --> 00:14:29.810\nchild replicas when they set\nup a mirror system like that.\n\n274\n00:14:29.810 --> 00:14:34.430\nSo I usually prefer to get the checksums\nright from the horses mouth,\n\n275\n00:14:34.430 --> 00:14:35.840\nright from whoever it is that created it.\n\n276\n00:14:35.840 --> 00:14:40.070\nSo if it's a Debian distro that I am\ndownloading, I download the ISO from\n\n277\n00:14:40.070 --> 00:14:43.876\na mirror and I get the checksums\nright from the debian.org website.\n\n278\n00:14:43.876 --> 00:14:44.642\nThat's where I go.\n\n279\n00:14:44.642 --> 00:14:47.693\nOr here is the centos.org website and\npulling it from their wiki.\n\n280\n00:14:47.693 --> 00:14:51.204\nI wanna make sure that I get it from\nsomewhere that I trust, all right.\n\n281\n00:14:51.204 --> 00:14:54.344\nSo that is a key thing when we go and\nlook for the stuff, and\n\n282\n00:14:54.344 --> 00:14:59.190\nthen once we've got it we're ready to\ncheck, and checking is super easy.\n\n283\n00:14:59.190 --> 00:15:05.062\nBasically, let me drop down to my\nsystem and let me get into here.\n\n284\n00:15:05.062 --> 00:15:10.450\nAll right, and so I reached out and\nI downloaded that file.\n\n285\n00:15:10.450 --> 00:15:17.740\nSo the file is this guy right here,\ncentos-7-xav64-dvd1611.iso.\n\n286\n00:15:17.740 --> 00:15:20.887\nThat's the file that I downloaded and\n\n287\n00:15:20.887 --> 00:15:25.422\nif I take a look here,\nI've got it right there, okay.\n\n288\n00:15:25.422 --> 00:15:28.600\nLet me just kind of change that so\nwe can see the size of it.\n\n289\n00:15:28.600 --> 00:15:30.710\nIt is 4.1 gigs in size.\n\n290\n00:15:30.710 --> 00:15:35.840\nI downloaded this file right from USF,\nokay, so I download from their mirror.\n\n291\n00:15:35.840 --> 00:15:37.730\nNow if I want to verify it, okay,\n\n292\n00:15:37.730 --> 00:15:43.060\nwhat I need to do is I need to make\nmy own checksum of this ISO file.\n\n293\n00:15:43.060 --> 00:15:45.965\nI just got this file,\nnow I want to create my own checksum.\n\n294\n00:15:45.965 --> 00:15:47.603\nIt's really easy to make a checksum,\n\n295\n00:15:47.603 --> 00:15:50.476\nyou just have to figure out which\nalgorithm you want to do, right.\n\n296\n00:15:50.476 --> 00:15:57.600\nSo if I want to do an md5sum then I type\nmd5sum and then the name of the file.\n\n297\n00:15:57.600 --> 00:16:00.616\nAnd it'll run that file and\nit'll generate an MD5 checksum, okay?\n\n298\n00:16:00.616 --> 00:16:06.420\nNow, see how it's kind of pausing and it's\ntaking a moment, that file is 4.1 gigs.\n\n299\n00:16:06.420 --> 00:16:08.870\nIt's gotta read across it and\nrun the hashing algorithm and\n\n300\n00:16:08.870 --> 00:16:10.390\nthen it generates the signature.\n\n301\n00:16:10.390 --> 00:16:13.280\nAnd there's the signature\nthat it just generated.\n\n302\n00:16:13.280 --> 00:16:18.790\nIf I want a sha256sum, or\na sha1sum or a sha512sum,\n\n303\n00:16:18.790 --> 00:16:25.910\nI just come in and I type sha256sum or\nsha512sum or sha1sum.\n\n304\n00:16:25.910 --> 00:16:30.100\nAnd when I type that and then point it\nto the file, it will read across it and\n\n305\n00:16:30.100 --> 00:16:32.080\nit will generate the checksum.\n\n306\n00:16:32.080 --> 00:16:34.800\nI'm making that checksum myself, right?\n\n307\n00:16:34.800 --> 00:16:40.270\nSo I know that this image, this one,\nhas this particular signature.\n\n308\n00:16:40.270 --> 00:16:42.660\nSo there it is, it just came up, okay?\n\n309\n00:16:42.660 --> 00:16:46.950\nAnd then what I can do\nis I can compare that\n\n310\n00:16:46.950 --> 00:16:49.450\nwith the one that's posted on their site.\n\n311\n00:16:49.450 --> 00:16:53.945\nAnd so when I look at the site,\nI can look at their\n\n312\n00:16:53.945 --> 00:16:59.445\nvalue right here, and I can compare\nthat with the value that I got.\n\n313\n00:16:59.445 --> 00:17:02.915\nAnd you can be lazy and just look\nat the first four or the last four,\n\n314\n00:17:02.915 --> 00:17:06.845\nbut you really need to verify\nevery value that's in there.\n\n315\n00:17:06.845 --> 00:17:10.765\nAnd so it is kind of time consuming,\nand annoying, and all that.\n\n316\n00:17:10.765 --> 00:17:13.635\nBut if we get them close\nenough together on my screen.\n\n317\n00:17:13.635 --> 00:17:15.285\nIt doesn't help that they're\ndifferent sizes, does it?\n\n318\n00:17:15.285 --> 00:17:19.250\n[LAUGH] Let me see, can I shrink that.\n\n319\n00:17:20.640 --> 00:17:22.030\nThat's pretty close.\n\n320\n00:17:22.030 --> 00:17:23.840\nSo we can get them close to the same size,\nor whatever.\n\n321\n00:17:23.840 --> 00:17:25.880\nI should probably just copy and\npaste them somewhere and\n\n322\n00:17:25.880 --> 00:17:27.690\nthat way they'd be side by side.\n\n323\n00:17:27.690 --> 00:17:32.160\nBut basically, we can look at them,\nand start to compare.\n\n324\n00:17:32.160 --> 00:17:37.271\nAnd when I look at these two,\nI see c455ee94a.\n\n325\n00:17:37.271 --> 00:17:40.910\nAnd I'm not gonna bore you with\nthe whole thing, blah blah blah, d97eb.\n\n326\n00:17:40.910 --> 00:17:43.300\nSo looking at this,\nthat's a perfect match.\n\n327\n00:17:44.750 --> 00:17:48.260\nWhat I downloaded from\nUSF has a perfect match\n\n328\n00:17:48.260 --> 00:17:51.400\nwith what the CentOS\nwebsite says I should have.\n\n329\n00:17:51.400 --> 00:17:53.500\nSo that means I got a good match,\n\n330\n00:17:53.500 --> 00:17:55.630\nI've got a good file that\nhas not been tampered with.\n\n331\n00:17:55.630 --> 00:17:59.730\nNow, that doesn't guarantee that it\ndoesn't have a back door end, right?\n\n332\n00:17:59.730 --> 00:18:04.410\nLike somebody at the CentOS\norganization could be corrupt and\n\n333\n00:18:04.410 --> 00:18:07.172\nbribed by some foreign government and\nputting back doors in there.\n\n334\n00:18:07.172 --> 00:18:10.323\nAnd so all the mirrors have the back door\nand they made the checksum like that,\n\n335\n00:18:10.323 --> 00:18:11.405\nthat could still happen.\n\n336\n00:18:11.405 --> 00:18:15.293\nBut, I do know that the file that I have,\nthe ISO that I now have is\n\n337\n00:18:15.293 --> 00:18:18.965\nthe one that was officially\nreleased from the CentOS team and\n\n338\n00:18:18.965 --> 00:18:23.450\nit hasn't been tampered with after\nit left the CentOS's team's hands.\n\n339\n00:18:23.450 --> 00:18:26.255\nIt could have been tampered with\nwhile it was in their hands but\n\n340\n00:18:26.255 --> 00:18:27.320\n[LAUGHS] not at this point.\n\n341\n00:18:27.320 --> 00:18:29.560\nSo I know that that file was safe.\n\n342\n00:18:29.560 --> 00:18:30.410\nAnd there we go, right?\n\n343\n00:18:30.410 --> 00:18:32.260\nSo now, I'm kinda protected there,\n\n344\n00:18:32.260 --> 00:18:36.570\nand that's gonna take care\nof verifying that file.\n\n345\n00:18:37.630 --> 00:18:38.850\n&gt;&gt; Better to be safe than sorry.\n\n346\n00:18:38.850 --> 00:18:41.070\nHey, can we check more\nthan one file at a time?\n\n347\n00:18:41.070 --> 00:18:41.850\n&gt;&gt; Yeah, absolutely.\n\n348\n00:18:41.850 --> 00:18:44.940\nSo, what I did here, is I generated a sum.\n\n349\n00:18:44.940 --> 00:18:48.680\nAnd then did a comparison, a one to one\ncomparison with what was on their website.\n\n350\n00:18:48.680 --> 00:18:51.730\nBut a lot of them will make it where\nyou can just download the files and\n\n351\n00:18:51.730 --> 00:18:53.270\nstore it in a text file, right?\n\n352\n00:18:53.270 --> 00:18:56.850\nSo for example,\nlet's see do I still have that USF page?\n\n353\n00:18:56.850 --> 00:19:00.175\nYeah, when I go into that USF page here,\nall right.\n\n354\n00:19:00.175 --> 00:19:01.709\nThey had all of these images, right?\n\n355\n00:19:01.709 --> 00:19:06.633\nAnd then they just had all the checksums\nrolled together into these files and so\n\n356\n00:19:06.633 --> 00:19:12.120\nI can see the sha256sums here for all\nthe ISO images all kinda rolled together.\n\n357\n00:19:12.120 --> 00:19:17.050\nYou can make a text file and you can drop\neach checksum in that text file, and\n\n358\n00:19:17.050 --> 00:19:20.260\nthen you can run the command and\ntell it to check each of the files for\n\n359\n00:19:20.260 --> 00:19:25.120\nyou to compare them and\ngive you an output to let you know\n\n360\n00:19:25.120 --> 00:19:28.830\nwhat's what, what matches and\nwhat doesn't, right?\n\n361\n00:19:28.830 --> 00:19:29.545\nSo, I can do that.\n\n362\n00:19:29.545 --> 00:19:32.830\nI've actually downloaded\nthe entire USF repository.\n\n363\n00:19:32.830 --> 00:19:37.410\nSo, here's all the stuff from USF,\nand I can take that sha256sum.text, or\n\n364\n00:19:37.410 --> 00:19:41.877\nif I didn't have I could make my own, and\njust paste in the hashes, the hash and\n\n365\n00:19:41.877 --> 00:19:44.770\na space and then the name of the file,\nthat's the format.\n\n366\n00:19:44.770 --> 00:19:48.420\nAnd then, you can come in and\nyou can say sha256sum.\n\n367\n00:19:48.420 --> 00:19:54.670\nAnd then, you'll do a --check, and\nthen the text file that has the sum.\n\n368\n00:19:54.670 --> 00:19:58.285\nSo sha256sum.txt,\nthat's the one that I want to check.\n\n369\n00:19:58.285 --> 00:19:58.790\n&gt;&gt; Mm-hm.\n\n370\n00:19:58.790 --> 00:20:02.750\n&gt;&gt; And it's gonna go one by one,\nand it will calculate the checksum\n\n371\n00:20:02.750 --> 00:20:07.290\noff of the file, match it to the checks\non in the text file, and if they match\n\n372\n00:20:07.290 --> 00:20:09.850\nit'll tell me it's okay, and if they\ndon't match it'll tell me it's not.\n\n373\n00:20:09.850 --> 00:20:13.782\nNow be aware that if I do it this way it\nsaves me from having to compare like I\n\n374\n00:20:13.782 --> 00:20:15.081\nwas doing a moment ago.\n\n375\n00:20:15.081 --> 00:20:15.880\n&gt;&gt; Right, right.\n&gt;&gt; I don't have to put two\n\n376\n00:20:15.880 --> 00:20:16.870\nthings next to each other.\n\n377\n00:20:16.870 --> 00:20:20.274\nBut if there's any files missing, like\nif I hadn't download these other files,\n\n378\n00:20:20.274 --> 00:20:22.357\nI would get an error for\nany missing file, right?\n\n379\n00:20:22.357 --> 00:20:26.809\nBecause it's not there, but that first\none it checked it out and it said, hey,\n\n380\n00:20:26.809 --> 00:20:31.730\nwe took a hash of the file, and it matched\nwhat was in this sha256sum.txt file.\n\n381\n00:20:31.730 --> 00:20:33.070\nSo it matched up, and everything is okay.\n\n382\n00:20:33.070 --> 00:20:36.440\nAnd now it's just going through, and\nit's checking each one that I downloaded\n\n383\n00:20:36.440 --> 00:20:39.200\nto make sure that I've got a clean\ncopy of this repository and\n\n384\n00:20:39.200 --> 00:20:41.100\nthat these files have\nnot been tampered with.\n\n385\n00:20:41.100 --> 00:20:44.610\nSo there it goes, and\nall six ISOs checked out.\n\n386\n00:20:44.610 --> 00:20:46.870\nAnd I know that they're safe and\nI can start to use those.\n\n387\n00:20:46.870 --> 00:20:49.643\n&gt;&gt; And Stanley in the chat was\nsaying that he cuts and pastes and\n\n388\n00:20:49.643 --> 00:20:50.705\npushes through Echo.\n\n389\n00:20:50.705 --> 00:20:52.060\n&gt;&gt; Yeah.\n\n390\n00:20:52.060 --> 00:20:52.860\n&gt;&gt; Make sense?\n\n391\n00:20:52.860 --> 00:20:54.050\n&gt;&gt; Yeah.\nYep, you can do that.\n\n392\n00:20:54.050 --> 00:20:56.060\nYou can Echo it on the screen,\nget it right next to each other.\n\n393\n00:20:56.060 --> 00:20:59.620\nOr you could even, if you stick\nit in a text file like this or\n\n394\n00:20:59.620 --> 00:21:04.200\nfeed it in as a sum, then it'll take it\nthat way and you can do the comparison.\n\n395\n00:21:04.200 --> 00:21:05.880\nThere's a few different\nways to go about that, too.\n\n396\n00:21:05.880 --> 00:21:08.635\n&gt;&gt; Cool, and thank you,\nStanley, for the comment there.\n\n397\n00:21:08.635 --> 00:21:12.710\nNow couldn't someone mess\nwith the check sum files too?\n\n398\n00:21:12.710 --> 00:21:13.950\nThat was something I was thinking earlier.\n\n399\n00:21:13.950 --> 00:21:14.960\n&gt;&gt; Yeah, they could.\n\n400\n00:21:14.960 --> 00:21:18.180\nThere's actually several different things,\nlittle holes that could come into this.\n\n401\n00:21:18.180 --> 00:21:20.670\nThey can mess with the check sum files,\nwhich in theory,\n\n402\n00:21:20.670 --> 00:21:25.250\nif I get the check sums from a different\nsite I should be okay with that, right?\n\n403\n00:21:25.250 --> 00:21:27.600\nBut what if it goes\neven further than that?\n\n404\n00:21:27.600 --> 00:21:29.991\nWhat if the main site is compromised,\n\n405\n00:21:29.991 --> 00:21:33.218\nlike what happened with\nthe Linux Mint [CROSSTALK].\n\n406\n00:21:33.218 --> 00:21:36.197\nSo if the attackers are able\nto get in there, and\n\n407\n00:21:36.197 --> 00:21:41.270\nthey're able to mess with the signatures,\nnow I got a real problem.\n\n408\n00:21:41.270 --> 00:21:42.320\nSo how do I get around this?\n\n409\n00:21:42.320 --> 00:21:47.070\nWell you might have noticed,\nback here when I was looking at USF,\n\n410\n00:21:47.070 --> 00:21:50.640\nthat they also had a couple\nof extra files in here.\n\n411\n00:21:50.640 --> 00:21:52.376\nSee these ones that end in .asc?\n\n412\n00:21:52.376 --> 00:21:53.040\n&gt;&gt; Mm-hm.\n\n413\n00:21:53.040 --> 00:21:55.890\n&gt;&gt; Okay, that's telling me that\nthey're ASCII files, right?\n\n414\n00:21:55.890 --> 00:21:57.670\nThey're not just regular text files,\nthey're ASCII.\n\n415\n00:21:57.670 --> 00:21:59.330\nWell technically ASCII is text, but\n\n416\n00:21:59.330 --> 00:22:01.895\nit means something weird about this file,\nright?\n\n417\n00:22:01.895 --> 00:22:05.020\n&gt;&gt; [LAUGH]\n&gt;&gt; And what that weird thing is,\n\n418\n00:22:05.020 --> 00:22:10.140\nis that these files have been\nsigned with a GPG key, or PGP.\n\n419\n00:22:10.140 --> 00:22:12.340\nPGP is the commercial,\nPretty Good Privacy.\n\n420\n00:22:12.340 --> 00:22:14.970\nGPG is the open source, GNU privacy guard.\n\n421\n00:22:14.970 --> 00:22:17.580\nBut these have been digitally signed.\n\n422\n00:22:17.580 --> 00:22:20.550\nNow, to digitally sign a file like this,\n\n423\n00:22:20.550 --> 00:22:23.430\nyou have to have\nthe company's private key.\n\n424\n00:22:23.430 --> 00:22:26.390\nWell an attacker might be able\nto compromise a web server.\n\n425\n00:22:26.390 --> 00:22:28.600\nThe web server shouldn't\nhave the GPG private key.\n\n426\n00:22:28.600 --> 00:22:30.240\nThe private key is stored somewhere safe.\n\n427\n00:22:30.240 --> 00:22:34.710\nThe public key is posted all over\nthe place and we can use that public key\n\n428\n00:22:34.710 --> 00:22:38.380\nto verify whether or not these\nsignatures have been tampered with.\n\n429\n00:22:38.380 --> 00:22:42.560\nIf somebody tampered with these\nthey would not be able to sign them\n\n430\n00:22:42.560 --> 00:22:47.170\nwith the Linux Mint GPG keys or\nthe CentOS GPG keys.\n\n431\n00:22:47.170 --> 00:22:49.690\nAnd so\nthat's what these other files are here.\n\n432\n00:22:49.690 --> 00:22:55.620\nAnd I can make sure that these were\nactually signed by CentOS, right?\n\n433\n00:22:55.620 --> 00:22:59.680\nSo, remember how I said you'd never wanna\ndownload signatures from the same server\n\n434\n00:22:59.680 --> 00:23:01.575\nas the ISOs,\ncuz the attacker could replace either?\n\n435\n00:23:01.575 --> 00:23:02.350\n&gt;&gt; Mm-hm.\n&gt;&gt; Well,\n\n436\n00:23:02.350 --> 00:23:06.210\nthe attacker can't replace assigned file.\n\n437\n00:23:06.210 --> 00:23:08.110\nWhen I look at this,\nI'll take the sha256sum.asc.\n\n438\n00:23:08.110 --> 00:23:11.980\nHang on, let me close some of these.\n\n439\n00:23:11.980 --> 00:23:13.800\nI've got a bunch of\ncrazy windows going on.\n\n440\n00:23:13.800 --> 00:23:18.120\nSo I'm gonna open it here as\nthe regular one and I'll open the asc.\n\n441\n00:23:18.120 --> 00:23:21.890\nSo here's the regular one and see how\nit's got the hashes on the left and\n\n442\n00:23:21.890 --> 00:23:25.120\nthe file names on the right, then the asc.\n\n443\n00:23:25.120 --> 00:23:29.398\nThe asc also has the hashes on the left\nand the files on the right, but\n\n444\n00:23:29.398 --> 00:23:34.448\nit's wrapped up in a begin php signed\nmessage telling me the hash is sha256.\n\n445\n00:23:34.448 --> 00:23:39.057\nAnd then beneath it is the signature for\nthis file and\n\n446\n00:23:39.057 --> 00:23:46.460\nthis signature in theory was generated\nby the CentOS team's private key.\n\n447\n00:23:46.460 --> 00:23:48.566\nNobody should be able to\ngenerate a valid signature for\n\n448\n00:23:48.566 --> 00:23:50.132\nthis without having their private key.\n\n449\n00:23:50.132 --> 00:23:54.160\nWell I don't have their private key so\notherwise this would all be pointless.\n\n450\n00:23:54.160 --> 00:23:55.997\nBut we can get their public key.\n\n451\n00:23:55.997 --> 00:23:59.114\nAnd we can use the public key to\nverify if the signature is valid,\n\n452\n00:23:59.114 --> 00:24:02.370\nif this signature actually was\ngenerated using that private key.\n\n453\n00:24:02.370 --> 00:24:05.710\nSo we can spot and\nsee whether this was tampered with.\n\n454\n00:24:05.710 --> 00:24:09.268\nAnd if you can get a signed file like\nthis it's actually okay to download\n\n455\n00:24:09.268 --> 00:24:13.419\nthe signatures from the same server as the\nISOs because an attacker would not able to\n\n456\n00:24:13.419 --> 00:24:14.799\nresign these, all right?\n\n457\n00:24:14.799 --> 00:24:17.368\nNot every Linux Distro does this but\nCentOS does,\n\n458\n00:24:17.368 --> 00:24:20.257\nit's one of the reasons why\nI picked them for this show.\n\n459\n00:24:20.257 --> 00:24:25.097\nIf you go to their website, if you go\nto CentOS.org/keys, they actually post\n\n460\n00:24:25.097 --> 00:24:30.028\ntheir GPG keys, that's a private one,\nit's right there, their public keys.\n\n461\n00:24:30.028 --> 00:24:34.572\nAnd that means that we can use their\npublic keys to verify the integrity of\n\n462\n00:24:34.572 --> 00:24:35.997\nthese files, right?\n\n463\n00:24:35.997 --> 00:24:40.592\nAnd, not verify the integrity of\nthe ISO files, but verify the integrity\n\n464\n00:24:40.592 --> 00:24:45.425\nof this signature files, the hash files\nand then we use the hashes to verify.\n\n465\n00:24:45.425 --> 00:24:49.428\nSo, what I did here on\nmy system is I went and\n\n466\n00:24:49.428 --> 00:24:55.460\nI downloaded everything that USF\nhad on their servers, right?\n\n467\n00:24:55.460 --> 00:24:57.171\nFor CentOS.\nI downloaded all the ISOs,\n\n468\n00:24:57.171 --> 00:25:00.060\nthe Torrent files and\nthe signature files, okay?\n\n469\n00:25:00.060 --> 00:25:02.111\nI downloaded it all from USF.\n\n470\n00:25:02.111 --> 00:25:05.780\nSo in theory, an attacker could\nhave messed with any one of these.\n\n471\n00:25:05.780 --> 00:25:11.159\nBut I want to verify that\nSHA-256 sum is unmodified and\n\n472\n00:25:11.159 --> 00:25:16.777\nsigned with the actual CentOS\nteam's private key, right?\n\n473\n00:25:16.777 --> 00:25:21.955\nSo we can do that by pulling in\nthe key from the CentOS team's server,\n\n474\n00:25:21.955 --> 00:25:24.580\nand then verifying the file.\n\n475\n00:25:24.580 --> 00:25:27.379\nNow, you might already have their\nkey loaded, if you've been verifying\n\n476\n00:25:27.379 --> 00:25:30.014\na lot of this stuff over the years,\nyou might already have their key.\n\n477\n00:25:30.014 --> 00:25:33.460\nI don't actually have mine\nif I do a gpg--list-keys.\n\n478\n00:25:33.460 --> 00:25:36.145\nI don't have any keys, right?\n\n479\n00:25:36.145 --> 00:25:41.420\n[LAUGH] So I need to get their key and you\ncan pull the key right from their server.\n\n480\n00:25:41.420 --> 00:25:46.180\nI'll do a wget, you can copy the link\n\n481\n00:25:46.180 --> 00:25:50.787\nright from their website, but it is\n\n482\n00:25:50.787 --> 00:26:00.015\nhttps//www.centos.org/keys/rpm-gpg-key=ce-\nntos-7.\n\n483\n00:26:00.015 --> 00:26:01.427\nNow, what you're thinking.\n\n484\n00:26:01.427 --> 00:26:03.295\nI'm downloading this key\nfrom their server, and\n\n485\n00:26:03.295 --> 00:26:05.349\nif their server got compromised,\nhow does that work?\n\n486\n00:26:05.349 --> 00:26:09.102\nA lot of them, actually store\ntheir keys with somebody else.\n\n487\n00:26:09.102 --> 00:26:12.442\nThere's a couple of big directories\nout there for storing gpg keys.\n\n488\n00:26:12.442 --> 00:26:16.231\nUbuntu runs one, MIT runs another, and\nyou can pull the keys from there too, and\n\n489\n00:26:16.231 --> 00:26:20.510\nthose are considered save,\nbecause those are our key repositories.\n\n490\n00:26:20.510 --> 00:26:21.913\nBut I'm gonna pull it from here.\n\n491\n00:26:21.913 --> 00:26:25.150\nWhoops, I'm gonna try, apparently I\ndo need to copy it from their site.\n\n492\n00:26:25.150 --> 00:26:30.714\nLet me make sure, rpm-gpg-key,\nit's dash not equals,\n\n493\n00:26:30.714 --> 00:26:35.640\nCentOS7, there we go, so\nI'm gonna pull that down.\n\n494\n00:26:35.640 --> 00:26:38.513\nAnd then I'll do a gpg -import and\n\n495\n00:26:38.513 --> 00:26:42.684\nI'm gonna import that key so\nI've got it, okay?\n\n496\n00:26:42.684 --> 00:26:46.356\nNow that I've got that key,\nfrom now on, from now until forever,\n\n497\n00:26:46.356 --> 00:26:49.700\nwhenever I download a copy of\nCentOS 7 I can use this to verify\n\n498\n00:26:49.700 --> 00:26:53.438\nwhether the signatures I'm\ndownloading have been tampered with,\n\n499\n00:26:53.438 --> 00:26:56.840\nwhether it's actually\nsigned with the right key.\n\n500\n00:26:56.840 --> 00:27:01.717\nSo, when I do a gpg-list-keys,\nI've got that key loaded in gpg and\n\n501\n00:27:01.717 --> 00:27:03.071\nI can hang on to it.\n\n502\n00:27:03.071 --> 00:27:06.056\nAnd it's gonna be there and\nI can start using it to test these files.\n\n503\n00:27:06.056 --> 00:27:10.114\nAnd so I can say gpg --verify\n\n504\n00:27:10.114 --> 00:27:18.470\nsha256sum.txt.asc that's\nthe one that's singed.\n\n505\n00:27:18.470 --> 00:27:21.173\nThe regular txt is not signed,\nI can't verify that.\n\n506\n00:27:21.173 --> 00:27:25.180\nBut this one had the data and\nthen right after it had the signature.\n\n507\n00:27:25.180 --> 00:27:28.689\nAnd that signature will tell me\nwhether the data's been modified and\n\n508\n00:27:28.689 --> 00:27:32.985\nwhether it's actually signed by the key\nthat I've already attained from the CentOS\n\n509\n00:27:32.985 --> 00:27:33.787\nteam, right?\n\n510\n00:27:33.787 --> 00:27:37.560\nAnd so now, if the CentOS team gets\nfull-blown hacked a week from now, right?\n\n511\n00:27:37.560 --> 00:27:39.553\nHopefully that doesn't happen,\nbut let's say they do.\n\n512\n00:27:39.553 --> 00:27:41.167\nI've already got their key.\n\n513\n00:27:41.167 --> 00:27:44.760\nSo I already know that I can verify\nwhether or not the data is legit.\n\n514\n00:27:44.760 --> 00:27:48.499\nAnd when I run that,\nit looks at it and I get.\n\n515\n00:27:48.499 --> 00:27:50.801\nGood signature from CentOS 7,\n\n516\n00:27:50.801 --> 00:27:54.989\nCentOS 7 official signing\nkey security at CentOS.org.\n\n517\n00:27:54.989 --> 00:27:55.962\nI know that's good.\n\n518\n00:27:55.962 --> 00:27:59.231\nNow, I did get a warning after it telling\nme the key is not certified with a trusted\n\n519\n00:27:59.231 --> 00:28:02.037\nsignature and that's because I just\ndownloaded it from their site.\n\n520\n00:28:02.037 --> 00:28:05.195\nIf I'd gotten that from a centralized\nkey repository then I would trust it and\n\n521\n00:28:05.195 --> 00:28:06.800\nI wouldn't get that warning.\n\n522\n00:28:06.800 --> 00:28:10.014\nBut in this case because I just downloaded\nit it doesn't really know where I got\n\n523\n00:28:10.014 --> 00:28:10.704\nthat file from.\n\n524\n00:28:10.704 --> 00:28:15.143\nSo it's saying I could have got it from\na source that was untrustworthy but\n\n525\n00:28:15.143 --> 00:28:17.040\nin my case I got it from CentOS.\n\n526\n00:28:17.040 --> 00:28:20.858\nSo I've got it its telling me\nthat its a good signature, and so\n\n527\n00:28:20.858 --> 00:28:25.630\nI know that it's valid and now I can turn\naround and I can use that file to verify\n\n528\n00:28:25.630 --> 00:28:30.568\nmy other files from there until I know\nthat's good, it's verified I'm good.\n\n529\n00:28:30.568 --> 00:28:36.428\nI can do a SHA-256 sum --check,\nSHA-256sum.txt.afc and\n\n530\n00:28:36.428 --> 00:28:40.398\nI can use that file and\nit's gonna go through and\n\n531\n00:28:40.398 --> 00:28:44.183\nit's gonna check each of those signatures.\n\n532\n00:28:44.183 --> 00:28:48.380\nI verify that this file was\nsigned by the CentOS team.\n\n533\n00:28:48.380 --> 00:28:52.269\nAnd now I can use the signatures in that\nfile to verify that my ISOs are intact.\n\n534\n00:28:52.269 --> 00:28:55.209\nAnd so this is gonna check and\nmake sure that we are doubly sure.\n\n535\n00:28:55.209 --> 00:28:57.244\nSo I am not doing all of them,\njust the first one is enough.\n\n536\n00:28:57.244 --> 00:28:58.810\nAnd I can see that it's good.\n\n537\n00:28:58.810 --> 00:29:00.959\nI know that this testing this fine and\nI am ready to go.\n\n538\n00:29:00.959 --> 00:29:03.764\nAnd if I don't want their key any more,\n\n539\n00:29:03.764 --> 00:29:09.382\nI can always to a GPG --delete-key\nfollowed by the fingerprint of that key.\n\n540\n00:29:09.382 --> 00:29:13.248\nAnd the fingerprint when you load it, it's\nreally just this little part right here.\n\n541\n00:29:13.248 --> 00:29:17.630\nThis F4, well it's what ever after\nthe slash for that public key.\n\n542\n00:29:17.630 --> 00:29:21.379\nSo I can take that oops, and\nthrow that in there, and\n\n543\n00:29:21.379 --> 00:29:23.720\nthen we can delete that key out.\n\n544\n00:29:23.720 --> 00:29:25.610\nWhoops, let me do it there.\n\n545\n00:29:25.610 --> 00:29:27.990\nAnd we can get rid of it or\nyou can keep it.\n\n546\n00:29:27.990 --> 00:29:30.428\nThe key is, they're really small,\nthey're not like take up a lot of space.\n\n547\n00:29:30.428 --> 00:29:32.490\nAnd you wanna have the keys ahead of time.\n\n548\n00:29:32.490 --> 00:29:34.687\nAnd that way if the servers\nget compromised or whatever,\n\n549\n00:29:34.687 --> 00:29:37.640\nyou know you've got the proper key and\nyou can go in and test and work from it.\n\n550\n00:29:37.640 --> 00:29:41.240\nSo that's a much more difficult\nway to verify the files.\n\n551\n00:29:41.240 --> 00:29:45.457\nBut if you wanna be absolutely sure\nthat everything's on the up and up,\n\n552\n00:29:45.457 --> 00:29:46.947\nthat's the way to do it.\n\n553\n00:29:46.947 --> 00:29:50.510\n&gt;&gt; You can't be too careful,\nawesome presentation as usual Don.\n\n554\n00:29:50.510 --> 00:29:54.846\nMD5 and SHA checksums, any final thoughts?\n\n555\n00:29:54.846 --> 00:29:56.590\n&gt;&gt; The main thing here is\njust remember to do it.\n\n556\n00:29:56.590 --> 00:29:59.531\nA lot of people get lazy or\nthey're in a rush, you download the file,\n\n557\n00:29:59.531 --> 00:30:02.547\nyou pull from some random mirror\nyou've never even heard of, right?\n\n558\n00:30:02.547 --> 00:30:05.293\nThese mirror servers are not\nnecessarily people you can trust.\n\n559\n00:30:05.293 --> 00:30:08.024\nHopefully they are, but\nyou don't know them,\n\n560\n00:30:08.024 --> 00:30:11.660\nlike I don't actually know any\nof the IT employees at USF.\n\n561\n00:30:11.660 --> 00:30:15.480\nI download stuff from their servers all\nthe time, I don't know their team, right?\n\n562\n00:30:15.480 --> 00:30:18.996\nBut I don't have to worry about whether\nI trust them or not because I can\n\n563\n00:30:18.996 --> 00:30:22.590\nalways validate the files,\nI can always verify that they're intact.\n\n564\n00:30:22.590 --> 00:30:23.850\nSo just remember to do it.\n\n565\n00:30:23.850 --> 00:30:28.415\nIf you don't do it then you\ncould be deploying compromised\n\n566\n00:30:28.415 --> 00:30:30.754\nsoftware right from day one.\n\n567\n00:30:30.754 --> 00:30:33.727\nAnd you could have the most secure\nnetwork in the world but if you're\n\n568\n00:30:33.727 --> 00:30:37.434\ndeploying a compromised OS, or compromised\napplications, you've kinda blown it\n\n569\n00:30:37.434 --> 00:30:40.950\nout of the water and you facilitate it\nby giving it administrative privileges.\n\n570\n00:30:40.950 --> 00:30:42.990\nThat's the kind of problem\nthat we're up against.\n\n571\n00:30:42.990 --> 00:30:44.376\n&gt;&gt; Right, and you can't be too secure and\n\n572\n00:30:44.376 --> 00:30:47.069\nthat's why we're doing this entire\nseries of Linux Security Techniques.\n\n573\n00:30:47.069 --> 00:30:51.080\nMake sure you watch all the episodes,\nyou'll be glad you did.\n\n574\n00:30:51.080 --> 00:30:52.494\nAnd thank you for watching ITProTV.\n\n575\n00:30:52.494 --> 00:30:54.738\nRemember a good IT Pro is always learning.\n\n576\n00:30:54.738 --> 00:30:56.000\nI'm Zach Memos.\n\n577\n00:30:56.000 --> 00:30:56.563\n&gt;&gt; And I'm Don Pezet.\n\n578\n00:30:56.563 --> 00:31:01.022\n&gt;&gt; And we'll see you very soon.\n\n579\n00:31:01.022 --> 00:31:05.050\n[MUSIC].\n\n580\n00:31:05.050 --> 00:31:08.449\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "230447297"
        },
        {
          "description": "Don and Zach discuss what we need to get started with SSH, how we get our server ready to accept SSH connections, what is wrong with default keys, generating new keys, how a client gets a public key, client connections, encrypted shell, building a secure tunnel, Telnet, and software using the tunnel.",
          "length": "2102",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-4-data_encryption_with_ssh-082117-PGM.00_37_25_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-4-data_encryption_with_ssh-082117-PGM.00_37_25_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-2-4-data_encryption_with_ssh-082117-PGM.00_37_25_18.Still001-sm.jpg",
          "title": "Data Encryption with SSH",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:02.462\nWelcome to ITProTV,\nI'm your host, Don Pezet.\n\n2\n00:00:02.462 --> 00:00:06.183\n&gt;&gt; [CROSSTALK]\n\n3\n00:00:06.183 --> 00:00:08.109\n[MUSIC]\n\n4\n00:00:08.109 --> 00:00:11.750\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:11.750 --> 00:00:13.818\n&gt;&gt; Hello, and thank you for\nchoosing ITProTV,\n\n6\n00:00:13.818 --> 00:00:15.459\nhelping you learn wherever you go.\n\n7\n00:00:15.459 --> 00:00:20.282\nI'm your host, Zach Memos as we continue\non with Linux security techniques and\n\n8\n00:00:20.282 --> 00:00:22.700\ndata encryption with SSH is on tap.\n\n9\n00:00:22.700 --> 00:00:26.460\nThe person bringing us all\nthe information we need is Don Pezet.\n\n10\n00:00:26.460 --> 00:00:28.931\nCuz he know's what he's gonna tell us,\nhe knows this stuff.\n\n11\n00:00:28.931 --> 00:00:30.298\n&gt;&gt; [LAUGH]\n&gt;&gt; I don't know this stuff,\n\n12\n00:00:30.298 --> 00:00:30.999\nhe knows this stuff.\n\n13\n00:00:30.999 --> 00:00:34.313\n&gt;&gt; Sometimes, sometimes I know\nwhat I'm gonna talk about.\n\n14\n00:00:34.313 --> 00:00:37.870\n[LAUGH] In this episode,\nwe're gonna be talking about using SSH,\n\n15\n00:00:37.870 --> 00:00:41.250\nthe secure shell protocol\nto encrypt traffic.\n\n16\n00:00:41.250 --> 00:00:44.019\nIn the Unix world, a lot of what\nwas designed was designed back when\n\n17\n00:00:44.019 --> 00:00:47.193\nthe networks were safe, when you could\ntrust the networks that you were on.\n\n18\n00:00:47.193 --> 00:00:48.399\nAnd so encryption and\n\n19\n00:00:48.399 --> 00:00:52.890\nsecurity was not at the forefront of\npeople's minds in the early days.\n\n20\n00:00:52.890 --> 00:00:55.508\nAnd as time has gone on,\nit's not like that anymore, right?\n\n21\n00:00:55.508 --> 00:00:56.623\n&gt;&gt; No.\n&gt;&gt; Things are in danger,\n\n22\n00:00:56.623 --> 00:00:57.469\nwe don't trust the networks.\n\n23\n00:00:57.469 --> 00:00:59.900\nEven our own networks can't be trusted.\n\n24\n00:00:59.900 --> 00:01:02.750\nIf potentially, an attacker has\nmanaged to get inside the network, or\n\n25\n00:01:02.750 --> 00:01:05.920\nyou have a malicious employee or\nsomething like that.\n\n26\n00:01:05.920 --> 00:01:08.720\nWe need to protect our data in transit.\n\n27\n00:01:08.720 --> 00:01:10.960\nSo we've seen several protocols\ncreep up over the years to try and\n\n28\n00:01:10.960 --> 00:01:14.980\nsolve the problem, things like\nSecure Socket Layer and stuff like that.\n\n29\n00:01:14.980 --> 00:01:19.000\nBut no one technology has\nsolved the problem as well\n\n30\n00:01:19.000 --> 00:01:22.350\nas the one we're gonna talk about\nin this episode, which is SSH.\n\n31\n00:01:22.350 --> 00:01:26.046\nSecure Shell, is what is seems,\nI almost said Secure Socket Layer.\n\n32\n00:01:26.046 --> 00:01:30.471\nSecure Shell, SSH,\nwas designed to solve the telnet problem.\n\n33\n00:01:30.471 --> 00:01:33.154\nThat telnet is what most of\nus as administrators used for\n\n34\n00:01:33.154 --> 00:01:36.250\na long time to build a remote in and\ngain shell access to a server.\n\n35\n00:01:36.250 --> 00:01:39.350\nAnd it sent everything over\nthe network in plain text,\n\n36\n00:01:39.350 --> 00:01:42.960\nwhich is just not a good thing,\nnot anymore.\n\n37\n00:01:42.960 --> 00:01:46.683\nSo SSH solved that by applying\nan encryption layer to it.\n\n38\n00:01:46.683 --> 00:01:50.583\nSo that all the data that was transmitted\nover the network can be encrypted and\n\n39\n00:01:50.583 --> 00:01:51.123\nsecured.\n\n40\n00:01:51.123 --> 00:01:54.153\nSo we're gonna take a look at how we\ncan use that with not just telnet, but\n\n41\n00:01:54.153 --> 00:01:55.855\nwith other things here in this episode.\n\n42\n00:01:55.855 --> 00:01:57.733\nWe're gonna learn more about the protocol.\n\n43\n00:01:57.733 --> 00:02:01.361\nAnd how we can leverage this to make sure\nthat our data is encrypted on the network,\n\n44\n00:02:01.361 --> 00:02:03.810\neven if the underlying\nprotocol doesn't support it.\n\n45\n00:02:03.810 --> 00:02:05.920\nWe'll get a chance to see that\nright here in this episode.\n\n46\n00:02:05.920 --> 00:02:09.800\n&gt;&gt; And the question on all of our minds\nis how do we get started with SSH?\n\n47\n00:02:09.800 --> 00:02:13.380\n&gt;&gt; Well, fortunately you probably\nalready are started with it, right?\n\n48\n00:02:13.380 --> 00:02:18.124\nSSH is so powerful, it does such a great\njob at what it does that pretty much every\n\n49\n00:02:18.124 --> 00:02:21.746\ndistribution out there, packages SSH\nalready installed with your system.\n\n50\n00:02:21.746 --> 00:02:26.140\nSSH is actually a part\nof the OpenSSH project,\n\n51\n00:02:26.140 --> 00:02:28.958\nwhich is managed by the BSD guys,\nthe OpenBSD guys.\n\n52\n00:02:28.958 --> 00:02:30.660\nSo if you've ever heard of OpenBSD,\n\n53\n00:02:30.660 --> 00:02:35.080\nit's a distribution of BSD Unix\nthat is focused on security.\n\n54\n00:02:35.080 --> 00:02:37.330\nSecurity is their first and\nforemost thought.\n\n55\n00:02:37.330 --> 00:02:41.325\nAnd so they created the OpenSSH project to\ncreate an encryption layer that they could\n\n56\n00:02:41.325 --> 00:02:42.535\ntrust and was secure.\n\n57\n00:02:42.535 --> 00:02:45.375\nAnd that got adopted by\ndarn near everybody.\n\n58\n00:02:45.375 --> 00:02:49.815\nSo if you've got a Linux distro,\na BSD distro,\n\n59\n00:02:49.815 --> 00:02:53.135\neven Macs,\nthey've got SSH installed by default.\n\n60\n00:02:53.135 --> 00:02:55.585\nIt might not be open on the firewall,\nbut it's there, and it's running.\n\n61\n00:02:55.585 --> 00:02:58.240\nSo the odds are you've already got it.\n\n62\n00:02:58.240 --> 00:03:00.550\nSo we just need to kind of configure\nit a little bit, tweak it.\n\n63\n00:03:00.550 --> 00:03:03.630\nAnd in fact, we may not even need\nto configure it much at all.\n\n64\n00:03:03.630 --> 00:03:06.360\nThere might be some certificate\nauthentication we need to configure.\n\n65\n00:03:06.360 --> 00:03:08.940\nWe might need to open up some firewall\nrules, and these are things that we've all\n\n66\n00:03:08.940 --> 00:03:12.112\nseen in previous episodes, so\nwe won't harp on it too much.\n\n67\n00:03:12.112 --> 00:03:16.820\nBut SSH uses port 22 or tcp port 22 so\nthat's got to be opened up.\n\n68\n00:03:16.820 --> 00:03:19.110\nAnd there's some other\nkind of security settings.\n\n69\n00:03:19.110 --> 00:03:23.600\nIf you didn't watch it, we did an episode\nspecifically on securing SSH, so\n\n70\n00:03:23.600 --> 00:03:25.820\ndefinitely check that one out to\nmake sure you get it up and running.\n\n71\n00:03:25.820 --> 00:03:29.380\nBut as far as getting it installed,\ntypically, already there and\n\n72\n00:03:29.380 --> 00:03:30.780\nalready functional.\n\n73\n00:03:30.780 --> 00:03:33.970\n&gt;&gt; So how do we get our server\nRAID to accept SSH connections?\n\n74\n00:03:33.970 --> 00:03:36.060\n&gt;&gt; All right, so\nthere's some of the basics, right,\n\n75\n00:03:36.060 --> 00:03:38.220\nlike getting the service\nstarted if it isn't.\n\n76\n00:03:38.220 --> 00:03:40.878\nBut from a security\ntechniques perspective,\n\n77\n00:03:40.878 --> 00:03:44.860\nI'm not usually all that happy with\nthe default configuration of SSH.\n\n78\n00:03:44.860 --> 00:03:46.049\nThere's a few things that I like to tweak.\n\n79\n00:03:46.049 --> 00:03:49.899\nAnd I don't wanna spend a ton of time\non it cuz we did cover a lot of this in\n\n80\n00:03:49.899 --> 00:03:51.220\nthe securing SSH show.\n\n81\n00:03:51.220 --> 00:03:53.650\nBut one of the big things that I\nlike to do is restrict the version.\n\n82\n00:03:53.650 --> 00:03:56.160\nSo let me show you what I'm talking about.\n\n83\n00:03:56.160 --> 00:04:01.406\nThe SSH daemon stores\na configuration inside of /etc/ssh.\n\n84\n00:04:01.406 --> 00:04:04.400\nAnd if you poke around that folder,\nyou'll notice a lot of stuff.\n\n85\n00:04:04.400 --> 00:04:08.210\nThe file that I'm looking for\nis this guy right here sshd_config.\n\n86\n00:04:08.210 --> 00:04:11.260\nNow be careful because\n\n87\n00:04:11.260 --> 00:04:16.670\nthere's a ssh_config which is\nthe ssh client and, whoops, sorry.\n\n88\n00:04:16.670 --> 00:04:20.250\nAnd then, there's sshd_config,\nthat's the daemon.\n\n89\n00:04:20.250 --> 00:04:22.980\nAnd if this is our server, and\nwe're trying to control connections to\n\n90\n00:04:22.980 --> 00:04:25.070\nthe server,\nit's the daemon that we wanna configure.\n\n91\n00:04:25.070 --> 00:04:27.820\nSo we've got to make sure\nthat we get that one correct.\n\n92\n00:04:27.820 --> 00:04:34.620\nAnd so, I'm gonna edit,\nlet's see, /etc/ssh/sshd_config.\n\n93\n00:04:34.620 --> 00:04:36.670\nAnd when you go in here,\nyou'll see the server configuration.\n\n94\n00:04:36.670 --> 00:04:38.150\nAnd I talk about this in the other show.\n\n95\n00:04:38.150 --> 00:04:41.330\nBut the main thing that I wanna point out,\nif you scroll through here,\n\n96\n00:04:41.330 --> 00:04:44.460\nyou'll find an entry\nwhere it says protocol.\n\n97\n00:04:44.460 --> 00:04:48.900\nAnd I should have just searched for\nit cuz I probably passed it at this point.\n\n98\n00:04:48.900 --> 00:04:55.280\nSo let me do a quick search for protocol,\nand actually, the entry is not in here.\n\n99\n00:04:55.280 --> 00:04:56.440\nInteresting, all right.\n\n100\n00:04:56.440 --> 00:04:59.620\nWell, I will add it except that\nexplains why I didn't see it.\n\n101\n00:04:59.620 --> 00:05:03.950\nSo what I usually do is somewhere around\nthe port number section right here,\n\n102\n00:05:03.950 --> 00:05:08.980\nyou can add an extra line that says\nwhat protocols you wanna listen to.\n\n103\n00:05:08.980 --> 00:05:12.990\nAnd you can say Protocol 1 and\nit'll just listen for SSH version 1.\n\n104\n00:05:12.990 --> 00:05:16.214\nOr you can say 1 space 2 and\nit'll listen for connections for\n\n105\n00:05:16.214 --> 00:05:18.090\nSSH version 1 and version 2.\n\n106\n00:05:18.090 --> 00:05:21.590\nBut SSH version 1 is not\nconsidered secure anymore.\n\n107\n00:05:21.590 --> 00:05:22.850\nIt's not considered strong enough.\n\n108\n00:05:22.850 --> 00:05:24.600\nThe encryption it uses is too weak.\n\n109\n00:05:24.600 --> 00:05:28.291\nSo we typically want to\nforce protocol version 2.\n\n110\n00:05:28.291 --> 00:05:31.569\nAll right, that's gonna require\nSSH version 2 connections and\n\n111\n00:05:31.569 --> 00:05:33.050\nnot allow version 1.\n\n112\n00:05:33.050 --> 00:05:35.500\nNow, I'm on\na Red Hat Enterprise Linux System, and\n\n113\n00:05:35.500 --> 00:05:37.170\nthis option wasn't in here by default.\n\n114\n00:05:37.170 --> 00:05:41.060\nSo they may have actually set theirs\nto default to version 2, I don't know.\n\n115\n00:05:41.060 --> 00:05:44.980\nBut if you're on DB or Ubuntu or other\ndistros, you just need to double check and\n\n116\n00:05:44.980 --> 00:05:47.560\nmake sure that you're not\nlistening on one anymore.\n\n117\n00:05:47.560 --> 00:05:49.180\nJust don't even bother listening on one,\n\n118\n00:05:49.180 --> 00:05:51.120\nbecause the encryption is\njust not considered safe.\n\n119\n00:05:51.120 --> 00:05:55.310\nSo that's one thing that we definitely\nwant to double check before we get there.\n\n120\n00:05:55.310 --> 00:05:58.980\nNow the other thing is,\nif we kind of poke around in this file,\n\n121\n00:05:58.980 --> 00:06:01.790\ndo you see how right beneath it,\nthere's these host keys?\n\n122\n00:06:01.790 --> 00:06:04.820\nAnd this is telling where\nI can find the public key,\n\n123\n00:06:04.820 --> 00:06:08.830\nprivate key pairs that are gonna\nbe used for doing the encryption.\n\n124\n00:06:08.830 --> 00:06:16.080\nAnd as I look at these, I've got RSA,\nECDSA, Ed25519, all these different ones.\n\n125\n00:06:16.080 --> 00:06:18.060\nThese are the keys that\nit's gonna look for\n\n126\n00:06:18.060 --> 00:06:20.590\nwhen the system starts to do encryption.\n\n127\n00:06:20.590 --> 00:06:26.170\nAnd when I get out and I look inside of\n/etc/ssh, that's where all those keys are.\n\n128\n00:06:26.170 --> 00:06:28.301\nAnd we'll probably wanna throw those\naway and generate new ones anyway.\n\n129\n00:06:28.301 --> 00:06:31.630\nAnd that'd be kind of another step of our\nconfiguration as we get moving forward.\n\n130\n00:06:32.760 --> 00:06:35.250\n&gt;&gt; So what's wrong with the default keys?\n\n131\n00:06:35.250 --> 00:06:37.462\n&gt;&gt; Well the default keys work, right?\n\n132\n00:06:37.462 --> 00:06:38.495\nTechnically, SSH is up and running.\n\n133\n00:06:38.495 --> 00:06:39.552\nThe keys are right there.\n\n134\n00:06:39.552 --> 00:06:40.900\nThey work.\n\n135\n00:06:40.900 --> 00:06:44.142\nThe problem is, when you install a distro,\n\n136\n00:06:44.142 --> 00:06:48.040\nyou're kind of trusting that\nthey set up these keys right.\n\n137\n00:06:48.040 --> 00:06:50.120\nOkay now,\nI'm running Red Hat Enterprise Linux.\n\n138\n00:06:50.120 --> 00:06:52.159\nSo I guarantee you,\nthese keys will generate it right.\n\n139\n00:06:52.159 --> 00:06:54.469\n&gt;&gt; Right.\n&gt;&gt; Which means I did the install,\n\n140\n00:06:54.469 --> 00:06:55.880\nit fired up the system.\n\n141\n00:06:55.880 --> 00:06:57.116\nIt completed the install.\n\n142\n00:06:57.116 --> 00:06:59.701\nIt rebooted with full hardware support and\n\n143\n00:06:59.701 --> 00:07:04.010\nthen it generated the SSH keys\nunique to my system, all right.\n\n144\n00:07:04.010 --> 00:07:07.870\nBut, that doesn't always happen\nwith other distributions.\n\n145\n00:07:07.870 --> 00:07:11.130\nDistributions that aren't security\nfocused have a couple of mistakes they\n\n146\n00:07:11.130 --> 00:07:11.740\nfrequently make.\n\n147\n00:07:11.740 --> 00:07:13.500\nSo let me highlight the bigger mistakes.\n\n148\n00:07:13.500 --> 00:07:16.710\n&gt;&gt; Okay.\n&gt;&gt; Mistake number one is they use keys\n\n149\n00:07:16.710 --> 00:07:21.230\nthey generated at the factory, right, and\nthey just include them in the distro.\n\n150\n00:07:21.230 --> 00:07:26.610\nWhat that means is that every\ninstall has the same default keys.\n\n151\n00:07:26.610 --> 00:07:28.800\nSo you could just take the private\nkey out of your folder and\n\n152\n00:07:28.800 --> 00:07:31.800\nuse it to decrypt anybody else's data that\nwas using the same version of that distro.\n\n153\n00:07:31.800 --> 00:07:34.209\nThat's really bad, and\nI know what you're thinking,\n\n154\n00:07:34.209 --> 00:07:35.651\nwhat kind of idiot would do that?\n\n155\n00:07:35.651 --> 00:07:36.998\nWell.\n&gt;&gt; [LAUGH]\n\n156\n00:07:36.998 --> 00:07:38.247\n&gt;&gt; I know one and it is Cisco [LAUGH].\n\n157\n00:07:38.247 --> 00:07:40.900\n&gt;&gt; [LAUGH]\n&gt;&gt; They have these Linksys routers\n\n158\n00:07:40.900 --> 00:07:43.302\nthat were all sent out in-\n&gt;&gt; But he means that in a good way.\n\n159\n00:07:43.302 --> 00:07:46.583\n&gt;&gt; Yeah, well some employee in Cisco.\n\n160\n00:07:46.583 --> 00:07:48.756\n&gt;&gt; That's right.\n&gt;&gt; All these Linksys routers went out\n\n161\n00:07:48.756 --> 00:07:50.100\nwith the same private key.\n\n162\n00:07:50.100 --> 00:07:51.971\n&gt;&gt; Right.\n&gt;&gt; And that meant that if you didn't\n\n163\n00:07:51.971 --> 00:07:54.337\nchange that key,\nyou were using the default one.\n\n164\n00:07:54.337 --> 00:07:56.407\nAnd anybody else that had that\nrouter had the same key as you so\n\n165\n00:07:56.407 --> 00:07:57.591\nthey could decrypt your data now.\n\n166\n00:07:57.591 --> 00:07:59.020\nSo that's problem number one.\n\n167\n00:07:59.020 --> 00:08:03.303\nProblem number 2, is when they generate\nthe key, maybe they don't a preceded key,\n\n168\n00:08:03.303 --> 00:08:04.027\nwhich is bad.\n\n169\n00:08:04.027 --> 00:08:07.450\nInstead, they say we'll generate\nyour key during the install.\n\n170\n00:08:07.450 --> 00:08:12.116\nAll right, well, during the install your\nsystem will boot to a very limited version\n\n171\n00:08:12.116 --> 00:08:14.910\nof Linux, like the Anaconda installer.\n\n172\n00:08:14.910 --> 00:08:17.820\nAnd that means that you might have\na hardware random number generators,\n\n173\n00:08:17.820 --> 00:08:21.380\nthat are not being loaded because\nthe drivers are loaded yeah, right?\n\n174\n00:08:21.380 --> 00:08:23.330\nSo if it generate your keys then,\n\n175\n00:08:23.330 --> 00:08:27.050\nit's generating them with weak\nentropy if it had just wait it.\n\n176\n00:08:27.050 --> 00:08:28.080\nWait for the first boot,\n\n177\n00:08:28.080 --> 00:08:31.210\nwhen it boots up of all the full driver\nset in generating the keys then.\n\n178\n00:08:32.210 --> 00:08:34.494\nIt would've had the full hardware\nrandom number generators,\n\n179\n00:08:34.494 --> 00:08:37.391\nthe processor acceleration, all the other\nthings that give you good entropy.\n\n180\n00:08:37.391 --> 00:08:39.930\nWhich means you generate\ngood private keys, right?\n\n181\n00:08:39.930 --> 00:08:43.900\nBut if the distro generates it during\nthe installer, it'll often times be weak.\n\n182\n00:08:43.900 --> 00:08:46.340\nAnd so now you end up with\nkeys that are weak, and so\n\n183\n00:08:46.340 --> 00:08:48.810\nnow what I do is I just never\ntrust the default keys.\n\n184\n00:08:48.810 --> 00:08:52.930\nI don't like the default keys I get\nrid of them and I generate my own.\n\n185\n00:08:52.930 --> 00:08:57.170\nAnd that way I know that first off, I know\nthey're unique because I made them myself.\n\n186\n00:08:57.170 --> 00:09:01.260\nAnd second I know that my hardware\nrandom number generation is working and\n\n187\n00:09:01.260 --> 00:09:03.730\nthat it's in place when\nI generate these keys.\n\n188\n00:09:03.730 --> 00:09:07.521\nSo even when I'm on Red Hat servers\nwhere I know they did a good job,\n\n189\n00:09:07.521 --> 00:09:09.236\nI still generate my own keys.\n\n190\n00:09:09.236 --> 00:09:12.181\nEven if I'm on OpenBSD, where these\nare the guys who invented this stuff,\n\n191\n00:09:12.181 --> 00:09:13.720\nI still generate my own keys.\n\n192\n00:09:13.720 --> 00:09:14.630\nBecause I want to know.\n\n193\n00:09:14.630 --> 00:09:15.730\nI want to have that peace of mind.\n\n194\n00:09:15.730 --> 00:09:19.310\nSo, I'm gonna chuck these keys out and\nget rid of them.\n\n195\n00:09:19.310 --> 00:09:22.542\nThe other thing is you might have keys for\nweaker algorithms.\n\n196\n00:09:22.542 --> 00:09:25.337\nAnd so,\nyou might not want those either but.\n\n197\n00:09:25.337 --> 00:09:29.426\nAs I look at these keys,\nyou got the files like SSH host,\n\n198\n00:09:29.426 --> 00:09:32.770\nECDSA_key and the same name with dot.pub.\n\n199\n00:09:32.770 --> 00:09:35.193\nThe one that doesn't have an extension,\nthat's the private key.\n\n200\n00:09:35.193 --> 00:09:37.250\nAnd the one that's dot.pub,\nthat's the public key.\n\n201\n00:09:37.250 --> 00:09:39.740\nSo I can see it's already\ngenerated these keys.\n\n202\n00:09:39.740 --> 00:09:42.860\nThey're right here and\nthe system is up and ready.\n\n203\n00:09:42.860 --> 00:09:45.030\nI could just use it like it is, but\n\n204\n00:09:45.030 --> 00:09:47.340\nI really want to throw those keys out and\nget my own.\n\n205\n00:09:47.340 --> 00:09:48.885\n&gt;&gt; Well is it hard to generate new keys?\n\n206\n00:09:48.885 --> 00:09:50.231\nYou know, it really isn't.\n\n207\n00:09:50.231 --> 00:09:53.530\nIt just takes a few moments, and that's\nwhy there's really no reason to keep\n\n208\n00:09:53.530 --> 00:09:56.684\nthese, and if it only take some few\nmoments [INAUDIBLE] you might as well.\n\n209\n00:09:56.684 --> 00:10:00.010\nIf I want to generate new keys,\nstep one is to get rid of these, right?\n\n210\n00:10:00.010 --> 00:10:03.570\nSo make sure you're at\na root privilege level, so\n\n211\n00:10:03.570 --> 00:10:07.510\nI did a sudo–s to get my shell elevated,\nand\n\n212\n00:10:07.510 --> 00:10:12.980\nI'm just going to do a quick rm–f,\n-f is to force.\n\n213\n00:10:12.980 --> 00:10:14.790\nI shouldn't need force on these files.\n\n214\n00:10:14.790 --> 00:10:19.950\nBut, I'm gonna wipe out /etcs,\n/ ssh /*key*.\n\n215\n00:10:19.950 --> 00:10:21.940\nI'm gonna get rid of\nanything that has key in it.\n\n216\n00:10:21.940 --> 00:10:23.610\nWhich is gonna be all these key files.\n\n217\n00:10:23.610 --> 00:10:24.860\nI'm just gonna toast those.\n\n218\n00:10:24.860 --> 00:10:28.660\nYou might, you might,\nwant to document which keys you have.\n\n219\n00:10:28.660 --> 00:10:30.880\nLike technically,\nI've got three sets of keys here.\n\n220\n00:10:30.880 --> 00:10:33.820\nRSA, ECDSA, and ED25519.\n\n221\n00:10:33.820 --> 00:10:36.520\nAlright, so\nthose are the three keys that I have.\n\n222\n00:10:36.520 --> 00:10:40.530\nI can generate just those three or I might\neven generate less keys, if I want to\n\n223\n00:10:40.530 --> 00:10:43.800\nforce the system to use one particular\nset of keys, or I might even want more,\n\n224\n00:10:43.800 --> 00:10:46.130\nthere's other algorithms I can add,\nso that's all up to me.\n\n225\n00:10:46.130 --> 00:10:48.000\nBut anyway, I'm gonna get rid of those.\n\n226\n00:10:48.000 --> 00:10:53.870\nAnd so now, my directory just has SSH\nconfig, SSH deconfig, and mod ULI.\n\n227\n00:10:53.870 --> 00:10:56.160\nSo those are the three\nfiles that are left.\n\n228\n00:10:56.160 --> 00:10:58.870\nNow I can generate my own keys, all right?\n\n229\n00:10:58.870 --> 00:11:02.640\nIf I generate them with the same file\nnames, then that'll save me a lot of\n\n230\n00:11:02.640 --> 00:11:05.230\neffort, because the config file is\nexpecting them to be these file names.\n\n231\n00:11:05.230 --> 00:11:06.600\nBut I can generate the key with any name.\n\n232\n00:11:06.600 --> 00:11:08.780\nI would just have to go and\nedit the config file.\n\n233\n00:11:08.780 --> 00:11:11.300\nNow I'm gonna leave the key names the same\nand I'm gonna do that for two reasons.\n\n234\n00:11:11.300 --> 00:11:13.280\nOne, I don't wanna deal\nwith changing it right?\n\n235\n00:11:13.280 --> 00:11:15.850\nBut two, is if you're doing\nthis across a thousand servers,\n\n236\n00:11:15.850 --> 00:11:17.460\nit's nice to have some consistency.\n\n237\n00:11:17.460 --> 00:11:19.550\nSo I like to stay at\nthe kind of a default value.\n\n238\n00:11:19.550 --> 00:11:23.940\nSo to go and journey the new ones,\nI'm just gonna use ssh-keygen and\n\n239\n00:11:23.940 --> 00:11:25.850\nso it's ssh-keygen.\n\n240\n00:11:25.850 --> 00:11:30.030\nAnd then we'll do -t to specify the type\nso we can designate A algorithm.\n\n241\n00:11:30.030 --> 00:11:33.760\nAnd the default file names actually\nhave what you want to type here, right?\n\n242\n00:11:33.760 --> 00:11:38.453\nECDSA is considered the stronger key\nright now, that's what most people use.\n\n243\n00:11:38.453 --> 00:11:41.810\nED25519 is not that popular,\nbut it's out there.\n\n244\n00:11:41.810 --> 00:11:43.750\nRSA is the older key, right?\n\n245\n00:11:43.750 --> 00:11:45.104\nNot the oldest,\nthere's actually another one.\n\n246\n00:11:45.104 --> 00:11:48.920\nThat's RSA 1, that would be for\nSSH version 1.\n\n247\n00:11:48.920 --> 00:11:49.560\nThat's a bad one.\n\n248\n00:11:49.560 --> 00:11:52.827\nIf you see that one, you need to disable\nprotocol version one, delete those keys,\n\n249\n00:11:52.827 --> 00:11:56.014\nand don't bother creating new ones because\nthey're not really gonna help you.\n\n250\n00:11:56.014 --> 00:11:59.870\nI'm gonna regenerate, and\nI definitely want the ECBSA.\n\n251\n00:11:59.870 --> 00:12:01.860\nThat's the main one that I'm gonna use.\n\n252\n00:12:01.860 --> 00:12:04.730\nWhether I choose to generate the other\nones is up to me, I don't have to.\n\n253\n00:12:04.730 --> 00:12:08.130\nBut I'm gonna say ssh-keygen-t.\n\n254\n00:12:08.130 --> 00:12:12.465\nEcdsa, because that's what I wanna\ngenerate, and then I need to tell it -f,\n\n255\n00:12:12.465 --> 00:12:14.252\nand where I wanna put the files.\n\n256\n00:12:14.252 --> 00:12:18.087\nI'm gonna put the files in\n\n257\n00:12:18.087 --> 00:12:25.589\n/etc/ssh/ssh_host_ecdsa_keep, right?\n\n258\n00:12:25.589 --> 00:12:26.441\nThat's where it's going to put it.\n\n259\n00:12:26.441 --> 00:12:30.700\nAnd that's just the exact same file\nname that it had before, right?\n\n260\n00:12:30.700 --> 00:12:32.810\nAnd when I run that,\nit's going to generate it.\n\n261\n00:12:32.810 --> 00:12:34.330\nIt's going to ask for a passphrase, and\n\n262\n00:12:34.330 --> 00:12:36.810\nI don't need a pass phrase on this one\nbecause the service is accessing it.\n\n263\n00:12:36.810 --> 00:12:38.320\nIf I put a pass phrase on there,\n\n264\n00:12:38.320 --> 00:12:41.534\nI'm gonna have to provide that passphrase\nevery time I restart that service.\n\n265\n00:12:41.534 --> 00:12:42.550\n&gt;&gt; Wow.\n&gt;&gt; So that would be a problem.\n\n266\n00:12:42.550 --> 00:12:46.790\nSo I'm just gonna press enter twice,\nand it will generate that key, alright.\n\n267\n00:12:46.790 --> 00:12:50.750\nNow I have a private key that doesn't have\na passphrase, so I need to protect that.\n\n268\n00:12:50.750 --> 00:12:53.632\nIf somebody gets the private key,\nthey can decrypt my data,\n\n269\n00:12:53.632 --> 00:12:56.812\nthat kind of goes without saying but,\nit's going to generate it.\n\n270\n00:12:56.812 --> 00:13:00.850\nAnd not only does it generate the private\nkey but it also generates the public key.\n\n271\n00:13:00.850 --> 00:13:03.320\nSo I've got both of\nthose files right there.\n\n272\n00:13:03.320 --> 00:13:07.330\nAnd if I just want to support ECDSA,\nI'm done, I could stop there.\n\n273\n00:13:07.330 --> 00:13:08.930\nBut, if I want to support\nthe other protocols,\n\n274\n00:13:08.930 --> 00:13:10.440\nI just run the same command again.\n\n275\n00:13:10.440 --> 00:13:14.010\nAnd I change it to whatever\nthe other algorithm is.\n\n276\n00:13:14.010 --> 00:13:17.690\nSo, if I want to have RSA,\nI can punch that in.\n\n277\n00:13:17.690 --> 00:13:19.660\nIt'll generate that key, as well.\n\n278\n00:13:19.660 --> 00:13:21.050\nSame basic process.\n\n279\n00:13:21.050 --> 00:13:24.153\nAnd, now that it's got it,\nI'm pretty much in business right?\n\n280\n00:13:24.153 --> 00:13:30.041\nSo I've got those keys, I can do, I guess\nfor completeness I could do the ed 25519.\n\n281\n00:13:30.041 --> 00:13:35.683\nAnd that way I have the exact same keys\nthat the system had when it started so\n\n282\n00:13:35.683 --> 00:13:39.000\nI know it'll be happy and there we go.\n\n283\n00:13:39.000 --> 00:13:43.760\nAnd now I've got all those keys recreated\nexcept I know I used them myself, and\n\n284\n00:13:43.760 --> 00:13:48.490\nI know whatever hardware entropy sources\nI had are already fired up and working.\n\n285\n00:13:48.490 --> 00:13:50.143\nI know these are good keys and\nI got them, and\n\n286\n00:13:50.143 --> 00:13:51.944\nit really didn't take that much time,\nright?\n\n287\n00:13:51.944 --> 00:13:52.810\nIt was just one command.\n\n288\n00:13:52.810 --> 00:13:56.511\n[CROSSTALK] And once you've got it,\nnow you're in business,\n\n289\n00:13:56.511 --> 00:13:58.730\nnow SSH is already running, right?\n\n290\n00:13:58.730 --> 00:14:01.420\nI probably need to restart it\nat this point so let me do that.\n\n291\n00:14:01.420 --> 00:14:06.720\nI'll say systemctl restart sshd.service,\nand it's gonna restart.\n\n292\n00:14:06.720 --> 00:14:10.880\nNow it's reloaded with my new keys and\nI'm ready to go.\n\n293\n00:14:10.880 --> 00:14:13.465\n&gt;&gt; So how does a client get a public key?\n\n294\n00:14:13.465 --> 00:14:16.750\n&gt;&gt; Alright so the client side, this is\nwhere things get a little bit tricky.\n\n295\n00:14:16.750 --> 00:14:20.200\nWhen a client connects to the server,\nit's gonna get the public key, and\n\n296\n00:14:20.200 --> 00:14:22.717\nit's gonna validate\nthe identity of the public key.\n\n297\n00:14:22.717 --> 00:14:25.630\nHow does it know the server is\nwho they say they are, right?\n\n298\n00:14:25.630 --> 00:14:30.260\nAnd what you'll see is, well I've been\nSSH-ing into the server like crazy, so\n\n299\n00:14:30.260 --> 00:14:32.212\nactually this would be a good chance.\n\n300\n00:14:32.212 --> 00:14:34.760\nI'm SSH-ing into the server right now.\n\n301\n00:14:34.760 --> 00:14:38.340\nI just changed its keys, so\nif I drop over to my workstation.\n\n302\n00:14:38.340 --> 00:14:39.380\nThis is my actual laptop now.\n\n303\n00:14:39.380 --> 00:14:42.880\nI'm gonna try and\nconnect back into that server, alright.\n\n304\n00:14:42.880 --> 00:14:48.140\nAnd I'm gonna specify that I'm\nlogging in as dpezet, right?\n\n305\n00:14:48.140 --> 00:14:52.903\nSo I'm logging in as\ndpezet@172.16.0.128 that's that server.\n\n306\n00:14:52.903 --> 00:14:55.580\nNow I've been connecting to\nit all throughout the series.\n\n307\n00:14:55.580 --> 00:14:58.844\nAnd it had those keys\nthat came as a default.\n\n308\n00:14:58.844 --> 00:15:01.420\n&gt;&gt; Mm-hm.\n&gt;&gt; But now I've changed those keys.\n\n309\n00:15:01.420 --> 00:15:05.450\nSo when I remote in I get this\ngreat big warning, right.\n\n310\n00:15:05.450 --> 00:15:06.393\nWarning.\n\n311\n00:15:06.393 --> 00:15:09.780\n&gt;&gt; Danger Will Robinson.\n&gt;&gt; Remote host identification has changed.\n\n312\n00:15:09.780 --> 00:15:12.920\nIt's telling me that the key\ndoesn't match any more.\n\n313\n00:15:12.920 --> 00:15:17.090\nWhat happens is, every time you logged\ninto a SSH host it caches the key.\n\n314\n00:15:17.090 --> 00:15:18.736\nAnd it's telling me that,\nit's telling me that right here.\n\n315\n00:15:18.736 --> 00:15:24.440\n/home/dpezet /.ssh,\na hidden folder, /known_hosts.\n\n316\n00:15:24.440 --> 00:15:29.530\nThat folder is caching the keys of\nevery system that I'm connecting to.\n\n317\n00:15:29.530 --> 00:15:32.500\nAnd, when it did that,\nwhen it reached out to the server,\n\n318\n00:15:32.500 --> 00:15:35.720\nit noticed that it no longer matches,\nand I've got a problem, okay?\n\n319\n00:15:35.720 --> 00:15:37.230\nNow, that protects me.\n\n320\n00:15:37.230 --> 00:15:39.870\nBecause, in this case,\nI know it's gonna generated new keys.\n\n321\n00:15:39.870 --> 00:15:42.960\nBut, I could be trying to connect to\na server that a hacker's broken into.\n\n322\n00:15:42.960 --> 00:15:44.600\nA hacker's changed the keys.\n\n323\n00:15:44.600 --> 00:15:48.090\nSo, that they have the private key and\nthey can decrypt everything.\n\n324\n00:15:48.090 --> 00:15:51.390\nIf I connected now,\nthe session's encrypted.\n\n325\n00:15:51.390 --> 00:15:53.680\nBut, the attacker already has\nthe private keys, so they can read it.\n\n326\n00:15:53.680 --> 00:15:55.357\nThey can see everything.\n\n327\n00:15:55.357 --> 00:15:57.629\nI need to know that there's\na violation with this.\n\n328\n00:15:57.629 --> 00:16:01.650\nNow, let's say that I was\nstarting out fresh and clean.\n\n329\n00:16:01.650 --> 00:16:05.234\nI'm gonna, just delete that file.\n\n330\n00:16:05.234 --> 00:16:09.477\nNormally, I would edit that file, and\nI would just delete the one line for\n\n331\n00:16:09.477 --> 00:16:11.390\nthe server that was cached.\n\n332\n00:16:11.390 --> 00:16:12.550\nIn my case, I'm gonna delete it,\n\n333\n00:16:12.550 --> 00:16:14.560\nbecause I don't remember what\nall host that connected to.\n\n334\n00:16:14.560 --> 00:16:16.160\nI don't want to show other keys.\n\n335\n00:16:16.160 --> 00:16:18.720\nThe public keys at this point,\nso it really wouldn't matter.\n\n336\n00:16:18.720 --> 00:16:21.060\nBut, I'm going to delete that file so\nit's empty.\n\n337\n00:16:21.060 --> 00:16:23.293\nAnd then I'll reattempt\nthat SSH connection.\n\n338\n00:16:23.293 --> 00:16:25.710\nNow when I connect,\nI get something different, right?\n\n339\n00:16:25.710 --> 00:16:29.800\nThis is the first time I've connected to\nthis server, as far as it's concerned.\n\n340\n00:16:29.800 --> 00:16:34.680\nAnd so, when I connect,\nit says hey, I got a ECDSA key,\n\n341\n00:16:34.680 --> 00:16:38.390\nbut I don't know if this is real, right?\n\n342\n00:16:38.390 --> 00:16:40.180\nIs this the real key,\nor is this a fake key?\n\n343\n00:16:40.180 --> 00:16:44.401\nAnd it's giving me the SHA256 fingerprint,\nright here, of that key, right?\n\n344\n00:16:44.401 --> 00:16:46.590\nIt's also giving me the MD5 one,\nso I can use either one.\n\n345\n00:16:46.590 --> 00:16:48.831\nAnd it's saying, are you sure\nyou want to continue connecting?\n\n346\n00:16:48.831 --> 00:16:50.310\nWell, I don't know.\n\n347\n00:16:51.480 --> 00:16:53.450\nIs that the key, right?\n\n348\n00:16:53.450 --> 00:16:56.448\nWell, if I'm the one that set it up,\nI'm just going to say no right now.\n\n349\n00:16:56.448 --> 00:16:59.670\nIf I'm gonna set this up,\nwhen I generated the key,\n\n350\n00:16:59.670 --> 00:17:03.639\nif I scroll back to where I\ngenerated the ECDSA key, right here.\n\n351\n00:17:03.639 --> 00:17:05.407\nIt gave me the SHA256 finger print.\n\n352\n00:17:05.407 --> 00:17:10.300\nI can see it right there, and so\nI could go on, I can compare this right.\n\n353\n00:17:10.300 --> 00:17:12.445\nStarts with aum ends with eai and\n\n354\n00:17:12.445 --> 00:17:16.269\nI go back here, and\nI see starts with aum, ends with eai.\n\n355\n00:17:16.269 --> 00:17:21.252\nI can do a better comparison but, looking\nat it there, It looks like they match,\n\n356\n00:17:21.252 --> 00:17:22.170\nright?\n\n357\n00:17:22.170 --> 00:17:25.490\nAnd I can do that because,\nI'm the one who generated these keys, but\n\n358\n00:17:25.490 --> 00:17:27.510\nmost of the time that's not the case.\n\n359\n00:17:27.510 --> 00:17:30.590\nI'm not the one who generated the key,\nsomebody else generated the key.\n\n360\n00:17:30.590 --> 00:17:32.330\nSo how do I know if it matches?\n\n361\n00:17:32.330 --> 00:17:34.775\nI could say, it probably matches, yes.\n\n362\n00:17:34.775 --> 00:17:36.870\n&gt;&gt; [LAUGH]\n&gt;&gt; And just throw caution to the wind,\n\n363\n00:17:36.870 --> 00:17:39.890\nbut SSH is giving us a chance\nto make sure that this\n\n364\n00:17:39.890 --> 00:17:43.020\nis the actual server we're\nsupposed to be connecting to.\n\n365\n00:17:43.020 --> 00:17:46.840\nSo if I know that fingerprint,\nthen I can connect.\n\n366\n00:17:46.840 --> 00:17:50.080\nAnd I can connect securely, and\nknow that it's the right one.\n\n367\n00:17:50.080 --> 00:17:54.140\nSo, the problem I've got here is,\nI need to get that fingerprint.\n\n368\n00:17:54.140 --> 00:17:56.270\nAnd if I already know it, then I'm fine.\n\n369\n00:17:56.270 --> 00:17:59.450\nBut if I don't, there's a few\ntechniques that we can use here, right?\n\n370\n00:17:59.450 --> 00:18:04.490\nThere's a command that we can run\ncalled ssh-keyscan, all right?\n\n371\n00:18:04.490 --> 00:18:08.530\nAnd what it does, it lets you look at\na server, get its key, and cache it.\n\n372\n00:18:08.530 --> 00:18:12.755\nSo I could be at the office, and I know I\nam on the same network because the server,\n\n373\n00:18:12.755 --> 00:18:16.255\nand I know that nobody can be\nrerouting my traffic somewhere else.\n\n374\n00:18:16.255 --> 00:18:18.880\nSo, I know I am on the right place.\n\n375\n00:18:18.880 --> 00:18:23.106\nAnd I can just say a SSH-keyscan,\nand then point to the server, so\n\n376\n00:18:23.106 --> 00:18:29.162\nI'll point 172.16.0.128, and then I can\npipe that, let me do it on pen, right?\n\n377\n00:18:29.162 --> 00:18:33.390\nSo two greater symbols were and\noutput of this command.\n\n378\n00:18:33.390 --> 00:18:41.040\nAnd I can send that to\ntil/.ssh/known_host and\n\n379\n00:18:41.040 --> 00:18:45.120\nit will add that key to\nthe end of my known host file.\n\n380\n00:18:45.120 --> 00:18:47.390\nAll right, if I know for\n\n381\n00:18:47.390 --> 00:18:52.420\na fact that I have got a unalterable\nconnection to the server this works great.\n\n382\n00:18:52.420 --> 00:18:55.290\n&gt;&gt; Okay, but if I'm at home, and\nI'm remoting over the internet, and\n\n383\n00:18:55.290 --> 00:18:57.210\nmy traffic could be getting\nredirected anywhere.\n\n384\n00:18:57.210 --> 00:18:59.430\nI could be getting hijacked\nanywhere along the way.\n\n385\n00:18:59.430 --> 00:19:03.220\nThen this is really no different,\nthen just S-S-H-ing in and\n\n386\n00:19:03.220 --> 00:19:05.900\nsaying yes when it prompts me for\nthe fingerprint.\n\n387\n00:19:05.900 --> 00:19:07.340\nThis doesn't really help me.\n\n388\n00:19:07.340 --> 00:19:12.230\nBut I could do, SSH-keyscan,\nand just run it like that, and\n\n389\n00:19:12.230 --> 00:19:15.100\nit will bring up the key,\nand let me see it.\n\n390\n00:19:15.100 --> 00:19:20.830\nSo here it's showing me the RSA key,\nthe ECDSA key, and the ed25519.\n\n391\n00:19:20.830 --> 00:19:24.870\nSeeing all 3 keys that\nare available on this server.\n\n392\n00:19:24.870 --> 00:19:26.010\nAnd i can look at them, and\nI can say, Is this right?\n\n393\n00:19:26.010 --> 00:19:27.160\nIs this valid?\n\n394\n00:19:27.160 --> 00:19:33.287\nAnd if it is, then I can pipe\nthat into my .ssh/known_hosts,\n\n395\n00:19:33.287 --> 00:19:40.720\nand I can throw it in there, and\nit's gonna add those keys to that file.\n\n396\n00:19:40.720 --> 00:19:45.340\nAnd now, when I go to connect,\nI can come in, and\n\n397\n00:19:45.340 --> 00:19:50.250\nI can, connect and\nit doesn't warn me about the key.\n\n398\n00:19:50.250 --> 00:19:55.080\nI've already got the key cached, I know\nit's right, and I can connect in and\n\n399\n00:19:55.080 --> 00:19:56.810\nnow I'm using the system, right?\n\n400\n00:19:56.810 --> 00:19:59.510\nBut again, this assumes that I had\nsome kind of actual connection.\n\n401\n00:19:59.510 --> 00:20:04.020\nSo the better route to handle this,\nwould be to go to the server and\n\n402\n00:20:04.020 --> 00:20:05.490\nfigure out the fingerprint.\n\n403\n00:20:05.490 --> 00:20:08.160\nIt showed me the fingerprint\nwhen the key was generated.\n\n404\n00:20:08.160 --> 00:20:12.220\nBut if I didn't generate it, if it didn't\nget documented then I don't know it.\n\n405\n00:20:12.220 --> 00:20:14.410\nSo, I could go to the office.\n\n406\n00:20:14.410 --> 00:20:18.260\nI could go to be actual server,\nsit down at the consul on the server.\n\n407\n00:20:18.260 --> 00:20:20.720\nIf it's a virtual machine,\nyou'll pull up it's consul.\n\n408\n00:20:20.720 --> 00:20:25.274\nAnd from the consul,\nyou can run the fingerprint again.\n\n409\n00:20:25.274 --> 00:20:28.960\nYou can generate that fingerprint and\npull that back up.\n\n410\n00:20:28.960 --> 00:20:31.796\nAnd the way we can do that is,\na few different ways.\n\n411\n00:20:31.796 --> 00:20:34.720\nWe could go look at the key file itself.\n\n412\n00:20:34.720 --> 00:20:36.520\nBut we have a little\ncommand we can fire up.\n\n413\n00:20:36.520 --> 00:20:42.100\nWhich is ssh_keygen, same utility, right?\n\n414\n00:20:42.100 --> 00:20:45.050\nExcept instead of running on my client,\nI'm running it on the server itself.\n\n415\n00:20:45.050 --> 00:20:49.200\nAnd so I could say -l, in other words,\nshowing my local keys.\n\n416\n00:20:49.200 --> 00:20:52.400\nDon't show me my remote system,\nshow me my local keys.\n\n417\n00:20:52.400 --> 00:20:57.950\nAnd then I can point to the file that\nI wanna read from, and I'll read\n\n418\n00:20:57.950 --> 00:21:06.850\nfrom /etc/ssh/ssh_ecdsa, ops, ECDSA.\n\n419\n00:21:06.850 --> 00:21:12.439\nYou know what,\nI'm spelling it wrong it's SSH_host_ecdsa\n\n420\n00:21:12.439 --> 00:21:16.650\nkey.pub, because it's the public key\nthat is handed off not the private\n\n421\n00:21:16.650 --> 00:21:19.310\nkey I don't need the finger\nprint of the private key.\n\n422\n00:21:19.310 --> 00:21:22.820\nThis is gonna tell it don't\ngenerate me a new key,\n\n423\n00:21:22.820 --> 00:21:26.970\njust look at this file, And\ntell me what the fingerprint is.\n\n424\n00:21:26.970 --> 00:21:28.250\nAnd there's the fingerprint.\n\n425\n00:21:28.250 --> 00:21:32.190\nAnd I can see AUM and it ends in E8I.\n\n426\n00:21:32.190 --> 00:21:34.440\nSo I can get that\nfingerprint whenever I want.\n\n427\n00:21:34.440 --> 00:21:38.680\nAnd because I got it on the server,\nI know that it's right.\n\n428\n00:21:38.680 --> 00:21:41.230\nAnd now I can go and connect and\nI know the key's match.\n\n429\n00:21:41.230 --> 00:21:45.260\nSo this is really the best way\nto verify that and know you're\n\n430\n00:21:45.260 --> 00:21:48.700\nactually connecting to the right host,\nyou know it's good and there you go.\n\n431\n00:21:48.700 --> 00:21:53.430\nAnd in fact if you're a super security\nnut, which hopefully some of you are,\n\n432\n00:21:53.430 --> 00:21:57.460\nwe can actually set our SSH client\nto force that to say no, no,\n\n433\n00:21:57.460 --> 00:22:00.990\nno we're not gonna allow you to just go\nand connect up to a server willy nilly.\n\n434\n00:22:00.990 --> 00:22:04.120\nYou have to already have the key\nin your known host file.\n\n435\n00:22:04.120 --> 00:22:11.070\nIf you take a look at /etc/SSH/SSH_config.\n\n436\n00:22:11.070 --> 00:22:15.140\nThat's the client configuration, not the\nserver, that if you search in there for\n\n437\n00:22:15.140 --> 00:22:16.420\nthe word strict,\n\n438\n00:22:16.420 --> 00:22:20.442\nthere it is, there's this entry right\nhere: Strict host key checking.\n\n439\n00:22:20.442 --> 00:22:25.560\nAll right, if we set that to on, if we\nset it to strict host checking, it will\n\n440\n00:22:25.560 --> 00:22:30.730\nnot allow us to connect to a host unless\nthe key already exists in our known hosts.\n\n441\n00:22:30.730 --> 00:22:34.040\nAnd that'll prevent us from accidentally\nbeing tempted to say yes, and\n\n442\n00:22:34.040 --> 00:22:37.250\njust accept some random key that we don't\nknow if it's the actual server or not.\n\n443\n00:22:37.250 --> 00:22:40.390\nSo that's an option that you can\ncome in and tweak and change.\n\n444\n00:22:40.390 --> 00:22:41.940\nIt is not turned on by default.\n\n445\n00:22:41.940 --> 00:22:46.170\nBy default, it's gonna ask you, if I get\na key that we don't know, ask us and\n\n446\n00:22:46.170 --> 00:22:50.580\ntell us, if we change that to on, then\nit will say, no, I'm not gonna ask you,\n\n447\n00:22:50.580 --> 00:22:53.390\nI'm just not going accept it\nunless the key already exist.\n\n448\n00:22:53.390 --> 00:22:56.910\n&gt;&gt; So Don, once we know the key is good,\nare we ready to connect?\n\n449\n00:22:56.910 --> 00:23:01.195\n&gt;&gt; Yeah, yeah, absolutely, at this point\nour key is good and technically already\n\n450\n00:23:01.195 --> 00:23:05.680\nconnected, I saw the window, let me repeat\nthat, I got ahead of myself and I guess.\n\n451\n00:23:05.680 --> 00:23:08.658\nSo, once I've got the key, and\nit's in my known_hosts file, you know,\n\n452\n00:23:08.658 --> 00:23:09.430\nI've learned it.\n\n453\n00:23:09.430 --> 00:23:15.350\nIn fact, I can verify that real quick\nif I do a, if I just pull that file up,\n\n454\n00:23:15.350 --> 00:23:17.900\nand take a look inside known_hosts,\nthere's the three keys.\n\n455\n00:23:17.900 --> 00:23:20.180\nYou'll see it's got the IP\naddress of the server,\n\n456\n00:23:20.180 --> 00:23:23.600\nfollowed by the algorithm\nthat generated the key,\n\n457\n00:23:23.600 --> 00:23:28.180\nfollowed by the fingerprint, the actual\nkey after that, not the fingerprint.\n\n458\n00:23:28.180 --> 00:23:30.336\nSo I can see that key data right in there.\n\n459\n00:23:30.336 --> 00:23:33.118\nGot the key data and if I wanna connect,\n\n460\n00:23:33.118 --> 00:23:39.540\nI just do SSH followed by my username @\nfollowed by the address of that server.\n\n461\n00:23:39.540 --> 00:23:42.210\nAnd it connects up,\ndoesn't worry about a certificate.\n\n462\n00:23:42.210 --> 00:23:43.710\nI can login and\n\n463\n00:23:43.710 --> 00:23:48.370\nI know that I've got an encrypted\nsession between me and that server.\n\n464\n00:23:48.370 --> 00:23:51.450\n&gt;&gt; Well that gives us an encrypted\nshell but can we encrypt other traffic?\n\n465\n00:23:51.450 --> 00:23:52.568\n&gt;&gt; Yeah, yeah absolutely.\n\n466\n00:23:52.568 --> 00:23:53.952\nSo the shell that's one thing.\n\n467\n00:23:53.952 --> 00:23:56.405\nRight, we've been using that this whole\nseries most of you guys know that.\n\n468\n00:23:56.405 --> 00:24:00.996\nBut the real power of SSH Is\nthat it can encrypt anything.\n\n469\n00:24:00.996 --> 00:24:03.070\nNot just shell access.\n\n470\n00:24:03.070 --> 00:24:07.310\nSo for example, lets say that\nI've got something like Telnet.\n\n471\n00:24:07.310 --> 00:24:09.880\nHopefully you don't use Telnet\nanywhere in your network.\n\n472\n00:24:09.880 --> 00:24:13.740\nBut if I telnet into my server,\nI turned on Telnet before the show.\n\n473\n00:24:13.740 --> 00:24:16.100\nTelnet is disabled every\nmajor distribution now.\n\n474\n00:24:16.100 --> 00:24:19.800\nBut if I Telnet into my server,\nIt's gonna prompt me for my username.\n\n475\n00:24:19.800 --> 00:24:21.339\nI can punch it in.\n\n476\n00:24:21.339 --> 00:24:23.920\nAnd it's gonna prompt me for\nmy password and I can punch that in too.\n\n477\n00:24:23.920 --> 00:24:25.090\nAnd now I'm logged in.\n\n478\n00:24:25.090 --> 00:24:26.480\nAnd I'm ready to work on the server.\n\n479\n00:24:26.480 --> 00:24:27.174\nThings are great!\n\n480\n00:24:27.174 --> 00:24:32.040\nI can start listing my folders pulling\nup my private keys, I can go crazy.\n\n481\n00:24:32.040 --> 00:24:35.570\nWell the problem is, everything I'm doing\n\n482\n00:24:35.570 --> 00:24:38.860\nTelemen is transmitting across\nthe network in plain text.\n\n483\n00:24:38.860 --> 00:24:39.440\nPlain Text.\n\n484\n00:24:39.440 --> 00:24:41.890\n&gt;&gt; That's Right\n&gt;&gt; Anybody running a sniffer.\n\n485\n00:24:41.890 --> 00:24:44.920\nCan see this traffic, read it,\nand know what's going on.\n\n486\n00:24:44.920 --> 00:24:47.200\nAt a minimum, they're gonna\nget my username and password.\n\n487\n00:24:47.200 --> 00:24:48.380\nRight?\nBecause I sent my username and\n\n488\n00:24:48.380 --> 00:24:49.650\npassword across the network.\n\n489\n00:24:49.650 --> 00:24:55.600\nBut what if I'm doing a little bit of\nauditing and I'm like let me check out my\n\n490\n00:24:55.600 --> 00:25:01.020\nSSH keys and make sure these things\nare working the way that I want them to.\n\n491\n00:25:01.020 --> 00:25:03.530\nAnd, you know,\nlet me take a look at that private key.\n\n492\n00:25:03.530 --> 00:25:06.930\nAnd I go and pull,\nshoot I'm not an administrator here.\n\n493\n00:25:06.930 --> 00:25:09.280\nWell here, I'm gonns sudo, and\nI've got to provide my password,\n\n494\n00:25:09.280 --> 00:25:10.910\nI just sent my password over the network.\n\n495\n00:25:10.910 --> 00:25:12.330\nAnd then, here's my private key.\n\n496\n00:25:13.380 --> 00:25:15.800\nThat was just sent over the network too.\n\n497\n00:25:15.800 --> 00:25:18.950\nAnything displayed in your session is\nsent over the network in plain text.\n\n498\n00:25:18.950 --> 00:25:22.970\nAnybody with a sniffer that can\ncapture this traffic, can now read it,\n\n499\n00:25:22.970 --> 00:25:25.280\ninterpret it, and\ntake action on it, right?\n\n500\n00:25:25.280 --> 00:25:29.790\nAnd when you're crossing the Internet,\nfor example, you'll pass through 10, 14,\n\n501\n00:25:29.790 --> 00:25:32.570\n15 routers on your way to a destination.\n\n502\n00:25:32.570 --> 00:25:35.360\nAny ISP employee at any\nleg along that journey\n\n503\n00:25:35.360 --> 00:25:37.210\nhas access to your data in transit.\n\n504\n00:25:37.210 --> 00:25:40.230\nThey could capture this, and\nnow they've got your data, right?\n\n505\n00:25:40.230 --> 00:25:41.270\nThat's bad.\n\n506\n00:25:41.270 --> 00:25:42.260\n&gt;&gt; Not good.\n\n507\n00:25:42.260 --> 00:25:43.920\nGuess how you secure Telnet.\n\n508\n00:25:43.920 --> 00:25:44.690\nYou don't.\n\n509\n00:25:44.690 --> 00:25:46.060\nThere is no way to secure Telnet.\n\n510\n00:25:46.060 --> 00:25:48.530\nThe Telnet protocol does\nnot support encryption.\n\n511\n00:25:48.530 --> 00:25:49.540\nThat's why nobody uses it anymore.\n\n512\n00:25:49.540 --> 00:25:50.940\nIt's why we throw it out.\n\n513\n00:25:50.940 --> 00:25:57.290\nThere are protocols like FTP and Telnet\nand SNTP that don't support encryption.\n\n514\n00:25:57.290 --> 00:25:59.970\nSo instead people have\nto find some kinda hack,\n\n515\n00:25:59.970 --> 00:26:06.630\nsome kinda thing to stick on them like\nFTPS that is sticking SSL onto FTP.\n\n516\n00:26:06.630 --> 00:26:13.840\nOr the secure all that ESMTP,\nSMTP something like that.\n\n517\n00:26:13.840 --> 00:26:16.772\nAll tries to encrypt SMTP\ntraffic by adding SSL to it.\n\n518\n00:26:16.772 --> 00:26:19.384\nAnd this works okay if\nthe servers understand it and\n\n519\n00:26:19.384 --> 00:26:23.468\nit tries incorporating encryption into\na protocol wasn't built that in mind.\n\n520\n00:26:23.468 --> 00:26:26.870\nWith SSH, we can say,\nyou know what, leave Telnet alone.\n\n521\n00:26:26.870 --> 00:26:31.035\nLeave it alone, let it be junk,\nlet it be an unincluded protocol.\n\n522\n00:26:31.035 --> 00:26:34.160\n&gt;&gt; [LAUGH]\n&gt;&gt; But we can build an SSH tunnel,\n\n523\n00:26:34.160 --> 00:26:37.240\nan encrypted tunnel between a client and\na server.\n\n524\n00:26:37.240 --> 00:26:40.240\nAnd you can stick SSH in the tunnel,\nI mean sorry,\n\n525\n00:26:40.240 --> 00:26:42.100\nyou can stick Telnet in the tunnel.\n\n526\n00:26:42.100 --> 00:26:46.180\nAnd then yeah, Telnet's unencrypted but\nSSH will encrypt it for us.\n\n527\n00:26:46.180 --> 00:26:50.390\nWith SSH, you can encrypt\nthe traffic of any protocol.\n\n528\n00:26:50.390 --> 00:26:52.660\nAnd the protocol doesn't even have\nto know the encryption is happening.\n\n529\n00:26:52.660 --> 00:26:54.080\nIt's completely invisible.\n\n530\n00:26:54.080 --> 00:26:56.450\nSo you don't have to change SMTP.\n\n531\n00:26:56.450 --> 00:26:59.825\nYou don't have to change FTP,\nyou don't have to change Telnet.\n\n532\n00:26:59.825 --> 00:27:01.795\nThey can just run on top of a tunnel.\n\n533\n00:27:01.795 --> 00:27:04.585\nIt's very similar to a VPN,\nright, but it's super easy.\n\n534\n00:27:04.585 --> 00:27:08.345\nAnd when you hear about\nprotocols like SFTP, secure FTP?\n\n535\n00:27:08.345 --> 00:27:11.360\nThat's just FTP over SSH, right?\n\n536\n00:27:11.360 --> 00:27:14.051\nThat is a super easy\nway to secure data and\n\n537\n00:27:14.051 --> 00:27:18.635\ntechnically SSH is really just\nTelnet on top of a secure tunnel.\n\n538\n00:27:18.635 --> 00:27:22.270\nBut if I wanna use Telnet and\nI wanna use it securely.\n\n539\n00:27:22.270 --> 00:27:28.288\nWell, when I connected to that server,\nI ran SSH D Pezet at 172.16.0.128.\n\n540\n00:27:28.288 --> 00:27:29.145\nThat's how I connected.\n\n541\n00:27:29.145 --> 00:27:31.321\nAnd that told it I want a shell.\n\n542\n00:27:31.321 --> 00:27:34.620\nWell there's more I could have punched\non here to change what it does.\n\n543\n00:27:34.620 --> 00:27:38.570\nSo, for example,\nif I wanted to connect and\n\n544\n00:27:38.570 --> 00:27:43.350\nhave it just build a tunnel, in other\nwords, don't actually give me a shell.\n\n545\n00:27:43.350 --> 00:27:44.770\nJust build a tunnel.\n\n546\n00:27:44.770 --> 00:27:48.370\nWell first off, I can say SSH/F, alright?\n\n547\n00:27:48.370 --> 00:27:53.570\nDash F tells it, I want you to run and\nthen go into the background.\n\n548\n00:27:53.570 --> 00:27:54.908\nNormally a six stays in the foreground.\n\n549\n00:27:54.908 --> 00:27:56.940\nI get my shell, interactive shell.\n\n550\n00:27:56.940 --> 00:27:58.580\nI want it to run and\nthen go to the background.\n\n551\n00:27:58.580 --> 00:28:00.830\nGo to where it's not bugging me anymore,\nright?\n\n552\n00:28:00.830 --> 00:28:02.030\nSo dash F.\n\n553\n00:28:02.030 --> 00:28:07.460\nThen I tell it, my name and the host I\nwanna connect to just like before, right?\n\n554\n00:28:07.460 --> 00:28:11.973\nAnd I follow that up with a -L,\n\n555\n00:28:11.973 --> 00:28:18.680\nwhat I'm gonna do here, is I'm redirect\na local port to a remote port.\n\n556\n00:28:18.680 --> 00:28:19.350\nAll right?\n\n557\n00:28:19.350 --> 00:28:23.050\nI'm gonna take some port I've\ngot on my local machine, and\n\n558\n00:28:23.050 --> 00:28:27.040\nI'm gonna map it to a port\non a remote system, okay?\n\n559\n00:28:27.040 --> 00:28:30.030\nSo I'm gonna create a fake port\nright here on my own machine.\n\n560\n00:28:30.030 --> 00:28:33.910\nAnd that fake port,\nit needs to be something over 1,024 so\n\n561\n00:28:33.910 --> 00:28:36.020\nyou don't bump into some\nof the other protocols.\n\n562\n00:28:36.020 --> 00:28:36.960\nI'll go really high.\n\n563\n00:28:36.960 --> 00:28:38.735\nI'm gonna go with 65,000 and 23.\n\n564\n00:28:38.735 --> 00:28:42.830\n65,535 is the highest port number,\nso I usually pick 65,000 and\n\n565\n00:28:42.830 --> 00:28:46.850\nI'm picking 23 because\nTelnet uses port 23.\n\n566\n00:28:46.850 --> 00:28:49.300\nSo I can remember this.\n\n567\n00:28:49.300 --> 00:28:52.730\nSo I'll do 65,023 that's my local port and\n\n568\n00:28:52.730 --> 00:28:58.040\nthen I'm gonna do a colon\nto map it to a remote port.\n\n569\n00:28:58.040 --> 00:29:04.610\nAnd for the remote port I'm\ngonna say 172.16.0.128 colon 23.\n\n570\n00:29:04.610 --> 00:29:09.589\nSo, I'm mapping this local port\nto this SSH session that I'm\n\n571\n00:29:09.589 --> 00:29:13.046\nbuilding to 172.16.0.128.\n\n572\n00:29:13.046 --> 00:29:14.890\nSSH uses port 22.\n\n573\n00:29:14.890 --> 00:29:16.410\nTCP port 22.\n\n574\n00:29:16.410 --> 00:29:20.140\nAnd on the remote side I'm gonna say\nanything I send to this local port\n\n575\n00:29:20.140 --> 00:29:23.000\nI'm gonna dump onto port\n23 on the remote side.\n\n576\n00:29:23.000 --> 00:29:25.100\nOn the remote side that's Telnet, right?\n\n577\n00:29:25.100 --> 00:29:28.760\nSo I'll have a secure SSH tunnel\nbetween me and the server.\n\n578\n00:29:28.760 --> 00:29:32.220\nAnd on the local side I've got port 65023,\n\n579\n00:29:32.220 --> 00:29:35.710\nand on the remote side\nit's just regular port 23.\n\n580\n00:29:35.710 --> 00:29:38.980\nTo get me to Telnet on the other side.\n\n581\n00:29:38.980 --> 00:29:43.290\nAnd that's going to allow me to flow my\nTelnet traffic across the secure tunnel.\n\n582\n00:29:43.290 --> 00:29:46.960\nAnd I'm gonna add just\na hair more to this one.\n\n583\n00:29:46.960 --> 00:29:49.140\nI'm gonna add a dash N.\n\n584\n00:29:49.140 --> 00:29:52.300\nWhen you build an SSH session\nit normally launches a shell and\n\n585\n00:29:52.300 --> 00:29:56.130\nwhen it launches a shell it runs /bin\n/bash or whatever your default shell is.\n\n586\n00:29:56.130 --> 00:29:57.220\nThis is the tunnel.\n\n587\n00:29:57.220 --> 00:30:00.070\nI needed just to build the tunnel and\nthen sit back, right.\n\n588\n00:30:00.070 --> 00:30:02.880\nSo dash n, says do not run any commands.\n\n589\n00:30:02.880 --> 00:30:05.538\nI think it says there do not run any\ncommands, or something like that.\n\n590\n00:30:05.538 --> 00:30:08.170\nBut dash n I want no commands\nme running on the other side.\n\n591\n00:30:08.170 --> 00:30:10.370\nI'm just going to run the tunnel and\nthat's it.\n\n592\n00:30:10.370 --> 00:30:14.906\nSo again running over this ssh- f,- f\nmakes it go in the background then my\n\n593\n00:30:14.906 --> 00:30:20.018\nusername and the host I want to connect\nto, -L, because I'm doing a port mapping,\n\n594\n00:30:20.018 --> 00:30:23.701\nand the port mapping is gonna\nmap a local port which I picked.\n\n595\n00:30:23.701 --> 00:30:27.200\nI picked 65023,\nagain you can pick whatever you wanted.\n\n596\n00:30:27.200 --> 00:30:32.650\nThe host this mapping exists for and\nthen the remote port on that host.\n\n597\n00:30:32.650 --> 00:30:34.430\nThe remote host is gonna be 23.\n\n598\n00:30:34.430 --> 00:30:39.000\nAnd then a -N to say don't run any\ncommands, just build a tunnel.\n\n599\n00:30:39.000 --> 00:30:41.880\nAnd when I run that it's gonna\nprompt me for my password.\n\n600\n00:30:41.880 --> 00:30:46.625\nI'll provide my password and\nthen it disappears, where'd it go?\n\n601\n00:30:46.625 --> 00:30:50.820\nWell it went in the background, but\nI now have a nice secure tunnel.\n\n602\n00:30:50.820 --> 00:30:53.260\nAn encrypted tunnel between me and\nthat server.\n\n603\n00:30:53.260 --> 00:30:58.390\nThat has an entry on my side at 65023 and\nan exit on their side on port 23 and\n\n604\n00:30:58.390 --> 00:31:00.580\nnow I can flow traffic over it.\n\n605\n00:31:00.580 --> 00:31:04.140\n&gt;&gt; So Don how does software\nknow to use the tunnel?\n\n606\n00:31:04.140 --> 00:31:05.193\n&gt;&gt; Right, and\nthat's kinda the tricky part right?\n\n607\n00:31:05.193 --> 00:31:07.205\n&gt;&gt; Yeah.\n&gt;&gt; Because remember I said telnet is not\n\n608\n00:31:07.205 --> 00:31:08.767\neven gonna know that this happened.\n\n609\n00:31:08.767 --> 00:31:14.032\nIf I type telnet 172.16.0.128,\nyou just know about tunnel.\n\n610\n00:31:14.032 --> 00:31:17.570\nIt's gonna ignore the tunnel and\ngo straight to that server, right?\n\n611\n00:31:17.570 --> 00:31:22.953\nSo instead,\nwhat I need to do is say Telnet 127.0.0.1.\n\n612\n00:31:22.953 --> 00:31:24.995\nI am Telnetting into myself.\n\n613\n00:31:24.995 --> 00:31:26.322\nWhile i'm not running Telnet.\n\n614\n00:31:26.322 --> 00:31:28.040\nSo that's gonna fail.\n\n615\n00:31:28.040 --> 00:31:32.590\nBut I'm gonna specify a port number,\n65023.\n\n616\n00:31:32.590 --> 00:31:37.224\nI'm gonna Telnet into\nmyself on port 65023,\n\n617\n00:31:37.224 --> 00:31:40.574\nwhich is the entrance to the tunnel.\n\n618\n00:31:40.574 --> 00:31:45.266\nIt'll enter the tunnel, cross encrypted\nall over the network to the server, and\n\n619\n00:31:45.266 --> 00:31:49.899\nit'll exit on port 23, where it'll find\nthe Telnet server on the other side.\n\n620\n00:31:49.899 --> 00:31:55.219\nAnd when I run that I get a login\nprompt and a password prompt and\n\n621\n00:31:55.219 --> 00:31:59.324\nI log in and\nTelnet is working just like normal.\n\n622\n00:31:59.324 --> 00:32:01.404\nTelnet has no idea it's being encrypted.\n\n623\n00:32:01.404 --> 00:32:04.950\nIn fact, telnet thinks we just\nremoted into ourselves on custom port.\n\n624\n00:32:04.950 --> 00:32:05.470\n&gt;&gt; Wow.\n\n625\n00:32:05.470 --> 00:32:07.330\n&gt;&gt; It has no idea the tunnel's even there.\n\n626\n00:32:07.330 --> 00:32:10.591\nBut now the data is encrypted,\nsent across the line to the other side,\n\n627\n00:32:10.591 --> 00:32:14.140\ndecrypted at the other side, and\ndropped off on the telnet server.\n\n628\n00:32:14.140 --> 00:32:16.216\nI just took a crappy old protocol.\n\n629\n00:32:16.216 --> 00:32:18.025\n&gt;&gt; [LAUGH]\n&gt;&gt; With multiple encryption and\n\n630\n00:32:18.025 --> 00:32:21.175\nnow it's fully encrypted\nusing ECDSA certificate.\n\n631\n00:32:21.175 --> 00:32:22.357\nIt's really strong, so\n\n632\n00:32:22.357 --> 00:32:26.120\nstrong encryption on an ancient\nprotocol that's completely unaware.\n\n633\n00:32:26.120 --> 00:32:29.040\nYou can do this with any protocol,\nanything.\n\n634\n00:32:29.040 --> 00:32:30.707\nYou can run X Windows over this stuff.\n\n635\n00:32:30.707 --> 00:32:32.666\nYou can do VNC.\n\n636\n00:32:32.666 --> 00:32:37.600\nYou can do FTP, even UDP type stuff.\n\n637\n00:32:37.600 --> 00:32:41.080\nSyslog that doesn't do encryption,\nyou can send syslog this way.\n\n638\n00:32:41.080 --> 00:32:43.870\nAnd now all your syslog data is\nbeing encrypted across the network.\n\n639\n00:32:43.870 --> 00:32:45.900\nThat's a really good use for this.\n\n640\n00:32:45.900 --> 00:32:48.510\nAll of this being done via SSH.\n\n641\n00:32:48.510 --> 00:32:53.700\nIt's an incredibly powerful protocol, and\nreally helps you create on-demand VPNS.\n\n642\n00:32:53.700 --> 00:32:56.580\nThings that allow you to have\nthat security of knowing\n\n643\n00:32:56.580 --> 00:32:59.150\nthat anybody intercepting your\ntraffic will not be able to read it\n\n644\n00:32:59.150 --> 00:33:00.500\nunless they have your private key.\n\n645\n00:33:00.500 --> 00:33:03.340\n&gt;&gt; Fantastic info as usual, Don.\n\n646\n00:33:03.340 --> 00:33:08.780\nData encryption with SSH, love this\nepisode, anything else you'd like to add?\n\n647\n00:33:08.780 --> 00:33:11.250\n&gt;&gt; Some of you might be asking,\nnow, Don, you created a tunnel.\n\n648\n00:33:11.250 --> 00:33:13.665\nYou telnet it,\nhow do we actually know it encrypted?\n\n649\n00:33:13.665 --> 00:33:14.826\nAnd I don't blame you, right?\n\n650\n00:33:14.826 --> 00:33:17.410\nIf you trust me, then,\nhey, yeah, it's encrypted.\n\n651\n00:33:17.410 --> 00:33:18.116\n&gt;&gt; We trust you, Don.\n\n652\n00:33:18.116 --> 00:33:21.106\n[LAUGH]\n&gt;&gt; [LAUGH] But if you don't, right,\n\n653\n00:33:21.106 --> 00:33:23.430\nif you don't trust me, then great.\n\n654\n00:33:23.430 --> 00:33:25.245\nThat's the first sign of being\na good security administrator.\n\n655\n00:33:25.245 --> 00:33:26.920\nYou got the right level of paranoia.\n\n656\n00:33:26.920 --> 00:33:28.208\nSo, we're gonna do another episode.\n\n657\n00:33:28.208 --> 00:33:31.303\nI'm gonna save it towards the end of\nthe series where we talk about some of\n\n658\n00:33:31.303 --> 00:33:34.588\nthe penetration tools that we can use or\nactually validating our security.\n\n659\n00:33:34.588 --> 00:33:40.201\nAnd take a look in there for\nhow we can validate network encryption.\n\n660\n00:33:40.201 --> 00:33:41.690\nWe'll have an episode for that.\n\n661\n00:33:41.690 --> 00:33:46.900\nAnd I'll show you how we can\nuse tcpdump and Wireshark,\n\n662\n00:33:46.900 --> 00:33:49.360\nwhich are two packet capture tools.\n\n663\n00:33:49.360 --> 00:33:52.220\nAnd we can actually capture\nthe traffic on the network and\n\n664\n00:33:52.220 --> 00:33:54.090\nverify that it's truly being encrypted.\n\n665\n00:33:54.090 --> 00:33:55.520\nAnd that's really important.\n\n666\n00:33:55.520 --> 00:33:59.160\nCuz you may have gone through all these\nsteps and think it's being encrypted, and\n\n667\n00:33:59.160 --> 00:34:02.990\nthen make a simple mistake that leads to\nit not being encrypted on the network.\n\n668\n00:34:02.990 --> 00:34:05.250\nAnd you don't' really know unless\nyou go and verify that traffic.\n\n669\n00:34:05.250 --> 00:34:08.190\nSo look for those tools where we\ndo packet capture and analysis.\n\n670\n00:34:08.190 --> 00:34:12.340\nAnd we'll see how we can validate and\nensure that this information is\n\n671\n00:34:12.340 --> 00:34:15.480\nactually being encrypted when\nit crosses over the network.\n\n672\n00:34:15.480 --> 00:34:17.243\nDefinitely, what was that\nRonald Regan always said?\n\n673\n00:34:17.243 --> 00:34:19.270\nThe trust but verified.\n\n674\n00:34:19.270 --> 00:34:19.994\n&gt;&gt; Yes.\n\n675\n00:34:19.994 --> 00:34:24.870\n&gt;&gt; We need to make sure that we\ntrust that this is set up right.\n\n676\n00:34:24.870 --> 00:34:28.162\nBut that we verify so\nthat we know that it's set up right.\n\n677\n00:34:28.162 --> 00:34:30.780\nYou wanna be the one to find the problem,\nnot the hacker.\n\n678\n00:34:30.780 --> 00:34:31.720\n&gt;&gt; Great stuff, Don.\n\n679\n00:34:31.720 --> 00:34:33.973\nAnd just because you're paranoid\ndoesn't mean they're not watching you.\n\n680\n00:34:33.973 --> 00:34:34.582\n&gt;&gt; [LAUGH]\n&gt;&gt; And\n\n681\n00:34:34.582 --> 00:34:37.590\nthat's why we 've done these\nseries Linux Security Techniques.\n\n682\n00:34:37.590 --> 00:34:40.200\nMake sure you watch all the episodes,\nyou'll be glad you did.\n\n683\n00:34:40.200 --> 00:34:41.953\nAnd thank you for watching ITProTV.\n\n684\n00:34:41.953 --> 00:34:44.216\nRemember a good IT pro always is learning.\n\n685\n00:34:44.216 --> 00:34:45.184\nI am Zach Memos.\n\n686\n00:34:45.184 --> 00:34:45.992\n&gt;&gt; And I'm Don Prezet.\n\n687\n00:34:45.992 --> 00:34:48.799\n&gt;&gt; And we'll see you very soon.\n\n688\n00:34:48.799 --> 00:34:54.694\n[MUSIC]\n\n689\n00:34:54.694 --> 00:34:58.061\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "230763288"
        }
      ],
      "title": "Data Security"
    },
    {
      "episodes": [
        {
          "description": "Don and Zach cover what SELinux is, What SELinux does when it detects inappropriate access, how we get started with configuring SELinux, verify status of SELinux, modify status temporarily, view SELinux log, configuring a service, creating a non-standard folder for a service, test access to the content, and reset the path to default context.",
          "length": "1814",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-1-1-securing_services_with_selinux-081417-PGM.00_31_05_29.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-1-1-securing_services_with_selinux-081417-PGM.00_31_05_29.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-1-1-securing_services_with_selinux-081417-PGM.00_31_05_29.Still001-sm.jpg",
          "title": "Securing Services with SELinux",
          "transcript": "WEBVTT\n\n1\n00:00:00.140 --> 00:00:02.888\nWelcome to ITProTV,\nI'm you host Don Pezet.\n\n2\n00:00:02.888 --> 00:00:03.571\n[CROSSTALK]\n\n3\n00:00:03.571 --> 00:00:08.201\n[MUSIC]\n\n4\n00:00:08.201 --> 00:00:11.181\n&gt;&gt; You're watching ITPROTV.\n\n5\n00:00:11.181 --> 00:00:16.726\n&gt;&gt; Hello, and thank you for watching\nITProTV helping you learn wherever you go.\n\n6\n00:00:16.726 --> 00:00:17.671\nI'm your host Zach Memos.\n\n7\n00:00:17.671 --> 00:00:21.752\nAs we look at Linux Security Techniques\nand we're gonna look at SELinux and\n\n8\n00:00:21.752 --> 00:00:23.640\nhow that plays into all this.\n\n9\n00:00:23.640 --> 00:00:27.220\nAnd the person giving us all\nthe information we need is Don Pezet.\n\n10\n00:00:27.220 --> 00:00:28.960\nDon, good to see you again sir.\n\n11\n00:00:28.960 --> 00:00:30.180\n&gt;&gt; Hey, good to be back Zach.\n\n12\n00:00:30.180 --> 00:00:31.625\nAnd yeah, ready to jump in to SELinux.\n\n13\n00:00:31.625 --> 00:00:35.479\nThis is one of my favorite topics, because\nSELinux is such a powerful tool for\n\n14\n00:00:35.479 --> 00:00:37.630\nmaintaining security on a Linux.\n\n15\n00:00:37.630 --> 00:00:41.850\nAnd I can't tell you how many times I\nran across tutorials on the internet.\n\n16\n00:00:41.850 --> 00:00:44.560\nLet's start out with like,\nstep one disable SELinux.\n\n17\n00:00:44.560 --> 00:00:47.070\nAnd I cringe,\nI'm like this is so powerful.\n\n18\n00:00:47.070 --> 00:00:48.930\nSo in this episode we're\ngonna learn a bit about it.\n\n19\n00:00:48.930 --> 00:00:51.800\nWe'll see how to use it and\nhow not to be afraid of it,\n\n20\n00:00:51.800 --> 00:00:53.700\ncuz actually really easy to to work with.\n\n21\n00:00:53.700 --> 00:00:55.140\nJust once you learn it,\nif you take the time.\n\n22\n00:00:55.140 --> 00:00:57.292\nAnd it improves security on your server so\n\n23\n00:00:57.292 --> 00:01:00.990\nmuch that you definitely want to take\nadvantage of what it has to offer.\n\n24\n00:01:00.990 --> 00:01:03.072\nSo that's what we've got\nlined up in this episode.\n\n25\n00:01:03.072 --> 00:01:07.442\n&gt;&gt; And you know Don, although most of us\nprobably know some of what SELinux is all\n\n26\n00:01:07.442 --> 00:01:08.955\nabout, what is SELinux?\n\n27\n00:01:08.955 --> 00:01:11.617\n&gt;&gt; [LAUGH] This is probably\na good idea to start there.\n\n28\n00:01:11.617 --> 00:01:16.630\n[LAUGH] So SELinux stands for\nSecurity Enhanced Linux.\n\n29\n00:01:16.630 --> 00:01:20.098\nIn the olden days, when Linux was created,\n\n30\n00:01:20.098 --> 00:01:23.673\nthe world was a much\nmore trustworthy place.\n\n31\n00:01:23.673 --> 00:01:25.998\nThat you could run a service\nas the root user, and\n\n32\n00:01:25.998 --> 00:01:29.530\nthe service could access to your whole\nhard drive and it was fine, right?\n\n33\n00:01:29.530 --> 00:01:31.590\nIt was okay, whatever, who cares?\n\n34\n00:01:31.590 --> 00:01:34.560\nBut now, it's gotten to the point\nwhere a hacker can break in and\n\n35\n00:01:34.560 --> 00:01:35.670\ncompromise a service.\n\n36\n00:01:35.670 --> 00:01:39.281\nAnd if they can compromise one service,\nand it's running as root, or it has access\n\n37\n00:01:39.281 --> 00:01:42.749\nto the whole hard drive, then the hacker\nnow has access to the whole hard drive.\n\n38\n00:01:42.749 --> 00:01:43.710\n&gt;&gt; The whole thing.\n\n39\n00:01:43.710 --> 00:01:48.590\n&gt;&gt; And we can't trust all the individual\nservices to be nice and secured anymore.\n\n40\n00:01:48.590 --> 00:01:54.400\nSo what SELinux does is, it steps in as\na subsystem, as a sublayer of the kernel.\n\n41\n00:01:54.400 --> 00:01:58.090\nAnd it says, whenever a service runs,\nwe're gonna constrain it.\n\n42\n00:01:58.090 --> 00:02:01.050\nWe're gonna restrict what\nit's allowed to access.\n\n43\n00:02:01.050 --> 00:02:05.250\nSo if I have a web server, for example,\nit's gonna have a folder on the hard drive\n\n44\n00:02:05.250 --> 00:02:09.010\nwhere the webpages are stored, and the web\nserver needs to access that folder.\n\n45\n00:02:09.010 --> 00:02:10.650\nBut does it need to\naccess my home directory?\n\n46\n00:02:10.650 --> 00:02:15.298\nNo, so SELinux kicks in and says,\nI'm gonna block any of that access.\n\n47\n00:02:15.298 --> 00:02:17.504\nAnd it creates these walls,\nthese boundaries, and\n\n48\n00:02:17.504 --> 00:02:20.220\nit keeps each of these services\ninto their own respective area.\n\n49\n00:02:20.220 --> 00:02:22.464\nSo by doing that, if a hacker get's in,\n\n50\n00:02:22.464 --> 00:02:26.360\nthey'll only get access to the areas\nof that particular service has.\n\n51\n00:02:26.360 --> 00:02:29.156\nSo if I've got a server\npulling more than one duty,\n\n52\n00:02:29.156 --> 00:02:33.057\nmaybe it's a web server and\nthe database server, and the file server,\n\n53\n00:02:33.057 --> 00:02:36.335\nyou see this in like some small and\nmedium businesses a lot.\n\n54\n00:02:36.335 --> 00:02:39.261\nWell, one service get compromised and\nthe other stay safe.\n\n55\n00:02:39.261 --> 00:02:42.622\nNow SELinux is an optional component,\nyou don't have to have,\n\n56\n00:02:42.622 --> 00:02:44.624\nyou can turn it of like I said earlier.\n\n57\n00:02:44.624 --> 00:02:49.590\nBut if you're running a distro like\nRedhat, RTL, Redhat Enterprise Linux.\n\n58\n00:02:49.590 --> 00:02:51.900\nIf you're running CentOS,\nif you're running Fedora.\n\n59\n00:02:51.900 --> 00:02:55.790\nThey've all got SELinux installed and\nenabled by default.\n\n60\n00:02:55.790 --> 00:02:59.210\nIf you're running Ubuntu or\nDebian, it's an optional package.\n\n61\n00:02:59.210 --> 00:03:02.700\nYou can install SELinux and enable it,\nand get up and running the same way.\n\n62\n00:03:02.700 --> 00:03:04.730\nSo it's available on\nall of those platforms.\n\n63\n00:03:04.730 --> 00:03:07.257\nIt really is a great technology,\ndefinitely one that you want.\n\n64\n00:03:07.257 --> 00:03:09.580\nSo if you don't already have it on your\nservice, you should put it on there.\n\n65\n00:03:09.580 --> 00:03:11.957\nBut don't just go blindly turning it on,\ncuz boy,\n\n66\n00:03:11.957 --> 00:03:14.630\nit can wreak havoc if you\ndon't know what you're doing.\n\n67\n00:03:14.630 --> 00:03:17.311\nAnd that's why so\nmany tutorials start with disable SELinux,\n\n68\n00:03:17.311 --> 00:03:19.902\ncuz they don't take the time\nto figure what they're doing.\n\n69\n00:03:19.902 --> 00:03:25.243\n&gt;&gt; So Don, what this SELinux do when\nit detects inappropriate access?\n\n70\n00:03:25.243 --> 00:03:26.565\n&gt;&gt; Well,\nthat part's kinda up to us, right?\n\n71\n00:03:26.565 --> 00:03:28.535\nSo there's actually three modes for\nSELinux, and\n\n72\n00:03:28.535 --> 00:03:30.725\nhopefully, the mode that you're\nin is what's called enforcing.\n\n73\n00:03:30.725 --> 00:03:32.565\nIn the enforcing mode, it blocks it.\n\n74\n00:03:32.565 --> 00:03:35.230\nIf it sees inappropriate access,\nit stops it.\n\n75\n00:03:35.230 --> 00:03:38.530\nIf a web server process is\ntrying to access my home folder,\n\n76\n00:03:38.530 --> 00:03:41.100\nit's stop it and\nit's logs it to an audit log.\n\n77\n00:03:41.100 --> 00:03:42.808\nAnd that way I know that it happened and\nI can go and\n\n78\n00:03:42.808 --> 00:03:44.029\nfind out what the heck is going on.\n\n79\n00:03:44.029 --> 00:03:44.950\nCuz we need to be aware, right?\n\n80\n00:03:44.950 --> 00:03:46.798\n&gt;&gt; Right.\n&gt;&gt; But whats important is that it's stop\n\n81\n00:03:46.798 --> 00:03:48.460\nit, that's the enforcing mode.\n\n82\n00:03:48.460 --> 00:03:50.155\nThere's another mode called disabled.\n\n83\n00:03:50.155 --> 00:03:52.600\n[LAUGH] In disabled mode, it does nothing.\n\n84\n00:03:52.600 --> 00:03:54.310\nIt's say, whatever had it, right?\n\n85\n00:03:54.310 --> 00:03:57.690\nBut there is a third mode,\nwhich is called permissive.\n\n86\n00:03:57.690 --> 00:04:01.310\nAnd permissive is a strange one, because\nwhat it does is it sees the inappropriate\n\n87\n00:04:01.310 --> 00:04:05.790\naccess, it lets it happen and\nit logs it, right?\n\n88\n00:04:05.790 --> 00:04:08.180\nSo it's more like it detects\nthe inappropriate access.\n\n89\n00:04:08.180 --> 00:04:10.160\nIt doesn't actually do anything about it.\n\n90\n00:04:10.160 --> 00:04:13.280\nNow you might ask yourself,\nwhy in the heck would I use that?\n\n91\n00:04:13.280 --> 00:04:15.210\nAnd you really use it when\nyou're troubleshooting.\n\n92\n00:04:15.210 --> 00:04:18.680\nWhen I'm trying to figure out why SELinux\nis stopping something from working,\n\n93\n00:04:18.680 --> 00:04:20.190\nI can put it in permissive mode.\n\n94\n00:04:20.190 --> 00:04:22.380\nI can run my application and\nsee what's going on.\n\n95\n00:04:22.380 --> 00:04:26.040\nAnd then, I can look in the audit logs and\nsee where it tripped the SELinux alarm.\n\n96\n00:04:26.040 --> 00:04:27.167\n&gt;&gt; More like when you play detective.\n\n97\n00:04:27.167 --> 00:04:28.773\nYou're trying to figure\nout whose doing this or\n\n98\n00:04:28.773 --> 00:04:30.510\nwho is sending you these\ninappropriate messages.\n\n99\n00:04:30.510 --> 00:04:31.032\n&gt;&gt; Right.\nAnd\n\n100\n00:04:31.032 --> 00:04:33.435\nit's very similar to like a IDS,\nIPS, right?\n\n101\n00:04:33.435 --> 00:04:35.890\nIDS, Intrusion Detection System.\n\n102\n00:04:35.890 --> 00:04:37.580\nIPS, Intrusion Prevention System.\n\n103\n00:04:37.580 --> 00:04:40.540\nPreventing versus detecting\nare two different things.\n\n104\n00:04:40.540 --> 00:04:41.957\n&gt;&gt; Right.\n&gt;&gt; And permissive mode and\n\n105\n00:04:41.957 --> 00:04:46.123\nenforcing mode are detection and\nprevention, that's what they do, so\n\n106\n00:04:46.123 --> 00:04:47.160\nwe pick the mode.\n\n107\n00:04:47.160 --> 00:04:50.939\nNow on a Red Hat, CentOS,\nor Fedora system,\n\n108\n00:04:50.939 --> 00:04:55.727\nSELinux is installed enabled and\nenforcing by default.\n\n109\n00:04:55.727 --> 00:04:59.490\nSo it's in there actively blocking things,\nthat's usually what we want.\n\n110\n00:04:59.490 --> 00:05:03.153\nBut if you install it on Debian or\nUbuntu, or one of the other distros,\n\n111\n00:05:03.153 --> 00:05:05.961\nthen it's typically in\npermissive mode by default.\n\n112\n00:05:05.961 --> 00:05:09.141\nAnd that way you can get it configured\nfirst before going to enforcing,\n\n113\n00:05:09.141 --> 00:05:11.530\ncuz otherwise you can\naccidentally block yourself.\n\n114\n00:05:11.530 --> 00:05:13.549\nSo you'll definitely wanna check and\nthat and\n\n115\n00:05:13.549 --> 00:05:15.800\nmake sure you get in the right mode for\nSELinux.\n\n116\n00:05:15.800 --> 00:05:19.880\n&gt;&gt; So Don, how do we get started\nin with configuring SELinux?\n\n117\n00:05:19.880 --> 00:05:22.441\n&gt;&gt; All right, well the first thing is\nwe can just verify that we've even\n\n118\n00:05:22.441 --> 00:05:23.070\ngot it, right?\n\n119\n00:05:23.070 --> 00:05:24.295\nCuz we need get it installed.\n\n120\n00:05:24.295 --> 00:05:27.810\nAnd it's got its own SELinux\npackage that you can get installed.\n\n121\n00:05:27.810 --> 00:05:30.900\nThe easiest way is just a simple command\nhere, I'll just run it real quick.\n\n122\n00:05:30.900 --> 00:05:34.098\nI'm on a server running\nRed Hat Enterprise Linux 7.4, and\n\n123\n00:05:34.098 --> 00:05:36.140\nI'm just gonna run sestatus, right?\n\n124\n00:05:36.140 --> 00:05:38.775\nSo that's the Security-Enhanced Linux\nstatus, and\n\n125\n00:05:38.775 --> 00:05:41.360\nit will tell you whether\nyou've even got it, right?\n\n126\n00:05:41.360 --> 00:05:43.011\n[LAUGH] If you get command not found,\n\n127\n00:05:43.011 --> 00:05:46.290\nthat's a pretty good indicator\nthat you don't have SELinux.\n\n128\n00:05:46.290 --> 00:05:49.220\nBut also it's telling me\nwhether it's enabled or not.\n\n129\n00:05:49.220 --> 00:05:50.885\nOkay, so is it even turned on?\n\n130\n00:05:50.885 --> 00:05:54.440\nAnd if it's turned on,\nwhat is it's current mode?\n\n131\n00:05:54.440 --> 00:05:56.655\nMy current mode is enforcing, right?\n\n132\n00:05:56.655 --> 00:06:00.870\nSELinux is on and\nit's enforcing right now.\n\n133\n00:06:00.870 --> 00:06:03.760\nAnd right after that there's\nmode from config file, notice,\n\n134\n00:06:03.760 --> 00:06:05.241\nthere's two different modes.\n\n135\n00:06:05.241 --> 00:06:07.065\nOne is the model running in right now,\n\n136\n00:06:07.065 --> 00:06:10.260\nthe others the role are be running\nif I were to reboot, right?\n\n137\n00:06:10.260 --> 00:06:13.690\nWhen you boot up become up in one mode,\nand there's times you might in there\n\n138\n00:06:13.690 --> 00:06:15.829\ntemporarily move to permissive or\nwhatever.\n\n139\n00:06:15.829 --> 00:06:18.090\nAnd so\nthese two values might be different.\n\n140\n00:06:18.090 --> 00:06:21.140\nBut if you haven't changed this since your\nlast reboot, they'll both be the same and\n\n141\n00:06:21.140 --> 00:06:21.800\nthat's how mine is.\n\n142\n00:06:21.800 --> 00:06:25.330\nI'm enforcing right now,\nSELinux is doing it' job.\n\n143\n00:06:25.330 --> 00:06:27.040\nSo that's kind of the start.\n\n144\n00:06:27.040 --> 00:06:30.550\nI can see that I'm running, and I can see\nthat it's in this default configuration.\n\n145\n00:06:30.550 --> 00:06:33.690\nAnd if I wanna mess with\nthat configuration, you can.\n\n146\n00:06:33.690 --> 00:06:35.070\nYou don't normally have to though.\n\n147\n00:06:35.070 --> 00:06:37.890\nIt's rare that you actually need\nto modify SELinux's config, but\n\n148\n00:06:37.890 --> 00:06:42.910\nif you do,\nit's inside of slash etc slash SELinux.\n\n149\n00:06:42.910 --> 00:06:44.227\nAnd in that folder,\n\n150\n00:06:44.227 --> 00:06:49.340\nyou'll find semanage.conf as well\nas this config file right here.\n\n151\n00:06:49.340 --> 00:06:52.464\nNow the config file,\nthe one that's just called config,\n\n152\n00:06:52.464 --> 00:06:54.452\nthat's the actual configuration.\n\n153\n00:06:54.452 --> 00:06:58.793\nThis semanage.conf, there's a utility\ncalled SEManage that you may or\n\n154\n00:06:58.793 --> 00:06:59.638\nmay not have.\n\n155\n00:06:59.638 --> 00:07:04.370\nIt's actually a really handy utility that\nmakes it easier to create custom policies.\n\n156\n00:07:04.370 --> 00:07:06.542\nAnd I'll show you that a little\nbit later in this series.\n\n157\n00:07:06.542 --> 00:07:08.330\nBut so you may not even have that one.\n\n158\n00:07:08.330 --> 00:07:10.510\nBut the config file is the main one.\n\n159\n00:07:10.510 --> 00:07:13.493\nIf you were to look at /etc/selinux and\n\n160\n00:07:13.493 --> 00:07:17.110\nwhich, I have to spell it right,\nslash config.\n\n161\n00:07:17.110 --> 00:07:18.950\nThat is the configuration file for it.\n\n162\n00:07:18.950 --> 00:07:22.800\nAnd if you look at mine, you can see\nwhere SELinux is set to enforcing.\n\n163\n00:07:22.800 --> 00:07:24.880\nAnd SELinux type is set to target it.\n\n164\n00:07:24.880 --> 00:07:26.991\nThese are the only really two\nvalues I get to pick from.\n\n165\n00:07:26.991 --> 00:07:29.900\nAnd I already talked about enforcing,\npermissive, and disabled.\n\n166\n00:07:29.900 --> 00:07:34.481\nThis is where I can choose to\nturn SELinux off if I want, or\n\n167\n00:07:34.481 --> 00:07:37.660\nI can set permissive or enforcing.\n\n168\n00:07:37.660 --> 00:07:39.930\nAnd this is the config file\nthat's read at boot time.\n\n169\n00:07:39.930 --> 00:07:41.408\nSo when I reboot, this will take effect.\n\n170\n00:07:41.408 --> 00:07:46.180\nIf I change here now it doesn't\nmake any difference until I reboot.\n\n171\n00:07:46.180 --> 00:07:49.780\nAnd then after that is the type,\nthe way that it was.\n\n172\n00:07:49.780 --> 00:07:51.851\nAnd it's rare that you wanna change this.\n\n173\n00:07:51.851 --> 00:07:56.656\nBy default it's targeted, and that means\nthat it's looking at specific processes\n\n174\n00:07:56.656 --> 00:07:59.982\nand it's holding them to these\nparticular access areas.\n\n175\n00:07:59.982 --> 00:08:01.082\nThat's what we normally want.\n\n176\n00:08:01.082 --> 00:08:05.709\nBut you can actually change the way that\nit's handling those and instead of keeping\n\n177\n00:08:05.709 --> 00:08:10.620\nprocesses separate, you can actually have\nit just secure certain processes, right?\n\n178\n00:08:10.620 --> 00:08:13.957\nI could say I just want SELinux to\napply to my web server, and that's it,\n\n179\n00:08:13.957 --> 00:08:15.286\nno other services, right?\n\n180\n00:08:15.286 --> 00:08:19.460\nAnd you can do that by switching to\nminimum or MLS, Multi Level Security.\n\n181\n00:08:19.460 --> 00:08:22.015\nThis one gives you some options where\nyou can group services together.\n\n182\n00:08:22.015 --> 00:08:23.975\nAnd I might say that I\nwant my web server and\n\n183\n00:08:23.975 --> 00:08:27.670\nthese other two services all running\ntogether and one little cluster.\n\n184\n00:08:27.670 --> 00:08:30.597\nAgain those are kind of additional\nconfigurations that I've never found\n\n185\n00:08:30.597 --> 00:08:32.437\na need for\nthose in a production environment,\n\n186\n00:08:32.437 --> 00:08:34.386\nthat doesn't mean a need\ndoesn't exist right?\n\n187\n00:08:34.386 --> 00:08:37.320\nYour needs are likely different\nthan mine but it's very rare.\n\n188\n00:08:37.320 --> 00:08:41.939\nSo normally that targeted network\nevery process is split it up,\n\n189\n00:08:41.939 --> 00:08:43.655\nisolate it and manage.\n\n190\n00:08:43.655 --> 00:08:46.641\nThat's typically why we want to get\nthe highest level of security and\n\n191\n00:08:46.641 --> 00:08:49.660\nif you can make that work,\nthat would get to the best security.\n\n192\n00:08:49.660 --> 00:08:52.405\nThese other two are all\nreducing security a little bit.\n\n193\n00:08:52.405 --> 00:08:56.747\nSo you've got to have a specific need to\ndo that to kinda give up some of that\n\n194\n00:08:56.747 --> 00:08:58.456\nsecurity strength.\n\n195\n00:08:58.456 --> 00:09:03.373\nBut this configuration file here is\npretty straightforward, now I mind,\n\n196\n00:09:03.373 --> 00:09:07.979\nsee now I see sclinux equals enforcing\nsclinux type equals targeted,\n\n197\n00:09:07.979 --> 00:09:12.835\non yours it might be different it\nmight say for example selinux=0 or 1.\n\n198\n00:09:12.835 --> 00:09:16.485\nSometimes they use numbers to\nrepresent these instead of names.\n\n199\n00:09:16.485 --> 00:09:21.601\nBut normally it's gonna look like this,\nenforcing is typically 1 disabled to 0,\n\n200\n00:09:21.601 --> 00:09:25.010\npermissive is 2,\nin the modern versions it's names.\n\n201\n00:09:25.010 --> 00:09:26.977\nSo don't be surprised if\nyou see numbers in there.\n\n202\n00:09:26.977 --> 00:09:28.564\nI'll just have them laid out here and\n\n203\n00:09:28.564 --> 00:09:30.720\nexplain what they mean\nif you're using numbers.\n\n204\n00:09:30.720 --> 00:09:33.414\nBut most of the time you can read the read\nthe configuration file in either format.\n\n205\n00:09:33.414 --> 00:09:36.070\nBut right here,\nthis is kinda basic configuration.\n\n206\n00:09:37.110 --> 00:09:39.119\nThis is gonna take effect at reboot.\n\n207\n00:09:39.119 --> 00:09:41.450\nIf I just wanna change it temporarily,\nright?\n\n208\n00:09:41.450 --> 00:09:46.075\nSo when I ran sestatus, I can see that I'm\ncurrently enabled in the enforcing mode.\n\n209\n00:09:46.075 --> 00:09:51.150\nI can switch over into permissive\ntemporarily if I want without rebooting.\n\n210\n00:09:51.150 --> 00:09:56.131\nAnd you'll need to sudo this,\nyou've gotta be an administrator to do it,\n\n211\n00:09:56.131 --> 00:09:59.543\nbut I can say sudo setenforce permissive,\nright?\n\n212\n00:09:59.543 --> 00:10:02.800\nAnd that's gonna move me\ninto permissive mode.\n\n213\n00:10:02.800 --> 00:10:06.086\nAnd now when I run sestatus,\nI can see that I am enabled.\n\n214\n00:10:06.086 --> 00:10:08.330\nMy current mode is permissive.\n\n215\n00:10:08.330 --> 00:10:09.969\nBut in the config files, it's enforcing.\n\n216\n00:10:09.969 --> 00:10:12.160\nSo if I reboot, I'll go back to enforcing.\n\n217\n00:10:12.160 --> 00:10:13.805\nBut at least temporarily,\nI'm in permissive mode.\n\n218\n00:10:13.805 --> 00:10:17.760\nSo now if a service tries to break\nthe rules, I'm gonna log it.\n\n219\n00:10:17.760 --> 00:10:21.341\nBut I'll let the service break the rules,\nI'll let it have that inappropriate access\n\n220\n00:10:21.341 --> 00:10:24.204\nor whatever it is that it's trying\nto do so we'll be able to see that.\n\n221\n00:10:24.204 --> 00:10:28.241\nI could have also said,\ninstead of setting forced permissive,\n\n222\n00:10:28.241 --> 00:10:33.530\nI could have said setenforce 0, or set\nenforce 1 or whatever and used the number.\n\n223\n00:10:33.530 --> 00:10:36.405\nI don't usually do that cuz I can\nnever remember which number is which.\n\n224\n00:10:36.405 --> 00:10:39.320\n[LAUGH] It's easier to type the name.\n\n225\n00:10:39.320 --> 00:10:44.431\nSo I can always say setenforce and\nput it back to enforcing like that.\n\n226\n00:10:44.431 --> 00:10:46.280\nAnd now am back to enforcing.\n\n227\n00:10:46.280 --> 00:10:48.284\nAnd I did all that without\nhaving to reboot, right?\n\n228\n00:10:48.284 --> 00:10:49.410\nBut I did have to sudo it.\n\n229\n00:10:49.410 --> 00:10:52.947\nYou have to have elevated privileges\nto be able to manipulate that.\n\n230\n00:10:52.947 --> 00:10:58.745\nNow, once I've done that, I'm now in\nforeseeing, SELinux is doing it's job,\n\n231\n00:10:58.745 --> 00:11:03.300\nif somebody trips the rules,\nif they trip it, it's gonna log.\n\n232\n00:11:03.300 --> 00:11:05.350\nAnd it's gonna log if it's in\npermissive or enforcing mode.\n\n233\n00:11:05.350 --> 00:11:08.240\nThe only time it doesn't is\nif it's actually disabled.\n\n234\n00:11:08.240 --> 00:11:10.897\nAnd that log,\nI'm gonna bump up to a root shell for\n\n235\n00:11:10.897 --> 00:11:14.077\na minute because you have to be\na root user to get to this log.\n\n236\n00:11:14.077 --> 00:11:17.861\nIt's inside of /var/log/audit and\n\n237\n00:11:17.861 --> 00:11:23.822\nif you look inside of that folder\nyou'll see an audit.log and\n\n238\n00:11:23.822 --> 00:11:27.270\nthat's where SELinux is logging.\n\n239\n00:11:27.270 --> 00:11:33.981\nSo if we were to pull up\n/var/log/audit/audit.log.\n\n240\n00:11:33.981 --> 00:11:37.790\nRight in here I'll see entries for\nSELinux and\n\n241\n00:11:37.790 --> 00:11:42.390\nthese entries they look\npretty intimidating at first.\n\n242\n00:11:42.390 --> 00:11:44.281\nBut they're actually\nnot that bad once you,\n\n243\n00:11:44.281 --> 00:11:46.589\nyou kinda get used to the format\nof what we're seeing.\n\n244\n00:11:46.589 --> 00:11:50.090\nA lot of these will actually be successes,\nright?\n\n245\n00:11:50.090 --> 00:11:53.920\nSee this plan right here,\nit says excess equals yes.\n\n246\n00:11:53.920 --> 00:11:56.448\nThis was some kind of allowed access.\n\n247\n00:11:56.448 --> 00:11:59.358\nI know a lot of people have\nasked me this in the past,\n\n248\n00:11:59.358 --> 00:12:02.961\nwhy do you log successes,\nshouldn't I just log the failures?\n\n249\n00:12:02.961 --> 00:12:06.860\nAnd the short answer is no,\nyou want to log successes.\n\n250\n00:12:06.860 --> 00:12:09.600\nSuccesses are more important\nbecause successes let you see when\n\n251\n00:12:09.600 --> 00:12:11.284\nsomething shouldn't have happened.\n\n252\n00:12:11.284 --> 00:12:14.747\nLet me give you an example, if somebody\ntries to log in to my computer and\n\n253\n00:12:14.747 --> 00:12:18.640\nthey try and guess my password and they\nguess it wrong, it's gonna block them.\n\n254\n00:12:18.640 --> 00:12:19.600\nThey don't get in, they failed, okay?\n\n255\n00:12:19.600 --> 00:12:23.110\nWhat that tells me is\nthat my security worked.\n\n256\n00:12:23.110 --> 00:12:26.781\nThey didn't know my password,\nthey didn't get in, I'm safe,\n\n257\n00:12:26.781 --> 00:12:28.460\na failure tells me I'm safe.\n\n258\n00:12:28.460 --> 00:12:32.782\nBut what if somebody tried to log in and\nthey did guessed my password,\n\n259\n00:12:32.782 --> 00:12:35.140\nand they did get in, right?\n\n260\n00:12:35.140 --> 00:12:37.838\nThat is a real problem,\nthat's what I need to be afraid.\n\n261\n00:12:37.838 --> 00:12:41.727\nWhen a service tries to access a file\nthat it shouldn't have access to and\n\n262\n00:12:41.727 --> 00:12:43.590\nit succeeds, that's a problem.\n\n263\n00:12:43.590 --> 00:12:45.031\nThat's what we really need to monitor.\n\n264\n00:12:45.031 --> 00:12:48.190\nMonitoring failures just helps you\nto technically being brute forced.\n\n265\n00:12:48.190 --> 00:12:49.440\nOtherwise the failure is just tell you,\n\n266\n00:12:49.440 --> 00:12:51.181\nyour systems are working\nthe way they're supposed to.\n\n267\n00:12:51.181 --> 00:12:55.268\nSo here, I see a success and I can see\nthere was some kind of system call and\n\n268\n00:12:55.268 --> 00:12:59.020\nif we kinda read through this is\na kernel mod that was being called.\n\n269\n00:12:59.020 --> 00:13:02.609\nSo one of my kernel modules run and\nit access the mod probe or\n\n270\n00:13:02.609 --> 00:13:07.089\nthe other way around mod probe access\nthe kernel module and so it launch.\n\n271\n00:13:07.089 --> 00:13:09.830\nWell, that's fine, I want that to happen.\n\n272\n00:13:09.830 --> 00:13:13.859\nBut if I see something like\nhttpdaccessed/home/d_pezet,\n\n273\n00:13:13.859 --> 00:13:17.512\nthat's not supposed to happen,\nthat's a big red flag.\n\n274\n00:13:17.512 --> 00:13:21.540\nSo this file is where we go in,\nwe actually see that access.\n\n275\n00:13:21.540 --> 00:13:24.973\nNow, I've hit Spacebar probably\nabout twenty times now, and\n\n276\n00:13:24.973 --> 00:13:27.387\nI'm only 3% of the way through this file.\n\n277\n00:13:27.387 --> 00:13:31.070\nAnd this is on a virtual machine\nthat I just created a few days ago.\n\n278\n00:13:31.070 --> 00:13:34.878\nThis file grows very fast,\nthere's a lot of access going on in here.\n\n279\n00:13:34.878 --> 00:13:38.360\nSo it's rare that ever just open\nthis file and read from it.\n\n280\n00:13:38.360 --> 00:13:41.830\nWe're normally gonna parse there,\nwe're gonna use grep and go in and look.\n\n281\n00:13:41.830 --> 00:13:46.308\nSo if I'm troubleshooting a web server for\nexample,\n\n282\n00:13:46.308 --> 00:13:50.497\nI might cut that file, and\nthen grep it for httpd.\n\n283\n00:13:50.497 --> 00:13:56.952\nShow me anything a web server has done\nthat may or may not be have been okay.\n\n284\n00:13:56.952 --> 00:14:00.775\nAnd as I look through here now,\nI can troubleshoot just the web server.\n\n285\n00:14:00.775 --> 00:14:03.325\nAnd that makes it a lot\neasier to find what we want.\n\n286\n00:14:03.325 --> 00:14:06.515\nAnd I can look here and mostly I'm just\nseeing server start, server stop, right?\n\n287\n00:14:06.515 --> 00:14:10.923\nSo here's the server starting, here is the\nservice stopping and as you go through,\n\n288\n00:14:10.923 --> 00:14:14.392\nyou may start to encounter\nthings where it accesses a file.\n\n289\n00:14:14.392 --> 00:14:16.866\nSo right here we've got\nsome kinda file access.\n\n290\n00:14:16.866 --> 00:14:20.320\nWhere it was looking inside of /etc/httpd.\n\n291\n00:14:20.320 --> 00:14:23.934\nWell, I'm okay with that, that's where\nApache stores it's configuration files.\n\n292\n00:14:23.934 --> 00:14:26.607\nSo of course it's going to\nlook into that folder, right?\n\n293\n00:14:26.607 --> 00:14:31.720\nBut if I read a little bit,\nthis was denied, okay?\n\n294\n00:14:31.720 --> 00:14:32.430\nWhat's happening here?.\n\n295\n00:14:32.430 --> 00:14:36.647\nWell, if I pay attention to\nthe line a little bit more,\n\n296\n00:14:36.647 --> 00:14:42.718\nI can see that it wasn't httpd that was\ndoing this, it was the vsftpd, right?\n\n297\n00:14:42.718 --> 00:14:47.452\nThe vsftp are Very Secure File Transfer\nProtocol server, we filmed an episode for\n\n298\n00:14:47.452 --> 00:14:51.302\nour server show the becoming\na Linux server administration show.\n\n299\n00:14:51.302 --> 00:14:54.850\nI'm sending up and\nFTP server and installed VSFTPD.\n\n300\n00:14:54.850 --> 00:15:00.464\nWell, for some reason,\nVSFTPD tried to read from /etc/httpd,\n\n301\n00:15:00.464 --> 00:15:03.079\nit shouldn't have done that.\n\n302\n00:15:03.079 --> 00:15:05.590\nWell, SELinux stopped it.\n\n303\n00:15:05.590 --> 00:15:08.048\nI didn't even know that happened,\nI didn't realized it.\n\n304\n00:15:08.048 --> 00:15:12.255\nI'm the one who installed that software, I\ndid it myself and I didn't even realize it\n\n305\n00:15:12.255 --> 00:15:16.370\ntried to access inappropriate that folder,\nwell it did, and SELinux stopped it.\n\n306\n00:15:16.370 --> 00:15:18.555\nNormally, it would have\nbeen able to get in there.\n\n307\n00:15:18.555 --> 00:15:21.160\nIn this case,\nit wasn't even able to do a read.\n\n308\n00:15:21.160 --> 00:15:23.658\nIt didn't try and write, it didn't try and\nchange it, it just tried to read and\n\n309\n00:15:23.658 --> 00:15:24.192\nit was stopped.\n\n310\n00:15:24.192 --> 00:15:26.710\nSo that's SELinux doing it's job.\n\n311\n00:15:26.710 --> 00:15:29.066\nAnd that audit file is where we see that.\n\n312\n00:15:29.066 --> 00:15:33.906\nAnd the way it works is every file on\nyour hard drive is assigned what's\n\n313\n00:15:33.906 --> 00:15:35.670\ncalled a Context.\n\n314\n00:15:35.670 --> 00:15:40.073\nAnd that Context says, who are the type of\npeople who should be accessing this file?\n\n315\n00:15:40.073 --> 00:15:46.050\nAnd if you look, /etc/httpd, the object\ncontext is right down here at the bottom.\n\n316\n00:15:46.050 --> 00:15:48.906\nSee where it says, t context =, and\n\n317\n00:15:48.906 --> 00:15:53.156\nthen you get this whole kind\nof mess after that, okay?\n\n318\n00:15:53.156 --> 00:15:56.205\nWell, what it's telling me is that the\ncontext on this one is that it's a system\n\n319\n00:15:56.205 --> 00:15:56.896\nobject, right?\n\n320\n00:15:56.896 --> 00:15:59.033\nBecause it's in /etc.\n\n321\n00:15:59.033 --> 00:16:05.223\nBut then right after that httpd_config_t.\n\n322\n00:16:05.223 --> 00:16:07.887\nAnytime you see underscore t,\nthat's a context type.\n\n323\n00:16:07.887 --> 00:16:11.870\nAnd this is saying this is\nwhere httpd's config resides.\n\n324\n00:16:11.870 --> 00:16:17.948\nAnd so only httpd services should have\naccess to that, which Vs- ftp is not.\n\n325\n00:16:17.948 --> 00:16:20.378\nNow we don't see that stuff normally.\n\n326\n00:16:20.378 --> 00:16:25.036\nIf I go into /var for example, and I take\na look at the folders in there or if I,\n\n327\n00:16:25.036 --> 00:16:27.195\nlet me do a full listing.\n\n328\n00:16:27.195 --> 00:16:29.227\nWhen I look, I see permissions.\n\n329\n00:16:29.227 --> 00:16:32.902\nI see this is all owned by\nthe root user and the root group.\n\n330\n00:16:32.902 --> 00:16:36.004\nAnd most of it has read, write, and\nexecute for the root user, read and\n\n331\n00:16:36.004 --> 00:16:37.260\nexecute for the root group.\n\n332\n00:16:37.260 --> 00:16:41.593\nBut then everyone has read and\nexecute after that, right?\n\n333\n00:16:41.593 --> 00:16:45.428\nSo technically,\nany service could read anything in /var,\n\n334\n00:16:45.428 --> 00:16:47.980\nat least in the actual /var folder.\n\n335\n00:16:47.980 --> 00:16:52.520\nSo all these things, if they wanted\nto get into /var/games, great.\n\n336\n00:16:52.520 --> 00:16:53.570\nThey can.\n\n337\n00:16:53.570 --> 00:16:57.574\nAnd so, if a web server gets compromised,\nand there's a game install that has\n\n338\n00:16:57.574 --> 00:17:01.490\nan exploit, the web server cannot be\nused to leap frog and hit that exploit.\n\n339\n00:17:01.490 --> 00:17:04.841\nThe game might not be network enabled, but\nnow a hacker can take advantage of that.\n\n340\n00:17:04.841 --> 00:17:06.500\nThat's bad, right?\n\n341\n00:17:06.500 --> 00:17:11.173\nSo, if I change my LS command and\nI'm gonna add a capital Z to it.\n\n342\n00:17:11.173 --> 00:17:15.930\nThe capital Z tells it to\nshow me the SELinux context.\n\n343\n00:17:15.930 --> 00:17:19.340\nAnd when I do that,\nnow I see the context for each folder.\n\n344\n00:17:19.340 --> 00:17:22.270\nAnd notice that games folder, it's gone.\n\n345\n00:17:22.270 --> 00:17:24.722\nEveryone has read and execute.\n\n346\n00:17:24.722 --> 00:17:26.270\nSo anybody can read it.\n\n347\n00:17:26.270 --> 00:17:31.400\nBut the context is that this\nincludes gamesdata_t, right?\n\n348\n00:17:31.400 --> 00:17:32.990\nThat's the context for it.\n\n349\n00:17:32.990 --> 00:17:34.750\nSo games data.\n\n350\n00:17:34.750 --> 00:17:37.950\nDoes HTTP need access to games data?\n\n351\n00:17:37.950 --> 00:17:41.770\nNo, and the SELinux policy will\nstop it from accessing that.\n\n352\n00:17:41.770 --> 00:17:45.960\nThis context is what's protecting\nour data and keeping it safe.\n\n353\n00:17:45.960 --> 00:17:49.980\nThis is really what powers SELinux,\nis the context that we assign.\n\n354\n00:17:49.980 --> 00:17:52.760\nAnd so\nwhen you use a distro like red hat or\n\n355\n00:17:52.760 --> 00:17:57.350\nCentOS or Fedora, they've gone through and\napplied a context to all of these files.\n\n356\n00:17:57.350 --> 00:18:01.110\nThey have a default policy that assigns\nthe context and gets them put in place.\n\n357\n00:18:01.110 --> 00:18:04.048\nIt might not be perfect, it might not\nmatch exactly what you want, cuz again,\n\n358\n00:18:04.048 --> 00:18:05.214\nyou might have special needs.\n\n359\n00:18:05.214 --> 00:18:09.164\nMaybe you do want HTTP\nto access these folders.\n\n360\n00:18:09.164 --> 00:18:11.700\nAnd so\nyou might need to adjust those contexts.\n\n361\n00:18:11.700 --> 00:18:14.540\nBut these default contexts are really what\npowers it, and gets this put in place.\n\n362\n00:18:14.540 --> 00:18:16.980\nAnd that capital Z,\nit works a number of different places.\n\n363\n00:18:16.980 --> 00:18:18.793\nFor example processes.\n\n364\n00:18:18.793 --> 00:18:22.981\nIf I run ps aux, like that,\nthat's gonna pull up my process list.\n\n365\n00:18:22.981 --> 00:18:26.150\nAnd I see all the processes\nthat are running on my system.\n\n366\n00:18:26.150 --> 00:18:30.964\nWell, I can also say, ps auxZ.\n\n367\n00:18:30.964 --> 00:18:36.880\nAnd now it shows the processes along\nwith their attached SELinux context.\n\n368\n00:18:36.880 --> 00:18:41.343\nAnd so I could find something in here\nlike httpd or wherever service list that\n\n369\n00:18:41.343 --> 00:18:45.682\nI happened to be running, and I could\nspot what context it was running as.\n\n370\n00:18:45.682 --> 00:18:50.100\nSo you'll spot all those kind of things in\nhere as far as what your system is doing.\n\n371\n00:18:50.100 --> 00:18:52.264\nSo SELinux is really pervasive.\n\n372\n00:18:52.264 --> 00:18:55.944\nIt's kind of hooked into everything\nthat your system does and\n\n373\n00:18:55.944 --> 00:19:00.411\nthat's what makes it borderline possible\nfor a hacker to bypass SELinux.\n\n374\n00:19:00.411 --> 00:19:05.040\nAnd it's why it's so powerful and\ndoes such a great job at what it does.\n\n375\n00:19:05.040 --> 00:19:08.606\n&gt;&gt; Don, can you show us an example\nof configuring a service?\n\n376\n00:19:08.606 --> 00:19:09.665\n&gt;&gt; Sure thing, Zach.\n\n377\n00:19:09.665 --> 00:19:11.107\nI will give you an example\nhere with the web server.\n\n378\n00:19:11.107 --> 00:19:12.364\nThat's one that I run into a lot.\n\n379\n00:19:12.364 --> 00:19:14.025\nA lot of times you have a web server and\n\n380\n00:19:14.025 --> 00:19:16.663\nyou wanna store your web\non a separate partition.\n\n381\n00:19:16.663 --> 00:19:17.407\nFor permission or\n\n382\n00:19:17.407 --> 00:19:21.234\nfor data size or for some reason, a lot of\npeople will move to a separate partition.\n\n383\n00:19:21.234 --> 00:19:23.829\nWell, when you install Apache,\n\n384\n00:19:23.829 --> 00:19:29.494\nit expects the webpage to be in\na particular place, /var/www/html.\n\n385\n00:19:29.494 --> 00:19:31.580\nThat's where it expects\nthose web files to be.\n\n386\n00:19:31.580 --> 00:19:34.986\nBut if we put it somewhere else,\nthat's not where it expects.\n\n387\n00:19:34.986 --> 00:19:36.380\nAnd that's gonna cause a bit of a problem.\n\n388\n00:19:36.380 --> 00:19:39.996\nLet me just show you here,\ncuz I've got another server set up here,\n\n389\n00:19:39.996 --> 00:19:42.100\nthat it has Apache up and running on it.\n\n390\n00:19:42.100 --> 00:19:48.040\nSo if I want to fire up Google Chrome\nhere and browse to that server.\n\n391\n00:19:48.040 --> 00:19:49.652\nSo, that's it.\n\n392\n00:19:49.652 --> 00:19:53.951\nAnd [INAUDIBLE].\n\n393\n00:19:53.951 --> 00:19:54.936\nWhy did it do that?\n\n394\n00:19:54.936 --> 00:19:57.988\n[LAUGH]\n&gt;&gt; I don't know.\n\n395\n00:19:57.988 --> 00:19:58.590\n&gt;&gt; Nope, I found it.\n\n396\n00:19:58.590 --> 00:20:01.248\nSorry, that was my mistake.\n\n397\n00:20:01.248 --> 00:20:04.920\nI did HTTPS instead of just HTTP.-\n&gt;&gt; Beginning at the same place.\n\n398\n00:20:04.920 --> 00:20:06.530\n&gt;&gt; I know, yeah.\nWe'll just back up to it.\n\n399\n00:20:06.530 --> 00:20:07.070\n&gt;&gt; The same edit?\n\n400\n00:20:09.084 --> 00:20:10.532\n&gt;&gt; The same edit.-\n&gt;&gt; Same edit.\n\n401\n00:20:10.532 --> 00:20:12.289\n&gt;&gt; Same edit, yeah, yeah, we'll just, yep.\n\n402\n00:20:12.289 --> 00:20:13.610\n&gt;&gt; All right, when you're ready.\n\n403\n00:20:13.610 --> 00:20:16.761\n&gt;&gt; Okay, sure thing, Zach.\n\n404\n00:20:16.761 --> 00:20:19.430\nIn an example where I always\nrun into this are web servers.\n\n405\n00:20:19.430 --> 00:20:20.260\nWith web servers,\n\n406\n00:20:20.260 --> 00:20:24.090\nwhen you install Apache, it expects those\nweb files to be in a particular place.\n\n407\n00:20:24.090 --> 00:20:27.538\nIt expects them to be in /var/www/html.\n\n408\n00:20:27.538 --> 00:20:29.804\nBut if you wanna store your\ndocuments somewhere else,\n\n409\n00:20:29.804 --> 00:20:31.090\nit doesn't like that so much.\n\n410\n00:20:31.090 --> 00:20:31.880\nAnd a lot of people do.\n\n411\n00:20:31.880 --> 00:20:33.810\nA lot of people like to have\nit on a separate partition, so\n\n412\n00:20:33.810 --> 00:20:37.590\nyou can manage partitions, and it's easy\nto take snapshot backups of your website.\n\n413\n00:20:37.590 --> 00:20:40.480\nYou get that kind advantage when\nits on a separate partition.\n\n414\n00:20:40.480 --> 00:20:43.263\nWell, I see Linux is gonna\nstop that by default.\n\n415\n00:20:43.263 --> 00:20:46.300\nSo if we wanna move it,\nwe've gotta clear that through SELinux.\n\n416\n00:20:46.300 --> 00:20:47.570\nSo let me just kinda\nshow you how that works.\n\n417\n00:20:47.570 --> 00:20:50.742\nNow, I've got second server stood\nup here that has Apache up and\n\n418\n00:20:50.742 --> 00:20:51.932\nrunning on it already.\n\n419\n00:20:51.932 --> 00:20:55.396\nSo if I were to take\nsystemctl status HTTpd,\n\n420\n00:20:55.396 --> 00:20:58.682\nI can see it's active and it's running.\n\n421\n00:20:58.682 --> 00:20:59.603\nSo it's got Apache.\n\n422\n00:20:59.603 --> 00:21:01.300\nI haven't messed with it's configuration.\n\n423\n00:21:01.300 --> 00:21:03.692\nSo it's expecting the file\nto in the normal place.\n\n424\n00:21:03.692 --> 00:21:07.942\nAnd if I fire up little chromium and\nbrowse to that server,\n\n425\n00:21:07.942 --> 00:21:10.383\nI can browse to it and there we go.\n\n426\n00:21:10.383 --> 00:21:14.185\nI get the Red Hat Enterprise Linux\ntext page for Apache 2.4.\n\n427\n00:21:14.185 --> 00:21:17.240\nSo the web server is functioning, right?\n\n428\n00:21:17.240 --> 00:21:18.225\n&gt;&gt; Yes.\n\n429\n00:21:18.225 --> 00:21:24.357\n&gt;&gt; And it's expecting files\nto be in /val/www/html.\n\n430\n00:21:24.357 --> 00:21:27.261\nAnd if you look in there,\nthere's nothing in there by default.\n\n431\n00:21:27.261 --> 00:21:31.894\nAnd when it finds no content,\nit renders that test page.\n\n432\n00:21:31.894 --> 00:21:32.932\nThat's kind of the default.\n\n433\n00:21:32.932 --> 00:21:35.340\nIs if there's nothing in there,\nshow the test page.\n\n434\n00:21:35.340 --> 00:21:38.926\nSo if I were to drop something in here,\n\n435\n00:21:38.926 --> 00:21:44.865\nlike index.html file, and\nthrow some data in here like this,\n\n436\n00:21:44.865 --> 00:21:50.910\nalthough crazy here with\nmy amazing HTML abilities.\n\n437\n00:21:50.910 --> 00:21:53.210\nYou know what?\nActually am I gonna be able to save this?\n\n438\n00:21:53.210 --> 00:21:54.062\nNo.\n\n439\n00:21:54.062 --> 00:21:55.200\nSorry I-\n&gt;&gt; [LAUGH]\n\n440\n00:21:55.200 --> 00:21:57.016\n&gt;&gt; I need to elevate my privileges here\n\n441\n00:21:57.016 --> 00:21:59.140\nreal quick before I get too far into this.\n\n442\n00:21:59.140 --> 00:22:01.572\nI'll do a pseudo-s.\n\n443\n00:22:01.572 --> 00:22:03.027\nSo I don't have to worry\nabout that anymore.\n\n444\n00:22:03.027 --> 00:22:05.780\nAnd then I'm gonna edit index.html.\n\n445\n00:22:05.780 --> 00:22:09.040\nAnd we'll just kinda whip up a quick file,\njust so\n\n446\n00:22:09.040 --> 00:22:11.280\nwe know that it's actually\nrendering this data.\n\n447\n00:22:11.280 --> 00:22:12.210\nThat's kind of important.\n\n448\n00:22:12.210 --> 00:22:16.976\nYou wanna make sure that the web server\nis working and SELinux is your problem.\n\n449\n00:22:16.976 --> 00:22:18.625\nOr SELinux is working, but\nit's the web server that's the problem.\n\n450\n00:22:18.625 --> 00:22:20.080\nYou gotta kind of figure\nout where to troubleshoot.\n\n451\n00:22:20.080 --> 00:22:23.297\nSo I just wanna make sure I've got some\nbasic stuff in place here before we\n\n452\n00:22:23.297 --> 00:22:23.893\nget too far.\n\n453\n00:22:23.893 --> 00:22:29.750\nSo I'm just gonna say this is a test page,\nand then we'll close that out.\n\n454\n00:22:29.750 --> 00:22:32.450\nAnd here's my amazing test page.\n\n455\n00:22:32.450 --> 00:22:34.350\nNone others out there like it.\n\n456\n00:22:34.350 --> 00:22:38.951\nAnd if I take a look at that file,\nright, and I look at it's type,\n\n457\n00:22:38.951 --> 00:22:43.270\nsee how the SELinux context\ntype is httpd.sys.contents.\n\n458\n00:22:43.270 --> 00:22:48.110\nSo it knows because it's in this folder\nthat httpd should have access to it.\n\n459\n00:22:48.110 --> 00:22:52.510\nAnd now that that's there,\nif I go back to Chromium and\n\n460\n00:22:52.510 --> 00:22:55.970\nI refresh that page, I don't get the\nApache test page, because I get my page.\n\n461\n00:22:55.970 --> 00:22:58.180\nIt was able to read\nthat file successfully,\n\n462\n00:22:58.180 --> 00:23:00.740\nand it's working the way\nthat I expected it to.\n\n463\n00:23:00.740 --> 00:23:03.630\nAll right,\nnow let's move it somewhere else.\n\n464\n00:23:03.630 --> 00:23:07.320\nIf I go in here and\nedit the Apache configuration.\n\n465\n00:23:07.320 --> 00:23:13.726\nSo I'm gonna edit\n/etc/httpd/conf/httpd.conf.\n\n466\n00:23:13.726 --> 00:23:16.566\nAnd I wanna move that\nfolder somewhere else.\n\n467\n00:23:16.566 --> 00:23:18.040\nSo, let's say I wanna put\nit right off my root.\n\n468\n00:23:18.040 --> 00:23:19.820\nI'll make it /website.\n\n469\n00:23:19.820 --> 00:23:22.280\nWell, I can find the document\nroot right here and\n\n470\n00:23:22.280 --> 00:23:26.870\nI'm gonna change it to be /website.\n\n471\n00:23:26.870 --> 00:23:29.920\nOkay, and then a bit further down here\nwe've got where it actually points to that\n\n472\n00:23:29.920 --> 00:23:33.140\ncontent and so I'll make that\n/website as well, all right?\n\n473\n00:23:33.140 --> 00:23:37.240\nSo I'm just telling it, hey you're gonna\nfind your files in a different location.\n\n474\n00:23:37.240 --> 00:23:44.150\nAnd now that I have done that,\nI can restart HTTPD.\n\n475\n00:23:44.150 --> 00:23:44.862\nIt's gonna restart.\n\n476\n00:23:44.862 --> 00:23:48.428\nIt's gonna read that configuration and\nit's gonna say, look, I need to find\n\n477\n00:23:48.428 --> 00:23:52.003\nmy web files somewhere else in this other\nplace and then we can reach and we get it.\n\n478\n00:23:52.003 --> 00:23:56.384\nWell, I got an error, right,\nit's telling me I wasn't able to restart,\n\n479\n00:23:56.384 --> 00:23:59.730\nwe got some kind of error code,\nit's got a problem.\n\n480\n00:23:59.730 --> 00:24:03.580\nAll right, well its problem is that it's\ntrying to read from a folder that it\n\n481\n00:24:03.580 --> 00:24:06.770\ndoesn't have access to or its problem\nis that I made a mistake, right?\n\n482\n00:24:06.770 --> 00:24:09.440\nSo we can double check\nthe mistake part really easy,\n\n483\n00:24:09.440 --> 00:24:10.880\nI can just look in here and see.\n\n484\n00:24:10.880 --> 00:24:13.860\nWell actually, I guess I did make\na bit of a mistake in that /website\n\n485\n00:24:13.860 --> 00:24:17.240\ndoesn't exist yet so it can't even\nfind that folder that it accesses,\n\n486\n00:24:17.240 --> 00:24:19.700\nthat's not SELinux that's\njust me not having it.\n\n487\n00:24:19.700 --> 00:24:23.820\nSo let's make that, we'll make /website,\nso I'm gonna make that folder.\n\n488\n00:24:23.820 --> 00:24:26.330\nAnd now that that's done, if I try and\n\n489\n00:24:26.330 --> 00:24:30.670\nrestart httpd, now it's happy, right,\nso it wants that folder to exist.\n\n490\n00:24:30.670 --> 00:24:34.170\nSo it's happy, it sees the folder,\nand I'm gonna go ahead and\n\n491\n00:24:34.170 --> 00:24:39.430\ncopy that index.html file into /website,\nso that it's there.\n\n492\n00:24:39.430 --> 00:24:42.640\nSo I know the file is there and\nApache is gonna look and\n\n493\n00:24:42.640 --> 00:24:44.240\nit's gonna find that, right.\n\n494\n00:24:44.240 --> 00:24:47.300\nWell if I go back to good old Chromium and\n\n495\n00:24:47.300 --> 00:24:50.695\nI refresh this page,\nI get a test page again.\n\n496\n00:24:50.695 --> 00:24:55.410\nThe test page is what comes up when the\nfolder is empty, my folder is not empty,\n\n497\n00:24:55.410 --> 00:24:59.620\nmy folder has index.html in it,\nwhy did I get the test page?\n\n498\n00:24:59.620 --> 00:25:05.690\nAnd the reason is while Apache\nis configured right SELinux is\n\n499\n00:25:05.690 --> 00:25:10.620\nsaying wait a minute, you're not allowed\nto access /website, and it stops it.\n\n500\n00:25:10.620 --> 00:25:13.838\nAnd so Apache thinks the folder is empty,\nthere's data in there but\n\n501\n00:25:13.838 --> 00:25:16.723\nit's not allowed to see it,\nSELinux stops it and blocks it.\n\n502\n00:25:16.723 --> 00:25:23.799\nAnd I can verify that by pulling up the,\nif I pull up /var/log/audit/audit.log and\n\n503\n00:25:23.799 --> 00:25:28.497\nI'm gonna grep that for httpd,\nand I look at the entries.\n\n504\n00:25:28.497 --> 00:25:33.714\nRight down here towards\nthe bottom I should find where it\n\n505\n00:25:33.714 --> 00:25:39.931\ntried to access that folder,\nwhere it tried to access /website.\n\n506\n00:25:39.931 --> 00:25:43.821\nAnd, sorry I'm trying to talk and\nlook at the same time,\n\n507\n00:25:43.821 --> 00:25:46.590\nit is right here, this line right here.\n\n508\n00:25:46.590 --> 00:25:52.050\nAVC denied, it was denied access,\nand if I look over here httpd tried\n\n509\n00:25:52.050 --> 00:25:57.650\nto access a path, it tried to access\n/website/index.html and it wasn't allowed.\n\n510\n00:25:57.650 --> 00:26:03.010\nAnd if I look, it was expecting\nsomething of an httpd context type and\n\n511\n00:26:03.010 --> 00:26:08.440\ninstead it found an unconfined object,\nan object with no context type,\n\n512\n00:26:08.440 --> 00:26:12.640\nand so it prevented it,\nit stopped it from accessing it, okay.\n\n513\n00:26:12.640 --> 00:26:16.370\nSo that's what I want,\nif a hacker tries to take a service and\n\n514\n00:26:16.370 --> 00:26:18.850\npoint it somewhere else I don't\nwant it to be able to get there, so\n\n515\n00:26:18.850 --> 00:26:21.000\nthat 's what happened,\nthat worked the way that we wanted it.\n\n516\n00:26:21.000 --> 00:26:21.820\n&gt;&gt; Perfect.\n\n517\n00:26:21.820 --> 00:26:25.810\n&gt;&gt; Unless we actually want our files to\nbe here, we need to tell SE Linux that\n\n518\n00:26:25.810 --> 00:26:30.010\nit's okay, then we could say it's okay for\nApache to access this folder.\n\n519\n00:26:30.010 --> 00:26:34.010\nAnd this is where the online tutorials\nwill say disable SELinux, which works.\n\n520\n00:26:34.010 --> 00:26:35.860\n&gt;&gt; [LAUGH] That would do it.\n\n521\n00:26:35.860 --> 00:26:38.875\n&gt;&gt; But it then weakens your overall\nsecurity, so instead we should just tell\n\n522\n00:26:38.875 --> 00:26:44.160\nSELinux this one case, this one time\nit's okay, and for that, you've\n\n523\n00:26:44.160 --> 00:26:49.910\ngotta meet with a utility called chcon,\nright, that's the change context utility.\n\n524\n00:26:49.910 --> 00:26:53.022\nAll I have to do is look\nat the right folder,\n\n525\n00:26:53.022 --> 00:26:58.122\nI'm gonna look at /var/www and\nI'll do an ls-la with a capital z and\n\n526\n00:26:58.122 --> 00:27:03.148\nI'm gonna figure out what the context\ntype was of the normal folder.\n\n527\n00:27:03.148 --> 00:27:08.801\nSo the normal folder had a context\ntype of httpd_sys_content_t,\n\n528\n00:27:08.801 --> 00:27:13.770\nright, and so I need to change\nthe context of the new folder to\n\n529\n00:27:13.770 --> 00:27:17.290\nbe the same and\nyou can use chcon to do that.\n\n530\n00:27:17.290 --> 00:27:22.480\nYou say chcon and then you don't actually\nhave to use any command line arguments but\n\n531\n00:27:22.480 --> 00:27:27.010\nI usually use -r to make it recursive so\nit'll do the folder and anything inside of\n\n532\n00:27:27.010 --> 00:27:30.820\nit, remember I've got the folder and\nindex.html, we can knock them all at once.\n\n533\n00:27:31.880 --> 00:27:35.980\nAnd I almost always do a v for verbose\nwhich gives me extra error information\n\n534\n00:27:35.980 --> 00:27:38.802\nif there is a problem, so\n-rv is what I normally do.\n\n535\n00:27:38.802 --> 00:27:44.980\nAnd then I'm gonna say --type = and\nI'm gonna put that context type that I\n\n536\n00:27:44.980 --> 00:27:50.120\njust got from the original folder, right,\nthat's the context type that Apache needs.\n\n537\n00:27:50.120 --> 00:27:53.200\nAnd then I tell it that is /website,\n\n538\n00:27:53.200 --> 00:27:57.280\nthat's the folder I want to change,\nso that's gonna reach out and\n\n539\n00:27:57.280 --> 00:28:00.780\nit's gonna change that, and see it got the\nwebsite, and it got the index file for me.\n\n540\n00:28:00.780 --> 00:28:05.426\nAnd now their context should be set\ncorrectly, and I can verify that if I look\n\n541\n00:28:05.426 --> 00:28:11.800\nand pull up /website, here it is with\nthe Apache context, and if I were to look\n\n542\n00:28:11.800 --> 00:28:17.300\ninside of it I could see that index.html\nhas that right context as well.\n\n543\n00:28:17.300 --> 00:28:21.580\nAnd if I go back here and\nreload my Chromium browser, now it gets\n\n544\n00:28:21.580 --> 00:28:26.170\nmy test page, now Apache is allowed to\naccess this folder that it wasn't able to\n\n545\n00:28:26.170 --> 00:28:31.150\naccess before, and the cool part here is\nthat I had complete control over that.\n\n546\n00:28:31.150 --> 00:28:34.210\nAs the security administrator,\nI get to pick and\n\n547\n00:28:34.210 --> 00:28:36.780\nsay Apache is allowed to\naccess this folder but\n\n548\n00:28:36.780 --> 00:28:40.570\nby default it's not, right,\nyou get a real high level of security.\n\n549\n00:28:40.570 --> 00:28:44.715\nEach service is compartmentalized,\nis protected, they define where you\n\n550\n00:28:44.715 --> 00:28:48.790\nhave access to and if it tries to deviate\nit gets blocked until we come in and\n\n551\n00:28:48.790 --> 00:28:50.500\nwe tell it differently.\n\n552\n00:28:50.500 --> 00:28:52.410\nAnd all I had to do, right, and\n\n553\n00:28:52.410 --> 00:28:57.190\nthis is what shocks me when people disable\nSELinux, all I had to do was look at\n\n554\n00:28:57.190 --> 00:29:02.710\nthe default location to find the right\ncontext, and then I just had to use chcon\n\n555\n00:29:02.710 --> 00:29:07.770\nto go in and assign that default context\nto wherever it is I'm trying to move data.\n\n556\n00:29:07.770 --> 00:29:10.540\nAnd once that's done I can\nnow leave SELinux up and\n\n557\n00:29:10.540 --> 00:29:14.700\nrunning, I get all the security benefits\nout of it, and my service is allowed to\n\n558\n00:29:14.700 --> 00:29:18.550\naccess this other folder that it\nwouldn't normally be able to access.\n\n559\n00:29:18.550 --> 00:29:19.730\nNo need to turn it off, right,\n\n560\n00:29:19.730 --> 00:29:23.220\nwe get to maintain high security and\nit's really not that hard to maintain.\n\n561\n00:29:23.220 --> 00:29:26.370\n&gt;&gt; And that makes perfect sense because\nyou made it make perfect sense,\n\n562\n00:29:26.370 --> 00:29:28.930\nI mean you really did,\nyou made it very understandable.\n\n563\n00:29:28.930 --> 00:29:32.570\nAnd that's securing services with SELinux,\nthis is part one,\n\n564\n00:29:32.570 --> 00:29:35.600\nthere's gonna be a part two, but\nbefore we move on any last words?\n\n565\n00:29:35.600 --> 00:29:38.324\n&gt;&gt; That's about it for getting a service\nup and running, there is one more command\n\n566\n00:29:38.324 --> 00:29:41.390\nI guess that I could highlight real quick,\nwhich is the restorecon command.\n\n567\n00:29:41.390 --> 00:29:44.670\nWhen you start modifying file context\nlike this, there might come a time where\n\n568\n00:29:44.670 --> 00:29:47.150\nyou don't need Apache to access\nthat folder anymore and so\n\n569\n00:29:47.150 --> 00:29:49.130\nyou can use another command,\nlet me just show you real quick,\n\n570\n00:29:49.130 --> 00:29:54.280\nit's restorecon which puts a folder\nback to its default context.\n\n571\n00:29:54.280 --> 00:29:58.230\nSo I can say restorecon-rv/website and\n\n572\n00:29:58.230 --> 00:30:03.140\n-r make it recursive, v is verbose, again,\nI could leave those off if I wanted.\n\n573\n00:30:03.140 --> 00:30:06.534\nAnd that's gonna go in and put that\nfolder back to the context that it would\n\n574\n00:30:06.534 --> 00:30:09.490\nhave which was unconfined, right,\nso it's gonna put it back,\n\n575\n00:30:09.490 --> 00:30:13.990\nso if you ever wanna undo your changes\nrestorecon is the command that you want.\n\n576\n00:30:13.990 --> 00:30:17.250\nchcon, or change context, that's the one\nthat lets you modify it to something else.\n\n577\n00:30:17.250 --> 00:30:19.920\nSo those two commands\nare pretty handy to use, but\n\n578\n00:30:19.920 --> 00:30:22.490\nonce you've got that that's\nreally the basics of SELinux.\n\n579\n00:30:22.490 --> 00:30:25.660\nThere is more I wanna show so we're\ngonna go on to a part two on this one.\n\n580\n00:30:25.660 --> 00:30:28.550\n&gt;&gt; Yes.\n&gt;&gt; Cuz I wanna show how to do\n\n581\n00:30:28.550 --> 00:30:31.990\ncustom context, what if there is no\ncontext that matches up with your need?\n\n582\n00:30:31.990 --> 00:30:34.770\nThen you might need to create one,\nand that sounds really intimidating,\n\n583\n00:30:34.770 --> 00:30:35.505\nif it doesn't it should.\n\n584\n00:30:35.505 --> 00:30:36.960\n&gt;&gt; [LAUGH]\n&gt;&gt; But it's actually not that bad, so\n\n585\n00:30:36.960 --> 00:30:40.680\nI'll show you how to make it a little\nbit easier and handle custom services.\n\n586\n00:30:40.680 --> 00:30:44.100\nBut as far as standard services,\neverything you've seen in this episode is\n\n587\n00:30:44.100 --> 00:30:46.490\nreally what you need\nto know about SELinux.\n\n588\n00:30:46.490 --> 00:30:49.417\n&gt;&gt; Awesome,\nwell you absolutely wanna catch part two.\n\n589\n00:30:49.417 --> 00:30:53.430\nAnd by the way, there is going to be a lot\nof videos in this series of Linux security\n\n590\n00:30:53.430 --> 00:30:56.440\ntechniques so make sure you watch\nevery single one of them and\n\n591\n00:30:56.440 --> 00:30:57.698\nyou'll be glad you did.\n\n592\n00:30:57.698 --> 00:30:59.340\nDon, great job, thank you.\n\n593\n00:30:59.340 --> 00:31:01.670\nAnd thank you for watching ITProTV.\n\n594\n00:31:01.670 --> 00:31:04.040\nRemember a good IT pro is always learning.\n\n595\n00:31:04.040 --> 00:31:05.010\nI'm Zach Memos.\n\n596\n00:31:05.010 --> 00:31:05.850\nAnd I'm Don Pezet.\n\n597\n00:31:05.850 --> 00:31:08.273\n&gt;&gt; And we will see you very soon.\n\n598\n00:31:08.273 --> 00:31:14.344\n[MUSIC]\n\n599\n00:31:14.344 --> 00:31:16.736\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "230615673"
        },
        {
          "description": "Don and Zach continue the discussion about securing services with SELinux, are changes persistent, CHCON is persistent, SELinux policy, making it recursive, can we create a context if we have a custom service, verify access, and SEMANAGE.",
          "length": "1748",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-1-2-securing_services_with_selinux_pt_2-081417-CLN.00_28_55_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-1-2-securing_services_with_selinux_pt_2-081417-CLN.00_28_55_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-1-2-securing_services_with_selinux_pt_2-081417-CLN.00_28_55_01.Still001-sm.jpg",
          "title": "Securing Services with SELinux Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:01.220 --> 00:00:08.128\nWelcome to ITPro.TV I'm your\nhost Don Pezet [CROSSTALK]\n\n2\n00:00:08.128 --> 00:00:12.008\n&gt;&gt; You're watching ITProTV.\n\n3\n00:00:12.008 --> 00:00:13.288\n&gt;&gt; Hello and thank you for\n\n4\n00:00:13.288 --> 00:00:16.920\nchoosing ITProTV,\nhelping you learn wherever you go.\n\n5\n00:00:16.920 --> 00:00:21.908\nI'm your host Zack Memos as we continue\non with Linux security techniques with\n\n6\n00:00:21.908 --> 00:00:26.898\npart two of securing services with SE\nLinux and bringing us all the information\n\n7\n00:00:26.898 --> 00:00:31.835\nwe need is the one, the only I know you\nlove him, Don Pezet, right over here.\n\n8\n00:00:31.835 --> 00:00:34.373\n&gt;&gt; All right, well I will try and\nlive up to that and\n\n9\n00:00:34.373 --> 00:00:36.543\nyour loved in the Linux security world.\n\n10\n00:00:36.543 --> 00:00:38.777\nSo thanks for having me back.\n\n11\n00:00:38.777 --> 00:00:42.898\nAnd if you watched part one, hopefully you\ndid, we got a chance to be introduced to\n\n12\n00:00:42.898 --> 00:00:46.602\nSE Linux and see how it works and how\nit uses context assigned to folders and\n\n13\n00:00:46.602 --> 00:00:49.260\nfiles to control what\nservices have access to what.\n\n14\n00:00:49.260 --> 00:00:51.247\nAnd it really wasn't that bad.\n\n15\n00:00:51.247 --> 00:00:55.016\nIt was a 30 minute episode, but at the end\nof the day it was really just three or\n\n16\n00:00:55.016 --> 00:00:58.241\nfour commands that we use to be able\nto view the context of folders.\n\n17\n00:00:58.241 --> 00:00:59.468\nCheck our security logs and\n\n18\n00:00:59.468 --> 00:01:02.570\nmodify the contents of folders to\nmake them work the way that we want.\n\n19\n00:01:02.570 --> 00:01:06.460\nSo really not a very intimidating\ntechnology once we learn the commands\n\n20\n00:01:06.460 --> 00:01:07.640\nand we work with it.\n\n21\n00:01:07.640 --> 00:01:10.629\nBut there are times when things\ngo a little bit bizarre.\n\n22\n00:01:10.629 --> 00:01:14.035\nAnd so there was some stuff that I didn't\nquite get to in that first show that I\n\n23\n00:01:14.035 --> 00:01:15.110\nwanted to tackle here.\n\n24\n00:01:15.110 --> 00:01:17.960\nAnd just kinda commands and options\nthat we may not worry about normally.\n\n25\n00:01:17.960 --> 00:01:20.790\nBut that I've bumped into in\nthe real world that I find\n\n26\n00:01:20.790 --> 00:01:24.190\nI really wish somebody had warned me about\nand so here's my chance to warn you.\n\n27\n00:01:24.190 --> 00:01:27.282\nSo that's what we're gonna take a look\nat right here in part two of managing\n\n28\n00:01:27.282 --> 00:01:28.127\nservices SE Linux.\n\n29\n00:01:28.127 --> 00:01:32.113\n&gt;&gt; That's exactly right and we left off\nwith configuring some services and you did\n\n30\n00:01:32.113 --> 00:01:36.115\nthat, so my next question is are those\nchanges that we did are they persistent?\n\n31\n00:01:36.115 --> 00:01:40.057\n&gt;&gt; So great question and definitely one of\nthe things I wanted to tackle on the last\n\n32\n00:01:40.057 --> 00:01:43.895\nshow is when I change the folder context\nI showed you guys the CH con command.\n\n33\n00:01:43.895 --> 00:01:47.787\nRight the change context command and\nI changed the context of the folder so\n\n34\n00:01:47.787 --> 00:01:50.004\nlet's recap what we did in the last show.\n\n35\n00:01:50.004 --> 00:01:55.348\nSo if I take a look I'll do a LS dash,\nwe'll do a DZ slash website so\n\n36\n00:01:55.348 --> 00:01:59.158\nI'm gonna pull up\nthe context of that folder.\n\n37\n00:01:59.158 --> 00:02:02.700\nSo remember with the ls command,\nif you do a capital Z,\n\n38\n00:02:02.700 --> 00:02:07.630\nit'll show you the SELInux context and\nI've got a slash website.\n\n39\n00:02:07.630 --> 00:02:12.740\nRight now, it's unconfined because it\njust got the default context type because\n\n40\n00:02:12.740 --> 00:02:15.010\nI did a restore con right at\nthe end of the episode, right?\n\n41\n00:02:15.010 --> 00:02:20.469\nSo if I wanted to change that, I would do\nchcon, and then I would set that type.\n\n42\n00:02:20.469 --> 00:02:26.659\nSo I might change the context type to hdb\nso I have that access by going in there\n\n43\n00:02:26.659 --> 00:02:32.776\nand doing chcon/rv is what I normally\ndo to make it recursive and verbose.\n\n44\n00:02:32.776 --> 00:02:38.366\nAnd then-- type = and\nI would set it to, httpd_content_t,\n\n45\n00:02:38.366 --> 00:02:43.240\nlike that cuz it's gonna\nbe storing that content.\n\n46\n00:02:43.240 --> 00:02:46.116\nAnd then I would point\nto the website folder.\n\n47\n00:02:46.116 --> 00:02:47.960\nAnd did I get a typo?\n\n48\n00:02:47.960 --> 00:02:49.415\nI did, darn it.\n\n49\n00:02:49.415 --> 00:02:54.245\nIf you can forget your context which\nis exactly what I'm doing right here we\n\n50\n00:02:54.245 --> 00:02:58.550\ncan always just take a look at\nthe context of a default folder here.\n\n51\n00:02:58.550 --> 00:03:00.665\nAnd it should have been underscore.\n\n52\n00:03:00.665 --> 00:03:02.242\nI left out of that one,\nso let me fix that.\n\n53\n00:03:02.242 --> 00:03:07.355\nAnd we'll get that put in there,\nthere we go.\n\n54\n00:03:07.355 --> 00:03:08.915\nNow I've changed that context.\n\n55\n00:03:09.935 --> 00:03:13.450\nThat change, going back to Zach's\nquestion, is that persistent.\n\n56\n00:03:13.450 --> 00:03:14.390\nThe short answer is yes.\n\n57\n00:03:14.390 --> 00:03:15.640\nThat's a persistent change.\n\n58\n00:03:15.640 --> 00:03:17.810\nI just changed the context of that folder.\n\n59\n00:03:17.810 --> 00:03:22.950\nAnd so now, when I look at it, it's got\nthat HTTP_CIS_Context_TContextType,\n\n60\n00:03:22.950 --> 00:03:26.540\nand if I reboot, it stays there okay.\n\n61\n00:03:26.540 --> 00:03:29.050\nBut the last thing I showed in the show\nis how to use the restore con/\n\n62\n00:03:29.050 --> 00:03:31.670\ncommand to restore the context\nback to the default.\n\n63\n00:03:31.670 --> 00:03:37.090\nAnd If I don't do that, then it will\nstay set the way that is is right now,\n\n64\n00:03:37.090 --> 00:03:39.500\nand I can reboot and everything's fine.\n\n65\n00:03:39.500 --> 00:03:41.748\nLet me tell you something I\nrun into in the real world.\n\n66\n00:03:41.748 --> 00:03:42.837\n&gt;&gt; The real world.\n\n67\n00:03:42.837 --> 00:03:45.441\n&gt;&gt; If you have more than one\nLinux system administrator,\n\n68\n00:03:45.441 --> 00:03:48.383\nthere are many times where people\nwill bump up into SC Linux and\n\n69\n00:03:48.383 --> 00:03:50.831\nthey'll hit it and\nit will cause a barrier to them.\n\n70\n00:03:50.831 --> 00:03:53.636\nAnd they'll say, you know what let me put\nit in permissive mode for a minute, and\n\n71\n00:03:53.636 --> 00:03:56.610\ntroubleshoot, and then forget and\nleave it in permissive mode.\n\n72\n00:03:56.610 --> 00:04:01.020\nOr, they'll say you know what, let me\njust restore context on the whole drive,\n\n73\n00:04:01.020 --> 00:04:04.590\non the whole file system, cuz I'll bet\nthere's a context that's wrong somewhere.\n\n74\n00:04:04.590 --> 00:04:10.636\nSo they'll come in and they'll do\nsomething like a restorecon-rv/ like that.\n\n75\n00:04:10.636 --> 00:04:14.880\nAnd so you just hit the whole file system\nand put it back to its default context.\n\n76\n00:04:14.880 --> 00:04:18.540\nAnd when that happens It undoes\nthe change that we made.\n\n77\n00:04:18.540 --> 00:04:22.140\nWhen you chcon,\nit modifies the context right now, but\n\n78\n00:04:22.140 --> 00:04:26.010\nthere's a default policy that's stored\nin se Linux that says what the default\n\n79\n00:04:26.010 --> 00:04:30.450\ncontext of every folder is and\nchcon does not modify that.\n\n80\n00:04:30.450 --> 00:04:34.230\nIt doesn't modify it, so\nif I say restore con and\n\n81\n00:04:34.230 --> 00:04:37.580\nI point it to /website or\nhit the whole drive,\n\n82\n00:04:37.580 --> 00:04:41.900\nthen it's gonna put it back and\nnow it's gonna become unconfined again.\n\n83\n00:04:41.900 --> 00:04:43.720\nAnd so when I look at it it's unconfined.\n\n84\n00:04:43.720 --> 00:04:48.900\nSo while they're trying to fix the system\nthey end up breaking the system and\n\n85\n00:04:48.900 --> 00:04:51.010\nthis happens way too much.\n\n86\n00:04:51.010 --> 00:04:54.570\nSo from that perspective\nit's not permanent.\n\n87\n00:04:54.570 --> 00:04:56.660\nIt's permanent until somebody undoes it.\n\n88\n00:04:56.660 --> 00:04:58.470\nThat's kinda the best way to put it and\n\n89\n00:04:58.470 --> 00:05:01.430\nthat default policy,\nhopefully you never have to edit it.\n\n90\n00:05:01.430 --> 00:05:05.760\nBut if you ever do It's\ninside of /etc/selinux.\n\n91\n00:05:05.760 --> 00:05:09.870\nAnd inside of there, we're currently\nin what's called targeted mode.\n\n92\n00:05:09.870 --> 00:05:11.550\nAnd inside of that targeted folder, so\n\n93\n00:05:11.550 --> 00:05:13.690\nyou'll see a folder right\nin there called targeted.\n\n94\n00:05:13.690 --> 00:05:18.155\nYou'll see it's actually nested pretty\ndeep so let me get all the way in there.\n\n95\n00:05:18.155 --> 00:05:22.930\nThere is a folder called context and\nin there is a folder called files.\n\n96\n00:05:22.930 --> 00:05:30.180\nSo the actual path that I'm in is\n/ect/selinux/targeted/context/files.\n\n97\n00:05:30.180 --> 00:05:36.280\nAnd in that folder is A file context,\nthis is what the default policy.\n\n98\n00:05:36.280 --> 00:05:40.740\nThis says for your file system, here's\nthe context that each of the folders and\n\n99\n00:05:40.740 --> 00:05:42.500\nfiles should have by default.\n\n100\n00:05:42.500 --> 00:05:46.130\nWhen you use restore con, all it's really\ndoing is looking to these files right here\n\n101\n00:05:46.130 --> 00:05:47.670\nand saying, okay,\nwhat context should I have?\n\n102\n00:05:47.670 --> 00:05:48.920\nAnd putting them back.\n\n103\n00:05:48.920 --> 00:05:52.451\nWhen you use ch con,\nit changes the context on the file or\n\n104\n00:05:52.451 --> 00:05:56.526\non the folder itself,\nit doesn't change it here in the policy.\n\n105\n00:05:56.526 --> 00:06:01.497\nAll right, so if we want to modify\nthe policy, that's a great way to make\n\n106\n00:06:01.497 --> 00:06:06.552\nthis permanent even if somebody does\nrun restorecon, right, if I do an ls\n\n107\n00:06:06.552 --> 00:06:12.040\ndash dz of slash website right now,\nI can see it's back to unconfined.\n\n108\n00:06:12.040 --> 00:06:15.100\nIf I have modified the policy though,\nwhen it was restored,\n\n109\n00:06:15.100 --> 00:06:18.210\nIt would have put it back to\nhdpd sys content t, right?\n\n110\n00:06:18.210 --> 00:06:19.710\nAnd that's not what happened.\n\n111\n00:06:19.710 --> 00:06:24.001\nSo if I wanna modify this,\nyou can modify these files directory.\n\n112\n00:06:24.001 --> 00:06:26.820\nBut they're really complex, and\nit's super easy to make a typo.\n\n113\n00:06:26.820 --> 00:06:28.334\nAnd if you do, you break everything.\n\n114\n00:06:28.334 --> 00:06:31.300\n&gt;&gt; [LAUGH]\n&gt;&gt; So, not a good idea.\n\n115\n00:06:31.300 --> 00:06:35.954\nBut there's a utility you\ncan install if you do\n\n116\n00:06:35.954 --> 00:06:41.096\na install policy utlis-python.\n\n117\n00:06:41.096 --> 00:06:44.616\nThere's actually a couple of utilities\nthat we can make use of that make this\n\n118\n00:06:44.616 --> 00:06:45.610\na lot easier, okay?\n\n119\n00:06:45.610 --> 00:06:47.620\nAnd you may already have it installed.\n\n120\n00:06:47.620 --> 00:06:48.770\nI've already got it installed on mine.\n\n121\n00:06:48.770 --> 00:06:51.990\nIf you did a minimal servicer install,\nyou might not though but\n\n122\n00:06:51.990 --> 00:06:55.577\nif you install the policy cores\nutlis-python it's really a series of\n\n123\n00:06:55.577 --> 00:06:59.927\npython scripts that automate the process\nof modifying the default configuration.\n\n124\n00:06:59.927 --> 00:07:03.571\nAnd when you install that package,\nyou're adding a package, or\n\n125\n00:07:03.571 --> 00:07:06.250\nan application called SE manage, right?\n\n126\n00:07:06.250 --> 00:07:09.530\nAnd SE manage is a command line utility\nthat let's us modify these policies\n\n127\n00:07:09.530 --> 00:07:11.700\nwithout having to know\nthe inner workings of the file.\n\n128\n00:07:11.700 --> 00:07:14.459\nSo this is what's going to\nmake life a lot easier for us,\n\n129\n00:07:14.459 --> 00:07:16.882\nyou can always see if you\nalready have SE manage.\n\n130\n00:07:16.882 --> 00:07:18.380\nYou just try and run it and see.\n\n131\n00:07:18.380 --> 00:07:22.155\nIt'll sit there and\ngive you syntax, right?\n\n132\n00:07:22.155 --> 00:07:26.282\nBut if you don't have it, install\nthe policy core utils-python package.\n\n133\n00:07:26.282 --> 00:07:30.316\nAnd with SE manage, I can come in and\nI can say, F context, so\n\n134\n00:07:30.316 --> 00:07:32.720\nI'm changing a file context.\n\n135\n00:07:32.720 --> 00:07:35.930\nSo SE manage, F context -a -t,\n\n136\n00:07:35.930 --> 00:07:41.070\nI'm adding a new context, and\nI need to tell it what type,\n\n137\n00:07:41.070 --> 00:07:47.900\nand the context type in this\ncase is htpd_sys_content_t.\n\n138\n00:07:47.900 --> 00:07:50.010\nAnd then, the folder that I wanna modify.\n\n139\n00:07:50.010 --> 00:07:56.570\nI'll do /website, okay, that's gonna\nreach in and update the policy.\n\n140\n00:07:56.570 --> 00:07:58.201\nNow the policy is changed.\n\n141\n00:07:58.201 --> 00:08:03.453\nIf I look at my folder, my folder is\nstill set to the default context, right.\n\n142\n00:08:03.453 --> 00:08:05.194\nBut the policy has changed.\n\n143\n00:08:05.194 --> 00:08:09.098\nSo if I were to do a restore\ncon -rv/website and\n\n144\n00:08:09.098 --> 00:08:15.090\nrestore it back to its default context,\nwhat does it end up with?\n\n145\n00:08:15.090 --> 00:08:18.765\nIt ends up with httpd sys content T,\nright.\n\n146\n00:08:18.765 --> 00:08:20.545\nNow, that is the default context for\n\n147\n00:08:20.545 --> 00:08:24.070\nthat folder,\nbecause I've actually modified the policy.\n\n148\n00:08:24.070 --> 00:08:29.107\nSo going back to Zach's question,\nchcon is persistent, right?\n\n149\n00:08:29.107 --> 00:08:32.397\nIt is persistent, if you reboot,\nthe context will stay, but\n\n150\n00:08:32.397 --> 00:08:36.760\nif somebody runs restorecon,\nit'll get reset, and now it's gone.\n\n151\n00:08:36.760 --> 00:08:40.030\nBy doing it this way,\nI've changed the policy.\n\n152\n00:08:40.030 --> 00:08:42.330\nNow, I can use chcon to\nassign it if I want, or\n\n153\n00:08:42.330 --> 00:08:44.180\nI can just use restorecon to assign it.\n\n154\n00:08:44.180 --> 00:08:46.100\nBecause the policies modified and\n\n155\n00:08:46.100 --> 00:08:48.550\nthis will save me even if\nsomebody runs restore con.\n\n156\n00:08:48.550 --> 00:08:52.600\nSo if you're the only administrator on\nyour system you probably don't have to\n\n157\n00:08:52.600 --> 00:08:54.690\nworry about this right,\nbecause you know what you set, but\n\n158\n00:08:54.690 --> 00:08:59.630\nthe reality is most people that work with\nLinux have multiple server admins, and\n\n159\n00:08:59.630 --> 00:09:03.420\npeople run restore cons all the time, it's\none of those default troubleshooting steps\n\n160\n00:09:03.420 --> 00:09:05.730\nit's like maybe somebody messed up\nSC Linux let me run restore con.\n\n161\n00:09:05.730 --> 00:09:07.550\nAnd then you end up breaking things.\n\n162\n00:09:07.550 --> 00:09:08.990\nSo by modifying the policy like this,\n\n163\n00:09:08.990 --> 00:09:11.880\nit makes it,\nlet's call it super permanent, right?\n\n164\n00:09:12.940 --> 00:09:15.102\nIt was sort of permanent before,\nnow it's super permanent.\n\n165\n00:09:15.102 --> 00:09:15.882\n&gt;&gt; Super permanent.\n\n166\n00:09:15.882 --> 00:09:20.595\n&gt;&gt; So if we reboot, the context stays,\nif we restore con, the context stays and\n\n167\n00:09:20.595 --> 00:09:21.820\nthat's it.\n\n168\n00:09:21.820 --> 00:09:25.820\nAnd so you'll see tutorials and things\nonline where people don't even use chcon.\n\n169\n00:09:25.820 --> 00:09:30.010\nWhere they just us SC Managed\nto change the context, and\n\n170\n00:09:30.010 --> 00:09:32.730\nthen they use restore con to assign it.\n\n171\n00:09:32.730 --> 00:09:35.610\nAnd then they're just change that\ndefault policy, and then assigning it.\n\n172\n00:09:35.610 --> 00:09:40.891\nNow, one quick caveat I wanna add,\nI ran this and when I changed the context,\n\n173\n00:09:40.891 --> 00:09:45.293\nwhen I ran SC Managed F context,\nI pointed to the folder, okay?\n\n174\n00:09:45.293 --> 00:09:50.251\nNow, that creates a little bit of problem\nthat you might not notice right away,\n\n175\n00:09:50.251 --> 00:09:55.520\nif I go in and look, I can see that\nthe website folder got the right context.\n\n176\n00:09:55.520 --> 00:09:59.280\nBut if I go inside of that folder and\ntake a look,\n\n177\n00:09:59.280 --> 00:10:04.605\nwhat you'll find is that the index\nfile did not get the right context.\n\n178\n00:10:04.605 --> 00:10:08.645\nI changed it for the folder not the files.\n\n179\n00:10:08.645 --> 00:10:12.305\nWhen you run SE manage it's very literal,\nright.\n\n180\n00:10:12.305 --> 00:10:14.923\nI'm pointing to slash website and\nthat's that.\n\n181\n00:10:14.923 --> 00:10:17.885\nIf I wanna get everything\ninside of slash website,\n\n182\n00:10:17.885 --> 00:10:19.865\nI need to modify this with\na regular expression.\n\n183\n00:10:19.865 --> 00:10:23.094\nAnd if you hate regular expressions\nI don't blame you, they're hard, but\n\n184\n00:10:23.094 --> 00:10:26.576\nbasically I need to stick a little regular\nexpression on the end that says anything\n\n185\n00:10:26.576 --> 00:10:29.151\nthat starts with /website and\nends with whatever, right,\n\n186\n00:10:29.151 --> 00:10:30.433\nto get everything inside it.\n\n187\n00:10:30.433 --> 00:10:34.516\nSo that command looks like this, and\n\n188\n00:10:34.516 --> 00:10:39.259\nit's gonna probably wrap around my head,\n\n189\n00:10:39.259 --> 00:10:44.350\nbut I'll say /website and (/.*)?\n\n190\n00:10:44.350 --> 00:10:46.830\nOkay, and that's kind of an unusual niche,\n\n191\n00:10:46.830 --> 00:10:48.930\nI need to put this in quotes\ncause of the special characters.\n\n192\n00:10:48.930 --> 00:10:52.150\nLet me fill that in quotes like that, so\n\n193\n00:10:52.150 --> 00:10:53.965\nlet me explain what I'm typing here,\nright.\n\n194\n00:10:53.965 --> 00:10:56.370\n/website, that's the folder, right, and\n\n195\n00:10:56.370 --> 00:10:59.120\nthen parenthesis means\nI'm slicing my command.\n\n196\n00:10:59.120 --> 00:11:05.785\nSo I'm looking for a particular\nsliced entry and I'm looking for .*.\n\n197\n00:11:05.785 --> 00:11:10.810\n.* is a wild card and\nit means any number repeating characters\n\n198\n00:11:10.810 --> 00:11:14.390\nfollowed by a final character that may be\ndifferent, and we have to be like because\n\n199\n00:11:14.390 --> 00:11:17.900\nif it's a folder, it might have a slash\non the end versus a file that wouldn't.\n\n200\n00:11:17.900 --> 00:11:20.180\nA file would have a letter or\nnumber at the end.\n\n201\n00:11:20.180 --> 00:11:24.461\nSo that's you basically just saying, look\nfor anything that starts with /website or\n\n202\n00:11:24.461 --> 00:11:29.330\n/website/ and\nthen a file inside it or a folder,\n\n203\n00:11:29.330 --> 00:11:31.228\nthe question mark is was\nallowing those folders.\n\n204\n00:11:31.228 --> 00:11:35.361\nAnd so, to find all of those and\nit will set their context as well.\n\n205\n00:11:35.361 --> 00:11:41.603\nAll right, when I do that, now I can\ngo and do restore con -rv/website and\n\n206\n00:11:41.603 --> 00:11:47.400\nit's gonna get, not just the folder,\nbut everything inside of it.\n\n207\n00:11:47.400 --> 00:11:50.480\nSee how I got a message right there for\nindex.html?\n\n208\n00:11:50.480 --> 00:11:56.021\nAnd so now it's getting it,\nif I do a ls-dz/website.\n\n209\n00:11:56.021 --> 00:11:59.588\nI can see that it's got the right context,\nand\n\n210\n00:11:59.588 --> 00:12:05.720\nif I do a look inside of the folder,\nI can see index.html also has it as well.\n\n211\n00:12:05.720 --> 00:12:10.880\nSo be careful with that, make sure that\nyou go in and use that little wild card.\n\n212\n00:12:10.880 --> 00:12:13.770\nIf you hate regular expression,\njust memorize this one, right?\n\n213\n00:12:13.770 --> 00:12:16.625\nThe slash telling it that we're\ngoing inside of the folder,\n\n214\n00:12:16.625 --> 00:12:19.870\n.* is the wild card for\nanything else underneath it.\n\n215\n00:12:19.870 --> 00:12:22.080\nAnd then the question mark just\nin case it is a subfolder,\n\n216\n00:12:22.080 --> 00:12:23.990\nit'll have another slash so\nyou gotta catch that.\n\n217\n00:12:23.990 --> 00:12:27.360\nSo that's what that entry means,\nand now it's gonna be set.\n\n218\n00:12:27.360 --> 00:12:30.340\nAnd if we do restore con or\nwhatever, it's gonna go through and\n\n219\n00:12:30.340 --> 00:12:32.160\nhit all of those files inside of it.\n\n220\n00:12:32.160 --> 00:12:34.620\nEven new ones that I add\nwill get that right context.\n\n221\n00:12:34.620 --> 00:12:39.381\nIn fact, right now, I've got index.html,\nmaybe I create a new file,\n\n222\n00:12:39.381 --> 00:12:42.048\nI'll just call it file.html, right?\n\n223\n00:12:42.048 --> 00:12:47.370\nAnd when I look at that, I can see that\nit automatically got the right context.\n\n224\n00:12:47.370 --> 00:12:50.330\nI don't have to worry about context\never again, as I create the files,\n\n225\n00:12:50.330 --> 00:12:53.975\nit will automatically get the right\ncontext, because I've modified the policy.\n\n226\n00:12:53.975 --> 00:12:57.775\nSo real important part to make\nSELinux kind of future proof,\n\n227\n00:12:57.775 --> 00:12:59.205\neven if people start messing with things.\n\n228\n00:12:59.205 --> 00:13:02.015\n&gt;&gt; So Don,\nwhat if I have a custom service?\n\n229\n00:13:02.015 --> 00:13:04.393\nCan we create a context for that?\n\n230\n00:13:04.393 --> 00:13:06.357\n&gt;&gt; Yeah, every example that I've given so\n\n231\n00:13:06.357 --> 00:13:09.605\nfar has used a context that already\nexisted in the system, right?\n\n232\n00:13:09.605 --> 00:13:11.895\nSo I've been using the web server here,\nand\n\n233\n00:13:11.895 --> 00:13:15.530\nI didn't make httpd sys content\nT that already existed.\n\n234\n00:13:15.530 --> 00:13:19.460\nSo I just looked at the default location\nand stole that context and reused it.\n\n235\n00:13:19.460 --> 00:13:23.910\nBut the reality is that you\ncan create your own context,\n\n236\n00:13:23.910 --> 00:13:26.075\nthe challenge with it is\nit's just really hard.\n\n237\n00:13:26.075 --> 00:13:28.967\n[LAUGH] It's really hard\nto make your own context.\n\n238\n00:13:28.967 --> 00:13:31.589\nIf you ever get bored,\nyou can poke around in the hard drive and\n\n239\n00:13:31.589 --> 00:13:35.040\nfind where all these contexts are defined,\nthe policies that we were just in.\n\n240\n00:13:35.040 --> 00:13:36.640\nIt's hard to create a custom one.\n\n241\n00:13:36.640 --> 00:13:39.550\nSo fortunately, there's utilities that\nmake it where we can develop custom ones\n\n242\n00:13:39.550 --> 00:13:41.790\npretty quickly and easily.\n\n243\n00:13:41.790 --> 00:13:44.778\nSo and sometimes,\nit's even easier than going through and\n\n244\n00:13:44.778 --> 00:13:47.058\nmodifying stuff the way\nwe've done it here.\n\n245\n00:13:47.058 --> 00:13:54.143\nSo for example, let's say that,\nlets put thing back the way they were.\n\n246\n00:13:54.143 --> 00:14:00.486\nSo I've been kind of messing around\nwith these contexts here and\n\n247\n00:14:00.486 --> 00:14:06.650\nif I'm gonna change the website\nback to have the default T.\n\n248\n00:14:06.650 --> 00:14:07.696\nSo I'm just gonna put it back,\n\n249\n00:14:07.696 --> 00:14:09.843\nI'm modifying the policy to put\nthe website back to default T.\n\n250\n00:14:09.843 --> 00:14:12.902\nAnd I'll do a restore con and\nthere we go, so\n\n251\n00:14:12.902 --> 00:14:17.949\nthat puts those back to just have that\ndefault T and we can just verify that\n\n252\n00:14:17.949 --> 00:14:24.100\nreal quick by looking at /website and\nyou have everything back to default now.\n\n253\n00:14:24.100 --> 00:14:27.700\nWell, I guess I miss the actual root\nfolder, but I don't care about that one.\n\n254\n00:14:27.700 --> 00:14:30.400\nSo so many here, so its kinda back to\nthe way that it needs to be and now,\n\n255\n00:14:30.400 --> 00:14:31.820\nthey're back to their default.\n\n256\n00:14:31.820 --> 00:14:36.480\nNow, if there wasn't some context\npredefined that I could use, I would need\n\n257\n00:14:36.480 --> 00:14:41.220\nto create one, all right, and where it\ngets a little bit tricky is figuring out\n\n258\n00:14:41.220 --> 00:14:45.550\nnot just what context you use, but\neven what things need to be accessed.\n\n259\n00:14:45.550 --> 00:14:47.690\nMaybe I install some custom software, and\n\n260\n00:14:47.690 --> 00:14:52.000\nI have no idea what folders it's looking\nfor, what files it's looking for.\n\n261\n00:14:52.000 --> 00:14:55.950\nWith Apache, I look in the config, I tell\nit, hey, I want you to look in /website.\n\n262\n00:14:55.950 --> 00:15:01.000\nBut what if it's some application that's\ncreating sockets inside the /var,\n\n263\n00:15:01.000 --> 00:15:06.590\nit's got config files and /etc, it's got\nother things that are stored in /local or\n\n264\n00:15:06.590 --> 00:15:09.350\nwhatever, so now,\nyou've got files all over the place.\n\n265\n00:15:09.350 --> 00:15:12.300\nAnd if you miss even one of them,\nit might break the whole service.\n\n266\n00:15:12.300 --> 00:15:15.720\nSo we need some way to\nidentify custom services and\n\n267\n00:15:15.720 --> 00:15:18.080\nall the resources they access, right?\n\n268\n00:15:18.080 --> 00:15:21.130\nSo there's a nice little system\nthat we can use for that.\n\n269\n00:15:21.130 --> 00:15:25.300\nRight now, my web server is kinda\nbroken or at least it should be.\n\n270\n00:15:25.300 --> 00:15:28.850\nBecause it's not gonna have access to\nthat index file like it did before.\n\n271\n00:15:28.850 --> 00:15:32.120\nSo, if I fire up Chromium, and I try and\n\n272\n00:15:32.120 --> 00:15:37.100\nbrowse to my web server,\nright, I get the test page.\n\n273\n00:15:37.100 --> 00:15:40.230\nI don't get my page because it doesn't\nhave access, it just got blocked, right?\n\n274\n00:15:40.230 --> 00:15:42.120\nSo it got denied that access.\n\n275\n00:15:42.120 --> 00:15:45.040\nWell, if I don't know where\nthat web page is stored,\n\n276\n00:15:45.040 --> 00:15:48.350\nI don't know what that service is looking\nfor, this is a completely custom thing,\n\n277\n00:15:48.350 --> 00:15:50.840\nsomething new to me,\nI don't know what this stuff is.\n\n278\n00:15:50.840 --> 00:15:52.402\nWe can let the system figure it out for\nus,\n\n279\n00:15:52.402 --> 00:15:54.110\nand we can use our audit\nlogs to figure it out.\n\n280\n00:15:54.110 --> 00:15:55.654\nSo let me show you that process.\n\n281\n00:15:55.654 --> 00:16:00.454\nThe first thing I'm going to do,\nis I'm going to say set in force, 0,\n\n282\n00:16:00.454 --> 00:16:04.774\nokay, set in force 0 moves SE Linux\nin permissive mode It says,\n\n283\n00:16:04.774 --> 00:16:09.184\ndon't stop people from accessing\nthings they're not allowed.\n\n284\n00:16:09.184 --> 00:16:13.530\nInstead, just log it,\nlog the entry, right?\n\n285\n00:16:13.530 --> 00:16:18.646\nSo if I go back to Chromium, and\nI refresh, now I get my index page, right?\n\n286\n00:16:18.646 --> 00:16:23.170\nIt wasn't allowed to, but\nSELinux let it happen anyway.\n\n287\n00:16:23.170 --> 00:16:25.608\nAnd when it did it,\nit logged the entry, right?\n\n288\n00:16:25.608 --> 00:16:29.860\nSo it logged the entry that it accessed\nthis kind of unknown location, right?\n\n289\n00:16:29.860 --> 00:16:33.955\nSo move into permissive mode, and\nthen while you're in permissive mode,\n\n290\n00:16:33.955 --> 00:16:36.233\nyou're gonna launch your application.\n\n291\n00:16:36.233 --> 00:16:39.010\nWhatever this custom service is,\nrun it, start it up,\n\n292\n00:16:39.010 --> 00:16:42.025\ngo through all the activities\nthat that application needs,\n\n293\n00:16:42.025 --> 00:16:46.880\nbecause what you're doing is you're\ncreating a log file of all the failures.\n\n294\n00:16:46.880 --> 00:16:48.891\nAnd that log file with all the failures,\n\n295\n00:16:48.891 --> 00:16:51.917\nwe can convert that into a custom\npolicy to allow the access.\n\n296\n00:16:51.917 --> 00:16:57.870\nSo step one, setenforce 0, or you could\nsay setenforce permissive, either one.\n\n297\n00:16:57.870 --> 00:16:59.398\nWe need to get into a permissive mode.\n\n298\n00:16:59.398 --> 00:17:04.232\nAnd then you run your custom service and\nyou do all the things that service does,\n\n299\n00:17:04.232 --> 00:17:04.910\nright?\n\n300\n00:17:04.910 --> 00:17:06.150\nIn my case, it's a web server so\nI just browse to it.\n\n301\n00:17:06.150 --> 00:17:10.814\nBut you might have some kind of accounting\nsoftware, or file transfer software, or\n\n302\n00:17:10.814 --> 00:17:12.240\nwhatever, running.\n\n303\n00:17:12.240 --> 00:17:15.530\nDo all the things it does, run through\na quick test and make sure it works.\n\n304\n00:17:15.530 --> 00:17:17.749\nAnd then, when it's done,\n\n305\n00:17:17.749 --> 00:17:23.160\nyou can put your system back to\nenforcing if you want, or we can wait.\n\n306\n00:17:23.160 --> 00:17:26.998\nBut when it's done, we've now got a log\nof everything that it tried to access,\n\n307\n00:17:26.998 --> 00:17:29.369\neverything that it was\nblocked from accessing.\n\n308\n00:17:29.369 --> 00:17:34.407\nAnd you can see it by grepping for\nwhatever the service name is,\n\n309\n00:17:34.407 --> 00:17:38.321\nin my case, its httpd,\ninside of that log file.\n\n310\n00:17:38.321 --> 00:17:42.136\nSo I'm gonna look in\n/var/log/audit/audit.log, and\n\n311\n00:17:42.136 --> 00:17:46.546\nI can see all the messages that came\nup including where it was denied for\n\n312\n00:17:46.546 --> 00:17:49.060\ngetting to that index file, right?\n\n313\n00:17:49.060 --> 00:17:50.654\nIt's all right there in the log files.\n\n314\n00:17:50.654 --> 00:17:54.803\nWell, I can take those log files,\nand I can pipe them and\n\n315\n00:17:54.803 --> 00:17:57.110\nsend them to another command.\n\n316\n00:17:57.110 --> 00:17:59.543\nAnd there's a command called audit2allow.\n\n317\n00:17:59.543 --> 00:18:05.062\nIt takes an audit log, and\nit converts it into an allow script,\n\n318\n00:18:05.062 --> 00:18:08.570\na script that will allow this access.\n\n319\n00:18:08.570 --> 00:18:11.397\nSo I've got all the denies\nthrough this custom service, and\n\n320\n00:18:11.397 --> 00:18:12.626\nnow I am gonna convert it.\n\n321\n00:18:12.626 --> 00:18:15.970\nAnd with audit2allow\nthere's two ways to run it.\n\n322\n00:18:15.970 --> 00:18:17.660\nAnd so we normally wanna run it twice.\n\n323\n00:18:17.660 --> 00:18:20.550\nThe first way is just to\nverify this works, right?\n\n324\n00:18:20.550 --> 00:18:25.347\nSo I'll say audit2allow -m, and the name\nof the module that I'm gonna create.\n\n325\n00:18:25.347 --> 00:18:27.028\nI'm gonna create a module, and\n\n326\n00:18:27.028 --> 00:18:30.652\nyou would name it whatever your\ncustom service was, mine's httpd.\n\n327\n00:18:30.652 --> 00:18:34.530\nAnd then -w to show me the output,\ntake a look at the file and\n\n328\n00:18:34.530 --> 00:18:36.716\ntell me what you would need to do.\n\n329\n00:18:36.716 --> 00:18:38.475\nAnd so it's gonna run, and\n\n330\n00:18:38.475 --> 00:18:43.317\nit's gonna show me all of the SELinux\nerrors that were generated, right?\n\n331\n00:18:43.317 --> 00:18:45.506\nBecause there might be one error\nthat was generated 50 times.\n\n332\n00:18:45.506 --> 00:18:48.270\nSo it's gonna go through and\njust identify it once.\n\n333\n00:18:48.270 --> 00:18:49.414\nAnd so it's showing me each of the one.\n\n334\n00:18:49.414 --> 00:18:53.480\nIt's telling me where we're missing\nthe allow rules for this, or for that.\n\n335\n00:18:53.480 --> 00:18:55.558\nHere, it's the index.html, right?\n\n336\n00:18:55.558 --> 00:18:57.000\nAnd so it's identifying.\n\n337\n00:18:57.000 --> 00:18:58.422\nNow I can look through here, and\n\n338\n00:18:58.422 --> 00:19:00.950\nI need to make sure that I only\nsee the stuff that I expect,\n\n339\n00:19:00.950 --> 00:19:04.396\ncuz what if somebody else was trying to\nbreak into the system at the same time?\n\n340\n00:19:04.396 --> 00:19:08.560\nWell, I should be doing this in a lab\nenvironment that's isolated, right?\n\n341\n00:19:08.560 --> 00:19:10.094\nSo my bad if that happens.\n\n342\n00:19:10.094 --> 00:19:13.630\nBut I need to make sure this is\nthe right stuff, and in my case, it is.\n\n343\n00:19:13.630 --> 00:19:17.229\nI see that index.html that I know we\nshould have access to, all right?\n\n344\n00:19:17.229 --> 00:19:20.185\nSo then I'm gonna run that same command,\n\n345\n00:19:20.185 --> 00:19:24.920\nexcept I'm gonna get rid of the -w\nthat's under my head, right?\n\n346\n00:19:24.920 --> 00:19:29.498\nSo this is the the command\nthat I ran a minute ago.\n\n347\n00:19:29.498 --> 00:19:35.000\nSo I'm gonna get rid of that -w and\nI'm gonna change the m to a M, all right.\n\n348\n00:19:35.000 --> 00:19:38.699\nAnd by doing that, that's telling it,\nhey, I want you to go ahead and\n\n349\n00:19:38.699 --> 00:19:41.920\ngenerate a module that allows\nthe things that were blocked.\n\n350\n00:19:41.920 --> 00:19:44.040\nAnd see how it's telling me\nthat it's building a module?\n\n351\n00:19:44.040 --> 00:19:49.320\nAnd I can make the policy active by\nrunning this command right here, okay.\n\n352\n00:19:49.320 --> 00:19:51.837\nWell, we didn't see it cuz it\nhappened in the background, but\n\n353\n00:19:51.837 --> 00:19:53.748\nwhat it did is it actually\ngenerated two files.\n\n354\n00:19:53.748 --> 00:19:59.997\nIt generated httpd.pp and .te, all right?\n\n355\n00:19:59.997 --> 00:20:03.877\nThe .te, that's the one that's containing\nall the SELinux errors that were found.\n\n356\n00:20:03.877 --> 00:20:08.260\nAnd then the .pp file, that's the one\nthat's created a policy file that\n\n357\n00:20:08.260 --> 00:20:12.505\ncontains all the entries to allow\nthat custom service to work.\n\n358\n00:20:12.505 --> 00:20:20.892\nAnd if I run semodule -i I can import\nthat httpd.pp file into my policy.\n\n359\n00:20:20.892 --> 00:20:25.950\nAnd that's gonna bring this in and create\nthe custom contexts that are needed.\n\n360\n00:20:25.950 --> 00:20:28.759\nSo I don't have to go and\nhand-build the context.\n\n361\n00:20:28.759 --> 00:20:31.780\nThe error log contained\neverything that I needed.\n\n362\n00:20:31.780 --> 00:20:35.770\nThis converted it to a policy,\nand then I load that policy.\n\n363\n00:20:35.770 --> 00:20:37.103\nAnd once the policy is loaded,\n\n364\n00:20:37.103 --> 00:20:39.630\nit takes just a moment cuz\nit's gotta compile it, right?\n\n365\n00:20:39.630 --> 00:20:41.996\nThese are stored as binary, so\nit's gotta load it in and compile it.\n\n366\n00:20:41.996 --> 00:20:46.579\nAnd once these are loaded, now I can\nswitch back to enforcing mode and Apache\n\n367\n00:20:46.579 --> 00:20:51.820\nshould have the access, or whatever my\ncustom service is, should have the access.\n\n368\n00:20:51.820 --> 00:20:56.324\nSo now that it's in there I can run\nsemodule -l to list my modules.\n\n369\n00:20:56.324 --> 00:21:00.010\nAnd we can see the modules, and I should\nbe able to spot the one that I loaded,\n\n370\n00:21:00.010 --> 00:21:00.595\nthe httpd.\n\n371\n00:21:00.595 --> 00:21:04.116\nWell, I should have given it a different\nname, but it's too late now.\n\n372\n00:21:04.116 --> 00:21:06.360\n[LAUGH] So if you gave it a custom name,\nit'll show up here with the custom name.\n\n373\n00:21:06.360 --> 00:21:07.800\n&gt;&gt; Should've named him Bob.\n\n374\n00:21:07.800 --> 00:21:09.167\n&gt;&gt; I should have.\n\n375\n00:21:09.167 --> 00:21:11.258\nThere's already an httpd one, so\n\n376\n00:21:11.258 --> 00:21:16.270\nI'm not gonna know if that was\nthe original one or the one that I made.\n\n377\n00:21:16.270 --> 00:21:17.513\nWell, I guess I'll know\nif the page doesn't load.\n\n378\n00:21:17.513 --> 00:21:18.220\n&gt;&gt; Yeah.\n&gt;&gt; But\n\n379\n00:21:18.220 --> 00:21:21.710\nthe one that I made is going\nto allow /website, okay?\n\n380\n00:21:21.710 --> 00:21:23.504\nSo that's gonna get put in there.\n\n381\n00:21:23.504 --> 00:21:27.283\nAnd I can say, setenforce enforcing,\nor setenforce 1,\n\n382\n00:21:27.283 --> 00:21:32.300\nif you wanna use the number, and\nnow I'm back to enforcing again.\n\n383\n00:21:32.300 --> 00:21:36.670\nAnd in the default policy, I should not\nbe able to access the /website folder.\n\n384\n00:21:36.670 --> 00:21:39.821\nSo I should get the Apache test page.\n\n385\n00:21:39.821 --> 00:21:43.061\nBut because we've changed this,\nthe new policy is loaded, and\n\n386\n00:21:43.061 --> 00:21:44.210\nI should have access.\n\n387\n00:21:44.210 --> 00:21:48.360\nNow usually, you will have to restart\nyour service for this to work.\n\n388\n00:21:48.360 --> 00:21:51.536\nSo I'm gonna go ahead and\nrestart the httpb service, oops,\n\n389\n00:21:51.536 --> 00:21:53.352\nsystemctl restart is what I want.\n\n390\n00:21:53.352 --> 00:21:55.301\nI'm saying one thing and typing another.\n\n391\n00:21:55.301 --> 00:21:56.095\nSo there we go.\n\n392\n00:21:56.095 --> 00:21:58.053\nAnd now I'll jump over to old Chromium,\n\n393\n00:21:58.053 --> 00:22:02.830\nand it's actually already reload,\nthat's from when I was in permissive mode.\n\n394\n00:22:02.830 --> 00:22:07.847\nSo if I wasn't in permissive mode,\nwhen I went to load this, then\n\n395\n00:22:07.847 --> 00:22:13.983\nit should give me the Apache page if it\nwas blocked, or my page if it was allowed.\n\n396\n00:22:13.983 --> 00:22:15.775\nAnd I got my page.\n\n397\n00:22:15.775 --> 00:22:17.914\nI now have a custom policy in place.\n\n398\n00:22:17.914 --> 00:22:21.775\nAnd that custom policy is pretty\nneat because, take a look at this.\n\n399\n00:22:21.775 --> 00:22:28.621\nIf I do a ls -dz /website,\nit's got the right context.\n\n400\n00:22:28.621 --> 00:22:34.352\nAnd if I look inside that folder,\nand I look at, oops, ls -laz,\n\n401\n00:22:34.352 --> 00:22:40.417\nthere we go, and I look at what's\ninside of it, there's the index.\n\n402\n00:22:40.417 --> 00:22:43.906\nAnd notice the index file,\nit doesn't have the right context.\n\n403\n00:22:43.906 --> 00:22:46.801\nIt still has default_t.\n\n404\n00:22:46.801 --> 00:22:52.680\nBut it's okay because in my policy it says\nApache is allowed to access this folder.\n\n405\n00:22:52.680 --> 00:22:55.630\nDoesn't matter that that context is wrong.\n\n406\n00:22:55.630 --> 00:22:58.898\nAnd that's important because\nif you have custom services,\n\n407\n00:22:58.898 --> 00:23:02.880\nthey don't have a context, and\nwriting a custom context is really hard.\n\n408\n00:23:02.880 --> 00:23:06.680\nSo what we've done here is we've\neffectively created exceptions that say\n\n409\n00:23:06.680 --> 00:23:09.286\nthis custom service now\nhas access to that folder.\n\n410\n00:23:09.286 --> 00:23:12.540\nAnd I didn't realize I was in the website\nfolder when I created these guys,\n\n411\n00:23:12.540 --> 00:23:14.790\nso I probably need to\ndelete those out of there.\n\n412\n00:23:14.790 --> 00:23:17.547\nNo point in having those lying around,\n\n413\n00:23:17.547 --> 00:23:20.895\nsince I'm done with them anyway,\nthere we go.\n\n414\n00:23:20.895 --> 00:23:25.086\nBut now when I look at these guys it\ndoesn't matter to me that they've got\n\n415\n00:23:25.086 --> 00:23:27.919\nthe wrong context because\nthe policy allows it.\n\n416\n00:23:27.919 --> 00:23:31.468\nSo you can take a service that you've\nnever seen before, never used,\n\n417\n00:23:31.468 --> 00:23:35.512\nhave no idea what its context is, and\nyou can run through this process, right?\n\n418\n00:23:35.512 --> 00:23:40.863\nGo into permissive mode, run the service,\nuse it's features, and then take the audit\n\n419\n00:23:40.863 --> 00:23:46.090\nlog, convert it to a policy, import the\npolicy, and then switch back to enforcing.\n\n420\n00:23:46.090 --> 00:23:50.590\nAnd when you're done, your custom\nservice will now work perfectly fine.\n\n421\n00:23:50.590 --> 00:23:53.509\nMeanwhile, SELinux is still enabled and\nstill doing its job, and\n\n422\n00:23:53.509 --> 00:23:55.344\nyour custom service is now partitioned.\n\n423\n00:23:55.344 --> 00:23:59.037\nIt's being held to the folders that\nit needs access to do its job.\n\n424\n00:23:59.037 --> 00:24:03.282\nThen you can take this policy file, and\nwe do all this on a lab computer, right?\n\n425\n00:24:03.282 --> 00:24:08.003\nI can take this policy file, the .pp file,\nCopy it to my production servers and\n\n426\n00:24:08.003 --> 00:24:09.063\nimport it there.\n\n427\n00:24:09.063 --> 00:24:11.684\nSo I didn't have to install\nall the policy, core utils and\n\n428\n00:24:11.684 --> 00:24:13.890\nall that stuff on my production servers.\n\n429\n00:24:13.890 --> 00:24:17.270\nI just needed to generate the policy on my\nlab server and move it into production.\n\n430\n00:24:17.270 --> 00:24:19.730\nSo a great way to deal\nwith custom services.\n\n431\n00:24:19.730 --> 00:24:21.110\n&gt;&gt; SELinux, I am sold.\n\n432\n00:24:21.110 --> 00:24:23.250\nIs there anything else it's capable of?\n\n433\n00:24:23.250 --> 00:24:26.580\nI'm really focused on files for\nthis, and for most of you guys,\n\n434\n00:24:26.580 --> 00:24:28.832\nthat's what will happen\nas you focus on files.\n\n435\n00:24:28.832 --> 00:24:34.090\nBut SELinux applies to other things too,\nlike processes and port numbers as well.\n\n436\n00:24:34.090 --> 00:24:35.910\nMy web server is running on port 80.\n\n437\n00:24:35.910 --> 00:24:44.170\nIf I were to look at the /etc/\nhttpd/comp/httpd.com file.\n\n438\n00:24:44.170 --> 00:24:46.050\nIn here somewhere is a listen command.\n\n439\n00:24:46.050 --> 00:24:47.150\nHere is it, listen.\n\n440\n00:24:47.150 --> 00:24:48.570\nIt's listening on port 80.\n\n441\n00:24:48.570 --> 00:24:51.633\nWell, what if I wanted to run\nmy server on a nonstandard port?\n\n442\n00:24:51.633 --> 00:24:56.503\nMaybe I want to run my web server on 8080,\nor 1024, or whatever, SELinux is saying,\n\n443\n00:24:56.503 --> 00:25:00.720\nyou know what, the web server's not\nallowed to listen on those other ports.\n\n444\n00:25:00.720 --> 00:25:04.460\nThis must be a hacker trying to bypass\na firewall or something, so it stops it.\n\n445\n00:25:04.460 --> 00:25:08.480\nSo, we can actually manage\nports with SELinux as well.\n\n446\n00:25:08.480 --> 00:25:09.560\nIt's a lot less common, but\n\n447\n00:25:09.560 --> 00:25:13.040\nif you ever run into it,\nlet me show you how that would be done.\n\n448\n00:25:13.040 --> 00:25:15.440\nThe command you'll run is SEmanage.\n\n449\n00:25:15.440 --> 00:25:19.550\nThat's the command I used a moment ago\nto create our custom policies I'll say\n\n450\n00:25:19.550 --> 00:25:26.980\nSEmanage port- a, and\nyou can add a context type to a port.\n\n451\n00:25:26.980 --> 00:25:28.560\nIn fact, you can kinda look\nat what you've already got.\n\n452\n00:25:28.560 --> 00:25:31.780\nIf you say SEmanage port- l,\n\n453\n00:25:31.780 --> 00:25:37.440\nit'll list out the ports that are already\napproved, and I can find port 80 in here.\n\n454\n00:25:37.440 --> 00:25:40.070\nI probably should have greped it,\nbecause now I'm never gonna find it.\n\n455\n00:25:40.070 --> 00:25:41.048\nIn fact, let me do that.\n\n456\n00:25:41.048 --> 00:25:42.930\n&gt;&gt; [LAUGH]\n&gt;&gt; I'll grep that and\n\n457\n00:25:42.930 --> 00:25:44.260\nthen we'll just look for 80.\n\n458\n00:25:44.260 --> 00:25:44.840\nRight?\n\n459\n00:25:44.840 --> 00:25:46.480\nAnd so, that's gonna come up and\n\n460\n00:25:46.480 --> 00:25:51.280\nright here, I've got HTTP port T,\nis a context type.\n\n461\n00:25:51.280 --> 00:25:55.400\nAnd it's allowing these,oops,\nthese port numbers.\n\n462\n00:25:55.400 --> 00:25:57.720\nAnd 8080 is not in that list.\n\n463\n00:25:57.720 --> 00:25:59.184\n8080 is not in that list.\n\n464\n00:25:59.184 --> 00:26:02.317\nSo if I move my we server to port 8080,\nit's not gonna work,\n\n465\n00:26:02.317 --> 00:26:04.260\nSELinux is gonna block it.\n\n466\n00:26:04.260 --> 00:26:11.510\nAnd so I can come in and I can assign this\ncontext type to custom, to another port.\n\n467\n00:26:11.510 --> 00:26:16.875\nI can say SEmanage port -a,\nso I'm adding a context.\n\n468\n00:26:16.875 --> 00:26:19.430\n-t for the context type.\n\n469\n00:26:19.430 --> 00:26:24.900\nMine's http port t, which again I got\nfrom that list just a second ago.\n\n470\n00:26:24.900 --> 00:26:28.190\nAnd then -p, I'm attaching it to a port.\n\n471\n00:26:28.190 --> 00:26:34.200\nAnd it's gonna be tcp 8080, or\nwhatever port number it is you wanna use.\n\n472\n00:26:34.200 --> 00:26:35.670\nAnd when I do that.\n\n473\n00:26:35.670 --> 00:26:39.430\nIt says already defined,\nthat's an interesting one.\n\n474\n00:26:39.430 --> 00:26:43.570\nSo I must already have some other context\ntype, I did dash a to add a context if\n\n475\n00:26:43.570 --> 00:26:46.320\nit already has one,\nI technically need to replace the context.\n\n476\n00:26:46.320 --> 00:26:48.610\nBut here we will just\ntake another port number,\n\n477\n00:26:48.610 --> 00:26:51.657\nI must already had assigned to something,\nI'll do 8888.\n\n478\n00:26:51.657 --> 00:26:56.459\nSo now I've attached 8888 to it and\nif I go and\n\n479\n00:26:56.459 --> 00:27:00.923\npull my listing and I'll grep for 8888.\n\n480\n00:27:00.923 --> 00:27:07.450\nI can now see that it's been added to\nthe HTTP underscore port underscore\n\n481\n00:27:07.450 --> 00:27:13.016\nT list 80 and 81 are still there,\n8888 is also there.\n\n482\n00:27:13.016 --> 00:27:18.514\nSo now it's been added and\nI can I'm kind of curious what's 8080.\n\n483\n00:27:18.514 --> 00:27:20.053\nHTTP_cache_port.\n\n484\n00:27:20.053 --> 00:27:21.980\nApparently that's being\nused by another service.\n\n485\n00:27:21.980 --> 00:27:26.580\nSo I would have to remove that contact\nbefore I could attach another one.\n\n486\n00:27:26.580 --> 00:27:29.890\nBut 8888 now is authorized and\nright there.\n\n487\n00:27:29.890 --> 00:27:33.530\nSo if you start moving services to\nother ports we do this with SSH\n\n488\n00:27:33.530 --> 00:27:37.690\nwhere a lot of people change SSH's\ndefault port SELinux will block it.\n\n489\n00:27:37.690 --> 00:27:40.020\nAnd I've seen a lot of people where\nthey're scratching their heads they can't\n\n490\n00:27:40.020 --> 00:27:43.360\nfigure it out like, I've opened it in\nthe firewall I've allowed the secs\n\n491\n00:27:43.360 --> 00:27:46.250\nI've changed it in ssh configuration and\nit just won't work.\n\n492\n00:27:46.250 --> 00:27:49.900\nAnd it turns out that it's SELinux all\nalong that's been stopping that access.\n\n493\n00:27:49.900 --> 00:27:51.660\nSo that's managing ports.\n\n494\n00:27:51.660 --> 00:27:54.180\nRemember SELinux is very powerful.\n\n495\n00:27:54.180 --> 00:27:55.670\nDoesn't manage just files?\n\n496\n00:27:55.670 --> 00:27:58.500\nIt, also, manages ports, and\n\n497\n00:27:58.500 --> 00:28:01.210\nit can even manage things like users and\ngroups and other things too.\n\n498\n00:28:01.210 --> 00:28:02.600\nIt can really do some crazy stuff.\n\n499\n00:28:02.600 --> 00:28:05.100\nBut, usually we're focused\nmore on the file system,\n\n500\n00:28:05.100 --> 00:28:07.660\nthat's typically what we protect with it.\n\n501\n00:28:07.660 --> 00:28:12.060\n&gt;&gt; So securing services with SELinux this\nis part two make sure you see part one.\n\n502\n00:28:12.060 --> 00:28:14.770\nDon anything else you wanna\nadd before we move on?\n\n503\n00:28:14.770 --> 00:28:17.480\n&gt;&gt; The main thing is just don't\nbe intimidated by SELinux it's\n\n504\n00:28:17.480 --> 00:28:20.080\nreally powerful it will really\nsave your bacon if somebody ever\n\n505\n00:28:20.080 --> 00:28:23.180\nbreaks into your server it really\nminimizes the damage they can do.\n\n506\n00:28:23.180 --> 00:28:27.292\nSo incredibly useful stuff,\nvery powerful, do not disable it.\n\n507\n00:28:27.292 --> 00:28:29.906\nEvery tutorial on the internet\ntells you to disable it,\n\n508\n00:28:29.906 --> 00:28:32.642\nthose are not written by people\nthat care about security.\n\n509\n00:28:32.642 --> 00:28:35.280\nThose are people who just care about\ngetting some sort of stuff running.\n\n510\n00:28:35.280 --> 00:28:38.953\nSo, if you care about security\nYou will leave SELinux enabled.\n\n511\n00:28:38.953 --> 00:28:41.422\nBelieve me, that's what you want to do.\n\n512\n00:28:41.422 --> 00:28:44.277\n&gt;&gt; And you will really wanna save your\nbacon by watching all of the Linux\n\n513\n00:28:44.277 --> 00:28:45.690\nsecurity techniques episodes.\n\n514\n00:28:45.690 --> 00:28:47.340\nYou'll be glad you did.\n\n515\n00:28:47.340 --> 00:28:48.120\nGreat job, Don.\n\n516\n00:28:48.120 --> 00:28:48.890\nThank you.\n\n517\n00:28:48.890 --> 00:28:50.680\nAnd thank you for watching ITPro TV.\n\n518\n00:28:50.680 --> 00:28:53.430\nRemember, a good IT pro\nis always learning.\n\n519\n00:28:53.430 --> 00:28:54.380\nI'm Zack Memos.\n\n520\n00:28:54.380 --> 00:28:55.150\n&gt;&gt; And I'm Don Pezet.\n\n521\n00:28:55.150 --> 00:28:57.560\n&gt;&gt; And we will see you soon.\n\n522\n00:28:57.560 --> 00:29:03.616\n[MUSIC]\n\n523\n00:29:03.616 --> 00:29:07.104\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "229848505"
        },
        {
          "description": "Don and Zach discuss what a CHROOT JAIL is, what are some of the uses for it, what we can place into a chroot jail, examples of how we use chroot, how we know what dependencies go along with the applications, and functionality now that the 'jail' is built.",
          "length": "1930",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-2-chroot_jails-081717-PGM.00_31_52_25.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-2-chroot_jails-081717-PGM.00_31_52_25.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-2-chroot_jails-081717-PGM.00_31_52_25.Still001-sm.jpg",
          "title": "Chroot Jails",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:05.937\nWelcome to IT Pro TV, I'm your host,\n\n2\n00:00:05.937 --> 00:00:11.937\nDon [CROSSTALK]\n&gt;&gt; You're watching IT PRO TV.\n\n3\n00:00:11.937 --> 00:00:16.973\n&gt;&gt; Hello, and thank you for choosing IT\nPro TV, helping you learn wherever you go.\n\n4\n00:00:16.973 --> 00:00:21.802\nI'm your host, Zach Memos as we continue\non with Linux security techniques In this\n\n5\n00:00:21.802 --> 00:00:23.737\nepisode, we're going to jail.\n\n6\n00:00:23.737 --> 00:00:27.423\n&gt;&gt; [LAUGH]\n&gt;&gt; We're gonna chroot, jails.\n\n7\n00:00:27.423 --> 00:00:29.012\nAnd who's gonna bring us that information.\n\n8\n00:00:29.012 --> 00:00:30.475\nWell of course, it's Don Pezet.\n\n9\n00:00:30.475 --> 00:00:31.190\nHey Don.\n\n10\n00:00:31.190 --> 00:00:33.922\n&gt;&gt; Hey, I'm ready to do some\nhard time today as [LAUGH]\n\n11\n00:00:33.922 --> 00:00:36.128\n&gt;&gt; We're gonna do, ten years right?\n\n12\n00:00:36.128 --> 00:00:38.925\n&gt;&gt; We're gonna have to see how many\njail jokes we can work into this one.\n\n13\n00:00:38.925 --> 00:00:43.891\nBut we are tackling chroot jails,\nand chroot, it's just short for\n\n14\n00:00:43.891 --> 00:00:49.380\nChange Root, is a utility we can use,\nor it's a process we can use to change\n\n15\n00:00:49.380 --> 00:00:54.920\nthe way the final system looks to\na service or a user or an application.\n\n16\n00:00:54.920 --> 00:00:59.190\nIt's a way that we can isolate\nsomething from the rest of our system.\n\n17\n00:00:59.190 --> 00:01:03.840\nIf you've got a system that has tons\nof users that are connecting into it,\n\n18\n00:01:03.840 --> 00:01:07.080\none user in theory could bump into\nanother and start to cause problems.\n\n19\n00:01:07.080 --> 00:01:09.802\nWith chroot jails, we jail our users.\n\n20\n00:01:09.802 --> 00:01:13.091\nWe isolate them, we separate them so\nthey can't even see each other.\n\n21\n00:01:13.091 --> 00:01:15.150\nThey don't even know\nsomebody else is there.\n\n22\n00:01:15.150 --> 00:01:18.681\nAnd I keep saying users but\noften times you do this with services.\n\n23\n00:01:18.681 --> 00:01:21.952\nImagine I've got a database server and\na web server and\n\n24\n00:01:21.952 --> 00:01:25.161\nthey're both running on the same platform,\nright?\n\n25\n00:01:25.161 --> 00:01:30.510\nSo I've got one operating system\nrunning MariaDB and Apache.\n\n26\n00:01:30.510 --> 00:01:34.519\nWhile a hacker could break into Apache,\nand then leapfrog right over and\n\n27\n00:01:34.519 --> 00:01:37.091\ncompromise MariaDB from the inside, right?\n\n28\n00:01:37.091 --> 00:01:39.080\nThey're already past\nthe firewall at that point.\n\n29\n00:01:39.080 --> 00:01:39.972\nThat would be a problem.\n\n30\n00:01:39.972 --> 00:01:43.098\nBut if I jail them and\nI isolate and separate them,\n\n31\n00:01:43.098 --> 00:01:48.510\nthe attacker could break into Apache and\nthen they don't see anything else, right?\n\n32\n00:01:48.510 --> 00:01:50.857\nThat MariaDB server might as well\nbe on a separate system as far as\n\n33\n00:01:50.857 --> 00:01:52.010\nthey're concerned.\n\n34\n00:01:52.010 --> 00:01:53.473\nThat's what chroot jails let us do.\n\n35\n00:01:53.473 --> 00:01:57.822\nWe isolate process to minimize\nthe impact of a compromise and\n\n36\n00:01:57.822 --> 00:02:02.020\nthe hide our system or\nprotect the rest of our system.\n\n37\n00:02:02.020 --> 00:02:03.609\nSo it's a powerful technology and\n\n38\n00:02:03.609 --> 00:02:07.295\nit's one that you'll definitely want to\nleverage out there in the real world.\n\n39\n00:02:07.295 --> 00:02:10.411\nLike everything out there there's more\nthan one way to solve a problem and\n\n40\n00:02:10.411 --> 00:02:13.830\nthis is one of the potential ways that you\nmight protect the system specially when\n\n41\n00:02:13.830 --> 00:02:15.253\nthis is exposed to the Internet.\n\n42\n00:02:15.253 --> 00:02:18.980\n&gt;&gt; So it's like a virtual side barrier\n[LAUGH] You just kinda broke down\n\n43\n00:02:18.980 --> 00:02:22.110\nwhat chroot is but\ncan you get to define it even further,\n\n44\n00:02:22.110 --> 00:02:24.345\nlet's know a little bit more about it?\n\n45\n00:02:24.345 --> 00:02:28.234\n&gt;&gt; Yeah, one thing I run into from\na lot of users is that they confuse\n\n46\n00:02:28.234 --> 00:02:32.643\nwith chroot like, how is this\ndifferent than virtualization, right?\n\n47\n00:02:32.643 --> 00:02:36.070\nIf I do virtualization,\nI have one laptop in front of me.\n\n48\n00:02:36.070 --> 00:02:38.216\nAnd I'm running VMware workstation on it.\n\n49\n00:02:38.216 --> 00:02:43.155\nAnd so I can create five different\nLinux VMs, one running MariaDB,\n\n50\n00:02:43.155 --> 00:02:45.660\none running Apache and so on.\n\n51\n00:02:45.660 --> 00:02:47.883\nAnd they're isolated and\nseparate aren't they?\n\n52\n00:02:47.883 --> 00:02:51.561\nOkay, well that sounds like what I just\ndescribed a moment ago, the thing is,\n\n53\n00:02:51.561 --> 00:02:54.256\nwhen you virtualize,\nyou're virtualizing hardware.\n\n54\n00:02:54.256 --> 00:02:59.340\nYou're creating a fake processor, fake\nmemory, fake disk, fake network adapter.\n\n55\n00:02:59.340 --> 00:03:02.122\nAnd the Virtual Machines have\nto talk to that fake equipment.\n\n56\n00:03:02.122 --> 00:03:05.697\nNow in the olden days,\nthe older hypervisors that we used were\n\n57\n00:03:05.697 --> 00:03:09.980\ncalled type 2 hypervisors,\ndid all this conversion stuff in software.\n\n58\n00:03:09.980 --> 00:03:11.241\nSo their performance was garbage.\n\n59\n00:03:11.241 --> 00:03:14.950\nBut in the newer days,\nour type 1 hypervisors,\n\n60\n00:03:14.950 --> 00:03:17.400\nthey do this stuff in hardware.\n\n61\n00:03:17.400 --> 00:03:20.612\nWe have virtualization extensions in\nour processors to speed things up,\n\n62\n00:03:20.612 --> 00:03:21.662\nmake it go a lot faster.\n\n63\n00:03:21.662 --> 00:03:24.490\nSo we get really good\nperformance out of it, but\n\n64\n00:03:24.490 --> 00:03:27.610\nit's still an extra layer of complexity.\n\n65\n00:03:27.610 --> 00:03:33.891\nIf I'm running CentOS 7 on my laptop, and\nI create five CentOS 7 Virtual Machines,\n\n66\n00:03:33.891 --> 00:03:37.992\nthen I've actually got six\nCentOS 7 kernels running,\n\n67\n00:03:37.992 --> 00:03:42.024\nsix complete copies of\nthe operating system running.\n\n68\n00:03:42.024 --> 00:03:45.175\nAnd then yeah I got MariaDB on one and\nI've got Apache on another.\n\n69\n00:03:45.175 --> 00:03:48.399\nBut there's a huge amount of\nduplication between them and\n\n70\n00:03:48.399 --> 00:03:51.080\nthat's eating up system resources.\n\n71\n00:03:51.080 --> 00:03:53.813\nWith a chroot jail what we do is we say,\nyou know,\n\n72\n00:03:53.813 --> 00:03:58.165\nwhat I don't need a virtual network\ncard or a virtual processor or whatever.\n\n73\n00:03:58.165 --> 00:04:02.780\nThis stuff can all run in together right\nhere on my one installation I just want\n\n74\n00:04:02.780 --> 00:04:04.910\nto separate them and isolate them.\n\n75\n00:04:04.910 --> 00:04:08.535\nAnd so with chroot we don't\nvirtualize anything except for\n\n76\n00:04:08.535 --> 00:04:10.574\nwhat the file system looks like.\n\n77\n00:04:10.574 --> 00:04:13.350\nSo everybody sees the same processor.\n\n78\n00:04:13.350 --> 00:04:14.982\nEverybody sees the same memory.\n\n79\n00:04:14.982 --> 00:04:19.074\nAnd they're acting at bare metal speed\nbecause they're literally running on\n\n80\n00:04:19.074 --> 00:04:19.950\nthe bare metal.\n\n81\n00:04:19.950 --> 00:04:22.061\nThis is not virtualized at all.\n\n82\n00:04:22.061 --> 00:04:24.604\nBut when they look at the file system,\n\n83\n00:04:24.604 --> 00:04:28.272\nthey see a different file\nsystem than everybody else.\n\n84\n00:04:28.272 --> 00:04:33.266\nWe control what they see we're changing\nthe root of their file system.\n\n85\n00:04:33.266 --> 00:04:37.355\nYou normally, like here on my machine,\nif I browse to slash, the root folder and\n\n86\n00:04:37.355 --> 00:04:40.801\nI take a look at what's in there,\nit will search the stuff, right?\n\n87\n00:04:40.801 --> 00:04:45.810\nYou got /bin, /dev, /home and\nall these other things, right?\n\n88\n00:04:45.810 --> 00:04:47.738\nI see the whole filing system but\n\n89\n00:04:47.738 --> 00:04:51.532\nwith chroot we can show them\nsomething completely different.\n\n90\n00:04:51.532 --> 00:04:54.500\nI don't have to show them the actual root.\n\n91\n00:04:54.500 --> 00:04:57.702\nI can take a folder like /var/www,\n\n92\n00:04:57.702 --> 00:05:03.390\nwhere Apache lives,\nI can tell it that this was the root.\n\n93\n00:05:03.390 --> 00:05:07.030\nAll it would see, if it went to slash,\nit would just see a CGI bin folder and\n\n94\n00:05:07.030 --> 00:05:08.035\nHTML folder ant that's it.\n\n95\n00:05:08.035 --> 00:05:12.609\nIt wouldn't see anything else and there'd\nbe no way to escape the jail to get out of\n\n96\n00:05:12.609 --> 00:05:17.072\nit into the rest of the file system is now\nisolated and partitioned to this area.\n\n97\n00:05:17.072 --> 00:05:20.405\nAnd that's a great way to kind\nof compartmentalize things\n\n98\n00:05:20.405 --> 00:05:22.723\nwithout the burden of virtualization.\n\n99\n00:05:22.723 --> 00:05:26.043\nAnd I'll tell you right now, right here in\nthe first five minutes of this episode,\n\n100\n00:05:26.043 --> 00:05:27.192\nvirtualization is easier.\n\n101\n00:05:27.192 --> 00:05:29.975\nIt's a heck of a lot\neasier than chroot jail.\n\n102\n00:05:29.975 --> 00:05:34.533\nAll right, but\nchroot jails are a lot more efficient.\n\n103\n00:05:34.533 --> 00:05:37.774\nYou'll get better performance out of\na system if you're just jailing your\n\n104\n00:05:37.774 --> 00:05:40.914\napplications as opposed to actually\ncreating a virtual infrastructure\n\n105\n00:05:40.914 --> 00:05:41.810\naround it.\n\n106\n00:05:41.810 --> 00:05:46.250\nNow, there are a few other technologies\nout there that we'll talk about in another\n\n107\n00:05:46.250 --> 00:05:49.311\nepisode like container technologies,\nLXC and Docker.\n\n108\n00:05:49.311 --> 00:05:51.110\nThey're kind of in-between.\n\n109\n00:05:51.110 --> 00:05:54.764\nThey sit in between a chroot jail,\nand virtualization.\n\n110\n00:05:54.764 --> 00:05:58.865\nAnd in my opinion, containers\nare really the best way to do this.\n\n111\n00:05:58.865 --> 00:06:03.129\nchroot is the most efficient,\nVirtual Machines are the easiest,\n\n112\n00:06:03.129 --> 00:06:05.500\ncontainers are right in-between.\n\n113\n00:06:05.500 --> 00:06:08.543\nThey're a good mix of efficiency and\nease of use.\n\n114\n00:06:08.543 --> 00:06:09.501\nAnd that'll give us that.\n\n115\n00:06:09.501 --> 00:06:11.196\nSo we're gonna see containers\nin another episode.\n\n116\n00:06:11.196 --> 00:06:14.152\nBut in this episode I want to\nmake sure I show you guys chroot.\n\n117\n00:06:14.152 --> 00:06:18.040\nAnd the main reason is well I might not\nhave it as my go to solution anymore,\n\n118\n00:06:18.040 --> 00:06:20.513\nthere was a time where it\nwas my go to solution.\n\n119\n00:06:20.513 --> 00:06:24.662\nAnd that means there are plenty of\ndeployments out there in the real world\n\n120\n00:06:24.662 --> 00:06:27.060\nwhere chroot is already being used.\n\n121\n00:06:27.060 --> 00:06:30.335\nAnd that means you may need to support\nit to help maintain the security of\n\n122\n00:06:30.335 --> 00:06:31.053\napplication.\n\n123\n00:06:31.053 --> 00:06:35.751\nSo, that's kind of what we need to\nknow about chroot and what it is and\n\n124\n00:06:35.751 --> 00:06:41.104\nwhat it does and kinda help avoid some\nof that confusion with virtualization.\n\n125\n00:06:41.104 --> 00:06:44.353\n&gt;&gt; So in the real world,\nwhat are some of the uses for it?\n\n126\n00:06:44.353 --> 00:06:47.182\n&gt;&gt; Well, I gave you the example\nof a database server, right?\n\n127\n00:06:47.182 --> 00:06:50.384\nOr a web server,\nweb servers get compromised all the time.\n\n128\n00:06:50.384 --> 00:06:54.202\nAnd if they get compromised, and the web\nserver service or demon has access to\n\n129\n00:06:54.202 --> 00:06:58.890\nthe whole file system, now the attacker\nhas access to the whole file system.\n\n130\n00:06:58.890 --> 00:07:01.265\nBut if they only had access to\na small part of the file system,\n\n131\n00:07:01.265 --> 00:07:03.143\nthat would minimize\nthe impact of that attack.\n\n132\n00:07:03.143 --> 00:07:04.790\nSo those are some examples right there.\n\n133\n00:07:04.790 --> 00:07:06.146\nWe can even go further.\n\n134\n00:07:06.146 --> 00:07:08.712\nFor example, you might have and\nSFTP server.\n\n135\n00:07:08.712 --> 00:07:12.032\nWith SFTP, people connect, and\nthey now see the file systems so\n\n136\n00:07:12.032 --> 00:07:13.952\nthey can upload and download files.\n\n137\n00:07:13.952 --> 00:07:16.642\nI can use chroot to change what they see.\n\n138\n00:07:16.642 --> 00:07:19.895\nWhen they SFTP in, now maybe they only\nsee their home folder, and that's it.\n\n139\n00:07:19.895 --> 00:07:21.172\nThey don't see anything else.\n\n140\n00:07:21.172 --> 00:07:22.942\nI can manage that with permissions.\n\n141\n00:07:22.942 --> 00:07:27.703\nBut with permissions, somebody could find\nan exploit, elevate their privileges to\n\n142\n00:07:27.703 --> 00:07:31.553\nlike a root user account, and\npotentially bypass the permissions.\n\n143\n00:07:31.553 --> 00:07:34.470\nWith a chroot jail, you can't do that.\n\n144\n00:07:34.470 --> 00:07:39.072\nIf you're in the jail, and you elevate\nyour privileges to root you still just see\n\n145\n00:07:39.072 --> 00:07:42.062\nthe jail cell, so\nsee the walls that we put in place.\n\n146\n00:07:42.062 --> 00:07:43.384\nYou can't see beyond it,\n\n147\n00:07:43.384 --> 00:07:47.820\nthere's no practical way to escape that\njail once you're inside of it already.\n\n148\n00:07:47.820 --> 00:07:54.292\nSo, we can use SFTP or other services to\ncreate that boundary to lock people in.\n\n149\n00:07:54.292 --> 00:07:56.616\nYou can really use it for\nnumber of different things.\n\n150\n00:07:56.616 --> 00:08:04.420\nNow, quick word of caution about using\nthis Chroot, is not for everybody.\n\n151\n00:08:04.420 --> 00:08:07.496\nAnd usually your application\nhas to support it.\n\n152\n00:08:07.496 --> 00:08:14.620\nFor example, Apache, the SSHD Daemon, a\nlot of the database services like MariaDB,\n\n153\n00:08:14.620 --> 00:08:19.121\nthey have support for\nbeing CHrooted built in, okay.\n\n154\n00:08:19.121 --> 00:08:20.625\nSome applications don't.\n\n155\n00:08:20.625 --> 00:08:25.772\nAnd if they don't have support for being\nCHrooted built in, then they're really\n\n156\n00:08:25.772 --> 00:08:30.707\ntricky to put in a jail, and I'll show\nyou why, when we go and jail something.\n\n157\n00:08:30.707 --> 00:08:34.493\nOne of the things you have to do is\nthey don't see the whole file system, so\n\n158\n00:08:34.493 --> 00:08:38.342\nany dependencies they have, any files or\nfolders they expect to be there,\n\n159\n00:08:38.342 --> 00:08:42.830\nwe have to recreate inside of the jail,\notherwise the application is broken.\n\n160\n00:08:42.830 --> 00:08:44.560\nAnd if the application doesn't\nhave direct support for\n\n161\n00:08:44.560 --> 00:08:47.730\nit, then there's not going to be\ngood documentation on what all those\n\n162\n00:08:47.730 --> 00:08:50.740\ndependencies are, and\nthat can be a battle right there.\n\n163\n00:08:50.740 --> 00:08:55.540\nIf you have no good documentation, trying\nto figure out what to put into the a jail\n\n164\n00:08:55.540 --> 00:09:00.192\ncan take days, weeks, months sometimes,\nto get it working properly and stablely.\n\n165\n00:09:00.192 --> 00:09:03.190\nSo that's be a bit of a challenge,\nso be aware of that.\n\n166\n00:09:03.190 --> 00:09:06.620\nIf you're dealing with containers or\nyour dealing with virtual machines,\n\n167\n00:09:06.620 --> 00:09:08.710\ndependencies aren't\na problem the same way.\n\n168\n00:09:08.710 --> 00:09:12.610\nBut in chroot,\nthere is no way to escape the jail so,\n\n169\n00:09:12.610 --> 00:09:15.285\nwe can only see what's in the jail and\n\n170\n00:09:15.285 --> 00:09:18.360\nwe've got make sure we take care of those\ndependencies, that's a bit of a challenge.\n\n171\n00:09:18.360 --> 00:09:22.100\nBut the main use for chroot, is really\nanytime we have an application we wanna\n\n172\n00:09:22.100 --> 00:09:25.990\nisolate from the rest of our server, and\nfrom the other applications on the server.\n\n173\n00:09:25.990 --> 00:09:29.170\nWe can leverage a jail like this,\nand take advantage of it.\n\n174\n00:09:29.170 --> 00:09:31.320\n&gt;&gt; So\nwe can use chroot to create a honey pot.\n\n175\n00:09:32.390 --> 00:09:35.020\n&gt;&gt; Yeah, yeah, I've seen a lot\nof people where they do that,\n\n176\n00:09:35.020 --> 00:09:40.760\nwhere you create a jailed service that's\nintentionally configured weekly, right?\n\n177\n00:09:40.760 --> 00:09:43.910\nThat maybe has weak passwords\nassigned to it or something, right?\n\n178\n00:09:43.910 --> 00:09:49.279\nI might jail a telnet server and\npeople know that Telnet is unsecured and\n\n179\n00:09:49.279 --> 00:09:51.620\nso they try and compromise it.\n\n180\n00:09:51.620 --> 00:09:54.298\nAnd if I've jailed them,\nI know I'm not at risk, right cuz\n\n181\n00:09:54.298 --> 00:09:57.962\nthey're kind of locked in this little jail\nand mean time, I can have log in turn.\n\n182\n00:09:57.962 --> 00:10:01.500\nI actually saw a neat system a few years\na back where a guy had written it.\n\n183\n00:10:01.500 --> 00:10:04.200\nHe created a jail, it was configured weak.\n\n184\n00:10:04.200 --> 00:10:07.040\nAnd none of its regular users\nshould ever hit that system.\n\n185\n00:10:07.040 --> 00:10:12.110\nSo he knew that anyone who hit that\njail was there for malicious reasons.\n\n186\n00:10:12.110 --> 00:10:16.880\nAnd he had auditing turned on, the back\nend system, so that anytime he saw access,\n\n187\n00:10:16.880 --> 00:10:20.700\nhe could take the IP the access was coming\nfrom, send it up to the firewall and\n\n188\n00:10:20.700 --> 00:10:21.900\nimmediately block it.\n\n189\n00:10:21.900 --> 00:10:23.740\nAnd so just the moment\nsomebody touched that jail,\n\n190\n00:10:23.740 --> 00:10:25.420\nthey were immediately cut\noff from the network.\n\n191\n00:10:25.420 --> 00:10:26.270\nAnd you can do that, and\n\n192\n00:10:26.270 --> 00:10:30.570\nit's safe because the jail has no\nreal data inside of it, right?\n\n193\n00:10:30.570 --> 00:10:33.990\nSo you're basically building a honeypot\nsystem by using a chroot jail.\n\n194\n00:10:33.990 --> 00:10:35.870\nIt's not that hard to do.\n\n195\n00:10:35.870 --> 00:10:37.568\nThere are other systems\nout there that do it.\n\n196\n00:10:37.568 --> 00:10:40.420\nThere's third party systems, but you can\nbuild it right inside a chroot, it's very,\n\n197\n00:10:40.420 --> 00:10:41.760\nvery flexible stuff.\n\n198\n00:10:41.760 --> 00:10:47.930\n&gt;&gt; So again, or leading into, can we put\nanything we want into a chroot jail?\n\n199\n00:10:47.930 --> 00:10:49.010\n&gt;&gt; Just about anything.\n\n200\n00:10:49.010 --> 00:10:52.620\nLike I said, the dependencies\nare the real challenge, right?\n\n201\n00:10:52.620 --> 00:10:55.310\nAs long as our service supports it,\nyou can dump it right in.\n\n202\n00:10:55.310 --> 00:10:56.635\nAnd it'll be easy peasy.\n\n203\n00:10:56.635 --> 00:10:58.850\n[LAUGH] And you'll be up and\nrunning in no time.\n\n204\n00:10:58.850 --> 00:10:59.961\n&gt;&gt; You can put peas in it?\n\n205\n00:10:59.961 --> 00:11:04.926\n[LAUGH] Well, dessert, there's a prison\nfood joke here somewhere, but [LAUGH].\n\n206\n00:11:04.926 --> 00:11:08.789\n&gt;&gt; Keep going.\n&gt;&gt; So yeah, we can kinda do that.\n\n207\n00:11:08.789 --> 00:11:11.664\nBut it really does just take a little bit\nof work to make sure that everything's\n\n208\n00:11:11.664 --> 00:11:12.590\nfunctioning properly.\n\n209\n00:11:12.590 --> 00:11:13.810\n&gt;&gt; Right.\n&gt;&gt; And as long as your application has\n\n210\n00:11:13.810 --> 00:11:15.409\nsupport for it, you'll find\nit's really not that difficult.\n\n211\n00:11:16.710 --> 00:11:19.590\nAll right, so\nwith all that kind of out of the way,\n\n212\n00:11:19.590 --> 00:11:22.780\nlet's take a look at how we do this,\nright?.\n\n213\n00:11:22.780 --> 00:11:24.660\nAnd I wanna give you guys an example.\n\n214\n00:11:24.660 --> 00:11:26.700\nAnd I'm gonna use SSH, right?\n\n215\n00:11:26.700 --> 00:11:28.370\nLet's say that I've got a server.\n\n216\n00:11:28.370 --> 00:11:30.660\nAnd I want users to SSH into my server.\n\n217\n00:11:30.660 --> 00:11:33.560\nIt could be SFTP for that matter,\nbut I wanna do an actual shell so\n\n218\n00:11:33.560 --> 00:11:35.150\nyou guys can see this.\n\n219\n00:11:35.150 --> 00:11:37.010\nSo I want users to be\nto SSH into my server.\n\n220\n00:11:37.010 --> 00:11:40.480\nAnd when they do, maybe I've got\nsome utility I need them to run,\n\n221\n00:11:40.480 --> 00:11:41.990\nsome kind of script or whatever.\n\n222\n00:11:43.150 --> 00:11:45.510\nAnd so\nI want them to be able to connect in and\n\n223\n00:11:45.510 --> 00:11:50.080\nthen have access just to the commands\nthat I approve and that's it.\n\n224\n00:11:50.080 --> 00:11:54.190\nTo see this specialized version of the OS\nthat only has a certain subset of commands\n\n225\n00:11:54.190 --> 00:11:56.660\nand I control everything, right?\n\n226\n00:11:56.660 --> 00:11:58.790\nWell, we can get that set up, right?\n\n227\n00:11:58.790 --> 00:12:01.720\nThe first thing that we need to do\nis we need to build our jail, right?\n\n228\n00:12:01.720 --> 00:12:04.520\nYou don't have a jail by default,\nso you've gotta create one.\n\n229\n00:12:04.520 --> 00:12:08.300\nAnd the key thing to remember about this,\nthe one mistake that's easy to make,\n\n230\n00:12:08.300 --> 00:12:13.090\nis that in order for a jail to work,\nIt has to be owned by root.\n\n231\n00:12:13.090 --> 00:12:15.760\nIt doesn't matter who we're\nactually assigning the jail to.\n\n232\n00:12:15.760 --> 00:12:18.100\nThe jail itself has to be owned by root.\n\n233\n00:12:18.100 --> 00:12:21.170\nThat's how we're gonna prevent being\nable to escape the jail, right?\n\n234\n00:12:21.170 --> 00:12:23.250\nIt's gotta be owned by the root user,\nbecause, then,\n\n235\n00:12:23.250 --> 00:12:25.350\nregular users won't have access to it.\n\n236\n00:12:25.350 --> 00:12:27.142\nAnd that's what creates\nthat isolated environment.\n\n237\n00:12:27.142 --> 00:12:29.882\nSo I'm gonna take my machine.\n\n238\n00:12:29.882 --> 00:12:32.600\nAnd I'm going to do a sudo -s.\n\n239\n00:12:32.600 --> 00:12:35.650\nSo that I'm switching to a root shell so\nthat I won't forget.\n\n240\n00:12:35.650 --> 00:12:39.680\nEverything that I do is now gonna be done\nas the route user as I go and create this\n\n241\n00:12:39.680 --> 00:12:43.620\njail and that will help me to make sure\nthat all my permissions are set right.\n\n242\n00:12:43.620 --> 00:12:46.100\nOtherwise we're gonna worry\nabout permissions quite a bit.\n\n243\n00:12:46.100 --> 00:12:50.690\nSo I'm gonna come in here and\nI'm gonna create a jail for a,\n\n244\n00:12:50.690 --> 00:12:52.520\nmaybe it's a service, right?\n\n245\n00:12:52.520 --> 00:12:55.410\nSo I've got some service\nthat an SSH connection, and\n\n246\n00:12:55.410 --> 00:12:57.140\nthen it runs an application, right?\n\n247\n00:12:57.140 --> 00:12:59.062\nSo first thing I need,\nI need a user account for that service.\n\n248\n00:12:59.062 --> 00:13:02.630\nSo I'm gonna say userad,\nI'll just call it service1, right?\n\n249\n00:13:02.630 --> 00:13:04.590\nSo I'm creating an account, for service1.\n\n250\n00:13:04.590 --> 00:13:08.960\nI need a password for it, so\nI'll do passwd service1 and\n\n251\n00:13:08.960 --> 00:13:10.930\nI'll give it a password.\n\n252\n00:13:10.930 --> 00:13:13.560\nAll right, so with that set, there we go.\n\n253\n00:13:13.560 --> 00:13:16.520\nAll right, so now I've got a user\naccount with the service to use.\n\n254\n00:13:16.520 --> 00:13:18.220\nNow, if SSH is enabled,\n\n255\n00:13:18.220 --> 00:13:22.650\nwhich it is on my system, then they can\nSSH in right now, and what'll they get?\n\n256\n00:13:22.650 --> 00:13:25.860\nThey'll get a bash cell and they'll\nget access to their home directory,\n\n257\n00:13:25.860 --> 00:13:29.240\nand they can even browse outside\nof that home directory, right?\n\n258\n00:13:29.240 --> 00:13:30.720\nSo if I were to test that out, so\n\n259\n00:13:30.720 --> 00:13:36.790\nI'm gonna log in as serviceone@ I'll\njust point to the loop back here.\n\n260\n00:13:36.790 --> 00:13:42.296\nSo, I'm gonna SSH into my own system, and\nwhen I do that, oops if I type it right,\n\n261\n00:13:42.296 --> 00:13:48.590\nI can SSH in, I'm logging in\nas service one, and here I am.\n\n262\n00:13:48.590 --> 00:13:51.730\nAnd I'm in slash home,\nslash service one, right?\n\n263\n00:13:51.730 --> 00:13:53.200\nAnd I can run whatever command I want.\n\n264\n00:13:53.200 --> 00:13:54.060\nI can run uname- a.\n\n265\n00:13:54.060 --> 00:13:56.450\nNow I know what kernel\nversion we're running.\n\n266\n00:13:56.450 --> 00:14:00.350\nI can browse to root, and\nI see all the folders that are there.\n\n267\n00:14:00.350 --> 00:14:03.470\nI can go into website, and\nI can see these website files.\n\n268\n00:14:03.470 --> 00:14:05.100\nThese are files I don't need access to.\n\n269\n00:14:05.100 --> 00:14:08.330\nBut a regular user has access to\nquite a bit of the file system.\n\n270\n00:14:08.330 --> 00:14:12.130\nWe can go into /etc and\nstart looking at config files.\n\n271\n00:14:12.130 --> 00:14:14.620\nNot all of them, but a lot of them.\n\n272\n00:14:14.620 --> 00:14:17.910\nWe can go into /var, /log and\nstart looking at logs.\n\n273\n00:14:17.910 --> 00:14:18.880\nNot all of them, right?\n\n274\n00:14:18.880 --> 00:14:21.790\nIf I try and look at the messages log,\nI get permission denied.\n\n275\n00:14:21.790 --> 00:14:25.580\nBut I can start to see where things\nare and I can start planning an attack.\n\n276\n00:14:25.580 --> 00:14:28.350\nThat's what a user can do,\nthey can start looking for holes.\n\n277\n00:14:28.350 --> 00:14:29.830\nHow can I break through this?\n\n278\n00:14:29.830 --> 00:14:31.650\nHow can I get around this permission?\n\n279\n00:14:31.650 --> 00:14:33.940\nLet's figure out what we can\nabout the system, right?\n\n280\n00:14:33.940 --> 00:14:35.550\nSo that's what I wanna prevent.\n\n281\n00:14:35.550 --> 00:14:37.140\nI'm logged out as service 1 now.\n\n282\n00:14:37.140 --> 00:14:39.600\nSo, I wanna take that service 1 user and\nI wanna jail that.\n\n283\n00:14:39.600 --> 00:14:41.760\nI wanna really restrict them down, okay.\n\n284\n00:14:41.760 --> 00:14:46.200\nso, I'm gonna create a directory and\nthat jail is going to be stored\n\n285\n00:14:46.200 --> 00:14:50.050\nin folder somewhere it's going\nto be owned by root, okay?\n\n286\n00:14:50.050 --> 00:14:54.010\nNow, I'm gonna create all new folder\nthat's gonna be called /jail.\n\n287\n00:14:54.010 --> 00:14:56.510\nAnd in that folder,\nI'll create another one called service 1.\n\n288\n00:14:56.510 --> 00:14:58.530\nI may have more than one jail.\n\n289\n00:14:58.530 --> 00:15:00.310\nI may have other services I wanna jail to.\n\n290\n00:15:00.310 --> 00:15:03.510\nSo I'm creating a jail folder to put\nall this in, and then just a folder for\n\n291\n00:15:03.510 --> 00:15:04.910\neach user that I'm gonna be jailing.\n\n292\n00:15:04.910 --> 00:15:06.570\nIn this case service 1, right?\n\n293\n00:15:06.570 --> 00:15:10.300\nThe jail folder doesn't exist yet,\nso let me just add a /p so\n\n294\n00:15:10.300 --> 00:15:13.410\nI can create that and\nget that kinda put in place.\n\n295\n00:15:13.410 --> 00:15:14.970\nAnd I'm not gonna stop there.\n\n296\n00:15:14.970 --> 00:15:17.630\nWhen a user logs in,\nwhat folder do they default to?\n\n297\n00:15:17.630 --> 00:15:20.130\nThey default to their home folder.\n\n298\n00:15:20.130 --> 00:15:27.160\nSo, when they log in, they're gonna see\n/jail/service1 as their root, as slash.\n\n299\n00:15:27.160 --> 00:15:32.000\nSo they're gonna expect\n/home/service1 to exist.\n\n300\n00:15:32.000 --> 00:15:38.080\nSo I'm gonna create that whole structure\nright there, /jail/service1/home/service1.\n\n301\n00:15:38.080 --> 00:15:39.318\nAnd we'll get that created.\n\n302\n00:15:39.318 --> 00:15:40.690\nSo that's gonna be in place and\n\n303\n00:15:40.690 --> 00:15:43.680\nwhen the user logs in,\nthey'll have a home directory.\n\n304\n00:15:43.680 --> 00:15:47.926\nSo, for them,\nif they go in to /jail/service1,\n\n305\n00:15:47.926 --> 00:15:51.982\nthis is gonna be the folder\nthey see as their root.\n\n306\n00:15:51.982 --> 00:15:55.196\nAnd there's a Home folder and\nthey'll see in there their service1.\n\n307\n00:15:55.196 --> 00:15:56.408\nThey won't see any other users.\n\n308\n00:15:56.408 --> 00:15:58.688\nThey'll just see that.\n\n309\n00:15:58.688 --> 00:16:02.151\nThat's what they're going to see,\nSo I've got that jail created.\n\n310\n00:16:02.151 --> 00:16:07.170\nAnd then if they're seeing, oops, there.\n\n311\n00:16:07.170 --> 00:16:09.240\nIf they're seeing\n/jail/service1 as their root,\n\n312\n00:16:09.240 --> 00:16:13.030\nthere's some other folders they're\ngonna expect to see, right?\n\n313\n00:16:13.030 --> 00:16:15.890\nWhen you log into a Linux system there's\na number of folders that you expect to\n\n314\n00:16:15.890 --> 00:16:18.800\nbe there, that have the commands and\nthings like that that you wanna run.\n\n315\n00:16:18.800 --> 00:16:20.270\nSo I need to make those.\n\n316\n00:16:20.270 --> 00:16:24.030\nSo I'm gonna do a make directory and\nI'm gonna create dev, etc,\n\n317\n00:16:24.030 --> 00:16:28.400\nwe'll do bin, lib64, right?\n\n318\n00:16:28.400 --> 00:16:31.920\nAny other folders that their\napplications might need.\n\n319\n00:16:31.920 --> 00:16:34.110\nThis is where we get to dependencies,\nright?\n\n320\n00:16:34.110 --> 00:16:38.660\nWhen an application runs, it's expecting\nthings to be in a certain place.\n\n321\n00:16:38.660 --> 00:16:40.630\nAnd those things don't exist\nin the jail by default.\n\n322\n00:16:40.630 --> 00:16:41.920\nSo I've gotta make them.\n\n323\n00:16:41.920 --> 00:16:43.980\nSo I'm making these folders.\n\n324\n00:16:43.980 --> 00:16:49.215\nSo now when I look inside of the jail,\ninside of /jail/service1,\n\n325\n00:16:49.215 --> 00:16:52.295\nI see bin, dev, etc, home, lib64.\n\n326\n00:16:52.295 --> 00:16:54.320\nThey're all empty but I see them.\n\n327\n00:16:54.320 --> 00:16:58.310\nI'm starting to create that structure that\nthe Linux OS would normally create for\n\n328\n00:16:58.310 --> 00:16:59.500\nme during the install.\n\n329\n00:17:00.560 --> 00:17:04.170\nAnd now that I've got that,\neverything is good so far.\n\n330\n00:17:04.170 --> 00:17:06.770\nAnd everything I've been doing\nI've been doing as the root user.\n\n331\n00:17:06.770 --> 00:17:09.390\nSo I don't have to worry about\nthe permissions but let's just pretend for\n\n332\n00:17:09.390 --> 00:17:14.110\na second that I wasn't logged in as root\nthat I do have to worry about permissions.\n\n333\n00:17:14.110 --> 00:17:17.310\nWhat we normally do on this\nis we change the ownership.\n\n334\n00:17:18.350 --> 00:17:22.822\nAnd we change the ownership\nto be the root user, and\n\n335\n00:17:22.822 --> 00:17:26.366\nthe root group for /jail/service1.\n\n336\n00:17:26.366 --> 00:17:29.002\nOkay, that's what I need\nthat ownership to be.\n\n337\n00:17:29.002 --> 00:17:31.743\nAnd I don't technically need to worry\nabout it because I was the root user when\n\n338\n00:17:31.743 --> 00:17:32.300\nI did all this.\n\n339\n00:17:32.300 --> 00:17:33.950\nSo, it was already kinda set that way.\n\n340\n00:17:33.950 --> 00:17:36.560\nIf I take a look at the default\npermissions that are in there,\n\n341\n00:17:36.560 --> 00:17:40.510\nit was already owned by root\nas the user and the group.\n\n342\n00:17:40.510 --> 00:17:43.240\nAgain, if you're in a root shell\nyou don't have to worry about it.\n\n343\n00:17:43.240 --> 00:17:44.609\nYou can do the same thing\nwith the permissions.\n\n344\n00:17:44.609 --> 00:17:49.430\nI wanna make sure that the root user has\nthe full permissions on this folder.\n\n345\n00:17:49.430 --> 00:17:53.938\nSo, we might do a chmod\n755 against that folder.\n\n346\n00:17:53.938 --> 00:17:57.165\nAnd again, that's the default on the\nsystem, so I don't have to worry about it.\n\n347\n00:17:57.165 --> 00:17:59.305\nBut just for your own reference,\nif you're setting this up,\n\n348\n00:17:59.305 --> 00:18:02.525\nand you need to worry about permissions,\nthat's what you wanna set.\n\n349\n00:18:02.525 --> 00:18:04.185\nSo I'm good there.\n\n350\n00:18:04.185 --> 00:18:06.415\nAll right, now things get a little tricky.\n\n351\n00:18:06.415 --> 00:18:08.765\nNow it comes into\nthe world of dependencies.\n\n352\n00:18:08.765 --> 00:18:11.700\nIf I'll have somebody\nwho's gonna be SSHing in.\n\n353\n00:18:11.700 --> 00:18:13.570\nWhat do they need for us to SSH to work?\n\n354\n00:18:13.570 --> 00:18:14.870\nWhat commands do they have to have?\n\n355\n00:18:14.870 --> 00:18:16.310\nWhat has to function?\n\n356\n00:18:16.310 --> 00:18:18.750\nWell, there's certain things they need.\n\n357\n00:18:18.750 --> 00:18:21.600\nSo for example, the depth folder.\n\n358\n00:18:23.120 --> 00:18:27.530\nIf I get into /jail//service1/death,\nright?\n\n359\n00:18:27.530 --> 00:18:29.875\nFor them, they'll see this as /death.\n\n360\n00:18:29.875 --> 00:18:32.416\nAnd in /dev we're supposed to\nhave all of our devices, right,\n\n361\n00:18:32.416 --> 00:18:34.440\nall of the devices they interact with.\n\n362\n00:18:34.440 --> 00:18:37.820\nWell if they're SSHing in,\nthey actually do interact with the device.\n\n363\n00:18:37.820 --> 00:18:39.490\nThey interact with a tty.\n\n364\n00:18:39.490 --> 00:18:40.940\nThey expect that to be there.\n\n365\n00:18:40.940 --> 00:18:44.100\nWell mine is empty,\nthere's nothing in there.\n\n366\n00:18:44.100 --> 00:18:47.120\nSo I need to create a couple of virtual\nplaceholders for those devices,\n\n367\n00:18:47.120 --> 00:18:48.980\notherwise SSH gets really unhappy.\n\n368\n00:18:48.980 --> 00:18:51.740\nIf I was doing MariaDB,\nI would need this, right?\n\n369\n00:18:51.740 --> 00:18:53.270\nBut I'm doing SSH, so I need it.\n\n370\n00:18:53.270 --> 00:18:55.410\nSo figuring out\nthe dependencies is tricky.\n\n371\n00:18:55.410 --> 00:18:59.760\nIf you read the SSHD documentation though,\nit tells you what devices they need.\n\n372\n00:18:59.760 --> 00:19:04.660\nAnd what you can do is you can look\nat your actual /dev and you can find\n\n373\n00:19:04.660 --> 00:19:08.720\nthe devices and you can get all the\ninformation you need from right from here.\n\n374\n00:19:08.720 --> 00:19:13.590\nThe information that we need is the name\nof the device and we need these two\n\n375\n00:19:13.590 --> 00:19:18.760\nnumbers right here, which is setting\nthe major and minor properties.\n\n376\n00:19:18.760 --> 00:19:22.588\nEach of these have completely different\nmeanings depending on what the devices\n\n377\n00:19:22.588 --> 00:19:26.353\nare, so it's usually just easiest to come\nin here and find out what they are and\n\n378\n00:19:26.353 --> 00:19:27.172\nrecreate them.\n\n379\n00:19:27.172 --> 00:19:31.100\nAnd SSHD actually needs four devices, so\nI'm gonna come in here and create these.\n\n380\n00:19:31.100 --> 00:19:34.239\nTo create them,\nwe use the mknod command, M-K-N-O-D.\n\n381\n00:19:34.239 --> 00:19:39.630\nSo I'm gonna say mknod -m,\nwhich is gonna set the permissions.\n\n382\n00:19:39.630 --> 00:19:44.700\nAnd I want the permissions to be 666,\nwhich sounds a little demonic.\n\n383\n00:19:44.700 --> 00:19:45.350\n&gt;&gt; Interesting.\n\n384\n00:19:45.350 --> 00:19:49.610\n&gt;&gt; But it's basically read and write for\nthe user, the group, and the owner.\n\n385\n00:19:49.610 --> 00:19:52.980\nSo I'm not actually granting execute,\nbecause you don't execute a device.\n\n386\n00:19:52.980 --> 00:19:55.310\nYou listen to a device and\nyou talk to a device.\n\n387\n00:19:55.310 --> 00:19:56.970\nYou read and write to the device.\n\n388\n00:19:56.970 --> 00:19:58.361\nSo I'm giving them access.\n\n389\n00:19:58.361 --> 00:20:00.402\nAnd I'm being heavy handed\nwith the permissions,\n\n390\n00:20:00.402 --> 00:20:03.340\nI'm giving them a lot of permissions,\nis that a problem?\n\n391\n00:20:03.340 --> 00:20:03.930\nNo.\n\n392\n00:20:03.930 --> 00:20:05.222\nCuz they're in a jail, right?\n\n393\n00:20:05.222 --> 00:20:06.585\nThey're stuck in that jail, so\n\n394\n00:20:06.585 --> 00:20:09.966\nI don't really care what they do in there\nas far as reaching out to this device cuz\n\n395\n00:20:09.966 --> 00:20:12.920\nit's technically different\nthan the actual device.\n\n396\n00:20:12.920 --> 00:20:17.281\nBut I'm gonna do that for\n/jail/service1/dev and\n\n397\n00:20:17.281 --> 00:20:20.350\nthen I need to create null as one\nof the devices that are required.\n\n398\n00:20:20.350 --> 00:20:25.900\nAnd if I look up here at null,\nthe actual /dev/null if I find it up here.\n\n399\n00:20:25.900 --> 00:20:28.330\nI can see where it's got 1,3.\n\n400\n00:20:28.330 --> 00:20:32.350\nAnd so when I go to create it here,\nI just do c 1 3, right?\n\n401\n00:20:32.350 --> 00:20:33.571\nI provide that value.\n\n402\n00:20:33.571 --> 00:20:35.410\nAnd so that's where I'm\ngetting that information from.\n\n403\n00:20:35.410 --> 00:20:37.844\nAnd then I'll go through and I'll\ncreate the other four, I need the tty.\n\n404\n00:20:37.844 --> 00:20:40.750\nObviously this whole thing is tty driven.\n\n405\n00:20:40.750 --> 00:20:44.016\nI need, let's see what else, 0.\n\n406\n00:20:44.016 --> 00:20:50.692\nAnd 0 would be 1, 5 and\nthen we need random, /dev/random.\n\n407\n00:20:50.692 --> 00:20:53.351\nAnd so I'll punch that one in, 1, 8.\n\n408\n00:20:53.351 --> 00:20:55.620\nOkay, now I don't have those memorized.\n\n409\n00:20:55.620 --> 00:20:57.456\nI have them written on a piece\nof paper here beside me.\n\n410\n00:20:57.456 --> 00:21:00.610\nThat's part of the whole process; you\ngotta do your research on what you're\n\n411\n00:21:00.610 --> 00:21:03.046\ngonna be jailing, and\nget that information ahead of time.\n\n412\n00:21:03.046 --> 00:21:05.830\nSo that's part of what we need.\n\n413\n00:21:05.830 --> 00:21:08.361\nNext we might need things\nlike basic config files.\n\n414\n00:21:08.361 --> 00:21:13.263\nWhen a user logs in, they read a .profile\nfile and that sets the path and\n\n415\n00:21:13.263 --> 00:21:14.990\nother things like that.\n\n416\n00:21:14.990 --> 00:21:19.040\nSo I might wanna create a profile file for\nthis person.\n\n417\n00:21:19.040 --> 00:21:24.610\nSo I'm going to create that\nvariable where I'll set their path\n\n418\n00:21:24.610 --> 00:21:28.720\nand I'm gonna control exactly\nwhat binaries this person sees.\n\n419\n00:21:28.720 --> 00:21:31.700\nSo for their path I'm just gonna\nset it to /bin, and that's it.\n\n420\n00:21:31.700 --> 00:21:33.080\nI'm not gonna give them any other folders.\n\n421\n00:21:33.080 --> 00:21:35.100\nI'm gonna keep it really small.\n\n422\n00:21:35.100 --> 00:21:41.252\nAnd I'm gonna send that\ninto /jail/service1/home.\n\n423\n00:21:41.252 --> 00:21:43.380\nOops, and I'm typing, but there we go.\n\n424\n00:21:43.380 --> 00:21:45.465\nIt's typing but it wasn't appearing.\n\n425\n00:21:45.465 --> 00:21:51.080\n/jail/service1/home/service1/.profile,\nright?\n\n426\n00:21:51.080 --> 00:21:53.760\nAll right, this is something\nthat a user would expect to\n\n427\n00:21:53.760 --> 00:21:55.355\nhave in their home directory.\n\n428\n00:21:55.355 --> 00:21:56.720\n&gt;&gt; Mm-hm.\n&gt;&gt; So that it does things like\n\n429\n00:21:56.720 --> 00:21:57.580\nsetting that path.\n\n430\n00:21:57.580 --> 00:21:59.050\nSo I'll throw that over there.\n\n431\n00:21:59.050 --> 00:22:00.620\nSo that gets to put into there.\n\n432\n00:22:00.620 --> 00:22:02.490\nAnd then I'm gonna copy the applications.\n\n433\n00:22:02.490 --> 00:22:06.030\nWell I could put any\napplication I wanted into here.\n\n434\n00:22:06.030 --> 00:22:07.640\nI'm gonna do a couple of simple ones.\n\n435\n00:22:07.640 --> 00:22:11.900\nFirst off if they're SSHing in,\nthey need to run a shell.\n\n436\n00:22:11.900 --> 00:22:13.930\nAnd the default shell for\nthis user is bash.\n\n437\n00:22:13.930 --> 00:22:22.780\nSo I'm gonna copy /bin/bash\ninto /jail/service1/bin.\n\n438\n00:22:22.780 --> 00:22:24.950\nSo I'm gonna copy that right over.\n\n439\n00:22:24.950 --> 00:22:26.370\nAnd once they use bash,\n\n440\n00:22:26.370 --> 00:22:29.740\nthey get a shell, maybe I wanna give it\nanother command, like the ls command.\n\n441\n00:22:29.740 --> 00:22:30.990\nI'm gonna copy that over.\n\n442\n00:22:30.990 --> 00:22:33.160\nWhatever your application is,\nyou'd be copying it over.\n\n443\n00:22:33.160 --> 00:22:36.830\nWhat I want them to have access to,\nI'll copy it in here so\n\n444\n00:22:36.830 --> 00:22:39.130\nthey can run it inside of their jail.\n\n445\n00:22:39.130 --> 00:22:42.690\nI need to give them each of those little\npieces, so they'll have those programs.\n\n446\n00:22:42.690 --> 00:22:43.800\nIt'll be in their path.\n\n447\n00:22:43.800 --> 00:22:44.810\nThey'll be able to log in.\n\n448\n00:22:44.810 --> 00:22:45.970\nThey'll be able to run it.\n\n449\n00:22:45.970 --> 00:22:48.030\nAnd that’s all they'll be able to run.\n\n450\n00:22:48.030 --> 00:22:52.620\nBecause in their bin folder, they're only\nseeing the commands that we copied over.\n\n451\n00:22:52.620 --> 00:22:57.200\nA much smaller subset depending on\nwhat we wanna grant them access to.\n\n452\n00:22:57.200 --> 00:23:01.690\n&gt;&gt; So how do we know what dependencies\ngo along with the applications?\n\n453\n00:23:01.690 --> 00:23:02.760\n&gt;&gt; Again tricky so right, so.\n\n454\n00:23:02.760 --> 00:23:03.560\n&gt;&gt; Big question.\n\n455\n00:23:03.560 --> 00:23:06.290\n&gt;&gt; If I go and dig through\nthe documentation, that’s the best way.\n\n456\n00:23:06.290 --> 00:23:07.821\nYou can find the dependencies there.\n\n457\n00:23:07.821 --> 00:23:10.830\nIf you don't have time for that or\nyou just wanna take a quick stab at it.\n\n458\n00:23:10.830 --> 00:23:12.700\nYou can use the ldd command, right?\n\n459\n00:23:12.700 --> 00:23:15.963\nldd will show the libraries\nthat an application depends on.\n\n460\n00:23:15.963 --> 00:23:18.470\nSo I could say like, ldd/bin/bash and\n\n461\n00:23:18.470 --> 00:23:21.580\nit will give me a list of\nthings that it depends on.\n\n462\n00:23:21.580 --> 00:23:23.220\nI can do the same thing for\n\n463\n00:23:23.220 --> 00:23:28.390\nthe ls command, and each of these\nare libraries that I'm going to need.\n\n464\n00:23:28.390 --> 00:23:29.930\nSome of them, though, it's not perfect.\n\n465\n00:23:29.930 --> 00:23:33.870\nLike the VDSO library,\nI don't actually need that one.\n\n466\n00:23:33.870 --> 00:23:36.870\nBut if you copy them all,\nyou know you'll be safe.\n\n467\n00:23:36.870 --> 00:23:39.360\nSo these are library files that I need.\n\n468\n00:23:39.360 --> 00:23:42.882\nAnd to save a little bit\nof time before the show,\n\n469\n00:23:42.882 --> 00:23:47.214\nI put all of these into a text file so\nI can copy and paste it.\n\n470\n00:23:47.214 --> 00:23:53.197\nWhat I'm gonna do is, I'm gonna copy all\nof those files into the jail's /lib64 so\n\n471\n00:23:53.197 --> 00:23:55.372\nthat I have all the libraries.\n\n472\n00:23:55.372 --> 00:23:56.206\nThat it needs.\n\n473\n00:23:56.206 --> 00:23:59.481\nSo now if I take a look at\nthe library folder in the jail, so\n\n474\n00:23:59.481 --> 00:24:03.172\n/jail/service1/lib64, and\nI look at what's in there,\n\n475\n00:24:03.172 --> 00:24:06.540\nthere's all the libraries\nthat it depends on right?\n\n476\n00:24:06.540 --> 00:24:09.470\nYou've gotta account for that,\nyour application will have dependencies.\n\n477\n00:24:09.470 --> 00:24:12.914\nIt might require certain\nconfig files inside of /etc.\n\n478\n00:24:12.914 --> 00:24:15.514\nIt might need certain logging\nfolders inside of /var.\n\n479\n00:24:15.514 --> 00:24:16.430\nYou'll need to make those.\n\n480\n00:24:16.430 --> 00:24:19.050\nWe need to rebuild everything\nthe application needs,\n\n481\n00:24:19.050 --> 00:24:20.530\nright here inside of the jail.\n\n482\n00:24:20.530 --> 00:24:23.960\nAnd that's the hardest\npart of using chroot,\n\n483\n00:24:23.960 --> 00:24:27.210\nis accommodating all of the different\nthings that an application needs.\n\n484\n00:24:27.210 --> 00:24:30.755\n&gt;&gt; So now that's we've built the jail,\nhow do we use it in the real world?\n\n485\n00:24:30.755 --> 00:24:34.507\n&gt;&gt; Yeah, notice that technically, at this\npoint, the jail is done, I've built it.\n\n486\n00:24:34.507 --> 00:24:36.484\nAnd you might be thinking to yourself,\nwell, wait a minute.\n\n487\n00:24:36.484 --> 00:24:37.640\nDon, what about permissions?\n\n488\n00:24:37.640 --> 00:24:39.510\nAll this stuff is owned by root.\n\n489\n00:24:39.510 --> 00:24:41.520\nThat's fine, we want it owned by root.\n\n490\n00:24:41.520 --> 00:24:43.331\nThat's what's gonna help\nus lock all this down.\n\n491\n00:24:43.331 --> 00:24:45.900\nSo I'm good here, the jail is made.\n\n492\n00:24:45.900 --> 00:24:46.858\nNow we need to use it.\n\n493\n00:24:46.858 --> 00:24:48.590\nWell, I'm gonna use SSH.\n\n494\n00:24:48.590 --> 00:24:51.780\nAnd fortunately,\nSSH has built in support for chroot.\n\n495\n00:24:51.780 --> 00:24:53.470\nSo I've already done all\nthe heavy lifting here.\n\n496\n00:24:53.470 --> 00:24:55.250\nThe hard work is done.\n\n497\n00:24:55.250 --> 00:24:59.370\nWhat I need to do now is,\nI need to edit SSH's configuration.\n\n498\n00:24:59.370 --> 00:25:07.420\nSo I'm gonna to edit /etc/ssh/sshd_config.\n\n499\n00:25:07.420 --> 00:25:11.030\nAnd inside of here, I'm gonna go way\ndown to the bottom of this file.\n\n500\n00:25:11.030 --> 00:25:18.760\nAnd I'm gonna add in an entry\nthat says Match User service1.\n\n501\n00:25:18.760 --> 00:25:22.335\nSo it's gonna lookout for\nanytime service1 logs in.\n\n502\n00:25:22.335 --> 00:25:26.872\nAnd when service1 logs in, I'm gonna say\n\n503\n00:25:26.872 --> 00:25:32.310\nChrootDirectory, and then /jail/service1.\n\n504\n00:25:32.310 --> 00:25:35.970\nIf I had other users, I would say\nMatch User service2 or service3, or\n\n505\n00:25:35.970 --> 00:25:38.530\nwhatever their names were, Match User Bob.\n\n506\n00:25:38.530 --> 00:25:41.490\nAnd then, ChrootDirectory,\nand point to their jail.\n\n507\n00:25:41.490 --> 00:25:43.525\nOr maybe they all share the same jail.\n\n508\n00:25:43.525 --> 00:25:47.310\nIf they're all doing a common activity,\nI might send them to the same jail.\n\n509\n00:25:47.310 --> 00:25:52.860\nBut in this case, I'm specifying that\nnew jail that they point to, okay.\n\n510\n00:25:52.860 --> 00:25:57.979\nAnd with that, I can get out and\nI can restart SSH.\n\n511\n00:25:57.979 --> 00:25:59.690\nThat's everything that ssh needs.\n\n512\n00:25:59.690 --> 00:26:04.970\nSo I can say systemctl restart sshd,\nand it's gonna restart, right?\n\n513\n00:26:04.970 --> 00:26:10.120\nNow earlier, when I logged in to service1,\nI saw my home directory.\n\n514\n00:26:10.120 --> 00:26:11.640\nI was able to navigate back to the root.\n\n515\n00:26:11.640 --> 00:26:13.936\nI saw the whole file system,\nI went into /etc.\n\n516\n00:26:13.936 --> 00:26:16.770\nI went into /var, /log,\nand I saw data, right?\n\n517\n00:26:16.770 --> 00:26:19.810\nI was able to roam around, and\nI had a full set of commands.\n\n518\n00:26:19.810 --> 00:26:23.720\nI ran uname -a,\nlet's see how it looks now.\n\n519\n00:26:23.720 --> 00:26:29.841\nNow if I ssh as service1@ my local host,\nand I connect in,\n\n520\n00:26:29.841 --> 00:26:35.350\nI'm gonna authenticate and\nI get logged in.\n\n521\n00:26:35.350 --> 00:26:38.320\nFirst indicator that something is\ndifferent, my prompt is different.\n\n522\n00:26:38.320 --> 00:26:42.385\nMy prompt is saying Bash 4.2 instead of\nthe nice pretty prompt that I had earlier.\n\n523\n00:26:42.385 --> 00:26:46.431\nWell, the prompt is actually\ndefined in your bashrc file.\n\n524\n00:26:46.431 --> 00:26:50.026\nAnd I didn't bother to create one of\nthose, so I don't get a pretty prompt.\n\n525\n00:26:50.026 --> 00:26:51.590\nI could have if, I went that extra step.\n\n526\n00:26:51.590 --> 00:26:55.090\nBut I didn't create one, so\nI know things are different, all right?\n\n527\n00:26:55.090 --> 00:27:00.700\nWell, if I do a pwd,\nI'm in /home/service1 just like before.\n\n528\n00:27:00.700 --> 00:27:02.960\nOkay, great, so I'm in my home directory.\n\n529\n00:27:02.960 --> 00:27:09.150\nWell, if I go to the root and I take\na look, that looks a lot different, right?\n\n530\n00:27:09.150 --> 00:27:10.960\nI don't see all the extra folders.\n\n531\n00:27:10.960 --> 00:27:15.340\nI don't see sbin or\nusr, I don't see local.\n\n532\n00:27:15.340 --> 00:27:17.800\nI don't see var, there's no /var here.\n\n533\n00:27:17.800 --> 00:27:19.605\nAnd that's because I'm in my jail.\n\n534\n00:27:19.605 --> 00:27:21.860\nI'm in the jail on the file system.\n\n535\n00:27:21.860 --> 00:27:24.900\nI'm not actually in the true,\nfull file system.\n\n536\n00:27:24.900 --> 00:27:26.990\nI'm seeing a little window of it.\n\n537\n00:27:26.990 --> 00:27:30.610\nAnd I only have access to what is in here.\n\n538\n00:27:30.610 --> 00:27:35.340\nSo, if I run uname -a,\nthere's no uname -a command.\n\n539\n00:27:35.340 --> 00:27:36.360\nIt doesn't exist.\n\n540\n00:27:36.360 --> 00:27:41.210\nIf I look in /bin,\nit's got bash and it's got ls.\n\n541\n00:27:41.210 --> 00:27:42.780\nThat's all that I put in here.\n\n542\n00:27:42.780 --> 00:27:47.630\nIf I run the ls command,\nI see a directory listing of all my files.\n\n543\n00:27:47.630 --> 00:27:49.370\nAnd there's .profile, and so on.\n\n544\n00:27:49.370 --> 00:27:52.990\nBut I've only got the commands available\nthat I put inside of the jail.\n\n545\n00:27:52.990 --> 00:27:56.790\nAnd for the user, they can do whatever\nthey want right here inside of this jail.\n\n546\n00:27:56.790 --> 00:27:58.600\nAnd they can't escape it.\n\n547\n00:27:58.600 --> 00:27:59.739\nLook at the ownership here.\n\n548\n00:27:59.739 --> 00:28:02.093\nSee how it shows us these\nfiles are being owned by 0 0?\n\n549\n00:28:02.093 --> 00:28:04.700\nThat's the root user,\nroot user is user ID is 0.\n\n550\n00:28:04.700 --> 00:28:10.395\nBut it can't even look that up,\nbecause I didn't create /etc/passwd.\n\n551\n00:28:10.395 --> 00:28:13.980\nI didn't create that passwd file,\nso it can't resolve 0 to root.\n\n552\n00:28:13.980 --> 00:28:15.870\nSo it doesn't even know who's\nthe owner at this point.\n\n553\n00:28:15.870 --> 00:28:17.540\nThat's how restricted this is.\n\n554\n00:28:17.540 --> 00:28:21.330\nI now have complete control of\nthe environment presented to this user.\n\n555\n00:28:21.330 --> 00:28:26.060\nAnd I can give them the bare minimum\nthat they need to get their job done.\n\n556\n00:28:26.060 --> 00:28:28.880\nAnd I know that even if\nthey go hacker crazy,\n\n557\n00:28:28.880 --> 00:28:32.080\nthat they can't really do much\nbeyond what I've given them.\n\n558\n00:28:32.080 --> 00:28:33.730\nAnd so that helps to isolate them.\n\n559\n00:28:33.730 --> 00:28:36.420\nAnd yes,\nthey're logged into the same system I am.\n\n560\n00:28:36.420 --> 00:28:38.862\nIf they come in here and\nstart creating files,\n\n561\n00:28:38.862 --> 00:28:43.220\nI don't even have the touch command, do I?\n\n562\n00:28:43.220 --> 00:28:46.340\nNope, so I can't even create a file\nhere cuz I didn't give them any\n\n563\n00:28:46.340 --> 00:28:47.570\nutilities to create a file.\n\n564\n00:28:47.570 --> 00:28:51.010\nIn fact, right now, they're gonna have\nthe shell built-ins, these commands.\n\n565\n00:28:51.010 --> 00:28:54.140\nAnd then they'll have ls, that's\nthe only other thing I put in there.\n\n566\n00:28:54.140 --> 00:28:59.522\nI guess maybe I could echo something,\n\n567\n00:28:59.522 --> 00:29:03.740\necho test data, file.txt.\n\n568\n00:29:03.740 --> 00:29:05.448\nYou could maybe do that.\n\n569\n00:29:05.448 --> 00:29:08.560\nShoot, I don't have permission on my own\nfolder, cuz I left it all owned by root.\n\n570\n00:29:09.595 --> 00:29:13.520\n[LAUGH] But I would need to go back in the\nregular file system and grant that access.\n\n571\n00:29:13.520 --> 00:29:15.580\nBut it is the same file system.\n\n572\n00:29:15.580 --> 00:29:22.725\nSo for example, if I were to get out, so\nnow I've exited out of the ssh session.\n\n573\n00:29:22.725 --> 00:29:30.453\nAs a regular user here, I could go\ninto /jail/service1/home/service1.\n\n574\n00:29:30.453 --> 00:29:34.705\nAnd I could create a file called test.txt,\nright?\n\n575\n00:29:34.705 --> 00:29:40.620\nAnd I could change the permissions\non it to give full write access\n\n576\n00:29:40.620 --> 00:29:43.810\nto that file, so that anybody can\nget in there and change that file.\n\n577\n00:29:43.810 --> 00:29:49.890\nAnd now, if I ssh back in, I get in,\n\n578\n00:29:49.890 --> 00:29:52.530\nand there is that text.txt file, right?\n\n579\n00:29:52.530 --> 00:29:56.049\nAnd if I had a text editor, I could\nedit it, or change it, or whatever.\n\n580\n00:29:56.049 --> 00:29:58.381\nI guess I could echo some data.\n\n581\n00:29:58.381 --> 00:30:04.743\ntest data, and\nappend it to text.txt, there we go.\n\n582\n00:30:04.743 --> 00:30:07.956\nAnd so now I've appended\nthe little data onto that file.\n\n583\n00:30:07.956 --> 00:30:13.580\nAnd if I get back out to my file\nsystem here, I can take a look at it.\n\n584\n00:30:13.580 --> 00:30:16.312\nAnd there's that test data\nthat got stuck onto it.\n\n585\n00:30:16.312 --> 00:30:19.550\nSo now we've got where they can\njust do exactly what we want.\n\n586\n00:30:19.550 --> 00:30:21.640\nThat's the real power of a chroot jail.\n\n587\n00:30:21.640 --> 00:30:24.100\nchroot jails are very powerful.\n\n588\n00:30:24.100 --> 00:30:27.100\nAnd before virtualization was mainstream,\n\n589\n00:30:27.100 --> 00:30:31.588\nthis was really the best way to control\nand isolate access inside of the system.\n\n590\n00:30:31.588 --> 00:30:33.200\nIt's still used today.\n\n591\n00:30:33.200 --> 00:30:35.570\nYou see a lot of systems\nthat make use of it even for\n\n592\n00:30:35.570 --> 00:30:38.480\nsimple things just like changing\nwhere somebody's home directory is.\n\n593\n00:30:38.480 --> 00:30:41.070\nThere are other solutions\nthat you can make use of,\n\n594\n00:30:41.070 --> 00:30:45.330\nthat kind of are taking the place of\nchroot and starting to minimize it today.\n\n595\n00:30:45.330 --> 00:30:46.470\nBut it's still out there.\n\n596\n00:30:46.470 --> 00:30:48.740\nAnd it's a great technology to learn,\ncuz you may still be using it.\n\n597\n00:30:49.830 --> 00:30:52.000\n&gt;&gt; Well, there you have it, chroot jails.\n\n598\n00:30:52.000 --> 00:30:54.890\nLots of great information there,\nand a great tool to use.\n\n599\n00:30:54.890 --> 00:30:56.910\nAny last words on that?\n\n600\n00:30:56.910 --> 00:30:59.570\n&gt;&gt; Just remember that the hard\npart here is the dependencies.\n\n601\n00:30:59.570 --> 00:31:02.900\nFiguring out what all needs to go into\nthe jail along with your application,\n\n602\n00:31:02.900 --> 00:31:04.380\nto get it to work,\nthat's kind of a challenge.\n\n603\n00:31:05.540 --> 00:31:07.190\nI was trying to get applications to work.\n\n604\n00:31:07.190 --> 00:31:10.154\nIf I was just doing SFTP,\nthis show would have been a lot shorter.\n\n605\n00:31:10.154 --> 00:31:14.100\nI would have just done the chroot\ndirectory in SSH, and left it at that.\n\n606\n00:31:14.100 --> 00:31:17.470\nSFTP does everything else through SSH,\nand you're done.\n\n607\n00:31:17.470 --> 00:31:20.410\nSo sometimes it can be really hard,\nsometimes it could be really easy.\n\n608\n00:31:20.410 --> 00:31:22.380\nI wanted to show you guys\na more difficult one,\n\n609\n00:31:22.380 --> 00:31:26.000\njust so you guys get an idea of what it\nwould be like kind of worst case scenario.\n\n610\n00:31:26.000 --> 00:31:28.673\nBut it's a neat thing,\nit just takes take time.\n\n611\n00:31:28.673 --> 00:31:30.370\nIt takes time to get it done right.\n\n612\n00:31:30.370 --> 00:31:32.090\nLook for\ndocumentation out there on the internet.\n\n613\n00:31:32.090 --> 00:31:35.960\nFind people who have already put that\ntime in, to save you some effort.\n\n614\n00:31:35.960 --> 00:31:39.220\nBut definitely something that's\nrewarding once it's in place.\n\n615\n00:31:39.220 --> 00:31:40.820\n&gt;&gt; Awesome, great job done.\n\n616\n00:31:40.820 --> 00:31:43.280\nchroot jails are good jails to have,\nI guess.\n\n617\n00:31:43.280 --> 00:31:46.330\nLinux Security Techniques has a lot\nof episodes in this video series.\n\n618\n00:31:46.330 --> 00:31:48.990\nMake sure you watch all of them,\nyou'll be glad you did.\n\n619\n00:31:48.990 --> 00:31:51.850\nAnd thank you for\nwatching ITProTV, I'm Zach Memos.\n\n620\n00:31:51.850 --> 00:31:52.620\n&gt;&gt; And I'm Don Pezet.\n\n621\n00:31:52.620 --> 00:31:56.102\n&gt;&gt; And we will see you again very soon.\n\n622\n00:31:56.102 --> 00:32:01.939\n[MUSIC]\n\n623\n00:32:01.939 --> 00:32:05.741\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "230152389"
        },
        {
          "description": "Don and Zach cover what LXC is, some of the background of LXC, how it differs from CHROOT, what it takes to get LXC up & running, how we create a container, how we install applications into the container, and how we remove a container when we no longer need it.",
          "length": "1914",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-3-lxc_containers-081717-PGM.00_31_38_05.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-3-lxc_containers-081717-PGM.00_31_38_05.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-3-3-lxc_containers-081717-PGM.00_31_38_05.Still001-sm.jpg",
          "title": "LXC Containers",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:01.536\nWelcome to ITPRO.TV.\n\n2\n00:00:01.536 --> 00:00:08.040\nI'm your host [CROSSTALK]\n[SOUND]\n\n3\n00:00:08.040 --> 00:00:12.190\n[MUSIC]\nYou're watching ITPRO.TV.\n\n4\n00:00:12.190 --> 00:00:13.010\nHello, and thank you for\n\n5\n00:00:13.010 --> 00:00:16.980\nwatching ITPRO.TV,\nhelping you learn wherever you go.\n\n6\n00:00:16.980 --> 00:00:20.720\nI'm your host Zach Memos as we continue\non with Linux security techniques.\n\n7\n00:00:20.720 --> 00:00:23.670\nAnd this is LXC containers.\n\n8\n00:00:23.670 --> 00:00:24.590\nWhat are they?\n\n9\n00:00:24.590 --> 00:00:27.410\nWell Don Pezet's gonna tell us\nall about it, because he knows.\n\n10\n00:00:27.410 --> 00:00:28.640\n&gt;&gt; That is right Zack.\n\n11\n00:00:28.640 --> 00:00:29.725\nWell at least hopefully I know.\n\n12\n00:00:29.725 --> 00:00:30.700\n[LAUGH]\n&gt;&gt; Yes you do.\n\n13\n00:00:30.700 --> 00:00:34.209\n&gt;&gt; In this episode we're tackling LXC\ncontainers, which LXC just stands for\n\n14\n00:00:34.209 --> 00:00:36.550\nLinux containers, so I guess we kind of-\n&gt;&gt; It makes sense.\n\n15\n00:00:36.550 --> 00:00:39.240\n&gt;&gt; Saying Linux container containers,\nwhatever.\n\n16\n00:00:39.240 --> 00:00:44.148\nBut it's a technology,\nit's like a virtualization technology that\n\n17\n00:00:44.148 --> 00:00:47.806\nis really kind of a promising\none that is out there and\n\n18\n00:00:47.806 --> 00:00:50.812\nworks really well in the security fields.\n\n19\n00:00:50.812 --> 00:00:52.103\nSo I wanted to talk about it and\n\n20\n00:00:52.103 --> 00:00:56.190\na lot of what we're going to talk about\nis gonna work for containers in general.\n\n21\n00:00:56.190 --> 00:01:00.169\nDocker is probably the most common\ncontainer format that's out\n\n22\n00:01:00.169 --> 00:01:01.530\nthere right now.\n\n23\n00:01:01.530 --> 00:01:04.771\nBut I wanted to tackle Linux containers\nLXC, because it is really built for\n\n24\n00:01:04.771 --> 00:01:06.140\nthe Linux world in mind.\n\n25\n00:01:06.140 --> 00:01:10.550\nDocker technically is too, but\nLXE is one that's built into most distros.\n\n26\n00:01:10.550 --> 00:01:16.040\nIt's really easy to deploy and\nit allows us to isolate applications\n\n27\n00:01:16.040 --> 00:01:17.980\nin a way that's relatively pain free.\n\n28\n00:01:17.980 --> 00:01:19.160\nIf you've been watching\nall of our episodes,\n\n29\n00:01:19.160 --> 00:01:22.240\nyou might have watched\nour chroot jails episode.\n\n30\n00:01:22.240 --> 00:01:22.810\n&gt;&gt; Yes.\n\n31\n00:01:22.810 --> 00:01:25.225\n&gt;&gt; And working with chroot, it's not fun.\n\n32\n00:01:25.225 --> 00:01:27.420\n[LAUGH] It's a lot of work.\n\n33\n00:01:27.420 --> 00:01:29.500\nA lot of dependency tracking and so on.\n\n34\n00:01:29.500 --> 00:01:32.240\nWith LXC containers we don't\nhave to worry about any of that.\n\n35\n00:01:32.240 --> 00:01:34.890\nWe can isolate applications\nvery easily and\n\n36\n00:01:34.890 --> 00:01:37.080\ndo it all from within\na single operating system.\n\n37\n00:01:37.080 --> 00:01:40.195\nSo that's what we're gonna be learning\nright here in this episode on\n\n38\n00:01:40.195 --> 00:01:41.050\nLXC containers.\n\n39\n00:01:41.050 --> 00:01:42.088\n&gt;&gt; That's right.\nAnd in fact,\n\n40\n00:01:42.088 --> 00:01:45.351\nin that previous episode you mentioned\nthat you in fact like the containers\n\n41\n00:01:45.351 --> 00:01:46.070\na bit more.\n\n42\n00:01:46.070 --> 00:01:49.320\n&gt;&gt; Absolutely.\n&gt;&gt; It's like the in between of those.\n\n43\n00:01:49.320 --> 00:01:50.049\nYou started just now, but\n\n44\n00:01:50.049 --> 00:01:51.818\ngive us a little more background\non the LXC containers please.\n\n45\n00:01:51.818 --> 00:01:57.080\n&gt;&gt; Sure, so virtualization hasn't\nalways been where it is today.\n\n46\n00:01:57.080 --> 00:02:00.170\nIn today's world,\nenterprises virtualize constantly.\n\n47\n00:02:00.170 --> 00:02:04.930\nAnd almost all of our systems are deployed\nas virtual machines that are running on\n\n48\n00:02:04.930 --> 00:02:09.510\ntop of KVM or Zen, running on top\nof VM Ware, or Hyper-V or whatever.\n\n49\n00:02:09.510 --> 00:02:13.010\nBut, before virtualization\nreally caught on,\n\n50\n00:02:13.010 --> 00:02:16.910\neverything was run as separate processes\non a single operating system, and\n\n51\n00:02:16.910 --> 00:02:18.640\nyou got really great\nperformance out of that, right.\n\n52\n00:02:18.640 --> 00:02:22.020\nThese processes are running right on top\nof the barrier metal and they ran great,\n\n53\n00:02:22.020 --> 00:02:25.040\nyou stick them in a virtual machine,\nthey run not so great.\n\n54\n00:02:25.040 --> 00:02:28.840\nYou start having other concerns,\nthings kind of start to take a hit there.\n\n55\n00:02:28.840 --> 00:02:32.930\nWell, Linux containers\nare kind of an in between.\n\n56\n00:02:32.930 --> 00:02:36.250\nIn between virtualization and\nrunning natively.\n\n57\n00:02:36.250 --> 00:02:38.750\nWhen you run something natively,\nit has direct access to the hard drive,\n\n58\n00:02:38.750 --> 00:02:42.960\ndirect access to the network adaptors, the\nprocessor, all through the kernel, right?\n\n59\n00:02:42.960 --> 00:02:46.560\nSo, it's all via the kernel, but\nit gets us access to te hardware and\n\n60\n00:02:46.560 --> 00:02:47.300\nit runs very fast.\n\n61\n00:02:47.300 --> 00:02:50.855\nYou stick it in a virtual machine,\nit's talking to a virtual kernel,\n\n62\n00:02:50.855 --> 00:02:52.844\nwhich is talking to virtual hardware,\n\n63\n00:02:52.844 --> 00:02:56.500\nwhich then a real kernel has to\nintercept and send to real hardware.\n\n64\n00:02:56.500 --> 00:02:59.060\nAnd those middlemen,\nthat hurts performance.\n\n65\n00:02:59.060 --> 00:03:00.660\nAnd the older Hypervisors,\n\n66\n00:03:00.660 --> 00:03:03.710\nthe old type two Hypervisors they\ndid a pretty poor job of it.\n\n67\n00:03:03.710 --> 00:03:06.900\nAnd so in the 1990s and\neven in early 2000s.\n\n68\n00:03:06.900 --> 00:03:08.240\n&gt;&gt; That be the olden days.\n\n69\n00:03:08.240 --> 00:03:09.680\n&gt;&gt; The olden days in IT.\n\n70\n00:03:09.680 --> 00:03:13.330\nThose were really holding\nvirtualization just to testing and\n\n71\n00:03:13.330 --> 00:03:14.880\ndevelopment environments.\n\n72\n00:03:14.880 --> 00:03:17.780\nAnd only now in the 2000s\n\n73\n00:03:17.780 --> 00:03:20.580\ndo we have type 1 hypervisors\nthat actually run much faster.\n\n74\n00:03:20.580 --> 00:03:22.450\nThey use hardware acceleration.\n\n75\n00:03:22.450 --> 00:03:25.090\nThere's still this 2nd kernel\nthat we're talking to.\n\n76\n00:03:25.090 --> 00:03:28.260\nAnd this underlying virtual hardware,\na conversion has happened.\n\n77\n00:03:28.260 --> 00:03:30.530\nIt's much, much faster,\nbut it's still there.\n\n78\n00:03:30.530 --> 00:03:35.470\nAnd so you get near bare metal performance\nwhen you run applications inside of\n\n79\n00:03:35.470 --> 00:03:36.760\na virtual machine.\n\n80\n00:03:36.760 --> 00:03:38.550\nYou do get nice isolation, though.\n\n81\n00:03:38.550 --> 00:03:41.440\nIf I have ten VMs and\nsomebody breaks into one of them,\n\n82\n00:03:41.440 --> 00:03:44.640\nthe other nine are safe,\nunless they find a way to break into them.\n\n83\n00:03:44.640 --> 00:03:46.430\nThey're ten separate machines.\n\n84\n00:03:46.430 --> 00:03:49.720\nSo you get isolation and\na little bit of a hit on performance.\n\n85\n00:03:49.720 --> 00:03:54.450\nWhat LXC does is it lets\nus create containers that\n\n86\n00:03:54.450 --> 00:03:57.730\nare all sharing one kernel.\n\n87\n00:03:57.730 --> 00:04:04.251\nIf I have a CentOS 7 machine and\nI spin up ten CentOS 7 Virtual machines.\n\n88\n00:04:04.251 --> 00:04:05.987\nWell now I've got 11 kernels running.\n\n89\n00:04:05.987 --> 00:04:09.114\nThought the ten in the VM's and the one\nunderneath, we've got 11 kernels running.\n\n90\n00:04:09.114 --> 00:04:12.995\nAnd 11 copies of most operating system\nlibraries that are all loaded into memory.\n\n91\n00:04:12.995 --> 00:04:15.093\nIt's very inefficient, I'm wasting space.\n\n92\n00:04:15.093 --> 00:04:17.325\nIt's easy to do, but I'm wasting space.\n\n93\n00:04:17.325 --> 00:04:20.636\nAnd the advantage of a VM\nis usually convenient.\n\n94\n00:04:20.636 --> 00:04:25.503\nWith LXC it says look, we're all gonna use\nthe same kernel, we're all gonna use a lot\n\n95\n00:04:25.503 --> 00:04:29.222\nof the same components, so\nwhy not let one common kernel run, and\n\n96\n00:04:29.222 --> 00:04:32.200\nwe'll share it across\nall these containers.\n\n97\n00:04:32.200 --> 00:04:33.830\nAnd you can stick your\napplication on the container.\n\n98\n00:04:33.830 --> 00:04:36.890\nThe application can load all sorts\nof other stuff that it needs, but\n\n99\n00:04:36.890 --> 00:04:39.460\nit's still sharing that one kernel.\n\n100\n00:04:39.460 --> 00:04:43.640\nSo it's like it's virtualized,\nthey're isolated from each other, but\n\n101\n00:04:43.640 --> 00:04:47.150\nat the same time, they're sharing\nsome underlined resources so\n\n102\n00:04:47.150 --> 00:04:50.460\nthat they don't have to do anything\ncrazy when talking to hardware.\n\n103\n00:04:50.460 --> 00:04:51.370\nWhen they talk to hardware,\n\n104\n00:04:51.370 --> 00:04:54.570\nthey go to the shared kernel, which then\ngives them direct access to hardware.\n\n105\n00:04:54.570 --> 00:04:57.190\nSo we get great performance, and\n\n106\n00:04:57.190 --> 00:05:00.580\nwe get great isolation, and\nit really does work well.\n\n107\n00:05:00.580 --> 00:05:05.330\nThe negative of LXC is that\nbecause there's a shared kernel,\n\n108\n00:05:05.330 --> 00:05:08.850\nif you've got a Linux host,\nyou've gotta have Linux containers.\n\n109\n00:05:08.850 --> 00:05:10.290\nIt's all built around Linux.\n\n110\n00:05:10.290 --> 00:05:11.900\nThus the name LXC.\n\n111\n00:05:11.900 --> 00:05:15.340\nIf I was running VMware,\nI could have a Linux host, and\n\n112\n00:05:15.340 --> 00:05:18.310\nI could run a Windows guest\nVM if I wanted, right?\n\n113\n00:05:18.310 --> 00:05:21.862\nYou can have completely different OSes\ncuz the hardware is being abstracted.\n\n114\n00:05:21.862 --> 00:05:24.159\nWith LXC the hardware is not abstracted,\n\n115\n00:05:24.159 --> 00:05:27.620\npeople are reaching right\ninto touch that file system.\n\n116\n00:05:27.620 --> 00:05:29.390\nThen and that's a good thing, right?\n\n117\n00:05:29.390 --> 00:05:31.711\nThe history of this, when LXC was created,\n\n118\n00:05:31.711 --> 00:05:34.974\nit was designed to give us\nisolation without the need for VMs,\n\n119\n00:05:34.974 --> 00:05:38.515\ncuz VMs weren't at the performance\npoint where they needed to be.\n\n120\n00:05:38.515 --> 00:05:42.531\nNow, LXC has kind of changed direction and\ntheir goal is to, not so\n\n121\n00:05:42.531 --> 00:05:47.504\nmuch create this isolation environment,\nbut create a consistent environment.\n\n122\n00:05:47.504 --> 00:05:50.030\nSo a developer can create\nan application in test.\n\n123\n00:05:50.030 --> 00:05:53.620\nAnd then deploy in production, and as long\nas it's an LXC container is on both ends,\n\n124\n00:05:53.620 --> 00:05:55.610\nthe deployment will look the same.\n\n125\n00:05:55.610 --> 00:05:58.050\nAnd so\nthey've seen a lot of development in that.\n\n126\n00:05:58.050 --> 00:06:03.100\nRight now, most of the development in LXC\nis happening from Canonical or Ubuntu.\n\n127\n00:06:03.100 --> 00:06:05.420\nThey're the ones who are dumping\nthe most money into it.\n\n128\n00:06:05.420 --> 00:06:09.620\nRed Hat used to invest in Alexi, but\nrecently they've switched to Docker, and\n\n129\n00:06:09.620 --> 00:06:11.490\nsaid we're going to back Docker.\n\n130\n00:06:11.490 --> 00:06:15.741\nWell, if you're running CentOS, or\nFedora, you could still use LXC, RHEL,\n\n131\n00:06:15.741 --> 00:06:17.910\ndoesn't include LXC support anymore.\n\n132\n00:06:17.910 --> 00:06:19.460\nSo, they actually bumped it out.\n\n133\n00:06:19.460 --> 00:06:21.540\nBut if you've got Ubuntu,\nor Debian, it's there.\n\n134\n00:06:21.540 --> 00:06:24.900\nHere in the show,\nI'm going to use CentOS 7 to fire this up.\n\n135\n00:06:24.900 --> 00:06:26.660\nIt is still widely supported.\n\n136\n00:06:26.660 --> 00:06:27.750\nIt's still being developed.\n\n137\n00:06:27.750 --> 00:06:28.750\nIt's still very active.\n\n138\n00:06:28.750 --> 00:06:34.030\nAnd it's still a great solution, but\nDocker is kinda taking over this space.\n\n139\n00:06:34.030 --> 00:06:37.990\nThe problem is, LXC was designed\nto solve a security problem.\n\n140\n00:06:37.990 --> 00:06:40.940\nDocker was designed to solve\na programmer's problem,\n\n141\n00:06:40.940 --> 00:06:42.420\na developer's problem.\n\n142\n00:06:42.420 --> 00:06:46.050\nFrom a security perspective,\nDocker actually has some weaknesses in it.\n\n143\n00:06:46.050 --> 00:06:48.961\nI prefer LXC as a more complete solution.\n\n144\n00:06:48.961 --> 00:06:52.629\nSo, in this episode we're going to walk\nthrough that process of getting LXC\n\n145\n00:06:52.629 --> 00:06:56.414\ninstalled, creating some containers,\nthrowing some applications in those\n\n146\n00:06:56.414 --> 00:06:59.912\ncontainers and kinda seeing what that\nprocess looks like to create these\n\n147\n00:06:59.912 --> 00:07:03.080\nisolated environments and\nget them up and going on our systems.\n\n148\n00:07:03.080 --> 00:07:06.250\n&gt;&gt; So, John, you've already,\nkind of touched on this, but further,\n\n149\n00:07:06.250 --> 00:07:07.831\nhow does this differ from CH Root?\n\n150\n00:07:07.831 --> 00:07:10.920\n&gt;&gt; All right, CH Root\n&gt;&gt; When we did that,\n\n151\n00:07:10.920 --> 00:07:12.900\nyou have a common kernel, right?\n\n152\n00:07:12.900 --> 00:07:15.900\nYou access the system,\nyou put it into a jail.\n\n153\n00:07:15.900 --> 00:07:18.460\nAnd the jail is running that same\ncommon kernel as the underlying OS.\n\n154\n00:07:18.460 --> 00:07:20.760\nSo, so far,\nthis sounds just like a container.\n\n155\n00:07:20.760 --> 00:07:23.690\nThe big difference is\nthat with a chroot jail,\n\n156\n00:07:23.690 --> 00:07:26.690\nyou're really just hiding the file system,\nright?\n\n157\n00:07:26.690 --> 00:07:28.820\nThe file system is being restricted for\nyou.\n\n158\n00:07:28.820 --> 00:07:31.710\nYou see a different subset\nof the file system.\n\n159\n00:07:31.710 --> 00:07:35.260\n&gt;&gt; But the processes that are running\nin memory, the other activities,\n\n160\n00:07:35.260 --> 00:07:40.670\nthe TCP ports and stuff like that, those\nare all shared, even across the jails.\n\n161\n00:07:40.670 --> 00:07:43.130\nSo it's really just a filesystem jail.\n\n162\n00:07:43.130 --> 00:07:44.590\nWith LXC,\n\n163\n00:07:44.590 --> 00:07:48.440\nLXC actually uses several different\nthings to build it's jail, right?\n\n164\n00:07:48.440 --> 00:07:50.000\nTo build it's container environment.\n\n165\n00:07:50.000 --> 00:07:54.169\nIt uses chroot, it actually uses chroot\nto handle restricting the file system.\n\n166\n00:07:54.169 --> 00:07:58.047\nBut then it uses other things like\nApp Armor or an SE Linux, and\n\n167\n00:07:58.047 --> 00:08:00.744\nin a lot of the other\nsecurity sub systems.\n\n168\n00:08:00.744 --> 00:08:02.336\nTo create the rest of the container.\n\n169\n00:08:02.336 --> 00:08:05.217\nSo that, not only is the file\nsystem restricted, but\n\n170\n00:08:05.217 --> 00:08:08.226\nthe network access is restricted,\nthe memory access,\n\n171\n00:08:08.226 --> 00:08:12.170\nthe view process is restricted,\nall of that is restricted as well.\n\n172\n00:08:12.170 --> 00:08:15.442\nSo, it's almost like CH root\non Super steroids, right?\n\n173\n00:08:15.442 --> 00:08:20.266\nCH root is technically a part of LXC and\nit's just one of the piece, I think it's\n\n174\n00:08:20.266 --> 00:08:25.090\neight or nine different pieces that all\ncome together to build up what LXC does,\n\n175\n00:08:25.090 --> 00:08:27.840\nand they're all native Linux binary stuff.\n\n176\n00:08:27.840 --> 00:08:31.790\nIt's designed for the Linux OS, which\nis what makes LXC such a great platform\n\n177\n00:08:31.790 --> 00:08:35.250\nversus something like Docker, where yeah\nthey've got a Windows version, they've got\n\n178\n00:08:35.250 --> 00:08:37.950\na Mac version, they're kind of spread out\nall over the place because they're just\n\n179\n00:08:37.950 --> 00:08:41.260\ntrying to make it easy for developers to\nmove applications from server to server.\n\n180\n00:08:41.260 --> 00:08:44.950\nHere, we're saying lets take Linux and\nmake it more secure, and\n\n181\n00:08:44.950 --> 00:08:47.140\nthat's really the advantage of LXE.\n\n182\n00:08:47.140 --> 00:08:50.632\n&gt;&gt; So, that being said, what does\nit take to get LXE up and running?\n\n183\n00:08:50.632 --> 00:08:53.350\n&gt;&gt; Our first challenge is\ngonna be installing it.\n\n184\n00:08:53.350 --> 00:08:56.470\nIf you're on Ubuntu, if you're on Debian,\nor any of the Debian variants,\n\n185\n00:08:56.470 --> 00:09:01.730\nyou just do an app-get install LXE,\nit's as easy as that, right?\n\n186\n00:09:01.730 --> 00:09:06.620\nIf you're on Redhat base system though,\nRedhat has chosen to move over to dockers\n\n187\n00:09:06.620 --> 00:09:09.310\nso it's a little bit\ntrickier to get LXC install.\n\n188\n00:09:09.310 --> 00:09:10.418\nSo, I'm on a CentOS machine.\n\n189\n00:09:10.418 --> 00:09:15.130\nSo what I needed to do is I need to\nadd a non-Redhat manage repository.\n\n190\n00:09:15.130 --> 00:09:20.130\nSo as the EPL repository that's out there\nthat has a ton of extra binaries that\n\n191\n00:09:20.130 --> 00:09:22.460\naren't officially supported but\nrun just fine.\n\n192\n00:09:22.460 --> 00:09:27.980\nSo, I'm gonna say,\nyum install epel-release and,\n\n193\n00:09:27.980 --> 00:09:29.400\ndo I actually have it installed?\n\n194\n00:09:29.400 --> 00:09:31.259\nI haven't installed but there's an update.\n\n195\n00:09:31.259 --> 00:09:32.760\nSo, I'm gonna do it.\n\n196\n00:09:32.760 --> 00:09:36.300\nSo, I'm adding the epel repository because\nthis is technically gonna be non-supported\n\n197\n00:09:36.300 --> 00:09:37.039\nsoftware at this point.\n\n198\n00:09:38.150 --> 00:09:40.580\nI'm running CentOS 7 which\nis not supported anyway.\n\n199\n00:09:40.580 --> 00:09:42.613\nSo this is really makes no difference.\n\n200\n00:09:42.613 --> 00:09:43.380\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n201\n00:09:43.380 --> 00:09:45.071\n&gt;&gt; So I'm gonna add that repository.\n\n202\n00:09:45.071 --> 00:09:47.653\nThen I'm gonna install LXC.\n\n203\n00:09:47.653 --> 00:09:51.780\nSo I'll do a yum install and then LXC.\n\n204\n00:09:51.780 --> 00:09:53.090\nTechnically, that's all I need,\n\n205\n00:09:53.090 --> 00:09:57.040\nbut there's a few other pieces that\nI likely wanna install as well.\n\n206\n00:09:57.040 --> 00:10:01.030\nWhen you create a container, the container\nis gonna use a shared kernel, right?\n\n207\n00:10:01.030 --> 00:10:02.379\nAnd we've already got our kernel.\n\n208\n00:10:02.379 --> 00:10:07.115\nBut then the rest of the container can\nactually be built to mirror other Linux\n\n209\n00:10:07.115 --> 00:10:07.788\ndistros.\n\n210\n00:10:07.788 --> 00:10:12.802\nIt can mirror CentOS, or Debian,\nor RHEL, Ubuntu or whatever.\n\n211\n00:10:12.802 --> 00:10:17.014\nAnd so, if you install the lxc-templates\npackage, that'll come with templates for\n\n212\n00:10:17.014 --> 00:10:19.838\nall these other distros,\nwhich makes life a lot easier for\n\n213\n00:10:19.838 --> 00:10:22.480\nus to get these things configured and\ndeployed.\n\n214\n00:10:22.480 --> 00:10:24.599\nSo those are the two things\nthat we need bare minimum, and\n\n215\n00:10:24.599 --> 00:10:27.578\nthen there's a handful of dependencies,\nsome other things that we'll want.\n\n216\n00:10:27.578 --> 00:10:29.595\nI'm gonna be managing this\nfrom the command line.\n\n217\n00:10:29.595 --> 00:10:34.397\nAnd from the command line, we can use lib\nvert which is the virtualization library\n\n218\n00:10:34.397 --> 00:10:37.390\nto give us command line\nutilities to talk to LXC.\n\n219\n00:10:37.390 --> 00:10:38.800\nThat's kind of a useful thing to have.\n\n220\n00:10:38.800 --> 00:10:40.240\nSo I'm gonna add that.\n\n221\n00:10:40.240 --> 00:10:44.056\nSpeaking of command line utilities,\nthere's some specific command line\n\n222\n00:10:44.056 --> 00:10:47.275\nutilities for LXC,\nwhich are part of the lxc-extra package.\n\n223\n00:10:47.275 --> 00:10:48.580\nI'm gonna add that.\n\n224\n00:10:48.580 --> 00:10:49.170\nIf you don't have that,\n\n225\n00:10:49.170 --> 00:10:53.360\nyou'll miss some commands that I'm gonna\nuse here in the show, so lxc-extra.\n\n226\n00:10:53.360 --> 00:10:56.930\nThe only other thing that I'm leaving out\nis we do need Pearl for some of this.\n\n227\n00:10:56.930 --> 00:10:57.740\nSo I'm going to add Pearl.\n\n228\n00:10:57.740 --> 00:11:00.620\nThere's a couple of scripts\nthat will leverage Pearl.\n\n229\n00:11:00.620 --> 00:11:02.840\nSo I'm gonna install that as well.\n\n230\n00:11:02.840 --> 00:11:05.470\nSo when I added that to the list,\nit's gonna go and find those packages,\n\n231\n00:11:05.470 --> 00:11:09.300\nassuming I typed them all correctly and\nget them installed.\n\n232\n00:11:09.300 --> 00:11:10.028\nThere we go.\n\n233\n00:11:10.028 --> 00:11:13.800\nAnd so I've got LXC is being installed,\nlibvirt, lxc-extra.\n\n234\n00:11:13.800 --> 00:11:16.990\nI already have the templates installed, so\nit doesn't have been sold out one for me.\n\n235\n00:11:16.990 --> 00:11:20.570\nBut a couple other pieces are all getting\nthrown in there and being brought active.\n\n236\n00:11:20.570 --> 00:11:21.859\nSo I'll say yes and install that.\n\n237\n00:11:21.859 --> 00:11:27.540\nNow, all that being said, it's 32\nmegabytes of data, LXC is very small.\n\n238\n00:11:27.540 --> 00:11:29.670\nIt's not carrying with\nit these huge templates.\n\n239\n00:11:29.670 --> 00:11:31.010\nAnd, things like VMware,\n\n240\n00:11:31.010 --> 00:11:35.530\nVMware is several hundred megabytes\nin size because of the binary virtual\n\n241\n00:11:35.530 --> 00:11:39.370\ntools that it has to load into VMs to be\nable to support the virtual hardware.\n\n242\n00:11:39.370 --> 00:11:41.360\nHere we don't have virtual hardware,\nwe don't need any of that.\n\n243\n00:11:41.360 --> 00:11:42.710\nSo LXC is very,\n\n244\n00:11:42.710 --> 00:11:46.200\nvery small cuz it's leveraging\nwhat's already a part of the system.\n\n245\n00:11:46.200 --> 00:11:47.600\nIt's just tying it all together.\n\n246\n00:11:47.600 --> 00:11:52.020\nMost of what I just installed are simply\nscripts and configuration files.\n\n247\n00:11:52.020 --> 00:11:55.240\nSo it's a very, very tiny package\nto get that up and going.\n\n248\n00:11:55.240 --> 00:11:57.595\nNow that I've got it though,\nit's installed.\n\n249\n00:11:57.595 --> 00:12:02.059\nI've got LXC and I can start\nworking with it, I can fire it up.\n\n250\n00:12:02.059 --> 00:12:09.547\nI'm gonna do a system ctl enable--now lxc,\nand that's gonna fire that up.\n\n251\n00:12:09.547 --> 00:12:12.715\nSo now LXC is enabled, so\nit will start a boot time and\n\n252\n00:12:12.715 --> 00:12:15.030\nit just started it cuz I used --now.\n\n253\n00:12:15.030 --> 00:12:19.070\nAnd I could do the same thing for\nlibvert, if I haven't already.\n\n254\n00:12:19.070 --> 00:12:21.410\nI use libvert for\na few things on my system.\n\n255\n00:12:21.410 --> 00:12:26.260\nIt lets you manage not just LXC,\nbut you can manage, KVM,\n\n256\n00:12:26.260 --> 00:12:28.510\nQEMU, ZEN, even VMR work station.\n\n257\n00:12:28.510 --> 00:12:30.172\nYou can manage all that\nstuff with libvert, so\n\n258\n00:12:30.172 --> 00:12:31.842\nthat's why I'd already\nhave it on my system.\n\n259\n00:12:31.842 --> 00:12:34.937\nBut anyway, you can turn that on,\nif you need to.\n\n260\n00:12:34.937 --> 00:12:37.545\nI don't get any command line feedback\non that one because it was all ready\n\n261\n00:12:37.545 --> 00:12:38.160\nenabled for me.\n\n262\n00:12:39.260 --> 00:12:43.640\nAnd then there is a default configuration\nwith LXC which is good enough for\n\n263\n00:12:43.640 --> 00:12:45.070\nmost people.\n\n264\n00:12:45.070 --> 00:12:49.139\nIf there some problem,\nwe can easily test and see that,\n\n265\n00:12:49.139 --> 00:12:53.912\nlike if it doesn't start for us,\nyou can run lxc-checkconfig.\n\n266\n00:12:53.912 --> 00:12:58.250\nAnd that command is actually part of\nthe lxc-extra package that I'm mentioned.\n\n267\n00:12:58.250 --> 00:13:00.440\nSo, if you didn't install the extras,\nyou won't have this.\n\n268\n00:13:00.440 --> 00:13:02.570\nBut it'll take a look\nat lxc's configuration,\n\n269\n00:13:02.570 --> 00:13:05.720\nit'll take a look at your system and\nmake sure everything is playing nice.\n\n270\n00:13:05.720 --> 00:13:07.637\nAnd so, I'm gonna run that, and\n\n271\n00:13:07.637 --> 00:13:10.731\nwhat we wanna see is a bunch\nof green enables, right?\n\n272\n00:13:10.731 --> 00:13:13.920\nIf I look down that list and I see\na bunch of green enables, that's good.\n\n273\n00:13:13.920 --> 00:13:16.640\nIf I see anything in here that's\na problem, it'll show up and\n\n274\n00:13:16.640 --> 00:13:18.670\nI can identify that and go and target it.\n\n275\n00:13:18.670 --> 00:13:22.350\nBut in my case, it looks like\neverything here is good to go and\n\n276\n00:13:22.350 --> 00:13:25.230\nwe are up and running,\nso we should be fine.\n\n277\n00:13:25.230 --> 00:13:27.670\nIt's even verifying things like\nwhether it can see the kernel.\n\n278\n00:13:27.670 --> 00:13:30.850\nSee how it spots my kernel that I've got,\ncuz we're gonna be sharing that\n\n279\n00:13:30.850 --> 00:13:35.510\nacross each of these containers for\nthe applications running inside of them.\n\n280\n00:13:35.510 --> 00:13:38.951\nBut at this point we've got LXC\ninstalled and it' up and running.\n\n281\n00:13:38.951 --> 00:13:40.303\nSo we're good to go.\n\n282\n00:13:40.303 --> 00:13:43.960\n&gt;&gt; Well, now that it's up and running,\nhow do we create a container?\n\n283\n00:13:43.960 --> 00:13:44.723\n&gt;&gt; All right, yeah,\n\n284\n00:13:44.723 --> 00:13:47.560\nthe whole thing is not gonna be\nuseful unless we create a container.\n\n285\n00:13:47.560 --> 00:13:50.320\nSo let's create a scenario.\n\n286\n00:13:50.320 --> 00:13:53.120\nLet's say that I get a call from\nthe dev team and there like hey,\n\n287\n00:13:53.120 --> 00:13:54.310\nI need a database server.\n\n288\n00:13:54.310 --> 00:13:57.524\nCan you give me a MariaDB server.\n\n289\n00:13:57.524 --> 00:13:58.270\nAnd I say, all right.\n\n290\n00:13:58.270 --> 00:13:59.620\nWell, I don't have the hardware for\n\n291\n00:13:59.620 --> 00:14:04.240\nit, but I could take one of my existing\nservers and I can throw MariaDB on there.\n\n292\n00:14:04.240 --> 00:14:06.190\nBut these developers\nare just now asking for it,\n\n293\n00:14:06.190 --> 00:14:07.840\nI don't know if they\nreally know how to use it.\n\n294\n00:14:07.840 --> 00:14:10.037\nThey can misconfigure it,\nthey could cause some problems.\n\n295\n00:14:10.037 --> 00:14:15.180\nSo I wanna create an isolated\nenvironment that's running MariaDB.\n\n296\n00:14:15.180 --> 00:14:18.613\nOr some other application I could use\nApache or something else in this scenario.\n\n297\n00:14:18.613 --> 00:14:21.080\nSo I need to build a container for that.\n\n298\n00:14:21.080 --> 00:14:24.700\nAnd so to build the container,\nwe're gonna use LXC to do it.\n\n299\n00:14:24.700 --> 00:14:27.037\nAnd so I will come in and,\nbefore I create it,\n\n300\n00:14:27.037 --> 00:14:29.640\nI need to figure out what\ntemplate I wanna use.\n\n301\n00:14:29.640 --> 00:14:32.520\nSo they probably have some\noperating system they prefer, and\n\n302\n00:14:32.520 --> 00:14:36.130\nthey might say I want a MariaDB and\nI want it running on CentOS, or\n\n303\n00:14:36.130 --> 00:14:38.950\nI want it running on Debian or whatever.\n\n304\n00:14:38.950 --> 00:14:41.830\nWell, we installed the templates,\nso we can pick.\n\n305\n00:14:41.830 --> 00:14:42.890\nWe got that choice.\n\n306\n00:14:42.890 --> 00:14:47.162\nIf you take a look inside of\na /usr/share/lxc/templates,\n\n307\n00:14:47.162 --> 00:14:52.493\nyou can look in there and you'll see all\nof the templates that were installed.\n\n308\n00:14:52.493 --> 00:14:58.723\nAnd I've got alpine, Arch Linux,\nDebian, CentOS, Gentu.\n\n309\n00:14:58.723 --> 00:15:03.410\nAll of these are containers that\nare built around how those OSes work.\n\n310\n00:15:03.410 --> 00:15:04.040\nSo, for example,\n\n311\n00:15:04.040 --> 00:15:09.380\nif I use the CentOS container,\nthen I'll have the yum install command.\n\n312\n00:15:09.380 --> 00:15:13.573\nBut if I use a Debian container,\nI'll have the apt get command.\n\n313\n00:15:13.573 --> 00:15:15.940\nYou have a different set of commands,\ncuz those distros work differently.\n\n314\n00:15:15.940 --> 00:15:19.030\nThey have a shared kernel, it's all\nthe Linux kernel under the hood, but\n\n315\n00:15:19.030 --> 00:15:21.110\na different set of accompanying commands.\n\n316\n00:15:21.110 --> 00:15:22.380\nIt's configured that way.\n\n317\n00:15:22.380 --> 00:15:24.200\nSo we can make this the way that want it.\n\n318\n00:15:24.200 --> 00:15:27.508\nWe can go Ubuntu or whatever,\nor you can go BusyBox.\n\n319\n00:15:27.508 --> 00:15:31.700\nBusyBox is like the bare minimum, and\nthey'll get command line utilities and\n\n320\n00:15:31.700 --> 00:15:33.880\nsome basic things there,\nand that's it, right?\n\n321\n00:15:33.880 --> 00:15:35.859\nThat is probably the most\nstripped-down one that we could use.\n\n322\n00:15:37.040 --> 00:15:39.794\nAll right, in my case though\nI'm running CentOS as my host.\n\n323\n00:15:39.794 --> 00:15:42.190\nI'm gonna use CentOS for\nthe container as well.\n\n324\n00:15:42.190 --> 00:15:47.252\nSo when I go to create this,\nI can just say lxc-create.\n\n325\n00:15:47.252 --> 00:15:50.348\nAnd then I need to tell a name,\nwhat do I wanna call this?\n\n326\n00:15:50.348 --> 00:15:54.635\nOkay, if this is gonna be a web server,\nthen I would call it web server or\n\n327\n00:15:54.635 --> 00:15:57.851\nlab web server one or\nMariaDB or database server one,\n\n328\n00:15:57.851 --> 00:16:00.728\nwhatever name it is I\nwanna give the container.\n\n329\n00:16:00.728 --> 00:16:04.435\nAnd while the end users don't necessarily\nneed to know this name, it's good for\n\n330\n00:16:04.435 --> 00:16:07.066\nus so that we can tell one\ncontainer apart from the other.\n\n331\n00:16:07.066 --> 00:16:09.020\nCuz if you're gonna manage these,\nyou need to know which is which.\n\n332\n00:16:09.020 --> 00:16:09.590\nSo I give it a name.\n\n333\n00:16:09.590 --> 00:16:13.239\nAnd then after that,\nI tell it what template I want to use.\n\n334\n00:16:13.239 --> 00:16:17.190\nAnd in my scenario, I'm gonna use\n\n335\n00:16:17.190 --> 00:16:23.220\n/user/share/lxc/templates/lxc-centos.\n\n336\n00:16:23.220 --> 00:16:25.210\nThat's the one that I'm gonna use.\n\n337\n00:16:25.210 --> 00:16:28.880\nAnd when I run that, it's gonna go and\nit's gonna build a container.\n\n338\n00:16:28.880 --> 00:16:31.226\nIt checked the template first\nto make sure it could see it.\n\n339\n00:16:31.226 --> 00:16:33.620\nAnd then it reached out and it grabbed it.\n\n340\n00:16:33.620 --> 00:16:35.650\nSo it's just pulling that,\nand it's doing it right now.\n\n341\n00:16:35.650 --> 00:16:38.310\nNow notice what's it's doing,\nit's downloading packages.\n\n342\n00:16:38.310 --> 00:16:40.517\n&gt;&gt; Yeah.\n&gt;&gt; Okay, I chose to do CentOS.\n\n343\n00:16:40.517 --> 00:16:42.543\nI might be running on Debian.\n\n344\n00:16:42.543 --> 00:16:46.920\nAnd so it's gonna go and get all\nthe CentOS packages to match what we have.\n\n345\n00:16:46.920 --> 00:16:51.160\nWe've got a shared kernel, but the\nsurrounding packages have to be installed.\n\n346\n00:16:51.160 --> 00:16:52.855\nAnd so it's reaching out and\ngetting those, and\n\n347\n00:16:52.855 --> 00:16:54.590\ninstalling them in the virtual machine.\n\n348\n00:16:54.590 --> 00:16:57.420\nIt's basically installing CentOS,\nsort of, right?\n\n349\n00:16:57.420 --> 00:16:58.870\nI don't have to worry about a file system.\n\n350\n00:16:58.870 --> 00:17:01.680\nI don't have to worry about a lot of\nthe stuff when we install a distro.\n\n351\n00:17:01.680 --> 00:17:02.920\nHere, it's doing it for me.\n\n352\n00:17:02.920 --> 00:17:06.305\nIf I had done Debian, it would be reaching\nout and getting the Debian packages.\n\n353\n00:17:06.305 --> 00:17:08.860\nOr Ubuntu, it would be getting\nthose from Canonical or wherever.\n\n354\n00:17:08.860 --> 00:17:10.685\nIt's reaching out and it's getting that.\n\n355\n00:17:10.685 --> 00:17:14.229\nAnd then it's building that virtual\nmachine, to get it for me and\n\n356\n00:17:14.229 --> 00:17:15.270\nput in place.\n\n357\n00:17:15.270 --> 00:17:17.560\nAll right, and when it's done,\n\n358\n00:17:17.560 --> 00:17:23.300\nI should be able to see that\ncontainer in /var/lib /lxc.\n\n359\n00:17:23.300 --> 00:17:27.192\nIf I go to that folder and I take a look,\nthere's my container for webserver.\n\n360\n00:17:27.192 --> 00:17:32.437\nAnd if I go into that folder and\ntake a look, I can see a config file.\n\n361\n00:17:32.437 --> 00:17:35.110\nI can see a temporary root password.\n\n362\n00:17:35.110 --> 00:17:36.925\nIt generated a default root password for\nme.\n\n363\n00:17:36.925 --> 00:17:38.610\nSo it's stored in that little text file.\n\n364\n00:17:38.610 --> 00:17:40.790\nAnd then I see rootfs.\n\n365\n00:17:40.790 --> 00:17:44.700\nAnd if I go into rootfs,\nthere's the file system for that install.\n\n366\n00:17:44.700 --> 00:17:46.431\nThis is where chroot comes in, right?\n\n367\n00:17:46.431 --> 00:17:48.277\nchroot lets you virtualize\nthe file system.\n\n368\n00:17:48.277 --> 00:17:51.432\nThis is what the container\nwill see as its file system.\n\n369\n00:17:51.432 --> 00:17:54.131\nSo it has to have bin, and sbin, and etc.\n\n370\n00:17:54.131 --> 00:17:57.742\nAnd all those other things that a machine\nwould expect to have, it's got it.\n\n371\n00:17:57.742 --> 00:18:01.100\nAnd unlike the chroot episode,\nwhere I showed you guys the bare minimum,\n\n372\n00:18:01.100 --> 00:18:03.850\nwe just gave it bash and\nls, and that was it.\n\n373\n00:18:03.850 --> 00:18:06.940\nHere, it's basically got\nthe full distro available to it.\n\n374\n00:18:06.940 --> 00:18:08.740\nBut it's not a virtual machine,\n\n375\n00:18:08.740 --> 00:18:11.500\nbecause it's sharing the kernel\nwith the underlying OS.\n\n376\n00:18:11.500 --> 00:18:16.328\nSo it runs at bare metal speeds,\neven while it's being isolated by chroot,\n\n377\n00:18:16.328 --> 00:18:20.710\nSELinux, AppArmor, and all the other\nvarious things that are behind the scenes.\n\n378\n00:18:20.710 --> 00:18:25.370\nSo that's what we just built up when we\ncreated this webserver, is that it built\n\n379\n00:18:25.370 --> 00:18:28.870\nthis whole file system, set up the chroot,\nset up SELinux, set up all that stuff.\n\n380\n00:18:28.870 --> 00:18:30.830\nAnd now it's here, and it's ready to rock.\n\n381\n00:18:31.860 --> 00:18:36.550\nI can verify it by doing lxc -ls,\n\n382\n00:18:36.550 --> 00:18:39.470\nwhich lists the containers\nthat I have on my system.\n\n383\n00:18:39.470 --> 00:18:41.290\nAnd so I can see I've got webserver.\n\n384\n00:18:41.290 --> 00:18:44.118\nYou can add to that, you can say --active.\n\n385\n00:18:44.118 --> 00:18:46.170\nAnd that will show you\nthe containes that are running.\n\n386\n00:18:46.170 --> 00:18:49.260\nI can see that I have\na webserver container, but\n\n387\n00:18:49.260 --> 00:18:50.430\nI haven't actually started it.\n\n388\n00:18:50.430 --> 00:18:52.719\nIt's not running,\nit's just kinda sitting there.\n\n389\n00:18:52.719 --> 00:18:57.110\nLike a virtual machine you have to power\non, containers you have to power on.\n\n390\n00:18:57.110 --> 00:19:00.490\nThey don't actually boot up, cuz they're\nsharing a kernel that's already booted.\n\n391\n00:19:00.490 --> 00:19:02.910\nThey're accessing a file\nsystem that's already mounted.\n\n392\n00:19:02.910 --> 00:19:04.930\nBut they do have to turn on and\nbecome active.\n\n393\n00:19:04.930 --> 00:19:08.260\nSo I've created it, but\nit's not actually doing anything.\n\n394\n00:19:08.260 --> 00:19:12.640\nSo if I wanna learn more about it,\nI could say lxc -info.\n\n395\n00:19:12.640 --> 00:19:14.639\nAnd it'll give me more\ninformation about it.\n\n396\n00:19:14.639 --> 00:19:16.210\nI didn't give it a name.\n\n397\n00:19:16.210 --> 00:19:18.950\nI need to tell it which container\nI wanna learn more about.\n\n398\n00:19:18.950 --> 00:19:21.120\nAnd I can see webserver,\nI can see that it's stopped.\n\n399\n00:19:21.120 --> 00:19:26.470\nAnd then I can go in and\nI can start it with lxc -start.\n\n400\n00:19:26.470 --> 00:19:31.140\nAnd then I can provide -n,\nand the name is webserver.\n\n401\n00:19:31.140 --> 00:19:33.040\nAll right, now I need to be careful here.\n\n402\n00:19:33.040 --> 00:19:35.740\nIf I run it like this,\nit's gonna to start the container and\n\n403\n00:19:35.740 --> 00:19:37.500\nit's gonna put me in the container.\n\n404\n00:19:37.500 --> 00:19:40.050\nAnd I can't get out of the container\nunless I shut it down again.\n\n405\n00:19:40.050 --> 00:19:44.780\n[CROSSTALK] That's not normally what\nwe want, so I'm gonna add a -d.\n\n406\n00:19:44.780 --> 00:19:48.850\nAnd what that says is run the container,\nbut run it in the background, right?\n\n407\n00:19:48.850 --> 00:19:51.859\nRun it as a daemon,\nrun it as service in the background and\n\n408\n00:19:51.859 --> 00:19:53.560\nget it fired up and going.\n\n409\n00:19:53.560 --> 00:19:57.728\nSo that's gonna start up that webserver,\nand it's gonna run in the background.\n\n410\n00:19:57.728 --> 00:20:02.150\nNow, with a virtual machine,\nif I had assigned it 4 gigs of memory,\n\n411\n00:20:02.150 --> 00:20:05.150\nI would right now be taking 4\ngigs of memory with that VM.\n\n412\n00:20:05.150 --> 00:20:07.480\nBut I never assigned this\ncontainer any memory.\n\n413\n00:20:07.480 --> 00:20:08.720\nAnd that's because I don't have to.\n\n414\n00:20:08.720 --> 00:20:10.440\nIt's sharing the memory on the system.\n\n415\n00:20:10.440 --> 00:20:11.863\nIt uses whatever I've got on my system.\n\n416\n00:20:11.863 --> 00:20:13.980\nSo I've got 32 gigs of\nmemory on my laptop.\n\n417\n00:20:13.980 --> 00:20:16.320\nThat's how much memory is gonna\nbe available inside of this VM.\n\n418\n00:20:16.320 --> 00:20:18.230\nOr actually, shoot,\nI'm remoted into another machine.\n\n419\n00:20:18.230 --> 00:20:21.920\nI think this machine has less memory,\nwhat does it have?\n\n420\n00:20:21.920 --> 00:20:24.520\nIt has 4 gigs of memory.\n\n421\n00:20:24.520 --> 00:20:27.220\nSo whatever memory is available here\nwill be available inside the virtual\n\n422\n00:20:27.220 --> 00:20:28.050\nmachine as well.\n\n423\n00:20:28.050 --> 00:20:30.770\nRight, so not like a virtual\nmachine in that respect.\n\n424\n00:20:30.770 --> 00:20:33.561\nBut it's up and it's running.\n\n425\n00:20:33.561 --> 00:20:38.018\nAnd if I pull up my lxc -ls,\nand I add --active,\n\n426\n00:20:38.018 --> 00:20:41.534\nI can see that webserver is now active.\n\n427\n00:20:41.534 --> 00:20:46.485\nAnd if I do an lxc -info,\nand I pull up -n webserver,\n\n428\n00:20:46.485 --> 00:20:50.016\nI can get some more information on it.\n\n429\n00:20:50.016 --> 00:20:51.528\nIt's running, it's up and it's going.\n\n430\n00:20:51.528 --> 00:20:54.350\nYou can see how much data is moving\nthrough it, its CPU utilization.\n\n431\n00:20:54.350 --> 00:20:58.590\nIt's actually up and doing work, or\nat least sitting there and doing work.\n\n432\n00:20:58.590 --> 00:21:00.100\nBut it's up and it's running.\n\n433\n00:21:00.100 --> 00:21:03.460\nAnd now we're kind of in business,\nit's doing its job.\n\n434\n00:21:03.460 --> 00:21:07.880\nIt's job, though, is not really set up\nbecause I kinda did a default install.\n\n435\n00:21:07.880 --> 00:21:10.300\nSo I've got a little bit\nmore work I need to do.\n\n436\n00:21:10.300 --> 00:21:13.942\nBut as far as getting the container\ncreated and getting it up and running,\n\n437\n00:21:13.942 --> 00:21:14.539\nI'm done.\n\n438\n00:21:14.539 --> 00:21:16.380\nI'm in business, it's up and it's running.\n\n439\n00:21:16.380 --> 00:21:18.010\n&gt;&gt; So now we have a container.\n\n440\n00:21:18.010 --> 00:21:21.340\nHow do we put applications\ninto the container?\n\n441\n00:21:21.340 --> 00:21:24.660\n&gt;&gt; All right, so now we kinda\ntreat it like a virtual machine.\n\n442\n00:21:24.660 --> 00:21:26.770\nWe need to do a default\nconfiguration on it.\n\n443\n00:21:26.770 --> 00:21:28.670\nWe need to get our applications installed.\n\n444\n00:21:28.670 --> 00:21:30.561\nWe need to [INAUDIBLE] our applications,\nor\n\n445\n00:21:30.561 --> 00:21:33.408\nall the stuff that we would\nnormally do when we install, right?\n\n446\n00:21:33.408 --> 00:21:36.025\nThis is all gonna start with\nme getting into the console.\n\n447\n00:21:36.025 --> 00:21:38.025\nI need to get into this virtual machine.\n\n448\n00:21:38.025 --> 00:21:41.345\nWell, to do that,\nI need this temporary password.\n\n449\n00:21:41.345 --> 00:21:45.765\nSo let me pull up what that password is.\n\n450\n00:21:45.765 --> 00:21:47.655\nSo here's the default password.\n\n451\n00:21:47.655 --> 00:21:51.237\nI'm gonna copy that\nwithout any white spaces.\n\n452\n00:21:51.237 --> 00:21:53.980\nAll right, so I'm copying that.\n\n453\n00:21:53.980 --> 00:21:56.190\nJust let me double copy\nto make sure I get it.\n\n454\n00:21:56.190 --> 00:21:57.830\nSo I've copied the password.\n\n455\n00:21:57.830 --> 00:22:04.361\nAnd then I'm gonna run lxc\n-console -n webserver.\n\n456\n00:22:04.361 --> 00:22:06.160\nThis is gonna connect me\nto the webserver's console.\n\n457\n00:22:06.160 --> 00:22:07.640\nIt's running in the background.\n\n458\n00:22:07.640 --> 00:22:10.600\nAnd so when I run that,\nit's gonna connect up so\n\n459\n00:22:10.600 --> 00:22:13.500\nthat I can see inside of that machine.\n\n460\n00:22:13.500 --> 00:22:16.110\nOkay, now when I do it,\nit's gonna give me a little prompt here.\n\n461\n00:22:16.110 --> 00:22:20.570\nAnd you'll see where it's saying\ntype Ctrl+a q, to quit the console.\n\n462\n00:22:20.570 --> 00:22:24.810\nIf I wanna get out of this thing,\nI just hit Ctrl+a, and then q.\n\n463\n00:22:24.810 --> 00:22:27.280\nAnd it drops me right\nback to my other machine.\n\n464\n00:22:27.280 --> 00:22:31.930\nIf I had run this without the -d,\nit would've taken me right in.\n\n465\n00:22:31.930 --> 00:22:35.660\nAnd I wouldn't have had\nthe chance to see this console.\n\n466\n00:22:35.660 --> 00:22:40.405\nBy running it this way, we get connected\nin, and we've got that Ctrl+a q.\n\n467\n00:22:40.405 --> 00:22:43.557\nAnd if you ever need to type a Ctrl+a,\nyou can actually just hit Ctrl+a twice.\n\n468\n00:22:43.557 --> 00:22:45.108\nAnd that will send an actual Ctrl+a,\n\n469\n00:22:45.108 --> 00:22:47.010\ninstead of taking away that shortcut for\nyou.\n\n470\n00:22:47.010 --> 00:22:50.190\nBut that's what's gonna get you in\nthere and get you working with it.\n\n471\n00:22:50.190 --> 00:22:55.307\nIf I stopped it, so\nif I did a lxc -stop -n\n\n472\n00:22:55.307 --> 00:23:00.960\nwebserver, okay, I'm gonna stop it.\n\n473\n00:23:00.960 --> 00:23:02.702\nAnd oops, let's see.\n\n474\n00:23:02.702 --> 00:23:06.365\nlxc, I spelled lxc wrong,\nhow do you spell lxc?\n\n475\n00:23:06.365 --> 00:23:09.327\n&gt;&gt; [LAUGH]\n&gt;&gt; I'll redo that, and\n\n476\n00:23:09.327 --> 00:23:15.568\nif I start it without the -d,\nthen you'll see it'll take me right in.\n\n477\n00:23:15.568 --> 00:23:18.910\nAnd I won't be able to use that\nCtrl+a function to get out of it.\n\n478\n00:23:18.910 --> 00:23:20.320\nIt will just take it a moment to stop.\n\n479\n00:23:20.320 --> 00:23:24.033\nAnd it will take a moment to stop,\ncuz it's actually shutting down the OS.\n\n480\n00:23:24.033 --> 00:23:26.280\nIt's gotta stop the services\nthat are in it, and so on.\n\n481\n00:23:26.280 --> 00:23:29.740\nIt's a shared kernel, so\nit's not actually gonna do a halt.\n\n482\n00:23:29.740 --> 00:23:32.320\nBut it will stop this container and\nbring that down.\n\n483\n00:23:33.380 --> 00:23:36.270\nIt's actually probably a little\nupset about that password.\n\n484\n00:23:36.270 --> 00:23:38.440\nI should have gone in and\nchanged the password.\n\n485\n00:23:38.440 --> 00:23:41.050\nAnyhow, once you connect to the console,\nif you just tap Enter a few times,\n\n486\n00:23:41.050 --> 00:23:41.755\nyou'll get your prompt.\n\n487\n00:23:41.755 --> 00:23:44.248\nThen you log in and\nyou're able to work with the system.\n\n488\n00:23:44.248 --> 00:23:47.360\nI was gonna switch and\nshow the other console [LAUGH.\n\n489\n00:23:47.360 --> 00:23:48.870\nI've just gotta wait and be patient now.\n\n490\n00:23:48.870 --> 00:23:51.190\nThis is where I have my challenge.\n\n491\n00:23:51.190 --> 00:23:54.220\nWhile we're waiting on this though,\nI need to get logged in.\n\n492\n00:23:54.220 --> 00:23:56.403\nJob number one,\nI gotta reset the password.\n\n493\n00:23:56.403 --> 00:23:59.167\nIt set a temporary password and\nit actually set it to be expired.\n\n494\n00:23:59.167 --> 00:24:02.228\nThere was a message,\nI scrolled past it way back here.\n\n495\n00:24:02.228 --> 00:24:03.276\nWhere it warned me here.\n\n496\n00:24:03.276 --> 00:24:07.780\nThe root password is set up, and it's set\nto expire, it's already set to be expired.\n\n497\n00:24:07.780 --> 00:24:11.190\nSo we're gonna be required to reset that\npassword when we get connected, right?\n\n498\n00:24:11.190 --> 00:24:13.510\nSo that's the first little warning\nthere that they're giving me.\n\n499\n00:24:13.510 --> 00:24:16.620\nBut even after that, once we get\ninstalled, once we get in there and\n\n500\n00:24:16.620 --> 00:24:19.320\nchange the password,\nwe may need to do updates.\n\n501\n00:24:19.320 --> 00:24:24.440\nWe may need to install packages,\nand all those other things.\n\n502\n00:24:24.440 --> 00:24:27.180\nSo, now what I'm gonna do\nis I'm gonna start it, and\n\n503\n00:24:27.180 --> 00:24:29.080\nI'm not gonna do a -d this time.\n\n504\n00:24:29.080 --> 00:24:33.030\nAnd when I don't do the -d, we'll\nactually get to see the whole process.\n\n505\n00:24:33.030 --> 00:24:34.120\nSee how's booting up?\n\n506\n00:24:34.120 --> 00:24:35.414\nIt's booting up, it's starting.\n\n507\n00:24:35.414 --> 00:24:38.690\nEach of these little services and\nI can see it here in the screen, and\n\n508\n00:24:38.690 --> 00:24:42.503\nI'm kinda locked into this container now,\nit's in my running environment.\n\n509\n00:24:42.503 --> 00:24:45.371\nAnd then there's my login,\nand I can login as root, and\n\n510\n00:24:45.371 --> 00:24:48.810\nI'm gonna paste in that\npassword that I copied earlier.\n\n511\n00:24:48.810 --> 00:24:51.290\nAnd now it's telling me I've\ngot to change my password.\n\n512\n00:24:51.290 --> 00:24:54.300\nSo, I'll provide password,\n\n513\n00:24:54.300 --> 00:25:00.216\nI'll punch in a new password to use,\nand let me just do that.\n\n514\n00:25:00.216 --> 00:25:03.108\nAll right, so\nnow the root password has been changed.\n\n515\n00:25:03.108 --> 00:25:05.064\nAnd I'm in my system, and from here,\n\n516\n00:25:05.064 --> 00:25:08.580\nI'm in the server that's called\nweb surround in a container.\n\n517\n00:25:08.580 --> 00:25:13.241\nI'm using a shared [INAUDIBLE] with my\nunderlying OS, but I don't know that.\n\n518\n00:25:13.241 --> 00:25:17.153\nI now just go and treat this\nlike any other Operating System,\n\n519\n00:25:17.153 --> 00:25:21.077\nif I wanted to be a web server,\nI would do a yum install httpd.\n\n520\n00:25:21.077 --> 00:25:22.690\nAnd we get that installed.\n\n521\n00:25:22.690 --> 00:25:26.210\nSo it's gonna reach out,\nfind those libraries and package files,\n\n522\n00:25:26.210 --> 00:25:27.660\ndownload them, install them.\n\n523\n00:25:27.660 --> 00:25:29.990\nAnd then, I just start the service and\ngo through my configuration.\n\n524\n00:25:29.990 --> 00:25:33.580\nI treat this like any other server,\nall right?\n\n525\n00:25:33.580 --> 00:25:37.160\nIn fact, as I go through it, there's other\nthings like configuring the networking,\n\n526\n00:25:37.160 --> 00:25:38.020\nand the firewall.\n\n527\n00:25:38.020 --> 00:25:40.280\nI might have firewall d\nrunning inside of here.\n\n528\n00:25:40.280 --> 00:25:42.310\nSo I need to open up\nports in the firewall.\n\n529\n00:25:42.310 --> 00:25:46.390\nI might have a static IP that I\nwanna assign to this machine.\n\n530\n00:25:46.390 --> 00:25:48.710\nThe default is that it's\ngonna have a natted IP,\n\n531\n00:25:48.710 --> 00:25:52.510\na virtual IP address that's being\nnatted behind our hosts IP.\n\n532\n00:25:52.510 --> 00:25:59.290\nSo if I do like IP ADDR, see how I've got\nthis ETH zero or ethernet zero interface.\n\n533\n00:25:59.290 --> 00:26:01.140\nAnd then it's got a 192.168.122 address.\n\n534\n00:26:01.140 --> 00:26:04.100\nI didn't assign that.\n\n535\n00:26:04.100 --> 00:26:06.160\nAnd that's not a network\nhere in the building.\n\n536\n00:26:06.160 --> 00:26:10.217\nThat's an added address that it's created,\na fake network it's created to use for\n\n537\n00:26:10.217 --> 00:26:11.200\nthese containers.\n\n538\n00:26:11.200 --> 00:26:15.280\nBut it's got it, and if I were to try and\nreach out to the Internet, I can get it.\n\n539\n00:26:15.280 --> 00:26:17.410\nI've got Internet access\ninside of this container.\n\n540\n00:26:17.410 --> 00:26:20.580\nI don't have a virtualized network adapter\nthat I have to worry about talking to.\n\n541\n00:26:20.580 --> 00:26:23.290\nI'm talking to the real network adapter,\nand I'm able to reach out.\n\n542\n00:26:23.290 --> 00:26:25.830\nOr actually in this case,\nI'm talking to a bridge,\n\n543\n00:26:25.830 --> 00:26:28.150\nbecause it's got a NAT before\nit hits the real adapter.\n\n544\n00:26:28.150 --> 00:26:29.396\nBut, but that's easy you know.\n\n545\n00:26:29.396 --> 00:26:33.660\nSo that's all happening,\nI installed the, what did I install?\n\n546\n00:26:33.660 --> 00:26:34.230\nApache.\n\n547\n00:26:34.230 --> 00:26:36.688\nSo I could say systemctl.\n\n548\n00:26:38.542 --> 00:26:40.230\nAs soon as, there you go.\n\n549\n00:26:40.230 --> 00:26:41.870\nsystemctl.\n\n550\n00:26:41.870 --> 00:26:45.980\nAnd I want to enable --now httpd.\n\n551\n00:26:45.980 --> 00:26:48.730\nSo that's gonna get it created and\nstart it up.\n\n552\n00:26:48.730 --> 00:26:52.370\nAnd, I got a failure, so\nI might have a dependency, or\n\n553\n00:26:52.370 --> 00:26:53.705\na configuration that's a problem, right?\n\n554\n00:26:53.705 --> 00:26:54.880\n&gt;&gt; Mm-hm.\n&gt;&gt; So, I need to go in and\n\n555\n00:26:54.880 --> 00:26:59.100\nstart to configure those, which we can\ntroubleshoot, but I don't want this to be\n\n556\n00:26:59.100 --> 00:27:01.070\nin a Apache show, so-\n&gt;&gt; [LAUGH]\n\n557\n00:27:01.070 --> 00:27:01.990\n&gt;&gt; So you need to do your\n\n558\n00:27:01.990 --> 00:27:02.704\nconfiguration,\n&gt;&gt; Mm-hm,\n\n559\n00:27:02.704 --> 00:27:05.575\n&gt;&gt; And as you look at the file system,\n\n560\n00:27:05.575 --> 00:27:09.090\nI see the full file system, right?\n\n561\n00:27:09.090 --> 00:27:13.070\nWell no, I'm actually seeing the CH\nthrough jail for this container.\n\n562\n00:27:13.070 --> 00:27:18.631\nAnd so, when I go in here,\nand I go into /ETC/HDBD/comf,\n\n563\n00:27:18.631 --> 00:27:26.540\nand I start looking at this HDBD.comf\nfile I'm seeing /etc's/HDBD/comf.\n\n564\n00:27:26.540 --> 00:27:30.432\nBut I'm actually seeing\n\n565\n00:27:30.432 --> 00:27:40.180\n/var/lib/lxc/webserver/rudefs/ and\nthen, so on.\n\n566\n00:27:40.180 --> 00:27:43.030\nIt's actually far,\nfar more nested in the actual file system.\n\n567\n00:27:43.030 --> 00:27:44.190\nI'm seeing a jail here,\n\n568\n00:27:44.190 --> 00:27:46.820\nthis is what I'm seeing, but\nI can modify the configuration.\n\n569\n00:27:46.820 --> 00:27:48.000\nI can start the service.\n\n570\n00:27:48.000 --> 00:27:53.780\nIt's got it's own firewall that\nI can go in and configure.\n\n571\n00:27:53.780 --> 00:27:55.260\nFirewall is not installed.\n\n572\n00:27:55.260 --> 00:27:57.426\nI can install firewall C and\nD if I wanted it, or\n\n573\n00:27:57.426 --> 00:27:59.381\nI could control it from the host, right?\n\n574\n00:27:59.381 --> 00:28:02.187\nThis point,\nI just treat it like any other machine.\n\n575\n00:28:02.187 --> 00:28:06.181\nI install my packages, I configure them,\nI get them up and running, and\n\n576\n00:28:06.181 --> 00:28:08.060\nI let them do their thing.\n\n577\n00:28:08.060 --> 00:28:11.260\nI tell you, treat it just like\na normal system, so it's kinda neat.\n\n578\n00:28:11.260 --> 00:28:13.220\nAnd it's running at great speeds,\n\n579\n00:28:13.220 --> 00:28:17.410\nbecause of the shared access\nto the kernel underneath.\n\n580\n00:28:17.410 --> 00:28:20.800\n&gt;&gt; So you did some awesome work showing\nus how to get the container up and\n\n581\n00:28:20.800 --> 00:28:23.192\nrunning, and\nputting applications inside of it.\n\n582\n00:28:23.192 --> 00:28:26.290\nOkay, so now what happens if you\nwanna get rid of the container?\n\n583\n00:28:26.290 --> 00:28:29.050\n[LAUGH]\n&gt;&gt; Sure, so, If I just want to shut\n\n584\n00:28:29.050 --> 00:28:32.280\nit down, if I'm in the console, I can\nshut it down just like anything else.\n\n585\n00:28:32.280 --> 00:28:34.880\nI can say, shutdown -h now.\n\n586\n00:28:34.880 --> 00:28:37.477\nAnd normally, I would tell it to\nshut down and power off, right?\n\n587\n00:28:37.477 --> 00:28:40.769\nWell here, it's gonna shut down and\npower off the container.\n\n588\n00:28:40.769 --> 00:28:43.480\nMy [INAUDIBLE] OS is still up and\nrunning, right?\n\n589\n00:28:43.480 --> 00:28:45.900\nThat was unaffected,\njust shut down the container.\n\n590\n00:28:45.900 --> 00:28:47.070\nOr, if I wasn't in the container,\n\n591\n00:28:47.070 --> 00:28:50.680\nI could have done an lxd-stop, which I\ndid a minute ago, you guys saw that.\n\n592\n00:28:50.680 --> 00:28:53.920\nAnd that would go in and stop it,\nif it was already running.\n\n593\n00:28:53.920 --> 00:28:55.100\nSo that's how we would stop it.\n\n594\n00:28:55.100 --> 00:28:58.570\nAnd then if I wanted to get rid of it,\nwe do lxc-destroy.\n\n595\n00:28:58.570 --> 00:29:00.974\nThe coolest command we'll run today.\n\n596\n00:29:00.974 --> 00:29:03.208\n&gt;&gt; [LAUGH]\n&gt;&gt; We're not gonna delete it,\n\n597\n00:29:03.208 --> 00:29:05.070\nwe're not gonna remove it.\n\n598\n00:29:05.070 --> 00:29:05.990\nWe're gonna destroy it.\n\n599\n00:29:05.990 --> 00:29:07.884\n[LAUGH]\n&gt;&gt; That's what I was looking for,\n\n600\n00:29:07.884 --> 00:29:08.631\nsomething like that.\n\n601\n00:29:08.631 --> 00:29:12.317\n&gt;&gt; So there we go,\nI spelled destroy wrong.\n\n602\n00:29:12.317 --> 00:29:15.390\nI'm my own worst enemy on this stuff,\nthere we go.\n\n603\n00:29:15.390 --> 00:29:19.076\nSo I'm doing a lxc-destroy,\nmain web server container is not defined,\n\n604\n00:29:19.076 --> 00:29:21.070\nthat's an interesting one.\n\n605\n00:29:21.070 --> 00:29:23.431\nLet me just do -n.\n\n606\n00:29:23.431 --> 00:29:25.100\nMake sure, there we go.\n\n607\n00:29:25.100 --> 00:29:32.312\nI should have done --name, or a single -n,\nso, -n webserver, that deletes it.\n\n608\n00:29:32.312 --> 00:29:34.290\nShoot, I was in the folder\nwhen I did that.\n\n609\n00:29:34.290 --> 00:29:36.040\nI shouldn't have been.\n\n610\n00:29:36.040 --> 00:29:37.510\nI was in it's folder when I deleted it.\n\n611\n00:29:37.510 --> 00:29:39.631\nIf I wasn't,\nit would of actually removed that folder.\n\n612\n00:29:39.631 --> 00:29:41.810\nWait, actually it did remove the folder,\nlook at that.\n\n613\n00:29:41.810 --> 00:29:42.795\nSo-\n&gt;&gt; It's magic.\n\n614\n00:29:42.795 --> 00:29:45.380\n&gt;&gt; [LAUGH] I didn't think it\nwould remove it, cuz I was in it.\n\n615\n00:29:45.380 --> 00:29:47.070\nBut it did actually remove it.\n\n616\n00:29:47.070 --> 00:29:48.890\nGot it out of there, and\nkinda took care of that.\n\n617\n00:29:48.890 --> 00:29:51.350\nSo, LXC containers.\n\n618\n00:29:51.350 --> 00:29:52.830\nThe main lesson here is-\n&gt;&gt; Yeah.\n\n619\n00:29:52.830 --> 00:29:54.630\n&gt;&gt; That they're pretty easy to use.\n\n620\n00:29:54.630 --> 00:29:56.710\nPretty easy to spin up,\nand they run great.\n\n621\n00:29:56.710 --> 00:29:58.140\nThey give you good isolation.\n\n622\n00:29:58.140 --> 00:30:00.860\nYou don't need a crazy\nvirtualization environment.\n\n623\n00:30:00.860 --> 00:30:04.489\nYou can just use a container like this,\nand it gives you that security,\n\n624\n00:30:04.489 --> 00:30:07.941\ngives that performance without all\nthat extra overhead of managing\n\n625\n00:30:07.941 --> 00:30:09.652\na virtualization environment.\n\n626\n00:30:09.652 --> 00:30:13.598\nNow, there are advantages to\na virtualization environment like\n\n627\n00:30:13.598 --> 00:30:16.181\nreplication and automatic fail over, and\n\n628\n00:30:16.181 --> 00:30:19.470\nstuff if you don't have\nwith LXC containers.\n\n629\n00:30:19.470 --> 00:30:23.640\nBut if you're just trying to isolate for\nsecurity purposes, these work really well.\n\n630\n00:30:23.640 --> 00:30:26.940\nAnd you can even use them on top of\nvirtualization technologies if you want.\n\n631\n00:30:26.940 --> 00:30:29.410\nSo, there's a lot of different\nbenefits that are there, and\n\n632\n00:30:29.410 --> 00:30:32.280\ndefinitely a technology\nthat you wanna explore.\n\n633\n00:30:32.280 --> 00:30:33.720\n&gt;&gt; Awesome episode, LXC containers.\n\n634\n00:30:33.720 --> 00:30:37.074\nNow we know more about them than\nwe probably wanted to know.\n\n635\n00:30:37.074 --> 00:30:38.657\n&gt;&gt; [LAUGH]\n&gt;&gt; Any last words, Don?\n\n636\n00:30:38.657 --> 00:30:40.601\n&gt;&gt; That's really it for LXC.\n\n637\n00:30:40.601 --> 00:30:43.457\nYou might find some\ninformation on LXD out there,\n\n638\n00:30:43.457 --> 00:30:46.721\nwhich is really just Linux containers,\none is a daemon.\n\n639\n00:30:46.721 --> 00:30:50.820\nSo it starts to get more like\na virtualization technology at that point.\n\n640\n00:30:50.820 --> 00:30:55.620\nBut LXD is just an extension of LXC,\nand so you'll see that out there.\n\n641\n00:30:55.620 --> 00:30:59.460\nAnd you may see some articles\nabout how people say LXC is dying,\n\n642\n00:30:59.460 --> 00:31:01.280\ncuz Red Hat isn't supporting it.\n\n643\n00:31:01.280 --> 00:31:02.864\nWell, Red Hat doesn't\nsupport a lot of things, and\n\n644\n00:31:02.864 --> 00:31:04.830\nthey're still perfectly healthy and\nup and running.\n\n645\n00:31:04.830 --> 00:31:09.850\nSo Ubuntu and Debian, they love LXC,\nthey fund quite a bit of it.\n\n646\n00:31:09.850 --> 00:31:13.120\nSo if those two like it,\ntheir install base is huge,\n\n647\n00:31:13.120 --> 00:31:14.160\nit's gonna be around a while.\n\n648\n00:31:14.160 --> 00:31:16.210\nSo if you haven't used it,\ndefinitely take a look at it.\n\n649\n00:31:16.210 --> 00:31:19.760\nIt's very stable, very mature, and\nit gives you great isolation and\n\n650\n00:31:19.760 --> 00:31:20.630\ngreat performance.\n\n651\n00:31:20.630 --> 00:31:23.610\n&gt;&gt; And you delivered the information\nvery well, sir, once again.\n\n652\n00:31:23.610 --> 00:31:27.910\nAnd, there is a lot of episodes in\nthe Linux security techniques series.\n\n653\n00:31:27.910 --> 00:31:30.600\nMake sure you watch all of them\nbecause you'll be glad you did.\n\n654\n00:31:30.600 --> 00:31:33.080\nAnd thank you for watching ITPro.TV.\n\n655\n00:31:33.080 --> 00:31:35.500\nRemember, a good IT Pro\nis always learning.\n\n656\n00:31:35.500 --> 00:31:37.400\nI'm Zach Memos\n&gt;&gt; And I'm Don Pezet.\n\n657\n00:31:37.400 --> 00:31:40.481\n&gt;&gt; And we'll see you again soon.\n\n658\n00:31:40.481 --> 00:31:45.598\n[MUSIC]\n\n659\n00:31:45.598 --> 00:31:50.214\n&gt;&gt; Thank you for watching, ITPRO.TV.\n\n",
          "vimeoId": "230152156"
        }
      ],
      "title": "Securing Services"
    },
    {
      "episodes": [
        {
          "description": "Don and Zach talk about what TCP Wrappers are, how we can determine if a service supports TCP Wrappers, how we enable TCP Wrappers for a service, allowing access to more than one service at a time, option fields, generating log messages, SPAWN, EXPANSIONS, TWIST, configuring rules, and restricting access to SSH.",
          "length": "1852",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-4-1-tcp_wrappers-081817-PGM.00_30_36_29.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-4-1-tcp_wrappers-081817-PGM.00_30_36_29.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-4-1-tcp_wrappers-081817-PGM.00_30_36_29.Still001-sm.jpg",
          "title": "TCP Wrappers",
          "transcript": "WEBVTT\n\n1\n00:00:00.005 --> 00:00:02.273\nWelcome to ITProTV I'm your host Don.\n\n2\n00:00:02.273 --> 00:00:06.316\n[CROSSTALK]\n\n3\n00:00:06.316 --> 00:00:08.276\n[MUSIC]\n\n4\n00:00:08.276 --> 00:00:11.404\nYou're watching ITProTV.\n\n5\n00:00:11.404 --> 00:00:14.550\n&gt;&gt; Hello, and thank you for\njoining us in ITProTV.\n\n6\n00:00:14.550 --> 00:00:17.220\nHelping you learn wherever you go.\n\n7\n00:00:17.220 --> 00:00:18.050\nI'm your host Zach Memos.\n\n8\n00:00:18.050 --> 00:00:20.890\nAs we continue with Linux\nsecurity techniques.\n\n9\n00:00:20.890 --> 00:00:23.258\nAnd we're gonna be\nlooking at TCP Wrappers.\n\n10\n00:00:23.258 --> 00:00:24.090\nWhat are those?\n\n11\n00:00:24.090 --> 00:00:25.610\n&gt;&gt; [LAUGH]\n&gt;&gt; Let's find out,\n\n12\n00:00:25.610 --> 00:00:26.880\nDon Pezet's gonna tell us.\n\n13\n00:00:26.880 --> 00:00:27.788\nDon, thanks for being here.\n\n14\n00:00:27.788 --> 00:00:30.621\n&gt;&gt; Well, shoot, Zach, I was kinda\nhoping you would cover this one.\n\n15\n00:00:30.621 --> 00:00:35.575\n[LAUGH]\n&gt;&gt; [LAUGH] I can venture a guess.\n\n16\n00:00:35.575 --> 00:00:37.060\n[LAUGH]\n&gt;&gt; In this episode,\n\n17\n00:00:37.060 --> 00:00:41.320\nwe're gonna talk about TCP Wrappers, which\nare transmission control protocol wrappers\n\n18\n00:00:41.320 --> 00:00:46.740\nIt's a little add-on that can be stuck\nonto pretty much any network service.\n\n19\n00:00:46.740 --> 00:00:49.150\nAnd allow us to filter access to it.\n\n20\n00:00:49.150 --> 00:00:52.960\nWe can control who is allowed to connect\nor who's not allowed to connect.\n\n21\n00:00:52.960 --> 00:00:59.600\nThis is really what ultimately became\nthe first versions of a software firewall.\n\n22\n00:00:59.600 --> 00:01:03.170\nNow we have firewalld, we have IP tables,\n\n23\n00:01:03.170 --> 00:01:07.910\nor PF, NG tables, all these\ndifferent software firewall options.\n\n24\n00:01:07.910 --> 00:01:10.530\nAnd if you wanna set\nthat up on a Linux box.\n\n25\n00:01:10.530 --> 00:01:14.778\nBut in the olden days, [CROSSTALK] before\nwe had all that stuff, you TCP Wrappers.\n\n26\n00:01:14.778 --> 00:01:17.840\nIt was the first real chance\nthat we got to use this.\n\n27\n00:01:17.840 --> 00:01:20.350\nAnd while it refer to\nit as the olden days,\n\n28\n00:01:20.350 --> 00:01:23.500\nTCP Wrappers are still going strong today,\nyou still have them.\n\n29\n00:01:23.500 --> 00:01:27.330\nAnd I use the myself to control\nthings like SSH sessions.\n\n30\n00:01:27.330 --> 00:01:32.260\nAnd we'll see that as far as basic\ncontrol, allowing somebody in or\n\n31\n00:01:32.260 --> 00:01:34.750\ndenying somebody in,\nyou can do that with a firewall.\n\n32\n00:01:34.750 --> 00:01:38.760\nAnd so if you have a software firewall,\nyou might not need TCP Wrappers at all.\n\n33\n00:01:38.760 --> 00:01:43.080\nBut a lot of people don't realize that\nTCP Wrappers can do more than just\n\n34\n00:01:43.080 --> 00:01:44.900\nfilter some basic access.\n\n35\n00:01:44.900 --> 00:01:47.700\nAnd that's why there's still a use for\nthem today.\n\n36\n00:01:47.700 --> 00:01:49.790\nIf you know they're there and\nif you know to take advantage of it.\n\n37\n00:01:49.790 --> 00:01:52.955\nSo in this episode we're gonna\nlearn about A TCP Wrappers.\n\n38\n00:01:52.955 --> 00:01:54.010\nWe'll see how to do it and\n\n39\n00:01:54.010 --> 00:01:55.790\nin the beginning don't get\ndiscouraged if you look at it and\n\n40\n00:01:55.790 --> 00:01:57.550\nsay this is stupid I'm\ngonna sue a firewall.\n\n41\n00:01:57.550 --> 00:01:59.000\n&gt;&gt; [LAUGH]\n&gt;&gt; I don't blame you,\n\n42\n00:01:59.000 --> 00:02:02.050\nand for the first ten minutes yeah,\nwe're gonna do firewally type stuff.\n\n43\n00:02:02.050 --> 00:02:04.780\nBut then towards the end of the episode\nI'm gonna tackle some of the other things\n\n44\n00:02:04.780 --> 00:02:06.910\nwe can do with TCP Wrappers\nthat are little more advanced,\n\n45\n00:02:06.910 --> 00:02:11.500\na little fancier that really help\nus to control access to the system.\n\n46\n00:02:11.500 --> 00:02:16.720\nAnd I will tell you guys, when I deploy\ninstances in Amazon Web Services.\n\n47\n00:02:16.720 --> 00:02:18.850\nSo I go to Amazon Web Services EC2,\n\n48\n00:02:18.850 --> 00:02:22.890\nand deploy instances in the cloud,\nI use TCP Wrappers on there.\n\n49\n00:02:22.890 --> 00:02:26.770\nAnd the reason is, they control the\nsoftware firewall through their system.\n\n50\n00:02:26.770 --> 00:02:28.470\nI like to have a little\nmore control myself.\n\n51\n00:02:28.470 --> 00:02:31.680\nAnd so TCP Wrappers are still\nsomething that we can make and\n\n52\n00:02:31.680 --> 00:02:33.170\nmake use of today, and\nit's kind of built in.\n\n53\n00:02:33.170 --> 00:02:35.870\nSo that's what we're gonna look\nat right here in this episode.\n\n54\n00:02:35.870 --> 00:02:38.780\n&gt;&gt; Well now I'm definitely intrigued,\ncan you get a little bit\n\n55\n00:02:38.780 --> 00:02:41.730\ndeeper about the TCP Wrappers,\nwhat are they and how we can use them?\n\n56\n00:02:41.730 --> 00:02:44.060\n&gt;&gt; Sure, so basically the idea, and\n\n57\n00:02:44.060 --> 00:02:47.110\nremember this all came about before\nsoftware firewalls is really a thing.\n\n58\n00:02:48.200 --> 00:02:50.020\nWas that people had services.\n\n59\n00:02:50.020 --> 00:02:54.390\nSo you had things like SSH and\nTelnet and FTP and whatever.\n\n60\n00:02:54.390 --> 00:02:57.350\nAnd they all needed\na way to filter traffic.\n\n61\n00:02:57.350 --> 00:02:59.200\nIt was kind of left up\nto them to develop it.\n\n62\n00:02:59.200 --> 00:03:01.970\nWell, most of the people who\nare developing software like that aren't\n\n63\n00:03:01.970 --> 00:03:02.780\nsecurity focused.\n\n64\n00:03:02.780 --> 00:03:03.920\nThey're more feature focused.\n\n65\n00:03:03.920 --> 00:03:04.840\nSo they just weren't doing it.\n\n66\n00:03:04.840 --> 00:03:06.760\nThere really wasn't something in place.\n\n67\n00:03:06.760 --> 00:03:10.167\nSo they came up with this kind of\nstandard solution, TCP Wrappers.\n\n68\n00:03:10.167 --> 00:03:13.109\nThey created a library called LibWrap, and\n\n69\n00:03:13.109 --> 00:03:17.253\nthe wrapper library could easily\nbe tacked on to any service.\n\n70\n00:03:17.253 --> 00:03:21.600\nAnd then any connection coming into\nthat service could be quickly filtered.\n\n71\n00:03:21.600 --> 00:03:26.120\nAnd so services like SSH and\nxinetd, that powers TelNet,\n\n72\n00:03:26.120 --> 00:03:31.810\nvsftpd, they added that support to be\nable to leverage the TCP Wrappers.\n\n73\n00:03:31.810 --> 00:03:36.460\nAnd so once that's done, we then have some\ncontrol files we can define to specify\n\n74\n00:03:36.460 --> 00:03:40.260\nwhat IP addresses or what users can\ncome in, which ones are denied.\n\n75\n00:03:40.260 --> 00:03:43.760\nAnd it basically becomes\na software firewall just for\n\n76\n00:03:43.760 --> 00:03:45.590\nthat one particular service.\n\n77\n00:03:45.590 --> 00:03:47.290\nIt leaves the rest of the system alone.\n\n78\n00:03:47.290 --> 00:03:51.810\nAnd if services choose to ignore libwrap\nand not use it, they can do that, right?\n\n79\n00:03:51.810 --> 00:03:54.150\nThey don't have to use it,\nin fact many services don't.\n\n80\n00:03:54.150 --> 00:03:57.636\nSo in those scenarios it was really\ndesigned to be an easy solution for\n\n81\n00:03:57.636 --> 00:03:58.246\nsecurity.\n\n82\n00:03:58.246 --> 00:04:02.036\nAnd today we have software firewalls\nthat can kind of fit that mold, but\n\n83\n00:04:02.036 --> 00:04:04.130\nin the olden days we didn't have that.\n\n84\n00:04:04.130 --> 00:04:07.310\nAnd so libwrap became that solution.\n\n85\n00:04:07.310 --> 00:04:12.880\nIt's supported today in every Linux\ndistro that I've touched I haven't yet\n\n86\n00:04:12.880 --> 00:04:16.060\nto encounter a distro that didn't\nhave support for TCP Wrappers.\n\n87\n00:04:16.060 --> 00:04:19.860\nIt's baked in and it's actually supported\nin a lot of other Linux based Os'\n\n88\n00:04:19.860 --> 00:04:22.050\nlike OSD and then platforms like that too.\n\n89\n00:04:22.050 --> 00:04:26.160\nSo it's really prevalent and it's one\nthat we kind of count on being there.\n\n90\n00:04:26.160 --> 00:04:29.690\nSo you'll see it and it's just something\nwe can use to help increase that security.\n\n91\n00:04:29.690 --> 00:04:32.420\n&gt;&gt; So how do we know if\na service supports TCP Wrappers?\n\n92\n00:04:32.420 --> 00:04:33.542\n&gt;&gt; That's really where we need to start.\n\n93\n00:04:33.542 --> 00:04:36.150\nBecause if I'm trying\nto secure a service and\n\n94\n00:04:36.150 --> 00:04:40.414\nit doesn't support the TCP Wrappers\nthen this whole thing is pointless.\n\n95\n00:04:40.414 --> 00:04:42.570\nAnd I'll have to use a software firewall.\n\n96\n00:04:42.570 --> 00:04:46.350\nSo for example, I need to find out if\n\n97\n00:04:46.350 --> 00:04:51.660\nthey're using the libwrap DLL,\nif they're pulling that library file in.\n\n98\n00:04:51.660 --> 00:04:55.610\nIf they're doing that,\nthen they support the TCP Wrappers, right?\n\n99\n00:04:55.610 --> 00:04:56.750\nSo I mentioned SSH.\n\n100\n00:04:56.750 --> 00:04:58.200\nThat's how I normally use this.\n\n101\n00:04:58.200 --> 00:05:00.970\nIf I wanna verify,\nI can use a utility called ldd.\n\n102\n00:05:00.970 --> 00:05:04.360\nldd shows you the dependencies\nthat a program has.\n\n103\n00:05:04.360 --> 00:05:05.810\nAnd I can run ldd.\n\n104\n00:05:05.810 --> 00:05:07.950\nAnd I can point it at SSH.\n\n105\n00:05:07.950 --> 00:05:12.070\nNow if I don't know where SSH is,\nI can do a, which sshd,\n\n106\n00:05:12.070 --> 00:05:15.870\nand it'll tell me where on my\nhard drive that daemon resides.\n\n107\n00:05:15.870 --> 00:05:20.110\nSo if I'm testing Apache,\nor SSH, or whatever,\n\n108\n00:05:20.110 --> 00:05:23.200\nI can come in and I can do this,\nand I can find where they reside.\n\n109\n00:05:23.200 --> 00:05:28.815\nSo maybe I also have a database server,\nactually let me sudo this real quick.\n\n110\n00:05:28.815 --> 00:05:31.550\nI'm gonna bump up to a root-shell so\n\n111\n00:05:31.550 --> 00:05:33.680\nI don't have to bump\ninto to many permissions.\n\n112\n00:05:33.680 --> 00:05:36.135\nAnd I'll install mariadb.\n\n113\n00:05:36.135 --> 00:05:38.740\nOops, shoot I wanted mariadb server.\n\n114\n00:05:38.740 --> 00:05:44.050\nThat's what I wanted so\nlet's add that mariadb.server.\n\n115\n00:05:44.050 --> 00:05:44.680\nThere we go.\n\n116\n00:05:44.680 --> 00:05:46.170\nSo I'm gonna install mariadb as well.\n\n117\n00:05:46.170 --> 00:05:48.920\nSo I'll have SSAs, but\nI'll also have mariadb.\n\n118\n00:05:48.920 --> 00:05:51.970\nAnd I can come in here, and\n\n119\n00:05:51.970 --> 00:05:56.595\nI can take a look at, whether or\nnot they support that service.\n\n120\n00:05:56.595 --> 00:05:58.710\n&gt;&gt; Mm-hm.\n&gt;&gt; So I can say like which sshd,\n\n121\n00:05:58.710 --> 00:06:00.960\nand it will find it on my hard drive.\n\n122\n00:06:00.960 --> 00:06:06.950\nAnd then, I can say ldd /sbin/sshd,\nthat's where mine is, right?\n\n123\n00:06:06.950 --> 00:06:12.550\nAnd when I do that, it'll show me all\nthe libraries that sshd depends on.\n\n124\n00:06:12.550 --> 00:06:14.110\nAnd there's quite a few, so\n\n125\n00:06:14.110 --> 00:06:18.850\nI normally grip this oops,\nto save me a little bit of time.\n\n126\n00:06:18.850 --> 00:06:21.580\nLet me get out of that, there we go.\n\n127\n00:06:21.580 --> 00:06:26.170\nAnd so\nI'm going to re run that ldd/sbim/sshd and\n\n128\n00:06:26.170 --> 00:06:30.680\nI'm going to grip for libwrap and\nI'm going to look for that.\n\n129\n00:06:30.680 --> 00:06:31.520\nAnd there it is.\n\n130\n00:06:31.520 --> 00:06:36.780\nSo sure enough sshd includes libwrap so\nI know that I've got that support.\n\n131\n00:06:37.860 --> 00:06:45.560\nBut if I installed something like mysql or\nmariadb, and I can find it.\n\n132\n00:06:45.560 --> 00:06:49.074\nLet's see it, mariadb-server, and oops.\n\n133\n00:06:49.074 --> 00:06:55.085\nActually, I am not finding it, so it's\ntucked away somewhere [LAUGH] In mysqld or\n\n134\n00:06:55.085 --> 00:06:57.180\nthere you go, /bin/mysql.\n\n135\n00:06:57.180 --> 00:07:02.381\nSo I can come in and\nI can say ldd /bin/mysql and\n\n136\n00:07:02.381 --> 00:07:06.810\nI can look and I can try and spot libwrap.\n\n137\n00:07:06.810 --> 00:07:14.010\nAnd if I grip this one for\nlibwrap I get nothing, right?\n\n138\n00:07:14.010 --> 00:07:17.580\nSo it doesn't have support for\nlibwrap built into it.\n\n139\n00:07:17.580 --> 00:07:19.500\nI will not be able to use\nTCP Wrappers with that one.\n\n140\n00:07:19.500 --> 00:07:23.390\nSo it's important that you\ncheck that first, all right?\n\n141\n00:07:23.390 --> 00:07:25.710\nWell, I use TCP Wrappers to secure SSH.\n\n142\n00:07:25.710 --> 00:07:28.980\nThat's where I use it, and\nSSH has that support so that's good.\n\n143\n00:07:28.980 --> 00:07:32.580\nVSFTPD is another one so\nif you've got an FTP server set up.\n\n144\n00:07:32.580 --> 00:07:35.580\nIf you're doing SFTP\nthat's done through SSH so\n\n145\n00:07:35.580 --> 00:07:37.690\nwe can use TCP Wrappers there as well.\n\n146\n00:07:37.690 --> 00:07:42.280\nSome of the other ones that are out there,\nRPC Bind which is used as part of\n\n147\n00:07:43.780 --> 00:07:46.720\nSamba, so\nwe can use that to control access there.\n\n148\n00:07:46.720 --> 00:07:49.844\nSo there's several different services that\nare available that actually have this kind\n\n149\n00:07:49.844 --> 00:07:51.033\nof built into it, so just check.\n\n150\n00:07:51.033 --> 00:07:53.965\nUse LDD, and if you see a libwrap,\nthen you'll know it's supported.\n\n151\n00:07:53.965 --> 00:07:55.537\nAnd you'll be able to\nuse the TCP Wrappers.\n\n152\n00:07:55.537 --> 00:07:57.971\n&gt;&gt; So how do we enable TCP Wrappers for\na service?\n\n153\n00:07:57.971 --> 00:08:01.043\nAll right,\nwell technically it's already enabled.\n\n154\n00:08:01.043 --> 00:08:01.612\n&gt;&gt; Right.\n\n155\n00:08:01.612 --> 00:08:05.780\n&gt;&gt; When they include that library,\nthey're now using the wrappers.\n\n156\n00:08:05.780 --> 00:08:07.750\nThe thing is the wrappers just\naren't configured, right.\n\n157\n00:08:07.750 --> 00:08:09.340\nSo let me show you how\nthe configuration works.\n\n158\n00:08:09.340 --> 00:08:09.900\n&gt;&gt; Okay.\n\n159\n00:08:09.900 --> 00:08:15.150\n&gt;&gt; If you go into /etc and you look\nat all the files that are in there,\n\n160\n00:08:15.150 --> 00:08:20.900\nyou're gonna find two files,\nhosts.allow and host.deny.\n\n161\n00:08:20.900 --> 00:08:27.392\nThose two files are what powers\nthe TCP wrappers, if I can say it.\n\n162\n00:08:27.392 --> 00:08:29.330\n&gt;&gt; [LAUGH]\n&gt;&gt; Hosts.allow,\n\n163\n00:08:29.330 --> 00:08:33.020\nlike the name implies, these are people\nthat are allowed to use a service.\n\n164\n00:08:33.020 --> 00:08:36.150\nAnd hosts.deny, these are people that are\ndenied from using the service, all right.\n\n165\n00:08:36.150 --> 00:08:39.160\nSo these two files are gonna\nbuild up that list.\n\n166\n00:08:39.160 --> 00:08:45.100\nAnd by default, if I take a look\nat hosts.allow, it's empty.\n\n167\n00:08:45.100 --> 00:08:46.850\nWell not technically, I mean,\nit's got the comments, right.\n\n168\n00:08:46.850 --> 00:08:49.310\nEverything here has a hash tag at\nthe very beginning, a pound symbol,\n\n169\n00:08:49.310 --> 00:08:51.100\nso they're all commented out, right.\n\n170\n00:08:51.100 --> 00:08:53.710\nSo nobody is allowed.\n\n171\n00:08:53.710 --> 00:08:59.940\nAnd if I look at hosts.deny, same thing,\nit's all commented out, nobody's denied.\n\n172\n00:08:59.940 --> 00:09:05.010\nThe way these files are applied,\nthe allow file is processed first, and\n\n173\n00:09:05.010 --> 00:09:07.898\nthen the deny file is processed second.\n\n174\n00:09:07.898 --> 00:09:11.880\nAnd it will look in that allow file, it'll\ngo down the line looking for a match.\n\n175\n00:09:11.880 --> 00:09:15.930\nAnd if it matches somebody in\nthe allow file, then it matches and\n\n176\n00:09:15.930 --> 00:09:17.370\nthey're allowed in.\n\n177\n00:09:17.370 --> 00:09:20.180\nAnd when it gets all the way through the\nallow file, if it doesn't make a match,\n\n178\n00:09:20.180 --> 00:09:21.520\nthen it goes to the deny file.\n\n179\n00:09:21.520 --> 00:09:23.470\nAnd it goes all the way\ndown the deny file and\n\n180\n00:09:23.470 --> 00:09:25.970\nif it matches there, it blocks somebody.\n\n181\n00:09:25.970 --> 00:09:27.900\nBut if it gets all the way\nthrough the deny file and\n\n182\n00:09:27.900 --> 00:09:32.760\nit does match anybody,\nthen it allows the connection, right.\n\n183\n00:09:32.760 --> 00:09:37.678\nSo it's a default allow, that if we don't\nmatch any entry in these two files,\n\n184\n00:09:37.678 --> 00:09:39.260\nwe'ill be allowed.\n\n185\n00:09:39.260 --> 00:09:43.560\nSo because these are both empty, right\nnow TCP wrappers are working, they're in.\n\n186\n00:09:43.560 --> 00:09:45.090\nI don't have to install them,\n\n187\n00:09:45.090 --> 00:09:48.470\nI don't have to turn them on,\nthere's no service that I fire up, and\n\n188\n00:09:48.470 --> 00:09:51.370\nthat's because the applications\nare calling this library directly.\n\n189\n00:09:51.370 --> 00:09:53.470\nIt's not a demon running\nin the background.\n\n190\n00:09:53.470 --> 00:09:58.560\nAnd they see these empty files, and\njust every connection is allowed through.\n\n191\n00:09:58.560 --> 00:10:03.070\nSo if I wanna get this up and running,\nI simply have to create entries in here.\n\n192\n00:10:03.070 --> 00:10:06.590\nIt's technically already running and\ndoing its job, I just need to get in and\n\n193\n00:10:06.590 --> 00:10:07.140\nput it in place.\n\n194\n00:10:07.140 --> 00:10:11.780\nNow the neat part about this is, it's\nnot a daemon, it's not like FirewallD.\n\n195\n00:10:11.780 --> 00:10:14.460\nWhere when I add rules,\nI've gotta restart the firewall or\n\n196\n00:10:14.460 --> 00:10:17.610\nI have to apply it to a written config and\nto a logic one.\n\n197\n00:10:17.610 --> 00:10:19.960\nThese text files are not cached.\n\n198\n00:10:19.960 --> 00:10:26.720\nSo whenever a new connection comes in,\nlibwrap will always parse these files.\n\n199\n00:10:26.720 --> 00:10:30.200\nSo if I start making changes\nthey immediately take effect.\n\n200\n00:10:30.200 --> 00:10:32.690\nSo I can put a line in here, an entry, and\n\n201\n00:10:32.690 --> 00:10:35.460\nthat will immediately affect any\nnew connections that come in.\n\n202\n00:10:35.460 --> 00:10:38.184\nIf there's connections that are already\nestablished, it's too late,\n\n203\n00:10:38.184 --> 00:10:39.860\nthey're already established, right.\n\n204\n00:10:39.860 --> 00:10:43.380\nBut as soon as that connection drops\nthey reconnect, it'll apply on that one.\n\n205\n00:10:43.380 --> 00:10:46.530\nSo these are really,\nreally easy to work with.\n\n206\n00:10:46.530 --> 00:10:48.800\nWe just jump in and\nwe specify what we want.\n\n207\n00:10:48.800 --> 00:10:50.750\nWe get it put in place and then it's done.\n\n208\n00:10:50.750 --> 00:10:54.710\nNow do keep in mind that the allow\nfile is applied first, okay, so\n\n209\n00:10:54.710 --> 00:10:56.660\nhost.allow is applied first.\n\n210\n00:10:59.890 --> 00:11:05.180\nAnd that means that I might have an entry\nthat says Zach is allowed in host.allow.\n\n211\n00:11:05.180 --> 00:11:10.130\nAnd if I have an entry in host.deny that\nsays Zack is denied, he's gonna match\n\n212\n00:11:10.130 --> 00:11:14.790\nthe allow first and be allowed even though\nthere's a specific deny in the deny file,\n\n213\n00:11:14.790 --> 00:11:17.590\nbecause allow is processed first.\n\n214\n00:11:17.590 --> 00:11:21.710\nAnd then inside of the file all\nof our commands are applied\n\n215\n00:11:21.710 --> 00:11:25.110\nin order from line one all\nthe way down to line infinity.\n\n216\n00:11:25.110 --> 00:11:30.160\nThey're all applied in order, and it's\ngonna take the first match that it hits.\n\n217\n00:11:30.160 --> 00:11:32.860\nAnd so that's key to remembering\nhow we build this up.\n\n218\n00:11:32.860 --> 00:11:36.220\nIf I want to deny somebody, I need\nto take a look at the allow file and\n\n219\n00:11:36.220 --> 00:11:39.210\nmake sure that they're not\nspecifically allowed somehow.\n\n220\n00:11:39.210 --> 00:11:41.710\nAnd if they are,\nthen I'm not gonna be able to deny\n\n221\n00:11:41.710 --> 00:11:44.740\nthem unless I remove whatever is\nallowing them in the first place.\n\n222\n00:11:44.740 --> 00:11:48.430\nSo always be aware that the allow\nfile trumps everything.\n\n223\n00:11:48.430 --> 00:11:49.240\nIf somebody's allowed,\n\n224\n00:11:49.240 --> 00:11:52.710\nthey're going to get in regardless\nof what the deny file says.\n\n225\n00:11:52.710 --> 00:11:54.950\nAnd then the deny file is where\nwe start blocking people there.\n\n226\n00:11:54.950 --> 00:11:57.640\nSo just be kind of aware of that behavior.\n\n227\n00:11:57.640 --> 00:12:00.020\n&gt;&gt; So can you give us examples\nof how we can use it?\n\n228\n00:12:00.020 --> 00:12:03.560\n&gt;&gt; Sure, I wanna start simple,\njust the basic controlling access.\n\n229\n00:12:03.560 --> 00:12:06.200\nAnd then we'll get a little more advanced\nwith some of the cool things that we\n\n230\n00:12:06.200 --> 00:12:06.910\ncan do.\n\n231\n00:12:06.910 --> 00:12:09.470\nThe entries that you put\nin here are really simple.\n\n232\n00:12:09.470 --> 00:12:14.090\nYou basically specify an IP address or\na domain name and\n\n233\n00:12:14.090 --> 00:12:17.510\nyou say whether or not this particular\nhost is going to be allowed to connect in.\n\n234\n00:12:17.510 --> 00:12:22.010\nSo for example,\nif I wanted to allow a particular IP,\n\n235\n00:12:22.010 --> 00:12:25.910\nwell I could stop right now because\neverybody's allowed right now, all right.\n\n236\n00:12:25.910 --> 00:12:31.110\nBut let's say that I wanna configure\nSSH so that it is very specific.\n\n237\n00:12:31.110 --> 00:12:35.269\nI want SSH to not allow anybody except for\n\n238\n00:12:35.269 --> 00:12:38.825\nthe people that I approve, okay.\n\n239\n00:12:38.825 --> 00:12:41.690\nWell first off I need to go in and\nset up my approvals, right.\n\n240\n00:12:41.690 --> 00:12:44.270\nRemember this stuff takes\neffect immediately.\n\n241\n00:12:44.270 --> 00:12:47.350\nSo if I'm SSH'ed in myself I could\n\n242\n00:12:47.350 --> 00:12:50.090\ntheoretically lock myself out\nif I'm not careful, right.\n\n243\n00:12:50.090 --> 00:12:54.130\nSo we wanna start with our approvals\nfirst, and then work on the denial second.\n\n244\n00:12:54.130 --> 00:12:58.650\nSo I'm gonna edit /etc/hosts.allow.\n\n245\n00:12:58.650 --> 00:13:01.530\nAnd in here I'm gonna come down and\nadd a new line.\n\n246\n00:13:02.540 --> 00:13:05.030\nAnd the entries are made up of two parts.\n\n247\n00:13:05.030 --> 00:13:07.430\nThe first part identifies the service.\n\n248\n00:13:07.430 --> 00:13:09.520\nWhich service do I wanna filter, okay?\n\n249\n00:13:09.520 --> 00:13:11.420\nI wanna filter SSH.\n\n250\n00:13:11.420 --> 00:13:16.130\nSo I'm gonna say SSHD,\nand the you do a colon\n\n251\n00:13:17.420 --> 00:13:20.650\nfollowed by who it is that\nyou're allowing, right.\n\n252\n00:13:20.650 --> 00:13:22.860\nThis is the host.allow file,\nso this will be allowing.\n\n253\n00:13:22.860 --> 00:13:24.900\nIf I was in host.deny, same format.\n\n254\n00:13:24.900 --> 00:13:29.100\nYou do the service followed by a colon,\nand then who it is you're denying, right.\n\n255\n00:13:29.100 --> 00:13:35.209\nAnd in this case I might want to allow\nmy laptop, well I am 172.16.0.1.\n\n256\n00:13:35.209 --> 00:13:37.210\nSo I'm gonna allow that IP.\n\n257\n00:13:37.210 --> 00:13:39.410\nWell my laptop actually\nhas a couple of IPs.\n\n258\n00:13:39.410 --> 00:13:44.650\nSo I might add another entry that\nsays SSHD : 172.16.0.2 or 200 or\n\n259\n00:13:46.070 --> 00:13:52.970\nwhatever, I could start adding\nthese different IP addresses.\n\n260\n00:13:52.970 --> 00:13:56.200\nThese are now being allowed for\nSSH, right.\n\n261\n00:13:56.200 --> 00:14:00.310\nIf it's my laptop, I might want to\nallow me to access all services,\n\n262\n00:14:00.310 --> 00:14:04.720\nnot just SSH but vsftpd and any of\nthe other ones that use libwrap as well.\n\n263\n00:14:04.720 --> 00:14:09.220\nSo when I set that service name, there's\nactually an alias that's available for\n\n264\n00:14:09.220 --> 00:14:11.470\nme, that is ALL.\n\n265\n00:14:11.470 --> 00:14:17.000\nAnd I can come in, and I can say ALL and\nthen specify my laptop, okay.\n\n266\n00:14:17.000 --> 00:14:19.910\nNow technically I've got two\nentries from my laptop right now,\n\n267\n00:14:19.910 --> 00:14:22.660\nthat .1 address, right,\nthe first entry and the third one.\n\n268\n00:14:22.660 --> 00:14:26.230\nThe first one will match for SSH and\nit'll stop processing right there, and\n\n269\n00:14:26.230 --> 00:14:27.680\nit moves on and it allows me.\n\n270\n00:14:27.680 --> 00:14:31.330\nBut any other protocol would fail this\nfirst one, would fail the second one, and\n\n271\n00:14:31.330 --> 00:14:32.330\nwould match the third one.\n\n272\n00:14:32.330 --> 00:14:34.130\nAnd then I'd be allowed and\nI'd get through.\n\n273\n00:14:34.130 --> 00:14:37.440\nFrom my laptop it would never get\nto the deny file because I allowed\n\n274\n00:14:37.440 --> 00:14:41.220\nall services from my laptop,\nI'm now allowed to go in, and\n\n275\n00:14:41.220 --> 00:14:45.630\nit never will go to the deny file for\nany of the different services from my IP.\n\n276\n00:14:45.630 --> 00:14:48.900\nI come in on a different IP,\nit's a different story.\n\n277\n00:14:48.900 --> 00:14:51.936\nAnd so that's kind of the thing to\nremember with this is that a lot of it,\n\n278\n00:14:51.936 --> 00:14:55.290\nyou'll usually see people use tabs\nto make this look at little neater.\n\n279\n00:14:55.290 --> 00:14:59.045\nI'm trying to neaten mine up after the\nfact now which I'll probably regret, but\n\n280\n00:14:59.045 --> 00:15:01.160\n[LAUGH] there we go.\n\n281\n00:15:01.160 --> 00:15:02.643\nSo when you get all this setup,\n\n282\n00:15:02.643 --> 00:15:05.050\nit is always important to\nbe thinking about that.\n\n283\n00:15:05.050 --> 00:15:08.420\nBe thinking about the order and the way\nthe stuff is arranged and how it setup.\n\n284\n00:15:08.420 --> 00:15:11.030\nSo that little alias of\nALL is pretty handy.\n\n285\n00:15:11.030 --> 00:15:17.870\nIn fact I might wanna say I don't want\nanybody to get in using SSH except for me.\n\n286\n00:15:17.870 --> 00:15:21.290\nWell I'm allowed right here, right,\nI've granted myself that access.\n\n287\n00:15:21.290 --> 00:15:25.960\nSo now I can move to hosts.deny, and\n\n288\n00:15:25.960 --> 00:15:32.438\nin host.deny I can add\nan entry that says sshd : and\n\n289\n00:15:32.438 --> 00:15:40.870\nthen set up some kind of a wildcard\nhere to match everybody else.\n\n290\n00:15:40.870 --> 00:15:44.360\nI could say ALL, right,\nremember ALL, that's everything.\n\n291\n00:15:44.360 --> 00:15:47.274\nI could do that.\nI could actually say ALL : ALL like that,\n\n292\n00:15:47.274 --> 00:15:50.618\nand now remember how I said\nthere was that default allow,\n\n293\n00:15:50.618 --> 00:15:55.375\nif there was no match anywhere along\nthe way, everybody would match this entry.\n\n294\n00:15:55.375 --> 00:15:58.910\nAll services, all hosts, would be denied.\n\n295\n00:15:58.910 --> 00:16:03.137\nAnd if that's the last entry in my file,\nI'm now creating this in deny ALL,\n\n296\n00:16:03.137 --> 00:16:07.300\nso I would have to allow people in, in\norder for them to be able to connect and\n\n297\n00:16:07.300 --> 00:16:12.040\nstart to work with this system,\nthat's gonna block everything else.\n\n298\n00:16:12.040 --> 00:16:14.920\nI have to be careful with that,\nbecause again I could lock myself out,\n\n299\n00:16:14.920 --> 00:16:16.800\nI could stop myself from\naccessing some service, so\n\n300\n00:16:16.800 --> 00:16:18.540\nyou've gotta make sure you\nset up your allows first.\n\n301\n00:16:18.540 --> 00:16:24.670\nBut that's kind of the basics to get that\nin place and I kept this pretty simple.\n\n302\n00:16:24.670 --> 00:16:29.468\nWe could go a little more complex for\nexample instead of doing a single IP I\n\n303\n00:16:29.468 --> 00:16:33.578\ncould do an entire range and\nyou could write the several ways.\n\n304\n00:16:33.578 --> 00:16:38.710\nLet's say I wanted to allow the entire\none signature 172.16.0 network.\n\n305\n00:16:38.710 --> 00:16:44.650\nI could have said 172.16.0.0/24 or\nI could say 172.16.0.\n\n306\n00:16:44.650 --> 00:16:48.000\nAnd leave it like that,\nwith a trailing dot.\n\n307\n00:16:48.000 --> 00:16:52.462\nAnd it's smart enough to know that that\nmeans, all right, anybody's who address\n\n308\n00:16:52.462 --> 00:16:56.043\nstarts with 172.16.0, and\nthen has whatever at the end.\n\n309\n00:16:56.043 --> 00:17:00.952\nOr I can do the old subnet mask notation,\nwhich would be\n\n310\n00:17:00.952 --> 00:17:07.170\n172.16.0.0/255.255.255.0 all right?\n\n311\n00:17:07.170 --> 00:17:11.550\nTechnically, all three of these lines\ndo exactly the same thing, right?\n\n312\n00:17:11.550 --> 00:17:12.950\nIt's just three different\nways of writing it.\n\n313\n00:17:12.950 --> 00:17:14.095\nSo, you kinda figure out which one.\n\n314\n00:17:14.095 --> 00:17:18.210\nI have a Cisco background and so I usually\nwrite things in this format here but\n\n315\n00:17:18.210 --> 00:17:20.620\nwhichever one works out easy for you.\n\n316\n00:17:20.620 --> 00:17:23.180\nThese are approving an entire network, so\n\n317\n00:17:23.180 --> 00:17:28.220\nnow anybody on the 172.16.0 network\nwould be allowed to come in and\n\n318\n00:17:28.220 --> 00:17:31.540\nuse ssh I'm gonna get rid of these\nextra lines that don't do anything.\n\n319\n00:17:31.540 --> 00:17:33.651\nAnd actually I get rid of that one too.\n\n320\n00:17:33.651 --> 00:17:35.270\nClean up my file in a bit.\n\n321\n00:17:35.270 --> 00:17:38.890\nSo now, ssh is approved for\n\n322\n00:17:38.890 --> 00:17:44.120\nthe whole network and then I'm approved\nfor every service not just ssh.\n\n323\n00:17:44.120 --> 00:17:46.753\nSo we got that kind of punch in.\n\n324\n00:17:46.753 --> 00:17:50.787\nAs far as other things, let's see\nwhat else could we do, domain names,\n\n325\n00:17:50.787 --> 00:17:53.102\nwe can actually come\nin by domain names and\n\n326\n00:17:53.102 --> 00:17:57.770\nI usually wouldn't do a domain name\nhere probably be more like on the side.\n\n327\n00:17:57.770 --> 00:18:00.860\nIf I started seeing a text coming\nin from a particular domain name\n\n328\n00:18:00.860 --> 00:18:04.240\nI could come in and say, all.\n\n329\n00:18:05.340 --> 00:18:06.940\nAnd then for the host that I wanna block,\n\n330\n00:18:06.940 --> 00:18:11.200\nI could specify a domain\nname like .lab.itpro.tv.\n\n331\n00:18:11.200 --> 00:18:14.710\nSo anybody whose hostname\nends in .lab.itpro.tv would\n\n332\n00:18:14.710 --> 00:18:16.410\nbe picked up and blocked.\n\n333\n00:18:16.410 --> 00:18:17.210\nNot gonna allow them in.\n\n334\n00:18:17.210 --> 00:18:18.249\nThey're gonna get denied.\n\n335\n00:18:18.249 --> 00:18:21.700\nThat's another match entry that we can do.\n\n336\n00:18:21.700 --> 00:18:24.442\nLet's see what else,\nI think that's probably most of them,\n\n337\n00:18:24.442 --> 00:18:25.401\nlet's see I did IPs.\n\n338\n00:18:25.401 --> 00:18:29.733\nI did, I could do a specific domain name,\nif I had an actual host,\n\n339\n00:18:29.733 --> 00:18:35.054\nI could come in and I could say like\nlab-server01.lab.itpro.tv like that you\n\n340\n00:18:35.054 --> 00:18:40.350\nknow a specific domain name versus that\nkind of wild card one that I did here.\n\n341\n00:18:40.350 --> 00:18:41.820\nAnd you can do asterisks also.\n\n342\n00:18:41.820 --> 00:18:45.660\nIf I wanted to say, star.lab.itpro.tv,\nI could do that and\n\n343\n00:18:45.660 --> 00:18:47.261\nthen that would catch us.\n\n344\n00:18:47.261 --> 00:18:49.940\nSo it's a pretty friendly syntax here.\n\n345\n00:18:49.940 --> 00:18:53.210\nYou can kinda put things in the way that\nyou would normally think they would go.\n\n346\n00:18:53.210 --> 00:18:55.180\nYou can punch them in, get them in place.\n\n347\n00:18:55.180 --> 00:18:57.657\nThe only other thing I didn't\nmention are the services.\n\n348\n00:18:57.657 --> 00:19:03.710\nLet me go back to the allow file,\nhere I'm allowing everybody to use SSHD.\n\n349\n00:19:03.710 --> 00:19:08.370\nIf I wanted to allow them to use\nVSFTP as well I could come in and\n\n350\n00:19:08.370 --> 00:19:14.680\nsay it like VSFTPD and\nthen punch in that network,\n\n351\n00:19:14.680 --> 00:19:20.070\nbut see how it's really it's the same\nposts just a different protocol.\n\n352\n00:19:20.070 --> 00:19:21.721\nYou can put more than one\nprotocol on the same line.\n\n353\n00:19:21.721 --> 00:19:27.909\nI could combine that like this and so\nnow hosts that are in the 172.16.0 network\n\n354\n00:19:27.909 --> 00:19:33.333\nwill have access to both SSHD and VSFTPD\nbecause I just stuck a comma there and\n\n355\n00:19:33.333 --> 00:19:36.320\nI could list as many services as I needed.\n\n356\n00:19:36.320 --> 00:19:40.240\nI might add tell net or whatever else it\nwas that I always gonna like attack on,\n\n357\n00:19:40.240 --> 00:19:41.660\nand now they have access to that too.\n\n358\n00:19:41.660 --> 00:19:43.630\nSo it's just another\nformat of writing that.\n\n359\n00:19:43.630 --> 00:19:47.903\n&gt;&gt; So Don is allowing and denying access,\nthe only thing TCP Wrappers can do.\n\n360\n00:19:47.903 --> 00:19:51.520\n&gt;&gt; No,\nTCP Wrappers are actually really powerful.\n\n361\n00:19:51.520 --> 00:19:54.840\nSo what I just showed you is what\nyou're gonna find in most textbooks.\n\n362\n00:19:54.840 --> 00:19:56.440\nThat when people deploy TCP Wrappers,\n\n363\n00:19:56.440 --> 00:19:59.920\nthat's basically what they see is allowing\nand denying those two files and that's it.\n\n364\n00:19:59.920 --> 00:20:01.950\nBut let's go real world, all right.\n\n365\n00:20:01.950 --> 00:20:05.490\nReal world everything I just did,\nI can do that with a fire wall right.\n\n366\n00:20:05.490 --> 00:20:08.647\nSo if I've already got\nfire wall IP tables,\n\n367\n00:20:08.647 --> 00:20:10.952\nthen TCP wrappers are pretty stupid.\n\n368\n00:20:10.952 --> 00:20:12.410\n[LAUGH] So I'm not gonna use them.\n\n369\n00:20:12.410 --> 00:20:14.264\n&gt;&gt; But it's a neat name,\nyou've gotta admit that.\n\n370\n00:20:14.264 --> 00:20:15.710\n&gt;&gt; So let's go further.\n\n371\n00:20:15.710 --> 00:20:18.060\nI wanna show you guys\nhow I use TCP wrappers.\n\n372\n00:20:18.060 --> 00:20:20.530\nSo you can see that there's actually\na lot more that it can do, okay.\n\n373\n00:20:20.530 --> 00:20:27.160\nSo, first thing I'm gonna do, I don't use\nthe hosts.deny file, right It's confusing.\n\n374\n00:20:27.160 --> 00:20:29.360\nYou've got these two files,\none overrides the other.\n\n375\n00:20:29.360 --> 00:20:32.490\nIt kind of creates a bit of a conflict,\nokay?\n\n376\n00:20:32.490 --> 00:20:35.219\nSo, let me go back to my deny file here.\n\n377\n00:20:35.219 --> 00:20:39.731\nAnd what I'm going to do here,\nI'll just copy all this stuff and\n\n378\n00:20:39.731 --> 00:20:43.175\nthen I'm going to delete\nthis stuff out of here.\n\n379\n00:20:43.175 --> 00:20:44.750\nSo we'll do a d.\n\n380\n00:20:44.750 --> 00:20:46.711\nNo actually I don't know why, It'll\nbe faster just to delete it this way.\n\n381\n00:20:46.711 --> 00:20:50.740\nSo I'm just gonna go through and\ndelete all those entries out of there.\n\n382\n00:20:50.740 --> 00:20:54.212\nOkay so now my host.deny files empty and\nthat's how I normally leave it,\n\n383\n00:20:54.212 --> 00:20:56.119\nI usually don't use the deny file okay.\n\n384\n00:20:56.119 --> 00:20:58.891\nAnd then I go into my allow file and\n\n385\n00:20:58.891 --> 00:21:03.742\none of things that's not really\nwell documented in here is\n\n386\n00:21:03.742 --> 00:21:09.250\nthat you can actually do allows and\ndenies in the same file.\n\n387\n00:21:09.250 --> 00:21:12.880\nThat there's technically two option\nfields that I'm dealing with here.\n\n388\n00:21:12.880 --> 00:21:15.060\nThe first option is the service, and\n\n389\n00:21:15.060 --> 00:21:18.120\nthe second option is the host\nthat I'm allowing or denying.\n\n390\n00:21:19.310 --> 00:21:22.840\nBut we can go beyond that,\nand add more options.\n\n391\n00:21:22.840 --> 00:21:26.230\nOur file does start to get\na bit messy at some point.\n\n392\n00:21:26.230 --> 00:21:30.144\nBut we can add more options to customize\nhow all this stuff is working.\n\n393\n00:21:30.144 --> 00:21:35.600\nAnd, despite what I said before, I usually\ndo keep services on their own line.\n\n394\n00:21:35.600 --> 00:21:39.390\nEven though I know I can combine them,\nI like to keep them separate.\n\n395\n00:21:39.390 --> 00:21:42.490\nAnd so we specify them like this.\n\n396\n00:21:42.490 --> 00:21:45.200\nAnd then, see how I copied\nall those denies over here?\n\n397\n00:21:45.200 --> 00:21:51.080\nWhat I could do, and I'm gonna try just\nkeep this as neat as possible, there.\n\n398\n00:21:51.080 --> 00:21:54.200\nWhat I could do is come in,\nand I can specify,\n\n399\n00:21:54.200 --> 00:21:57.080\nallow and deny right on these lines.\n\n400\n00:21:57.080 --> 00:22:02.261\nI can say, for example on this\none if I just, do another tab and\n\n401\n00:22:02.261 --> 00:22:06.959\na colon, allow,\nit's actually all lowercase there.\n\n402\n00:22:06.959 --> 00:22:13.650\nAnd this one is an allow,\nand this one was an allow.\n\n403\n00:22:13.650 --> 00:22:20.850\nAnd this one was a deny, so see how I'm\ndoing denies In the same file, right?\n\n404\n00:22:20.850 --> 00:22:21.820\nI can do allow and deny in the same file.\n\n405\n00:22:21.820 --> 00:22:25.644\nNow, I don't have to worry about\nhost.deny anymore I can just do it all in\n\n406\n00:22:25.644 --> 00:22:26.480\nhost.allow.\n\n407\n00:22:26.480 --> 00:22:29.290\nI can just forget that\nhost.deny even exists.\n\n408\n00:22:29.290 --> 00:22:33.582\nEspecially since I've got this catch all\nright here where everybody else is gonna\n\n409\n00:22:33.582 --> 00:22:34.276\nget denied.\n\n410\n00:22:34.276 --> 00:22:39.920\nThat means host.deny is never even really\ngonna get applied, we'll match this line.\n\n411\n00:22:39.920 --> 00:22:41.401\nNo matter what and that's gonna happen.\n\n412\n00:22:41.401 --> 00:22:46.336\nSo now my config is a lot more simple and\nI'm adding more options,\n\n413\n00:22:46.336 --> 00:22:49.760\nand there's even more options beyond that.\n\n414\n00:22:49.760 --> 00:22:50.601\nThat's a simple option, allow and deny.\n\n415\n00:22:50.601 --> 00:22:54.300\nTechnically I could have just stuck with\nthe two files and had that, but if I\n\n416\n00:22:54.300 --> 00:22:59.010\nkeep going, there's other things that we\ncan add on and do all sorts of fun stuff.\n\n417\n00:22:59.010 --> 00:23:02.299\nSo the ones that I like to use,\nlet me show you some examples here.\n\n418\n00:23:03.510 --> 00:23:09.175\nYou can tell it, when somebody connects,\nto generate a syslog message right?\n\n419\n00:23:09.175 --> 00:23:12.503\nSo I don't just want to\ncontrol whether they get in.\n\n420\n00:23:12.503 --> 00:23:16.680\nIf they do get in, I want to generate a\nsyslog message so that I know it happened.\n\n421\n00:23:16.680 --> 00:23:17.765\nI can keep a record of it.\n\n422\n00:23:17.765 --> 00:23:21.398\nNow, with SSH they have to log in with\na user name and a password, right?\n\n423\n00:23:21.398 --> 00:23:22.800\nSo I'll get a message for that.\n\n424\n00:23:22.800 --> 00:23:26.830\nBut if it's something like VSFTP,\nit might be an anonymous log in,\n\n425\n00:23:26.830 --> 00:23:30.410\nit might have its own logs,\nI can tell it to log to sys log.\n\n426\n00:23:30.410 --> 00:23:33.729\nI can add another option here and\njust say, severity,\n\n427\n00:23:33.729 --> 00:23:36.196\nfollowed by how I want this to be logged.\n\n428\n00:23:36.196 --> 00:23:38.620\nMaybe I want this to be an alert, right?\n\n429\n00:23:38.620 --> 00:23:39.814\nSeverity alert, so\n\n430\n00:23:39.814 --> 00:23:45.658\nnow anytime somebody connects via SSH from\nthe 172.16.0 network, they'll be allowed.\n\n431\n00:23:45.658 --> 00:23:50.591\nAnd a syslog message will be generated,\ntelling me that they connected, right?\n\n432\n00:23:50.591 --> 00:23:53.190\nSo now I'll be aware, right?\n\n433\n00:23:53.190 --> 00:23:54.494\nI'll have that information.\n\n434\n00:23:54.494 --> 00:23:56.792\nAnd I'm gonna run out of room here.\n\n435\n00:23:56.792 --> 00:23:59.119\nI'm gonna add more options and\nstart running out of room.\n\n436\n00:23:59.119 --> 00:24:00.819\nSo let me just try and\nshrink this down a bit.\n\n437\n00:24:00.819 --> 00:24:06.161\nAnd so that's another example\nof one thing that we can do and\n\n438\n00:24:06.161 --> 00:24:09.057\nshoot, I copied over my spaces.\n\n439\n00:24:09.057 --> 00:24:11.820\nWell anyhow,\nI can neaten this up another day.\n\n440\n00:24:11.820 --> 00:24:14.810\nSo by doing that though,\nI'm now doing more.\n\n441\n00:24:14.810 --> 00:24:18.580\nI'm not just gating with allow and\ndeny, now I'm creating log messages.\n\n442\n00:24:18.580 --> 00:24:20.400\nAnd you can really have\nsome fun with this,\n\n443\n00:24:20.400 --> 00:24:22.870\nbecause there's some other\ncool functionality in here\n\n444\n00:24:22.870 --> 00:24:27.560\nlike we can tell it to run commands,\nto do other stuffs which is kinda fun.\n\n445\n00:24:27.560 --> 00:24:30.660\nThere's two neat little options\nthat are kinda buried away.\n\n446\n00:24:30.660 --> 00:24:32.485\nOne of my favorite is spawn.\n\n447\n00:24:33.620 --> 00:24:37.930\nSo here like VSFTP, I can say spawn.\n\n448\n00:24:37.930 --> 00:24:41.010\nAnd spawn will say,\nwhen somebody connects, either allow or\n\n449\n00:24:41.010 --> 00:24:43.310\ndeny them,\nwhatever it is I said before, and\n\n450\n00:24:43.310 --> 00:24:47.810\nthen run this other program in\naddition to what they're doing.\n\n451\n00:24:47.810 --> 00:24:50.518\nSo if it's an allow,\nI'm gonna allow them to FTP in.\n\n452\n00:24:50.518 --> 00:24:51.539\nBut in the background,\n\n453\n00:24:51.539 --> 00:24:54.700\nI'm gonna run this other program and\ndo some kind of activity.\n\n454\n00:24:54.700 --> 00:24:57.480\nOr if it was deny, I would say,\nstop them from getting in, and\n\n455\n00:24:57.480 --> 00:24:58.990\nthen run this other program.\n\n456\n00:24:58.990 --> 00:25:06.000\nAnd so when I spawn something,\nI can do for example /bin/echo and\n\n457\n00:25:06.000 --> 00:25:12.038\nthen a connection Was made.\n\n458\n00:25:12.038 --> 00:25:16.370\nAnd I could pipe that into some\nkind of a log file somewhere.\n\n459\n00:25:16.370 --> 00:25:19.087\nAll right, so what ftp.log.\n\n460\n00:25:19.087 --> 00:25:21.170\nI can start creating my own log file.\n\n461\n00:25:21.170 --> 00:25:23.950\nVSFTP has its own long file,\nbut I can create my own.\n\n462\n00:25:23.950 --> 00:25:25.390\nI can create my own and\nhave it stored somewhere else.\n\n463\n00:25:25.390 --> 00:25:27.220\nI can point it to an SSH destination.\n\n464\n00:25:27.220 --> 00:25:29.789\nSo now it's an encrypted tunnel to\nanother server where it gets logged.\n\n465\n00:25:29.789 --> 00:25:35.090\nAnd if somebody breaks into the server and\ndeletes VSFTP's log, big deal.\n\n466\n00:25:35.090 --> 00:25:36.250\nI've got my own copy.\n\n467\n00:25:36.250 --> 00:25:39.393\nAnd they don't even know what\nhappened because this is being run\n\n468\n00:25:39.393 --> 00:25:41.440\nas a separate program in the background.\n\n469\n00:25:41.440 --> 00:25:45.390\nWell, they come in, connect via FTP,\nthey start doing their thing.\n\n470\n00:25:45.390 --> 00:25:48.250\nMeanwhile, this other program's running in\nthe background and it's doing this task.\n\n471\n00:25:48.250 --> 00:25:48.810\nAnd that's a pretty neat one.\n\n472\n00:25:48.810 --> 00:25:51.564\nAnd there's actually,\nfor the spawn command,\n\n473\n00:25:51.564 --> 00:25:55.580\nthere's a whole bunch of expandable\nvariables that are created.\n\n474\n00:25:55.580 --> 00:25:57.070\nSo, for example,\n\n475\n00:25:57.070 --> 00:25:59.920\nif I wanna be a little more specific\nwith this log message, right?\n\n476\n00:25:59.920 --> 00:26:04.915\nI can say a connection from,\nand then I can add %a.\n\n477\n00:26:04.915 --> 00:26:08.380\n%a says, put in their IP address.\n\n478\n00:26:08.380 --> 00:26:11.370\nSo now I'll know the IP address\nof the person that connect.\n\n479\n00:26:11.370 --> 00:26:13.910\nI can use the date command\nto put what the date and\n\n480\n00:26:13.910 --> 00:26:18.409\ntime was in there and get kind of\nflushed out log message out, even more.\n\n481\n00:26:20.010 --> 00:26:21.035\nThere's %h.\n\n482\n00:26:21.035 --> 00:26:26.223\n%h will do a DNS reverse lookup,\nto try and find their DNS name.\n\n483\n00:26:26.223 --> 00:26:28.400\nAnd if they don't have one,\nit'll do the IP address.\n\n484\n00:26:28.400 --> 00:26:30.386\nBut usually, IP address is just %a.\n\n485\n00:26:30.386 --> 00:26:34.170\nYou could do,\nlet's do some of the other ones, %u.\n\n486\n00:26:34.170 --> 00:26:36.236\nIf they logged in,\nthat'll do their username.\n\n487\n00:26:36.236 --> 00:26:39.000\nIf it's something that is not logged in,\nyou won't have a username.\n\n488\n00:26:39.000 --> 00:26:42.104\nBut if it's SSH, there'll be a username,\nso you can do %u and you'll get that.\n\n489\n00:26:42.104 --> 00:26:48.260\nYou can do %c, which will be\nthe client name and the host name.\n\n490\n00:26:48.260 --> 00:26:52.450\nSo you'll get the full credentials\nthat they use when they connect it up.\n\n491\n00:26:52.450 --> 00:26:54.730\nAnd there's %d, which is the process name.\n\n492\n00:26:54.730 --> 00:26:57.325\nSo, this entry here is just doing VSFTP.\n\n493\n00:26:57.325 --> 00:27:01.077\nBut if I had SSHD and\nVSFTP being authorized,\n\n494\n00:27:01.077 --> 00:27:05.450\nthen I could do %d to\nspecify which of them it was.\n\n495\n00:27:05.450 --> 00:27:07.040\nSo those are all expandable characters.\n\n496\n00:27:07.040 --> 00:27:08.990\nI'll put them in the show notes for\nyou guys.\n\n497\n00:27:08.990 --> 00:27:09.820\nI don't have them memorized.\n\n498\n00:27:09.820 --> 00:27:11.380\nI've got them written right here.\n\n499\n00:27:11.380 --> 00:27:13.709\nSo, [LAUGH] but I'll put them in\nthe show notes, so you have them too.\n\n500\n00:27:13.709 --> 00:27:15.260\nBut that's kind of a neat process.\n\n501\n00:27:15.260 --> 00:27:19.773\nI say when they log in, go and run this\nother program at the same time, right?\n\n502\n00:27:19.773 --> 00:27:22.845\nNow, if I wanna be a really tricky,\nlike on a deny,\n\n503\n00:27:22.845 --> 00:27:26.930\nthey might be trying to log in and\nthey're trying to run something.\n\n504\n00:27:26.930 --> 00:27:29.820\nSo if they're doing SFTP, they\nconnect up and they would normally run\n\n505\n00:27:29.820 --> 00:27:33.920\nthe internal-sftp command to\ninitiate the file transfer, right?\n\n506\n00:27:33.920 --> 00:27:37.379\nI could come in and say twist.\n\n507\n00:27:37.379 --> 00:27:39.340\nAnd what twist does, oops.\n\n508\n00:27:41.080 --> 00:27:42.300\nWhat twist, shoot.\n\n509\n00:27:42.300 --> 00:27:44.360\nI'm all over the place here.\n\n510\n00:27:44.360 --> 00:27:47.510\nSorry guys, my mouse went crazy for\na second there.\n\n511\n00:27:47.510 --> 00:27:48.749\nI can say twist.\n\n512\n00:27:48.749 --> 00:27:52.175\nNow, with spawn I'm saying,\nlet them do what they are doing and\n\n513\n00:27:52.175 --> 00:27:54.920\nin the mean time run this other program,.\n\n514\n00:27:54.920 --> 00:27:58.690\nWith twist I say,\ntake whatever they're trying to do and\n\n515\n00:27:58.690 --> 00:28:01.020\nchange it into this other thing.\n\n516\n00:28:01.020 --> 00:28:04.890\nSo I can say, you tried to FTP in,\nI'm not gonna let you do that.\n\n517\n00:28:04.890 --> 00:28:06.843\nInstead, I'm gonna twist that\nover to this other program.\n\n518\n00:28:06.843 --> 00:28:10.188\nAnd in my other program I can do\nsomething super simple like just echo out\n\n519\n00:28:10.188 --> 00:28:11.160\ndata, right?\n\n520\n00:28:11.160 --> 00:28:17.764\nI could say for example,\nI wanna twist to /bin/echo and\n\n521\n00:28:17.764 --> 00:28:23.550\nthen, your connection\nattempt has been logged!\n\n522\n00:28:24.750 --> 00:28:26.451\nStrike the fear into them, right?\n\n523\n00:28:26.451 --> 00:28:27.659\n&gt;&gt; Yeah.\n&gt;&gt; It's a dumb message.\n\n524\n00:28:27.659 --> 00:28:28.797\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n525\n00:28:28.797 --> 00:28:30.063\n&gt;&gt; But either way,\n\n526\n00:28:30.063 --> 00:28:33.507\nthey tried to VSFTP in or\nthey tried to SSH in.\n\n527\n00:28:33.507 --> 00:28:37.485\nAnd instead of getting a log in prompt,\nnow they get the output of echo.\n\n528\n00:28:37.485 --> 00:28:41.159\nAnd it's gonna give them this message, and\nso now not only do they get stopped but\n\n529\n00:28:41.159 --> 00:28:43.500\nthey actually get\na little bit of feedback.\n\n530\n00:28:43.500 --> 00:28:44.700\nAnd that's pretty cool.\n\n531\n00:28:44.700 --> 00:28:46.600\nWith a firewall, I can't do that.\n\n532\n00:28:46.600 --> 00:28:49.350\nWith the firewall, I just block them and\nthat is the end of it.\n\n533\n00:28:49.350 --> 00:28:52.575\nWith TCP wrappers though,\nI can create custom logs,\n\n534\n00:28:52.575 --> 00:28:56.160\nI can generate custom error\nmessages,I can do a lot more And\n\n535\n00:28:56.160 --> 00:29:00.075\nthat's why I tell people hey,\nyeah, this is old technology.\n\n536\n00:29:00.075 --> 00:29:04.780\nTCP wrappers are ancient, but\nthey're still useful today to help secure\n\n537\n00:29:04.780 --> 00:29:07.870\nour systems and\nreally kinda create some cool stuff.\n\n538\n00:29:07.870 --> 00:29:09.400\nSo, that's twist and\n\n539\n00:29:09.400 --> 00:29:12.880\nspawn which are two really powerful\nfeatures that a lot of people don't know.\n\n540\n00:29:12.880 --> 00:29:15.847\nI can't tell you how many textbooks\nI see that cover TCP wrappers and\n\n541\n00:29:15.847 --> 00:29:17.368\nnever mentioned twist and spawn.\n\n542\n00:29:17.368 --> 00:29:21.470\nAnd those are really the two kind of\nshining features of TCP wrappers.\n\n543\n00:29:21.470 --> 00:29:23.200\nIf you're not gonna use those,\n\n544\n00:29:23.200 --> 00:29:26.300\nthen pretty much everything else\nyou can do in a regular firewall.\n\n545\n00:29:26.300 --> 00:29:28.613\nAnd in that case, TCP wrappers are dead.\n\n546\n00:29:28.613 --> 00:29:30.500\nWhy bother, just use a firewall.\n\n547\n00:29:30.500 --> 00:29:34.200\nBut if you use twist and spawn,\nyou can really get some power out of this.\n\n548\n00:29:34.200 --> 00:29:35.430\n&gt;&gt; Awesome information.\n\n549\n00:29:35.430 --> 00:29:37.390\nTwist and spawn sounds fantastic.\n\n550\n00:29:37.390 --> 00:29:39.890\nI'd never heard of it myself [INAUDIBLE]\n&gt;&gt; [LAUGH]\n\n551\n00:29:39.890 --> 00:29:41.890\n&gt;&gt; TCP wrappers, great episode.\n\n552\n00:29:41.890 --> 00:29:43.180\nI enjoyed it thoroughly.\n\n553\n00:29:43.180 --> 00:29:44.960\nAny last words, sir?\n\n554\n00:29:44.960 --> 00:29:46.410\n&gt;&gt; That's the main gist of it.\n\n555\n00:29:46.410 --> 00:29:49.420\nDo be careful with twist and\nspawn, and even the severity,\n\n556\n00:29:49.420 --> 00:29:52.850\nwhere we logged to a syslog,\nyou are calling other services.\n\n557\n00:29:52.850 --> 00:29:55.703\nIf it's configured incorrectly,\nit can cause some problems.\n\n558\n00:29:55.703 --> 00:29:57.947\nWhen you use twist,\nyou're basically running another program.\n\n559\n00:29:57.947 --> 00:30:01.230\nIf that program is not secure,\nyou could be making yourself vulnerable.\n\n560\n00:30:01.230 --> 00:30:03.120\nSo be careful with stuff like that.\n\n561\n00:30:03.120 --> 00:30:05.930\nI used echo here that's super safe,\nbut there's other things.\n\n562\n00:30:05.930 --> 00:30:08.410\nAnything that expects\ninput could be a problem.\n\n563\n00:30:08.410 --> 00:30:11.180\nSo, make sure you test it\nout do some practicing.\n\n564\n00:30:11.180 --> 00:30:13.150\nMake sure that it works\nthe way that you intended.\n\n565\n00:30:13.150 --> 00:30:15.010\nBut after that, it's a great system and\n\n566\n00:30:15.010 --> 00:30:17.740\nit's something that's still relevant today\nand it's not going anywhere anytime soon.\n\n567\n00:30:17.740 --> 00:30:20.371\nSo definitely jump in, mess with it and\nsee how you can use it.\n\n568\n00:30:20.371 --> 00:30:23.110\n&gt;&gt; And that's something else we\ncan put in our security tool box.\n\n569\n00:30:23.110 --> 00:30:24.590\nLinux security techniques.\n\n570\n00:30:24.590 --> 00:30:27.450\nLots of episodes to look at and\nwatch and enjoy and\n\n571\n00:30:27.450 --> 00:30:29.350\ntake notes from, you will be glad you did.\n\n572\n00:30:29.350 --> 00:30:31.840\nAnd thank you for watching ITPRO.TV.\n\n573\n00:30:31.840 --> 00:30:34.470\nRemember, a good IT pro\nis always learning.\n\n574\n00:30:34.470 --> 00:30:35.360\nI'm Zach Memos.\n\n575\n00:30:35.360 --> 00:30:36.170\n&gt;&gt; And I'm Don Pezet.\n\n576\n00:30:36.170 --> 00:30:41.033\n&gt;&gt; And we will see you again very soon.\n\n577\n00:30:41.033 --> 00:30:45.160\n[MUSIC]\n\n578\n00:30:45.160 --> 00:30:48.090\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "230447082"
        },
        {
          "description": "Don and Zach discuss what is 'iptables,' how we can know if iptables is running, if we can switch from firewalld to iptables, systemctl, where we start to configure the firewall, how the 'chains' work together, how the rules work, how we manage incoming traffic, modifying the iptables configuration file, and monitoring iptables.",
          "length": "1954",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-4-2-network_security_with_iptables-081517-PGM.00_32_18_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-4-2-network_security_with_iptables-081517-PGM.00_32_18_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-4-2-network_security_with_iptables-081517-PGM.00_32_18_01.Still001-sm.jpg",
          "title": "Network Security with iptables",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:05.040\nWelcome to ITPRO.TV.\n\n2\n00:00:05.040 --> 00:00:09.563\nI am your host [CROSSTALK]\n\n3\n00:00:09.563 --> 00:00:10.140\n[MUSIC]\n\n4\n00:00:10.140 --> 00:00:12.204\n&gt;&gt; You're watching ITPRO.TV.\n\n5\n00:00:12.204 --> 00:00:13.776\n&gt;&gt; Hello again and thank you for\n\n6\n00:00:13.776 --> 00:00:17.260\nchoosing ITPRO.TV helping you\nto learn more wherever you go.\n\n7\n00:00:17.260 --> 00:00:21.740\nI am your host Zach Memos as we continue\nto learn the Linux security techniques.\n\n8\n00:00:21.740 --> 00:00:24.300\nWe're gonna find out about\niptables right now and\n\n9\n00:00:24.300 --> 00:00:27.780\nthe person bringing us all that\ninformation is our IT Pro, Don Pezet.\n\n10\n00:00:27.780 --> 00:00:28.417\nDon, good morning.\n\n11\n00:00:28.417 --> 00:00:29.510\nHow are you?\n\n12\n00:00:29.510 --> 00:00:30.324\n&gt;&gt; I am doing just well is that great.\n\n13\n00:00:30.324 --> 00:00:34.797\nAnd I am back into the world of Linux\nsecurity and in this episode, we might\n\n14\n00:00:34.797 --> 00:00:39.704\nas well call it iptables TV, because we're\ngonna be taking a look at the iptables\n\n15\n00:00:39.704 --> 00:00:44.460\nfirewall, which is in a staple of\nLinux security for a long, long time.\n\n16\n00:00:44.460 --> 00:00:48.000\nYou know just a great system to get in\nthere and help to shore up our network,\n\n17\n00:00:48.000 --> 00:00:51.080\ncontrol that access and make sure that\neverything is running nice and secure.\n\n18\n00:00:51.080 --> 00:00:53.460\nThat we know what data is\npassing through our system.\n\n19\n00:00:53.460 --> 00:00:56.309\nSo, right in this episode we're going\nto learn how to get it installed,\n\n20\n00:00:56.309 --> 00:00:57.348\nhow to use it how it works.\n\n21\n00:00:57.348 --> 00:01:00.470\nAnd, hopefully get a chance to see how\nwe can deploy that out in our production\n\n22\n00:01:00.470 --> 00:01:01.150\nenvironments.\n\n23\n00:01:01.150 --> 00:01:02.410\n&gt;&gt; So\nlet's start out with just the basics.\n\n24\n00:01:02.410 --> 00:01:06.240\nNetwork security with iptables\nwhat is iptables sir?\n\n25\n00:01:06.240 --> 00:01:09.500\n&gt;&gt; Alright so iptables is a service it is\na daemon that runs in the background on\n\n26\n00:01:09.500 --> 00:01:11.150\nLinux and it is a network firewall.\n\n27\n00:01:11.150 --> 00:01:14.690\nIt is a software based firewall for\nnetwork access and\n\n28\n00:01:14.690 --> 00:01:18.970\nall that means is that it hooks on to all\nof your network adapters and it allows you\n\n29\n00:01:18.970 --> 00:01:24.000\nto control any traffic coming into or\ngoing out of those adapters.\n\n30\n00:01:24.000 --> 00:01:26.174\nSo it's just kind of like\na little traffic cop.\n\n31\n00:01:26.174 --> 00:01:28.982\nAnd we tell it hey,\nthis is something I want to allow through,\n\n32\n00:01:28.982 --> 00:01:32.175\nthis is something I don't want to\nallow through, and then it does it.\n\n33\n00:01:32.175 --> 00:01:35.580\nNow, it's not a substitute for\na hardware firewall.\n\n34\n00:01:35.580 --> 00:01:40.010\nMost people will have a hardware firewall\nin their environment somewhere and\n\n35\n00:01:40.010 --> 00:01:44.372\nthe hardware firewall stops traffic\nbefore it gets to your server.\n\n36\n00:01:44.372 --> 00:01:49.170\nWith iptables, the attacker traffic or\nthe undesirable traffic\n\n37\n00:01:49.170 --> 00:01:53.290\nhas already made it to your server,\nand it kicks in and stops it.\n\n38\n00:01:53.290 --> 00:01:56.590\nSo, it's more of a defense in death type\nthing where you've got your traditional\n\n39\n00:01:56.590 --> 00:02:00.230\nfirewalls and then you have a software\nfirewall running behind the scenes to get\n\n40\n00:02:00.230 --> 00:02:01.700\nin there and help protect the network.\n\n41\n00:02:01.700 --> 00:02:04.887\nIt also gives the ability to\ncontrol outbound traffic too.\n\n42\n00:02:04.887 --> 00:02:08.680\nWhich is a little bit trickier to do when\nyou've got a hardware firewall in place.\n\n43\n00:02:08.680 --> 00:02:10.750\nWe kinda do all that from\ninside of our system.\n\n44\n00:02:10.750 --> 00:02:14.778\nIt's open source, it's part of almost\nevery distro that's out there, and so\n\n45\n00:02:14.778 --> 00:02:18.580\nit's a great solution when you need\na software firewall on a Linux server.\n\n46\n00:02:18.580 --> 00:02:21.415\n&gt;&gt; But you can never be too careful and\nsecurity is very very important.\n\n47\n00:02:21.415 --> 00:02:23.835\nSo how do we know if we're\nactually running iptables.\n\n48\n00:02:23.835 --> 00:02:26.025\n&gt;&gt; All right so\niptables is the default firewall for\n\n49\n00:02:26.025 --> 00:02:29.725\na lot of distros that are out there but\nit might not be on your distro.\n\n50\n00:02:29.725 --> 00:02:32.570\nSo for example in this show I keep\nusing Red Hat Enterprise Linux right,\n\n51\n00:02:32.570 --> 00:02:35.740\nbecause it's one of the most common\nbusiness Linux servers that are out there.\n\n52\n00:02:35.740 --> 00:02:38.590\nAnd Red Hat doesn't use\niptables by default,\n\n53\n00:02:38.590 --> 00:02:40.330\nthey use something else called firewalld.\n\n54\n00:02:40.330 --> 00:02:44.270\nIt's a different firewall daemon,\nthat many people think is better,\n\n55\n00:02:44.270 --> 00:02:45.180\nsome people don't.\n\n56\n00:02:45.180 --> 00:02:49.120\nIt kinda comes down to preference,\nthey each have their own pros and cons.\n\n57\n00:02:49.120 --> 00:02:52.670\nSo, on my system if I wanna\nfind out if I've got iptables,\n\n58\n00:02:52.670 --> 00:02:54.730\nthere's a couple of different\nways that we can check.\n\n59\n00:02:54.730 --> 00:02:56.750\nThe easiest way is just to see if\nthe service is up and running.\n\n60\n00:02:56.750 --> 00:03:03.670\nSo, for example, on my system,\nI can run a systemctl status iptables.\n\n61\n00:03:03.670 --> 00:03:07.150\nI can run that, and\nI've got iptable service is not found.\n\n62\n00:03:07.150 --> 00:03:08.473\nSo I don't have it, right?\n\n63\n00:03:08.473 --> 00:03:12.753\nIf I'm on an older system,\nI might do a service --status.\n\n64\n00:03:12.753 --> 00:03:18.430\nImport of iptables, that way,\nand look at whether I've got it.\n\n65\n00:03:18.430 --> 00:03:25.260\nAlso if you got IPV6, you would do\na systemctl status ip6tables, like that.\n\n66\n00:03:25.260 --> 00:03:27.320\nTo see if you got the IPV6 version.\n\n67\n00:03:27.320 --> 00:03:30.430\nYou might have both, if you're\nrunning dual stack with IPV4 and IPV6,\n\n68\n00:03:30.430 --> 00:03:31.341\nyou might have both.\n\n69\n00:03:31.341 --> 00:03:33.250\nIn my case, I don't have them.\n\n70\n00:03:33.250 --> 00:03:38.041\nAnd it's important to check for the\nservice, because remember how I said with\n\n71\n00:03:38.041 --> 00:03:43.354\nRed Hat, it uses a different firewall by\ndefault ,right, so I don't have iptables.\n\n72\n00:03:43.354 --> 00:03:44.940\nBut technically, I do have iptables.\n\n73\n00:03:44.940 --> 00:03:50.640\nIf I were to run the iptables command\nit's there, it exists, right?\n\n74\n00:03:50.640 --> 00:03:53.370\nSo parts of iptables\nare actually installed still for\n\n75\n00:03:53.370 --> 00:03:54.580\nbackwards compatibility.\n\n76\n00:03:54.580 --> 00:03:55.780\nIt's just I'm not using it.\n\n77\n00:03:55.780 --> 00:03:57.906\nSo that's why I always check that\nservice status to see if I've got it.\n\n78\n00:03:57.906 --> 00:04:00.594\nIf I don't have it then I\neither have something else or\n\n79\n00:04:00.594 --> 00:04:03.900\nI have no firewall,\nwhich would be a bad spot to be in.\n\n80\n00:04:03.900 --> 00:04:06.950\n&gt;&gt; Well,\ncan we switch from firewalld to iptables?\n\n81\n00:04:06.950 --> 00:04:11.426\nAnd another question is, should we?\n\n82\n00:04:11.426 --> 00:04:13.440\n&gt;&gt; Yeah, [LAUGH] so\nthere's pros and cons with these.\n\n83\n00:04:13.440 --> 00:04:14.830\nYou absolutely can, right.\n\n84\n00:04:14.830 --> 00:04:19.540\nSo if I were on Ubuntu or Deban, iptables\nwould likely be what I've already got.\n\n85\n00:04:19.540 --> 00:04:22.400\nDepending on which kind of flavor I used.\n\n86\n00:04:22.400 --> 00:04:25.145\nBut in the Red Hat world,\nit shifts to FirewallD now and\n\n87\n00:04:25.145 --> 00:04:28.382\nthere's a lot of people that have\nbig investments in iptables.\n\n88\n00:04:28.382 --> 00:04:30.630\nYou might have third party\nmonitoring software.\n\n89\n00:04:30.630 --> 00:04:32.910\nThere's really complex configurations and\n\n90\n00:04:32.910 --> 00:04:34.980\nyou don't wanna put\nthem over to firewalld.\n\n91\n00:04:34.980 --> 00:04:38.800\nSo you can disable firewalld and\nswitch over to iptables,\n\n92\n00:04:38.800 --> 00:04:39.870\nnot even that hard, right?\n\n93\n00:04:40.880 --> 00:04:42.881\nBut you've got that harder question,\n\n94\n00:04:42.881 --> 00:04:45.921\nthe second part of your question should I,\nright?\n\n95\n00:04:45.921 --> 00:04:49.650\nWell, firewalld has some\nimpressive capabilities.\n\n96\n00:04:49.650 --> 00:04:51.020\nYou can create zones.\n\n97\n00:04:51.020 --> 00:04:54.660\nI can different network adapters\nthat are treated in different ways.\n\n98\n00:04:54.660 --> 00:04:56.060\nIptables doesn't do that.\n\n99\n00:04:56.060 --> 00:04:58.548\nIptables treats all\nthe network adaptors together.\n\n100\n00:04:58.548 --> 00:05:01.070\nWell, if you only got one network adapter,\nwhat do you care?\n\n101\n00:05:01.070 --> 00:05:02.580\nIptables does a great job.\n\n102\n00:05:02.580 --> 00:05:06.030\nWhat if I have five adapters in\nfive different types of networks,\n\n103\n00:05:06.030 --> 00:05:09.920\nmanaging that becomes challenging with\niptables with firewalld it's easy.\n\n104\n00:05:09.920 --> 00:05:13.210\nSo, that's the situation we're\nwe'd to go to FirewallD.\n\n105\n00:05:13.210 --> 00:05:16.820\nFirewallD is the future so we're gonna see\nit more deveopment there that we are in\n\n106\n00:05:16.820 --> 00:05:20.480\niptables, so it is a good idea to switch\nover to it, but don't feel rushed.\n\n107\n00:05:20.480 --> 00:05:24.296\nIptables is not going anywhere, so\nif you've got a huge investment in it,\n\n108\n00:05:24.296 --> 00:05:27.809\nyou're perfectly fine with staying\nat it right now, and over time,\n\n109\n00:05:27.809 --> 00:05:29.459\nyou can move over to firewalld.\n\n110\n00:05:29.459 --> 00:05:31.711\nSo let's say I want to take this system,\n\n111\n00:05:31.711 --> 00:05:34.377\nand I want to move it over to firewalld,\nright?\n\n112\n00:05:34.377 --> 00:05:37.579\nIf I want to make that switch,\nthe first thing I need to do is I need to\n\n113\n00:05:37.579 --> 00:05:41.080\nturn off firewalld or\nit's gonna cause me some problems, right?\n\n114\n00:05:41.080 --> 00:05:46.450\nAnd if I do a systemctl status firewalld,\nI can see that I've got it.\n\n115\n00:05:46.450 --> 00:05:49.800\nIt's running,\nit's actively filtering my system.\n\n116\n00:05:49.800 --> 00:05:52.730\nSo I need to get it out of there, right?\n\n117\n00:05:52.730 --> 00:05:56.000\nNow let me bump up to\na root shell real quick.\n\n118\n00:05:56.000 --> 00:06:01.050\nI'm gonna do a sudo -s and\nelevate my privileges, there we go.\n\n119\n00:06:01.050 --> 00:06:06.496\nAnd a lot of people think\nthat you can just come in and\n\n120\n00:06:06.496 --> 00:06:10.433\nsay systemctl, stop, firewalld.\n\n121\n00:06:10.433 --> 00:06:12.300\nSo that's going to turn it off.\n\n122\n00:06:12.300 --> 00:06:17.890\nAnd then systemctl disable\nfirewalld all right.\n\n123\n00:06:17.890 --> 00:06:19.770\nBut there's a problem with disable.\n\n124\n00:06:19.770 --> 00:06:22.760\nWhen you disable a service like this,\n\n125\n00:06:22.760 --> 00:06:25.870\nlike firewalld,\nit removes the link for that file.\n\n126\n00:06:25.870 --> 00:06:31.680\nBut if there's another service\nsomewhere that depends on firewalld,\n\n127\n00:06:31.680 --> 00:06:35.960\nwhen that other service starts,\nit could still start firewalld again.\n\n128\n00:06:35.960 --> 00:06:37.070\nAnd so now I have a problem.\n\n129\n00:06:37.070 --> 00:06:39.040\nYou don't want to run two firewalls.\n\n130\n00:06:39.040 --> 00:06:41.750\nI don't want to run IP tables and\nfirewalld at the same time.\n\n131\n00:06:41.750 --> 00:06:43.738\nIt's a nightmare,\nit's really really challenging.\n\n132\n00:06:43.738 --> 00:06:44.930\n&gt;&gt; [INAUDIBLE] the dependencies.\n\n133\n00:06:44.930 --> 00:06:48.220\n&gt;&gt; Yeah, and they fight,\nthey bump into each other.\n\n134\n00:06:48.220 --> 00:06:50.750\nSo, I really want to pick one or\nthe other.\n\n135\n00:06:50.750 --> 00:06:57.220\nSo what I really need to do is\nsay systemctl mask firewalld.\n\n136\n00:06:57.220 --> 00:07:00.598\nAlright, and what that's gonna do is\nit's gonna effectively disable it.\n\n137\n00:07:00.598 --> 00:07:05.785\nBut, instead of removing the link\nit points the link to /dev, /no.\n\n138\n00:07:05.785 --> 00:07:08.755\nNow if any service tries our firewallD?\n\n139\n00:07:09.850 --> 00:07:12.390\nTheir quest is just don't know way and\nthat's that.\n\n140\n00:07:12.390 --> 00:07:15.010\nSo, now I know firewalld\nis not going to start.\n\n141\n00:07:15.010 --> 00:07:17.805\nSo I've effectively turned off firewallD.\n\n142\n00:07:18.850 --> 00:07:21.890\nAnd now I can enable iptables.\n\n143\n00:07:21.890 --> 00:07:22.630\n&gt;&gt; Okay.\n\n144\n00:07:22.630 --> 00:07:26.060\n&gt;&gt; But it does get a little tricky here\ntoo because I showed you a moment ago that\n\n145\n00:07:26.060 --> 00:07:29.310\nwhen I run a iptables that\ncommand was there, right?\n\n146\n00:07:29.310 --> 00:07:37.600\nBut if I do a systemctl enable iptables,\nno such file or directory.\n\n147\n00:07:37.600 --> 00:07:38.870\nI got the command.\n\n148\n00:07:38.870 --> 00:07:41.830\nWell, what I've actually got\nis a subset of iptables.\n\n149\n00:07:41.830 --> 00:07:46.300\nReally just the commands for\ncontrolling it, not the actual service.\n\n150\n00:07:46.300 --> 00:07:48.940\nSo we'll need get iptables\ninstalled on this machine.\n\n151\n00:07:48.940 --> 00:07:52.456\nAnd even for distros like Red Hat where\nthey've moved to firewalld already,\n\n152\n00:07:52.456 --> 00:07:55.917\nthey still have packages available for\niptable so we can get it installed and\n\n153\n00:07:55.917 --> 00:07:56.802\nget it available.\n\n154\n00:07:56.802 --> 00:08:00.682\nIf you're on Debian or an older version of\nCentOS or something like that, then it's\n\n155\n00:08:00.682 --> 00:08:04.470\ngot iptables already, but I just need to\ninstall it on mine to get that available.\n\n156\n00:08:04.470 --> 00:08:05.364\nOkay.\n&gt;&gt; All right.\n\n157\n00:08:05.364 --> 00:08:06.464\nSo, I'm gonna come in.\n\n158\n00:08:06.464 --> 00:08:10.390\nI'll just say yum install iptables.\n\n159\n00:08:10.390 --> 00:08:15.940\nNow, on most distros this is all we\nneed is just yum install iptables,\n\n160\n00:08:15.940 --> 00:08:18.020\nbut if I do it it's gonna tell\nme it's already installed.\n\n161\n00:08:18.020 --> 00:08:21.850\nAnd that's because Red Hat,\nthey consider that the control tools.\n\n162\n00:08:21.850 --> 00:08:26.630\nSo I actually need to do a yum\ninstall iptables- Services and\n\n163\n00:08:26.630 --> 00:08:29.790\nthat's going to install\nthe actual IP tables services.\n\n164\n00:08:29.790 --> 00:08:32.810\nSo that's the one that I want and\nI'll get that installed.\n\n165\n00:08:32.810 --> 00:08:36.630\nNow on Ubuntu in older versions of the VN.\n\n166\n00:08:36.630 --> 00:08:38.880\nThe didn't call it IP tables -services.\n\n167\n00:08:38.880 --> 00:08:44.530\nthey called it iptables-persistent, so you\nmight actually see that, that other name.\n\n168\n00:08:44.530 --> 00:08:46.870\nSo check through your repositories,\n\n169\n00:08:46.870 --> 00:08:50.430\ndo a search for iptables-*, and\nyou'll find out what that name is, but\n\n170\n00:08:50.430 --> 00:08:52.940\nit's usually -services, but\nsometimes it can be different.\n\n171\n00:08:52.940 --> 00:08:56.810\nSo I'm gonna choose yes to that\nto get iptables installed, and\n\n172\n00:08:56.810 --> 00:09:02.410\nthen once it's installed, I've got it,\nbut if not actually enabled.\n\n173\n00:09:02.410 --> 00:09:04.250\nYou know I need to get that enable and\nturned on.\n\n174\n00:09:04.250 --> 00:09:09.241\nSo I'll come in here and say systemctl\n——enable and i'll do it ——now, for\n\n175\n00:09:09.241 --> 00:09:14.320\niptables and ——now is just saying that\nI wanted to start immediately as well.\n\n176\n00:09:14.320 --> 00:09:15.645\nSo we have to do is start command.\n\n177\n00:09:15.645 --> 00:09:21.130\nAnd get that one fired up and oops,\nsorry, I don't need dashes before enable.\n\n178\n00:09:21.130 --> 00:09:23.150\nThere we go and that's gonna turn it on.\n\n179\n00:09:23.150 --> 00:09:27.086\nIf I'm doing ipv6 as well,\nI would run the same command but\n\n180\n00:09:27.086 --> 00:09:31.045\nsay ip6 tables and\nnow it's gonna fire that one up as well.\n\n181\n00:09:31.045 --> 00:09:35.644\nSo, I've got my ipv4 and\nmy ipv6 firewall is now up and running and\n\n182\n00:09:35.644 --> 00:09:37.420\nready to filter access.\n\n183\n00:09:37.420 --> 00:09:41.108\n&gt;&gt; So then, where do we get\nstarted to configure the firewall?\n\n184\n00:09:41.108 --> 00:09:44.160\n&gt;&gt; Yeah it does have\na default configuration and\n\n185\n00:09:44.160 --> 00:09:48.650\ndefault configuration is not\nreally suitable for most people.\n\n186\n00:09:48.650 --> 00:09:52.160\nBasically, what it is doing is blocking\nalmost everything coming in and\n\n187\n00:09:52.160 --> 00:09:54.550\nit's allowing everything going out.\n\n188\n00:09:54.550 --> 00:09:57.170\nWell, on a desktop,\nthat's typically what you want.\n\n189\n00:09:57.170 --> 00:10:00.350\nOn a desktop, I don't want\npeople coming into my desktop.\n\n190\n00:10:00.350 --> 00:10:02.300\nAnd as far as going out,\nI want my desktop.\n\n191\n00:10:02.300 --> 00:10:04.020\nI wanna be able to get to whatever I can,\nright?\n\n192\n00:10:04.020 --> 00:10:05.130\nSo I don't want limits.\n\n193\n00:10:05.130 --> 00:10:07.640\nSo it is a good configuration on desktop.\n\n194\n00:10:07.640 --> 00:10:09.030\nBut this is a server show.\n\n195\n00:10:09.030 --> 00:10:13.120\nAnd on servers, we typically have some\nkind of service we're making available\n\n196\n00:10:13.120 --> 00:10:16.160\nthat we do want people from the outside\nto be able to come in and access.\n\n197\n00:10:16.160 --> 00:10:17.680\nSo I'm gonna need to change it.\n\n198\n00:10:17.680 --> 00:10:21.485\nIf you wanna see\nthe default configuration,\n\n199\n00:10:21.485 --> 00:10:24.196\nyou can run iptables --list.\n\n200\n00:10:24.196 --> 00:10:28.000\nAnd that's gonna show you the firewall\nrules that are in place, all right?\n\n201\n00:10:28.000 --> 00:10:28.960\nSo let me run that.\n\n202\n00:10:30.130 --> 00:10:34.420\nAnd what I'm gonna see is\na bunch of accept statements and\n\n203\n00:10:34.420 --> 00:10:36.650\na few reject statements, right?\n\n204\n00:10:36.650 --> 00:10:39.770\nSo looking at this first one,\nthis is my input chain.\n\n205\n00:10:39.770 --> 00:10:43.800\nAnd this is traffic coming into my server.\n\n206\n00:10:43.800 --> 00:10:45.680\nNotice it doesn't specify\na network adapter.\n\n207\n00:10:45.680 --> 00:10:49.950\nIt's not saying,\nyou coming in, ETH0 or ENO41,\n\n208\n00:10:49.950 --> 00:10:53.090\nit's just saying, Trevor coming in, right?\n\n209\n00:10:53.090 --> 00:10:54.460\nIt groups all the adapters together.\n\n210\n00:10:54.460 --> 00:10:58.294\nThat's one of the big powerful features of\nfirewallD is that its the adapters can be\n\n211\n00:10:58.294 --> 00:10:59.346\ntreated separately.\n\n212\n00:10:59.346 --> 00:11:03.141\nBut here its saying, I'm going to accept,\nand if you look at the list,\n\n213\n00:11:03.141 --> 00:11:07.470\nthe very first entry here, all traffic\nwhere a session is already established.\n\n214\n00:11:07.470 --> 00:11:09.550\nIn other words,\nif I ask somebody a question,\n\n215\n00:11:09.550 --> 00:11:11.320\nthey're allowed to answer me back, right?\n\n216\n00:11:11.320 --> 00:11:13.040\nSo it's allowing all of that traffic.\n\n217\n00:11:13.040 --> 00:11:17.130\nIt's allowing pings, ICMP, right,\nallowing all of that to come through.\n\n218\n00:11:17.130 --> 00:11:21.580\nAnd then we've got this interesting\nline here, except all anywhere.\n\n219\n00:11:21.580 --> 00:11:24.169\nThat's pretty much allowing\nall traffic isn't it?\n\n220\n00:11:24.169 --> 00:11:27.000\n&gt;&gt; [LAUGH]\n&gt;&gt; That seems a little heavy handed.\n\n221\n00:11:27.000 --> 00:11:31.210\nAfter that, we've gotta accept\nTCP traffic for SSH, right, so\n\n222\n00:11:31.210 --> 00:11:32.750\nit's got a destination port of SSH.\n\n223\n00:11:32.750 --> 00:11:34.104\nI'm allowing people to SSH into my system.\n\n224\n00:11:34.104 --> 00:11:37.720\nIf I'm on a workstation, I might not\nwant people to SSH into my system.\n\n225\n00:11:37.720 --> 00:11:40.840\nSo again that default might\nnow work the way that I want.\n\n226\n00:11:40.840 --> 00:11:44.460\nAnd then after that I gonna reject\nstatement that reject everything else and\n\n227\n00:11:44.460 --> 00:11:45.120\nblocks that out.\n\n228\n00:11:45.120 --> 00:11:47.930\nSo these are the rules\nthat I'm putting place and\n\n229\n00:11:47.930 --> 00:11:52.500\nthen as far as outbound traffic,\nwell, there's nothing down here.\n\n230\n00:11:52.500 --> 00:11:57.700\nDefaulting to accept, so it's accepting\nme sending what ever I want out.\n\n231\n00:11:57.700 --> 00:12:00.340\nAnd that's the basic policy has in place.\n\n232\n00:12:00.340 --> 00:12:04.120\nSo, it's, it's up, it's running,\nit's doing it's job,\n\n233\n00:12:04.120 --> 00:12:09.110\nit's not just necessarily\nconfigured in an ideal fashion.\n\n234\n00:12:09.110 --> 00:12:11.330\nNot necessarily the way that\nI really want that to be.\n\n235\n00:12:11.330 --> 00:12:14.680\nNow, I use iptables dash dash on list.\n\n236\n00:12:14.680 --> 00:12:19.580\nAs your list grows, it can become harder\nand harder for it to bring up and\n\n237\n00:12:19.580 --> 00:12:23.155\nrender the whole list, so you'll see\na lot of people add -n to the end of it.\n\n238\n00:12:23.155 --> 00:12:27.400\nAnd -n says instead of using these\nlittle nicknames like anywhere,\n\n239\n00:12:27.400 --> 00:12:31.600\nit actually shows the ipv4,\nor ipv6 or whatever,\n\n240\n00:12:31.600 --> 00:12:34.470\naddressing and\nthat makes it render a little faster but\n\n241\n00:12:34.470 --> 00:12:36.820\nit also makes it easier for\nyou to tell what's being pointed at.\n\n242\n00:12:36.820 --> 00:12:40.410\nSo, that's another little option that you\nmight use to be able to view those rules\n\n243\n00:12:40.410 --> 00:12:42.370\nand see the information\nthat you're looking for.\n\n244\n00:12:42.370 --> 00:12:44.580\nBut at this point,\nI can see what I've got.\n\n245\n00:12:45.810 --> 00:12:49.720\nI'm just using iptables -- list,\nthere's one more command,\n\n246\n00:12:49.720 --> 00:12:54.050\nwhich is iptables --list-rules.\n\n247\n00:12:54.050 --> 00:12:57.760\nAnd this one shows the same rules,\nbut in a different format.\n\n248\n00:12:57.760 --> 00:12:58.820\nAnd this is gonna be important for\n\n249\n00:12:58.820 --> 00:13:04.450\nus a little bit later on, because this is\nthe actual command syntax for these rules.\n\n250\n00:13:04.450 --> 00:13:08.100\nUp here, it's formatted to try and\nbe human-readable.\n\n251\n00:13:08.100 --> 00:13:11.310\nBut down here this is where we see\nthem in command format which is\n\n252\n00:13:11.310 --> 00:13:13.940\nhandy if I wanna move rules\nfrom one system to another.\n\n253\n00:13:13.940 --> 00:13:17.490\nIf I wanna back them up if I wanna edit\nthem I wanna see them in this format\n\n254\n00:13:17.490 --> 00:13:18.480\nbecause that's what I wanna work it.\n\n255\n00:13:18.480 --> 00:13:21.100\nSo those are all different ways\nthat we can see the rules and\n\n256\n00:13:21.100 --> 00:13:23.870\nsee that the firewalls configure\nto do what we want them to do.\n\n257\n00:13:23.870 --> 00:13:25.440\n&gt;&gt; Well Don how does\nthe chains work together?\n\n258\n00:13:25.440 --> 00:13:27.510\n&gt;&gt; All right so the chains right?\n\n259\n00:13:27.510 --> 00:13:28.797\nI kind of glanced over those didn't I?\n\n260\n00:13:28.797 --> 00:13:30.700\nLet me pull my list back up.\n\n261\n00:13:30.700 --> 00:13:35.640\nI have this chain input,\nchain forward and chain output, right?\n\n262\n00:13:35.640 --> 00:13:39.710\nThree chains, the chains,\nlike the name implies, chain together.\n\n263\n00:13:39.710 --> 00:13:44.354\nTraffic comes in, traffic gets forwarded,\ntraffic goes out.\n\n264\n00:13:44.354 --> 00:13:46.495\nNow normally on a normal system,\n\n265\n00:13:46.495 --> 00:13:51.920\nthe forward chain never gets used\nwhich is why it's set to reject all.\n\n266\n00:13:51.920 --> 00:13:56.360\nOn a normal system,\ndata either comes in or data goes out.\n\n267\n00:13:56.360 --> 00:13:59.180\nIt never does both, right?\n\n268\n00:13:59.180 --> 00:14:02.450\nBut on a router or on a firewall,\ndata does do both.\n\n269\n00:14:02.450 --> 00:14:06.234\nOn a router, data comes in one interface,\nI route it to another interface,\n\n270\n00:14:06.234 --> 00:14:08.350\nand then I send it back out again.\n\n271\n00:14:08.350 --> 00:14:13.090\nOn a firewall, I receive data on one\ninterface, I filter it or I don't and\n\n272\n00:14:13.090 --> 00:14:14.910\nthen I send it out another interface.\n\n273\n00:14:14.910 --> 00:14:20.880\nSo, it would come in hitting the input\nchain, it would then get forwarded based\n\n274\n00:14:20.880 --> 00:14:24.700\non the forward chain and then it would\ngo out again based on the output chain.\n\n275\n00:14:24.700 --> 00:14:27.130\nSo on a firewall or\nrouter if you take a Linux server and\n\n276\n00:14:27.130 --> 00:14:29.992\nconfigure it as a firewall or\na router, or even a proxy server.\n\n277\n00:14:29.992 --> 00:14:32.080\nThen all three of these would apply.\n\n278\n00:14:32.080 --> 00:14:34.020\nInput, forward, output.\n\n279\n00:14:34.020 --> 00:14:37.390\nBut on a normal desktop or a server,\nthe forward chain doesn't get used, and\n\n280\n00:14:37.390 --> 00:14:41.250\nthat default rule there, reject all, makes\nsure we're not forwarding any traffic.\n\n281\n00:14:41.250 --> 00:14:43.790\nIt either comes in or it goes out.\n\n282\n00:14:43.790 --> 00:14:47.330\nNow, for most of us, we don't even mess\nwith the output chain very much, so\n\n283\n00:14:47.330 --> 00:14:48.930\nthe bulk of our work is done with input.\n\n284\n00:14:48.930 --> 00:14:51.884\nI'm controlling people\nassessing my system, so\n\n285\n00:14:51.884 --> 00:14:54.497\na lot of people just\nfocus on that one chain.\n\n286\n00:14:54.497 --> 00:14:55.806\nBut in reality there are three and\n\n287\n00:14:55.806 --> 00:14:57.920\nthey do all the work together\nthat handles this data.\n\n288\n00:14:58.980 --> 00:15:00.240\n&gt;&gt; So, how do the rules work?\n\n289\n00:15:01.460 --> 00:15:03.185\n&gt;&gt; Another rules,\nthey look a little confusing\n\n290\n00:15:03.185 --> 00:15:04.530\nbecause there's syntax is strange\n&gt;&gt; Yeah.\n\n291\n00:15:04.530 --> 00:15:07.320\n&gt;&gt; But there aren't so bad,\nI mean pull it back up right.\n\n292\n00:15:07.320 --> 00:15:08.480\nI'll look into this format.\n\n293\n00:15:08.480 --> 00:15:13.450\nOkay, basically what you are doing this\nfirst couple of lines here defining my\n\n294\n00:15:13.450 --> 00:15:14.660\nchains, right?\n\n295\n00:15:14.660 --> 00:15:16.500\nSo there's three change input forward and\n\n296\n00:15:16.500 --> 00:15:20.700\noutput and it's setting the default\naction that those chains are gonna take,\n\n297\n00:15:20.700 --> 00:15:23.420\nwhether they accept the traffic or\nreject it or whatever.\n\n298\n00:15:23.420 --> 00:15:24.846\nSo, we're specifying that.\n\n299\n00:15:24.846 --> 00:15:29.644\nNow, there's actually a number of\ndifferent actions that we can take there,\n\n300\n00:15:29.644 --> 00:15:33.380\nbut you'll usually just see two,\naccept and reject.\n\n301\n00:15:33.380 --> 00:15:36.150\nThere is another one that's\ncalled block or drop.\n\n302\n00:15:36.150 --> 00:15:37.220\nIt'll say drop usually.\n\n303\n00:15:37.220 --> 00:15:41.150\nAnd the difference there is\nhow we react to the data.\n\n304\n00:15:41.150 --> 00:15:45.200\nIf I accept data, I'm allowed it to\ncome in and pass right through, right?.\n\n305\n00:15:45.200 --> 00:15:49.200\nIf I reject it,\nsomebody tries to reach into my system.\n\n306\n00:15:49.200 --> 00:15:52.730\nI stop it, and I tell them,\nhey you just got blocked.\n\n307\n00:15:52.730 --> 00:15:55.410\nI let them know,\nhey I am rejecting your traffic.\n\n308\n00:15:55.410 --> 00:15:56.962\nSo you know the session's over.\n\n309\n00:15:56.962 --> 00:16:02.782\nBut if I choose drop instead, I receive\nbad traffic and I just throw it away.\n\n310\n00:16:02.782 --> 00:16:05.677\nWhoever made that bad traffic,\nI never tell them.\n\n311\n00:16:05.677 --> 00:16:08.637\nAnd they'll sit there, and\nthey might go into retries and wherever.\n\n312\n00:16:08.637 --> 00:16:11.152\nThey don't know it just got thrown away.\n\n313\n00:16:11.152 --> 00:16:12.992\nIf it's bad traffic that\nwe don't care about,\n\n314\n00:16:12.992 --> 00:16:15.430\nwe don't normally wanna waste\nthe resource of reaching out and\n\n315\n00:16:15.430 --> 00:16:17.593\nletting these people know\nthat they've been blocked.\n\n316\n00:16:17.593 --> 00:16:19.338\nYou just block them and that's that.\n\n317\n00:16:19.338 --> 00:16:24.436\nSo, if you're actively blocking attack\ntraffic, then you'll wanna use drop.\n\n318\n00:16:24.436 --> 00:16:27.686\nBut if it's just a matter of\nhandling routine traffic, and\n\n319\n00:16:27.686 --> 00:16:30.806\nyou want people to know they\ngot stopped for some reason,\n\n320\n00:16:30.806 --> 00:16:33.670\nyou wanna make sure that\nyou use the reject command.\n\n321\n00:16:33.670 --> 00:16:38.750\nSo reject is kinda like a friendly block,\nand drop is like an unfriendly block.\n\n322\n00:16:38.750 --> 00:16:41.135\n&gt;&gt; So Don,\nhow do you manage incoming traffic?\n\n323\n00:16:41.135 --> 00:16:42.425\n&gt;&gt; All right, so when we get in here,\n\n324\n00:16:42.425 --> 00:16:44.526\nthe way we manage traffic is\nthrough the rules, right?\n\n325\n00:16:44.526 --> 00:16:46.781\nAnd normally, it's the incoming\ntraffic that we care about, so\n\n326\n00:16:46.781 --> 00:16:48.388\nwe're really messing\nwith that input chain.\n\n327\n00:16:48.388 --> 00:16:50.546\nBut the way we mess with the chains\nis kind of same for each of them,\n\n328\n00:16:50.546 --> 00:16:52.097\nthe commands are just\na little bit different.\n\n329\n00:16:52.097 --> 00:16:54.266\nSo, typically when we\ninteract with the firewall,\n\n330\n00:16:54.266 --> 00:16:55.954\nwe're gonna use the iptables command.\n\n331\n00:16:55.954 --> 00:16:57.267\nWhat I used to generate these lists.\n\n332\n00:16:57.267 --> 00:16:58.150\n&gt;&gt; Right.\n\n333\n00:16:58.150 --> 00:17:01.220\n&gt;&gt; And if I want to add a rule or\nremove a rule, so let's say, for\n\n334\n00:17:01.220 --> 00:17:04.660\nexample, I wanna have a web server, right?\n\n335\n00:17:04.660 --> 00:17:09.351\nSo I might install a web server, cuz I\ndon't actually have one, I just want one.\n\n336\n00:17:09.351 --> 00:17:11.175\nSo I'm gonna install a web\nserver real quick, and\n\n337\n00:17:11.175 --> 00:17:13.550\nthen I wanna create a rule\nthat allows that traffic in.\n\n338\n00:17:13.550 --> 00:17:20.880\nSo once I get that fired up, we'll do\na system ctl enable real quick on http.\n\n339\n00:17:20.880 --> 00:17:22.698\nThere we go, all right, so\nnow I've got a web server.\n\n340\n00:17:22.698 --> 00:17:25.490\nBut nobody's gonna be able to get to it,\n\n341\n00:17:25.490 --> 00:17:29.845\nbecause when I look at my rules,\nand kind of see what's there,\n\n342\n00:17:29.845 --> 00:17:34.385\non the input side,\nI'm not accepting connections on port 80.\n\n343\n00:17:34.385 --> 00:17:37.855\nSo I need to allow that, and we can\nuse the iptables command to do that.\n\n344\n00:17:37.855 --> 00:17:40.675\nSo, I'm going to say, iptables-a,\n\n345\n00:17:40.675 --> 00:17:44.354\nto let it know that I'm\nadding a rule to the system.\n\n346\n00:17:44.354 --> 00:17:46.673\nAnd then, I need to tell it\nwhich chain I'm adding to.\n\n347\n00:17:46.673 --> 00:17:49.020\nAnd I'm adding to the input chain.\n\n348\n00:17:49.020 --> 00:17:51.195\nIf I was adding to a different chain,\nI would just put there name here, right?\n\n349\n00:17:51.195 --> 00:17:56.829\nSo, iptables -a input, and\nthen I tell it what I'm matching on.\n\n350\n00:17:56.829 --> 00:17:58.675\nNow the matching part is\nwhere this gets really fun.\n\n351\n00:17:58.675 --> 00:18:00.577\nCuz you can match on all\nsorts of different things.\n\n352\n00:18:00.577 --> 00:18:03.395\nYou can match on the port\nthe traffic is using.\n\n353\n00:18:03.395 --> 00:18:06.419\nYou can match on the source IP,\nthe destination IP, source port,\n\n354\n00:18:06.419 --> 00:18:07.341\ndestination port.\n\n355\n00:18:07.341 --> 00:18:10.140\nThese are all different things we can\nmatch on to identify the traffic we\n\n356\n00:18:10.140 --> 00:18:10.707\nwanna allow.\n\n357\n00:18:10.707 --> 00:18:14.000\nAnd what I'm looking for\nis I'm looking for web traffic.\n\n358\n00:18:14.000 --> 00:18:21.643\nAnd web traffic is going to be TCP traffic\nwith a destination of port 80 or 443.\n\n359\n00:18:21.643 --> 00:18:25.186\nNow, I'll have to do two rules for\nthis, if I wanna do 80 and 443.\n\n360\n00:18:25.186 --> 00:18:27.570\nBut that TCP, that's a protocol.\n\n361\n00:18:27.570 --> 00:18:32.860\nSo, I can say -p, I'm gonna match on\na protocol, and the protocol is tcp.\n\n362\n00:18:32.860 --> 00:18:35.510\nAnd then, I can match on a port.\n\n363\n00:18:35.510 --> 00:18:42.185\nNow, there's two entries for port,\nI can say --dport or --sport.\n\n364\n00:18:42.185 --> 00:18:46.217\nS is the source and D is the destination,\nso I'm saying the destination port.\n\n365\n00:18:46.217 --> 00:18:48.399\nWhen traffic is coming to me,\nI'm the web server, so\n\n366\n00:18:48.399 --> 00:18:50.645\nthey're coming to me with\na destination of port 80.\n\n367\n00:18:50.645 --> 00:18:54.674\nSo I'll say --dport, and\nthen you can provide the number,\n\n368\n00:18:54.674 --> 00:18:56.544\nwhich is what I normally do.\n\n369\n00:18:56.544 --> 00:19:00.369\nOr, there are actually a lot of\nalias that are in the system.\n\n370\n00:19:00.369 --> 00:19:03.890\nSo I can type http like that, and\nit'll know what I'm talking about,\n\n371\n00:19:03.890 --> 00:19:05.570\nif it's a recognized protocol.\n\n372\n00:19:05.570 --> 00:19:07.836\nIf it's not a recognized protocol,\nyou just type in the number.\n\n373\n00:19:07.836 --> 00:19:11.390\nAnd like I said, I'm kind of in the habit\nof always typing in the number.\n\n374\n00:19:11.390 --> 00:19:13.902\nBut if you look up here at these\nrules that they've already got,\n\n375\n00:19:13.902 --> 00:19:15.868\nsee how it's got a destination\npoint here of ssh?\n\n376\n00:19:15.868 --> 00:19:20.460\nSo, that's TCP port 22, but\nit changes it to that name.\n\n377\n00:19:20.460 --> 00:19:23.820\nSo, even if you put a number in,\nit'll show the name later on.\n\n378\n00:19:23.820 --> 00:19:26.592\nSo I'll do a destination port of HTTP.\n\n379\n00:19:26.592 --> 00:19:30.709\nAnd then, I can specify what\nI want to do about it, right?\n\n380\n00:19:30.709 --> 00:19:34.423\nAnd you use -j to indicate\nwhat to do about it.\n\n381\n00:19:34.423 --> 00:19:38.048\nAnd here's where I can come in and\nI can say, do I wanna drop the traffic,\n\n382\n00:19:38.048 --> 00:19:40.738\nwhich will just stop that\nweb traffic from coming in?\n\n383\n00:19:40.738 --> 00:19:45.213\nDo I want to reject it, which will\nlet people know they got blocked?\n\n384\n00:19:45.213 --> 00:19:48.694\nOr, what I wanna do, which is,\nI want to accept the traffic.\n\n385\n00:19:48.694 --> 00:19:51.326\nI'm going to allow it to come in, okay?\n\n386\n00:19:51.326 --> 00:19:55.787\nAnd I can run that, and that's gonna\nadd that rule to my input chain.\n\n387\n00:19:55.787 --> 00:20:00.011\nSo if I run iptables --list,\nand I take a look at it now,\n\n388\n00:20:00.011 --> 00:20:03.795\nI can see where that entry\nwas added on right there,\n\n389\n00:20:03.795 --> 00:20:07.859\nwhere it's added that TCP\ndestination port for HTTP.\n\n390\n00:20:07.859 --> 00:20:08.784\nI've added that entry.\n\n391\n00:20:08.784 --> 00:20:13.212\nAnd we can add other things, like adding\nreject statements or whatever, and start\n\n392\n00:20:13.212 --> 00:20:17.209\nto kind of customize it and put these in,\njust adding those rules in place.\n\n393\n00:20:17.209 --> 00:20:23.700\nSo another example, maybe I don't\nwanna allow just everybody to get in.\n\n394\n00:20:23.700 --> 00:20:26.510\nI want to allow one\nparticular person to get in.\n\n395\n00:20:26.510 --> 00:20:28.570\nSo I'm gonna pull that rule back up.\n\n396\n00:20:28.570 --> 00:20:30.350\nOr, no, let's go the block way.\n\n397\n00:20:30.350 --> 00:20:32.976\nI wanna block one particular\nperson from getting in.\n\n398\n00:20:32.976 --> 00:20:35.388\nSo if I take a look at\nmy rule as it's written,\n\n399\n00:20:35.388 --> 00:20:37.873\nit's allowing everybody\nto get access HTTP.\n\n400\n00:20:37.873 --> 00:20:39.799\nI wanna block one particular person.\n\n401\n00:20:39.799 --> 00:20:41.805\nSo I might add a little more to this.\n\n402\n00:20:41.805 --> 00:20:45.793\nI might come in and\ndo a filter based on a source address.\n\n403\n00:20:45.793 --> 00:20:49.376\nAnd you can do a source address -s or\na destination with -d.\n\n404\n00:20:49.376 --> 00:20:53.845\nSo I'm gonna add a -s, and I'll look for\n\n405\n00:20:53.845 --> 00:21:01.150\none particular entry like that,\n-s 172.16.0.111.\n\n406\n00:21:01.150 --> 00:21:06.328\nSo if traffic comes from this IP,\nand it's TCP and\n\n407\n00:21:06.328 --> 00:21:10.288\nit's port 80, I want to REJECT it.\n\n408\n00:21:10.288 --> 00:21:13.326\nSo I'm gonna reject that traffic and\nblock that out, okay?\n\n409\n00:21:13.326 --> 00:21:16.082\nSo these rules kind of\ncomplement each other, right?\n\n410\n00:21:16.082 --> 00:21:18.975\nWhen IP tables reads the rules and\nbuilds its table,\n\n411\n00:21:18.975 --> 00:21:23.657\nit's kind of compiling all these to create\nthe proper order in syntax to run them in.\n\n412\n00:21:23.657 --> 00:21:26.867\nAnd so it's gonna recognize that\nI wanna block just this IP.\n\n413\n00:21:26.867 --> 00:21:29.778\nAnd then I've get the other allow rule,\nwhere it'll come in and it'll say, okay,\n\n414\n00:21:29.778 --> 00:21:31.347\nI wanna allow this traffic and\nbring that in.\n\n415\n00:21:31.347 --> 00:21:34.162\nSo, each of these are just kind\nof adding those entries and\n\n416\n00:21:34.162 --> 00:21:35.602\nstarting to customize that.\n\n417\n00:21:35.602 --> 00:21:40.886\nAnd if I ever forget the syntax,\nI can always run iptables--list-rules,\n\n418\n00:21:40.886 --> 00:21:46.016\nand it'll show me the rules that are in\nthere, in the syntax form, right?\n\n419\n00:21:46.016 --> 00:21:49.141\nSo I can kinda cheat, and I can say, well,\nI need a rule, and I can't remember how.\n\n420\n00:21:49.141 --> 00:21:53.117\nHere, let me just take one of these and\nI'll grab it, and use that format for\n\n421\n00:21:53.117 --> 00:21:55.620\nwriting my own rule and\ngetting it put in place.\n\n422\n00:21:56.750 --> 00:21:59.564\nActually, I'm kind of glad I\ndid this because -m states,\n\n423\n00:21:59.564 --> 00:22:01.891\nall right, so\nlet me talk about that real quick.\n\n424\n00:22:01.891 --> 00:22:04.794\nSometimes we're not worried\nabout the initial connection,\n\n425\n00:22:04.794 --> 00:22:08.041\nwe're worry about follow ups, and\nthis is usually with responses.\n\n426\n00:22:08.041 --> 00:22:11.750\nI send a request to somebody,\nI want them to be able to respond to me.\n\n427\n00:22:11.750 --> 00:22:16.027\nIn that case, what we're looking for is\nnot a new session, which is the default.\n\n428\n00:22:16.027 --> 00:22:19.477\nWe're looking for\na session that's already established.\n\n429\n00:22:19.477 --> 00:22:23.210\nAnd to match on that, what you're\nmonitoring for is what's called a state.\n\n430\n00:22:23.210 --> 00:22:27.544\nAnd so it's telling you here, we wanna\nmonitor for a state and say, if it's\n\n431\n00:22:27.544 --> 00:22:32.716\nalready established, or if it's related to\nanother protocol, now what does that mean?\n\n432\n00:22:32.716 --> 00:22:39.205\nWell, FTP, FTP you connect and\nsend commands on TCP port 21.\n\n433\n00:22:39.205 --> 00:22:42.570\nAnd then,\nyou ship your data on TCP port 20.\n\n434\n00:22:42.570 --> 00:22:44.052\nThere's two different ports, right?\n\n435\n00:22:44.052 --> 00:22:48.268\nOr when you go into passive mode,\nyou send your commands on port 21.\n\n436\n00:22:48.268 --> 00:22:51.165\nAnd then, you move to another port\nnumber that's a really high number,\n\n437\n00:22:51.165 --> 00:22:52.837\nit's kind of almost randomly assigned.\n\n438\n00:22:52.837 --> 00:22:54.397\nSo it's hard to predict those.\n\n439\n00:22:54.397 --> 00:22:58.297\nSo we can do the related state to say,\nif you see a connection on port 21, and\n\n440\n00:22:58.297 --> 00:23:02.317\nnow a connection's coming in on port 20,\nwell that's just a data transfer,\n\n441\n00:23:02.317 --> 00:23:03.339\nwe'll allow that.\n\n442\n00:23:03.339 --> 00:23:05.573\nAnd so\nwe can catch based on the state also.\n\n443\n00:23:05.573 --> 00:23:07.210\nIptables are very powerful.\n\n444\n00:23:07.210 --> 00:23:11.221\nIt is a stateful firewall, which is\nreally what we need to truly function\n\n445\n00:23:11.221 --> 00:23:15.034\nbidirectional, and allow it to\ncatch that traffic, and filter it,\n\n446\n00:23:15.034 --> 00:23:17.426\nand manage it, and handle that properly.\n\n447\n00:23:17.426 --> 00:23:20.473\nSo, we just set the options to\nmatch what it is we need, and\n\n448\n00:23:20.473 --> 00:23:22.227\nthen we get everything in place.\n\n449\n00:23:22.227 --> 00:23:24.827\nNow, when I do all of these commands,\nright,\n\n450\n00:23:24.827 --> 00:23:28.975\nI'm using the iptables command to do it,\nand I'm adding these rules in.\n\n451\n00:23:28.975 --> 00:23:33.520\nThese rules take effect right away,\nbut they're not persistent.\n\n452\n00:23:33.520 --> 00:23:37.357\nIf I were to reboot or restart the iptable\nservice, I will lose these rules.\n\n453\n00:23:37.357 --> 00:23:39.062\nSo I need to follow that\nup with another command.\n\n454\n00:23:39.062 --> 00:23:42.229\nI'm gonna run iptables- save.\n\n455\n00:23:42.229 --> 00:23:47.463\nNow, on most distos it's iptables- save,\non some it's iptables save.\n\n456\n00:23:47.463 --> 00:23:49.918\nAnd on RedHat,\nI think it actually takes both.\n\n457\n00:23:49.918 --> 00:23:50.648\nLet me do it here.\n\n458\n00:23:50.648 --> 00:23:55.055\nI'm doing iptables-save, and see how it's\ngenerating the config file and saving it?\n\n459\n00:23:55.055 --> 00:23:58.859\nOr if I do iptables save,\nnope, it didn't take that one.\n\n460\n00:23:58.859 --> 00:24:02.794\nAll right, so on some distros though,\nyou will see iptables save, but\n\n461\n00:24:02.794 --> 00:24:06.349\non this one it's -save, so\nI'll punch that in and it saves it.\n\n462\n00:24:06.349 --> 00:24:10.771\nNow it's saved to the file system, so if I\nrestart the service All of my rules will\n\n463\n00:24:10.771 --> 00:24:15.062\nhang around and still be there, and that\nis an important thing if you wanna make\n\n464\n00:24:15.062 --> 00:24:17.370\nsure all the stuffs is working properly.\n\n465\n00:24:17.370 --> 00:24:20.360\n&gt;&gt; Is everything has to be\ndone with iptables command?\n\n466\n00:24:20.360 --> 00:24:21.507\n&gt;&gt; It doesn't have to.\n\n467\n00:24:21.507 --> 00:24:24.732\nThe iptables command is nice cuz I\ncan make changes the firewall without\n\n468\n00:24:24.732 --> 00:24:26.780\nrestarting it, right?\n\n469\n00:24:26.780 --> 00:24:30.190\nIf I make changes other ways I have to\nrestart the firewall and take effect.\n\n470\n00:24:30.190 --> 00:24:32.440\nAnd if you restart the firewall\nyou drop all your connections.\n\n471\n00:24:32.440 --> 00:24:34.755\nBut I'll tell you for me,\nwhen I'm making changes,\n\n472\n00:24:34.755 --> 00:24:36.613\nI'm not a big fan of the iptables command.\n\n473\n00:24:36.613 --> 00:24:40.000\nCuz I like to keep all my rules in nice\nneat order cuz I come from a Cisco\n\n474\n00:24:40.000 --> 00:24:40.720\nbackground.\n\n475\n00:24:40.720 --> 00:24:43.770\nAnd in a Cisco background the rule\norder is really, really, important.\n\n476\n00:24:43.770 --> 00:24:46.990\nAnd moving rules around with\nthe iptables command is pretty hard.\n\n477\n00:24:46.990 --> 00:24:51.980\nSo typically, what I'll do is I'll\nactually go and modify the config file.\n\n478\n00:24:51.980 --> 00:24:54.630\nSee up here where it's saying that\nit's generating this config file?\n\n479\n00:24:54.630 --> 00:24:57.540\nYou can actually go and\nedit that file directly if you want.\n\n480\n00:24:57.540 --> 00:25:02.280\nIt's just tucked way\ninside of /etc/sysconfig.\n\n481\n00:25:02.280 --> 00:25:04.970\nIf you look inside of /etc/sysconfig,\n\n482\n00:25:04.970 --> 00:25:10.950\nyou'll find an iptables file and\nan ip6tables file if you've configured it.\n\n483\n00:25:10.950 --> 00:25:13.340\nSo I've got mine right here, ip6tables.\n\n484\n00:25:13.340 --> 00:25:14.370\nAnd so that's the IPv4 and\n\n485\n00:25:14.370 --> 00:25:18.020\nIPv6 firewall and\nI haven't really talked about IPv6 much.\n\n486\n00:25:18.020 --> 00:25:20.460\nIt's really configured the same\njust the addresses look different.\n\n487\n00:25:20.460 --> 00:25:23.460\nSo everything that I've showed you so\nfar works the same there.\n\n488\n00:25:23.460 --> 00:25:28.534\nBut if I were to edit this\nfile /etc/sysconfig/iptables.\n\n489\n00:25:29.610 --> 00:25:31.270\nThere's this rules, okay?\n\n490\n00:25:31.270 --> 00:25:35.380\nThe rules are right here and you can do it\nand you can edit this two hearts content.\n\n491\n00:25:35.380 --> 00:25:38.654\nAnd this make it easier to take a lot\nof moving around shuffle the order\n\n492\n00:25:38.654 --> 00:25:41.031\nchange things around it's\na match what you need.\n\n493\n00:25:41.031 --> 00:25:44.706\nMaybe you don't like within here\nsingle and modified and change it and\n\n494\n00:25:44.706 --> 00:25:47.150\nget things kind of put how you want.\n\n495\n00:25:47.150 --> 00:25:51.560\nWhen it's done, this is read by\niptables when it executes and\n\n496\n00:25:51.560 --> 00:25:54.320\nit launches, and\nit gets everything kind of put in place.\n\n497\n00:25:54.320 --> 00:25:55.820\nSo you can do it this way.\n\n498\n00:25:55.820 --> 00:25:58.058\nAnd in fact, in the olden days-\n&gt;&gt; [LAUGH]\n\n499\n00:25:58.058 --> 00:25:59.079\n&gt;&gt; In the early days of iptables,\n\n500\n00:25:59.079 --> 00:25:59.873\nthis was how you did it.\n\n501\n00:25:59.873 --> 00:26:05.341\nYou went and you modified this iptables\nfile right here to be able to tackle that.\n\n502\n00:26:05.341 --> 00:26:09.404\nNow, you also have iptables-config,\nwhich is in here.\n\n503\n00:26:09.404 --> 00:26:13.845\nAnd that file actually contains\ninformation about the service itself and\n\n504\n00:26:13.845 --> 00:26:16.720\nit's rare that you need\nto modify the service.\n\n505\n00:26:16.720 --> 00:26:20.690\nThe way that it's configured by default,\nit fires up, it does its job and\n\n506\n00:26:20.690 --> 00:26:22.330\nwe don't typically need to modify that.\n\n507\n00:26:22.330 --> 00:26:24.060\nBut you can,\nyou can get in there and tweak that.\n\n508\n00:26:24.060 --> 00:26:28.272\nSo you've got the option to go in and\nedit the file directly if you want but\n\n509\n00:26:28.272 --> 00:26:31.463\nthe iptables command is really\nthe better way to do it.\n\n510\n00:26:31.463 --> 00:26:36.408\nAnd the main reason Is that you don't have\nto restart the firewall, changes take\n\n511\n00:26:36.408 --> 00:26:41.207\neffect immediately, and if you make\na change in test and it doesn't work, you\n\n512\n00:26:41.207 --> 00:26:46.800\ncan run iptables-F, with a capital F, and\nthat'll throw away any unsaved changes.\n\n513\n00:26:46.800 --> 00:26:49.960\nSo maybe I write some rule and\nI put it in place.\n\n514\n00:26:49.960 --> 00:26:54.743\nSo I take this rule And\nI do a DROP, right.\n\n515\n00:26:54.743 --> 00:26:58.731\nAnd then I try it out and I'm like, shoot,\nI really should have done a reject, right?\n\n516\n00:26:58.731 --> 00:27:02.818\nI could go and delete that rule,\nor I can just run iptables-F and\n\n517\n00:27:02.818 --> 00:27:05.400\nit throws away my unsaved changes.\n\n518\n00:27:05.400 --> 00:27:09.290\nAnd then I can go and rerun it and\nstick a REJECT on it.\n\n519\n00:27:09.290 --> 00:27:13.037\nRight, and so now it's rejecting the way\nthat I want and I can come in and\n\n520\n00:27:13.037 --> 00:27:16.164\nlike I say iptables-save,\nit saves the configuration and\n\n521\n00:27:16.164 --> 00:27:17.685\nnow it's in place, right?\n\n522\n00:27:17.685 --> 00:27:21.574\nSo that's the type of thing that the\niptables command can really help us with\n\n523\n00:27:21.574 --> 00:27:26.175\ngetting that stuff committed, and put in\nplace, and saved the way that we need it.\n\n524\n00:27:26.175 --> 00:27:28.697\nSo that's all kind of\na part of managing it.\n\n525\n00:27:28.697 --> 00:27:31.480\nBut that's where you'll normally\nuse that iptables command.\n\n526\n00:27:31.480 --> 00:27:34.312\n&gt;&gt; Now,\ncan we monitor what iptables is doing?\n\n527\n00:27:34.312 --> 00:27:37.655\n&gt;&gt; Yeah, this is probably one of\nthe biggest weaknesses of iptables.\n\n528\n00:27:38.655 --> 00:27:43.165\nI know it's working if I try and\naccess something and it's blocked, right?\n\n529\n00:27:43.165 --> 00:27:47.330\nSo if I blocked access to port 80.\n\n530\n00:27:47.330 --> 00:27:48.930\nAnd I tried to get to this website.\n\n531\n00:27:48.930 --> 00:27:50.660\nI shouldn't be able to get to it, right?\n\n532\n00:27:50.660 --> 00:27:53.776\nSo you can always test it out with\nthe protocols, but beyond that as far as,\n\n533\n00:27:53.776 --> 00:27:56.669\nlike, just seeing the standard\nstatus it is a little bit difficult.\n\n534\n00:27:56.669 --> 00:28:01.891\nThere is a few commands you can run, like,\n\n535\n00:28:01.891 --> 00:28:07.126\nlet's see, you can do, iptables-vnl.\n\n536\n00:28:07.126 --> 00:28:11.186\nWhoops, -vnl, there we go.\n\n537\n00:28:11.186 --> 00:28:14.870\nAnd what that does is,\nit gives us a list of our rules.\n\n538\n00:28:14.870 --> 00:28:18.950\nAnd it does name resolution, or\nit turns off name resolution.\n\n539\n00:28:18.950 --> 00:28:22.600\nSo we see IPs, and\nit gives us some verbose output.\n\n540\n00:28:22.600 --> 00:28:27.140\nAnd when you run that, whoops,\nand you do iptables, there we go.\n\n541\n00:28:27.140 --> 00:28:29.080\nWe get kind of a list of the rules.\n\n542\n00:28:29.080 --> 00:28:33.490\nAnd you start to see how many packets and\nbytes those rules have hit.\n\n543\n00:28:33.490 --> 00:28:36.910\nSo I see 0 packets, 0 bytes on this rule.\n\n544\n00:28:36.910 --> 00:28:38.000\nAnd that's a warning to me.\n\n545\n00:28:38.000 --> 00:28:40.490\nThat lets me know,\nnothing's matching this rule.\n\n546\n00:28:40.490 --> 00:28:43.170\nSo either the network is\nbeing extremely friendly and\n\n547\n00:28:43.170 --> 00:28:45.400\nnobody's doing anything\nthey're not supposed to.\n\n548\n00:28:45.400 --> 00:28:48.068\nOr I've written the rule wrong and\n\n549\n00:28:48.068 --> 00:28:53.223\nit's not matching the traffic\nthat I've set it to catch, right?\n\n550\n00:28:53.223 --> 00:28:56.766\nSo it is not matching,\nI need to go back and update that rule,\n\n551\n00:28:56.766 --> 00:28:59.474\nand change it,\ntweak it to match what I need and\n\n552\n00:28:59.474 --> 00:29:03.180\nyou can add a little bit more if\nI add -- line to it, like that.\n\n553\n00:29:03.180 --> 00:29:06.650\nIt gives me a little bit more\ninformation to kind of clear that up.\n\n554\n00:29:06.650 --> 00:29:10.757\nSo compared to up here, I get just\na little bit of more information which\n\n555\n00:29:10.757 --> 00:29:15.080\nis handy to be able to spot that and\nthe signs that'll chain number to each.\n\n556\n00:29:15.080 --> 00:29:16.580\nThat's really the big difference.\n\n557\n00:29:16.580 --> 00:29:19.176\nUp here I just see each row\nis one after the other.\n\n558\n00:29:19.176 --> 00:29:20.810\nHere I get a chain number.\n\n559\n00:29:20.810 --> 00:29:24.763\nAnd if I wanna modify a rule specifically,\nI kept doing -a to add.\n\n560\n00:29:24.763 --> 00:29:27.710\nBut if I wanna modify a rule,\nI need that chain number to get it.\n\n561\n00:29:27.710 --> 00:29:32.150\nSo this is the command I usually use to\nmonitor whether the firewall is working.\n\n562\n00:29:32.150 --> 00:29:35.760\nI'll use a tool like Nmap to run\nthe scan and see what ports are open so\n\n563\n00:29:35.760 --> 00:29:39.550\nI can see if the firewall's properly\nclosing ports or leaving ports open.\n\n564\n00:29:39.550 --> 00:29:45.510\nAnd then I'll use something like these,\nIPtables-vnL--line, and that's gives\n\n565\n00:29:45.510 --> 00:29:50.910\nme that output of the rules to see what's\nin place and what's being allowed through.\n\n566\n00:29:50.910 --> 00:29:56.080\nYou can even go a little bit further and\ntake that command and use watch with it,\n\n567\n00:29:56.080 --> 00:30:02.560\nso I'm gonna say watch-n\n0.5 iptables-vnL-- line.\n\n568\n00:30:02.560 --> 00:30:04.810\nAnd when I run that,\nit's gonna run the command.\n\n569\n00:30:04.810 --> 00:30:07.820\nAnd now it's updating every half a second,\nright?\n\n570\n00:30:07.820 --> 00:30:11.140\nSee down here my chain output,\nhow it's slowly climbing up?\n\n571\n00:30:11.140 --> 00:30:13.100\nOr my chain input is climbing up?\n\n572\n00:30:13.100 --> 00:30:16.740\nI can watch it, and as these\nreject rules get hit, for example,\n\n573\n00:30:16.740 --> 00:30:17.890\nI would see those go up.\n\n574\n00:30:17.890 --> 00:30:22.330\nSo now I get kind of a almost like a real\ntime view of what the firewall is doing\n\n575\n00:30:22.330 --> 00:30:24.750\nand the traffic is moving through it.\n\n576\n00:30:24.750 --> 00:30:26.462\nBut I kinda had to cheat to do it.\n\n577\n00:30:26.462 --> 00:30:30.179\nSo iptables didn't actually have\na straight up built in command to do\n\n578\n00:30:30.179 --> 00:30:33.702\nthis but by using watch, and\nby using the regular status output,\n\n579\n00:30:33.702 --> 00:30:37.116\nI can kind of build it,\nI can build a way to monitor that system.\n\n580\n00:30:37.116 --> 00:30:41.973\nSo that's what I'll typically do when\nI wanna see if iptables is working.\n\n581\n00:30:41.973 --> 00:30:44.954\n&gt;&gt; So we are done this is\ngreat it's been a wonderful\n\n582\n00:30:44.954 --> 00:30:49.909\nepisode iptables has been amazing option\nfor us any last words before we move on?\n\n583\n00:30:49.909 --> 00:30:54.409\n&gt;&gt; The main thing here some people\nview iptables as being old school.\n\n584\n00:30:54.409 --> 00:30:58.302\nIt's going away we don't need anymore\nfirewalld is taken it's place but\n\n585\n00:30:58.302 --> 00:30:59.805\nthat just not true.\n\n586\n00:30:59.805 --> 00:31:04.550\nIptables are such a massive install base,\nit's not going anywhere any time soon.\n\n587\n00:31:04.550 --> 00:31:06.630\nSo if you've got it deployed\nin your environment and\n\n588\n00:31:06.630 --> 00:31:10.570\nit's working great, don't feel like you\ngot a need to go to firewalld, all right?\n\n589\n00:31:10.570 --> 00:31:12.130\nFirewalld has some great new features.\n\n590\n00:31:12.130 --> 00:31:14.646\nAnd if I'm gonna deploy a new\nsystem I'm gonna pick firewalld,\n\n591\n00:31:14.646 --> 00:31:15.772\nthat's the way I'll do it.\n\n592\n00:31:15.772 --> 00:31:20.259\nBut if I run into an environment that's\nalready running iptables, I'm not really\n\n593\n00:31:20.259 --> 00:31:25.310\nmotivated to change it cuz iptables does\na great job, it handles things properly.\n\n594\n00:31:25.310 --> 00:31:29.550\nIt's got the tools and services in place\nto allow me to properly manage everything.\n\n595\n00:31:29.550 --> 00:31:33.034\nSo it does a good job and\nit's a great idea to learn it.\n\n596\n00:31:33.034 --> 00:31:36.722\nBecause if you go out there and\nyou've got 100 Linux servers,\n\n597\n00:31:36.722 --> 00:31:39.672\nthere may be some that\nare still running iptables and\n\n598\n00:31:39.672 --> 00:31:44.050\nothers that are running firewalld,\nso it's a good idea to learn both.\n\n599\n00:31:44.050 --> 00:31:45.740\nAnd just know that it's\neasy enough to switch.\n\n600\n00:31:45.740 --> 00:31:49.110\nYou saw, we disabled firewalld,\nwe threw iptables on here, and\n\n601\n00:31:49.110 --> 00:31:50.280\nnow I've got it in place.\n\n602\n00:31:50.280 --> 00:31:53.850\nSo if you've got an investment in\niptables configuration already,\n\n603\n00:31:53.850 --> 00:31:56.390\nyou can just bring that\nconfiguration right over.\n\n604\n00:31:56.390 --> 00:31:59.040\nNo big deal,\nyou're not forced to firewalld.\n\n605\n00:31:59.040 --> 00:32:01.970\n&gt;&gt; Awesome information,\nnetwork security with iptables.\n\n606\n00:32:01.970 --> 00:32:05.500\nAnd you're watching Linux\nsecurity techniques and\n\n607\n00:32:05.500 --> 00:32:07.310\nthere's a lot of episodes in this series.\n\n608\n00:32:07.310 --> 00:32:10.625\nMake sure you watch all of them, because\nDon's doing a great job giving us all\n\n609\n00:32:10.625 --> 00:32:13.337\nthe information we need, and\nthank you for watching ITProTV.\n\n610\n00:32:13.337 --> 00:32:16.240\nRemember, a good IT pro\nis always learning.\n\n611\n00:32:16.240 --> 00:32:18.020\nI'm Zach Memos\n&gt;&gt; And I'm Don Pezet.\n\n612\n00:32:18.020 --> 00:32:20.791\n&gt;&gt; And we will see you very soon.\n\n613\n00:32:20.791 --> 00:32:26.684\n[MUSIC]\n\n614\n00:32:26.684 --> 00:32:27.840\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "230614539"
        },
        {
          "description": "Don and Zach discuss what is 'firewalld,' how we know if we are running firewalld, where we get started to configure the firewall, how we assign a network interface to a zone, and how we use the zone to manage traffic.",
          "length": "2198",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-4-3-network_security_with_firewalld-081617-PGM.00_37_25_29.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-4-3-network_security_with_firewalld-081617-PGM.00_37_25_29.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-4-3-network_security_with_firewalld-081617-PGM.00_37_25_29.Still001-sm.jpg",
          "title": "Network Security with firewalld",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:01.409\nWelcome to ITProTV.\n\n2\n00:00:01.409 --> 00:00:03.195\nI am your host Don Pezet.\n\n3\n00:00:03.195 --> 00:00:06.506\n[CROSSTALK].\n\n4\n00:00:06.506 --> 00:00:08.209\n[MUSIC]\n\n5\n00:00:08.209 --> 00:00:12.430\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:12.430 --> 00:00:17.030\n&gt;&gt; Hello, thank you for choosing ITProTV,\nhelping you learn wherever you go.\n\n7\n00:00:17.030 --> 00:00:18.330\nI'm your host Zach Memos.\n\n8\n00:00:18.330 --> 00:00:21.460\nAs we continue with Linux\nsecurity techniques.\n\n9\n00:00:21.460 --> 00:00:24.130\nAnd we're gonna be looking\nat FirewallD today.\n\n10\n00:00:24.130 --> 00:00:27.800\nYes, we are, and the person bringing us\nall the information we need is our IT\n\n11\n00:00:27.800 --> 00:00:30.190\npro and all around good guy, Don Pezet.\n\n12\n00:00:30.190 --> 00:00:31.614\nDon, hello.\n\n13\n00:00:31.614 --> 00:00:33.528\n&gt;&gt; Hey, Zach, ready to jump back\ninto the world of Linux security?\n\n14\n00:00:33.528 --> 00:00:35.478\n&gt;&gt; Yes.\n\n15\n00:00:35.478 --> 00:00:39.297\n&gt;&gt; If you're watching the shows in order,\nthen in our last episode we talked about\n\n16\n00:00:39.297 --> 00:00:43.230\niptables or maybe you skipped that one,\nright, because one of the things I said in\n\n17\n00:00:43.230 --> 00:00:46.878\nthat episode was that iptables is a older\nsoftware firewall technology that\n\n18\n00:00:46.878 --> 00:00:49.175\nis largely being replaced\nby a new technology.\n\n19\n00:00:49.175 --> 00:00:51.263\nAnd that new technology is FirewallD,\n\n20\n00:00:51.263 --> 00:00:55.134\nwhich is what we're gonna be taking\na look at right here in this episode.\n\n21\n00:00:55.134 --> 00:00:59.911\nBecause you are seeing it installed by\ndefault more and more often in distros.\n\n22\n00:00:59.911 --> 00:01:04.408\nIn fact, today it's actually\nbecoming more uncommon to find\n\n23\n00:01:04.408 --> 00:01:07.269\niptables than it is to find FirewallD.\n\n24\n00:01:07.269 --> 00:01:09.294\nSo FirewallD is pretty\nmuch that replacement.\n\n25\n00:01:09.294 --> 00:01:12.183\nIt's the firewall of choice for\nsoftware firewalls today.\n\n26\n00:01:12.183 --> 00:01:14.537\nSo that's what we're gonna learn\nabout right here in this episode.\n\n27\n00:01:14.537 --> 00:01:18.048\n&gt;&gt; So by default, what is FirewallD.\n\n28\n00:01:18.048 --> 00:01:21.500\n&gt;&gt; All right, so FirewallD,\nit's a sad acronym.\n\n29\n00:01:21.500 --> 00:01:22.221\nIt's not really an acronym.\n\n30\n00:01:22.221 --> 00:01:23.550\nIt's a firewall daemon, right.\n\n31\n00:01:23.550 --> 00:01:24.305\nIt's a service,\n\n32\n00:01:24.305 --> 00:01:28.380\na software firewall that runs in\nthe background just like iptables did.\n\n33\n00:01:28.380 --> 00:01:31.575\nWhat it does is when it fires up,\nit connects to each of your network\n\n34\n00:01:31.575 --> 00:01:35.268\ninterfaces or the network interfaces\nyou choose to manage with it.\n\n35\n00:01:35.268 --> 00:01:38.170\nAnd then it's able to act as\na traffic cop, right, a gateway.\n\n36\n00:01:38.170 --> 00:01:42.120\nIt says, I'm going to allow this traffic\nthrough the network interface or\n\n37\n00:01:42.120 --> 00:01:44.860\nI'm gonna block this other\ntraffic through the interface.\n\n38\n00:01:44.860 --> 00:01:48.550\nAnd so we are able to control that\ntraffic as it passes through.\n\n39\n00:01:48.550 --> 00:01:52.147\nOne of the big drawbacks of iptables,\nand iptables is a great technology,\n\n40\n00:01:52.147 --> 00:01:54.510\nbeen around a long time,\ndoes a really good job.\n\n41\n00:01:54.510 --> 00:01:58.410\nBut it treats all your network\ninterfaces equally by default.\n\n42\n00:01:58.410 --> 00:02:01.450\nSo you have incoming traffic\non any interface and\n\n43\n00:02:01.450 --> 00:02:03.528\noutgoing traffic on any interface.\n\n44\n00:02:03.528 --> 00:02:08.000\nAnd with FirewallD, we get extra power,\nin that we can treat network\n\n45\n00:02:08.000 --> 00:02:11.570\ninterfaces individually, or\nwe can even group them together.\n\n46\n00:02:11.570 --> 00:02:15.610\nI might say, my first two network\ninterfaces are on my LAN, and\n\n47\n00:02:15.610 --> 00:02:16.260\nI trust them.\n\n48\n00:02:16.260 --> 00:02:19.960\nAnd this third interface, it's on the WAN,\nand I don't trust it at all.\n\n49\n00:02:19.960 --> 00:02:21.960\nAnd so I've got a whole\ndifferent set of rules for it.\n\n50\n00:02:21.960 --> 00:02:24.441\nYou can really get specific\nlike that with FirewallD.\n\n51\n00:02:24.441 --> 00:02:28.295\nIt's very, very powerful if you choose\nto make it powerful, all right,\n\n52\n00:02:28.295 --> 00:02:29.920\nif you choose to do that.\n\n53\n00:02:29.920 --> 00:02:34.310\nIf you just want a simple configuration\nlike iptables, you can actually do that.\n\n54\n00:02:34.310 --> 00:02:38.198\nAnd like what Zach said about the default,\nwhen you install FirewallD, or\n\n55\n00:02:38.198 --> 00:02:42.395\nif it's already installed for you,\nit'll have a default configuration that is\n\n56\n00:02:42.395 --> 00:02:46.308\nactually very simple and works very\nsimilar to the way that iptables does.\n\n57\n00:02:46.308 --> 00:02:48.515\nThen we just need to go in and\ncustomize it and\n\n58\n00:02:48.515 --> 00:02:51.890\ntweak it to meet our needs\nto secure that server.\n\n59\n00:02:51.890 --> 00:02:55.390\n&gt;&gt; So\nhow do we know if we're running FirewallD?\n\n60\n00:02:55.390 --> 00:02:57.870\n&gt;&gt; Well, the easiest way,\nI mean, you could look for\n\n61\n00:02:57.870 --> 00:02:59.360\nthe service or a few other things.\n\n62\n00:02:59.360 --> 00:03:03.060\nBut the easiest way for me is I usually\nuse the command line interface, right?\n\n63\n00:03:03.060 --> 00:03:07.966\nAnd in the CLI, you have a single\ncommand you use for managing FirewallD,\n\n64\n00:03:07.966 --> 00:03:09.562\nit's firewall-cmd.\n\n65\n00:03:09.562 --> 00:03:14.060\nNow just having the tool isn't enough to\nlet you know whether FirewallD is there.\n\n66\n00:03:14.060 --> 00:03:19.491\nBut you can run, here, let me show you\nhere, we'll do firewall-cmd--state, right?\n\n67\n00:03:21.340 --> 00:03:23.759\nHaving firewall-cmd,\nthat's kind of the first step, right?\n\n68\n00:03:23.759 --> 00:03:26.900\nSo if I just run that,\nI see I've got the command.\n\n69\n00:03:26.900 --> 00:03:28.730\nBut I could just have\nthe command installed and\n\n70\n00:03:28.730 --> 00:03:30.420\nnot actually be running FirewallD.\n\n71\n00:03:30.420 --> 00:03:34.690\nUntil I follow it up with --state,\nit's gonna tell me whether or\n\n72\n00:03:34.690 --> 00:03:35.600\nnot I'm actually running it.\n\n73\n00:03:35.600 --> 00:03:39.140\nWell, actually it's not cuz I\ndidn't run it as an administrator.\n\n74\n00:03:39.140 --> 00:03:39.920\nI'm a regular user.\n\n75\n00:03:39.920 --> 00:03:42.180\nRegular users aren't allowed\nto mess with the firewall.\n\n76\n00:03:42.180 --> 00:03:44.182\nSo I need to bump up my privileges and,\n&gt;&gt; Do sudo.\n\n77\n00:03:44.182 --> 00:03:46.120\n&gt;&gt; I'm gonna run through this\nthrough the whole episode.\n\n78\n00:03:46.120 --> 00:03:47.252\nI could sudo every\nindividual every command.\n\n79\n00:03:47.252 --> 00:03:52.370\nI could cheat a little bit and do a sudo\n-s, so I can just get a root shell.\n\n80\n00:03:52.370 --> 00:03:55.984\nAnd then I'll repeat\nthat firewall-cmd--state.\n\n81\n00:03:55.984 --> 00:03:58.650\nAnd I can see that it's running.\n\n82\n00:03:58.650 --> 00:04:03.120\nIf I didn't have it, I could install it\nand the package is just called FirewallD.\n\n83\n00:04:03.120 --> 00:04:08.135\nSo you can do a yum install or DNF\ninstall, FirewallD app to get FirewallD,\n\n84\n00:04:08.135 --> 00:04:11.190\nand then it'll jump in and install that.\n\n85\n00:04:11.190 --> 00:04:14.900\nBut most distros these days are shipping\nwith FirewallD as the default.\n\n86\n00:04:14.900 --> 00:04:17.865\nThe odds are you've already got it,\nand it is already running.\n\n87\n00:04:17.865 --> 00:04:20.504\nUsing firewall-cmd--state will show that.\n\n88\n00:04:20.504 --> 00:04:24.430\nsystemctl status will also show it.\n\n89\n00:04:24.430 --> 00:04:26.212\nAnd so you can jump in and\ntake a look, and\n\n90\n00:04:26.212 --> 00:04:28.638\nI can see that I've got it as active and\nit's running.\n\n91\n00:04:28.638 --> 00:04:30.421\nAnd I can see some other\ninformation about it.\n\n92\n00:04:30.421 --> 00:04:33.369\nLooks like I've got some warnings\nthat are popping up here on mine,\n\n93\n00:04:33.369 --> 00:04:34.930\nbut we'll talk about those later.\n\n94\n00:04:34.930 --> 00:04:39.710\nAnd that default configuration may not\nbe exactly what you need it to be.\n\n95\n00:04:39.710 --> 00:04:44.100\nBut the important part here is that I can\nsee that mine is active, it's running, and\n\n96\n00:04:44.100 --> 00:04:46.070\nso this system is using FirewallD.\n\n97\n00:04:46.070 --> 00:04:50.444\nAnd just for the record,\nthis one is Red Hat Enterprise Linux 7.4.\n\n98\n00:04:50.444 --> 00:04:54.910\nRed Hat has used FirewallD as\ntheir default since 7, since 7.0.\n\n99\n00:04:54.910 --> 00:04:57.800\nIf you have 6.0 or earlier,\nthey were still using iptables.\n\n100\n00:04:57.800 --> 00:05:01.480\nSo this change has really just been\nhappening over the last few years.\n\n101\n00:05:01.480 --> 00:05:04.020\nEverybody's been moving over to FirewallD.\n\n102\n00:05:04.020 --> 00:05:07.130\n&gt;&gt; So where do we get started\nto configure the firewall?\n\n103\n00:05:07.130 --> 00:05:09.160\n&gt;&gt; All right, getting it configured.\n\n104\n00:05:09.160 --> 00:05:11.969\nWell, the first thing we need to\nunderstand is how the adapters are grouped\n\n105\n00:05:11.969 --> 00:05:12.735\ntogether, right?\n\n106\n00:05:12.735 --> 00:05:15.520\nAnd remember I mentioned in\niptables it doesn't do that.\n\n107\n00:05:15.520 --> 00:05:18.320\nAll the adapters are just kinda\ntreated as one big group.\n\n108\n00:05:18.320 --> 00:05:22.370\nIn FirewallD,\nwe can split up our adapters if we want.\n\n109\n00:05:22.370 --> 00:05:25.580\nAnd if we want to do that,\nit's important to do that first.\n\n110\n00:05:25.580 --> 00:05:28.440\nI know when we think about configuring\na firewall, the first thing we think of is\n\n111\n00:05:28.440 --> 00:05:31.070\nhow do I jump in and allow software\nto pass through the firewall?\n\n112\n00:05:31.070 --> 00:05:33.820\nBut if we're gonna change the way\nour adapters are grouped,\n\n113\n00:05:33.820 --> 00:05:35.880\nit's gonna change where\nthese rules get applied.\n\n114\n00:05:35.880 --> 00:05:37.310\nSo we need to understand that.\n\n115\n00:05:37.310 --> 00:05:45.470\nSo the first command I wanna show\nyou is firewall-cmd--get-zones.\n\n116\n00:05:45.470 --> 00:05:47.434\nIn FirewallD we have what\nare called zones, and\n\n117\n00:05:47.434 --> 00:05:49.070\nthink of a zone as just a group.\n\n118\n00:05:49.070 --> 00:05:51.530\nIf I have five network adapters and\n\n119\n00:05:51.530 --> 00:05:55.840\nthe first two are on the LAN,\nI might have a zone that I call private or\n\n120\n00:05:55.840 --> 00:05:59.310\nLAN or corporate network,\nwhatever I wanna call that zone.\n\n121\n00:05:59.310 --> 00:06:01.890\nAnd I can group those two\nadapters into that zone.\n\n122\n00:06:01.890 --> 00:06:05.980\nAnd I might have another zone that's\ncalled WAN or Internet or untrusted.\n\n123\n00:06:05.980 --> 00:06:09.310\nAnd that's where I put my other\ninterfaces in that I don't trust.\n\n124\n00:06:09.310 --> 00:06:11.728\nAnd now I can create rules on the zones,\nright?\n\n125\n00:06:13.500 --> 00:06:19.120\nIf I don't do that, there's one zone\nthat's kind of special in the beginning.\n\n126\n00:06:19.120 --> 00:06:21.430\nAnd that's this zone right here,\npublic, right?\n\n127\n00:06:22.470 --> 00:06:26.920\nWhen I ran firewall-cmd--get-zones,\nit returned a list of zones.\n\n128\n00:06:26.920 --> 00:06:28.160\nI didn't create any of these, right?\n\n129\n00:06:28.160 --> 00:06:30.030\nThis is all default configurations.\n\n130\n00:06:30.030 --> 00:06:31.290\nI haven't messed with it.\n\n131\n00:06:31.290 --> 00:06:34.810\nAnd there were, I don't know,\nnine zones here.\n\n132\n00:06:34.810 --> 00:06:37.480\nAnd if you look at them,\neach one is kind of a little different.\n\n133\n00:06:37.480 --> 00:06:39.077\nThe first zone here is block.\n\n134\n00:06:39.077 --> 00:06:42.620\nAny adapter that's in the block\nzone is not gonna forward traffic.\n\n135\n00:06:42.620 --> 00:06:46.174\nThis is kind of like disabling an adapter,\nwhich is actually the better way to do it,\n\n136\n00:06:46.174 --> 00:06:46.935\nbut it's there.\n\n137\n00:06:46.935 --> 00:06:52.240\nThere's a DMZ zone, a drop zone,\nan external zone, right?\n\n138\n00:06:52.240 --> 00:06:56.530\nEach of these zones are designed for us to\ncustomize and apply rules to it, right?\n\n139\n00:06:56.530 --> 00:07:01.633\nBut when you install Linux,\nwhen you install Red Hat, CentOS, Fedora,\n\n140\n00:07:01.633 --> 00:07:07.247\nwhatever, it's going to put all of your\nadapters in the public zone by default.\n\n141\n00:07:07.247 --> 00:07:10.410\nSo if I have five adapters,\nall five are in public.\n\n142\n00:07:10.410 --> 00:07:14.330\nIf I have one adapter,\nthat one adapter is in public.\n\n143\n00:07:14.330 --> 00:07:16.330\nAnd you know what, I can leave it there.\n\n144\n00:07:16.330 --> 00:07:20.840\nEven if it's a private computer, if it's\na laptop that's on my private network,\n\n145\n00:07:20.840 --> 00:07:21.930\nit has one interface.\n\n146\n00:07:21.930 --> 00:07:24.540\nNow one interface is in the public zone,\nI can just leave it there.\n\n147\n00:07:24.540 --> 00:07:26.180\nI can treat that as my default and\n\n148\n00:07:26.180 --> 00:07:29.290\nI can put all the rules that\nI want on there, right?\n\n149\n00:07:29.290 --> 00:07:33.160\nBut if I need some adapters to be in one\nzone, and some adapters in another zone,\n\n150\n00:07:33.160 --> 00:07:36.850\nI need to make sure that the rules\nare getting attached to the correct zones.\n\n151\n00:07:36.850 --> 00:07:39.240\nAnd these nine zones here,\nI think it's nine,\n\n152\n00:07:39.240 --> 00:07:42.970\nthese are just ones that created by\ndefault, you can create your own.\n\n153\n00:07:42.970 --> 00:07:44.020\nYou can create even more.\n\n154\n00:07:44.020 --> 00:07:45.744\nYou can delete some of these if you want.\n\n155\n00:07:45.744 --> 00:07:49.222\nThey're just trying to give you a sampling\nof some of the things that are possible so\n\n156\n00:07:49.222 --> 00:07:50.926\nthat you can go in and apply those zones.\n\n157\n00:07:50.926 --> 00:07:57.533\nSo firewall-cmd--get zones, that just lets\nus know the zones that we've already got.\n\n158\n00:07:57.533 --> 00:08:01.122\nAnd then from there, we can start thinking\nabout how to actually configure it.\n\n159\n00:08:01.122 --> 00:08:04.725\nNow I mentioned that the public\nzone is the default.\n\n160\n00:08:04.725 --> 00:08:07.092\nAnd on most distros that's true,\n\n161\n00:08:07.092 --> 00:08:11.182\nactually on every distro I've\ntouched that's been true.\n\n162\n00:08:11.182 --> 00:08:13.248\nBut you can override the default.\n\n163\n00:08:13.248 --> 00:08:16.195\nAnd so if you wanna be on the safe side,\n\n164\n00:08:16.195 --> 00:08:21.690\nyou can run firewall-cmd--get-\ndefault-zone, all right?\n\n165\n00:08:21.690 --> 00:08:24.144\nAnd get it to tell you\nwho the default zone is.\n\n166\n00:08:24.144 --> 00:08:27.280\nAnd so,now you know,\nany time you add a new network adapter,\n\n167\n00:08:27.280 --> 00:08:28.720\nmaybe you plug in a USB adapter,\n\n168\n00:08:28.720 --> 00:08:33.420\nyou add another PCI card, those interfaces\nare gonna end up in that public zone.\n\n169\n00:08:33.420 --> 00:08:37.380\nThis is important, because as we go\nforward, and I start running commands,\n\n170\n00:08:37.380 --> 00:08:42.510\nwhen you run a command,\nyou can say --zone = and specify the zone.\n\n171\n00:08:42.510 --> 00:08:46.460\nBut if you leave that off,\nif you leave --zone off,\n\n172\n00:08:46.460 --> 00:08:49.950\nit's going to assume you're\ntalking about the default.\n\n173\n00:08:49.950 --> 00:08:51.570\nWhich, in this case, is public.\n\n174\n00:08:51.570 --> 00:08:53.955\nAnd again, on a system where you\nonly have one network interface,\n\n175\n00:08:53.955 --> 00:08:55.446\nyou'll probably just leave it public and\n\n176\n00:08:55.446 --> 00:08:57.928\nthat's the only one you work with\nsince you won't care about zones.\n\n177\n00:08:57.928 --> 00:09:00.331\nAnd you'll treat it just like IP tables,\nright?\n\n178\n00:09:00.331 --> 00:09:02.033\nBut if you've got more than one interface,\n\n179\n00:09:02.033 --> 00:09:04.050\nthat's where the zones\nreally come in handy.\n\n180\n00:09:04.050 --> 00:09:07.880\nYou'll likely have each interface\nin its own separate zone,\n\n181\n00:09:07.880 --> 00:09:11.230\nunless it happens to be\nplugged into the same network.\n\n182\n00:09:11.230 --> 00:09:14.410\nMaybe you've got some network\nadapters you're load balancing on,\n\n183\n00:09:14.410 --> 00:09:17.068\nor it's two connections to two\ndifferent private networks.\n\n184\n00:09:17.068 --> 00:09:20.630\nYou might kinda put those into the same\nzone to save a little bit of effort there.\n\n185\n00:09:20.630 --> 00:09:23.810\nBut otherwise, we'll typically\nput each adapter in its own zone.\n\n186\n00:09:23.810 --> 00:09:27.940\nAnd that means each adapter will be\nable to have its own complete rule set,\n\n187\n00:09:27.940 --> 00:09:29.690\nwithout having to run multiple processes,\n\n188\n00:09:29.690 --> 00:09:32.300\nwithout having to run separate\ncopies of IP tables or whatever.\n\n189\n00:09:32.300 --> 00:09:34.611\nWe can really get some power there.\n\n190\n00:09:34.611 --> 00:09:37.770\nIf I don't like the public zone, right?\n\n191\n00:09:37.770 --> 00:09:41.010\nIf I'm working on my network and\n\n192\n00:09:41.010 --> 00:09:47.010\nI want the internal zone to be my default,\nI could come in and\n\n193\n00:09:47.010 --> 00:09:53.733\nsay firewall.cmd --set\n-default -zone=internal, okay?\n\n194\n00:09:53.733 --> 00:09:57.769\nAnd now every time I run firewall-cmd,\nI leave off --zone,\n\n195\n00:09:57.769 --> 00:10:01.818\nif I don't include that,\nit's going to default to internal.\n\n196\n00:10:01.818 --> 00:10:07.574\nAnd if I pull up my,\nlet me just do a firewall-\n\n197\n00:10:07.574 --> 00:10:12.440\ncmd -- get- default zone, there.\n\n198\n00:10:12.440 --> 00:10:14.470\nI could see my default is now internal,\nright?\n\n199\n00:10:14.470 --> 00:10:17.070\nSo I've overridden that default\nbehavior and you can do that.\n\n200\n00:10:17.070 --> 00:10:19.760\nBut really a name is just a name.\n\n201\n00:10:19.760 --> 00:10:21.991\nIf it's called public, it doesn't\nactually have to be a public network.\n\n202\n00:10:21.991 --> 00:10:25.839\nBut a lot of people like to maintain that\nstandard nomenclature, and say, all right,\n\n203\n00:10:25.839 --> 00:10:28.017\nwell, this is actually\non the internal system.\n\n204\n00:10:28.017 --> 00:10:32.170\nSo let's call it an internal zone,\nso we can set that.\n\n205\n00:10:33.720 --> 00:10:37.324\nWhen you have a zone, just the fact that\nthe zone exists doesn't actually mean it's\n\n206\n00:10:37.324 --> 00:10:39.521\ndoing anything, and\na lot of these zones aren't.\n\n207\n00:10:39.521 --> 00:10:42.555\nAnd before I forget,\nI'm gonna set my default back to public,\n\n208\n00:10:42.555 --> 00:10:44.970\ncuz I will forget [LAUGH] and\nso I'll put that back.\n\n209\n00:10:44.970 --> 00:10:51.991\nI'm gonna run firewall-cmd\n---get-active-zones.\n\n210\n00:10:51.991 --> 00:10:54.677\nNow earlier I ran get-zones,\nor --get-zones,\n\n211\n00:10:54.677 --> 00:10:57.150\nwhich just gave me\na list of all the zones.\n\n212\n00:10:57.150 --> 00:11:01.540\nBut if I pull up the active zones,\nsee how I just get public?\n\n213\n00:11:01.540 --> 00:11:04.340\nThese are zones that actually\nhave an interface in them.\n\n214\n00:11:04.340 --> 00:11:08.240\nSo while internal exists and\nexternal on all these other zones exists,\n\n215\n00:11:08.240 --> 00:11:09.360\nthey don't have interfaces in them.\n\n216\n00:11:09.360 --> 00:11:11.140\nSo they're not actually doing anything.\n\n217\n00:11:11.140 --> 00:11:15.630\nSo there's no point in me changing them\nif there's no adapter inside of them.\n\n218\n00:11:15.630 --> 00:11:17.830\nRight now I can see that the public\nzone is the only one active,\n\n219\n00:11:17.830 --> 00:11:21.543\nand it has one interface in it ens32,\nokay?\n\n220\n00:11:21.543 --> 00:11:23.347\nIt's in that zone.\n\n221\n00:11:23.347 --> 00:11:27.741\nIf I had other interfaces, they would\nbe in the public zone as well, right?\n\n222\n00:11:27.741 --> 00:11:29.326\nI could have four, five, a hundred,\n\n223\n00:11:29.326 --> 00:11:32.250\nhowever many adapters all\nright here in this one zone.\n\n224\n00:11:32.250 --> 00:11:36.110\nAnd so I might need to shift them off to\nother zones later, but they're here and\n\n225\n00:11:36.110 --> 00:11:38.650\nthey're active and they're up and going.\n\n226\n00:11:38.650 --> 00:11:42.600\nSo right now, I can create rules on that\npublic zone, and that'll make sense.\n\n227\n00:11:42.600 --> 00:11:45.473\nCreating rules on another\nzone wouldn't make sense,\n\n228\n00:11:45.473 --> 00:11:47.291\nuntil I've gota an adapter in it.\n\n229\n00:11:47.291 --> 00:11:50.760\nA few other things,\nif I wanna create a custom zone, right?\n\n230\n00:11:50.760 --> 00:11:53.900\nMaybe I don't like the names\nthat they're using.\n\n231\n00:11:53.900 --> 00:11:58.907\nIf you come from a Cisco background,\nyou might wanna use the trust and\n\n232\n00:11:58.907 --> 00:12:03.410\nuntrust names, or\nsomething like that for your interfaces.\n\n233\n00:12:03.410 --> 00:12:05.753\nAnd there's actually\na zone called trusted, but\n\n234\n00:12:05.753 --> 00:12:07.609\nthere's not a zone called untrusted.\n\n235\n00:12:07.609 --> 00:12:09.589\n&gt;&gt; [LAUGH]\n&gt;&gt; So maybe I wanna create one, right?\n\n236\n00:12:09.589 --> 00:12:11.669\nAnd it's really just preference, right?\n\n237\n00:12:11.669 --> 00:12:13.460\nCuz it is just a name.\n\n238\n00:12:13.460 --> 00:12:17.950\nBut you can come in and\nsay, firewall -cmd and\n\n239\n00:12:17.950 --> 00:12:23.067\nthen we can specify if we\nwanna to --new-zone= and\n\n240\n00:12:23.067 --> 00:12:25.110\nwhat we want that zone to be.\n\n241\n00:12:25.110 --> 00:12:29.760\nSo I might create one called untrusted,\nand that's gonna jump in and create that.\n\n242\n00:12:29.760 --> 00:12:34.539\nAnd oops, looks like I got\na typo --new zone untrusted.\n\n243\n00:12:34.539 --> 00:12:37.016\n[LAUGH] I'm forgetting something.\n\n244\n00:12:37.016 --> 00:12:39.473\nThis is one of those cases where if\nwe read the error, it'll let us know.\n\n245\n00:12:39.473 --> 00:12:43.592\nSee how it says Option can\nonly be used with --permanent?\n\n246\n00:12:43.592 --> 00:12:47.278\nIf you think about\ncommands like system ctl,\n\n247\n00:12:47.278 --> 00:12:50.875\nsystem ctl makes changes\nto your system or.\n\n248\n00:12:50.875 --> 00:12:54.712\nWell, it makes changes, I can start\na service and it'll start right now.\n\n249\n00:12:54.712 --> 00:12:57.366\nBut when I reboot the computer,\nthat change might not be persistent.\n\n250\n00:12:57.366 --> 00:13:01.500\nAnd so we have to use things like\nsystem ctl enable which are permanent.\n\n251\n00:13:01.500 --> 00:13:03.660\nWell, firewall cmd is the same way.\n\n252\n00:13:03.660 --> 00:13:06.520\nAll the stuff that I'm issuing up here,\nI haven't really changed anything, but\n\n253\n00:13:06.520 --> 00:13:07.691\nall these things are temporary.\n\n254\n00:13:07.691 --> 00:13:11.132\nThey're being changed in memory,\nnot in the the file system.\n\n255\n00:13:11.132 --> 00:13:13.490\nSo if I were to reboot,\nI would lose some of the stuff.\n\n256\n00:13:13.490 --> 00:13:17.362\nAnd it's saying, here, if I wanna create\na new zone, I can't do that temporary.\n\n257\n00:13:17.362 --> 00:13:18.994\nI need to make it permanent.\n\n258\n00:13:18.994 --> 00:13:23.954\nSo I need to add a --permanent\nto my command line to go in and\n\n259\n00:13:23.954 --> 00:13:25.553\ncreate that zone.\n\n260\n00:13:25.553 --> 00:13:27.561\nAnd that's gonna go ahead and\nget it created.\n\n261\n00:13:27.561 --> 00:13:31.122\nThat's important, and we're gonna see\nthat with our firewall rules also.\n\n262\n00:13:31.122 --> 00:13:32.957\n&gt;&gt; Okay.\n&gt;&gt; If you wanna temporarily create a rule,\n\n263\n00:13:32.957 --> 00:13:34.980\nyou just run firewall CMD and edit.\n\n264\n00:13:34.980 --> 00:13:38.812\nBut if you wanna have that rule there\nforever, we need to add that --permanent.\n\n265\n00:13:38.812 --> 00:13:41.270\nSo, that's kinda throwing\nthat error there for me.\n\n266\n00:13:41.270 --> 00:13:44.510\nBut once I punch that in,\nnow I get the error created.\n\n267\n00:13:44.510 --> 00:13:51.295\nAnd I can run a firewall-\ncmd --get --zones.\n\n268\n00:13:51.295 --> 00:13:55.975\nAnd what I should see is my\nuntrusted network shows up, and, and\n\n269\n00:13:55.975 --> 00:13:57.530\nit doesn't, right?\n\n270\n00:13:57.530 --> 00:13:58.240\nSo why not?\n\n271\n00:13:58.240 --> 00:14:02.640\nWell, I did --permanent,\nwhich changed the file system.\n\n272\n00:14:02.640 --> 00:14:05.490\nIt didn't change what\nwas running in memory.\n\n273\n00:14:05.490 --> 00:14:12.280\nSo what I need to do here is run\nfirewall -cmd and then reload.\n\n274\n00:14:12.280 --> 00:14:13.051\nI need to tell it to reload.\n\n275\n00:14:13.051 --> 00:14:17.000\nOops, I need to do --reload,\nthere we go, to reload it.\n\n276\n00:14:17.000 --> 00:14:21.050\nAnd that's gonna tell it to re-read\nthe command line configuration.\n\n277\n00:14:21.050 --> 00:14:24.320\nAnd once that's done,\nnow I should see, there it is.\n\n278\n00:14:24.320 --> 00:14:26.660\nThere's my untrusted zone, okay?\n\n279\n00:14:26.660 --> 00:14:30.550\nSo as we work with firewall cmd,\nthe zones are really important.\n\n280\n00:14:30.550 --> 00:14:32.810\nAnd then whether we make our\ncommands permanent or not,\n\n281\n00:14:32.810 --> 00:14:33.970\nthat's kind of important, too.\n\n282\n00:14:33.970 --> 00:14:35.990\nCuz otherwise,\nwe could lose all this stuff later on.\n\n283\n00:14:35.990 --> 00:14:39.690\nBut getting these zones set\nup is kind of important.\n\n284\n00:14:39.690 --> 00:14:41.680\nIt's important to do it first.\n\n285\n00:14:41.680 --> 00:14:45.240\nBecause otherwise, when you start creating\nrules, if they're on the wrong zone,\n\n286\n00:14:45.240 --> 00:14:48.320\nthere's not really an easy way to\nmove rules from one zone to another.\n\n287\n00:14:48.320 --> 00:14:50.890\nSo you really end up having to\nstart over again in the other zone.\n\n288\n00:14:50.890 --> 00:14:52.520\nSo that's why I wanted to\nstart here with zones.\n\n289\n00:14:52.520 --> 00:14:55.396\nYou wanna get these kinda set up\nthe way that you need them, and\n\n290\n00:14:55.396 --> 00:14:58.960\nthen we'll be able to start creating\nrules and sticking them inside there.\n\n291\n00:14:58.960 --> 00:15:01.447\n&gt;&gt; So Don, how do we assign\na network interface to a zone?\n\n292\n00:15:01.447 --> 00:15:05.762\n&gt;&gt; [LAUGH] That's a good point, Zach, is\nall this zone stuff really doesn't matter\n\n293\n00:15:05.762 --> 00:15:08.178\nif [LAUGH] we can't put\nan interface in a zone.\n\n294\n00:15:08.178 --> 00:15:08.740\n&gt;&gt; It is.\n\n295\n00:15:08.740 --> 00:15:10.210\n&gt;&gt; So we need to change to\nsee how that works out,\n\n296\n00:15:10.210 --> 00:15:13.390\nand it's actually controlled by\nthe network interface scripts.\n\n297\n00:15:13.390 --> 00:15:17.951\nThat when a network interface powers up,\nwhen it's first initialized on a system,\n\n298\n00:15:17.951 --> 00:15:21.369\nit reads its config file and\nthe zone is defined right in there.\n\n299\n00:15:21.369 --> 00:15:24.340\nAnd if the zone's not defined, just\neverybody ends up in the default zone.\n\n300\n00:15:24.340 --> 00:15:25.790\nAnd in my case, public, right?\n\n301\n00:15:25.790 --> 00:15:30.420\nSo everybody that I have, or\nmy one interface, is in the public zone.\n\n302\n00:15:30.420 --> 00:15:32.830\nBut if I wanna change that, I can do that.\n\n303\n00:15:32.830 --> 00:15:35.648\nI can go in and enable that, and even\nset my other adaptors up for that too.\n\n304\n00:15:35.648 --> 00:15:38.732\nSo for example, I actually have\ntwo adopters in this system.\n\n305\n00:15:38.732 --> 00:15:43.479\nIf I jump into\n/etc/systemfield/network/scripts,\n\n306\n00:15:43.479 --> 00:15:47.849\nthat's where all my interface scripts are,\nright?\n\n307\n00:15:47.849 --> 00:15:49.692\nSo when the system boots up, it looks for\n\n308\n00:15:49.692 --> 00:15:52.794\nthese interface scripts to figure\nout how to configure an adaptor.\n\n309\n00:15:52.794 --> 00:15:55.096\nAnd you'll see where I've got ifcfc-32,\n\n310\n00:15:55.096 --> 00:15:58.113\nthat's the adapter we've been\nlooking at in this episode.\n\n311\n00:15:58.113 --> 00:16:03.952\nAnd then ifcfc -ens35 which is an adaptor\nI'm not using, its one that is turned off.\n\n312\n00:16:03.952 --> 00:16:04.530\n&gt;&gt; Okay.\n&gt;&gt; And\n\n313\n00:16:04.530 --> 00:16:09.220\nyou know if I were to do like ip addr,\nit should just be right there.\n\n314\n00:16:09.220 --> 00:16:11.670\nSo there is ens35 and\nit just isn't enabled,\n\n315\n00:16:11.670 --> 00:16:13.030\nit doesn't have an IP or anything.\n\n316\n00:16:13.030 --> 00:16:16.730\nSo I can go in and I can modify these and\nI can set that zone.\n\n317\n00:16:16.730 --> 00:16:21.887\nIf we take a look at ifcfg-ens32,\nmy first adapter,\n\n318\n00:16:21.887 --> 00:16:28.400\nI can see where right here\nthe end it's added zone=public.\n\n319\n00:16:28.400 --> 00:16:32.250\nIf you have started the firewall demon,\nfirewall d if you have started it at least\n\n320\n00:16:32.250 --> 00:16:35.840\none time, it will go in and add these\nzones to the end of every adapter.\n\n321\n00:16:35.840 --> 00:16:38.290\nAll right,\nif you haven't started it yet so\n\n322\n00:16:38.290 --> 00:16:41.860\nthis might be missing, maybe just empty\nand so you can type it in if you want or\n\n323\n00:16:41.860 --> 00:16:43.980\nyou can come and\nchange like I am about to do.\n\n324\n00:16:43.980 --> 00:16:46.790\nIf this is my internal interface\nI might want to come in and\n\n325\n00:16:46.790 --> 00:16:50.480\nsay zone=internal or untrusted or\n\n326\n00:16:50.480 --> 00:16:53.620\nwhatever name it is that I'm using for\nthe zone that I want to describe.\n\n327\n00:16:53.620 --> 00:16:55.730\nIn this case I'll leave\nthis one as public ens32.\n\n328\n00:16:55.730 --> 00:16:59.950\nAnd I'm gonna take my other\nadapter which is ens35,\n\n329\n00:17:01.350 --> 00:17:04.320\nokay and on this one see\nhow it doesn't have a zone?\n\n330\n00:17:04.320 --> 00:17:06.340\nIt's actually missing quite a bit\nbecause it's not turned on.\n\n331\n00:17:06.340 --> 00:17:10.450\nSee this on boot = no I'm going\nto change that to be yes,\n\n332\n00:17:10.450 --> 00:17:13.040\nso that it will actually\nturn the adapter on.\n\n333\n00:17:13.040 --> 00:17:14.920\nIt's got an IP address and a subnet.\n\n334\n00:17:14.920 --> 00:17:18.201\nI'm going to add ZONE = internal.\n\n335\n00:17:18.201 --> 00:17:21.640\nSo, I'll have a public interface and\nan internal interface,\n\n336\n00:17:21.640 --> 00:17:23.950\ntwo interfaces in two different zones.\n\n337\n00:17:23.950 --> 00:17:25.569\nAnd so if I get out of my config, hang on,\n\n338\n00:17:25.569 --> 00:17:27.970\nlet me make sure I have\neverything I need in there.\n\n339\n00:17:27.970 --> 00:17:30.900\nOur bare minimum is that\nwe need the IP address and\n\n340\n00:17:30.900 --> 00:17:32.790\nso MS so we got everything we need there.\n\n341\n00:17:33.980 --> 00:17:37.700\nAnd once I've got that I need to\nrestart that working system so\n\n342\n00:17:37.700 --> 00:17:39.350\nthat it'll lload that adapter now.\n\n343\n00:17:39.350 --> 00:17:42.230\nSo this is a outage causing event.\n\n344\n00:17:42.230 --> 00:17:44.798\nIf users are connected to the system\nthey're going to be impacted so\n\n345\n00:17:44.798 --> 00:17:46.610\nthis is something we wanna\nset up ahead of time.\n\n346\n00:17:46.610 --> 00:17:50.070\nAll this the zone planning and all that\nshould be stuff that's done ahead of time.\n\n347\n00:17:50.070 --> 00:17:52.060\nThe reality is we're\nconfiguring a firewall.\n\n348\n00:17:52.060 --> 00:17:55.510\nAnd the default firewall rules\nare blocking users anyway, [LAUGH] so\n\n349\n00:17:55.510 --> 00:17:58.130\nthe changes here are not really gonna\nimpact anybody cuz the server's not in\n\n350\n00:17:58.130 --> 00:17:59.130\nproduction yet.\n\n351\n00:17:59.130 --> 00:18:02.480\nBut I'll come in and\nsay systemctl restart network.\n\n352\n00:18:02.480 --> 00:18:04.790\nSo that's gonna restart\nthe network subsystem.\n\n353\n00:18:04.790 --> 00:18:09.190\nAnd then I'll do the same thing for\nfirewalld, all right?\n\n354\n00:18:09.190 --> 00:18:13.380\nNow you might be tempted to do\nfirewall dash cmd dash dash reload.\n\n355\n00:18:13.380 --> 00:18:17.423\nBut don't do that because it's gonna look\nat the zones that are stored in memory and\n\n356\n00:18:17.423 --> 00:18:21.400\napply those to the adapter, so it will\nundo the change that you just made.\n\n357\n00:18:21.400 --> 00:18:25.980\nBy restarting it it says get rid of\nwhat's in memory look to the file system,\n\n358\n00:18:25.980 --> 00:18:29.280\nlook to these interface scripts, and see\nif you can pull that zone n from there.\n\n359\n00:18:29.280 --> 00:18:32.910\nSo I should now have where ens 35 is up.\n\n360\n00:18:32.910 --> 00:18:38.060\nAnd it is so its up and\nit should have picked up that other zone.\n\n361\n00:18:38.060 --> 00:18:44.960\nAnd if I do a firewall dash\ncmd -- get- active- zones,\n\n362\n00:18:44.960 --> 00:18:49.210\nI should see that I now have\nENS35 as the internal zone and\n\n363\n00:18:49.210 --> 00:18:53.920\nENS32 is in the public zone and so now\nwhen we go to configure things I can say\n\n364\n00:18:53.920 --> 00:18:56.880\nI want the internal zone to be pretty,\npretty wide open.\n\n365\n00:18:56.880 --> 00:18:58.720\nI trust my internal network.\n\n366\n00:18:58.720 --> 00:18:59.380\nBut my public zone?\n\n367\n00:18:59.380 --> 00:19:02.640\nI want that to be very, very closed off,\nbecause I do not trust that network.\n\n368\n00:19:02.640 --> 00:19:05.550\nNow, we can start to be specific\nbecause our interfaces are in\n\n369\n00:19:05.550 --> 00:19:06.520\nthe appropriate zone.\n\n370\n00:19:06.520 --> 00:19:09.860\n&gt;&gt; So\nhow do we use the zone to manage traffic?\n\n371\n00:19:09.860 --> 00:19:11.050\n&gt;&gt; Now we get to the fun part.\n\n372\n00:19:11.050 --> 00:19:13.810\nNow we get to the part that most of us\nthought we would have started with at\n\n373\n00:19:13.810 --> 00:19:16.020\nthe beginning of the episode,\nwhich is creating a rule.\n\n374\n00:19:16.020 --> 00:19:18.580\nNow that the zones\nare configured correctly.\n\n375\n00:19:18.580 --> 00:19:21.770\nWe can start to put rules in\nplace to dictate what traffic is\n\n376\n00:19:21.770 --> 00:19:23.290\nallowed to pass through.\n\n377\n00:19:23.290 --> 00:19:24.250\n&gt;&gt; That makes sense.\n\n378\n00:19:24.250 --> 00:19:27.020\n&gt;&gt; So now we can use what's probably\none of the most useful commands,\n\n379\n00:19:27.020 --> 00:19:31.500\nit's firewall- cmd- - list- all.\n\n380\n00:19:31.500 --> 00:19:34.570\nAnd that command says,\nshow me the firewall rules,\n\n381\n00:19:34.570 --> 00:19:36.980\nshow me the rules that\nare in place on my system.\n\n382\n00:19:36.980 --> 00:19:39.190\nAnd when I run it, see what it's doing?\n\n383\n00:19:39.190 --> 00:19:42.820\nIt's showing me the rules for\npublic, right?\n\n384\n00:19:42.820 --> 00:19:45.180\nIt's showing me the rules for\nthe default zone.\n\n385\n00:19:45.180 --> 00:19:47.230\nEverything else,\nonce the zones are set up,\n\n386\n00:19:47.230 --> 00:19:50.570\nevery time we run firewall CMD\nwe need to provide a zone name.\n\n387\n00:19:50.570 --> 00:19:54.190\nIf we don't, it's gonna default\nto whatever the default zone is.\n\n388\n00:19:54.190 --> 00:19:57.270\nMy default zone is public,\nwhich I am using, so it kinda works out.\n\n389\n00:19:57.270 --> 00:20:00.860\nAnd I can see what's allowed\nthrough that public zone.\n\n390\n00:20:00.860 --> 00:20:04.990\nBut what I need to do if I wanna see,\nfor example, the internal zone,\n\n391\n00:20:04.990 --> 00:20:09.681\nis I would need to modify this command and\nsay, firewall-cmd --\n\n392\n00:20:09.681 --> 00:20:15.190\nzone=internal, and then, -- list-all.\n\n393\n00:20:15.190 --> 00:20:19.770\nSo now I'm saying show me the rules from\nthis other zone and that's something you\n\n394\n00:20:19.770 --> 00:20:23.340\ndefinitely want to remember because\nas you work with firewall d.\n\n395\n00:20:23.340 --> 00:20:27.550\nSpecifying dash dash zone is going to be\na critical thing to making sure you're\n\n396\n00:20:27.550 --> 00:20:30.490\nworking with the right area we\nwere going in the right zone you\n\n397\n00:20:30.490 --> 00:20:33.716\nknow what accidentally\napply rules to one zone.\n\n398\n00:20:33.716 --> 00:20:35.750\nAnd now you've messed something\nup in another zone and\n\n399\n00:20:35.750 --> 00:20:37.580\nwe've got to be really careful with that.\n\n400\n00:20:37.580 --> 00:20:42.570\nSo a lot of times I'll do dash\ndash zone equals public even if\n\n401\n00:20:42.570 --> 00:20:46.598\nit's still the default just so that I\nknow I'm working with the right zone.\n\n402\n00:20:46.598 --> 00:20:48.080\nI've gotten into the habit of that for\n\n403\n00:20:48.080 --> 00:20:50.710\nyou it's up to you how you want to\nhandle that if you're really good about\n\n404\n00:20:50.710 --> 00:20:53.280\nmaking sure you're in the right\ndefault zone you might leave it off.\n\n405\n00:20:53.280 --> 00:20:55.910\nBut, I pretty much do dash,\ndash, zone, equals and\n\n406\n00:20:55.910 --> 00:20:59.650\nthen a zone name all the time so\nI know I'm working on the right stuff.\n\n407\n00:20:59.650 --> 00:21:02.850\nSo, here I can see the default rules for\nthe public zone,\n\n408\n00:21:02.850 --> 00:21:05.740\nand if you look at them,\nthey're pretty tight, right?\n\n409\n00:21:05.740 --> 00:21:10.320\nWe're allowing DHCPV6 client to\ncome through, so if I'm using DHCP,\n\n410\n00:21:10.320 --> 00:21:12.890\nI can get the responses and then SSH.\n\n411\n00:21:12.890 --> 00:21:16.030\nI'm allowing SSH connections to this box.\n\n412\n00:21:16.030 --> 00:21:16.830\nI didn't configure that.\n\n413\n00:21:16.830 --> 00:21:19.070\nApparently Redhat feels that's okay.\n\n414\n00:21:19.070 --> 00:21:21.850\nSo if I scroll down a little bit,\n\n415\n00:21:21.850 --> 00:21:26.040\nthough, I can see the internal zone,\nwhich I also didn't configure, right?\n\n416\n00:21:26.040 --> 00:21:27.540\nThis is just kinda the default.\n\n417\n00:21:27.540 --> 00:21:28.720\nWhere they're allowing SSH.\n\n418\n00:21:28.720 --> 00:21:31.380\nWe've got the multicast DNS responder.\n\n419\n00:21:31.380 --> 00:21:34.512\nWe've got samba client for\nSMB file share access.\n\n420\n00:21:34.512 --> 00:21:35.410\nAnd DHCPV6 client.\n\n421\n00:21:35.410 --> 00:21:37.100\nWe got more stuff at it, right?\n\n422\n00:21:38.110 --> 00:21:41.600\nit's a little more open,\nthan some of the other zones are.\n\n423\n00:21:41.600 --> 00:21:47.400\nAnd if you kind keep going with this,\nor other zones like zone=trusted right?.\n\n424\n00:21:47.400 --> 00:21:50.340\nIf i look at that trusted one,\nwell it just says.\n\n425\n00:21:50.340 --> 00:21:52.530\nI'm gonna accept everything right.\n\n426\n00:21:52.530 --> 00:21:54.810\nThere's no matches on here so\nit's going to accept everything.\n\n427\n00:21:54.810 --> 00:21:57.270\nThis basically just\nopens up the interface.\n\n428\n00:21:57.270 --> 00:22:00.060\nSo the default zones\nthat are already created,\n\n429\n00:22:00.060 --> 00:22:03.200\nhave some rules in them that may or\nmay not match up with what you want.\n\n430\n00:22:03.200 --> 00:22:06.850\nSo if you wanna be on the safe side you\ncan create your own zone and specify your\n\n431\n00:22:06.850 --> 00:22:10.680\nown rules, but normally we're just\ngonna be modifying these existing ones.\n\n432\n00:22:10.680 --> 00:22:14.610\nOn that public zone I'm allowing SSH\nthrough, I'm okay with that right.\n\n433\n00:22:14.610 --> 00:22:19.270\nBut if I'm running a web server I also\nneed to allow HTTP through, and so\n\n434\n00:22:19.270 --> 00:22:22.870\nwhen I go back and\nI look at my public zone, right.\n\n435\n00:22:22.870 --> 00:22:29.340\nSo if I do a firewall- cmd- -\nzone = public- - list- hall.\n\n436\n00:22:29.340 --> 00:22:33.220\nI can see that HTTP is not in\nthe list of services that are allowed\n\n437\n00:22:33.220 --> 00:22:34.680\nthrough that zone, right?\n\n438\n00:22:34.680 --> 00:22:35.750\nSo I'm blocking it.\n\n439\n00:22:35.750 --> 00:22:38.290\nIf I'm gonna run a web server I'm\ngonna need to allow it through.\n\n440\n00:22:38.290 --> 00:22:40.490\nSo we can issue a command to add that.\n\n441\n00:22:41.660 --> 00:22:46.250\nWhen we add the protocol,\nyou can add the protocol by a name or\n\n442\n00:22:46.250 --> 00:22:48.620\nyou can add it by the port number.\n\n443\n00:22:48.620 --> 00:22:51.580\nLike if you remember the TCP port number\nthat's usually the easiest way to do it is\n\n444\n00:22:51.580 --> 00:22:52.360\nby port number.\n\n445\n00:22:52.360 --> 00:22:53.830\nBut you don't have to memorized,\n\n446\n00:22:53.830 --> 00:22:55.970\nthere's a lot of service names\nthat are already stored.\n\n447\n00:22:55.970 --> 00:23:01.830\nAnd you can run firewall\n-cmd -- get -service and\n\n448\n00:23:01.830 --> 00:23:04.990\nit will tell you all the service\nthat it knows about.\n\n449\n00:23:04.990 --> 00:23:08.356\nAnd the reason I mention this here is\nthat as the distros get updated and\n\n450\n00:23:08.356 --> 00:23:12.006\nyou may be running a different distro\nthen I do yours might know mine know some\n\n451\n00:23:12.006 --> 00:23:16.250\nprotocols that mine doesn't or mine might\nknow some protocols that your's doesn't.\n\n452\n00:23:16.250 --> 00:23:19.150\nSo, this is the quick way to look in and\nsee what is actually in there.\n\n453\n00:23:19.150 --> 00:23:23.970\nAnd I can see that http and\nhttps are both listed.\n\n454\n00:23:23.970 --> 00:23:26.590\nI can use a name instead of a number.\n\n455\n00:23:26.590 --> 00:23:29.470\nBut you can really go either way\non these whichever one you choose.\n\n456\n00:23:29.470 --> 00:23:31.750\nBut there is a lot of\nprotocols defined in here.\n\n457\n00:23:31.750 --> 00:23:32.730\nIt's not perfect.\n\n458\n00:23:32.730 --> 00:23:34.540\nNot every protocol is in here.\n\n459\n00:23:34.540 --> 00:23:35.530\nBut a lot of them are.\n\n460\n00:23:35.530 --> 00:23:37.740\nMakes our life a bit easy.\n\n461\n00:23:37.740 --> 00:23:42.600\nSo if I wanna add something like\nallow a web server to come through.\n\n462\n00:23:42.600 --> 00:23:47.584\nI could say firewall-cmd and\nthen I wanna do a change to\n\n463\n00:23:47.584 --> 00:23:51.530\nzone=public and that's my default so\nI could leave it off.\n\n464\n00:23:51.530 --> 00:23:54.710\nBut again I am in the habit of\nputting this so I don't make mistakes.\n\n465\n00:23:54.710 --> 00:23:56.095\nSo zone = public.\n\n466\n00:23:56.095 --> 00:24:03.514\nAnd then I'll say -- add- service = http.\n\n467\n00:24:03.514 --> 00:24:05.789\nAll right, and\nthen I can run that same command again and\n\n468\n00:24:05.789 --> 00:24:08.960\njust stick an S on the end, and so\nnow I'm just adding HTTPS as well.\n\n469\n00:24:08.960 --> 00:24:15.923\nI'm adding those services to the public\nzone, and if I do a firewall-cmd,\n\n470\n00:24:15.923 --> 00:24:23.980\n--zone = public --list-all, I can\ntake a look at what's authorized now.\n\n471\n00:24:23.980 --> 00:24:28.390\nAnd in addition to dhcpv6 and\nssh, I can see http and\n\n472\n00:24:28.390 --> 00:24:33.260\nhttps are also being allowed through,\nright?\n\n473\n00:24:33.260 --> 00:24:35.620\nNow I'm not using IPv6,\nI'm just using IPv4, so\n\n474\n00:24:35.620 --> 00:24:39.840\nI don't really need this dhcpv6\nclient to be allowed through.\n\n475\n00:24:39.840 --> 00:24:42.570\nI could remove that, and\nthe command is very similar.\n\n476\n00:24:42.570 --> 00:24:46.758\nInstead of saying add service, what you\ndo is you come through and you say,\n\n477\n00:24:46.758 --> 00:24:47.896\nremove-service.\n\n478\n00:24:47.896 --> 00:24:52.245\nBe careful, because there's\na --delete- service as well.\n\n479\n00:24:52.245 --> 00:24:57.235\nAnd that one actually deletes the name\nmapping, if the name mapping exists.\n\n480\n00:24:57.235 --> 00:24:59.690\nWhich is not what you want,\nso we want remove-service.\n\n481\n00:24:59.690 --> 00:25:03.505\nI want to remove dhcpv6-client,\nand so I'll punch that in and\n\n482\n00:25:03.505 --> 00:25:06.498\nit's gonna remove it.\n\n483\n00:25:06.498 --> 00:25:13.880\nAnd so now when I pull that list back up,\nit's just ssh, http, and https.\n\n484\n00:25:13.880 --> 00:25:17.107\nJust the protocols that I want are allowed\nto come through on this interface.\n\n485\n00:25:17.107 --> 00:25:20.262\nSo, now that's defined and\nit's there, right?\n\n486\n00:25:20.262 --> 00:25:24.114\nHowever, there's a little\nproblem with this.\n\n487\n00:25:24.114 --> 00:25:28.385\nWhen I run this, it's working,\nor I assume it's working.\n\n488\n00:25:28.385 --> 00:25:32.420\nI'd have to fire up a web browser to\nfind out, but it's up and it's running.\n\n489\n00:25:32.420 --> 00:25:35.930\nWhat happens if the firewall reloads or\nthe system reboots?\n\n490\n00:25:35.930 --> 00:25:39.240\nRemember what I was talking about\nwith making things permanent?\n\n491\n00:25:39.240 --> 00:25:42.060\nThese changes are not permanent,\nthese changes are in memory.\n\n492\n00:25:42.060 --> 00:25:46.030\nAnd so if a firewall reloads, I'm gonna\nlose these rules, they're gonna be gone.\n\n493\n00:25:46.030 --> 00:25:50.800\nSo I need to come in and tell it\nthat I want it to save these rules.\n\n494\n00:25:50.800 --> 00:25:53.552\nAnd so\nto do that you run the same commands,\n\n495\n00:25:53.552 --> 00:25:56.468\nyou just add --permanent to them, right?\n\n496\n00:25:56.468 --> 00:26:02.007\nIf you don't have that --permanent,\nthen it's not gonna save them, right?\n\n497\n00:26:02.007 --> 00:26:05.911\nSo really when I wanna add something,\nI almost have to add it twice, right?\n\n498\n00:26:05.911 --> 00:26:12.120\nSo let's say I do a firewall-cmd --reload,\nlike that, okay?\n\n499\n00:26:13.290 --> 00:26:17.120\nAnd then I'll pull up my zone again, and\n\n500\n00:26:17.120 --> 00:26:22.460\nsee how http and https are gone,\nand dhcpv6 is back, right?\n\n501\n00:26:22.460 --> 00:26:28.402\nWell if I come through and I do something\nlike this, let me pull up the part where\n\n502\n00:26:28.402 --> 00:26:33.960\nI removed dhcpv6, and\nI'm gonna add -- permanent to it, okay?\n\n503\n00:26:33.960 --> 00:26:37.560\nSo when I do that, that's gonna add it,\nand it's gonna make it permanent, right?\n\n504\n00:26:37.560 --> 00:26:42.350\nBut if I look at the active running\nrule list by doing a list-all,\n\n505\n00:26:42.350 --> 00:26:42.880\nit's still there.\n\n506\n00:26:42.880 --> 00:26:45.900\nAnd that's because I've\nmodified the config file, and\n\n507\n00:26:45.900 --> 00:26:48.670\nnot what's in memory, so\nnow I need to reload the firewall.\n\n508\n00:26:48.670 --> 00:26:53.620\nSo you've got two choices here either,\none, you can run the commands twice.\n\n509\n00:26:53.620 --> 00:26:58.540\nYou can run it and say without\n--permanent to make it affect memory,\n\n510\n00:26:58.540 --> 00:27:01.820\nand then with --permanent\nto make it save to disk.\n\n511\n00:27:01.820 --> 00:27:07.210\nOr you could run it once as permanent and\nthen reload the firewall, all right?\n\n512\n00:27:07.210 --> 00:27:09.850\nNow if I'm adding a bunch of rules and\n\n513\n00:27:09.850 --> 00:27:12.580\nI know there's no users in the system,\nI'll go that route.\n\n514\n00:27:12.580 --> 00:27:14.869\nI'll make everything permanent and\nthen I reload the firewall,\n\n515\n00:27:14.869 --> 00:27:16.253\nbecause I'm not kicking any body out.\n\n516\n00:27:16.253 --> 00:27:18.080\nWhat do I care, right?\n\n517\n00:27:18.080 --> 00:27:23.380\nBut if this is a production system and\nI don't wanna kick users out,\n\n518\n00:27:23.380 --> 00:27:26.920\nthen I'm gonna have to\nrun the commands twice.\n\n519\n00:27:26.920 --> 00:27:30.413\nI'll have to come in and\nsay something like this,\n\n520\n00:27:30.413 --> 00:27:35.380\nfirewall-cmd --zone=public\n--add-service=http.\n\n521\n00:27:35.380 --> 00:27:37.930\nSo I'll add that one and\nthen I'm just gonna run it again and\n\n522\n00:27:37.930 --> 00:27:39.619\nI'll just add -permanent to the end.\n\n523\n00:27:39.619 --> 00:27:45.520\nAnd then I'll do the same thing for https\nand I'll run it again with --permanent.\n\n524\n00:27:45.520 --> 00:27:49.210\nBy doing it this way I'm having to run\nthe commands twice, which kind of stinks,\n\n525\n00:27:49.210 --> 00:27:53.520\nbut at the same time I know that\nI'm not affecting my end users.\n\n526\n00:27:53.520 --> 00:27:57.070\nThe end users are not\ngetting affected here,\n\n527\n00:27:57.070 --> 00:28:01.620\nit's just gonna come in and do its job and\neverything will work the way that I want.\n\n528\n00:28:01.620 --> 00:28:06.059\nLet's see, I already removed dhcpv6,\nbut I didn't make it permanent, did I?\n\n529\n00:28:06.059 --> 00:28:07.720\nNo, I did, I made it permanent,\nI put it back here.\n\n530\n00:28:07.720 --> 00:28:10.501\nThe order of the command line\narguments doesn't really matter, so\n\n531\n00:28:10.501 --> 00:28:12.650\nsometimes I miss that, there we go.\n\n532\n00:28:12.650 --> 00:28:16.901\nSo now, in theory, my on-disk\nconfiguration is the same as my in-memory\n\n533\n00:28:16.901 --> 00:28:19.333\nconfiguration, or at least it should be.\n\n534\n00:28:19.333 --> 00:28:24.155\nAnd if I pull up my list again,\nI'll do a --list-all,\n\n535\n00:28:24.155 --> 00:28:27.880\neverything should look\nthe way that I want.\n\n536\n00:28:27.880 --> 00:28:31.598\nI just have ssh, http, and https, and\n\n537\n00:28:31.598 --> 00:28:37.870\nnow I can go through and\ndo a firewall-cmd --reload.\n\n538\n00:28:37.870 --> 00:28:40.800\nAnd this is gonna let me test to make sure\n\n539\n00:28:40.800 --> 00:28:43.070\nthat the configuration is\nthe same after the reload.\n\n540\n00:28:43.070 --> 00:28:44.272\nI would do this after-hours,\n\n541\n00:28:44.272 --> 00:28:47.478\nin some kind of off-time when it\nwas okay to restart that firewall.\n\n542\n00:28:47.478 --> 00:28:50.560\nNow that it's done, I can see the\nconfiguration is done the way that I want.\n\n543\n00:28:50.560 --> 00:28:56.312\nSo as far as adding rules,\nthe key thing is to remember here --zone=.\n\n544\n00:28:56.312 --> 00:28:59.385\nYou've got to specify the zone,\notherwise it goes to the default zone.\n\n545\n00:28:59.385 --> 00:29:02.930\nThen --add-service followed by a name,\n\n546\n00:29:02.930 --> 00:29:08.580\nthat'll get that entry put in there,\nand then --permanent.\n\n547\n00:29:08.580 --> 00:29:10.446\nRun the command with it\nto save it to disk, and\n\n548\n00:29:10.446 --> 00:29:11.931\nrun without it to save it to memory.\n\n549\n00:29:11.931 --> 00:29:16.727\nSo we wanna do those twice so\nwe don't have to restart our firewall and\n\n550\n00:29:16.727 --> 00:29:18.308\nget that put in place.\n\n551\n00:29:18.308 --> 00:29:20.706\nBut once that's done,\nwe've got the entries in place.\n\n552\n00:29:20.706 --> 00:29:26.020\nIt's up and it's going and now I'm\nallowing traffic to pass that firewall.\n\n553\n00:29:26.020 --> 00:29:30.060\n&gt;&gt; Now here's another boomerang, what\nif I wanna manage non-standard traffic?\n\n554\n00:29:30.060 --> 00:29:33.067\n&gt;&gt; Okay, so I just showed you\nan example of the name, http.\n\n555\n00:29:33.067 --> 00:29:36.960\nThat's standard traffic,\nit knew it, it had a name for it.\n\n556\n00:29:36.960 --> 00:29:39.218\nBut a lot of times we're dealing\nwith non-standard traffic.\n\n557\n00:29:39.218 --> 00:29:43.250\nTraffic that either doesn't have\na name the system knows about or\n\n558\n00:29:43.250 --> 00:29:46.000\nis just using a port,\nmaybe we've changed the port, right?\n\n559\n00:29:46.000 --> 00:29:50.950\nMaybe I'm using SSH, but I run it on\nport 2222 instead to try and hide it.\n\n560\n00:29:50.950 --> 00:29:53.790\nIt's not very effective,\nbut maybe I do that.\n\n561\n00:29:53.790 --> 00:29:57.140\nSo now I wanna allow that traffic through,\nbut I can't use those names, and\n\n562\n00:29:57.140 --> 00:29:58.290\nthat's fine.\n\n563\n00:29:58.290 --> 00:30:02.470\nWhen you create a rule, the syntax for\nit's actually really powerful.\n\n564\n00:30:02.470 --> 00:30:05.248\nWe can match by a ton of things,\nI'm matching here by a name,\n\n565\n00:30:05.248 --> 00:30:06.360\nby a service name.\n\n566\n00:30:06.360 --> 00:30:10.390\nBut you can match by a port number,\nby an IP address, a source IP or\n\n567\n00:30:10.390 --> 00:30:13.390\na destination IP, these are all\nthings that we can match with.\n\n568\n00:30:13.390 --> 00:30:16.920\nSo if it's a non-standard service, I just\nneed to understand how that service works.\n\n569\n00:30:19.870 --> 00:30:22.580\nWell, I guess it depends on how\nmuch effort I wanna put forth also,\n\n570\n00:30:22.580 --> 00:30:24.970\ncuz there's two kind of\nways I can handle this.\n\n571\n00:30:24.970 --> 00:30:28.416\nThe easy way, let's say that I'm\nallowing SSH, but it's on port 2222.\n\n572\n00:30:28.416 --> 00:30:34.700\nSo I just wanna allow TCP Port 2222 to\ncome in and pass through the system.\n\n573\n00:30:34.700 --> 00:30:36.533\nI don't wanna do anything too crazy,\njust get it working.\n\n574\n00:30:36.533 --> 00:30:42.295\nI could come through and\nI could say firewall-cmd --zone=public\n\n575\n00:30:42.295 --> 00:30:46.673\nis the zone I'm using,\nwhichever zone you're on.\n\n576\n00:30:46.673 --> 00:30:50.000\nAnd then I'll do --permanent so\nthat I have this one.\n\n577\n00:30:50.000 --> 00:30:57.200\nAnd then I'm gonna say --add-port, instead\nof add-service, I'm doing add-port.\n\n578\n00:30:57.200 --> 00:31:03.130\nAnd then I'll say = 2222/tcp.\n\n579\n00:31:03.130 --> 00:31:06.820\nIf it was a udp I'd have to say /udp,\nor I could leave it off and\n\n580\n00:31:06.820 --> 00:31:09.170\njust say port 2222 and it would do both.\n\n581\n00:31:09.170 --> 00:31:12.212\nBut I'm gonna specify it that way,\nand that's gonna add that entry.\n\n582\n00:31:12.212 --> 00:31:17.800\nAnd I'm adding it not based on a name,\njust on a number, right?\n\n583\n00:31:17.800 --> 00:31:19.890\nOn that port number so\nnow that traffic will come in.\n\n584\n00:31:19.890 --> 00:31:23.590\nThe firewall doesn't actually care\nwhether that's SSH traffic or not, right?\n\n585\n00:31:23.590 --> 00:31:24.824\nIt's not doing deep packet inspection.\n\n586\n00:31:24.824 --> 00:31:30.383\nSo it's just basically gonna look at that\nand if it sees anything that matches it,\n\n587\n00:31:30.383 --> 00:31:35.961\nhere it is, ports 2222/tcp will now be\nallowed to pass through this system.\n\n588\n00:31:36.990 --> 00:31:40.680\nNow, that's the least amount of\neffort to get this kinda put in.\n\n589\n00:31:40.680 --> 00:31:44.990\nIf I wanna put forth a little more effort,\nI could create a name.\n\n590\n00:31:44.990 --> 00:31:50.387\nOr I could override the SSH name\nto have 2222 instead of 22.\n\n591\n00:31:50.387 --> 00:31:52.553\nSo when you install FirewallD, or\n\n592\n00:31:52.553 --> 00:31:57.345\nit's usually installed by default,\nif you poke around on the file system.\n\n593\n00:31:57.345 --> 00:32:03.822\nIf you into /etc/firewalld, Right, that's\nwhere firewalld's configuration is stored.\n\n594\n00:32:03.822 --> 00:32:05.977\nSee how I've got\nfirewalld.conf right here, and\n\n595\n00:32:05.977 --> 00:32:08.220\nall these other different entries in here.\n\n596\n00:32:08.220 --> 00:32:12.590\nBut you'll see services, and\nif you go inside of that services folder,\n\n597\n00:32:13.610 --> 00:32:18.220\nwhat you'll find is nothing, it's empty.\n\n598\n00:32:18.220 --> 00:32:22.710\nWell, this is a spot where we\ncan put in custom services and\n\n599\n00:32:22.710 --> 00:32:27.655\nI can give them a name or I can\noverride services that already exist.\n\n600\n00:32:27.655 --> 00:32:31.703\nI could create,\nit's a little XML file in here, and\n\n601\n00:32:31.703 --> 00:32:35.944\nif I create an XML file in here and\ndefine that service.\n\n602\n00:32:35.944 --> 00:32:38.640\nThen it can have a name and\nit can be stored right here.\n\n603\n00:32:38.640 --> 00:32:41.360\nAnd sometimes that's useful for\nreally complex services.\n\n604\n00:32:41.360 --> 00:32:46.690\nThings like FTP, where it uses ports 21\nand port 20, it's not just a single port.\n\n605\n00:32:46.690 --> 00:32:49.555\nAnd there's a relationship between\nthose ports, we can define that.\n\n606\n00:32:49.555 --> 00:32:53.365\nSo it's got a way that we can do that if\nwe wanna put forth a little more effort.\n\n607\n00:32:53.365 --> 00:32:55.469\nAnd if you pull up\nthe firewalld documentation,\n\n608\n00:32:55.469 --> 00:32:57.327\nthey give you the syntax for\nthat XML file.\n\n609\n00:32:57.327 --> 00:32:59.416\nAnd actually the sample ones are stored,\n\n610\n00:32:59.416 --> 00:33:02.347\nI'm trying to remember where\nthe sample ones are stored.\n\n611\n00:33:02.347 --> 00:33:05.430\nThey're stored somewhere [LAUGH].\n\n612\n00:33:05.430 --> 00:33:07.716\nSo buried somewhere in our file system,\nI think it's in /lib/firewalld or\n\n613\n00:33:07.716 --> 00:33:08.625\nsomething like that.\n\n614\n00:33:08.625 --> 00:33:11.395\nBut you can find some examples there,\nbut it is in the documentation,\n\n615\n00:33:11.395 --> 00:33:12.600\nyou can see how to build that out.\n\n616\n00:33:12.600 --> 00:33:16.800\nSo if this is something I'm gonna be doing\nfrequently, then I can build that XML\n\n617\n00:33:16.800 --> 00:33:20.246\nfile, and whenever I deploy a new server\ni can make that a part of my build image.\n\n618\n00:33:20.246 --> 00:33:26.270\nSo that's in\n/etc/firewalld/services/donsserver.xml,\n\n619\n00:33:26.270 --> 00:33:28.325\nor whatever my custom service is called,\n\n620\n00:33:28.325 --> 00:33:30.910\nand that way it'll be loaded and\nthe system will recognize it.\n\n621\n00:33:30.910 --> 00:33:34.900\nSo that's a kind of a another\nkey piece of getting firewalld\n\n622\n00:33:34.900 --> 00:33:37.038\nworking the way that we need it to work.\n\n623\n00:33:37.038 --> 00:33:40.470\n&gt;&gt; Fantastic, well we've been looking\nat network security with Firewall D,\n\n624\n00:33:40.470 --> 00:33:42.080\nheard a lot of great stuff.\n\n625\n00:33:42.080 --> 00:33:43.660\nDon, you did a wonderful job.\n\n626\n00:33:43.660 --> 00:33:45.679\nYou wanna add anything before we move on?\n\n627\n00:33:45.679 --> 00:33:47.140\n&gt;&gt; Just a little bit.\n\n628\n00:33:47.140 --> 00:33:51.060\nIn this episode I really just kind of hit\nthe tip of the iceberg with firewalld.\n\n629\n00:33:51.060 --> 00:33:54.130\nIt is very powerful,\nit can do a heck of a lot of stuff.\n\n630\n00:33:54.130 --> 00:33:55.460\nI wanted to get you guys\nfamiliar with it and\n\n631\n00:33:55.460 --> 00:33:57.440\nunderstand how we can use it\nto filter traffic, right?\n\n632\n00:33:57.440 --> 00:34:00.090\nIt's a basic security technique for\nhardening a server, so\n\n633\n00:34:00.090 --> 00:34:02.670\nthat's what I've shown you, but\ndo know there's a lot more.\n\n634\n00:34:02.670 --> 00:34:07.340\nFor example, if you are an instant\nresponse person and you get notified.\n\n635\n00:34:07.340 --> 00:34:10.627\nSomebody tells you, hey Don, it looks\nlike this server's been compromised,\n\n636\n00:34:10.627 --> 00:34:11.619\nsomebody's in there.\n\n637\n00:34:11.619 --> 00:34:14.887\nWell, we know one of the rules is that\nyou don't wanna turn that server off,\n\n638\n00:34:14.887 --> 00:34:17.098\ncuz you need what's in RAM\nto be able to protect it.\n\n639\n00:34:17.098 --> 00:34:20.673\nBut, at the same time, we need to stop\nan attacker from getting in, and so\n\n640\n00:34:20.673 --> 00:34:22.240\nwe can use firewalld to do that.\n\n641\n00:34:22.240 --> 00:34:26.240\nIt's got what's called a panic mode,\nand let me just show you real quick.\n\n642\n00:34:26.240 --> 00:34:31.566\nIf I go over here to this system,\nand I run firewall-cmd\n\n643\n00:34:31.566 --> 00:34:35.540\n--panic-on, I can turn on panic mode.\n\n644\n00:34:35.540 --> 00:34:39.033\nNow, I'm SSHed in, so\nthis is gonna be interesting.\n\n645\n00:34:39.033 --> 00:34:41.843\n&gt;&gt; [LAUGH]\n&gt;&gt; But when I turn on panic, it stops.\n\n646\n00:34:43.105 --> 00:34:46.497\n&gt;&gt; I just immediately disabled\nall network communications,\n\n647\n00:34:46.497 --> 00:34:48.540\nincluding my SSH session, right?\n\n648\n00:34:48.540 --> 00:34:50.910\nSo I'm now kicked out of this server,\neffectively.\n\n649\n00:34:50.910 --> 00:34:55.876\nBut what I've done is, by immediately\nstopping all network communications,\n\n650\n00:34:55.876 --> 00:34:59.148\nI can now start my forensic\nanalysis on the machine.\n\n651\n00:34:59.148 --> 00:35:01.260\nI know that the hacker has been severed,\nthey've been cut out.\n\n652\n00:35:01.260 --> 00:35:03.940\nNow there could be problems there,\nlike if I'm trying to intercept network\n\n653\n00:35:03.940 --> 00:35:06.340\nsessions or other things,\nI might have just damaged data there.\n\n654\n00:35:06.340 --> 00:35:08.320\nBut it's neat to have that functionality.\n\n655\n00:35:08.320 --> 00:35:12.730\nAnd then we can do the same command,\nfirewall-cmd --panic-off, and\n\n656\n00:35:12.730 --> 00:35:14.810\nthen it turns that mode back off again.\n\n657\n00:35:14.810 --> 00:35:19.220\nOr you can do, I think it's --query-panic\nto find out which mode you're in.\n\n658\n00:35:19.220 --> 00:35:23.090\nIt's usually pretty obvious which mode\nyou're in, but that's one example.\n\n659\n00:35:23.090 --> 00:35:26.250\nWe can do authorizing traffic based\non source and destination IP,\n\n660\n00:35:26.250 --> 00:35:27.920\nI think I mentioned that earlier.\n\n661\n00:35:27.920 --> 00:35:31.682\nThere's other triggers you can do,\nyou can do time-based rules that say\n\n662\n00:35:31.682 --> 00:35:34.421\nthis traffic's allowed\nbetween these times of day.\n\n663\n00:35:34.421 --> 00:35:38.731\nYou can do really, really advanced stuff\nwith firewall-cmd, it's a very powerful,\n\n664\n00:35:38.731 --> 00:35:39.499\nor firewalld.\n\n665\n00:35:39.499 --> 00:35:42.296\nIt is very powerful, so\ndefinitely take advantage of it.\n\n666\n00:35:42.296 --> 00:35:45.517\nAnd if you're still running IP tables,\none of the questions I get is,\n\n667\n00:35:45.517 --> 00:35:47.056\nshould I be moving to firewalld?\n\n668\n00:35:47.056 --> 00:35:52.555\nAnd the short answer is,\nit's something you'll want to do,\n\n669\n00:35:52.555 --> 00:35:55.210\nnot something you need to do.\n\n670\n00:35:55.210 --> 00:35:57.655\nIP tables is very powerful too,\nit does a lot of stuff.\n\n671\n00:35:57.655 --> 00:36:00.140\nIt's not as flexible as firewalld though,\nso\n\n672\n00:36:00.140 --> 00:36:02.865\nthe sooner you get moved over to it,\nthe better off you'll be.\n\n673\n00:36:02.865 --> 00:36:06.890\n&gt;&gt; Great information as always,\nDon, and very well presented.\n\n674\n00:36:06.890 --> 00:36:10.540\nThis is Linux security techniques, and\nthere's a lot of episodes to watch.\n\n675\n00:36:10.540 --> 00:36:13.540\nAnd please watch them all,\nbecause you'll be very happy that you did,\n\n676\n00:36:13.540 --> 00:36:14.641\nDon does a wonderful job.\n\n677\n00:36:14.641 --> 00:36:19.978\nAnd thank you for watching ITPRO.TV,\nremember a good IT pro is always learning.\n\n678\n00:36:19.978 --> 00:36:20.706\nI'm Zach Memos.\n\n679\n00:36:20.706 --> 00:36:21.658\n&gt;&gt; And I'm Don Pezet.\n\n680\n00:36:21.658 --> 00:36:23.062\n&gt;&gt; And we'll see you again very soon.\n\n681\n00:36:23.062 --> 00:36:30.777\n[MUSIC]\n\n682\n00:36:30.777 --> 00:36:33.232\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "230002203"
        }
      ],
      "title": "Securing Networks"
    },
    {
      "episodes": [
        {
          "description": "Don and Zach discuss what tools we can use to see if our firewall is working properly, how we can see what ports are open on our system, how netstat works, what 'SS' is, how we can see what the firewall is allowing, how we can test which ports are actually closed, how we use nmap to scan for open ports, what port states mean, and other scan types.",
          "length": "2042",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-5-1-verifying_firewall_configurations-082317-PGM.00_33_46_11.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-5-1-verifying_firewall_configurations-082317-PGM.00_33_46_11.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-5-1-verifying_firewall_configurations-082317-PGM.00_33_46_11.Still001-sm.jpg",
          "title": "Verifying Firewall Configurations",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:01.428\nWelcome to ITPRO.TV.\n\n2\n00:00:01.428 --> 00:00:02.505\nI'm your host Don Pezet.\n\n3\n00:00:02.505 --> 00:00:05.639\n[CROSSTALK]\n\n4\n00:00:05.639 --> 00:00:08.315\n[MUSIC]\n\n5\n00:00:08.315 --> 00:00:10.544\n&gt;&gt; You're watching ITPRO.TV.\n\n6\n00:00:10.544 --> 00:00:13.804\n&gt;&gt; Hello and thank you for\nchoosing ITPRO.TV,\n\n7\n00:00:13.804 --> 00:00:16.390\nhelping you learn wherever you go.\n\n8\n00:00:16.390 --> 00:00:20.075\nI'm your host Zach Memos, as we continue\non with Linux security techniques.\n\n9\n00:00:20.075 --> 00:00:24.495\nAnd we're gonna be verifying firewall\nconfigurations with the one, the only,\n\n10\n00:00:24.495 --> 00:00:25.410\nDon Pezet.\n\n11\n00:00:25.410 --> 00:00:26.900\nDon, great to have you here.\n\n12\n00:00:26.900 --> 00:00:27.920\nThanks for being here.\n\n13\n00:00:27.920 --> 00:00:29.560\n&gt;&gt; Great to be back, Zach,\nand just like you said,\n\n14\n00:00:29.560 --> 00:00:31.966\nwe're gonna be jumping into\nthe verifying firewall configurations.\n\n15\n00:00:31.966 --> 00:00:32.680\n&gt;&gt; Yes.\n\n16\n00:00:32.680 --> 00:00:34.440\n&gt;&gt; You might be thinking, wait a minute.\n\n17\n00:00:34.440 --> 00:00:35.985\nDidn't we already film\nepisodes on firewalls?\n\n18\n00:00:35.985 --> 00:00:37.080\nWe're kind of already done.\n\n19\n00:00:37.080 --> 00:00:38.279\nAre we just gonna kinda\nrehash the same thing?\n\n20\n00:00:39.490 --> 00:00:42.130\nNo, because what we're really doing here\n\n21\n00:00:42.130 --> 00:00:44.710\nis kind of the ongoing activity\nof working with the firewall.\n\n22\n00:00:44.710 --> 00:00:46.370\nYou know when you set up a fire wall,\n\n23\n00:00:46.370 --> 00:00:49.680\nyou have to understand the software we're\nusing, the several different solutions.\n\n24\n00:00:49.680 --> 00:00:52.250\nAnd you can figure it a certain way.\n\n25\n00:00:52.250 --> 00:00:53.020\nAnd once it's done,\n\n26\n00:00:53.020 --> 00:00:57.600\nhow do you know the fire walls is actually\ndoing what you intended it to do.\n\n27\n00:00:57.600 --> 00:00:59.050\nWell you need to be able to test.\n\n28\n00:00:59.050 --> 00:01:02.860\nSo testing should be a part of\nthe initial configuration of a fire wall.\n\n29\n00:01:02.860 --> 00:01:06.600\nBut then once you're done, firewall's\nconfigured, it's in production and\n\n30\n00:01:06.600 --> 00:01:10.030\nthe server is running,\nyou need to be doing routine maintenance\n\n31\n00:01:10.030 --> 00:01:13.190\nmonth after month or week after week\nchecking those servers to make sure\n\n32\n00:01:13.190 --> 00:01:16.680\nthe firewall is still\nsecuring the server properly.\n\n33\n00:01:16.680 --> 00:01:18.910\nSo this is not a one and\ndone type of thing.\n\n34\n00:01:18.910 --> 00:01:19.730\nWe've gotta constantly do this.\n\n35\n00:01:19.730 --> 00:01:21.620\nThis is part of our auditing procedure.\n\n36\n00:01:21.620 --> 00:01:23.860\nAnd so in this episode we're gonna\ntake a look at how we can do that,\n\n37\n00:01:23.860 --> 00:01:26.660\nhow we can verify that\nthe firewalls are functioning, and\n\n38\n00:01:26.660 --> 00:01:29.880\nthat everything is restricted\nexactly the way that we anticipated.\n\n39\n00:01:29.880 --> 00:01:33.050\n&gt;&gt; So I'm guessing we need some tools to\nverify that, and to take a look at that.\n\n40\n00:01:33.050 --> 00:01:34.587\nSo what tools are needed?\n\n41\n00:01:34.587 --> 00:01:36.612\n&gt;&gt; All right well let's start\nwith a non technical tool,\n\n42\n00:01:36.612 --> 00:01:38.820\nwe're gonna start with the old\nnoodle up here, right?\n\n43\n00:01:38.820 --> 00:01:41.386\n&gt;&gt; Yep.\n&gt;&gt; We need to understand what our firewall\n\n44\n00:01:41.386 --> 00:01:44.165\nis supposed to be doing,\nnot how it's configured,\n\n45\n00:01:44.165 --> 00:01:47.846\nnot one I can see in a config file,\nbut what it suppose to actually do?\n\n46\n00:01:47.846 --> 00:01:49.500\nYou need to make a list.\n\n47\n00:01:49.500 --> 00:01:50.680\nOn this server,\n\n48\n00:01:50.680 --> 00:01:55.150\nthese are the ports that should be open,\nand everything else should be close.\n\n49\n00:01:55.150 --> 00:01:58.110\nWe need to understand that,\nbecause otherwise when we go on audit,\n\n50\n00:01:58.110 --> 00:02:02.320\nwe might see a port that is open, and\nsay, I don't know what that port is.\n\n51\n00:02:02.320 --> 00:02:05.096\nOr I guess that's suppose to be open,\nthat's fine or,\n\n52\n00:02:05.096 --> 00:02:08.166\nmaybe it's a port you recognize,\nlike HSH that's fine, but\n\n53\n00:02:08.166 --> 00:02:11.371\nis it open to everybody in the world,\nor is it open to just one IP?\n\n54\n00:02:11.371 --> 00:02:13.510\nWe need to know a little more, right.\n\n55\n00:02:13.510 --> 00:02:15.570\nSo, you need to build a list and\n\n56\n00:02:15.570 --> 00:02:18.240\nthis should be part of the configuration\ndocumentation of any server,\n\n57\n00:02:18.240 --> 00:02:21.920\nwho ever built out that server,\neven in the automated process it usually\n\n58\n00:02:21.920 --> 00:02:25.040\nlike answerable or something,\nthere should be a build document.\n\n59\n00:02:25.040 --> 00:02:27.780\nAnd the bill document\nshould specifically state\n\n60\n00:02:27.780 --> 00:02:29.620\nwhat that firewall is supposed\nto be configured like.\n\n61\n00:02:29.620 --> 00:02:31.380\nIt should be part of your security policy.\n\n62\n00:02:31.380 --> 00:02:32.410\nSo we need to know that.\n\n63\n00:02:32.410 --> 00:02:33.460\nSo that's the first tool.\n\n64\n00:02:33.460 --> 00:02:35.723\nFirst tool is paperwork and\nbureaucracy [LAUGH].\n\n65\n00:02:35.723 --> 00:02:36.747\n&gt;&gt; [LAUGH]\n&gt;&gt; And\n\n66\n00:02:36.747 --> 00:02:38.430\nI know that's a terrible way to start but\nit's true.\n\n67\n00:02:38.430 --> 00:02:40.280\nWe've got to know what to test for.\n\n68\n00:02:40.280 --> 00:02:42.860\nAnd from there, then we can jump\ninto the technical side and\n\n69\n00:02:42.860 --> 00:02:44.683\nstart making sure that's\nactually implemented.\n\n70\n00:02:44.683 --> 00:02:46.860\nThat's where we start kind\nof making that list and\n\n71\n00:02:46.860 --> 00:02:48.930\nthen we can use our scanning software\nto find out what's going on.\n\n72\n00:02:48.930 --> 00:02:51.452\n&gt;&gt; Well Don, how can we see what\nports are open in our system?\n\n73\n00:02:51.452 --> 00:02:53.674\n&gt;&gt; All right, here's where we\nget to the actual tools, right?\n\n74\n00:02:53.674 --> 00:02:58.170\nNow on the tools side I'm not\ngonna test the firewall just yet.\n\n75\n00:02:58.170 --> 00:03:02.270\nThe first thing that I would to test\nis what ports are actually opened\n\n76\n00:03:02.270 --> 00:03:02.860\non the server.\n\n77\n00:03:02.860 --> 00:03:05.620\nLike if I had no firewall,\nwhat would be opened.\n\n78\n00:03:05.620 --> 00:03:10.205\nBecause for example, let's say\nTCP port 25, TCP port 25 is SMTP.\n\n79\n00:03:10.205 --> 00:03:13.260\nThe Simple Mail,\nSimple Mail Transfer Protocol?\n\n80\n00:03:13.260 --> 00:03:16.874\nSimple Message Transport,\neither way it's email.\n\n81\n00:03:16.874 --> 00:03:20.120\n[CROSSTALK] And SMTP runs on port 25,\nif I am running a mail server.\n\n82\n00:03:20.120 --> 00:03:22.290\nMy server will be listening on 25.\n\n83\n00:03:22.290 --> 00:03:24.642\nIf I'm not running a mail server,\nI won't be listening on 25.\n\n84\n00:03:24.642 --> 00:03:29.232\nNow if I don't run a mail server\nI don't really need a firewall to\n\n85\n00:03:29.232 --> 00:03:32.690\nblock 25 because there's nothing there.\n\n86\n00:03:32.690 --> 00:03:36.195\nWe don't always need a firewall, but\na firewall protect us if accidentally\n\n87\n00:03:36.195 --> 00:03:38.720\nbrought up a mail server and\ndidn't know it.\n\n88\n00:03:38.720 --> 00:03:42.720\nSo how do we know if we've\naccidentally brought up a mail server?\n\n89\n00:03:42.720 --> 00:03:45.690\nWell, we can monitor what ports\nour server is listening on.\n\n90\n00:03:45.690 --> 00:03:48.530\nAnd there's two big tools\nthat we can use for that.\n\n91\n00:03:48.530 --> 00:03:50.070\nSome that are new, some that are old, but\n\n92\n00:03:50.070 --> 00:03:54.610\nthe two big ones are gonna be netstat and\nSS.\n\n93\n00:03:54.610 --> 00:03:58.300\nNetstat stands for\nthe network statistics command.\n\n94\n00:03:58.300 --> 00:04:00.020\nThat's been around for a long time.\n\n95\n00:04:00.020 --> 00:04:01.931\nIt was developed in the early 80s.\n\n96\n00:04:01.931 --> 00:04:04.220\nSo this is a 30 plus year old tool.\n\n97\n00:04:04.220 --> 00:04:06.250\nThat's available in Windows, Linux,\n\n98\n00:04:06.250 --> 00:04:08.710\nMac OS, and\nis a great way to see what ports are open.\n\n99\n00:04:08.710 --> 00:04:11.490\nAnd then we have its replacement,\nthe newer tool that's called SS.\n\n100\n00:04:11.490 --> 00:04:14.270\nAnd SS stands for socket statistics.\n\n101\n00:04:14.270 --> 00:04:17.910\nIt's very, very similar to netstat,\nactually it uses the same syntax.\n\n102\n00:04:17.910 --> 00:04:20.550\nIt's just much more efficient and\nfaster and in time,\n\n103\n00:04:20.550 --> 00:04:23.760\nwe're gonna see netstat go away and\nget replaced by SS.\n\n104\n00:04:23.760 --> 00:04:24.862\nBut in today's world,\n\n105\n00:04:24.862 --> 00:04:27.845\nI find that I still go to netstat\ncuz I've just had it for so long.\n\n106\n00:04:27.845 --> 00:04:30.752\nBut we'll take a look at how we can use\nnetstat and SS to kinda look at and\n\n107\n00:04:30.752 --> 00:04:32.710\nsee what those ports\nare there that are open.\n\n108\n00:04:32.710 --> 00:04:34.720\n&gt;&gt; Yeah, next question then,\nhow does netstat work?\n\n109\n00:04:34.720 --> 00:04:35.400\nCan you show us?\n\n110\n00:04:35.400 --> 00:04:35.940\n&gt;&gt; Yeah.\n\n111\n00:04:35.940 --> 00:04:38.093\nSo netstat [INAUDIBLE] a lot\nof you already know but\n\n112\n00:04:38.093 --> 00:04:39.107\nI'm gonna take my server here.\n\n113\n00:04:39.107 --> 00:04:42.177\nThis is the server that I've been using\nthroughout this whole series, and\n\n114\n00:04:42.177 --> 00:04:43.353\nlaunched a lot of services.\n\n115\n00:04:43.353 --> 00:04:47.060\nAnd actually, I've launched so many that\nI can't even remember what all I've done.\n\n116\n00:04:47.060 --> 00:04:50.404\nSo, honest I don't actually-\n&gt;&gt; [LAUGH]\n\n117\n00:04:50.404 --> 00:04:52.230\n&gt;&gt; Know what ports are open on the server.\n\n118\n00:04:52.230 --> 00:04:55.180\nSo if I wanna find out,\nI can use the netstat utility.\n\n119\n00:04:55.180 --> 00:04:56.012\nI can just run netstat.\n\n120\n00:04:56.012 --> 00:04:59.708\nAll right, now be careful when you run\nnetstat because you can actually get two\n\n121\n00:04:59.708 --> 00:05:03.430\ndifferent types of output depending\non what user you're logged in as.\n\n122\n00:05:03.430 --> 00:05:07.760\nI'm logged in as a regular user,\njust dpezet, right?\n\n123\n00:05:07.760 --> 00:05:11.670\nSo if I run netstat, it's running in my\nuser space, and it can only give me so\n\n124\n00:05:11.670 --> 00:05:13.870\nmuch information about all\nthe ports that are running.\n\n125\n00:05:13.870 --> 00:05:17.540\nSo when I run that, I'm gonna get\nfeedback, and here is some data.\n\n126\n00:05:17.540 --> 00:05:21.410\nAll right, if I run it again,\nand I sudo it this time,\n\n127\n00:05:21.410 --> 00:05:25.180\nI'll find that I get a little bit more,\nusually a little bit more information.\n\n128\n00:05:25.180 --> 00:05:26.670\nSometimes I don't get any more at all.\n\n129\n00:05:26.670 --> 00:05:29.100\nJust depends on the level\nof privileges that I have.\n\n130\n00:05:29.100 --> 00:05:33.620\nBut I'm in the habit of using sudo to\nrun the command with full privileges so\n\n131\n00:05:33.620 --> 00:05:37.900\nI can absolutely see all the data\nabout what's going on on this system.\n\n132\n00:05:37.900 --> 00:05:42.870\nAnd when I run it again here, actually,\nnot really seeing all that much different.\n\n133\n00:05:42.870 --> 00:05:46.600\nI see a Send Sent Message, but\nthat might just be coincidental.\n\n134\n00:05:46.600 --> 00:05:47.115\nThat might have just started.\n\n135\n00:05:47.115 --> 00:05:50.290\nSo not seeing anything too crazy or\ndifferent.\n\n136\n00:05:50.290 --> 00:05:53.670\nBut in the real world when we're testing,\nyou do wanna make sure you sudo it so\n\n137\n00:05:53.670 --> 00:05:54.910\nyou get the full set of data.\n\n138\n00:05:54.910 --> 00:05:58.270\nIn fact, just to make sure I don't make\nthat mistake, I'm gonna do a sudo-s\n\n139\n00:05:58.270 --> 00:06:02.290\nto switch to a root shell so\nthat I don't have to worry about it.\n\n140\n00:06:02.290 --> 00:06:03.730\nBut when I run netstat,\n\n141\n00:06:03.730 --> 00:06:08.620\nit's gonna return a list of all\nthe ports that are open on the system.\n\n142\n00:06:08.620 --> 00:06:11.280\nAnd I'm actually seeing a couple\nof different types of ports.\n\n143\n00:06:11.280 --> 00:06:13.500\nSo let's run down this just real quick.\n\n144\n00:06:13.500 --> 00:06:16.290\nThe left side column is\ntelling me what type of port.\n\n145\n00:06:16.290 --> 00:06:21.160\nAnd I can see here I've got a TCP port and\nthen I've got UNIX ports.\n\n146\n00:06:21.160 --> 00:06:24.860\nThose Unix ports are just\nlittle Unix sockets\n\n147\n00:06:24.860 --> 00:06:27.550\nthat are really being used by software.\n\n148\n00:06:27.550 --> 00:06:30.570\nIt's one piece of software talking to\nanother piece of software right here\n\n149\n00:06:30.570 --> 00:06:31.610\non this system.\n\n150\n00:06:31.610 --> 00:06:34.130\nSo those are available via the network.\n\n151\n00:06:34.130 --> 00:06:36.930\nIt's these guys up here that\nare available beyond the network.\n\n152\n00:06:36.930 --> 00:06:38.460\nI say this guy is only one of them, right?\n\n153\n00:06:38.460 --> 00:06:42.300\nSo it just TCP, but\nI might have other ports that are open.\n\n154\n00:06:42.300 --> 00:06:45.620\nAnd on this one, I can see that I've\ngot an SHS session, that's opened and\n\n155\n00:06:45.620 --> 00:06:46.715\nestablished right now.\n\n156\n00:06:46.715 --> 00:06:48.245\nWell it's my laptop.\n\n157\n00:06:48.245 --> 00:06:51.295\nI'm SSHed into this service,\nI'm seeing my own session.\n\n158\n00:06:51.295 --> 00:06:54.715\nBut it's open and it's listening, and\nit's kinda reflecting that back and\n\n159\n00:06:54.715 --> 00:06:55.855\ntelling me that that's happened.\n\n160\n00:06:55.855 --> 00:06:58.156\nSo I can kinda spot that.\n\n161\n00:06:58.156 --> 00:07:01.725\nNow the display here is showing\nme kinda more than I want.\n\n162\n00:07:01.725 --> 00:07:04.052\nI don't really wanna see\nthese Unix sockets, so\n\n163\n00:07:04.052 --> 00:07:07.355\nwhen I run netstat I normally use\na couple of command line arguments.\n\n164\n00:07:07.355 --> 00:07:09.930\nAnd I want to show you guys\nthe ones that I typically use.\n\n165\n00:07:09.930 --> 00:07:14.670\nThe first one is I use -t, and\n-t I'll say just show me the TCP socket,\n\n166\n00:07:14.670 --> 00:07:16.800\nso I don't need to see\nall those Unix sockets.\n\n167\n00:07:16.800 --> 00:07:19.810\nAnd when I run that I get\na much smaller output, right?\n\n168\n00:07:19.810 --> 00:07:20.790\nBut this is the network stuff,\n\n169\n00:07:20.790 --> 00:07:23.480\nthis is what our firewall\nis controlling access to.\n\n170\n00:07:23.480 --> 00:07:27.790\nSo now I can see that I just have\nthat SSH session open and that's it.\n\n171\n00:07:27.790 --> 00:07:31.530\nAll right, but this is a little misleading\nbecause what I'm seeing here is I'm\n\n172\n00:07:31.530 --> 00:07:35.360\nreally just seeing the established ports.\n\n173\n00:07:35.360 --> 00:07:37.930\nI'm not seeing ones that are listening,\nones that are waiting for\n\n174\n00:07:37.930 --> 00:07:38.860\nconnections, right?\n\n175\n00:07:38.860 --> 00:07:41.355\nSo I could still have other ports that are\nopen, they are not just showing up here.\n\n176\n00:07:41.355 --> 00:07:45.145\nThe other thing is I'm only seeing TCP,\nI'm not seeing UDP.\n\n177\n00:07:45.145 --> 00:07:47.091\nI'm gonna have UDP ports here open.\n\n178\n00:07:47.091 --> 00:07:50.409\nSo, I usually add a U to this, right.\n\n179\n00:07:50.409 --> 00:07:54.327\nU says, I wanna see UDP as well And\nwhen I run that, now I see well,\n\n180\n00:07:54.327 --> 00:07:58.910\nI don't have any active UDP sessions so\nit didn't really change my output.\n\n181\n00:07:58.910 --> 00:08:02.000\nBut if I did, I would see UDP.\n\n182\n00:08:02.000 --> 00:08:04.600\nAnother thing is that\nit's resolving the name.\n\n183\n00:08:04.600 --> 00:08:08.289\nSee how it's showing\nthe labdco1.lab.ITPro.TV,\n\n184\n00:08:08.289 --> 00:08:11.120\nwell it got kind of abbreviated there but\nthat's what it showing.\n\n185\n00:08:11.120 --> 00:08:15.660\nIt's taking each IP address and doing\na reverse look up to figure out the name.\n\n186\n00:08:15.660 --> 00:08:19.230\nWell, in this case it's actually a little\nbit wrong cuz this is supposed to be my\n\n187\n00:08:19.230 --> 00:08:21.650\nlaptop but it takes time to do.\n\n188\n00:08:21.650 --> 00:08:23.460\nAnd the more ports you have open,\n\n189\n00:08:23.460 --> 00:08:26.000\nthe more effort it has to spend\ndoing those reverse look ups.\n\n190\n00:08:26.000 --> 00:08:27.250\nSo I normally turn that off, and\n\n191\n00:08:27.250 --> 00:08:29.830\nyou can turn that off by\nputting an N on there, right?\n\n192\n00:08:29.830 --> 00:08:32.040\nAnd says no name lookup, right?\n\n193\n00:08:32.040 --> 00:08:33.450\nI don't wanna do a name lookup.\n\n194\n00:08:33.450 --> 00:08:37.830\nAnd so now when I run it, I see IPs and\nit's not doing the name lookup for\n\n195\n00:08:37.830 --> 00:08:39.110\nthe protocol either.\n\n196\n00:08:39.110 --> 00:08:42.250\nSo instead of SSH,\nI just see that it's TCP port 22.\n\n197\n00:08:42.250 --> 00:08:45.750\nAnd that's a little more useful if\nyou've got all your numbers memorized,\n\n198\n00:08:45.750 --> 00:08:47.370\nit just makes it easier to kind of read.\n\n199\n00:08:47.370 --> 00:08:51.880\nBut now I can see the IP addresses that\nare involved and what's communicating.\n\n200\n00:08:51.880 --> 00:08:54.920\nNow, I mentioned that I'm only\nseeing established sessions.\n\n201\n00:08:54.920 --> 00:08:58.700\nI'm gonna add one more letter to this and\nthat's the A letter, right?\n\n202\n00:08:58.700 --> 00:09:03.590\nAnd when I run that, now A says\nshow me all sessions, not just ones\n\n203\n00:09:03.590 --> 00:09:07.790\nthat are established and this is the\noutput that I really wanted to see, okay?\n\n204\n00:09:07.790 --> 00:09:12.230\nBecause this is what my server\nis actually listening for.\n\n205\n00:09:12.230 --> 00:09:16.136\nIf you look at all these listens, and\nI've got IPv4 and IPv6 listens, so\n\n206\n00:09:16.136 --> 00:09:18.000\nI'm gonna focus on the IPv4 ones.\n\n207\n00:09:18.000 --> 00:09:20.623\nBut if I look at this\nlittle block right here,\n\n208\n00:09:20.623 --> 00:09:23.741\ni can see that I'm listening\non six different ports.\n\n209\n00:09:23.741 --> 00:09:29.184\n139, 111, 22, 25, 445 and 514.\n\n210\n00:09:29.184 --> 00:09:32.935\nAnd then down here I can see I'm\nusing almost the same for IPv6,\n\n211\n00:09:32.935 --> 00:09:35.390\nactually I've got a few more in IPv6.\n\n212\n00:09:35.390 --> 00:09:39.640\nI've got port 80 and port 23.\n\n213\n00:09:39.640 --> 00:09:42.090\nSo I got a couple of extra ones in\nIPv6 that I don't have in IPv4.\n\n214\n00:09:42.090 --> 00:09:44.220\nBut I need to be aware of that.\n\n215\n00:09:44.220 --> 00:09:46.922\nAnd then down here,\nI've got some UDP ports, UDP 137.\n\n216\n00:09:46.922 --> 00:09:48.800\nAll right, so what are all these?\n\n217\n00:09:48.800 --> 00:09:50.581\nAm I suppose to be listening on these?\n\n218\n00:09:50.581 --> 00:09:53.730\nWell, 139, that's used by Samba.\n\n219\n00:09:53.730 --> 00:09:56.639\nThat's used by Windows file sharing if\nI'm connecting to Windows Server, so\n\n220\n00:09:56.639 --> 00:09:57.616\nthat's what that one is.\n\n221\n00:09:57.616 --> 00:10:00.750\n111, that's actually\nbeing used by System D.\n\n222\n00:10:00.750 --> 00:10:03.200\nSo, System D is firing that for\ncommunication.\n\n223\n00:10:03.200 --> 00:10:05.600\n22 is SSH, 25 is e-mail.\n\n224\n00:10:05.600 --> 00:10:08.850\nNow I was using e-mail as\nan example a few minutes ago,\n\n225\n00:10:08.850 --> 00:10:10.580\nI didn't think I was\nrunning an e-mail server.\n\n226\n00:10:10.580 --> 00:10:13.079\nBut you know,\na lot of distros include send mail and\n\n227\n00:10:13.079 --> 00:10:16.875\nsend mail listens on port 25 so I might\nactually have an SNTP server there.\n\n228\n00:10:16.875 --> 00:10:18.425\nI might have something else.\n\n229\n00:10:18.425 --> 00:10:22.465\nSo something is listing on port 25,\nI don't necessarily want that, right?\n\n230\n00:10:22.465 --> 00:10:25.935\n445, that one is used by, I think\nit's Samba also, if I remember right.\n\n231\n00:10:25.935 --> 00:10:27.329\nI'm might have to look it up, right?\n\n232\n00:10:27.329 --> 00:10:28.400\nIf you don't know the port number.\n\n233\n00:10:28.400 --> 00:10:30.415\n514 is syslog.\n\n234\n00:10:30.415 --> 00:10:34.340\nSo, each of these are different services\nthat I'm listening for on the server.\n\n235\n00:10:34.340 --> 00:10:35.250\nIf I don't want one,\n\n236\n00:10:35.250 --> 00:10:39.040\nlike SMTP here, I don't want SMTP\ntraffic coming into my server.\n\n237\n00:10:39.040 --> 00:10:40.820\nI need to be blocking\nthat on the firewall, so\n\n238\n00:10:40.820 --> 00:10:42.260\nthis is kinda part of my test.\n\n239\n00:10:42.260 --> 00:10:45.010\nIf I don't have anything listening on\nport 25 then I don't really care if\n\n240\n00:10:45.010 --> 00:10:45.810\nthe firewall blocks it or\n\n241\n00:10:45.810 --> 00:10:48.700\nnot because there's nothing here\nlistening for it to connect to.\n\n242\n00:10:48.700 --> 00:10:50.980\nIf somebody tries to\nconnect to me on 3389,\n\n243\n00:10:50.980 --> 00:10:55.580\nwhich is what Windows remote desktop uses,\nwhat do I care?\n\n244\n00:10:55.580 --> 00:10:56.750\nI'm not running Windows remote desktop.\n\n245\n00:10:56.750 --> 00:10:58.050\nIt's not gonna do anything on my server.\n\n246\n00:10:58.050 --> 00:10:59.718\nI don't need the firewall to block that.\n\n247\n00:10:59.718 --> 00:11:02.910\nIt would be nice, you're right we don't\nwant malicious traffic coming in, but\n\n248\n00:11:02.910 --> 00:11:05.560\neven if the traffic made it here,\nit wouldn't do anything.\n\n249\n00:11:05.560 --> 00:11:09.470\nSo netstat will show us that and\nI have a mnemonic that I use.\n\n250\n00:11:09.470 --> 00:11:10.760\nThere's actually a couple of mnemonics.\n\n251\n00:11:10.760 --> 00:11:12.966\nThe one I use for this is AUNT.\n\n252\n00:11:12.966 --> 00:11:14.007\nAunt, right?\n\n253\n00:11:14.007 --> 00:11:18.301\nAUNT, that gives me all sessions,\nTCP and UDP, and\n\n254\n00:11:18.301 --> 00:11:22.840\nthere's no name resolution and\nthat resolves it.\n\n255\n00:11:22.840 --> 00:11:25.443\nYou can also do TUNA,\nthere's another one, same thing-\n\n256\n00:11:25.443 --> 00:11:26.240\n&gt;&gt; [LAUGH]\n\n257\n00:11:26.240 --> 00:11:27.749\n&gt;&gt; It's an easy way to remember that you\n\n258\n00:11:27.749 --> 00:11:30.086\nwant netstat to say just give\nme the information I want and\n\n259\n00:11:30.086 --> 00:11:31.660\ndon't lay out a bunch of extra stuff.\n\n260\n00:11:31.660 --> 00:11:33.600\n&gt;&gt; You can tune a piano,\nbut you can't tuna fish.\n\n261\n00:11:33.600 --> 00:11:34.900\n&gt;&gt; There you go.\n\n262\n00:11:34.900 --> 00:11:37.610\nBut there is one extra letter\nthat I do wanna point out.\n\n263\n00:11:37.610 --> 00:11:41.270\nSo I've got port 25 open,\nwhich I genuinely don't know why.\n\n264\n00:11:41.270 --> 00:11:43.029\nAnd so I'm on the line now.\n\n265\n00:11:43.029 --> 00:11:44.790\nWhat program is holding port 25 open?\n\n266\n00:11:44.790 --> 00:11:49.010\nSo we can add one more letter, which is P.\n\n267\n00:11:49.010 --> 00:11:49.960\nP for program.\n\n268\n00:11:49.960 --> 00:11:51.820\nTell me the programs that are doing this?\n\n269\n00:11:51.820 --> 00:11:56.580\nAnd the P tag, it does not work very well\nif you're running it as a regular user.\n\n270\n00:11:56.580 --> 00:11:58.910\nCuz you pretty much have to own\nthe processes for it to work.\n\n271\n00:11:58.910 --> 00:12:01.880\nIf you're running as root though like I\nam, where I've gotten into a root shell or\n\n272\n00:12:01.880 --> 00:12:04.110\nif you sudo the command,\nwhen you add that P,\n\n273\n00:12:04.110 --> 00:12:09.480\nit will show you the programs that\nare actually listening on those sockets.\n\n274\n00:12:09.480 --> 00:12:11.660\nAnd I can come in here and\nI can find that port 25.\n\n275\n00:12:11.660 --> 00:12:16.740\nAnd I can look over here and\nit's tied to process ID 1626 and\n\n276\n00:12:16.740 --> 00:12:18.990\nthen, the service is called master.\n\n277\n00:12:20.240 --> 00:12:22.870\nHm, master, what the heck is that?\n\n278\n00:12:22.870 --> 00:12:24.330\nWell, if we go and dig and\n\n279\n00:12:24.330 --> 00:12:27.600\ndo our research on that, we'll find\nthat it's actually part of System D.\n\n280\n00:12:27.600 --> 00:12:30.350\nSo System D has some e-mail\ncommunications features, and\n\n281\n00:12:30.350 --> 00:12:32.420\nit's what's tying up this port.\n\n282\n00:12:32.420 --> 00:12:35.260\nWell, now at least I know and\nI can find out, do I want that?\n\n283\n00:12:35.260 --> 00:12:36.280\nCan I disable it?\n\n284\n00:12:36.280 --> 00:12:37.650\nShould I disable it?\n\n285\n00:12:37.650 --> 00:12:38.870\nMaybe, maybe not right?\n\n286\n00:12:38.870 --> 00:12:41.230\nBut I can see Samba, and\nremember I mentioned 445 and\n\n287\n00:12:41.230 --> 00:12:42.650\nhow I thought it was Samba?\n\n288\n00:12:42.650 --> 00:12:43.570\nNow I know.\nRight there.\n\n289\n00:12:43.570 --> 00:12:45.155\nSMBD it's part of the Samba demon.\n\n290\n00:12:45.155 --> 00:12:51.370\nR syslog D, SSH, I can spot who it\nis that's listening on these ports.\n\n291\n00:12:51.370 --> 00:12:51.980\nOkay?\n\n292\n00:12:51.980 --> 00:12:56.970\nAnd even further, if it's a temporary\none open like this SSH connection,\n\n293\n00:12:56.970 --> 00:12:58.700\nI can see the user that's doing it.\n\n294\n00:12:58.700 --> 00:13:02.430\nSee how dpezet has this SSH session\nopen for this temporary port?\n\n295\n00:13:02.430 --> 00:13:08.060\nSo we can really get that good information\nout there and that's the P tag on that.\n\n296\n00:13:08.060 --> 00:13:08.700\nSo, Tuna P?\n\n297\n00:13:08.700 --> 00:13:09.700\nI don't know.\n\n298\n00:13:09.700 --> 00:13:11.520\nI don't have a good acronym for that one.\n\n299\n00:13:12.920 --> 00:13:14.330\nDon't appease.\n\n300\n00:13:14.330 --> 00:13:15.720\n&gt;&gt; Yeah, yeah.\n&gt;&gt; It can be hit from a couple\n\n301\n00:13:15.720 --> 00:13:16.850\ndifferent ways.\n\n302\n00:13:16.850 --> 00:13:19.065\n&gt;&gt; Anyhow, so these are the kind of ways.\n\n303\n00:13:19.065 --> 00:13:20.928\nI remember aunt, AUNT.\n\n304\n00:13:20.928 --> 00:13:22.270\nAnd then you just stick a P on there\nif you want to see the programs.\n\n305\n00:13:22.270 --> 00:13:23.965\nBut that's basically netstat.\n\n306\n00:13:23.965 --> 00:13:25.660\nIt'll show you what you want.\n\n307\n00:13:25.660 --> 00:13:29.590\nThere's similar utilities\nthat are also kind of older,\n\n308\n00:13:29.590 --> 00:13:35.570\nlike the fuser utility, where you\ncan say fuser and provide a port.\n\n309\n00:13:35.570 --> 00:13:40.260\nSo I could say like, 111/TCP and\nit will try and look it up.\n\n310\n00:13:40.260 --> 00:13:42.530\nActually, I don't even\nhave the fuser command.\n\n311\n00:13:42.530 --> 00:13:44.280\nIt's an older command.\n\n312\n00:13:44.280 --> 00:13:46.360\nBut you can run that and\nit'll try and find out the port and\n\n313\n00:13:46.360 --> 00:13:47.860\nthen tell you who is tied to it.\n\n314\n00:13:47.860 --> 00:13:49.920\nIn my case,\nI don't even have the command to run it.\n\n315\n00:13:49.920 --> 00:13:53.910\nSo, but there are other commands\nlike that that are out there.\n\n316\n00:13:53.910 --> 00:13:58.370\n&gt;&gt; So what about SS, you mentioned\nthat as the replacement for netstat.\n\n317\n00:13:58.370 --> 00:13:59.630\n&gt;&gt; I forgot about SS.\n\n318\n00:13:59.630 --> 00:14:02.820\nSo important utility cuz it's the new one,\nright?\n\n319\n00:14:02.820 --> 00:14:05.950\nSS is basically what's replacing netstat.\n\n320\n00:14:05.950 --> 00:14:08.500\nSo, you likely already\nhave it on your system.\n\n321\n00:14:08.500 --> 00:14:11.630\nI didn't have to install netstat, SS you\nnormally don't have to install either.\n\n322\n00:14:11.630 --> 00:14:14.845\nAnd so you just run SS, you get a list and\n\n323\n00:14:14.845 --> 00:14:18.730\nyou'll notice it is very similar to what\nwe got when we originally ran netstat.\n\n324\n00:14:18.730 --> 00:14:19.870\nThey did that on purpose.\n\n325\n00:14:19.870 --> 00:14:21.620\nThey tried to make everything\na little more human readable.\n\n326\n00:14:21.620 --> 00:14:25.080\nAt the same time they tried to\nmake it as painless as possible\n\n327\n00:14:25.080 --> 00:14:26.470\nto move away from netstat.\n\n328\n00:14:26.470 --> 00:14:29.690\nSo for example with netstat,\nremember the AUNT?\n\n329\n00:14:29.690 --> 00:14:32.720\nI can say ss-aunt.\n\n330\n00:14:32.720 --> 00:14:34.990\nSame command line arguments and\n\n331\n00:14:34.990 --> 00:14:38.590\nwhen I run it,\nnow I get the ones that I'm listening to.\n\n332\n00:14:38.590 --> 00:14:41.515\nI get UPD and TCP and\nI see that information.\n\n333\n00:14:41.515 --> 00:14:46.100\nIn fact, I can stick a P on the end of\nthat and I'll get the programs as well,\n\n334\n00:14:46.100 --> 00:14:47.365\ntheir process ID and name.\n\n335\n00:14:47.365 --> 00:14:49.555\nIt kind of messes up\nthe screen a little bit.\n\n336\n00:14:49.555 --> 00:14:53.177\nBut I can see that same\ninformation just like netstat, so\n\n337\n00:14:53.177 --> 00:14:54.547\nit's a drop-in replacement.\n\n338\n00:14:54.547 --> 00:14:57.137\nThe big advancement here is\nnot making it easier for you,\n\n339\n00:14:57.137 --> 00:14:59.417\ncuz it's really the same,\nbut it is more efficient.\n\n340\n00:14:59.417 --> 00:15:02.247\nIt creates less impact on the server when\nit goes and does all the lookups and\n\n341\n00:15:02.247 --> 00:15:03.417\nbuilds everything together.\n\n342\n00:15:03.417 --> 00:15:06.397\nIt just runs more efficiently and\nso it is what's replacing it and\n\n343\n00:15:06.397 --> 00:15:08.637\nthen in the future, you'll just use ss.\n\n344\n00:15:08.637 --> 00:15:12.120\nAnywhere that you would normally use\nnetstat, you just swap it out for ss.\n\n345\n00:15:12.120 --> 00:15:15.160\n&gt;&gt; So, now that we can see that\nthe ports are open, how can we tell or\n\n346\n00:15:15.160 --> 00:15:17.172\nhow can we see what\nthe firewall's allowing?\n\n347\n00:15:17.172 --> 00:15:19.820\n&gt;&gt; All right, so now comes the next work,\n\n348\n00:15:19.820 --> 00:15:24.770\nwhich is we made our list of what\nports we should be allowing,\n\n349\n00:15:24.770 --> 00:15:29.520\nwe looked at netstat and we see which\nports we are actively listening for.\n\n350\n00:15:29.520 --> 00:15:34.040\nNow we need our firewall to tie down\nwhat we're listening to what we want,\n\n351\n00:15:34.040 --> 00:15:35.990\nright, and\nthis is going to depend on your firewall.\n\n352\n00:15:35.990 --> 00:15:40.058\nIf you've got IP tables, you'd run\nIPtables-slist, that will list your rules,\n\n353\n00:15:40.058 --> 00:15:42.982\nand hopefully it matches up with\nthe list you made earlier and\n\n354\n00:15:42.982 --> 00:15:45.239\nyou know it's configured properly, right?\n\n355\n00:15:45.239 --> 00:15:51.750\nI'm not running IP details, I'm running\nfirewall d, so I'll say firewall-cmd.\n\n356\n00:15:51.750 --> 00:15:54.524\nAnd then I'll do --list-all.\n\n357\n00:15:54.524 --> 00:15:57.220\nAnd if I am in more than one zone,\nI need to specify a zone.\n\n358\n00:15:57.220 --> 00:15:58.610\nMine is zone=public, right?\n\n359\n00:16:00.498 --> 00:16:04.100\nAnd so I'll take a look at that zone and\nI can see what's being allowed through.\n\n360\n00:16:04.100 --> 00:16:10.740\nAnd if I look at mine, I am allowing SSH,\nHTTp, HTTPS, Syslog and Telnet, right?\n\n361\n00:16:10.740 --> 00:16:12.540\nThose are the ones that\nI am allowing through.\n\n362\n00:16:12.540 --> 00:16:15.878\nNow, when I look at that, they might\nnot match up with what I want, right?\n\n363\n00:16:15.878 --> 00:16:20.940\nHey, I don't have a web server, so\nI don't want HTTP or HTTPS, right?\n\n364\n00:16:20.940 --> 00:16:23.150\nOr Telnet, I definitely don't want Telnet.\n\n365\n00:16:23.150 --> 00:16:24.750\nI wanna turn that off, right?\n\n366\n00:16:24.750 --> 00:16:27.360\nSo people go in and they put\na firewall configuration in place.\n\n367\n00:16:27.360 --> 00:16:30.700\nLike here let me just take,\nwe'll add a web server real quick.\n\n368\n00:16:32.120 --> 00:16:35.980\nSo if I install HTPD real quick,\nwhich I don't think I have, oop,\n\n369\n00:16:35.980 --> 00:16:36.630\nsays I already have it.\n\n370\n00:16:36.630 --> 00:16:39.050\nSo let me just fire it up real quick.\n\n371\n00:16:39.050 --> 00:16:43.141\nWe'll do a system CTL\nenabled--now of HTPD.\n\n372\n00:16:43.141 --> 00:16:45.270\nAnd get it up and going.\n\n373\n00:16:45.270 --> 00:16:46.940\nSo now I do have a web server.\n\n374\n00:16:46.940 --> 00:16:48.950\nSo I'm up and I'm running,\nI got a web server.\n\n375\n00:16:48.950 --> 00:16:51.780\nAnd the firewalls allowing that\nweb traffic through, that's good.\n\n376\n00:16:51.780 --> 00:16:53.370\nI want to turn off Telnet.\n\n377\n00:16:53.370 --> 00:16:58.457\nSo I come in and I say something like\nfirewall-cmd--remove-service Telnet.\n\n378\n00:16:58.457 --> 00:17:04.000\nAll right so I'm gonna go ahead and\nremove that.\n\n379\n00:17:04.000 --> 00:17:05.920\nAnd when I pull up my listing and\n\n380\n00:17:05.920 --> 00:17:10.550\nI look at it I can see Telnet is no\nlonger in the list and it's out of there.\n\n381\n00:17:10.550 --> 00:17:13.410\nRight?\nGreat, perfect, this is how I want it.\n\n382\n00:17:13.410 --> 00:17:16.620\nI can see that port 2222 is open.\n\n383\n00:17:16.620 --> 00:17:18.810\nAnd that's from back when we\ndid that firewall episode.\n\n384\n00:17:18.810 --> 00:17:21.260\nI added that just to show\nhow to put in a port number.\n\n385\n00:17:21.260 --> 00:17:23.660\nI'm really not worried about that\nbecause there is no service listening\n\n386\n00:17:23.660 --> 00:17:24.530\non port 2222.\n\n387\n00:17:24.530 --> 00:17:25.480\nBut if I'm not gonna use that,\n\n388\n00:17:25.480 --> 00:17:28.304\nI could remove that, as well,\njust like I removed Telnet.\n\n389\n00:17:28.304 --> 00:17:31.254\nBut I'm trying to get this in line\nwith the list we made at the beginning\n\n390\n00:17:31.254 --> 00:17:31.808\nof the show.\n\n391\n00:17:31.808 --> 00:17:34.990\nSo it was what we wanted to have open,\nright?\n\n392\n00:17:34.990 --> 00:17:37.580\nNow that it's done, I can just\nlook at the config and say, yes,\n\n393\n00:17:37.580 --> 00:17:39.820\nthis is configured the way that I want it,\nright?\n\n394\n00:17:39.820 --> 00:17:44.470\nBut how do I actually know that I\ncan't telnet in on this port again?\n\n395\n00:17:44.470 --> 00:17:46.073\nOkay, well, I could try it out, right?\n\n396\n00:17:46.073 --> 00:17:48.630\nI could open up another window.\n\n397\n00:17:48.630 --> 00:17:54.440\nI could try and telnet to that server,\nand nothing, I don't get in.\n\n398\n00:17:54.440 --> 00:17:56.630\nSo I'm not getting in.\n\n399\n00:17:56.630 --> 00:17:59.450\nWell, maybe Telnet's not started,\ncuz I didn't test it before, and\n\n400\n00:17:59.450 --> 00:18:00.722\nprobably shouldn't.\n\n401\n00:18:00.722 --> 00:18:06.910\nLet me just make sure that it's actually\nstarted as telnet.socket, there we go.\n\n402\n00:18:06.910 --> 00:18:10.170\nAnd so\nI will try it again Not getting through.\n\n403\n00:18:10.170 --> 00:18:12.500\nOkay so I can't tone that in.\n\n404\n00:18:12.500 --> 00:18:13.940\nIt looks like the firewall's blocking it.\n\n405\n00:18:13.940 --> 00:18:15.260\nSo I know it's configured correctly.\n\n406\n00:18:16.550 --> 00:18:18.850\nBut it's configured correctly now.\n\n407\n00:18:18.850 --> 00:18:21.270\nBut what happens when the server reboots?\n\n408\n00:18:21.270 --> 00:18:23.140\nOr somebody reloads\nthe firewall configuration?\n\n409\n00:18:23.140 --> 00:18:29.016\nThey come in and do a firewall-cmd and\nthey just do a --reload, okay?\n\n410\n00:18:29.016 --> 00:18:31.370\nFirewall reloads.\n\n411\n00:18:31.370 --> 00:18:32.400\nAll right, things are fine now, right?\n\n412\n00:18:32.400 --> 00:18:33.820\nThings are working how\nthey are supposed to.\n\n413\n00:18:33.820 --> 00:18:35.110\nIf I switch over here and Telnet in.\n\n414\n00:18:36.130 --> 00:18:38.080\nNow, I'll be able to Telnet, right?\n\n415\n00:18:38.080 --> 00:18:38.860\nWhat happened?\n\n416\n00:18:38.860 --> 00:18:40.110\nI was blocked a minute ago.\n\n417\n00:18:40.110 --> 00:18:43.080\nNow I am sending my password in plain\ntext across the internet, right.\n\n418\n00:18:43.080 --> 00:18:44.630\nThis is a bad thing.\n\n419\n00:18:44.630 --> 00:18:46.480\nWell\n&gt;&gt; [LAUGH] This is a bad thing.\n\n420\n00:18:46.480 --> 00:18:48.720\n&gt;&gt; We made a simple mistake, right.\n\n421\n00:18:48.720 --> 00:18:53.740\nI ran firewallcmd--remove service telnet.\n\n422\n00:18:53.740 --> 00:18:56.520\nThat removes it from the running\nconfiguration in memory.\n\n423\n00:18:56.520 --> 00:19:01.380\nI didn't do a --permanent to save it so\nit wasn't saved to the disk configuration.\n\n424\n00:19:01.380 --> 00:19:04.120\nWhen the firewall reloads,\nmy changes go away and\n\n425\n00:19:04.120 --> 00:19:09.020\nas a result, telnet came back,\nit's back in the firewall configuration.\n\n426\n00:19:09.020 --> 00:19:12.030\nThat's why we need to audit, a simple\nmistake like that could make us to\n\n427\n00:19:12.030 --> 00:19:15.420\nthink that a port is closed,\nit might even be closed for a few days.\n\n428\n00:19:15.420 --> 00:19:18.130\nBut if that firewall reloads all\nof a sudden the ports open again.\n\n429\n00:19:18.130 --> 00:19:21.170\nThat's why auto thing is so important and\nwhy you need to test it with stuff.\n\n430\n00:19:21.170 --> 00:19:24.450\nAnd we can't just go and sit down and\ntelnet into all our servers today and\n\n431\n00:19:24.450 --> 00:19:27.900\nthen I'm gonna try and do SMTP to all\nservers today, it's just too much, right.\n\n432\n00:19:27.900 --> 00:19:31.500\nThat kind of scanning is\nnot really ideal for us.\n\n433\n00:19:31.500 --> 00:19:35.550\nBut we do need at our minimum\nto take a look at our firewalls,\n\n434\n00:19:35.550 --> 00:19:39.080\nlook at that configuration and make\nsure that it's configured properly and\n\n435\n00:19:39.080 --> 00:19:42.040\nthat has been saved into the config file,\nso it will always be the same.\n\n436\n00:19:42.040 --> 00:19:44.100\nThat will be persistent\neven after you read them?\n\n437\n00:19:44.100 --> 00:19:45.660\n&gt;&gt; So\nwe're talking about ports being open.\n\n438\n00:19:45.660 --> 00:19:46.915\nHow can we tell if they are closed?\n\n439\n00:19:46.915 --> 00:19:51.433\n&gt;&gt; All right, so a better solution here\nthan just going and firing up telnet and\n\n440\n00:19:51.433 --> 00:19:54.196\ntrying to get and\nsee if it's closed, right?\n\n441\n00:19:54.196 --> 00:19:57.916\nSo if I come through here and let me put\nthat rule back in I will remove that\n\n442\n00:19:57.916 --> 00:20:01.180\nservice and\nI'll make it permanent this time, right.\n\n443\n00:20:01.180 --> 00:20:05.530\nSo now I could go and\nsit down on my computer, try and\n\n444\n00:20:05.530 --> 00:20:08.725\ntelnet in, right so I'm gonna try and\ntelnet in again I get blocked.\n\n445\n00:20:08.725 --> 00:20:12.380\nNow I know it's closed but\ntoo much of a burden to do.\n\n446\n00:20:12.380 --> 00:20:15.680\nTo test every protocol every\nday it's not really realistic.\n\n447\n00:20:15.680 --> 00:20:20.200\nSo instead we can use a third party\nutility, a utility called Nmap, right?\n\n448\n00:20:20.200 --> 00:20:22.400\nNmap stands for the Network Mapper.\n\n449\n00:20:22.400 --> 00:20:25.920\nAnd what Nmap use is,\nlet you scan entire network, right?\n\n450\n00:20:25.920 --> 00:20:28.890\nOr scan a single host, and\nfind out what ports are open.\n\n451\n00:20:28.890 --> 00:20:30.400\nAnd it can look at every protocol,\n\n452\n00:20:30.400 --> 00:20:33.410\nI know if you use different utilities I\ndon't have to use telnet to just telnet\n\n453\n00:20:33.410 --> 00:20:37.070\nand SSH to do SSH and\nyou know some email clients to test SMTP.\n\n454\n00:20:37.070 --> 00:20:40.070\nI can just use Nmap to test all of them.\n\n455\n00:20:40.070 --> 00:20:41.950\nAnd it can run automated right.\n\n456\n00:20:41.950 --> 00:20:44.480\nWe can just kinda schedule it to run or\nrun it our selves.\n\n457\n00:20:44.480 --> 00:20:46.320\nNmap does a great job and\n\n458\n00:20:46.320 --> 00:20:50.090\nNmap is available in almost\nevery distro that's out there.\n\n459\n00:20:50.090 --> 00:20:51.700\nIf not usually installed by default so\n\n460\n00:20:51.700 --> 00:20:53.670\nyou probably don't have it\non your system already.\n\n461\n00:20:53.670 --> 00:20:57.980\nBut you're just an install command\naway from getting it in Red Hat or\n\n462\n00:20:57.980 --> 00:21:01.520\nCentas you would say yum install Nmap.\n\n463\n00:21:01.520 --> 00:21:04.470\nIf you're on Fedora you'd\nsay DNF install endmap.\n\n464\n00:21:04.470 --> 00:21:09.410\nIf you're on Ubuntu or DBN you'd see\napt get or just apt install endmap.\n\n465\n00:21:09.410 --> 00:21:11.010\n&gt;&gt; Right.\n&gt;&gt; All of them have that package.\n\n466\n00:21:11.010 --> 00:21:11.960\nAll of them will install it.\n\n467\n00:21:11.960 --> 00:21:12.800\nAnd then you'll have it.\n\n468\n00:21:12.800 --> 00:21:13.890\nSo I've already got mine.\n\n469\n00:21:13.890 --> 00:21:18.370\nOops, sorry I'm not sudoing it,\nthat helps.\n\n470\n00:21:18.370 --> 00:21:19.920\nDo you need to be an admin\nto install stuff?\n\n471\n00:21:19.920 --> 00:21:21.485\nYou'd think I'd remember that\nby this point in the show.\n\n472\n00:21:21.485 --> 00:21:23.980\n&gt;&gt; [LAUGH]\n&gt;&gt; But you can install it,\n\n473\n00:21:23.980 --> 00:21:26.720\nI've already got mine so\nwe've got it there, all right?\n\n474\n00:21:26.720 --> 00:21:32.750\nNow I can use Nmap to scan a host and\ntell me what's open and what's not.\n\n475\n00:21:32.750 --> 00:21:37.210\nAnd the Nmap utility is really not that\nhard to use from the command line, right?\n\n476\n00:21:37.210 --> 00:21:39.180\nAnd from the command line,\nwe can install this on servers and use it.\n\n477\n00:21:39.180 --> 00:21:39.930\nIt works great.\n\n478\n00:21:39.930 --> 00:21:41.560\nThere is a GUI available.\n\n479\n00:21:41.560 --> 00:21:45.980\nIf you want to install the GUI,\nthat's not normally part of the repos.\n\n480\n00:21:45.980 --> 00:21:47.500\nYou can get it from their website, though.\n\n481\n00:21:47.500 --> 00:21:51.540\nIf you go to nmap.org They have\na GUI that's called zen map.\n\n482\n00:21:51.540 --> 00:21:54.900\nAnd zen map is just an easy to use,\nactually I think I have it installed.\n\n483\n00:21:54.900 --> 00:21:56.082\n&gt;&gt; Where you become te map.\n\n484\n00:21:56.082 --> 00:21:56.950\n&gt;&gt; Yep.\n&gt;&gt; [LAUGH].\n\n485\n00:21:56.950 --> 00:21:59.030\n&gt;&gt; So I fire up Zen Map, here it is.\n\n486\n00:21:59.030 --> 00:22:03.020\nThis is the GUI for Nmap.\n\n487\n00:22:03.020 --> 00:22:07.100\nAnd it let's you come in and\nyou specify the IP that you wanna scan.\n\n488\n00:22:07.100 --> 00:22:10.910\nSo maybe I wanna scan my server\nhere I'll do 172.16.0128 and\n\n489\n00:22:10.910 --> 00:22:14.610\nI tell what kind of SQL I wanna run.\n\n490\n00:22:14.610 --> 00:22:17.780\nAnd the whole time that\nI'm doing this over here,\n\n491\n00:22:17.780 --> 00:22:21.750\nit's showing me what the command would\nbe if I ran it from the command line.\n\n492\n00:22:21.750 --> 00:22:23.940\nAnd then when I run it,\nit's gonna give me the right here.\n\n493\n00:22:23.940 --> 00:22:26.140\nIt doesn't do anything you can't\ndo from the command line anyway.\n\n494\n00:22:26.140 --> 00:22:27.820\n&gt;&gt; Right.\n&gt;&gt; But it gives you a nice little GUI.\n\n495\n00:22:27.820 --> 00:22:31.230\nSo you may wanna install that, if you're\nrunning it on your own workstation.\n\n496\n00:22:31.230 --> 00:22:32.380\nThen definitely install it.\n\n497\n00:22:32.380 --> 00:22:33.160\nIt's not hard.\n\n498\n00:22:33.160 --> 00:22:34.990\nYou just download it from their site and\ninstall it.\n\n499\n00:22:34.990 --> 00:22:38.458\nThey have packages for Redhat and\nDebian right on their site.\n\n500\n00:22:38.458 --> 00:22:41.023\nIt is nmap.org-\n&gt;&gt; Awesome.\n\n501\n00:22:41.023 --> 00:22:41.623\nAwesome\n&gt;&gt; And you can\n\n502\n00:22:41.623 --> 00:22:42.950\ndownload that--\n&gt;&gt; Information.\n\n503\n00:22:42.950 --> 00:22:45.090\nHow do we use Nmap to scan for open ports?\n\n504\n00:22:45.090 --> 00:22:46.270\n&gt;&gt; All right.\nSo we're not gonna use the GUI.\n\n505\n00:22:46.270 --> 00:22:47.290\nWe're gonna go to the command line.\n\n506\n00:22:47.290 --> 00:22:49.200\n&gt;&gt; Right.\n&gt;&gt; We'll do it pretty simply.\n\n507\n00:22:49.200 --> 00:22:50.640\nRight?\nSo Nmap by itself,\n\n508\n00:22:50.640 --> 00:22:53.410\nyou can just say Nmap and\npoint it to an IP.\n\n509\n00:22:53.410 --> 00:22:55.810\nSo I can run it and point it to a server.\n\n510\n00:22:55.810 --> 00:22:59.320\nNow, I'm on my own laptop here, I'm not\nremoting to another server at this point.\n\n511\n00:22:59.320 --> 00:23:00.620\nI'm just on my laptop.\n\n512\n00:23:00.620 --> 00:23:05.330\nAnd if I ran Nmap it will likely\nwork just fine but if you pseudo it,\n\n513\n00:23:05.330 --> 00:23:06.680\nthat can help in a lot of situations.\n\n514\n00:23:06.680 --> 00:23:10.090\nThere are some network card drivers that\ndon't like mmap because you do port scan.\n\n515\n00:23:10.090 --> 00:23:14.420\nSometimes you can protect yourself from\nyourself so making sure [INAUDIBLE]\n\n516\n00:23:14.420 --> 00:23:17.350\nhelps to get around that then Nmap will\nhave that full access to the interface.\n\n517\n00:23:17.350 --> 00:23:19.840\nAnd I'm just gonna run Nmap and\npoint it to an adapter.\n\n518\n00:23:19.840 --> 00:23:23.170\nNow I can run it as simple as this.\n\n519\n00:23:23.170 --> 00:23:27.070\nBut, what's gonna happen is\nit's going to start to scan and\n\n520\n00:23:27.070 --> 00:23:30.870\nthat scan It's gonna take a while, right?\n\n521\n00:23:30.870 --> 00:23:31.420\nI'm a big liar.\n\n522\n00:23:31.420 --> 00:23:32.165\nIt went really fast.\n\n523\n00:23:32.165 --> 00:23:34.140\n&gt;&gt; [LAUGH]\n&gt;&gt; So normally it will take a while.\n\n524\n00:23:34.140 --> 00:23:36.670\n&gt;&gt; Well, I don't know about you, but\nI have got one I got a cup of coffee,\n\n525\n00:23:36.670 --> 00:23:39.070\nI grabbed a sandwich,\nI came back it's done.\n\n526\n00:23:39.070 --> 00:23:40.880\nGreat.\n&gt;&gt; A lot times it does take a while.\n\n527\n00:23:40.880 --> 00:23:43.324\nI guess I [INAUDIBLE] one IP and\nit went fast enough.\n\n528\n00:23:43.324 --> 00:23:46.870\nRemember that we're checking ports and\nThere's 65,535 ports.\n\n529\n00:23:46.870 --> 00:23:48.866\nIt could take a while to scan them.\n\n530\n00:23:48.866 --> 00:23:51.310\nShoot, actually I\nremembered why it ran fast.\n\n531\n00:23:51.310 --> 00:23:52.963\nWith the default like this.\nWhen I just run Nmap and\n\n532\n00:23:52.963 --> 00:23:57.760\nI point to an NIP like this, it's\nactually just getting the top 100 ports.\n\n533\n00:23:57.760 --> 00:23:59.480\nThat's why it ran so fast.\n\n534\n00:23:59.480 --> 00:24:02.360\nIt's just checking the top 100,\nthe common services.\n\n535\n00:24:02.360 --> 00:24:06.070\nAnd so it scans and it finds those, and\nit even found some that weren't so common.\n\n536\n00:24:06.070 --> 00:24:07.810\nSo it actually went a little bit further.\n\n537\n00:24:07.810 --> 00:24:10.440\nI can see it got that 2222 too,\nwhich is not a common port.\n\n538\n00:24:10.440 --> 00:24:16.050\nThat was something I made up, but\nit picked up that I have SSH, HTTP and\n\n539\n00:24:16.050 --> 00:24:21.950\nHTTPS that are ports that it's listening\non and then 2222 is also there.\n\n540\n00:24:21.950 --> 00:24:26.500\nSo it's showing that those ports were\nthere and then it saw them, right?\n\n541\n00:24:26.500 --> 00:24:28.850\nNow I don't see SMTP, I don't see port 25.\n\n542\n00:24:28.850 --> 00:24:33.070\nI know my server was listening on port\n25 but the firewall is blocking it and\n\n543\n00:24:33.070 --> 00:24:37.270\nI can see that it didn't even turn\nup here in the list of open ports.\n\n544\n00:24:37.270 --> 00:24:39.990\nI was not able to connect,\nso that's a good sign.\n\n545\n00:24:39.990 --> 00:24:42.080\nIt means my firewall is working.\n\n546\n00:24:42.080 --> 00:24:44.910\nNow I don't normally just run\nNmap by itself like this.\n\n547\n00:24:44.910 --> 00:24:48.180\nI normally come through and\nlimit the ports or specify a port range.\n\n548\n00:24:48.180 --> 00:24:49.370\nSo if you run that command again and\n\n549\n00:24:49.370 --> 00:24:52.880\nyou add a -p,\nyou can tell it the ports you wanna scan.\n\n550\n00:24:52.880 --> 00:24:55.080\nSo for example,\nif I wanna scan ports one through 1024.\n\n551\n00:24:55.080 --> 00:24:59.270\nThose are the registered\nports right the regulates.\n\n552\n00:24:59.270 --> 00:25:06.320\nSo I'm saying sudo nmap-p 1-1024 and\nthen the IP I wanna scan.\n\n553\n00:25:06.320 --> 00:25:10.030\nNow it's gonna check those 1,000 ports and\nthis'll probably take a little bit longer.\n\n554\n00:25:10.030 --> 00:25:13.970\nSo it's gonna scan through and\nit's gonna 1024 ports, there it goes.\n\n555\n00:25:13.970 --> 00:25:17.500\nAnd I get back, well,\nalmost the same information.\n\n556\n00:25:17.500 --> 00:25:18.990\nI didn't get 2222, right?\n\n557\n00:25:20.170 --> 00:25:22.000\nBecause that was above my limit.\n\n558\n00:25:22.000 --> 00:25:23.360\nMy limit was 1024.\n\n559\n00:25:23.360 --> 00:25:25.375\nBut I could even tell it to go crazy.\n\n560\n00:25:25.375 --> 00:25:30.995\nI could tell it to do all 65,535 ports,\nscan the whole thing, right?\n\n561\n00:25:30.995 --> 00:25:33.520\nAnd now I'm gonna get\na good view of that server.\n\n562\n00:25:33.520 --> 00:25:35.050\nI'm gonna see anything that's open.\n\n563\n00:25:35.050 --> 00:25:38.820\nAnd this is typically what I'll do,\nbecause I wanna know,\n\n564\n00:25:38.820 --> 00:25:42.340\nif you have a malware that\ngets installed on a server and\n\n565\n00:25:42.340 --> 00:25:45.700\nputs in a backdoor, the backdoor\nport will normally be a high number.\n\n566\n00:25:45.700 --> 00:25:49.850\nUsually it will be over 40,000 cuz they\nwanted to avoid standard scans like this,\n\n567\n00:25:49.850 --> 00:25:52.370\nand they wanna avoid bumping into\nother software that might be running.\n\n568\n00:25:52.370 --> 00:25:53.830\nCuz they're trying to hide themselves.\n\n569\n00:25:53.830 --> 00:25:57.490\nSo you do really need to scan all the\nports, and so this is typically what I'll\n\n570\n00:25:57.490 --> 00:26:01.890\ndo and this scan will take longer, because\nit's having to check all 65,000 of those.\n\n571\n00:26:01.890 --> 00:26:05.400\nSo it'll probably take about a minute as\nit runs through and it does that scan, but\n\n572\n00:26:05.400 --> 00:26:08.630\nthen it'll give me that full view\nback of what's open on the system.\n\n573\n00:26:08.630 --> 00:26:11.570\n&gt;&gt; Don, what do the port states mean?\n\n574\n00:26:11.570 --> 00:26:14.470\n&gt;&gt; Okay, yep, so while we're waiting\non this, this is actually a good time.\n\n575\n00:26:14.470 --> 00:26:17.240\nYou've got the port state here and\nsee how we've got open and closed?\n\n576\n00:26:17.240 --> 00:26:20.875\nThere's actually six different\nstates that you might see.\n\n577\n00:26:20.875 --> 00:26:24.970\nOpen means hey,\nthat port is accepting connections and\n\n578\n00:26:24.970 --> 00:26:27.135\nthere's software answering\nus on the other side.\n\n579\n00:26:27.135 --> 00:26:31.245\nSo when I ran Nmap,\nit actually tried to do a TCP connection.\n\n580\n00:26:31.245 --> 00:26:35.682\nSo it actually connected to the port,\nand tried to throw some traffic at it.\n\n581\n00:26:35.682 --> 00:26:37.732\nAnd software on the other\nside responded back, so\n\n582\n00:26:37.732 --> 00:26:39.822\nit knows that it's open and\nit's functional.\n\n583\n00:26:39.822 --> 00:26:41.142\nThat's one that's exposed.\n\n584\n00:26:41.142 --> 00:26:42.362\nThat's a risk.\n\n585\n00:26:42.362 --> 00:26:43.722\nIt may be an accepted risk.\n\n586\n00:26:43.722 --> 00:26:46.732\nWe want that web server to make\nport 80 available, or whatever.\n\n587\n00:26:46.732 --> 00:26:49.052\nBut it's telling me that it's open.\n\n588\n00:26:49.052 --> 00:26:53.910\nClosed means the firewall was\nletting the traffic through, but\n\n589\n00:26:53.910 --> 00:26:57.220\nthere was nothing on the other\nside to respond to it.\n\n590\n00:26:57.220 --> 00:27:00.960\nAnd in this case, it's HTTPS\nthat came back as closed for me.\n\n591\n00:27:00.960 --> 00:27:03.240\nI just fired up Apache, right?\n\n592\n00:27:03.240 --> 00:27:05.630\nI just did a quick default kind of thing,\nand threw it together.\n\n593\n00:27:05.630 --> 00:27:07.751\nWell, Apache is gonna\ngive me two problems.\n\n594\n00:27:07.751 --> 00:27:10.399\nProblem number one,\nis it's probably not set up for SSL, so\n\n595\n00:27:10.399 --> 00:27:12.258\nit's probably not answering on 443.\n\n596\n00:27:12.258 --> 00:27:13.990\nSo that's problem number one.\n\n597\n00:27:13.990 --> 00:27:16.590\nWell problem number two,\nit doesn't have a valid certificate and so\n\n598\n00:27:16.590 --> 00:27:18.460\nthat's gonna cause\nconnection issues there too.\n\n599\n00:27:18.460 --> 00:27:21.330\nSo it's telling me though that it\nmanaged to get through the firewall but\n\n600\n00:27:21.330 --> 00:27:24.000\nthat nothing answered on the other side.\n\n601\n00:27:24.000 --> 00:27:28.475\nThere's actually two other responses we\nmight see here, which are filtered and\n\n602\n00:27:28.475 --> 00:27:29.880\nunfiltered.\n\n603\n00:27:29.880 --> 00:27:33.990\nFiltered is when we get a message back\nfrom the firewall telling us we were\n\n604\n00:27:33.990 --> 00:27:36.310\nblocked, we were actively\nblocked going to the firewall.\n\n605\n00:27:36.310 --> 00:27:37.560\nSo if you see the word filtered,\n\n606\n00:27:37.560 --> 00:27:41.020\nit means the firewall actively\nstopped us and told us.\n\n607\n00:27:41.020 --> 00:27:45.130\nIf you see unfiltered, it means the\nfirewall actively told us that we could\n\n608\n00:27:45.130 --> 00:27:48.110\nget through but we may not have gotten\na response from the other side.\n\n609\n00:27:48.110 --> 00:27:49.661\nIf we got a response from\nthe software on the other side,\n\n610\n00:27:49.661 --> 00:27:51.140\nwe would have gotten an open statement.\n\n611\n00:27:51.140 --> 00:27:55.380\nSo unfiltered is very,\nvery similar to closed.\n\n612\n00:27:55.380 --> 00:28:00.280\nThen there's a couple of states for when\nNmap just can't figure out what happened,\n\n613\n00:28:00.280 --> 00:28:06.040\nwhere it will say things like\nope/unfiltered or I'm sorry,\n\n614\n00:28:06.040 --> 00:28:10.900\nit's open/filtered or closed/unfiltered.\n\n615\n00:28:10.900 --> 00:28:13.330\nWhere it can't determine\nwhat the actual state is.\n\n616\n00:28:13.330 --> 00:28:16.870\nIt says, I talked to it,\nI got a response back but\n\n617\n00:28:16.870 --> 00:28:18.090\nthe responses doesn't make any sense.\n\n618\n00:28:18.090 --> 00:28:21.350\nIt looks like a block, but\nit could be response from that software.\n\n619\n00:28:21.350 --> 00:28:24.610\nAnd you see this when you're using\nlike TCP wrappers to block something,\n\n620\n00:28:24.610 --> 00:28:27.000\nyou got through the firewall,\nyou didn't get to the actual software but\n\n621\n00:28:27.000 --> 00:28:28.310\nTCP wrappers blocked us.\n\n622\n00:28:28.310 --> 00:28:31.870\nIt's a weird message, and so\nyou get this kind of combo state.\n\n623\n00:28:31.870 --> 00:28:36.710\nSo there's actually four different states,\nbut with those combo ones, you end up with\n\n624\n00:28:36.710 --> 00:28:40.900\nsix total different combinations\nthat you could get in response.\n\n625\n00:28:40.900 --> 00:28:44.150\nNow, my full scan just finished,\nand I can see here, fortunately,\n\n626\n00:28:44.150 --> 00:28:46.665\nthat I actually don't have\nanything else here in this list.\n\n627\n00:28:46.665 --> 00:28:47.670\nIt did a pretty good scan.\n\n628\n00:28:47.670 --> 00:28:52.900\nI got the information back and\nnow I can tell this is what's configured.\n\n629\n00:28:52.900 --> 00:28:54.440\nI don't have Telnet open.\n\n630\n00:28:54.440 --> 00:28:58.200\nI don't have SMPT open, and I know that\nthe firewall's working properly and\n\n631\n00:28:58.200 --> 00:28:59.580\nsecuring that.\n\n632\n00:28:59.580 --> 00:29:03.580\n&gt;&gt; So we're getting closer to the end\nof time, the end of time as we know it.\n\n633\n00:29:03.580 --> 00:29:06.100\nAre there any other scan types?\n\n634\n00:29:06.100 --> 00:29:08.210\n&gt;&gt; There are a couple of other\nscan types that you might use.\n\n635\n00:29:08.210 --> 00:29:09.590\nThis was using a TCP connect.\n\n636\n00:29:11.020 --> 00:29:13.437\nWhat about UDP?\nDidn't scale for it.\n\n637\n00:29:13.437 --> 00:29:14.840\nYup, so that didn't happen.\n\n638\n00:29:14.840 --> 00:29:18.920\nSo if I wanna do that, if I wanna do a UDP\nscan as well, I need to change this.\n\n639\n00:29:18.920 --> 00:29:24.450\nAnd if you wanna modify the scan,\nuse -s followed by another letter, right?\n\n640\n00:29:24.450 --> 00:29:28.230\nThe -s is lower case, the next\nletter I type is gonna be capital.\n\n641\n00:29:28.230 --> 00:29:31.100\nAnd that letter's gonna determine\nwhat kind of scan that I did.\n\n642\n00:29:31.100 --> 00:29:32.610\nThe default scan is TCP connect.\n\n643\n00:29:32.610 --> 00:29:34.210\nThat's -s with a capital T.\n\n644\n00:29:34.210 --> 00:29:38.360\nSo you don't really have to type\nthat one cuz that's the default, but\n\n645\n00:29:38.360 --> 00:29:43.100\nif I wanna do UDP, it would be -s with\na capital U and then it will scan.\n\n646\n00:29:43.100 --> 00:29:44.770\nAnd let me just shrink\nthat port number down.\n\n647\n00:29:44.770 --> 00:29:46.900\nActually, here.\nI'll just leave the ports off.\n\n648\n00:29:46.900 --> 00:29:48.690\nSo we'll do a smaller scan on that one.\n\n649\n00:29:48.690 --> 00:29:51.160\nAnd now it's gonna look at the server and\nit's gonna look for\n\n650\n00:29:51.160 --> 00:29:53.000\nthose UDP ports that might be open.\n\n651\n00:29:53.000 --> 00:29:55.200\nAnd that's important\nbecause I'm running syslog.\n\n652\n00:29:55.200 --> 00:30:00.360\nSyslog is on port 514 but it's UDP,\nso see how it didn't show up up here?\n\n653\n00:30:00.360 --> 00:30:03.871\nBut it will show up on this UDP scan,\nor at least I hope it does.\n\n654\n00:30:03.871 --> 00:30:06.740\n[LAUGH] I guess I should have\nlimited the ports down to just 514.\n\n655\n00:30:06.740 --> 00:30:09.070\nBut it will scan and it'll come back.\n\n656\n00:30:09.070 --> 00:30:11.350\nIn fact, I'm getting impatient so\nlet me redo this.\n\n657\n00:30:11.350 --> 00:30:13.140\nAnd I'll just say -p -514.\n\n658\n00:30:13.140 --> 00:30:15.088\nI'm just gonna scan that one port.\n\n659\n00:30:15.088 --> 00:30:17.460\nAnd it's gonna look at it,\nand there it goes, I get it.\n\n660\n00:30:17.460 --> 00:30:20.480\nNotice I'm not filtered,\nit just says closed syslog.\n\n661\n00:30:20.480 --> 00:30:23.720\nI must not have configured\nour syslog on this one.\n\n662\n00:30:23.720 --> 00:30:25.270\nBut it shows that it's there.\n\n663\n00:30:25.270 --> 00:30:26.490\nSee how it found it.\n\n664\n00:30:26.490 --> 00:30:30.880\nSo it's letting me know that it is there,\nit's just not responding back to me.\n\n665\n00:30:30.880 --> 00:30:34.520\nSo in our syslog, you actually have to\ndefine who's allowed to connect and\n\n666\n00:30:34.520 --> 00:30:37.120\nI'm not in that list, so\nI'm getting the closed message.\n\n667\n00:30:37.120 --> 00:30:38.996\nI'm not getting filtered by the firewall,\n\n668\n00:30:38.996 --> 00:30:41.080\nI'm getting closed by\nsyslog on the other side.\n\n669\n00:30:41.080 --> 00:30:44.821\nAnd another type of scan we can do,\nthose TCP connects,\n\n670\n00:30:44.821 --> 00:30:47.470\nsome systems detect those, right?\n\n671\n00:30:47.470 --> 00:30:49.690\nCisco firewalls do deep\npackets inspection and\n\n672\n00:30:49.690 --> 00:30:51.870\nthey can actually see what we're doing and\nstop it.\n\n673\n00:30:51.870 --> 00:30:55.059\nSo you can do what's called\nthe stealth sin connect instead and\n\n674\n00:30:55.059 --> 00:30:59.350\nstealth sin connects can sometimes find\nconnections that a normal connect can't.\n\n675\n00:30:59.350 --> 00:31:04.340\nAnd so for that, you would do a dash\nlower case s followed by capital S.\n\n676\n00:31:04.340 --> 00:31:05.990\nAnd that says do a stealth sin.\n\n677\n00:31:05.990 --> 00:31:09.900\nAnd with this, it's not actually\ntrying to talk to the software.\n\n678\n00:31:09.900 --> 00:31:12.090\nIt's just doing the TCP handshake.\n\n679\n00:31:12.090 --> 00:31:14.370\nThe syn, ack right?\n\n680\n00:31:14.370 --> 00:31:17.360\nYou send a syn message,\nthe other side sends a syn ack and\n\n681\n00:31:17.360 --> 00:31:18.550\nthen you send an ack back right.\n\n682\n00:31:18.550 --> 00:31:20.150\nThat's the handshake, and\nthen you stop right there.\n\n683\n00:31:20.150 --> 00:31:21.350\nSo there's no malicious payload.\n\n684\n00:31:21.350 --> 00:31:22.870\nIt's just a handshake\nthat anybody would do.\n\n685\n00:31:22.870 --> 00:31:24.410\nAnd a lot of times,\n\n686\n00:31:24.410 --> 00:31:28.260\nthat can detect things that\nnext-generation firewalls are blocking.\n\n687\n00:31:28.260 --> 00:31:30.310\nSo, it's another good scan to run.\n\n688\n00:31:30.310 --> 00:31:34.730\nIn my case, it didn't turn up anything\ndifferent, but it can pop things up, too.\n\n689\n00:31:34.730 --> 00:31:37.370\nSo that's another scan that\nyou might want to be aware of.\n\n690\n00:31:37.370 --> 00:31:43.060\nAnd then one last one, before any scan,\nit does this host is up check.\n\n691\n00:31:43.060 --> 00:31:46.910\nIt sends a ping to make sure the host is\nup and if the ping fails, it gives up and\n\n692\n00:31:46.910 --> 00:31:47.905\nit never scans the ports.\n\n693\n00:31:47.905 --> 00:31:51.680\nWell, a lot of people\nblock pings today and so\n\n694\n00:31:51.680 --> 00:31:54.250\nif that happens, we need to\nforce it to run the ping anyway.\n\n695\n00:31:54.250 --> 00:31:59.927\nAnd so the way you do that\nis you add a dash capital P,\n\n696\n00:31:59.927 --> 00:32:04.020\ncapital N and\nthat disables ping probes, right?\n\n697\n00:32:04.020 --> 00:32:05.880\nSo you're saying I don't\nwanna do the ping probe.\n\n698\n00:32:05.880 --> 00:32:08.130\nJust get in there and\nscan the port already.\n\n699\n00:32:08.130 --> 00:32:12.886\nAnd by doing that, sometimes that can\navoid not running a scan on a system that\n\n700\n00:32:12.886 --> 00:32:14.920\nis actively blocking.\n\n701\n00:32:14.920 --> 00:32:17.961\nSo, I'm just gonna do a scan on 514 again.\n\n702\n00:32:17.961 --> 00:32:21.460\nI'll make that UDP and\nso we're gonna scan and\n\n703\n00:32:21.460 --> 00:32:25.680\nthis time it will skip the ping probe and\ngo right to reaching out and\n\n704\n00:32:25.680 --> 00:32:29.110\ntesting whether or not it can get to\nthat port and communicate that way.\n\n705\n00:32:29.110 --> 00:32:31.560\nAnd it's taking a little longer this time.\n\n706\n00:32:31.560 --> 00:32:35.381\nBut that helps to avoid in those\nsituations where ping is being blocked by\n\n707\n00:32:35.381 --> 00:32:36.079\na fire wall.\n\n708\n00:32:36.079 --> 00:32:38.545\n&gt;&gt; So the phrase for\ntoday is disable ping probes.\n\n709\n00:32:38.545 --> 00:32:42.111\n&gt;&gt; [LAUGH]\n&gt;&gt; Verifying firewall configurations,\n\n710\n00:32:42.111 --> 00:32:44.041\nawesome episode, great job Don.\n\n711\n00:32:44.041 --> 00:32:45.790\nAnything else you wanna add?\n\n712\n00:32:45.790 --> 00:32:46.918\n&gt;&gt; That's the main stuff here.\n\n713\n00:32:46.918 --> 00:32:49.052\nThe key thing though is make\nthis part of your policy.\n\n714\n00:32:49.052 --> 00:32:50.943\nYou need to routinely scan your servers.\n\n715\n00:32:50.943 --> 00:32:54.470\nAnd if all of a sudden you see\na new port pop up in the list,\n\n716\n00:32:54.470 --> 00:32:56.360\nthat's a great way to spot\nthat you've been compromised.\n\n717\n00:32:56.360 --> 00:32:56.900\n&gt;&gt; Right.\n\n718\n00:32:56.900 --> 00:33:00.000\n&gt;&gt; Or to spot that somebody\nmade an unauthorized change or\n\n719\n00:33:00.000 --> 00:33:01.790\nleft something open in troubleshooting.\n\n720\n00:33:01.790 --> 00:33:03.080\nSomething is wrong.\n\n721\n00:33:03.080 --> 00:33:05.790\nYou should only get back\nthe ports that you expect.\n\n722\n00:33:05.790 --> 00:33:07.540\nSo build this intp your process.\n\n723\n00:33:07.540 --> 00:33:08.380\nDo this routinely.\n\n724\n00:33:08.380 --> 00:33:11.130\nScan your servers daily,\nweekly, monthly, something.\n\n725\n00:33:11.130 --> 00:33:12.800\nYou just need to be watching them.\n\n726\n00:33:12.800 --> 00:33:15.090\nAnd you can scan an entire network.\n\n727\n00:33:15.090 --> 00:33:19.770\nI never did it here, but I could've\nput in the IP as 172.16.0.0\\24 and\n\n728\n00:33:19.770 --> 00:33:22.400\nnow it'll scan the whole subnet.\n\n729\n00:33:22.400 --> 00:33:24.800\nAnd so you can run one command and\n\n730\n00:33:24.800 --> 00:33:27.210\nyou scan all the ports\nacross your entire network.\n\n731\n00:33:27.210 --> 00:33:30.000\nIt'll take hours to run, but\nwhen it's done you get a really good\n\n732\n00:33:30.000 --> 00:33:33.130\nset of data back and you can understand\nwhat is open on your network.\n\n733\n00:33:33.130 --> 00:33:33.710\n&gt;&gt; Thanks, Don.\n\n734\n00:33:33.710 --> 00:33:34.810\nYou can never be too safe.\n\n735\n00:33:34.810 --> 00:33:37.700\nLinux security techniques,\nwatch every single episode,\n\n736\n00:33:37.700 --> 00:33:39.610\nyou'll be very glad you did.\n\n737\n00:33:39.610 --> 00:33:41.150\nAnd thank you for watching IT PRO TV,\n\n738\n00:33:41.150 --> 00:33:45.600\nremember a good IT Pro is always learning,\nI'm Zack Memos.\n\n739\n00:33:45.600 --> 00:33:46.195\n&gt;&gt; And I'm Don Pezet.\n\n740\n00:33:46.195 --> 00:33:49.572\n&gt;&gt; And we will see you again very soon.\n\n741\n00:33:49.572 --> 00:33:55.333\n[MUSIC]\n\n742\n00:33:55.333 --> 00:33:58.796\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "230939660"
        },
        {
          "description": "Don and Zach cover what tools we can use to see whether network traffic is encrypted, where we get Wireshark, how we use Wireshark, and how we can monitor actual sessions on the server.",
          "length": "1820",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-5-2-1-verifying_network_data_encryption-082217-PGM.00_35_59_05.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-5-2-1-verifying_network_data_encryption-082217-PGM.00_35_59_05.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-5-2-1-verifying_network_data_encryption-082217-PGM.00_35_59_05.Still002-sm.jpg",
          "title": "Verifying Network Data Encryption",
          "transcript": "WEBVTT\n\n1\n00:00:00.270 --> 00:00:02.214\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:02.214 --> 00:00:05.923\n[CROSSTALK] Live from San Francisco,\nCalifornia.\n\n3\n00:00:05.923 --> 00:00:08.474\n[MUSIC]\n\n4\n00:00:08.474 --> 00:00:12.066\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:12.066 --> 00:00:16.778\n&gt;&gt; Hello, and thank you for choosing\nITProTV helping you learn wherever you go.\n\n6\n00:00:16.778 --> 00:00:18.064\nI'm your host Zach Memos.\n\n7\n00:00:18.064 --> 00:00:21.284\nAs we continue on with\nLinux Security Techniques, and\n\n8\n00:00:21.284 --> 00:00:25.860\nright now we're gonna be verifying\nnetwork data encryption with Don Pezet.\n\n9\n00:00:25.860 --> 00:00:27.295\nBecause he knows how to do it.\n\n10\n00:00:27.295 --> 00:00:28.347\n&gt;&gt; [LAUGH]\n&gt;&gt; And he's gonna show us\n\n11\n00:00:28.347 --> 00:00:28.889\nhow to do it too.\n\n12\n00:00:28.889 --> 00:00:30.493\nDon, how you doing?\n\n13\n00:00:30.493 --> 00:00:31.700\n&gt;&gt; I am doing great, Zach.\n\n14\n00:00:31.700 --> 00:00:33.570\n&gt;&gt; [LAUGH]\n&gt;&gt; We're gonna dive in and\n\n15\n00:00:33.570 --> 00:00:37.517\nwe're gonna stick with our regunism\ntoday and do the trust but verify.\n\n16\n00:00:37.517 --> 00:00:38.386\n&gt;&gt; Trust but verify.\n\n17\n00:00:38.386 --> 00:00:41.632\n&gt;&gt; If you've been watching all of these\nshows, you'll know a few episodes back,\n\n18\n00:00:41.632 --> 00:00:43.869\nwe filmed an episode on\nbuilding SSH tunnels, right?\n\n19\n00:00:43.869 --> 00:00:46.829\nI think the show was actually called\nencrypting data with SSH something\n\n20\n00:00:46.829 --> 00:00:47.330\nlike that.\n\n21\n00:00:47.330 --> 00:00:50.885\nWhere I said,\nwe could take any protocol that we had,\n\n22\n00:00:50.885 --> 00:00:55.314\neven a nonsecure one like Telnet,\nand we can encrypt it using SSH.\n\n23\n00:00:55.314 --> 00:00:56.560\nIt's like encryption magic.\n\n24\n00:00:56.560 --> 00:00:59.243\nWe can encrypt any protocol with it and\nsend it across the network and\n\n25\n00:00:59.243 --> 00:01:00.573\nknow that it's safe and secure.\n\n26\n00:01:00.573 --> 00:01:03.940\nAnd so we saw how to set that up and\nget it configured and get it put in place.\n\n27\n00:01:03.940 --> 00:01:07.710\nAnd by the end of that episode,\nyou might have been asking yourself,\n\n28\n00:01:07.710 --> 00:01:09.260\nwell wait a minute Don.\n\n29\n00:01:09.260 --> 00:01:12.514\nHow do we actually know that,\nthat data was encrypted?\n\n30\n00:01:12.514 --> 00:01:16.340\nAnd not just good, maybe you'll help me,\nbut any technology out there.\n\n31\n00:01:16.340 --> 00:01:18.790\nWhen I go to a web page and\na little lock appears at the top and\n\n32\n00:01:18.790 --> 00:01:20.540\nit says I'm using SSL.\n\n33\n00:01:20.540 --> 00:01:24.011\nHow do I actually know\nthat data is encrypted?\n\n34\n00:01:24.011 --> 00:01:25.957\n&gt;&gt; These are the things\nthat keep me up at night.\n\n35\n00:01:25.957 --> 00:01:26.640\n&gt;&gt; And honestly they should.\n\n36\n00:01:26.640 --> 00:01:27.340\n&gt;&gt; [LAUGH] Yeah, I know.\n\n37\n00:01:27.340 --> 00:01:29.425\n[LAUGH]\n&gt;&gt; Because a lot of time you can make\n\n38\n00:01:29.425 --> 00:01:30.356\na website say anything, right?\n\n39\n00:01:30.356 --> 00:01:31.970\n[LAUGH]\n&gt;&gt; Yeah.\n\n40\n00:01:31.970 --> 00:01:33.262\n&gt;&gt; You don't know if it's actually secure.\n\n41\n00:01:33.262 --> 00:01:36.422\n&gt;&gt; So when you leverage any\nkind of encryption protocol or\n\n42\n00:01:36.422 --> 00:01:39.470\ntechnique, algorithm, tunnel whatever.\n\n43\n00:01:39.470 --> 00:01:40.970\nWhenever you implement that,\n\n44\n00:01:40.970 --> 00:01:45.760\nit's always a good idea to verify\nthe data is actually being encrypted.\n\n45\n00:01:45.760 --> 00:01:49.770\nAnd make sure it's being hidden the way\nthat you think it's being hidden.\n\n46\n00:01:49.770 --> 00:01:51.532\nFor most end users,\n\n47\n00:01:51.532 --> 00:01:57.552\nthey unfortunately operated a word\nof ignorance and bliss, right?\n\n48\n00:01:57.552 --> 00:02:00.199\nIf we don't know what we\ndon't hurt us that, I think.\n\n49\n00:02:00.199 --> 00:02:01.167\n&gt;&gt; That's it, that's it.\n\n50\n00:02:01.167 --> 00:02:04.385\n&gt;&gt; And we just have to trust that,\nthat encryption is being done.\n\n51\n00:02:04.385 --> 00:02:07.794\nBut as a Linux security professional,\nwe don't that benefit.\n\n52\n00:02:07.794 --> 00:02:08.835\n&gt;&gt; Nope.\n&gt;&gt; We can't just say well,\n\n53\n00:02:08.835 --> 00:02:10.222\nI think it works, I'm pretty sure.\n\n54\n00:02:10.222 --> 00:02:12.176\nThis document,\nthis manpage says that it works.\n\n55\n00:02:12.176 --> 00:02:12.680\n&gt;&gt; Yeah.\n\n56\n00:02:12.680 --> 00:02:13.485\n&gt;&gt; We can't do that.\n\n57\n00:02:13.485 --> 00:02:13.992\n&gt;&gt; Can't be too safe.\n&gt;&gt; So\n\n58\n00:02:13.992 --> 00:02:17.117\nit is essential that at some point or\nanother we go and\n\n59\n00:02:17.117 --> 00:02:19.754\nwe verify the data's actually encrypted.\n\n60\n00:02:19.754 --> 00:02:23.309\nSo there's a few different techniques for\ndoing them and I wanna walk you through\n\n61\n00:02:23.309 --> 00:02:26.879\nthem right here in this episode to show\nus, so that you don't have to be in doubt.\n\n62\n00:02:26.879 --> 00:02:29.480\nThat when somebody asks you,\nare you sure that data's being encrypted?\n\n63\n00:02:29.480 --> 00:02:30.949\nYou could say, yeah, I am sure.\n\n64\n00:02:30.949 --> 00:02:32.980\nI've seen it,\nI know that that data's encrypted.\n\n65\n00:02:32.980 --> 00:02:35.610\nSo that's what we're gonna take\na look at right here in this episode.\n\n66\n00:02:35.610 --> 00:02:40.270\n&gt;&gt; So Don, what tools can we use to\nsee if network data is encrypted.\n\n67\n00:02:40.270 --> 00:02:42.932\n&gt;&gt; All right, well we've got a few\ndifferent tools that are available for us.\n\n68\n00:02:42.932 --> 00:02:44.604\nBut the most convenient,\n\n69\n00:02:44.604 --> 00:02:49.330\nthe most useful one is gonna be\nwhat's called a protocol analyzer.\n\n70\n00:02:49.330 --> 00:02:51.544\nAnd a protocol analyzer\nis actually kinda of,\n\n71\n00:02:51.544 --> 00:02:54.229\nthere's really more than one\ntool that goes together.\n\n72\n00:02:54.229 --> 00:02:56.507\nThese terms used to be really important,\nright?\n\n73\n00:02:56.507 --> 00:02:58.769\nIf this were a dictionary episode,\nI'd be harping on this a lot.\n\n74\n00:02:58.769 --> 00:03:01.240\nBut technically,\nthere's two pieces that we need.\n\n75\n00:03:01.240 --> 00:03:05.370\nThere's a packet capture utility,\nand a protocol analyzer.\n\n76\n00:03:05.370 --> 00:03:07.569\nBut in today's world,\nmost of those get put together.\n\n77\n00:03:07.569 --> 00:03:10.769\nSo when you buy one of these things or\nget an open source version, or whatever,\n\n78\n00:03:10.769 --> 00:03:12.280\nit's got both pieces.\n\n79\n00:03:12.280 --> 00:03:16.430\nThe packet capture utility that says,\ncapture, well the packets,\n\n80\n00:03:16.430 --> 00:03:19.660\nthat we can see the network traffic and\nrecord it, right?\n\n81\n00:03:19.660 --> 00:03:22.280\nAnd I don't mean recording\nwhat's on your screen.\n\n82\n00:03:22.280 --> 00:03:25.030\nI mean recording what's\nactually on the network.\n\n83\n00:03:25.030 --> 00:03:27.070\nWhat's crossing the switches and\nrouters and so\n\n84\n00:03:27.070 --> 00:03:29.980\non, that's what needs to be encrypted,\nthat's the data that needs to be saved.\n\n85\n00:03:29.980 --> 00:03:32.794\nSo a packet capture utility\nwill let us see that.\n\n86\n00:03:32.794 --> 00:03:36.280\nIt'll let us see the traffic that's\non the network and record it.\n\n87\n00:03:36.280 --> 00:03:40.218\nWell once you've got the recording of the\ndata, it's actually pretty complex, right?\n\n88\n00:03:40.218 --> 00:03:44.310\nIt's a lot of information and\nwe need a way to interpret that.\n\n89\n00:03:44.310 --> 00:03:46.830\nAnd that's where protocol\nanalyzer comes in.\n\n90\n00:03:46.830 --> 00:03:50.559\nA protocol analyzer can look at\nthe data that we just captured and\n\n91\n00:03:50.559 --> 00:03:52.367\nturn it into a human readable.\n\n92\n00:03:52.367 --> 00:03:56.332\nOr it's not really human readable,\nit's more like a IT human readable.\n\n93\n00:03:56.332 --> 00:03:58.159\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] We can look at it and\n\n94\n00:03:58.159 --> 00:04:01.268\nunderstand it and\nrecognize what that traffic is,\n\n95\n00:04:01.268 --> 00:04:04.740\nand determine whether or\nnot the payload is safe.\n\n96\n00:04:04.740 --> 00:04:07.380\nThat's what a protocol\nanalyzer allows us to do.\n\n97\n00:04:07.380 --> 00:04:10.386\nSo these are kind of the two\ncomponents that we want to use and\n\n98\n00:04:10.386 --> 00:04:12.685\nthe one that I'm gonna\nuse here in this show.\n\n99\n00:04:12.685 --> 00:04:14.235\nActually I'm gonna use a couple, but\n\n100\n00:04:14.235 --> 00:04:16.690\nthe one that I'm gonna start\nwith in the show is Wireshark.\n\n101\n00:04:16.690 --> 00:04:17.250\n&gt;&gt; Love it.\n\n102\n00:04:17.250 --> 00:04:21.215\n&gt;&gt; Wireshark is an open source utility\nthat [INAUDIBLE] everybody uses.\n\n103\n00:04:21.215 --> 00:04:23.825\nLike I remember in the olden days-\n&gt;&gt; [LAUGH]\n\n104\n00:04:23.825 --> 00:04:24.325\n&gt;&gt; Right, so- [LAUGH]\n\n105\n00:04:24.325 --> 00:04:25.548\n&gt;&gt; [LAUGH]\n\n106\n00:04:25.548 --> 00:04:26.854\n&gt;&gt; When I was getting my start in\n\n107\n00:04:26.854 --> 00:04:29.140\nnetworking, I was working\nas a field engineer and\n\n108\n00:04:29.140 --> 00:04:33.718\nI needed a protocol analyzer to do my job.\nAnd so the company that I worked for,\n\n109\n00:04:33.718 --> 00:04:37.960\nthey bought me a license for\nNetwork General Sniffer Pro, right?\n\n110\n00:04:37.960 --> 00:04:39.320\nNow Network General's been acquired,\n\n111\n00:04:39.320 --> 00:04:41.373\nI think since then.\nBut General Sniffer Pro is still a product\n\n112\n00:04:41.373 --> 00:04:42.296\nthat's out there.\nIt\n\n113\n00:04:42.296 --> 00:04:44.988\ncost $15,000.\nAnd\n\n114\n00:04:44.988 --> 00:04:45.740\nthat's a lot of-\n&gt;&gt; [LAUGH]\n\n115\n00:04:45.740 --> 00:04:46.279\n&gt;&gt; Money,\n\n116\n00:04:46.279 --> 00:04:48.784\nright?\nBut because I was a network engineer,\n\n117\n00:04:48.784 --> 00:04:52.410\nbecause I was out troubleshooting networks\nand analyzing traffic, I needed that.\n\n118\n00:04:52.410 --> 00:04:53.575\nAnd so it paid for\n\n119\n00:04:53.575 --> 00:04:57.903\nitself in a short matter of months,\nbut that's why I used it,\n\n120\n00:04:57.903 --> 00:05:01.443\nit's expensive.\nBut today, there's open source products\n\n121\n00:05:01.443 --> 00:05:04.554\nthat have matured so\nmuch that you'd almost be a fool to go and\n\n122\n00:05:04.554 --> 00:05:09.611\nbuy some of these commercial products.\nWater Shark does everything today that\n\n123\n00:05:09.611 --> 00:05:13.683\nSniffer Pro was doing for me years ago.\nIt does all of that and\n\n124\n00:05:13.683 --> 00:05:17.650\nit's completely free,\nit's a pack capture utility, and\n\n125\n00:05:17.650 --> 00:05:21.196\na protocol analyzer.\nAll rolled into one open source package\n\n126\n00:05:21.196 --> 00:05:25.196\nthat can run on Mac, Windows and Linux,\nso it's like the perfect solution.\n\n127\n00:05:25.196 --> 00:05:27.297\nIf I want to analyze network traffic,\n\n128\n00:05:27.297 --> 00:05:29.930\nWireshark is gonna be\nthe go to product from me.\n\n129\n00:05:29.930 --> 00:05:31.509\n&gt;&gt; And free is a good word.\n\n130\n00:05:31.509 --> 00:05:34.149\nSo where do we get Wireshark?\n\n131\n00:05:34.149 --> 00:05:36.009\nI mean how do we go buy, getting it?\n\n132\n00:05:36.009 --> 00:05:38.074\n&gt;&gt; All right, so there's a few ways to get\n\n133\n00:05:38.074 --> 00:05:41.799\nit, the product itself is actually free.\nI'm just gonna pull up the website\n\n134\n00:05:41.799 --> 00:05:45.091\nhere Wireshark.org You can go to\nthe website, you can download it for free.\n\n135\n00:05:45.091 --> 00:05:45.775\nIf you have a Mac or\n\n136\n00:05:45.775 --> 00:05:47.967\na Windows machine that you're\ngonna be running this on,\n\n137\n00:05:47.967 --> 00:05:50.960\nthat's a great way to go.\nBut this is a Linux show, and\n\n138\n00:05:50.960 --> 00:05:55.130\nwe want to install it for Linux, and you\ncan go and download it from their website.\n\n139\n00:05:55.130 --> 00:05:56.875\nThey've got the download links here and\n\n140\n00:05:56.875 --> 00:05:57.777\nyou can pull it.\nBut\n\n141\n00:05:57.777 --> 00:06:01.769\nnotice how when I look it got Windows\ninstaller Mac OS And they don't list Linux\n\n142\n00:06:01.769 --> 00:06:06.003\nright there, I guess if I maybe zoom in a\nlittle bit, you can kinda see that better,\n\n143\n00:06:06.003 --> 00:06:10.596\nbut they don't list Linux right there.\nThat doesn't mean that they hate Linux or\n\n144\n00:06:10.596 --> 00:06:14.674\nthat they don't have it, it just means\nthat most Linux distributions have\n\n145\n00:06:14.674 --> 00:06:19.240\nWireshark packaged in their repositories.\nSo we don't even need to go to Wireshark's\n\n146\n00:06:19.240 --> 00:06:22.025\nwebsite.\nThis tool is so prevalent that Ubuntu,\n\n147\n00:06:22.025 --> 00:06:26.894\nDebian, Red Hat, CentOS, Fedora, they\nall have it available in the repository.\n\n148\n00:06:26.894 --> 00:06:28.939\nIt's just up to us to get in their and\n\n149\n00:06:28.939 --> 00:06:32.256\ninstall it, so it is free.\nYou can go and download it from here, but\n\n150\n00:06:32.256 --> 00:06:34.413\nnormally, we're gonna\ndo something like this.\n\n151\n00:06:34.413 --> 00:06:36.769\nWe're gonna drop to a shell, and we'll use\n\n152\n00:06:36.769 --> 00:06:40.773\nour package installer to do a yum install.\nWell I'm in a Red Hat system, so\n\n153\n00:06:40.773 --> 00:06:44.064\nI'll use yum.\nYou might use DNF or app to get, whichever\n\n154\n00:06:44.064 --> 00:06:47.585\npackage manager it is you're using.\nAnd I need to sudu this, cuz I'm\n\n155\n00:06:47.585 --> 00:06:51.735\nnot logged in as administrator right now.\nSo I'll say sudu yum install and\n\n156\n00:06:51.735 --> 00:06:55.890\nthen the name of the software.\nNow the software is Wireshark.\n\n157\n00:06:55.890 --> 00:06:57.377\nAnd if I just do that,\n\n158\n00:06:57.377 --> 00:07:02.021\nthat's gonna install the command\nline utilities for Wireshark.\n\n159\n00:07:02.021 --> 00:07:05.691\nAnd I can use it from a command line base\nwhich really just gives me the packet\n\n160\n00:07:05.691 --> 00:07:06.924\ncapture side of things.\n\n161\n00:07:06.924 --> 00:07:09.984\nIt doesn't give necessarily the full\nset of features that I want.\n\n162\n00:07:09.984 --> 00:07:13.411\nSo I also need to install\nthe graphical user interface.\n\n163\n00:07:13.411 --> 00:07:14.790\nThe GUI, right?\n\n164\n00:07:14.790 --> 00:07:18.157\nAnd the GUI for this one, there's\nactually a few different packages for it.\n\n165\n00:07:18.157 --> 00:07:22.441\nI'm running the gnome UI, so\nI'm just gonna install whireshark-gnome.\n\n166\n00:07:22.441 --> 00:07:26.899\nIf you're running Ubuntu, you might\nbe running the unity interface and\n\n167\n00:07:26.899 --> 00:07:30.626\nif you're doing that you need\nto install wireshark-GTK for\n\n168\n00:07:30.626 --> 00:07:32.981\nthe gnome token version for that one.\n\n169\n00:07:32.981 --> 00:07:36.504\nThere's a few different other\nversions that are available and\n\n170\n00:07:36.504 --> 00:07:39.306\nit just depends on which\nkind of UI you're using.\n\n171\n00:07:39.306 --> 00:07:42.341\nGnome is the most popular interface,\nso this is like the one you want.\n\n172\n00:07:42.341 --> 00:07:45.170\nBut you can always do\na yum list wireshark-* and\n\n173\n00:07:45.170 --> 00:07:49.934\nsee all the packages that are available\nand figure out which one's right for you.\n\n174\n00:07:49.934 --> 00:07:55.820\nBut the Wireshark package, that's just\nthe CLI stuff, and the actual service.\n\n175\n00:07:55.820 --> 00:07:59.390\nAnd then the Wireshark-gnome,\nthat's the UI, so I'm gonna install those.\n\n176\n00:07:59.390 --> 00:08:02.693\nNow, I've already got them on my laptop,\nso it's not gonna install anything here.\n\n177\n00:08:02.693 --> 00:08:06.893\nBut, But it's gonna reach out get those\npackages pulling down as well as pulling\n\n178\n00:08:06.893 --> 00:08:09.880\ndown any other dependencies\nthat we might have, right.\n\n179\n00:08:09.880 --> 00:08:14.120\nLike you might need to resolve Pcap\nwhich is the packet capture library or\n\n180\n00:08:14.120 --> 00:08:18.300\na few other things that node depends\nupon us you'll see it reach out and\n\n181\n00:08:18.300 --> 00:08:20.850\ngrab those to be able to\nload them into the system.\n\n182\n00:08:20.850 --> 00:08:22.720\nAnd then once we've got it.\n\n183\n00:08:22.720 --> 00:08:25.440\nWe're ready to run the application right.\n\n184\n00:08:25.440 --> 00:08:28.940\nAnd the application itself\npretty straight forward.\n\n185\n00:08:28.940 --> 00:08:33.380\nI'm just gonna run it here,\nI'll do a sudo Wireshark and amperesand,\n\n186\n00:08:33.380 --> 00:08:38.116\nnow when wire shock is installed,\nit's installed in my UI i could just bring\n\n187\n00:08:38.116 --> 00:08:42.409\nup my non launcher here and\nfire there is the Wireshark icon, right.\n\n188\n00:08:42.409 --> 00:08:46.680\nBut I'm not doing that,\nI'm launching it from the command line.\n\n189\n00:08:46.680 --> 00:08:50.450\nAnd the reason I'm doing that is that\nI wanna run it with admin privileges.\n\n190\n00:08:50.450 --> 00:08:52.210\nI wanna pseudo this.\n\n191\n00:08:52.210 --> 00:08:55.460\nNow some distros will detect when\nWireshark runs and prompt you for\n\n192\n00:08:55.460 --> 00:08:57.000\nthose admin privileges, right?\n\n193\n00:08:57.000 --> 00:09:00.760\nSome don't though and that means\nyou're running Wireshark in user mode.\n\n194\n00:09:00.760 --> 00:09:01.920\nAnd in user mode,\n\n195\n00:09:01.920 --> 00:09:05.300\nyou typically can't put your network\nadaptor in what's called promiscuous mode.\n\n196\n00:09:05.300 --> 00:09:08.000\nPromiscuous mode is where your\nnetwork adaptor will see traffic from\n\n197\n00:09:08.000 --> 00:09:12.310\nany other host, not just traffic to and\nfrom your host.\n\n198\n00:09:12.310 --> 00:09:14.610\nAnd if we're capturing network traffic,\nthat's usually what we want.\n\n199\n00:09:14.610 --> 00:09:16.690\nWe wanna see all the network\nthat's out there.\n\n200\n00:09:16.690 --> 00:09:20.636\nSo running it as an administrator will\nensure that it's got the right privileges.\n\n201\n00:09:20.636 --> 00:09:23.700\nSo I'm doing a Sudo to make\nsure i wanted this Admin,\n\n202\n00:09:23.700 --> 00:09:25.760\nI'm running the Wireshark command and\n\n203\n00:09:25.760 --> 00:09:29.670\nthen doing an ampersand just say once\nyou're done watching give me control of my\n\n204\n00:09:29.670 --> 00:09:33.600\nprop back otherwise the terminal gets\nlocked up the whole time GUI is.\n\n205\n00:09:33.600 --> 00:09:37.220\nSo I'm gonna run out and then there\ndoes Wireshark is going to launch.\n\n206\n00:09:37.220 --> 00:09:41.930\nAnd now it's up, and I'm able to\nstart taking my packet capture,\n\n207\n00:09:41.930 --> 00:09:44.850\nstart collecting my data, and\nstart to analyze the network.\n\n208\n00:09:44.850 --> 00:09:47.260\nIt's super easy to get\nWireshark installed.\n\n209\n00:09:47.260 --> 00:09:49.140\nI didn't have to go and\ndownload packages to deal with it.\n\n210\n00:09:49.140 --> 00:09:50.650\nIt just right through my installer.\n\n211\n00:09:50.650 --> 00:09:51.580\nWe get it in.\n\n212\n00:09:51.580 --> 00:09:53.513\nAnd now we're able to go and capture that.\n\n213\n00:09:53.513 --> 00:09:55.167\n&gt;&gt; Love the name Wireshark.\n\n214\n00:09:55.167 --> 00:09:56.590\n&gt;&gt; [LAUGH]\n&gt;&gt; I mean here's an example of\n\n215\n00:09:56.590 --> 00:09:57.520\nhow we use it.\n\n216\n00:09:57.520 --> 00:09:58.940\n&gt;&gt; All right.\nSo using it.\n\n217\n00:09:58.940 --> 00:10:02.800\nOnce we fire it up, we need to tell it\nwhat network adaptor we wanna monitor.\n\n218\n00:10:02.800 --> 00:10:05.470\nAnd so I've got a couple of different\nnetwork adaptors that are available here,\n\n219\n00:10:05.470 --> 00:10:08.190\nthat I can monitor and check.\n\n220\n00:10:08.190 --> 00:10:12.580\nNow, I wanna monitor my connections to\nthat server that we were SSHing to.\n\n221\n00:10:12.580 --> 00:10:14.090\nSo I need to figure out\nhow to connect to it.\n\n222\n00:10:14.090 --> 00:10:16.470\nIf you've only got one network adaptor,\nthis is a real easy choice.\n\n223\n00:10:16.470 --> 00:10:18.280\nYou choose that one adaptor,\nand you're done.\n\n224\n00:10:18.280 --> 00:10:21.270\nUnfortunately I've gotten\nmany network adapters and so\n\n225\n00:10:21.270 --> 00:10:23.370\nI'm gonna figure out\nwhich one to monitor on.\n\n226\n00:10:23.370 --> 00:10:27.442\nSo I'm gonna go back to my terminal and\nI'm gonna run IP ADDR.\n\n227\n00:10:27.442 --> 00:10:30.574\nAnd I'm gonna look at my adaptors to\nfigure out which one is the connection\n\n228\n00:10:30.574 --> 00:10:33.260\nthat's actually linking me\nto that virtual machine.\n\n229\n00:10:33.260 --> 00:10:37.560\nAnd that virtual machine is 172.16.0.128\nthat's that server that I was\n\n230\n00:10:37.560 --> 00:10:42.050\nconnecting to, and so\nI can see that's on my VMnet8 interface.\n\n231\n00:10:42.050 --> 00:10:46.080\nFor you it might be ETH0 or\na wireless interface for that matter,\n\n232\n00:10:46.080 --> 00:10:49.030\nyou can monitor those too,\nyou would pick the appropriate interface.\n\n233\n00:10:49.030 --> 00:10:51.700\nSo I need to monitor VMnet8,\nso I'm gonna come in here and\n\n234\n00:10:51.700 --> 00:10:57.240\nfind that in my list,\nI'll find VMnet8 and I'll click start.\n\n235\n00:10:57.240 --> 00:11:01.120\nNow, the moment I click start It's\ngonna start recording traffic.\n\n236\n00:11:01.120 --> 00:11:04.230\nAll the traffic it sees on the interface,\nit's going to record.\n\n237\n00:11:04.230 --> 00:11:09.020\nIf there's no traffic on the interface,\nit's gonna sit here and display, nothing.\n\n238\n00:11:09.020 --> 00:11:11.790\nAnd mine is actually saying,\ni'm way down here at the bottom,\n\n239\n00:11:11.790 --> 00:11:15.730\nI can see where it is saying,\nlive capture in progress, no packets.\n\n240\n00:11:15.730 --> 00:11:17.710\nThis network is completely idle.\n\n241\n00:11:17.710 --> 00:11:21.230\nWhich means, either, one,\nmy servers are just being really quiet, or\n\n242\n00:11:21.230 --> 00:11:23.470\ntwo, I forgot to turn my server on.\n\n243\n00:11:23.470 --> 00:11:24.475\nBoth are a possibility.\n\n244\n00:11:24.475 --> 00:11:27.860\n&gt;&gt; [LAUGH]\n&gt;&gt; So I need to generate some traffic and\n\n245\n00:11:27.860 --> 00:11:29.122\nkind of see what's going on there.\n\n246\n00:11:29.122 --> 00:11:32.360\nI'm gonna go back to my terminal, and\n\n247\n00:11:32.360 --> 00:11:35.960\nI'm going to open up a SSH\nsession to that server.\n\n248\n00:11:35.960 --> 00:11:37.630\nSo I'll reach out.\n\n249\n00:11:37.630 --> 00:11:39.420\nTo the server, okay?\n\n250\n00:11:39.420 --> 00:11:42.160\nAnd now that I'm opening\nup an SSH session and\n\n251\n00:11:42.160 --> 00:11:46.540\nconnecting, in the background,\nI see some activity, right?\n\n252\n00:11:46.540 --> 00:11:51.010\nI see some packets appeared on my screen,\nright?\n\n253\n00:11:51.010 --> 00:11:52.660\nAnd not just some, quite a few, right?\n\n254\n00:11:52.660 --> 00:11:56.690\nIt starts numbering here, so\nI've got packet number 1.\n\n255\n00:11:56.690 --> 00:12:01.230\nAnd then when I open up that session\nit started sending more applause and\n\n256\n00:12:01.230 --> 00:12:04.710\nI can see it is recorded about 64 packet\ntargets I get down the bottom it shows\n\n257\n00:12:04.710 --> 00:12:05.960\nhere package 64.\n\n258\n00:12:05.960 --> 00:12:12.620\nSo just opening that SSH session created\n64 packets of data that went across.\n\n259\n00:12:12.620 --> 00:12:14.850\nAnd I'm starting to see\na lot more activity now.\n\n260\n00:12:14.850 --> 00:12:17.150\nSome of that activity is SSH activity.\n\n261\n00:12:17.150 --> 00:12:21.066\nI can see right here SSH V2\nencrypted request packet, right.\n\n262\n00:12:21.066 --> 00:12:25.224\nAnd then because it was the first time I\nconnected to that IP I can see the AARP\n\n263\n00:12:25.224 --> 00:12:28.920\nrequest that happened as I had to\nfind the IP and then looks like I did\n\n264\n00:12:28.920 --> 00:12:32.610\nan NTP request to try and\nsynchronize time for some reason [LAUGH].\n\n265\n00:12:32.610 --> 00:12:35.677\nAnd so this is all activity\nthat's going on, right.\n\n266\n00:12:35.677 --> 00:12:40.496\nBut what's important is I do see that SSH\nsession being built up right there and\n\n267\n00:12:40.496 --> 00:12:43.990\nassuming that it's all\nworking I'm logged in.\n\n268\n00:12:43.990 --> 00:12:47.860\nAnd now, every packet that I'm\nsending across to this server,\n\n269\n00:12:47.860 --> 00:12:49.760\nis generating data right here.\n\n270\n00:12:49.760 --> 00:12:51.280\nSo, every time I type and press enter,\n\n271\n00:12:51.280 --> 00:12:55.410\nyou can kinda see in the background here,\npackets are starting to move along.\n\n272\n00:12:55.410 --> 00:12:59.090\nAnd, if I run some kind\nof really big thing,\n\n273\n00:12:59.090 --> 00:13:03.380\nlike pulling up Dmesg or,\nlet me do journal or CTL.\n\n274\n00:13:03.380 --> 00:13:06.610\nAnd, I start pulling up large log files.\n\n275\n00:13:06.610 --> 00:13:10.020\nAll these data is being sent\nacross in packets as I see,\n\n276\n00:13:10.020 --> 00:13:12.960\nit's constantly scrolling\nacross in the background here.\n\n277\n00:13:12.960 --> 00:13:15.552\nNow, what's important is I\ncan look at these packets and\n\n278\n00:13:15.552 --> 00:13:17.910\nI can start to interpret them, right?\n\n279\n00:13:17.910 --> 00:13:22.080\nAny packet capture utility can capture\npackets like what I'm seeing here, but\n\n280\n00:13:22.080 --> 00:13:25.530\na protocol analyzer can go a step further.\n\n281\n00:13:25.530 --> 00:13:28.360\nIn this top window,\nI'm just seeing the list of packets.\n\n282\n00:13:28.360 --> 00:13:33.168\nIn the middle window right here,\nI'm seeing where it's interpreting\n\n283\n00:13:33.168 --> 00:13:38.146\nthose packets for me, so that I can\nsee it- let me stop my recording here.\n\n284\n00:13:38.146 --> 00:13:43.562\nAnd so if I look at this packet, I can see\nwhat's trying to become a human readable\n\n285\n00:13:43.562 --> 00:13:48.840\nformat for me here in the middle and I\ndon't know if I can make this font bigger.\n\n286\n00:13:48.840 --> 00:13:51.560\nLet me see if I can do that.\n\n287\n00:13:51.560 --> 00:13:55.010\nNot too much bigger.\n\n288\n00:13:55.010 --> 00:13:56.730\nThere we go, make it a little bit bigger.\n\n289\n00:13:56.730 --> 00:13:59.930\nSo what I'm seeing up top is the list\nof packets and then beneath it,\n\n290\n00:13:59.930 --> 00:14:01.730\nI see where it's trying to\nmake it human readable.\n\n291\n00:14:01.730 --> 00:14:03.930\nAnd it's breaking apart the layer one,\nlayer two,\n\n292\n00:14:03.930 --> 00:14:05.640\nlayer three kind of information.\n\n293\n00:14:05.640 --> 00:14:08.000\nAnd I'll see that this is a frame, right?\n\n294\n00:14:08.000 --> 00:14:09.060\nThat's layer two.\n\n295\n00:14:09.060 --> 00:14:11.170\nI can see this as ethernet\ndata that's being sent across.\n\n296\n00:14:11.170 --> 00:14:14.370\nIt's using internet protocol version four,\nthat's the layer three data,\n\n297\n00:14:14.370 --> 00:14:17.630\nand then we start getting to TCP,\nthat's the layer four data.\n\n298\n00:14:17.630 --> 00:14:20.850\nThis is SSH traffic, so\nit recognized what it was, and\n\n299\n00:14:20.850 --> 00:14:25.380\nthen past that, we start to see that I've\ngot a reassembly error, some kind of new\n\n300\n00:14:25.380 --> 00:14:28.750\nfragment overlapping with old, it doesn't\nknow if it's a re-transmission or not.\n\n301\n00:14:28.750 --> 00:14:33.090\nThe problem here is that\nthe payload is encrypted.\n\n302\n00:14:33.090 --> 00:14:35.453\nAnd because the payload is encrypted,\n\n303\n00:14:35.453 --> 00:14:38.890\nWireshark doesn't really\nknow what to do with it.\n\n304\n00:14:38.890 --> 00:14:39.440\nIt doesn't know.\n\n305\n00:14:39.440 --> 00:14:40.100\nIt can't tell.\n\n306\n00:14:40.100 --> 00:14:42.070\nDoes this overlap with the other data?\n\n307\n00:14:42.070 --> 00:14:43.110\nIs this a problem?\n\n308\n00:14:43.110 --> 00:14:43.622\nI can't tell.\n\n309\n00:14:43.622 --> 00:14:46.190\nI'm gonna turn it over to SSH and\nlet it figure it out.\n\n310\n00:14:46.190 --> 00:14:47.850\nIt will be able to decrypt that data.\n\n311\n00:14:47.850 --> 00:14:52.150\nAnd if I look down here, when I logged in\nto SSH I was running various commands,\n\n312\n00:14:52.150 --> 00:14:53.690\nI was pulling up log files.\n\n313\n00:14:53.690 --> 00:14:57.074\nWell, I can see the actual payload\nright over here that they've got it in\n\n314\n00:14:57.074 --> 00:15:00.697\nhexodus more on the left side, but\nthis is the actual payload of that packet.\n\n315\n00:15:00.697 --> 00:15:02.170\nAnd what do I see?\n\n316\n00:15:02.170 --> 00:15:03.650\nJust a jumbled mess.\n\n317\n00:15:03.650 --> 00:15:06.590\nAny dot is a non-printable character,\nso all the dots aren't the same.\n\n318\n00:15:06.590 --> 00:15:08.074\nThey could each represent\na different thing,\n\n319\n00:15:08.074 --> 00:15:09.908\nit's just not something that\ncan be rendered on screen.\n\n320\n00:15:09.908 --> 00:15:11.555\nBut the font doesn't have a character for\nit.\n\n321\n00:15:11.555 --> 00:15:12.140\n&gt;&gt; Right.\n\n322\n00:15:12.140 --> 00:15:16.300\n&gt;&gt; And as I look at everything else here,\ncan you tell that I ran dmesg, or\n\n323\n00:15:16.300 --> 00:15:18.240\nthat I ran journalctl?\n\n324\n00:15:18.240 --> 00:15:20.860\nCan you tell that I ran LS and\npull up a director listing?\n\n325\n00:15:20.860 --> 00:15:21.385\nNo.\n&gt;&gt; [LAUGH]\n\n326\n00:15:21.385 --> 00:15:23.110\n&gt;&gt; That's encrypted data.\n\n327\n00:15:23.110 --> 00:15:24.430\n&gt;&gt; It's definitely encrypted.\n\n328\n00:15:24.430 --> 00:15:26.620\n&gt;&gt; So if we know what to expect,\n\n329\n00:15:26.620 --> 00:15:30.800\nif we know what to look for it's easy\nto spot whether our data's encrypted.\n\n330\n00:15:30.800 --> 00:15:31.740\nBut sometimes we don't.\n\n331\n00:15:31.740 --> 00:15:36.510\nSo what I like to do is I like to\nsend traffic across unencrypted so\n\n332\n00:15:36.510 --> 00:15:38.430\nI get an idea of what it looks like.\n\n333\n00:15:38.430 --> 00:15:43.190\nAnd then I can send the traffic across\nencrypted and see the difference, right?\n\n334\n00:15:43.190 --> 00:15:47.110\n&gt;&gt; So Don, can you give us\nan example like from the SSH show?\n\n335\n00:15:47.110 --> 00:15:50.350\n&gt;&gt; Yeah, yeah so in the SSH show\nwe built up that tunnel, right?\n\n336\n00:15:50.350 --> 00:15:52.020\n&gt;&gt; Yes.\n&gt;&gt; I sent Telnet across the network\n\n337\n00:15:52.020 --> 00:15:55.440\nunencrypted and then we built up the\ntunnel and we sent it across encrypted.\n\n338\n00:15:55.440 --> 00:15:56.670\n&gt;&gt; Or so we think.\n\n339\n00:15:56.670 --> 00:15:58.855\n&gt;&gt; Right?\nSo let's go back and verify that.\n\n340\n00:15:58.855 --> 00:16:02.033\nWhat I will do is I am gonna\nstart an only capture, right.\n\n341\n00:16:02.033 --> 00:16:04.797\nAnd so we will continue with\nour saving here, there we go.\n\n342\n00:16:04.797 --> 00:16:06.318\nSo we are gonna start a new capture.\n\n343\n00:16:06.318 --> 00:16:08.943\nAnd I'm gonna go back to my shell.\n\n344\n00:16:08.943 --> 00:16:12.830\nAnd this time,\nI'm gonna telnet across to that server.\n\n345\n00:16:12.830 --> 00:16:13.709\nAnd I'm gonna log in.\n\n346\n00:16:13.709 --> 00:16:16.950\nSo I'll put in my username and\nmy password, right there.\n\n347\n00:16:16.950 --> 00:16:20.270\nI'm logged in and\nmaybe I pull up a directory listing.\n\n348\n00:16:20.270 --> 00:16:24.180\nMaybe I run D message,\nand I pull up my boot log.\n\n349\n00:16:24.180 --> 00:16:29.900\nMaybe I do a, let's see,\nI guess I'll need a sudo general CTL.\n\n350\n00:16:29.900 --> 00:16:32.140\nAnd I start pulling up my logs here.\n\n351\n00:16:32.140 --> 00:16:33.360\nSo I've gotta do sudo, so\n\n352\n00:16:33.360 --> 00:16:36.050\nI have to provide a password and\nshort take a look at that.\n\n353\n00:16:36.050 --> 00:16:41.022\nOr maybe I start looking at private keys,\nbut I'm doing telnetty things, right?\n\n354\n00:16:41.022 --> 00:16:42.940\nAnd then I'm gonna exit out, and end it.\n\n355\n00:16:42.940 --> 00:16:44.630\nNow the whole time that was running,\n\n356\n00:16:44.630 --> 00:16:47.490\nWireshark was in the background\ncapturing my traffic.\n\n357\n00:16:47.490 --> 00:16:51.130\nSo let me stop that capture,\nand so it's gonna stop.\n\n358\n00:16:51.130 --> 00:16:52.910\nAnd now I can see that data and\n\n359\n00:16:52.910 --> 00:16:56.140\nI can see right here where I've got\ntelnet data starting to show up, right?\n\n360\n00:16:56.140 --> 00:17:00.570\nBecause it captured telnet information,\nand it's made a recording of it.\n\n361\n00:17:00.570 --> 00:17:03.260\nSo the whole time I had that session\nup it was capturing that traffic.\n\n362\n00:17:03.260 --> 00:17:06.133\nAnd not just recording it,\nbut interpreting it.\n\n363\n00:17:06.133 --> 00:17:09.080\nRight, it's a protocol analyzer\nthat understands what happens.\n\n364\n00:17:09.080 --> 00:17:13.220\nSo it gets the beginning of that telnet\nsession, all the way through the end\n\n365\n00:17:13.220 --> 00:17:15.180\nof that telnet session,\ncuz I was recording the whole time.\n\n366\n00:17:15.180 --> 00:17:16.710\nRight, it collected that data.\n\n367\n00:17:16.710 --> 00:17:20.070\nAnd because it's a protocol analyzer,\nit can take that data and\n\n368\n00:17:20.070 --> 00:17:23.510\nit can reassemble it they can\nrebuild that communication.\n\n369\n00:17:23.510 --> 00:17:26.690\nWhen I look like, right here as\nthe first time the message I see, right,\n\n370\n00:17:26.690 --> 00:17:33.320\nI have got a connection from my IP\naddress from 172.16.0.1 that's my laptop,\n\n371\n00:17:33.320 --> 00:17:37.290\ngoing to 172.16.0.128 that's the server,\nit was using TCP,\n\n372\n00:17:37.290 --> 00:17:41.880\nthe initial packet was 74 bits\nin length or bytes in length.\n\n373\n00:17:41.880 --> 00:17:47.740\nAnd that I was coming from port 60830.\n\n374\n00:17:47.740 --> 00:17:48.973\nI don't know why that was so hard to say.\n\n375\n00:17:48.973 --> 00:17:51.960\n60830 and I was going to the telnet port.\n\n376\n00:17:51.960 --> 00:17:53.620\nI was going to port 23.\n\n377\n00:17:53.620 --> 00:17:55.330\nAnd this was a send message.\n\n378\n00:17:55.330 --> 00:17:57.013\nI'm synchronizing my session.\n\n379\n00:17:57.013 --> 00:17:59.210\nThis is me starting a TCP handshake.\n\n380\n00:17:59.210 --> 00:18:00.500\nAnd so my sequence number is 0.\n\n381\n00:18:00.500 --> 00:18:02.850\nThis is the very beginning\nof my communication.\n\n382\n00:18:02.850 --> 00:18:07.157\nAnd so, I'm requesting an acknowledgment\nback from the other side and I'm getting,\n\n383\n00:18:07.157 --> 00:18:08.339\nright here, a syn ack.\n\n384\n00:18:08.339 --> 00:18:11.486\nI get the acknowledgement from the other\nside and then I acknowledge that I got\n\n385\n00:18:11.486 --> 00:18:14.430\ntheir acknowledgement and so\non and the handshake is done.\n\n386\n00:18:14.430 --> 00:18:16.850\nAnd after that, we get telnet data.\n\n387\n00:18:16.850 --> 00:18:18.410\nThe actual session starts.\n\n388\n00:18:18.410 --> 00:18:22.657\nAnd so now we're communicating with\ntelnet and every packet that I'm sending,\n\n389\n00:18:22.657 --> 00:18:25.342\nevery time that I type a letter or\na communication,\n\n390\n00:18:25.342 --> 00:18:27.340\nit's getting logged right here.\n\n391\n00:18:27.340 --> 00:18:29.770\nRight, as that data moves back and forth.\n\n392\n00:18:29.770 --> 00:18:33.634\nWhen the source is the server,\nthat's the server sending data back to me.\n\n393\n00:18:33.634 --> 00:18:36.970\nWhen the source is me, that's me\nsending keystrokes to the server.\n\n394\n00:18:36.970 --> 00:18:40.140\nEvery time I typed a letter I\nhad to send a keystroke and\n\n395\n00:18:40.140 --> 00:18:41.580\nthe server is acknowledging that.\n\n396\n00:18:41.580 --> 00:18:44.550\nSo the real payload here is gonna be when\nthe server responds back to me because\n\n397\n00:18:44.550 --> 00:18:46.550\nit's showing me information.\n\n398\n00:18:46.550 --> 00:18:49.560\nAnd if I look down at the interpretation,\n\n399\n00:18:49.560 --> 00:18:54.660\nsee how I can actually read what\nit's saying, Kernel, 3.10.0-693.\n\n400\n00:18:54.660 --> 00:18:57.360\nOkay well,\nif somebody wants to attack my system,\n\n401\n00:18:57.360 --> 00:19:02.460\nthey now know exactly which version of the\nkernel I'm running and then, it says .EL7.\n\n402\n00:19:02.460 --> 00:19:06.889\nNow they know I'm running red head\nenterprise Linux version 7 and X8664.\n\n403\n00:19:06.889 --> 00:19:09.930\nNow they know that I'm running\na 64-bit system, right.\n\n404\n00:19:09.930 --> 00:19:13.180\nSo an attacker from this one packet alone\n\n405\n00:19:13.180 --> 00:19:16.030\nhas learned enough to start\nformulating an attack, all right.\n\n406\n00:19:16.030 --> 00:19:17.580\nLet me go look at that kernel history and\nsee,\n\n407\n00:19:17.580 --> 00:19:19.200\nare there any exploits of that kernel?\n\n408\n00:19:19.200 --> 00:19:20.260\nIs this kernel not patched?\n\n409\n00:19:20.260 --> 00:19:22.690\nIs there a version 694 out?\n\n410\n00:19:22.690 --> 00:19:26.790\nWhat bugs were fixed in 694,\ncuz those bugs are still present in 693.\n\n411\n00:19:26.790 --> 00:19:29.850\nThey don't got the information\nto start the attack.\n\n412\n00:19:29.850 --> 00:19:31.810\nBut it get's worse this data,\n\n413\n00:19:31.810 --> 00:19:34.460\ncame as a result of me running\nsome kind of command right?\n\n414\n00:19:34.460 --> 00:19:39.640\nSo as we continue to look, there's gonna\nbe more payload shared between the systems\n\n415\n00:19:39.640 --> 00:19:42.070\nas I continue to kind of move down and\n\n416\n00:19:42.070 --> 00:19:44.960\nsome of it might be empty packets like\nthis which aren't truly empty they\n\n417\n00:19:44.960 --> 00:19:48.880\nwere just displaying something special\nlike spaces on the screen or something.\n\n418\n00:19:48.880 --> 00:19:50.840\nBut as I keep going down I'll\nfind payload eventually.\n\n419\n00:19:50.840 --> 00:19:54.850\nNow if I was having to find this\npayload by hand it could take a while.\n\n420\n00:19:54.850 --> 00:19:59.050\nRight, I'm having to hunt down and find\nthis information and it takes a while.\n\n421\n00:19:59.050 --> 00:20:01.970\nBut when you're using a protocol analyzer,\nit can do it for\n\n422\n00:20:01.970 --> 00:20:05.540\nyou, you can choose one of these streams.\n\n423\n00:20:05.540 --> 00:20:09.430\nAnd you can go up to your analyze menu,\nand under analyze,\n\n424\n00:20:09.430 --> 00:20:14.470\nthere's an option in here that\nsays follow TCP stream, and\n\n425\n00:20:14.470 --> 00:20:20.050\nif you choose follow TCP stream, it\nwill take that stream and reassemble it.\n\n426\n00:20:20.050 --> 00:20:21.920\nOkay, notice the two different colors.\n\n427\n00:20:21.920 --> 00:20:23.550\nThere's stuff in red and\nthe stuff in blue.\n\n428\n00:20:23.550 --> 00:20:26.600\nThe red stuff is stuff that\nI sent to the server and\n\n429\n00:20:26.600 --> 00:20:29.300\nthe blue stuff is stuff\nthe server sent back to me.\n\n430\n00:20:29.300 --> 00:20:31.550\nAnd if we look,\nlook at what's going on here.\n\n431\n00:20:31.550 --> 00:20:35.450\nRight at the very top, we connected,\nthere's that kernel message.\n\n432\n00:20:35.450 --> 00:20:38.440\nAnd then it gave me a login,\nthere's the host name of the server.\n\n433\n00:20:38.440 --> 00:20:42.680\nAnd the login name, now the letters are\nall there twice because when you log in,\n\n434\n00:20:42.680 --> 00:20:45.490\nyou type a letter, and\nthen the letter's displayed on the screen.\n\n435\n00:20:45.490 --> 00:20:49.570\nI send the letter D, and then it\ndisplayed the letter D on the screen.\n\n436\n00:20:49.570 --> 00:20:51.960\nWhen I did my password,\nI would send a letter, but\n\n437\n00:20:51.960 --> 00:20:53.230\nit wouldn't display it on the screen.\n\n438\n00:20:53.230 --> 00:20:54.800\nSo that's why the passwords only read.\n\n439\n00:20:54.800 --> 00:20:57.910\nBut that's my password that's it,\nit's right there.\n\n440\n00:20:57.910 --> 00:21:01.610\nThis was in plain text somebody\nre assembling this can tell,\n\n441\n00:21:01.610 --> 00:21:03.480\nI ran the LS command.\n\n442\n00:21:03.480 --> 00:21:07.500\nAnd then I followed that up by running\nD message and there's the output of LS,\n\n443\n00:21:07.500 --> 00:21:10.800\nits colorized so your color codes and\nyou can tell what's going on.\n\n444\n00:21:10.800 --> 00:21:12.905\nAnd then here's the D message output and\nso\n\n445\n00:21:12.905 --> 00:21:16.320\nhere's the fold D message\noutput from that server.\n\n446\n00:21:16.320 --> 00:21:18.450\nAnd then eventually,\nI ran journalctl and so\n\n447\n00:21:18.450 --> 00:21:21.620\nthe full output of\njournalctl will be in here.\n\n448\n00:21:21.620 --> 00:21:25.720\nAnd if I had viewed a public key or\nwhen I sudod that command,\n\n449\n00:21:25.720 --> 00:21:27.443\nthat'll be in here too.\n\n450\n00:21:27.443 --> 00:21:30.160\nAnd the password that I used for\nsudo will be in here.\n\n451\n00:21:30.160 --> 00:21:31.450\nSo all of that captured,\n\n452\n00:21:31.450 --> 00:21:35.980\nthis is unencrypted traffic and\nit was trivial to view it, right?\n\n453\n00:21:35.980 --> 00:21:37.820\nIt was super easy to find that.\n\n454\n00:21:37.820 --> 00:21:41.820\nAll I had to do was look for a non-secure\nprotocol and capture it, right?\n\n455\n00:21:41.820 --> 00:21:43.380\nWell, let's repeat this.\n\n456\n00:21:43.380 --> 00:21:47.020\nI'm gonna go ahead and start a new, let\nme make sure I ended that telnet session.\n\n457\n00:21:47.020 --> 00:21:49.260\nYep, all right, so\nI'm out of the telnet session.\n\n458\n00:21:49.260 --> 00:21:50.520\nAnd I'm gonna try this again.\n\n459\n00:21:50.520 --> 00:21:54.340\nI'm gonna start a new session,\nso it's gonna start recording.\n\n460\n00:21:54.340 --> 00:21:58.540\nAnd then in the background, I'm going to,\nSS, or wait, let's do it this way.\n\n461\n00:21:58.540 --> 00:21:59.780\nI'm not gonna SSH.\n\n462\n00:21:59.780 --> 00:22:01.480\nI'm gonna build my tunnel.\n\n463\n00:22:01.480 --> 00:22:02.614\nRight, because in the SSH show,\n\n464\n00:22:02.614 --> 00:22:04.324\nI was talking about how to build a tunnel,\nright?\n\n465\n00:22:04.324 --> 00:22:05.731\n&gt;&gt; Right.\n&gt;&gt; So, I wanna go in and\n\n466\n00:22:05.731 --> 00:22:09.270\nbuild that tunnel again, and\nwe'll use the SSH command to do that.\n\n467\n00:22:09.270 --> 00:22:11.180\nI'm trying to find the exact\ncommand I ran from the show.\n\n468\n00:22:11.180 --> 00:22:11.840\nHere it is.\n\n469\n00:22:11.840 --> 00:22:16.130\nSo I ran SSH-F to send\nit to the background.\n\n470\n00:22:16.130 --> 00:22:21.380\nI used my username, and I pointed to\nthe server that I was connecting to.\n\n471\n00:22:21.380 --> 00:22:25.441\nAnd then, I told that I wanted\nto map a local port, and\n\n472\n00:22:25.441 --> 00:22:28.692\nI mapped 65023 to the remote server,\n\n473\n00:22:28.692 --> 00:22:33.680\n172.16.0.128, to its port\n23 on the other side.\n\n474\n00:22:33.680 --> 00:22:36.290\nAnd then I told it not to run\nany commands once it connected.\n\n475\n00:22:36.290 --> 00:22:38.690\nSo that's how I built a tunnel.\n\n476\n00:22:38.690 --> 00:22:42.150\nAnd, so\nI'm building my tunnel to the server.\n\n477\n00:22:42.150 --> 00:22:47.690\nAnd then, I telneted to\nthe server by telneting to myself\n\n478\n00:22:47.690 --> 00:22:50.610\non that local port that I mapped,\nthat 65023 so\n\n479\n00:22:50.610 --> 00:22:54.520\nthat's the exact example that I\nused in this show the other day.\n\n480\n00:22:54.520 --> 00:22:57.320\nAnd so when I get connected I can log in.\n\n481\n00:22:57.320 --> 00:22:59.490\nI can punch in my password.\n\n482\n00:22:59.490 --> 00:23:01.770\nI can pull up a directory listing.\n\n483\n00:23:01.770 --> 00:23:04.010\nI run D message.\n\n484\n00:23:04.010 --> 00:23:06.816\nAnd then I sudod journalctl.\n\n485\n00:23:06.816 --> 00:23:11.350\nI'm doing all of the things that I did\nwith telnet just a few moments ago and\n\n486\n00:23:11.350 --> 00:23:15.520\nrunning through okay, now,\nin the background it was capturing that.\n\n487\n00:23:15.520 --> 00:23:18.290\nSo I'm gonna come back here and\nI'll stop that capture.\n\n488\n00:23:18.290 --> 00:23:24.120\nAnd then, we can take a look at\nthe data and see what we find.\n\n489\n00:23:24.120 --> 00:23:26.833\nNow, last time all I had to do\nwas look and I found telenet and\n\n490\n00:23:26.833 --> 00:23:31.220\nI selected the telnet packet and then I\nchose to follow the TCP string, right, and\n\n491\n00:23:31.220 --> 00:23:33.890\nit reassembled it and\nit put it all back together for me.\n\n492\n00:23:33.890 --> 00:23:39.220\nWas I look at it now, I start to see TCP,\nSSH version two, right?\n\n493\n00:23:39.220 --> 00:23:42.620\nSo if I start scrolling down,\nI'm looking for telnet.\n\n494\n00:23:44.080 --> 00:23:52.180\nAnd I'm not finding it, lots of TCP, lots\nof SSH version two, I'm not seeing telnet.\n\n495\n00:23:52.180 --> 00:23:54.761\nAll right and we can apply filters and\n\n496\n00:23:54.761 --> 00:23:59.430\nthings if I really wanted to like here,\nlet me zoom in on this a bit.\n\n497\n00:23:59.430 --> 00:24:03.773\nSo you can do these filters\nto help you find stuff, so\n\n498\n00:24:03.773 --> 00:24:08.233\nI can come in put a filter\nin this at tcp.port EQ 23.\n\n499\n00:24:08.233 --> 00:24:11.279\nShow me anything on port 23.\n\n500\n00:24:11.279 --> 00:24:12.680\nI get nothing.\n\n501\n00:24:12.680 --> 00:24:14.520\nNothing comes back, right?\n\n502\n00:24:14.520 --> 00:24:17.600\nIf I look for where the port equals 65023.\n\n503\n00:24:17.600 --> 00:24:20.548\nNothing, nothing comes back, right?\n\n504\n00:24:20.548 --> 00:24:23.570\nThe reason is all of that is encrypted.\n\n505\n00:24:23.570 --> 00:24:25.330\nIt's encrypted on the network and\nwe can't see it.\n\n506\n00:24:25.330 --> 00:24:28.720\nIt's all stuck inside of that SSH tunnel.\n\n507\n00:24:28.720 --> 00:24:34.030\nThe SSH tunnel is hiding everything,\nso all I see is that SSH traffic.\n\n508\n00:24:34.030 --> 00:24:39.040\nAnd if I pick an SSH packet and I try\nthat trick, I go up here to analyze and\n\n509\n00:24:39.040 --> 00:24:42.100\nI go to follow TCP stream,\nits going to reassemble it for me.\n\n510\n00:24:42.100 --> 00:24:44.910\nAnd there's my data in plain text.\n\n511\n00:24:44.910 --> 00:24:46.180\nWell, no.\n\n512\n00:24:46.180 --> 00:24:48.100\nI'm seeing the SSH handshake.\n\n513\n00:24:48.100 --> 00:24:51.060\nMy system sent a message\nto the server saying\n\n514\n00:24:51.060 --> 00:24:54.350\nhere's all the encryption\nsuites that I support.\n\n515\n00:24:54.350 --> 00:24:54.870\nHow about you?\n\n516\n00:24:54.870 --> 00:24:56.370\nWhat ones do you support?\n\n517\n00:24:56.370 --> 00:24:58.760\nAnd then it responded with here's\nall the ones that I support.\n\n518\n00:24:58.760 --> 00:25:00.090\nAnd then they agreed.\n\n519\n00:25:00.090 --> 00:25:05.870\nThey chose, I can see right down here,\nwhere it looks like we chose ECDSA, right?\n\n520\n00:25:05.870 --> 00:25:07.160\nWhich is good, that's the strong one.\n\n521\n00:25:07.160 --> 00:25:09.360\nThat's what I've got set up on my server.\n\n522\n00:25:09.360 --> 00:25:13.804\nAnd then after that handshake, after they\nagreed on the encryption protocol to use,\n\n523\n00:25:13.804 --> 00:25:15.172\nlook at everything else.\n\n524\n00:25:15.172 --> 00:25:16.589\nIt's just a mess.\n\n525\n00:25:16.589 --> 00:25:20.640\nIt's just a jumbled mess that\nmeans nothing to me, right?\n\n526\n00:25:20.640 --> 00:25:23.060\nThis is all ciphertext.\n\n527\n00:25:23.060 --> 00:25:25.640\nI might have pressed one\nkey on the keyboard, but\n\n528\n00:25:25.640 --> 00:25:29.510\nit sent this whole block\nof ciphertext right here.\n\n529\n00:25:29.510 --> 00:25:31.550\nThere's no way to figure\nout what key I pressed.\n\n530\n00:25:31.550 --> 00:25:35.160\nAnd all the data that came back,\nhere's this big wall of blue.\n\n531\n00:25:35.160 --> 00:25:39.540\nThis is, because I know what I did, this\nis probably the D message output, right?\n\n532\n00:25:39.540 --> 00:25:41.690\nBut if I was an attacker,\nI have no idea what command was run.\n\n533\n00:25:41.690 --> 00:25:42.370\nSo I don't know what this is.\n\n534\n00:25:42.370 --> 00:25:46.630\nI know that I got a wall of data, but it\ncould have been a picture for all I know.\n\n535\n00:25:46.630 --> 00:25:48.190\nBetter yet, the D message applet.\n\n536\n00:25:48.190 --> 00:25:52.100\nAnd then somewhere down further towards\nthe bottom will be where I did the SUDO\n\n537\n00:25:52.100 --> 00:25:55.640\ncommand to then run journalCTL,\nprobably right here, okay?\n\n538\n00:25:55.640 --> 00:25:59.030\nSee all this red, so that's probably\nme SUDOing to run journalCTL.\n\n539\n00:25:59.030 --> 00:26:03.370\nAnd then it ran, and\nI was presented with another wall of text.\n\n540\n00:26:03.370 --> 00:26:06.550\nNow, that wall of text was paginated, so\nI had to press Enter every now and then.\n\n541\n00:26:06.550 --> 00:26:08.300\nSee these little red blips here?\n\n542\n00:26:08.300 --> 00:26:10.840\nThat's likely me pressing Enter\nto move to the next page.\n\n543\n00:26:10.840 --> 00:26:12.210\nOr I think I hit the spacebar.\n\n544\n00:26:12.210 --> 00:26:14.600\nAgain, I can't tell cuz\nit's all encrypted.\n\n545\n00:26:14.600 --> 00:26:19.480\nAnd the whole point of this exercise is\nthat I can look at this and now I know,\n\n546\n00:26:19.480 --> 00:26:23.120\nI know for a fact,\nthat data was encrypted.\n\n547\n00:26:23.120 --> 00:26:25.720\nYou could build a tunnel up and\nthen do something stupid.\n\n548\n00:26:25.720 --> 00:26:28.460\nI actually watched\na YouTube video forever ago\n\n549\n00:26:28.460 --> 00:26:30.680\nwhere a guy was showing how\nto build these tunnels.\n\n550\n00:26:30.680 --> 00:26:33.925\nAnd he built up a tunnel,\nhe got it set up, right?\n\n551\n00:26:33.925 --> 00:26:35.968\nSo he built the tunnel kinda\nthe same way that I just did.\n\n552\n00:26:35.968 --> 00:26:39.429\nHe got it set up and he said all right,\nso now, we've got that tunnel up, and\n\n553\n00:26:39.429 --> 00:26:42.156\nnow we can telmet into that server and\nit'll be encrypted.\n\n554\n00:26:42.156 --> 00:26:43.549\nAnd what did he do?\n\n555\n00:26:43.549 --> 00:26:48.610\nHe telmeted into the IP of\nthat other server, like that.\n\n556\n00:26:48.610 --> 00:26:50.660\nWell, it doesn't matter\nif you have a tunnel up.\n\n557\n00:26:50.660 --> 00:26:53.280\nIf you don't tell it to use the tunnel,\nit goes right around it.\n\n558\n00:26:53.280 --> 00:26:54.870\nAnd that's exactly what he did.\n\n559\n00:26:54.870 --> 00:26:57.720\nAnd because he never showed\nit actually being encrypted,\n\n560\n00:26:57.720 --> 00:27:00.360\nhe never noticed that his\ndata was still not encrypted.\n\n561\n00:27:00.360 --> 00:27:03.230\nIt's an easy mistake to make\nif you don't pay attention.\n\n562\n00:27:03.230 --> 00:27:08.200\nAnd if we use a utility like Wireshark\nwe can see, we can tell, yes,\n\n563\n00:27:08.200 --> 00:27:09.490\nthat data was encrypted, and\n\n564\n00:27:09.490 --> 00:27:13.290\nnow I know if an attacker gets it, they're\nnot gonna be able to interpret that data.\n\n565\n00:27:13.290 --> 00:27:15.620\n&gt;&gt; Well, Don, we're running out of time,\nbut I have another question for you.\n\n566\n00:27:15.620 --> 00:27:18.610\nWhat if we wanna monitor\nactual sessions on the server?\n\n567\n00:27:18.610 --> 00:27:21.450\n&gt;&gt; All right, so here, I'm really\nmonitoring sessions on my laptop, right?\n\n568\n00:27:21.450 --> 00:27:23.290\n&gt;&gt; Right.\n&gt;&gt; So my laptop reaching out to a server.\n\n569\n00:27:23.290 --> 00:27:25.260\nSo I'm testing my encryption.\n\n570\n00:27:25.260 --> 00:27:28.500\nBut if I wanted to see somebody's\nactual session, right?\n\n571\n00:27:28.500 --> 00:27:31.300\nMaybe have a website and I've got\nInternet users that are connecting, and\n\n572\n00:27:31.300 --> 00:27:35.760\nI wanna verify that one of them is\nactually collecting that data, right?\n\n573\n00:27:35.760 --> 00:27:38.830\nWhat I really need, or not collecting,\nbut encrypting that data.\n\n574\n00:27:38.830 --> 00:27:42.190\nI could take my laptop,\nI could go into the data center, and\n\n575\n00:27:42.190 --> 00:27:44.910\nif I have switches from Cisco,\nor Junyper, HP,\n\n576\n00:27:44.910 --> 00:27:48.110\na lot of those switches support\nwhat's called port mirroring.\n\n577\n00:27:48.110 --> 00:27:50.940\nAnd I could mirror the traffic\nfrom one of those ports,\n\n578\n00:27:50.940 --> 00:27:54.340\nthe server port, over to my laptop, right?\n\n579\n00:27:54.340 --> 00:27:57.680\nOr I could, Cisco calls it span,\nthe switch port analyzer.\n\n580\n00:27:57.680 --> 00:27:59.220\nEverybody else calls it port mirroring.\n\n581\n00:27:59.220 --> 00:28:00.200\nThat's the easiest way to do it.\n\n582\n00:28:00.200 --> 00:28:04.040\nIf you're in the data center, you can take\nyour own device that's set up as a capture\n\n583\n00:28:04.040 --> 00:28:08.070\ndevice like mine is, and then plug into\nthe network, do port mirroring on that\n\n584\n00:28:08.070 --> 00:28:10.870\nport, and now you're collecting\nall the data from that server.\n\n585\n00:28:10.870 --> 00:28:13.950\nAnd you can analyze it in your GUI\ntools just like I'm doing right here.\n\n586\n00:28:13.950 --> 00:28:16.380\nAnd that makes life a lot easier.\n\n587\n00:28:16.380 --> 00:28:18.650\n&gt;&gt; So\nmaybe this will be a teaser question,\n\n588\n00:28:18.650 --> 00:28:21.840\nbut couldn't we just run\nWireshark out of the server?\n\n589\n00:28:21.840 --> 00:28:23.510\nWell, so you could, right?\n\n590\n00:28:23.510 --> 00:28:25.650\nSo everything that I just\ndid I did here on my laptop,\n\n591\n00:28:25.650 --> 00:28:28.160\nand I did it using Wireshark\nwhich is really nice.\n\n592\n00:28:28.160 --> 00:28:31.290\nI could just install Wireshark on\nthe server and capture the same data.\n\n593\n00:28:31.290 --> 00:28:35.400\nThe problem is Wireshark is\nreally built around a GUI, right?\n\n594\n00:28:35.400 --> 00:28:37.040\nAnd most of our servers don't have a GUI.\n\n595\n00:28:37.040 --> 00:28:40.770\nSo you can install the Wireshark command\nline tools, collect the data and\n\n596\n00:28:40.770 --> 00:28:43.150\nthen copy the data to your\nworkstation to interpret it.\n\n597\n00:28:43.150 --> 00:28:45.440\nBut it's really not a good idea\nto run Wireshark on a server,\n\n598\n00:28:45.440 --> 00:28:46.350\nit's got too many dependencies.\n\n599\n00:28:46.350 --> 00:28:48.950\nIt's got a lot of stuff that would\nincrease your security footprint.\n\n600\n00:28:48.950 --> 00:28:51.640\nSo ideally, we don't wanna do that, right?\n\n601\n00:28:51.640 --> 00:28:55.030\nThere is another tool we can use though,\ncalled TCPDUMP.\n\n602\n00:28:55.030 --> 00:28:58.260\nAnd I wanna show you guys TCPDUMP,\ncuz it's a really powerful tool, and\n\n603\n00:28:58.260 --> 00:29:01.160\nit's likely already on your server.\n\n604\n00:29:01.160 --> 00:29:04.060\nSo that's what I would normally use\nif I wanted to see real sessions.\n\n605\n00:29:04.060 --> 00:29:06.780\nBut like you said, Zach,\nI'm kinda out of time on this episode.\n\n606\n00:29:06.780 --> 00:29:08.250\nSo let's do a part two.\n\n607\n00:29:08.250 --> 00:29:10.610\nAnd in part two,\nwe'll talk about the TCPDUMP utility, and\n\n608\n00:29:10.610 --> 00:29:12.940\nhow we can collect data\nright on our servers.\n\n609\n00:29:12.940 --> 00:29:16.140\nAnd then we don't have to worry\nabout port mirroring, or SPAN, or\n\n610\n00:29:16.140 --> 00:29:16.870\nany of the crazy stuff.\n\n611\n00:29:16.870 --> 00:29:18.830\nWe don't have to be in the data\ncenter with the server.\n\n612\n00:29:18.830 --> 00:29:20.520\nWe can just use tcpdump to grab the data,\n\n613\n00:29:20.520 --> 00:29:24.500\nand then copy it down to our own machine\nwhere we can analyze it at our leisure.\n\n614\n00:29:24.500 --> 00:29:26.510\nIt's a great utility,\ndefinitely one you want to see.\n\n615\n00:29:26.510 --> 00:29:27.458\n&gt;&gt; That's a great tease.\n\n616\n00:29:27.458 --> 00:29:31.460\nYou're gonna wanna catch Verifying\nNetwork Data Encryption, Part Two.\n\n617\n00:29:31.460 --> 00:29:32.490\nThis has been Part One.\n\n618\n00:29:32.490 --> 00:29:35.580\nAnything you want to leave\npeople with before we go?\n\n619\n00:29:35.580 --> 00:29:37.980\n&gt;&gt; The main lesson here is trust but\nverify, right?\n\n620\n00:29:37.980 --> 00:29:39.460\nTrust that your encryption works,\n\n621\n00:29:39.460 --> 00:29:41.540\nbut you need to verify that\nit's actually being used.\n\n622\n00:29:41.540 --> 00:29:45.040\nCuz simple mistakes on your part could\nlead to the encryption being there and\n\n623\n00:29:45.040 --> 00:29:46.750\nyou're just not using it, right?\n\n624\n00:29:46.750 --> 00:29:49.040\nWe definitely want to verify that and\nmake sure we got it in place.\n\n625\n00:29:49.040 --> 00:29:50.310\nAlways double-check your work.\n\n626\n00:29:50.310 --> 00:29:51.779\n&gt;&gt; Absolutely, you can never too safe.\n\n627\n00:29:51.779 --> 00:29:56.210\nAnd that's why we've done this\nseries of Linux security techniques.\n\n628\n00:29:56.210 --> 00:29:59.740\nSo make sure you watch and\nevery episode, it's good for you.\n\n629\n00:29:59.740 --> 00:30:01.340\nAnd thank you for watching ITProTV.\n\n630\n00:30:01.340 --> 00:30:03.800\nRemember, a good IT pro\nis always learning.\n\n631\n00:30:03.800 --> 00:30:04.860\nI'm Zach Memos.\n\n632\n00:30:04.860 --> 00:30:05.450\n&gt;&gt; And I'm Don Pezet.\n\n633\n00:30:05.450 --> 00:30:08.170\n&gt;&gt; And we will see you very soon.\n\n634\n00:30:08.170 --> 00:30:14.068\n[MUSIC]\n\n635\n00:30:14.068 --> 00:30:17.180\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "230763665"
        },
        {
          "description": "Don and Zach discuss if we should run Wireshark on the server, TCPDUMP, how we can sift through data, and using Wireshark to read the capture data that TCPDUMP generates.",
          "length": "1283",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-5-2-2-verifying_network_data_encryption_pt_2-082217.00_33_12_20.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-5-2-2-verifying_network_data_encryption_pt_2-082217.00_33_12_20.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxsecurity/techskills-linuxsecurity-5-2-2-verifying_network_data_encryption_pt_2-082217.00_33_12_20.Still001-sm.jpg",
          "title": "Verifying Network Data Encryption Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:05.952\nWelcome to ITPRO.TV [CROSSTALK]\n\n2\n00:00:05.952 --> 00:00:08.337\n[MUSIC]\n&gt;&gt; You're watching ITPRO.TV.\n\n3\n00:00:08.337 --> 00:00:13.341\n&gt;&gt; Hello again, thank you for\nchoosing ITPRO.TV,\n\n4\n00:00:13.341 --> 00:00:17.160\nhelping you learn everywhere you go.\n\n5\n00:00:17.160 --> 00:00:22.462\nI'm Zach Memos, your host,\nas we continue on with Linux security\n\n6\n00:00:22.462 --> 00:00:27.660\ntechniques and Part 2 of\nverifying network data encryption.\n\n7\n00:00:27.660 --> 00:00:29.119\nNow I wanted to make\nsure I said that right.\n\n8\n00:00:29.119 --> 00:00:30.644\n&gt;&gt; [LAUGH]\n&gt;&gt; That was done very emphatically and\n\n9\n00:00:30.644 --> 00:00:31.350\nvery dramatically.\n\n10\n00:00:31.350 --> 00:00:33.395\n&gt;&gt; I thought you were channeling\nyour inner [CROSSTALK]\n\n11\n00:00:33.395 --> 00:00:35.037\n&gt;&gt; I was, I was doing that, too, and\n\n12\n00:00:35.037 --> 00:00:38.110\nthis is Part 2 of [LAUGH]\nverifying network data encryption.\n\n13\n00:00:38.110 --> 00:00:39.878\nDon, give us some good news.\n\n14\n00:00:39.878 --> 00:00:42.038\n&gt;&gt; All right, so in this episode,\n\n15\n00:00:42.038 --> 00:00:45.640\nwe're going to channel our\nencryption techniques.\n\n16\n00:00:45.640 --> 00:00:46.916\n&gt;&gt; That's it.\n&gt;&gt; [LAUGH] So in Part 1,\n\n17\n00:00:46.916 --> 00:00:49.870\nwe got a chance to see how we\ncould use Wireshark to jump in and\n\n18\n00:00:49.870 --> 00:00:53.967\nthen capture traffic, right, and see\nwhether or not it was actually encrypted.\n\n19\n00:00:53.967 --> 00:00:57.046\nI showed a Telnet session\nthat was unencrypted, right?\n\n20\n00:00:57.046 --> 00:00:59.000\nWe blew that wide open and\nsaw all the passwords and all that.\n\n21\n00:00:59.000 --> 00:01:01.600\nAnd then we turned around and\napplied an SSH tunnel.\n\n22\n00:01:01.600 --> 00:01:04.250\nAnd with Wireshark, we were able to\nsee that encryption right there,\n\n23\n00:01:04.250 --> 00:01:08.790\nverify the data actually was encrypted,\nso we knew that our data was safe.\n\n24\n00:01:08.790 --> 00:01:12.940\nBut we ended the episode on a little\nbit of a cliffhanger, right?\n\n25\n00:01:12.940 --> 00:01:14.790\nZach asked a question, Zach,\nwhat was your question?\n\n26\n00:01:14.790 --> 00:01:18.530\n&gt;&gt; Okay, couldn't we just run\nWireshark on the server itself?\n\n27\n00:01:18.530 --> 00:01:22.310\n&gt;&gt; Right, and so in that show, I was\nrunning Wireshark right on my laptop,\n\n28\n00:01:22.310 --> 00:01:24.085\nwhich runs great, it's nice.\n\n29\n00:01:24.085 --> 00:01:27.990\nBut I said we should run it on a server,\nbecause Wireshark has too many\n\n30\n00:01:27.990 --> 00:01:31.510\ndependencies, it really expects to have\nits graphical user interface in place.\n\n31\n00:01:31.510 --> 00:01:33.240\nThe command line tools can\nbe used to capture data, but\n\n32\n00:01:33.240 --> 00:01:35.470\neven then,\nit's got a pretty large footprint.\n\n33\n00:01:35.470 --> 00:01:40.220\nSo fortunately, on our servers,\nwe have a utility called TCP Dump.\n\n34\n00:01:40.220 --> 00:01:42.580\nAnd TCP Dump, like its name implies,\n\n35\n00:01:42.580 --> 00:01:45.960\nis a transmission control\nprotocol dump utility.\n\n36\n00:01:45.960 --> 00:01:49.850\nIt dumps all the network data and\nlets you see it, right?\n\n37\n00:01:49.850 --> 00:01:51.450\nIt's a packet capture utility.\n\n38\n00:01:51.450 --> 00:01:53.890\nIt is not a protocol analyzer.\n\n39\n00:01:53.890 --> 00:01:56.220\nIt will not interpret the data for you.\n\n40\n00:01:56.220 --> 00:01:57.870\nBut it will let you collect it.\n\n41\n00:01:57.870 --> 00:02:00.050\nAnd so if you've got a remote server or\nlike me,\n\n42\n00:02:00.050 --> 00:02:02.030\nyour server's behind\nyou in the glass here.\n\n43\n00:02:02.030 --> 00:02:03.520\nI can't run a cable through the glass.\n\n44\n00:02:03.520 --> 00:02:06.010\nAnd I wanna monitor some of that data.\n\n45\n00:02:06.010 --> 00:02:10.600\nI can remote into the server, and I can\nuse the TCP Dump utility to collect it.\n\n46\n00:02:10.600 --> 00:02:13.420\nIt can reach out, it can grab the data,\nit's command line based.\n\n47\n00:02:13.420 --> 00:02:16.070\nIt doesn't have a GUI or\nnot one that I know of.\n\n48\n00:02:16.070 --> 00:02:19.592\nSo it's got very few dependencies,\nand as far as I'm aware,\n\n49\n00:02:19.592 --> 00:02:22.387\nit's installed by default\non most disk drives.\n\n50\n00:02:22.387 --> 00:02:23.864\nIt's just an old utility,\nit's been around a long time.\n\n51\n00:02:23.864 --> 00:02:27.659\nAnd it lets us collect that information,\nsee what's going on, and\n\n52\n00:02:27.659 --> 00:02:29.050\nthen interpret it.\n\n53\n00:02:29.050 --> 00:02:31.580\nAnd as far as an interpretation,\nwe can do that wherever.\n\n54\n00:02:31.580 --> 00:02:35.119\nBut collecting the data, that can be\ndone right from the server itself.\n\n55\n00:02:36.530 --> 00:02:38.581\n&gt;&gt; So we're gonna move on, and\nthen we're gonna see how that works.\n\n56\n00:02:38.581 --> 00:02:40.132\n&gt;&gt; Yeah, absolutely, so TCP, now,\n\n57\n00:02:40.132 --> 00:02:42.630\nfirst off, let me make sure\nit's actually on my system.\n\n58\n00:02:42.630 --> 00:02:46.606\nSo I'm connecting to this, this is\na RedHat Enterprise Linux 7 server.\n\n59\n00:02:46.606 --> 00:02:50.060\nAnd I'm just gonna run TCP Dump,\njust the command by itself.\n\n60\n00:02:50.060 --> 00:02:51.650\nAnd if I run it, oops,\n\n61\n00:02:51.650 --> 00:02:55.710\nyou do have to spell it, I spelled\nTCP wrong, which is kind of amazing.\n\n62\n00:02:55.710 --> 00:02:56.559\nTCP Dump, there we go.\n\n63\n00:02:56.559 --> 00:02:58.547\n&gt;&gt; It has a T in it.\n\n64\n00:02:58.547 --> 00:02:59.976\n&gt;&gt; [LAUGH] And so, how do you spell TCP?\n\n65\n00:02:59.976 --> 00:03:02.550\nAnd so\nI get just a little bit of feedback here.\n\n66\n00:03:02.550 --> 00:03:03.058\nI get TCP Dump.\n[LAUGH]\n\n67\n00:03:03.058 --> 00:03:04.883\n&gt;&gt; [LAUGH]\n\n68\n00:03:04.883 --> 00:03:05.866\n&gt;&gt; Pretty spectacular, but\n\n69\n00:03:05.866 --> 00:03:07.390\nthat tells me that I do have the command.\n\n70\n00:03:07.390 --> 00:03:09.280\nIf you don't have the command,\nyou can install it.\n\n71\n00:03:09.280 --> 00:03:13.630\nYou can do a sudo yum install tcpdump.\n\n72\n00:03:13.630 --> 00:03:16.410\nSometimes it's part of\na package called TCP utils.\n\n73\n00:03:16.410 --> 00:03:19.890\nBut for most disks, if it's installed\nby default, there is no package.\n\n74\n00:03:19.890 --> 00:03:22.510\nHere, I can see this package\nwas just called TCP Dump.\n\n75\n00:03:22.510 --> 00:03:23.630\nAnd I've already got it.\n\n76\n00:03:23.630 --> 00:03:27.273\nNow I didn't install it,\nit was just there by default.\n\n77\n00:03:27.273 --> 00:03:30.220\nSo you will find that on most\nsystems that it's already there.\n\n78\n00:03:30.220 --> 00:03:33.877\nEven if you do install it though,\nif I do a which tcpdump, and\n\n79\n00:03:33.877 --> 00:03:38.990\nI kind of find out where it's stored,\nI can do an lbd of that utility,\n\n80\n00:03:38.990 --> 00:03:41.990\nso I can pull it up to\nsee what it depends on.\n\n81\n00:03:41.990 --> 00:03:46.640\nAnd what you'll find is that TCP Dump\ndoesn't depend on very much.\n\n82\n00:03:46.640 --> 00:03:50.440\nVersus Wireshark that has a long list of\ndependencies, this one's pretty small.\n\n83\n00:03:50.440 --> 00:03:54.340\nAnd most of what you see here,\nyou've already got on your system because\n\n84\n00:03:54.340 --> 00:03:58.060\nthe system needs it, as well, like the\ngraphical libraries and things like that.\n\n85\n00:03:58.060 --> 00:04:02.800\nLibcrypto, if you've got SSH, then\nyou've already got libcrypto on there.\n\n86\n00:04:02.800 --> 00:04:05.500\nBut libpcap,\nthat's the packet capture library,\n\n87\n00:04:05.500 --> 00:04:08.638\nthat's the one that's most\nimportant that we need to have.\n\n88\n00:04:08.638 --> 00:04:11.586\nSo we've got that one, but\nthe rest of these like libc, libdl, libz,\n\n89\n00:04:11.586 --> 00:04:13.370\nyou've already got those on your system.\n\n90\n00:04:13.370 --> 00:04:16.760\nTCP Dump has a very small footprint.\n\n91\n00:04:16.760 --> 00:04:19.580\nAnd from here, I can run TCP Dump, and\n\n92\n00:04:19.580 --> 00:04:23.150\nI can start to see the traffic\nthat's on my interfaces.\n\n93\n00:04:23.150 --> 00:04:25.860\nFirst off,\nI need to know my interface name, so\n\n94\n00:04:25.860 --> 00:04:28.610\nI'm gonna do an ipaddr and\npull it up here.\n\n95\n00:04:28.610 --> 00:04:33.620\nMy interface, this is the interface that\nI'm SSHed in on right now, is ens32,\n\n96\n00:04:33.620 --> 00:04:35.970\nthat's the name of my interface.\n\n97\n00:04:35.970 --> 00:04:39.140\nAnd if I wanna see the traffic\nthat's moving across that interface,\n\n98\n00:04:39.140 --> 00:04:40.430\nI can use TCP Dump to do it.\n\n99\n00:04:40.430 --> 00:04:44.510\nNow TCP Dump on some distros\ncan be run as a regular user,\n\n100\n00:04:44.510 --> 00:04:47.110\nbut normally we'll wanna\nrun it as a root user.\n\n101\n00:04:47.110 --> 00:04:48.670\nIn fact, several other things\nI'm gonna do need that,\n\n102\n00:04:48.670 --> 00:04:54.290\nso I'm gonna do a sudo -s just to bump up\nmy privileges, so now I'm in a root shell.\n\n103\n00:04:54.290 --> 00:04:59.218\nAnd I'm gonna run tcpdump, and then\nI'll just say -i for interface, ens32,\n\n104\n00:04:59.218 --> 00:04:59.871\nfor mine.\n\n105\n00:04:59.871 --> 00:05:04.430\nYours might be eth0, or\nwhatever the name of your interface is.\n\n106\n00:05:04.430 --> 00:05:08.999\nAnd when you run that,\nit's gonna start collecting that data, and\n\n107\n00:05:08.999 --> 00:05:10.740\nwell, dumping it.\n\n108\n00:05:10.740 --> 00:05:12.670\nIt's gonna just pump it\nright here on to the screen.\n\n109\n00:05:12.670 --> 00:05:17.890\nNow something happened where\nit is just kinda sitting here.\n\n110\n00:05:17.890 --> 00:05:19.136\nI'm not really seeing any information.\n\n111\n00:05:19.136 --> 00:05:21.470\nAll right, well, what does that mean?\n\n112\n00:05:21.470 --> 00:05:24.414\nWell a lot of times,\nthe data is either flowing too fast, or\n\n113\n00:05:24.414 --> 00:05:28.330\nit contains non-printing characters, and\n\n114\n00:05:28.330 --> 00:05:30.690\nit can cause problems with the terminal,\nlike what I'm doing here.\n\n115\n00:05:30.690 --> 00:05:32.718\nIt can actually kick you\nout of the terminal.\n\n116\n00:05:32.718 --> 00:05:35.936\nOne of the big concerns we have is\nthat it can flood so much data at us,\n\n117\n00:05:35.936 --> 00:05:37.808\nthat it can overwhelm our SSH session.\n\n118\n00:05:37.808 --> 00:05:40.508\nI think that might have\nhappened to me right here,\n\n119\n00:05:40.508 --> 00:05:43.520\nbecause this session is not responding.\n\n120\n00:05:43.520 --> 00:05:46.070\nSo, I've managed to flood my session.\n\n121\n00:05:46.070 --> 00:05:48.435\nAll right, if you're on the local\nterminal of the system,\n\n122\n00:05:48.435 --> 00:05:51.101\nthis data will come right up, and\nyou can see it, and there you go.\n\n123\n00:05:51.101 --> 00:05:53.220\nBut if you remote in, it's a flood.\n\n124\n00:05:53.220 --> 00:05:56.402\nAnd so, normally, we go a little step\nfurther, and we say, you know what?\n\n125\n00:05:56.402 --> 00:05:58.792\nI wanna dump my network traffic,\nbut don't dump it to the screen.\n\n126\n00:05:58.792 --> 00:06:00.286\nDump it to a file, instead.\n\n127\n00:06:00.286 --> 00:06:02.927\nDump it to a file, so\nI can then interpret it that way, and\n\n128\n00:06:02.927 --> 00:06:07.120\nI don't have to worry about overwhelming\nmy session like, well, like I just did.\n\n129\n00:06:07.120 --> 00:06:11.100\nSo what I'm gonna do here is, I'm gonna\nswitch over to the console of that server.\n\n130\n00:06:11.100 --> 00:06:16.260\nAnd whoops, actually, there we go,\nit just started responding.\n\n131\n00:06:16.260 --> 00:06:20.213\nI'm running this in VM ware and\nVM ware picked up that it was not happy,\n\n132\n00:06:20.213 --> 00:06:20.824\nso [LAUGH].\n\n133\n00:06:20.824 --> 00:06:24.089\nSo now what I can do is I can come in and\nI can take that,\n\n134\n00:06:24.089 --> 00:06:28.635\nand I can reconnect and I can tell it\nthat I want to dump this data to a file.\n\n135\n00:06:28.635 --> 00:06:30.709\nAnd there's a few different\nways you can do that.\n\n136\n00:06:31.880 --> 00:06:34.140\nWe can just take it and\n\n137\n00:06:34.140 --> 00:06:38.670\nuse the greater than symbol to take\nthat exported data and dump it.\n\n138\n00:06:38.670 --> 00:06:41.787\nThere is actually a command line tag for\ndumping into a file, too,\n\n139\n00:06:41.787 --> 00:06:43.380\nwhich I can't remember.\n\n140\n00:06:43.380 --> 00:06:46.250\nBut we can then just\nkind of pump that way.\n\n141\n00:06:46.250 --> 00:06:48.177\nAnd it's gonna run,\nit's gonna start collecting that data.\n\n142\n00:06:48.177 --> 00:06:50.330\nAnd dumping it, and\nsee how I didn't get an error this time?\n\n143\n00:06:50.330 --> 00:06:51.900\nThis time, it's actually running.\n\n144\n00:06:51.900 --> 00:06:53.900\nIt's happy, it's doing its thing.\n\n145\n00:06:53.900 --> 00:06:57.780\nI don't see what's going on because\nit's dumping it into data.txt.\n\n146\n00:06:57.780 --> 00:07:00.580\nAnd when I'm done,\nI can just hit Ctrl+C to stop it, and\n\n147\n00:07:00.580 --> 00:07:03.530\nI can see it collected 13\npackets during that time.\n\n148\n00:07:03.530 --> 00:07:08.470\nAnd if I look,\nI now have this data.txt file, and\n\n149\n00:07:08.470 --> 00:07:11.110\nI'll use the less utility to open that up.\n\n150\n00:07:11.110 --> 00:07:14.670\nAnd now I can see all the packets\nthat it collected while I was sitting\n\n151\n00:07:14.670 --> 00:07:15.500\nthere, right?\n\n152\n00:07:15.500 --> 00:07:18.720\nAnd while I was sitting there, it looks\nlike it did some name resolution and\n\n153\n00:07:18.720 --> 00:07:19.720\na few other things.\n\n154\n00:07:19.720 --> 00:07:21.456\nThese are the packets that it gathered.\n\n155\n00:07:21.456 --> 00:07:25.056\nNow, in its default form,\nthe way that I just ran it,\n\n156\n00:07:25.056 --> 00:07:28.570\nit's only capturing a subset of the data.\n\n157\n00:07:28.570 --> 00:07:30.360\nIt didn't capture payloads.\n\n158\n00:07:30.360 --> 00:07:35.240\nIt captured the layer 1, 2, 3, 4 there,\nright, so source destination MAC address,\n\n159\n00:07:35.240 --> 00:07:38.870\nsource destination IP address,\nthe port numbers.\n\n160\n00:07:38.870 --> 00:07:40.902\nBut once it starts\ngetting into layer 5 and\n\n161\n00:07:40.902 --> 00:07:44.582\nhigher where the actual pay load resides,\nit didn't capture that, right?\n\n162\n00:07:44.582 --> 00:07:47.747\nAnd the main reason it doesn't capture\nit is to keep the file size small.\n\n163\n00:07:47.747 --> 00:07:51.752\nIf I'm transmitting binaries,\nif I transmit a 1 gig ISO file, then\n\n164\n00:07:51.752 --> 00:07:56.458\ntechnically, I would have 1 gig of capture\npackets that contain that ISO file.\n\n165\n00:07:56.458 --> 00:08:00.255\nSo it leaves that payload off So\nwhen we start to run tcpdump,\n\n166\n00:08:00.255 --> 00:08:05.106\nthere's a few things that we may need to\ndo to kinda customize it a little bit.\n\n167\n00:08:05.106 --> 00:08:06.650\nTo tell it to collect more data,\n\n168\n00:08:06.650 --> 00:08:09.870\nto actually collect payloads if\nthat's what we're looking for.\n\n169\n00:08:09.870 --> 00:08:12.235\nIf I'm trying to figure out\nif the datas encrypted,\n\n170\n00:08:12.235 --> 00:08:14.620\nmaybe just seeing the protocols is enough,\nright?\n\n171\n00:08:14.620 --> 00:08:15.699\nI don't see telnet in my list.\n\n172\n00:08:15.699 --> 00:08:18.033\nI see SSH version two, that's enough.\n\n173\n00:08:18.033 --> 00:08:21.390\nBut if I wanna see the actual payload,\nI'm gonna have to modify this.\n\n174\n00:08:21.390 --> 00:08:25.428\nNow you have to be careful when you\nstart capturing data with payload,\n\n175\n00:08:25.428 --> 00:08:29.409\ncuz it can overwhelm the server,\neven on the server itself, right.\n\n176\n00:08:29.409 --> 00:08:33.150\nIf we're trying to record all that data,\nnormally the data hits the network adaptor\n\n177\n00:08:33.150 --> 00:08:35.400\nand then goes into RAM\nwhere it's processed.\n\n178\n00:08:35.400 --> 00:08:37.802\nAnd it's only written to the hard\ndrive if we choose to, right?\n\n179\n00:08:37.802 --> 00:08:40.007\nBut when I'm doing tcpdump and\ndumping to a file,\n\n180\n00:08:40.007 --> 00:08:42.060\nit's always writing to the hard drive.\n\n181\n00:08:42.060 --> 00:08:46.173\nSo all that network activity is converting\ninto this which is gonna hurt performance.\n\n182\n00:08:46.173 --> 00:08:51.480\nSo we'll likely want to apply some\nfilters to tcpdump when we run it.\n\n183\n00:08:51.480 --> 00:08:56.523\nSo for example, I could come in and\nI could say tcpdump,\n\n184\n00:08:56.523 --> 00:09:02.763\nand I could follow that up with host,\nand specify a particular host.\n\n185\n00:09:02.763 --> 00:09:07.324\nI only wanna record traffic that's\ncoming to or from this host, all right?\n\n186\n00:09:07.324 --> 00:09:11.800\nAnd if I wanna specify an adapter I could\nhave done that beforehand so .i ens32.\n\n187\n00:09:11.800 --> 00:09:13.932\nI have more than one adapter,\nso I need to do that.\n\n188\n00:09:13.932 --> 00:09:15.856\nIf I only had one adapter,\nI could actually leave that off.\n\n189\n00:09:15.856 --> 00:09:18.410\nSo now I'm just gonna get that one host.\n\n190\n00:09:18.410 --> 00:09:23.272\nOr we could say net and tell it that\nI wanna get an entire network, right,\n\n191\n00:09:23.272 --> 00:09:25.688\nand specify what the sub notation.\n\n192\n00:09:25.688 --> 00:09:30.013\nSo here it's tcpdump net 172.16.00/24.\n\n193\n00:09:30.013 --> 00:09:32.134\nNow I'm just gonna get that traffic.\n\n194\n00:09:32.134 --> 00:09:35.022\nAny traffic from other networks,\nit comes to the card,\n\n195\n00:09:35.022 --> 00:09:36.747\nI just don't record it, right?\n\n196\n00:09:36.747 --> 00:09:39.113\nThis is gonna help keep that file smaller.\n\n197\n00:09:39.113 --> 00:09:42.638\nWhen you use tcpdump,\nif it's on a production server,\n\n198\n00:09:42.638 --> 00:09:45.690\nyou wanna create as little\nimpact as possible.\n\n199\n00:09:45.690 --> 00:09:48.697\nYou don't wanna create a slow experience\nfor everybody that's updating that server.\n\n200\n00:09:48.697 --> 00:09:54.777\nWe can be very specific and\nsay if the source is a particular IP,\n\n201\n00:09:54.777 --> 00:09:59.134\nright, so you say SRC,\nfollowed by an IP, or\n\n202\n00:09:59.134 --> 00:10:03.291\nDST if the destination is a particular IP.\n\n203\n00:10:03.291 --> 00:10:05.970\nAnd that again is gonna help\nto minimize that traffic and\n\n204\n00:10:05.970 --> 00:10:08.023\nyou kinda reduce what you're recording.\n\n205\n00:10:08.023 --> 00:10:09.902\nI don't normally do source and\ndestination.\n\n206\n00:10:09.902 --> 00:10:14.323\nI normally do host because then it catches\nit whether it's a source or a destination.\n\n207\n00:10:14.323 --> 00:10:15.847\nYou can go by port.\n\n208\n00:10:15.847 --> 00:10:20.748\nIf I'm specifically looking for\ntelnet traffic, I can come in here and\n\n209\n00:10:20.748 --> 00:10:24.190\nsay, tcpdump-iens 32 port 23, all right.\n\n210\n00:10:24.190 --> 00:10:29.348\nSo now it's just capturing\nthe telnet traffic and that's it.\n\n211\n00:10:29.348 --> 00:10:31.668\nAnd notice how my session didn't\nget overwhelmed this time cuz it's\n\n212\n00:10:31.668 --> 00:10:32.230\nnot showing it.\n\n213\n00:10:32.230 --> 00:10:33.820\nThere is no telnet traffic.\n\n214\n00:10:33.820 --> 00:10:39.136\nIf I go on and open up another terminal\nand I telnet into that server, right,\n\n215\n00:10:39.136 --> 00:10:44.800\nand I get a log in screen, when I go back\nto my other shell there's those packets.\n\n216\n00:10:44.800 --> 00:10:46.605\nThey're appearing and\npopping up right here.\n\n217\n00:10:46.605 --> 00:10:50.346\nHere's that telnet session started,\nand I can see what's going on.\n\n218\n00:10:50.346 --> 00:10:53.992\nAgain, not carrying payload,\nbut showing me the information\n\n219\n00:10:53.992 --> 00:10:58.620\nabout what was happening,\nthe echoes that were built up and so on.\n\n220\n00:10:58.620 --> 00:11:01.982\nEach of these kinda letting me know\nthat time that session was built up.\n\n221\n00:11:01.982 --> 00:11:06.296\n&gt;&gt; So Don, can you give us an example\nof how you use this out in the field?\n\n222\n00:11:06.296 --> 00:11:09.348\n&gt;&gt; Yeah, I kinda have these two\ndifferent ways that I run it depending\n\n223\n00:11:09.348 --> 00:11:11.047\non the data that I wanna get, right?\n\n224\n00:11:11.047 --> 00:11:12.132\n&gt;&gt; Mm-hm.\n&gt;&gt; So when I run it,\n\n225\n00:11:12.132 --> 00:11:15.320\nlike if I'm troubleshooting or collecting\ndata, I'll usually run it this way.\n\n226\n00:11:15.320 --> 00:11:19.586\nI'll say tcpdump, I'll specify\nthe interface that I want to log.\n\n227\n00:11:19.586 --> 00:11:21.030\nSo I'm gonna do ens32 again.\n\n228\n00:11:21.030 --> 00:11:26.018\nAnd then I kind of have these little\ncommand line arguments memorized\n\n229\n00:11:26.018 --> 00:11:26.884\nthat I use.\n\n230\n00:11:26.884 --> 00:11:31.682\nSo nvS is the main one that I use,\nlowercase n, lowercase v, capital S.\n\n231\n00:11:31.682 --> 00:11:36.598\nThe lowercase n, that says that I don't\nwant it to do name resolution, right?\n\n232\n00:11:36.598 --> 00:11:40.479\nYou probably noticed in my captures a\nmoment ago that any time it captured data\n\n233\n00:11:40.479 --> 00:11:43.180\nit would try and\ndo a reverse DNS lookup to resolve it.\n\n234\n00:11:43.180 --> 00:11:44.733\nSo it would show a name.\n\n235\n00:11:44.733 --> 00:11:46.230\nWell, that takes work.\n\n236\n00:11:46.230 --> 00:11:47.940\nThe server has to do these\nreverse lookups, and\n\n237\n00:11:47.940 --> 00:11:50.436\nI'm trying to create as little impact\nas possible so I turn that off.\n\n238\n00:11:50.436 --> 00:11:51.407\nDon't want to do DNS resolution.\n\n239\n00:11:51.407 --> 00:11:52.862\nSo I do a -n.\n\n240\n00:11:52.862 --> 00:11:56.453\nAnd then the lowercase v,\nsince I want to be more verbose,\n\n241\n00:11:56.453 --> 00:11:58.297\nright, I used that earlier.\n\n242\n00:11:58.297 --> 00:12:01.660\nI want it to show me a little\nmore data than normal.\n\n243\n00:12:01.660 --> 00:12:05.498\nAnd the reality is you can add\nanother v and even a third v, and\n\n244\n00:12:05.498 --> 00:12:08.895\neach v makes it increasingly more and\nmore detailed.\n\n245\n00:12:08.895 --> 00:12:12.050\nThe first v says show me\nall the header information.\n\n246\n00:12:12.050 --> 00:12:15.937\nThe second v says give me the TCP options\nand the third v says give me the whole\n\n247\n00:12:15.937 --> 00:12:19.285\nstinking header, right,\neverything except for the payload.\n\n248\n00:12:19.285 --> 00:12:25.470\nAnd then the capital S says to tell\nme the absolute TCP sequence numbers.\n\n249\n00:12:25.470 --> 00:12:27.621\nWhen a TCP Handshake happens,\na sequence numbers, and\n\n250\n00:12:27.621 --> 00:12:29.009\noftentimes they're randomized.\n\n251\n00:12:29.009 --> 00:12:30.820\nThey jump around all over the place.\n\n252\n00:12:30.820 --> 00:12:34.402\nAnd what will happen is a lot of software\nthat gathers these numbers will create\n\n253\n00:12:34.402 --> 00:12:36.040\nthese relative sequence numbers.\n\n254\n00:12:36.040 --> 00:12:39.408\nSo the actual sequence\nnumber might be 48231, but\n\n255\n00:12:39.408 --> 00:12:44.460\nit's the fifth sequence number used, and\nso your software might render it as a 5.\n\n256\n00:12:44.460 --> 00:12:47.827\nAnd if you wanna see\nthe actual sequence number,\n\n257\n00:12:47.827 --> 00:12:53.758\nthen you'll wanna do that capital S, like\nthat, to make sure it's the actual data.\n\n258\n00:12:53.758 --> 00:12:59.360\nSo NVS, or NVVS, or NVVVS, that's gonna\ncapture just the basic heterotype data.\n\n259\n00:12:59.360 --> 00:13:02.874\nAnd if I do that,\nI can then dump that to a file.\n\n260\n00:13:02.874 --> 00:13:06.637\nAnd to dump it to file, I can use that\ngreater than sign like I did earlier or\n\n261\n00:13:06.637 --> 00:13:09.840\nI can do -w and\nspecify that's a write it to a file.\n\n262\n00:13:09.840 --> 00:13:14.617\nAnd so I can dump that to,\nI'll just call it file1.pcap.\n\n263\n00:13:14.617 --> 00:13:16.225\nI called it .text earlier.\n\n264\n00:13:16.225 --> 00:13:19.750\nNormally I call it .pcap because most of\nthe packet capture utilities that are out\n\n265\n00:13:19.750 --> 00:13:21.397\nthere save their captures at .pcap.\n\n266\n00:13:21.397 --> 00:13:24.642\nSo if you name it that way it makes it\nkinda compatible with all the other\n\n267\n00:13:24.642 --> 00:13:25.910\nsoftwares out there.\n\n268\n00:13:25.910 --> 00:13:28.176\nThe filename doesn't really matter,\nyou can call it whatever you want.\n\n269\n00:13:28.176 --> 00:13:30.690\nBut I'm calling it .pcap.\n\n270\n00:13:30.690 --> 00:13:33.357\nSo if I run that,\nthat's gonna start collecting that data.\n\n271\n00:13:33.357 --> 00:13:36.630\nI can go and open up a telnet session or\nwhatever it is I wanna do.\n\n272\n00:13:36.630 --> 00:13:40.929\nI can reach out to that server log in,\nand it gets that information, and\n\n273\n00:13:40.929 --> 00:13:43.879\npull up a directory listing,\nexit out, right?\n\n274\n00:13:43.879 --> 00:13:46.610\nAll of that was being collected\nhere in the background.\n\n275\n00:13:46.610 --> 00:13:51.895\nAnd if I cancel that, I can pull\nup that file, it was file1.pcap.\n\n276\n00:13:51.895 --> 00:13:56.350\nAnd it's warning me it\nmight be a binary file.\n\n277\n00:13:56.350 --> 00:13:58.358\nAnd there's the data that it dumped out,\nokay.\n\n278\n00:13:58.358 --> 00:14:01.373\n&gt;&gt; Whoo.\n&gt;&gt; Now when I look at this data,\n\n279\n00:14:01.373 --> 00:14:07.220\nit is binary data, right,\nbecause I use -w to write it as a pcap.\n\n280\n00:14:07.220 --> 00:14:10.634\nThe pcap makes it compatible\nwith other systems.\n\n281\n00:14:10.634 --> 00:14:12.642\nIf I had done that and not done -w,\n\n282\n00:14:12.642 --> 00:14:17.008\nif I had instead done the greater than\nsymbol like I did earlier in the show,\n\n283\n00:14:17.008 --> 00:14:20.800\nthat's gonna write it in\na human readable format, right?\n\n284\n00:14:20.800 --> 00:14:27.448\nAnd so now if I repeat that same exercise\nand go in and do it, I can log in.\n\n285\n00:14:27.448 --> 00:14:29.980\nWhoops, typed the wrong password.\n\n286\n00:14:29.980 --> 00:14:31.408\nDrop a listing, get out.\n\n287\n00:14:31.408 --> 00:14:35.758\nAll that's being captured and\nnow I can look at that file and\n\n288\n00:14:35.758 --> 00:14:38.460\nit's human readable, okay.\n\n289\n00:14:38.460 --> 00:14:39.558\nIt's not stored as a binary anymore.\n\n290\n00:14:39.558 --> 00:14:42.320\nBut now it's not really compatible\nwith the other software.\n\n291\n00:14:42.320 --> 00:14:45.610\nIt's a text file that I can read,\nand I can interpret and\n\n292\n00:14:45.610 --> 00:14:48.767\nstart to kind of figure out\nwhat to deal with, right?\n\n293\n00:14:48.767 --> 00:14:53.028\nNow, once I've got that data, that's\nreally just header information, right?\n\n294\n00:14:53.028 --> 00:14:57.023\nSo that's the first way\nthat I use it in the field,\n\n295\n00:14:57.023 --> 00:15:01.250\nis I do -nvS so\nI might do more than one v, but -nvS.\n\n296\n00:15:01.250 --> 00:15:05.615\nBut the other way I use it is if\nI actually wanna get the payload.\n\n297\n00:15:05.615 --> 00:15:10.608\nIf I wanna get the real payload\nof what was being dumped,\n\n298\n00:15:10.608 --> 00:15:14.230\nI'll do -nvS and I'll add a capital X.\n\n299\n00:15:14.230 --> 00:15:17.405\nThe capital X,\nit actually stands for expert mode,\n\n300\n00:15:17.405 --> 00:15:20.592\nis what we're gonna actually\ncollect the payload.\n\n301\n00:15:20.592 --> 00:15:23.564\nAnd this is where you've gotta be careful\nbecause of the amount of disc IO it\n\n302\n00:15:23.564 --> 00:15:24.189\ncan generate.\n\n303\n00:15:24.189 --> 00:15:27.524\nSo you usually wanna apply this with some\nkind of filters to restrict down the data\n\n304\n00:15:27.524 --> 00:15:28.566\nthat you're gonna get.\n\n305\n00:15:28.566 --> 00:15:34.607\nBut in my case, I'll go ahead and\nset it, actually,\n\n306\n00:15:34.607 --> 00:15:40.917\nI guess I could come in and\nsay if the source port is 23 or\n\n307\n00:15:40.917 --> 00:15:44.971\ndestination port is 23, right?\n\n308\n00:15:44.971 --> 00:15:47.977\nSo now I know I'm only gonna\nbe getting telnet traffic.\n\n309\n00:15:47.977 --> 00:15:51.082\nIt's the source to the destination portal\nchanged depending on who's talking,\n\n310\n00:15:51.082 --> 00:15:53.197\nif it's MyWorkstation talking or\nthe server talking.\n\n311\n00:15:53.197 --> 00:15:55.758\nSo now I filter that down to\nkind of restrict things down and\n\n312\n00:15:55.758 --> 00:15:57.179\nkeep that a little bit smaller.\n\n313\n00:15:57.179 --> 00:16:00.923\nBut that capital X Is what's\ntelling it that I wanna go in, and\n\n314\n00:16:00.923 --> 00:16:02.949\ngather the actual payload data.\n\n315\n00:16:02.949 --> 00:16:07.505\nSo now, when I repeat that telnet session,\nit's recording not only the headers\n\n316\n00:16:07.505 --> 00:16:11.580\nof these packets, but\nit's actually recording that pay load.\n\n317\n00:16:11.580 --> 00:16:13.576\nAnd if I go back and\nI look at the file now.\n\n318\n00:16:13.576 --> 00:16:18.410\nSo Ill go and pull up that file1.pcap.\n\n319\n00:16:18.410 --> 00:16:19.920\nSee how I get the actual payload?\n\n320\n00:16:19.920 --> 00:16:21.440\nIt actually looks like wire shark, right?\n\n321\n00:16:21.440 --> 00:16:25.040\nI've got that hexadecimal data on\nthe left, payload data on the right.\n\n322\n00:16:25.040 --> 00:16:30.690\nAnd as I scroll down, I should be able\nto find in here where I logged in.\n\n323\n00:16:30.690 --> 00:16:31.350\nRight here.\n\n324\n00:16:31.350 --> 00:16:33.560\nDon's laptop was connecting.\n\n325\n00:16:33.560 --> 00:16:36.790\nI did an x-term 256 color terminal.\n\n326\n00:16:36.790 --> 00:16:40.270\nAnd then, it prompted me for\nmy username somewhere in here.\n\n327\n00:16:40.270 --> 00:16:42.610\nAgain, if we just keep\nscrolling down we'll find it.\n\n328\n00:16:42.610 --> 00:16:44.023\nOops, I jumped to the end.\n\n329\n00:16:44.023 --> 00:16:47.891\n[LAUGH] I jumped a little ahead, but\nhere you can see the command prompt,\n\n330\n00:16:47.891 --> 00:16:52.110\nwhere I was at the the command prompt\nlogin, I typed a command I typed LS.\n\n331\n00:16:52.110 --> 00:16:54.870\nSo all that can be seen\nright here in the file.\n\n332\n00:16:54.870 --> 00:16:58.980\nWe can look at it, and we actually get\nthat payload to interpret the data.\n\n333\n00:16:58.980 --> 00:17:02.580\n&gt;&gt; So, Don, how we suppose to\nsift through all that data?\n\n334\n00:17:02.580 --> 00:17:04.300\nThere's a lot there.\n\n335\n00:17:04.300 --> 00:17:07.339\n&gt;&gt; Its a lot of data, and\nif you've exported it in a text format,\n\n336\n00:17:07.339 --> 00:17:10.203\nlike I've done here,\nyou can use utilities like Less, so\n\n337\n00:17:10.203 --> 00:17:14.019\nI'm using that Less utility command,\nand it lets me search and find things.\n\n338\n00:17:14.019 --> 00:17:17.284\nRight, so I can come in here,\nand if I do a forward slash,\n\n339\n00:17:17.284 --> 00:17:19.130\nI can search forward for a term.\n\n340\n00:17:19.130 --> 00:17:24.280\nOr maybe I'm looking for where I logged\nin, I might look for that string deposet.\n\n341\n00:17:24.280 --> 00:17:27.575\nAnd it goes in and it finds it, so\nthere I found the first instance.\n\n342\n00:17:27.575 --> 00:17:29.765\nAnd you just hit that forward slash and\npress enter, and look again.\n\n343\n00:17:29.765 --> 00:17:31.447\nWhat I normally look for is sudo.\n\n344\n00:17:31.447 --> 00:17:34.368\nRight, you do a forward slash and look for\nsudo, cuz you know whenever somebody\n\n345\n00:17:34.368 --> 00:17:37.265\nruns sudo, they're gonna immediately\nfollow that by putting in a password.\n\n346\n00:17:37.265 --> 00:17:39.605\nSo that's a really cool one to search for.\n\n347\n00:17:39.605 --> 00:17:42.425\nI could search for\nthe actual password, or whatever.\n\n348\n00:17:42.425 --> 00:17:43.430\nOops, got out.\n\n349\n00:17:43.430 --> 00:17:45.760\nYou can do a question mark to\nsearch in the other direction.\n\n350\n00:17:45.760 --> 00:17:48.700\nSo we can search through and\nfind the data, but it is complex.\n\n351\n00:17:48.700 --> 00:17:53.320\nIt's really a lot of jumbled up data,\n\n352\n00:17:53.320 --> 00:17:56.180\ndata gets broken across packets,\nit gets hard to interpret.\n\n353\n00:17:56.180 --> 00:18:00.050\nOne thing that I'll do is if I'm\nwriting it to a file like this,\n\n354\n00:18:00.050 --> 00:18:02.690\nyou can use the tail command and\nfollow it.\n\n355\n00:18:02.690 --> 00:18:07.120\nRight, so I could say like,\ntail -f /file1.pcap.\n\n356\n00:18:07.120 --> 00:18:10.320\nAnd that will help me,\nwhile it's exporting to a file,\n\n357\n00:18:10.320 --> 00:18:13.944\nI can be viewing what's going on and\nseeing it in this.\n\n358\n00:18:13.944 --> 00:18:16.384\nWhat do they call that thing?\n\n359\n00:18:16.384 --> 00:18:19.216\nI forgot my dot.\n\n360\n00:18:19.216 --> 00:18:20.750\nBut we can kinda look at it, and\n\n361\n00:18:20.750 --> 00:18:23.370\nas the file gets updated you'll just\nsee more information flowing across.\n\n362\n00:18:23.370 --> 00:18:26.060\nThat's not really any different than\nhaving it written to your screen, though.\n\n363\n00:18:26.060 --> 00:18:28.878\nAnd just like being written to the screen\nit can overwhelm your session.\n\n364\n00:18:28.878 --> 00:18:31.562\nSo you wanna be careful when\nyou're using tail, or cat, or\n\n365\n00:18:31.562 --> 00:18:33.549\nany of those other\ncommands to get the data,\n\n366\n00:18:33.549 --> 00:18:36.420\nbecause it can overwhelm your\nsession if you're not careful.\n\n367\n00:18:36.420 --> 00:18:39.480\nWell, there's gotta be a better\nway to deal with the data, right?\n\n368\n00:18:39.480 --> 00:18:40.100\n&gt;&gt; Absolutely, right?\n\n369\n00:18:40.100 --> 00:18:41.690\n&gt;&gt; Yeah.\n&gt;&gt; So I showed you a moment ago that we\n\n370\n00:18:41.690 --> 00:18:43.400\ncan dump this as binary data.\n\n371\n00:18:43.400 --> 00:18:48.350\nIf I had done this capture the right way,\nif I had done with full payload.\n\n372\n00:18:48.350 --> 00:18:49.790\nSo I'm gonna do full payload here.\n\n373\n00:18:49.790 --> 00:18:50.890\nAnd I'm not even gonna filter this.\n\n374\n00:18:50.890 --> 00:18:52.220\nWe're just gonna go crazy.\n\n375\n00:18:52.220 --> 00:18:56.243\nSo I wanna get all of\nmy data here on ens32.\n\n376\n00:18:56.243 --> 00:18:57.710\nEverything on that interface.\n\n377\n00:18:57.710 --> 00:19:00.020\nAnd I'm doing a -nvvvsx.\n\n378\n00:19:00.020 --> 00:19:04.230\nI want the full data,\nthe x says I even want payload.\n\n379\n00:19:04.230 --> 00:19:07.240\nAnd I'm gonna write that by using -w.\n\n380\n00:19:07.240 --> 00:19:10.680\nThat's gonna write it as\na binary packet capture.\n\n381\n00:19:10.680 --> 00:19:13.050\nAnd remember how I mentioned there is\na number of utilities out there that\n\n382\n00:19:13.050 --> 00:19:14.140\nsupport that?\n\n383\n00:19:14.140 --> 00:19:15.850\nWell Wireshark is one of them.\n\n384\n00:19:15.850 --> 00:19:16.480\n&gt;&gt; Awesome.\n\n385\n00:19:16.480 --> 00:19:19.070\n&gt;&gt; I can run this,\nit's gonna collect the data,\n\n386\n00:19:19.070 --> 00:19:24.120\nwherever it is that I'm sending across the\nsystems, or maybe it's this Telnet system.\n\n387\n00:19:24.120 --> 00:19:26.642\nI get logged in, and I do my stuff.\n\n388\n00:19:26.642 --> 00:19:33.620\nI sudo a command, I punch all that in,\nand once that is done it gets logged.\n\n389\n00:19:33.620 --> 00:19:35.450\nI hit Ctrl+C to stop the log.\n\n390\n00:19:35.450 --> 00:19:38.190\nAnd now I've got a binary\npacket capture file.\n\n391\n00:19:38.190 --> 00:19:40.730\nAnd I can take that file, and\nI can compress it to make it smaller,\n\n392\n00:19:40.730 --> 00:19:43.150\nI might copy it to my work station.\n\n393\n00:19:43.150 --> 00:19:46.580\nAnd on my work station I\ncan fire up Wireshark,\n\n394\n00:19:46.580 --> 00:19:47.710\nyou don't even need to be root for this.\n\n395\n00:19:47.710 --> 00:19:49.840\nYou can just fire up Wireshark.\n\n396\n00:19:49.840 --> 00:19:53.060\nAnd in Wireshark you can go to file,\nand open, and\n\n397\n00:19:53.060 --> 00:19:55.759\nyou can open up that packet capture file.\n\n398\n00:19:55.759 --> 00:19:57.612\nAnd it'll interpret it,\nand show it on the screen,\n\n399\n00:19:57.612 --> 00:19:59.950\njust like we had captured it\noff the network ourselves.\n\n400\n00:19:59.950 --> 00:20:00.480\n&gt;&gt; Wow.\n\n401\n00:20:00.480 --> 00:20:03.020\n&gt;&gt; So on the server, I just need TCP dump,\n\n402\n00:20:03.020 --> 00:20:06.490\nthis utility with a really small\nfootprint that gathers the data,\n\n403\n00:20:06.490 --> 00:20:08.780\nI think copy it to my work station,\nwhere I have a full blown GUI.\n\n404\n00:20:08.780 --> 00:20:11.310\n&gt;&gt; Right.\n&gt;&gt; I can load it up, search, interpret,\n\n405\n00:20:11.310 --> 00:20:14.730\nfilter, do all the analysis,\nthe full protocol analyzer,\n\n406\n00:20:14.730 --> 00:20:18.650\nI get all of that right here And I didn't\nhave to install it all on the server.\n\n407\n00:20:18.650 --> 00:20:21.230\nSo that's why it's recommended that\nwe don't run Wireshark on the server,\n\n408\n00:20:21.230 --> 00:20:23.410\nand instead we use TCP Dump on the server.\n\n409\n00:20:23.410 --> 00:20:25.670\nOn the workstation though,\nall bets are off.\n\n410\n00:20:25.670 --> 00:20:26.730\nUse whatever you want.\n\n411\n00:20:26.730 --> 00:20:29.350\nWireshark is great, and\nthe GUI makes it super easy to use.\n\n412\n00:20:29.350 --> 00:20:31.200\nSo definitely take advantage of that.\n\n413\n00:20:31.200 --> 00:20:33.610\n&gt;&gt; Don, you did a fantastic job, as usual.\n\n414\n00:20:33.610 --> 00:20:36.630\nSo, verifying network\ndata encryption part two.\n\n415\n00:20:36.630 --> 00:20:38.390\nMake sure you see part one.\n\n416\n00:20:38.390 --> 00:20:40.090\nFinal thoughts.\n\n417\n00:20:40.090 --> 00:20:42.550\n&gt;&gt; The main thing here,\nI'll repeat it again from last episode,\n\n418\n00:20:42.550 --> 00:20:44.590\nwhich is trust but verify.\n\n419\n00:20:44.590 --> 00:20:47.680\nIts nice, the software says its encrypted,\nbut its always better to know for\n\n420\n00:20:47.680 --> 00:20:48.420\na fact that it is.\n\n421\n00:20:48.420 --> 00:20:51.390\nSo make sure you collect the data,\nanalyze it, look at it.\n\n422\n00:20:51.390 --> 00:20:53.430\nAnd ensure that it is actually encrypted.\n\n423\n00:20:53.430 --> 00:20:56.740\n&gt;&gt; And security is the name of the game,\nand make sure you watch every episode of\n\n424\n00:20:56.740 --> 00:21:00.920\nLinux Security Techniques,\nyou'll be very glad you did.\n\n425\n00:21:00.920 --> 00:21:03.680\nAnd remember,\na good IT Pro is always learning.\n\n426\n00:21:03.680 --> 00:21:06.190\nThanks for watching ITProTV,\nI'm Zach Memos.\n\n427\n00:21:06.190 --> 00:21:06.870\n&gt;&gt; And I'm Don Pezet.\n\n428\n00:21:06.870 --> 00:21:07.959\n&gt;&gt; And we'll see you soon.\n\n429\n00:21:09.542 --> 00:21:15.550\n[MUSIC]\n\n430\n00:21:15.550 --> 00:21:18.597\nThank you for watching ITProTV.\n\n",
          "vimeoId": "230940215"
        }
      ],
      "title": "Security Testing"
    }
  ],
  "url": "linux-security-techniques",
  "vLab": false
}
