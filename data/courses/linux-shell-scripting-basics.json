{
  "description": "In this series, Daniel and Don walk you through the fundamentals of bash scripting in the Linux operating system. Watch here as they take you through the fundamentals like: Script file formats, running scripts, working with variables, performing arithmetic, conditional statements, loops, presenting data, taking user input, and script control.",
  "descriptionMD": "In this series, Daniel and Don walk you through the fundamentals of bash scripting in the Linux operating system. Watch here as they take you through the fundamentals like: Script file formats, running scripts, working with variables, performing arithmetic, conditional statements, loops, presenting data, taking user input, and script control.",
  "length": "31526",
  "name": "Linux Shell Scripting - Basics",
  "practiceExam": false,
  "subtitle": "From zero to scripting",
  "tagUrl": "linux",
  "topics": [
    {
      "episodes": [
        {
          "description": "In this series, Daniel and Don walk you through the fundamentals of bash scripting in the Linux operating system. Watch here as they take you through the fundamentals like: Script file formats, running scripts, working with variables, performing arithmetic, conditional statements, loops, presenting data, taking user input, and script control.",
          "length": "342",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-0-0-0-overview-112117-CLN.00_00_05_24.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-0-0-0-overview-112117-CLN.00_00_05_24.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-0-0-0-overview-112117-CLN.00_00_05_24.Still001-sm.jpg",
          "title": "Overview",
          "transcript": "",
          "vimeoId": "244098621"
        },
        {
          "description": "In this episode, Daniel and Don show you the fundamentals of building a bash script. Here you they will define what a script is, a script's format and standard practices, create a simple script, control screen output, and script execution.",
          "length": "1848",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-1-1-1-basic_script_building-100217-PGM.00_37_02_21.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-1-1-1-basic_script_building-100217-PGM.00_37_02_21.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-1-1-1-basic_script_building-100217-PGM.00_37_02_21.Still001-sm.jpg",
          "title": "Basic Script Building",
          "transcript": "",
          "vimeoId": "236471701"
        }
      ],
      "title": "Basic Script Building"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Don take a look at using variables in your shell scripts. Here they will look at defining what variables are, the difference between environmental and user defined variables, employing Command Substitution, and working with/around sub-shells.",
          "length": "1496",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-2-1-1-using-variables-100217-PGM.00_25_29_14.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-2-1-1-using-variables-100217-PGM.00_25_29_14.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-2-1-1-using-variables-100217-PGM.00_25_29_14.Still001-sm.jpg",
          "title": "Using Variables",
          "transcript": "",
          "vimeoId": "236471377"
        }
      ],
      "title": "Using Variables"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Don explore using redirection to manipulate data input and output. Here they cover the basics of redirecting command output to a file, redirecting file contents as the input data to commands, here statements, text markers, and piping.",
          "length": "1385",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-3-1-1-redirection-100317.00_29_01_04.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-3-1-1-redirection-100317.00_29_01_04.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-3-1-1-redirection-100317.00_29_01_04.Still001-sm.jpg",
          "title": "Redirection",
          "transcript": "",
          "vimeoId": "236792741"
        },
        {
          "description": "In this episode, Daniel and Don explore performing mathematical\ncomputation using various techniques in a bash script. Here they show you how\nto perform arithmetic using bash internal functionality as well as calling on\nthe power of the Bash Calculator(bc) to work with the more complex math done.",
          "length": "1884",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-3-2-1-performing_arithmetic-100317-PGM.00_31_09_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-3-2-1-performing_arithmetic-100317-PGM.00_31_09_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-3-2-1-performing_arithmetic-100317-PGM.00_31_09_18.Still001-sm.jpg",
          "title": "Performing Arithmetic",
          "transcript": "",
          "vimeoId": "236794059"
        }
      ],
      "title": "Performing Math"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Don take a look at using conditional\nlogic statements in bash scripts. Here they will introduce you to working with\nif-then, if-then-else, and if-elif-else for complex decision making within scripts.",
          "length": "1921",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-4-1-1-conditional_statements-100317-PGM.00_31_44_27.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-4-1-1-conditional_statements-100317-PGM.00_31_44_27.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-4-1-1-conditional_statements-100317-PGM.00_31_44_27.Still001-sm.jpg",
          "title": "Conditional Statements",
          "transcript": "",
          "vimeoId": "236793257"
        },
        {
          "description": "In this episode, Daniel and Don take a look at using conditional\nlogic statements in bash scripts. Here they pick back up by exploring nested if\nstatements and using the test condition; taking advantage test’s condition classes\nwhich includes, numeric comparisons, string comparisons, and file comparisons.",
          "length": "2026",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-4-1-2-conditional_statements_pt_2-100417-PGM.00_34_49_14.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-4-1-2-conditional_statements_pt_2-100417-PGM.00_34_49_14.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-4-1-2-conditional_statements_pt_2-100417-PGM.00_34_49_14.Still001-sm.jpg",
          "title": "Conditional Statements Part 2",
          "transcript": "",
          "vimeoId": "236929874"
        },
        {
          "description": "In this episode, Daniel and Don take a look at using conditional\nlogic statements in bash scripts. Here they finish their discussion by going\nover compound testing; employing boolean logic as well as when to use double\nparenthesis(()) and/or double brackets[[]]. Finally they show you the case\nconditional statement, both its format and functions.",
          "length": "1996",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-4-1-3-conditional_statements_pt_3-100417-PGM.00_32_59_26.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-4-1-3-conditional_statements_pt_3-100417-PGM.00_32_59_26.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-4-1-3-conditional_statements_pt_3-100417-PGM.00_32_59_26.Still001-sm.jpg",
          "title": "Conditional Statements Part 3",
          "transcript": "",
          "vimeoId": "236928772"
        }
      ],
      "title": "Exiting Scripts"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Don explore the use\nof loops in bash scripts. Here they will define what loops are\nand how they work, and then go deeper by demonstrating and\nexplaining in detail the “for loop”.",
          "length": "1931",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-5-1-1-loops-100417-BLOOPER.00_31_56_04.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-5-1-1-loops-100417-BLOOPER.00_31_56_04.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-5-1-1-loops-100417-BLOOPER.00_31_56_04.Still001-sm.jpg",
          "title": "Loops",
          "transcript": "",
          "vimeoId": "237100458"
        },
        {
          "description": "In this episode, Daniel and Don continue their\ndiscussion on loops in bash scripts. Here they cover changing\nthe Internal Field Separator(IFS) for various reasons, “C-style\nfor loops”, “while loops”, and “until loops”.",
          "length": "1871",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-5-1-2-loops_pt_2-100517-PGM.00_30_55_25.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-5-1-2-loops_pt_2-100517-PGM.00_30_55_25.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-5-1-2-loops_pt_2-100517-PGM.00_30_55_25.Still001-sm.jpg",
          "title": "Loops Part 2",
          "transcript": "",
          "vimeoId": "237099426"
        },
        {
          "description": "In this episode, Daniel and Justin finish up their look at the various loop functions in bash scripts. Here they go over the function and use of “Nested loops” as well as the “break” and “continue” commands.",
          "length": "1496",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-5-1-3-loops_pt_3-100617-PGM.00_37_17_27.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-5-1-3-loops_pt_3-100617-PGM.00_37_17_27.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-5-1-3-loops_pt_3-100617-PGM.00_37_17_27.Still001-sm.jpg",
          "title": "Loops Part 3",
          "transcript": "",
          "vimeoId": "237098619"
        }
      ],
      "title": "Structured Commands"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Justin go over working with postional parameters in conjunction with bash scripts. Here they define positional and their special variables; showing their incorporation into your scripts to pass information from the user. They also look at the shift command for moving parameters when necessary.",
          "length": "1611",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-1-1-user_input_positional_parameters-100617-PGM.00_26_36_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-1-1-user_input_positional_parameters-100617-PGM.00_26_36_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-1-1-user_input_positional_parameters-100617-PGM.00_26_36_18.Still001-sm.jpg",
          "title": "User Input Positional Parameters",
          "transcript": "",
          "vimeoId": "237584506"
        },
        {
          "description": "In this episode, Daniel and Justin go over working with postional parameters in conjunction with bash scripts. Here they define positional and their special variables; showing their incorporation into your scripts to pass information from the user. They also look at the shift command for moving parameters when necessary.",
          "length": "1064",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-1-2-user_input_positional_parameters_pt_2-100617-PGM.00_22_23_07.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-1-2-user_input_positional_parameters_pt_2-100617-PGM.00_22_23_07.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-1-2-user_input_positional_parameters_pt_2-100617-PGM.00_22_23_07.Still001-sm.jpg",
          "title": "User Input Positional Parameters Pt 2",
          "transcript": "",
          "vimeoId": "237584332"
        },
        {
          "description": "In this episode, Daniel and Justin explore passing options to a script from the runline. Here they define what options are and how they are typically used. Then they look at passing options with conditional values/arguments.",
          "length": "1662",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-2-1-user_input_options-100917.00_27_28_24.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-2-1-user_input_options-100917.00_27_28_24.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-2-1-user_input_options-100917.00_27_28_24.Still001-sm.jpg",
          "title": "User Input Options",
          "transcript": "",
          "vimeoId": "237597886"
        },
        {
          "description": "In this episode, Daniel and Justin continue looking at passing options to a shell script from the runline. Here they show you how to employ getopt and getopts for expanding option functionality. They also briefly discuss option standardization for better ease-of-use.",
          "length": "1842",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-2-2-user_input_options_pt_2-100917.00_36_41_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-2-2-user_input_options_pt_2-100917.00_36_41_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-2-2-user_input_options_pt_2-100917.00_36_41_01.Still001-sm.jpg",
          "title": "User Input Options Part 2",
          "transcript": "",
          "vimeoId": "237597309"
        },
        {
          "description": "In this episode, Daniel and Justin show you how to accept input from the user in real-time with “read”. Here they will explore read’s basic format and options, all the while showing you examples based on each function for context.",
          "length": "1884",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-3-1-user_input_read-101117-PGM.00_32_09_12.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-3-1-user_input_read-101117-PGM.00_32_09_12.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-6-3-1-user_input_read-101117-PGM.00_32_09_12.Still001-sm.jpg",
          "title": "User Input Read",
          "transcript": "",
          "vimeoId": "237906849"
        }
      ],
      "title": "Handling User Input"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Justin take another look\nat redirection, this time focusing on Linux File Descriptors for the\npurposes of controlling user presented data. Here they will explain\nFile Descriptors and then show the many ways in which we can\nredirect their output in a scripting context.",
          "length": "1915",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-7-1-1-presenting_data_file_descriptors-101017-PGM.00_32_50_01.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-7-1-1-presenting_data_file_descriptors-101017-PGM.00_32_50_01.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-7-1-1-presenting_data_file_descriptors-101017-PGM.00_32_50_01.Still001-sm.jpg",
          "title": "Presenting Data File Descriptors",
          "transcript": "",
          "vimeoId": "237759349"
        }
      ],
      "title": "Presenting Data"
    },
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Justin show you how to control\nscript execution. Here they will explain and demonstrate running scripts\nas background jobs and employing “nohup” to ensure they run without\ninterruption. They also tackle changing script priority using nice and\nrenice. Finally, they look at scheduling script execution with “AT”.",
          "length": "1883",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-8-1-1-script_control-101017-PGM.00_33_11_11.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-8-1-1-script_control-101017-PGM.00_33_11_11.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-8-1-1-script_control-101017-PGM.00_33_11_11.Still001-sm.jpg",
          "title": "Script Control",
          "transcript": "",
          "vimeoId": "237759698"
        },
        {
          "description": "In this episode, Daniel and Justin continue looking at\nscript control, this time walking you through job scheduling through\nthe use of the cron/crontab system as well as anacron for running\njobs that missed their time-slot.",
          "length": "1469",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-8-1-2-script_control_pt_2-101017-PGM.00_24_15_00.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-8-1-2-script_control_pt_2-101017-PGM.00_24_15_00.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxshellscriptingbasics/techskills-linuxshellscriptingbasics-8-1-2-script_control_pt_2-101017-PGM.00_24_15_00.Still001-sm.jpg",
          "title": "Script Control Part 2",
          "transcript": "",
          "vimeoId": "237759042"
        }
      ],
      "title": "Script Control"
    }
  ],
  "url": "linux-shell-scripting-basics",
  "vLab": false
}
