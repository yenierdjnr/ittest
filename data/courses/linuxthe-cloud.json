{
  "description": "The Linux in the Cloud series focuses on implementing the Linux operating system in a virtualized environment. Companies are relying less and less on dedicated hardware and are instead turning to shared hardware to optimize resource utilization and increase deployment flexibility. The hosts demonstrate virtualizing Linux using technologies like KVM and Docker as well as public cloud deployments using Amazon EC2 and Microsoft Azure.",
  "descriptionMD": "The *Linux in the Cloud series* focuses on implementing the Linux operating system in a virtualized environment. Companies are relying less and less on dedicated hardware and are instead turning to shared hardware to optimize resource utilization and increase deployment flexibility. The hosts demonstrate virtualizing Linux using technologies like KVM and Docker as well as public cloud deployments using Amazon EC2 and Microsoft Azure.",
  "length": "19139",
  "name": "Linux in the Cloud",
  "practiceExam": false,
  "subtitle": "Configuring Linux in a cloud environment",
  "tagUrl": "systems-admin",
  "topics": [
    {
      "episodes": [
        {
          "description": "The Linux in the Cloud series focuses on implementing the Linux operating system in a virtualized environment. Companies are relying less and less on dedicated hardware and are instead turning to shared hardware to optimize resource utilization and increase deployment flexibility. The hosts demonstrate virtualizing Linux using technologies like KVM and Docker as well as public cloud deployments using Amazon EC2 and Microsoft Azure.",
          "length": "210",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-0-0-overview-082917-PGM.00_05_17_09.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-0-0-overview-082917-PGM.00_05_17_09.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-0-0-overview-082917-PGM.00_05_17_09.Still001-sm.jpg",
          "title": "Overview",
          "transcript": "WEBVTT\n\n1\n00:00:00.097 --> 00:00:05.836\n[MUSIC]\n\n2\n00:00:05.836 --> 00:00:09.620\nHello and thank you for joining us for\nthis overview of Linux in the Cloud.\n\n3\n00:00:09.620 --> 00:00:11.460\nDon can you tell us about\nLinux in the Cloud?\n\n4\n00:00:11.460 --> 00:00:12.110\nWhat is it all about?\n\n5\n00:00:12.110 --> 00:00:15.800\n&gt;&gt; Well in this series we're gonna be\ntaking a look at what it's like to run\n\n6\n00:00:15.800 --> 00:00:19.100\nthe Linux operating system on\ntop of various cloud services.\n\n7\n00:00:19.100 --> 00:00:21.970\nA lot of people are virtualizing\nenvironments now, either doing\n\n8\n00:00:21.970 --> 00:00:26.130\nit in private clouds or public clouds and\nclinics is a big part of that.\n\n9\n00:00:26.130 --> 00:00:31.490\nFor the most, it runs kind of the same\non an actual hardware verses on cloud or\n\n10\n00:00:31.490 --> 00:00:32.300\nvirtualized hardware.\n\n11\n00:00:32.300 --> 00:00:34.550\nBut in this series we're gonna\nfocus on those little differences,\n\n12\n00:00:34.550 --> 00:00:38.650\nthe things that make it a little bit\ndifferent that people get intimidated by.\n\n13\n00:00:38.650 --> 00:00:40.630\nThe view it as a risk,\nthey don't want to deploy.\n\n14\n00:00:40.630 --> 00:00:43.910\nWe're gonna take a look at what's involved\nin that and see what it takes to actually\n\n15\n00:00:43.910 --> 00:00:46.990\nget this up and\nrunning in a modern cloud infrastructure.\n\n16\n00:00:46.990 --> 00:00:49.550\n&gt;&gt; Okay, and\nwho is this show targeted towards?\n\n17\n00:00:49.550 --> 00:00:51.968\n&gt;&gt; Mainly this is gonna be targeted\ntowards system administrators.\n\n18\n00:00:51.968 --> 00:00:55.424\nIf you're responsible for supporting\na Linux infrastructure, and you've got\n\n19\n00:00:55.424 --> 00:00:59.000\non-premises equipment and now you're\nstarting to make that step into the cloud.\n\n20\n00:00:59.000 --> 00:01:02.040\nBe it a private cloud with your\nown virtualization servers or\n\n21\n00:01:02.040 --> 00:01:04.930\na public cloud with Amazon,\nor Microsoft, or\n\n22\n00:01:04.930 --> 00:01:08.810\nsomebody like that,\nit's a little tricky to make that jump.\n\n23\n00:01:08.810 --> 00:01:10.920\nAnd so\nthis is really targeted towards you.\n\n24\n00:01:10.920 --> 00:01:13.740\n&gt;&gt; So Don,\nis there a certification involved in this?\n\n25\n00:01:13.740 --> 00:01:15.600\n&gt;&gt; There's a number of cloud\ncertifications out there, but\n\n26\n00:01:15.600 --> 00:01:16.660\nwe're not gonna focus on that.\n\n27\n00:01:16.660 --> 00:01:19.440\nWe're just gonna try and\nkeep this as an introductory type thing,\n\n28\n00:01:19.440 --> 00:01:21.020\nthat's general audience.\n\n29\n00:01:21.020 --> 00:01:24.350\nIf you just wanna learn and be aware,\nthat's what this series is all about.\n\n30\n00:01:24.350 --> 00:01:28.044\nSo it's more focused on a technical\nskill than it is a certification.\n\n31\n00:01:28.044 --> 00:01:30.039\n&gt;&gt; And,\nwhat topics are available in this show?\n\n32\n00:01:30.039 --> 00:01:33.520\n&gt;&gt; Well, we're really covering\npretty much anything people ask for.\n\n33\n00:01:33.520 --> 00:01:37.770\nBut the main ones that we're gonna cover\nhere initially are gonna be Linux on KVM.\n\n34\n00:01:37.770 --> 00:01:39.540\nKVM is tha Kernel Virtual Machine.\n\n35\n00:01:39.540 --> 00:01:43.810\nIt's the service that really Amazon\nweb services uses under the hood,\n\n36\n00:01:43.810 --> 00:01:44.840\nyou can run it privately.\n\n37\n00:01:44.840 --> 00:01:47.044\nSo we'll talk about it KVM host and\n\n38\n00:01:47.044 --> 00:01:50.315\nthen actually run Linux as\nKVM guest on top of that.\n\n39\n00:01:50.315 --> 00:01:54.112\nSo creating a virtualized environment\nentirely off of open source KVM.\n\n40\n00:01:54.112 --> 00:01:56.107\nThen we'll take a look at Amazon EC2.\n\n41\n00:01:56.107 --> 00:01:59.993\nSo if you're using the elastic compute\ncloud and you're deploying instances,\n\n42\n00:01:59.993 --> 00:02:03.949\nVM's there, we'll see what it's like to\nget Linux up and running inside of AWS.\n\n43\n00:02:03.949 --> 00:02:06.065\nThen we're gonna move into\nthe Microsoft side of thing,\n\n44\n00:02:06.065 --> 00:02:07.220\nI know it's funny to say that.\n\n45\n00:02:07.220 --> 00:02:08.840\nWell we're gonna talk about\nMicrosoft on a Linux show.\n\n46\n00:02:08.840 --> 00:02:12.424\nBut it's really important because\nMicrosoft Azure is the number two player\n\n47\n00:02:12.424 --> 00:02:16.019\nin cloud services right now, they have\ncreated a massive infrastructure.\n\n48\n00:02:16.019 --> 00:02:18.611\nSo we'll see how to build up\nour Linux virtual machines,\n\n49\n00:02:18.611 --> 00:02:20.075\nget them thrown on top of Azure.\n\n50\n00:02:20.075 --> 00:02:23.898\nAnd even though we're using a Microsoft\nservice we can still say in the Linux\n\n51\n00:02:23.898 --> 00:02:26.390\nworld and deploy things that we want.\n\n52\n00:02:26.390 --> 00:02:30.520\nAnd then we're also going to really\nbridge the gap and talk about Docker.\n\n53\n00:02:30.520 --> 00:02:34.520\nDocker is a IT industry buzz word and\nif you're a developer, you've\n\n54\n00:02:34.520 --> 00:02:38.080\ngot to learn that system administrators\nare largely being neglected on this.\n\n55\n00:02:38.080 --> 00:02:42.460\nAnd so I wanna take the time to show you\nguys what Docker is, how it works, and\n\n56\n00:02:42.460 --> 00:02:45.570\nwe'll see how we can run Linux\ninside of our Docker containers.\n\n57\n00:02:45.570 --> 00:02:49.340\nAs well as use Linux as our Docker host\nto be able to power that environment and\n\n58\n00:02:49.340 --> 00:02:50.570\ngive a chance to see that.\n\n59\n00:02:50.570 --> 00:02:53.810\nSo these are all pretty typical\ncloud type deployments, and\n\n60\n00:02:53.810 --> 00:02:56.570\nwe're gonna walk through them,\nget comfortable with it, and\n\n61\n00:02:56.570 --> 00:03:00.710\nmake it where we can all recognize how\nwe can be using Linux as a ,loud OS.\n\n62\n00:03:00.710 --> 00:03:01.340\n&gt;&gt; Thank you, Don.\n\n63\n00:03:01.340 --> 00:03:06.033\nSo Linux in the Cloud sounds like a show\nyou'd be interested in, and it should be,\n\n64\n00:03:06.033 --> 00:03:09.518\nwatch every single episode of\nLinux in the Cloud on ITProTV.\n\n65\n00:03:09.518 --> 00:03:14.243\n[MUSIC]\n\n",
          "vimeoId": "231746395"
        },
        {
          "description": "Don and Zach cover what is a KVM, how to know if your system supports KVM, how to find out if you have VMX or SVM, how to install KVM, rebooting after install, how we mange the server, and configuring KVM.",
          "length": "1844",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-1-1-1-linux_as_a_kvm_host-082317-PGM.00_30_27_24.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-1-1-1-linux_as_a_kvm_host-082317-PGM.00_30_27_24.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-1-1-1-linux_as_a_kvm_host-082317-PGM.00_30_27_24.Still001-sm.jpg",
          "title": "Linux as a KVM Host",
          "transcript": "WEBVTT\n\n1\n00:00:00.950 --> 00:00:01.986\nWelcome to ITProTV, I'm your host.\n\n2\n00:00:01.986 --> 00:00:06.281\n[CROSSTALK]\n\n3\n00:00:06.281 --> 00:00:08.098\n[MUSIC]\n\n4\n00:00:08.098 --> 00:00:10.903\n&gt;&gt; You're watching ITVProTV.\n\n5\n00:00:10.903 --> 00:00:12.045\n[MUSIC]\n\n6\n00:00:12.045 --> 00:00:14.224\n&gt;&gt; Hello and thank you for\nchoosing ITProTV,\n\n7\n00:00:14.224 --> 00:00:16.490\nhelping you learn everywhere you go.\n\n8\n00:00:16.490 --> 00:00:20.890\nI'm your host, Zach Memos,\nas we begin with Linux in the cloud, and\n\n9\n00:00:20.890 --> 00:00:24.150\nthis is Linux as a KVM host,\nwhat does that mean?\n\n10\n00:00:24.150 --> 00:00:26.390\nWell, Don Pezet is here\nbecause he's our expert, and\n\n11\n00:00:26.390 --> 00:00:28.760\nhe's gonna tell us exactly what\nthat means, aren't you, Don?\n\n12\n00:00:28.760 --> 00:00:29.350\n&gt;&gt; Absolutely,\n\n13\n00:00:29.350 --> 00:00:33.530\nso in this episode we're gonna be taking\na look at using Linux as a KVM host.\n\n14\n00:00:33.530 --> 00:00:37.920\nAnd KVM is a virtualization software\npackage that we can load on top of Linux\n\n15\n00:00:37.920 --> 00:00:39.080\nas an operating system.\n\n16\n00:00:39.080 --> 00:00:42.170\nNow this series is the Linux\nin the cloud series, and\n\n17\n00:00:42.170 --> 00:00:44.980\nyou might be asking yourself,\nhow does this tie into the cloud?\n\n18\n00:00:44.980 --> 00:00:48.590\nWell, what you'll find is that most of\nthe cloud providers that are out there,\n\n19\n00:00:48.590 --> 00:00:50.268\nlike Amazon with Amazon Web Services,\n\n20\n00:00:50.268 --> 00:00:54.375\ntheir virtualization technology's\nbuilt on top of Xen.\n\n21\n00:00:54.375 --> 00:00:58.275\nAnd Xen is actually built off of KVM,\nit's a fork of KVM.\n\n22\n00:00:58.275 --> 00:01:02.405\nSo this technology that we're gonna\nlook at here is really a staple of\n\n23\n00:01:02.405 --> 00:01:06.255\nvirtualization technologies all across\nthe world, it's used everywhere.\n\n24\n00:01:06.255 --> 00:01:10.385\nWell, when we set up a cloud, what we're\nreally talking about are virtual servers\n\n25\n00:01:10.385 --> 00:01:12.260\nrunning in a virtualized environment.\n\n26\n00:01:12.260 --> 00:01:16.790\nIt doesn't have to be a public\ncloud like Amazon Web Services or\n\n27\n00:01:16.790 --> 00:01:20.100\nMicrosoft Azure or whatever,\nit can be a private cloud.\n\n28\n00:01:20.100 --> 00:01:24.580\nIf it's a private cloud, if you're setting\nup your own cloud in your own company,\n\n29\n00:01:24.580 --> 00:01:28.340\nthen you don't use the AWS technologies,\nyou use your own.\n\n30\n00:01:28.340 --> 00:01:32.567\nAnd if you're gonna do that,\na great way to do it is with Linux KVM.\n\n31\n00:01:32.567 --> 00:01:36.051\nIt's good enough for the big guys,\nit's good enough for your company, so\n\n32\n00:01:36.051 --> 00:01:39.280\nif we wanna deploy that,\nyou find that it's actually not that hard.\n\n33\n00:01:39.280 --> 00:01:44.160\nThat we can take just about any Linux\ndistribution, tack KVM on top of it, and\n\n34\n00:01:44.160 --> 00:01:47.489\nall of a sudden, we've got a great\nvirtual machine host configured, and\n\n35\n00:01:47.489 --> 00:01:48.795\nwe built our own private cloud.\n\n36\n00:01:48.795 --> 00:01:49.480\nSo that's what\n\n37\n00:01:49.480 --> 00:01:51.550\nwe're gonna take a look at right here\nin this episode of setting it up.\n\n38\n00:01:51.550 --> 00:01:55.230\nAnd we'll follow it up with other episodes\non getting our guests fired up on it, and\n\n39\n00:01:55.230 --> 00:01:56.520\ngetting those configured.\n\n40\n00:01:56.520 --> 00:01:59.976\nBut on the server side, this is where we\nstart, we're gonna take a Linux box and\n\n41\n00:01:59.976 --> 00:02:02.556\nactually get it set up to be able\nto host virtual machines and\n\n42\n00:02:02.556 --> 00:02:05.470\nprovide that cloud infrastructure,\nin our own private company.\n\n43\n00:02:05.470 --> 00:02:07.993\n&gt;&gt; So now you've got me very excited,\nand very intrigued, so\n\n44\n00:02:07.993 --> 00:02:10.931\nlet's find out more about KVM,\nwhat exactly is it, how do we get it?\n\n45\n00:02:10.931 --> 00:02:14.506\n&gt;&gt; All right, KVM, it stands for\nKernel Virtual Machine, and\n\n46\n00:02:14.506 --> 00:02:18.896\nit's an extension that gets tacked\nonto the kernel of your Linux distro.\n\n47\n00:02:18.896 --> 00:02:24.072\nSo there's a ton of distros, there's\nUbuntu, Red Hat, Fedora, and Debian.\n\n48\n00:02:24.072 --> 00:02:25.008\nAt the end of the day,\n\n49\n00:02:25.008 --> 00:02:28.010\nthough, under the hood,\nthey're all running the Linux kernel.\n\n50\n00:02:28.010 --> 00:02:29.984\nIt might be a different version\nof the Linux kernel, but\n\n51\n00:02:29.984 --> 00:02:31.374\nthey are all running the Linux kernel.\n\n52\n00:02:31.374 --> 00:02:36.149\nAnd there's a module we can stick\nonto that kernel that allows it to\n\n53\n00:02:36.149 --> 00:02:38.580\nact as a type one hypervisor.\n\n54\n00:02:38.580 --> 00:02:42.508\nNow, what is a type one hypervisor, a type\none hypervisor is like a traffic cop.\n\n55\n00:02:42.508 --> 00:02:46.383\nIt says, if you're gonna run five virtual\nmachines, you don't want just one virtual\n\n56\n00:02:46.383 --> 00:02:50.010\nmachine grabbing the CPU and holding it,\nand everybody else is just out of luck.\n\n57\n00:02:50.010 --> 00:02:52.483\nSo a type one hypervisor kind\nof acts as a gate, and it says,\n\n58\n00:02:52.483 --> 00:02:55.844\nhere's this virtual machine, that's\nallowed to access the CPU right now, and\n\n59\n00:02:55.844 --> 00:02:58.774\nas soon as it's done, then we let\nmachine two and then machine three.\n\n60\n00:02:58.774 --> 00:03:03.009\nWe kind of rotate through, so t's gating\nthat access, the virtual machines\n\n61\n00:03:03.009 --> 00:03:06.865\nare seeing the actual hardware, so\nthey perform at very high speeds.\n\n62\n00:03:06.865 --> 00:03:10.561\nThey function really, really well because\nthey're seeing the real hardware, and\n\n63\n00:03:10.561 --> 00:03:13.970\nthe type one hypervisor is\nhandling that concurrent access.\n\n64\n00:03:13.970 --> 00:03:18.140\nNow, not every guest OS that is\nout there will support that,\n\n65\n00:03:18.140 --> 00:03:21.030\nsome operating systems really\njust don't understand,\n\n66\n00:03:21.030 --> 00:03:23.660\nthey aren't able to deal with\nthat direct hardware access.\n\n67\n00:03:23.660 --> 00:03:27.660\nAnd so in those scenarios, we have to\ndo what's called emulated hardware.\n\n68\n00:03:27.660 --> 00:03:31.540\nAn emulated hardware is where\nthey don't see the real CPU,\n\n69\n00:03:31.540 --> 00:03:36.550\nthey don't see the real RAM,\ninstead they see fake RAM and a fake CPU.\n\n70\n00:03:36.550 --> 00:03:39.510\nAnd then the hypervisor has to take\nthe calls to that fake CPU and\n\n71\n00:03:39.510 --> 00:03:41.570\ntranslate it into calls to a real CPU.\n\n72\n00:03:41.570 --> 00:03:45.550\nThat's called a type two hypervisor,\nand type two hypervisors are slower.\n\n73\n00:03:45.550 --> 00:03:48.350\nThey're more compatible,\nalmost every OS out there will\n\n74\n00:03:48.350 --> 00:03:51.777\nrun as a guest OS on a type two\nhypervisor, but they're slower.\n\n75\n00:03:51.777 --> 00:03:57.200\nSo in general, type two hypervisors\nare used in test and R&amp;D environments.\n\n76\n00:03:57.200 --> 00:03:59.562\nAnd type one hypervisors are used\nin production whenever possible,\n\n77\n00:03:59.562 --> 00:04:02.100\ncuz they give you the best performance and\nspeed.\n\n78\n00:04:02.100 --> 00:04:05.400\nWell, KVM is a type one hypervisor,\n\n79\n00:04:05.400 --> 00:04:08.140\nit runs these virtual\nmachines at near meta speeds.\n\n80\n00:04:08.140 --> 00:04:11.345\nIt does a really good job of it, and\nit's completely free, it's open source.\n\n81\n00:04:11.345 --> 00:04:14.190\nIt's baked right in to most Linux distros,\nor we can install it really,\n\n82\n00:04:14.190 --> 00:04:18.194\nreally easy, and get it put in place,\nand now we're doing that.\n\n83\n00:04:18.194 --> 00:04:23.476\nBut KVM is normally packaged with\nanother product, a product called QEMU.\n\n84\n00:04:23.476 --> 00:04:26.307\nQEMU stands for Quick Emulator, and\n\n85\n00:04:26.307 --> 00:04:31.610\nQuick Emulator is a little program\nthat is a type two hypervisor.\n\n86\n00:04:31.610 --> 00:04:36.580\nIt handles emulating hardware,\ncreating fake hardware, and by doing that,\n\n87\n00:04:36.580 --> 00:04:39.340\nit allows us to support guests that\nwouldn't normally run on top of KVM.\n\n88\n00:04:39.340 --> 00:04:42.310\nSo when you install one,\nyou're normally installing both, so\n\n89\n00:04:42.310 --> 00:04:43.880\nI wanted to mention that\nhere in the beginning,\n\n90\n00:04:43.880 --> 00:04:47.150\ncuz we're gonna see QEMU pop up\na few times throughout the show.\n\n91\n00:04:47.150 --> 00:04:51.060\nBut know that everything that\nI'm doing is really intended to\n\n92\n00:04:51.060 --> 00:04:54.440\nbe done on the KVM side, it just\nhappens that QEMU comes along with it.\n\n93\n00:04:54.440 --> 00:04:58.060\nAnd so when configured properly,\nyou'll be using KVM for everything,\n\n94\n00:04:58.060 --> 00:04:59.800\nand QEMU just kinda sits there.\n\n95\n00:04:59.800 --> 00:05:03.515\nBut there are times when QEMU still gets\nused, like with network card drivers,\n\n96\n00:05:03.515 --> 00:05:06.343\ngets used a lot to help create\nthe virtual network adapters so\n\n97\n00:05:06.343 --> 00:05:08.237\nthat all the traffic is isolated right.\n\n98\n00:05:08.237 --> 00:05:11.914\nQEMU actually does a better job\nwith that than KVM does, and so\n\n99\n00:05:11.914 --> 00:05:16.120\nit'll take over that role, and\nthe two really work hand in hand.\n\n100\n00:05:16.120 --> 00:05:20.520\nSo we're not just installing KVM,\nwe're installing KVM and QEMU together,\n\n101\n00:05:20.520 --> 00:05:24.170\nputting them on our system, and they\nget in there and they take care of it.\n\n102\n00:05:24.170 --> 00:05:27.863\nSo as long as we've got hardware that\nsupports it, we can install this, and\n\n103\n00:05:27.863 --> 00:05:31.692\nnow we've got a KVM host up and going,\nand we're creating our private cloud.\n\n104\n00:05:31.692 --> 00:05:34.636\n&gt;&gt; So\nhow do we know if our system supports KVM?\n\n105\n00:05:34.636 --> 00:05:39.350\n&gt;&gt; Well, most hardware today does, so\nif you go and you buy a server from HP or\n\n106\n00:05:39.350 --> 00:05:41.722\nDell, or you build your own server.\n\n107\n00:05:41.722 --> 00:05:45.535\nPlenty of people white box it, and not\nlittle people, like Facebook and Google,\n\n108\n00:05:45.535 --> 00:05:46.981\nthey build their own servers.\n\n109\n00:05:46.981 --> 00:05:50.728\nYou can certainly do that, and\nthe odds are, you'll just luck out, and\n\n110\n00:05:50.728 --> 00:05:52.762\nit will support full virtualization.\n\n111\n00:05:52.762 --> 00:05:55.980\nBut type one hypervisors,\nthe way they function is,\n\n112\n00:05:55.980 --> 00:06:01.070\nthey rely on these virtualization\nextensions that are built into the CPU.\n\n113\n00:06:01.070 --> 00:06:05.069\nSo when you get that Intel CPU,\nlike a i7 or a Xeon,\n\n114\n00:06:05.069 --> 00:06:09.174\nor you get an AMD CPU,\nbecause somebody buys those.\n\n115\n00:06:09.174 --> 00:06:10.754\n&gt;&gt; [LAUGH]\n&gt;&gt; When you get those,\n\n116\n00:06:10.754 --> 00:06:14.070\nthen you normally see-\n&gt;&gt; And that's another story.\n\n117\n00:06:14.070 --> 00:06:16.708\n&gt;&gt; We don't typically see AMD in\nthe server market, you normally see\n\n118\n00:06:16.708 --> 00:06:20.070\nit in the workstation market, and we're\nnot usually running KVM on a workstation.\n\n119\n00:06:20.070 --> 00:06:24.323\nYou certainly can, though, so\nif you've got an AMD CPU in your laptop,\n\n120\n00:06:24.323 --> 00:06:26.642\nyou probably still could run KVM on it.\n\n121\n00:06:26.642 --> 00:06:29.525\nBut you need to make sure it's got\nthe virtualization extensions.\n\n122\n00:06:29.525 --> 00:06:34.110\nNow, the easiest way to do that is\nif you know what processor you have,\n\n123\n00:06:34.110 --> 00:06:35.990\nlike I've got an Intel i7.\n\n124\n00:06:35.990 --> 00:06:39.519\nIf I know the model number, I can just go\nto Intel's website and look it up, and\n\n125\n00:06:39.519 --> 00:06:40.762\nit'll tell me if it has it.\n\n126\n00:06:40.762 --> 00:06:43.597\nOr if I have an AMD processor,\nI can go to AMD's website and look it up,\n\n127\n00:06:43.597 --> 00:06:45.860\nand it'll tell me if its got that feature.\n\n128\n00:06:45.860 --> 00:06:49.500\nThe only problem with that method,\nit's thorough, it certainly works, but\n\n129\n00:06:49.500 --> 00:06:51.180\nthe problem is, a lot of times,\n\n130\n00:06:51.180 --> 00:06:54.730\nyou can disable the virtualization\ntechnologies in the BIOS in your system.\n\n131\n00:06:54.730 --> 00:06:56.653\nSo, if it's turned off in BIOS,\n\n132\n00:06:56.653 --> 00:07:01.790\nthen it doesn't matter if the processor\nsupports it or not, I'm not gonna see it.\n\n133\n00:07:01.790 --> 00:07:05.530\nSo I need to know, one,\nthat I have the features, and\n\n134\n00:07:05.530 --> 00:07:07.530\ntwo, that they're turned on in my BIOS.\n\n135\n00:07:07.530 --> 00:07:10.120\nAnd so instead of going to the vendor\nwebsite, I don't normally do that,\n\n136\n00:07:10.120 --> 00:07:12.980\nI normally just look at what\nLinux is detecting on my system.\n\n137\n00:07:12.980 --> 00:07:16.860\nSo we'll use my laptop here as\nthe example, and on my laptop,\n\n138\n00:07:16.860 --> 00:07:19.550\nI've got a an Intel i7, but it's a laptop.\n\n139\n00:07:19.550 --> 00:07:23.760\nSo it's a mobile processor,\nnot necessarily a full desktop CPU,\n\n140\n00:07:23.760 --> 00:07:26.900\nso do I know if I have those\nvirtualization extensions?\n\n141\n00:07:26.900 --> 00:07:29.896\nWell, again,\nI can look it up on Intel's website, or\n\n142\n00:07:29.896 --> 00:07:33.624\nI can drop to the command prompt and\nI can look for these extensions.\n\n143\n00:07:33.624 --> 00:07:37.858\nNow, the extensions have different names,\nthere's the AMD ones,\n\n144\n00:07:37.858 --> 00:07:42.238\nwhich are called, they call theirs SVM,\nor secured virtual machine,\n\n145\n00:07:42.238 --> 00:07:44.581\nand I expect to see those extensions.\n\n146\n00:07:44.581 --> 00:07:48.641\nOn the Intel side, Intel has actually more\nthan one name for those, but it's VMX,\n\n147\n00:07:48.641 --> 00:07:52.295\nthe virtual machine extensions, or\nsometimes you'll see it called VTX,\n\n148\n00:07:52.295 --> 00:07:54.383\nwhich is virtual technology extensions.\n\n149\n00:07:54.383 --> 00:07:57.632\nSo I wanna know if my processor has those,\nand\n\n150\n00:07:57.632 --> 00:08:02.949\nwe can We can do it a few different ways,\nthere's like a hard way, right?\n\n151\n00:08:02.949 --> 00:08:07.053\nI can go and dig through D message and\nyou start to pull up my output and\n\n152\n00:08:07.053 --> 00:08:09.869\ngo in here and\nfind where my CPU is identified.\n\n153\n00:08:09.869 --> 00:08:14.580\nAnd hope that the features were\nkinda called out when D message ran.\n\n154\n00:08:14.580 --> 00:08:16.030\nSo if I take a look and it goes to and\n\n155\n00:08:16.030 --> 00:08:19.680\ninitializes somewhere in here I'll\nfind where it initializes the CPU.\n\n156\n00:08:19.680 --> 00:08:21.255\nAnd we can start to find that information.\n\n157\n00:08:21.255 --> 00:08:24.560\nBut it can be a little bit\ndifficult to dig it up, I mean,\n\n158\n00:08:24.560 --> 00:08:27.020\nI could kill half our episode looking for\nthis stuff.\n\n159\n00:08:27.020 --> 00:08:29.796\n&gt;&gt; So Don, that was the hard way,\nis there an easy way?\n\n160\n00:08:29.796 --> 00:08:32.196\n&gt;&gt; Yeah, I don't normally go\nto D message on this stuff,\n\n161\n00:08:32.196 --> 00:08:34.869\nwhich is partly why I can't\nfind the CPU information there.\n\n162\n00:08:34.869 --> 00:08:39.910\nInstead, remember that in Unix everything\nis treated as file, even your processor.\n\n163\n00:08:39.910 --> 00:08:41.578\n&gt;&gt; Right.\n&gt;&gt; So you can get information about your\n\n164\n00:08:41.578 --> 00:08:43.129\nprocessor right from a simple file.\n\n165\n00:08:43.129 --> 00:08:45.989\nThe file actually has a ton of data in it,\nso\n\n166\n00:08:45.989 --> 00:08:51.562\nI'm gonna use the head command just to\nget the first ten lines of /proc/cpuinfo.\n\n167\n00:08:51.562 --> 00:08:55.420\nAnd before I do that, actually I'm\ngonna pseudo this to make sure that I'm\n\n168\n00:08:55.420 --> 00:08:58.370\nan administrator while I run it so\nthat I can get in there.\n\n169\n00:08:58.370 --> 00:09:01.130\nSometimes a regular user only\nhas access to so much stuff.\n\n170\n00:09:01.130 --> 00:09:03.590\nBut when I look in that,\nI can see what processor I have.\n\n171\n00:09:03.590 --> 00:09:04.852\nSo I have a genuine Intel.\n\n172\n00:09:04.852 --> 00:09:09.586\nMine is a Intel Core TMI77500U,\ngreat, right, that's what I have.\n\n173\n00:09:09.586 --> 00:09:10.730\n&gt;&gt; [LAUGH]\n&gt;&gt; And so\n\n174\n00:09:10.730 --> 00:09:16.560\nnow I could go to Intel's website, I can\nlook up this CPU, look up the I77500U.\n\n175\n00:09:16.560 --> 00:09:18.930\nAnd see if it's got those\nvirtualization extensions.\n\n176\n00:09:18.930 --> 00:09:22.100\nSo that's kinda step one\nif I wanna go that route.\n\n177\n00:09:22.100 --> 00:09:25.470\nIf I just wanna skip past that, I can.\n\n178\n00:09:25.470 --> 00:09:28.190\nBecause maybe I'll luck out in that\nit's already got the extensions and\n\n179\n00:09:28.190 --> 00:09:29.330\nit's already turned on in BIOS.\n\n180\n00:09:29.330 --> 00:09:31.550\nSo I don't have to go and\ndo anything too crazy.\n\n181\n00:09:31.550 --> 00:09:35.960\nIf I wanna find that out,\nI can looked in CPU info to try and\n\n182\n00:09:35.960 --> 00:09:38.000\nfind whether the extensions are turned on.\n\n183\n00:09:38.000 --> 00:09:40.970\nNow if you take a look at\nwhat's actually in there,\n\n184\n00:09:40.970 --> 00:09:45.170\nin fact I'm gonna SUDU-S just\nto get to a route shell.\n\n185\n00:09:45.170 --> 00:09:49.080\nBecause I am gonna have the SUDU\ndo a lot of stuff here.\n\n186\n00:09:49.080 --> 00:09:55.050\nSo now if I come in here,\nI'll just use LESS on/proc/cpuinfo.\n\n187\n00:09:55.050 --> 00:09:57.980\nIf you go in here,\nthere is quite a bit of information.\n\n188\n00:09:59.160 --> 00:10:02.884\nAnd right here is this wall of text.\n\n189\n00:10:02.884 --> 00:10:06.319\nThese are all the extensions\nthat are included with the CPU.\n\n190\n00:10:06.319 --> 00:10:12.680\nAnd you can sift through this list and\nyou can try and find SVM or VMX.\n\n191\n00:10:12.680 --> 00:10:14.680\nOn an Intel processor,\nI'd be looking for VMX.\n\n192\n00:10:14.680 --> 00:10:16.750\nSo do I have VMX support?\n\n193\n00:10:16.750 --> 00:10:18.410\nAnd I can look through and\ntry and find it.\n\n194\n00:10:18.410 --> 00:10:19.566\nNow I'm bad at that stuff.\n\n195\n00:10:19.566 --> 00:10:25.180\nI could use search functionality to\nsearch for VMX, and there it is.\n\n196\n00:10:25.180 --> 00:10:27.200\nActually I wouldn't have\nspotted it cuz it word wraps.\n\n197\n00:10:27.200 --> 00:10:29.240\nI get VM up here and X down there.\n\n198\n00:10:29.240 --> 00:10:31.259\nBut I can see really\nquick that I've got it.\n\n199\n00:10:31.259 --> 00:10:33.984\nOr if you wanna do this\na little bit easier,\n\n200\n00:10:33.984 --> 00:10:37.406\nI'll normally do like this\nwhere I'll say grip-e.\n\n201\n00:10:37.406 --> 00:10:43.094\nAnd then I'm looking for VMX and\nthen I'll do a pipe SVM like that.\n\n202\n00:10:43.094 --> 00:10:46.972\nSo I'm looking for either one VMX or\n\n203\n00:10:46.972 --> 00:10:50.859\nSVM in /proc/cpuinfo like that.\n\n204\n00:10:50.859 --> 00:10:53.987\nSo just look at the processor,\nI don't even know if it's AND or\n\n205\n00:10:53.987 --> 00:10:55.000\nIntel just tell me.\n\n206\n00:10:55.000 --> 00:10:57.304\nDo you see VMX or SVM?\n\n207\n00:10:57.304 --> 00:11:02.139\nAnd if I get any information back on that,\ndid I type it wrong?\n\n208\n00:11:02.139 --> 00:11:06.826\nLet's see /prog/cpuinfo I did grip-e and\n\n209\n00:11:06.826 --> 00:11:09.920\nI was looking for VMX or SVM.\n\n210\n00:11:09.920 --> 00:11:11.780\nAnd I did not get my response.\n\n211\n00:11:11.780 --> 00:11:14.340\nLet me change my quote margin,\nmaybe I used the wrong quotes.\n\n212\n00:11:15.370 --> 00:11:16.400\nAll righty then.\n\n213\n00:11:16.400 --> 00:11:18.950\n[LAUGH] Let me just look for VMX.\n\n214\n00:11:18.950 --> 00:11:21.580\nI was trying to do a quick\nregular expression on that one.\n\n215\n00:11:21.580 --> 00:11:22.710\nWell, that turned it back up.\n\n216\n00:11:22.710 --> 00:11:26.740\nSo, all right, I've got my\nregular expression syntax wrong.\n\n217\n00:11:26.740 --> 00:11:30.209\nBut I'm just trying to find that one\nvalue and look and see if it's there and\n\n218\n00:11:30.209 --> 00:11:31.046\nfind it that way.\n\n219\n00:11:31.046 --> 00:11:32.357\nSo that actually didn't\nsave anytime at all.\n\n220\n00:11:32.357 --> 00:11:34.880\nBut, [LAUGH] that's weird.\n\n221\n00:11:34.880 --> 00:11:35.870\nWe can look in and find it.\n\n222\n00:11:35.870 --> 00:11:37.700\nThere are a few different\nways we can go about it.\n\n223\n00:11:37.700 --> 00:11:40.350\nBut I see that I've got it and\nthat's the indicator that says,\n\n224\n00:11:40.350 --> 00:11:43.960\nI've got the hardware that's\ngonna be needed to support KVM.\n\n225\n00:11:43.960 --> 00:11:46.440\nNow, it doesn't really just stop there.\n\n226\n00:11:46.440 --> 00:11:48.219\nI need to make sure do I have enough RAM.\n\n227\n00:11:48.219 --> 00:11:49.260\nDo I have enough memory.\n\n228\n00:11:49.260 --> 00:11:51.520\nEach virtual machine is gonna need memory,\ndo I have it?\n\n229\n00:11:51.520 --> 00:11:52.640\nI'm gonna need disk space.\n\n230\n00:11:52.640 --> 00:11:54.880\nDo I have enough hard drive space\nto store the hard drives for\n\n231\n00:11:54.880 --> 00:11:57.250\neach of these VMs, network bandwidth.\n\n232\n00:11:57.250 --> 00:11:59.470\nThese are all other things\nthat I need to think about.\n\n233\n00:11:59.470 --> 00:12:01.260\nBut at a bare minimum,\nif I wanna get KVM up and\n\n234\n00:12:01.260 --> 00:12:03.050\ngoing, this is really\nthe only thing I need.\n\n235\n00:12:03.050 --> 00:12:07.000\nI need that, the virtualization extensions\nin my CPU and then I'm ready to install.\n\n236\n00:12:07.000 --> 00:12:11.195\n&gt;&gt; So now that we know that we support it,\nhow do we get KVM installed?\n\n237\n00:12:11.195 --> 00:12:13.044\n&gt;&gt; All right, installing it is super easy.\n\n238\n00:12:13.044 --> 00:12:17.594\nAnd I have noticed a few distros that\nalready have the KVM module installed by\n\n239\n00:12:17.594 --> 00:12:21.160\ndefault, I've seen that on a few,\nnot on most though.\n\n240\n00:12:21.160 --> 00:12:23.630\nSo if we wanna get it installed, we\nneed to install a handful of components.\n\n241\n00:12:23.630 --> 00:12:29.199\nNow, there's really three different\nsets of components when it comes to KVM.\n\n242\n00:12:29.199 --> 00:12:31.890\nThere's the actual KVM service.\n\n243\n00:12:31.890 --> 00:12:33.650\nWe need that on our server.\n\n244\n00:12:33.650 --> 00:12:36.670\nThen there's the KVM\ncommand line utilities.\n\n245\n00:12:36.670 --> 00:12:39.470\nThose we may choose to put on\nthe server to help manage it, and\n\n246\n00:12:39.470 --> 00:12:41.602\nwould likely put on our own\nwork station to help manage it.\n\n247\n00:12:41.602 --> 00:12:45.290\nAnd then third there's\nthe KVM graphical utilities.\n\n248\n00:12:45.290 --> 00:12:47.780\nThose we'll put on our\nworkstation to manage it, so\n\n249\n00:12:47.780 --> 00:12:50.660\nif you want to connect it and\nwork with KVM.\n\n250\n00:12:50.660 --> 00:12:51.620\nYou can use the command line,\n\n251\n00:12:51.620 --> 00:12:55.163\nthe command line tools are there,\nthey're just really really annoying.\n\n252\n00:12:55.163 --> 00:12:58.690\n[LAUGH] So if for example,\nif I wanna create a virtual machine,\n\n253\n00:12:58.690 --> 00:13:00.920\nthere's the virt install command.\n\n254\n00:13:00.920 --> 00:13:04.540\nAnd it will be a long command,\nit will word wrap three\n\n255\n00:13:04.540 --> 00:13:08.320\ntimes just to create one virtual machine\nbecause there's so many options.\n\n256\n00:13:08.320 --> 00:13:12.790\nOr virsh V-I-R-S-H, the virtual shell that\nlets you then interact with the server.\n\n257\n00:13:12.790 --> 00:13:16.220\nThe commands are really wrong and\nreally complex they're easy to forget.\n\n258\n00:13:16.220 --> 00:13:17.250\nSo you can use them in a pinch.\n\n259\n00:13:17.250 --> 00:13:18.220\nThey're great for scripting and\n\n260\n00:13:18.220 --> 00:13:21.720\nautomating, but typically we'll\nuse GUI utilities to manage it.\n\n261\n00:13:21.720 --> 00:13:23.510\nYou don't want to install the GUI\nutilities on your server,\n\n262\n00:13:23.510 --> 00:13:26.240\nbecause you likely don't have a web\ninterface, or not a web interface but\n\n263\n00:13:26.240 --> 00:13:28.100\njust a GUI at all on that server.\n\n264\n00:13:28.100 --> 00:13:31.260\nSo instead, you install the graphic\nutilities on your workstation.\n\n265\n00:13:31.260 --> 00:13:33.530\nSo let's take this from\nthe server side first.\n\n266\n00:13:33.530 --> 00:13:35.860\nOn a server,\nthere's a couple of packages that I need.\n\n267\n00:13:35.860 --> 00:13:37.930\nI'm going to say yum install.\n\n268\n00:13:37.930 --> 00:13:43.278\nAnd again if you're on or Ubuntu it\nwould be apps install on DNF install.\n\n269\n00:13:43.278 --> 00:13:45.520\nAnd then I want a few different things.\n\n270\n00:13:45.520 --> 00:13:47.817\nThe main thing I need is qemu-kvm,\n\n271\n00:13:47.817 --> 00:13:52.050\nremember I said the two\nare normally packaged together.\n\n272\n00:13:52.050 --> 00:13:54.470\nSo qemu-kvm kind of together.\n\n273\n00:13:54.470 --> 00:13:56.420\nThat's the actual service that I need.\n\n274\n00:13:57.650 --> 00:14:00.830\nTechnically I could stop there and\nthat's the service.\n\n275\n00:14:00.830 --> 00:14:05.590\nBut it is really next to impossible\nto manage when it's just by itself.\n\n276\n00:14:05.590 --> 00:14:07.840\nSo normally, we're gonna add libvirt.\n\n277\n00:14:09.770 --> 00:14:13.482\nLibvirt is a virtualization library that\nwas created by a number of organizations,\n\n278\n00:14:13.482 --> 00:14:15.534\nRed Hat actually pumped\na lot of money into it.\n\n279\n00:14:15.534 --> 00:14:19.378\nAnd it was designed to give us one\ncommon command interface that can work\n\n280\n00:14:19.378 --> 00:14:22.018\nacross more than one\nvirtualization platform.\n\n281\n00:14:22.018 --> 00:14:24.140\nAnd in the beginning it just\nsupported KVM and QEMU.\n\n282\n00:14:24.140 --> 00:14:28.030\nBut then they added VMware\nthen they added XEN,\n\n283\n00:14:28.030 --> 00:14:30.060\nthey also added XEN Server from Citroen.\n\n284\n00:14:30.060 --> 00:14:32.960\nThey started adding all these\nother virtualization platforms,\n\n285\n00:14:32.960 --> 00:14:34.520\neven VirtualBox from Oracle.\n\n286\n00:14:34.520 --> 00:14:36.660\nYou can manage all of\nthem through libvirt.\n\n287\n00:14:36.660 --> 00:14:40.740\nSo now you have this one set of commands,\nyou can use with all of those platforms.\n\n288\n00:14:40.740 --> 00:14:43.455\nAnd if we want to be able to\nleverage that, which we do,\n\n289\n00:14:43.455 --> 00:14:45.760\nyou'll want to install libvirt as well.\n\n290\n00:14:45.760 --> 00:14:48.240\nAnd that's another one that you might\nactually already have installed on your\n\n291\n00:14:48.240 --> 00:14:50.870\nsystem just depending on what\nother things you've worked with.\n\n292\n00:14:50.870 --> 00:14:53.550\nSo for example,\nI'm running VMware workstation on here.\n\n293\n00:14:53.550 --> 00:14:57.510\nI already have libvirt, or at least\nI think I do, for managing that one.\n\n294\n00:14:57.510 --> 00:15:02.010\nA few other things that\nI might want qemu-img.\n\n295\n00:15:02.010 --> 00:15:04.120\nThat's the QEMU image utilities.\n\n296\n00:15:04.120 --> 00:15:06.110\nWe're gonna need to create\nvirtual hard drives.\n\n297\n00:15:06.110 --> 00:15:08.850\nI mentioned how a type 1 hypervisor\nexposes the real hardware.\n\n298\n00:15:08.850 --> 00:15:11.740\nWell, it can expose a real\nhard drive to a VM.\n\n299\n00:15:11.740 --> 00:15:12.860\nWe don't normally want that.\n\n300\n00:15:12.860 --> 00:15:15.570\nWe normally want a virtual machine\nto see a virtual hard drive,\n\n301\n00:15:15.570 --> 00:15:17.430\na hard drive that is\nstored as a single file.\n\n302\n00:15:17.430 --> 00:15:21.920\nSo the QEMU image format can be used for\nthat, so it'll create disk files,\n\n303\n00:15:21.920 --> 00:15:25.890\nthey end in .qcow, Qcow.\n\n304\n00:15:25.890 --> 00:15:31.588\nSo these Qcow files is what qemu-image is\ngonna give me the ability to work with.\n\n305\n00:15:31.588 --> 00:15:32.951\nAnd then after that,\n\n306\n00:15:32.951 --> 00:15:37.738\none more thing that I'll likely want\nto install is the qemu-kvm-tools.\n\n307\n00:15:37.738 --> 00:15:40.790\nAnd these are some of the other command\nline utilities that we're gonna be using.\n\n308\n00:15:40.790 --> 00:15:44.920\nThings like V-I-R-S-H, VIRSH.\n\n309\n00:15:44.920 --> 00:15:47.480\nSome of the other commands that let\nus modify, those are the tools.\n\n310\n00:15:47.480 --> 00:15:52.761\nSo on a server, this is typically what I'm\ngoing to install, these four packages.\n\n311\n00:15:52.761 --> 00:15:55.960\nAnd they're likely to be other\ndependencies that come along with it but\n\n312\n00:15:55.960 --> 00:15:57.840\nnone of those dependencies will be a GUI.\n\n313\n00:15:57.840 --> 00:16:01.060\nIt won't require you to have X Windows or\nGNOME or anything like that.\n\n314\n00:16:01.060 --> 00:16:04.935\nThese are the tools that are gonna\nget in and let us manage that server.\n\n315\n00:16:04.935 --> 00:16:08.150\nSo it's gonna check and looks like I\nalready had most of these installed.\n\n316\n00:16:08.150 --> 00:16:13.170\nI installed KVM before the show because\nwhen you install it the first time,\n\n317\n00:16:13.170 --> 00:16:15.350\nactually, I guess I can talk\nabout it right now, but\n\n318\n00:16:15.350 --> 00:16:17.620\nsometimes you have to reboot, right.\n\n319\n00:16:17.620 --> 00:16:18.420\nI just wanted to avoid that.\n\n320\n00:16:18.420 --> 00:16:19.350\nSo I installed it beforehand.\n\n321\n00:16:19.350 --> 00:16:22.020\nSo I'm gonna ahead and say yes on this and\n\n322\n00:16:22.020 --> 00:16:24.400\nit's gonna install and\nget those packages in place.\n\n323\n00:16:24.400 --> 00:16:29.230\nNow, optionally on the server I might\nchoose to install some additional command\n\n324\n00:16:29.230 --> 00:16:32.200\nline utilities to continue to work\nwithin and support it, right.\n\n325\n00:16:32.200 --> 00:16:40.600\nSo i might choose to come and install,\nI'll do yum install libvirt- python.\n\n326\n00:16:40.600 --> 00:16:44.165\nWhich allows us to use Python scripts to\nbe able to interact the libvirt and you'll\n\n327\n00:16:44.165 --> 00:16:47.472\nfind a lot of information in software\nout there uses these Python scripts and\n\n328\n00:16:47.472 --> 00:16:50.170\nthat's gonna allow us to\ninteract in the system.\n\n329\n00:16:50.170 --> 00:16:51.890\nI might do libvirt- client,\n\n330\n00:16:51.890 --> 00:16:55.840\nwhich is what actually includes the based\nutility that I mentioned earlier.\n\n331\n00:16:55.840 --> 00:17:00.360\nSo I went and saw that client and\nthen vert- install.\n\n332\n00:17:00.360 --> 00:17:02.550\nWhich is the command that lets\nme create virtual machines.\n\n333\n00:17:02.550 --> 00:17:04.935\nIt's that really long command that\nwraps around the screen three times.\n\n334\n00:17:04.935 --> 00:17:06.290\n&gt;&gt; [LAUGH]\n&gt;&gt; Virt Install does that.\n\n335\n00:17:06.290 --> 00:17:08.100\nSo I may choose to install\nthese on the server as well.\n\n336\n00:17:08.100 --> 00:17:11.520\nI don't have to have these on the server\ncuz I can do this from my work station if\n\n337\n00:17:11.520 --> 00:17:14.630\nI wanted but if I want to manage my\nvirtual machines from the server,\n\n338\n00:17:14.630 --> 00:17:16.140\nit's nice to have these here.\n\n339\n00:17:16.140 --> 00:17:19.770\nThese don't require a GUI either, so\nwe can go in and install those and\n\n340\n00:17:19.770 --> 00:17:22.260\nthey work really well as\na command line based utility.\n\n341\n00:17:22.260 --> 00:17:23.400\nI've already got them apparently.\n\n342\n00:17:23.400 --> 00:17:25.560\nSo now they're installed.\n\n343\n00:17:25.560 --> 00:17:28.480\nThat's kinda where we would stop a server.\n\n344\n00:17:28.480 --> 00:17:31.180\nOn the client side, for managing this,\nwe've got some other ones, but\n\n345\n00:17:31.180 --> 00:17:33.310\non the server side,\nthat's the bare minimum.\n\n346\n00:17:33.310 --> 00:17:34.170\nWe've got it set up.\n\n347\n00:17:34.170 --> 00:17:37.830\nIt's installed and now we're running KVM.\n\n348\n00:17:37.830 --> 00:17:39.341\n&gt;&gt; So you've already mentioned this, but\n\n349\n00:17:39.341 --> 00:17:41.348\nI'm from the department\nof redundancy department.\n\n350\n00:17:41.348 --> 00:17:42.985\n&gt;&gt; [LAUGH]\n&gt;&gt; So do we have to reboot?\n\n351\n00:17:42.985 --> 00:17:43.485\n&gt;&gt; All right, so do we have to reboot?\n\n352\n00:17:45.600 --> 00:17:46.900\nThe never ending question, right.\n\n353\n00:17:47.910 --> 00:17:50.760\nIn the UNIX world we like to say we\nlike to say you never have to reboot for\n\n354\n00:17:50.760 --> 00:17:54.390\nanything but the reality is every time you\nmess with the kernel you have to reboot.\n\n355\n00:17:54.390 --> 00:17:57.380\n&gt;&gt; Right.\n&gt;&gt; Well, what does the K in KVM stand for?\n\n356\n00:17:57.380 --> 00:17:58.770\nKernel.\nIt's a kernel virtual machine.\n\n357\n00:17:58.770 --> 00:17:59.390\n&gt;&gt; Right.\n\n358\n00:17:59.390 --> 00:18:02.090\n&gt;&gt; If a module was already\na part of your distro, then no,\n\n359\n00:18:02.090 --> 00:18:03.923\nyou actually don't have to reboot.\n\n360\n00:18:03.923 --> 00:18:07.264\nBut if it wasn't a part of your distro,\nif we just added it, then yes,\n\n361\n00:18:07.264 --> 00:18:08.880\nyou do have to reboot.\n\n362\n00:18:08.880 --> 00:18:10.490\nAnd so it's kind of an iffy thing,\n\n363\n00:18:10.490 --> 00:18:14.120\nand I've gotten in the habit\nof just always rebooting.\n\n364\n00:18:14.120 --> 00:18:16.140\nIt would take me more time\nto figure out if I had to or\n\n365\n00:18:16.140 --> 00:18:17.790\nnot than it would to just reboot.\n\n366\n00:18:17.790 --> 00:18:20.560\nCuz this is a new server we bring it\nup we're about to put the VMs up but\n\n367\n00:18:20.560 --> 00:18:23.341\nthere is no VMs up there yet, so\na reboot is gonna take just a moment.\n\n368\n00:18:23.341 --> 00:18:27.570\nSo out of habit I would, now I'm not\ngonna do that here in the show because I\n\n369\n00:18:27.570 --> 00:18:30.044\ndon't want to make my laptop disconnect.\n\n370\n00:18:30.044 --> 00:18:32.230\nBut [LAUGH] so I went ahead and installed\nit before the show so I won't have to.\n\n371\n00:18:32.230 --> 00:18:35.540\nBut normally at this point I would issue\na reboot command and let it reboot.\n\n372\n00:18:35.540 --> 00:18:38.960\nNow, user means all service would\ndo things like system CTL and\n\n373\n00:18:38.960 --> 00:18:41.010\nenable bla bla bla.\n\n374\n00:18:41.010 --> 00:18:43.158\nI don't have to do that here, right?\n\n375\n00:18:43.158 --> 00:18:45.940\nKVM is not a demon that's\nrunning in the background.\n\n376\n00:18:45.940 --> 00:18:48.540\nLibvirt is a demon but KVM isn't.\n\n377\n00:18:48.540 --> 00:18:50.300\nKVM is a kernel module.\n\n378\n00:18:50.300 --> 00:18:52.400\nIt's running attached to the kernel.\n\n379\n00:18:52.400 --> 00:18:55.910\nSo when I boot up my system it'll\nautomatically initialize and\n\n380\n00:18:55.910 --> 00:18:57.160\nget that up and running.\n\n381\n00:18:57.160 --> 00:19:00.070\nIf I already have it on the kernel,\nit's already running anyway.\n\n382\n00:19:00.070 --> 00:19:04.310\nAnd, so now I'm up and I'm going and\nI didn't have to actually go and\n\n383\n00:19:04.310 --> 00:19:05.610\nstart any services or whatever.\n\n384\n00:19:05.610 --> 00:19:09.250\nBut as a matter of course,\nI typically do reboot at this point and\n\n385\n00:19:09.250 --> 00:19:11.360\nget the server up and going.\n\n386\n00:19:11.360 --> 00:19:15.540\n&gt;&gt; So, once the server is up and\nrunning, how do we manage it?\n\n387\n00:19:15.540 --> 00:19:18.510\n&gt;&gt; All right.\nWell, if we install the CLI utilities,\n\n388\n00:19:18.510 --> 00:19:21.190\nthey're on the server, they got\na light footprint, they're there, and\n\n389\n00:19:21.190 --> 00:19:21.920\nwe can start to use them.\n\n390\n00:19:21.920 --> 00:19:23.900\nSo we can use virt install, and things.\n\n391\n00:19:23.900 --> 00:19:28.703\nSo if I just pull up man virt-installed,\nwe can take a look at that, and\n\n392\n00:19:28.703 --> 00:19:30.400\nit doesn't look so bad.\n\n393\n00:19:30.400 --> 00:19:33.420\nYou remember virt-install for\nall their options, right?\n\n394\n00:19:33.420 --> 00:19:35.080\nThe promise is a ton of options.\n\n395\n00:19:35.080 --> 00:19:35.990\nWhat do you wanna name the VM?\n\n396\n00:19:35.990 --> 00:19:37.010\nHow much memory does it get?\n\n397\n00:19:37.010 --> 00:19:38.150\nHow many CPUs does it get?\n\n398\n00:19:38.150 --> 00:19:39.650\nWhat virtual hard drive\nformat are you using?\n\n399\n00:19:39.650 --> 00:19:40.990\nWhere is the virtual hard drive store?\n\n400\n00:19:40.990 --> 00:19:42.829\nWhat network are you connected to?\n\n401\n00:19:42.829 --> 00:19:44.838\nWhat security policy is attached to it?\n\n402\n00:19:44.838 --> 00:19:47.740\nAll these different things\nyou have to provide and\n\n403\n00:19:47.740 --> 00:19:50.610\nthat's not even half of the options.\n\n404\n00:19:50.610 --> 00:19:51.980\nBut that's probably like their minimum.\n\n405\n00:19:51.980 --> 00:19:53.773\nSo as you look through here,\n\n406\n00:19:53.773 --> 00:19:57.974\nthese are all options that we can\ndo I'm about to pass line 400.\n\n407\n00:19:57.974 --> 00:20:00.590\n&gt;&gt; Like a very inquisitive little child.\n\n408\n00:20:00.590 --> 00:20:03.510\n&gt;&gt; Yeah, Vernon Sall's powerful,\nit's a good utility,\n\n409\n00:20:03.510 --> 00:20:05.140\ndon't get me wrong I'm not\nsaying it's a bad utility,\n\n410\n00:20:05.140 --> 00:20:09.580\nit's really good, it's just, man is it\ncomplex there's a lot you can provide.\n\n411\n00:20:09.580 --> 00:20:13.340\nBut if I only have a CLI and I need to\nwork with a server that way I certainly\n\n412\n00:20:13.340 --> 00:20:18.060\ncan't, I can use vert install I can use\nVIRSH, virsh to be able to go in and\n\n413\n00:20:18.060 --> 00:20:21.230\nmanage the server but\nit's not really ideal.\n\n414\n00:20:21.230 --> 00:20:24.540\nOn the server I might not even choose\nto install a command line utilities.\n\n415\n00:20:24.540 --> 00:20:28.480\nInstead I'm gonna go to my work station\nand I'm gonna manage it from there.\n\n416\n00:20:28.480 --> 00:20:30.140\nSo on the work station side,\n\n417\n00:20:30.140 --> 00:20:33.760\nwe can install a slightly\ndifferent set of packages right?\n\n418\n00:20:33.760 --> 00:20:36.440\n&gt;&gt; So let's pretend for a moment that\nI've moved to a different computer.\n\n419\n00:20:36.440 --> 00:20:41.340\nSo now I'm on my actual desktop or\nlaptop that I used to manage my system.\n\n420\n00:20:41.340 --> 00:20:45.700\nI would do a yum install and\nI need to install libvirt.\n\n421\n00:20:45.700 --> 00:20:46.543\nJust like I had on the server.\n\n422\n00:20:46.543 --> 00:20:49.214\nIs libvirt is the language that we're\ngonna be speaking when we try to\n\n423\n00:20:49.214 --> 00:20:50.400\ncontrol this.\n\n424\n00:20:50.400 --> 00:20:52.810\nI'm gonna install libvirt -python.\n\n425\n00:20:52.810 --> 00:20:56.310\nBecause I might have utilities that\nI'm running that you use python to\n\n426\n00:20:56.310 --> 00:20:57.670\ntalk to libvirt.\n\n427\n00:20:57.670 --> 00:21:00.670\nThen I'm going to do libvirt- client,\nand these are all\n\n428\n00:21:00.670 --> 00:21:03.560\nthings that I installed on the server,\nreally they were command lines things.\n\n429\n00:21:03.560 --> 00:21:07.350\nSo not anything crazy like GUI,\nI might install VERT Install,\n\n430\n00:21:07.350 --> 00:21:11.545\nif I want to use that on my client to\nhandle the installations, if I'm a sadist.\n\n431\n00:21:11.545 --> 00:21:12.613\n[LAUGH] I can do.\n\n432\n00:21:12.613 --> 00:21:14.153\n&gt;&gt; [LAUGH]\n&gt;&gt; And then,\n\n433\n00:21:14.153 --> 00:21:16.105\nI can get in to the GUI stuff.\n\n434\n00:21:17.315 --> 00:21:19.569\nI can do vert-manager.\n\n435\n00:21:19.569 --> 00:21:24.095\nVert-manager is a graphical user\ninterface that lets us connect to KVM,\n\n436\n00:21:24.095 --> 00:21:28.697\nvirtual box, VMWare, and be able to\nmanage them through a simple GUI.\n\n437\n00:21:28.697 --> 00:21:31.307\nAnd virt-viewer, this is probably\n\n438\n00:21:31.307 --> 00:21:33.137\nthe most important utility,\n&gt;&gt; Mm-hm.\n\n439\n00:21:33.137 --> 00:21:37.377\n&gt;&gt; That's gonna let us see the console\nof the virtual machines that we create.\n\n440\n00:21:37.377 --> 00:21:39.987\nSo if I spit up a virtual machine\nthat's running Windows 7,\n\n441\n00:21:39.987 --> 00:21:42.377\nhow do I see the GUI for it?\n\n442\n00:21:42.377 --> 00:21:44.250\nI use virt-viewer to do that.\n\n443\n00:21:44.250 --> 00:21:47.861\nIf my server only has the CLI, there's\nno real way for me to see that desktop.\n\n444\n00:21:47.861 --> 00:21:51.420\nAnd let me tell you, that makes\ndoing the installation really hard.\n\n445\n00:21:51.420 --> 00:21:54.340\nYou need to have a prebuilt\ninstallation media to do it right.\n\n446\n00:21:54.340 --> 00:21:57.190\nIf I can see the screen though,\nI can walk to the install and\n\n447\n00:21:57.190 --> 00:21:59.140\nclick the little buttons and\ndo everything that I need.\n\n448\n00:21:59.140 --> 00:22:02.195\nSo virt-viewer, just remember that\nthese last two, virt-manager and\n\n449\n00:22:02.195 --> 00:22:04.800\nvirt-viewer, these\nare the ones that have a GUI.\n\n450\n00:22:04.800 --> 00:22:07.970\nThey require you to have X windows or\nknown,\n\n451\n00:22:07.970 --> 00:22:12.770\nsome kind of graphic user interface\nto be able to run them and use them.\n\n452\n00:22:12.770 --> 00:22:15.760\nSo I'm gonna go and\nget those installed and\n\n453\n00:22:15.760 --> 00:22:18.920\nit turns out I didn't have the virt-viewer\nbut I had the other packages already.\n\n454\n00:22:18.920 --> 00:22:21.860\nSo I'll say yes to that, just gonna\nget them installed and now I've got\n\n455\n00:22:21.860 --> 00:22:26.170\nthe utilities here on my client that\nI would use to connect in and manage.\n\n456\n00:22:26.170 --> 00:22:28.980\nAnd once that's done now I\ncan use the virt-manager.\n\n457\n00:22:28.980 --> 00:22:33.520\nIf I launch it it's installed it's\ngot this crazy little icon here,\n\n458\n00:22:33.520 --> 00:22:35.170\nlet me zoom in a bit so you can see it.\n\n459\n00:22:35.170 --> 00:22:38.880\nThat's just a v and an m,\nright that's the virtual machine manager.\n\n460\n00:22:38.880 --> 00:22:43.820\nAnd if I take that and run it, it's gonna\nmake me elevate to root privileges.\n\n461\n00:22:43.820 --> 00:22:46.550\n&gt;&gt; Right.\n&gt;&gt; So I will do that real quick.\n\n462\n00:22:46.550 --> 00:22:47.520\nThere we go.\n\n463\n00:22:47.520 --> 00:22:52.220\nAnd now I'm looking at right\nhere the Virt Manager.\n\n464\n00:22:52.220 --> 00:22:53.400\nNot much to look at, is it?\n\n465\n00:22:53.400 --> 00:22:54.505\nIt's pretty simple.\n\n466\n00:22:54.505 --> 00:22:55.040\n&gt;&gt; Mm-hm.\n\n467\n00:22:55.040 --> 00:22:58.910\n&gt;&gt; And when I look at it I'm not really\nseeing much information here at all.\n\n468\n00:23:00.320 --> 00:23:04.680\nAlthough I have a dark theme on my\nlaptop so it's kind of a grey window.\n\n469\n00:23:04.680 --> 00:23:07.355\nThere actually is a little note\nright here that was kind of hidden.\n\n470\n00:23:07.355 --> 00:23:08.786\nQMU/KVM local host.\n\n471\n00:23:08.786 --> 00:23:11.214\nIf you had a light theme\nwith white backgrounds,\n\n472\n00:23:11.214 --> 00:23:13.410\nyou would have seen that right away.\n\n473\n00:23:13.410 --> 00:23:18.200\nBut it's already found that I'm\nrunning KVM on my local host.\n\n474\n00:23:18.200 --> 00:23:20.890\nSo it shows up, it's right there.\n\n475\n00:23:20.890 --> 00:23:23.700\nIf it was a separate server,\nit would not have done that.\n\n476\n00:23:23.700 --> 00:23:25.070\nIt would come up and this would be empty.\n\n477\n00:23:25.070 --> 00:23:29.970\nThere would be no entry here, and I would\nneed to go up to File, Add Connection and\n\n478\n00:23:29.970 --> 00:23:32.270\nI would need to connect to the server,\nright?\n\n479\n00:23:32.270 --> 00:23:34.175\nIt defaults to QMUKVM.\n\n480\n00:23:34.175 --> 00:23:37.050\nYou could choose to\nconnect to a remote host.\n\n481\n00:23:37.050 --> 00:23:40.990\nYou do usually want to use SSH or\nto build a secure tunnel to that server.\n\n482\n00:23:40.990 --> 00:23:44.160\nBut you see where you can also do\na few other methods, but we'll do SSH.\n\n483\n00:23:44.160 --> 00:23:46.610\nYou specify your\ncredentials on that server.\n\n484\n00:23:46.610 --> 00:23:48.300\nAnd then you can connect.\n\n485\n00:23:48.300 --> 00:23:52.190\nAnd once it connects, you'll then see that\nserver and be able to work with it and\n\n486\n00:23:52.190 --> 00:23:52.720\nmanipulate it.\n\n487\n00:23:52.720 --> 00:23:54.328\nNow, if I drop that QMU box down,\n\n488\n00:23:54.328 --> 00:23:56.977\nyou'll see where I've also\ngot Xen support, right.\n\n489\n00:23:56.977 --> 00:24:02.251\nAnd there's other modules I can install\nthat would have added support for\n\n490\n00:24:02.251 --> 00:24:05.662\nVMware, and VirtualBox,\nand the other ones.\n\n491\n00:24:05.662 --> 00:24:07.409\nIt's just by default it's QMUKVM.\n\n492\n00:24:07.409 --> 00:24:07.972\nAnd Xen.\n\n493\n00:24:07.972 --> 00:24:11.323\nXen is technically a fork of QEMU and KVM.\n\n494\n00:24:11.323 --> 00:24:15.820\nAll right, so I'm more to connect to\nthose, I'm seeing my server right here.\n\n495\n00:24:15.820 --> 00:24:18.840\nAnd now I'm able to interact with it,\nstart to work with it.\n\n496\n00:24:18.840 --> 00:24:21.520\nAnd be able to do with it right\nhere in a graphical format,\n\n497\n00:24:21.520 --> 00:24:24.600\nwhich is far easier than having to\ndeal with all the command line cell.\n\n498\n00:24:24.600 --> 00:24:26.920\n&gt;&gt; So now we're at this point, what is\nthe first thing we should configure?\n\n499\n00:24:28.440 --> 00:24:31.442\n&gt;&gt; This is where we start to get\ninto like people's opinion, right?\n\n500\n00:24:31.442 --> 00:24:34.170\nBut in my opinion-\n&gt;&gt; In your opinion, that's what matters.\n\n501\n00:24:34.170 --> 00:24:36.940\n&gt;&gt; The first place to start is\nconfiguring your networking, right?\n\n502\n00:24:36.940 --> 00:24:40.205\nWe need to create virtual networks for\nour systems to use,\n\n503\n00:24:40.205 --> 00:24:43.481\nbecause each virtual machine,\nwe might want to isolate.\n\n504\n00:24:43.481 --> 00:24:46.110\nWe might want to net it behind an IP and\nour host.\n\n505\n00:24:46.110 --> 00:24:47.745\nWe might wanna give it its own public IP.\n\n506\n00:24:47.745 --> 00:24:51.170\nWe wanna give it its own\ndedicated network adapter.\n\n507\n00:24:51.170 --> 00:24:53.450\nI need to set those networks all\nthere a head of time, right?\n\n508\n00:24:53.450 --> 00:24:55.872\nSo what you're gonna do is you're gonna\nselect the host that you're managing,\n\n509\n00:24:55.872 --> 00:24:57.559\ncuz you might have more than\none host you're managing.\n\n510\n00:24:57.559 --> 00:25:01.543\nYou pick the host you're managing,\nand on top if you got to Edit,\n\n511\n00:25:01.543 --> 00:25:05.690\nyou'll see, hang on, let's see if\nI can zoom this in a little bit.\n\n512\n00:25:05.690 --> 00:25:08.740\nThere we go, if we go to Edit,\nyou have connection details.\n\n513\n00:25:08.740 --> 00:25:11.888\nAnd if you went to connection details,\nit's pointing up the connection for\n\n514\n00:25:11.888 --> 00:25:14.000\nthis where it says QEMU local host, right?\n\n515\n00:25:14.000 --> 00:25:16.410\nAnd so, here I see the information\nabout including the name,\n\n516\n00:25:16.410 --> 00:25:17.570\nwhich I might wanna change.\n\n517\n00:25:17.570 --> 00:25:21.080\nI'm gonna call this one Don's Laptop,\nright?\n\n518\n00:25:21.080 --> 00:25:24.360\nSo I'd remember that this is\nactually my local machine.\n\n519\n00:25:24.360 --> 00:25:28.910\nIf you have 20 QEMU, KVM host out there\nyou don't want them all named QEMU,\n\n520\n00:25:28.910 --> 00:25:29.550\nKVM host.\n\n521\n00:25:29.550 --> 00:25:30.230\nThat's not gonna help me.\n\n522\n00:25:30.230 --> 00:25:32.390\nSo you can kind of name it,\nso you remember.\n\n523\n00:25:32.390 --> 00:25:36.160\nBut the next tab over is virtual networks,\nright?\n\n524\n00:25:36.160 --> 00:25:38.760\nAnd you will have one\nvirtual network by default.\n\n525\n00:25:38.760 --> 00:25:42.210\nThis guy right here just called default,\ndefault all lowercase.\n\n526\n00:25:42.210 --> 00:25:46.659\nAnd every virtual machine you create will\nbe connected right here to this network.\n\n527\n00:25:46.659 --> 00:25:48.564\n&gt;&gt; Okay.\n&gt;&gt; Now this network if you look at it,\n\n528\n00:25:48.564 --> 00:25:50.570\nit doesn't really tell\nus a whole lot about it.\n\n529\n00:25:50.570 --> 00:25:54.940\nIt's active, it's turned on at boot up,\nso when I boot this network is active.\n\n530\n00:25:54.940 --> 00:25:58.589\nAnd if I look at the IPv4\nconfiguration it says,\n\n531\n00:25:58.589 --> 00:26:03.573\nthis network has an IP\nrange of 192.160.122.0, and\n\n532\n00:26:03.573 --> 00:26:06.780\nthat it's got a DHCP range of 2 to 254.\n\n533\n00:26:06.780 --> 00:26:10.362\nAny virtual machine I throw in here\ncan get a DHCP address, right?\n\n534\n00:26:10.362 --> 00:26:14.374\nBut this IP address in not an IP that\nwe're using here in the studio, so\n\n535\n00:26:14.374 --> 00:26:15.840\nit's got to net it.\n\n536\n00:26:15.840 --> 00:26:20.091\nIt's gonna do network address translation\nto whatever IP my laptop has,\n\n537\n00:26:20.091 --> 00:26:21.400\nin this case, right?\n\n538\n00:26:21.400 --> 00:26:24.203\nNow for lab, for test, for\nresearch and development, for\n\n539\n00:26:24.203 --> 00:26:26.850\nme me using it here in\nthe show that's fine.\n\n540\n00:26:26.850 --> 00:26:31.250\nBut in production, if I'm spinning up web\nservers, I usually wanna do a static IP.\n\n541\n00:26:31.250 --> 00:26:34.817\nWell, I can do a static IP in this range,\nbut this DHCP range is so\n\n542\n00:26:34.817 --> 00:26:38.319\nbig that it's gonna overlap with\nany static IPs that I pick, so\n\n543\n00:26:38.319 --> 00:26:42.150\nwe're typically going to need\nto create our own networks.\n\n544\n00:26:42.150 --> 00:26:46.780\nAnd if you just hit the little plus sign\ndown here, you can add a new network.\n\n545\n00:26:46.780 --> 00:26:48.780\nAnd it's just gonna ask us some questions,\nright?\n\n546\n00:26:48.780 --> 00:26:49.790\nSo what's the network name?\n\n547\n00:26:49.790 --> 00:26:55.750\nAnd I might wanna call this one\nthe ITProTV Studio network, all right?\n\n548\n00:26:55.750 --> 00:26:59.665\nAnd then as I move forward,\nI can't have a space, darn it.\n\n549\n00:26:59.665 --> 00:27:04.031\n[LAUGH] We get the syntax right here,\nand we'll just do it that way.\n\n550\n00:27:04.031 --> 00:27:07.358\nAnd I move forward, and\nnow do I wanted to be IPv4, right?\n\n551\n00:27:07.358 --> 00:27:09.750\nAnd do I wanna enable,\nwhat range I will use?\n\n552\n00:27:09.750 --> 00:27:12.050\nI probably wanna use\nan entirely different range.\n\n553\n00:27:12.050 --> 00:27:16.231\nSo I'll say that I'm gonna use\n10.0.222.0 is gonna be my network, and\n\n554\n00:27:16.231 --> 00:27:17.877\nit will be a slash 24, right?\n\n555\n00:27:17.877 --> 00:27:19.900\nSo I'm punching that in.\n\n556\n00:27:19.900 --> 00:27:24.391\nIt's kinda hard to read, it's white on\ngreen, so I can't do much about that, but\n\n557\n00:27:24.391 --> 00:27:25.107\nthere it is.\n\n558\n00:27:25.107 --> 00:27:25.849\n&gt;&gt; I'm an orange colorblind,\nso I can't read it at all.\n\n559\n00:27:25.849 --> 00:27:27.984\n[LAUGH]\n&gt;&gt; [LAUGH] And\n\n560\n00:27:27.984 --> 00:27:33.684\nI'm gonna turn off DHCP version 4, because\nI don't wanna hand out automatic address,\n\n561\n00:27:33.684 --> 00:27:36.750\nI'm gonna use static addresses, right?\n\n562\n00:27:36.750 --> 00:27:40.410\nAnd then I can enable a static route if I\nneed to, but it will have a default route.\n\n563\n00:27:40.410 --> 00:27:42.344\nIt's gonna set my machine\nup as a gateway 10.0.222.1.\n\n564\n00:27:42.344 --> 00:27:48.250\nThey can pass through me and connect to\nanother network that's out there, right?\n\n565\n00:27:48.250 --> 00:27:52.130\nSo i'm specifying what that range\nis gonna be and how it's defined.\n\n566\n00:27:52.130 --> 00:27:55.924\nAs I move forward from that, it's then\ngonna ask whether I wanna do IPv6.\n\n567\n00:27:55.924 --> 00:27:58.180\nI'm gonna leave that off,\ncuz I don't necessarily need it here.\n\n568\n00:27:58.180 --> 00:28:00.840\nAnd then we can ask what type\nof network it is, right?\n\n569\n00:28:00.840 --> 00:28:02.960\nIs it an isolated virtual network?\n\n570\n00:28:02.960 --> 00:28:05.430\nYeah, so now any virtual machine\nthat's attached to this,\n\n571\n00:28:05.430 --> 00:28:07.885\nwill see the other VMs and that's it.\n\n572\n00:28:07.885 --> 00:28:10.810\nBut I might want to forward\nit to a physical network and\n\n573\n00:28:10.810 --> 00:28:14.800\nsay, I wanna connect any virtual machine\nto this physical network on my system.\n\n574\n00:28:14.800 --> 00:28:17.395\nAnd I can pick anything\nexcept wireless adapters.\n\n575\n00:28:17.395 --> 00:28:19.705\nThe wireless adapters show,\nbut it doesn't actually work.\n\n576\n00:28:19.705 --> 00:28:21.335\nSo you can come in and attach it.\n\n577\n00:28:21.335 --> 00:28:25.055\nI might want to attach it to my physical\nnetwork adapter, that's here on my laptop.\n\n578\n00:28:25.055 --> 00:28:28.152\nAnd so, now these VMs would\nsee that physical network.\n\n579\n00:28:28.152 --> 00:28:31.832\nAnd under Mode, I might choose and\nset it to routed, and say,\n\n580\n00:28:31.832 --> 00:28:33.892\nthey will just route right through me.\n\n581\n00:28:33.892 --> 00:28:36.592\nAnd then, I'll provide them\nthat access out to the network.\n\n582\n00:28:36.592 --> 00:28:40.582\nAnd now that I'm getting at it, they can\nhave a static IP, always the same, and\n\n583\n00:28:40.582 --> 00:28:42.812\nsystem to commute and\nconnect and get to it.\n\n584\n00:28:42.812 --> 00:28:45.512\nSo now that I've defined that,\nI can hit Finish.\n\n585\n00:28:45.512 --> 00:28:50.752\nAnd as I create my VPN, as I create my\nVirtual Machines, whatever they're called.\n\n586\n00:28:50.752 --> 00:28:53.640\nIf I leave them attached to default,\nthen they'll get added and\n\n587\n00:28:53.640 --> 00:28:55.440\nthen hidden behind my laptop.\n\n588\n00:28:55.440 --> 00:28:59.260\nBut if I attach them to ITProTV Studio,\nthey'll see the network and\n\n589\n00:28:59.260 --> 00:29:01.790\nthey'll be able to communicate with\nthe other machines that are here\n\n590\n00:29:01.790 --> 00:29:02.900\nin the building with me.\n\n591\n00:29:02.900 --> 00:29:05.890\nSo I'll have that ability\nin that configuration.\n\n592\n00:29:05.890 --> 00:29:07.210\nWe could even go more advanced.\n\n593\n00:29:07.210 --> 00:29:09.740\nI don't have unlimited time here or\nI would.\n\n594\n00:29:09.740 --> 00:29:11.130\nBut we could go more advanced and\n\n595\n00:29:11.130 --> 00:29:13.130\nset up a true bridge,\nwhere we didn't even route it.\n\n596\n00:29:13.130 --> 00:29:16.160\nWhere we just say, we're gonna give\nyou a real IP on the real network and\n\n597\n00:29:16.160 --> 00:29:19.590\nyou'll communicate just like any other\nserver, and get that kind of put in place.\n\n598\n00:29:19.590 --> 00:29:23.240\nBut we need to get this network stuff\nset up, because once it's done,\n\n599\n00:29:23.240 --> 00:29:26.800\nthen as we add the virtual machines we can\nget them attached to the right network.\n\n600\n00:29:26.800 --> 00:29:30.236\nIf I just jumped in and started creating\nvirtual machines, they'd all go into this\n\n601\n00:29:30.236 --> 00:29:32.805\nNAT'd network and I'd have to\ncome back and edit it later on.\n\n602\n00:29:32.805 --> 00:29:36.826\nSo I always start with configuring\nnetworks, and get them, and\n\n603\n00:29:36.826 --> 00:29:38.030\nput them in place.\n\n604\n00:29:38.030 --> 00:29:40.496\n&gt;&gt; So Don, my question to you is\nare we gonna need a second part?\n\n605\n00:29:40.496 --> 00:29:41.358\n&gt;&gt; [LAUGH]\n&gt;&gt; You think,\n\n606\n00:29:41.358 --> 00:29:42.404\nare we gonna come back a revisit this?\n\n607\n00:29:42.404 --> 00:29:43.401\n&gt;&gt; Yeah, I think so.\n\n608\n00:29:43.401 --> 00:29:45.232\nI have a lot more that I wanna talk about.\n\n609\n00:29:45.232 --> 00:29:46.111\n&gt;&gt; Yeah, I think so.\n\n610\n00:29:46.111 --> 00:29:48.180\n&gt;&gt; Yeah, I get a little carried away,\nbut there are a lot of settings in here.\n\n611\n00:29:48.180 --> 00:29:51.201\nThere's more stuff that we need to\nconfigure before we start creating\n\n612\n00:29:51.201 --> 00:29:52.742\nVMs to get our server ready to rock.\n\n613\n00:29:52.742 --> 00:29:55.630\nSo let's come back in a part two,\ncuz we needed to talk about storage.\n\n614\n00:29:55.630 --> 00:29:56.700\nThat's pretty important thing.\n\n615\n00:29:56.700 --> 00:29:58.980\n&gt;&gt; Right.\n&gt;&gt; So we'll get the chance to see that in\n\n616\n00:29:58.980 --> 00:30:01.900\nnetworks, and\nkind of wrap that little bit up.\n\n617\n00:30:01.900 --> 00:30:03.533\nAnd then after that, we'll jump in and\n\n618\n00:30:03.533 --> 00:30:06.417\nactually start to create some of our\nguests and put them in place too.\n\n619\n00:30:06.417 --> 00:30:09.810\nSo definitely stay tune for part two, and\nwe'll wrap up our server configuration.\n\n620\n00:30:09.810 --> 00:30:10.443\n&gt;&gt; I'm excited on that one.\n\n621\n00:30:10.443 --> 00:30:14.160\nWe'll get to Linux is a KVM host part two,\nyou've seen part one.\n\n622\n00:30:14.160 --> 00:30:18.286\nAnd this is Linux in the cloud, and\nthis is gonna continue on with the series.\n\n623\n00:30:18.286 --> 00:30:21.670\nMake sure you watch all of the episodes,\nyou'll be glad you did.\n\n624\n00:30:21.670 --> 00:30:23.373\nAnd thank you for watching ITProTV.\n\n625\n00:30:23.373 --> 00:30:26.310\nRemember, a good IT Pro\nis always learning.\n\n626\n00:30:26.310 --> 00:30:27.230\nI'm Zach Memos.\n\n627\n00:30:27.230 --> 00:30:27.803\n&gt;&gt; And I'm Don Pezet.\n\n628\n00:30:27.803 --> 00:30:28.950\n&gt;&gt; And we'll see you again soon.\n\n629\n00:30:28.950 --> 00:30:36.515\n[MUSIC]\n\n630\n00:30:36.515 --> 00:30:39.128\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "230939285"
        },
        {
          "description": "Don and Zach discuss storage issues & if storage needs to be configured, KVM Storage Pools, default storage pool, Custom Storage Pools, basic setup of the server, and starting to create virtual machines.",
          "length": "917",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-1-1-2-linux_as_a_kvm_host_pt_2-082317-PGM.00_15_01_16.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-1-1-2-linux_as_a_kvm_host_pt_2-082317-PGM.00_15_01_16.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-1-1-2-linux_as_a_kvm_host_pt_2-082317-PGM.00_15_01_16.Still001-sm.jpg",
          "title": "Linux as a KVM Host Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:01.150 --> 00:00:02.704\nWelcome to ITPro.TV,\nI'm you host Don Pezet.\n\n2\n00:00:02.704 --> 00:00:06.577\n[CROSSTALK]\n\n3\n00:00:06.577 --> 00:00:08.347\n[MUSIC]\n\n4\n00:00:08.347 --> 00:00:12.126\n&gt;&gt; You're watching ITPro.TV.\n\n5\n00:00:12.126 --> 00:00:14.600\n&gt;&gt; Hello and thank you for\nchoosing ITPro.TV,\n\n6\n00:00:14.600 --> 00:00:17.090\nhelping you learn everywhere you go.\n\n7\n00:00:17.090 --> 00:00:20.770\nI'm Zach Memos, your host for\nthe Linux in the Cloud.\n\n8\n00:00:20.770 --> 00:00:24.920\nAnd right now we have part 2\nof the Linus as a KVM host.\n\n9\n00:00:24.920 --> 00:00:26.990\nExcited of hearing more about it?\n\n10\n00:00:26.990 --> 00:00:30.220\nI am, and\nDon Pezet is gonna tell us all about that.\n\n11\n00:00:30.220 --> 00:00:33.980\n&gt;&gt; All right, we are picking back up\nwith configuring KVM on our host.\n\n12\n00:00:33.980 --> 00:00:35.499\nAnd if you watched the last episode,\n\n13\n00:00:35.499 --> 00:00:38.390\nwe were covering the first things we\nneed to do to get our server set up.\n\n14\n00:00:38.390 --> 00:00:41.178\nSo we installed KVM, and\nthen we went to my workstation,\n\n15\n00:00:41.178 --> 00:00:43.690\nI installed the GUI to manage it,\nvirt-manager.\n\n16\n00:00:43.690 --> 00:00:45.712\n&gt;&gt; Yes.\n&gt;&gt; We fire up virt-manager, and\n\n17\n00:00:45.712 --> 00:00:48.557\nwe can configure some basic\nvirtual networks, right?\n\n18\n00:00:48.557 --> 00:00:50.380\nThe networks that our machines will use.\n\n19\n00:00:50.380 --> 00:00:53.010\nWell our machines are gonna use other\nthings as well, they're gonna use CPU,\n\n20\n00:00:53.010 --> 00:00:54.220\nthey're gonna use RAM.\n\n21\n00:00:54.220 --> 00:00:56.860\nWell those are configured on the virtual\nmachine, not a big deal there.\n\n22\n00:00:56.860 --> 00:00:58.534\nThey're also gonna use storage, and\n\n23\n00:00:58.534 --> 00:01:01.210\nstorage is something that I\nwanted to spend a few minutes on.\n\n24\n00:01:01.210 --> 00:01:04.110\nBecause they are variations in\nthe way that the storage gets\n\n25\n00:01:04.110 --> 00:01:06.430\nhandled inside of our virtual machines.\n\n26\n00:01:06.430 --> 00:01:08.683\nSo that's gonna be the next thing\nthat we need to get configured and\n\n27\n00:01:08.683 --> 00:01:10.710\nwhat we're gonna take a look\nat right here in this episode.\n\n28\n00:01:10.710 --> 00:01:12.520\n&gt;&gt; Which was my next question,\nwhat about storage?\n\n29\n00:01:12.520 --> 00:01:13.710\nDo we need to configure it?\n\n30\n00:01:13.710 --> 00:01:17.217\n&gt;&gt; Absolutely, well I guess technically,\nyou don't need to configure it,\n\n31\n00:01:17.217 --> 00:01:19.400\nyou could just run with the defaults,\nright?\n\n32\n00:01:19.400 --> 00:01:22.910\nBut the defaults are not necessarily\nideal, let me show you what I mean.\n\n33\n00:01:22.910 --> 00:01:26.190\nSo on my machine,\nthis is where we installed KVM,\n\n34\n00:01:26.190 --> 00:01:28.308\nit's on my regular old laptop.\n\n35\n00:01:28.308 --> 00:01:31.630\nAnd when I start creating virtual\nmachines, where is it going to put them?\n\n36\n00:01:31.630 --> 00:01:37.276\nWell by default it puts them\nin /var/lib/libvirt/images\n\n37\n00:01:37.276 --> 00:01:43.378\nthat folder right there,\nthat's where's gonna drop them.\n\n38\n00:01:43.378 --> 00:01:48.136\nNow if /var is on the same partition\nas the rest of your drive,\n\n39\n00:01:48.136 --> 00:01:52.080\nthen virtual machine files\nthey can get kinda big.\n\n40\n00:01:52.080 --> 00:01:53.913\nThey just take up a lot of space.\n\n41\n00:01:53.913 --> 00:01:54.473\n&gt;&gt; Yep.\n\n42\n00:01:54.473 --> 00:01:57.747\n&gt;&gt; And eventually you can run\nout of disk space, right?\n\n43\n00:01:57.747 --> 00:02:02.910\nSo here I am in /var if I do a df-h and\ntake a look at my disks.\n\n44\n00:02:02.910 --> 00:02:08.000\n/var for me is not broken out\ninto a separate partition.\n\n45\n00:02:08.000 --> 00:02:12.070\nSo that means that it's just\nunder the root mount point, and\n\n46\n00:02:12.070 --> 00:02:15.770\nif I look at my root mount point, I've\nonly got 42 gigs of space on it, right?\n\n47\n00:02:15.770 --> 00:02:21.070\nThat's not a ton of space, if I look at my\nother disks, like I've got /mount/storage.\n\n48\n00:02:21.070 --> 00:02:23.870\nThis guy right here,\nthat's a terabyte drive.\n\n49\n00:02:23.870 --> 00:02:26.396\nAnd I've got 665 gigs of\nspace available on it,\n\n50\n00:02:26.396 --> 00:02:28.824\nI've got a ton of space\navailable on that drive.\n\n51\n00:02:28.824 --> 00:02:33.310\nOr even /Home for that matter,\nI've got 155 gigs available on that one,\n\n52\n00:02:33.310 --> 00:02:35.840\nI've got space out there, right?\n\n53\n00:02:35.840 --> 00:02:41.000\nJust not in /var, so\nI need to think about my storage.\n\n54\n00:02:41.000 --> 00:02:45.143\nIf I know I'm gonna be storing\na lot of virtual machine disks,\n\n55\n00:02:45.143 --> 00:02:50.180\nI may need to move /var/lib/libvirt\nto a different partition, right?\n\n56\n00:02:50.180 --> 00:02:53.400\nAnd move it somewhere else, or\nit might even be on an external SAN.\n\n57\n00:02:53.400 --> 00:02:56.220\nI might have some kind of scuzzy or\niscuzzy or\n\n58\n00:02:56.220 --> 00:02:59.880\nfiber channel connection that's running\nto a SAN where that storage is found.\n\n59\n00:02:59.880 --> 00:03:02.573\nBut either way only to\nmove it to somewhere else,\n\n60\n00:03:02.573 --> 00:03:04.880\nwell we never actually move the default.\n\n61\n00:03:04.880 --> 00:03:06.839\nThe default stays where it is,\nwe just choose whether or\n\n62\n00:03:06.839 --> 00:03:08.450\nnot we're gonna use that default.\n\n63\n00:03:08.450 --> 00:03:12.098\nI might not want to use\n/var/lib/libvirt/images,\n\n64\n00:03:12.098 --> 00:03:14.820\nI don't wanna specify other locations.\n\n65\n00:03:14.820 --> 00:03:17.760\nAnd then we can pick and choose,\nwe can use whatever we want, right?\n\n66\n00:03:17.760 --> 00:03:20.870\nSo we got couple of options how we wanna\nhandle this kind of comes down to what\n\n67\n00:03:20.870 --> 00:03:22.060\nour needs are.\n\n68\n00:03:22.060 --> 00:03:28.630\nFor me, I know that /mount/storage has a\nton of space and I wanna use that, right?\n\n69\n00:03:28.630 --> 00:03:31.690\nI don't want to use the default\nwhere I don't have a ton of space.\n\n70\n00:03:31.690 --> 00:03:34.060\nSo I wanna modify that and change it.\n\n71\n00:03:34.060 --> 00:03:37.314\nAnd we can do that right through the\ngraphical utility that we were using at\n\n72\n00:03:37.314 --> 00:03:38.950\nthe end of the last episode, right?\n\n73\n00:03:38.950 --> 00:03:41.253\nSo what you do is you go\nin your virt-manager and\n\n74\n00:03:41.253 --> 00:03:43.680\nyou choose the server\nthat you're working with.\n\n75\n00:03:43.680 --> 00:03:45.370\nSo mine is this Don's laptop.\n\n76\n00:03:45.370 --> 00:03:47.839\nAnd we're gonna go to Edit\n&gt; Connection Details and\n\n77\n00:03:47.839 --> 00:03:51.010\nthe in the last episode we were\non this Virtual Networks tab.\n\n78\n00:03:51.010 --> 00:03:56.101\nThis time we're gonna go to the Storage\ntab and what you're gonna see in there\n\n79\n00:03:56.101 --> 00:04:01.757\nis one storage location by default and\nit is in /val/lb/libval/images, right?\n\n80\n00:04:01.757 --> 00:04:03.177\nThat's where it's located, all right?\n\n81\n00:04:03.177 --> 00:04:07.248\nAnd it's telling me that it's got\n41 gigs there is 8.5 gigs in use,\n\n82\n00:04:07.248 --> 00:04:10.150\nit's Active and it's turned down On Boot.\n\n83\n00:04:10.150 --> 00:04:12.160\nAnd then in the volumes list\nhere I can see it's empty.\n\n84\n00:04:12.160 --> 00:04:15.900\nI have no virtual machine volumes\ncreated in that storage just yet.\n\n85\n00:04:15.900 --> 00:04:19.810\nSo if I wanna change this,\nI've got two choices.\n\n86\n00:04:19.810 --> 00:04:22.080\nOne, I can change the default, okay?\n\n87\n00:04:22.080 --> 00:04:25.855\nNow the default you'll notice,\nmaybe you can't really tell here,\n\n88\n00:04:25.855 --> 00:04:27.100\nI can't delete this.\n\n89\n00:04:27.100 --> 00:04:30.171\nIt won't let me edit that entry,\nit won't let me change it, okay?\n\n90\n00:04:30.171 --> 00:04:33.015\nI don't know what that is\nit just won't let you.\n\n91\n00:04:33.015 --> 00:04:35.771\nSo [LAUGH] if you wanna change\nthe default what you have to do is,\n\n92\n00:04:35.771 --> 00:04:40.100\nyou have to take the default and then down\nhere, you need to get the Stop button.\n\n93\n00:04:40.100 --> 00:04:42.070\nThis little storage directories are,\n\n94\n00:04:42.070 --> 00:04:45.900\nactually what are cold\nstorage pools inside of KVM.\n\n95\n00:04:45.900 --> 00:04:47.400\nSorry, my zoom is going nuts there.\n\n96\n00:04:47.400 --> 00:04:49.010\nThey're called storage pools.\n\n97\n00:04:49.010 --> 00:04:52.531\nI define a storage pool and\nwhen KVM starts up, when it boots,\n\n98\n00:04:52.531 --> 00:04:56.280\nit indexes the storage pools\nto figure out what's in them.\n\n99\n00:04:56.280 --> 00:04:59.050\nSo the first storage pool,\nI have is just called default and\n\n100\n00:04:59.050 --> 00:05:00.510\nthat's where its location is.\n\n101\n00:05:00.510 --> 00:05:03.940\nAnd because it's mounted,\nit won't let me change it.\n\n102\n00:05:03.940 --> 00:05:06.240\nBut even if I unmount it,\nlike when I hit that Stop and\n\n103\n00:05:06.240 --> 00:05:08.990\nI Stop the pool,\nI still can't change that value.\n\n104\n00:05:08.990 --> 00:05:12.452\nSo if I wanna change the default, what I\nneed to do is take that and delete it.\n\n105\n00:05:12.452 --> 00:05:17.379\nI'm gonna hit the little x, delete pool\nbutton, and i'll delete that pool,\n\n106\n00:05:17.379 --> 00:05:19.630\nand so that's gonna wipe that out.\n\n107\n00:05:19.630 --> 00:05:21.498\nNow it doesn't actually\ndelete what's on disk,\n\n108\n00:05:21.498 --> 00:05:24.180\nso if I had a bunch of virtual\nmachine images, they'd still be there.\n\n109\n00:05:24.180 --> 00:05:27.890\nI'm just deleting the pool\nfrom KVM's configuration.\n\n110\n00:05:27.890 --> 00:05:32.165\nAnd now I can add a new pool, and\nif I want this to be the default pool,\n\n111\n00:05:32.165 --> 00:05:34.340\nI need to name it default, right.\n\n112\n00:05:34.340 --> 00:05:37.320\nIf I don't do that, if I don't name it\ndefault, the next time KVM starts it's\n\n113\n00:05:37.320 --> 00:05:39.960\njust going to recreate that default\npool again and put it back again.\n\n114\n00:05:39.960 --> 00:05:42.512\nAnd say you deleted the pool,\nwhat's wrong with you?\n\n115\n00:05:42.512 --> 00:05:43.930\nI will just put it right back, right?\n\n116\n00:05:43.930 --> 00:05:48.530\nBut if I name this one default, I can\nthen point it to somewhere else, right?\n\n117\n00:05:48.530 --> 00:05:51.446\nNow, I'll be honest with you guys,\nI don't normally do this,\n\n118\n00:05:51.446 --> 00:05:53.120\nI don't normally delete a default.\n\n119\n00:05:53.120 --> 00:05:56.830\nI just leave it, and I add my pools,\nsecondary pools, right?\n\n120\n00:05:56.830 --> 00:06:00.974\nAnd I do that for consistency reason,\nI always worry, if somebody forgets to\n\n121\n00:06:00.974 --> 00:06:05.320\nchange the location on a KVM host,\nand I just assume it's been moved.\n\n122\n00:06:05.320 --> 00:06:08.020\nI would know, because it's called default,\nand that's it.\n\n123\n00:06:08.020 --> 00:06:11.330\nBut if I give it a custom name\nthat I know it's been moved,\n\n124\n00:06:11.330 --> 00:06:12.710\nI know it's in the right location.\n\n125\n00:06:12.710 --> 00:06:15.220\nSo I'm in a habit to just\nleaving the default alone.\n\n126\n00:06:15.220 --> 00:06:18.840\nBut you certainly can modify and\nput it wherever.\n\n127\n00:06:18.840 --> 00:06:23.400\nI'm gonna change this one, and\nI'm gonna call it MNT-Storage, right?\n\n128\n00:06:23.400 --> 00:06:28.170\nCuz I wanna know this one's in\nmy mount/storage folder, right?\n\n129\n00:06:28.170 --> 00:06:30.900\nNow, when we go to create the pool,\nit's asking us a question.\n\n130\n00:06:30.900 --> 00:06:33.570\nWhat type of pool is this going to be?\n\n131\n00:06:33.570 --> 00:06:39.330\nAnd if you drop that box down, you'll\nsee there's quite a few choices, okay?\n\n132\n00:06:39.330 --> 00:06:41.970\nWell most of these are not\nused that commonly, right?\n\n133\n00:06:41.970 --> 00:06:43.460\nSo there are some of these\nthat are really important.\n\n134\n00:06:43.460 --> 00:06:45.870\nThe very first two are probably\nthe most important.\n\n135\n00:06:45.870 --> 00:06:50.160\nThe first one is the most common,\ndir Filesystem Directory, right?\n\n136\n00:06:50.160 --> 00:06:53.490\nI want to store data in a directory\nsomehwere on my system.\n\n137\n00:06:53.490 --> 00:06:56.250\nSo I'm gonna point to that directory and\nthat's that, right?\n\n138\n00:06:56.250 --> 00:07:01.700\nBut it could be that I'm wanting to\nexpose an actual physical disk, right?\n\n139\n00:07:01.700 --> 00:07:05.918\nLet's say that I was setting up\na database server like MySQL or MariaDB,\n\n140\n00:07:05.918 --> 00:07:08.210\ndisk I/O is really important to them.\n\n141\n00:07:08.210 --> 00:07:10.008\nSo I don't want QEMU to come in and\n\n142\n00:07:10.008 --> 00:07:13.560\ncreate a virtual disk image that\nI know is gonna create overhead.\n\n143\n00:07:13.560 --> 00:07:17.390\nInstead, I want them to have true\nunfettered access to a real disk.\n\n144\n00:07:17.390 --> 00:07:18.540\nI could choose physical disk, and\n\n145\n00:07:18.540 --> 00:07:21.940\non the next screen, it'll have me pick\nwhich physical disk is gonna be attached.\n\n146\n00:07:21.940 --> 00:07:23.880\nIt's gonna be locked down to one VM, but\n\n147\n00:07:23.880 --> 00:07:25.179\nyou'll get some great\nperformance out of it.\n\n148\n00:07:26.570 --> 00:07:29.209\nNormally, we don't do that,\nnormally it's a directory or\n\n149\n00:07:29.209 --> 00:07:32.070\nif you as you look down you'll\nfind there's an LVM Volume Group.\n\n150\n00:07:32.070 --> 00:07:36.221\nSo we can link the Logical Volume Manager,\nwe can do iSCSI Targets or GlusterFS.\n\n151\n00:07:36.221 --> 00:07:39.751\nGlusterFS is a cluster file system that\ncan spread across more than one server,\n\n152\n00:07:39.751 --> 00:07:41.608\nthat's great if you want to do fail over.\n\n153\n00:07:41.608 --> 00:07:43.822\nI have a virtual machine,\nit's running on one server right now, and\n\n154\n00:07:43.822 --> 00:07:46.110\nI have a problem, so\nI move it to another virtual machine.\n\n155\n00:07:46.110 --> 00:07:48.250\nIf that's a shared file system,\nthere's not much to move.\n\n156\n00:07:48.250 --> 00:07:50.977\nI just shut it down on one server and\nstart it up on another.\n\n157\n00:07:50.977 --> 00:07:53.765\nAnd I'm in business all the file\nsystems already brought along,\n\n158\n00:07:53.765 --> 00:07:55.420\ncluster fs will do that for us.\n\n159\n00:07:55.420 --> 00:07:57.110\nSome of the other ones will do the same.\n\n160\n00:07:57.110 --> 00:08:00.690\nZFS, very powerful but\nnot supported on most Linux distros.\n\n161\n00:08:00.690 --> 00:08:01.792\nSheepdog, I've never even heard\n\n162\n00:08:01.792 --> 00:08:03.160\nof that one it's just there and-\n&gt;&gt; [LAUGH]\n\n163\n00:08:03.160 --> 00:08:04.294\n&gt;&gt; It's got a silly name,\n\n164\n00:08:04.294 --> 00:08:07.840\nso take it with a grain of salt,\nnot all these are the greatest.\n\n165\n00:08:07.840 --> 00:08:08.656\nMy apologies to Sheepdog,\n\n166\n00:08:08.656 --> 00:08:09.906\nmight be the most awesome-\n&gt;&gt; Yeah, [INAUDIBLE] you never know.\n\n167\n00:08:09.906 --> 00:08:11.287\n&gt;&gt; File system on the planet,\nI've never heard of it.\n\n168\n00:08:11.287 --> 00:08:15.060\nSo you've got a lot of choices here,\nbut really that first one.\n\n169\n00:08:15.060 --> 00:08:17.700\nDir, that's the one we're\ngonna be using the most.\n\n170\n00:08:17.700 --> 00:08:20.528\nAnd I'm telling it that I'm gonna\npoint to a directory somewhere.\n\n171\n00:08:20.528 --> 00:08:26.550\nAnd as I move forward, it's going to ask\nme, oops, it's gonna ask me where, right?\n\n172\n00:08:26.550 --> 00:08:28.099\nAnd see what it is trying to do,\n\n173\n00:08:28.099 --> 00:08:31.870\nit's trying to create a subfolder\nunder /val/lib/libvirt/images.\n\n174\n00:08:31.870 --> 00:08:34.520\nAnd that's not what I want,\nI wanna put it somewhere else entirely.\n\n175\n00:08:34.520 --> 00:08:38.254\nSo I'm gonna browse, and I'll browse\nacross my file system and go and\n\n176\n00:08:38.254 --> 00:08:40.670\nfind a folder that I wanna stick in it.\n\n177\n00:08:40.670 --> 00:08:44.320\nAnd maybe the folder exist already,\nmaybe it doesn't, I'll add a new folder.\n\n178\n00:08:44.320 --> 00:08:46.090\nAnd I'm gonna call this,\n\n179\n00:08:46.090 --> 00:08:50.522\nI'll call it qmu-kvm that's\nwhere we're storing it's data.\n\n180\n00:08:50.522 --> 00:08:54.130\nSo I've got this new folder and\nI'll go ahead and\n\n181\n00:08:54.130 --> 00:08:56.696\nhit the open button, there we go.\n\n182\n00:08:56.696 --> 00:08:58.563\nSo now it's pointing to that location.\n\n183\n00:08:58.563 --> 00:09:01.910\nThe name I gave which was mnt-store,\nso I can remember where it was.\n\n184\n00:09:01.910 --> 00:09:04.091\nBut here I'm calling it qmu-kvm, so\n\n185\n00:09:04.091 --> 00:09:08.190\nI know exactly what's gonna be stored\nin there and I can finish that up.\n\n186\n00:09:08.190 --> 00:09:10.730\nAnd now, that storage is set\nup in the alternate location.\n\n187\n00:09:10.730 --> 00:09:14.880\nAnd instead of telling me I've only got\n40 gigs free, now I've got 664 gigs free,\n\n188\n00:09:14.880 --> 00:09:17.200\nplenty of space on that disk.\n\n189\n00:09:17.200 --> 00:09:19.920\nIt is Active, and\nit's set to start On Boot.\n\n190\n00:09:19.920 --> 00:09:24.290\nI might have certain storage pools that I\nonly need available temporarily, right?\n\n191\n00:09:24.290 --> 00:09:28.380\nNormally that would be if I had a storage\npool that I had ISO images in, right?\n\n192\n00:09:28.380 --> 00:09:31.370\nNormal storages pools can have disk images\nin it as far as your virtual machine\n\n193\n00:09:31.370 --> 00:09:32.300\ndisk images.\n\n194\n00:09:32.300 --> 00:09:35.646\nBut you need to store ISO somewhere,\nthe images of a DVD or\n\n195\n00:09:35.646 --> 00:09:38.660\nCD are used to install the guest machines,\nright?\n\n196\n00:09:38.660 --> 00:09:40.698\nAnd so I might have a repository\nthat stores those and\n\n197\n00:09:40.698 --> 00:09:42.690\nI might not choose to mount that on booth.\n\n198\n00:09:42.690 --> 00:09:46.160\nI might just mount it when I need it and\nthen keep it offline the rest of the time.\n\n199\n00:09:46.160 --> 00:09:49.255\nKeeping it offline ensures that people\ndon't accidentally put hard drive\n\n200\n00:09:49.255 --> 00:09:50.000\nimages in there.\n\n201\n00:09:50.000 --> 00:09:53.900\nIt's a good way to stop that,\nbut this one is active.\n\n202\n00:09:53.900 --> 00:09:58.030\nI'm gonna add another one, but\nI am just gonna call it, whoops, oops,\n\n203\n00:09:58.030 --> 00:09:59.880\nwhat have I done?\n\n204\n00:09:59.880 --> 00:10:02.450\nApparently I closed out\nvirt-manager by accident, so\n\n205\n00:10:02.450 --> 00:10:04.180\nthat's gonna slow me down a bit.\n\n206\n00:10:04.180 --> 00:10:05.638\nLet me get back into virt-manager.\n\n207\n00:10:05.638 --> 00:10:09.870\n[LAUGH] And I'll go back and\nedit that connection again.\n\n208\n00:10:09.870 --> 00:10:13.413\nI don't know if I closed it or crashed,\nit just kinda disappeared on me.\n\n209\n00:10:13.413 --> 00:10:15.146\nGood, it remember what I was doing though.\n\n210\n00:10:15.146 --> 00:10:16.170\n&gt;&gt; It went out for a drink.\n\n211\n00:10:16.170 --> 00:10:17.832\n&gt;&gt; Well actually notice\nwhat it did though,\n\n212\n00:10:17.832 --> 00:10:19.790\nthis is a good chance to point this out.\n\n213\n00:10:19.790 --> 00:10:23.460\nI renamed my default\nstorage to mnt/storage.\n\n214\n00:10:23.460 --> 00:10:26.960\nAnd see it recreated the default storage\nfor me, even though I deleted it.\n\n215\n00:10:26.960 --> 00:10:29.412\nRemember, I said if you\ncall yours default,\n\n216\n00:10:29.412 --> 00:10:31.100\nit's just gonna recreate it again.\n\n217\n00:10:31.100 --> 00:10:33.470\nThat's why I've got an habit\nof not deleting it.\n\n218\n00:10:33.470 --> 00:10:35.182\nSo it popped back up, which I'm fine.\n\n219\n00:10:35.182 --> 00:10:37.070\nIt did crash, I've got a crash report.\n\n220\n00:10:37.070 --> 00:10:39.435\nSweet, I will ignore my report.\n\n221\n00:10:39.435 --> 00:10:42.796\n[LAUGH] And\nI'm gonna add another entry here.\n\n222\n00:10:42.796 --> 00:10:46.027\nI'm gonna add one and\nI'm gonna call it ISOs, right?\n\n223\n00:10:46.027 --> 00:10:47.780\nCuz this is where I'm gonna\nstore my disk images.\n\n224\n00:10:47.780 --> 00:10:51.497\nI'm still gonna use file system directly\ncuz this is not really gonna be any\n\n225\n00:10:51.497 --> 00:10:53.390\ndifferent than a different storage.\n\n226\n00:10:53.390 --> 00:10:57.571\nBut I've already gotten an ISO folder and\nso when I browse,\n\n227\n00:10:57.571 --> 00:11:00.280\nI can pick my storage folder and ISOs.\n\n228\n00:11:00.280 --> 00:11:04.150\nAnd here's where I keep all the ISO\nimages that I keep for my machines.\n\n229\n00:11:04.150 --> 00:11:07.720\nAnd so I can mount that and\nit's gonna connect.\n\n230\n00:11:07.720 --> 00:11:10.140\nIt's gonna crash back out again.\n\n231\n00:11:10.140 --> 00:11:11.708\nLet's see if it saved that for\nme at least.\n\n232\n00:11:11.708 --> 00:11:15.710\nAnd it's gonna connect, and when I look at\nthis one, unlike the other one that was\n\n233\n00:11:15.710 --> 00:11:18.440\nempty, this one already had\ndata that was inside of it.\n\n234\n00:11:18.440 --> 00:11:22.790\nSo when I come in here and\nI look at the ISOs, there we go.\n\n235\n00:11:22.790 --> 00:11:25.560\nIt added and you can see under Volumes,\nI've got volumes.\n\n236\n00:11:25.560 --> 00:11:29.070\nThere is my CentOS 7 disk right there,\nready to build an image off of it.\n\n237\n00:11:29.070 --> 00:11:31.963\nAnd if I keep scrolling down\nI'll find my Microsoft ISOs or\n\n238\n00:11:31.963 --> 00:11:35.100\nFedora, we've got Red Hat is\nburied in here somewhere there.\n\n239\n00:11:35.100 --> 00:11:37.320\nRed Hat Server,\nRed Hat Workstation, Ubuntu.\n\n240\n00:11:37.320 --> 00:11:40.150\nSo now I can start building up those\nvirtual machines using those images, and\n\n241\n00:11:40.150 --> 00:11:41.730\nthey're waiting right there in the pool.\n\n242\n00:11:41.730 --> 00:11:46.040\nAnd in order for VM to access storage,\nit has to be in a pool.\n\n243\n00:11:46.040 --> 00:11:49.800\nI've got to define it and\nthe pool has to be online, right?\n\n244\n00:11:49.800 --> 00:11:53.560\nThis one shows that it's active, but\nAutostart is set to Never, right?\n\n245\n00:11:53.560 --> 00:11:54.790\nI'm gonna check that to say On Boot.\n\n246\n00:11:54.790 --> 00:11:57.310\nSo now when my system boots up,\nthis will automount.\n\n247\n00:11:57.310 --> 00:11:59.620\nOtherwise, if it's off,\nI would have to come and\n\n248\n00:11:59.620 --> 00:12:03.260\nturn it on any time that I wanna use it\nby hitting this play button down here.\n\n249\n00:12:03.260 --> 00:12:05.140\nI want mine up and running.\n\n250\n00:12:05.140 --> 00:12:08.490\nBut now that's done,\nI've got the storage available,\n\n251\n00:12:08.490 --> 00:12:11.210\nI've configured my virtual networks,\nI've got my storage.\n\n252\n00:12:11.210 --> 00:12:14.240\nThere's network interfaces over here where\nyou can kinda control the interfaces\n\n253\n00:12:14.240 --> 00:12:15.080\nthemselves.\n\n254\n00:12:15.080 --> 00:12:16.910\nThere's not a whole lot\nthat you do with these.\n\n255\n00:12:16.910 --> 00:12:19.980\nYou can change whether they're\nautomatically available or not, and\n\n256\n00:12:19.980 --> 00:12:21.680\nyou can change their IPv4 configuration.\n\n257\n00:12:21.680 --> 00:12:26.080\nBut you don't normally mess with that on\nKVM, you do that through the regular OS.\n\n258\n00:12:26.080 --> 00:12:30.110\nBut everything else is pretty well set up,\nand at this point,\n\n259\n00:12:30.110 --> 00:12:32.270\nmy server is now ready to use.\n\n260\n00:12:32.270 --> 00:12:35.940\nI've got my virtual networks done,\nI've got my storage defined.\n\n261\n00:12:35.940 --> 00:12:40.870\nIt's really just a matter of coming\nthrough and punching in my VMs.\n\n262\n00:12:40.870 --> 00:12:44.950\nNow, there are many more advanced\nfeatures that are a part of KVMs\n\n263\n00:12:44.950 --> 00:12:46.930\nthat we can configure.\n\n264\n00:12:46.930 --> 00:12:51.300\nBut as a base, I've now got\na fully functional KVm host that's\n\n265\n00:12:51.300 --> 00:12:54.440\nready to host up some VMs and\nget them available on my network.\n\n266\n00:12:54.440 --> 00:12:56.126\n&gt;&gt; So the server is complete now?\n\n267\n00:12:56.126 --> 00:12:57.732\n&gt;&gt; Yeah, it's pretty complete.\n\n268\n00:12:57.732 --> 00:13:01.240\nAgain, I'll probably wanna do some\ntweaking, if I've clustered file systems.\n\n269\n00:13:01.240 --> 00:13:03.110\nI need to set up back ups, right?\n\n270\n00:13:03.110 --> 00:13:04.340\nHow do I back this stuff up?\n\n271\n00:13:04.340 --> 00:13:05.797\nI need to figure out where my pools are,\nand\n\n272\n00:13:05.797 --> 00:13:07.750\nset up some sort of back\nup system to catch those.\n\n273\n00:13:07.750 --> 00:13:10.590\nIf I'm using LVM,\nI could probably take volume snapshots,\n\n274\n00:13:10.590 --> 00:13:13.430\nwhich are a heck of a lot faster than\nbacking up the individual files.\n\n275\n00:13:13.430 --> 00:13:17.480\nWe can do stuff like that to try and\nkeep that kind of safe.\n\n276\n00:13:17.480 --> 00:13:20.986\nI'll need to set up monitoring, so\nthat I can monitor disk IO and RAM and\n\n277\n00:13:20.986 --> 00:13:23.870\nCPU to make sure that my\nserver's able to handle the load.\n\n278\n00:13:23.870 --> 00:13:26.880\nAs I start creating all this [INAUDIBLE]\nthis kind of impacts things on the host\n\n279\n00:13:26.880 --> 00:13:28.320\nside, we need to monitor that.\n\n280\n00:13:28.320 --> 00:13:32.180\nThat's all additional tasks, you need\nto perform as part of your routine.\n\n281\n00:13:32.180 --> 00:13:34.864\nBut at a minimum,\nI've got it up and going, and\n\n282\n00:13:34.864 --> 00:13:38.840\nit's ready to receive virtual machines,\nit's configured.\n\n283\n00:13:38.840 --> 00:13:42.450\n&gt;&gt; Awesome, so Linux as a KVM host\npart two, there was part one,\n\n284\n00:13:42.450 --> 00:13:45.310\nmake sure you see both\nparts [INAUDIBLE] experts.\n\n285\n00:13:45.310 --> 00:13:46.735\n&gt;&gt; That's about you need\nto hear on the host,\n\n286\n00:13:46.735 --> 00:13:48.210\nthe real exciting stuff\nis about to happen.\n\n287\n00:13:48.210 --> 00:13:50.780\nSo stay tuned for our next episode,\nwhere we're gonna fire up the guest.\n\n288\n00:13:50.780 --> 00:13:54.980\nWe'll get Linux installed as a guest and\nsee how that operates on top of KVM and\n\n289\n00:13:54.980 --> 00:13:56.980\nhow we can use that to build\nout our infrastructure.\n\n290\n00:13:56.980 --> 00:13:59.738\nSo just remember with this technology,\nif it's good enough for Amazon,\n\n291\n00:13:59.738 --> 00:14:01.123\nit's probably good enough for you.\n\n292\n00:14:01.123 --> 00:14:03.517\n&gt;&gt; [LAUGH]\n&gt;&gt; They spin up more virtual machines than\n\n293\n00:14:03.517 --> 00:14:04.046\nanybody.\n\n294\n00:14:04.046 --> 00:14:06.880\nSo that's basically what\nwe're kinda building here.\n\n295\n00:14:06.880 --> 00:14:10.692\nAnd remember that I could have done all\nthis straight from the server using\n\n296\n00:14:10.692 --> 00:14:12.240\nthe command line if I wanted.\n\n297\n00:14:12.240 --> 00:14:13.995\n&gt;&gt; Right.\n&gt;&gt; If I wanted to learn all the really\n\n298\n00:14:13.995 --> 00:14:16.270\nlong commands,\nthe things are easy to mess up.\n\n299\n00:14:16.270 --> 00:14:19.038\nUsing a GUI makes that life a lot easier.\n\n300\n00:14:19.038 --> 00:14:23.510\nAnd my virt-manager crashed two times,\nthree times on the show here.\n\n301\n00:14:23.510 --> 00:14:25.930\nThat's not a common thing,\nI need to find out why that happened.\n\n302\n00:14:25.930 --> 00:14:28.160\nI haven't seen that crash\non my laptop before.\n\n303\n00:14:28.160 --> 00:14:31.028\nSo I probably mess something up,\nbut normally it's very stable and\n\n304\n00:14:31.028 --> 00:14:33.255\nvery reliable and\nit does a great job of managing it.\n\n305\n00:14:33.255 --> 00:14:37.112\nBut even when that management interface\ncrash, the server didn't crash,\n\n306\n00:14:37.112 --> 00:14:39.470\nKVM didn't crash, just virt-manager did.\n\n307\n00:14:39.470 --> 00:14:42.140\nSo it didn't impact the actual\noperation of the server.\n\n308\n00:14:42.140 --> 00:14:43.181\n&gt;&gt; Well, if that isn't a tease for\n\n309\n00:14:43.181 --> 00:14:43.906\nthe next-\n&gt;&gt; [LAUGH]\n\n310\n00:14:43.906 --> 00:14:45.440\n&gt;&gt; Episode, I don't know what is.\n\n311\n00:14:45.440 --> 00:14:46.620\nLinux is a KVM host,\n\n312\n00:14:46.620 --> 00:14:50.865\nLinux in the Cloud that's gonna be\na lot of video content in this series.\n\n313\n00:14:50.865 --> 00:14:52.985\nMake sure you watch everything and\nbe very glad you did.\n\n314\n00:14:52.985 --> 00:14:54.295\nDon, awesome job.\n\n315\n00:14:54.295 --> 00:14:56.265\nAnd thank you for watching ITPro.TV.\n\n316\n00:14:56.265 --> 00:14:59.065\nRemember, a good ITPro is always learning.\n\n317\n00:14:59.065 --> 00:14:59.935\nI'm Zach Memos.\n\n318\n00:14:59.935 --> 00:15:00.605\n&gt;&gt; And I'm Don Pezet.\n\n319\n00:15:00.605 --> 00:15:03.868\n&gt;&gt; And we will see you again very soon.\n\n320\n00:15:03.868 --> 00:15:09.729\n[MUSIC]\n\n321\n00:15:09.729 --> 00:15:13.123\n&gt;&gt; Thank you for watching ITPro.TV.\n\n",
          "vimeoId": "230939085"
        },
        {
          "description": "Don and Zach discuss what a KVM Guest is, what information we need before we create a VM, installation media, how KVM handles installation media, creating a VM, other VM options to configure, and beginning to install the Guest.",
          "length": "1877",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-1-2-linux_as_a_kvm_guest-082417-PGM.00_31_01_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-1-2-linux_as_a_kvm_guest-082417-PGM.00_31_01_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-1-2-linux_as_a_kvm_guest-082417-PGM.00_31_01_18.Still001-sm.jpg",
          "title": "Linux as a KVM Guest",
          "transcript": "WEBVTT\n\n1\n00:00:00.023 --> 00:00:03.356\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:03.356 --> 00:00:05.204\nWe're coming at you live from\nSan Francisco, California.\n\n3\n00:00:05.204 --> 00:00:06.851\n[CROSSTALK]\n\n4\n00:00:06.851 --> 00:00:08.253\n[MUSIC]\n\n5\n00:00:08.253 --> 00:00:12.140\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:12.140 --> 00:00:12.880\n&gt;&gt; Hello and thank you for\n\n7\n00:00:12.880 --> 00:00:17.305\nchoosing ITProTv helping you\nlearn everywhere you go.\n\n8\n00:00:17.305 --> 00:00:21.425\nI'm Zach Memos and I'm your host as we\ncontinue with Linux in the Cloud and\n\n9\n00:00:21.425 --> 00:00:24.455\nwe're gonna be looking at KVM Guest today.\n\n10\n00:00:24.455 --> 00:00:28.570\nAnd the person giving us the information\nwe need Is the one the only Don Pezet.\n\n11\n00:00:28.570 --> 00:00:29.890\nDon thank you for joining us.\n\n12\n00:00:29.890 --> 00:00:31.030\n&gt;&gt; Thanks for having me Zach and\n\n13\n00:00:31.030 --> 00:00:33.320\nlike you said we're going to\nbe picking with KVM guests.\n\n14\n00:00:33.320 --> 00:00:36.450\nIn our last episode we left\nour intrepid explorers\n\n15\n00:00:36.450 --> 00:00:39.160\nhaving installed the KVM service right?\n\n16\n00:00:39.160 --> 00:00:41.890\nSo we had the kernel virtual\nmachine service up and running.\n\n17\n00:00:41.890 --> 00:00:45.880\nTechnically we had KVMQMU up and running\nso we took care of the server side,\n\n18\n00:00:45.880 --> 00:00:46.680\nthe host side.\n\n19\n00:00:46.680 --> 00:00:49.080\nWell now the host is done,\nwe need to start creating guests.\n\n20\n00:00:49.080 --> 00:00:54.370\nWe need to get our virtual machines up and\nrunning and those virtual machines\n\n21\n00:00:54.370 --> 00:00:59.070\nmight be Windows, or Linux or whatever OS\nwe're choosing to kinda chuck in there.\n\n22\n00:00:59.070 --> 00:01:02.360\nBut there are a few things that we need\nto be aware of and kinda run through that\n\n23\n00:01:02.360 --> 00:01:05.260\nprocess, what it takes to get a guest\nup and running in the KVM environment.\n\n24\n00:01:05.260 --> 00:01:08.150\nSo that's what we're gonna be taking\na look at right here in this episode\n\n25\n00:01:08.150 --> 00:01:11.790\nis configuring Linux as\na guest in a KVM environment.\n\n26\n00:01:11.790 --> 00:01:15.260\n&gt;&gt; Well Don, what kind of information\ndo we need to create a VM?\n\n27\n00:01:15.260 --> 00:01:17.630\n&gt;&gt; All right, so\nbefore we get started on creating a VM,\n\n28\n00:01:17.630 --> 00:01:20.060\nyou need to understand the resources\nthat you're gonna need.\n\n29\n00:01:20.060 --> 00:01:23.630\nThat's important,\nyour host has limited resources.\n\n30\n00:01:23.630 --> 00:01:26.700\nAnd every guest is gonna be\ntaking some of those away.\n\n31\n00:01:26.700 --> 00:01:28.420\nSo you don't wanna go too crazy.\n\n32\n00:01:28.420 --> 00:01:32.590\nSo for example, I'm using my laptop, and\nin my laptop, I have 32 gigs of RAM.\n\n33\n00:01:32.590 --> 00:01:35.270\nSo if I start creating virtual machines,\nand\n\n34\n00:01:35.270 --> 00:01:38.974\nI get each of them 16 gigs of RAM,\nhow many of them can I create.\n\n35\n00:01:38.974 --> 00:01:40.060\n&gt;&gt; 110.\n[LAUGH]\n\n36\n00:01:40.060 --> 00:01:42.640\n&gt;&gt; You might say I can create two.\n\n37\n00:01:42.640 --> 00:01:46.600\nBut even if I create two, I'm not\nleaving memory for my underlying OS.\n\n38\n00:01:46.600 --> 00:01:48.430\nNow I'm gonna run out of resource there.\n\n39\n00:01:48.430 --> 00:01:53.220\nSo we've got to be careful with\nall of this because if I, maybe\n\n40\n00:01:53.220 --> 00:01:56.600\nI'll just take a look at my system monitor\nhere, if I pull up my system monitor,\n\n41\n00:01:56.600 --> 00:02:01.580\nyou got everything here competing for\nCPU, everything competing for memory.\n\n42\n00:02:01.580 --> 00:02:04.700\nAnd we've got to make sure that\nwe've got enough resources available\n\n43\n00:02:04.700 --> 00:02:05.780\nto be able to handle this.\n\n44\n00:02:05.780 --> 00:02:09.340\nSo I need to think about\nthat as I lay out a VM.\n\n45\n00:02:09.340 --> 00:02:12.550\nI need to look at my current network\nbandwidth, my current memory,\n\n46\n00:02:12.550 --> 00:02:15.640\nmy current CPU, and\nunderstand how they get stalled out.\n\n47\n00:02:15.640 --> 00:02:21.240\nNow looking at my laptop I've got a four\ncore CPU and my cores are kinda cruising,\n\n48\n00:02:21.240 --> 00:02:27.010\nlooks like I'm probably averaging around\nsay 20% CPU utilization right now.\n\n49\n00:02:27.010 --> 00:02:29.950\nEvery guest that I add is\ngonna contribute to that.\n\n50\n00:02:29.950 --> 00:02:32.730\nOn the memory side, well I'm barely\nusing any of my memory, right?\n\n51\n00:02:32.730 --> 00:02:36.000\nSo I've got at least 30 gigs\nof memory available here.\n\n52\n00:02:36.000 --> 00:02:37.860\nSo tons of space that's available here,\n\n53\n00:02:37.860 --> 00:02:41.350\nit's telling me I'm only using\n4.1% of my available memory.\n\n54\n00:02:41.350 --> 00:02:44.510\nBut every VM I create is\ngoing to slice away at that.\n\n55\n00:02:44.510 --> 00:02:45.990\nSo, before I just jump in and\n\n56\n00:02:45.990 --> 00:02:49.340\nstart creating VMs,\nI need to come up with a list.\n\n57\n00:02:49.340 --> 00:02:51.770\nHow much CPU am I going to need on this?\n\n58\n00:02:51.770 --> 00:02:54.680\nCan I do it with just one CPU so\nit stays on one core or\n\n59\n00:02:54.680 --> 00:02:58.620\ndo I need to give it two CPUs or three so\nit will start spreading across cores?\n\n60\n00:02:58.620 --> 00:03:00.510\nDo I need to give it a bunch of RAM?\n\n61\n00:03:00.510 --> 00:03:03.680\nCan you get by with just two gigs of Ram,\nor does it need four, or six, or\n\n62\n00:03:03.680 --> 00:03:04.810\nwhat do I want to assign?\n\n63\n00:03:04.810 --> 00:03:06.730\nI need to think about disk space.\n\n64\n00:03:06.730 --> 00:03:08.736\nHow big is the hard drive gonna be?\n\n65\n00:03:08.736 --> 00:03:11.624\nAnd disk space is a bit\nof a challenge because,\n\n66\n00:03:11.624 --> 00:03:16.364\nwhen we create a Virtual Machine in KDM\nit’s gonna default using QUM image,\n\n67\n00:03:16.364 --> 00:03:20.236\nwhich is gonna create what is\ncalled are called sparse disks.\n\n68\n00:03:20.236 --> 00:03:23.722\nIf I create a 100 gig sparse\ndisk on the hard drive,\n\n69\n00:03:23.722 --> 00:03:27.132\nit will only consume a couple\nof megabytes of data and\n\n70\n00:03:27.132 --> 00:03:32.745\nthat's it because it's empty and as I\nfill it, it will grow to fill that space.\n\n71\n00:03:32.745 --> 00:03:34.555\nWell, when it goes to go\nportion out the file,\n\n72\n00:03:34.555 --> 00:03:37.715\nit checks to make sure that you actually\nhave that much space available.\n\n73\n00:03:37.715 --> 00:03:40.915\nSo, I might not have 100 gigs\navailable on my disk, but\n\n74\n00:03:40.915 --> 00:03:44.315\nI'm creating 100 gig disk because I know\nit can grow, but it won't let me do that.\n\n75\n00:03:44.315 --> 00:03:47.825\nSo, I have to make sure I've got enough\nfree space to be able to handle that.\n\n76\n00:03:47.825 --> 00:03:49.485\nAnd then I need to make sure\nmy networks are configured,\n\n77\n00:03:49.485 --> 00:03:53.020\nwhich is the last thing we covered in\nthe episode on configuring KVM host.\n\n78\n00:03:53.020 --> 00:03:55.040\nYou need to get your networks\nconfigured the way that you want so\n\n79\n00:03:55.040 --> 00:03:56.170\nthe VMs can attach to it.\n\n80\n00:03:56.170 --> 00:04:01.550\nThe other thing I need to think about\nis whether my virtual machine is going\n\n81\n00:04:01.550 --> 00:04:06.790\nto be able to do full virtualization, it's\ncalled HVM, the hardware virtualization.\n\n82\n00:04:07.850 --> 00:04:11.750\nIf it can do HVM, it's gonna run\non the type-1 hypervisor on KVM,\n\n83\n00:04:11.750 --> 00:04:13.440\nit's gonna run great.\n\n84\n00:04:13.440 --> 00:04:16.920\nIf it can't do that though that doesn't\nsupport that underlying infrastructure\n\n85\n00:04:16.920 --> 00:04:19.640\nthen it's going to fall\nback to QAM mode and\n\n86\n00:04:19.640 --> 00:04:24.440\nin QAM mode that's paravirturalization or\nPV and that's a lot slower,\n\n87\n00:04:24.440 --> 00:04:28.010\nit's a lot more compatible but it's a lot\nslower than if we were in HVM mode.\n\n88\n00:04:28.010 --> 00:04:32.500\nSo depending on the guest I install I\nmight have to run in PV mode versus HVM.\n\n89\n00:04:32.500 --> 00:04:36.770\nIf I installed Windows it can't rely\non the underlying Linux kernel.\n\n90\n00:04:36.770 --> 00:04:39.820\nIt's going to ignore that so\nit's going to have some problems.\n\n91\n00:04:39.820 --> 00:04:44.380\nBut Microsoft actually put Functionality\nin there to make it work in HVM mode, but\n\n92\n00:04:44.380 --> 00:04:45.720\nother operating systems haven't done that.\n\n93\n00:04:45.720 --> 00:04:49.150\nAs long as you're throwing Linux in here,\nyou're gonna be fine.\n\n94\n00:04:49.150 --> 00:04:53.520\nAll the major Linux distros package\nthe virtualization tools right\n\n95\n00:04:53.520 --> 00:04:56.100\ninside of the distros,\neven when you're installing on bare metal.\n\n96\n00:04:56.100 --> 00:04:58.570\nSo they've already got it, and\nthey'll operate just fine.\n\n97\n00:04:58.570 --> 00:05:00.020\nSo it's not normally an issue.\n\n98\n00:05:00.020 --> 00:05:02.540\nAnd we're focusing on Linux\nin the shell anyway so\n\n99\n00:05:02.540 --> 00:05:05.220\nI'm gonna just ignore that issue\ncuz it's not gonna come up.\n\n100\n00:05:05.220 --> 00:05:09.790\nWhen we install, it's going to be an HVM\nor a hardware virtualized machine.\n\n101\n00:05:09.790 --> 00:05:13.980\nOnce we know our other resources, then\nwe've kind of gathered all the information\n\n102\n00:05:13.980 --> 00:05:17.200\nwe need, we're ready to launch in and\ncreate the VM.\n\n103\n00:05:17.200 --> 00:05:21.510\n&gt;&gt; What about the installation media,\ndoes KDM automatically handle that?\n\n104\n00:05:21.510 --> 00:05:23.620\n&gt;&gt; Okay, so good point, right.\n\n105\n00:05:23.620 --> 00:05:26.890\nIf it's a free operating\nsystem like Linux, or\n\n106\n00:05:26.890 --> 00:05:29.730\nin my case where I'm already\nrunning Red Hat on my desktop.\n\n107\n00:05:29.730 --> 00:05:33.130\nIf I wanna create a VM,\ncan it just pull the OS from underneath?\n\n108\n00:05:33.130 --> 00:05:34.930\nAnd the short answer is no,\nit doesn't do that.\n\n109\n00:05:34.930 --> 00:05:36.760\nI've got to have the installation media.\n\n110\n00:05:36.760 --> 00:05:40.510\nI need to have, preferably,\nan ISO image to be able to\n\n111\n00:05:40.510 --> 00:05:43.780\nboot the virtual machine off of and\nperform the install and you can go and\n\n112\n00:05:43.780 --> 00:05:46.950\ndownload ISO images just like you do for\ninstalling a regular machine.\n\n113\n00:05:46.950 --> 00:05:48.670\nThere's nothing special there.\n\n114\n00:05:48.670 --> 00:05:51.370\nBut remember a comment that\nI made in the last episode.\n\n115\n00:05:51.370 --> 00:05:57.940\nIn order for KDM to see the ISO image,\nIt needs to be in a storage pool.\n\n116\n00:05:57.940 --> 00:06:01.730\nSo in that last episode we added\na storage pool just for the ISO images.\n\n117\n00:06:01.730 --> 00:06:03.150\nSo you need that setup.\n\n118\n00:06:03.150 --> 00:06:04.810\nThe only other place it can be,\n\n119\n00:06:04.810 --> 00:06:08.400\nat least by default is in\na physical DVD drive on the server.\n\n120\n00:06:08.400 --> 00:06:11.060\nWell, my server doesn't have a DVD drive.\n\n121\n00:06:11.060 --> 00:06:12.500\nMy laptop doesn't have a DVD drive.\n\n122\n00:06:12.500 --> 00:06:14.300\nSo that's not really an option.\n\n123\n00:06:14.300 --> 00:06:15.376\n&gt;&gt; That was the olden days.\n\n124\n00:06:15.376 --> 00:06:17.150\n[LAUGH]\n&gt;&gt; That's really true.\n\n125\n00:06:17.150 --> 00:06:18.730\nI mean, Zach,\nyour laptop doesn't have a job.\n\n126\n00:06:18.730 --> 00:06:19.740\n&gt;&gt; Nope.\n&gt;&gt; It's\n\n127\n00:06:19.740 --> 00:06:23.040\npretty uncommon these systems to find\nsystems that have CD or DVD drives.\n\n128\n00:06:23.040 --> 00:06:26.670\nSo now, those aren't the only two\ntypes of insoles you can do though,\n\n129\n00:06:26.670 --> 00:06:29.030\nyou can do a pixie boot install or\na network install.\n\n130\n00:06:29.030 --> 00:06:32.520\nIf you're all set up for\nthat you could have the VM pre-built.\n\n131\n00:06:32.520 --> 00:06:36.350\nSomebody needs to be sending you the VM\nas they call it a compliance, right?\n\n132\n00:06:36.350 --> 00:06:39.590\nAnd you can import that in the KVM and\nnow it's all ready built,\n\n133\n00:06:39.590 --> 00:06:42.700\nyou're actually not doing the install,\nyou're just importing a prebuilt VM.\n\n134\n00:06:42.700 --> 00:06:46.800\nBut for most of us we're going to be\ndoing the install from an ISO image.\n\n135\n00:06:46.800 --> 00:06:47.510\nSo you'll need to go ahead and\n\n136\n00:06:47.510 --> 00:06:51.310\nsecure that and drop it into\na storage pool to have it available.\n\n137\n00:06:51.310 --> 00:06:52.340\n&gt;&gt; Good stuff Don.\n\n138\n00:06:52.340 --> 00:06:55.020\nWith all that out of the way\nhow do we create the VM?\n\n139\n00:06:55.020 --> 00:06:56.960\n&gt;&gt; All right so after that we're\nready to do our real work.\n\n140\n00:06:56.960 --> 00:06:59.770\nSo I'm going to jump back\nhere to my vert manager and\n\n141\n00:06:59.770 --> 00:07:04.140\nthis is the same tool we were using when\nwe set up the server in the last episode.\n\n142\n00:07:04.140 --> 00:07:08.820\nAnd I'm just gonna hit the nice shiny\nNew VM button, or I can go to File and\n\n143\n00:07:08.820 --> 00:07:11.850\nNew Virtual Machine, either one it's\ngonna take me to the same place.\n\n144\n00:07:11.850 --> 00:07:15.200\nAnd that's gonna take me\ninto the New VM wizard, and\n\n145\n00:07:15.200 --> 00:07:18.470\nthe first thing it's gonna ask me is,\nwhere am I getting install media from?\n\n146\n00:07:18.470 --> 00:07:20.050\nIs it gonna come from an ISO image,\n\n147\n00:07:20.050 --> 00:07:22.290\nin which case it's gonna\nlook to a storage pool.\n\n148\n00:07:22.290 --> 00:07:25.680\nOr is it gonna look for\na network install, or PXE boot, or\n\n149\n00:07:25.680 --> 00:07:27.430\nam I gonna import an existing image?\n\n150\n00:07:27.430 --> 00:07:28.870\nAll right, those are all the ones,\n\n151\n00:07:28.870 --> 00:07:32.245\nI guess instead of memorizing them I could\nhave read them right off the screen.\n\n152\n00:07:32.245 --> 00:07:33.075\n[LAUGH]\n&gt;&gt; You could have.\n\n153\n00:07:33.075 --> 00:07:34.110\n[LAUGH]\n&gt;&gt; So anyhow,\n\n154\n00:07:34.110 --> 00:07:35.980\nthese are the different options.\n\n155\n00:07:35.980 --> 00:07:39.310\nI'm gonna do an ISO image\nbecause I've got the CD handy.\n\n156\n00:07:39.310 --> 00:07:41.080\nSo I'll hit Forward.\n\n157\n00:07:41.080 --> 00:07:43.070\nAnd on the next screen\nit's gonna ask me to pick.\n\n158\n00:07:43.070 --> 00:07:43.770\nPick the CD image.\n\n159\n00:07:43.770 --> 00:07:46.580\nNow, why does it care so\nmuch about the CD image right now?\n\n160\n00:07:46.580 --> 00:07:49.593\nWell the reason is when it\nbuilds the virtual machine,\n\n161\n00:07:49.593 --> 00:07:54.114\nthere's subtle changes that it can make\ndepending on which operating system it is\n\n162\n00:07:54.114 --> 00:07:57.323\nthat I'm going to run If I'm running BSD,\nlike free BSD,\n\n163\n00:07:57.323 --> 00:08:01.409\nthere are certain things it expects\nto be available when handles memory.\n\n164\n00:08:01.409 --> 00:08:04.346\nLinux, on the other hand,\nhandles it a different way.\n\n165\n00:08:04.346 --> 00:08:06.230\nOr Windows handles it yet another way.\n\n166\n00:08:06.230 --> 00:08:08.894\nSo it's gonna try and\nbuild up the virtual machine.\n\n167\n00:08:08.894 --> 00:08:12.436\nAnd so by telling it which ISO I'm gonna\nuse, right down here, it'll try and\n\n168\n00:08:12.436 --> 00:08:14.990\nfigure out which operating\nsystem I'm going to run.\n\n169\n00:08:14.990 --> 00:08:16.940\nNow normally,\nit does a pretty good job of that.\n\n170\n00:08:16.940 --> 00:08:20.110\nI can hit browse and\nI can look at my storage pools.\n\n171\n00:08:20.110 --> 00:08:23.250\nAnd here is the ISO folder that\nI added in the last episode, and\n\n172\n00:08:23.250 --> 00:08:24.370\nI can find what I wanna install.\n\n173\n00:08:24.370 --> 00:08:27.980\nI'm gonna install CentOS 7, so\nI'll pick CentOS right here.\n\n174\n00:08:27.980 --> 00:08:32.600\nAnd when I choose that volume,\nit's gonna mount it, and it identified it.\n\n175\n00:08:32.600 --> 00:08:33.370\nIt recognized that,\n\n176\n00:08:33.370 --> 00:08:37.600\nthis is Linux and CentOS 7 is the\noperating system that we're gonna install.\n\n177\n00:08:37.600 --> 00:08:39.730\nIf I uncheck that,\nI could have overwritten it.\n\n178\n00:08:39.730 --> 00:08:41.600\nAnd this is a great way to\nfind out what's supported.\n\n179\n00:08:41.600 --> 00:08:43.243\nIf you're just curious,\nlike, what can I run?\n\n180\n00:08:43.243 --> 00:08:44.000\nMm-hm, exactly.\n\n181\n00:08:44.000 --> 00:08:45.456\n&gt;&gt; Inside of.\n\n182\n00:08:45.456 --> 00:08:52.315\nWell, on the overall categories, we've got\nLinux, Windows, UNIX, Solaris, and other.\n\n183\n00:08:52.315 --> 00:08:54.080\nOther's a lot of fun.\n\n184\n00:08:54.080 --> 00:08:55.700\nOther, it might as well just say unstable,\nright?\n\n185\n00:08:55.700 --> 00:08:59.078\nThese are operating systems that\nmight work inside a KVM, but\n\n186\n00:08:59.078 --> 00:09:00.698\nyou don't really get full support.\n\n187\n00:09:00.698 --> 00:09:03.260\nThe ones that are named,\nyou get full support for.\n\n188\n00:09:03.260 --> 00:09:04.520\nSo I can actually go in here and\n\n189\n00:09:04.520 --> 00:09:08.980\nfire up a true UNIX system which would\nbe like SCO UNIX or one of those.\n\n190\n00:09:08.980 --> 00:09:12.900\nI could fire up Solaris, which also is a\ntrue UNIX, but it's controlled by Oracle.\n\n191\n00:09:12.900 --> 00:09:14.130\nI can do Linux.\n\n192\n00:09:14.130 --> 00:09:19.280\nAnd under Linux, I can drop that down,\nand I'll see Fedora, ALT Linux.\n\n193\n00:09:19.280 --> 00:09:20.425\nYou'll find other ones in here.\n\n194\n00:09:20.425 --> 00:09:23.520\nMandrake, CentOS, Debian, Ubuntu, Gnome.\n\n195\n00:09:24.880 --> 00:09:25.665\nThat was not a Linux.\n\n196\n00:09:25.665 --> 00:09:27.810\n&gt;&gt; [LAUGH]\n&gt;&gt; All right, well apparently,\n\n197\n00:09:27.810 --> 00:09:29.220\nGnome has their own distribution.\n\n198\n00:09:29.220 --> 00:09:30.840\nMagea, I was doing it well.\n\n199\n00:09:30.840 --> 00:09:33.105\n&gt;&gt; Surprise, surprise, surprise!\n\n200\n00:09:33.105 --> 00:09:34.949\n&gt;&gt; [LAUGH] So there's SUSE Linux, right?\n\n201\n00:09:34.949 --> 00:09:36.758\nAnd we can pick each one, open SUSE.\n\n202\n00:09:36.758 --> 00:09:39.059\nWhatever it is that we're\nplanning on installing,\n\n203\n00:09:39.059 --> 00:09:41.570\nthere's a wide range of\nthem that are supported.\n\n204\n00:09:41.570 --> 00:09:44.337\nAnd not just the latest and\ngreatest, right?\n\n205\n00:09:44.337 --> 00:09:47.670\nSo like Ubuntu 16.04 is\nthe latest long term support.\n\n206\n00:09:47.670 --> 00:09:50.695\n14.04 is the oldest long term\nsupport that's still supported.\n\n207\n00:09:50.695 --> 00:09:53.869\nAnd then behind that, though,\nthey're going all the way back to,\n\n208\n00:09:53.869 --> 00:09:54.769\nlike how far back?\n\n209\n00:09:54.769 --> 00:09:56.840\nTo Ubuntu 4.10, that's ancient.\n\n210\n00:09:56.840 --> 00:09:59.239\nWow,.\nSo, they really do go far back on that.\n\n211\n00:09:59.239 --> 00:10:01.805\nAnd if I choose some of\nthe other vendors in here.\n\n212\n00:10:01.805 --> 00:10:03.140\nLike if I go UNIX.\n\n213\n00:10:03.140 --> 00:10:04.542\nWell, there's FreeBSD.\n\n214\n00:10:04.542 --> 00:10:07.524\nWe'll find OpenBSD tucked\naway down here as well.\n\n215\n00:10:07.524 --> 00:10:08.620\nAnd NetBSD, right?\n\n216\n00:10:08.620 --> 00:10:10.940\nSo each of those are kind of in there.\n\n217\n00:10:10.940 --> 00:10:12.640\nAnd Solaris, Windows is the same, right?\n\n218\n00:10:12.640 --> 00:10:14.500\nSo whatever it is that we're\nplanning on spinning up.\n\n219\n00:10:14.500 --> 00:10:17.830\nBut in this show, I'm doing Linux,\nand I'm doing CentOS 7,\n\n220\n00:10:17.830 --> 00:10:20.575\nwhich it automatically detected for me.\n\n221\n00:10:20.575 --> 00:10:21.780\n&gt;&gt; Mm-hm.\n\n222\n00:10:21.780 --> 00:10:23.810\n&gt;&gt; So, once I've got that set,\nI can move forward.\n\n223\n00:10:23.810 --> 00:10:27.710\nAnd now is where I need to take all of\nthat information I gathered earlier and\n\n224\n00:10:27.710 --> 00:10:28.940\nput it to use, okay?\n\n225\n00:10:28.940 --> 00:10:31.830\nSo, how much memory do I need?\n\n226\n00:10:31.830 --> 00:10:34.310\nAnd how many CPUs do I need?\n\n227\n00:10:34.310 --> 00:10:36.025\nAnd I typically wanna do the bare minimum.\n\n228\n00:10:36.025 --> 00:10:36.530\nMm-um.\nSo\n\n229\n00:10:36.530 --> 00:10:39.070\nthat I leave resources available for\nother machines.\n\n230\n00:10:39.070 --> 00:10:43.620\nBut I need to have a good understanding\nof what my machine's gonna require.\n\n231\n00:10:43.620 --> 00:10:46.340\nI can come through here and\nI can specify those values.\n\n232\n00:10:46.340 --> 00:10:48.430\nI'm gonna go ahead and I'll bump this up.\n\n233\n00:10:48.430 --> 00:10:50.250\nI'm gonna do 4 gigs of memory.\n\n234\n00:10:50.250 --> 00:10:53.358\nAnd I like to do the actual memory count.\n\n235\n00:10:53.358 --> 00:10:57.540\nSo 4 gigs of memory would actually\nbe 4096 megabytes of memory.\n\n236\n00:10:57.540 --> 00:11:01.020\nBut you could just put 4000 if you wanted,\nit just is up to you.\n\n237\n00:11:01.020 --> 00:11:02.060\nAnd then the amount of CPUs.\n\n238\n00:11:02.060 --> 00:11:03.790\nNow this is an interesting one.\n\n239\n00:11:03.790 --> 00:11:05.760\nMy laptop has four cores, right?\n\n240\n00:11:05.760 --> 00:11:07.940\nOne CPU and four cores.\n\n241\n00:11:07.940 --> 00:11:11.325\nIn a virtual machine, there's no need for\nthat whole core analogy.\n\n242\n00:11:11.325 --> 00:11:13.910\nMm-hm.\nSo it just treats them as all CPUs.\n\n243\n00:11:13.910 --> 00:11:16.020\nI can give the system one CPU.\n\n244\n00:11:16.020 --> 00:11:18.222\nSo now this VM will\nonly see one processor.\n\n245\n00:11:18.222 --> 00:11:20.490\nAnd that'll guarantee that on my desktop,\n\n246\n00:11:20.490 --> 00:11:24.030\nmy three other cores will always be\navailable for other things that I'm doing.\n\n247\n00:11:24.030 --> 00:11:26.420\nThat might be ideal,\nif I have more than one VM.\n\n248\n00:11:26.420 --> 00:11:29.350\nI don't want one VM maxing\nout all my CPU cores and\n\n249\n00:11:29.350 --> 00:11:31.570\ntaking away resources from the other VMs.\n\n250\n00:11:31.570 --> 00:11:33.943\nBut if I want this VM to run fast.\n\n251\n00:11:33.943 --> 00:11:36.790\nAnd I want it to do multi-threading,\nand be able to take advantage of that.\n\n252\n00:11:36.790 --> 00:11:39.080\nI'll probably want to bump up the CPUs.\n\n253\n00:11:39.080 --> 00:11:43.830\nNow be careful with this, because\nthere are some versions of KVM that\n\n254\n00:11:43.830 --> 00:11:47.590\nwill let you assign more CPU cores\nthan you actually have, okay?\n\n255\n00:11:47.590 --> 00:11:50.520\nIt's called oversubscription,\nand it's generally not\n\n256\n00:11:50.520 --> 00:11:53.530\na good idea to tell it that it has\nmore cores than you actually have.\n\n257\n00:11:53.530 --> 00:11:55.530\nSo you wanna make sure you try and\nhold it.\n\n258\n00:11:55.530 --> 00:11:57.680\nAnd you'll see here, I'm running Red Hat.\n\n259\n00:11:57.680 --> 00:12:01.390\nAnd the Red Hat guys are really good about\nmaking sure you don't do dumb things.\n\n260\n00:12:01.390 --> 00:12:03.330\nAnd so it's maxing me out at four.\n\n261\n00:12:03.330 --> 00:12:05.910\nI can't go beyond that,\ncuz I've only got four cores.\n\n262\n00:12:05.910 --> 00:12:07.662\nBut I'm gonna hold this one down to two.\n\n263\n00:12:07.662 --> 00:12:08.920\nMm-hm.\nBecause that'll make sure that I've always\n\n264\n00:12:08.920 --> 00:12:13.580\ngot at least two more cores that are\navailable for my underlying OS, all right?\n\n265\n00:12:13.580 --> 00:12:16.160\nThen, how much disk space do we need?\n\n266\n00:12:16.160 --> 00:12:19.380\nNow be careful on this screen,\ncuz it needs to create a hard drive.\n\n267\n00:12:19.380 --> 00:12:23.030\nAnd it is, by default, going to try and\ncreate this nine gig hard drive.\n\n268\n00:12:23.030 --> 00:12:24.770\nNow, where did the nine come from?\n\n269\n00:12:24.770 --> 00:12:27.370\nWell, in their definition of CentOS 7,\n\n270\n00:12:27.370 --> 00:12:28.760\nthis must have been\nthe minimum requirement.\n\n271\n00:12:28.760 --> 00:12:32.510\nAnd so it's picked nine gigs for\nme as the default, but I can change that.\n\n272\n00:12:32.510 --> 00:12:35.760\nI actually want more,\nI want 64 gigs, okay?\n\n273\n00:12:35.760 --> 00:12:40.140\nNow, the problem with this is it's\ngonna create the storage, enable it.\n\n274\n00:12:40.140 --> 00:12:43.180\nBut it's not letting me pick\nwhere it's going to go.\n\n275\n00:12:43.180 --> 00:12:44.896\nWhere is the storage gonna actually go and\nsit?\n\n276\n00:12:44.896 --> 00:12:51.386\nWell, by default, the KBM,\nwhen we installed it.\n\n277\n00:12:51.386 --> 00:12:58.775\nIt set up a folder,\nwhich is /var/lib /libvert/images.\n\n278\n00:12:58.775 --> 00:13:03.200\nThat folder right there, okay?\n\n279\n00:13:03.200 --> 00:13:07.370\nAnd that's where it's going to put\nthe virtual machine files that it creates,\n\n280\n00:13:07.370 --> 00:13:08.590\nthe virtual disks.\n\n281\n00:13:08.590 --> 00:13:12.110\nWell for me,\n/var is just on my regular root partition.\n\n282\n00:13:12.110 --> 00:13:15.140\nSo I don't want the virtual\nmachine drive to sit there.\n\n283\n00:13:15.140 --> 00:13:18.530\nSo if I wanna put the vertical\ndrive somewhere else,\n\n284\n00:13:18.530 --> 00:13:20.540\nI need to select a storage pool.\n\n285\n00:13:20.540 --> 00:13:23.430\nAnd it's not really giving me that option,\nis it?\n\n286\n00:13:23.430 --> 00:13:26.090\nWell, it is, it's just not very clear.\n\n287\n00:13:26.090 --> 00:13:29.210\nRight beneath it, see how it says,\nselect or create a custom image?\n\n288\n00:13:29.210 --> 00:13:31.730\nA custom image is simply\nan image you put somewhere else\n\n289\n00:13:31.730 --> 00:13:33.490\nin a different place than the default.\n\n290\n00:13:33.490 --> 00:13:34.090\nSo I'm gonna do that.\n\n291\n00:13:34.090 --> 00:13:35.480\nI'm gonna create a custom image.\n\n292\n00:13:35.480 --> 00:13:41.030\nAnd when I hit manage, I can now pick\nthe storage pool that it's gonna go into.\n\n293\n00:13:41.030 --> 00:13:43.580\nSo I've got this mnt-storage that\nwe created in the last episode, and\n\n294\n00:13:43.580 --> 00:13:45.320\nI can put the volume there.\n\n295\n00:13:45.320 --> 00:13:46.720\nAnd so I can choose to add a volume,\n\n296\n00:13:46.720 --> 00:13:51.460\nand it's gonna call it centos7.0qcow2,\nI'll leave it at that.\n\n297\n00:13:51.460 --> 00:13:56.870\nQcow, Q-C-O-W,\nthat's the default file format for QEMU.\n\n298\n00:13:56.870 --> 00:13:58.630\nAnd on the disk storage side,\n\n299\n00:13:58.630 --> 00:14:04.240\nunless you're attaching a physical disk to\nthe VM, it's going to use qmu for disk IO.\n\n300\n00:14:04.240 --> 00:14:07.290\nSo regardless of whether we're HVM or\nPV at this point, it's going to do that.\n\n301\n00:14:07.290 --> 00:14:08.780\nSo qcow is fine.\n\n302\n00:14:08.780 --> 00:14:12.480\nThere are other formats that are supported\nlike qed, which is an older format.\n\n303\n00:14:12.480 --> 00:14:14.490\nOr raw, where you're doing raw data.\n\n304\n00:14:14.490 --> 00:14:17.520\nBut qcow is the one that's dynamic.\n\n305\n00:14:17.520 --> 00:14:21.060\nIt will grow automatically as data\ngoes in it, which is kind of nice.\n\n306\n00:14:21.060 --> 00:14:24.540\nRaw will actually apportion\nall that space right now.\n\n307\n00:14:24.540 --> 00:14:27.100\nAnd you can even manipulate\nhow that behavior works.\n\n308\n00:14:27.100 --> 00:14:31.810\nUnder the backing store, here's where I\ncan browse and pick where it's gonna go.\n\n309\n00:14:31.810 --> 00:14:34.330\nI dont' need to do that, because\nI'm putting this in a storage pool.\n\n310\n00:14:34.330 --> 00:14:36.460\nSo it already knows where to put it.\n\n311\n00:14:36.460 --> 00:14:40.930\nAnd then on the capacity side, I'm gonna\nbump mine up to 64 gigs in size, right?\n\n312\n00:14:40.930 --> 00:14:43.790\nSo I'll go ahead and finish that.\n\n313\n00:14:43.790 --> 00:14:48.180\nAnd so now, I've got a volume created\nthat's 64 gigs inside called CenOS 7.\n\n314\n00:14:48.180 --> 00:14:51.030\nAnd I'm gonna choose that volume to use.\n\n315\n00:14:51.030 --> 00:14:53.350\nAnd now it's going where I want it to go,\nright?\n\n316\n00:14:53.350 --> 00:14:57.140\nSo just be aware that if I just hit the\nsize here and hit create, it's gonna put\n\n317\n00:14:57.140 --> 00:15:01.750\nit in that /var/lib folder, which is\nnot necessarily where I want it to go.\n\n318\n00:15:01.750 --> 00:15:04.770\nUnless I've moved that\ndefault somewhere else, okay?\n\n319\n00:15:04.770 --> 00:15:06.960\nForward on that, and\nnow we're on our last screen.\n\n320\n00:15:06.960 --> 00:15:09.430\nAnd it's just asking me if I\nwanna change the name, right?\n\n321\n00:15:09.430 --> 00:15:11.010\nMaybe I don't wanna call mine Centos 7.\n\n322\n00:15:11.010 --> 00:15:14.950\nMaybe I wanna call it lab-webserver01,\nor 02,\n\n323\n00:15:14.950 --> 00:15:18.050\nor whatever it is that I'm creating,\nright?\n\n324\n00:15:18.050 --> 00:15:18.870\nSo I can give it a name.\n\n325\n00:15:18.870 --> 00:15:20.080\nThis is a name your end users don't see.\n\n326\n00:15:20.080 --> 00:15:21.450\nIt's a name that you see.\n\n327\n00:15:21.450 --> 00:15:23.120\nSo I can go in and set that.\n\n328\n00:15:23.120 --> 00:15:25.880\nIt's giving me the summary of\nthe information that I picked.\n\n329\n00:15:25.880 --> 00:15:28.370\nAnd then it's giving me\na chance to customize\n\n330\n00:15:28.370 --> 00:15:31.490\nthe configuration before I actually do the\ninstall, which I almost always wanna do.\n\n331\n00:15:31.490 --> 00:15:33.580\nCuz there's more options\nthe wizard doesn't show us.\n\n332\n00:15:33.580 --> 00:15:36.400\nAnd then, lastly, we've got out\nnetwork selection right here.\n\n333\n00:15:36.400 --> 00:15:39.830\nAnd I can choose which network\nit's going to be attached to.\n\n334\n00:15:39.830 --> 00:15:41.688\nSo it defaults to the NAT network, but\n\n335\n00:15:41.688 --> 00:15:44.950\nwe can see the [INAUDIBLE] studio one\nthat I added in in the last show.\n\n336\n00:15:44.950 --> 00:15:46.490\nSo I can pick the appropriate network.\n\n337\n00:15:46.490 --> 00:15:47.984\nI can always change this after the fact.\n\n338\n00:15:47.984 --> 00:15:50.486\nBut if I'm gonna launch\nright into the install,\n\n339\n00:15:50.486 --> 00:15:53.671\nthen I probably wanna make sure\nI pick the right network here.\n\n340\n00:15:53.671 --> 00:15:55.369\nI'll leave this one on the NAT side.\n\n341\n00:15:55.369 --> 00:15:58.354\n&gt;&gt; And when I hit Finish,\nit's not actually gonna start the install.\n\n342\n00:15:58.354 --> 00:16:01.603\nBecause I checked this box here,\ncustomize configuration before install.\n\n343\n00:16:01.603 --> 00:16:04.913\nSo I'm gonna go ahead and hit Finish\non that, so we can go into it and\n\n344\n00:16:04.913 --> 00:16:08.640\nnow we'll start to see some additional\nthings that we might want to tweak to\n\n345\n00:16:08.640 --> 00:16:09.903\nget this machine setup.\n\n346\n00:16:09.903 --> 00:16:10.535\n&gt;&gt; Well, Don,\n\n347\n00:16:10.535 --> 00:16:14.223\ncan you walk us through some of the other\nVM options we may want to configure?\n\n348\n00:16:14.223 --> 00:16:16.196\n&gt;&gt; Yeah, yeah,\nthere's a ton of stuff in here.\n\n349\n00:16:16.196 --> 00:16:19.275\nYou'll see the things\nthat were in the wizard.\n\n350\n00:16:19.275 --> 00:16:20.580\nSo, things like CPU.\n\n351\n00:16:20.580 --> 00:16:24.900\nIf I go to CPU, here I can pick\nhow many CPUs are attached to it.\n\n352\n00:16:24.900 --> 00:16:28.360\nMy current allocation is two and\nI can change that if I want.\n\n353\n00:16:28.360 --> 00:16:32.800\nI can change the type of CPU\nthat's being reflected to the VM.\n\n354\n00:16:32.800 --> 00:16:37.125\nIf I'm running a really old OS and\nit's about to see the real CPU,\n\n355\n00:16:37.125 --> 00:16:40.363\nit might not be able to\nuse the CPU that I've got.\n\n356\n00:16:40.363 --> 00:16:41.409\nIt might freak out.\n\n357\n00:16:41.409 --> 00:16:44.653\nSo you can actually come in and\nlie to it and say, you know what?\n\n358\n00:16:44.653 --> 00:16:47.046\nShow it the feature set\nof some older CPU and\n\n359\n00:16:47.046 --> 00:16:50.182\nyou can pick from all those\ndifferent cores and do that.\n\n360\n00:16:50.182 --> 00:16:52.480\nIf you're running an older OS for\nsome reason,\n\n361\n00:16:52.480 --> 00:16:54.269\nthen that's a nice feature to have.\n\n362\n00:16:54.269 --> 00:16:57.160\nWe've also got where we can tweak\nthe memory and assign that.\n\n363\n00:16:57.160 --> 00:17:01.221\nNotice how I've got a current allocation\nand max allocation, which are the same.\n\n364\n00:17:01.221 --> 00:17:02.571\nIt's got 4 gigs of memory.\n\n365\n00:17:02.571 --> 00:17:05.344\nIf I take the current\nallocation lower it though,\n\n366\n00:17:05.344 --> 00:17:07.992\nthen it'll use up a variable\namount of memory.\n\n367\n00:17:07.992 --> 00:17:09.972\nIt'll consume memory as it needs it.\n\n368\n00:17:09.972 --> 00:17:13.144\nNow that sounds like a good idea,\ncuz it frees up memory for other VM's.\n\n369\n00:17:13.144 --> 00:17:16.564\nBut it's terrible for performance,\nso we don't normally want that on.\n\n370\n00:17:16.564 --> 00:17:20.401\nSome of these options may sound great,\nbut are really only good in testing and\n\n371\n00:17:20.401 --> 00:17:23.360\ndevelopment not so good in production.\n\n372\n00:17:23.360 --> 00:17:26.976\nThere's other things that you can tweak in\nhere that are gonna go a little bit beyond\n\n373\n00:17:26.976 --> 00:17:29.420\nwhat I want to do in this show,\nbut like display splice.\n\n374\n00:17:29.420 --> 00:17:31.230\nThe graphics server that it uses.\n\n375\n00:17:31.230 --> 00:17:33.340\nIn the past, it used to always use VNC.\n\n376\n00:17:33.340 --> 00:17:35.780\nAnd if you've used VNC,\nyou know that it's slow.\n\n377\n00:17:35.780 --> 00:17:39.727\nWell, if we're spinning up servers that\nare using a CLI, I don't care about that.\n\n378\n00:17:39.727 --> 00:17:41.284\nI'm gonna use the command line interface.\n\n379\n00:17:41.284 --> 00:17:42.400\nIt's not like I'm gonna use VNC.\n\n380\n00:17:42.400 --> 00:17:44.100\nI'll just SSH in and that's it.\n\n381\n00:17:44.100 --> 00:17:46.742\nBut if I'm gonna fire up\ndesktop OSs inside of KVM,\n\n382\n00:17:46.742 --> 00:17:51.289\nif I'm gonna fire up Windows, for example,\nand I want that graphical user interface,\n\n383\n00:17:51.289 --> 00:17:53.980\nwe'll want to use a spice server instead.\n\n384\n00:17:53.980 --> 00:17:57.933\nSpice is a like an enhanced VMC.\n\n385\n00:17:57.933 --> 00:17:59.774\nIt has a much smoother scrolling.\n\n386\n00:17:59.774 --> 00:18:02.526\nIt does faster updates.\n\n387\n00:18:02.526 --> 00:18:03.266\nIt's a sharper image.\n\n388\n00:18:03.266 --> 00:18:07.501\nIt's a really good way to be able to\nsee that console to work with the VM.\n\n389\n00:18:07.501 --> 00:18:11.662\nIf you're just going to be SSHing in\nthough, it's kind of a waste of resources.\n\n390\n00:18:11.662 --> 00:18:14.371\nSo, you could take that type\nof the spice server and\n\n391\n00:18:14.371 --> 00:18:17.977\nyou can switch it back to VNC or\nyou can even turn it off all together.\n\n392\n00:18:17.977 --> 00:18:20.977\nYou don't have to have it to\nhave that machine up and going,\n\n393\n00:18:20.977 --> 00:18:22.725\nthat's something you can tweak.\n\n394\n00:18:22.725 --> 00:18:24.185\nYou can also adjust the console.\n\n395\n00:18:24.185 --> 00:18:28.044\nYou can redirect it to a serial port or a\nPTY, or something like that to be able to\n\n396\n00:18:28.044 --> 00:18:31.682\naccess the console if you need to and\nthen there's other options in here.\n\n397\n00:18:31.682 --> 00:18:36.193\nUsually for me, the main thing that\nI come in here to adjust is CPU and\n\n398\n00:18:36.193 --> 00:18:38.105\nmemory, network and disk.\n\n399\n00:18:38.105 --> 00:18:41.166\nIf you go down here at the bottom,\nyou can hit Add Hardware and\n\n400\n00:18:41.166 --> 00:18:43.088\nyou can add additional components and\n\n401\n00:18:43.088 --> 00:18:46.829\nthere's a lot of times I create VMs\nwhere I need more than one disk on them.\n\n402\n00:18:46.829 --> 00:18:50.685\nIf I'm spinning up a database server,\nI might want one hard drive for\n\n403\n00:18:50.685 --> 00:18:54.289\nthe operating system and\na second hard drive for the databases.\n\n404\n00:18:54.289 --> 00:18:57.425\nCuz I might have them residing\nin different storage pools.\n\n405\n00:18:57.425 --> 00:18:59.651\nSo, here's where I can come in and\nI can choose to do that.\n\n406\n00:18:59.651 --> 00:19:01.223\nI can add more storage.\n\n407\n00:19:01.223 --> 00:19:02.407\nThat's the default.\n\n408\n00:19:02.407 --> 00:19:05.902\nI can add more network interfaces,\nif this VM is a firewall.\n\n409\n00:19:05.902 --> 00:19:08.412\nI need two interfaces, so\nI can add another network interface.\n\n410\n00:19:08.412 --> 00:19:12.425\nI can add other connections like\nparallel ports, USB host devices,\n\n411\n00:19:12.425 --> 00:19:14.096\na trusted platform module.\n\n412\n00:19:14.096 --> 00:19:18.586\nIf I wanna do encryption in the VM, I can\nadd all sorts of things in the VM and\n\n413\n00:19:18.586 --> 00:19:22.787\nreally get this tweaked and configure\nthe way that we want it to run and\n\n414\n00:19:22.787 --> 00:19:24.609\nreally start to adjust that.\n\n415\n00:19:24.609 --> 00:19:26.771\nEntropy is a big problem in VMs.\n\n416\n00:19:26.771 --> 00:19:30.457\nThey have a hard time generating random\nnumbers, so we can override those values\n\n417\n00:19:30.457 --> 00:19:33.181\nin coming and specify some other\nway to generate that data.\n\n418\n00:19:33.181 --> 00:19:35.475\nThere is a lot of hardware\ndevices that really help VMs.\n\n419\n00:19:35.475 --> 00:19:38.724\nThese are all little things\nthat we might wanna go in and\n\n420\n00:19:38.724 --> 00:19:43.399\ntweak on some of these VMs to get them\nfigured exactly the way that we want them.\n\n421\n00:19:43.399 --> 00:19:44.476\n&gt;&gt; I'm excited.\n\n422\n00:19:44.476 --> 00:19:45.212\nI'm ready.\n\n423\n00:19:45.212 --> 00:19:47.537\nIs it time to actually install the guest?\n\n424\n00:19:47.537 --> 00:19:51.249\n&gt;&gt; Yeah, once you get all this stuff\nexactly the way that you want it,\n\n425\n00:19:51.249 --> 00:19:54.982\nyou can hit Finish and then we're\nbasically ready to get it going.\n\n426\n00:19:54.982 --> 00:19:58.611\nSo up here, you'll see that button\nthat says, begin installation and\n\n427\n00:19:58.611 --> 00:20:01.827\nI can hit that and it's gonna\nstart the virtualization for me.\n\n428\n00:20:01.827 --> 00:20:04.430\nNow when it starts,\nit's gonna go through and\n\n429\n00:20:04.430 --> 00:20:06.981\nit's going to take all\nof this information.\n\n430\n00:20:06.981 --> 00:20:09.647\nLet me scale it, so\nwe can actually see what's going on here.\n\n431\n00:20:09.647 --> 00:20:10.437\nThere we go.\n\n432\n00:20:10.437 --> 00:20:12.645\nSo it is starting the seven install.\n\n433\n00:20:12.645 --> 00:20:14.387\nAnd as far as installs go,\n\n434\n00:20:14.387 --> 00:20:18.597\nthis is really no different than\nperforming a normal install.\n\n435\n00:20:18.597 --> 00:20:21.018\nThere's one big difference\nthat we're gonna notice.\n\n436\n00:20:21.018 --> 00:20:22.362\nWatch my mouse.\n\n437\n00:20:22.362 --> 00:20:23.834\nYou see my mouse cursor.\n\n438\n00:20:23.834 --> 00:20:28.445\nIf I try and hit the up and down arrows,\nI might not get a response right away.\n\n439\n00:20:28.445 --> 00:20:29.479\nI am now, cuz I already clicked.\n\n440\n00:20:29.479 --> 00:20:30.900\nBut you might not get a response.\n\n441\n00:20:30.900 --> 00:20:35.960\nAnd so, you need to click in the screen\nbefore you can interact with it.\n\n442\n00:20:35.960 --> 00:20:38.808\nWell, as soon as I do that, do you\nsee how my mouse cursor disappeared?\n\n443\n00:20:38.808 --> 00:20:39.555\n&gt;&gt; Yes.\n\n444\n00:20:39.555 --> 00:20:42.477\n&gt;&gt; My mouse is said to be\ncaptured at this point.\n\n445\n00:20:42.477 --> 00:20:45.923\nIt's captured by this guest OS and\nit's trapped in that window.\n\n446\n00:20:45.923 --> 00:20:49.091\nWell, in that window,\nI'm in a CLI environment.\n\n447\n00:20:49.091 --> 00:20:51.555\nSo there is no mouse cursor,\nso it disappears.\n\n448\n00:20:51.555 --> 00:20:53.443\nBut now, I can't get my mouse back out.\n\n449\n00:20:53.443 --> 00:20:56.930\nWell, up at the very top of my screen,\nas soon as I clicked in there and\n\n450\n00:20:56.930 --> 00:20:59.053\nI\"m gonna have a hard time showing this.\n\n451\n00:20:59.053 --> 00:21:04.607\nLet me see if I can't zoom in and\nit's gonna trap.\n\n452\n00:21:04.607 --> 00:21:08.100\nWell, my zoom isn't gonna work,\ncuz I'm trapped into VM.\n\n453\n00:21:08.100 --> 00:21:10.535\nBut as soon as I click inside of here,\n\n454\n00:21:10.535 --> 00:21:15.329\na little message appears up at the top\nof the screen and it's telling me,\n\n455\n00:21:15.329 --> 00:21:19.195\npress Ctrl+left plus Alt+left\nto release the pointer.\n\n456\n00:21:19.195 --> 00:21:22.219\nWhen your mouse gets trapped\nin a window like this and\n\n457\n00:21:22.219 --> 00:21:26.355\nthe guest VM doesn't know that it's\na guest, it holds on to the mouse.\n\n458\n00:21:26.355 --> 00:21:29.555\nWhen you take your mouse and you move it\nto the edge of your screen, what happens?\n\n459\n00:21:29.555 --> 00:21:30.771\nIt stops.\n\n460\n00:21:30.771 --> 00:21:33.188\nIt doesn't go off the edge of the screen,\nit stops.\n\n461\n00:21:33.188 --> 00:21:36.435\nYou can still see the little edge of\nthe pointer right there on the edge.\n\n462\n00:21:36.435 --> 00:21:40.266\nSo when I get my mouse in the VM and\nthe mouse hits the edge of the VM,\n\n463\n00:21:40.266 --> 00:21:41.042\nit traps it.\n\n464\n00:21:41.042 --> 00:21:43.773\nIt stops it right there and\nyou hit Ctr+Alt.\n\n465\n00:21:43.773 --> 00:21:47.074\nSo on the left side on my keyboard,\nI'm gonna hit Ctrl and Alt and\n\n466\n00:21:47.074 --> 00:21:48.800\nthen my mouse cursor reappears.\n\n467\n00:21:48.800 --> 00:21:50.868\nAnd now I can move it\nabout on my desktop and\n\n468\n00:21:50.868 --> 00:21:54.312\neverything's fine until I click in here,\nand it disappears again.\n\n469\n00:21:54.312 --> 00:21:59.124\nThat mouse disappearing is a great way\nto recognize that the VM you're using\n\n470\n00:21:59.124 --> 00:22:01.692\ndoesn't know it's a virtual machine.\n\n471\n00:22:01.692 --> 00:22:02.684\nIt doesn't know.\n\n472\n00:22:02.684 --> 00:22:05.767\nIf it knew it was a virtual machine,\nit would say, I shouldn't trap this mouse.\n\n473\n00:22:05.767 --> 00:22:08.647\nI should let the mouse escape\nthe edge of my screen.\n\n474\n00:22:08.647 --> 00:22:11.997\nIf it thinks that it's a real machine like\nmy laptop thinks it's a real machine,\n\n475\n00:22:11.997 --> 00:22:12.930\nbecause it is.\n\n476\n00:22:12.930 --> 00:22:17.540\nSo when my mouse goes to the edge,\nI hit that edge and I stop and\n\n477\n00:22:17.540 --> 00:22:19.160\nthat's exactly what the guest is doing.\n\n478\n00:22:19.160 --> 00:22:23.363\nSo, this guest at this point\ndoesn't know that it's virtual.\n\n479\n00:22:23.363 --> 00:22:26.942\nDuring the install,\nit will suddenly learn that it's virtual.\n\n480\n00:22:26.942 --> 00:22:28.483\nAnd it'll say, hey, look at that.\n\n481\n00:22:28.483 --> 00:22:29.016\nI'm virtual.\n\n482\n00:22:29.016 --> 00:22:30.349\nIt will load a service.\n\n483\n00:22:30.349 --> 00:22:33.335\nIt will load a virtual tool service and\nrecognize that and\n\n484\n00:22:33.335 --> 00:22:35.395\nthen it will let my mouse pass outside.\n\n485\n00:22:35.395 --> 00:22:40.931\nWindows, Linux, all the modern distros,\nthey have those tools by default.\n\n486\n00:22:40.931 --> 00:22:43.064\nThey just don't work right\nhere at the very beginning.\n\n487\n00:22:43.064 --> 00:22:45.585\nSo when I start my install,\nI have to click on it and\n\n488\n00:22:45.585 --> 00:22:47.939\nthen I've got to use my\nkeyboard to interact.\n\n489\n00:22:47.939 --> 00:22:50.061\nAnd so,\nI'm gonna choose to install CentOs.\n\n490\n00:22:50.061 --> 00:22:52.984\nAnd when it goes to a GUI, so here it is.\n\n491\n00:22:52.984 --> 00:22:55.683\nGoing to a graphical user interface,\neventually.\n\n492\n00:22:55.683 --> 00:23:00.485\nWhen it goes to a GUI, it will have loaded\nthe virtual tools at that point and\n\n493\n00:23:00.485 --> 00:23:02.710\nmy mouse will suddenly reappear.\n\n494\n00:23:02.710 --> 00:23:04.822\nAnd now, there's my mouse.\n\n495\n00:23:04.822 --> 00:23:10.892\nSo now I\"m inside of the VM and\nsee how I can move my mouse in, and out.\n\n496\n00:23:10.892 --> 00:23:15.232\nAnd if I click on the VM, that little\nmessage doesn't appear up top anymore.\n\n497\n00:23:15.232 --> 00:23:16.053\nIt knows.\n\n498\n00:23:16.053 --> 00:23:18.464\nIt says, hey, look, I'm a virtual machine.\n\n499\n00:23:18.464 --> 00:23:20.188\nSo, let me stop trapping the mouse.\n\n500\n00:23:20.188 --> 00:23:24.208\nLet me do these other activities\ntoo that it does to handle that and\n\n501\n00:23:24.208 --> 00:23:28.740\nthis is one of the few areas where\ncommercial and open source products have\n\n502\n00:23:28.740 --> 00:23:33.347\nreally gotten along and agreed on that\nRed Hat, Canonical, Microsoft and\n\n503\n00:23:33.347 --> 00:23:37.914\nthen all the open source products\nthat are out there, basically agreed.\n\n504\n00:23:37.914 --> 00:23:41.843\nAnd said, let's make a standard way of\nrecognizing that were virtualized and\n\n505\n00:23:41.843 --> 00:23:43.761\ndoing things like not trapping them.\n\n506\n00:23:43.761 --> 00:23:45.098\nSo, making it easier\nto interact with them.\n\n507\n00:23:45.098 --> 00:23:47.322\nSo, that's a good thing.\n\n508\n00:23:47.322 --> 00:23:48.312\nAfter that,\n\n509\n00:23:48.312 --> 00:23:53.622\nas soon as that driver is loaded\nThe rest of this install is a cake walk.\n\n510\n00:23:53.622 --> 00:23:54.433\nIt's the standard install.\n\n511\n00:23:54.433 --> 00:23:59.340\nSo as I move forward, everything is\ngonna run like normal, like expected.\n\n512\n00:23:59.340 --> 00:24:02.030\nI can tell it what I want to install,\npick the date and time.\n\n513\n00:24:02.030 --> 00:24:07.056\nOn the installation destination, I'm just\ngonna see the 64 gig virtual hard drive.\n\n514\n00:24:07.056 --> 00:24:08.984\nThere it is.\nAnd if I zoom in on that,\n\n515\n00:24:08.984 --> 00:24:13.490\nyou'll see where it's showing\nas a virtio block device, right?\n\n516\n00:24:13.490 --> 00:24:15.960\nIt's a virtual input-output block device.\n\n517\n00:24:15.960 --> 00:24:18.210\nSo the machine knows that it's virtual.\n\n518\n00:24:18.210 --> 00:24:21.328\nBut hey, this is my 64 gig disk,\nthis is what I wanna use.\n\n519\n00:24:21.328 --> 00:24:26.000\nAnd as we continue the install,\nI'll just do automatic partitioning.\n\n520\n00:24:26.000 --> 00:24:28.416\nI don't need anything too fancy.\n\n521\n00:24:28.416 --> 00:24:30.590\nAnd I can then fire up that install.\n\n522\n00:24:30.590 --> 00:24:32.707\nNormally, I'd go through and\nI'd tweak a lot of this stuff.\n\n523\n00:24:32.707 --> 00:24:34.395\nBut just to get this machine up and going,\n\n524\n00:24:34.395 --> 00:24:36.478\nI actually probably should\nadd a network adapter.\n\n525\n00:24:36.478 --> 00:24:37.473\nWe'll do that.\n\n526\n00:24:37.473 --> 00:24:38.440\nThere we go.\n\n527\n00:24:38.440 --> 00:24:40.212\nAnd I'll go ahead and\nbegin the installation.\n\n528\n00:24:40.212 --> 00:24:41.910\nI'll set a root password.\n\n529\n00:24:41.910 --> 00:24:44.186\nAgain, acting just like normal.\n\n530\n00:24:44.186 --> 00:24:47.920\nAnd this install is really not gonna be\nany different than anything else, okay?\n\n531\n00:24:47.920 --> 00:24:52.900\nWhat becomes different is\nafter the install, okay?\n\n532\n00:24:52.900 --> 00:24:55.000\nIf this is gonna be a true server,\n\n533\n00:24:55.000 --> 00:24:56.940\nI wouldn't be installing\na graphical user interface.\n\n534\n00:24:56.940 --> 00:24:58.343\nI would just install the CLI.\n\n535\n00:24:58.343 --> 00:25:00.580\nAnd so after the install,\nI'm gonna start it up.\n\n536\n00:25:00.580 --> 00:25:02.100\nAnd I'll just SSH into it, right?\n\n537\n00:25:02.100 --> 00:25:03.980\nThat's how I'll connect to manage it.\n\n538\n00:25:03.980 --> 00:25:08.790\nIf it's a GUI based though,\nI'll use virt-manager.\n\n539\n00:25:08.790 --> 00:25:13.510\nI can fire up virt-manager\non any client that I want.\n\n540\n00:25:13.510 --> 00:25:16.550\nConnect to the KVM instance.\n\n541\n00:25:16.550 --> 00:25:17.420\nAnd then from there,\n\n542\n00:25:17.420 --> 00:25:21.580\nI'll be able to launch the console of\nthis machine, if I wanna see the console.\n\n543\n00:25:21.580 --> 00:25:27.650\nI could, inside of the VM,\ninstall something like NX or VNC, or some\n\n544\n00:25:27.650 --> 00:25:31.180\nother screen sharing product to be able\nto see that screen if I really wanted to.\n\n545\n00:25:31.180 --> 00:25:33.430\nBut typically,\nwe're doing servers like this.\n\n546\n00:25:33.430 --> 00:25:35.240\nAnd on servers, it's CLI based.\n\n547\n00:25:35.240 --> 00:25:38.590\nSo as soon as I get an IP address,\nI could see the IP in the console.\n\n548\n00:25:38.590 --> 00:25:41.350\nAs soon as I see that IP address,\nI close this window,\n\n549\n00:25:41.350 --> 00:25:42.940\nand I never use this console again.\n\n550\n00:25:42.940 --> 00:25:45.870\nFrom here on out, I just SSH in, and\n\n551\n00:25:45.870 --> 00:25:49.020\nI work with it like I\nwould any other server.\n\n552\n00:25:49.020 --> 00:25:51.780\nNow, while it's doing that install,\n\n553\n00:25:51.780 --> 00:25:54.790\nI wanna show you guys what's\ngoing on on the disk, okay?\n\n554\n00:25:54.790 --> 00:25:55.932\nSo here's the terminal.\n\n555\n00:25:55.932 --> 00:25:57.157\nLet me minimize this, so\nit doesn't get too confusing.\n\n556\n00:25:57.157 --> 00:25:58.942\nAll right, so I'm on my laptop.\n\n557\n00:25:58.942 --> 00:26:03.272\nAnd I'm looking at\n/var/lib/libvirt/images.\n\n558\n00:26:03.272 --> 00:26:04.344\nAnd if I take a look in here.\n\n559\n00:26:04.344 --> 00:26:06.533\nActually let me do a sudo -s.\n\n560\n00:26:06.533 --> 00:26:08.396\nAnd I take a look in here, it's empty.\n\n561\n00:26:08.396 --> 00:26:10.553\nBecause I chose not to put my disk there,\nright?\n\n562\n00:26:10.553 --> 00:26:11.833\nI chose to put the disk somewhere else.\n\n563\n00:26:11.833 --> 00:26:18.948\nAnd so if I go into /mnt/storage,\nI made a folder in here called QEMUKVM.\n\n564\n00:26:18.948 --> 00:26:23.432\nAnd if I look in here,\nthere's that Centos 7.0.qcount.\n\n565\n00:26:23.432 --> 00:26:28.480\nNow I said that I wanted that\nto be a 64 gig disk, all right?\n\n566\n00:26:28.480 --> 00:26:32.486\nAnd if I take a look at it,\nif I do an ls-lh.\n\n567\n00:26:32.486 --> 00:26:37.561\nI can see that it is 65 gigs in size.\n\n568\n00:26:37.561 --> 00:26:38.259\n&gt;&gt; Hm.\n\n569\n00:26:38.259 --> 00:26:41.361\n&gt;&gt; Now I told you guys that\nit was gonna be small.\n\n570\n00:26:41.361 --> 00:26:43.851\n&gt;&gt; [LAUGH]\n&gt;&gt; And as we put data in it,\n\n571\n00:26:43.851 --> 00:26:45.609\nit would grow to fill that size.\n\n572\n00:26:45.609 --> 00:26:46.143\n&gt;&gt; Yes, you did.\n\n573\n00:26:46.143 --> 00:26:47.130\n&gt;&gt; But here it is, 65 gigs.\n\n574\n00:26:47.130 --> 00:26:48.251\nWell, I didn't lie to you.\n\n575\n00:26:48.251 --> 00:26:49.744\nAt least not on purpose.\n\n576\n00:26:49.744 --> 00:26:51.601\n&gt;&gt; Obfuscate.\n\n577\n00:26:51.601 --> 00:26:53.620\n[LAUGH]\n&gt;&gt; What's going on here is there's\n\n578\n00:26:53.620 --> 00:26:56.030\nactually two different sizes of this file,\nokay?\n\n579\n00:26:56.030 --> 00:27:00.970\nThere's the size of the file, and\nthen there's the size on disk.\n\n580\n00:27:00.970 --> 00:27:01.470\n&gt;&gt; Right.\n&gt;&gt; Okay?\n\n581\n00:27:01.470 --> 00:27:03.234\nThe size of the file is 64 gigs.\n\n582\n00:27:03.234 --> 00:27:05.499\nIt could potentially grow to 64 gigs.\n\n583\n00:27:05.499 --> 00:27:06.643\nRight here, it's saying 65 cuz it's\n\n584\n00:27:06.643 --> 00:27:08.308\nrounding.\nBut if I got rid of that h,\n\n585\n00:27:08.308 --> 00:27:13.098\nwe'd see the actual.\nWell, the actual number is 6-8, 68 gigs.\n\n586\n00:27:13.098 --> 00:27:15.642\nBut it's saying that that's the potential\n\n587\n00:27:15.642 --> 00:27:19.885\nsize of this file, right?\nBut if you wanna see the actual size of\n\n588\n00:27:19.885 --> 00:27:23.676\nit, use the du command.\nIf I do du-h, and\n\n589\n00:27:23.676 --> 00:27:29.243\nI point at that file,\nwhich it's not letting me.\n\n590\n00:27:30.650 --> 00:27:33.084\nThere we go.\nAnd I point at that file,\n\n591\n00:27:33.084 --> 00:27:35.680\nit sees only 1.3 gigs in size.\n\n592\n00:27:35.680 --> 00:27:37.533\nThat's all it is, right?\n\n593\n00:27:37.533 --> 00:27:39.330\nAnd I'm installing that OS.\n\n594\n00:27:39.330 --> 00:27:41.239\nAnd so it's gonna continue to grow.\n\n595\n00:27:41.239 --> 00:27:44.820\nIf I get rid of that h, we'll actually\nsee the growth a little better.\n\n596\n00:27:44.820 --> 00:27:45.907\nIt's gonna grow.\n\n597\n00:27:45.907 --> 00:27:46.772\nIs the install already done?\n\n598\n00:27:46.772 --> 00:27:49.186\nAll right, might have been,\nI might have taken too long.\n\n599\n00:27:49.186 --> 00:27:50.564\nShoot, it's already done.\n\n600\n00:27:50.564 --> 00:27:51.348\nAll right, well.\n\n601\n00:27:51.348 --> 00:27:54.324\n[LAUGH] As it was copying files, we could\nhave seen it grow and get bigger and\n\n602\n00:27:54.324 --> 00:27:56.302\nbigger and bigger, but\nI jabber jawed too long.\n\n603\n00:27:56.302 --> 00:27:57.541\nSo it's already done with the install.\n\n604\n00:27:57.541 --> 00:27:58.691\nI can let that reboot.\n\n605\n00:27:58.691 --> 00:28:01.324\nNow, actually on the reboot,\nit'll grow some more too,\n\n606\n00:28:01.324 --> 00:28:03.169\nbecause it's gonna create swap space.\n\n607\n00:28:03.169 --> 00:28:05.150\n&gt;&gt; Right.\n&gt;&gt; And initialize the swap space, and\n\n608\n00:28:05.150 --> 00:28:06.174\nstart to use that.\n\n609\n00:28:06.174 --> 00:28:10.598\nSo we're gonna start to see a lot\nof that going on as it boots up.\n\n610\n00:28:10.598 --> 00:28:13.295\nBut if I sit here and watch that file,\n\n611\n00:28:13.295 --> 00:28:16.604\nit's going to grow as I put data in it,\nokay?\n\n612\n00:28:16.604 --> 00:28:18.098\nSo don't be misled by that.\n\n613\n00:28:18.098 --> 00:28:22.307\nWhen you first look at that disk,\nit's easy to look at it and say, no,\n\n614\n00:28:22.307 --> 00:28:24.247\nit created the full-size file.\n\n615\n00:28:24.247 --> 00:28:26.182\nBut it is a sparse file,\nit's a dynamic file.\n\n616\n00:28:26.182 --> 00:28:29.329\nIt's actually not consuming\nthat amount of space on disk.\n\n617\n00:28:29.329 --> 00:28:33.204\nIf I pull it up with the du command,\nthat's where we'll see the reality of it.\n\n618\n00:28:33.204 --> 00:28:36.045\nAnd that it is actually a much,\nmuch smaller file.\n\n619\n00:28:36.045 --> 00:28:37.220\nBut that's its disc.\n\n620\n00:28:37.220 --> 00:28:40.355\nAnd in the background,\nthat OS is gonna fire up.\n\n621\n00:28:40.355 --> 00:28:42.478\nAnd let me get logged into it.\n\n622\n00:28:42.478 --> 00:28:46.180\nApparently, I didn't install the GUI.\n\n623\n00:28:46.180 --> 00:28:48.870\nSo it's a pretty slim install on this one.\n\n624\n00:28:48.870 --> 00:28:51.300\nSo [LAUGH] it finished its installation.\n\n625\n00:28:51.300 --> 00:28:53.531\nI can come in and set an IP address.\n\n626\n00:28:53.531 --> 00:28:55.740\nAnd SSH in and start to work with it.\n\n627\n00:28:55.740 --> 00:28:57.770\nIf I wanted the graphical user interface,\n\n628\n00:28:57.770 --> 00:29:00.310\nI guess I should have picked that\nduring the install and I didn't.\n\n629\n00:29:00.310 --> 00:29:02.540\nSo I could always come in here and\ninstall it afterwards.\n\n630\n00:29:02.540 --> 00:29:04.320\nGet all that setup and\nstart to configure it.\n\n631\n00:29:04.320 --> 00:29:10.100\nBut now, the KVM guest is up and\nrunning, and it's operational.\n\n632\n00:29:10.100 --> 00:29:13.102\nThe only problem I have right\nnow is how tiny the font is.\n\n633\n00:29:13.102 --> 00:29:16.858\nBut even that's a short term problem,\ncuz I can look at it and\n\n634\n00:29:16.858 --> 00:29:20.334\nsee its IP address, 192.168.122.40.\n\n635\n00:29:20.334 --> 00:29:22.860\nAnd I can go back to my terminal.\n\n636\n00:29:24.820 --> 00:29:30.043\nAnd I can SSH into that with\nthe account that I created,\n\n637\n00:29:30.043 --> 00:29:33.461\n192.168.122.40.\n\n638\n00:29:33.461 --> 00:29:35.850\nAnd I can punch in my password.\n\n639\n00:29:35.850 --> 00:29:39.800\nAnd now I'm in that system, and I can\nwork with it here from the command line.\n\n640\n00:29:39.800 --> 00:29:46.563\nSo I could say something like,\nsudo yum install, we'll do group install.\n\n641\n00:29:48.620 --> 00:29:51.900\nAnd then, what is it, graphical desktop?\n\n642\n00:29:53.710 --> 00:29:54.736\nI forget the group name.\n\n643\n00:29:54.736 --> 00:29:56.640\nI might need to do a group\nlist to find out the name.\n\n644\n00:29:56.640 --> 00:29:59.132\nBut I can install the GUI on it if\nthat's what I actually wanted and\n\n645\n00:29:59.132 --> 00:30:00.322\nstart to get that put in place.\n\n646\n00:30:00.322 --> 00:30:02.660\nNow I don't have to worry about\nusing that console anymore.\n\n647\n00:30:02.660 --> 00:30:06.822\nThe console, it is a little bit hard to\nread, cuz of that small font sometimes.\n\n648\n00:30:06.822 --> 00:30:08.683\nBut now I'm in the machine,\nI can work with it.\n\n649\n00:30:08.683 --> 00:30:11.410\nI treat it like any other\nmachine on the network.\n\n650\n00:30:11.410 --> 00:30:13.773\nBut it's just running inside of KVM.\n\n651\n00:30:13.773 --> 00:30:15.868\n&gt;&gt; Fantastic as usual, Don.\n\n652\n00:30:15.868 --> 00:30:18.411\nI think, I'm so glad that our\nVM doesn't think it's Skynet.\n\n653\n00:30:18.411 --> 00:30:20.336\n[LAUGH].\nThat wouldn't be bad.\n\n654\n00:30:20.336 --> 00:30:23.010\nSo Linux as a KVM guest.\n\n655\n00:30:23.010 --> 00:30:24.464\nDon, any last words?\n\n656\n00:30:24.464 --> 00:30:27.345\n&gt;&gt; The only other thing I didn't mention\nis that I was using virt-manager to\n\n657\n00:30:27.345 --> 00:30:28.395\nconnect with this.\n\n658\n00:30:28.395 --> 00:30:30.605\nBut as soon as I pulled up the console,\ntechnically,\n\n659\n00:30:30.605 --> 00:30:32.745\nthat's a separate program\nthat's called virt-viewer.\n\n660\n00:30:32.745 --> 00:30:35.295\nSo in the installation\nin the last episode,\n\n661\n00:30:35.295 --> 00:30:38.865\nI had us install virt-manager and\nvirt-viewer, those two work together.\n\n662\n00:30:38.865 --> 00:30:42.957\nIf I hadn't Installed virt-viewer, I\nwouldn't be able to see the console here.\n\n663\n00:30:42.957 --> 00:30:44.592\nI'd have to find some\nother way to view it.\n\n664\n00:30:44.592 --> 00:30:45.661\nSo that's a second piece.\n\n665\n00:30:45.661 --> 00:30:48.247\nThose two work together,\nvirt-manager and virt-viewer.\n\n666\n00:30:48.247 --> 00:30:52.325\n&gt;&gt; Fantastic, and you're gonna wanna watch\nevery single Linux in the Cloud episode,\n\n667\n00:30:52.325 --> 00:30:53.946\nbecause you'll be glad you did.\n\n668\n00:30:53.946 --> 00:30:55.787\nDon, awesome stuff.\n\n669\n00:30:55.787 --> 00:30:57.587\nAnd thank you for watching ITProTV.\n\n670\n00:30:57.587 --> 00:31:00.252\nRemember, a good IT pro\nis always learning.\n\n671\n00:31:00.252 --> 00:31:01.457\nI'm Zach Memos.\n\n672\n00:31:01.457 --> 00:31:02.157\n&gt;&gt; And I'm Don Pezet.\n\n673\n00:31:02.157 --> 00:31:03.169\n&gt;&gt; And we'll see you very soon.\n\n674\n00:31:05.380 --> 00:31:10.888\n[MUSIC]\n\n675\n00:31:10.888 --> 00:31:13.406\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "231080043"
        }
      ],
      "title": "KVM Virtual Machines"
    },
    {
      "episodes": [
        {
          "description": "Don and Zach cover what EC2, what we need to know before we spin up our first instance, where we get the operating system for the instance, Amazon Machine Images (AMI), and how we launch the instance.",
          "length": "2105",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-2-1-1-creating_an_ec2_instance-082417-PGM.00_34_48_12.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-2-1-1-creating_an_ec2_instance-082417-PGM.00_34_48_12.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-2-1-1-creating_an_ec2_instance-082417-PGM.00_34_48_12.Still001-sm.jpg",
          "title": "Creating an EC2 Instance",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:01.974\nWelcome to ITPro.TV,\nI'm your host Don Pizet.\n\n2\n00:00:01.974 --> 00:00:04.391\n[CROSSTALK]\n&gt;&gt; Coming at you live from San Fransisco.\n\n3\n00:00:04.391 --> 00:00:06.097\n[CROSSTALK]\n\n4\n00:00:06.097 --> 00:00:08.271\n[MUSIC]\n\n5\n00:00:08.271 --> 00:00:10.023\n&gt;&gt; You're watching ITPro.TV.\n\n6\n00:00:10.023 --> 00:00:13.295\n&gt;&gt; Hello and thank you for\nchoosing ITPro.TV,\n\n7\n00:00:13.295 --> 00:00:15.885\nhelping you learn wherever you go.\n\n8\n00:00:15.885 --> 00:00:19.385\nI'm your host Zach Memos,\nas we continue on with Linux in the Cloud.\n\n9\n00:00:19.385 --> 00:00:22.115\nAnd we're gonna be\ncreating an EC2 instance.\n\n10\n00:00:22.115 --> 00:00:23.015\nWhat does that mean?\n\n11\n00:00:23.015 --> 00:00:24.995\nWell, our IT Pro Don Pezet is here and\n\n12\n00:00:24.995 --> 00:00:26.555\nhe's gonna show us\nbecause he's a great guy!\n\n13\n00:00:26.555 --> 00:00:27.868\n&gt;&gt; [LAUGH]\n&gt;&gt; Hey Don, good to see you!\n\n14\n00:00:27.868 --> 00:00:30.929\n&gt;&gt; Hey, good to see you Zach, and I'm\nactually really excited about this episode\n\n15\n00:00:30.929 --> 00:00:32.436\nbecause we've got this whole series.\n\n16\n00:00:32.436 --> 00:00:33.165\nLinux in the Cloud.\n\n17\n00:00:33.165 --> 00:00:36.930\nSo we're talking about using Linux as\na operating system in a Cloud solution.\n\n18\n00:00:36.930 --> 00:00:39.922\nAnd, well we're going to talk about\nseveral solutions, but I'm not going\n\n19\n00:00:39.922 --> 00:00:42.700\nto lie to you, I do play favorites,\nand this is one of my favorites.\n\n20\n00:00:42.700 --> 00:00:48.910\nWhen I deploy Linux in the Cloud, nines\ntimes out of ten I'm using Amazon EC2.\n\n21\n00:00:48.910 --> 00:00:52.699\nAnd so, right here in this episode we're\ngoing to be taking a look at EC2 which is\n\n22\n00:00:52.699 --> 00:00:55.200\nthe Amazon elastic compute cloud or EC2.\n\n23\n00:00:55.200 --> 00:00:58.980\nWe'll take a look at what it takes\nto bring up a Linux instance up and\n\n24\n00:00:58.980 --> 00:01:01.490\nrunning inside an EC2, and\nsome of the ways that we manage and\n\n25\n00:01:01.490 --> 00:01:03.750\ncontrol that to be able\ninteract with the system.\n\n26\n00:01:03.750 --> 00:01:08.400\nYou'll find that it is so\nstinking easy and so\n\n27\n00:01:08.400 --> 00:01:12.080\ninexpensive that it is just a great\nsolution for organizations, and\n\n28\n00:01:12.080 --> 00:01:14.010\nwe're going to see why\nright here in this episode.\n\n29\n00:01:14.010 --> 00:01:16.140\n&gt;&gt; So\nnow that you've sparked our interest,\n\n30\n00:01:16.140 --> 00:01:17.830\ntell us a bit more about EC2, sir.\n\n31\n00:01:17.830 --> 00:01:19.160\n&gt;&gt; I know.\nI've sparked your interest, and\n\n32\n00:01:19.160 --> 00:01:21.318\nI'm waiting for\nmy Amazon commission check.\n\n33\n00:01:21.318 --> 00:01:24.960\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] I am not compensated by Amazon.\n\n34\n00:01:24.960 --> 00:01:26.996\nBut let's get started on this one.\n\n35\n00:01:26.996 --> 00:01:31.060\nSo, when we deploy Linux\non a local machine, right?\n\n36\n00:01:31.060 --> 00:01:35.160\nOr in a VM, really it's not that much\ndifferent than when we deploy it\n\n37\n00:01:35.160 --> 00:01:37.740\nup inside of a large\ninfrastructure like Amazon EC2.\n\n38\n00:01:37.740 --> 00:01:43.970\nThe big difference is that Amazon\nhas an amazing infrastructure and\n\n39\n00:01:43.970 --> 00:01:46.860\nthey've invested an amazing\namount of money into it.\n\n40\n00:01:46.860 --> 00:01:51.620\nSo much so that we can take advantage\nof a lot of the work they've done\n\n41\n00:01:51.620 --> 00:01:53.872\nto make our life so much easier.\n\n42\n00:01:53.872 --> 00:01:58.520\nAnd it's just simple things, like when I\ndeploy a server normally, I have to worry\n\n43\n00:01:58.520 --> 00:02:01.700\nabout coming up with a RAID array,\nhow I want those hard drives arranged.\n\n44\n00:02:01.700 --> 00:02:04.510\nAnd I've gotta worry about my UPSes, and\n\n45\n00:02:04.510 --> 00:02:08.260\ndo they have enough battery power in them\nto keep those new servers up and going?\n\n46\n00:02:08.260 --> 00:02:11.360\nIf I order a server I've got to\nwait weeks for them to come in.\n\n47\n00:02:11.360 --> 00:02:17.255\nMeanwhile, Amazon has data centers all\nover the world that have massive UPSes and\n\n48\n00:02:17.255 --> 00:02:19.040\ndiesel generators.\n\n49\n00:02:19.040 --> 00:02:22.580\nThey've got tons of servers\ncoming in every single day,\n\n50\n00:02:22.580 --> 00:02:24.680\nregardless of whether I need them or not.\n\n51\n00:02:24.680 --> 00:02:26.390\nAnd so all these problems that I have,\n\n52\n00:02:26.390 --> 00:02:28.920\nthe things that I'm used to\nhaving to deal with, Amazon,\n\n53\n00:02:28.920 --> 00:02:32.940\nbecause of their scale, because of their\nvolume, they already deal with it.\n\n54\n00:02:32.940 --> 00:02:34.730\nThey've already taken care of that.\n\n55\n00:02:34.730 --> 00:02:36.370\nSo I'm ready to go out there and deploy.\n\n56\n00:02:36.370 --> 00:02:39.990\nI can just go to them and\npiggy-back off of their network.\n\n57\n00:02:39.990 --> 00:02:41.840\nAnd that's exactly what EC2 is.\n\n58\n00:02:41.840 --> 00:02:45.120\nAnd I've got the AWS web\npage pulled up here.\n\n59\n00:02:45.120 --> 00:02:47.710\nWith Amazon Web Services they\noffer way more than just EC2.\n\n60\n00:02:47.710 --> 00:02:50.050\nI'm gonna focus on EC2 in this show.\n\n61\n00:02:50.050 --> 00:02:55.870\nBut they do databases and websites,\ncontainers, virtual machines,\n\n62\n00:02:55.870 --> 00:03:01.220\nauthentication, directories, file storage,\ntons and tons and tons of features.\n\n63\n00:03:01.220 --> 00:03:04.660\nSo much so that it gets a little\nbit intimidating sometimes.\n\n64\n00:03:04.660 --> 00:03:07.670\nLike when you log into the AWS\nmanagement screen, this is what you see.\n\n65\n00:03:07.670 --> 00:03:09.817\nIt's a list of all their services.\n\n66\n00:03:09.817 --> 00:03:11.445\nWhich service do you\nwanna work with today?\n\n67\n00:03:11.445 --> 00:03:15.239\nOkay, there's what, 60 to pick from?\n\n68\n00:03:15.239 --> 00:03:16.040\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n69\n00:03:16.040 --> 00:03:17.460\n&gt;&gt; So it's intimidating.\n\n70\n00:03:17.460 --> 00:03:21.390\nBut what's really cool is we get\nto piggyback off of their world\n\n71\n00:03:21.390 --> 00:03:23.290\nwide infrastructure, this right here.\n\n72\n00:03:23.290 --> 00:03:26.970\nThis picture is really where\nthe value of AWS comes in.\n\n73\n00:03:26.970 --> 00:03:33.162\nIf I wanna spin up a Linux server, I can\nput it as close to my customer as I need.\n\n74\n00:03:33.162 --> 00:03:35.980\nSo if I have a lot of customers in Japan.\n\n75\n00:03:35.980 --> 00:03:37.590\nWell, here I am in Florida.\n\n76\n00:03:37.590 --> 00:03:40.000\nI'm right here, okay?\n\n77\n00:03:40.000 --> 00:03:41.980\nBut my customers are all\nthe way over here in Japan.\n\n78\n00:03:41.980 --> 00:03:44.990\nWell, Amazon has a data\ncenter right there in Japan.\n\n79\n00:03:44.990 --> 00:03:46.880\nI can spin up my servers there.\n\n80\n00:03:46.880 --> 00:03:49.830\nAnd now, my Japanese customers\nare going right to Japan.\n\n81\n00:03:49.830 --> 00:03:52.770\nif we have a worldwide network,\ncustomers all over the world,\n\n82\n00:03:52.770 --> 00:03:56.150\nI can spin up servers and\nspread them all across the world.\n\n83\n00:03:56.150 --> 00:03:57.250\nMaybe I don't care about that.\n\n84\n00:03:57.250 --> 00:04:01.670\nMaybe I just say, look, I'm here in\nFlorida and I need to have servers, and\n\n85\n00:04:01.670 --> 00:04:04.290\nI need them in two places,\nI need a headquarters and\n\n86\n00:04:04.290 --> 00:04:07.170\nI need a disaster recovery center, right?\n\n87\n00:04:07.170 --> 00:04:10.200\nBut I don't wanna pay for all this, it's\nbad enough to pay for one data center,\n\n88\n00:04:10.200 --> 00:04:11.190\nbetter yet two.\n\n89\n00:04:11.190 --> 00:04:16.410\nSo instead, I'll put some of my servers\nover here in Amazon's U.S. East region.\n\n90\n00:04:16.410 --> 00:04:19.690\nAnd I'll put my other servers over\nhere in Amazon's U.S. West region.\n\n91\n00:04:19.690 --> 00:04:22.730\nAnd now I've got them on two\ndifferent tectonic plates,\n\n92\n00:04:22.730 --> 00:04:24.630\non two different sides of the continent.\n\n93\n00:04:24.630 --> 00:04:26.110\nIf there's a power outage or\n\n94\n00:04:26.110 --> 00:04:29.670\nsome kinda outage on one side,\nit doesn't affect the other side.\n\n95\n00:04:29.670 --> 00:04:32.510\nAnd my network stays up, and\neverything stays happy and\n\n96\n00:04:32.510 --> 00:04:34.690\nI get the best of all of that.\n\n97\n00:04:34.690 --> 00:04:38.770\nSo when it comes to bring\nsome kind of server up and\n\n98\n00:04:38.770 --> 00:04:42.850\nmaking it publicly available, you'd be\nhard pressed to find a better place to\n\n99\n00:04:42.850 --> 00:04:45.730\nput it than inside of\nAmazon's EC2 infrastructure.\n\n100\n00:04:45.730 --> 00:04:48.260\n&gt;&gt; Can I just ask you something\njust off the cuff here?\n\n101\n00:04:48.260 --> 00:04:50.370\nCost, was there cost involved here?\n\n102\n00:04:50.370 --> 00:04:51.260\nI'm sure there's gotta be, right?\n\n103\n00:04:51.260 --> 00:04:54.150\n&gt;&gt; Yeah, there is, right, but it's\ndifferent than what our cost would be.\n\n104\n00:04:54.150 --> 00:04:55.725\nSo let's say I wanted to\nbring up a web server.\n\n105\n00:04:55.725 --> 00:04:57.270\n&gt;&gt; Mm-hm.\n&gt;&gt; Right, I might go to HP or\n\n106\n00:04:57.270 --> 00:05:00.050\nDell or whoever it is that\nI'm buying a server from, and\n\n107\n00:05:00.050 --> 00:05:02.689\nI spec it out, and\nthat server might be say $6000.\n\n108\n00:05:02.689 --> 00:05:03.230\n&gt;&gt; Mm-hm.\n\n109\n00:05:03.230 --> 00:05:04.615\n&gt;&gt; So there's your first cost.\n\n110\n00:05:04.615 --> 00:05:05.180\n&gt;&gt; Mm-hm.\n\n111\n00:05:05.180 --> 00:05:07.150\n&gt;&gt; And then if you do\na three year warranty on it,\n\n112\n00:05:07.150 --> 00:05:11.060\nthen you're paying warranty fees every\nyear, or however that gets dispersed.\n\n113\n00:05:11.060 --> 00:05:13.660\nThen you've got the energy\ncost of running it, right?\n\n114\n00:05:13.660 --> 00:05:15.065\nIt takes electricity.\n\n115\n00:05:15.065 --> 00:05:17.640\n&gt;&gt; Yeah.\n&gt;&gt; If I've got UPSes and\n\n116\n00:05:17.640 --> 00:05:18.770\ndiesel engines, I've got that.\n\n117\n00:05:18.770 --> 00:05:20.560\nI've got the physical security costs.\n\n118\n00:05:20.560 --> 00:05:21.950\nI've got the building costs.\n\n119\n00:05:21.950 --> 00:05:23.620\nJust having that server in the rack.\n\n120\n00:05:23.620 --> 00:05:25.985\nAll of that stuff is a cost\nrelated to that server.\n\n121\n00:05:25.985 --> 00:05:26.520\n&gt;&gt; Mm-hm.\n\n122\n00:05:26.520 --> 00:05:29.290\n&gt;&gt; Well Amazon's basically\npicking up all that.\n\n123\n00:05:29.290 --> 00:05:30.890\nSo you've got to pay for it, but\n\n124\n00:05:30.890 --> 00:05:35.830\nthe difference is you're going into a data\ncenter with thousands of other customers,\n\n125\n00:05:35.830 --> 00:05:38.500\nand so\nthat cost is spread across all of us.\n\n126\n00:05:38.500 --> 00:05:40.390\nInstead of one of us footing the bill for\n\n127\n00:05:40.390 --> 00:05:43.820\nit, we all do and\nthat brings the cost down.\n\n128\n00:05:43.820 --> 00:05:45.910\nSo when you spin up these machines,\nright, so\n\n129\n00:05:45.910 --> 00:05:50.190\nif I go in here and\nlet's pull up the Compute,\n\n130\n00:05:50.190 --> 00:05:54.330\nwe'll go into EC2, and when we pull up\nthe EC2 page, we can go in here and\n\n131\n00:05:54.330 --> 00:05:57.790\ntake a look at their pricing, and they'll\nshow how that pricing works out, right?\n\n132\n00:05:57.790 --> 00:06:00.490\nNow, this is important for us,\nbecause you might be thinking,\n\n133\n00:06:00.490 --> 00:06:03.760\nhey I want to run Linux,\nand Linux is free, right?\n\n134\n00:06:03.760 --> 00:06:05.420\nIf I want to throw in Ubuntu Linux,\n\n135\n00:06:05.420 --> 00:06:08.240\nit doesn't cost me a dime,\nI can bring up the server and there we go.\n\n136\n00:06:08.240 --> 00:06:10.130\n&gt;&gt; Well,\nthere is the underlying hardware, and\n\n137\n00:06:10.130 --> 00:06:13.130\nwith EC2 that's what you're really\npaying for is that underlying hardware.\n\n138\n00:06:13.130 --> 00:06:16.340\nSo when we go in here,\nI'll just pull up their on-demand pricing,\n\n139\n00:06:16.340 --> 00:06:18.730\nthis is what I'm gonna be paying for\nthis episode.\n\n140\n00:06:18.730 --> 00:06:22.760\nSo when you spin up a server\nthey bill it per hour, okay?\n\n141\n00:06:22.760 --> 00:06:25.930\nSo for every hour you run that\nserver you're paying money.\n\n142\n00:06:25.930 --> 00:06:30.240\nNow at first that might not sound\nlike a good thing but it really is.\n\n143\n00:06:30.240 --> 00:06:33.310\nLet's say I have a project where\nI need a bunch of servers, but\n\n144\n00:06:33.310 --> 00:06:35.200\nI really only need them for one month.\n\n145\n00:06:35.200 --> 00:06:37.570\nWell, if I buy them myself,\nwhat do I do at the end of that month?\n\n146\n00:06:37.570 --> 00:06:41.980\nI have to turn around and sell them on\neBay and take a huge loss on that, right?\n\n147\n00:06:41.980 --> 00:06:43.910\nHere, I'm really just renting the server.\n\n148\n00:06:43.910 --> 00:06:46.680\nLet me rent all these servers for\none month, right?\n\n149\n00:06:46.680 --> 00:06:49.860\nAnd maybe it's a heavy computational\nthing, I need a lot of CPU power.\n\n150\n00:06:49.860 --> 00:06:52.330\nWell, I don't necessarily need it for\na whole month.\n\n151\n00:06:52.330 --> 00:06:54.840\nIf I can twice as many servers,\nI might only need it for two weeks.\n\n152\n00:06:54.840 --> 00:06:57.510\nIf I can get four times as many servers\nI might only need it for one week.\n\n153\n00:06:57.510 --> 00:06:58.340\nRight?\n\n154\n00:06:58.340 --> 00:07:01.080\nI just can't get that many servers,\nAmazon can.\n\n155\n00:07:01.080 --> 00:07:02.130\nAnd so I can get as many as I want.\n\n156\n00:07:02.130 --> 00:07:03.980\nBut I am gonna pay an hourly rate on that.\n\n157\n00:07:03.980 --> 00:07:06.990\nBut if you look at these hourly rates,\nright?\n\n158\n00:07:06.990 --> 00:07:08.840\nYou pick how much memory you need.\n\n159\n00:07:08.840 --> 00:07:14.020\nLike if I need four gigs of memory and two\nCPUs, that would be a t2.medium server.\n\n160\n00:07:14.020 --> 00:07:16.470\nThat it is 0.047 cents per hour.\n\n161\n00:07:16.470 --> 00:07:17.720\nSo basically five cents an hour.\n\n162\n00:07:17.720 --> 00:07:19.080\nSo basically five cents for that.\n\n163\n00:07:19.080 --> 00:07:20.682\n&gt;&gt; That'd break me [LAUGH].\n\n164\n00:07:20.682 --> 00:07:22.910\n&gt;&gt; Yeah.\nWell, if you run it for\n\n165\n00:07:22.910 --> 00:07:25.780\nmonth after month or\nwhatever it adds up eventually.\n\n166\n00:07:25.780 --> 00:07:27.310\nBut even then it's not that much.\n\n167\n00:07:27.310 --> 00:07:28.301\n&gt;&gt; No,\nit's not that's not that much at all.\n\n168\n00:07:28.301 --> 00:07:30.432\n&gt;&gt; Let's just round that up to five cents,\nright?\n\n169\n00:07:30.432 --> 00:07:35.032\nSo if we If we say it takes\nfive cents an hour, and\n\n170\n00:07:35.032 --> 00:07:41.012\nthere is 24 hours in a day and\nthere's 365 days in a year,\n\n171\n00:07:41.012 --> 00:07:46.778\nthen that one server would\ncost you $438 a year, okay?\n\n172\n00:07:46.778 --> 00:07:48.362\n&gt;&gt; Not bad.\n&gt;&gt; And well, $438 a year, and\n\n173\n00:07:48.362 --> 00:07:52.083\nI could look at Dell and say, well,\nI could buy that same server for $4000.\n\n174\n00:07:52.083 --> 00:07:53.512\nWell that's a cost savings.\n\n175\n00:07:53.512 --> 00:07:58.457\nBut this is also including the power,\nthe maintenance, the diesel generators,\n\n176\n00:07:58.457 --> 00:08:01.334\nall that other stuff that,\nbehind the scenes.\n\n177\n00:08:01.334 --> 00:08:02.199\n&gt;&gt; All the overhead.\n\n178\n00:08:02.199 --> 00:08:02.991\n&gt;&gt; Pretty good value.\n\n179\n00:08:02.991 --> 00:08:07.600\nAnd the other thing is, what if I wanna\nupgrade, upgrading a server is a pain.\n\n180\n00:08:07.600 --> 00:08:10.730\nIt's hard to get the right hardware\nto find the memory that matches,\n\n181\n00:08:10.730 --> 00:08:12.890\nor upgrading the CPU is near impossible.\n\n182\n00:08:12.890 --> 00:08:15.276\nHere, I could just ditch that server and\nmove up to the next tier.\n\n183\n00:08:15.276 --> 00:08:17.480\nIt's super easy, a couple clicks,\nand you're done.\n\n184\n00:08:17.480 --> 00:08:20.880\nSo those are all advantages\nof deploying into EC2.\n\n185\n00:08:20.880 --> 00:08:21.450\n&gt;&gt; Okay.\n&gt;&gt; But\n\n186\n00:08:21.450 --> 00:08:23.870\nthe other thing to keep in\nmind is the operating system.\n\n187\n00:08:23.870 --> 00:08:25.900\nWhat I'm looking at\nhere is the pricing for\n\n188\n00:08:25.900 --> 00:08:30.050\na free operating system,\nbut many OSs aren't free.\n\n189\n00:08:30.050 --> 00:08:33.930\nIn most of the shows, I've been using\nRed Hat Enterprise Linux, I like Red Hat,\n\n190\n00:08:33.930 --> 00:08:37.480\nit's kinda my preferred one,\nbut it's not a free OS.\n\n191\n00:08:37.480 --> 00:08:42.960\nIf you do Ubuntu, if you do SenTAS,\nif you do Debian, those are all free.\n\n192\n00:08:42.960 --> 00:08:45.950\nUbuntu you can pay for service for\n\n193\n00:08:45.950 --> 00:08:49.010\nmaintenance, but\njust the actual platform is free.\n\n194\n00:08:49.010 --> 00:08:52.948\nRed Hat is not like that, so you'll notice\nthere's a extra tab up here for RHEL.\n\n195\n00:08:52.948 --> 00:08:56.450\nAnd if I choose Red Hat,\nthe pricing changes, okay.\n\n196\n00:08:56.450 --> 00:09:00.464\nThat t2 medium server we were\nlooking at just a moment ago,\n\n197\n00:09:00.464 --> 00:09:04.200\nthat was only $0.05 an hour or\nit was 0.047.\n\n198\n00:09:04.200 --> 00:09:10.482\nIf I pull that up here with Red Hat on it,\nit's now $0.107, all right?\n\n199\n00:09:10.482 --> 00:09:14.178\nIt's twice the cost,\nstill ten cents an hour, right?\n\n200\n00:09:14.178 --> 00:09:19.699\nSo that $438 a year server\njust became $860 a year.\n\n201\n00:09:19.699 --> 00:09:21.067\nIt became more expensive, and\n\n202\n00:09:21.067 --> 00:09:23.940\nthat's because they had to roll\nthe software license into it.\n\n203\n00:09:23.940 --> 00:09:25.890\nThey take care of the software license.\n\n204\n00:09:25.890 --> 00:09:26.932\nI don't have to go to Red Hat and\n\n205\n00:09:26.932 --> 00:09:28.970\nset up a subscription account and\ndo all that stuff.\n\n206\n00:09:28.970 --> 00:09:30.240\nThey take care of the license for me.\n\n207\n00:09:30.240 --> 00:09:30.920\n&gt;&gt; It's pretty cool.\n\n208\n00:09:30.920 --> 00:09:33.000\n&gt;&gt; And I'm paying per hour,\nso when I'm done with it,\n\n209\n00:09:33.000 --> 00:09:36.380\nI give up the machine, and\nI'm not holding onto that license.\n\n210\n00:09:36.380 --> 00:09:41.556\nIf I go and buy the cheapest Red Hat\nEnterprise Linux Server license right now,\n\n211\n00:09:41.556 --> 00:09:44.079\nI think the cheapest one is $350.\n\n212\n00:09:44.079 --> 00:09:48.908\nWell, if I'm only paying 10 cents an hour,\nand I use it for 350 hours,\n\n213\n00:09:48.908 --> 00:09:50.950\nthen that would be the license.\n\n214\n00:09:50.950 --> 00:09:54.737\nBut if I only need it for\na couple of days, I could spin that up.\n\n215\n00:09:54.737 --> 00:09:58.400\nAnd I'm saving, I'm not paying for\na full license while I've got that system.\n\n216\n00:09:58.400 --> 00:09:59.690\nSo you can actually save money there too.\n\n217\n00:09:59.690 --> 00:10:02.730\nSo just be aware, though,\ndepending on the machine you pick,\n\n218\n00:10:02.730 --> 00:10:06.000\nthere may be additional costs\nit can occur based on the OS.\n\n219\n00:10:06.000 --> 00:10:08.740\nAnd this is where things like\nSenTAS come in really handy.\n\n220\n00:10:08.740 --> 00:10:11.780\nI can get a Red Hat environment without\nhaving to tack a license on it,\n\n221\n00:10:11.780 --> 00:10:13.198\nI just lose support, right?\n\n222\n00:10:13.198 --> 00:10:17.120\nThere'll be bobody there to support\nme if I have any kind of issues.\n\n223\n00:10:17.120 --> 00:10:19.270\nBut I can pay a little more for\nthat license and\n\n224\n00:10:19.270 --> 00:10:20.846\nnow I've got somebody who will support me.\n\n225\n00:10:20.846 --> 00:10:25.750\nRed Hat is fully supportive of Amazon,\nthey work together with Amazon.\n\n226\n00:10:25.750 --> 00:10:28.814\nSo when you call up Red Hat and\nyou tell them you're running on AWS,\n\n227\n00:10:28.814 --> 00:10:29.922\nthey'll help you out.\n\n228\n00:10:29.922 --> 00:10:32.540\nAnd it's all covered,\njust like a normal license would be.\n\n229\n00:10:32.540 --> 00:10:34.636\n&gt;&gt; I'm definitely sold,\nI mean, that sounds fantastic.\n\n230\n00:10:34.636 --> 00:10:35.450\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n231\n00:10:35.450 --> 00:10:38.000\nwhat else do we need to know before\nwe spin up our first instance?\n\n232\n00:10:38.000 --> 00:10:39.770\n&gt;&gt; Okay, so\nif we're ready to spin up an instance,\n\n233\n00:10:39.770 --> 00:10:42.260\nwe need to think about the hardware\nresources we need, right?\n\n234\n00:10:42.260 --> 00:10:43.700\nAnd this is all gonna be virtualized, but\n\n235\n00:10:43.700 --> 00:10:47.710\nwe need to know how much memory we need,\nhow much CPU power, how much disk space.\n\n236\n00:10:47.710 --> 00:10:52.640\nWhen we look this pricing that I brought\nup, okay, it's showing memory and CPUs,\n\n237\n00:10:52.640 --> 00:10:54.640\nso that's my first decision.\n\n238\n00:10:54.640 --> 00:10:58.160\nEach of these virtual machines has\na nickname on the left side, okay.\n\n239\n00:10:58.160 --> 00:11:00.530\nAnd the left little nickname there,\nlet me zoom in a bit.\n\n240\n00:11:00.530 --> 00:11:04.660\nOr maybe just make my font\nbigger that would be kinda nice.\n\n241\n00:11:04.660 --> 00:11:08.750\nThere we go, super big, so\nwhen we look at these names.\n\n242\n00:11:08.750 --> 00:11:13.470\nt2, t3 or m4 whatever you've got\nmicro small medium large, well.\n\n243\n00:11:13.470 --> 00:11:15.110\nThe micro small medium large,\n\n244\n00:11:15.110 --> 00:11:19.460\nthat's just the to give you an idea of\nwhat Amazon considers this machine to be.\n\n245\n00:11:19.460 --> 00:11:22.260\nSo a large machine might be\none with 8 gigs of RAM, or\n\n246\n00:11:22.260 --> 00:11:27.440\nan extra large for 16 gigs of RAM or\n2XL is 32 gigs of RAM, right.\n\n247\n00:11:27.440 --> 00:11:32.210\nThese are ones that are larger in the\nresource department than other machines.\n\n248\n00:11:32.210 --> 00:11:36.072\nIf I'm just experimenting, I might spin\nup a t2 micro, I do this all the time.\n\n249\n00:11:36.072 --> 00:11:39.587\nAny time I'm experimenting with\nclustering or auto scaling or whatever.\n\n250\n00:11:39.587 --> 00:11:43.910\nAnd I might be spinning up 100 VMs, but\nit's just for testing, I use t2 micros.\n\n251\n00:11:43.910 --> 00:11:47.548\nBecause they cost nothing, well I've got\nthe Red Hat licensing pulled up here.\n\n252\n00:11:47.548 --> 00:11:51.836\nBut when we switch back to Linux,\na t2 micro is half, or\n\n253\n00:11:51.836 --> 00:11:55.321\nSTG nano, but\nt2 micro is one cent per hour.\n\n254\n00:11:55.321 --> 00:11:56.234\n&gt;&gt; [LAUGH] Wow.\n\n255\n00:11:56.234 --> 00:11:59.050\n&gt;&gt; So if you're learning,\nthey are great for that.\n\n256\n00:11:59.050 --> 00:12:02.920\nNot so great for production, cuz they only\nhave one processor and 1 GB of memory,\n\n257\n00:12:02.920 --> 00:12:03.680\nthat's not gonna help you.\n\n258\n00:12:03.680 --> 00:12:05.085\nBut if you're experimenting\nwith clustering,\n\n259\n00:12:05.085 --> 00:12:06.326\nboy it's really nice\nto be able to do this.\n\n260\n00:12:06.326 --> 00:12:09.720\nAt one penny an hour,\nyou can really do a lot.\n\n261\n00:12:09.720 --> 00:12:10.540\n&gt;&gt; Pretty cool.\n\n262\n00:12:10.540 --> 00:12:15.170\n&gt;&gt; But the t2 side, this t is letting\nme know the family that it's in.\n\n263\n00:12:15.170 --> 00:12:17.430\nAnd t is really t for testing, right?\n\n264\n00:12:17.430 --> 00:12:21.150\nWe're not supposed be\nusing these in production.\n\n265\n00:12:21.150 --> 00:12:24.380\nAfter that, we'll start to see\nthe real production ones, okay?\n\n266\n00:12:24.380 --> 00:12:26.270\nAnd m is what we're normally gonna use.\n\n267\n00:12:26.270 --> 00:12:29.240\nm is what Amazon calls a balanced machine,\nright?\n\n268\n00:12:29.240 --> 00:12:33.630\nA balance machine means that its\ngot a good CPU to memory balance.\n\n269\n00:12:33.630 --> 00:12:39.310\nSo for example, an m4.large has two CPUs,\nand 6.5 GB of memory.\n\n270\n00:12:39.310 --> 00:12:42.730\nIf I look at at a t2.large,\nit's got 2 CPUs and\n\n271\n00:12:42.730 --> 00:12:46.810\n8 GB of memory just like the other one,\n\n272\n00:12:46.810 --> 00:12:50.880\nbut the big difference, actually I\njumped columns here, was there's 6.5.\n\n273\n00:12:50.880 --> 00:12:53.780\nSee how this column right here\nsays Variable, and it's under ECU,\n\n274\n00:12:53.780 --> 00:12:55.530\nthat's elastic compute units.\n\n275\n00:12:55.530 --> 00:13:00.832\nThat means dedicated CPU access, these t\nmachines don't have dedicated CPU access.\n\n276\n00:13:00.832 --> 00:13:03.878\nThey may have full access to CPUs,\nthey may not, it's shared.\n\n277\n00:13:03.878 --> 00:13:07.044\nBut when we start getting into the m4s,\nyou get reservations on those CPUs,\n\n278\n00:13:07.044 --> 00:13:08.270\nyou get better performance.\n\n279\n00:13:08.270 --> 00:13:10.014\nAnd so\nwe start to see these numbers go up.\n\n280\n00:13:10.014 --> 00:13:12.405\nBut these are the balanced machines and\n\n281\n00:13:12.405 --> 00:13:15.895\nthey're helping me to recognize\nwhich one I need to get.\n\n282\n00:13:15.895 --> 00:13:18.783\nAnd it's not that much more expensive\nto go with these balanced ones, but\n\n283\n00:13:18.783 --> 00:13:20.240\nm is what we're normally gonna use.\n\n284\n00:13:20.240 --> 00:13:22.670\nAnd m4 just means the fourth generation.\n\n285\n00:13:22.670 --> 00:13:25.470\nBack in the beginning, there were\nthe m1's, which were just called m's.\n\n286\n00:13:25.470 --> 00:13:28.610\nAnd then there were the m2,\nm3, and now we're up to m4.\n\n287\n00:13:28.610 --> 00:13:31.591\nNext year, we'll probably have m5's,\nit's just the next generation.\n\n288\n00:13:31.591 --> 00:13:35.831\nBut extra large, large, xxl,\nthat's pertaining to real size.\n\n289\n00:13:35.831 --> 00:13:36.401\n&gt;&gt; [LAUGH]\n&gt;&gt; And\n\n290\n00:13:36.401 --> 00:13:38.001\nthere's other specialized ones you'll see.\n\n291\n00:13:38.001 --> 00:13:42.850\nIf you keep kinda scrolling down,\nlike c, the c ones are CPU optimized.\n\n292\n00:13:42.850 --> 00:13:47.550\nThey'll have more CPU in them and\nmore reserved CPU available.\n\n293\n00:13:47.550 --> 00:13:50.072\nYou'll find r,\nr will be tucked away here somewhere.\n\n294\n00:13:50.072 --> 00:13:53.036\nSome of these are RAM optimized,\nthey'll have more RAM attached to them.\n\n295\n00:13:53.036 --> 00:13:56.716\nLook at an r3.xlarge, 30 GB of RAM,\n\n296\n00:13:56.716 --> 00:14:01.713\nversus an m4.xlarge only had 16 GB of RAM,\nright?\n\n297\n00:14:01.713 --> 00:14:05.000\nThis is more RAM, and\nyou can go all the way up.\n\n298\n00:14:05.000 --> 00:14:08.532\nYou've got 244 GB of RAM in an r38.xl.\n\n299\n00:14:08.532 --> 00:14:12.080\nRight, so you can get as much memory\nas you need in that particular VM.\n\n300\n00:14:12.080 --> 00:14:14.256\nSo, we need to know our hardware,\n\n301\n00:14:14.256 --> 00:14:17.873\nso that we can pick which type\nof machine we wanna launch.\n\n302\n00:14:17.873 --> 00:14:21.751\nAnd you can always change later,\nthat's the most awesome part about this,\n\n303\n00:14:21.751 --> 00:14:24.070\nyou can take any instance, right?\n\n304\n00:14:24.070 --> 00:14:26.760\nEC2 refers to a VM as an instance, right?\n\n305\n00:14:26.760 --> 00:14:28.630\nSo instead of calling it a virtual\nmachine, it's just an instance,\n\n306\n00:14:28.630 --> 00:14:30.920\nbecause they expect you to\ncreate more than one of them.\n\n307\n00:14:30.920 --> 00:14:33.810\nSo you may have more than one\ninstance of the same VM, so\n\n308\n00:14:33.810 --> 00:14:35.300\nthat's why they use that terminology.\n\n309\n00:14:35.300 --> 00:14:40.572\nBut I can take any instance, shut it down,\nchange it's type, and power it back on.\n\n310\n00:14:40.572 --> 00:14:42.660\nSo, while I'm building the infrastructure,\n\n311\n00:14:42.660 --> 00:14:47.830\nI might be using all t's, I might be\nusing t1 micros to build everything.\n\n312\n00:14:47.830 --> 00:14:50.730\nAnd once it's all built and\ntested and working together,\n\n313\n00:14:50.730 --> 00:14:55.350\nI shut them all down And I bump them up to\nM4 extra larges and I power it back up.\n\n314\n00:14:55.350 --> 00:14:58.700\nSo I'm not paying for all that hardware\nuntil I'm actually ready to use it,\n\n315\n00:14:58.700 --> 00:14:59.610\nthat's the other thing.\n\n316\n00:14:59.610 --> 00:15:02.416\nSo we need to know all\nof that information.\n\n317\n00:15:02.416 --> 00:15:06.161\nAnd once we got that figured out,\nonce we know where we wanna start,\n\n318\n00:15:06.161 --> 00:15:10.120\nthen we're ready to jump right in and\nget things configured.\n\n319\n00:15:10.120 --> 00:15:12.790\n&gt;&gt; So where do we get the operating\nsystem for the instance?\n\n320\n00:15:12.790 --> 00:15:14.620\n&gt;&gt; All right, so\non the operating system side.\n\n321\n00:15:14.620 --> 00:15:15.940\nWhen I go to launch an instance, right?\n\n322\n00:15:15.940 --> 00:15:18.110\nSo I'm gonna go over to the console.\n\n323\n00:15:18.110 --> 00:15:23.040\nSo this is the AWS console, and\nI'm gonna choose EC2, right?\n\n324\n00:15:23.040 --> 00:15:26.040\nThat's where we go to\ncreate our EC2 instances.\n\n325\n00:15:26.040 --> 00:15:29.410\nAnd if you don't have any instances,\nor if you've never created any,\n\n326\n00:15:29.410 --> 00:15:32.990\nyou might see a little wizard pop up\nto help you install your first one.\n\n327\n00:15:32.990 --> 00:15:36.290\nI've created countless instances on\nthis though, so I see this screen.\n\n328\n00:15:36.290 --> 00:15:39.410\nIt's giving me a summary, I see I\nhave no running instances right now.\n\n329\n00:15:39.410 --> 00:15:41.792\nAnd I get a nice big\nLaunch Instance button.\n\n330\n00:15:41.792 --> 00:15:44.933\nI'm gonna launch a new VM inside of EC2.\n\n331\n00:15:44.933 --> 00:15:49.422\nAnd so when I launch that, it's kind of\nlike any other virtualization platform\n\n332\n00:15:49.422 --> 00:15:53.150\nwhere you gotta provide it\nan ISO image to do the install.\n\n333\n00:15:53.150 --> 00:15:55.886\nThe difference here is Amazon\ndoesn't use ISO images.\n\n334\n00:15:55.886 --> 00:16:01.684\nInstead, they use what are called AMIs,\nAMIs are Amazon machine images And\n\n335\n00:16:01.684 --> 00:16:07.150\nthey basically build a pre-installed\nvirtual machine for you.\n\n336\n00:16:07.150 --> 00:16:09.600\n&gt;&gt; Wow!\n&gt;&gt; Now we could do that ourselves, right?\n\n337\n00:16:09.600 --> 00:16:14.410\nIf I was gonna deploy 100 web servers,\nI could create one, take an image of it.\n\n338\n00:16:14.410 --> 00:16:15.970\nGet it set up exactly\nthe way that I want it.\n\n339\n00:16:15.970 --> 00:16:20.110\nAnd then just clone that image out\nto the other 99, and I'm done.\n\n340\n00:16:20.110 --> 00:16:21.658\nBut it takes a lot of work, right?\n\n341\n00:16:21.658 --> 00:16:24.240\nLike Zach said, wow,\nit takes a lot of work to do that, right?\n\n342\n00:16:24.240 --> 00:16:24.930\n&gt;&gt; Yeah, wow.\n[LAUGH]\n\n343\n00:16:24.930 --> 00:16:26.130\n&gt;&gt; Well, Amazon,\n\n344\n00:16:26.130 --> 00:16:28.950\nremember, they're not\nspinning up 100 instances.\n\n345\n00:16:28.950 --> 00:16:32.440\nThey're spinning up 100,000\ninstances every single day.\n\n346\n00:16:32.440 --> 00:16:33.169\nThey do it a lot.\n\n347\n00:16:33.169 --> 00:16:33.820\nMind boggling.\n\n348\n00:16:33.820 --> 00:16:35.440\nThey spin up tons and tons.\n\n349\n00:16:35.440 --> 00:16:40.440\nYeah, it is hard to kinda wrap our\nminds around their infrastructure.\n\n350\n00:16:40.440 --> 00:16:44.800\nBut as a result,\nthey build these images for us.\n\n351\n00:16:44.800 --> 00:16:46.210\nAnd then we can use them.\n\n352\n00:16:46.210 --> 00:16:47.590\nAnd they do some crazy things.\n\n353\n00:16:47.590 --> 00:16:49.730\nLike, they really do\nsome impressive stuff.\n\n354\n00:16:49.730 --> 00:16:53.290\nWhen I build an image like that My\nbiggest challenge is keeping it updated.\n\n355\n00:16:53.290 --> 00:16:54.590\nThey do that for us.\n\n356\n00:16:54.590 --> 00:16:57.420\nSo when I look at these images, over time,\n\n357\n00:16:57.420 --> 00:17:00.380\nthey'll phase them out and replace them\nwith a new version that's been updated.\n\n358\n00:17:00.380 --> 00:17:03.780\nSo for example,\nRed Hat Enterprise Linux 7.4,\n\n359\n00:17:03.780 --> 00:17:06.495\nthat just came out like two weeks ago.\n\n360\n00:17:06.495 --> 00:17:08.435\nMm-hm.\nWhen this episode was filmed,\n\n361\n00:17:08.435 --> 00:17:09.798\n7.4 came out maybe two weeks ago.\n\n362\n00:17:09.798 --> 00:17:10.829\nMm-hm.\n\n363\n00:17:10.829 --> 00:17:14.760\nSo, somebody at Amazon, or\nlikely somebody at Red Hat,\n\n364\n00:17:14.760 --> 00:17:19.390\nwent and built that AMI,\nbuilt that Amazon machine image.\n\n365\n00:17:19.390 --> 00:17:23.490\nAnd had it uploaded to their\nsystem that very day, that fast.\n\n366\n00:17:23.490 --> 00:17:25.120\n&gt;&gt; Goodness gracious.\n\n367\n00:17:25.120 --> 00:17:28.570\n&gt;&gt; So now, when I start rolling out new\nRed Hat machines, I just pick this one and\n\n368\n00:17:28.570 --> 00:17:29.550\nit's already 7.4.\n\n369\n00:17:29.550 --> 00:17:34.050\nIf I was still rolling out 7.3 images,\nI would need to deploy the image,\n\n370\n00:17:34.050 --> 00:17:36.850\nbring the server up, and\nthen immediately do updates.\n\n371\n00:17:36.850 --> 00:17:40.230\nAnd I would have to upgrade it to 7.4,\nand that's a lot of work.\n\n372\n00:17:40.230 --> 00:17:41.800\nBut now this image is already updated.\n\n373\n00:17:41.800 --> 00:17:42.820\nSo when I roll it out,\n\n374\n00:17:42.820 --> 00:17:44.700\nthat doesn't mean there aren't\nother updates that have come out.\n\n375\n00:17:44.700 --> 00:17:48.090\nBut it's already got\nthe latest major version.\n\n376\n00:17:48.090 --> 00:17:50.410\nAnd you'll see that with\neach operating system.\n\n377\n00:17:50.410 --> 00:17:53.160\nSo when I went to launch it,\nhere's the quick start.\n\n378\n00:17:53.160 --> 00:17:56.230\nAnd I can pick, if I want SUSE Linux,\nit's right there.\n\n379\n00:17:56.230 --> 00:17:57.470\nRed Hat Enterprise Linux?\n\n380\n00:17:57.470 --> 00:17:57.990\nGot it.\n\n381\n00:17:57.990 --> 00:18:01.095\nUbuntu, Microsoft Windows,\nGod forbid, it's got it here.\n\n382\n00:18:01.095 --> 00:18:03.850\n&gt;&gt; [LAUGH]\n&gt;&gt; Each of the different ones\n\n383\n00:18:03.850 --> 00:18:06.700\nwe could pick from are all right here.\n\n384\n00:18:06.700 --> 00:18:08.860\nAnd the ones at the very top,\nthose are the most common.\n\n385\n00:18:08.860 --> 00:18:11.349\nThese are just straight up,\nhere's the OS, get to work, right?\n\n386\n00:18:11.349 --> 00:18:12.870\nMm-hm.\nBut, as you scroll down,\n\n387\n00:18:12.870 --> 00:18:16.660\nyou'll start to find some interesting\nones that are combinations.\n\n388\n00:18:16.660 --> 00:18:21.860\nIt'll be like Windows Server with\nMicrosoft SQL Server already installed.\n\n389\n00:18:21.860 --> 00:18:27.090\nOr you'll find some of them, like\nSUSE Linux with Oracle already installed.\n\n390\n00:18:27.090 --> 00:18:28.100\nThat kind of thing.\n\n391\n00:18:28.100 --> 00:18:30.310\nOther ones are just different versions.\n\n392\n00:18:30.310 --> 00:18:35.930\nLike Ubuntu 16.04 is the latest\nlong-term support release that's out.\n\n393\n00:18:35.930 --> 00:18:41.848\nSo up here at the top,\nI see Ubuntu 16.04 LTS, right?\n\n394\n00:18:41.848 --> 00:18:45.500\nBut Ubuntu 14.04 LTS is still supported.\n\n395\n00:18:45.500 --> 00:18:46.860\nIt's still on its support window.\n\n396\n00:18:46.860 --> 00:18:49.410\nSo if I scroll down here\ntowards the bottom,\n\n397\n00:18:49.410 --> 00:18:51.226\nI'll find Ubuntu 14.04 right there.\n\n398\n00:18:51.226 --> 00:18:55.500\nStill supported by Ubuntu, so\nit's still supported by Amazon, right?\n\n399\n00:18:55.500 --> 00:18:57.510\nI can spin that up and get that access.\n\n400\n00:18:57.510 --> 00:18:59.290\nSo they're really good\nabout maintaining this.\n\n401\n00:18:59.290 --> 00:19:04.000\nAnd as a individual inside of\na tech company, it's hard for\n\n402\n00:19:04.000 --> 00:19:05.210\nus to maintain this.\n\n403\n00:19:05.210 --> 00:19:10.130\nBut Amazon literally has thousands of\nemployees that are working on this stuff\n\n404\n00:19:10.130 --> 00:19:12.680\non a regular basis,\nkeeping these images updated.\n\n405\n00:19:12.680 --> 00:19:16.560\nYour company might not have those\nresources, but Amazon does.\n\n406\n00:19:16.560 --> 00:19:19.750\nSo as far as where I get the OS,\nI'm going to get it right from here.\n\n407\n00:19:19.750 --> 00:19:20.760\nThis is the easiest way.\n\n408\n00:19:20.760 --> 00:19:21.670\nI've picked the OS that I want.\n\n409\n00:19:21.670 --> 00:19:22.880\nAnd I'm going to deploy it.\n\n410\n00:19:22.880 --> 00:19:24.980\nSo I've said before, I like Red Hat.\n\n411\n00:19:24.980 --> 00:19:25.930\nRight?\nSo if I want Red Hat,\n\n412\n00:19:25.930 --> 00:19:27.280\nI can pick it right here.\n\n413\n00:19:27.280 --> 00:19:28.600\nAnd I can deploy it.\n\n414\n00:19:28.600 --> 00:19:30.968\nAnd It's gonna give me\nthat particular machine.\n\n415\n00:19:30.968 --> 00:19:34.737\nSo I'm gonna go ahead and select that one,\ncuz that's what I wanna deploy.\n\n416\n00:19:34.737 --> 00:19:38.900\nNow, if you wanted, you actually could\ncreate your own custom AMIs, right?\n\n417\n00:19:38.900 --> 00:19:42.030\nOn the left side here,\nsee how it shows quick start.\n\n418\n00:19:42.030 --> 00:19:43.420\nThat's what I'm on, right?\n\n419\n00:19:43.420 --> 00:19:47.410\nBut right after that, there's my AMIs,\nthe AWS Marketplace, and\n\n420\n00:19:47.410 --> 00:19:48.440\nCommunity AMIs, right?\n\n421\n00:19:48.440 --> 00:19:53.070\nThe Quick Start, these are the AMIs\nthat Amazon builds themselves.\n\n422\n00:19:53.070 --> 00:19:55.650\nThey build these, they maintain them.\n\n423\n00:19:55.650 --> 00:20:00.950\nThey guarantee that they will work\nwith the AWS infrastructure, right?\n\n424\n00:20:00.950 --> 00:20:03.150\nAfter that, I've got My AMIs though.\n\n425\n00:20:03.150 --> 00:20:04.920\nI could build my own.\n\n426\n00:20:04.920 --> 00:20:06.350\nMaybe I wanna run open BSD.\n\n427\n00:20:06.350 --> 00:20:07.810\nThat wasn't an option here.\n\n428\n00:20:07.810 --> 00:20:09.930\nSo I can build my own AMI and\nI can upload it.\n\n429\n00:20:09.930 --> 00:20:12.370\nNow, whenever I deploy a VM,\nI can pick that.\n\n430\n00:20:12.370 --> 00:20:14.230\nSo you can certainly do that.\n\n431\n00:20:14.230 --> 00:20:16.520\nAnd you might want to,\nand often times, you will.\n\n432\n00:20:16.520 --> 00:20:21.260\nI'll usually take one of Amazon's AMIs,\nmodify it to meet my needs.\n\n433\n00:20:21.260 --> 00:20:23.280\nAnd then turn that into my own AMI.\n\n434\n00:20:23.280 --> 00:20:26.120\nSo now I can deploy out machines that\nare already configured the way that\n\n435\n00:20:26.120 --> 00:20:27.030\nI want them to be.\n\n436\n00:20:27.030 --> 00:20:28.670\nSo you can do that.\n\n437\n00:20:28.670 --> 00:20:34.080\nThe AWS Marketplace, this is where a lot\nof third parties are selling AMIs, right?\n\n438\n00:20:34.080 --> 00:20:37.480\nCisco, Juniper, Trend,\nyou'll see a lot of security companies.\n\n439\n00:20:37.480 --> 00:20:42.090\nWhere, hey, maybe you need a firewall\nthat's up there in that environment.\n\n440\n00:20:43.120 --> 00:20:46.290\nAnd it's a commercial product that you\nhave to buy, right, or antivirus, right?\n\n441\n00:20:46.290 --> 00:20:47.860\nTrend Micro's Deep Security.\n\n442\n00:20:47.860 --> 00:20:48.820\nYou have to buy that.\n\n443\n00:20:48.820 --> 00:20:51.590\nWell here, I can pick their AMI and\nI can just deploy it.\n\n444\n00:20:51.590 --> 00:20:54.720\nAnd even better,\nI don't have to buy their software.\n\n445\n00:20:54.720 --> 00:20:57.040\nThe billing is done through Amazon.\n\n446\n00:20:57.040 --> 00:20:59.580\nSo if you look,\nit says right here under Trend.\n\n447\n00:20:59.580 --> 00:21:03.500\nIf I want Trend Micro Deep Security,\ninstead of calling their salespeople and\n\n448\n00:21:03.500 --> 00:21:04.961\ngoing through a huge negotiation.\n\n449\n00:21:04.961 --> 00:21:08.405\nAnd signing up for some crazy contract,\nand doing all that.\n\n450\n00:21:08.405 --> 00:21:11.902\nI just pay one cent, per host,\nper hour, for software usage.\n\n451\n00:21:11.902 --> 00:21:12.790\n&gt;&gt; [LAUGH].\n\n452\n00:21:12.790 --> 00:21:14.670\nAnd that’s it, I click the button,\nand it’s doing it.\n\n453\n00:21:14.670 --> 00:21:17.600\nAnd then if I don’t want it anymore,\nI just click cancel, and it’s over,\n\n454\n00:21:17.600 --> 00:21:18.130\nand that’s it.\n\n455\n00:21:18.130 --> 00:21:20.275\nThat’s what the AWS Marketplace\nis all about.\n\n456\n00:21:20.275 --> 00:21:22.320\nYou'll see Barracuda, Juniper.\n\n457\n00:21:22.320 --> 00:21:25.630\nAnd not everything in here is pay.\n\n458\n00:21:25.630 --> 00:21:30.030\nFor example, when I was on that\nQuick Launch, CentOS was not an option.\n\n459\n00:21:30.030 --> 00:21:33.320\nWell, the CentOS team\nactually builds a distro.\n\n460\n00:21:33.320 --> 00:21:35.970\nIt's in the Amazon Marketplace,\nbut it's free.\n\n461\n00:21:35.970 --> 00:21:36.950\nDoesn't have a cost.\n\n462\n00:21:36.950 --> 00:21:39.660\nSo if I love CentOs or if I love Red Hat.\n\n463\n00:21:39.660 --> 00:21:42.470\nAnd I wanna deploy Red Hat, but\nI don't wanna pay that extra premium.\n\n464\n00:21:42.470 --> 00:21:45.920\nI could pick CentOS right here,\ndeploy those machines, and get it going.\n\n465\n00:21:45.920 --> 00:21:49.500\nSo that's another spot where we\ncan go in and we can find those.\n\n466\n00:21:49.500 --> 00:21:51.986\nAnd there's a number of categories,\nyou can search through and\n\n467\n00:21:51.986 --> 00:21:53.220\nfind all sorts of stuff.\n\n468\n00:21:53.220 --> 00:21:56.380\nFor example,\nmaybe I wanna deploy WordPress.\n\n469\n00:21:56.380 --> 00:21:59.580\nWell, WordPress takes a lot of\nconfiguration, you got the underlying OS.\n\n470\n00:21:59.580 --> 00:22:01.530\nYou've got the database and so on.\n\n471\n00:22:01.530 --> 00:22:06.640\nI could probably look through here, and\nsomebody probably has a commercial build.\n\n472\n00:22:06.640 --> 00:22:08.160\nAnd sure enough, right here, Bitnami.\n\n473\n00:22:08.160 --> 00:22:12.150\nThe team at Bitnami, they build a ton of\nVMs with different configurations in them.\n\n474\n00:22:12.150 --> 00:22:14.150\nBut here's WordPress, powered by Bitnami.\n\n475\n00:22:14.150 --> 00:22:15.070\nI can deploy that machine.\n\n476\n00:22:15.070 --> 00:22:19.200\nAnd it's already got WordPress on it,\nalready configured, and ready to go.\n\n477\n00:22:19.200 --> 00:22:23.724\nOr if I wanted Drupal, Joomla, whatever\nsoftware it was I wanted to deploy,\n\n478\n00:22:23.724 --> 00:22:25.100\nyou can find it.\n\n479\n00:22:25.100 --> 00:22:27.910\nAnd Bitnami is not the only one,\nthey're just the most popular.\n\n480\n00:22:27.910 --> 00:22:30.330\nSo you'll see other people\nthat show up underneath it.\n\n481\n00:22:31.550 --> 00:22:33.784\nLet's see, how do you spell Joomla?\n\n482\n00:22:33.784 --> 00:22:34.918\nI'm spelling it wrong.\n\n483\n00:22:34.918 --> 00:22:37.910\nBut if you can spell the product,\nyou can find it.\n\n484\n00:22:37.910 --> 00:22:39.600\n&gt;&gt; Sounds like there's a J in there.\n\n485\n00:22:39.600 --> 00:22:40.560\n&gt;&gt; Yeah, there we go, I got it.\n\n486\n00:22:40.560 --> 00:22:44.420\nBut you can go, and you can find it, and\nyou can deploy it, and get that in place.\n\n487\n00:22:44.420 --> 00:22:47.920\nAnd then the very last one on\nthe list is probably the most risky.\n\n488\n00:22:47.920 --> 00:22:50.840\nThat's the community AMIs, okay?\n\n489\n00:22:50.840 --> 00:22:56.390\nCommunity AMIs are ones that just any\nold Joe Schmo out on the street built.\n\n490\n00:22:56.390 --> 00:23:01.060\nI could build an AMI and put it in the\ncommunity AMIs, make it available, right?\n\n491\n00:23:01.060 --> 00:23:06.230\nSo you could find Don Linux or\njust my roll up of CentOS.\n\n492\n00:23:06.230 --> 00:23:09.430\nAnd, with that, it might be great.\n\n493\n00:23:09.430 --> 00:23:11.330\nYou might love it and it's perfect.\n\n494\n00:23:11.330 --> 00:23:13.920\nBut you gotta really make sure you\ntrust the people that built it.\n\n495\n00:23:13.920 --> 00:23:17.600\nNow some of these, like if I look here,\nI see Red Hat Enterprise Linux 7.4.\n\n496\n00:23:17.600 --> 00:23:19.430\nWho's it provided by?\n\n497\n00:23:19.430 --> 00:23:21.050\nRed Hat Incorporated.\n\n498\n00:23:21.050 --> 00:23:22.100\nPretty sure I can trust that one.\n\n499\n00:23:22.100 --> 00:23:22.850\n&gt;&gt; Yes.\n&gt;&gt; It's\n\n500\n00:23:22.850 --> 00:23:24.520\nfrom the people that make the product.\n\n501\n00:23:24.520 --> 00:23:30.170\nBut a lot of the ones that you find\nin here will be built by John Doe or\n\n502\n00:23:30.170 --> 00:23:32.600\nwhatever, somebody you're\nnot familiar with.\n\n503\n00:23:32.600 --> 00:23:38.860\nSo if I look for WordPress builds in here,\nI'll find a couple of builds.\n\n504\n00:23:38.860 --> 00:23:41.170\nAnd some of them are by Bitnami,\nwhich is good.\n\n505\n00:23:41.170 --> 00:23:43.420\nWe can trust them, they're a good company.\n\n506\n00:23:43.420 --> 00:23:45.500\nBut other ones, you may come through it,\n\n507\n00:23:45.500 --> 00:23:48.000\nand find where it doesn't\nlist who built it.\n\n508\n00:23:48.000 --> 00:23:53.320\nOr it's just some regular person,\nand is that something you can trust?\n\n509\n00:23:53.320 --> 00:23:56.650\nIs that something that you know\nthat you can use and whatever.\n\n510\n00:23:56.650 --> 00:23:58.063\nWell, that's gonna need your evaluation.\n\n511\n00:23:58.063 --> 00:23:59.140\nYou're gonna need to look at it.\n\n512\n00:23:59.140 --> 00:24:04.313\nAmazon works really hard to not allow\nany malicious builds in the system.\n\n513\n00:24:04.313 --> 00:24:07.419\nBut just because it's not malicious\ndoesn't mean it's not doing things that\n\n514\n00:24:07.419 --> 00:24:09.880\nyou wouldn't want, right, or\nbehaving in a different way.\n\n515\n00:24:09.880 --> 00:24:12.720\nIt might have a backdoor password in it.\n\n516\n00:24:12.720 --> 00:24:13.979\nAnd you don't know, so\nyou have to audit that.\n\n517\n00:24:13.979 --> 00:24:16.608\nSo I tend not to use the community AMIs,\nexcept for\n\n518\n00:24:16.608 --> 00:24:20.866\nthe ones that are in the marketplace where\nwe can actually verify who it is that's\n\n519\n00:24:20.866 --> 00:24:22.070\ncreated that system.\n\n520\n00:24:22.070 --> 00:24:26.798\nSo definitely be aware of that, as far as\nwhere you get your operating system from.\n\n521\n00:24:26.798 --> 00:24:30.186\nAnd once you kinda got that figured out,\nwhich operating system,\n\n522\n00:24:30.186 --> 00:24:32.983\nthen you're actually ready to go in and\nlaunch the VM.\n\n523\n00:24:32.983 --> 00:24:35.663\n&gt;&gt; Now, Don is not an Amazon employee but\nhe plays one on ITProTV.\n\n524\n00:24:35.663 --> 00:24:38.281\n&gt;&gt; [LAUGH]\n&gt;&gt; Listen, now that we know what we want,\n\n525\n00:24:38.281 --> 00:24:38.913\nhow do we launch?\n\n526\n00:24:38.913 --> 00:24:41.760\n&gt;&gt; All right, so\nlaunching a VM is really, really simple.\n\n527\n00:24:41.760 --> 00:24:44.030\nYou find your AMI,\nright, that's our start.\n\n528\n00:24:44.030 --> 00:24:48.150\nAnd I'll go ahead and\ndo Red Hat and I'll select it.\n\n529\n00:24:48.150 --> 00:24:49.920\nAnd then we walk through a simple wizard.\n\n530\n00:24:49.920 --> 00:24:53.400\nThe simple wizard is just asking\nus a few basic questions,\n\n531\n00:24:53.400 --> 00:24:56.050\nalmost all of which we\ncould change later on.\n\n532\n00:24:56.050 --> 00:24:58.980\nSo if we get it wrong or\nwe change our mind later,\n\n533\n00:24:58.980 --> 00:25:00.910\nit's really easy to change\nmost of this stuff.\n\n534\n00:25:00.910 --> 00:25:03.230\nThe first one's probably the most\nimportant though, which is the size.\n\n535\n00:25:04.620 --> 00:25:08.800\nIf you do it t2.micro, Amazon\nactually has a free usage tier where\n\n536\n00:25:08.800 --> 00:25:11.940\nyou might be able to use it for free for\na year, and not even pay for it.\n\n537\n00:25:11.940 --> 00:25:14.490\nBecause they encourage people to learn,\nto train, right?\n\n538\n00:25:14.490 --> 00:25:17.738\nBut in production you won't use t2s,\nyou'll use other builds.\n\n539\n00:25:17.738 --> 00:25:21.150\nAnd so here's my chance to pick\nwhat size it's going to be.\n\n540\n00:25:21.150 --> 00:25:23.880\nAnd it gives you a little pop up\nbubbles that helps you to pick, and\n\n541\n00:25:23.880 --> 00:25:25.115\nyou'll see all the different options.\n\n542\n00:25:25.115 --> 00:25:27.320\nAnd just know that you can\nchange this after the fact,\n\n543\n00:25:27.320 --> 00:25:29.420\nyou're not really married to it.\n\n544\n00:25:29.420 --> 00:25:31.810\nYou just have to shut\nthe machine down to change it,\n\n545\n00:25:31.810 --> 00:25:32.680\nyou can't do it while it's online.\n\n546\n00:25:32.680 --> 00:25:36.490\nI'm gonna stick with a t2.micro\nsince this is just a lab.\n\n547\n00:25:36.490 --> 00:25:39.710\nNow if I was in a hurry, I could just\nhit Review and Launch and I'm done.\n\n548\n00:25:39.710 --> 00:25:42.640\nBut let me walk you through some of\nthe menu choices here that we've got.\n\n549\n00:25:42.640 --> 00:25:47.520\nAs I start to move forward its gonna\nask me, how many instances do I want?\n\n550\n00:25:47.520 --> 00:25:48.540\nI'm about to launch a Red Hat server.\n\n551\n00:25:48.540 --> 00:25:49.610\nDo I want one?\n\n552\n00:25:49.610 --> 00:25:53.414\nOr do I want 1,000?\nLet me just, 1,000, right?\n\n553\n00:25:53.414 --> 00:25:56.153\nNow if you just signed up for\nan AWS account,\n\n554\n00:25:56.153 --> 00:25:58.901\nthey actually limit you to 20 instances.\n\n555\n00:25:58.901 --> 00:26:01.556\nAnd if you want more than 20 you gotta\ndo a support ticket with them and\n\n556\n00:26:01.556 --> 00:26:02.840\nthey'll remove that cap.\n\n557\n00:26:02.840 --> 00:26:05.520\nThey do that to stop somebody from\nbreaking into your account and\n\n558\n00:26:05.520 --> 00:26:08.733\nlaunching a bunch of BitCoin miners,\nwhich is what happens.\n\n559\n00:26:08.733 --> 00:26:09.625\n[LAUGH]\n&gt;&gt; Dear.\n\n560\n00:26:09.625 --> 00:26:11.630\n&gt;&gt; So that gets expensive real fast.\n\n561\n00:26:11.630 --> 00:26:15.100\nSo I just want one, but\nyou can do more than one at the same time.\n\n562\n00:26:15.100 --> 00:26:17.740\nAfter that I can pick\nthe network configuration.\n\n563\n00:26:17.740 --> 00:26:21.100\nWith the network, there's actually a few\ndifferent things, I'll save this for\n\n564\n00:26:21.100 --> 00:26:21.640\na little bit later.\n\n565\n00:26:21.640 --> 00:26:24.870\nBut you can create isolated networks,\nwhat are called virtual private clouds or\n\n566\n00:26:24.870 --> 00:26:27.350\nVPCs, and\nisolate machines from the Internet.\n\n567\n00:26:27.350 --> 00:26:29.100\nIf you just leave it at the default,\nthough,\n\n568\n00:26:29.100 --> 00:26:33.990\nthe machine will get a public IP and\nbe accessible from the Internet,\n\n569\n00:26:33.990 --> 00:26:35.770\nwhich is a lot of times\nwhat we want on a server.\n\n570\n00:26:37.320 --> 00:26:39.950\nThen as I scroll down I can\nset up a shut down behavior.\n\n571\n00:26:39.950 --> 00:26:43.313\nBe really careful with this,\nbecause when you shut a machine down,\n\n572\n00:26:43.313 --> 00:26:45.919\nthere's two choices,\nstop and terminate, okay?\n\n573\n00:26:45.919 --> 00:26:49.113\nStop, just means stop the VM from running,\nshut it down.\n\n574\n00:26:49.113 --> 00:26:50.575\nBut we're gonna save the hard drives and\n\n575\n00:26:50.575 --> 00:26:52.610\nyou can power it back\non whenever you want.\n\n576\n00:26:52.610 --> 00:26:56.600\nIf you choose terminate, when you shut\nthe machine down, it deletes itself.\n\n577\n00:26:56.600 --> 00:27:00.290\nNow that might sound really bad, why would\nI want this machine to delete itself?\n\n578\n00:27:00.290 --> 00:27:03.972\nBut if I'm doing an autoscaling group or\nI'm adding and removing machines all\n\n579\n00:27:03.972 --> 00:27:07.567\nthe time to cover a workload, I don't\nneed the old machines laying around.\n\n580\n00:27:07.567 --> 00:27:09.767\nCuz I can just rebuild them\neasily when I need them so\n\n581\n00:27:09.767 --> 00:27:11.780\nI want them to delete\nwhen they're shut down.\n\n582\n00:27:11.780 --> 00:27:13.518\nNormally you want stop though,\nI'm gonna choose that.\n\n583\n00:27:13.518 --> 00:27:17.073\nAnd you've got a little option here you\ncan check to protect against accidental\n\n584\n00:27:17.073 --> 00:27:18.270\ntermination.\n\n585\n00:27:18.270 --> 00:27:21.550\nAs long as termination protection is on,\nyou can't delete the machine,\n\n586\n00:27:21.550 --> 00:27:22.520\nyou can't terminate it.\n\n587\n00:27:22.520 --> 00:27:24.010\nYou'd have to go and\nturn this option off first.\n\n588\n00:27:24.010 --> 00:27:26.580\nSo that's another way to protect\nyour machines from accidentally\n\n589\n00:27:26.580 --> 00:27:27.210\ngetting deleted.\n\n590\n00:27:28.760 --> 00:27:31.670\nAll right, on the next screen,\nI can choose to add storage.\n\n591\n00:27:31.670 --> 00:27:35.060\nAnd the default you'll see,\nit's only got ten gigs of storage, and\n\n592\n00:27:35.060 --> 00:27:36.850\nit's right here in the root disk.\n\n593\n00:27:36.850 --> 00:27:41.060\nNow, Amazon encourages you not\nto put data in the root disk.\n\n594\n00:27:41.060 --> 00:27:43.750\nThis is where the operating system is,\nand if it swaps a file,\n\n595\n00:27:43.750 --> 00:27:45.080\nthat's where that's gonna go.\n\n596\n00:27:45.080 --> 00:27:49.700\nYou can put data there, but if you\nneed data storage, like a database or\n\n597\n00:27:49.700 --> 00:27:54.780\na website or whatever, they encourage you\nto add a second disk and put it there.\n\n598\n00:27:54.780 --> 00:27:57.830\nAnd the main reason is the way\nthis data is replicated.\n\n599\n00:27:57.830 --> 00:28:01.060\nThis is being built of\nan Amazon Machine Image, an AMI.\n\n600\n00:28:01.060 --> 00:28:04.040\nSo this first disk comes out of the AMI.\n\n601\n00:28:04.040 --> 00:28:06.083\nAnd if I ever re-deploy this,\n\n602\n00:28:06.083 --> 00:28:10.888\nI'm not gonna have my custom data in\nthat unless I go and rebuild the AMI.\n\n603\n00:28:10.888 --> 00:28:13.512\nVersus a second disk that\nI can easily detach and\n\n604\n00:28:13.512 --> 00:28:17.820\nreattach to any machine I wanted, so\nit gives me a little flexibility.\n\n605\n00:28:17.820 --> 00:28:19.920\nAlways a good idea to\nadd that second disk.\n\n606\n00:28:19.920 --> 00:28:24.712\nSo I'm gonna add one, and then it shows me\nright here on the screen that that second\n\n607\n00:28:24.712 --> 00:28:26.510\ndisk is gonna be /dev/sdb.\n\n608\n00:28:26.510 --> 00:28:27.790\nI need to remember that.\n\n609\n00:28:27.790 --> 00:28:31.540\nBecause when I bring the machine up,\nI'll need to format that disk and\n\n610\n00:28:31.540 --> 00:28:33.970\nmount it to make it available and usable.\n\n611\n00:28:33.970 --> 00:28:37.790\nBut after that, I can pick the size,\nand the size is up to me.\n\n612\n00:28:37.790 --> 00:28:41.510\nYou do have to pay for storage, right,\nit's $0.10 per giga byte per month.\n\n613\n00:28:41.510 --> 00:28:44.350\nSo the more storage I consume\nthe more that's gonna cost me.\n\n614\n00:28:44.350 --> 00:28:47.700\nIt's doing, maybe I want a 64 gig disk,\nso I can punch that in.\n\n615\n00:28:47.700 --> 00:28:50.060\nNow the cost is variable.\n\n616\n00:28:50.060 --> 00:28:54.043\nThe cost is dependant on this\noption right here, the volume type.\n\n617\n00:28:54.043 --> 00:28:57.160\nAnd you'll see that it\ndefaults to SSD storage.\n\n618\n00:28:57.160 --> 00:28:59.510\nThat's nice and fast,\nright, really fast storage.\n\n619\n00:28:59.510 --> 00:29:01.770\nBut it's not exclusive storage to me.\n\n620\n00:29:01.770 --> 00:29:04.090\nI'm sharing IO with other systems.\n\n621\n00:29:04.090 --> 00:29:09.045\nSo if this is a really critical system,\nlike a database server that I need to\n\n622\n00:29:09.045 --> 00:29:13.845\nhave the best IO, I can pick Provisioned\niOPS, and I specify exactly how\n\n623\n00:29:13.845 --> 00:29:18.673\nmany input/output operations per\nsecond I wanna reserve this system.\n\n624\n00:29:18.673 --> 00:29:23.243\nI can guarantee disk performance,\nit's twice as expensive, but\n\n625\n00:29:23.243 --> 00:29:24.718\nit can do it, right?\n\n626\n00:29:24.718 --> 00:29:26.955\nSo if performance is a concern,\nwe can certainly do that.\n\n627\n00:29:26.955 --> 00:29:31.690\nBut for most of us, general purpossesity\nis fine, that's what we need.\n\n628\n00:29:31.690 --> 00:29:35.182\nAnd then, you typically don't wanna set\nyour data disk to delete on termination.\n\n629\n00:29:35.182 --> 00:29:38.878\nAnd that way if you terminate an instance\nyou can reattach this data disk to some\n\n630\n00:29:38.878 --> 00:29:42.195\nother system and access it, and\nyou've got the option to encrypt it.\n\n631\n00:29:42.195 --> 00:29:45.112\nAnd remember normally when we\ninstall Linux during the installer,\n\n632\n00:29:45.112 --> 00:29:48.180\nwe had that option to encrypt\nour disk using Lux encryption.\n\n633\n00:29:48.180 --> 00:29:51.112\nWell, Amazon can actually encrypt\nthe disk as part of the VM.\n\n634\n00:29:51.112 --> 00:29:54.310\nSo we have that option, if we want it.\n\n635\n00:29:54.310 --> 00:29:57.152\nOnce we've got our volume setup,\nafter that you got your tags.\n\n636\n00:29:57.152 --> 00:29:59.226\nTags are just ways that you\ncan filter your machines.\n\n637\n00:29:59.226 --> 00:30:02.310\nIf you've got 1,000 instances, it can be\nconfusing to find the ones you're looking\n\n638\n00:30:02.310 --> 00:30:04.040\nfor, so you can use tags to do it.\n\n639\n00:30:04.040 --> 00:30:06.170\nI usually have one tag and\nit's called a name tag.\n\n640\n00:30:06.170 --> 00:30:07.090\nSo it has name, right?\n\n641\n00:30:07.090 --> 00:30:08.560\nI'm just gonna add a name tag.\n\n642\n00:30:08.560 --> 00:30:12.991\nI'm gonna add it and\nI'll call the server lab-rhel01, right?\n\n643\n00:30:12.991 --> 00:30:15.441\nThis will give me my\nRed Hat Enterprise Linux server.\n\n644\n00:30:15.441 --> 00:30:18.530\nYou can change the name whenever you want,\nit's not a permanent thing.\n\n645\n00:30:18.530 --> 00:30:20.431\nWell, it's permanent if you don't go and\nchange it, right?\n\n646\n00:30:20.431 --> 00:30:23.770\n[LAUGH] But you can change it if you want,\nand that'll be available.\n\n647\n00:30:25.280 --> 00:30:26.910\nOn the next screen,\nwe've got security groups.\n\n648\n00:30:26.910 --> 00:30:29.533\nAnd on the security group side,\nhere's where we can create basically,\n\n649\n00:30:29.533 --> 00:30:31.306\na software firewall that\nprotects our machine.\n\n650\n00:30:31.306 --> 00:30:33.118\nAnd I wanna talk more about it later,\nso right now,\n\n651\n00:30:33.118 --> 00:30:34.396\nI'm gonna leave it at the default.\n\n652\n00:30:34.396 --> 00:30:37.770\nThe defaults says we want\nto allow SSH on port 22.\n\n653\n00:30:37.770 --> 00:30:41.370\nThat's how I'm gonna get in and\nmanage this system and work with it, so\n\n654\n00:30:41.370 --> 00:30:43.220\nI'll leave that at its own.\n\n655\n00:30:43.220 --> 00:30:45.220\nAnd I'll hit review and launch.\n\n656\n00:30:45.220 --> 00:30:49.530\nNow it gives me a chance to kinda\nsummarize the data that I saw.\n\n657\n00:30:49.530 --> 00:30:51.860\nAnd I'm gonna go ahead and hit Launch.\n\n658\n00:30:51.860 --> 00:30:53.660\nNow there's one thing that it\ndidn't set up for me yet, and\n\n659\n00:30:53.660 --> 00:30:57.210\nthat's authentication, right,\na username, and a password.\n\n660\n00:30:57.210 --> 00:31:00.630\nWell, Amazon doesn't use usernames and\npasswords on their Linux instances.\n\n661\n00:31:00.630 --> 00:31:04.100\nInstead, they use certificate\nbased authentication.\n\n662\n00:31:04.100 --> 00:31:06.820\nSo when you set up your AWS account,\n\n663\n00:31:06.820 --> 00:31:09.880\nyou have the option to create\ncertificates to authenticate yourself.\n\n664\n00:31:09.880 --> 00:31:13.580\nAnd you can use those to authenticate\nyourself on the VM's as well, right?\n\n665\n00:31:13.580 --> 00:31:16.250\nOr if you've never done it before,\nyou've got the option to come in here and\n\n666\n00:31:16.250 --> 00:31:16.780\ncreate a new one.\n\n667\n00:31:16.780 --> 00:31:18.710\nI can come in here and\ncreate a new key pair.\n\n668\n00:31:18.710 --> 00:31:21.780\nAnd it will generate a key, and I'll\nhave a chance to download it right here.\n\n669\n00:31:21.780 --> 00:31:25.790\nAnd that will literally be\nthe only time I can download it.\n\n670\n00:31:25.790 --> 00:31:29.504\nIf I lose the file,\nI can't log in to my machines.\n\n671\n00:31:29.504 --> 00:31:32.350\nAnd the only thing I can do is delete\nthe machines and rebuild them, right?\n\n672\n00:31:32.350 --> 00:31:35.160\nAmazon has no recovery mechanism for this.\n\n673\n00:31:35.160 --> 00:31:36.810\nThese are your private keys.\n\n674\n00:31:36.810 --> 00:31:39.480\nIf somebody gets the private keys,\nthey can break into the system, so\n\n675\n00:31:39.480 --> 00:31:40.780\nthere is no recovery.\n\n676\n00:31:40.780 --> 00:31:43.210\nYou download a key and\nyou've got it, right?\n\n677\n00:31:43.210 --> 00:31:45.120\nSo I've already generated my own key, and\n\n678\n00:31:45.120 --> 00:31:48.370\nI've got the option here to choose\nan existing key pair and I can pick it.\n\n679\n00:31:48.370 --> 00:31:51.356\nAnd I have to acknowledge that\nI have access to that key pair,\n\n680\n00:31:51.356 --> 00:31:53.030\ncuz Amazon doesn't.\n\n681\n00:31:53.030 --> 00:31:56.788\nAnd if I don't have the keys,\nI just created a server I can't log into,\n\n682\n00:31:56.788 --> 00:31:57.427\nall right.\n\n683\n00:31:57.427 --> 00:31:58.543\nBut you can create your own.\n\n684\n00:31:58.543 --> 00:32:00.655\nIf you do, you just create it here,\nyou give it a name, and\n\n685\n00:32:00.655 --> 00:32:02.136\nthen you can reuse it on other machines.\n\n686\n00:32:02.136 --> 00:32:04.947\nOr you might create different keys for\nevery single machine you launch,\n\n687\n00:32:04.947 --> 00:32:06.478\nif you're really security paranoid.\n\n688\n00:32:06.478 --> 00:32:07.950\nYou can certainly do that.\n\n689\n00:32:07.950 --> 00:32:12.098\nAnd then after that, we launch\nthe instance and now it's firing up.\n\n690\n00:32:12.098 --> 00:32:13.950\nNow, normally this would be\nwhere the installer is running,\n\n691\n00:32:13.950 --> 00:32:16.470\ncopies files to the hard drive, reboots.\n\n692\n00:32:16.470 --> 00:32:18.240\nThat's not what is happening in Amazon.\n\n693\n00:32:18.240 --> 00:32:20.120\nThey've already got a machine built for\nus.\n\n694\n00:32:20.120 --> 00:32:22.820\nThey deploy it onto hardware somewhere.\n\n695\n00:32:22.820 --> 00:32:24.900\nWe don't necessarily know\nwhere that hardware is.\n\n696\n00:32:24.900 --> 00:32:27.490\nWe know the data center, but\nnot where in that data center it is.\n\n697\n00:32:27.490 --> 00:32:31.100\nIt deploys that server,\nit brings it online, and\n\n698\n00:32:31.100 --> 00:32:32.110\nthen we'll be able to access it.\n\n699\n00:32:32.110 --> 00:32:35.930\nIf I scroll down, there's a button that's\nkinda hidden, it says View Instances.\n\n700\n00:32:35.930 --> 00:32:37.315\nActually, it's hidden by my big head.\n\n701\n00:32:37.315 --> 00:32:38.020\n&gt;&gt; [LAUGH]\n&gt;&gt; But\n\n702\n00:32:38.020 --> 00:32:41.390\ndown here at the bottom is a blue button\nthat says View Instances and if I click\n\n703\n00:32:41.390 --> 00:32:47.140\nthat, it'll take me back to the dashboard\nand this time I see my instances, okay?\n\n704\n00:32:47.140 --> 00:32:49.828\nNow, normally the instance state,\nthis one went really fast, but\n\n705\n00:32:49.828 --> 00:32:52.400\nnormally the instance state\nwill say initializing.\n\n706\n00:32:52.400 --> 00:32:55.520\nIt takes a little while to setup, and\nso you'll see a yellow circle and\n\n707\n00:32:55.520 --> 00:32:56.950\nit will say initializing.\n\n708\n00:32:56.950 --> 00:33:01.750\nAnd when the machine is done, it'll change\nto a green light and it will say running.\n\n709\n00:33:01.750 --> 00:33:03.400\nAnd actually, right here,\nthe status check.\n\n710\n00:33:03.400 --> 00:33:05.900\nThe status check is still\nshowing initializing.\n\n711\n00:33:05.900 --> 00:33:09.680\nSo it's initializing, I'm waiting for\nthis machine to be fully ready.\n\n712\n00:33:09.680 --> 00:33:12.650\nIt's running, but\nthe OS is doing the final initialization.\n\n713\n00:33:12.650 --> 00:33:13.726\nIt's gotta add that other disk and\n\n714\n00:33:13.726 --> 00:33:16.150\nthe other things that we told\nit to do during the installer.\n\n715\n00:33:16.150 --> 00:33:19.150\nAs soon as that initializing\nchanges to a healthy check,\n\n716\n00:33:19.150 --> 00:33:20.920\nit'll have a little green light and\nit'll say 2/2.\n\n717\n00:33:20.920 --> 00:33:23.670\nIt'll let me know that it passed\ntwo checks, the hardware and\n\n718\n00:33:23.670 --> 00:33:24.810\nthe software checks.\n\n719\n00:33:24.810 --> 00:33:28.850\nAnd once that's good, we'll be ready\nto login, access the machine, and\n\n720\n00:33:28.850 --> 00:33:30.110\nstart to work with it.\n\n721\n00:33:30.110 --> 00:33:32.070\n&gt;&gt; Yeah, I was gonna say,\nnow that the instance is up and\n\n722\n00:33:32.070 --> 00:33:33.720\nrunning, how do we log into it?\n\n723\n00:33:33.720 --> 00:33:37.061\nAll right, well logging into it,\nwe've gotta use our certificates, and\n\n724\n00:33:37.061 --> 00:33:38.770\nthat's a bit of an involved process.\n\n725\n00:33:38.770 --> 00:33:41.100\nNow I wanna walk you guys through it,\nbut looking at the time at the clock,\n\n726\n00:33:41.100 --> 00:33:42.560\nI don't think I have enough time to do it.\n\n727\n00:33:42.560 --> 00:33:47.060\nSo let's do this, let's split into\na two-parter on this one, and\n\n728\n00:33:47.060 --> 00:33:50.270\nin the second part, I'll show you guys\nhow to get logged into that instance.\n\n729\n00:33:50.270 --> 00:33:53.027\nWe still need to get logged in,\ndo our initial updates and\n\n730\n00:33:53.027 --> 00:33:56.320\nthen start to work with this\nLinux server that we built up.\n\n731\n00:33:56.320 --> 00:33:57.988\nSo, that's what we'll tackle in part two.\n\n732\n00:33:57.988 --> 00:34:02.260\n&gt;&gt; Awesome information, Don and who\nknew Amazon had that service available?\n\n733\n00:34:02.260 --> 00:34:04.075\nIt's more than Amazon Prime,\nI'm telling you what.\n\n734\n00:34:04.075 --> 00:34:06.450\n&gt;&gt; [LAUGH]\n&gt;&gt; Creating an EC2 instance.\n\n735\n00:34:06.450 --> 00:34:07.660\nNow, this is part one.\n\n736\n00:34:07.660 --> 00:34:08.500\nThere will be part two.\n\n737\n00:34:08.500 --> 00:34:09.630\nPlease make sure you watch that.\n\n738\n00:34:09.630 --> 00:34:11.830\nDon, anything else you\nwanna say before we go?\n\n739\n00:34:11.830 --> 00:34:13.390\n&gt;&gt; This is better than Amazon Prime.\n\n740\n00:34:13.390 --> 00:34:15.230\nI didn't have to wait two days for\nit to be shipped to me,\n\n741\n00:34:15.230 --> 00:34:16.580\nthat server's already up.\n\n742\n00:34:16.580 --> 00:34:17.440\n&gt;&gt; Fantastic.\n\n743\n00:34:17.440 --> 00:34:19.560\n&gt;&gt; Do be aware that there\nis a cost concern, right?\n\n744\n00:34:19.560 --> 00:34:21.630\nThat if you forget about a machine and\nyou leave it there,\n\n745\n00:34:21.630 --> 00:34:22.740\nyou're still paying for it, right?\n\n746\n00:34:22.740 --> 00:34:24.060\nSo we do always have to be aware of that.\n\n747\n00:34:24.060 --> 00:34:26.860\nThis is not free, but\nit is really a great solution.\n\n748\n00:34:26.860 --> 00:34:28.850\nDefinitely the way of the future and\none you wanna learn.\n\n749\n00:34:28.850 --> 00:34:30.140\nAnd stay tuned for part two though,\n\n750\n00:34:30.140 --> 00:34:33.510\ncuz we've really only kinda\nbroken the tip of the iceberg.\n\n751\n00:34:33.510 --> 00:34:38.320\n&gt;&gt; Creating an EC2 Instance, part one and\npart two, and Linux in the Cloud.\n\n752\n00:34:38.320 --> 00:34:40.800\nAnd make sure you watch all of\nthe episodes of Linux in the Cloud,\n\n753\n00:34:40.800 --> 00:34:41.575\nyou'll be glad you did.\n\n754\n00:34:41.575 --> 00:34:43.970\nAnd thank you for watching ITProTV.\n\n755\n00:34:43.970 --> 00:34:46.510\nRemember, a good IT pro\nis always learning.\n\n756\n00:34:46.510 --> 00:34:47.440\nI'm Zach Memos.\n\n757\n00:34:47.440 --> 00:34:48.160\n&gt;&gt; And I'm Don Pezet.\n\n758\n00:34:48.160 --> 00:34:51.259\n&gt;&gt; And we will see you again very soon.\n\n759\n00:34:51.259 --> 00:34:57.179\n[MUSIC]\n\n760\n00:34:57.179 --> 00:34:59.070\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "231079767"
        },
        {
          "description": "Don and Zach discuss if the installation is the same for different operating systems, adding additional user accounts, Amazon automatically updates and maintains servers only, not our OS, and other recommended maintenance of our servers.",
          "length": "1329",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-2-1-2-creating_an_ec2_instance_pt_2-082417-PGM.00_21_53_05.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-2-1-2-creating_an_ec2_instance_pt_2-082417-PGM.00_21_53_05.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-2-1-2-creating_an_ec2_instance_pt_2-082417-PGM.00_21_53_05.Still001-sm.jpg",
          "title": "Creating an EC2 Instance Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.200 --> 00:00:01.441\nWelcome to ITProTV.\n\n2\n00:00:01.441 --> 00:00:02.832\nI'm your host, Don Pezet.\n\n3\n00:00:02.832 --> 00:00:06.367\n[CROSSTALK]\n\n4\n00:00:06.367 --> 00:00:08.234\n[MUSIC]\n\n5\n00:00:08.234 --> 00:00:11.903\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:11.903 --> 00:00:14.233\n&gt;&gt; Hello and thank you for\nwatching ITProTV,\n\n7\n00:00:14.233 --> 00:00:16.230\nhelping you learn wherever you go.\n\n8\n00:00:16.230 --> 00:00:17.660\nI'm your host, Zach Memos.\n\n9\n00:00:17.660 --> 00:00:23.150\nAs we continue on with LINUX in the Cloud\nand creating an EC2 instance, part two.\n\n10\n00:00:23.150 --> 00:00:25.360\nAnd Don Pezet is here to help us,\nas usual.\n\n11\n00:00:25.360 --> 00:00:27.150\nDon, thanks so much for being here.\n\n12\n00:00:27.150 --> 00:00:28.210\n&gt;&gt; Hey, glad to be here, Zach.\n\n13\n00:00:28.210 --> 00:00:31.070\nAnd in continuing our adventure from\nlast episode, if you watched part one,\n\n14\n00:00:31.070 --> 00:00:34.470\nyou might have noticed that we\nhad a decidedly non-Linuxy show.\n\n15\n00:00:34.470 --> 00:00:36.090\n&gt;&gt; No, weird!\n&gt;&gt; That we never actually got on\n\n16\n00:00:36.090 --> 00:00:38.260\nthe command prompt a single time.\n\n17\n00:00:38.260 --> 00:00:41.410\nWe did, however, create a virtual machine,\nan instance and easy to.\n\n18\n00:00:41.410 --> 00:00:44.860\nWe spun up a Red Hat server,\nit's up and it's running now.\n\n19\n00:00:44.860 --> 00:00:47.170\nIt was just kinda waiting for\nthat process to finish.\n\n20\n00:00:47.170 --> 00:00:50.913\nWe need to see about getting logged\nin to it and using the darn thing.\n\n21\n00:00:50.913 --> 00:00:53.905\nSo that's what we're going to take\na look at here in this episode and\n\n22\n00:00:53.905 --> 00:00:57.223\nI also took a moment to spin up an Ubuntu\nserver in between the break as well.\n\n23\n00:00:57.223 --> 00:00:59.345\nSo I'll have that one kind\nof hang around as well, so\n\n24\n00:00:59.345 --> 00:01:02.010\nwe can see kind of the two\ndifferent OSs and how they work.\n\n25\n00:01:02.010 --> 00:01:04.470\n&gt;&gt; So Don,\nwe're all chomping at the bit or\n\n26\n00:01:04.470 --> 00:01:07.500\nbyte, depending on which\nway you look at it.\n\n27\n00:01:07.500 --> 00:01:08.730\nHow do we log in?\n\n28\n00:01:08.730 --> 00:01:11.890\n&gt;&gt; All right, so getting logged in is a\nlittle bit trickier than a normal system.\n\n29\n00:01:11.890 --> 00:01:14.270\nA normal system where you might have\na user name and a password is enough.\n\n30\n00:01:14.270 --> 00:01:17.110\nBut here we're doing\ncertificate-based authentication.\n\n31\n00:01:17.110 --> 00:01:21.890\nSo when you created the instance it asked\nyou to either create a new certificate or\n\n32\n00:01:21.890 --> 00:01:23.570\nto use an existing one.\n\n33\n00:01:24.570 --> 00:01:27.260\nIt then if you created a new one it\ngave you the chance to download it.\n\n34\n00:01:27.260 --> 00:01:29.450\nIf you had an existing one\nyou should already have it.\n\n35\n00:01:29.450 --> 00:01:34.560\nWe can now use that certificate to be able\nto reach in and log into our system okay?\n\n36\n00:01:34.560 --> 00:01:36.790\nNow before we can log in we have\nto know where the system is.\n\n37\n00:01:36.790 --> 00:01:39.400\nAnd so I've got the console\npulled up right here and\n\n38\n00:01:39.400 --> 00:01:43.065\nthe instance that I spun up at the end of\nthe last show was this guy right here.\n\n39\n00:01:43.065 --> 00:01:45.020\nlab/rhel01.\n\n40\n00:01:45.020 --> 00:01:48.020\nThat was the Red Hat\nserver that I spun up.\n\n41\n00:01:48.020 --> 00:01:51.890\nAnd when I click on it, down here I\nsee this status for that server and\n\n42\n00:01:51.890 --> 00:01:55.060\nI'll see a lot of information,\nlet me zoom in on some of this.\n\n43\n00:01:55.060 --> 00:01:58.200\nA lot of information, but the part that I\ncare about is right here at the bottom,\n\n44\n00:01:58.200 --> 00:02:02.460\nthe Public DNS name and\nthe IP address that it was given.\n\n45\n00:02:02.460 --> 00:02:06.490\nIt's given a Public IPv4 address and\nit can even do a IPv6 but\n\n46\n00:02:06.490 --> 00:02:10.090\nI just didn't choose that but\nit's got an IPv4 address right here.\n\n47\n00:02:10.090 --> 00:02:14.610\nI need that address so that I can remote\ninto the system and connect to it.\n\n48\n00:02:14.610 --> 00:02:17.200\nSo I'm gonna come in here and\njust copy that real quick.\n\n49\n00:02:17.200 --> 00:02:20.920\nSo I've got that, and\nnow I can use that IP to reach out to it.\n\n50\n00:02:20.920 --> 00:02:24.950\nNow if I had a username and a password,\nI could just use my standard SSH client,\n\n51\n00:02:24.950 --> 00:02:26.990\nreach right out, and connect in.\n\n52\n00:02:26.990 --> 00:02:29.859\nBut I don't have a password,\nI have a certificate, and\n\n53\n00:02:29.859 --> 00:02:33.400\nif you've never used certificate-based\nauthentication before,\n\n54\n00:02:33.400 --> 00:02:35.733\nit can be a little daunting with SSH,\nright?\n\n55\n00:02:35.733 --> 00:02:38.250\nThe first thing is that I\nneed my certificate, right?\n\n56\n00:02:38.250 --> 00:02:42.210\nSo, I had already generated mine, but\nif I had generated it during the instance\n\n57\n00:02:42.210 --> 00:02:44.170\ncreation wizard,\nit would have had me download it.\n\n58\n00:02:44.170 --> 00:02:46.876\nAnd either way, you end up with a file.\n\n59\n00:02:46.876 --> 00:02:51.600\nAnd the file will be whatever you called\nit, dot pem, all right, a pem file.\n\n60\n00:02:51.600 --> 00:02:56.260\nAnd that's what's got our private and\npublic keys kinda stored in it, right?\n\n61\n00:02:56.260 --> 00:02:59.990\nBecause the private key is in it, that's\nwhy Amazon won't let me download it again.\n\n62\n00:02:59.990 --> 00:03:02.072\nOnce it's been created and\ndownloaded, that's it.\n\n63\n00:03:02.072 --> 00:03:05.030\nNow Amazon just has our public key.\n\n64\n00:03:05.030 --> 00:03:07.250\nThey don't have the private key any more.\n\n65\n00:03:07.250 --> 00:03:09.320\nWe've got both of them right here.\n\n66\n00:03:09.320 --> 00:03:14.077\nSo when we go to connect to the server,\nwe need to provide it the key to use.\n\n67\n00:03:14.077 --> 00:03:18.069\nNow, normally you could just download\na file and go and connect up.\n\n68\n00:03:18.069 --> 00:03:21.277\nBut SSH is actually pretty sensitive\nabout the permissions of this file.\n\n69\n00:03:21.277 --> 00:03:23.677\nLet me show you what happens\nif I just try and connect.\n\n70\n00:03:23.677 --> 00:03:29.610\nI'm gonna do SSH and if I had a username\nI'd put the username @ and the IP address.\n\n71\n00:03:29.610 --> 00:03:31.280\nWell, I actually do have a username.\n\n72\n00:03:31.280 --> 00:03:36.420\nWhen Amazon spins up a Linux server\nthey create one user by default, and\n\n73\n00:03:36.420 --> 00:03:37.550\nthey call it root, right?\n\n74\n00:03:37.550 --> 00:03:40.045\nThe root user is not allowed\nto remote in by default.\n\n75\n00:03:40.045 --> 00:03:44.160\nThey create a user called, EC2- user.\n\n76\n00:03:45.300 --> 00:03:50.000\nAnd that's gonna be at whatever the IP\naddress is of my instance, right?\n\n77\n00:03:50.000 --> 00:03:52.788\nAnd they assigned an IP address for\nme when it was created.\n\n78\n00:03:52.788 --> 00:03:59.010\nSo I'm gonna put in SSH EC2- user @ and\nthen the IP address of that instance.\n\n79\n00:03:59.010 --> 00:04:02.330\nNow if I just try and connect this way,\nit's gonna do user authentication, right?\n\n80\n00:04:02.330 --> 00:04:05.120\nSo it's gonna provide the user name,\nhere's the fingerprint for that machine,\n\n81\n00:04:05.120 --> 00:04:07.610\nand I'll say yes and I'll go to connect.\n\n82\n00:04:07.610 --> 00:04:08.860\nPermission denied.\n\n83\n00:04:08.860 --> 00:04:10.987\nIt never even prompted me for a password.\n\n84\n00:04:10.987 --> 00:04:13.473\nBecause password-based\nauthentication is disabled.\n\n85\n00:04:13.473 --> 00:04:14.987\nI've got to do a certificate.\n\n86\n00:04:14.987 --> 00:04:19.547\nSo in addition to this line, I need to do\na -i to feed a certificate as input for\n\n87\n00:04:19.547 --> 00:04:22.870\nauthentication and\nI need to provide it with that file.\n\n88\n00:04:22.870 --> 00:04:26.607\nSo I'll say -i and then dot slash,\nmine's awsdemo.pem, or\n\n89\n00:04:26.607 --> 00:04:30.020\nwhatever you call your file,\nI'm gonna provide it.\n\n90\n00:04:30.020 --> 00:04:31.029\nAll right, now.\n\n91\n00:04:31.029 --> 00:04:34.350\nI mentioned that SSH was\nsensitive about permissions.\n\n92\n00:04:34.350 --> 00:04:36.290\nAnd then I did absolutely\nnothing about permissions.\n\n93\n00:04:36.290 --> 00:04:39.030\nWell, what I'm gonna do is,\nI'm gonna get an error here.\n\n94\n00:04:39.030 --> 00:04:40.380\nThis big warning.\n\n95\n00:04:40.380 --> 00:04:40.930\nWarning!\n\n96\n00:04:40.930 --> 00:04:42.030\nUnprotected private key file!\n\n97\n00:04:42.030 --> 00:04:43.460\n&gt;&gt; Danger, danger!\n\n98\n00:04:43.460 --> 00:04:44.710\nAnd it doesn't let me connect.\n\n99\n00:04:44.710 --> 00:04:48.260\nOkay, this is not Amazon doing this,\nthis is SSH.\n\n100\n00:04:48.260 --> 00:04:52.512\nThe SSH client is a part of open SSH,\nit is really picky about key files and\n\n101\n00:04:52.512 --> 00:04:56.994\nin my opinion, it's a little overly\nparanoid, but you can't be too safe.\n\n102\n00:04:56.994 --> 00:04:58.573\nBasically, what they're saying is, look.\n\n103\n00:04:58.573 --> 00:05:01.570\nYour pem file,\nit's got the private key in it.\n\n104\n00:05:01.570 --> 00:05:05.210\nYou need to care about\nthe security of that file.\n\n105\n00:05:05.210 --> 00:05:09.040\nAnd when you download a file\nwhat permissions does it get?\n\n106\n00:05:09.040 --> 00:05:11.370\nA lot of times its 755, right.\n\n107\n00:05:11.370 --> 00:05:15.050\nEverybody has read and\neverybody has execute, so in other words\n\n108\n00:05:15.050 --> 00:05:18.280\neverybody who has an account on your\ncomputer can read that private key file.\n\n109\n00:05:18.280 --> 00:05:20.410\nThat's not terribly secure, is it?\n\n110\n00:05:20.410 --> 00:05:22.660\nSo they wanna make sure that it is secure.\n\n111\n00:05:22.660 --> 00:05:25.710\nIn fact, they go really psycho about it.\n\n112\n00:05:25.710 --> 00:05:29.781\nSo that you have to be the only\nperson who can read it.\n\n113\n00:05:29.781 --> 00:05:33.682\nAnd even you can only have\nread permission, not write,\n\n114\n00:05:33.682 --> 00:05:35.180\non that private key.\n\n115\n00:05:35.180 --> 00:05:36.940\nThey're like really, really picky.\n\n116\n00:05:36.940 --> 00:05:40.560\nSo in order to use that key I\nneed to change the permissions.\n\n117\n00:05:40.560 --> 00:05:45.994\nAnd so I'm gonna do a ch mod\n400 of that key, all right?\n\n118\n00:05:45.994 --> 00:05:47.278\nSo what is 400?\n\n119\n00:05:47.278 --> 00:05:52.942\n400, the 4 means that the owner\nwill have read access.\n\n120\n00:05:52.942 --> 00:05:53.940\nAnd that's it.\n\n121\n00:05:53.940 --> 00:05:56.910\nNo write, no execute, just read access.\n\n122\n00:05:56.910 --> 00:06:01.250\nAnd then the 00 means the group and\neverybody else has nothing, no access.\n\n123\n00:06:01.250 --> 00:06:05.840\nSo when I do that, and\nI take a look at that AWSdemo.pem,\n\n124\n00:06:05.840 --> 00:06:10.170\nI can see where the owner has read and\nnobody else has access.\n\n125\n00:06:10.170 --> 00:06:12.040\nThat will make it happy, okay?\n\n126\n00:06:12.040 --> 00:06:18.200\nSo you need to change the permissions to\n400 or really it would just be you + R.\n\n127\n00:06:18.200 --> 00:06:20.130\nEverybody else gets nothing.\n\n128\n00:06:20.130 --> 00:06:24.320\nSo once that's set,\nnow I can rerun that line.\n\n129\n00:06:24.320 --> 00:06:31.652\nSSH EC2- user at whatever the IPM server\nis, -i and I can feed in that certificate.\n\n130\n00:06:31.652 --> 00:06:36.180\nAnd when I go to connect, it's gonna\nreach out to that server, and I'm in.\n\n131\n00:06:36.180 --> 00:06:40.233\nIt didn't ask for a username cuz I\nprovided that here in the command line.\n\n132\n00:06:40.233 --> 00:06:45.656\nAnd it didn't ask for a password because\nI used the certificate to authenticate,\n\n133\n00:06:45.656 --> 00:06:47.316\nnot a password, right?\n\n134\n00:06:47.316 --> 00:06:50.420\nNow I'm in, and\nI'm connected to that instance.\n\n135\n00:06:50.420 --> 00:06:51.605\nThat instance is running\nin the background.\n\n136\n00:06:51.605 --> 00:06:56.890\nI'm logged in, and if I do a whoami,\nI'm logged in as EC2 user, not root.\n\n137\n00:06:56.890 --> 00:07:01.910\nBut I could sudu whoami,\nand it's running as root.\n\n138\n00:07:01.910 --> 00:07:06.300\nMy user account,\nthat EC2 user is in the suduers file.\n\n139\n00:07:06.300 --> 00:07:09.420\nSo I've already got\npermission to act as root.\n\n140\n00:07:09.420 --> 00:07:11.820\nI don't need to know\nthe root account's password.\n\n141\n00:07:11.820 --> 00:07:14.550\nIn fact, Amazon doesn't tell me\nthe root account's password.\n\n142\n00:07:14.550 --> 00:07:15.440\nWe don't know what it is.\n\n143\n00:07:15.440 --> 00:07:18.143\nAll right, you could reset it,\nyou could even disable it, but\n\n144\n00:07:18.143 --> 00:07:19.529\nat this point we don't need it.\n\n145\n00:07:19.529 --> 00:07:23.220\nWe've got EC2 user there\nin the sudoers file.\n\n146\n00:07:23.220 --> 00:07:25.580\nAnd from here we can start\nto work with the server.\n\n147\n00:07:25.580 --> 00:07:28.227\nI'm now logged in and able to work.\n\n148\n00:07:28.227 --> 00:07:30.960\n&gt;&gt; Well, is this the same for\neach operating system?\n\n149\n00:07:30.960 --> 00:07:31.995\n&gt;&gt; You know what, you'd think it would be.\n\n150\n00:07:31.995 --> 00:07:36.190\n[LAUGH] It is for Red Hat,\nfor CentOS, Debian.\n\n151\n00:07:36.190 --> 00:07:40.600\nIf you fire up those distros they\nall use the same EC2 user model.\n\n152\n00:07:40.600 --> 00:07:42.990\nBut one that's different is Ubuntu, right?\n\n153\n00:07:42.990 --> 00:07:46.100\nI went ahead and spun up another box\nhere in the background, an Ubuntu box.\n\n154\n00:07:46.100 --> 00:07:48.411\nSo that I could show you guys with it.\n\n155\n00:07:48.411 --> 00:07:52.983\nThe process is basically the same, but for\nwhatever reason, I don't really know why.\n\n156\n00:07:52.983 --> 00:07:58.658\nBut for whatever reason, the default user\non an Ubuntu instance is named Ubuntu,\n\n157\n00:07:58.658 --> 00:08:00.724\nnot named EC2 user, right?\n\n158\n00:08:00.724 --> 00:08:05.503\nIf you do CentOS or Red Hat,\nyou do Fedora, They're all ec2-user.\n\n159\n00:08:05.503 --> 00:08:07.078\nDebian ec2-user.\n\n160\n00:08:07.078 --> 00:08:10.250\nBut when you do Ubuntu,\nthe username is different.\n\n161\n00:08:10.250 --> 00:08:13.650\nSo if I wanted to connect this Ubuntu\ninstance, just like with the other one,\n\n162\n00:08:13.650 --> 00:08:15.690\nI'm gonna click it so\nI can get its IP address.\n\n163\n00:08:15.690 --> 00:08:18.830\nI'll find its IP right here,\nand I'll copy that.\n\n164\n00:08:18.830 --> 00:08:22.380\nI'm gonna go back to my terminal and\nlet me just do another tab.\n\n165\n00:08:23.400 --> 00:08:27.000\nAnd I'm gonna do SSH ubuntu at, oops,\n\n166\n00:08:27.000 --> 00:08:31.960\nwhich I have to spell right, at, and\nthen I'll paste in an IP address.\n\n167\n00:08:31.960 --> 00:08:36.610\nAnd I'll do a -i to feed in that\ncertificate and I'll remote in.\n\n168\n00:08:36.610 --> 00:08:41.150\nI get the fingerprint of that server and\nthen, I connect in and here I am,\n\n169\n00:08:41.150 --> 00:08:43.000\nI'm in the Ubuntu server, okay?\n\n170\n00:08:43.000 --> 00:08:45.633\nI don't know why they use\na different username on that one.\n\n171\n00:08:45.633 --> 00:08:46.155\n&gt;&gt; Product placement?\n\n172\n00:08:46.155 --> 00:08:49.060\n[LAUGH]\n&gt;&gt; Yeah, well, I assume that they got\n\n173\n00:08:49.060 --> 00:08:52.320\nCanonical to actually build this AMI and\nCanonical just picked it, versus\n\n174\n00:08:52.320 --> 00:08:55.800\nthe Red Hat team or the other teams really\nsaid, we'll stick with Amazon's standard.\n\n175\n00:08:55.800 --> 00:08:58.950\nThe Ubuntu guys must have just picked\nsomething different and that's fine.\n\n176\n00:08:58.950 --> 00:09:01.860\nRemember that Ubuntu, they make their\nmoney off of tech support, right?\n\n177\n00:09:01.860 --> 00:09:03.900\n&gt;&gt; Right.\n&gt;&gt; They don't charge money for the server,\n\n178\n00:09:03.900 --> 00:09:05.820\nthey don't charge money for the desktop.\n\n179\n00:09:05.820 --> 00:09:09.360\nSo when you log in, right off the bat\nwe kinda get a commercial, right?\n\n180\n00:09:09.360 --> 00:09:11.590\nThis little wall of text,\nif you read through it, it's telling you,\n\n181\n00:09:11.590 --> 00:09:16.374\nhey you can get cloud support with\nUbuntu Advantage Cloud Guest.\n\n182\n00:09:16.374 --> 00:09:16.940\n&gt;&gt; Mm-hm.\n\n183\n00:09:16.940 --> 00:09:21.060\n&gt;&gt; If you go to their website and\nyou sign up for Ubuntu Advantage Cloud.\n\n184\n00:09:21.060 --> 00:09:25.106\nAnd when you do that you pay an annual\nfee, but when something goes wrong,\n\n185\n00:09:25.106 --> 00:09:26.419\nyou can call up Ubuntu.\n\n186\n00:09:26.419 --> 00:09:28.614\nRight.\nIf something goes wrong with your instance\n\n187\n00:09:28.614 --> 00:09:31.210\nand you call Amazon,\nAmazon will check the hardware.\n\n188\n00:09:31.210 --> 00:09:33.290\nThey'll check to make sure the underlying\ninfrastructure is working, but\n\n189\n00:09:33.290 --> 00:09:36.130\nif you're having a problem with the OS,\nthat's your problem, not theirs, right?\n\n190\n00:09:36.130 --> 00:09:36.930\n&gt;&gt; It's all on you.\n\n191\n00:09:36.930 --> 00:09:41.510\n&gt;&gt; They don't support the OSs, but\nif I have something go wrong and I've\n\n192\n00:09:41.510 --> 00:09:45.570\ngot Ubuntu support or Red Hat support,\nI can call them, and they'll help me.\n\n193\n00:09:45.570 --> 00:09:49.580\nBut now that I'm in, I can work,\nand again, if I do a who am I?\n\n194\n00:09:49.580 --> 00:09:51.810\nI see that I'm logged in as Ubuntu.\n\n195\n00:09:51.810 --> 00:09:53.832\nIf I do a sudo, who am I?\n\n196\n00:09:53.832 --> 00:09:56.489\nI'm in the sudoer's file,\nit doesn't require a password,\n\n197\n00:09:56.489 --> 00:09:57.930\nI can now execute things as root.\n\n198\n00:09:57.930 --> 00:10:01.640\nIt's just a different user name,\nso be aware that sometimes,\n\n199\n00:10:01.640 --> 00:10:03.790\nespecially when you're\ndealing with custom images,\n\n200\n00:10:03.790 --> 00:10:07.580\nlike the ones in the Amazon Marketplace,\nthey may have changed that default user.\n\n201\n00:10:07.580 --> 00:10:09.480\nSo, the process of logging in is the same,\n\n202\n00:10:09.480 --> 00:10:13.860\nbut the default user account might be\ndifferent, so just be aware of that.\n\n203\n00:10:13.860 --> 00:10:16.310\n&gt;&gt; Don,\ncan we add additional user accounts?\n\n204\n00:10:16.310 --> 00:10:17.070\n&gt;&gt; Yeah, you know what.\n\n205\n00:10:17.070 --> 00:10:19.210\nOnce you're in,\nyou can do whatever you want.\n\n206\n00:10:19.210 --> 00:10:21.460\nMaybe a hate certificate authentication.\n\n207\n00:10:21.460 --> 00:10:22.470\nFine, you can go and\n\n208\n00:10:22.470 --> 00:10:25.850\nturn password authentication back on and\nyou just start to use that, if you want.\n\n209\n00:10:25.850 --> 00:10:28.040\nCertificates are better, so\nyou typically wanna stay with that.\n\n210\n00:10:28.040 --> 00:10:30.560\nIf you wanna create more user\naccounts set, that's easy enough.\n\n211\n00:10:30.560 --> 00:10:31.088\nRight.\n\n212\n00:10:31.088 --> 00:10:33.550\nIt's just a regular install.\n\n213\n00:10:33.550 --> 00:10:35.940\nSo here's my Red Hat box again and\n\n214\n00:10:35.940 --> 00:10:40.030\nI can say I wanna add a user\ncalled dpezet, right?\n\n215\n00:10:40.030 --> 00:10:44.040\nOops, I gotta sudo that, so\nI'll sudo adding user dpezet.\n\n216\n00:10:44.040 --> 00:10:48.360\nAnd I might wanna set a password for\nthe dpezet account.\n\n217\n00:10:48.360 --> 00:10:50.830\nSo I can come in and\nI can set that password.\n\n218\n00:10:50.830 --> 00:10:52.940\nAnd I'll pick a weak password so\nit will be mad at me.\n\n219\n00:10:52.940 --> 00:10:54.340\nBut I'll do it, right?\n\n220\n00:10:54.340 --> 00:10:57.370\nAnd then I can go and\nI can edit SSH's configuration.\n\n221\n00:10:57.370 --> 00:10:59.440\nAnd enable password authentication again.\n\n222\n00:10:59.440 --> 00:11:03.910\nOr better, I could go and generate a\ncertificate for the dpezet account, right.\n\n223\n00:11:03.910 --> 00:11:06.610\nAll I got to do is place it\ninside the .SSH folder inside of\n\n224\n00:11:06.610 --> 00:11:08.160\ndpezet's home folder, and\n\n225\n00:11:08.160 --> 00:11:10.460\nnow they can use certificate-based\nauthentication to get in.\n\n226\n00:11:10.460 --> 00:11:12.540\nThat's all part of SSH's\nstandard configuration.\n\n227\n00:11:12.540 --> 00:11:15.570\nIf you go back and watch any of\nour SSH shows where we cover that,\n\n228\n00:11:15.570 --> 00:11:17.450\nit's the same process here in the cloud.\n\n229\n00:11:17.450 --> 00:11:21.160\nBut I can add those user accounts,\nget it set up the way that I want and\n\n230\n00:11:21.160 --> 00:11:22.230\ncontinue to work with it.\n\n231\n00:11:22.230 --> 00:11:24.070\nThis default account is exactly that.\n\n232\n00:11:24.070 --> 00:11:25.760\nIt's just for me to get started.\n\n233\n00:11:25.760 --> 00:11:28.240\nI could go in and\ncreate all my other stuff and\n\n234\n00:11:28.240 --> 00:11:30.620\nthen remove this account\nif I don't need it anymore.\n\n235\n00:11:30.620 --> 00:11:35.840\nNow, there are some special monitoring\nservices inside of AWS like CloudWatch,\n\n236\n00:11:35.840 --> 00:11:39.170\nwhere it leverages this default\naccount to manage the server.\n\n237\n00:11:39.170 --> 00:11:41.650\nAnd so if I remove it,\nit can break some of that.\n\n238\n00:11:41.650 --> 00:11:43.950\nBut if I don't care about that,\nif I'm gonna set up my own monitoring.\n\n239\n00:11:43.950 --> 00:11:46.670\nIf I want this to be my own machine,\nthen I've got full access.\n\n240\n00:11:46.670 --> 00:11:49.290\nYou can do whatever you want\ninside of that guest OS.\n\n241\n00:11:49.290 --> 00:11:52.540\nAs far as creating users, customizing it,\n\n242\n00:11:52.540 --> 00:11:55.360\nand doing all of that just like\nyou would a normal system.\n\n243\n00:11:55.360 --> 00:11:57.170\n&gt;&gt; Don,\nI think you've touched on this already.\n\n244\n00:11:57.170 --> 00:11:59.530\nDoes Amazon automatically\nupdate our servers?\n\n245\n00:11:59.530 --> 00:12:01.160\nAnd if so, how often do they do that?\n\n246\n00:12:02.430 --> 00:12:05.148\n&gt;&gt; So in the last episode,\nI talked a little bit about updates.\n\n247\n00:12:05.148 --> 00:12:06.279\n&gt;&gt; Yeah, you touched on that.\n\n248\n00:12:06.279 --> 00:12:10.419\n&gt;&gt; I said when\nRed Hat Enterprise Linux 7.4 came out,\n\n249\n00:12:10.419 --> 00:12:14.928\nAmazon, that same day,\nalready had an AMI up for 7.4.\n\n250\n00:12:14.928 --> 00:12:19.120\nSo when I roll out a new instance,\nit's got the latest and greatest, right?\n\n251\n00:12:19.120 --> 00:12:22.917\nBut let's say that I've\ngot this instance up, and\n\n252\n00:12:22.917 --> 00:12:27.257\nif I run hostNameCTL,\nI can see that I'm running 7.4.\n\n253\n00:12:27.257 --> 00:12:30.890\nAnd let's say that 7.5 came out, okay?\n\n254\n00:12:30.890 --> 00:12:35.480\nAmazon does not upgrade\nyour running instances.\n\n255\n00:12:35.480 --> 00:12:40.140\nThey'll put out a new AMI for 7.5,\nand if I roll out new instances,\n\n256\n00:12:40.140 --> 00:12:43.440\nI can use the 7.5 AMI and\nnow they're running 7.5.\n\n257\n00:12:43.440 --> 00:12:44.910\nBut you're running instances,\n\n258\n00:12:44.910 --> 00:12:48.520\nthe moment you start them,\nit becomes your problem, right?\n\n259\n00:12:48.520 --> 00:12:53.310\nAmazon gives you the infrastructure,\nthey don't support the OS, so\n\n260\n00:12:53.310 --> 00:12:57.100\nall maintenance to the OS,\nall updates to the OS, that's up to you.\n\n261\n00:12:57.100 --> 00:13:02.000\nSo once you deploy it,\nthat AMI may not be that recent.\n\n262\n00:13:02.000 --> 00:13:05.600\nIt may be months old or longer, right?\n\n263\n00:13:05.600 --> 00:13:07.910\nAnd if that's the case,\nthe moment you fire this thing up,\n\n264\n00:13:07.910 --> 00:13:09.370\nthe first thing you need to do is update.\n\n265\n00:13:09.370 --> 00:13:12.650\nAnd then periodically you need\nto continue doing updates.\n\n266\n00:13:12.650 --> 00:13:14.990\nBut when I spun this up,\nif I poke around a little more,\n\n267\n00:13:14.990 --> 00:13:18.780\nthere's actually a few neat little\ndeployment images you can find.\n\n268\n00:13:19.950 --> 00:13:24.170\nSome of these, if you look at\nthe main ones here in Quick Access,\n\n269\n00:13:24.170 --> 00:13:26.390\nthese things aren't updated\nall that frequently.\n\n270\n00:13:26.390 --> 00:13:28.560\nIt's just whenever a major\nversion comes out.\n\n271\n00:13:28.560 --> 00:13:31.230\nBut minor updates come out all the time.\n\n272\n00:13:31.230 --> 00:13:33.380\nAnd I know there's a Red Hat one.\n\n273\n00:13:33.380 --> 00:13:36.670\nLet me look and see if I can find it.\n\n274\n00:13:36.670 --> 00:13:40.490\nThere's a Red Hat one that's\nkinda special that is, actually,\n\n275\n00:13:40.490 --> 00:13:42.100\nit might be under community AMIs.\n\n276\n00:13:42.100 --> 00:13:45.210\nLet's see if we can find it here on AGL.\n\n277\n00:13:45.210 --> 00:13:46.780\nAnd I'm looking for a particular one.\n\n278\n00:13:46.780 --> 00:13:47.360\nRight here.\n\n279\n00:13:47.360 --> 00:13:48.640\nThis first one.\n\n280\n00:13:48.640 --> 00:13:50.955\nIf you look at the name of this one,\nall right?\n\n281\n00:13:50.955 --> 00:13:53.730\nRHEL-7.4_HVM is a hardware\nvirtual machine.\n\n282\n00:13:53.730 --> 00:13:55.900\nSo this is kinda like what I'm running.\n\n283\n00:13:55.900 --> 00:14:00.474\nBut over here it says 2-Hourly2-GP2.\n\n284\n00:14:00.474 --> 00:14:02.308\nOkay, what does that mean?\n\n285\n00:14:02.308 --> 00:14:04.810\nHourly2, okay?\n\n286\n00:14:04.810 --> 00:14:08.630\nThis one is being updated hourly.\n\n287\n00:14:08.630 --> 00:14:11.280\nThey're constantly pushing\nout updates to this thing.\n\n288\n00:14:11.280 --> 00:14:13.600\nSo, I know that I get the latest one.\n\n289\n00:14:13.600 --> 00:14:16.370\nNow, I might not want that because\nI need to test my updates,\n\n290\n00:14:16.370 --> 00:14:20.210\nI need to make sure that I'm running\nsomething that's stable in my environment.\n\n291\n00:14:20.210 --> 00:14:22.400\nSo really, the update's left up to me.\n\n292\n00:14:22.400 --> 00:14:23.550\nAs soon as I deploy it,\n\n293\n00:14:23.550 --> 00:14:27.730\neven if I use an hourly image, as soon as\nthat's deployed that hourly stuff is gone.\n\n294\n00:14:27.730 --> 00:14:30.610\nNow, it's up to me to do the updates.\n\n295\n00:14:31.750 --> 00:14:37.237\nFortunately, it is controlled just like\nany other system, that once I'm in here\n\n296\n00:14:37.237 --> 00:14:42.340\nI can do a sudo yum update, and it's\ngonna reach out and it's gonna update.\n\n297\n00:14:42.340 --> 00:14:44.800\nAnd look who it's reaching out to?\n\n298\n00:14:44.800 --> 00:14:46.950\nIt's reaching out to Red Hat servers.\n\n299\n00:14:46.950 --> 00:14:51.930\nIt's reaching out to their distros, the\nrepos because it's their operating system.\n\n300\n00:14:51.930 --> 00:14:53.750\nAnd so there is found some updates.\n\n301\n00:14:53.750 --> 00:14:55.280\nThere's a kernel update, that's a big one.\n\n302\n00:14:56.880 --> 00:14:58.140\nSo we can go and deploy that.\n\n303\n00:14:58.140 --> 00:14:59.740\nAnd it's going to put them in Ubuntu.\n\n304\n00:14:59.740 --> 00:15:05.840\nI can do the same thing, right,\nUbuntu it's sudo apt update.\n\n305\n00:15:05.840 --> 00:15:06.870\nI can run that.\n\n306\n00:15:06.870 --> 00:15:09.550\nAnd oops, I got to spell sudo, right?\n\n307\n00:15:09.550 --> 00:15:13.470\nSo, sudo apt update, it checks for\nthe updates, and as soon as it\n\n308\n00:15:13.470 --> 00:15:16.060\nfinds them that it got used to a second\ncommand to actually apply them.\n\n309\n00:15:16.060 --> 00:15:18.230\nWe'll do a sudo apt upgrade.\n\n310\n00:15:18.230 --> 00:15:19.320\nThere we go.\n\n311\n00:15:19.320 --> 00:15:22.700\nSo there was update, it found the new\npackages, I'll do an upgrade, and\n\n312\n00:15:22.700 --> 00:15:24.960\nhere it is,\nactually upgrading 30 packages.\n\n313\n00:15:24.960 --> 00:15:26.320\nAnd so it's applying them, right.\n\n314\n00:15:26.320 --> 00:15:26.940\n&gt;&gt; Fantastic.\n\n315\n00:15:26.940 --> 00:15:29.350\n&gt;&gt; It's up to me to do it though,\nand I'll tell you,\n\n316\n00:15:29.350 --> 00:15:33.660\nwhen they're minor updates like this,\nyou can just use your typical utility.\n\n317\n00:15:33.660 --> 00:15:36.640\nYou can set up Cron Jobs to do it, or\nif you're actually testing your updates,\n\n318\n00:15:36.640 --> 00:15:37.780\nthen you'll do it this way.\n\n319\n00:15:37.780 --> 00:15:41.760\nBut, when they're major upgrades, I never\ndo a major upgrade this way, right?\n\n320\n00:15:41.760 --> 00:15:44.490\nEven Red Hat where the major\nupgrade's usually pretty easy,\n\n321\n00:15:45.610 --> 00:15:46.270\nI don't do it this way.\n\n322\n00:15:46.270 --> 00:15:48.480\nInstead it's easier to just\nspin up a new instance.\n\n323\n00:15:48.480 --> 00:15:49.604\nAnd say, all right, I'm running 7.4 now.\n\n324\n00:15:49.604 --> 00:15:53.120\n7.5 came out.\nSo let me just spin up a 7.5 instance.\n\n325\n00:15:53.120 --> 00:15:56.101\nAnd then I can transfer my\ndata over to it easy enough,\n\n326\n00:15:56.101 --> 00:16:00.273\nit just depends on how you want to do\nthat, but updates are really up to you,\n\n327\n00:16:00.273 --> 00:16:02.925\nyou're responsible for them, not Amazon.\n\n328\n00:16:02.925 --> 00:16:04.497\n&gt;&gt; Okay, what about backups zone?\n\n329\n00:16:04.497 --> 00:16:05.468\nDo we backup our own servers?\n\n330\n00:16:05.468 --> 00:16:09.166\n&gt;&gt; Okay, backups,\nAmazon sort of does backups for us,\n\n331\n00:16:09.166 --> 00:16:14.673\nin that they guarantee if the hard drives\nthat are supporting your system fail,\n\n332\n00:16:14.673 --> 00:16:19.113\nthat they have another copy of your\nsystem that will take over and\n\n333\n00:16:19.113 --> 00:16:22.930\nyou'll survive that hard drive failure,\nokay?\n\n334\n00:16:22.930 --> 00:16:26.820\nSo from that perspective,\nwe don't need backups, right?\n\n335\n00:16:26.820 --> 00:16:31.260\nBut Amazon is guaranteeing\nthe current state of your machine.\n\n336\n00:16:32.320 --> 00:16:35.050\n&gt;&gt; What if I deleted a file four days ago?\n\n337\n00:16:35.050 --> 00:16:36.580\nWell, it's gone.\n\n338\n00:16:36.580 --> 00:16:37.790\nIt's just deleted.\n\n339\n00:16:37.790 --> 00:16:41.010\nAmazon's giving me a current backup,\nwhich means how my server looks right now,\n\n340\n00:16:41.010 --> 00:16:46.150\nwith that file deleted, so\nit's not a true substitute for backups.\n\n341\n00:16:46.150 --> 00:16:48.630\nWell they do guarantee the integrity\nof your server right now,\n\n342\n00:16:48.630 --> 00:16:51.870\nif you think you're gonna\nget any historical data\n\n343\n00:16:51.870 --> 00:16:55.010\nyou're going to need to set up a back\nup system of some sort, right.\n\n344\n00:16:55.010 --> 00:16:57.820\nAnd it's really no different\nthan backing up a local server.\n\n345\n00:16:57.820 --> 00:17:00.940\nExcept, we do actually\nhave one neat feature.\n\n346\n00:17:00.940 --> 00:17:04.010\nWhen I created this server\nI created the data disk and\n\n347\n00:17:04.010 --> 00:17:06.210\nthe data disk is where\nI would put my data.\n\n348\n00:17:06.210 --> 00:17:11.370\nActually, I never set it up but\neither it was a /dev/SDB,\n\n349\n00:17:11.370 --> 00:17:17.050\nand so if I were to get in here in\nfdisk/dev/SDB, I could go in and.\n\n350\n00:17:17.050 --> 00:17:19.540\nI thought I did maybe\nit's not SDB [LAUGH].\n\n351\n00:17:19.540 --> 00:17:24.170\nSo I need to take a look at my /step and\nfigure out what the heck it's called.\n\n352\n00:17:24.170 --> 00:17:27.130\nI could format the disk, mount it,\nstart putting my data there.\n\n353\n00:17:27.130 --> 00:17:32.050\nWhen you create that it's being put on\nwhats called elastic block storage or EBS.\n\n354\n00:17:32.050 --> 00:17:36.730\nAn EBS storage is replicated across a\ncouple of storage units inside of Amazon.\n\n355\n00:17:36.730 --> 00:17:38.310\nIn fact, there's three copies.\n\n356\n00:17:38.310 --> 00:17:42.540\nThere's the live copy on the server\nyou're using, there's a second copy in\n\n357\n00:17:42.540 --> 00:17:47.670\nthe same data center and then there's a\nthird copy stored in another data center.\n\n358\n00:17:47.670 --> 00:17:49.990\nThat's how amazon guarantees\nthat data will be protected, but\n\n359\n00:17:49.990 --> 00:17:51.480\nit's all the current data.\n\n360\n00:17:51.480 --> 00:17:55.400\nThey don't maintain historical data So\nif I wanna maintain historical data, and\n\n361\n00:17:55.400 --> 00:18:01.650\nI've got this volume setup, what I can do\nis I can go in, I can find my instance.\n\n362\n00:18:01.650 --> 00:18:05.920\nLet me cancel out of this, and\ngo back to my instance list.\n\n363\n00:18:05.920 --> 00:18:08.360\nI can take, like a Red Hat server, right,\n\n364\n00:18:08.360 --> 00:18:11.880\nand it's going to have\nvolumes attached to it.\n\n365\n00:18:11.880 --> 00:18:15.130\nAnd I can take a snapshot\nof those volumes.\n\n366\n00:18:15.130 --> 00:18:19.210\nAnd I can take a snapshot once a day or\nonce a hour, once a week and\n\n367\n00:18:19.210 --> 00:18:22.950\nit'll take an image of that\nvolume like it is right now.\n\n368\n00:18:22.950 --> 00:18:26.520\nIt's like an instantaneous back up and\nnow I've got it available.\n\n369\n00:18:26.520 --> 00:18:29.810\nSo I could pick an instance like this and\nI could go to Actions.\n\n370\n00:18:29.810 --> 00:18:33.290\nAnd under Actions,\nyou'll see where we've got,\n\n371\n00:18:33.290 --> 00:18:37.440\nlet's see it is buried in here somewhere,\nwe will find it.\n\n372\n00:18:37.440 --> 00:18:40.203\nActually is it not in here,\nam I lying to you?\n\n373\n00:18:40.203 --> 00:18:43.880\nWe've got [LAUGH] I could have\nswore it was right in here.\n\n374\n00:18:43.880 --> 00:18:46.580\nI don't normally come this way, cuz I\nnormally back up the individual instances.\n\n375\n00:18:46.580 --> 00:18:51.080\nBut I thought you could back up the whole\nInstance, but I don't see that option.\n\n376\n00:18:51.080 --> 00:18:52.660\nAll right well,\napparently you can't do it this way.\n\n377\n00:18:52.660 --> 00:18:55.400\nSo, normally what I do is I\nback up the individual volumes,\n\n378\n00:18:55.400 --> 00:18:58.170\nbecause I don't care about\nthe instance itself, right?\n\n379\n00:18:58.170 --> 00:19:00.620\nThe AMI,\nI got that from Amazon anyway, right?\n\n380\n00:19:00.620 --> 00:19:01.940\nI can deploy that in a heartbeat.\n\n381\n00:19:01.940 --> 00:19:03.230\nI don't need a backup of the AMI.\n\n382\n00:19:03.230 --> 00:19:05.300\nI need a backup of my data.\n\n383\n00:19:05.300 --> 00:19:07.020\nSo I usually back up\nthe individual volume,\n\n384\n00:19:07.020 --> 00:19:10.225\nbut there used to be an option,\nI know it used to be here.\n\n385\n00:19:10.225 --> 00:19:13.300\nThat you could choose an instance,\ngo to action, and you could come in and\n\n386\n00:19:13.300 --> 00:19:17.160\nchoose to take a snapshot of it,\nbut apparently they moved that off.\n\n387\n00:19:17.160 --> 00:19:20.270\nBut to do it with the individual volume\nway, the way that I like anyway,\n\n388\n00:19:20.270 --> 00:19:24.590\non the left side if you scroll down,\nyou'll find Volumes.\n\n389\n00:19:24.590 --> 00:19:27.940\nAnd right here you can see all\nthe volumes attached to your system.\n\n390\n00:19:27.940 --> 00:19:31.560\nAnd I can see the ten gig volume\nattached to my red hat server,\n\n391\n00:19:31.560 --> 00:19:33.960\nwhich is the one\nthe operating system is on.\n\n392\n00:19:33.960 --> 00:19:38.580\nAnd then I can see the 64 gig volume\nthat I added as my data disk.\n\n393\n00:19:38.580 --> 00:19:40.670\nSo there's my data disk and\n\n394\n00:19:40.670 --> 00:19:45.520\nI can go to Actions, and\nfrom here I can create a snapshot.\n\n395\n00:19:45.520 --> 00:19:48.320\nAnd a snapshot is an instantaneous backup.\n\n396\n00:19:48.320 --> 00:19:48.960\nI can give it a name.\n\n397\n00:19:48.960 --> 00:19:50.535\nI can call it back up dash.\n\n398\n00:19:50.535 --> 00:19:51.367\nWhat is today?\n\n399\n00:19:51.367 --> 00:19:56.890\nIt's 08-24-2017 or however it is\nthat I wanted to name this thing.\n\n400\n00:19:56.890 --> 00:19:59.800\nI can give it a description and\nI can create it.\n\n401\n00:19:59.800 --> 00:20:03.164\nAnd it takes a snapshot, so\nthe snapshot creation is started, and so\n\n402\n00:20:03.164 --> 00:20:05.210\nit's snapshotting that disk.\n\n403\n00:20:05.210 --> 00:20:09.460\nEverything that is on it, at its current\nstate, it's placed in a snapshot.\n\n404\n00:20:09.460 --> 00:20:12.190\nAnd then the volume continues to go on and\nchange like normal.\n\n405\n00:20:12.190 --> 00:20:15.530\nAnd at any time, I can go into\nSnapshots here on the left side,\n\n406\n00:20:15.530 --> 00:20:17.350\nand I'll see that snapshot.\n\n407\n00:20:17.350 --> 00:20:19.000\nAnd I can restore it, right?\n\n408\n00:20:19.000 --> 00:20:20.550\nAll I have to do is\ndetach the current drive,\n\n409\n00:20:20.550 --> 00:20:22.790\nand attach this snapshot,\nand I'm in business.\n\n410\n00:20:22.790 --> 00:20:25.610\nOr I can attach this snapshot\nto other servers somewhere else.\n\n411\n00:20:25.610 --> 00:20:30.480\nAnd I can keep taking snapshots and\nthis becomes my backup system, all right?\n\n412\n00:20:30.480 --> 00:20:34.305\nNo tape rotation, no worrying about\nreplication, I just take these snapshots,\n\n413\n00:20:34.305 --> 00:20:37.140\nand they get dumped in here,\nand I pay for storage.\n\n414\n00:20:37.140 --> 00:20:38.055\nRight?\nEvery snapshot is\n\n415\n00:20:38.055 --> 00:20:39.335\ngonna cost me a little bit of money,\n\n416\n00:20:39.335 --> 00:20:43.755\nbut we're talking about ten cents per gig\nper month, less, depending on your volume.\n\n417\n00:20:43.755 --> 00:20:47.535\nSo it's not a lot of money to keep these\nbackups and now I've got that solution.\n\n418\n00:20:47.535 --> 00:20:50.975\nBut I just need to create a policy,\na procedure to follow, that says,\n\n419\n00:20:50.975 --> 00:20:55.115\nhere's how frequently I backup this data,\nand then I've got it right here.\n\n420\n00:20:55.115 --> 00:20:56.575\n&gt;&gt; Awesome, awesome.\n\n421\n00:20:56.575 --> 00:20:58.245\nI really have enjoyed this.\n\n422\n00:20:58.245 --> 00:21:00.635\nI never knew Amazon had so\nmuch to offer and, John,\n\n423\n00:21:00.635 --> 00:21:01.905\nI knew that you had a lot to offer.\n\n424\n00:21:01.905 --> 00:21:02.910\nYou always do.\n\n425\n00:21:02.910 --> 00:21:05.360\nCreating an EC2 instance part two.\n\n426\n00:21:05.360 --> 00:21:07.190\nDon, anything else you'd like to add?\n\n427\n00:21:07.190 --> 00:21:09.590\n&gt;&gt; Well, once you've spun up that\nLinux instance inside of EC2,\n\n428\n00:21:09.590 --> 00:21:12.310\nit really is just like\nmanaging any other server.\n\n429\n00:21:12.310 --> 00:21:15.820\nThere are some more advanced things\nthat I'll cover in some future episodes,\n\n430\n00:21:15.820 --> 00:21:18.320\nlike the networking I didn't get to,\nor the firewalls.\n\n431\n00:21:18.320 --> 00:21:20.451\nSo we'll do a little\nbit of security stuff.\n\n432\n00:21:20.451 --> 00:21:22.880\nBut if you're ever intimidated by this,\ndon't be.\n\n433\n00:21:22.880 --> 00:21:25.900\nYou can drop and Instance right in\nthere and have it up and running and\n\n434\n00:21:25.900 --> 00:21:27.370\nyou'll be working just\nlike any other server.\n\n435\n00:21:27.370 --> 00:21:31.220\nIt really runs great on top of Amazon's\ninfrastructure which is top notch.\n\n436\n00:21:31.220 --> 00:21:33.910\nSo, definitely something\nworth checking out.\n\n437\n00:21:33.910 --> 00:21:35.070\n&gt;&gt; I do love my job.\n\n438\n00:21:35.070 --> 00:21:41.650\nAnd, listen folks, there is a lot of\nepisodes in the Linux in the Cloud series.\n\n439\n00:21:41.650 --> 00:21:43.350\nSo make sure you watch each and\nevery one of them.\n\n440\n00:21:43.350 --> 00:21:44.070\nYou'll be glad you did.\n\n441\n00:21:44.070 --> 00:21:45.380\nDon does a marvelous job.\n\n442\n00:21:45.380 --> 00:21:47.250\nAnd thank you for watching ITProTV.\n\n443\n00:21:47.250 --> 00:21:50.860\nRemember, a good IT pro\nis always learning.\n\n444\n00:21:50.860 --> 00:21:51.750\nI'm Zach Memos.\n\n445\n00:21:51.750 --> 00:21:52.710\n&gt;&gt; And I'm Don Pezet.\n\n446\n00:21:52.710 --> 00:21:55.887\n&gt;&gt; And we will see you again very soon.\n\n447\n00:21:55.887 --> 00:22:01.792\n[MUSIC]\n\n448\n00:22:01.792 --> 00:22:04.788\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "231079480"
        },
        {
          "description": "Don and Zach cover one of the first things you configure on an instance, if are there any security options to worry about, security groups, and what we do if we don't want to expose the instance to the internet.",
          "length": "1740",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-2-2-configuring_an_ec2_instance-082517-PGM.00_28_43_16.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-2-2-configuring_an_ec2_instance-082517-PGM.00_28_43_16.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-2-2-configuring_an_ec2_instance-082517-PGM.00_28_43_16.Still001-sm.jpg",
          "title": "Configuring an EC2 Instance",
          "transcript": "WEBVTT\n\n1\n00:00:00.230 --> 00:00:02.058\nWelcome to IT Pro TV,\nI'm your host Don Pezet.\n\n2\n00:00:02.058 --> 00:00:05.862\n[CROSSTALK]\n\n3\n00:00:05.862 --> 00:00:08.454\n[MUSIC]\n\n4\n00:00:08.454 --> 00:00:11.745\n&gt;&gt; You're watching IT Pro TV.\n\n5\n00:00:11.745 --> 00:00:14.337\n&gt;&gt; Hello, and thank you for\nchoosing IT Pro TV,\n\n6\n00:00:14.337 --> 00:00:16.530\nhelping you learn everywhere you go.\n\n7\n00:00:16.530 --> 00:00:19.590\nI'm your host, Zach Memos,\nas we continue with Linux in the Clouds.\n\n8\n00:00:19.590 --> 00:00:23.810\nAnd we're gonna be\nconfiguring an EC2 instance.\n\n9\n00:00:23.810 --> 00:00:24.935\nI'm not sure what it means.\n\n10\n00:00:24.935 --> 00:00:27.830\n[LAUGH] I have a pretty good idea.\n\n11\n00:00:27.830 --> 00:00:30.890\nBut Don Pezet's gonna tell us everything\nabout it because he is the expert.\n\n12\n00:00:30.890 --> 00:00:32.150\nDon, thanks for joining us.\n\n13\n00:00:32.150 --> 00:00:33.120\n&gt;&gt; Hey, no problem Zach.\n\n14\n00:00:33.120 --> 00:00:35.220\nI'm ready to dive in and\nwork on these EC2 instances.\n\n15\n00:00:35.220 --> 00:00:38.950\nAnd you know Zach you mentioned, like I\ndon't know what to do to configure it and\n\n16\n00:00:38.950 --> 00:00:40.050\nin a way you're kinda right.\n\n17\n00:00:40.050 --> 00:00:43.090\nIn the last episode,\nwe spun up an EC2 instance.\n\n18\n00:00:43.090 --> 00:00:44.900\nWe got it deployed,\nit's up and it's running.\n\n19\n00:00:44.900 --> 00:00:47.810\nWhat do we really need to\nconfigure at this point?\n\n20\n00:00:47.810 --> 00:00:50.540\nIt's just another LINUX server, why\ndon't we treat it like everything else?\n\n21\n00:00:50.540 --> 00:00:51.050\n&gt;&gt; Correct.\n\n22\n00:00:51.050 --> 00:00:52.630\n&gt;&gt; And the short answer is, no.\n\n23\n00:00:52.630 --> 00:00:53.755\nNo, that's not true.\n\n24\n00:00:53.755 --> 00:00:56.220\n[LAUGH]\n&gt;&gt; Options, options, options.\n\n25\n00:00:56.220 --> 00:00:57.620\n&gt;&gt; There are some things\nwe need to configure.\n\n26\n00:00:57.620 --> 00:01:00.150\nSome things that are AWS specific.\n\n27\n00:01:00.150 --> 00:01:03.330\nThings that affect our instances when\nthey're running in Amazon Web Services.\n\n28\n00:01:03.330 --> 00:01:06.240\nThat we don't have to deal with\nnecessarily in other environments or\n\n29\n00:01:06.240 --> 00:01:08.390\nthat we deal with in a different\nway in in other environments.\n\n30\n00:01:08.390 --> 00:01:10.500\nSo those are the things that we're\ngonna take a look at right here.\n\n31\n00:01:10.500 --> 00:01:13.530\nI wanna walk you through kinda\nmy best practices of when\n\n32\n00:01:13.530 --> 00:01:17.770\nI deploy a Linux server inside of EC2,\nhere's the things that I go through and\n\n33\n00:01:17.770 --> 00:01:21.230\nstart to get set up and configured\nas just a general rule of practice.\n\n34\n00:01:21.230 --> 00:01:24.660\nBut it is different than when you've\ngot an on premises installation.\n\n35\n00:01:24.660 --> 00:01:27.830\n&gt;&gt; So Don what is one of the things\nthat you configure on an instance?\n\n36\n00:01:27.830 --> 00:01:31.190\n&gt;&gt; The first thing that I do\nis deal with the IP address,\n\n37\n00:01:31.190 --> 00:01:32.630\nvery much like when I deploy locally.\n\n38\n00:01:32.630 --> 00:01:36.880\nWhen you deploy a local server,\nit probably defaulted to DHCP.\n\n39\n00:01:36.880 --> 00:01:40.800\nAnd during the install, you could override\nthat and set a static IP, but when I\n\n40\n00:01:40.800 --> 00:01:45.150\ninstall the instance in EC2 it never\nasked me about an IP address, did it?\n\n41\n00:01:45.150 --> 00:01:48.280\nThe closest it got is\nit asked me what VPC or\n\n42\n00:01:48.280 --> 00:01:50.990\nvirtual private cloud to put it\nin which determines a subnet.\n\n43\n00:01:50.990 --> 00:01:52.365\nAnd that's all for private IP's.\n\n44\n00:01:52.365 --> 00:01:55.038\nBut as soon as the server came up,\n\n45\n00:01:55.038 --> 00:01:59.820\nAmazon gave it just a public IP\nthat was yanked out of a pool.\n\n46\n00:02:01.270 --> 00:02:04.527\nAnd those addresses are available\nto any Amazon customer, so\n\n47\n00:02:04.527 --> 00:02:08.730\nI got it if you were watching that show,\nwe actually filmed that one yesterday.\n\n48\n00:02:08.730 --> 00:02:10.366\nSo if you were watching\nthat film yesterday,\n\n49\n00:02:10.366 --> 00:02:11.980\nI grabbed that IP out of the pool.\n\n50\n00:02:11.980 --> 00:02:13.970\nWell, what about two days ago?\n\n51\n00:02:13.970 --> 00:02:16.040\nTwo days ago, I didn't have that IP.\n\n52\n00:02:16.040 --> 00:02:18.810\nSome other Amazon customer probably did,\nand\n\n53\n00:02:18.810 --> 00:02:21.620\nfew days before that maybe another one,\nand a few days before that maybe another.\n\n54\n00:02:21.620 --> 00:02:23.930\nThat IP could have been used by\nhundreds of different people.\n\n55\n00:02:23.930 --> 00:02:25.180\nI'm just the person who has it right now.\n\n56\n00:02:26.530 --> 00:02:30.870\nWell, when you delete an instance,\nthat IP gets given back.\n\n57\n00:02:30.870 --> 00:02:33.660\nIt is given back to the pool,\nand somebody else can get it.\n\n58\n00:02:33.660 --> 00:02:38.510\nBut what a lot of people don't realize\nis that if you shut your instance down,\n\n59\n00:02:38.510 --> 00:02:40.620\nyou give the IP back, as well.\n\n60\n00:02:40.620 --> 00:02:45.580\nThat IP is only yours while\nthe instance is running.\n\n61\n00:02:45.580 --> 00:02:47.980\nNow that may not be a big deal to you.\n\n62\n00:02:47.980 --> 00:02:50.530\nIf you just temporarily need a machine,\nyou fire it up and you use it,\n\n63\n00:02:50.530 --> 00:02:51.400\nyou don't care.\n\n64\n00:02:51.400 --> 00:02:55.122\nBut this is going to be the web\nserver of your company or\n\n65\n00:02:55.122 --> 00:03:00.498\nsome kind of directory or a DNS server you\nneed to have the same IP all the time,\n\n66\n00:03:00.498 --> 00:03:04.837\nespecially if you're creating\nDNS records that point to it.\n\n67\n00:03:04.837 --> 00:03:07.064\nWhen I created it, let's pull it up, so\n\n68\n00:03:07.064 --> 00:03:11.920\nI've got my lab-rhel01 that was the first\ninstance I fired up in yesterday's show.\n\n69\n00:03:13.010 --> 00:03:16.280\nDown at the bottom of the screen,\nhidden away, not really hidden away,\n\n70\n00:03:16.280 --> 00:03:17.075\njust under my big head.\n\n71\n00:03:17.075 --> 00:03:20.015\n&gt;&gt; [LAUGH]\n&gt;&gt; We can see that it's got a public IP\n\n72\n00:03:20.015 --> 00:03:20.814\naddress.\n\n73\n00:03:20.814 --> 00:03:21.859\nIt's also got a private IP address.\n\n74\n00:03:21.859 --> 00:03:26.166\nThis private IP 172.31.20.89.\n\n75\n00:03:26.166 --> 00:03:28.605\nThat came from my virtual private cloud.\n\n76\n00:03:28.605 --> 00:03:31.455\nThat's used internally by my instances.\n\n77\n00:03:31.455 --> 00:03:33.755\nAnd my system will keep that address.\n\n78\n00:03:33.755 --> 00:03:38.025\nIt's a fake address anyway, so Amazon's\nnot really worried about wasting those.\n\n79\n00:03:38.025 --> 00:03:40.035\nThat one's tied to me and\nI'll keep that one.\n\n80\n00:03:40.035 --> 00:03:45.325\nBut this public IP on the other hand,\nit is just on loan.\n\n81\n00:03:45.325 --> 00:03:46.845\nI've got it temporarily.\n\n82\n00:03:46.845 --> 00:03:48.630\nI've got it right now.\n\n83\n00:03:48.630 --> 00:03:50.390\nAnd if I delete the VM, I give it back.\n\n84\n00:03:50.390 --> 00:03:55.380\nIf I just shut down the VM, if I stop\nthis instance, I give the IP back.\n\n85\n00:03:55.380 --> 00:03:59.010\nAnd when I start the instance again,\nthat IP might change.\n\n86\n00:03:59.010 --> 00:04:00.670\nAnd that can be a real problem for\n\n87\n00:04:00.670 --> 00:04:03.270\nmanagement as well as\nconfiguring things like DNS.\n\n88\n00:04:03.270 --> 00:04:04.450\nI gotta get it pointed.\n\n89\n00:04:04.450 --> 00:04:06.780\nYou'll see there a public\nDNS entry right here.\n\n90\n00:04:06.780 --> 00:04:07.390\nThat is given me.\n\n91\n00:04:07.390 --> 00:04:11.290\nBut even that public DNS\nentry is tied to the IP.\n\n92\n00:04:11.290 --> 00:04:14.665\nYou see the IP written right\nthere in the DNS name?\n\n93\n00:04:14.665 --> 00:04:16.320\n&gt;&gt; Uh-huh\n&gt;&gt; So it's not like I can make a c\n\n94\n00:04:16.320 --> 00:04:18.280\nname in DNS and just point it to this.\n\n95\n00:04:18.280 --> 00:04:21.970\nBecause if the IP changes,\nthis public DNS name changes also.\n\n96\n00:04:21.970 --> 00:04:26.110\nSo one of the first things that I'll do is\nif this is gonna be a permanent instance\n\n97\n00:04:26.110 --> 00:04:31.310\nfor me, one that I'm gonna keep for\na while I'll assign a static address.\n\n98\n00:04:31.310 --> 00:04:36.989\nAnd it's not a traditional static address,\nit's what's called an elastic IP.\n\n99\n00:04:36.989 --> 00:04:40.525\nAn elastic IP, any time in\nAmazon you see the word elastic,\n\n100\n00:04:40.525 --> 00:04:43.110\nlike EBS elastic block storage.\n\n101\n00:04:43.110 --> 00:04:46.570\nThat means that that IP address,\nor that that storage,\n\n102\n00:04:46.570 --> 00:04:50.510\nis actually able to function in more\nthan one of Amazon's data centers.\n\n103\n00:04:50.510 --> 00:04:53.600\nSo if they were to lose an entire\ndata center, you'd be fine.\n\n104\n00:04:53.600 --> 00:04:56.220\nYour IP or your storage would just\njump over to another data center and\n\n105\n00:04:56.220 --> 00:04:58.920\nyou're back up and going,\nyou get that redundancy.\n\n106\n00:04:58.920 --> 00:05:01.020\nElastic technologies are awesome and\n\n107\n00:05:01.020 --> 00:05:04.240\nit's really what makes up that\nkind of core function of AWS.\n\n108\n00:05:04.240 --> 00:05:08.850\nSo I need to give an elastic\nIP to this instance so\n\n109\n00:05:08.850 --> 00:05:13.610\nthat it will always have the same IP,\neven if I shut the machine down.\n\n110\n00:05:13.610 --> 00:05:14.950\nIf I shut the machine down, it keeps it.\n\n111\n00:05:14.950 --> 00:05:15.640\nWhen I power it back it up,\n\n112\n00:05:15.640 --> 00:05:17.760\nit still has the same address cuz\nit's not assigned to the machine.\n\n113\n00:05:17.760 --> 00:05:20.610\nNow, quick word about pricing on this.\n\n114\n00:05:21.640 --> 00:05:23.660\nEvery instance has an IP.\n\n115\n00:05:23.660 --> 00:05:25.510\nAmazon knows that,\nyou're going to have an IP.\n\n116\n00:05:25.510 --> 00:05:27.410\nSo it's free, you get an IP for free.\n\n117\n00:05:27.410 --> 00:05:29.860\nBut when you assign a static IP,\n\n118\n00:05:30.960 --> 00:05:35.300\nas long as your machine is on\nthe static IP is free as well.\n\n119\n00:05:35.300 --> 00:05:37.690\nIt's free cuz Amazon knows\nyou'd be using an IP anyway, so\n\n120\n00:05:37.690 --> 00:05:41.350\nwhat does it matter if it's yours is\nassigned or you keep it forever, whatever?\n\n121\n00:05:41.350 --> 00:05:44.260\nIt doesn't really matter,\ncuz you are going to have an IP.\n\n122\n00:05:44.260 --> 00:05:50.545\nBut if I stop the VM, once I stop it,\nnow I have to pay for that IP.\n\n123\n00:05:50.545 --> 00:05:51.220\n&gt;&gt; Mm-hm.\n\n124\n00:05:51.220 --> 00:05:55.640\n&gt;&gt; Because my instance is not running,\nand I'm holding onto that IP and\n\n125\n00:05:55.640 --> 00:05:56.820\nnot letting anybody else use it.\n\n126\n00:05:56.820 --> 00:05:57.890\nNow I've gotta pay for it.\n\n127\n00:05:57.890 --> 00:06:02.650\nNow it is, I don't remember the exact\nprice, something like 25 cents a day.\n\n128\n00:06:02.650 --> 00:06:04.350\nIt's really, really inexpensive.\n\n129\n00:06:04.350 --> 00:06:06.997\nIt does not cost a lot of\nmoney to hold onto an IP.\n\n130\n00:06:06.997 --> 00:06:09.860\nIt might even be 25 cents a month,\nI can't remember the exact money.\n\n131\n00:06:09.860 --> 00:06:11.807\n&gt;&gt; I don't know,\nthat might break the bank.\n\n132\n00:06:11.807 --> 00:06:15.848\n&gt;&gt; [LAUGH] It's a small number, but\nit's to encourage people not to waste IPs,\n\n133\n00:06:15.848 --> 00:06:17.120\nthat's why they do it.\n\n134\n00:06:17.120 --> 00:06:18.440\nThey're not trying to\nmake money off the IP,\n\n135\n00:06:18.440 --> 00:06:19.955\nthey just don't want people to waste them.\n\n136\n00:06:19.955 --> 00:06:22.095\nAnd if you got an instance that's stopped,\ntechnically,\n\n137\n00:06:22.095 --> 00:06:23.205\nyou don't need that IP anymore.\n\n138\n00:06:23.205 --> 00:06:26.200\nAnd if you do, you should be willing\nto pay a couple of cents for it, right?\n\n139\n00:06:26.200 --> 00:06:26.735\n&gt;&gt; Mm-hm.\n\n140\n00:06:26.735 --> 00:06:30.095\n&gt;&gt; So if I want a static IP,\nwhat I need to do is, on the left side,\n\n141\n00:06:30.095 --> 00:06:34.331\nif I scroll down in here, somewhere,\nthere it is, we'll find Elastic IPs.\n\n142\n00:06:34.331 --> 00:06:39.145\nAnd here's where I can create\nIPs that are tied to my account.\n\n143\n00:06:40.350 --> 00:06:41.810\nAnd I can attach as many as I want.\n\n144\n00:06:41.810 --> 00:06:48.100\nUses Allocate new address button when you\nallocate an address it's gonna grab an IP,\n\n145\n00:06:48.100 --> 00:06:51.850\nI'll hit allocate and\nit's gonna attach it to my account.\n\n146\n00:06:51.850 --> 00:06:54.474\nThat was hard [LAUGH] good so-\n&gt;&gt; I am breathless.\n\n147\n00:06:54.474 --> 00:06:56.092\n&gt;&gt; I know this is the most\nchallenging thing we do today.\n\n148\n00:06:56.092 --> 00:07:01.998\nSo what I see is it succeeded and\nI now have 34.232.183.203.\n\n149\n00:07:01.998 --> 00:07:05.040\nIt's not the coolest IP but\nit'll certainly work.\n\n150\n00:07:05.040 --> 00:07:08.380\nSo I've got this IP address\nnow assigned to my account.\n\n151\n00:07:08.380 --> 00:07:12.020\nNow, it's not actually\nassigned to an instance yet.\n\n152\n00:07:12.020 --> 00:07:15.000\nSo I'm now paying for it,\npaying a very, very small amount for\n\n153\n00:07:15.000 --> 00:07:16.740\nit but I am paying for it.\n\n154\n00:07:16.740 --> 00:07:21.280\nWhat I need to do is take that IP and\nattach it to an instance.\n\n155\n00:07:21.280 --> 00:07:24.026\nNow normally with Linux I would log in,\n\n156\n00:07:24.026 --> 00:07:29.022\nI would go into /etc /sisqconfig\n/network-grip /ifcg- whatever\n\n157\n00:07:29.022 --> 00:07:32.615\nthe interface name was and\nI'd put the IP in there.\n\n158\n00:07:32.615 --> 00:07:37.238\nBut Amazon automates all of that for us,\nthey do it for us because the IP is not\n\n159\n00:07:37.238 --> 00:07:42.400\nactually assigned to the instance it's\nactually a one-to-one NAT translation.\n\n160\n00:07:42.400 --> 00:07:45.635\nIt's I guess that's redundant\na Network Address Translation translation.\n\n161\n00:07:45.635 --> 00:07:47.420\n&gt;&gt; [LAUGH]\n&gt;&gt; But it's a one-to-one mapping.\n\n162\n00:07:47.420 --> 00:07:51.830\nIt's mapping this public IP to\nthe private IP on my instance.\n\n163\n00:07:51.830 --> 00:07:55.470\nThe instance only sees that private\nIP if I take a look at my instance.\n\n164\n00:07:55.470 --> 00:07:59.940\nSo this is the lab-rhe01 one machine.\n\n165\n00:07:59.940 --> 00:08:01.485\nI've SSHed into it.\n\n166\n00:08:01.485 --> 00:08:07.360\nAnd if I run ip addr,\nI see the 172 address, that fake address.\n\n167\n00:08:07.360 --> 00:08:09.564\nIt's not that it's fake,\nit's that it's a private IP, right?\n\n168\n00:08:09.564 --> 00:08:13.610\nSo I see that private IP,\nI don't see the public IP at all.\n\n169\n00:08:13.610 --> 00:08:17.353\nI don't see that my instance\nactually has a public IP.\n\n170\n00:08:17.353 --> 00:08:20.130\nIt's just not visible to the VM\nbecause it's being translated.\n\n171\n00:08:20.130 --> 00:08:23.882\nSo I can take this address though and\nI can go to Actions.\n\n172\n00:08:23.882 --> 00:08:26.877\nAnd I can associate the address, right?\n\n173\n00:08:26.877 --> 00:08:29.183\nAnd when we choose to\nassociate the address,\n\n174\n00:08:29.183 --> 00:08:32.520\nyou pick an instance that\nyou want to attach it to.\n\n175\n00:08:32.520 --> 00:08:34.800\nAnd if your instance has\nmore than one interface,\n\n176\n00:08:34.800 --> 00:08:36.920\nif you have more than one\nnetwork card attached to it,\n\n177\n00:08:36.920 --> 00:08:39.710\nthen you could choose network\ninterface to go very specific.\n\n178\n00:08:39.710 --> 00:08:41.917\nBut I've only got one,\nusually you just have one.\n\n179\n00:08:41.917 --> 00:08:44.815\nSo I'll choose Instance,\nI'll pick the instance and\n\n180\n00:08:44.815 --> 00:08:46.648\nI'll find rhel 01 right there.\n\n181\n00:08:46.648 --> 00:08:51.910\nSo I'll choose it and\nthen if I wanna change its private IP.\n\n182\n00:08:51.910 --> 00:08:52.977\nI can, right?\n\n183\n00:08:52.977 --> 00:08:56.160\nThe private IP is already set, so I'll\njust leave it kinda the way that it was.\n\n184\n00:08:56.160 --> 00:09:01.908\nAnd I'll choose that, because it's mapping\nthis public IP to that private IP.\n\n185\n00:09:01.908 --> 00:09:04.650\nSo the configuration of the instance\ndoesn't have to change.\n\n186\n00:09:04.650 --> 00:09:06.467\nAmazon doesn't have to\nlog in to your instance.\n\n187\n00:09:06.467 --> 00:09:09.618\nThey don't have to have root credentials\nto go in and change your network adapter.\n\n188\n00:09:09.618 --> 00:09:11.827\nYour system already has an IP,\nand it keeps it.\n\n189\n00:09:11.827 --> 00:09:13.998\nThis one's now just being mapped to it,\nright?\n\n190\n00:09:13.998 --> 00:09:17.600\nSo I'm gonna go ahead and do that, there\nis a little safety net feature right here,\n\n191\n00:09:17.600 --> 00:09:20.601\nwhere it says allow elastic IP to\nreassociated if already attached.\n\n192\n00:09:20.601 --> 00:09:24.638\nNormally if an IP is already attached to\nan instance, you have to detached first,\n\n193\n00:09:24.638 --> 00:09:27.165\nbefore you can attached to somebody else,\nright?\n\n194\n00:09:27.165 --> 00:09:30.414\nThat's a good safety net to have,\nI'm gonna lead that off.\n\n195\n00:09:30.414 --> 00:09:32.226\nAnd then somewhere down here, oop,\nwait on here the bottom up here,\n\n196\n00:09:32.226 --> 00:09:34.020\nmy Associate button and\nthen we'll attached that to the instance.\n\n197\n00:09:34.020 --> 00:09:40.069\nNow that's gonna happen in the background,\nand I should see my IP change.\n\n198\n00:09:40.069 --> 00:09:43.440\nMy IP did start with 54,\nit was 54 dot something.\n\n199\n00:09:43.440 --> 00:09:47.853\nAnd now if I go up to my instances,\nin short order,\n\n200\n00:09:47.853 --> 00:09:51.752\nI should see that lab rhel01 now changes.\n\n201\n00:09:51.752 --> 00:09:56.955\nAnd if I look down here at the bottom,\nsure enough, it's got 34.232.183.203.\n\n202\n00:09:56.955 --> 00:09:59.665\nIt's got that elastic IP, all right?\n\n203\n00:09:59.665 --> 00:10:01.225\nAnd the DNS name they used again,\n\n204\n00:10:01.225 --> 00:10:04.082\nthis is why we don't wanna use\na C name for this, it changed.\n\n205\n00:10:04.082 --> 00:10:09.270\nBecause the IP is embedded right there\nin that DNS name they allocated for him.\n\n206\n00:10:09.270 --> 00:10:12.800\nSo the internal IP,\nit didn't change at all.\n\n207\n00:10:12.800 --> 00:10:14.934\nIt's the same, the configuration\nof the end didn't change.\n\n208\n00:10:14.934 --> 00:10:19.096\nIt knows what interface to attach it to,\nbut the public IP did.\n\n209\n00:10:19.096 --> 00:10:24.161\nOkay, now in the background here,\nI was sshed in.\n\n210\n00:10:24.161 --> 00:10:27.050\nAnd now my session is dead, right?\n\n211\n00:10:27.050 --> 00:10:28.350\nI lost this old IP, and\n\n212\n00:10:28.350 --> 00:10:32.405\ntechnically this IP could be given\nto another customer at this point.\n\n213\n00:10:32.405 --> 00:10:34.509\nWow.\nSomebody else could get this IP and\n\n214\n00:10:34.509 --> 00:10:37.693\nnow I've got to kill my session or\nI'll just open up a new tab.\n\n215\n00:10:37.693 --> 00:10:42.336\n[LAUGH] [LAUGH] So now I've got\nan ssh back into that thing, so\n\n216\n00:10:42.336 --> 00:10:46.981\nI'll ssh is ec2.user, and\nI need to paste in the new IP.\n\n217\n00:10:46.981 --> 00:10:48.198\nRight, the static.\n\n218\n00:10:48.198 --> 00:10:53.841\nAnd I'll import that certificate and\nI'll connect in.\n\n219\n00:10:53.841 --> 00:10:56.755\nI get the same fingerprint,\nthe ssh fingerprint didn't change,\n\n220\n00:10:56.755 --> 00:10:58.478\nit's just on a different IP this time.\n\n221\n00:10:58.478 --> 00:11:01.530\nAnd I can connect in and\nnow I'm back into my server.\n\n222\n00:11:01.530 --> 00:11:05.728\nThis is my server that configured the way\nthat I had it, but now with the static IP.\n\n223\n00:11:05.728 --> 00:11:10.439\nAnd more importantly if I stop this VM,\nI keep the IP address.\n\n224\n00:11:10.439 --> 00:11:11.660\nThe IP address stays with me.\n\n225\n00:11:11.660 --> 00:11:13.154\nSo I don't have to worry\nabout the IP changing.\n\n226\n00:11:13.154 --> 00:11:15.034\nSo now I can go to my DNS server and\n\n227\n00:11:15.034 --> 00:11:19.668\nI can actually put an entry note that\nsays www.donssawesomesite.com- Right.\n\n228\n00:11:19.668 --> 00:11:23.526\nPoints to this IP and I know it will\nalways be this IP no matter what, right?\n\n229\n00:11:23.526 --> 00:11:27.775\nSo this s a long answer to a short\nquestion, going back to the- [LAUGH]\n\n230\n00:11:27.775 --> 00:11:30.617\nWhat was the first thing I configure\nis that static IP address, right?\n\n231\n00:11:30.617 --> 00:11:32.286\nYeah.\nWe wanna get that set if you're\n\n232\n00:11:32.286 --> 00:11:34.010\ngonna be keeping the server around.\n\n233\n00:11:34.010 --> 00:11:36.117\nIf it's a temporary server,\nI may not care about it.\n\n234\n00:11:36.117 --> 00:11:38.072\nAnd a lot of services\nthey used auto scaling,\n\n235\n00:11:38.072 --> 00:11:39.777\nthey don't care about the IPs anyway.\n\n236\n00:11:39.777 --> 00:11:43.440\nThey stick them behind the load balancer,\nso what do you care what IP they have.\n\n237\n00:11:43.440 --> 00:11:47.482\nBut we need some dedicated service,\nwe need to have an IP that we can count\n\n238\n00:11:47.482 --> 00:11:50.020\non and\nan elastic IP is the way that we do that.\n\n239\n00:11:50.020 --> 00:11:53.011\nYeah, I think that there will be\na lot of user for actually everybody,\n\n240\n00:11:53.011 --> 00:11:54.848\nend user clients, admins, everyone,.\n\n241\n00:11:54.848 --> 00:11:55.696\nYeah.\nYeah, and\n\n242\n00:11:55.696 --> 00:11:58.342\nis there any other security\noptions we have to worry about?\n\n243\n00:11:58.342 --> 00:12:00.315\nOn the security side, I haven't done much.\n\n244\n00:12:00.315 --> 00:12:02.840\nWe saw security briefly\nwhen I deployed this thing.\n\n245\n00:12:02.840 --> 00:12:05.400\nIt asked me to set up what\nwas called a security group.\n\n246\n00:12:05.400 --> 00:12:09.310\nAnd I mentioned that a security group is\nkind of like a software firewall, right?\n\n247\n00:12:09.310 --> 00:12:14.750\nVery similar to IP tables or firewalld.\n\n248\n00:12:14.750 --> 00:12:15.585\nWith IP tables and\n\n249\n00:12:15.585 --> 00:12:18.770\nfirewalld, you can control who\nhas access to your system, right?\n\n250\n00:12:18.770 --> 00:12:22.200\nAnd if I take a look, like my Red Hat\ninstance here that I deployed.\n\n251\n00:12:22.200 --> 00:12:27.050\nIf I do an iptables--list,\nactually let me sudo that.\n\n252\n00:12:27.050 --> 00:12:32.710\nI can see that it has IP tables, and\nit doesn't really have a policy in here.\n\n253\n00:12:32.710 --> 00:12:41.030\nThere's nothing set to match, and\nif I do a firewall-cmd --list-all.\n\n254\n00:12:41.030 --> 00:12:43.058\nI can take a look, and\nI'm not running firewalld.\n\n255\n00:12:43.058 --> 00:12:45.252\nSo this is really interesting,\n\n256\n00:12:45.252 --> 00:12:50.460\ncuz I spun up a Red Hat Enterprise\ninstance, but it is running iptables.\n\n257\n00:12:50.460 --> 00:12:53.598\nIt's running Red Hat Enterprise Linux 7.4,\n\n258\n00:12:53.598 --> 00:12:57.969\nwhich if you install that yourself,\nit uses firewalld by default.\n\n259\n00:12:57.969 --> 00:13:01.700\nBut Amazon and really Red Hat\nhas changed that configuration.\n\n260\n00:13:01.700 --> 00:13:06.580\nAnd they've put in IP tables and there's\nno rules in it whatsoever which means my\n\n261\n00:13:06.580 --> 00:13:09.107\nserver's really allowing everything.\n\n262\n00:13:09.107 --> 00:13:12.930\nIf there's no match rule in IP tables,\nit's going to allow that traffic in.\n\n263\n00:13:12.930 --> 00:13:15.111\nSo what the heck is going on\nwith the security configuration?\n\n264\n00:13:15.111 --> 00:13:19.456\nWhy do they screw it up when Red Hat's\ndefault configuration is so good?\n\n265\n00:13:19.456 --> 00:13:22.238\nWell what's going on here is that in AWS,\n\n266\n00:13:22.238 --> 00:13:26.920\nyou shouldn't be using software\nfirewalls in your instances.\n\n267\n00:13:26.920 --> 00:13:30.315\nInstead Amazon provides you\na firewall service right in as\n\n268\n00:13:30.315 --> 00:13:32.470\npart of your virtual private cloud.\n\n269\n00:13:32.470 --> 00:13:33.639\nIt's part of your VPC.\n\n270\n00:13:33.639 --> 00:13:34.541\nNow- Right.\n\n271\n00:13:34.541 --> 00:13:36.640\nYou can use the firewall here if you want.\n\n272\n00:13:36.640 --> 00:13:40.548\nI can go in and I can set up IP tables,\nI can install firewalld if I want, and\n\n273\n00:13:40.548 --> 00:13:41.629\nI could set that up.\n\n274\n00:13:41.629 --> 00:13:45.686\nThe challenge is Amazon needs to be able\nto talk to this machine and manage it.\n\n275\n00:13:45.686 --> 00:13:49.050\nTo be able to shut it down or to start\nit to be able to monitor it's health.\n\n276\n00:13:49.050 --> 00:13:52.330\nAnd if you configure your own firewall,\nit blocks their ability to do that.\n\n277\n00:13:52.330 --> 00:13:57.780\nSo it can affect how they're able to see\nlike looks like that hardware is failing,\n\n278\n00:13:57.780 --> 00:14:01.730\nI need to move that VM over here, and it\naffects their ability to do that cleanly.\n\n279\n00:14:01.730 --> 00:14:05.304\nSo what they've effectively done\nis turn the firewall off, right?\n\n280\n00:14:05.304 --> 00:14:09.241\nThey turned off firewalld, they put in IP\ntables because with IP tables we might\n\n281\n00:14:09.241 --> 00:14:13.026\nwant to link to something like Fail2ban\nwhere we're not filtering ports.\n\n282\n00:14:13.026 --> 00:14:16.930\nWe're actually just looking for\na lot of failed logins or whatever.\n\n283\n00:14:16.930 --> 00:14:20.201\nSo you've got that functionality there,\nbut no real filtering.\n\n284\n00:14:20.201 --> 00:14:23.830\nAnd instead, we do the filtering\nthrough a security group.\n\n285\n00:14:23.830 --> 00:14:28.362\nWhen you choose an instance, one of things\nthat it tells you about the instance if we\n\n286\n00:14:28.362 --> 00:14:32.342\nkinda scroll around in here somewhere,\nthere it is way over on the side.\n\n287\n00:14:32.342 --> 00:14:37.357\nI can see what security group\nthat instance is attached to.\n\n288\n00:14:37.357 --> 00:14:39.952\nAnd if you just breezed through\nthe install like I did,\n\n289\n00:14:39.952 --> 00:14:44.311\nit'll say exactly what it's saying here,\nlaunch-wizard-1, launch-wizard-2.\n\n290\n00:14:44.311 --> 00:14:48.657\nAnd if you forget about this, over time\nyou'll have launch-wizard-577- [LAUGH] And\n\n291\n00:14:48.657 --> 00:14:50.079\nit just keeps going.\n\n292\n00:14:50.079 --> 00:14:52.794\nBut these are just the default\nlaunch-wizard security groups.\n\n293\n00:14:52.794 --> 00:14:55.746\nYou can create your own\nsecurity groups though, and\n\n294\n00:14:55.746 --> 00:14:58.508\nthey work just like IP tables or\nfirewalld well.\n\n295\n00:14:58.508 --> 00:15:00.523\nYou can get in and set these up and\n\n296\n00:15:00.523 --> 00:15:04.090\nconfigure them to be able\nto control that access.\n\n297\n00:15:04.090 --> 00:15:06.730\nOn the left side,\nwhen I scroll down to find elastic IPs,\n\n298\n00:15:06.730 --> 00:15:09.768\nyou might have noticed that I had\nsecurity groups right above it.\n\n299\n00:15:09.768 --> 00:15:11.697\nAnd I can choose security groups and\n\n300\n00:15:11.697 --> 00:15:15.495\nhere's where I can define security\ngroups based on my needs, right?\n\n301\n00:15:15.495 --> 00:15:17.485\nBased on what I want these servers to do.\n\n302\n00:15:17.485 --> 00:15:19.015\nAnd more importantly,\n\n303\n00:15:19.015 --> 00:15:23.462\nI can share that security group\nwith more than one instance, right?\n\n304\n00:15:23.462 --> 00:15:28.219\nWith firewalld or IPtables, if I have\nten web servers I've got ten separate\n\n305\n00:15:28.219 --> 00:15:30.536\nsets of rules I've gotta maintain.\n\n306\n00:15:30.536 --> 00:15:33.670\nI've gotta go to each one of those\nservers and define the rules.\n\n307\n00:15:33.670 --> 00:15:36.910\nWith the security group,\nI define the rules once and\n\n308\n00:15:36.910 --> 00:15:40.890\nI just attach it to those servers and\nnow they all follow the same rules, right?\n\n309\n00:15:40.890 --> 00:15:43.255\nLet's think about what I\nmight want a web server.\n\n310\n00:15:43.255 --> 00:15:46.524\nSo I'm gonna pretend that my Red Hat\nserver is gonna be a web server.\n\n311\n00:15:46.524 --> 00:15:49.533\nSo what kind of access what\nI want a web server have?\n\n312\n00:15:49.533 --> 00:15:53.429\nWell, I can come up here and\nI could choose Create Security Group.\n\n313\n00:15:53.429 --> 00:15:55.370\nAnd I give it a name,\nits got to have a name.\n\n314\n00:15:55.370 --> 00:15:58.157\nSo I'll call mine\nlab-webservers All right,\n\n315\n00:15:58.157 --> 00:16:00.465\nand then you can give it a description.\n\n316\n00:16:00.465 --> 00:16:03.617\nSo this is Don's Lab web service.\n\n317\n00:16:03.617 --> 00:16:07.294\nThere we go, and you can specify\na virtual private cloud which if you want\n\n318\n00:16:07.294 --> 00:16:09.464\nto learn more about VPCs and\nhow they work,\n\n319\n00:16:09.464 --> 00:16:12.680\nI encourage you to check out our\nAmazon Web Services training.\n\n320\n00:16:12.680 --> 00:16:16.310\nWe actually have several courses on AWS,\nand I go into that in much greater detail.\n\n321\n00:16:16.310 --> 00:16:20.240\nBut you can divide up the cloud into\nseveral smaller clouds which are VPCs.\n\n322\n00:16:20.240 --> 00:16:23.830\nIf you just did a default install,\nyou'll just have a default and\n\n323\n00:16:23.830 --> 00:16:25.120\nall your instances will be in there.\n\n324\n00:16:25.120 --> 00:16:27.450\nThat's kind of what I'm doing right here,\ntrying to keep things simple.\n\n325\n00:16:28.670 --> 00:16:31.800\nBut after that, we then define the rules.\n\n326\n00:16:31.800 --> 00:16:33.550\nWhat traffic do we want to allow?\n\n327\n00:16:33.550 --> 00:16:37.770\nWhat inbound traffic do we want and\nwhat outbound traffic do we want?\n\n328\n00:16:37.770 --> 00:16:41.240\nNow on the inbound side,\nlet's think about this, it's a web server.\n\n329\n00:16:41.240 --> 00:16:44.310\nI need to be able to manage it, so I need\nto be able to connect this, so I want SSH.\n\n330\n00:16:44.310 --> 00:16:48.580\nBut it's a web server, so\nI want HTTP, and I want HTTPS, right?\n\n331\n00:16:48.580 --> 00:16:49.980\nI want people to be able to browse.\n\n332\n00:16:49.980 --> 00:16:54.480\nSo I'm gonna add a rule,and I'm\ngonna pick what I'm allowing.\n\n333\n00:16:54.480 --> 00:16:57.440\nWhen you drop down a box, you'll see\nwhere they've defined a lot of protocols\n\n334\n00:16:57.440 --> 00:17:00.130\nahead of time, but,\nyou can also define your own.\n\n335\n00:17:00.130 --> 00:17:04.060\nThere's these custom TCP,\ncustom UDP rules that you can specify.\n\n336\n00:17:04.060 --> 00:17:07.560\nBut I want web, and that's already\ndefined for me, so I can pick it.\n\n337\n00:17:07.560 --> 00:17:10.940\nI want HTTP, and it fills it in,\nthis TCP, port 80.\n\n338\n00:17:10.940 --> 00:17:13.520\nAnd then the source.\n\n339\n00:17:13.520 --> 00:17:17.960\nNotice my source, how it's zero to\nzero to zero to zero, slash, zero.\n\n340\n00:17:17.960 --> 00:17:21.020\nThat means anywhere,\npeople can connect from anywhere.\n\n341\n00:17:21.020 --> 00:17:24.430\nWell if this is a web server I want people\nto be able to connect from anywhere so\n\n342\n00:17:24.430 --> 00:17:25.320\nthat's fine I can leave it.\n\n343\n00:17:25.320 --> 00:17:28.680\nBut if I drop that down\nI can pick other values,\n\n344\n00:17:28.680 --> 00:17:31.870\nit actually defaulted to custom which\nmeans I could overwrite this and\n\n345\n00:17:31.870 --> 00:17:36.020\nput a particular range,\nif you choose anywhere it fills it in\n\n346\n00:17:36.020 --> 00:17:39.590\nwith those zeros and it's got it right\nthere, and that's meaning anything.\n\n347\n00:17:39.590 --> 00:17:40.510\nBut I could limit it down.\n\n348\n00:17:40.510 --> 00:17:43.300\nLet me give you an example where\nwe would want to limit it down.\n\n349\n00:17:43.300 --> 00:17:44.850\nNot http, in fact, not even https.\n\n350\n00:17:44.850 --> 00:17:46.160\nLet me add that one.\n\n351\n00:17:46.160 --> 00:17:48.970\nSo I'll punch in https and\nI'll add from anywhere.\n\n352\n00:17:48.970 --> 00:17:51.630\nAnd then I'm gonna add one more entry.\n\n353\n00:17:51.630 --> 00:17:53.520\nI need to manage the server with SSH.\n\n354\n00:17:53.520 --> 00:17:56.280\nSo I wanna allow SSH traffic, okay,\n\n355\n00:17:56.280 --> 00:18:00.290\nbut I don't want to allow\nSSH from anywhere, right?\n\n356\n00:18:00.290 --> 00:18:04.300\nI don't want attackers in another country\nor whatever trying to get into my server.\n\n357\n00:18:04.300 --> 00:18:06.395\nI want me to be able to\nget into the server.\n\n358\n00:18:06.395 --> 00:18:08.050\n&gt;&gt; [LAUGH] That's important.\n\n359\n00:18:08.050 --> 00:18:11.450\n&gt;&gt; Yeah, I don't wanna lock myself out,\nso I wanna limit it down.\n\n360\n00:18:11.450 --> 00:18:14.440\nAnd when you drop it down,\nnotice that it's got my IP.\n\n361\n00:18:14.440 --> 00:18:18.490\nIt'll actually look at the public IP that\nyou're using to browse the web with.\n\n362\n00:18:18.490 --> 00:18:23.955\nAnd if I choose that,\nit changes to 209.251.131.98.\n\n363\n00:18:23.955 --> 00:18:28.116\nThat's the IP address of the firewall in\nthis room here behind me somewhere that we\n\n364\n00:18:28.116 --> 00:18:31.914\nuse to connect out to the internet, and\ngets me out to Amazon Web Services,\n\n365\n00:18:31.914 --> 00:18:33.270\nnow it's tied to just me.\n\n366\n00:18:33.270 --> 00:18:35.420\nNow that can be a little bit of a problem,\n\n367\n00:18:35.420 --> 00:18:39.420\nbecause if I go home,\nnow I can't ssh into the server anymore.\n\n368\n00:18:39.420 --> 00:18:43.960\nBut when I'm at work, I'd be able to ssh\nin, so you may need to add more, and\n\n369\n00:18:43.960 --> 00:18:46.770\nour network actually has\nmore than just one IP, so\n\n370\n00:18:46.770 --> 00:18:51.430\nI might need to change this and\nsay that I don't just want that IP,\n\n371\n00:18:51.430 --> 00:18:55.250\nI might want to go a little more,\nlet me copy that so I've got it.\n\n372\n00:18:55.250 --> 00:18:59.490\nSo, I'll copy that, and\nI will say I want to do a custom.\n\n373\n00:18:59.490 --> 00:19:05.000\nAnd maybe I wanna do that slash 24 or\n27, like that, okay.\n\n374\n00:19:05.000 --> 00:19:08.860\nSo, now I'm getting that entire network,\ninstead of just that one IP and\n\n375\n00:19:08.860 --> 00:19:09.550\nallowing that through.\n\n376\n00:19:09.550 --> 00:19:11.200\nYou need to specify what you want.\n\n377\n00:19:11.200 --> 00:19:15.400\nNow, I am at the office, and so\nI am fine coming and saying my IP,\n\n378\n00:19:15.400 --> 00:19:19.180\nand if I work from home,\nI normally VPN here to the office.\n\n379\n00:19:19.180 --> 00:19:20.580\nSo I have the office's IP anyway.\n\n380\n00:19:20.580 --> 00:19:24.720\nSo that's a good one for me to kind\nof restrict that down and limit it.\n\n381\n00:19:24.720 --> 00:19:28.090\nSo SSH is open,\njust not to the whole wide world.\n\n382\n00:19:28.090 --> 00:19:29.990\nI want to keep that restricted.\n\n383\n00:19:31.140 --> 00:19:32.260\nNow those are all inbound rules.\n\n384\n00:19:32.260 --> 00:19:36.510\nOn the outbound side, the default\nis all outbound traffic is allowed.\n\n385\n00:19:36.510 --> 00:19:40.160\nWe're going to allow a workstation or\nan instance or whatever it is that we've\n\n386\n00:19:40.160 --> 00:19:43.935\npowered up here in EC2 to be able to go\nout to wherever they want on the internet.\n\n387\n00:19:43.935 --> 00:19:46.795\nAnd that might be what we want, right?\n\n388\n00:19:46.795 --> 00:19:51.225\nOr we might say,\nI really need to limit this down.\n\n389\n00:19:51.225 --> 00:19:52.225\nI don't want it going out.\n\n390\n00:19:52.225 --> 00:19:54.615\nLike if a hacker breaks into this server.\n\n391\n00:19:54.615 --> 00:19:58.845\nIf they compromise my instance, I don't\nwant them then being able to go out and\n\n392\n00:19:58.845 --> 00:20:00.755\nstart doing ping sweeps and scans.\n\n393\n00:20:00.755 --> 00:20:02.515\nSo I might come in here and block ping.\n\n394\n00:20:02.515 --> 00:20:04.960\nI don't want my instance\nto be able to ping out.\n\n395\n00:20:04.960 --> 00:20:07.440\nIt makes troubleshooting a pain in\nthe butt, but you can do it, right?\n\n396\n00:20:07.440 --> 00:20:08.770\nSo you have that option.\n\n397\n00:20:08.770 --> 00:20:10.300\nI'm going to leave mine as wide open but\n\n398\n00:20:10.300 --> 00:20:14.320\nyou can control the inbound and\noutbound traffic from these instances.\n\n399\n00:20:14.320 --> 00:20:16.790\nAnd when I choose create,\nI am going to go ahead and\n\n400\n00:20:16.790 --> 00:20:19.195\nclick that create button and,\nI got a warning.\n\n401\n00:20:19.195 --> 00:20:20.020\nWhat's my warning?\n\n402\n00:20:20.020 --> 00:20:23.795\nI can't have an apostrophe in\nthe description, what craziness is that?\n\n403\n00:20:23.795 --> 00:20:24.409\nAll right, well.\n\n404\n00:20:24.409 --> 00:20:26.075\n&gt;&gt; [LAUGH]\n&gt;&gt; I'll take out my apostrophe,\n\n405\n00:20:26.075 --> 00:20:27.175\nand I'll go ahead and create it.\n\n406\n00:20:27.175 --> 00:20:28.915\nAnd so\nnow it's gonna build that security group.\n\n407\n00:20:28.915 --> 00:20:29.735\nPretty awesome, right?\n\n408\n00:20:29.735 --> 00:20:30.935\nI got a security group.\n\n409\n00:20:30.935 --> 00:20:35.120\nBut it's not actually doing anything.\n\n410\n00:20:35.120 --> 00:20:38.990\nI created it, but\nthere's no instances inside of it, right?\n\n411\n00:20:38.990 --> 00:20:42.890\nIf I click on that security group,\nsee, here's my lab-web servers.\n\n412\n00:20:42.890 --> 00:20:45.000\nAnd I take a look down here.\n\n413\n00:20:45.000 --> 00:20:46.090\nI can see that it was defined.\n\n414\n00:20:46.090 --> 00:20:48.530\nI can see my inbound and outbound rules.\n\n415\n00:20:48.530 --> 00:20:53.170\nBut there's nobody attached\nto that security group yet\n\n416\n00:20:53.170 --> 00:20:56.750\nand so when we take a look at it one of\nthe things that we are gonna need to do\n\n417\n00:20:56.750 --> 00:20:59.560\nis go in and\nget that attached to an instance.\n\n418\n00:20:59.560 --> 00:21:03.650\nNow when you create an instance it asks\nyou what security group you want it to be\n\n419\n00:21:03.650 --> 00:21:06.870\na part of and you can put that\ninstance into that security group and\n\n420\n00:21:06.870 --> 00:21:08.960\nyou're done when you create it.\n\n421\n00:21:08.960 --> 00:21:11.480\nBut I've already created\nmy instances right?\n\n422\n00:21:11.480 --> 00:21:14.320\nWell, in the early days of AWS that was\na real problem, like you had to recreate\n\n423\n00:21:14.320 --> 00:21:17.410\nthe instance if you wanted to move to\na security group, it was a super pain.\n\n424\n00:21:17.410 --> 00:21:20.060\nBut you actually can change\nthe security group now if you go and\n\n425\n00:21:20.060 --> 00:21:25.260\nmodify the instance's configuration\nyou can take that instance and\n\n426\n00:21:25.260 --> 00:21:30.130\nit shows you which security group it's\na part of but you can go and edit that and\n\n427\n00:21:30.130 --> 00:21:32.900\nmodify it and\nmove it into a different security group.\n\n428\n00:21:32.900 --> 00:21:37.840\nSo, when I go up here to the Actions menu\nand I come in and take a look at it.\n\n429\n00:21:37.840 --> 00:21:41.270\nWe can find in here, we can move\nit to a different security group.\n\n430\n00:21:41.270 --> 00:21:43.400\nIt's buried in here somewhere, here it is.\n\n431\n00:21:43.400 --> 00:21:47.260\nUnder the Networking menu we've\ngot change security groups.\n\n432\n00:21:47.260 --> 00:21:49.490\nHm, and so,\nI can change security groups and\n\n433\n00:21:49.490 --> 00:21:53.430\nI'm gonna move this one from\nLaunch Wizard 1 over to lab web servers.\n\n434\n00:21:53.430 --> 00:21:54.550\nNow be careful,\n\n435\n00:21:54.550 --> 00:21:58.120\nan instance can actually be in more than\none security group at the same time.\n\n436\n00:21:58.120 --> 00:22:01.050\nI don't really have a real world example\nof why you would want to do that, but\n\n437\n00:22:01.050 --> 00:22:03.720\nif you had some rules defined in\none group and some in another.\n\n438\n00:22:03.720 --> 00:22:08.110\nMaybe you had one security group that\nwas designed for web servers, and\n\n439\n00:22:08.110 --> 00:22:10.780\nanother security group that\nwas designed for FTP servers.\n\n440\n00:22:10.780 --> 00:22:13.240\nAnd then you had one server that\nhappened to be both, FTP and web.\n\n441\n00:22:13.240 --> 00:22:16.180\nYou could put it in both groups,\nand it would get both sets of\n\n442\n00:22:16.180 --> 00:22:19.120\nrules to allow traffic through, so\nI guess that would be a good example.\n\n443\n00:22:19.120 --> 00:22:22.150\nBut I don't normally do that,\nI keep it a little more straightforward.\n\n444\n00:22:22.150 --> 00:22:25.220\nI'll sign that lab-webservers,\nand I'll sign that group, and\n\n445\n00:22:25.220 --> 00:22:26.000\nnow it's gonna get attached.\n\n446\n00:22:26.000 --> 00:22:28.820\nAnd then I could repeat the same\nprocess with my other server, but\n\n447\n00:22:28.820 --> 00:22:31.221\nI can see that's it's already\ntaken effect right here,\n\n448\n00:22:31.221 --> 00:22:36.360\nlab-webservers is attached,\nit's in place, and there it goes.\n\n449\n00:22:36.360 --> 00:22:40.240\nNow I've got the firewall configured, and\nI don't have to worry about IP tables, or\n\n450\n00:22:40.240 --> 00:22:41.225\nfirewall D.\n\n451\n00:22:41.225 --> 00:22:44.060\n&gt;&gt; Mm-hm.\n&gt;&gt; It's done right here on this instance.\n\n452\n00:22:44.060 --> 00:22:47.540\nAnd as I add more web servers,\nI just attach them to that same group.\n\n453\n00:22:47.540 --> 00:22:51.060\nAnd if I wanna modify all of their\nports maybe I need to add a new IP for\n\n454\n00:22:51.060 --> 00:22:54.340\nmanagement, I'll just do it one time\nright on the security group and\n\n455\n00:22:54.340 --> 00:22:58.140\nit affects all the servers that\nare inside of that security group.\n\n456\n00:22:58.140 --> 00:23:01.780\n&gt;&gt; So Don what if I don't want to expose\nmy instance to my the Internet at all?\n\n457\n00:23:02.850 --> 00:23:05.457\nAll right, that's where things start\nto get a little tricky, right?\n\n458\n00:23:05.457 --> 00:23:06.795\n&gt;&gt; Hah!\n[CROSSTALK] I knew, I knew it.\n\n459\n00:23:06.795 --> 00:23:10.560\n&gt;&gt; Instances by default\ngo into your default VPC.\n\n460\n00:23:10.560 --> 00:23:13.080\nYour default VPC gets a public IP address.\n\n461\n00:23:13.080 --> 00:23:15.270\nAnd the public IP address is,\nwell, public.\n\n462\n00:23:15.270 --> 00:23:16.430\nThat is publicly available.\n\n463\n00:23:16.430 --> 00:23:18.460\nThe whole wide world can see the IP.\n\n464\n00:23:18.460 --> 00:23:20.620\nIn fact if you're watching this\nshow right now live, right,\n\n465\n00:23:20.620 --> 00:23:23.250\nI know a lot of you watch it recorded but\nif you're watching it live and\n\n466\n00:23:23.250 --> 00:23:25.940\nyou see these IPs, you could be trying\nto get in these servers right now.\n\n467\n00:23:25.940 --> 00:23:28.120\nThey're publicly available.\n\n468\n00:23:28.120 --> 00:23:30.830\nIf I want to have them\nprivate I got a challenge.\n\n469\n00:23:30.830 --> 00:23:32.480\nI could create firewall rules.\n\n470\n00:23:32.480 --> 00:23:35.670\nThe firewall rules don't actually\nmake the server private though.\n\n471\n00:23:35.670 --> 00:23:38.070\nWhat the firewall rules do\nis they filter traffic.\n\n472\n00:23:38.070 --> 00:23:42.630\nThe server is still public and it's still\nattached to the actual internet but\n\n473\n00:23:42.630 --> 00:23:45.200\nit's just kind of being\nhidden by this firewall.\n\n474\n00:23:45.200 --> 00:23:47.850\nIf anything ever goes wrong with\nthe firewall all of a sudden the server is\n\n475\n00:23:47.850 --> 00:23:49.020\nvery public night.\n\n476\n00:23:49.020 --> 00:23:54.143\nSo that's a problem what you're storing\npatient medical records or financial data.\n\n477\n00:23:54.143 --> 00:23:58.433\nYou don't want an accident with the\nfirewall to all a sudden compromises your\n\n478\n00:23:58.433 --> 00:23:59.358\ncustomer data.\n\n479\n00:23:59.358 --> 00:24:00.419\nIt's not something you want.\n\n480\n00:24:00.419 --> 00:24:02.405\nSo that's where we get into VPCs.\n\n481\n00:24:02.405 --> 00:24:07.043\nVPCs are virtual private clouds and\nthe default one the one that all your\n\n482\n00:24:07.043 --> 00:24:12.060\ninstances are gonna go into, well,\nby default, those are public.\n\n483\n00:24:12.060 --> 00:24:15.600\nThey get public IPs,\nuse the firewall to control their access.\n\n484\n00:24:15.600 --> 00:24:21.610\nBut we can create more virtual\nprivate clouds to restrict and\n\n485\n00:24:21.610 --> 00:24:25.270\nisolate that information, and\nkinda keep these systems offline.\n\n486\n00:24:25.270 --> 00:24:30.160\nThe problem is if the system is\nat EC2 in their data center,\n\n487\n00:24:30.160 --> 00:24:34.450\nand it's not access to the Internet,\nhow do we get into it?\n\n488\n00:24:34.450 --> 00:24:35.760\nAren't we cutting ourselves out?\n\n489\n00:24:35.760 --> 00:24:37.620\nCuz Amazon will not let\nyou in that data center.\n\n490\n00:24:37.620 --> 00:24:39.930\nWe can't go and see the servers and stuff.\n\n491\n00:24:39.930 --> 00:24:42.080\nSo how do we manage it?\n\n492\n00:24:42.080 --> 00:24:45.395\nWhen you create a VPC,\nif you isolate it from the world,\n\n493\n00:24:45.395 --> 00:24:49.740\nwhat you can do is, you can set up a VPN.\n\n494\n00:24:49.740 --> 00:24:54.181\nA Virtual Private Network, an encrypted\ntunnel between your headquarters and\n\n495\n00:24:54.181 --> 00:24:54.786\nthat VPC.\n\n496\n00:24:54.786 --> 00:24:59.577\nAnd when you do that, now your\nheadquarters has access to that VPC,\n\n497\n00:24:59.577 --> 00:25:03.485\nbut the VPC is not directly\nconnected to the Internet.\n\n498\n00:25:03.485 --> 00:25:05.324\nNo one on the Internet\nwill be able to get to it.\n\n499\n00:25:05.324 --> 00:25:08.682\nThey'll have to go through\nyour VPN tunnel to get there.\n\n500\n00:25:08.682 --> 00:25:11.390\nNow, this actually goes a little\nbit along the scope of UC2.\n\n501\n00:25:11.390 --> 00:25:16.510\nWhen I create an instance, it let me\npick a VPC, when I created a elastic IP,\n\n502\n00:25:16.510 --> 00:25:20.050\nit let me pick a VPC, so\nyou guys are kinda seeing that throughout.\n\n503\n00:25:20.050 --> 00:25:23.131\nJust as a quick primer,\nif you wanna see how it works, if you go\n\n504\n00:25:23.131 --> 00:25:27.542\nup to services there's all these different\ncategories, and you can find networking.\n\n505\n00:25:27.542 --> 00:25:31.214\nIt's in here somewhere, networking and\ncontent delivery, and you'll find VPC,\n\n506\n00:25:31.214 --> 00:25:32.830\nVirtual Private Cloud.\n\n507\n00:25:32.830 --> 00:25:36.904\nAnd when I go in there, I'll see all\nthe VPCs I have which I think I have two,\n\n508\n00:25:36.904 --> 00:25:40.200\nyeah, I have two, so I can come in and\nI can create my own, and\n\n509\n00:25:40.200 --> 00:25:44.343\na kinda a nice little wizard that walks\nyou through a process to create a VPC,\n\n510\n00:25:44.343 --> 00:25:46.150\nand set up a VPN to connect to it.\n\n511\n00:25:46.150 --> 00:25:47.664\nAnd over here on the left hand side,\n\n512\n00:25:47.664 --> 00:25:51.200\nyou'll see these entries where you can\nconfigure things like customer gateways,\n\n513\n00:25:51.200 --> 00:25:54.300\nand virtual private gateways\nto build that connection up.\n\n514\n00:25:54.300 --> 00:25:57.360\nSo when you walk through this wizard,\nyou tell it what you want and\n\n515\n00:25:57.360 --> 00:26:00.890\nnotice the first one,\nVPC with a single public subnet.\n\n516\n00:26:00.890 --> 00:26:05.087\nThat's the default,\nthat's what we've already got,\n\n517\n00:26:05.087 --> 00:26:08.758\nalready got that in our default VPC but\ndown a few,\n\n518\n00:26:08.758 --> 00:26:13.741\nyou'll see VPC with public and\nprivate subnets and a hardware VPN or\n\n519\n00:26:13.741 --> 00:26:17.876\nVPC with a private subnet only\nin a hardware VPN access.\n\n520\n00:26:17.876 --> 00:26:22.046\nAnd if you look at their diagram, they\nkinda showing how that's intended to be\n\n521\n00:26:22.046 --> 00:26:26.216\nused which is, you have a corporate data\ncenter that has a firewall router that\n\n522\n00:26:26.216 --> 00:26:29.760\nbuilds a VPN tunnel up to Amazon,\nand connects that VPC.\n\n523\n00:26:29.760 --> 00:26:32.310\nAnd now, all of those servers,\njust look like another subnet\n\n524\n00:26:32.310 --> 00:26:33.940\non your own corporate network-\n&gt;&gt; Yep.\n\n525\n00:26:33.940 --> 00:26:38.005\n&gt;&gt; And relax and not exposed to the\nInternet so that's how we would go about\n\n526\n00:26:38.005 --> 00:26:41.729\ndoing that, how we would set up so\nthat we could reach right out and\n\n527\n00:26:41.729 --> 00:26:45.931\nconnected does and have them in Amazon,\ntake advantage of all their fancy\n\n528\n00:26:45.931 --> 00:26:50.373\ninfrastructure and not run the risk of\nexposing our service to the Internet.\n\n529\n00:26:50.373 --> 00:26:54.273\n&gt;&gt; That's fantastic it is that\nit not only do anything else to\n\n530\n00:26:54.273 --> 00:26:56.830\nadd about to configuring easy tunes.\n\n531\n00:26:56.830 --> 00:26:59.674\n&gt;&gt; There's obviously a lot more,\nthere's a ton of other things,\n\n532\n00:26:59.674 --> 00:27:03.150\nlike if you wanna setup auto scaling\nwhere if one instance it's 100% CPU,\n\n533\n00:27:03.150 --> 00:27:06.640\nyou spin up a second copy of it, or\na third copy, and you grow that way.\n\n534\n00:27:06.640 --> 00:27:09.197\nThere's cloud watch monitoring for\nperformance, so\n\n535\n00:27:09.197 --> 00:27:11.091\nI can see if it's hitting 100% CPU.\n\n536\n00:27:11.091 --> 00:27:13.522\nThere's security auditing\nthat we can define.\n\n537\n00:27:13.522 --> 00:27:16.300\nThere's IAM, the identity and\n\n538\n00:27:16.300 --> 00:27:20.320\naccess management we can use to control\nwho's allowed to even see the instance but\n\n539\n00:27:20.320 --> 00:27:23.590\nalso work with it,\nall those numbers well beyond Linux.\n\n540\n00:27:23.590 --> 00:27:25.438\nThat's all really working with AWS.\n\n541\n00:27:25.438 --> 00:27:28.600\nIf you wanna learn more about thatm\ncheck out our AWS series, but\n\n542\n00:27:28.600 --> 00:27:32.990\non the Linux side,\nconfiguring the firewall, signing the IP.\n\n543\n00:27:32.990 --> 00:27:34.910\nOnce that's done, the instance is up.\n\n544\n00:27:34.910 --> 00:27:38.180\nAnd you just treat it like any other Linux\nserver you've got in your environment.\n\n545\n00:27:38.180 --> 00:27:38.870\nYou do your updates.\n\n546\n00:27:38.870 --> 00:27:40.680\nYou install your software, you manage it.\n\n547\n00:27:40.680 --> 00:27:41.710\nAnd everything works great.\n\n548\n00:27:41.710 --> 00:27:44.180\nThe only thing that I really\nthink I haven't mentioned\n\n549\n00:27:44.180 --> 00:27:46.680\nis that you have an instance\ncost that you pay.\n\n550\n00:27:46.680 --> 00:27:48.090\nYou have an hourly rate.\n\n551\n00:27:48.090 --> 00:27:49.832\nWe did talk about that.\n\n552\n00:27:49.832 --> 00:27:54.230\nBut there's also a bandwidth cost,\nsending data into an instance,\n\n553\n00:27:54.230 --> 00:27:56.690\nyou're uploading data into an instance,\ndoesn't cost you a dime,\n\n554\n00:27:56.690 --> 00:28:00.450\nthe Amazon does that for free,\nthey charge you when the data comes out.\n\n555\n00:28:00.450 --> 00:28:03.595\nWhen the customers, when the viewers, when\nthe visitors, when they download data from\n\n556\n00:28:03.595 --> 00:28:08.355\nyour servers, you pay, and\nI think the highest price is 10 cents per\n\n557\n00:28:08.355 --> 00:28:12.775\ngigabyte of data transfer but the more\nyou do, the lower that price gets and so\n\n558\n00:28:12.775 --> 00:28:16.467\njust be aware that there is a data\ntransfer cost in both of these.\n\n559\n00:28:16.467 --> 00:28:19.895\nIf you're setting up as a back up bill and\nall you're doing is uploading, that stuff\n\n560\n00:28:19.895 --> 00:28:23.845\nis free, you don't pay for that, it's not\nuntil you actually need the backup and\n\n561\n00:28:23.845 --> 00:28:26.100\ngo and retrieve the data you\npay that bandwidth also.\n\n562\n00:28:26.100 --> 00:28:28.015\n&gt;&gt; Don, once again,\nthanks for sharing with us.\n\n563\n00:28:28.015 --> 00:28:30.740\n[INAUDIBLE] awesome episode and\n\n564\n00:28:30.740 --> 00:28:34.092\nall the episodes in the Linux in\nthe cloud series are worth watching.\n\n565\n00:28:34.092 --> 00:28:35.428\n&gt;&gt; [LAUGH]\n&gt;&gt; You'll be glad you did if you\n\n566\n00:28:35.428 --> 00:28:36.760\nwatched them all.\n\n567\n00:28:36.760 --> 00:28:41.350\nAnd thank you for watching ITProTV,\nremember a good IT Pro is always learning.\n\n568\n00:28:41.350 --> 00:28:42.320\nI'm Zack Memos.\n\n569\n00:28:42.320 --> 00:28:43.110\n&gt;&gt; And I'm Don Pezet.\n\n570\n00:28:43.110 --> 00:28:46.303\n&gt;&gt; Yes, he is and\nwe'll see you again very soon.\n\n571\n00:28:46.303 --> 00:28:52.510\n[MUSIC]\n\n572\n00:28:52.510 --> 00:28:55.904\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "231396468"
        }
      ],
      "title": "Amazon AWS EC2 Instances"
    },
    {
      "episodes": [
        {
          "description": "Don an Zach discuss what Microsoft Azure is, what we need to know before we spin up our first Instance, Instance types, Linux VM pricing, where we get the operating system for the Instance, and deploying system image.",
          "length": "1543",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-3-1-1-creating_an_azure_vm-082917.00_25_29_29.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-3-1-1-creating_an_azure_vm-082917.00_25_29_29.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-3-1-1-creating_an_azure_vm-082917.00_25_29_29.Still001-sm.jpg",
          "title": "Creating an Azure VM",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:06.032\nWelcome to ITPRO.TV, I'm your host,\nDon Pezet [CROSSTALK]\n\n2\n00:00:06.032 --> 00:00:08.143\n[MUSIC]\n\n3\n00:00:08.143 --> 00:00:11.867\n&gt;&gt; You're watching ITPRO.TV.\n\n4\n00:00:11.867 --> 00:00:14.353\n&gt;&gt; Hello, and thank you for\nchoosing ITPRO.TV,\n\n5\n00:00:14.353 --> 00:00:16.227\nhelping you learn wherever you go.\n\n6\n00:00:16.227 --> 00:00:20.171\nI'm your host Zach Memos, as we\ncontinued on with Linux in the cloud.\n\n7\n00:00:20.171 --> 00:00:23.002\nAnd we're looking at Azure VM today.\n\n8\n00:00:23.002 --> 00:00:24.691\nAnd who's bringing us\nthe information we need.\n\n9\n00:00:24.691 --> 00:00:26.363\nWhy, it's the one and only Don Piset.\n\n10\n00:00:26.363 --> 00:00:27.627\nDon, good to see you sir.\n\n11\n00:00:27.627 --> 00:00:28.668\n&gt;&gt; Hey, good to see you Zach.\n\n12\n00:00:28.668 --> 00:00:31.087\nI'm ready to dive back into\nthe world of Linux in the cloud.\n\n13\n00:00:31.087 --> 00:00:33.372\nIn fact in this episode we're kicking off,\n\n14\n00:00:33.372 --> 00:00:35.734\nlooking at Linux inside\nof Microsoft Azure.\n\n15\n00:00:35.734 --> 00:00:37.284\nYou know Microsoft Azure is, well,\n\n16\n00:00:37.284 --> 00:00:39.637\nMicrosoft's giant cloud\nproduct they have out there.\n\n17\n00:00:39.637 --> 00:00:43.135\nAnd while we normally think of\nMicrosoft as the Windows company,\n\n18\n00:00:43.135 --> 00:00:47.282\nthey've embraced open source technologies\nand embraced Linux quite a bit.\n\n19\n00:00:47.282 --> 00:00:50.704\nMaybe embraced is not the right word for\nit, but from a commercial,\n\n20\n00:00:50.704 --> 00:00:52.455\nhey we can make money on this type.\n\n21\n00:00:52.455 --> 00:00:54.966\n[LAUGH] Definitely doing that.\n\n22\n00:00:54.966 --> 00:00:57.175\nAnd as a result, it's not something\nthat should be overlooked.\n\n23\n00:00:57.175 --> 00:01:00.708\nSo right here in this episode, we're\ngonna get a chance to see how to create\n\n24\n00:01:00.708 --> 00:01:04.315\nLinux Azure VMs and and how to push them\ninto production and make use of them.\n\n25\n00:01:04.315 --> 00:01:07.228\n&gt;&gt; So Don, tell us a little\nbit about Microsoft Azure.\n\n26\n00:01:07.228 --> 00:01:10.092\n&gt;&gt; All right, so Microsoft was\na little bit late into the Cloud game,\n\n27\n00:01:10.092 --> 00:01:11.943\nalthough if you ask them, they weren't.\n\n28\n00:01:11.943 --> 00:01:13.702\nThey were in the Cloud for\n100 years, [LAUGH].\n\n29\n00:01:13.702 --> 00:01:15.294\n&gt;&gt; Mm-hm, yes, they were.\n\n30\n00:01:15.294 --> 00:01:19.913\n&gt;&gt; But as far as providing a large scale,\nglobal, rentable infrastructure,\n\n31\n00:01:19.913 --> 00:01:22.307\nMicrosoft was pretty late to the game.\n\n32\n00:01:22.307 --> 00:01:26.633\nThat Amazon with AWS had really already\ncornered the market on this stuff.\n\n33\n00:01:26.633 --> 00:01:30.388\nAnd Google Compute was already\ncreated at that point.\n\n34\n00:01:30.388 --> 00:01:33.280\nBut boy did Microsoft\ndo a great job with it.\n\n35\n00:01:33.280 --> 00:01:36.635\nThey came in and created a product\nthat's really pretty amazing.\n\n36\n00:01:36.635 --> 00:01:40.692\nThey dumped just insane amounts\nof cash into building a great\n\n37\n00:01:40.692 --> 00:01:45.242\ninfrastructure across the globe\nthat rivals Amazon web services.\n\n38\n00:01:45.242 --> 00:01:48.255\nAnd today,\neven though they got off to a late start,\n\n39\n00:01:48.255 --> 00:01:50.388\nthey're in a solid number two spot.\n\n40\n00:01:50.388 --> 00:01:52.015\nThey're right behind AWS,\n\n41\n00:01:52.015 --> 00:01:55.752\nreally hard to catch up with AWS\ncuz they got a ten year head start.\n\n42\n00:01:55.752 --> 00:01:57.735\nBut Microsoft Azure,\nit's a great platform.\n\n43\n00:01:57.735 --> 00:02:02.291\nEven if you are a Linux purist and you\nhate Microsoft and everything about them,\n\n44\n00:02:02.291 --> 00:02:06.514\nyou should discount Azure, because\nit really is a good infrastructure.\n\n45\n00:02:06.514 --> 00:02:10.519\nAnd a lot of times you can beat the prices\nof AWS, and get exactly what you need.\n\n46\n00:02:10.519 --> 00:02:14.703\nNow if you haven't looked at them at all,\nI'm saying compare them to AWS.\n\n47\n00:02:14.703 --> 00:02:16.887\nWell if you haven't looked at AWS,\nthen you don't necessarily know there.\n\n48\n00:02:16.887 --> 00:02:19.246\nLet's take a look at their website, and\nI'm gonna show you some examples here.\n\n49\n00:02:19.246 --> 00:02:22.326\nAnd I don't care about blockchain or\nthe Coco Framework, or whatever.\n\n50\n00:02:22.326 --> 00:02:27.093\nBut if I scroll down a bit, they've got a\nreally cool graphic, this guy right here,\n\n51\n00:02:27.093 --> 00:02:29.321\nthat shows you what Azure is all about.\n\n52\n00:02:29.321 --> 00:02:33.236\n42 Azure regions, and\na region is like a data center, right.\n\n53\n00:02:33.236 --> 00:02:34.687\nSo this is an entire data center and\n\n54\n00:02:34.687 --> 00:02:36.601\nthey've got them spread\nall over the place.\n\n55\n00:02:36.601 --> 00:02:40.121\nThroughout the US, throughout Europe,\nAsia, there's even,\n\n56\n00:02:40.121 --> 00:02:44.612\nit's off my screen here, Australia's\ndown there, right there, South Africa.\n\n57\n00:02:44.612 --> 00:02:48.186\nThese ones that are triangles,\nthe ones that are coming soon, so\n\n58\n00:02:48.186 --> 00:02:50.992\nit's not exactly in Africa just yet,\nbut Brazil.\n\n59\n00:02:50.992 --> 00:02:55.943\nSo if I wanna spin up a Linux server,\nI don't have to go and buy hardware.\n\n60\n00:02:55.943 --> 00:02:58.539\nI can just deploy it\nright inside of Azure.\n\n61\n00:02:58.539 --> 00:03:01.772\nAnd if I want servers all over\nthe the world, I can do that real\n\n62\n00:03:01.772 --> 00:03:06.163\neasily through their existing data centers\nand have that deployed really quick.\n\n63\n00:03:06.163 --> 00:03:10.699\nPat, how much would it cost me to build a\ndata center in, let's just say two cities.\n\n64\n00:03:10.699 --> 00:03:12.732\n&gt;&gt; $150.\n\n65\n00:03:12.732 --> 00:03:15.012\n&gt;&gt; It would be considerably\nmore than $150.\n\n66\n00:03:15.012 --> 00:03:19.129\nSo, not just the money but to have\nthe knowledge to do it., the skill,\n\n67\n00:03:19.129 --> 00:03:24.020\nthe skilled labor, the other people, the\nsupporting people we need to build that.\n\n68\n00:03:24.020 --> 00:03:25.291\nIt's just not something we can do.\n\n69\n00:03:25.291 --> 00:03:27.157\nMicrosoft has already done it.\n\n70\n00:03:27.157 --> 00:03:31.424\nAnd it makes sense because they have so\nmany services,\n\n71\n00:03:31.424 --> 00:03:34.781\nlike Hotmail and Office 365 and Skype.\n\n72\n00:03:34.781 --> 00:03:36.077\nAnd you might not use any of these.\n\n73\n00:03:36.077 --> 00:03:38.494\nYou might hate with a passion\nevery one of these products, but\n\n74\n00:03:38.494 --> 00:03:40.541\nthe reality is that Microsoft\nhas to have hardware,\n\n75\n00:03:40.541 --> 00:03:43.535\nhas to have data centers all over\nthe world to support that infrastructure.\n\n76\n00:03:43.535 --> 00:03:44.615\nAnd we can piggyback off of that.\n\n77\n00:03:44.615 --> 00:03:50.383\nSo infrastructure like Xbox Live right,\nit is powered by some of the same stuff.\n\n78\n00:03:50.383 --> 00:03:53.814\nSo we can get the same level of\nperformance out of it that they're getting\n\n79\n00:03:53.814 --> 00:03:55.006\nfor their own products.\n\n80\n00:03:55.006 --> 00:03:58.463\nSo that's really the important\npart about using Azure.\n\n81\n00:03:58.463 --> 00:04:01.301\nNow when Azure first launched\nit was Windows only,\n\n82\n00:04:01.301 --> 00:04:03.286\nyou could launch Windows Servers.\n\n83\n00:04:03.286 --> 00:04:07.102\nAnd if you had a developer account, you\ncould also launch Windows desktops, right,\n\n84\n00:04:07.102 --> 00:04:10.547\nwhich didn't make a whole lot sense in\nthe cloud, it still doesn't really,\n\n85\n00:04:10.547 --> 00:04:11.251\nbut you could.\n\n86\n00:04:11.251 --> 00:04:13.033\nThe main thing though\nwere Windows servers.\n\n87\n00:04:13.033 --> 00:04:17.423\nSo Azure was really just limited to\nthe Windows projects that are out there.\n\n88\n00:04:17.423 --> 00:04:20.566\nBut most projects are not Windows\nprojects these days, right.\n\n89\n00:04:20.566 --> 00:04:25.138\nYou've got a lot of Docker activity,\nyou've got a lot of NOJS development, and\n\n90\n00:04:25.138 --> 00:04:28.245\nthings that really are designed\nto run on top of Linux.\n\n91\n00:04:28.245 --> 00:04:31.917\nAnd they'll run on Windows, but you don't\nget the same performance out of it.\n\n92\n00:04:31.917 --> 00:04:34.145\nAnd remember, when you deal with\na cloud solution, what do you pay for?\n\n93\n00:04:34.145 --> 00:04:35.723\nYou pay for performance.\n\n94\n00:04:35.723 --> 00:04:37.223\nAnd so if you're being charged for\n\n95\n00:04:37.223 --> 00:04:40.225\nperformance and you don't get as\ngood a performance out of Windows,\n\n96\n00:04:40.225 --> 00:04:42.830\nthen you're gonna jump over to\nAWS where you can run Linux.\n\n97\n00:04:42.830 --> 00:04:44.410\nSo Microsoft recognized that.\n\n98\n00:04:44.410 --> 00:04:48.123\nAnd instead of saying you remember the old\nSteve Ballmer, we're gonna destroy Linux,\n\n99\n00:04:48.123 --> 00:04:50.549\nor Linux is a cancer, or\nwhatever his stupid saying was.\n\n100\n00:04:50.549 --> 00:04:52.150\n&gt;&gt; [LAUGH]\n&gt;&gt; They said look,\n\n101\n00:04:52.150 --> 00:04:54.163\nlet's just become a part of this.\n\n102\n00:04:54.163 --> 00:04:57.786\nLet's partner up with some of the bigger\ncompanies out there, like Canonical,\n\n103\n00:04:57.786 --> 00:04:58.435\nlike Red Hat.\n\n104\n00:04:58.435 --> 00:05:02.320\nLet's team up with them, and get it where\nyou can spin up Linux systems right here\n\n105\n00:05:02.320 --> 00:05:04.849\non top of Azure, and\nthat's exactly what they did.\n\n106\n00:05:04.849 --> 00:05:09.025\nAnd now today, you can spin systems up,\nand it's a great solution.\n\n107\n00:05:09.025 --> 00:05:11.270\nAnd it's actually part of\nmy recommended solutions.\n\n108\n00:05:11.270 --> 00:05:15.115\nWhat I tell people is, if you're going\nto the cloud, don't go to one cloud.\n\n109\n00:05:15.115 --> 00:05:16.411\nGo to two clouds, right?\n\n110\n00:05:16.411 --> 00:05:21.833\nBecause no matter how big Amazon gets,\nAWS has had outages.\n\n111\n00:05:21.833 --> 00:05:24.851\nAnd no matter how big Azure gets,\nAzure has had outages as well.\n\n112\n00:05:24.851 --> 00:05:29.027\nBut if I deploy an infrastructure and\nI have some in AWS and some in Azure, now,\n\n113\n00:05:29.027 --> 00:05:33.169\nI can survive an entire compafire going\ndown and that's really impressive.\n\n114\n00:05:33.169 --> 00:05:34.993\nI can take advantage of\nboth infrastructures and\n\n115\n00:05:34.993 --> 00:05:36.425\nthat's really the advantage there.\n\n116\n00:05:36.425 --> 00:05:40.522\nSo, again, I know it's weird to be talking\nabout a Microsoft product in a Linux show,\n\n117\n00:05:40.522 --> 00:05:43.887\nbut this is one of those cases where\nwe can actually leverage Linux on top\n\n118\n00:05:43.887 --> 00:05:46.437\nof the Microsoft infrastructure and\nreally win out.\n\n119\n00:05:46.437 --> 00:05:51.426\nSo that's kind of a quick overview of what\nAzure is, and why we might wanna use it.\n\n120\n00:05:51.426 --> 00:05:53.958\n&gt;&gt; Because it's better\nto be safe than sorry.\n\n121\n00:05:53.958 --> 00:05:56.789\nHey, what do we need to know before\nwe spin up our first instance, Todd?\n\n122\n00:05:56.789 --> 00:06:00.021\n&gt;&gt; All right, so the main thing that we\nneed to be aware of before we just start\n\n123\n00:06:00.021 --> 00:06:02.594\nfiring up our machines,\nis that they cost money, right.\n\n124\n00:06:02.594 --> 00:06:05.635\nAnd just like with AWS we've\ngot to pay for that and\n\n125\n00:06:05.635 --> 00:06:07.747\nit is billed based on what you use.\n\n126\n00:06:07.747 --> 00:06:10.339\nSo, Microsoft has tried to be\nvery competitive with AWS.\n\n127\n00:06:10.339 --> 00:06:12.818\nIf you're familiar with their\nstructure then it works here.\n\n128\n00:06:12.818 --> 00:06:14.510\nIf you're not familiar with\nAWS's structure though,\n\n129\n00:06:14.510 --> 00:06:15.488\nthen that means nothing to you.\n\n130\n00:06:15.488 --> 00:06:17.265\nSo, let me show you their pricing.\n\n131\n00:06:17.265 --> 00:06:20.870\nWhen we go to spin up a VM, we're\ngonna spin up a Linux virtual machine.\n\n132\n00:06:20.870 --> 00:06:22.411\nNow, when you spin up a VM,\n\n133\n00:06:22.411 --> 00:06:26.037\nyou actually have to pick what\noperating system you want to run.\n\n134\n00:06:26.037 --> 00:06:28.024\nAnd of course,\nit's gonna default to Windows, right?\n\n135\n00:06:28.024 --> 00:06:31.357\nIf I pull up the little list here, they've\ngot the Windows operating system right\n\n136\n00:06:31.357 --> 00:06:33.500\nhere, and Microsoft SQL Server,\nand SharePoint.\n\n137\n00:06:33.500 --> 00:06:36.397\nGotta have SharePoint, which is\nthe product that I probably hate the most.\n\n138\n00:06:36.397 --> 00:06:38.728\n&gt;&gt; [LAUGH]\n&gt;&gt; But right up top here,\n\n139\n00:06:38.728 --> 00:06:39.932\nI've got my Linux ones.\n\n140\n00:06:39.932 --> 00:06:44.419\nAnd we've got Sentos or Ubuntu,\nRed Had Enterprise, Lennox, R servers,\n\n141\n00:06:44.419 --> 00:06:46.883\nSUSI Lennox, and well that's about it.\n\n142\n00:06:46.883 --> 00:06:49.709\n&gt;&gt; But there was a lot more\nchoices with Amazon, wasn't there.\n\n143\n00:06:49.709 --> 00:06:52.444\n&gt;&gt; Yeah, here it's just,\nwhat, five things.\n\n144\n00:06:52.444 --> 00:06:56.301\nAnd we can't really count our server,\nso it's really just four.\n\n145\n00:06:56.301 --> 00:06:58.251\nNot a whole heck of a lot of choice.\n\n146\n00:06:58.251 --> 00:07:01.957\nIt really boils down to CentOS,\nRed Hat, and SUSI.\n\n147\n00:07:01.957 --> 00:07:04.962\nUbuntu's, well grouped in with\nCentOS right, so it's there.\n\n148\n00:07:04.962 --> 00:07:06.385\nBut I don't see any of the other ones.\n\n149\n00:07:06.385 --> 00:07:09.027\nAmazon, they had their own\nAmazon Linux AMI, right,\n\n150\n00:07:09.027 --> 00:07:10.758\ntheir own custom version of Linux.\n\n151\n00:07:10.758 --> 00:07:15.018\nAnd the main reason here is that\nMicrosoft is not a Linux shop, right?\n\n152\n00:07:15.018 --> 00:07:18.183\nThey're not huge Linux developers,\nat least not yet.\n\n153\n00:07:18.183 --> 00:07:21.219\nSo these are being offered in\ncoordination with the vendors, so\n\n154\n00:07:21.219 --> 00:07:23.765\nit's whoever Microsoft has\nstruck a contract with.\n\n155\n00:07:23.765 --> 00:07:27.011\nAnd they've contracted with Canonical for\nUbuntu,\n\n156\n00:07:27.011 --> 00:07:30.339\nthey've contracted with Red Hat for\nRHEL and CentOS.\n\n157\n00:07:30.339 --> 00:07:33.944\nAnd they've contracted with SUSI,\nwhich is somehow tied in through Novel,\n\n158\n00:07:33.944 --> 00:07:36.615\nI forget how all that works,\nto be able to support those.\n\n159\n00:07:36.615 --> 00:07:39.319\nSo that's where all of that\nsupport is kinda coming from.\n\n160\n00:07:39.319 --> 00:07:43.212\nOver time we'll see this grow, but\nMicrosoft is still kind of getting\n\n161\n00:07:43.212 --> 00:07:46.249\na running start here on\nthe whole Linux side of things.\n\n162\n00:07:46.249 --> 00:07:48.690\nBut, fortunately,\nthey cover the main ones, right?\n\n163\n00:07:48.690 --> 00:07:54.690\nWhen I do production servers, they're\nalmost always RHEL, CentOS, or Ubuntu.\n\n164\n00:07:54.690 --> 00:07:56.002\nAnd those three are right here.\n\n165\n00:07:56.002 --> 00:07:57.363\nWe've got that support, and we can pick.\n\n166\n00:07:57.363 --> 00:07:57.962\n&gt;&gt; Perfect!\n\n167\n00:07:57.962 --> 00:07:59.579\n&gt;&gt; But the pricing is different.\n\n168\n00:07:59.579 --> 00:08:02.802\nI left SUSI out cuz I never deploy SUSI,\nbut I know plenty of people do.\n\n169\n00:08:02.802 --> 00:08:04.112\nNothing against them.\n\n170\n00:08:04.112 --> 00:08:06.853\n[LAUGH] So,\nwhen you choose one of these, though,\n\n171\n00:08:06.853 --> 00:08:09.650\nthe pricing is gonna vary\nbased on what you do.\n\n172\n00:08:09.650 --> 00:08:14.410\nSo, for example, CentOS and\nUbuntu, they are free.\n\n173\n00:08:14.410 --> 00:08:18.440\nYou can go to the CentOS.org website, you\ncan go to Ubuntu., I think they're .com,\n\n174\n00:08:18.440 --> 00:08:21.690\nbut you can go to their website, you can\ndownload their server, and it's free.\n\n175\n00:08:22.950 --> 00:08:24.693\nCentOS doesn't make money at all.\n\n176\n00:08:24.693 --> 00:08:26.780\n[LAUGH] Ubuntu makes money off of support.\n\n177\n00:08:26.780 --> 00:08:28.560\n&gt;&gt; Right.\n&gt;&gt; So they don't charge for the OS.\n\n178\n00:08:28.560 --> 00:08:33.424\nSo when I choose that, I'm gonna see\npricing down here that's based on that\n\n179\n00:08:33.424 --> 00:08:37.376\nkind of idea of a free operating system,\nbut if I choose RHEL or\n\n180\n00:08:37.376 --> 00:08:39.200\nSUSE, those do cost money.\n\n181\n00:08:39.200 --> 00:08:40.464\nSo, when I choose them,\n\n182\n00:08:40.464 --> 00:08:43.670\nthe prices are gonna bump up\na bit to reflect the higher cost.\n\n183\n00:08:43.670 --> 00:08:45.380\nSee how my page had to reload for that?\n\n184\n00:08:45.380 --> 00:08:48.010\nAnd it's because it's gonna\nbe loading those costs.\n\n185\n00:08:48.010 --> 00:08:51.500\nAnother thing that impacts cost\nis where I deploy the machine.\n\n186\n00:08:51.500 --> 00:08:55.790\nIf I deploy the machine here in\nthe US I'll get the lowest prices.\n\n187\n00:08:55.790 --> 00:08:59.010\nMicrosoft is a US-based company, and\nthe US data centers are where they put\n\n188\n00:08:59.010 --> 00:09:02.000\nthe most infrastructure in,\nthese are the lowest cost.\n\n189\n00:09:02.000 --> 00:09:06.057\nWhen I start getting into data\ncenters in China, or Brazil,\n\n190\n00:09:06.057 --> 00:09:09.490\nthe intercontinental ons,\nthose guys cost more.\n\n191\n00:09:09.490 --> 00:09:11.480\nSo that's gonna impact\nmy pricing here as well.\n\n192\n00:09:11.480 --> 00:09:15.070\nSo as we're deploying these instances,\nwe need to think about all of that stuff,\n\n193\n00:09:15.070 --> 00:09:17.930\nand I said instance, darn it,\nI'm trying not to do that.\n\n194\n00:09:17.930 --> 00:09:19.817\nIn the Amazon world we\ncall them instances,\n\n195\n00:09:19.817 --> 00:09:23.132\nin the Microsoft world they just call\nthem VMs, they're virtual machines,\n\n196\n00:09:23.132 --> 00:09:24.621\nsame thing just a different word.\n\n197\n00:09:24.621 --> 00:09:26.310\n&gt;&gt; You say tomato, I say instance.\n\n198\n00:09:26.310 --> 00:09:27.768\n&gt;&gt; Yeah, [LAUGH] it's really like that.\n\n199\n00:09:27.768 --> 00:09:29.345\n&gt;&gt; [LAUGH]\n&gt;&gt; So, but they are just virtual machines,\n\n200\n00:09:29.345 --> 00:09:32.255\nand when I spin them up in different areas\nthey just have a different cost associated\n\n201\n00:09:32.255 --> 00:09:34.040\nwith them, so we need to think about that.\n\n202\n00:09:34.040 --> 00:09:35.927\n&gt;&gt; Right.\n&gt;&gt; Now, I'm gonna do CentOS here in this\n\n203\n00:09:35.927 --> 00:09:39.460\nshow, so I'm gonna go ahead and pick\nCentOS, and then down here beneath that,\n\n204\n00:09:39.460 --> 00:09:41.390\nI'll start to see these different tiers.\n\n205\n00:09:41.390 --> 00:09:44.962\nTiers is like general purpose,\ncompute optimize, memory optimized,\n\n206\n00:09:44.962 --> 00:09:46.965\nthis is very similar to AWS.\n\n207\n00:09:46.965 --> 00:09:49.995\nGeneral purpose means that this is just\na general purpose machine that needs\n\n208\n00:09:49.995 --> 00:09:56.775\na healthy balance of RAM, CPU, and\nhard drive space, or hard drive disk I/O.\n\n209\n00:09:56.775 --> 00:09:58.025\nSo we need a nice balance.\n\n210\n00:09:58.025 --> 00:09:59.062\nI'm leaving network out,\n\n211\n00:09:59.062 --> 00:10:02.885\nbecause you really get a high performance\nnetwork no matter which machine you pick.\n\n212\n00:10:02.885 --> 00:10:05.875\nSo it really does come down to disk I/O,\nprocessor, and\n\n213\n00:10:05.875 --> 00:10:08.020\nmemory, general purpose is a balance.\n\n214\n00:10:08.020 --> 00:10:11.410\nBut if you're running a database server\nthen disk I/O might be more important to\n\n215\n00:10:11.410 --> 00:10:15.330\nyou, or if you're running a web server\nthen CPU might be important to you, or\n\n216\n00:10:15.330 --> 00:10:19.090\nif you're sequencing the human genome,\nCPU is gonna be important.\n\n217\n00:10:19.090 --> 00:10:25.550\nIf you have a NoSQL database then RAM\nmight be what's more important to you.\n\n218\n00:10:25.550 --> 00:10:28.920\nSo you can pick instances based\non that and the cost will vary.\n\n219\n00:10:28.920 --> 00:10:30.622\nUnder the general purpose side,\n\n220\n00:10:30.622 --> 00:10:33.610\nyou'll see a number of different\nvirtual machine sizes.\n\n221\n00:10:33.610 --> 00:10:36.179\nWhen you spin up a virtual machine,\nyou pick a size, and\n\n222\n00:10:36.179 --> 00:10:38.210\nyou can change that\nsize whenever you want.\n\n223\n00:10:38.210 --> 00:10:41.360\nYou just shut the machine down,\nchange its size, boot it back up again.\n\n224\n00:10:41.360 --> 00:10:44.545\nSo I can add more resources on the fly,\nand if you look,\n\n225\n00:10:44.545 --> 00:10:47.259\nhere the general purpose\nones start with an A.\n\n226\n00:10:47.259 --> 00:10:51.087\nWell, they don't just start with an A\nwe'll see there's a few different letters\n\n227\n00:10:51.087 --> 00:10:53.485\nthat will pop up here,\nmore commonly we see the Ds.\n\n228\n00:10:53.485 --> 00:10:58.320\nThe A is designed for testing, it's not\nreally designed for production use.\n\n229\n00:10:58.320 --> 00:11:04.710\nSo A would be the equivalent of Amazon's\nT-series, the T2 micros or whatever.\n\n230\n00:11:04.710 --> 00:11:08.307\nThe As are just not designed for\nproduction use, the Ds are, and\n\n231\n00:11:08.307 --> 00:11:12.435\nwhen you get into the Ds,\nthere's actually version 1, version 2, and\n\n232\n00:11:12.435 --> 00:11:14.210\nversion 3 of the D series.\n\n233\n00:11:14.210 --> 00:11:17.020\nSo you'll see a number of\nthese where it's like this.\n\n234\n00:11:17.020 --> 00:11:21.220\nD1 v2, D2 v2, and so on.\n\n235\n00:11:21.220 --> 00:11:23.660\nD is telling me that it's general purpose.\n\n236\n00:11:23.660 --> 00:11:27.800\nA D1 tells me it's the smallest of the Ds.\n\n237\n00:11:27.800 --> 00:11:31.119\nIf it was D2 or\nD3 it's getting bigger and bigger, and\n\n238\n00:11:31.119 --> 00:11:35.930\nin version 2 there was an older version\nof the D series that used spinning disks.\n\n239\n00:11:35.930 --> 00:11:39.671\nThe newer version of the D series\nuses SSD, faster storage, so\n\n240\n00:11:39.671 --> 00:11:42.480\nwe wanna use the version 2 when we can.\n\n241\n00:11:42.480 --> 00:11:43.813\nSo this D series right here,\n\n242\n00:11:43.813 --> 00:11:47.260\nthese are the ones that I'll usually\ndeploy when I'm doing research, or\n\n243\n00:11:47.260 --> 00:11:51.200\njust kind of spec'ing something out\nuntil I know exactly what I need.\n\n244\n00:11:51.200 --> 00:11:54.151\nYou find sometimes that you just have\nto get a software out there before you\n\n245\n00:11:54.151 --> 00:11:56.578\ncan figure out,\nthis is pretty disk I/O intensive, or\n\n246\n00:11:56.578 --> 00:11:59.650\nthis is pretty RAM intensive, and\nthen you can switch to a different model.\n\n247\n00:11:59.650 --> 00:12:03.022\nBut if you look at how this works,\nyou have a certain amount of cores, and\n\n248\n00:12:03.022 --> 00:12:04.800\nthey get bigger with each tier.\n\n249\n00:12:04.800 --> 00:12:08.200\nSo as I go from D1 to D2,\nI get an extra processor,\n\n250\n00:12:08.200 --> 00:12:11.560\nif I go up to D3 I get two extra\nprocessors, it gets bigger and bigger.\n\n251\n00:12:11.560 --> 00:12:15.120\nSame thing with the amount of memory,\nit's getting larger and larger, and\n\n252\n00:12:15.120 --> 00:12:18.740\nthe amount of storage that we get, and\nnotice how it says temporary storage,\n\n253\n00:12:18.740 --> 00:12:22.290\nthis is storage that gets deleted\nwhen we delete the machine.\n\n254\n00:12:22.290 --> 00:12:26.780\nYou might want to apportion more storage\nlater on that's persistent to your key.\n\n255\n00:12:26.780 --> 00:12:30.945\nBut then if you look at the pricing on it,\nwell, it's about 5,\n\n256\n00:12:30.945 --> 00:12:34.200\nwell let's say $00.06 an hour to run a D1.\n\n257\n00:12:34.200 --> 00:12:35.650\nIt's a pretty low end machine.\n\n258\n00:12:35.650 --> 00:12:39.460\nA D3 is kind of what I consider\nthe typical server these days, and\n\n259\n00:12:39.460 --> 00:12:45.118\nif you look at it it's about $0.23 an hour\nto run that using CentOS, or Ubuntu.\n\n260\n00:12:45.118 --> 00:12:48.620\nBut if I switch that to Red Hat though,\nand I go and\n\n261\n00:12:48.620 --> 00:12:52.830\nlook at that D3 v2, so\nlet me go in my general purpose, and\n\n262\n00:12:52.830 --> 00:12:57.920\nfind that D3 v2, and shoot,\nI picked one that's not a good example,\n\n263\n00:12:57.920 --> 00:13:00.190\ncuz they don't have a D3 v2,\n[LAUGH] they skip it.\n\n264\n00:13:00.190 --> 00:13:03.440\nSo there's a D2, and then there's a D4,\nso they bump past it, so\n\n265\n00:13:03.440 --> 00:13:05.470\nI can't go apples to apples.\n\n266\n00:13:05.470 --> 00:13:07.374\nThen we all have to go back and\ncheck on the D4.\n\n267\n00:13:07.374 --> 00:13:12.403\nBut when you look at here,\nwhat they show is you've got a price for\n\n268\n00:13:12.403 --> 00:13:15.520\nthe server and a price for the software.\n\n269\n00:13:15.520 --> 00:13:19.572\nThere's an extra $0.06 an hour\nbeing tacked onto this thing\n\n270\n00:13:19.572 --> 00:13:21.620\nto cover the Red Hat license.\n\n271\n00:13:21.620 --> 00:13:24.461\nSo depending on which\nversion of Linux you choose,\n\n272\n00:13:24.461 --> 00:13:27.907\nthere might be a license fee\nattached to it, be aware of that.\n\n273\n00:13:27.907 --> 00:13:31.246\nWhen you deploy with Windows,\nMicrosoft covers that license fee.\n\n274\n00:13:31.246 --> 00:13:34.821\nWhen you deploy CentOS, there's no\nlicense fee, because CentOS is free.\n\n275\n00:13:34.821 --> 00:13:39.069\nBut when you deploy Red Hat, or if you\ndeploy SUSE, there is a license fee,\n\n276\n00:13:39.069 --> 00:13:41.780\nit's gotta be paid, and\nthey tack it on there.\n\n277\n00:13:41.780 --> 00:13:44.969\nBut it is billed hourly, which is nice,\ncuz you just get rid of it when you don't\n\n278\n00:13:44.969 --> 00:13:48.120\nneed it anymore, and you're not having\nto buy an outright license like that.\n\n279\n00:13:48.120 --> 00:13:51.590\nSo, be aware of that\npricing on the sizes here.\n\n280\n00:13:51.590 --> 00:13:55.200\nThe other thing is they get more\nexpensive as you get more specialized.\n\n281\n00:13:55.200 --> 00:13:59.449\nI'm still looking at the general purpose\nstuff, so let me collapse that down, and\n\n282\n00:13:59.449 --> 00:14:03.273\nthen if I take a look at compute\noptimized, these are the ones that'll have\n\n283\n00:14:03.273 --> 00:14:06.215\nmore CPU, and you can spot\nthese cuz they start with an F.\n\n284\n00:14:06.215 --> 00:14:10.860\nD was general purpose, F is CPU optimizer,\ncompute optimized, and so\n\n285\n00:14:10.860 --> 00:14:15.971\nwhen I look at F1, F2, F3,\nI'll see they've got those CPU's attached,\n\n286\n00:14:15.971 --> 00:14:18.886\nand these are ones that\nare more dedicated.\n\n287\n00:14:18.886 --> 00:14:21.870\nBefore, we were just talking\nabout a simple cores.\n\n288\n00:14:21.870 --> 00:14:24.650\nThey're actually shared\ncores amongst multiple VM's.\n\n289\n00:14:24.650 --> 00:14:26.900\nHere, we're talking about\ndedicated course, so\n\n290\n00:14:26.900 --> 00:14:31.145\nwe get more performance out of each core\nbecause we chose the F-series to go with.\n\n291\n00:14:31.145 --> 00:14:33.490\nBut RAM is actually smaller,\n\n292\n00:14:33.490 --> 00:14:39.250\nwe got less RAM in the F-series because\nwe're focus on processor power.\n\n293\n00:14:39.250 --> 00:14:42.320\nIf you go to the Memory optimize,\nthese are gonna be more RAM.\n\n294\n00:14:42.320 --> 00:14:43.770\nThese are labeled in E.\n\n295\n00:14:43.770 --> 00:14:48.100\nSo E is their Memory optimized,\nand when you look at these guys,\n\n296\n00:14:48.100 --> 00:14:51.540\nyou'll notice that the CPU still\ngoes up with each version, but\n\n297\n00:14:51.540 --> 00:14:56.020\nthe amount of memory gets really big,\nup to 432 gigs for an E64 right there.\n\n298\n00:14:56.020 --> 00:14:59.718\nThat is a pretty hefty amount of memory\nright there inside of one instance,-\n\n299\n00:14:59.718 --> 00:15:00.745\n&gt;&gt; I'll bet.\n\n300\n00:15:00.745 --> 00:15:05.565\n&gt;&gt; Yep, and then after that, there's\none more, which is the disk optimized,\n\n301\n00:15:05.565 --> 00:15:08.620\nor storage optimized,\nwhich is the L-series.\n\n302\n00:15:08.620 --> 00:15:12.559\nAn L-series, you'll notice they have a\ndecent amount of CPU and memory, but where\n\n303\n00:15:12.559 --> 00:15:16.223\nthey're really optimized is something\nthat doesn't show up on this screen,\n\n304\n00:15:16.223 --> 00:15:17.370\nand that's disk I/O.\n\n305\n00:15:17.370 --> 00:15:20.288\nThey get dedicated performance\nchannels to be able to reach out and\n\n306\n00:15:20.288 --> 00:15:23.413\ntalk to the storage, which is gonna\nmake them do input and output much,\n\n307\n00:15:23.413 --> 00:15:26.200\nmuch faster on a database server,\nyou'll benefit from that.\n\n308\n00:15:26.200 --> 00:15:28.410\nAll of this is gonna impact your cost.\n\n309\n00:15:28.410 --> 00:15:30.624\nSo before you spin up your\nfirst virtual machine,\n\n310\n00:15:30.624 --> 00:15:33.060\nyou need to think about how\nmuch this is gonna cost you.\n\n311\n00:15:33.060 --> 00:15:37.116\nThe other thing you need to think about\nis which one of these classes I wanna use\n\n312\n00:15:37.116 --> 00:15:40.250\nwhen I spin it up, and\nif I pick wrong, it's not a big deal.\n\n313\n00:15:40.250 --> 00:15:42.799\nIf I pick wrong,\nI can just shut the machine down,\n\n314\n00:15:42.799 --> 00:15:46.563\nchange it to a different size, they\ncall these sizes, so I can change it to\n\n315\n00:15:46.563 --> 00:15:50.060\na different size, and then power\nit back up, and I'm in business.\n\n316\n00:15:50.060 --> 00:15:53.851\nThe only time I have to really worry,\nis if it's changing the underlying disk,\n\n317\n00:15:53.851 --> 00:15:57.150\nif I'm going from spinning disk to SSD,\nthat doesn't work so well.\n\n318\n00:15:57.150 --> 00:15:59.467\nYou're better off just rebuilding it.\n\n319\n00:15:59.467 --> 00:16:01.820\nBut most of the other sizes you\ncan move them between them, but\n\n320\n00:16:01.820 --> 00:16:02.826\nit does create downtime.\n\n321\n00:16:02.826 --> 00:16:06.443\nIf you're in production that's a problem,\nif you're in testing it's not a problem.\n\n322\n00:16:06.443 --> 00:16:10.483\nSo in testing, we need to evaluate what\nthe performance of the server looks like.\n\n323\n00:16:10.483 --> 00:16:14.331\nPick the appropriate size, and then we'll\nbe able to launch it inside of that.\n\n324\n00:16:14.331 --> 00:16:17.927\nAnd now we can just kinda bump up or\ndown based on our needs as time goes on.\n\n325\n00:16:17.927 --> 00:16:21.998\nSo that's all a part of getting pair\nbefore we actually start launching our\n\n326\n00:16:21.998 --> 00:16:23.106\nvirtual machines.\n\n327\n00:16:23.106 --> 00:16:26.123\n&gt;&gt; Well Don,\nthis might be a little redundant, but\n\n328\n00:16:26.123 --> 00:16:29.521\nwhere do we get the operating system for\nour instance?\n\n329\n00:16:29.521 --> 00:16:31.859\n&gt;&gt; A lot of things in\na private cloud environment,\n\n330\n00:16:31.859 --> 00:16:33.385\nwe would provide an ISO image.\n\n331\n00:16:33.385 --> 00:16:36.994\nSo we have an ISO, the installation media\nand we go through the installation.\n\n332\n00:16:36.994 --> 00:16:41.360\nBut with Azure, they've already got that\nbuilt up as an installation image and\n\n333\n00:16:41.360 --> 00:16:42.542\nthey got a part of it.\n\n334\n00:16:42.542 --> 00:16:46.990\nIf you watched our AWS show, they had\nAMIs, right, Amazon Machine Images.\n\n335\n00:16:46.990 --> 00:16:47.753\n&gt;&gt; Yes.\n&gt;&gt; Well, in Azure,\n\n336\n00:16:47.753 --> 00:16:49.144\nwe have something very similar.\n\n337\n00:16:49.144 --> 00:16:50.868\nThey have installation images.\n\n338\n00:16:50.868 --> 00:16:53.566\nIn fact, they have a gallery\nthat you can go through to pick.\n\n339\n00:16:53.566 --> 00:16:57.143\nWhen you go to deploy a virtual machine,\nyou can pick from this gallery.\n\n340\n00:16:57.143 --> 00:16:59.999\nAnd there's probably ten\ndifferent ways to get to it, but\n\n341\n00:16:59.999 --> 00:17:02.106\nlet me just kinda give\nyou a quick preview.\n\n342\n00:17:02.106 --> 00:17:07.239\nIf I go to the dashboard, so\nthis is the Azure portal.\n\n343\n00:17:07.239 --> 00:17:09.592\nIf I wanna manage Azure\nthis is where I go.\n\n344\n00:17:09.592 --> 00:17:12.758\nAnd I see all the resources here on\nthe left side that I can manage, and\n\n345\n00:17:12.758 --> 00:17:16.211\nin the middle, I'm just seeing my\ndashboard of kind of what I'm running.\n\n346\n00:17:16.211 --> 00:17:18.269\nRight now,\nI don't have anything in my account so\n\n347\n00:17:18.269 --> 00:17:19.698\nit's kind of sitting here empty.\n\n348\n00:17:19.698 --> 00:17:23.417\nBut on the left side,\nyou can go down here to virtual machines.\n\n349\n00:17:23.417 --> 00:17:27.047\nAnd when you're in here, you'll see all\nthe virtual machines that you got and\n\n350\n00:17:27.047 --> 00:17:28.483\nyou can add a new one from here.\n\n351\n00:17:28.483 --> 00:17:33.405\nAnd when we go to add a new one it's\ngonna take us into that gallery where we\n\n352\n00:17:33.405 --> 00:17:37.030\ncan browse and\nfind our operating systems to run.\n\n353\n00:17:37.030 --> 00:17:38.728\n&gt;&gt; Wonderful.\n&gt;&gt; It's not just operating systems.\n\n354\n00:17:38.728 --> 00:17:41.850\nA lot of times there are operating systems\nthat are packaged with certain software.\n\n355\n00:17:41.850 --> 00:17:44.664\nSo like here,\nthe Barracuda NextGen firewall.\n\n356\n00:17:44.664 --> 00:17:48.150\nIt's a Linux VM,\nthat's running Barracuda's anti virus and\n\n357\n00:17:48.150 --> 00:17:52.240\nantispam software on it, so\nyou can deploy this already preconfigured.\n\n358\n00:17:52.240 --> 00:17:57.328\nWhen you look at it this way, the way that\nI'm showing you here, the gallery view,\n\n359\n00:17:57.328 --> 00:18:01.780\nwe're seeing not just base OSs, but\nalso a lot of additional software.\n\n360\n00:18:01.780 --> 00:18:06.313\nSo in the pricing drop down box, I showed\nyou there were only five or six options,\n\n361\n00:18:06.313 --> 00:18:10.127\nbut here there's hundreds of options,\ntons of different things.\n\n362\n00:18:10.127 --> 00:18:14.855\nBecause it's those five or six base OSs\nwith additional software stacked on top of\n\n363\n00:18:14.855 --> 00:18:16.970\nthem depending on our need.\n\n364\n00:18:16.970 --> 00:18:19.942\nBut this is where we'll get our\ninstallation from in the beginning.\n\n365\n00:18:19.942 --> 00:18:21.402\nIf you're gonna do this long term,\n\n366\n00:18:21.402 --> 00:18:25.030\nyou may find that you need to build your\nown custom installs, and you can do that.\n\n367\n00:18:25.030 --> 00:18:29.218\nYou build a custom installation of\nwhatever operating system it is that\n\n368\n00:18:29.218 --> 00:18:33.848\nyou wanna run, and you can load that up\ninto a storage account inside of Azure.\n\n369\n00:18:33.848 --> 00:18:35.436\nAnd then when you spin up new instances,\n\n370\n00:18:35.436 --> 00:18:37.411\nyou can choose to pull\nfrom that storage account.\n\n371\n00:18:37.411 --> 00:18:38.939\nIt's like owning a hard drive, right.\n\n372\n00:18:38.939 --> 00:18:41.257\nYou can create a hard drive that's\ngot all the data on it that you need.\n\n373\n00:18:41.257 --> 00:18:42.897\nAnd then you just clone it over and\n\n374\n00:18:42.897 --> 00:18:46.245\nover again as you create VMs to get\nthose out and get those deployed.\n\n375\n00:18:46.245 --> 00:18:47.846\nSo it's all done right\nhere from the cloud.\n\n376\n00:18:47.846 --> 00:18:50.954\nWe don't have to worry about\nmounting ISOs it's already got it.\n\n377\n00:18:50.954 --> 00:18:53.741\nIt'll deploy it, and\nthen you have that operating system up and\n\n378\n00:18:53.741 --> 00:18:55.630\nrunning in pretty short order.\n\n379\n00:18:55.630 --> 00:18:57.606\n&gt;&gt; So I have another question\nabout the OS [LAUGH].\n\n380\n00:18:57.606 --> 00:18:59.702\n&gt;&gt; [LAUGH]\n&gt;&gt; Now that we know we want,\n\n381\n00:18:59.702 --> 00:19:01.644\nhow do we launch the instance?\n\n382\n00:19:01.644 --> 00:19:04.057\n&gt;&gt; So launching instance has a few ways.\n\n383\n00:19:04.057 --> 00:19:06.851\nI've kind of gone through\nthe first steps right here, but\n\n384\n00:19:06.851 --> 00:19:08.404\nthis is just one way of doing it.\n\n385\n00:19:08.404 --> 00:19:12.910\nOver here, I went to virtual machines and\nthen I clicked on Add.\n\n386\n00:19:12.910 --> 00:19:14.680\nSo it knew that I wanted\nto make a virtual machine.\n\n387\n00:19:14.680 --> 00:19:17.493\nBut what a lot of people do is\nthey'll start on the dashboard and\n\n388\n00:19:17.493 --> 00:19:20.120\nthey'll just hit the New button up top.\n\n389\n00:19:20.120 --> 00:19:20.958\nAnd when you do that,\n\n390\n00:19:20.958 --> 00:19:23.760\nit doesn't necessarily know that\nyou wanna create a virtual machine.\n\n391\n00:19:23.760 --> 00:19:27.873\nAnd so you get a list here on the left\nside of the whole Azure marketplace\n\n392\n00:19:27.873 --> 00:19:30.340\nbecause you might wanna create storage.\n\n393\n00:19:30.340 --> 00:19:31.636\nYou might wanna create a database server.\n\n394\n00:19:31.636 --> 00:19:33.304\nYou might wanna create\nany number of things.\n\n395\n00:19:33.304 --> 00:19:34.560\nYou'll see this whole list.\n\n396\n00:19:34.560 --> 00:19:35.640\nI might wanna create a block chain.\n\n397\n00:19:35.640 --> 00:19:39.015\nI'm gonna start the next BitCoin,\nthat's all the rage right now.\n\n398\n00:19:39.015 --> 00:19:40.581\n&gt;&gt; [LAUGH]\n&gt;&gt; So I can do that but\n\n399\n00:19:40.581 --> 00:19:46.160\nwhat we're doing is technically\ncalled Azure Compute.\n\n400\n00:19:46.160 --> 00:19:50.012\nAzure Compute is the service that\nprovides virtual machine hosting.\n\n401\n00:19:50.012 --> 00:19:54.650\nAnd from here, I can go through and\npick which operating system that I want.\n\n402\n00:19:54.650 --> 00:19:56.227\nNow, be careful on this.\n\n403\n00:19:56.227 --> 00:20:00.540\nMicrosoft is managing all of\nthis through the vendors.\n\n404\n00:20:00.540 --> 00:20:04.886\nSo when I look at something like\na Red Hat Enterprise Linux install,\n\n405\n00:20:04.886 --> 00:20:10.084\nMicrosoft they host the image, but the\nteam the Red Hat actually made the image.\n\n406\n00:20:10.084 --> 00:20:12.618\nWell that means when there\nis an update that comes out,\n\n407\n00:20:12.618 --> 00:20:15.703\nRed Hat has to update the image that\nthey handed off to Microsoft and\n\n408\n00:20:15.703 --> 00:20:17.900\nMicrosoft has to load it in the system.\n\n409\n00:20:17.900 --> 00:20:21.479\nWell, as of today, the current version\nof Red Hat Enterprise Linux is 7.4.\n\n410\n00:20:21.479 --> 00:20:24.555\nWhat am I looking at here?\n\n411\n00:20:24.555 --> 00:20:28.236\n7.2, okay, and the reason is not\nthat they don't have 7.4 but\n\n412\n00:20:28.236 --> 00:20:31.620\nbecause this is featured it's\nalmost like an advertisement.\n\n413\n00:20:31.620 --> 00:20:33.830\nHey, this is a really popular deployment.\n\n414\n00:20:33.830 --> 00:20:34.928\n&gt;&gt; I didn't know.\n\n415\n00:20:34.928 --> 00:20:39.140\n&gt;&gt; And so here's 7.2, and\nyou might not be ready to go to 7.4.\n\n416\n00:20:39.140 --> 00:20:40.618\nMost people are.\nThe security updates and\n\n417\n00:20:40.618 --> 00:20:43.195\nthings that are in that so\nyou want to get to 7.4.\n\n418\n00:20:43.195 --> 00:20:48.007\nSo when you come through and look, this\nfirst view here, is pretty stripped down.\n\n419\n00:20:48.007 --> 00:20:50.045\nI'm only seeing a handful of things.\n\n420\n00:20:50.045 --> 00:20:54.356\nIn fact, I don't see CentOS at all,\nI don't Ubuntu at all.\n\n421\n00:20:54.356 --> 00:20:55.728\nI see Red Hat.\n\n422\n00:20:55.728 --> 00:20:57.866\nSorry I lied,\nit's right there in front of me, Ubuntu.\n\n423\n00:20:57.866 --> 00:21:00.165\nSo I see Red Hat, I see Ubuntu.\n\n424\n00:21:00.165 --> 00:21:03.487\nI don't see CentOS, I don't see SUSE.\n\n425\n00:21:03.487 --> 00:21:04.459\nSo where are they?\n\n426\n00:21:04.459 --> 00:21:08.080\nIf I had gone the other way, we see\nall the different operating systems.\n\n427\n00:21:08.080 --> 00:21:11.952\nI can hit that See All button right\nhere and we can search and find them.\n\n428\n00:21:11.952 --> 00:21:13.480\nAnd now I'm back in that gallery.\n\n429\n00:21:13.480 --> 00:21:14.032\n&gt;&gt; There you go.\n\n430\n00:21:14.032 --> 00:21:17.400\n&gt;&gt; Now, me personally,\nI don't usually do any of that.\n\n431\n00:21:17.400 --> 00:21:19.134\nWhat I normally do is I\nhit the plus sign and\n\n432\n00:21:19.134 --> 00:21:20.978\nI then just use the search\nfiled right here.\n\n433\n00:21:20.978 --> 00:21:24.605\nCuz it’s too much of a pain to go\nthrough [LAUGH] a number of things.\n\n434\n00:21:24.605 --> 00:21:27.764\nSo I might want to find Red Hat and\nas I start to type it, it'll list for\n\n435\n00:21:27.764 --> 00:21:29.412\nme the various versions of Red Hat.\n\n436\n00:21:29.412 --> 00:21:33.384\nAnd it looks like I'm out of lied,\nI don't think they have.\n\n437\n00:21:33.384 --> 00:21:37.538\nThere's 7.3, they might not have 7.4 yet.\n\n438\n00:21:37.538 --> 00:21:41.651\nLet's search for 7.4, no, they do, yeah.\n\n439\n00:21:41.651 --> 00:21:42.387\n&gt;&gt; There it is.\n\n440\n00:21:42.387 --> 00:21:43.558\n&gt;&gt; So I didn't see it in the list,\n\n441\n00:21:43.558 --> 00:21:45.413\nI didn't even see it in\nthe search suggestions.\n\n442\n00:21:45.413 --> 00:21:47.340\nI had to type it out to find it.\n\n443\n00:21:47.340 --> 00:21:52.031\nAnd there it is, I can have Red Hat\nEnterprise Linux 7.4 if I wanna deploy it,\n\n444\n00:21:52.031 --> 00:21:53.790\npay as I go, and there we are.\n\n445\n00:21:53.790 --> 00:21:57.822\nSo be aware that you might have to search\na bit in order to find the one that you\n\n446\n00:21:57.822 --> 00:21:58.729\nwanna release.\n\n447\n00:21:58.729 --> 00:22:02.204\nJust be careful to pay\nattention to this publisher.\n\n448\n00:22:02.204 --> 00:22:06.904\nA lot of these images are public images,\nones that are provided by the vendor.\n\n449\n00:22:06.904 --> 00:22:08.744\nBut you can create your own image.\n\n450\n00:22:08.744 --> 00:22:10.689\nAnd if you do,\nyou can choose to publish it.\n\n451\n00:22:10.689 --> 00:22:17.110\nAnd that might be something that you trust\nif you published it, but who trusts you.\n\n452\n00:22:17.110 --> 00:22:21.801\nSo if I looked at this, it says Red Hat\nEnterprise Linux 7.4, publisher Don Pezet.\n\n453\n00:22:21.801 --> 00:22:25.625\nWho’s this Don guy, right,\ncan you trust me, am I Red Hat?\n\n454\n00:22:25.625 --> 00:22:30.240\nNo, so make sure you pay attention to\nthat cuz sometimes you'll go in here and\n\n455\n00:22:30.240 --> 00:22:34.660\nyou'll look for a CentOS image for\nexample, and I wanna find CentOS.\n\n456\n00:22:34.660 --> 00:22:38.599\nAnd the official one that Microsoft\nsupports is this one here by\n\n457\n00:22:38.599 --> 00:22:40.022\nRogue Wave Software.\n\n458\n00:22:40.022 --> 00:22:44.904\nAnd if I look though right\nafter that I've got CentOS 6.8\n\n459\n00:22:44.904 --> 00:22:48.340\nfrom SkillGrid or 6.8 from Cloudera.\n\n460\n00:22:48.340 --> 00:22:52.409\nCognosis, Incorporated which\nis a hardened Nginx on Centos.\n\n461\n00:22:52.409 --> 00:22:56.421\nThese are ones that other companies have\nstepped in and created, and if you trust\n\n462\n00:22:56.421 --> 00:23:00.210\nthat company, if you know that company,\nthen it's okay to use that image.\n\n463\n00:23:00.210 --> 00:23:04.889\nBut I've never heard of Cognosis,\nthen I need to go and do some research.\n\n464\n00:23:04.889 --> 00:23:05.755\n&gt;&gt; Mm-hm.\n\n465\n00:23:05.755 --> 00:23:08.587\n&gt;&gt; Is that something that I can trust,\nor I even said, hey Rogue Wave,\n\n466\n00:23:08.587 --> 00:23:10.889\nif that's the official one\nthat Microsoft supports.\n\n467\n00:23:10.889 --> 00:23:12.209\nWhat if I didn't know them?\n\n468\n00:23:12.209 --> 00:23:14.610\nWhat if this is the first time\nI've heard of Rogue Wave?\n\n469\n00:23:14.610 --> 00:23:18.936\nWhich actually that might be true for most\nof you guys cuz they used to be called,\n\n470\n00:23:18.936 --> 00:23:19.657\nOpen Logic.\n\n471\n00:23:19.657 --> 00:23:23.640\nI don't know why they changed that name,\nOpen Logic was a big name.\n\n472\n00:23:23.640 --> 00:23:24.696\nThey used to be a different company.\n\n473\n00:23:24.696 --> 00:23:27.550\nBut if I've never heard of them,\nI don't wanna deploy their image.\n\n474\n00:23:27.550 --> 00:23:31.303\nAlways look for the official images if\nyou can when you're doing a deployment.\n\n475\n00:23:31.303 --> 00:23:35.331\nThat's gonna make a big difference\nespecially in whether you can trust\n\n476\n00:23:35.331 --> 00:23:36.360\nthe image.\n\n477\n00:23:36.360 --> 00:23:40.254\nBut also just know that Microsoft's\nfeatured images aren't necessarily\n\n478\n00:23:40.254 --> 00:23:41.310\nthe most up to date.\n\n479\n00:23:41.310 --> 00:23:44.309\nAnd if you wanna deploy an image and not\nhave to do a ton of updates afterwards,\n\n480\n00:23:44.309 --> 00:23:46.450\nyou wanna search to make sure\nyou find that latest one.\n\n481\n00:23:46.450 --> 00:23:50.581\nSo those are some of the things that we\nneed to think about before we just go\n\n482\n00:23:50.581 --> 00:23:52.975\nin and grab any image and get it deployed.\n\n483\n00:23:52.975 --> 00:23:54.822\nIt's all kind of part of that process.\n\n484\n00:23:54.822 --> 00:23:59.729\nBut once we figure out what we want,\nwe can select an image and then we can go.\n\n485\n00:23:59.729 --> 00:24:01.470\nAnd we can actually get it deployed.\n\n486\n00:24:01.470 --> 00:24:05.160\n&gt;&gt; Well, like you say, Don, trust but\nverify, so we've picked the instance.\n\n487\n00:24:05.160 --> 00:24:06.231\nNow, are we gonna launch it now, or?\n\n488\n00:24:06.231 --> 00:24:08.174\n&gt;&gt; Yeah, launching it is is pretty easy.\n\n489\n00:24:08.174 --> 00:24:10.575\nYou basically click Launch.\n\n490\n00:24:10.575 --> 00:24:11.649\n&gt;&gt; Yay.\n\n491\n00:24:11.649 --> 00:24:13.956\n&gt;&gt; [LAUGH] But then there is a bunch\nof different options that we need to go\n\n492\n00:24:13.956 --> 00:24:15.668\nthrough and review and\nmake sure we choose right.\n\n493\n00:24:15.668 --> 00:24:17.644\nAnd I wanna walk through\nthose with you guys so\n\n494\n00:24:17.644 --> 00:24:20.775\nthat everybody understands what those\noptions are and what they mean.\n\n495\n00:24:20.775 --> 00:24:24.916\nBecause there are some options that are\nnot impossible to change after the fact\n\n496\n00:24:24.916 --> 00:24:27.687\nbut a super pain in the butt\nto change after the fact.\n\n497\n00:24:27.687 --> 00:24:29.850\nSo we wanna make sure we get\nthem right the first time.\n\n498\n00:24:29.850 --> 00:24:31.680\nBut I know we're low in\ntime on this episode.\n\n499\n00:24:31.680 --> 00:24:32.476\nSo let's do this, Zach.\n\n500\n00:24:32.476 --> 00:24:33.336\nLet's break it in part two.\n\n501\n00:24:33.336 --> 00:24:34.002\n&gt;&gt; Okay.\n\n502\n00:24:34.002 --> 00:24:36.179\n&gt;&gt; And in part two,\nwe're gonna launch an instance.\n\n503\n00:24:36.179 --> 00:24:38.772\nI keep saying instance,\nwe're gonna launch a virtual machine.\n\n504\n00:24:38.772 --> 00:24:42.540\nThe Microsoft guys are out there thinking,\nI’m gonna throttled Don.\n\n505\n00:24:42.540 --> 00:24:43.852\nWe're gonna launch a virtual machine.\n\n506\n00:24:43.852 --> 00:24:44.775\n&gt;&gt; VM in this instance.\n\n507\n00:24:44.775 --> 00:24:47.775\n&gt;&gt; We'll see the configuration options to\nkind of get those settings fired up and\n\n508\n00:24:47.775 --> 00:24:49.238\nthen we'll actually have our first.\n\n509\n00:24:49.238 --> 00:24:49.988\n&gt;&gt; Right.\n\n510\n00:24:49.988 --> 00:24:52.258\n&gt;&gt; Up and\nrunning inside of the Azure cloud.\n\n511\n00:24:52.258 --> 00:24:53.555\nSo we'll do all that in part two.\n\n512\n00:24:53.555 --> 00:24:55.909\n&gt;&gt; Right cuz in this\ninstance it's a VM so-\n\n513\n00:24:55.909 --> 00:24:56.792\n&gt;&gt; [LAUGH]\n\n514\n00:24:56.792 --> 00:24:57.415\n&gt;&gt; Creating\n\n515\n00:24:57.415 --> 00:24:59.440\nan Azure VM Don any last words?\n\n516\n00:24:59.440 --> 00:25:03.160\n&gt;&gt; Main thing here is please\ndon't discount Azure.\n\n517\n00:25:03.160 --> 00:25:07.049\nA lot of people are Linux purists and\nI understand that works out great, but\n\n518\n00:25:07.049 --> 00:25:09.719\nin this case they've got\na great infrastructure.\n\n519\n00:25:09.719 --> 00:25:12.935\nIt's definitely something you can\nleverage if nothing else as a back up and\n\n520\n00:25:12.935 --> 00:25:16.090\nyou can run the Linux OS that you\ntrust right there inside of it.\n\n521\n00:25:16.090 --> 00:25:17.199\n&gt;&gt; Great job as usual, Don and\n\n522\n00:25:17.199 --> 00:25:19.767\nLinux in the Cloud there's a whole\nbunch of episodes of watch.\n\n523\n00:25:19.767 --> 00:25:23.239\nMake sure you see them all because\nyou'll be very glad you did.\n\n524\n00:25:23.239 --> 00:25:24.707\n&gt;&gt; And thank you for watching ITProTV.\n\n525\n00:25:24.707 --> 00:25:27.569\nRemember a good IT Pro is always learning.\n\n526\n00:25:27.569 --> 00:25:28.545\nI'm Zach Memos.\n\n527\n00:25:28.545 --> 00:25:29.497\n&gt;&gt; And I'm Don Pezet.\n\n528\n00:25:29.497 --> 00:25:30.705\n&gt;&gt; And we'll see you again very soon.\n\n529\n00:25:30.705 --> 00:25:38.474\n[MUSIC]\n\n530\n00:25:38.474 --> 00:25:40.460\n&gt;&gt; Thank you for watching ITProTV\n\n",
          "vimeoId": "231748623"
        },
        {
          "description": "Don and Zach continue to create an Azure VM, what we need to do before launching the Instance, launching the Instance, logging into the Instance, initial access, and certificate or password.",
          "length": "1211",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-3-1-2-creating_an_azure_vm_pt_2-082917-PGM.00_21_29_04.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-3-1-2-creating_an_azure_vm_pt_2-082917-PGM.00_21_29_04.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-3-1-2-creating_an_azure_vm_pt_2-082917-PGM.00_21_29_04.Still001-sm.jpg",
          "title": "Creating an Azure VM Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:01.240\nWelcome to ITPRO.TV.\n\n2\n00:00:01.240 --> 00:00:06.065\nI'm your host Don [CROSSTALK]\n\n3\n00:00:06.065 --> 00:00:08.216\n[MUSIC]\n\n4\n00:00:08.216 --> 00:00:12.473\n&gt;&gt; Your watching ITPRO.TV\n&gt;&gt; Hello and\n\n5\n00:00:12.473 --> 00:00:16.608\nthank you for choosing ITPRO.TV,\nhelping you learn wherever you go.\n\n6\n00:00:16.608 --> 00:00:20.974\nI'm your host Zach Memos, as we\ncontinue on with Linux in the Clouds,\n\n7\n00:00:20.974 --> 00:00:22.828\ncreating an Azure VM Part 2.\n\n8\n00:00:22.828 --> 00:00:26.090\nBecause we had part one,\nand now we have part 2.\n\n9\n00:00:26.090 --> 00:00:29.170\nAnd Don Pezet is here to tell\nus how to do the rest of this.\n\n10\n00:00:29.170 --> 00:00:30.360\nDon, thanks for joining us.\n\n11\n00:00:30.360 --> 00:00:31.510\n&gt;&gt; Hey, thanks for having me back, Zach.\n\n12\n00:00:31.510 --> 00:00:32.750\nAnd if you watch part 1,\n\n13\n00:00:32.750 --> 00:00:35.190\nyou might have noticed that the title\nof the show was creating an Azure VM.\n\n14\n00:00:35.190 --> 00:00:39.288\nAnd yet somehow, in all of part one,\nwe never actually created an Azure VM.\n\n15\n00:00:39.288 --> 00:00:39.789\n&gt;&gt; We can do it.\n\n16\n00:00:39.789 --> 00:00:41.510\n&gt;&gt; We certainly talk quite a bit about it.\n\n17\n00:00:41.510 --> 00:00:43.700\nWe saw a lot of the different options,\nthe things that we needed.\n\n18\n00:00:43.700 --> 00:00:47.660\nIt was more of a planning to\ncreate [LAUGH] an Azure VM.\n\n19\n00:00:47.660 --> 00:00:50.300\nSo in this part, in part 2, I promise.\n\n20\n00:00:50.300 --> 00:00:52.240\nScout's honor, three fingers,\n\n21\n00:00:52.240 --> 00:00:56.050\nI don't know, whatever it is,\nwe are going to create an Azure VM.\n\n22\n00:00:56.050 --> 00:00:58.010\nRight here in this episode,\nyou have my commitment.\n\n23\n00:00:58.010 --> 00:01:01.339\n[LAUGH] We're gonna take a look at\nwhat's involved in that process, and\n\n24\n00:01:01.339 --> 00:01:04.068\nhow we can get Linux running\nin the Microsoft Azure Cloud.\n\n25\n00:01:04.068 --> 00:01:07.080\n&gt;&gt; So Don, we are now ready\nto create an instance, right?\n\n26\n00:01:07.080 --> 00:01:07.920\nWe're gonna actually do it.\n\n27\n00:01:07.920 --> 00:01:09.758\n&gt;&gt; I promise, I promise.\n\n28\n00:01:09.758 --> 00:01:12.000\n[LAUGH] All right, so\nlet's get in here and get this done.\n\n29\n00:01:12.000 --> 00:01:14.547\nSo I'm in the Azure Portal, this is where\nwe kinda left off in the last episode.\n\n30\n00:01:14.547 --> 00:01:15.211\n&gt;&gt; Yes.\n\n31\n00:01:15.211 --> 00:01:18.430\n&gt;&gt; And, I wanna go ahead and\ncreate an instance.\n\n32\n00:01:18.430 --> 00:01:20.595\nSo I'm just gonna go down\nhere to Virtual Machines.\n\n33\n00:01:20.595 --> 00:01:23.060\nAnd I will choose to add in,\na new virtual machine.\n\n34\n00:01:23.060 --> 00:01:25.046\nAnd I could have also gone to\nthe gallery to get here and\n\n35\n00:01:25.046 --> 00:01:26.468\nit all kinda goes with the same place.\n\n36\n00:01:26.468 --> 00:01:29.540\nAnd, I need to figure out what\noperating system it is that I wanted.\n\n37\n00:01:29.540 --> 00:01:32.040\nAnd remember that the advice I\nwas getting here towards the end,\n\n38\n00:01:32.040 --> 00:01:34.760\nwas just because something\nis recommended or\n\n39\n00:01:34.760 --> 00:01:38.880\nfeatured by Microsoft, doesn't necessarily\nmean if the latest and greatest version.\n\n40\n00:01:38.880 --> 00:01:42.750\nIf I want red hat enterprise,\nlet me tray here I can pick, and\n\n41\n00:01:42.750 --> 00:01:45.560\nwhen I pick it, I see a list over here.\n\n42\n00:01:45.560 --> 00:01:50.594\nAnd the list is 6.7, 6.8,\n7.2, 7.3, and that's it.\n\n43\n00:01:50.594 --> 00:01:54.640\nThere's nothing beneath,\nmy heads not covering anything.\n\n44\n00:01:54.640 --> 00:01:55.713\nWhat about 7.4?\n\n45\n00:01:55.713 --> 00:01:58.323\nRight, I know that run of\nthe enterprise on 7.4 is the latest so\n\n46\n00:01:58.323 --> 00:02:00.081\nsometimes just navigating through here and\n\n47\n00:02:00.081 --> 00:02:03.055\npicking from these are not\nnecessarily the greatest thing to do.\n\n48\n00:02:03.055 --> 00:02:05.770\nWhen, we could always come up here and\nsearch, and\n\n49\n00:02:05.770 --> 00:02:08.170\npotentially find the ones\nthat hadn't shown up yet.\n\n50\n00:02:08.170 --> 00:02:10.820\nJust because they are not\npopular enough to be featured.\n\n51\n00:02:10.820 --> 00:02:14.475\nSo, I'm gonna search for Red Hat\nEnterprise Linux 7.4, there it is, and\n\n52\n00:02:14.475 --> 00:02:15.273\nI can choose it.\n\n53\n00:02:15.273 --> 00:02:18.892\nNow, when I choose to create\nthis Virtual Machine,\n\n54\n00:02:18.892 --> 00:02:23.470\nit's telling me that I'm creating\na Pay as You Go Premium Image.\n\n55\n00:02:23.470 --> 00:02:26.896\nRight, an image is gonna cost a little\nbit of extra money to run, and\n\n56\n00:02:26.896 --> 00:02:30.262\nI showed that in part one It'll\nbe $0.06 an hour extra to cover\n\n57\n00:02:30.262 --> 00:02:32.265\nthe Red Hat Enterprise Linux license.\n\n58\n00:02:32.265 --> 00:02:32.927\n&gt;&gt; Right.\n\n59\n00:02:32.927 --> 00:02:36.405\n&gt;&gt; If I don't want that, if I wanna\ngo a little bit more on the cheap,\n\n60\n00:02:36.405 --> 00:02:37.624\nI can switch this out.\n\n61\n00:02:37.624 --> 00:02:40.430\nAnd I can say, you know what,\nI wanna do CentOS.\n\n62\n00:02:40.430 --> 00:02:44.910\nAnd so maybe I'll choose CentOS,\nand CentOS 7,\n\n63\n00:02:44.910 --> 00:02:49.760\nlet's see if they have CentOS 7.4,\nwe'll do 7.3.\n\n64\n00:02:49.760 --> 00:02:53.120\nSo, I can come in and I can find CentOS,\nand get that deployed or whatever.\n\n65\n00:02:53.120 --> 00:02:58.000\nAnd it won't have that\nsame kind of extra charge.\n\n66\n00:02:58.000 --> 00:02:59.460\nSo, see when I choose that one,\n\n67\n00:02:59.460 --> 00:03:01.740\nit's not telling me that you got\na pay as you go image over here.\n\n68\n00:03:01.740 --> 00:03:02.880\nIt just saying it's gonna happen.\n\n69\n00:03:02.880 --> 00:03:04.450\nSo, I need to make that choice.\n\n70\n00:03:04.450 --> 00:03:05.870\nThe next choice that I get,\n\n71\n00:03:05.870 --> 00:03:08.830\nis right down here at the bottom where it\nask me to select the deployment model.\n\n72\n00:03:08.830 --> 00:03:10.990\nNow, the deployment model\nis kind of interesting.\n\n73\n00:03:10.990 --> 00:03:13.764\nThere's two different models,\nthere's the classic model and\n\n74\n00:03:13.764 --> 00:03:15.570\nthe resource manager model, all right.\n\n75\n00:03:15.570 --> 00:03:17.860\nYou want to do the resource manager model.\n\n76\n00:03:17.860 --> 00:03:23.400\nWhen you create an Azure VM, there's a lot\nmore to it than just a virtual machine.\n\n77\n00:03:23.400 --> 00:03:27.950\nThere's an IP address, there's\na security group of firewall services,\n\n78\n00:03:27.950 --> 00:03:31.710\nthere's a routing infrastructure,\nthere's network interfaces.\n\n79\n00:03:31.710 --> 00:03:36.260\nAll these different components that go\ntogether, to make the virtual machine.\n\n80\n00:03:36.260 --> 00:03:40.171\nWell, in the classic model, I would\ncreate a virtual machine by itself, and\n\n81\n00:03:40.171 --> 00:03:42.474\nthen I would add all\nthese other things to it.\n\n82\n00:03:42.474 --> 00:03:44.539\nAnd at the end of the day,\nwhen I deleted the virtual machine,\n\n83\n00:03:44.539 --> 00:03:47.820\nit was a pain, because I had to delete all\nthese other components that were with It.\n\n84\n00:03:47.820 --> 00:03:50.040\nThe new model uses resource manager, and\n\n85\n00:03:50.040 --> 00:03:54.340\nit will create a resource group to\ncollect all that stuff together.\n\n86\n00:03:54.340 --> 00:03:56.990\nAnd by doing that,\nI can now manage it as a whole.\n\n87\n00:03:56.990 --> 00:03:59.920\nWhen I no longer need this virtual\nmachine, I can delete it and\n\n88\n00:03:59.920 --> 00:04:04.030\nits interfaces, its IPs, its routes, its\nfirewall, all that stuff will go with it\n\n89\n00:04:04.030 --> 00:04:06.940\nand I don't have to worry about leaving\na cluttered mess all over the place.\n\n90\n00:04:06.940 --> 00:04:09.110\nResource groups really make\nit easier to manage stuff.\n\n91\n00:04:09.110 --> 00:04:10.320\nSo you don't want the new model.\n\n92\n00:04:10.320 --> 00:04:14.210\nThe only thing reason to do classic\nanymore is if you just have some kind of,\n\n93\n00:04:14.210 --> 00:04:17.680\nlike corporate policy that already\ndictate, this is how you're gonna do it\n\n94\n00:04:17.680 --> 00:04:21.730\nand you'd wanna follow that policy but\notherwise you wanna do resource manager.\n\n95\n00:04:21.730 --> 00:04:25.030\nNow I'm gonna in create, but\nit's not actually creating it yet.\n\n96\n00:04:25.030 --> 00:04:27.980\nNow it's gonna start asking me\na bunch of important questions like,\n\n97\n00:04:27.980 --> 00:04:29.170\nwhat I wanna name it?\n\n98\n00:04:29.170 --> 00:04:34.909\nSo I'll just call mine lab-web server 01,\nit's gonna be a web server for me.\n\n99\n00:04:34.909 --> 00:04:38.158\nI can pick the disk type,\nnow it's gonna default to SSD, but\n\n100\n00:04:38.158 --> 00:04:42.427\nI can choose to go with the traditional\nspinning disk if I want, it's slower but\n\n101\n00:04:42.427 --> 00:04:45.065\nit's cheaper so\nif cost is an issue Issue for me.\n\n102\n00:04:45.065 --> 00:04:46.585\nI can save a little money there.\n\n103\n00:04:46.585 --> 00:04:49.455\nDo note, that if you pick a spinning disk,\n\n104\n00:04:49.455 --> 00:04:52.165\nthere's some redundancy functions in\nAzure that won't work for you anymore.\n\n105\n00:04:52.165 --> 00:04:55.166\nMicrosoft's really focused on the SSD\nside, they expect it to be SSD,\n\n106\n00:04:55.166 --> 00:04:56.625\nthat's why that's the default.\n\n107\n00:04:56.625 --> 00:04:57.361\n&gt;&gt; Mm-hm.\n\n108\n00:04:57.361 --> 00:04:59.945\n&gt;&gt; Then I need to specify\na default username, right?\n\n109\n00:04:59.945 --> 00:05:02.785\nSo if I'm gonna get logged into this,\nwho do I log in as?\n\n110\n00:05:02.785 --> 00:05:04.075\nAnd this is one area where,\n\n111\n00:05:04.075 --> 00:05:06.990\nI kind of like the way Microsoft\ndoes it better than Amazon.\n\n112\n00:05:06.990 --> 00:05:08.742\nBut Amazon,\nthey give us a default user, right?\n\n113\n00:05:08.742 --> 00:05:11.273\nEC2-user or Ubuntu.\n\n114\n00:05:11.273 --> 00:05:15.135\nHere, I pick a username, so I can make\na user account called DpoSet, or admin or\n\n115\n00:05:15.135 --> 00:05:16.810\nwhatever I want it to be.\n\n116\n00:05:16.810 --> 00:05:22.130\nAnd then, I can choose do I want\nto do an SSH key, do I want\n\n117\n00:05:22.130 --> 00:05:25.210\nto do certificated based authentication,\nor do I want to do a password?\n\n118\n00:05:25.210 --> 00:05:28.680\nI get to pick, it's not being forced\non me to do one way over the other.\n\n119\n00:05:28.680 --> 00:05:31.224\nI know certificate passwords are better,\nbut,\n\n120\n00:05:31.224 --> 00:05:34.397\nI might wanna set up the certificates\nmyself after the fact.\n\n121\n00:05:34.397 --> 00:05:37.700\nAnd so I might wanna start\nwith a password instead.\n\n122\n00:05:37.700 --> 00:05:39.800\nAnd so it's nice that we have that choice,\nI'll come in and I'll put it.\n\n123\n00:05:39.800 --> 00:05:42.150\nIt does require a strong password.\n\n124\n00:05:42.150 --> 00:05:44.050\nI think it's gotta be twelve characters.\n\n125\n00:05:44.050 --> 00:05:49.251\nSo, I gotta pick something kind of on the\nlonger side and I have to type it right so\n\n126\n00:05:49.251 --> 00:05:54.610\nI can remember it, And so\nI'll punch in a password to use.\n\n127\n00:05:54.610 --> 00:06:00.866\nBut, again, ultimately I'll want to,\nI'll want to concentrate when I type so\n\n128\n00:06:00.866 --> 00:06:04.363\nI can get it right,\nI typed it wrong, great.\n\n129\n00:06:04.363 --> 00:06:07.433\nThis is gonna be the hardest part of\nthe whole show is just typing my password.\n\n130\n00:06:09.839 --> 00:06:12.181\nAnd there we go, all right, so\nI'm gonna check that password and\n\n131\n00:06:12.181 --> 00:06:15.215\nthen once I get logged in I can change the\nauthentication to whatever I want, right?\n\n132\n00:06:15.215 --> 00:06:18.480\nBut it's nice that we have that choice\nto kind of pick what we're gonna do.\n\n133\n00:06:18.480 --> 00:06:21.370\nAnd then, my subscription, right?\n\n134\n00:06:21.370 --> 00:06:24.460\nIn Azure, you have a subscription\nthis is your billing information.\n\n135\n00:06:24.460 --> 00:06:26.910\nMost of us only have one subscription,\nyour company.\n\n136\n00:06:26.910 --> 00:06:29.215\nYou have one subscription and\nthat's where everything gets built to.\n\n137\n00:06:29.215 --> 00:06:30.682\nBut if you're a contractor or\n\n138\n00:06:30.682 --> 00:06:34.334\na consultant, you might have different\ndescription for each customer.\n\n139\n00:06:34.334 --> 00:06:37.910\nSo I might have 5 customers I have 5\nsubscriptions, now pick a popular one,\n\n140\n00:06:37.910 --> 00:06:39.458\nthat simply a billing decision.\n\n141\n00:06:39.458 --> 00:06:42.709\nAll right, then the resource group\nremember I mentioned the resource group.\n\n142\n00:06:42.709 --> 00:06:45.270\nThey can gather all\nthe components together.\n\n143\n00:06:45.270 --> 00:06:48.810\nI can create a new one, or\nI can use an existing one.\n\n144\n00:06:48.810 --> 00:06:50.220\nI use an existing as need.\n\n145\n00:06:50.220 --> 00:06:52.340\nI can group multiple servers together.\n\n146\n00:06:52.340 --> 00:06:57.270\nI might have a web server, a database\nserver and a application server.\n\n147\n00:06:57.270 --> 00:06:59.960\nAnd the three of them work\ntogether to provide my service.\n\n148\n00:06:59.960 --> 00:07:01.560\nSo I put them on the same resource group.\n\n149\n00:07:01.560 --> 00:07:02.470\nSo I know they go together.\n\n150\n00:07:02.470 --> 00:07:04.920\nAnd if I fail over from one\ndata center to another,\n\n151\n00:07:04.920 --> 00:07:06.800\nI can fail the whole resource group over.\n\n152\n00:07:06.800 --> 00:07:10.070\nThey all move as a team,\nso I can combine them.\n\n153\n00:07:10.070 --> 00:07:13.045\nThis is all new right, so\nI'll just create a resource group so\n\n154\n00:07:13.045 --> 00:07:15.107\nI'll just pull out lab-webservers, and\n\n155\n00:07:15.107 --> 00:07:18.676\nin the future I can throw whatever web\nservers I want inside of this group.\n\n156\n00:07:18.676 --> 00:07:22.885\nAnd then the location, I mentioned the\nlast episode that most of these options\n\n157\n00:07:22.885 --> 00:07:26.772\ncan be changed after the fact, but\none are just really really hard to do,\n\n158\n00:07:26.772 --> 00:07:30.260\nwell location is one of those\nthat are really hard to do.\n\n159\n00:07:30.260 --> 00:07:34.320\nWhen you deploy an instance,\nit's deployed to one location.\n\n160\n00:07:34.320 --> 00:07:37.530\nAnd you can do a fail over to move\nit to another location later on,\n\n161\n00:07:37.530 --> 00:07:40.590\nbut it's not really convenient.\n\n162\n00:07:40.590 --> 00:07:41.830\nIt's not really easy to do.\n\n163\n00:07:41.830 --> 00:07:45.380\nSo, we want to try and put it in\nthe right location in the beginning.\n\n164\n00:07:45.380 --> 00:07:48.072\nIf we want to move it somewhere else down\nthe road, it's usually easier to clone\n\n165\n00:07:48.072 --> 00:07:50.095\nthe virtual machine and\nthen deploy it in the new location.\n\n166\n00:07:50.095 --> 00:07:53.096\nAnd that's the better way to\ngo about it than to try and\n\n167\n00:07:53.096 --> 00:07:54.774\nmove it just automatically.\n\n168\n00:07:54.774 --> 00:07:56.253\nBut, we put it in the right location.\n\n169\n00:07:56.253 --> 00:07:58.096\nNormally, you want to\nthink about two things.\n\n170\n00:07:58.096 --> 00:08:01.184\nOne is cost,\nbecause different data centers cost more.\n\n171\n00:08:01.184 --> 00:08:04.282\nAnd then two you need to think about\nthe location of your customer.\n\n172\n00:08:04.282 --> 00:08:08.970\nWe want this to be as close as possible\nto the people who are gonna use it.\n\n173\n00:08:08.970 --> 00:08:12.450\nIf I got a bunch of people to be hitting\nthis website that are in Australia,\n\n174\n00:08:12.450 --> 00:08:16.269\nwouldn't it be nice to put this over in\nAustralia or at least Southeast Asia, and\n\n175\n00:08:16.269 --> 00:08:17.354\nget it closer to them?\n\n176\n00:08:17.354 --> 00:08:19.363\nThey'll get better performance out of it,\nright?\n\n177\n00:08:19.363 --> 00:08:19.967\n&gt;&gt; Mm-hm, mm-hm.\n\n178\n00:08:19.967 --> 00:08:23.482\n&gt;&gt; But if I'm using it here in the US,\nthen I wanna pick East or West US,\n\n179\n00:08:23.482 --> 00:08:24.670\nthere's Central US.\n\n180\n00:08:24.670 --> 00:08:29.020\nThere's a couple that you have available\nto choose from, South Central US,\n\n181\n00:08:29.020 --> 00:08:29.980\nwhich is actually Texas.\n\n182\n00:08:29.980 --> 00:08:33.360\nSo you've got really\na lot of choices here.\n\n183\n00:08:33.360 --> 00:08:36.060\nNotice how there's an East US and\nan East US 2.\n\n184\n00:08:36.060 --> 00:08:41.300\nEast US 2 is the newer one, a newer data\ncenter which they built out with all SSD.\n\n185\n00:08:41.300 --> 00:08:44.450\nEast US the original has a lot\nof the spinning disks in it too.\n\n186\n00:08:44.450 --> 00:08:48.100\nSo that's gonna change based on\nthe choices I made for hardware.\n\n187\n00:08:48.100 --> 00:08:51.339\nI might get limited to a certain data\ncenter, there might be certain types like,\n\n188\n00:08:51.339 --> 00:08:54.628\ncompute optimized instances that might not\nbe able to available in the data center\n\n189\n00:08:54.628 --> 00:08:55.265\nthat I choose.\n\n190\n00:08:55.265 --> 00:09:00.016\nSo location is really going to impact\na lot of what options are available to me\n\n191\n00:09:00.016 --> 00:09:01.361\non the next screens.\n\n192\n00:09:02.743 --> 00:09:04.205\nNow once I get that set, I can hit OK.\n\n193\n00:09:04.205 --> 00:09:06.540\nAnd now we get to the size.\n\n194\n00:09:06.540 --> 00:09:09.980\nFortunately size is an easy one to change\nafter the fact, so if I get this wrong,\n\n195\n00:09:09.980 --> 00:09:11.430\nI can always fix it later.\n\n196\n00:09:11.430 --> 00:09:18.244\nBut what's it's gonna show me\nare the recommended sizes for me.\n\n197\n00:09:18.244 --> 00:09:21.669\nAnd I can filter based on the type of\ndisk as well as the amount of CPUs and\n\n198\n00:09:21.669 --> 00:09:25.620\nmemory that I'm looking for, and\nit'll show me the recommendations.\n\n199\n00:09:25.620 --> 00:09:27.563\nIt starts by showing the d series, right?\n\n200\n00:09:27.563 --> 00:09:33.435\nRemember d is general purpose, and ds,\nthose are general purpose with ssd, right?\n\n201\n00:09:33.435 --> 00:09:38.219\nSo I'm seeing DS1, DS2, DS11,\nand it's showing me what it would\n\n202\n00:09:38.219 --> 00:09:43.530\ncost if I run that virtual machine\n24 hours a day for an entire month.\n\n203\n00:09:43.530 --> 00:09:48.030\nSo if I ran a DS1 24 hours a day for an\nentire month, it would cost me almost $50.\n\n204\n00:09:48.030 --> 00:09:53.669\nBut if I ran a DS11 24 hours a day for\nan entire month it would cost $130.\n\n205\n00:09:53.669 --> 00:09:57.630\nThat's a pretty big difference,\nover twice as much, almost three times.\n\n206\n00:09:57.630 --> 00:10:01.390\nBut instead of 3 and a half gigs of\nmemory, I'm getting 14 gigs of memory.\n\n207\n00:10:01.390 --> 00:10:06.732\nInstead of 1 VCPU, I get 2 and\njust 3,200 Ihops, here I get 6,400 Ihops.\n\n208\n00:10:06.732 --> 00:10:08.033\nI get double the disk performance.\n\n209\n00:10:08.033 --> 00:10:11.936\nSo that's what you get by paying extra,\nyou get more performance right?\n\n210\n00:10:11.936 --> 00:10:15.735\nBut if you click view all,\nyou'll see the whole list,\n\n211\n00:10:15.735 --> 00:10:20.702\nthe whole list for US East 2,\ncuz I picked US East 2 data center right?\n\n212\n00:10:20.702 --> 00:10:26.354\nSo as I scroll down now I'm starting\nto see not just DS1 but DS1 version 2.\n\n213\n00:10:26.354 --> 00:10:30.810\nThe new versions of the DS1s and\nDS2s, DS3.\n\n214\n00:10:30.810 --> 00:10:35.050\nAs I scroll down I'll start to see\ncompute instances or memory optimized,\n\n215\n00:10:35.050 --> 00:10:36.569\nseeing a lot of Ds.\n\n216\n00:10:36.569 --> 00:10:37.757\nThere was L.\n\n217\n00:10:37.757 --> 00:10:38.907\nHere, remember L?\n\n218\n00:10:38.907 --> 00:10:40.417\nThose are the storage optimized ones?\n\n219\n00:10:40.417 --> 00:10:46.040\nF was the compute optimized,\nso there they are.\n\n220\n00:10:46.040 --> 00:10:48.500\nGot extra CPU dedication to them.\n\n221\n00:10:48.500 --> 00:10:51.387\nAnd then somewhere in here,\nwe'll find Es, or not.\n\n222\n00:10:51.387 --> 00:10:54.598\nThere's no Es,\nI guess US E2s doesn't have it, so\n\n223\n00:10:54.598 --> 00:10:57.240\nI don't see the memory optimized one.\n\n224\n00:10:57.240 --> 00:11:00.210\nSo if I want memory optimized\nI'm gonna need to go back.\n\n225\n00:11:00.210 --> 00:11:03.050\nIf I move back over here to the left\nI can go back to Basics, and\n\n226\n00:11:03.050 --> 00:11:04.800\nI can choose a different data center.\n\n227\n00:11:04.800 --> 00:11:07.130\nIf I choose a different\nlocation maybe I'll move to,\n\n228\n00:11:07.130 --> 00:11:09.500\nlet's just try the older East US.\n\n229\n00:11:09.500 --> 00:11:12.900\nI'll go East US and I'll hit OK.\n\n230\n00:11:12.900 --> 00:11:16.430\nAnd now when I go to choose my size.\n\n231\n00:11:16.430 --> 00:11:20.000\nI hit view all, actually, it was right\nthere, I shouldn't have view all, but\n\n232\n00:11:20.000 --> 00:11:22.260\nthe E series, it just appeared,\nthere they are.\n\n233\n00:11:22.260 --> 00:11:25.883\nE, so if you're missing a size it might\nbe because you chose the data center\n\n234\n00:11:25.883 --> 00:11:28.197\nthat doesn't have the hardware for\nthat size.\n\n235\n00:11:28.197 --> 00:11:31.600\nYou might have to shop around a little bit\nto find exactly what you're looking for.\n\n236\n00:11:31.600 --> 00:11:34.006\nHere is the memory optimize ones,\nI'll choose that if I want.\n\n237\n00:11:34.006 --> 00:11:36.815\nQ, for the show thought let me try and\n\n238\n00:11:36.815 --> 00:11:40.926\npick something that's not\ngonna run us broke [LAUGH].\n\n239\n00:11:40.926 --> 00:11:43.465\n&gt;&gt; [LAUGH]\n&gt;&gt; It's just running it for a day so\n\n240\n00:11:43.465 --> 00:11:48.384\nit's not that big of a deal, I'll do\na D2S version 3, we'll go ahead and\n\n241\n00:11:48.384 --> 00:11:49.580\nchoose that one.\n\n242\n00:11:49.580 --> 00:11:54.780\nWhich if I leave running for a long period\nof time will cost me $75 over a month.\n\n243\n00:11:54.780 --> 00:11:57.441\nI'll go ahead and choose that,\nand then my other settings.\n\n244\n00:11:57.441 --> 00:11:59.310\nDo I want high availability?\n\n245\n00:11:59.310 --> 00:12:02.150\nAnd this gets a little outside of the\nscope of what I can do in this show, but\n\n246\n00:12:02.150 --> 00:12:05.280\nif you watch our Azure shows,\nI'll show you how to set this up.\n\n247\n00:12:05.280 --> 00:12:09.150\nWe have a whole series on Microsoft Azure,\nbut you can make it where you service is\n\n248\n00:12:09.150 --> 00:12:13.900\nspread across multiple data centers or\nmultiple racks inside of a data center,\n\n249\n00:12:13.900 --> 00:12:16.100\nto make it where you have a little\nmore redundancy and availability.\n\n250\n00:12:16.100 --> 00:12:17.770\nI'm gonna leave that off.\n\n251\n00:12:17.770 --> 00:12:20.890\nThe virtual network, subnet,\nand IPs, we can come in and\n\n252\n00:12:20.890 --> 00:12:23.350\ncustomize any of those\nto tailor that machine.\n\n253\n00:12:23.350 --> 00:12:26.500\nI can tell it whether or\nnot I want to automatically shut it\n\n254\n00:12:26.500 --> 00:12:30.260\ndown after a period of time, if you\nknow you're not gonna need it anymore.\n\n255\n00:12:30.260 --> 00:12:33.970\nAnd then you've got a few other just\nbasic little tweaks and options here.\n\n256\n00:12:33.970 --> 00:12:35.147\nI'm gonna leave these all to default,\n\n257\n00:12:35.147 --> 00:12:37.009\nand we'll talk more about\nconfiguring these later.\n\n258\n00:12:38.780 --> 00:12:41.348\nAlright after that it's got pretty much\neverything that it needs to know so\n\n259\n00:12:41.348 --> 00:12:42.622\nI'm gonna get the Purchase Screen.\n\n260\n00:12:42.622 --> 00:12:45.310\nAnd when they say, purchase,\nyou're really renting.\n\n261\n00:12:45.310 --> 00:12:46.878\nYou're renting this machine\nwhile it's running.\n\n262\n00:12:46.878 --> 00:12:49.850\nBut if there's a software license\nyou might have to pay more.\n\n263\n00:12:49.850 --> 00:12:51.900\nIt's warning me that I'm agreeing,\n\n264\n00:12:51.900 --> 00:12:54.030\nI'm entering a contract\nto pay ten cents an hour.\n\n265\n00:12:54.030 --> 00:12:57.495\nWhile this machine is running I\nwill pay ten cents an hour, and\n\n266\n00:12:57.495 --> 00:12:59.840\nthey'll be other fees for\nthe storage that I use.\n\n267\n00:12:59.840 --> 00:13:03.850\nSo it's just kind of letting me know that,\nand I'll choose to purchase.\n\n268\n00:13:03.850 --> 00:13:04.940\nIf I had chosen Red Hat or Susi,\n\n269\n00:13:04.940 --> 00:13:08.240\nthere would have been a note in there\nabout that software agreement as well.\n\n270\n00:13:08.240 --> 00:13:11.880\nAnd at this point it's now\ndeploying my virtual machine.\n\n271\n00:13:11.880 --> 00:13:14.120\nSo it's going out to\nthe US East data center.\n\n272\n00:13:14.120 --> 00:13:18.250\nIt's allocating the hardware, it's putting\nthe operating system on there which we did\n\n273\n00:13:18.250 --> 00:13:21.830\nCintas 7.3, so\nit's putting it on that machine.\n\n274\n00:13:21.830 --> 00:13:26.563\nAnd spinning it up, making it active, and\nsetting it up so that we can get the tool.\n\n275\n00:13:26.563 --> 00:13:31.877\n&gt;&gt; So Don, now that the instance VM is\nup and running, how do we log into it?\n\n276\n00:13:31.877 --> 00:13:35.035\n&gt;&gt; All right, once the virtual machine is\nrunning, we need to get logged into it and\n\n277\n00:13:35.035 --> 00:13:37.970\nwe saw the screen where it was asking\nme to pick a default username, right?\n\n278\n00:13:37.970 --> 00:13:41.010\nAnd I put DPZAP in there, so\nwhatever name you put in.\n\n279\n00:13:41.010 --> 00:13:43.550\nAnd then, it was SSH, right?\n\n280\n00:13:43.550 --> 00:13:46.390\nSSH is the protocol that's enabled\nby default for us to get in and\n\n281\n00:13:46.390 --> 00:13:47.150\nwork with the system.\n\n282\n00:13:47.150 --> 00:13:49.030\nAnd remember, these don't have\na graphical user interface.\n\n283\n00:13:49.030 --> 00:13:52.440\nSo I can't pull up some console on\nthem and see anything fancy there.\n\n284\n00:13:52.440 --> 00:13:53.920\nAll I need to do is SSH.\n\n285\n00:13:53.920 --> 00:13:56.510\nIf I chose to do\ncertificate authentication,\n\n286\n00:13:56.510 --> 00:13:58.720\nI need to make sure I've got\nmy certificate file ready.\n\n287\n00:13:58.720 --> 00:14:01.300\nIf I chose to get a password,\nI need to know my password.\n\n288\n00:14:01.300 --> 00:14:02.360\nBut then, we're able to log in.\n\n289\n00:14:02.360 --> 00:14:05.770\nNow, right now it's actively\ndeploying that virtual machine, and\n\n290\n00:14:05.770 --> 00:14:08.230\nif you wanna see the status,\nyou can click the bell up top.\n\n291\n00:14:08.230 --> 00:14:10.510\nAnd you'll see the deployment\nis in progress.\n\n292\n00:14:10.510 --> 00:14:14.310\nAs soon as that deployment is done\nthe machine will be up and running.\n\n293\n00:14:14.310 --> 00:14:18.560\nBut while I'm waiting you can just kind\nof click on it in the dashboard or\n\n294\n00:14:18.560 --> 00:14:20.470\nyou can go over here to virtual machines.\n\n295\n00:14:20.470 --> 00:14:22.520\nYou can find the virtual machine and\n\n296\n00:14:22.520 --> 00:14:26.010\nyou can at least figure out what IP\naddress is going to be assigned to it.\n\n297\n00:14:26.010 --> 00:14:28.900\nWhen I click on the virtual machine,\nit's gonna come in here and\n\n298\n00:14:28.900 --> 00:14:30.520\nshow me some information about it.\n\n299\n00:14:30.520 --> 00:14:34.070\nAnd while the virtual machine\nis not ready yet, I can see\n\n300\n00:14:34.070 --> 00:14:39.490\nif I look at the details that it's already\ngot a public IP address right there.\n\n301\n00:14:39.490 --> 00:14:41.110\nAnd oops, I didn't mean to click on that.\n\n302\n00:14:41.110 --> 00:14:46.920\nSo let me go back here, and\ngo back to the overview.\n\n303\n00:14:46.920 --> 00:14:48.830\nWhat I wanted to do was\ncopy that IP address,\n\n304\n00:14:48.830 --> 00:14:52.750\nand the way the Azure portal works is,\nif you flow over most values you'll see\n\n305\n00:14:52.750 --> 00:14:55.080\na little icon appear over\nhere to be able to copy it.\n\n306\n00:14:55.080 --> 00:14:57.600\nAnd so I can copy that value,\nI'm just copying the IP,\n\n307\n00:14:57.600 --> 00:15:00.600\ncuz I'm gonna use that to remote\ninto this machine in a moment.\n\n308\n00:15:00.600 --> 00:15:04.765\nI'm gonna fire up a terminal\non my own computer and\n\n309\n00:15:04.765 --> 00:15:08.839\nI'll say ssh deposit@ and\nI'll punch in an IP.\n\n310\n00:15:08.839 --> 00:15:12.719\nIf I was using certificate based\nauthentication I would use a -i, and\n\n311\n00:15:12.719 --> 00:15:16.991\nI will point to my certificate file that\nI have loaded to be able to reach out and\n\n312\n00:15:16.991 --> 00:15:17.950\nconnect.\n\n313\n00:15:17.950 --> 00:15:19.440\nI chose to do password so\n\n314\n00:15:19.440 --> 00:15:23.010\nthat i could set this certificate up later\nIt was part of the certificate side,\n\n315\n00:15:23.010 --> 00:15:25.670\nyou're loading the certificate through\nMicrosoft and maybe you don't trust that.\n\n316\n00:15:25.670 --> 00:15:27.900\nSo you want to do it yourself,\nthen you'd go this route.\n\n317\n00:15:27.900 --> 00:15:30.020\nNow, it will take a moment for\nthat machine to spin up.\n\n318\n00:15:30.020 --> 00:15:32.880\nSometimes you'll find where you can get\ninto them before they're actually done,\n\n319\n00:15:32.880 --> 00:15:37.110\nbut it's usually best to wait until\nit tells you that it's actually done.\n\n320\n00:15:37.110 --> 00:15:39.550\nAnd I can see mine actually\ndoes say deployment succeeded.\n\n321\n00:15:39.550 --> 00:15:43.510\nSo the server is up, and at this point\nI should be able to get into it.\n\n322\n00:15:43.510 --> 00:15:46.890\nSo I'm gonna come back here and try and\nconnect, I got a new connection.\n\n323\n00:15:46.890 --> 00:15:50.472\nI'll accept the fingerprint,\nand then I will try and\n\n324\n00:15:50.472 --> 00:15:53.982\npunch in the log password\nthat I had to pick earlier.\n\n325\n00:15:53.982 --> 00:15:58.882\nAnd assuming I typed it right, there we\ngo, I'm now logged into that machine.\n\n326\n00:15:58.882 --> 00:16:02.745\nAnd once I've logged into it\nIt's a CentOS 7.3 machine.\n\n327\n00:16:02.745 --> 00:16:06.330\nIt's up, it's running, I treat it\njust like any other system, right?\n\n328\n00:16:06.330 --> 00:16:08.300\nSo what are the first things that I do?\n\n329\n00:16:08.300 --> 00:16:11.715\nI usually get in and take a look at\nwhat kernel version I'm running.\n\n330\n00:16:11.715 --> 00:16:15.550\nOr do a hostnamectl to take\na look at the version.\n\n331\n00:16:15.550 --> 00:16:18.450\nSo I can see that I'm\nrunning CentOS Linux 7.\n\n332\n00:16:18.450 --> 00:16:20.789\nThe Linux kernel right there, 3.10.\n\n333\n00:16:21.930 --> 00:16:25.334\nIt's not telling me my sub version here,\nso\n\n334\n00:16:25.334 --> 00:16:30.210\nI might need to look at\n/etc/redhat-release to see if this is\n\n335\n00:16:30.210 --> 00:16:34.906\nactually running CentOS Linux\nrelease 7.3.1611.\n\n336\n00:16:34.906 --> 00:16:36.888\nThat's good, but I know 7.4 is out.\n\n337\n00:16:36.888 --> 00:16:38.916\nSo I wanna do an update, right?\n\n338\n00:16:38.916 --> 00:16:45.160\nSo I would do a sudo yum update, and\nit's gonna have me punch that in.\n\n339\n00:16:45.160 --> 00:16:48.260\nAnd I didn't check to see if\nI was in the sudoers file.\n\n340\n00:16:48.260 --> 00:16:50.775\nApparently, no, I typed the wrong\npassword, let's try that again.\n\n341\n00:16:53.223 --> 00:16:56.783\nShoot, I'm gonna type the password wrong\nas many times as I can in this episode.\n\n342\n00:16:56.783 --> 00:17:00.350\n&gt;&gt; [LAUGH]\n&gt;&gt; I'll get it right, eventually.\n\n343\n00:17:00.350 --> 00:17:01.117\nThere we go.\nAnd so\n\n344\n00:17:01.117 --> 00:17:02.916\nnow I can do the updates on the machine.\n\n345\n00:17:02.916 --> 00:17:06.340\nIt's gonna find that 7.4 is available so\nwe can update to that.\n\n346\n00:17:06.340 --> 00:17:10.359\nGet it loaded on there and\nthen reboot the instance and give it a go.\n\n347\n00:17:10.359 --> 00:17:11.097\nActually, you know what?\n\n348\n00:17:11.097 --> 00:17:13.288\nIt didn't pick up 7.4, did it?\n\n349\n00:17:13.288 --> 00:17:15.672\nIt's just doing minor\nupdates at this point.\n\n350\n00:17:15.672 --> 00:17:17.492\nSo it may be, in this case, and\n\n351\n00:17:17.492 --> 00:17:21.912\nthis is another thing where Microsoft\nmaintains their own repositories.\n\n352\n00:17:21.912 --> 00:17:25.080\nAnd so Microsoft might not be\ndirectly supporting 7.4 yet.\n\n353\n00:17:25.080 --> 00:17:29.737\nSo I might need to either override\nthe repositories or just wait.\n\n354\n00:17:29.737 --> 00:17:31.960\nI might not want to run a version\nthat Microsoft doesn't support yet.\n\n355\n00:17:31.960 --> 00:17:36.830\n7.4 did just come out last week so\nit is pretty current.\n\n356\n00:17:38.150 --> 00:17:40.138\nSo we can go ahead and\ndo these updates, but at this point,\n\n357\n00:17:40.138 --> 00:17:41.729\nI really do just treat\nit like a normal server.\n\n358\n00:17:41.729 --> 00:17:44.750\nIf I want it to be a web server,\nI start installing those services.\n\n359\n00:17:44.750 --> 00:17:47.400\nIf I want it to be a database server,\nI start installing those services.\n\n360\n00:17:47.400 --> 00:17:49.503\nAnd we get it set up just kinda\nthe way that we're used to.\n\n361\n00:17:49.503 --> 00:17:56.930\nSo I would do a sudo yum install httpd\nphp, whatever else, maybe a mariadb.\n\n362\n00:17:58.570 --> 00:17:59.925\nWhatever it is that I needed.\n\n363\n00:17:59.925 --> 00:18:03.360\nI start getting that stuff installed and\nnow I've got my server set up,\n\n364\n00:18:03.360 --> 00:18:05.390\nworking with it just\nlike any other system.\n\n365\n00:18:05.390 --> 00:18:08.968\nMeanwhile it's actually\nrunning back here in Azure.\n\n366\n00:18:08.968 --> 00:18:12.336\nAnd I can come and check my\nactivity logs and my monitoring and\n\n367\n00:18:12.336 --> 00:18:15.836\nI can see how that system is performing,\nwhat it's doing, and\n\n368\n00:18:15.836 --> 00:18:19.360\neven change its size,\nbump up its memory or whatever as I need.\n\n369\n00:18:19.360 --> 00:18:21.479\nBut at this point,\nI've got a virtual machine.\n\n370\n00:18:21.479 --> 00:18:23.161\nIt's up and running in Azure, and\n\n371\n00:18:23.161 --> 00:18:26.528\nit doesn't matter to me that it's\nrunning on a Microsoft platform.\n\n372\n00:18:26.528 --> 00:18:31.004\nI'm running Linux, and I'm working in the\nenvironment that I'm used to, that I like,\n\n373\n00:18:31.004 --> 00:18:33.400\nand I can deploy it on\na grade A infrastructure.\n\n374\n00:18:33.400 --> 00:18:35.490\nReally, it's a great set up there.\n\n375\n00:18:35.490 --> 00:18:36.500\n&gt;&gt; Yeah, great job, Don.\n\n376\n00:18:36.500 --> 00:18:37.290\nAnd it's exciting.\n\n377\n00:18:37.290 --> 00:18:39.760\nWe've actually created an Azure VM.\n\n378\n00:18:39.760 --> 00:18:42.110\nAnd anything else you'd like to add?\n\n379\n00:18:42.110 --> 00:18:45.020\n&gt;&gt; The main thing here,\nyou can create custom images.\n\n380\n00:18:45.020 --> 00:18:47.554\nSo if you wanted to run an OS\nthat Microsoft didn't support,\n\n381\n00:18:47.554 --> 00:18:49.457\nyou actually could create one and\ndeploy it.\n\n382\n00:18:49.457 --> 00:18:50.921\nBut I've had mixed results with that.\n\n383\n00:18:50.921 --> 00:18:54.039\nIn fact, I've never done it in production\ncuz I've never had it as stable\n\n384\n00:18:54.039 --> 00:18:54.602\nas I wanted.\n\n385\n00:18:54.602 --> 00:18:58.030\nSo you're always best off sticking\nwith the ones that either Microsoft or\n\n386\n00:18:58.030 --> 00:19:02.700\na third party vendor is supporting for you\ncuz they work out a lot of kinks and bugs.\n\n387\n00:19:02.700 --> 00:19:04.526\nIf you have an Enterprise\nlicense with Microsoft,\n\n388\n00:19:04.526 --> 00:19:06.398\nthey might even be rolling\nsupport in there for you.\n\n389\n00:19:06.398 --> 00:19:08.872\nIt's funny that you have\na problem with Linux and\n\n390\n00:19:08.872 --> 00:19:11.172\nyou might be calling\nMicrosoft on the phone.\n\n391\n00:19:11.172 --> 00:19:15.214\nBut they've really come to adopt\nthe Linux platform they want to support.\n\n392\n00:19:15.214 --> 00:19:19.303\nSo it's one that is easy to\noverlook as a Linux purist, but\n\n393\n00:19:19.303 --> 00:19:23.655\nit's definitely something you\nneed to watch out for and use.\n\n394\n00:19:23.655 --> 00:19:25.740\nBut they've got a great\nselection of images there.\n\n395\n00:19:25.740 --> 00:19:27.880\nMost of us,\nit meets the needs that we've got.\n\n396\n00:19:27.880 --> 00:19:31.378\nObviously, there's far more complex things\nthat we configure on these like snapshots\n\n397\n00:19:31.378 --> 00:19:32.522\nand backups, and all that.\n\n398\n00:19:32.522 --> 00:19:35.892\nBut as far as the basics, that gets\na virtual machine up and running, and\n\n399\n00:19:35.892 --> 00:19:37.940\nnow I can get in there and work.\n\n400\n00:19:37.940 --> 00:19:40.680\n&gt;&gt; Creating an Azure VM in\nthe Linux in the Cloud series.\n\n401\n00:19:40.680 --> 00:19:42.980\nAnd remember,\nthere's a whole bunch of episodes for\n\n402\n00:19:42.980 --> 00:19:46.070\nyou to check out in the Linux in the Cloud\nseries, and you'll be glad that you did.\n\n403\n00:19:46.070 --> 00:19:51.047\nDon does a fantastic job as always,\nand thank you for watching ITProTV.\n\n404\n00:19:51.047 --> 00:19:53.538\nRemember, a good IT pro\nis always learning.\n\n405\n00:19:53.538 --> 00:19:54.571\nI'm Zach Memos.\n\n406\n00:19:54.571 --> 00:19:55.403\n&gt;&gt; And I'm Don Pezet.\n\n407\n00:19:55.403 --> 00:19:58.395\n&gt;&gt; And we will see you again very soon.\n\n408\n00:19:58.395 --> 00:20:04.554\n[MUSIC]\n\n409\n00:20:04.554 --> 00:20:08.456\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "231746518"
        },
        {
          "description": "Don and Zach cover one of the first things to customize on an Azure VM, how people can access our VM, if Azure has a solution to protect our VM's, creating a vault, defining a policy, and choosing Enable Backups.",
          "length": "1335",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-3-2-configuring_an_azure_vm-082917-PGM.00_23_26_17.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-3-2-configuring_an_azure_vm-082917-PGM.00_23_26_17.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-3-2-configuring_an_azure_vm-082917-PGM.00_23_26_17.Still001-sm.jpg",
          "title": "Configuring an Azure VM",
          "transcript": "WEBVTT\n\n1\n00:00:00.005 --> 00:00:01.240\nWelcome to ITPro TV.\n\n2\n00:00:03.673 --> 00:00:07.315\n[MUSIC]\n\n3\n00:00:07.315 --> 00:00:07.815\n&gt;&gt; You're watching ITPro TV.\n\n4\n00:00:12.190 --> 00:00:12.870\n&gt;&gt; Hello again and\n\n5\n00:00:12.870 --> 00:00:16.930\nthank you for choosing ITProTV,\nhelping you learn wherever you go.\n\n6\n00:00:16.930 --> 00:00:20.610\nI'm your host Zach Memos as we\ncontinue on with Linux in the clouds.\n\n7\n00:00:20.610 --> 00:00:24.140\nAnd we are configuring an Azure VM.\n\n8\n00:00:24.140 --> 00:00:27.960\nExciting stuff and Don Pezet, our IT pro,\nis gonna tell us how to do it.\n\n9\n00:00:27.960 --> 00:00:29.090\nDon, thanks for joining us.\n\n10\n00:00:29.090 --> 00:00:30.230\n&gt;&gt; Hey, thanks for having me, Zach.\n\n11\n00:00:30.230 --> 00:00:34.130\nAnd in the first couple of episodes\nhere we covered how to get\n\n12\n00:00:34.130 --> 00:00:36.850\na virtual machine deployed\ninside of Azure, right, so\n\n13\n00:00:36.850 --> 00:00:40.040\nwe spun one up and\ngot remoted into it so we could connect.\n\n14\n00:00:40.040 --> 00:00:43.600\nWe did a CentOS machine so\nI was able to log in and do updates and\n\n15\n00:00:43.600 --> 00:00:46.760\nall that, we talked about all\nthe configuration options as far as\n\n16\n00:00:46.760 --> 00:00:51.120\ngetting the machine launched, but\nthere's actually a little bit more to it.\n\n17\n00:00:51.120 --> 00:00:54.900\nYou might be perfectly happy with\nthat default configuration, but\n\n18\n00:00:54.900 --> 00:00:57.680\nthe odds are you won't be and\nthat's because there's certain things that\n\n19\n00:00:57.680 --> 00:01:00.270\nare configured on it that are gonna\nmake your services not work.\n\n20\n00:01:00.270 --> 00:01:03.010\nSo there is a little bit more we need\nto do to get the virtual machine\n\n21\n00:01:03.010 --> 00:01:03.890\nproduction ready,\n\n22\n00:01:03.890 --> 00:01:07.270\nand that's the stuff that we're gonna take\na look at right here in this episode.\n\n23\n00:01:07.270 --> 00:01:10.870\n&gt;&gt; Don, what is one of the first\nthings you configure on an Azure VM?\n\n24\n00:01:10.870 --> 00:01:13.653\n&gt;&gt; Well for me, the first thing\nI worry about is the IP address.\n\n25\n00:01:13.653 --> 00:01:17.407\nThe IP address that's assigned to your\nvirtual machine when it comes up is\n\n26\n00:01:17.407 --> 00:01:18.990\na public IP but it's dynamic.\n\n27\n00:01:18.990 --> 00:01:23.364\nIt's dynamic, and that means that if you\nshutdown your machine you might give it\n\n28\n00:01:23.364 --> 00:01:27.415\naway to somebody else and when your\nmachine comes back up it gets a different\n\n29\n00:01:27.415 --> 00:01:29.810\nIP, we don't necessarily want that.\n\n30\n00:01:29.810 --> 00:01:32.080\n&gt;&gt; Nope.\n&gt;&gt; Now the neat part here is that it's\n\n31\n00:01:32.080 --> 00:01:35.440\npretty easy to fix this and the virtual\nmachine doesn't really even know about it.\n\n32\n00:01:35.440 --> 00:01:38.610\nSo for example, am I still logged in,\nyeah I'm still logged into that virtual\n\n33\n00:01:38.610 --> 00:01:41.096\nmachine, this is the virtual machine\nwe spun up in the last episode.\n\n34\n00:01:41.096 --> 00:01:48.030\nIf I run my ip addr and take a look at\nthe IP address I can see that this one has\n\n35\n00:01:48.030 --> 00:01:53.690\nan IP address of 10.0.0.4, that's\na private IP, it's not a public IP, right.\n\n36\n00:01:53.690 --> 00:01:56.020\nSo all the instances,\nall the virtual machines,\n\n37\n00:01:56.020 --> 00:01:59.390\nthey get their own private IP and\n\n38\n00:01:59.390 --> 00:02:04.690\nall they're doing in the Azure cloud is\nmapping the public IP to that private IP.\n\n39\n00:02:04.690 --> 00:02:07.040\nSo we can change the public\nIP whenever we want,\n\n40\n00:02:07.040 --> 00:02:09.610\nthe virtual machine doesn't even\nreally know what happened, right.\n\n41\n00:02:09.610 --> 00:02:13.718\nBut if I wanna make sure that\nthe virtual machine always has the same\n\n42\n00:02:13.718 --> 00:02:18.000\nIP I need to convert it from\na dynamic IP to a static IP, and\n\n43\n00:02:18.000 --> 00:02:21.610\nthat way it will stick with the virtual\nmachine even if I shut it down.\n\n44\n00:02:21.610 --> 00:02:25.894\nSo to do that what we need to do\nis go into our Azure portal and so\n\n45\n00:02:25.894 --> 00:02:28.087\nI'm at portal.azure.com.\n\n46\n00:02:28.087 --> 00:02:30.015\nAnd I'm gonna go into\nmy virtual machines and\n\n47\n00:02:30.015 --> 00:02:33.174\nI'm gonna hunt down my virtual machine,\nwhich is lab-webserver01.\n\n48\n00:02:33.174 --> 00:02:35.425\nSo I'll pick my web server, right, and\n\n49\n00:02:35.425 --> 00:02:40.010\nso then I get a list of all the\ninformation, this is the overview screen.\n\n50\n00:02:40.010 --> 00:02:44.060\nAnd what I want is the public IP address,\nthis guy right here, so\n\n51\n00:02:44.060 --> 00:02:49.387\nmine is 40.76.55.75, that's my IP\nright now, if I shutdown resources\n\n52\n00:02:49.387 --> 00:02:54.280\nover time I might give that up and get\na new IP and that can cause some problems.\n\n53\n00:02:54.280 --> 00:02:58.950\nSo if I click on that it'll take me to\nwhere I can configure it, all right, and\n\n54\n00:02:58.950 --> 00:03:03.870\nso right here I'm seeing the IP address\nand I can see that it's dynamic, and\n\n55\n00:03:03.870 --> 00:03:07.110\nby being dynamic that means I\ncould potentially be giving it up,\n\n56\n00:03:07.110 --> 00:03:08.750\nright, I don't want that.\n\n57\n00:03:08.750 --> 00:03:10.750\n&gt;&gt; No.\n&gt;&gt; So I'm gonna switch it to a static,\n\n58\n00:03:10.750 --> 00:03:14.790\nI'll just click static right there and\nI'll hit save, and\n\n59\n00:03:14.790 --> 00:03:19.660\nwhen I do that it's saving that public\naddress and making it permanent, okay.\n\n60\n00:03:19.660 --> 00:03:24.996\nNow the virtual machine doesn't actually\nchange, the virtual machine had a private\n\n61\n00:03:24.996 --> 00:03:29.810\nIP anyway, right, so if I go back to my\nvirtual machine and I pull up ip addr and\n\n62\n00:03:29.810 --> 00:03:34.212\nlook, I'm still 10.0.0.4,\nthat didn't change, right.\n\n63\n00:03:34.212 --> 00:03:38.174\nIt's really the NAT mapping, the Network\nAddress Translation mapping on the Azure\n\n64\n00:03:38.174 --> 00:03:41.210\nside that becomes permanent, but\nnow I know that I'll have it.\n\n65\n00:03:41.210 --> 00:03:44.210\nAnd so\nthat's one of the first things that I do,\n\n66\n00:03:44.210 --> 00:03:48.040\nthe other thing is you can set\nup a reverse DNS lookup, okay.\n\n67\n00:03:49.420 --> 00:03:51.833\nEvery machine, every IP,\nhas a reverse lookup,\n\n68\n00:03:51.833 --> 00:03:55.980\nhas a DNS name that's mapped to it and\nyou can dictate what that is.\n\n69\n00:03:55.980 --> 00:04:00.513\nAnd it's kind of small, let me zoom in,\nbut way over here, see how I've got\n\n70\n00:04:00.513 --> 00:04:05.250\neastus.cloudapp.azure.com, well I\nspun this up in the east US region.\n\n71\n00:04:05.250 --> 00:04:08.370\nThere's east US two, and\nthere's west US, and\n\n72\n00:04:08.370 --> 00:04:13.280\nall these other different regions,\nand they each have their own name and\n\n73\n00:04:13.280 --> 00:04:18.120\nyou can customize what that reverse\nlookup name is going to be.\n\n74\n00:04:18.120 --> 00:04:20.680\nAmazon does this thing where they\nuse the IP address in there and\n\n75\n00:04:20.680 --> 00:04:22.638\nthat's annoying cuz if you\nchange the IP it breaks things.\n\n76\n00:04:22.638 --> 00:04:28.049\nBut Microsoft they use a name, a name that\nyou get to pick, so I can come up and\n\n77\n00:04:28.049 --> 00:04:34.340\nI can say you know what this is\nlab-webserver01.eastus.cloudapp.azure.com.\n\n78\n00:04:34.340 --> 00:04:38.590\nThe only problem is it has to be unique,\nright, what are the odds of no one\n\n79\n00:04:38.590 --> 00:04:43.710\nelse having ever named a machine\nlab-webserver01, well it's possible.\n\n80\n00:04:43.710 --> 00:04:46.865\nAnd it, my goodness, it actually works.\n\n81\n00:04:46.865 --> 00:04:48.830\n&gt;&gt; [LAUGH]\n&gt;&gt; I did not expect that,\n\n82\n00:04:48.830 --> 00:04:52.360\nso if you look see how I got the green\ncheck mark, it actually checked\n\n83\n00:04:52.360 --> 00:04:55.680\nto see if anybody else is using it,\nnobody is using lab-webserver01.\n\n84\n00:04:55.680 --> 00:04:56.370\n&gt;&gt; Unique.\n\n85\n00:04:56.370 --> 00:04:57.076\n&gt;&gt; I'm shocked.\n\n86\n00:04:57.076 --> 00:05:00.598\nIf you had picked something like www,\nright, so I'll punch in www,\n\n87\n00:05:00.598 --> 00:05:04.424\nyou can almost guarantee, and if click\noff of that see how it searches, and\n\n88\n00:05:04.424 --> 00:05:06.990\nI get the warning,\ncuz it has to be unique.\n\n89\n00:05:06.990 --> 00:05:12.030\nNot just unique on your account but\nunique across all of the Azure\n\n90\n00:05:12.030 --> 00:05:15.370\ncustomers that happen to have\ndeployed in the east US.\n\n91\n00:05:15.370 --> 00:05:19.850\nSo you wanna give it some kind of a unique\nname, what I would normally do is say\n\n92\n00:05:19.850 --> 00:05:26.830\nsomething like itprotv-lab-webserver01,\nor something like that.\n\n93\n00:05:26.830 --> 00:05:30.930\nAlthough I guess since this one isn't\ntaken I can go ahead and take it, [LAUGH],\n\n94\n00:05:30.930 --> 00:05:32.270\nso but it does need to be unique.\n\n95\n00:05:32.270 --> 00:05:36.360\nBut the neat part there is if\nsomebody else does a reverse lookup\n\n96\n00:05:36.360 --> 00:05:39.750\non your IP they'll actually get a name\nback that's somewhat meaningful.\n\n97\n00:05:39.750 --> 00:05:44.270\nAnd you can even customize it with your\nown domain if you're hosting a domain\n\n98\n00:05:44.270 --> 00:05:47.370\nin Azure DNS, so there's a lot of\nset up that's involved in that but\n\n99\n00:05:47.370 --> 00:05:50.280\nyou certainly can get that set up and\nin place.\n\n100\n00:05:50.280 --> 00:05:53.720\nBut those two things right there will\nmake sure that I keep the IP and\n\n101\n00:05:53.720 --> 00:05:58.100\nmy reverse DNS lookups are meaningful, and\nso now I know I've got that address and\n\n102\n00:05:58.100 --> 00:06:00.480\nI can start getting ready to\npush this into production.\n\n103\n00:06:00.480 --> 00:06:06.140\nI can create DNS entries that say\nwww.ITPro.TV points to this IP,\n\n104\n00:06:06.140 --> 00:06:09.560\nand I know it'll always be that IP\nregardless of whether I've shut\n\n105\n00:06:09.560 --> 00:06:11.500\nthat instance down or not.\n\n106\n00:06:11.500 --> 00:06:15.310\n&gt;&gt; So Don, now that we have\nan IP can people access our VM?\n\n107\n00:06:15.310 --> 00:06:16.730\n&gt;&gt; Close, right, pretty close.\n\n108\n00:06:16.730 --> 00:06:20.100\nSo right now if somebody tries to access\nthe virtual machine they're not gonna\n\n109\n00:06:20.100 --> 00:06:21.220\nbe too happy, right.\n\n110\n00:06:21.220 --> 00:06:26.250\nAt the end of the last episode we had\nspun up the instance, I remoted into it,\n\n111\n00:06:26.250 --> 00:06:30.280\nso I am in it and\nI installed Apache, right.\n\n112\n00:06:30.280 --> 00:06:35.450\nSo I did a sudo yum install httpd,\nwell if I start that up,\n\n113\n00:06:35.450 --> 00:06:40.644\nif I do a sudo let's do a systemctl\n\n114\n00:06:40.644 --> 00:06:48.960\nenable --now httpd, right, so that's gonna\nget Apache up and running on my system.\n\n115\n00:06:48.960 --> 00:06:50.530\nAs soon as I clear the password.\n\n116\n00:06:51.565 --> 00:06:53.450\nAnd I'll do that, there we go.\n\n117\n00:06:53.450 --> 00:06:57.871\nAnd so if I do a systemctl\nstatus httpd sudo that,\n\n118\n00:06:57.871 --> 00:07:01.478\nthere we go, I can see Apache is up and\nrunning, I'm a web server!\n\n119\n00:07:01.478 --> 00:07:02.065\n&gt;&gt; Woo-hoo!\n&gt;&gt; Right,\n\n120\n00:07:02.065 --> 00:07:06.130\npeople should be able to get to it,\nI can SSH into this machine so\n\n121\n00:07:06.130 --> 00:07:11.073\nsurely somebody should be able to browse\nto it, and don't call me Shirley.\n\n122\n00:07:11.073 --> 00:07:14.360\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] There's that humor,\n\n123\n00:07:14.360 --> 00:07:15.145\nit just abounds.\n\n124\n00:07:15.145 --> 00:07:19.240\nBut if I try and browse to that\nit's just sitting here thinking.\n\n125\n00:07:19.240 --> 00:07:23.400\nOkay, what's going on is that\nthere is an Azure firewall,\n\n126\n00:07:23.400 --> 00:07:26.100\nthere's a firewall that filters\naccess to this machine.\n\n127\n00:07:26.100 --> 00:07:31.806\nNow the instance doesn't know about it,\nright, it's not using firewalld or\n\n128\n00:07:31.806 --> 00:07:35.840\niptables, right,\nif I go to that instance and\n\n129\n00:07:35.840 --> 00:07:40.812\nI do a sudo firewall-cmd --list --all,\n\n130\n00:07:40.812 --> 00:07:43.754\nfirewalld is not running.\n\n131\n00:07:43.754 --> 00:07:47.641\nOr if I do a sudo iptables\n\n132\n00:07:47.641 --> 00:07:52.070\n--list I should get, that's not\neven installed, it is installed.\n\n133\n00:07:52.070 --> 00:07:56.267\niptables is installed but look at my\nrules, just policy ACCEPT, ACCEPT, ACCEPT,\n\n134\n00:07:56.267 --> 00:07:57.815\nit's accepting everything.\n\n135\n00:07:57.815 --> 00:08:00.864\nSo firewalld is not running,\niptables is running but\n\n136\n00:08:00.864 --> 00:08:04.659\nit's allowing everything through,\nI'm not filtering at all and\n\n137\n00:08:04.659 --> 00:08:08.520\nthe reason it's configured this\nway is that Azure is filtering it,\n\n138\n00:08:08.520 --> 00:08:13.020\nAzure has a firewall that will need\nto customize to meet our needs.\n\n139\n00:08:13.020 --> 00:08:14.260\n&gt;&gt; So who wanna get that set?\n\n140\n00:08:14.260 --> 00:08:17.380\nThis is where things get\na little bit tricky, right?\n\n141\n00:08:17.380 --> 00:08:23.740\nBecause the firewall is one component\nthat goes alongside the virtual machine.\n\n142\n00:08:23.740 --> 00:08:27.260\nWhen we were creating this,\nI talked about resource groups and\n\n143\n00:08:27.260 --> 00:08:31.350\nour resource groups collect all the\ncomponents of virtual machine together,\n\n144\n00:08:31.350 --> 00:08:33.800\nwell, the firewall is part of that.\n\n145\n00:08:33.800 --> 00:08:37.230\nSo the firewall not actually touched the\nvirtual machine which is what I'm looking\n\n146\n00:08:37.230 --> 00:08:41.100\nat right now,\nthe firewall attach to the resource group.\n\n147\n00:08:41.100 --> 00:08:45.460\nSo on the left side here when I look at\nthis menu bar, I've been going down here\n\n148\n00:08:45.460 --> 00:08:50.200\nto virtual machines, but right up\nabove that I'll see resource groups.\n\n149\n00:08:50.200 --> 00:08:52.380\nAnd this is where I'll normally\ngo to work with stuff.\n\n150\n00:08:52.380 --> 00:08:54.520\nBecause resource groups\nshows me everything.\n\n151\n00:08:54.520 --> 00:08:58.390\nAnd you'll have a number of default\nresource groups that are just created as\n\n152\n00:08:58.390 --> 00:09:00.330\npart of your account when you sign up for\nAzure.\n\n153\n00:09:00.330 --> 00:09:03.370\nBut if I scroll down I should be\nable to find lab web servers and\n\n154\n00:09:03.370 --> 00:09:05.070\nthat's where I put my web server.\n\n155\n00:09:05.070 --> 00:09:08.270\nSo I'm gonna find that one and\nI'll pull it up, and\n\n156\n00:09:08.270 --> 00:09:10.860\nnow I can see the different\ncomponents that are inside of it.\n\n157\n00:09:10.860 --> 00:09:15.640\nAnd if you look at the components,\nlet me zoom in on this a bit,\n\n158\n00:09:15.640 --> 00:09:19.290\nI've got the virtual machine,\nI've got the disk network interface,\n\n159\n00:09:19.290 --> 00:09:24.300\nthe public IP address, the network\nsecurity group, that's the firewall.\n\n160\n00:09:24.300 --> 00:09:26.840\nAnd the storage account,\nall of these pieces,\n\n161\n00:09:26.840 --> 00:09:31.680\nthese seven things come together to create\nthe virtual machine that I'm using.\n\n162\n00:09:31.680 --> 00:09:34.680\nAnd it says network security group,\nthat's the firewall,\n\n163\n00:09:34.680 --> 00:09:37.750\nthat's controlling access in and\nout of the system.\n\n164\n00:09:37.750 --> 00:09:42.740\nSo I need to kind of configure that\nsecurity group to get everything\n\n165\n00:09:42.740 --> 00:09:47.270\nworking the way that I wanted, to get this\nallowing the communication through and\n\n166\n00:09:47.270 --> 00:09:48.350\nfunctioning the way that I need it.\n\n167\n00:09:48.350 --> 00:09:51.479\nSo I'm gonna come over here and\njust click on that security group.\n\n168\n00:09:52.710 --> 00:09:54.580\nAnd now that I'm doing the security group,\n\n169\n00:09:54.580 --> 00:09:58.190\nI can see the traffic that's\nallowed through, okay?\n\n170\n00:09:58.190 --> 00:10:01.800\nAnd looking at it here I got inbound and\noutbound security rules, and\n\n171\n00:10:01.800 --> 00:10:04.170\nthe default configuration\nis pretty straight forward.\n\n172\n00:10:04.170 --> 00:10:07.560\nOn the outbound security rules,\nthere's none, no result, right?\n\n173\n00:10:07.560 --> 00:10:10.250\nSo by default it allows\nall traffic to go out.\n\n174\n00:10:10.250 --> 00:10:11.990\nNow, most of the time,\nthat's what we want.\n\n175\n00:10:11.990 --> 00:10:13.600\nBut if somebody hacks into this VM,\n\n176\n00:10:13.600 --> 00:10:16.680\nthey could then reach out to\nthe Internet any way they want.\n\n177\n00:10:16.680 --> 00:10:21.390\nSo, I might wanna restrict this to say the\nmachine can only go out if it's responding\n\n178\n00:10:21.390 --> 00:10:23.580\nto HTTPS requests or something like that.\n\n179\n00:10:23.580 --> 00:10:26.420\nAnd it kind of filters down what\nan attacker would be able to do.\n\n180\n00:10:26.420 --> 00:10:28.860\nBut most of the time,\nwe do just leave it empty.\n\n181\n00:10:28.860 --> 00:10:31.420\nBut the inbound rules, though,\nthat's a different story.\n\n182\n00:10:31.420 --> 00:10:35.060\nAnd I've got one inbound rule by\ndefault that's allowing SSH in.\n\n183\n00:10:35.060 --> 00:10:38.130\nThat's why I was able to SSH in and\nconnect to the system.\n\n184\n00:10:38.130 --> 00:10:43.380\nBut if I wanted to be a web server,\nI'm gonna need to add another rule to this\n\n185\n00:10:43.380 --> 00:10:46.350\nin order for\nthe web services to be able to get in.\n\n186\n00:10:46.350 --> 00:10:51.750\nSo looking at it as it is, this security\ngroup is a little too restricted for me.\n\n187\n00:10:51.750 --> 00:10:56.320\nAnd we can come in and start to tweak\nall this and change it, add new rules,\n\n188\n00:10:56.320 --> 00:11:01.100\ncustomize it, and get it configured\nthe way that we need it to function, and\n\n189\n00:11:01.100 --> 00:11:03.470\nthen allowing our traffic through.\n\n190\n00:11:03.470 --> 00:11:06.890\nAll right, so what I need to\ndo is basically add to this.\n\n191\n00:11:06.890 --> 00:11:10.670\nAnd on the left side here as I look down,\nyou can find individual settings for\n\n192\n00:11:10.670 --> 00:11:14.830\nthe inbound and outbound rules,\nI'm gonna go to inbound security rules.\n\n193\n00:11:14.830 --> 00:11:18.190\nAnd here's the default rule and\nnotice how they have a priority.\n\n194\n00:11:18.190 --> 00:11:21.490\nThey're applied in order from top\ndown based on this priority number.\n\n195\n00:11:21.490 --> 00:11:24.740\nAnd they give the SSH one a priority of\n1,000 to kind of put it at the end of\n\n196\n00:11:24.740 --> 00:11:25.560\nthe list.\n\n197\n00:11:25.560 --> 00:11:28.540\nBut you can manipulate this based\non whatever it is that you need.\n\n198\n00:11:28.540 --> 00:11:30.590\nI'm gonna add another rule,\n\n199\n00:11:30.590 --> 00:11:34.650\nand I'm gonna say I want web\ntraffic to be able to come in.\n\n200\n00:11:34.650 --> 00:11:40.300\nSo under service I'm gonna drop that down\nand I'll pick HTTP, if I can say it.\n\n201\n00:11:40.300 --> 00:11:41.860\nSo I'm gonna add that.\n\n202\n00:11:41.860 --> 00:11:44.950\nI could've stuck with custom and\njust added TCP port 80, but\n\n203\n00:11:44.950 --> 00:11:46.710\nit's got it kinda predefined for me here.\n\n204\n00:11:46.710 --> 00:11:49.353\nSo I'll go ahead and pick it and it's\ngoing to assign a priority number for me.\n\n205\n00:11:49.353 --> 00:11:51.373\nIt's gonna give me\na priority number of 100.\n\n206\n00:11:51.373 --> 00:11:53.120\nNow, why not 1?\n\n207\n00:11:53.120 --> 00:11:56.770\nThey wanna make it easy if I wanna come\nin later on and add rules above this.\n\n208\n00:11:56.770 --> 00:11:59.620\nI might wanna block web\naccess from a certain IP.\n\n209\n00:11:59.620 --> 00:12:02.170\nI'd wanna put it above this one,\nso I'd have a lower number.\n\n210\n00:12:02.170 --> 00:12:05.630\nAnd if I've left a gap like this,\nthen I've got room.\n\n211\n00:12:05.630 --> 00:12:08.850\nThese numbers don't cost us anything,\nyou use the as big numbers as you want.\n\n212\n00:12:08.850 --> 00:12:12.540\nBut I'm gonna punch that in, and there\nmight be other traffic that I wanna allow\n\n213\n00:12:12.540 --> 00:12:16.870\nit, it's a web server, so\nI might want to allow HTTPS, right?\n\n214\n00:12:16.870 --> 00:12:20.150\nIt's updating right now, but as soon as\nit's done updating, the add button will\n\n215\n00:12:20.150 --> 00:12:24.150\nlight back up for me and I can then add,\nthere we go, I'll add another rule.\n\n216\n00:12:25.310 --> 00:12:28.880\nAnd this time I'll add HTTPS,\nI'll find that one in the list.\n\n217\n00:12:28.880 --> 00:12:31.870\nAnd it's gonna give it\na priority of 100 as well.\n\n218\n00:12:31.870 --> 00:12:35.110\nWell, that's gonna overlap\nwith the other one, isn't it?\n\n219\n00:12:35.110 --> 00:12:37.234\nUsually it increments for me,\nit didn't this time for some reason.\n\n220\n00:12:37.234 --> 00:12:41.680\nSo I'm just gonna change that to 200 and\nI'll say OK.\n\n221\n00:12:41.680 --> 00:12:43.300\nAnd so\nthat one is gonna go in the list as well.\n\n222\n00:12:43.300 --> 00:12:45.590\nAnd it will go right in\nbetween the other ones.\n\n223\n00:12:45.590 --> 00:12:46.460\nSo you can go through and\n\n224\n00:12:46.460 --> 00:12:49.190\nstart to configure this exactly\nthe way that you want it.\n\n225\n00:12:49.190 --> 00:12:51.810\nWe're allowing traffic,\nyou can come back and refine it and\n\n226\n00:12:51.810 --> 00:12:56.030\nsay I need to change who the source\ndestination are and things like that.\n\n227\n00:12:56.030 --> 00:12:56.570\nYou can go in and\n\n228\n00:12:56.570 --> 00:13:00.200\nstart to manipulate a lot of this\nif you go into the advanced screen.\n\n229\n00:13:00.200 --> 00:13:03.010\nThat's what we've got where you can\nspecify source and destination.\n\n230\n00:13:03.010 --> 00:13:06.630\nAnd you know that little pop up kind\nof covered up what I was doing.\n\n231\n00:13:06.630 --> 00:13:08.700\nLet me show you guys how I\ngot back in there again.\n\n232\n00:13:08.700 --> 00:13:11.843\nIs I basically chose the rule.\n\n233\n00:13:11.843 --> 00:13:15.778\nSo if I pick HTTPS, and then in this\nscreen it defaulted to basic and\n\n234\n00:13:15.778 --> 00:13:19.386\nI just clicked on this advanced\nbutton right here at the top.\n\n235\n00:13:19.386 --> 00:13:22.700\nAnd that gave me the full output\nwhere I can go through and tweak, and\n\n236\n00:13:22.700 --> 00:13:25.042\ncustomize and\nget that the way I wanted it to be.\n\n237\n00:13:25.042 --> 00:13:29.427\nBut once I've got that set now traffic is\nbeing allowed into the resource group, and\n\n238\n00:13:29.427 --> 00:13:31.838\nthe virtual machine itself isn't checking,\n\n239\n00:13:31.838 --> 00:13:35.137\nit's not checking to make sure\nthis traffic is allowed or not.\n\n240\n00:13:35.137 --> 00:13:39.071\nSo we can go back over to our web\nserver and try and, this time,\n\n241\n00:13:39.071 --> 00:13:42.338\nI don't get a page not find,\nI get testing 123.\n\n242\n00:13:42.338 --> 00:13:45.230\nI got the Apache web server test page.\n\n243\n00:13:45.230 --> 00:13:47.150\nIt's up, its running, and\nnow I'm getting to it.\n\n244\n00:13:47.150 --> 00:13:51.060\nSo configuring that firewall is\nusually step number two for me.\n\n245\n00:13:51.060 --> 00:13:53.390\nConfiguring the static IP\nis the first thing I do.\n\n246\n00:13:53.390 --> 00:13:57.970\nAnd then configuring the firewall\ninside the network security group to\n\n247\n00:13:57.970 --> 00:14:01.491\nallow traffic in and\nout is kinda like my second stuff.\n\n248\n00:14:01.491 --> 00:14:03.041\n&gt;&gt; So Don, what about backups?\n\n249\n00:14:03.041 --> 00:14:06.390\nDoes Azure have a solution\nto protect our VMs?\n\n250\n00:14:06.390 --> 00:14:09.000\n&gt;&gt; Absolutely, and\nthat's kind of the next step,\n\n251\n00:14:09.000 --> 00:14:11.940\nis the last thing that I get set up\nbefore pushing something into production.\n\n252\n00:14:11.940 --> 00:14:14.460\nWell before installing\ncustomized soft room whatever,\n\n253\n00:14:14.460 --> 00:14:16.470\nis setting up some kind\nof backup solution.\n\n254\n00:14:16.470 --> 00:14:19.910\nSo when I have this configured perfectly\nand I load my web pages on to it and\n\n255\n00:14:19.910 --> 00:14:21.270\nit's running great.\n\n256\n00:14:21.270 --> 00:14:22.650\nWhat if something goes wrong?\n\n257\n00:14:22.650 --> 00:14:26.620\nWhat if my webpage gets defaced and I need\nto roll it back to a previous version?\n\n258\n00:14:26.620 --> 00:14:30.960\nWell, if I'm using code repositories or\nsomething like that,\n\n259\n00:14:30.960 --> 00:14:33.120\nI can just go into GitHub,\ndo a push, whatever it is.\n\n260\n00:14:33.120 --> 00:14:35.590\nYou can have an infrastructure like that.\n\n261\n00:14:35.590 --> 00:14:39.940\nOr in Azure,\nyou can backup the entire virtual machine.\n\n262\n00:14:39.940 --> 00:14:42.600\nAnd if you do that,\nit becomes trivial to restore it.\n\n263\n00:14:42.600 --> 00:14:45.967\nIn fact, you can restore it not just\nright over where it was originally, but\n\n264\n00:14:45.967 --> 00:14:47.977\nyou can restore it to\na new region if you want.\n\n265\n00:14:47.977 --> 00:14:49.795\nSo maybe I deployed it in US East and\n\n266\n00:14:49.795 --> 00:14:52.886\nnotice that the bulk of my\ncustomers are on the West Coast.\n\n267\n00:14:52.886 --> 00:14:56.850\nSo I can take a backup and\nrestore the backup into US West.\n\n268\n00:14:56.850 --> 00:15:00.361\nAnd when I do that now my\ninstances running over in US West,\n\n269\n00:15:00.361 --> 00:15:02.810\nI just migrated to another region.\n\n270\n00:15:02.810 --> 00:15:06.831\nSo you can do things like that if you set\nup the backup, if you set up the backup,\n\n271\n00:15:06.831 --> 00:15:09.450\nif you don't set it up none of it works,\nright?\n\n272\n00:15:09.450 --> 00:15:12.750\nAnd this is one of those things where you\nwant to have it done before you need it,\n\n273\n00:15:12.750 --> 00:15:15.970\nnot after you need it, so setting up\na back up is kind of an important part.\n\n274\n00:15:15.970 --> 00:15:17.710\nIt's not very hard to do.\n\n275\n00:15:17.710 --> 00:15:21.030\nOn the left side here, we're gonna\ngo down to our virtual machines.\n\n276\n00:15:21.030 --> 00:15:22.600\nAnd when we pull up our virtual machines,\n\n277\n00:15:22.600 --> 00:15:24.240\nwe can find them when\nwe want them back up.\n\n278\n00:15:24.240 --> 00:15:28.480\nI'm gonna do lab web server one,\nmostly cuz it's the only one I have.\n\n279\n00:15:28.480 --> 00:15:31.830\nAnd then if I look down at\nthe options here on the left side,\n\n280\n00:15:31.830 --> 00:15:34.980\nabout half way down, I've got backup.\n\n281\n00:15:34.980 --> 00:15:37.100\nAnd here's where we can\nset up our back up.\n\n282\n00:15:37.100 --> 00:15:40.680\nAnd it's really designed to\nwork a few different ways.\n\n283\n00:15:40.680 --> 00:15:43.420\nYou can do one time manual back ups or\n\n284\n00:15:43.420 --> 00:15:46.890\nyou can do scheduled back\nups that run on their own.\n\n285\n00:15:46.890 --> 00:15:51.000\nBe aware that each back up is gonna\nget stored into a storage group and\n\n286\n00:15:51.000 --> 00:15:53.470\nyou have to pay for the storage you use.\n\n287\n00:15:53.470 --> 00:15:58.200\nIt's something like 10 cents per gigabyte\nper month, 11 cents, something like that.\n\n288\n00:15:58.200 --> 00:16:00.027\nIt's not a ton of money, but\nyou do it to pay for it.\n\n289\n00:16:00.027 --> 00:16:03.312\nSo you don't wanna keep a ton of\nbackups lying around if you don't\n\n290\n00:16:03.312 --> 00:16:04.395\nactually need them.\n\n291\n00:16:04.395 --> 00:16:06.257\n&gt;&gt; Right.\n&gt;&gt; Cuz they will cost you.\n\n292\n00:16:06.257 --> 00:16:09.303\nSo it's offering to create a vault for\nme, and\n\n293\n00:16:09.303 --> 00:16:12.045\na vault is where we're gonna store this.\n\n294\n00:16:12.045 --> 00:16:16.600\nAnd vault storage is a little cheaper than\nnormal storage, so that's a good thing.\n\n295\n00:16:16.600 --> 00:16:19.240\nBut if I don't have a vault,\nI need to create a new one.\n\n296\n00:16:19.240 --> 00:16:22.347\nAnd so\nI might call this my lab-backup-vault or\n\n297\n00:16:22.347 --> 00:16:24.633\nwhatever it is that I wanna name it.\n\n298\n00:16:24.633 --> 00:16:28.423\nIf I already had a vault I could pick\nthe one that already existed, right?\n\n299\n00:16:28.423 --> 00:16:31.175\nAnd then I can define a policy.\n\n300\n00:16:31.175 --> 00:16:34.802\nThe default policy that they wanna\ncreate for me is called a daily policy.\n\n301\n00:16:34.802 --> 00:16:39.014\nAnd so if you look, it's gonna\ncreate a daily policy where every\n\n302\n00:16:39.014 --> 00:16:42.215\nday at 4:00 AM UTC,\nit's gonna do a backup.\n\n303\n00:16:42.215 --> 00:16:45.140\nAll right, now that might not work for me.\n\n304\n00:16:45.140 --> 00:16:47.320\nFirst off,\nI might not wanna backup everyday,\n\n305\n00:16:47.320 --> 00:16:48.840\nI might wanna backup less frequently.\n\n306\n00:16:48.840 --> 00:16:50.963\nSo I could come in and\nI could change that,\n\n307\n00:16:50.963 --> 00:16:53.341\nyou can do weekly backups if you want,\nright?\n\n308\n00:16:53.341 --> 00:16:57.117\nBut if I want to do something more\nfrequently than a daily backup they're not\n\n309\n00:16:57.117 --> 00:17:00.372\nreally giving me that option,\nI'd have to go a different route.\n\n310\n00:17:00.372 --> 00:17:02.085\nAnd usually daily backups are enough for\n\n311\n00:17:02.085 --> 00:17:05.012\nmost of us cuz you have other things\nthat you can do, like snapshots.\n\n312\n00:17:05.012 --> 00:17:08.398\nYou could do those every hour if you\nwanted, or every 15 minutes, and\n\n313\n00:17:08.398 --> 00:17:11.623\nthen combine that with backups like\nthis to get a perfect solution.\n\n314\n00:17:11.623 --> 00:17:14.268\nThen I pick the time, 4:00 AM UTC.\n\n315\n00:17:14.268 --> 00:17:18.257\nThat might sound good but\nin our time zone that's actually 11PM.\n\n316\n00:17:18.257 --> 00:17:22.150\nAt 11PM there's a pretty decent amount\nof people that might be in the system.\n\n317\n00:17:22.150 --> 00:17:24.709\nSo I might wanna change this to\nsomething that's a little bit later,\n\n318\n00:17:24.709 --> 00:17:26.510\nI'm gonna go with 7:00 AM UTC.\n\n319\n00:17:26.510 --> 00:17:28.422\nOr if you're not all about\nconverting time zones,\n\n320\n00:17:28.422 --> 00:17:30.345\nyou could just switch this\nto your local time zone.\n\n321\n00:17:30.345 --> 00:17:36.365\nWe are GMT -05:00, and so\nin GMT -05:00, there we go.\n\n322\n00:17:36.365 --> 00:17:40.776\nI can set it and say, you know what,\nI want it to be at 2:00 AM or\n\n323\n00:17:40.776 --> 00:17:42.882\n3:00 AM our time, right?\n\n324\n00:17:42.882 --> 00:17:46.370\nAnd that way we know every day\nit's gonna back up at that time.\n\n325\n00:17:46.370 --> 00:17:49.836\nYou wanna pick a non-peak time cuz you do\ntake a bit of a disk I/O hit when this\n\n326\n00:17:49.836 --> 00:17:51.689\nhappens and it can affect performance.\n\n327\n00:17:52.850 --> 00:17:55.550\nAfter that I can specify\na retention range.\n\n328\n00:17:55.550 --> 00:17:58.602\nHow long do I wanna retain the backup for?\n\n329\n00:17:58.602 --> 00:18:01.467\nAnd it's defaulting to 180 days.\n\n330\n00:18:01.467 --> 00:18:06.056\nThat means if I'm doing a daily\nbackup it's gonna maintain\n\n331\n00:18:06.056 --> 00:18:09.098\n180 days worth of backups, right?\n\n332\n00:18:09.098 --> 00:18:11.259\nThat's a lot of backups.\n\n333\n00:18:11.259 --> 00:18:11.900\n&gt;&gt; It is.\n\n334\n00:18:11.900 --> 00:18:15.840\n&gt;&gt; I can tell it to make\nweekly backup points instead.\n\n335\n00:18:15.840 --> 00:18:20.022\nAnd that way it'll maintain\nthe last seven daily backups but\n\n336\n00:18:20.022 --> 00:18:25.540\nthen beyond that it'll start rolling\nup weekly backups and saving those.\n\n337\n00:18:25.540 --> 00:18:26.900\nAnd so I could come in and\nsay you know what,\n\n338\n00:18:26.900 --> 00:18:31.750\nI just wanna do a 7-day daily backup.\n\n339\n00:18:31.750 --> 00:18:35.340\nBut then I wanna do a weekly backup,\nI'll do every Sunday,\n\n340\n00:18:35.340 --> 00:18:37.740\nand maybe I wanna keep 8 weeks, right?\n\n341\n00:18:37.740 --> 00:18:39.730\nTwo months worth of backups.\n\n342\n00:18:39.730 --> 00:18:42.660\nYou can kind of specify how you want\nto minimize the amount of impact\n\n343\n00:18:42.660 --> 00:18:43.640\nthat you're gonna take.\n\n344\n00:18:43.640 --> 00:18:45.830\nAnd we can even do the same thing for\nmonthly.\n\n345\n00:18:45.830 --> 00:18:49.790\nAnd so I might come in and\nsay I'm gonna do a Week Based monthly,\n\n346\n00:18:49.790 --> 00:18:53.280\nand I'll just take the first\nSunday of every month.\n\n347\n00:18:53.280 --> 00:18:54.958\nAnd maybe I wanna go out 12 months.\n\n348\n00:18:54.958 --> 00:18:59.440\nSo now I'll have the last\nseven days of backups, I'll\n\n349\n00:18:59.440 --> 00:19:04.520\nhave the last eight weeks of backups, and\nI'll have the last 12 months of backups.\n\n350\n00:19:04.520 --> 00:19:09.110\nSo if I need to go all the way back to\na year ago I can with my monthlies,\n\n351\n00:19:09.110 --> 00:19:12.320\nif I need to go five weeks ago,\nI can with my weeklies.\n\n352\n00:19:12.320 --> 00:19:15.710\nAnd if I need to go five days ago,\nI can with my dailies.\n\n353\n00:19:15.710 --> 00:19:19.920\nI'm building a backup policy\nthat matches my needs, right?\n\n354\n00:19:19.920 --> 00:19:22.680\nAnd we can go yearly but\neventually it gets a little crazy.\n\n355\n00:19:22.680 --> 00:19:24.880\nSo we could start to setup all that.\n\n356\n00:19:24.880 --> 00:19:27.770\nBut it's all about minimizing the amount\nof storage that we're consuming.\n\n357\n00:19:27.770 --> 00:19:30.980\nI don't wanna eat up a ton of storage\nmaintaining a bunch of backups\n\n358\n00:19:30.980 --> 00:19:32.600\nI don't necessarily need.\n\n359\n00:19:32.600 --> 00:19:36.620\nSo I get that set the way that I want and\nthen we can say OK to that.\n\n360\n00:19:36.620 --> 00:19:39.620\nAnd now it's gonna build that policy.\n\n361\n00:19:39.620 --> 00:19:41.588\nOnce the policy's built\nwe hit Enable Backup and\n\n362\n00:19:41.588 --> 00:19:43.870\nthat's what actually gonna turn it on,\nokay?\n\n363\n00:19:43.870 --> 00:19:47.683\nSo that's turning it on, it's initializing\nthat deployment and I'll have to wait,\n\n364\n00:19:47.683 --> 00:19:50.285\nwe can make this the longest show ever and\nwait until 3AM.\n\n365\n00:19:50.285 --> 00:19:50.959\n&gt;&gt; [LAUGH]\n&gt;&gt; But at 3AM,\n\n366\n00:19:50.959 --> 00:19:53.466\nI should've picked something that\nwas like two minutes from now.\n\n367\n00:19:53.466 --> 00:19:55.512\n&gt;&gt; We'll be back at 3 AM\n&gt;&gt; Yeah, [LAUGH] so\n\n368\n00:19:55.512 --> 00:19:58.740\nat 3AM we'll be all bleary-eyed\ntrying to do the show.\n\n369\n00:19:58.740 --> 00:20:01.610\nBut it's gonna run that backup and\nit's gonna store it.\n\n370\n00:20:01.610 --> 00:20:03.392\nAnd we'll be able to\nmonitor that as we need it,\n\n371\n00:20:03.392 --> 00:20:04.920\nsee that those backups are occurring.\n\n372\n00:20:04.920 --> 00:20:07.810\nThey'll show up in your little\nbell menu and other areas.\n\n373\n00:20:07.810 --> 00:20:10.960\nBut once they're done,\nnow I can restore from them.\n\n374\n00:20:10.960 --> 00:20:12.510\nIf I have a problem\nwith a virtual machine,\n\n375\n00:20:12.510 --> 00:20:16.710\nI can go in and I can restore that\nbackup and put it back the way it was.\n\n376\n00:20:16.710 --> 00:20:19.670\nSo if I come in first thing in the morning\nand the website's been defaced,\n\n377\n00:20:19.670 --> 00:20:21.120\nI need to find out why, right?\n\n378\n00:20:21.120 --> 00:20:23.820\nSo I might take a snapshot\nof it as it was defaced.\n\n379\n00:20:23.820 --> 00:20:27.430\nBut then I can quickly restore\nthe backup and it's back online.\n\n380\n00:20:27.430 --> 00:20:30.470\nAnd now we can go in and troubleshoot and\nnot affect our customers.\n\n381\n00:20:30.470 --> 00:20:32.805\nOr if I wanna restore to another region,\nI can do that.\n\n382\n00:20:32.805 --> 00:20:35.820\nBut backups are actually being\nstored in multiple regions,\n\n383\n00:20:35.820 --> 00:20:39.320\nMicrosoft is doing that to ensure that\nyou always have access to your backups.\n\n384\n00:20:39.320 --> 00:20:43.400\nAnd they're being put into a storage\nvault that is a special storage tier, so\n\n385\n00:20:43.400 --> 00:20:45.940\nit's not as expensive as normal storage.\n\n386\n00:20:45.940 --> 00:20:49.100\nSo all of that's going on in the\nbackground and it's taking care of us for\n\n387\n00:20:49.100 --> 00:20:52.645\nnow, we set it and forget it, right,\nit's like the rotisserie chicken.\n\n388\n00:20:52.645 --> 00:20:55.960\n&gt;&gt; [LAUGH]\n&gt;&gt; We set that thing and now it just runs,\n\n389\n00:20:55.960 --> 00:20:57.960\nand when we need it we know\nit'll be there for us.\n\n390\n00:20:57.960 --> 00:21:01.490\nAll part of my initial setup of\na virtual machine inside of Azure.\n\n391\n00:21:01.490 --> 00:21:05.600\n&gt;&gt; And that chicken is cooking away,\nconfiguring Azure VM.\n\n392\n00:21:05.600 --> 00:21:07.610\nDon, any last words before we move on?\n\n393\n00:21:07.610 --> 00:21:11.450\nThe only other thing that I wanna mention\nis don't trust the backups blindly.\n\n394\n00:21:11.450 --> 00:21:13.840\nMake sure you run some tests,\ndo a test restore,\n\n395\n00:21:13.840 --> 00:21:18.000\ntry to restore it to another region and\nsee, make sure that all works for you.\n\n396\n00:21:18.000 --> 00:21:20.960\nYou'll also have other things that'll\nbe part of your restore procedure like\n\n397\n00:21:20.960 --> 00:21:24.022\nremapping the public IP and so\non, so there's a lot more to it.\n\n398\n00:21:24.022 --> 00:21:25.800\nBut it's a little outside\nof the Linux realm.\n\n399\n00:21:25.800 --> 00:21:29.020\nSo I wanted to kinda focus on the things\nthat were just important enough to get you\n\n400\n00:21:29.020 --> 00:21:31.350\nup and running with Linux in Azure.\n\n401\n00:21:31.350 --> 00:21:35.730\nAnd once it's there, by and large you just\ntreat the Linux box like any other Linux\n\n402\n00:21:35.730 --> 00:21:37.720\nbox and you can run backups\nfrom inside of it if you want.\n\n403\n00:21:37.720 --> 00:21:39.620\nYou don't have to use\nthe Azure infrastructure.\n\n404\n00:21:39.620 --> 00:21:42.810\nBut it is there, so\nit's nice to take advantage of that and\n\n405\n00:21:42.810 --> 00:21:44.420\nreally get your money's\nworth out of Azure.\n\n406\n00:21:44.420 --> 00:21:45.275\n&gt;&gt; Thank you very much Don,\n\n407\n00:21:45.275 --> 00:21:48.110\nthe great information, and\nyou always do a terrific job.\n\n408\n00:21:48.110 --> 00:21:51.130\nAnd make sure you watch every\nsingle one of the Linux\n\n409\n00:21:51.130 --> 00:21:54.990\nin the Cloud series of videos\nbecause you'll be glad you did.\n\n410\n00:21:54.990 --> 00:21:55.550\nAnd thank you for\n\n411\n00:21:55.550 --> 00:22:00.457\nwatching ITProTV, remember, a good IT\npro is always learning, I'm Zach Memos.\n\n412\n00:22:00.457 --> 00:22:01.378\n&gt;&gt; And I'm Don Pezet.\n\n413\n00:22:01.378 --> 00:22:04.173\n&gt;&gt; And we will see you again very soon.\n\n414\n00:22:04.173 --> 00:22:10.167\n[MUSIC]\n\n415\n00:22:10.167 --> 00:22:13.378\nThank you for watching ITProTV.\n\n",
          "vimeoId": "231747110"
        }
      ],
      "title": "Microsoft Azure Compute"
    },
    {
      "episodes": [
        {
          "description": "Don and Zach talk about what is 'Docker,' what we need to get Docker installed, the need to modify the configuration, creating containers, making the containers accessible locally & on the network, security settings, and name mapping in Docker.",
          "length": "2097",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-4-1-linux_as_a_docker_host-082917-PGM.00_34_40_22.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-4-1-linux_as_a_docker_host-082917-PGM.00_34_40_22.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-4-1-linux_as_a_docker_host-082917-PGM.00_34_40_22.Still001-sm.jpg",
          "title": "Linux as a Docker Host",
          "transcript": "WEBVTT\n\n1\n00:00:00.300 --> 00:00:01.487\nWelcome ITPROTV.\n\n2\n00:00:01.487 --> 00:00:04.197\nI'm your host Don Pezet [CROSSTALK]\n\n3\n00:00:04.197 --> 00:00:07.914\n[MUSIC]\n\n4\n00:00:07.914 --> 00:00:10.535\n&gt;&gt; You're watching ITPRO.TV.\n\n5\n00:00:10.535 --> 00:00:12.349\n&gt;&gt; Hello, and thank you for\n\n6\n00:00:12.349 --> 00:00:16.418\nchoosing ITPRO.TV helping\nyou learn wherever you go.\n\n7\n00:00:16.418 --> 00:00:19.879\nI'm your host Zach Memos as we\ncontinue on with Linux in the cloud.\n\n8\n00:00:19.879 --> 00:00:24.415\nAnd Linux as a Docker host is the title of\nthis episode and Don Pezet, our IT pro and\n\n9\n00:00:24.415 --> 00:00:28.114\nall around great guy is gonna give\nus all the information we need.\n\n10\n00:00:28.114 --> 00:00:29.012\nThanks for joining us, Don.\n\n11\n00:00:29.012 --> 00:00:30.112\n&gt;&gt; Thanks for having me, Zach.\n\n12\n00:00:30.112 --> 00:00:32.719\nAnd you know,\nin this episode it's buzzword time, right.\n\n13\n00:00:32.719 --> 00:00:33.426\n&gt;&gt; Yep.\n\n14\n00:00:33.426 --> 00:00:36.844\n&gt;&gt; In the IT industry, as a whole,\nthere are two buzzwords that you can't,\n\n15\n00:00:36.844 --> 00:00:40.010\nI can give you maybe three buzzwords\nthat you can't avoid anymore.\n\n16\n00:00:40.010 --> 00:00:43.635\nTheres cloud, DevOps and Docker.\n\n17\n00:00:43.635 --> 00:00:45.864\nAnd this episode,\nwe're gonna hear it all three, right.\n\n18\n00:00:45.864 --> 00:00:48.549\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] We are already hitting cloud.\n\n19\n00:00:48.549 --> 00:00:51.223\n&gt;&gt; [INAUDIBLE]\n&gt;&gt; This is Linux in the cloud,\n\n20\n00:00:51.223 --> 00:00:53.767\nthat's our series and then DevOps.\n\n21\n00:00:53.767 --> 00:00:58.422\nDevOps is this whole blended environment\nof where developers are starting to do\n\n22\n00:00:58.422 --> 00:00:59.680\noperational tasks.\n\n23\n00:00:59.680 --> 00:01:02.580\nSo system administrators use to be the\nones that ran the servers, but now thanks\n\n24\n00:01:02.580 --> 00:01:05.262\nto these cloud services, developers\nare starting to do it themselves and\n\n25\n00:01:05.262 --> 00:01:06.621\nthey're screwing it up pretty bad.\n\n26\n00:01:06.621 --> 00:01:10.158\nSo that's where the third-\n&gt;&gt; [LAUGH] He meant that in a nice way.\n\n27\n00:01:10.158 --> 00:01:13.046\n&gt;&gt; Well, it's not the developer's fault.\n\n28\n00:01:13.046 --> 00:01:15.870\nIf I'm a developer,\nI've been trained to program,\n\n29\n00:01:15.870 --> 00:01:18.884\nto write in a programming language and\ncreate software,\n\n30\n00:01:18.884 --> 00:01:22.495\nnot to understand what a RAID array is and\nhow to configure a server.\n\n31\n00:01:22.495 --> 00:01:23.433\nThat's not the training.\n\n32\n00:01:23.433 --> 00:01:26.188\nSo DevOps sets developers up for\nfailure in a lot of cases.\n\n33\n00:01:26.188 --> 00:01:29.889\nNow there are some out there that are\namazing, really talented at what they do.\n\n34\n00:01:29.889 --> 00:01:33.387\nBut really, if you have somebody\nwho's a talented developer,\n\n35\n00:01:33.387 --> 00:01:34.757\nlet them be a developer.\n\n36\n00:01:34.757 --> 00:01:37.528\nLet the brain surgeon do brain surgery,\nright?\n\n37\n00:01:37.528 --> 00:01:38.492\n&gt;&gt; Yes.\n&gt;&gt; DevOps says,\n\n38\n00:01:38.492 --> 00:01:41.636\nlet's take one person who's really good at\none thing and make them do two things, and\n\n39\n00:01:41.636 --> 00:01:43.045\nthat's not necessarily a great mix.\n\n40\n00:01:43.045 --> 00:01:46.290\nSo that's where Docker comes in.\n\n41\n00:01:46.290 --> 00:01:49.590\nDocker says, look, DevOps is great, but\n\n42\n00:01:49.590 --> 00:01:54.265\nthere's a lot of room for\nmistakes, and Docker says, hey,\n\n43\n00:01:54.265 --> 00:01:59.694\nlet us handle the virtual machine side,\nthe server side, that part.\n\n44\n00:01:59.694 --> 00:02:00.683\nLet us handle that.\n\n45\n00:02:00.683 --> 00:02:03.324\nAnd all the developer has\nto do is write their code,\n\n46\n00:02:03.324 --> 00:02:06.050\ndump it in the Docker container,\nand it runs.\n\n47\n00:02:06.050 --> 00:02:08.076\nSo cloud is great.\n\n48\n00:02:08.076 --> 00:02:11.407\nYou get huge infrastructure out there for\nlow cost, cloud is great.\n\n49\n00:02:11.407 --> 00:02:15.601\nYou've got DevOps,\na developer doing operational tasks.\n\n50\n00:02:15.601 --> 00:02:17.272\nThat’s great, but\nthey can make a lot of mistakes.\n\n51\n00:02:17.272 --> 00:02:18.874\nDocker solves it,.\n\n52\n00:02:18.874 --> 00:02:23.551\nSo the three technologies together\ncreate a really good solution that\n\n53\n00:02:23.551 --> 00:02:25.540\nyou literally cannot avoid.\n\n54\n00:02:25.540 --> 00:02:29.050\nIn any technical article today,\nthose three buzzwords are everywhere.\n\n55\n00:02:29.050 --> 00:02:31.352\nSo we're gonna take a look at\nit right here in this episode,\n\n56\n00:02:31.352 --> 00:02:33.436\nwhat does it take to stand Docker up,\nget it running.\n\n57\n00:02:33.436 --> 00:02:36.251\nStart to throw some junk in there and\nget it working.\n\n58\n00:02:36.251 --> 00:02:38.464\nSo if you've never been\nexposed to it before,\n\n59\n00:02:38.464 --> 00:02:40.130\nthis will be your chance to see it.\n\n60\n00:02:40.130 --> 00:02:43.621\nSee what it is and then find out\nif it's really not that crazy, but\n\n61\n00:02:43.621 --> 00:02:47.259\nit is good technology, and\ndefinitely something you wanna learn.\n\n62\n00:02:47.259 --> 00:02:49.527\n&gt;&gt; Well, now and very, very intrigued,\nso tell us more about Docker.\n\n63\n00:02:49.527 --> 00:02:53.593\n&gt;&gt; All right, so\nDocker is like virtualization light.\n\n64\n00:02:53.593 --> 00:02:58.348\nSo if you watch your shows on KVM or\nif you've ever used type1 or\n\n65\n00:02:58.348 --> 00:03:04.005\ntype 2 hypervisors like Virtual Box,\nVMWare, XenServer those things,\n\n66\n00:03:04.005 --> 00:03:08.879\nall of them work on this idea of\ncontrolling access to hardware.\n\n67\n00:03:08.879 --> 00:03:13.067\nThey give these different virtual machines\ndifferent sets of hardware that they\n\n68\n00:03:13.067 --> 00:03:16.840\naccess and they're able to function and\nshare hardware under the hood.\n\n69\n00:03:16.840 --> 00:03:20.603\nThe problem with technologies like that\nthough is that if they are a type 2\n\n70\n00:03:20.603 --> 00:03:24.260\nhypervisor, they create a standard\nset of hardware but they are slow.\n\n71\n00:03:24.260 --> 00:03:26.043\nThey are slow because it's fake hardware.\n\n72\n00:03:26.043 --> 00:03:29.606\nYeah, any call to that fake hardware has\nto be translated into a real call to\n\n73\n00:03:29.606 --> 00:03:30.750\nunderlying hardware.\n\n74\n00:03:30.750 --> 00:03:32.327\nType 1 hypervisors are faster.\n\n75\n00:03:32.327 --> 00:03:35.855\nThey’re faster because they expose\nthe underlying hardware to the virtual\n\n76\n00:03:35.855 --> 00:03:36.414\nmachines.\n\n77\n00:03:36.414 --> 00:03:40.453\nThe virtual machine is basically accessing\nreal hardware, it makes them run faster.\n\n78\n00:03:40.453 --> 00:03:44.037\nThe problem there is\nthe different environments,\n\n79\n00:03:44.037 --> 00:03:48.046\nthat I might be running VMWare\nhere in the studio with me.\n\n80\n00:03:48.046 --> 00:03:53.130\nAnd I run a virtual machine and\nit's seeing Intel Xeon processors or\n\n81\n00:03:53.130 --> 00:03:55.549\nmaybe just a regular Intel i7.\n\n82\n00:03:55.549 --> 00:03:56.917\nAnd then I take my virtual machine,\nI get it built up perfectly, right.\n\n83\n00:03:56.917 --> 00:03:58.736\nWe write some software.\n\n84\n00:03:58.736 --> 00:04:04.752\nThe software's running and then I take the\nsoftware and I load up into Amazon's AWS.\n\n85\n00:04:04.752 --> 00:04:06.780\nAnd now it's running on theirs and\nthey don't run VMware but\n\n86\n00:04:06.780 --> 00:04:08.350\nlet's just pretend for\na moment that they do.\n\n87\n00:04:08.350 --> 00:04:10.230\nMaybe they're running VMware.\n\n88\n00:04:10.230 --> 00:04:13.610\nBut under the hood,\nthere's Xeon processors instead of i7s.\n\n89\n00:04:13.610 --> 00:04:15.892\nWell, is my software gonna\nbehave the same way?\n\n90\n00:04:15.892 --> 00:04:19.130\nIt might, it might run a little bit\nfaster, it might run a little bit slower.\n\n91\n00:04:19.130 --> 00:04:20.903\nThere might be some features missing or\n\n92\n00:04:20.903 --> 00:04:24.136\nsome new feature that it doesn't\nunderstand and it creates problems.\n\n93\n00:04:24.136 --> 00:04:28.580\nAnd the developers, when they write code,\nthey wanna be able to write the code.\n\n94\n00:04:28.580 --> 00:04:32.651\nAnd as long as it passes their tests in\ntheir development environment, they wanna\n\n95\n00:04:32.651 --> 00:04:35.956\nbe able to deploy it in production and\nknow that it will work there.\n\n96\n00:04:35.956 --> 00:04:39.646\nThe problem is,\nthe environments are heterogenous, right.\n\n97\n00:04:39.646 --> 00:04:40.187\nThey're different.\n\n98\n00:04:40.187 --> 00:04:43.497\nThere's changes in between your\ndevelopment environment and\n\n99\n00:04:43.497 --> 00:04:45.189\nyour production environment.\n\n100\n00:04:45.189 --> 00:04:47.416\nDocker works to solve that.\n\n101\n00:04:47.416 --> 00:04:48.394\nDocker says,\n\n102\n00:04:48.394 --> 00:04:53.855\nwe're gonna create an abstracted\nenvironment almost like a virtual machine.\n\n103\n00:04:53.855 --> 00:04:54.820\nBut it's not a virtual machine.\n\n104\n00:04:54.820 --> 00:04:57.100\nIt's more like a CH root jail.\n\n105\n00:04:57.100 --> 00:05:00.958\nIf you watched our Linux security\ntechnique show, we talk about\n\n106\n00:05:00.958 --> 00:05:05.468\nCH root jails and how you could create\nisolated file systems for a service.\n\n107\n00:05:05.468 --> 00:05:09.383\nDocker is effectively creating an isolated\noperating system for a service.\n\n108\n00:05:09.383 --> 00:05:13.147\nReally just compartmentalizing\neverything into this container.\n\n109\n00:05:13.147 --> 00:05:18.201\nAnd under the hood, all it expects is\nto be able to talk to a Linux kernel.\n\n110\n00:05:18.201 --> 00:05:22.936\nSo you might be running Red Hat,\nor CentOS, or Debian or Ubuntu.\n\n111\n00:05:22.936 --> 00:05:27.397\nThey've all got that same common\nLinux kernel under the hood.\n\n112\n00:05:27.397 --> 00:05:31.030\nAnd so you can create a Docker container\nthat's attached to that kernel.\n\n113\n00:05:31.030 --> 00:05:33.960\nAnd then inside of the container,\nyou can add any other software you need.\n\n114\n00:05:33.960 --> 00:05:37.780\nWhatever functionalities you want,\nyou can put inside of that container.\n\n115\n00:05:37.780 --> 00:05:39.999\nAnd you can through your\napplication on there.\n\n116\n00:05:39.999 --> 00:05:41.657\nAnd the application isn't\ntalking to the hardware.\n\n117\n00:05:41.657 --> 00:05:44.963\nThe application is talking to the kernel,\nand the kernel is doing the work,\n\n118\n00:05:44.963 --> 00:05:46.470\nand the kernel is always the same.\n\n119\n00:05:46.470 --> 00:05:50.530\nSo now if a developer writes\nthe application in that docker container\n\n120\n00:05:50.530 --> 00:05:53.890\nat their desk,\nthey can then take that application, and\n\n121\n00:05:53.890 --> 00:05:56.050\nput it in a Docker container in AWS.\n\n122\n00:05:56.050 --> 00:06:01.027\nOr put it in a Docker container in staging\nor in production and know that it will\n\n123\n00:06:01.027 --> 00:06:05.713\nsee the exact same environment\nregardless of which one it deploys into.\n\n124\n00:06:05.713 --> 00:06:09.683\nAnd so that gives us a consistent\nstable development environment and\n\n125\n00:06:09.683 --> 00:06:11.607\nmakes troubleshooting easier.\n\n126\n00:06:11.607 --> 00:06:12.819\nIt makes development easier.\n\n127\n00:06:12.819 --> 00:06:15.966\nIt makes pushes from staging to\nproduction much more flawless because\n\n128\n00:06:15.966 --> 00:06:19.340\nyou've an actual reflection of what\nthat environment is gonna look like.\n\n129\n00:06:19.340 --> 00:06:21.197\nThat's what Docker does.\n\n130\n00:06:21.197 --> 00:06:25.790\nNow as a system administrator, you might\nlook at that and say, why do I care?\n\n131\n00:06:25.790 --> 00:06:27.169\nI'll just use VirtualBox.\n\n132\n00:06:27.169 --> 00:06:30.082\nI'll just use KVM, right.\n\n133\n00:06:30.082 --> 00:06:34.350\nBut for a developer, they don't\nget involved with setting up KVM.\n\n134\n00:06:34.350 --> 00:06:38.985\nThey don't understand necessarily, and\nknow that I'm doing generalizations here.\n\n135\n00:06:38.985 --> 00:06:41.435\nSo if you're a developer,\nyou know all this and no hard feelings.\n\n136\n00:06:41.435 --> 00:06:45.031\nBut most developers don't know how to\nset up the underlying storage to support\n\n137\n00:06:45.031 --> 00:06:45.910\nvirtualization.\n\n138\n00:06:45.910 --> 00:06:49.904\nOr how to check to make sure your\nCPU even has virtualization support.\n\n139\n00:06:49.904 --> 00:06:53.662\nDocker removes the need for all that and\njust says, hey, if you've got Docker,\n\n140\n00:06:53.662 --> 00:06:56.000\nyou can just build as many\ncontainers as you want.\n\n141\n00:06:56.000 --> 00:06:58.989\nAnd you don't tell it how much memory you\nneed cuz it's just using the shared memory\n\n142\n00:06:58.989 --> 00:06:59.596\nof your system.\n\n143\n00:06:59.596 --> 00:07:02.820\nYou don't tell it what CPU you need cuz\nit's just talking to the kernel and\n\n144\n00:07:02.820 --> 00:07:05.160\nkernel's masking what\nthe process there is anyway.\n\n145\n00:07:05.160 --> 00:07:09.624\nSo all of that is done to a much\nmore simplified interface which is\n\n146\n00:07:09.624 --> 00:07:11.121\nthe Docker service.\n\n147\n00:07:11.121 --> 00:07:12.794\nAnd that's why it's\nbecome such a buzzword.\n\n148\n00:07:12.794 --> 00:07:16.097\nIs that all these Internet\nstartups that are out there,\n\n149\n00:07:16.097 --> 00:07:19.962\nif you invent the next Twitter or\nthe next Pinterest or whatever,\n\n150\n00:07:19.962 --> 00:07:23.281\nyou're likely developing\nthat in a Docker container.\n\n151\n00:07:23.281 --> 00:07:28.100\nSo that, when you go from having 100 users\nto having 100 million users, all you did\n\n152\n00:07:28.100 --> 00:07:33.133\nwas take that Docker container and throw\nit in a and now you got 1,000 of them.\n\n153\n00:07:33.133 --> 00:07:36.115\nOr now you have 10,000 of them and\nyou get to blow it out and\n\n154\n00:07:36.115 --> 00:07:39.000\nget as many as you need to support\nthe load that you are under.\n\n155\n00:07:39.000 --> 00:07:40.220\nDocker lets you do that.\n\n156\n00:07:40.220 --> 00:07:43.276\nSo, very valuable technology,\ndefinitely important for\n\n157\n00:07:43.276 --> 00:07:47.260\nscalability, and one that we're seeing\nhere is more, and more, and more.\n\n158\n00:07:47.260 --> 00:07:49.400\nAnd Docker is not\nthe first one to do this.\n\n159\n00:07:49.400 --> 00:07:52.352\nIf you watched our shows\non LXC containers, right.\n\n160\n00:07:52.352 --> 00:07:54.061\nLXC is Linux container.\n\n161\n00:07:54.061 --> 00:07:56.655\nLXC container is basically\nthe same this as Docker, right.\n\n162\n00:07:56.655 --> 00:08:01.705\nThe difference is,\nLXC Decided to go Linux only.\n\n163\n00:08:01.705 --> 00:08:05.099\nWell, a lot of developers aren't\nrunning Linux on their own laptop in\n\n164\n00:08:05.099 --> 00:08:08.691\nthe development route, they're\nrunning Windows or Mac, with Docker?\n\n165\n00:08:08.691 --> 00:08:12.900\nDocker said, yeah the server really needs\nto be Linux, but you could run Docker\n\n166\n00:08:12.900 --> 00:08:16.600\ncontainers on your desktop if you're\nrunning Max OS or Windows or Linux, and\n\n167\n00:08:16.600 --> 00:08:20.470\nbecause of that, developer acceptance\nof Docker was much higher.\n\n168\n00:08:20.470 --> 00:08:25.820\nAnd well LXC is a great technology and\nI love it, Docker is the main stream one.\n\n169\n00:08:25.820 --> 00:08:28.750\nThat's the one that people are gonna use\nif you do a containerized technology\n\n170\n00:08:28.750 --> 00:08:32.950\ntoday, it's going to be Docker and\nit's kinda of just swept that market.\n\n171\n00:08:32.950 --> 00:08:35.890\nSo that now they're practically\nthe only competition are there.\n\n172\n00:08:35.890 --> 00:08:38.755\n&gt;&gt; So the next logical question is\nhow do we get Docker installed?\n\n173\n00:08:38.755 --> 00:08:40.318\n&gt;&gt; Well, it's really easy,\n\n174\n00:08:40.318 --> 00:08:44.280\nright, it's not like a type one hypervisor\nwhere I gotta do a bunch of craziness.\n\n175\n00:08:44.280 --> 00:08:46.210\nDocker is just a service\nthat I install and\n\n176\n00:08:46.210 --> 00:08:48.870\nthen I interact with that\nservice to create my containers.\n\n177\n00:08:48.870 --> 00:08:54.910\nFor example I've got a CentOS box\nhere which is just running CentOS 7.\n\n178\n00:08:54.910 --> 00:08:57.915\nAnd so it's up, it's running,\nit's happy, it's doing it's thing.\n\n179\n00:08:57.915 --> 00:09:00.156\n&gt;&gt; Mm-hm.\n&gt;&gt; And I'm gonna add Docker to it.\n\n180\n00:09:00.156 --> 00:09:04.260\nI could do this on\nRedhead Enterprise Linux or a or and\n\n181\n00:09:04.260 --> 00:09:09.400\nany of the other ones that are out there,\nDocker is pretty widely supported.\n\n182\n00:09:09.400 --> 00:09:13.759\nSoto get it installed here,\nI'm gonna do a sudo yum install and\n\n183\n00:09:13.759 --> 00:09:16.650\nI'm gonna install the Docker packages.\n\n184\n00:09:16.650 --> 00:09:20.340\nNow, technically, I just need one Docker.\n\n185\n00:09:20.340 --> 00:09:24.193\nSo this could be the easiest install ever,\njust say sudo yum install docker.\n\n186\n00:09:24.193 --> 00:09:25.435\n&gt;&gt; And we'll sue you later.\n\n187\n00:09:25.435 --> 00:09:26.540\n[LAUGH]\n&gt;&gt; And that's that.\n\n188\n00:09:26.540 --> 00:09:28.410\nBut let me give you a word of caution.\n\n189\n00:09:28.410 --> 00:09:32.670\nThere's a few dependencies that Docker has\nand let me see if it gets them or not.\n\n190\n00:09:32.670 --> 00:09:35.660\nSome distros get these\ndependencies some don't.\n\n191\n00:09:35.660 --> 00:09:36.390\nAs I look here,\n\n192\n00:09:36.390 --> 00:09:40.860\nI'll see like container- - selinux which\nis a great security layer to have.\n\n193\n00:09:40.860 --> 00:09:44.480\nWe've also got a few other things\nin here as far as extra hooks and\n\n194\n00:09:44.480 --> 00:09:46.879\nsystem d interaction stuff like that but,\n\n195\n00:09:46.879 --> 00:09:52.100\nsecuring Docker containers is\nactually a really important thing.\n\n196\n00:09:52.100 --> 00:09:54.880\nThere's a couple of issues\nyou can bump into with it and\n\n197\n00:09:54.880 --> 00:09:58.910\nso when I install Docker there's two more\npackages which I'm gonna check as neither\n\n198\n00:09:58.910 --> 00:10:02.850\nof them were picked up here, which,\nhelp me provide some additional security.\n\n199\n00:10:02.850 --> 00:10:07.200\nSo, when I install Docker,\nI always add two more packages.\n\n200\n00:10:07.200 --> 00:10:14.460\nThere is the,\nlet's see it's the device-mapper-libs\n\n201\n00:10:14.460 --> 00:10:19.203\nand device-mapper-event-libs,\n\n202\n00:10:19.203 --> 00:10:23.361\nthose two packages right there.\n\n203\n00:10:23.361 --> 00:10:28.433\nAnd what these are doingiIs letting me\ndo,what, like an n kind of device mapping,\n\n204\n00:10:28.433 --> 00:10:31.692\nwhere we are mapping these\nvirtual calls to devices,\n\n205\n00:10:31.692 --> 00:10:34.300\nand really the main reason I need them,\nand\n\n206\n00:10:34.300 --> 00:10:39.210\nwe're gonna see this later in the series,\nis from a security stand point.\n\n207\n00:10:39.210 --> 00:10:40.548\nThat by default,\n\n208\n00:10:40.548 --> 00:10:45.553\nthe root user in container is\nthe root user in the underlying host.\n\n209\n00:10:45.553 --> 00:10:50.416\nSo if a developer tells me Don I'm working\non something and ultimately I won't need\n\n210\n00:10:50.416 --> 00:10:54.804\nit but at least in the Dev stage I need\nto have root access in this container.\n\n211\n00:10:54.804 --> 00:10:58.650\nIf I give them that root access they could\nfind a way to escape the container and\n\n212\n00:10:58.650 --> 00:11:02.095\nthey would have root access in\nthe underlying host that would be bad.\n\n213\n00:11:02.095 --> 00:11:05.335\nSo we're gonna configure what's\ncalled a name space later on,\n\n214\n00:11:05.335 --> 00:11:09.175\na name mapping that let's us map the root\nuser in a container to just a regular\n\n215\n00:11:09.175 --> 00:11:11.860\nunprivileged user in our OS and\nsolves that.\n\n216\n00:11:11.860 --> 00:11:14.730\nBut we need to add these extra\npackages to be able to do that, so\n\n217\n00:11:14.730 --> 00:11:20.080\nI'm gonna add those to my list and it'll\ntack them on and actually you know what?\n\n218\n00:11:20.080 --> 00:11:21.530\nNotice how they didn't\nshow up here in the list?\n\n219\n00:11:21.530 --> 00:11:23.010\nThat means they're a part\nof one of these other ones,\n\n220\n00:11:23.010 --> 00:11:25.440\nthey actually might be a part\nof container dash SE Linux.\n\n221\n00:11:25.440 --> 00:11:28.380\nSo it looks like it's grabbing it as a\npart of this, so I didn't have to add it.\n\n222\n00:11:28.380 --> 00:11:29.540\nBut to be on the safe side,\n\n223\n00:11:29.540 --> 00:11:33.170\nI like to specify this because I will\nneed those to secure the system.\n\n224\n00:11:33.170 --> 00:11:35.710\nSo I'll go and say yes to that,\nand it's gonna get it installed.\n\n225\n00:11:35.710 --> 00:11:39.890\nAnd the main piece here that I want to\ninteract with is that Docker service.\n\n226\n00:11:39.890 --> 00:11:43.630\nAnd when it installs,\nit's setting itself up as a system D unit.\n\n227\n00:11:43.630 --> 00:11:46.254\nSo all I've gotta do is tell\nthe unit that I want to enable it,\n\n228\n00:11:46.254 --> 00:11:48.820\nand then I wanna start it up and\nget it up and running.\n\n229\n00:11:48.820 --> 00:11:51.300\nIt will be ready to start\nworking with our containers.\n\n230\n00:11:51.300 --> 00:11:54.440\nSo as soon as that's installed\nwhich should almost be done,\n\n231\n00:11:54.440 --> 00:11:58.160\nthe packages are pretty small,\nit's 19 megabytes.\n\n232\n00:11:58.160 --> 00:12:00.380\nDocker itself is not very heavy weight,\n\n233\n00:12:00.380 --> 00:12:02.820\nversus like,\nif I install VMware Workstation,\n\n234\n00:12:02.820 --> 00:12:05.450\nit's several hundreds megs because\nit has a Graphical User Interface.\n\n235\n00:12:05.450 --> 00:12:07.130\n&gt;&gt; Mm-hm.\n&gt;&gt; This is just a demon that runs in\n\n236\n00:12:07.130 --> 00:12:07.800\nthe background.\n\n237\n00:12:07.800 --> 00:12:13.256\nIt's very, very small, and the containers\nthat I chuck into it, the containers might\n\n238\n00:12:13.256 --> 00:12:18.071\nbe big over time as I add things, but\nthe system itself is really not that big.\n\n239\n00:12:18.071 --> 00:12:21.129\nIt's pausing here not cuz it's dealing\nwith a lot of data, but because it was\n\n240\n00:12:21.129 --> 00:12:24.560\nupdating my SE Linux policy, and SE Linux\npolicies always take a little bit of time.\n\n241\n00:12:24.560 --> 00:12:26.421\n&gt;&gt; Okay.\n&gt;&gt; On a it would have already been done\n\n242\n00:12:26.421 --> 00:12:28.520\nbecause doesn't run SE Linux by default.\n\n243\n00:12:29.650 --> 00:12:32.970\nSo now that that is done, I've got it\nin there, I just need to turn it on so\n\n244\n00:12:32.970 --> 00:12:36.260\nI can do a sudo, and\nactually I'm gonna do a sudo-s just so\n\n245\n00:12:36.260 --> 00:12:38.410\nI can get to a root shell and\nnot have to sudo everything.\n\n246\n00:12:38.410 --> 00:12:42.288\n&gt;&gt; Okay.\n&gt;&gt; I'll do a systemctl, and\n\n247\n00:12:42.288 --> 00:12:48.010\nI will do enable--now docker.service.\n\n248\n00:12:48.010 --> 00:12:51.140\nAll right, so that's going to turn\nthat service on, and start it up.\n\n249\n00:12:51.140 --> 00:12:54.410\nSo, I should be up and\nrunning that Docker service.\n\n250\n00:12:54.410 --> 00:12:59.100\nI can do a systemctl status\ndocker.service, just to see if it actually\n\n251\n00:12:59.100 --> 00:13:03.650\ndid start, and I can see it's active and\nrunning, and it's happy.\n\n252\n00:13:03.650 --> 00:13:05.255\nAnd then depending on your install,\n\n253\n00:13:05.255 --> 00:13:08.827\nthere's a few other ways we can check the\nstatus but right there that's enough for\n\n254\n00:13:08.827 --> 00:13:11.932\nme to know that I've got the service\ninstalled and its up and running and\n\n255\n00:13:11.932 --> 00:13:14.420\nnow I'm ready to get in there and\nstart to use it.\n\n256\n00:13:14.420 --> 00:13:18.152\n&gt;&gt; Don, do we need to modify\nthe default configuration do you think?\n\n257\n00:13:18.152 --> 00:13:21.796\n&gt;&gt; It depends, the default configuration\nof Docker is actually pretty suitable for\n\n258\n00:13:21.796 --> 00:13:22.439\nmost people.\n\n259\n00:13:22.439 --> 00:13:22.990\n&gt;&gt; Mm-hm.\n\n260\n00:13:22.990 --> 00:13:26.630\n&gt;&gt; If you're not worried\nabout crazy security or\n\n261\n00:13:26.630 --> 00:13:29.130\nother options, it's ready,\nI can start creating containers.\n\n262\n00:13:29.130 --> 00:13:32.710\nSo, if this was just my laptop,\nI'm probably done, right?\n\n263\n00:13:32.710 --> 00:13:35.790\nOr if it was the developers' laptop or\ntheir desktop, I'd probably be done.\n\n264\n00:13:35.790 --> 00:13:37.035\nOn a server though,\n\n265\n00:13:37.035 --> 00:13:40.924\nthere is some additional stuff\nthat we'll want to configure.\n\n266\n00:13:40.924 --> 00:13:47.130\nDocker's primary configuration\nis stored in /etc/sysconfig.\n\n267\n00:13:47.130 --> 00:13:49.717\nSo if I go into that folder,\n/etc/sysconfig and\n\n268\n00:13:49.717 --> 00:13:54.150\nI take a look around in there, you'll find\na Docker file as well as docker-network,\n\n269\n00:13:54.150 --> 00:13:58.090\ndocker-storage, right,\na couple of different components.\n\n270\n00:13:58.090 --> 00:14:01.850\nThe Docker files, the one that I\nusually care the most about, right, so\n\n271\n00:14:01.850 --> 00:14:07.522\nI'm gonna edit that,\n/etc/sysconfig/docker, all right.\n\n272\n00:14:07.522 --> 00:14:12.420\nAnd if you take a look in here,\nit's pretty well documented.\n\n273\n00:14:12.420 --> 00:14:13.910\nIt's got a lot of data in here.\n\n274\n00:14:13.910 --> 00:14:18.270\nBut notice how almost all the lines\nhave pound symbol at the beginning.\n\n275\n00:14:18.270 --> 00:14:20.190\nAlmost everyone is commented out, right.\n\n276\n00:14:20.190 --> 00:14:22.163\nSo most of these are just\nin here as notes for you.\n\n277\n00:14:22.163 --> 00:14:24.870\nIf you want to turn on\nthese features you can.\n\n278\n00:14:24.870 --> 00:14:29.080\nThe one that I focus on here really here\nat the beginning is right up at the top,\n\n279\n00:14:29.080 --> 00:14:30.620\nthis options line.\n\n280\n00:14:30.620 --> 00:14:35.263\nThe options line is saying\nwhat to do when Docker starts,\n\n281\n00:14:35.263 --> 00:14:39.920\nright, and\nby default I got- -selinux enabled.\n\n282\n00:14:39.920 --> 00:14:43.850\nIf you're on CentOS or RedHat, they\nhave SE Linux installed by default and\n\n283\n00:14:43.850 --> 00:14:45.630\nit's enabling that functionality.\n\n284\n00:14:45.630 --> 00:14:48.210\nThat can cause some problems\nif you haven't figured out\n\n285\n00:14:48.210 --> 00:14:50.660\nthe disk access requirements\nof your software.\n\n286\n00:14:50.660 --> 00:14:52.250\nSo some people might wanna turn that off.\n\n287\n00:14:52.250 --> 00:14:55.160\nYou turn it off just by\ndeleting that argument.\n\n288\n00:14:55.160 --> 00:14:56.000\nUsually you want it on though,\n\n289\n00:14:56.000 --> 00:14:58.140\nit's a security sub layer,\nit's there for a reason.\n\n290\n00:14:58.140 --> 00:15:03.960\nThen, log-driver=journald,\nthat means when it generates log messages,\n\n291\n00:15:03.960 --> 00:15:06.500\nit's not gonna go to cis log,\nit's gonna go to journal d, and\n\n292\n00:15:06.500 --> 00:15:09.700\njournal d in turn will write the cis\nlog so it'll be there as well.\n\n293\n00:15:09.700 --> 00:15:11.760\nYou can override that and\nput in cis log so\n\n294\n00:15:11.760 --> 00:15:15.580\nthat it'll actually go to\nour cis log d instead.\n\n295\n00:15:15.580 --> 00:15:17.280\nBut normally,\nwe'd want it to go to journal d,\n\n296\n00:15:17.280 --> 00:15:20.800\nthat's the way a system d is removing and\nthat's where you need that data to go.\n\n297\n00:15:21.820 --> 00:15:27.100\nThe other option though is one\nthat kinda depends for me right.\n\n298\n00:15:27.100 --> 00:15:28.330\nIf this is a production server,\n\n299\n00:15:28.330 --> 00:15:32.420\nI normally remove this,\nit says signature verification false.\n\n300\n00:15:32.420 --> 00:15:35.560\nWhen you deploy a container,\nyou deploy it from an image, right.\n\n301\n00:15:35.560 --> 00:15:39.770\nSo somebody builds an image of what\nthat container's gonna contain.\n\n302\n00:15:39.770 --> 00:15:43.483\nAnd you can get those images\nfrom a repository, from a,\n\n303\n00:15:43.483 --> 00:15:45.225\nit's called a registry.\n\n304\n00:15:45.225 --> 00:15:48.913\nSo Docker registries have whole\ncollections of images that we can quickly\n\n305\n00:15:48.913 --> 00:15:53.087\ndownload and use, in fact a lot of them\nwill pull from Docker itself at docker.io.\n\n306\n00:15:53.087 --> 00:15:57.812\nIf you ever go to that website, docker.io\nyou can go into Docker hub and browse and\n\n307\n00:15:57.812 --> 00:15:59.057\nfind tons of images.\n\n308\n00:15:59.057 --> 00:16:02.416\nMade by really reputable\ncompanies that you can use.\n\n309\n00:16:02.416 --> 00:16:06.775\nWell, what's to stop a hacker from\nmodifying one of those images and\n\n310\n00:16:06.775 --> 00:16:08.436\nputting a backdoor in it?\n\n311\n00:16:08.436 --> 00:16:11.970\nAnd now you're downloading an image\nthat has backdoor embedded in it.\n\n312\n00:16:11.970 --> 00:16:15.100\nSo we can tell it, hey,\nwhen I load an image,\n\n313\n00:16:15.100 --> 00:16:20.230\nonly load images if I can\nverify their digital signature.\n\n314\n00:16:20.230 --> 00:16:22.220\nOkay.\nThe problem is,\n\n315\n00:16:22.220 --> 00:16:25.620\na lot of registries aren't\nsigning their images.\n\n316\n00:16:25.620 --> 00:16:29.340\nSo that's why the default here is\nsignature verification is false.\n\n317\n00:16:29.340 --> 00:16:30.780\nI might be okay with that and\njust say, all right,\n\n318\n00:16:30.780 --> 00:16:32.760\nwell I'll make sure to only\npull reputable images.\n\n319\n00:16:32.760 --> 00:16:34.820\nAnd I'll make sure I only\npull from reputable sources.\n\n320\n00:16:34.820 --> 00:16:35.941\nOr I might say, you know what?\n\n321\n00:16:35.941 --> 00:16:38.543\nI'm gonna set up my own internal registry.\n\n322\n00:16:38.543 --> 00:16:42.050\nAnd that way, I know I trust it and\nI can pull from there if I wanna.\n\n323\n00:16:42.050 --> 00:16:43.290\nYou can certainly do that.\n\n324\n00:16:43.290 --> 00:16:47.380\nOr,you can remove this line, or change it\nto signature verification equals true.\n\n325\n00:16:47.380 --> 00:16:49.430\nIf you remove it, it defaults to true.\n\n326\n00:16:49.430 --> 00:16:51.750\nAnd now you'll only run\nimages that are signed.\n\n327\n00:16:51.750 --> 00:16:54.450\nIt's an extra security protection to\nmake sure they haven't been tampered\n\n328\n00:16:54.450 --> 00:16:56.050\nwith or modified.\n\n329\n00:16:56.050 --> 00:16:58.900\nAgain, on a desktop or\na laptop, I might not care.\n\n330\n00:16:58.900 --> 00:17:01.220\nBut in a production server,\nI absolutely would.\n\n331\n00:17:01.220 --> 00:17:04.230\nAnd that's an option that we\nmay want to tweak and change.\n\n332\n00:17:04.230 --> 00:17:07.176\nSo those are a few things\nthat we might modify in here.\n\n333\n00:17:07.176 --> 00:17:09.505\nYou can tweak and change them.\n\n334\n00:17:09.505 --> 00:17:12.215\nAnd then when you restart\nthe Docker service they'll apply.\n\n335\n00:17:12.215 --> 00:17:14.525\nAnd you'll get a chance to see that.\n\n336\n00:17:14.525 --> 00:17:15.554\nThere's more documentation.\n\n337\n00:17:15.554 --> 00:17:20.144\nBut most of what you see here is what you\nneed to know to come in and tweak and\n\n338\n00:17:20.144 --> 00:17:22.485\nmodify these options.\n\n339\n00:17:22.485 --> 00:17:24.324\nSome systems have another\ncommand you can run.\n\n340\n00:17:24.324 --> 00:17:29.475\nIt's docker daemon --help.\n\n341\n00:17:29.475 --> 00:17:30.685\nNot everyone has that.\n\n342\n00:17:30.685 --> 00:17:32.485\nBut, actually does mine not have it?\n\n343\n00:17:33.830 --> 00:17:34.409\nNo it does.\nSo\n\n344\n00:17:34.409 --> 00:17:37.638\nhere's where I can come in and\nsee all the different options.\n\n345\n00:17:37.638 --> 00:17:42.214\nSo like, where did I know to\ndo --signature-verify=false?\n\n346\n00:17:42.214 --> 00:17:43.955\nWell, I didn't, it was the default, right?\n\n347\n00:17:43.955 --> 00:17:44.601\n&gt;&gt; Uh-huh.\n&gt;&gt; But you can look in here.\n\n348\n00:17:44.601 --> 00:17:47.944\nAnd you can find all the command line\narguments that we can specify in here is\n\n349\n00:17:47.944 --> 00:17:50.988\nthe --signature-verification=true,\nor the other version.\n\n350\n00:17:50.988 --> 00:17:55.980\nSo anything in here,\nI ran docker daemon --help.\n\n351\n00:17:55.980 --> 00:17:59.984\n&gt;&gt; Anything in here is an argument that I\ncould add to that options screen to modify\n\n352\n00:17:59.984 --> 00:18:00.841\nthat behavior.\n\n353\n00:18:00.841 --> 00:18:04.440\nAnd you'll see a lot of stuff in\nhere that you can tweak and change.\n\n354\n00:18:04.440 --> 00:18:07.654\nWe'll even go through a few more later\nin the show that you can tweak and\n\n355\n00:18:07.654 --> 00:18:11.654\nchange the customize the way that Docker\nbehaves beyond that default configuration.\n\n356\n00:18:11.654 --> 00:18:16.519\n&gt;&gt; So now that the server's online,\nare we ready to start creating containers?\n\n357\n00:18:17.600 --> 00:18:18.180\nTechnically, yeah.\n\n358\n00:18:18.180 --> 00:18:23.430\nIf you're gonna be pulling containers\nfrom docker.io, it's already set up.\n\n359\n00:18:23.430 --> 00:18:26.605\nBut, one of the options you'll notice\nright here, the very first one,\n\n360\n00:18:26.605 --> 00:18:28.280\nis --add-registry.\n\n361\n00:18:28.280 --> 00:18:29.890\nI can add other registries.\n\n362\n00:18:29.890 --> 00:18:32.760\nI might have private registries,\nthat I want to pull from.\n\n363\n00:18:32.760 --> 00:18:35.380\nOr I might have my own internal\nregistries that I want to pull from.\n\n364\n00:18:35.380 --> 00:18:37.720\nAnd so, we'll need to tweak\nit a little bit to do that.\n\n365\n00:18:37.720 --> 00:18:42.030\nSo, if you're pulling images from\ndocker.io, yes, you're done.\n\n366\n00:18:42.030 --> 00:18:43.430\nHave at it, right?\n\n367\n00:18:43.430 --> 00:18:45.880\nBut if we're pulling from somewhere\nelse we need to get that set up.\n\n368\n00:18:45.880 --> 00:18:50.090\nSo for example I'm on CentOS but\nlet's say that I was on Red Hat.\n\n369\n00:18:50.090 --> 00:18:52.450\nIf I was on Red Hat,\nRed That Enterprise Linux,\n\n370\n00:18:52.450 --> 00:18:55.695\nthey actually have Red Hat\ncontainers you can pull down.\n\n371\n00:18:55.695 --> 00:18:57.332\nThey're not free, they cost money though.\n\n372\n00:18:57.332 --> 00:18:59.610\nAnd so\nI can't just get them from docker.io.\n\n373\n00:18:59.610 --> 00:19:00.842\nI've got to get them from Red Hat.\n\n374\n00:19:00.842 --> 00:19:02.810\nAnd I have to have a subscription for it.\n\n375\n00:19:02.810 --> 00:19:06.320\nSo, in order to pull those,\nI would need to add their registry.\n\n376\n00:19:06.320 --> 00:19:08.130\nSo let me show you what\nthat would be like.\n\n377\n00:19:08.130 --> 00:19:12.965\nI'm gonna go and edit that\n/etc/sysconfig/docker file again.\n\n378\n00:19:12.965 --> 00:19:14.356\nAnd, you can come in here.\n\n379\n00:19:14.356 --> 00:19:18.560\nAnd I could use --add-registry\nright here in the options command.\n\n380\n00:19:18.560 --> 00:19:20.440\nBut it starts to get a little bit long.\n\n381\n00:19:20.440 --> 00:19:24.050\nIf you look down a little bit lower\nthough, right here, we've got an example.\n\n382\n00:19:24.050 --> 00:19:26.170\n--add-registry, and\nin fact this kinda worked out.\n\n383\n00:19:26.170 --> 00:19:27.879\nThe example is Red Hat.\n\n384\n00:19:27.879 --> 00:19:29.800\n&gt;&gt; Perfect.\n&gt;&gt; [LAUGH] So, that's nice.\n\n385\n00:19:29.800 --> 00:19:31.540\nI can come in and\njust uncomment that line.\n\n386\n00:19:31.540 --> 00:19:34.330\nAnd it's gonna add that registry.\n\n387\n00:19:34.330 --> 00:19:35.900\nOr I could add other ones.\n\n388\n00:19:35.900 --> 00:19:38.880\nI could come in and specify,\nyou just go right on the end of this one.\n\n389\n00:19:38.880 --> 00:19:39.680\nI could add another one.\n\n390\n00:19:39.680 --> 00:19:45.277\nI could say --add-registry.\n\n391\n00:19:45.277 --> 00:19:51.730\nAnd then I could specify that I was\nadding maybe registry.lab.itpro.tv.\n\n392\n00:19:51.730 --> 00:19:53.500\nI'm gonna have my own private registry.\n\n393\n00:19:53.500 --> 00:19:55.056\nAnd I could add that to the list.\n\n394\n00:19:55.056 --> 00:19:57.130\nAnd now that one is\ngonna get pulled in too.\n\n395\n00:19:57.130 --> 00:19:59.355\nSo you might need to tweak that before\nyou go and start grabbing containers,\n\n396\n00:19:59.355 --> 00:20:01.790\nespecially if you're not finding\nthe image you're looking for.\n\n397\n00:20:01.790 --> 00:20:03.960\nThen it's just not hosted on docker.io.\n\n398\n00:20:03.960 --> 00:20:06.990\nThat's where the main ones are stored.\n\n399\n00:20:06.990 --> 00:20:07.820\nIn fact,\n\n400\n00:20:07.820 --> 00:20:12.490\non that note, you might say to yourself, I\nonly wanna pull from my private registry.\n\n401\n00:20:12.490 --> 00:20:16.320\nI don't ever wanna pull from docker.io,\nright, or some other registry.\n\n402\n00:20:16.320 --> 00:20:19.720\nSo right beneath it here you'll\nsee where we can block a registry.\n\n403\n00:20:19.720 --> 00:20:25.044\nI can come in and\nI can say BLOCK REGISTRY=.\n\n404\n00:20:25.044 --> 00:20:26.834\nAnd then I can specify\nthe registry that I want to block.\n\n405\n00:20:26.834 --> 00:20:31.000\nI'm gonna do a --block-registry,\n\n406\n00:20:31.000 --> 00:20:34.921\nfollowed by, I'll do docker.io.\n\n407\n00:20:34.921 --> 00:20:36.097\nSo I'm gonna block that one.\n\n408\n00:20:36.097 --> 00:20:39.242\nAnd what it's doing is basically\ntaking this little argument and\n\n409\n00:20:39.242 --> 00:20:41.998\njust adding it to the end of\nthe options argument up here.\n\n410\n00:20:41.998 --> 00:20:45.708\nSo instead of making it super long on\nthe screen it's just multiple lines here.\n\n411\n00:20:45.708 --> 00:20:47.004\nBut that'll make it block that.\n\n412\n00:20:47.004 --> 00:20:49.996\nAnd now I will only pull images\nfrom the registries that\n\n413\n00:20:49.996 --> 00:20:53.710\nI've added up here because\nthat's all that I'm allowed.\n\n414\n00:20:53.710 --> 00:20:58.540\nOkay, now for this show I am gonna\npull from the Docker registry.\n\n415\n00:20:58.540 --> 00:21:01.430\nSo, I'm gonna go ahead and\ncomment those lines back out so\n\n416\n00:21:01.430 --> 00:21:02.920\nI won't mess everything up.\n\n417\n00:21:02.920 --> 00:21:04.720\nBut that's how we would modify that.\n\n418\n00:21:04.720 --> 00:21:08.130\nAnd once that's done, now we're\nreally ready to be able to go out and\n\n419\n00:21:08.130 --> 00:21:11.900\ngrab those containers and get them\nloaded in and have them do their job.\n\n420\n00:21:11.900 --> 00:21:14.940\n&gt;&gt; And speaking of containers, are they\ngonna be available on the network or\n\n421\n00:21:14.940 --> 00:21:15.990\njust locally or both?\n\n422\n00:21:15.990 --> 00:21:17.863\n&gt;&gt; Well, that's a good point.\n\n423\n00:21:17.863 --> 00:21:19.752\nI hadn't really thought of this.\n\n424\n00:21:19.752 --> 00:21:21.710\nBy default, when I go and\ngrab a container and\n\n425\n00:21:21.710 --> 00:21:24.610\nload it up, it's only locally accessible.\n\n426\n00:21:24.610 --> 00:21:27.530\nI can access it right\nhere from my own machine.\n\n427\n00:21:27.530 --> 00:21:30.532\nAnd if I'm a developer,\nI'm experimenting, that's fine.\n\n428\n00:21:30.532 --> 00:21:32.660\nThis is right here,\nit's on my own machine.\n\n429\n00:21:32.660 --> 00:21:36.700\nBut if this is a server and\nI want people to remotely get to it.\n\n430\n00:21:36.700 --> 00:21:40.020\nSo I'm SSH-ed into a server right now.\n\n431\n00:21:40.020 --> 00:21:43.999\nIf I wanted to access this container from\nmy own laptop, the laptop that's here in\n\n432\n00:21:43.999 --> 00:21:47.015\nthe background, I would need to\nopen up network access to it.\n\n433\n00:21:47.015 --> 00:21:51.736\nAnd that network access is not\nenabled by default on most distros.\n\n434\n00:21:51.736 --> 00:21:53.290\nSo I need to go in and turn that on.\n\n435\n00:21:53.290 --> 00:21:59.180\nAnd if I wanna do that I can do that\nright here inside of the options.\n\n436\n00:21:59.180 --> 00:22:02.425\nSo when I look at these options I got\n--selinux-enabled, the log driver,\n\n437\n00:22:02.425 --> 00:22:03.300\n--signature-verification.\n\n438\n00:22:03.300 --> 00:22:05.590\nAnd there's also a network entry.\n\n439\n00:22:05.590 --> 00:22:09.360\nI can come in and I can tell it whether or\nnot I want to have this one up and\n\n440\n00:22:09.360 --> 00:22:10.570\ngoing on the network.\n\n441\n00:22:10.570 --> 00:22:13.590\nAnd we do that with the -H command.\n\n442\n00:22:13.590 --> 00:22:17.180\nSo I'm gonna come in here and\nadd -H, like that.\n\n443\n00:22:17.180 --> 00:22:18.770\nAnd then I tell it what\nI wanna be listening on.\n\n444\n00:22:18.770 --> 00:22:22.920\nI'm gonna listen on tcp://.\n\n445\n00:22:22.920 --> 00:22:26.165\nAnd then if I have more than one IP on\nmy server I can specify the IP I wanna\n\n446\n00:22:26.165 --> 00:22:26.724\nlisten on.\n\n447\n00:22:26.724 --> 00:22:32.263\nOr I can say 0.0.0.0 to say\nlisten on all of my IPs.\n\n448\n00:22:32.263 --> 00:22:35.910\nI usually do that,\nthis server is 172.16.0.237.\n\n449\n00:22:35.910 --> 00:22:37.055\nSo I could put that in there.\n\n450\n00:22:37.055 --> 00:22:40.980\nBut, I might want to listen on\nmy loopback as well, 127.0.0.1.\n\n451\n00:22:40.980 --> 00:22:43.090\nBy doing all zeros it'll get both of them.\n\n452\n00:22:43.090 --> 00:22:44.355\nSo, I'll do that.\n\n453\n00:22:44.355 --> 00:22:46.030\nAnd then you need to\ngive it a port number.\n\n454\n00:22:46.030 --> 00:22:49.760\nAnd the one they usually use\nin the examples is, 2375.\n\n455\n00:22:49.760 --> 00:22:51.310\nSo, I'll punch that one in.\n\n456\n00:22:51.310 --> 00:22:53.090\nBut, you could really use\nany port number you want.\n\n457\n00:22:53.090 --> 00:22:55.140\nBut, I'm gonna go ahead and specific that.\n\n458\n00:22:55.140 --> 00:22:58.150\nSo, let me zoom in a bit so\nwe can see all this.\n\n459\n00:22:58.150 --> 00:23:07.426\nSo that was -H followed by\ntcp://0.0.0.0: whoops, :.\n\n460\n00:23:07.426 --> 00:23:11.567\nAnd then I did 2375 before\nit hit the word wrap on me.\n\n461\n00:23:11.567 --> 00:23:12.495\nI guess I could expand that a bit.\n\n462\n00:23:12.495 --> 00:23:13.960\nBut that basically gets it in there.\n\n463\n00:23:15.010 --> 00:23:19.060\nAnd once that's done,\nnow I've got that network access open.\n\n464\n00:23:19.060 --> 00:23:22.047\nAnd I'll have to restart the Docker\nservice for that to take affect.\n\n465\n00:23:22.047 --> 00:23:25.004\nBut now people will be able to\nconnect to it over the network.\n\n466\n00:23:25.004 --> 00:23:29.914\nThere is the chance that I have\nfirewalld blocking it or something.\n\n467\n00:23:29.914 --> 00:23:34.650\nSo I would need to open this port in\nfirewalld as well if I wanted that.\n\n468\n00:23:34.650 --> 00:23:36.135\nIf I'm just accessing this locally and\n\n469\n00:23:36.135 --> 00:23:38.710\nthat doesn't really matter to\nme I can get that put in place.\n\n470\n00:23:38.710 --> 00:23:43.662\nAnd then I'll just need to do a quick\nsystemctl restart docker.service.\n\n471\n00:23:43.662 --> 00:23:46.330\nAnd that'll restart it,\nassuming I didn't make any typos.\n\n472\n00:23:46.330 --> 00:23:49.413\nIf you make a typo it'll crash [LAUGH].\n\n473\n00:23:49.413 --> 00:23:50.509\n&gt;&gt; Don't do that.\n&gt;&gt; So, that should take care of it.\n\n474\n00:23:50.509 --> 00:23:52.685\nAnd then now it restarts.\nIt says now I've got network access\n\n475\n00:23:52.685 --> 00:23:53.233\nenabled.\n\n476\n00:23:53.233 --> 00:23:55.110\nAnd people will be able to connect.\n\n477\n00:23:55.110 --> 00:23:58.608\n&gt;&gt; So are there any security\nsettings we need to be aware of?\n\n478\n00:23:58.608 --> 00:24:00.358\nAll right, so there's a firewall sign, and\n\n479\n00:24:00.358 --> 00:24:02.350\nI might need to open that\nfirewall if I've got one.\n\n480\n00:24:02.350 --> 00:24:05.719\nBut the other thing I mentioned at\nthe beginning of the show was the name\n\n481\n00:24:05.719 --> 00:24:06.700\nmappings, right?\n\n482\n00:24:06.700 --> 00:24:10.434\nThat if there's a root user in\na container, their map to the root user in\n\n483\n00:24:10.434 --> 00:24:13.751\nthe underlying OS since that's\nnot necessarily a good thing.\n\n484\n00:24:13.751 --> 00:24:17.364\nSo we normally want to go an extra\nstep and get that configured, so\n\n485\n00:24:17.364 --> 00:24:21.685\nthat we don't run into issues where\nwe have underlying security problems.\n\n486\n00:24:21.685 --> 00:24:25.526\nIf you're running a Docker application and\nyou throw it into a container in AWS,\n\n487\n00:24:25.526 --> 00:24:28.602\nyou know they're not giving away\nroot access underneath the hood.\n\n488\n00:24:28.602 --> 00:24:31.905\nYou might do it on your own laptop but\nyou wouldn't do it on a server.\n\n489\n00:24:31.905 --> 00:24:34.075\nSo we need to go an extra step and\nget that configured.\n\n490\n00:24:34.075 --> 00:24:39.039\nNow by default, it is just mapping\nthe users directly together.\n\n491\n00:24:39.039 --> 00:24:42.412\nSo I'm gonna go and\nedit that configuration file again.\n\n492\n00:24:42.412 --> 00:24:46.581\nAnd at the end of the Options line,\nI'm gonna go in and\n\n493\n00:24:46.581 --> 00:24:51.190\nbasically just come in and\nadd a little bit more to it.\n\n494\n00:24:51.190 --> 00:24:55.560\nWhat I wanna do, oops, is, it's not.\n\n495\n00:24:55.560 --> 00:24:59.708\nSorry, I'm messing up\nmy vy shortcuts here.\n\n496\n00:24:59.708 --> 00:25:02.140\nBut if we go to the end of that line, and\n\n497\n00:25:02.140 --> 00:25:07.240\nI'm gonna tag on a little entry here to\ntell it that I wanna do this name mapping.\n\n498\n00:25:07.240 --> 00:25:09.860\nI wanna protect my information in here.\n\n499\n00:25:09.860 --> 00:25:13.850\nAnd to do that, I've gotta add\na couple of extra little notes, right?\n\n500\n00:25:13.850 --> 00:25:18.210\nThe main thing I need to say is\n\n501\n00:25:18.210 --> 00:25:23.308\n--userns-remap=default.\n\n502\n00:25:23.308 --> 00:25:24.217\nOkay, like that.\n\n503\n00:25:24.217 --> 00:25:27.155\nAll right, userns, that's user namespace.\n\n504\n00:25:27.155 --> 00:25:30.910\nThe namespace is where I'm\nmapping a name to an ID, right?\n\n505\n00:25:30.910 --> 00:25:34.270\nSo the --userns-remap=default.\n\n506\n00:25:34.270 --> 00:25:37.220\nDefault means I need to\nremap the root user.\n\n507\n00:25:37.220 --> 00:25:39.298\nThe root user is the default\nuser inside of the container.\n\n508\n00:25:39.298 --> 00:25:40.620\nAnd that's what I wanna remap.\n\n509\n00:25:40.620 --> 00:25:43.857\nAnd so it will have a policy\nthat uses to handle that remap.\n\n510\n00:25:43.857 --> 00:25:47.395\nNow if I don't define the policy,\nit'll make one up for\n\n511\n00:25:47.395 --> 00:25:49.888\nme and that might not match what I want.\n\n512\n00:25:49.888 --> 00:25:53.200\nSo I need to come in and\nfigure out how I wanna map that.\n\n513\n00:25:53.200 --> 00:25:57.290\nNow the default is that it's gonna\ncreate a user account for me.\n\n514\n00:25:57.290 --> 00:26:00.368\nAnd that user account is\ngonna be called Docker-map.\n\n515\n00:26:00.368 --> 00:26:05.060\nAnd the Docker-map user is who I'm gonna\nmap the container's root account to.\n\n516\n00:26:05.060 --> 00:26:06.540\nSo in the container, they'll be root.\n\n517\n00:26:06.540 --> 00:26:08.305\nThey'll have all sorts of control.\n\n518\n00:26:08.305 --> 00:26:11.613\nBut in the underlying host OS,\nthey'll be Docker-map.\n\n519\n00:26:11.613 --> 00:26:15.840\nAnd Docker-map is just a regular old user\nwith no special privileges whatsoever.\n\n520\n00:26:15.840 --> 00:26:16.613\nThey're called an unprivileged user.\n\n521\n00:26:16.613 --> 00:26:22.020\nSo I'm gonna add that entry now\non some distros, that's enough.\n\n522\n00:26:22.020 --> 00:26:24.072\nYou can actually just do that entry and\nthat's it.\n\n523\n00:26:24.072 --> 00:26:26.321\nBut if you're running\nSC Linux that's not enough.\n\n524\n00:26:26.321 --> 00:26:29.545\nThere is a bit more that we\nneed to do to get this set.\n\n525\n00:26:29.545 --> 00:26:32.367\nThe username space stuff is\ndisabled in a lot of distros, so\n\n526\n00:26:32.367 --> 00:26:34.536\nI've got my work kind of cut out for\nme here.\n\n527\n00:26:34.536 --> 00:26:37.540\nSome of the other things that I need\nto do to actually get this working,\n\n528\n00:26:37.540 --> 00:26:41.000\ncuz I'm on CentOS,\nI have to do the extra work.\n\n529\n00:26:41.000 --> 00:26:44.620\nI need to modify my grub\nboot configuration.\n\n530\n00:26:44.620 --> 00:26:48.520\nWhen the system boots up,\nif it doesn't know we're doing username\n\n531\n00:26:48.520 --> 00:26:51.530\nspacing at the kernel level,\nthen the kernel won't do it.\n\n532\n00:26:51.530 --> 00:26:54.730\nIt doesn't load the modules,\nso this doesn't work.\n\n533\n00:26:54.730 --> 00:26:57.800\nI've got to tell the kernel to do it,\nso I'm gonna modify grub.\n\n534\n00:26:57.800 --> 00:27:00.782\nAnd to do that, the easiest way\nis to use the grubby command.\n\n535\n00:27:00.782 --> 00:27:02.439\nIf you don't have grubby,\nyou can install it.\n\n536\n00:27:02.439 --> 00:27:04.830\nMost distros have it by default.\n\n537\n00:27:04.830 --> 00:27:09.996\nSo I'm gonna say grubby, and\nthen --args, A-R-G-S for arguments,\n\n538\n00:27:09.996 --> 00:27:15.015\nequals, and I'm adding a commandline\nargument to my grub boot loader.\n\n539\n00:27:15.015 --> 00:27:24.460\nI'm gonna add namespace.unpriv_enable = 1,\nright?\n\n540\n00:27:24.460 --> 00:27:27.500\nSo I'm telling it,\nI wanna enable namespaces, and\n\n541\n00:27:27.500 --> 00:27:30.670\nI wanna do unprivileged user mappings,\nright?\n\n542\n00:27:30.670 --> 00:27:32.130\nThat's what I'm turning on.\n\n543\n00:27:32.130 --> 00:27:34.930\nSo I'm telling the kernel\nwhen it boots up,\n\n544\n00:27:34.930 --> 00:27:38.150\nunderstand that I might be\ndoing namespace remappings.\n\n545\n00:27:38.150 --> 00:27:40.430\nSo you're letting the kernel know.\n\n546\n00:27:40.430 --> 00:27:44.750\nSo when I run that, that's what's\ngonna tell it, I wanna add that,\n\n547\n00:27:44.750 --> 00:27:47.690\nactually I need to add a little\nbit more before I stop there.\n\n548\n00:27:47.690 --> 00:27:54.859\nI need to do a --update-kernel, and I need\nto tell the kernel that I'm booting from.\n\n549\n00:27:54.859 --> 00:27:59.852\nNow I should have gotten this before\nI typed all that and I didn't, so\n\n550\n00:27:59.852 --> 00:28:03.482\nlet me copy this cuz I'm\ngonna have to put it away.\n\n551\n00:28:03.482 --> 00:28:06.710\nAnd I need to figure out which kernel\nI'm running before I get too far.\n\n552\n00:28:06.710 --> 00:28:10.640\nSo let me take a look at /boot.\n\n553\n00:28:10.640 --> 00:28:11.580\nThere we go.\n\n554\n00:28:11.580 --> 00:28:16.570\nAnd I am running, my latest kernel\nis this guy right here, that one.\n\n555\n00:28:16.570 --> 00:28:18.110\nSo that's the one that I need to specify.\n\n556\n00:28:18.110 --> 00:28:20.845\nSo in this command, I'm gonna say, whoops,\n\n557\n00:28:20.845 --> 00:28:26.585\ngrubby--args=namespace.unpriv_enable=1.\n\n558\n00:28:26.585 --> 00:28:32.130\nAnd then --update-kernel, and\nI need to point to /boot/vm,\n\n559\n00:28:32.130 --> 00:28:37.670\nand it's not gonna autocomplete for\nme so let me copy and paste.\n\n560\n00:28:37.670 --> 00:28:40.560\nAnd I'm gonna point to\nthis kernel right here.\n\n561\n00:28:40.560 --> 00:28:43.280\nNow understand what that means.\n\n562\n00:28:43.280 --> 00:28:48.368\nWhen I map to this kernel, anytime I\ntake an update, I've got to come in and\n\n563\n00:28:48.368 --> 00:28:51.460\nre-enable the namespace, so I got to\nreally be paying attention to my updates.\n\n564\n00:28:51.460 --> 00:28:52.900\nAnd on a server, we do that, right?\n\n565\n00:28:52.900 --> 00:28:54.371\nSo it's part of our policy, but\n\n566\n00:28:54.371 --> 00:28:57.543\nit is something we need to add to\nour standard procedures to specify.\n\n567\n00:28:57.543 --> 00:28:59.440\nSo I'm gonna go ahead and set that.\n\n568\n00:28:59.440 --> 00:29:05.190\nThere we go, and now what I would need\nto do is reboot for that to take effect.\n\n569\n00:29:05.190 --> 00:29:08.500\nAnd when it reboots, it's gonna recognize\nthat I've enabled that namespace.\n\n570\n00:29:08.500 --> 00:29:10.630\nAnd you can always verify\nit by taking a look.\n\n571\n00:29:10.630 --> 00:29:16.103\nI'm gonna do a cat /proc/cmdline,\ncommand line.\n\n572\n00:29:16.103 --> 00:29:19.519\nThat's gonna show me the command line\nthe kernel used when loading, and\n\n573\n00:29:19.519 --> 00:29:21.324\nI can look in and I can see the options.\n\n574\n00:29:21.324 --> 00:29:23.564\nAnd when I look at my kernel right now,\n\n575\n00:29:23.564 --> 00:29:26.520\nI don't see any of that namespace stuff,\nright?\n\n576\n00:29:26.520 --> 00:29:29.970\nSo I need to reboot for that to take\neffect, and then I'll be able to look at\n\n577\n00:29:29.970 --> 00:29:33.605\nthat cmdline value, and see that it's\nloaded those other options, okay?\n\n578\n00:29:33.605 --> 00:29:35.452\nNow before I do that restart,\n\n579\n00:29:35.452 --> 00:29:40.100\nthere are a few other things that I wanna\ndo just to kinda get things set up, so\n\n580\n00:29:40.100 --> 00:29:42.450\neven though I know it's not enabled,\nI still wanna get it set up.\n\n581\n00:29:43.940 --> 00:29:48.105\nBy default, it's gonna create this one\nnamespace, this one Docker-map account.\n\n582\n00:29:48.105 --> 00:29:49.650\nIt's gonna map things.\n\n583\n00:29:49.650 --> 00:29:52.850\nI might choose to create more\nnamespaces down the road, so\n\n584\n00:29:52.850 --> 00:29:55.642\nI like to adjust what the maximum\nnamespace interval is.\n\n585\n00:29:55.642 --> 00:29:56.627\nAnd I say I like to,\n\n586\n00:29:56.627 --> 00:30:00.911\nI do it because in the Red Hat official\ndocumentation this is what they recommend.\n\n587\n00:30:00.911 --> 00:30:04.204\nAnd they support it so\nthey're people smarter than me.\n\n588\n00:30:04.204 --> 00:30:09.407\nSo I'm gonna increase that value, I'm\n\n589\n00:30:09.407 --> 00:30:19.064\ngonna say echo\nuser.max_user_namespaces=15076, all right?\n\n590\n00:30:19.064 --> 00:30:23.062\nThat's gonna give us the ability\nto have over 15,000 namespaces.\n\n591\n00:30:23.062 --> 00:30:26.014\nLikely, you've only got a handful\nof users, but when you start doing\n\n592\n00:30:26.014 --> 00:30:29.230\ncontainers, you could actually have\ntons of users if you're not careful.\n\n593\n00:30:29.230 --> 00:30:31.030\nSo we need to be able to support that.\n\n594\n00:30:31.030 --> 00:30:37.397\nAnd I'm just gonna echo that so\nthat it adds into /etc/sysctl.com.\n\n595\n00:30:37.397 --> 00:30:40.390\nIf I'm appending it to that file and\nadding that option.\n\n596\n00:30:40.390 --> 00:30:44.894\nSo again, when we reboot, it'll read that\nfile and it'll create enough room for\n\n597\n00:30:44.894 --> 00:30:46.880\nthat many namespaces, all right?\n\n598\n00:30:46.880 --> 00:30:49.180\nThen the user accounts.\n\n599\n00:30:49.180 --> 00:30:51.050\nI need to map the ID number.\n\n600\n00:30:51.050 --> 00:30:52.200\nAnd there's a risk.\n\n601\n00:30:52.200 --> 00:30:56.043\nWhen it creates the ID number,\nit could overlap with an existing user.\n\n602\n00:30:56.043 --> 00:30:57.290\nI don't want that.\n\n603\n00:30:57.290 --> 00:31:00.084\nSo I'm gonna pick a number that's\nlike way out in left field so\n\n604\n00:31:00.084 --> 00:31:03.550\nthat I don't have to worry about it\nbumping into my existing user accounts.\n\n605\n00:31:03.550 --> 00:31:07.200\nSo I'm gonna say echo dockermap, right?\n\n606\n00:31:07.200 --> 00:31:12.963\nThat's the user account that it's gonna\ncreate is dockermap:999999, all right?\n\n607\n00:31:12.963 --> 00:31:15.240\nI'm picking a really high number, right?\n\n608\n00:31:15.240 --> 00:31:19.870\nRemember in most distros, your users\nstart at 1,000, some they start at 500.\n\n609\n00:31:19.870 --> 00:31:22.741\nSo 999,000, that should give me\na lot of grow room right there.\n\n610\n00:31:22.741 --> 00:31:24.196\n&gt;&gt; That's good.\n\n611\n00:31:24.196 --> 00:31:26.641\n&gt;&gt; And then I'll say :1000, right?\n\n612\n00:31:26.641 --> 00:31:32.207\nBecause the root user inside\nthe container will be ID 1000,\n\n613\n00:31:32.207 --> 00:31:36.961\nand I'm gonna pipe that into /etc/subuid,\nright?\n\n614\n00:31:36.961 --> 00:31:40.102\nSubuid is from the namespace,\nwhat's powering that.\n\n615\n00:31:40.102 --> 00:31:44.678\nAnd then I'm gonna do the same thing but\nfor subgid.\n\n616\n00:31:44.678 --> 00:31:48.312\nBecause remember, when we create a user\naccount they get a user ID and a group, so\n\n617\n00:31:48.312 --> 00:31:51.426\nif I create a dpezet user,\nthere's a dpezet user and a dpezet group.\n\n618\n00:31:51.426 --> 00:31:54.457\nHere I'm doing the same thing for\nDocker-map.\n\n619\n00:31:54.457 --> 00:31:57.523\nRight, so\nI'm getting that kind of put in place.\n\n620\n00:31:57.523 --> 00:32:01.170\nLet's see, at that point,\nI've already made my kernel change.\n\n621\n00:32:01.170 --> 00:32:04.770\nI've already updated the config file.\n\n622\n00:32:04.770 --> 00:32:07.770\nEverything is good at this\npoint except rebooting.\n\n623\n00:32:07.770 --> 00:32:12.320\nSo I need to reboot my server and once it\nreboots, now the name mapping will be in\n\n624\n00:32:12.320 --> 00:32:16.260\nplace and I'll be able to create\ncontainers and know that they are secure.\n\n625\n00:32:16.260 --> 00:32:17.400\nThis is a lot of work, right?\n\n626\n00:32:17.400 --> 00:32:21.310\nA lot of moving parts here to get\nthis configured, but from a security\n\n627\n00:32:21.310 --> 00:32:24.505\nstandpoint, if this is a production\nserver, that's really important thing.\n\n628\n00:32:24.505 --> 00:32:26.414\n&gt;&gt; Hm.\n&gt;&gt; So this is probably the longest answer\n\n629\n00:32:26.414 --> 00:32:27.877\nto a short question,\n&gt;&gt; [LAUGH]\n\n630\n00:32:27.877 --> 00:32:29.102\n&gt;&gt; Zack had asked the question if we're\n\n631\n00:32:29.102 --> 00:32:29.938\nready to do containers.\n\n632\n00:32:29.938 --> 00:32:34.156\nIf I was on a test or a development\nmachine, if I was on my own laptop,\n\n633\n00:32:34.156 --> 00:32:36.890\nI was done ten minutes ago, right.\n\n634\n00:32:36.890 --> 00:32:39.940\nAnd we were done and we could have got\nthis up and going with the default.\n\n635\n00:32:39.940 --> 00:32:44.638\nBut on a production server you need to go\na little further to get that security.\n\n636\n00:32:44.638 --> 00:32:47.981\nAnd this is where DevOps is such\na challenge because, is it right to\n\n637\n00:32:47.981 --> 00:32:51.980\nexpect the developer to know to go\nthrough and do all this name mapping?\n\n638\n00:32:51.980 --> 00:32:53.040\nI don't think so.\n\n639\n00:32:53.040 --> 00:32:55.250\nMost server admins don't\nknow to do this stuff.\n\n640\n00:32:55.250 --> 00:32:59.390\nSo it's important that we get it taken\ncare of on our infrastructure and\n\n641\n00:32:59.390 --> 00:33:01.930\nthen we let the developers develop,\nthat's what they're great at.\n\n642\n00:33:01.930 --> 00:33:06.050\nOr we let the server admins be server\nadmins, that's what they're great at.\n\n643\n00:33:06.050 --> 00:33:08.430\nBlending things can create risk but\n\n644\n00:33:08.430 --> 00:33:11.340\ndoing what I just did helps\nto minimize that risk.\n\n645\n00:33:11.340 --> 00:33:16.129\nTo say if I give you root access\nin a container, you can go crazy.\n\n646\n00:33:16.129 --> 00:33:20.000\nBut you're held inside of that container\nand if you escape out into the underlying\n\n647\n00:33:20.000 --> 00:33:22.590\nhost, doesn't matter\nyou're not rooted anymore.\n\n648\n00:33:22.590 --> 00:33:24.910\nNow you're just mapped\nto this doc map account.\n\n649\n00:33:24.910 --> 00:33:28.020\nYou're just a regular unprivileged user\nthat we don't have to worry about you\n\n650\n00:33:28.020 --> 00:33:28.660\ndoing any damage.\n\n651\n00:33:28.660 --> 00:33:31.850\nSo now we've reached the point where\n\n652\n00:33:31.850 --> 00:33:33.862\nI'm comfortable with\nthe production machine, right.\n\n653\n00:33:33.862 --> 00:33:37.510\nWe've got the Docker service up and\nrunning, I can start throwing\n\n654\n00:33:37.510 --> 00:33:40.350\nthe containers in it and\ngiving people access to those containers.\n\n655\n00:33:40.350 --> 00:33:42.070\nIt's up, it's in business.\n\n656\n00:33:42.070 --> 00:33:44.320\nAnd now, we're to use it.\n\n657\n00:33:44.320 --> 00:33:46.777\n&gt;&gt; Great teaching Don in\nLinux as a Docker host.\n\n658\n00:33:46.777 --> 00:33:48.860\nAny last words and we move on?\n\n659\n00:33:48.860 --> 00:33:51.450\n&gt;&gt; Well, you probably noticed at this\npoint that I didn't actually create\n\n660\n00:33:51.450 --> 00:33:53.090\na container after all of that.\n\n661\n00:33:53.090 --> 00:33:55.410\nWell I need to reboot for\nmy security changes to take effect.\n\n662\n00:33:55.410 --> 00:33:59.795\nBut after that, we'll start to create\nsome containers in the next episode.\n\n663\n00:33:59.795 --> 00:34:01.973\n&gt;&gt; So this is Linux as a Docker host,\nlook for\n\n664\n00:34:01.973 --> 00:34:05.663\nLinux as a Docker container I think\nis what the next episode is called.\n\n665\n00:34:05.663 --> 00:34:07.618\n&gt;&gt; [LAUGH]\n&gt;&gt; Look for that next episode though,\n\n666\n00:34:07.618 --> 00:34:08.997\nwe're gonna spin up some containers,\n\n667\n00:34:08.997 --> 00:34:11.370\nwe'll see how the operating\nsystem runs inside of it.\n\n668\n00:34:11.370 --> 00:34:13.220\nHow we can use it,\nhow we run applications,\n\n669\n00:34:13.220 --> 00:34:15.620\nhow we even access the darn thing,\ncuz it's a little tricky.\n\n670\n00:34:15.620 --> 00:34:16.730\nWe'll get a chance to see all that,\n\n671\n00:34:16.730 --> 00:34:19.080\nwhich is probably a little more\nfun than what we just saw.\n\n672\n00:34:19.080 --> 00:34:21.050\nBut here we focused on\ngetting the host set up,\n\n673\n00:34:21.050 --> 00:34:23.080\nwe'll see the containers\nin that next episode.\n\n674\n00:34:23.080 --> 00:34:25.560\n&gt;&gt; And somehow I knew you\nwere gonna say that you,\n\n675\n00:34:25.560 --> 00:34:28.740\nbecause you don't like to leave any stone\nunturned, and thank goodness for that.\n\n676\n00:34:28.740 --> 00:34:30.400\nYou do an awesome job,\nDon, thanks very much.\n\n677\n00:34:30.400 --> 00:34:31.060\n&gt;&gt; Thank you.\n&gt;&gt; And\n\n678\n00:34:31.060 --> 00:34:36.052\nmake sure you watch every single episode\nof the Linux in the the Cloud series,\n\n679\n00:34:36.052 --> 00:34:37.690\nyou'll be glad you did.\n\n680\n00:34:37.690 --> 00:34:40.440\nAnd thank you for\nwatching ITProTV I'm Zach Memos.\n\n681\n00:34:40.440 --> 00:34:41.160\n&gt;&gt; And I'm Don Pezet.\n\n682\n00:34:41.160 --> 00:34:43.481\n&gt;&gt; And we'll see you again very soon.\n\n683\n00:34:43.481 --> 00:34:49.921\n[MUSIC]\n\n684\n00:34:49.921 --> 00:34:53.212\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "231747899"
        },
        {
          "description": "Don and Zach cover how we get started creating a container, using images to create build a container, running commands inside a container, and what happens when a container exits.",
          "length": "1741",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-4-2-1-linux_as_a_docker_container-083017-PGM.00_28_45_28.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-4-2-1-linux_as_a_docker_container-083017-PGM.00_28_45_28.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-4-2-1-linux_as_a_docker_container-083017-PGM.00_28_45_28.Still001-sm.jpg",
          "title": "Linux as a Docker Container",
          "transcript": "WEBVTT\n\n1\n00:00:00.230 --> 00:00:03.075\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:03.075 --> 00:00:06.673\n&gt;&gt; [CROSSTALK]\n\n3\n00:00:06.673 --> 00:00:07.826\n[MUSIC]\n\n4\n00:00:07.826 --> 00:00:10.890\n&gt;&gt; You're watch ITProTV.\n\n5\n00:00:10.890 --> 00:00:13.906\n&gt;&gt; Hello and thank you for\nchoosing ITProTV,\n\n6\n00:00:13.906 --> 00:00:16.790\nhelping you learn where ever you go.\n\n7\n00:00:16.790 --> 00:00:19.980\nI'm your host Zach Memos,\nas we continue on with Linux in the cloud.\n\n8\n00:00:21.072 --> 00:00:25.520\nAnd we're looking at Linux docker\ncontainers in this episode.\n\n9\n00:00:25.520 --> 00:00:26.060\nThat's right.\n\n10\n00:00:26.060 --> 00:00:28.628\nWe've finally got to this point.\n\n11\n00:00:28.628 --> 00:00:29.712\n&gt;&gt; [LAUGH]\n&gt;&gt; We've\n\n12\n00:00:29.712 --> 00:00:30.860\nalready looked at docker and Linux.\n\n13\n00:00:30.860 --> 00:00:34.624\nNow we're looking at containers and docker\nand Linux putting it all together and\n\n14\n00:00:34.624 --> 00:00:36.240\nDon Pezet is gonna do it all for us.\n\n15\n00:00:36.240 --> 00:00:36.928\nDon, hello.\n\n16\n00:00:36.928 --> 00:00:39.204\n&gt;&gt; Hey zach, thanks for having me back.\n\n17\n00:00:39.204 --> 00:00:40.559\n&gt;&gt; [CROSSTALK]\n&gt;&gt; It's like you said,\n\n18\n00:00:40.559 --> 00:00:43.423\nwe started our adventure in the last\nepisode with setting up Linux as\n\n19\n00:00:43.423 --> 00:00:46.707\na docker host which to be honest with you,\nis really not all that fun, right?\n\n20\n00:00:46.707 --> 00:00:49.430\n[LAUGH] So a lot of work and-\n&gt;&gt; A lot of stuff.\n\n21\n00:00:49.430 --> 00:00:50.707\n&gt;&gt; And a lot of stuff to get configured.\n\n22\n00:00:50.707 --> 00:00:51.892\nBut once it's done.\n\n23\n00:00:51.892 --> 00:00:55.854\nOnce we have our docker host up and going,\nnow we can start to create containers.\n\n24\n00:00:55.854 --> 00:00:56.570\n&gt;&gt; Yes.\nAnd honestly, guys,\n\n25\n00:00:56.570 --> 00:00:57.490\nthat's where the real fun is.\n\n26\n00:00:57.490 --> 00:01:02.580\nSo in this episode, we're gonna take a\nlook at how to deploy Linux as a guest, as\n\n27\n00:01:02.580 --> 00:01:07.660\na container on top of a docker host which\nthe docker host may not even be Linux.\n\n28\n00:01:07.660 --> 00:01:10.280\nIt might be Windows, it might be macOS,\nit might be Amazon Web Services,\n\n29\n00:01:10.280 --> 00:01:11.260\nit might be Microsoft Azure.\n\n30\n00:01:11.260 --> 00:01:13.210\nWho knows where we're\ngonna put the container.\n\n31\n00:01:13.210 --> 00:01:16.140\nBut getting Linux inside of\nthe container is surprisingly easy and\n\n32\n00:01:16.140 --> 00:01:17.350\nyou can have a good bit of follow on this.\n\n33\n00:01:17.350 --> 00:01:20.030\nThat's what we're gonna take a look\nat right here in this episode.\n\n34\n00:01:20.030 --> 00:01:22.560\n&gt;&gt; So Don, how do we get started\nin creating a container?\n\n35\n00:01:22.560 --> 00:01:25.840\nThe first thing we need to do is we\nneed to start with a base image.\n\n36\n00:01:25.840 --> 00:01:30.660\nAnd if you are a sadist [LAUGH] you could\nactually create the base image yourself.\n\n37\n00:01:30.660 --> 00:01:34.340\nBut typically, we start with a base\nimage that's already prepared.\n\n38\n00:01:34.340 --> 00:01:39.940\nA base image is just like the minimal\ninformation needed to get Linux up and\n\n39\n00:01:39.940 --> 00:01:41.480\nrunning in a container.\n\n40\n00:01:41.480 --> 00:01:45.650\nAnd the cool part is because it's\ncontainerized, you can really pick from\n\n41\n00:01:45.650 --> 00:01:49.400\nany Linux distro that you want and the\nmajority of them have images out there.\n\n42\n00:01:49.400 --> 00:01:53.810\nSo maybe I love CentOS and\nthat's what I wanted to deploy with.\n\n43\n00:01:53.810 --> 00:01:58.650\nOr I love Red Hat or I love Ubuntu,\nwhatever it is that I'm passionate about.\n\n44\n00:01:58.650 --> 00:02:00.250\nI can use that as my container.\n\n45\n00:02:00.250 --> 00:02:02.850\nAnd when I go to deploy\nit on a host somewhere,\n\n46\n00:02:02.850 --> 00:02:04.460\nI don't care what the host is running.\n\n47\n00:02:04.460 --> 00:02:08.820\nI might have Ubuntu containers that\nrun on top of Red Hat as a host or\n\n48\n00:02:08.820 --> 00:02:13.105\nCentOS containers that run on\ntop of macOS as a host up to me.\n\n49\n00:02:13.105 --> 00:02:16.000\nThat's what the whole glory of\ndocker is that a developer can\n\n50\n00:02:16.000 --> 00:02:18.900\nchoose the environment they're\nuncomfortable in and not have to worry\n\n51\n00:02:18.900 --> 00:02:22.370\nabout all the hosty stuff and all of\nthe things that goes down under the hood.\n\n52\n00:02:22.370 --> 00:02:24.769\nThat's a technical term, by the way.\n\n53\n00:02:24.769 --> 00:02:25.757\n&gt;&gt; Hosty toasty or toasty hosty.\n\n54\n00:02:25.757 --> 00:02:27.197\n&gt;&gt; [LAUGH] Yeah, one of those two.\n\n55\n00:02:27.197 --> 00:02:29.697\nWe're moving to an all new echelon of\ntechnical knowledge in this episode.\n\n56\n00:02:29.697 --> 00:02:31.016\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] So\n\n57\n00:02:31.016 --> 00:02:34.711\nthe cool part here is first off we\nfigure out what we want right so\n\n58\n00:02:34.711 --> 00:02:37.791\nlet's just say we'll run\nwith CentOS on my laptop.\n\n59\n00:02:37.791 --> 00:02:39.979\nI'm running Red Hat Enterprise Linux,\n\n60\n00:02:39.979 --> 00:02:43.010\nin my server that we setup\nI'm running CentOS, right?\n\n61\n00:02:43.010 --> 00:02:47.000\nSo if I do a hostnamectl,\nI've actually got a CentOS right there.\n\n62\n00:02:47.000 --> 00:02:50.760\nSo if I wanted to deploy it in\na container or let's go crazy and say,\n\n63\n00:02:50.760 --> 00:02:53.630\nyou know what forget CentOS,\nI want Ubuntu, I can do that.\n\n64\n00:02:53.630 --> 00:02:55.840\nI need to find that base image.\n\n65\n00:02:56.920 --> 00:02:59.880\nBy default, you're gonna have\nan image repository set up.\n\n66\n00:02:59.880 --> 00:03:04.120\nWhen we installed docker,\nthe docker.io or docker hub repository or\n\n67\n00:03:04.120 --> 00:03:07.470\nregistry is already set up as default,\nwe can connect to it.\n\n68\n00:03:07.470 --> 00:03:10.017\nAnd I showed you in the last episode\nhow we can override that if we want.\n\n69\n00:03:10.017 --> 00:03:14.171\nBut the main docker repository is really\nwhere we wanna get a lot of our stuff from\n\n70\n00:03:14.171 --> 00:03:14.671\nanyway.\n\n71\n00:03:14.671 --> 00:03:17.610\nBecause a lot of the vendors\nare publishing data there.\n\n72\n00:03:17.610 --> 00:03:22.370\nSo I can come in and\nI can say, docker search and\n\n73\n00:03:22.370 --> 00:03:26.360\nI can search for the image,\nthe base image, that I want.\n\n74\n00:03:26.360 --> 00:03:30.100\nSo if I want centos as my base image,\nmaybe I've got CentOS as a host,\n\n75\n00:03:30.100 --> 00:03:32.680\nI want to keep CentOS as my container,\nfine.\n\n76\n00:03:32.680 --> 00:03:35.700\nI can search and I'll get back a list of\n\n77\n00:03:35.700 --> 00:03:39.390\nimages that are out there that\nare all built on CentOS, right?\n\n78\n00:03:39.390 --> 00:03:44.450\nOr if I wanna search for Ubuntu, I can\ndo a docker search ubuntu and if I can\n\n79\n00:03:44.450 --> 00:03:49.010\nspell it right, it will return back\nhere's a list of images built on Ubuntu.\n\n80\n00:03:49.010 --> 00:03:49.750\n&gt;&gt; Cool.\n\n81\n00:03:49.750 --> 00:03:53.170\n&gt;&gt; Now we gotta be careful with these\nbecause as you look at them here,\n\n82\n00:03:53.170 --> 00:03:56.500\nespecially, let me clear this and\nwe'll try that again with CentOS.\n\n83\n00:03:56.500 --> 00:04:01.010\nWhen we look at the CentOS output, there's\nquite a few images that get returned.\n\n84\n00:04:01.010 --> 00:04:05.280\nAnd if I scroll to the very top,\nI'll find docker.io/centos and\n\n85\n00:04:05.280 --> 00:04:09.960\nit says, The official build of CentOS.\n\n86\n00:04:09.960 --> 00:04:13.897\nThat means that this one is either\nbuilt by the CentOS team or\n\n87\n00:04:13.897 --> 00:04:18.723\nby the docker team and it's official,\nit's trusted, this is the one.\n\n88\n00:04:18.723 --> 00:04:20.125\nSo where did all the rest\nof these come from?\n\n89\n00:04:20.125 --> 00:04:22.798\n&gt;&gt; [LAUGH]\n&gt;&gt; All these others are built by third\n\n90\n00:04:22.798 --> 00:04:25.010\nparty companies or people like you and\n\n91\n00:04:25.010 --> 00:04:29.169\nme that have built up an image and\nuploaded it into the docker registry.\n\n92\n00:04:29.169 --> 00:04:31.653\nAnd got it put there, or\nif it were using a private registry,\n\n93\n00:04:31.653 --> 00:04:33.520\nit'd be in our own registry, right?\n\n94\n00:04:33.520 --> 00:04:37.770\nThese are probably trustworthy but\nit's not a guarantee, right?\n\n95\n00:04:37.770 --> 00:04:40.500\nWe need to do our research,\nmake sure these are ones that we trust.\n\n96\n00:04:40.500 --> 00:04:43.630\nSome of these are DEPRECATED which means\nthey're no longer being updated, right?\n\n97\n00:04:43.630 --> 00:04:47.422\nSo I don't wanna deploy this ruby 20,\nif it's been DEPRECATED.\n\n98\n00:04:47.422 --> 00:04:49.531\nThey're not supporting it anymore,\nthat's not a good thing to deploy.\n\n99\n00:04:49.531 --> 00:04:50.400\n&gt;&gt; No, not good.\n\n100\n00:04:50.400 --> 00:04:53.820\n&gt;&gt; So those are some of the things that we\nrun into when dealing with these images.\n\n101\n00:04:53.820 --> 00:04:58.230\nSo when you do a search,\nI almost always add an extra tag to it.\n\n102\n00:04:58.230 --> 00:05:00.300\nSo let's go back to my Ubuntu search.\n\n103\n00:05:00.300 --> 00:05:03.610\nWhen I ran the Ubuntu search,\nI got a bunch of results back.\n\n104\n00:05:03.610 --> 00:05:05.600\nBut I normally add a little bit more.\n\n105\n00:05:05.600 --> 00:05:10.602\nI'll say docker search and\nthen --filter, so\n\n106\n00:05:10.602 --> 00:05:17.690\nI'm gonna add a filter to it and\nthen is-official=true like that.\n\n107\n00:05:17.690 --> 00:05:21.130\nWhen I get a base image, I don't want an\nimage that some other company has tweaked\n\n108\n00:05:21.130 --> 00:05:23.290\nand messed with unless I know and\ntrust that company.\n\n109\n00:05:23.290 --> 00:05:25.430\nI'm looking for their image specifically.\n\n110\n00:05:25.430 --> 00:05:29.020\nSo instead, I usually say,\njust show me the official images.\n\n111\n00:05:29.020 --> 00:05:30.470\nFilter out the other junk.\n\n112\n00:05:30.470 --> 00:05:34.390\nAnd when I run this, now I just get\nthe ones that are officially supported.\n\n113\n00:05:34.390 --> 00:05:36.950\nAnd I can see there's four\nUbuntu distributions that\n\n114\n00:05:36.950 --> 00:05:38.270\nare officially supported.\n\n115\n00:05:38.270 --> 00:05:40.880\nWell, the first one is actually ubuntu.\n\n116\n00:05:40.880 --> 00:05:41.960\nThere we go, right?\n\n117\n00:05:41.960 --> 00:05:44.420\nWell, in the newest versions of Ubuntu,\n\n118\n00:05:44.420 --> 00:05:47.050\nthey switched to system\nd as their init system.\n\n119\n00:05:47.050 --> 00:05:48.060\nMaybe I don't want that.\n\n120\n00:05:48.060 --> 00:05:52.040\nAnd so here is ubuntu with upstart\nas the init system instead,\n\n121\n00:05:52.040 --> 00:05:53.850\nso I can pick if that's what I want.\n\n122\n00:05:53.850 --> 00:05:58.845\nOr here's neurodbn which is used as\npart of their neuroscience research,\n\n123\n00:05:58.845 --> 00:06:00.997\nso not really what I need [LAUGH].\n\n124\n00:06:00.997 --> 00:06:01.810\n&gt;&gt; Brain stuff.\n\n125\n00:06:01.810 --> 00:06:03.639\n&gt;&gt; Somebody might need to do\nneuroscience research on me.\n\n126\n00:06:03.639 --> 00:06:04.180\n&gt;&gt; Right.\n\n127\n00:06:04.180 --> 00:06:06.510\n&gt;&gt; [LAUGH] I don't need the container.\n\n128\n00:06:06.510 --> 00:06:12.130\nAnd then after that we've got\ndebootstrap which has modified bootstrap\n\n129\n00:06:12.130 --> 00:06:16.450\nin it which is useful for doing network\nloads, builds and things like that.\n\n130\n00:06:16.450 --> 00:06:19.130\nSo it's just four responses.\n\n131\n00:06:19.130 --> 00:06:21.130\nAnd if you look at the stars,\n\n132\n00:06:21.130 --> 00:06:24.780\nthese are kind of like the reviews\nwhen you buy something on Amazon.\n\n133\n00:06:24.780 --> 00:06:27.030\nI can see 6,495 stars on this first one.\n\n134\n00:06:27.030 --> 00:06:28.330\nThat's the main one.\n\n135\n00:06:28.330 --> 00:06:30.520\nI know that's the image that\nmost people are gonna use.\n\n136\n00:06:30.520 --> 00:06:36.388\nIf I do the same thing with centos and\nI run that, I only get one response.\n\n137\n00:06:36.388 --> 00:06:41.205\nI get one response, one official CentOS\ndistribution, right here in docker.io.\n\n138\n00:06:41.205 --> 00:06:48.133\nSo CentOS, The official build and\nit's got 3,596 stars, and it's okay.\n\n139\n00:06:48.133 --> 00:06:50.505\n&gt;&gt; [LAUGH]\n&gt;&gt; Official says, it's okay.\n\n140\n00:06:50.505 --> 00:06:52.145\nSo that's the one I wanna use.\n\n141\n00:06:52.145 --> 00:06:53.904\nSo when it comes to\npicking that base image,\n\n142\n00:06:53.904 --> 00:06:56.289\nthe first thing you need to\nthink about is your preference.\n\n143\n00:06:56.289 --> 00:06:57.145\nWhat do you like?\n\n144\n00:06:57.145 --> 00:06:59.570\nWhat do you want to run?\n\n145\n00:06:59.570 --> 00:07:02.490\nDo you to run debian or\ndo you want to run Red Hat.\n\n146\n00:07:02.490 --> 00:07:05.900\nNow, Red Hat is not gonna turn up in\nhere because it's commercial software.\n\n147\n00:07:05.900 --> 00:07:08.570\nI would need to add Red Hat's\nregistry to pull it from them.\n\n148\n00:07:08.570 --> 00:07:12.190\nBut all of the publicly available ones,\nthe Ubuntu, Debian,\n\n149\n00:07:12.190 --> 00:07:16.130\nCentOS those guys, they're all gonna\nturn up in here based on what you want.\n\n150\n00:07:16.130 --> 00:07:19.867\nSo for this show,\nI'm just gonna use CentOS cuz I like it.\n\n151\n00:07:19.867 --> 00:07:22.920\n[LAUGH] And so if I wanna create a\ncontainer that's where I'm gonna start it.\n\n152\n00:07:22.920 --> 00:07:23.613\nIt's with that CentOS image.\n\n153\n00:07:23.613 --> 00:07:25.163\nNow unfortunately,\n\n154\n00:07:25.163 --> 00:07:30.010\nit's not us easy as that like once\nI identify the image that I want.\n\n155\n00:07:30.010 --> 00:07:33.012\nSo, here's the one that I\nwant is docker.io/centos, so\n\n156\n00:07:33.012 --> 00:07:35.963\nthat's the name of the image,\nit's just called centos.\n\n157\n00:07:35.963 --> 00:07:37.640\nThe other ones had different names, right.\n\n158\n00:07:37.640 --> 00:07:42.770\nSo when I looked at that giant list up\nhere they weren't all called centos.\n\n159\n00:07:42.770 --> 00:07:45.724\nThere was jenkins-2-centos7 and\nphp-56, right,\n\n160\n00:07:45.724 --> 00:07:49.880\nthey've all get these longer names\nthat you can refer to them as.\n\n161\n00:07:49.880 --> 00:07:52.887\nWell, when I find the base image I\nwanna work with I need to download it.\n\n162\n00:07:52.887 --> 00:07:56.656\nDownload it so\nit's right here on my system and\n\n163\n00:07:56.656 --> 00:08:01.403\nif I just type docker pull, and\nthen the name of the image.\n\n164\n00:08:01.403 --> 00:08:05.813\nIt'll reach out there and get it, so\nI can say docker pull centos, like that.\n\n165\n00:08:05.813 --> 00:08:08.690\nIt's gonna reach out and\ndownload a copy of that image.\n\n166\n00:08:08.690 --> 00:08:13.030\nNow normally if I download like a CentOS\ninstallation DVD it's 4 gigs in size.\n\n167\n00:08:13.030 --> 00:08:19.570\nBut look at this one,\n72.25 megabytes, really small.\n\n168\n00:08:19.570 --> 00:08:25.040\nThis base image is base, it's as small\nas it can be, with no extraneous stuff.\n\n169\n00:08:25.040 --> 00:08:28.760\nThey give you the minimum, and\nthen you add what you need to it, right.\n\n170\n00:08:28.760 --> 00:08:31.740\nSo this is the base system\nto get CentOS up and going.\n\n171\n00:08:31.740 --> 00:08:33.430\nYou see how small these\ncontainers could be,\n\n172\n00:08:33.430 --> 00:08:35.620\nway smaller than virtual machines\nthat we normally work with.\n\n173\n00:08:36.760 --> 00:08:39.770\nNow when I pull that,\nI've now got a copy of the image.\n\n174\n00:08:39.770 --> 00:08:41.960\nAnd I might reach out and\ndownload more than one,\n\n175\n00:08:41.960 --> 00:08:45.060\nright, I might wanna get the Ubuntu or\nDebian, right.\n\n176\n00:08:45.060 --> 00:08:46.000\nSo I can come through and\n\n177\n00:08:46.000 --> 00:08:48.500\npull each of those,\nif I can remember what they were called.\n\n178\n00:08:48.500 --> 00:08:51.640\nSo like the Ubuntu one was I\nthink just called ubuntu, yeah.\n\n179\n00:08:51.640 --> 00:08:53.878\nAnd Debian, I believe,\nis just called debian.\n\n180\n00:08:53.878 --> 00:08:57.220\nIt is, and so I can come through and\npull those as well.\n\n181\n00:08:57.220 --> 00:09:01.140\nSo I'll pull debian down and\nthen I'll pull Ubuntu down.\n\n182\n00:09:01.140 --> 00:09:04.890\nAnd you'll see they're pretty small too,\nthe Debian one, only 45 megabytes.\n\n183\n00:09:04.890 --> 00:09:06.390\n&gt;&gt; Goodness.\n&gt;&gt; Pretty tiny, and\n\n184\n00:09:06.390 --> 00:09:08.370\nthen I'll do the same thing for Ubuntu.\n\n185\n00:09:08.370 --> 00:09:11.520\nI'm pulling each of these down so\nnow I've got them available and\n\n186\n00:09:11.520 --> 00:09:12.818\nI can start creating\ncontainers off of that.\n\n187\n00:09:12.818 --> 00:09:17.330\nI might wanna mix and match, right,\nmaybe I'm trying to learn Linux.\n\n188\n00:09:17.330 --> 00:09:19.140\nAnd I don't wanna install\neach of this distros, but\n\n189\n00:09:19.140 --> 00:09:21.990\nI'll just whip up a quick container,\nand so I can do that.\n\n190\n00:09:21.990 --> 00:09:26.880\nAnd once you've got them,\nyou can run docker images, and\n\n191\n00:09:26.880 --> 00:09:29.860\nit'll list all of the images\nthat you've downloaded so far.\n\n192\n00:09:30.880 --> 00:09:34.690\nNow notice what I've pulled here,\nubuntu, centos, and debian.\n\n193\n00:09:34.690 --> 00:09:36.300\nAnd see how they have a tag?\n\n194\n00:09:36.300 --> 00:09:37.970\nSee how every one has the same tag?\n\n195\n00:09:37.970 --> 00:09:42.340\nThe tag says Latest,\nwhen you just use the name\n\n196\n00:09:42.340 --> 00:09:46.620\nit gets the latest version\nof that container, right.\n\n197\n00:09:46.620 --> 00:09:50.970\nWell, CentOS, CentOS right now,\nthe latest version is CentOS 7,\n\n198\n00:09:50.970 --> 00:09:53.500\nbut what if I want Centos 6?\n\n199\n00:09:53.500 --> 00:09:55.370\nCentos 6 is still supported, right?\n\n200\n00:09:55.370 --> 00:09:59.580\nAnd I might have a large installation\nbase and I need CentOS 6.\n\n201\n00:09:59.580 --> 00:10:04.740\nSo when I download these I can actually\nprovide tags to tell it what I want.\n\n202\n00:10:04.740 --> 00:10:08.130\nAnd different distros handle\nthe tags different ways, but\n\n203\n00:10:08.130 --> 00:10:09.990\nCentOS does it a really easy way.\n\n204\n00:10:09.990 --> 00:10:14.941\nWhen I do a pull for\nCentOS you can say :7, and\n\n205\n00:10:14.941 --> 00:10:17.880\nthat tells it you wanna get CentOS 7.\n\n206\n00:10:17.880 --> 00:10:21.670\nOr I can say :6, and it'll pull CentOS 6.\n\n207\n00:10:21.670 --> 00:10:25.230\nWhen you don't specify it at all,\nit defaults to a tag of latest, and\n\n208\n00:10:25.230 --> 00:10:26.920\nlatest means get the newest one.\n\n209\n00:10:26.920 --> 00:10:31.190\nIf I do a pull for\ncentos:7 that is the latest.\n\n210\n00:10:31.190 --> 00:10:32.530\nSo, see how it didn't download?\n\n211\n00:10:32.530 --> 00:10:35.720\n&gt;&gt; Right.\n&gt;&gt; It did a sha256 sum, saw that I already\n\n212\n00:10:35.720 --> 00:10:39.130\nhad an image that matched that checksum\nand it didn't have to download it again.\n\n213\n00:10:39.130 --> 00:10:41.296\nBut, if I do docker pull centos 6,\n\n214\n00:10:41.296 --> 00:10:46.233\nand I do it that way it's going to reach\nout and say, we don't have that one.\n\n215\n00:10:46.233 --> 00:10:51.086\nSo let me download it and now I'll have\nCentOS 6 and CentOS 7 available and\n\n216\n00:10:51.086 --> 00:10:55.260\nwhen I create a container I can\npick between the versions right.\n\n217\n00:10:55.260 --> 00:11:00.260\nSo if I do a docker images now,\nI can see that I've got centos\n\n218\n00:11:00.260 --> 00:11:05.060\nthe latest and I\"v got centos 7 and\nI've got centos 6.\n\n219\n00:11:05.060 --> 00:11:08.990\nNow centos latest and\ncentos 7 are the same.\n\n220\n00:11:08.990 --> 00:11:12.515\nAnd I know that cuz if you look at the\nimage ID, see how the image ID matches?\n\n221\n00:11:12.515 --> 00:11:14.269\n&gt;&gt; Mm-hm.\n&gt;&gt; But you can't trust the file size,\n\n222\n00:11:14.269 --> 00:11:16.541\nsometimes you just luck out and\nthe file size is the same.\n\n223\n00:11:16.541 --> 00:11:21.041\nBut the image ID is the same, so\nI know 7 is the latest and I've got 6, and\n\n224\n00:11:21.041 --> 00:11:23.597\nI think they have 5 and even 4 out there.\n\n225\n00:11:23.597 --> 00:11:29.270\nAnd I think, well,\nhow do we know what tags are available?\n\n226\n00:11:29.270 --> 00:11:32.065\nWith CentOS it's easy,\nthey just do a number.\n\n227\n00:11:32.065 --> 00:11:37.550\nOr Ubuntu is really hard cuz they use\nthe code names, it's like I've gotta pull\n\n228\n00:11:37.550 --> 00:11:42.940\nUbuntu wheezy walrus, or\nwhatever crazy name it is they assigned.\n\n229\n00:11:42.940 --> 00:11:44.520\nThey assign code names, right?\n\n230\n00:11:44.520 --> 00:11:46.840\nAnd if you know the code names it's easy,\nbut\n\n231\n00:11:46.840 --> 00:11:48.540\nif you don't know the code\nnames it's kind of a pain.\n\n232\n00:11:48.540 --> 00:11:52.178\nAnd unfortunately there's not really\na great way to say show me all the tags.\n\n233\n00:11:52.178 --> 00:11:55.430\nThe official docker recommendation\nis go to their website and\n\n234\n00:11:55.430 --> 00:12:00.460\non their website you can go in and\nthen pull up a list of the tags.\n\n235\n00:12:00.460 --> 00:12:03.230\nBut I'll actually,\nI'll put a link in the show notes,\n\n236\n00:12:03.230 --> 00:12:06.900\nthere's a GitHub project that's\nout there that actually has\n\n237\n00:12:06.900 --> 00:12:09.800\na neat little script that we can\nrun that'll let us pull this up.\n\n238\n00:12:09.800 --> 00:12:14.060\nSo I'll link to it in the show notes so\nyou guys can get out there and get it.\n\n239\n00:12:14.060 --> 00:12:19.300\nBut for right now, I went ahead and\ncopied it to my system.\n\n240\n00:12:19.300 --> 00:12:24.470\nBut it's just a quick script that uses\ncurl to reach out the Docker IO website\n\n241\n00:12:24.470 --> 00:12:28.280\nand pull all the tags for\na particular image that we wanna grab.\n\n242\n00:12:28.280 --> 00:12:30.820\nSo again, I'll stick the link\nto this in the show notes.\n\n243\n00:12:30.820 --> 00:12:33.370\n&gt;&gt; So Don is there a way that we\ncan see all those available tags?\n\n244\n00:12:33.370 --> 00:12:35.190\nCan we put them all in one place?\n\n245\n00:12:35.190 --> 00:12:37.117\n&gt;&gt; Well,\nthere is not really an official way that,\n\n246\n00:12:37.117 --> 00:12:39.780\nwhat the docker guys say is come\nto our website, go to docker.io.\n\n247\n00:12:39.780 --> 00:12:42.030\nYou can search docker up and\nfind all the tags right there.\n\n248\n00:12:42.030 --> 00:12:45.820\nBut if you wanna do it from the command\nline there's actually a, I found a script\n\n249\n00:12:45.820 --> 00:12:49.170\nthat was on GitHub and I'll post\nthe link to this in the show notes.\n\n250\n00:12:49.170 --> 00:12:53.985\nBut it's by, I don't know leetschau\nhowever you, his names probably Bob Smith.\n\n251\n00:12:53.985 --> 00:12:56.326\n&gt;&gt; [LAUGH]\n&gt;&gt; But [LAUGH] you know how that is.\n\n252\n00:12:56.326 --> 00:12:58.497\nWhere they wrote just\na quick little script,\n\n253\n00:12:58.497 --> 00:13:02.221\na really simple script that reaches out\nand allows you to pull all those tags.\n\n254\n00:13:02.221 --> 00:13:06.710\nAnd so I'm gonna use that right here\nto just kinda demonstrate that.\n\n255\n00:13:06.710 --> 00:13:11.100\nWhat I've done is I just kinda saved\nit in a file here called list tags.sh.\n\n256\n00:13:11.100 --> 00:13:13.390\nAnd I can do that for centos, and\n\n257\n00:13:13.390 --> 00:13:17.340\nwhen I run that it's reaching out\nto docker.io and pulling the tags.\n\n258\n00:13:17.340 --> 00:13:20.190\nAnd when you do that we already\nknow we got centos colon latest.\n\n259\n00:13:20.190 --> 00:13:22.949\nLatest is always defined for every image.\n\n260\n00:13:22.949 --> 00:13:27.752\nBut after that I can see the other tags\nthat are available like pulling specific\n\n261\n00:13:27.752 --> 00:13:28.490\nversions.\n\n262\n00:13:28.490 --> 00:13:30.961\nI could say give me centos 6.6,\nor centos 6.9,\n\n263\n00:13:30.961 --> 00:13:34.130\n7.0 I could get really specific like that.\n\n264\n00:13:34.130 --> 00:13:35.600\nAnd we see each of those that are listed.\n\n265\n00:13:35.600 --> 00:13:38.910\nAnd I can do the same thing for\nUbuntu, or any of the other vendors.\n\n266\n00:13:38.910 --> 00:13:40.570\nAnd I can start to see some of the tags.\n\n267\n00:13:40.570 --> 00:13:46.840\nAnd here's where we get the silly names,\nright, the trusty, xenial, zesty.\n\n268\n00:13:46.840 --> 00:13:51.110\nEach one of those that are the code names\nthat were for that particular distro.\n\n269\n00:13:51.110 --> 00:13:55.080\nSo I might remember it\nas Ubuntu Xenial Xerus,\n\n270\n00:13:55.080 --> 00:13:58.710\nbut it's just ubuntu:xenial\nhere to reach out and pull it.\n\n271\n00:13:58.710 --> 00:14:01.660\nSo being able to get this\nlist is kinda a handy thing.\n\n272\n00:14:01.660 --> 00:14:03.940\nYou can do it from the Docker.io website,\nor\n\n273\n00:14:03.940 --> 00:14:05.920\nyou can use scripts like the one\nI just used to list that out.\n\n274\n00:14:05.920 --> 00:14:09.032\nI don't know why they don't give you\nthat ability in the command, but\n\n275\n00:14:09.032 --> 00:14:11.957\nI think it's because there can be\ntons of tags that are out there.\n\n276\n00:14:11.957 --> 00:14:14.898\nSo they wanna just try and\nkeep that load to a minimum.\n\n277\n00:14:14.898 --> 00:14:19.150\nBut once we know what we want, now we\ncan pull the images down and we've got\n\n278\n00:14:19.150 --> 00:14:23.560\nthem available to be able to use to\nstart deploying things whenever we want.\n\n279\n00:14:23.560 --> 00:14:26.450\n&gt;&gt; Well, I'm surprised it's\nnot an Ubuntu Zesty Italian.\n\n280\n00:14:26.450 --> 00:14:29.205\nBut anyway is there a way that\nwe can delete these images?\n\n281\n00:14:29.205 --> 00:14:32.790\n&gt;&gt; Yeah, they're pretty small but if you\ndon't need an image anymore no sense of\n\n282\n00:14:32.790 --> 00:14:34.640\nkeeping it around, so\nyou can delete it out.\n\n283\n00:14:34.640 --> 00:14:38.810\nWe use the docker rmi which\nis Docker Remove Image,\n\n284\n00:14:38.810 --> 00:14:41.350\nRMI, and then just the name of\nthe image you wanna get rid of.\n\n285\n00:14:41.350 --> 00:14:45.796\nSo if I wanna get rid of CentOS 6, I don't\nneed that one anymore, I can say CentOS:6,\n\n286\n00:14:45.796 --> 00:14:47.191\nand it'll reach in there.\n\n287\n00:14:47.191 --> 00:14:49.340\nIt'll delete it out and\nif I do docker images,\n\n288\n00:14:49.340 --> 00:14:52.501\nI can see that I no longer have that one,\nit's been pulled, right.\n\n289\n00:14:52.501 --> 00:14:53.390\n&gt;&gt; Wow.\n&gt;&gt; So\n\n290\n00:14:53.390 --> 00:14:56.110\neasy enough to get those out of there so\nyou don't clutter up your system,\n\n291\n00:14:56.110 --> 00:14:59.410\nand if I need it again I can just go and\npull it from Docker.io again.\n\n292\n00:14:59.410 --> 00:15:02.160\nNot that big of a deal, so\nit's easy to kinda keep that clean.\n\n293\n00:15:02.160 --> 00:15:04.970\n&gt;&gt; So now, all that being said\nhow do we use those images\n\n294\n00:15:04.970 --> 00:15:06.522\nto actually build the container?\n\n295\n00:15:06.522 --> 00:15:08.480\n&gt;&gt; All right, so\nthese are the base image right, so\n\n296\n00:15:08.480 --> 00:15:11.650\nif I wanna build a container I can spawn\nit right off of one of these base images.\n\n297\n00:15:11.650 --> 00:15:14.650\nNow I need to be prepared cuz\nit's not gonna be very flashy.\n\n298\n00:15:14.650 --> 00:15:18.732\nIt's gonna be an extremely minimal base\nsystem that then configure the way\n\n299\n00:15:18.732 --> 00:15:20.040\nthat I want it, right.\n\n300\n00:15:20.040 --> 00:15:21.859\nBut getting a container\nlaunched is not hard.\n\n301\n00:15:21.859 --> 00:15:27.635\nWe just say docker run and\nthen the image that we want to run, right.\n\n302\n00:15:27.635 --> 00:15:31.411\nSo if I wanna run centos,\nI can say docker run centos and\n\n303\n00:15:31.411 --> 00:15:34.130\nit's gonna launch it and run it.\n\n304\n00:15:34.130 --> 00:15:37.789\nAnd so when I run that, here it goes, it\nlaunches the container and then it exits,\n\n305\n00:15:37.789 --> 00:15:40.600\nand it closes, and\nI'm back to a command prompt.\n\n306\n00:15:40.600 --> 00:15:43.160\nOkay, so what happened?\n\n307\n00:15:43.160 --> 00:15:44.220\nDid anything happen?\n\n308\n00:15:44.220 --> 00:15:46.320\nWell, actually a lot happened,\n\n309\n00:15:46.320 --> 00:15:49.170\nit created a container that was\nbased off of the CentOS image.\n\n310\n00:15:49.170 --> 00:15:53.338\nIt launched it and then it said look,\nyou didn't give me anything to do.\n\n311\n00:15:53.338 --> 00:15:56.703\nAnd then it closed and\nthat's the end of it, right?\n\n312\n00:15:56.703 --> 00:16:00.649\nSo it actually did, run the container,\nI just didn't give it a task, right.\n\n313\n00:16:00.649 --> 00:16:04.086\nThis is a lot different than\npowering up my laptop, right?\n\n314\n00:16:04.086 --> 00:16:05.891\nIf I power up my laptop it boots Linux and\n\n315\n00:16:05.891 --> 00:16:08.970\nif I'm not doing anything it\njust sits there and waits.\n\n316\n00:16:08.970 --> 00:16:09.800\nContainers don't do that.\n\n317\n00:16:09.800 --> 00:16:11.080\nContainers have to have a job.\n\n318\n00:16:11.080 --> 00:16:13.890\nIf you don't give them a job they close.\n\n319\n00:16:13.890 --> 00:16:15.017\nAnd that's exactly what happened here.\n\n320\n00:16:15.017 --> 00:16:16.950\nIt ran and then closed.\n\n321\n00:16:16.950 --> 00:16:19.110\nIf I want to interact with it,\n\n322\n00:16:19.110 --> 00:16:20.950\nI need to add a little bit\nmore to this command line.\n\n323\n00:16:20.950 --> 00:16:26.980\nI'm gonna say,\ndocker run -It centos, okay?\n\n324\n00:16:26.980 --> 00:16:30.030\n-I tells it that I wanted\nto be interactive.\n\n325\n00:16:30.030 --> 00:16:33.280\nIn other words, I'm not gonna give\ncommands ahead of time in a config file.\n\n326\n00:16:33.280 --> 00:16:35.860\nI'm gonna give it commands myself.\n\n327\n00:16:35.860 --> 00:16:38.300\nAnd then t says, give me a terminal,\n\n328\n00:16:38.300 --> 00:16:42.260\nactually take me to a terminal inside of\nthis container so I can work with it.\n\n329\n00:16:42.260 --> 00:16:46.850\nSo when I say docker run -It centos,\nnow it's gonna\n\n330\n00:16:46.850 --> 00:16:51.430\ncreate a centos container, and notice how\nmy command prompt just change, right?\n\n331\n00:16:51.430 --> 00:16:55.660\nAnd log in is root in the container at and\n\n332\n00:16:55.660 --> 00:16:59.620\nthen it created a generic dynamic name for\nthis container.\n\n333\n00:16:59.620 --> 00:17:02.570\nI'm inside the CentOS container.\n\n334\n00:17:02.570 --> 00:17:07.080\nAnd if I do a uname -a,\nI can see that I'm running Linux and\n\n335\n00:17:07.080 --> 00:17:10.410\nit's even given it that\nunique name right there.\n\n336\n00:17:10.410 --> 00:17:14.310\nAnd I'm up and I\"m going and\nI'm in a CentOS distribution.\n\n337\n00:17:14.310 --> 00:17:19.500\nA very, very kind of isolated\nenvironment in the container.\n\n338\n00:17:19.500 --> 00:17:22.120\nIf I pull up a director listing,\nI see a file system.\n\n339\n00:17:22.120 --> 00:17:26.414\nBut it's not my normal file system,\nthis is the file system inside\n\n340\n00:17:26.414 --> 00:17:31.185\nof the container, so I start poking\naround in things like /user/sbin.\n\n341\n00:17:31.185 --> 00:17:35.289\nWhat we'll find is that there's a lot less\ncommands in here than we're normally used\n\n342\n00:17:35.289 --> 00:17:36.255\nto, right?\n\n343\n00:17:36.255 --> 00:17:40.015\nAnd as we browse in the other folders\nthere's lot less data in each of these\n\n344\n00:17:40.015 --> 00:17:43.615\ndirectories than we're used to because\nthis is just what's inside the container,\n\n345\n00:17:43.615 --> 00:17:45.535\nthat base install.\n\n346\n00:17:45.535 --> 00:17:46.035\n&gt;&gt; Air bone.\n\n347\n00:17:46.035 --> 00:17:49.715\n&gt;&gt; But it's up, it's running,\nI'm in it and I'm interacting with it.\n\n348\n00:17:49.715 --> 00:17:51.007\nI'm able to use it.\n\n349\n00:17:51.007 --> 00:17:54.380\nAnd once I'm done with it, I can get out.\n\n350\n00:17:54.380 --> 00:17:58.330\nBut I need to be careful with how I\nget out because if I just type exit,\n\n351\n00:17:58.330 --> 00:18:01.660\nwhen I exit out,\nthat ends my interactive session.\n\n352\n00:18:01.660 --> 00:18:02.990\nWell, guess what that does.\n\n353\n00:18:02.990 --> 00:18:04.010\nIt's just the container down.\n\n354\n00:18:04.010 --> 00:18:08.330\nThe container doesn't have a job\nanymore and so it exits out, right?\n\n355\n00:18:08.330 --> 00:18:11.660\nSo when I run a container,\nI'm gonna launch an Ubuntu one this time.\n\n356\n00:18:11.660 --> 00:18:13.587\nI'll say docker run- it ubuntu, so\n\n357\n00:18:13.587 --> 00:18:17.350\nyou're gonna use that Ubuntu image to spin\nme up and now I've got a new instance.\n\n358\n00:18:17.350 --> 00:18:20.834\nNotice my command prompt\nhas a different id, right?\n\n359\n00:18:20.834 --> 00:18:22.030\nNot the same id I had before.\n\n360\n00:18:22.030 --> 00:18:26.246\nThis is an all new container and\nI'm in it and I'm running and doing work,\n\n361\n00:18:26.246 --> 00:18:27.546\nI' m doing whatever.\n\n362\n00:18:27.546 --> 00:18:32.298\nI notice my directory listing looks\ncompletely different that when I pulled up\n\n363\n00:18:32.298 --> 00:18:34.760\nthe directory inside of the CentOS one.\n\n364\n00:18:34.760 --> 00:18:39.930\nCentOS and really Red Hat, they do this\nthing where they link /sbin and /bin.\n\n365\n00:18:39.930 --> 00:18:46.870\nThey link those to /user /sbin, and /user\n/bin versus Ubuntu that doesn't do that.\n\n366\n00:18:46.870 --> 00:18:49.070\nSo /bin and /sbin are their own folders.\n\n367\n00:18:49.070 --> 00:18:53.925\nSo I see this is different because\nit's now Ubuntu style instead of\n\n368\n00:18:53.925 --> 00:18:55.841\nRed Hat style or however.\n\n369\n00:18:55.841 --> 00:18:59.020\nSo, I see the variations,\nI can work with the system.\n\n370\n00:18:59.020 --> 00:19:03.112\nAnd if I wanna leave it\nrunning in the background,\n\n371\n00:19:03.112 --> 00:19:06.890\nI can hit Ctrl + Q, Ctrl + P, right?\n\n372\n00:19:06.890 --> 00:19:07.860\nOops, got it backwards.\n\n373\n00:19:07.860 --> 00:19:11.610\nCtrl + P, Ctrl + Q,\nlet's try and get this.\n\n374\n00:19:11.610 --> 00:19:12.770\nI can do this.\n\n375\n00:19:12.770 --> 00:19:14.500\nCtrl + P, followed by Ctrl + Q.\n\n376\n00:19:14.500 --> 00:19:15.917\nThere we go.\n\n377\n00:19:15.917 --> 00:19:21.010\nAnd when I do Ctrl + P, Ctrl + Q,\nit takes me out of the session and\n\n378\n00:19:21.010 --> 00:19:24.080\nnow I'm at my regular command prompt.\n\n379\n00:19:24.080 --> 00:19:26.655\nI'm back on my own centos7\nmachine that I'm on.\n\n380\n00:19:26.655 --> 00:19:30.220\nAnd that container is still\nrunning in the background.\n\n381\n00:19:30.220 --> 00:19:32.130\nIt's running, it's doing it's thing.\n\n382\n00:19:32.130 --> 00:19:36.180\nNow, I need to be careful here\ncuz how do I get back into it?\n\n383\n00:19:36.180 --> 00:19:39.223\nWell, if I do a docker run -it ubuntu,\n\n384\n00:19:39.223 --> 00:19:43.650\nit's gonna create another container,\nright?\n\n385\n00:19:43.650 --> 00:19:46.950\nSo the one that's in the background\nI need to reattach to it.\n\n386\n00:19:46.950 --> 00:19:49.440\nI need to get connected\nback to that terminal.\n\n387\n00:19:49.440 --> 00:19:56.570\nAnd so what I do is I would say, docker\nattach and then the id of that instance.\n\n388\n00:19:56.570 --> 00:19:59.590\nSo I can take that id right here.\n\n389\n00:19:59.590 --> 00:20:03.570\nAnd we can paste that in docker attach and\nI can connect to it.\n\n390\n00:20:03.570 --> 00:20:05.860\nAnd now I'm back into\nthe shell of that unit.\n\n391\n00:20:05.860 --> 00:20:08.490\nSo I'm leaving the container running,\nokay.\n\n392\n00:20:08.490 --> 00:20:12.432\nNow if this seems kind of quirky and\ndifficult that's because it is.\n\n393\n00:20:12.432 --> 00:20:14.600\n&gt;&gt; [LAUGH]\n&gt;&gt; But the main reason is this is not how\n\n394\n00:20:14.600 --> 00:20:16.850\ncontainers are intended to be used, right?\n\n395\n00:20:16.850 --> 00:20:19.720\nWe're supposed to create a job for\nthe container to do.\n\n396\n00:20:19.720 --> 00:20:22.010\nWe're supposed to put it in\nthe configuration file of the container,\n\n397\n00:20:22.010 --> 00:20:24.080\nso when it launches it does its job.\n\n398\n00:20:24.080 --> 00:20:26.470\nAnd we don't access the shell like this,\nright?\n\n399\n00:20:26.470 --> 00:20:29.440\nWe build the base image to have\nexactly what we wanna in it and\n\n400\n00:20:29.440 --> 00:20:31.722\nthen we just run it and\nlet it run in the background, right?\n\n401\n00:20:31.722 --> 00:20:36.080\nSo in interactive terminal like this is\nreally only used in the initial stages.\n\n402\n00:20:36.080 --> 00:20:37.126\nWhen we're going in,\n\n403\n00:20:37.126 --> 00:20:40.330\nin starting to set this thing up and\nget it done the way that we want it.\n\n404\n00:20:40.330 --> 00:20:42.083\nSo I've created this container and\n\n405\n00:20:42.083 --> 00:20:45.070\nI need to interact with it right\nnow to get some things set up.\n\n406\n00:20:45.070 --> 00:20:47.307\nMaybe I want it to be a web server, right?\n\n407\n00:20:47.307 --> 00:20:52.506\nSo I would need to say,\napt get install httpd, right?\n\n408\n00:20:52.506 --> 00:20:54.432\nAnd or what is it apache2.\n\n409\n00:20:54.432 --> 00:20:57.650\nWhat do they call theirs, all right.\n\n410\n00:20:57.650 --> 00:20:59.920\nApparently, I don't know what\nthey call their web server.\n\n411\n00:20:59.920 --> 00:21:03.360\nLet me switch to, I'm not a Ubuntu guy,\nI'm a Red Hat guy.\n\n412\n00:21:03.360 --> 00:21:04.863\nSo, let me switch over to CentOS.\n\n413\n00:21:04.863 --> 00:21:06.925\n&gt;&gt; Yes, you are.\nRight, I know what the heck I'm doing.\n\n414\n00:21:06.925 --> 00:21:09.671\n&gt;&gt; [LAUGH]\n&gt;&gt; And [LAUGH] I'm coming in as a young\n\n415\n00:21:09.671 --> 00:21:14.323\ninstall httpd and it's gonna reach out,\nit's gonna find that package,\n\n416\n00:21:14.323 --> 00:21:17.870\nget it installed and\nnow I've got a web server, right?\n\n417\n00:21:17.870 --> 00:21:18.590\nWell, not really.\n\n418\n00:21:18.590 --> 00:21:20.210\nI've got the web server files installed.\n\n419\n00:21:20.210 --> 00:21:22.520\nI still need to start the service and\nall that other good stuff, right?\n\n420\n00:21:22.520 --> 00:21:27.994\nSo I'll need to come in and\nsay things like systemctl enable for\n\n421\n00:21:27.994 --> 00:21:32.550\nhttpd and\nsystemctl star to get up and running.\n\n422\n00:21:32.550 --> 00:21:34.640\nBut I treat this like a normal install,\nright?\n\n423\n00:21:34.640 --> 00:21:37.850\nI'm connected in, I'm reaching out,\nI'm doing things,\n\n424\n00:21:37.850 --> 00:21:43.080\nI'm making changes to the container\njust like I would a regular Linux\n\n425\n00:21:43.080 --> 00:21:47.760\ninstall to get it kind of configured the\nway that I want and get it up and running.\n\n426\n00:21:47.760 --> 00:21:49.196\nSo, there we go.\n\n427\n00:21:49.196 --> 00:21:51.949\nI’m kinda stalling while this\nthing finishes its install.\n\n428\n00:21:51.949 --> 00:21:52.856\n&gt;&gt; That was a good install.\n\n429\n00:21:52.856 --> 00:21:54.285\n&gt;&gt; [LAUGH] I know,\nI thought I almost had it too.\n\n430\n00:21:54.285 --> 00:21:57.480\n&gt;&gt; [LAUGH]\n&gt;&gt; But once it's done, there we go.\n\n431\n00:21:57.480 --> 00:22:01.960\nNow I can do a systemctl enable -- now.\n\n432\n00:22:01.960 --> 00:22:05.822\nI don't know what version of CentOS is it,\n-- now might not work.\n\n433\n00:22:05.822 --> 00:22:11.068\nFor httpd and it's almost worked,\nI did get a bus failure, you know what,\n\n434\n00:22:11.068 --> 00:22:16.675\nI\"m forgetting with a container you don't\nhave demons that run in a background.\n\n435\n00:22:16.675 --> 00:22:20.943\nBecause we're calling these and giving\nit a list of jobs to do, we actually\n\n436\n00:22:20.943 --> 00:22:25.790\njust need to run httpd as a program,\nas a foreground program in this container.\n\n437\n00:22:25.790 --> 00:22:27.290\nSo I'll show you guys how\nto do that in a minute but\n\n438\n00:22:27.290 --> 00:22:28.660\nyeah the service isn't gonna start.\n\n439\n00:22:28.660 --> 00:22:31.490\nBut as far as getting it installed,\nand getting it configured,\n\n440\n00:22:31.490 --> 00:22:35.100\nall of that is gonna be basically done\nthe same way that we normally would.\n\n441\n00:22:35.100 --> 00:22:39.879\nSo you'll have things like /var/www and\nin there you got the html folder,\n\n442\n00:22:39.879 --> 00:22:43.773\nin here you can start putting\nyour web pages and your content.\n\n443\n00:22:43.773 --> 00:22:46.988\nYou've got the httpd demon installed,\nso we can fire up Apache, and\n\n444\n00:22:46.988 --> 00:22:50.420\nwe can start to serve web pages\nright out of this container.\n\n445\n00:22:50.420 --> 00:22:53.641\nWhile I'm interactive,\nI'm getting all this stuff set up.\n\n446\n00:22:53.641 --> 00:22:56.556\nAnd then afterwards,\nwe'll take this thing and\n\n447\n00:22:56.556 --> 00:23:01.340\nwe'll actually get it to run as\na container, and launch Apache as its job.\n\n448\n00:23:01.340 --> 00:23:02.660\nThat'll be the job we give it.\n\n449\n00:23:02.660 --> 00:23:06.000\nAnd as long as Apache is running,\nthe container will stay up and healthy.\n\n450\n00:23:06.000 --> 00:23:09.600\nAnd if anything goes wrong with Apache,\nthen the container closes.\n\n451\n00:23:09.600 --> 00:23:12.370\nAnd I can just relaunch the container and\neverything's back to normal again.\n\n452\n00:23:12.370 --> 00:23:16.600\nSo it's really easy to quickly recover\nfrom things and get it up and going.\n\n453\n00:23:16.600 --> 00:23:21.948\nBut at this point, it's in business and I\nmentioned that I would need to run httpd.\n\n454\n00:23:21.948 --> 00:23:23.270\nI need to give it a job, right?\n\n455\n00:23:23.270 --> 00:23:24.190\nLet me show you an example.\n\n456\n00:23:24.190 --> 00:23:26.959\nI'm gonna exit out of this container.\n\n457\n00:23:26.959 --> 00:23:31.733\nAnd on my system I'm running centos7,\nright?\n\n458\n00:23:31.733 --> 00:23:36.176\nSo when I do a cat/etc/redhat- release,\n\n459\n00:23:36.176 --> 00:23:43.510\nI can see I'm running CentOS Linux\nrelease 7.3.1611, right?\n\n460\n00:23:43.510 --> 00:23:46.580\nIf I pull down docker image real quick,\nright?\n\n461\n00:23:46.580 --> 00:23:50.785\nSo I'll do a docker pull centos6, right?\n\n462\n00:23:50.785 --> 00:23:52.539\nSo I'm gonna pull that one down and\n\n463\n00:23:52.539 --> 00:23:55.211\nthen a real quick spin up\njust a docker six instance.\n\n464\n00:23:55.211 --> 00:23:57.268\nThat when I do it.\n\n465\n00:23:57.268 --> 00:23:59.475\nWhat I've been using is docker run so\nfar, and\n\n466\n00:23:59.475 --> 00:24:03.048\ndoing -it to get to an interactive\nterminal, but I don't have to do that.\n\n467\n00:24:03.048 --> 00:24:06.196\nI could just say,\ndocker run centos:6, right?\n\n468\n00:24:06.196 --> 00:24:09.704\nSo I'm telling it,\nI wanna spin up that container,\n\n469\n00:24:09.704 --> 00:24:12.188\nand then I can just give it a command.\n\n470\n00:24:12.188 --> 00:24:18.312\nI can tell it cat /etc/redhat-release.\n\n471\n00:24:18.312 --> 00:24:23.310\nIt's gonna run the container, and\nthen it's gonna execute this command.\n\n472\n00:24:23.310 --> 00:24:24.730\nSo HTTPD,\n\n473\n00:24:24.730 --> 00:24:28.890\ninstead of running it as a service,\nI could run it as a foreground program.\n\n474\n00:24:28.890 --> 00:24:33.000\nIt would launch the container,\nrun HTTPD and now the web service is up.\n\n475\n00:24:33.000 --> 00:24:37.382\nSo when I run this, I know when I\ncheck that file on my own system,\n\n476\n00:24:37.382 --> 00:24:41.050\nI got that I was running\nCentOS Linux release 7.3.\n\n477\n00:24:41.050 --> 00:24:44.587\nNow when I run this though, that command\nis gonna run inside of the container, and\n\n478\n00:24:44.587 --> 00:24:45.640\nwhat do I get?\n\n479\n00:24:45.640 --> 00:24:48.820\nI'm running CentOS release 6.9 final.\n\n480\n00:24:48.820 --> 00:24:52.180\nExecuted the command,\nI got the output and then it exited out.\n\n481\n00:24:52.180 --> 00:24:55.722\nAnd you can do that with any command,\nany command that has output at least.\n\n482\n00:24:55.722 --> 00:24:58.417\nAnd so I can come in and provide uname -a.\n\n483\n00:24:58.417 --> 00:25:01.319\nAnd it will run that right\ninside of the container,\n\n484\n00:25:01.319 --> 00:25:04.638\nversus on my system I might be\nrunning a different kernel.\n\n485\n00:25:04.638 --> 00:25:07.856\nWell notice how the kernels\nare the same right?\n\n486\n00:25:07.856 --> 00:25:09.530\nRemember how these containers work.\n\n487\n00:25:09.530 --> 00:25:11.993\nThe container is actually\nsharing my kernel.\n\n488\n00:25:11.993 --> 00:25:17.730\nIf I go in and install Centos 6.9 right\nnow, it is an older kernel than CentOS 7.\n\n489\n00:25:17.730 --> 00:25:22.149\nI'm running 7.3, but\nthe container is sharing my kernel.\n\n490\n00:25:22.149 --> 00:25:26.952\nSo when I run uname -a in the container,\nI get the exact same kernel as I\n\n491\n00:25:26.952 --> 00:25:31.930\ndo on my own machine, and\nthat's because they're sharing the kernel.\n\n492\n00:25:31.930 --> 00:25:35.740\nSo my CentOS 6.9 machine is\nactually using an updated kernel,\n\n493\n00:25:35.740 --> 00:25:36.990\nthanks to the container.\n\n494\n00:25:36.990 --> 00:25:41.332\nWhich fortunately is backwards compatible,\nit worked fine and we're up and going.\n\n495\n00:25:41.332 --> 00:25:44.252\nBut that's how we execute commands\ninside of the container and\n\n496\n00:25:44.252 --> 00:25:46.136\nactually get to the performance tasks.\n\n497\n00:25:46.136 --> 00:25:49.560\n&gt;&gt; So what happens when a container exits?\n\n498\n00:25:49.560 --> 00:25:51.098\n&gt;&gt; All right, so here's the tricky part.\n\n499\n00:25:51.098 --> 00:25:55.081\nWhen we're done with a container,\ntechnically I ran that command, we exited,\n\n500\n00:25:55.081 --> 00:25:56.378\nand that's the end of it.\n\n501\n00:25:56.378 --> 00:26:00.610\nYou know what, I launched a container\nearlier and installed HTTPD in it.\n\n502\n00:26:00.610 --> 00:26:02.830\nWhen I exited, the container's closed.\n\n503\n00:26:02.830 --> 00:26:06.950\nAnd so what's gonna happen is\nthat data doesn't get saved.\n\n504\n00:26:06.950 --> 00:26:10.510\nAnd if I launch a new container,\nit's not gonna have HTTPD inside of it.\n\n505\n00:26:10.510 --> 00:26:12.550\nI modified just that one.\n\n506\n00:26:12.550 --> 00:26:14.320\nI'm actually doing kind\nof bad cleanup here.\n\n507\n00:26:14.320 --> 00:26:17.780\nI've launched a series of containers,\nand I haven't closed them all,\n\n508\n00:26:17.780 --> 00:26:20.740\nthey're all kinda sitting\nin the background.\n\n509\n00:26:20.740 --> 00:26:23.180\nSo if I were take a look at\nwhat's kinda sitting here.\n\n510\n00:26:23.180 --> 00:26:28.080\nIf I do a docker ps,\ndocker ps shows me the active containers.\n\n511\n00:26:28.080 --> 00:26:31.110\nWell, I don't have any active containers,\ncuz every one I've run,\n\n512\n00:26:31.110 --> 00:26:34.240\nI've done something and\nI've gotten out of it, exited it, right?\n\n513\n00:26:34.240 --> 00:26:36.810\nSo every container in this show so\nfar has been closed.\n\n514\n00:26:36.810 --> 00:26:40.790\nIf you do a docker ps -a though,\nI can see that I've actually left\n\n515\n00:26:40.790 --> 00:26:45.090\nbehind a whole trail of\njust junked up containers.\n\n516\n00:26:46.120 --> 00:26:47.970\nSome of them that I launched and\njust ran a command.\n\n517\n00:26:47.970 --> 00:26:49.963\nSo here I can see this one,\nI launched CentOS.\n\n518\n00:26:49.963 --> 00:26:54.910\nI ran uname -a, I did it about a minute\nago and it's just sitting there now.\n\n519\n00:26:54.910 --> 00:26:59.320\nOkay, if I leave this, eventually\nwe'll purge them out of here, and\n\n520\n00:26:59.320 --> 00:27:01.080\nI lose those changes right?\n\n521\n00:27:01.080 --> 00:27:05.781\nBut if I built one up as a web server and\nI wanted to keep it as a web server.\n\n522\n00:27:05.781 --> 00:27:09.511\nAnd I wanted to turn that into my own\ncustom base image, then that's the next\n\n523\n00:27:09.511 --> 00:27:13.340\nthing I would need to do is take that\ncustomized container and save it.\n\n524\n00:27:13.340 --> 00:27:17.598\nSave it to my own base image, so now I can\nspin up web servers whenever I want it and\n\n525\n00:27:17.598 --> 00:27:18.816\nhave that available.\n\n526\n00:27:18.816 --> 00:27:20.832\nOkay, now I wanna show you\nguys how to do that, but\n\n527\n00:27:20.832 --> 00:27:22.427\nI know I'm low on time on this episode.\n\n528\n00:27:22.427 --> 00:27:24.440\nSo Zach, why don't we go into a part two?\n\n529\n00:27:24.440 --> 00:27:25.521\n&gt;&gt; We need a part two.\n\n530\n00:27:25.521 --> 00:27:26.485\n&gt;&gt; And in this episode,\n\n531\n00:27:26.485 --> 00:27:28.956\nwe did get a chance to see how\nto spin up the containers.\n\n532\n00:27:28.956 --> 00:27:32.903\nHow to pull the images down, how to kinda\nstart to work with them in the basic form.\n\n533\n00:27:32.903 --> 00:27:34.357\nBut in the next episode,\n\n534\n00:27:34.357 --> 00:27:39.010\nI'm gonna show you guys how to customize\nthe container to build a custom image.\n\n535\n00:27:39.010 --> 00:27:42.790\nAn image that has your specifications,\nand then we'll actually do Apache.\n\n536\n00:27:42.790 --> 00:27:45.090\nWe'll launch a web server\ninside of a container,\n\n537\n00:27:45.090 --> 00:27:47.020\nkind of show how we can containerize that.\n\n538\n00:27:47.020 --> 00:27:50.020\nSo if you ever need a quick on demand web\nserver, you can do it in a container.\n\n539\n00:27:50.020 --> 00:27:52.630\nInstead of having to install\na web server on your own machine,\n\n540\n00:27:52.630 --> 00:27:56.610\nwhich increases your attack surface and\nputs you at risk, so it's a great example.\n\n541\n00:27:56.610 --> 00:27:59.450\nSo that's all the stuff that\nwe'll be able to see in part two.\n\n542\n00:27:59.450 --> 00:28:01.070\n&gt;&gt; And I'm excited,\nI want to find out more.\n\n543\n00:28:01.070 --> 00:28:03.490\nLinux as a Docker container\npart two will be coming up.\n\n544\n00:28:03.490 --> 00:28:04.400\nThis has been part one,\n\n545\n00:28:04.400 --> 00:28:07.530\nbut before we move on I know, I can sense-\n&gt;&gt; [LAUGH]\n\n546\n00:28:07.530 --> 00:28:09.070\n&gt;&gt; You have a few more words for us.\n\n547\n00:28:09.070 --> 00:28:12.140\n&gt;&gt; Everything I've done so far,\nI've been doing on a CentOS machine,\n\n548\n00:28:12.140 --> 00:28:14.520\nwhich means it works the same on Red Hat.\n\n549\n00:28:14.520 --> 00:28:18.860\nBut this actually does work the same\non Fedora, on Ubuntu, on Debian.\n\n550\n00:28:18.860 --> 00:28:20.731\nDocker is designed to be independent.\n\n551\n00:28:20.731 --> 00:28:22.027\nSo once you install the packages,\n\n552\n00:28:22.027 --> 00:28:24.632\nall the commands we've done works\nthe same on each of the platforms.\n\n553\n00:28:24.632 --> 00:28:26.450\nSo fortunately, there's that.\n\n554\n00:28:26.450 --> 00:28:29.380\nSo just be aware that it's not\na very difficult thing to support,\n\n555\n00:28:29.380 --> 00:28:30.420\nregardless of what the host is.\n\n556\n00:28:30.420 --> 00:28:32.670\nThat's kinda the advantage of Docker.\n\n557\n00:28:32.670 --> 00:28:34.170\n&gt;&gt; Thank you, Don, you do an awesome job.\n\n558\n00:28:34.170 --> 00:28:37.050\nAnd make sure to watch every single\nepisode of Linux and the Cloud,\n\n559\n00:28:37.050 --> 00:28:38.346\nyou'll be glad that you did.\n\n560\n00:28:38.346 --> 00:28:40.549\nAnd thank you for watching ITProTV.\n\n561\n00:28:40.549 --> 00:28:43.978\nRemember, a good IT pro\nis always learning.\n\n562\n00:28:43.978 --> 00:28:44.718\nI'm Zach Memos.\n\n563\n00:28:44.718 --> 00:28:45.471\n&gt;&gt; And I'm Don Pezet.\n\n564\n00:28:45.471 --> 00:28:48.430\n&gt;&gt; And we will see you again very soon.\n\n565\n00:28:48.430 --> 00:28:54.247\n[MUSIC]\n\n566\n00:28:54.247 --> 00:28:57.208\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "231878479"
        },
        {
          "description": "Don and Zach continue looking at linux as a Docker container, saving changes, running a container in the background, if we normally run the containers interactively, how to clean up the containers we no longer need, stopping a container, and deleting a container.",
          "length": "1190",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-4-2-2-linux_as_a_docker_container_pt_2-083017-PGM.00_23_34_21.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-4-2-2-linux_as_a_docker_container_pt_2-083017-PGM.00_23_34_21.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-linuxinthecloud/techskills-linuxinthecloud-4-2-2-linux_as_a_docker_container_pt_2-083017-PGM.00_23_34_21.Still001-sm.jpg",
          "title": "Linux as a Docker Container Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:02.437\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:02.437 --> 00:00:06.294\n&gt;&gt; [CROSSTALK]\n\n3\n00:00:06.294 --> 00:00:08.280\n[MUSIC]\n\n4\n00:00:08.280 --> 00:00:11.910\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:11.910 --> 00:00:14.393\n&gt;&gt; Hello and thank you for\nwatching ITProTV.\n\n6\n00:00:14.393 --> 00:00:16.300\nHelping you learn wherever you go.\n\n7\n00:00:16.300 --> 00:00:20.400\nI'm your host Zach Memos as we\ncontinue on with Linux in the clouds.\n\n8\n00:00:20.400 --> 00:00:23.106\nAnd Linux as a docker container part two.\n\n9\n00:00:23.106 --> 00:00:27.778\nWe had part one, and now we get the rest\nof it from Don Pezet who knows what's up.\n\n10\n00:00:27.778 --> 00:00:29.790\n&gt;&gt; [LAUGH]\n&gt;&gt; He know [INAUDIBLE].\n\n11\n00:00:29.790 --> 00:00:31.206\n&gt;&gt; All right, Zack,\nlet's continue our adventure, right?\n\n12\n00:00:31.206 --> 00:00:32.876\n&gt;&gt; [LAUGH]\n&gt;&gt; At the end of part two or\n\n13\n00:00:32.876 --> 00:00:35.680\nat the end of part one,\nI guess we're just making part two.\n\n14\n00:00:35.680 --> 00:00:39.050\nBut [LAUGH] in the last episode,\nwe created a bunch of containers.\n\n15\n00:00:39.050 --> 00:00:41.130\n&gt;&gt; Yes, we did.\n&gt;&gt; But they're all very temporary, right?\n\n16\n00:00:41.130 --> 00:00:44.360\nAnd so after I was done with them,\nwe kinda just casting them aside and\n\n17\n00:00:44.360 --> 00:00:47.150\nleaving behind a whole trail of\ncontainers left on my machine now.\n\n18\n00:00:47.150 --> 00:00:50.670\nBut basically, we need to just start\nthinking a little more long term, right?\n\n19\n00:00:50.670 --> 00:00:53.600\nHow can we actually use these\ncontainers in production?\n\n20\n00:00:53.600 --> 00:00:57.380\nSo in this episode, I wanna take the stuff\nwe covered in the first episode and\n\n21\n00:00:57.380 --> 00:01:00.460\nI wanna change that to make it a little\nmore like what we would actually do\n\n22\n00:01:00.460 --> 00:01:02.590\nin a production world to\nget this stuff deployed.\n\n23\n00:01:02.590 --> 00:01:05.292\nSo that's what we're gonna take a little\nlook at right here in this episode.\n\n24\n00:01:05.292 --> 00:01:09.540\n&gt;&gt; Yeah, at the end of episode one,\nwe were closing down these containers.\n\n25\n00:01:09.540 --> 00:01:12.780\nWe weren't being able to save anything,\nso is there a way to save them?\n\n26\n00:01:12.780 --> 00:01:14.310\n&gt;&gt; Right, so there is.\n\n27\n00:01:14.310 --> 00:01:17.720\nThe idea on this is that containers\nare designed to be temporary.\n\n28\n00:01:17.720 --> 00:01:20.090\nYou launch them,\nthey do a job and they get out.\n\n29\n00:01:20.090 --> 00:01:24.000\nOr maybe you launch one, it's doing\nthe job and it gets too busy and so\n\n30\n00:01:24.000 --> 00:01:25.200\nyou launch a second one, or\n\n31\n00:01:25.200 --> 00:01:29.000\na third one, or another thousand of them\nto really be able to pick up that load.\n\n32\n00:01:29.000 --> 00:01:32.780\nThat's how containers are designed to\nbe able to scale very big, very fast.\n\n33\n00:01:32.780 --> 00:01:37.930\nSo when I create a container,\nit needs to already know what its job is.\n\n34\n00:01:37.930 --> 00:01:41.080\nAnd that means the base images that\nI was working with in the last\n\n35\n00:01:41.080 --> 00:01:42.470\nepisode are not good enough.\n\n36\n00:01:42.470 --> 00:01:47.430\nWe need to go in and customize those base\nimages and change them, modify them,\n\n37\n00:01:47.430 --> 00:01:50.080\nmake them work the way\nwe want them to work.\n\n38\n00:01:50.080 --> 00:01:53.250\nAnd it usually is a matter of\ninstalling some software, right?\n\n39\n00:01:53.250 --> 00:02:00.539\nSo if I spin up a container,\nI'll do a docker run -it centos, right?\n\n40\n00:02:00.539 --> 00:02:03.600\nSo I'm gonna spin up a centos container,\nright?\n\n41\n00:02:03.600 --> 00:02:07.160\nAnd I'm gonna grab this id while I've\ngot it here, just so I don't forget it,\n\n42\n00:02:07.160 --> 00:02:09.480\ncuz it's not something that\nI can really remember.\n\n43\n00:02:09.480 --> 00:02:13.470\nAnd it assigns a little code name\nto each container you spin up to,\n\n44\n00:02:13.470 --> 00:02:14.780\nit just doesn't show you right here.\n\n45\n00:02:14.780 --> 00:02:16.440\nSo we'll see that in the minute.\n\n46\n00:02:16.440 --> 00:02:20.110\nBut now that I'm in here,\nI can do a yum update if I need to, or\n\n47\n00:02:20.110 --> 00:02:23.960\na yum install httpd maybe\nI want php as well, right?\n\n48\n00:02:23.960 --> 00:02:27.740\nSo I can provide it the different\nthings that I need to get installed\n\n49\n00:02:27.740 --> 00:02:30.250\nto get this one configured\nthe way that I want.\n\n50\n00:02:30.250 --> 00:02:33.150\nAnd once I've got that stuff installed,\nthen I can go and create my index.html,\n\n51\n00:02:33.150 --> 00:02:36.150\nand all of the other things\nthat I need inside of it.\n\n52\n00:02:36.150 --> 00:02:42.730\nNow my container doesn't have a firewall,\nso it doesn't have firewalld or iptables.\n\n53\n00:02:42.730 --> 00:02:45.500\nIt doesn't have a lot of the other\nstuff embedded in it that we\n\n54\n00:02:45.500 --> 00:02:47.030\nwould normally have to worry about.\n\n55\n00:02:47.030 --> 00:02:49.370\nNow, my container doesn't have\nthings like a firewall, right?\n\n56\n00:02:49.370 --> 00:02:51.560\nI don't have firewalld or iptables.\n\n57\n00:02:51.560 --> 00:02:55.290\nSo a lot of my configuration is much more\nsimple than it would be in a normal.\n\n58\n00:02:55.290 --> 00:02:59.080\nAnd so I don't have to worry about\nconfiguring that kinda security side.\n\n59\n00:02:59.080 --> 00:03:01.787\nI do need to forget my index.html.\n\n60\n00:03:01.787 --> 00:03:04.700\nI do need to create the things\nthat Apache needs to run.\n\n61\n00:03:04.700 --> 00:03:06.940\nIt's got its own configuration\nfile I might need to customize or\n\n62\n00:03:06.940 --> 00:03:08.390\nSSL certificates, right?\n\n63\n00:03:08.390 --> 00:03:10.460\nSo I need to get all that\nstuff loaded in there and\n\n64\n00:03:10.460 --> 00:03:11.980\nconfigure it the way that I want.\n\n65\n00:03:11.980 --> 00:03:14.690\nBut now this is finished at a minimum,\n\n66\n00:03:14.690 --> 00:03:18.550\nI've got a base installed\nof Apache with php.\n\n67\n00:03:18.550 --> 00:03:20.650\nAnd assuming that Apache is running,\n\n68\n00:03:20.650 --> 00:03:24.440\nI should be able to browse this container\nand see the Apache test page, right?\n\n69\n00:03:24.440 --> 00:03:26.340\nTest page should come up and\nthat is what I should get.\n\n70\n00:03:26.340 --> 00:03:30.850\nSo, at this stage, I would customize this\ncontainer exactly how I want, right?\n\n71\n00:03:30.850 --> 00:03:33.860\nDo everything that we need to\ndo to get that container working\n\n72\n00:03:33.860 --> 00:03:34.410\nthe way that we want.\n\n73\n00:03:34.410 --> 00:03:36.640\nAll right, after that we exit.\n\n74\n00:03:36.640 --> 00:03:39.510\nAnd when we exit,\nthat closes the container.\n\n75\n00:03:39.510 --> 00:03:41.470\nAnd I know I said earlier that\nit doesn't save the changes.\n\n76\n00:03:41.470 --> 00:03:43.966\nAnd that's not technically true.\n\n77\n00:03:43.966 --> 00:03:47.730\nIt saved the changes but\njust for this one container.\n\n78\n00:03:47.730 --> 00:03:51.020\nAnd this one container is no longer\nrunning so effectively it's gone, right?\n\n79\n00:03:51.020 --> 00:03:52.620\nBut it's not actually gone.\n\n80\n00:03:52.620 --> 00:03:58.910\nIf I do a docker ps -a, I can find\nthat container still sitting there.\n\n81\n00:03:58.910 --> 00:03:59.869\nHere it is, right?\n\n82\n00:03:59.869 --> 00:04:02.079\nAnd here is where I see\nthat kind of nickname and\n\n83\n00:04:02.079 --> 00:04:03.842\nthis one was called jovial murdock.\n\n84\n00:04:03.842 --> 00:04:06.195\n&gt;&gt; [LAUGH]\n&gt;&gt; It does the adjective noun for\n\n85\n00:04:06.195 --> 00:04:07.020\neverything.\n\n86\n00:04:07.020 --> 00:04:09.680\nSo you got grave newton and\nclever heisenberg and so on.\n\n87\n00:04:09.680 --> 00:04:11.860\nEach one is getting a nickname.\n\n88\n00:04:11.860 --> 00:04:14.840\nAnd you can actually modify these\nmachines based on their nickname.\n\n89\n00:04:14.840 --> 00:04:18.440\nSometimes it's easier to remember but\nI've got the id right on my screen so\n\n90\n00:04:18.440 --> 00:04:19.470\nthat's easier for me.\n\n91\n00:04:19.470 --> 00:04:21.060\n&gt;&gt; Good.\n&gt;&gt; I can see that it's exited and\n\n92\n00:04:21.060 --> 00:04:22.070\nI can see that it's sitting here.\n\n93\n00:04:22.070 --> 00:04:26.053\nAnd the last thing that was running was\n/bin/bash, right, cuz I did an interactive\n\n94\n00:04:26.053 --> 00:04:28.834\nterminal so that's what it's\ngot kind of fire it up for me.\n\n95\n00:04:28.834 --> 00:04:35.420\nBut I wanna take this id and I wanna\nconvert it into my own base image, right?\n\n96\n00:04:35.420 --> 00:04:39.026\nSo I can come in and say, docker commit.\n\n97\n00:04:39.026 --> 00:04:44.150\nDocker commit is how we save this and\nturn it into a base image.\n\n98\n00:04:44.150 --> 00:04:48.525\nSo right now when I look at my base image,\nI can say docker images and\n\n99\n00:04:48.525 --> 00:04:51.690\nI've got these default ones\nthat I got from docker.io.\n\n100\n00:04:51.690 --> 00:04:53.560\nI got a Ubuntu, CentOS, Debian.\n\n101\n00:04:53.560 --> 00:04:56.250\nI used the CentOS latest\nto build this one.\n\n102\n00:04:56.250 --> 00:04:58.586\nAnd I can say docker commit.\n\n103\n00:04:58.586 --> 00:05:02.910\nAnd then I can tell it a description\nif I want to assign one.\n\n104\n00:05:02.910 --> 00:05:06.099\nSo this is a CentOS Web Server.\n\n105\n00:05:06.099 --> 00:05:08.160\nRight, so that will be my description.\n\n106\n00:05:08.160 --> 00:05:09.670\nI can put an author if I want.\n\n107\n00:05:09.670 --> 00:05:11.520\nThese are optional but\nit's kind of nice to have them so\n\n108\n00:05:11.520 --> 00:05:13.852\nI'll put that I am the author.\n\n109\n00:05:13.852 --> 00:05:18.470\nAll right, and then I need to tell the\ncontainer id which fortunately I copied,\n\n110\n00:05:18.470 --> 00:05:19.980\nso I can paste it right in there.\n\n111\n00:05:19.980 --> 00:05:23.530\nSo there's the container id that\nI'm gonna use to build this image.\n\n112\n00:05:23.530 --> 00:05:28.310\nAnd then I need to give it an image name\nand I'm just going to call mine webserver.\n\n113\n00:05:28.310 --> 00:05:32.390\nRight, because that's what this is it's a\nCentOS image that's running a web server.\n\n114\n00:05:32.390 --> 00:05:33.800\nSo I'm gonna do that.\n\n115\n00:05:33.800 --> 00:05:37.870\nAnd when I run that,\nit's building a new base image.\n\n116\n00:05:37.870 --> 00:05:40.820\nAnd then I get the SHA256\nchecksum right there.\n\n117\n00:05:40.820 --> 00:05:44.330\nAnd if run docker images, in addition to\n\n118\n00:05:44.330 --> 00:05:49.490\nall the images that I pulled from docker\nio, I now have a new one right here.\n\n119\n00:05:49.490 --> 00:05:53.377\nI have an image called webserver and this\nis the latest version of it cuz I like\n\n120\n00:05:53.377 --> 00:05:55.401\nspend up new version this time goes on.\n\n121\n00:05:55.401 --> 00:05:59.500\nIt's got a new image id,\nand it's 340 megs in size,\n\n122\n00:05:59.500 --> 00:06:03.030\nit's bigger than all of the other guys.\n\n123\n00:06:03.030 --> 00:06:04.060\nWhy is that?\n\n124\n00:06:04.060 --> 00:06:04.838\nBecause I install software.\n\n125\n00:06:04.838 --> 00:06:06.445\n&gt;&gt; [LAUGH]\n&gt;&gt; I install Apache, and\n\n126\n00:06:06.445 --> 00:06:09.418\nphp, and all there dependent library so\nit made big grow, so\n\n127\n00:06:09.418 --> 00:06:12.117\nit's larger as you add more and\nmore data inside of it.\n\n128\n00:06:12.117 --> 00:06:17.781\nBut now I've got that base image and\nanytime I want to,\n\n129\n00:06:17.781 --> 00:06:23.076\nI can launch a new container\noff of this base image,\n\n130\n00:06:23.076 --> 00:06:26.908\nI can say docker run- it webserver.\n\n131\n00:06:26.908 --> 00:06:30.803\nAnd now I'm gonna launch a new\ncontainer based off of my image and\n\n132\n00:06:30.803 --> 00:06:34.195\nwhen that runs if I do like\na I'm going to install httpd,\n\n133\n00:06:34.195 --> 00:06:39.050\nI'll find that it' already installed and\nalready at the latest version.\n\n134\n00:06:39.050 --> 00:06:43.046\nIt's already setup the way that I want\nto and it's got exactly what I need.\n\n135\n00:06:43.046 --> 00:06:46.311\nSo when I launch that interactive shell,\nnow I'm not starting with just the basic\n\n136\n00:06:46.311 --> 00:06:49.980\nsystem anymore, now I\"m starting with\nthe modified image that we created.\n\n137\n00:06:49.980 --> 00:06:52.790\n&gt;&gt; Well, do we normally run\nthe containers interactively?\n\n138\n00:06:52.790 --> 00:06:53.600\n&gt;&gt; So we don't right?\n\n139\n00:06:53.600 --> 00:06:55.610\nSo now that I've got this\nthing set up as a web server,\n\n140\n00:06:55.610 --> 00:06:58.950\nI don't normally log back into\nthe terminal again ever really right?\n\n141\n00:06:58.950 --> 00:07:01.520\nSo from here on out, it's a web server.\n\n142\n00:07:01.520 --> 00:07:04.100\nAnd so I would just fire up Apache.\n\n143\n00:07:04.100 --> 00:07:06.990\nI would tell that to run as opposed\nto getting interactive like this.\n\n144\n00:07:06.990 --> 00:07:08.550\nSo let me show you how you would do that.\n\n145\n00:07:08.550 --> 00:07:13.495\nWe say docker run, and\ninstead of -it, right, which is i for\n\n146\n00:07:13.495 --> 00:07:17.966\ninteractive, t for a pseudo tty,\na virtual terminal,\n\n147\n00:07:17.966 --> 00:07:22.649\nI'm going to tell it docker run -d,\n-d means detached.\n\n148\n00:07:22.649 --> 00:07:24.927\nIn other words,\ndon't attached it to my user session,\n\n149\n00:07:24.927 --> 00:07:27.500\nI want you to run this container and\nstick it in the background.\n\n150\n00:07:27.500 --> 00:07:30.160\nIn my mind, I always think d for\ndemon like a service.\n\n151\n00:07:30.160 --> 00:07:31.160\n&gt;&gt; That's what I was thinking.\n\n152\n00:07:31.160 --> 00:07:32.510\n&gt;&gt; But it's actually detached, right?\n\n153\n00:07:32.510 --> 00:07:34.350\nSo it's detached from my console.\n\n154\n00:07:34.350 --> 00:07:39.220\nSo I'm gonna say docker run -d and\nthen I'm wanna run a web server.\n\n155\n00:07:39.220 --> 00:07:43.615\nSo I would say, I'm gonna give it\nthe image that I want to use which is\n\n156\n00:07:43.615 --> 00:07:49.270\nwebserver and then I need to tell\nit the command that I want to run.\n\n157\n00:07:49.270 --> 00:07:55.458\nAnd I want to run /user/sbin/httpd,\nall right.\n\n158\n00:07:55.458 --> 00:08:00.225\nSo I’m running that particular command and\nif you run httpd by itself,\n\n159\n00:08:00.225 --> 00:08:03.480\nit just runs and\nthen closes and that's it.\n\n160\n00:08:03.480 --> 00:08:10.330\nSo I need to tell it to\nrun as a FOREGROUND task.\n\n161\n00:08:10.330 --> 00:08:14.400\nAnd so Apache has this command\nline argument of -D, capital, and\n\n162\n00:08:14.400 --> 00:08:16.030\nthen FOREGROUND in all capital.\n\n163\n00:08:16.030 --> 00:08:18.550\nAnd that says,\nI want you to run not as a demon,\n\n164\n00:08:18.550 --> 00:08:21.210\nnot as a service in the background but\nrun as an application.\n\n165\n00:08:21.210 --> 00:08:23.520\nAnd run and stay running.\n\n166\n00:08:23.520 --> 00:08:26.833\nThat's gonna cause this container to\nlaunch and stay running, even though it's\n\n167\n00:08:26.833 --> 00:08:30.162\nin the background and not just immediately\nclose out like the other stuff, okay?\n\n168\n00:08:30.162 --> 00:08:34.670\nNow if I run this I'm gonna have\na little bit of a problem [LAUGH].\n\n169\n00:08:34.670 --> 00:08:37.604\n&gt;&gt; [LAUGH]\n&gt;&gt; My main problem is there's no network\n\n170\n00:08:37.604 --> 00:08:38.570\nconnectivity.\n\n171\n00:08:38.570 --> 00:08:40.850\nRemember how I said\nthe container has no firewall,\n\n172\n00:08:40.850 --> 00:08:44.680\nit doesn't need a firewall cuz it\nhas no network connectivity [LAUGH].\n\n173\n00:08:44.680 --> 00:08:47.270\nIt has some network connectivity\nobviously, I was able to install packages.\n\n174\n00:08:47.270 --> 00:08:49.030\n&gt;&gt; It's like it's an island.\n\n175\n00:08:49.030 --> 00:08:49.960\n&gt;&gt; It is.\n\n176\n00:08:49.960 --> 00:08:50.710\nIt's isolated.\n\n177\n00:08:50.710 --> 00:08:51.820\n&gt;&gt; Yeah.\n&gt;&gt; It's a container.\n\n178\n00:08:51.820 --> 00:08:53.560\nSo, I need to poke a hole in it.\n\n179\n00:08:53.560 --> 00:08:56.290\nAnd I need to allow\ntraffic to get in to it.\n\n180\n00:08:56.290 --> 00:08:59.088\nWell, Apache is gonna run on port 80.\n\n181\n00:08:59.088 --> 00:09:02.400\nI might already be using\nport 80 on my host.\n\n182\n00:09:02.400 --> 00:09:04.880\nAnd so, if I wanna open up\nport 80 to this machine,\n\n183\n00:09:04.880 --> 00:09:07.340\nI can by adding another little tag here.\n\n184\n00:09:07.340 --> 00:09:13.234\nSo, I'm gonna go back to the -d and\nI'll do a -p80:80, all right?\n\n185\n00:09:13.234 --> 00:09:19.230\nThat means port 80 on my host will be\nmapped to port 80 in the container.\n\n186\n00:09:19.230 --> 00:09:23.200\nSo, now web traffic coming in on port 80\nwill be redirected into this application.\n\n187\n00:09:23.200 --> 00:09:25.247\nRight, but\nif I'm already using port 80 on my own, so\n\n188\n00:09:25.247 --> 00:09:26.825\nI could actually map to a different thing.\n\n189\n00:09:26.825 --> 00:09:29.560\nI'm gonna map to 8080 like that, right?\n\n190\n00:09:29.560 --> 00:09:35.030\nSo port 8080 on my host is gonna mapped to\nport 80 inside of that virtual machine.\n\n191\n00:09:35.030 --> 00:09:37.810\nAnd so that's gonna create that\nconnectivity in between them.\n\n192\n00:09:37.810 --> 00:09:41.586\nAnd if I were to fire up\na web browser right now and\n\n193\n00:09:41.586 --> 00:09:46.690\nI were to browse to\nhttp://127.0.01:8080 and\n\n194\n00:09:46.690 --> 00:09:50.103\nI browse to that, site can't be reached.\n\n195\n00:09:50.103 --> 00:09:52.760\nThere's nobody listening on that port.\n\n196\n00:09:52.760 --> 00:09:57.194\nBut when I run this container,\nI'm gonna start listening on port 8080 and\n\n197\n00:09:57.194 --> 00:10:00.160\nanything I hear,\nI'm gonna send to the container.\n\n198\n00:10:00.160 --> 00:10:03.680\nAnd the container is running Apache now,\nso I should get my Apache test page.\n\n199\n00:10:03.680 --> 00:10:06.640\nNow, there is one more thing\nthat I like to assign here.\n\n200\n00:10:06.640 --> 00:10:10.920\nI'm terrible at remembering container ids\nbecause they're randomly generated and\n\n201\n00:10:10.920 --> 00:10:12.270\nthey're hard to remember.\n\n202\n00:10:12.270 --> 00:10:14.990\nI also hate the little dynamic\nnames that they generate.\n\n203\n00:10:14.990 --> 00:10:17.915\nThese you know weazy, walrus,\nor whatever, I don't want that.\n\n204\n00:10:17.915 --> 00:10:19.623\n&gt;&gt; [LAUGH]\n&gt;&gt; So I always assign a name\n\n205\n00:10:19.623 --> 00:10:21.490\nto a container when I launch it.\n\n206\n00:10:21.490 --> 00:10:23.970\nAnd unless this is like auto scaling and\nwe're doing thousands of them.\n\n207\n00:10:23.970 --> 00:10:26.250\nI don't get into the whole\nnaming business.\n\n208\n00:10:26.250 --> 00:10:29.290\nBut in my lab environments, I always\ngive them a name so I can remember.\n\n209\n00:10:29.290 --> 00:10:31.260\nThis is a web server, right?\n\n210\n00:10:31.260 --> 00:10:38.744\nSo I'm gonna come in here and I'm just\ngonna add --name=webserver01, okay?\n\n211\n00:10:38.744 --> 00:10:40.620\nRight after that I say webserver.\n\n212\n00:10:40.620 --> 00:10:43.570\nWebserver here is the image\nthat I'm using and\n\n213\n00:10:43.570 --> 00:10:46.950\nthe container that I'm making\nis gonna be named webserver01.\n\n214\n00:10:46.950 --> 00:10:51.380\nCuz I might do webserver02, and 03, and\n04, and I can keep spinning those up.\n\n215\n00:10:51.380 --> 00:10:53.350\nThis command line is getting pretty long.\n\n216\n00:10:53.350 --> 00:10:57.110\nAnd the reason is,\nI'm giving the container a job,\n\n217\n00:10:57.110 --> 00:11:00.640\nI'm giving it something to do and\nthat takes a little more input, right?\n\n218\n00:11:00.640 --> 00:11:05.950\nBut once I get the job, it can run,\nit's gonna lunch the container and\n\n219\n00:11:05.950 --> 00:11:08.790\nthen it's gonna be running\nin the background, right?\n\n220\n00:11:08.790 --> 00:11:12.090\nI used my web server image so\nwe already have Apache.\n\n221\n00:11:12.090 --> 00:11:16.121\nIt ran, it launched Apache and\nnow it's listing on port 80.\n\n222\n00:11:16.121 --> 00:11:19.566\nAnd my docker service is\nremapping my port 8080\n\n223\n00:11:19.566 --> 00:11:23.200\nto connect to port 80\ninside of this instance.\n\n224\n00:11:23.200 --> 00:11:26.621\nAnd at that point, it should work [LAUGH].\n\n225\n00:11:26.621 --> 00:11:31.130\nI should be able to go to my web browser\nand browse to port 8080 on my own machine.\n\n226\n00:11:31.130 --> 00:11:32.820\nAnd I should be able to get to that.\n\n227\n00:11:32.820 --> 00:11:34.770\nLet me make sure I put in the protocol.\n\n228\n00:11:36.590 --> 00:11:39.390\nActually, I'm making a mistake here.\n\n229\n00:11:39.390 --> 00:11:42.200\nIt's like [LAUGH] the movie Inception,\nright, Zach?\n\n230\n00:11:42.200 --> 00:11:45.061\nWhere you got a dream and\nyou're in another dream and another dream.\n\n231\n00:11:45.061 --> 00:11:47.540\n&gt;&gt; Yeah.\n&gt;&gt; So, I'm on my laptop.\n\n232\n00:11:47.540 --> 00:11:50.210\nI'm remoted into a server and\nthen I'm connected into a containers.\n\n233\n00:11:50.210 --> 00:11:50.930\nSo, I'm three layers deep.\n\n234\n00:11:50.930 --> 00:11:51.670\n&gt;&gt; That's right.\n\n235\n00:11:51.670 --> 00:11:52.680\n&gt;&gt; I came all the way out.\n\n236\n00:11:52.680 --> 00:11:53.917\nI'm trying to browse my own laptop.\n\n237\n00:11:53.917 --> 00:11:55.923\n&gt;&gt; [LAUGH]\n&gt;&gt; I'm not running the container on\n\n238\n00:11:55.923 --> 00:11:56.450\nmy laptop.\n\n239\n00:11:56.450 --> 00:11:58.640\nSo, I actually need to browse\nthe IP of that server.\n\n240\n00:11:58.640 --> 00:11:59.870\nSo I need to do http:// and\n\n241\n00:11:59.870 --> 00:12:04.530\nthen I'm gonna do the IP of\nthe server that I'm working on.\n\n242\n00:12:04.530 --> 00:12:06.940\nAnd let me zoom in on that a bit so\nyou guys can see.\n\n243\n00:12:06.940 --> 00:12:10.010\nSo I'm gonna connect into the IP of\nthe server that I'm working on and\n\n244\n00:12:10.010 --> 00:12:10.620\nthen port 8080.\n\n245\n00:12:10.620 --> 00:12:13.610\nAnd the server's gonna mapped that\nto port 80 in the container and\n\n246\n00:12:13.610 --> 00:12:16.910\nwhat I should get when that runs,\nthere we go.\n\n247\n00:12:16.910 --> 00:12:18.251\nI get the Apache test page, right?\n\n248\n00:12:18.251 --> 00:12:19.385\n&gt;&gt; Ye hey.\n\n249\n00:12:19.385 --> 00:12:23.090\n&gt;&gt; Now, Apache is not running on that\nserver at least I don't think it is.\n\n250\n00:12:23.090 --> 00:12:25.194\nIf I browse to port 80,\nyeah, I don't get it.\n\n251\n00:12:25.194 --> 00:12:30.008\nI'm not running Apache on the server,\nI'm running Apache in the container and so\n\n252\n00:12:30.008 --> 00:12:32.193\nwhen I browse to that and connect up.\n\n253\n00:12:32.193 --> 00:12:35.675\nI'm seeing it from that container,\nrunning the way that it's supposed to if I\n\n254\n00:12:35.675 --> 00:12:38.460\njust looked at the right\nmachine not at my own laptop.\n\n255\n00:12:38.460 --> 00:12:41.580\nSo, that container's now running in\nthe background and it's serving it's job.\n\n256\n00:12:41.580 --> 00:12:44.050\nIt's doing exactly what I want it to do.\n\n257\n00:12:44.050 --> 00:12:46.140\nAnd if I were to kill that container,\n\n258\n00:12:46.140 --> 00:12:50.140\nif I were to take it offline, I would see\nwhere that's gonna stop responding, right?\n\n259\n00:12:50.140 --> 00:12:57.753\nSo for example, since I have that\ncontainer id, I can always do a docker ps.\n\n260\n00:12:57.753 --> 00:13:01.473\nAnd unlike before, where I had to do a ps\ndash a to show all the closed containers,\n\n261\n00:13:01.473 --> 00:13:04.610\nI can do just a docker ps cuz\nI see it's up and running.\n\n262\n00:13:04.610 --> 00:13:09.090\nAnd it's got a name I can use or\nI can just grab that id right there.\n\n263\n00:13:09.090 --> 00:13:13.240\nAnd I can say docker attach, and\nI can try and connect to it.\n\n264\n00:13:13.240 --> 00:13:14.503\nNow, if I try and attach to it,\n\n265\n00:13:14.503 --> 00:13:16.989\nI'm gonna have a little problem\nbecause I gave it a command.\n\n266\n00:13:16.989 --> 00:13:17.899\nI told it to run.\n\n267\n00:13:17.899 --> 00:13:19.993\nI didn't tell it to open up a terminal,\nright?\n\n268\n00:13:19.993 --> 00:13:23.850\nSo when I go to connect to that,\nI might not get a shell and\n\n269\n00:13:23.850 --> 00:13:27.556\nI don't because now I'm\nactually talking to httpd.\n\n270\n00:13:27.556 --> 00:13:28.135\n&gt;&gt; Right.\n\n271\n00:13:28.135 --> 00:13:30.635\n&gt;&gt; And I have to be careful cuz if\nI send it like a break command or\n\n272\n00:13:30.635 --> 00:13:32.760\nwhatever I could kill the web browser.\n\n273\n00:13:32.760 --> 00:13:34.430\nAnd keep the container running [LAUGH] and\nso\n\n274\n00:13:34.430 --> 00:13:36.700\nyou can end up messing things\nup a good bit when you do this.\n\n275\n00:13:36.700 --> 00:13:38.090\n&gt;&gt; It is like Inception, Don.\n\n276\n00:13:38.090 --> 00:13:41.200\n&gt;&gt; Yeah [LAUGH] but\nat this point, I've killed httpd.\n\n277\n00:13:41.200 --> 00:13:44.050\nAnd so once it died,\nthe whole container died.\n\n278\n00:13:44.050 --> 00:13:47.270\nThe whole container's offline, and I\nshould know that because if I go back here\n\n279\n00:13:47.270 --> 00:13:50.810\nand try and get to that page again,\nnow I get the page can't be reached.\n\n280\n00:13:50.810 --> 00:13:54.690\nSo I know that everything is kinda\nworking the way that I want it.\n\n281\n00:13:54.690 --> 00:13:58.450\nAnd I can always come right back in and\nrestart that one if I want and\n\n282\n00:13:58.450 --> 00:14:01.110\nget that container up and\nrunning again and use it.\n\n283\n00:14:01.110 --> 00:14:04.420\nBut at this point, I built an image,\nit's got what I want.\n\n284\n00:14:04.420 --> 00:14:05.940\nI can start it, it runs in the background.\n\n285\n00:14:05.940 --> 00:14:08.030\nNow we see exactly how those\ncontainers can be used in\n\n286\n00:14:08.030 --> 00:14:09.230\nmore of a production environment.\n\n287\n00:14:09.230 --> 00:14:11.660\n&gt;&gt; And Don as you pointed out,\nwe could have numerous containers.\n\n288\n00:14:11.660 --> 00:14:14.220\nSo how do we clean up\nthe containers we no longer need?\n\n289\n00:14:14.220 --> 00:14:16.270\n&gt;&gt; All right, yeah,\nthings get messy, right?\n\n290\n00:14:16.270 --> 00:14:19.840\nSo right now if I do a docker ps,\nI don't have any running containers.\n\n291\n00:14:19.840 --> 00:14:23.850\nAll my containers are closed and\nif I do a docker ps -a though,\n\n292\n00:14:23.850 --> 00:14:28.520\nI can see that between the last show and\nthis show I've created, what was that?\n\n293\n00:14:28.520 --> 00:14:29.790\nAbout 10 containers?\n\n294\n00:14:29.790 --> 00:14:31.317\nAnd it's just gonna keep getting worst.\n\n295\n00:14:31.317 --> 00:14:34.700\n[LAUGH] The more containers I make,\nthe more of a mess I'm gonna leave behind.\n\n296\n00:14:34.700 --> 00:14:36.928\nSo we need to get rid of these\nwhen we're done with them.\n\n297\n00:14:36.928 --> 00:14:39.115\nIf the container was running right, so\n\n298\n00:14:39.115 --> 00:14:42.400\nlet's say I actually wanted\nto stop that webserver01.\n\n299\n00:14:42.400 --> 00:14:47.870\nI didn't really stop it a very graceful\nway, so I attached to it and then I used\n\n300\n00:14:47.870 --> 00:14:51.560\ncontrol c to break out of Apache which,\nthat not the most graceful way to do that.\n\n301\n00:14:51.560 --> 00:14:55.370\nWhat I should have done was that, let me\nspin up another one and I'll show you.\n\n302\n00:14:55.370 --> 00:14:59.270\nI'm going to launch another one I'll\nmake this websever02 like that.\n\n303\n00:14:59.270 --> 00:15:00.240\nSo I'm lunching webserver02.\n\n304\n00:15:00.240 --> 00:15:04.510\nIf I do it docker ps,\nI can see it's up and running right there.\n\n305\n00:15:04.510 --> 00:15:08.005\nAnd what I can do is I can just say,\ndocker stop and\n\n306\n00:15:08.005 --> 00:15:10.660\nthen I can specify the name or the id.\n\n307\n00:15:10.660 --> 00:15:14.260\nSo I'll do the name of webserver02 and\nit is just gonna stop it.\n\n308\n00:15:14.260 --> 00:15:15.974\nSo now, I wanna run a docker ps.\n\n309\n00:15:15.974 --> 00:15:20.630\nIt's no longer running, okay?\n\n310\n00:15:20.630 --> 00:15:24.030\nSo, just stop one running,\nyou just say docker stop.\n\n311\n00:15:24.030 --> 00:15:27.170\nAnd then if you want to delete it,\nif I know I'm not gonna need it anymore.\n\n312\n00:15:27.170 --> 00:15:28.329\n[INAUDIBLE] Docker ps -a.\n\n313\n00:15:28.329 --> 00:15:30.240\nIt's still sitting there on my disk,\nright?\n\n314\n00:15:30.240 --> 00:15:36.450\nSo I can find webserver02 which\nunfortunately, here, this guy over here.\n\n315\n00:15:36.450 --> 00:15:42.420\nSo I can take it and get its id or again\nuse its name which ever one I want to use,\n\n316\n00:15:42.420 --> 00:15:45.020\nif you aren't providing names\nyou'll have to use the id.\n\n317\n00:15:45.020 --> 00:15:50.428\nAnd then I can say, docker rm and\nthen the id or the name of it, right?\n\n318\n00:15:50.428 --> 00:15:52.119\nAnd that's whats actually gonna remove it.\n\n319\n00:15:52.119 --> 00:15:56.434\nRemember, we did docker RMI in the last\nepisode to remove images we weren't using.\n\n320\n00:15:56.434 --> 00:16:00.370\nDocker RM just removes containers, right?\n\n321\n00:16:00.370 --> 00:16:04.297\nNow the only challenge I've got here is\nthat when I do that it's just removing one\n\n322\n00:16:04.297 --> 00:16:04.945\ncontainer.\n\n323\n00:16:04.945 --> 00:16:06.123\nWhat if we have a thousand?\n\n324\n00:16:06.123 --> 00:16:08.222\nWhat if we have a big auto scaling event?\n\n325\n00:16:08.222 --> 00:16:08.788\n&gt;&gt; Yeah that's what I was thinking.\n\n326\n00:16:08.788 --> 00:16:11.130\n&gt;&gt; Yeah and you got a ton.\n\n327\n00:16:11.130 --> 00:16:13.080\nIt becomes a bit of\na nightmare to clean this up.\n\n328\n00:16:13.080 --> 00:16:18.170\nSo we can do a little UNIX\ncommand line kungfu here and\n\n329\n00:16:18.170 --> 00:16:22.350\ntell it to take our list of containers and\nfeed it into the stop command.\n\n330\n00:16:22.350 --> 00:16:26.690\nSo for example, I keep running\ndocker ps -a like that, right?\n\n331\n00:16:26.690 --> 00:16:28.800\nAnd that gives me a list\nof all the containers.\n\n332\n00:16:28.800 --> 00:16:31.720\nIf you add a q to that,\n\n333\n00:16:31.720 --> 00:16:36.180\nso -aq, see how it just gives me\nthe list of ids and that's it, right?\n\n334\n00:16:36.180 --> 00:16:38.860\nSo, it's more of a quiet output or\na simple query.\n\n335\n00:16:38.860 --> 00:16:40.850\nIt gives me just the ids.\n\n336\n00:16:40.850 --> 00:16:43.340\nSo, I can take the output\nof that command and\n\n337\n00:16:43.340 --> 00:16:47.800\nI can feed that into\nthe docker rm command.\n\n338\n00:16:47.800 --> 00:16:51.187\nSo the way I do that is I say,\ndocker rm and\n\n339\n00:16:51.187 --> 00:16:58.390\nthen $ open parenthesis followed by\nthe other command close parenthesis.\n\n340\n00:16:58.390 --> 00:17:00.930\nBash will do what's called expanding.\n\n341\n00:17:00.930 --> 00:17:04.910\nIt will expand that dockerps-hq\ninto the individual terms.\n\n342\n00:17:04.910 --> 00:17:09.170\nAnd then it will run docker rm followed\nby each of the individual identifies.\n\n343\n00:17:09.170 --> 00:17:10.550\nAnd that will kind of\nwipe all those out and\n\n344\n00:17:10.550 --> 00:17:12.010\nget them out of there if I\nwant to get rid of them all.\n\n345\n00:17:12.010 --> 00:17:14.180\nYou can do the same thing\nwith a stop command.\n\n346\n00:17:14.180 --> 00:17:16.770\nI can say docker stop and\n\n347\n00:17:16.770 --> 00:17:19.780\nthen I would leave the a off\nthere which is be docker ps -q.\n\n348\n00:17:19.780 --> 00:17:21.740\nShow me the running ones and stop them.\n\n349\n00:17:21.740 --> 00:17:25.140\nSo that's a quick way to go in and stop\nevery container which I don't have any so\n\n350\n00:17:25.140 --> 00:17:27.174\nit's [INAUDIBLE] happy with.\n\n351\n00:17:27.174 --> 00:17:31.288\nBut then if I make that the aq and\n\n352\n00:17:31.288 --> 00:17:35.092\nI do docker rm and I run that.\n\n353\n00:17:35.092 --> 00:17:38.990\nThere it goes, removing each one of the\nones that I had that were up and running.\n\n354\n00:17:38.990 --> 00:17:41.050\nAnd I can say docker ps -a and\n\n355\n00:17:41.050 --> 00:17:45.370\nI've got nothing, right,\ndocker ps got nothing there.\n\n356\n00:17:45.370 --> 00:17:47.238\nI've stopped them all,\nI've removed the images.\n\n357\n00:17:47.238 --> 00:17:52.365\nI've removed the containers,\nimportant differentiation, right,\n\n358\n00:17:52.365 --> 00:17:57.840\ncuz if I do docker images, I still\nhave my webserver image right there.\n\n359\n00:17:57.840 --> 00:18:00.100\nRight, a container's a throwaway item.\n\n360\n00:18:00.100 --> 00:18:02.490\nAs long as I have my image,\nI can easily recreate it.\n\n361\n00:18:02.490 --> 00:18:03.370\nSo I don't care if I delete it.\n\n362\n00:18:03.370 --> 00:18:04.520\nEven if I accidentally delete it.\n\n363\n00:18:04.520 --> 00:18:07.003\nIt might inconvenience\nmy end users [LAUGH] but\n\n364\n00:18:07.003 --> 00:18:10.214\nI can spin up another container\nin a heartbeat as I need it.\n\n365\n00:18:10.214 --> 00:18:14.310\nSo real easy to bring that back up get\nit kind of fired up and get in there.\n\n366\n00:18:14.310 --> 00:18:16.810\nAnd that's basically the way that I do it.\n\n367\n00:18:16.810 --> 00:18:21.310\nAs you're learning docker, you'll find\nthat you create tons of these containers.\n\n368\n00:18:21.310 --> 00:18:23.900\nAnd if you forget about them\nthey do consume disk space.\n\n369\n00:18:23.900 --> 00:18:27.366\nAnd then they make the outputs of the\ncommands a little more annoying cuz there\n\n370\n00:18:27.366 --> 00:18:28.765\nis so much data in there.\n\n371\n00:18:28.765 --> 00:18:30.835\nSo this is a good way of\nquickly kinda clean that up.\n\n372\n00:18:30.835 --> 00:18:32.325\n&gt;&gt; But\nif you don't get with something to do and\n\n373\n00:18:32.325 --> 00:18:34.880\nyou close out of them then they close,\nthey stop, right?\n\n374\n00:18:34.880 --> 00:18:37.625\n&gt;&gt; Yep, they close but\nthey stay there as an existing entity one,\n\n375\n00:18:37.625 --> 00:18:40.272\nit's not running and doing, yeah.\n\n376\n00:18:40.272 --> 00:18:42.972\n&gt;&gt; So Linux is a docker container,\nthis has been episode two.\n\n377\n00:18:42.972 --> 00:18:44.772\nMake sure you see episode one.\n\n378\n00:18:44.772 --> 00:18:45.997\nFinal thoughts my friend?\n\n379\n00:18:45.997 --> 00:18:48.882\n&gt;&gt; Dockers really cool,\nit's a big buzz word.\n\n380\n00:18:48.882 --> 00:18:52.032\nPersonally I like LXE better,\nthe LXE containers.\n\n381\n00:18:52.032 --> 00:18:55.632\nBut docker is the one that's kind\nof winning the pr war right now.\n\n382\n00:18:55.632 --> 00:18:59.282\nSo if you're working in\na cloud based environment,\n\n383\n00:18:59.282 --> 00:19:01.472\nexpect people to come to you about docker.\n\n384\n00:19:01.472 --> 00:19:04.850\nSo the more you learn about it,\nthe better off you'll be especially,\n\n385\n00:19:04.850 --> 00:19:08.840\nif you're starting to shift into a DevOps\ntype role, docker is really commonplace.\n\n386\n00:19:08.840 --> 00:19:11.248\nSo expect to support it\non people's workstations,\n\n387\n00:19:11.248 --> 00:19:14.695\nas well as supporting it in a server\ninfrastructure to be able to bring these\n\n388\n00:19:14.695 --> 00:19:17.068\nthings up because it's kind\nof used in both areas.\n\n389\n00:19:17.068 --> 00:19:18.409\nReally cool stuff you\nneed to mess around with.\n\n390\n00:19:18.409 --> 00:19:20.260\n&gt;&gt; And you did a great job as usual, Don.\n\n391\n00:19:20.260 --> 00:19:22.849\nLinux as a docker container part one and\npart two, watch them both.\n\n392\n00:19:22.849 --> 00:19:26.555\nAnd watch every single episode of Linux\nin the cloud because it is good for\n\n393\n00:19:26.555 --> 00:19:27.231\nyour brain.\n\n394\n00:19:27.231 --> 00:19:29.556\n[LAUGH] And thank you for\nwatching ITProTV.\n\n395\n00:19:29.556 --> 00:19:33.725\nRemember a good IT pro is always learning,\nI am Zach Memos.\n\n396\n00:19:33.725 --> 00:19:34.465\n&gt;&gt; And I'm Don Pezet.\n\n397\n00:19:34.465 --> 00:19:36.404\n&gt;&gt; And we will see you again very soon.\n\n398\n00:19:36.404 --> 00:19:43.143\n[MUSIC]\n\n399\n00:19:43.143 --> 00:19:46.091\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "231879020"
        }
      ],
      "title": "Docker Containers"
    }
  ],
  "url": "linuxthe-cloud",
  "vLab": false
}
