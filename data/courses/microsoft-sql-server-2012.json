{
  "description": "The Administering Microsoft SQL Server 2012 Databases exam is designed to be the entry point for Systems Administrators into the world of databases. The course focuses on areas that are required knowledge for anyone responsible for the creation and maintenance of Windows servers running Microsoft SQL 2012. The topics covered range from installing SQL Server to backing up and restoring databases.",
  "descriptionMD": "",
  "length": "52740",
  "name": "Microsoft SQL Server 2012 - 70-462",
  "practiceExam": true,
  "subtitle": "Administering Microsoft SQL Server 2012 Databases",
  "tagUrl": "microsoft-technical",
  "topics": [
    {
      "episodes": [
        {
          "description": "The Administering Microsoft SQL Server 2012 Databases exam is designed to be the entry point for Systems Administrators into the world of databases. The course focuses on areas that are required knowledge for anyone responsible for the creation and maintenance of Windows servers running Microsoft SQL 2012. The topics covered range from installing SQL Server to backing up and restoring databases.",
          "length": "508",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/001-Intro-to-Microsoft-SQL.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/001-Intro-to-Microsoft-SQL-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/001-Intro-to-Microsoft-SQL-sm.jpg",
          "title": "Intro to Microsoft SQL",
          "transcript": "1\n00:00:00,025 --> 00:00:08,034\n[SOUND].\n\n2\n00:00:08,034 --> 00:00:11,585\nThis ITProTV series is designed\nto introduce the viewer to\n\n3\n00:00:11,585 --> 00:00:13,620\nMicrosoft SQL Server 2012.\n\n4\n00:00:13,620 --> 00:00:18,320\nMore importantly, it's designed to\nintroduce a system admin, to SQL Server.\n\n5\n00:00:18,320 --> 00:00:20,870\nNow a lot of people are familiar\nwith Microsoft SQL.\n\n6\n00:00:20,870 --> 00:00:23,280\nIt's one of the most common\ndatabase servers in the world,\n\n7\n00:00:23,280 --> 00:00:26,540\nyou see it very frequently used\nin a lot of organizations.\n\n8\n00:00:26,540 --> 00:00:30,860\nBut, as a Systems Administrator,\nyou're not a database administrator.\n\n9\n00:00:30,860 --> 00:00:34,150\nYou don't necessarily know\nthe inner workings of a database.\n\n10\n00:00:34,150 --> 00:00:37,080\nBut you might be tasked with\nthe responsibilities of maintaining, or\n\n11\n00:00:37,080 --> 00:00:39,590\neven installing and\ncreating that database server.\n\n12\n00:00:39,590 --> 00:00:41,980\nIt's a very common thing to fall into.\n\n13\n00:00:41,980 --> 00:00:45,600\nAs a result, Microsoft created\nan exam that was centered around,\n\n14\n00:00:45,600 --> 00:00:50,120\nnot the programming side of Microsoft SQL,\nbut the supporting side of it.\n\n15\n00:00:50,120 --> 00:00:52,430\nAnd that's what this show\nis going to be covering.\n\n16\n00:00:52,430 --> 00:00:55,510\nThe exam is the 70-462 exam and\n\n17\n00:00:55,510 --> 00:00:59,320\nthe official title is Administering\nMicrosoft SQL Server 2012 Databases.\n\n18\n00:00:59,320 --> 00:01:03,300\nNow there is a sister course associated\nwith this one that does get a little\n\n19\n00:01:03,300 --> 00:01:06,860\nmore onto the, I don't wanna call it the\ndeveloper side cuz you're not programming,\n\n20\n00:01:06,860 --> 00:01:10,920\nbut dealing with the SQL queries and\nall that other stuff.\n\n21\n00:01:10,920 --> 00:01:13,230\nSo there is one that gets\na little more heavier into that.\n\n22\n00:01:13,230 --> 00:01:16,930\nBut this one,\nis specifically focused to systems admins,\n\n23\n00:01:16,930 --> 00:01:21,120\nthe people who are supporting Windows\nServer, who are putting the hardware\n\n24\n00:01:21,120 --> 00:01:24,130\nservers in the rack and\ngetting this infrastructure built up.\n\n25\n00:01:24,130 --> 00:01:26,880\nThey may need to bring up\ndatabase servers also.\n\n26\n00:01:26,880 --> 00:01:30,102\nNow you may have an entire staff of\nprogrammers who are ready to jump in there\n\n27\n00:01:30,102 --> 00:01:31,599\nand start using those databases.\n\n28\n00:01:31,599 --> 00:01:35,059\nBut they don't understand how to\nbackup and restore the database or\n\n29\n00:01:35,059 --> 00:01:39,060\nhow to do performance tuning of\nthe database, things like that.\n\n30\n00:01:39,060 --> 00:01:41,070\nThey deal on the development side.\n\n31\n00:01:41,070 --> 00:01:43,580\nWe as System Admins,\ndeal on the server side.\n\n32\n00:01:43,580 --> 00:01:46,585\nAnd so that's what we tackle for\nthis certification.\n\n33\n00:01:46,585 --> 00:01:49,895\nNow, if you look at the requirements,\nI'll just kinda scroll down here a bit.\n\n34\n00:01:49,895 --> 00:01:52,525\nYou'll see it starts out real basic\nwith things like installing and\n\n35\n00:01:52,525 --> 00:01:53,765\nconfiguring, right?\n\n36\n00:01:53,765 --> 00:01:55,904\nWe need to get a SQL Server up and\nrunning so\n\n37\n00:01:55,904 --> 00:01:58,855\nwe can start to create databases on it and\nwork with data.\n\n38\n00:01:58,855 --> 00:02:02,540\nSo that's exactly where it begins,\njust the initial configuration.\n\n39\n00:02:02,540 --> 00:02:05,370\nThen, actually creating the databases.\n\n40\n00:02:05,370 --> 00:02:06,510\nSomebody's gotta make it.\n\n41\n00:02:06,510 --> 00:02:10,610\nAnd maybe you're getting a specific spec\nsheet from your development team saying\n\n42\n00:02:10,610 --> 00:02:11,750\nhere's what we need.\n\n43\n00:02:11,750 --> 00:02:12,990\nBut often times you don't get that.\n\n44\n00:02:12,990 --> 00:02:15,095\nThey just say, hey,\nwe need a database server.\n\n45\n00:02:15,095 --> 00:02:19,505\nSo, we bring one up, we create the initial\ndatabases, and we get the system up.\n\n46\n00:02:19,505 --> 00:02:21,921\nNow we'll also take a look at clustering,\ntoo.\n\n47\n00:02:21,921 --> 00:02:24,879\nIf this is a database that needs\nto be up as often as possible,\n\n48\n00:02:24,879 --> 00:02:29,171\nlike high availability, well, we're gonna\nneed to take some extra precautions and so\n\n49\n00:02:29,171 --> 00:02:30,805\nwe'll see that in maintaining.\n\n50\n00:02:32,240 --> 00:02:34,030\nIt then goes on optimizing, right?\n\n51\n00:02:34,030 --> 00:02:36,540\nHow do you make the database run better?\n\n52\n00:02:36,540 --> 00:02:41,910\nAnybody can bring up a database server,\nbut the more that database begins to grow,\n\n53\n00:02:41,910 --> 00:02:44,880\nthe slower and\nslower the system is going to become.\n\n54\n00:02:44,880 --> 00:02:46,670\nAnd everybody's data is\na little bit different.\n\n55\n00:02:46,670 --> 00:02:48,540\nSo we take a look at some of the tools and\n\n56\n00:02:48,540 --> 00:02:51,540\ntechniques that are available\nto tweak that data,\n\n57\n00:02:51,540 --> 00:02:55,510\nto change the way that SQL Server\nperforms and get it running a lot faster.\n\n58\n00:02:55,510 --> 00:02:57,600\nAnd I've got some stories\nI'll tell in those episodes.\n\n59\n00:02:57,600 --> 00:03:01,540\nYou can really make a big difference\nwith just a few mouse clicks, so\n\n60\n00:03:01,540 --> 00:03:03,400\nit's some really neat\nstuff that's in there.\n\n61\n00:03:04,880 --> 00:03:07,020\nOnce the server's up and\nrunning, we're done right?\n\n62\n00:03:07,020 --> 00:03:08,030\nWe get to walk away?\n\n63\n00:03:08,030 --> 00:03:09,510\nWell, not quite.\n\n64\n00:03:09,510 --> 00:03:11,340\nA lot of times we need\nto manage the data and\n\n65\n00:03:11,340 --> 00:03:13,240\nthat's what the next section jumps into.\n\n66\n00:03:13,240 --> 00:03:17,125\nEspecially from the standpoint\nof backup and restore, right?\n\n67\n00:03:17,125 --> 00:03:22,110\nIt's very, very easy to accidentally wipe\nall of the data out of a database, right?\n\n68\n00:03:22,110 --> 00:03:24,198\nIf you give somebody the access\nto write to the database they\n\n69\n00:03:24,198 --> 00:03:25,600\ncouldn't really do that.\n\n70\n00:03:25,600 --> 00:03:28,950\nSo we need to make sure that we've\ngot backups, reliable backups, right?\n\n71\n00:03:28,950 --> 00:03:32,740\nIt's easy for us to restore and\nget our systems backup and going.\n\n72\n00:03:32,740 --> 00:03:36,930\nAnd then this little section right here\nis probably the most important one in\n\n73\n00:03:36,930 --> 00:03:40,740\nthe entire exam objective set.\n\n74\n00:03:40,740 --> 00:03:43,910\nManaging or implementing and\nmaintaining indexes, all right?\n\n75\n00:03:43,910 --> 00:03:47,400\nIndexes will change the performance\nprofile of your server.\n\n76\n00:03:47,400 --> 00:03:50,860\nThey will make your server\nconsiderably faster.\n\n77\n00:03:50,860 --> 00:03:54,941\nBut, indexes are completely built around\nthe types of queries people are running.\n\n78\n00:03:54,941 --> 00:03:57,402\nSo we have to understand\nthe queries people are running, and\n\n79\n00:03:57,402 --> 00:03:59,050\nthen build the indexes appropriately.\n\n80\n00:03:59,050 --> 00:04:02,790\nThere is no one-size-fits-all\nindex solution out there.\n\n81\n00:04:02,790 --> 00:04:06,820\nSo we'll take a look at how to analyze\nyour database, see how it's being used,\n\n82\n00:04:06,820 --> 00:04:09,370\nand build the appropriate index\nsystem to make it run faster.\n\n83\n00:04:11,450 --> 00:04:12,830\nAfter that, we've got security, right?\n\n84\n00:04:12,830 --> 00:04:14,600\nWe don't wanna forget about that.\n\n85\n00:04:14,600 --> 00:04:17,810\nSome of the biggest visibility attacks\nthat have happened in the last ten\n\n86\n00:04:17,810 --> 00:04:20,420\nyears have all been focused on SQL.\n\n87\n00:04:20,420 --> 00:04:22,830\nWell, I shouldn't say it that way, right?\n\n88\n00:04:22,830 --> 00:04:25,640\nWhen we say SQL, that means Microsoft SQL.\n\n89\n00:04:25,640 --> 00:04:29,870\nWhen we say S-Q-L, well that's the\nstandard query language that's used across\n\n90\n00:04:29,870 --> 00:04:33,304\nnumerous products like Oracle,\nMySQL, and so on.\n\n91\n00:04:33,304 --> 00:04:35,960\nAnd, SQL injection attacks\n\n92\n00:04:35,960 --> 00:04:38,870\nare some of the biggest ones that have\nhappened over the last ten years.\n\n93\n00:04:38,870 --> 00:04:40,832\nMany of which went against\nMicrosoft servers, but\n\n94\n00:04:40,832 --> 00:04:43,570\nmany of which went against the Oracle and\nthe other guys too.\n\n95\n00:04:43,570 --> 00:04:47,240\nSo, how do we secure our system to\nhelp prevent from things like that?\n\n96\n00:04:47,240 --> 00:04:49,863\nWell, a lot of that is prevented\non the developer's side,\n\n97\n00:04:49,863 --> 00:04:51,234\nthey can take care of it there.\n\n98\n00:04:51,234 --> 00:04:54,475\nBut there are things we can do on\nthe back end with databases permissions,\n\n99\n00:04:54,475 --> 00:04:55,321\nlog ins and roles.\n\n100\n00:04:55,321 --> 00:04:59,902\nAnd other things to eliminate that\naccidental activity where people start to\n\n101\n00:04:59,902 --> 00:05:03,931\ninject commands and to do things\nthat we don't want to have happen.\n\n102\n00:05:03,931 --> 00:05:04,840\nAll right.\nAnd\n\n103\n00:05:04,840 --> 00:05:08,620\nthen the last part of the exam objectives\nis implementing high availability.\n\n104\n00:05:08,620 --> 00:05:13,110\nWe talk about it a little bit in\nthe maintaining databases section.\n\n105\n00:05:13,110 --> 00:05:15,966\nBut then we get into it down here\nas far as setting up a mirror,\n\n106\n00:05:15,966 --> 00:05:20,120\ngetting Always On configured, setting up\nfailover, and getting that put into place.\n\n107\n00:05:20,120 --> 00:05:22,870\nSo really good stuff to\nkeep the system online.\n\n108\n00:05:22,870 --> 00:05:26,620\nThese are the tasks right here\nthat an average system admin that\n\n109\n00:05:26,620 --> 00:05:30,280\nsupports a network that involves SQL\nservers are going to be expected to know.\n\n110\n00:05:30,280 --> 00:05:32,180\nSo it's a great set of knowledge.\n\n111\n00:05:32,180 --> 00:05:36,380\nFor a Microsoft exam this is one of\nthe few ones where I look at it and\n\n112\n00:05:36,380 --> 00:05:39,467\nI'm like man,\nthis is all stuff will actually use.\n\n113\n00:05:39,467 --> 00:05:43,040\nA lot of times there's at least one\nmodule in there where they put some fluff\n\n114\n00:05:43,040 --> 00:05:46,400\ncloud service or whatever,\nthat's more of a marketing module.\n\n115\n00:05:46,400 --> 00:05:50,118\nBut in this one, it's really\nskills that you'll use, all right.\n\n116\n00:05:50,118 --> 00:05:53,580\nNow, if you're looking to go a little\nmore onto the development side,\n\n117\n00:05:53,580 --> 00:05:55,613\nif you're looking to write SQL queries.\n\n118\n00:05:55,613 --> 00:06:00,074\nIf you wanna learn how to create\ntables and set up foreign keys and\n\n119\n00:06:00,074 --> 00:06:05,385\nrelationships like that, well,\nthe 70-462 doesn't do it.\n\n120\n00:06:05,385 --> 00:06:06,505\nBut if you're looking to work for\n\n121\n00:06:06,505 --> 00:06:10,675\nyour MCSA SQL Server,\nthere's other exams involved.\n\n122\n00:06:10,675 --> 00:06:14,840\nThe 462 is just one of them,\nthat's the one that really is designed for\n\n123\n00:06:14,840 --> 00:06:15,811\nsystem administrators.\n\n124\n00:06:15,811 --> 00:06:21,171\nBut notice there's the 461, Querying\nMicrosoft SQL Server 2012, all right.\n\n125\n00:06:21,171 --> 00:06:23,380\nThat is writing query statements.\n\n126\n00:06:23,380 --> 00:06:25,680\nYou actually start to learn\nthe standard query language,\n\n127\n00:06:25,680 --> 00:06:28,160\nhow to interact with\nthe data on the server.\n\n128\n00:06:28,160 --> 00:06:31,590\nHow to put data in the database,\nhow to get data out of the database.\n\n129\n00:06:31,590 --> 00:06:34,921\nA regular system admin doesn't really\nneed to know how to do that, but\n\n130\n00:06:34,921 --> 00:06:38,560\nsomebody who's actually DBA,\nDatabase Administrator, would.\n\n131\n00:06:39,880 --> 00:06:44,310\nAnd then, implementing a data warehouse\nwith Microsoft SQL Server 2012.\n\n132\n00:06:44,310 --> 00:06:47,540\nThat's where you start learning\nabout how to design your tables,\n\n133\n00:06:47,540 --> 00:06:50,590\nhow to work with the data\ninside of the database,\n\n134\n00:06:50,590 --> 00:06:54,590\nhow to create views and reports,\nhow to deal with integration services.\n\n135\n00:06:54,590 --> 00:06:58,020\nAll these extra things that a normal\nsystem admin is not going to work with,\n\n136\n00:06:58,020 --> 00:07:00,830\nbut instead, a DBA would, all right.\n\n137\n00:07:00,830 --> 00:07:05,490\nSo the full certification, the MCSA\nSQL Server, is really designed for\n\n138\n00:07:05,490 --> 00:07:10,800\nsomebody who's operating in that DBA role,\nwho is a database administrator.\n\n139\n00:07:10,800 --> 00:07:15,750\nBut this one that we're doing right here,\n70-462, works really for\n\n140\n00:07:15,750 --> 00:07:19,375\nanybody who has the responsibility\nof supporting a server running SQL.\n\n141\n00:07:19,375 --> 00:07:23,850\nSo I think this is one of the greater\nexams, one of the greatest set of topics.\n\n142\n00:07:23,850 --> 00:07:25,490\nEven if you don't take the exam,\n\n143\n00:07:25,490 --> 00:07:28,310\nthe stuff we talk about on\nthis show is really useful.\n\n144\n00:07:28,310 --> 00:07:30,690\nIt will help you operate\nyour database environment.\n\n145\n00:07:30,690 --> 00:07:35,190\nAnd those databases, for a lot of people,\nif you have a database server,\n\n146\n00:07:35,190 --> 00:07:40,710\nit's usually the core of your business,\nand so losing that, right, is a big deal.\n\n147\n00:07:40,710 --> 00:07:43,460\nIt could take your business offline for\nhours,\n\n148\n00:07:43,460 --> 00:07:46,390\ndays, who knows how long to\nget a system back online.\n\n149\n00:07:46,390 --> 00:07:48,570\nSo having it set up right\nfrom the beginning and\n\n150\n00:07:48,570 --> 00:07:52,130\nhaving a good backup strategy are two key\npieces we wanna make sure we have covered.\n\n151\n00:07:53,710 --> 00:07:56,530\nAll right, now our show content\nwill match up with the 70-462 exam,\n\n152\n00:07:56,530 --> 00:07:59,680\nso we're gonna cover all the stuff\nthat's on there like we normally do,\n\n153\n00:07:59,680 --> 00:08:01,584\nyou'll be prepared for that.\n\n154\n00:08:01,584 --> 00:08:03,670\nIf you wanna go on to do the other ones,\n\n155\n00:08:03,670 --> 00:08:06,660\nwe don't have plans in our schedule\nright now to tackle those.\n\n156\n00:08:06,660 --> 00:08:10,000\nBut things change over time, so\nby the time you're watching this, well,\n\n157\n00:08:10,000 --> 00:08:11,740\nnot if you're watching it live I guess,\nbut\n\n158\n00:08:11,740 --> 00:08:15,170\nif you're watching this down the road, we\nmay have already recorded the other ones.\n\n159\n00:08:15,170 --> 00:08:19,424\nSo check out the library and\nsee if they're there.\n\n160\n00:08:19,424 --> 00:08:26,650\nAll right, well that's pretty\nmuch my overview of this one.\n\n161\n00:08:26,650 --> 00:08:27,525\nI'll see you in the show.\n\n162\n00:08:27,525 --> 00:08:28,444\n[SOUND]\n\n",
          "vimeoId": "105279754"
        }
      ],
      "title": "Overview of Microsoft SQL Server 2012 (70-462)"
    },
    {
      "episodes": [
        {
          "description": "In this episode Don discusses the minimum requirements for installing SQL. Then he walks through the process of installing SQL while examining each of the installation examples. Finally he shows some of the basic options that will be configured for most new deployments.",
          "length": "5461",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/002-Install-and-Configure-SQL.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/002-Install-and-Configure-SQL-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/002-Install-and-Configure-SQL-sm.jpg",
          "title": "Install and Configure SQL",
          "transcript": "1\n00:00:00,002 --> 00:00:10,002\n[MUSIC]\n\n2\n00:00:33,732 --> 00:00:36,595\nGood morning, good afternoon and\ngood evening and\n\n3\n00:00:36,595 --> 00:00:39,135\nwelcome back to another\nepisode of ITProTV.\n\n4\n00:00:39,135 --> 00:00:42,176\nI'm your host Don Pezet\nback with another episode.\n\n5\n00:00:42,176 --> 00:00:43,140\nActually, wait a minute.\n\n6\n00:00:43,140 --> 00:00:46,070\nWe're not back with another episode,\nthis is an all new episode.\n\n7\n00:00:46,070 --> 00:00:51,292\nWe are kicking off our new\nMicrosoft SQL Server 2012 show.\n\n8\n00:00:51,292 --> 00:00:53,545\nSo exciting,\nI always like starting new stuff.\n\n9\n00:00:53,545 --> 00:00:55,844\nNow you might be asking yourself,\nwait a minute, Don.\n\n10\n00:00:55,844 --> 00:00:58,924\nYou're not gonna fool me,\nI know the SQL Server 2014 is out,\n\n11\n00:00:58,924 --> 00:01:00,970\nwhy aren't you doing that one?\n\n12\n00:01:00,970 --> 00:01:03,040\nAnd there's a few reasons.\n\n13\n00:01:03,040 --> 00:01:08,260\nReason number one is that SQL Server 2014\nis out, just came out not to long ago.\n\n14\n00:01:08,260 --> 00:01:09,902\nI think maybe three or four months ago.\n\n15\n00:01:09,902 --> 00:01:11,435\nIt hasn't been out very long.\n\n16\n00:01:11,435 --> 00:01:16,310\nAnd in the database world,\nyour data is very sensitive.\n\n17\n00:01:16,310 --> 00:01:20,852\nAnd as a result, people don't jump to\nthe latest database server that comes out.\n\n18\n00:01:20,852 --> 00:01:22,920\nYeah, they don't jump out\nthe moment it comes out.\n\n19\n00:01:22,920 --> 00:01:26,636\nIt'll be a couple of years before we\nstart seeing 2014 in wide deployment.\n\n20\n00:01:26,636 --> 00:01:31,907\nSo most environments today are actually\nstill running SQL Server 2008,\n\n21\n00:01:31,907 --> 00:01:36,620\neven SQL Server 2012 is not as\nwidespread as 2008 right now.\n\n22\n00:01:36,620 --> 00:01:41,437\nSo we're always a little bit behind in\nthe implementation world on SQL Server\n\n23\n00:01:41,437 --> 00:01:45,078\nversions and it all stems from\nhow sensitive that data is.\n\n24\n00:01:45,078 --> 00:01:47,291\nYou need to know your database and\n\n25\n00:01:47,291 --> 00:01:52,041\nthe data inside of it will be rock\nsolid before you move to a new version.\n\n26\n00:01:52,041 --> 00:01:56,725\nThe other reason is because this data\nis so sensitive and because it is so\n\n27\n00:01:56,725 --> 00:02:01,253\nimportant, when you move from one\nversion of SQL Server to another,\n\n28\n00:02:01,253 --> 00:02:05,880\nyou need a high level of compatibility and\nso Microsoft ensures that.\n\n29\n00:02:05,880 --> 00:02:10,813\nThe last major change that SQL Server\nsaw was way back in SQL Server 2005 and\n\n30\n00:02:10,813 --> 00:02:15,014\nit was really just a change to\nthe user administration interface.\n\n31\n00:02:15,014 --> 00:02:19,670\nPrior to that SQL 2000, SQL 7,\nthat's where I started was SQL 7.\n\n32\n00:02:19,670 --> 00:02:24,935\nThose older products really work\nthe same as SQL 2014 does today,\n\n33\n00:02:24,935 --> 00:02:30,033\nbecause it's all built around SQL,\nthe Standard Query Language.\n\n34\n00:02:30,033 --> 00:02:31,165\nLet's talk about that for\n\n35\n00:02:31,165 --> 00:02:33,850\na minute before we dive into\nanything specific to Microsoft.\n\n36\n00:02:35,000 --> 00:02:39,505\nDatabases are just really,\nreally common today.\n\n37\n00:02:39,505 --> 00:02:43,540\nIt's very rare that you find a company\nthat doesn't use some sort of database.\n\n38\n00:02:43,540 --> 00:02:47,802\nThink of it like as like in the 70s,\na lot of companies had mainframes.\n\n39\n00:02:47,802 --> 00:02:50,150\nWell, mainframes really\nwere just database servers.\n\n40\n00:02:50,150 --> 00:02:53,102\nVery specialized,\nvery purpose build databases, but\n\n41\n00:02:53,102 --> 00:02:54,998\nthat's basically what they were.\n\n42\n00:02:54,998 --> 00:02:57,130\nYou put data in and you got data out.\n\n43\n00:02:57,130 --> 00:03:00,394\nThe problem with mainframes,\nincredibly expensive and\n\n44\n00:03:00,394 --> 00:03:02,299\nincredibly complex to support.\n\n45\n00:03:02,299 --> 00:03:07,847\nSo when the idea of simple software-based\ndatabases started to grow in the 80s,\n\n46\n00:03:07,847 --> 00:03:12,522\nyou saw where people said, what we\nneed is a single way to interact with\n\n47\n00:03:12,522 --> 00:03:17,500\nthese databases, so that we're not\nstuck tied to an IBM mainframe.\n\n48\n00:03:17,500 --> 00:03:21,099\nThat's what really happened is most\ncompanies got trapped in the IBM mainframe\n\n49\n00:03:21,099 --> 00:03:22,666\nworld and they couldn't get out.\n\n50\n00:03:22,666 --> 00:03:25,850\nAnd IBM, they make good stuff,\nbut they charge for it.\n\n51\n00:03:25,850 --> 00:03:31,031\nIt's pretty expensive, so several other\nvendors started getting into this market.\n\n52\n00:03:31,031 --> 00:03:37,379\nYou saw DB2, which ended up getting\nbought by IBM, you saw, oh, Oracle.\n\n53\n00:03:37,379 --> 00:03:42,373\nOracle is a huge company in the database\nworld these days and so they develop their\n\n54\n00:03:42,373 --> 00:03:47,470\nOracle series servers and they do\na great job and Microsoft got involved.\n\n55\n00:03:47,470 --> 00:03:51,410\nMicrosoft SQL Server is actually\none of their oldest products.\n\n56\n00:03:51,410 --> 00:03:55,573\nMicrosoft SQL Server 1.0 came out well\nbefore many of the products that you're\n\n57\n00:03:55,573 --> 00:03:58,246\nfamiliar with,\nincluding Windows server itself.\n\n58\n00:03:58,246 --> 00:03:59,820\nIt was out before then.\n\n59\n00:03:59,820 --> 00:04:03,720\nSo it's a very mature,\nvery long running program.\n\n60\n00:04:03,720 --> 00:04:06,662\nAnd what they did is they\ndesigned a database that\n\n61\n00:04:06,662 --> 00:04:11,090\nused a query language that was common,\nStandard Query Language.\n\n62\n00:04:11,090 --> 00:04:14,670\nYou can write a query in\nMicrosoft SQL Server and\n\n63\n00:04:14,670 --> 00:04:18,620\nuse that same exact query\non an Oracle server or\n\n64\n00:04:18,620 --> 00:04:23,070\non a MySQL server or MariaDB or\nanything that uses SQL.\n\n65\n00:04:24,080 --> 00:04:25,280\nSo when I say that,\n\n66\n00:04:25,280 --> 00:04:30,400\nwhen I say SQL, I'm talking about\nthat query language, the standard.\n\n67\n00:04:30,400 --> 00:04:33,622\nWhen I say SQL,\nthat's the Microsoft product.\n\n68\n00:04:33,622 --> 00:04:35,940\nMicrosoft calls,\nthere's Microsoft SQL Server.\n\n69\n00:04:35,940 --> 00:04:36,792\nNobody else does that.\n\n70\n00:04:36,792 --> 00:04:40,480\nNobody else says, SQL,\nit's kinda the Microsoft world.\n\n71\n00:04:40,480 --> 00:04:42,961\nSo just aware that little\nterminology difference.\n\n72\n00:04:42,961 --> 00:04:47,120\nIt's not gonna make any difference in this\nshow, where we focus on Microsoft stuff.\n\n73\n00:04:47,120 --> 00:04:49,130\nBut when you start dealing with Oracle or\n\n74\n00:04:49,130 --> 00:04:51,950\nwhatever, it starts to get\na little bit confusing.\n\n75\n00:04:51,950 --> 00:04:53,156\nSo just be aware of that.\n\n76\n00:04:53,156 --> 00:04:58,020\nNow that query language allows us to put\ndata into a database and get data back\n\n77\n00:04:58,020 --> 00:05:03,120\nout again, data doesn't do you any\ngood unless you get it back out again.\n\n78\n00:05:03,120 --> 00:05:07,243\nSo that's what SQL is really designed to\ndo is give us that way to put data in\n\n79\n00:05:07,243 --> 00:05:07,785\nand out.\n\n80\n00:05:07,785 --> 00:05:13,542\nNow if that's common and\nif it's the same between Microsoft SQL and\n\n81\n00:05:13,542 --> 00:05:16,980\nMySQL and Oracle 10G or whatever.\n\n82\n00:05:16,980 --> 00:05:20,020\nIf it's the same,\nwhy have all these different products?\n\n83\n00:05:20,020 --> 00:05:21,770\nDoes it matter who we buy?\n\n84\n00:05:21,770 --> 00:05:26,243\nWell, it's not the query language that\nmakes the difference, it's the add-ons.\n\n85\n00:05:26,243 --> 00:05:29,460\nThe other things the vendors\ndo to make it better.\n\n86\n00:05:29,460 --> 00:05:31,090\nSo for example, Oracle.\n\n87\n00:05:31,090 --> 00:05:34,396\nOracle focuses on making their databases,\n\n88\n00:05:34,396 --> 00:05:38,693\nwhere they can be the largest possible and\nstill be fast.\n\n89\n00:05:38,693 --> 00:05:40,730\nThat's what they're focused on.\n\n90\n00:05:40,730 --> 00:05:42,359\nMicrosoft on the other hand,\n\n91\n00:05:42,359 --> 00:05:46,604\nfocuses on making theirs more approachable\nto medium and large businesses.\n\n92\n00:05:46,604 --> 00:05:51,660\nThat the infrastructure is very simple\nto support, they're easy to work with.\n\n93\n00:05:51,660 --> 00:05:56,516\nNow when you get to a large database,\nthat's several terabytes in size,\n\n94\n00:05:56,516 --> 00:06:00,608\nan Oracle Server will beat\na Microsoft SQL Server hands down.\n\n95\n00:06:00,608 --> 00:06:04,704\nBut it takes a lot more resources and\neffort to get that Oracle Server setup and\n\n96\n00:06:04,704 --> 00:06:06,670\nrunning than it does Microsoft SQL.\n\n97\n00:06:06,670 --> 00:06:09,484\nSo, each of them have\ntheir different purposes.\n\n98\n00:06:09,484 --> 00:06:12,857\nThere's not a one database server\nis the winner type scenario,\n\n99\n00:06:12,857 --> 00:06:16,030\nyou choose the right one for\nyour environment.\n\n100\n00:06:16,030 --> 00:06:19,360\nIf you're just getting started with\ndatabases or if you have a small or medium\n\n101\n00:06:19,360 --> 00:06:23,680\ncompany, where you don't have a dedicated\ndatabase administrator, a DBA, then\n\n102\n00:06:23,680 --> 00:06:27,770\nMicrosoft SQL is one of the easiest to get\nup and running in a short amount of time.\n\n103\n00:06:29,228 --> 00:06:30,576\nIf you wanna get it fired up,\n\n104\n00:06:30,576 --> 00:06:34,347\nyou just make sure that you have a server\nthat needs the hardware requirements,\n\n105\n00:06:34,347 --> 00:06:37,574\ndoes need to be running Windows and\nthen you install SQL on top of it.\n\n106\n00:06:37,574 --> 00:06:41,830\nAnd the nice part there is Windows, you've\ngot a GUI, a graphical user interface.\n\n107\n00:06:41,830 --> 00:06:45,179\nAnd then you throw SQL on there,\nwhere we have the SQL management studio,\n\n108\n00:06:45,179 --> 00:06:47,408\nwhich again,\na nice graphical user interface.\n\n109\n00:06:47,408 --> 00:06:51,510\nSo everything is fully GUI driven,\nbut it doesn't have to be.\n\n110\n00:06:51,510 --> 00:06:54,399\nWe can actually do what's\ncalled a core services install,\n\n111\n00:06:54,399 --> 00:06:57,301\nwhere the Windows server is\njust giving you a command line.\n\n112\n00:06:57,301 --> 00:07:01,890\nYou basically get that and you install\nSQL on it and you use the PowerShell.\n\n113\n00:07:01,890 --> 00:07:05,563\nWith PowerShell, you can do everything\ninside of Microsoft SQL Server.\n\n114\n00:07:05,563 --> 00:07:07,780\nSo you don't have to have the GUI.\n\n115\n00:07:07,780 --> 00:07:10,081\nBut for\nsomebody just getting into the business or\n\n116\n00:07:10,081 --> 00:07:13,881\njust getting into working with databases,\nit's kinda nice to have that crutch.\n\n117\n00:07:13,881 --> 00:07:17,300\nAt least little while, you'll learn\nover time to get away from that.\n\n118\n00:07:17,300 --> 00:07:21,175\nIn our first episode, in this episode,\nwe are gonna see installing SQL and\n\n119\n00:07:21,175 --> 00:07:23,342\nwe are gonna do it entirely through a GUI.\n\n120\n00:07:23,342 --> 00:07:27,434\nBut for the rest of the series as we go\nthrough doing things, we are gonna see how\n\n121\n00:07:27,434 --> 00:07:31,880\nto do them via the GUI and we are going\nto see how to do them via the PowerShell.\n\n122\n00:07:31,880 --> 00:07:35,543\nOn the exam, you'll see both,\nso you need to know both ways.\n\n123\n00:07:35,543 --> 00:07:40,670\nIn real life land, what you'll find is for\none time tasks, you'll use the GUI.\n\n124\n00:07:40,670 --> 00:07:41,708\nIts just easier.\n\n125\n00:07:41,708 --> 00:07:45,080\nYou go into the GUI, you find your\noptions, you set them and you're done.\n\n126\n00:07:45,080 --> 00:07:49,913\nBut if you're doing bulk activities or if\nyou're trying to schedule activities that\n\n127\n00:07:49,913 --> 00:07:54,959\nhappened at a certain time, you'll use the\nPowerShell, you'll use the command line.\n\n128\n00:07:54,959 --> 00:07:57,400\n[INAUDIBLE] is cuz it makes\nit easier to automate.\n\n129\n00:07:57,400 --> 00:08:02,166\nSo we definitely need to be\naware on both sides of that.\n\n130\n00:08:02,166 --> 00:08:05,823\nNow, our first set of objectives\nthat we're gonna be dealing with\n\n131\n00:08:05,823 --> 00:08:07,333\nis basically installing.\n\n132\n00:08:07,333 --> 00:08:09,521\nAnd let me, oh, actually you know\nwhat before I jump into that.\n\n133\n00:08:09,521 --> 00:08:10,792\nLet me do one more thing.\n\n134\n00:08:10,792 --> 00:08:13,170\nI started talking about compatibility.\n\n135\n00:08:13,170 --> 00:08:17,046\nThere is full compatibility for\nyour databases between really,\n\n136\n00:08:17,046 --> 00:08:20,860\nevery version of Microsoft SQL Server\nover the last 15 years.\n\n137\n00:08:20,860 --> 00:08:26,664\nSo you can actually detach a database from\none server that's running SQL 2005 and\n\n138\n00:08:26,664 --> 00:08:31,830\nyou can attach it to a SQL 2012 server and\nit'll start up just fine.\n\n139\n00:08:31,830 --> 00:08:35,613\nSo you can move your databases between,\nit makes things really easy, but\n\n140\n00:08:35,613 --> 00:08:39,470\nit also shows you that level of\ncompatibility we have between the systems.\n\n141\n00:08:39,470 --> 00:08:44,588\nEverything that we learn in this show\nthat focuses on SQL Server 2012,\n\n142\n00:08:44,588 --> 00:08:46,956\nyou can do in SQL Server 2014.\n\n143\n00:08:46,956 --> 00:08:48,690\nIn fact, everything that we learn here,\n\n144\n00:08:48,690 --> 00:08:51,970\nyou can do in SQL Server 2008 with\nthe exception of some of the clustering.\n\n145\n00:08:51,970 --> 00:08:55,698\nSome of the clustering is a little\ndifferent under 2008 than it is under\n\n146\n00:08:55,698 --> 00:08:59,424\n2012, but as far as installing SQL Server,\ncreating the databases,\n\n147\n00:08:59,424 --> 00:09:03,448\ndoing the back-ups, doing the restores,\ndoing your other management tasks,\n\n148\n00:09:03,448 --> 00:09:04,598\nthat's all the same.\n\n149\n00:09:04,598 --> 00:09:08,530\nSo even if you're running SQL 2005,\nthat stuff is the same.\n\n150\n00:09:08,530 --> 00:09:11,389\nIt makes it really easy\nto move between versions.\n\n151\n00:09:11,389 --> 00:09:15,598\nIf you go to Microsoft's website today,\nthey've updated everything to reflect\n\n152\n00:09:15,598 --> 00:09:19,270\nSQL Server 2014,\nsee how it's showing that SQL Server 2014.\n\n153\n00:09:19,270 --> 00:09:23,073\nBut if you float your mouse up here and\nyou kinda look at the title of the page,\n\n154\n00:09:23,073 --> 00:09:26,283\nyou see how it says,\nExplore SQL Server 2012-2014 and\n\n155\n00:09:26,283 --> 00:09:29,330\nthat's because they're really\nbeing marketed together.\n\n156\n00:09:29,330 --> 00:09:34,754\nA lot of people are buying 2014\nlicenses and then installing 2012.\n\n157\n00:09:34,754 --> 00:09:37,531\nWhen you buy a license from Microsoft,\nit's backwards compatible with\n\n158\n00:09:37,531 --> 00:09:40,100\nthe previous versions, so\nyou can install the older ones.\n\n159\n00:09:40,100 --> 00:09:44,432\nAnd we'll see some compatibility\ntechniques during installing that we can\n\n160\n00:09:44,432 --> 00:09:48,096\nuse to kind of help with migrations and\nupgrades and all of that.\n\n161\n00:09:48,096 --> 00:09:51,010\nSo the objectives for this one.\n\n162\n00:09:51,010 --> 00:09:52,102\nLet me just bring up my show notes.\n\n163\n00:09:52,102 --> 00:09:52,995\nWhere did I put those?\n\n164\n00:09:52,995 --> 00:09:54,156\nHere we go.\n\n165\n00:09:54,156 --> 00:09:57,734\nWe're gonna start off with installing and\nbefore we install, a lot of\n\n166\n00:09:57,734 --> 00:10:02,270\npeople just wanna pop that disk in and\nhit setup and start running through it.\n\n167\n00:10:02,270 --> 00:10:03,686\nBut before we do the install,\n\n168\n00:10:03,686 --> 00:10:06,359\nthere's a couple of things\nthat we need to think about.\n\n169\n00:10:06,359 --> 00:10:09,196\nThe first thing we need to\nthink about is whether or\n\n170\n00:10:09,196 --> 00:10:13,760\nnot we have the hardware necessary\nto run Microsoft SQL Server.\n\n171\n00:10:13,760 --> 00:10:17,100\nThe requirements for\nSQL are actually really, really low.\n\n172\n00:10:17,100 --> 00:10:20,087\nIt does not take a beefy\nmachine to run SQL.\n\n173\n00:10:20,087 --> 00:10:23,868\nAnd in fact, when people are learning\nthe database, or even developers that\n\n174\n00:10:23,868 --> 00:10:27,960\nare practicing or experimenting will\nnormally run SQL right on our own desktop.\n\n175\n00:10:27,960 --> 00:10:31,263\nYou just install it right on your laptop\nor whatever and you kinda work with it and\n\n176\n00:10:31,263 --> 00:10:32,808\nget a feel for how the product works.\n\n177\n00:10:32,808 --> 00:10:34,870\nSo the requirements are really low.\n\n178\n00:10:34,870 --> 00:10:39,722\nThere are differences though, between\nwhether you're going to run the 32-bit\n\n179\n00:10:39,722 --> 00:10:42,157\nversion of SQL or the 64-bit version.\n\n180\n00:10:42,157 --> 00:10:45,460\nNow why bother with the two versions?\n\n181\n00:10:45,460 --> 00:10:50,657\nMicrosoft has been pushing people to go\n64-bit, but they still make that 32-bit\n\n182\n00:10:50,657 --> 00:10:55,373\nfor backwards capability reasons, but\nwhy would I pick one versus the other?\n\n183\n00:10:55,373 --> 00:11:00,540\nThe main difference between the two, as\nfar as we're concerned with SQL is memory.\n\n184\n00:11:00,540 --> 00:11:06,321\nWhen you install Microsoft SQL Server,\nit will take as much RAM as you give it.\n\n185\n00:11:06,321 --> 00:11:11,160\nIt will try and use the RAM of your\nserver to it's fullest capabilities.\n\n186\n00:11:11,160 --> 00:11:13,978\nThat means the more memory, the better.\n\n187\n00:11:13,978 --> 00:11:18,498\nWell, if you're running a 32-bit\nversion of Microsoft SQL Server,\n\n188\n00:11:18,498 --> 00:11:21,180\nit will cap itself at 3 gigs of RAM.\n\n189\n00:11:21,180 --> 00:11:24,021\nSo it won't be able to use\nanymore that 3 gigs of RAM,\n\n190\n00:11:24,021 --> 00:11:27,305\nyour server might have 8 gigs or\n16 gigs of RAM in there, but\n\n191\n00:11:27,305 --> 00:11:30,362\nthe 32-bit version of SQL\nwill only use 3 gigs of RAM.\n\n192\n00:11:30,362 --> 00:11:34,460\nBeyond that, it hits its memory addressing\nlimit and it can't address anymore.\n\n193\n00:11:35,510 --> 00:11:40,131\nSo on a server that has less than 3\ngigs of RAM, we don't worry about that.\n\n194\n00:11:40,131 --> 00:11:42,950\nMaybe that's what we want, we can\nwrite the 32-bit version, just fine.\n\n195\n00:11:44,250 --> 00:11:47,669\nBut if you want more memory than that,\nwhich we oftentimes will,\n\n196\n00:11:47,669 --> 00:11:49,543\nthen you'll need to go 64-bit.\n\n197\n00:11:49,543 --> 00:11:52,641\nAnd Microsoft's recommendation is\nthat in production environments,\n\n198\n00:11:52,641 --> 00:11:55,190\nyou should be running the 64-bit\nversion of SQL Server.\n\n199\n00:11:56,420 --> 00:11:59,434\nBut I mention it here, because there is\na 32-bit version that's out there, so\n\n200\n00:11:59,434 --> 00:12:00,585\nyou do need to be aware of that.\n\n201\n00:12:00,585 --> 00:12:02,227\nThe other thing is,\n\n202\n00:12:02,227 --> 00:12:08,170\nyou can install the 32-bit version\nof SQL on top of a 64-bit OS.\n\n203\n00:12:08,170 --> 00:12:12,163\nSo, your host OS might be 64-bit,\nit might have 32 gigs of RAM.\n\n204\n00:12:12,163 --> 00:12:14,897\nBut because you're running\nthe 32-bit version of SQL,\n\n205\n00:12:14,897 --> 00:12:17,360\nyou won't be able to\ntake advantage of that.\n\n206\n00:12:17,360 --> 00:12:19,534\nSo definitely,\nbe aware of that hardware difference.\n\n207\n00:12:19,534 --> 00:12:24,071\nYou want to have physical CPUs that\nsupport the 64-bit architecture and\n\n208\n00:12:24,071 --> 00:12:27,527\nyou need to run the 64-bit\nversion of windows server,\n\n209\n00:12:27,527 --> 00:12:31,230\nif you wanna run\nthe 64-bit version of SQL.\n\n210\n00:12:31,230 --> 00:12:34,676\nSo 3 things have to fall into place\nif we want to run the 64 bit version.\n\n211\n00:12:34,676 --> 00:12:40,350\n64-bit hardware, your CPU,\n64 bit host OS and 64-bit SQL.\n\n212\n00:12:41,890 --> 00:12:44,715\nIf you're going 32-bit,\nyou don't care about any of that.\n\n213\n00:12:44,715 --> 00:12:47,698\nNow on a 32-bit system,\nthey recommend a one gigahertz or\n\n214\n00:12:47,698 --> 00:12:50,050\nfaster processor single core.\n\n215\n00:12:50,050 --> 00:12:55,500\nOn a 64-bit, it's 1.4 gigahertz, but\nthe actual recommended is 2 gigahertz.\n\n216\n00:12:55,500 --> 00:12:57,440\n2 gigahertz CPU recommended.\n\n217\n00:12:57,440 --> 00:12:59,126\nNow these are some really low numbers.\n\n218\n00:12:59,126 --> 00:13:00,973\nIf you go and buy a system today,\n\n219\n00:13:00,973 --> 00:13:05,500\nI don't even think you can buy a one core\nsystem anymore, a single CPU system.\n\n220\n00:13:06,530 --> 00:13:09,386\nMost of us are getting dual core or\nquad core systems,\n\n221\n00:13:09,386 --> 00:13:12,240\nyou might get hyperthreading,\nyou might have a six or\n\n222\n00:13:12,240 --> 00:13:15,234\neight core system with\nmultiple physical processors.\n\n223\n00:13:15,234 --> 00:13:16,895\nThat's all very, very common.\n\n224\n00:13:16,895 --> 00:13:18,867\nSQL can take advantage of all of that.\n\n225\n00:13:18,867 --> 00:13:22,245\nSo be aware of that difference\nas you go and shop for that.\n\n226\n00:13:22,245 --> 00:13:23,859\nBut if you're running on older systems,\n\n227\n00:13:23,859 --> 00:13:26,595\nyou're trying to support embedded\nhardware, something like that.\n\n228\n00:13:26,595 --> 00:13:29,287\nThese lower specs may be important to you.\n\n229\n00:13:29,287 --> 00:13:33,724\nAlso, keep in mind that these numbers are\nreally for a SQL Server with no database.\n\n230\n00:13:33,724 --> 00:13:36,727\nThis is really just talking\nabout the SQL Server software.\n\n231\n00:13:36,727 --> 00:13:38,443\nOnce you start adding databases to it,\n\n232\n00:13:38,443 --> 00:13:40,946\nthe databases are going to\nhave their own requirements.\n\n233\n00:13:40,946 --> 00:13:45,677\nWhile on the CPU side,\nSQL is actually not very CPU intensive.\n\n234\n00:13:45,677 --> 00:13:48,795\nThe majority of the work\nthat SQL does is in RAM.\n\n235\n00:13:48,795 --> 00:13:52,980\nSo the more memory you have,\nthe better SQL will perform.\n\n236\n00:13:53,990 --> 00:13:55,279\nThe minimum requirement for\n\n237\n00:13:55,279 --> 00:13:57,917\nSQL there is 1 gig of RAM,\nyou've got to have a gig of RAM.\n\n238\n00:13:57,917 --> 00:14:00,539\nAgain, I don't know if you can buy\na system with less than a gig of RAM\n\n239\n00:14:00,539 --> 00:14:01,970\nthese days.\n\n240\n00:14:01,970 --> 00:14:04,782\nIf you're running\nSQL Server Express Edition,\n\n241\n00:14:04,782 --> 00:14:07,189\nthat's a special version of SQL Server.\n\n242\n00:14:07,189 --> 00:14:11,349\nIt only needs 512 megs of RAM and\nit actually don't need quite as much, but\n\n243\n00:14:11,349 --> 00:14:14,613\n1 gig is the minimum requirement for\nevery other version and\n\n244\n00:14:14,613 --> 00:14:17,050\nMicrosoft really recommends 4 gigs of RAM.\n\n245\n00:14:18,310 --> 00:14:20,099\nNotice their recommended 4 gigs of RAM,\n\n246\n00:14:20,099 --> 00:14:22,662\nwhat about the 32-bit versions\nthat can't support it.\n\n247\n00:14:22,662 --> 00:14:26,738\nWell, the idea is that your host OS will\nbe using at least a gig of RAM leaving\n\n248\n00:14:26,738 --> 00:14:27,620\nthree for SQL.\n\n249\n00:14:27,620 --> 00:14:32,140\nSo 4 gigs is the minimum recommendation,\nbut not the minimum requirement.\n\n250\n00:14:32,140 --> 00:14:33,854\nLittle difference there.\n\n251\n00:14:33,854 --> 00:14:39,210\nNow there are different versions of SQL,\nI'll talk about those in a minute.\n\n252\n00:14:39,210 --> 00:14:42,202\nWe have like our enterprise and\nstandard and so on.\n\n253\n00:14:42,202 --> 00:14:45,880\nBut as far as their requirements,\nthey're pretty much identical.\n\n254\n00:14:47,640 --> 00:14:48,576\nNow that's the hardware side.\n\n255\n00:14:48,576 --> 00:14:51,480\nSo, I've gotta make sure that my\nphysical system can support it.\n\n256\n00:14:51,480 --> 00:14:53,813\nAfter that, we've got our software side.\n\n257\n00:14:53,813 --> 00:14:57,920\nAnd on the software side, SQL Server\n2012 is actually pretty flexible.\n\n258\n00:14:57,920 --> 00:15:00,395\nIt can run on top of Windows Server 2012.\n\n259\n00:15:00,395 --> 00:15:03,043\nIt can also run on top\nof Windows Server 2008.\n\n260\n00:15:03,043 --> 00:15:06,399\nA lot of people think that the SQL\nversions are in lockstep with the host OS,\n\n261\n00:15:06,399 --> 00:15:07,810\nbut they're not.\n\n262\n00:15:07,810 --> 00:15:12,080\nYou can run SQL 2012 on top\nof Windows Server 2008 and\n\n263\n00:15:12,080 --> 00:15:16,170\nthe reason they do that is\nto make migrations easy.\n\n264\n00:15:16,170 --> 00:15:19,170\nUnlike a lot of other\nproducts from Microsoft,\n\n265\n00:15:19,170 --> 00:15:22,852\nyou can run more than one version\nof SQL on the same system.\n\n266\n00:15:22,852 --> 00:15:27,040\nSo if I've already got a system that's\nrunning Windows Server 2008 and\n\n267\n00:15:27,040 --> 00:15:29,080\nit's running SQL Server 2008.\n\n268\n00:15:29,080 --> 00:15:34,702\nSo it's running both, Windows and SQL\nboth 2008 and I wanna move to SQL 2012.\n\n269\n00:15:34,702 --> 00:15:39,280\nWell, I could actually install\nSQL 2012 on the same server.\n\n270\n00:15:39,280 --> 00:15:43,366\nInstall it right next to SQL Server 2008,\nthey do not overwrite each other.\n\n271\n00:15:43,366 --> 00:15:46,987\nYou can run them both and\nnow they're running side by side and\n\n272\n00:15:46,987 --> 00:15:51,250\nI can copy my database from 2008\nto 2012 and test it out and see.\n\n273\n00:15:51,250 --> 00:15:55,437\nKind of work with it right there on\nthe same system and then when I'm ready,\n\n274\n00:15:55,437 --> 00:16:00,021\nwhen I know everything's working I can\npoint my clients to the 2012 install,\n\n275\n00:16:00,021 --> 00:16:02,790\nand then I can remove the 2008 install.\n\n276\n00:16:02,790 --> 00:16:05,640\nSo it makes it easy to\ndo in-place migrations.\n\n277\n00:16:05,640 --> 00:16:09,220\nNow, for small and medium businesses,\nthat's very attractive.\n\n278\n00:16:09,220 --> 00:16:10,800\nFor large businesses,\nyou don't care, right?\n\n279\n00:16:10,800 --> 00:16:13,910\nWhen you go to deploy a new SQL Server,\nyou're typically ordering new hardware,\n\n280\n00:16:13,910 --> 00:16:16,190\nbuilding up a new second system.\n\n281\n00:16:16,190 --> 00:16:18,055\nSo if you're doing a new deployment,\n\n282\n00:16:18,055 --> 00:16:22,032\nit makes sense to install SQL Server\n2012 on top of Windows Server 2012.\n\n283\n00:16:22,032 --> 00:16:26,541\nAnd there are some optimizations done,\nI've seen performance reports on this,\n\n284\n00:16:26,541 --> 00:16:30,658\nwhere you actually do get better\nperformance running SQL 2012 on top of\n\n285\n00:16:30,658 --> 00:16:32,180\nWindows Server 2012.\n\n286\n00:16:32,180 --> 00:16:37,410\nSo, while you can run SQL Server\n2012 on top of Windows Server 2008,\n\n287\n00:16:37,410 --> 00:16:39,410\nit's better to do it on 2012 if you can.\n\n288\n00:16:41,710 --> 00:16:46,340\nAll right, now we need Windows Server\n2012 or Windows Server 2008.\n\n289\n00:16:46,340 --> 00:16:49,720\n64-bit is the recommended.\n\n290\n00:16:49,720 --> 00:16:52,115\nYou can do 32-bit, but 64 is recommended.\n\n291\n00:16:52,115 --> 00:16:55,860\nIt'll run on top of\nWindows Server 2012 Datacenter,\n\n292\n00:16:55,860 --> 00:17:01,440\nStandard, Essentials and Foundation,\nall those different versions.\n\n293\n00:17:01,440 --> 00:17:04,520\nMost of us live in a world where there's\nreally just these top two, Standard and\n\n294\n00:17:04,520 --> 00:17:07,240\nData Center edition and that's it, right?\n\n295\n00:17:07,240 --> 00:17:10,280\nSQL Server will run on top of\neither one of those just fine.\n\n296\n00:17:10,280 --> 00:17:14,210\nEssentials and Foundation, though, are\nspecial versions of Windows Server that\n\n297\n00:17:14,210 --> 00:17:17,030\nare designed to be either inexpensive or\nfree.\n\n298\n00:17:17,030 --> 00:17:19,820\nWindows Server Essentials is designed for\nsmall businesses.\n\n299\n00:17:19,820 --> 00:17:22,780\nIt's kind of the replacement to\nthe old small business server.\n\n300\n00:17:22,780 --> 00:17:24,520\nSQL will run on it just fine.\n\n301\n00:17:24,520 --> 00:17:29,640\nAnd then Windows Server 2012 Foundation,\nwell, that one is free.\n\n302\n00:17:29,640 --> 00:17:30,930\nYou can go to Microsoft's website and\n\n303\n00:17:30,930 --> 00:17:33,720\ndownload it today,\ndoesn't cost you a dime.\n\n304\n00:17:33,720 --> 00:17:38,160\nSo that's a free one and that one\nyou can run SQL on top of it also.\n\n305\n00:17:38,160 --> 00:17:42,330\nNow there are limitations to that host\nOS that makes that sound not attractive.\n\n306\n00:17:42,330 --> 00:17:44,580\nSo if your eyes just lit up for\na second and you said, wait a minute,\n\n307\n00:17:44,580 --> 00:17:46,740\nI can eliminate the host OS cost?\n\n308\n00:17:46,740 --> 00:17:48,100\nNot really.\n\n309\n00:17:48,100 --> 00:17:50,410\nI think,\ndo I have it in my notes here somewhere?\n\n310\n00:17:50,410 --> 00:17:51,710\nLet's see if I have it.\n\n311\n00:17:51,710 --> 00:17:54,880\nYeah, I've got some notes down here that\nkind of identify what happens if you go\n\n312\n00:17:54,880 --> 00:17:55,980\nwith Foundation.\n\n313\n00:17:55,980 --> 00:18:00,050\nOn the CPU side there's some big\nlimitations, so just be aware that,\n\n314\n00:18:00,050 --> 00:18:04,030\nalthough you can run on those lower\neditions of the Windows Server,\n\n315\n00:18:04,030 --> 00:18:07,070\nyou probably don't want to.\n\n316\n00:18:07,070 --> 00:18:08,799\nIt will run on top of\nWindows Server 2008 also.\n\n317\n00:18:08,799 --> 00:18:11,340\nI think I've already\nmentioned that a few times.\n\n318\n00:18:11,340 --> 00:18:15,680\nThe key thing here is you do need\nto have Service Pack 1 or higher.\n\n319\n00:18:15,680 --> 00:18:18,360\nSo you've gotta have Service Pack 1\ninstalled, or Service Pack 2, for\n\n320\n00:18:18,360 --> 00:18:21,560\nthat matter, if you want to be\nable to run SQL 2012 on there.\n\n321\n00:18:21,560 --> 00:18:26,030\nOtherwise it'll run on Datacenter,\nEnterprise, Standard and Web.\n\n322\n00:18:26,030 --> 00:18:29,240\nIt won't run on Storage Edition or\nsome of the other ones that came out, but\n\n323\n00:18:29,240 --> 00:18:30,990\nthose are the four main ones anyway.\n\n324\n00:18:32,990 --> 00:18:37,580\nAll right, now if we're gonna be\nrunning SQL Server 2012 Enterprise,\n\n325\n00:18:37,580 --> 00:18:39,440\nit does require one of those server OSs.\n\n326\n00:18:39,440 --> 00:18:41,230\nThat's what we normally deploy on.\n\n327\n00:18:41,230 --> 00:18:45,720\nBut if you're running SQL Server\n2012 Standard Edition or Express,\n\n328\n00:18:45,720 --> 00:18:48,960\nthey'll actually run on a desktop,\nand I know I mentioned that already.\n\n329\n00:18:48,960 --> 00:18:52,500\nThat's because Standard and Express,\nyou might be using those to test,\n\n330\n00:18:52,500 --> 00:18:56,370\ndevelop, practice, whatever, so they make\nthem where they can install on a desktop.\n\n331\n00:18:56,370 --> 00:18:57,339\nBut the Enterprise Edition won't.\n\n332\n00:18:59,040 --> 00:19:01,860\nNow, I've mentioned Enterprise\nversus Standard a few times.\n\n333\n00:19:01,860 --> 00:19:03,210\nWhat's the difference there?\n\n334\n00:19:03,210 --> 00:19:06,990\nWell, there's differences based\non the needs of a company.\n\n335\n00:19:06,990 --> 00:19:08,240\nThe primary difference is cost.\n\n336\n00:19:08,240 --> 00:19:11,840\nEnterprise Edition is a lot more\nexpensive than Standard Edition.\n\n337\n00:19:11,840 --> 00:19:12,470\nThat's it, right?\n\n338\n00:19:12,470 --> 00:19:14,340\nWell, there's a reason you have that cost.\n\n339\n00:19:14,340 --> 00:19:17,860\nThere's certain benefits you get from\ngoing to Enterprise versus Standard, and\n\n340\n00:19:17,860 --> 00:19:20,240\nthe main difference is\nin hardware support.\n\n341\n00:19:20,240 --> 00:19:24,665\nIn SQL Server 2012 Standard Edition,\nyou have some limits.\n\n342\n00:19:24,665 --> 00:19:28,910\nNow these are artificial limits that\nMicrosoft put in there specifically to,\n\n343\n00:19:28,910 --> 00:19:30,340\nwell, it depends on how you look at it.\n\n344\n00:19:30,340 --> 00:19:34,000\nYou could say specifically to charge\nmore money for bigger customers, but\n\n345\n00:19:34,000 --> 00:19:37,710\nthe other way you could look at it is to\ncharge less money for smaller customers.\n\n346\n00:19:37,710 --> 00:19:41,780\nIf you're a smaller company, you don't\nneed the crazy amount of resources that\n\n347\n00:19:41,780 --> 00:19:43,820\na massive enterprise might need.\n\n348\n00:19:43,820 --> 00:19:48,070\nSo the Standard Edition is artificially\ncrippled so that you don't have to pay for\n\n349\n00:19:48,070 --> 00:19:49,540\nthose features that you're not gonna use.\n\n350\n00:19:49,540 --> 00:19:53,404\nThat's the positive spin on it\nthat Microsoft wants you to know.\n\n351\n00:19:53,404 --> 00:19:58,119\n[LAUGH] All right, so\non the Standard side you\n\n352\n00:19:58,119 --> 00:20:03,475\nare limited to 4 physical CPUs or\n16 cores.\n\n353\n00:20:03,475 --> 00:20:09,455\nYou might have 2 physical CPUs that\nare 8 cores, so that hits your 16 cores.\n\n354\n00:20:09,455 --> 00:20:10,910\nThat's your limit.\n\n355\n00:20:10,910 --> 00:20:16,810\nIt's whichever you hit first,\n4 physical processors or 16 cores.\n\n356\n00:20:16,810 --> 00:20:20,090\nThat's your limit for\nSQL Server 2012 Standard Edition.\n\n357\n00:20:20,090 --> 00:20:21,850\nYou're also limited to 64 gigs of RAM.\n\n358\n00:20:22,860 --> 00:20:26,990\nSo you can have more than 64\ngigs of RAM in your host OS, but\n\n359\n00:20:26,990 --> 00:20:31,050\nSQL Server 2012 Standard Edition\nwill cap itself at 64.\n\n360\n00:20:31,050 --> 00:20:35,030\nAnd then when you do clustering,\nStandard Edition will do clustering.\n\n361\n00:20:35,030 --> 00:20:37,781\nThat's different than some of the older\nversions of SQL where you had to have\n\n362\n00:20:37,781 --> 00:20:38,660\nEnterprise for it.\n\n363\n00:20:38,660 --> 00:20:42,550\nBut Standard Edition will do\nup to a two node cluster.\n\n364\n00:20:42,550 --> 00:20:44,630\nIf you want to go three node or\nmore, it won't do that, but\n\n365\n00:20:44,630 --> 00:20:45,810\na two node cluster it'll do.\n\n366\n00:20:47,240 --> 00:20:50,760\nThe Enterprise side just\nremoves those limitations.\n\n367\n00:20:50,760 --> 00:20:53,680\nWe don't have a CPU limit,\nwe don't have a RAM limit, and\n\n368\n00:20:53,680 --> 00:20:57,760\nwe don't have cluster node limit\nin SQL Server 2012 Enterprise.\n\n369\n00:20:57,760 --> 00:21:00,780\nBut you do still have limits of your\nhost OS, and so I went ahead and\n\n370\n00:21:00,780 --> 00:21:01,830\nmapped those out.\n\n371\n00:21:01,830 --> 00:21:04,090\nOn Microsoft's site they\njust say no limit, no limit.\n\n372\n00:21:04,090 --> 00:21:06,650\nBut it's kinda nice to know\nwhat the actual limits are.\n\n373\n00:21:06,650 --> 00:21:10,880\nSo for example, if you're running\nWindows Server 2012 the edition of your\n\n374\n00:21:10,880 --> 00:21:13,780\nhost OS determines how many CPUs you get.\n\n375\n00:21:13,780 --> 00:21:16,286\nEven in Datacenter there's\na limit of 64 CPUs.\n\n376\n00:21:16,286 --> 00:21:19,931\nYou can't have more than 64 physical CPUs.\n\n377\n00:21:19,931 --> 00:21:20,803\nThat is physical.\n\n378\n00:21:20,803 --> 00:21:22,265\nI should probably, oh,\nI did put that in there.\n\n379\n00:21:22,265 --> 00:21:24,912\nAll right, [LAUGH] that is physical CPUs,\nnot cores.\n\n380\n00:21:24,912 --> 00:21:29,149\nThe core limit, I think it's 620.\n\n381\n00:21:29,149 --> 00:21:32,430\nShoot, I should've gotten that.\n\n382\n00:21:32,430 --> 00:21:35,230\nIt's either 620 or 640 cores,\nsomething like that, so\n\n383\n00:21:35,230 --> 00:21:39,240\naround 10 cores per CPU,\nwhich is plenty for most environments.\n\n384\n00:21:39,240 --> 00:21:41,390\nSo that's a physical limit there.\n\n385\n00:21:41,390 --> 00:21:44,270\nNotice what happens if you go\nto Essentials or Foundations.\n\n386\n00:21:44,270 --> 00:21:47,540\nEssentials is limited to\ntwo physical CPUs, and\n\n387\n00:21:47,540 --> 00:21:50,200\nFoundation is limited to one physical CPU.\n\n388\n00:21:50,200 --> 00:21:54,070\nSo that free version of the host\nOS comes at a cost, and\n\n389\n00:21:54,070 --> 00:21:58,020\nthat cost being, you just don't\nget great CPU support out of it.\n\n390\n00:21:58,020 --> 00:21:59,410\nSame thing on the memory side, right?\n\n391\n00:21:59,410 --> 00:22:03,820\nWindows Server 2012 Datacenter and\nStandard give up to 4 TB of memory.\n\n392\n00:22:03,820 --> 00:22:05,030\nThat's a lot.\n\n393\n00:22:05,030 --> 00:22:07,260\nMost servers,\nyou can't even buy that much.\n\n394\n00:22:07,260 --> 00:22:11,037\nBut when you start getting into\nEssentials and Foundation,\n\n395\n00:22:11,037 --> 00:22:13,990\nit drops to 64 GB and\n32 GB for the host OS.\n\n396\n00:22:13,990 --> 00:22:16,712\nAnd that's memory that's being\nshared across the host OS and\n\n397\n00:22:16,712 --> 00:22:19,520\nthe other applications you run,\nwhich includes SQL.\n\n398\n00:22:19,520 --> 00:22:23,029\nSo these limits apply themselves\nto SQL because of that.\n\n399\n00:22:25,160 --> 00:22:28,750\nNow those aren't the only differences\nbetween Standard and Enterprise.\n\n400\n00:22:28,750 --> 00:22:30,080\nThose are the ones you wanna remember,\n\n401\n00:22:30,080 --> 00:22:33,970\ncuz that's gonna help you choose\nwhich version you're gonna install.\n\n402\n00:22:33,970 --> 00:22:38,260\nBut Enterprise also adds\na ton of other stuff.\n\n403\n00:22:38,260 --> 00:22:42,370\nAnd as we go through this show,\nwe're gonna use some of these features.\n\n404\n00:22:42,370 --> 00:22:45,900\nSo some of the stuff we use here in\nthe show, you might go back to your\n\n405\n00:22:45,900 --> 00:22:49,700\noffice where you're running SQL 2012\nStandard and the feature's missing.\n\n406\n00:22:49,700 --> 00:22:51,210\nYou're like, why is this missing?\n\n407\n00:22:51,210 --> 00:22:52,930\nWell, you've got to upgrade to Enterprise.\n\n408\n00:22:53,960 --> 00:22:56,200\nSo some of these features\nwe have to pay for now.\n\n409\n00:22:56,200 --> 00:22:59,130\nA lot of these features are ones we\ndon't need just get a standard database\n\n410\n00:22:59,130 --> 00:23:00,020\nup and going.\n\n411\n00:23:00,020 --> 00:23:03,120\nSome of them are nice, right,\nbut we don't need them.\n\n412\n00:23:03,120 --> 00:23:05,280\nSo for example, database snapshots.\n\n413\n00:23:05,280 --> 00:23:10,080\nA database snapshot is where we take a\npoint in time kind of image of a database.\n\n414\n00:23:10,080 --> 00:23:12,668\nAnd if you start making changes,\nit retains that image.\n\n415\n00:23:12,668 --> 00:23:14,511\nAnd if something goes wrong,\n\n416\n00:23:14,511 --> 00:23:18,925\nyou can flip right back to that\nsnapshot at a click of a button.\n\n417\n00:23:18,925 --> 00:23:21,555\nVery fast, very smooth,\nyou roll right back in snapshot.\n\n418\n00:23:21,555 --> 00:23:22,865\nIt's a neat feature.\n\n419\n00:23:22,865 --> 00:23:23,545\nDo we need that?\n\n420\n00:23:23,545 --> 00:23:24,495\nNot really.\n\n421\n00:23:24,495 --> 00:23:27,585\nI could have just taken a backup, right,\nand then if something goes wrong,\n\n422\n00:23:27,585 --> 00:23:29,635\nI could have just restored my backup.\n\n423\n00:23:29,635 --> 00:23:32,585\nThe database snapshot\njust makes it faster.\n\n424\n00:23:32,585 --> 00:23:35,530\nSo you may or may not actually need that.\n\n425\n00:23:35,530 --> 00:23:36,500\nIt's an Enterprise feature.\n\n426\n00:23:36,500 --> 00:23:39,165\nMost people won't actually pay for that.\n\n427\n00:23:39,165 --> 00:23:42,930\nAlwaysOn Availability Groups, that's a\nspecial type of clustering we'll see later\n\n428\n00:23:42,930 --> 00:23:46,860\non, that allows you to have cluster\nnodes that bounce between databases.\n\n429\n00:23:46,860 --> 00:23:48,667\nYou get some really neat\nfunctionality there.\n\n430\n00:23:48,667 --> 00:23:52,635\nAgain, if you're not in the need of that,\nif you just wanna cluster two servers\n\n431\n00:23:52,635 --> 00:23:55,200\ntogether, you don't need\navailability groups.\n\n432\n00:23:55,200 --> 00:23:56,750\nYou've got your two nodes, that's it.\n\n433\n00:23:56,750 --> 00:23:59,000\nDon't pay extra for it.\n\n434\n00:23:59,000 --> 00:24:02,854\nI won't bore you going through all these\nbut Some of them like mirrored backups,\n\n435\n00:24:02,854 --> 00:24:06,833\nwhere we backup to a separate server that\nmight be in another geographic location.\n\n436\n00:24:06,833 --> 00:24:10,030\nA small business isn't going to\nhave another geographic location.\n\n437\n00:24:10,030 --> 00:24:11,600\nBut an enterprise will.\n\n438\n00:24:11,600 --> 00:24:14,140\nAnd so we wanna make sure\nwe can do mirrored backups.\n\n439\n00:24:14,140 --> 00:24:16,650\nHot add memory and CPU.\n\n440\n00:24:16,650 --> 00:24:19,180\nMost physical servers\ndon't even support that.\n\n441\n00:24:19,180 --> 00:24:23,060\nAdding memory or\nadding processors while the server is on.\n\n442\n00:24:23,060 --> 00:24:26,210\nBut, a lot of virtual platforms do.\n\n443\n00:24:26,210 --> 00:24:29,400\nAnd if you go and you're going to be\nrunning SQL in a virtual environment, and\n\n444\n00:24:29,400 --> 00:24:31,000\nyou wanna add and remove CPU and\n\n445\n00:24:31,000 --> 00:24:35,650\nmemory on the fly, you'll need to step\nup to the enterprise version all right.\n\n446\n00:24:35,650 --> 00:24:40,110\nOther things, table and index partitioning\nwe'll talk about that in another episode.\n\n447\n00:24:40,110 --> 00:24:42,730\nIt's hard to talk about a lot of the\nfeatures cuz we haven't learned what they\n\n448\n00:24:42,730 --> 00:24:44,990\nare yet, but you guys get the idea.\n\n449\n00:24:44,990 --> 00:24:48,660\nA lot of these are features that\nare designed for enterprises,\n\n450\n00:24:48,660 --> 00:24:50,430\nfor big corporations.\n\n451\n00:24:50,430 --> 00:24:51,454\nRight?\nMultinational,\n\n452\n00:24:51,454 --> 00:24:56,270\nmulti billion dollar organizations\nthat deal with a large amount of data.\n\n453\n00:24:56,270 --> 00:24:59,620\nBut there are times when you\nmight be a very small company.\n\n454\n00:24:59,620 --> 00:25:04,560\nYou might have five employees but the data\nthat you handle is so specialized and\n\n455\n00:25:04,560 --> 00:25:07,550\nlarge that you need\nsome of these features.\n\n456\n00:25:07,550 --> 00:25:08,660\nAnd in that scenario,\n\n457\n00:25:08,660 --> 00:25:12,260\neven though you're a small company you\nmight need to step up to Enterprise.\n\n458\n00:25:12,260 --> 00:25:15,740\nBut don't just get Enterprise cuz\nyou feel like you're a big company.\n\n459\n00:25:15,740 --> 00:25:17,950\nWhat you should do is look\nat these features and say,\n\n460\n00:25:17,950 --> 00:25:21,040\nis there something that I'm\nactually gonna benefit from?\n\n461\n00:25:21,040 --> 00:25:23,850\nIs there a reason I need\nto go to enterprise?\n\n462\n00:25:23,850 --> 00:25:25,440\nAnd if there is, do it.\n\n463\n00:25:25,440 --> 00:25:26,960\nYou don't have any other choice.\n\n464\n00:25:26,960 --> 00:25:30,030\nBut if there isn't, if none of these\nfeatures are ones you're going to use,\n\n465\n00:25:30,030 --> 00:25:36,110\ndon't pay extra for\nit because it is a big difference.\n\n466\n00:25:36,110 --> 00:25:38,680\nAnd just to kind of give you\nguys an idea of the pricing,\n\n467\n00:25:38,680 --> 00:25:41,550\nmost websites want to\npublish pricing on it.\n\n468\n00:25:41,550 --> 00:25:45,020\nLet's go to CDW and\nsee what the pricing is these days.\n\n469\n00:25:47,250 --> 00:25:49,980\nI'm going to pull up Microsoft SQL 2012.\n\n470\n00:25:49,980 --> 00:25:54,725\nWhen you do a search on these sites,\n\n471\n00:25:54,725 --> 00:25:58,705\na lot of times you'll find volume license\nagreements and things like that but\n\n472\n00:25:58,705 --> 00:26:02,685\nhere's a Microsoft SQL Server\n2012 standard license at $155.\n\n473\n00:26:02,685 --> 00:26:07,655\nThis is a Microsoft Select Level D,\nso that's an enterprise agreement.\n\n474\n00:26:07,655 --> 00:26:08,865\nSo, yeah, be kind of careful.\n\n475\n00:26:08,865 --> 00:26:13,625\nI think the retail is closer to,\nactually, this looks about right.\n\n476\n00:26:13,625 --> 00:26:15,305\nIt's usually around a thousand dollars.\n\n477\n00:26:15,305 --> 00:26:17,130\nSo here's one for 893.\n\n478\n00:26:17,130 --> 00:26:19,730\nSo that is more than\nlikely closer to retail.\n\n479\n00:26:20,810 --> 00:26:29,641\nBut if we throw on the word enterprise,\nWell, they just sell standard.\n\n480\n00:26:29,641 --> 00:26:31,279\nWell anyhow, all right, so\n\n481\n00:26:31,279 --> 00:26:36,010\nthe standard edition though is\nnormally in that 800 to $1000 range.\n\n482\n00:26:36,010 --> 00:26:39,460\nThe Enterprise version is normally\nin the $4,000 to $5,000 range.\n\n483\n00:26:39,460 --> 00:26:43,350\nThe enterprise version is also\nlicensed per physical CPU.\n\n484\n00:26:43,350 --> 00:26:47,980\nSo that $4000 to $5000 that's two\nphysically CPU's and then for\n\n485\n00:26:47,980 --> 00:26:51,800\nthe additional CPU's to use in\nyour box you gotta pay more.\n\n486\n00:26:51,800 --> 00:26:55,290\nYour cores don't count, right, so\nmultiple cores saves you money.\n\n487\n00:26:55,290 --> 00:26:58,660\nBut physical CPUs, you have to license for\nthat to pay for it.\n\n488\n00:26:58,660 --> 00:27:01,320\nSo, it gets very expensive very fast.\n\n489\n00:27:01,320 --> 00:27:04,960\nAt a minimum, it's gonna be five times\nmore expensive than Standard Edition.\n\n490\n00:27:04,960 --> 00:27:09,140\nSo, you save a lot by going with\nthe right edition for your size.\n\n491\n00:27:09,140 --> 00:27:10,610\nSo definitely be aware of that.\n\n492\n00:27:10,610 --> 00:27:13,110\nI'm not just saying it say it right,\nit will save you money.\n\n493\n00:27:14,680 --> 00:27:16,570\nAll right, well enough talk.\n\n494\n00:27:16,570 --> 00:27:19,940\nWhat we wanna do next is actually\nsee getting this stuff installed.\n\n495\n00:27:19,940 --> 00:27:21,000\nAnd so that's what we're gonna do next.\n\n496\n00:27:21,000 --> 00:27:24,700\nWe're gonna install SQL Server 2012, we'll\nsee some of the different decisions we\n\n497\n00:27:24,700 --> 00:27:26,730\nhave to make during\nthe installation process and\n\n498\n00:27:26,730 --> 00:27:28,210\nget a chance to see what that's like.\n\n499\n00:27:28,210 --> 00:27:32,320\nSo I know I kind of lectured you to\ndeath here in the first segment.\n\n500\n00:27:32,320 --> 00:27:34,107\nBut But we'll get hands-on for\nthe rest of it.\n\n501\n00:27:34,107 --> 00:27:35,290\nSo stay tuned.\n\n502\n00:27:35,290 --> 00:27:36,590\nWe'll be back after this.\n\n503\n00:27:36,590 --> 00:27:45,050\n[SOUND]\n>> All right.\n\n504\n00:27:45,050 --> 00:27:46,430\nWelcome back everybody.\n\n505\n00:27:46,430 --> 00:27:50,690\nSo in the last segment, we talked\na little about SQL Server 2012 and\n\n506\n00:27:50,690 --> 00:27:52,790\nthe product itself.\n\n507\n00:27:52,790 --> 00:27:53,640\nLet's get to work, right?\n\n508\n00:27:53,640 --> 00:27:55,710\nLet's actually see this\nthing in action and\n\n509\n00:27:55,710 --> 00:27:57,900\nsee what's involved with\ngetting it installed.\n\n510\n00:27:57,900 --> 00:27:59,930\nIt's actually pretty straightforward,\nright?\n\n511\n00:27:59,930 --> 00:28:00,870\nStep number one for\n\n512\n00:28:00,870 --> 00:28:04,300\nus is just gonna be making sure that our\nsystem meets the minimum requirements,\n\n513\n00:28:04,300 --> 00:28:08,980\nwhich hopefully it does I'm gonna be using\nWindows Server 2012 R2 as my host OS here.\n\n514\n00:28:08,980 --> 00:28:11,120\nAgain, we could be doing this on 2008.\n\n515\n00:28:11,120 --> 00:28:15,570\nI just happened to have a 2012 server\nlaying around, so that's why I'm using it.\n\n516\n00:28:15,570 --> 00:28:17,710\nAnd so\nI'm gonna just double-check real quick.\n\n517\n00:28:17,710 --> 00:28:19,340\nI'll fire up my Server Manager and\n\n518\n00:28:19,340 --> 00:28:22,920\ngo to Local Server Just wanna make\nsure I meet the requirements.\n\n519\n00:28:22,920 --> 00:28:26,250\nSo, I'm concerned mostly\nwith memory on this one.\n\n520\n00:28:26,250 --> 00:28:30,040\nAnd as I look I can see this system has\neight gigs of RAM, so I'm good there.\n\n521\n00:28:30,040 --> 00:28:31,520\nI've got plenty of hard drive space, but\n\n522\n00:28:31,520 --> 00:28:37,060\nas we'll see SQL really doesn't require\na whole heck of a lot of hard drive space.\n\n523\n00:28:37,060 --> 00:28:39,650\nIt's your databases that take space.\n\n524\n00:28:39,650 --> 00:28:41,840\nSo when you install SQL Server,\n\n525\n00:28:41,840 --> 00:28:45,870\nit's very very common to implement it\non a server with multiple hard drives.\n\n526\n00:28:45,870 --> 00:28:49,270\nNow, I don't want to delve into that\ntoo deeply in this episode, but\n\n527\n00:28:49,270 --> 00:28:53,510\nwhen we start creating databases in\nthe next episode, I'll lay out how we can\n\n528\n00:28:53,510 --> 00:28:57,730\nutilize multiple hard drives to create\nthe best performance profile for us.\n\n529\n00:28:57,730 --> 00:29:00,800\nBut for right now we're just going\nto be installing SQLl Server and\n\n530\n00:29:00,800 --> 00:29:04,770\nit's pretty much standard practice to\njust install the sequel server itself\n\n531\n00:29:04,770 --> 00:29:06,900\nright on the same hard\ndrive as your host OS.\n\n532\n00:29:06,900 --> 00:29:11,570\nWe really just need one drive and\nI can see I've got, it looks like 1.2\n\n533\n00:29:11,570 --> 00:29:15,090\nterabytes of space available on this\nsystem, but I should have plenty of room.\n\n534\n00:29:15,090 --> 00:29:16,600\nYeah, right here on my C drive.\n\n535\n00:29:16,600 --> 00:29:20,310\nI can see that I've actually got\nabout 87 gigs free, more than enough.\n\n536\n00:29:20,310 --> 00:29:23,640\nSQL Server itself I believe weighs\nin at like right around 1.5\n\n537\n00:29:23,640 --> 00:29:25,640\ngigs in size it's not terribly big.\n\n538\n00:29:26,870 --> 00:29:29,080\nAnd so that'll be just fine.\n\n539\n00:29:29,080 --> 00:29:32,480\nI can also see that I'm running Microsoft\nWindows server 2012 R2 data center\n\n540\n00:29:32,480 --> 00:29:35,220\nwhich is a little bit overkill for\nwhat I'm doing but\n\n541\n00:29:35,220 --> 00:29:41,380\nit will suit my needs I can see I've got\na Core2 Duo CPU here at three gigahertz.\n\n542\n00:29:41,380 --> 00:29:47,362\nSo, I've got one physical CPU but two\ncores, and it's a three gigahertz machine.\n\n543\n00:29:47,362 --> 00:29:51,480\nAnd since I just have one physical CPU,\nI could actually be running\n\n544\n00:29:51,480 --> 00:29:55,430\nWindows Server Foundation on here, and\nI could, you know, stepping things down.\n\n545\n00:29:55,430 --> 00:29:59,030\nSo I'm a little overkill, but\nthat's because, I meant an eval, right?\n\n546\n00:29:59,030 --> 00:30:01,540\nThis is an evaluation copy\nof Windows Server 2012.\n\n547\n00:30:01,540 --> 00:30:04,600\nSo if you don't have to pay for it,\nwhat not go Data Center, right?\n\n548\n00:30:04,600 --> 00:30:05,140\nA little crazy.\n\n549\n00:30:06,220 --> 00:30:09,910\nAll right, other things you may want\nto consider before you get this set up,\n\n550\n00:30:09,910 --> 00:30:11,440\nis doing your Windows updates, right?\n\n551\n00:30:11,440 --> 00:30:14,690\nWindows updates are important to make\nsure your system is running optimally.\n\n552\n00:30:14,690 --> 00:30:15,410\nThe other thing is,\n\n553\n00:30:15,410 --> 00:30:19,780\nyou will likely want to give your\nsystem a static IP address, all right?\n\n554\n00:30:19,780 --> 00:30:23,630\nYou don't have to have a static\nIP address to run SQL server.\n\n555\n00:30:23,630 --> 00:30:24,580\nBut it's a good idea to.\n\n556\n00:30:24,580 --> 00:30:26,480\nIf people are gonna be\nconnecting into your system,\n\n557\n00:30:26,480 --> 00:30:28,060\nthey should be able to resolve it.\n\n558\n00:30:28,060 --> 00:30:31,430\nAnd if you're using DHCP,\nyour address could change,\n\n559\n00:30:31,430 --> 00:30:33,340\nsevering connections from clients and\nso on.\n\n560\n00:30:33,340 --> 00:30:35,350\nSo we'll normally assign a static IP.\n\n561\n00:30:36,380 --> 00:30:38,690\nBut other than that,\nwe meet our requirements.\n\n562\n00:30:38,690 --> 00:30:40,270\nLet's do the install.\n\n563\n00:30:40,270 --> 00:30:46,080\nFor the install we just pop our DVD in the\ndrive, or in my case, I had an ISO image.\n\n564\n00:30:46,080 --> 00:30:48,290\nIf you pop a DVD in the drive,\nyou go that route,\n\n565\n00:30:48,290 --> 00:30:52,720\nif you have an ISO, you just find\nyour ISO, and in Windows Server 2012,\n\n566\n00:30:52,720 --> 00:30:56,220\nyou can right click an ISO image,\nand choose Mount.\n\n567\n00:30:56,220 --> 00:30:59,290\nIt's the same thing as popping\na physical disk in the drive.\n\n568\n00:30:59,290 --> 00:31:02,100\nYou'll see I've got my\nvirtual drive right there.\n\n569\n00:31:02,100 --> 00:31:07,060\nThis says it's got\na SQL Server disc in it.\n\n570\n00:31:07,060 --> 00:31:11,350\nThe SQL Sever disc does have\nan auto-run that pops up, but\n\n571\n00:31:11,350 --> 00:31:14,680\nyou'll likely have that disabled\non your server, most people do.\n\n572\n00:31:14,680 --> 00:31:17,710\nYou can just browse into it and\nyou'll see a bunch of stuff in here.\n\n573\n00:31:17,710 --> 00:31:20,190\nI'm looking for\nthis setup file right here.\n\n574\n00:31:20,190 --> 00:31:23,830\nI can tell right here that I do have\nthe 64 bit version of SQL Server,\n\n575\n00:31:23,830 --> 00:31:25,600\nnot the 32 bit version.\n\n576\n00:31:25,600 --> 00:31:28,110\nThat's a good thing, and so\nI'm just going to run setup.\n\n577\n00:31:29,760 --> 00:31:34,350\nNow the setup is actually made up of a few\ndifferent pieces, so when you run it,\n\n578\n00:31:34,350 --> 00:31:37,860\nunlike a lot of other systems, it's not\ngoing to launch right into setup, it's\n\n579\n00:31:37,860 --> 00:31:41,570\ngoing to bring up a screen, I say it's\ngoing to bring up a screen, there it goes.\n\n580\n00:31:41,570 --> 00:31:46,380\nWhich is going to provide us the ability\nto do the install as well as several\n\n581\n00:31:46,380 --> 00:31:47,100\nother things.\n\n582\n00:31:47,100 --> 00:31:50,840\nSo you'll get this kind of\nconvoluted screen that comes up.\n\n583\n00:31:50,840 --> 00:31:54,580\nIt just does have a bunch\nof stuff in there.\n\n584\n00:31:54,580 --> 00:31:56,745\nIf you're ready to do the install,\n\n585\n00:31:56,745 --> 00:32:01,375\nyou can jump right in and do the install\nright here on the installation site.\n\n586\n00:32:01,375 --> 00:32:02,083\nRight.\n\n587\n00:32:02,083 --> 00:32:03,902\nBut, it takes you to planning first and\n\n588\n00:32:03,902 --> 00:32:07,667\nunder planning is where you can pull up\nthe hardware and software requirements.\n\n589\n00:32:07,667 --> 00:32:09,750\nYou know all those requirements\nI showed on the screen earlier?\n\n590\n00:32:09,750 --> 00:32:13,340\nI didn't make those up, it came from\nright here, hardware requirements.\n\n591\n00:32:13,340 --> 00:32:15,240\nSecurity documentation,\nrelease notes, right.\n\n592\n00:32:15,240 --> 00:32:17,780\nThese are important things\nthat we wanna know but\n\n593\n00:32:17,780 --> 00:32:21,730\nyou'll also see this guy right here,\nthe system configuration checker.\n\n594\n00:32:21,730 --> 00:32:25,210\nYou can run that and it will look at\nyour system to make sure that its\n\n595\n00:32:25,210 --> 00:32:29,610\nready to receive SQL server and\ndo a healthy install, right.\n\n596\n00:32:29,610 --> 00:32:31,932\nIf you're doing an upgrade,\nwe've got the Upgrade Advisor.\n\n597\n00:32:31,932 --> 00:32:35,760\nIt will look at a SQL server\nversion 2005 or higher, right.\n\n598\n00:32:35,760 --> 00:32:38,480\n2005, 2008, or 2008 r2, and look to see if\n\n599\n00:32:38,480 --> 00:32:42,110\nthere's anything you've implemented\nthat's not supported under 2012.\n\n600\n00:32:42,110 --> 00:32:47,070\nAnything that might break if you were move\nover to 2012 and it lays it our for you.\n\n601\n00:32:47,070 --> 00:32:51,340\nIt's a non invasive way to check\nyour system to see if you're ready\n\n602\n00:32:51,340 --> 00:32:52,050\nto do that upgrade.\n\n603\n00:32:52,050 --> 00:32:55,790\nAfter that there's just links\nto various help, right.\n\n604\n00:32:55,790 --> 00:32:58,908\nHow to for clustering and\nonline help and so on.\n\n605\n00:32:58,908 --> 00:33:02,640\nI'm not gonna read all of these\nbecause there's just a bunch of them.\n\n606\n00:33:02,640 --> 00:33:05,630\nBut how to do updates and so\non, it just goes on and on.\n\n607\n00:33:07,190 --> 00:33:11,070\nAll right, but if we're ready to do the\ninstall, we can click on installation and\n\n608\n00:33:11,070 --> 00:33:13,230\nnow we'll start to see some options.\n\n609\n00:33:13,230 --> 00:33:18,690\nNow the first option here is we're doing\na new SQL Server stand alone installation,\n\n610\n00:33:18,690 --> 00:33:21,150\nor adding features to an existing install.\n\n611\n00:33:21,150 --> 00:33:23,910\nThat's the typical installation\noption that we want.\n\n612\n00:33:23,910 --> 00:33:27,440\nIf it's a new install, it's gotta\ninstall a bunch of stuff, right?\n\n613\n00:33:27,440 --> 00:33:31,110\nIt's got to install the actual database\nengine, the management utilities, and\n\n614\n00:33:31,110 --> 00:33:32,360\nthings like that, but\n\n615\n00:33:32,360 --> 00:33:36,880\nif you've already installed SQL,\nyou could be adding features, right?\n\n616\n00:33:36,880 --> 00:33:40,730\nMaybe you didn't add the management\ntools when you did the original install.\n\n617\n00:33:40,730 --> 00:33:43,950\nMaybe you planned on running the\nmanagement tools from your laptop, right?\n\n618\n00:33:43,950 --> 00:33:46,830\nBut now you've decided you need those\nmanagement tools on the server itself.\n\n619\n00:33:46,830 --> 00:33:47,470\nWell, you'd come in and\n\n620\n00:33:47,470 --> 00:33:51,490\ndo this link right here to add those\nfeatures to the install, right?\n\n621\n00:33:51,490 --> 00:33:55,660\nYou'll also see we've got New SQL\nServer Failover Cluster Installation.\n\n622\n00:33:55,660 --> 00:33:58,330\nIf we're gonna do a clustered\nserver deployment,\n\n623\n00:33:58,330 --> 00:34:02,048\nwe need to use that option there and\nwe'll see that in a later episode.\n\n624\n00:34:02,048 --> 00:34:05,410\nIf we already have the cluster built,\nyou've gotta add a node to the clusters.\n\n625\n00:34:05,410 --> 00:34:08,540\nSo we've all ready got at least\ntwo nodes or one node in place,\n\n626\n00:34:08,540 --> 00:34:11,300\nnow we're just adding in that second or\nadditional nodes.\n\n627\n00:34:11,300 --> 00:34:14,390\nAll right, and\nthen you've got the upgrade option.\n\n628\n00:34:14,390 --> 00:34:20,135\nNow if you're running SQL Server 2005,\n2008, whatever, right here on the box,\n\n629\n00:34:20,135 --> 00:34:24,455\nyou can choose upgrade and it will do an\nin place upgrade to move you over to 2012.\n\n630\n00:34:24,455 --> 00:34:26,325\nIf you don't wanna do that,\n\n631\n00:34:26,325 --> 00:34:29,815\nremember I mentioned in the last segment\nthat we might want to run side by side,\n\n632\n00:34:29,815 --> 00:34:33,165\nwhere we have the old version and the new\nversion right there on the same system.\n\n633\n00:34:33,165 --> 00:34:37,400\nIf you wanna do that you go up here\nto a new sequel server install.\n\n634\n00:34:37,400 --> 00:34:43,000\nWhen you do that, you'll install a second\ncopy of SQL, leaving the first alone.\n\n635\n00:34:43,000 --> 00:34:46,870\nSo, that's really what it's asking here is\ndo we wanna leave the first one alone or\n\n636\n00:34:46,870 --> 00:34:51,000\ndo we wanna upgrade the other one and that\nwill run us through the upgrade process.\n\n637\n00:34:52,120 --> 00:34:54,190\nAll right, well,\nI'm gonna do a new install.\n\n638\n00:34:57,070 --> 00:34:59,240\nAll right,\nnow it's gonna start doing some checks.\n\n639\n00:34:59,240 --> 00:35:02,240\nNow it actually does\nprerequisite checks a few times.\n\n640\n00:35:02,240 --> 00:35:04,780\nYou're gonna see more than\none prerequisite check.\n\n641\n00:35:04,780 --> 00:35:08,910\nThe reason is it has one set of checks it\nhas to do just to make sure that you can\n\n642\n00:35:08,910 --> 00:35:10,910\nrun the SQL client.\n\n643\n00:35:10,910 --> 00:35:13,800\nAnd then its got another set of checks\nit does to make sure that you can run\n\n644\n00:35:13,800 --> 00:35:15,830\nthe SQL Server itself.\n\n645\n00:35:15,830 --> 00:35:19,550\nAnd if you choose any special options\nduring the install there will be a third\n\n646\n00:35:19,550 --> 00:35:22,820\nset of prerequisite checks where it\nlooks if you support all those options.\n\n647\n00:35:22,820 --> 00:35:25,200\nSo you may see this more than once and so\n\n648\n00:35:25,200 --> 00:35:28,780\nI can see right here it just did a set\nup support rules little process.\n\n649\n00:35:28,780 --> 00:35:31,550\nSo it was looking to make\nsure that we were ready to do\n\n650\n00:35:31,550 --> 00:35:35,540\nthe set up installation and that\neverything was ready It did eight checks,\n\n651\n00:35:35,540 --> 00:35:37,630\nthey all passed and I got zero warnings.\n\n652\n00:35:37,630 --> 00:35:43,790\nNow if something failed, a failure,\nit can stop you from installing.\n\n653\n00:35:43,790 --> 00:35:46,060\nSo you may not have an OK\nbutton here at all, or\n\n654\n00:35:46,060 --> 00:35:48,200\nit's grayed out, if it failed, right.\n\n655\n00:35:48,200 --> 00:35:51,390\nOr sometimes it's just a warning and\nit's letting you know that you're doing\n\n656\n00:35:51,390 --> 00:35:54,182\nsomething that's not quite optimal,\nit won't stop you.\n\n657\n00:35:54,182 --> 00:35:57,170\nIt will still let you do the install,\nbut it is a good idea to get that\n\n658\n00:35:57,170 --> 00:36:00,260\ncorrected and if we look at our details,\nyou can see what it checked.\n\n659\n00:36:00,260 --> 00:36:03,030\nHere it was just making sure\nthat I was an administrator,\n\n660\n00:36:03,030 --> 00:36:07,150\nthat we had account privileges to do\nthe work, consistency validation.\n\n661\n00:36:07,150 --> 00:36:10,690\nIt was looking to make sure I had\n.net framework support, right.\n\n662\n00:36:10,690 --> 00:36:12,690\nThese are things that it\njust needed to double check.\n\n663\n00:36:12,690 --> 00:36:16,730\nIf any of these were broken, it would\ninclude a link that would take you to\n\n664\n00:36:16,730 --> 00:36:20,220\na Microsoft knowledge based article on how\nto fix that, how to correct that issue.\n\n665\n00:36:21,660 --> 00:36:24,520\nAll right, once you fix the issue,\nyou can just hit re-run and\n\n666\n00:36:24,520 --> 00:36:28,370\nit will redo the checks over again and\nif it's successful, then you move forward.\n\n667\n00:36:28,370 --> 00:36:29,515\nIn my case, I'll just hit OK.\n\n668\n00:36:31,234 --> 00:36:32,670\nAll right, so there it goes.\n\n669\n00:36:32,670 --> 00:36:34,810\nNow it's gonna kick off that process.\n\n670\n00:36:34,810 --> 00:36:38,170\nYou'll see mine's getting ready for\nSQL server 2012 and\n\n671\n00:36:38,170 --> 00:36:41,590\nwhen it comes up it's gonna ask if\nyou wanna do a free edition right and\n\n672\n00:36:41,590 --> 00:36:46,260\nyou'll see an evaluation of a pro\nversion or an express version.\n\n673\n00:36:46,260 --> 00:36:48,660\nOr you can do where you\nenter in your product key.\n\n674\n00:36:48,660 --> 00:36:51,916\nSo mine is what is called pre pidded,\n\n675\n00:36:51,916 --> 00:36:56,430\na pre pidd is where Microsoft has\nalready put the key in for you, and you\n\n676\n00:36:56,430 --> 00:37:01,150\nsee that with technical editions that they\nrelease to Microsoft trainers and so on.\n\n677\n00:37:01,150 --> 00:37:04,110\nSo yours might already have\nthe product key in there, or\n\n678\n00:37:04,110 --> 00:37:05,070\nyou might have to enter it in.\n\n679\n00:37:07,310 --> 00:37:11,090\nAll right, on the next screen,\njust standard license agreement.\n\n680\n00:37:11,090 --> 00:37:14,738\nRight, you've got to sign away\nyour firstborn or whatever.\n\n681\n00:37:14,738 --> 00:37:16,680\nI'm not gonna send my\ndata usage to Microsoft,\n\n682\n00:37:16,680 --> 00:37:18,640\njust because this server\nisn't gonna last very long.\n\n683\n00:37:20,430 --> 00:37:24,370\nAll right, then it asks whether\nI wanna apply some updates.\n\n684\n00:37:24,370 --> 00:37:27,490\nDuring the initial stages it actually\nreaches out to Microsoft and looks if\n\n685\n00:37:27,490 --> 00:37:31,450\nthere's any hotfixes or patches that\nmight effect the installation procedure.\n\n686\n00:37:31,450 --> 00:37:35,180\nThere may be tons of updates up there, but\nit's just looking for one's that effect\n\n687\n00:37:35,180 --> 00:37:38,470\nthe installation procedure and\nif it finds any, it will show them here.\n\n688\n00:37:38,470 --> 00:37:41,400\nAnd it's just asking if we wanna\ngo ahead and do these or not.\n\n689\n00:37:41,400 --> 00:37:43,120\nDo I wanna include these updates?\n\n690\n00:37:43,120 --> 00:37:44,600\nYou don't have to, right?\n\n691\n00:37:44,600 --> 00:37:46,120\nYou can choose not to do it.\n\n692\n00:37:46,120 --> 00:37:48,560\nBut it usually doesn't hurt, right.\n\n693\n00:37:48,560 --> 00:37:50,200\nIf you're doing an offline install,\n\n694\n00:37:50,200 --> 00:37:52,500\nthen it probably wouldn't have\nfound anything in the first place.\n\n695\n00:37:52,500 --> 00:37:53,410\nI'll go ahead and tell it to do it.\n\n696\n00:37:55,500 --> 00:37:58,430\nAll right, so now it's getting ready, and\n\n697\n00:37:58,430 --> 00:38:01,880\nnotice what it's doing,\ninstall setup files.\n\n698\n00:38:01,880 --> 00:38:06,250\nIt's not actually installing SQL server\nhere, it's installing the setup.\n\n699\n00:38:06,250 --> 00:38:10,000\nIt's downloading those hot fixes from\nMicrosoft, it's installing them and\n\n700\n00:38:10,000 --> 00:38:13,220\nit's copying the setup files\nfrom the disk to the hard drive,\n\n701\n00:38:13,220 --> 00:38:14,820\nthen it's going to\nlaunch the installation.\n\n702\n00:38:14,820 --> 00:38:18,380\nSo it's a little bit tricky cuz a lot of\npeople think that it's setting it up here\n\n703\n00:38:18,380 --> 00:38:20,640\nbut there's a lot more to it,\nso we'll give it a moment,\n\n704\n00:38:20,640 --> 00:38:22,290\nit shouldn't take very long.\n\n705\n00:38:22,290 --> 00:38:25,950\nYou'll see it's already finished it's\ndownload now, it's just extracting and\n\n706\n00:38:25,950 --> 00:38:27,680\ninstalling, all right?\n\n707\n00:38:27,680 --> 00:38:31,620\nWhen this is done,\nthe real install is gonna kick off, and\n\n708\n00:38:31,620 --> 00:38:35,890\nwe'll have another prerequisite check, as\nit makes sure the SQL server can run here,\n\n709\n00:38:35,890 --> 00:38:37,490\nand then it's gonna start\nmoving through there, and\n\n710\n00:38:37,490 --> 00:38:41,730\nwe're gonna get questions like what\nfeatures we want to install, and so on.\n\n711\n00:38:41,730 --> 00:38:44,680\nSo, we'll get a chance to see those and\nactually, we had\n\n712\n00:38:44,680 --> 00:38:48,670\nsome good questions during the break\nin the chat room about those features.\n\n713\n00:38:48,670 --> 00:38:50,400\nWe're gonna see some different things.\n\n714\n00:38:50,400 --> 00:38:54,420\nI mentioned in the first segment how\nthere's SQL server enterprise edition and\n\n715\n00:38:54,420 --> 00:38:55,800\nstandard edition.\n\n716\n00:38:55,800 --> 00:38:57,400\nThere's another edition\nI didn't talk about,\n\n717\n00:38:57,400 --> 00:39:02,760\nwhich was SQL server business intelligence\nand it's not really a separate addition\n\n718\n00:39:02,760 --> 00:39:07,900\nas much as it is like a suite of\nsoftware that adds on to SQL Server.\n\n719\n00:39:07,900 --> 00:39:11,220\nSo while we're waiting on this,\nlet me just kind of describe that.\n\n720\n00:39:11,220 --> 00:39:16,075\nThe business intelligence suite isn't\nadd-on that adds a huge amount of\n\n721\n00:39:16,075 --> 00:39:21,875\nreporting and data interpretation\nsoftware to SQL that allows you to do,\n\n722\n00:39:21,875 --> 00:39:25,085\nwhat they call an inter-spatial\nrelationships or\n\n723\n00:39:25,085 --> 00:39:30,655\ndata cubes where you can connect multiple\npieces of information to form a result.\n\n724\n00:39:30,655 --> 00:39:34,882\nAnd the example I gave during the break\nwas that you might have sales numbers that\n\n725\n00:39:34,882 --> 00:39:38,470\nyou track so each month you\nhave a certain amount of sales.\n\n726\n00:39:38,470 --> 00:39:41,020\nBut that sales number doesn't\nnecessarily reflect other things,\n\n727\n00:39:41,020 --> 00:39:43,930\nlike what geographic areas\ngenerated the sales?\n\n728\n00:39:43,930 --> 00:39:46,680\nWhat special promotions were\nyou running that month?\n\n729\n00:39:46,680 --> 00:39:48,917\nWhat were your inventory numbers?\n\n730\n00:39:48,917 --> 00:39:53,730\nDid you sell, or make less revenue but\nsell more product, or vice versa.\n\n731\n00:39:53,730 --> 00:39:57,000\nThat kind of information isn't necessarily\nreflected in a single number result.\n\n732\n00:39:57,000 --> 00:40:00,627\nAnd so with the business intelligence\nsuite you can create reports and\n\n733\n00:40:00,627 --> 00:40:03,395\ndata gathering that harvests\nthat information, and\n\n734\n00:40:03,395 --> 00:40:06,300\nMike in our chat room described\nit as data mine, right?\n\n735\n00:40:06,300 --> 00:40:08,710\nThat's a common phrase you'll\nhear bounced around and\n\n736\n00:40:08,710 --> 00:40:11,070\nthat's what the business\nintelligence suite does.\n\n737\n00:40:11,070 --> 00:40:14,670\nYou may or may not need that, so that's\nactually a separate product, and Microsoft\n\n738\n00:40:14,670 --> 00:40:19,900\nactually has a separate certification just\nfor the BI piece inside of SQL server.\n\n739\n00:40:21,570 --> 00:40:25,320\nAll right, here's that next prerequisite\ncheck that happened and I can see I passed\n\n740\n00:40:25,320 --> 00:40:30,770\nseven more checks as it looks to make\nsure that we've got everything okay here.\n\n741\n00:40:30,770 --> 00:40:33,290\nSo it's just kind of double\nchecking that information, and\n\n742\n00:40:33,290 --> 00:40:35,790\nnow we'll actually move\ninto our true install.\n\n743\n00:40:37,910 --> 00:40:39,280\nAll right, so\nnow it's asking what I want to do.\n\n744\n00:40:39,280 --> 00:40:41,950\nDo I want to do a SQL Server\nfeature installation?\n\n745\n00:40:41,950 --> 00:40:44,740\nDo I want to install PowerPivot for\nSharePoint, right?\n\n746\n00:40:44,740 --> 00:40:47,990\nWhich allows SharePoint to interact\nwith data on your SQL Server.\n\n747\n00:40:47,990 --> 00:40:49,870\nOr do we want to install all features?\n\n748\n00:40:49,870 --> 00:40:51,130\nI'm just gonna do the SQL Server.\n\n749\n00:40:53,662 --> 00:40:56,660\nAll right, and\nnow what features do we want inside of it?\n\n750\n00:40:56,660 --> 00:40:58,410\nThere's a lot of features in here.\n\n751\n00:40:58,410 --> 00:41:02,260\nMost of which aren't on this exam,\nbut let me just run down the key ones.\n\n752\n00:41:02,260 --> 00:41:05,635\nIf you're setting up SQL Server,\nthe odds are you'll want a database.\n\n753\n00:41:05,635 --> 00:41:07,395\nMost people want a database.\n\n754\n00:41:07,395 --> 00:41:11,805\nSo that's the very first option right\nhere, the Database Engine Services, right?\n\n755\n00:41:11,805 --> 00:41:14,615\nSo almost everyone is\ngonna install that option.\n\n756\n00:41:14,615 --> 00:41:17,360\nand notice what's happening\nover here on my wizard.\n\n757\n00:41:17,360 --> 00:41:20,220\nIt's adding more steps to the installation\n\n758\n00:41:20,220 --> 00:41:22,510\nbecause I told it I want\nto create a database.\n\n759\n00:41:22,510 --> 00:41:26,210\nNow, you might ask yourself,\nwhy isn't that checked by default?\n\n760\n00:41:26,210 --> 00:41:30,130\nYou might want a SQL server that\ndoesn't host any databases.\n\n761\n00:41:30,130 --> 00:41:34,230\nYou might have a SQL server whose specific\njob is backing up other SQL servers.\n\n762\n00:41:34,230 --> 00:41:37,320\nOr you might have a server whose\nspecific job is business intelligence,\n\n763\n00:41:37,320 --> 00:41:38,920\nthe BI reporting suite.\n\n764\n00:41:38,920 --> 00:41:43,030\nSo it might not host the data,\nit might host the reporting piece, so\n\n765\n00:41:43,030 --> 00:41:46,080\nthat's why you might not\nhave a database server.\n\n766\n00:41:46,080 --> 00:41:47,570\nBut if you choose to do\nthe database server,\n\n767\n00:41:47,570 --> 00:41:48,820\nyou'll have some other choices here.\n\n768\n00:41:48,820 --> 00:41:50,800\nDo you want to enable replication?\n\n769\n00:41:50,800 --> 00:41:53,676\nAnd remember, we can always turn this\nstuff on later if we decide we want it.\n\n770\n00:41:53,676 --> 00:41:57,410\nDo we wanna do full text,\nindexing and search?\n\n771\n00:41:57,410 --> 00:41:58,992\nI'll talk about those in another episode.\n\n772\n00:41:58,992 --> 00:42:04,490\nDo I you want data quality services\nto check for invalid data inputs?\n\n773\n00:42:04,490 --> 00:42:05,960\nWe can add those features now.\n\n774\n00:42:05,960 --> 00:42:07,290\nWe can add them later if we wanna.\n\n775\n00:42:07,290 --> 00:42:09,080\nI'll leave them off for now.\n\n776\n00:42:09,080 --> 00:42:12,240\nAnalysis services and reporting services.\n\n777\n00:42:12,240 --> 00:42:14,570\nNow notice this one says like\nreporting services native.\n\n778\n00:42:14,570 --> 00:42:16,770\nThat's something that was\nbuilt into SQL Server.\n\n779\n00:42:16,770 --> 00:42:19,760\nBI is an add-on that gives\nyou additional features.\n\n780\n00:42:19,760 --> 00:42:21,310\nBut if I want to install these features,\n\n781\n00:42:21,310 --> 00:42:25,520\nthey allow you to analyze your data,\nextrapolate information, generate reports.\n\n782\n00:42:25,520 --> 00:42:27,180\nYou may, or may not, need these pieces..\n\n783\n00:42:28,560 --> 00:42:30,070\nThen there's other shared features.\n\n784\n00:42:30,070 --> 00:42:34,930\nThese are features that aren't necessary\nspecific to Microsoft SQL Server, but\n\n785\n00:42:34,930 --> 00:42:39,040\nare related to other products that\nMicrosoft sells and uses also.\n\n786\n00:42:39,040 --> 00:42:42,830\nBut, there is one important one in here,\nwhich are the management tools.\n\n787\n00:42:42,830 --> 00:42:45,310\nIf we're gonna be managing\nthis server through the GUI,\n\n788\n00:42:45,310 --> 00:42:47,520\nwe probably want these management tools.\n\n789\n00:42:47,520 --> 00:42:49,410\nIf you're gonna be managing\nit from the PowerShell,\n\n790\n00:42:49,410 --> 00:42:50,850\nyou actually don't need\nthe management tools.\n\n791\n00:42:50,850 --> 00:42:54,150\nYou can just use the PowerShell for that,\nand you get pretty much what you need.\n\n792\n00:42:55,940 --> 00:42:56,620\nAll right.\n\n793\n00:42:56,620 --> 00:43:01,520\nSome of the other options that are in here\nare SQL Server data tools if we're gonna\n\n794\n00:43:01,520 --> 00:43:05,210\nbe running software that needs to be\na client and connect directly into SQL.\n\n795\n00:43:05,210 --> 00:43:08,210\nYou've got your reporting services for\nSharePoint.\n\n796\n00:43:08,210 --> 00:43:08,950\nWhat else do we have?\n\n797\n00:43:08,950 --> 00:43:10,490\nIntegration Services.\n\n798\n00:43:10,490 --> 00:43:14,650\nIntegration Services is if we want to\nshare data between database servers.\n\n799\n00:43:14,650 --> 00:43:17,090\nThat aren't necessarily Microsoft, right.\n\n800\n00:43:17,090 --> 00:43:20,170\nMaybe you've got an Oracle server,\nand a Microsoft SQL Server, and\n\n801\n00:43:20,170 --> 00:43:21,950\nyou wanna exchange data between them.\n\n802\n00:43:21,950 --> 00:43:24,040\nYou can use integration services to do it.\n\n803\n00:43:24,040 --> 00:43:29,465\nOr maybe once a night, somebody\npublishes a CSV file to an FTP server.\n\n804\n00:43:29,465 --> 00:43:33,515\nAnd you need to download that CSV server\nand update a table with the data in it.\n\n805\n00:43:33,515 --> 00:43:34,825\nGet the STSV file.\n\n806\n00:43:34,825 --> 00:43:36,505\nWell, integration services can do that.\n\n807\n00:43:36,505 --> 00:43:39,175\nWe can create a job that will grab\nthat file from an FTP server and\n\n808\n00:43:39,175 --> 00:43:40,555\nload it into our database.\n\n809\n00:43:40,555 --> 00:43:42,445\nIt's really powerful, really cool stuff.\n\n810\n00:43:42,445 --> 00:43:43,618\nSo you may or may not want that.\n\n811\n00:43:45,266 --> 00:43:50,005\nAny other options in\nhere that you might need.\n\n812\n00:43:50,005 --> 00:43:52,470\nDistributed replay, that's if you're doing\n\n813\n00:43:52,470 --> 00:43:56,350\nSQL servers in more than one geographic\nlocation, and you want them in lock step.\n\n814\n00:43:56,350 --> 00:43:59,050\nWhere a change made to\none is made to the other.\n\n815\n00:43:59,050 --> 00:44:02,840\nYou can do replay where\nsomebody makes a change to one,\n\n816\n00:44:02,840 --> 00:44:06,190\nthe change is sent to the other side,\nand the same change is applied there.\n\n817\n00:44:06,190 --> 00:44:09,349\nThat way if you lose one server, you've\ngot this mirror image somewhere else.\n\n818\n00:44:10,450 --> 00:44:12,290\nSo we pick and\nchoose the features that we want there.\n\n819\n00:44:12,290 --> 00:44:14,630\nI'm just going to choose\nthe management tools.\n\n820\n00:44:14,630 --> 00:44:17,620\nAnd we adjust where we want to install to.\n\n821\n00:44:17,620 --> 00:44:21,440\nMost people install SQL Server\nright to the same drive as the OS.\n\n822\n00:44:21,440 --> 00:44:23,970\nYou might be tempted to move\nit off to another drive.\n\n823\n00:44:23,970 --> 00:44:25,416\nYou certainly can.\n\n824\n00:44:25,416 --> 00:44:30,370\nBut, if you've spec your server right,\nthe SQL Server engine itself, will\n\n825\n00:44:30,370 --> 00:44:35,360\nbe cached into RAM, and it will rarely\ntouch the hard drive for actual execution.\n\n826\n00:44:35,360 --> 00:44:39,000\nYour databases on the other hand, those\nyou'll wanna move off somewhere else.\n\n827\n00:44:39,000 --> 00:44:40,290\nBut that's not what it's asking for.\n\n828\n00:44:40,290 --> 00:44:44,090\nIt's just asking where we're gonna\nbe installing the SQL Server engine.\n\n829\n00:44:44,090 --> 00:44:47,817\nAnd so you can specify that location,\nand it's got the 64-bit, and\n\n830\n00:44:47,817 --> 00:44:49,817\nthe 32-bit version directories.\n\n831\n00:44:52,197 --> 00:44:56,249\nThen, it's gonna ask about\nmy installation rules, so\n\n832\n00:44:56,249 --> 00:44:59,540\nwe'll get a screen here in just a moment.\n\n833\n00:44:59,540 --> 00:45:00,880\nIt's saying please wait.\n\n834\n00:45:00,880 --> 00:45:03,090\nIt's gotta check my server\nrolls in the background, and\n\n835\n00:45:03,090 --> 00:45:06,190\nsee if there's any rolls or\nfeatures we need to add to Windows Server.\n\n836\n00:45:06,190 --> 00:45:07,880\nI shouldn't have any.\n\n837\n00:45:07,880 --> 00:45:11,780\nSome of the features you choose, like if\nyou do reporting services, it needs IIS,\n\n838\n00:45:11,780 --> 00:45:12,990\nit needs a web server.\n\n839\n00:45:12,990 --> 00:45:16,600\nAnd so, in that check right there, where\nit saw that I didn't have IIS installed,\n\n840\n00:45:16,600 --> 00:45:19,100\nand it would've said, okay we need\nto install it now, is that okay?\n\n841\n00:45:19,100 --> 00:45:20,520\nJust hit okay and does it, right.\n\n842\n00:45:20,520 --> 00:45:21,720\nSo we kinda, kinda nice.\n\n843\n00:45:21,720 --> 00:45:22,296\nAll right,\n\n844\n00:45:22,296 --> 00:45:26,170\nnow it's just checking my installation\nrules based on the choices that I made.\n\n845\n00:45:26,170 --> 00:45:28,850\nThis is my third prerequisite check,\nright?\n\n846\n00:45:28,850 --> 00:45:31,430\nNow that it knows a little bit\nmore about what I'm doing,\n\n847\n00:45:31,430 --> 00:45:33,180\ndo I meet the minimum requirements?\n\n848\n00:45:33,180 --> 00:45:34,583\nAnd so it's double checking that.\n\n849\n00:45:38,693 --> 00:45:45,100\nOkay, now most of the options I've talked\nabout, I said we could change them later.\n\n850\n00:45:45,100 --> 00:45:47,940\nNow we're starting to get into some\noptions that we can't change later.\n\n851\n00:45:47,940 --> 00:45:50,610\nSo you want to make sure\nyou get them right here.\n\n852\n00:45:51,700 --> 00:45:56,580\nThis is asking me, since I'm doing a new\nSQL Server install, what am I doing?\n\n853\n00:45:56,580 --> 00:45:57,930\nA defaulting instance?\n\n854\n00:45:57,930 --> 00:45:58,850\nOr a named instance?\n\n855\n00:46:00,270 --> 00:46:01,180\nWhat is an instance.\n\n856\n00:46:01,180 --> 00:46:05,350\nWell, I mentioned earlier that we can\nrun SQL 2012 side by side with SQL\n\n857\n00:46:05,350 --> 00:46:07,450\nserver 2008, or 2005 for that matter.\n\n858\n00:46:07,450 --> 00:46:11,320\nYou can run them,\nactually I don't think you can do 2005.\n\n859\n00:46:11,320 --> 00:46:14,280\nBut you can definitely do 2008 and\n2012 side by side.\n\n860\n00:46:14,280 --> 00:46:17,950\nThe reason you can do 2005\nis the host OS requirements.\n\n861\n00:46:17,950 --> 00:46:20,170\nI don't think all three will run on 2012.\n\n862\n00:46:20,170 --> 00:46:23,380\nBut when you install side by side, how do\nthey know not to bump into each other?\n\n863\n00:46:23,380 --> 00:46:25,330\nHow do they tell each other apart?\n\n864\n00:46:25,330 --> 00:46:30,170\nWell, when you install SQL,\nits given what's called an instance ID.\n\n865\n00:46:30,170 --> 00:46:33,760\nThe instance ID is what\nseparates that installation\n\n866\n00:46:33,760 --> 00:46:35,270\nfrom your other installations.\n\n867\n00:46:35,270 --> 00:46:38,600\nIt creates a wall,\nan isolation between them.\n\n868\n00:46:38,600 --> 00:46:41,470\nNow if you're just installing\none copy of SQL Server,\n\n869\n00:46:41,470 --> 00:46:43,370\nyou do what's called a default instance.\n\n870\n00:46:43,370 --> 00:46:47,170\nAnd the default instance is\nidentified as the name of the server.\n\n871\n00:46:47,170 --> 00:46:52,100\nSo, my server is Win-SQL01.\n\n872\n00:46:52,100 --> 00:46:55,190\nSo, if somebody wants to\nconnect my default instance,\n\n873\n00:46:55,190 --> 00:46:59,300\nthey just point their client at Win-SQL01.\n\n874\n00:46:59,300 --> 00:47:01,210\nThat server name, and\nthey'll connect to it and\n\n875\n00:47:01,210 --> 00:47:03,520\nthey'll connect to my default instance.\n\n876\n00:47:03,520 --> 00:47:05,332\nBut if I'm running side by side,\n\n877\n00:47:05,332 --> 00:47:09,301\nand someone points to my server name,\nwwho does it know to connect with?\n\n878\n00:47:09,301 --> 00:47:09,925\nIt doesn't.\n\n879\n00:47:09,925 --> 00:47:14,310\nSo somebody,\none instance has to be the default.\n\n880\n00:47:14,310 --> 00:47:16,200\nAnd that's what it's telling\nme it's gonna do here.\n\n881\n00:47:16,200 --> 00:47:19,210\nIt does have an instance name,\nMS SQL Server.\n\n882\n00:47:19,210 --> 00:47:20,220\nBut it's the default.\n\n883\n00:47:20,220 --> 00:47:24,980\nIf somebody points at my server name,\nthey'll connect to this instance.\n\n884\n00:47:24,980 --> 00:47:29,029\nIf this is a second one,\nmaybe I'm experimenting,\n\n885\n00:47:29,029 --> 00:47:33,917\nI might choose to do a named\ninstance called SQL 2012 test.\n\n886\n00:47:33,917 --> 00:47:38,406\nNow, if somebody wants to\nconnect to this database,\n\n887\n00:47:38,406 --> 00:47:43,296\ninstead of connecting to my\nserver name of WIN-SQL01,\n\n888\n00:47:43,296 --> 00:47:48,708\nthey'll have to point to\nWIN-\\SQL01\\SQL2012test.\n\n889\n00:47:48,708 --> 00:47:51,917\nThey'll have to identify that\ninstance name when they connect.\n\n890\n00:47:51,917 --> 00:47:54,500\nThat's how we're able\nto separate these out.\n\n891\n00:47:54,500 --> 00:47:58,333\nJust based on the server name,\nand how we pass that ID.\n\n892\n00:47:58,333 --> 00:48:02,400\nBut I'm gonna do a default install\nsince this is the very first one.\n\n893\n00:48:02,400 --> 00:48:04,459\nWe'll add more later.], all right.\n\n894\n00:48:04,459 --> 00:48:07,240\nIt's got the instance root directory.\n\n895\n00:48:07,240 --> 00:48:11,760\nThese need to be separate instances so\nwhen it installs it, it's gonna ask for\n\n896\n00:48:11,760 --> 00:48:12,700\na place to put it.\n\n897\n00:48:12,700 --> 00:48:16,660\nWhen you do other instances they can go\nin that same directory if you want or\n\n898\n00:48:16,660 --> 00:48:20,430\nyou may wanna separate them out into\ntheir completely own separate directory.\n\n899\n00:48:20,430 --> 00:48:21,690\nIt's up to you.\n\n900\n00:48:21,690 --> 00:48:22,870\nI'll stick with that one.\n\n901\n00:48:22,870 --> 00:48:25,730\nIf I already had instances,\nthey'd be listed right here.\n\n902\n00:48:25,730 --> 00:48:26,450\nI don't.\nAll right.\n\n903\n00:48:27,910 --> 00:48:32,700\nSo I'll just hit Next, and then it's\ngonna go and check for my disk space.\n\n904\n00:48:32,700 --> 00:48:34,630\nDo I have enough hard drive\nspace to do the install?\n\n905\n00:48:34,630 --> 00:48:36,220\nI've got plenty, so\nit'll be fine with that.\n\n906\n00:48:37,460 --> 00:48:39,880\nBeyond that,\nwe just have a few other little you know,\n\n907\n00:48:39,880 --> 00:48:41,180\nchecks that we have to make.\n\n908\n00:48:41,180 --> 00:48:43,964\nIt's actually telling me 2.6 gigs\nrequired for this install, so\n\n909\n00:48:43,964 --> 00:48:45,795\na little bit bigger than\nwhat I said earlier.\n\n910\n00:48:48,884 --> 00:48:49,778\nAll right.\n\n911\n00:48:49,778 --> 00:48:54,970\nThis screen right here is the most\nimportant screen in the install.\n\n912\n00:48:54,970 --> 00:48:57,160\nThis is the screen where you\ncan make a lot of mistakes,\n\n913\n00:48:57,160 --> 00:49:01,290\nsome of which can be fixed,\nsome of which are a nightmare to fix.\n\n914\n00:49:01,290 --> 00:49:04,510\nOn this screen it's asking us\nabout our service accounts.\n\n915\n00:49:04,510 --> 00:49:09,450\nWhen SQL runs, it runs and\nit uses various permissions on the system.\n\n916\n00:49:09,450 --> 00:49:12,060\nAnd it wants to have dedicated\naccounts to do that.\n\n917\n00:49:12,060 --> 00:49:15,340\nNow, in the past Microsoft relied\non us to put those in, and\n\n918\n00:49:15,340 --> 00:49:16,670\na lot of administrators didn't do it.\n\n919\n00:49:16,670 --> 00:49:20,110\nA lot of people neglected to follow\nproper security practices here.\n\n920\n00:49:20,110 --> 00:49:23,340\nSo, Microsoft has now\nintroduced some neat features.\n\n921\n00:49:23,340 --> 00:49:25,620\nAnd these are features that are present\non Window's Server 20,12, not 2008.\n\n922\n00:49:25,620 --> 00:49:30,090\nWe now have what are called\nManaged Service Accounts.\n\n923\n00:49:30,090 --> 00:49:33,580\nSo, its gonna create two\nManaged Accounts for\n\n924\n00:49:33,580 --> 00:49:39,712\nus called ntservice/sequelserveragent and\nntservice/mssqlserver.\n\n925\n00:49:39,712 --> 00:49:42,540\nAll right, one for\nthe server itself and one for the agent.\n\n926\n00:49:42,540 --> 00:49:46,500\nNow the agent it's a little service\nthat runs in the background and\n\n927\n00:49:46,500 --> 00:49:48,230\nit's the one that's doing automated tasks.\n\n928\n00:49:48,230 --> 00:49:51,160\nIt does your backups,\nit does your performance optimizations,\n\n929\n00:49:51,160 --> 00:49:55,680\nany scheduled task you create for SQLl\nis being done by the SQL Server agent.\n\n930\n00:49:55,680 --> 00:49:56,350\nAll right.\n\n931\n00:49:56,350 --> 00:49:59,590\nYou don't have to have the agent,\nyou might chose to turn it off.\n\n932\n00:49:59,590 --> 00:50:01,730\nNotice here it's set to manual, right?\n\n933\n00:50:01,730 --> 00:50:05,170\nIt's not gonna run automatically\nbecause I don't have any jobs yet.\n\n934\n00:50:05,170 --> 00:50:08,830\nBut if I know I'm gonna be using it,\nI might wanna change that to automatic.\n\n935\n00:50:08,830 --> 00:50:12,260\nBecause it's running jobs like backups,\nit needs permissions.\n\n936\n00:50:12,260 --> 00:50:13,390\nSo they do a managed account,\n\n937\n00:50:13,390 --> 00:50:17,220\nand the managed account will change\nits password automatically and\n\n938\n00:50:17,220 --> 00:50:20,620\nuse very complex passwords so\nthat you don't have to worry about it.\n\n939\n00:50:20,620 --> 00:50:23,200\nThat you know that that's gonna\nbe a securely managed account\n\n940\n00:50:23,200 --> 00:50:27,190\nversus when we create a service account,\na lot of times we set a password and\n\n941\n00:50:27,190 --> 00:50:27,840\nthen never change it.\n\n942\n00:50:27,840 --> 00:50:31,550\nSo it's had the same password for\nfive years or whatever, bad practices.\n\n943\n00:50:31,550 --> 00:50:32,820\nHere, it'll make sure that it's better.\n\n944\n00:50:34,140 --> 00:50:36,640\nYou might need to override this, though.\n\n945\n00:50:36,640 --> 00:50:42,400\nThat service account is a local account\non this installation of Windows Server.\n\n946\n00:50:42,400 --> 00:50:45,880\nIf my agent is gonna be running\njobs on multiple servers,\n\n947\n00:50:45,880 --> 00:50:48,610\nI may need to replace that\nwith a domain account.\n\n948\n00:50:48,610 --> 00:50:50,510\nSo I would need to go to my\nactive directory domain and\n\n949\n00:50:50,510 --> 00:50:52,910\ncreate the service account there and\nthen list it.\n\n950\n00:50:52,910 --> 00:50:55,210\nBut as it stands,\nit's just a local account.\n\n951\n00:50:55,210 --> 00:50:57,330\nIf you've got a stand alone server,\nthen that's fine.\n\n952\n00:50:59,450 --> 00:51:02,410\nThe other service on here\nis the SQL Server browser.\n\n953\n00:51:02,410 --> 00:51:06,800\nOn a SQL Server, you don't normally\nneed this, so it is disabled.\n\n954\n00:51:06,800 --> 00:51:12,090\nBut on a client, if you want to be able\nto fire up the Microsoft, the studio.\n\n955\n00:51:12,090 --> 00:51:15,660\nThe SQL management studio,\nand browse the network and\n\n956\n00:51:15,660 --> 00:51:19,340\nfind SQL Servers that are out there,\nyou need the browser server.\n\n957\n00:51:19,340 --> 00:51:22,350\nMost people don't want to allow that,\nbecause there is a lot of attacks.\n\n958\n00:51:22,350 --> 00:51:26,210\nWhere people scan your network and\nfind your SQL Servers, locate them, and\n\n959\n00:51:26,210 --> 00:51:27,540\nthen start to attack.\n\n960\n00:51:27,540 --> 00:51:30,850\nSo we don't normally want that,\nand it's disabled.\n\n961\n00:51:30,850 --> 00:51:31,530\nAll right.\n\n962\n00:51:31,530 --> 00:51:33,400\nBut if this is on a private network.\n\n963\n00:51:33,400 --> 00:51:36,820\nA network that you trust, and you want to\nbe able to browse to find those servers,\n\n964\n00:51:36,820 --> 00:51:40,130\nyou can choose to turn that on,\nand set it to automatic here.\n\n965\n00:51:40,130 --> 00:51:43,030\nAnd now, people will be able\nto browse to find this server.\n\n966\n00:51:43,030 --> 00:51:44,650\nAnd if you're running\nthe management tools here,\n\n967\n00:51:44,650 --> 00:51:46,710\nyou'll be able to browse to\nfind other servers, right?\n\n968\n00:51:46,710 --> 00:51:48,119\nThat's what the browser service does.\n\n969\n00:51:49,990 --> 00:51:51,970\nAll right, but\nI'm going to leave mine disabled,\n\n970\n00:51:51,970 --> 00:51:56,220\nI don't really use that ever anymore,\nbut I'll leave it at disabled.\n\n971\n00:51:57,630 --> 00:52:01,750\nNow, the important one though,\nthe important object that we can't change,\n\n972\n00:52:01,750 --> 00:52:04,990\nall of those we can change later, but the\nimportant one that I want you guys to pay\n\n973\n00:52:04,990 --> 00:52:08,430\nattention to is this little tiny tab up\nhere that you might have over looked.\n\n974\n00:52:08,430 --> 00:52:12,010\nA lot of people don't even realize\nthis tab here, it's the collation tab.\n\n975\n00:52:13,150 --> 00:52:17,800\nCollation is really, really,\nreally important because it\n\n976\n00:52:17,800 --> 00:52:22,750\nchanges the way that SQL reflects data\nback to the client and that's important.\n\n977\n00:52:22,750 --> 00:52:26,540\nNow I want to make sure I do\njustice with explaining this, and\n\n978\n00:52:26,540 --> 00:52:29,320\nlooking at the timer I've already run\nshort on the time of this segment.\n\n979\n00:52:29,320 --> 00:52:31,440\nSo, why don't we do this,\nwhy don't we stop and take a break.\n\n980\n00:52:31,440 --> 00:52:34,830\nAnd when we get back, I'll show you\nthe example of what collation is,\n\n981\n00:52:34,830 --> 00:52:37,940\nwhy it's important, and what we need to\nthink about when we go to set this up.\n\n982\n00:52:37,940 --> 00:52:40,147\nSo stay tuned, we'll be back after this.\n\n983\n00:52:40,147 --> 00:52:47,578\n[MUSIC]\n\n984\n00:52:47,578 --> 00:52:49,550\nAll right, welcome back everybody.\n\n985\n00:52:49,550 --> 00:52:51,610\nSo I left us with a cliffhanger, right?\n\n986\n00:52:51,610 --> 00:52:52,350\nCollation.\n\n987\n00:52:52,350 --> 00:52:53,180\nWhat the heck is that?\n\n988\n00:52:53,180 --> 00:52:55,610\nWell, let me show you an example.\n\n989\n00:52:55,610 --> 00:52:57,890\nWhen you store data into a database,\n\n990\n00:52:57,890 --> 00:53:01,260\nit has to know how you want it arranged,\nand when you\n\n991\n00:53:01,260 --> 00:53:04,740\nget data out of the database it has to\nknow how we want that data arranged.\n\n992\n00:53:04,740 --> 00:53:08,210\nBy default it's doing a raw method, so\nthe data is stored in the order that you\n\n993\n00:53:08,210 --> 00:53:11,490\nput it in, and when you run queries it's\nreturning it to you in the order that\n\n994\n00:53:11,490 --> 00:53:15,330\nit was entered in the database, but\nvery often, we're gonna manipulate that.\n\n995\n00:53:15,330 --> 00:53:19,750\nWe're gonna do things like change the sort\norder and other things of that nature.\n\n996\n00:53:19,750 --> 00:53:24,750\nWell that's where things start to get\nreally complex because across the world,\n\n997\n00:53:24,750 --> 00:53:29,110\nthere are many different languages and\ninside of those languages,\n\n998\n00:53:29,110 --> 00:53:34,280\nthere are many different dialects,\nand all of that introduces variety.\n\n999\n00:53:34,280 --> 00:53:38,290\nWell SQL Server or\nany database server doesn't like variety.\n\n1000\n00:53:38,290 --> 00:53:42,910\nIt likes things to operate in a consistent\nmanner, so that when we return data to\n\n1001\n00:53:42,910 --> 00:53:47,150\nuser one and we return that same data to\nuser two, they're both looking at the same\n\n1002\n00:53:47,150 --> 00:53:51,820\ndata presented the same way and\ncollation is what helps with that.\n\n1003\n00:53:51,820 --> 00:53:53,580\nLet me stop talking in abstract terms and\n\n1004\n00:53:53,580 --> 00:53:55,660\nactually show you\nan example of what I mean.\n\n1005\n00:53:55,660 --> 00:53:58,230\nHere's an excel spreadsheet that\nI just whipped up real quick.\n\n1006\n00:53:58,230 --> 00:54:01,190\nThis is my limited excel\ntechnical knowledge\n\n1007\n00:54:02,490 --> 00:54:04,230\nI've got the alphabet in here, right?\n\n1008\n00:54:04,230 --> 00:54:06,770\na, b, c, d, e, f, g, h, i, j, k.\n\n1009\n00:54:06,770 --> 00:54:07,660\nWell, we know.\n\n1010\n00:54:07,660 --> 00:54:09,220\nWe assume that I know the alphabet.\n\n1011\n00:54:09,220 --> 00:54:11,740\nSo here's the alphabet.\n\n1012\n00:54:11,740 --> 00:54:13,720\nWell, here's the alphabet for me.\n\n1013\n00:54:13,720 --> 00:54:17,540\nBecause I'm in the United States,\nand I speak English.\n\n1014\n00:54:17,540 --> 00:54:19,500\nAnd this is the English alphabet.\n\n1015\n00:54:19,500 --> 00:54:20,499\nThere's 26 letters.\n\n1016\n00:54:22,140 --> 00:54:24,000\nAll right.\nBut what about\n\n1017\n00:54:24,000 --> 00:54:25,000\nvariations on those letters?\n\n1018\n00:54:25,000 --> 00:54:29,130\nIf I reach out to my database server and\nI say, give me all of the results from\n\n1019\n00:54:29,130 --> 00:54:34,520\nthis table and sort by last name,\nalphabetically descending, all right?\n\n1020\n00:54:34,520 --> 00:54:37,220\nIt will go in, it will take them and\nit will start to sort them and\n\n1021\n00:54:37,220 --> 00:54:38,080\nA will be first and\n\n1022\n00:54:38,080 --> 00:54:42,030\nZ will be last or if I go the other way\naround Z will be first and A will be last.\n\n1023\n00:54:42,030 --> 00:54:45,460\nIt knows that order,\nit's the alphabet, right?\n\n1024\n00:54:45,460 --> 00:54:47,980\nBut what if I have some numbers in there?\n\n1025\n00:54:47,980 --> 00:54:49,850\nAll right, well, numbers, we know numbers.\n\n1026\n00:54:49,850 --> 00:54:51,260\nNumbers zero through nine.\n\n1027\n00:54:51,260 --> 00:54:55,144\nAlright?\nHere's 0 through 9, where 0 is lowest and\n\n1028\n00:54:55,144 --> 00:54:56,750\n9 is highest.\n\n1029\n00:54:56,750 --> 00:54:59,740\nSo I might want to represent\nthat like this, 0 to 9.\n\n1030\n00:54:59,740 --> 00:55:05,624\nBut, what if I'm alphabetizing or sorting\na column that has letters and numbers?\n\n1031\n00:55:05,624 --> 00:55:06,530\nAll right?\n\n1032\n00:55:06,530 --> 00:55:10,740\nIs it A through Z and\nthen 0 through 9 stuck down at the end?\n\n1033\n00:55:11,930 --> 00:55:17,160\nOr is it 0 through 9, followed by\nA through Z stuck in the end, right?\n\n1034\n00:55:17,160 --> 00:55:20,320\nWhich comes first, do numbers come\nfirst or do letters come first?\n\n1035\n00:55:20,320 --> 00:55:21,820\nI don't know, right.\n\n1036\n00:55:21,820 --> 00:55:25,940\nImagine, if you were querying against\nfive different databases, and\n\n1037\n00:55:25,940 --> 00:55:29,030\nsome of them would give you numbers\nfirst followed by letters, and\n\n1038\n00:55:29,030 --> 00:55:33,430\nothers gave you letters first followed by\nnumbers you'd have inconsistencies, right?\n\n1039\n00:55:33,430 --> 00:55:37,250\nIt get's even more complex when you\nstart to bring in symbols, right?\n\n1040\n00:55:37,250 --> 00:55:39,650\nWhich comes first, a /, or a \\?\n\n1041\n00:55:40,850 --> 00:55:45,345\nI don't know, an + symbol, a # symbol,\nhow do you know which one comes first?\n\n1042\n00:55:45,345 --> 00:55:49,085\nFirst or last when you're sorting,\nwhen you're alphabetizing, all right?\n\n1043\n00:55:49,085 --> 00:55:50,815\nWhat about International alphabets, right?\n\n1044\n00:55:50,815 --> 00:55:53,167\nThis is the US English\nalphabet right here, right?\n\n1045\n00:55:53,167 --> 00:55:58,375\nA through Z used by,\nwell not just US English, right?\n\n1046\n00:55:58,375 --> 00:56:00,833\nThe German alphabet is the same,\nI believe.\n\n1047\n00:56:00,833 --> 00:56:03,148\nBut there are alphabets\nthat aren't the same and\n\n1048\n00:56:03,148 --> 00:56:05,870\nit might be super different\nlike the Cyrillic alphabet.\n\n1049\n00:56:05,870 --> 00:56:11,120\nIf you're a Russian viewer or\nEastern European viewer\n\n1050\n00:56:11,120 --> 00:56:14,220\nyou might use the Cyrillic alphabet where\nyou have completely different characters.\n\n1051\n00:56:14,220 --> 00:56:15,788\nYou don't even use these same letters.\n\n1052\n00:56:15,788 --> 00:56:17,609\nOr Chinese,\n\n1053\n00:56:17,609 --> 00:56:22,430\nright, you might have the Chinese\ncharacters I think the Kanji or whatever.\n\n1054\n00:56:22,430 --> 00:56:26,033\nI'm not well versed in that stuff but\nthe different characters from that or\n\n1055\n00:56:26,033 --> 00:56:28,779\nmight be subtle differences\nlike the Spanish alphabet,\n\n1056\n00:56:28,779 --> 00:56:31,369\nthe Spanish alphabet has\ntwo extra letters, right?\n\n1057\n00:56:31,369 --> 00:56:36,976\nIt has the [FOREIGN] and\nthe [FOREIGN] right?\n\n1058\n00:56:36,976 --> 00:56:40,430\nThese are two extra characters\nin the Spanish alphabet.\n\n1059\n00:56:40,430 --> 00:56:46,730\nSo, the double l and the n with the tilde\non top, where's that fall in the alphabet?\n\n1060\n00:56:46,730 --> 00:56:51,295\nThe [FOREIGN] is that before or after\nthe n, and the double l, the [FOREIGN],\n\n1061\n00:56:51,295 --> 00:56:53,870\nis that before or after the l?\n\n1062\n00:56:53,870 --> 00:56:55,040\nI don't know.\n\n1063\n00:56:55,040 --> 00:56:59,190\nThese are all questions that\nare answered by our collation.\n\n1064\n00:56:59,190 --> 00:57:04,950\nWhen you set up your database server, it's\nasking you to pick a default collation for\n\n1065\n00:57:04,950 --> 00:57:08,130\nyour database engine and\nthat's the one it's gonna run.\n\n1066\n00:57:08,130 --> 00:57:11,280\nYou can override it on\na per database level but\n\n1067\n00:57:11,280 --> 00:57:14,170\nthis is gonna be the default and\nthis is important.\n\n1068\n00:57:14,170 --> 00:57:19,440\nNow, in older versions of SQL like way\nback when SQL 7, it had a default.\n\n1069\n00:57:19,440 --> 00:57:22,850\nMost people didn't even realize it\nwas there, just ignored it, and\n\n1070\n00:57:22,850 --> 00:57:25,980\nblew right through the wizard and that's\nthe temptation here because it's stuffed\n\n1071\n00:57:25,980 --> 00:57:27,450\naway in this little back tab, right?\n\n1072\n00:57:27,450 --> 00:57:29,320\nI could just breeze right past it.\n\n1073\n00:57:29,320 --> 00:57:32,590\nBut there was a change\nin between SQL 7 and\n\n1074\n00:57:32,590 --> 00:57:35,330\nSQL 2000 when they changed\nthe default collation.\n\n1075\n00:57:35,330 --> 00:57:38,710\nAnd ever since then it's\nbeen on people's radar.\n\n1076\n00:57:38,710 --> 00:57:42,470\nHey, when I deploy a new version of SQL,\nI need to look look at the collation of my\n\n1077\n00:57:42,470 --> 00:57:46,910\nold server and make sure the collation\nof my new server matches, so I can just\n\n1078\n00:57:46,910 --> 00:57:50,150\nbring the data right over and everything\nwill run the same way, all right.\n\n1079\n00:57:50,150 --> 00:57:51,940\nNow if your old server\nwent with the default,\n\n1080\n00:57:51,940 --> 00:57:54,440\nwhich is this SQL_Latin1_General, right?\n\n1081\n00:57:54,440 --> 00:57:57,210\nIf it went with that default,\nthen you're fine.\n\n1082\n00:57:57,210 --> 00:58:00,310\nBut if your other server\nhas a different collation,\n\n1083\n00:58:00,310 --> 00:58:01,960\nyou'll want this one to match it.\n\n1084\n00:58:01,960 --> 00:58:05,360\nAnd if you go to Customize here,\nyou'll see where we got this list and\n\n1085\n00:58:05,360 --> 00:58:07,150\nit's pretty big, alright.\n\n1086\n00:58:07,150 --> 00:58:09,230\nAnd if you look in here\nyou'll see there's Latin,\n\n1087\n00:58:09,230 --> 00:58:12,860\nLithuanian, Polish, Solvac,\nSwedish, Ukrainian.\n\n1088\n00:58:12,860 --> 00:58:16,750\nRight, all these different ones and\nmost of them are centered around\n\n1089\n00:58:16,750 --> 00:58:20,710\nhaving different alphabets and\nhow you wanted that data represented.\n\n1090\n00:58:20,710 --> 00:58:22,460\nSo you'll see a ton in there.\n\n1091\n00:58:22,460 --> 00:58:26,670\nMany of them are represented with the ANSI\ncodes, their national standards codes so\n\n1092\n00:58:26,670 --> 00:58:30,300\nyou'll see those kinda laid in here but\nyou can kind of pick and choose.\n\n1093\n00:58:30,300 --> 00:58:34,240\nAnd you can even pick by name if you want,\nif you go up here and go to country.\n\n1094\n00:58:34,240 --> 00:58:39,700\nSo there's the Chinese ones,\nCzech, German, Hungarian.\n\n1095\n00:58:39,700 --> 00:58:43,320\nThey're all in here, and\nthe variations of that.\n\n1096\n00:58:43,320 --> 00:58:44,540\nSo you've got that choice.\n\n1097\n00:58:45,950 --> 00:58:48,820\nIf you set the collation now,\n\n1098\n00:58:48,820 --> 00:58:52,460\nyou're life will be way easier\nthan trying to set it later on.\n\n1099\n00:58:52,460 --> 00:58:55,860\nThis is one of those things where you\ncan change it later, but it's a pain.\n\n1100\n00:58:55,860 --> 00:58:58,430\nI mean, you really end up having\nto delete your databases and\n\n1101\n00:58:58,430 --> 00:59:02,720\nrecreate them to get a proper changeover,\nso we're gonna make sure we get that\n\n1102\n00:59:02,720 --> 00:59:04,840\ncollation set correctly\nhere in the beginning.\n\n1103\n00:59:04,840 --> 00:59:08,070\nAgain, if you're doing all defaults,\nthen you really don't worry about it, and\n\n1104\n00:59:08,070 --> 00:59:10,420\nthat's kind of why this tab\nis tucked away in the back so\n\n1105\n00:59:10,420 --> 00:59:12,400\nthat people can easily overlook it.\n\n1106\n00:59:12,400 --> 00:59:13,940\nIt's Microsoft's way of saying,\n\n1107\n00:59:13,940 --> 00:59:16,900\nif you don't know what this is,\ndon't mess with it, right?\n\n1108\n00:59:16,900 --> 00:59:18,939\nBut for the exam,\nwe need to know what that is.\n\n1109\n00:59:19,950 --> 00:59:23,160\nAll right, then the rest of\nthe wizard's pretty straightforward.\n\n1110\n00:59:23,160 --> 00:59:26,440\nOn the next one here, it's asking\nme about my authentication, right?\n\n1111\n00:59:26,440 --> 00:59:29,320\nHow do I want to authenticate\nusers on the system?\n\n1112\n00:59:29,320 --> 00:59:33,210\nThere's two ways to do authentication\nin Microsoft SQL Server.\n\n1113\n00:59:33,210 --> 00:59:37,950\nOne is to have your windows accounts,\nright, either user accounts on the windows\n\n1114\n00:59:37,950 --> 00:59:41,040\nserver installation you installed SQL on,\nor in the active directory.\n\n1115\n00:59:41,040 --> 00:59:44,510\nRight so those are windows user accounts\nand that's usually the best way to do it,\n\n1116\n00:59:44,510 --> 00:59:47,210\nbecause we have password policies and\nall this other cool stuff to manage\n\n1117\n00:59:47,210 --> 00:59:50,510\nthose accounts, and\nusers can have a single sign on.\n\n1118\n00:59:50,510 --> 00:59:53,689\nOne account they can use to log into\nthe computer and access the database.\n\n1119\n00:59:54,860 --> 00:59:59,490\nBut, there are times where we want to\ngive somebody access to the database, but\n\n1120\n00:59:59,490 --> 01:00:02,270\nnot give them any access\nto our Windows environment.\n\n1121\n01:00:02,270 --> 01:00:05,620\nAnd for that we can do what's\ncalled SQLserver authentication,\n\n1122\n01:00:05,620 --> 01:00:09,740\nwhere the user accounts and passwords\nare stored right in your SQL server.\n\n1123\n01:00:09,740 --> 01:00:13,005\nIf we want to do that we have to\nchoose mixed mode authentication.\n\n1124\n01:00:13,005 --> 01:00:17,530\nSQLserver will always support Windows\nauthentication, no matter what you choose.\n\n1125\n01:00:17,530 --> 01:00:20,710\nSo we're really just saying,\ndo we just want Windows, or\n\n1126\n01:00:20,710 --> 01:00:23,610\ndo we want to add on SQLserver\nauthentication also?\n\n1127\n01:00:24,650 --> 01:00:28,390\nIf you choose that,\none user account is created by default and\n\n1128\n01:00:28,390 --> 01:00:32,570\nthat user account is called SA,\nright, the System Administrator.\n\n1129\n01:00:32,570 --> 01:00:36,810\nThe SA account is the superuser for\nyour database server.\n\n1130\n01:00:36,810 --> 01:00:40,490\nAnd when somebody's trying to brute force\nattack your server, they almost always\n\n1131\n01:00:40,490 --> 01:00:44,320\nare brute forcing with the user account\nSA, or root, those are the two you see.\n\n1132\n01:00:44,320 --> 01:00:46,400\nBut SA is very common.\n\n1133\n01:00:46,400 --> 01:00:49,380\nWhen you create this account,\nyou gotta pick a password for it, and\n\n1134\n01:00:49,380 --> 01:00:53,490\na lot of people will pick weak passwords\nand that allows an attacker to get in.\n\n1135\n01:00:53,490 --> 01:00:57,060\nMicrosoft recommendation is not to use\nSQL Server authentication unless you\n\n1136\n01:00:57,060 --> 01:00:58,670\nabsolutely have to.\n\n1137\n01:00:58,670 --> 01:01:00,930\nIf there's some need for it.\n\n1138\n01:01:00,930 --> 01:01:02,070\nI'm gonna turn it on here just so\n\n1139\n01:01:02,070 --> 01:01:05,020\nI can show you guys the difference\nbetween the two, but\n\n1140\n01:01:05,020 --> 01:01:09,290\nin real life land I don't normally\nbother with SQL Server authentication.\n\n1141\n01:01:11,220 --> 01:01:14,470\nNow since it's relying on Windows\nauthentication we need to specify who is\n\n1142\n01:01:14,470 --> 01:01:16,570\nallowed to administer this system.\n\n1143\n01:01:16,570 --> 01:01:20,330\nYou can be a full blown\nadministrator in SQL and\n\n1144\n01:01:20,330 --> 01:01:22,660\njust be a regular user in Windows server,\nright?\n\n1145\n01:01:22,660 --> 01:01:24,510\nSeparate permissions are set here, so\n\n1146\n01:01:24,510 --> 01:01:26,870\nwe're determining who is\ngonna have that access.\n\n1147\n01:01:26,870 --> 01:01:28,000\nThe opposite's also true.\n\n1148\n01:01:28,000 --> 01:01:30,880\nYou can be a full domain\nadmin in Windows and\n\n1149\n01:01:30,880 --> 01:01:33,170\nnot have any access to the database,\nright?\n\n1150\n01:01:33,170 --> 01:01:34,640\nSo we have our own permissions, here,\n\n1151\n01:01:34,640 --> 01:01:37,130\nwe're just picking who's\ngoing to be an administrator.\n\n1152\n01:01:37,130 --> 01:01:41,460\nI could add my current user, just me,\nor maybe I wanna add in domain admins.\n\n1153\n01:01:41,460 --> 01:01:45,590\nMaybe I've got a domain, oh I'm not\njoined to a domain, that'd be a problem.\n\n1154\n01:01:45,590 --> 01:01:49,290\nIf I was joined to a domain maybe I\nwould wanna add in the domains admins or\n\n1155\n01:01:49,290 --> 01:01:50,600\nall of the administrators.\n\n1156\n01:01:50,600 --> 01:01:54,310\nSo maybe I just wanna add the entire\nadministrators group but more commonly\n\n1157\n01:01:54,310 --> 01:01:58,470\nwhat we would do is we would create\na group called database administrators and\n\n1158\n01:01:58,470 --> 01:02:00,090\nwe would add that to this list.\n\n1159\n01:02:00,090 --> 01:02:02,420\nAnd then we could take user accounts and\nput them in and\n\n1160\n01:02:02,420 --> 01:02:05,510\nout of the database administrators\ngroup and they'd have that access.\n\n1161\n01:02:05,510 --> 01:02:08,060\nBut, I'm just going to add my local\nadmins, that will be good enough for me.\n\n1162\n01:02:10,190 --> 01:02:11,970\nWe've also got our data directories.\n\n1163\n01:02:11,970 --> 01:02:15,830\nNow, this one we're going to\nrevisit later in the next episode\n\n1164\n01:02:15,830 --> 01:02:20,030\nbecause where you put your databases\ncan really impact performance.\n\n1165\n01:02:20,030 --> 01:02:22,440\nSo we're going to talk\nabout our main databases,\n\n1166\n01:02:22,440 --> 01:02:25,040\nour temporary databases, transaction logs.\n\n1167\n01:02:25,040 --> 01:02:28,400\nThese are all things that we might want to\nspread across many different hard drives.\n\n1168\n01:02:28,400 --> 01:02:30,920\nBut for right now, I'll just run\nwith the defaults on these for\n\n1169\n01:02:30,920 --> 01:02:32,410\nthe databases that it's going to create.\n\n1170\n01:02:33,420 --> 01:02:35,600\nThere is one other option on\nthere called file stream and\n\n1171\n01:02:35,600 --> 01:02:38,090\nfile stream is turned off by default.\n\n1172\n01:02:38,090 --> 01:02:41,220\nInside of SQL, you have data types, right?\n\n1173\n01:02:41,220 --> 01:02:43,020\nNormally when you store data in SQL,\nwhat is it?\n\n1174\n01:02:43,020 --> 01:02:45,330\nIt is gonna be text or numbers, right?\n\n1175\n01:02:45,330 --> 01:02:50,310\nSo you've got data types that\nare number or integer values.\n\n1176\n01:02:50,310 --> 01:02:53,700\nYou've got others that are character\nvalues, letters and numbers.\n\n1177\n01:02:53,700 --> 01:02:59,270\nBut there's special ones called\nbinaries and the binaries\n\n1178\n01:02:59,270 --> 01:03:05,010\nthose are ones that you can actually store\nhuge amounts of data in a single cell.\n\n1179\n01:03:05,010 --> 01:03:07,530\nMicrosoft did a tech\ndemo of this years ago\n\n1180\n01:03:07,530 --> 01:03:11,030\nwhere they took satellite\nimagery of the entire world.\n\n1181\n01:03:11,030 --> 01:03:14,010\nAnd instead of having the satellite\nimagery stored somewhere else, they stored\n\n1182\n01:03:14,010 --> 01:03:18,850\nthe images in the database itself and\nmade for a database that was massive.\n\n1183\n01:03:18,850 --> 01:03:21,190\nRight, it was well over\na terabyte in size.\n\n1184\n01:03:21,190 --> 01:03:25,040\nBut when you queried against it\nto pull up the image of a certain\n\n1185\n01:03:25,040 --> 01:03:28,150\ngeographic location, it didn't\nhave to go to a different server.\n\n1186\n01:03:28,150 --> 01:03:30,890\nThe image was right there in the database.\n\n1187\n01:03:30,890 --> 01:03:33,790\nThe problem is,\nit makes the database really big, so\n\n1188\n01:03:33,790 --> 01:03:36,280\nFileStream tries to fix that.\n\n1189\n01:03:36,280 --> 01:03:40,650\nWhat it does is it says if you start\nto copy files into a database table,\n\n1190\n01:03:40,650 --> 01:03:45,650\ninstead of putting it in the database\nwe'll put a pointer in the database that\n\n1191\n01:03:45,650 --> 01:03:50,780\nsays here's where the file is stored and\nit'll point to a shared folder somewhere.\n\n1192\n01:03:50,780 --> 01:03:54,956\nSo you can have a SAN or a NAS box or\na shared folder that actually has all\n\n1193\n01:03:54,956 --> 01:03:59,500\nthe files or images or whatever, and\nthe database just has a pointer to it.\n\n1194\n01:03:59,500 --> 01:04:03,379\nAnd when somebody runs a query,\nthe database server will turn around and\n\n1195\n01:04:03,379 --> 01:04:05,960\nget the file, and\nhand if off to the client.\n\n1196\n01:04:05,960 --> 01:04:08,730\nThe client thinks that it was in\nthe database, it doesn't know any better.\n\n1197\n01:04:08,730 --> 01:04:11,090\nThe server is turning around and\ngetting it for them.\n\n1198\n01:04:11,090 --> 01:04:12,110\nThat's file stream.\n\n1199\n01:04:12,110 --> 01:04:15,490\nIf we wanna turn that on, we can turn it\non right here, and we can enable that and\n\n1200\n01:04:15,490 --> 01:04:20,090\nspecify the Windows share that's\ngonna contain those files, alright?\n\n1201\n01:04:20,090 --> 01:04:22,750\nBut, it is turned off by default because\n\n1202\n01:04:22,750 --> 01:04:25,480\nMicrosoft doesn't know if you're going\nto be storing files in there or not.\n\n1203\n01:04:25,480 --> 01:04:26,920\nIf you're not, you don't need it.\n\n1204\n01:04:26,920 --> 01:04:28,520\nAnd, we can always turn this on later.\n\n1205\n01:04:31,160 --> 01:04:32,660\nSo, I've got that set.\n\n1206\n01:04:32,660 --> 01:04:35,220\nThe next screen is just going to ask if\nwe want to participate in Microsoft's\n\n1207\n01:04:35,220 --> 01:04:36,440\nerror reporting.\n\n1208\n01:04:36,440 --> 01:04:37,900\nIt's usually a good idea to do that.\n\n1209\n01:04:37,900 --> 01:04:39,840\nI'm not going to because\nthis is a test server.\n\n1210\n01:04:41,570 --> 01:04:44,030\nAnd then,\nmy final check before the installation.\n\n1211\n01:04:44,030 --> 01:04:47,050\nIt's just checking the last of my\nprerequisites to make sure we're in good\n\n1212\n01:04:47,050 --> 01:04:49,700\nshape and we're ready to go.\n\n1213\n01:04:49,700 --> 01:04:53,900\nNow notice one of the checks that it\ndoes right here, the FAT32 file system.\n\n1214\n01:04:53,900 --> 01:04:57,590\nSequel server,\nit actually can run on FAT32,\n\n1215\n01:04:57,590 --> 01:05:00,850\nbut Microsoft won't support you\nif you call them on the phone.\n\n1216\n01:05:00,850 --> 01:05:01,960\nThey won't support that.\n\n1217\n01:05:01,960 --> 01:05:03,850\nThey really want you to run on NTFS.\n\n1218\n01:05:03,850 --> 01:05:07,610\nAnd you want to run an NTFS\nalso because on FAP32 at\n\n1219\n01:05:07,610 --> 01:05:10,800\na minimum you've got a limit\non how big files can be.\n\n1220\n01:05:10,800 --> 01:05:12,970\nFAT32 hates files over 4 GB in size.\n\n1221\n01:05:12,970 --> 01:05:16,720\nSo are you going to have\na database over 4 GB in size?\n\n1222\n01:05:16,720 --> 01:05:18,300\nIt's very likely, right?\n\n1223\n01:05:18,300 --> 01:05:20,370\nIf you've got a server\nthat's got 4 gigs of memory,\n\n1224\n01:05:20,370 --> 01:05:22,930\nat a minimum your page file\nis gonna be 4 gigs in size.\n\n1225\n01:05:22,930 --> 01:05:27,800\nSo you're gonna run out of that\nfile growth potential with that 32.\n\n1226\n01:05:27,800 --> 01:05:30,410\nThey want NTFS, so\nthat was one of the checks here.\n\n1227\n01:05:30,410 --> 01:05:32,610\nIf I had failed, I would have\ngotten a warning about that, but\n\n1228\n01:05:32,610 --> 01:05:33,520\njust be aware of that.\n\n1229\n01:05:35,650 --> 01:05:36,790\nAlright, now we're ready to install!\n\n1230\n01:05:36,790 --> 01:05:40,160\nIt's just giving me a highlight of all\nthe stuff that it's going to do and,\n\n1231\n01:05:40,160 --> 01:05:42,490\nyou can hit next, and off it goes.\n\n1232\n01:05:42,490 --> 01:05:43,800\nWe're installing.\n\n1233\n01:05:43,800 --> 01:05:46,550\nSo, now it's going to start the install,\nit's going to turn along, and\n\n1234\n01:05:46,550 --> 01:05:50,870\nwhen it's done,\nI'll have a fully featured Sequel server.\n\n1235\n01:05:50,870 --> 01:05:52,743\nAll right now I don't want to\nbore you guys to death with\n\n1236\n01:05:52,743 --> 01:05:54,300\nwatching this thing turn along.\n\n1237\n01:05:54,300 --> 01:05:56,560\nIt normally doesn't take very long.\n\n1238\n01:05:56,560 --> 01:06:00,410\nI know we had some comments in the\nchatroom earlier about it taking forever.\n\n1239\n01:06:00,410 --> 01:06:01,760\nIt really depends on your system.\n\n1240\n01:06:01,760 --> 01:06:05,560\nIf your system is very busy, if it's\ndoing other things, it may take longer.\n\n1241\n01:06:05,560 --> 01:06:09,060\nYour hard drives are typically what\ninfluences the installation time though.\n\n1242\n01:06:09,060 --> 01:06:13,170\nIt's not doing a lot of CPU\ncalculations or even RAM utilization.\n\n1243\n01:06:13,170 --> 01:06:15,920\nYou know, if I pull up my\ntask manager while this runs,\n\n1244\n01:06:15,920 --> 01:06:18,090\nI should see that my system\nis not terribly busy.\n\n1245\n01:06:20,290 --> 01:06:24,560\nWell, I say that as my task manager takes\nforever to come up so maybe it is busy.\n\n1246\n01:06:24,560 --> 01:06:28,210\nBut normally it is disk IO, so\nthe more hard drives you have,\n\n1247\n01:06:28,210 --> 01:06:30,690\nthe more data through put you have,\n\n1248\n01:06:30,690 --> 01:06:33,750\nthe faster it's going to run, so\nlet's just look at our performance.\n\n1249\n01:06:33,750 --> 01:06:37,840\nYeah, CPU is kind of levelled out,\npretty low there, so not going too crazy.\n\n1250\n01:06:37,840 --> 01:06:41,660\nI've got eight gigs of RAM but\nI'm only burning 1.3, 1.4,\n\n1251\n01:06:41,660 --> 01:06:45,480\nso disk IO is really the big thing\nthat's going to affect this.\n\n1252\n01:06:45,480 --> 01:06:49,340\nThis server is doing absolutely nothing\nother then doing this install, so\n\n1253\n01:06:49,340 --> 01:06:51,450\nI expect it to happen pretty quick.\n\n1254\n01:06:51,450 --> 01:06:54,570\nBut instead of watching that green\nbar scroll across the screen,\n\n1255\n01:06:54,570 --> 01:06:56,310\nwhy don't we just stop and take a break.\n\n1256\n01:06:56,310 --> 01:07:00,420\nWhen we get back, we'll finish the\ninstall, talk about a few other things and\n\n1257\n01:07:00,420 --> 01:07:01,780\nwe'll wrap up the episode from there.\n\n1258\n01:07:01,780 --> 01:07:03,150\nSo stay tuned.\n\n1259\n01:07:03,150 --> 01:07:08,703\nWe'll be back in a few.\n\n1260\n01:07:08,703 --> 01:07:13,858\n[SOUND] All right so during the break\nthe little green bar creeped\n\n1261\n01:07:13,858 --> 01:07:18,438\nacross the screen like a good\n40 percent of my career.\n\n1262\n01:07:18,438 --> 01:07:22,480\nAnd now that it is done we just\nget a simple reporting screen.\n\n1263\n01:07:22,480 --> 01:07:23,790\nSo let's take a look at that.\n\n1264\n01:07:23,790 --> 01:07:25,390\nIt just shows the components\nthat it installed.\n\n1265\n01:07:25,390 --> 01:07:27,580\nIf any of them failed,\nit would be flagged here.\n\n1266\n01:07:27,580 --> 01:07:32,100\nBut you can kind of take a quick look and\nsee you know how each one did.\n\n1267\n01:07:32,100 --> 01:07:35,920\nBut now it's done,\nI'm running SQL Server, all right?\n\n1268\n01:07:35,920 --> 01:07:39,640\nNow we don't notice a whole\nheck of a lot that's different.\n\n1269\n01:07:39,640 --> 01:07:42,420\nAnd we're gonna need to go through and\nverify our installation.\n\n1270\n01:07:42,420 --> 01:07:43,350\nSo I'm gonna do that next.\n\n1271\n01:07:43,350 --> 01:07:46,700\nBut before I do that,\nI am gonna launch another install.\n\n1272\n01:07:46,700 --> 01:07:48,400\nI wanna add a second instance just so\n\n1273\n01:07:48,400 --> 01:07:52,650\nwe can kinda see that difference,\nwe're not gonna watch the whole thing.\n\n1274\n01:07:52,650 --> 01:07:55,780\nBut I do wanna just show you that\ndifference when we add a second install.\n\n1275\n01:07:55,780 --> 01:08:00,110\nSo I'm gonna choose to do a new sequel\nserver stand alone installation or\n\n1276\n01:08:00,110 --> 01:08:01,680\nadd features, right?\n\n1277\n01:08:01,680 --> 01:08:04,610\nBecause I'm adding a separate instance.\n\n1278\n01:08:04,610 --> 01:08:07,150\nAnd I'm just gonna kind of\nrerun that setup process.\n\n1279\n01:08:07,150 --> 01:08:08,520\nNow.\n\n1280\n01:08:08,520 --> 01:08:11,540\nIf we've resolved all of\nour prerequisite issues,\n\n1281\n01:08:11,540 --> 01:08:13,100\nthis part of the install\nshould go really fast.\n\n1282\n01:08:14,380 --> 01:08:15,980\nSo I'll just run through it real quick.\n\n1283\n01:08:15,980 --> 01:08:17,760\nI'm gonna add that test instance so\n\n1284\n01:08:17,760 --> 01:08:21,940\nthat maybe I've got my production database\nthat my end users have exposure to.\n\n1285\n01:08:21,940 --> 01:08:24,720\nAnd then I have a test\ndatabase that I work on, or\n\n1286\n01:08:24,720 --> 01:08:26,630\nmy developers work on or whatever.\n\n1287\n01:08:26,630 --> 01:08:29,360\nAnd no need to bring in a whole\nseparate set of hardware for\n\n1288\n01:08:29,360 --> 01:08:32,010\na simple database that just\na few people are working on.\n\n1289\n01:08:32,010 --> 01:08:34,730\nWe just tack it right onto this one.\n\n1290\n01:08:34,730 --> 01:08:39,000\nA lot of organization used to\ndeploy separate sequel servers for\n\n1291\n01:08:39,000 --> 01:08:40,750\neach software product they used.\n\n1292\n01:08:40,750 --> 01:08:43,580\nSo if you had five different software\nproducts that needed databases\n\n1293\n01:08:43,580 --> 01:08:45,430\nthey'd have five different\ndatabase servers.\n\n1294\n01:08:45,430 --> 01:08:48,190\nBut a better way to\nutilize your hardware and\n\n1295\n01:08:48,190 --> 01:08:52,560\nresources is to create\na centralized sequel server pool.\n\n1296\n01:08:52,560 --> 01:08:53,650\nHave a central pool,\n\n1297\n01:08:53,650 --> 01:08:57,420\na set of hardware that is way beefier\nthan what you'd normally get.\n\n1298\n01:08:57,420 --> 01:08:59,730\nCuz you get better resource\nutilization out of it.\n\n1299\n01:08:59,730 --> 01:09:03,610\nAnd multiple instances give us that\nprotection to stop one install\n\n1300\n01:09:03,610 --> 01:09:05,120\nfrom conflicting with another.\n\n1301\n01:09:06,990 --> 01:09:08,510\nSo, that's what I'm gonna do here.\n\n1302\n01:09:08,510 --> 01:09:09,950\nNow, I'm doing a new installation.\n\n1303\n01:09:09,950 --> 01:09:13,590\nI could choose to add features to the\ninstall that we already did and I can see\n\n1304\n01:09:13,590 --> 01:09:17,840\nmy instance right here that's the default\ninstance that was already made.\n\n1305\n01:09:17,840 --> 01:09:20,640\nBut I'm doing a new install, and so\n\n1306\n01:09:20,640 --> 01:09:24,480\nit's gonna ask me here in a minute\nwhat I want that instance name to be.\n\n1307\n01:09:24,480 --> 01:09:26,420\nSo I'm just gonna accept\nmy licensing terms.\n\n1308\n01:09:27,740 --> 01:09:30,499\nI'm doing a sequel\nServer Feature Installation.\n\n1309\n01:09:35,212 --> 01:09:36,150\nAll right.\n\n1310\n01:09:36,150 --> 01:09:37,800\nAnd we're doing the Database Engine.\n\n1311\n01:09:39,710 --> 01:09:40,820\nAnd I'm not gonna come down and\n\n1312\n01:09:40,820 --> 01:09:42,908\nclick the management tools because\nthey're already installed.\n\n1313\n01:09:42,908 --> 01:09:47,460\nSee how it's grayed out, I don't have to\ninstall that again, so I'll leave that be.\n\n1314\n01:09:47,460 --> 01:09:50,920\nSo far, we haven't really seen\nanything different from before.\n\n1315\n01:09:50,920 --> 01:09:53,990\nWhere it's gonna get different is\na little bit later when it's gonna ask me\n\n1316\n01:09:53,990 --> 01:09:57,460\nabout the instance name and\nI'll give it a different name this time.\n\n1317\n01:09:57,460 --> 01:10:01,190\nAll right, here it is.\n\n1318\n01:10:01,190 --> 01:10:04,300\nSo I could do a default\ninstance like before, but\n\n1319\n01:10:04,300 --> 01:10:07,450\nyou can only have one\ndefault instance on a system.\n\n1320\n01:10:07,450 --> 01:10:11,830\nSo if I choose that, this new install\nis going to become the default instance\n\n1321\n01:10:11,830 --> 01:10:14,690\nbumping the old one to use it's name.\n\n1322\n01:10:14,690 --> 01:10:15,980\nAlright.\nThat's not what I want.\n\n1323\n01:10:15,980 --> 01:10:17,960\nI want to do an all new instance.\n\n1324\n01:10:17,960 --> 01:10:22,031\nAnd so I'm going to call this my test sql.\n\n1325\n01:10:22,031 --> 01:10:25,120\nSo this is going to be\nmy test sql instances.\n\n1326\n01:10:25,120 --> 01:10:28,340\nI can give it an instance ID,\nwhich, there we go.\n\n1327\n01:10:28,340 --> 01:10:30,100\nYou can just click on it changes.\n\n1328\n01:10:30,100 --> 01:10:31,420\nI didn't have to type that.\n\n1329\n01:10:31,420 --> 01:10:33,360\nSo it's changed it to be test sql.\n\n1330\n01:10:33,360 --> 01:10:35,230\nThat's the location that\nit's going to install in.\n\n1331\n01:10:37,040 --> 01:10:39,400\nAnd it's just showing me the instances\nthat I already got here.\n\n1332\n01:10:40,470 --> 01:10:41,500\nAnd now we move forward.\n\n1333\n01:10:41,500 --> 01:10:42,940\nThe rest of the installs really the same.\n\n1334\n01:10:42,940 --> 01:10:46,070\nThe only difference is that I\njust gave it a name as opposed to\n\n1335\n01:10:46,070 --> 01:10:49,100\ngoing with the default\ninstance name from before.\n\n1336\n01:10:49,100 --> 01:10:51,540\nNow, it'll basically be\na completely separate server and\n\n1337\n01:10:51,540 --> 01:10:53,010\nI mean completely separate.\n\n1338\n01:10:53,010 --> 01:10:56,070\nI could shut one server down and\nnot affect the other ones.\n\n1339\n01:10:56,070 --> 01:10:59,260\nSo, if I wanna do an upgrade,\nI want to apply a service pack, I\n\n1340\n01:10:59,260 --> 01:11:02,920\ncould apply the service pack just to that\ninstance and not to the other instance.\n\n1341\n01:11:02,920 --> 01:11:06,330\nI mean you can really get granular on\nthis as opposed to having multiple\n\n1342\n01:11:06,330 --> 01:11:07,210\nphysical servers.\n\n1343\n01:11:07,210 --> 01:11:11,110\nThat really does help out,\nespecially in the testing world.\n\n1344\n01:11:11,110 --> 01:11:12,480\nHere I can designate my accounts.\n\n1345\n01:11:12,480 --> 01:11:16,540\nIt's usually a good idea to use different\naccounts for the separate instances and\n\n1346\n01:11:16,540 --> 01:11:17,950\nyou'll see it's actually doing that.\n\n1347\n01:11:17,950 --> 01:11:19,620\nIf you look at these user accounts,\n\n1348\n01:11:19,620 --> 01:11:23,840\nsee how its added dollar sign\ntest SQL to the end of each one?\n\n1349\n01:11:23,840 --> 01:11:27,527\nIt's creating separate user accounts,\nso we have permission separation.\n\n1350\n01:11:33,403 --> 01:11:37,910\nThen my server information,\nif I want to do mixed mode or Windows.\n\n1351\n01:11:37,910 --> 01:11:41,290\nI'll go ahead and do mixed mode again just\nso we can see that difference later on.\n\n1352\n01:11:43,060 --> 01:11:45,748\nAnd I'll add the administrator's\ngroup like I did before, so\n\n1353\n01:11:45,748 --> 01:11:47,889\nI'm not really doing much\ndifferent on this one.\n\n1354\n01:11:50,561 --> 01:11:51,584\nAll right.\n\n1355\n01:11:51,584 --> 01:11:52,917\nAnd now I'm just gonna\nfinish up the install.\n\n1356\n01:11:52,917 --> 01:11:55,042\nNow I'm not gonna wait for\nthis one to finish.\n\n1357\n01:11:55,042 --> 01:11:57,647\nI wanna go and verify our other installs,\nso there it goes,\n\n1358\n01:11:57,647 --> 01:11:59,167\nit's starting to do the install.\n\n1359\n01:11:59,167 --> 01:12:00,333\nLet's go and verify our other one.\n\n1360\n01:12:00,333 --> 01:12:02,375\nNow back here on this screen.\n\n1361\n01:12:02,375 --> 01:12:04,542\nThis is where I came to do the install.\n\n1362\n01:12:04,542 --> 01:12:08,030\nI'm technically done with it but\nthere are other things you can do here.\n\n1363\n01:12:08,030 --> 01:12:09,730\nYou can jump down to maintenance.\n\n1364\n01:12:09,730 --> 01:12:14,330\nAnd you can start to do upgrades,\nrepairs, you can launch Windows update.\n\n1365\n01:12:14,330 --> 01:12:17,660\nOn the exam,\nthat's the next step after the install.\n\n1366\n01:12:17,660 --> 01:12:19,910\nYou do the install then\nyou click on maintenance.\n\n1367\n01:12:19,910 --> 01:12:21,410\nAnd then you go to Windows Update.\n\n1368\n01:12:21,410 --> 01:12:24,530\nMicrosoft pushes Windows updates for\nMicrosoft SQL Server.\n\n1369\n01:12:24,530 --> 01:12:27,680\nSo you download the updates to\nkeep your system up and running.\n\n1370\n01:12:27,680 --> 01:12:30,600\nRight?\nThey do fixes, patches and so on.\n\n1371\n01:12:30,600 --> 01:12:34,320\nThey are much more protective of\nthese updates than they are with\n\n1372\n01:12:34,320 --> 01:12:35,880\nthe Windows Server updates.\n\n1373\n01:12:35,880 --> 01:12:39,940\nSo, they're typically very well tested,\nready to deploy right away.\n\n1374\n01:12:39,940 --> 01:12:42,130\nBut you probably wanna\ndo your own testing too.\n\n1375\n01:12:42,130 --> 01:12:46,270\nSo you can use a WSUS server to manage\nwhen these updates are being pushed out to\n\n1376\n01:12:46,270 --> 01:12:48,984\ngive you time to test them,\non non production systems.\n\n1377\n01:12:51,165 --> 01:12:56,015\nAll right, but I wanna verify that my\nother installation is done and up and\n\n1378\n01:12:56,015 --> 01:12:57,135\nrunning, okay?\n\n1379\n01:12:57,135 --> 01:12:58,855\nSo there's a few ways to verify that.\n\n1380\n01:12:58,855 --> 01:13:02,715\nOne way is I can look on the hard drive\nand make sure that my files were copied.\n\n1381\n01:13:02,715 --> 01:13:04,765\nIf I browse into my C drive and\n\n1382\n01:13:04,765 --> 01:13:10,580\nI go into my Program files folder\nI can find Microsoft SQL server.\n\n1383\n01:13:10,580 --> 01:13:13,140\nAnd inside of there,\nI'm gonna see a bunch of files.\n\n1384\n01:13:13,140 --> 01:13:13,990\nAll right?\n\n1385\n01:13:13,990 --> 01:13:18,800\nThese files right here, or these folders,\nthese are different versions of SQL.\n\n1386\n01:13:18,800 --> 01:13:20,500\nFor backwards compatibility,\n\n1387\n01:13:20,500 --> 01:13:23,675\ndifferent versions of SQL expect\nfiles to be in certain places.\n\n1388\n01:13:23,675 --> 01:13:27,912\nAnd so you'll see version eight,\nthat 's Sequel Server 2000, version nine,\n\n1389\n01:13:27,912 --> 01:13:30,555\nthat 's 2005, version ten that's 2008.\n\n1390\n01:13:30,555 --> 01:13:32,445\nAnd now version 11, that's 2012.\n\n1391\n01:13:32,445 --> 01:13:35,470\nSo, those are the different\nversions of SQL.\n\n1392\n01:13:35,470 --> 01:13:39,040\nAnd most of these are almost empty,\nso if you go into like eight,\n\n1393\n01:13:39,040 --> 01:13:42,780\nyou'll see that there's just\na little dynamic link library there.\n\n1394\n01:13:42,780 --> 01:13:46,060\nAnd maybe a couple of tools.\n\n1395\n01:13:46,060 --> 01:13:49,960\nWhoops, I'm gonna break this install,\nlet me fix that.\n\n1396\n01:13:49,960 --> 01:13:52,219\nA little accidental drag-and-drop.\n\n1397\n01:13:53,340 --> 01:13:56,940\nLooks like we've got just\na couple of libraries there for\n\n1398\n01:13:56,940 --> 01:13:58,800\nbackwards compatibility with eight.\n\n1399\n01:13:58,800 --> 01:14:01,385\nSo that's what you kind of expect\nto see on some of these, but\n\n1400\n01:14:01,385 --> 01:14:03,370\n11 that's what I installed.\n\n1401\n01:14:03,370 --> 01:14:06,120\nRight.\nThat's SQL server 2012, and so when I go\n\n1402\n01:14:06,120 --> 01:14:10,420\nin there we'll see a lot more, as far\nas like our shared utilities and so on.\n\n1403\n01:14:10,420 --> 01:14:13,270\nThat's the actual SQL server software.\n\n1404\n01:14:13,270 --> 01:14:15,235\nAnd it's not terribly big.\n\n1405\n01:14:15,235 --> 01:14:17,310\n1.7 gigs in size.\n\n1406\n01:14:17,310 --> 01:14:19,040\nI think I said 1.5 earler in the show.\n\n1407\n01:14:20,480 --> 01:14:22,480\nAll right,\nwhat are these other folders though?\n\n1408\n01:14:22,480 --> 01:14:24,020\nThese are our instances.\n\n1409\n01:14:24,020 --> 01:14:27,475\nMy default instance is right here.\n\n1410\n01:14:27,475 --> 01:14:29,108\nMSSQL11.MSSQL_SERVER.\n\n1411\n01:14:29,108 --> 01:14:31,650\nRight.\nThat's my default instance that we did in\n\n1412\n01:14:31,650 --> 01:14:33,390\nthe install in the last segment.\n\n1413\n01:14:33,390 --> 01:14:38,332\nMy new instance it's installing\nright now is MSSQL11.TESTSQL.\n\n1414\n01:14:38,332 --> 01:14:42,040\nEach instance gets its own folder.\n\n1415\n01:14:42,040 --> 01:14:42,930\nThat's our separation.\n\n1416\n01:14:42,930 --> 01:14:47,350\nAnd when I go in there,\nI'll see an MSSQL folder.\n\n1417\n01:14:47,350 --> 01:14:50,080\nAnd breakdowns of all sorts of things.\n\n1418\n01:14:50,080 --> 01:14:51,012\nFrom binaries.\n\n1419\n01:14:51,012 --> 01:14:52,630\nAll right.\nSo, here's executables.\n\n1420\n01:14:52,630 --> 01:14:56,890\nAnd you'll see your system resource\nfiles and other executables.\n\n1421\n01:14:56,890 --> 01:14:59,260\nYour SQL agent is right there,\n\n1422\n01:14:59,260 --> 01:15:04,160\neach of these entities here that\nare being stored for this install.\n\n1423\n01:15:04,160 --> 01:15:05,705\nHere's the big one, SQL server.\n\n1424\n01:15:05,705 --> 01:15:06,380\nRight?\n\n1425\n01:15:06,380 --> 01:15:07,830\nThat's the SQL server executable.\n\n1426\n01:15:07,830 --> 01:15:10,820\nIt's actually providing\nthe engine in the background.\n\n1427\n01:15:10,820 --> 01:15:13,180\nThere's a separate copy for each one.\n\n1428\n01:15:13,180 --> 01:15:17,110\nThat's what enables us to apply a service\npack to one instance but not the other.\n\n1429\n01:15:17,110 --> 01:15:19,680\nWe've gotta maintain separate\ncopies of these executable's.\n\n1430\n01:15:19,680 --> 01:15:23,080\nSo that's what it's doing,\nit's got each one laid out in there.\n\n1431\n01:15:23,080 --> 01:15:25,720\nBut the data folder is\nprobably the most important,\n\n1432\n01:15:25,720 --> 01:15:27,250\ncuz that's where the databases are.\n\n1433\n01:15:27,250 --> 01:15:32,070\nSo here's the default databases that\nwere created from my default instance.\n\n1434\n01:15:32,070 --> 01:15:35,900\nMy new instance is installing\nthe test by going to its folder.\n\n1435\n01:15:37,470 --> 01:15:38,730\nAnd into its data.\n\n1436\n01:15:38,730 --> 01:15:42,320\nIt's got its own separate\nset of databases, so\n\n1437\n01:15:42,320 --> 01:15:45,270\na problem I create in one\ndoesn't affect the other.\n\n1438\n01:15:45,270 --> 01:15:45,880\nAll right.\n\n1439\n01:15:45,880 --> 01:15:48,010\nNow these are all being put on\nthe same hard drive right now,\n\n1440\n01:15:48,010 --> 01:15:51,470\nso I'm gonna disc IO contention\nbetween these two databases,\n\n1441\n01:15:51,470 --> 01:15:54,680\nbut that's not such a big\ndeal in my environment.\n\n1442\n01:15:54,680 --> 01:15:57,290\nBut in a production environment, we'll\nwanna spread these out across hard drives.\n\n1443\n01:15:57,290 --> 01:16:00,780\nSo we'll probably move some of these\ndatabases away from here later on, but\n\n1444\n01:16:00,780 --> 01:16:02,690\nmost of these databases are just simple,\n\n1445\n01:16:02,690 --> 01:16:05,090\nsmall databases that will\nnever grow very large.\n\n1446\n01:16:05,090 --> 01:16:07,440\nIt's our user databases, the ones we\ncreate, that we'll wanna move off.\n\n1447\n01:16:07,440 --> 01:16:13,370\nAll right, another way I can verify my\ninstall is by checking my services.\n\n1448\n01:16:13,370 --> 01:16:18,180\nSo, if I go into my services utility.\n\n1449\n01:16:20,100 --> 01:16:22,960\nWe can go in here and we'll see\nthe various services for SQL server.\n\n1450\n01:16:22,960 --> 01:16:26,710\nAnd again, we're gonna see separate\nentries for our default instance, and\n\n1451\n01:16:26,710 --> 01:16:28,050\nour new named instance.\n\n1452\n01:16:29,630 --> 01:16:32,380\nAnd I just created one named instance,\nbut you could create many.\n\n1453\n01:16:32,380 --> 01:16:33,830\nI don't know that there's\nactually a limit.\n\n1454\n01:16:33,830 --> 01:16:36,860\nI think you're just limited by\nthe hardware resources you've got.\n\n1455\n01:16:36,860 --> 01:16:38,490\nBut you can definitely set up more.\n\n1456\n01:16:38,490 --> 01:16:42,390\nThe most I've seen on a single server\nwas 12, so I've seen that, but\n\n1457\n01:16:42,390 --> 01:16:44,490\nI'm certain you can go beyond.\n\n1458\n01:16:45,890 --> 01:16:50,130\nAll right, so I'm just gonna scroll\ndown here until I find our SQL services.\n\n1459\n01:16:50,130 --> 01:16:51,410\nThere they are.\n\n1460\n01:16:51,410 --> 01:16:53,240\nAnd what you'll notice on mine,\n\n1461\n01:16:53,240 --> 01:16:56,350\nsince I have two instances,\nis everything's doubled up.\n\n1462\n01:16:56,350 --> 01:16:59,840\nAnd in parentheses that\nidentifies which instance it is.\n\n1463\n01:16:59,840 --> 01:17:02,575\nThe instance called MSSQL server,\nthat's my default.\n\n1464\n01:17:02,575 --> 01:17:03,470\nRight?\n\n1465\n01:17:03,470 --> 01:17:07,525\nSo I've got SQL Server, SQL Server Agent,\nand SQL Server Browser.\n\n1466\n01:17:07,525 --> 01:17:08,820\nRight.\n\n1467\n01:17:08,820 --> 01:17:13,995\nThen, from my other instances I've\ngot SQL Server and SQL Server Agent.\n\n1468\n01:17:13,995 --> 01:17:15,550\nRight.\nTest SQL.\n\n1469\n01:17:15,550 --> 01:17:20,210\nSo each time I add an instance, it's gonna\nadd new services, so that I can stop and\n\n1470\n01:17:20,210 --> 01:17:23,200\nstart the instances\nindependently of each other.\n\n1471\n01:17:23,200 --> 01:17:25,980\nNow SQL Server Browser,\nthere's only one of those.\n\n1472\n01:17:25,980 --> 01:17:26,600\nWhy is that?\n\n1473\n01:17:26,600 --> 01:17:28,740\nWell, that's our discoverability.\n\n1474\n01:17:28,740 --> 01:17:31,990\nAnd if we turn that on for one,\nit turns it on for all of them.\n\n1475\n01:17:31,990 --> 01:17:34,160\nSo that's one exception,\nthe SQL Server Browser,\n\n1476\n01:17:34,160 --> 01:17:36,740\nwhich we normally leave disabled anyway.\n\n1477\n01:17:36,740 --> 01:17:40,470\nIt's either On or Off for\nthe physical server, you can't do it\n\n1478\n01:17:40,470 --> 01:17:45,090\non a per instance basis, but the SQL\nServer itself and the Agent you can.\n\n1479\n01:17:45,090 --> 01:17:48,100\nAll right, so I can see these are running.\n\n1480\n01:17:48,100 --> 01:17:50,430\nMy SQL Server Agent for\ntest SQLs is not running, but\n\n1481\n01:17:50,430 --> 01:17:52,940\nthat's because I didn't choose\nthat option during the install,\n\n1482\n01:17:52,940 --> 01:17:56,290\nI didn't set it to automatic,\nI left it to manual, all right?\n\n1483\n01:17:56,290 --> 01:18:00,760\nBut I can see my test SQL is already\nup and running as far as the server\n\n1484\n01:18:00,760 --> 01:18:03,970\nI could stop it, if I needed to,\nor, you know, restart it.\n\n1485\n01:18:03,970 --> 01:18:04,980\nWhatever it is that I need to do.\n\n1486\n01:18:06,630 --> 01:18:08,150\nSo, we're looking good so far, right?\n\n1487\n01:18:08,150 --> 01:18:10,580\nThose are up and running,\nsystem seems happy.\n\n1488\n01:18:11,710 --> 01:18:14,470\nSystem seems happy and operational.\n\n1489\n01:18:14,470 --> 01:18:16,060\nI think we're in pretty good shape.\n\n1490\n01:18:16,060 --> 01:18:21,190\nAfter that we're ready to connect\nto the server and see what's up.\n\n1491\n01:18:21,190 --> 01:18:23,337\nWell, when we connect to a SQL server,\n\n1492\n01:18:23,337 --> 01:18:27,580\nour primary utility is what\ncalled the SQL Management Studio.\n\n1493\n01:18:27,580 --> 01:18:33,390\nWay back in Microsoft SQL Server 2005,\nMicrosoft switched our user interface.\n\n1494\n01:18:33,390 --> 01:18:35,620\nYou used to have the SQL\nenterprise manager.\n\n1495\n01:18:35,620 --> 01:18:40,130\nIt was a user interface built\nspecifically for Microsoft SQL.\n\n1496\n01:18:40,130 --> 01:18:43,210\nIn 2005 they switched,\nand they said, you know,\n\n1497\n01:18:43,210 --> 01:18:46,700\ndevelopers work in databases\nmore than system admins, so\n\n1498\n01:18:46,700 --> 01:18:49,640\nlet's move to a user interface\nthat developers are used to.\n\n1499\n01:18:49,640 --> 01:18:53,920\nAnd so they changed it so that instead of\nsharing an interface with other things,\n\n1500\n01:18:53,920 --> 01:18:56,070\nlike Microsoft Exchange and whatever.\n\n1501\n01:18:56,070 --> 01:18:59,128\nThey switched to the visual\nstudio interface.\n\n1502\n01:18:59,128 --> 01:19:03,440\nSo Microsoft SQL Server, when we managed\nit we're actually using the visual studio\n\n1503\n01:19:03,440 --> 01:19:06,360\nsuite like a developer would\nwhen they write in c-sharp or\n\n1504\n01:19:06,360 --> 01:19:08,000\nvisual basic or whatever.\n\n1505\n01:19:08,000 --> 01:19:11,700\nSo when you install SQL,\nthe utility that we wanna run.\n\n1506\n01:19:11,700 --> 01:19:15,480\nIs just called\nthe SQL Server Management Studio.\n\n1507\n01:19:15,480 --> 01:19:18,520\nAnd I normally pin that\nto my start screen.\n\n1508\n01:19:18,520 --> 01:19:20,080\nSo that I can get to it\na little bit easier.\n\n1509\n01:19:20,080 --> 01:19:24,030\nAnd so I'll go ahead and watch that.\n\n1510\n01:19:24,030 --> 01:19:25,690\nAll right, and\nyou pin it wherever you want.\n\n1511\n01:19:25,690 --> 01:19:28,220\nPin it down here in your task bar,\nor whatever makes you happy.\n\n1512\n01:19:28,220 --> 01:19:32,230\nWhen you fire up the SQL Server Management\nStudio, you can run that from your client.\n\n1513\n01:19:32,230 --> 01:19:34,870\nFrom your laptop or desktop, and\nconnect to the server that way,\n\n1514\n01:19:34,870 --> 01:19:36,530\nas opposed to installing on the server.\n\n1515\n01:19:36,530 --> 01:19:39,730\nYou don't have to install\nthe management tools on the server.\n\n1516\n01:19:39,730 --> 01:19:42,010\nBut if you do,\nyou can just fire it right up here, and\n\n1517\n01:19:42,010 --> 01:19:43,650\nit's gonna ask us who we wanna connect to.\n\n1518\n01:19:44,970 --> 01:19:48,520\nWhen you connect to somebody, you're\nnormally connecting to a database engine.\n\n1519\n01:19:48,520 --> 01:19:51,980\nThat's where we're working with\nthe databases, but if you drop that down\n\n1520\n01:19:51,980 --> 01:19:55,502\nyou'll see we can connect to Analysis and\nReporting or Integration services.\n\n1521\n01:19:55,502 --> 01:19:58,500\nIf we'd installed any of\nthose optional components.\n\n1522\n01:19:58,500 --> 01:20:00,875\nWe would need to choose\nthe appropriate one there.\n\n1523\n01:20:00,875 --> 01:20:03,833\nBut on the exam, we're really just\ngonna see the database engine.\n\n1524\n01:20:03,833 --> 01:20:04,920\nThat's the one we're gonna connect to.\n\n1525\n01:20:05,950 --> 01:20:08,550\nAfter that,\nit asks who we're going connect to.\n\n1526\n01:20:08,550 --> 01:20:12,180\nAnd if I drop that down,\nI've got my browser turned on.\n\n1527\n01:20:12,180 --> 01:20:16,030\nSo I can see a list of all the SQL\nserver's that are found on the network.\n\n1528\n01:20:16,030 --> 01:20:18,410\nIf your browser was turned off,\nthis list would be empty.\n\n1529\n01:20:18,410 --> 01:20:20,620\nAnd you would have to manually\ntype in the server name.\n\n1530\n01:20:20,620 --> 01:20:22,840\nAnd that's normally what we do all right.\n\n1531\n01:20:22,840 --> 01:20:25,430\nWell, since my browser is on,\nI can drop that box down and\n\n1532\n01:20:25,430 --> 01:20:26,570\nsee everyone on the network.\n\n1533\n01:20:26,570 --> 01:20:29,550\nNow, notice I see test SQL right there.\n\n1534\n01:20:29,550 --> 01:20:32,190\nWin dash sequel O-1 slash test SQL.\n\n1535\n01:20:32,190 --> 01:20:36,270\nI don't see MSSQL,\nthe default instance and\n\n1536\n01:20:36,270 --> 01:20:40,260\nthat's because the default instance is\njust identified by the server name.\n\n1537\n01:20:40,260 --> 01:20:41,490\nWin dash sequel O-1.\n\n1538\n01:20:41,490 --> 01:20:42,940\nThat's my server name.\n\n1539\n01:20:42,940 --> 01:20:47,090\nIt's got it right there, that's going\nto connect me to the default instance.\n\n1540\n01:20:47,090 --> 01:20:50,820\nWhen I connect it's asking if I\nwant to use my Windows account and\n\n1541\n01:20:50,820 --> 01:20:52,550\nI'm logged in as administrator.\n\n1542\n01:20:52,550 --> 01:20:54,820\nI made that account in\nadministrator on the server,\n\n1543\n01:20:54,820 --> 01:20:59,560\nthat would be fine, or I could\nchose SQL Server Authentication and\n\n1544\n01:20:59,560 --> 01:21:05,440\nI can log in with that built in account,\nthe default one, which is called S A.\n\n1545\n01:21:05,440 --> 01:21:09,080\nS A is system administrator, and\nI can punch in the password.\n\n1546\n01:21:09,080 --> 01:21:11,990\nEither way I'll give administrative\naccess to this machine,\n\n1547\n01:21:11,990 --> 01:21:14,990\nthe difference is just whether or\nnot I can call network resources.\n\n1548\n01:21:14,990 --> 01:21:18,170\nIf I log you in my domain account,\nI can access network resources.\n\n1549\n01:21:18,170 --> 01:21:22,900\nIf I log in with SA I can only\naccess resources on this particular\n\n1550\n01:21:22,900 --> 01:21:23,560\ndatabase engine.\n\n1551\n01:21:25,660 --> 01:21:26,300\nAll right.\n\n1552\n01:21:26,300 --> 01:21:29,470\nYou can remember your password if you\nwant, that's always a great idea.\n\n1553\n01:21:29,470 --> 01:21:31,560\nI'm going to leave that blank and\nhit connect.\n\n1554\n01:21:34,730 --> 01:21:36,730\nNow it's gonna connect up to the server.\n\n1555\n01:21:36,730 --> 01:21:40,280\nAnd, the way it works is on\nthe left you'll have navigation.\n\n1556\n01:21:40,280 --> 01:21:43,920\nAnd then on the right, this big empty\nspace is where we'll see the screens that\n\n1557\n01:21:43,920 --> 01:21:46,130\npertain to what we're working with.\n\n1558\n01:21:46,130 --> 01:21:48,820\nIn Visual Studio if you were a programmer,\n\n1559\n01:21:48,820 --> 01:21:50,990\nthis is where you would be\ntyping in your source code.\n\n1560\n01:21:50,990 --> 01:21:53,680\nYour C# or Visual Basic or whatever.\n\n1561\n01:21:53,680 --> 01:21:56,960\nThe reason Microsoft went this way for\nMicrosoft Sequel,\n\n1562\n01:21:56,960 --> 01:22:00,470\nis you might be writing SQL, you might\nactually be writing queries and so on.\n\n1563\n01:22:00,470 --> 01:22:04,110\nAnd it's got some great rules in\nthere to help us avoid typo's and\n\n1564\n01:22:04,110 --> 01:22:06,130\ndo syntax corrections and so on.\n\n1565\n01:22:06,130 --> 01:22:11,580\nSo, its got some neat stuff for\nthat, we don't see it.\n\n1566\n01:22:11,580 --> 01:22:14,370\nOn the left side I see my server,\nWin dash SQL one.\n\n1567\n01:22:14,370 --> 01:22:17,770\nAnd then we see our databases,\nsecurity, and so on.\n\n1568\n01:22:17,770 --> 01:22:20,740\nAnd these are all the things we're gonna\nbe configuring for the rest of the show.\n\n1569\n01:22:20,740 --> 01:22:23,600\nIn all of our future episodes\nwe're basically gonna\n\n1570\n01:22:23,600 --> 01:22:26,180\nconfigure each of the entities\nyou see over here on the left.\n\n1571\n01:22:27,700 --> 01:22:32,570\nBut, just for right now let's take a look\nat some things on the server itself.\n\n1572\n01:22:32,570 --> 01:22:37,170\nWhen you finish an install like this,\nyou probably want to do some tweaks.\n\n1573\n01:22:37,170 --> 01:22:41,090\nIf you right click on the server name and\nchoose properties.\n\n1574\n01:22:41,090 --> 01:22:43,600\nYou'll see the properties for\nserver itself and\n\n1575\n01:22:43,600 --> 01:22:46,100\nhere we can start to\nadjust its configuration.\n\n1576\n01:22:46,100 --> 01:22:52,170\nThe two main things that I normally\nadjust are memory and processors.\n\n1577\n01:22:52,170 --> 01:22:56,620\nBy default,\nSQL will use all the resources it can get.\n\n1578\n01:22:56,620 --> 01:22:58,900\nIt will grab as much as it can.\n\n1579\n01:22:58,900 --> 01:23:01,420\nThat's fine if it's\na dedicated database server.\n\n1580\n01:23:01,420 --> 01:23:05,500\nBut if it's having to coexist with either\na second instance, a third instance,\n\n1581\n01:23:05,500 --> 01:23:09,160\nwhatever, or some other application,\nthen we probably need to set limits.\n\n1582\n01:23:09,160 --> 01:23:11,020\nSo you have what's called a governor and\n\n1583\n01:23:11,020 --> 01:23:15,880\nthe governor lets you restrict how much\nCPU, or how much memory you can get.\n\n1584\n01:23:15,880 --> 01:23:18,680\nAnd you can set a minimum or\na reservation, and\n\n1585\n01:23:18,680 --> 01:23:22,230\nyou can set a maximum to cap\nit off at a certain limit.\n\n1586\n01:23:22,230 --> 01:23:26,410\nSo maybe I wanna make sure that\nthis install will get a minimum\n\n1587\n01:23:26,410 --> 01:23:30,790\nof one gig of RAM,\nwhich I guess would actually be 1024.\n\n1588\n01:23:30,790 --> 01:23:34,028\nAnd I want to set a maximum to four gigs.\n\n1589\n01:23:34,028 --> 01:23:35,550\nI've got eight gigs of RAM in this system,\n\n1590\n01:23:35,550 --> 01:23:40,430\nbut I'm going to set a max because\nI have that other instance.\n\n1591\n01:23:40,430 --> 01:23:42,920\nAnd I want to make sure that it\nalways has a little bit of room.\n\n1592\n01:23:42,920 --> 01:23:45,790\nSo we can set that minimum and\nmaximum right there.\n\n1593\n01:23:47,140 --> 01:23:49,610\nNow, keep in mind when you\nchange these processor and\n\n1594\n01:23:49,610 --> 01:23:52,400\nmemory limits,\nthey don't take affect right away.\n\n1595\n01:23:52,400 --> 01:23:55,660\nThey take effect the next\ntime the server restarts.\n\n1596\n01:23:55,660 --> 01:23:57,710\nSo, when I change these values,\n\n1597\n01:23:57,710 --> 01:24:01,760\nthat's going to change what's set in the\nsettings, but not what's actually running.\n\n1598\n01:24:01,760 --> 01:24:03,240\nSee these buttons down here?\n\n1599\n01:24:03,240 --> 01:24:06,770\nConfigured values versus running values.\n\n1600\n01:24:06,770 --> 01:24:09,920\nWhat's configured on my server versus\nwhat's actually running right now.\n\n1601\n01:24:09,920 --> 01:24:14,050\nI'm gonna punch that in and\njust hit OK So that\n\n1602\n01:24:14,050 --> 01:24:19,080\nsetting just took effect and I'll pull\nup my properties again and go to memory.\n\n1603\n01:24:19,080 --> 01:24:21,340\nI'm looking at my configured values.\n\n1604\n01:24:21,340 --> 01:24:25,010\nOne gig of RAM minimum,\nfour gigs of RAM maximum.\n\n1605\n01:24:25,010 --> 01:24:26,440\nAnd if I go to running values.\n\n1606\n01:24:26,440 --> 01:24:29,180\nSee how it kinda grayed out there?\n\n1607\n01:24:29,180 --> 01:24:33,160\nActually, I guess that took\neffect without restarting.\n\n1608\n01:24:33,160 --> 01:24:35,870\nUsually what you'll see is you'll go to\nrunning values and these will still both\n\n1609\n01:24:35,870 --> 01:24:39,130\nshow no limits and that's because we\nhaven't' restarted the service yet.\n\n1610\n01:24:39,130 --> 01:24:43,300\nThis one, it did take effect so\nwe don't have to restart it.\n\n1611\n01:24:43,300 --> 01:24:46,580\nIf we did need to restart it though,\nall you'd have to do is right click on\n\n1612\n01:24:46,580 --> 01:24:51,890\nthe server, and you've got stop,\npause, restart.\n\n1613\n01:24:51,890 --> 01:24:55,380\nYou can hit restart and\nthat'll restart the database service.\n\n1614\n01:24:55,380 --> 01:24:57,480\nSo here I'll just tell it yes to restart.\n\n1615\n01:24:57,480 --> 01:24:58,760\nIt's gonna go in and restart it.\n\n1616\n01:24:58,760 --> 01:25:01,800\nIt's just warning me it's gonna kick\nanybody out, and the agent is gonna\n\n1617\n01:25:01,800 --> 01:25:05,250\nrestart also, and it'll restart that\nservice, allowing it to take effect.\n\n1618\n01:25:05,250 --> 01:25:09,250\nSo if you come across an option that you\nchange, that it doesn't take effect right\n\n1619\n01:25:09,250 --> 01:25:12,440\naway, the running values don't change,\nthat's how you restart it.\n\n1620\n01:25:12,440 --> 01:25:14,860\nWe could have done this through\nthe services panel also,\n\n1621\n01:25:14,860 --> 01:25:17,220\nyou can restart from there too,\nit doesn't really matter.\n\n1622\n01:25:18,790 --> 01:25:21,390\nYou'll probably notice my\nicon went red there for\n\n1623\n01:25:21,390 --> 01:25:25,520\na second showing I was disconnected,\nand now I'm connected again.\n\n1624\n01:25:25,520 --> 01:25:27,880\nSo, those little performance options,\n\n1625\n01:25:27,880 --> 01:25:29,650\nthey're just right here\nin the server properties.\n\n1626\n01:25:29,650 --> 01:25:32,170\nYou can manipulate those you\ncan set processor affinity,\n\n1627\n01:25:32,170 --> 01:25:35,910\nwhere you tie it to one core,\nor one socket versus another.\n\n1628\n01:25:35,910 --> 01:25:39,000\nYou can do all sorts of\ntweaks in here to get things\n\n1629\n01:25:39,000 --> 01:25:40,292\nrunning the way that you desire.\n\n1630\n01:25:40,292 --> 01:25:44,750\nAll right, we'll see how my second\ninstance is doing back here.\n\n1631\n01:25:44,750 --> 01:25:47,000\nIt looks like it is done.\n\n1632\n01:25:47,000 --> 01:25:50,440\nSo I might go and do something\nsimilar on my second instance.\n\n1633\n01:25:50,440 --> 01:25:52,250\nI'm gonna use the connect\nbutton right here.\n\n1634\n01:25:52,250 --> 01:25:56,420\nAnd you can actually connect to more\nthan one database engine at a time.\n\n1635\n01:25:56,420 --> 01:26:01,840\nI'm gonna connect to my other\ninstance this WinSQL01/test SQL.\n\n1636\n01:26:03,960 --> 01:26:07,068\nAnd I'll log in as SA.\n\n1637\n01:26:09,831 --> 01:26:13,998\nAll right, so now I'm connected\nto both my default instance and\n\n1638\n01:26:13,998 --> 01:26:17,390\nmy second instance, all right, my test.\n\n1639\n01:26:17,390 --> 01:26:21,250\nBe careful when you do this because when\nyou start to run commands, what you have\n\n1640\n01:26:21,250 --> 01:26:25,520\nhighlighted on the left is what's telling\nVisual Studio where to run your commands.\n\n1641\n01:26:25,520 --> 01:26:28,200\nSo always make sure you've got\nthe right thing highlighted.\n\n1642\n01:26:28,200 --> 01:26:33,200\nI'm gonna modify my test server and I'm\ngonna set some memory limits on it also.\n\n1643\n01:26:33,200 --> 01:26:36,490\nI'm gonna give it a minimum\nof one gig of memory but\n\n1644\n01:26:36,490 --> 01:26:39,020\nI'm gonna set its maximum at two gigs.\n\n1645\n01:26:39,020 --> 01:26:41,550\nI don't want it taking\nmore than two gigs of RAM,\n\n1646\n01:26:41,550 --> 01:26:44,050\nthat's the limit that I've applied for it.\n\n1647\n01:26:44,050 --> 01:26:47,700\nNow my production system\nis capped at four gigs.\n\n1648\n01:26:47,700 --> 01:26:50,182\nMy test is capped at two gigs.\n\n1649\n01:26:50,182 --> 01:26:53,810\nThat leaves two gigs of RAM left over for\nmy host OS.\n\n1650\n01:26:53,810 --> 01:26:55,160\nThat's gonna make sure I get a nice,\n\n1651\n01:26:55,160 --> 01:26:58,200\nfriendly environment with\nthese two instances running.\n\n1652\n01:26:58,200 --> 01:26:59,740\nSimple tweak to make.\n\n1653\n01:26:59,740 --> 01:27:01,480\nIf I was just running one SQL Server,\n\n1654\n01:27:01,480 --> 01:27:04,370\nI probably wouldn't have messed with\nthat I would have just let it be.\n\n1655\n01:27:04,370 --> 01:27:07,179\nBut when I've got them coexisting,\nI like to set limits.\n\n1656\n01:27:08,990 --> 01:27:09,720\nAll right.\n\n1657\n01:27:09,720 --> 01:27:10,600\nSo that's in place.\n\n1658\n01:27:10,600 --> 01:27:11,510\nI can restart that one.\n\n1659\n01:27:13,280 --> 01:27:15,570\nWe'll let it restart and\nthen we'll be good to go.\n\n1660\n01:27:15,570 --> 01:27:16,900\nAll right.\n\n1661\n01:27:16,900 --> 01:27:18,830\nSo getting SQL installed, not a big deal.\n\n1662\n01:27:18,830 --> 01:27:19,510\nAll right?\n\n1663\n01:27:19,510 --> 01:27:21,120\nNow that it's installed,\nwhat do we do with it?\n\n1664\n01:27:21,120 --> 01:27:23,890\nWell, it's kinda useless\nthe way that it is right now.\n\n1665\n01:27:23,890 --> 01:27:24,550\nIt's just sitting there.\n\n1666\n01:27:24,550 --> 01:27:25,920\nIt's got some empty databases on it.\n\n1667\n01:27:25,920 --> 01:27:27,410\nIt's not doing anything.\n\n1668\n01:27:27,410 --> 01:27:31,700\nSo our next step is going to be to\nput some databases in there and\n\n1669\n01:27:31,700 --> 01:27:34,660\nactually get it doing something for\nour company.\n\n1670\n01:27:34,660 --> 01:27:37,260\nSo that's gonna come down the line.\n\n1671\n01:27:37,260 --> 01:27:40,850\nLet's see, what else do we have?\n\n1672\n01:27:40,850 --> 01:27:42,780\nThat's really about it.\n\n1673\n01:27:42,780 --> 01:27:45,120\nIf I was upgrading from\nanother version of SQL,\n\n1674\n01:27:45,120 --> 01:27:49,690\nif I was going an in place upgrade then\nthe old databases would show up right now.\n\n1675\n01:27:49,690 --> 01:27:53,458\nIf I was doing another type of migration,\nthough, where I've got separate servers.\n\n1676\n01:27:53,458 --> 01:27:57,418\nThis is the point where I would either\nbackup the databases on the old server and\n\n1677\n01:27:57,418 --> 01:28:00,778\nrestore them here on the new server or\ndetach the database files and\n\n1678\n01:28:00,778 --> 01:28:02,518\ncopy them over and reattach them or\n\n1679\n01:28:02,518 --> 01:28:05,800\nwhatever it is that I was gonna\ndo as part of that upgrade.\n\n1680\n01:28:05,800 --> 01:28:08,375\nWe'll see detaching, and\nreattaching later on.\n\n1681\n01:28:08,375 --> 01:28:10,875\nIts an easy way to move databases,\nand do upgrades.\n\n1682\n01:28:10,875 --> 01:28:15,498\nSo we'll get a chance to see that, but\notherwise, we now have a SQL Server that's\n\n1683\n01:28:15,498 --> 01:28:18,320\nup and running, and\nits ready for us to work with.\n\n1684\n01:28:18,320 --> 01:28:18,820\nAll right.\n\n1685\n01:28:18,820 --> 01:28:22,360\nWell, looking at the clock, that's about\nall the time I've got for this episode.\n\n1686\n01:28:22,360 --> 01:28:26,650\nSo we'll start tackling databases, in\nthe second episode, and jump from there.\n\n1687\n01:28:26,650 --> 01:28:29,850\nGreat question there, in the chat room,\nlet me answer this one real quick,\n\n1688\n01:28:29,850 --> 01:28:30,653\nbefore we wrap up.\n\n1689\n01:28:30,653 --> 01:28:32,820\nWhich is,\nif you were running a web server.\n\n1690\n01:28:32,820 --> 01:28:33,403\nRight?\n\n1691\n01:28:33,403 --> 01:28:37,606\nSo you got a web server, and if the\ndatabase server is right there on the same\n\n1692\n01:28:37,606 --> 01:28:39,695\nsystem, are they going to contend?\n\n1693\n01:28:39,695 --> 01:28:40,820\nRight?\nAnd the answer is yes.\n\n1694\n01:28:40,820 --> 01:28:42,420\nYeah.\nThey're gonna fight for memory.\n\n1695\n01:28:42,420 --> 01:28:44,490\nAnd so\nyou can put limits to protect from that.\n\n1696\n01:28:44,490 --> 01:28:45,210\nThe problem is,\n\n1697\n01:28:45,210 --> 01:28:49,872\nthe web server doesn't really, like IIS,\ndoesn't take limits very well.\n\n1698\n01:28:49,872 --> 01:28:53,400\nSo you're up to your\nhost OS to regulate that.\n\n1699\n01:28:53,400 --> 01:28:55,980\nIf you just let them go wild,\nthey compete for\n\n1700\n01:28:55,980 --> 01:28:59,170\nthe resources, on a first come,\nfirst serve basis.\n\n1701\n01:28:59,170 --> 01:29:02,810\nAnd in IIS,\nit can spiral out of control sometimes.\n\n1702\n01:29:02,810 --> 01:29:07,320\nIf they both start to go for extra memory,\nthey'll get it, even if you run out of\n\n1703\n01:29:07,320 --> 01:29:10,740\nphysical memory, and what that means is,\nyou'll start paging.\n\n1704\n01:29:10,740 --> 01:29:14,600\nInstead of using physical memory, it'll\nstart writing to the page file on the hard\n\n1705\n01:29:14,600 --> 01:29:18,340\ndrive, so now you're creating disc IO,\nwhich is slower.\n\n1706\n01:29:18,340 --> 01:29:19,870\nIt's already slower than memory, right?\n\n1707\n01:29:19,870 --> 01:29:22,820\nBecause in RAM,\nwe measure speed in nanoseconds, but\n\n1708\n01:29:22,820 --> 01:29:24,380\non the hard drive,\nwe measure it in milliseconds.\n\n1709\n01:29:24,380 --> 01:29:26,540\nSo it's an order of magnitude different,\nbut\n\n1710\n01:29:26,540 --> 01:29:30,540\nit's even more slow because, now our\nmemory is being read from the hard drive.\n\n1711\n01:29:30,540 --> 01:29:33,750\nThe same hard drive that our OS,\nand SQL server is running from.\n\n1712\n01:29:33,750 --> 01:29:35,620\nNow we get a lot of contention there.\n\n1713\n01:29:35,620 --> 01:29:37,890\nSo you don't want that to happen.\n\n1714\n01:29:37,890 --> 01:29:39,960\nImplementing limits like these,\nis how we prevent it.\n\n1715\n01:29:39,960 --> 01:29:40,530\nRight?\n\n1716\n01:29:40,530 --> 01:29:42,390\nBut an even better thing to do?\n\n1717\n01:29:42,390 --> 01:29:46,800\nIf that web server, is a production\nuse web server, split it off,\n\n1718\n01:29:46,800 --> 01:29:50,430\nsplit it separate, don't run your database\non the same server, as your web server.\n\n1719\n01:29:50,430 --> 01:29:52,820\nNow you start to get better management,\nand isolation.\n\n1720\n01:29:52,820 --> 01:29:55,658\nSo as your company grows,\nas your user base grows,\n\n1721\n01:29:55,658 --> 01:30:00,153\nyour equipment needs to start to grow,\nand you really do get complex kinda fast.\n\n1722\n01:30:00,153 --> 01:30:01,520\nAll right.\nGreat question Mike, thanks for that.\n\n1723\n01:30:03,150 --> 01:30:05,590\nAll right.\nWell, let me remind you guys.\n\n1724\n01:30:05,590 --> 01:30:08,560\nIf you have questions,\nlike those, live during the show,\n\n1725\n01:30:08,560 --> 01:30:10,510\nyou can jump over to www.itpro.tv/live.\n\n1726\n01:30:10,510 --> 01:30:13,200\nAnd you'll see the chat room\nright beneath the video.\n\n1727\n01:30:13,200 --> 01:30:14,020\nPost your questions there.\n\n1728\n01:30:14,020 --> 01:30:17,620\nWe love to answer them during the show,\nand get you the information you need.\n\n1729\n01:30:17,620 --> 01:30:19,220\nIf you have questions afterwards,\n\n1730\n01:30:19,220 --> 01:30:22,150\nlike if you're watching this recorded,\nuse our Q&A forums.\n\n1731\n01:30:22,150 --> 01:30:25,580\nAt the top of every page, is a link that\nsays Q&A, it'll take you into the forums,\n\n1732\n01:30:25,580 --> 01:30:26,980\nyou can post your questions there.\n\n1733\n01:30:26,980 --> 01:30:28,000\nWe monitor and answer.\n\n1734\n01:30:28,000 --> 01:30:31,030\nWe wanna make sure you guys\nhave answers in your mind, and\n\n1735\n01:30:31,030 --> 01:30:33,300\nnot questions,\nwhen you go into that test booth.\n\n1736\n01:30:33,300 --> 01:30:37,110\nSo take advantage of that resource,\nit is there for you.\n\n1737\n01:30:37,110 --> 01:30:39,118\nAll right.\nWell I hope you guys enjoyed the show,\n\n1738\n01:30:39,118 --> 01:30:40,361\nsigning off for ITProTV.\n\n1739\n01:30:40,361 --> 01:30:43,653\nI'm Don Pezet, and I'll see you next time.\n\n1740\n01:30:43,653 --> 01:30:53,653\n[MUSIC]\n\n1741\n01:30:55,903 --> 01:31:01,260\n[NOISE]\n\n",
          "vimeoId": "105279755"
        }
      ],
      "title": "Install and configure"
    },
    {
      "episodes": [
        {
          "description": "In this episode Don demonstrates how to create databases in Microsoft SQL. He then discusses how important the underlying file system is in terms of SQL performance.",
          "length": "6195",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/003-Manage-and-Configure-Databases.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/003-Manage-and-Configure-Databases-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/003-Manage-and-Configure-Databases-sm.jpg",
          "title": "Manage and Configure Databases",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:33,680 --> 00:00:36,541\nAll right, good morning,\ngood afternoon, and good evening.\n\n3\n00:00:36,541 --> 00:00:38,820\nAnd welcome back to another\nepisode of ITProTV.\n\n4\n00:00:38,820 --> 00:00:44,450\nI'm your host, Don Pezet, back again with\nanother episode of Microsoft SQL Sever.\n\n5\n00:00:44,450 --> 00:00:48,720\nIn our last episode, we got a chance to\nsee how to get Microsoft SQL installed.\n\n6\n00:00:48,720 --> 00:00:51,820\nWe learned a bit about the product and\nsaw that process, but\n\n7\n00:00:51,820 --> 00:00:54,110\nwe didn't actually do anything with it.\n\n8\n00:00:54,110 --> 00:00:57,300\nBy the end of the episode, sure,\nwe'd created a SQL Server, but\n\n9\n00:00:57,300 --> 00:00:59,430\nit really served no purpose.\n\n10\n00:00:59,430 --> 00:01:04,470\nAnd that's how database servers are until\nyou start to put some databases on them,\n\n11\n00:01:04,470 --> 00:01:06,260\nand that's what we're gonna do today.\n\n12\n00:01:06,260 --> 00:01:09,080\nWe're gonna take a look at how\nwe can create a database and\n\n13\n00:01:09,080 --> 00:01:10,960\nhow we can put it in action.\n\n14\n00:01:10,960 --> 00:01:13,930\nSo that is a lot of neat stuff to tackle.\n\n15\n00:01:13,930 --> 00:01:15,390\nSo that's where we're gonna go.\n\n16\n00:01:15,390 --> 00:01:18,790\nBefore I do that though, I do wanna talk\na little bit about how the databases work\n\n17\n00:01:18,790 --> 00:01:20,810\nand what all is involved in them.\n\n18\n00:01:20,810 --> 00:01:23,660\nWhen people think of Microsoft SQL, or\n\n19\n00:01:23,660 --> 00:01:26,760\njust database servers in general,\noftentimes what they envision in\n\n20\n00:01:26,760 --> 00:01:30,060\ntheir mind is something a little\ndifferent than what we actually have.\n\n21\n00:01:30,060 --> 00:01:32,590\nA lot of people think of tables, right?\n\n22\n00:01:32,590 --> 00:01:34,970\nLet me bring up my model diagrams here.\n\n23\n00:01:34,970 --> 00:01:37,680\nSo most people think of tables like this,\nright?\n\n24\n00:01:37,680 --> 00:01:42,060\nHere's a sample table where we've got\nEmployees, so we've got first name,\n\n25\n00:01:42,060 --> 00:01:45,200\nlast name, hire date,\npay rate, manager, and so on.\n\n26\n00:01:45,200 --> 00:01:48,760\nThese are our tables of information,\nand in a database,\n\n27\n00:01:48,760 --> 00:01:50,800\ntables are what you normally work with.\n\n28\n00:01:50,800 --> 00:01:55,210\nBut a database is not a single table,\n\n29\n00:01:55,210 --> 00:01:58,000\na database is actually\na collection of tables.\n\n30\n00:01:58,000 --> 00:02:00,440\nYou might only have one, but\nyou might have a thousand,\n\n31\n00:02:00,440 --> 00:02:01,840\nyou might have a million tables.\n\n32\n00:02:01,840 --> 00:02:05,040\nIt depends on how much data you're\nmanaging and how you're working with it.\n\n33\n00:02:05,040 --> 00:02:08,150\nWe won't normally have a million,\nthat would be pretty excessive, but\n\n34\n00:02:08,150 --> 00:02:10,260\nyou could if you wanted.\n\n35\n00:02:10,260 --> 00:02:12,080\nIn the table is our data, and\n\n36\n00:02:12,080 --> 00:02:17,570\nour data is comprised of values\nstored inside of columns and rows.\n\n37\n00:02:17,570 --> 00:02:21,360\nSo, if you've worked with a spreadsheet\nprogram like Microsoft Excel,\n\n38\n00:02:21,360 --> 00:02:25,030\nor Google Docs, what do they call theirs?\n\n39\n00:02:25,030 --> 00:02:27,680\nSheets or something like that,\nApple Numbers, whatever.\n\n40\n00:02:27,680 --> 00:02:30,380\nIf you've worked with any of\nthose different products, well,\n\n41\n00:02:30,380 --> 00:02:31,330\nthat's basically a table.\n\n42\n00:02:31,330 --> 00:02:33,300\nAnd it's basically a database table.\n\n43\n00:02:33,300 --> 00:02:37,060\nBut what you're missing\nare the relationships between\n\n44\n00:02:37,060 --> 00:02:41,450\nthat table in your spreadsheet software\nand another table somewhere else.\n\n45\n00:02:41,450 --> 00:02:46,200\nIn a database we can have several\ntables that are all related together.\n\n46\n00:02:46,200 --> 00:02:48,900\nThat's why they call these\na relational database.\n\n47\n00:02:48,900 --> 00:02:53,660\nI might have an ID number here that\ncontains data that references back\n\n48\n00:02:53,660 --> 00:02:56,960\nto other tables, or\neven data within this table itself.\n\n49\n00:02:56,960 --> 00:02:59,760\nSee how I've got Andrew Aimes here.\n\n50\n00:02:59,760 --> 00:03:04,030\nAndrew Aimes is an employee, he's employee\nnumber three, and he has a manager.\n\n51\n00:03:04,030 --> 00:03:06,010\nThe manager's ID is number one.\n\n52\n00:03:06,010 --> 00:03:10,220\nWell that number one, that's not a person,\nwe don't have an employee named one.\n\n53\n00:03:10,220 --> 00:03:11,520\nIt's a reference.\n\n54\n00:03:11,520 --> 00:03:13,620\nIt references back to this ID.\n\n55\n00:03:13,620 --> 00:03:15,980\nWhoever employee ID number one is,\nin this case,\n\n56\n00:03:15,980 --> 00:03:18,820\nJohn Smith, that's Andrew's boss, right?\n\n57\n00:03:18,820 --> 00:03:19,970\nThat's a relationship.\n\n58\n00:03:19,970 --> 00:03:24,030\nAnd that's a very simple example of one\nhappening right here inside of one table.\n\n59\n00:03:24,030 --> 00:03:25,440\nBut more often than not,\n\n60\n00:03:25,440 --> 00:03:28,492\nthose relationships exist\nbetween multiple tables.\n\n61\n00:03:28,492 --> 00:03:33,460\nI might have one table that lists all\nthe products that my company sells.\n\n62\n00:03:33,460 --> 00:03:37,820\nI may have another table that lists all\nthe orders that customers have placed.\n\n63\n00:03:37,820 --> 00:03:41,280\nWell in the orders, I have to\nidentify what products people bought.\n\n64\n00:03:41,280 --> 00:03:44,020\nAnd so we'll normally have\na reference on that order\n\n65\n00:03:44,020 --> 00:03:46,600\nthat points back to a products\ntable somewhere else.\n\n66\n00:03:46,600 --> 00:03:48,250\nSo when we create a database,\n\n67\n00:03:48,250 --> 00:03:52,370\nthat database is really just\na storage location for these tables.\n\n68\n00:03:52,370 --> 00:03:57,040\nSo the tables are what we work with, but\nthe databases are where they get stored.\n\n69\n00:03:57,040 --> 00:04:01,420\nAnd the reason that I bring that up here\nis when we go to build a new database,\n\n70\n00:04:01,420 --> 00:04:04,570\nthe first thing that needs to\nbe in our mind is storage.\n\n71\n00:04:04,570 --> 00:04:09,180\nWe're storing data, and where we store\nit is gonna influence a lot of things,\n\n72\n00:04:09,180 --> 00:04:11,350\nthe most important of\nwhich being performance.\n\n73\n00:04:11,350 --> 00:04:13,180\nIf you want your database to run nice and\n\n74\n00:04:13,180 --> 00:04:15,809\nfast, there's things you've got to\nthink about before you create it.\n\n75\n00:04:17,280 --> 00:04:20,020\nThe first thing we need to deal with\nwhen it comes to creating storage\n\n76\n00:04:20,020 --> 00:04:23,220\nis understanding that\nthe database is actually made up\n\n77\n00:04:23,220 --> 00:04:24,980\nof several different components.\n\n78\n00:04:24,980 --> 00:04:29,240\nBut the two main components that we need\nto remember are the database itself and\n\n79\n00:04:29,240 --> 00:04:30,270\nthe transaction logs.\n\n80\n00:04:30,270 --> 00:04:33,850\nAll right,\nnow what the heck is a transaction log?\n\n81\n00:04:33,850 --> 00:04:35,760\nTransaction logs are a great technology.\n\n82\n00:04:35,760 --> 00:04:39,320\nSomething that has been around for\na long, long time.\n\n83\n00:04:40,700 --> 00:04:45,200\nWhen you deal with databases,\nif you write data to it, there is a chance\n\n84\n00:04:45,200 --> 00:04:48,310\nthat you could get database corruption,\nand the corruption would be bad, right?\n\n85\n00:04:48,310 --> 00:04:51,780\nIf it's a mission critical database,\nyou want your data to be safe, and so\n\n86\n00:04:51,780 --> 00:04:53,570\nyou want to prevent errors.\n\n87\n00:04:53,570 --> 00:04:57,740\nWell in the old days, or\neven today with like Microsoft Excel,\n\n88\n00:04:57,740 --> 00:05:01,020\nwhen you're writing to that spreadsheet,\nwhat are you writing to?\n\n89\n00:05:01,020 --> 00:05:02,960\nYou're writing to the spreadsheet itself.\n\n90\n00:05:02,960 --> 00:05:05,050\nAnd in the old days of\ndatabases that's what you did.\n\n91\n00:05:05,050 --> 00:05:06,820\nYou wrote it to the database itself.\n\n92\n00:05:06,820 --> 00:05:11,000\nSo if a client wanted to write\nsome data into a database,\n\n93\n00:05:11,000 --> 00:05:15,180\nthey would connect up and send their\ndata right into that database directly.\n\n94\n00:05:16,240 --> 00:05:22,250\nWell, what would happen if there was a\npower failure halfway through that write,\n\n95\n00:05:22,250 --> 00:05:25,810\nor our network connection was\nlost halfway through that write?\n\n96\n00:05:25,810 --> 00:05:29,490\nWell, you've written half\nyour data to the database.\n\n97\n00:05:29,490 --> 00:05:31,520\nThe rest of it is lost.\n\n98\n00:05:31,520 --> 00:05:34,040\nSo now we've got a partial\nwrite on the database,\n\n99\n00:05:34,040 --> 00:05:35,970\nwhich is basically data corruption.\n\n100\n00:05:35,970 --> 00:05:40,040\nIf we were overriding something else,\nwe've only overridden a portion of it, and\n\n101\n00:05:40,040 --> 00:05:41,970\nnow our data is broken.\n\n102\n00:05:41,970 --> 00:05:44,130\nSo we end up with database corruption.\n\n103\n00:05:44,130 --> 00:05:47,090\nAnd when you're just dealing with a simple\nspreadsheet, it's not a big deal.\n\n104\n00:05:47,090 --> 00:05:49,780\nYou've probably got a backup,\nyou can just pull it back up.\n\n105\n00:05:49,780 --> 00:05:53,110\nBut when you're dealing with\na database that might have thousands or\n\n106\n00:05:53,110 --> 00:05:56,820\nhundreds of thousands of users in it\nthat are all relying upon that data,\n\n107\n00:05:56,820 --> 00:06:00,330\nwhen you get that data corruption that'll\nbe the end of your day right there.\n\n108\n00:06:00,330 --> 00:06:01,300\nThat's a big deal.\n\n109\n00:06:02,320 --> 00:06:08,440\nSo with databases, we never allow people\nto write directly to the database.\n\n110\n00:06:08,440 --> 00:06:09,760\nThere are ways to do it.\n\n111\n00:06:09,760 --> 00:06:11,440\nThere's special exceptions.\n\n112\n00:06:11,440 --> 00:06:15,900\nBut the general rule is no one is allowed\nto write directly to the database.\n\n113\n00:06:15,900 --> 00:06:19,520\nInstead, if somebody wants\nto write to the database,\n\n114\n00:06:19,520 --> 00:06:23,130\nthey write to the transaction\nlogs instead.\n\n115\n00:06:23,130 --> 00:06:27,050\nThey bypass the database, and\nwrite to the transaction log.\n\n116\n00:06:28,850 --> 00:06:32,840\nBy doing this,\nwe're writing to a separate location.\n\n117\n00:06:32,840 --> 00:06:38,100\nAnd when our change is 100%\nwritten into that transaction log,\n\n118\n00:06:38,100 --> 00:06:43,020\nso when our change is fully written in\nthere and our data is put in place,\n\n119\n00:06:43,020 --> 00:06:46,870\nthen SQL Server will come back behind and\n\n120\n00:06:46,870 --> 00:06:51,940\ntake that data, and\nwrite it over into our database.\n\n121\n00:06:51,940 --> 00:06:56,210\nSo the data gets put into the database,\njust not directly.\n\n122\n00:06:56,210 --> 00:07:00,670\nWe can't go and write directly into it,\nwe go round about.\n\n123\n00:07:00,670 --> 00:07:04,420\nWe write to the transaction log when it's\n100% here, then it writes to the database.\n\n124\n00:07:05,510 --> 00:07:09,230\nIf we're writing to the transaction log,\nand we're halfway through and\n\n125\n00:07:09,230 --> 00:07:12,450\nwe lose power, or the network\nconnection drops or whatever, and\n\n126\n00:07:12,450 --> 00:07:16,780\nwe've only gotten halfway through on\nthe transaction log, well, that's fine.\n\n127\n00:07:16,780 --> 00:07:20,595\nThe system will see that it was a partial\nwrite and it'll just wipe it out.\n\n128\n00:07:20,595 --> 00:07:24,240\nIt'll just erase that change and say,\nyou know what, it just never happened.\n\n129\n00:07:24,240 --> 00:07:29,119\nThe change never made it into the database\nitself, so this ensures, it guarantees,\n\n130\n00:07:29,119 --> 00:07:33,800\nthat any data that gets written into\nthe database will be written intact.\n\n131\n00:07:33,800 --> 00:07:39,600\nIf it's a power failure, if we've written\n100% of our data to the transaction log,\n\n132\n00:07:39,600 --> 00:07:44,040\nand it starts writing to the database and\nit's halfway through and\n\n133\n00:07:44,040 --> 00:07:48,450\nwe have a power outage, well, it was\nhalfway through writing to the database,\n\n134\n00:07:48,450 --> 00:07:50,020\nnow I've got corruption, right?\n\n135\n00:07:50,020 --> 00:07:51,240\nWell, we don't.\n\n136\n00:07:51,240 --> 00:07:55,292\nAnd the reason is we've got a log\nof what was supposed to be done.\n\n137\n00:07:55,292 --> 00:07:57,542\nThe changes that were supposed\nto be made are right here.\n\n138\n00:07:57,542 --> 00:07:59,833\nThey were 100% written\nto the transaction log.\n\n139\n00:07:59,833 --> 00:08:03,304\nSo when we reboot,\nwe can either roll forward and\n\n140\n00:08:03,304 --> 00:08:05,870\njust finish the write operation.\n\n141\n00:08:05,870 --> 00:08:08,460\nWe were half way through it and\nwe can just finish it.\n\n142\n00:08:08,460 --> 00:08:10,290\nOr we can roll back.\n\n143\n00:08:10,290 --> 00:08:13,580\nWe can remove what was done and\nput it back so\n\n144\n00:08:13,580 --> 00:08:15,540\nthat it was the way that it was before.\n\n145\n00:08:15,540 --> 00:08:18,210\nThat's the advantage of\nhaving a transaction log.\n\n146\n00:08:18,210 --> 00:08:19,880\nWe've now got a full record of that.\n\n147\n00:08:19,880 --> 00:08:24,370\nSo it insures database\nconsistency if we have failures,\n\n148\n00:08:24,370 --> 00:08:28,030\nnetwork connection lost, things like that.\n\n149\n00:08:28,030 --> 00:08:32,390\nWell, when you write to the database, you\nwill always write to the transaction log.\n\n150\n00:08:32,390 --> 00:08:36,470\nWhen you read from the database,\nwhen you're going to get data out of it,\n\n151\n00:08:36,470 --> 00:08:41,070\nthe reads actually happen right\nagainst the database itself.\n\n152\n00:08:41,070 --> 00:08:43,710\nWe can just reach right in there,\nbecause we're going a read operation,\n\n153\n00:08:43,710 --> 00:08:47,370\nwe're not changing anything, so\nthere's no risk of damaging anything.\n\n154\n00:08:47,370 --> 00:08:52,110\nIf we have a power outage in the middle\nof our read, big deal, right?\n\n155\n00:08:52,110 --> 00:08:55,390\nIt just means we had an incomplete read.\n\n156\n00:08:55,390 --> 00:08:57,300\nWe had a power outage anyway so\nour computer's probably off,\n\n157\n00:08:57,300 --> 00:08:58,950\nwe probably won't even notice.\n\n158\n00:08:58,950 --> 00:09:00,990\nSo, it's not a big deal there.\n\n159\n00:09:00,990 --> 00:09:03,340\nYou read directly from the database.\n\n160\n00:09:03,340 --> 00:09:05,250\nYou write to the transaction log.\n\n161\n00:09:05,250 --> 00:09:09,330\nNow, I'm stressing this here,\nbecause when we create our database\n\n162\n00:09:09,330 --> 00:09:12,990\nwe have to figure out where we\nwanna put it on our hard drives.\n\n163\n00:09:12,990 --> 00:09:16,190\nAnd if you're optimizing for performance,\n\n164\n00:09:16,190 --> 00:09:21,500\nyour reads happen to one file and\nyour writes happen to another file.\n\n165\n00:09:21,500 --> 00:09:26,450\nSo you can structure your storage\nto provide the best performance.\n\n166\n00:09:26,450 --> 00:09:29,710\nYou'll have technologies like RAID 5.\n\n167\n00:09:29,710 --> 00:09:34,990\nRAID 5 gives you a pretty good boost on\ndoing reads across a series of drives,\n\n168\n00:09:34,990 --> 00:09:37,910\nbut RAID 5 hurts you a bit when you do\n\n169\n00:09:37,910 --> 00:09:40,200\nwrites because it's having\nto calculate out parity.\n\n170\n00:09:40,200 --> 00:09:42,890\nIt's a mathematical operation\nthat slows things down.\n\n171\n00:09:42,890 --> 00:09:47,030\nSo different storage technologies,\nRAID 0, RAID 1, RAID 5.\n\n172\n00:09:47,030 --> 00:09:50,800\nEach of those will impact\nthe performance profile of your storage.\n\n173\n00:09:50,800 --> 00:09:53,640\nSo when we create that database,\nwe gotta pick the right one.\n\n174\n00:09:53,640 --> 00:09:55,340\nThe one that meets our needs.\n\n175\n00:09:56,455 --> 00:10:01,755\nSo, if we just want to create a database,\nthe default is that it's going\n\n176\n00:10:01,755 --> 00:10:06,635\nto create it and stick it right in the\nfolder where you installed Microsoft SQL.\n\n177\n00:10:06,635 --> 00:10:09,145\nAnd we saw that yesterday in the show,\nright.\n\n178\n00:10:09,145 --> 00:10:13,525\nSo here's that server that we\nbrought up in the first show, and\n\n179\n00:10:13,525 --> 00:10:18,830\nif I browse to my C drive, and into\nprogram files, into Microsoft SQL server.\n\n180\n00:10:20,310 --> 00:10:21,590\nAnd into the server itself.\n\n181\n00:10:22,910 --> 00:10:24,910\nI've got that data folder and\n\n182\n00:10:24,910 --> 00:10:27,340\nthat's where I'll find all\nthe databases that were made.\n\n183\n00:10:27,340 --> 00:10:31,530\nThis is the same drive where\nMicrosoft SQL, the data engine, is stored.\n\n184\n00:10:31,530 --> 00:10:34,160\nIt's the same drive where my\noperating system is stored.\n\n185\n00:10:34,160 --> 00:10:37,190\nIt's the same drive where\nmy page file is stored.\n\n186\n00:10:37,190 --> 00:10:41,630\nAll the disk I/O from my system is\nhappening on this drive right here,\n\n187\n00:10:41,630 --> 00:10:43,210\nright on my C drive.\n\n188\n00:10:43,210 --> 00:10:46,590\nNow if this is a test or development\nserver, I'm not worried about that.\n\n189\n00:10:46,590 --> 00:10:50,580\nBut if this is a production server,\nthe busier that server gets,\n\n190\n00:10:50,580 --> 00:10:54,510\nthe more and more reads or writes that are\noccurring, the more disk I/O that happens,\n\n191\n00:10:54,510 --> 00:10:58,130\nthe more I'm gonna need to tune\nthis to improve its performance.\n\n192\n00:10:58,130 --> 00:11:01,900\nSo I wanna walk you guys through\nthe process of creating the database.\n\n193\n00:11:01,900 --> 00:11:06,250\nAnd we'll just create a simple one\nto start, just to see it in action.\n\n194\n00:11:06,250 --> 00:11:10,720\nAnd then, we'll start to tweak it to\nimprove it for our storage needs.\n\n195\n00:11:10,720 --> 00:11:15,645\nBecause you'll often times find that your\nstorage needs change as your data grows.\n\n196\n00:11:15,645 --> 00:11:17,940\nSo what might be a perfect solution today,\n\n197\n00:11:17,940 --> 00:11:20,770\ncan actually become a pretty\npoor solution later on.\n\n198\n00:11:22,170 --> 00:11:26,340\nAll right now, creating a database\nis really, really straightforward.\n\n199\n00:11:26,340 --> 00:11:30,060\nWe need to know how to do it from\nthe graphical user interface.\n\n200\n00:11:30,060 --> 00:11:34,550\nWe also need to know how to do it\nthrough Transact SQL, through the actual\n\n201\n00:11:34,550 --> 00:11:38,460\nstandard query language that we write\nour SQL query to create a database.\n\n202\n00:11:38,460 --> 00:11:41,820\nBut the syntax and\nall of that is pretty straight forward.\n\n203\n00:11:41,820 --> 00:11:42,790\nI want to show you a little\n\n204\n00:11:42,790 --> 00:11:46,860\ntrick that will help you with learning\nthe Transact SQL side of things.\n\n205\n00:11:46,860 --> 00:11:49,150\nIn the GUI, everything is wizard driven.\n\n206\n00:11:49,150 --> 00:11:52,200\nAnd that's great,\nif you're doing a one-time activity.\n\n207\n00:11:52,200 --> 00:11:56,450\nBut if you want to schedule or something,\nor have it run through a script,\n\n208\n00:11:56,450 --> 00:11:59,410\nyou're gonna need to know\nthe command line method of doing it.\n\n209\n00:11:59,410 --> 00:12:04,970\nWell, everything you do in the GUI in\nMicrosoft SQL Server Management Studio,\n\n210\n00:12:04,970 --> 00:12:06,430\neverything you do in here in the GUI,\n\n211\n00:12:06,430 --> 00:12:09,380\nit's actually doing via the command\nline in the background.\n\n212\n00:12:09,380 --> 00:12:11,490\nYou just don't see it,\nit just hides that from you.\n\n213\n00:12:11,490 --> 00:12:15,400\nWell, there's a neat little button when\nyou perform an action, that says script.\n\n214\n00:12:15,400 --> 00:12:16,660\nAnd if you hit that button,\n\n215\n00:12:16,660 --> 00:12:20,410\nit will tell you what you would\nneed to run to perform that action.\n\n216\n00:12:20,410 --> 00:12:22,920\nSo let's see that in terms of a database.\n\n217\n00:12:22,920 --> 00:12:27,500\nIf I go into my databases here, I can see\nthere's already some databases in here,\n\n218\n00:12:27,500 --> 00:12:29,260\nmy system databases.\n\n219\n00:12:29,260 --> 00:12:31,600\nYou typically don't wanna mess with these.\n\n220\n00:12:31,600 --> 00:12:34,550\nYou wanna back them up, but\nyou don't normally wanna mess with them,\n\n221\n00:12:34,550 --> 00:12:37,890\nbecause they're performing some\nfunction of the system, right?\n\n222\n00:12:37,890 --> 00:12:39,580\nLet me just give you\nthe run-down on these.\n\n223\n00:12:39,580 --> 00:12:41,630\nThe first one is the master database.\n\n224\n00:12:41,630 --> 00:12:44,240\nThe master database is the one that has,\nbasically,\n\n225\n00:12:44,240 --> 00:12:46,520\nyour SQL server's configuration.\n\n226\n00:12:46,520 --> 00:12:49,720\nIt's the one that identifies\nwhat other databases exist and\n\n227\n00:12:49,720 --> 00:12:52,625\nwhat their settings are and\nconfiguration values.\n\n228\n00:12:52,625 --> 00:12:54,835\nSo the master database\nis really important.\n\n229\n00:12:54,835 --> 00:12:57,485\nIt's the configuration of your SQL server.\n\n230\n00:12:57,485 --> 00:13:02,471\nAnd as a result, we wanna back it up,\nbut we don't normally want to change it.\n\n231\n00:13:02,471 --> 00:13:03,307\nThe model database.\n\n232\n00:13:03,307 --> 00:13:06,215\nThe model database is a template.\n\n233\n00:13:06,215 --> 00:13:08,285\nEvery time you create a new database,\n\n234\n00:13:08,285 --> 00:13:10,415\nwhat's it's actually doing\nis copying this one.\n\n235\n00:13:10,415 --> 00:13:12,215\nCopying the model database.\n\n236\n00:13:12,215 --> 00:13:16,275\nSo if I want to set up a template so that\nevery new database I create has certain\n\n237\n00:13:16,275 --> 00:13:19,960\nconfiguration values I can\nmodify the model database.\n\n238\n00:13:19,960 --> 00:13:25,290\nIf I modify it, any new database I create\nwill have those changes, all right.\n\n239\n00:13:25,290 --> 00:13:27,190\nAnd the old database will be unchanged,\nright.\n\n240\n00:13:27,190 --> 00:13:28,940\nIt's just at creation.\n\n241\n00:13:28,940 --> 00:13:31,390\nWhen you create a database,\nthe model database is copied.\n\n242\n00:13:33,230 --> 00:13:34,170\nMSDB.\n\n243\n00:13:34,170 --> 00:13:36,230\nThat's the Microsoft database.\n\n244\n00:13:36,230 --> 00:13:39,770\nThere's some proprietary software in\ntechnologies that Microsoft uses.\n\n245\n00:13:39,770 --> 00:13:44,570\nA lot of special scripts and in store\nprocedures and things like that that\n\n246\n00:13:44,570 --> 00:13:49,970\nMicrosoft uses as part of their system and\nthey store all of that in the MSDB.\n\n247\n00:13:49,970 --> 00:13:53,682\nAgain, this is another one that we\ndon't typically mess with because it's\n\n248\n00:13:53,682 --> 00:13:55,860\nthe Microsoft proprietary stuff in it.\n\n249\n00:13:56,860 --> 00:13:58,300\nAnd then lastly is the Temp DB.\n\n250\n00:13:58,300 --> 00:14:00,280\nThat's the temporary database.\n\n251\n00:14:00,280 --> 00:14:02,850\nSeveral of the things that we're\ngonna use in this show will create\n\n252\n00:14:02,850 --> 00:14:06,900\ntemporary tables and temporary information\nthat is just used for a brief moment.\n\n253\n00:14:06,900 --> 00:14:08,820\nAnd those will go in the Temp DB.\n\n254\n00:14:08,820 --> 00:14:11,926\nTypically as soon as that action\nis completed they get flushed.\n\n255\n00:14:11,926 --> 00:14:15,504\nSo your Temp DB is usually empty, but\nthere will be data in it that comes and\n\n256\n00:14:15,504 --> 00:14:17,663\ngoes based on actions you're performing.\n\n257\n00:14:17,663 --> 00:14:22,100\nAll right, so these are all databases that\nwere already created when we installed our\n\n258\n00:14:22,100 --> 00:14:25,220\nsystem and so\nthey're under system databases.\n\n259\n00:14:25,220 --> 00:14:27,840\nWhen we create our own databases,\nthey won't go in that folder.\n\n260\n00:14:27,840 --> 00:14:30,380\nThey'll just go right here\nunder the database folder.\n\n261\n00:14:30,380 --> 00:14:33,420\nSo when I look at the database folder,\nI see there's no databases here.\n\n262\n00:14:33,420 --> 00:14:36,340\nThat means I have no user databases.\n\n263\n00:14:36,340 --> 00:14:39,221\nIf I wanna create one,\nI can just right click on databases and\n\n264\n00:14:39,221 --> 00:14:40,304\nchoose new database.\n\n265\n00:14:42,902 --> 00:14:46,078\nAll right, now we're gonna have\na lot of options in here, and\n\n266\n00:14:46,078 --> 00:14:48,730\nI wanna walk you guys\nthrough a lot of them.\n\n267\n00:14:48,730 --> 00:14:51,820\nBut for this first example I\njust wanna keep it simple.\n\n268\n00:14:51,820 --> 00:14:54,700\nSo I'm not really gonna\nmanipulate any of these options.\n\n269\n00:14:54,700 --> 00:14:57,060\nThe only thing I'm gonna do\nis specify a database name.\n\n270\n00:14:57,060 --> 00:14:59,450\nAnd so I'll just call this sample 1.\n\n271\n00:14:59,450 --> 00:15:02,200\nOkay, so\nthis is going to be my sample 1 database.\n\n272\n00:15:02,200 --> 00:15:04,390\nI'm not going to change any values,\nI'm just going to hit okay.\n\n273\n00:15:05,710 --> 00:15:06,390\nAll right.\n\n274\n00:15:06,390 --> 00:15:08,170\nNow, when it's done.\n\n275\n00:15:08,170 --> 00:15:11,880\nIt's created the database, and\nI can see it right there called sample 1.\n\n276\n00:15:11,880 --> 00:15:13,230\nAll right.\n\n277\n00:15:13,230 --> 00:15:16,510\nNow, what it actually did was in\nthe background it ran a script.\n\n278\n00:15:16,510 --> 00:15:21,150\nIt ran a Transact SQL statement\nto create that database.\n\n279\n00:15:21,150 --> 00:15:21,800\nLet me show you that.\n\n280\n00:15:21,800 --> 00:15:23,447\nI'm going to create another database.\n\n281\n00:15:25,727 --> 00:15:29,710\nAnd this time I'm gonna call it sample 2,\nall right.\n\n282\n00:15:29,710 --> 00:15:30,900\nInstead of hitting okay,\n\n283\n00:15:30,900 --> 00:15:34,790\nwhich is what performs the action,\nI'm gonna hit the script button up here.\n\n284\n00:15:34,790 --> 00:15:37,940\nThis script button is what\nwill show me the Transact SQL\n\n285\n00:15:37,940 --> 00:15:39,939\nneeded to execute that command,\nso I'll hit it.\n\n286\n00:15:41,150 --> 00:15:43,290\nAnd it's gonna bring it\nup in the background.\n\n287\n00:15:43,290 --> 00:15:47,100\nNow, it's apparently gonna take it\na second there as it thinks about it.\n\n288\n00:15:47,100 --> 00:15:48,417\nIt's bringing it up in the background.\n\n289\n00:15:48,417 --> 00:15:53,070\nNow, if I hit okay, it's gonna go ahead\nand create this table or database for me.\n\n290\n00:15:53,070 --> 00:15:56,125\nBut I'm gonna hit cancel so\nI'm not gonna create the database.\n\n291\n00:15:56,125 --> 00:15:57,851\nAnd in the background,\n\n292\n00:15:57,851 --> 00:16:03,650\nI can see the Transact-SQL statement\nthat was run to create that database.\n\n293\n00:16:03,650 --> 00:16:05,620\nAnd you'll see,\nthere's quite a bit in here.\n\n294\n00:16:05,620 --> 00:16:10,200\nAnd a lot of these are actually\ndefaults that we don't even truly need.\n\n295\n00:16:10,200 --> 00:16:15,138\nSo, there's a lot more in here than\nwhat weaActually need, in fact,\n\n296\n00:16:15,138 --> 00:16:19,325\nthe only things that we truly\nneeded on this database were,\n\n297\n00:16:19,325 --> 00:16:23,279\nlet me oops, let me kinda\nchange this a little bit here.\n\n298\n00:16:28,883 --> 00:16:30,550\nThere is this.\n\n299\n00:16:30,550 --> 00:16:31,090\nRight?\n\n300\n00:16:31,090 --> 00:16:33,630\nThese are the lines that\nactually created the database.\n\n301\n00:16:33,630 --> 00:16:35,710\nYou'll see it's creating\na database called Sample2.\n\n302\n00:16:36,850 --> 00:16:39,820\nAnd then it's creating it\nwith a single file group.\n\n303\n00:16:39,820 --> 00:16:40,990\nAnd I haven't talked about those yet.\n\n304\n00:16:40,990 --> 00:16:42,100\nI'll talk about them in a minute.\n\n305\n00:16:42,100 --> 00:16:43,720\nSo we'll ignore that for right now.\n\n306\n00:16:43,720 --> 00:16:46,010\nAnd then after that,\nit's creating two files.\n\n307\n00:16:46,010 --> 00:16:47,390\nWhat are the two files?\n\n308\n00:16:47,390 --> 00:16:50,490\nThe database and\nthe transaction log, right.\n\n309\n00:16:50,490 --> 00:16:53,530\nAs I scroll over here,\nI'll see the files that it's creating.\n\n310\n00:16:53,530 --> 00:16:57,790\nSample 2.mdf, mdf is main database files.\n\n311\n00:16:57,790 --> 00:17:03,425\nSo this is the actual database, right\nhere, Sample 2.mdf and then beneath it,\n\n312\n00:17:03,425 --> 00:17:10,230\nSample2_log.ldf, that's my\nlog database file, or ldf.\n\n313\n00:17:10,230 --> 00:17:15,690\nSo, when you create a database,\nyou'll have an MDF and an IDF.\n\n314\n00:17:15,690 --> 00:17:17,680\nAnd by default,\nit puts them on the same drive.\n\n315\n00:17:17,680 --> 00:17:19,050\nIt actually puts them in the same folder.\n\n316\n00:17:19,050 --> 00:17:21,450\nThey're sitting there right\nnext to each other but\n\n317\n00:17:21,450 --> 00:17:23,380\nyou can store them wherever you want.\n\n318\n00:17:23,380 --> 00:17:28,560\nSo you can have your MDF, your actually\ndatabase on one set of hard drives.\n\n319\n00:17:28,560 --> 00:17:32,610\nAnd your LDF, your transaction\nlogs on a separate hard drives.\n\n320\n00:17:32,610 --> 00:17:34,500\nTuned for performance.\n\n321\n00:17:34,500 --> 00:17:39,960\nYour transaction logs might be on drives\nthat are tuned for write speed and\n\n322\n00:17:39,960 --> 00:17:44,700\nyour main database file can be on hard\ndrives that are tuned for read speed.\n\n323\n00:17:44,700 --> 00:17:51,440\nIt's your choice as to which way you are\ngonna go about and get that best Right?\n\n324\n00:17:51,440 --> 00:17:56,830\nNow we're almost always going to\nbe deploying these on RAID arrays.\n\n325\n00:17:56,830 --> 00:17:59,800\nRAID, if you're not familiar with it,\nI know I've mentioned it a few times now,\n\n326\n00:17:59,800 --> 00:18:02,550\nis the Redundant Array\nof Independent Discs.\n\n327\n00:18:02,550 --> 00:18:05,640\nSometimes you'll hear it called\nRedundant Array of Inexpensive Discs.\n\n328\n00:18:05,640 --> 00:18:08,820\nThere's a little bit of argument\nover which it actually stands for\n\n329\n00:18:08,820 --> 00:18:09,370\nbut it doesn't matter.\n\n330\n00:18:09,370 --> 00:18:14,160\nAt the end of the day RAID let's you\ncombine multiple hard drives together\n\n331\n00:18:14,160 --> 00:18:17,730\nto form one big virtual drive.\n\n332\n00:18:17,730 --> 00:18:21,520\nThere's several different ways\nthat we can implement RAID and\n\n333\n00:18:21,520 --> 00:18:24,780\neach one has it's pros and cons.\n\n334\n00:18:24,780 --> 00:18:28,800\nSo before we go too much further into this\nwe should probably look at some of those.\n\n335\n00:18:28,800 --> 00:18:33,250\nNow I don't want to go too crazy on\nRAID because it is just a small piece\n\n336\n00:18:33,250 --> 00:18:36,340\nof the knowledge we need for the exam,\nbut you do need to understand it in\n\n337\n00:18:36,340 --> 00:18:39,280\nreal life land to make sure\nyou're making the right choices.\n\n338\n00:18:40,430 --> 00:18:46,020\nSo, I've got some examples here of how we\nmight want to kinda tweak our drives and\n\n339\n00:18:46,020 --> 00:18:47,450\nstart to work with it.\n\n340\n00:18:47,450 --> 00:18:51,350\nWhen users come in over the network,\nthey're hitting your server and\n\n341\n00:18:51,350 --> 00:18:54,820\nby default your database and transactions\nare stored on the same hard drive,\n\n342\n00:18:54,820 --> 00:18:56,390\nwhich is right there in your C drive.\n\n343\n00:18:56,390 --> 00:18:57,100\nAll right.\n\n344\n00:18:57,100 --> 00:18:59,650\nWell, what all is on your C drive?\n\n345\n00:18:59,650 --> 00:19:02,250\nYour operating system is there\nwhich mostly runs from RAM.\n\n346\n00:19:03,360 --> 00:19:08,620\nSQL and its executables are there but\nagain, those mostly run from RAM.\n\n347\n00:19:08,620 --> 00:19:11,040\nSo when you boot up,\nthere's a lot of reads and\n\n348\n00:19:11,040 --> 00:19:13,900\na lot of hard drive thrashing\nas they get stuff cached in RAM.\n\n349\n00:19:13,900 --> 00:19:17,700\nBut after the server settles down, it's\nmostly running from RAM at that point.\n\n350\n00:19:17,700 --> 00:19:21,100\nSo, the two main things we need to worry\nabout are the database files because\n\n351\n00:19:21,100 --> 00:19:24,600\nthey're stored right there on\nthe C drive and your page file.\n\n352\n00:19:24,600 --> 00:19:27,800\nIf you run out of ram your system\nwill start to use the page file.\n\n353\n00:19:27,800 --> 00:19:31,160\nPage file,\nwhich is again stored on that same drive.\n\n354\n00:19:31,160 --> 00:19:35,370\nSo, as we tune our server\nIt will usually benefit us\n\n355\n00:19:35,370 --> 00:19:40,290\nto get at least one other separate\nset of physical hard drives, right?\n\n356\n00:19:40,290 --> 00:19:43,470\nThat way we can start to remove\nsome of our discontention.\n\n357\n00:19:43,470 --> 00:19:45,765\nIf we move our database and\n\n358\n00:19:45,765 --> 00:19:50,300\ntransaction log files off to this second\nhard drive, now when users come in\n\n359\n00:19:50,300 --> 00:19:53,840\nover the network they're gonna be\naccessing that other hard drive.\n\n360\n00:19:53,840 --> 00:19:54,410\nRight?\n\n361\n00:19:54,410 --> 00:19:59,050\nYou're operating system and page file are\nhere and they're happy by themselves, then\n\n362\n00:19:59,050 --> 00:20:02,640\nyour SQL databases and transaction logs\nare right there on the second hard drive.\n\n363\n00:20:02,640 --> 00:20:03,180\nRight?\n\n364\n00:20:03,180 --> 00:20:07,140\nSplitting it out,\ncreating that separation of our storage.\n\n365\n00:20:07,140 --> 00:20:11,750\nWell, even here, we still get a bit of\ncontention, right, with your database and\n\n366\n00:20:11,750 --> 00:20:13,960\ntransaction logs on the same drive.\n\n367\n00:20:13,960 --> 00:20:17,360\nSo we might wanna go even further and\nsplit that out, and\n\n368\n00:20:17,360 --> 00:20:21,950\nstart to get it where our database\nis on one set of hard drives.\n\n369\n00:20:21,950 --> 00:20:25,230\nAnd our transaction logs are on\nanother set of hard drives.\n\n370\n00:20:25,230 --> 00:20:29,610\nBut at that point, we might wanna start\nlooking into multiple physical disks and\n\n371\n00:20:29,610 --> 00:20:30,140\nRAID erase.\n\n372\n00:20:30,140 --> 00:20:32,070\nSo we start to have different\nconfigurations like\n\n373\n00:20:32,070 --> 00:20:33,110\nthe one that I'm showing here.\n\n374\n00:20:33,110 --> 00:20:36,190\nNow, let me mention another thing\nbefore I move past this slide.\n\n375\n00:20:37,390 --> 00:20:41,290\nWhen we start talking about separate\ndrives, like a C: drive and a D: drive,\n\n376\n00:20:41,290 --> 00:20:46,530\nit's important to remember that I'm always\ntalking about separate Physical drives.\n\n377\n00:20:46,530 --> 00:20:50,060\nIf these are two partitions on\nthe same physical drive, alright,\n\n378\n00:20:50,060 --> 00:20:51,629\nmany I've got a C and a D and\n\n379\n00:20:51,629 --> 00:20:56,410\nan E, they are all just partitions on one\nphysical drive, you're wasting your time.\n\n380\n00:20:56,410 --> 00:20:59,150\nThere's absolutely no point in\nusing partitions on a server;\n\n381\n00:20:59,150 --> 00:21:00,860\npartitions are a waste of time.\n\n382\n00:21:00,860 --> 00:21:03,510\nSo we're talking about\nseparate physical disks.\n\n383\n00:21:03,510 --> 00:21:06,470\nWhen you have one disk\nwith multiple partitions,\n\n384\n00:21:06,470 --> 00:21:11,360\nyou still just have one little drive head\nin there that moves around on the platter\n\n385\n00:21:11,360 --> 00:21:15,020\nto be able to read or write to the disk.\n\n386\n00:21:15,020 --> 00:21:18,400\nIf you've ever seen the inside of\na hard drive, you have your circular\n\n387\n00:21:18,400 --> 00:21:22,390\nplatters that are inside of there, and\nthere's a little arm with a magnet reader\n\n388\n00:21:22,390 --> 00:21:25,490\nwriter on it, and so it moves around,\nreading and writing to the disk.\n\n389\n00:21:25,490 --> 00:21:27,650\nIt can only be at one place at a time.\n\n390\n00:21:27,650 --> 00:21:29,460\nSo if you've got three partitions,\n\n391\n00:21:29,460 --> 00:21:34,330\nthey are still sharing one motorized\narm inside of that hard drive.\n\n392\n00:21:34,330 --> 00:21:39,140\nIf I have multiple hard drives though,\nnow I've got more than one motorized arm.\n\n393\n00:21:39,140 --> 00:21:41,870\nNow I can start reading from more\nthan one place at the same time and\n\n394\n00:21:41,870 --> 00:21:43,260\nI really start to benefit.\n\n395\n00:21:43,260 --> 00:21:45,977\nSo I'm always talking about\nmultiple physical disks.\n\n396\n00:21:47,317 --> 00:21:50,597\nNow one of the most common\nways of deploying SQL or\n\n397\n00:21:50,597 --> 00:21:55,110\noptimizing a database is this\nmodel that we see right here.\n\n398\n00:21:55,110 --> 00:21:58,080\nWhere we have, and\nyou know I didn't even throw it on here.\n\n399\n00:21:58,080 --> 00:22:00,150\nLet me expand this a little bit.\n\n400\n00:22:00,150 --> 00:22:06,026\nI'm going to let's move these off and\nadd some more hard drives in here.\n\n401\n00:22:09,098 --> 00:22:15,383\nSo a really common deployment\nis to do something\n\n402\n00:22:15,383 --> 00:22:20,724\nlike this where we've got basically our\n\n403\n00:22:20,724 --> 00:22:27,060\noperating system store on a RAID 1 array.\n\n404\n00:22:27,060 --> 00:22:30,100\nRAID 1 is mirrored disks.\n\n405\n00:22:30,100 --> 00:22:33,800\nAnything you write to one disk\ngets copied to the other disk.\n\n406\n00:22:33,800 --> 00:22:35,220\nSo you've got a copy.\n\n407\n00:22:35,220 --> 00:22:38,770\nIf one disk fails, you stay online\nbecause the other one is still running.\n\n408\n00:22:38,770 --> 00:22:41,880\nIt's still up and operational and\nyou're in business Right?\n\n409\n00:22:41,880 --> 00:22:43,310\nSo putting the operating system and\n\n410\n00:22:43,310 --> 00:22:47,330\nits pagefile right there on that RAID\narray gives us that redundancy, all right?\n\n411\n00:22:48,460 --> 00:22:51,470\nOur database,\nwe might put on a RAID 5 array.\n\n412\n00:22:51,470 --> 00:22:55,370\nNow RAID 5 arrays actually give\nyou a little boost of performance.\n\n413\n00:22:55,370 --> 00:22:59,300\nThey give you extra reads and\nwrites, and it's based on how the,\n\n414\n00:22:59,300 --> 00:23:03,750\nwhoops how the disks work,\nif I can stay on my screen.\n\n415\n00:23:03,750 --> 00:23:04,880\nThere we go.\n\n416\n00:23:04,880 --> 00:23:07,040\nBut so we've got that.\n\n417\n00:23:07,040 --> 00:23:11,130\nAnd then on the RAID 1 array, we can\nmove our transaction logs off to that,\n\n418\n00:23:11,130 --> 00:23:12,970\nseparating them out to their own drive.\n\n419\n00:23:12,970 --> 00:23:17,450\nNow what you might notice is that my drive\ncount is starting to get pretty high.\n\n420\n00:23:17,450 --> 00:23:17,970\nRight?\n\n421\n00:23:17,970 --> 00:23:20,000\nI'm up to seven drives now.\n\n422\n00:23:20,000 --> 00:23:22,710\nWell, on your laptop do\nyou have seven drives?\n\n423\n00:23:22,710 --> 00:23:23,730\nNo, you don't.\n\n424\n00:23:23,730 --> 00:23:27,040\nWell, that's because your laptop\nis not designed to be a server.\n\n425\n00:23:27,040 --> 00:23:28,840\nBut if you're building a database server,\n\n426\n00:23:28,840 --> 00:23:32,240\nsomething that's going to be providing\ndata access to hundreds, thousands,\n\n427\n00:23:32,240 --> 00:23:35,430\ntens of thousands of people,\nyou're going to need more drives.\n\n428\n00:23:35,430 --> 00:23:38,778\nAnd that's why when you go to\nDell's website or HP's website or\n\n429\n00:23:38,778 --> 00:23:43,180\nIBM's website their servers have these big\ndriver bays in them where you can start to\n\n430\n00:23:43,180 --> 00:23:44,792\nput in quite a few hard drives.\n\n431\n00:23:44,792 --> 00:23:47,290\nIt's because of these types\nof scenarios right here.\n\n432\n00:23:47,290 --> 00:23:51,208\nThis is what we need in a server.\n\n433\n00:23:51,208 --> 00:23:55,833\nAll right, so those are some of the things\nthat are kind of going on there.\n\n434\n00:23:55,833 --> 00:23:58,625\nI said RAID 1 here versus RAID 5.\n\n435\n00:23:58,625 --> 00:24:02,290\nWhy would I pick one RAID\nmodel versus another?\n\n436\n00:24:02,290 --> 00:24:06,660\nLet's talk a little bit about\nhow each one of them works.\n\n437\n00:24:06,660 --> 00:24:08,880\nLet me start with RAID 1.\n\n438\n00:24:08,880 --> 00:24:11,250\nRAID 1 is probably the easiest one.\n\n439\n00:24:11,250 --> 00:24:17,488\nAnd with RAID 1 you've got some\nreal simple stuff going on here.\n\n440\n00:24:17,488 --> 00:24:20,560\nWIth RAID 1 you've got a hard drive, and\n\n441\n00:24:20,560 --> 00:24:24,720\nanytime you write data to one it\ngets written to the other one.\n\n442\n00:24:24,720 --> 00:24:25,880\nIt's a mirror.\n\n443\n00:24:25,880 --> 00:24:27,760\nRAID 1 is called mirroring.\n\n444\n00:24:30,600 --> 00:24:34,630\nSo RAID 1 is Data Mirroring.\n\n445\n00:24:37,150 --> 00:24:39,860\nNow data mirroring is great for\nredundancy.\n\n446\n00:24:39,860 --> 00:24:43,730\nAny data I write to one drive is\nautomatically copied to the other drive,\n\n447\n00:24:43,730 --> 00:24:44,910\nwhich is wonderful.\n\n448\n00:24:44,910 --> 00:24:46,930\nWe get nice redundancy there.\n\n449\n00:24:46,930 --> 00:24:50,460\nIf we ever have one drive fail, the other\ndrive's got a full copy of that data.\n\n450\n00:24:50,460 --> 00:24:52,400\nEverything's great.\n\n451\n00:24:52,400 --> 00:24:55,010\nBut what does it do for performance?\n\n452\n00:24:55,010 --> 00:24:58,820\nIf I write data to the disk,\nI'm writing to one and\n\n453\n00:24:58,820 --> 00:25:01,435\nthe write is sent to the other disk also.\n\n454\n00:25:01,435 --> 00:25:05,585\nBut at the end of the day I'm writing to\none disk, so I'm writing at normal speeds.\n\n455\n00:25:05,585 --> 00:25:08,845\nI don't get any performance\nbenefit out of writing.\n\n456\n00:25:08,845 --> 00:25:11,825\nIn fact, if the RAID array is done in\nsoftware, which you should never do,\n\n457\n00:25:11,825 --> 00:25:13,655\nby the way, but if it is done in software,\n\n458\n00:25:13,655 --> 00:25:17,960\nI'll actually get performance degradation\ncuz I'm actually writing twice.\n\n459\n00:25:17,960 --> 00:25:20,850\nIf I have a hardware RAID controller,\nthough, it's doing it in hardware, and\n\n460\n00:25:20,850 --> 00:25:22,460\nyou get no performance change whatsoever.\n\n461\n00:25:22,460 --> 00:25:26,600\nIt's just a straight-up write, the same\nas if you were writing to one hard drive.\n\n462\n00:25:27,900 --> 00:25:29,200\nWhat about reads?\n\n463\n00:25:29,200 --> 00:25:33,070\nWell, when I go to read,\nI'm gonna read from one disk.\n\n464\n00:25:33,070 --> 00:25:35,970\nIt doesn't spread the read\nbetween the two disks.\n\n465\n00:25:35,970 --> 00:25:38,740\nSo I'm still reading at the same speed.\n\n466\n00:25:38,740 --> 00:25:44,494\nSo when we talk about RAID 1,\nwhat we're getting\n\n467\n00:25:44,494 --> 00:25:49,980\nis redundancy without\nperformance increase.\n\n468\n00:25:52,520 --> 00:25:54,200\nThat's what RAID 1 gives us.\n\n469\n00:25:54,200 --> 00:25:57,950\nRAID 1 does not increase our\nperformance one single bit.\n\n470\n00:25:57,950 --> 00:25:59,180\nIt just gives us redundancy.\n\n471\n00:25:59,180 --> 00:26:00,610\nThat's all we get.\n\n472\n00:26:00,610 --> 00:26:04,165\nSo for something like the operating system\nthat's gonna be mostly running in RAM\n\n473\n00:26:04,165 --> 00:26:06,455\nanyway, I don't really need\na performance increase there.\n\n474\n00:26:07,485 --> 00:26:11,355\nOr my transaction logs,\nwhich also are oftentimes in RAM,\n\n475\n00:26:11,355 --> 00:26:14,335\nI'm not necessarily worried about\na performance increase there either.\n\n476\n00:26:14,335 --> 00:26:16,785\nSo on those, RAID 1 may be very suitable.\n\n477\n00:26:18,590 --> 00:26:21,600\nBut if I want a performance increase,\nthese guys are not going to do it.\n\n478\n00:26:21,600 --> 00:26:25,660\nSo for my database, where I want\nreads to happen as fast as possible,\n\n479\n00:26:25,660 --> 00:26:28,730\nRAID 1 doesn't do it, doesn't help.\n\n480\n00:26:28,730 --> 00:26:33,310\nWell, the next one that's\npretty common is RAID 0.\n\n481\n00:26:33,310 --> 00:26:34,465\nSo let's take a look a RAID 0.\n\n482\n00:26:36,270 --> 00:26:39,009\nRAID 0 is what's called data striping.\n\n483\n00:26:42,970 --> 00:26:48,960\nSo data striping, what it does,\nis it says, I'm gonna take your data and\n\n484\n00:26:48,960 --> 00:26:52,910\nI'm going to break it up and\nspread it across drives.\n\n485\n00:26:52,910 --> 00:26:55,980\nFor data striping you need\nthree drives at a minimum.\n\n486\n00:26:55,980 --> 00:26:59,500\nWith mirroring you just need two, but\nwith data striping we really need three.\n\n487\n00:26:59,500 --> 00:27:01,640\nSo let me just add another hard\ndrive onto my picture here.\n\n488\n00:27:05,050 --> 00:27:11,010\nAll right, now let's say that I'm gonna\nbe writing some data to these drives,\n\n489\n00:27:11,010 --> 00:27:12,740\nmy database files.\n\n490\n00:27:12,740 --> 00:27:18,100\nAnd my database file,\nlet's say that it is 6 MB in size.\n\n491\n00:27:18,100 --> 00:27:23,539\nWell, when I write to a RAID 0 array,\nit's gonna take that 6 MB file and\n\n492\n00:27:23,539 --> 00:27:29,619\nbreak it up into chunks, and it's gonna\nspread those chunks across the drives.\n\n493\n00:27:29,619 --> 00:27:32,040\nIt's gonna spread them\nout across those disks.\n\n494\n00:27:33,370 --> 00:27:38,570\nWhen it does that, it's gonna be writing\nto three disks at a time, three or more.\n\n495\n00:27:38,570 --> 00:27:39,570\nYou can have way more.\n\n496\n00:27:39,570 --> 00:27:40,690\nThree's the minimum.\n\n497\n00:27:40,690 --> 00:27:42,739\nSo it's gonna spread\nthat across these disks.\n\n498\n00:27:43,790 --> 00:27:47,085\nThat means I'm gonna get a big\nboost in write performance,\n\n499\n00:27:47,085 --> 00:27:49,070\ncuz I'm not just writing to one disk.\n\n500\n00:27:49,070 --> 00:27:52,740\nI'm writing to all three at the same\ntime and spreading out my data.\n\n501\n00:27:52,740 --> 00:27:56,630\nWhen we go to read data,\nthe same thing happens.\n\n502\n00:27:56,630 --> 00:27:59,640\nI'm reading bits of the data\nacross each of these disks,\n\n503\n00:27:59,640 --> 00:28:01,810\nnow I get a bonus to those arms.\n\n504\n00:28:01,810 --> 00:28:03,730\nSo I'm reading data much faster, and\n\n505\n00:28:03,730 --> 00:28:06,810\nit's all because of the way that\nthat data was thrown about.\n\n506\n00:28:06,810 --> 00:28:09,230\nI mentioned it was a 6 MB file.\n\n507\n00:28:09,230 --> 00:28:15,160\nSo the first megabyte, well,\nit might get written right here, okay?\n\n508\n00:28:15,160 --> 00:28:21,965\nAnd then as it breaks things up, it's\nspreading that data across each of these.\n\n509\n00:28:21,965 --> 00:28:24,755\nActually, it was only 6 MB, wasn't it?\n\n510\n00:28:24,755 --> 00:28:26,995\nSo basically the data\nis gonna get broken up.\n\n511\n00:28:26,995 --> 00:28:30,245\nNow I'm doing a 1 MB stripe here.\n\n512\n00:28:30,245 --> 00:28:32,515\nIt's normally much, much smaller.\n\n513\n00:28:32,515 --> 00:28:35,035\nThe stripe size is normally like 64K.\n\n514\n00:28:35,035 --> 00:28:38,705\nSo it's breaking that 64K of data and\nspreading it across like that.\n\n515\n00:28:40,170 --> 00:28:42,320\nAnd actually,\nI'm gonna change this a little bit.\n\n516\n00:28:42,320 --> 00:28:44,240\nSo really this would be like block one,\n\n517\n00:28:44,240 --> 00:28:48,105\nand then over here you would have\nblock two and then block three.\n\n518\n00:28:48,105 --> 00:28:52,580\nAnd then it continues on from there,\nso you get block four and\n\n519\n00:28:52,580 --> 00:28:57,120\nblock five and block six.\n\n520\n00:28:57,120 --> 00:28:58,865\nSee, I'm striping it.\n\n521\n00:28:58,865 --> 00:29:01,080\nSo when I go to read that 6 MB of data,\nI go and\n\n522\n00:29:01,080 --> 00:29:03,930\nI get block one, block two, block three.\n\n523\n00:29:03,930 --> 00:29:07,690\nAnd I can be reading all three\nblocks at the same time.\n\n524\n00:29:07,690 --> 00:29:09,130\nAnd then blocks four, five and six,\n\n525\n00:29:09,130 --> 00:29:10,996\nI'm reading all three of\nthem at the same time.\n\n526\n00:29:10,996 --> 00:29:13,578\nMy read is going to happen\nthree times faster,\n\n527\n00:29:13,578 --> 00:29:18,120\nbecause I've got three physical\ndrives involved in the process.\n\n528\n00:29:18,120 --> 00:29:19,770\nHuge performance boost.\n\n529\n00:29:19,770 --> 00:29:21,518\nAnd when I go to write,\nI'm breaking it up and\n\n530\n00:29:21,518 --> 00:29:23,267\nI'm writing on three\ndisks at the same time.\n\n531\n00:29:23,267 --> 00:29:26,860\nSo RAID 0 is awesome for performance.\n\n532\n00:29:26,860 --> 00:29:32,470\nSo we get a performance boost,\nbut here's the problem.\n\n533\n00:29:32,470 --> 00:29:34,990\nIt's without redundancy.\n\n534\n00:29:34,990 --> 00:29:39,290\nMy data is not stored in two\nplaces at the same time.\n\n535\n00:29:39,290 --> 00:29:44,130\nIf I have a drive fail, let's say for\nsome reason this drive right here just\n\n536\n00:29:44,130 --> 00:29:47,840\ngoes out on me, so\nthis drive doesn't make it.\n\n537\n00:29:47,840 --> 00:29:54,050\nAnd when that happens, this guy fails,\nhe's out, down for the count.\n\n538\n00:29:54,050 --> 00:29:56,100\nWell, I've still got my other two drives,\nright?\n\n539\n00:29:56,100 --> 00:29:57,830\nSo those guys are still there.\n\n540\n00:29:57,830 --> 00:29:59,500\nWell, it doesn't matter.\n\n541\n00:29:59,500 --> 00:30:04,170\nMy file, my 6 MB file,\nwas broken up across these three drives.\n\n542\n00:30:04,170 --> 00:30:06,450\nI just lost a third of that file.\n\n543\n00:30:06,450 --> 00:30:09,390\nIs one-third of my database gonna help me?\n\n544\n00:30:09,390 --> 00:30:11,390\nNo, it's a corrupt file now.\n\n545\n00:30:11,390 --> 00:30:14,960\nSo with RAID 0 you get huge\nperformance benefits, but\n\n546\n00:30:14,960 --> 00:30:18,870\nyou get zero redundancy,\nno redundancy whatsoever.\n\n547\n00:30:18,870 --> 00:30:22,810\nSo big performance boost\nwithout redundancy.\n\n548\n00:30:22,810 --> 00:30:24,790\nRAID 0 is appropriate for some scenarios,\n\n549\n00:30:24,790 --> 00:30:28,120\nbut if redundancy is something you need,\nRAID 0 is not the solution for you.\n\n550\n00:30:28,120 --> 00:30:28,820\nPros and cons, right?\n\n551\n00:30:28,820 --> 00:30:30,473\nWe've gotta remember which ones are which.\n\n552\n00:30:30,473 --> 00:30:33,265\nAll right, now I've got a few\nothers to talk about, but\n\n553\n00:30:33,265 --> 00:30:35,060\nI've rambled on a little too long.\n\n554\n00:30:35,060 --> 00:30:39,710\nSo let's stop here and take a break and\nwhen we get back, we'll continue on.\n\n555\n00:30:39,710 --> 00:30:42,470\nI still have RAID 5 and\nRAID 10 that I wanna talk about, so\n\n556\n00:30:42,470 --> 00:30:44,340\nwe'll tackle those after the break.\n\n557\n00:30:44,340 --> 00:30:45,000\nStay tuned.\n\n558\n00:30:45,000 --> 00:30:45,545\nWe'll be back after this.\n\n559\n00:30:45,545 --> 00:30:52,968\n[MUSIC]\n\n560\n00:30:52,968 --> 00:30:57,311\nAll right, so before the break we\ntalked about RAID 0 and RAID 1.\n\n561\n00:30:57,311 --> 00:31:00,170\nNow we're gonna take a look at RAID 5.\n\n562\n00:31:00,170 --> 00:31:04,390\nRAID 5 is one of the more popular ones\nthat are out there because what it does\n\n563\n00:31:04,390 --> 00:31:07,240\nis it takes a lot of what RAID 0 did for\n\n564\n00:31:07,240 --> 00:31:11,930\ngiving us that performance increase and\nit adds on redundancy.\n\n565\n00:31:11,930 --> 00:31:15,300\nIt does that through tracking a parity\nbit, and let me show you how that works.\n\n566\n00:31:15,300 --> 00:31:20,200\nIn the last example I showed you,\ntaking in RAID 0, taking our data and\n\n567\n00:31:20,200 --> 00:31:23,040\nbreaking it up into\nstripes across the disks.\n\n568\n00:31:23,040 --> 00:31:27,240\nWell, the problem there is if any one of\nthose disks fails, we lose all our data.\n\n569\n00:31:27,240 --> 00:31:31,690\nSo what RAID 5 does is it\nadds in a parity bit, and\n\n570\n00:31:31,690 --> 00:31:35,350\nthe parity bit changes the way\nthat the data is stored.\n\n571\n00:31:35,350 --> 00:31:40,724\nThe way that it works is, I don't want\nto get too far into the theory on it,\n\n572\n00:31:40,724 --> 00:31:45,167\nbut basically it spreads the data\nout a little differently.\n\n573\n00:31:45,167 --> 00:31:46,990\nOops, that would actually\nbe a parity bit there.\n\n574\n00:31:49,070 --> 00:31:51,083\nLet me see if I can keep\nmy numbers straight here.\n\n575\n00:31:51,083 --> 00:31:53,410\nIf I can remember all this myself.\n\n576\n00:31:53,410 --> 00:31:59,020\nSo there's my parity bits and\nwe got block five and block six.\n\n577\n00:31:59,020 --> 00:32:00,230\nNotice what I've done.\n\n578\n00:32:00,230 --> 00:32:02,450\nI still have blocks one through six.\n\n579\n00:32:02,450 --> 00:32:07,300\nSo when I wrote my data to the drive,\nI wrote one, two, three, four, five, six,\n\n580\n00:32:07,300 --> 00:32:09,070\nspread across three drives.\n\n581\n00:32:09,070 --> 00:32:13,810\nBut notice how I also\nfactored in this parity bit.\n\n582\n00:32:13,810 --> 00:32:15,330\nWhat is the parity bit?\n\n583\n00:32:15,330 --> 00:32:20,110\nWell, remember when you're writing data to\nthe drive it's writing zeroes and ones.\n\n584\n00:32:20,110 --> 00:32:22,810\nSo what it does is it looks at\nthe data here in block one.\n\n585\n00:32:22,810 --> 00:32:25,950\nAnd it says okay I've\ngot a zero written here.\n\n586\n00:32:25,950 --> 00:32:28,270\nAnd over here it looks at block two and\nit says okay,\n\n587\n00:32:28,270 --> 00:32:30,350\nI've got a zero written there also.\n\n588\n00:32:30,350 --> 00:32:32,630\nWell, zero plus zero is zero.\n\n589\n00:32:32,630 --> 00:32:35,110\nAnd zero is an even number, so\n\n590\n00:32:35,110 --> 00:32:37,910\nwe'll flag the parity bit to\nreflect that that's an even number.\n\n591\n00:32:38,930 --> 00:32:42,560\nOr, it would say allright, I've got a zero\nhere and a one here that adds up to one.\n\n592\n00:32:42,560 --> 00:32:47,170\nThat's an odd number, so in the parity\nbit, we'll flag that it's an odd number.\n\n593\n00:32:47,170 --> 00:32:48,830\nWell, why is it doing that?\n\n594\n00:32:48,830 --> 00:32:51,370\nIt's doing it because if\nwe have a drive fail, so\n\n595\n00:32:51,370 --> 00:32:53,540\nlet's say this drive\nright here were to fail.\n\n596\n00:32:55,520 --> 00:32:59,800\nIf this drive were to fail,\nthen the system is gonna recognize that,\n\n597\n00:32:59,800 --> 00:33:04,180\nit's gonna see that it's failed and\ninstead of me losing all my data, it's\n\n598\n00:33:04,180 --> 00:33:09,270\ngonna look at it and it's gonna say okay\nwell, I've got a zero written here and\n\n599\n00:33:09,270 --> 00:33:12,770\nthe parity bit tells me I\nshould have an odd number.\n\n600\n00:33:12,770 --> 00:33:15,720\nWell, if there's a zero here the only way\nI would get an odd number if there was\n\n601\n00:33:15,720 --> 00:33:16,800\na one here.\n\n602\n00:33:16,800 --> 00:33:18,410\nThere must have been a one here.\n\n603\n00:33:18,410 --> 00:33:19,970\nSo, zero one.\n\n604\n00:33:19,970 --> 00:33:24,140\nIt's able to reconstruct\nthe data that's missing.\n\n605\n00:33:24,140 --> 00:33:25,960\nThat's what parity does.\n\n606\n00:33:25,960 --> 00:33:31,090\nWell during normal operation,\nevery time we write data,\n\n607\n00:33:31,090 --> 00:33:36,210\nwhen we write block one and block two,\nit's then got to calculate parity.\n\n608\n00:33:36,210 --> 00:33:40,880\nSo when I do a write, it's actually taking\na little bit longer to write than normal.\n\n609\n00:33:40,880 --> 00:33:43,200\nNow I do get a little boost\nbecause I'm writing one and\n\n610\n00:33:43,200 --> 00:33:46,470\ntwo at the same time to the hard drives,\nright?\n\n611\n00:33:46,470 --> 00:33:48,330\nSo I get a little boost there and\n\n612\n00:33:48,330 --> 00:33:51,670\nthen I take a little hit because\nI've gotta calculate parity.\n\n613\n00:33:51,670 --> 00:33:54,890\nSo when it comes to\nwriting to a RAID 5 array,\n\n614\n00:33:54,890 --> 00:33:57,830\nthere's not much of a performance\nboost at all, right?\n\n615\n00:33:57,830 --> 00:34:00,650\nBecause the gains I get from\nthe extra drives are usually\n\n616\n00:34:00,650 --> 00:34:02,920\nhurt by the parity calculation.\n\n617\n00:34:02,920 --> 00:34:05,440\nOn reads, I get a benefit there.\n\n618\n00:34:05,440 --> 00:34:08,450\nIf I'm reading I can read block one,\nblock two.\n\n619\n00:34:08,450 --> 00:34:11,740\nI can't read from the third\ndrive here cuz it's got parity.\n\n620\n00:34:11,740 --> 00:34:13,900\nAnd then I get block three, block four but\n\n621\n00:34:13,900 --> 00:34:15,960\nI can't read from the second\ndrive because of parity.\n\n622\n00:34:15,960 --> 00:34:19,970\nSo I still get a boost but\nnot as much of a boost.\n\n623\n00:34:19,970 --> 00:34:24,580\nSo I get a lesser performance\nboost in exchange for redundancy.\n\n624\n00:34:24,580 --> 00:34:29,700\nNow for years RAID 5 was like the gold\nstandard of redundancy so if you\n\n625\n00:34:29,700 --> 00:34:34,650\nworked with servers in the 1990s and even\nthe early 2000s, RAID 5 was everywhere.\n\n626\n00:34:34,650 --> 00:34:37,230\nWell, it does have one big weakness.\n\n627\n00:34:37,230 --> 00:34:37,780\nAll right.\n\n628\n00:34:37,780 --> 00:34:39,990\nThe weakness is during failure.\n\n629\n00:34:39,990 --> 00:34:45,360\nIf you have one drive fail, as you\nread your data, it's got to calculate,\n\n630\n00:34:45,360 --> 00:34:49,220\nrecalculate or rebuild the data\nfrom parody, and that takes time.\n\n631\n00:34:49,220 --> 00:34:52,940\nSo during a failure,\nyour performance is degraded.\n\n632\n00:34:52,940 --> 00:34:57,250\nIf we take a look at RAID 0, well, RAID\n0 you lose drive, everything's down so\n\n633\n00:34:57,250 --> 00:34:58,270\nit doesn't matter.\n\n634\n00:34:58,270 --> 00:35:01,960\nRAID 1, if one drive fails,\nthe other drive's got a full mirror.\n\n635\n00:35:01,960 --> 00:35:03,860\nYou just read and write from it,\nand there you go.\n\n636\n00:35:03,860 --> 00:35:06,180\nNo change in performance whatsoever.\n\n637\n00:35:06,180 --> 00:35:09,180\nBut in RAID 5, when you have a failure,\nyou've got to recalculate.\n\n638\n00:35:09,180 --> 00:35:11,040\nAnd it slows things down.\n\n639\n00:35:11,040 --> 00:35:13,380\nSo a RAID 5 array that's not healthy,\n\n640\n00:35:13,380 --> 00:35:17,170\nthat's missing one drive,\nis going to be very, very slow.\n\n641\n00:35:17,170 --> 00:35:19,380\nBut it's still online, and\nthat's better than nothing.\n\n642\n00:35:19,380 --> 00:35:21,390\nSo there's the tradeoff.\n\n643\n00:35:21,390 --> 00:35:24,210\nThe other thing is when\nwe replace the drive.\n\n644\n00:35:24,210 --> 00:35:26,540\nSo when you replace this failed drive,\n\n645\n00:35:26,540 --> 00:35:29,640\nit's gotta rebuild all\nthe data that was on it.\n\n646\n00:35:29,640 --> 00:35:32,790\nWell back in the day when you were\ndealing with 100 gig hard drives,\n\n647\n00:35:32,790 --> 00:35:36,680\nthat wasn't such a big deal, but now that\nyou've got one and two terabyte drives,\n\n648\n00:35:36,680 --> 00:35:38,620\nthat rebuild can take an entire day.\n\n649\n00:35:38,620 --> 00:35:39,750\nIt could take forever.\n\n650\n00:35:39,750 --> 00:35:42,580\nRight?\nI know I had to do one here last year.\n\n651\n00:35:42,580 --> 00:35:47,200\nIt took it a good twelve hours to\nrebuild the array, that's a long time.\n\n652\n00:35:47,200 --> 00:35:49,780\nWhat if you have another\ndrive fail during that time?\n\n653\n00:35:49,780 --> 00:35:51,850\nYou've lost your redundancy.\n\n654\n00:35:51,850 --> 00:35:56,700\nSo that's the problem with RAID 5\nis during failure it's slow and\n\n655\n00:35:56,700 --> 00:35:58,910\nthe recovery process is long.\n\n656\n00:35:58,910 --> 00:36:01,170\nSo it's not a great technology.\n\n657\n00:36:01,170 --> 00:36:04,200\nAnd so you're seeing a lot of\npeople move away from RAID 5.\n\n658\n00:36:04,200 --> 00:36:06,870\nRAID 5 is not as common as it used to be.\n\n659\n00:36:06,870 --> 00:36:09,550\nIt is for homes and small businesses.\n\n660\n00:36:09,550 --> 00:36:12,480\nBut large enterprises do\nnot rely on RAID 5 anymore.\n\n661\n00:36:14,420 --> 00:36:17,060\nSo I just described three technologies.\n\n662\n00:36:17,060 --> 00:36:22,270\nRAID 0, you get a performance boost,\nbut no redundancy.\n\n663\n00:36:22,270 --> 00:36:26,250\nRAID 1, you get redundancy but\nno performance boost.\n\n664\n00:36:26,250 --> 00:36:29,650\nRAID 5, you get a little bit\nof a performance boost and\n\n665\n00:36:29,650 --> 00:36:31,710\nyou get redundancy but\nit's got its negatives.\n\n666\n00:36:31,710 --> 00:36:35,410\nSo none of the three really\nseem all that exciting.\n\n667\n00:36:35,410 --> 00:36:36,510\nSo, how do we win here?\n\n668\n00:36:36,510 --> 00:36:38,140\nHow do we pick a winner?\n\n669\n00:36:38,140 --> 00:36:40,850\nAnd the way to pick a winner is\nnot to pick any of those three but\n\n670\n00:36:40,850 --> 00:36:43,070\nto combine the technologies.\n\n671\n00:36:43,070 --> 00:36:45,670\nMany modern RAID controllers can\ncombine the technologies and so\n\n672\n00:36:45,670 --> 00:36:49,690\nwe're starting to see RAID\n10 as the new standard.\n\n673\n00:36:50,690 --> 00:36:52,060\nAll right.\nWhat RAID 10 does\n\n674\n00:36:52,060 --> 00:36:54,600\nis some really interesting stuff.\n\n675\n00:36:54,600 --> 00:36:58,870\nRAID 10 is really just\na combination of RAID 1 and RAID 0.\n\n676\n00:36:58,870 --> 00:37:01,350\nAnd so sometimes you'll\nsee it written as RAID 10,\n\n677\n00:37:01,350 --> 00:37:04,556\nsometimes you'll see it\nwritten as RAID 1 + 0.\n\n678\n00:37:04,556 --> 00:37:09,200\nIt can be written either way, but\nfor our sakes, it'll be RAID 10.\n\n679\n00:37:09,200 --> 00:37:13,560\nThe way RAID 10 works is it combines\nthe technology of RAID 0 to\n\n680\n00:37:13,560 --> 00:37:18,230\nget a performance boost, and the\ntechnology of RAID 1 to get redundancy.\n\n681\n00:37:18,230 --> 00:37:21,670\nBasically you take a set of disks\nlike these three guys here, and\n\n682\n00:37:21,670 --> 00:37:24,150\nyou build a RAID 0 stripe on them, right?\n\n683\n00:37:24,150 --> 00:37:28,670\nSo it's RAID 0 across these three disks,\ncreating one big stripe, all right?\n\n684\n00:37:28,670 --> 00:37:32,820\nAnd then over here, again same thing,\nRAID 0 creating one big disk.\n\n685\n00:37:32,820 --> 00:37:37,680\nThen you take the two big disks\nyou just made, and you do Raid 1,\n\n686\n00:37:37,680 --> 00:37:39,350\nmirroring between them.\n\n687\n00:37:39,350 --> 00:37:43,250\nSo now, anything written to the disk\non the left gets mirrored to the right.\n\n688\n00:37:43,250 --> 00:37:43,960\nOkay.\n\n689\n00:37:43,960 --> 00:37:46,710\nNow you see Raid 10 like this.\n\n690\n00:37:46,710 --> 00:37:49,020\nYou can also see it as Raid 0 plus 1, or\n\n691\n00:37:49,020 --> 00:37:53,630\nthe other way around,\nwhere you build your mirrors first.\n\n692\n00:37:53,630 --> 00:37:55,450\nAnd then you strike across the mirrors and\n\n693\n00:37:55,450 --> 00:37:58,120\nactually that one is probably\na little more common.\n\n694\n00:37:58,120 --> 00:38:02,640\nAnd in that scenario what we\nwould do is basically we would\n\n695\n00:38:02,640 --> 00:38:04,150\nchange this diagram a little bit.\n\n696\n00:38:04,150 --> 00:38:06,070\nLet me, here I'll do a whole\n\n697\n00:38:07,330 --> 00:38:10,390\nnew tab on this one to show you\nthe other way that it kinda laid out.\n\n698\n00:38:10,390 --> 00:38:14,300\nNow, which way it lays out,\nyou don't actually determine it.\n\n699\n00:38:14,300 --> 00:38:17,270\nIt's your hardware RAID\ncontroller that determines it.\n\n700\n00:38:17,270 --> 00:38:19,700\nWhen you build this, you're not actually\nbuilding these individual RAIDs,\n\n701\n00:38:19,700 --> 00:38:20,780\nyou're telling the RAID controller,\n\n702\n00:38:20,780 --> 00:38:23,990\nhey here's the disks I want you to use,\ndo RAID 10 for me.\n\n703\n00:38:23,990 --> 00:38:25,880\nAnd it'll lay them out.\n\n704\n00:38:25,880 --> 00:38:30,440\nThe other way of laying this out would be,\nIf we took some of these.\n\n705\n00:38:30,440 --> 00:38:31,040\nLet me just.\n\n706\n00:38:31,040 --> 00:38:32,890\nI'll change this to be like RAID 1.\n\n707\n00:38:35,370 --> 00:38:37,660\nI'll just realign that\nto cover those disks.\n\n708\n00:38:40,050 --> 00:38:42,380\nAnd so on.\nYou guys kinda get the idea here.\n\n709\n00:38:42,380 --> 00:38:46,260\nI'm gonna run out of room,\nbut we'll work around that.\n\n710\n00:38:46,260 --> 00:38:48,670\nSo basically, we create these mirrors.\n\n711\n00:38:52,110 --> 00:38:58,050\nAnd the disks are all right here\ninside of these mirrors and\n\n712\n00:38:58,050 --> 00:39:00,810\nthen we create that RAID\n1 stripe across it.\n\n713\n00:39:00,810 --> 00:39:02,370\nSo different ways to do it,\n\n714\n00:39:02,370 --> 00:39:06,740\nyour hardware RAID controller is\ngonna determine which method is used.\n\n715\n00:39:06,740 --> 00:39:10,160\nSo it's not something you\nhave to worry too much about.\n\n716\n00:39:10,160 --> 00:39:13,370\nBut that's the basic way\nthat RAID 10 can work.\n\n717\n00:39:13,370 --> 00:39:15,740\nNow on a positive side,\n\n718\n00:39:15,740 --> 00:39:20,140\nwe get all the performance boost\ncharacteristics of RAID 0.\n\n719\n00:39:20,140 --> 00:39:25,440\nWe are just writing to a stripe.\n\n720\n00:39:25,440 --> 00:39:29,650\nSo I can write to these three\ndisks all at the same time.\n\n721\n00:39:29,650 --> 00:39:33,120\nAll right, and I can read from these\nthree disks all at the same time.\n\n722\n00:39:33,120 --> 00:39:36,280\nSo I'm reading from them and writing\nto them, I get that performance boost.\n\n723\n00:39:36,280 --> 00:39:40,568\nOn the back end, it's mirroring all my\nwrites over to these other disks, so\n\n724\n00:39:40,568 --> 00:39:42,583\nI've got a mirror for redundancy.\n\n725\n00:39:42,583 --> 00:39:45,625\nSo if I lose a drive, it's no big deal.\n\n726\n00:39:45,625 --> 00:39:52,083\nWhen this drive fails right here\nWell it fails so it's now offline.\n\n727\n00:39:52,083 --> 00:39:57,345\nAnd I'm not too worried about that because\nI know that its already got a mirror.\n\n728\n00:39:57,345 --> 00:40:00,690\nIts got a backup right here, and\nthe backup can kick in and takeover.\n\n729\n00:40:00,690 --> 00:40:02,670\nIn fact, I can have more then one failure.\n\n730\n00:40:02,670 --> 00:40:06,390\nI can actually have this drive fail or\n\n731\n00:40:06,390 --> 00:40:09,410\neven this drive fail and\nI'll be okay because I still have one.\n\n732\n00:40:09,410 --> 00:40:11,300\nThe only time you'll have a problem here,\n\n733\n00:40:11,300 --> 00:40:14,710\nis if you have multiple\nfailures in the same stripe.\n\n734\n00:40:14,710 --> 00:40:16,570\nIn the same mirror.\n\n735\n00:40:16,570 --> 00:40:20,890\nIf both of those drives failed,\nI just lost my RAID 0 stripe, and\n\n736\n00:40:20,890 --> 00:40:22,595\nnow the whole thing fails.\n\n737\n00:40:22,595 --> 00:40:25,705\nYou do get a higher level of redundancy,\nbut you get performance, too.\n\n738\n00:40:25,705 --> 00:40:28,765\nSo RAID 10 really is\nthe best of both worlds.\n\n739\n00:40:28,765 --> 00:40:30,165\nThis is the one that we wanna go with.\n\n740\n00:40:30,165 --> 00:40:33,095\nNow, that being said,\nyou might ask yourself,\n\n741\n00:40:33,095 --> 00:40:34,465\nwhy do we even have\nthe other ones anymore?\n\n742\n00:40:34,465 --> 00:40:35,745\nWhy doesn't everybody just do RAID 10?\n\n743\n00:40:35,745 --> 00:40:39,435\nAnd the thing is disc cost, right?\n\n744\n00:40:39,435 --> 00:40:42,350\nI can do a mirror with only two drives.\n\n745\n00:40:43,460 --> 00:40:44,180\nThere.\n\n746\n00:40:44,180 --> 00:40:46,600\nI can do a mirror with only two drives.\n\n747\n00:40:46,600 --> 00:40:49,890\nI can do a stripe RAID 0,\nwhich is three drives.\n\n748\n00:40:49,890 --> 00:40:51,670\nI can do RAID 5 with three drives.\n\n749\n00:40:51,670 --> 00:40:53,690\nNow, with RAID 5,\nI've got a parity bit, so\n\n750\n00:40:53,690 --> 00:40:56,920\nI actually lose a third of my\nstorage in this scenario, and\n\n751\n00:40:56,920 --> 00:41:01,020\nif I go to five drives or ten drives or\nwhatever, it becomes less and less but\n\n752\n00:41:01,020 --> 00:41:06,900\nyou basically lose the equivalent of\none entire drive when you do RAID 5.\n\n753\n00:41:06,900 --> 00:41:10,480\nWith a mirror you lose\nthe equivalent of one drive.\n\n754\n00:41:10,480 --> 00:41:12,830\nSo you're losing 50% of your storage here.\n\n755\n00:41:12,830 --> 00:41:15,820\nYou've got extra storage\nthat you just can't use.\n\n756\n00:41:15,820 --> 00:41:17,750\nIt's tied up by the mirror.\n\n757\n00:41:17,750 --> 00:41:21,330\nIn RAID 5 you're basically losing\none full drives worth of storage.\n\n758\n00:41:21,330 --> 00:41:24,640\nIn RAID 10 you go back to the 50% model.\n\n759\n00:41:24,640 --> 00:41:29,690\nI've got six discs here, but I end up\nwith only three discs worth of storage.\n\n760\n00:41:29,690 --> 00:41:34,540\nSo that model right there where I lose\npart of my storage gets expensive.\n\n761\n00:41:34,540 --> 00:41:36,780\nFor a home user or\nsmall business that's a problem, but for\n\n762\n00:41:36,780 --> 00:41:39,300\nenterprises, hard drives\nare cheap these days.\n\n763\n00:41:39,300 --> 00:41:42,503\nSo, we just get more of them,\nwe add them in, it's not such a big deal.\n\n764\n00:41:42,503 --> 00:41:48,781\nIt used to be but in today's world, right,\nin 2010 and on, these are common place.\n\n765\n00:41:48,781 --> 00:41:51,325\nSo raid 10 is what you're\ngoing to see a lot.\n\n766\n00:41:51,325 --> 00:41:53,600\nYou know, it doesn't mean you have\nto use it exclusively, right?\n\n767\n00:41:53,600 --> 00:41:57,640\nAs we design our servers,\nwe start to split up our systems.\n\n768\n00:41:57,640 --> 00:41:59,480\nYou can pick and choose and mix and match.\n\n769\n00:41:59,480 --> 00:42:03,410\nI might have two disks here in raid one\nfor my operating system, three disks in\n\n770\n00:42:03,410 --> 00:42:07,318\nraid five for my database, a couple of\ndisks in raid one for my transaction logs.\n\n771\n00:42:07,318 --> 00:42:11,620\nAll kind of building around what it\nis that I need to provide for system.\n\n772\n00:42:11,620 --> 00:42:15,910\nMy transaction logs I may want\noptimal writing speed possible.\n\n773\n00:42:15,910 --> 00:42:17,900\nI want to write to it as fast as I can.\n\n774\n00:42:17,900 --> 00:42:22,930\nWell a mirror isn't going to give me that,\na mirror is going to give me the same\n\n775\n00:42:22,930 --> 00:42:26,480\nwrite speeds as writing to a single disk,\nso I might want to go beyond it.\n\n776\n00:42:26,480 --> 00:42:28,340\nAnd Mike in the chatroom\nhad asked you know what,\n\n777\n00:42:28,340 --> 00:42:30,790\nwhy not do RAID 0 there,\nyou certainly could.\n\n778\n00:42:30,790 --> 00:42:32,090\nIf we did RAID 0,\n\n779\n00:42:32,090 --> 00:42:36,080\nif we put three drives in stripe,\nwe'd be able to write very, very fast.\n\n780\n00:42:36,080 --> 00:42:37,960\nBut if a single drive failed.\n\n781\n00:42:37,960 --> 00:42:39,360\nThe transaction logs would go offline.\n\n782\n00:42:39,360 --> 00:42:41,520\nAnd if the transaction logs go offline,\n\n783\n00:42:41,520 --> 00:42:45,000\nyou can't write your database anymore, and\nso your database is basically offline.\n\n784\n00:42:45,000 --> 00:42:46,850\nYou can still read, but you can't write.\n\n785\n00:42:46,850 --> 00:42:48,960\nSo if we're looking for high availability,\n\n786\n00:42:48,960 --> 00:42:52,928\nwe want to ensure that database is up,\neven when hardware is failing.\n\n787\n00:42:52,928 --> 00:42:56,320\nRAID 0 is not gonna be the solution,\nthen we can go to RAID 5 or\n\n788\n00:42:56,320 --> 00:42:58,740\nRAID 10 based on our needs.\n\n789\n00:42:58,740 --> 00:43:02,110\nOn the database side,\na mirror might be fine but\n\n790\n00:43:02,110 --> 00:43:05,210\nit's not going to give us great\nread performance out of it.\n\n791\n00:43:05,210 --> 00:43:08,805\nSo, again, we could go RAID 0 or\nRAID 10 to get that performance boost.\n\n792\n00:43:08,805 --> 00:43:13,565\nJust remember that your main limiting\nfactor here are those physical arms,\n\n793\n00:43:13,565 --> 00:43:15,495\nthe little moving arms on the hard drives.\n\n794\n00:43:15,495 --> 00:43:19,525\nSo the more drives you have, the better\nthat performance is going to be, and\n\n795\n00:43:19,525 --> 00:43:21,837\nthe better results you're\ngoing to get out of it.\n\n796\n00:43:21,837 --> 00:43:22,427\nAll right.\nBut\n\n797\n00:43:22,427 --> 00:43:23,977\nit does need to be\nseparate physical drives.\n\n798\n00:43:23,977 --> 00:43:25,667\nDon't even mess with partitions.\n\n799\n00:43:27,167 --> 00:43:29,667\nPartitions create security boundaries.\n\n800\n00:43:29,667 --> 00:43:31,537\nThey don't do anything for performance.\n\n801\n00:43:31,537 --> 00:43:33,157\nSo don't mix those two up.\n\n802\n00:43:33,157 --> 00:43:34,527\nAll right.\n\n803\n00:43:34,527 --> 00:43:36,067\nSo all of this ties back.\n\n804\n00:43:36,067 --> 00:43:38,557\nWe'll go full circle,\nback to what I started the episode on.\n\n805\n00:43:38,557 --> 00:43:41,787\nWhen we create a database, we need to\nthink about the hard drives that we're\n\n806\n00:43:41,787 --> 00:43:43,490\ngoing to be putting this stuff on.\n\n807\n00:43:43,490 --> 00:43:48,090\nWhen I created this database, it's\ndoing the create database command, and\n\n808\n00:43:48,090 --> 00:43:52,200\nit's specifying those two files,\nthe main database file and\n\n809\n00:43:52,200 --> 00:43:54,685\nthe transaction log and\nwhere they're going to be stored,\n\n810\n00:43:54,685 --> 00:43:58,990\nSQL has no idea what type\nof hard drives those are.\n\n811\n00:43:58,990 --> 00:44:01,580\nIt doesn't know if they're RAID 0 or 1.\n\n812\n00:44:01,580 --> 00:44:03,660\nIt doesn't know if they're on a SAN or\nthey're local.\n\n813\n00:44:03,660 --> 00:44:04,430\nIt doesn't know anything.\n\n814\n00:44:04,430 --> 00:44:08,590\nIt just knows there's a C drive, and\nmaybe there's a D drive or an E drive.\n\n815\n00:44:08,590 --> 00:44:11,890\nSo we have to go into our host\noperating system in Windows,\n\n816\n00:44:11,890 --> 00:44:16,320\nset up the drive that we want and start\nto move our stuff around appropriately.\n\n817\n00:44:16,320 --> 00:44:22,530\nSo on my system for example, I've got\na C drive where my operating system is.\n\n818\n00:44:22,530 --> 00:44:25,640\nAnd then, I've got a couple of other\ndrives floating around here that I can use\n\n819\n00:44:25,640 --> 00:44:26,760\nfor other things.\n\n820\n00:44:26,760 --> 00:44:29,250\nSo for example,\nmaybe I want to take this D drive,\n\n821\n00:44:29,250 --> 00:44:34,150\nthat's 100 gigs in size, and I'm going to\nturn that into my transaction log storage.\n\n822\n00:44:34,150 --> 00:44:36,490\nSo I'm going to call that my TL drive.\n\n823\n00:44:36,490 --> 00:44:38,490\nThat's where I'll put my transaction logs.\n\n824\n00:44:38,490 --> 00:44:41,540\nAnd my E drive,\nI'm going to make that my database drive.\n\n825\n00:44:41,540 --> 00:44:43,550\nThat's where my actually\ndatabase is going to be stored.\n\n826\n00:44:44,990 --> 00:44:47,000\nAnd then I've got another\ndrive here stored, so\n\n827\n00:44:47,000 --> 00:44:49,680\nmaybe I'll make that where my\nbackups are going to be stored.\n\n828\n00:44:49,680 --> 00:44:52,390\nAnd I'm just naming them so\nI can remember what they're for.\n\n829\n00:44:52,390 --> 00:44:57,110\nNow when I create databases, I can specify\nwhere I want these files to reside.\n\n830\n00:44:57,110 --> 00:44:59,460\nAnd I can just do that\nright here at the GUI.\n\n831\n00:44:59,460 --> 00:45:02,350\nSo, if I create another database,\nI'll do sample two.\n\n832\n00:45:03,480 --> 00:45:07,070\nRight down here are my file names,\nthe database file and\n\n833\n00:45:07,070 --> 00:45:08,460\nthe transaction log file.\n\n834\n00:45:08,460 --> 00:45:09,930\nAnd so you see the file type here.\n\n835\n00:45:09,930 --> 00:45:14,620\nThe database one has row data and\nthe transaction log has, well, log data.\n\n836\n00:45:14,620 --> 00:45:17,060\nAnd then you can specify where\nyou want them to reside.\n\n837\n00:45:17,060 --> 00:45:18,100\nThe screens a little weird.\n\n838\n00:45:18,100 --> 00:45:20,410\nIt looks like you can't\nspecify the destination.\n\n839\n00:45:20,410 --> 00:45:23,360\nBut if you scroll over,\nthere it is, the path.\n\n840\n00:45:23,360 --> 00:45:24,810\nIt's kind of tucked away.\n\n841\n00:45:24,810 --> 00:45:25,930\nIt's easy to overlook.\n\n842\n00:45:27,540 --> 00:45:29,170\nSo we can go in there, and\nwe can pick a new location.\n\n843\n00:45:29,170 --> 00:45:32,160\nSo for the database,\nmaybe I'll browse, and\n\n844\n00:45:32,160 --> 00:45:38,010\nit seems to have gotten angry at me there,\nbut we can browse and pick a new location.\n\n845\n00:45:38,010 --> 00:45:41,930\nOne word of caution; you don't get\na new folder button in here, and\n\n846\n00:45:41,930 --> 00:45:46,140\nso if you want to put it in a sub folder,\nyou've got to create it ahead of time.\n\n847\n00:45:46,140 --> 00:45:51,428\nIf you just put it in the ROOT folder,\nbe aware that NTFS has a limit.\n\n848\n00:45:51,428 --> 00:45:54,790\nNot just to the amount of\nfiles in the root folder, but\n\n849\n00:45:54,790 --> 00:45:57,170\nalso the size of files in the root folder.\n\n850\n00:45:57,170 --> 00:45:59,870\nSo you generally don't\nwant to put databases and\n\n851\n00:45:59,870 --> 00:46:01,900\ntransaction logs in the root of a drive.\n\n852\n00:46:01,900 --> 00:46:03,860\nYou always want to put\nthem in a sub folder.\n\n853\n00:46:03,860 --> 00:46:07,360\nSo I'm just gonna go to those two drives,\nlike my TL drive, and\n\n854\n00:46:07,360 --> 00:46:11,760\nI'll just make a TL folder,\nwhere I'm gonna store transaction logs.\n\n855\n00:46:11,760 --> 00:46:13,080\nAnd I'll go to my database drive, and\n\n856\n00:46:13,080 --> 00:46:18,980\nI'll create a database folder where\nI'll store my databases, all right?\n\n857\n00:46:18,980 --> 00:46:20,900\nAnd I guess I can do the same\nthing on my backup drive.\n\n858\n00:46:20,900 --> 00:46:22,320\nThis would be where I put my backups.\n\n859\n00:46:24,780 --> 00:46:26,280\nThere, all right?\n\n860\n00:46:26,280 --> 00:46:29,060\nSo now, when I go to create the database,\nI can go in here.\n\n861\n00:46:29,060 --> 00:46:33,500\nAnd I can browse to my E drive and\nthe DB folder.\n\n862\n00:46:33,500 --> 00:46:35,620\nThat's where I'm gonna put this database.\n\n863\n00:46:35,620 --> 00:46:39,600\nAnd I'll go to my TL drive,\nwhich was D I think.\n\n864\n00:46:39,600 --> 00:46:40,570\nYep.\n\n865\n00:46:40,570 --> 00:46:41,990\nAnd there we go.\n\n866\n00:46:41,990 --> 00:46:44,950\nAnd now it's gonna put them\nin those appropriate folders.\n\n867\n00:46:44,950 --> 00:46:48,150\nSeparate hard drives\nperforming separate functions.\n\n868\n00:46:48,150 --> 00:46:48,870\nAll right?\n\n869\n00:46:48,870 --> 00:46:51,189\nNow, for the database name,\nI'm gonna call this Employees.\n\n870\n00:46:52,570 --> 00:46:53,970\nOr actually let's call\nthis Human Resources.\n\n871\n00:46:53,970 --> 00:46:56,140\nThis will be a Human Resources database.\n\n872\n00:46:58,833 --> 00:47:01,260\nSo, all of my human resources\nare going to need to go in here.\n\n873\n00:47:01,260 --> 00:47:03,090\nInformation about my employees and\nthings like that.\n\n874\n00:47:03,090 --> 00:47:04,560\nIt's all going to go in this database.\n\n875\n00:47:04,560 --> 00:47:06,950\nSo, that's what I'll call it.\n\n876\n00:47:06,950 --> 00:47:11,900\nThe file names are listed over here and\nyou can change those if you want.\n\n877\n00:47:11,900 --> 00:47:14,350\nThat _log,\nit's just there to help you identify it.\n\n878\n00:47:14,350 --> 00:47:15,290\nYou don't have to keep that.\n\n879\n00:47:15,290 --> 00:47:16,870\nYou can change it to whatever you want.\n\n880\n00:47:16,870 --> 00:47:17,370\nI'll leave it be.\n\n881\n00:47:18,940 --> 00:47:19,590\nAll right.\n\n882\n00:47:19,590 --> 00:47:23,650\nSo when I say okay to that, it's gonna go\nin and it's gonna create that database.\n\n883\n00:47:23,650 --> 00:47:26,430\nAnd if I browse to my hard drives\nas I'll be able to see those files.\n\n884\n00:47:26,430 --> 00:47:29,120\nIf I go to my database folder.\n\n885\n00:47:29,120 --> 00:47:33,140\nThere's the HumanResources file,\nand it's hiding my file extensions.\n\n886\n00:47:33,140 --> 00:47:34,180\nLet me turn that on.\n\n887\n00:47:35,340 --> 00:47:38,841\nThere.\nSo now, I can see HumanResources.mdf,\n\n888\n00:47:38,841 --> 00:47:39,740\nall right?\n\n889\n00:47:39,740 --> 00:47:42,708\nIt's four megs in size, very, very small.\n\n890\n00:47:42,708 --> 00:47:45,501\nAnd if I go to my TL drive,\n\n891\n00:47:45,501 --> 00:47:50,958\nThere's HumanResources_log.ldf, right?\n\n892\n00:47:50,958 --> 00:47:55,298\nAnd you could always move these later on,\nif you decide you don't like where you put\n\n893\n00:47:55,298 --> 00:47:58,410\nthe folder or the database or\nwhatever, you could move it.\n\n894\n00:47:58,410 --> 00:48:00,010\nIt's actually really easy.\n\n895\n00:48:00,010 --> 00:48:02,480\nThere's a few different\nways you could go about it.\n\n896\n00:48:02,480 --> 00:48:06,510\nOne way is, like, let's take that\nsample1 database I made, all right?\n\n897\n00:48:06,510 --> 00:48:12,470\nIf I want to move it,\nwe can pull up its properties, and\n\n898\n00:48:12,470 --> 00:48:16,310\nin its properties,\nyou've got the files option.\n\n899\n00:48:16,310 --> 00:48:19,590\nAnd here we see that same screen that\nwe saw when we created the database.\n\n900\n00:48:19,590 --> 00:48:22,460\nAnd you can go in here and\nyou can just change the path.\n\n901\n00:48:22,460 --> 00:48:25,070\nAnd so if I take that path\nthat we've got right here,\n\n902\n00:48:27,020 --> 00:48:28,825\nwe can change it and move it along.\n\n903\n00:48:28,825 --> 00:48:30,770\nOh, actually,\nI've got it online right now, so\n\n904\n00:48:30,770 --> 00:48:33,630\nit's gonna be a little upset about that.\n\n905\n00:48:33,630 --> 00:48:38,020\nNotice the ellipsis button is\nactually over here for max size, but\n\n906\n00:48:38,020 --> 00:48:43,090\nmy path, it's not letting me pick a new\npath, cuz the database is mounted and\n\n907\n00:48:43,090 --> 00:48:46,860\nonline and, if anybody holds a connection\nto it, it won't let you move it.\n\n908\n00:48:46,860 --> 00:48:50,490\nSo if you can't move it that way,\nthere is another way to move it.\n\n909\n00:48:50,490 --> 00:48:53,250\nIt's actually the same way\nthat we migrate a database.\n\n910\n00:48:53,250 --> 00:48:55,794\nLet's say that you've got a database\nattached to an older SQL server.\n\n911\n00:48:55,794 --> 00:48:58,437\nSQL Server 2008 or 2005 and\n\n912\n00:48:58,437 --> 00:49:03,733\nyou wanna move it into SQL Server 2012 or\n2014 for that matter.\n\n913\n00:49:03,733 --> 00:49:06,630\nAnd you can do what's called\ndetaching the database and\n\n914\n00:49:06,630 --> 00:49:09,470\nthen you can move it wherever you want and\nreattach it.\n\n915\n00:49:09,470 --> 00:49:12,685\nIt's really straight forward, it's the\nsame way that we can move database files.\n\n916\n00:49:12,685 --> 00:49:14,700\nI can take that Sample1 database and\n\n917\n00:49:14,700 --> 00:49:18,669\nI'm just going to right click on it\nright here and go to tasks and detach.\n\n918\n00:49:21,030 --> 00:49:23,040\nNotice I've got take offline, also.\n\n919\n00:49:23,040 --> 00:49:25,830\nIf I take it offline, that's what's\ngoing to allow me to move the files,\n\n920\n00:49:25,830 --> 00:49:27,180\nbecause people won't be in there.\n\n921\n00:49:27,180 --> 00:49:31,440\nBut I'm going to do a detach cuz this will\nbe the same that we do like a migration.\n\n922\n00:49:31,440 --> 00:49:32,810\nSo I'll detach it.\n\n923\n00:49:32,810 --> 00:49:35,370\nAnd so it's just going to give me\ninformation about what I'm doing.\n\n924\n00:49:35,370 --> 00:49:38,350\nThe data base that I'm going to\ndetach is the Sample data base.\n\n925\n00:49:39,770 --> 00:49:42,310\nAnd, I'll go ahead and\nhit okay, it's gonna detach it.\n\n926\n00:49:42,310 --> 00:49:44,900\nNow, notice the Sample database\njust disappeared, right?\n\n927\n00:49:44,900 --> 00:49:46,230\nI just lost everything.\n\n928\n00:49:46,230 --> 00:49:50,140\nWell, I didn't lose it,\nit's just detached from my server.\n\n929\n00:49:50,140 --> 00:49:54,180\nNow, I can go and move the files wherever\nI want, and then reattach it and\n\n930\n00:49:54,180 --> 00:49:55,560\nit'll be happy again.\n\n931\n00:49:55,560 --> 00:49:59,540\nSo, I can go and I can find my existing\n\n932\n00:49:59,540 --> 00:50:04,680\ndata, and\nI can move it to wherever I need it to be.\n\n933\n00:50:04,680 --> 00:50:08,470\nSo I'm going to browse onto my C drive,\ninto my SQL install.\n\n934\n00:50:09,860 --> 00:50:14,055\nSo I'm just browsing into C: >\nProgram Files > Microsoft SQL server,\n\n935\n00:50:14,055 --> 00:50:16,069\ninto my SQL install and into data.\n\n936\n00:50:16,069 --> 00:50:19,173\nAnd here's Sample1.mdfmlog.\n\n937\n00:50:19,173 --> 00:50:19,673\nAll right.\n\n938\n00:50:20,780 --> 00:50:23,470\nAnd so\nI'm gonna move the logs into my TL folder.\n\n939\n00:50:25,580 --> 00:50:27,380\nSo let's move those over.\n\n940\n00:50:27,380 --> 00:50:29,630\nOh, I copied them instead of moving them.\n\n941\n00:50:29,630 --> 00:50:31,130\nWell, I'll just delete it in a minute.\n\n942\n00:50:31,130 --> 00:50:33,767\nAnd then I'll move my database\ninto the database folder.\n\n943\n00:50:38,132 --> 00:50:39,532\nAll right.\nAnd then I'm gonna go ahead and\n\n944\n00:50:39,532 --> 00:50:40,310\ndelete the originals.\n\n945\n00:50:41,950 --> 00:50:42,700\nThere.\n\n946\n00:50:42,700 --> 00:50:44,360\nSo now they're moved where I want them.\n\n947\n00:50:44,360 --> 00:50:46,070\nAll I need to do is reattach the database.\n\n948\n00:50:46,070 --> 00:50:48,600\nNow, I could have just\nmoved it between servers.\n\n949\n00:50:48,600 --> 00:50:50,840\nRight?\nMaybe I had the database on one server,\n\n950\n00:50:50,840 --> 00:50:53,450\nand I just copy the files\nover to a new server.\n\n951\n00:50:53,450 --> 00:50:56,560\nOr it's coming from an old version or\nanother instance, and\n\n952\n00:50:56,560 --> 00:50:57,740\nI'm attaching it to this instance.\n\n953\n00:50:57,740 --> 00:51:01,210\nSo it's the same thing for\nmigrating as upgrading.\n\n954\n00:51:01,210 --> 00:51:03,040\nIt's really the same process.\n\n955\n00:51:03,040 --> 00:51:06,330\nNow, I can just go to databases and\nI can right-click on databases and\n\n956\n00:51:06,330 --> 00:51:10,240\nchoose attach and\nI can reattach that database file.\n\n957\n00:51:10,240 --> 00:51:12,060\nNow, it's going to ask for\nthe database to attach.\n\n958\n00:51:12,060 --> 00:51:16,510\nI just need to add one and I'm going\nto browse to my database folder and\n\n959\n00:51:16,510 --> 00:51:18,950\npick that Sample database that I made.\n\n960\n00:51:18,950 --> 00:51:20,090\nAll right, there it is.\n\n961\n00:51:20,090 --> 00:51:23,500\nIt's looking for the log file, and\nnotice where the log file is pointing.\n\n962\n00:51:23,500 --> 00:51:24,800\nIt's the old folder.\n\n963\n00:51:24,800 --> 00:51:27,300\nIt's expecting those log files\nto be in the same place, and\n\n964\n00:51:27,300 --> 00:51:28,710\nit's telling me it's not found.\n\n965\n00:51:28,710 --> 00:51:29,590\nSo I just need to browse and\n\n966\n00:51:29,590 --> 00:51:33,800\ntell it where the log files are now,\nwhich mine are right here.\n\n967\n00:51:35,370 --> 00:51:39,320\nSo now it knows where the database is and\nwhere the log files are.\n\n968\n00:51:39,320 --> 00:51:40,470\nThere's no other options here,\n\n969\n00:51:40,470 --> 00:51:42,920\ncuz it'll pull all the options\nfrom the files itself.\n\n970\n00:51:42,920 --> 00:51:44,330\nAnd we say OK.\n\n971\n00:51:44,330 --> 00:51:46,220\nNow I've got my Sample1 database.\n\n972\n00:51:46,220 --> 00:51:50,270\nIt's brought it in, it's reattached it,\nand it's in the new location.\n\n973\n00:51:50,270 --> 00:51:51,830\nBut notice what it did.\n\n974\n00:51:51,830 --> 00:51:53,780\nIt's mounted as read-only.\n\n975\n00:51:54,790 --> 00:51:58,260\nWhen you attach a database,\nit does it read-only so\n\n976\n00:51:58,260 --> 00:52:01,260\nthat you can test it to make\nsure that nothing's broken.\n\n977\n00:52:01,260 --> 00:52:02,800\nYou don't want to go in and\nstart making changes and\n\n978\n00:52:02,800 --> 00:52:06,080\nthen see that something's wrong and\nnow the database files are corrupted.\n\n979\n00:52:06,080 --> 00:52:09,940\nSo while it's read-only, you can look at\nit, make sure everything is imported and\n\n980\n00:52:09,940 --> 00:52:11,180\nmake sure that it's right.\n\n981\n00:52:11,180 --> 00:52:14,828\nAnd then you can bring it\nback to full functionality.\n\n982\n00:52:14,828 --> 00:52:17,367\nSo while it's read-only,\nthat's your chance to check and\n\n983\n00:52:17,367 --> 00:52:18,874\nmake sure everything's healthy.\n\n984\n00:52:18,874 --> 00:52:21,487\nAnd then we can just\nedit it's properties and\n\n985\n00:52:21,487 --> 00:52:24,942\nchange it back to being actually\nwritable and functional.\n\n986\n00:52:24,942 --> 00:52:28,294\nSo when we go in and\ntake a look at our files,\n\n987\n00:52:28,294 --> 00:52:31,730\nI can see my new pads are entered in.\n\n988\n00:52:31,730 --> 00:52:32,500\nActually, you know what?\n\n989\n00:52:32,500 --> 00:52:33,790\nIt's listing the old paths, isn't it?\n\n990\n00:52:35,750 --> 00:52:36,450\nWhy did it do that?\n\n991\n00:52:36,450 --> 00:52:37,137\nDid I pull up the wrong database?\n\n992\n00:52:41,467 --> 00:52:46,587\nSo I'm just double-checking my properties\nhere, and when I go into the files,\n\n993\n00:52:46,587 --> 00:52:51,510\nit's still pointing to the old location,\nso it didn't reattach properly.\n\n994\n00:52:51,510 --> 00:52:56,340\nNow, I've seen this before where the\nstudio, the SQL Management Studio doesn't\n\n995\n00:52:56,340 --> 00:53:00,763\nupdate itself properly, so I'm just\ngonna force it to refresh real quick.\n\n996\n00:53:00,763 --> 00:53:04,087\nI'm gonna refresh that guy too,\n\n997\n00:53:04,087 --> 00:53:08,726\nand make sure that\nsetting actually updated.\n\n998\n00:53:08,726 --> 00:53:15,100\nAnd sure enough it did not,\nit is confused.\n\n999\n00:53:15,100 --> 00:53:16,200\nInteresting.\n\n1000\n00:53:16,200 --> 00:53:17,630\nWell, when we attach it,\n\n1001\n00:53:17,630 --> 00:53:20,490\nwe provided the path and\nthat's supposed to teach where it's to go.\n\n1002\n00:53:20,490 --> 00:53:21,510\nAnd in my case, it didn't.\n\n1003\n00:53:21,510 --> 00:53:27,180\nSo I'm gonna redo that detach and\nreattach to find out what happened there.\n\n1004\n00:53:27,180 --> 00:53:28,156\nSo let me detach that one again.\n\n1005\n00:53:32,460 --> 00:53:33,726\nAll right, so it is out of there.\n\n1006\n00:53:36,636 --> 00:53:40,020\nAnd let me just make sure\nthe files didn't get recreated.\n\n1007\n00:53:40,020 --> 00:53:42,690\nIf you try to attach\na database that doesn't exist,\n\n1008\n00:53:42,690 --> 00:53:47,040\nit'll actually create empty files\nsometimes to serve as place holders.\n\n1009\n00:53:47,040 --> 00:53:49,261\nSo I'm just gonna make sure it didn't\ncreate those placeholders for me.\n\n1010\n00:53:49,261 --> 00:53:52,401\nI imagine it did, but no it didn't.\n\n1011\n00:53:52,401 --> 00:53:54,195\nAll right.\nSo yep, so I don't have those there.\n\n1012\n00:53:58,098 --> 00:54:02,387\nMike in the chat room, you mentioned maybe\nthat it remembered where they were before.\n\n1013\n00:54:02,387 --> 00:54:04,660\nIt does remember where they were before.\n\n1014\n00:54:04,660 --> 00:54:07,970\nIt stores that in the master database,\nbut when you reattach it,\n\n1015\n00:54:07,970 --> 00:54:10,860\nyou specify the new location and\nit's supposed to override it.\n\n1016\n00:54:10,860 --> 00:54:12,220\nAnd for some reason mine didn't.\n\n1017\n00:54:12,220 --> 00:54:14,900\nSo let me just try that again.\n\n1018\n00:54:14,900 --> 00:54:18,360\nAnd we'll see if we can't\nfind out what happened there.\n\n1019\n00:54:18,360 --> 00:54:20,410\nSo I'm gonna reattach\nit just one more time.\n\n1020\n00:54:22,220 --> 00:54:23,120\nPoint to that Sample.\n\n1021\n00:54:23,120 --> 00:54:25,953\nAnd then I'll tell it where\nthe new transaction logs are.\n\n1022\n00:54:34,144 --> 00:54:35,300\nAll right.\n\n1023\n00:54:35,300 --> 00:54:37,310\nSo it's got it.\nIt's got the database name.\n\n1024\n00:54:37,310 --> 00:54:41,890\nIt's got the current file path and\nlocation.\n\n1025\n00:54:41,890 --> 00:54:44,330\nThere is not really any\nother option here for me.\n\n1026\n00:54:44,330 --> 00:54:46,858\nSo I'm gonna go ahead and\nhit OK and let it bring that one in.\n\n1027\n00:54:51,502 --> 00:54:52,924\nAnd I'll just double-check its files.\n\n1028\n00:54:55,955 --> 00:54:59,000\nOh shoot,\nyou know it's gonna be the file groups.\n\n1029\n00:55:00,640 --> 00:55:03,780\nWe haven't talked about file groups yet,\nand my file groups are still\n\n1030\n00:55:03,780 --> 00:55:07,610\ntied to the other drive, that's why\nit's pointing it in the other direction.\n\n1031\n00:55:07,610 --> 00:55:08,920\nSo we need to talk about file groups and\n\n1032\n00:55:08,920 --> 00:55:12,720\nwhat they are but I've only got\na few minutes left in the segment.\n\n1033\n00:55:12,720 --> 00:55:13,250\nLet's do this.\n\n1034\n00:55:13,250 --> 00:55:18,080\nLet's stop here, when we get back from the\nbreak, we'll talk about file groups and\n\n1035\n00:55:18,080 --> 00:55:20,050\nwhat they are and why it's overriding me.\n\n1036\n00:55:20,050 --> 00:55:21,951\nAnd then we'll see how to import this and\nget it in the right location.\n\n1037\n00:55:21,951 --> 00:55:23,096\nBut right now, the way that it's set,\n\n1038\n00:55:23,096 --> 00:55:24,994\nyeah, it's gonna keep sending\nit back to the other directory.\n\n1039\n00:55:24,994 --> 00:55:25,981\nI forgot about something.\n\n1040\n00:55:25,981 --> 00:55:30,009\nSo, let's stop and take a break,\nwhen we get back, file groups, after this.\n\n1041\n00:55:30,009 --> 00:55:31,756\n>> [NOISE]\n\n1042\n00:55:31,756 --> 00:55:37,718\n[MUSIC]\n\n1043\n00:55:37,718 --> 00:55:38,800\nAll right.\n\n1044\n00:55:38,800 --> 00:55:39,860\nWelcome back everybody.\n\n1045\n00:55:39,860 --> 00:55:42,370\nWell, I did some checking\nduring the break.\n\n1046\n00:55:42,370 --> 00:55:45,603\nAnd while I thought it was a filegroup\nissue, it actually turns out I made\n\n1047\n00:55:45,603 --> 00:55:48,793\nan amateur mistake on this one and\nforgot something really important.\n\n1048\n00:55:48,793 --> 00:55:51,983\nWe have to remember that SQL, sure,\nit's a server in and of itself,\n\n1049\n00:55:51,983 --> 00:55:55,338\nbut it's running on top of Windows,\nand there's things that can happen\n\n1050\n00:55:55,338 --> 00:55:59,070\ninside of Windows that can interrupt\nwith the way the SQL is working.\n\n1051\n00:55:59,070 --> 00:56:03,093\nYou guys saw me, really quick, create some\nfolders to be able store the database and\n\n1052\n00:56:03,093 --> 00:56:04,680\ntransaction logs in.\n\n1053\n00:56:04,680 --> 00:56:09,160\nWell, I forgot that when\nI created those folders,\n\n1054\n00:56:09,160 --> 00:56:11,700\nit was assigning me as\nthe owner of the folder.\n\n1055\n00:56:11,700 --> 00:56:15,560\nAnd the permissions were set to\nallow me access to the folder.\n\n1056\n00:56:15,560 --> 00:56:18,190\nWell, the problem is SQL\nis not running as me.\n\n1057\n00:56:18,190 --> 00:56:20,360\nI'm actually logged in as SA, right here.\n\n1058\n00:56:20,360 --> 00:56:22,000\nThat built-in SQL account.\n\n1059\n00:56:22,000 --> 00:56:24,460\nSo, every action that I perform\n\n1060\n00:56:24,460 --> 00:56:28,600\nis actually being performed under\nthe service account that SQL is running.\n\n1061\n00:56:28,600 --> 00:56:31,588\nRemember when we installed it, right here.\n\n1062\n00:56:31,588 --> 00:56:34,567\nEach service, if I can find them,\nthere they are.\n\n1063\n00:56:34,567 --> 00:56:37,850\nEach SQL service had a service\naccount created for it.\n\n1064\n00:56:37,850 --> 00:56:41,655\nSo, I can see NT_Service/mssqlserver and\nso on.\n\n1065\n00:56:41,655 --> 00:56:43,770\nThere's those service accounts\nthat were made for them.\n\n1066\n00:56:43,770 --> 00:56:48,120\nSo, it's trying to access those folders\nthat I specified as itself, and\n\n1067\n00:56:48,120 --> 00:56:49,170\nit didn't have access.\n\n1068\n00:56:49,170 --> 00:56:53,450\nSo, I had to change the permissions\non those folders to allow the access,\n\n1069\n00:56:53,450 --> 00:56:55,820\nand now that that's done,\nit'll import just fine.\n\n1070\n00:56:55,820 --> 00:56:58,700\nSo, let me go back and\nredo that attachment.\n\n1071\n00:56:58,700 --> 00:57:02,170\nSo, SQL needs to have permission\nto access the folders\n\n1072\n00:57:02,170 --> 00:57:03,410\nwhere you're storing the database.\n\n1073\n00:57:03,410 --> 00:57:07,700\nSo now, if I go in and reattach,\nit should work just fine.\n\n1074\n00:57:07,700 --> 00:57:10,590\nSo I'm gonna go back and\nspecify that same one.\n\n1075\n00:57:10,590 --> 00:57:13,290\nThere we go, the human resources, oops.\n\n1076\n00:57:13,290 --> 00:57:15,880\nI didn't specify the transaction log file.\n\n1077\n00:57:15,880 --> 00:57:18,810\nWe'll see how many mistakes I can\nmake on this one all in a row.\n\n1078\n00:57:18,810 --> 00:57:22,340\nSo, I'm gonna add in that, uh-oh.\n\n1079\n00:57:22,340 --> 00:57:25,350\nCREATE FILE encountered\na operating system error.\n\n1080\n00:57:25,350 --> 00:57:28,140\nCannot access the file because it\nis being used by another process.\n\n1081\n00:57:28,140 --> 00:57:29,199\nThat is wonderful.\n\n1082\n00:57:32,194 --> 00:57:33,590\nLet me see where I've tied this thing up.\n\n1083\n00:57:33,590 --> 00:57:35,880\nI'm just gonna close my\nother little windows here.\n\n1084\n00:57:37,800 --> 00:57:39,430\nWorst case scenario,\nI'll just duplicate it.\n\n1085\n00:57:39,430 --> 00:57:40,970\nYou know, another thing that you can do,\n\n1086\n00:57:40,970 --> 00:57:43,810\nyou can actually do more than one\nthing when you move these files.\n\n1087\n00:57:43,810 --> 00:57:45,750\nYou can change their name, if you want.\n\n1088\n00:57:45,750 --> 00:57:48,520\nSo, oh, actually, you know what,\nmy files are gone, aren't they?\n\n1089\n00:57:50,180 --> 00:57:52,600\nWell, let's just repeat this process so\nwe don't have to deal with that.\n\n1090\n00:57:52,600 --> 00:57:54,540\nSo, I'll create a new database.\n\n1091\n00:57:54,540 --> 00:57:58,570\nMaybe this will be my payroll database,\nand so\n\n1092\n00:57:58,570 --> 00:58:04,400\nI'm gonna create it in the default\nlocation, like normal.\n\n1093\n00:58:04,400 --> 00:58:05,890\nSo there's my payroll database.\n\n1094\n00:58:05,890 --> 00:58:07,210\nI'm just gonna detach that one.\n\n1095\n00:58:09,560 --> 00:58:10,780\nAnd we'll repeat the process.\n\n1096\n00:58:12,050 --> 00:58:12,780\nAll right.\n\n1097\n00:58:12,780 --> 00:58:14,180\nSo there goes the payroll database, and\n\n1098\n00:58:14,180 --> 00:58:16,540\nI'm just gonna move it just like\nwe did in the last segment.\n\n1099\n00:58:16,540 --> 00:58:20,390\nSo I'll browse into program files,\nSQL server,\n\n1100\n00:58:20,390 --> 00:58:26,060\ninto my instants, into the data folder,\nand there's my payroll files.\n\n1101\n00:58:26,060 --> 00:58:28,020\nAnd I'm gonna send those\nover to the new location.\n\n1102\n00:58:28,020 --> 00:58:31,480\nNow, the file permissions come\ninto play right here, right?\n\n1103\n00:58:31,480 --> 00:58:34,400\nWhen you copy these files over,\n\n1104\n00:58:34,400 --> 00:58:37,490\ntheir permissions are changing\nto match the destination.\n\n1105\n00:58:37,490 --> 00:58:39,770\nMy security details, right now,\n\n1106\n00:58:39,770 --> 00:58:44,720\nyou can see where MySQL server\nhas permission for these files.\n\n1107\n00:58:44,720 --> 00:58:46,700\nIt's got permission to access it.\n\n1108\n00:58:46,700 --> 00:58:49,770\nWhen I move them between drives,\n\n1109\n00:58:49,770 --> 00:58:52,600\nwe'll inherit the permissions\nof the destination, and\n\n1110\n00:58:52,600 --> 00:58:57,190\nthat's what I was bumping into is the\ndestination permissions weren't the same.\n\n1111\n00:58:57,190 --> 00:59:00,440\nSo, if I take the payroll log file and\nsend it over there,\n\n1112\n00:59:00,440 --> 00:59:04,050\nfor example, and\nI look at its properties in security,\n\n1113\n00:59:04,050 --> 00:59:08,190\nnotice how MS SQL server\nis no longer in the list.\n\n1114\n00:59:08,190 --> 00:59:10,460\nSo, what I'd really need\nto do is add that in.\n\n1115\n00:59:11,880 --> 00:59:14,110\nAnd I'd probably do it on the folder.\n\n1116\n00:59:16,640 --> 00:59:19,690\nWell, I've got everyone right now,\nbut you'd add in a MS SQL server.\n\n1117\n00:59:19,690 --> 00:59:23,270\nIf we add it to the folder then we\nwon't have to do it every time.\n\n1118\n00:59:23,270 --> 00:59:25,960\nBut that'll ensure that we\nget that permission set.\n\n1119\n00:59:27,222 --> 00:59:31,070\nAll right, so there's my transaction log,\nand let me do the database file real\n\n1120\n00:59:31,070 --> 00:59:35,822\nquick, and we'll have that one too.\n\n1121\n00:59:35,822 --> 00:59:39,880\nAll right, now once they're there,\nI can just go in and reattach them, so\n\n1122\n00:59:39,880 --> 00:59:42,860\nthere they go and I'm just going to\ndelete those files out of there.\n\n1123\n00:59:43,920 --> 00:59:45,360\nI'm gonna try and\ndelete those files out of there.\n\n1124\n00:59:47,170 --> 00:59:48,190\nThere it goes.\n\n1125\n00:59:48,190 --> 00:59:49,700\nAnd now we'll go for the reattach.\n\n1126\n00:59:49,700 --> 00:59:51,890\nSo now we'll just go up here and\nreattach the database.\n\n1127\n00:59:51,890 --> 00:59:53,610\nI'm just right clicking on\nthe database folder and\n\n1128\n00:59:53,610 --> 00:59:55,750\nchoosing attach, just like before.\n\n1129\n00:59:55,750 --> 00:59:57,640\nI'll add in that main database file.\n\n1130\n00:59:58,920 --> 01:00:00,865\nAnd now I'll browse to\npick the transaction log,\n\n1131\n01:00:00,865 --> 01:00:02,170\nand this time it should be happy.\n\n1132\n01:00:05,768 --> 01:00:07,865\nThere we go, and we'll import that.\n\n1133\n01:00:07,865 --> 01:00:12,145\nNow when it comes in, there's my\npayroll database, nice and happy.\n\n1134\n01:00:12,145 --> 01:00:15,292\nNow it didn't bring it in as read only\nthis time, probably cuz it's empty and\n\n1135\n01:00:15,292 --> 01:00:16,782\nit just saw that I created it.\n\n1136\n01:00:16,782 --> 01:00:19,302\nBut if it comes up as read only and\nyou tested it,\n\n1137\n01:00:19,302 --> 01:00:22,912\nyou know everything is working, then you\njust need to flag it as read write again.\n\n1138\n01:00:22,912 --> 01:00:25,482\nIt's just an option set on the database.\n\n1139\n01:00:25,482 --> 01:00:29,180\nIf you right click on it and\ngo to properties, and\n\n1140\n01:00:29,180 --> 01:00:32,780\nyou go to options on the left side,\nyou're gonna see a ton of options, and\n\n1141\n01:00:32,780 --> 01:00:35,160\nI'm going to talk a lot\nabout these in other shows.\n\n1142\n01:00:35,160 --> 01:00:37,650\nBut the one I'm concerned about\nis down towards the bottom.\n\n1143\n01:00:37,650 --> 01:00:40,576\nYou'll find right here,\ndatabase read only.\n\n1144\n01:00:40,576 --> 01:00:41,970\nMine's set to false.\n\n1145\n01:00:41,970 --> 01:00:45,160\nIf I want to make it read only,\njust while I'm testing, I'll force it.\n\n1146\n01:00:45,160 --> 01:00:46,730\nI can say OK.\n\n1147\n01:00:46,730 --> 01:00:50,160\nAnd now, it's in that read only mode,\nso it's real easy to turn that on and\n\n1148\n01:00:50,160 --> 01:00:55,660\noff based on whether the database has\nmet your whatever testing requirements.\n\n1149\n01:00:55,660 --> 01:00:57,779\nAll right, so\nI'll just flip that back to false.\n\n1150\n01:00:59,480 --> 01:01:03,690\nAnd now it's back the way we want it.\n\n1151\n01:01:03,690 --> 01:01:04,630\nSuper easy there.\n\n1152\n01:01:04,630 --> 01:01:08,580\nWe've got a database, we've moved it, now\nit's in the new locations, and off we go.\n\n1153\n01:01:08,580 --> 01:01:11,650\nSo optimizing our storage is\nsomething you can do after the fact.\n\n1154\n01:01:11,650 --> 01:01:16,180\nI've done this countless times for\nproduction databases, where, sure,\n\n1155\n01:01:16,180 --> 01:01:18,730\nthey were great when they\nfirst created the server.\n\n1156\n01:01:18,730 --> 01:01:22,650\nIn testing the original rollout,\neverything was running great.\n\n1157\n01:01:22,650 --> 01:01:25,180\nBut then, over time the company grew.\n\n1158\n01:01:25,180 --> 01:01:26,380\nThey got more employees.\n\n1159\n01:01:26,380 --> 01:01:27,080\nThey're data grew.\n\n1160\n01:01:27,080 --> 01:01:28,190\nThey got more and more data.\n\n1161\n01:01:28,190 --> 01:01:31,570\nAnd as that system changed,\nperformance started to degrade.\n\n1162\n01:01:31,570 --> 01:01:36,120\nWe can find that just by realigning disks,\nsometimes you don't even have to buy more\n\n1163\n01:01:36,120 --> 01:01:38,610\ndisks, just kind of changing\nthe way that they're configured,\n\n1164\n01:01:38,610 --> 01:01:42,570\nYou can improve performance quite a bit,\nand it can be drastic.\n\n1165\n01:01:42,570 --> 01:01:46,520\nI've had scenarios where we had one\ndatabase where there was a series of\n\n1166\n01:01:46,520 --> 01:01:49,430\nweather speculations that were run\nagainst this weather database.\n\n1167\n01:01:49,430 --> 01:01:51,990\nAnd they would normally take about 3 and\na half days to run.\n\n1168\n01:01:51,990 --> 01:01:54,600\nIt took a long time to run these analyses.\n\n1169\n01:01:54,600 --> 01:01:58,880\nWell, we reconfigured the disks and\nmoved it into a RAID 10 array.\n\n1170\n01:01:58,880 --> 01:02:02,030\nAnd by getting that performance\nboost out of the RAID 0 stripes,\n\n1171\n01:02:02,030 --> 01:02:04,290\nwe were able to get it\ndown to about 1 day.\n\n1172\n01:02:04,290 --> 01:02:05,700\nWe slashed that time,\n\n1173\n01:02:05,700 --> 01:02:09,520\nthat execution time, by a significant\namount, by improving disk I/O.\n\n1174\n01:02:09,520 --> 01:02:11,300\nIt can make a big difference,\n\n1175\n01:02:11,300 --> 01:02:15,460\nso definitely keep that in mind\nas you design your databases.\n\n1176\n01:02:15,460 --> 01:02:18,930\nNow the database itself had a lot of\noptions that i didn't talk about,\n\n1177\n01:02:18,930 --> 01:02:20,830\ni just kind of went with the defaults.\n\n1178\n01:02:20,830 --> 01:02:22,950\nLets take a look at some of those options.\n\n1179\n01:02:22,950 --> 01:02:26,620\nI'll do it from the new database screen,\nso lets say im creating a new database.\n\n1180\n01:02:26,620 --> 01:02:28,230\nWhat were some of the options\nthat i over looked?\n\n1181\n01:02:28,230 --> 01:02:33,080\nWell, we had a database name, so\nmaybe i create a products database.\n\n1182\n01:02:33,080 --> 01:02:33,780\nAll right.\n\n1183\n01:02:33,780 --> 01:02:37,490\nAnd you've got the name of your files,\nwhich you can rename however you want.\n\n1184\n01:02:37,490 --> 01:02:38,710\nIt doesn't really matter.\n\n1185\n01:02:38,710 --> 01:02:40,740\nAnd the type of data that's\nbeing stored in them, right?\n\n1186\n01:02:40,740 --> 01:02:43,960\nRows, data, and\nlog are the defaults, all right?\n\n1187\n01:02:43,960 --> 01:02:47,220\nAfter that,\nwe have some other information to specify.\n\n1188\n01:02:47,220 --> 01:02:49,950\nThe first part is a filegroup, all right?\n\n1189\n01:02:49,950 --> 01:02:52,690\nFilegroups, we're gonna talk about\na little bit later when we talk about\n\n1190\n01:02:52,690 --> 01:02:54,240\npartitioning data.\n\n1191\n01:02:54,240 --> 01:02:59,660\nBy default your entire database\nis stored in one file, the MDF.\n\n1192\n01:02:59,660 --> 01:03:01,600\nAll of your data is right there.\n\n1193\n01:03:01,600 --> 01:03:03,520\nYour transaction log,\nthat's transient data,\n\n1194\n01:03:03,520 --> 01:03:06,400\ndata that's coming in that will\nget written to the main database.\n\n1195\n01:03:06,400 --> 01:03:10,580\nSo, the main database, that's where\nall your data really is, right?\n\n1196\n01:03:10,580 --> 01:03:14,040\nWell, what if you wanna break\nthat up across hard drives?\n\n1197\n01:03:14,040 --> 01:03:17,660\nWhat if you wanna split your database\nup into multiple hard drives?\n\n1198\n01:03:17,660 --> 01:03:22,825\nYou can do that by creating multiple\nfiles here, and multiple filegroups.\n\n1199\n01:03:22,825 --> 01:03:24,580\nFilegroups really come\ninto play with backups.\n\n1200\n01:03:24,580 --> 01:03:27,250\nWhen you back up a filegroup,\nyou get each of the files inside of it, so\n\n1201\n01:03:27,250 --> 01:03:28,710\nwe'll revisit that later.\n\n1202\n01:03:29,900 --> 01:03:33,430\nAfter that, we've got our initial size and\nour maximum size.\n\n1203\n01:03:33,430 --> 01:03:34,230\nWhat is that?\n\n1204\n01:03:34,230 --> 01:03:38,125\nWell, databases don't have\na fixed size by default.\n\n1205\n01:03:38,125 --> 01:03:40,957\nBy default they can grow\nas big as they need,\n\n1206\n01:03:40,957 --> 01:03:43,417\nbased on the data that you put in them.\n\n1207\n01:03:43,417 --> 01:03:46,705\nBy default this database is only\nfour megabytes in size, and\n\n1208\n01:03:46,705 --> 01:03:49,417\nthe transaction log is\nonly one megabyte in size.\n\n1209\n01:03:49,417 --> 01:03:51,379\nSo if I start writing data to it,\n\n1210\n01:03:51,379 --> 01:03:56,230\nthe first four megs are gonna fit\nright in the file as it's designed.\n\n1211\n01:03:56,230 --> 01:03:58,460\nBut what happens when I fill that up?\n\n1212\n01:03:58,460 --> 01:03:59,830\nNow it's gonna try and grow.\n\n1213\n01:03:59,830 --> 01:04:00,420\nIt's gonna try and\n\n1214\n01:04:00,420 --> 01:04:03,300\ngrow larger than the four megs\nthat we've assigned it, all right?\n\n1215\n01:04:03,300 --> 01:04:07,690\nAnd the way it's gonna do it,\nis it's gonna grow by one megabyte chunks.\n\n1216\n01:04:07,690 --> 01:04:10,630\nSo when you fill up four megs,\nit'll then grow to five megs.\n\n1217\n01:04:10,630 --> 01:04:13,630\nAnd when you fill up five, it'll then\ngrow to six, and then grow to seven, and\n\n1218\n01:04:13,630 --> 01:04:14,720\nthen grow to eight.\n\n1219\n01:04:14,720 --> 01:04:17,660\nWell, what if I'm about to\nput ten gigs of data in here?\n\n1220\n01:04:17,660 --> 01:04:20,770\nIf I'm gonna put ten gigs of data in,\nit's gonna grow hundreds,\n\n1221\n01:04:20,770 --> 01:04:25,790\nactually I guess thousands of times\nto be able to meet that size.\n\n1222\n01:04:25,790 --> 01:04:29,820\nWell grow operations result\nin performance degradation.\n\n1223\n01:04:29,820 --> 01:04:32,450\nIt slows the database down\nwhile it grows and so\n\n1224\n01:04:32,450 --> 01:04:35,563\nit's not a great idea to have\na rapid growth like that.\n\n1225\n01:04:35,563 --> 01:04:39,606\nInstead we need to adjust the way that\nthe growth happens to match our database.\n\n1226\n01:04:39,606 --> 01:04:44,253\nThe other problem is whenever you have\na grow operation, now I sound like\n\n1227\n01:04:44,253 --> 01:04:49,204\nI'm on an episode of Weeds or something,\nso if you've got a grow operation,\n\n1228\n01:04:49,204 --> 01:04:53,165\nyou're not guaranteed to have\nall of the disk space in order,\n\n1229\n01:04:53,165 --> 01:04:55,800\nall contiguous space on the hard drive.\n\n1230\n01:04:55,800 --> 01:04:58,640\nWhich means, you're probably going\nto end up with fragmentation.\n\n1231\n01:04:58,640 --> 01:05:00,130\nIt's four megs right now.\n\n1232\n01:05:00,130 --> 01:05:03,640\nWell maybe other files had been\nwritten in the space on the hard drive\n\n1233\n01:05:03,640 --> 01:05:04,450\nright after it.\n\n1234\n01:05:04,450 --> 01:05:07,560\nSo when it grows to five megs that\nextra meg has to go somewhere\n\n1235\n01:05:07,560 --> 01:05:09,050\nelse on the hard drive.\n\n1236\n01:05:09,050 --> 01:05:12,220\nNow I've got fragmentation which\nis gonna hurt performance.\n\n1237\n01:05:12,220 --> 01:05:15,460\nSo if I know I'm gonna copy\nten gigs of data in there\n\n1238\n01:05:15,460 --> 01:05:19,790\nI need to change that initial\nsize to be ten gigs in size.\n\n1239\n01:05:19,790 --> 01:05:25,545\nI can punch that in so it'll create\na ten gig file right there from day one.\n\n1240\n01:05:25,545 --> 01:05:28,264\nIt'll find ten gigs of contiguous space,\n\n1241\n01:05:28,264 --> 01:05:31,595\nlay that out and\nensure I don't get fragmentation.\n\n1242\n01:05:33,465 --> 01:05:36,925\nLet's say that I know it's gonna grow\nto ten gigs at some point, but for\n\n1243\n01:05:36,925 --> 01:05:38,915\nright now I'm only gonna be\nsending one gig of data in.\n\n1244\n01:05:38,915 --> 01:05:40,855\nSo maybe I just wanna do one gig in size.\n\n1245\n01:05:42,107 --> 01:05:43,807\nWell, when it comes time to grow,\n\n1246\n01:05:43,807 --> 01:05:46,377\nI probably don't want to\ngrow by one meg chunks.\n\n1247\n01:05:46,377 --> 01:05:50,137\nI can change that behavior to\nmake it grow by bigger chunks.\n\n1248\n01:05:50,137 --> 01:05:51,677\nNow here's the thing.\n\n1249\n01:05:51,677 --> 01:05:57,663\nIf I set it at a one gig database, and I'm\ngonna have it grow by 100 megabyte chunks.\n\n1250\n01:05:57,663 --> 01:05:59,923\nSo every time that fills\nup it'll add 100 megs.\n\n1251\n01:05:59,923 --> 01:06:02,123\nWell as the database gets bigger and\nbigger and bigger,\n\n1252\n01:06:02,123 --> 01:06:04,253\nthat 100 megs is not such\na big number anymore.\n\n1253\n01:06:04,253 --> 01:06:10,791\n100 megs would be 10% of a gig, but if\nmy database grows to a terabyte in size,\n\n1254\n01:06:10,791 --> 01:06:14,611\nthat 100 megs is not even one percent\nof that anymore, it's very, very small.\n\n1255\n01:06:14,611 --> 01:06:19,381\nSo you can chose to grow by a certain\namount of size, or by a percentage.\n\n1256\n01:06:19,381 --> 01:06:23,875\nIf I go into my Options here, I can\npick to grow by percent or megabytes.\n\n1257\n01:06:23,875 --> 01:06:27,450\nAnd it's up to you how\nyou wanna go about it.\n\n1258\n01:06:27,450 --> 01:06:29,440\nPercentage is usually a little bit better,\n\n1259\n01:06:29,440 --> 01:06:32,830\nbecause then the growth will reflect\nthe total size of the database.\n\n1260\n01:06:32,830 --> 01:06:35,915\nSo if I'm at one gig and\nmy growth is set to 10%,\n\n1261\n01:06:35,915 --> 01:06:40,710\nthe next time I'll grow to 1.1 gig,\nor 1,100 megabytes.\n\n1262\n01:06:40,710 --> 01:06:45,560\nBut if I set it to, or if my database goes\nto a terabyte, the next time it grows it's\n\n1263\n01:06:45,560 --> 01:06:50,170\ngoing to grow by 100 gigs or\n1 million 1 hundred thousand megabytes.\n\n1264\n01:06:50,170 --> 01:06:51,780\nSo it's going to grow\nbased on that percentage.\n\n1265\n01:06:53,220 --> 01:06:55,495\nYou can also specify a maximum.\n\n1266\n01:06:55,495 --> 01:06:57,625\nIf you don't specify a maximum,\n\n1267\n01:06:57,625 --> 01:07:02,115\nthe database can grow to fill\nthe entire hard drive, all right.\n\n1268\n01:07:02,115 --> 01:07:03,475\nThat may or not be a problem.\n\n1269\n01:07:03,475 --> 01:07:05,325\nIf you're monitoring your\ndrive space utilization,\n\n1270\n01:07:05,325 --> 01:07:08,365\nyou should see that well in advance and\nbe able to stop it.\n\n1271\n01:07:08,365 --> 01:07:10,755\nSo normally, we don't set a maximum.\n\n1272\n01:07:10,755 --> 01:07:14,215\nBut what if your database\nis still on the C drive?\n\n1273\n01:07:14,215 --> 01:07:16,180\nIf your data base is on the C drive, and\n\n1274\n01:07:16,180 --> 01:07:19,100\nthe C drive is where\nyour page file is also.\n\n1275\n01:07:19,100 --> 01:07:24,090\nIf that database grows and fills\nthe drive and the page file can't grow\n\n1276\n01:07:24,090 --> 01:07:27,840\nwhen Windows goes to do a grow operation\non the page file your system will freeze,\n\n1277\n01:07:27,840 --> 01:07:30,150\nit'll lock up,\nthe whole system will freeze.\n\n1278\n01:07:30,150 --> 01:07:33,510\nSo, you can actually crash your\nsystem by not having a maximum.\n\n1279\n01:07:33,510 --> 01:07:36,560\nIf your database is on your C drive,\nyou'll want to set a maximum.\n\n1280\n01:07:37,660 --> 01:07:39,920\nIf your database is on\na dedicated drive like mine,\n\n1281\n01:07:39,920 --> 01:07:43,740\nyou don't necessarily need it,\nunless you have more than one database and\n\n1282\n01:07:43,740 --> 01:07:46,120\nyou just want to make sure that\none doesn't take up all the space.\n\n1283\n01:07:46,120 --> 01:07:47,830\nYou might set a maximum there.\n\n1284\n01:07:47,830 --> 01:07:53,510\nSo, maybe I'll limit\nmine to ten gigs in size.\n\n1285\n01:07:53,510 --> 01:07:57,720\nAnd I'm going to say that every time it\ngrows, it's going to grow by one gig.\n\n1286\n01:07:59,040 --> 01:08:01,950\nSo my initial size is one gig.\n\n1287\n01:08:01,950 --> 01:08:04,940\nEvery time it grows,\nit'll grow by one gig.\n\n1288\n01:08:04,940 --> 01:08:08,050\nAnd that means it's\ngonna continue to grow.\n\n1289\n01:08:08,050 --> 01:08:10,650\nI've got it set with\na maximum of ten gigs so\n\n1290\n01:08:10,650 --> 01:08:12,900\nI'll never get more than\nnine grow operations, right?\n\n1291\n01:08:12,900 --> 01:08:15,980\nAs each one hits, it'll grow by\na gig until it gets to ten gigs, and\n\n1292\n01:08:15,980 --> 01:08:16,950\nthen it'll stop.\n\n1293\n01:08:16,950 --> 01:08:20,410\nWhen it hits ten gigs, the database\neffectively becomes read only.\n\n1294\n01:08:20,410 --> 01:08:22,430\nI won't be able to write\ndata to it anymore.\n\n1295\n01:08:22,430 --> 01:08:23,230\nIt's full.\n\n1296\n01:08:23,230 --> 01:08:25,810\nI'll still be able to read data,\nbut I don't be able to write to it.\n\n1297\n01:08:27,170 --> 01:08:29,680\nYou can do the same thing\nwith your transaction logs.\n\n1298\n01:08:29,680 --> 01:08:32,256\nRemember every time you make\na change to the database,\n\n1299\n01:08:32,256 --> 01:08:36,680\nit goes to the transaction log first, and\nthen it gets written to the database.\n\n1300\n01:08:36,680 --> 01:08:39,740\nThe only difference here is when\nyou right data to the database,\n\n1301\n01:08:39,740 --> 01:08:41,340\nit stays there forever.\n\n1302\n01:08:41,340 --> 01:08:43,710\nWhen you write data to\nthe transaction logs,\n\n1303\n01:08:43,710 --> 01:08:45,910\nit stays there until your next backup.\n\n1304\n01:08:45,910 --> 01:08:47,370\nWhen you run a backup,\n\n1305\n01:08:47,370 --> 01:08:51,120\nyour backup operation will flush\nthe transaction log and empty it out.\n\n1306\n01:08:51,120 --> 01:08:55,000\nSo your transaction logs are getting empty\nevery time you run a backup versus your\n\n1307\n01:08:55,000 --> 01:08:57,560\nmain database which is\ngonna have it always.\n\n1308\n01:08:57,560 --> 01:09:01,780\nSo your transaction logs are normally\nsmaller based on the amount of changes.\n\n1309\n01:09:01,780 --> 01:09:05,220\nIf you have a read only database,\nyour transaction logs will be empty.\n\n1310\n01:09:05,220 --> 01:09:07,080\nThey might be very small.\n\n1311\n01:09:07,080 --> 01:09:10,250\nBut if you've got a database\nthat's under frequent change,\n\n1312\n01:09:10,250 --> 01:09:13,520\nyou might want to boost up\nthe size of the transaction logs.\n\n1313\n01:09:13,520 --> 01:09:17,650\nSo maybe I want to set my transaction\nlogs to be 200 megs by default and\n\n1314\n01:09:17,650 --> 01:09:20,960\nI'm gonna have it grow in megabytes.\n\n1315\n01:09:20,960 --> 01:09:26,090\nI'll have it grown in 200 meg\nincrements with a maximum of one gig.\n\n1316\n01:09:27,770 --> 01:09:30,260\nSo now I won't get any more\nthan four grow operations.\n\n1317\n01:09:30,260 --> 01:09:31,340\nI'm already at 200.\n\n1318\n01:09:31,340 --> 01:09:35,820\nIt'll then grow to 400, 600, 800 and\nthen a gig, and it'll stop at a gig.\n\n1319\n01:09:37,040 --> 01:09:40,990\nBut that means that if I have more\nthan a gig of changes between backups,\n\n1320\n01:09:40,990 --> 01:09:44,660\nmy database will go read only,\nso I really may not want that.\n\n1321\n01:09:44,660 --> 01:09:47,870\nSo, having transaction logs on their own\nhard drive ensures that they can grow just\n\n1322\n01:09:47,870 --> 01:09:51,300\nuntil that drive is full and\nthat may definitely be something you want.\n\n1323\n01:09:54,050 --> 01:09:57,270\nAll right, so those are some of\nthe options that we can specify right in\n\n1324\n01:09:57,270 --> 01:10:01,250\nthere, these are the initial size,\nand the auto growth values.\n\n1325\n01:10:01,250 --> 01:10:03,670\nYou don't have to have auto growth.\n\n1326\n01:10:03,670 --> 01:10:05,410\nWhen you go in here and\nyou set these options,\n\n1327\n01:10:05,410 --> 01:10:07,580\nthere is a check mark up here\nwhere you can turn it off.\n\n1328\n01:10:07,580 --> 01:10:10,092\nYou can say you know what,\nI'll manually throw the database.\n\n1329\n01:10:10,092 --> 01:10:11,497\nNow why would you do that?\n\n1330\n01:10:11,497 --> 01:10:14,310\nWell auto growth is automatic.\n\n1331\n01:10:14,310 --> 01:10:15,490\nIt happens whenever.\n\n1332\n01:10:15,490 --> 01:10:18,740\nIt'll happen in the middle of the day,\nif that's when the database is full.\n\n1333\n01:10:18,740 --> 01:10:21,900\nWell, during the grow operation,\nperformance is degraded.\n\n1334\n01:10:21,900 --> 01:10:23,530\nI may not want that.\n\n1335\n01:10:23,530 --> 01:10:26,890\nI may want it to happen when the database\nis idle in the middle of the night when\n\n1336\n01:10:26,890 --> 01:10:28,170\npeople aren't in there.\n\n1337\n01:10:28,170 --> 01:10:32,220\nSo, if you want to schedule when it grows,\nyou don't want auto growth, and\n\n1338\n01:10:32,220 --> 01:10:34,660\nso you could come in and turn that off.\n\n1339\n01:10:34,660 --> 01:10:37,910\nAnd so I could say well on my database,\ndon't do auto growth,\n\n1340\n01:10:37,910 --> 01:10:41,195\nwe'll just turn that off and\nthat's it, no auto growth.\n\n1341\n01:10:41,195 --> 01:10:43,205\nNow I need to monitor the database.\n\n1342\n01:10:43,205 --> 01:10:46,305\nI need to monitor for when I'm writing and\nhow big it's getting and\n\n1343\n01:10:46,305 --> 01:10:47,275\nhow much data is there.\n\n1344\n01:10:47,275 --> 01:10:51,765\nAnd when I see it starting to get full,\nI need to schedule a manual grow.\n\n1345\n01:10:51,765 --> 01:10:55,815\nAnd we can stretch it out and\ngrow it to a larger database afterwards.\n\n1346\n01:10:55,815 --> 01:10:57,475\nIt's easy to do after the fact.\n\n1347\n01:10:59,855 --> 01:11:02,160\nSo I'll go ahead and just set that.\n\n1348\n01:11:02,160 --> 01:11:03,410\nAnd now it's gonna create that database.\n\n1349\n01:11:03,410 --> 01:11:06,820\nNow notice it's taking longer to\ncreate the database this time.\n\n1350\n01:11:06,820 --> 01:11:09,180\nWhen I did it before it\nwas almost instantaneous.\n\n1351\n01:11:09,180 --> 01:11:13,730\nWell the reason is I set an initial size\nof one gig so it's actually grabbing\n\n1352\n01:11:13,730 --> 01:11:16,940\none gig of hard drive space and\nlaying it out on the drive.\n\n1353\n01:11:16,940 --> 01:11:20,410\nThat's why I picked one gig instead of\nten gigs cuz ten gigs would have taken\n\n1354\n01:11:20,410 --> 01:11:22,480\nten times that amount of time to do.\n\n1355\n01:11:22,480 --> 01:11:23,910\nSo now it's laid it out, and\n\n1356\n01:11:23,910 --> 01:11:29,270\nif I browsed on the hard drive to\nmy database folder, I can find my.\n\n1357\n01:11:29,270 --> 01:11:32,458\nOh shoot, I forgot to my move it so\nit's in the old location.\n\n1358\n01:11:32,458 --> 01:11:36,492\nSo if I browse through the hard drive and\nif I find that file,\n\n1359\n01:11:36,492 --> 01:11:40,543\njust browse into my SQL install,\nand then the data folder.\n\n1360\n01:11:40,543 --> 01:11:45,560\nAnd there's my products database and I can\nsee it's already one gigabyte in size.\n\n1361\n01:11:45,560 --> 01:11:47,920\nSo it's laid that space out and\nit just took a moment.\n\n1362\n01:11:49,133 --> 01:11:51,595\nI can also see my transaction\nlogs are 200 MB in size.\n\n1363\n01:11:51,595 --> 01:11:53,602\nAll right,\n\n1364\n01:11:53,602 --> 01:11:59,550\nnow there are a lot of other options\non our databases when we create them.\n\n1365\n01:11:59,550 --> 01:12:02,310\nIf I pull up the properties,\nI'll just right-click on that database and\n\n1366\n01:12:02,310 --> 01:12:03,030\ngo to Properties.\n\n1367\n01:12:04,320 --> 01:12:08,310\nYou'll see my general screen, which\njust gives me a summary of the database.\n\n1368\n01:12:08,310 --> 01:12:10,790\nSo I can see how big it is right now,\n\n1369\n01:12:10,790 --> 01:12:15,120\nhow much space is available if\nI start putting data in there.\n\n1370\n01:12:15,120 --> 01:12:17,100\nHow many users are currently\nattached to it.\n\n1371\n01:12:17,100 --> 01:12:20,740\nYou can start to see information\nabout the system just in general.\n\n1372\n01:12:20,740 --> 01:12:25,150\nAnd if we go to Files, that's where we see\nthe files that are part of the database,\n\n1373\n01:12:25,150 --> 01:12:27,570\nand we have the opportunity to move them.\n\n1374\n01:12:27,570 --> 01:12:29,830\nFile groups we'll tackle\na little bit later.\n\n1375\n01:12:29,830 --> 01:12:31,850\nAnd then we've got options.\n\n1376\n01:12:31,850 --> 01:12:35,840\nThere are a lot of options we can\ndo on an individual database.\n\n1377\n01:12:35,840 --> 01:12:37,200\nSome of these, we've already seen.\n\n1378\n01:12:37,200 --> 01:12:38,630\nSome of these, we haven't.\n\n1379\n01:12:38,630 --> 01:12:41,650\nOne of the very first\noptions is the collation.\n\n1380\n01:12:41,650 --> 01:12:45,620\nRemember, I talked about collation back\nwhen we did the install of SQL Server, and\n\n1381\n01:12:45,620 --> 01:12:48,000\nI mentioned how important\nit was to have it set.\n\n1382\n01:12:48,000 --> 01:12:52,250\nWell, you can override\nit a per database level.\n\n1383\n01:12:52,250 --> 01:12:55,900\nSo on the database, it's gonna\ndefault to our server's collation, but\n\n1384\n01:12:55,900 --> 01:13:00,870\nyou can change it and override it\nif you have need to, all right?\n\n1385\n01:13:00,870 --> 01:13:02,630\nThe next one is the recovery model.\n\n1386\n01:13:02,630 --> 01:13:04,920\nThe recovery model deals with our backups.\n\n1387\n01:13:04,920 --> 01:13:07,800\nWhen we do backups and restores,\nthere's a certain amount of\n\n1388\n01:13:07,800 --> 01:13:10,670\ndata that we might be able to keep or\nlose based on recovery.\n\n1389\n01:13:10,670 --> 01:13:13,020\nI don't wanna dive into this too deep.\n\n1390\n01:13:13,020 --> 01:13:15,390\nBut just be aware the setting is here.\n\n1391\n01:13:15,390 --> 01:13:17,380\nWe've got a whole episode\nwe're gonna do on backups and\n\n1392\n01:13:17,380 --> 01:13:18,980\nI'll tackle this in depth then.\n\n1393\n01:13:18,980 --> 01:13:23,690\nBut basically, a full recovery model\nwill ensure that when you do a backup,\n\n1394\n01:13:23,690 --> 01:13:26,950\nyou can recover not just to your\nbackup tape, whatever's there.\n\n1395\n01:13:26,950 --> 01:13:30,150\nBut you can also try and recover\nthe contents of your transaction logs,\n\n1396\n01:13:30,150 --> 01:13:34,550\nwhich might get you all the way\nto the exact point of failure.\n\n1397\n01:13:34,550 --> 01:13:36,530\nBut if you've got acceptable data loss and\n\n1398\n01:13:36,530 --> 01:13:39,120\nyou're not worried about it,\nyou can go simple.\n\n1399\n01:13:39,120 --> 01:13:42,790\nThe simple backup model lets\nyou do your backup, and\n\n1400\n01:13:42,790 --> 01:13:45,110\nwhen you have a failure you\ncan recover to the backup and\n\n1401\n01:13:45,110 --> 01:13:46,940\nyou just don't even worry\nabout the transaction logs.\n\n1402\n01:13:46,940 --> 01:13:49,600\nYou just get the data up\nto the point of backup.\n\n1403\n01:13:49,600 --> 01:13:52,790\nYou lose data that way, but\nit's a lot more simple to manage, and so\n\n1404\n01:13:52,790 --> 01:13:55,230\nthat's why it's called\nthe simple recovery model.\n\n1405\n01:13:55,230 --> 01:13:56,840\nBulk logged is another one.\n\n1406\n01:13:56,840 --> 01:14:00,950\nThat's a useful model if you're gonna be\nimporting tons of data into the system and\n\n1407\n01:14:00,950 --> 01:14:03,060\nyou don't wanna overwhelm\nyour transaction log, so\n\n1408\n01:14:03,060 --> 01:14:06,720\nit kind of allows you to bypass\nthe transaction logs for certain things.\n\n1409\n01:14:06,720 --> 01:14:09,550\nBut normally you're going to\nsee people in full or simple.\n\n1410\n01:14:09,550 --> 01:14:10,230\nFull is the default.\n\n1411\n01:14:11,860 --> 01:14:13,670\nWe've also got a compatibility level.\n\n1412\n01:14:13,670 --> 01:14:16,750\nThe database I made is\na SQL Server 2012 database.\n\n1413\n01:14:16,750 --> 01:14:21,020\nIf I detach it, and try and\nattach it to an earlier version of SQL,\n\n1414\n01:14:21,020 --> 01:14:22,900\nthere might be some\nthings that don't work.\n\n1415\n01:14:22,900 --> 01:14:27,820\nWell, you can change it and move it to a\nlower version of compatibility, and now we\n\n1416\n01:14:27,820 --> 01:14:31,230\ncan detach it and attach it to one of the\nother systems and it'll work just fine.\n\n1417\n01:14:31,230 --> 01:14:35,420\nSo you've got support for SQL Server\n2005 and 2008, in addition to ours.\n\n1418\n01:14:37,790 --> 01:14:39,580\nAll right, then we have Containment type.\n\n1419\n01:14:39,580 --> 01:14:41,790\nNow containment is an interesting thing.\n\n1420\n01:14:41,790 --> 01:14:45,070\nBy default, your database doesn't have\nany containment, so that's the default.\n\n1421\n01:14:45,070 --> 01:14:45,577\nIt's just turned off.\nBut\n\n1422\n01:14:45,577 --> 01:14:48,093\nwe have another option which\nis partial containment, and\n\n1423\n01:14:48,093 --> 01:14:50,569\nyou'll see some options light\nup down here, all right?\n\n1424\n01:14:50,569 --> 01:14:58,760\nThe main containment option is usually\nused for dates, for Y2K issues.\n\n1425\n01:14:58,760 --> 01:15:04,540\nContainment means isolating some settings\nthat apply just to this database.\n\n1426\n01:15:04,540 --> 01:15:06,270\nMost of our settings,\nwe apply to the server and\n\n1427\n01:15:06,270 --> 01:15:07,960\nthey trickle down to the databases.\n\n1428\n01:15:07,960 --> 01:15:11,510\nBut we can override a ton of things\nhere on an individual database.\n\n1429\n01:15:11,510 --> 01:15:15,960\nAnd the main containment setting we worry\nabout is this two-digit year cut- off.\n\n1430\n01:15:15,960 --> 01:15:20,530\nIf you've got a column where the year\nis represented as two digits, right,\n\n1431\n01:15:20,530 --> 01:15:26,850\nif I have a column that says 95,\nis that 1995 or is it 2095?\n\n1432\n01:15:26,850 --> 01:15:28,800\nI don't know, right?\n\n1433\n01:15:28,800 --> 01:15:31,200\nThat was really the whole\nproblem with Y2K.\n\n1434\n01:15:31,200 --> 01:15:34,460\nWhen we had that flipover,\nanybody who had a two-digit year,\n\n1435\n01:15:34,460 --> 01:15:36,560\nit didn't know which\nyear it was referring to.\n\n1436\n01:15:36,560 --> 01:15:40,097\nIt didn't know if it was in the 20th\ncentury or the 21st century.\n\n1437\n01:15:40,097 --> 01:15:42,280\nSo, this one is a cut-off.\n\n1438\n01:15:42,280 --> 01:15:47,566\nIt basically says, all right,\nif you give us a year of 48 or\n\n1439\n01:15:47,566 --> 01:15:55,565\n47 or 46 or whatever, then it's gonna\ntreat that as 2047, 2048, 2049.\n\n1440\n01:15:55,565 --> 01:15:58,742\nBut 2049 is set so\nif you give me a date of 50,\n\n1441\n01:15:58,742 --> 01:16:01,779\nit will assume you are talking about 1950.\n\n1442\n01:16:01,779 --> 01:16:06,280\nOr 55 it will assume 1955 versus 2055.\n\n1443\n01:16:06,280 --> 01:16:13,010\nThis is the two-digit year cutoff that\ntries to fix your Y2K mistakes, right?\n\n1444\n01:16:13,010 --> 01:16:15,630\nIt's definitely not a long-term solution.\n\n1445\n01:16:15,630 --> 01:16:19,950\nIt works, but ideally you'll go and\nsanitize your data and fix it so\n\n1446\n01:16:19,950 --> 01:16:21,920\nyou've got four-digit years.\n\n1447\n01:16:21,920 --> 01:16:25,090\nBut if you're supporting some application\nthat doesn't handle that, that just has\n\n1448\n01:16:25,090 --> 01:16:28,220\na data type that contains two characters,\nyou're not gonna be able to do it.\n\n1449\n01:16:28,220 --> 01:16:31,380\nSo you rely on technologies\nlike this to sort through it.\n\n1450\n01:16:31,380 --> 01:16:35,610\nAlright, you'll see other things like\nwhether nested triggers are enabled.\n\n1451\n01:16:35,610 --> 01:16:37,820\nWe haven't learned about triggers yet.\n\n1452\n01:16:37,820 --> 01:16:39,980\nTransform noise words,\n\n1453\n01:16:39,980 --> 01:16:45,410\nthese are areas where it'll take things\nlike a null value, an empty value.\n\n1454\n01:16:45,410 --> 01:16:49,200\nThere 's several different ways that\napplications can represent an empty value.\n\n1455\n01:16:49,200 --> 01:16:52,340\nAnd so you can translate those so\nthey're all represented the same way.\n\n1456\n01:16:52,340 --> 01:16:56,050\nWe can turn these on and off inside\nof the database itself, all right?\n\n1457\n01:16:56,050 --> 01:16:58,870\nNow, the default is set to none, which\nmeans it's going to get these settings\n\n1458\n01:16:58,870 --> 01:17:00,990\nfrom the server and\nthat's what we normally want.\n\n1459\n01:17:00,990 --> 01:17:02,432\nIt gives us a consistent deployment.\n\n1460\n01:17:02,432 --> 01:17:04,610\nAll right.\n\n1461\n01:17:04,610 --> 01:17:08,600\nSome of the other settings, during\nthe install I mentioned file streams, and\n\n1462\n01:17:08,600 --> 01:17:11,900\nhow instead of storing the files in\nthe database itself we can store them\n\n1463\n01:17:11,900 --> 01:17:13,970\noutside in like a file share somewhere.\n\n1464\n01:17:13,970 --> 01:17:18,470\nWell, if you didn't turn it on during the\ninstall, you can turn it on right here.\n\n1465\n01:17:18,470 --> 01:17:21,380\nEven if you turned it on during\nthe install, it's not actually on for\n\n1466\n01:17:21,380 --> 01:17:23,800\nyour database until you come in and\nturn it on here.\n\n1467\n01:17:23,800 --> 01:17:28,150\nYou specify a directory, which is where\nyou're going to be storing those files,\n\n1468\n01:17:28,150 --> 01:17:31,560\nand you turn on whether you allow\ndirect access to the files or not.\n\n1469\n01:17:32,640 --> 01:17:33,620\nAll right.\n\n1470\n01:17:33,620 --> 01:17:36,260\nSome of the other ones here are really\njust consistency settings with\n\n1471\n01:17:36,260 --> 01:17:37,350\nyour application.\n\n1472\n01:17:37,350 --> 01:17:39,040\nHow null values, those empty values,\n\n1473\n01:17:39,040 --> 01:17:43,485\nhow they're represented,\nhow arithmetic is processed.\n\n1474\n01:17:43,485 --> 01:17:47,490\nYou've got several different things in\nhere, most of which we normally leave\n\n1475\n01:17:47,490 --> 01:17:51,035\nat the defaults, but there's\ncertain scenarios to override them.\n\n1476\n01:17:51,035 --> 01:17:55,965\nIn the other SQL exams, the other ones\nthat are part of the certification.\n\n1477\n01:17:55,965 --> 01:17:58,535\nYou'll start to learn about some of these\noverrides, and when you'd use them.\n\n1478\n01:17:58,535 --> 01:18:00,095\nIt's more developer-centric.\n\n1479\n01:18:00,095 --> 01:18:02,225\nAs an admin,\nwe don't normally have to mess with those.\n\n1480\n01:18:03,695 --> 01:18:04,515\nAll right.\n\n1481\n01:18:04,515 --> 01:18:07,015\nThe other value is things like\nsetting the database to read only.\n\n1482\n01:18:07,015 --> 01:18:08,545\nThat's another important one.\n\n1483\n01:18:08,545 --> 01:18:10,275\nAnd then this guy, right?\n\n1484\n01:18:10,275 --> 01:18:11,450\nEncryption.\n\n1485\n01:18:11,450 --> 01:18:14,390\nWe can actually choose to\nencrypt our database if\n\n1486\n01:18:14,390 --> 01:18:17,340\nwe're running SQL Server\n2012 Enterprise Edition.\n\n1487\n01:18:17,340 --> 01:18:22,580\nWe got the ability to do what's called\nTransparent Database Encryption.\n\n1488\n01:18:22,580 --> 01:18:26,190\nIt's called transparent because the\ndatabase will be encrypted and stored on\n\n1489\n01:18:26,190 --> 01:18:29,440\nthe hard drive, but your programs that\nare accessing it don't know that.\n\n1490\n01:18:29,440 --> 01:18:30,930\nThey don't even see the encryption.\n\n1491\n01:18:30,930 --> 01:18:32,890\nThey can send unencrypted data.\n\n1492\n01:18:32,890 --> 01:18:35,300\nAnd we'll encrypt it and\nstore it in the database that way.\n\n1493\n01:18:35,300 --> 01:18:37,190\nSo we can turn on encryption\nwithout having to\n\n1494\n01:18:37,190 --> 01:18:38,780\nrewrite our software to handle it.\n\n1495\n01:18:38,780 --> 01:18:43,000\nNow, that provides us\nstorage-level protection.\n\n1496\n01:18:43,000 --> 01:18:45,980\nIt doesn't provide us\nnetwork-level protection.\n\n1497\n01:18:45,980 --> 01:18:49,140\nSo if people are transmitting data\nin clear text across your network,\n\n1498\n01:18:49,140 --> 01:18:50,710\nit's still weak there.\n\n1499\n01:18:50,710 --> 01:18:51,740\nBut on the hard drive, so\n\n1500\n01:18:51,740 --> 01:18:56,230\nif somebody were to steal the hard drives,\nthe data's encrypted inside of the drive.\n\n1501\n01:18:56,230 --> 01:18:58,110\nSo we can turn that option on right here.\n\n1502\n01:18:58,110 --> 01:19:00,170\nNow, If we turn it on here,\n\n1503\n01:19:00,170 --> 01:19:02,800\nif I flip that to true,\nit's going to encrypt this database.\n\n1504\n01:19:03,918 --> 01:19:07,070\nBut it's gonna use some default\nsettings that I might want to override.\n\n1505\n01:19:07,070 --> 01:19:08,629\nSo I want to show you guys how to do that.\n\n1506\n01:19:09,810 --> 01:19:14,380\nVia the command line also, because it will\nlet us override some of those values and\n\n1507\n01:19:14,380 --> 01:19:15,930\ndo some really neat things there.\n\n1508\n01:19:15,930 --> 01:19:20,280\nSo I'm gonna leave this off, and then\nwe'll script it here in just a moment.\n\n1509\n01:19:20,280 --> 01:19:22,720\nIf you ever wanna see what those\ndefault values are though,\n\n1510\n01:19:22,720 --> 01:19:27,190\nyou can flip that to true and then hit\nthe script button and it'll show that\n\n1511\n01:19:27,190 --> 01:19:30,480\ncommand for you back here, and\nyou can see what it's actually running.\n\n1512\n01:19:30,480 --> 01:19:33,690\nI guess in this one it doesn't actually\nshow me the individual values.\n\n1513\n01:19:33,690 --> 01:19:35,333\nIt's just saying set encryption on.\n\n1514\n01:19:35,333 --> 01:19:37,500\nBut there are a lot of other\nvalues we can specify.\n\n1515\n01:19:37,500 --> 01:19:40,792\nI'll show them all after the break.\n\n1516\n01:19:40,792 --> 01:19:43,292\nAll right,\nI'm not actually gonna turn that on.\n\n1517\n01:19:43,292 --> 01:19:47,181\nAll right, those are the main settings\nthat we mess with when we create a new\n\n1518\n01:19:47,181 --> 01:19:50,290\ndatabase, most of which can\nall be changed after the fact.\n\n1519\n01:19:50,290 --> 01:19:52,310\nCollation's really the only\none you have to careful with.\n\n1520\n01:19:52,310 --> 01:19:55,330\nIf you change it after the fact\nyou can break your software.\n\n1521\n01:19:55,330 --> 01:19:57,490\nWe'll see some of these other\nsettings in later episodes.\n\n1522\n01:19:57,490 --> 01:20:00,940\nWe've got a security episode where\nwe'll take a look at permissions.\n\n1523\n01:20:00,940 --> 01:20:04,220\nWe've got the backup episodes where\nwe'll talk about the file groups and\n\n1524\n01:20:04,220 --> 01:20:06,220\nhow we back all that up.\n\n1525\n01:20:06,220 --> 01:20:09,481\nMirroring, we'll talk about when we get\ninto the high availability section and\n\n1526\n01:20:09,481 --> 01:20:12,026\ntransaction log-shipping too.\n\n1527\n01:20:12,026 --> 01:20:15,390\nSo we'll see those as the show\nprogresses but for right now.\n\n1528\n01:20:15,390 --> 01:20:17,130\nThose are the basic settings for\ncreating a database.\n\n1529\n01:20:18,635 --> 01:20:21,680\nAll right well, let's stop here,\nwhen we get back I wanna\n\n1530\n01:20:21,680 --> 01:20:25,040\nshow you guys encrypting the database and\nwe still haven't put any data in there.\n\n1531\n01:20:25,040 --> 01:20:30,140\nWe might have to move that off to part\ntwo and do another episode for that.\n\n1532\n01:20:30,140 --> 01:20:33,070\nBut as far as creating the database,\nwe've got it in place.\n\n1533\n01:20:33,070 --> 01:20:36,110\nAfter the break, we'll do encryption and\nthen we'll probably wrap up from there.\n\n1534\n01:20:36,110 --> 01:20:38,460\nAnd we'll do part 2 for\nactually getting data in there.\n\n1535\n01:20:38,460 --> 01:20:42,910\nSo stay tuned, we'll be back after this.\n\n1536\n01:20:44,705 --> 01:20:52,188\n[SOUND] So we left off talking about\nthe transparent database encryption.\n\n1537\n01:20:52,188 --> 01:20:54,821\nAnd I mentioned how,\nwhile we can turn it on via the GUI,\n\n1538\n01:20:54,821 --> 01:20:57,950\nthere's some options that\naren't exposed to me there.\n\n1539\n01:20:57,950 --> 01:21:02,350\nAnd so I really need to drop into\nthe command line interface for\n\n1540\n01:21:02,350 --> 01:21:05,380\nSQL server to be able to turn\non all the options I want.\n\n1541\n01:21:05,380 --> 01:21:07,800\nWe haven't spent much time on\nthe command line interface.\n\n1542\n01:21:07,800 --> 01:21:08,640\nSo let's.\n\n1543\n01:21:08,640 --> 01:21:10,320\nLet's take a minute and talk about that.\n\n1544\n01:21:11,420 --> 01:21:17,380\nThe SQL, or Standard Query Language,\nis a standard language.\n\n1545\n01:21:17,380 --> 01:21:20,900\nIt's a common series of commands\nthat you can run on pretty much\n\n1546\n01:21:20,900 --> 01:21:24,000\nany SQL-based server that's out there.\n\n1547\n01:21:24,000 --> 01:21:27,780\nAnd it makes it nice because you learn\none, and it works on the others.\n\n1548\n01:21:27,780 --> 01:21:32,640\nAnd as far as our standard statements for\nworking with databases and working with\n\n1549\n01:21:32,640 --> 01:21:37,040\ntables, it's the same between Oracle and\nMicrosoft and MySQL and all those guys.\n\n1550\n01:21:37,040 --> 01:21:37,930\nRight?\n\n1551\n01:21:37,930 --> 01:21:40,710\nBut there are special features,\nbells and whistles,\n\n1552\n01:21:40,710 --> 01:21:41,900\nlike the ones we're about to do here.\n\n1553\n01:21:41,900 --> 01:21:44,290\nTransferring database encryption.\n\n1554\n01:21:44,290 --> 01:21:46,600\nThat is a Microsoft proprietary thing.\n\n1555\n01:21:46,600 --> 01:21:51,010\nBut we still use very similar commands for\nthe normal system, when we work with it.\n\n1556\n01:21:51,010 --> 01:21:58,298\nNow, Microsoft because they've extended\non to SQL, they call theirs Transact-SQL.\n\n1557\n01:21:58,298 --> 01:22:02,320\nAll right, Transact-SQL is their\nlittle trademark patent pending,\n\n1558\n01:22:02,320 --> 01:22:04,270\nname, recognition whatever.\n\n1559\n01:22:04,270 --> 01:22:08,030\nFor the standard query language\nwith their extensions on it.\n\n1560\n01:22:08,030 --> 01:22:11,160\nSo what we're about to do, is we're\nabout to use a little Transact-SQL.\n\n1561\n01:22:11,160 --> 01:22:12,750\nAll right now,\n\n1562\n01:22:12,750 --> 01:22:17,350\nwhen we launch the sequence server\nmanagement studio, as a system admin.\n\n1563\n01:22:17,350 --> 01:22:19,280\nWe're not normally gonna\nbe writing queries right.\n\n1564\n01:22:19,280 --> 01:22:21,600\nThat's the database administrator's\nthat do that stuff.\n\n1565\n01:22:21,600 --> 01:22:24,310\nSo for us, most of the time\nwe're just going into the GUI,\n\n1566\n01:22:24,310 --> 01:22:27,200\nright clicking on things,\nchoosing properties, whatever.\n\n1567\n01:22:27,200 --> 01:22:29,800\nThat's it dealing in the GUI.\n\n1568\n01:22:29,800 --> 01:22:32,900\nBut a developer's gonna need\nthese extra options that aren't\n\n1569\n01:22:32,900 --> 01:22:34,820\nrepresented in the GUI.\n\n1570\n01:22:34,820 --> 01:22:36,560\nSo, to work with the CLI,\n\n1571\n01:22:36,560 --> 01:22:40,410\nthe Command Line Interface, we actually\nhave to hit this new query button up here.\n\n1572\n01:22:40,410 --> 01:22:44,232\nNew query will open up a nice little\nwindow for us where we can start to write.\n\n1573\n01:22:44,232 --> 01:22:45,990\nIn Transact-SQL.\n\n1574\n01:22:45,990 --> 01:22:50,040\nAnd it does full code validation so\nif you have typos and errors and\n\n1575\n01:22:50,040 --> 01:22:52,610\nmistakes it will spot those and\nhelp you find them.\n\n1576\n01:22:52,610 --> 01:22:54,470\nAnd it even does tab autocomplete.\n\n1577\n01:22:54,470 --> 01:22:57,870\nSo when you start to type things and\nyou hit tab it'll finish it out.\n\n1578\n01:22:57,870 --> 01:22:59,840\nThat's called, oh shoot what's it called?\n\n1579\n01:22:59,840 --> 01:23:01,055\nIntella something.\n\n1580\n01:23:01,055 --> 01:23:04,550\n[LAUGH] Where it's basically trying\nto predict what you're typing and\n\n1581\n01:23:04,550 --> 01:23:06,550\npredict what's coming up next.\n\n1582\n01:23:06,550 --> 01:23:09,380\nSo it is a neat system,\nit worked really well.\n\n1583\n01:23:09,380 --> 01:23:14,000\nWe type in our commands, and\nthen we hit Execute, and it runs them.\n\n1584\n01:23:14,000 --> 01:23:16,500\nYou've also got a Debugger,\nwhere it'll step through,\n\n1585\n01:23:16,500 --> 01:23:21,570\nstep by step to help you find problems,\nand you've got a Parser right here, where\n\n1586\n01:23:21,570 --> 01:23:26,380\nit can check what you've written to look\nfor typos without actually running it.\n\n1587\n01:23:26,380 --> 01:23:28,110\nThose are really handy.\n\n1588\n01:23:28,110 --> 01:23:30,220\nThere's also keyboard shortcuts for these.\n\n1589\n01:23:30,220 --> 01:23:32,364\nThe Parser is Ctrl+F5.\n\n1590\n01:23:32,364 --> 01:23:34,410\nAnd Execute is just regular F5.\n\n1591\n01:23:34,410 --> 01:23:38,650\nIf you type something here you get an F5\nand it will run it, or Ctrl+F5 and\n\n1592\n01:23:38,650 --> 01:23:39,580\nit will check it.\n\n1593\n01:23:39,580 --> 01:23:41,800\nSo you can then type whatever you want.\n\n1594\n01:23:42,860 --> 01:23:44,545\nNow whenever you execute a command,\n\n1595\n01:23:44,545 --> 01:23:48,630\none of the first things we need to do\nis understand our database context.\n\n1596\n01:23:48,630 --> 01:23:52,498\nBy default, every command runs\nagainst a particular database.\n\n1597\n01:23:52,498 --> 01:23:55,590\nIf you wanna modify the server as a whole.\n\n1598\n01:23:55,590 --> 01:23:58,050\nYou need to connect to\nthe master database.\n\n1599\n01:23:58,050 --> 01:24:00,950\nRemember that database I talked\nabout earlier in the show, master.\n\n1600\n01:24:00,950 --> 01:24:04,060\nThat's who I need to connect to if I\nwanna modify the server as a whole.\n\n1601\n01:24:04,060 --> 01:24:09,140\nBut otherwise, everything else I run is\ngoing to affect one specific database, and\n\n1602\n01:24:09,140 --> 01:24:09,780\nI need to pick it.\n\n1603\n01:24:09,780 --> 01:24:12,330\nAnd there's a few ways you can pick it.\n\n1604\n01:24:12,330 --> 01:24:15,180\nOn the left side,\nyou can just click on the database, and\n\n1605\n01:24:15,180 --> 01:24:18,690\nthat's gonna give it that context\nthat you can execute with it.\n\n1606\n01:24:18,690 --> 01:24:20,450\nAnd when you hit new query,\n\n1607\n01:24:20,450 --> 01:24:23,642\nthis new query is gonna be tied to\nthe database that you had selected.\n\n1608\n01:24:23,642 --> 01:24:25,550\nAll right.\nBut, if you're like me and\n\n1609\n01:24:25,550 --> 01:24:29,990\nyou've already got the new query window\nopen wherever you click over here doesn't\n\n1610\n01:24:29,990 --> 01:24:31,172\naffect this window.\n\n1611\n01:24:31,172 --> 01:24:32,360\nAll right?\n\n1612\n01:24:32,360 --> 01:24:36,370\nInstead, what you can do is you can\nuse this drop-down box right here.\n\n1613\n01:24:36,370 --> 01:24:37,750\nWhen you're in a query window,\n\n1614\n01:24:37,750 --> 01:24:41,520\nyou can drop this down and pick which\ndatabase you're about to work with.\n\n1615\n01:24:41,520 --> 01:24:42,660\nAll right?\n\n1616\n01:24:42,660 --> 01:24:45,540\nThat being said, I don't use either of\nthose methods, cuz I don't trust them.\n\n1617\n01:24:45,540 --> 01:24:46,140\nAll right?\n\n1618\n01:24:46,140 --> 01:24:49,660\nI like to know for a fact that I'm\nworking on a particular database, and,\n\n1619\n01:24:49,660 --> 01:24:52,720\nif I'm writing something by hand,\nI know I might reuse it later and\n\n1620\n01:24:52,720 --> 01:24:54,810\nrun it as an automated script.\n\n1621\n01:24:54,810 --> 01:24:59,010\nSo I need it in the command,\nto tell it what database to use.\n\n1622\n01:24:59,010 --> 01:25:01,829\nAnd so that's one of the first things\nthat we'll do, is we'll say, whoops.\n\n1623\n01:25:02,830 --> 01:25:04,580\nGet my cursor in the right spot.\n\n1624\n01:25:04,580 --> 01:25:10,640\nWe'll say use followed by\na particular database.\n\n1625\n01:25:10,640 --> 01:25:14,090\nRight.\nSo like, I might say USE master.\n\n1626\n01:25:14,090 --> 01:25:16,770\nAnd see how it's giving me\nsuggestions about what I should type.\n\n1627\n01:25:16,770 --> 01:25:18,670\nI didn't even have to\ntype it all the way out.\n\n1628\n01:25:18,670 --> 01:25:20,660\nAnd I could say, yeah,\nI'm working with database master.\n\n1629\n01:25:20,660 --> 01:25:21,970\nThat's what I want.\n\n1630\n01:25:21,970 --> 01:25:23,640\nAnd it'll fill that in for me.\n\n1631\n01:25:23,640 --> 01:25:26,340\nSo now I'm using the master database,\n\n1632\n01:25:26,340 --> 01:25:29,100\nI'm telling it what database that\nI wanna change my context to.\n\n1633\n01:25:29,100 --> 01:25:33,770\nNow, notice up here how it says payroll\nin the drop-down box, but in my\n\n1634\n01:25:33,770 --> 01:25:37,930\nscript when it starts to run, it's gonna\nflip to that master database right off.\n\n1635\n01:25:37,930 --> 01:25:41,130\nAnd if I hit Execute,\nit's gonna do that, and it says,\n\n1636\n01:25:41,130 --> 01:25:43,050\nCommand completed successfully.\n\n1637\n01:25:43,050 --> 01:25:46,310\nAnd I can see my drop-down\nbox change to reflect master.\n\n1638\n01:25:46,310 --> 01:25:47,880\nThat's now the database context.\n\n1639\n01:25:47,880 --> 01:25:49,715\nThat's who I'm working with right now.\n\n1640\n01:25:49,715 --> 01:25:50,970\nRight.\n\n1641\n01:25:50,970 --> 01:25:53,500\nWhen you run your scripts you get\nthis second window down here,\n\n1642\n01:25:53,500 --> 01:25:55,890\nwhich is your messages, your results.\n\n1643\n01:25:55,890 --> 01:25:58,610\nAny information you get back,\nand if you queried data,\n\n1644\n01:25:58,610 --> 01:26:01,490\nyou might actually have two tabs,\none with the data that was returned, and\n\n1645\n01:26:01,490 --> 01:26:03,850\none with any other status message\nthat might have been returned.\n\n1646\n01:26:05,230 --> 01:26:09,320\nAnd I can see down here how long it took,\nthis one took less than zero seconds.\n\n1647\n01:26:09,320 --> 01:26:10,920\nSo it happened very, very fast.\n\n1648\n01:26:10,920 --> 01:26:12,210\nAnd it just changed my context.\n\n1649\n01:26:14,620 --> 01:26:16,730\nNow when we do these commands,\n\n1650\n01:26:16,730 --> 01:26:21,220\nthere's really four commands\nthat we use every single day.\n\n1651\n01:26:21,220 --> 01:26:25,980\nThere's DROP, CREATE, ALTER.\n\n1652\n01:26:27,370 --> 01:26:28,810\nAnd SELECT.\n\n1653\n01:26:28,810 --> 01:26:29,390\nAll right.\n\n1654\n01:26:29,390 --> 01:26:33,860\nThose four guys right there, those are our\nmain commands that we use all the time.\n\n1655\n01:26:33,860 --> 01:26:34,650\nAll right.\n\n1656\n01:26:34,650 --> 01:26:35,630\nCreate.\n\n1657\n01:26:35,630 --> 01:26:41,310\nCreate is how we create a database or\ncreate a table, create a user account.\n\n1658\n01:26:41,310 --> 01:26:43,340\nYou create things with the create command.\n\n1659\n01:26:43,340 --> 01:26:44,452\nDrop is how you delete them.\n\n1660\n01:26:44,452 --> 01:26:48,210\nYou wanna get rid of a database, you wanna\nget rid a table, you drop the database or\n\n1661\n01:26:48,210 --> 01:26:48,922\ndrop the table.\n\n1662\n01:26:48,922 --> 01:26:50,320\nAll right.\n\n1663\n01:26:50,320 --> 01:26:52,940\nAlter is how modify the settings.\n\n1664\n01:26:52,940 --> 01:26:57,445\nIf you've already got a database created,\nuse the Alter command to go and change it.\n\n1665\n01:26:57,445 --> 01:27:00,190\nRight?\nOn a table you can use the Alter command\n\n1666\n01:27:00,190 --> 01:27:03,490\nto change things on the table,\nbut not the values inside of it.\n\n1667\n01:27:03,490 --> 01:27:06,410\nThe values inside of it, you use INSERT or\n\n1668\n01:27:06,410 --> 01:27:09,540\nUPDATE to change the values\ninside of a table.\n\n1669\n01:27:09,540 --> 01:27:11,500\nInsert adds a new value to a table.\n\n1670\n01:27:11,500 --> 01:27:14,952\nUpdate changes an existing\nvalue in a table.\n\n1671\n01:27:14,952 --> 01:27:17,250\nAll right.\n\n1672\n01:27:17,250 --> 01:27:21,930\nSo that was DROP, CREATE, ALTER and\nthen the last one which is SELECT.\n\n1673\n01:27:21,930 --> 01:27:25,280\nAnd Select is how you query to\nget data out of the database.\n\n1674\n01:27:25,280 --> 01:27:29,336\nSo if you're asking for\nall of the records in a particular table,\n\n1675\n01:27:29,336 --> 01:27:33,417\nyou would say something like SELECT\n* FROM and then a table name.\n\n1676\n01:27:33,417 --> 01:27:35,060\nWhatever table it happened to be.\n\n1677\n01:27:35,060 --> 01:27:38,583\nSo, you specify that information,\nyou get it out of the system.\n\n1678\n01:27:38,583 --> 01:27:42,208\nSo these couple of commands are really\nwhat we use for everything, right.\n\n1679\n01:27:42,208 --> 01:27:46,833\nNow, your developers are going to be\nusing SELECT, UPDATE, INSERT, right.\n\n1680\n01:27:46,833 --> 01:27:48,663\nThey're going to use those all the time.\n\n1681\n01:27:48,663 --> 01:27:53,730\nBut as a system admin, we're more likely\nto be doing DROP, CREATE, ALTER, right.\n\n1682\n01:27:53,730 --> 01:27:55,490\nWe're just setting up infrastructure,\n\n1683\n01:27:55,490 --> 01:27:57,870\nwe're not actually working\nwith the data normally.\n\n1684\n01:27:59,740 --> 01:28:05,060\nNow you can run each one of\nthese one at a time if you want.\n\n1685\n01:28:05,060 --> 01:28:07,640\nRight.\nSo I did use master and I hit run.\n\n1686\n01:28:07,640 --> 01:28:12,340\nAnd now I wanna go and change a table so\nI can do alter whatever and hit Run.\n\n1687\n01:28:12,340 --> 01:28:16,710\nYou can also run them in series where\nthey run one after the other, right.\n\n1688\n01:28:16,710 --> 01:28:21,260\nBut be careful,\nsome commands don't play nicely together.\n\n1689\n01:28:21,260 --> 01:28:24,190\nWhen you type a series\nof commands in here,\n\n1690\n01:28:24,190 --> 01:28:27,980\nit doesn't necessarily run them\nin the order you type them.\n\n1691\n01:28:27,980 --> 01:28:30,840\nWhen you type them in, it'll look at it,\nand it will optimize it.\n\n1692\n01:28:30,840 --> 01:28:33,730\nOn the back end,\nyou have the SQL optimization engine.\n\n1693\n01:28:33,730 --> 01:28:36,740\nAnd it's gonna look at your commands and\nit's gonna rearrange them so\n\n1694\n01:28:36,740 --> 01:28:38,790\nthey run as fast as possible.\n\n1695\n01:28:38,790 --> 01:28:41,540\nSo they might run in a different order\nthan you've typed which can have\n\n1696\n01:28:41,540 --> 01:28:44,510\nreally crazy results if you're\nnot careful, all right.\n\n1697\n01:28:44,510 --> 01:28:49,050\nSo if we wanna force a particular order\nto happen, if we wanna separate out\n\n1698\n01:28:49,050 --> 01:28:53,360\nour commands to ensure that doesn't\nhappen, we can use the GO command.\n\n1699\n01:28:53,360 --> 01:28:59,640\nGO says stop talking and\ndo what I just told you, so use master.\n\n1700\n01:28:59,640 --> 01:29:03,240\nI wanna use the master database and\nthen GO, do it.\n\n1701\n01:29:03,240 --> 01:29:04,050\nMake that thing happen.\n\n1702\n01:29:04,050 --> 01:29:05,390\nAnd actually I did a semicolon.\n\n1703\n01:29:05,390 --> 01:29:06,480\nYou don't need that.\n\n1704\n01:29:06,480 --> 01:29:08,200\nGO just means make it happen.\n\n1705\n01:29:08,200 --> 01:29:11,370\nSemicolon is a way that we tell\nit it's the end of a line, but\n\n1706\n01:29:11,370 --> 01:29:13,070\nthere's more lines coming.\n\n1707\n01:29:13,070 --> 01:29:16,770\nGo tells you it's the end, that's it,\nit's the last thing, right?\n\n1708\n01:29:16,770 --> 01:29:20,230\nIf I didn't need that semicolon, you can\nactually break this up on multiple lines.\n\n1709\n01:29:20,230 --> 01:29:23,267\nI could say it like this,\nUSE master; GO and\n\n1710\n01:29:23,267 --> 01:29:25,810\nsee how it just drew\nthis arrow right here.\n\n1711\n01:29:25,810 --> 01:29:29,080\nIt's gonna turn that into one long line.\n\n1712\n01:29:29,080 --> 01:29:32,640\nWhen it executes these queries,\nit is just one long line to it.\n\n1713\n01:29:32,640 --> 01:29:36,220\nBut visually, we might wanna break it\nup to make life a little easier on us,\n\n1714\n01:29:36,220 --> 01:29:39,850\nto make it a little easier to read and\nunderstand what's going on.\n\n1715\n01:29:39,850 --> 01:29:44,890\nSo those are some examples right\nthere of the interface and\n\n1716\n01:29:44,890 --> 01:29:46,270\nsome of the basic commands.\n\n1717\n01:29:46,270 --> 01:29:48,266\nWe're gonna work with these a lot more but\n\n1718\n01:29:48,266 --> 01:29:51,380\nwe're just kind of on\nthe admin side in this show.\n\n1719\n01:29:51,380 --> 01:29:53,410\nSo we're just gonna focus\non commands we need.\n\n1720\n01:29:53,410 --> 01:29:57,400\nThere's a separate certification just for\ntransact SQL,\n\n1721\n01:29:57,400 --> 01:29:59,440\nwhere you actually learn a lot\nof the query language stuff,\n\n1722\n01:29:59,440 --> 01:30:03,930\nand then there's the developer course\nalso that goes much more in depth on it.\n\n1723\n01:30:03,930 --> 01:30:06,570\nSo, for us, it's more of just\nmemorizing a handful of commands.\n\n1724\n01:30:08,022 --> 01:30:11,770\nAll right, so,\nI've got a database called products, and\n\n1725\n01:30:11,770 --> 01:30:14,926\nI wanna modify the products\ndatabase to do encryption.\n\n1726\n01:30:14,926 --> 01:30:18,340\nBut I don't wanna just hit\nthat little box to turn it on,\n\n1727\n01:30:18,340 --> 01:30:21,960\nI wanna do a few other things, I wanna\nset my own encryption password, right.\n\n1728\n01:30:21,960 --> 01:30:25,380\nIf I just turn on encryption\non the database using the GUI,\n\n1729\n01:30:25,380 --> 01:30:27,040\nit picks a password,\nI don't know what it is.\n\n1730\n01:30:27,040 --> 01:30:29,350\nSo, I wanna pick my own key,\nmy own password.\n\n1731\n01:30:29,350 --> 01:30:32,020\nAll right, the other thing I\nwanna do is I wanna set what\n\n1732\n01:30:32,020 --> 01:30:34,930\nlevel of encryption it's doing,\nwhat algorithm it uses.\n\n1733\n01:30:34,930 --> 01:30:36,430\nSo, there's a few that it supports.\n\n1734\n01:30:36,430 --> 01:30:40,065\nI wanna make sure I know which one it's\nusing because maybe I have to meet\n\n1735\n01:30:40,065 --> 01:30:41,200\nHIPAA compliance.\n\n1736\n01:30:41,200 --> 01:30:44,350\nAnd so, I've gotta be able to prove\nthat I'm using a certain level of\n\n1737\n01:30:44,350 --> 01:30:45,590\nencryption, all right.\n\n1738\n01:30:45,590 --> 01:30:47,650\nThe GUI doesn't let you do that.\n\n1739\n01:30:47,650 --> 01:30:49,160\nThe command line here does.\n\n1740\n01:30:49,160 --> 01:30:53,483\nAll right, so, if I wanna turn on\nencryption here I actually need to start\n\n1741\n01:30:53,483 --> 01:30:57,350\nby creating the password,\nan all-new encryption key.\n\n1742\n01:30:57,350 --> 01:31:00,600\nAnd the encryption key is\nset at the server level.\n\n1743\n01:31:00,600 --> 01:31:05,480\nSo I need to say USE master so that it\nknows that I'm going to be working with\n\n1744\n01:31:05,480 --> 01:31:08,350\nthe master database, right,\nthe server as a whole.\n\n1745\n01:31:08,350 --> 01:31:11,280\nAnd I'll say GO to make sure that\nit does that before anything else.\n\n1746\n01:31:11,280 --> 01:31:13,570\nNow I know when I run this,\n\n1747\n01:31:13,570 --> 01:31:15,785\nit'll be running in the context\nof the master database.\n\n1748\n01:31:15,785 --> 01:31:21,670\nThen, I'm gonna say create and I need\nto tell it what I'm going to create.\n\n1749\n01:31:21,670 --> 01:31:24,610\nAnd there's a number of different\nthings that we can create.\n\n1750\n01:31:24,610 --> 01:31:29,270\nI wanna create a master encryption key.\n\n1751\n01:31:31,810 --> 01:31:37,220\nActually that's a mistake, I need to\ncreate a master key for encryption.\n\n1752\n01:31:37,220 --> 01:31:39,310\nThere, syntax is important.\n\n1753\n01:31:39,310 --> 01:31:46,090\nAnd then I'll say, by password =, and\nthen what I want the password to be.\n\n1754\n01:31:46,090 --> 01:31:49,790\nAnd so\nI'll just pick a password like that one.\n\n1755\n01:31:54,190 --> 01:31:57,843\nAll right, so\nI'm telling it to create that password,\n\n1756\n01:31:57,843 --> 01:32:01,820\nthat encryption key that I can use for\nmy system, all right?\n\n1757\n01:32:01,820 --> 01:32:06,420\nAnd so I'll just set that, and I'm using\nGO statements to make sure these run\n\n1758\n01:32:06,420 --> 01:32:09,258\nin order, if I leave the GO statements\nout, I don't know what order they're gonna\n\n1759\n01:32:09,258 --> 01:32:14,040\nrun in and some things, like drop\ncommands, have to be run by themselves.\n\n1760\n01:32:14,040 --> 01:32:16,940\nSo you've gotta surround\na drop command in between GOs,\n\n1761\n01:32:16,940 --> 01:32:19,860\notherwise it won't play well\nwith other commands, and\n\n1762\n01:32:19,860 --> 01:32:23,380\nyou'll know if you miss it, because\nyou can hit this parse button, right?\n\n1763\n01:32:23,380 --> 01:32:26,730\nOr Ctrl+F5, and\nit'll check for mistakes, and\n\n1764\n01:32:26,730 --> 01:32:31,150\nif you're missing some, like if I leave\nthese GOs out right here and I parse.\n\n1765\n01:32:31,150 --> 01:32:34,050\nIf there was a problem running those\ncommands together it would tell me.\n\n1766\n01:32:34,050 --> 01:32:36,540\nSo sometimes I'm just being\nbetter safe than sorry and\n\n1767\n01:32:36,540 --> 01:32:38,800\nusing more GO commands than necessary.\n\n1768\n01:32:38,800 --> 01:32:42,607\nBut it just depends on\nwhich way you want to go.\n\n1769\n01:32:42,607 --> 01:32:46,158\nI prefer to have a little extra safety.\n\n1770\n01:32:46,158 --> 01:32:46,832\nAll right.\n\n1771\n01:32:46,832 --> 01:32:48,190\nNow that's going to set the password.\n\n1772\n01:32:48,190 --> 01:32:49,570\nI need to create a certificate also.\n\n1773\n01:32:49,570 --> 01:32:52,130\nSo I'll say create certificate.\n\n1774\n01:32:53,360 --> 01:32:54,960\nAnd I'm gonna give it a name.\n\n1775\n01:32:54,960 --> 01:32:58,581\nAnd I'm doing transparent\ndatabase encryption, so\n\n1776\n01:32:58,581 --> 01:33:01,402\nI'll just call this my TDE certificate.\n\n1777\n01:33:03,271 --> 01:33:08,542\nWith subject equals, and\nthen I just need to give it a description.\n\n1778\n01:33:08,542 --> 01:33:10,886\nSo this is my TDE certificate\n\n1779\n01:33:16,250 --> 01:33:21,320\nAll right, so I'm picking the password and\ngiving my certificate a name.\n\n1780\n01:33:22,390 --> 01:33:23,670\nNotice what's happened here.\n\n1781\n01:33:23,670 --> 01:33:25,700\nI typed in tde-certificate.\n\n1782\n01:33:25,700 --> 01:33:29,010\nAnd see how I've got two different colors\ngoing on there and a little warning?\n\n1783\n01:33:29,010 --> 01:33:34,970\nThis certificate name, I must have tripped\nover a word that's a reserved word, right?\n\n1784\n01:33:34,970 --> 01:33:36,690\nSo TDE and certificate.\n\n1785\n01:33:36,690 --> 01:33:38,550\nActually, certificate's the problem.\n\n1786\n01:33:38,550 --> 01:33:40,410\nSee how certificate is a command here.\n\n1787\n01:33:40,410 --> 01:33:44,330\nAnd it's interpreting it as\na command here, also, all right?\n\n1788\n01:33:44,330 --> 01:33:45,050\nThat can happen.\n\n1789\n01:33:45,050 --> 01:33:47,130\nAnd there's a few ways to get around that.\n\n1790\n01:33:47,130 --> 01:33:49,330\nIf you put it in quotes.\n\n1791\n01:33:49,330 --> 01:33:53,270\nThat'll let it know that you're\nnot issuing a command but\n\n1792\n01:33:53,270 --> 01:33:54,796\ninstead a word, right.\n\n1793\n01:33:54,796 --> 01:33:56,034\nThat's a name.\nBut see,\n\n1794\n01:33:56,034 --> 01:34:00,000\nI'm getting an incorrect\nsyntax on this one.\n\n1795\n01:34:00,000 --> 01:34:02,470\nIt's just telling me that whatever\nI've done here is mistaken.\n\n1796\n01:34:02,470 --> 01:34:06,520\nSo sometimes we can use square\nbrackets as the other way to do it.\n\n1797\n01:34:06,520 --> 01:34:08,125\nLet's see if that makes it happy.\n\n1798\n01:34:08,125 --> 01:34:09,340\nThere we go.\n\n1799\n01:34:09,340 --> 01:34:14,300\nSo like my password I've encompassed in\nlittle apostrophes, and so that's letting\n\n1800\n01:34:14,300 --> 01:34:17,700\nit know that, hey, everything in\nbetween the apostrophes is my password.\n\n1801\n01:34:17,700 --> 01:34:19,950\nBut here I'm enclosing it\nin square brackets, and\n\n1802\n01:34:19,950 --> 01:34:24,850\nthat's just my way of saying, this is not\na command, this is just a regular word.\n\n1803\n01:34:24,850 --> 01:34:28,080\nWe have to do that in column\nnames a lot with tables,\n\n1804\n01:34:28,080 --> 01:34:30,270\nso get used to seeing that square bracket.\n\n1805\n01:34:30,270 --> 01:34:31,905\nIt's just a way to tell\nthat it's not a command.\n\n1806\n01:34:31,905 --> 01:34:34,307\n[SOUND] All right.\n\n1807\n01:34:34,307 --> 01:34:36,750\nI'm gonna use the little parser here\njust to double check for errors.\n\n1808\n01:34:36,750 --> 01:34:38,350\nSo i've got nothing so far.\n\n1809\n01:34:38,350 --> 01:34:40,720\nIf I run that,\nthat's gonna create my password and\n\n1810\n01:34:40,720 --> 01:34:43,020\ncreate my certificate, all right.\n\n1811\n01:34:43,020 --> 01:34:47,810\nThen, what I wanna do is I wanna turn\non encryption from my database and\n\n1812\n01:34:47,810 --> 01:34:52,280\ntell it to use that certificate instead of\nusing the default one that it generates\n\n1813\n01:34:52,280 --> 01:34:54,041\nitself, all right.\n\n1814\n01:34:54,041 --> 01:35:02,360\nSo, here I'm going to create\na database encryption key.\n\n1815\n01:35:05,285 --> 01:35:07,240\nAnd now I'm gonna start\nspecifying some values.\n\n1816\n01:35:07,240 --> 01:35:13,376\nSo, I'm gonna say with\nAlgorithm equals AES 128.\n\n1817\n01:35:13,376 --> 01:35:18,055\nAll right, I wanna use AES\n128 to encrypt this database,\n\n1818\n01:35:18,055 --> 01:35:21,110\nall right, and\nthen I need to tell it the certificate.\n\n1819\n01:35:21,110 --> 01:35:22,760\nNow notice I'm starting\nto run out of room.\n\n1820\n01:35:22,760 --> 01:35:24,470\nI'm going to hit the edge of my screen.\n\n1821\n01:35:24,470 --> 01:35:28,919\nSo for visibility,\nto help me be able to see what's going on,\n\n1822\n01:35:28,919 --> 01:35:34,667\nI might wanna come in here and change\nthe way that I'm writing this, all right.\n\n1823\n01:35:34,667 --> 01:35:38,500\nSo what I'm gonna do is I'm gonna say,\ncreate database encryption key.\n\n1824\n01:35:38,500 --> 01:35:43,024\nWith ALGORITHM = AES_128 and\n\n1825\n01:35:43,024 --> 01:35:48,016\nENCRYPTION BY SERVER CERTIFICATE and\n\n1826\n01:35:48,016 --> 01:35:52,384\nthen the name of my certificate,\n\n1827\n01:35:52,384 --> 01:35:56,440\nwhich was tde-certificate.\n\n1828\n01:35:58,440 --> 01:35:59,770\nDid I spell that right?\n\n1829\n01:35:59,770 --> 01:36:00,270\nYes.\n\n1830\n01:36:01,430 --> 01:36:06,290\nOkay, now to me, when I look at this,\nI see three lines of data.\n\n1831\n01:36:06,290 --> 01:36:09,790\nI'm creating the database encryption key,\nI'm setting the algorithm, and\n\n1832\n01:36:09,790 --> 01:36:11,680\nI'm telling it what certificate to use.\n\n1833\n01:36:11,680 --> 01:36:15,750\nBut to SQL, when it sees this,\nit sees it as one long line.\n\n1834\n01:36:15,750 --> 01:36:18,260\nIt ignores that carriage return.\n\n1835\n01:36:18,260 --> 01:36:20,020\nThat's why we have that semicolon.\n\n1836\n01:36:20,020 --> 01:36:22,550\nThe semicolon is a way of saying,\nthat's the end of this command,\n\n1837\n01:36:22,550 --> 01:36:25,210\nand you'll see I've got\nthe semicolon right there.\n\n1838\n01:36:25,210 --> 01:36:28,490\nSo it knows these three are grouped\ntogether, and that's why I get this\n\n1839\n01:36:28,490 --> 01:36:32,810\nnice little collapsed line because\nit knows that's all one command.\n\n1840\n01:36:34,380 --> 01:36:38,270\nNow, I need this key not\nattached to master, but\n\n1841\n01:36:38,270 --> 01:36:39,830\nactually attached to my Products table.\n\n1842\n01:36:39,830 --> 01:36:42,120\nThe products table is\nwhat I want to encrypt.\n\n1843\n01:36:42,120 --> 01:36:44,340\nSo I need to add a little\nsomething before that.\n\n1844\n01:36:44,340 --> 01:36:50,700\nI need to say USE- Products, all right?\n\n1845\n01:36:50,700 --> 01:36:55,320\nSo that it knows to switch databases and\nthen execute this command.\n\n1846\n01:36:55,320 --> 01:36:57,950\nSo this command is executing\nagainst the product's database.\n\n1847\n01:36:59,960 --> 01:37:04,320\nAll right, so now it'll have the key,\nit's got the encryption settings.\n\n1848\n01:37:04,320 --> 01:37:07,830\nThe last thing I need to do is\nactually turn the encryption on and\n\n1849\n01:37:07,830 --> 01:37:12,070\nso that's the last thing I'll do\nhere is I'll say ALTER DATABASE.\n\n1850\n01:37:12,070 --> 01:37:15,470\nAnd the name of the database, and\nmy database is called Products.\n\n1851\n01:37:16,660 --> 01:37:20,924\nAnd then I'm gonna say, SET ENCRYPTION ON.\n\n1852\n01:37:20,924 --> 01:37:23,699\nOkay?\n\n1853\n01:37:23,699 --> 01:37:27,637\nSo if we walk through the script again,\nwe connect to our master database,\n\n1854\n01:37:27,637 --> 01:37:32,152\nwe set our encryption password, we create\nour encryption certificate, all right?\n\n1855\n01:37:32,152 --> 01:37:35,250\nThat's on the server itself,\nthe master database.\n\n1856\n01:37:35,250 --> 01:37:37,590\nThen we connect to the Products database.\n\n1857\n01:37:37,590 --> 01:37:41,670\nWe set our encryption algorithm and\nwhat certificate we're gonna use and\n\n1858\n01:37:41,670 --> 01:37:43,530\nthen we turn encryption on.\n\n1859\n01:37:43,530 --> 01:37:47,970\nSo a lot more options than\nwhat I had in the GUI.\n\n1860\n01:37:47,970 --> 01:37:48,770\nI'm gonna parse that.\n\n1861\n01:37:49,900 --> 01:37:51,300\nAll right, command completed successfully.\n\n1862\n01:37:51,300 --> 01:37:53,600\nAnd then I'll go ahead and execute it.\n\n1863\n01:37:53,600 --> 01:37:57,180\nWhen it runs, any messages that I get,\nany warnings or\n\n1864\n01:37:57,180 --> 01:37:59,730\nwhatever will appear down here and\nI can see I got one.\n\n1865\n01:37:59,730 --> 01:38:02,420\nAnd it's telling me,\nwarning the certificate used for\n\n1866\n01:38:02,420 --> 01:38:04,940\nencrypting the database\nhas not been backed up.\n\n1867\n01:38:04,940 --> 01:38:07,150\nYou should immediately back it up.\n\n1868\n01:38:07,150 --> 01:38:08,510\nAnd blah, blah, blah, right?\n\n1869\n01:38:08,510 --> 01:38:12,270\nIt's just letting me know that if\nI lose the certificate somehow,\n\n1870\n01:38:12,270 --> 01:38:13,910\nI'm not gonna be able to decrypt my data.\n\n1871\n01:38:13,910 --> 01:38:16,100\nI'm gonna lose access to my database.\n\n1872\n01:38:16,100 --> 01:38:18,010\nI won't be able to get that information.\n\n1873\n01:38:18,010 --> 01:38:19,340\nReal important to back that up.\n\n1874\n01:38:19,340 --> 01:38:20,790\nSo that's just a warning.\n\n1875\n01:38:20,790 --> 01:38:22,450\nThat's not a failure.\n\n1876\n01:38:22,450 --> 01:38:23,810\nIt did encrypt the database.\n\n1877\n01:38:23,810 --> 01:38:25,540\nAnd it encrypted it with\nthe settings I provided.\n\n1878\n01:38:25,540 --> 01:38:30,800\nSo If we can, if we're doing a one time\noperation, the GUI is really suitable.\n\n1879\n01:38:30,800 --> 01:38:32,980\nWe use it, it's easy,\nwe get in, we get out.\n\n1880\n01:38:32,980 --> 01:38:35,300\nSo when we can, we use the GUI.\n\n1881\n01:38:35,300 --> 01:38:39,176\nBut if you wanna do advanced options, or\nif you wanna automate things, you'll have\n\n1882\n01:38:39,176 --> 01:38:43,200\nto use Transact-SQL like this so you'll\nhave to learn some of these commands.\n\n1883\n01:38:43,200 --> 01:38:46,246\nAnd for the exam,\nyou wanna know both sets of commands.\n\n1884\n01:38:46,246 --> 01:38:48,840\nYou wanna know how to do\nthings through the GUI and\n\n1885\n01:38:48,840 --> 01:38:51,750\nhow to do them through Transact-SQL,\nyou wanna know both ways.\n\n1886\n01:38:51,750 --> 01:38:52,650\nAnd that's where I was saying,\n\n1887\n01:38:52,650 --> 01:38:56,480\nwhen you create these databases,\nyou can hit that script button and\n\n1888\n01:38:56,480 --> 01:39:01,140\nsee what the commands were to actually\nget in there and perform that action.\n\n1889\n01:39:01,140 --> 01:39:03,848\nSo if I were to take that products\ndatabase that's now encrypted,\n\n1890\n01:39:03,848 --> 01:39:08,616\nI can right-click on it and\ngo Script Database as > CREATE to,\n\n1891\n01:39:08,616 --> 01:39:13,140\nand it's gonna give me a script for\nrecreating that database.\n\n1892\n01:39:13,140 --> 01:39:16,400\nSo it'll show me what I'd have to run\nto create that same database again.\n\n1893\n01:39:16,400 --> 01:39:20,280\nAnd so I'll do that, and when I look\nat its definition, here it's creating\n\n1894\n01:39:20,280 --> 01:39:24,290\nthe database and specifying the files, and\nthen if I continue to look somewhere in\n\n1895\n01:39:24,290 --> 01:39:29,230\nhere, it'll have the encryption turned\non also, so I just have to find it.\n\n1896\n01:39:29,230 --> 01:39:32,350\nOkay, it shows a ton of other\noptions that I didn't set.\n\n1897\n01:39:32,350 --> 01:39:35,330\nThat's because these are just defaults,\nand so it's got them in here.\n\n1898\n01:39:35,330 --> 01:39:39,350\nHere it is, set encryption on right there,\nso it knows to do the encryption.\n\n1899\n01:39:42,740 --> 01:39:43,580\nAll right.\n\n1900\n01:39:43,580 --> 01:39:45,230\nOnce that's done, we're encrypted.\n\n1901\n01:39:45,230 --> 01:39:46,860\nThe database is set up.\n\n1902\n01:39:46,860 --> 01:39:49,700\nMy end users and my software,\nthey don't know about it, right.\n\n1903\n01:39:49,700 --> 01:39:53,140\nIt's just SQL Server as it writes to the\ndatabase, the database files themselves\n\n1904\n01:39:53,140 --> 01:39:55,620\nremain encrypted and\nstored securely on the drives.\n\n1905\n01:39:55,620 --> 01:39:59,310\nIf somebody were to break in and\nsteal the hard drives out of my server,\n\n1906\n01:39:59,310 --> 01:40:01,460\nthey're not gonna be able to\naccess those database files.\n\n1907\n01:40:01,460 --> 01:40:04,520\nThey can get to the files, but\nthe data in them is fully encrypted and\n\n1908\n01:40:04,520 --> 01:40:05,940\nprotected, right?\n\n1909\n01:40:05,940 --> 01:40:08,850\nYou might be using third party software or\nMicrosoft BitLocker or\n\n1910\n01:40:08,850 --> 01:40:13,470\nsomething like that to provide this\nencryption, so you don't need the TE\n\n1911\n01:40:13,470 --> 01:40:17,680\ninside of SQL, but if you want,\nthe option is there.\n\n1912\n01:40:17,680 --> 01:40:21,280\nAnd it does get a little bit better\nperformance than BitLocker does.\n\n1913\n01:40:24,080 --> 01:40:27,860\nSo that's my quick primer on\nthe Transact-SQL interface.\n\n1914\n01:40:27,860 --> 01:40:30,440\nWe'll use that throughout the show.\n\n1915\n01:40:30,440 --> 01:40:34,190\nThe cool thing about it is when you write\nsomething like this, you can save it.\n\n1916\n01:40:34,190 --> 01:40:36,310\nSee, I've got my little\nSave button up here.\n\n1917\n01:40:36,310 --> 01:40:39,200\nWe can save it and use it again later on.\n\n1918\n01:40:39,200 --> 01:40:45,951\nSo I might stick this on my desktop and\ncall it Enable Database Encryption.\n\n1919\n01:40:48,450 --> 01:40:51,850\nAnd then whenever I wanna go enable\nencryption for a database again,\n\n1920\n01:40:51,850 --> 01:40:54,860\nall I have to do is open up this file,\nand it's just a text file, right?\n\n1921\n01:40:54,860 --> 01:40:56,790\nIf I drop down to my desktop,\n\n1922\n01:40:56,790 --> 01:41:00,150\nif the charms bar will let me\ndrop down to my desktop, there.\n\n1923\n01:41:00,150 --> 01:41:04,180\nHere's that file, and I can open\nit with Notepad and there it is.\n\n1924\n01:41:04,180 --> 01:41:06,660\nThere's exactly what,\nit's just a text file, right?\n\n1925\n01:41:06,660 --> 01:41:09,250\nSo if I wanna turn encryption on for\nanother database, I can come in here and\n\n1926\n01:41:09,250 --> 01:41:12,140\njust change the database name,\nso maybe I change this to,\n\n1927\n01:41:12,140 --> 01:41:13,680\nwhat was one of my other ones?\n\n1928\n01:41:13,680 --> 01:41:15,680\nLike employees, right?\n\n1929\n01:41:15,680 --> 01:41:20,520\nAnd then I can load this into\nthe query analyzer and run it.\n\n1930\n01:41:20,520 --> 01:41:21,180\nOff we go.\n\n1931\n01:41:21,180 --> 01:41:23,480\nSo really easy to reuse this stuff.\n\n1932\n01:41:25,550 --> 01:41:27,428\nAnd if you have developers in house,\n\n1933\n01:41:27,428 --> 01:41:32,435\na lot of times what they'll do is they'll\ncreate a code repository, and you can\n\n1934\n01:41:32,435 --> 01:41:37,585\nactually link your SQL Management Studio\nto it, so you can get access to snippets.\n\n1935\n01:41:37,585 --> 01:41:40,467\nRight, all the resources they share, so\nas people write these, they share them and\n\n1936\n01:41:40,467 --> 01:41:42,475\nit becomes available in your environment.\n\n1937\n01:41:42,475 --> 01:41:44,515\nIf it's just you,\nyou probably don't need all that.\n\n1938\n01:41:44,515 --> 01:41:47,189\nBut if there's other people out there,\nit is handy.\n\n1939\n01:41:50,420 --> 01:41:53,430\nSo that's probably a good spot for\nus to wrap today.\n\n1940\n01:41:53,430 --> 01:41:56,230\nThere is more that I wanna\ntalk about on the databases.\n\n1941\n01:41:56,230 --> 01:42:00,600\nFor example, we created a database and\nwe never actually put anything in it.\n\n1942\n01:42:00,600 --> 01:42:03,960\nAnd once the data gets in there, there's\nall sorts of stuff we can do to rearrange\n\n1943\n01:42:03,960 --> 01:42:07,230\nwhere it's stored on our hard drives,\nand how we do backups, and so on.\n\n1944\n01:42:07,230 --> 01:42:10,710\nSo, I know we mentioned file groups,\nbut I never actually got into that too.\n\n1945\n01:42:10,710 --> 01:42:13,150\nSo we'll tackle file groups\nin the next episode.\n\n1946\n01:42:13,150 --> 01:42:17,210\nWe'll take a look at table partitioning\nand a couple other really cool things, so\n\n1947\n01:42:17,210 --> 01:42:19,980\ndefinitely stay tuned for that.\n\n1948\n01:42:19,980 --> 01:42:23,300\nBut for this episode,\nlet's go ahead and wrap it up here.\n\n1949\n01:42:23,300 --> 01:42:24,220\nLet me remind you guys,\n\n1950\n01:42:24,220 --> 01:42:28,410\nif you have questions on anything\nthat we've done, feel free to ask.\n\n1951\n01:42:28,410 --> 01:42:30,880\nLive during the show,\nyou can to to itpro.tv/live and\n\n1952\n01:42:30,880 --> 01:42:33,240\nyou'll see the chat box\nright beneath the video.\n\n1953\n01:42:33,240 --> 01:42:34,520\nYou can post your questions there.\n\n1954\n01:42:34,520 --> 01:42:36,920\nWe monitor and answer during the show.\n\n1955\n01:42:36,920 --> 01:42:38,550\nIf you have a question afterwards,\n\n1956\n01:42:38,550 --> 01:42:41,660\nlike if you're watching this recorded,\nuse our Q and A forums.\n\n1957\n01:42:41,660 --> 01:42:44,970\nAt the top of every page the link that\nsays Q and A, you can jump right in there,\n\n1958\n01:42:44,970 --> 01:42:47,640\npost your questions, and\nagain we monitor and answer.\n\n1959\n01:42:47,640 --> 01:42:51,680\nWe wanna make sure you guys have\nthe information you need to be successful.\n\n1960\n01:42:51,680 --> 01:42:55,136\nAll right, well I hope you guys enjoyed\nthe show, signing off for ITProTV,\n\n1961\n01:42:55,136 --> 01:42:57,201\nI'm Don Pezet, and I'll see you next time.\n\n1962\n01:42:57,201 --> 01:43:07,201\n[MUSIC]\n\n1963\n01:43:09,851 --> 01:43:15,480\n[SOUND]\n\n",
          "vimeoId": "105279756"
        },
        {
          "description": "In this episode Don discusses using file groups to improve performance within a table. NOTE: After the credits is a special segment discussing indexes and partition tables. You should watch the Indexing episode to better understand the special segment.",
          "length": "4531",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/004-Optimizing-Database-Files.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/004-Optimizing-Database-Files-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/004-Optimizing-Database-Files-sm.jpg",
          "title": "Optimizing Database Files",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:33,427 --> 00:00:36,445\nGood morning, good afternoon and\ngood evening.\n\n3\n00:00:36,445 --> 00:00:39,151\nAnd welcome back for\nanother episode of ITProTV,\n\n4\n00:00:39,151 --> 00:00:43,609\nI'm your host Don Pezet back again with\nanother episode of Microsoft SQL Server.\n\n5\n00:00:43,609 --> 00:00:48,158\nWe're gonna dive right back in, jumping in\nafter the content we covered in the last\n\n6\n00:00:48,158 --> 00:00:50,505\nepisode, which was creating databases.\n\n7\n00:00:50,505 --> 00:00:54,820\nSo in the last episode, we got a chance\nto see how to create the database and\n\n8\n00:00:54,820 --> 00:00:59,014\nI talked about the files and where we\nstore them and ways to optimize it.\n\n9\n00:00:59,014 --> 00:01:01,880\nWe got a chance to see RAID arrays and\nall that good stuff,\n\n10\n00:01:01,880 --> 00:01:03,264\nnow I want to build on that.\n\n11\n00:01:03,264 --> 00:01:05,979\nNow at the end of the last episode,\nyou could have stopped and\n\n12\n00:01:05,979 --> 00:01:07,908\nyou've got a fully functional database.\n\n13\n00:01:07,908 --> 00:01:11,955\nYou're ready to start throwing data\nin there, just chucking it all in and\n\n14\n00:01:11,955 --> 00:01:12,814\ngiving it a go.\n\n15\n00:01:12,814 --> 00:01:17,546\nBut there are a few other optimizations\nwe might wanna make before we do that and\n\n16\n00:01:17,546 --> 00:01:22,208\nit's important that we know what we're\ndoing ahead of time, because once we\n\n17\n00:01:22,208 --> 00:01:27,178\nstart throwing our data into the database,\nit becomes very difficult to move it.\n\n18\n00:01:27,178 --> 00:01:31,720\nSo a well designed, well planned\ndatabase infrastructure starts\n\n19\n00:01:31,720 --> 00:01:34,652\nbefore there's any data in the database.\n\n20\n00:01:34,652 --> 00:01:38,946\nI've not created a single\ntable in my database just yet.\n\n21\n00:01:38,946 --> 00:01:41,593\nTables, that's where our\nactual data is gonna go.\n\n22\n00:01:41,593 --> 00:01:44,971\nI think I brought an example up in the\nlast show, but let me bring it up again.\n\n23\n00:01:44,971 --> 00:01:47,584\nSo here's an example of a table.\n\n24\n00:01:47,584 --> 00:01:50,209\nThis is what our end users want and\nwhat our developers want.\n\n25\n00:01:50,209 --> 00:01:53,235\nThey want a place to be able to\nstore data and retrieve it, so\n\n26\n00:01:53,235 --> 00:01:56,826\nthey can do a query to say,\nreturn the data for employee number three.\n\n27\n00:01:56,826 --> 00:02:01,160\nAnd it'll reach in the first name,\nthe last name and so on for Andrew Aimes,\n\n28\n00:02:01,160 --> 00:02:06,206\nthat's what they want, but we've created a\ndatabase to this point that has no tables.\n\n29\n00:02:06,206 --> 00:02:10,669\nSo we haven't even gotten there, but\nthe reason is we wanna make sure we've\n\n30\n00:02:10,669 --> 00:02:13,764\ndesigned everything properly\nfrom the beginning.\n\n31\n00:02:13,764 --> 00:02:18,731\nIf we don't, if we have a poorly designed\ndatabase or if we have a database that was\n\n32\n00:02:18,731 --> 00:02:22,412\nfine when our company was small,\nbut now our company is big.\n\n33\n00:02:22,412 --> 00:02:24,258\nWe need to change it.\n\n34\n00:02:24,258 --> 00:02:28,772\nAnd unfortunately, there's not a good\nway to move tables between files or\n\n35\n00:02:28,772 --> 00:02:31,864\nmove tables between\nunderlying infrastructure.\n\n36\n00:02:31,864 --> 00:02:37,320\nSo what you end up having to do is to wipe\nout the table and recreate the table.\n\n37\n00:02:37,320 --> 00:02:39,978\nNow it sounds bad,\nit's really not that bad.\n\n38\n00:02:39,978 --> 00:02:43,507\nAny object inside of SQL,\nyou can right-click on it and\n\n39\n00:02:43,507 --> 00:02:45,702\nchoose Script as drop and create.\n\n40\n00:02:45,702 --> 00:02:48,724\nAnd what it will, here let me show you,\ncuz you know I rattle these things off and\n\n41\n00:02:48,724 --> 00:02:50,183\nsometimes it's a little confusing.\n\n42\n00:02:50,183 --> 00:02:55,384\nSo if we've made a database, for example,\nthe whole database and it's just perfect.\n\n43\n00:02:55,384 --> 00:02:57,404\nIt's got everything that we wanted.\n\n44\n00:02:57,404 --> 00:03:04,300\nWell, you can right-click on it and\nchoose Script Database as Drop and Create.\n\n45\n00:03:04,300 --> 00:03:07,425\nWhen you do that,\nit's gonna create a script for\n\n46\n00:03:07,425 --> 00:03:11,022\nyou that will delete the database and\nthen recreate it.\n\n47\n00:03:11,022 --> 00:03:13,740\nRecreate it, so\nthat you can modify it however you need.\n\n48\n00:03:13,740 --> 00:03:17,105\nSo if I do that,\nI'll choose Drop and Create to.\n\n49\n00:03:17,105 --> 00:03:17,837\nHere it is.\n\n50\n00:03:17,837 --> 00:03:18,998\nIt's kinda laying this out for me.\n\n51\n00:03:18,998 --> 00:03:22,585\nYou'll see right here,\nDrop Database Products.\n\n52\n00:03:22,585 --> 00:03:25,370\nThat's gonna delete\nthat products database.\n\n53\n00:03:25,370 --> 00:03:29,336\nAnd then right after it,\nit creates the product's database and\n\n54\n00:03:29,336 --> 00:03:33,680\nit applies all the settings and\neverything just the way that we had it.\n\n55\n00:03:33,680 --> 00:03:37,360\nSo you might look at the script and\nsay, well, what's the point in this?\n\n56\n00:03:37,360 --> 00:03:40,855\nWhy would I wanna wipe the data base\nout and then just recreate it again?\n\n57\n00:03:40,855 --> 00:03:42,353\nWhat does that achieve?\n\n58\n00:03:42,353 --> 00:03:44,036\nWell, it doesn't achieve anything.\n\n59\n00:03:44,036 --> 00:03:45,080\nIf I were to run this,\n\n60\n00:03:45,080 --> 00:03:48,099\nI would be in the exact same\nposition that I was before I ran it.\n\n61\n00:03:48,099 --> 00:03:50,654\nBut now, we can go in and modify it.\n\n62\n00:03:50,654 --> 00:03:54,996\nWe can go in and put changes in here to\nmodify the way that we want it to build.\n\n63\n00:03:54,996 --> 00:03:56,656\nWe can change the file name.\n\n64\n00:03:56,656 --> 00:04:00,277\nMaybe I chose a different file\nname before and I really hate it.\n\n65\n00:04:00,277 --> 00:04:01,415\nAnd so, I wanna change the file name.\n\n66\n00:04:01,415 --> 00:04:02,414\nWell, I could do it here.\n\n67\n00:04:02,414 --> 00:04:04,840\nI could change that file name or\nthe location.\n\n68\n00:04:04,840 --> 00:04:07,953\nI could turn encryption off as\nopposed to having encryption on,\n\n69\n00:04:07,953 --> 00:04:10,446\nwhatever it is that we\nwanted we could then modify.\n\n70\n00:04:10,446 --> 00:04:14,258\nA lot of these you could change\nwhile the database is in place,\n\n71\n00:04:14,258 --> 00:04:18,968\nthere are some things you can't and\none of those is where a table is located.\n\n72\n00:04:18,968 --> 00:04:23,702\nWhen we create a table, a table is stored\nin the database in a particular place and\n\n73\n00:04:23,702 --> 00:04:25,598\nthere's no good way to move it.\n\n74\n00:04:25,598 --> 00:04:29,823\nSo we can use a Drop and Create script,\nlike this to drop the table and\n\n75\n00:04:29,823 --> 00:04:33,470\nthen recreate it and\nspecify a different location for it.\n\n76\n00:04:33,470 --> 00:04:36,057\nNow when I talk about locations,\nwhat do I mean?\n\n77\n00:04:36,057 --> 00:04:39,720\nWell, remember yesterday's example,\nwhere I took our server and\n\n78\n00:04:39,720 --> 00:04:43,191\nwas talking about separating out\nthe components of our system,\n\n79\n00:04:43,191 --> 00:04:46,532\nwhere we might have our operating\nsystem on one set of drives,\n\n80\n00:04:46,532 --> 00:04:51,246\nour database on another set of drives, our\ntransaction logs on another set of drives.\n\n81\n00:04:51,246 --> 00:04:58,049\nAnd in fact, on a highly tuned SQL Server\nwill actually have one more entry in here.\n\n82\n00:04:58,049 --> 00:05:03,366\nLet me just update this a little bit\nto reflect that one other entry.\n\n83\n00:05:03,366 --> 00:05:04,806\nWell, shoot.\n\n84\n00:05:04,806 --> 00:05:08,624\n[LAUGH] This should not\nbe as hard as it is.\n\n85\n00:05:08,624 --> 00:05:09,485\nThere we go.\n\n86\n00:05:09,485 --> 00:05:11,550\nSo there'll be one other entry,\n\n87\n00:05:11,550 --> 00:05:14,884\nwhich'll be your page file\nin a highly tuned server.\n\n88\n00:05:14,884 --> 00:05:17,471\nHopefully, you aren't using the page file.\n\n89\n00:05:17,471 --> 00:05:21,687\nThat you should have enough RAM in your\nsystem that you don't need it, but\n\n90\n00:05:21,687 --> 00:05:24,203\nit's pretty common to\nmove your swap file or\n\n91\n00:05:24,203 --> 00:05:27,320\nyour page file to a separate\nset of disks also.\n\n92\n00:05:27,320 --> 00:05:31,090\nSo in a highly optimized server, you might\nhave a configuration that's like this.\n\n93\n00:05:32,210 --> 00:05:36,392\nWell, if I create my database and\nI put it right here on the RAID 5 array,\n\n94\n00:05:36,392 --> 00:05:37,845\nI get certain benefits.\n\n95\n00:05:37,845 --> 00:05:40,210\nI can write a little bit faster or\nnot much,\n\n96\n00:05:40,210 --> 00:05:42,652\nwe talked about RAID 5\non the last episode.\n\n97\n00:05:42,652 --> 00:05:44,231\nSo we get a little bit\nof a performance boost.\n\n98\n00:05:44,231 --> 00:05:47,098\nAnd when I read, I get a little\nbit of a performance boost, but\n\n99\n00:05:47,098 --> 00:05:48,211\nI also get redundancy.\n\n100\n00:05:48,211 --> 00:05:51,280\nThat's my extra benefit there.\n\n101\n00:05:51,280 --> 00:05:54,269\nAnd then all these mirrors\nwhile I'm getting redundancy,\n\n102\n00:05:54,269 --> 00:05:55,891\nbut no real performance boost.\n\n103\n00:05:55,891 --> 00:06:01,471\nNow my data is right there on\nthat RAID 5 array, right here.\n\n104\n00:06:01,471 --> 00:06:06,379\nWell, inside of my database,\nI may have more than one table.\n\n105\n00:06:06,379 --> 00:06:10,620\nAnd if I have more than one table,\nif those tables are being used\n\n106\n00:06:10,620 --> 00:06:15,038\nsimultaneously, the tables\nare competing against each other.\n\n107\n00:06:15,038 --> 00:06:16,780\nNow how do we fix that?\n\n108\n00:06:16,780 --> 00:06:20,798\nIf I have competing disk I/O\nbetween two different tables,\n\n109\n00:06:20,798 --> 00:06:25,365\nmaybe I've got a database from my\ncompany and in there is one table for\n\n110\n00:06:25,365 --> 00:06:28,379\nmy products and\nanother table for my orders.\n\n111\n00:06:28,379 --> 00:06:32,138\nSo every time somebody is searching my\ninventory, like you go to amazon.com and\n\n112\n00:06:32,138 --> 00:06:35,252\nyou search for products,\nthey're querying the products table.\n\n113\n00:06:35,252 --> 00:06:39,627\nBut every time somebody places an order,\nthey're writing to the orders table.\n\n114\n00:06:39,627 --> 00:06:40,960\nNow I've got a conflict,\n\n115\n00:06:40,960 --> 00:06:43,877\nI've got two different types\nof access at the same time.\n\n116\n00:06:43,877 --> 00:06:47,094\nWell, if those tables are stored\nin the same database and\n\n117\n00:06:47,094 --> 00:06:51,330\nthe database is stored on these drives,\nthe tables will have contention.\n\n118\n00:06:51,330 --> 00:06:55,915\nThat's just how it is, but\nwe can take our database and\n\n119\n00:06:55,915 --> 00:06:58,715\nbreak it up into multiple files.\n\n120\n00:06:58,715 --> 00:07:00,981\nAnd if we break into multiple files,\n\n121\n00:07:00,981 --> 00:07:05,669\nwe can then put the tables in the\ndifferent files to remove that contention.\n\n122\n00:07:05,669 --> 00:07:10,133\nSo instead of having my database\njust on one RAID 5 array and\n\n123\n00:07:10,133 --> 00:07:15,223\nthat's it, what I might actually\ndo is extend this even further and\n\n124\n00:07:15,223 --> 00:07:20,436\nbreak my database up, so that it\nspreads across more than one array.\n\n125\n00:07:20,436 --> 00:07:24,116\nSo some of my database tables\nare one side and some on the other.\n\n126\n00:07:24,116 --> 00:07:27,525\nNow, it's still just one database.\n\n127\n00:07:27,525 --> 00:07:29,521\nIt's not two databases, we could do that.\n\n128\n00:07:29,521 --> 00:07:31,704\nWe could create two databases.\n\n129\n00:07:31,704 --> 00:07:34,862\nOne database on one RAID 5 array,\nanother database on the other.\n\n130\n00:07:34,862 --> 00:07:39,949\nThe problem is sharing information between\ndatabases becomes really difficult,\n\n131\n00:07:39,949 --> 00:07:44,606\nyou lose things like optimized index\nlookups that we'll talk about later.\n\n132\n00:07:44,606 --> 00:07:48,074\nYou also lose things like primary\nforeign key relationships, which again,\n\n133\n00:07:48,074 --> 00:07:49,472\nwe'll talk about that later.\n\n134\n00:07:49,472 --> 00:07:52,422\nSo you lose a lot when you\ndo separate databases.\n\n135\n00:07:52,422 --> 00:07:56,407\nSo it would be nice,\nif we could take one database and\n\n136\n00:07:56,407 --> 00:07:59,132\nsplit it up across multiple files.\n\n137\n00:07:59,132 --> 00:08:02,707\nWhen we do that, when we create a table,\n\n138\n00:08:02,707 --> 00:08:07,190\nwe can specify what file\nthe table resides in.\n\n139\n00:08:07,190 --> 00:08:11,360\nSo maybe one table resides in\nthe database file on this array, and\n\n140\n00:08:11,360 --> 00:08:16,870\nthe other table, like my orders table,\nresides in the file in this other array.\n\n141\n00:08:16,870 --> 00:08:20,450\nNow I've eliminated discontention\nbetween those two tables.\n\n142\n00:08:20,450 --> 00:08:23,900\nThat are in the same database, but\nnow they have that separate discontention.\n\n143\n00:08:24,910 --> 00:08:25,950\nLet me show you how that's done.\n\n144\n00:08:25,950 --> 00:08:27,440\nIt's actually pretty easy.\n\n145\n00:08:27,440 --> 00:08:32,090\nWhen we created this database, so\nI'll take my products database here, and\n\n146\n00:08:32,090 --> 00:08:36,880\nI'm just gonna pull up its properties,\nwhen we created it,\n\n147\n00:08:36,880 --> 00:08:39,350\nit asked us what files we wanted to make.\n\n148\n00:08:39,350 --> 00:08:41,270\nAnd it made two files for us.\n\n149\n00:08:41,270 --> 00:08:44,320\nI didn't make these right,\njust when I typed in the database name,\n\n150\n00:08:44,320 --> 00:08:48,420\nit automatically made these two files,\none was the database file the MDF,\n\n151\n00:08:48,420 --> 00:08:52,340\nand the other one was\nthe transaction log file, the LDF.\n\n152\n00:08:52,340 --> 00:08:54,370\nAll right.\nSo it made those and\n\n153\n00:08:54,370 --> 00:08:55,940\nit put them into a folder.\n\n154\n00:08:55,940 --> 00:08:59,500\nWell, I could add more files, and\n\n155\n00:08:59,500 --> 00:09:02,940\nyou can do it when you're creating\nthe database,or you can do it afterwards.\n\n156\n00:09:02,940 --> 00:09:05,500\nSo I might come in here and\nrename some of these.\n\n157\n00:09:05,500 --> 00:09:07,610\nRight?\nSo I might want to do separate files,\n\n158\n00:09:07,610 --> 00:09:12,810\nspecifically for my orders and\nmy products table, okay?\n\n159\n00:09:12,810 --> 00:09:13,980\nSo I'm gonna take this.\n\n160\n00:09:13,980 --> 00:09:21,010\nI've got my products file here, which is\nC:/Program Files/Microsoft SQL Server.\n\n161\n00:09:21,010 --> 00:09:22,070\nActually you know what?\n\n162\n00:09:22,070 --> 00:09:23,270\nLet's do an all new one here.\n\n163\n00:09:23,270 --> 00:09:25,470\nLet's just cancel that.\n\n164\n00:09:25,470 --> 00:09:30,780\nI'm gonna take this one, and\nwe'll do a, we'll do a new database.\n\n165\n00:09:30,780 --> 00:09:32,880\nThis will be like for\nour inventory management, right, so\n\n166\n00:09:32,880 --> 00:09:35,282\nI'm going to call this\nmy inventory database.\n\n167\n00:09:35,282 --> 00:09:37,810\nAll right, so here's the files\nthat it's going to make, and\n\n168\n00:09:37,810 --> 00:09:41,260\nthe reason that I want to do a new one,\nis I want to do smaller pads than this.\n\n169\n00:09:41,260 --> 00:09:42,800\nThese are kind of long paths.\n\n170\n00:09:42,800 --> 00:09:47,290\nSo, I'm going to put this one on\nmy database folder on the E drive.\n\n171\n00:09:47,290 --> 00:09:50,830\nAnd this other one,\non my transaction log folder over here.\n\n172\n00:09:52,300 --> 00:09:53,510\nAll right, so there we go.\n\n173\n00:09:53,510 --> 00:09:56,370\nSo now I've got those set up,\nand I'll get that created.\n\n174\n00:09:56,370 --> 00:10:01,040\nNow I'm going to take that inventory\ndatabase, and I'll pull up its properties,\n\n175\n00:10:01,040 --> 00:10:04,600\nand I'll go under its files, and so\nthere's the two files that we just made,\n\n176\n00:10:04,600 --> 00:10:07,100\nand their paths,\nall fits on the screen now.\n\n177\n00:10:07,100 --> 00:10:07,930\nRight.\n\n178\n00:10:07,930 --> 00:10:11,400\nWhat I can do, is now I can start\nto create additional files, and\n\n179\n00:10:11,400 --> 00:10:12,830\nstore them somewhere else.\n\n180\n00:10:12,830 --> 00:10:17,110\nNow, I could create additional files and\nstore them on the same hard drive, but\n\n181\n00:10:17,110 --> 00:10:20,050\nif I do that, I don't really\nget any performance benefit.\n\n182\n00:10:20,050 --> 00:10:20,920\nAll right.\n\n183\n00:10:20,920 --> 00:10:24,540\nWhat I do get is backup and restore\nbenefits, I'll talk about those later.\n\n184\n00:10:24,540 --> 00:10:26,850\nBut normally we're not gonna\nput them on the same disk,\n\n185\n00:10:26,850 --> 00:10:28,840\nwe're gonna put them somewhere else.\n\n186\n00:10:28,840 --> 00:10:31,080\nSo I'll come in and add some more files,\n\n187\n00:10:31,080 --> 00:10:36,100\nI'm gonna add a file\ncalled inventory_ tbl,\n\n188\n00:10:36,100 --> 00:10:39,310\nso I know this is gonna be\nwhere I store one of my tables.\n\n189\n00:10:39,310 --> 00:10:42,150\nAnd you can call these whatever you want,\nthis is my own naming col nvention,\n\n190\n00:10:42,150 --> 00:10:47,942\nI usually put tbl so I can remember why\nI did it., and then products, all right?\n\n191\n00:10:47,942 --> 00:10:53,010\nSo by giving it a name like that,\nI can look at it and visually remember.\n\n192\n00:10:53,010 --> 00:10:55,860\nOh, this a file where I'm gonna\nbe storing a particular table.\n\n193\n00:10:55,860 --> 00:10:59,410\nThe products table, I'm gonna put\nthat right here in this file.\n\n194\n00:10:59,410 --> 00:11:08,270\nAnd then I'll add another file, which\nwill be inventory_tbl _orders, allright?\n\n195\n00:11:08,270 --> 00:11:10,300\nThat's where I'm gonna put my orders.\n\n196\n00:11:10,300 --> 00:11:13,570\nAgain, the names don't matter,\nI just like to be able to keep straight.\n\n197\n00:11:13,570 --> 00:11:17,010\nI have an inventory database,\nthat's my main database file.\n\n198\n00:11:17,010 --> 00:11:19,900\nBut now I've got these other\nfiles that I'm creating,\n\n199\n00:11:19,900 --> 00:11:22,250\nthat are gonna store products and\norders, and so on.\n\n200\n00:11:23,570 --> 00:11:28,420\nNow ideally, I'd put these on separate\nhard drives to remove drive contention,\n\n201\n00:11:28,420 --> 00:11:32,000\nbut I think I'm actually out of\nhard drive space on this server, so\n\n202\n00:11:32,000 --> 00:11:34,630\nlet me see what we've got here.\n\n203\n00:11:34,630 --> 00:11:39,385\nI might just have to stick it on\nthe same drive, just to, to do it,\n\n204\n00:11:39,385 --> 00:11:41,643\nbut let's see what I've got.\n\n205\n00:11:43,654 --> 00:11:47,010\nIf I have any extra physical hard drives,\nthat's what I want to use.\n\n206\n00:11:47,010 --> 00:11:49,510\nRemember, you might be\ntempted to do partitions.\n\n207\n00:11:49,510 --> 00:11:52,310\nI could move it off to a separate\npartition, but you don't get any\n\n208\n00:11:52,310 --> 00:11:57,020\nperformance benefit for doing a separate\npartition, so yeah, I've got empty space.\n\n209\n00:11:57,020 --> 00:12:00,270\nI don't have any more physical drives, but\nI'll tell you what, I'm just going to go\n\n210\n00:12:00,270 --> 00:12:03,730\nahead and do partitions even\nthough I said not to do that.\n\n211\n00:12:03,730 --> 00:12:06,330\nSo I'll come in here and\njust do some separate partitions.\n\n212\n00:12:06,330 --> 00:12:12,357\nI'll do a ten gig here,\nand I'll call this one,\n\n213\n00:12:12,357 --> 00:12:16,334\nthis will be my table products.\n\n214\n00:12:19,280 --> 00:12:23,156\nA good naming convention is always\nimportant to remember why you did\n\n215\n00:12:23,156 --> 00:12:24,410\nsomething, right?\n\n216\n00:12:24,410 --> 00:12:28,120\nYou should always have documentation\nthat shows why you did something, but\n\n217\n00:12:28,120 --> 00:12:31,230\nif somebody else comes along and\njust does a quick glance at the server,\n\n218\n00:12:31,230 --> 00:12:33,630\na good naming convention\nwill help to insure\n\n219\n00:12:33,630 --> 00:12:36,240\nthat they understand what's going on,\nwithout having to read a bunch.\n\n220\n00:12:38,450 --> 00:12:42,684\nSo I'm gonna call this one\ninventory_table_products.\n\n221\n00:12:45,305 --> 00:12:45,881\nAnd there we go.\nSo\n\n222\n00:12:45,881 --> 00:12:47,743\nnow I've got two more\ndrives that I can use.\n\n223\n00:12:47,743 --> 00:12:51,838\nAnd I've exceeded the amount of drives\nthat a typical disk can have, so\n\n224\n00:12:51,838 --> 00:12:54,660\nit had to do a logical and\nextended partition.\n\n225\n00:12:54,660 --> 00:12:56,430\nBut I'm not worried about that.\n\n226\n00:12:56,430 --> 00:13:01,900\nAlright, so now back here in SQL,\nI can take table products,\n\n227\n00:13:01,900 --> 00:13:04,410\nand I'm gonna put it in\nthat other location.\n\n228\n00:13:04,410 --> 00:13:09,810\nSo this is the products table, which, now\nI've gotta remember what drive that was,\n\n229\n00:13:09,810 --> 00:13:14,160\nthat was my, what drive letter?\n\n230\n00:13:16,050 --> 00:13:21,400\nSo products is going to be my H drive, so\nI'm just gonna park it there in H drive.\n\n231\n00:13:21,400 --> 00:13:27,450\nAnd that means my orders one, oh shoot,\nso I'm bumping into security again.\n\n232\n00:13:27,450 --> 00:13:29,090\nRemember yesterday I had that problem,\n\n233\n00:13:29,090 --> 00:13:31,980\nwhere I didn't have\npermissions to the drive.\n\n234\n00:13:31,980 --> 00:13:35,660\nAnd so it was giving me issues, and so\nI'm just gonna fix that real quick, so\n\n235\n00:13:35,660 --> 00:13:38,600\nI'll go in there and\nI'll make a folder for this one.\n\n236\n00:13:44,440 --> 00:13:47,430\nRemember I said you dont normally want\nto stick stuff in the root of the drive\n\n237\n00:13:47,430 --> 00:13:50,830\nanyway, because it creates\nsome file size limitations.\n\n238\n00:13:52,170 --> 00:13:58,580\nAnd so I'm just going to go in here and\nadd in, you know there was a service name,\n\n239\n00:13:58,580 --> 00:14:01,370\nyou'd add in whatever service\naccount it was that you used.\n\n240\n00:14:01,370 --> 00:14:02,560\nI can't remember mine off hand.\n\n241\n00:14:02,560 --> 00:14:05,148\nI'm going to do, authenticated users.\n\n242\n00:14:07,993 --> 00:14:09,400\nThere we go.\n\n243\n00:14:09,400 --> 00:14:11,240\nSo I'll just assign\npermissions to that folder, and\n\n244\n00:14:11,240 --> 00:14:13,130\nlet me create another folder for\nthe other one.\n\n245\n00:14:15,260 --> 00:14:16,100\nWhich was?\n\n246\n00:14:17,930 --> 00:14:19,020\nDid I call these the same thing?\n\n247\n00:14:19,020 --> 00:14:19,520\nI sure did.\n\n248\n00:14:19,520 --> 00:14:20,210\nLet me rename this one.\n\n249\n00:14:20,210 --> 00:14:21,180\nThis one needs to be orders.\n\n250\n00:14:22,592 --> 00:14:28,146\n[SOUND] All right.\n\n251\n00:14:28,146 --> 00:14:29,170\nSo i'm just gonna copy that.\n\n252\n00:14:29,170 --> 00:14:30,170\nAnd i'll make a folder in there.\n\n253\n00:14:30,170 --> 00:14:31,550\nAnd i'll set its permissions too.\n\n254\n00:14:31,550 --> 00:14:34,800\nSo just kind of getting these things\nready to hold the table files that\n\n255\n00:14:34,800 --> 00:14:35,490\nwe're gonna be making.\n\n256\n00:14:35,490 --> 00:14:40,150\nNow, i'm calling these table, but\nit could contain more than one table.\n\n257\n00:14:40,150 --> 00:14:42,980\nYou know, the file can contain as\nmany things as you want in there.\n\n258\n00:14:42,980 --> 00:14:45,050\nBut if I'm gonna be optimizing\na particular table,\n\n259\n00:14:45,050 --> 00:14:46,480\nit'll normally be limited to that.\n\n260\n00:14:46,480 --> 00:14:49,210\nSo you know, just keep in mind your\nnaming conventions or whatever,\n\n261\n00:14:49,210 --> 00:14:50,810\nmight be different.\n\n262\n00:14:51,960 --> 00:14:53,288\nAll right, so we'll go ahead and do that.\n\n263\n00:14:55,198 --> 00:14:58,370\nAll right, now I should be able to\npick that folder without problems.\n\n264\n00:14:58,370 --> 00:15:04,940\nSo I'll take my products table, and I'm\ngonna move that into my products folder,\n\n265\n00:15:04,940 --> 00:15:10,420\nand then I'll do the same thing here with\nmy orders one, and I'll move it there.\n\n266\n00:15:10,420 --> 00:15:12,820\nSo, I'm creating these separate files.\n\n267\n00:15:12,820 --> 00:15:16,280\nIt's still in one database, but now I've\ngot these separate files, that are located\n\n268\n00:15:16,280 --> 00:15:19,479\non different drives, and ideally,\nthese would be separate physical drives.\n\n269\n00:15:20,740 --> 00:15:24,190\nSo I'll go ahead and hit okay on that,\nand it's gonna create those files.\n\n270\n00:15:24,190 --> 00:15:28,790\nSo now my database is actually\ncomprised of several different files.\n\n271\n00:15:28,790 --> 00:15:32,000\nAnd when I look I can see each of the ones\nthat were made there, these little table\n\n272\n00:15:32,000 --> 00:15:35,910\nones, and see how they're set to contain\nrow data, just like the main file.\n\n273\n00:15:35,910 --> 00:15:38,100\nSo they really are just\nlike the main file.\n\n274\n00:15:38,100 --> 00:15:40,950\nTheir just separated, all right.\n\n275\n00:15:40,950 --> 00:15:45,270\nNow whenever I go to create a table or\nview, or a stored procedure, or\n\n276\n00:15:45,270 --> 00:15:46,320\nanything like that.\n\n277\n00:15:46,320 --> 00:15:50,790\nWhen I go to create these, I'll have the\noption of choosing where to store them.\n\n278\n00:15:50,790 --> 00:15:54,270\nI could store them in the main database\nfile, which would be on my main E drive.\n\n279\n00:15:54,270 --> 00:15:58,176\nBut if I know it is going to be a high\nactivity table, I can choose to store it\n\n280\n00:15:58,176 --> 00:16:01,651\non a different drive,\nusing these files that I made, all right.\n\n281\n00:16:01,651 --> 00:16:06,473\nOr maybe, low activity,\nright Maybe you've got something\n\n282\n00:16:06,473 --> 00:16:11,120\nlike old order data,\nold archive information.\n\n283\n00:16:11,120 --> 00:16:15,450\nYou don't want to put that on your really\nfast, really expensive hard drives.\n\n284\n00:16:15,450 --> 00:16:21,490\nMaybe some of these are 15,000\nRPM fiber channel SCSI drives.\n\n285\n00:16:21,490 --> 00:16:28,270\nReally expensive, but other ones\nare 5400 RPM SATA drives, dirt cheap.\n\n286\n00:16:28,270 --> 00:16:30,700\nSo you might create two files.\n\n287\n00:16:30,700 --> 00:16:33,270\nOne that's stored on\nthe super fast drives, and\n\n288\n00:16:33,270 --> 00:16:35,610\none that's stored on\nthe dirt cheap slow drives.\n\n289\n00:16:35,610 --> 00:16:37,900\nAnd when you create your tables,\nyou look at the data and you say,\n\n290\n00:16:37,900 --> 00:16:40,420\nall right,\nhow often am I gonna use this data?\n\n291\n00:16:40,420 --> 00:16:42,950\nIf it's data I use every day,\nI'll put it on the fast drives.\n\n292\n00:16:42,950 --> 00:16:46,830\nIf it's data I just use once in a while,\nI'll stick it on the slow drives, and\n\n293\n00:16:46,830 --> 00:16:48,860\nthat way we're optimizing our storage.\n\n294\n00:16:48,860 --> 00:16:51,520\nWe're using the appropriate storage for\nour need.\n\n295\n00:16:51,520 --> 00:16:53,910\nThat's what these files\ngive us the ability to do.\n\n296\n00:16:55,330 --> 00:16:58,439\nSo now when I go to create\nsomething like creating a table,\n\n297\n00:16:58,439 --> 00:17:01,300\nI just need to tell it which\nfile I want it to reside in.\n\n298\n00:17:01,300 --> 00:17:05,646\nSo now when I go into my inventory\ndatabase and I go into tables,\n\n299\n00:17:05,646 --> 00:17:07,780\nwe don't have any tables yet.\n\n300\n00:17:07,780 --> 00:17:11,748\nYou've got your system tables and\nstuff like that, but I'll go and\n\n301\n00:17:11,748 --> 00:17:12,940\ncreate a new table.\n\n302\n00:17:12,940 --> 00:17:16,036\nWhen we create the new table,\nit's gonna ask us for\n\n303\n00:17:16,036 --> 00:17:18,420\nthings like the column names and so on.\n\n304\n00:17:18,420 --> 00:17:23,320\nAnd in our properties over here, we'll\nsee where it's asking where to store it.\n\n305\n00:17:23,320 --> 00:17:27,670\nSee, I've got my database name,\nmy server name, and as we look in here,\n\n306\n00:17:27,670 --> 00:17:33,320\nwe've got our data space specification and\nour file group.\n\n307\n00:17:33,320 --> 00:17:38,051\nAnd it's supposed to be\ngiving me my file option, and\n\n308\n00:17:38,051 --> 00:17:41,740\nmy file option is not showing up, shoot.\n\n309\n00:17:41,740 --> 00:17:45,530\nWell we'll have to do this from the CLI\nthere because it's not going to give it to\n\n310\n00:17:45,530 --> 00:17:46,890\nme in my properties.\n\n311\n00:17:46,890 --> 00:17:51,426\nBut we can specify that file and tell it,\nhey, instead of going off to one file,\n\n312\n00:17:51,426 --> 00:17:54,470\nuse this other one to\ndirect it into that place.\n\n313\n00:17:54,470 --> 00:17:56,310\nIn the properties here it's\ngiving me my file groups.\n\n314\n00:17:56,310 --> 00:18:00,210\nNow I haven't used the file groups yet,\nand let me talk about those real quick.\n\n315\n00:18:00,210 --> 00:18:05,040\nIf we go into our database, when I\ncreated those files, there was another\n\n316\n00:18:05,040 --> 00:18:09,060\ncolumn there called a file group, and\nI left them all in the same file group.\n\n317\n00:18:09,060 --> 00:18:11,040\nYou'll see it right there, all right?\n\n318\n00:18:11,040 --> 00:18:13,760\nThey're all a part of\nthe primary file group.\n\n319\n00:18:13,760 --> 00:18:17,050\nThe file group,\nit's really used for backups.\n\n320\n00:18:17,050 --> 00:18:20,950\nWhen we back up our database,\nyou back it up based on a file group.\n\n321\n00:18:20,950 --> 00:18:25,410\nEverything is in the primary file group by\ndefault and that's normally what you want.\n\n322\n00:18:25,410 --> 00:18:29,280\nSo when you back up the primary file group\nyou'll get all of these files, right,\n\n323\n00:18:29,280 --> 00:18:30,910\nall of your database.\n\n324\n00:18:30,910 --> 00:18:35,560\nBut if we want to back up\nan individual table you really can't.\n\n325\n00:18:35,560 --> 00:18:38,450\nThere really isn't a good way\nto do that inside of SQL.\n\n326\n00:18:38,450 --> 00:18:41,645\nSo if we wanna do that,\nwe need to use multiple file groups, and\n\n327\n00:18:41,645 --> 00:18:43,575\nthen we can back up the table by itself.\n\n328\n00:18:43,575 --> 00:18:45,135\nIt also makes it easy for\n\n329\n00:18:45,135 --> 00:18:47,225\ndoing other assignments,\nlike what I'm trying to do here.\n\n330\n00:18:47,225 --> 00:18:50,175\nIf I wanna assign this\ntable to a particular file,\n\n331\n00:18:50,175 --> 00:18:53,902\nI can move it into its own file group,\nand then that becomes easier to do.\n\n332\n00:18:53,902 --> 00:18:55,762\nSo, you'll see where I've\ngot that option here.\n\n333\n00:18:55,762 --> 00:18:57,222\nNow, the only problem is,\n\n334\n00:18:57,222 --> 00:19:00,342\nonce a file has been created,\nI can't change that file group.\n\n335\n00:19:00,342 --> 00:19:05,302\nSo, see if I try and click on that,\nI can't modify it, it's stuck, right?\n\n336\n00:19:05,302 --> 00:19:08,782\nSo, this is, again, it kinda goes\nback to the whole planning idea.\n\n337\n00:19:08,782 --> 00:19:12,332\nIf we plan for this stuff ahead of time,\nwe can design it properly.\n\n338\n00:19:12,332 --> 00:19:15,910\nSo I'm gonna remove those files.\n\n339\n00:19:15,910 --> 00:19:18,467\nSo now they're gone and\nI'll just hit OK to\n\n340\n00:19:18,467 --> 00:19:23,170\nmake sure that takes effect which it is\ntelling me the table order is not empty.\n\n341\n00:19:23,170 --> 00:19:26,610\nOh, it's because I left my little\ntable creation window open there.\n\n342\n00:19:26,610 --> 00:19:30,315\nSo let me just get out of those and\nnow we'll go back into it.\n\n343\n00:19:31,365 --> 00:19:34,315\nEven though I hadn't hit OK to\ncreate the table, I have locks in\n\n344\n00:19:34,315 --> 00:19:37,195\nplace to say that I was about to create\none so it was just upset about that.\n\n345\n00:19:38,315 --> 00:19:41,935\nBut we can go in and we can remove these\nand then when we recreate them we'll be\n\n346\n00:19:41,935 --> 00:19:45,385\nable to come in and specify\nan alternate file group, all right.\n\n347\n00:19:47,360 --> 00:19:50,090\nAnd it seems to think\nthat it's still in place.\n\n348\n00:19:50,090 --> 00:19:52,290\nTable orders cannot be removed\nbecause it is not empty.\n\n349\n00:19:57,730 --> 00:19:59,430\nWonder what data it thinks is in there.\n\n350\n00:20:01,260 --> 00:20:02,240\nLet me just refresh and\n\n351\n00:20:02,240 --> 00:20:05,460\ncheck my tables to make sure there's\nnot actually anything in there.\n\n352\n00:20:05,460 --> 00:20:06,540\nI haven't created any tables.\n\n353\n00:20:10,740 --> 00:20:15,060\nIf there's an outstanding action, I might\nhave to just wait for it to time out.\n\n354\n00:20:15,060 --> 00:20:18,100\nWhen you create a lock on something,\nwhen you go to perform an action in SQL,\n\n355\n00:20:18,100 --> 00:20:21,050\nit has to make sure you're not competing\nwith other users in the system and so\n\n356\n00:20:21,050 --> 00:20:22,070\nit will create locks.\n\n357\n00:20:22,070 --> 00:20:23,840\nThey're called intent locks.\n\n358\n00:20:23,840 --> 00:20:27,710\nAnd it shows that you have the intention\nof making a particular change.\n\n359\n00:20:27,710 --> 00:20:31,670\nSo in this case it's holding that file\nopen because it saw where I was intending\n\n360\n00:20:31,670 --> 00:20:33,190\nto create a table.\n\n361\n00:20:33,190 --> 00:20:37,600\nThat shouldn't be a problem, but\nit certainly seems to think so.\n\n362\n00:20:37,600 --> 00:20:39,240\nI'm the only one in the database.\n\n363\n00:20:39,240 --> 00:20:43,357\nIf it continues to give me this error, I\ncan move the server into single-user mode.\n\n364\n00:20:43,357 --> 00:20:48,209\nIn single-user mode it'll basically\nkick everyone out except me, and so\n\n365\n00:20:48,209 --> 00:20:51,837\nI can then get in and\nmake that change that I need to make.\n\n366\n00:20:51,837 --> 00:20:54,830\nWe're going to cover that in\nthe troubleshooting episode, so\n\n367\n00:20:54,830 --> 00:20:57,097\nI kind of had hoped not to\nhave to deal with that.\n\n368\n00:20:57,097 --> 00:21:00,157\nYou know actually it complained there,\nbut then it seems to have removed it.\n\n369\n00:21:03,077 --> 00:21:05,050\nYeah it is freaking out.\n\n370\n00:21:05,050 --> 00:21:08,140\nLet me just restart my\nSQL server real quick.\n\n371\n00:21:08,140 --> 00:21:09,130\nThat's another way.\n\n372\n00:21:09,130 --> 00:21:11,010\nIt's a little more\nheavy-handed to restart it.\n\n373\n00:21:11,010 --> 00:21:14,930\nThis will kick everyone out, and it should\nlet me get in there and knock that out.\n\n374\n00:21:14,930 --> 00:21:17,110\nIf it's still fussing with it,\nI can go a different route.\n\n375\n00:21:17,110 --> 00:21:21,390\nBut basically we can go in and\nwe can create additional file groups.\n\n376\n00:21:21,390 --> 00:21:22,640\nAnd then when we create these files,\n\n377\n00:21:22,640 --> 00:21:24,570\nwe can stick them in\nthe appropriate file group.\n\n378\n00:21:24,570 --> 00:21:26,420\nThat will give us the ability\nto back those up.\n\n379\n00:21:26,420 --> 00:21:31,870\nThe neat part about it is, if you ever\nwanted to restore just a particular table,\n\n380\n00:21:31,870 --> 00:21:34,870\nif that table's in a file group by itself,\nit's super easy.\n\n381\n00:21:34,870 --> 00:21:36,970\nYou can restore just that file group.\n\n382\n00:21:36,970 --> 00:21:40,660\nThat table gets rolled back and the whole\nrest of your database is left alone.\n\n383\n00:21:40,660 --> 00:21:41,780\nWe'll see that in the backup and\n\n384\n00:21:41,780 --> 00:21:44,720\nrestore episode when we start\ntackling those different scenarios.\n\n385\n00:21:44,720 --> 00:21:48,100\nBut for\nnow I had not wanted to get into all that.\n\n386\n00:21:48,100 --> 00:21:51,390\nLet's see, if this won't let\nme do it I'll just force it.\n\n387\n00:21:54,570 --> 00:21:56,150\nAnd it's still complaining.\n\n388\n00:21:56,150 --> 00:21:59,010\nAll right, well let's do this.\n\n389\n00:21:59,010 --> 00:22:01,560\nIf we take a look at our file groups,\nI'm just going to go to the file groups\n\n390\n00:22:01,560 --> 00:22:03,850\noption, you'll see that\nprimary file group.\n\n391\n00:22:03,850 --> 00:22:06,470\nAnd see how it's telling me\nthere's only two files in there?\n\n392\n00:22:06,470 --> 00:22:09,160\nWell I know that's wrong\nbecause there's three files.\n\n393\n00:22:09,160 --> 00:22:14,900\nSo I'm gonna refresh my screen and\nit has just gotten out of sync somehow.\n\n394\n00:22:14,900 --> 00:22:16,680\nYeah now it's back up to three again.\n\n395\n00:22:16,680 --> 00:22:19,760\nBut it shows that I've got the primary\nfile group and it shows that those three\n\n396\n00:22:19,760 --> 00:22:24,560\nfiles are in there but\nwe can start to create other file groups.\n\n397\n00:22:24,560 --> 00:22:28,490\nSo I might create a file group\ncalled orders, right, or\n\n398\n00:22:28,490 --> 00:22:30,730\nI'll just preface this with TBL.\n\n399\n00:22:30,730 --> 00:22:33,720\nSo I know that this is going\nto be my orders table.\n\n400\n00:22:33,720 --> 00:22:35,510\nThat's what's going to be in that one.\n\n401\n00:22:35,510 --> 00:22:38,670\nAnd I can add another one for\nTBL products.\n\n402\n00:22:38,670 --> 00:22:42,080\nAnd that's going to be where my\nproducts table is going to reside.\n\n403\n00:22:42,080 --> 00:22:45,250\nAnd now I can attach\nfiles to that file group.\n\n404\n00:22:45,250 --> 00:22:49,440\nAnd as we go forward and\nwe start to create our database tables,\n\n405\n00:22:49,440 --> 00:22:52,260\nwe can pick that file group and\nit'll reside right in there.\n\n406\n00:22:52,260 --> 00:22:55,200\nNow there's no files in it,\nso I still need to add that.\n\n407\n00:22:55,200 --> 00:22:59,450\nNotice a few other options I've got here,\nwhether it's read-only or not, okay?\n\n408\n00:22:59,450 --> 00:23:03,560\nIf this is archive data I don't\nwant anybody to change it.\n\n409\n00:23:03,560 --> 00:23:07,398\nSo, if I had a file group here for\narchive, right here, well, yeah,\n\n410\n00:23:07,398 --> 00:23:09,040\nwe'll just call it archive.\n\n411\n00:23:09,040 --> 00:23:12,754\nAll right, and I want to put all my old\ndata over there in this archive file group\n\n412\n00:23:12,754 --> 00:23:14,680\nbecause it's on slowest origin stuff.\n\n413\n00:23:14,680 --> 00:23:18,350\nI might wanna flag that as read-only so\npeople don't change it.\n\n414\n00:23:18,350 --> 00:23:20,970\nThe nice thing about read-only\nis I can back it up once and\n\n415\n00:23:20,970 --> 00:23:23,870\nI don't have to back it up anymore\nbecause I know it's not gonna change.\n\n416\n00:23:23,870 --> 00:23:28,690\nIt's read-only, so now it's reducing my\nback-up window because I've got that.\n\n417\n00:23:28,690 --> 00:23:31,340\nBut, if it's read-only,\nhow do I get data in there?\n\n418\n00:23:31,340 --> 00:23:33,120\nWell, you'll have to turn it off for\n\n419\n00:23:33,120 --> 00:23:38,130\na moment, copy all the data in there and\nthen flag it as read-only.\n\n420\n00:23:38,130 --> 00:23:42,380\nAnd then as you populate that archive\ndata once a year, whatever, you can use\n\n421\n00:23:42,380 --> 00:23:47,000\nthe alter database command to go in and\nturn this off and on to copy data into it.\n\n422\n00:23:48,580 --> 00:23:52,040\nWe also have the default column here which\nis where we specify when I create a new\n\n423\n00:23:52,040 --> 00:23:55,200\ntable, which file group\ndoes it default to?\n\n424\n00:23:55,200 --> 00:23:57,908\nWell, it defaults to primary,\ncuz that's the only one you have normally.\n\n425\n00:23:57,908 --> 00:24:02,650\nBut as we add other ones, I might want all\nnew tables to go into this particular file\n\n426\n00:24:02,650 --> 00:24:05,147\ngroup or another one so\nI can specify that.\n\n427\n00:24:05,147 --> 00:24:07,358\nNow I'm gonna leave mine at Primary.\n\n428\n00:24:07,358 --> 00:24:11,680\nWhen somebody creates a new table,\nI want it to go into that main one.\n\n429\n00:24:11,680 --> 00:24:14,400\nI just want orders and\nproducts to be in these other file groups.\n\n430\n00:24:14,400 --> 00:24:16,490\nSo I don't want them to be used for\nanything else.\n\n431\n00:24:16,490 --> 00:24:18,080\nSo I'll leave them as not the default.\n\n432\n00:24:19,240 --> 00:24:19,940\nAll right.\n\n433\n00:24:19,940 --> 00:24:22,070\nWhen we say OK to that,\nthat creates our file group.\n\n434\n00:24:24,050 --> 00:24:26,870\nSo now I've got those different\nfile groups in place.\n\n435\n00:24:26,870 --> 00:24:31,170\nAnd when I go back to my files,\nit's still, I can't change these, right.\n\n436\n00:24:31,170 --> 00:24:34,320\nI've gotta get rid of those tables and\nbring it back in.\n\n437\n00:24:34,320 --> 00:24:36,990\nOr not the tables, but the files.\n\n438\n00:24:36,990 --> 00:24:39,910\nMy only problem right now is it's\ntelling me those files are not empty,\n\n439\n00:24:39,910 --> 00:24:42,830\nwhich is funny cuz I haven't\nmoved anything into them.\n\n440\n00:24:42,830 --> 00:24:46,170\nSo, until I can figure out\nwhy it's throwing that error.\n\n441\n00:24:47,520 --> 00:24:48,180\nIt's still doing it.\n\n442\n00:24:48,180 --> 00:24:50,260\nIt's telling me that's it's not empty.\n\n443\n00:24:50,260 --> 00:24:53,200\nHm.\nI'm going to have to find out what it\n\n444\n00:24:53,200 --> 00:24:54,670\nseems to think is in there.\n\n445\n00:24:55,940 --> 00:24:59,320\nI have no idea what it would\nthink is actually in those files.\n\n446\n00:24:59,320 --> 00:25:01,190\nThey should actually be empty.\n\n447\n00:25:01,190 --> 00:25:05,380\nNow you can't judge by the file size\nbecause we set a minimum file size.\n\n448\n00:25:05,380 --> 00:25:06,930\nI set mine to four megs.\n\n449\n00:25:06,930 --> 00:25:08,300\nSo when it made those files.\n\n450\n00:25:08,300 --> 00:25:12,570\nIf I browse in here and locate them,\nI can see that they're formatted in size.\n\n451\n00:25:12,570 --> 00:25:14,130\nSo it could be empty, or\n\n452\n00:25:14,130 --> 00:25:17,400\nthere could actually be something in\nthere that's smaller than four megs.\n\n453\n00:25:17,400 --> 00:25:21,170\nAnother thing worth noticing,\nis look at the file name, NDF.\n\n454\n00:25:21,170 --> 00:25:24,250\nMDF, m as in Mike, right?\n\n455\n00:25:24,250 --> 00:25:26,360\nThat's your main database file.\n\n456\n00:25:26,360 --> 00:25:31,110\nBut an n, n as in Nancy, NDF file,\nthat's a secondary file.\n\n457\n00:25:31,110 --> 00:25:35,420\nAny additional files you add to\nthe database will have an NDF extension.\n\n458\n00:25:35,420 --> 00:25:39,370\nSo we have LDF for logs, MDF for\n\n459\n00:25:39,370 --> 00:25:44,260\nthe main database, and NDF for\nany secondary files that we might add.\n\n460\n00:25:44,260 --> 00:25:46,879\nSo, just be aware that there is\na slightly different extension there.\n\n461\n00:25:48,370 --> 00:25:49,800\nAll right, well let's do this.\n\n462\n00:25:49,800 --> 00:25:53,440\nLet's stop here and take a break, and\nduring the break, I'm going to hit this\n\n463\n00:25:53,440 --> 00:25:57,670\nwith a hammer and find out why it thinks\nthere's data in this empty file group.\n\n464\n00:25:57,670 --> 00:26:01,630\nSo let me give that a shot and we'll\npick back up with that after the break.\n\n465\n00:26:01,630 --> 00:26:02,810\nSo stay tuned.\n\n466\n00:26:02,810 --> 00:26:08,055\nWe'll be back after this.\n\n467\n00:26:08,055 --> 00:26:12,833\n[NOISE] All right welcome back everybody.\n\n468\n00:26:12,833 --> 00:26:16,930\nSo before the break I was having a little\nbit of a problem dropping a file.\n\n469\n00:26:16,930 --> 00:26:20,570\nA file that I've just created\nthat it said wasn't empty.\n\n470\n00:26:20,570 --> 00:26:22,960\nNow I knew it was empty but\nthe system didn't so\n\n471\n00:26:22,960 --> 00:26:24,710\nthere was a little bit of a conflict.\n\n472\n00:26:24,710 --> 00:26:29,290\nSo I started with the easy approach,\nwhich was just to restart the SQL server.\n\n473\n00:26:29,290 --> 00:26:32,560\nThat normally clears out whatever\nit was doing and gives it a go.\n\n474\n00:26:32,560 --> 00:26:34,360\nYou guys saw me do that but\nthat didn't work.\n\n475\n00:26:34,360 --> 00:26:37,060\nSo I said it's time to\nhit it with a hammer.\n\n476\n00:26:37,060 --> 00:26:38,780\nWell, let me show you what I mean.\n\n477\n00:26:39,960 --> 00:26:41,560\nHere I've got the same command.\n\n478\n00:26:41,560 --> 00:26:44,340\nThis is what I was trying\nto do just a moment ago.\n\n479\n00:26:44,340 --> 00:26:48,840\nBasically, I'm saying use inventory, so\nI'm connecting to my inventory database.\n\n480\n00:26:48,840 --> 00:26:56,730\nAnd I'm saying, alter database inventory\nREMOVE FILE Inventory_tbl_Products.\n\n481\n00:26:56,730 --> 00:26:59,520\nSo I'm just saying don't\ntake the database offline.\n\n482\n00:26:59,520 --> 00:27:02,210\nDon't damage the database,\nbut modify it, right?\n\n483\n00:27:02,210 --> 00:27:06,040\nAlter it and\nremove the inventory table products file.\n\n484\n00:27:06,040 --> 00:27:09,300\nThat's basically what I was\ndoing in the GUI, right?\n\n485\n00:27:09,300 --> 00:27:12,140\nBut when we run that,\nyou'll see I get that same error.\n\n486\n00:27:12,140 --> 00:27:14,660\nThat file cannot be removed\nbecause it is not empty.\n\n487\n00:27:15,950 --> 00:27:21,620\nTo get around that, I need to force\nthe system to know that the file is empty.\n\n488\n00:27:21,620 --> 00:27:23,170\nRight?\nThere's nothing there.\n\n489\n00:27:23,170 --> 00:27:27,740\nSo we have a special utility called DBCC.\n\n490\n00:27:27,740 --> 00:27:33,790\nDBCC is a utility built into SQL\nthat lets us work with, our files.\n\n491\n00:27:33,790 --> 00:27:36,060\nNormally we don't have to worry about it.\n\n492\n00:27:36,060 --> 00:27:40,760\nDBCC is something that runs in\nthe background, we don't mess with it.\n\n493\n00:27:40,760 --> 00:27:43,610\nAutogrow, in the last episode\nwe talked about autogrow,\n\n494\n00:27:43,610 --> 00:27:47,390\nso that when our database files fill up,\nthey can grow larger.\n\n495\n00:27:47,390 --> 00:27:49,370\nIt's DBCC that makes that happen,\n\n496\n00:27:49,370 --> 00:27:52,840\nit's what's actually growing those\nfiles it's all automated, right?\n\n497\n00:27:53,840 --> 00:27:54,700\nOne thing I didn't mention,\n\n498\n00:27:54,700 --> 00:27:59,460\nthough, is that those files will\ngrow as we put data in them.\n\n499\n00:27:59,460 --> 00:28:04,710\nBut, if you start to delete data out of\nyour database, the database never shrinks.\n\n500\n00:28:04,710 --> 00:28:08,850\nIt never shrinks back to free\nup the space that was out there.\n\n501\n00:28:08,850 --> 00:28:12,080\nIf we wanna do that if we\nwanna shrink the database.\n\n502\n00:28:12,080 --> 00:28:14,871\nWe have to manually do it using DBCC.\n\n503\n00:28:14,871 --> 00:28:20,189\nYou can also use DBCC to empty out\na file and that's what I wanna do here.\n\n504\n00:28:20,189 --> 00:28:23,800\nIs i wanna take this file and\nensure that it's empty and\n\n505\n00:28:23,800 --> 00:28:28,590\nwe can do that using a slight\nmodification of what i just showed you.\n\n506\n00:28:28,590 --> 00:28:32,200\nHere's that same command, use inventory,\nalter database inventory,\n\n507\n00:28:32,200 --> 00:28:35,160\nremove inventory table products.\n\n508\n00:28:35,160 --> 00:28:38,290\nBut, I've added one extra entry\nin here which is DBCC SHRINKFILE.\n\n509\n00:28:39,300 --> 00:28:43,560\nAnd normally what you would do is\nyou would say DBCC SHRINKFILE,\n\n510\n00:28:43,560 --> 00:28:46,600\nthe name of the file that you\nare trying to shrink, and\n\n511\n00:28:46,600 --> 00:28:49,060\nthen the amount of space\nyou wanted to shrink it by.\n\n512\n00:28:49,060 --> 00:28:52,290\nThis would normally be a number or\na percentage, right?\n\n513\n00:28:52,290 --> 00:28:53,860\nShrink it by 10%.\n\n514\n00:28:53,860 --> 00:28:56,500\nRecover ten megs, or whatever, right?\n\n515\n00:28:56,500 --> 00:28:58,220\nThat's what you would specify here.\n\n516\n00:28:58,220 --> 00:29:01,940\nBut in my case, I'm using a variation\nof the command called empty file.\n\n517\n00:29:01,940 --> 00:29:05,660\nI'm saying empty it out,\njust get whatever's in there out.\n\n518\n00:29:05,660 --> 00:29:07,560\nI don't actually have any data in there.\n\n519\n00:29:07,560 --> 00:29:10,870\nSo whatever you think is in there,\njust wipe it out, okay?\n\n520\n00:29:10,870 --> 00:29:13,970\nSo this is a really heavy handed command,\nyou wouldn't normally use this,\n\n521\n00:29:13,970 --> 00:29:15,810\ncuz if you had tables in there,\nwhat would this do?\n\n522\n00:29:15,810 --> 00:29:17,570\nIt would delete the tables, right?\n\n523\n00:29:17,570 --> 00:29:20,640\nIt would at least delete their storage,\nwhich would break the table, and\n\n524\n00:29:20,640 --> 00:29:21,660\nthat would be a bad thing.\n\n525\n00:29:21,660 --> 00:29:23,730\nSo, this is not a command\nthat I normally use,\n\n526\n00:29:23,730 --> 00:29:26,350\nand it's not one that I really\nwanted to cover just yet.\n\n527\n00:29:26,350 --> 00:29:29,320\nBut since it's fighting with me\non dealing with the database,\n\n528\n00:29:29,320 --> 00:29:30,960\nI'm gonna have to do it, all right?\n\n529\n00:29:30,960 --> 00:29:34,780\nSo, we'll take a look at this shrink\nfile command again a little bit\n\n530\n00:29:34,780 --> 00:29:38,640\nlater in the backup episode, cuz we're\ngonna talk about our transaction logs and\n\n531\n00:29:38,640 --> 00:29:41,410\nhow they can grow and grow and\ngrow if we're not careful.\n\n532\n00:29:41,410 --> 00:29:42,820\nSo we'll see it again.\n\n533\n00:29:42,820 --> 00:29:46,560\nBut for right now, I'm just gonna use that\nto empty the file and then remove it.\n\n534\n00:29:46,560 --> 00:29:50,760\nAnd so when I run that, now I don't\nget an error message down here.\n\n535\n00:29:50,760 --> 00:29:55,300\nI just get a message telling me that it\nwas able to shrink the file and empty it.\n\n536\n00:29:55,300 --> 00:30:00,310\nNow, the current size and minimum size,\nnotice how they're still the same.\n\n537\n00:30:00,310 --> 00:30:02,230\nIt didn't actually shrink it at all.\n\n538\n00:30:02,230 --> 00:30:05,800\nIt just emptied out whatever\nthe server thought was in there.\n\n539\n00:30:05,800 --> 00:30:08,630\nAnd then it ran the ALTER DATABASE\ncommand to remove it.\n\n540\n00:30:08,630 --> 00:30:10,540\nThat file should be gone.\n\n541\n00:30:10,540 --> 00:30:12,640\nNow, I just did that for\nthe Products file.\n\n542\n00:30:12,640 --> 00:30:14,610\nI did it for\nthe Orders file during the break.\n\n543\n00:30:14,610 --> 00:30:15,850\nSo those should both be gone.\n\n544\n00:30:15,850 --> 00:30:18,020\nI'm just gonna go and double check that.\n\n545\n00:30:18,020 --> 00:30:19,250\nAnd make sure they're out of there.\n\n546\n00:30:20,540 --> 00:30:22,680\nAnd sure enough they are.\n\n547\n00:30:22,680 --> 00:30:25,130\nNow we've got our file\ngroups that we've made.\n\n548\n00:30:25,130 --> 00:30:27,410\nSo I've got that table\nProducts file group and\n\n549\n00:30:27,410 --> 00:30:30,910\nI guess I never made a table orders one so\nI'll add that one in here.\n\n550\n00:30:30,910 --> 00:30:33,320\nAnd do table Orders.\n\n551\n00:30:34,500 --> 00:30:37,710\nAll right so now we've got those\nfile groups that are in place.\n\n552\n00:30:37,710 --> 00:30:38,430\nThere they are.\n\n553\n00:30:38,430 --> 00:30:40,530\nI don't have them set as default or\nanything like that so\n\n554\n00:30:40,530 --> 00:30:41,970\nI'll just leave them the way they are.\n\n555\n00:30:41,970 --> 00:30:44,970\nAnd I'm gonna hit okay to\nmake that apply right now.\n\n556\n00:30:44,970 --> 00:30:47,840\nAnd then I'm going to recreate\nthose two files putting them in\n\n557\n00:30:47,840 --> 00:30:49,620\ntheir appropriate file groups.\n\n558\n00:30:49,620 --> 00:30:54,427\nSo now when I come in here and\n\n559\n00:30:54,427 --> 00:30:58,817\nadd some files, I can add\n\n560\n00:30:58,817 --> 00:31:03,836\ninventory table products,\n\n561\n00:31:03,836 --> 00:31:11,170\nand inventory table orders all right?\n\n562\n00:31:11,170 --> 00:31:12,810\nI'll take inventory table products and\n\n563\n00:31:12,810 --> 00:31:16,530\nI'll change its file group to\nthe table products file group.\n\n564\n00:31:16,530 --> 00:31:19,930\nAnd I'll take orders and\nI'll move it to the orders file groups.\n\n565\n00:31:19,930 --> 00:31:22,580\nNow they're in their own file groups,\nso when I go to do backups,\n\n566\n00:31:22,580 --> 00:31:24,320\nI can backup the whole database.\n\n567\n00:31:24,320 --> 00:31:27,440\nOr I could backup just the Orders table or\njust the Products table.\n\n568\n00:31:29,600 --> 00:31:31,840\nAnd then over here I\ncan change their paths.\n\n569\n00:31:31,840 --> 00:31:37,157\nI'm gonna put the products in the Products\npath, which I have to remember\n\n570\n00:31:37,157 --> 00:31:42,243\nwhere I put that, there, and\nI'll put the orders in the Orders path.\n\n571\n00:31:44,995 --> 00:31:45,700\nThere.\n\n572\n00:31:45,700 --> 00:31:50,070\nSo now, not only are the files\nspread across multiple hard drives,\n\n573\n00:31:50,070 --> 00:31:52,710\nbut I'm also able to back\nthem up independently now.\n\n574\n00:31:52,710 --> 00:31:55,240\nSo I get a lot of power and\na lot of functionality out of this.\n\n575\n00:31:55,240 --> 00:31:56,383\nBut notice what I had to do there.\n\n576\n00:31:56,383 --> 00:31:58,927\nThese are hard things to\nchange after the fact.\n\n577\n00:31:58,927 --> 00:32:02,189\nI had to completely remove the file\nto reassign it to another file group.\n\n578\n00:32:02,189 --> 00:32:07,740\nSo that's why its so important to do\nthis before we start loading our data.\n\n579\n00:32:07,740 --> 00:32:11,640\nImagine if we had a terabyte of database\ndata in there, to drop this and\n\n580\n00:32:11,640 --> 00:32:15,230\nmove the data and all that, it would\ncreate a pretty big downtime window.\n\n581\n00:32:15,230 --> 00:32:18,840\nBut if we design it right from the very\nbeginning it makes a difference.\n\n582\n00:32:18,840 --> 00:32:22,200\nSo that's why we're tackling this so\nearly on in the show.\n\n583\n00:32:22,200 --> 00:32:24,860\nAlright, so I've got those set now,\nI'll go ahead and hit okay.\n\n584\n00:32:24,860 --> 00:32:28,711\nSo it's now gonna create that\ninfrastructure for me and if I go and\n\n585\n00:32:28,711 --> 00:32:32,911\nlook at my drives, I should be able\nto see in here on my inventory drive,\n\n586\n00:32:32,911 --> 00:32:34,744\nI've got that NDF file there.\n\n587\n00:32:34,744 --> 00:32:35,370\nAnd on my orders drive,\nI've got that NDF file there.\n\n588\n00:32:39,570 --> 00:32:42,210\nSo now my database is nice and spread out.\n\n589\n00:32:42,210 --> 00:32:46,490\nWhen I create a table, so\nI'll go here and I'll create a new table.\n\n590\n00:32:46,490 --> 00:32:50,830\nI'm gonna create my orders table and so if\nI look in the properties for that table,\n\n591\n00:32:50,830 --> 00:32:55,270\nI'll give it a name,\nI'm a call this one, orders, all right.\n\n592\n00:32:55,270 --> 00:33:00,160\nAnd then down here, in the space for\nit, instead of the primary file group,\n\n593\n00:33:00,160 --> 00:33:02,410\nI'll choose the table orders file group.\n\n594\n00:33:02,410 --> 00:33:07,230\nAnd that's gonna ensure that this\ntable gets stored on that other drive.\n\n595\n00:33:07,230 --> 00:33:09,170\nSo it's not gonna contend\nwith the other one.\n\n596\n00:33:09,170 --> 00:33:13,910\nNow I just start to, you know, create\nmy columns and set up whatever it is.\n\n597\n00:33:13,910 --> 00:33:18,190\nYou know, so if I've got a,\nwhat is this my, which table am I doing?\n\n598\n00:33:18,190 --> 00:33:20,210\nProducts or orders.\n\n599\n00:33:20,210 --> 00:33:21,220\nI'm doing orders.\n\n600\n00:33:21,220 --> 00:33:25,950\nSo each order would have an ID and\nusually like a customer.\n\n601\n00:33:25,950 --> 00:33:29,310\nA total items purchased.\n\n602\n00:33:29,310 --> 00:33:32,250\nWhatever it is that I'm going\nto be storing in this table.\n\n603\n00:33:32,250 --> 00:33:36,400\nWe go ahead and define all those and\nwe create the table.\n\n604\n00:33:36,400 --> 00:33:40,500\nNow that table exists in my database,\nbut it's stored in a dedicated file.\n\n605\n00:33:40,500 --> 00:33:43,420\nAnd I'll probably need to create\nother tables, like my products table.\n\n606\n00:33:45,370 --> 00:33:46,970\nSo this one is going to\nbe my products table.\n\n607\n00:33:49,990 --> 00:33:51,430\nI'll just give it a name of products.\n\n608\n00:33:52,580 --> 00:33:55,485\nAnd I'm going to store it\nin its own file group.\n\n609\n00:33:55,485 --> 00:33:57,455\nSee how it defaulted to primary.\n\n610\n00:33:57,455 --> 00:34:00,865\nSo that's what we do normally, but\nI'm just gonna change that to products.\n\n611\n00:34:00,865 --> 00:34:06,119\nAnd now each product probably has an ID,\na name, a cost,\n\n612\n00:34:06,119 --> 00:34:12,145\na quantity, I need to track how\nmany I've got in inventory.\n\n613\n00:34:12,145 --> 00:34:15,410\nSo those are all different things\nthat I may want to track there.\n\n614\n00:34:15,410 --> 00:34:18,090\nAnd I'll save that, all right.\n\n615\n00:34:18,090 --> 00:34:20,710\nSo when I'm looking in my inventory\ndatabase, here's inventory,\n\n616\n00:34:20,710 --> 00:34:24,890\nand when I go under my tables I see\nthat I've got orders and products.\n\n617\n00:34:24,890 --> 00:34:27,220\nThere's those two tables that I've got.\n\n618\n00:34:27,220 --> 00:34:30,130\nLooking at this logically,\nI don't know that they're stored on\n\n619\n00:34:30,130 --> 00:34:32,920\nseparate hard drives, I don't know\nthat they're in separate file groups.\n\n620\n00:34:32,920 --> 00:34:34,400\nThat's all hidden from me.\n\n621\n00:34:34,400 --> 00:34:36,920\nSo your developers,\nright, the programmers,\n\n622\n00:34:36,920 --> 00:34:39,370\nthe people that are writing your software,\nthey don't see this.\n\n623\n00:34:39,370 --> 00:34:41,640\nThis is invisible to them, but\n\n624\n00:34:41,640 --> 00:34:45,120\nyou as the server administrator,\nyou know all about this.\n\n625\n00:34:45,120 --> 00:34:47,260\nThis is how you're optimizing performance,\n\n626\n00:34:47,260 --> 00:34:50,140\nby putting these tables in\ndifferent locations, right?\n\n627\n00:34:50,140 --> 00:34:54,300\nSo it's important that we understand\nhow this works and why we do it.\n\n628\n00:34:54,300 --> 00:34:57,410\nBecause to the developer, it doesn't\nmake a single bit of difference to them.\n\n629\n00:34:57,410 --> 00:34:58,900\nThey don't even know it's happening.\n\n630\n00:34:58,900 --> 00:35:00,910\nSo they don't care about file groups.\n\n631\n00:35:00,910 --> 00:35:02,180\nThey're not going to tell you that.\n\n632\n00:35:02,180 --> 00:35:05,930\nThey're going to say, hey I need you to\ncreate a new table for me called orders.\n\n633\n00:35:05,930 --> 00:35:08,190\nAnd I'm going to start putting a bunch\nof stuff in there and working with it.\n\n634\n00:35:08,190 --> 00:35:09,010\nAll right.\n\n635\n00:35:09,010 --> 00:35:12,490\nThey don't say, hey, I really need you to\nmake sure this is on optimized storage.\n\n636\n00:35:12,490 --> 00:35:15,370\nThis is going to be heavy reads or\nheavy writes or whatever.\n\n637\n00:35:15,370 --> 00:35:19,530\nThat's information we need to get from\nthem and use as part of our design.\n\n638\n00:35:19,530 --> 00:35:24,750\nSo now, my database is spread out across\nthree separate hard drives, right?\n\n639\n00:35:24,750 --> 00:35:28,550\nAll of my normal tables are stored on my,\nwhat did we do?\n\n640\n00:35:28,550 --> 00:35:29,640\nThe E drive, I think, for that.\n\n641\n00:35:31,020 --> 00:35:32,310\nLet's find out here.\n\n642\n00:35:32,310 --> 00:35:35,450\nSo, all of my normal stuff,\nmy main database,\n\n643\n00:35:35,450 --> 00:35:38,158\nmy primary file group,\nthat's all being stored on my E drive.\n\n644\n00:35:38,158 --> 00:35:44,030\nBut the orders table,\nis being stored on my I drive.\n\n645\n00:35:44,030 --> 00:35:45,900\nMy products is on the H drive.\n\n646\n00:35:45,900 --> 00:35:48,500\nAnd those can be completely\ndifferent types of storage.\n\n647\n00:35:48,500 --> 00:35:50,900\nReally, really neat stuff there.\n\n648\n00:35:50,900 --> 00:35:53,540\nBut we've gotta know to do\nthat design ahead of time.\n\n649\n00:35:54,550 --> 00:35:56,808\nIf we have to do it after the fact.\n\n650\n00:35:56,808 --> 00:36:00,870\nYou go ahead and add in the file group,\nyou create the file, you do all that, but\n\n651\n00:36:00,870 --> 00:36:06,020\nyou've gotta drop the table and recreate\nit, moving it into that other file group.\n\n652\n00:36:06,020 --> 00:36:08,110\nSo, if I had done that.\n\n653\n00:36:08,110 --> 00:36:09,330\nI'll create a table here.\n\n654\n00:36:10,470 --> 00:36:12,300\nSo I'm gonna create a new table and\n\n655\n00:36:12,300 --> 00:36:17,610\nthis will just be, what else might\nwe have here under inventory?\n\n656\n00:36:17,610 --> 00:36:23,790\nWe might have sales, sales totals or\n\n657\n00:36:23,790 --> 00:36:30,170\nsomething like that, so\nthis might be my sales reports table.\n\n658\n00:36:30,170 --> 00:36:34,530\nIn here I'm not tracking inventory items,\nI'm not tracking orders, but I'm tracking\n\n659\n00:36:34,530 --> 00:36:38,030\nsummary data of how many sales I had\neach month, or something like that.\n\n660\n00:36:38,030 --> 00:36:40,120\nThese would be my sales reports.\n\n661\n00:36:40,120 --> 00:36:44,170\nAnd let's say that I create it right here\nin my primary file group, all right.\n\n662\n00:36:44,170 --> 00:36:45,490\nSo this is the table.\n\n663\n00:36:45,490 --> 00:36:51,185\nSo I'll have an ID, maybe month values,\n\n664\n00:36:51,185 --> 00:36:54,670\ntotal sales.\n\n665\n00:36:54,670 --> 00:36:56,710\nAnd I'm not messing with data types, but\n\n666\n00:36:56,710 --> 00:37:00,106\nnormally we'd come in and\nsay like total sales would be a currency.\n\n667\n00:37:00,106 --> 00:37:03,810\nAnd so you'd go through and specify\nthat that's gonna be an integer and\n\n668\n00:37:03,810 --> 00:37:06,430\nknow the things like that to\nidentify that type of data.\n\n669\n00:37:06,430 --> 00:37:09,680\nBut I'm just gonna leave that be and\nI've created it.\n\n670\n00:37:09,680 --> 00:37:17,650\nSo now that table exists, but\nit exists in the primary file group.\n\n671\n00:37:17,650 --> 00:37:20,080\nSo it's gonna be located on the E\ndrive with everything else.\n\n672\n00:37:20,080 --> 00:37:24,140\nIf I wanna move it, what I'm gonna have\nto do is come down and find that table.\n\n673\n00:37:25,740 --> 00:37:28,590\nAnd notice how I had to right-click and\nchoose refresh to see it?\n\n674\n00:37:28,590 --> 00:37:32,950\nRemember that, the management studio\ndoesn't automatically refresh when you add\n\n675\n00:37:32,950 --> 00:37:36,650\nnew things, so I had to refresh\nit to see my sales report table.\n\n676\n00:37:36,650 --> 00:37:41,880\nIf i right click on that, and\ni go script table as drop and create.\n\n677\n00:37:41,880 --> 00:37:46,360\nAlright when we choose that, it's gonna\nshow how to get rid of the table so\n\n678\n00:37:46,360 --> 00:37:47,550\nit's gonna delete it.\n\n679\n00:37:47,550 --> 00:37:49,900\nAnd how it's gonna recreate\nthe table right here,\n\n680\n00:37:49,900 --> 00:37:52,730\ni can see its creating\nID month total sales.\n\n681\n00:37:52,730 --> 00:37:55,720\nAnd then it's got on primary.\n\n682\n00:37:55,720 --> 00:37:57,410\nThat's my chance to change it.\n\n683\n00:37:57,410 --> 00:38:04,270\nI can change that, instead of saying on\nprimary, I can have it go to table_orders.\n\n684\n00:38:04,270 --> 00:38:04,920\nAll right?\n\n685\n00:38:04,920 --> 00:38:09,050\nNow, if I run this script, it's gonna\ndelete the table from the primary file\n\n686\n00:38:09,050 --> 00:38:14,170\ngroup, and it's gonna recreate the table,\nthis time putting it under orders.\n\n687\n00:38:14,170 --> 00:38:14,740\nAll right?\n\n688\n00:38:14,740 --> 00:38:16,340\nAnd so it'll move it along and do that.\n\n689\n00:38:16,340 --> 00:38:17,510\nAll right.\n\n690\n00:38:17,510 --> 00:38:19,290\nIf I had data in the table.\n\n691\n00:38:19,290 --> 00:38:21,630\nIf I actually had a foli\npopulated with information,\n\n692\n00:38:21,630 --> 00:38:25,140\nI'd need to make sure that I exported that\ndata too and you can do it a few ways.\n\n693\n00:38:25,140 --> 00:38:28,270\nWe will actually cover it in\nanother episode where you can\n\n694\n00:38:28,270 --> 00:38:30,870\nexport the data as a CSV and\nbring it back in.\n\n695\n00:38:30,870 --> 00:38:34,070\nOr, you can even script it to\ncarry it over with the data.\n\n696\n00:38:34,070 --> 00:38:36,120\nThat's another option\nwhen we've got that but\n\n697\n00:38:36,120 --> 00:38:39,660\nlike I said we'll tackle\nthat in another episode.\n\n698\n00:38:42,260 --> 00:38:45,270\nAll right, so those are our file groups.\n\n699\n00:38:45,270 --> 00:38:46,970\nThe idea of optimizing data and\n\n700\n00:38:46,970 --> 00:38:51,030\nstoring it somewhere to get it where\nyou really need it, like that.\n\n701\n00:38:51,030 --> 00:38:53,370\nOn the backup side,\nwe can now do itemized backups.\n\n702\n00:38:53,370 --> 00:38:54,510\nThat's pretty cool.\n\n703\n00:38:54,510 --> 00:38:58,940\nBut there's actually another thing\nwe can do that's even more neat.\n\n704\n00:38:58,940 --> 00:39:03,480\nIt might be that it's not that we have\ncontention between multiple tables, but\n\n705\n00:39:03,480 --> 00:39:06,540\nthat we have contention\nwithin one table itself.\n\n706\n00:39:07,940 --> 00:39:12,870\nFor example, let's say that this orders\ntable is containing the orders for\n\n707\n00:39:12,870 --> 00:39:19,770\nour entire company, but our company has\nstores all across the United States.\n\n708\n00:39:19,770 --> 00:39:22,240\nSo I might have hundreds of stores, and\n\n709\n00:39:22,240 --> 00:39:24,990\nall of their orders are right\nhere in this one table.\n\n710\n00:39:24,990 --> 00:39:30,970\nWell if one store runs a report to pull\nup all of their orders from yesterday,\n\n711\n00:39:30,970 --> 00:39:35,810\nthey're gonna run a scan against\nthat table that's gonna look for\n\n712\n00:39:35,810 --> 00:39:39,490\nthose orders and find the information.\n\n713\n00:39:39,490 --> 00:39:43,290\nWell, because that table contains\ninformation for all the stores, while\n\n714\n00:39:43,290 --> 00:39:46,390\nwe're running that scan it's effecting\nthe performance for the other stores.\n\n715\n00:39:46,390 --> 00:39:50,750\nSo, each store is competing for\naccess against that orders table.\n\n716\n00:39:50,750 --> 00:39:53,397\nNow, if these queries are optimized and\nnot run very frequently,\n\n717\n00:39:53,397 --> 00:39:54,254\nit's not a big deal.\n\n718\n00:39:54,254 --> 00:39:57,003\nBut if this is happening\nall throughout the day,\n\n719\n00:39:57,003 --> 00:39:59,293\nI'm going to have contention, right.\n\n720\n00:39:59,293 --> 00:40:01,180\nIf store number five.\n\n721\n00:40:01,180 --> 00:40:05,312\nIs placing an order at the same\ntime as store number 80.\n\n722\n00:40:05,312 --> 00:40:10,720\nThey're both trying to write to that\ntable at the same time to add the values.\n\n723\n00:40:10,720 --> 00:40:12,000\nThere's going to be contention.\n\n724\n00:40:12,000 --> 00:40:12,870\nRight?\n\n725\n00:40:12,870 --> 00:40:17,490\nSo what I might choose to do,\nis to take one table and\n\n726\n00:40:17,490 --> 00:40:20,600\nbreak that table up across file groups.\n\n727\n00:40:20,600 --> 00:40:21,330\nAll right?\n\n728\n00:40:21,330 --> 00:40:25,680\nIf we do that, now we can have more than\none person accessing the same table,\n\n729\n00:40:25,680 --> 00:40:27,040\nand not having discontention.\n\n730\n00:40:27,040 --> 00:40:29,040\nAnd that is really cool.\n\n731\n00:40:29,040 --> 00:40:29,880\nAll right?\n\n732\n00:40:29,880 --> 00:40:33,210\nBut this is another one that\nrequires a high degree of planning.\n\n733\n00:40:33,210 --> 00:40:33,890\nAll right?\n\n734\n00:40:33,890 --> 00:40:37,280\nWhat we're talking about here is\nwhat's called Table Partitioning.\n\n735\n00:40:37,280 --> 00:40:42,080\nWhen you partition a table, it's where you\ndivide the table up to be able to spread\n\n736\n00:40:42,080 --> 00:40:46,910\nit across multiple file groups giving\nyou the disc optimization of having that\n\n737\n00:40:46,910 --> 00:40:49,720\ntable accessed by multiple\npeople at the same time.\n\n738\n00:40:49,720 --> 00:40:50,315\nSo, really, really cool.\n\n739\n00:40:50,315 --> 00:40:54,925\nBut to do it, we have to figure out how\nwe're going to partition the table.\n\n740\n00:40:54,925 --> 00:40:55,700\nRight?\n\n741\n00:40:55,700 --> 00:40:57,450\nThe example I just gave you a moment ago,\n\n742\n00:40:57,450 --> 00:41:01,530\nif all of the orders from my entire\ncompany are placed in this one table,\n\n743\n00:41:01,530 --> 00:41:05,690\nthen what I probably want to do is\nadd an entry to my orders table.\n\n744\n00:41:05,690 --> 00:41:06,250\nAll right?\n\n745\n00:41:06,250 --> 00:41:08,560\nLet me go back to the table design.\n\n746\n00:41:08,560 --> 00:41:12,730\nSo I've got an order ID,\na customer, a total of items.\n\n747\n00:41:12,730 --> 00:41:13,430\nRight?\n\n748\n00:41:13,430 --> 00:41:17,600\nI'd probably want to add another\nentry to it called Store.\n\n749\n00:41:17,600 --> 00:41:19,610\nRight?\nMy store number and\n\n750\n00:41:19,610 --> 00:41:24,520\nwhenever an order is placed at store\nnumber five, it would have a five there.\n\n751\n00:41:24,520 --> 00:41:28,760\nOr if it was an order placed at store\nnumber 80, it would have an 80 there.\n\n752\n00:41:28,760 --> 00:41:29,540\nOkay?\n\n753\n00:41:29,540 --> 00:41:34,610\nAnd then, what I can do is I can partition\nthe table based on the store number.\n\n754\n00:41:34,610 --> 00:41:39,320\nI can say if it's in order for store\nnumber 10, it goes in this file group and\n\n755\n00:41:39,320 --> 00:41:42,680\nif it's in order for store number 50,\nit goes in this other file group.\n\n756\n00:41:42,680 --> 00:41:45,260\nRight?\nNow we can divide up our storage based on\n\n757\n00:41:45,260 --> 00:41:49,130\nwhat store it is that's placing the order,\nbut\n\n758\n00:41:49,130 --> 00:41:50,930\nthat requires some planning, doesn't it?\n\n759\n00:41:50,930 --> 00:41:54,160\nBecause if I've all ready got\nall of the data in there,\n\n760\n00:41:54,160 --> 00:41:55,370\nthe data's all ready in one file.\n\n761\n00:41:55,370 --> 00:41:56,230\nI can't change that.\n\n762\n00:41:56,230 --> 00:41:56,730\nIt's there.\nRight?\n\n763\n00:41:57,730 --> 00:42:01,850\nBut if I do it ahead of time, I can\ncreate what's called a partition scheme.\n\n764\n00:42:01,850 --> 00:42:05,790\nAnd you have these partition rules\nthat define when an order is written,\n\n765\n00:42:05,790 --> 00:42:09,855\nwhen it's added to that table,\nwhere it goes on the hard drives.\n\n766\n00:42:09,855 --> 00:42:10,561\nAll right?\n\n767\n00:42:10,561 --> 00:42:13,420\nSo, understanding the needs\nof our data is gonna be\n\n768\n00:42:13,420 --> 00:42:16,292\nkey here to making sure we've\ngot that right plan in place.\n\n769\n00:42:16,292 --> 00:42:16,980\nAll right.\n\n770\n00:42:16,980 --> 00:42:19,610\nIf your data's already in there,\nit's too late.\n\n771\n00:42:19,610 --> 00:42:23,180\nWhat you can do is you can create\nthe rules but you're gonna have to\n\n772\n00:42:23,180 --> 00:42:27,010\nremove all the data and add it back in,\nwhich you can do in a script.\n\n773\n00:42:27,010 --> 00:42:28,410\nIt only takes a few moments.\n\n774\n00:42:28,410 --> 00:42:29,850\nBut it's gonna create downtime.\n\n775\n00:42:29,850 --> 00:42:31,870\nRight?\nSo you'll have to take the database down,\n\n776\n00:42:31,870 --> 00:42:34,930\nso you don't have people adding new orders\nwhile you're putting rules in place.\n\n777\n00:42:34,930 --> 00:42:35,840\nIt'll create a mess.\n\n778\n00:42:35,840 --> 00:42:36,530\nAll right?\n\n779\n00:42:36,530 --> 00:42:38,610\nSo, if you can afford downtime,\nthat's great.\n\n780\n00:42:38,610 --> 00:42:41,510\nBut if you can't afford downtime,\nyou've got to make sure you plan for\n\n781\n00:42:41,510 --> 00:42:42,580\nthis ahead of time.\n\n782\n00:42:42,580 --> 00:42:44,560\nYou've got it in place and\n\n783\n00:42:44,560 --> 00:42:47,998\nready to rock before you start\nloading all of your data at the in.\n\n784\n00:42:47,998 --> 00:42:49,876\nAll right.\n\n785\n00:42:49,876 --> 00:42:52,590\nSo, that's what we're gonna do in\nthe next section, we'll probably stop and\n\n786\n00:42:52,590 --> 00:42:53,230\ntake a break here.\n\n787\n00:42:53,230 --> 00:42:57,100\nAnd then in the next section we\nwill see how to create those rules\n\n788\n00:42:57,100 --> 00:42:59,350\nthat say what data goes where.\n\n789\n00:42:59,350 --> 00:43:00,770\nAnd get a chance to see how that works.\n\n790\n00:43:00,770 --> 00:43:03,560\nAnd the rules are kind of a little\nquirky the way we write them.\n\n791\n00:43:03,560 --> 00:43:05,210\nFortunately you only\nhave to write them once.\n\n792\n00:43:05,210 --> 00:43:06,630\nRight?\nYou write the rules and\n\n793\n00:43:06,630 --> 00:43:08,140\nthen you're done and\nyou don't have to mess with it again.\n\n794\n00:43:08,140 --> 00:43:10,850\nBut that's what we're going to take\na look at here in the next section.\n\n795\n00:43:10,850 --> 00:43:11,680\nSo, stay tuned.\n\n796\n00:43:11,680 --> 00:43:14,991\nWe'll be back after this.\n\n797\n00:43:14,991 --> 00:43:18,207\n[SOUND] All right,\n\n798\n00:43:18,207 --> 00:43:22,930\nwelcome back everybody.\n\n799\n00:43:22,930 --> 00:43:26,940\nSo, before the break, I started\ntalking about partitioning tables.\n\n800\n00:43:26,940 --> 00:43:30,950\nAnd partitioning tables,\nthe idea is kind of complex.\n\n801\n00:43:30,950 --> 00:43:32,330\nRight?\nSo, first off you have to look at your\n\n802\n00:43:32,330 --> 00:43:35,190\ntable and figure out exactly\nhow you wanna break it up.\n\n803\n00:43:35,190 --> 00:43:40,220\nBut then, secondly implementing it is\nkind of complex, and the reason is\n\n804\n00:43:40,220 --> 00:43:44,930\nMicrosoft has never really finished up\nthe GUI for creating partition tables.\n\n805\n00:43:44,930 --> 00:43:46,370\nI know, it sounds funny.\n\n806\n00:43:46,370 --> 00:43:47,960\nLet me show you what I mean.\n\n807\n00:43:47,960 --> 00:43:52,870\nSo, when we go in here and do something\nlike creating a partition table.\n\n808\n00:43:52,870 --> 00:43:57,240\nWell, you'd think you'd go to tables and\nyou'd go to create a new table and when\n\n809\n00:43:57,240 --> 00:44:01,540\nyou go to create it you'd be able to set\nup your partition or whatever from there.\n\n810\n00:44:01,540 --> 00:44:06,530\nBut even in the little property screen\nyou really don't see any options in\n\n811\n00:44:06,530 --> 00:44:11,090\nhere as far as being able\nto set up the partitions.\n\n812\n00:44:11,090 --> 00:44:13,730\nRight?\nIt just doesn't give you those options.\n\n813\n00:44:13,730 --> 00:44:18,410\nSo the other thing is,\nwell, finding the options.\n\n814\n00:44:18,410 --> 00:44:18,920\nRight?\n\n815\n00:44:18,920 --> 00:44:22,720\nSo to create a partition table,\nit's actually got a little wizard, but\n\n816\n00:44:22,720 --> 00:44:25,100\nthe wizard is down here\nunder the Storage folder.\n\n817\n00:44:25,100 --> 00:44:28,400\nSo you browse into your database, and\nthen you go to the Storage folder,\n\n818\n00:44:28,400 --> 00:44:30,360\nwhich is not terribly intuitive.\n\n819\n00:44:30,360 --> 00:44:33,420\nAnd you'll have the option in\nthere to create a partition.\n\n820\n00:44:33,420 --> 00:44:35,560\nActually, you know what?\n\n821\n00:44:35,560 --> 00:44:36,570\nI didn't see my option.\n\n822\n00:44:37,950 --> 00:44:38,850\nOh, sorry.\n\n823\n00:44:38,850 --> 00:44:41,330\nIf we go under storage you'll\nsee Partition Schemes and\n\n824\n00:44:41,330 --> 00:44:45,670\nPartition Functions and those are the two\npieces that work with the partitions.\n\n825\n00:44:45,670 --> 00:44:46,390\nThere we go.\n\n826\n00:44:46,390 --> 00:44:47,410\nBut notice what happens here.\n\n827\n00:44:47,410 --> 00:44:49,160\nWhen I right-click on these,\nthere's no new button.\n\n828\n00:44:49,160 --> 00:44:51,920\nIt goes to Start PowerShell, or Reports.\n\n829\n00:44:51,920 --> 00:44:55,730\nI don't have the ability to create\na partition table right here.\n\n830\n00:44:55,730 --> 00:44:58,510\nThere actually is a little\nwizard in here you can run, but\n\n831\n00:44:58,510 --> 00:45:02,190\nit'll get to a part where it'll ask you\nto choose your partition function, and\n\n832\n00:45:02,190 --> 00:45:04,060\nit doesn't give you\nthe ability to choose it.\n\n833\n00:45:04,060 --> 00:45:08,770\nSo while this is a GUI, or certain GUI\nelements for it, they're incomplete.\n\n834\n00:45:08,770 --> 00:45:12,630\nSo when you create a partition table\nyou really can't do it from the GUI.\n\n835\n00:45:12,630 --> 00:45:15,690\nYou really have to go into\nit through Transact SQL.\n\n836\n00:45:15,690 --> 00:45:16,830\nAll right.\n\n837\n00:45:16,830 --> 00:45:19,910\nSo, that already is gonna make\nthis a little more difficult to\n\n838\n00:45:19,910 --> 00:45:21,560\nimplement than the other technologies.\n\n839\n00:45:21,560 --> 00:45:25,400\nBut partition tables are a complex topic.\n\n840\n00:45:25,400 --> 00:45:27,360\nYou've really got to need this.\n\n841\n00:45:27,360 --> 00:45:30,890\nYou really got to be optimizing\na database to its highest degree\n\n842\n00:45:30,890 --> 00:45:32,210\nto need the technology.\n\n843\n00:45:32,210 --> 00:45:35,370\nSo most people will never work\nwith partition tables, and\n\n844\n00:45:35,370 --> 00:45:38,560\nthat's why Microsoft hasn't put\na lot of effort into the GUI.\n\n845\n00:45:38,560 --> 00:45:41,710\nIt's been like this for\nseveral versions of SQL server.\n\n846\n00:45:41,710 --> 00:45:42,490\nThis is not a new thing.\n\n847\n00:45:42,490 --> 00:45:44,910\nIt's been like it for a long time.\n\n848\n00:45:44,910 --> 00:45:47,130\nSo if we decide we wanna\ncreate a partition table,\n\n849\n00:45:47,130 --> 00:45:49,720\nwe're gonna have to do\na lot of it by hand.\n\n850\n00:45:49,720 --> 00:45:51,610\nSome of it we can do in the GUI.\n\n851\n00:45:51,610 --> 00:45:52,440\nSome of it we can't.\n\n852\n00:45:52,440 --> 00:45:53,400\nRight?\n\n853\n00:45:53,400 --> 00:45:55,980\nThe first thing we're gonna need, is if\nwe're going to gonna break a table up\n\n854\n00:45:55,980 --> 00:45:59,290\nacross multiple files,\nwe need to create file groups.\n\n855\n00:45:59,290 --> 00:46:01,700\nWe need to have files and\nfile groups for that.\n\n856\n00:46:01,700 --> 00:46:03,960\nNow, I did that earlier via the GUI.\n\n857\n00:46:03,960 --> 00:46:07,280\nI want to show you how to do\nit from the transact SQL now.\n\n858\n00:46:08,610 --> 00:46:09,680\nAll right.\nI went ahead and\n\n859\n00:46:09,680 --> 00:46:12,920\nwrote most of my script\nbefore the segment,\n\n860\n00:46:12,920 --> 00:46:14,420\nso you wouldn't have to watch me type.\n\n861\n00:46:14,420 --> 00:46:16,830\nBut basically it's a pretty\nstraightforward process.\n\n862\n00:46:18,000 --> 00:46:19,910\nI've written a script here that's\nbasically going to go into my\n\n863\n00:46:19,910 --> 00:46:22,580\ninventory database and\nremove my orders table.\n\n864\n00:46:22,580 --> 00:46:24,376\nBecause I had already\nmade an orders table.\n\n865\n00:46:24,376 --> 00:46:26,118\nRight?\nSo we're gonna drop the orders table,\n\n866\n00:46:26,118 --> 00:46:27,770\nwhich will just delete it.\n\n867\n00:46:27,770 --> 00:46:28,600\nAll right.\n\n868\n00:46:28,600 --> 00:46:31,870\nFrom there I'm gonna create\nfour storage groups.\n\n869\n00:46:31,870 --> 00:46:33,690\nNow in the GUI,\nwe just have that little grid.\n\n870\n00:46:33,690 --> 00:46:35,870\nWe add in our storage groups and\nthat's it.\n\n871\n00:46:35,870 --> 00:46:37,950\nSo here it's not much different.\n\n872\n00:46:37,950 --> 00:46:41,268\nALTER DATABASE Inventory, so\nI'm modifying the inventory database.\n\n873\n00:46:41,268 --> 00:46:44,586\nAdd file group orders_store_1.\n\n874\n00:46:44,586 --> 00:46:45,620\nRight?\n\n875\n00:46:45,620 --> 00:46:50,440\nI want this file group to contain\npart of the orders table.\n\n876\n00:46:50,440 --> 00:46:53,920\nJust the part of the orders table that\ncontains orders for store number one.\n\n877\n00:46:53,920 --> 00:46:58,380\nSo all of store number one's orders are\ngonna go right here in this file group.\n\n878\n00:46:58,380 --> 00:47:02,120\nAnd then I'm creating another file group\ncalled order store two, order store three,\n\n879\n00:47:02,120 --> 00:47:03,602\nand order store four.\n\n880\n00:47:03,602 --> 00:47:04,440\nAll right.\n\n881\n00:47:04,440 --> 00:47:07,040\nThere's my four file groups,\nI've got four stores and\n\n882\n00:47:07,040 --> 00:47:10,570\nI wanna break their orders up\nacross these four file groups.\n\n883\n00:47:12,000 --> 00:47:13,855\nThen, I need to put files in them.\n\n884\n00:47:13,855 --> 00:47:16,670\nRight?\nAgain, I could do that via the GUI we saw\n\n885\n00:47:16,670 --> 00:47:17,950\nthat in the last segment.\n\n886\n00:47:17,950 --> 00:47:23,010\nBut to put the files in,\nwe just say alter database inventory,\n\n887\n00:47:23,010 --> 00:47:25,330\nadd file and we give it a file name.\n\n888\n00:47:25,330 --> 00:47:28,780\nSo here I'm creating a order\nstore one file which is gonna be,\n\n889\n00:47:28,780 --> 00:47:29,910\nI'm just putting it on the E drive.\n\n890\n00:47:29,910 --> 00:47:31,920\nRight.\nRemember this is all about optimization,\n\n891\n00:47:31,920 --> 00:47:34,050\nwe normally want them on\nseparate hard drives.\n\n892\n00:47:34,050 --> 00:47:36,580\nBut there is a time where it\nmight not be a bad optmiization.\n\n893\n00:47:36,580 --> 00:47:39,410\nMaybe I just wanna be able to backup or\nrestore the orders for\n\n894\n00:47:39,410 --> 00:47:42,650\na particular store without\naffecting the other ones.\n\n895\n00:47:42,650 --> 00:47:44,480\nAnd so that would be another\noption we can do this and\n\n896\n00:47:44,480 --> 00:47:46,670\nwe might have them all\non the same product.\n\n897\n00:47:46,670 --> 00:47:50,006\nSo here I'm creating a file for\nstore number one, store number two, and\n\n898\n00:47:50,006 --> 00:47:51,000\nstore number three.\n\n899\n00:47:51,000 --> 00:47:54,470\nNotice what I'm doing though when I\nsay add file, I just specify that.\n\n900\n00:47:54,470 --> 00:47:57,310\nIf I stopped right there It would\ngo in the primary file group.\n\n901\n00:47:57,310 --> 00:48:00,101\nSo I have to follow that up\nwith the two file group, and\n\n902\n00:48:00,101 --> 00:48:02,097\ntell it which file group to attach to.\n\n903\n00:48:02,097 --> 00:48:07,409\nSo, order store one the file is going\ninto order store one the file group And\n\n904\n00:48:07,409 --> 00:48:12,730\norder store to kind of following that\nsame pattern from my four stores.\n\n905\n00:48:12,730 --> 00:48:13,310\nAll right.\n\n906\n00:48:13,310 --> 00:48:17,870\nSo that's gonna create the file group\nstructure and the files that we need for\n\n907\n00:48:17,870 --> 00:48:19,820\nthis partition table, all right?\n\n908\n00:48:19,820 --> 00:48:23,190\nSo that's really all stuff that we saw\nat the beginning of the section, and\n\n909\n00:48:23,190 --> 00:48:25,030\nI could run just that.\n\n910\n00:48:25,030 --> 00:48:28,518\nNeat little thing about\nthe query analyzer here.\n\n911\n00:48:28,518 --> 00:48:32,538\nIf you wanna run just a certain piece\nof your code and not everything.\n\n912\n00:48:32,538 --> 00:48:35,160\nSo like I've got a bunch more\nthat I've written down here.\n\n913\n00:48:35,160 --> 00:48:36,770\nIf I just wanna run the top part,\n\n914\n00:48:36,770 --> 00:48:41,410\nI can highlight that and when I hit\nexecute it's just gonna run the top part,\n\n915\n00:48:41,410 --> 00:48:44,730\nthe part that I've highlighted as\nopposed to running all of my script.\n\n916\n00:48:44,730 --> 00:48:47,590\nSo I could run that right now and\nverify that it takes effect.\n\n917\n00:48:47,590 --> 00:48:48,930\nI'll go ahead and do that.\n\n918\n00:48:48,930 --> 00:48:53,300\nSo it's gonna run and now I can go and\nmake sure that it actually worked.\n\n919\n00:48:53,300 --> 00:48:59,520\nIf I go under my inventory table here, all\nright database, I'll pull up my properties\n\n920\n00:48:59,520 --> 00:49:03,630\nand go to file groups and there's\norder stores one, two, three and four.\n\n921\n00:49:03,630 --> 00:49:08,180\nAnd if I go into my files,\nI'll see orders store one, two,\n\n922\n00:49:08,180 --> 00:49:09,850\nthree and four are right there.\n\n923\n00:49:09,850 --> 00:49:11,185\nThey're all on my E drive,\n\n924\n00:49:11,185 --> 00:49:16,365\nand if I browse to my E drive I should\nhave those in place there, all right?\n\n925\n00:49:16,365 --> 00:49:19,785\nSo there's all the files that were made,\nokay?\n\n926\n00:49:19,785 --> 00:49:22,175\nWe've whipped those up and\nwe've got them in place.\n\n927\n00:49:22,175 --> 00:49:23,795\nNow the partitioning.\n\n928\n00:49:23,795 --> 00:49:25,855\nThe partitioning is made up\nof three pieces, all right?\n\n929\n00:49:25,855 --> 00:49:28,625\nThere's the table itself,\nthat's important.\n\n930\n00:49:28,625 --> 00:49:31,265\nBut the tables actually\nthe last thing we make.\n\n931\n00:49:31,265 --> 00:49:35,050\nBefore we do that,\nwe need to take care of two other things.\n\n932\n00:49:35,050 --> 00:49:39,240\nThe first thing we're gonna make is\nwhat's called a partition function.\n\n933\n00:49:39,240 --> 00:49:42,710\nA partition function is simply\nthe rules for our partitioning.\n\n934\n00:49:42,710 --> 00:49:45,680\nHow does it know what data to put where?\n\n935\n00:49:45,680 --> 00:49:47,780\nWell it's the function that determines it.\n\n936\n00:49:47,780 --> 00:49:51,730\nAnd the function's written\nkind of a weird way.\n\n937\n00:49:51,730 --> 00:49:54,750\nIt seems complex, but\nit's actually not very bad at all.\n\n938\n00:49:54,750 --> 00:49:56,140\nA partition function,\n\n939\n00:49:56,140 --> 00:50:00,810\nI've got an example here in my show notes\nthat we'll post alongside the show.\n\n940\n00:50:00,810 --> 00:50:04,180\nBut right here, these are some\nexamples of partition functions.\n\n941\n00:50:05,300 --> 00:50:08,780\nBasically, it's just\na simple formula that says\n\n942\n00:50:08,780 --> 00:50:11,670\nhow do we know what goes\ninto each partition?\n\n943\n00:50:11,670 --> 00:50:13,300\nSo, here they've got an example.\n\n944\n00:50:13,300 --> 00:50:18,740\nCREATE PARTITION FUNCTION\nmyRangePF1 integer, all right?\n\n945\n00:50:18,740 --> 00:50:22,766\nSo, this one is going to be gauging\nnumbers to determine your function,\n\n946\n00:50:22,766 --> 00:50:27,188\nan area to determine your partitions and\ndoing it based on some kind of a number,\n\n947\n00:50:27,188 --> 00:50:27,850\nall right?\n\n948\n00:50:27,850 --> 00:50:32,642\nAnd then right down here they give\nus the numbers, AS RANGE LEFT FOR\n\n949\n00:50:32,642 --> 00:50:35,050\nVALUES 1, 100, 1000.\n\n950\n00:50:35,050 --> 00:50:36,090\nWhat does that mean?\n\n951\n00:50:36,090 --> 00:50:36,810\nOkay.\n\n952\n00:50:36,810 --> 00:50:43,590\nWell, it means anything less than\none will be in the first partition.\n\n953\n00:50:43,590 --> 00:50:47,871\nAnything less than 100 will be\nin the second partition, and\n\n954\n00:50:47,871 --> 00:50:52,490\nanything less than 1000 will be\nin the third partition, okay?\n\n955\n00:50:52,490 --> 00:50:54,490\nWell, what about this word, LEFT?\n\n956\n00:50:54,490 --> 00:50:55,730\nWhat does that mean?\n\n957\n00:50:55,730 --> 00:50:58,230\nWell, it means what about the number one?\n\n958\n00:50:58,230 --> 00:51:00,090\nWhat about the number 100?\n\n959\n00:51:00,090 --> 00:51:02,290\nWhat if they're equal, right?\n\n960\n00:51:02,290 --> 00:51:07,190\nSo I said anything less than 100\ngoes in the second partition.\n\n961\n00:51:07,190 --> 00:51:08,620\nWhat about the number 100?\n\n962\n00:51:08,620 --> 00:51:14,220\nWell if I use the left command, the number\n100 will go in the second partition,\n\n963\n00:51:14,220 --> 00:51:20,130\nbut if I use the right command, the number\n100 would go in the third partition.\n\n964\n00:51:20,130 --> 00:51:21,920\nSo it kind of modifies\nwhat's gonna happen.\n\n965\n00:51:21,920 --> 00:51:24,330\nLet me write that out\na slightly different way so\n\n966\n00:51:24,330 --> 00:51:29,450\nwe can kinda see the two different forms\nthat that's gonna take, all right?\n\n967\n00:51:29,450 --> 00:51:35,110\nSo, if I take these guys, and i'm just\ngonna change them a little bit here,\n\n968\n00:51:35,110 --> 00:51:37,760\nso I've got a left and a right, okay?\n\n969\n00:51:38,800 --> 00:51:44,060\nIn the left one,\nwe have a couple of partitions, right?\n\n970\n00:51:44,060 --> 00:51:49,538\nSo we've got Partition 1-, Partition 2-,\n\n971\n00:51:49,538 --> 00:51:53,690\nPartition 3- and Partition 4-.\n\n972\n00:51:56,240 --> 00:51:57,700\nNow hang on a second.\n\n973\n00:51:57,700 --> 00:52:00,280\nYou might be asking yourself right now,\nwait a minute, Don.\n\n974\n00:52:00,280 --> 00:52:02,420\nYou got four partitions but\nthere's only three values here.\n\n975\n00:52:02,420 --> 00:52:03,480\nHow do you have four?\n\n976\n00:52:03,480 --> 00:52:04,210\nRight?\n\n977\n00:52:04,210 --> 00:52:06,830\nWell, what about something that\ndoesn't match these numbers?\n\n978\n00:52:06,830 --> 00:52:08,420\nWhat about everything else?\n\n979\n00:52:08,420 --> 00:52:10,717\nEverything else goes into\na partition that's not specifically\n\n980\n00:52:10,717 --> 00:52:11,660\nidentified, all right?\n\n981\n00:52:12,920 --> 00:52:18,410\nSo, when I say left, like this,\nanything less than or equal to one.\n\n982\n00:52:18,410 --> 00:52:22,339\nSo in this case, 0 through 1,\n\n983\n00:52:22,339 --> 00:52:27,290\nis gonna be in Partition 1, all right?\n\n984\n00:52:27,290 --> 00:52:33,912\nThen 2 all the way through\n100 will be in Partition 2,\n\n985\n00:52:33,912 --> 00:52:41,770\nand 101, all the way through\n1,000 will be in Partition 3.\n\n986\n00:52:41,770 --> 00:52:46,153\nAnd then 1001 to infinity\n\n987\n00:52:46,153 --> 00:52:51,070\nwill be in Partition 4, right?\n\n988\n00:52:51,070 --> 00:52:52,429\nThat's the one that's not identified here.\n\n989\n00:52:52,429 --> 00:52:54,730\nThat's what's left out, right?\n\n990\n00:52:54,730 --> 00:52:58,090\nAnd technically this would\nbe like a negative infinity\n\n991\n00:52:58,090 --> 00:53:01,490\nto one cuz a negative number would fall\nin that first partition, all right.\n\n992\n00:53:01,490 --> 00:53:02,900\nThat's the way that it reads and\n\n993\n00:53:02,900 --> 00:53:05,630\ninterprets what we specified\nright there above it, right.\n\n994\n00:53:05,630 --> 00:53:10,240\nThat's how those partitions\nare going to play out\n\n995\n00:53:10,240 --> 00:53:14,290\nwhen I start to throw data into the table\nthat's used in this partition function.\n\n996\n00:53:15,460 --> 00:53:17,450\nIf we just modify that a little bit,\n\n997\n00:53:17,450 --> 00:53:22,990\nto do a right instead of a left,\nit changes that a good bit.\n\n998\n00:53:22,990 --> 00:53:27,721\nWhat happens if we do right is Partition 1\n\n999\n00:53:27,721 --> 00:53:31,920\nwould really just be 0, all right?\n\n1000\n00:53:31,920 --> 00:53:37,123\nAnd Partition 2 would be 1 to 99 and\n\n1001\n00:53:37,123 --> 00:53:42,660\nPartition 3 would be 100 to 999.\n\n1002\n00:53:42,660 --> 00:53:47,260\nAnd Partition 4 would be 1000 to infinity.\n\n1003\n00:53:47,260 --> 00:53:50,470\nSee how 1000 ends up on\nthe partition to the right\n\n1004\n00:53:50,470 --> 00:53:51,940\ninstead of the partition to the left.\n\n1005\n00:53:51,940 --> 00:53:54,230\nThat's what that right and\nleft designator does.\n\n1006\n00:53:54,230 --> 00:53:57,090\nIt changes that behavior, all right?\n\n1007\n00:53:57,090 --> 00:54:00,050\nOne little word modifies\nthose partitions a good bit.\n\n1008\n00:54:01,900 --> 00:54:04,930\nJust remember whenever you see\na partition function like this,\n\n1009\n00:54:04,930 --> 00:54:08,280\nyou'll see a certain number\nof partitions defined.\n\n1010\n00:54:08,280 --> 00:54:09,030\nHere it's just three.\n\n1011\n00:54:09,030 --> 00:54:12,200\nYou can do 5000 partitions if you wanted,\nright?\n\n1012\n00:54:12,200 --> 00:54:13,540\nBut there'll always be one more.\n\n1013\n00:54:13,540 --> 00:54:15,270\nThere'll be 5001, right?\n\n1014\n00:54:15,270 --> 00:54:17,960\nThat extra one is everything that's left.\n\n1015\n00:54:17,960 --> 00:54:22,990\nSo, if we have a function like this,\nwe actually need to create four\n\n1016\n00:54:22,990 --> 00:54:28,095\nstorage groups and four files because\nI've actually got four partitions,\n\n1017\n00:54:28,095 --> 00:54:29,577\nnot just the three shown right there.\n\n1018\n00:54:29,577 --> 00:54:34,895\nAll right, so that's how the left and\nthe right kind of break apart and\n\n1019\n00:54:34,895 --> 00:54:40,120\nyou see how I've written it here as\nleft is really less than or equal to.\n\n1020\n00:54:40,120 --> 00:54:43,730\nAnything less than or\nequal to 1 goes in Partition 1.\n\n1021\n00:54:43,730 --> 00:54:47,550\nAnything less than or equal to a hundred\ngoes in Partition 2, and so on.\n\n1022\n00:54:47,550 --> 00:54:54,300\nWhereas right is more of a less\nthan without the equals, right?\n\n1023\n00:54:54,300 --> 00:54:57,860\nSo anything less than one goes\nin the partition on the left.\n\n1024\n00:54:57,860 --> 00:55:00,670\nAnything less than 100\ngoes in Partition 2.\n\n1025\n00:55:00,670 --> 00:55:04,435\nAnything less than 1,000 goes in Partition\n3 without the equals sign, right?\n\n1026\n00:55:04,435 --> 00:55:06,120\nWe don't actually get that number.\n\n1027\n00:55:07,120 --> 00:55:09,920\nNow, this example here\nis using an integer.\n\n1028\n00:55:09,920 --> 00:55:13,070\nSo we're partitioning just based\non some kind of raw number.\n\n1029\n00:55:13,070 --> 00:55:15,520\nThat's not the most useful\nthing on the planet.\n\n1030\n00:55:15,520 --> 00:55:19,010\nYou can do it on other data types though,\nso I've got an example here.\n\n1031\n00:55:19,010 --> 00:55:22,310\nI'm doing partitioning based\non a date range, okay?\n\n1032\n00:55:22,310 --> 00:55:27,150\nRemember I mentioned you might have\narchive data, historical data, right?\n\n1033\n00:55:27,150 --> 00:55:31,920\nIf this is an orders table,\nwhat about orders from five years ago?\n\n1034\n00:55:31,920 --> 00:55:34,480\nAm I gonna change my orders\nfrom five years ago?\n\n1035\n00:55:34,480 --> 00:55:35,000\nNo.\n\n1036\n00:55:35,000 --> 00:55:35,770\nRight?\n\n1037\n00:55:35,770 --> 00:55:38,230\nFive years ago,\nthat effectively becomes read-only.\n\n1038\n00:55:38,230 --> 00:55:42,300\nIf I wanna look at my historical\norders from five years ago I can, but\n\n1039\n00:55:42,300 --> 00:55:46,730\nI'm not gonna do that very often, and\nit doesn't need to be on high-end storage.\n\n1040\n00:55:46,730 --> 00:55:48,850\nSo I might create\npartitions based on dates.\n\n1041\n00:55:48,850 --> 00:55:55,330\nAnd so here I'm saying AS RANGE RIGHT FOR\nVALUES 2013-01-01.\n\n1042\n00:55:55,330 --> 00:55:59,339\nSo January 1st, 2013, right?\n\n1043\n00:55:59,339 --> 00:56:04,354\nAnything before that, so\nanything from December 31st,\n\n1044\n00:56:04,354 --> 00:56:08,279\n2012 and earlier will be in Partition 1.\n\n1045\n00:56:08,279 --> 00:56:14,500\nBut January 1st, 2013,\nall the way through December 31st,\n\n1046\n00:56:14,500 --> 00:56:18,905\n2013, right, cuz I'm doing a right here.\n\n1047\n00:56:18,905 --> 00:56:22,583\nAnything in 2013 will be in partition 2.\n\n1048\n00:56:22,583 --> 00:56:26,280\nAnd then anything in 2014\nwill be in partition 3.\n\n1049\n00:56:26,280 --> 00:56:29,200\nAnd anything in 2015\nwill be in partition 4.\n\n1050\n00:56:29,200 --> 00:56:33,270\nAnd then everything new is gonna\ngo into partition 5, right,\n\n1051\n00:56:33,270 --> 00:56:35,410\na partition that's not identified here.\n\n1052\n00:56:35,410 --> 00:56:39,370\nSo that's gonna be all of my\nnew stuff going in there and\n\n1053\n00:56:39,370 --> 00:56:42,190\neach year I can just come and\nadd a new partition.\n\n1054\n00:56:42,190 --> 00:56:45,390\nSo when we come around to 2015,\nI add a new partition for that or\n\n1055\n00:56:45,390 --> 00:56:49,420\nactually I've kind of already got it\nin place cuz this is a right number.\n\n1056\n00:56:49,420 --> 00:56:53,550\nSo I've already got that one, but when\n2016 comes around I'd need to add another\n\n1057\n00:56:53,550 --> 00:56:56,000\npartition so\nit would know to break those apart.\n\n1058\n00:56:56,000 --> 00:56:58,660\nEach year you add another\npartition to contain it.\n\n1059\n00:56:58,660 --> 00:57:03,260\nThe old partitions, I could move them to\nreally slow hard drives or hard drives\n\n1060\n00:57:03,260 --> 00:57:06,620\nthat I don't back up very often because\nI know that data's not going to change.\n\n1061\n00:57:06,620 --> 00:57:08,970\nSo that's an example of doing a date time.\n\n1062\n00:57:10,000 --> 00:57:12,950\nBut the example I mentioned before\nthe break was to do it based on\n\n1063\n00:57:12,950 --> 00:57:14,040\na store number.\n\n1064\n00:57:14,040 --> 00:57:15,780\nAnd a store number, that's an integer.\n\n1065\n00:57:15,780 --> 00:57:20,060\nSo every time I add a new store, I would\njust add a new partition to reflect that\n\n1066\n00:57:20,060 --> 00:57:22,040\nparticular store number, all right?\n\n1067\n00:57:22,040 --> 00:57:24,811\nBut otherwise,\neach store would have its own partition.\n\n1068\n00:57:24,811 --> 00:57:31,638\nAnd so that's what I've written here\nin my script, if we go back in here.\n\n1069\n00:57:35,234 --> 00:57:39,760\nSo we've added all of our files, and\nthen I create my partition function.\n\n1070\n00:57:39,760 --> 00:57:45,960\nAnd here's my partition function,\nit's really pretty straight forward, here.\n\n1071\n00:57:45,960 --> 00:57:48,610\nSo I'm doing this based on store numbers.\n\n1072\n00:57:48,610 --> 00:57:55,160\nSo I'm creating a partition function,\nsay CREATE PARTITION FUNCTION pf_orders.\n\n1073\n00:57:55,160 --> 00:57:58,290\nI gave it a pf at the beginning so I would\nknow that this was a partition function.\n\n1074\n00:57:58,290 --> 00:58:01,720\nI like to do little tags at the beginning\nof names so I know that they're ones that\n\n1075\n00:58:01,720 --> 00:58:05,590\nI created, they're customs ones,\nnot ones included with SQL.\n\n1076\n00:58:05,590 --> 00:58:10,320\nAnd it's an integer one and\nI'm doing a AS RANGE LEFT for\n\n1077\n00:58:10,320 --> 00:58:13,460\nvalues and I'm just doing 1, 2, and 3.\n\n1078\n00:58:13,460 --> 00:58:14,100\nAll right.\n\n1079\n00:58:14,100 --> 00:58:18,495\nIf I have four stores, all right,\nanything in store 0 or\n\n1080\n00:58:18,495 --> 00:58:23,800\nstore 1 is gonna be in my first\npartition because I did a left.\n\n1081\n00:58:23,800 --> 00:58:26,900\nAll right, now, I don't have a store 0 so\nthat's never gonna matter.\n\n1082\n00:58:26,900 --> 00:58:30,210\nBut if there was a value for\n0 it would get lumped together with 1.\n\n1083\n00:58:30,210 --> 00:58:32,620\nBut otherwise, as range left for\n\n1084\n00:58:32,620 --> 00:58:36,598\nvalues, anything 0 through 1\nwill be in the first partition.\n\n1085\n00:58:36,598 --> 00:58:40,930\nAnd then 2 will be in\nthe second partition, 3 will\n\n1086\n00:58:40,930 --> 00:58:45,460\nbe in the third partition, and everything\nelse will be in the fourth partition.\n\n1087\n00:58:45,460 --> 00:58:47,880\nNow I've only got four stores,\nso that works out.\n\n1088\n00:58:47,880 --> 00:58:49,160\nThat's what I want.\n\n1089\n00:58:49,160 --> 00:58:51,130\nBut if I ever add another store,\n\n1090\n00:58:51,130 --> 00:58:54,010\nI would need to add a partition\nhere to account for that, right?\n\n1091\n00:58:54,010 --> 00:58:56,160\nSo you add those,\nadd new file groups and so on.\n\n1092\n00:58:56,160 --> 00:59:00,085\nThat will be part of your new process for\nadding additional stores to your company.\n\n1093\n00:59:00,085 --> 00:59:02,612\nOtherwise, if I all of a sudden\nintroduce stores 5 and\n\n1094\n00:59:02,612 --> 00:59:05,795\n6, their data is gonna get lumped\nin together with store 4, right.\n\n1095\n00:59:05,795 --> 00:59:07,945\nCuz that's all information that's\ngonna be falling in there.\n\n1096\n00:59:09,435 --> 00:59:10,045\nAll right.\n\n1097\n00:59:10,045 --> 00:59:11,683\nSo, that's gonna create the function.\n\n1098\n00:59:11,683 --> 00:59:16,687\nThat's gonna define what is my partition\nscheme, how many partitions do I have?\n\n1099\n00:59:18,237 --> 00:59:22,207\nAnd then, I need to create the scheme\nthat ties it all together.\n\n1100\n00:59:22,207 --> 00:59:25,087\nThe function,\nthat's how I'm gonna divide my partitions.\n\n1101\n00:59:25,087 --> 00:59:27,437\nThe scheme is how we actually divide it.\n\n1102\n00:59:27,437 --> 00:59:31,777\nAnd so here we're saying create partition\nscheme, and I'm just saying ps_orders,\n\n1103\n00:59:31,777 --> 00:59:35,960\nI'm giving it that name, ps so I know it's\na partition scheme, and orders, it's for\n\n1104\n00:59:35,960 --> 00:59:36,720\nthe orders table.\n\n1105\n00:59:37,880 --> 00:59:42,550\nI'm adding partitions from\nthe pf_orders function,\n\n1106\n00:59:42,550 --> 00:59:46,430\nand I'm tying them to these file groups.\n\n1107\n00:59:46,430 --> 00:59:48,610\nHere's all the file groups that I made.\n\n1108\n00:59:48,610 --> 00:59:50,970\nYou need one for each partition.\n\n1109\n00:59:50,970 --> 00:59:51,940\nYou don't want to screw this up.\n\n1110\n00:59:51,940 --> 00:59:54,040\nIf you don't provide enough,\nyou'll get a mistake.\n\n1111\n00:59:54,040 --> 00:59:57,760\nSo, here, I've got one, two,\nthree partitions, and then the catch all.\n\n1112\n00:59:57,760 --> 00:59:59,260\nSo, four partitions.\n\n1113\n00:59:59,260 --> 01:00:04,230\nSo I've got four file groups,\norders_store 1, 2, 3, and 4.\n\n1114\n01:00:04,230 --> 01:00:05,400\nAll right?\n\n1115\n01:00:05,400 --> 01:00:09,980\nOnce we've got that,\nnow we're ready to create that table.\n\n1116\n01:00:09,980 --> 01:00:13,120\nSo the function is\nthe first thing we need.\n\n1117\n01:00:13,120 --> 01:00:15,950\nThe scheme is the second thing we need.\n\n1118\n01:00:15,950 --> 01:00:18,060\nAnd then we're ready to create the table.\n\n1119\n01:00:18,060 --> 01:00:20,130\nSo I am going to go ahead and\nrun those two.\n\n1120\n01:00:20,130 --> 01:00:22,000\nAnd actually before I\nrun them I'm just gonna,\n\n1121\n01:00:22,000 --> 01:00:23,918\nI typed these without\nchecking them earlier, so\n\n1122\n01:00:23,918 --> 01:00:26,790\nI'm just gonna parse these real quick and\nmake sure that they're good.\n\n1123\n01:00:28,050 --> 01:00:29,110\nLooks like they are.\n\n1124\n01:00:29,110 --> 01:00:30,430\nSo I'll execute just that portion.\n\n1125\n01:00:31,610 --> 01:00:34,680\nNow I've created my partition function and\npartition scheme.\n\n1126\n01:00:34,680 --> 01:00:37,310\nBefore I go on,\nlet me go back to the GUI, right.\n\n1127\n01:00:37,310 --> 01:00:39,880\nRemember over here in the GUI,\nI've got partition schemes and\n\n1128\n01:00:39,880 --> 01:00:43,640\npartition functions and\nI mentioned how it's not terribly useful.\n\n1129\n01:00:43,640 --> 01:00:48,380\nWell if I refresh this, all right,\n\n1130\n01:00:48,380 --> 01:00:52,770\nI can see there's my partition scheme and\nfunction that I made, right.\n\n1131\n01:00:52,770 --> 01:00:53,870\nThey show up.\n\n1132\n01:00:53,870 --> 01:00:56,590\nBut if you right-click on them,\nyou'll see where you can go in and\n\n1133\n01:00:56,590 --> 01:00:59,900\nyou can delete them, but\nthere's no Properties button.\n\n1134\n01:00:59,900 --> 01:01:00,820\nI can't edit them.\n\n1135\n01:01:00,820 --> 01:01:03,620\nYou can create health policies on them or\nwhatever, but that's it.\n\n1136\n01:01:03,620 --> 01:01:05,410\nYou can't actually modify them.\n\n1137\n01:01:05,410 --> 01:01:08,670\nYou just see that they exist and\nyou can delete them.\n\n1138\n01:01:08,670 --> 01:01:11,980\nSo the GUI is not gonna be\nyour friend on this one.\n\n1139\n01:01:11,980 --> 01:01:15,400\nWe see them, but we can't work with them.\n\n1140\n01:01:15,400 --> 01:01:15,900\nAll right.\n\n1141\n01:01:16,930 --> 01:01:18,660\nNow we're ready to create the table.\n\n1142\n01:01:18,660 --> 01:01:23,900\nWhen we create the table, instead of\nchoosing a file group to put the table in,\n\n1143\n01:01:23,900 --> 01:01:27,920\nlike primary, or\norders table1, or whatever.\n\n1144\n01:01:27,920 --> 01:01:31,620\nWe'll choose the partition\nscheme to put the table on.\n\n1145\n01:01:31,620 --> 01:01:33,250\nThat's how you create a partition table.\n\n1146\n01:01:33,250 --> 01:01:36,170\nWhen you create the table, You just\nspecify the partition scheme that it's\n\n1147\n01:01:36,170 --> 01:01:39,380\ngonna reside on and that'll tie it to\nthe five groups and that'll do it.\n\n1148\n01:01:39,380 --> 01:01:43,840\nSo normally when we create a table we\nwould say CREATE TABLE and the name.\n\n1149\n01:01:43,840 --> 01:01:46,810\nWe would define all the columns and\n\n1150\n01:01:46,810 --> 01:01:51,950\nthen after that we would say ON and\nspecify the file group.\n\n1151\n01:01:51,950 --> 01:01:54,404\nYou'd specify the file group\nthat you were gonna use, but\n\n1152\n01:01:54,404 --> 01:01:57,290\nin a partition table you've\ngot more than one file group.\n\n1153\n01:01:57,290 --> 01:02:02,530\nSo you actually specify not the file\ngroup but the petition scheme.\n\n1154\n01:02:02,530 --> 01:02:05,740\nSo there's my ps_orders.\n\n1155\n01:02:05,740 --> 01:02:09,290\nI tell it what scheme i'm gonna use,\nand then I tell it\n\n1156\n01:02:09,290 --> 01:02:14,690\nwhich column in this table is gonna\ndetermine the striping, the partition.\n\n1157\n01:02:14,690 --> 01:02:19,410\nSo in mine, it's the store column, that's\nwhere I'm storing that store number.\n\n1158\n01:02:19,410 --> 01:02:21,360\nAnd actually I've got\nit as a character 10,\n\n1159\n01:02:21,360 --> 01:02:23,470\nI probably just want\nthat to be an integer.\n\n1160\n01:02:24,820 --> 01:02:25,830\nThere we go.\n\n1161\n01:02:25,830 --> 01:02:29,940\nSo it's gonna be you know a number\nthat's gonna store that store number.\n\n1162\n01:02:29,940 --> 01:02:32,590\nAnd so we'll have that value in there,\nit'll be stored and\n\n1163\n01:02:32,590 --> 01:02:33,410\nthat's what it's gonna look at.\n\n1164\n01:02:33,410 --> 01:02:37,610\nIt's gonna take the store number,\nrun it against my partition scheme.\n\n1165\n01:02:37,610 --> 01:02:41,190\nSo it'll go back up here and\nlook at my partition scheme and say okay,\n\n1166\n01:02:41,190 --> 01:02:44,690\nbased on the store number,\nI've got four file groups.\n\n1167\n01:02:44,690 --> 01:02:48,090\nAnd let me look at the function to find\nout which value group you end up in.\n\n1168\n01:02:48,090 --> 01:02:49,580\nOh, you're store number 2?\n\n1169\n01:02:49,580 --> 01:02:51,340\nStore number 2 is right here.\n\n1170\n01:02:51,340 --> 01:02:52,480\nIt's a left.\n\n1171\n01:02:52,480 --> 01:02:54,750\nSo we've got partition 1, partition 2.\n\n1172\n01:02:54,750 --> 01:02:58,440\nAnything with store number 2 is\ngonna end up in partition number 2.\n\n1173\n01:02:58,440 --> 01:03:02,490\nAnd partition number 2 is not\norder_store_1 one, but order_store__2.\n\n1174\n01:03:02,490 --> 01:03:05,950\nThe data will end up in order_store_2,\nand that's what we want.\n\n1175\n01:03:07,760 --> 01:03:11,550\nAll right, so that's gonna tie it\nall together and get that created.\n\n1176\n01:03:11,550 --> 01:03:14,830\nAnd since I've already got my schemes\nin place I can go ahead and do it.\n\n1177\n01:03:14,830 --> 01:03:17,400\nJust highlight that and execute it.\n\n1178\n01:03:17,400 --> 01:03:18,160\nNow, I got an error.\n\n1179\n01:03:18,160 --> 01:03:20,060\nLet's see.\nCan't find data type char.\n\n1180\n01:03:20,060 --> 01:03:21,290\nOh, I've got a typo.\n\n1181\n01:03:21,290 --> 01:03:23,130\nIs not a valid data type.\n\n1182\n01:03:23,130 --> 01:03:27,580\nThere we go.\nShould have parsed it before I ran it.\n\n1183\n01:03:27,580 --> 01:03:29,330\nIf I had parsed it I would\nhave seen that typo.\n\n1184\n01:03:29,330 --> 01:03:30,450\nOr if I just looked.\n\n1185\n01:03:30,450 --> 01:03:33,280\nThe IntelliSense showed me\nthat it was spelled wrong.\n\n1186\n01:03:33,280 --> 01:03:35,400\nAnd I'll execute it.\n\n1187\n01:03:35,400 --> 01:03:36,990\nAll right.\nAnd looks like I got an error.\n\n1188\n01:03:36,990 --> 01:03:38,040\nWhat did I get?\n\n1189\n01:03:38,040 --> 01:03:40,100\nPartition calls for unique index.\n\n1190\n01:03:40,100 --> 01:03:43,480\nMust be a subset of the index key.\n\n1191\n01:03:43,480 --> 01:03:44,160\nAll right.\n\n1192\n01:03:44,160 --> 01:03:46,180\nSo, here's one problem we have.\n\n1193\n01:03:47,250 --> 01:03:53,760\nWhen we create a column that's storing\nsomething like our partition data,\n\n1194\n01:03:53,760 --> 01:03:56,860\nthat data needs to be unique.\n\n1195\n01:03:56,860 --> 01:04:00,180\nWe need some way to make sure that\nit matches up with what we've got.\n\n1196\n01:04:00,180 --> 01:04:03,430\nAnd in my case I chose to\nbuild this off of store ID.\n\n1197\n01:04:03,430 --> 01:04:06,294\nAnd it's just an integer and\nit's not really tied to anything.\n\n1198\n01:04:06,294 --> 01:04:08,998\nAnd they want me to tie that to a key.\n\n1199\n01:04:08,998 --> 01:04:11,151\nSo in mine I've got this primary key and\n\n1200\n01:04:11,151 --> 01:04:15,719\nI I don't want to go into database design\ntoo much but, when you have a primary key,\n\n1201\n01:04:15,719 --> 01:04:19,380\nit basically says, in this column,\nno two numbers can match.\n\n1202\n01:04:19,380 --> 01:04:21,390\nYou don't want any of these\ntwo numbers to match.\n\n1203\n01:04:21,390 --> 01:04:25,940\nNo company, or no store, should have an\norder number that matches the order number\n\n1204\n01:04:25,940 --> 01:04:27,340\nbeing used in the other stores.\n\n1205\n01:04:27,340 --> 01:04:31,220\nWe want every order to have a unique\nnumber, so by flagging as a primary key,\n\n1206\n01:04:31,220 --> 01:04:33,230\nthat ensures that it's going to happen.\n\n1207\n01:04:33,230 --> 01:04:35,560\nMy store number, though,\nI don't want that to be unique.\n\n1208\n01:04:35,560 --> 01:04:41,400\nI'm gonna have more than one\norder that is tied to my store.\n\n1209\n01:04:41,400 --> 01:04:44,490\nI want store number four to\nhave tons of orders every day.\n\n1210\n01:04:44,490 --> 01:04:47,110\nIf they only get one order a day,\nI'm gonna go broke.\n\n1211\n01:04:47,110 --> 01:04:51,610\nSo, we don't want that to be unique, but\nI don't have it really tied to anything.\n\n1212\n01:04:51,610 --> 01:04:52,500\nIt's just a store number.\n\n1213\n01:04:52,500 --> 01:04:54,370\nWe can put whatever we want in there.\n\n1214\n01:04:54,370 --> 01:04:59,410\nBut in order to do my partitioning,\nI need it to be tied to a key somewhere.\n\n1215\n01:04:59,410 --> 01:05:03,830\nSo what we really need to do is have\nanother table that lists our stores and\n\n1216\n01:05:03,830 --> 01:05:08,460\nover there, I should have no two\nstores with the same number.\n\n1217\n01:05:08,460 --> 01:05:10,460\nAnd then I can tie this to the other one.\n\n1218\n01:05:10,460 --> 01:05:12,390\nIt's what's called a foreign key.\n\n1219\n01:05:12,390 --> 01:05:16,580\nSo I have a little bit more infrastructure\nI'll need to do to get this one in place,\n\n1220\n01:05:16,580 --> 01:05:18,750\nbut I don't wanna go into\nthe table design of things.\n\n1221\n01:05:18,750 --> 01:05:20,325\nSince this is not really what\nwe're worried about, but\n\n1222\n01:05:20,325 --> 01:05:21,640\nthat's what it's complaining about there.\n\n1223\n01:05:21,640 --> 01:05:27,450\nThat it's not able to do it because\nof my primary key, it's not defined.\n\n1224\n01:05:27,450 --> 01:05:29,005\nThat's a table design issue.\n\n1225\n01:05:29,005 --> 01:05:33,410\nBut as far as creating the table\nitself tied to that function,\n\n1226\n01:05:33,410 --> 01:05:38,250\nit's gonna attach it and now,\nas I start to add records to that table,\n\n1227\n01:05:38,250 --> 01:05:41,940\nwhen our developers or our software,\nor whatever, starts adding records.\n\n1228\n01:05:41,940 --> 01:05:45,180\nEvery time you insert a new record,\nit'll run through this formula,\n\n1229\n01:05:45,180 --> 01:05:46,890\nrun through this function.\n\n1230\n01:05:46,890 --> 01:05:50,600\nThat does create a little\nbit of performance overhead.\n\n1231\n01:05:50,600 --> 01:05:53,520\nNot much though because these\nfunctions are cached into RAM.\n\n1232\n01:05:53,520 --> 01:05:56,210\nIt's a guarantee that these\nfunctions will be cached into RAM\n\n1233\n01:05:56,210 --> 01:05:57,800\ncuz they're constantly used.\n\n1234\n01:05:57,800 --> 01:06:00,210\nThey have to be used for reads, also.\n\n1235\n01:06:00,210 --> 01:06:02,300\nIf I run a query that says give\nme all the store orders for\n\n1236\n01:06:02,300 --> 01:06:05,700\nstore number four, it's gotta figure out\nwhere to retrieve those from, and so\n\n1237\n01:06:05,700 --> 01:06:08,120\nit's gonna pull that from RAM.\n\n1238\n01:06:08,120 --> 01:06:12,110\nSo the overhead is really negligible and\nthen spreading the access across\n\n1239\n01:06:12,110 --> 01:06:14,040\nhard drives,\nthat's what makes the big difference.\n\n1240\n01:06:14,040 --> 01:06:16,720\nSo it'll reach out and\nit'll knock that out.\n\n1241\n01:06:16,720 --> 01:06:19,610\nThe key thing to remember is when you\ncreate that table, it's not being created\n\n1242\n01:06:19,610 --> 01:06:23,690\non one file group anymore, it's being\ncreated on the partition scheme.\n\n1243\n01:06:23,690 --> 01:06:27,960\nThat partition scheme is what\nties everything together.\n\n1244\n01:06:29,010 --> 01:06:32,210\nI'll post this sample\nalong with my show notes,\n\n1245\n01:06:32,210 --> 01:06:36,320\nbut Microsoft actually has a really\ngood example on their site, too.\n\n1246\n01:06:36,320 --> 01:06:38,530\nLet me see if I have that pulled up.\n\n1247\n01:06:38,530 --> 01:06:40,060\nNo, I don't have that pulled up.\n\n1248\n01:06:40,060 --> 01:06:41,340\nLet me just pull it up.\n\n1249\n01:06:41,340 --> 01:06:48,280\nThey've got a nice one,\non their tech net site.\n\n1250\n01:06:48,280 --> 01:06:49,170\nLet me see if I can just\nfind it really quick.\n\n1251\n01:06:49,170 --> 01:06:51,360\nYeah, I've actually been\nto this page before.\n\n1252\n01:06:53,370 --> 01:06:54,940\nWhere, it's kind of funny.\n\n1253\n01:06:54,940 --> 01:06:57,330\nThey walk through doing it in the GUI,\nbut then they stop and\n\n1254\n01:06:57,330 --> 01:07:00,200\nthey run it through the CLI anyway.\n\n1255\n01:07:00,200 --> 01:07:03,720\nBut you'll see here their example where\nthey create their file groups just like I\n\n1256\n01:07:03,720 --> 01:07:06,960\ndid, they define their\nfiles just like I did, and\n\n1257\n01:07:06,960 --> 01:07:08,950\nthen they do it using that integer.\n\n1258\n01:07:08,950 --> 01:07:13,050\nIn fact, that little example that I pulled\nfrom us actually came from this page.\n\n1259\n01:07:13,050 --> 01:07:15,140\nBut when they go and create their table,\n\n1260\n01:07:15,140 --> 01:07:19,250\nsee how they're doing this column one\nas a primary key flagging as unique?\n\n1261\n01:07:19,250 --> 01:07:21,840\nAnd then they're creating their\nrange on that column one.\n\n1262\n01:07:21,840 --> 01:07:24,470\nSo it's happy there,\nbecause it's a primary key.\n\n1263\n01:07:24,470 --> 01:07:27,800\nIn my example, I don't want store\nnumber to be a primary key cuz\n\n1264\n01:07:27,800 --> 01:07:29,830\nI need more than one order for the store.\n\n1265\n01:07:29,830 --> 01:07:32,270\nSo my example's a little bit\ndifferent than theirs, but\n\n1266\n01:07:32,270 --> 01:07:33,345\nyou can run through theirs.\n\n1267\n01:07:33,345 --> 01:07:35,679\nTheir's is not really real\nworld because there's not\n\n1268\n01:07:37,130 --> 01:07:39,880\na great need where you'd break up your\npartitions the way that they're doing it.\n\n1269\n01:07:39,880 --> 01:07:42,505\nSo, mine's a little more practical.\n\n1270\n01:07:42,505 --> 01:07:44,340\nTheir's is a little more, I guess,\n\n1271\n01:07:44,340 --> 01:07:46,970\neasy to implement, but\nthey're both worth a look at.\n\n1272\n01:07:46,970 --> 01:07:51,120\nI'll post the link to this article with\nthe show notes too so you can see it.\n\n1273\n01:07:51,120 --> 01:07:52,610\nBut those are partition tables.\n\n1274\n01:07:52,610 --> 01:07:56,110\nThey're really neat,\nreally advanced stuff though.\n\n1275\n01:07:56,110 --> 01:08:00,040\nMost organizations, small, medium\nbusinesses, you're not gonna need it.\n\n1276\n01:08:00,040 --> 01:08:04,180\nEven large and enterprise organizations,\nif your database is properly tuned,\n\n1277\n01:08:04,180 --> 01:08:07,030\nyou may not be worried about\nthe performance of this stuff.\n\n1278\n01:08:07,030 --> 01:08:09,188\nBut if you've got a massive database.\n\n1279\n01:08:09,188 --> 01:08:14,800\nIf you're amazon.com and you process\nmillions of orders per year, and you've\n\n1280\n01:08:14,800 --> 01:08:20,970\ngot historical data going back 15 years to\ntheir company creation, it becomes giant.\n\n1281\n01:08:20,970 --> 01:08:22,550\nAnd those tables can become so\n\n1282\n01:08:22,550 --> 01:08:26,650\nlarge that doing queries\nagainst them can take forever.\n\n1283\n01:08:26,650 --> 01:08:30,260\nSo partitioning is one\nway we can optimize that,\n\n1284\n01:08:30,260 --> 01:08:32,970\none way we can improve that behavior.\n\n1285\n01:08:32,970 --> 01:08:34,880\nNow with somebody like Amazon,\nyou might ask yourself,\n\n1286\n01:08:34,880 --> 01:08:37,880\nif I can't do this stuff after the fact,\nhow do they implement it?\n\n1287\n01:08:37,880 --> 01:08:42,550\nWell, as you grow, what you do is\nyou create an all new set of tables,\n\n1288\n01:08:42,550 --> 01:08:44,110\nan all new database server for them.\n\n1289\n01:08:44,110 --> 01:08:46,220\nThey usually just do an all new server.\n\n1290\n01:08:46,220 --> 01:08:49,780\nAnd then properly partition the new\nserver the way you want it, and\n\n1291\n01:08:49,780 --> 01:08:53,330\nthen at some point,\nthey introduce a cut over, where they\n\n1292\n01:08:53,330 --> 01:08:57,120\ncut their system over from updating one\nset of tables, to updating the new set.\n\n1293\n01:08:57,120 --> 01:08:59,720\nThat creates that migration,\nthat movement over, and\n\n1294\n01:08:59,720 --> 01:09:02,760\nthey can do it with very minimal,\nor no downtime.\n\n1295\n01:09:02,760 --> 01:09:06,600\nIt is a tricky process,\nit is pretty advanced, but it does work.\n\n1296\n01:09:09,170 --> 01:09:12,710\nIf we implement these when our\ndatabase is being created,\n\n1297\n01:09:12,710 --> 01:09:17,100\nnow our data gets loaded in, it's fully\npartitioned, we're fully optimized.\n\n1298\n01:09:17,100 --> 01:09:20,140\nThese are all things we need to think\nabout as a system administrator when we're\n\n1299\n01:09:20,140 --> 01:09:21,990\ndesigning these database servers.\n\n1300\n01:09:21,990 --> 01:09:23,460\nYour developers aren't going\nto think of this stuff.\n\n1301\n01:09:23,460 --> 01:09:24,620\nThey're not going to tell you about it.\n\n1302\n01:09:24,620 --> 01:09:27,250\nYou need to be aware of it ahead of time.\n\n1303\n01:09:27,250 --> 01:09:32,980\nGet your databases created, put in place,\nand you'll be ready to rock.\n\n1304\n01:09:32,980 --> 01:09:35,670\nWell that's probably a pretty\ngood spot for us to stop.\n\n1305\n01:09:35,670 --> 01:09:39,060\nWe've taken a look at\ncreating the database.\n\n1306\n01:09:39,060 --> 01:09:41,440\nWe've taken a look at\nthe files underneath, and\n\n1307\n01:09:41,440 --> 01:09:45,750\na lot of the things we need to think about\nbefore we start throwing data in it.\n\n1308\n01:09:45,750 --> 01:09:49,400\nWhat we need to do next is start taking\na look at how we handle our databases\n\n1309\n01:09:49,400 --> 01:09:52,000\nonce we put data in them.\n\n1310\n01:09:52,000 --> 01:09:54,910\nBut that's probably a good topic for\nour next episode, so\n\n1311\n01:09:54,910 --> 01:09:56,550\nwe'll wrap this one up here.\n\n1312\n01:09:56,550 --> 01:09:57,270\nLet me remind you guys,\n\n1313\n01:09:57,270 --> 01:10:00,640\nif you have any questions,\nyou can always jump over to our website.\n\n1314\n01:10:00,640 --> 01:10:03,745\nThere's the link that says Q &\nA at the top of every single page.\n\n1315\n01:10:03,745 --> 01:10:06,220\nClick on that link,\nit'll take you to our forums.\n\n1316\n01:10:06,220 --> 01:10:08,550\nYou can post your questions there,\nwe monitor and\n\n1317\n01:10:08,550 --> 01:10:11,240\nanswer all throughout the week.\n\n1318\n01:10:11,240 --> 01:10:15,680\nIf you have a question and we're live,\nyou can go to itpro.tv/live.\n\n1319\n01:10:15,680 --> 01:10:17,820\nYou'll see the chat box\nright beneath the video.\n\n1320\n01:10:17,820 --> 01:10:18,700\nPost your questions there.\n\n1321\n01:10:18,700 --> 01:10:20,480\nWe monitor and answer during the show.\n\n1322\n01:10:20,480 --> 01:10:21,980\nTake advantage of that.\n\n1323\n01:10:21,980 --> 01:10:22,850\nWe're here to help you.\n\n1324\n01:10:22,850 --> 01:10:26,360\nWe want to make sure you guys have\nthe information you need to be successful.\n\n1325\n01:10:27,490 --> 01:10:28,960\nWell, I hope you guys enjoyed the show.\n\n1326\n01:10:28,960 --> 01:10:33,320\nSigning off for IT Pro TV,\nI'm Don Pezet and I'll see you next time.\n\n1327\n01:10:33,320 --> 01:10:43,320\n[MUSIC]\n\n1328\n01:10:52,240 --> 01:10:55,630\nTime for a special after\nthe credits section of ITProTV.\n\n1329\n01:10:55,630 --> 01:11:00,390\nAt the very end of that episode,\nI was creating a partition table and\n\n1330\n01:11:00,390 --> 01:11:02,590\nwhen I actually went to run it,\nit generated an error.\n\n1331\n01:11:02,590 --> 01:11:05,500\nSo, it didn't truly create the table.\n\n1332\n01:11:05,500 --> 01:11:08,043\nNow I kind of passed over it\nat the end of the episode, but\n\n1333\n01:11:08,043 --> 01:11:10,930\nI know some of you guys are probably\ncurious why that happened.\n\n1334\n01:11:10,930 --> 01:11:13,395\nWell, the reason has\nto do with indexes and\n\n1335\n01:11:13,395 --> 01:11:16,560\nwe haven't covered indexes\nat this point in the show.\n\n1336\n01:11:16,560 --> 01:11:19,890\nSo I didn't want to dive into the index\nside of things in the show and\n\n1337\n01:11:19,890 --> 01:11:23,540\nblow people's minds when they just learned\nabout partition tables in the first place.\n\n1338\n01:11:23,540 --> 01:11:27,060\nSo that's why I didn't resolve\nthat issue during the show.\n\n1339\n01:11:27,060 --> 01:11:29,790\nBut for those of you that are really\ncurious, let me show you how.\n\n1340\n01:11:29,790 --> 01:11:32,720\nNow, if you haven't watched\nour index episode yet,\n\n1341\n01:11:32,720 --> 01:11:34,010\nyou should probably go and watch that.\n\n1342\n01:11:34,010 --> 01:11:36,430\nYou need to make sure you\nunderstand what indexes are.\n\n1343\n01:11:36,430 --> 01:11:40,381\nBut one thing I mentioned in the show\nwas that when we do a partition table,\n\n1344\n01:11:40,381 --> 01:11:43,123\nthe partitioning scheme\nneeds to be stored in RAM so\n\n1345\n01:11:43,123 --> 01:11:47,010\nthat the server knows where to copy\ndata to when it's being added.\n\n1346\n01:11:47,010 --> 01:11:49,690\nAnd that's what it's really complaining\nabout down here, is it's saying I'm\n\n1347\n01:11:49,690 --> 01:11:54,140\ntrying to create this table and\nI've got a primary key right here.\n\n1348\n01:11:54,140 --> 01:11:57,344\nYour primary keys automatically\nhave an index created on them and\n\n1349\n01:11:57,344 --> 01:11:58,401\nit's stored in RAM.\n\n1350\n01:11:58,401 --> 01:12:01,140\nBut that's not what I'm partitioning on,\n\n1351\n01:12:01,140 --> 01:12:05,146\nI'm partitioning on store number,\nwhich is not a primary key.\n\n1352\n01:12:05,146 --> 01:12:08,309\nIn the Microsoft example I brought up,\nthey were partitioning on a primary key,\n\n1353\n01:12:08,309 --> 01:12:09,859\nso they didn't have to worry about it.\n\n1354\n01:12:09,859 --> 01:12:14,450\nBut in real life land, you almost\nnever partition off of a primary key.\n\n1355\n01:12:14,450 --> 01:12:16,970\nPrimary keys are unique, Right?\n\n1356\n01:12:16,970 --> 01:12:19,990\nWe need to partition based on dates or\nstore numbers.\n\n1357\n01:12:19,990 --> 01:12:21,500\nThings that are not unique.\n\n1358\n01:12:21,500 --> 01:12:24,960\nSo the example that Microsoft gives on\ntheir site is just not very realistic.\n\n1359\n01:12:24,960 --> 01:12:26,420\nBut the way that we fix it,\n\n1360\n01:12:26,420 --> 01:12:31,570\nis by creating an index that\ncovers not only our primary key.\n\n1361\n01:12:31,570 --> 01:12:34,530\nBut also the item that we're\ngoing to be partitioning on.\n\n1362\n01:12:34,530 --> 01:12:38,410\nThat will force the partitioned\nitem to remain in RAM and\n\n1363\n01:12:38,410 --> 01:12:40,510\nmake it where the server\nknows where to send data.\n\n1364\n01:12:40,510 --> 01:12:41,910\nThat's what's missing here.\n\n1365\n01:12:41,910 --> 01:12:43,970\nThat's why this error was generated.\n\n1366\n01:12:43,970 --> 01:12:48,500\nBecause I don't have an index\nthat covers the store column.\n\n1367\n01:12:48,500 --> 01:12:52,050\nSo if I want to fix that,\nwhen I created the table.\n\n1368\n01:12:52,050 --> 01:12:54,120\nSo here's the table definition.\n\n1369\n01:12:54,120 --> 01:12:57,230\nWe could flag ID as a primary key or not.\n\n1370\n01:12:57,230 --> 01:13:00,920\nUsually, we don't do it right here but\ninstead assign a constraint.\n\n1371\n01:13:00,920 --> 01:13:01,980\nAnd so see what I'm doing here,\n\n1372\n01:13:01,980 --> 01:13:07,570\nI'm creating a constraint\nthat's saying orders ID store.\n\n1373\n01:13:07,570 --> 01:13:13,070\nI'm creating a constraint that covers both\nthe ID number that I do want to be unique.\n\n1374\n01:13:13,070 --> 01:13:16,480\nAnd the store number,\nwhich is what I'm partitioning on.\n\n1375\n01:13:16,480 --> 01:13:18,870\nThat'll force both of them to go into RAM.\n\n1376\n01:13:18,870 --> 01:13:24,725\nAnd so I'm just creating that, a primary\nkey non cluster ID and store, all right?\n\n1377\n01:13:24,725 --> 01:13:29,110\nThis'll ensure that I never have an order\nID that has the same store number.\n\n1378\n01:13:29,110 --> 01:13:33,620\nWith this model I could have order\nnumber five at store one and\n\n1379\n01:13:33,620 --> 01:13:35,220\norder number five at store two.\n\n1380\n01:13:35,220 --> 01:13:36,550\nIt would allow that, but\n\n1381\n01:13:36,550 --> 01:13:40,360\nI couldn't have two order number\nfives at store one, right?\n\n1382\n01:13:40,360 --> 01:13:42,010\nAnd that's normally what we would want.\n\n1383\n01:13:42,010 --> 01:13:45,950\nSo this creates a primary key that\nbasically covers more than one column,\n\n1384\n01:13:45,950 --> 01:13:47,650\nall right?\n\n1385\n01:13:47,650 --> 01:13:52,170\nNow when you do that, the constraint has\nto be built off of your partition scheme.\n\n1386\n01:13:52,170 --> 01:13:55,390\nSo that's what I'm doing here\nis on partition scheme orders\n\n1387\n01:13:55,390 --> 01:13:58,180\nwith the store column being the partition.\n\n1388\n01:13:58,180 --> 01:14:03,460\nAnd then the table itself is on the\npartition scheme with the store column.\n\n1389\n01:14:03,460 --> 01:14:04,200\nAll right.\n\n1390\n01:14:04,200 --> 01:14:08,330\nAnd then lastly, that's going\nto create a non clustered index.\n\n1391\n01:14:08,330 --> 01:14:12,260\nBut clustered indexes will give us better\nperformance on a partition scheme.\n\n1392\n01:14:12,260 --> 01:14:15,140\nSo then, I just come back and\ncreate another clustered index.\n\n1393\n01:14:15,140 --> 01:14:22,000\nAnd I'm creating it on the store column,\nagain, attached to the partition scheme.\n\n1394\n01:14:22,000 --> 01:14:24,890\nSo, that's going to force\nthose to be in RAM, and\n\n1395\n01:14:24,890 --> 01:14:27,130\nany time I run a query against the table.\n\n1396\n01:14:27,130 --> 01:14:30,960\nAny time I go to add records to the table,\nit's going to look at the order ID and\n\n1397\n01:14:30,960 --> 01:14:33,170\nthe store number, which are in RAM.\n\n1398\n01:14:33,170 --> 01:14:36,690\nAnd then it will know exactly where to\ngo on the hard drive to find the data.\n\n1399\n01:14:36,690 --> 01:14:38,850\nThat's the key piece of optimization.\n\n1400\n01:14:38,850 --> 01:14:40,940\nBut, since the viewers hadn't\nlearned about indexes yet.\n\n1401\n01:14:40,940 --> 01:14:42,640\nI didn't want to go into\nthat during the show.\n\n1402\n01:14:42,640 --> 01:14:44,940\nSo that's why it's here after the piece.\n\n1403\n01:14:44,940 --> 01:14:49,080\nSo if i take that right there and\nexecute it.\n\n1404\n01:14:49,080 --> 01:14:52,580\nWe'll see that it completes successfully\nand over here i can refresh.\n\n1405\n01:14:52,580 --> 01:14:56,310\nAnd now i'll have a nice happy\norders table right there\n\n1406\n01:14:56,310 --> 01:14:58,190\nthat is fully partitioned.\n\n1407\n01:14:58,190 --> 01:15:00,790\nAnd the associated columns the I.D.\n\n1408\n01:15:00,790 --> 01:15:05,700\nand the order of the store number, those\nare in RAM optimized and ready to rock.\n\n1409\n01:15:05,700 --> 01:15:09,360\nSo that's the final piece, that's why\nwe got that aired during the show.\n\n1410\n01:15:09,360 --> 01:15:12,250\nAnd why I didn't actually\ncover how to fix it.\n\n1411\n01:15:12,250 --> 01:15:14,650\nIf you've already watched the index\nepisode, though, this'll cover it.\n\n1412\n01:15:14,650 --> 01:15:16,770\nAnd I'll mention it in the index episode,\ntoo.\n\n1413\n01:15:16,770 --> 01:15:19,820\nBut I just wanted to make sure you guys\nkind of saw the completion of that.\n\n1414\n01:15:19,820 --> 01:15:22,300\nI know that's important to some people.\n\n1415\n01:15:22,300 --> 01:15:24,440\nAll right.\nWell, I hope you guys enjoyed it.\n\n1416\n01:15:24,440 --> 01:15:24,971\nI'll see you next episode.\n\n1417\n01:15:24,971 --> 01:15:31,400\n[MUSIC]\n\n",
          "vimeoId": "105340720"
        }
      ],
      "title": "Maintain instances and databases"
    },
    {
      "episodes": [
        {
          "description": "In this episode Don demonstrates how to configure and activate the SQL Server Agent. He then shows how to schedule and automate various tasks using the SQL Agent.",
          "length": "5616",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/005-SQL-Server-Agent.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/005-SQL-Server-Agent-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/005-SQL-Server-Agent-sm.jpg",
          "title": "SQL Server Agent",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:33,458 --> 00:00:36,271\nAll right, good morning,\ngood afternoon, and good evening.\n\n3\n00:00:36,271 --> 00:00:39,000\nAnd welcome back to another\nepisode of ITProTV.\n\n4\n00:00:39,000 --> 00:00:44,040\nI'm your host, Don Pezet back again with\nanother episode of Microsoft SQL Server.\n\n5\n00:00:44,040 --> 00:00:47,292\nFor those of you that are watching\nlive today is Apple announcement day.\n\n6\n00:00:47,292 --> 00:00:52,200\nSo what better way to recognize a new\nApple press release than not to talk about\n\n7\n00:00:52,200 --> 00:00:53,417\nit at all, right?\n\n8\n00:00:53,417 --> 00:00:57,053\nSo [LAUGH] we're gonna dive into\nMicrosoft's SQL Server which is far more\n\n9\n00:00:57,053 --> 00:00:58,685\nuseful than a new iPhone.\n\n10\n00:00:58,685 --> 00:01:01,845\nSo [LAUGH] what we're gonna do today is\nwe're gonna look at some neat things that\n\n11\n00:01:01,845 --> 00:01:04,555\nI kind of alluded to in earlier episodes.\n\n12\n00:01:04,555 --> 00:01:06,425\nNow we're kinda get caught up.\n\n13\n00:01:06,425 --> 00:01:11,435\nI've mentioned more than once how when\nwe're working with our databases and\n\n14\n00:01:11,435 --> 00:01:14,485\nit's a one time activity, we use our GUI.\n\n15\n00:01:14,485 --> 00:01:16,170\nWe use our Graphical User Interface.\n\n16\n00:01:16,170 --> 00:01:18,390\nWe jump into our SQL Management Studio.\n\n17\n00:01:18,390 --> 00:01:20,900\nWe use our mouse, we right click,\nwe do our options,\n\n18\n00:01:20,900 --> 00:01:23,350\nour settings, we're in, and we're done.\n\n19\n00:01:23,350 --> 00:01:27,120\nBut there are plenty of times\nwhere we want to automate things,\n\n20\n00:01:27,120 --> 00:01:29,650\nwhere we want things to happen later,\nright?\n\n21\n00:01:29,650 --> 00:01:32,705\nI want to make a change, but\nI don't want it to happen until 2:00 am.\n\n22\n00:01:32,705 --> 00:01:37,370\nBut I don't want to be here at 2:00 am, I\njust want the change to happen at 2:00 am.\n\n23\n00:01:37,370 --> 00:01:39,430\nWell how do we go about automating that?\n\n24\n00:01:39,430 --> 00:01:42,980\nAnd the way that we do\nit in Microsoft SQLl is\n\n25\n00:01:42,980 --> 00:01:46,520\nwe use what is called\nthe SQL Server Agent.\n\n26\n00:01:46,520 --> 00:01:50,190\nThe SQL Server Agent is a process\nthat runs in the background, and\n\n27\n00:01:50,190 --> 00:01:51,710\nit's our do boy.\n\n28\n00:01:51,710 --> 00:01:53,810\nWe tell it to do things and it does it.\n\n29\n00:01:53,810 --> 00:01:55,590\nAnd it does them when we tell it to do it.\n\n30\n00:01:55,590 --> 00:01:58,500\nSo it's a neat way for\nautomating things or\n\n31\n00:01:58,500 --> 00:02:01,970\nat least scheduling things to\noccur when you are not around.\n\n32\n00:02:01,970 --> 00:02:06,160\nNow when you're dealing with a database\nthere is a lot of stuff that can go wrong.\n\n33\n00:02:06,160 --> 00:02:09,890\nSo using the SQL Server Agent does\nrequire a good bit of planning and\n\n34\n00:02:09,890 --> 00:02:13,150\nit's a lot more advanced than\njust scheduling software.\n\n35\n00:02:13,150 --> 00:02:15,730\nIt can do some really, really cool stuff.\n\n36\n00:02:15,730 --> 00:02:18,510\nSo I want to highlight some of those\nfeatures, some of those things.\n\n37\n00:02:18,510 --> 00:02:20,670\nBut, I also want to touch\non some of the pitfalls and\n\n38\n00:02:20,670 --> 00:02:25,430\nthe ways we can protect ourselves to\nensure that things execute properly or\n\n39\n00:02:25,430 --> 00:02:28,680\nat least that we're notified in\nthe event a problem happens.\n\n40\n00:02:28,680 --> 00:02:30,960\nThere's actually a lot of\nmoving pieces in this one so\n\n41\n00:02:30,960 --> 00:02:32,830\nwe want to take a look at each of those.\n\n42\n00:02:32,830 --> 00:02:36,570\nSo, while the overall episode\nis going to be talking about\n\n43\n00:02:36,570 --> 00:02:41,150\nthe sSQL Server Agent I've gotta talk\nabout a lot of add-on pieces, too,\n\n44\n00:02:41,150 --> 00:02:42,840\nthat make the agent better.\n\n45\n00:02:42,840 --> 00:02:45,430\nSo, we're gonna cover\na wide array of things, but\n\n46\n00:02:45,430 --> 00:02:49,640\nat the end of the day, it's all gonna\ntie back into that SQL Server Agent.\n\n47\n00:02:49,640 --> 00:02:53,180\nNow, the agent is installed as\npart of Microsoft SQL Server,\n\n48\n00:02:53,180 --> 00:02:57,090\nso when you installed SQL Server,\nit didn't even give you the option.\n\n49\n00:02:57,090 --> 00:03:00,410\nI don't think you can choose\nto not install the agent.\n\n50\n00:03:00,410 --> 00:03:03,520\nBut the agent is not turned on by default.\n\n51\n00:03:03,520 --> 00:03:05,830\nSo it was there during the installer.\n\n52\n00:03:05,830 --> 00:03:09,170\nAnd you guys might remember, there\nwas a screen that was asking us about\n\n53\n00:03:09,170 --> 00:03:11,960\nwhat user accounts we\nwanted our services to use.\n\n54\n00:03:11,960 --> 00:03:15,960\nAnd the SQL Server Agent was the only\none that didn't have an account listed.\n\n55\n00:03:15,960 --> 00:03:18,480\nAnd it was set to manually start.\n\n56\n00:03:18,480 --> 00:03:22,260\nThat means that the SQL Server Agent\nis just not enabled by default.\n\n57\n00:03:22,260 --> 00:03:24,710\nThe reason Microsoft does that is\n\n58\n00:03:24,710 --> 00:03:28,030\nthey don't know whether you're\ngoing to use the agent or not.\n\n59\n00:03:28,030 --> 00:03:30,960\nIf you choose not to use the agent,\nthen they don't want it running.\n\n60\n00:03:30,960 --> 00:03:31,480\nSitting there,\n\n61\n00:03:31,480 --> 00:03:35,088\nit's just one extra thing to increase\nwhat's called your attack surface.\n\n62\n00:03:35,088 --> 00:03:37,850\nYour attack surface is\nanything an attacker could\n\n63\n00:03:37,850 --> 00:03:42,140\npossibly use to exploit your server,\nan agent is one of those things.\n\n64\n00:03:42,140 --> 00:03:45,630\nThe agent runs jobs under\na certain user account.\n\n65\n00:03:45,630 --> 00:03:49,050\nIf an attacker can find some way\nto get the agent to run a job that\n\n66\n00:03:49,050 --> 00:03:53,400\nthey've designed, then now the agent is\nperforming actions with higher privileges.\n\n67\n00:03:53,400 --> 00:03:54,540\nSo it's privilege escalation.\n\n68\n00:03:54,540 --> 00:03:56,870\nAnd that's not good, right.\n\n69\n00:03:56,870 --> 00:04:00,150\nSo Microsoft just leaves it disabled\nby default and if you want to\n\n70\n00:04:00,150 --> 00:04:04,920\nuse the SQL Server Agent, you turn it on\nand you get a set up to get what you need.\n\n71\n00:04:04,920 --> 00:04:08,590\nSo, that's gonna be mission number one\nis just getting the SQL Server Agent\n\n72\n00:04:08,590 --> 00:04:09,280\nup and running.\n\n73\n00:04:09,280 --> 00:04:15,570\nNow, If you've only got one SQL Server,\njust one database server; then typically\n\n74\n00:04:15,570 --> 00:04:19,540\nwhat we'll do is we'll set up the agent\nto run under a local system account.\n\n75\n00:04:19,540 --> 00:04:23,660\nsight, So it'll just run as the system and\nit'll perform it's jobs.\n\n76\n00:04:23,660 --> 00:04:27,088\nBut if you've got ten SQL Servers or\n100 SQL Servers,\n\n77\n00:04:27,088 --> 00:04:31,530\nyou don't necessarily need to run\nthe agent on each and every one of them.\n\n78\n00:04:31,530 --> 00:04:34,810\nIn fact you can run the agent\non just one server.\n\n79\n00:04:34,810 --> 00:04:37,530\nLarge environments, enterprise\nenvironments, where they've got tons of\n\n80\n00:04:37,530 --> 00:04:41,838\ndatabase servers, will typically\nhave dedicated agent servers.\n\n81\n00:04:41,838 --> 00:04:44,733\nSo a SQL server that doesn't\nhost any databases, well,\n\n82\n00:04:44,733 --> 00:04:48,370\nno production databases, and\nit just does the agent tasks, and so\n\n83\n00:04:48,370 --> 00:04:51,840\nit's reaching out and remotely\nexecuting things on the other servers.\n\n84\n00:04:51,840 --> 00:04:55,930\nIf you're going to do that, your\ncredentials become a real problem, right?\n\n85\n00:04:55,930 --> 00:04:57,250\nUser authentication.\n\n86\n00:04:57,250 --> 00:05:01,070\nIf the agent is running on\nSQL server number one, and\n\n87\n00:05:01,070 --> 00:05:05,310\nit's running on a local system account,\nand it goes to SQL server number\n\n88\n00:05:05,310 --> 00:05:09,640\ntwo to run a command, does it have\npermissions on SQL Server number two?\n\n89\n00:05:09,640 --> 00:05:11,530\nNo, it doesn't, all right?\n\n90\n00:05:11,530 --> 00:05:14,920\nSo in that scenario,\nwe would need the SQL Server agent to run\n\n91\n00:05:14,920 --> 00:05:17,940\nunder a domain account,\nan active directory domain account so\n\n92\n00:05:17,940 --> 00:05:20,565\nthat we could assign permissions\non each of the different servers.\n\n93\n00:05:20,565 --> 00:05:21,285\nServers.\n\n94\n00:05:21,285 --> 00:05:21,885\nRight?\n\n95\n00:05:21,885 --> 00:05:24,845\nSo that's really where we start\nwith the SQL Server Agent is\n\n96\n00:05:24,845 --> 00:05:28,295\njust getting it running and\nsetting up those account permissions.\n\n97\n00:05:28,295 --> 00:05:29,155\nAll right?\n\n98\n00:05:29,155 --> 00:05:33,045\nIf you fire up your service's\nadministrative tool.\n\n99\n00:05:33,045 --> 00:05:33,725\nAll right?\n\n100\n00:05:33,725 --> 00:05:38,885\nSo if I go under Tools and\nServices, I can come in here and\n\n101\n00:05:38,885 --> 00:05:43,965\nI can find the SQL Server Agent,\nwhich is gonna be buried in here.\n\n102\n00:05:43,965 --> 00:05:44,665\nHere it is.\n\n103\n00:05:44,665 --> 00:05:45,290\nAll right?\n\n104\n00:05:45,290 --> 00:05:48,990\nNow notice I'm running more than\none instance of sequel server.\n\n105\n00:05:48,990 --> 00:05:51,360\nI've got the main one,\nmy default instance, but\n\n106\n00:05:51,360 --> 00:05:55,410\nI've also got the test sequel instance\nwe created in an earlier episode.\n\n107\n00:05:55,410 --> 00:05:59,065\nThere's a separate agent for\neach instance.\n\n108\n00:05:59,065 --> 00:06:02,635\nAnd that's because you'll probably want\nseparate permissions for each instance.\n\n109\n00:06:02,635 --> 00:06:04,545\nThat's why they're not tied together.\n\n110\n00:06:04,545 --> 00:06:06,915\nYou don't have to do that though.\n\n111\n00:06:06,915 --> 00:06:09,485\nI could disable this agent and\n\n112\n00:06:09,485 --> 00:06:14,075\njust use the first agent if it has\npermissions to access the second instance.\n\n113\n00:06:14,075 --> 00:06:16,635\nBut I could just just one if I wanted.\n\n114\n00:06:16,635 --> 00:06:18,045\nBut Microsoft assumes, hey,\n\n115\n00:06:18,045 --> 00:06:22,480\nif you're going to do separate instances,\nyou probably want separate agents also.\n\n116\n00:06:22,480 --> 00:06:23,240\nAll right.\n\n117\n00:06:23,240 --> 00:06:27,000\nNow, during the install, I had told\nmy default instance to go ahead and\n\n118\n00:06:27,000 --> 00:06:28,880\nstart its agent, right.\n\n119\n00:06:28,880 --> 00:06:31,540\nBut for my test one, I didn't.\n\n120\n00:06:31,540 --> 00:06:35,740\nAnd notice how it said here,\nmanually start up, and it's not running.\n\n121\n00:06:35,740 --> 00:06:39,540\nIf you do a default install of Microsoft\nSQL Server, that's what you'll see.\n\n122\n00:06:39,540 --> 00:06:42,070\nIt'll have a manual start up and\nit's not running.\n\n123\n00:06:42,070 --> 00:06:42,790\nAll right?\n\n124\n00:06:42,790 --> 00:06:47,910\nNotice the account that it's using is an\nNT service account/SQL agent, all right?\n\n125\n00:06:47,910 --> 00:06:50,810\nAnd this one's using an NT Service\naccount/SQL server agent also, but\n\n126\n00:06:50,810 --> 00:06:52,770\nthey're separate service accounts.\n\n127\n00:06:52,770 --> 00:06:56,590\nThose are the managed service\naccounts that the Installer created.\n\n128\n00:06:56,590 --> 00:06:59,400\nBut they're local to this system.\n\n129\n00:06:59,400 --> 00:07:01,940\nSo if I want this to manage\nmore than one server,\n\n130\n00:07:01,940 --> 00:07:03,710\nI probably want to switch\nthat to a domain account.\n\n131\n00:07:03,710 --> 00:07:05,280\nSo one of the first things\nyou'll do is you'll pull\n\n132\n00:07:05,280 --> 00:07:07,350\nup the properties to that service.\n\n133\n00:07:07,350 --> 00:07:09,090\nGo to the log on tab.\n\n134\n00:07:09,090 --> 00:07:12,000\nAnd change that to\nthe appropriate user account.\n\n135\n00:07:12,000 --> 00:07:12,530\nAll right?\n\n136\n00:07:12,530 --> 00:07:15,400\nSo you may have a domain user\naccount that is going to be used for\n\n137\n00:07:15,400 --> 00:07:18,150\nyour agents, until you set it up and\nuse it there.\n\n138\n00:07:18,150 --> 00:07:19,600\nAll right.\n\n139\n00:07:19,600 --> 00:07:21,860\nIn my case though I've\njust got one server and so\n\n140\n00:07:21,860 --> 00:07:23,480\nI can stick with this\nmanaged servers account.\n\n141\n00:07:23,480 --> 00:07:26,180\nNow, notice I can chose\nthe local system account also.\n\n142\n00:07:26,180 --> 00:07:27,710\nThat will work, right?\n\n143\n00:07:27,710 --> 00:07:31,840\nBut the managed service account, that's\na newer feature that was introduced in,\n\n144\n00:07:31,840 --> 00:07:35,040\nI think in Windows Server\n2008 R2 is when we got those.\n\n145\n00:07:35,040 --> 00:07:38,380\nBut it allows for it to automatically\nchange the passwords and\n\n146\n00:07:38,380 --> 00:07:40,650\nuse complex passwords\nat a regular interval.\n\n147\n00:07:40,650 --> 00:07:43,270\nIf you use a local system account,\nthat doesn't happen.\n\n148\n00:07:43,270 --> 00:07:46,268\nAnd it's actually running\nunder the system's privileges,\n\n149\n00:07:46,268 --> 00:07:48,293\nwhich is basically as an administrator.\n\n150\n00:07:48,293 --> 00:07:53,060\nA service account like this we can tailor\nit's permissions to just meet the needs of\n\n151\n00:07:53,060 --> 00:07:54,500\nour particular action.\n\n152\n00:07:54,500 --> 00:07:59,167\nSo it gives us a lot more protection\nthan using that system account.\n\n153\n00:07:59,167 --> 00:08:03,730\nAll right, so I'll stick with those\noptions right there and if it's set to\n\n154\n00:08:03,730 --> 00:08:08,750\nmanual like this one I just need to set it\nup to automatically start and start it up.\n\n155\n00:08:08,750 --> 00:08:12,550\nIf it's set to manual anytime I want to it\nto run I got to go and start it myself and\n\n156\n00:08:12,550 --> 00:08:15,950\nthen if the server reboots,\nit won't start the agent again.\n\n157\n00:08:15,950 --> 00:08:17,820\nSo we'll normally flip those to automatic.\n\n158\n00:08:19,120 --> 00:08:19,640\nAnd there we go.\n\n159\n00:08:19,640 --> 00:08:22,870\nSo now I've got both those\nagents are up and ready to run.\n\n160\n00:08:22,870 --> 00:08:24,820\nNow the test one here\nisn't actually running, so\n\n161\n00:08:24,820 --> 00:08:27,950\nI'll just start it real quick and\nso it'll be running.\n\n162\n00:08:27,950 --> 00:08:30,120\nAnd now my agents are in business.\n\n163\n00:08:30,120 --> 00:08:34,630\nNow it's not often, but\nthere are times when we might\n\n164\n00:08:34,630 --> 00:08:38,510\nask our SQL Server Agent to do something,\nto perform some action and\n\n165\n00:08:38,510 --> 00:08:42,300\nif we've written our script poorly or\nif we're calling some other actions and\n\n166\n00:08:42,300 --> 00:08:46,210\nit causes a crash,\nthe SQL Server Agent can crash, all right?\n\n167\n00:08:46,210 --> 00:08:51,920\nIf it crashes or locks up, all of your\nscheduled jobs will stop running.\n\n168\n00:08:51,920 --> 00:08:53,930\nNow that might not be\nthe end of the world.\n\n169\n00:08:53,930 --> 00:08:57,650\nHey, I wanted to run this script\ntonight at 2 AM but it didn't run.\n\n170\n00:08:57,650 --> 00:08:59,850\nI'll just do it tomorrow at 2 AM, right?\n\n171\n00:08:59,850 --> 00:09:02,040\nBut what if that automated\njob is your backup?\n\n172\n00:09:02,040 --> 00:09:06,290\nI'm backing up every 24 hours and\nmy backups crash and\n\n173\n00:09:06,290 --> 00:09:09,870\ndon't run because\nthe SQL Server Agent froze, right?\n\n174\n00:09:09,870 --> 00:09:12,700\nNow, my backup window that was 24 hours\n\n175\n00:09:12,700 --> 00:09:15,710\njust became 48 hours because\nI missed a backup, right?\n\n176\n00:09:15,710 --> 00:09:16,890\nSo that'd be pretty bad.\n\n177\n00:09:16,890 --> 00:09:20,380\nSo it's a good idea to set recovery\nsettings on these services.\n\n178\n00:09:20,380 --> 00:09:23,790\nIf I take my SQL Server Agent here, and\nI'm just doing the one for my default\n\n179\n00:09:23,790 --> 00:09:28,430\ninstance, and I go back into the\nproperties, you'll see this recovery tab.\n\n180\n00:09:28,430 --> 00:09:32,090\nAnd notice the recovery options right\nnow are all set to take no action.\n\n181\n00:09:32,090 --> 00:09:37,790\nIf the agent locks up or if the agent\ncrashes and shuts down, the server\n\n182\n00:09:37,790 --> 00:09:42,980\nmakes a log entry but that's it,\nit doesn't really do anything else, okay.\n\n183\n00:09:42,980 --> 00:09:47,830\nSo what we can do is we can tell it to try\nand recover and what I like to do is if it\n\n184\n00:09:47,830 --> 00:09:53,690\nfails restart, restart the service and\nget it up and running again.\n\n185\n00:09:53,690 --> 00:09:58,250\nIt may have been just a fluke, some script\nrandom crash but don't let that stop you\n\n186\n00:09:58,250 --> 00:10:01,430\nfrom running your other things go ahead\nand restart and get back in the saddle.\n\n187\n00:10:03,120 --> 00:10:06,360\nIf it crashes again, what do we do?\n\n188\n00:10:06,360 --> 00:10:08,580\nSubsequent failures or\nsecond failure and subsequent.\n\n189\n00:10:08,580 --> 00:10:09,570\nWhat do we do?\n\n190\n00:10:09,570 --> 00:10:12,530\nWell, the second time I might\njust say try and restart again.\n\n191\n00:10:12,530 --> 00:10:13,840\nMaybe one time's not enough right?\n\n192\n00:10:13,840 --> 00:10:15,000\nWe'll try and restart twice.\n\n193\n00:10:16,400 --> 00:10:23,070\nBut if it's still not working, if it\ncrashes again then what do we do finally,\n\n194\n00:10:23,070 --> 00:10:26,090\nand you can be really aggressive here and\nsay restart the computer.\n\n195\n00:10:26,090 --> 00:10:30,260\nIf the agent crashes twice just go\nahead and reboot the whole server.\n\n196\n00:10:31,300 --> 00:10:35,300\nThat might be a little too aggressive\nthough if you've got a 24/7 system.\n\n197\n00:10:35,300 --> 00:10:38,460\nWe are just talking about the agent,\nso the agent might have crashed but\n\n198\n00:10:38,460 --> 00:10:40,100\nthe database is still online.\n\n199\n00:10:40,100 --> 00:10:42,430\nUsers can get to the database and\naccess data.\n\n200\n00:10:42,430 --> 00:10:45,340\nSo, rebooting the server might\nbe a little heavy handed.\n\n201\n00:10:45,340 --> 00:10:50,450\nInstead I might want to perform some\nother action, like, Run a Program.\n\n202\n00:10:50,450 --> 00:10:54,160\nWith Run a Program you call a script or\nexecutable or\n\n203\n00:10:54,160 --> 00:10:56,490\nwhatever, which can do anything.\n\n204\n00:10:56,490 --> 00:10:58,450\nYou can have it shoot you an email,\n\n205\n00:10:58,450 --> 00:11:01,000\nyou can have it take a backup\nof the server you can have it do\n\n206\n00:11:01,000 --> 00:11:04,870\nall sorts of crazy things, it's only\nlimited to what you can write in a script.\n\n207\n00:11:04,870 --> 00:11:11,220\nSo you can call all sorts of stuff there\nand really do some neat things with it.\n\n208\n00:11:11,220 --> 00:11:15,710\nI've done simple email notifications to\nlet me know hey this thing failed and\n\n209\n00:11:15,710 --> 00:11:17,150\nhere's the failure account.\n\n210\n00:11:17,150 --> 00:11:19,350\nSee how you can upend that\nfailure account to the end.\n\n211\n00:11:19,350 --> 00:11:22,080\nSo you can do simple things like that,\nreal easy to do and\n\n212\n00:11:22,080 --> 00:11:23,120\nget those notifications.\n\n213\n00:11:24,530 --> 00:11:28,950\nNow when we say restart the service here,\nwhen it goes from first failure to second\n\n214\n00:11:28,950 --> 00:11:32,150\nfailure to subsequent failure,\nwe need to pay attention to this.\n\n215\n00:11:32,150 --> 00:11:33,620\nReset fail count after.\n\n216\n00:11:34,910 --> 00:11:38,300\nNow, what this setting does is it says\n\n217\n00:11:38,300 --> 00:11:41,970\nhow far in between the crashes\ndo I count a first and a second.\n\n218\n00:11:43,160 --> 00:11:47,082\nIf we set this to one day,\nif I have a freeze one day,\n\n219\n00:11:47,082 --> 00:11:52,550\nit'll restart, and if I have\na freeze about on the second day.\n\n220\n00:11:52,550 --> 00:11:57,460\nWell that's 24 hours later, so that's\nactually viewed as a first failure, right,\n\n221\n00:11:57,460 --> 00:12:00,890\nbecause I have it set to reset\nthe fail count every one day.\n\n222\n00:12:00,890 --> 00:12:05,920\nSo I would have to have two freezes in\nthis same day to count as the second\n\n223\n00:12:05,920 --> 00:12:10,470\nfailure, and three freezes in the same\nday to actually get to Run a Program.\n\n224\n00:12:11,780 --> 00:12:16,510\nBut I might want to stretch that\nout longer to go for three days.\n\n225\n00:12:16,510 --> 00:12:21,830\nSo if I have a freeze one day, and\na freeze the next day and a 3rd day.\n\n226\n00:12:21,830 --> 00:12:25,020\nThat would be the subsequent failure that\nwould cause to run a program because it\n\n227\n00:12:25,020 --> 00:12:26,595\nall happened in that three day windows.\n\n228\n00:12:26,595 --> 00:12:28,780\nSo that's something we\nmight want to adjust and\n\n229\n00:12:28,780 --> 00:12:32,780\nyou can also set a delay, how long to\nwait before restarting the service.\n\n230\n00:12:32,780 --> 00:12:36,910\nIf there's been a freeze do we\nrestart it right away or do we wait?\n\n231\n00:12:36,910 --> 00:12:39,830\nAnd you can put in your zero minutes,\none minute, you know whatever it is you\n\n232\n00:12:39,830 --> 00:12:42,790\nwant to wait before you actually\nkick that service into restart.\n\n233\n00:12:44,690 --> 00:12:48,350\nAll right, so these are a couple\nof neat things we can do here.\n\n234\n00:12:48,350 --> 00:12:51,820\nYou'll see also you get the enable\nactions for stops with errors so\n\n235\n00:12:51,820 --> 00:12:53,640\nwe can tell it a few other options.\n\n236\n00:12:53,640 --> 00:12:56,480\nThere's different settings in here based\non what it is we're trying to achieve.\n\n237\n00:12:56,480 --> 00:13:00,760\nFor the most part, though, we usually just\nwant to restart the service and, in fact,\n\n238\n00:13:00,760 --> 00:13:02,910\nI'm gonna say go ahead and restart it.\n\n239\n00:13:02,910 --> 00:13:06,450\nIf it still doesn't work after a restart,\nI'll just say take no action.\n\n240\n00:13:06,450 --> 00:13:08,640\nAnd then we'll put that back to one day.\n\n241\n00:13:10,050 --> 00:13:14,489\nAll right, so those are some good options\nto set there just to make sure that\n\n242\n00:13:14,489 --> 00:13:16,050\nthe agent stays running.\n\n243\n00:13:16,050 --> 00:13:19,680\nThere are other ways to do\nnotifications based on service status.\n\n244\n00:13:19,680 --> 00:13:22,850\nMost commonly you're going\nto use other software like\n\n245\n00:13:22,850 --> 00:13:25,300\nMicrosoft System Center\nOperations Manager.\n\n246\n00:13:25,300 --> 00:13:27,500\nThat'll monitor your service statuses.\n\n247\n00:13:27,500 --> 00:13:34,870\nOne that I really like, we'll go off\nthe beaten path here, is spotlight.on.SQL.\n\n248\n00:13:34,870 --> 00:13:37,620\nSpotlight software is from\na company called Quest, and\n\n249\n00:13:37,620 --> 00:13:39,370\nI think they got bought by Dell.\n\n250\n00:13:39,370 --> 00:13:41,170\nYeah, so, they got bought by Dell.\n\n251\n00:13:41,170 --> 00:13:45,140\nBut it's really neat software\nbecause it will basically\n\n252\n00:13:45,140 --> 00:13:49,490\nlook at your SQL servers and represent\nthem in a graphical format like this and\n\n253\n00:13:49,490 --> 00:13:52,990\nso here's all the SQL servers\nthat they're managing right here.\n\n254\n00:13:52,990 --> 00:13:54,850\nAnd they can see some are healthy,\nsome are damaged, and\n\n255\n00:13:54,850 --> 00:13:58,880\nhere they're looking at their databases,\nand this is the screen that I really like\n\n256\n00:13:58,880 --> 00:14:01,860\nhere, it's a live running\nstatus of the system so\n\n257\n00:14:01,860 --> 00:14:05,510\nyou can do a quick at a glance and\nsee where you've got problems.\n\n258\n00:14:05,510 --> 00:14:09,920\nSo you can see how many SQL processes\nyou've got, SQL memory, your sessions, but\n\n259\n00:14:09,920 --> 00:14:13,350\nit does system monitoring and\nit can watch your services.\n\n260\n00:14:13,350 --> 00:14:16,850\nAnd so if a service were to stop you'll\nsee it right here, you get that feedback.\n\n261\n00:14:16,850 --> 00:14:21,050\nSo, it's neat software,\nit's not cheap but it's not expensive.\n\n262\n00:14:21,050 --> 00:14:26,470\nIf I remember right it's somewhere in\nthe 800 to 1200 dollar per server license.\n\n263\n00:14:27,580 --> 00:14:30,950\nWhich is not too terribly bad if\nyou've got a mission critical system.\n\n264\n00:14:30,950 --> 00:14:34,020\nSo, there's third party software out\nthere that can do that monitoring for\n\n265\n00:14:34,020 --> 00:14:37,032\nyou but there's limited functionality\ninside of the host device.\n\n266\n00:14:37,032 --> 00:14:43,400\nAll right so\nthat's getting the agent up and running.\n\n267\n00:14:43,400 --> 00:14:45,620\nNow it's running, what do we do with it?\n\n268\n00:14:45,620 --> 00:14:52,030\nWell whether it's running or not, in our\nSQL Management Studio you'll have a menu.\n\n269\n00:14:52,030 --> 00:14:54,090\nLet me close some of this stuff,\n\n270\n00:14:54,090 --> 00:14:57,320\nI've got a bunch of junk open\nfrom the earlier episodes.\n\n271\n00:14:57,320 --> 00:14:58,540\nWe'll just get rid of some of that.\n\n272\n00:14:59,670 --> 00:15:02,700\nIn our SQL Management Studio,\nwhether the agent is running or not,\n\n273\n00:15:02,700 --> 00:15:05,570\nyou'll have a folder here that says,\nSQL Server Agent.\n\n274\n00:15:05,570 --> 00:15:08,110\nAll right, now you'll know if\nit's running because if it is,\n\n275\n00:15:08,110 --> 00:15:10,070\nyou'll have a little green arrow on it.\n\n276\n00:15:10,070 --> 00:15:13,370\nAll right, if you don't have that little\ngreen arrow on it, then it's stopped and\n\n277\n00:15:13,370 --> 00:15:14,960\nyou can start and stop from right here.\n\n278\n00:15:14,960 --> 00:15:18,650\nSo like if I want to stop it,\nI'll just go ahead and stop my agent and\n\n279\n00:15:18,650 --> 00:15:19,960\nit's gonna reach out and do that.\n\n280\n00:15:19,960 --> 00:15:25,040\nAnd then I'll see this little green\narrow is gonna change, there we go,\n\n281\n00:15:25,040 --> 00:15:26,430\nto a little red down arrow.\n\n282\n00:15:26,430 --> 00:15:28,910\nI know it's really hard to\nsee on this screen here,\n\n283\n00:15:28,910 --> 00:15:31,600\nbut it is a little red down arrow.\n\n284\n00:15:31,600 --> 00:15:33,350\nSo you can start and stop it right here.\n\n285\n00:15:33,350 --> 00:15:38,790\nIt's no big deal It doesn't let\nyou adjust the startup options.\n\n286\n00:15:38,790 --> 00:15:41,820\nSo I can't set it to automatic start or\nwhatever, but I can start and stop it.\n\n287\n00:15:43,620 --> 00:15:45,280\nAlright, so we'll give it a chance there.\n\n288\n00:15:45,280 --> 00:15:46,917\nThere we go.\n\n289\n00:15:46,917 --> 00:15:51,116\nAll right, now inside of the agent we'll\nsee a number of options here: jobs,\n\n290\n00:15:51,116 --> 00:15:55,583\nalerts, operators, proxies, error logs\nWe're gonna talk about each of those.\n\n291\n00:15:55,583 --> 00:15:59,625\nThe most common destination for me,\nthough is the Job Activity Monitor.\n\n292\n00:15:59,625 --> 00:16:04,394\nThe Job Activity Monitor is where we\ncan see what's currently running on\n\n293\n00:16:04,394 --> 00:16:08,708\nthe system, what jobs are scheduled,\nwhat's set up to do what.\n\n294\n00:16:08,708 --> 00:16:10,708\nWell, it's not gonna be\nvery exciting right now.\n\n295\n00:16:10,708 --> 00:16:13,527\nIn fact, there's only gonna be one job\non my system and I didn't make it.\n\n296\n00:16:13,527 --> 00:16:17,800\nThis is one that's made by\nthe default install of Microsoft SQL.\n\n297\n00:16:17,800 --> 00:16:22,630\nSo Microsoft SQL in the background\nis running various things.\n\n298\n00:16:22,630 --> 00:16:24,347\nIt runs a lot of stuff in the background,\n\n299\n00:16:24,347 --> 00:16:26,375\nit does maintenance on the databases and\nso on.\n\n300\n00:16:26,375 --> 00:16:29,672\nWell, one of the things that it\ndoes it does policy enforcement.\n\n301\n00:16:29,672 --> 00:16:35,410\nWe create a policy on databases and\nwe've kind of done this somewhat.\n\n302\n00:16:35,410 --> 00:16:40,000\nRemember, in one of the earlier episodes\nwhere I sat a maximum CPU threshold or\n\n303\n00:16:40,000 --> 00:16:41,760\na maximum memory threshold?\n\n304\n00:16:41,760 --> 00:16:43,537\nThose are actually part\nof your server policy.\n\n305\n00:16:43,537 --> 00:16:47,453\nThose policies are applied to the server\nand if we change them somehow,\n\n306\n00:16:47,453 --> 00:16:49,422\nlike programmatically change it.\n\n307\n00:16:49,422 --> 00:16:50,838\nThe system will put it back.\n\n308\n00:16:50,838 --> 00:16:53,814\nIt checks once an hour and just looks to\nsee if those settings have changed and\n\n309\n00:16:53,814 --> 00:16:56,712\nputs it back the way they're supposed\nto be, it's policy enforcement.\n\n310\n00:16:56,712 --> 00:17:01,960\nWell, it keeps a log of that and\nthat log can grow and grow and grow.\n\n311\n00:17:01,960 --> 00:17:05,490\nAnd if you let it run long enough\nover years and years and years,\n\n312\n00:17:05,490 --> 00:17:07,696\nyou'll find where the MSDB database.\n\n313\n00:17:07,696 --> 00:17:13,373\nThis database right here, this guy, starts\nto get really big and you don't know why.\n\n314\n00:17:13,373 --> 00:17:16,414\nWhy is it getting so big and it's just\nthese log files that have been growing and\n\n315\n00:17:16,414 --> 00:17:18,132\ngrowing and growing for a long, long time.\n\n316\n00:17:18,132 --> 00:17:22,276\nSo the one activity\nthat is scheduled here,\n\n317\n00:17:22,276 --> 00:17:26,725\nthis guy is one that\npurges that policy log.\n\n318\n00:17:26,725 --> 00:17:29,346\nSo, it just goes in and\nlooks for all events.\n\n319\n00:17:29,346 --> 00:17:33,762\nI think the default is 120 days, don't\nquote me on that, I might be wrong, but\n\n320\n00:17:33,762 --> 00:17:38,050\nit looks for a certain period of time and\nit just wipes out anything that's older\n\n321\n00:17:38,050 --> 00:17:41,259\nthan that to stop the database\nfrom growing out of control.\n\n322\n00:17:41,259 --> 00:17:45,275\nIt's a pretty big number though,\nI want to say, it's 120 days.\n\n323\n00:17:45,275 --> 00:17:47,075\nBut anyhow, it's just doing a purge.\n\n324\n00:17:47,075 --> 00:17:51,427\nThat's a great example though, of\nan automated activity that we might want\n\n325\n00:17:51,427 --> 00:17:55,723\nthe system to run and the SQL Server Agent\nis set here to scheduled to run it.\n\n326\n00:17:55,723 --> 00:17:59,843\nSo you can see this particular\njob is enabled, it's turned on,\n\n327\n00:17:59,843 --> 00:18:01,459\nit's configured to go.\n\n328\n00:18:01,459 --> 00:18:04,559\nThe current status is idle,\nit's not running right now.\n\n329\n00:18:04,559 --> 00:18:06,021\nIt's just sitting there.\n\n330\n00:18:06,021 --> 00:18:09,295\nThe last time it ran, it was successful.\n\n331\n00:18:09,295 --> 00:18:11,815\nSo this says, last run outcome.\n\n332\n00:18:11,815 --> 00:18:13,312\nSo last time it ran, it was fine.\n\n333\n00:18:13,312 --> 00:18:16,434\nIf it was a failure, I'd be able\nto choose this, and find out why.\n\n334\n00:18:16,434 --> 00:18:21,300\nBut last time it ran, well,\nit ran at 2 AM this morning.\n\n335\n00:18:21,300 --> 00:18:25,989\nAnd then the next run, I can see it's\nscheduled to run tomorrow at 2AM, so\n\n336\n00:18:25,989 --> 00:18:29,796\nit's running every day at 2 AM\nthis activity is occurring.\n\n337\n00:18:29,796 --> 00:18:31,713\nAnd then if I look, I've got a category.\n\n338\n00:18:31,713 --> 00:18:35,580\nWhen you just have a single job, you're\nnot really worried about a category.\n\n339\n00:18:35,580 --> 00:18:40,419\nBut if you've got tons of jobs, if you\nhave a centralized SQL Server Agent that's\n\n340\n00:18:40,419 --> 00:18:44,769\nmanaging jobs across all of your servers,\nyou might create a category for\n\n341\n00:18:44,769 --> 00:18:45,626\neach server.\n\n342\n00:18:45,626 --> 00:18:49,562\nSQL Server number one has a category,\nSQL Server number two has a category.\n\n343\n00:18:49,562 --> 00:18:52,442\nAnd that way you can sort the jobs\nbased on their category and\n\n344\n00:18:52,442 --> 00:18:54,925\nsay, just show me all of\nthe ones on SQL number one.\n\n345\n00:18:54,925 --> 00:18:56,156\nShow me that category.\n\n346\n00:18:56,156 --> 00:18:58,433\nOr you might categorize\nit by other things,\n\n347\n00:18:58,433 --> 00:19:02,312\nlike maintenance activities versus\nnew feature deployment or whatever,\n\n348\n00:19:02,312 --> 00:19:05,095\nyou can create those categories\nto break all that up.\n\n349\n00:19:05,095 --> 00:19:08,462\nAnd then lastly, whether or\nnot, it's runnable.\n\n350\n00:19:08,462 --> 00:19:10,099\nNow what the heck does that mean?\n\n351\n00:19:10,099 --> 00:19:12,073\nWell, most jobs are runnable.\n\n352\n00:19:12,073 --> 00:19:14,523\nThat means that you can run\nthem whenever you want.\n\n353\n00:19:14,523 --> 00:19:17,180\nSo, I don't have to wait for\n2 AM to come about.\n\n354\n00:19:17,180 --> 00:19:21,940\nI can always right-click on it and choose\nto Start the Job and it'll fire up and\n\n355\n00:19:21,940 --> 00:19:22,892\nrun right now.\n\n356\n00:19:22,892 --> 00:19:27,164\nThe only time jobs aren't runnable is\nwhen there's special credentials tied\n\n357\n00:19:27,164 --> 00:19:31,182\nto them that you might not have access\nto or if the job is all ready running.\n\n358\n00:19:31,182 --> 00:19:33,156\nIf it's running right now,\nI can't fire it off again.\n\n359\n00:19:33,156 --> 00:19:34,281\nIt'll cause problems.\n\n360\n00:19:34,281 --> 00:19:39,461\nSo you've got that column right\nthere to kind of let you know.\n\n361\n00:19:39,461 --> 00:19:43,359\nWe also see whether it's scheduled,\nyou might have a job that's not scheduled.\n\n362\n00:19:43,359 --> 00:19:45,252\nNow why would I have that?\n\n363\n00:19:45,252 --> 00:19:46,471\nWell, there's two scenarios.\n\n364\n00:19:46,471 --> 00:19:48,699\nScenario number one is\nyou want it to be manual.\n\n365\n00:19:48,699 --> 00:19:53,543\nIt's something that you might need every\nnow and then, but not on a fixed date.\n\n366\n00:19:53,543 --> 00:19:56,288\nSo you just go in and\nmanually run it from time to time,\n\n367\n00:19:56,288 --> 00:19:59,033\nyou have the job defined just\nto make it easier on you.\n\n368\n00:19:59,033 --> 00:20:01,238\nYou just come in here and\nright-click and choose to run it.\n\n369\n00:20:01,238 --> 00:20:05,567\nThe other scenario is it might have\nbeen scheduled in the past and\n\n370\n00:20:05,567 --> 00:20:07,101\nthat date has passed.\n\n371\n00:20:07,101 --> 00:20:10,699\nSo the job's already done what it's\nsupposed to do, it's not gonna run again.\n\n372\n00:20:10,699 --> 00:20:14,859\nSince it's not gonna run again,\nthe next run will be blank and\n\n373\n00:20:14,859 --> 00:20:16,633\nthe schedule will say no.\n\n374\n00:20:16,633 --> 00:20:19,998\nIt's not scheduled to run in the future,\nit's already done its job.\n\n375\n00:20:19,998 --> 00:20:27,535\nAnd then lastly, we have our category ID.\n\n376\n00:20:27,535 --> 00:20:29,851\nSo if we've got our\ncategory ID just again,\n\n377\n00:20:29,851 --> 00:20:32,051\nsetting which category we're a part of.\n\n378\n00:20:32,051 --> 00:20:35,340\nSo that's all the information\nwe kinda see on a job.\n\n379\n00:20:35,340 --> 00:20:36,760\nMost of it is common sense.\n\n380\n00:20:36,760 --> 00:20:39,645\nAs we start to create our own jobs,\nthey'll get thrown in here and\n\n381\n00:20:39,645 --> 00:20:41,329\nthey'll have that information too.\n\n382\n00:20:41,329 --> 00:20:46,286\nNow before we get carried away on\ncreating jobs, let me just close this.\n\n383\n00:20:46,286 --> 00:20:49,687\nI want to take a look at the properties\nof the sequel server agent itself.\n\n384\n00:20:49,687 --> 00:20:52,706\nSo I'm just gonna right-click on that\nSQL Server Agent and go to Properties,\n\n385\n00:20:52,706 --> 00:20:55,283\nwe'll take a look at some of the other\noptions that we have in here.\n\n386\n00:20:55,283 --> 00:20:56,257\nThere's a lot of stuff.\n\n387\n00:20:56,257 --> 00:20:58,046\nIt's actually really, really powerful.\n\n388\n00:20:58,046 --> 00:21:01,918\nYou don't have to dive deep into a lot\nof these features, most of the defaults\n\n389\n00:21:01,918 --> 00:21:05,209\nare perfectly fine for us, but\nsome of them we need to customize.\n\n390\n00:21:05,209 --> 00:21:08,009\nYou'll see things like this right here,\n\n391\n00:21:08,009 --> 00:21:11,289\nauto restart SQL Server\nif stops unexpectedly.\n\n392\n00:21:11,289 --> 00:21:12,252\nWhat does that mean?\n\n393\n00:21:12,252 --> 00:21:17,754\nThat means that the SQL Server Agent\nis monitoring the SQL Server.\n\n394\n00:21:17,754 --> 00:21:22,376\nAnd if the SQL Server were to stop,\nthe agent will try and restart it.\n\n395\n00:21:22,376 --> 00:21:23,776\nThat's pretty cool.\n\n396\n00:21:23,776 --> 00:21:26,503\nSo that SQL Server is pretty important.\n\n397\n00:21:26,503 --> 00:21:29,000\nIf the server stops,\nall the databases go offline.\n\n398\n00:21:29,000 --> 00:21:31,321\nThe agent can see it and start it up.\n\n399\n00:21:31,321 --> 00:21:35,502\nThat's why the agent is a separate\nservice from the SQL Server itself.\n\n400\n00:21:35,502 --> 00:21:39,187\nWhen we looked in the services panel,\nwhich do I still have that, yeah.\n\n401\n00:21:39,187 --> 00:21:43,272\nThat's why we have our SQL Server Agent\nversus our SQL Server.\n\n402\n00:21:43,272 --> 00:21:46,129\nThese are the databases,\nthe agent runs separate.\n\n403\n00:21:46,129 --> 00:21:52,035\nSo if the databases crash,\nthe agent can help us recover.\n\n404\n00:21:52,035 --> 00:21:55,772\nWe've also got auto restart SQL Server\nAgent, if it stops unexpectedly.\n\n405\n00:21:55,772 --> 00:21:59,510\nNow I turned that on on the service,\nbut we can do it right here also.\n\n406\n00:21:59,510 --> 00:22:03,492\nAnd this is the opposite,\nthe SQL Server monitors the agent and\n\n407\n00:22:03,492 --> 00:22:05,606\nwill start it again if possible.\n\n408\n00:22:05,606 --> 00:22:08,359\nThe only negative here is I don't\nhave some of the options we saw on\n\n409\n00:22:08,359 --> 00:22:09,170\nthe other screen.\n\n410\n00:22:09,170 --> 00:22:12,828\nI can't do things like set a time\ninterval or tell it to run a program,\n\n411\n00:22:12,828 --> 00:22:13,976\nif a failure occurs.\n\n412\n00:22:13,976 --> 00:22:15,126\nI don't have those.\n\n413\n00:22:15,126 --> 00:22:19,510\nSo the services screen, actually gives it\na little more power than what we see here.\n\n414\n00:22:20,760 --> 00:22:22,770\nWe've also got an option for\nthe error log.\n\n415\n00:22:22,770 --> 00:22:27,220\nThe SQL Server Agent stores the an error\nlog that has all the information about any\n\n416\n00:22:27,220 --> 00:22:30,920\nerror or problem that it encounters and\nit stores it in a location that's not very\n\n417\n00:22:30,920 --> 00:22:32,960\nintuitive, it's really\nkind of buried away.\n\n418\n00:22:32,960 --> 00:22:37,069\nSo you might want to move that to\nbe on a centralized file store or\n\n419\n00:22:37,069 --> 00:22:40,105\nsomething like that to\nmake it easier to find.\n\n420\n00:22:40,105 --> 00:22:43,575\nSome of the other options,\ninclude execution trace messages.\n\n421\n00:22:43,575 --> 00:22:48,127\nThat is a very,\nvery verbose debugging log.\n\n422\n00:22:48,127 --> 00:22:50,836\nIt will show you exactly\nwhat query was running and\n\n423\n00:22:50,836 --> 00:22:54,890\nwhat was going on at the server at\nthe time and how long each step took.\n\n424\n00:22:54,890 --> 00:22:58,645\nIt really goes into\na phenomenal amount of detail.\n\n425\n00:22:58,645 --> 00:23:02,650\nAs a result, it takes a little more\nprocessor power to generate that data.\n\n426\n00:23:02,650 --> 00:23:06,427\nSo if you turn that execution trace\nmessage, if you turn that on,\n\n427\n00:23:06,427 --> 00:23:08,909\nit's extra data coming with the air logs.\n\n428\n00:23:08,909 --> 00:23:11,473\nWhich can be valuable, but\nthe tradeoff is performance.\n\n429\n00:23:11,473 --> 00:23:15,155\nIt does hurt the performance of your\nserver, but not by a giant amount.\n\n430\n00:23:15,155 --> 00:23:17,441\nSo you don't wanna say,\nI'm never gonna use that, but\n\n431\n00:23:17,441 --> 00:23:19,787\nyou need to make sure you\nreally know what you're doing.\n\n432\n00:23:19,787 --> 00:23:25,818\nI typically only turn that on on my test\nservers not on my production servers.\n\n433\n00:23:25,818 --> 00:23:31,112\nNow Microsoft SQL Server is one\nof Microsoft's oldest products.\n\n434\n00:23:31,112 --> 00:23:35,280\nIt has been around a long time,\nit predates Windows NT.\n\n435\n00:23:35,280 --> 00:23:40,860\nSo as a result, you will see a few options\nin here that referenced old technology and\n\n436\n00:23:40,860 --> 00:23:42,600\nthis is one of them right here.\n\n437\n00:23:42,600 --> 00:23:45,412\nThe net send recipient.\n\n438\n00:23:45,412 --> 00:23:48,833\nIn the old days,\nthe email was not a given thing.\n\n439\n00:23:48,833 --> 00:23:52,068\nYou didn't know if everyone\nwas going to have email and\n\n440\n00:23:52,068 --> 00:23:54,542\ntext messages weren't around and so on.\n\n441\n00:23:54,542 --> 00:23:56,281\nSo if a server had a problem,\n\n442\n00:23:56,281 --> 00:24:00,680\nit needed a reliable way to notify\npeople that the problem happened.\n\n443\n00:24:00,680 --> 00:24:01,490\nRight.\n\n444\n00:24:01,490 --> 00:24:05,110\nAnd so there were primary methods for\ndoing that in the old days.\n\n445\n00:24:05,110 --> 00:24:07,070\nOne was a page.\n\n446\n00:24:07,070 --> 00:24:10,110\nWe could page somebody on a pager, right?\n\n447\n00:24:10,110 --> 00:24:13,050\nI know that some of our younger viewers\nprobably don't know what a pager is but\n\n448\n00:24:13,050 --> 00:24:15,760\nanybody who watched TV in\nthe 80s should remember or\n\n449\n00:24:15,760 --> 00:24:18,280\ndoctors still use them today for\nwhatever reason.\n\n450\n00:24:18,280 --> 00:24:22,450\nBut a pager was just a simple device that\nyou could call and provide a phone number.\n\n451\n00:24:22,450 --> 00:24:24,340\nThe person on the other end\nwould get an alert, and\n\n452\n00:24:24,340 --> 00:24:26,990\nthen they could go find a phone and\ncall you, right?\n\n453\n00:24:26,990 --> 00:24:29,150\nWell, SQL Server can send out pages.\n\n454\n00:24:29,150 --> 00:24:30,920\nWe'll see that a little bit later.\n\n455\n00:24:30,920 --> 00:24:32,580\nBut it can also do a NET send.\n\n456\n00:24:32,580 --> 00:24:35,640\nAnd what a NET send was was\njust a broadcast message.\n\n457\n00:24:35,640 --> 00:24:39,690\nIt would send a message out on the network\nand say, hey, a problem happened.\n\n458\n00:24:39,690 --> 00:24:43,150\nWell, you wouldn't want it to go to\neverybody, and so you could specify\n\n459\n00:24:43,150 --> 00:24:47,220\na particular username here or a list\nof usernames separated with commas, and\n\n460\n00:24:47,220 --> 00:24:50,440\nwhen it sent that message out,\nit would go to all of those people.\n\n461\n00:24:50,440 --> 00:24:54,760\nIf those people were on the same\nnetwork as the SQL server,\n\n462\n00:24:54,760 --> 00:24:57,720\nthey would receive that message, and\nit would pop up on their screen.\n\n463\n00:24:57,720 --> 00:24:59,820\nThey'd get a little pop-up box, right?\n\n464\n00:24:59,820 --> 00:25:02,070\nThere's a few problems with that, though.\n\n465\n00:25:02,070 --> 00:25:07,328\nProblem number one is rarely are we on the\nsame network as our SQL Server these days.\n\n466\n00:25:07,328 --> 00:25:11,390\nUsually, the SQL Servers are in a data\ncenter somewhere, and we aren't.\n\n467\n00:25:11,390 --> 00:25:13,670\nSo NET sends aren't routable.\n\n468\n00:25:13,670 --> 00:25:14,990\nThey can't pass through a router.\n\n469\n00:25:14,990 --> 00:25:15,979\nThat means they're not\ngoing to get to you.\n\n470\n00:25:17,100 --> 00:25:18,260\nProblem number two.\n\n471\n00:25:18,260 --> 00:25:22,030\nMost people run firewalls these days,\nlike software firewalls on their operating\n\n472\n00:25:22,030 --> 00:25:26,180\nsystem, and so those messages\nare gonna be blocked anyway, right?\n\n473\n00:25:26,180 --> 00:25:29,060\nBut even if we are on the same\nnetwork as our SQL server,\n\n474\n00:25:29,060 --> 00:25:32,928\neven if I have my firewall turned off, I'm\nprobably still not gonna receive the NET\n\n475\n00:25:32,928 --> 00:25:38,020\nsends because the Windows Messenger\nService is disabled by default in Windows.\n\n476\n00:25:38,020 --> 00:25:41,820\nSo these are all things that\nare stacking up against NET sends.\n\n477\n00:25:41,820 --> 00:25:45,601\nSo you might ask yourself, why do we\neven have the option there any more?\n\n478\n00:25:45,601 --> 00:25:48,390\nAnd the reason is Microsoft just said,\nwell, it's already there.\n\n479\n00:25:48,390 --> 00:25:49,030\nIt's already written.\n\n480\n00:25:49,030 --> 00:25:51,470\nDoesn't cost us any\nmoney to leave it there.\n\n481\n00:25:51,470 --> 00:25:54,337\nSo they leave it there just in case\nsomebody wants it, but for most of us that\n\n482\n00:25:54,337 --> 00:25:57,450\nare deploying new servers, you just kind\nof laugh at that and you don't use it.\n\n483\n00:25:57,450 --> 00:25:58,820\nNET sends are effectively dead.\n\n484\n00:25:58,820 --> 00:26:03,860\nAll right, some of the other stuff\nwe have in here under advanced,\n\n485\n00:26:03,860 --> 00:26:06,650\nyou'll see where we've got forward\nevents to a different server.\n\n486\n00:26:06,650 --> 00:26:10,770\nAll right, the SQL Server Agent,\nmost of its activities are getting logged\n\n487\n00:26:10,770 --> 00:26:14,110\nto the event log inside of the Windows\nServer that it's running from, so\n\n488\n00:26:14,110 --> 00:26:17,380\nin my case, on WinSQL 01,\nright, this server.\n\n489\n00:26:17,380 --> 00:26:20,120\nBut if I'm monitoring\n100 different servers,\n\n490\n00:26:20,120 --> 00:26:23,455\nI probably want to aggregate all\nthose events to a central location.\n\n491\n00:26:23,455 --> 00:26:24,720\nSQL Server Agent will do that.\n\n492\n00:26:24,720 --> 00:26:27,690\nYou can tell it to forward its\nevents to a centralized location.\n\n493\n00:26:27,690 --> 00:26:29,530\nIt will store it there so\nwe don't have to go and\n\n494\n00:26:29,530 --> 00:26:32,660\nlook at all of our different servers to\nget the logs, they are all in one place.\n\n495\n00:26:32,660 --> 00:26:35,799\nHere we just turn it on when we specify\nwhat server we wanna forward to,\n\n496\n00:26:35,799 --> 00:26:38,800\nand then we can tell it what kind\nof events that we wanna send along.\n\n497\n00:26:41,460 --> 00:26:43,722\nAnother option we have here\nis when we schedule jobs,\n\n498\n00:26:43,722 --> 00:26:46,140\nwe're normally gonna\nschedule it based on time.\n\n499\n00:26:46,140 --> 00:26:48,460\nSo while you say perform this\njob at 2:00 AM every day.\n\n500\n00:26:48,460 --> 00:26:50,350\nThat's what we saw earlier.\n\n501\n00:26:50,350 --> 00:26:55,030\nBut you can create a job that says\nrun this job when the server is idle.\n\n502\n00:26:55,030 --> 00:26:57,460\nSo maybe in the middle of the day\nmaybe in the middle of the night,\n\n503\n00:26:57,460 --> 00:26:58,820\nwhenever the server's idle.\n\n504\n00:26:58,820 --> 00:27:03,490\nWell, the bottom of this screen lets us\npick how do we define what idle is, right.\n\n505\n00:27:03,490 --> 00:27:08,380\nWell the default is if the average\nCPU has been under 10% for\n\n506\n00:27:08,380 --> 00:27:09,930\nfive minutes, right, 600 seconds.\n\n507\n00:27:11,060 --> 00:27:15,780\nIf five minutes goes by and the CPU\nhas been under 10% that whole time,\n\n508\n00:27:15,780 --> 00:27:18,920\nthe server is considered idle and\nwe will run our jobs.\n\n509\n00:27:18,920 --> 00:27:20,770\nWell maybe that is not enough for us,\n\n510\n00:27:20,770 --> 00:27:23,590\na five minute window maybe that's\nnot really reflective enough.\n\n511\n00:27:23,590 --> 00:27:27,280\nSo I want to bump that up and\nmaybe I want to go to ten minutes.\n\n512\n00:27:27,280 --> 00:27:30,120\nSo I say, 1200 seconds and\nI want to say 5%.\n\n513\n00:27:30,120 --> 00:27:36,350\nIt's gotta get down to 5% CPU\nutilization for ten minutes.\n\n514\n00:27:36,350 --> 00:27:40,110\nNow, if that happens, consider\nthe server idle and run those jobs so\n\n515\n00:27:40,110 --> 00:27:44,570\nwe can override that behavior right here.\n\n516\n00:27:44,570 --> 00:27:47,020\nWe've got a lot more to\nconfigure on the agent.\n\n517\n00:27:47,020 --> 00:27:48,180\nThe settings that we've seen so\n\n518\n00:27:48,180 --> 00:27:51,070\nfar, those are just basic settings\nthat we want to configure.\n\n519\n00:27:51,070 --> 00:27:54,670\nWe normally set them right\nwhen we set up the server.\n\n520\n00:27:54,670 --> 00:27:56,260\nAnd then we never touch them again.\n\n521\n00:27:57,310 --> 00:28:00,990\nWhat we're gonna be looking at next though\nare all the settings that we do configure\n\n522\n00:28:00,990 --> 00:28:02,280\non a routine basis, right?\n\n523\n00:28:02,280 --> 00:28:04,900\nThe regular maintenance stuff that\nwe're gonna be performing on the agent.\n\n524\n00:28:04,900 --> 00:28:08,460\nSo we'll talk about that next but this\nis a pretty good spot for us to stop and\n\n525\n00:28:08,460 --> 00:28:09,050\ntake a break.\n\n526\n00:28:09,050 --> 00:28:14,270\nSo let's pause here, when we get back,\nmore SQL Server Agent after this.\n\n527\n00:28:14,270 --> 00:28:21,890\n[MUSIC]\n\n528\n00:28:21,890 --> 00:28:23,940\nAll right, welcome back everybody.\n\n529\n00:28:23,940 --> 00:28:27,500\nSo at the end of the last segment I\nwas kind of making fun of the NET send\n\n530\n00:28:27,500 --> 00:28:29,710\nservice inside of Windows.\n\n531\n00:28:29,710 --> 00:28:33,140\nSo since that's the old way of\ndoing things, what's the new way?\n\n532\n00:28:33,140 --> 00:28:36,003\nWell, most people today\nare gonna use email.\n\n533\n00:28:36,003 --> 00:28:38,450\nRight?\nEmail's a great way to notify ourselves,\n\n534\n00:28:38,450 --> 00:28:40,480\nespecially about database\nissues like these.\n\n535\n00:28:40,480 --> 00:28:42,830\nAlmost everybody has email\non their cell phone.\n\n536\n00:28:42,830 --> 00:28:45,880\nAnd so it's a pretty reliable way\nto send those communications.\n\n537\n00:28:45,880 --> 00:28:50,320\nSo we probably wanna set up our\nSQL Server Agent to do that.\n\n538\n00:28:50,320 --> 00:28:53,230\nNow you have right here in\nthe SQL Server Agent Properties,\n\n539\n00:28:53,230 --> 00:28:54,790\nyou've got your alert system.\n\n540\n00:28:54,790 --> 00:28:58,100\nAnd it's got all sorts of\nsettings in here about email.\n\n541\n00:28:58,100 --> 00:29:00,050\nThe thing is, they don't work.\n\n542\n00:29:00,050 --> 00:29:02,950\nWell they don't work right like they\nare right now right out of the box.\n\n543\n00:29:02,950 --> 00:29:05,830\nThere's a little bit more we have\nto do before we get that set up.\n\n544\n00:29:05,830 --> 00:29:08,750\nSo, let me show you the process\nwe need to go through to get\n\n545\n00:29:08,750 --> 00:29:11,540\nemail notifications working\nbefore we jump too much further.\n\n546\n00:29:12,540 --> 00:29:13,450\nAll right.\n\n547\n00:29:13,450 --> 00:29:17,460\nSo, what we're gonna need to do is,\nif you go up to the management folders,\n\n548\n00:29:17,460 --> 00:29:22,370\nwe're actually moving outside\nof the SQL Agent area.\n\n549\n00:29:22,370 --> 00:29:23,640\nSo, here's my SQL Server Agent area.\n\n550\n00:29:23,640 --> 00:29:27,230\nI'm gonna go up to management and under\nmanagement, you'll see a bunch of stuff,\n\n551\n00:29:27,230 --> 00:29:29,650\nbut what I'm looking for is database mail.\n\n552\n00:29:29,650 --> 00:29:35,810\nAll right, now email under Microsoft SQL\nServer has changed a lot over the years.\n\n553\n00:29:35,810 --> 00:29:39,090\nThere used to be something\nyou know back in SQL 7 and\n\n554\n00:29:39,090 --> 00:29:41,220\nSQL 2000 that was called SQL mail.\n\n555\n00:29:41,220 --> 00:29:42,550\nAll right.\n\n556\n00:29:42,550 --> 00:29:43,460\nSQL Mail,\n\n557\n00:29:43,460 --> 00:29:46,950\nyou'll still find articles written\nabout it out there on the Internet.\n\n558\n00:29:46,950 --> 00:29:50,070\nAnd when they talk about setting up your\nemail, one of the first things they tell\n\n559\n00:29:50,070 --> 00:29:54,830\nyou is, okay, you need to install\nMicrosoft Outlook on your SQL server.\n\n560\n00:29:54,830 --> 00:29:55,600\nAll right?\n\n561\n00:29:55,600 --> 00:29:58,130\nNow, that probably sounds like a bad idea,\ndoesn't it?\n\n562\n00:29:58,130 --> 00:29:58,760\nWell, it is.\n\n563\n00:29:58,760 --> 00:29:59,890\nIt's an absolutely terrible idea.\n\n564\n00:29:59,890 --> 00:30:00,570\nIt's a horrible thing.\n\n565\n00:30:00,570 --> 00:30:01,840\nYou shouldn't do it.\n\n566\n00:30:01,840 --> 00:30:06,340\nBut even today, I still find articles out\nthere where people are talking about SQL\n\n567\n00:30:06,340 --> 00:30:10,980\nserver 2012 and they're saying,\ninstall Microsoft Outlook on your server.\n\n568\n00:30:10,980 --> 00:30:13,100\nYou don't have to do that anymore,\nall right?\n\n569\n00:30:13,100 --> 00:30:14,510\nSQL mail is the old way.\n\n570\n00:30:14,510 --> 00:30:17,670\nIt's gone and\nnow we have what's called database mail.\n\n571\n00:30:17,670 --> 00:30:22,460\nDatabase mail has the full email handling\nbaked right into SQL Server without having\n\n572\n00:30:22,460 --> 00:30:25,010\nto install non-server\nsoftware on your server.\n\n573\n00:30:25,010 --> 00:30:28,030\nYou don't wanna do that, so\nthat's really important.\n\n574\n00:30:28,030 --> 00:30:29,700\nSo we're gonna configure database mail.\n\n575\n00:30:29,700 --> 00:30:33,760\nWe just need to get it set up before\nwe can start sending out emails.\n\n576\n00:30:33,760 --> 00:30:36,510\nI've got this option right here\nto configure my database mail.\n\n577\n00:30:36,510 --> 00:30:40,060\nNow, the wizard itself is\npretty straightforward.\n\n578\n00:30:40,060 --> 00:30:42,330\nWe just walk through\na couple of options here and\n\n579\n00:30:42,330 --> 00:30:44,890\nwe tell it how we're going\nto be sending email.\n\n580\n00:30:44,890 --> 00:30:48,030\nIf we had already set it up,\nit's got the options in here to let us\n\n581\n00:30:48,030 --> 00:30:51,140\nmanage it to change what's in there,\nor just view our current settings.\n\n582\n00:30:51,140 --> 00:30:54,750\nSince this is my first time, I need to\nset it up from scratch, all right, so\n\n583\n00:30:54,750 --> 00:30:57,822\nI'll choose the setup database manually.\n\n584\n00:30:57,822 --> 00:31:01,280\nAll right, it's gonna tell me, in my case,\nthat I didn't install the feature.\n\n585\n00:31:01,280 --> 00:31:03,810\nNow the feature is insanely small.\n\n586\n00:31:03,810 --> 00:31:06,880\nSo it's telling me I didn't install\nthe feature, do I want to enable it, I can\n\n587\n00:31:06,880 --> 00:31:12,420\nsay yes, and it's already done, so it's\nnot a big deal, it just adds it right in.\n\n588\n00:31:12,420 --> 00:31:14,670\nAll right,\nthen we're gonna create our profile.\n\n589\n00:31:14,670 --> 00:31:19,030\nNow you can have more than\none database mail profile.\n\n590\n00:31:19,030 --> 00:31:22,390\nWhen we set up database mail,\nwe're basically saying, all right SQL,\n\n591\n00:31:22,390 --> 00:31:24,900\nwhen you generate an email,\nhere's where you send it.\n\n592\n00:31:24,900 --> 00:31:26,238\nSend it to this server.\n\n593\n00:31:26,238 --> 00:31:29,320\nUse this username and this password\nto be able to send the email.\n\n594\n00:31:29,320 --> 00:31:29,910\nAll right?\n\n595\n00:31:29,910 --> 00:31:32,730\nSo we might have more than one server.\n\n596\n00:31:32,730 --> 00:31:35,740\nIf we have more than one database for\ndifferent clients,\n\n597\n00:31:35,740 --> 00:31:39,940\nwe may want those emails to go to each\nindividual client's email servers.\n\n598\n00:31:39,940 --> 00:31:42,070\nSo you might have more than one profile.\n\n599\n00:31:42,070 --> 00:31:43,125\nMost people don't though.\n\n600\n00:31:43,125 --> 00:31:50,708\nSo I'm just gonna call mine\nthe Database Mail Default Profile.\n\n601\n00:31:50,708 --> 00:31:52,458\nCall it whatever you want.\n\n602\n00:31:52,458 --> 00:31:55,000\nThen, we put in our SMTP account, right?\n\n603\n00:31:55,000 --> 00:31:57,930\nSMTP is\nthe Simple Mail Transport Protocol.\n\n604\n00:31:57,930 --> 00:32:01,210\nIt's basically the outbound mail\nserver that we're gonna use.\n\n605\n00:32:01,210 --> 00:32:04,218\nMost organizations have their\nown email server, and so\n\n606\n00:32:04,218 --> 00:32:05,885\nyou'll specify that in here.\n\n607\n00:32:05,885 --> 00:32:12,041\nSo, for example, I might come in and\nsay, I'm gonna use mail.itpro.tv.\n\n608\n00:32:12,041 --> 00:32:16,449\nAnd so\nthis would be the Itpro.tv mail server.\n\n609\n00:32:16,449 --> 00:32:21,000\nAnd I come in, and I start to\nspecify some additional information.\n\n610\n00:32:21,000 --> 00:32:24,312\nIt might be that you\ndon't have a mail server.\n\n611\n00:32:24,312 --> 00:32:29,650\nSo, for example, this is in my little lab\nand I actually don't have a mail server in\n\n612\n00:32:29,650 --> 00:32:35,020\nmy lab, so it's not gonna be able to get\nto mail.itpro.tv or anything like that.\n\n613\n00:32:36,190 --> 00:32:40,600\nSo, I might need to set up\nsome kind of alternative.\n\n614\n00:32:40,600 --> 00:32:46,460\nWell, you can actually run an SMTP server\nright from your SQL server if you want.\n\n615\n00:32:46,460 --> 00:32:47,430\nYou can do it.\n\n616\n00:32:47,430 --> 00:32:51,860\nSo that when you generate emails, your\nserver will just do a DNS lookup to find\n\n617\n00:32:51,860 --> 00:32:54,930\nthe destination mail server and\nsend it out itself.\n\n618\n00:32:54,930 --> 00:32:57,650\nThat's effective if you don't\nhave a mail server available.\n\n619\n00:32:57,650 --> 00:33:01,640\nJust be aware that if you add\nSMTP services to your SQL server,\n\n620\n00:33:01,640 --> 00:33:03,110\nyou need to make sure they're secured.\n\n621\n00:33:03,110 --> 00:33:06,910\nYou don't want people relaying\nemail through your SMTP server.\n\n622\n00:33:06,910 --> 00:33:08,570\nSo be careful with that.\n\n623\n00:33:08,570 --> 00:33:11,110\nBut, if you've already got one,\nyou just specify the information.\n\n624\n00:33:11,110 --> 00:33:13,470\nNow, up here, this is the account name and\n\n625\n00:33:13,470 --> 00:33:15,730\nthat's just something we typed\nto be able to recognize it.\n\n626\n00:33:15,730 --> 00:33:17,500\nThat doesn't actually mean anything.\n\n627\n00:33:17,500 --> 00:33:19,220\nDown here I have my server name.\n\n628\n00:33:19,220 --> 00:33:23,370\nAnd that's where I need to mail.itpro.tv.\n\n629\n00:33:23,370 --> 00:33:26,130\nWhen I send an email,\nI need to say who it's from.\n\n630\n00:33:26,130 --> 00:33:30,930\nAnd so my email address,\nmaybe I'll just call it sql@itpro.tv.\n\n631\n00:33:30,930 --> 00:33:36,533\nAnd the display name will\nbe the SQL Server Agent.\n\n632\n00:33:36,533 --> 00:33:41,226\nAnd for the reply email,\nI'll just put noreply@itpro.tv.\n\n633\n00:33:41,226 --> 00:33:44,590\nThere's no point in replying to an email\nthat came from an automated system.\n\n634\n00:33:45,840 --> 00:33:47,729\nIf we're using SSL,\nwe can check that off and\n\n635\n00:33:47,729 --> 00:33:50,277\nwe'll probably have to change\nthese ports to reflect that.\n\n636\n00:33:50,277 --> 00:33:53,070\nSMTP has a couple of\ndifferent ports it can use.\n\n637\n00:33:53,070 --> 00:33:55,100\nThe 597 is pretty common.\n\n638\n00:33:55,100 --> 00:33:55,930\nAll right.\n\n639\n00:33:55,930 --> 00:34:00,720\nWhen we connect to the SMTP server,\nwe may or may not have to authenticate.\n\n640\n00:34:00,720 --> 00:34:03,850\nIf we need to authenticate, you can come\nin here and tell it to do Windows or\n\n641\n00:34:03,850 --> 00:34:07,710\nbasic authentication, and you can punch\nin that user account to get it set up.\n\n642\n00:34:07,710 --> 00:34:10,140\nI'll just leave mine at anonymous.\n\n643\n00:34:10,140 --> 00:34:12,525\nYou're gonna set these\naccording to your mail server.\n\n644\n00:34:16,304 --> 00:34:19,292\nOnce that's done, we'll just hit\nNext to move forward on that.\n\n645\n00:34:19,292 --> 00:34:20,990\nAll right.\n\n646\n00:34:20,990 --> 00:34:23,250\nAnd now it's asking me to\npick my profile security.\n\n647\n00:34:23,250 --> 00:34:25,200\nNow what's it talking about here?\n\n648\n00:34:25,200 --> 00:34:30,120\nWhen we create a profile,\na profile can either be public or private.\n\n649\n00:34:30,120 --> 00:34:35,140\nA public profile means any\nuser that has access to MySQL\n\n650\n00:34:35,140 --> 00:34:39,910\nserver will be able to generate events and\nsend them out with that public profile.\n\n651\n00:34:39,910 --> 00:34:44,440\nSo, if I want all my DBAs and all my\ndatabase users to be able to use this\n\n652\n00:34:44,440 --> 00:34:48,120\nprofile, I'll check it off\nhere to make it public, right.\n\n653\n00:34:48,120 --> 00:34:51,490\nBut if I wanna restrict it so\nthat only certain users\n\n654\n00:34:51,490 --> 00:34:55,600\ncan send information out via this profile,\nthen I'll wanna make it private.\n\n655\n00:34:55,600 --> 00:34:57,220\nAnd you can check it\noff to make it private.\n\n656\n00:34:57,220 --> 00:35:00,750\nNow, when you make it private what you're\nactually designating over here is what\n\n657\n00:35:00,750 --> 00:35:02,210\nuser can access it.\n\n658\n00:35:02,210 --> 00:35:06,230\nSo, notice how it says username\nMS_PolicyEventProcessingLogin.\n\n659\n00:35:06,230 --> 00:35:07,570\nThat's a service account.\n\n660\n00:35:07,570 --> 00:35:11,940\nI would drop this down and\npick from my various users.\n\n661\n00:35:11,940 --> 00:35:15,100\nAnd I would pick the user and\nI would give them access.\n\n662\n00:35:15,100 --> 00:35:17,201\nNow, we haven't actually\ncreated user accounts yet,\n\n663\n00:35:17,201 --> 00:35:20,110\nwe've got a security episode\ncoming up where we'll tackle that.\n\n664\n00:35:20,110 --> 00:35:24,972\nSo, when I drop this down, I don't see any\nusers yet, so, nothing special there, but\n\n665\n00:35:24,972 --> 00:35:29,200\nlater on we'll create user accounts,\nwe'll get a chance to see all those.\n\n666\n00:35:29,200 --> 00:35:31,762\nFor right now,\nI'm just gonna make my profile public, and\n\n667\n00:35:31,762 --> 00:35:33,771\nthat way any user will be\nable to make use of it.\n\n668\n00:35:36,432 --> 00:35:37,450\nAll right.\n\n669\n00:35:37,450 --> 00:35:38,960\nSo, then I'm just gonna go ahead and\nhit Next.\n\n670\n00:35:40,770 --> 00:35:43,680\nAnd it just gives me a little summary\nof some other options that I might\n\n671\n00:35:43,680 --> 00:35:45,040\nwanna tweak.\n\n672\n00:35:45,040 --> 00:35:47,380\nIf an email fails to send, do we retry?\n\n673\n00:35:47,380 --> 00:35:49,240\nHow long do we wait to try?\n\n674\n00:35:49,240 --> 00:35:51,584\nMaximum file sizes, stripped attachments.\n\n675\n00:35:51,584 --> 00:35:55,323\nAll the general types of things we might\nset with email, we can specify here.\n\n676\n00:35:56,968 --> 00:35:58,760\nAll right, that should be about it.\n\n677\n00:35:58,760 --> 00:36:00,570\nWe'll finish that up.\n\n678\n00:36:00,570 --> 00:36:04,060\nNow that it's done,\nwhen I go back here, my database mail,\n\n679\n00:36:04,060 --> 00:36:06,940\nthat screen didn't really\nchange all that much, right?\n\n680\n00:36:06,940 --> 00:36:11,400\nBut I can send a test email to\nactually make sure it works and\n\n681\n00:36:11,400 --> 00:36:13,340\nthat's a good idea to do right there.\n\n682\n00:36:13,340 --> 00:36:16,630\nSo, we send a test email and we should\nget an email saying that it worked.\n\n683\n00:36:16,630 --> 00:36:20,850\nNow, in my case, I don't actually have\na mail server, so I'm not gonna get that.\n\n684\n00:36:20,850 --> 00:36:21,890\nSo how can I fix that?\n\n685\n00:36:21,890 --> 00:36:29,160\nWell, I mentioned that we could set up our\nown SMTP server on here if we wanted to.\n\n686\n00:36:29,160 --> 00:36:32,580\nNot many people use it,\nnot many people even know it's there, but\n\n687\n00:36:32,580 --> 00:36:35,590\nin Windows Server 2012,\nif you got to add roles and\n\n688\n00:36:35,590 --> 00:36:41,250\nfeatures, Windows has a built-in\nSMTP server that it can use.\n\n689\n00:36:41,250 --> 00:36:43,490\nAnd so\nI'm gonna go into like the role based for\n\n690\n00:36:43,490 --> 00:36:47,230\nfeature based installation, for WinSQL01.\n\n691\n00:36:47,230 --> 00:36:53,010\nAnd if you look at your main stuff here,\nyou're not gonna see an SMTP server.\n\n692\n00:36:53,010 --> 00:36:57,370\nBut if we move next to our features,\nit's buried away in here somewhere.\n\n693\n00:36:57,370 --> 00:36:58,270\nLet's see if I can find it.\n\n694\n00:37:00,110 --> 00:37:00,670\nThere.\n\n695\n00:37:00,670 --> 00:37:01,980\nSMTP server.\n\n696\n00:37:01,980 --> 00:37:06,670\nSo, we can actually tell it to install\na SMTP server, and it's a part of IIS,\n\n697\n00:37:06,670 --> 00:37:08,590\nit's actually a part of web server.\n\n698\n00:37:08,590 --> 00:37:12,095\nSo, it's going to tell me I need to\ninstall the IIS management console.\n\n699\n00:37:12,095 --> 00:37:16,255\nSo, I'm gonna go ahead and add those\nfeatures and we'll get that set up.\n\n700\n00:37:16,255 --> 00:37:19,657\nNow, I'm not gonna change any of\nthe default options here because I don't\n\n701\n00:37:19,657 --> 00:37:20,529\nreally about IIS.\n\n702\n00:37:20,529 --> 00:37:21,431\nI care about SMTP.\n\n703\n00:37:21,431 --> 00:37:24,050\nSo, none of these role\nfeatures really matter to me.\n\n704\n00:37:24,050 --> 00:37:25,744\nI'll just hit Next and Install.\n\n705\n00:37:27,979 --> 00:37:33,460\nNow the danger of installing SMTP on\nthe server is that an attacker can see it.\n\n706\n00:37:33,460 --> 00:37:35,440\nAnd if it's not configured properly,\n\n707\n00:37:35,440 --> 00:37:38,290\nit can start relaying email\nout to all over the place.\n\n708\n00:37:38,290 --> 00:37:41,640\nRight, it can start flooding\nout spam emails or whatever.\n\n709\n00:37:41,640 --> 00:37:46,040\nSo, what you want to do here is the only\nperson who should be using this SMTP\n\n710\n00:37:46,040 --> 00:37:49,240\nserver is SQL, which is running\nright here on this server too.\n\n711\n00:37:49,240 --> 00:37:52,300\nSo, you just want to make sure\nthat your Windows Firewall rule\n\n712\n00:37:52,300 --> 00:37:55,765\nis blocking incoming access to SMTP.\n\n713\n00:37:55,765 --> 00:37:58,380\nNobody outside of this server\nshould be able to touch it.\n\n714\n00:37:58,380 --> 00:38:01,120\nI'm putting it on here just for SQL.\n\n715\n00:38:01,120 --> 00:38:01,690\nAll right.\n\n716\n00:38:01,690 --> 00:38:04,530\nSQL is running right here\non the server with SMTP so\n\n717\n00:38:04,530 --> 00:38:06,150\nit doesn't pass through the firewall.\n\n718\n00:38:06,150 --> 00:38:11,295\nSo the firewall can block SMTP and the SQL\nserver will still be able to access it.\n\n719\n00:38:11,295 --> 00:38:14,940\nNow, it's adding that feature, and while\nit does it, I'm gonna jump back here.\n\n720\n00:38:14,940 --> 00:38:16,720\nAnd I'm gonna reconfigure Database Mail.\n\n721\n00:38:18,770 --> 00:38:21,527\nAnd this time, instead of\nchoosing to set up Database Mail,\n\n722\n00:38:21,527 --> 00:38:24,568\nI'm gonna choose to manage\nDatabase Mail accounts and profiles.\n\n723\n00:38:27,616 --> 00:38:31,070\nAnd here, I can create a new account or\nchange an account.\n\n724\n00:38:31,070 --> 00:38:35,791\nThat's what I want to do.\nI wanna change an account.\n\n725\n00:38:35,791 --> 00:38:39,875\nAnd I'm gonna take this server and\nI called it mail.itpro.tv.\n\n726\n00:38:39,875 --> 00:38:41,947\nI'm just gonna delete that.\n\n727\n00:38:41,947 --> 00:38:43,820\nAnd, oh,\nit's got an account associated with it, so\n\n728\n00:38:43,820 --> 00:38:45,056\nit's not gonna let me change that.\n\n729\n00:38:45,056 --> 00:38:46,222\nBut I'll just change the server down here.\n\n730\n00:38:46,222 --> 00:38:52,070\nInstead of pointing to mail.itpro.tv,\nI'm gonna point it to 127.0.0.1.\n\n731\n00:38:52,070 --> 00:38:53,630\nAnd what does that mean?\n\n732\n00:38:53,630 --> 00:38:54,590\nThat's the loop back.\n\n733\n00:38:54,590 --> 00:38:57,440\nIt's going to point at itself.\n\n734\n00:38:57,440 --> 00:39:02,370\nSo, use itself as an SMTP server\nwhenever it goes to send an email.\n\n735\n00:39:02,370 --> 00:39:05,744\nI'm turning off SSL and\nputting it back to port 25, and\n\n736\n00:39:05,744 --> 00:39:08,148\nI'm doing anonymous authentication.\n\n737\n00:39:08,148 --> 00:39:12,252\nSo, now whenever the SQL server tries to\nsend an email, it will just use itself.\n\n738\n00:39:14,527 --> 00:39:16,417\nAll right, so\nwe'll go ahead and finish that.\n\n739\n00:39:16,417 --> 00:39:18,185\nAnd that is done.\n\n740\n00:39:18,185 --> 00:39:22,289\nAnd let me see how my little install\nis going, looks like that is done too.\n\n741\n00:39:25,011 --> 00:39:26,733\nAll right.\n\n742\n00:39:26,733 --> 00:39:30,520\nSo, now I've got my own SMTP server,\nwhich is ready to send emails.\n\n743\n00:39:30,520 --> 00:39:35,522\nI'm pretty much set up, I probably need to\ncheck some SMTP configuration settings,\n\n744\n00:39:35,522 --> 00:39:38,792\nwhich, actually,\nlet me go back to my server manager.\n\n745\n00:39:43,218 --> 00:39:48,695\nAnd I'm gonna my\nInternet Information Services 6.0 Manager,\n\n746\n00:39:48,695 --> 00:39:52,125\nand we'll have our SMTP setting in here.\n\n747\n00:39:52,125 --> 00:39:54,850\nAnd I just want to double check and\nmake sure that it is up and running.\n\n748\n00:39:56,290 --> 00:39:59,625\nSo I can see that SMTP\nvirtual server is running.\n\n749\n00:40:04,230 --> 00:40:06,167\nAnd so we can just check\na few little settings here.\n\n750\n00:40:06,167 --> 00:40:08,507\nUnder Access you got\nthe authentication options and\n\n751\n00:40:08,507 --> 00:40:10,540\nI've got anonymous access turned on there.\n\n752\n00:40:10,540 --> 00:40:15,400\nI just wanted to make sure that was turned\non and so we should be good to go there.\n\n753\n00:40:15,400 --> 00:40:17,510\nWe don't need any relay restrictions.\n\n754\n00:40:19,370 --> 00:40:22,948\nWell, so we've got Select which computer\nmay relay through this virtual server,\n\n755\n00:40:22,948 --> 00:40:25,260\nso who's allowed to flood\nemail through this thing.\n\n756\n00:40:25,260 --> 00:40:31,800\nAnd I'm gonna go ahead and hit Add,\nand I'm gonna add 127.0.0.1.\n\n757\n00:40:31,800 --> 00:40:35,830\nThat's ourselves, we're allowing ourselves\nto be able to relay through this box.\n\n758\n00:40:35,830 --> 00:40:39,900\nSo now we've got our own mail server,\nwe'll be able to see this in action.\n\n759\n00:40:41,880 --> 00:40:42,960\nOkay.\n\n760\n00:40:42,960 --> 00:40:46,510\nSo now if I go back to SQL I can\ntest by sending a test email.\n\n761\n00:40:46,510 --> 00:40:47,900\nAnd so\nyou'll see its got the option here for\n\n762\n00:40:47,900 --> 00:40:49,200\nme to specify who I'm gonna send it to.\n\n763\n00:40:49,200 --> 00:40:52,440\nI'll send to don@itpro.tv, and\n\n764\n00:40:52,440 --> 00:40:55,930\nit's gonna be a database mail test,\nand we'll send it along.\n\n765\n00:40:55,930 --> 00:40:58,330\nOkay, so it says that it sent.\n\n766\n00:40:58,330 --> 00:41:00,491\nIt thinks that it went successfully.\n\n767\n00:41:00,491 --> 00:41:04,037\nAnd what should happen is in\nthe background, SQL created the email,\n\n768\n00:41:04,037 --> 00:41:08,630\nstuck it into that SMTP server, and the\nSMTP server then says, oh, this is going\n\n769\n00:41:08,630 --> 00:41:13,160\nto don@itpro.tv, let me find that mail\nserver, so it looked it up, and we use\n\n770\n00:41:13,160 --> 00:41:17,310\nGoogle Apps, so it finds Google's mail\nservers and it sends it along to there.\n\n771\n00:41:17,310 --> 00:41:22,890\nAnd shortly, I should get an email\ntelling me that this test is working,\n\n772\n00:41:22,890 --> 00:41:25,250\nand I guess I could check and see.\n\n773\n00:41:25,250 --> 00:41:30,280\nYeah, sure enough, on my phone I got\nan email from SQL server agent that says,\n\n774\n00:41:30,280 --> 00:41:31,970\nI know this doesn't help you guys much,\nbut\n\n775\n00:41:31,970 --> 00:41:37,050\nit says this is a test email sent\nfrom database mail on WinSQL 01.\n\n776\n00:41:37,050 --> 00:41:39,050\nSo now I'm getting emails.\n\n777\n00:41:39,050 --> 00:41:39,570\nRight?\n\n778\n00:41:39,570 --> 00:41:43,090\nNow, I'm running SMTP on my mail,\non my SQL server.\n\n779\n00:41:43,090 --> 00:41:44,560\nAs long as I go into my firewall and\n\n780\n00:41:44,560 --> 00:41:48,910\nblock outside addresses from being able\nto get to it, it's nice and secure.\n\n781\n00:41:48,910 --> 00:41:51,660\nNow my SQL server can mail its\nstuff off wherever it wants.\n\n782\n00:41:51,660 --> 00:41:54,070\nI did that just because I\ndidn't have a mail server.\n\n783\n00:41:54,070 --> 00:41:55,730\nIf I already had a mail\nserver on this network,\n\n784\n00:41:55,730 --> 00:41:57,560\nI could've just pointed right to it,\nright?\n\n785\n00:41:57,560 --> 00:42:00,220\nSo, don't feel like you have to\nreinvent the wheel if you've already\n\n786\n00:42:00,220 --> 00:42:01,318\ngot a mail server.\n\n787\n00:42:01,318 --> 00:42:03,266\nAll right,\n\n788\n00:42:03,266 --> 00:42:07,730\nnow I just need to get the SQL agent\nset up to be able to send these emails.\n\n789\n00:42:07,730 --> 00:42:10,020\nWell before we do that,\n\n790\n00:42:10,020 --> 00:42:13,770\nwe need to define who's gonna be\ngetting the emails, all right?\n\n791\n00:42:13,770 --> 00:42:18,210\nThe way the SQL Server Agent manages\nthat is with what's called an operator.\n\n792\n00:42:18,210 --> 00:42:21,870\nIf I go down here,\nlet me zoom in a little bit here.\n\n793\n00:42:23,900 --> 00:42:28,020\nUnder the SQL Server Agent menu tree,\n\n794\n00:42:28,020 --> 00:42:30,760\nyou'll see this Operators folder,\nall right?\n\n795\n00:42:30,760 --> 00:42:36,420\nThe operators are the people we notify\nwhen agent's jobs are happening or\n\n796\n00:42:36,420 --> 00:42:37,510\nwhen there's problems.\n\n797\n00:42:37,510 --> 00:42:39,720\nThe people who are allowed to\nrun the agent jobs, right?\n\n798\n00:42:39,720 --> 00:42:41,290\nOperators are the ones that do that.\n\n799\n00:42:41,290 --> 00:42:45,220\nThink of the operators as your help desk,\nyour sequel DBAs.\n\n800\n00:42:45,220 --> 00:42:47,350\nWho is it that manages these servers?\n\n801\n00:42:47,350 --> 00:42:48,830\nThose are gonna be the people\nthat are operators.\n\n802\n00:42:49,950 --> 00:42:52,350\nNow, we have user accounts.\n\n803\n00:42:52,350 --> 00:42:56,010\nThose are used for permissions, and we'll\ntalk about those in the security episode.\n\n804\n00:42:56,010 --> 00:42:59,190\nOperators are simply used for\nnotifications.\n\n805\n00:42:59,190 --> 00:43:01,600\nSo just because you're an operator\n\n806\n00:43:01,600 --> 00:43:04,740\ndoesn't mean you have permissions\nto even access the database.\n\n807\n00:43:04,740 --> 00:43:06,630\nYou might be somebody that gets notified,\nbut\n\n808\n00:43:06,630 --> 00:43:09,380\nnot have access to this\ndatabase server at all.\n\n809\n00:43:09,380 --> 00:43:12,300\nSo be aware that there's a little\ndifference there between operators\n\n810\n00:43:12,300 --> 00:43:13,650\nand users.\n\n811\n00:43:13,650 --> 00:43:15,000\nI'm gonna go ahead and\ncreate an operator, though.\n\n812\n00:43:15,000 --> 00:43:16,710\nI'll just right-click on that and\nchoose New Operator.\n\n813\n00:43:16,710 --> 00:43:23,795\nAnd the New Operator wizard comes up,\nand it's got a lot of options in here.\n\n814\n00:43:23,795 --> 00:43:26,500\nSo first we create a name, so\nI'll put Don Pezet, right, so\n\n815\n00:43:26,500 --> 00:43:30,090\nI'm gonna be the operator, and\nI'll put in my email address.\n\n816\n00:43:30,090 --> 00:43:32,990\nIf I wanna be able to receive emails\nit needs to know my address so\n\n817\n00:43:32,990 --> 00:43:36,410\nI'll put in don@ittpro.tv, all right.\n\n818\n00:43:36,410 --> 00:43:39,605\nIf I'm gonna use Netsends I\nwould turn that on.\n\n819\n00:43:39,605 --> 00:43:44,015\nSo my user name is right so I'll put\nthat in here as my Netsend address.\n\n820\n00:43:44,015 --> 00:43:46,815\nNow it's not gonna work on my network so\nI might as well leave that blank.\n\n821\n00:43:46,815 --> 00:43:47,865\nYou don't have to put it in there.\n\n822\n00:43:48,905 --> 00:43:50,875\nWhat if we still used pagers though?\n\n823\n00:43:50,875 --> 00:43:52,915\nWell, the system can't make a phone call,\nright?\n\n824\n00:43:52,915 --> 00:43:54,990\nIt can't place an SMS page.\n\n825\n00:43:54,990 --> 00:43:58,030\nBut it can send an email\nto a paging service.\n\n826\n00:43:58,030 --> 00:44:01,150\nMost pagers these days have an email\naddress assigned with them.\n\n827\n00:44:01,150 --> 00:44:03,830\nSo it's usually something\nlike your phone number.\n\n828\n00:44:03,830 --> 00:44:11,869\nSo you might have\n1-352-555-1212@verizonwireless.com or\n\n829\n00:44:11,869 --> 00:44:15,040\nsomething like that, right?\n\n830\n00:44:15,040 --> 00:44:19,220\nOr @blackberry.com or whatever it\nis that you're using as a pager.\n\n831\n00:44:19,220 --> 00:44:22,180\nSo you would specify that in there so\nit would know where to send the page to.\n\n832\n00:44:24,440 --> 00:44:25,980\nI'll leave that up.\n\n833\n00:44:25,980 --> 00:44:29,040\nThen, you're pager on duty schedule,\nall right?\n\n834\n00:44:30,070 --> 00:44:33,630\nIf we have people that are on call or\nthey work different shifts,\n\n835\n00:44:33,630 --> 00:44:35,900\nyou don't want to page somebody\nwhen it's not their shift.\n\n836\n00:44:35,900 --> 00:44:36,880\nAnd see you can go through and\n\n837\n00:44:36,880 --> 00:44:40,300\nspecify this to indicate when\nit is they get contacted.\n\n838\n00:44:40,300 --> 00:44:43,570\nSo maybe we don't do after hours support,\nright?\n\n839\n00:44:43,570 --> 00:44:45,550\nI don't think I've ever worked for\na company like that but maybe we don't.\n\n840\n00:44:46,810 --> 00:44:47,992\nSo we could say, go ahead and\n\n841\n00:44:47,992 --> 00:44:51,810\npage this person when an order happens\nbetween 8:00 AM and 5:00 PM, right?\n\n842\n00:44:51,810 --> 00:44:53,450\nThey're on duty, notify them.\n\n843\n00:44:54,460 --> 00:44:56,090\nMore commonly I use this a different way.\n\n844\n00:44:56,090 --> 00:45:00,798\nWhat I like to do is come in and\n\n845\n00:45:00,798 --> 00:45:03,750\nsay 5 PM to 8 AM.\n\n846\n00:45:03,750 --> 00:45:06,780\nAll right.\nNow, why would I do that?\n\n847\n00:45:06,780 --> 00:45:09,710\nI hate getting paged when\nI'm already at the office.\n\n848\n00:45:09,710 --> 00:45:10,410\nI'm at the office.\n\n849\n00:45:10,410 --> 00:45:11,220\nI know there's a problem.\n\n850\n00:45:11,220 --> 00:45:12,790\nI'm working in the system right.\n\n851\n00:45:12,790 --> 00:45:13,890\nSo don't page me also.\n\n852\n00:45:13,890 --> 00:45:15,250\nI'm already there.\n\n853\n00:45:15,250 --> 00:45:21,400\nBut if I'm at home, right, after 5 PM but\nbefore 8 AM, go ahead and page me then.\n\n854\n00:45:21,400 --> 00:45:22,680\nI'm at home.\nI don't know if there's\n\n855\n00:45:22,680 --> 00:45:24,460\na problem with the SQL server.\n\n856\n00:45:24,460 --> 00:45:29,820\nSo you may want to manipulate these values\nto reflect what your environment is like,\n\n857\n00:45:29,820 --> 00:45:31,180\nwhat your environment is doing.\n\n858\n00:45:31,180 --> 00:45:34,220\nAnd get those set, and\nyou've got Saturday and Sunday hours also.\n\n859\n00:45:34,220 --> 00:45:35,620\nSo you just go through and\n\n860\n00:45:35,620 --> 00:45:39,100\ndesignate whatever it is that\nyou need to notify your people.\n\n861\n00:45:42,300 --> 00:45:44,558\nSo let me just put these\nback to the way they were.\n\n862\n00:45:44,558 --> 00:45:45,496\nThere.\n\n863\n00:45:45,496 --> 00:45:48,810\nAll right, for the most part,\n\n864\n00:45:48,810 --> 00:45:50,880\nthat's really all we need to configure for\nan operator.\n\n865\n00:45:50,880 --> 00:45:53,370\nWe also have the notifications\noptions over here\n\n866\n00:45:53,370 --> 00:45:56,900\nwhere we can add specific\nalerts to be able to send them.\n\n867\n00:45:56,900 --> 00:45:59,540\nWe haven't defined any alerts yet\nso this is gonna be blank.\n\n868\n00:45:59,540 --> 00:46:03,180\nWe'll come back to that\nin another episode.\n\n869\n00:46:03,180 --> 00:46:05,020\nAll right, so I'm gonna say OK to that.\n\n870\n00:46:05,020 --> 00:46:08,567\nSo I've got one operator, Don Pezet Right\nthere, I would go through and\n\n871\n00:46:08,567 --> 00:46:10,500\nstart to add all of my other operators.\n\n872\n00:46:10,500 --> 00:46:12,675\nWhoever's on the help desk,\n\n873\n00:46:12,675 --> 00:46:17,740\nwhoever I want to send email\nnotifications when a problem happens.\n\n874\n00:46:17,740 --> 00:46:21,100\nNow, I've got my database mail configured\nand I've got my operator configured.\n\n875\n00:46:22,150 --> 00:46:26,590\nNow, I can configure the SQL server\nagent to be able to send emails.\n\n876\n00:46:26,590 --> 00:46:29,480\nSo if I go back to my\nSQL Server Agent properties, so\n\n877\n00:46:29,480 --> 00:46:34,320\nI'll just right click on it and\nchoose Properties, inside of it's config\n\n878\n00:46:34,320 --> 00:46:38,790\nscreen I can go to the Alert System,\nand under the Alert System now I\n\n879\n00:46:38,790 --> 00:46:43,410\ncan choose Enable mail profile and\npick the profile that I want to use.\n\n880\n00:46:43,410 --> 00:46:45,240\nI'm using Database Mail.\n\n881\n00:46:45,240 --> 00:46:49,250\nAnd if I drop that down, here's my\nDatabase Mail default profile that I made.\n\n882\n00:46:49,250 --> 00:46:52,910\nRemember you might have more than one\nprofile if you have multiple clients.\n\n883\n00:46:52,910 --> 00:46:54,960\nI just have the one, right.\n\n884\n00:46:54,960 --> 00:46:58,920\nThen you can specify if we're sending\npager emails, what the two line is,\n\n885\n00:46:58,920 --> 00:47:00,360\nthe CC, the subject, right.\n\n886\n00:47:00,360 --> 00:47:05,080\nThese are all the basic information\nthat we want to specify that we're\n\n887\n00:47:05,080 --> 00:47:06,600\ngonna be sending out.\n\n888\n00:47:06,600 --> 00:47:10,320\nSo I'll say this one.\n\n889\n00:47:10,320 --> 00:47:12,057\nI really don't need to\npunch in much of this,\n\n890\n00:47:12,057 --> 00:47:14,140\ncuz we're not using pager emails anyway.\n\n891\n00:47:14,140 --> 00:47:16,550\nYou can specify a failsafe operator.\n\n892\n00:47:16,550 --> 00:47:18,350\nThat's kind of a nice thing.\n\n893\n00:47:18,350 --> 00:47:20,850\nIf set hours for our operators,\n\n894\n00:47:21,850 --> 00:47:26,340\nwhat happens if an alert is generated at\na time when no operator is on the clock?\n\n895\n00:47:26,340 --> 00:47:28,670\nIf none of the operators are in service.\n\n896\n00:47:28,670 --> 00:47:31,560\nWell, by default it just\ndoesn't send the alert out.\n\n897\n00:47:31,560 --> 00:47:35,440\nSo you can define a fail-safe\noperator to say if nobody's on duty,\n\n898\n00:47:35,440 --> 00:47:38,220\nif nobody is scheduled for\nthis time, send to this person.\n\n899\n00:47:38,220 --> 00:47:40,720\nAnd so I'll say, email to Don Pezet.\n\n900\n00:47:40,720 --> 00:47:43,410\nIf nobody else is on duty,\ndo that one right there.\n\n901\n00:47:46,950 --> 00:47:48,167\nAll right.\nWhoops.\n\n902\n00:47:48,167 --> 00:47:52,333\nSo that's basically it for\nwhat we need to set on that one.\n\n903\n00:47:52,333 --> 00:47:56,625\nNow our email system is enabled We've got\nour operators defined that we can alert.\n\n904\n00:47:56,625 --> 00:48:00,750\nWe'll see setting up alerts later on,\nbut basically, we've got that in place.\n\n905\n00:48:00,750 --> 00:48:03,910\nNow, we're ready to get the agent\ndoing some work for us, right?\n\n906\n00:48:03,910 --> 00:48:06,690\nWe've done all this stuff configuring the\nagent, just kinda getting it set up, but\n\n907\n00:48:06,690 --> 00:48:08,780\nit hasn't actually done anything yet.\n\n908\n00:48:08,780 --> 00:48:10,290\nSo we need to get it some jobs.\n\n909\n00:48:10,290 --> 00:48:12,220\nI'm gonna go ahead and say okay on that.\n\n910\n00:48:12,220 --> 00:48:14,120\nNow the agent's ready to send emails.\n\n911\n00:48:14,120 --> 00:48:16,200\nNow, this won't be on the exam.\n\n912\n00:48:16,200 --> 00:48:20,190\nBut in real life land,\nI find that the SQL server agent\n\n913\n00:48:20,190 --> 00:48:24,330\ndoesn't always send out emails\nright when you first configure it.\n\n914\n00:48:24,330 --> 00:48:27,330\nI usually like to restart the agent\nafter configuring database mail.\n\n915\n00:48:27,330 --> 00:48:30,680\nSo just for me personally,\nI find that helps out.\n\n916\n00:48:30,680 --> 00:48:33,830\nSo I'm gonna restart my agent,\njust to make sure that it recognizes all\n\n917\n00:48:33,830 --> 00:48:36,380\nthe email changes, and\nthen it's ready to rock.\n\n918\n00:48:36,380 --> 00:48:38,310\nRestarting the agent is not a big deal.\n\n919\n00:48:38,310 --> 00:48:41,680\nIt doesn't effect your databases, your\nend-users won't even notice it happens.\n\n920\n00:48:41,680 --> 00:48:43,580\nBut you will need to check\nyour scheduled jobs.\n\n921\n00:48:43,580 --> 00:48:45,432\nIf you have any jobs that\nare running right now,\n\n922\n00:48:45,432 --> 00:48:47,250\nyou don't wanna restart that agent, right?\n\n923\n00:48:47,250 --> 00:48:51,232\nBut if no jobs are running right now,\nyou can restart the agent and\n\n924\n00:48:51,232 --> 00:48:53,630\nit doesn't effect your server at all.\n\n925\n00:48:53,630 --> 00:48:54,300\nAll right.\n\n926\n00:48:54,300 --> 00:48:58,038\nWell, why don't we stop here and\ntake a break, and when we get back,\n\n927\n00:48:58,038 --> 00:49:01,460\nwe'll start to create some of\nour first SQL Server Agent jobs.\n\n928\n00:49:01,460 --> 00:49:04,560\nWe'll get a chance to see how that works,\nand get to dive into it.\n\n929\n00:49:04,560 --> 00:49:06,080\nSo stay tuned.\n\n930\n00:49:06,080 --> 00:49:07,250\nWe'll be back in a few.\n\n931\n00:49:07,250 --> 00:49:14,800\n[MUSIC].\n\n932\n00:49:14,800 --> 00:49:15,670\nAll right.\n\n933\n00:49:15,670 --> 00:49:18,430\nSo here we are,\none hour into the show, and\n\n934\n00:49:18,430 --> 00:49:21,145\nI haven't automated a darn thing yet so.\n\n935\n00:49:21,145 --> 00:49:21,780\n[LAUGH].\n\n936\n00:49:21,780 --> 00:49:24,510\nSo we probably need to tackle that\nwith the SQL Server Agent cuz\n\n937\n00:49:24,510 --> 00:49:28,100\nthat's kind of the whole purpose of\nthe thing is automating activities.\n\n938\n00:49:28,100 --> 00:49:33,160\nWell, now that we've got it set up, what\nwe can do is we can go in and create jobs.\n\n939\n00:49:33,160 --> 00:49:36,010\nSo jobs are just the things\nthat we automate.\n\n940\n00:49:36,010 --> 00:49:38,940\nThe things that we schedule and\nwe tell it to perform, and\n\n941\n00:49:38,940 --> 00:49:42,840\nwhen you create a job,\nit can actually do more than one thing.\n\n942\n00:49:42,840 --> 00:49:45,620\nSo a job is made up of steps, and\n\n943\n00:49:45,620 --> 00:49:48,710\nyou might only have a single\njob with a single step.\n\n944\n00:49:48,710 --> 00:49:50,990\nIt does that one step and it's done.\n\n945\n00:49:50,990 --> 00:49:55,820\nOr you can have a job with more than\none step that says do this action,\n\n946\n00:49:55,820 --> 00:49:57,650\nthen this action, then this action.\n\n947\n00:49:57,650 --> 00:50:01,070\nNow, steps are kind of nice\nbecause you can define\n\n948\n00:50:01,070 --> 00:50:02,610\nactions to take if there's a failure.\n\n949\n00:50:03,820 --> 00:50:10,770\nIf you have one job with one step, one\nactivity that runs, it's gonna run it and\n\n950\n00:50:10,770 --> 00:50:15,650\nif any part of it fails, It'll roll it\nback and undo it, and it's all gone.\n\n951\n00:50:15,650 --> 00:50:19,150\nBut you might want some part to stay and\nonly some parts to roll back.\n\n952\n00:50:19,150 --> 00:50:21,740\nSo you can do individual\nsteps to break that up.\n\n953\n00:50:21,740 --> 00:50:24,410\nIt's up to you and what you're trying\nto achieve whether you wanna do that.\n\n954\n00:50:24,410 --> 00:50:25,990\nThe process is really simple.\n\n955\n00:50:25,990 --> 00:50:28,700\nWe start by creating a new job.\n\n956\n00:50:28,700 --> 00:50:32,230\nSo I'll just right click on my\njobs folder and go to new job.\n\n957\n00:50:32,230 --> 00:50:32,910\nAll right.\n\n958\n00:50:32,910 --> 00:50:37,060\nWhen we create a job, you just give\nit a name, nothing too special here.\n\n959\n00:50:37,060 --> 00:50:39,260\nAnd then,\nwe tell it what we want it to do.\n\n960\n00:50:39,260 --> 00:50:42,850\nNow, for the name,\nlet's think of something we wanna do.\n\n961\n00:50:42,850 --> 00:50:46,132\nI mentioned in an earlier\nepisode that growing a database.\n\n962\n00:50:46,132 --> 00:50:50,260\nIf I wanna grow a database,\nit creates a bit of a performance hit.\n\n963\n00:50:50,260 --> 00:50:51,910\nSo we might not want auto grow.\n\n964\n00:50:51,910 --> 00:50:54,930\nInstead we might want to\nmanually grow a database.\n\n965\n00:50:54,930 --> 00:50:59,490\nSo maybe I look at one of my databases,\nand here let's do an example.\n\n966\n00:50:59,490 --> 00:51:02,770\nSo I take a look at my products database.\n\n967\n00:51:02,770 --> 00:51:08,280\nNow my products database,\nright now it is 1.2 GB in size,\n\n968\n00:51:08,280 --> 00:51:13,760\nand it's got 900 MB of space\navailable inside of it.\n\n969\n00:51:13,760 --> 00:51:15,610\nAnd so, maybe I wanna grow that.\n\n970\n00:51:15,610 --> 00:51:18,840\nAnd I decide, man, I'm about to do\na bulk load of products in there.\n\n971\n00:51:18,840 --> 00:51:21,540\nAnd so, I want to double its size.\n\n972\n00:51:21,540 --> 00:51:25,950\nI wanna add another gig of storage to it,\nor something like that, right?\n\n973\n00:51:25,950 --> 00:51:27,680\nWell, I wanna grow it.\n\n974\n00:51:27,680 --> 00:51:30,290\nBut I wanna grow it on my schedule,\nnot on the servers.\n\n975\n00:51:30,290 --> 00:51:32,660\nSo not have it determine,\nI wanna do it myself.\n\n976\n00:51:32,660 --> 00:51:34,810\nSo I'm gonna create a job to grow that.\n\n977\n00:51:34,810 --> 00:51:36,781\nWell I just need a little\nbit of information.\n\n978\n00:51:36,781 --> 00:51:38,931\nThe main thing I need is to\nknow is the file name, right?\n\n979\n00:51:38,931 --> 00:51:41,421\nSo if I look I've got\nmy products file here.\n\n980\n00:51:41,421 --> 00:51:45,055\nIt's got, oh, that 1.2 GB that was\ncounting the transaction log, so\n\n981\n00:51:45,055 --> 00:51:47,350\nit's really only 1 GB in size.\n\n982\n00:51:47,350 --> 00:51:49,880\nAnd the file name is called products.\n\n983\n00:51:49,880 --> 00:51:52,275\nAll right.\nSo i need to remember that file name and\n\n984\n00:51:52,275 --> 00:51:54,015\nthe size that I wanna change it to.\n\n985\n00:51:54,015 --> 00:51:57,010\nAll right so, the products database\nis what I'm gonna mess with.\n\n986\n00:51:57,010 --> 00:52:00,070\nThe file is called products,\nthat'll make things easy.\n\n987\n00:52:00,070 --> 00:52:02,695\nSo I'm gonna go down here to my jobs and\nI'll create a new job and\n\n988\n00:52:02,695 --> 00:52:09,040\nI'm gonna call this the grow\nproducts database job.\n\n989\n00:52:09,040 --> 00:52:10,110\nThat's my job.\n\n990\n00:52:11,170 --> 00:52:15,640\nNow the owner, that's who's creating\nthis job, I'm logged in as SA right now.\n\n991\n00:52:15,640 --> 00:52:18,090\nI'm the one who's creating it so\nthat means I can run it.\n\n992\n00:52:18,090 --> 00:52:20,730\nIf I want somebody else to run it or\nedit it, or whatever,\n\n993\n00:52:20,730 --> 00:52:22,630\nI might wanna make them the owner instead.\n\n994\n00:52:22,630 --> 00:52:24,620\nSo right now, it's just me, and\n\n995\n00:52:24,620 --> 00:52:28,590\nI can set a category if I wanna categorize\nthese together, I mentioned that earlier.\n\n996\n00:52:28,590 --> 00:52:31,690\nNow, notice how you can't\ncreate a category here.\n\n997\n00:52:31,690 --> 00:52:35,060\nWell if you hit your ellipsis button,\nit brings you to this screen,\n\n998\n00:52:35,060 --> 00:52:37,760\nwhere you can go through and\nsee the other jobs that are in there, but\n\n999\n00:52:37,760 --> 00:52:39,710\nagain it still doesn't let you create it.\n\n1000\n00:52:39,710 --> 00:52:41,190\nIf you want to create categories,\n\n1001\n00:52:41,190 --> 00:52:45,445\nwe actually have a little menu option,\nlet's see it's buried in here somewhere.\n\n1002\n00:52:45,445 --> 00:52:51,280\nOh, actually it's under the SQL\nServer Agent properties themselves.\n\n1003\n00:52:51,280 --> 00:52:53,700\nI have to go in there, and\nyou can create the categories there.\n\n1004\n00:52:53,700 --> 00:52:56,270\nSo it won't let me create the categories\nhere, but if you've already got them,\n\n1005\n00:52:56,270 --> 00:52:57,840\nyou can assign it.\n\n1006\n00:52:57,840 --> 00:53:00,610\nAnd then,\nwe need to tell it what we're gonna do.\n\n1007\n00:53:00,610 --> 00:53:02,780\nSo on the left side, I go to steps.\n\n1008\n00:53:02,780 --> 00:53:04,910\nAnd here's where I see the job steps.\n\n1009\n00:53:04,910 --> 00:53:05,910\nNow, it's empty.\n\n1010\n00:53:05,910 --> 00:53:09,070\nAnd you might only have one step and\nthat's it.\n\n1011\n00:53:09,070 --> 00:53:12,590\nBut, if you have multiple steps,\nthey'll all be listed here and\n\n1012\n00:53:12,590 --> 00:53:13,950\nyou can sort their order.\n\n1013\n00:53:13,950 --> 00:53:17,930\nThe order they're gonna execute and\nit'll go in line, one after the other, and\n\n1014\n00:53:17,930 --> 00:53:19,578\nperform those steps.\n\n1015\n00:53:19,578 --> 00:53:22,170\nSo, I'm gonna create a new step, and\n\n1016\n00:53:22,170 --> 00:53:25,720\nI might have one step that\nsays backup database.\n\n1017\n00:53:25,720 --> 00:53:27,600\nMaybe I'm worried about\nsomething going wrong.\n\n1018\n00:53:27,600 --> 00:53:30,390\nSo I wanna backup the database first and\nso\n\n1019\n00:53:30,390 --> 00:53:34,520\nI can create a backup database step,\nand I can tell it what I want to do.\n\n1020\n00:53:34,520 --> 00:53:37,750\nSo maybe I'm doing a replication or\nsomething of that nature.\n\n1021\n00:53:37,750 --> 00:53:39,705\nI'm gonna stick with Transact-SQL for\nright now.\n\n1022\n00:53:39,705 --> 00:53:44,258\nTransact-SQL, that means I'm gonna\nrun a script to do the backup.\n\n1023\n00:53:44,258 --> 00:53:45,245\nAll right?\n\n1024\n00:53:45,245 --> 00:53:48,115\nNow from there, I can come in and\ntype the script.\n\n1025\n00:53:48,115 --> 00:53:51,625\nNow if I know it, if I have it memorized,\nI can just type it right in here, great.\n\n1026\n00:53:51,625 --> 00:53:55,455\nBut if we don't know it, there's a few\nways we can go about creating this.\n\n1027\n00:53:55,455 --> 00:53:58,970\nOne, I can use the GUI, and go in and\ntell it to do a backup, and\n\n1028\n00:53:58,970 --> 00:54:02,610\ninstead of hitting okay to run the backup,\nI can hit the script button, and\n\n1029\n00:54:02,610 --> 00:54:05,430\nit will give me the Transact-SQL for\nperforming that backup.\n\n1030\n00:54:05,430 --> 00:54:08,310\nI can just copy it and\npaste it right here, right?\n\n1031\n00:54:08,310 --> 00:54:12,910\nThat's that script button, this button\nright here, that is really useful for\n\n1032\n00:54:12,910 --> 00:54:14,984\nnot having to memorize Transact-SQL.\n\n1033\n00:54:14,984 --> 00:54:16,450\nRight?\nI would go through and\n\n1034\n00:54:16,450 --> 00:54:22,300\nspecify whatever it was that I\nwanted to do and kinda get that set.\n\n1035\n00:54:22,300 --> 00:54:24,680\nNow, I'm just gonna say okay on that.\n\n1036\n00:54:24,680 --> 00:54:25,860\nAnd so there's my first step.\n\n1037\n00:54:25,860 --> 00:54:27,420\nSo I didn't actually\nwrite the backup stuff.\n\n1038\n00:54:27,420 --> 00:54:29,248\nWe'll see that when we get\nto the backup episode.\n\n1039\n00:54:29,248 --> 00:54:33,800\nThen, I wanna actually grow the database,\nand so now, I'll come in here and\n\n1040\n00:54:33,800 --> 00:54:35,330\nI'll say grow database.\n\n1041\n00:54:35,330 --> 00:54:36,002\nThis will be step two.\n\n1042\n00:54:36,002 --> 00:54:37,410\nAll right.\n\n1043\n00:54:37,410 --> 00:54:40,600\nIf the backup fails,\nI don't want to move on.\n\n1044\n00:54:40,600 --> 00:54:42,420\nIf the backup fails, just stop.\n\n1045\n00:54:42,420 --> 00:54:46,570\nBut if the backup succeeds, we go to\nstep two, and now we grow the database.\n\n1046\n00:54:46,570 --> 00:54:50,535\nAnd so in here, I'm gonna say I'm\ngonna use the products database, and\n\n1047\n00:54:50,535 --> 00:54:52,750\nI'll just put in a little command here.\n\n1048\n00:54:52,750 --> 00:54:58,168\nLet's see, we want to do,\n\n1049\n00:54:58,168 --> 00:55:04,300\nALTER DATABASE Products SET.\n\n1050\n00:55:04,300 --> 00:55:05,670\nLet's see, nope sorry.\n\n1051\n00:55:05,670 --> 00:55:10,881\nWe want to do MODIFY FILE,\nand then the file,\n\n1052\n00:55:10,881 --> 00:55:15,420\nwe're gonna say NAME = Products, and\n\n1053\n00:55:19,680 --> 00:55:24,600\nSIZE, let me change this so\nit's a little bit easier to read.\n\n1054\n00:55:24,600 --> 00:55:29,016\nNAME = Products, SIZE =, and let's see,\n\n1055\n00:55:29,016 --> 00:55:33,560\nwe were at one gig, so\nI wanna make it two gigs.\n\n1056\n00:55:39,390 --> 00:55:41,000\nAnd that should do it.\n\n1057\n00:55:41,000 --> 00:55:41,920\nOkay.\n\n1058\n00:55:41,920 --> 00:55:45,922\nSo, it's gonna run and it's going\nto alter the product's database.\n\n1059\n00:55:45,922 --> 00:55:48,792\nIt's gonna modify that file and\nit's gonna bump its size up to two gigs.\n\n1060\n00:55:48,792 --> 00:55:52,280\nThat's gonna perform the grow\noperation that I want it to do.\n\n1061\n00:55:52,280 --> 00:55:54,042\nAnd it's gonna do it at\na schedule that I set.\n\n1062\n00:55:54,042 --> 00:55:57,148\nNow I haven't actually set the schedule,\nyet, but that's basically gonna go in and\n\n1063\n00:55:57,148 --> 00:55:58,590\ntake care of that action.\n\n1064\n00:55:58,590 --> 00:55:59,340\nAll right?\n\n1065\n00:55:59,340 --> 00:56:01,730\nNow notice this Run as box up here.\n\n1066\n00:56:01,730 --> 00:56:03,920\nThe Run as box doesn't\nhave anything in it.\n\n1067\n00:56:03,920 --> 00:56:09,380\nIt's gonna run as the owner of the job,\nso I'm SA, right?\n\n1068\n00:56:09,380 --> 00:56:10,750\nI'm the owner of this job.\n\n1069\n00:56:10,750 --> 00:56:12,290\nThat's who it's gonna run as.\n\n1070\n00:56:12,290 --> 00:56:15,750\nIf we added more users,\nthen we would have other people here.\n\n1071\n00:56:15,750 --> 00:56:18,580\nBut we haven't added more users yet, so\nthat's why we don't have the option.\n\n1072\n00:56:18,580 --> 00:56:20,940\nSo you might have a special\naccount you want this to run as.\n\n1073\n00:56:22,180 --> 00:56:23,610\nAll right.\nBut right now, that's basically it.\n\n1074\n00:56:23,610 --> 00:56:25,510\nIt's gonna grow that database.\n\n1075\n00:56:25,510 --> 00:56:29,720\nNow, the coolest part about\nthis is I've got it defined.\n\n1076\n00:56:29,720 --> 00:56:33,590\nIt's gonna back up the database and\nthen it's gonna grow the database.\n\n1077\n00:56:33,590 --> 00:56:38,060\nNow I can go into the schedule and\nhere's where I can tell it when to happen.\n\n1078\n00:56:38,060 --> 00:56:39,630\nNow you might have a recurring schedule.\n\n1079\n00:56:39,630 --> 00:56:42,680\nYou want it to grow the database\nevery month at this particular time,\n\n1080\n00:56:42,680 --> 00:56:45,630\nin which case we probably need to use\npercentages and not a fixed number.\n\n1081\n00:56:45,630 --> 00:56:49,940\nBut in my case I'm gonna do a schedule\ncuz I just want it to run today at 2 AM.\n\n1082\n00:56:49,940 --> 00:56:51,280\nRight.\n\n1083\n00:56:51,280 --> 00:56:54,304\nSo I want to, for this name,\n\n1084\n00:56:54,304 --> 00:56:59,920\nI'm gonna say run at 2 AM on 8/9/2014.\n\n1085\n00:56:59,920 --> 00:57:00,900\nAll right.\nToday is the 9th?\n\n1086\n00:57:00,900 --> 00:57:01,610\nYes.\n\n1087\n00:57:01,610 --> 00:57:04,360\nSo, oh actually I guess\nit would be on the 10th\n\n1088\n00:57:04,360 --> 00:57:06,040\nsince 2 AM would actually be tomorrow.\n\n1089\n00:57:06,040 --> 00:57:08,910\nSo, this is gonna be just\na kind of a one time thing.\n\n1090\n00:57:08,910 --> 00:57:11,020\nSo here under Schedule type\nI'm choosing one time.\n\n1091\n00:57:11,020 --> 00:57:12,350\nI've got recurring.\n\n1092\n00:57:12,350 --> 00:57:15,600\nIf I want this to happen every Thursday,\nor whatever.\n\n1093\n00:57:15,600 --> 00:57:16,370\nBut I'm gonna do one time.\n\n1094\n00:57:16,370 --> 00:57:17,321\nAll right?\n\n1095\n00:57:17,321 --> 00:57:20,581\nAnd for a one time you just come down\nhere and pick the one time occurrence.\n\n1096\n00:57:20,581 --> 00:57:24,660\nIf it was recurring, though,\nyou could say weekly, monthly, daily.\n\n1097\n00:57:24,660 --> 00:57:25,190\nRight?\n\n1098\n00:57:25,190 --> 00:57:29,710\nMaybe you wanna do hourly transaction log\nbackups, and so you would come in here and\n\n1099\n00:57:29,710 --> 00:57:32,620\nyou would say this would be a daily thing,\nevery one day,\n\n1100\n00:57:32,620 --> 00:57:37,920\noccurs every one hour starting at midnight\nand running all the way to midnight.\n\n1101\n00:57:37,920 --> 00:57:41,490\nSo now, every hour it can run\nthat transaction log backup.\n\n1102\n00:57:41,490 --> 00:57:43,780\nThat's something that's not uncommon.\n\n1103\n00:57:43,780 --> 00:57:46,080\nBut for me, one time is what I want.\n\n1104\n00:57:46,080 --> 00:57:51,120\nSo one time I want it to run tomorrow,\nso September 10th, and I want it to run\n\n1105\n00:57:51,120 --> 00:57:56,400\nat 2 AM.\n\n1106\n00:57:56,400 --> 00:57:59,040\nAnd then I'll just hit OK,\nand now I've got my schedule.\n\n1107\n00:57:59,040 --> 00:58:01,860\nNow, when you create a schedule\nit is stored in the database, so\n\n1108\n00:58:01,860 --> 00:58:05,260\nas you create other jobs they can\nuse the same schedule too, so\n\n1109\n00:58:05,260 --> 00:58:07,690\nyou can recycle these schedules for\ndifferent things.\n\n1110\n00:58:07,690 --> 00:58:10,970\nJust be careful, you don't want to have\na bunch of jobs all running at the same\n\n1111\n00:58:10,970 --> 00:58:14,980\ntime, so it's a good idea to\ndefine more than one schedule.\n\n1112\n00:58:14,980 --> 00:58:18,470\nAll right, so I've got that scheduled,\nthat's the one that's set.\n\n1113\n00:58:18,470 --> 00:58:20,010\nAnd I'll go ahead and hit OK.\n\n1114\n00:58:20,010 --> 00:58:23,940\nOh wait, before I hit OK,\nwe've also got alerts and notifications.\n\n1115\n00:58:25,070 --> 00:58:27,490\nAlerts are event warnings\nthat we can generate.\n\n1116\n00:58:27,490 --> 00:58:29,670\nYeah, we'll talk about\nthose in another episode.\n\n1117\n00:58:29,670 --> 00:58:33,640\nBut notifications, I probably wanna\ntell people that the backup happened.\n\n1118\n00:58:33,640 --> 00:58:38,752\nSo I can come in here and I can say\nemail Don Pezet when the job fails,\n\n1119\n00:58:38,752 --> 00:58:43,240\nwhen the job succeeds, or\nboth, when the job completes.\n\n1120\n00:58:43,240 --> 00:58:47,180\nWhen the job completes, that means if it\nfailed or succeeded, just let me know.\n\n1121\n00:58:47,180 --> 00:58:49,260\nWell, backups are really important to me.\n\n1122\n00:58:49,260 --> 00:58:50,400\nI wanna know.\n\n1123\n00:58:50,400 --> 00:58:53,586\nThis grow operation is pretty important,\ntoo, but\n\n1124\n00:58:53,586 --> 00:58:58,572\nI really only need to know if it fails,\nso with a backup yeah, I want both.\n\n1125\n00:58:58,572 --> 00:59:00,950\nI wanna know that backup ran,\nso give me a success or\n\n1126\n00:59:00,950 --> 00:59:02,520\na failure, give it to me, right?\n\n1127\n00:59:02,520 --> 00:59:05,760\nBut for a grow operation like this\nI just want to know if it fails,\n\n1128\n00:59:05,760 --> 00:59:07,950\ndon't bother telling me if it succeeds.\n\n1129\n00:59:07,950 --> 00:59:11,910\nAnd you can set other things, I usually\ndo like to write to the event log, and\n\n1130\n00:59:11,910 --> 00:59:15,350\nthere I usually go both, all right.\n\n1131\n00:59:15,350 --> 00:59:18,120\nIf this is truly a one-time job and\n\n1132\n00:59:18,120 --> 00:59:22,230\nI'm never gonna run it again, you can\nchoose to automatically delete the job.\n\n1133\n00:59:22,230 --> 00:59:24,360\nSo that if it's successful,\njust go ahead and get rid of it,\n\n1134\n00:59:24,360 --> 00:59:26,340\nwe don't need to keep it hanging around.\n\n1135\n00:59:26,340 --> 00:59:28,160\nI don't like that option, though,\nso I'm gonna turn that off.\n\n1136\n00:59:29,610 --> 00:59:30,110\nAll right.\n\n1137\n00:59:31,400 --> 00:59:32,610\nSo we're good there.\n\n1138\n00:59:32,610 --> 00:59:34,810\nI've got my notifications set.\n\n1139\n00:59:34,810 --> 00:59:37,440\nIf this was running on a remote server,\nI could set a target.\n\n1140\n00:59:37,440 --> 00:59:39,380\nAnd here's where I pick the other server.\n\n1141\n00:59:39,380 --> 00:59:42,710\nSince my agent is running with the local\naccount, I don't even have that choice.\n\n1142\n00:59:42,710 --> 00:59:43,800\nI can't even pick that.\n\n1143\n00:59:43,800 --> 00:59:47,640\nI have only got Target local server,\nand that's really what I need.\n\n1144\n00:59:47,640 --> 00:59:49,280\nSo I'll say OK.\n\n1145\n00:59:49,280 --> 00:59:53,840\nAnd now, I've got that job defined, so\nwhen I come under my jobs and I expand\n\n1146\n00:59:53,840 --> 00:59:58,820\nthat, there's my grow products database\nand I could run it right now if I wanted.\n\n1147\n00:59:58,820 --> 01:00:01,770\nI could go ahead and grow the database or\n\n1148\n01:00:01,770 --> 01:00:03,920\nI could just wait and\nit'll run at 2 AM, right.\n\n1149\n01:00:05,040 --> 01:00:07,950\nNow, I typed in that transact SQL and\nI didn't check it.\n\n1150\n01:00:07,950 --> 01:00:10,610\nI probably should have typed it\nin the query analyzer first and\n\n1151\n01:00:10,610 --> 01:00:13,290\nthen did like a parse to see\nif my syntax was correct.\n\n1152\n01:00:13,290 --> 01:00:16,210\nBut we'll give it a shot,\nlet's see what happens here.\n\n1153\n01:00:16,210 --> 01:00:19,630\nI'll go ahead and start the job, now when\nyou start the job, see the choice I get?\n\n1154\n01:00:19,630 --> 01:00:23,970\nStart job at step, I can actually\npick what step I want to start at and\n\n1155\n01:00:23,970 --> 01:00:26,420\nthat's important because\nmy back-up database step,\n\n1156\n01:00:26,420 --> 01:00:28,120\nI didn't really put anything in there.\n\n1157\n01:00:28,120 --> 01:00:31,850\nSo, I'm gonna choose to start at step 2,\nwhich is grow the database.\n\n1158\n01:00:31,850 --> 01:00:33,460\nSo I'll go ahead and hit Start.\n\n1159\n01:00:33,460 --> 01:00:34,280\nAnd it's gonna run.\n\n1160\n01:00:34,280 --> 01:00:38,480\nNow if this is running at a scheduled\ntime, we won't see this pop up window.\n\n1161\n01:00:38,480 --> 01:00:43,000\nBut because I manually ran it, it's gonna\nshow me each step as it moves through.\n\n1162\n01:00:43,000 --> 01:00:45,210\nSo it's going through and\nit's doing that grow.\n\n1163\n01:00:45,210 --> 01:00:46,930\nHopefully it's working.\n\n1164\n01:00:46,930 --> 01:00:48,350\nWe shall see.\n\n1165\n01:00:48,350 --> 01:00:50,190\nIt says it succeeded.\n\n1166\n01:00:51,730 --> 01:00:52,670\nAnd I can go verify that.\n\n1167\n01:00:52,670 --> 01:00:55,140\nI'm gonna take my products database.\n\n1168\n01:00:55,140 --> 01:00:58,840\nAnd pull up its properties and\ngo to its files and\n\n1169\n01:00:58,840 --> 01:01:02,090\nsure enough I can see it's now grown\nto two gigs in size, all right.\n\n1170\n01:01:02,090 --> 01:01:03,465\nSo it happened on my time.\n\n1171\n01:01:03,465 --> 01:01:10,340\nAll right, so\nthat is one example of automating a task.\n\n1172\n01:01:10,340 --> 01:01:13,820\nYou could automate shrink jobs too to\nshrink the database down if you've deleted\n\n1173\n01:01:13,820 --> 01:01:14,390\na bunch of stuff.\n\n1174\n01:01:14,390 --> 01:01:17,760\nYou can automate anything that you\ncan write an SQL script to do, right.\n\n1175\n01:01:17,760 --> 01:01:22,010\nThat transact SQL, you can type anything\nin there and it'll perform that activity.\n\n1176\n01:01:22,010 --> 01:01:22,980\nIt's really, really useful.\n\n1177\n01:01:24,120 --> 01:01:26,820\nBut it can actually do a lot more.\n\n1178\n01:01:26,820 --> 01:01:30,780\nWhen I created that job,\nlet me go back to my job screen here.\n\n1179\n01:01:30,780 --> 01:01:31,490\nI'll do another new job.\n\n1180\n01:01:31,490 --> 01:01:32,670\nAll right.\n\n1181\n01:01:32,670 --> 01:01:37,050\nWhen we created the job, we created it,\nwe gave it some information.\n\n1182\n01:01:37,050 --> 01:01:38,880\nSo I'll just create a test job here.\n\n1183\n01:01:38,880 --> 01:01:44,400\nAnd under steps, when we added the step,\nI went with this, Transact SQL script.\n\n1184\n01:01:44,400 --> 01:01:48,010\nBut if you drop that down, there's\na lot of other stuff that's in here.\n\n1185\n01:01:48,010 --> 01:01:49,970\nLook at all these other\nthings that we can do.\n\n1186\n01:01:49,970 --> 01:01:51,660\nWe can run an ActiveX script,\n\n1187\n01:01:51,660 --> 01:01:56,180\nwe can do an operating system command,\nwe can launch another program, right?\n\n1188\n01:01:56,180 --> 01:01:59,680\nWe can call Visual Basic,\nwe can call all sorts of stuff.\n\n1189\n01:01:59,680 --> 01:02:02,410\nSky's the limit with what\nyou can do there, right?\n\n1190\n01:02:02,410 --> 01:02:04,910\nWe can call the power shell and\nrun power shell commands.\n\n1191\n01:02:04,910 --> 01:02:07,290\nAgain, sky's the limit once\nyou're in power shell.\n\n1192\n01:02:07,290 --> 01:02:11,540\nWe can do replication tasks, right, like\nreplicating the database to another site.\n\n1193\n01:02:11,540 --> 01:02:16,570\nYou can do SQL server analysis jobs and\nSQL server integration services package.\n\n1194\n01:02:16,570 --> 01:02:18,960\nNow, that's probably one\nof the most important ones.\n\n1195\n01:02:18,960 --> 01:02:20,668\nSSIS we haven't talked much about, and\n\n1196\n01:02:20,668 --> 01:02:23,040\nI'm gonna talk about it in\nthe last segment of the show.\n\n1197\n01:02:23,040 --> 01:02:27,685\nBut with it you can perform very complex\ndata import and export packages that can\n\n1198\n01:02:27,685 --> 01:02:32,189\ndo all sorts of crazy stuff to help you\nconnect to non-SQL systems, so very,\n\n1199\n01:02:32,189 --> 01:02:33,180\nvery powerful.\n\n1200\n01:02:35,000 --> 01:02:39,764\nWith Transact SQL I mentioned how\nthe script that you run is gonna run as\n\n1201\n01:02:39,764 --> 01:02:43,980\nthe person who owns the job,\nthat's what it does by default.\n\n1202\n01:02:45,100 --> 01:02:49,316\nIn Transact SQL you can override that,\nyou can override that in your script, but\n\n1203\n01:02:49,316 --> 01:02:52,740\nthe default is to run as whoever\nit is that's the owner of the job.\n\n1204\n01:02:52,740 --> 01:02:57,276\nAll of the other activities, though,\nall of these other ones, well,\n\n1205\n01:02:57,276 --> 01:02:59,860\nthey'll run as the owner of the job too.\n\n1206\n01:02:59,860 --> 01:03:03,355\nBut, I'm sorry they won't,\nI forgot my whole point here.\n\n1207\n01:03:03,355 --> 01:03:06,650\nThey run, notice this Run as,\nthey don't run as the owner of the job,\n\n1208\n01:03:06,650 --> 01:03:11,030\nthat's Transact SQL,\nthey run as the SQL Server Agent Account.\n\n1209\n01:03:11,030 --> 01:03:13,170\nNow that's good and bad.\n\n1210\n01:03:13,170 --> 01:03:16,610\nIt's good in that they've got\nan account they can run as.\n\n1211\n01:03:16,610 --> 01:03:21,010\nIt's bad in that the privileges\nare probably higher than they need.\n\n1212\n01:03:21,010 --> 01:03:24,750\nThat SQL server agent account has\na lot of access to the SQL server.\n\n1213\n01:03:24,750 --> 01:03:27,783\nIt can do a lot of stuff that might\nbe more then what you want to grant\n\n1214\n01:03:27,783 --> 01:03:28,400\naccess for.\n\n1215\n01:03:28,400 --> 01:03:30,576\nIf you have multiple servers involved,\n\n1216\n01:03:30,576 --> 01:03:33,400\nthat account might not have\nall the access it needs.\n\n1217\n01:03:33,400 --> 01:03:36,125\nSo this option here might be a problem.\n\n1218\n01:03:36,125 --> 01:03:40,064\nUnder Transact SQL, we don't worry about\nit, so we don't even have that option,\n\n1219\n01:03:40,064 --> 01:03:41,208\nwe can't drop it down.\n\n1220\n01:03:41,208 --> 01:03:45,792\nAnd in the SQL, we can override it by\nputting in various things, all right?\n\n1221\n01:03:45,792 --> 01:03:50,000\nBut for all of these other ones,\nwe've got the Run as box.\n\n1222\n01:03:50,000 --> 01:03:55,018\nAnd in here, we can specify that we\neither run as the agent service or\n\n1223\n01:03:55,018 --> 01:03:58,375\nwe run as a proxy set of credentials,\nright?\n\n1224\n01:03:58,375 --> 01:04:01,375\nAn alternate set of\ncredentials that we specify.\n\n1225\n01:04:01,375 --> 01:04:03,000\nNow what am I talking about?\n\n1226\n01:04:03,000 --> 01:04:07,534\nWell, if I go back to my main screen here,\nnotice down here\n\n1227\n01:04:07,534 --> 01:04:12,458\nunder SQL Server Agent that I've\ngot a folder called proxies.\n\n1228\n01:04:12,458 --> 01:04:13,208\nOkay?\n\n1229\n01:04:13,208 --> 01:04:15,520\nSo SQL Server Agent Proxies.\n\n1230\n01:04:15,520 --> 01:04:18,430\nIt's not talking about proxies\nlike a web browsing proxy.\n\n1231\n01:04:18,430 --> 01:04:20,910\nIt's talking about a credential proxy.\n\n1232\n01:04:20,910 --> 01:04:25,570\nYou run a command and\nit runs as somebody else.\n\n1233\n01:04:25,570 --> 01:04:31,170\nAnd I can come in here and define proxies\nfor each of these different systems.\n\n1234\n01:04:31,170 --> 01:04:34,680\nSo I might have an active X\nproxy credential set, or SSIS,\n\n1235\n01:04:34,680 --> 01:04:36,350\nor Powershell, or whatever.\n\n1236\n01:04:36,350 --> 01:04:37,070\nAll right?\n\n1237\n01:04:37,070 --> 01:04:40,320\nAnd you can define one proxy and\ntie it to all of these if you want,\n\n1238\n01:04:40,320 --> 01:04:42,000\nyou pick it when you create the proxy.\n\n1239\n01:04:42,000 --> 01:04:43,940\nSo let me just show you that real quick.\n\n1240\n01:04:43,940 --> 01:04:48,700\nI'm just gonna go here and choose to\ncreate a new proxy and it's gonna ask me\n\n1241\n01:04:48,700 --> 01:04:54,240\nwhat I wanna call it and what\nsubsystems it's gonna be available for.\n\n1242\n01:04:54,240 --> 01:04:57,840\nSo maybe I have something that I wanna\nrun as my particular user account or\n\n1243\n01:04:57,840 --> 01:04:59,920\nthe local administrator\naccount on this system.\n\n1244\n01:04:59,920 --> 01:05:01,030\nI'll do that one.\n\n1245\n01:05:01,030 --> 01:05:05,120\nSo I'll call this my\nLocal Administrator Account.\n\n1246\n01:05:05,120 --> 01:05:05,880\nAll right.\n\n1247\n01:05:05,880 --> 01:05:08,400\nAnd I'm going to check off to run for\nall of these.\n\n1248\n01:05:08,400 --> 01:05:10,240\nSo I can use it for\nany of these sub systems if I want.\n\n1249\n01:05:10,240 --> 01:05:14,710\nFor the credential name,\nif you browse, it'll let you pick.\n\n1250\n01:05:14,710 --> 01:05:19,488\nAnd you're normally picking these things\nlike your active directory or wherever but\n\n1251\n01:05:19,488 --> 01:05:22,020\nhere, it's defaulting to my credentials.\n\n1252\n01:05:22,020 --> 01:05:24,230\nNow I actually don't have any credentials.\n\n1253\n01:05:24,230 --> 01:05:25,740\nYeah, I don't have any\ncredentials right now.\n\n1254\n01:05:25,740 --> 01:05:28,590\nSo I need to go and\ncreate that before I go this next step.\n\n1255\n01:05:28,590 --> 01:05:29,560\nSo let me just cancel that.\n\n1256\n01:05:30,640 --> 01:05:35,360\nThe proxies are letting our jobs run on\nbehalf of a separate set of credentials.\n\n1257\n01:05:35,360 --> 01:05:39,751\nIf I go up here into my management folder,\n\n1258\n01:05:39,751 --> 01:05:45,400\nunder security, there we go,\nI've got credentials.\n\n1259\n01:05:45,400 --> 01:05:48,090\nNow those logins,\nthose are users on the server.\n\n1260\n01:05:48,090 --> 01:05:51,700\nBut credentials,\nthese are basically stored credentials.\n\n1261\n01:05:51,700 --> 01:05:54,620\nStored usernames and passwords that\nI can then use for various things.\n\n1262\n01:05:54,620 --> 01:05:57,020\nNow, that might sound dangerous,\nit is, right.\n\n1263\n01:05:57,020 --> 01:06:01,100\nYou want to be really careful when you\nstore usernames and passwords on a server\n\n1264\n01:06:01,100 --> 01:06:04,820\nlike this as a credential and so\nwe set who's allowed to use them.\n\n1265\n01:06:04,820 --> 01:06:06,750\nYou gotta be very careful with these.\n\n1266\n01:06:06,750 --> 01:06:10,180\nAnd you usually wanna use dedicated\nuser accounts for these activities.\n\n1267\n01:06:10,180 --> 01:06:12,550\nSo I'm gonna create a new credential here,\n\n1268\n01:06:12,550 --> 01:06:14,840\nwhich will be my local\nadministrator account.\n\n1269\n01:06:14,840 --> 01:06:20,640\nSo for the identity, I'll call it\nmy Local Administrator Account.\n\n1270\n01:06:20,640 --> 01:06:22,750\nAnd for the identity itself,\nI'll browse and\n\n1271\n01:06:22,750 --> 01:06:26,640\nhere I can pick from my\nactive directory or wherever.\n\n1272\n01:06:26,640 --> 01:06:28,430\nAnd I'm gonna my administrator account.\n\n1273\n01:06:31,100 --> 01:06:31,920\nAll right, there we go.\n\n1274\n01:06:33,610 --> 01:06:35,030\nAnd I'll set my password.\n\n1275\n01:06:35,030 --> 01:06:37,320\nSo here's the part where\nit's storing the password.\n\n1276\n01:06:37,320 --> 01:06:39,300\nNow, it does store it encrypted, and\n\n1277\n01:06:39,300 --> 01:06:42,000\nyou can even choose alternate encryption\nproviders if you've got them but\n\n1278\n01:06:42,000 --> 01:06:44,400\nby default,\nit uses the built in SQL encryption.\n\n1279\n01:06:44,400 --> 01:06:48,390\nSo it will store it securely, but again,\nyou do want to be careful with this.\n\n1280\n01:06:48,390 --> 01:06:50,870\nAll right, so I'm going to specify that,\nand I'll say okay.\n\n1281\n01:06:50,870 --> 01:06:56,770\nSo now, I've got my local administrator\naccounts credentials stored in the system.\n\n1282\n01:06:56,770 --> 01:07:00,330\nAnd now I can come down here and define\nit as a proxy so that my jobs can use it.\n\n1283\n01:07:00,330 --> 01:07:02,950\nNow what kinda job would need\na local administrator account?\n\n1284\n01:07:02,950 --> 01:07:05,530\nWell, maybe I wanna schedule some kind of\n\n1285\n01:07:05,530 --> 01:07:08,310\na file backup in\nthe operating system itself.\n\n1286\n01:07:08,310 --> 01:07:12,040\nSo I want Windows Server to\ndo a backup of the server.\n\n1287\n01:07:12,040 --> 01:07:14,840\nWell, if I use my local administrator\naccount, I know it has full access.\n\n1288\n01:07:14,840 --> 01:07:18,020\nBut what would be better is to create\na service account that's in the backup\n\n1289\n01:07:18,020 --> 01:07:19,730\noperators group and use that.\n\n1290\n01:07:19,730 --> 01:07:21,680\nSo we wouldn't normally\ngo local administrator,\n\n1291\n01:07:21,680 --> 01:07:23,140\nI'm just using it here as an example.\n\n1292\n01:07:24,948 --> 01:07:29,386\nSo I'll go and define that proxy again and\nthis time when I create a proxy called\n\n1293\n01:07:29,386 --> 01:07:33,960\nlocal administrator account, I'll be\nable to select from my credentials, and\n\n1294\n01:07:33,960 --> 01:07:36,000\nthis time I'll have a credential.\n\n1295\n01:07:37,150 --> 01:07:40,060\nSo if I hit browse I can\nfind it right there.\n\n1296\n01:07:40,060 --> 01:07:41,350\nThere's my credential that we defined.\n\n1297\n01:07:41,350 --> 01:07:43,780\nThat's the stored user name and password.\n\n1298\n01:07:43,780 --> 01:07:46,710\nAnd then I'm gonna say that I can\nuse that stored user name and\n\n1299\n01:07:46,710 --> 01:07:48,760\npassword for various things.\n\n1300\n01:07:48,760 --> 01:07:50,700\nAnd here's where I'd pick\nwhat I wanna use it for.\n\n1301\n01:07:50,700 --> 01:07:54,560\nMaybe I wanna use it for SSIS and\noperating system commands.\n\n1302\n01:07:54,560 --> 01:07:56,230\nSo I can call Windows server back ups.\n\n1303\n01:07:56,230 --> 01:07:59,790\nI would just pick and choose the ones\nwhere I might need to use them.\n\n1304\n01:07:59,790 --> 01:08:04,870\nAnd when we say okay,\nour proxy screen will update to reflect\n\n1305\n01:08:06,430 --> 01:08:08,510\nwhere we're able to use it.\n\n1306\n01:08:08,510 --> 01:08:11,580\nSo I'll see under ActiveX,\nI don't have any ActiveX properties.\n\n1307\n01:08:11,580 --> 01:08:17,330\nYou either run as the SQL server agent\nservice, or we don't run at all, right?\n\n1308\n01:08:17,330 --> 01:08:22,890\nBut under operating system, I can choose\nto run at the SQL server agent or\n\n1309\n01:08:22,890 --> 01:08:26,250\nI can run as a local administrator acount,\nmy choice now.\n\n1310\n01:08:26,250 --> 01:08:30,595\nSo when I go back to my jobs and\nI create that new job.\n\n1311\n01:08:30,595 --> 01:08:33,506\nAnd I go to add a step in, all right,\n\n1312\n01:08:33,506 --> 01:08:38,180\nwhat is going on in there, and\nI go to add that new step in.\n\n1313\n01:08:39,730 --> 01:08:43,500\nFor that step, I want it to be\nsomething other than Transact SQL,\n\n1314\n01:08:43,500 --> 01:08:48,270\ncause remember with Transact SQL I\ndon't get the run as stuff.\n\n1315\n01:08:48,270 --> 01:08:51,640\nSo I go in here, and I'll choose an\noperating system command, and I can pick\n\n1316\n01:08:51,640 --> 01:08:56,190\nbetween the SQL Server Agent Account,\nor the Local Administrator Account.\n\n1317\n01:08:56,190 --> 01:09:00,045\nBut if I choose ActiveX I don't have that\nadministrator account, so here's how we\n\n1318\n01:09:00,045 --> 01:09:03,471\ncan choose these alternate credentials\nto run for these other commands.\n\n1319\n01:09:05,117 --> 01:09:09,075\nThat's pretty important because you will\nuse those proxy accounts pretty frequently\n\n1320\n01:09:09,075 --> 01:09:12,480\nfor things like SSIS especially,\nwe'll talk about in the next segment.\n\n1321\n01:09:12,480 --> 01:09:16,370\nAll right, but once those are done,\nnow I can come in here and\n\n1322\n01:09:16,370 --> 01:09:18,250\nI can pick what it is I wanna do.\n\n1323\n01:09:18,250 --> 01:09:21,460\nI can tell it what to run as and\nthen in the command I can come in and\n\n1324\n01:09:21,460 --> 01:09:22,860\nspecify what I want to run.\n\n1325\n01:09:22,860 --> 01:09:32,710\nSo maybe I have a some kind of a batch\nfile or whatever that I wanna call.\n\n1326\n01:09:32,710 --> 01:09:34,400\nAnd it's gonna call that batch file,\n\n1327\n01:09:34,400 --> 01:09:36,380\nrunning it as the local\nadministrator account.\n\n1328\n01:09:36,380 --> 01:09:37,680\nAll right?\nNo I can go and schedule that.\n\n1329\n01:09:37,680 --> 01:09:40,890\nAnd tell it to run and\ndo whatever it is that it's gonna do.\n\n1330\n01:09:40,890 --> 01:09:42,200\nOh, I guess,\nprobably need to give it a name.\n\n1331\n01:09:45,840 --> 01:09:46,720\nThere we go.\n\n1332\n01:09:46,720 --> 01:09:49,170\nSo now I've got that, it's in place.\n\n1333\n01:09:49,170 --> 01:09:51,819\nAnd, gotta give that one a name, too.\n\n1334\n01:09:55,545 --> 01:09:58,690\nI'll just call this, run script, there.\n\n1335\n01:09:58,690 --> 01:10:01,640\nAll right, so\nnow I've got that nice little job defined.\n\n1336\n01:10:01,640 --> 01:10:05,250\nAnd it's going to run that\nunder that alternate account.\n\n1337\n01:10:05,250 --> 01:10:09,810\nSo proxies and credentials, the credential\nis the store user name and password.\n\n1338\n01:10:09,810 --> 01:10:13,710\nThe proxy is what allows a job\nto run as that credential.\n\n1339\n01:10:13,710 --> 01:10:16,600\nWe've got the two step process there\nto get that set up and created.\n\n1340\n01:10:18,260 --> 01:10:22,680\nAll right, well, that's a pretty good spot\nto stop because what I want to show you\n\n1341\n01:10:22,680 --> 01:10:28,510\nnext is how SQL server integration\nservices, SSIS leverages all of that.\n\n1342\n01:10:28,510 --> 01:10:29,070\nRight.\n\n1343\n01:10:29,070 --> 01:10:30,590\nSSIS is very, very powerful.\n\n1344\n01:10:30,590 --> 01:10:33,220\nDoes a lot of really cool stuff,\nso we need to take a look at it.\n\n1345\n01:10:33,220 --> 01:10:35,350\nThat's what we're going to take\na look at in the next segment.\n\n1346\n01:10:35,350 --> 01:10:36,410\nStay tuned.\n\n1347\n01:10:36,410 --> 01:10:39,925\nWe'll be back after this.\n\n1348\n01:10:39,925 --> 01:10:47,227\n[NOISE] All right, welcome back everybody.\n\n1349\n01:10:47,227 --> 01:10:50,530\nI wanna take a few minutes\nto talk about SSIS.\n\n1350\n01:10:50,530 --> 01:10:52,780\nThe SQL Server Integration Services.\n\n1351\n01:10:52,780 --> 01:10:56,460\nNow, technically, SSIS doesn't make up\n\n1352\n01:10:56,460 --> 01:11:00,580\neven a noticeable part of this exam,\nthe 7642.\n\n1353\n01:11:00,580 --> 01:11:03,650\nIt is covered on the 7643 exam, but\n\n1354\n01:11:03,650 --> 01:11:07,430\nI wanna talk about it here because it\nis such an important piece of doing\n\n1355\n01:11:07,430 --> 01:11:11,040\nproper database maintenance that it's\nsomething you are gonna encounter.\n\n1356\n01:11:11,040 --> 01:11:14,245\nSo SSIS is non ensolved by default.\n\n1357\n01:11:14,245 --> 01:11:17,145\nWhat it is,\nit's a whole framework on the back end of\n\n1358\n01:11:17,145 --> 01:11:20,555\nSQL that let's it interact\nwith non-SQL stuff.\n\n1359\n01:11:20,555 --> 01:11:25,965\nSo you might need to share data with\nan Oracle server, or with a FTP server.\n\n1360\n01:11:25,965 --> 01:11:30,475\nYou might need to import, a great example,\nwe used to have to import data\n\n1361\n01:11:30,475 --> 01:11:35,230\nwhere there was an excel spreadsheet that\nwas published on an FTP server once a day.\n\n1362\n01:11:35,230 --> 01:11:38,750\nAnd so once a day we had to\ndownload this Excel spreadsheet and\n\n1363\n01:11:38,750 --> 01:11:41,010\nimport it into a table inside of SQL.\n\n1364\n01:11:41,010 --> 01:11:44,480\nWell SSIS can do that, and\nit actually does it really, really easy.\n\n1365\n01:11:44,480 --> 01:11:48,087\nYou don't have to know a single bit\nof programming or scripting to do it,\n\n1366\n01:11:48,087 --> 01:11:51,519\nit has these automated components,\nthese pre built visual elements\n\n1367\n01:11:51,519 --> 01:11:54,792\nthat you can just drag and drop,\nand build the workflow you need.\n\n1368\n01:11:54,792 --> 01:11:55,958\nVery powerful.\n\n1369\n01:11:55,958 --> 01:12:01,050\nWell, if we want to setup a maintenance\nplan inside of SQL where it defragments\n\n1370\n01:12:01,050 --> 01:12:05,908\nour databases, and optimizes our indexes,\nand backs up our servers, and\n\n1371\n01:12:05,908 --> 01:12:10,792\nall of that, it actually creates what\nare called SSIS packages to do that.\n\n1372\n01:12:10,792 --> 01:12:12,007\nAn SSIS package,\n\n1373\n01:12:12,007 --> 01:12:16,940\njust a pre-compiled set of elements\nthat gives it a set of tasks to do.\n\n1374\n01:12:16,940 --> 01:12:18,010\nIt's a job.\n\n1375\n01:12:18,010 --> 01:12:21,840\nAnd so you use the SQL server\nagent to call those jobs, and\n\n1376\n01:12:21,840 --> 01:12:24,000\nrun those SSIS packages.\n\n1377\n01:12:24,000 --> 01:12:25,600\nSo I want to show you that process.\n\n1378\n01:12:25,600 --> 01:12:28,170\nJust saying it like that,\nit sounds really complex.\n\n1379\n01:12:28,170 --> 01:12:28,870\nIt's actually not that bad.\n\n1380\n01:12:31,510 --> 01:12:34,870\nRight now, I could go through and\nset up my management plan and\n\n1381\n01:12:34,870 --> 01:12:37,330\nget the server set up to manage itself.\n\n1382\n01:12:37,330 --> 01:12:39,410\nBut without SSIS, it's not gonna work.\n\n1383\n01:12:39,410 --> 01:12:42,710\nSo let's start there,\nwith getting SSIS installed.\n\n1384\n01:12:42,710 --> 01:12:45,330\nWell, step one we need to\npop our disc into the drive.\n\n1385\n01:12:45,330 --> 01:12:48,550\nI was kind of hoping I had left it there\nthe other day, apparently I didn't, but\n\n1386\n01:12:48,550 --> 01:12:51,119\nI've got it as an ISO, so\nI can just grab that real quick.\n\n1387\n01:12:52,652 --> 01:12:54,970\nAll right, so\nwe pop our DVD in the drive and\n\n1388\n01:12:54,970 --> 01:12:58,600\nwe re-run our setup program like\nwe were installing SQL again.\n\n1389\n01:12:58,600 --> 01:13:02,200\nIn fact, the options we choose here in\nthe beginning are the exact same as\n\n1390\n01:13:02,200 --> 01:13:03,532\ninstalling SQL.\n\n1391\n01:13:03,532 --> 01:13:07,656\nI could've done this back when we set up\nthe server, but I didn't think about it.\n\n1392\n01:13:07,656 --> 01:13:11,042\n[LAUGH] So, we'll add it here,\nafter the fact.\n\n1393\n01:13:11,042 --> 01:13:13,150\nI'm gonna go to installation, and\n\n1394\n01:13:13,150 --> 01:13:15,740\nI'm going to choose new SQL\nserver standalone install.\n\n1395\n01:13:15,740 --> 01:13:19,760\nNow I'm not actually installing a new SQL\nserver, but notice the other part here,\n\n1396\n01:13:19,760 --> 01:13:22,990\nadd features to an existing installation,\nthat's what I want.\n\n1397\n01:13:22,990 --> 01:13:24,060\nSo I'm gonna choose that option.\n\n1398\n01:13:25,270 --> 01:13:29,930\nNow, SSIS is not installed\non a per instance basis.\n\n1399\n01:13:29,930 --> 01:13:32,430\nIt's installed on a shared basis.\n\n1400\n01:13:32,430 --> 01:13:37,330\nSo when I install SSIS, it's enabled for\nall the instances on this server.\n\n1401\n01:13:37,330 --> 01:13:42,000\nSo as I go through, I need to make sure\nthat I don't choose a specific instance.\n\n1402\n01:13:42,000 --> 01:13:44,490\nI need to make sure I'm\nchoosing the whole server.\n\n1403\n01:13:44,490 --> 01:13:46,950\nSo we'll see that little\nvariation here in the wizard.\n\n1404\n01:13:46,950 --> 01:13:48,410\nIt's doing its prerequisite checks.\n\n1405\n01:13:48,410 --> 01:13:51,320\nI already know I'm gonna pass all\nthese cuz I've already installed SQL.\n\n1406\n01:13:51,320 --> 01:13:53,980\nSo for the most part I'm just\ngonna be clicking next, a bunch.\n\n1407\n01:13:53,980 --> 01:13:57,170\nAll right,\nit looks like it found the product update.\n\n1408\n01:13:57,170 --> 01:13:58,666\nI'm okay with that.\n\n1409\n01:13:58,666 --> 01:14:00,291\nAnd we'll hit next there.\n\n1410\n01:14:00,291 --> 01:14:04,560\nNow when we go to do the install,\nthere's actually two pieces of SSIS.\n\n1411\n01:14:04,560 --> 01:14:07,290\nThere's SSIS itself,\nthat's really all I need.\n\n1412\n01:14:07,290 --> 01:14:11,790\nI need the SSIS engine to be\nable to execute the packages.\n\n1413\n01:14:11,790 --> 01:14:15,410\nBut if I want to be able to create my own\npackages, if I want to be able to edit and\n\n1414\n01:14:15,410 --> 01:14:19,645\nmodify them, I need to install\nthe SQL Server Data Tools.\n\n1415\n01:14:19,645 --> 01:14:24,880\nNow Microsoft's recommendation is you\ninstall the SSIS engine on your server,\n\n1416\n01:14:24,880 --> 01:14:28,660\nyou install the SQL Server Data Tools\non your workstation.\n\n1417\n01:14:28,660 --> 01:14:32,140\nAnd you design your packages and\nall that stuff on your workstation, and\n\n1418\n01:14:32,140 --> 01:14:34,810\njust upload the packages to\nthe server when you're done with it.\n\n1419\n01:14:34,810 --> 01:14:38,240\nSo you don't actually need\nthe design tools on your server\n\n1420\n01:14:38,240 --> 01:14:40,320\nunless that's the only system you've got.\n\n1421\n01:14:40,320 --> 01:14:42,820\nIn my case, I'm gonna go ahead and\ninstall them on my server, but\n\n1422\n01:14:42,820 --> 01:14:45,520\nin a production environment I would\ninstall them on my workstation.\n\n1423\n01:14:47,530 --> 01:14:49,533\nAll right, so\nit's gonna ask me what I'm installing and\n\n1424\n01:14:49,533 --> 01:14:50,791\nI'm not doing a new installation.\n\n1425\n01:14:50,791 --> 01:14:53,610\nI'm adding features to\nan existing instance.\n\n1426\n01:14:53,610 --> 01:14:55,130\nAnd when I look at my instances here,\n\n1427\n01:14:55,130 --> 01:14:58,730\nit's got them listed,\nMicrosoft SQL Server and so on.\n\n1428\n01:14:58,730 --> 01:15:02,620\nWell, right here it's kind of forcing\nme to pick an instance, isn't it?\n\n1429\n01:15:02,620 --> 01:15:06,210\nBut if I look down here I'll see\nmy server, my other instance and\n\n1430\n01:15:06,210 --> 01:15:07,650\nShared Components.\n\n1431\n01:15:07,650 --> 01:15:10,980\nShared Components are what I want,\nbut you can't choose that here.\n\n1432\n01:15:10,980 --> 01:15:15,490\nSo I am gonna go ahead and\ntell it I'm adding features, but, or\n\n1433\n01:15:15,490 --> 01:15:16,750\nI'm sorry, wait a minute.\n\n1434\n01:15:16,750 --> 01:15:18,380\nI need to choose this one up here.\n\n1435\n01:15:18,380 --> 01:15:22,010\nI am adding a feature, but I'm not\nadding it to a particular instance.\n\n1436\n01:15:22,010 --> 01:15:24,320\nI'm adding it as a common component.\n\n1437\n01:15:24,320 --> 01:15:25,850\nAnd under Perform a New Installation,\n\n1438\n01:15:25,850 --> 01:15:29,620\nyou'll see down here,\nif you wanna install a new instance, or\n\n1439\n01:15:29,620 --> 01:15:33,040\nwant to install shared components,\nand that's exactly what I wanna do.\n\n1440\n01:15:33,040 --> 01:15:36,458\nSo I'm gonna choose that\nPerform a New Install.\n\n1441\n01:15:36,458 --> 01:15:40,370\nAll right, it'll ask me for\nmy product key again, I'll just hit Next.\n\n1442\n01:15:40,370 --> 01:15:43,500\nThe sign up for\nthe license agreement again.\n\n1443\n01:15:43,500 --> 01:15:44,833\nMy roles aren't changing.\n\n1444\n01:15:44,833 --> 01:15:47,840\nI'm doing a feature installation.\n\n1445\n01:15:47,840 --> 01:15:51,541\nAnd now's the screen that I really want,\nwhere I pick my features.\n\n1446\n01:15:51,541 --> 01:15:56,290\nNow on a server, what I want\nare the integration services themselves.\n\n1447\n01:15:56,290 --> 01:16:00,500\nSo I'll scroll down and find\nIntegration Services, and check that off.\n\n1448\n01:16:00,500 --> 01:16:02,730\nThat's what we want on our server.\n\n1449\n01:16:02,730 --> 01:16:07,220\nOn our workstation we want the SQL Server\nData Tools, which are just right above it.\n\n1450\n01:16:07,220 --> 01:16:08,730\nSQL Server Data Tools.\n\n1451\n01:16:08,730 --> 01:16:10,760\nI'm gonna install both on my server.\n\n1452\n01:16:10,760 --> 01:16:12,320\nIt's okay, but it's not really necessary.\n\n1453\n01:16:12,320 --> 01:16:13,900\nIdeally we'd run that on our workstation.\n\n1454\n01:16:15,314 --> 01:16:18,960\nAll right, so I just check those off,\nand now we just click Next a bunch.\n\n1455\n01:16:18,960 --> 01:16:20,750\nRight, it's got all\nthe information it needs.\n\n1456\n01:16:20,750 --> 01:16:23,750\nIt's already got SQL installed,\nso it doesn't need too much more.\n\n1457\n01:16:27,958 --> 01:16:28,960\nThere we go.\n\n1458\n01:16:28,960 --> 01:16:31,730\nSo it's got that done, and\nthat should be about all it needs.\n\n1459\n01:16:31,730 --> 01:16:35,840\nIt's checking my disk space requirements\nthere, checking my service.\n\n1460\n01:16:35,840 --> 01:16:37,950\nThe SQL server integration\nservice is gonna run.\n\n1461\n01:16:37,950 --> 01:16:40,000\nIt's going to create its own account.\n\n1462\n01:16:40,000 --> 01:16:41,760\nSo it's got that set to automatic start.\n\n1463\n01:16:41,760 --> 01:16:43,890\nI could change the security\nvalues there if I wanted.\n\n1464\n01:16:44,930 --> 01:16:47,290\nMy error reporting to Microsoft,\nif I want to do it.\n\n1465\n01:16:47,290 --> 01:16:49,333\nI'm not gonna do it here.\n\n1466\n01:16:49,333 --> 01:16:52,480\nAnd then, just check some final\nprerequisites, and it's ready to go.\n\n1467\n01:16:54,170 --> 01:16:56,050\nAll right, so I'll let that install.\n\n1468\n01:16:56,050 --> 01:16:58,350\nThe installation does\nactually take a little while.\n\n1469\n01:16:58,350 --> 01:17:01,250\nIt copies a lot of little files and\nso that takes some time.\n\n1470\n01:17:01,250 --> 01:17:02,810\nSo we'll let that run.\n\n1471\n01:17:02,810 --> 01:17:09,875\nBut while it's running, I'll jump back and\nshow you the job creation.\n\n1472\n01:17:09,875 --> 01:17:13,799\nInside of our SQL Management Studio,\nyou might have noticed,\n\n1473\n01:17:13,799 --> 01:17:18,625\nup under the Management folder there's\na folder called Maintenance Plans.\n\n1474\n01:17:18,625 --> 01:17:19,890\nWhat are those?\n\n1475\n01:17:19,890 --> 01:17:23,730\nWell, maintenance plans are a collection\nof SQL server agent jobs, and\n\n1476\n01:17:23,730 --> 01:17:26,940\nthey're actually agent jobs\nthat call SSIS packages.\n\n1477\n01:17:26,940 --> 01:17:31,250\nAnd those packages do all sorts of\nreally necessary stuff on your server.\n\n1478\n01:17:31,250 --> 01:17:34,510\nThings that you need to be doing\nonce a week, once a month,\n\n1479\n01:17:34,510 --> 01:17:38,791\nwhatever set interval it is you need\nbased on how rapidly your data changes.\n\n1480\n01:17:38,791 --> 01:17:41,427\nMicrosoft has made it really easy for\nus to do these.\n\n1481\n01:17:41,427 --> 01:17:43,876\nBasically they said everybody\nneeds these jobs, so\n\n1482\n01:17:43,876 --> 01:17:47,607\ninstead of having them define the jobs\nmanually we'll just create a nice little\n\n1483\n01:17:47,607 --> 01:17:49,458\nwizard here that creates them for you.\n\n1484\n01:17:49,458 --> 01:17:51,921\nAll you have to do is right-click\non Maintenance Plan and\n\n1485\n01:17:51,921 --> 01:17:54,075\nchoose New Maintenance Plan Wizard.\n\n1486\n01:17:54,075 --> 01:17:56,565\nAnd it'll walk you\nthrough all the different\n\n1487\n01:17:56,565 --> 01:17:59,245\nroutine maintenance activities\nthat you're gonna perform.\n\n1488\n01:17:59,245 --> 01:18:01,275\nAnd you'll see some examples there.\n\n1489\n01:18:01,275 --> 01:18:05,264\nCheck your database integrity, it's gonna\nlook for corruption in the database and\n\n1490\n01:18:05,264 --> 01:18:06,000\ntry and fix it.\n\n1491\n01:18:06,000 --> 01:18:09,336\nPerform index maintenance,\nwe haven't learned about indexes yet, but\n\n1492\n01:18:09,336 --> 01:18:11,920\nthose optimize how fast our queries run.\n\n1493\n01:18:11,920 --> 01:18:14,590\nUpdate database statistics,\nthe indexes and\n\n1494\n01:18:14,590 --> 01:18:18,500\nthe other execution plans that\nhappen are based on our statistics.\n\n1495\n01:18:18,500 --> 01:18:21,449\nIf the statistics aren't up-to-date,\nsometimes we can make bad decisions, so\n\n1496\n01:18:21,449 --> 01:18:22,700\nit'll update those.\n\n1497\n01:18:22,700 --> 01:18:27,330\nAnd then perform database backups, you\nneed to be doing routine backups on your\n\n1498\n01:18:27,330 --> 01:18:31,110\ndatabase, otherwise your transaction\nlogs will grow and grow and grow.\n\n1499\n01:18:31,110 --> 01:18:32,541\nSo we need to make sure\nthat we're doing those.\n\n1500\n01:18:32,541 --> 01:18:34,480\nSo these are some of the examples.\n\n1501\n01:18:34,480 --> 01:18:39,500\nIt actually does even more than that, but\nthose are the main examples it gives.\n\n1502\n01:18:39,500 --> 01:18:41,450\nAll right,\nnow I just need to give it a name.\n\n1503\n01:18:41,450 --> 01:18:48,520\nMaybe I'll call this my\nProducts Database Maintenance Plan.\n\n1504\n01:18:48,520 --> 01:18:51,740\nYou might have one database maintenance\nplan for your entire server, or\n\n1505\n01:18:51,740 --> 01:18:53,340\nyou might create separate ones for\n\n1506\n01:18:53,340 --> 01:18:56,510\neach database cuz different databases\nhave different needs, right?\n\n1507\n01:18:56,510 --> 01:18:59,010\nSo you can kinda pick and choose what\nit is that you're gonna be doing there.\n\n1508\n01:18:59,010 --> 01:19:02,541\nSo I'm going to go ahead and just\nchoose this for the products database.\n\n1509\n01:19:02,541 --> 01:19:06,310\nIt's gonna run as, and\nI can pick what it's gonna run as.\n\n1510\n01:19:06,310 --> 01:19:07,950\nIs it gonna run as the SQL server agent?\n\n1511\n01:19:07,950 --> 01:19:10,190\nOr do I want it to run as\nthe local administrator account?\n\n1512\n01:19:10,190 --> 01:19:12,870\nJust depends on what I'm\ntrying to achieve there.\n\n1513\n01:19:12,870 --> 01:19:15,600\nThen I get one of the more\nimportant choices.\n\n1514\n01:19:15,600 --> 01:19:19,750\nThe default is to create a single\nschedule for the entire plan.\n\n1515\n01:19:19,750 --> 01:19:21,946\nI'm gonna pick a ton of activities, and\n\n1516\n01:19:21,946 --> 01:19:26,030\nthe default is to run them one after\nthe other all starting at the same time.\n\n1517\n01:19:27,400 --> 01:19:28,450\nI might not want that.\n\n1518\n01:19:28,450 --> 01:19:30,910\nIf this is a big database,\nor a heavily-used database,\n\n1519\n01:19:30,910 --> 01:19:32,860\nI might want to spread things out more.\n\n1520\n01:19:32,860 --> 01:19:36,820\nSo I can choose to do separate\nschedules for each task.\n\n1521\n01:19:36,820 --> 01:19:41,783\nWhat this means is when it defines this\nis it going to be one step in a job, or\n\n1522\n01:19:41,783 --> 01:19:46,589\nis it going to be multiple steps in a job,\nbecause with multiple steps we\n\n1523\n01:19:46,589 --> 01:19:51,720\ncan define multiple schedules and so\nit's asking how we wanna do that.\n\n1524\n01:19:51,720 --> 01:19:53,334\nIf you chose to do a single schedule,\n\n1525\n01:19:53,334 --> 01:19:56,625\nyou've got the option right here to\nset what that schedule's going to be.\n\n1526\n01:19:56,625 --> 01:20:00,849\nIf you chose to do separate schedules,\nEach step along the way,\n\n1527\n01:20:00,849 --> 01:20:06,370\nI'll see an option where I can pick that,\nand I'm gonna go with that option.\n\n1528\n01:20:06,370 --> 01:20:09,190\nNow I can pick what it is I want to do,\nand look at all of these.\n\n1529\n01:20:09,190 --> 01:20:11,330\nWe've got check database integrity.\n\n1530\n01:20:11,330 --> 01:20:12,560\nYou definitely want to do that.\n\n1531\n01:20:12,560 --> 01:20:15,860\nNow if it's a read only database, you\nprobably don't need to worry about it, but\n\n1532\n01:20:15,860 --> 01:20:18,030\nif it's a database that changes a lot,\n\n1533\n01:20:18,030 --> 01:20:22,340\nyou need to make sure that there's not any\ncorruption introduced into the database.\n\n1534\n01:20:22,340 --> 01:20:23,710\nMaybe you wanna shrink it.\n\n1535\n01:20:23,710 --> 01:20:27,990\nIf you've just deleted a bunch of data,\nyou wanna try and reclaim that space.\n\n1536\n01:20:27,990 --> 01:20:32,230\nMaybe you wanna reorganize, or rebuild\nthe indexes to try and optimize them.\n\n1537\n01:20:32,230 --> 01:20:35,330\nWe'll talk about that more\nin the index episodes.\n\n1538\n01:20:35,330 --> 01:20:37,860\nUpdating statistics is\nsomething you should be doing.\n\n1539\n01:20:37,860 --> 01:20:39,518\nAgain if it's a changing database.\n\n1540\n01:20:39,518 --> 01:20:40,500\nIf it's read-only,\n\n1541\n01:20:40,500 --> 01:20:43,850\nthe statistics never change, so\nnot anything you need to worry about.\n\n1542\n01:20:43,850 --> 01:20:45,960\nMaybe we wanna clean up our history,\nright?\n\n1543\n01:20:45,960 --> 01:20:48,200\nOur processes and\nall that are creating logs.\n\n1544\n01:20:48,200 --> 01:20:49,740\nWe might wanna clean that up.\n\n1545\n01:20:49,740 --> 01:20:53,060\nWe might wanna just execute some\nother SQL server agent job.\n\n1546\n01:20:53,060 --> 01:20:54,490\nYou can choose that.\n\n1547\n01:20:54,490 --> 01:20:55,700\nWe can do our backups.\n\n1548\n01:20:55,700 --> 01:20:58,090\nFull, differential, and transaction log.\n\n1549\n01:20:58,090 --> 01:21:01,190\nAnd we can do our maintenance cleanup\ntask, which just does our kind of\n\n1550\n01:21:01,190 --> 01:21:04,320\nfinal things for cleaning up logs and\nother leftover files.\n\n1551\n01:21:04,320 --> 01:21:06,250\nI'm going to choose some\nof the common ones.\n\n1552\n01:21:06,250 --> 01:21:11,140\nWe're going to talk about some of these\nother ones in other episodes, all right.\n\n1553\n01:21:11,140 --> 01:21:13,870\nSo now it just gives me a summary of\nthe ones that we're going to do, and\n\n1554\n01:21:13,870 --> 01:21:17,460\ngives me the opportunity to change\nthe order they're going to execute in.\n\n1555\n01:21:17,460 --> 01:21:20,360\nNow these guys,\nI really don't have a lot of control, so\n\n1556\n01:21:20,360 --> 01:21:21,950\nI can't move them up or down.\n\n1557\n01:21:21,950 --> 01:21:25,040\nBut if I had added in some of\nthe other activities like backups,\n\n1558\n01:21:25,040 --> 01:21:28,760\nobviously we want backups to happen\nafter a Database Integrity Check.\n\n1559\n01:21:28,760 --> 01:21:30,040\nMaybe you want it to happen before.\n\n1560\n01:21:30,040 --> 01:21:32,460\nYou do a backup before you try and\nremove corruption.\n\n1561\n01:21:32,460 --> 01:21:33,930\nIt's up to you.\nYou'd be able to shift that around.\n\n1562\n01:21:36,570 --> 01:21:37,280\nAll right.\n\n1563\n01:21:37,280 --> 01:21:39,690\nSo here's my database integrity check, and\n\n1564\n01:21:39,690 --> 01:21:42,240\non here I can pick what\ndatabase I want to check.\n\n1565\n01:21:42,240 --> 01:21:46,590\nI can do all of them, or\nI want to do just the products database.\n\n1566\n01:21:46,590 --> 01:21:48,080\nThat's the only one that I'm gonna do.\n\n1567\n01:21:51,890 --> 01:21:52,530\nAll right.\n\n1568\n01:21:52,530 --> 01:21:55,920\nAnd then I can set the schedule,\nif I want it to run at a particular time.\n\n1569\n01:21:55,920 --> 01:21:56,470\nI'll leave it be.\n\n1570\n01:21:58,340 --> 01:21:59,660\nNow my update statistics,\n\n1571\n01:21:59,660 --> 01:22:02,510\nagain I'll choose just do\nthe product's database this time.\n\n1572\n01:22:02,510 --> 01:22:04,570\nAnd you can choose more\nthan one if you wanted.\n\n1573\n01:22:04,570 --> 01:22:06,310\nI'll just do that single one.\n\n1574\n01:22:06,310 --> 01:22:09,710\nAll right, I'll do a full scan, and\nI'll leave that one in manual too.\n\n1575\n01:22:11,570 --> 01:22:13,720\nthen my history cleanup, right?\n\n1576\n01:22:13,720 --> 01:22:15,920\nDo I want to clean up my backup and\nrestore history,\n\n1577\n01:22:15,920 --> 01:22:19,050\nmy SQL server agent job history,\nmaintenance plan history?\n\n1578\n01:22:19,050 --> 01:22:22,170\nYou pick and chose, and\nhow old you want the data to be removed.\n\n1579\n01:22:22,170 --> 01:22:24,600\nSo I'm going to I'm going to say anything\nolder than four weeks, go ahead and\n\n1580\n01:22:24,600 --> 01:22:25,990\nwipe it out, I don't need to save it.\n\n1581\n01:22:28,970 --> 01:22:33,560\nAll right, on my last screen here, this is\nkinda a big one, this is the task itself.\n\n1582\n01:22:33,560 --> 01:22:35,860\nIt's asking what type of\nstuff I wanna delete,\n\n1583\n01:22:35,860 --> 01:22:40,330\nas far as backup files, where\nthe files are being stored, and so on.\n\n1584\n01:22:40,330 --> 01:22:44,510\nIf I'm doing backups to my E drive,\nE:\\backups.\n\n1585\n01:22:44,510 --> 01:22:50,780\nI can tell it that, I can say I wanna\nlook in this folder, E:\\ Backups,\n\n1586\n01:22:50,780 --> 01:22:55,300\nand I want to look for\nfiles that are star dot B-A-K.\n\n1587\n01:22:55,300 --> 01:22:57,730\nAnything that ends in B-A-K.\n\n1588\n01:22:57,730 --> 01:23:00,390\nThen I can say delete files\nolder than four weeks.\n\n1589\n01:23:00,390 --> 01:23:04,200\nAlright, so any backup files that are in\nthere that are older than four weeks,\n\n1590\n01:23:04,200 --> 01:23:05,300\ngo ahead and wipe them out.\n\n1591\n01:23:05,300 --> 01:23:09,030\nOr maybe I wanna go six months, right,\nso I can go in here and pick six months.\n\n1592\n01:23:09,030 --> 01:23:11,600\nAny backups older than six months,\nwipe them out.\n\n1593\n01:23:11,600 --> 01:23:13,760\nThat way I can keep doing new backups, but\n\n1594\n01:23:13,760 --> 01:23:15,660\nI'm not having a bunch of\nold ones sitting around.\n\n1595\n01:23:15,660 --> 01:23:19,430\nAll right.\n\n1596\n01:23:19,430 --> 01:23:20,520\nThat's about all it needs.\n\n1597\n01:23:20,520 --> 01:23:21,720\nWe can then do our report.\n\n1598\n01:23:21,720 --> 01:23:23,567\nWe can write a report or we can e-mail it.\n\n1599\n01:23:23,567 --> 01:23:25,390\nI'll e-mail it to myself.\n\n1600\n01:23:25,390 --> 01:23:26,200\nWhoops.\n\n1601\n01:23:26,200 --> 01:23:26,950\nSo I can get that.\n\n1602\n01:23:28,250 --> 01:23:30,030\nAnd then I get my summary.\n\n1603\n01:23:30,030 --> 01:23:34,920\nAll right, when it's done, it's going\nto create all of those jobs, and so\n\n1604\n01:23:34,920 --> 01:23:39,150\nit's creating a bunch of jobs, or a bunch\nof steps to be able to handle that.\n\n1605\n01:23:39,150 --> 01:23:40,560\nIt's actually gonna be\nwrapped up in one job.\n\n1606\n01:23:40,560 --> 01:23:42,760\nWe'll see that over here.\n\n1607\n01:23:42,760 --> 01:23:46,260\nOh no it actually did more\nthan one job didn't it.\n\n1608\n01:23:46,260 --> 01:23:49,030\nOh that's right I chose\nthe multiple schedules.\n\n1609\n01:23:49,030 --> 01:23:52,750\nSo you can see here under my Jobs folder,\nI now have a lot of new stuff.\n\n1610\n01:23:52,750 --> 01:23:57,630\nSee how I've got this products database\nmaintenance plan, subplan one, two,\n\n1611\n01:23:57,630 --> 01:23:58,690\nthree, and four.\n\n1612\n01:23:58,690 --> 01:24:02,440\nSince I did a separate schedule,\nit broke them out into separate jobs.\n\n1613\n01:24:02,440 --> 01:24:03,830\nANd so now they're kind of separated.\n\n1614\n01:24:04,970 --> 01:24:07,760\nThe names aren't necessarily intuitive.\n\n1615\n01:24:07,760 --> 01:24:09,940\nI don't know what subplan one does.\n\n1616\n01:24:09,940 --> 01:24:13,570\nWell, if I pull up it's properties,\nand I go and I can look,\n\n1617\n01:24:13,570 --> 01:24:16,220\nit says it's database maintenance and\nthat's about it.\n\n1618\n01:24:16,220 --> 01:24:20,220\nAnd if I go into steps,\nI can see the step is Subplan 1.\n\n1619\n01:24:20,220 --> 01:24:23,270\nThat wasn't very intuitive either.\n\n1620\n01:24:23,270 --> 01:24:25,500\nAnd if I edit that step,\n\n1621\n01:24:25,500 --> 01:24:30,800\nnow I can see that it's calling a SQL\nserver integration services package.\n\n1622\n01:24:30,800 --> 01:24:33,910\nAnd down here I can see the package\nname that it's calling.\n\n1623\n01:24:33,910 --> 01:24:35,660\nAgain, still not intuitive.\n\n1624\n01:24:35,660 --> 01:24:39,960\nIt created these SSIS packages that\nare gonna be doing the work for me.\n\n1625\n01:24:39,960 --> 01:24:41,180\nI don't see it.\n\n1626\n01:24:41,180 --> 01:24:41,820\nRight?\nSo\n\n1627\n01:24:41,820 --> 01:24:43,790\nthat is one of the negatives of\ndoing this maintenance plan.\n\n1628\n01:24:43,790 --> 01:24:47,440\nI know it's doing the work I want,\nbut it's doing it all through SSIS.\n\n1629\n01:24:47,440 --> 01:24:50,160\nAnd that's why we need SSIS installed,\nright.\n\n1630\n01:24:50,160 --> 01:24:51,700\nOtherwise these are just gonna fail.\n\n1631\n01:24:51,700 --> 01:24:54,999\nIt'll make the packages, but\nthey won't run cuz SSIS isn't there.\n\n1632\n01:24:56,090 --> 01:24:58,750\nIf I want to actually look\nat the packages though,\n\n1633\n01:24:58,750 --> 01:25:01,520\nthat's where I need\nthe SQL Server Data Tools.\n\n1634\n01:25:01,520 --> 01:25:05,770\nThey'll let me open the packages,\nedit them, and take a look at them.\n\n1635\n01:25:05,770 --> 01:25:07,530\nOn this exam, they don't get into that.\n\n1636\n01:25:07,530 --> 01:25:09,760\nThey don't get into editing\nthe packages and so on.\n\n1637\n01:25:09,760 --> 01:25:11,940\nBut I do want to show you guys\nan example of that, just so\n\n1638\n01:25:11,940 --> 01:25:14,548\nyou can get an idea of the power of SSIS.\n\n1639\n01:25:14,548 --> 01:25:16,911\nAll right.\n\n1640\n01:25:16,911 --> 01:25:18,550\nBut now I've got it.\n\n1641\n01:25:18,550 --> 01:25:20,350\nI can run those.\nLet me see how my install is doing.\n\n1642\n01:25:20,350 --> 01:25:21,610\nShould be done.\n\n1643\n01:25:21,610 --> 01:25:23,730\nYep.\nLooks like my install is done.\n\n1644\n01:25:23,730 --> 01:25:28,410\nSo now I've got SSIS up and\nrunning, and should be happy.\n\n1645\n01:25:28,410 --> 01:25:29,160\nAll right.\n\n1646\n01:25:29,160 --> 01:25:32,180\nNow, inside of the SQL Management Studio,\n\n1647\n01:25:32,180 --> 01:25:36,740\nyou can look at SSIS but\nyou can't really work with it.\n\n1648\n01:25:36,740 --> 01:25:38,590\nIf I go up here to connect.\n\n1649\n01:25:38,590 --> 01:25:40,560\nI've been connecting to database engines.\n\n1650\n01:25:40,560 --> 01:25:42,900\nThat's what we've been working\nwith in this show, but\n\n1651\n01:25:42,900 --> 01:25:45,930\nyou'll see where I can connect\nto integration services also.\n\n1652\n01:25:45,930 --> 01:25:48,520\nIf I connect to my local server here,\n\n1653\n01:25:50,960 --> 01:25:54,060\nwhich wasn't in the drop down box,\nso my service might not be started.\n\n1654\n01:25:55,680 --> 01:25:56,900\nNope, it's started.\n\n1655\n01:25:56,900 --> 01:26:00,120\nSo if I connect I can see my running\npackages, the packages running right now,\n\n1656\n01:26:00,120 --> 01:26:02,330\nand my stored packages.\n\n1657\n01:26:02,330 --> 01:26:06,520\nWhich are ones that are just kind of\nwaiting to run, not actually running yet,\n\n1658\n01:26:06,520 --> 01:26:09,310\nand if you start kind of expanding and\nbrowsing around in these,\n\n1659\n01:26:09,310 --> 01:26:10,550\nyou can see some of them.\n\n1660\n01:26:10,550 --> 01:26:15,450\nHere's my maintenance plan, and here's\nmy products database maintenance plan.\n\n1661\n01:26:15,450 --> 01:26:18,350\nRight there, but\nnotice there's no like, Edit button.\n\n1662\n01:26:18,350 --> 01:26:21,650\nThere's Import, Export,\nUpgrade, Run, right?\n\n1663\n01:26:21,650 --> 01:26:23,040\nBut no Edit.\n\n1664\n01:26:23,040 --> 01:26:29,500\nThe SQL Server Management Studio lets you\nsee the SSIS stuff, but not work with it.\n\n1665\n01:26:29,500 --> 01:26:32,520\nThe SQL Server Data Tools, they're\nthe ones that let you work with it.\n\n1666\n01:26:32,520 --> 01:26:36,360\nAnd we installed those, so\nlet me let me just find those.\n\n1667\n01:26:36,360 --> 01:26:36,860\nHere we go.\n\n1668\n01:26:39,290 --> 01:26:41,990\nAnd when it launches,\nit's really kind of a generic system.\n\n1669\n01:26:41,990 --> 01:26:44,330\nSee how it says Visual Studio 2010 Shell?\n\n1670\n01:26:44,330 --> 01:26:46,430\nWe're really going to Visual Studio here.\n\n1671\n01:26:46,430 --> 01:26:48,700\nI'll just tell it that I'm\ndoing business intelligence.\n\n1672\n01:26:48,700 --> 01:26:50,930\nIt doesn't really matter,\nbecause I'm not doing any of these.\n\n1673\n01:26:54,100 --> 01:26:56,680\nAnd then when I get in there,\nI'll be able to not just\n\n1674\n01:26:56,680 --> 01:26:59,780\nedit the SSIS packages I already have,\nbut create my own.\n\n1675\n01:26:59,780 --> 01:27:01,504\nWe can create ones that do\nall sorts of cool stuff.\n\n1676\n01:27:03,942 --> 01:27:04,442\nHere we go.\n\n1677\n01:27:05,560 --> 01:27:08,750\nSo once we're in here,\nwe can do things like open up Project, and\n\n1678\n01:27:08,750 --> 01:27:11,120\nyou can browse and\nfind a project file if you've defined one.\n\n1679\n01:27:11,120 --> 01:27:11,960\nWe haven't.\n\n1680\n01:27:11,960 --> 01:27:16,630\nSo I'm going to do a new project, and I'll\ntell it that this is Integration Services.\n\n1681\n01:27:16,630 --> 01:27:19,138\nSo I'm going to tell it that I'm working\nwith an Integration Services project.\n\n1682\n01:27:25,036 --> 01:27:26,380\nThere we go.\n\n1683\n01:27:26,380 --> 01:27:31,020\nAnd from here, I could open up one of\nthose database management plans, and\n\n1684\n01:27:31,020 --> 01:27:32,200\nfind one of those packages and\n\n1685\n01:27:32,200 --> 01:27:34,830\nstart to work with it, or\nwe could kind of create our own.\n\n1686\n01:27:34,830 --> 01:27:39,210\nAnd let me just give you kind of a quick,\njust a high level tour of how this works.\n\n1687\n01:27:39,210 --> 01:27:46,305\nIf you go onto study for the 70 dash 463\nexam, the more developer centric exam.\n\n1688\n01:27:46,305 --> 01:27:49,958\nThey go into how to work with this to do\na lot of stuff, but just real simple.\n\n1689\n01:27:49,958 --> 01:27:53,833\nYou have what's called a control flow and\na data flow.\n\n1690\n01:27:53,833 --> 01:27:57,865\nThe control flow is basically\nthe overall steps of the job And\n\n1691\n01:27:57,865 --> 01:28:00,958\nthen the data flow is how\nwe work with the data.\n\n1692\n01:28:00,958 --> 01:28:04,333\nSo most of our jobs are gonna\nhave a control flow, and\n\n1693\n01:28:04,333 --> 01:28:06,958\nthen they'll bring in a data flow task.\n\n1694\n01:28:06,958 --> 01:28:09,210\nSo I'm just gonna drag that and\ndrop it over here.\n\n1695\n01:28:09,210 --> 01:28:15,167\nAnd maybe this one will be,\nlike, me importing some data.\n\n1696\n01:28:15,167 --> 01:28:17,070\nAnd so I'll go to my data flow now.\n\n1697\n01:28:17,070 --> 01:28:19,260\nAnd here, I'll have a source assistant.\n\n1698\n01:28:19,260 --> 01:28:21,430\nThat's where I get the source of my data.\n\n1699\n01:28:21,430 --> 01:28:27,490\nSo maybe I am bringing in\nsomething from a flat file.\n\n1700\n01:28:27,490 --> 01:28:29,070\nAnd so I'll just come in here and\npick that.\n\n1701\n01:28:30,070 --> 01:28:31,890\nWell it's got to think for a minute here.\n\n1702\n01:28:31,890 --> 01:28:37,290\nSo maybe I have a file that's c:/test.csv\nand I want to import that into my system.\n\n1703\n01:28:37,290 --> 01:28:39,320\nSo I'd specify the CSV information here,\n\n1704\n01:28:39,320 --> 01:28:43,270\nhow it was set up, what columns were\ndefined and other advanced settings.\n\n1705\n01:28:43,270 --> 01:28:45,750\nI need at least one column for this to\nwork so I'll just create a fake one.\n\n1706\n01:28:48,870 --> 01:28:51,630\nAll right, so\nI've got this flat file source.\n\n1707\n01:28:51,630 --> 01:28:56,470\nThe destination, well, I probably want\nto drop this into my actual SQL server\n\n1708\n01:28:56,470 --> 01:29:01,240\ndatabase so\nI'll create a connection to my server.\n\n1709\n01:29:02,560 --> 01:29:04,980\nAnd maybe I'm importing new products or\nsomething like that.\n\n1710\n01:29:06,310 --> 01:29:07,310\nI should ofd just type the name.\n\n1711\n01:29:07,310 --> 01:29:07,930\nNow it's searching.\n\n1712\n01:29:07,930 --> 01:29:08,730\nThere we go.\n\n1713\n01:29:11,770 --> 01:29:14,250\nAll right, so I'm gonna import\ninto my products database.\n\n1714\n01:29:18,950 --> 01:29:19,900\nAll right.\n\n1715\n01:29:19,900 --> 01:29:20,950\nAnd when I import the CSV,\n\n1716\n01:29:20,950 --> 01:29:23,090\nthere's probably some stuff\nthat's not quite right.\n\n1717\n01:29:23,090 --> 01:29:25,670\nSo I probably need to get in there and\ndo stuff, like splitting data,\n\n1718\n01:29:25,670 --> 01:29:28,290\nconverting data, deriving columns.\n\n1719\n01:29:28,290 --> 01:29:31,490\nAll of these different things that\nI might need to do to manipulate\n\n1720\n01:29:31,490 --> 01:29:32,990\nhow the data works.\n\n1721\n01:29:32,990 --> 01:29:34,250\nAnd then you just create your workflow.\n\n1722\n01:29:34,250 --> 01:29:35,540\nYou drag these little arrows.\n\n1723\n01:29:36,880 --> 01:29:38,870\nAnd you'll normally see a blue and\na red arrow.\n\n1724\n01:29:38,870 --> 01:29:43,470\nThe blue arrow is saying if\nthe step was successful, do this.\n\n1725\n01:29:43,470 --> 01:29:46,980\nThe red arrow is saying if the step fails,\ndo this other action.\n\n1726\n01:29:46,980 --> 01:29:51,710\nSo if I can't access the flat file source\nand I have a failure, over here I can find\n\n1727\n01:29:51,710 --> 01:29:57,930\nan activity to do something like cause\nan alert, or something like that.\n\n1728\n01:29:57,930 --> 01:30:00,920\nA script component to send an email or\nwhatever.\n\n1729\n01:30:00,920 --> 01:30:06,610\nSo I might come in and\ndesignate some script component.\n\n1730\n01:30:06,610 --> 01:30:11,408\nAnd so now, if for some reason it\nfails to access the file source,\n\n1731\n01:30:11,408 --> 01:30:13,510\ngo ahead and run the script.\n\n1732\n01:30:13,510 --> 01:30:16,830\nIf it accesses it fine, move forward and\ndo the data conversion, and\n\n1733\n01:30:16,830 --> 01:30:19,861\nthen move forward and do that,\nright, or if any of these fail,\n\n1734\n01:30:19,861 --> 01:30:21,430\nmaybe we just keep coming back.\n\n1735\n01:30:21,430 --> 01:30:22,760\nOh, it's gonna be mad at me there..\n\n1736\n01:30:22,760 --> 01:30:24,370\nBut basically we just define it.\n\n1737\n01:30:24,370 --> 01:30:28,189\nAnd you see where I don't need programming\nskills to do this, I'm just filling\n\n1738\n01:30:28,189 --> 01:30:31,270\nit out here in the GUI, it makes\nthe package for me and we save it.\n\n1739\n01:30:31,270 --> 01:30:35,860\nNow, SSIS can load full Visual Studio\nproducts though, or projects.\n\n1740\n01:30:35,860 --> 01:30:41,160\nSo you can create a C# or Visual Basic\nprogram that SSIS interacts with.\n\n1741\n01:30:41,160 --> 01:30:42,610\nIt can absolutely do that.\n\n1742\n01:30:42,610 --> 01:30:47,050\nBut, for us as system admins and\nDBAs, we're not normally developers.\n\n1743\n01:30:47,050 --> 01:30:50,340\nSo we don't need that skill\nset to come in and do this.\n\n1744\n01:30:50,340 --> 01:30:52,070\nAnd that was all just one data flow.\n\n1745\n01:30:52,070 --> 01:30:52,650\nRight?\n\n1746\n01:30:52,650 --> 01:30:54,910\nI could then add more data flows to it.\n\n1747\n01:30:54,910 --> 01:30:57,330\nAnd you can bring in data\nfrom all sorts of places.\n\n1748\n01:30:57,330 --> 01:30:59,300\nLike here I've got an FTP task.\n\n1749\n01:30:59,300 --> 01:31:04,010\nMaybe that CSV file I was talking about\nactually comes from an FTP server.\n\n1750\n01:31:04,010 --> 01:31:08,420\nSo I could come in and create this task\nand tell it, reach out to a server.\n\n1751\n01:31:08,420 --> 01:31:09,880\nGet this file.\n\n1752\n01:31:09,880 --> 01:31:13,840\nAnd once you've got the file,\nthen go to the data flow task.\n\n1753\n01:31:13,840 --> 01:31:18,440\nAnd then the data flow task, it loads\nthat flat file and performs that action.\n\n1754\n01:31:18,440 --> 01:31:19,810\nThat's the power of SSIS.\n\n1755\n01:31:19,810 --> 01:31:22,250\nThat's what it can do,\ntons of stuff in there.\n\n1756\n01:31:22,250 --> 01:31:25,820\nThose database management plans,\nthey're SSIS packages.\n\n1757\n01:31:25,820 --> 01:31:31,510\nAnd then back in our Management Studio,\nwhen it creates the SQL server agent jobs,\n\n1758\n01:31:31,510 --> 01:31:35,930\nthose jobs are just launching\nthose SSIS packages.\n\n1759\n01:31:35,930 --> 01:31:40,130\nSo that's how all this ties together, and\nwhile the exam doesn't necessarily hit it,\n\n1760\n01:31:40,130 --> 01:31:43,560\nthis particular exam doesn't, I wanted to\nshow you guys that because it is tied to\n\n1761\n01:31:43,560 --> 01:31:46,440\nthe sequel server agent and it is\nsomething you may bump into in real life.\n\n1762\n01:31:47,820 --> 01:31:48,692\nAll right.\n\n1763\n01:31:48,692 --> 01:31:53,290\nWell, I spent about 20\nminutes talking about SSIS.\n\n1764\n01:31:53,290 --> 01:31:55,930\nI'm a Microsoft certified trainer and\n\n1765\n01:31:55,930 --> 01:31:59,200\nthere's a course that I teach\nthat's a five day SSIS course.\n\n1766\n01:31:59,200 --> 01:32:02,260\nSo there's a ton of information\nthat's out there on it.\n\n1767\n01:32:02,260 --> 01:32:05,040\nBut for this exam, that's more than\nenough for what we need to know.\n\n1768\n01:32:06,900 --> 01:32:07,750\nAll right.\n\n1769\n01:32:07,750 --> 01:32:10,510\nThat pretty much wraps\nup the SQL server agent.\n\n1770\n01:32:10,510 --> 01:32:14,600\nWe tell it what to do, we tell it when we\nwant to happen, and it does it, right?\n\n1771\n01:32:14,600 --> 01:32:18,020\nIt's our extra assistant in\nthe office that works 24 hours a day,\n\n1772\n01:32:18,020 --> 01:32:20,700\nseven days a week, great resource to use,\ndefinitely helps you out.\n\n1773\n01:32:20,700 --> 01:32:24,640\nAll right, well that's a good spot for\nus to stop this episode,\n\n1774\n01:32:24,640 --> 01:32:27,680\nI think we've covered all the automation\nstuff that we need for this one.\n\n1775\n01:32:27,680 --> 01:32:30,280\nWe did glance over things\nlike doing backups,\n\n1776\n01:32:30,280 --> 01:32:33,300\nright, not that those aren't important,\nthey're very important.\n\n1777\n01:32:33,300 --> 01:32:35,490\nBut we're gonna have\na special show just for that.\n\n1778\n01:32:35,490 --> 01:32:37,450\nAnd I know security was\nanother one we mentioned.\n\n1779\n01:32:37,450 --> 01:32:40,500\nUser accounts or credentials, so we're\ngonna tackle that in another show too.\n\n1780\n01:32:40,500 --> 01:32:44,000\nSo definitely stay tuned for those\nepisodes that are coming down the road.\n\n1781\n01:32:44,000 --> 01:32:47,885\nAll right well, let me remind you guys\nif you have questions on any of this,\n\n1782\n01:32:47,885 --> 01:32:48,820\nfeel free to ask.\n\n1783\n01:32:48,820 --> 01:32:52,060\nLive during the show you\ncan go to itpro.tv/live.\n\n1784\n01:32:52,060 --> 01:32:54,160\nYou'll see the chat room\nright beneath the video.\n\n1785\n01:32:54,160 --> 01:32:55,440\nPost your questions there.\n\n1786\n01:32:55,440 --> 01:32:56,920\nWe monitor and answer during the show.\n\n1787\n01:32:56,920 --> 01:33:00,800\nIf you have questions after the show\nmake use of our Q & A forums.\n\n1788\n01:33:00,800 --> 01:33:02,370\nYou'll see that link at\nthe top of every page.\n\n1789\n01:33:02,370 --> 01:33:02,900\nIt says Q & A.\n\n1790\n01:33:02,900 --> 01:33:06,400\nIt'll take you in the forums and\nyou can post your questions there.\n\n1791\n01:33:06,400 --> 01:33:07,620\nWe monitor and answer.\n\n1792\n01:33:07,620 --> 01:33:08,420\nRight.\nWe want to make sure you\n\n1793\n01:33:08,420 --> 01:33:11,790\nguys have the information\nyou need to be successful.\n\n1794\n01:33:11,790 --> 01:33:14,030\nAll right,\nwell I hope you guys enjoyed the show.\n\n1795\n01:33:14,030 --> 01:33:16,543\nSigning off for IT Pro TV, I'm Don Pezet.\n\n1796\n01:33:16,543 --> 01:33:18,463\nAnd I will see you next time.\n\n1797\n01:33:18,463 --> 01:33:28,463\n[MUSIC]\n\n",
          "vimeoId": "105779290"
        }
      ],
      "title": "Optimize and troubleshoot"
    },
    {
      "episodes": [
        {
          "description": "In this episode Don walks you through the process of backing up and restoring databases in Microsoft SQL. He explains the difference between full, differential and transaction log backups and describes when to use each.",
          "length": "5477",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/006-Backup-and-Restore-Databases.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/006-Backup-and-Restore-Databases-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/006-Backup-and-Restore-Databases-sm.jpg",
          "title": "Backup and Restore Databases",
          "transcript": "1\n00:00:00,040 --> 00:00:10,040\n[MUSIC]\n\n2\n00:00:15,260 --> 00:00:22,510\n[SOUND]\n\n3\n00:00:22,510 --> 00:00:32,510\n[MUSIC]\n\n4\n00:00:33,750 --> 00:00:36,785\nAll right, good morning,\ngood afternoon and good evening and\n\n5\n00:00:36,785 --> 00:00:38,970\nwelcome back to another\nepisode of ITProTV.\n\n6\n00:00:38,970 --> 00:00:43,718\nI'm your host, Don Pezet back in with\nanother episode of Microsoft SQL.\n\n7\n00:00:43,718 --> 00:00:48,149\nToday, we're gonna be jumping into backing\nup and restoring our databases and\n\n8\n00:00:48,149 --> 00:00:52,247\nthat means that this episode is probably\none of the most important in terms\n\n9\n00:00:52,247 --> 00:00:55,840\nof the job duties you're gonna\nhave out there in the real world.\n\n10\n00:00:55,840 --> 00:00:59,039\nThere is no substitute for\na good backup of a database and\n\n11\n00:00:59,039 --> 00:01:01,626\nwhen things go wrong boy,\nhaving that backup\n\n12\n00:01:01,626 --> 00:01:06,340\nis gonna make the difference between you\nkeeping your job and you losing your job.\n\n13\n00:01:06,340 --> 00:01:10,220\nWe call these Resume Generating Events,\nRGEs.\n\n14\n00:01:10,220 --> 00:01:12,929\nIf you have a failure and\nyou lose a database,\n\n15\n00:01:12,929 --> 00:01:16,496\ndatabases have become so\ncritical to companies that losing\n\n16\n00:01:16,496 --> 00:01:19,870\nthem is oftentimes catastrophic\nto the organization.\n\n17\n00:01:19,870 --> 00:01:23,164\nSo we need to make sure that we\nhave a good backup system in place,\n\n18\n00:01:23,164 --> 00:01:27,511\nthat it's being done and we're monitoring\nit to make sure that the backups happen.\n\n19\n00:01:27,511 --> 00:01:31,092\nAnd then we also need to make sure\nthat we've tested our restores, so\n\n20\n00:01:31,092 --> 00:01:35,130\nthat we know the restores are working and\nthat that data is functioning also.\n\n21\n00:01:35,130 --> 00:01:37,670\nIt's very, very important.\n\n22\n00:01:37,670 --> 00:01:41,273\nSo that's what we're gonna spend this\nepisode on we're gonna dive into it deep\n\n23\n00:01:41,273 --> 00:01:44,661\nhere and make sure we've got a really\ngood understanding of the process and\n\n24\n00:01:44,661 --> 00:01:47,920\nthat we are comfortable with getting\nour systems backup in operation.\n\n25\n00:01:47,920 --> 00:01:52,590\nSo let's start with something simple,\nwhich is just doing a backup.\n\n26\n00:01:52,590 --> 00:01:55,840\nBacking up a SQL database\nis actually really easy.\n\n27\n00:01:55,840 --> 00:01:58,236\nSQL has its own native\nbackup built into it, so\n\n28\n00:01:58,236 --> 00:02:01,748\nwe don't need special third party\nsoftware or anything like that.\n\n29\n00:02:01,748 --> 00:02:06,128\nWe can backup and dump our data\nto a couple of different places.\n\n30\n00:02:06,128 --> 00:02:08,008\nNormally, we're backing\nup to the hard drive.\n\n31\n00:02:08,008 --> 00:02:11,468\nNow obviously, backing up to the hard\ndrive is right here on the SQL servers is\n\n32\n00:02:11,468 --> 00:02:13,130\nnot the greatest thing in the world.\n\n33\n00:02:13,130 --> 00:02:15,999\nSo typically,\nyou backup to the hard drives and\n\n34\n00:02:15,999 --> 00:02:18,590\nthen shift those backups somewhere else.\n\n35\n00:02:18,590 --> 00:02:22,901\nMaybe there you use third party backup\nsoftware to take care of managing that or\n\n36\n00:02:22,901 --> 00:02:25,720\nwhatever, but\nwe need to at least get that backup.\n\n37\n00:02:25,720 --> 00:02:29,680\nSQL also supports backing up directly to a\ntape drive, so if you're still using tapes\n\n38\n00:02:29,680 --> 00:02:33,420\nfor backup, you can do that too, it's\ngot the native support for it built-in.\n\n39\n00:02:33,420 --> 00:02:36,555\nIt's been a long time since I've had\nto use a tape, I used to use them\n\n40\n00:02:36,555 --> 00:02:39,920\nall the time, but almost everybody's\ngone to replicated storage now.\n\n41\n00:02:39,920 --> 00:02:43,640\nSo you'll usually backup to a network\nappliance on your network and\n\n42\n00:02:43,640 --> 00:02:47,175\nthen that appliance will typically\nreplicate somewhere else.\n\n43\n00:02:47,175 --> 00:02:51,345\nSQL has got full support for that, so\nwe don't need anything special to do it.\n\n44\n00:02:51,345 --> 00:02:55,215\nSo we need to think about that,\nwhere are we gonna put our backups?\n\n45\n00:02:55,215 --> 00:03:00,675\nNow on this particular server,\nwhat I've got are multiple hard drives.\n\n46\n00:03:00,675 --> 00:03:04,045\nAnd so I've got my C drive,\nwhich is where my operating system is.\n\n47\n00:03:04,045 --> 00:03:07,465\nI've got my D drive, where I've\nbeen putting my transaction logs.\n\n48\n00:03:07,465 --> 00:03:11,065\nI've got my E drive where my databases\nhave been going and I've got yet\n\n49\n00:03:11,065 --> 00:03:14,800\nanother physical hard drive,\na 500 gig hard drive here for backups.\n\n50\n00:03:14,800 --> 00:03:17,300\nI'm gonna back up to a completely\nseparate hard drive.\n\n51\n00:03:17,300 --> 00:03:21,168\nThat means that if I lose my database\ndrive or my transaction log drive,\n\n52\n00:03:21,168 --> 00:03:23,630\nI lose one of these guys,\nI'll be all right.\n\n53\n00:03:23,630 --> 00:03:26,550\nMy backups are over here,\nI can recover them.\n\n54\n00:03:26,550 --> 00:03:30,824\nBut if I lose the server itself,\nif I have a building fire, for example,\n\n55\n00:03:30,824 --> 00:03:32,800\nthat's not going to protect me.\n\n56\n00:03:32,800 --> 00:03:35,712\nBut that's okay, cuz what I can\ndo is I can take that G drive and\n\n57\n00:03:35,712 --> 00:03:38,130\nI can just replicate that\nstorage somewhere else.\n\n58\n00:03:38,130 --> 00:03:40,590\nSo I can back it up and\nsend it wherever I need to, but\n\n59\n00:03:40,590 --> 00:03:43,130\nthat's basically where my\nbackups are going to go.\n\n60\n00:03:43,130 --> 00:03:47,220\nNow it is just an empty drive here,\nnothing to special on it.\n\n61\n00:03:47,220 --> 00:03:50,917\nLet me check the permissions on that\nfolder real quick just to make sure It's\n\n62\n00:03:50,917 --> 00:03:52,260\na little bit limited here.\n\n63\n00:03:52,260 --> 00:03:55,130\nLet me just bump that up a bit.\n\n64\n00:03:55,130 --> 00:03:57,350\nSo we're gonna be backing\nup to this location,\n\n65\n00:03:57,350 --> 00:03:59,800\nI just made a little folder\nhere to put my backups in.\n\n66\n00:03:59,800 --> 00:04:04,260\nAnd again, you can just figure out where\nit is you wanna put it on your network.\n\n67\n00:04:04,260 --> 00:04:05,970\nSo I'm gonna pop it right here.\n\n68\n00:04:05,970 --> 00:04:08,630\nNow, then we just need\nto tell SQL to do it.\n\n69\n00:04:08,630 --> 00:04:12,078\nIf you're just doing a one time backup,\nit's really straightforward,\n\n70\n00:04:12,078 --> 00:04:14,426\nwe just run through and\ncomplete a simple wizard.\n\n71\n00:04:14,426 --> 00:04:18,800\nIf we wanna setup a backup schedule\nthough, we've got a few choices.\n\n72\n00:04:18,800 --> 00:04:23,070\nChoice number one is we can create\na script to backup the system and\n\n73\n00:04:23,070 --> 00:04:26,260\nthen we can create a SQL\nserver agent job to do it.\n\n74\n00:04:26,260 --> 00:04:29,731\nSo if you haven't watched it already, we\ndid an episode on the SQL server agent and\n\n75\n00:04:29,731 --> 00:04:32,470\nhow to automate that type of activity,\nso you can do it that way.\n\n76\n00:04:32,470 --> 00:04:36,260\nThe other option is you can do what's\ncalled a database maintenance plan.\n\n77\n00:04:36,260 --> 00:04:40,422\nWhen you do a database maintenance plan,\nit will setup the backups for you and\n\n78\n00:04:40,422 --> 00:04:44,340\nsetup the schedule and all of that, so\nit does it all wrapped up into one.\n\n79\n00:04:44,340 --> 00:04:46,380\nThat's kind of nice and\nyou can go that route.\n\n80\n00:04:46,380 --> 00:04:48,849\nWe cover that in a SQL\nserver agent episode also so\n\n81\n00:04:48,849 --> 00:04:51,750\nif you haven't seen it just jump over and\ncatch that one.\n\n82\n00:04:51,750 --> 00:04:55,532\nBut let's take a look at doing it\nmanually, because I wanna make sure you\n\n83\n00:04:55,532 --> 00:04:59,066\nguys understand exactly what's\nhappening as the backups occur and\n\n84\n00:04:59,066 --> 00:05:01,800\nwhat all the different\noptions are that we've got.\n\n85\n00:05:01,800 --> 00:05:05,281\nThe first thing we need to remember is\nwhen we do a backup our database is\n\n86\n00:05:05,281 --> 00:05:06,880\nactually split into two files.\n\n87\n00:05:06,880 --> 00:05:08,260\nWell, it could be split into many.\n\n88\n00:05:08,260 --> 00:05:10,590\nBut at a minimum,\nit's split into two files.\n\n89\n00:05:10,590 --> 00:05:15,040\nYou've got your database file,\nthe MDF, the main database file.\n\n90\n00:05:15,040 --> 00:05:20,010\nAnd you've got the transaction log file,\nthe LDF or the log database file.\n\n91\n00:05:20,010 --> 00:05:23,590\nSo the LDF and the MDF,\nthose are your main files.\n\n92\n00:05:23,590 --> 00:05:27,790\nYou may also have file groups and so\nyou may have a bunch of NDF files,\n\n93\n00:05:27,790 --> 00:05:30,886\nsecondary files that contain tables or\nrow sets or\n\n94\n00:05:30,886 --> 00:05:34,590\nwhatever it is that you've got\nstuck in those other files.\n\n95\n00:05:34,590 --> 00:05:36,590\nBut at a minimum,\nwe've got these two main files.\n\n96\n00:05:36,590 --> 00:05:40,130\nAnd so when we do our backups,\nwe've gotta back up these files.\n\n97\n00:05:40,130 --> 00:05:40,920\nThat is important.\n\n98\n00:05:40,920 --> 00:05:44,917\nWe've gotta make sure that we understand\nthat we're gathering that data and\n\n99\n00:05:44,917 --> 00:05:48,800\nbacking it up and storing it somewhere and\nthat we get it in a complete form.\n\n100\n00:05:48,800 --> 00:05:51,644\nIt's real easy to end up with\na backup that's incomplete and\n\n101\n00:05:51,644 --> 00:05:55,378\nit won't be useful for you to restore\nfrom, you'll be in a moment of failure and\n\n102\n00:05:55,378 --> 00:05:56,970\nyour backups will be worthless.\n\n103\n00:05:56,970 --> 00:06:00,120\nSo that's why we've got to plan for\nthis really, really well.\n\n104\n00:06:00,120 --> 00:06:03,471\nNow before we even start taking backups,\n\n105\n00:06:03,471 --> 00:06:09,130\nwe need to understand that databases\nrun in one of three backup modes.\n\n106\n00:06:09,130 --> 00:06:12,380\nIf I take a database,\nlike my products database.\n\n107\n00:06:12,380 --> 00:06:15,566\nLet me just pull up the Properties\non my products database and\n\n108\n00:06:15,566 --> 00:06:18,811\nif I look at my files here,\nI can see the files that I've got and\n\n109\n00:06:18,811 --> 00:06:21,510\nI guess I didn't move these\noff to the other drive.\n\n110\n00:06:21,510 --> 00:06:25,260\nSo these are all on my C drive, but\nI've got my various files there.\n\n111\n00:06:25,260 --> 00:06:29,316\nBut if I go down to Options,\nhere under the options screen,\n\n112\n00:06:29,316 --> 00:06:31,762\nI'll see some interesting stuff.\n\n113\n00:06:31,762 --> 00:06:36,502\nRight up here, there,\nyou can see my collation and\n\n114\n00:06:36,502 --> 00:06:40,920\ncompatibility and so\non, but recovery model.\n\n115\n00:06:40,920 --> 00:06:45,150\nThere are three different recovery\nmodels that SQL operates under.\n\n116\n00:06:45,150 --> 00:06:48,710\nAnd these recovery models are going\nto affect how we do our backups and\n\n117\n00:06:48,710 --> 00:06:49,970\nhow we do our restores.\n\n118\n00:06:51,240 --> 00:06:55,790\nWhen you do a backup, if you are in\nthe full recovery model, the full recovery\n\n119\n00:06:55,790 --> 00:07:02,090\nmodel will backup the database and\nthe transaction logs.\n\n120\n00:07:02,090 --> 00:07:04,839\nIt allows you to work with\nthe transaction logs to\n\n121\n00:07:04,839 --> 00:07:07,800\nbe able to do what are called\npoint in time restores.\n\n122\n00:07:07,800 --> 00:07:10,135\nPoint in time restores are important,\n\n123\n00:07:10,135 --> 00:07:13,470\nbecause you might not have\na lot of time do full backups.\n\n124\n00:07:13,470 --> 00:07:17,590\nA full backup of your database,\nthat's where you backup the entire thing.\n\n125\n00:07:17,590 --> 00:07:21,013\nIf you have a failure, you can go\nto a full backup and restore it and\n\n126\n00:07:21,013 --> 00:07:24,260\nyou're back in business, right,\nyou got the whole backup.\n\n127\n00:07:24,260 --> 00:07:26,528\nBut if your database\nis a terabyte in size,\n\n128\n00:07:26,528 --> 00:07:28,550\nit may take a while to do a full backup.\n\n129\n00:07:28,550 --> 00:07:30,880\nA full backup might take hours to run.\n\n130\n00:07:30,880 --> 00:07:34,388\nSo when you're in the middle of the day\nand employees are in the database and\n\n131\n00:07:34,388 --> 00:07:38,063\nworking and stuff like that and you have\na failure, your full backup might have\n\n132\n00:07:38,063 --> 00:07:41,090\nhappened last night or\nit might have happened over the weekend.\n\n133\n00:07:41,090 --> 00:07:43,703\nIt might be several days old,\nbecause it's so\n\n134\n00:07:43,703 --> 00:07:46,460\nbig that you just can't\nrun it every single day.\n\n135\n00:07:46,460 --> 00:07:50,968\nSo transaction logs help us to make up for\nthat.\n\n136\n00:07:50,968 --> 00:07:55,390\nRemember, your transaction logs, they\ncontain every change made to the database.\n\n137\n00:07:55,390 --> 00:07:58,434\nSo they don't actually have\nthe full database in them,\n\n138\n00:07:58,434 --> 00:07:59,998\nthey just have the changes.\n\n139\n00:07:59,998 --> 00:08:04,738\nWell, if I could combine that,\nthe full backup that I took a few days ago\n\n140\n00:08:04,738 --> 00:08:08,372\nwith the transaction logs\nthat have just the changes,\n\n141\n00:08:08,372 --> 00:08:12,610\nI can restore my database all\nthe way to the point of failure.\n\n142\n00:08:12,610 --> 00:08:16,640\nRight, I can get it where if the failure\nhappened at 6:00 PM on Wednesday,\n\n143\n00:08:16,640 --> 00:08:19,210\nI can restore to 5:59 PM on Wednesday.\n\n144\n00:08:19,210 --> 00:08:21,860\nThat's the type of thing that we\ncan do with transaction logs and\n\n145\n00:08:21,860 --> 00:08:24,470\nthe full recovery model allows for that.\n\n146\n00:08:24,470 --> 00:08:29,520\nSo if you have really sensitive data,\nif you wanna minimize the window of data\n\n147\n00:08:29,520 --> 00:08:33,100\nthat's lost in your database, the full\nrecovery model is the one that you want.\n\n148\n00:08:34,720 --> 00:08:36,550\nIf your data is not very sensitive,\n\n149\n00:08:36,550 --> 00:08:40,110\nthough, maybe it's data that's read-only,\nit just doesn't change, right, or\n\n150\n00:08:40,110 --> 00:08:43,365\nit's data that has very infrequent\nchanges, things like that.\n\n151\n00:08:43,365 --> 00:08:47,320\nWell, in that scenario, you probably don't\nneed to worry about the transaction logs.\n\n152\n00:08:47,320 --> 00:08:52,470\nIf you do a full backup every night and\nlosing 24 hours of data is okay to you,\n\n153\n00:08:52,470 --> 00:08:54,510\nthen you don't need to worry\nabout the transaction logs.\n\n154\n00:08:54,510 --> 00:08:57,560\nI know some of you guys are out\nthere going, that's crazy!\n\n155\n00:08:57,560 --> 00:09:00,180\nWho could stand to lose 24 hours of data?\n\n156\n00:09:00,180 --> 00:09:01,807\nWell, let me give you an example.\n\n157\n00:09:01,807 --> 00:09:04,830\nI used to work for\nan IT training school and so\n\n158\n00:09:04,830 --> 00:09:08,446\nI've taught formal Microsoft and\nCisco training.\n\n159\n00:09:08,446 --> 00:09:12,050\nAnd that school had thousands of students,\nbut\n\n160\n00:09:12,050 --> 00:09:16,929\nit never had more than two or\n300 students active at one time.\n\n161\n00:09:16,929 --> 00:09:21,803\nAnd so in a 24-hour period, they had\nan enrollment database and the enrollment\n\n162\n00:09:21,803 --> 00:09:26,970\ndatabase would really only get 30,\n40 changes a day, not a ton of changes.\n\n163\n00:09:26,970 --> 00:09:31,260\nSo we did a full backup every night,\nand that was good enough.\n\n164\n00:09:31,260 --> 00:09:34,340\nIf we had a database failure,\nwe would lose 30 to 40 changes,\n\n165\n00:09:34,340 --> 00:09:36,600\nthe changes that happened the day before.\n\n166\n00:09:36,600 --> 00:09:38,750\nBut we could just go to\nthe various representatives and\n\n167\n00:09:38,750 --> 00:09:42,450\nsay, hey, guys, I'm sorry we lost\nthe database for the last 24 hours, so\n\n168\n00:09:42,450 --> 00:09:45,080\nany change you made yesterday\nyou're gonna have to redo.\n\n169\n00:09:45,080 --> 00:09:48,280\nAnd they go okay, so I added these\nthree students to this class so\n\n170\n00:09:48,280 --> 00:09:49,660\nthey go and re-add it, right.\n\n171\n00:09:49,660 --> 00:09:54,130\nIn that scenario losing that 24\nhours of data was not a big deal so\n\n172\n00:09:54,130 --> 00:09:57,630\nin that environment don't worry\nabout the transaction logs.\n\n173\n00:09:57,630 --> 00:09:59,300\nYou can switch to one of the other modes.\n\n174\n00:09:59,300 --> 00:10:02,290\nYou can switch to the simple mode.\n\n175\n00:10:02,290 --> 00:10:06,440\nIn the simple mode,\nyou back up the whole database.\n\n176\n00:10:06,440 --> 00:10:08,200\nThe transaction logs are ignored.\n\n177\n00:10:08,200 --> 00:10:09,532\nThe transaction logs still exist.\n\n178\n00:10:09,532 --> 00:10:13,240\nEvery time a change is made to the\ndatabase it goes to the transaction log.\n\n179\n00:10:13,240 --> 00:10:16,610\nThe transaction is written\nto the database,right?\n\n180\n00:10:16,610 --> 00:10:19,920\nOnce the transaction is written 100% to\nthe transaction log, it's then written to\n\n181\n00:10:19,920 --> 00:10:24,110\nthe database and as soon as that's done,\nit's removed from the transaction log.\n\n182\n00:10:24,110 --> 00:10:27,502\nSo the changes don't stay in\nthe transaction log in the simple model,\n\n183\n00:10:27,502 --> 00:10:28,420\nall right?\n\n184\n00:10:28,420 --> 00:10:30,480\nSo simple model, it's simple.\n\n185\n00:10:30,480 --> 00:10:34,070\nIt's designed for people who don't need to\nrecover straight to the point of failure,\n\n186\n00:10:34,070 --> 00:10:36,605\npeople who can afford to lose\na little bit of data, right.\n\n187\n00:10:36,605 --> 00:10:39,540\nRead-only databases are the best\nexample of where you're gonna use\n\n188\n00:10:39,540 --> 00:10:40,580\nthe simple model.\n\n189\n00:10:40,580 --> 00:10:43,750\nNo point in messing around with\ntransaction logs on a read-only database.\n\n190\n00:10:44,910 --> 00:10:46,834\nNow there is a third model\nthat's not very common.\n\n191\n00:10:46,834 --> 00:10:49,956\nIt's called the bulk\nlogged method all right.\n\n192\n00:10:49,956 --> 00:10:57,350\nThe bulk logged model is kind of\na hybrid between simple and full.\n\n193\n00:10:57,350 --> 00:11:00,890\nLike full, you've got transaction logs and\nevery time you make changes,\n\n194\n00:11:00,890 --> 00:11:02,590\nthe changes go to the transaction logs.\n\n195\n00:11:02,590 --> 00:11:05,900\nAnd when you do your backups, you can back\nup the database and the transaction logs,\n\n196\n00:11:05,900 --> 00:11:07,850\nso very, very similar to full.\n\n197\n00:11:07,850 --> 00:11:10,960\nBut the difference is, in bulk logged,\n\n198\n00:11:10,960 --> 00:11:16,770\nif we do bulk imports, if I'm about\nto import 10,000 rows into a table.\n\n199\n00:11:16,770 --> 00:11:19,540\nI can choose to bypass\nthe transaction logs, and\n\n200\n00:11:19,540 --> 00:11:21,320\nhave it go straight into the database.\n\n201\n00:11:21,320 --> 00:11:24,590\nNow why would I do that,\nright, isn't that crazy?\n\n202\n00:11:24,590 --> 00:11:25,440\nWell, no.\n\n203\n00:11:25,440 --> 00:11:27,550\nIt actually can improve performance.\n\n204\n00:11:27,550 --> 00:11:30,460\nIf I'm trying to import thousands\nupon thousands of rows and\n\n205\n00:11:30,460 --> 00:11:33,730\ndo it quickly,\nI can bypass the transaction logs.\n\n206\n00:11:33,730 --> 00:11:35,670\nThe bulk logged model will let us do that.\n\n207\n00:11:35,670 --> 00:11:39,420\nBut the thing is with a bulk logged model,\nwhen you back up those transaction logs\n\n208\n00:11:39,420 --> 00:11:43,470\nit may or may not contain all\nthe changes that have occurred.\n\n209\n00:11:43,470 --> 00:11:45,850\nSo it's really a special purpose model and\n\n210\n00:11:45,850 --> 00:11:48,350\nit's not one that a lot of\npeople are going to use.\n\n211\n00:11:48,350 --> 00:11:52,400\nSo in most environments, and\nby most I mean probably 99%,\n\n212\n00:11:52,400 --> 00:11:56,330\nreally almost all,\nyou're gonna see either full or simple.\n\n213\n00:11:56,330 --> 00:11:59,210\nThose are the two models\nthat we're gonna operate in.\n\n214\n00:11:59,210 --> 00:12:03,146\nAll right, now if I choose\nthe simple model and apply that,\n\n215\n00:12:03,146 --> 00:12:06,300\nnow I'm only able to back up the database.\n\n216\n00:12:06,300 --> 00:12:10,060\nIt won't even allow me to back up\nthe transaction logs at this point.\n\n217\n00:12:10,060 --> 00:12:13,280\nAnd if I go back to full,\nnow I can back up both, all right?\n\n218\n00:12:13,280 --> 00:12:15,570\nYou can change whenever you want.\n\n219\n00:12:15,570 --> 00:12:19,490\nSo just because your database has been in\nthe simple model for five years doesn't\n\n220\n00:12:19,490 --> 00:12:22,220\nmean you can't switch it to full right\nnow, you can do it whenever you want.\n\n221\n00:12:22,220 --> 00:12:23,750\nIt's pretty easy to do.\n\n222\n00:12:23,750 --> 00:12:27,740\nBut just know that once you switch it's\nnot like you magically create these\n\n223\n00:12:27,740 --> 00:12:28,560\ntransaction logs.\n\n224\n00:12:28,560 --> 00:12:31,740\nIt's really from this point forward\nthat you can start to back up those\n\n225\n00:12:31,740 --> 00:12:32,640\ntransaction logs.\n\n226\n00:12:32,640 --> 00:12:35,440\nSo just keep that in mind, all right.\n\n227\n00:12:35,440 --> 00:12:38,590\nSo, I'm gonna leave this database\nin the full model, just so\n\n228\n00:12:38,590 --> 00:12:41,620\nwe can see all the different\noptions that are there.\n\n229\n00:12:41,620 --> 00:12:43,280\nIt might have defaulted to that.\n\n230\n00:12:43,280 --> 00:12:46,800\nYours may or may not, so\njust be aware of that, it depends.\n\n231\n00:12:46,800 --> 00:12:50,440\nYour default is actually\ndependent on that model database.\n\n232\n00:12:50,440 --> 00:12:53,260\nSo if you go up here,\nyour system databases, and\n\n233\n00:12:53,260 --> 00:12:56,830\nfind the model database,\nwhatever that one is set to.\n\n234\n00:12:56,830 --> 00:13:01,870\nSo if I pull up its properties and I go\nto its options, whatever recovery model\n\n235\n00:13:01,870 --> 00:13:05,480\nit's set to, as you create new databases\nthat's what they'll be set to.\n\n236\n00:13:05,480 --> 00:13:07,670\nThat's the default setting, all right.\n\n237\n00:13:07,670 --> 00:13:09,520\nSo, my default is full.\n\n238\n00:13:09,520 --> 00:13:12,780\nIf you want all your new\ndatabases to have a simple model\n\n239\n00:13:12,780 --> 00:13:15,780\nyou could just change\nthe model DB to simple.\n\n240\n00:13:15,780 --> 00:13:17,320\nAnd now when you create new\nones that's what'll happen.\n\n241\n00:13:17,320 --> 00:13:21,133\nNow remember the model database is\nthe template used to create new databases.\n\n242\n00:13:23,767 --> 00:13:27,110\nAll right, so\nlet's see a back up in action.\n\n243\n00:13:27,110 --> 00:13:29,540\nI've got a database in\nhere called products.\n\n244\n00:13:29,540 --> 00:13:31,535\nAll right, so that's my products database.\n\n245\n00:13:31,535 --> 00:13:33,650\nDoesn't have anything in it?\n\n246\n00:13:33,650 --> 00:13:37,310\nIt doesn't really have anything in it\nright now but we'll put some stuff in it.\n\n247\n00:13:37,310 --> 00:13:40,180\nSo I'll take my products database here and\nI'm just gonna back it up.\n\n248\n00:13:40,180 --> 00:13:47,030\nSo I'll right-click on that and\nI'll go to Tasks > Backup, all right.\n\n249\n00:13:47,030 --> 00:13:50,150\nNow when we go to backup, it's gonna\nask us a series of questions and\n\n250\n00:13:50,150 --> 00:13:51,940\nmost of them are pretty straightforward.\n\n251\n00:13:51,940 --> 00:13:54,440\nFirst thing it's asking me is\nwhich database I wanna back up.\n\n252\n00:13:54,440 --> 00:13:56,660\nWell, products,\nthat's what I picked, right?\n\n253\n00:13:56,660 --> 00:13:57,970\nSo that's already there.\n\n254\n00:13:57,970 --> 00:14:01,570\nThe recovery model, it's just\nlisting it here so I know, right?\n\n255\n00:14:01,570 --> 00:14:04,580\nIf I'm trying to do a transaction log\nbackup and the option's not there,\n\n256\n00:14:04,580 --> 00:14:06,130\nit might be that I'm in the simple model,\nso\n\n257\n00:14:06,130 --> 00:14:08,320\nthat's why it displays it right here so\nI know.\n\n258\n00:14:08,320 --> 00:14:10,060\nI can't change it, right?\n\n259\n00:14:10,060 --> 00:14:12,190\nBut I can see it.\n\n260\n00:14:12,190 --> 00:14:13,610\nAnd then my backup type.\n\n261\n00:14:13,610 --> 00:14:17,100\nSince I'm in the full recovery model,\nI've got choices.\n\n262\n00:14:17,100 --> 00:14:22,050\nI can do a full, a differential,\nor a transaction log, right?\n\n263\n00:14:22,050 --> 00:14:24,200\nIf I were in the simple, model, right?\n\n264\n00:14:24,200 --> 00:14:25,480\nLet me take another database here.\n\n265\n00:14:25,480 --> 00:14:27,690\nI'll take my inventory or\npayroll database.\n\n266\n00:14:27,690 --> 00:14:28,680\nLet's do that one.\n\n267\n00:14:28,680 --> 00:14:29,610\nWhoops.\n\n268\n00:14:29,610 --> 00:14:31,970\nThere.\nSo I'll take payroll and\n\n269\n00:14:31,970 --> 00:14:37,190\nI'm gonna move it into the simple model,\nall right.\n\n270\n00:14:37,190 --> 00:14:40,236\nIf I do that same action,\nif I go to Tasks and\n\n271\n00:14:40,236 --> 00:14:45,320\nback up on my payroll database,\nit says that I'm in the simple model,\n\n272\n00:14:45,320 --> 00:14:48,660\nand when I drop that full down,\nsee how I no longer have transaction log?\n\n273\n00:14:48,660 --> 00:14:52,230\nI just have full and differential,\nall right, and that's it.\n\n274\n00:14:52,230 --> 00:14:55,970\nSo, I don't have the other option\navailable because I'm in that\n\n275\n00:14:55,970 --> 00:14:57,400\nsimple model.\n\n276\n00:14:57,400 --> 00:15:00,210\nSo keep aware of that when\nyou go to use backups.\n\n277\n00:15:00,210 --> 00:15:05,110\nNow, what is full versus differential\nversus transactional and\n\n278\n00:15:05,110 --> 00:15:07,360\nhow do these really come into play?\n\n279\n00:15:07,360 --> 00:15:09,290\nWell, let me show you an example.\n\n280\n00:15:09,290 --> 00:15:12,160\nSo I whipped a quick\ndiagram before the show.\n\n281\n00:15:12,160 --> 00:15:15,490\nLet's see, right here, okay.\n\n282\n00:15:15,490 --> 00:15:19,930\nOur database, so let's say this is our\ndatabase as it is Monday morning and\n\n283\n00:15:19,930 --> 00:15:23,460\nmaybe that's when I do my back up so\nevery Monday morning I do a backup and\n\n284\n00:15:23,460 --> 00:15:24,430\nit's a full backup.\n\n285\n00:15:24,430 --> 00:15:28,415\nOr let's just say every night at\nmidnight I do a full backup, right.\n\n286\n00:15:28,415 --> 00:15:34,350\nSo every night at midnight I'm\ngonna jump in and do a full backup.\n\n287\n00:15:36,930 --> 00:15:41,330\nAnd that full backup,\nthat's a pretty big important backup for\n\n288\n00:15:41,330 --> 00:15:44,010\nme because it's backing up all of my data,\nright?\n\n289\n00:15:44,010 --> 00:15:46,349\nSo everything that's in my database and\n\n290\n00:15:46,349 --> 00:15:49,526\nall that is getting backed\nup right there at midnight.\n\n291\n00:15:49,526 --> 00:15:54,438\nAnd if I do that every day at midnight,\nso right there, Tuesday at midnight,\n\n292\n00:15:54,438 --> 00:15:56,034\nWednesday at midnight.\n\n293\n00:15:56,034 --> 00:15:59,144\nI'm doing a full backup\neach of those days.\n\n294\n00:15:59,144 --> 00:16:00,954\nSo you're always doing those full backups.\n\n295\n00:16:00,954 --> 00:16:03,287\nWell, that's all fine and good, right?\n\n296\n00:16:03,287 --> 00:16:06,730\nMy database is back up,\nthings are running.\n\n297\n00:16:06,730 --> 00:16:11,052\nHere's my database, and\nlet's say that it is 100 gigs in size.\n\n298\n00:16:11,052 --> 00:16:15,799\nRight?\nSo we'll just say that the database is 100\n\n299\n00:16:15,799 --> 00:16:22,230\ngigabytes in size, and\nthat conveniently placed it outside of my.\n\n300\n00:16:24,260 --> 00:16:25,144\nWell there.\n\n301\n00:16:25,144 --> 00:16:27,264\nSo my database is a 100 gigs in size.\n\n302\n00:16:27,264 --> 00:16:28,330\nThere it is.\n\n303\n00:16:28,330 --> 00:16:31,180\nWell, as I start to do my backups,\n\n304\n00:16:31,180 --> 00:16:34,780\nthat back up, Monday,\nis gonna be a 100 gigs in size.\n\n305\n00:16:34,780 --> 00:16:38,660\nAnd that backup on Tuesday, is gonna be\na 100 gigs in size, and on Wednesday,\n\n306\n00:16:38,660 --> 00:16:40,205\nit's gonna be a 100 gigs in size,\nand so on.\n\n307\n00:16:40,205 --> 00:16:42,610\nRight?\nAnd as the database gets bigger,\n\n308\n00:16:42,610 --> 00:16:45,775\nas I copy more data into it,\nthen that's gonna get bigger too.\n\n309\n00:16:45,775 --> 00:16:48,760\nRight?\nEach day reflecting the extra data\n\n310\n00:16:48,760 --> 00:16:51,820\nthat's been loaded in from wherever.\n\n311\n00:16:51,820 --> 00:16:54,550\nSo that's just a typical, ongoing thing.\n\n312\n00:16:54,550 --> 00:16:56,757\nSo maybe I'm 100 gigs here,\n\n313\n00:16:56,757 --> 00:17:01,268\nmaybe by this point I actually grow a bit,\nand it's 120 gigs.\n\n314\n00:17:01,268 --> 00:17:02,081\nRight?\n\n315\n00:17:02,081 --> 00:17:04,897\nAnd then, by this point over\nhere it's grown even more,\n\n316\n00:17:04,897 --> 00:17:06,730\nnow it's 140 gigs in size.\n\n317\n00:17:06,730 --> 00:17:09,703\nSo day after day, Monday,\nTuesday, Wednesday,\n\n318\n00:17:09,703 --> 00:17:13,385\nthat full backup is getting bigger,\nand bigger, and bigger.\n\n319\n00:17:13,385 --> 00:17:14,726\nRight?\nIt's encompassing the new data\n\n320\n00:17:14,726 --> 00:17:16,100\nthat I've added.\n\n321\n00:17:16,100 --> 00:17:19,970\nWell, that full backup,\nmaybe it runs very fast for\n\n322\n00:17:19,970 --> 00:17:21,780\nus, maybe that backup just takes an hour.\n\n323\n00:17:21,780 --> 00:17:24,269\nAnd so I run it every night at midnight,\nit's done by 1:00 AM,\n\n324\n00:17:24,269 --> 00:17:26,140\nmy employees never notice.\n\n325\n00:17:26,140 --> 00:17:27,970\nBut what if the database is huge?\n\n326\n00:17:27,970 --> 00:17:29,670\nWhat if it's terabytes in size?\n\n327\n00:17:29,670 --> 00:17:31,980\nWhat if the backup takes six hours?\n\n328\n00:17:31,980 --> 00:17:34,595\nNow I launch it at midnight,\nit finishes at 6 AM, but\n\n329\n00:17:34,595 --> 00:17:36,350\nemployees are starting to show up.\n\n330\n00:17:36,350 --> 00:17:37,090\nRight?\n\n331\n00:17:37,090 --> 00:17:42,100\nAnd they show up while the backup is still\nrunning, and it slows down their access.\n\n332\n00:17:42,100 --> 00:17:44,900\nWhen you do a backup,\nyou're reading across the entire database.\n\n333\n00:17:44,900 --> 00:17:46,690\nIt creates a performance hit.\n\n334\n00:17:46,690 --> 00:17:48,646\nSo the larger your backup window is,\n\n335\n00:17:48,646 --> 00:17:52,381\nthe larger the amount of time is\nyou're gonna have a performance hit.\n\n336\n00:17:52,381 --> 00:17:56,352\nAnd in our day and age of 24/7 shops,\nInternet facing companies\n\n337\n00:17:56,352 --> 00:18:00,740\nthat are running 24 hours a day,\nyou don't want a giant six hour window,\n\n338\n00:18:00,740 --> 00:18:03,961\nwhere you've got a performance\nhit every single day.\n\n339\n00:18:03,961 --> 00:18:06,200\nRight?\nSo that's a big deal.\n\n340\n00:18:06,200 --> 00:18:11,250\nSo instead of doing full\nbackups every single time,\n\n341\n00:18:11,250 --> 00:18:14,860\nI can choose to do something\nlike a differential backup.\n\n342\n00:18:14,860 --> 00:18:17,880\nA differential back up doesn't\nback up the entire database.\n\n343\n00:18:17,880 --> 00:18:22,260\nIt just backs up the changes,\nsince the last back up.\n\n344\n00:18:22,260 --> 00:18:26,680\nSo when I go to do that back up,\nif it's a huge database,\n\n345\n00:18:26,680 --> 00:18:31,060\nand I'm getting change over time,\nif it's a full back, up it's gonna be big.\n\n346\n00:18:31,060 --> 00:18:33,430\nLet's say this backup\ntakes six hours to run.\n\n347\n00:18:33,430 --> 00:18:35,220\nSo here it's a 100 gigs.\n\n348\n00:18:35,220 --> 00:18:38,460\nI run it at midnight,\nit takes six hours to run, so\n\n349\n00:18:38,460 --> 00:18:39,854\nit's done at 6 am, right here, 0600.\n\n350\n00:18:39,854 --> 00:18:40,631\nAll right.\nWell,\n\n351\n00:18:40,631 --> 00:18:44,239\nif I want to do backups more\nfrequently throughout the day,\n\n352\n00:18:44,239 --> 00:18:47,920\nmaybe I never want to lose\nmore than six hours of data.\n\n353\n00:18:47,920 --> 00:18:52,740\nSo I want to do backups at 6 am, and\n\n354\n00:18:52,740 --> 00:18:56,140\n12 and 1800 or 6 pm, so 6 AM, noon, 6 PM.\n\n355\n00:18:56,140 --> 00:18:58,130\nI wanna do backups every six hours.\n\n356\n00:18:58,130 --> 00:19:03,016\nWell, if I'm backing up a 100\ngigs every time, right,\n\n357\n00:19:03,016 --> 00:19:09,269\na 100 gigs here, a 100 gigs here,\nand if each one is taking six hours,\n\n358\n00:19:09,269 --> 00:19:13,013\nthen my database is\ncontinually backing up.\n\n359\n00:19:13,013 --> 00:19:15,650\nRight?\nAnd since it's continually backing up,\n\n360\n00:19:15,650 --> 00:19:19,690\nit's continually running slow,\nand that's bad for performance.\n\n361\n00:19:19,690 --> 00:19:24,290\nSo instead, what I could do,\nis I could come in and do,\n\n362\n00:19:24,290 --> 00:19:30,497\nnot a back up of the whole database,\nbut just a backup of what's changed.\n\n363\n00:19:30,497 --> 00:19:31,262\nOkay.\n\n364\n00:19:31,262 --> 00:19:33,302\nSo just getting what's changed in there,\n\n365\n00:19:33,302 --> 00:19:36,200\nand we typically do that by\nbacking up the transaction logs.\n\n366\n00:19:36,200 --> 00:19:38,235\nThe transaction logs have what's changed.\n\n367\n00:19:38,235 --> 00:19:38,760\nRight?\n\n368\n00:19:38,760 --> 00:19:41,930\nAnd if you look I've\ngot a 100 gig database.\n\n369\n00:19:41,930 --> 00:19:44,039\nBy the next day, it's 120 gigs.\n\n370\n00:19:44,039 --> 00:19:47,161\nThat means,\nI added about 20 gigs throughout the day.\n\n371\n00:19:47,161 --> 00:19:49,882\nSo maybe I added 5 gigs of data by 6 AM,\n\n372\n00:19:49,882 --> 00:19:54,512\nanother 5 gigs of data by 12 AM,\nanother 5 gigs of data by 6 PM.\n\n373\n00:19:54,512 --> 00:19:55,200\nRight?\n\n374\n00:19:55,200 --> 00:19:57,247\nAnd then, another 5 gigs by\nthe time we hit midnight.\n\n375\n00:19:57,247 --> 00:20:00,020\nThere's our 20 gigs, and\nnow we're at 120 gigs.\n\n376\n00:20:00,020 --> 00:20:05,620\nWell, if I did backups throughout the day,\nand just got the transaction log,\n\n377\n00:20:05,620 --> 00:20:11,030\nright, just what's changed,\nnot the whole thing, just what's changed.\n\n378\n00:20:11,030 --> 00:20:13,980\nThose backups are gonna be a lot smaller,\nand sure,\n\n379\n00:20:13,980 --> 00:20:17,630\na full backup might take six hours to run.\n\n380\n00:20:17,630 --> 00:20:18,330\nRight?\n\n381\n00:20:18,330 --> 00:20:21,600\nBut these transaction log backups,\nthey'll probably run much,\n\n382\n00:20:21,600 --> 00:20:25,970\nmuch faster because they don't\nhave the full set of data.\n\n383\n00:20:25,970 --> 00:20:26,490\nRight?\n\n384\n00:20:26,490 --> 00:20:29,380\nThey're just the changes\nthat have occurred.\n\n385\n00:20:29,380 --> 00:20:32,850\nSo I might have a transaction log\nbackup here that happens, and\n\n386\n00:20:32,850 --> 00:20:37,290\nit's just got 5 gigs of data, and then\nafter here there were 5 gigs more changes,\n\n387\n00:20:37,290 --> 00:20:38,788\nand then 5 gigs more changes, and so on.\n\n388\n00:20:38,788 --> 00:20:39,535\nAll right.\n\n389\n00:20:39,535 --> 00:20:44,210\nWell see how I made it get bigger,\nand bigger, and bigger, each time.\n\n390\n00:20:44,210 --> 00:20:49,655\nHere it was 100 gigs,\nI added 5 gigs of changes here, right,\n\n391\n00:20:49,655 --> 00:20:56,107\nso let's come in, and say that's 5\nGB's of change, and where did that go?\n\n392\n00:20:56,107 --> 00:21:03,085\n[LAUGH] Well I tried to write that\nthere were 5 gigs of changes in there,\n\n393\n00:21:03,085 --> 00:21:06,102\nbut it disappeared on me, so maybe I'll\njust throw it in here in my text window.\n\n394\n00:21:06,102 --> 00:21:08,650\nAll right.\n\n395\n00:21:08,650 --> 00:21:10,610\nSo we'll say that there were\n5 gigs of changes here.\n\n396\n00:21:13,550 --> 00:21:15,655\nNow, that was by 6 AM.\n\n397\n00:21:15,655 --> 00:21:18,950\nSo by 6 AM,\nI had already made 5 gigs of changes.\n\n398\n00:21:18,950 --> 00:21:23,234\nWell, by noon, I had made another 5 gig,\n\n399\n00:21:23,234 --> 00:21:28,001\nbut it was in addition to\nthe 5 gig from before.\n\n400\n00:21:28,001 --> 00:21:30,563\nRight?\nSo really, by this point,\n\n401\n00:21:30,563 --> 00:21:33,102\nI've made 10 gigs in changes.\n\n402\n00:21:33,102 --> 00:21:33,680\nRight?\n\n403\n00:21:33,680 --> 00:21:35,470\nSo it's getting a little bit bigger, but\n\n404\n00:21:35,470 --> 00:21:37,786\nthat's because of how much\ndata that I've written.\n\n405\n00:21:37,786 --> 00:21:42,903\nAnd then by 6 PM,\nI'm up to 15 gigs in changes.\n\n406\n00:21:42,903 --> 00:21:44,931\nRght?\nSo each time is getting a little\n\n407\n00:21:44,931 --> 00:21:48,989\nbit bigger, because the transactional\nlogs are having all the changes,\n\n408\n00:21:48,989 --> 00:21:50,670\nsince the last full backup.\n\n409\n00:21:50,670 --> 00:21:52,330\nHere's my full backup, and\n\n410\n00:21:52,330 --> 00:21:55,040\nthese are backups that I'm\ntaking throughout the day.\n\n411\n00:21:55,040 --> 00:21:58,520\nWhen we do backups like this, where\nthey're getting bigger, and bigger, and\n\n412\n00:21:58,520 --> 00:22:03,230\nbigger, each backup has all the changes\nsince the last full backup.\n\n413\n00:22:03,230 --> 00:22:06,010\nThat's called a differential backup.\n\n414\n00:22:06,010 --> 00:22:12,060\nA differential backup, has every\nchange since the last full backup.\n\n415\n00:22:12,060 --> 00:22:15,020\nSo these kind of vary as we go through.\n\n416\n00:22:15,020 --> 00:22:16,610\nSo this is a differential.\n\n417\n00:22:19,830 --> 00:22:22,520\nAnd then we've got a differential here.\n\n418\n00:22:22,520 --> 00:22:24,000\nAnd a differential here.\n\n419\n00:22:24,000 --> 00:22:24,520\nRight?\n\n420\n00:22:24,520 --> 00:22:27,840\nAnd each time, the differential backup is\ngetting bigger, and bigger, and bigger.\n\n421\n00:22:27,840 --> 00:22:30,570\nAnd that means they're taking longer,\nand longer, and longer.\n\n422\n00:22:30,570 --> 00:22:33,695\nThis backup here at 6 AM,\nwouldn't have taken very long to run.\n\n423\n00:22:33,695 --> 00:22:34,465\nIt's just 5 gigs.\n\n424\n00:22:34,465 --> 00:22:37,500\nRight?\nIf it took 6 hours to back up 100 gigs,\n\n425\n00:22:37,500 --> 00:22:40,766\nit probably took less than 20 minutes,\nto backup 5 gigs.\n\n426\n00:22:40,766 --> 00:22:42,960\nAll right.\nShouldn't it have taken very long,\n\n427\n00:22:42,960 --> 00:22:43,840\nactually maybe a half hour.\n\n428\n00:22:43,840 --> 00:22:45,210\nI don't know, whatever.\n\n429\n00:22:45,210 --> 00:22:47,420\nWell, by the time we get to noon,\n\n430\n00:22:47,420 --> 00:22:50,330\nthis backup will take twice\nas long as the one before it.\n\n431\n00:22:50,330 --> 00:22:53,890\nAnd by the time we get to this one at\n6 PM, it'll take three times as long,\n\n432\n00:22:53,890 --> 00:22:57,300\nas the one that happened at 6 AM,\nbecause the backup's getting bigger, and\n\n433\n00:22:57,300 --> 00:22:58,900\nbigger, and bigger.\n\n434\n00:22:58,900 --> 00:23:03,130\nBut the nice part about a differential,\nif I have a failure.\n\n435\n00:23:03,130 --> 00:23:03,650\nRight?\n\n436\n00:23:03,650 --> 00:23:10,850\nSo let's say I have a database failure,\nand it's right here in my timeline.\n\n437\n00:23:10,850 --> 00:23:15,330\nSo it's before the midnight\nwindow rolls around.\n\n438\n00:23:17,500 --> 00:23:20,480\nAnd so\nmy midnight full backup hasn't run yet.\n\n439\n00:23:20,480 --> 00:23:21,580\nSo I've got this failure right here,\n\n440\n00:23:21,580 --> 00:23:25,050\nthis midnight backup hasn't run,\nwell I need to recover.\n\n441\n00:23:25,050 --> 00:23:30,100\nWhen I go to recover I need this full\nbackup, cuz it's got my whole database.\n\n442\n00:23:30,100 --> 00:23:35,100\nAnd then, I can get my latest,\nmy newest differential backup, and\n\n443\n00:23:35,100 --> 00:23:41,030\nit will have every change that's happened\nto that database, up until 6 PM.\n\n444\n00:23:41,030 --> 00:23:44,640\nSo now, when I have this failure,\nyou know maybe the failure is at 11 PM.\n\n445\n00:23:44,640 --> 00:23:47,980\nThe only data I lost,\nwas the data from 6:00 PM to 11:00 PM.\n\n446\n00:23:47,980 --> 00:23:50,730\nI lost this little window\nof data right here.\n\n447\n00:23:50,730 --> 00:23:52,560\nAnd sometimes we can\nactually recover that too.\n\n448\n00:23:52,560 --> 00:23:54,750\nI'll show you that at the end of the show.\n\n449\n00:23:54,750 --> 00:23:58,160\nBut that's the nice part\nabout a differential is,\n\n450\n00:23:58,160 --> 00:24:01,342\nwe just need the newest one,\nbecause each one.\n\n451\n00:24:01,342 --> 00:24:04,628\nContains the changes back\nto the full backup, right.\n\n452\n00:24:04,628 --> 00:24:08,713\nSo if I was to throw out\nan arrow on each one of these,\n\n453\n00:24:08,713 --> 00:24:13,273\nkind of going back here to\nwhere we were full and healthy,\n\n454\n00:24:13,273 --> 00:24:17,470\nit kinda shows what would\nactually be in there.\n\n455\n00:24:17,470 --> 00:24:20,815\nSo each one of these has\nthat set of data and\n\n456\n00:24:20,815 --> 00:24:26,588\nit just goes back like this.\n\n457\n00:24:26,588 --> 00:24:30,160\nSo each one is kinda building\noff of the other one.\n\n458\n00:24:30,160 --> 00:24:33,540\nNow that means that each differential\nbackup really replaces the need for\n\n459\n00:24:33,540 --> 00:24:34,750\nthe one before it.\n\n460\n00:24:34,750 --> 00:24:37,460\nOnce I have this differential\nbackup right here,\n\n461\n00:24:37,460 --> 00:24:40,960\nI don't really need these two guys anymore\nbecause this one's far more complete.\n\n462\n00:24:40,960 --> 00:24:44,830\nThis one goes way past what these two did.\n\n463\n00:24:44,830 --> 00:24:46,960\nThey build on each other.\n\n464\n00:24:46,960 --> 00:24:49,670\nDifferential back ups are independent.\n\n465\n00:24:49,670 --> 00:24:52,810\nYou never need more than\none differential back up.\n\n466\n00:24:52,810 --> 00:24:55,140\nA lot of people don't even\nbother saving the old ones.\n\n467\n00:24:55,140 --> 00:24:59,160\nYou have your full back ups, and then you\njust save the newest of the differential,\n\n468\n00:24:59,160 --> 00:25:01,420\neach one replacing the need for\nthe previous one.\n\n469\n00:25:02,560 --> 00:25:05,640\nOn a positive side,\nrestores are pretty easy.\n\n470\n00:25:05,640 --> 00:25:06,980\nYou've got your full backup.\n\n471\n00:25:06,980 --> 00:25:09,220\nSo there's one file that you'll need.\n\n472\n00:25:09,220 --> 00:25:11,900\nAnd then you just need\nthe newest differential file.\n\n473\n00:25:11,900 --> 00:25:12,870\nSo there's one more file.\n\n474\n00:25:12,870 --> 00:25:16,330\nSo two files will get you as close\nto current as you're going to get.\n\n475\n00:25:17,930 --> 00:25:21,770\nNow the reason I mention that is\nthere is another way of doing this.\n\n476\n00:25:21,770 --> 00:25:25,830\nSo that's an example of doing\na differential, all right.\n\n477\n00:25:25,830 --> 00:25:30,530\nThe other way to do it is with\nstraight transition log backups.\n\n478\n00:25:30,530 --> 00:25:31,538\nTransition log backups are different.\n\n479\n00:25:31,538 --> 00:25:41,474\nLet me just take this same model here and\nwe'll change it up a little bit.\n\n480\n00:25:41,474 --> 00:25:45,401\nSo instead of doing a transaction\nlog backup, we're gonna do,\n\n481\n00:25:45,401 --> 00:25:48,455\nI mean,\ninstead of doing differential backups,\n\n482\n00:25:48,455 --> 00:25:52,900\nwe're gonna do transaction log\nbackups this time, all right?\n\n483\n00:25:52,900 --> 00:25:55,930\nNow, transaction log backups are different\n\n484\n00:25:55,930 --> 00:26:00,130\nbecause when you run a transaction log\nbackup, it backs up the transaction logs.\n\n485\n00:26:00,130 --> 00:26:01,310\nThat's the name.\n\n486\n00:26:01,310 --> 00:26:03,240\nAnd then it erases them, right.\n\n487\n00:26:03,240 --> 00:26:04,840\nDifferentials don't do that.\n\n488\n00:26:04,840 --> 00:26:07,400\nDifferentials, see how it gets bigger and\nbigger each time?\n\n489\n00:26:07,400 --> 00:26:10,150\nCuz it has all the changes\nback since the beginning.\n\n490\n00:26:10,150 --> 00:26:14,030\nWith transaction log backups,\nthey erase the transaction logs.\n\n491\n00:26:14,030 --> 00:26:15,690\nThey don't actually like delete them.\n\n492\n00:26:15,690 --> 00:26:17,180\nThey just empty them out, so\n\n493\n00:26:17,180 --> 00:26:21,280\nthey're flushing or clearing\nthe transaction logs every time they run.\n\n494\n00:26:21,280 --> 00:26:24,270\nSo each of these backups that's occurring,\n\n495\n00:26:24,270 --> 00:26:29,160\nthey're not like what we saw a moment ago\nwhere they've got all that data in them.\n\n496\n00:26:29,160 --> 00:26:32,100\nThey've just got a subset of data.\n\n497\n00:26:32,100 --> 00:26:36,330\nThey've got the data since\nthe last transaction log backup.\n\n498\n00:26:36,330 --> 00:26:37,600\nNot since the last full.\n\n499\n00:26:38,690 --> 00:26:44,160\nSo like this guy here doesn't actually\ngo as far back as he used to.\n\n500\n00:26:44,160 --> 00:26:48,170\nAnd this guy up here doesn't go\nback as far as he used to either,\n\n501\n00:26:48,170 --> 00:26:51,520\neach one is just going back\nthe last transaction log backup.\n\n502\n00:26:51,520 --> 00:26:52,680\nAll right.\n\n503\n00:26:52,680 --> 00:26:57,240\nOn a positive side,\nthat means our backups are a lot faster.\n\n504\n00:26:57,240 --> 00:27:01,230\nMy backup that happened at 6 AM had\n5 gigs of data, took 20 minutes.\n\n505\n00:27:01,230 --> 00:27:04,950\nMy backup at noon, it's got 5 gigs\nof data, just took 20 minutes.\n\n506\n00:27:04,950 --> 00:27:08,150\nMy backup at 6 PM,\n5 gigs of data at 20 minutes.\n\n507\n00:27:08,150 --> 00:27:10,270\nThey are all about the same size.\n\n508\n00:27:10,270 --> 00:27:13,770\nNone of these are giant,\nthese backups happen very, very fast\n\n509\n00:27:13,770 --> 00:27:17,380\nbecause they just have the changes\nsince the last transaction log backup.\n\n510\n00:27:18,640 --> 00:27:22,220\nSo on a positive side, backups are fast.\n\n511\n00:27:22,220 --> 00:27:26,610\nOn a negative side, when it comes time to\nrestore, if I have my failure right here\n\n512\n00:27:26,610 --> 00:27:30,050\nat 11 PM, and I want to restore\nall the way to that point,\n\n513\n00:27:30,050 --> 00:27:34,890\nI don't just need my full backup and\nthe latest transaction log backup,\n\n514\n00:27:34,890 --> 00:27:39,070\nI actually need every transaction\nlog backup in that chain.\n\n515\n00:27:39,070 --> 00:27:42,970\nSo if these are four separate files,\nI'll need all four files or four tapes or\n\n516\n00:27:42,970 --> 00:27:44,540\nwhatever it is that I backed up to.\n\n517\n00:27:44,540 --> 00:27:48,750\nSo, restoring from transactional\nbackups can be a little more complex.\n\n518\n00:27:48,750 --> 00:27:49,730\nNow, I say that.\n\n519\n00:27:49,730 --> 00:27:53,410\nI'll show you one later in the show and\nyou'll see it's not that bad.\n\n520\n00:27:53,410 --> 00:27:55,260\nBut it does make it a little more complex.\n\n521\n00:27:55,260 --> 00:27:58,990\nBut the power, being able to run these\nbackups that much more frequently,\n\n522\n00:27:58,990 --> 00:28:00,790\nthat's really valuable, right?\n\n523\n00:28:00,790 --> 00:28:06,080\nIf you're somebody like Amazon.com where\nyou make over a million dollars per hour,\n\n524\n00:28:06,080 --> 00:28:09,220\nright, it's ridiculous the amount of\nmoney that moves through that company,\n\n525\n00:28:09,220 --> 00:28:11,510\ncan you afford to lose 24 hours of data?\n\n526\n00:28:11,510 --> 00:28:12,060\nNo.\n\n527\n00:28:12,060 --> 00:28:13,550\nCan you lose six hours of data?\n\n528\n00:28:13,550 --> 00:28:16,120\nNo.\nYou can't even lose one hour of data.\n\n529\n00:28:16,120 --> 00:28:19,500\nThey wanna lose as\nlittle data as possible.\n\n530\n00:28:19,500 --> 00:28:22,640\nSo they are continually running backups.\n\n531\n00:28:22,640 --> 00:28:24,920\nThey'll run backups every five minutes.\n\n532\n00:28:24,920 --> 00:28:28,750\nAnd you might say to yourself, crap,\nhow do you do backups every five minutes?\n\n533\n00:28:28,750 --> 00:28:32,210\nWell, if you're just\nbacking up changes for\n\n534\n00:28:32,210 --> 00:28:35,000\nthe last five minutes,\nit doesn't take that long.\n\n535\n00:28:35,000 --> 00:28:35,990\nIt's not so bad, right?\n\n536\n00:28:35,990 --> 00:28:37,280\nYou can do that backup.\n\n537\n00:28:37,280 --> 00:28:40,050\nYou can do backups every 15 minutes,\nif you want.\n\n538\n00:28:40,050 --> 00:28:43,880\nEven non-mission-critical\nsystems can afford to do that.\n\n539\n00:28:43,880 --> 00:28:48,100\nYou can set that kind of backup system\nup on any computer, really, and\n\n540\n00:28:48,100 --> 00:28:50,680\nhave that backup running,\nbacking up every 15 minutes,\n\n541\n00:28:50,680 --> 00:28:53,110\njust getting those changes,\nstoring them right there on the drive.\n\n542\n00:28:53,110 --> 00:28:55,380\nYou don't necessarily have to\nship them off somewhere else,\n\n543\n00:28:55,380 --> 00:28:57,350\nmaybe those are stored\nright there on the system.\n\n544\n00:28:57,350 --> 00:28:59,520\nYou plan for different levels of failure.\n\n545\n00:28:59,520 --> 00:29:04,500\nIf the whole server fails, yeah, I can\nlose six hours of data, that'd be okay.\n\n546\n00:29:04,500 --> 00:29:08,580\nBut if it's just somebody accidentally put\nsome bad records in there, I'd like to be\n\n547\n00:29:08,580 --> 00:29:11,230\nable to recover right to that point\nof failure and not lose any data.\n\n548\n00:29:11,230 --> 00:29:13,950\nWell, if I had backups every 15 minutes or\nevery 5 minutes or\n\n549\n00:29:13,950 --> 00:29:15,540\nwhatever, I can do that.\n\n550\n00:29:15,540 --> 00:29:19,330\nSo transaction log backups let us\nrun backups a lot more frequently\n\n551\n00:29:19,330 --> 00:29:22,280\nat the cost of being a little\nmore complex to restore.\n\n552\n00:29:22,280 --> 00:29:28,040\nBut it's really not bad so I don't ever\nuse differentials when it comes to SQL.\n\n553\n00:29:28,040 --> 00:29:28,910\nThe support is there.\n\n554\n00:29:28,910 --> 00:29:29,710\nWe've got the choice.\n\n555\n00:29:29,710 --> 00:29:32,230\nWe saw that in the wizard\nwhen I went to do the backup.\n\n556\n00:29:32,230 --> 00:29:34,350\nI've got full and differential.\n\n557\n00:29:34,350 --> 00:29:37,950\nI can choose that differential\noption if I want it.\n\n558\n00:29:37,950 --> 00:29:41,590\nEven on the simple recovery model\nI can choose differential which is\n\n559\n00:29:41,590 --> 00:29:45,570\nsomewhat like the transaction log backup,\nbut it's got that roll up of changes.\n\n560\n00:29:45,570 --> 00:29:46,640\nSo, I can choose that.\n\n561\n00:29:46,640 --> 00:29:50,660\nBut in real life land,\nyou're usually either gonna go simple and\n\n562\n00:29:50,660 --> 00:29:54,790\njust do full backups, or you're\ngonna do the full recovery model and\n\n563\n00:29:54,790 --> 00:29:58,030\nyou'll do full backups and\ntransaction log backups.\n\n564\n00:29:58,030 --> 00:30:00,400\nI don't use differentials in\nany production environments.\n\n565\n00:30:02,130 --> 00:30:05,990\nBut the option is definitely there so\nbe aware of it and\n\n566\n00:30:05,990 --> 00:30:09,600\non the exam, you'll likely see\nthe option for differential.\n\n567\n00:30:09,600 --> 00:30:12,030\nBut that's kind of\nthe difference between the two.\n\n568\n00:30:12,030 --> 00:30:13,028\nIt comes down to the restore.\n\n569\n00:30:13,028 --> 00:30:16,218\nWhen you do the restore,\nwhich set of data you need to do it.\n\n570\n00:30:16,218 --> 00:30:19,390\nSo each one kind of serves that\ndifferent purpose, you need to\n\n571\n00:30:19,390 --> 00:30:23,730\nchoose what's right for your company to\ndetermine which one's gonna work for you.\n\n572\n00:30:25,410 --> 00:30:30,660\nAll right, well enough about talking about\nthe backup models and the backup types.\n\n573\n00:30:30,660 --> 00:30:32,890\nWe probably wanna see this\nstuff in action, right.\n\n574\n00:30:32,890 --> 00:30:34,950\nWell, looking at the clock,\nI'm out of time for this segment.\n\n575\n00:30:34,950 --> 00:30:36,720\nSo why don't wet stop here and\ntake a break.\n\n576\n00:30:36,720 --> 00:30:39,580\nWhen we get back,\nwe'll back up a database.\n\n577\n00:30:39,580 --> 00:30:41,670\nWe'll get a chance to see\nhow some of that works.\n\n578\n00:30:41,670 --> 00:30:44,020\nAnd then we'll start talking\nabout restoring too.\n\n579\n00:30:44,020 --> 00:30:47,590\nCuz that's kind of of important\nespecially if you're under the gun.\n\n580\n00:30:47,590 --> 00:30:49,479\nAll right let's stop here.\nI'll see you guys back in a few minutes.\n\n581\n00:30:49,479 --> 00:30:57,667\n[MUSIC]\n\n582\n00:30:57,667 --> 00:30:58,927\nAll right welcome back everybody.\n\n583\n00:30:58,927 --> 00:31:03,890\nSo let's talk about actually performing\nthe back up of our data base.\n\n584\n00:31:03,890 --> 00:31:07,620\nSo if we want to back it up\nit's somewhat straightforward.\n\n585\n00:31:07,620 --> 00:31:08,890\nRight?\nWe right-click on the database.\n\n586\n00:31:08,890 --> 00:31:10,890\nLet me cancel out of this and\nwe'll start over.\n\n587\n00:31:10,890 --> 00:31:12,420\nSo we right-click on the database.\n\n588\n00:31:12,420 --> 00:31:15,280\nWe go to Tasks, and we go to Back Up.\n\n589\n00:31:15,280 --> 00:31:17,590\nAnd then this if we're\ndoing a manual backup.\n\n590\n00:31:17,590 --> 00:31:21,530\nIf we want to schedule this, remember we\ncan use the SQL server agent to do it.\n\n591\n00:31:21,530 --> 00:31:24,930\nWe still go this route typically to set\nall of our options, and then you use\n\n592\n00:31:24,930 --> 00:31:29,550\nthe script button to create the script for\nyou that you'll use as a transact SQL\n\n593\n00:31:29,550 --> 00:31:33,490\nagent command for the SQL server agent\nto run, so we've got that option.\n\n594\n00:31:33,490 --> 00:31:35,320\nI'm gonna start with a full backup.\n\n595\n00:31:35,320 --> 00:31:38,640\nI've never backed up my products\ndatabase before, so I wanna go ahead and\n\n596\n00:31:38,640 --> 00:31:41,489\nget a good full backup of it\nright here from the beginning.\n\n597\n00:31:42,780 --> 00:31:47,230\nWhen you go to back it up it asks\nyou what it is you want to back up.\n\n598\n00:31:47,230 --> 00:31:51,826\nAnd see I can choose from the database or\nfiles and file groups, and\n\n599\n00:31:51,826 --> 00:31:55,533\nright here I can start to\npick between my file groups.\n\n600\n00:31:55,533 --> 00:31:59,875\nNow remember from one of the earlier\nepisodes in this show we talked about\n\n601\n00:31:59,875 --> 00:32:02,508\nfile groups and\nhow When we have a database,\n\n602\n00:32:02,508 --> 00:32:06,950\nby default, all of our tables\nare in one file, in that MDF file.\n\n603\n00:32:06,950 --> 00:32:11,610\nBut if we want, for performance reasons,\nwe can add additional files and\n\n604\n00:32:11,610 --> 00:32:13,580\nmove our tables to those other files.\n\n605\n00:32:13,580 --> 00:32:17,360\nAnd when we do that, those tables reside\non completely separate physical hard\n\n606\n00:32:17,360 --> 00:32:19,780\ndrives and we get a performance\nboost out of it, right?\n\n607\n00:32:19,780 --> 00:32:22,583\nOr maybe it's old data we don't\nread from very much, and so\n\n608\n00:32:22,583 --> 00:32:26,640\nwe move it to cheaper hard drives, so\nwe get monetary efficiency out of that.\n\n609\n00:32:26,640 --> 00:32:28,880\nSo there's different reasons for doing it.\n\n610\n00:32:28,880 --> 00:32:31,820\nWell, when you do backups,\nyou can backup and\n\n611\n00:32:31,820 --> 00:32:36,200\nrestore based on those file groups,\nso we can start to choose.\n\n612\n00:32:36,200 --> 00:32:39,910\nWhat database was it we were\nworking with when we did that?\n\n613\n00:32:39,910 --> 00:32:41,580\nWas it human resources that I did that?\n\n614\n00:32:41,580 --> 00:32:44,540\nLet me see if we still have\nthat database lying around.\n\n615\n00:32:44,540 --> 00:32:45,100\nIt wasn't that one.\n\n616\n00:32:45,100 --> 00:32:47,610\nMaybe it was my inventory.\n\n617\n00:32:47,610 --> 00:32:51,660\nIt was one of these databases, and\nI had orders, Oh, this one, yeah.\n\n618\n00:32:51,660 --> 00:32:53,640\nSee how we created all\nthese different orders.\n\n619\n00:32:53,640 --> 00:32:57,340\nSo I had our stores, and\n\n620\n00:32:57,340 --> 00:33:02,010\nwe had the orders table, so one big table\nfor all of the orders in my company.\n\n621\n00:33:02,010 --> 00:33:06,970\nBut I broke it up so that each store\nwould have its orders partitioned and\n\n622\n00:33:06,970 --> 00:33:09,080\nlaid across different file groups.\n\n623\n00:33:09,080 --> 00:33:12,370\nThat way each store would not be\ncontending against the other for\n\n624\n00:33:12,370 --> 00:33:13,670\ndisc performance.\n\n625\n00:33:13,670 --> 00:33:16,030\nBut I can use that for\nbackup and restore too.\n\n626\n00:33:16,030 --> 00:33:17,780\nIf I go to backup this database.\n\n627\n00:33:18,890 --> 00:33:20,340\nWhen I go to backup inventory.\n\n628\n00:33:20,340 --> 00:33:23,070\nI go to tasks and backup.\n\n629\n00:33:23,070 --> 00:33:27,950\nI can do a full backup of the whole\ndatabase or I can go to files and groups.\n\n630\n00:33:27,950 --> 00:33:29,490\nAnd right here I can pick.\n\n631\n00:33:29,490 --> 00:33:31,750\nAnd see how I've got my table orders?\n\n632\n00:33:31,750 --> 00:33:35,840\nAnd then I've got orders for store one,\nstore two, store three, and store four.\n\n633\n00:33:35,840 --> 00:33:37,170\nI can pick and choose.\n\n634\n00:33:37,170 --> 00:33:40,370\nAnd so maybe I just want to back\nup store four, and that's it.\n\n635\n00:33:40,370 --> 00:33:41,400\nWell, we don't normally do that.\n\n636\n00:33:41,400 --> 00:33:43,280\nWe normally back up the whole thing,\nright?\n\n637\n00:33:43,280 --> 00:33:45,320\nBut when we go to restore,\n\n638\n00:33:45,320 --> 00:33:49,070\nmaybe I'm just having problems\nwith orders from store four.\n\n639\n00:33:49,070 --> 00:33:53,450\nI don't want to wipe out store three or\nstore two, I just want to fix store four.\n\n640\n00:33:53,450 --> 00:33:56,450\nSo I can do a restore of\njust that file group.\n\n641\n00:33:56,450 --> 00:33:58,810\nHaving that functionality\nis really powerful.\n\n642\n00:33:58,810 --> 00:34:02,730\nAnd these might be entire tables that\nare put in different file groups or\n\n643\n00:34:02,730 --> 00:34:04,070\nthey might be partitions.\n\n644\n00:34:04,070 --> 00:34:06,250\nYou don't have to use a partition scheme,\nbut\n\n645\n00:34:06,250 --> 00:34:10,040\nif you do it makes this kind\nof topology right here.\n\n646\n00:34:10,040 --> 00:34:12,490\nAll right, well, I want to back\nup the whole thing, right, so\n\n647\n00:34:12,490 --> 00:34:17,490\nI'm just going to back up this whole\ndatabase, so my inventory database,\n\n648\n00:34:17,490 --> 00:34:18,680\nand so it gives it a little name.\n\n649\n00:34:18,680 --> 00:34:21,150\nThe name you can change\nto whatever you want.\n\n650\n00:34:21,150 --> 00:34:24,960\nMine's just saying inventory database\nfull backup, nothing special there.\n\n651\n00:34:24,960 --> 00:34:27,720\nYou set a description so\nyou can remember what the heck it is and\n\n652\n00:34:27,720 --> 00:34:31,040\nthen after that you can\nset an expiration date.\n\n653\n00:34:31,040 --> 00:34:33,320\nNow why would we have an expiration date?\n\n654\n00:34:33,320 --> 00:34:37,530\nWell, the backup itself by default\nis going to be good forever.\n\n655\n00:34:37,530 --> 00:34:43,450\nSo you can actually restore this whenever\nyou want, but it might be for compliance\n\n656\n00:34:43,450 --> 00:34:47,590\nreasons that you don't wanna have all\ndata laying around in your office.\n\n657\n00:34:47,590 --> 00:34:48,720\nA lot of organizations have rules,\n\n658\n00:34:48,720 --> 00:34:52,590\nwhere they say data over two years or\nover seven years old must be destroyed.\n\n659\n00:34:52,590 --> 00:34:56,300\nWell, what if this was backed up to\na tape and the tape was stuck on a shelf?\n\n660\n00:34:56,300 --> 00:34:58,200\nI've got to remember to destroy the tape.\n\n661\n00:34:58,200 --> 00:34:59,380\nWhat if I forget?\n\n662\n00:34:59,380 --> 00:35:01,900\nWell I could set an expiration on it.\n\n663\n00:35:01,900 --> 00:35:04,270\nAnd if I set the back up to\nexpire at a certain time.\n\n664\n00:35:04,270 --> 00:35:08,080\nThat will remove it from my backup\nhistory so I won't restore from it.\n\n665\n00:35:08,080 --> 00:35:11,710\nAnd if I try and feed that tape in,\nit'll tell me that backup is expired and\n\n666\n00:35:11,710 --> 00:35:12,830\nit won't let me restore it.\n\n667\n00:35:12,830 --> 00:35:14,230\nIt's not the perfect solution.\n\n668\n00:35:14,230 --> 00:35:16,800\nYou can still get the data off of\nthat tape if you really want to.\n\n669\n00:35:16,800 --> 00:35:19,410\nAll you have to do is set\nthe clock back on your system.\n\n670\n00:35:19,410 --> 00:35:22,415\nSo it's not like a be all,\nend all protection level.\n\n671\n00:35:22,415 --> 00:35:25,205\nBut it's a way of reminding you that\nyou are dealing with data that's older\n\n672\n00:35:25,205 --> 00:35:27,005\nthan what you should have had, right?\n\n673\n00:35:27,005 --> 00:35:28,425\nI'll just leave mine to not expire.\n\n674\n00:35:30,005 --> 00:35:34,235\nThe next field here is just going to\nask us where we want to back up to and\n\n675\n00:35:34,235 --> 00:35:36,505\nnotice I've got disk and tape.\n\n676\n00:35:36,505 --> 00:35:39,495\nIf I back up to a tape drive,\nwell, I'll have that option.\n\n677\n00:35:39,495 --> 00:35:41,065\nWell, I don't have one,\nso it's grayed out, but\n\n678\n00:35:41,065 --> 00:35:43,505\nif you have a tape drive physically\nattached to that server and\n\n679\n00:35:43,505 --> 00:35:44,930\nyou'll be ready to rock.\n\n680\n00:35:44,930 --> 00:35:48,240\nAnd that button will light up and\nyou will be able to choose it.\n\n681\n00:35:48,240 --> 00:35:49,030\nI've got disc.\n\n682\n00:35:49,030 --> 00:35:51,566\nNow, it's gonna list a backup location so\n\n683\n00:35:51,566 --> 00:35:56,770\nit's showing me right here this particular\nbackup location and all it is is a file.\n\n684\n00:35:56,770 --> 00:35:59,240\nA file on the hard drive and\nthis is the default one.\n\n685\n00:35:59,240 --> 00:36:03,850\nThe default one is in the same\ndirectory as your Sequel instance\n\n686\n00:36:03,850 --> 00:36:05,460\nin a folder called backup.\n\n687\n00:36:05,460 --> 00:36:09,332\nIt just creates a file called\nthe database, so inventory, dot BAK.\n\n688\n00:36:09,332 --> 00:36:11,937\nThe file extension really\ndoesn't actually matter,\n\n689\n00:36:11,937 --> 00:36:15,120\nyou can call it whatever the heck\nyou want, but BAK is the default.\n\n690\n00:36:16,620 --> 00:36:18,820\nYou don't have to put it\nin this folder either.\n\n691\n00:36:18,820 --> 00:36:20,340\nAnd in fact, you really don't want to.\n\n692\n00:36:20,340 --> 00:36:23,700\nYou want this to be on, at least,\non separate physical drives,\n\n693\n00:36:23,700 --> 00:36:25,600\nthat way you can survive a drive failure.\n\n694\n00:36:25,600 --> 00:36:29,790\nBut even better would have this reside in,\nlike, a network share, or somewhere else\n\n695\n00:36:29,790 --> 00:36:34,400\nwhere it's being replicated, and\ngetting taken off of this physical system.\n\n696\n00:36:34,400 --> 00:36:38,060\nSo we can add in multiple locations,\nor we can remove and change.\n\n697\n00:36:38,060 --> 00:36:41,410\nIf you put multiple locations,\nit'll actually back up to both of them.\n\n698\n00:36:41,410 --> 00:36:43,510\nBut I'm just gonna remove\nthe one that's in there.\n\n699\n00:36:43,510 --> 00:36:45,530\nAnd I'm gonna add in a new one.\n\n700\n00:36:45,530 --> 00:36:49,790\nAnd for this new one, I'll just browse and\ngo and pick that location.\n\n701\n00:36:49,790 --> 00:36:53,690\nNow, notice it's given me an option\nhere to pick a file name.\n\n702\n00:36:53,690 --> 00:36:58,330\nSo, I can browse and pick a one-time file\nname right now or pick a back-up device.\n\n703\n00:36:58,330 --> 00:37:00,310\nWhat's a back-up device?\n\n704\n00:37:00,310 --> 00:37:02,160\nWell, in the old days they were tapes.\n\n705\n00:37:02,160 --> 00:37:07,660\nBut, in the new days, the back-up devices\nare just predetermined file locations,\n\n706\n00:37:07,660 --> 00:37:09,670\nand I don't have any right now,\nso it's grayed out.\n\n707\n00:37:09,670 --> 00:37:11,200\nI can't pick anything.\n\n708\n00:37:11,200 --> 00:37:14,970\nBut if I know I'm going to be doing\nbackups like this a lot, I can\n\n709\n00:37:14,970 --> 00:37:19,490\npredefine that folder as a backup device,\nand it will make life a lot easier for me.\n\n710\n00:37:19,490 --> 00:37:22,610\nI can just choose it out of the drop down\nbox instead of having to type this in.\n\n711\n00:37:22,610 --> 00:37:26,740\nAnd when we run scripts to do the backup,\ninstead of having to point to a full file\n\n712\n00:37:26,740 --> 00:37:28,900\npath, you can just point\nto the device name.\n\n713\n00:37:28,900 --> 00:37:30,660\nSo think of them as aliases.\n\n714\n00:37:30,660 --> 00:37:33,630\nA backup device is simply an alias for\n\n715\n00:37:33,630 --> 00:37:36,510\na folder location somewhere on your drive,\nall right?\n\n716\n00:37:36,510 --> 00:37:39,810\nIf I want to set them ahead of time,\nlet me just cancel this.\n\n717\n00:37:39,810 --> 00:37:43,580\nBack in our Sequel management studio,\nyou can go to server, objects.\n\n718\n00:37:43,580 --> 00:37:46,300\nIt is set at the server level,\nnot at the database level.\n\n719\n00:37:46,300 --> 00:37:51,150\nSo I'm going into server objects,\nand then backup devices.\n\n720\n00:37:51,150 --> 00:37:53,880\nAnd right there I'll see any backup\ndevice that I've got to find.\n\n721\n00:37:53,880 --> 00:37:54,490\nI don't have any.\n\n722\n00:37:56,040 --> 00:37:59,840\nSo I'll just right click on there and\nchoose new backup device, and\n\n723\n00:37:59,840 --> 00:38:00,940\nwe get a real simple wizard.\n\n724\n00:38:00,940 --> 00:38:06,340\nI just give it a name, and maybe I'll\ncall this one, inventory backup.\n\n725\n00:38:08,320 --> 00:38:11,950\nAnd for the location, you can pick\na tape drive if you've got one, or\n\n726\n00:38:11,950 --> 00:38:13,170\nyou can pick a file.\n\n727\n00:38:13,170 --> 00:38:14,870\nAnd so, I'm gonna browse to my H.\n\n728\n00:38:14,870 --> 00:38:16,461\nWait, where did I put that?\n\n729\n00:38:16,461 --> 00:38:17,983\nG, there we go, my G drive.\n\n730\n00:38:17,983 --> 00:38:24,380\nG:/backup and\nI'm gonna call it inventory.bak.\n\n731\n00:38:24,380 --> 00:38:26,668\nAll right?\n\n732\n00:38:26,668 --> 00:38:31,720\nSo, G:/backup/inventory.bak,\nthat's where I'm gonna back up that.\n\n733\n00:38:31,720 --> 00:38:34,860\nAnd then I can create other devices for\nmy other backups.\n\n734\n00:38:34,860 --> 00:38:37,150\nSo, maybe I want one for\nmy products database.\n\n735\n00:38:37,150 --> 00:38:42,582\nSo, I'll create one here called\nProducts Backup and I'll point\n\n736\n00:38:42,582 --> 00:38:48,640\nthat one to g:/backup/products.bak.\n\n737\n00:38:48,640 --> 00:38:50,100\nAll right.\n\n738\n00:38:50,100 --> 00:38:54,290\nYou can actually store backups for\nmore than one database in a single file.\n\n739\n00:38:54,290 --> 00:38:57,100\nYou can actually store more than\none backup of the same database in\n\n740\n00:38:57,100 --> 00:38:58,070\na single file.\n\n741\n00:38:58,070 --> 00:39:02,960\nSo the file is really a container and\nit can have multiple backups of\n\n742\n00:39:02,960 --> 00:39:05,930\nmultiple databases or multiple backups\nof the same database in there and\n\n743\n00:39:05,930 --> 00:39:07,700\nit keeps them all nice and separate.\n\n744\n00:39:07,700 --> 00:39:11,330\nSo I really only need one backup device.\n\n745\n00:39:11,330 --> 00:39:14,370\nBut if I want to have a little bit of\ngranularity, especially when it comes to\n\n746\n00:39:14,370 --> 00:39:17,680\nreplicating this data somewhere else you\nwould normally define more than one.\n\n747\n00:39:17,680 --> 00:39:20,490\nIt doesn't cost you any money so\nyou might as well go ahead and do it and\n\n748\n00:39:20,490 --> 00:39:22,280\nit gives you a little more flexibility.\n\n749\n00:39:22,280 --> 00:39:24,860\nSo now I've got these two\ndifferent devices defined and\n\n750\n00:39:24,860 --> 00:39:28,980\nthey're just aliases that\npoint to that folder location.\n\n751\n00:39:28,980 --> 00:39:31,360\nSo now when I go to back\nup my products database or\n\n752\n00:39:31,360 --> 00:39:35,540\nmy inventory database I'll go to tasks and\n\n753\n00:39:35,540 --> 00:39:40,940\nbackup, and for that destination,\ninstead of this default location,\n\n754\n00:39:40,940 --> 00:39:46,040\nI'll remove that and I'll hit add, and now\nI've got backup devices I can pick from.\n\n755\n00:39:46,040 --> 00:39:48,930\nSo I don't have to remember where that\nfolder is or what the file name is.\n\n756\n00:39:48,930 --> 00:39:50,360\nI don't have to remember that stuff.\n\n757\n00:39:50,360 --> 00:39:53,150\nI can just say hey, I'm doing\na backup of my inventory database.\n\n758\n00:39:53,150 --> 00:39:54,940\nI'll choose that backup\nfolder right there.\n\n759\n00:39:57,560 --> 00:39:58,280\nAll right.\n\n760\n00:39:58,280 --> 00:40:00,208\nNow, technically that's\nall I need to provide.\n\n761\n00:40:00,208 --> 00:40:02,552\nI can hit OK and my backup will execute.\n\n762\n00:40:02,552 --> 00:40:06,395\nBut you do have a few other options up\nhere if I click on the options tab.\n\n763\n00:40:06,395 --> 00:40:08,681\nYou'll see a couple of\nneat little choices.\n\n764\n00:40:08,681 --> 00:40:12,940\nI mentioned we could have more\nthan one backup in the file.\n\n765\n00:40:12,940 --> 00:40:13,960\nThat's the default.\n\n766\n00:40:13,960 --> 00:40:16,000\nAnd so if you look at the top here.\n\n767\n00:40:16,000 --> 00:40:18,620\nSee how it says, Overwrite media,\n\n768\n00:40:18,620 --> 00:40:23,420\nBack up to existing media set,\nAppend to the existing backup set, right.\n\n769\n00:40:23,420 --> 00:40:26,168\nSo if there's something already in\nthe file, it's just going to add on to it.\n\n770\n00:40:26,168 --> 00:40:29,730\nAll right, well, what's wrong with that?\n\n771\n00:40:29,730 --> 00:40:30,710\nWell, the file gets bigger.\n\n772\n00:40:30,710 --> 00:40:33,650\nIt gets bigger, and bigger,\nand bigger over time.\n\n773\n00:40:33,650 --> 00:40:37,030\nSo maybe I don't want to just add to it.\n\n774\n00:40:37,030 --> 00:40:38,820\nMaybe I want to overwrite it.\n\n775\n00:40:38,820 --> 00:40:42,370\nI want to overwrite it, just wipe it out\nempty, and put this backup in there.\n\n776\n00:40:42,370 --> 00:40:44,649\nSo you can override that behavior and\nchange that.\n\n777\n00:40:47,060 --> 00:40:50,750\nYou can also do things like check media\nset name and backup set expiration.\n\n778\n00:40:50,750 --> 00:40:53,990\nWhen you do the backup you can make sure\nthat it's got the proper name assigned to\n\n779\n00:40:53,990 --> 00:40:56,600\nit, and that the expiration\nis not already flagged.\n\n780\n00:40:56,600 --> 00:40:57,990\nNormally we don't worry\nabout that anymore.\n\n781\n00:40:57,990 --> 00:41:00,110\nThat was more important with tapes.\n\n782\n00:41:00,110 --> 00:41:04,170\nWith tapes, you could set it so that when\nit backed up over a tape it looked to see\n\n783\n00:41:04,170 --> 00:41:06,690\nthat the old backup on\nthere was already expired.\n\n784\n00:41:06,690 --> 00:41:09,560\nIf it wasn't expired yet it would\nstop you from overwriting the tape.\n\n785\n00:41:09,560 --> 00:41:13,450\nYou don't wanna overwrite a tape that has\na good backup on there that's not expired,\n\n786\n00:41:13,450 --> 00:41:15,170\nso it would check for that.\n\n787\n00:41:15,170 --> 00:41:16,630\nWith files we don't\nnormally worry about it.\n\n788\n00:41:17,900 --> 00:41:21,420\nAnd then you've got the option to just\nbackup to an entirely new media set.\n\n789\n00:41:21,420 --> 00:41:24,270\nSo, there's already the one\nmedia set that's in the file.\n\n790\n00:41:24,270 --> 00:41:26,130\nYou can create an entirely new one.\n\n791\n00:41:26,130 --> 00:41:27,700\nIt'll basically create a second file.\n\n792\n00:41:29,160 --> 00:41:32,240\nAll right, verify backup when finished.\n\n793\n00:41:32,240 --> 00:41:35,880\nThis is one that a lot\nof people argue over.\n\n794\n00:41:35,880 --> 00:41:37,320\nBy default it doesn't do it.\n\n795\n00:41:37,320 --> 00:41:41,900\nWhen you do a backup,\nit backs up all of the data to a file, and\n\n796\n00:41:41,900 --> 00:41:45,060\nit assumes that no errors\noccurred during the backup.\n\n797\n00:41:45,060 --> 00:41:47,410\nIn other words, when we read the data\nthat everything was intact, and\n\n798\n00:41:47,410 --> 00:41:49,030\nwhen we wrote to the hard drive,\n\n799\n00:41:49,030 --> 00:41:52,470\nthere were no hard drive errors\nthat caused data to not be written.\n\n800\n00:41:53,560 --> 00:41:58,023\nAll right, If you turn on Verify after\nthe backup, it'll then go and compare,\n\n801\n00:41:58,023 --> 00:42:02,680\nrecord by record, what's in the file\nwith what's in the actual database.\n\n802\n00:42:02,680 --> 00:42:04,130\nAnd that way, if there was hard drive or\n\n803\n00:42:04,130 --> 00:42:07,210\nmemory corruption while the file's\nbeing written, it'll be detected.\n\n804\n00:42:07,210 --> 00:42:08,250\nThe Problem?\n\n805\n00:42:08,250 --> 00:42:11,090\nIt doubles the amount of\ntime your backup takes.\n\n806\n00:42:11,090 --> 00:42:15,630\nIf your backup takes six hours,\nyour verify will take another six hours.\n\n807\n00:42:15,630 --> 00:42:16,700\nAnd so a lot of people hate that.\n\n808\n00:42:16,700 --> 00:42:17,890\nA lot of people say, you know what,\n\n809\n00:42:17,890 --> 00:42:22,950\nI would rather take frequent backups than\nhave to test every one for a failure.\n\n810\n00:42:22,950 --> 00:42:26,455\nBut the problem is you might be doing\nfrequent backups where every one of them\n\n811\n00:42:26,455 --> 00:42:27,510\nhas corruption in it.\n\n812\n00:42:27,510 --> 00:42:29,738\nSo it is a good idea to verify the backup,\nbut\n\n813\n00:42:29,738 --> 00:42:32,340\nit will extend the amount\nof time the backup takes.\n\n814\n00:42:33,820 --> 00:42:37,150\nYou've also got perform checks\non before writing to media.\n\n815\n00:42:37,150 --> 00:42:40,970\nWhenever a file is being written it does\na little check sum on it to determine\n\n816\n00:42:40,970 --> 00:42:44,020\nwhether or not there's corruption,\nor to be able to detect corruption.\n\n817\n00:42:44,020 --> 00:42:49,290\nSo you can create the check sum before or\nafter it's been written to the hard drive.\n\n818\n00:42:49,290 --> 00:42:51,920\nYou normally want to to do it after\nwriting to the hard drive, and\n\n819\n00:42:51,920 --> 00:42:55,830\nthat's the default, because writing to the\nhard drive might introduce corruption and\n\n820\n00:42:55,830 --> 00:42:57,720\ncalculating the checksum will show that.\n\n821\n00:42:57,720 --> 00:43:00,610\nBut if you want to bypass that,\nif you know you're writing to something\n\n822\n00:43:00,610 --> 00:43:03,760\nvery reliable like SSD,\nthen you might not want to do that.\n\n823\n00:43:03,760 --> 00:43:06,800\nSo you can turn it to where it does the\nchecksum prior to writing to the drive.\n\n824\n00:43:08,780 --> 00:43:10,260\nAnd then continue on error.\n\n825\n00:43:10,260 --> 00:43:14,550\nThe default is if an error happens that's\ndetected the backup stops, and it fails.\n\n826\n00:43:15,640 --> 00:43:19,705\nBut if you're backing up more than one\nfile group you might want to continue on,\n\n827\n00:43:19,705 --> 00:43:22,620\ncuz it might be able to successfully\nbackup the other file groups and\n\n828\n00:43:22,620 --> 00:43:23,740\nat least you get that.\n\n829\n00:43:23,740 --> 00:43:24,590\nRight, better than nothing.\n\n830\n00:43:24,590 --> 00:43:27,980\nIf you're just backing up one file group,\nthis option doesn't really matter.\n\n831\n00:43:27,980 --> 00:43:30,272\nBut if you have more than one file group,\nit does make a difference.\n\n832\n00:43:30,272 --> 00:43:33,320\nAll right, the other options are greyed\n\n833\n00:43:33,320 --> 00:43:37,520\nout on this screen because we are not\ndoing a transaction log backup.\n\n834\n00:43:37,520 --> 00:43:39,210\nI'll talk about those a little bit later.\n\n835\n00:43:40,320 --> 00:43:42,560\nAnd then down here we've\ngot backup compression.\n\n836\n00:43:42,560 --> 00:43:46,050\nThe default is to use the server setting,\nwhich is to not do backup compression.\n\n837\n00:43:46,050 --> 00:43:48,470\nSo if I'm backing up\na hundred gig database,\n\n838\n00:43:48,470 --> 00:43:52,370\nthat's got 90 gigs of data in it,\nmy back up will be 90 gigs in size.\n\n839\n00:43:52,370 --> 00:43:54,930\nAll right, it matches the data.\n\n840\n00:43:54,930 --> 00:43:59,590\nBut if you turn on compression\nit'll actually apply a light zip\n\n841\n00:43:59,590 --> 00:44:03,060\ncompression on it, and try and\nshrink the database size down.\n\n842\n00:44:03,060 --> 00:44:06,320\nIf you've got a lot of binary\ndata that doesn't really help.\n\n843\n00:44:06,320 --> 00:44:09,490\nBut if you've got a lot of text\ndata is does help quite a bit.\n\n844\n00:44:09,490 --> 00:44:11,490\nAnd it'll compress that and\nget the backup to be smaller.\n\n845\n00:44:13,120 --> 00:44:16,400\nI'll just leave it at the default.\n\n846\n00:44:16,400 --> 00:44:20,190\nAll right, so those are our main options\nin here as far as doing the backup.\n\n847\n00:44:20,190 --> 00:44:24,390\nNow, if I'm wanting to automate this\nto run every night at midnight,\n\n848\n00:44:24,390 --> 00:44:25,300\nI could hit script.\n\n849\n00:44:26,740 --> 00:44:30,590\nAnd right back here it'll give me\nthe transact SQL for executing that, for\n\n850\n00:44:30,590 --> 00:44:32,130\nrunning it and doing that backup.\n\n851\n00:44:32,130 --> 00:44:36,388\nAnd there's a bunch of stuff in here,\nreally it's this first line that's\n\n852\n00:44:36,388 --> 00:44:40,716\nimportant, where it says backup\ndatabase inventory to inventory backup,\n\n853\n00:44:40,716 --> 00:44:44,500\nthat's that database alias or\nthe backup device alias.\n\n854\n00:44:44,500 --> 00:44:46,300\nAnd then it just gives it a name and\nso on.\n\n855\n00:44:46,300 --> 00:44:50,200\nSo it's really just this command\nright here that does the true work.\n\n856\n00:44:50,200 --> 00:44:54,110\nBackup database inventory\nto inventory backup.\n\n857\n00:44:54,110 --> 00:44:55,290\nAll right.\n\n858\n00:44:55,290 --> 00:44:58,880\nAnd if I'm ready to run it,\nI can just come in here and\n\n859\n00:44:58,880 --> 00:45:01,450\nhit OK, and the backup's gonna run.\n\n860\n00:45:01,450 --> 00:45:02,135\nThere we go.\n\n861\n00:45:02,135 --> 00:45:03,460\n[LAUGH].\nMy database really doesn't have\n\n862\n00:45:03,460 --> 00:45:05,930\na lot of data in it so the backup\nis gonna happen very, very quickly.\n\n863\n00:45:07,860 --> 00:45:13,130\nAll right now the backup that I just did\nis a full backup, I backed up the entire\n\n864\n00:45:13,130 --> 00:45:18,660\ndatabase so it's backed up, it's there,\nif I go down here to my backup devices.\n\n865\n00:45:18,660 --> 00:45:22,250\nAnd I'll take my inventory backup,\nI'm just gonna pull up its properties.\n\n866\n00:45:25,200 --> 00:45:28,470\nInside of the properties for my backup,\nthere's not a lot of options in here,\n\n867\n00:45:28,470 --> 00:45:31,920\nbut you can go to media contents,\nand I can see what's in there.\n\n868\n00:45:31,920 --> 00:45:33,950\nRemember I said we could have\nmore than one backup in there?\n\n869\n00:45:33,950 --> 00:45:36,790\nSo it's gonna list all\nthe backups that I've got, and it\n\n870\n00:45:36,790 --> 00:45:41,490\ndoes it in this window that's not really\nbig enough for the data that it shows.\n\n871\n00:45:41,490 --> 00:45:45,910\nBut I can see right here the backup\nthat we did was inventory full database.\n\n872\n00:45:45,910 --> 00:45:48,610\nIt was a database backup,\nit's a full backup.\n\n873\n00:45:48,610 --> 00:45:50,530\nI can see the server that\nit was backed up from,\n\n874\n00:45:50,530 --> 00:45:54,530\nthe name of the database, the date\nthat it was done on, and so on, right.\n\n875\n00:45:54,530 --> 00:45:57,090\nSo there's my full backup sitting\nright there in that file.\n\n876\n00:45:58,110 --> 00:46:01,810\nThat file is stored right here on this\nserver right, so it's here if I browse\n\n877\n00:46:01,810 --> 00:46:06,365\nthrough my G drive, and go into backup,\nthere it is inventory.back.\n\n878\n00:46:06,365 --> 00:46:09,250\nOkay, great, so I've got it,\nwonderful, I'm done.\n\n879\n00:46:09,250 --> 00:46:13,130\nWell that file's right here on this\nserver, if my C drive fails or\n\n880\n00:46:13,130 --> 00:46:15,170\nmy E drive or whatever, they fail.\n\n881\n00:46:15,170 --> 00:46:16,500\nThe G drive's a separate hard drive.\n\n882\n00:46:16,500 --> 00:46:17,450\nSo I'm fine there.\n\n883\n00:46:17,450 --> 00:46:19,740\nI've got the file,\nI can go and restore it, right.\n\n884\n00:46:19,740 --> 00:46:23,020\nBut if this server fails,\nI've got this data sitting right here and\n\n885\n00:46:23,020 --> 00:46:24,010\nwe lose it, right.\n\n886\n00:46:24,010 --> 00:46:28,100\nSo we had a question during\nthe break in the chatroom about\n\n887\n00:46:28,100 --> 00:46:30,170\nhow do we replicate it somewhere else?\n\n888\n00:46:30,170 --> 00:46:34,460\nAnd I threw a series of options In there.\n\n889\n00:46:34,460 --> 00:46:36,280\nLet me, you know what I should do,\nI should take these and\n\n890\n00:46:36,280 --> 00:46:37,320\nput them in the notes.\n\n891\n00:46:37,320 --> 00:46:41,920\nSo let me add these to my show notes so\nthat you guys will have them there, too.\n\n892\n00:46:41,920 --> 00:46:44,960\nBut there's a number of software\nproducts that are out there for\n\n893\n00:46:44,960 --> 00:46:49,740\nreplicating files, and\nyou can do it very expensively.\n\n894\n00:46:49,740 --> 00:46:52,600\nIf you're copying this to a physical SAN,\n\n895\n00:46:52,600 --> 00:46:55,830\nyour SAN might have built in\nreplication software that'll do this.\n\n896\n00:46:55,830 --> 00:46:57,500\nThat's the expensive way but it's very,\n\n897\n00:46:57,500 --> 00:47:01,850\nvery reliable, but\nthere are other options out there.\n\n898\n00:47:01,850 --> 00:47:05,950\nThere are some that are free,\nand some that are not so free.\n\n899\n00:47:05,950 --> 00:47:09,799\nSo let me just take some of these and,\nI'll clean these up after the show.\n\n900\n00:47:09,799 --> 00:47:14,011\nBut some of the ones I mentioned, EMC has\na software product called Replistore, and\n\n901\n00:47:14,011 --> 00:47:17,691\nReplistore will take your files and\nreplicate them to another geographic\n\n902\n00:47:17,691 --> 00:47:20,540\nlocation, so\nyou can send them somewhere else.\n\n903\n00:47:20,540 --> 00:47:22,180\nIt costs money though.\n\n904\n00:47:22,180 --> 00:47:24,630\nMicrosoft Sync Toy is a free\nutility that'll do it.\n\n905\n00:47:24,630 --> 00:47:29,351\nYou can schedule it to run once a day, or\nwhen changes are detected, or whatever and\n\n906\n00:47:29,351 --> 00:47:30,440\nit can replicate.\n\n907\n00:47:30,440 --> 00:47:33,130\nDouble Take is another\none that's out there.\n\n908\n00:47:33,130 --> 00:47:35,730\nDouble Take costs money,\nI'm not the biggest fan of it.\n\n909\n00:47:35,730 --> 00:47:38,460\nAnd Microsoft has their\nWindows Azure backup.\n\n910\n00:47:38,460 --> 00:47:42,110\nAnd Windows Azure backup, we actually\ndid a video a few weeks ago on how\n\n911\n00:47:42,110 --> 00:47:45,780\nto set that up, and so I'll get\nthe URL to that video put in here too.\n\n912\n00:47:45,780 --> 00:47:50,423\nSo, those are all some different options\nwe can use to replicate our data to\n\n913\n00:47:50,423 --> 00:47:51,685\nanother location.\n\n914\n00:47:52,765 --> 00:47:54,385\nBut that file right there, that's got it.\n\n915\n00:47:54,385 --> 00:47:57,657\nAnd as I start to take more backups,\nthey're going to append,\n\n916\n00:47:57,657 --> 00:47:59,713\nthey're gonna add onto that, right.\n\n917\n00:47:59,713 --> 00:48:04,118\nSo if I go back here and I take another\nbackup of my inventory database So\n\n918\n00:48:04,118 --> 00:48:08,524\nI'll just go and do a new backup,\nyou know, same basic options here,\n\n919\n00:48:08,524 --> 00:48:09,740\nlet me fire it off.\n\n920\n00:48:10,740 --> 00:48:12,260\nNow when I go to my inventory backup and\n\n921\n00:48:12,260 --> 00:48:16,260\nI check its media contents, I'll see\nit's got two backups sitting in there.\n\n922\n00:48:16,260 --> 00:48:18,543\nNow, why would I want two backups?\n\n923\n00:48:18,543 --> 00:48:22,583\nWell, maybe there was a problem\nthat happened four days ago, and\n\n924\n00:48:22,583 --> 00:48:24,578\nI just didn't notice, right?\n\n925\n00:48:24,578 --> 00:48:28,815\nWell, now a few days have gone by which\nmeans a few more backups have happened.\n\n926\n00:48:28,815 --> 00:48:31,928\nSo if I want a fix, if I wanna restore\nback to before the problem occurred,\n\n927\n00:48:31,928 --> 00:48:34,959\nI don't need yesterday's backup,\nI need a backup from four days ago.\n\n928\n00:48:34,959 --> 00:48:40,650\nSo keeping historical backups like\nthis can be really handy, right,\n\n929\n00:48:40,650 --> 00:48:45,767\nwe can have that older data, and\nso that is a useful thing to do.\n\n930\n00:48:45,767 --> 00:48:51,280\nAll right, so, we've got that,\nthat's a full backup.\n\n931\n00:48:51,280 --> 00:48:54,000\nWhat about a transaction log backup or\na differential?\n\n932\n00:48:54,000 --> 00:48:55,250\nWell, they are just as easy.\n\n933\n00:48:55,250 --> 00:48:57,510\nWe just change that one\noption when we do the backup.\n\n934\n00:48:57,510 --> 00:49:01,677\nWhen I back up that payroll database, or\ninventory database, the transaction logs\n\n935\n00:49:01,677 --> 00:49:05,910\nalready exist, and they just have what's\nchanged since the last full backup.\n\n936\n00:49:05,910 --> 00:49:07,370\nSo let's make a change.\n\n937\n00:49:07,370 --> 00:49:11,200\nI'm gonna go and add in a new table, so it\nlooks like I've already got a test table,\n\n938\n00:49:11,200 --> 00:49:14,990\norders, products, let's add a tax table.\n\n939\n00:49:14,990 --> 00:49:18,460\nSo I'm gonna create a table here and\nI'll call it maybe like, I'll have that,\n\n940\n00:49:18,460 --> 00:49:23,730\nwhoops, a state column and\na tax rate column,\n\n941\n00:49:25,290 --> 00:49:29,537\nand let's call this table tax rates.\n\n942\n00:49:29,537 --> 00:49:35,020\nAll right, so I just added this\nnew table called tax rates.\n\n943\n00:49:35,020 --> 00:49:40,760\nAnd let me just refresh that listing so\nI can see my tax rate table right there.\n\n944\n00:49:40,760 --> 00:49:44,030\nAll right,\nnow I did a full backup a few minutes ago.\n\n945\n00:49:44,030 --> 00:49:47,690\nThe full backup doesn't have the tax\nrate table in it because I just created\n\n946\n00:49:47,690 --> 00:49:48,880\nit, all right?\n\n947\n00:49:48,880 --> 00:49:53,000\nWell, now that tax rate table exists,\n\n948\n00:49:53,000 --> 00:49:56,170\nit's in the database, but\nit's in the transaction logs also.\n\n949\n00:49:56,170 --> 00:50:01,360\nThe transaction logs have a record of\nme creating that table, and when that\n\n950\n00:50:01,360 --> 00:50:05,100\nwas 100% written to the transaction log\nthen it wrote it into the database too.\n\n951\n00:50:05,100 --> 00:50:08,054\nSo it's now in the database,\nit's just not in the full backup.\n\n952\n00:50:08,054 --> 00:50:13,171\nIf I take a full backup right now, it'll\nback up the database with the tax rate\n\n953\n00:50:13,171 --> 00:50:18,395\ntable and it'll flush out the logs, but\nit's backing up the whole database.\n\n954\n00:50:18,395 --> 00:50:20,219\nIf I just back up the transaction log,\n\n955\n00:50:20,219 --> 00:50:23,354\nit'll just have the fact that I\ncreated that table which is really\n\n956\n00:50:23,354 --> 00:50:26,720\nthe only difference from the full\nbackup I took just a few moments ago.\n\n957\n00:50:26,720 --> 00:50:31,190\nSo I don't need to do a full backup,\nI can just do a transaction log backup.\n\n958\n00:50:31,190 --> 00:50:34,700\nSo oh shoot, I clicked on diagramming.\n\n959\n00:50:34,700 --> 00:50:36,680\nLet me go to inventory here.\n\n960\n00:50:36,680 --> 00:50:41,860\nSo I'm gonna go into Tasks and Backup and\nthis time when I backup the inventory\n\n961\n00:50:41,860 --> 00:50:46,710\ndatabase, because I'm in the full model\nI can choose a transaction log backup.\n\n962\n00:50:46,710 --> 00:50:49,350\nNow, I could choose a differential, right?\n\n963\n00:50:49,350 --> 00:50:52,530\nBut remember, the differential\nwon't clear my transaction logs.\n\n964\n00:50:52,530 --> 00:50:56,050\nI wanna clear the transaction logs, so\nI'm gonna do a transaction log backup.\n\n965\n00:50:56,050 --> 00:50:58,500\nSo that's what I'm choosing\nright there out of that box.\n\n966\n00:51:00,330 --> 00:51:00,840\nAll right.\n\n967\n00:51:00,840 --> 00:51:02,470\nThe rest of this is really all the same.\n\n968\n00:51:02,470 --> 00:51:05,990\nThe name changes to reflect that\nit is a transaction log backup.\n\n969\n00:51:05,990 --> 00:51:09,510\nAnd as I look down here, I'm still\njust picking the same backup location.\n\n970\n00:51:09,510 --> 00:51:11,610\nI could back it up somewhere\nelse if I wanted to, but\n\n971\n00:51:11,610 --> 00:51:12,790\nthat's the one that's got it.\n\n972\n00:51:14,060 --> 00:51:17,418\nAnd those other options that\nwere grayed out earlier,\n\n973\n00:51:17,418 --> 00:51:20,854\nare now lit up because I am\nbacking up a transaction log.\n\n974\n00:51:20,854 --> 00:51:24,247\nNotice the default is\nTruncate the transaction log.\n\n975\n00:51:24,247 --> 00:51:27,472\nThat means,\nwhen we run the backup and it's done,\n\n976\n00:51:27,472 --> 00:51:30,930\nflush the transaction logs,\nempty it, right?\n\n977\n00:51:30,930 --> 00:51:33,960\nIt doesn't actually shrink it, so\nthe file size won't change, but\n\n978\n00:51:33,960 --> 00:51:35,130\nit gets the data out of there.\n\n979\n00:51:35,130 --> 00:51:36,710\nIt empties the file, right?\n\n980\n00:51:36,710 --> 00:51:40,080\nThe other option here is Back\nup the tail of the log and\n\n981\n00:51:40,080 --> 00:51:42,630\nleave the database in the restoring state.\n\n982\n00:51:42,630 --> 00:51:43,877\nWhy would I do that?\n\n983\n00:51:43,877 --> 00:51:47,861\nWell, that's actually part of a recovery\nmechanism we'll see a little bit later,\n\n984\n00:51:47,861 --> 00:51:50,175\nand we'll see that when\nwe talk about restores.\n\n985\n00:51:50,175 --> 00:51:52,059\nIt's called salvaging\nthe transaction logs, and\n\n986\n00:51:52,059 --> 00:51:53,910\nit's something you do\nwhen there's a disaster.\n\n987\n00:51:53,910 --> 00:51:56,153\nSo we don't normally need that option.\n\n988\n00:51:56,153 --> 00:52:00,810\nAll right, so I'm going to leave\nthat be and we should be, whoops,\n\n989\n00:52:00,810 --> 00:52:04,410\nwe should be good to go ahead and\nstart our backup.\n\n990\n00:52:04,410 --> 00:52:07,571\nSo I'll go ahead and\njust get back to my General page and\n\n991\n00:52:07,571 --> 00:52:12,549\nmake sure everything is okay there, doing\na transaction log backup and I'll hit OK.\n\n992\n00:52:12,549 --> 00:52:17,392\nAll right, now I've done a transaction\nlog backup, it's sent it in,\n\n993\n00:52:17,392 --> 00:52:20,229\nand if I go take a look\nat my backup device.\n\n994\n00:52:22,992 --> 00:52:28,485\nAnd I go into its media contents, I can\nsee I've now got three backups in here,\n\n995\n00:52:28,485 --> 00:52:31,750\nright, but two of them are full backups.\n\n996\n00:52:31,750 --> 00:52:34,810\nThis latest one is\na transaction log backup.\n\n997\n00:52:34,810 --> 00:52:38,080\nBy itself,\nthat transaction log backup is useless,\n\n998\n00:52:38,080 --> 00:52:40,040\nit does not have the whole database.\n\n999\n00:52:40,040 --> 00:52:44,100\nIt just has the changes that have\noccurred since the last full backup,\n\n1000\n00:52:44,100 --> 00:52:46,990\nsince this full backup right here,\nall right?\n\n1001\n00:52:46,990 --> 00:52:49,723\nSo if I want to restore to the latest and\ngreatest,\n\n1002\n00:52:49,723 --> 00:52:53,563\nI would need to restore this full\nbackup and this transaction log, and\n\n1003\n00:52:53,563 --> 00:52:56,059\nthat would get me to the latest and\ngreatest.\n\n1004\n00:52:56,059 --> 00:52:59,452\nMy Tactrix table would be there,\nall of my information would be in place.\n\n1005\n00:53:03,820 --> 00:53:07,540\nThere's one other backup type that\nthey really don't call out in the exam\n\n1006\n00:53:07,540 --> 00:53:11,500\nobjectives but I wanna show you anyway\ncuz it can turn up on the test.\n\n1007\n00:53:11,500 --> 00:53:15,165\nWhen I go to do a backup, I'll just go\nright back to my inventory database.\n\n1008\n00:53:16,729 --> 00:53:21,556\nI chose to do a full backup and so\non, notice this check mark right here,\n\n1009\n00:53:21,556 --> 00:53:23,200\ncopy only backup.\n\n1010\n00:53:23,200 --> 00:53:24,730\nWhat the heck is that?\n\n1011\n00:53:24,730 --> 00:53:30,250\nWell, when I do a full backup,\nit wipes out the transaction logs, right?\n\n1012\n00:53:30,250 --> 00:53:35,500\nWhat if I want to do a full backup but\nnot mess with the transaction logs, okay?\n\n1013\n00:53:35,500 --> 00:53:36,940\nWhy would I want to do that?\n\n1014\n00:53:36,940 --> 00:53:39,890\nWell, maybe I want to do a backup\nin the middle of the day.\n\n1015\n00:53:39,890 --> 00:53:41,180\nIt's the middle of the day.\n\n1016\n00:53:41,180 --> 00:53:44,310\nI want to do a backup because I'm about to\nmake a change to the database server and\n\n1017\n00:53:44,310 --> 00:53:48,110\nI'm worried about it affecting things,\nso I want to do a good full backup.\n\n1018\n00:53:48,110 --> 00:53:52,410\nBut, I've got a super sweet backup\nstrategy in place, so I've got this backup\n\n1019\n00:53:52,410 --> 00:53:57,240\nstrategy in place right here, and so\nI know that I'm doing, or maybe this one.\n\n1020\n00:53:57,240 --> 00:53:59,900\nI know I'm doing transaction\nlog backups every few hours and\n\n1021\n00:53:59,900 --> 00:54:01,590\nthat they've got all this stuff in there.\n\n1022\n00:54:01,590 --> 00:54:06,600\nIf I do a full backup right here at noon,\nthat full backup is gonna\n\n1023\n00:54:06,600 --> 00:54:10,610\nmess up my schedule, because, well, I\nguess it really wouldn't mess it up here.\n\n1024\n00:54:10,610 --> 00:54:12,890\nIt would mess it up more on\na differential side, right?\n\n1025\n00:54:12,890 --> 00:54:16,140\nOn a differential side I would expect this\ndifferential backup to have changes all\n\n1026\n00:54:16,140 --> 00:54:17,780\nthe way back to the previous midnight.\n\n1027\n00:54:17,780 --> 00:54:20,370\nBut if I do a full backup\nright here at noon,\n\n1028\n00:54:20,370 --> 00:54:22,480\nit's gonna flush the transaction logs.\n\n1029\n00:54:22,480 --> 00:54:25,430\nAnd that means that this differential\nbackup here will only have changes\n\n1030\n00:54:25,430 --> 00:54:27,930\nto the new full backup I ran at noon.\n\n1031\n00:54:27,930 --> 00:54:30,070\nIt messes up my schedule, all right?\n\n1032\n00:54:30,070 --> 00:54:34,190\nIf you ever wanna do a one\ntime full backup that doesn't\n\n1033\n00:54:34,190 --> 00:54:37,850\nmess with any other schedule that you've\ngot, doesn't effect the transaction logs.\n\n1034\n00:54:37,850 --> 00:54:41,400\nYou can do a copy only backup,\nit's really useful for\n\n1035\n00:54:41,400 --> 00:54:45,020\ndoing things like updating\na development or test environment\n\n1036\n00:54:45,020 --> 00:54:48,430\nwithout impacting the production\nenvironment's normal backup schedule.\n\n1037\n00:54:48,430 --> 00:54:50,130\nSo, that's this option we've got.\n\n1038\n00:54:50,130 --> 00:54:54,570\nIf I choose Full, I can choose to do\na copy only backup and it will copy\n\n1039\n00:54:54,570 --> 00:54:59,050\nthe whole database like a full backup,\nbut not mess with the transaction logs.\n\n1040\n00:55:00,920 --> 00:55:05,755\nAll right, and so in fact, if I go and do\none of those backups right now, okay, so\n\n1041\n00:55:05,755 --> 00:55:07,836\nthere goes doing it as a copy only.\n\n1042\n00:55:07,836 --> 00:55:12,659\nNow I've got some really interesting\nstuff going on because if I go\n\n1043\n00:55:12,659 --> 00:55:17,750\nback into my inventory backup device and\nI look at the media contents.\n\n1044\n00:55:17,750 --> 00:55:22,583\nI can see I had a full backup right here,\nbut it's telling me that it's a copy only\n\n1045\n00:55:22,583 --> 00:55:25,640\nand it's gotta warn me about\nthat because if I go and\n\n1046\n00:55:25,640 --> 00:55:30,144\ndo like a transaction log backup now,\nlet me go and do another one of those.\n\n1047\n00:55:30,144 --> 00:55:32,927\nI'll go and\ndo a translation log backup real quick.\n\n1048\n00:55:46,194 --> 00:55:50,605\nAnd I'll pull that inventory device back\nup and go into its contents, all right.\n\n1049\n00:55:50,605 --> 00:55:55,970\nIf I wanna restore and get the latest and\ngreatest, I might be tempted\n\n1050\n00:55:55,970 --> 00:56:01,168\nto do this full copy only, and\nthe latest transaction log, okay?\n\n1051\n00:56:01,168 --> 00:56:05,339\nAnd that would actually work,\nit would have what I needed, you know,\n\n1052\n00:56:05,339 --> 00:56:09,865\nget the full and the transaction log\nExcept when I ran this transaction log,\n\n1053\n00:56:09,865 --> 00:56:13,130\nit was built off of this full backup,\nright.\n\n1054\n00:56:13,130 --> 00:56:16,030\nThis transaction log is actually\nbuilt off of this one which is\n\n1055\n00:56:16,030 --> 00:56:16,650\nbuilt off of this one.\n\n1056\n00:56:16,650 --> 00:56:18,430\nYou know, the chain gets a little weird.\n\n1057\n00:56:18,430 --> 00:56:22,060\nSince they're all right here in this\none file, it's nice and easy and\n\n1058\n00:56:22,060 --> 00:56:23,240\nit makes sense.\n\n1059\n00:56:23,240 --> 00:56:27,070\nBut if I had backed up this full copy\nsomewhere else to another file and\n\n1060\n00:56:27,070 --> 00:56:30,380\ndidn't know about it it\ncan mess up my order.\n\n1061\n00:56:30,380 --> 00:56:31,370\nIf it was a full,\n\n1062\n00:56:31,370 --> 00:56:35,010\nan actual full it can mess up which\nones I need to do the restore.\n\n1063\n00:56:35,010 --> 00:56:39,060\nBut by doing a copy only it's basically\ntelling me right there hey you can ignore\n\n1064\n00:56:39,060 --> 00:56:40,250\nthat this one happened.\n\n1065\n00:56:40,250 --> 00:56:43,070\nSure it exists but you don't need to\nworry about it, you don't need to go and\n\n1066\n00:56:43,070 --> 00:56:44,990\nretrieve that file or whatever.\n\n1067\n00:56:44,990 --> 00:56:48,840\nYou can go back to this full, this\ntransaction log, and this transaction log,\n\n1068\n00:56:48,840 --> 00:56:50,020\nand you'll get all the way current.\n\n1069\n00:56:51,150 --> 00:56:54,810\nOr if you want, you could go with\nthis one and go current, it is there.\n\n1070\n00:56:54,810 --> 00:56:56,490\nIt's out there, but\n\n1071\n00:56:56,490 --> 00:56:59,550\nthis transaction log backup really ignored\nthe fact that this full one happened.\n\n1072\n00:56:59,550 --> 00:57:01,370\nSo just be aware of that.\n\n1073\n00:57:01,370 --> 00:57:03,119\nIt is something that's out there for\n\n1074\n00:57:03,119 --> 00:57:05,780\none-time backups that don't\ndisrupt your schedule.\n\n1075\n00:57:08,060 --> 00:57:12,380\nAll right, so we've seen a series\nof backups at this point.\n\n1076\n00:57:12,380 --> 00:57:14,020\nThe next thing to look at are restores.\n\n1077\n00:57:14,020 --> 00:57:17,450\nBut I've gone on too long already so\nlet's stop here and take a break and\n\n1078\n00:57:17,450 --> 00:57:20,770\nwhen we get back, we'll get a chance\nto see restoring the database.\n\n1079\n00:57:20,770 --> 00:57:22,885\nSo stay tuned, we'll be back after this.\n\n1080\n00:57:22,885 --> 00:57:29,620\n[MUSIC]\n\n1081\n00:57:29,620 --> 00:57:31,370\nAll right, welcome back everybody.\n\n1082\n00:57:31,370 --> 00:57:33,140\nSo let's say we want to do a restore.\n\n1083\n00:57:33,140 --> 00:57:35,840\nWell, restores are actually\npretty straightforward accept\n\n1084\n00:57:35,840 --> 00:57:39,060\nthere's a few different scenarios\nthat might lead you to that restore.\n\n1085\n00:57:40,110 --> 00:57:42,060\nTypically we have a database,\n\n1086\n00:57:42,060 --> 00:57:44,450\nwell, typically when we do\na restore it's one of two things.\n\n1087\n00:57:44,450 --> 00:57:47,060\nOne, the database has\ncompletely failed and\n\n1088\n00:57:47,060 --> 00:57:50,590\nit's not online, people can't get\nconnected and we need to restore, right?\n\n1089\n00:57:50,590 --> 00:57:53,390\nThat's scenario one, and\nthat's considered a disaster.\n\n1090\n00:57:53,390 --> 00:57:56,800\nThe other scenario though is, it might\nnot be that the database is offline,\n\n1091\n00:57:56,800 --> 00:57:58,980\nit might be online and happy.\n\n1092\n00:57:58,980 --> 00:58:02,830\nBut somebody did something stupid,\nlike somebody went in there and\n\n1093\n00:58:02,830 --> 00:58:04,690\nwiped out a significant\nportion of the database.\n\n1094\n00:58:04,690 --> 00:58:06,472\nThey dropped a table they didn't mean to.\n\n1095\n00:58:06,472 --> 00:58:09,930\nAnd so even though the database is online,\nit's not really intact,\n\n1096\n00:58:09,930 --> 00:58:13,180\nit doesn't have the information it's\nsupposed to, so we need to do a restore.\n\n1097\n00:58:13,180 --> 00:58:14,440\nThose are the easiest.\n\n1098\n00:58:14,440 --> 00:58:17,780\nWhen the database is still online\nall you have to do is go and\n\n1099\n00:58:17,780 --> 00:58:23,360\nfind the database, right click on it,\nthen go to Tasks > Restore.\n\n1100\n00:58:23,360 --> 00:58:26,770\nAnd you'll see under Restore you've got\nthe choice to restore the whole database\n\n1101\n00:58:26,770 --> 00:58:28,360\nor particular files in groups.\n\n1102\n00:58:28,360 --> 00:58:29,150\nSo you can pick and\n\n1103\n00:58:29,150 --> 00:58:33,090\nchoose what it is you want to\nrestore on that database, all right?\n\n1104\n00:58:33,090 --> 00:58:36,940\nNormally we might wanna do the whole\ndatabase, and we choose that.\n\n1105\n00:58:36,940 --> 00:58:41,240\nIt's gonna go and find the file, and start\nto offer up what it is we want to recover.\n\n1106\n00:58:43,030 --> 00:58:44,180\nThe second scenario though,\n\n1107\n00:58:44,180 --> 00:58:48,130\nwhere the database is offline,\nthat one's a little bit harder.\n\n1108\n00:58:48,130 --> 00:58:50,650\nIf the database is offline\nusers can't get into it, and\n\n1109\n00:58:50,650 --> 00:58:53,960\nthis might be really bad,\nlike the whole server might be destroyed.\n\n1110\n00:58:55,040 --> 00:58:56,165\nWell, you can't go and\n\n1111\n00:58:56,165 --> 00:58:58,810\nright-click on a database when\nthe server won't even power-on.\n\n1112\n00:58:58,810 --> 00:59:02,610\nThat makes it a little more complex,\nso let's walk through that process.\n\n1113\n00:59:02,610 --> 00:59:07,940\nIf the server is completely destroyed,\nstep one, build a new server.\n\n1114\n00:59:07,940 --> 00:59:10,990\nYou've gotta throw Windows Server\non the system, get it installed,\n\n1115\n00:59:10,990 --> 00:59:12,360\ndo your Windows updates.\n\n1116\n00:59:12,360 --> 00:59:16,620\nInstall Microsoft SQL Server on there,\nright, so get SQL up and running.\n\n1117\n00:59:16,620 --> 00:59:22,100\nAnd once SQL is up and running, we can\nimport our backups, and then restore them.\n\n1118\n00:59:22,100 --> 00:59:24,640\nNow that import our backups\nis actually really easy.\n\n1119\n00:59:24,640 --> 00:59:28,450\nYou just go to backup devices,\nand you add the files in.\n\n1120\n00:59:28,450 --> 00:59:31,350\nThese files will be missing,\nthey won't be in here anymore because\n\n1121\n00:59:31,350 --> 00:59:34,420\nit's an all new server, so\nyou just redefine them.\n\n1122\n00:59:34,420 --> 00:59:37,403\nYou'll do a new backup device and\nyou point to that file,\n\n1123\n00:59:37,403 --> 00:59:39,093\nthat file that already exists.\n\n1124\n00:59:39,093 --> 00:59:43,150\nNow, you've copied it from wherever you\nhad it backed up to, and you point to it.\n\n1125\n00:59:43,150 --> 00:59:48,000\nOnce it's there, now the SQL server\nknows about your old backups, right.\n\n1126\n00:59:48,000 --> 00:59:49,450\nSo as it knows about your old backups,\n\n1127\n00:59:49,450 --> 00:59:52,170\nyou can restore them,\nexcept it'll be a new server.\n\n1128\n00:59:52,170 --> 00:59:55,040\nYou won't have a database\nhere to right click on.\n\n1129\n00:59:55,040 --> 00:59:58,551\nSo for example, my inventory database,\nmaybe it's just completely gone.\n\n1130\n00:59:58,551 --> 01:00:00,806\nLet me just delete it out of here,\nall right?\n\n1131\n01:00:00,806 --> 01:00:03,880\nSo well eventually I'll\ndelete it out of there,\n\n1132\n01:00:03,880 --> 01:00:06,860\nand my inventory database\nis just completely gone.\n\n1133\n01:00:06,860 --> 01:00:08,930\nIf it's gone,\nthere's nothing to right click on.\n\n1134\n01:00:08,930 --> 01:00:12,660\nSo in that scenario, what you do is you\nright click on the database's folder\n\n1135\n01:00:12,660 --> 01:00:16,960\nup here and you'll have the option\nto restore the database.\n\n1136\n01:00:16,960 --> 01:00:21,290\nAnd from there you can walk through and\npick your files and do the recovery.\n\n1137\n01:00:22,680 --> 01:00:24,010\nWhy did my drop fail?\n\n1138\n01:00:26,221 --> 01:00:29,590\nLet's see, it's currently in use,\nwonderful.\n\n1139\n01:00:29,590 --> 01:00:32,000\nWell, you know what?\n\n1140\n01:00:32,000 --> 01:00:33,350\nI'll take advantage of this moment.\n\n1141\n01:00:33,350 --> 01:00:36,920\nIt's just going to fail again,\nI'm going to generate a failure.\n\n1142\n01:00:36,920 --> 01:00:40,000\nBut anyhow, all you do is right\nclick on the database folder.\n\n1143\n01:00:40,000 --> 01:00:43,105\nAnd when you right click on the database\nfolder, you'll have the ability to do\n\n1144\n01:00:43,105 --> 01:00:45,801\na restore database, right, or\nfiles and files groups if you want.\n\n1145\n01:00:45,801 --> 01:00:48,866\nBut normally we're restoring\na database in a total disaster.\n\n1146\n01:00:48,866 --> 01:00:52,590\nAnd from there, you'll be able to\npick that device that you imported.\n\n1147\n01:00:54,040 --> 01:00:58,190\nSo if we have a file device, which mine\ndoesn't seem to have registered it, but\n\n1148\n01:00:58,190 --> 01:00:59,930\nthat's all right,\nI can browse and find it.\n\n1149\n01:00:59,930 --> 01:01:02,950\nAnd again, in a failure, you'd have to do\nthis anyway, since it won't know about it.\n\n1150\n01:01:04,160 --> 01:01:09,390\nYou can browse and find it, it will crack\nopen that file, and show the backups.\n\n1151\n01:01:09,390 --> 01:01:13,020\nNow looking at this,\nI'm missing a few things, aren't I?\n\n1152\n01:01:13,020 --> 01:01:16,800\nIt's not showing all of the backups, and\nI'll get into that in just a moment.\n\n1153\n01:01:16,800 --> 01:01:20,200\nBut I do want to show you another way\nthat this database failure might show up.\n\n1154\n01:01:20,200 --> 01:01:26,593\nI'm gonna go ahead and cancel this.\n\n1155\n01:01:26,593 --> 01:01:31,385\nAnd I'm gonna go ahead and simulate\na slightly different type of failure.\n\n1156\n01:01:31,385 --> 01:01:32,510\nI'm gonna stop my server.\n\n1157\n01:01:37,970 --> 01:01:40,110\nAll right, so\nSQL Server is stopping right now.\n\n1158\n01:01:40,110 --> 01:01:42,210\nWhen it's stopped,\nit's going to release some of the files,\n\n1159\n01:01:42,210 --> 01:01:43,620\nso I can go in and mess with them.\n\n1160\n01:01:43,620 --> 01:01:47,990\nAnd I'm going to introduce some\ncorruption into the database file itself.\n\n1161\n01:01:47,990 --> 01:01:52,350\nNow my server's offline, and I'm just\ngoing to browse onto my C: drive and\n\n1162\n01:01:52,350 --> 01:01:57,420\nfind my database file,\nwhich is buried in here.\n\n1163\n01:01:59,470 --> 01:02:04,520\nAnd, oh no, Inventory I moved off\nto the other drives, that's right.\n\n1164\n01:02:04,520 --> 01:02:06,622\nSo it's gonna be on my E drive, Inventory.\n\n1165\n01:02:06,622 --> 01:02:09,730\nAll right, so\nthis is my database file, and\n\n1166\n01:02:09,730 --> 01:02:11,790\nnormally you don't want to mess with\nthese cuz you don't want corruption.\n\n1167\n01:02:11,790 --> 01:02:18,580\nBut I do want corruption so I'm gonna open\nthat with Wordpad, we'll have some fun.\n\n1168\n01:02:18,580 --> 01:02:21,960\nSo Wordpad is a text editor that\nthis database is a binary format.\n\n1169\n01:02:21,960 --> 01:02:25,510\nI'm just going to delete a few\nlittle chunks every here and there.\n\n1170\n01:02:25,510 --> 01:02:31,020\nSo this would be similar\nto a couple of sectors\n\n1171\n01:02:31,020 --> 01:02:35,330\ngoing bad on the hard drive, a couple of\nchunks just all of a sudden disappear.\n\n1172\n01:02:35,330 --> 01:02:40,100\nThe database file is not very resilient,\nit's actually really easy for\n\n1173\n01:02:40,100 --> 01:02:41,980\nit to lose data and become corrupted.\n\n1174\n01:02:41,980 --> 01:02:45,680\nThat's why we have the transaction log\nfiles, that's the protection from this.\n\n1175\n01:02:45,680 --> 01:02:48,705\nSo I'm basically skipping that\nwhole transaction log part,\n\n1176\n01:02:48,705 --> 01:02:50,780\ndo let me just save that real quick.\n\n1177\n01:02:53,130 --> 01:02:56,552\nIt'll take a moment it's\na you know decent sized file.\n\n1178\n01:02:56,552 --> 01:02:57,468\nApparently it's gonna.\n\n1179\n01:02:57,468 --> 01:03:04,130\nBut once that's done, 98% or 99% of\nthis file is gonna be perfectly fine.\n\n1180\n01:03:04,130 --> 01:03:07,670\nBut 1% of it I just deleted out of there,\n\n1181\n01:03:07,670 --> 01:03:11,730\nthat 1%, that's enough for\nthe entire database file to fail.\n\n1182\n01:03:11,730 --> 01:03:13,910\nSo when I start my server backup,\n\n1183\n01:03:13,910 --> 01:03:17,440\nit's gonna start it,\nit's gonna go to mount the databases.\n\n1184\n01:03:17,440 --> 01:03:19,680\nAnd when it goes to mount\nthat inventory database,\n\n1185\n01:03:19,680 --> 01:03:21,890\nit's gonna see corruption in it, okay?\n\n1186\n01:03:21,890 --> 01:03:23,240\nAnd when it sees that corruption,\n\n1187\n01:03:23,240 --> 01:03:26,270\nand I'll need to refresh because\nmy screen was already up.\n\n1188\n01:03:26,270 --> 01:03:27,340\nThere we go.\n\n1189\n01:03:27,340 --> 01:03:29,040\nYou'll see something like this.\n\n1190\n01:03:29,040 --> 01:03:32,750\nIt's saying, whoops, [LAUGH] I'll\njust make that as small as possible.\n\n1191\n01:03:32,750 --> 01:03:35,590\nInventory (Recovery Pending) all right,\n\n1192\n01:03:35,590 --> 01:03:37,660\nit's letting me know\nthis database is broken.\n\n1193\n01:03:37,660 --> 01:03:41,070\nAnd until you go and\ndo a recovery it's not coming back up.\n\n1194\n01:03:41,070 --> 01:03:42,760\nAnd when it says, Recovery Pending,\n\n1195\n01:03:42,760 --> 01:03:44,900\nthat doesn't mean,\nhey I'm about to recover it for you.\n\n1196\n01:03:44,900 --> 01:03:49,230\nIt means, you need to be doing it,\nit's pending you fixing the problem.\n\n1197\n01:03:49,230 --> 01:03:51,870\nSo this is what we might\nsee if the server's online.\n\n1198\n01:03:51,870 --> 01:03:55,761\nNow, if you had a total server\nloss you wouldn't see this, but\n\n1199\n01:03:55,761 --> 01:03:59,593\nif the server was still online\nyou'd see a message like this.\n\n1200\n01:04:01,375 --> 01:04:06,657\nAll right, so in this case,\nI can just right click on the database and\n\n1201\n01:04:06,657 --> 01:04:09,404\ngo to Tasks > Restore > Database.\n\n1202\n01:04:09,404 --> 01:04:11,667\nAnd now I can go through and\ndo my restore.\n\n1203\n01:04:11,667 --> 01:04:15,270\nI need to pick my backup set, or\nbackup device, where I wanna restore from.\n\n1204\n01:04:19,030 --> 01:04:22,668\nYou know, I do not know why it's not\nautomatically finding that backup set\n\n1205\n01:04:22,668 --> 01:04:25,860\nthere, but anyhow, like I said,\nwe can just browse and pick it.\n\n1206\n01:04:25,860 --> 01:04:26,770\nAnd there it is.\n\n1207\n01:04:26,770 --> 01:04:28,730\nSo, same thing,\njust a different way of going about it.\n\n1208\n01:04:28,730 --> 01:04:30,290\nI wanted you guys to see\neach of the different\n\n1209\n01:04:30,290 --> 01:04:31,660\nways a failure can be represented.\n\n1210\n01:04:32,660 --> 01:04:36,640\nAll right,\nnow it is only showing two backups.\n\n1211\n01:04:36,640 --> 01:04:39,860\nWhat it did,\nis it analyzed that backup file.\n\n1212\n01:04:39,860 --> 01:04:41,909\nAnd it said hey,\nthere's five backups in here.\n\n1213\n01:04:42,920 --> 01:04:48,915\nThere's two full backups, two transaction\nlog backups, and one full copy backup.\n\n1214\n01:04:48,915 --> 01:04:51,232\nAnd it said all right,\nbased on the information that's here,\n\n1215\n01:04:51,232 --> 01:04:52,448\nwhat's the best combination?\n\n1216\n01:04:52,448 --> 01:04:58,350\nWhat's the best combination of these files\nto get me as new and recent as possible?\n\n1217\n01:05:00,312 --> 01:05:02,150\nIt's gonna look at it and figure it out.\n\n1218\n01:05:02,150 --> 01:05:06,690\nAnd it looked at it and it said, I can\nuse that full copy only, followed by that\n\n1219\n01:05:06,690 --> 01:05:10,190\nnewest transaction log, and that will\nget me to the latest and greatest.\n\n1220\n01:05:11,519 --> 01:05:15,595\nIf If I want to override that behavior,\nI can, all right.\n\n1221\n01:05:15,595 --> 01:05:19,305\nThe way you override it is with\nthis Restore to option right here.\n\n1222\n01:05:19,305 --> 01:05:21,777\nSee how it says, the last backup taken.\n\n1223\n01:05:21,777 --> 01:05:26,255\nIt's gonna restore to the newest\nbackup that it possibly can.\n\n1224\n01:05:26,255 --> 01:05:28,495\nBut we use this timeline\nbutton to override that.\n\n1225\n01:05:28,495 --> 01:05:30,125\nMaybe I don't want the newest, right?\n\n1226\n01:05:30,125 --> 01:05:33,295\nRemember my example of maybe\nthe problem happened four days ago, and\n\n1227\n01:05:33,295 --> 01:05:35,250\nI'm just now realizing it.\n\n1228\n01:05:35,250 --> 01:05:38,320\nWell, I need to get a copy of\nthe database from four days ago.\n\n1229\n01:05:38,320 --> 01:05:43,350\nSo I can go into Timeline, and\nI can pick where I want to recover.\n\n1230\n01:05:43,350 --> 01:05:46,460\nAnd it's gonna show my backups\nright here on this timeline.\n\n1231\n01:05:46,460 --> 01:05:50,500\nNow, the timeline, all my backups\nare taken one after the other, so\n\n1232\n01:05:50,500 --> 01:05:51,640\nthey're all overlapping.\n\n1233\n01:05:51,640 --> 01:05:53,680\nBut normally,\nthis is gonna be nice and spread out.\n\n1234\n01:05:53,680 --> 01:05:58,700\nSo how you've got 6 AM, noon, 6 PM,\njust like I drew on that diagram earlier.\n\n1235\n01:05:58,700 --> 01:06:00,150\nThat's what I'm seeing here for the day.\n\n1236\n01:06:00,150 --> 01:06:04,810\nYou could break this down to the hour, I\nthink that's the smallest it'll go, yeah.\n\n1237\n01:06:04,810 --> 01:06:05,770\nSo you can come in here and\n\n1238\n01:06:05,770 --> 01:06:09,140\nyou can start to see where\nyou're gonna be recovering to.\n\n1239\n01:06:10,490 --> 01:06:14,530\nAnd so here's my original full backup,\nhere's another full backup.\n\n1240\n01:06:14,530 --> 01:06:16,460\nHere's a transaction log backup.\n\n1241\n01:06:16,460 --> 01:06:18,710\nAnd see how it's changing\na little bit there.\n\n1242\n01:06:18,710 --> 01:06:21,740\nI've got position three and\nthen position five.\n\n1243\n01:06:21,740 --> 01:06:24,640\nThat's two different\ntransaction log files.\n\n1244\n01:06:24,640 --> 01:06:27,180\nAnd then I've got that fully copy,\n\n1245\n01:06:27,180 --> 01:06:29,470\nfollowed by another\ntransaction log backup.\n\n1246\n01:06:29,470 --> 01:06:31,860\nOr actually, I guess that's that same one,\nposition five.\n\n1247\n01:06:31,860 --> 01:06:36,010\nSo it's able to see those files to\nfigure out what I'm gonna restore from.\n\n1248\n01:06:36,010 --> 01:06:40,550\nAnd if I move my recovery point back, if I\nstart to start to pick something a little\n\n1249\n01:06:40,550 --> 01:06:44,860\nbit earlier for me to recover to,\nit's going to move that back.\n\n1250\n01:06:44,860 --> 01:06:47,820\nSo I can say, specific date and time.\n\n1251\n01:06:47,820 --> 01:06:51,970\nAnd I can use this slider to move it, or\nI can just go up here and pick it myself.\n\n1252\n01:06:51,970 --> 01:06:55,380\nBut as I move back,\nit's gonna change what it uses.\n\n1253\n01:06:55,380 --> 01:07:01,302\nSo if I wanna go back to this point right\nhere, I want to go back to 7:49 AM today.\n\n1254\n01:07:01,302 --> 01:07:05,730\nWell, that full copy was after that, so\n\n1255\n01:07:05,730 --> 01:07:08,340\nI don't want that one, but\nI want this point right here.\n\n1256\n01:07:08,340 --> 01:07:11,170\nSo I can choose it, and hit OK.\n\n1257\n01:07:11,170 --> 01:07:12,670\nAnd see how it just changed?\n\n1258\n01:07:12,670 --> 01:07:15,650\nNow it's going back to my\noriginal full backup, and\n\n1259\n01:07:15,650 --> 01:07:18,490\neach of the transaction\nlogs that followed,\n\n1260\n01:07:18,490 --> 01:07:21,972\nbecause each one flushed the log so it\nneeds both of them to get that full set.\n\n1261\n01:07:23,170 --> 01:07:24,410\nSo it's figuring this out.\n\n1262\n01:07:24,410 --> 01:07:27,900\nSo remember how I said when I\nbrought that diagram up, I said boy,\n\n1263\n01:07:27,900 --> 01:07:30,630\ntransaction log backups,\nthey're super convenient, but\n\n1264\n01:07:30,630 --> 01:07:33,960\nthey make life a little hard because\nyou got a lot of files to deal with.\n\n1265\n01:07:33,960 --> 01:07:36,350\nWell fortunately,\nwe don't have to figure that out.\n\n1266\n01:07:36,350 --> 01:07:38,230\nIt figures it out for us.\n\n1267\n01:07:38,230 --> 01:07:40,080\nThe exception is when you're using tapes.\n\n1268\n01:07:40,080 --> 01:07:43,080\nWhen you're using backup tapes,\nall your backups aren't in one file.\n\n1269\n01:07:43,080 --> 01:07:44,670\nIt doesn't just know they're all there.\n\n1270\n01:07:44,670 --> 01:07:49,240\nSo you have to manually add in each one,\nand you have to do it one at a time.\n\n1271\n01:07:49,240 --> 01:07:54,160\nSo you would restore from your first full\nbackup, and then you would restore from\n\n1272\n01:07:54,160 --> 01:07:56,460\nyour next transaction log and\nthen your next transaction log.\n\n1273\n01:07:56,460 --> 01:07:57,800\nAnd you have to do it by hand.\n\n1274\n01:07:57,800 --> 01:08:01,110\nSo going from physical tape,\nit's a lot of work.\n\n1275\n01:08:01,110 --> 01:08:02,920\nGoing from files like this,\nit's super easy.\n\n1276\n01:08:04,260 --> 01:08:07,700\nNow I now Brenda mentioned in the chat\nroom that they still use tapes.\n\n1277\n01:08:07,700 --> 01:08:11,970\nA lot of people do, cuz the bit density\non them is so high for the dollar, right?\n\n1278\n01:08:11,970 --> 01:08:14,470\nIt's really,\nreally inexpensive to back up a tape.\n\n1279\n01:08:14,470 --> 01:08:16,020\nSo if you're still using tape, and\n\n1280\n01:08:16,020 --> 01:08:19,620\nyou've got to do these manual,\nyou gotta do multiple restores.\n\n1281\n01:08:19,620 --> 01:08:21,750\nWe'd have to do three separate restores.\n\n1282\n01:08:21,750 --> 01:08:23,820\nOne restore for the full backup.\n\n1283\n01:08:23,820 --> 01:08:25,300\nOne restore for this transactional log.\n\n1284\n01:08:25,300 --> 01:08:26,200\nOne restore for the next one.\n\n1285\n01:08:26,200 --> 01:08:29,080\nAnd we'd have to keep track of\nwhich one to use, all right.\n\n1286\n01:08:29,080 --> 01:08:33,610\nNow, when the SQL Server does it for us,\nwhen it does these, what it's doing,\n\n1287\n01:08:33,610 --> 01:08:40,020\nis it's installing this full database,\nputting it back, and then playing forward.\n\n1288\n01:08:40,020 --> 01:08:42,770\nThey call it playing, or\nreplaying the transactions.\n\n1289\n01:08:42,770 --> 01:08:46,580\nEach transaction was logged in here and\nso it just replays them.\n\n1290\n01:08:46,580 --> 01:08:49,065\nIt acts like people are running\nthose queries again.\n\n1291\n01:08:49,065 --> 01:08:53,005\nEven though they ran in the past, it's\nreplaying them all the way to the point\n\n1292\n01:08:53,005 --> 01:08:57,425\nwhere I said I wanted to stop,\n7:58 AM or 7:49, that's it.\n\n1293\n01:08:57,425 --> 01:09:03,236\nSo it'll replay every transaction\nthat was 100% done by 7:49 AM.\n\n1294\n01:09:03,236 --> 01:09:07,566\nIf something was 50% done at 7:49 AM,\nit doesn't replay it.\n\n1295\n01:09:07,566 --> 01:09:12,090\nJust things that were 100% done\nby the time that point hits.\n\n1296\n01:09:12,090 --> 01:09:13,550\nAll right, so really cool.\n\n1297\n01:09:13,550 --> 01:09:17,560\nBut if you're doing this on a tape,\nyou'll just see the full backup first.\n\n1298\n01:09:17,560 --> 01:09:19,430\nSo we restore that full backup.\n\n1299\n01:09:19,430 --> 01:09:22,890\nBut if you wanna continue\nrestoring transaction logs,\n\n1300\n01:09:22,890 --> 01:09:24,330\nthere's a really important option.\n\n1301\n01:09:24,330 --> 01:09:26,550\nI mentioned it briefly earlier.\n\n1302\n01:09:26,550 --> 01:09:32,660\nIf we go under Options for our restore,\nyou'll see in here Recovery State.\n\n1303\n01:09:32,660 --> 01:09:36,870\nAnd the recovery state for\nthis one is Restore with Recovery.\n\n1304\n01:09:36,870 --> 01:09:39,730\nRestore with Recovery means\nrestore this backup and\n\n1305\n01:09:39,730 --> 01:09:43,940\nthen bring the database online and\nlet users into it.\n\n1306\n01:09:43,940 --> 01:09:46,900\nBut if you know you've got more\ntapes that you gotta restore from,\n\n1307\n01:09:46,900 --> 01:09:48,580\nyou don't want that.\n\n1308\n01:09:48,580 --> 01:09:52,550\nYou wanna choose Restore with No Recovery.\n\n1309\n01:09:52,550 --> 01:09:56,230\nWhat no recovery means,\nrestore this backup, but\n\n1310\n01:09:56,230 --> 01:09:59,590\nleave the database offline cuz\nI've got more backups to restore.\n\n1311\n01:10:00,820 --> 01:10:06,170\nAnd so what you would be doing is back\nhere, you would restore this first one.\n\n1312\n01:10:06,170 --> 01:10:08,440\nRestore with no recovery.\n\n1313\n01:10:08,440 --> 01:10:10,250\nThen you'd restore this second one.\n\n1314\n01:10:10,250 --> 01:10:12,000\nRestore with no recovery.\n\n1315\n01:10:12,000 --> 01:10:17,140\nThen you'd restore this third one,\nrestore with recovery, all right?\n\n1316\n01:10:17,140 --> 01:10:20,070\nAgain, if we're backing up to files,\nSQL does it for us.\n\n1317\n01:10:20,070 --> 01:10:21,730\nI don't have to worry about that.\n\n1318\n01:10:21,730 --> 01:10:23,710\nBut if we're doing it with tapes,\nwe've gotta do that by hand.\n\n1319\n01:10:23,710 --> 01:10:25,360\nAnd if we script it.\n\n1320\n01:10:25,360 --> 01:10:28,740\nIf you look at the script for\nthis one, you can see it here.\n\n1321\n01:10:28,740 --> 01:10:32,580\nIt's restoring the full backup,\nand see how it says, no recovery.\n\n1322\n01:10:32,580 --> 01:10:33,805\nOh, actually.\n\n1323\n01:10:33,805 --> 01:10:34,870\n[LAUGH].\n\n1324\n01:10:34,870 --> 01:10:37,130\nIt says no recovery on all three\nbecause I chose that option.\n\n1325\n01:10:37,130 --> 01:10:38,540\nLet me go fix that.\n\n1326\n01:10:38,540 --> 01:10:39,700\nSo if I go back into Options here,\n\n1327\n01:10:39,700 --> 01:10:42,320\nI wanna say restore with recovery,\nthat's what I want.\n\n1328\n01:10:43,370 --> 01:10:44,600\nSo let me script that.\n\n1329\n01:10:44,600 --> 01:10:45,280\nThere.\n\n1330\n01:10:45,280 --> 01:10:48,840\nSo see how it's no recovery,\nno recovery, and\n\n1331\n01:10:48,840 --> 01:10:52,630\non this third one it just\nskips the recovery command.\n\n1332\n01:10:52,630 --> 01:10:54,380\nCuz the default is with recovery.\n\n1333\n01:10:54,380 --> 01:10:57,890\nSo, it's taking care of that part for\nme, so I don't have to worry about it.\n\n1334\n01:11:00,070 --> 01:11:04,340\nSo, if I go ahead and do that restore,\nI know my database is broken right now.\n\n1335\n01:11:04,340 --> 01:11:09,729\nSo, I'm gonna go ahead and\nrun this one, We've got,\n\n1336\n01:11:09,729 --> 01:11:13,270\nlet's see,\neverything is chosen that we need.\n\n1337\n01:11:13,270 --> 01:11:15,792\nI'm going to hit Verify Backup Media\ndown here at the bottom.\n\n1338\n01:11:15,792 --> 01:11:18,770\nIt's gonna test that out to make\nsure the restore is okay, and\n\n1339\n01:11:18,770 --> 01:11:20,260\nit should be good to go.\n\n1340\n01:11:20,260 --> 01:11:21,525\nWhy am I not seeing my OK button?\n\n1341\n01:11:24,275 --> 01:11:29,270\nApparently I've done something\nto mess up my screen.\n\n1342\n01:11:29,270 --> 01:11:33,675\nI'm not seeing the OK button,\nso I can't tell it to do it.\n\n1343\n01:11:33,675 --> 01:11:37,030\n[LAUGH] All right, let me restart that.\n\n1344\n01:11:37,030 --> 01:11:41,475\nSo I'll just right-click here and\ndo my Tasks, Restore Database.\n\n1345\n01:11:41,475 --> 01:11:44,670\nAnd we're gonna be\nrestoring from a device.\n\n1346\n01:11:44,670 --> 01:11:47,080\nI'll pick my device.\n\n1347\n01:11:47,080 --> 01:11:51,305\nA job worth doing is worth doing twice,\nI always say.\n\n1348\n01:11:51,305 --> 01:11:58,170\n[LAUGH] And I chose to restore\nto a different point in time.\n\n1349\n01:11:58,170 --> 01:11:59,390\n7:49 is what I chose.\n\n1350\n01:11:59,390 --> 01:12:00,124\nThere we go.\n\n1351\n01:12:04,268 --> 01:12:11,768\nAnd, you know, it just does not want to I\nwonder if my screen resolution is too low.\n\n1352\n01:12:11,768 --> 01:12:15,215\nThat happens sometimes and\nthe OK button is off-screen.\n\n1353\n01:12:18,860 --> 01:12:20,310\nWell, that is too funny.\n\n1354\n01:12:20,310 --> 01:12:23,230\nAlright, well, since I'm not seeing my OK\nbutton, what I'm gonna do is I'm gonna hit\n\n1355\n01:12:23,230 --> 01:12:26,680\nthe script button to get the script for\nit, and I'll just run the script.\n\n1356\n01:12:26,680 --> 01:12:27,860\nSo there we go, there's my script.\n\n1357\n01:12:27,860 --> 01:12:30,390\nLet me just parse that to make\nsure there's no problems, and\n\n1358\n01:12:30,390 --> 01:12:31,130\nthen I'll execute it.\n\n1359\n01:12:32,200 --> 01:12:32,800\nAll right.\nSo\n\n1360\n01:12:32,800 --> 01:12:35,420\nit has given me a warning\nabout the tail log.\n\n1361\n01:12:35,420 --> 01:12:37,940\nTail log I'll talk about\nin the next segment.\n\n1362\n01:12:37,940 --> 01:12:39,610\nBut after that, it is getting a problem.\n\n1363\n01:12:39,610 --> 01:12:40,690\nLet's see.\nCannot be restored.\n\n1364\n01:12:40,690 --> 01:12:42,870\nNo files are ready to roll forward.\n\n1365\n01:12:43,920 --> 01:12:44,420\nHm.\n\n1366\n01:12:45,940 --> 01:12:47,390\nRestore log terminating abnormally.\n\n1367\n01:12:47,390 --> 01:12:49,021\nI guess there's something\nwrong with my backup, but\n\n1368\n01:12:49,021 --> 01:12:50,081\nit's really not telling me what.\n\n1369\n01:12:54,267 --> 01:12:55,384\nInteresting.\n\n1370\n01:12:58,493 --> 01:13:00,890\nWell, let me take that database offline.\n\n1371\n01:13:00,890 --> 01:13:03,010\nMaybe it's just upset that it's online.\n\n1372\n01:13:03,010 --> 01:13:07,360\nYou can right-click on a database and\ngo to Tasks > Take Offline.\n\n1373\n01:13:07,360 --> 01:13:10,100\nYou can do that any time you want,\njust to make sure that people aren't in\n\n1374\n01:13:10,100 --> 01:13:12,180\nthe database,\nthe systems not trying to work with it,\n\n1375\n01:13:12,180 --> 01:13:15,270\nand so that's what I did right there,\nis I just took it offline.\n\n1376\n01:13:15,270 --> 01:13:18,680\nIf you have problems with doing a restore,\nsometimes that can help, and\n\n1377\n01:13:18,680 --> 01:13:19,980\nthat may be what's going on with mine.\n\n1378\n01:13:19,980 --> 01:13:23,210\nSo let me try, that may be why\nI wasn't seeing my OK button.\n\n1379\n01:13:23,210 --> 01:13:27,625\nLet me just try this again, and\nwe'll see what happens here.\n\n1380\n01:13:32,744 --> 01:13:36,390\nYeah, still not getting\nmy [LAUGH] OK button.\n\n1381\n01:13:36,390 --> 01:13:37,650\nIt does not want to do this.\n\n1382\n01:13:39,600 --> 01:13:44,090\nWell, worst case scenario,\nyou can always delete the database.\n\n1383\n01:13:44,090 --> 01:13:45,810\nYou can just take it out of there.\n\n1384\n01:13:45,810 --> 01:13:46,620\nJust get rid of it.\n\n1385\n01:13:47,630 --> 01:13:48,585\nThere we go.\n\n1386\n01:13:48,585 --> 01:13:51,720\nSince it's damaged anyway, we can just\nwipe it out and then restore it that way.\n\n1387\n01:13:51,720 --> 01:13:54,500\nSo I'll just right-click on databases\nhere and go to Restore Database.\n\n1388\n01:13:56,370 --> 01:13:58,080\nAnd it's got no backups set is chosen.\n\n1389\n01:13:58,080 --> 01:14:01,700\nSo I'll go and pick my backup set,\nfor the third time.\n\n1390\n01:14:04,990 --> 01:14:05,540\nThere we go.\n\n1391\n01:14:11,910 --> 01:14:12,710\nHm.\n\n1392\n01:14:12,710 --> 01:14:13,630\nIt's still not.\n\n1393\n01:14:13,630 --> 01:14:14,979\nWhy is it not restoring?\n\n1394\n01:14:19,936 --> 01:14:22,790\nNow it's upset because I've got\nthose old files laying around.\n\n1395\n01:14:22,790 --> 01:14:24,730\nSo when you wipe out a database like that.\n\n1396\n01:14:24,730 --> 01:14:28,710\nWhen you delete it out of SQL it\ndoesn't actually delete the files.\n\n1397\n01:14:28,710 --> 01:14:30,230\nSo the files get left behind.\n\n1398\n01:14:30,230 --> 01:14:33,550\nSo if I go in here and look, I've still\ngot my inventory file right there.\n\n1399\n01:14:33,550 --> 01:14:36,140\nAll the orders that were attached to it.\n\n1400\n01:14:36,140 --> 01:14:39,140\nSo all these old files are still there,\nand when we do a restore,\n\n1401\n01:14:39,140 --> 01:14:41,680\nyou actually have the option\nto overwrite that.\n\n1402\n01:14:41,680 --> 01:14:44,800\nIt's buried away in the restore choices.\n\n1403\n01:14:44,800 --> 01:14:51,500\nSo if I go Restore Database,\nthat option is buried away in here.\n\n1404\n01:14:51,500 --> 01:14:52,646\nLet me just find it real quick.\n\n1405\n01:14:55,470 --> 01:14:56,180\nHere we go.\n\n1406\n01:14:56,180 --> 01:14:58,780\nOverwrite the existing\ndatabase with replace, right?\n\n1407\n01:14:58,780 --> 01:15:01,881\nSo that's gonna say if there's old files\nthere, just go ahead and toast them and\n\n1408\n01:15:01,881 --> 01:15:02,960\nbring this one in.\n\n1409\n01:15:02,960 --> 01:15:05,010\nYou can do things like\npreserve replication.\n\n1410\n01:15:05,010 --> 01:15:07,870\nYou can set restricted user if you\nwant to make it where only you\n\n1411\n01:15:07,870 --> 01:15:10,160\ncan get in to test it to\nmake sure everything's fine.\n\n1412\n01:15:10,160 --> 01:15:13,220\nSo there's a few other options that\nare kind of buried away in there\n\n1413\n01:15:13,220 --> 01:15:14,750\nthat will take care of that.\n\n1414\n01:15:14,750 --> 01:15:18,140\nYou can also restore to a different\nphysical location if you don't want to\n\n1415\n01:15:18,140 --> 01:15:19,000\noverwrite the old files.\n\n1416\n01:15:19,000 --> 01:15:21,620\nMaybe you think there's some way\nyou can recover data from them.\n\n1417\n01:15:21,620 --> 01:15:24,270\nSo you've got a few choices there.\n\n1418\n01:15:24,270 --> 01:15:28,010\nSo, but, just to make it not a problem for\nme, I'll just go and delete the files.\n\n1419\n01:15:28,010 --> 01:15:31,070\nThat'll be just as easy,\nand we'll knock them out.\n\n1420\n01:15:32,120 --> 01:15:33,700\nAll right.\nNow, I think I spread some of the files to\n\n1421\n01:15:33,700 --> 01:15:34,260\nanother drive.\n\n1422\n01:15:34,260 --> 01:15:37,020\nSo let me just check and\nmake sure I didn't do that.\n\n1423\n01:15:37,020 --> 01:15:39,020\nOh, I need the transaction\nlogs to go away, too.\n\n1424\n01:15:41,020 --> 01:15:43,130\nSo we'll just get rid of that,\nand that should be it.\n\n1425\n01:15:43,130 --> 01:15:45,490\nI don't think I put\nanything on that drive.\n\n1426\n01:15:45,490 --> 01:15:46,859\nOh, I did put stuff here, though.\n\n1427\n01:15:49,541 --> 01:15:51,390\nSo we'll just get rid of these file, too.\n\n1428\n01:15:54,519 --> 01:15:55,845\nAnd then we'll give it another shot.\n\n1429\n01:15:55,845 --> 01:15:58,469\n[SOUND]\n\n1430\n01:15:58,469 --> 01:16:04,244\nThere we go.\n\n1431\n01:16:04,244 --> 01:16:05,310\nSo now it's churning along.\n\n1432\n01:16:05,310 --> 01:16:06,630\nIt restores the database.\n\n1433\n01:16:06,630 --> 01:16:09,330\nIt's putting each of those\nfiles back to their location.\n\n1434\n01:16:09,330 --> 01:16:10,680\nIt's recreating the database.\n\n1435\n01:16:10,680 --> 01:16:15,110\nNow you might not see it right away\nbecause the SQL Management Studio doesn't,\n\n1436\n01:16:15,110 --> 01:16:17,440\nit doesn't dynamically refresh for\nwhatever reason.\n\n1437\n01:16:17,440 --> 01:16:21,310\nSo I'm just gonna right-click my\ndatabases here and choose Refresh.\n\n1438\n01:16:21,310 --> 01:16:24,020\nAnd now I can see Inventory is back.\n\n1439\n01:16:24,020 --> 01:16:26,710\nAll those files that I just deleted,\nthey should be back too.\n\n1440\n01:16:26,710 --> 01:16:31,710\nSo if I go to my E drive, There's all\nthose inventory and orders files.\n\n1441\n01:16:31,710 --> 01:16:34,150\nSo all of those got brought\nback from the restore and\n\n1442\n01:16:34,150 --> 01:16:35,860\nnow the database is back online.\n\n1443\n01:16:35,860 --> 01:16:38,470\nSo had a little bit of a conflict\nwith my existing files.\n\n1444\n01:16:38,470 --> 01:16:41,290\nI have no idea why my OK button\nwasn't showing up there.\n\n1445\n01:16:41,290 --> 01:16:43,735\nI think my resolution must be too low.\n\n1446\n01:16:43,735 --> 01:16:47,180\nBut anyhow,\nit's just normally pretty straightforward.\n\n1447\n01:16:48,235 --> 01:16:49,725\nAll right.\nThere was one other option there\n\n1448\n01:16:49,725 --> 01:16:51,845\ncalled a tail log and\nI want to talk about that.\n\n1449\n01:16:51,845 --> 01:16:54,025\nI'll actually do it in the next segment.\n\n1450\n01:16:54,025 --> 01:16:57,275\nBut what we just saw right\nthere was the restore process.\n\n1451\n01:16:57,275 --> 01:16:58,725\nIt's pretty straightforward.\n\n1452\n01:16:58,725 --> 01:17:02,595\nIf it's an all new server you won't have\nthose file conflicts like I did, but\n\n1453\n01:17:02,595 --> 01:17:05,690\nif it's the existing server,\nthe bad data base is there.\n\n1454\n01:17:05,690 --> 01:17:08,570\nYou may have to take it offline\nbefore you can restore, or\n\n1455\n01:17:08,570 --> 01:17:12,050\nyou may have to do like what I did,\nwhich is take it offline, delete it, and\n\n1456\n01:17:12,050 --> 01:17:14,350\ndelete the files before we\ncan do a clean restore.\n\n1457\n01:17:14,350 --> 01:17:16,560\nIt just depends on\nthe state of the database.\n\n1458\n01:17:16,560 --> 01:17:19,720\nThere's so\nmany different ways a database can fail\n\n1459\n01:17:19,720 --> 01:17:21,850\nthat you may have to take\ndifferent actions each time.\n\n1460\n01:17:21,850 --> 01:17:26,320\nAnd you know, for me,\nI've seen a lot of these, but\n\n1461\n01:17:26,320 --> 01:17:29,160\nwhen you're just getting started in SQL,\na lot of it's new to you, and so\n\n1462\n01:17:29,160 --> 01:17:33,420\ndon't pigeonhole yourself into thinking\nthere's only one way to do the restore.\n\n1463\n01:17:33,420 --> 01:17:37,130\nAnd we'll see some things like\nthe tail-log backups in the next segment,\n\n1464\n01:17:37,130 --> 01:17:42,320\nwhere sometimes there's things that just\nwon't work in the GUI, but then you go and\n\n1465\n01:17:42,320 --> 01:17:44,960\nyou do it with Transact-SQL and\nit works just fine, right?\n\n1466\n01:17:44,960 --> 01:17:47,840\nSometimes there's a little bit of\nmojo that goes on behind the scene\n\n1467\n01:17:47,840 --> 01:17:48,480\nthat causes that.\n\n1468\n01:17:48,480 --> 01:17:51,840\nSo just because something doesn't\nwork in the GUI, don't give up.\n\n1469\n01:17:51,840 --> 01:17:54,160\nUsually just hit that script button and\ngive it a shot there.\n\n1470\n01:17:54,160 --> 01:17:57,360\nAt a minimum,\nyou get much better error reporting\n\n1471\n01:17:57,360 --> 01:18:01,720\nwhen you run it from the query analyzer\nhere, from the actual query window.\n\n1472\n01:18:01,720 --> 01:18:02,840\nThan you do through the GUI.\n\n1473\n01:18:02,840 --> 01:18:04,390\nIt's just one of the things that it does.\n\n1474\n01:18:06,020 --> 01:18:07,110\nAll right, well, let's see.\n\n1475\n01:18:07,110 --> 01:18:08,670\nWe saw point-in-time backups.\n\n1476\n01:18:08,670 --> 01:18:12,860\nWe saw, let's see, NORECOVERY options.\n\n1477\n01:18:12,860 --> 01:18:15,050\nYeah, the last thing I wanna\ntalk about are those tail logs.\n\n1478\n01:18:15,050 --> 01:18:18,440\nSo let's stop here and\ntake a quick break, and when we get back,\n\n1479\n01:18:18,440 --> 01:18:21,100\nwe'll cover tail logs and\nthen start to wrap this episode up.\n\n1480\n01:18:21,100 --> 01:18:23,627\nSo stay tuned, we'll back after this.\n\n1481\n01:18:23,627 --> 01:18:31,084\n[MUSIC]\n\n1482\n01:18:31,084 --> 01:18:32,780\nAll right, welcome back everybody.\n\n1483\n01:18:32,780 --> 01:18:34,540\nSo, tail logs.\n\n1484\n01:18:34,540 --> 01:18:36,960\nWhat the heck am I talking\nabout with a tail log?\n\n1485\n01:18:36,960 --> 01:18:40,712\nWell, let's go back to my backup scenario\nthat I was kind of showing you earlier\n\n1486\n01:18:40,712 --> 01:18:41,780\nin this show.\n\n1487\n01:18:41,780 --> 01:18:43,390\nSo let's say that we're\ndoing this model here.\n\n1488\n01:18:43,390 --> 01:18:45,950\nWe backup our transaction\nlogs every six hours.\n\n1489\n01:18:45,950 --> 01:18:47,920\nSo I do a full backup at midnight.\n\n1490\n01:18:47,920 --> 01:18:50,550\nAnd then a transaction log\nbackup every six hours.\n\n1491\n01:18:50,550 --> 01:18:52,640\nIf I have a failure at 11 PM.\n\n1492\n01:18:53,720 --> 01:18:57,620\nWell, I need my full backup, and I need\neach of the transaction logs that have\n\n1493\n01:18:57,620 --> 01:19:01,593\noccurred since then to\nbring me current to 6 PM.\n\n1494\n01:19:01,593 --> 01:19:02,144\nRight?\n\n1495\n01:19:02,144 --> 01:19:03,465\nOr 18:00.\n\n1496\n01:19:03,465 --> 01:19:07,847\nWell, that gets me to 6 PM,\nbut the failure was at 11 PM.\n\n1497\n01:19:07,847 --> 01:19:12,210\nWhat happened to the data\nfrom 6 PM to 11 PM?\n\n1498\n01:19:12,210 --> 01:19:12,770\nIt's gone.\n\n1499\n01:19:12,770 --> 01:19:13,520\nI lost it.\n\n1500\n01:19:13,520 --> 01:19:14,998\nRight?\nSo I lost five hours of data.\n\n1501\n01:19:14,998 --> 01:19:18,470\nWell, not always.\n\n1502\n01:19:18,470 --> 01:19:22,450\nSometimes when you have a failure,\nthe failure is with the database, but\n\n1503\n01:19:22,450 --> 01:19:25,070\nthe transaction logs are okay, all right?\n\n1504\n01:19:25,070 --> 01:19:27,450\nSometimes the transaction\nlogs are still healthy.\n\n1505\n01:19:27,450 --> 01:19:31,430\nThe LDF files are unaffected but\nthe MDF file is the one that's messed up.\n\n1506\n01:19:31,430 --> 01:19:36,450\nAnd so in that scenario,\nif your database has failed, you may,\n\n1507\n01:19:36,450 --> 01:19:41,090\nnot always, and in fact, most of the times\nit doesn't work, but in some cases,\n\n1508\n01:19:41,090 --> 01:19:44,490\nyou may be able to perform\na tail-log backup.\n\n1509\n01:19:44,490 --> 01:19:48,522\nAnd a tail-log backup is where you\njust back up the transaction logs\n\n1510\n01:19:48,522 --> 01:19:50,790\nwhile the database is failed.\n\n1511\n01:19:50,790 --> 01:19:54,750\nIt's a chance for us to come in and\nrecover the data that happened right here,\n\n1512\n01:19:54,750 --> 01:19:57,789\nfrom 6 PM to 11:00 PM,\nwhen the failure occurred.\n\n1513\n01:19:58,950 --> 01:20:01,431\nIf you can do a tail-log backup,\n\n1514\n01:20:01,431 --> 01:20:06,045\nthen you will be able to recover\nright to the point of failure.\n\n1515\n01:20:06,045 --> 01:20:11,071\nYou will get all of the data that was\n100% written at the point of failure.\n\n1516\n01:20:11,071 --> 01:20:15,214\nAnything that was 50% written or\n80% written, that stuff gets rolled back.\n\n1517\n01:20:15,214 --> 01:20:16,258\nThat doesn't happen.\n\n1518\n01:20:16,258 --> 01:20:18,946\nBut anything that was 100% written\nby the time of the failure,\n\n1519\n01:20:18,946 --> 01:20:20,510\nyou will be able to recover.\n\n1520\n01:20:20,510 --> 01:20:23,180\nThat is the best type\nof recovery possible,\n\n1521\n01:20:23,180 --> 01:20:25,330\nit's awesome when you can pull it off.\n\n1522\n01:20:25,330 --> 01:20:27,970\nBut, notice I keep saying if,\nand I keep saying when you can.\n\n1523\n01:20:27,970 --> 01:20:28,977\nRight?\nThese things.\n\n1524\n01:20:28,977 --> 01:20:31,560\nYou can't always do a tail log backup.\n\n1525\n01:20:31,560 --> 01:20:35,650\nIf the database is damaged significantly\nenough, then the log files are going to\n\n1526\n01:20:35,650 --> 01:20:37,380\nbe damaged too and you're not\ngoing to be able to recover them.\n\n1527\n01:20:37,380 --> 01:20:37,990\nAlright.\n\n1528\n01:20:37,990 --> 01:20:39,660\nBut if you can you should always try.\n\n1529\n01:20:39,660 --> 01:20:42,410\nSo for me,\nwhenever somebody comes to me and\n\n1530\n01:20:42,410 --> 01:20:44,760\nsays Don my database has\nfailed can you recover it?\n\n1531\n01:20:44,760 --> 01:20:46,380\nThe very first thing I do,\n\n1532\n01:20:46,380 --> 01:20:49,720\nbefore I do anything else,\nis attempt a tail log backup.\n\n1533\n01:20:49,720 --> 01:20:52,720\nIf I can get a tail log backup,\nthat's gonna help out a lot.\n\n1534\n01:20:52,720 --> 01:20:53,710\nAll right, so\n\n1535\n01:20:53,710 --> 01:20:58,150\nthe way we do a tail log, well the system\nactually offers to do it for you.\n\n1536\n01:20:58,150 --> 01:21:00,880\nIf I go and take my database like\nthe inventory database and I just go and\n\n1537\n01:21:00,880 --> 01:21:06,450\ntry and restore it, let me just go\nhere and do a database restore,\n\n1538\n01:21:06,450 --> 01:21:10,440\nall right, when you go to do the restore\nnotice this message up here.\n\n1539\n01:21:10,440 --> 01:21:13,970\nA tail log back up of the source\ndatabase will be taken.\n\n1540\n01:21:13,970 --> 01:21:15,630\nView this setting on the options page.\n\n1541\n01:21:15,630 --> 01:21:17,690\nSo, see it's looking out for you.\n\n1542\n01:21:17,690 --> 01:21:22,380\nIf you go to do the restore, it's going to\ntry and do the tail log back up for you.\n\n1543\n01:21:22,380 --> 01:21:24,028\nRight, so\nyou may not have to worry about it at all.\n\n1544\n01:21:24,028 --> 01:21:27,590\nIt's going to try and it may be able\nto bring you all the way current.\n\n1545\n01:21:27,590 --> 01:21:31,850\nSo your timeline value here,\nwhile it says it's going to restore\n\n1546\n01:21:31,850 --> 01:21:35,750\neverything to 7:52 AM,\nif the tail log backup is successful,\n\n1547\n01:21:35,750 --> 01:21:40,450\nthen it'll be able to go even beyond that,\nright, and get us even further along.\n\n1548\n01:21:40,450 --> 01:21:44,200\nSo that may or\nmay not be possible, right, but\n\n1549\n01:21:44,200 --> 01:21:46,510\nI don't normally rely on\nthis automated thing here.\n\n1550\n01:21:46,510 --> 01:21:50,230\nI always like to go in and\ndo this myself just to be able to see.\n\n1551\n01:21:50,230 --> 01:21:53,230\nAnd see whether or\nnot it's truly going to work.\n\n1552\n01:21:53,230 --> 01:21:56,940\nSo, what you can do is if I know there's\na problem with the inventory databases,\n\n1553\n01:21:56,940 --> 01:21:59,710\nif it's failing, is take a back-up.\n\n1554\n01:21:59,710 --> 01:22:03,169\nJust right click on it,\ngo to tasks and back-up and\n\n1555\n01:22:03,169 --> 01:22:06,580\nthen under the back-up here's the trick.\n\n1556\n01:22:06,580 --> 01:22:09,050\nYou need to do a transaction log back-up,\nbut\n\n1557\n01:22:09,050 --> 01:22:12,970\nyou need to set it not to\nflush the transaction logs.\n\n1558\n01:22:12,970 --> 01:22:15,420\nIf you try and flush the transaction logs,\nit's guaranteed to fail.\n\n1559\n01:22:15,420 --> 01:22:18,160\nThe database is damaged,\nyou can't flush the logs.\n\n1560\n01:22:18,160 --> 01:22:21,840\nWhat you have to do,\nis do a Transaction Log.\n\n1561\n01:22:21,840 --> 01:22:25,890\nBut go into the options, and\ntell it not to truncate.\n\n1562\n01:22:27,120 --> 01:22:30,970\nAnd so in here we have the option,\nlet's see, right here, transaction log,\n\n1563\n01:22:30,970 --> 01:22:37,310\nyou've got, you've got truncate the\ntransaction log which is the default or\n\n1564\n01:22:37,310 --> 01:22:41,630\nbackup the tail of the log and\nleave the database in the restoring state,\n\n1565\n01:22:41,630 --> 01:22:42,750\nall right?\n\n1566\n01:22:42,750 --> 01:22:47,130\nIf you choose that option now\nyou're doing a tail log backup,\n\n1567\n01:22:47,130 --> 01:22:49,580\na transaction log backup\nwithout truncating.\n\n1568\n01:22:51,050 --> 01:22:54,000\nNow, if it works you'll be able to restore\n\n1569\n01:22:54,000 --> 01:22:56,440\nall the way to the point of\nfailure which is awesome.\n\n1570\n01:22:57,720 --> 01:23:03,400\nBut, in my experience I don't think I\nhave ever gotten it to work from the GUI.\n\n1571\n01:23:03,400 --> 01:23:04,540\nWe'll see if it actually works.\n\n1572\n01:23:04,540 --> 01:23:06,810\nWell, I guess the database is healthy so\nit should work here.\n\n1573\n01:23:06,810 --> 01:23:13,460\nBut, in my entire life I have never\ngotten that to work in production.\n\n1574\n01:23:14,480 --> 01:23:17,020\nBut if you do it should\nbackup the tail log and\n\n1575\n01:23:17,020 --> 01:23:21,040\nsee how it moved the inventory\ndatabase to restoring.\n\n1576\n01:23:21,040 --> 01:23:26,030\nSo now I can go and restore that\ndatabase and when we go to restore it,\n\n1577\n01:23:26,030 --> 01:23:30,480\nit's going to have the backups that\nwe got from our other systems but\n\n1578\n01:23:30,480 --> 01:23:33,300\nit's also got the tail log right there.\n\n1579\n01:23:33,300 --> 01:23:35,970\nSo, it's added that tail log in and\nI know it's the tail log because\n\n1580\n01:23:35,970 --> 01:23:38,930\nsee how it says it's a transaction\nlog that's a copy only.\n\n1581\n01:23:38,930 --> 01:23:40,140\nTail logs don't truncate.\n\n1582\n01:23:40,140 --> 01:23:40,900\nThey're copy only.\n\n1583\n01:23:40,900 --> 01:23:42,310\nSo, that's how I can spot that.\n\n1584\n01:23:42,310 --> 01:23:46,520\nSo, It's gonna do that, and\nbring me right to the point of failure.\n\n1585\n01:23:47,570 --> 01:23:51,610\nI mentioned it almost never works for\nme from the GUI so what do I do?\n\n1586\n01:23:51,610 --> 01:23:54,090\nI use transact SQL to do it.\n\n1587\n01:23:54,090 --> 01:23:57,590\nIf you go back here into\nyour query analyzer,\n\n1588\n01:23:59,290 --> 01:24:01,920\nto do a tail log backup here\nis really not that hard.\n\n1589\n01:24:01,920 --> 01:24:04,955\nWe tell it which database we want\nto use so I'm gonna use inventory.\n\n1590\n01:24:04,955 --> 01:24:10,300\nAnd then,\nlet me make that a little bit bigger.\n\n1591\n01:24:11,510 --> 01:24:12,543\nWhere's that zoom option?\n\n1592\n01:24:15,004 --> 01:24:17,012\nWell somehow.\n\n1593\n01:24:17,012 --> 01:24:19,970\nThat's a little bit bigger.\n\n1594\n01:24:19,970 --> 01:24:26,845\nSo then we just go in here and\nwe basically say, backup, log Inventory.\n\n1595\n01:24:26,845 --> 01:24:28,190\n[LAUGH].\n\n1596\n01:24:28,190 --> 01:24:30,270\nAll new spelling there,\nbackup log inventory.\n\n1597\n01:24:30,270 --> 01:24:33,380\nSo, I'm telling you I'm gonna backup\nthe transaction logs of the inventory\n\n1598\n01:24:33,380 --> 01:24:38,660\ndatabase, and\nthen I'll tell it to disk equals and\n\n1599\n01:24:38,660 --> 01:24:40,870\nI'll tell it where I want to backup to.\n\n1600\n01:24:40,870 --> 01:24:48,851\nSo I'm gonna back this one up\nto g:\\backup\\Inventory_Tail.trn.\n\n1601\n01:24:48,851 --> 01:24:50,590\nAll right.\n\n1602\n01:24:50,590 --> 01:24:52,890\nNotice that trn that I'm adding to it?\n\n1603\n01:24:52,890 --> 01:24:55,710\nBackup files normally end in bak,\nthey're backup files.\n\n1604\n01:24:55,710 --> 01:24:58,960\nBut transaction log backups,\nthey usually end in trn.\n\n1605\n01:24:58,960 --> 01:25:01,000\nThe extension doesn't really matter, but\n\n1606\n01:25:01,000 --> 01:25:03,660\nthis is kind of what Microsoft\nuses as their default.\n\n1607\n01:25:03,660 --> 01:25:04,590\nAnd then here's the key thing.\n\n1608\n01:25:04,590 --> 01:25:08,008\nI need to add the with, NO_TRUNCATE.\n\n1609\n01:25:08,008 --> 01:25:12,260\nIf I leave that off,\nit's not going to work.\n\n1610\n01:25:12,260 --> 01:25:14,470\nIt'll try and truncate it, but\nif the database is damaged,\n\n1611\n01:25:14,470 --> 01:25:16,420\nit's just going to fail every time.\n\n1612\n01:25:16,420 --> 01:25:18,475\nSo this is going to\nattempt to do that backup.\n\n1613\n01:25:18,475 --> 01:25:21,405\nAnd for whatever reason on the GUI side,\n\n1614\n01:25:21,405 --> 01:25:25,685\nthe GUI gets really unhappy when\nthe database is not healthy.\n\n1615\n01:25:25,685 --> 01:25:29,095\nAnd so all sort of things on\nthe GUI stop working properly when\n\n1616\n01:25:29,095 --> 01:25:30,665\nthe database is broken.\n\n1617\n01:25:31,685 --> 01:25:36,055\nBut from transact sql,\nit's tapping right into the engine and\n\n1618\n01:25:36,055 --> 01:25:38,380\nit's a lot more thorough.\n\n1619\n01:25:38,380 --> 01:25:40,870\nIt cares a lot less than\nthe database's damage.\n\n1620\n01:25:40,870 --> 01:25:43,140\nSo I find more success\nwith doing it this way.\n\n1621\n01:25:43,140 --> 01:25:44,510\nSo I can run this.\n\n1622\n01:25:44,510 --> 01:25:46,570\nLet me just make sure I\ndon't have any typos.\n\n1623\n01:25:46,570 --> 01:25:48,680\nDatabase inventory cannot be opened.\n\n1624\n01:25:48,680 --> 01:25:49,180\nWhy not?\n\n1625\n01:25:50,200 --> 01:25:52,740\nDatabase, oh because it's\nalready in the restoring stage.\n\n1626\n01:25:52,740 --> 01:25:54,160\nShoot.\n\n1627\n01:25:54,160 --> 01:25:59,760\nSo, since it's still in the restoring\nstate, it's not going to come happy.\n\n1628\n01:25:59,760 --> 01:26:01,860\nAnd I don't think I can\nkick it out of that, can I,\n\n1629\n01:26:01,860 --> 01:26:03,480\nwithout actually doing a restore now.\n\n1630\n01:26:05,440 --> 01:26:10,640\nYeah, since it's still.\n\n1631\n01:26:10,640 --> 01:26:12,170\nYeah, now it thinks that it's restoring.\n\n1632\n01:26:12,170 --> 01:26:13,680\nSo I actually have to perform a restore.\n\n1633\n01:26:13,680 --> 01:26:16,840\nBut normally,\nI guess I could pick a different database.\n\n1634\n01:26:16,840 --> 01:26:18,450\nInstead of inventory I'll do products.\n\n1635\n01:26:19,660 --> 01:26:20,440\nAll right.\n\n1636\n01:26:20,440 --> 01:26:28,760\nSo, when I do this, it's going to perform\na tail log backup on my products database,\n\n1637\n01:26:28,760 --> 01:26:33,380\nand so when I run that it'll churn along\nand I've never done a full backup.\n\n1638\n01:26:33,380 --> 01:26:35,760\nThis is just a comedy of errors.\n\n1639\n01:26:35,760 --> 01:26:39,440\nSo, in this case I've never actually\ndone a full backup of that database so\n\n1640\n01:26:39,440 --> 01:26:40,190\nit's complaining there.\n\n1641\n01:26:40,190 --> 01:26:41,246\nSo let me just take a backup real quick.\n\n1642\n01:26:43,614 --> 01:26:46,440\nSo we'll just do a full backup.\n\n1643\n01:26:46,440 --> 01:26:47,760\nGreat, great, great.\n\n1644\n01:26:47,760 --> 01:26:49,070\nAnd off it goes.\n\n1645\n01:26:49,070 --> 01:26:51,760\nSo now I've got a full backup on there so\nthis one should run.\n\n1646\n01:26:51,760 --> 01:26:55,110\nSo, basically we go in and\nwe run this, and there we go.\n\n1647\n01:26:55,110 --> 01:26:57,390\nSo it backs it up and\nnow it's just getting the changes and\n\n1648\n01:26:57,390 --> 01:26:58,630\ndumping it into that file.\n\n1649\n01:26:58,630 --> 01:27:00,740\nNow I can go and\nrestore whatever backup I've got.\n\n1650\n01:27:00,740 --> 01:27:03,970\nSo I would go back here and\nI would restore my full backup.\n\n1651\n01:27:03,970 --> 01:27:06,910\nI'd restore this transaction log and\nthis transaction log.\n\n1652\n01:27:06,910 --> 01:27:13,060\nBut when I restore the last transaction\nlog, I would still say with no recovery.\n\n1653\n01:27:13,060 --> 01:27:17,090\nDon't recover the database yet, because\nI've got one more backup to restore.\n\n1654\n01:27:17,090 --> 01:27:21,690\nAnd the I would go and manually restore\nthis backup that we just took, right?\n\n1655\n01:27:21,690 --> 01:27:24,530\nPoint to this file,\nit'll see that tail log and\n\n1656\n01:27:24,530 --> 01:27:27,770\nrestore it getting us to\nthe point of failure.\n\n1657\n01:27:27,770 --> 01:27:31,460\nThat's the only way to get right there.\n\n1658\n01:27:31,460 --> 01:27:32,800\nTo get right to that point and\n\n1659\n01:27:32,800 --> 01:27:36,980\nnot lose any data to recover every\ntransaction that occurred, right.\n\n1660\n01:27:36,980 --> 01:27:40,530\nSo the moral of the story is,\nwhile it doesn't always work.\n\n1661\n01:27:40,530 --> 01:27:43,920\nThe tail log backup should be the first\nthing you do in a failure moment.\n\n1662\n01:27:43,920 --> 01:27:47,730\nSo when the database fails,\nstep one; try and take a tail log backup.\n\n1663\n01:27:47,730 --> 01:27:51,350\nBefore you do anything else, try and\ntake a tail log backup, alright.\n\n1664\n01:27:51,350 --> 01:27:54,270\nNine times out of ten it'll fail,\nand if it fails, that's it.\n\n1665\n01:27:54,270 --> 01:27:57,350\nYou go to your backups and\nyou just restore the latest copy you have.\n\n1666\n01:27:57,350 --> 01:28:01,470\nBut on that on time out of ten where\nit does work, you get everything right\n\n1667\n01:28:01,470 --> 01:28:04,830\nup to the point of failure and\nit's the best hyper recovery to have.\n\n1668\n01:28:04,830 --> 01:28:06,830\nI've had it work for me several times.\n\n1669\n01:28:06,830 --> 01:28:08,223\nIt's a great thing when it does.\n\n1670\n01:28:08,223 --> 01:28:12,260\nI find better success using transact\nSQL then the GUI though, so\n\n1671\n01:28:12,260 --> 01:28:14,815\njust my own personal experience there.\n\n1672\n01:28:14,815 --> 01:28:15,745\nAll right.\n\n1673\n01:28:15,745 --> 01:28:19,310\nSo that pretty much wraps\nup doing the backups.\n\n1674\n01:28:19,310 --> 01:28:20,760\nCouple of words of advice.\n\n1675\n01:28:20,760 --> 01:28:23,986\nFirst off, schedule your backups,\nall right, don't manually run them.\n\n1676\n01:28:23,986 --> 01:28:28,384\nCreate a backup job the way you want,\nhit that Script button to get the code and\n\n1677\n01:28:28,384 --> 01:28:30,360\nput that in a SQL Server Agent job.\n\n1678\n01:28:30,360 --> 01:28:32,371\nOr create a maintenance plan and\nin the maintenance plan,\n\n1679\n01:28:32,371 --> 01:28:35,010\ntell it to back up the database and\ntell it how often you want it done, right?\n\n1680\n01:28:35,010 --> 01:28:36,823\nOne way or another,\nschedule the backups so\n\n1681\n01:28:36,823 --> 01:28:40,210\nthey happen without you thinking about it,\nyou don't wanna forget, all right?\n\n1682\n01:28:40,210 --> 01:28:43,940\nWord of advice number two,\ndon't store your backups on the server.\n\n1683\n01:28:43,940 --> 01:28:46,149\nIt's all right to put them\nthere when you make them, but\n\n1684\n01:28:46,149 --> 01:28:48,888\nmake sure you replicate them to\nsomewhere else afterwards, right?\n\n1685\n01:28:48,888 --> 01:28:51,410\nSo you can have a backup right\nthere on the server, that's fine.\n\n1686\n01:28:51,410 --> 01:28:53,894\nBut make sure you've got\na copy somewhere else too,\n\n1687\n01:28:53,894 --> 01:28:56,500\nyou'll want that in the event\nof a hard drive failure.\n\n1688\n01:28:56,500 --> 01:29:00,535\nAnother thing,\ntest your restores, all right?\n\n1689\n01:29:00,535 --> 01:29:03,475\nWhen you restore a database,\nyou can restore it to another server.\n\n1690\n01:29:03,475 --> 01:29:06,726\nBring up a SQL Server instance on your\nown laptop and test the restore, and\n\n1691\n01:29:06,726 --> 01:29:08,365\nmake sure it works, right?\n\n1692\n01:29:08,365 --> 01:29:11,385\nYou don't want to be at a moment\nof failure, you go to restore and\n\n1693\n01:29:11,385 --> 01:29:13,265\nyou find out your backup is corrupt,\nright?\n\n1694\n01:29:13,265 --> 01:29:16,235\nYou'd rather know that in advance\nthan during a moment of failure.\n\n1695\n01:29:16,235 --> 01:29:19,900\nSo, test your restores,\nmake sure they work, all right?\n\n1696\n01:29:19,900 --> 01:29:22,470\nThose are all different\nthings that are really handy.\n\n1697\n01:29:22,470 --> 01:29:25,240\nThe only other thing is, pick the backup\nsolution that's right for you,\n\n1698\n01:29:25,240 --> 01:29:27,380\nyour company has different needs.\n\n1699\n01:29:27,380 --> 01:29:30,525\nYour backup structure needs to be\nbuilt around how much data you can\n\n1700\n01:29:30,525 --> 01:29:31,320\nafford to lose.\n\n1701\n01:29:31,320 --> 01:29:33,860\nCan you afford to lose 24 hours of data?\n\n1702\n01:29:33,860 --> 01:29:37,300\nFine, do a full backup once a day,\nsimple recovery model.\n\n1703\n01:29:37,300 --> 01:29:39,210\nCan you not afford to lose any data?\n\n1704\n01:29:39,210 --> 01:29:41,990\nWell you need to have\nthe full recovery model.\n\n1705\n01:29:41,990 --> 01:29:45,997\nYou need to be doing transaction log\nbackups every 5 minutes, 15 minutes,\n\n1706\n01:29:45,997 --> 01:29:48,546\nwhatever, how often you need,\nto ensure you've\n\n1707\n01:29:48,546 --> 01:29:52,270\ngot backups of your data to lose as\nlittle data as possible when you fail.\n\n1708\n01:29:52,270 --> 01:29:53,730\nThere are other solutions out there.\n\n1709\n01:29:53,730 --> 01:29:57,610\nThere is SQL replication, which we'll\nactually talk about in another episode.\n\n1710\n01:29:57,610 --> 01:30:00,554\nAnd SQL clustering, so\nwe can have multiple servers involved when\n\n1711\n01:30:00,554 --> 01:30:02,600\na database fails and\nanother one's right there.\n\n1712\n01:30:02,600 --> 01:30:04,730\nThose protect you from hardware failure,\n\n1713\n01:30:04,730 --> 01:30:06,840\nthey don't protect you from\nyour end users though.\n\n1714\n01:30:06,840 --> 01:30:10,303\nIn a replicated database,\nif somebody drops a table on one server,\n\n1715\n01:30:10,303 --> 01:30:13,600\nthat replicates to the other side and\ndrops the table there too.\n\n1716\n01:30:13,600 --> 01:30:17,600\nNow we will learn about database snapshots\nlater on too, they can help, but\n\n1717\n01:30:17,600 --> 01:30:19,860\nthere's no substitute for a good backup.\n\n1718\n01:30:19,860 --> 01:30:24,560\nThe things we talked about in this episode\nare things that every company should do.\n\n1719\n01:30:24,560 --> 01:30:26,620\nAll right,\nwell that pretty much wraps up backups.\n\n1720\n01:30:26,620 --> 01:30:31,336\nSo let me just remind you guys, if you\nhave questions on any of that, just ask,\n\n1721\n01:30:31,336 --> 01:30:31,840\nright?\n\n1722\n01:30:31,840 --> 01:30:34,458\nLive during the show you\ncan go to itpro.tv/live,\n\n1723\n01:30:34,458 --> 01:30:37,420\nyou'll see the chat box\nright beneath the video.\n\n1724\n01:30:37,420 --> 01:30:40,800\nPost your questions there,\nwe monitor and answer during the show.\n\n1725\n01:30:40,800 --> 01:30:43,990\nIf you have questions after the show,\nuse our Q&A forums.\n\n1726\n01:30:43,990 --> 01:30:47,526\nAt the top of every page is a link that\nsays Q&A, you can jump right in there,\n\n1727\n01:30:47,526 --> 01:30:49,650\npost your question, we monitor and answer.\n\n1728\n01:30:49,650 --> 01:30:54,010\nSo one way or another,\nwe will get your questions taken care of.\n\n1729\n01:30:54,010 --> 01:30:55,850\nWell I hope you guys enjoyed the show.\n\n1730\n01:30:55,850 --> 01:31:00,040\nSigning off for ITProTV, I'm Don Pezet and\nI will see you next time.\n\n1731\n01:31:00,040 --> 01:31:10,040\n[MUSIC]\n\n",
          "vimeoId": "105865973"
        },
        {
          "description": "In this episode Don shows various methods for getting data into and out of SQL. He wraps up by showing how to use indexes with your data to significantly improve performance.",
          "length": "7303",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/007-Import-Export-and-Indexing-Data.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/007-Import-Export-and-Indexing-Data-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/007-Import-Export-and-Indexing-Data-sm.jpg",
          "title": "Import, Export, and Indexing Data",
          "transcript": "1\n00:00:00,103 --> 00:00:10,103\n[MUSIC]\n\n2\n00:00:33,535 --> 00:00:34,139\nAll right.\n\n3\n00:00:34,139 --> 00:00:36,677\nGood morning, good afternoon,\nand good evening, and\n\n4\n00:00:36,677 --> 00:00:38,730\nwelcome back to another\nepisode of ITProTV.\n\n5\n00:00:38,730 --> 00:00:43,990\nI'm your host Don Pezet, back again\nwith another episode of Microsoft SQL.\n\n6\n00:00:43,990 --> 00:00:46,650\nToday we're gonna diving be\ninto some neat things that we\n\n7\n00:00:46,650 --> 00:00:49,700\njust really haven't addressed so\nfar but are pretty important.\n\n8\n00:00:49,700 --> 00:00:53,790\nWe're gonna start off taking a look\nat getting data into our database.\n\n9\n00:00:53,790 --> 00:00:57,070\nAll through this series, right, we've\nfilmed quite a few episodes at this point\n\n10\n00:00:57,070 --> 00:01:00,420\nand all of them have centered around\ncreating the database server and\n\n11\n00:01:00,420 --> 00:01:04,200\ngetting our infrastructure in place, and\nbackups and restores and stuff like that.\n\n12\n00:01:04,200 --> 00:01:08,600\nBut we've never actually put\nany data into our database yet.\n\n13\n00:01:08,600 --> 00:01:09,536\nSo we need to see about that.\n\n14\n00:01:09,536 --> 00:01:12,414\nSo we're gonna get a chance to see\nsticking data into the database.\n\n15\n00:01:12,414 --> 00:01:17,106\nWe're also gonna take a look at how we can\noptimize that data to make our server run\n\n16\n00:01:17,106 --> 00:01:17,663\nfaster.\n\n17\n00:01:17,663 --> 00:01:21,519\nSo when we start to bring in\ninformation as a systems administrator,\n\n18\n00:01:21,519 --> 00:01:25,637\na lot of times they're gonna tell you\nhey I need you to create a database and\n\n19\n00:01:25,637 --> 00:01:29,377\nhere's the data I want you to stick\nin there and you pop it in there.\n\n20\n00:01:29,377 --> 00:01:33,176\nWell, you could stop there, but\ntypically, we go a little bit further and\n\n21\n00:01:33,176 --> 00:01:37,214\nsay now that I've got the data, how can I\nmake my server run as fast as possible,\n\n22\n00:01:37,214 --> 00:01:40,690\nhow can I really optimize the queries\nthat my developers are using?\n\n23\n00:01:40,690 --> 00:01:43,340\nCuz the developers don't necessarily\nknow how to do that themselves.\n\n24\n00:01:43,340 --> 00:01:45,810\nSo that's what we're gonna\nlook at in this episode, and\n\n25\n00:01:45,810 --> 00:01:48,380\nwe'll kinda start off with\ngetting our data in here.\n\n26\n00:01:48,380 --> 00:01:51,925\nSo I've been working with a sample\ndatabase all through this series and\n\n27\n00:01:51,925 --> 00:01:55,010\nIt looks like we kind of left a bit\nof a mess in the last episode.\n\n28\n00:01:55,010 --> 00:01:57,400\nI've got one data base\nthat's still restoring.\n\n29\n00:01:57,400 --> 00:01:58,720\nI'm gonna ignore it.\n\n30\n00:01:59,770 --> 00:02:04,320\nBut we got like a products data base\nhere and in my products data base I can\n\n31\n00:02:04,320 --> 00:02:08,020\ndrill down and see tables that we've\ncreated, and I don't have any.\n\n32\n00:02:08,020 --> 00:02:12,380\nWell, a database without any tables\nis not much of a database at all.\n\n33\n00:02:12,380 --> 00:02:14,060\nSo I need to get in here and\n\n34\n00:02:14,060 --> 00:02:17,210\nstart to create some tables and\nget some data put in.\n\n35\n00:02:17,210 --> 00:02:18,160\nI can do it by hand.\n\n36\n00:02:18,160 --> 00:02:18,700\nRight?\n\n37\n00:02:18,700 --> 00:02:21,220\nIf I want to create my own table,\nI can do that.\n\n38\n00:02:21,220 --> 00:02:23,780\nI just right click here on tables and\ngo to New Table.\n\n39\n00:02:25,170 --> 00:02:29,180\nAnd it asks us for the various columns\nthat are gonna be in that table.\n\n40\n00:02:29,180 --> 00:02:31,940\nNow, notice it's not asking for\na table name.\n\n41\n00:02:31,940 --> 00:02:34,200\nWhen I save it,\nit'll ask for a table name.\n\n42\n00:02:34,200 --> 00:02:37,380\nOr if I wanna enter it ahead of time,\nI can go over here to Properties, and\n\n43\n00:02:37,380 --> 00:02:38,450\nthe table name is right here.\n\n44\n00:02:38,450 --> 00:02:40,710\nIt's just defaulting\nto table underscore 1.\n\n45\n00:02:40,710 --> 00:02:42,800\nWe can call it whatever we want.\n\n46\n00:02:42,800 --> 00:02:45,990\nSo, for example,\nif this is my products database,\n\n47\n00:02:45,990 --> 00:02:49,040\nI probably need a products table that'll\nhave a list of all of my products.\n\n48\n00:02:49,040 --> 00:02:50,770\nSo I can come in here and create one.\n\n49\n00:02:50,770 --> 00:02:55,630\nI'll call this my Products table.\n\n50\n00:02:55,630 --> 00:02:59,340\nAnd what are some of the column types that\nwe might have for something like products?\n\n51\n00:02:59,340 --> 00:03:02,880\nWell we probably wanna have\nsome kind of ID number\n\n52\n00:03:02,880 --> 00:03:05,810\nthat will represent each\nproduct numerically.\n\n53\n00:03:05,810 --> 00:03:08,920\nID numbers are really important for\ndoing things like cross referencing.\n\n54\n00:03:08,920 --> 00:03:13,280\nWhen somebody buys ten different products\nI don't want to store the full product\n\n55\n00:03:13,280 --> 00:03:14,060\nname for each one.\n\n56\n00:03:14,060 --> 00:03:15,480\nInstead I just wanna store a number.\n\n57\n00:03:15,480 --> 00:03:18,460\nThey purchased item number 5,\nitem number 7, and item number 33.\n\n58\n00:03:18,460 --> 00:03:22,380\nAnd then we can do lookups to\nsay what is item number 33?\n\n59\n00:03:22,380 --> 00:03:23,700\nAnd we would pull that from here.\n\n60\n00:03:23,700 --> 00:03:26,170\nSo each product that we have\nwould have an ID number.\n\n61\n00:03:27,200 --> 00:03:29,610\nWe'd also have something like a name for\nthe product.\n\n62\n00:03:30,890 --> 00:03:33,280\nMaybe a description of the product.\n\n63\n00:03:33,280 --> 00:03:36,650\nAnd maybe we have short descriptions and\nlong descriptions.\n\n64\n00:03:36,650 --> 00:03:41,350\nSo there might be some real quick\none sentence short description\n\n65\n00:03:42,450 --> 00:03:45,630\nwhich is just a quick easy\nnote about what this item is.\n\n66\n00:03:45,630 --> 00:03:48,300\nAnd then we might have\na long description which is\n\n67\n00:03:48,300 --> 00:03:52,500\nvery in depth detailing all the pros and\ncons of that product.\n\n68\n00:03:52,500 --> 00:03:54,870\nWe probably also need to know a price.\n\n69\n00:03:54,870 --> 00:03:56,780\nHow much that product is gonna cost.\n\n70\n00:03:56,780 --> 00:03:59,570\nWe might need to know\nwhether it's taxable or not.\n\n71\n00:03:59,570 --> 00:04:01,110\nDifferent countries have different rules.\n\n72\n00:04:01,110 --> 00:04:04,540\nIn Europe some products have VAT applied,\nsome products don't.\n\n73\n00:04:04,540 --> 00:04:07,090\nHere in the US some products are taxable,\nsome aren't.\n\n74\n00:04:07,090 --> 00:04:09,410\nSo like a lot of food\nstuffs are non taxable.\n\n75\n00:04:09,410 --> 00:04:13,890\nSo we might have a taxable column,\nthis stores yes or no as to whether or\n\n76\n00:04:13,890 --> 00:04:15,850\nnot that item is taxable.\n\n77\n00:04:15,850 --> 00:04:19,710\nSo we just come through and we define\nwhat those columns are gonna be for\n\n78\n00:04:19,710 --> 00:04:21,720\nour products, right?\n\n79\n00:04:21,720 --> 00:04:24,470\nNow, notice the data types over here.\n\n80\n00:04:24,470 --> 00:04:27,450\nEvery column stores\na certain amount of data.\n\n81\n00:04:27,450 --> 00:04:30,610\nAnd in SQL we have two different\nmain types of data types.\n\n82\n00:04:30,610 --> 00:04:33,360\nThere's fixed data types,\nwhich all of these are.\n\n83\n00:04:33,360 --> 00:04:35,980\nAnd then there's variable data types.\n\n84\n00:04:35,980 --> 00:04:40,700\nA fixed data type, the database knows\nexactly how big it's going to be.\n\n85\n00:04:40,700 --> 00:04:43,580\nSee how these say, nchar(10), right.\n\n86\n00:04:43,580 --> 00:04:49,630\nSo that is a text character, and it's\ngonna hold up to ten characters, right?\n\n87\n00:04:49,630 --> 00:04:50,600\nTen is the maximum.\n\n88\n00:04:50,600 --> 00:04:52,360\nIt's a fixed size of ten.\n\n89\n00:04:52,360 --> 00:04:57,680\nSo I can store between zero and\nten letters inside of this field.\n\n90\n00:04:57,680 --> 00:05:02,160\nNow, for something like a product name,\nten characters is probably not enough.\n\n91\n00:05:02,160 --> 00:05:04,550\nAnd so I might need to make this bigger.\n\n92\n00:05:04,550 --> 00:05:08,920\nNow, with a fixed field like this,\nthe database says,\n\n93\n00:05:08,920 --> 00:05:14,080\nI don't care if you store one letter or\nten letters, when I write it to the file,\n\n94\n00:05:14,080 --> 00:05:18,740\nit's gonna take ten spaces, ten bytes,\nor whatever, ten values, ten characters.\n\n95\n00:05:18,740 --> 00:05:23,440\nSo that way the database always knows\nexactly how big that data is gonna be, and\n\n96\n00:05:23,440 --> 00:05:25,290\nit's very, very efficient.\n\n97\n00:05:25,290 --> 00:05:28,950\nFor the most part, you want to use\nfixed data types whenever you can.\n\n98\n00:05:30,390 --> 00:05:33,380\nHowever, there's times where fixed\ndata types don't work out, for\n\n99\n00:05:33,380 --> 00:05:36,020\nexample with the long description.\n\n100\n00:05:36,020 --> 00:05:40,160\nIf my long description\ncould be 50 characters,\n\n101\n00:05:40,160 --> 00:05:43,210\ncould be 5,000 characters,\nCould be 50,000 characters.\n\n102\n00:05:43,210 --> 00:05:45,300\nDepends on how much I was willing\nto write about that product.\n\n103\n00:05:45,300 --> 00:05:47,510\nI really don't know how\nbig it is going to be.\n\n104\n00:05:47,510 --> 00:05:50,437\nAnd so if I pick a really big fixed value,\n\n105\n00:05:50,437 --> 00:05:54,410\nI might be wasting a lot\nof space in my database.\n\n106\n00:05:54,410 --> 00:05:57,490\nAnd so for\nthose I might want to make it variable.\n\n107\n00:05:57,490 --> 00:06:02,700\nAnd with a variable character, or a\nvariable data type, it says you can store\n\n108\n00:06:02,700 --> 00:06:07,300\nup to this amount, you still specify\na maximum, but you don't have a minimum.\n\n109\n00:06:07,300 --> 00:06:11,200\nYou can specify as few as you want and\nthat's all the space you'll take.\n\n110\n00:06:11,200 --> 00:06:11,880\nSo for\n\n111\n00:06:11,880 --> 00:06:16,685\nexample with the short description, maybe\nI say that that's going to be a nchar.\n\n112\n00:06:16,685 --> 00:06:18,810\nWe'll say 120, okay, so\n\n113\n00:06:18,810 --> 00:06:23,497\nthe short description can't\nhave more than 120 characters.\n\n114\n00:06:23,497 --> 00:06:25,551\nOr you know what,\nlet's go Twitter, what is Twitter?\n\n115\n00:06:25,551 --> 00:06:27,931\nIt's like 143, isn't it?\n\n116\n00:06:27,931 --> 00:06:30,369\nSo we'll say nchar(143).\n\n117\n00:06:30,369 --> 00:06:34,932\nSo now it'll know that I can store\ndata in here up to 143 characters.\n\n118\n00:06:34,932 --> 00:06:37,294\nBut if I store 100 characters in there,\n\n119\n00:06:37,294 --> 00:06:40,480\nit'll still consume the same\namount of space as 143.\n\n120\n00:06:40,480 --> 00:06:41,870\nBut for the long description,\n\n121\n00:06:41,870 --> 00:06:45,810\nif I drop that down you'll\nsee I've got nv character 50.\n\n122\n00:06:45,810 --> 00:06:47,500\nAll right?\n\n123\n00:06:47,500 --> 00:06:51,304\nAnd I can change that 50 to whatever and\nmaybe I'll make it 5,000.\n\n124\n00:06:51,304 --> 00:06:52,198\nAll right?\n\n125\n00:06:52,198 --> 00:06:54,500\nThis one, oop, 4,000's my highest.\n\n126\n00:06:54,500 --> 00:06:56,440\nLet me fix that.\n\n127\n00:06:56,440 --> 00:06:57,690\nEvery data type has a maximum.\n\n128\n00:06:57,690 --> 00:06:58,650\nI just went over the maximum.\n\n129\n00:06:58,650 --> 00:06:59,770\nSo I'll set it to 4,000.\n\n130\n00:06:59,770 --> 00:07:02,910\nSo it could be up to 4,000 characters.\n\n131\n00:07:02,910 --> 00:07:05,870\nAnd if I write 4,000 characters in there,\nthat's how much space it will take.\n\n132\n00:07:05,870 --> 00:07:09,753\nBut if I write 2,000 characters in there,\nit'll only consume 2,000.\n\n133\n00:07:09,753 --> 00:07:11,260\nThat's it, okay?\n\n134\n00:07:11,260 --> 00:07:14,810\nSo that's me kind of determining exactly\nhow much is gonna go in that field and\n\n135\n00:07:14,810 --> 00:07:16,810\nhow efficient my storage is.\n\n136\n00:07:16,810 --> 00:07:20,390\nOther things, though, like the ID,\nthat's gonna be a number, right?\n\n137\n00:07:20,390 --> 00:07:23,620\nI don't want text characters, I don't want\nletters and things like that in there.\n\n138\n00:07:23,620 --> 00:07:27,380\nSo I might take this data type and\nchange it to an integer.\n\n139\n00:07:27,380 --> 00:07:29,220\nSo I'm gonna pick that right there, int.\n\n140\n00:07:29,220 --> 00:07:31,730\nRight.\nSo that's gonna be an integer column, and\n\n141\n00:07:31,730 --> 00:07:35,020\nprice will be the same way,\nthat's gonna be an integer column.\n\n142\n00:07:36,610 --> 00:07:37,330\nWhoops.\n\n143\n00:07:37,330 --> 00:07:38,770\nIf I can click on it.\n\n144\n00:07:42,832 --> 00:07:43,990\nThere we go.\n\n145\n00:07:43,990 --> 00:07:47,332\nMy taxable column,\nthat's gonna be Yes, No.\n\n146\n00:07:47,332 --> 00:07:48,911\nIt's an N character 10.\n\n147\n00:07:48,911 --> 00:07:52,750\nI might drop that down to three.\n\n148\n00:07:52,750 --> 00:07:56,042\nThree cuz yes is three letters,\nno is two letters.\n\n149\n00:07:56,042 --> 00:07:58,220\nSo, nchar(3) would take care of that.\n\n150\n00:07:58,220 --> 00:07:59,667\nOr if I'm doing true/false.\n\n151\n00:07:59,667 --> 00:08:04,630\nI might wanna go nchar5 to be able to hold\ntrue or false, based on what I'm doing.\n\n152\n00:08:04,630 --> 00:08:05,780\nOr I could do integer.\n\n153\n00:08:05,780 --> 00:08:06,970\nZero is false, one is true.\n\n154\n00:08:06,970 --> 00:08:09,060\nYou know,\nit's up to you how you wanna do that.\n\n155\n00:08:09,060 --> 00:08:11,520\nSo you'd pick the appropriate\ndata type for it.\n\n156\n00:08:11,520 --> 00:08:15,190\nNow, for the most part as a DBA,\nyou worry about this, right?\n\n157\n00:08:15,190 --> 00:08:16,890\nBut as a system admin, you don't.\n\n158\n00:08:16,890 --> 00:08:20,170\nThe developer should be telling you\nexactly what kind of data is going in\n\n159\n00:08:20,170 --> 00:08:21,550\nwhich columns.\n\n160\n00:08:21,550 --> 00:08:24,560\nBut, if you're in one of those\nenvironments where it's left up to you you\n\n161\n00:08:24,560 --> 00:08:27,390\nmay have to pick, and so we do have\nsome of the different choices here.\n\n162\n00:08:27,390 --> 00:08:29,950\nThere are some special\nones I want to point out.\n\n163\n00:08:29,950 --> 00:08:31,790\nThis n character 4,000.\n\n164\n00:08:31,790 --> 00:08:36,430\nWhat if I want to store\nmore than 4,000 characters?\n\n165\n00:08:36,430 --> 00:08:38,240\nWell that data type is not gonna work for\nme.\n\n166\n00:08:38,240 --> 00:08:40,040\nSo I've gotta pick a different one.\n\n167\n00:08:40,040 --> 00:08:41,450\nWell if I look at N character,\n\n168\n00:08:41,450 --> 00:08:45,210\nthat's it, there's no other variation\nof N character that I can do.\n\n169\n00:08:45,210 --> 00:08:47,270\nN variable character\nhad a value called max.\n\n170\n00:08:47,270 --> 00:08:48,978\nWhat is that?\n\n171\n00:08:48,978 --> 00:08:53,760\nWell, N variable character\nmax is a special data type.\n\n172\n00:08:53,760 --> 00:08:57,240\nIt's one that has an insanely large limit.\n\n173\n00:08:57,240 --> 00:08:58,740\nIf I remember right, it's four terabytes.\n\n174\n00:08:58,740 --> 00:08:59,570\nBut don't quote me on that.\n\n175\n00:08:59,570 --> 00:09:00,690\nI might be wrong.\n\n176\n00:09:00,690 --> 00:09:02,250\nIt's massive, right?\n\n177\n00:09:02,250 --> 00:09:04,240\nAn insane amount of data.\n\n178\n00:09:04,240 --> 00:09:08,700\nAnd when you have a cell that's in\na column that is nvarchar(MAX).\n\n179\n00:09:08,700 --> 00:09:12,480\nYou could store the entire text of\nMoby Dick in there if you wanted, right?\n\n180\n00:09:12,480 --> 00:09:14,790\nYou could huge amounts of text in there.\n\n181\n00:09:14,790 --> 00:09:16,060\nVery, very cool stuff.\n\n182\n00:09:16,060 --> 00:09:19,130\nWell, what the database does, is it says\nall right, this is gonna be big data.\n\n183\n00:09:19,130 --> 00:09:20,850\nAnd I don't know how big it's gonna be.\n\n184\n00:09:20,850 --> 00:09:23,920\nSo, instead of storing it right\nthere with the other row data.\n\n185\n00:09:23,920 --> 00:09:25,960\nWe're going to move it to\nthe end of the database.\n\n186\n00:09:25,960 --> 00:09:29,270\nIt actually stores it in\na different place in the database.\n\n187\n00:09:29,270 --> 00:09:30,560\nBecause of the nature of the data.\n\n188\n00:09:30,560 --> 00:09:31,720\nWe don't know how big it's going to be.\n\n189\n00:09:31,720 --> 00:09:33,220\nIt could get vast.\n\n190\n00:09:33,220 --> 00:09:36,140\nSo, end variable character Max does that.\n\n191\n00:09:36,140 --> 00:09:37,520\nThere's another one called end text.\n\n192\n00:09:37,520 --> 00:09:39,640\nIt's in here somewhere.\n\n193\n00:09:39,640 --> 00:09:40,720\nRight there, end text.\n\n194\n00:09:40,720 --> 00:09:41,700\nIt's another example.\n\n195\n00:09:41,700 --> 00:09:43,250\nThat's actually the old way of doing it.\n\n196\n00:09:43,250 --> 00:09:46,990\nWhere it would allow you to have huge\namounts of texts and you could stick that.\n\n197\n00:09:46,990 --> 00:09:48,790\nIt would go at the end of the database.\n\n198\n00:09:48,790 --> 00:09:51,230\nThere's another one called\nbinary that does the same thing.\n\n199\n00:09:51,230 --> 00:09:53,901\nBut instead of text Right here.\n\n200\n00:09:53,901 --> 00:09:56,490\nActually that one says binary 50.\n\n201\n00:09:56,490 --> 00:09:59,160\nOh that's right they've modified that one.\n\n202\n00:09:59,160 --> 00:10:03,320\nInstead of binary 50,\nwe can now use the end variable character.\n\n203\n00:10:03,320 --> 00:10:06,920\nBut, binary were not going to store text\nin there, it's going to be binary data.\n\n204\n00:10:06,920 --> 00:10:11,220\nLike we're storing images or files,\nprograms, software, whatever.\n\n205\n00:10:11,220 --> 00:10:12,790\nWe're storing that in the database.\n\n206\n00:10:12,790 --> 00:10:16,060\nSo you've got some really interesting\ndata types that are in there.\n\n207\n00:10:16,060 --> 00:10:19,780\nThings like datetime, that are just\ngonna be storing month, day, year,\n\n208\n00:10:19,780 --> 00:10:20,830\nthat kind of information.\n\n209\n00:10:20,830 --> 00:10:23,460\nSome really neat stuff that's in there.\n\n210\n00:10:23,460 --> 00:10:26,720\nAnd you just need to pick the appropriate\none for what you're doing.\n\n211\n00:10:26,720 --> 00:10:30,000\nI'm gonna go and choose ntext for\nmy long description.\n\n212\n00:10:32,050 --> 00:10:36,730\nOnce we've done that, We just hit save and\nnow we've got a table, all right.\n\n213\n00:10:36,730 --> 00:10:41,290\nAnd if we want to look at the for\ndoing that, I can take that table.\n\n214\n00:10:41,290 --> 00:10:43,660\nLet me just refresh my screen real quick.\n\n215\n00:10:43,660 --> 00:10:44,160\nThere we go.\n\n216\n00:10:46,240 --> 00:10:49,800\nAnd I'm gonna do the script\ntable as create to.\n\n217\n00:10:50,910 --> 00:10:53,610\nSo, I'm gonna just see the script\nthat would run to create that table.\n\n218\n00:10:53,610 --> 00:10:56,250\nYou'll see,\nit's really pretty straight forward.\n\n219\n00:10:56,250 --> 00:11:00,000\nWhat it's doing is it's basically saying,\ncreate table products.\n\n220\n00:11:00,000 --> 00:11:03,760\nAnd then listing each of the columns: ID,\nname, short description,\n\n221\n00:11:03,760 --> 00:11:06,020\nlong description, price, and taxable.\n\n222\n00:11:06,020 --> 00:11:09,810\nSo there's each of those and their data\ntypes, and some other basic information.\n\n223\n00:11:11,090 --> 00:11:11,720\nAll right.\n\n224\n00:11:11,720 --> 00:11:15,650\nNow there's a few other things that\nwe might want to set on the table.\n\n225\n00:11:15,650 --> 00:11:20,080\nThings like whether a column\nhas a forced uniqueness on it.\n\n226\n00:11:20,080 --> 00:11:21,480\nMy ID column.\n\n227\n00:11:21,480 --> 00:11:25,710\nI probably don't want to two\nproducts to have the sam ID number.\n\n228\n00:11:25,710 --> 00:11:28,870\nSo we can enforce uniqueness on a table.\n\n229\n00:11:28,870 --> 00:11:29,430\nAll right.\n\n230\n00:11:29,430 --> 00:11:30,440\nThere's other things.\n\n231\n00:11:30,440 --> 00:11:32,150\nWe're going to talk about indexes later.\n\n232\n00:11:32,150 --> 00:11:35,860\nWe might want to create a particular\nindex on a column based on that data.\n\n233\n00:11:35,860 --> 00:11:37,720\nSo there's other things\nwe might want to do.\n\n234\n00:11:37,720 --> 00:11:41,840\nSome of them,\nyou have to do when the table is created.\n\n235\n00:11:41,840 --> 00:11:43,800\nBefore we put the data into it.\n\n236\n00:11:43,800 --> 00:11:45,510\nAnd that's why I'm mentioning it here.\n\n237\n00:11:45,510 --> 00:11:47,900\nIf I'm gonna be loading\ndata in this table.\n\n238\n00:11:47,900 --> 00:11:51,380\nI have to be careful to make sure\nthat it's set up the way I want.\n\n239\n00:11:51,380 --> 00:11:52,440\nBecause if it isn't and\n\n240\n00:11:52,440 --> 00:11:56,760\nI wanna change it later on, I'm Then have\nto delete the table and recreate it again,\n\n241\n00:11:56,760 --> 00:12:00,740\nand that's not necessarily we\nwanna do on a regular basis.\n\n242\n00:12:00,740 --> 00:12:04,170\nFor example,\nif I wanna make that ID column unique.\n\n243\n00:12:04,170 --> 00:12:08,830\nWell, I can right click on my\nproducts table here and go to design.\n\n244\n00:12:08,830 --> 00:12:12,210\nAnd that'll take me right to\nthat screen I was at before.\n\n245\n00:12:12,210 --> 00:12:15,130\nAnd, I can choose the ID column here.\n\n246\n00:12:15,130 --> 00:12:17,460\nAnd if I right click on it,\nyou'll see where I can set things.\n\n247\n00:12:17,460 --> 00:12:19,490\nLike making it a primary key.\n\n248\n00:12:19,490 --> 00:12:24,590\nA primary key is a value that says,\nthis column is going to be unique.\n\n249\n00:12:24,590 --> 00:12:25,990\nAnd when we go to look something up,\n\n250\n00:12:25,990 --> 00:12:28,480\nthis is the primary value\nwe're going to be using.\n\n251\n00:12:28,480 --> 00:12:32,980\nSo, when I\"m trying to find a product, I'm\nusually gonna look based on the ID number.\n\n252\n00:12:32,980 --> 00:12:38,790\nAlmost every table has one column that\nis the main column for that table.\n\n253\n00:12:38,790 --> 00:12:42,240\nThe main identifier for\nwhatever it is you're storing.\n\n254\n00:12:42,240 --> 00:12:43,260\nSomething that's unique,\n\n255\n00:12:43,260 --> 00:12:46,350\nsomething that makes each record\ndifferent than the other records.\n\n256\n00:12:46,350 --> 00:12:48,060\nThat's normally what we\nmake our primary key.\n\n257\n00:12:49,095 --> 00:12:51,965\nYou might have more than one\ncolumn that's like that.\n\n258\n00:12:51,965 --> 00:12:54,675\nWell, you can only have\none primary key per table.\n\n259\n00:12:54,675 --> 00:12:57,185\nSo if you have other\ncolumns that are like that,\n\n260\n00:12:57,185 --> 00:12:58,915\nyou might just wanna make them unique.\n\n261\n00:12:58,915 --> 00:13:01,995\nSo for example,\nI might have my Name column here.\n\n262\n00:13:01,995 --> 00:13:05,285\nI don't necessarily do\nlookups based on the name.\n\n263\n00:13:05,285 --> 00:13:08,475\nBut I wanna make sure that no\ntwo products have the same name.\n\n264\n00:13:08,475 --> 00:13:10,275\nSo I might want to\nenforce uniqueness on it.\n\n265\n00:13:10,275 --> 00:13:13,330\nAnd down here in my Column Properties\nyou'll find that entry.\n\n266\n00:13:13,330 --> 00:13:14,520\nIt's buried in here somewhere.\n\n267\n00:13:14,520 --> 00:13:17,890\nWhere we can set\nthe uniqueness on that column.\n\n268\n00:13:17,890 --> 00:13:21,540\nSo let's see if we can find it there.\n\n269\n00:13:21,540 --> 00:13:23,460\nHere, identity specification.\n\n270\n00:13:23,460 --> 00:13:26,160\nUnder identity I'll see, is identity.\n\n271\n00:13:26,160 --> 00:13:27,710\nIf it's your identity,\n\n272\n00:13:27,710 --> 00:13:31,470\nthat means that no one else should\nhave the same identity as you.\n\n273\n00:13:31,470 --> 00:13:33,240\nIt should be unique.\n\n274\n00:13:33,240 --> 00:13:37,310\nAnd so we can take this no, actually\nno it's not gonna let me change it.\n\n275\n00:13:37,310 --> 00:13:38,150\nSo, for\n\n276\n00:13:38,150 --> 00:13:41,820\na unique value like that we need to set\nit at the time the table was created.\n\n277\n00:13:41,820 --> 00:13:42,630\nMine's already created.\n\n278\n00:13:42,630 --> 00:13:45,000\nSo it's not letting me\nmodify that identity column.\n\n279\n00:13:45,000 --> 00:13:46,860\nSo it's too late for that one.\n\n280\n00:13:46,860 --> 00:13:48,450\nI'd have to delete the table and redo it.\n\n281\n00:13:48,450 --> 00:13:50,610\nAnd, in fact, it might be too late for\nthat primary key.\n\n282\n00:13:50,610 --> 00:13:52,240\nLet's see if it will let me save that.\n\n283\n00:13:52,240 --> 00:13:52,860\nNo.\n\n284\n00:13:52,860 --> 00:13:54,970\nSee how it's saying,\nsaving changes is not permitted.\n\n285\n00:13:54,970 --> 00:13:57,971\nThe changes you've made require\nthe following tables to be dropped,\n\n286\n00:13:57,971 --> 00:13:59,920\nnd recreated.\n\n287\n00:13:59,920 --> 00:14:04,510\nSo I would actually have to redo\nthe table to flag that one as the primary\n\n288\n00:14:04,510 --> 00:14:05,480\nkey, all right?\n\n289\n00:14:05,480 --> 00:14:07,800\nThat's one of the things we need\nto be aware of as we create these.\n\n290\n00:14:07,800 --> 00:14:10,280\nAnd it goes back to what I've\nsaid in earlier episodes.\n\n291\n00:14:10,280 --> 00:14:13,790\nSetting up your database right from\nthe beginning is really important.\n\n292\n00:14:13,790 --> 00:14:16,180\nBecause there's some things you\njust can't change after the fact.\n\n293\n00:14:18,550 --> 00:14:19,260\nAll right.\n\n294\n00:14:19,260 --> 00:14:22,510\nNow we might not have to create\nthe table from scratch like this.\n\n295\n00:14:22,510 --> 00:14:23,740\nIf you create it from scratch great.\n\n296\n00:14:23,740 --> 00:14:25,680\nYou define all your columns,\nyour data types.\n\n297\n00:14:25,680 --> 00:14:29,380\nAnd then you tell the developer's okay\nthe table exists, get to work all right.\n\n298\n00:14:30,460 --> 00:14:33,670\nBut, it may be that they\ngive you a file that's\n\n299\n00:14:33,670 --> 00:14:36,130\nalready got all the table\ninformation in it.\n\n300\n00:14:36,130 --> 00:14:38,630\nA very common thing for\nthem to do is to give you a CSV file,\n\n301\n00:14:38,630 --> 00:14:40,530\na comma separated values file.\n\n302\n00:14:40,530 --> 00:14:42,570\nNow I've got one right\nhere on my hard drive.\n\n303\n00:14:42,570 --> 00:14:43,200\nLet me show you.\n\n304\n00:14:45,380 --> 00:14:46,060\nI say I've got one.\n\n305\n00:14:46,060 --> 00:14:47,200\nIt's here somewhere.\n\n306\n00:14:47,200 --> 00:14:47,940\nHere we go.\n\n307\n00:14:47,940 --> 00:14:51,470\nSo I've got my sample product data.csv,\nalright?\n\n308\n00:14:51,470 --> 00:14:52,680\nI'm just going to edit it that real quick.\n\n309\n00:14:54,840 --> 00:14:57,730\nI'm gonna try and edit it that real quick.\n\n310\n00:14:57,730 --> 00:14:58,720\nThere we go.\n\n311\n00:14:58,720 --> 00:15:01,900\nAnd so\nwhat you'll see in this CSV file is.\n\n312\n00:15:01,900 --> 00:15:03,580\nIt's fairly straightforward.\n\n313\n00:15:03,580 --> 00:15:05,702\nLet me Try and\nzoom in on that a little bit.\n\n314\n00:15:05,702 --> 00:15:06,499\nThe very first column\nis listing what each.\n\n315\n00:15:06,499 --> 00:15:15,080\nOr, the very first row is\nlisting what each column is.\n\n316\n00:15:15,080 --> 00:15:17,810\nSo I can see product\nID is my first column.\n\n317\n00:15:17,810 --> 00:15:20,970\nPrice is second, listing name is third,\ndescription is fourth.\n\n318\n00:15:20,970 --> 00:15:22,720\nNotes and inventory.\n\n319\n00:15:22,720 --> 00:15:24,680\nThose are my columns.\n\n320\n00:15:24,680 --> 00:15:27,690\nAnd then each row is listed beneath it.\n\n321\n00:15:27,690 --> 00:15:31,810\nAnd so I can see entries for\neach of my products following that.\n\n322\n00:15:31,810 --> 00:15:37,070\nSo I can see my first product here is\nproduct number zero, you know ID0.\n\n323\n00:15:37,070 --> 00:15:41,450\nMy price is 41 dollars,\nThe name is eveniet.\n\n324\n00:15:41,450 --> 00:15:44,270\nThis is all like auto generated text so\nit's just junk.\n\n325\n00:15:44,270 --> 00:15:45,330\nThen the description,\n\n326\n00:15:45,330 --> 00:15:49,140\nthen the notes, and then the inventory\nI've got 881 of these in stock.\n\n327\n00:15:49,140 --> 00:15:51,750\nAll right, and so here it is,\nhere's my information.\n\n328\n00:15:51,750 --> 00:15:58,220\nAnd I've got however many of these\nvarious things kinda tucked away in here.\n\n329\n00:15:58,220 --> 00:16:00,665\nLet's see, I've got about 100\nproducts tucked all away in here.\n\n330\n00:16:00,665 --> 00:16:07,310\nSo, what if I wanna take this and\njust import it into Microsoft SQL?\n\n331\n00:16:07,310 --> 00:16:11,300\nWell, I know we showed SSIS\nbriefly in a previous episode and\n\n332\n00:16:11,300 --> 00:16:14,760\nthis exam doesn't really cover SSIS,\nbut we certainly could use that.\n\n333\n00:16:16,010 --> 00:16:20,540\nSSIS will let you grab this data,\nmake modifications to it,\n\n334\n00:16:20,540 --> 00:16:22,790\nand then import it into the system.\n\n335\n00:16:22,790 --> 00:16:26,240\nSo when you want to do modifications,\nSSIS is the way to go.\n\n336\n00:16:26,240 --> 00:16:28,110\nThat's the product you want to use.\n\n337\n00:16:28,110 --> 00:16:29,520\nBut if you don't want\nto make modifications.\n\n338\n00:16:29,520 --> 00:16:33,030\nIf it's fine just the way it is,\nwe just need to get it into the database.\n\n339\n00:16:33,030 --> 00:16:36,620\nWe can import the data directly\nthrough the SQL management studio.\n\n340\n00:16:36,620 --> 00:16:39,200\nThen there's actually three\nmain ways to go about it, and\n\n341\n00:16:39,200 --> 00:16:40,830\nI wanna show you each of them.\n\n342\n00:16:40,830 --> 00:16:44,930\nThe easiest way is to just\nmanually do it through the GUI.\n\n343\n00:16:44,930 --> 00:16:49,310\nSo I can go back to my SQL\nmanagement studio, right here, and\n\n344\n00:16:49,310 --> 00:16:52,920\nI'm just gonna get rid of this\ntable that we made a moment ago.\n\n345\n00:16:52,920 --> 00:16:53,712\nSo I'll just drop that.\n\n346\n00:16:57,897 --> 00:17:02,516\nAnd I'm gonna go up to my database,\nmy products database, and\n\n347\n00:17:02,516 --> 00:17:06,177\nI'll just right click on that,\nand under tasks,\n\n348\n00:17:06,177 --> 00:17:12,110\nyou'll see our import data and\nexport data options right down here.\n\n349\n00:17:12,110 --> 00:17:15,240\nI mentioned export data,\nthis data's got to come from somewhere.\n\n350\n00:17:15,240 --> 00:17:18,400\nSo you might be going to another database\nsomewhere and want to export it.\n\n351\n00:17:18,400 --> 00:17:21,430\nAnd it runs a little wizard and\nhelps you export the data you want.\n\n352\n00:17:21,430 --> 00:17:25,800\nBut in my case, I'm gonna import data,\nI'm bringing that data into the server.\n\n353\n00:17:25,800 --> 00:17:29,940\nSo I'll choose import, and now it's\ngonna walk me through a little wizard.\n\n354\n00:17:29,940 --> 00:17:34,470\nNow, the wizard is nice because it\nallows us to import from a number of\n\n355\n00:17:34,470 --> 00:17:36,280\ndifferent locations.\n\n356\n00:17:36,280 --> 00:17:39,260\nIf we look at our first choice here,\nit's the data source.\n\n357\n00:17:39,260 --> 00:17:40,850\nWhere's our data coming from?\n\n358\n00:17:40,850 --> 00:17:44,730\nAnd if I drop that down,\nI've got a ton of choices.\n\n359\n00:17:44,730 --> 00:17:47,550\nNow, I'm talking about coming\nfrom a CSV file, right.\n\n360\n00:17:47,550 --> 00:17:51,190\nAnd a CSV file,\nthat's considered a flat file source.\n\n361\n00:17:51,190 --> 00:17:54,130\nI've got a text file, it's got my data,\nI want to bring it in.\n\n362\n00:17:54,130 --> 00:17:56,590\nOr maybe it's XML and\nI want to bring it in.\n\n363\n00:17:56,590 --> 00:17:58,780\nThose are flat files.\n\n364\n00:17:58,780 --> 00:18:01,330\nThe other options that\nare a lot more complex.\n\n365\n00:18:01,330 --> 00:18:04,730\nI can bring in from Microsoft Access,\nMicrosoft Excel.\n\n366\n00:18:04,730 --> 00:18:08,010\nI can bring in from Oracle, so\nif I have an Oracle database server,\n\n367\n00:18:08,010 --> 00:18:09,740\nanother SQL server.\n\n368\n00:18:09,740 --> 00:18:11,610\nIt can connect directly to that server and\n\n369\n00:18:11,610 --> 00:18:15,020\nbring the data over without me\never having to touch a file.\n\n370\n00:18:15,020 --> 00:18:17,170\nAnd most importantly, ODBC.\n\n371\n00:18:18,510 --> 00:18:21,430\nODBC is the open database\nconnection standard and\n\n372\n00:18:21,430 --> 00:18:26,370\nalmost every database and data processing\nsoftware out there supports it.\n\n373\n00:18:26,370 --> 00:18:29,000\nIt is very, very commonly supported.\n\n374\n00:18:29,000 --> 00:18:31,590\nAnd since we have ODBC support,\n\n375\n00:18:31,590 --> 00:18:34,420\nwe can bring data in from\nsystems that aren't listed here.\n\n376\n00:18:34,420 --> 00:18:38,162\nSo maybe you have a MySQL,\na MariaDB, instant set up and\n\n377\n00:18:38,162 --> 00:18:41,280\nin those scenarios,\nthey are not in our list.\n\n378\n00:18:41,280 --> 00:18:43,580\nI don't have that as\na choice to pick from.\n\n379\n00:18:43,580 --> 00:18:47,035\nBut that's okay, I can do ODBC and\nreach right out and get them.\n\n380\n00:18:47,035 --> 00:18:52,210\nOLEDB is the same thing, but\nit's really a little more specific.\n\n381\n00:18:52,210 --> 00:18:55,850\nSo a lot of different choices here\nof where we want to import from.\n\n382\n00:18:55,850 --> 00:18:57,700\nI'm going to import from my flat file.\n\n383\n00:18:57,700 --> 00:19:01,640\nNow depending on what you choose,\nthe screen is gonna change.\n\n384\n00:19:01,640 --> 00:19:05,850\nIt's going to ask you questions\nabout that particular data type.\n\n385\n00:19:05,850 --> 00:19:09,310\nSo like if I'm importing from Excel,\nwhere's the file and\n\n386\n00:19:09,310 --> 00:19:11,450\nwhat version of Excel was it\nthat generated that file?\n\n387\n00:19:12,600 --> 00:19:13,870\nSo I'll have to pick that.\n\n388\n00:19:13,870 --> 00:19:18,270\nBut I'm doing a flat file, so\nit's gotta ask a few more questions.\n\n389\n00:19:18,270 --> 00:19:20,520\nFirst off, it's gonna ask about the file,\nso I'll browse and\n\n390\n00:19:20,520 --> 00:19:22,570\npick that file on my hard drive.\n\n391\n00:19:24,880 --> 00:19:28,113\nAnd it's defaulting to text,\nI just need to change it to CSV.\n\n392\n00:19:29,962 --> 00:19:35,140\nAnd I'll bring in my\nsample-product-data.csv.\n\n393\n00:19:35,140 --> 00:19:39,910\nNow it's gonna try and fill out as much\nof this information for me as it can.\n\n394\n00:19:39,910 --> 00:19:42,890\nBut it's not perfect, so a lot of\ntimes we've got to get in there and\n\n395\n00:19:42,890 --> 00:19:44,470\nwork with it a little bit.\n\n396\n00:19:44,470 --> 00:19:48,492\nSo if I look here I'll see that it\npicked it up Is an English file and\n\n397\n00:19:48,492 --> 00:19:50,405\nthat it's in ANSI- Latin 1.\n\n398\n00:19:51,665 --> 00:19:55,405\nYou may not be on a native English\ncomputer or something like that, so you\n\n399\n00:19:55,405 --> 00:19:58,465\nmay need to modify that, cuz that's gonna\naffect how special characters are handled.\n\n400\n00:19:59,605 --> 00:20:01,485\nBeneath that, we have format data.\n\n401\n00:20:01,485 --> 00:20:05,465\nA CSV file is\na Comma Separated Values file.\n\n402\n00:20:05,465 --> 00:20:08,310\nThat means every time\nyou encounter a comma,\n\n403\n00:20:08,310 --> 00:20:12,560\nthat should mean that's the end of one\ncolumn, and the next column is starting.\n\n404\n00:20:14,000 --> 00:20:17,530\nBut maybe I'm not doing a comma.\n\n405\n00:20:17,530 --> 00:20:19,710\nMaybe I've got a tab separated values and\n\n406\n00:20:19,710 --> 00:20:23,190\nso I'm going to have a tab character\nevery time it's the end of a column.\n\n407\n00:20:23,190 --> 00:20:24,250\nSo we'll have to modify that.\n\n408\n00:20:24,250 --> 00:20:25,980\nAnd actually, it doesn't let\nme change that on this screen,\n\n409\n00:20:25,980 --> 00:20:28,190\nit's under the advanced screen\nthat we'll be able to do that.\n\n410\n00:20:28,190 --> 00:20:31,408\nBut some of the other things it mentions,\nthe text qualifier.\n\n411\n00:20:31,408 --> 00:20:35,633\nIf I'm doing a comma separated value,\nevery time it sees a comma,\n\n412\n00:20:35,633 --> 00:20:37,970\nit assumes the column is ended.\n\n413\n00:20:37,970 --> 00:20:42,260\nSo let me go back to my CSV file here.\n\n414\n00:20:42,260 --> 00:20:45,410\nOne of the problems we bump\ninto with something like this,\n\n415\n00:20:45,410 --> 00:20:46,720\nlet me take sample employee data.\n\n416\n00:20:46,720 --> 00:20:48,670\nThis is another file that\nI've got sitting here.\n\n417\n00:20:51,250 --> 00:20:53,730\nThis one has a bunch\nof employees in it and\n\n418\n00:20:53,730 --> 00:20:57,190\nI've got things like their last name and\ntheir first name in here.\n\n419\n00:20:58,450 --> 00:21:01,480\nWell, if you look at somebody's last\nname and first names who we've got.\n\n420\n00:21:02,740 --> 00:21:04,700\nBrody Hints, right here.\n\n421\n00:21:04,700 --> 00:21:07,880\nHints is his last name,\nBrody is his first name, right there.\n\n422\n00:21:07,880 --> 00:21:11,680\nWell, Hints is one column,\nthe last name column.\n\n423\n00:21:11,680 --> 00:21:15,080\nAnd Brody is in the next column,\nthe first name column.\n\n424\n00:21:15,080 --> 00:21:17,090\nAnd so they're separated by a comma.\n\n425\n00:21:17,090 --> 00:21:24,890\nBut what if, what if I had something\nlike Full Name as a column?\n\n426\n00:21:24,890 --> 00:21:28,961\nAnd so I had in there Pezet, Don.\n\n427\n00:21:28,961 --> 00:21:30,960\nOr Wong comma Ronnie.\n\n428\n00:21:30,960 --> 00:21:37,520\nCopeland, if I can spell any\nof our employee's names.\n\n429\n00:21:37,520 --> 00:21:38,120\nNate.\n\n430\n00:21:39,200 --> 00:21:43,590\nThose are our full names, and we're doing\nthe last name comma, first name notation.\n\n431\n00:21:43,590 --> 00:21:47,280\nWell when it sees that comma it's gonna\nsay oop, time for the next column.\n\n432\n00:21:47,280 --> 00:21:48,210\nBut that's not what I want.\n\n433\n00:21:48,210 --> 00:21:50,380\nThis is all one value.\n\n434\n00:21:50,380 --> 00:21:54,660\nSo in that case, I have to have\nwhat's called a text qualifier.\n\n435\n00:21:54,660 --> 00:21:57,410\nA qualifier that says\nto ignore that comma.\n\n436\n00:21:57,410 --> 00:22:00,690\nAnd the usual one is a double quote.\n\n437\n00:22:00,690 --> 00:22:03,050\nIf I put that in double quotes,\n\n438\n00:22:03,050 --> 00:22:07,480\nthen the system will know that comma\ndoesn't mean the end of a column.\n\n439\n00:22:07,480 --> 00:22:12,060\nIt's actually Pezet, comma, Don and that's\nthe text that should be in that field.\n\n440\n00:22:12,060 --> 00:22:15,480\nSo you may or may not have that,\ndepending on your data.\n\n441\n00:22:15,480 --> 00:22:17,680\nMy data's been sanitized,\nso I don't have that.\n\n442\n00:22:17,680 --> 00:22:22,470\nI don't have any straight commas in\nhere that would throw that import.\n\n443\n00:22:22,470 --> 00:22:27,670\nBut if you do, you'd specify that\nright here in the import wizard.\n\n444\n00:22:27,670 --> 00:22:30,070\nYou would say what that\ntext qualifier was.\n\n445\n00:22:30,070 --> 00:22:31,580\nIs it a double quote?\n\n446\n00:22:31,580 --> 00:22:32,700\nOr is it something else?\n\n447\n00:22:32,700 --> 00:22:33,760\nI'm just gonna leave mine out.\n\n448\n00:22:35,140 --> 00:22:37,560\nThe header row identifier.\n\n449\n00:22:37,560 --> 00:22:41,430\nAt the end of a row,\nhow do we know the next row is starting?\n\n450\n00:22:41,430 --> 00:22:46,000\nOn a Windows machine, the end of every\nline will have a carriage return and\n\n451\n00:22:46,000 --> 00:22:47,070\na line feed.\n\n452\n00:22:47,070 --> 00:22:49,630\nThat's what the CRLF means.\n\n453\n00:22:49,630 --> 00:22:52,110\nThose terms actually come\nfrom the old typewriter days.\n\n454\n00:22:52,110 --> 00:22:55,950\nOn a typewriter,\nwhen you reach the end of a line,\n\n455\n00:22:55,950 --> 00:22:59,740\nyou'd hear a bell and\nthen two things would happen.\n\n456\n00:22:59,740 --> 00:23:01,220\nA carriage return,\n\n457\n00:23:01,220 --> 00:23:06,440\nthat would mean your typewriter head would\nmove all the way back to the left side.\n\n458\n00:23:06,440 --> 00:23:07,270\nThat's the carriage return.\n\n459\n00:23:07,270 --> 00:23:09,310\nIt's returning back to the left side.\n\n460\n00:23:09,310 --> 00:23:11,950\nAnd then line feed,\nthe page would move up one line.\n\n461\n00:23:13,050 --> 00:23:16,640\nSo in Windows systems,\nat the end of every line,\n\n462\n00:23:16,640 --> 00:23:19,280\nthere's a hidden character,\nwe don't see it but it's there.\n\n463\n00:23:19,280 --> 00:23:21,910\nAnd it's a carriage return and\na line feed.\n\n464\n00:23:21,910 --> 00:23:23,800\nBut it's not like that in Unix systems.\n\n465\n00:23:23,800 --> 00:23:27,030\nUnix, Linux, Mac OS, BSD, those guys.\n\n466\n00:23:27,030 --> 00:23:29,460\nThey just do a line feed all right.\n\n467\n00:23:29,460 --> 00:23:30,960\nIt's kind of redundant to have two, so\n\n468\n00:23:30,960 --> 00:23:33,180\nthey just leave the carriage return\npart out, and do a line feed.\n\n469\n00:23:33,180 --> 00:23:36,160\nAt the end of the line, we just move to\nthe next one and the line feed does it.\n\n470\n00:23:36,160 --> 00:23:40,780\nSo if my file was created on a Unix\nsystem, I may need to change this.\n\n471\n00:23:40,780 --> 00:23:45,946\nAnd so you can see other options\nto specify here when we've\n\n472\n00:23:45,946 --> 00:23:51,542\nreached the end of a row and\nwe're ready to move to the next row.\n\n473\n00:23:51,542 --> 00:23:55,320\nMy file, the very first line,\ncontains the column names and so\n\n474\n00:23:55,320 --> 00:23:58,031\nif you've got the column\nnames right there,\n\n475\n00:23:58,031 --> 00:24:01,334\nyou can specify the column\nnames in the first data row.\n\n476\n00:24:01,334 --> 00:24:04,230\nIf you don't have that,\nif you just start off with your data,\n\n477\n00:24:04,230 --> 00:24:07,210\nyou can uncheck that and\njump right in, right.\n\n478\n00:24:07,210 --> 00:24:09,210\nAfter that it's got header rows to skip.\n\n479\n00:24:09,210 --> 00:24:10,510\nNow what does that mean?\n\n480\n00:24:10,510 --> 00:24:14,430\nWell, sometimes you'll have a file\nthat's formatted a little weird right.\n\n481\n00:24:14,430 --> 00:24:16,140\nLike, let me go back to that employee one.\n\n482\n00:24:17,840 --> 00:24:21,370\nSo maybe somebody decided\nto be a little artsy and\n\n483\n00:24:21,370 --> 00:24:23,890\nstick a dashed line like this in here.\n\n484\n00:24:23,890 --> 00:24:24,410\nOkay?\n\n485\n00:24:24,410 --> 00:24:25,860\nThe dashed line isn't data.\n\n486\n00:24:25,860 --> 00:24:27,780\nIt's not something that's important for\nus.\n\n487\n00:24:27,780 --> 00:24:29,760\nThey're just trying to draw\nattention to the fact that, oh yeah,\n\n488\n00:24:29,760 --> 00:24:31,890\nyour headers are right here and\nthen here's all your data.\n\n489\n00:24:31,890 --> 00:24:33,300\nRight?\nLooks pretty.\n\n490\n00:24:33,300 --> 00:24:37,270\nBut it's gonna cause a problem with our\nimport because that's not a complete row.\n\n491\n00:24:37,270 --> 00:24:41,896\nSo in that scenario what you\ncan do is you can say, sure my,\n\n492\n00:24:41,896 --> 00:24:47,070\nwhoops, my first row contains my headers,\nsure.\n\n493\n00:24:47,070 --> 00:24:51,950\nBut let's skip the first\ntwo rows because one of\n\n494\n00:24:51,950 --> 00:24:55,640\nthem's got the column names, we need that,\nand the second one's just a dashed line.\n\n495\n00:24:55,640 --> 00:24:58,340\nThe real data starts on line three.\n\n496\n00:24:58,340 --> 00:25:03,700\nSo you can specify how far down to skip,\nall right.\n\n497\n00:25:03,700 --> 00:25:06,140\nThen we can jump into some\nof our advanced settings.\n\n498\n00:25:06,140 --> 00:25:11,000\nUnder Columns, it's gonna open the file\nand it's gonna give you a preview.\n\n499\n00:25:11,000 --> 00:25:14,680\nAnd so you can look at what this data's\ngonna look like, and if there's an issue,\n\n500\n00:25:14,680 --> 00:25:16,120\nhopefully you can spot it.\n\n501\n00:25:16,120 --> 00:25:18,220\nIf there's a problem where\nyour commas aren't working or\n\n502\n00:25:18,220 --> 00:25:20,860\nyour line feed stuff is wrong,\nyou can go in here and\n\n503\n00:25:20,860 --> 00:25:23,900\nget a chance to see what that\ndata is going to look like.\n\n504\n00:25:23,900 --> 00:25:26,850\nSo definitely use this preview,\nit'll give you a chance to see it.\n\n505\n00:25:26,850 --> 00:25:29,990\nAnd then you can modify\nwhat your delimiters are.\n\n506\n00:25:29,990 --> 00:25:31,150\nHere's that column delimiter.\n\n507\n00:25:31,150 --> 00:25:34,610\nOurs is a comma,\nmaybe we change it to a tab.\n\n508\n00:25:34,610 --> 00:25:40,300\nRight, if it's a TSV, well that breaks\nmine so I need to go back to a comma and\n\n509\n00:25:40,300 --> 00:25:43,770\nthen I'll see my data lined up\nthe way it's supposed to be.\n\n510\n00:25:43,770 --> 00:25:46,520\nSo you can kinda quick preview and\ntest that.\n\n511\n00:25:47,810 --> 00:25:51,040\nUnder Advanced,\nnow we see some of the column names.\n\n512\n00:25:51,040 --> 00:25:55,380\nI've got Product ID, Price, Listing Name,\nDescription, and so on, all right.\n\n513\n00:25:55,380 --> 00:25:57,290\nOver here we don't normally change much.\n\n514\n00:25:57,290 --> 00:25:59,940\nBut one thing that is nice\nto change is the data type.\n\n515\n00:25:59,940 --> 00:26:01,020\nAll right.\n\n516\n00:26:01,020 --> 00:26:04,490\nHere's where we can specify\nwhat type of data this is.\n\n517\n00:26:04,490 --> 00:26:07,290\nBy default they're all strings.\n\n518\n00:26:07,290 --> 00:26:10,560\nEvery one is just a text string\nas far as the system knows.\n\n519\n00:26:10,560 --> 00:26:13,280\nBut you can hit this Suggest Types button,\nand\n\n520\n00:26:13,280 --> 00:26:14,890\nit will try to figure\nout what each one is.\n\n521\n00:26:14,890 --> 00:26:16,280\nI'm gonna do that.\n\n522\n00:26:16,280 --> 00:26:17,480\nSo we'll just go with the default here.\n\n523\n00:26:17,480 --> 00:26:20,060\nIt's gonna look at the rows and\nsuggest values,\n\n524\n00:26:20,060 --> 00:26:24,980\npicking the smallest data types possible\nthat cover what we need, alright?\n\n525\n00:26:24,980 --> 00:26:26,110\nSo I'll go ahead and hit OK to that.\n\n526\n00:26:26,110 --> 00:26:28,030\nAnd now it's gonna give me suggestions.\n\n527\n00:26:28,030 --> 00:26:29,540\nProduct ID is a number.\n\n528\n00:26:29,540 --> 00:26:33,630\nAnd so it wants to convert it\nto a single byte signed integer.\n\n529\n00:26:33,630 --> 00:26:34,260\nAll right?\n\n530\n00:26:34,260 --> 00:26:39,090\nWell, a single byte signed integer\nis a number between zero and 255.\n\n531\n00:26:39,090 --> 00:26:43,570\nWith one byte,\nyou can write zero through 255.\n\n532\n00:26:43,570 --> 00:26:46,180\nI'm importing 200 products.\n\n533\n00:26:46,180 --> 00:26:48,580\nSo a 255, or 256 values.\n\n534\n00:26:48,580 --> 00:26:51,670\nThat's more than enough to cover me.\n\n535\n00:26:51,670 --> 00:26:54,660\nBut what if I start adding\nnew products down the road?\n\n536\n00:26:54,660 --> 00:26:56,770\nThat data type is gonna become a problem.\n\n537\n00:26:56,770 --> 00:26:59,700\nSo, the suggested value is\nnot always the best one.\n\n538\n00:26:59,700 --> 00:27:01,360\nWe might want to bump that up.\n\n539\n00:27:01,360 --> 00:27:06,020\nIf I go to like a double bite, If I go to\na double byte, I can have zero to 65,535.\n\n540\n00:27:06,020 --> 00:27:07,040\nMaybe that's enough.\n\n541\n00:27:07,040 --> 00:27:11,790\nAm I ever going to have\nmore than 65,000 products?\n\n542\n00:27:11,790 --> 00:27:13,130\nMaybe.\n\n543\n00:27:13,130 --> 00:27:16,930\nSo if I'm worried about that I may\ngo even further to a four byte or\n\n544\n00:27:16,930 --> 00:27:20,310\nan eight byte to get even more and\nmore and more data.\n\n545\n00:27:20,310 --> 00:27:24,645\nAt four bytes you can do over,\nI think it's\n\n546\n00:27:24,645 --> 00:27:30,770\n4.3 billion, trillion,\nit's a big number at that point.\n\n547\n00:27:30,770 --> 00:27:32,670\nSo four bytes is probably\nmore than enough for me.\n\n548\n00:27:32,670 --> 00:27:35,580\nI'll jump up to that one for\nthe Product ID.\n\n549\n00:27:35,580 --> 00:27:38,570\nFor Price, that's gonna be currency,\nand it's gone two bytes.\n\n550\n00:27:38,570 --> 00:27:44,500\nSo, am I gonna sell anything that\ncosts more than $65,535, probably not.\n\n551\n00:27:44,500 --> 00:27:47,580\nSo a two-byte signed integer\nis probably good there.\n\n552\n00:27:47,580 --> 00:27:50,800\nMy Listing Name,\nit's going to do a string.\n\n553\n00:27:50,800 --> 00:27:51,310\nThat's fine.\n\n554\n00:27:51,310 --> 00:27:52,840\nDescription is a string.\n\n555\n00:27:52,840 --> 00:27:56,760\nAnd the output column with here\nwe can manipulate that later.\n\n556\n00:27:56,760 --> 00:28:01,210\nWe've got notes and inventory so it's kind\nof calculated what it's going to use for\n\n557\n00:28:01,210 --> 00:28:01,800\neach of those.\n\n558\n00:28:02,830 --> 00:28:05,970\nAnd we get our preview where we\ncan just take a Look at it and\n\n559\n00:28:05,970 --> 00:28:08,160\nsee how things are gonna be.\n\n560\n00:28:09,210 --> 00:28:11,750\nAfter that, we can do our import,\nand it's gonna bring that in.\n\n561\n00:28:11,750 --> 00:28:13,940\nNow, it's asking about the destination.\n\n562\n00:28:13,940 --> 00:28:15,200\nWhere am I gonna put this data?\n\n563\n00:28:15,200 --> 00:28:17,690\nAnd we normally want to put it right\nhere on the server that we're on, so\n\n564\n00:28:17,690 --> 00:28:18,700\nit's got that.\n\n565\n00:28:18,700 --> 00:28:22,450\nIt's got the authentication for our server\nand the database that we're working with.\n\n566\n00:28:22,450 --> 00:28:25,280\nIt's all pre-filled in because\nof how we launched the wizard.\n\n567\n00:28:27,670 --> 00:28:30,930\nThen it's going to show the source and\nthe destination.\n\n568\n00:28:30,930 --> 00:28:35,460\nNow, the destination, it's going to\nname this table based on the file.\n\n569\n00:28:35,460 --> 00:28:39,040\nSo here it's calling mine sample\nproduct data which is not what I want,\n\n570\n00:28:39,040 --> 00:28:43,640\nso I'm going to rename that,\nI'm going to call this products, so\n\n571\n00:28:43,640 --> 00:28:47,650\nthis is going to be my products table.\n\n572\n00:28:47,650 --> 00:28:51,410\nWe'll go ahead and hit next, And\nnow we've got run immediately or\n\n573\n00:28:51,410 --> 00:28:53,930\nsave as an SSIS package.\n\n574\n00:28:53,930 --> 00:28:58,590\nIf I want to do other manipulations to the\ndata, I can save it as an SSIS package and\n\n575\n00:28:58,590 --> 00:29:02,720\nuse that as a starting point, and\nthen go and put my modifications in there.\n\n576\n00:29:02,720 --> 00:29:05,660\nIn my case though,\nI just want to run it immediately.\n\n577\n00:29:05,660 --> 00:29:07,610\nSo there's my summary,\nand we'll finish that.\n\n578\n00:29:07,610 --> 00:29:09,630\nAnd that's gonna bring it in.\n\n579\n00:29:09,630 --> 00:29:11,730\nNow, you'll get some\ninformational messages here.\n\n580\n00:29:11,730 --> 00:29:12,580\nThat's to be expected.\n\n581\n00:29:12,580 --> 00:29:14,910\nIt's just giving you\nthe information about the import.\n\n582\n00:29:14,910 --> 00:29:16,950\nI can see it brought in 100 rows.\n\n583\n00:29:16,950 --> 00:29:18,940\nThere were no errors so\nthings looked good.\n\n584\n00:29:18,940 --> 00:29:21,700\nThe most common error is\nwhen you get duplicates,\n\n585\n00:29:21,700 --> 00:29:24,160\nwhen you're trying to override\na table that already exists or\n\n586\n00:29:24,160 --> 00:29:26,710\nsomething like that,\nyou can start to bump into issues there.\n\n587\n00:29:26,710 --> 00:29:30,010\nBut since mine's an all new table,\nthere's almost never a problem.\n\n588\n00:29:30,010 --> 00:29:32,980\nSo, it finishes up and\nnow I've got a table.\n\n589\n00:29:32,980 --> 00:29:36,180\nNow, I don't see my table cuz\nthe screen doesn't auto refresh.\n\n590\n00:29:36,180 --> 00:29:38,010\nSo, I'm just going to\ntell that to refresh.\n\n591\n00:29:39,010 --> 00:29:41,600\nAnd there's my dbo.products.\n\n592\n00:29:41,600 --> 00:29:45,607\nAnd if I right-click on that and\nchoose Select Top 1,000 Rows,\n\n593\n00:29:45,607 --> 00:29:49,280\nit's gonna give me the output,\nand I can see I now have a table.\n\n594\n00:29:49,280 --> 00:29:51,270\nAnd there's my data.\n\n595\n00:29:51,270 --> 00:29:54,728\nSo I've brought a bunch of data into sync.\n\n596\n00:29:54,728 --> 00:29:55,896\nRight.\n\n597\n00:29:55,896 --> 00:29:59,660\nNow, that looked like a really\ngood system right there, right?\n\n598\n00:29:59,660 --> 00:30:02,370\nBut there's some slight problems,\nit made the table for\n\n599\n00:30:02,370 --> 00:30:05,290\nme and I mentioned that sometimes\n\n600\n00:30:05,290 --> 00:30:09,390\nthere's stuff that we want to change that\nwe can't change after the table's created.\n\n601\n00:30:09,390 --> 00:30:13,930\nSo for example, I might want to make this\nproduct ID the primary key, well it's not\n\n602\n00:30:13,930 --> 00:30:16,520\ngonna let me do that, it's gonna be angry\nbecause I haven't already done it and\n\n603\n00:30:16,520 --> 00:30:18,320\nI've stuck data in there now, right?\n\n604\n00:30:18,320 --> 00:30:21,350\nI might have duplicates in\nthere that it hasn't checked.\n\n605\n00:30:21,350 --> 00:30:25,720\nSo sometimes this type of\nimport is not the best.\n\n606\n00:30:25,720 --> 00:30:29,910\nSometimes we want to go ahead and\ncreate the table ahead of time and\n\n607\n00:30:29,910 --> 00:30:31,910\nimport the data directly into there.\n\n608\n00:30:31,910 --> 00:30:33,660\nAnd you can certainly do that.\n\n609\n00:30:33,660 --> 00:30:36,260\nThis method right here,\nI don't normally use.\n\n610\n00:30:36,260 --> 00:30:38,740\nUsing the GUI is easy.\n\n611\n00:30:38,740 --> 00:30:41,570\nBut it doesn't give you a ton\nof flexibility, all right?\n\n612\n00:30:41,570 --> 00:30:46,210\nI normally use another utility called BCP\nand we're gonna see that after the break,\n\n613\n00:30:46,210 --> 00:30:49,030\nbut looking at the clock,\nwe're kind of out of time on this segment.\n\n614\n00:30:49,030 --> 00:30:50,510\nSo let's stop here and take a pause and\n\n615\n00:30:50,510 --> 00:30:53,310\nwhen we get back, I'll show you\nthe utility that I normally use.\n\n616\n00:30:53,310 --> 00:30:53,990\nSo stay tuned.\n\n617\n00:30:53,990 --> 00:30:55,736\nWe'll be back after this.\n\n618\n00:30:55,736 --> 00:31:03,319\n[MUSIC]\n\n619\n00:31:03,319 --> 00:31:05,260\nAlright, welcome back everybody.\n\n620\n00:31:05,260 --> 00:31:08,950\nOkay, so I mentioned before the segment\nthat while we can import via the GUI,\n\n621\n00:31:08,950 --> 00:31:10,220\nit's not the way I do it.\n\n622\n00:31:10,220 --> 00:31:13,820\nAnd the reason is it doesn't give you a\nlot control over the table it creates and\n\n623\n00:31:13,820 --> 00:31:15,040\noftentimes.\n\n624\n00:31:15,040 --> 00:31:16,830\nI want that control, all right?\n\n625\n00:31:16,830 --> 00:31:19,420\nSo what I normally do is go\na slightly different route.\n\n626\n00:31:19,420 --> 00:31:21,720\nThe first thing I do is\nI do go into the GUI.\n\n627\n00:31:21,720 --> 00:31:23,630\nThat's where I usually create the table.\n\n628\n00:31:23,630 --> 00:31:28,390\nSo here I've created the Products table,\nand I've set it up my way.\n\n629\n00:31:28,390 --> 00:31:31,970\nI've set up with a primary key,\nI've set my data types here.\n\n630\n00:31:31,970 --> 00:31:34,510\nI've got it defined\nthe way that I want it.\n\n631\n00:31:34,510 --> 00:31:36,770\nThe only problem with\nthe table is that it's empty.\n\n632\n00:31:36,770 --> 00:31:39,030\nI just need to put stuff in it.\n\n633\n00:31:39,030 --> 00:31:43,060\nWell, there's a very cool command line\nutility that comes with Microsoft SQL\n\n634\n00:31:43,060 --> 00:31:46,428\ncalled BCP, or Bulk Copy.\n\n635\n00:31:46,428 --> 00:31:50,690\nThe Bulk Copy command line utility\nlet's you take files like what\n\n636\n00:31:50,690 --> 00:31:55,583\nI've got right here and bring them in and\ndump them into an existing table.\n\n637\n00:31:55,583 --> 00:31:56,294\nVery very useful.\n\n638\n00:31:56,294 --> 00:31:58,250\nI know a lot of organizations used it.\n\n639\n00:31:58,250 --> 00:32:03,675\nRight here in Gainesville, we have\nthe University of Florida And every year,\n\n640\n00:32:03,675 --> 00:32:08,220\nthe University of Florida adds\nover 20,000 new freshmen.\n\n641\n00:32:08,220 --> 00:32:10,000\nSo, all these new freshmen come in.\n\n642\n00:32:10,000 --> 00:32:11,650\nThey've got to get user accounts created.\n\n643\n00:32:11,650 --> 00:32:13,310\nTheir data added to the database.\n\n644\n00:32:13,310 --> 00:32:14,600\nAll their records tracked.\n\n645\n00:32:14,600 --> 00:32:17,810\nThey've gotta bring all it in,\nbut the tables already exist.\n\n646\n00:32:17,810 --> 00:32:20,570\nWe don't want to create a new\ntable we just want to tack it on.\n\n647\n00:32:20,570 --> 00:32:24,120\nAnd utilities like BCP are what\nmakes that possible, all right.\n\n648\n00:32:24,120 --> 00:32:26,990\nNow I mentioned it's built\ninto the system right so\n\n649\n00:32:26,990 --> 00:32:29,960\nall we have to do is\nopen up a command prompt.\n\n650\n00:32:29,960 --> 00:32:33,440\nAnd type BCP and\nyou'll see that it's there.\n\n651\n00:32:33,440 --> 00:32:37,150\nLet me bump that font size up so\nwe can see this a little bit better.\n\n652\n00:32:37,150 --> 00:32:39,280\nBut it's already there,\nit's part of the system.\n\n653\n00:32:39,280 --> 00:32:42,050\nIt's not like we have to go and\ninstall it or anything like that.\n\n654\n00:32:42,050 --> 00:32:43,830\nIt's just there.\n\n655\n00:32:43,830 --> 00:32:47,210\nSo we've got it and\nwe can start to use it.\n\n656\n00:32:47,210 --> 00:32:49,090\nNow the syntax is pretty straightforward.\n\n657\n00:32:49,090 --> 00:32:52,790\nThere are a lot of command line\nmodifiers based on the type\n\n658\n00:32:52,790 --> 00:32:54,740\nof data that you're bringing in.\n\n659\n00:32:54,740 --> 00:32:57,760\nBut the majority of these\nare not really necessary.\n\n660\n00:32:57,760 --> 00:32:59,660\nThe command is super simple, and\n\n661\n00:32:59,660 --> 00:33:02,650\nit usually just boils down to\na couple of command modifiers.\n\n662\n00:33:02,650 --> 00:33:07,710\nAll right, so for example,\nif I get back into my Files folder here.\n\n663\n00:33:07,710 --> 00:33:11,900\nI've got the sample product data that I\nwas messing with in the first segment.\n\n664\n00:33:11,900 --> 00:33:16,820\nI want to import that and I want to\nimport it to my existing products table.\n\n665\n00:33:16,820 --> 00:33:20,830\nSo, if I want to bring that in,\nI can just run bcp and\n\n666\n00:33:20,830 --> 00:33:24,930\nthen I need to tell it\nwhere the data is going.\n\n667\n00:33:24,930 --> 00:33:26,940\nThat data is going into my database, and\n\n668\n00:33:26,940 --> 00:33:33,070\nI need to use the full naming convention,\nthe fully qualified name, of that table.\n\n669\n00:33:33,070 --> 00:33:38,150\nNow in SQL, when you reference an object,\nit actually has a four-part name.\n\n670\n00:33:38,150 --> 00:33:39,560\nWe haven't seen that in this show yet.\n\n671\n00:33:39,560 --> 00:33:42,660\nI talk about it more in\nthe security episode, but\n\n672\n00:33:42,660 --> 00:33:45,330\nthe four-part name works like this.\n\n673\n00:33:45,330 --> 00:33:54,164\nIt's Servername.DatabaseName.Owner.Object,\n\n674\n00:33:54,164 --> 00:33:55,820\nright?\n\n675\n00:33:55,820 --> 00:33:59,240\nSo when I reference\nanything inside of SQL,\n\n676\n00:33:59,240 --> 00:34:04,140\nthis is the full name but\nwe don't use this notation very often.\n\n677\n00:34:04,140 --> 00:34:06,210\nBecause normally we're in the GUI.\n\n678\n00:34:06,210 --> 00:34:08,130\nAnd when you're in the GUI,\nwhen you're in here and\n\n679\n00:34:08,130 --> 00:34:11,720\nyou're working,\nmaybe you're doing a new query like this.\n\n680\n00:34:11,720 --> 00:34:14,510\nWell, up here it's got\nwhat database I'm on.\n\n681\n00:34:14,510 --> 00:34:18,370\nIt already knows the server because\nI'm connected to it right here.\n\n682\n00:34:18,370 --> 00:34:21,230\nIt already knows the database\nbecause it's right here and\n\n683\n00:34:21,230 --> 00:34:25,490\nit will assume the owner as\nit goes to work with things.\n\n684\n00:34:25,490 --> 00:34:27,230\nSo we normally leave all\nthat other stuff off.\n\n685\n00:34:27,230 --> 00:34:28,920\nWe don't see it very often.\n\n686\n00:34:28,920 --> 00:34:31,830\nBut when we're working with BCP,\nwe need to know it.\n\n687\n00:34:31,830 --> 00:34:33,440\nIt will make assumptions.\n\n688\n00:34:33,440 --> 00:34:36,860\nIt'll assume the server is\nthe server that we're on.\n\n689\n00:34:36,860 --> 00:34:38,710\nBut if you're running\nBCP from your desktop,\n\n690\n00:34:38,710 --> 00:34:41,140\nyou'll need to specify the server.\n\n691\n00:34:41,140 --> 00:34:42,680\nThe database though we've gotta tell it.\n\n692\n00:34:42,680 --> 00:34:45,060\nWe've gotta tell it what\ndatabase we're working with.\n\n693\n00:34:45,060 --> 00:34:48,460\nWe've gotta tell it the owner\nof that database and\n\n694\n00:34:48,460 --> 00:34:52,070\nwe've gotta tell it the object in\nthe database we're copying the data to.\n\n695\n00:34:52,070 --> 00:34:54,510\nSo I wanna throw this stuff in.\n\n696\n00:34:54,510 --> 00:34:57,440\nAnd I'm on the server, so\nI'm going to leave the server name off.\n\n697\n00:34:57,440 --> 00:35:01,300\nBut the products database,\nand then the owner.\n\n698\n00:35:01,300 --> 00:35:03,390\nNow, I don't necessarily\nknow who the owner is.\n\n699\n00:35:03,390 --> 00:35:04,720\nRight?\nWho is the owner?\n\n700\n00:35:04,720 --> 00:35:06,870\nWell it could have been changed, but\n\n701\n00:35:06,870 --> 00:35:11,900\nif you haven't changed it there's\na default owner that almost everyone uses.\n\n702\n00:35:11,900 --> 00:35:16,230\nAnd it's called dbo,\ndbo stands for database owner.\n\n703\n00:35:16,230 --> 00:35:21,050\nIt's a generic ownership item and\nwe assign permissions around it.\n\n704\n00:35:21,050 --> 00:35:23,590\nSo dbo is actually kind of like a group.\n\n705\n00:35:23,590 --> 00:35:27,790\nInstead of assigning ownership to me to,\nlet's say my user name is dpezet.\n\n706\n00:35:27,790 --> 00:35:28,320\nRight?\n\n707\n00:35:28,320 --> 00:35:32,250\nSo I might have products.dpezet.whatever\n\n708\n00:35:32,250 --> 00:35:34,950\nthe problem with doing that\nis what if I get fired?\n\n709\n00:35:34,950 --> 00:35:39,630\nIf I get fired and we hire a new employee,\nwell the owner just changed\n\n710\n00:35:39,630 --> 00:35:43,080\nis now gotta update all my software\nto reflect this new owner name.\n\n711\n00:35:43,080 --> 00:35:46,460\nSo it's generally bad\npractice to change the owner.\n\n712\n00:35:46,460 --> 00:35:51,270\nAnd that's why almost\neveryone leaves it as dbo.\n\n713\n00:35:51,270 --> 00:35:53,690\nAnd then you just put who you want\nto be the owner in that group.\n\n714\n00:35:53,690 --> 00:35:56,410\nAnd that way if you fire that employee,\nyou hire somebody else,\n\n715\n00:35:56,410 --> 00:35:59,270\nyou just put them into the group,\nyou don't have to rewrite your software.\n\n716\n00:35:59,270 --> 00:36:03,440\nSo you're almost certain to\nalways have dbo as the owner.\n\n717\n00:36:03,440 --> 00:36:06,820\nThere are exceptions, and\nwe'll cover those in the security episode.\n\n718\n00:36:06,820 --> 00:36:09,150\nBut for most part,\nthat's what we're gonna have.\n\n719\n00:36:09,150 --> 00:36:10,710\nYou'll hear this referred to as the owner.\n\n720\n00:36:10,710 --> 00:36:13,490\nYou'll also hear it\nreferred to as the schema.\n\n721\n00:36:13,490 --> 00:36:16,320\nIn Microsoft SQL 2000 and\n\n722\n00:36:16,320 --> 00:36:21,150\nearlier, it was the owner in 2005 and\nnewer it was the schema.\n\n723\n00:36:21,150 --> 00:36:24,890\neffectively the same thing,\njust a different name for the same item.\n\n724\n00:36:24,890 --> 00:36:28,910\nSo I'm gonna call this the products.dbo\nand then I'm going into the table.\n\n725\n00:36:28,910 --> 00:36:31,500\nAnd my table is called Products also.\n\n726\n00:36:31,500 --> 00:36:35,150\nYou can have a table with the same name as\nthe database and that's what I've done.\n\n727\n00:36:35,150 --> 00:36:42,290\nSo I'm using Bulk Copy to copy stuff to\nthe products that dbo.products table.\n\n728\n00:36:42,290 --> 00:36:45,100\nI'm telling it how to get to that table.\n\n729\n00:36:45,100 --> 00:36:48,760\nThen, I need to tell it whether\nI'm sending data in or data out.\n\n730\n00:36:48,760 --> 00:36:52,040\nBCP will do imports and exports.\n\n731\n00:36:52,040 --> 00:36:55,970\nIn this case doing an import so\nI'm doing in.\n\n732\n00:36:55,970 --> 00:36:58,920\nAnd then I need to tell\nit what I'm bringing in.\n\n733\n00:36:58,920 --> 00:37:04,102\nAnd I'm bringing in that file right there,\nsample-product-data.csv, all right.\n\n734\n00:37:04,102 --> 00:37:07,830\nThat's what I'm bringing into it, alright?\n\n735\n00:37:07,830 --> 00:37:11,310\nThen, I just need to\nspecify a few other things,\n\n736\n00:37:11,310 --> 00:37:14,710\nright, -c lets it know that\nit's a character file.\n\n737\n00:37:14,710 --> 00:37:16,110\nIt's a text file.\n\n738\n00:37:16,110 --> 00:37:19,400\nIt's not a binary file,\nit's not some precompiled database,\n\n739\n00:37:19,400 --> 00:37:21,160\nit's just a text file.\n\n740\n00:37:21,160 --> 00:37:23,435\nAnd then, it's using a delimiter,\n\n741\n00:37:23,435 --> 00:37:28,225\n-t is how we show the delimiter,\nand my delimiter is a comma.\n\n742\n00:37:28,225 --> 00:37:29,975\nSo -t and then a comma tells it,\n\n743\n00:37:29,975 --> 00:37:33,235\nevery time you see a comma,\nthat's the end of a column.\n\n744\n00:37:34,805 --> 00:37:37,695\nAnd then lastly I need to tell\nit what user account to use.\n\n745\n00:37:37,695 --> 00:37:41,427\nNow I could specify a username and\na password if I needed to, but\n\n746\n00:37:41,427 --> 00:37:46,147\nwe have Windows authentication turned on\nand my user has permission to do this so\n\n747\n00:37:46,147 --> 00:37:50,637\nI can say -T which tells it\nto do a trusted connection.\n\n748\n00:37:50,637 --> 00:37:52,427\nNow, notice that's a capital T.\n\n749\n00:37:52,427 --> 00:37:54,047\nThe lowercase t was the text delimiter.\n\n750\n00:37:54,047 --> 00:37:57,177\nThe capital T is the trusted connection.\n\n751\n00:37:57,177 --> 00:38:00,387\nThat's going to tell it to run it under\nmy user account and do the import.\n\n752\n00:38:01,560 --> 00:38:04,630\nNow, there's a lot of\nstuff that can go wrong.\n\n753\n00:38:04,630 --> 00:38:07,970\nIf the table has different columns\nthan what's in the text file,\n\n754\n00:38:07,970 --> 00:38:09,050\nif things don't match up,\n\n755\n00:38:09,050 --> 00:38:13,260\nif I have duplicate values, those are all\nthings that can break your imports.\n\n756\n00:38:13,260 --> 00:38:17,870\nSo it's important to sanitize your\ndata before you do an import.\n\n757\n00:38:17,870 --> 00:38:21,950\nAnd oftentimes we'll do several\ntest imports on a test table.\n\n758\n00:38:21,950 --> 00:38:25,050\nBefore actually bringing it\ninto our production tables.\n\n759\n00:38:25,050 --> 00:38:28,700\nSo if this is my production,\nin use products table,\n\n760\n00:38:28,700 --> 00:38:31,570\nI probably don't want to just import\nto it the first time blindly.\n\n761\n00:38:31,570 --> 00:38:34,890\nI probably want to create a test table,\nimport there and see if it works.\n\n762\n00:38:35,950 --> 00:38:39,990\nBut I'll go ahead and run it and hopefully\nwe'll get a nice little work here.\n\n763\n00:38:39,990 --> 00:38:42,710\nBut let's see, starting to copy,\nSQL state was running.\n\n764\n00:38:42,710 --> 00:38:43,730\nWe did get an error.\n\n765\n00:38:43,730 --> 00:38:48,070\nWe got ID character value for\ncast specification, so\n\n766\n00:38:48,070 --> 00:38:51,470\nit looks like you got a problem\nthere with one of my values.\n\n767\n00:38:51,470 --> 00:38:53,580\nIt does say 100 gross copied though.\n\n768\n00:38:53,580 --> 00:38:57,770\nSometimes you'll get an error and\nit's a non fatal error, all right.\n\n769\n00:38:57,770 --> 00:38:58,940\nIn this case for example,\n\n770\n00:38:58,940 --> 00:39:03,880\nit might have just choked on the first\nrow which was my column headers.\n\n771\n00:39:03,880 --> 00:39:07,690\nAnd my column headers,\nsome of those have text in them, but\n\n772\n00:39:07,690 --> 00:39:10,280\nmy product column is a integer, right?\n\n773\n00:39:10,280 --> 00:39:11,180\nRequires a number.\n\n774\n00:39:11,180 --> 00:39:12,410\nSo, maybe it,\n\n775\n00:39:12,410 --> 00:39:15,050\njust because you got an error here\ndoesn't mean that it's all failed.\n\n776\n00:39:15,050 --> 00:39:18,820\nLet's go double check the table and\nsee if we actually got anything here.\n\n777\n00:39:18,820 --> 00:39:22,310\nI'm gonna do a quick refresh just to\nmake sure I've got the latest data.\n\n778\n00:39:22,310 --> 00:39:26,450\nAnd then I'll right-click on the table and\ndo Select Top 1000 Rows.\n\n779\n00:39:26,450 --> 00:39:29,640\nAnd sure enough,\nI can see my import did happen.\n\n780\n00:39:29,640 --> 00:39:30,980\nIt was most likely that header row.\n\n781\n00:39:30,980 --> 00:39:32,840\nI should have deleted that\nheader row out of there, but\n\n782\n00:39:32,840 --> 00:39:34,490\nI didn't think about it beforehand.\n\n783\n00:39:35,810 --> 00:39:37,310\nSo there we go.\nI can take a look, and\n\n784\n00:39:37,310 --> 00:39:41,510\nI can see now I've got all that data\nright here inserted in the table.\n\n785\n00:39:41,510 --> 00:39:43,940\nJust like I did before the break,\nright, no difference.\n\n786\n00:39:43,940 --> 00:39:47,460\nThe big difference here is\nthe table already existed.\n\n787\n00:39:47,460 --> 00:39:50,378\nI made the table myself\nto my specifications.\n\n788\n00:39:50,378 --> 00:39:54,184\nAnd if it already had thousands\nupon thousands of records in there,\n\n789\n00:39:54,184 --> 00:39:56,000\nBCP would've just added to it.\n\n790\n00:39:56,000 --> 00:40:00,417\nSo I just grew that table to\ncomprise my extra information.\n\n791\n00:40:00,417 --> 00:40:01,293\nAll right.\n\n792\n00:40:01,293 --> 00:40:04,667\nNow BCP can be used to\nexport data the same way.\n\n793\n00:40:04,667 --> 00:40:07,592\nInstead of the in keyword,\nwe would just say out, but\n\n794\n00:40:07,592 --> 00:40:10,920\nat the end of the day it's not\nthat hard of a command, right?\n\n795\n00:40:10,920 --> 00:40:13,830\nThe syntax is pretty straightforward.\n\n796\n00:40:13,830 --> 00:40:18,190\nWe tell it the destination,\nwhere the data's gonna end up,\n\n797\n00:40:18,190 --> 00:40:21,230\nwhether it's in or out, and\nwhere the data's coming from.\n\n798\n00:40:21,230 --> 00:40:22,410\nAnd then after that,\n\n799\n00:40:22,410 --> 00:40:25,590\njust a few little modifiers to\nsay what we're gonna work with.\n\n800\n00:40:25,590 --> 00:40:26,510\nBCP's very powerful.\n\n801\n00:40:26,510 --> 00:40:29,180\nIt's been around a long, long time.\n\n802\n00:40:29,180 --> 00:40:32,350\nThe first version of SQL that I\nworked with was SQL version seven,\n\n803\n00:40:32,350 --> 00:40:34,790\nand that was there, it was available.\n\n804\n00:40:34,790 --> 00:40:38,782\nSo it's been around longer\nthan I've worked with it.\n\n805\n00:40:38,782 --> 00:40:42,500\nAll right,\nnow there is another way to do this.\n\n806\n00:40:42,500 --> 00:40:45,199\nBCP the bulk copy,\nit's a command line utility.\n\n807\n00:40:46,280 --> 00:40:49,550\nWhat if you don't have access to\nthe command line of that server?\n\n808\n00:40:49,550 --> 00:40:50,770\nThen you can't use BCP.\n\n809\n00:40:50,770 --> 00:40:52,350\nSimple as that, right?\n\n810\n00:40:52,350 --> 00:40:55,370\nBut there is a transact SQL version of it.\n\n811\n00:40:55,370 --> 00:40:58,190\nIt's called the bulk insert command.\n\n812\n00:40:58,190 --> 00:41:00,290\nThe bulk insert command\nis a lot harder to use.\n\n813\n00:41:00,290 --> 00:41:04,600\nWith BCP, it's a utility, it's got a lot\nof power, it can do a lot of neat things.\n\n814\n00:41:04,600 --> 00:41:07,620\nWith bulk insert it's a query,\n\n815\n00:41:07,620 --> 00:41:11,800\nit's a stored procedure on the server and\nit's a lot less flexible.\n\n816\n00:41:11,800 --> 00:41:15,790\nWith bulk insert, we have to tell it\nwhere we're getting the data from, and\n\n817\n00:41:15,790 --> 00:41:17,910\nwe have to have what's\ncalled a format file.\n\n818\n00:41:17,910 --> 00:41:21,750\nAnd the format file tells the server\n\n819\n00:41:21,750 --> 00:41:24,970\nhow the data is arranged in\nthe file that we're importing.\n\n820\n00:41:24,970 --> 00:41:27,040\nSo, it's actually going\nto require more work.\n\n821\n00:41:27,040 --> 00:41:29,250\nI'd need to create a second format file,\n\n822\n00:41:29,250 --> 00:41:32,660\nthat explains exactly how\nmy text file is arranged.\n\n823\n00:41:32,660 --> 00:41:36,490\nBut just for your own information, let\nme show you what the command looks like,\n\n824\n00:41:36,490 --> 00:41:38,920\nif we wanted to see that bulk insert.\n\n825\n00:41:38,920 --> 00:41:39,480\nYou'll see it.\n\n826\n00:41:39,480 --> 00:41:41,160\nIt's really, really similar.\n\n827\n00:41:41,160 --> 00:41:43,800\nBasically, the way it works\nis you pick your database.\n\n828\n00:41:43,800 --> 00:41:48,436\nI'll use products And\n\n829\n00:41:48,436 --> 00:41:56,390\nthen we basically just tell it\nwe want to do a bulk insert.\n\n830\n00:41:56,390 --> 00:41:59,970\nSo we say bulk insert, and\nwe tell it where we're inserting to.\n\n831\n00:41:59,970 --> 00:42:04,482\nSo I'm gonna insert into\nthe products table, And\n\n832\n00:42:04,482 --> 00:42:09,597\nthen we'll say from, and\nwhere the file is stored,\n\n833\n00:42:09,597 --> 00:42:15,900\nso in my case it was c:\\\nfile\\sample-product-data.csv.\n\n834\n00:42:15,900 --> 00:42:18,802\nAnd then we tell it\n\n835\n00:42:18,802 --> 00:42:26,370\nWITH FORMATFILE, and\nthen the location of the format file.\n\n836\n00:42:26,370 --> 00:42:28,130\nNow I don't actually have a format file.\n\n837\n00:42:28,130 --> 00:42:28,970\nSo I'll just put a fake one here.\n\n838\n00:42:33,590 --> 00:42:34,751\nOr it's usually a dat.\n\n839\n00:42:41,939 --> 00:42:42,960\nThere, like that.\n\n840\n00:42:42,960 --> 00:42:46,323\nSo the bulk insert,\nit's gonna grab that CSV file and\n\n841\n00:42:46,323 --> 00:42:49,105\nimport it in to the products table, right?\n\n842\n00:42:49,105 --> 00:42:50,005\nJust like BCP did.\n\n843\n00:42:50,005 --> 00:42:55,555\nBut, it doesn't understand if it's a CSV,\nif it's XML, if it's binary data.\n\n844\n00:42:55,555 --> 00:42:57,860\nIt doesn't understand what's\nactually in the file.\n\n845\n00:42:57,860 --> 00:43:01,580\nAnd we don't have a bunch of modifiers\nhere that we provide here to tell it.\n\n846\n00:43:01,580 --> 00:43:05,200\nSo instead, you have to provide it with\nthis format file, that will explain to it\n\n847\n00:43:05,200 --> 00:43:08,460\nhow the data is arranged, and\nit'll do the import, all right?\n\n848\n00:43:08,460 --> 00:43:12,180\nThis is called the bulk insert,\nand out on the internet,\n\n849\n00:43:12,180 --> 00:43:16,690\nyou'll here people refer to BCP and\nbulk insert almost interchangeability.\n\n850\n00:43:16,690 --> 00:43:18,250\nThe big difference between them,\n\n851\n00:43:18,250 --> 00:43:22,760\nBCP is a command line utility,\nbulk insert is transact SQL.\n\n852\n00:43:22,760 --> 00:43:25,520\nBut they both do the same thing.\n\n853\n00:43:25,520 --> 00:43:27,720\nNow it's a lot harder to do bulk insert,\nand\n\n854\n00:43:27,720 --> 00:43:30,540\nsince I'm a system admin I usually\nhave access to the server.\n\n855\n00:43:30,540 --> 00:43:34,675\nI almost always use BCP, but\nyour situation may be different.\n\n856\n00:43:34,675 --> 00:43:36,995\nSo use the solution that's best for you.\n\n857\n00:43:36,995 --> 00:43:40,265\nMaybe importing data via\nthe wizard inside of\n\n858\n00:43:40,265 --> 00:43:42,325\nthe SQL Management Studio is best for you.\n\n859\n00:43:42,325 --> 00:43:43,245\nIf so, use it, great.\n\n860\n00:43:43,245 --> 00:43:46,720\nOr maybe you're like me and\nBCP fits the needs best.\n\n861\n00:43:46,720 --> 00:43:49,830\nOr maybe you don't have access to\nthat service command line, and\n\n862\n00:43:49,830 --> 00:43:51,690\nbulk insert is your only option, right.\n\n863\n00:43:51,690 --> 00:43:53,520\nChoose the one that meets your needs.\n\n864\n00:43:54,882 --> 00:43:57,182\nAll right, so,\nthat's how we can get data in there.\n\n865\n00:43:57,182 --> 00:43:59,840\nThere is actually another way\nthat we can get data in there,\n\n866\n00:43:59,840 --> 00:44:02,140\nthat they really don't cover on the exam.\n\n867\n00:44:02,140 --> 00:44:05,370\nAnd that is to have one\nbig query that does it,\n\n868\n00:44:05,370 --> 00:44:07,910\nand I think I've got an example of that,\nlet's see, yeah right here.\n\n869\n00:44:09,140 --> 00:44:10,800\nLet me open this one up, all right.\n\n870\n00:44:10,800 --> 00:44:16,980\nSo here's an example of where\nsomeone wrote a transact SQL file,\n\n871\n00:44:16,980 --> 00:44:18,940\nthat goes in and adds my data.\n\n872\n00:44:18,940 --> 00:44:23,950\nAnd what this one is doing,\nis it's creating the table first.\n\n873\n00:44:23,950 --> 00:44:27,430\nSo right here at the beginning, see how\nit's creating a table called employees?\n\n874\n00:44:27,430 --> 00:44:31,440\nAnd in it it's doing employeesID, first\nname, last name, phone, email, hire date,\n\n875\n00:44:31,440 --> 00:44:33,290\nall that stuff, right?\n\n876\n00:44:33,290 --> 00:44:39,080\nAnd then afterwards, it's running\na bunch of insert into commands.\n\n877\n00:44:39,080 --> 00:44:45,470\nWith insert into, that's a transact SQL\ncommand, that adds rows to a table.\n\n878\n00:44:45,470 --> 00:44:49,640\nAnd so it's saying, I'm gonna add\na row to the employees table, and\n\n879\n00:44:49,640 --> 00:44:54,140\nit's gonna have values in this order,\nfirst name, last name, phone, email.\n\n880\n00:44:55,200 --> 00:44:57,860\nAnd then after that,\nit starts to give the values.\n\n881\n00:44:57,860 --> 00:45:00,850\nAnd so here it's creating Indigo Saunders.\n\n882\n00:45:00,850 --> 00:45:03,520\nAnd there's his information, right?\n\n883\n00:45:03,520 --> 00:45:07,230\nAnd then followed by Kyla Heath,\nand her information.\n\n884\n00:45:07,230 --> 00:45:11,060\nAnd then Signe Merrill,\nInteresting names in here.\n\n885\n00:45:11,060 --> 00:45:12,415\nAnd Burt Small, right?\n\n886\n00:45:12,415 --> 00:45:14,540\nSo, basically going through and\ncreating each one, and\n\n887\n00:45:14,540 --> 00:45:17,410\nit looks like they're adding about 20 or\n30 employees per, what?\n\n888\n00:45:17,410 --> 00:45:19,930\nActually more than that.\n\n889\n00:45:19,930 --> 00:45:22,320\nSo adding quite a few\nemployees per command.\n\n890\n00:45:22,320 --> 00:45:25,330\nSo each INSERT INTO has a limit\nto how many it can install.\n\n891\n00:45:25,330 --> 00:45:29,780\nSo, they're running more than one over and\nover again, to create and employee list.\n\n892\n00:45:29,780 --> 00:45:32,650\nThe nice thing about this,\nwe don't have to deal with files.\n\n893\n00:45:32,650 --> 00:45:35,270\nYou're not going and\ngrabbing files from the file system.\n\n894\n00:45:35,270 --> 00:45:37,280\nYou don't have to have access\nto the command prompt, or\n\n895\n00:45:37,280 --> 00:45:38,270\nthe file system or the server.\n\n896\n00:45:38,270 --> 00:45:41,420\nYou just have to be able to run a query,\nyou can create the table and\n\n897\n00:45:41,420 --> 00:45:43,390\nload all of this data in there.\n\n898\n00:45:43,390 --> 00:45:47,810\nIf I run this,\nactually let me just parse it real quick,\n\n899\n00:45:47,810 --> 00:45:50,640\nI've never run this before, so I want to\nmake sure that it doesn't have any errors.\n\n900\n00:45:50,640 --> 00:45:54,160\nSo, I'll execute it, It's going to go\nthrough and create that table, and\n\n901\n00:45:54,160 --> 00:45:55,810\npopulate the data inside of it.\n\n902\n00:45:55,810 --> 00:45:59,230\nLet me just refresh that and oh, shoot.\n\n903\n00:45:59,230 --> 00:46:00,700\nWhat database did it use?\n\n904\n00:46:00,700 --> 00:46:03,540\n[LAUGH] I just refreshed my tables,\nand it's not there.\n\n905\n00:46:03,540 --> 00:46:05,200\nSo, it's apparently running\nin the wrong database.\n\n906\n00:46:05,200 --> 00:46:06,760\nOh shoot, it did.\n\n907\n00:46:06,760 --> 00:46:10,020\nI didn't do a use command at the top\nto tell it what database to use.\n\n908\n00:46:10,020 --> 00:46:13,180\nAnd you'll see that I'm defaulting\nto the master database.\n\n909\n00:46:13,180 --> 00:46:16,140\nSo I just created that table in the master\ndatabase, which is not a good thing.\n\n910\n00:46:16,140 --> 00:46:18,130\nSo I need to go and remove that.\n\n911\n00:46:18,130 --> 00:46:23,450\nBut, let me just fix that\nwith a little use products.\n\n912\n00:46:23,450 --> 00:46:26,800\nWhich is the database that I have been\nworking with to get us in the right\n\n913\n00:46:26,800 --> 00:46:27,390\ncontext.\n\n914\n00:46:27,390 --> 00:46:28,680\nOr I just could have come up here and\n\n915\n00:46:28,680 --> 00:46:32,510\nchosen products from the first part,\nand did it right.\n\n916\n00:46:32,510 --> 00:46:36,620\nSo, let me rerun that, and\nnow when I refresh my table.\n\n917\n00:46:36,620 --> 00:46:41,990\nThere's this new employees table,\nand if I do a select top 1,000 rows,\n\n918\n00:46:41,990 --> 00:46:45,860\nI can see all their data\npopulated in there as expected.\n\n919\n00:46:45,860 --> 00:46:52,360\nI probably need to go clean\nup my master database.\n\n920\n00:46:52,360 --> 00:46:55,560\nIt's not hurting anything to have\nthat table in the master database,\n\n921\n00:46:55,560 --> 00:46:57,170\nbut it's certainly not helping.\n\n922\n00:46:57,170 --> 00:46:59,870\nI need to backup my master database, and\nI don't want to have a bunch of junk in\n\n923\n00:46:59,870 --> 00:47:02,410\nthere that's not necessary, so\nI'm just going to get rid of that table.\n\n924\n00:47:03,910 --> 00:47:05,950\nDon't wanna leave stuff laying around\nthat's not supposed to be there.\n\n925\n00:47:07,020 --> 00:47:07,520\nAll right.\n\n926\n00:47:08,860 --> 00:47:09,620\nNot the end of the world.\n\n927\n00:47:10,790 --> 00:47:13,980\nOkay, so there's a few different\nways that we can do data imports.\n\n928\n00:47:13,980 --> 00:47:17,660\nOn the exam, expect to see BCP,\nit's definitely gonna be there cuz it's so\n\n929\n00:47:17,660 --> 00:47:18,810\ncommonly used.\n\n930\n00:47:18,810 --> 00:47:23,580\nAll right but the import, export wizard,\nSSIS, they might be mentioned in concept.\n\n931\n00:47:23,580 --> 00:47:25,160\nBulk insert might be mentioned in concept.\n\n932\n00:47:25,160 --> 00:47:26,730\nThey're ones to be aware of.\n\n933\n00:47:26,730 --> 00:47:30,390\nAlso keep in mind that if you're in the\nbulk recovery model, for the back up and\n\n934\n00:47:30,390 --> 00:47:31,765\nrestore the system.\n\n935\n00:47:31,765 --> 00:47:36,245\nThat the bulk insert operations are those\noperations that can optionally bypass\n\n936\n00:47:36,245 --> 00:47:37,505\nthe transaction logs.\n\n937\n00:47:37,505 --> 00:47:40,475\nSo there's some advanced features in\nthere that you can make use of too.\n\n938\n00:47:40,475 --> 00:47:41,945\nYou likely won't see\nthat on the exam though.\n\n939\n00:47:43,755 --> 00:47:47,565\nAll right, so that's about it for\ngetting data in the database.\n\n940\n00:47:47,565 --> 00:47:50,550\nOnce it's there, what do we do with it?\n\n941\n00:47:50,550 --> 00:47:53,427\nWell, there's actually some really\nneat stuff that we can do, and\n\n942\n00:47:53,427 --> 00:47:54,793\nI wanna show you some examples.\n\n943\n00:47:54,793 --> 00:47:59,338\nWe can optimize the way that our\nqueries run against these tables,\n\n944\n00:47:59,338 --> 00:48:01,380\nto make them more efficient.\n\n945\n00:48:01,380 --> 00:48:05,022\nAnd whenever you create a new table, this\nis normally the next step that we go into,\n\n946\n00:48:05,022 --> 00:48:07,780\nis going through and\nstarting to optimize the system.\n\n947\n00:48:07,780 --> 00:48:08,430\nAll right?\n\n948\n00:48:08,430 --> 00:48:10,570\nSo that's what I wanna show you next.\n\n949\n00:48:10,570 --> 00:48:12,720\nBut, it's a pretty good spot to stop and\ntake a break.\n\n950\n00:48:12,720 --> 00:48:14,690\nSo why don't we pause for a breather here?\n\n951\n00:48:14,690 --> 00:48:16,090\nWhen we get back,\n\n952\n00:48:16,090 --> 00:48:19,540\nwe're gonna talk about indexing our\ndata to make our databases faster.\n\n953\n00:48:19,540 --> 00:48:20,630\nSo stay tuned.\n\n954\n00:48:20,630 --> 00:48:22,750\nWe'll be back after this.\n\n955\n00:48:22,750 --> 00:48:28,830\n[SOUND]\n\n956\n00:49:08,858 --> 00:49:13,378\nI am ready to go.\n\n957\n00:49:13,378 --> 00:49:14,578\nNo, no we're not.\n\n958\n00:49:21,598 --> 00:49:24,593\nNo.\nI'm waiting on you.\n\n959\n00:49:24,593 --> 00:49:25,458\nStart.\n\n960\n00:49:25,458 --> 00:49:28,595\n[SOUND] All right,\n\n961\n00:49:28,595 --> 00:49:33,200\nwelcome back everybody.\n\n962\n00:49:33,200 --> 00:49:36,368\nSo, now that we've got this table created,\nwe've got a ton of data in there and\n\n963\n00:49:36,368 --> 00:49:38,210\nit's super exciting.\n\n964\n00:49:38,210 --> 00:49:39,200\nBoy, what do we do with it?\n\n965\n00:49:39,200 --> 00:49:40,450\nWell, we could turn it loose.\n\n966\n00:49:40,450 --> 00:49:42,490\nGo to the developers,\nsay alright, you're data's there.\n\n967\n00:49:42,490 --> 00:49:43,750\nGood luck with that database.\n\n968\n00:49:43,750 --> 00:49:47,500\nHappy data computing, whatever, right?\n\n969\n00:49:47,500 --> 00:49:48,730\nThat'd be fine.\n\n970\n00:49:48,730 --> 00:49:52,570\nBut, there's still more we can\ndo to make this even better.\n\n971\n00:49:52,570 --> 00:49:55,350\nThe data, it's there, it works, right?\n\n972\n00:49:55,350 --> 00:49:57,300\nSo, we are technically done.\n\n973\n00:49:57,300 --> 00:50:01,390\nBut, if we understand the way\nthis data is gonna be used,\n\n974\n00:50:01,390 --> 00:50:03,920\nwe can actually make it even better.\n\n975\n00:50:03,920 --> 00:50:09,120\nThe way the data is written right now,\nit's lumped into what's called a heap.\n\n976\n00:50:09,120 --> 00:50:12,910\nA heap just means the data is all\nthrown right into the drive, and\n\n977\n00:50:12,910 --> 00:50:14,190\nit's just sitting there.\n\n978\n00:50:14,190 --> 00:50:18,350\nAnd if somebody does a query against it,\nit's gonna have to go in and\n\n979\n00:50:18,350 --> 00:50:22,480\nfind the data they're looking for and\nreturn it back to them, all right?\n\n980\n00:50:22,480 --> 00:50:26,020\nThe way it does that,\nis really just done one way right now.\n\n981\n00:50:26,020 --> 00:50:28,250\nIt's done with what's called a table scan.\n\n982\n00:50:28,250 --> 00:50:32,970\nA table scan is where we give\nit a criteria to look for, and\n\n983\n00:50:32,970 --> 00:50:34,400\nit looks at the whole table.\n\n984\n00:50:34,400 --> 00:50:38,250\nIt reads the whole entire table and\nthen gives me the information I want.\n\n985\n00:50:38,250 --> 00:50:38,820\nAll right?\n\n986\n00:50:38,820 --> 00:50:40,770\nLet me show you an example.\n\n987\n00:50:40,770 --> 00:50:42,170\nThat table we just made, right?\n\n988\n00:50:42,170 --> 00:50:44,640\nSo that is in the products database.\n\n989\n00:50:46,470 --> 00:50:51,740\nIf I say select star from products, right?\n\n990\n00:50:51,740 --> 00:50:52,680\nThe Products table.\n\n991\n00:50:52,680 --> 00:50:55,360\nAnd I can write that all\nthe way out if I want,\n\n992\n00:50:55,360 --> 00:50:57,830\nsince I've got ones with the same name.\n\n993\n00:50:57,830 --> 00:50:59,300\nJust to be on the safe side here.\n\n994\n00:50:59,300 --> 00:51:03,660\nWhat I'm doing, is I'm saying, give me\nall the data from that table, right?\n\n995\n00:51:03,660 --> 00:51:06,620\nOr actually you know what, let me do the\nEmployees one, that one's a little nicer.\n\n996\n00:51:06,620 --> 00:51:09,810\nSo I'll do the Employees one.\n\n997\n00:51:09,810 --> 00:51:12,400\nWhen I run that, oops.\n\n998\n00:51:12,400 --> 00:51:16,070\nNormally I hit F5 to execute,\nbut on my laptop,\n\n999\n00:51:16,070 --> 00:51:18,960\napparently that's the screen\nkeyboard brightness button.\n\n1000\n00:51:18,960 --> 00:51:22,180\nSo [LAUGH] I'll just reach up here and\nexecute.\n\n1001\n00:51:22,180 --> 00:51:24,710\nSo, it just went and did a table scan.\n\n1002\n00:51:24,710 --> 00:51:28,320\nIt said, wow,\nDon wants everything from that table.\n\n1003\n00:51:28,320 --> 00:51:30,550\nSo let me go read on the hard drive, and\n\n1004\n00:51:30,550 --> 00:51:33,710\nread that entire table,\nand give it to Don.\n\n1005\n00:51:33,710 --> 00:51:34,390\nRight?\n\n1006\n00:51:34,390 --> 00:51:37,640\nMaybe somebody just did that\na few minute ago, and so\n\n1007\n00:51:37,640 --> 00:51:39,810\nI've got the table cached in RAM.\n\n1008\n00:51:39,810 --> 00:51:40,870\nBut maybe they didn't.\n\n1009\n00:51:40,870 --> 00:51:44,020\nMaybe this was the first time\nsomebody's requested that table.\n\n1010\n00:51:44,020 --> 00:51:45,132\nI've gotta go do some disk I/O.\n\n1011\n00:51:45,132 --> 00:51:49,550\nI've gotta read on the hard drive,\nand gather that data together, and\n\n1012\n00:51:49,550 --> 00:51:50,640\npresent it to Don, all right?\n\n1013\n00:51:50,640 --> 00:51:54,580\nSo that's what it just did,\na full table scan.\n\n1014\n00:51:54,580 --> 00:52:00,960\nA table scan works, but it is the least\nefficient way to access data in SQL.\n\n1015\n00:52:00,960 --> 00:52:02,910\nAnd that's because we're\npulling a lot of information.\n\n1016\n00:52:02,910 --> 00:52:06,990\nNow when I ask for a lot of information\nthere's not really any other way to do it,\n\n1017\n00:52:06,990 --> 00:52:09,570\nI asked for everything so\nit game me everything.\n\n1018\n00:52:09,570 --> 00:52:11,081\nBut what if I filter it down?\n\n1019\n00:52:11,081 --> 00:52:13,020\nWhat if I do something like this?\n\n1020\n00:52:13,020 --> 00:52:20,517\nI say select star from\nproducts that employees,\n\n1021\n00:52:20,517 --> 00:52:27,510\nwhere last name like and,\nmaybe I'll say S%.\n\n1022\n00:52:27,510 --> 00:52:28,370\nAll right?\n\n1023\n00:52:28,370 --> 00:52:31,610\nWhat that means is, give me everything for\n\n1024\n00:52:31,610 --> 00:52:35,180\nemployee's whose last\nname starts with an S.\n\n1025\n00:52:35,180 --> 00:52:38,000\nSo if your last name starts with an S,\nI want to see it.\n\n1026\n00:52:38,000 --> 00:52:38,630\nOkay.\n\n1027\n00:52:38,630 --> 00:52:42,590\nNow, I don't need the bulk\nof the data in here.\n\n1028\n00:52:42,590 --> 00:52:43,580\nRight?\nI've got however ever\n\n1029\n00:52:43,580 --> 00:52:47,250\nmany hundred employees and I only need\nthe ones whose last name start with s.\n\n1030\n00:52:48,560 --> 00:52:50,840\nAll right?\nBut it's still going to do a full\n\n1031\n00:52:50,840 --> 00:52:51,910\ntable scan.\n\n1032\n00:52:51,910 --> 00:52:56,140\nIt's still going to read the entire\ntable from row one to the last row.\n\n1033\n00:52:56,140 --> 00:52:58,270\nIt's going to read the whole thing.\n\n1034\n00:52:58,270 --> 00:53:03,260\nAnd then filter out just the values that I\nwanted, and then give those values to me.\n\n1035\n00:53:03,260 --> 00:53:08,180\nSo while I might only be\nrequesting 5% of the total rows,\n\n1036\n00:53:08,180 --> 00:53:12,130\nit's still going to\nread 100% of the table.\n\n1037\n00:53:12,130 --> 00:53:13,830\nThat's where we lose efficiency.\n\n1038\n00:53:13,830 --> 00:53:17,550\nThat's where we have SQL Server\naccessing more disk than it needs to.\n\n1039\n00:53:17,550 --> 00:53:21,250\nYour disk is the slowest\npart in the server.\n\n1040\n00:53:21,250 --> 00:53:21,750\nAll right?\n\n1041\n00:53:21,750 --> 00:53:23,408\nSo any time we can take that away,\n\n1042\n00:53:23,408 --> 00:53:27,150\nany time we can make the server not\nlook at the disk, it's gonna be better.\n\n1043\n00:53:27,150 --> 00:53:27,690\nAll right?\n\n1044\n00:53:27,690 --> 00:53:29,870\nAnd indexes is the way the we do that.\n\n1045\n00:53:29,870 --> 00:53:32,390\nNow, let's put databases out\nof our mind for a minute.\n\n1046\n00:53:32,390 --> 00:53:33,150\nOkay?\n\n1047\n00:53:33,150 --> 00:53:35,840\nLet's think of this just in\nterms of just human beings.\n\n1048\n00:53:35,840 --> 00:53:40,060\nI've got to remember\nthe age of our viewers.\n\n1049\n00:53:40,060 --> 00:53:41,170\nEncyclopedia.\n\n1050\n00:53:41,170 --> 00:53:44,430\nIf you're not familiar with\nan encyclopedia which is funny but\n\n1051\n00:53:44,430 --> 00:53:45,680\ndefinitely possible.\n\n1052\n00:53:45,680 --> 00:53:47,540\nIf you're not familiar\nwith an encyclopedia,\n\n1053\n00:53:47,540 --> 00:53:49,050\nwe used to have these things.\n\n1054\n00:53:49,050 --> 00:53:51,110\nLet me just find a picture.\n\n1055\n00:53:51,110 --> 00:53:53,910\nDid I spell encyclopedia wrong?\n\n1056\n00:53:53,910 --> 00:53:55,965\nNope.\nSo we used to have encyclopedias,\n\n1057\n00:53:55,965 --> 00:53:56,700\nthese guys.\n\n1058\n00:53:56,700 --> 00:53:58,500\nYou can still find them\nin libraries today.\n\n1059\n00:53:58,500 --> 00:53:59,630\nThe World Book Encyclopedia,\n\n1060\n00:53:59,630 --> 00:54:02,620\nthat's probably one of the bigger ones or\nEncyclopedia Britannica or whatever.\n\n1061\n00:54:02,620 --> 00:54:06,380\nAnd they had a ton of data in them, right?\n\n1062\n00:54:06,380 --> 00:54:09,130\nNow if I wanted to find\nan article in there,\n\n1063\n00:54:09,130 --> 00:54:10,975\nmaybe I wanted to learn\nabout the queen of England.\n\n1064\n00:54:10,975 --> 00:54:11,530\nOkay?\n\n1065\n00:54:11,530 --> 00:54:16,270\nWell I don't know the queen of England's\nname, I probably should, but I don't.\n\n1066\n00:54:16,270 --> 00:54:19,410\nSo I might just know\nthat that's the title.\n\n1067\n00:54:19,410 --> 00:54:19,980\nQueen of England.\n\n1068\n00:54:19,980 --> 00:54:21,390\nAll right, so I wanna look that up.\n\n1069\n00:54:21,390 --> 00:54:23,140\nWell, what do I do?\n\n1070\n00:54:23,140 --> 00:54:25,010\nThe books are broken up by letters.\n\n1071\n00:54:25,010 --> 00:54:27,950\nSo, I go and\nI find the book that covers the letter Q.\n\n1072\n00:54:27,950 --> 00:54:31,090\nSo, one of these in here it will\nsay on the little spine there\n\n1073\n00:54:31,090 --> 00:54:32,010\nthat it's the letter Q.\n\n1074\n00:54:32,010 --> 00:54:33,670\nSo I go on and find that one.\n\n1075\n00:54:33,670 --> 00:54:37,060\nAnd then I open that one up and,\nwhere in there do I go?\n\n1076\n00:54:37,060 --> 00:54:40,600\nWell, everything is alphabetized,\nso I flip through and I go in and\n\n1077\n00:54:40,600 --> 00:54:44,880\nI find Q, then qu, que, and\nthen I find queen of England.\n\n1078\n00:54:44,880 --> 00:54:45,450\nRight?\n\n1079\n00:54:45,450 --> 00:54:47,140\nSo I find my data.\n\n1080\n00:54:47,140 --> 00:54:50,640\nNow did I have to search through\nevery single book to find that?\n\n1081\n00:54:50,640 --> 00:54:52,890\nNo, because the data is nice and\norganized.\n\n1082\n00:54:52,890 --> 00:54:54,320\nIt's all alphabetized.\n\n1083\n00:54:54,320 --> 00:54:55,100\nRight?\n\n1084\n00:54:55,100 --> 00:54:59,920\nBut, if you look at my database here,\nare these employees nice and organized?\n\n1085\n00:54:59,920 --> 00:55:00,660\nNo.\n\n1086\n00:55:00,660 --> 00:55:02,660\nThey're organized by employee ID.\n\n1087\n00:55:02,660 --> 00:55:04,755\nYou know, as I hire employees and\ncreate new ones,\n\n1088\n00:55:04,755 --> 00:55:07,770\nsure their employee ID is ordered,\nbut their last name isn't.\n\n1089\n00:55:07,770 --> 00:55:10,240\nAll the Ss aren't right here alphabetized.\n\n1090\n00:55:10,240 --> 00:55:14,550\nData in a database is rarely\nin the order we want it.\n\n1091\n00:55:14,550 --> 00:55:16,730\nAnd as a result,\nit has to do a table scan.\n\n1092\n00:55:16,730 --> 00:55:22,280\nA table scan is the equivalent of grabbing\nvolume one of that encyclopedia and\n\n1093\n00:55:22,280 --> 00:55:25,770\nreading through every single volume.\n\n1094\n00:55:25,770 --> 00:55:26,870\nTo find what you want.\n\n1095\n00:55:26,870 --> 00:55:29,990\nAnd just because you've found one\nperson whose last name started with S,\n\n1096\n00:55:29,990 --> 00:55:32,020\ndoesn't mean you stop,\nbecause there's more.\n\n1097\n00:55:32,020 --> 00:55:36,510\nYou've gotta go through 100% every\nsingle volume of that encyclopedia\n\n1098\n00:55:36,510 --> 00:55:40,590\nbefore you find every user\nwhose last name starts with S.\n\n1099\n00:55:40,590 --> 00:55:42,200\nThat's a lot of work.\n\n1100\n00:55:42,200 --> 00:55:43,710\nIf you were to do that as a person,\npaging through,\n\n1101\n00:55:43,710 --> 00:55:45,620\nit would take you forever to do a query.\n\n1102\n00:55:45,620 --> 00:55:48,035\nWell, it takes a computer \"forever\".\n\n1103\n00:55:48,035 --> 00:55:51,417\nNow, forever for\na computer is a matter of seconds, right?\n\n1104\n00:55:51,417 --> 00:55:54,109\nBut if we could get that query\ndown to nanoseconds, milliseconds,\n\n1105\n00:55:54,109 --> 00:55:56,840\nif we could get it down like that,\nit makes a big difference.\n\n1106\n00:55:56,840 --> 00:55:59,250\nBecause the computer's\nnot doing just one query.\n\n1107\n00:55:59,250 --> 00:56:03,310\nIt's doing thousands of queries per\nsecond based on your user base, right?\n\n1108\n00:56:03,310 --> 00:56:06,780\nIf you've got a ton of users in there,\nlike the Amazon product database.\n\n1109\n00:56:06,780 --> 00:56:08,950\nYou can have a ton of people\nin there doing searches, and\n\n1110\n00:56:08,950 --> 00:56:13,280\ntable scans are just not practical\nin that environment, right?\n\n1111\n00:56:13,280 --> 00:56:18,280\nSo what we can do,\nis we can create Indexes, or indices,\n\n1112\n00:56:18,280 --> 00:56:23,620\ndepends on how you want to say that, but\nan index is a way to take a shortcut.\n\n1113\n00:56:23,620 --> 00:56:28,010\nInstead of having to go through and\nfind it ourselves, we go to the index, and\n\n1114\n00:56:28,010 --> 00:56:29,440\nthe index tells us where to look.\n\n1115\n00:56:29,440 --> 00:56:32,370\nAnd almost every encyclopedia had that,\n\n1116\n00:56:32,370 --> 00:56:34,990\nand we really can't see\nit here in this picture.\n\n1117\n00:56:34,990 --> 00:56:39,540\nLet me see if we can maybe zoom in,\na little bit, on it, here we go.\n\n1118\n00:56:39,540 --> 00:56:42,880\nSee how each of these books has\na little name on it, right.\n\n1119\n00:56:42,880 --> 00:56:47,370\nSo we've got Deakin,\nElectron gun, Fiscus, Germanium.\n\n1120\n00:56:47,370 --> 00:56:49,340\nThese are kind of letting\nme know the letter, right.\n\n1121\n00:56:49,340 --> 00:56:53,400\nI've got D, E, F, G,\nH, I, and so on, right.\n\n1122\n00:56:53,400 --> 00:56:58,200\nWell, if you get to the very end of this\nencyclopedia set, the last one just says\n\n1123\n00:56:58,200 --> 00:57:02,900\nbibliography, right, and it's, well you\nknow actually my head's on top of that.\n\n1124\n00:57:02,900 --> 00:57:04,030\nThere.\nSo there, bibliography,\n\n1125\n00:57:04,030 --> 00:57:06,650\nbut you can almost see it\nthere where it says index.\n\n1126\n00:57:06,650 --> 00:57:08,450\nThat's the index book, alright?\n\n1127\n00:57:08,450 --> 00:57:09,710\nThat's the one that we can go to.\n\n1128\n00:57:09,710 --> 00:57:11,720\nI want to find the Queen of England.\n\n1129\n00:57:11,720 --> 00:57:13,510\nSo I grab the index book.\n\n1130\n00:57:13,510 --> 00:57:18,130\nAnd I go to the Q's, and I find Q, and\nit says Queen of England is in the Q\n\n1131\n00:57:18,130 --> 00:57:22,720\nvolume which is volume,\nI don't know, probably 20.\n\n1132\n00:57:22,720 --> 00:57:25,230\nSo go to volume 20 on page 212.\n\n1133\n00:57:25,230 --> 00:57:27,560\nSo now I grab volume 20.\n\n1134\n00:57:27,560 --> 00:57:31,700\nI go right to page 212 and\nthere's the exact data that I want, right?\n\n1135\n00:57:31,700 --> 00:57:34,780\nOr I wanna find information on\nall the queens of England, so\n\n1136\n00:57:34,780 --> 00:57:38,010\nit's listed right there in the index now\nI know exactly which volumes to go to,\n\n1137\n00:57:38,010 --> 00:57:41,180\nand so I can start to learn about\nthe tutors and all that stuff and\n\n1138\n00:57:41,180 --> 00:57:43,380\ngo to the other volumes\nthat had that information.\n\n1139\n00:57:43,380 --> 00:57:46,680\nThat's not just in the volume queue.\n\n1140\n00:57:46,680 --> 00:57:49,420\nAn index is a shortcut, and\n\n1141\n00:57:49,420 --> 00:57:54,070\nso if we know how our end users\nare gonna be qeurieing this database.\n\n1142\n00:57:54,070 --> 00:57:58,090\nIf we know how our developers are gonna be\nusing it, we can look at their queries,\n\n1143\n00:57:58,090 --> 00:58:01,810\nand we can build the indexes\nthat meet their needs.\n\n1144\n00:58:01,810 --> 00:58:05,230\nThe indexes that will help them\njump right to the data they want.\n\n1145\n00:58:05,230 --> 00:58:09,130\nSo, instead of having to do a full\ntable scan and read the whole thing,\n\n1146\n00:58:09,130 --> 00:58:12,320\nthe server can just jump right\nto the data they're looking for.\n\n1147\n00:58:12,320 --> 00:58:12,860\nAll right?\n\n1148\n00:58:12,860 --> 00:58:14,810\nAnd my query here is a great example.\n\n1149\n00:58:14,810 --> 00:58:17,980\nI wanna find just the people whose\nlast name starts with S, and\n\n1150\n00:58:17,980 --> 00:58:19,930\nif I run that, it works.\n\n1151\n00:58:19,930 --> 00:58:20,930\nHere it is.\nI get\n\n1152\n00:58:20,930 --> 00:58:25,480\nall the people whose last name starts\nwith S, and it's only nine rows.\n\n1153\n00:58:25,480 --> 00:58:26,790\nOkay?\n\n1154\n00:58:26,790 --> 00:58:32,400\nIf I had not done that, right?\n\n1155\n00:58:32,400 --> 00:58:35,590\nIf I pull the whole thing,\nthe whole thing is 100 rows.\n\n1156\n00:58:35,590 --> 00:58:39,290\nOkay, so I've got 100 employees,\n100 rows, but\n\n1157\n00:58:39,290 --> 00:58:43,870\nwhen I come in and get it with just the\nlast name equals s, it's only nine rows.\n\n1158\n00:58:43,870 --> 00:58:48,000\nSo, it's less than ten percent of the\ndata, but I read 100% of the data, right.\n\n1159\n00:58:48,000 --> 00:58:50,660\nHow could I optimize this?\n\n1160\n00:58:50,660 --> 00:58:56,000\nWell, I can create an index\non the last name column.\n\n1161\n00:58:56,000 --> 00:58:58,590\nIf I know there going to\nbe searching by last name.\n\n1162\n00:58:58,590 --> 00:59:01,590\nI can create an index on\nthe last name column, alright.\n\n1163\n00:59:01,590 --> 00:59:05,780\nAnd when you create that index,\nit'll basically take that column and\n\n1164\n00:59:05,780 --> 00:59:07,310\nstore it in RAM.\n\n1165\n00:59:07,310 --> 00:59:10,010\nEvery time that system fires up and\nthe database gets loaded and\n\n1166\n00:59:10,010 --> 00:59:13,740\nsomebody hits the database the first time,\nthat index is loaded into RAM.\n\n1167\n00:59:13,740 --> 00:59:16,560\nAnd so now when I go to search for\nusers based on their last name.\n\n1168\n00:59:16,560 --> 00:59:18,180\nIt'll say oh, I've got an index for that.\n\n1169\n00:59:18,180 --> 00:59:19,090\nIt's right here in RAM.\n\n1170\n00:59:19,090 --> 00:59:19,880\nYou can look at it.\n\n1171\n00:59:19,880 --> 00:59:22,660\nFind the information you need,\nand we'll present it to you.\n\n1172\n00:59:22,660 --> 00:59:23,630\nOkay.\n\n1173\n00:59:23,630 --> 00:59:25,720\nThat saves us time.\n\n1174\n00:59:25,720 --> 00:59:27,540\nNow we can go even further than that.\n\n1175\n00:59:27,540 --> 00:59:29,580\nThis data is not stored in order.\n\n1176\n00:59:29,580 --> 00:59:32,100\nI asked for\npeople whose last name started with S.\n\n1177\n00:59:32,100 --> 00:59:34,570\nSee I've got Sa for Sanders.\n\n1178\n00:59:35,870 --> 00:59:37,260\nSm for Small.\n\n1179\n00:59:37,260 --> 00:59:38,890\nSa for Sanford.\n\n1180\n00:59:38,890 --> 00:59:42,851\nIt's not ordered by that last name,\nit's ordered by employee ID,\n\n1181\n00:59:42,851 --> 00:59:45,010\nthese are in order.\n\n1182\n00:59:45,010 --> 00:59:48,240\nSo if I know that somebody's going\nto be running this query, and\n\n1183\n00:59:48,240 --> 00:59:52,790\nthey're gonna say something\nlike order by ascending, okay,\n\n1184\n00:59:52,790 --> 00:59:56,870\nthey're going to get the results\nback ordered by that last name.\n\n1185\n00:59:56,870 --> 01:00:01,820\nIf I know they're going to do that,\nwhat did I do there?\n\n1186\n01:00:01,820 --> 01:00:02,520\nOrder by.\n\n1187\n01:00:04,780 --> 01:00:05,430\nOh, sorry.\n\n1188\n01:00:05,430 --> 01:00:06,390\nAscending is the default.\n\n1189\n01:00:06,390 --> 01:00:07,770\nI need to specify the column.\n\n1190\n01:00:07,770 --> 01:00:10,230\nSo I wanna order it by the last name.\n\n1191\n01:00:11,260 --> 01:00:13,650\nAnd ascending is default, so\nI don't need to specify that.\n\n1192\n01:00:13,650 --> 01:00:16,740\nSo, if I know they're gonna be doing that,\nso there,\n\n1193\n01:00:16,740 --> 01:00:20,180\nsee how it turned it back, Sanchez,\nSanford, Saunders, Sellers.\n\n1194\n01:00:20,180 --> 01:00:23,810\nNow it's alphabetized by last name and\nnot employee ID, all right?\n\n1195\n01:00:23,810 --> 01:00:26,790\nThat's another extra\nstep they have to take.\n\n1196\n01:00:26,790 --> 01:00:28,590\nWhen I build the index,\n\n1197\n01:00:28,590 --> 01:00:33,620\nI can build the index already sorted\nto the order that they need, okay.\n\n1198\n01:00:33,620 --> 01:00:35,290\nNow as an admin you can't\njust do this on your own,\n\n1199\n01:00:35,290 --> 01:00:38,620\nyou can't say I'm gonna build an index\nhere cuz I think it'll be useful.\n\n1200\n01:00:38,620 --> 01:00:40,440\nYou don't know, it's not you using it.\n\n1201\n01:00:40,440 --> 01:00:42,350\nWe've gotta pay attention\nto our end users.\n\n1202\n01:00:42,350 --> 01:00:44,420\nPay attention to the people\nactually using the database and\n\n1203\n01:00:44,420 --> 01:00:45,990\nwhat queries they're running.\n\n1204\n01:00:45,990 --> 01:00:49,790\nAnd say man,\nthey are filtering by last name a lot and\n\n1205\n01:00:49,790 --> 01:00:52,160\nthey're ordering it this way a lot.\n\n1206\n01:00:52,160 --> 01:00:55,030\nLet me build an index that\ndoes that ahead of time.\n\n1207\n01:00:55,030 --> 01:00:58,010\nSo when they run the query,\nwe don't have to go and do table scans.\n\n1208\n01:00:58,010 --> 01:00:59,030\nWe don't have to do that work.\n\n1209\n01:00:59,030 --> 01:01:00,670\nThe work is already done.\n\n1210\n01:01:00,670 --> 01:01:04,210\nYou're basically forcing something\nto be cached into ram ahead of time.\n\n1211\n01:01:04,210 --> 01:01:05,760\nThat's all you're doing.\n\n1212\n01:01:05,760 --> 01:01:08,890\nYou don't necessarily have to do it\nbecause the first time somebody does it,\n\n1213\n01:01:08,890 --> 01:01:09,760\nit'll get cached to RAM,\n\n1214\n01:01:09,760 --> 01:01:13,330\nand the next person comes along it'll hit\nthat cache, and it'll work out great.\n\n1215\n01:01:13,330 --> 01:01:14,860\nBut if it's something that infrequent,\n\n1216\n01:01:14,860 --> 01:01:18,135\nif it's run every couple of minutes,\nit's not going to stay in RAM.\n\n1217\n01:01:18,135 --> 01:01:21,010\nStuff will only usually stay in RAM for\na handful of seconds.\n\n1218\n01:01:21,010 --> 01:01:23,700\nSo, this will force it\nto stay there longer,\n\n1219\n01:01:23,700 --> 01:01:25,710\nthis is a way that we can improve\nperformance on our system.\n\n1220\n01:01:27,010 --> 01:01:29,950\nAll right, so really important\nstuff here creating these indexes,\n\n1221\n01:01:29,950 --> 01:01:31,840\nreally powerful stuff.\n\n1222\n01:01:31,840 --> 01:01:36,212\nTo get an idea of that, we can actually\nmeasure what's happening on our system,\n\n1223\n01:01:36,212 --> 01:01:37,070\nall right.\n\n1224\n01:01:37,070 --> 01:01:42,610\nAnd lets say that we're responsible for\nthis exact database, right.\n\n1225\n01:01:42,610 --> 01:01:44,220\nAnd we need to optimize it.\n\n1226\n01:01:44,220 --> 01:01:48,190\nWell, how do I know how it's\nrunning right now, okay.\n\n1227\n01:01:48,190 --> 01:01:49,390\nI really don't, right.\n\n1228\n01:01:49,390 --> 01:01:52,510\nSo, I need to learn a little bit about it.\n\n1229\n01:01:52,510 --> 01:01:56,630\nWhat we can do, is we can view what's\ncalled our query execution plan.\n\n1230\n01:01:56,630 --> 01:01:58,470\nThere's a little button up\nhere at the top of the screen.\n\n1231\n01:01:58,470 --> 01:02:00,270\nIt's three squares linked together.\n\n1232\n01:02:00,270 --> 01:02:01,430\nI always forget it.\n\n1233\n01:02:01,430 --> 01:02:04,255\nI actually have a note right here telling\nme three squares linked together,\n\n1234\n01:02:04,255 --> 01:02:07,130\ncuz I always use the short cut, control m.\n\n1235\n01:02:07,130 --> 01:02:09,660\nControl m does the execution plan.\n\n1236\n01:02:09,660 --> 01:02:14,240\nWhen you turn that on, notice how\nabsolutely nothing changed on my screen.\n\n1237\n01:02:14,240 --> 01:02:18,980\nBut from now on, as long as the execution\nplan is turned on, when I run it,\n\n1238\n01:02:20,420 --> 01:02:23,900\nnow I get an extra tab in my results and\n\n1239\n01:02:23,900 --> 01:02:27,690\nit's going to show me what\nhappened when that query ran.\n\n1240\n01:02:27,690 --> 01:02:31,140\nWhen that query ran,\nit had to do a table scan.\n\n1241\n01:02:31,140 --> 01:02:32,560\nIt had to do a sort.\n\n1242\n01:02:32,560 --> 01:02:33,600\nIt had to do this or that.\n\n1243\n01:02:33,600 --> 01:02:35,910\nIt's going to tell me, what happened.\n\n1244\n01:02:35,910 --> 01:02:36,550\nOkay?\n\n1245\n01:02:36,550 --> 01:02:39,210\nAnd I'll get the information\nback on what occurred.\n\n1246\n01:02:39,210 --> 01:02:39,760\nRight?\n\n1247\n01:02:39,760 --> 01:02:42,210\nLooks like I've actually got\nan index on mine already.\n\n1248\n01:02:42,210 --> 01:02:43,490\nA primary key index.\n\n1249\n01:02:43,490 --> 01:02:45,840\nSo it used that when it did the search.\n\n1250\n01:02:45,840 --> 01:02:48,630\nNow the index is on the employee ID,\nI believe.\n\n1251\n01:02:48,630 --> 01:02:52,850\nSo I don't know how affective that was,\nbut I did a scan and it used it.\n\n1252\n01:02:52,850 --> 01:02:56,360\nLet's do this a different.\n\n1253\n01:02:56,360 --> 01:02:58,220\nLet me ditch that index\nthat's already there.\n\n1254\n01:02:58,220 --> 01:03:00,120\nActually I don't think it's\ngoing to let me do it, is it?\n\n1255\n01:03:02,400 --> 01:03:03,290\nLet's see will it let me delete?\n\n1256\n01:03:03,290 --> 01:03:04,530\nWhoops.\n\n1257\n01:03:04,530 --> 01:03:05,950\nWill it let me delete that?\n\n1258\n01:03:05,950 --> 01:03:08,770\nSince it's a primary key, it might not.\n\n1259\n01:03:10,760 --> 01:03:11,630\nNo we did.\nGood.\n\n1260\n01:03:11,630 --> 01:03:13,010\nAlright, let me just delete\nthat index out of there.\n\n1261\n01:03:13,010 --> 01:03:15,020\nSo I've got no index on\nthis table right now.\n\n1262\n01:03:15,020 --> 01:03:17,450\nI'm gonna execute that and\ntake a look at the plan.\n\n1263\n01:03:17,450 --> 01:03:18,320\nThere we go.\n\n1264\n01:03:18,320 --> 01:03:19,000\nAll right.\n\n1265\n01:03:19,000 --> 01:03:24,670\nWith no indexes,\nit had to do a table scan and a sort.\n\n1266\n01:03:24,670 --> 01:03:26,280\nAll right?\nThe table scan,\n\n1267\n01:03:26,280 --> 01:03:28,700\nit had to look at 100% of the rows.\n\n1268\n01:03:28,700 --> 01:03:29,780\nEverything.\n\n1269\n01:03:29,780 --> 01:03:32,270\nAnd then, it had to get the data I wanted.\n\n1270\n01:03:32,270 --> 01:03:34,730\nThen it had to take the data I wanted,\nand it had to sort it.\n\n1271\n01:03:34,730 --> 01:03:36,470\nPut it in the order I wanted.\n\n1272\n01:03:36,470 --> 01:03:38,320\nRight?\nThose are the two steps it had to do\n\n1273\n01:03:38,320 --> 01:03:40,540\nbefore it could finally\ngive me the data I wanted.\n\n1274\n01:03:40,540 --> 01:03:41,220\nThe select.\n\n1275\n01:03:41,220 --> 01:03:43,430\nRight?\nSo it's breaking down what happened.\n\n1276\n01:03:43,430 --> 01:03:46,370\nNow, the numbers that it gives you here,\n73%, 27%.\n\n1277\n01:03:46,370 --> 01:03:48,860\nThey're pretty much meaningless,\nall right?\n\n1278\n01:03:48,860 --> 01:03:53,510\nWhat that's saying is,\n73% of the work done was sorting.\n\n1279\n01:03:53,510 --> 01:03:57,042\nAnd 27% of the work done\nwas doing the table scan.\n\n1280\n01:03:57,042 --> 01:03:59,870\nBut I can't compare that to other queries,\nright?\n\n1281\n01:03:59,870 --> 01:04:02,790\nThat's only relevant within this query,\nitself.\n\n1282\n01:04:02,790 --> 01:04:05,928\nThe real data is when you\nfloat the mouse over it.\n\n1283\n01:04:05,928 --> 01:04:09,675\nThat table scan,\nit'll show me how much CPU and\n\n1284\n01:04:09,675 --> 01:04:14,178\nhow much disk I owe,\nit generated doing that table scan.\n\n1285\n01:04:14,178 --> 01:04:17,237\nAnd I can move my mouse over the sort and\nI'll see the same thing,\n\n1286\n01:04:17,237 --> 01:04:20,309\nthe disk I owe in CPU that was\ngenerated doing those operations.\n\n1287\n01:04:21,530 --> 01:04:24,560\nThis is data that I can compare\nto other queries, right.\n\n1288\n01:04:24,560 --> 01:04:26,480\nThis is data that's useful.\n\n1289\n01:04:26,480 --> 01:04:29,290\nSo what I can do is I can catalogue this,\nright.\n\n1290\n01:04:29,290 --> 01:04:30,480\nAnd that's exactly what I'm gonna do.\n\n1291\n01:04:30,480 --> 01:04:32,700\nI'm gonna take this and\npark it on the side of my screen.\n\n1292\n01:04:32,700 --> 01:04:37,490\nAll right, so I've got it right there and\nI'm just gonna open\n\n1293\n01:04:37,490 --> 01:04:42,720\na Notepad window and park it over here and\nwe'll start to kinda look at this.\n\n1294\n01:04:42,720 --> 01:04:47,220\nSo this is my Unindexed Query Results.\n\n1295\n01:04:51,011 --> 01:04:53,480\nHere, let me make that a bit larger so\nwe can all see.\n\n1296\n01:04:55,770 --> 01:04:59,803\nOkay, so my Unindexed Query Results,\nthere was a table scan\n\n1297\n01:05:06,928 --> 01:05:10,720\nAnd that table scan had\nsome disc I/O right?\n\n1298\n01:05:10,720 --> 01:05:14,730\nSo it had I/O of, let's find out how much.\n\n1299\n01:05:14,730 --> 01:05:18,858\nIf I look at the I/O cost,\nI can see in there,\n\n1300\n01:05:18,858 --> 01:05:22,678\nmy estimated I/O cost, 0.0039.\n\n1301\n01:05:22,678 --> 01:05:26,636\nSo it was 0.0039442.\n\n1302\n01:05:26,636 --> 01:05:28,429\nI believe is what it was.\n\n1303\n01:05:28,429 --> 01:05:28,970\nLet's make sure.\n\n1304\n01:05:28,970 --> 01:05:31,636\n0.0039442.\n\n1305\n01:05:31,636 --> 01:05:32,845\nGot it.\n\n1306\n01:05:32,845 --> 01:05:34,845\nThen I can take a look at my sorts.\n\n1307\n01:05:34,845 --> 01:05:39,471\nAnd my sorts estimated I/O cost 0.0112613.\n\n1308\n01:05:39,471 --> 01:05:43,928\nSo 0.011.\n\n1309\n01:05:43,928 --> 01:05:45,550\nShoot, already forgot.\n\n1310\n01:05:45,550 --> 01:05:47,136\nShort term memory is shot.\n\n1311\n01:05:47,136 --> 01:05:51,345\nSo 0., oh, wrong one.\n\n1312\n01:05:51,345 --> 01:05:55,136\n0.0112613.\n\n1313\n01:05:55,136 --> 01:05:56,790\nAll right, so that was the sort.\n\n1314\n01:05:56,790 --> 01:06:00,962\nSo it actually looks like\nthe sort generated more\n\n1315\n01:06:00,962 --> 01:06:05,670\nI/O than the table scan did,\nbut there we go, all right.\n\n1316\n01:06:05,670 --> 01:06:09,830\nAnd if I add that up my total I/O,\n\n1317\n01:06:09,830 --> 01:06:13,050\nif I just want to add these\ntwo together was what 0.014,\n\n1318\n01:06:13,050 --> 01:06:18,560\nI'll just stop right there, that's\nenough digits to be meaningful to me.\n\n1319\n01:06:18,560 --> 01:06:21,760\nAll right, so is that a lot of IO?\n\n1320\n01:06:21,760 --> 01:06:22,430\nIt really isn't.\n\n1321\n01:06:22,430 --> 01:06:23,650\nIt's a very small amount of I/O.\n\n1322\n01:06:23,650 --> 01:06:25,720\nIt's a small table, only 100 rows.\n\n1323\n01:06:25,720 --> 01:06:27,990\nImagine if the table was 1 million rows,\nthough.\n\n1324\n01:06:27,990 --> 01:06:29,150\nIt would have been a lot.\n\n1325\n01:06:29,150 --> 01:06:32,230\nAnd imagine if this query was\nbeing run 400 times per second, or\n\n1326\n01:06:32,230 --> 01:06:35,150\n400 times per minute for that matter.\n\n1327\n01:06:35,150 --> 01:06:36,550\nThen, it becomes a lot.\n\n1328\n01:06:36,550 --> 01:06:40,120\nSo, by itself,\na query might not look like a big deal.\n\n1329\n01:06:40,120 --> 01:06:45,080\nBut when you start running it in bulk,\nit really becomes a big deal fast.\n\n1330\n01:06:45,080 --> 01:06:48,930\nBut now I know exactly what kind of\nperformance I got off of this query.\n\n1331\n01:06:48,930 --> 01:06:50,940\nLet's see how an index can affect that.\n\n1332\n01:06:50,940 --> 01:06:52,920\nI'm gonna create an index.\n\n1333\n01:06:52,920 --> 01:06:56,490\nNow, when we create indexes,\nthere's two types of indexes.\n\n1334\n01:06:56,490 --> 01:06:58,570\nThere's clustered and non-clustered.\n\n1335\n01:06:58,570 --> 01:07:01,609\nAnd I'm going to get into the differences\nof those here in a minute, but\n\n1336\n01:07:01,609 --> 01:07:03,636\nbefore that let's just\ncreate one real quick so\n\n1337\n01:07:03,636 --> 01:07:06,240\nyou guys can see how it\nimproves the performance.\n\n1338\n01:07:06,240 --> 01:07:11,160\nSo, I'm going to create\na new index on this table\n\n1339\n01:07:12,700 --> 01:07:19,970\nand I'm gonna add in the last name column,\nso the last name is what I'm indexing.\n\n1340\n01:07:19,970 --> 01:07:23,010\nAnd the sort order is\ngoing to be ascending so\n\n1341\n01:07:23,010 --> 01:07:25,820\nit's already gonna be sorted\nthe way that I want it.\n\n1342\n01:07:25,820 --> 01:07:29,130\nThe index is going to help me find\nthe last names without a table scan.\n\n1343\n01:07:29,130 --> 01:07:32,100\nThe ascending sort order is going\nto help me already have it sorted\n\n1344\n01:07:32,100 --> 01:07:35,680\nwithout having to go and\nfind the data and sort it myself.\n\n1345\n01:07:35,680 --> 01:07:38,920\nSo I'm just going to whip this index up,\nchuck it in there real quick.\n\n1346\n01:07:38,920 --> 01:07:40,860\nThere we go, all right.\n\n1347\n01:07:40,860 --> 01:07:44,220\nNow I'm going to rerun\nthis same exact query.\n\n1348\n01:07:44,220 --> 01:07:47,490\nWhen I run it again,\nlook at that execution plan.\n\n1349\n01:07:47,490 --> 01:07:49,460\nIt's a lot different, all right.\n\n1350\n01:07:49,460 --> 01:07:52,480\nAnd if you look,\nthere's no table scan anymore.\n\n1351\n01:07:52,480 --> 01:07:57,200\nIn fact if you look, there's the index\nseek where it goes out to find the index.\n\n1352\n01:07:57,200 --> 01:07:59,180\nThat's 31% of my work.\n\n1353\n01:07:59,180 --> 01:08:01,550\nThen there's the RID lookup,\nthe heap lookup.\n\n1354\n01:08:01,550 --> 01:08:02,900\nThat's where it actually\ngoes to get the data.\n\n1355\n01:08:02,900 --> 01:08:04,340\nThis is my data retrieval.\n\n1356\n01:08:04,340 --> 01:08:06,680\nThat was 68% of the work.\n\n1357\n01:08:06,680 --> 01:08:09,910\nAnd then the nested loops, that's where\nit combined the information together.\n\n1358\n01:08:09,910 --> 01:08:12,580\nCombining the information of\nthe index with the information\n\n1359\n01:08:12,580 --> 01:08:14,240\npulled from the drive.\n\n1360\n01:08:14,240 --> 01:08:17,770\nSo that totals up to 100% and\nwhat does that mean for me?\n\n1361\n01:08:17,770 --> 01:08:20,030\nNothing, it's really not relevant.\n\n1362\n01:08:20,030 --> 01:08:21,480\nIt's just relevant inside of this query.\n\n1363\n01:08:21,480 --> 01:08:25,020\nThe bulk of my work was actually\nretrieving data from the drive.\n\n1364\n01:08:25,020 --> 01:08:28,372\nBut where this becomes relevant\nIs where we collect the I/O and\n\n1365\n01:08:28,372 --> 01:08:29,770\nwe look at what happened.\n\n1366\n01:08:29,770 --> 01:08:36,886\nSo, on the indexed query,\nand, you know what?\n\n1367\n01:08:36,886 --> 01:08:41,124\nNow that I think about it, this top query,\nwe ran that a few times so\n\n1368\n01:08:41,124 --> 01:08:43,178\nit might have actually cached.\n\n1369\n01:08:43,178 --> 01:08:45,245\nSo those numbers might be\nbetter than we get but\n\n1370\n01:08:45,245 --> 01:08:47,950\nI think our other query will\nstill have even better results.\n\n1371\n01:08:47,950 --> 01:08:49,530\nSo I'm not too worried about it.\n\n1372\n01:08:49,530 --> 01:08:56,240\nBut basically, we had an index seek,\nwhich took some I/O,\n\n1373\n01:08:56,240 --> 01:09:00,290\nand then our RID look up,\nwhich was the remainder of our I/O.\n\n1374\n01:09:00,290 --> 01:09:02,011\nThe nested loop, that's all in RAM.\n\n1375\n01:09:02,011 --> 01:09:04,594\nThat doesn't doesn't generate I/O, and\n\n1376\n01:09:04,594 --> 01:09:07,470\nthen we'll do our total so\nwe can compare these.\n\n1377\n01:09:07,470 --> 01:09:08,178\nAll right.\n\n1378\n01:09:08,178 --> 01:09:15,553\nSo my index seek, if I float over that,\nmy estimated IO was 0.003125.\n\n1379\n01:09:15,553 --> 01:09:21,180\nSo 0.003125, and then my RID lookup,\nif I pull that one up,\n\n1380\n01:09:21,180 --> 01:09:25,261\n0.003125, the same information, so.\n\n1381\n01:09:27,720 --> 01:09:30,040\nLet me just verify that\nthat is indeed the case.\n\n1382\n01:09:30,040 --> 01:09:31,110\nYes, it is, all right.\n\n1383\n01:09:31,110 --> 01:09:36,815\nSo, my total I/O on this one if I go just\nto three decimal places is gonna be 0.006,\n\n1384\n01:09:36,815 --> 01:09:37,595\nall right.\n\n1385\n01:09:37,595 --> 01:09:43,341\nSo, I'm looking at 0.0014 versus 0.006,\n\n1386\n01:09:43,341 --> 01:09:49,220\nthat's almost twice as fast,\nright, or half the I/O.\n\n1387\n01:09:49,220 --> 01:09:51,220\nHalf the I/O would be 0.007.\n\n1388\n01:09:51,220 --> 01:09:55,725\nThis is actually less than half the I/O\ngenerated by the unindexed query result,\n\n1389\n01:09:55,725 --> 01:09:56,780\nall right.\n\n1390\n01:09:56,780 --> 01:09:59,180\nIt's significantly smaller.\n\n1391\n01:09:59,180 --> 01:10:04,290\nBy putting this index in place,\nmy server can now do one of two things.\n\n1392\n01:10:04,290 --> 01:10:08,030\nEither one, it can perform the queries\ntwice as fast as it used to or\n\n1393\n01:10:08,030 --> 01:10:12,120\ntwo, it can handle twice\nthe load it used to.\n\n1394\n01:10:12,120 --> 01:10:17,480\nMaybe I could only support 500 users\nbefore, now I can support 1,000 Right?\n\n1395\n01:10:17,480 --> 01:10:20,790\nDouble that because I\ndecreased my disk I/O.\n\n1396\n01:10:20,790 --> 01:10:22,270\nThat's what indexes do.\n\n1397\n01:10:22,270 --> 01:10:23,880\nAnd was it hard to make that index?\n\n1398\n01:10:23,880 --> 01:10:25,510\nNo, the index was easy!\n\n1399\n01:10:25,510 --> 01:10:29,360\nSo you absolutely want to do this,\nyou want to create indexes.\n\n1400\n01:10:29,360 --> 01:10:34,800\nThe hard part is understanding what\nindexes to create, that's the challenge.\n\n1401\n01:10:34,800 --> 01:10:35,840\nIf you're a developer,\n\n1402\n01:10:35,840 --> 01:10:38,850\nif you're the one writing the queries,\nyou know what's being queried.\n\n1403\n01:10:38,850 --> 01:10:40,700\nYou know where you'd\nbenefit from an index.\n\n1404\n01:10:40,700 --> 01:10:44,170\nBut as a system admin,\nwe don't necessarily know that.\n\n1405\n01:10:44,170 --> 01:10:47,300\nSo we've got a few ways to go about\nfiguring out which indexes we\n\n1406\n01:10:47,300 --> 01:10:48,230\nwanna create.\n\n1407\n01:10:48,230 --> 01:10:51,780\nThere's manual ways, like what I just\ndid where I understand the query.\n\n1408\n01:10:51,780 --> 01:10:56,203\nBut there's also some automated way where\nwe can have the system recommend queries\n\n1409\n01:10:56,203 --> 01:10:58,303\nto us, I mean recommend indexes to us.\n\n1410\n01:10:58,303 --> 01:11:01,360\nSo we'll get a chance to get to see\nboth of those in the next segment.\n\n1411\n01:11:01,360 --> 01:11:04,890\nBut I've kinda rambled on long on this\none so I'll probably wrap up here.\n\n1412\n01:11:04,890 --> 01:11:08,770\nHopefully I've driven home the point\nthough of how important these indexes are.\n\n1413\n01:11:08,770 --> 01:11:09,780\nThey're very powerful.\n\n1414\n01:11:09,780 --> 01:11:12,540\nThey really do improve\nperformance on your system and\n\n1415\n01:11:12,540 --> 01:11:17,355\nthat makes them one of the most important\nparts of administering a SQL Server.\n\n1416\n01:11:17,355 --> 01:11:19,985\nAll right well,\nlet's wrap it up here for the break.\n\n1417\n01:11:19,985 --> 01:11:24,015\nStay tuned, cuz when we get back we're\ngonna see how we can create these indexes\n\n1418\n01:11:24,015 --> 01:11:27,145\noptimally for your environment and\nlearn about some of the different types of\n\n1419\n01:11:27,145 --> 01:11:29,705\nindexes, cuz there's three or four\ndifferent types we need to be aware of.\n\n1420\n01:11:29,705 --> 01:11:33,178\nSo, stay tuned, we'll be back after this.\n\n1421\n01:11:33,178 --> 01:11:40,595\n[MUSIC]\n\n1422\n01:11:40,595 --> 01:11:42,370\nAll right, welcome back everybody.\n\n1423\n01:11:42,370 --> 01:11:44,890\nSo, we got a chance to see how\n\n1424\n01:11:44,890 --> 01:11:48,170\ndrastically an index can affect\nthe performance of our database.\n\n1425\n01:11:48,170 --> 01:11:49,730\nWe saw that before the break.\n\n1426\n01:11:49,730 --> 01:11:53,580\nWhat we're gonna do now is we're gonna\ntake a look at the types of indexes and\n\n1427\n01:11:53,580 --> 01:11:55,700\nhow we create and manage them.\n\n1428\n01:11:55,700 --> 01:12:00,208\nThe first type of index I wanna talk\nabout is what's called a clustered index.\n\n1429\n01:12:00,208 --> 01:12:02,580\nA clustered index is\nkinda an interesting one.\n\n1430\n01:12:02,580 --> 01:12:06,439\nWhat it does is it basically\ntakes table data And\n\n1431\n01:12:06,439 --> 01:12:11,850\nit adds it to an index in the exact\nsame order that it is in the table.\n\n1432\n01:12:11,850 --> 01:12:14,810\nIt's not really much different\nthen the data in the table itself.\n\n1433\n01:12:14,810 --> 01:12:18,380\nNow, you might ask yourself if it's\nin the same order as that table,\n\n1434\n01:12:18,380 --> 01:12:20,710\nwhat's the point in even\nhaving it in the first place?\n\n1435\n01:12:20,710 --> 01:12:25,320\nSo, we were working with\nthe employees table before, right?\n\n1436\n01:12:25,320 --> 01:12:27,910\nSo let me just pull that\ntable up real quick.\n\n1437\n01:12:27,910 --> 01:12:33,360\nSo here's the employees table and\nif I look at something like the last name,\n\n1438\n01:12:33,360 --> 01:12:38,890\nwhere it's stored in here, the last name\nis not in a particular order, right?\n\n1439\n01:12:38,890 --> 01:12:41,660\nIt's the order the employees are hired in,\nthis employee ID over here, but\n\n1440\n01:12:41,660 --> 01:12:43,400\nthe last name is just a mess, right?\n\n1441\n01:12:43,400 --> 01:12:44,710\nIt's all over the place.\n\n1442\n01:12:44,710 --> 01:12:48,930\nWell, when you create a clustered index,\nthat data is taken in the exact\n\n1443\n01:12:48,930 --> 01:12:53,210\nsame order it is on the disk, and\nthat becomes the cluster index.\n\n1444\n01:12:53,210 --> 01:12:56,430\nNow, for something like last name\nit doesn't make a lot of sense.\n\n1445\n01:12:56,430 --> 01:13:00,810\nThe clustered index is typically done\non a column that is completely unique,\n\n1446\n01:13:00,810 --> 01:13:04,660\nin other words no two\nrows have the same value.\n\n1447\n01:13:04,660 --> 01:13:08,870\nWell, I might have two people with\nthe same last name of Smith or Johnson,\n\n1448\n01:13:08,870 --> 01:13:09,960\nsomething like that.\n\n1449\n01:13:09,960 --> 01:13:12,720\nSo, a clustered index is not\ngonna be possible there.\n\n1450\n01:13:13,770 --> 01:13:16,380\nWell, it is possible,\nit's just not gonna be useful.\n\n1451\n01:13:16,380 --> 01:13:22,160\nBut, if I create that clustered index on\nmy employee ID, that's a different story.\n\n1452\n01:13:22,160 --> 01:13:24,510\nNo two employees have the same ID.\n\n1453\n01:13:24,510 --> 01:13:27,190\nAnd because every time I hire an employee,\n\n1454\n01:13:27,190 --> 01:13:32,070\nI'm just adding on to this existing table,\nit's already in the order that I want it.\n\n1455\n01:13:32,070 --> 01:13:34,320\nIt's already ascending from the lowest\nnumber to the highest number.\n\n1456\n01:13:34,320 --> 01:13:35,510\nIt's already there.\n\n1457\n01:13:35,510 --> 01:13:39,580\nSo a clustered index on\nsomething like this is perfect.\n\n1458\n01:13:39,580 --> 01:13:43,117\nWhat a clustered index is doing\nis simply taking this data and\n\n1459\n01:13:43,117 --> 01:13:46,780\nensuring that it's always held in RAM,\nall right?\n\n1460\n01:13:46,780 --> 01:13:50,785\nIt's basically saying, I'm gonna take the\nemployee ID column and stick it in RAM.\n\n1461\n01:13:50,785 --> 01:13:56,993\nAnd when somebody does a query, somebody\nsays, I wanna find employee number seven.\n\n1462\n01:13:56,993 --> 01:14:02,431\nSo, they do something like use\n\n1463\n01:14:02,431 --> 01:14:08,287\nproducts, and then we'll say,\n\n1464\n01:14:08,287 --> 01:14:14,145\nselect star from employees where\n\n1465\n01:14:14,145 --> 01:14:21,960\nemployees ID is equal to five, all right?\n\n1466\n01:14:21,960 --> 01:14:24,510\nSo I'm just trying to find\nemployee number five.\n\n1467\n01:14:24,510 --> 01:14:30,160\nWell, the old way to do it without indexes\nwould be to do a table scan, scan across\n\n1468\n01:14:30,160 --> 01:14:34,400\nthe entire table looking for anybody\nwith an employee ID of number five.\n\n1469\n01:14:34,400 --> 01:14:38,201\nAnd even though I just want one record,\nit would scan the whole table, all right?\n\n1470\n01:14:39,420 --> 01:14:43,240\nBut with a clustered index,\nit's already got this in RAM.\n\n1471\n01:14:43,240 --> 01:14:46,910\nIt just goes to RAM and it says, let me\nlook at the employee ID and it goes and\n\n1472\n01:14:46,910 --> 01:14:49,000\nit immediately finds number five.\n\n1473\n01:14:49,000 --> 01:14:55,070\nIt finds number five and then associated\nwith that entry in the index is a pointer\n\n1474\n01:14:55,070 --> 01:15:00,160\nto the area on the disk that\nhas the rest of that record.\n\n1475\n01:15:00,160 --> 01:15:03,500\nAll this other stuff\nis stored on the disk.\n\n1476\n01:15:03,500 --> 01:15:05,130\nBut the rest of it's not stored in RAM.\n\n1477\n01:15:05,130 --> 01:15:08,740\nThe first name, last name, phone, email,\nthat's stored on the disk somewhere.\n\n1478\n01:15:08,740 --> 01:15:12,160\nWhen we do a table scan we read\nall of that off of the disk.\n\n1479\n01:15:12,160 --> 01:15:15,650\nBut when we look at the index, we go\ninto RAM, we find the number five for\n\n1480\n01:15:15,650 --> 01:15:18,400\nemployee ID and\nthen it points us to the exact\n\n1481\n01:15:18,400 --> 01:15:23,120\nspot on the disk that has this row data,\nthis page of information, all right?\n\n1482\n01:15:23,120 --> 01:15:24,760\nWe go, we get the data, and\n\n1483\n01:15:24,760 --> 01:15:29,840\nnow off we go, much more optimized than\ngoing and scanning the whole system.\n\n1484\n01:15:29,840 --> 01:15:35,250\nAll right, so a clustered index\nis simply this actual data stored\n\n1485\n01:15:35,250 --> 01:15:40,600\nin RAM alongside a pointer to the physical\ndisk where that data is stored.\n\n1486\n01:15:40,600 --> 01:15:43,005\nAll right?\nThat's how a clustered index works.\n\n1487\n01:15:43,005 --> 01:15:45,735\nBecause it's based on a unique column,\n\n1488\n01:15:45,735 --> 01:15:50,825\na clustered index is usually only useful\nin one particular place in a table, and\n\n1489\n01:15:50,825 --> 01:15:55,415\nas a result, you can only have\none clustered index per table.\n\n1490\n01:15:55,415 --> 01:15:58,865\nSo if I make a clustered index\non my employee ID column,\n\n1491\n01:15:58,865 --> 01:16:02,045\nI cannot make a clustered\nindex on any other column,\n\n1492\n01:16:02,045 --> 01:16:04,600\nbecause it's right here\non the employee ID.\n\n1493\n01:16:04,600 --> 01:16:05,220\nOkay?\n\n1494\n01:16:05,220 --> 01:16:07,130\nSo be aware of that.\n\n1495\n01:16:07,130 --> 01:16:09,120\nOne clustered index per table.\n\n1496\n01:16:10,120 --> 01:16:11,497\nWhat if I want more indexes?\n\n1497\n01:16:11,497 --> 01:16:13,800\nWhat if I wanna index some\nof these other columns?\n\n1498\n01:16:13,800 --> 01:16:17,938\nColumns that aren't unique, or\ncolumns that are unique but\n\n1499\n01:16:17,938 --> 01:16:21,760\nnot necessarily in the order\nthat I want them to be?\n\n1500\n01:16:21,760 --> 01:16:22,400\nRight?\n\n1501\n01:16:22,400 --> 01:16:26,283\nIn those scenarios,\nwe can use non-clustered indexes.\n\n1502\n01:16:26,283 --> 01:16:32,800\nA non-clustered index takes our data, and\nit compresses it and stores it in RAM.\n\n1503\n01:16:32,800 --> 01:16:34,480\nNow what do I mean by compress?\n\n1504\n01:16:34,480 --> 01:16:39,100\nWell, if I create a non-clustered index on\nlast name, in fact, we did that, right?\n\n1505\n01:16:39,100 --> 01:16:42,697\nIn the last segment, I created\na non-clustered index on last name,\n\n1506\n01:16:42,697 --> 01:16:43,330\nall right?\n\n1507\n01:16:43,330 --> 01:16:46,820\nIt reads that column and\nloads it into RAM.\n\n1508\n01:16:46,820 --> 01:16:50,050\nAnd then it puts it in\nthe order I asked it to be, so\n\n1509\n01:16:50,050 --> 01:16:52,020\nI told it to put it in there ascending.\n\n1510\n01:16:52,020 --> 01:16:53,490\nSo that's what it did.\n\n1511\n01:16:53,490 --> 01:16:54,530\nIt put it in there ascending.\n\n1512\n01:16:54,530 --> 01:17:01,230\nWell, if I do select\nlast name from employees.\n\n1513\n01:17:04,120 --> 01:17:09,451\nOrder by last name, ascending.\n\n1514\n01:17:09,451 --> 01:17:10,310\nAll right.\n\n1515\n01:17:10,310 --> 01:17:14,510\nSo, when I created that index,\nthis is basically what it would have made.\n\n1516\n01:17:14,510 --> 01:17:19,640\nIt would have taken that last name column,\nsorted into ascending order and\n\n1517\n01:17:19,640 --> 01:17:21,660\nthrown it into RAM, okay?\n\n1518\n01:17:21,660 --> 01:17:24,630\nBut if you look,\nthis is not a unique column, so\n\n1519\n01:17:24,630 --> 01:17:29,020\nI will likely have more than one person\nwith the same last name, here Francis.\n\n1520\n01:17:29,020 --> 01:17:32,700\nI've got two people with\nthe same last name of Francis.\n\n1521\n01:17:32,700 --> 01:17:37,230\nSo in this case, if I'm looking for\npeople with the last name of Francis,\n\n1522\n01:17:37,230 --> 01:17:39,210\nI know there's entry 22 and\n23 right here and\n\n1523\n01:17:39,210 --> 01:17:42,340\nit'll have pointers to go and\nget the data.\n\n1524\n01:17:42,340 --> 01:17:43,060\nAll right?\n\n1525\n01:17:43,060 --> 01:17:46,730\nNow, to make it even more optimal,\n\n1526\n01:17:46,730 --> 01:17:51,415\nthe non-clustered index will not\nmake two entries for Francis.\n\n1527\n01:17:51,415 --> 01:17:53,701\nIt'll make one entry for Francis.\n\n1528\n01:17:53,701 --> 01:17:58,196\nOne entry for Francis that says, if you're\nlooking for anybody whose last name is\n\n1529\n01:17:58,196 --> 01:18:02,576\nFrancis, you can find them in two\nlocations on the disks 22 and 23, right?\n\n1530\n01:18:02,576 --> 01:18:04,510\nSo it'll point to those two locations.\n\n1531\n01:18:04,510 --> 01:18:07,630\nOne entry can point to\nmore than one destination.\n\n1532\n01:18:07,630 --> 01:18:09,650\nThat doesn't happen\nwith a clustered index,\n\n1533\n01:18:09,650 --> 01:18:11,840\nbecause all of the data's gotta be unique,\nright?\n\n1534\n01:18:11,840 --> 01:18:14,650\nBut, with a non-clustered index,\nwe have duplicates, and\n\n1535\n01:18:14,650 --> 01:18:19,390\nthe duplicates get compressed, and\nthat means that the non-clustered\n\n1536\n01:18:19,390 --> 01:18:23,770\nindex is not the same\nas the underlying data.\n\n1537\n01:18:23,770 --> 01:18:27,580\nMy underlying data,\nI might have 200 entries, right?\n\n1538\n01:18:27,580 --> 01:18:31,290\nSo I've got 200 different last names,\nor 100 different last names.\n\n1539\n01:18:31,290 --> 01:18:34,570\nBut, when I load it into\na non-clustered index,\n\n1540\n01:18:34,570 --> 01:18:40,490\nall those duplicates that are there,\nhere's a few more like Whitaker, right?\n\n1541\n01:18:40,490 --> 01:18:43,810\nSo the duplicates that I've got like\nthis one, those get compressed and\n\n1542\n01:18:43,810 --> 01:18:47,650\nI end up with less rows in the index\nthan I actually have in the physical\n\n1543\n01:18:47,650 --> 01:18:49,500\ntable, right?\n\n1544\n01:18:49,500 --> 01:18:53,060\nNow if the non-clustered index is\nworking by itself, like mine was, right?\n\n1545\n01:18:53,060 --> 01:18:56,310\nI just created a non-clustered index\non this column and that was it.\n\n1546\n01:18:56,310 --> 01:19:00,690\nThen, you run a query against the table,\nit goes and\n\n1547\n01:19:00,690 --> 01:19:06,900\ndoes an index lookup first, and\nthen it does a heap lookup.\n\n1548\n01:19:06,900 --> 01:19:08,770\nThe heap,\nthat's the data on the disk, right?\n\n1549\n01:19:08,770 --> 01:19:12,076\nSo it goes and\nactually finds the row on the disk.\n\n1550\n01:19:12,076 --> 01:19:15,480\nWe saw that in that\nexecution plan earlier,\n\n1551\n01:19:15,480 --> 01:19:19,535\nwhich I've got my execution\nplans turned off here.\n\n1552\n01:19:23,368 --> 01:19:27,010\nHere, something special\nhappened right here.\n\n1553\n01:19:27,010 --> 01:19:29,770\nI'll talk about that in a minute.\n\n1554\n01:19:29,770 --> 01:19:32,340\nBut, we saw it in our\nexecution plan earlier,\n\n1555\n01:19:34,110 --> 01:19:38,390\nthat it did a [LAUGH]\nI'm going a little bit\n\n1556\n01:19:38,390 --> 01:19:39,650\ntoo big on this one.\n\n1557\n01:19:39,650 --> 01:19:41,110\nLet's filter this down.\n\n1558\n01:19:41,110 --> 01:19:45,911\nWhere LastName like S%.\n\n1559\n01:19:50,480 --> 01:19:51,240\nThere we go.\n\n1560\n01:19:51,240 --> 01:19:54,700\nWhere it did this RID Lookup heap.\n\n1561\n01:19:54,700 --> 01:19:57,240\nOkay, what does RID Lookup heap mean?\n\n1562\n01:19:57,240 --> 01:20:01,000\nWell, RID is row identifier, okay?\n\n1563\n01:20:01,000 --> 01:20:02,708\nWe had to go and find the row.\n\n1564\n01:20:02,708 --> 01:20:07,710\nThe non-clustered index, this guy up here,\ntold us where to go on the disk.\n\n1565\n01:20:07,710 --> 01:20:10,260\nThe rid lookup is where we go to the disk.\n\n1566\n01:20:10,260 --> 01:20:13,220\nAnd since we're going directly\nto the disk that's a heap.\n\n1567\n01:20:13,220 --> 01:20:15,200\nRight, the heap is just\nthe data on the disk.\n\n1568\n01:20:15,200 --> 01:20:17,050\nSo we got rid lookup heap,\nthat's what happened.\n\n1569\n01:20:18,240 --> 01:20:20,530\nAll right, but\nsometimes other stuff happens.\n\n1570\n01:20:20,530 --> 01:20:22,850\nThis is the most common\nscenario right here, but\n\n1571\n01:20:22,850 --> 01:20:25,410\nthere are a few other\nthings that might happen.\n\n1572\n01:20:25,410 --> 01:20:28,530\nFor example I actually just\ndid both of them a second ago,\n\n1573\n01:20:28,530 --> 01:20:32,150\nIf I do select star from employees, and\n\n1574\n01:20:32,150 --> 01:20:36,220\nI don't do this filter right here,\nwhere last name is like S%, right.\n\n1575\n01:20:36,220 --> 01:20:40,351\nRight, if I just say give me all the\ninformation from the employee's table and\n\n1576\n01:20:40,351 --> 01:20:43,870\norder it by the last name, well,\nthere's an index for last name.\n\n1577\n01:20:43,870 --> 01:20:44,610\nIt's there.\n\n1578\n01:20:44,610 --> 01:20:46,320\nRight.\nI can use it.\n\n1579\n01:20:46,320 --> 01:20:49,690\nBut because I'm selecting everything,\nbecause I'm asking for\n\n1580\n01:20:49,690 --> 01:20:52,990\nall the records It doesn't make sense.\n\n1581\n01:20:52,990 --> 01:20:54,220\nOop, I've got a typo in here somewhere.\n\n1582\n01:20:55,280 --> 01:20:59,892\nLet's see, SELECT * FROM Employees.\n\n1583\n01:20:59,892 --> 01:21:01,570\nOh, I didn't run the whole query.\n\n1584\n01:21:01,570 --> 01:21:02,470\nThere we go.\n\n1585\n01:21:02,470 --> 01:21:06,830\nSo, because I'm asking for so\nmuch information, it says, forget it.\n\n1586\n01:21:06,830 --> 01:21:09,860\nYou asked for so much information\nthe index is useless, I'll just go and\n\n1587\n01:21:09,860 --> 01:21:10,750\ndo a table scan.\n\n1588\n01:21:10,750 --> 01:21:12,340\nRight?\nAnd that's what it did here.\n\n1589\n01:21:12,340 --> 01:21:15,580\nEven though I've got the index\npresent it ignored it, and\n\n1590\n01:21:15,580 --> 01:21:17,250\njust went straight for the table scan.\n\n1591\n01:21:17,250 --> 01:21:22,110\nSEQL knows what you're asking and it knows\nwhether the index will be useful or not.\n\n1592\n01:21:23,930 --> 01:21:25,920\nNow I also did something\nslightly different.\n\n1593\n01:21:25,920 --> 01:21:32,760\nI said select last name,\nfrom employees, ordered by last name.\n\n1594\n01:21:32,760 --> 01:21:35,820\nAll right, now I'm just asking for\nthat last name column.\n\n1595\n01:21:35,820 --> 01:21:38,980\nAnd when I ran that, this is exactly what\nI ran on the screen a few moments ago,\n\n1596\n01:21:38,980 --> 01:21:40,710\nlook at its execution plan.\n\n1597\n01:21:40,710 --> 01:21:45,300\nIt does the index scan, and\nit doesn't do the rid lookup.\n\n1598\n01:21:45,300 --> 01:21:47,250\nIt doesn't access the heap.\n\n1599\n01:21:47,250 --> 01:21:48,410\nWhy is that?\n\n1600\n01:21:48,410 --> 01:21:51,170\nWell, all I asked for was the last name.\n\n1601\n01:21:51,170 --> 01:21:56,410\nThe last name was entirely\ncontained in the index.\n\n1602\n01:21:56,410 --> 01:22:01,420\nWhen that happens, all the information\nwe wanted was in the index.\n\n1603\n01:22:01,420 --> 01:22:03,000\nWe don't have to look anywhere else.\n\n1604\n01:22:03,000 --> 01:22:04,230\nOur data is right there.\n\n1605\n01:22:05,410 --> 01:22:08,380\nThat is what's called a covered query,\nright?\n\n1606\n01:22:08,380 --> 01:22:11,070\nThat's an official term, covered query.\n\n1607\n01:22:11,070 --> 01:22:13,980\nWhen an index is, or\nwhen a query is covered.\n\n1608\n01:22:13,980 --> 01:22:19,150\nIt means that there's an index that\nexists that has all the data that I need,\n\n1609\n01:22:19,150 --> 01:22:20,509\nwithout the need to go to disc.\n\n1610\n01:22:21,690 --> 01:22:24,511\nNow, if your eyes just lit up and\nsaid oh when I get back to the office I'm\n\n1611\n01:22:24,511 --> 01:22:27,120\ngonna create a bunch of covered indexes,\nalright, be careful.\n\n1612\n01:22:28,440 --> 01:22:32,540\nWhen you create an index that\ncovers more then one column, right,\n\n1613\n01:22:32,540 --> 01:22:34,690\nthat's what you have to\ndo to cover most queries.\n\n1614\n01:22:34,690 --> 01:22:39,030\nIf you create an index that covers\nmore than one column, every time\n\n1615\n01:22:39,030 --> 01:22:43,000\nany of those values are updated in the\ntable, the index is having to be updated.\n\n1616\n01:22:43,000 --> 01:22:47,150\nThat means the server has to work\nharder to keep that index up to date.\n\n1617\n01:22:47,150 --> 01:22:51,050\nAnd the index is being kept in ram,\nso it's consuming more memory.\n\n1618\n01:22:51,050 --> 01:22:55,720\nSo there's a cost to benefit ratio.\n\n1619\n01:22:55,720 --> 01:22:56,780\nYou kind of have to work out.\n\n1620\n01:22:56,780 --> 01:22:57,560\nRight?\n\n1621\n01:22:57,560 --> 01:23:00,440\nIs it worth the effort\nof maintaining the index\n\n1622\n01:23:00,440 --> 01:23:02,630\nto speed up that one particular query?\n\n1623\n01:23:02,630 --> 01:23:06,080\nIf that query is run hundreds or\nthousands of times per minute, yeah,\n\n1624\n01:23:06,080 --> 01:23:07,110\nit's probably worth it.\n\n1625\n01:23:07,110 --> 01:23:07,640\nRight?\n\n1626\n01:23:07,640 --> 01:23:11,360\nBut if that query is run once a week, no,\nyou just let it take a little bit longer.\n\n1627\n01:23:11,360 --> 01:23:15,550\nDon't bother covering the query because\nif the query is run once a week or\n\n1628\n01:23:15,550 --> 01:23:18,640\nonce a month, the index is being\nupdated every few minutes.\n\n1629\n01:23:18,640 --> 01:23:21,820\nEvery time there's an update to the table,\nthat index is being updated.\n\n1630\n01:23:21,820 --> 01:23:23,450\nSo you've got to think about that.\n\n1631\n01:23:23,450 --> 01:23:27,750\nIt has to be a really frequently\nused query to warrant that.\n\n1632\n01:23:27,750 --> 01:23:33,981\nSo if I do, for example,\nselect first name,\n\n1633\n01:23:33,981 --> 01:23:41,570\nlast name and actually I'll add employee\nID to this, right, which I think has an s.\n\n1634\n01:23:41,570 --> 01:23:46,550\nSo if I say give me the employee ID,\nfirst name and last name, from employees\n\n1635\n01:23:47,760 --> 01:23:52,268\nwhere last name is like S\n\n1636\n01:23:52,268 --> 01:23:57,240\npercent order by last name, okay?\n\n1637\n01:23:57,240 --> 01:24:00,477\nThis is a query that's written to take\nadvantage of the non-clustered index.\n\n1638\n01:24:00,477 --> 01:24:03,230\nThe non-clustered index is\non that last name column.\n\n1639\n01:24:03,230 --> 01:24:06,630\nWell, I'm doing a lookup with\na where clause on last name, and\n\n1640\n01:24:06,630 --> 01:24:07,920\nI'm ordering by last name.\n\n1641\n01:24:07,920 --> 01:24:10,960\nSo, that index is really ideal for this.\n\n1642\n01:24:10,960 --> 01:24:14,410\nBut I'm asking for data, employee ID, and\n\n1643\n01:24:14,410 --> 01:24:17,450\nfirst name that are not\na part of that index.\n\n1644\n01:24:17,450 --> 01:24:24,549\nSo when I execute this, let's see,\nsyntax error near comma.\n\n1645\n01:24:31,030 --> 01:24:32,390\nThere we go.\n\n1646\n01:24:32,390 --> 01:24:34,662\nSomething wrong with my comma there.\n\n1647\n01:24:34,662 --> 01:24:37,950\nSo now [LAUGH] when I run this I can\nsee that it gets me my employee ID,\n\n1648\n01:24:37,950 --> 01:24:41,840\nfirst name and last name just like I asked\nfor, and in my execution plan I can see it\n\n1649\n01:24:41,840 --> 01:24:46,810\nuses that index and it does my rid lookup,\nright this is built to use that index.\n\n1650\n01:24:46,810 --> 01:24:49,540\nBut, it still had to do the RID look up.\n\n1651\n01:24:49,540 --> 01:24:53,855\nI could make a non clustered index that\nwould cover each of those columns,\n\n1652\n01:24:53,855 --> 01:24:55,702\nalright, and\nthen this look up would happen.\n\n1653\n01:24:55,702 --> 01:24:58,150\nAll right.\nThis look up would happen without\n\n1654\n01:24:58,150 --> 01:25:00,470\nthe RID look up,\nwe would just go to the index and\n\n1655\n01:25:00,470 --> 01:25:04,840\nget every thing that we needed So\na multi-column index is possible.\n\n1656\n01:25:04,840 --> 01:25:09,270\nAnd you can do that with a clustered\nindex or with nonclustered indexes.\n\n1657\n01:25:09,270 --> 01:25:10,810\nThey can span more than one column.\n\n1658\n01:25:10,810 --> 01:25:14,660\nThey call them aggregate indexes when you\nhave more than one column tied to it.\n\n1659\n01:25:14,660 --> 01:25:18,270\nJust be careful when you do that because\nit is a lot of effort to maintain them.\n\n1660\n01:25:19,270 --> 01:25:19,980\nAll right.\n\n1661\n01:25:19,980 --> 01:25:26,000\nOne other scenario in my case, the non\nclustered index is all by itself so when\n\n1662\n01:25:26,000 --> 01:25:29,700\nI do a look up, I hit the non clustered\nindex and then I do a heap look up.\n\n1663\n01:25:29,700 --> 01:25:34,240\nThat doesn't always happen,\nif you have a clustered index, what will\n\n1664\n01:25:34,240 --> 01:25:38,370\nhappen a lot of times is you'll do the\nlook up against the non clustered index.\n\n1665\n01:25:38,370 --> 01:25:41,060\nAnd instead of having pointers\nright to the hard drive.\n\n1666\n01:25:41,060 --> 01:25:44,160\nIt'll have pointers to the cluster index.\n\n1667\n01:25:44,160 --> 01:25:46,050\nSo you hit the non clustered index.\n\n1668\n01:25:46,050 --> 01:25:49,780\nIt then sends you to the clustered index\ncause it's already got the data as it's\n\n1669\n01:25:49,780 --> 01:25:52,260\nassociated with the underlying hard drive.\n\n1670\n01:25:52,260 --> 01:25:54,470\nSo you hit that and then you do the heap.\n\n1671\n01:25:54,470 --> 01:25:57,030\nYou know you jump down\nto hit the actual data.\n\n1672\n01:25:57,030 --> 01:25:59,010\nAll right, that's where your results\ncome from the clustered index.\n\n1673\n01:25:59,010 --> 01:26:01,900\nSo that can change\nthe behavior of what we see.\n\n1674\n01:26:01,900 --> 01:26:07,410\nNow I had a clustered index on\nthe employee table, and I deleted it.\n\n1675\n01:26:07,410 --> 01:26:08,400\nRight.\nIn the last segment.\n\n1676\n01:26:08,400 --> 01:26:10,270\nLet me recreate that real quick.\n\n1677\n01:26:10,270 --> 01:26:11,680\nI'll go into my indexes here.\n\n1678\n01:26:11,680 --> 01:26:15,760\nI'm just going to right click and\ndo a new clustered index.\n\n1679\n01:26:17,280 --> 01:26:20,500\nAnd I will add in the employee ID column.\n\n1680\n01:26:20,500 --> 01:26:24,980\nAll right, that's my primary key anyway so\nI'm gonna choose that and added in here.\n\n1681\n01:26:24,980 --> 01:26:28,610\nNow notice the sort order\nis set to ascending.\n\n1682\n01:26:28,610 --> 01:26:31,950\nIt's not actually going to change\nthe sort order because it matches\n\n1683\n01:26:31,950 --> 01:26:33,390\nthe underlying data.\n\n1684\n01:26:33,390 --> 01:26:37,250\nSo it says that but\nit's not actually gonna take effect.\n\n1685\n01:26:37,250 --> 01:26:40,430\nWell, I guess my data is already\nascending so it doesn't really matter.\n\n1686\n01:26:40,430 --> 01:26:43,130\nSo I'll go ahead and\nchoose that and hit okay.\n\n1687\n01:26:43,130 --> 01:26:46,890\nAnd now I've got that clustered index\nright there that it just created.\n\n1688\n01:26:46,890 --> 01:26:48,750\nWhen I go and run this query again,\n\n1689\n01:26:48,750 --> 01:26:53,200\nI will probably see this\nchange to reference that.\n\n1690\n01:26:53,200 --> 01:26:54,220\nThere we go.\n\n1691\n01:26:54,220 --> 01:26:56,100\nSo, I see my,\nlet me zoom in on that a bit.\n\n1692\n01:26:59,755 --> 01:27:03,365\nI see my Index Seek on\nthe NonClusteredIndex.\n\n1693\n01:27:04,365 --> 01:27:08,275\nNormally the next thing I would see is\nthat RID Lookup, the heap scan, right.\n\n1694\n01:27:08,275 --> 01:27:11,460\nBut instead I see it hit\nthe NonClustered And\n\n1695\n01:27:11,460 --> 01:27:15,880\nthen it jumps over here to do a key\nlookup against the clustered index.\n\n1696\n01:27:15,880 --> 01:27:19,640\nBecause the clustered index is in the same\norder as the physical disk storage,\n\n1697\n01:27:19,640 --> 01:27:20,630\nit knows where to go and\n\n1698\n01:27:20,630 --> 01:27:23,775\nit grabs the data instead of having\nto scan through the disk itself.\n\n1699\n01:27:23,775 --> 01:27:26,850\nRight?\nSo you'll see little changes like that.\n\n1700\n01:27:26,850 --> 01:27:30,820\nThat will slightly improve your disk IO,\nbut not by much, right?\n\n1701\n01:27:30,820 --> 01:27:32,890\nCuz you still have to go to\nthe disk to get the data.\n\n1702\n01:27:32,890 --> 01:27:35,810\nSo it's just something that happens\nthat I wanted you to be aware of.\n\n1703\n01:27:36,810 --> 01:27:39,220\nNow, primary key indexes.\n\n1704\n01:27:39,220 --> 01:27:42,930\nWhen you make a table and\nyou flag a column as a primary key,\n\n1705\n01:27:42,930 --> 01:27:45,200\nit's pretty much a given that you'll\nwant a clustered index on that.\n\n1706\n01:27:45,200 --> 01:27:48,570\nAlmost everybody creates\nclustered indexes on primary keys.\n\n1707\n01:27:48,570 --> 01:27:50,560\nSo SQL does it for you.\n\n1708\n01:27:50,560 --> 01:27:54,550\nIf I make a new table, so I'm gonna\nwhip up a new table here, whoops.\n\n1709\n01:27:55,650 --> 01:28:00,958\nSo I'm gonna whip up a new table and I'll\njust make this some kind of test table.\n\n1710\n01:28:00,958 --> 01:28:07,220\nSo I'll have columns test 1, test 2,\ntest 3, right, nothing too special here.\n\n1711\n01:28:07,220 --> 01:28:11,113\nAnd I'm going to take this first column,\nand I will just right-click on that and\n\n1712\n01:28:11,113 --> 01:28:13,180\nchoose to set it as a primary key.\n\n1713\n01:28:13,180 --> 01:28:17,420\nSo this is going to be the column that\nidentifies each row as being unique.\n\n1714\n01:28:17,420 --> 01:28:18,100\nAll right.\n\n1715\n01:28:18,100 --> 01:28:19,150\nI'll go ahead and save that.\n\n1716\n01:28:19,150 --> 01:28:21,470\nI'll call this my test table.\n\n1717\n01:28:21,470 --> 01:28:23,020\nAll right.\n\n1718\n01:28:23,020 --> 01:28:24,930\nSo I just made that table.\n\n1719\n01:28:24,930 --> 01:28:29,420\nWhen I go over here on the left side and\nI refresh, there's my test table.\n\n1720\n01:28:29,420 --> 01:28:34,070\nAnd if I go into indexes,\nright there I see it created a primary\n\n1721\n01:28:34,070 --> 01:28:37,650\nkey on the test table and\nit's a clustered index.\n\n1722\n01:28:37,650 --> 01:28:40,500\nSo it's got a clustered\nindex already there.\n\n1723\n01:28:40,500 --> 01:28:42,940\nThey know that you're going to\nwant this so it's automatic.\n\n1724\n01:28:42,940 --> 01:28:43,640\nWhen you make the table and\n\n1725\n01:28:43,640 --> 01:28:46,780\nyou flag something as a primary\nkey it automatically creates it.\n\n1726\n01:28:46,780 --> 01:28:48,980\nYou don't have to keep it,\nyou can drop it if you want.\n\n1727\n01:28:48,980 --> 01:28:52,540\nIf you don't want that index you can\njust right-click it and delete it.\n\n1728\n01:28:52,540 --> 01:28:56,650\nMy delete option is not showing up here,\nbut let me refresh.\n\n1729\n01:28:59,850 --> 01:29:01,300\nWell, anyhow, it will let you delete them.\n\n1730\n01:29:01,300 --> 01:29:03,228\nI deleted that one a moment ago so\n\n1731\n01:29:03,228 --> 01:29:06,520\nI don't know why it's not\nletting me delete it there.\n\n1732\n01:29:06,520 --> 01:29:07,620\nMaybe, oh there we go.\n\n1733\n01:29:07,620 --> 01:29:10,600\nI had that query window open,\nso it was locking the index.\n\n1734\n01:29:10,600 --> 01:29:12,740\nI just closed that, so\nnow I can right-click and delete it.\n\n1735\n01:29:12,740 --> 01:29:15,260\nSo you can wipe that out if you decide\nthat you don't need that primary\n\n1736\n01:29:15,260 --> 01:29:17,000\nkey index, but it does create it for you.\n\n1737\n01:29:18,350 --> 01:29:20,950\nWhen it creates it, though,\nit's just covering one column.\n\n1738\n01:29:20,950 --> 01:29:24,160\nYou might want to extend it to\ncover more than one column.\n\n1739\n01:29:24,160 --> 01:29:28,580\nSo in the case of my query here, where\nI'm querying employee ID, first name,\n\n1740\n01:29:28,580 --> 01:29:34,060\nlast name, I can whip up a multi column\nindex that covered all three of those,\n\n1741\n01:29:34,060 --> 01:29:36,110\nemployee ID, first name, and last name.\n\n1742\n01:29:36,110 --> 01:29:39,570\nAnd then instead of having to do these\ntwo scans, it could just do one.\n\n1743\n01:29:39,570 --> 01:29:44,440\nLet me delete the primary\n\n1744\n01:29:44,440 --> 01:29:48,170\nkey index there real quick just so\nit doesn't get in the way.\n\n1745\n01:29:48,170 --> 01:29:52,140\nAnd we'll go back to\nthe previous way of saying this.\n\n1746\n01:29:52,140 --> 01:29:53,730\nSo let me re-execute that.\n\n1747\n01:29:53,730 --> 01:29:54,430\nThere we go.\n\n1748\n01:29:54,430 --> 01:29:57,810\nSo here I've got my non-clustered and\nthen my heap lookup right there, so\n\n1749\n01:29:57,810 --> 01:29:59,550\nthere's the two lookups\nthat are happening.\n\n1750\n01:29:59,550 --> 01:30:03,860\nI'm gonna create a new\nnon-clustered index that will cover\n\n1751\n01:30:03,860 --> 01:30:07,550\neach of the columns that I'm working with,\nemployee ID, first name, last name.\n\n1752\n01:30:07,550 --> 01:30:10,890\nI could modify the index we had but\nI'll create a new one.\n\n1753\n01:30:10,890 --> 01:30:14,430\nSo I'll do a non clustered index,\nand I'm gonna add in those columns.\n\n1754\n01:30:14,430 --> 01:30:17,710\nEmployee ID, first name, and last name.\n\n1755\n01:30:17,710 --> 01:30:20,000\nSo three columns in there.\n\n1756\n01:30:20,000 --> 01:30:23,810\nI know that those are the ones\nI'm gonna be querying against and\n\n1757\n01:30:23,810 --> 01:30:26,950\nI want those to be up in my main side.\n\n1758\n01:30:26,950 --> 01:30:30,770\nNotice I've got index key columns and\nincluded columns.\n\n1759\n01:30:30,770 --> 01:30:34,490\nThe index key columns are the ones\nthat I'm actually indexing on and\n\n1760\n01:30:34,490 --> 01:30:37,630\nI need to think about what I'm going\nto be sorting by when I do these.\n\n1761\n01:30:37,630 --> 01:30:41,480\nI'm not sorting by first name or\nemployee ID, I'm sorting by last name.\n\n1762\n01:30:41,480 --> 01:30:44,430\nSo first name and employee ID,\nI might not want to actually have\n\n1763\n01:30:44,430 --> 01:30:47,840\nthem as a key column,\nI might want to get those out of there.\n\n1764\n01:30:47,840 --> 01:30:51,073\nAnd instead,\nhave last name be the main column but\n\n1765\n01:30:51,073 --> 01:30:54,700\nunder included columns,\nadd in the other two.\n\n1766\n01:30:54,700 --> 01:30:57,310\nThis will make it where these guys,\nemployee ID and\n\n1767\n01:30:57,310 --> 01:31:01,860\nfirst name, are stored with the index but\nI'm not worrying about sorting by them.\n\n1768\n01:31:01,860 --> 01:31:04,490\nSee how I don't have\na sort option right here?\n\n1769\n01:31:04,490 --> 01:31:06,450\nI can't chose to sort them ascending or\ndescending?\n\n1770\n01:31:06,450 --> 01:31:10,750\nAnd that's because it's going to put them\nin the order of this key column here.\n\n1771\n01:31:10,750 --> 01:31:13,990\nIf I lumped them all in as key columns,\nthe sort order wouldn't take effect.\n\n1772\n01:31:13,990 --> 01:31:16,830\nKind of like with a clustered index where\nthe sort order doesn't take effect.\n\n1773\n01:31:17,940 --> 01:31:18,730\nAll right.\n\n1774\n01:31:18,730 --> 01:31:19,980\nI'll say okay to that.\n\n1775\n01:31:19,980 --> 01:31:22,750\nNow, I've got a nice big, fat index\n\n1776\n01:31:22,750 --> 01:31:26,190\nthat's gonna be having to get updated\nin the background and all that stuff.\n\n1777\n01:31:26,190 --> 01:31:29,170\nAnd if I rerun this query,\nI'll see something neat.\n\n1778\n01:31:29,170 --> 01:31:30,630\nInstead of having to go and\n\n1779\n01:31:30,630 --> 01:31:35,270\ndo that heap scan all the data I\nwanted was right there in that index.\n\n1780\n01:31:35,270 --> 01:31:37,460\nI never had to touch the hard drive,\nright.\n\n1781\n01:31:37,460 --> 01:31:39,270\nThis was entirely done in RAM,\n\n1782\n01:31:39,270 --> 01:31:42,510\nwhich means it's one of the fastest\nqueries you can execute.\n\n1783\n01:31:42,510 --> 01:31:46,050\nA covered query is one of\nthe fastest queries you can execute.\n\n1784\n01:31:46,050 --> 01:31:50,990\nYou need to look at your database and\nsay what is the number one query?\n\n1785\n01:31:50,990 --> 01:31:54,490\nWhat is the query that is run\nthe most frequently on my database?\n\n1786\n01:31:54,490 --> 01:31:57,220\nHow can I build indexes to fix that?\n\n1787\n01:31:57,220 --> 01:32:01,805\nSo that's a clustered index,\nand a nonclustered index.\n\n1788\n01:32:01,805 --> 01:32:05,225\nWe also have two other special\ntypes of indexes that you may or\n\n1789\n01:32:05,225 --> 01:32:06,345\nmay not see on the exam.\n\n1790\n01:32:06,345 --> 01:32:08,295\nSome of these are a little bit newer.\n\n1791\n01:32:08,295 --> 01:32:11,505\nYou might have noticed when I\nright-clicked on indexes and\n\n1792\n01:32:11,505 --> 01:32:14,545\nwent to new index,\nI had clustered and non clustered and\n\n1793\n01:32:14,545 --> 01:32:19,985\nI also had this guy down here,\nnon clustered column store index, right?\n\n1794\n01:32:19,985 --> 01:32:23,285\nWell, what the heck is a non\nclustered column store?\n\n1795\n01:32:23,285 --> 01:32:29,310\nWell when you create an index, sometimes\nthere's data that is of a large data type.\n\n1796\n01:32:29,310 --> 01:32:32,780\nI mentioned like N variable\ncharacter max and guys like that.\n\n1797\n01:32:32,780 --> 01:32:36,400\nAnd those guys get stored kind of\ntowards the end of the database.\n\n1798\n01:32:36,400 --> 01:32:38,470\nThey're stored in special ways.\n\n1799\n01:32:38,470 --> 01:32:42,250\nWell, when you create a non\nclustered index on one of those,\n\n1800\n01:32:42,250 --> 01:32:45,500\nyou don't wanna load the whole\nthing into RAM, it's too much data.\n\n1801\n01:32:45,500 --> 01:32:48,820\nAnd so the column store indexes\nare designed to kind of help with and\n\n1802\n01:32:48,820 --> 01:32:50,510\nfacilitate it.\n\n1803\n01:32:50,510 --> 01:32:54,240\nColumn store indexes are designed\nto deal with large data sets.\n\n1804\n01:32:54,240 --> 01:32:57,360\nData sets that are beyond what\nwe normally want to manage.\n\n1805\n01:32:57,360 --> 01:33:00,000\nSo they're really designed for\nbusiness intelligence.\n\n1806\n01:33:00,000 --> 01:33:02,160\nPlaces that have huge amounts of data.\n\n1807\n01:33:02,160 --> 01:33:05,035\nThey are kind of a hybrid\nbetween clustered and\n\n1808\n01:33:05,035 --> 01:33:09,670\nnon-clustered indexes because what they're\ndoing is they're loading descriptors for\n\n1809\n01:33:09,670 --> 01:33:14,050\nthe data into RAM, but not the actual data\nbecause it'd run your server out of RAM.\n\n1810\n01:33:14,050 --> 01:33:15,000\nAll right.\n\n1811\n01:33:15,000 --> 01:33:17,690\nDon't make that sound, or\nthink that it's efficient.\n\n1812\n01:33:17,690 --> 01:33:19,930\nI'm not gonna put in one here because\nI don't have a large enough data set.\n\n1813\n01:33:19,930 --> 01:33:22,100\nBut even if I did,\nI definitely don't have enough RAM for it.\n\n1814\n01:33:22,100 --> 01:33:24,320\nI think I've only got 8\ngigs of RAM in that system.\n\n1815\n01:33:24,320 --> 01:33:28,970\nThese are designed for those systems\nthat have 64, 128 gigs of RAM,\n\n1816\n01:33:28,970 --> 01:33:33,200\nlarge quantities of memory to be\nable to store these large indexes.\n\n1817\n01:33:33,200 --> 01:33:37,170\nSo if you're one of those people\nthat's doing like DNA sequencing,\n\n1818\n01:33:37,170 --> 01:33:39,800\nplotting the human genome,\nyou get this huge dataset.\n\n1819\n01:33:39,800 --> 01:33:42,390\nThat's what these column\nstores are designed for.\n\n1820\n01:33:42,390 --> 01:33:45,910\nThe columns are not\nactually stored in RAM.\n\n1821\n01:33:45,910 --> 01:33:48,630\nThey're stored in a special\nindex that's created.\n\n1822\n01:33:48,630 --> 01:33:50,670\nWhen you create those,\nthere's really a two-step process.\n\n1823\n01:33:50,670 --> 01:33:53,700\nYou create a catalog, and\nthen you create the index.\n\n1824\n01:33:53,700 --> 01:33:56,950\nAnd the catalog is stored entirely in RAM,\nthose are those pointers.\n\n1825\n01:33:56,950 --> 01:33:59,190\nAnd then the rest of it is\nstored in the true index,\n\n1826\n01:33:59,190 --> 01:34:00,950\nwhich is actually stored in the database.\n\n1827\n01:34:00,950 --> 01:34:03,335\nSo, little bit different,\nlittle bit special.\n\n1828\n01:34:03,335 --> 01:34:07,900\nThat is a new feature in SQL Server 2012,\nso you may see that on the exam.\n\n1829\n01:34:07,900 --> 01:34:10,540\nUsually just mentioned in\nterms of what it does.\n\n1830\n01:34:10,540 --> 01:34:12,190\nThey don't really have you configure it.\n\n1831\n01:34:14,440 --> 01:34:16,260\nAll right.\nThe other type of index we don't\n\n1832\n01:34:16,260 --> 01:34:17,170\nsee on here.\n\n1833\n01:34:17,170 --> 01:34:18,850\nYou see things like these XML ones.\n\n1834\n01:34:18,850 --> 01:34:19,920\nThese are special ones.\n\n1835\n01:34:19,920 --> 01:34:22,250\nPrimary and secondary XML indexes.\n\n1836\n01:34:22,250 --> 01:34:25,920\nWe talk about those in the 74, 63 exam.\n\n1837\n01:34:25,920 --> 01:34:29,680\nBut the other one is not here\nin the index screen at all.\n\n1838\n01:34:29,680 --> 01:34:33,740\nThere's another one that's\ncalled a full text index.\n\n1839\n01:34:33,740 --> 01:34:36,790\nRemember I mentioned end text and\nend variable character max,\n\n1840\n01:34:36,790 --> 01:34:39,275\nthose fields that can\nstore huge amount of data.\n\n1841\n01:34:39,275 --> 01:34:41,900\nWell, what if I wanna index that.\n\n1842\n01:34:41,900 --> 01:34:44,910\nWhat if I have the entire text of\nMoby Dick stored in a cell and\n\n1843\n01:34:44,910 --> 01:34:49,120\nI wanna be able to search for\nevery time the work Ishmael is mentioned.\n\n1844\n01:34:49,120 --> 01:34:51,210\nSo I can do that query.\n\n1845\n01:34:51,210 --> 01:34:55,310\nIf I have a full text\nindex of that information.\n\n1846\n01:34:55,310 --> 01:34:59,110\nWell, not a lot of people need that,\nand it's very resource hungry, so\n\n1847\n01:34:59,110 --> 01:35:04,430\nthe feature is not installed by default,\nand so it's not usable by default.\n\n1848\n01:35:04,430 --> 01:35:08,440\nIf you go to a table,\nlike if I take my employees table here.\n\n1849\n01:35:08,440 --> 01:35:08,940\nWhere'd it go?\n\n1850\n01:35:10,370 --> 01:35:11,360\nEmployees.\n\n1851\n01:35:11,360 --> 01:35:15,230\nIf you right click on it,\nyou'll see the full text index option.\n\n1852\n01:35:15,230 --> 01:35:16,740\nSee how mine is grayed out?\n\n1853\n01:35:16,740 --> 01:35:19,010\nYou kind of expect to see that\nbecause it's not installed.\n\n1854\n01:35:20,040 --> 01:35:23,350\nIf we wanna do full text indexing,\nwe need to install it on our system.\n\n1855\n01:35:23,350 --> 01:35:24,600\nIt's just a feature.\n\n1856\n01:35:24,600 --> 01:35:27,260\nIf you go back to your\nSQL install disc and\n\n1857\n01:35:27,260 --> 01:35:31,990\nfire that up, we can add it in and\nit'll start to index that stuff.\n\n1858\n01:35:31,990 --> 01:35:33,660\nNow it's very resource hungry,\n\n1859\n01:35:33,660 --> 01:35:37,180\nit's having to read through all of\nthat data and create indexes based on\n\n1860\n01:35:37,180 --> 01:35:41,160\nhuge amounts of text that are far\nbeyond what we would normally index.\n\n1861\n01:35:41,160 --> 01:35:44,850\nThat's why it's disabled by default, but\nif you have a need for it, you go into\n\n1862\n01:35:44,850 --> 01:35:49,590\nyour installation, you do the add features\nto an existing installation option.\n\n1863\n01:35:51,770 --> 01:35:53,460\nAnd we go to add it in.\n\n1864\n01:35:53,460 --> 01:35:57,290\nNow the full text index,\nyou can add it globally or\n\n1865\n01:35:57,290 --> 01:35:59,270\nadd it to an instance specifically.\n\n1866\n01:35:59,270 --> 01:36:01,750\nNormally we add it to\nspecifically to an instance.\n\n1867\n01:36:01,750 --> 01:36:04,770\nSo when I go through here, I'll need\nto make sure that I choose that option,\n\n1868\n01:36:04,770 --> 01:36:07,590\nthat I'm adding features\nto an existing instance.\n\n1869\n01:36:07,590 --> 01:36:09,110\nAnd I'll just say OK on this screen.\n\n1870\n01:36:09,110 --> 01:36:15,560\nThese are the prereq screens that we just\nkinda page through and kinda move through.\n\n1871\n01:36:15,560 --> 01:36:19,040\nLet me get beyond these, and\nthen we'll get that added in.\n\n1872\n01:36:19,040 --> 01:36:22,435\nOnce it's installed, we'll be able\nto right click on that table and\n\n1873\n01:36:22,435 --> 01:36:26,165\nwe'll see the full text index option\nthere, and you just go to create one.\n\n1874\n01:36:26,165 --> 01:36:28,055\nIt will ask what column\nyou want to index and\n\n1875\n01:36:28,055 --> 01:36:31,105\nyou'll pick the column that\nhas that large data type.\n\n1876\n01:36:31,105 --> 01:36:35,175\nThere's no point in indexing\nsomething with an integer column or\n\n1877\n01:36:35,175 --> 01:36:38,445\na regular N character or\nsomething like that.\n\n1878\n01:36:38,445 --> 01:36:41,185\nIt really needs to be N text or\n\n1879\n01:36:41,185 --> 01:36:46,180\nN variable character max, maybe one of the\nbinary types, but for the most part it's\n\n1880\n01:36:46,180 --> 01:36:51,230\ngonna be end variable character max and\nend text, those are the two big ones.\n\n1881\n01:36:51,230 --> 01:36:54,580\nSo those, you turn it on,\nit starts to index that,\n\n1882\n01:36:54,580 --> 01:36:59,190\nit stores the index in a special location,\nagain with pointers stored in RAM, but\n\n1883\n01:36:59,190 --> 01:37:01,450\nthe actual index stored on the hard drive.\n\n1884\n01:37:02,740 --> 01:37:04,840\nI'm gonna add features to\nmy default instance here.\n\n1885\n01:37:04,840 --> 01:37:09,300\nAnd on the feature selection page is\nwhere i'll be able to add the full text\n\n1886\n01:37:09,300 --> 01:37:10,150\nindexing.\n\n1887\n01:37:10,150 --> 01:37:11,450\nAnd it's right here.\n\n1888\n01:37:11,450 --> 01:37:15,280\nFull text and semantic extractions for\nsearch, all right.\n\n1889\n01:37:15,280 --> 01:37:17,340\nIt doesn't say the word index, but\nthat's what it's talking about.\n\n1890\n01:37:17,340 --> 01:37:19,079\nThose are the full text indexes.\n\n1891\n01:37:20,880 --> 01:37:23,500\nThen we just click next a bunch,\nthere's no options to configure for it.\n\n1892\n01:37:23,500 --> 01:37:26,690\nEverything else here is\nthe same as a normal install so\n\n1893\n01:37:26,690 --> 01:37:30,480\nI'm really just going to click next on all\nthese remaining options to get it done.\n\n1894\n01:37:30,480 --> 01:37:31,560\nThen I'll have that feature.\n\n1895\n01:37:32,580 --> 01:37:36,690\nI'll probably have to restart my\nSQL Management Studio before it\n\n1896\n01:37:36,690 --> 01:37:38,150\nrecognizes that it's there.\n\n1897\n01:37:38,150 --> 01:37:41,270\nThere is a service that drives this so\nthe service has to start, but\n\n1898\n01:37:41,270 --> 01:37:42,860\nit will start automatically.\n\n1899\n01:37:42,860 --> 01:37:46,830\nI'll actually see a screen a little bit\nlater where it will ask me if I want to\n\n1900\n01:37:46,830 --> 01:37:48,200\nchange the user account.\n\n1901\n01:37:48,200 --> 01:37:51,010\nYeah, right here.\nThe SQL server full text filter\n\n1902\n01:37:51,010 --> 01:37:51,760\ndemon launcher.\n\n1903\n01:37:51,760 --> 01:37:55,910\nAnd it's got the user account it's\ngonna make and the start up type there.\n\n1904\n01:37:55,910 --> 01:37:57,650\nI'm not gonna mess with that.\n\n1905\n01:37:57,650 --> 01:37:58,600\nAnd we'll just let it finish.\n\n1906\n01:38:00,480 --> 01:38:02,830\nBut when that's done we'll\nbe able to create the index,\n\n1907\n01:38:02,830 --> 01:38:04,920\nand there's not really\nmuch excitement there.\n\n1908\n01:38:04,920 --> 01:38:08,090\nWhen you create that index,\nit's the same as the other ones.\n\n1909\n01:38:08,090 --> 01:38:12,010\nYou just right-click on the table you\nwant, you go to full text index, and\n\n1910\n01:38:12,010 --> 01:38:14,920\nthere'll be an option right here\nthat'll say new full text index.\n\n1911\n01:38:14,920 --> 01:38:16,520\nIt'll ask you what column you want and\n\n1912\n01:38:16,520 --> 01:38:17,830\nthen it'll create the index and\noff you go.\n\n1913\n01:38:19,610 --> 01:38:23,620\nAll right, so those are the four types\nof indexes that we'll see on the exam.\n\n1914\n01:38:23,620 --> 01:38:28,740\nClustered indexes, non-clustered indexes,\nfull text indexes and\n\n1915\n01:38:28,740 --> 01:38:30,360\ncolumn store indexes.\n\n1916\n01:38:30,360 --> 01:38:32,200\nThose four are the ones you'll see.\n\n1917\n01:38:32,200 --> 01:38:35,750\nNow clustered and non clustered, those are\nthe ones you're gonna work with every day.\n\n1918\n01:38:35,750 --> 01:38:39,200\nColumn store and full text,\nyou may never use those, right?\n\n1919\n01:38:39,200 --> 01:38:43,930\nBut clustered and non-clustered, you\nwill use those all the time, all right?\n\n1920\n01:38:43,930 --> 01:38:48,250\nNow if you watched our episode on\none of the earlier planning for\n\n1921\n01:38:48,250 --> 01:38:50,950\nstorage episodes where we\ntalk about partition tables,\n\n1922\n01:38:50,950 --> 01:38:54,580\nyou might not have seen it, but\nI did a little segment after the credits.\n\n1923\n01:38:54,580 --> 01:38:58,110\nWhen I created a partition table in there,\nit gave me an error and\n\n1924\n01:38:58,110 --> 01:38:59,290\nit said it didn't want to create it.\n\n1925\n01:38:59,290 --> 01:39:01,460\nAnd I mentioned at the time that\nthere was a reason for that.\n\n1926\n01:39:01,460 --> 01:39:03,340\nI just didn't want to get\ninto it at that time.\n\n1927\n01:39:03,340 --> 01:39:05,880\nThe reason was indexes.\n\n1928\n01:39:05,880 --> 01:39:09,730\nThe partition table needs\nan index to do two things.\n\n1929\n01:39:09,730 --> 01:39:14,420\nOne, to guarantee uniqueness on\nthe column and two, to do quick\n\n1930\n01:39:14,420 --> 01:39:19,900\nlookups to know what file store to go to\nto get the data in that partition table.\n\n1931\n01:39:19,900 --> 01:39:21,850\nSo, you've gotta have indexes in place and\n\n1932\n01:39:21,850 --> 01:39:25,770\nsince we hadn't covered indexes yet, in\nthat show I didn't want to cover it then.\n\n1933\n01:39:25,770 --> 01:39:28,800\nWell the credits rolled, and\nafter the credits I came back and\n\n1934\n01:39:28,800 --> 01:39:30,220\nI said, all right guys.\n\n1935\n01:39:30,220 --> 01:39:31,550\nLet's talk about indexes.\n\n1936\n01:39:31,550 --> 01:39:34,840\nIf you haven't done it, come watch this\nshow, this show I'm filming right now and\n\n1937\n01:39:34,840 --> 01:39:36,980\nlearn about indexes, and\nthen come back and watch this bit.\n\n1938\n01:39:36,980 --> 01:39:39,710\nSo if you haven't watched\nthat now you can, right.\n\n1939\n01:39:39,710 --> 01:39:40,800\nJump back and catch that show,\n\n1940\n01:39:40,800 --> 01:39:44,920\nyou'll see the bit there at the end\nwhere I go into the indexes and actually\n\n1941\n01:39:44,920 --> 01:39:48,160\ncreate the true partition table at that\npoint once the indexes are in place.\n\n1942\n01:39:49,510 --> 01:39:51,970\nAlright, now I'm supposed\nto be done right now, but\n\n1943\n01:39:51,970 --> 01:39:54,510\nI actually have a few more\nthings I wanna talk about.\n\n1944\n01:39:54,510 --> 01:39:58,590\nI wanna show you guys\nhow to create indexes,\n\n1945\n01:39:58,590 --> 01:40:01,110\nif you don't really understand\nthe queries that are in place.\n\n1946\n01:40:01,110 --> 01:40:04,210\nAnd how to make sure your indexes\nare actually being used so\n\n1947\n01:40:04,210 --> 01:40:04,880\nyou can get rid of them.\n\n1948\n01:40:04,880 --> 01:40:09,240\nIt's the maintenance that we need to do\nto keep our indexes healthy and clean.\n\n1949\n01:40:09,240 --> 01:40:11,800\nSo I wanna cover that,\nso let's go crazy here.\n\n1950\n01:40:11,800 --> 01:40:15,050\nWe'll do an extra fifth\nsegment on this show and\n\n1951\n01:40:15,050 --> 01:40:17,560\njump into those last little nuts and\nbolts that I've got to cover.\n\n1952\n01:40:17,560 --> 01:40:19,880\nSo stay tuned, we'll be back after this.\n\n1953\n01:40:19,880 --> 01:40:26,780\n[MUSIC]\n\n1954\n01:40:26,780 --> 01:40:28,460\nAll right, welcome back everybody.\n\n1955\n01:40:28,460 --> 01:40:32,480\nDuring the break, you finished the install\nof the full text index search.\n\n1956\n01:40:32,480 --> 01:40:33,900\nIt starts the service automatically,\n\n1957\n01:40:33,900 --> 01:40:36,780\nso now we just go and create our\nfull text index wherever we want.\n\n1958\n01:40:36,780 --> 01:40:38,280\nIt's really straightforward.\n\n1959\n01:40:38,280 --> 01:40:41,400\nWe pick a table,\nlike I'll take my products table here.\n\n1960\n01:40:41,400 --> 01:40:44,890\nAnd I'll just right click on it and\ngo to full text index.\n\n1961\n01:40:44,890 --> 01:40:46,370\nDefine full text index.\n\n1962\n01:40:46,370 --> 01:40:50,800\nNow, you can only create a full text\nindex on a table that at least has\n\n1963\n01:40:50,800 --> 01:40:52,400\none primary key to find.\n\n1964\n01:40:52,400 --> 01:40:53,860\nI say one, you can only have one.\n\n1965\n01:40:53,860 --> 01:40:56,480\nSo, it's gotta have a key to find first.\n\n1966\n01:40:56,480 --> 01:40:59,740\nEven if that's not the column\nyou're doing the text index on and\n\n1967\n01:40:59,740 --> 01:41:02,940\nthat's because it's going to need it for\ndoing the cluster look ups.\n\n1968\n01:41:02,940 --> 01:41:07,820\nSo it's got my unique index right there\nwhich is my primary key on product, and\n\n1969\n01:41:07,820 --> 01:41:10,910\nthen I just pick where I'm gonna\nhave this large data type storage.\n\n1970\n01:41:10,910 --> 01:41:14,980\nSo maybe my notes column here, I have\nhuge amounts of data stored in there so\n\n1971\n01:41:14,980 --> 01:41:19,090\nI choose that one, and that's where\nI'm gonna build my full text index.\n\n1972\n01:41:19,090 --> 01:41:20,850\nAfter that, that's pretty much it.\n\n1973\n01:41:20,850 --> 01:41:23,740\nTrack changes on this\ntable view as they occur.\n\n1974\n01:41:23,740 --> 01:41:26,020\nSo how often do we wanna update the index?\n\n1975\n01:41:26,020 --> 01:41:28,610\nDo we want to manually update this index?\n\n1976\n01:41:28,610 --> 01:41:31,100\nAutomatically update the index,\nor never update it?\n\n1977\n01:41:31,100 --> 01:41:33,100\nThis is it.\nIt's done, and it's not gonna change.\n\n1978\n01:41:33,100 --> 01:41:35,670\nIf you have static data you\ncan choose that one and\n\n1979\n01:41:35,670 --> 01:41:38,310\nthe index becomes fairly\nlow maintenance to keep.\n\n1980\n01:41:38,310 --> 01:41:40,610\nBut otherwise you'll want\nto either do automatic or\n\n1981\n01:41:40,610 --> 01:41:43,250\nmanual based on your performance load,\nall right.\n\n1982\n01:41:43,250 --> 01:41:44,390\nI'll choose automatic here.\n\n1983\n01:41:45,630 --> 01:41:47,550\nThen it's just gonna ask\nme to name the catalogue,\n\n1984\n01:41:47,550 --> 01:41:51,130\nit's got to create a catalogue first\nthat will then contain all the pointers.\n\n1985\n01:41:51,130 --> 01:41:55,270\nSo I'll call this my\nproducts notes catalogue.\n\n1986\n01:41:55,270 --> 01:41:58,840\nI won't make it the default, here.\n\n1987\n01:41:58,840 --> 01:42:01,640\nAnd we will, let's see,\nI'm not gonna pick a file group either.\n\n1988\n01:42:01,640 --> 01:42:02,710\nSo we'll just leave it be right there.\n\n1989\n01:42:02,710 --> 01:42:08,600\nSo I've got my catalog defined and\nany population schedules.\n\n1990\n01:42:08,600 --> 01:42:11,190\nHow often do I want to update this?\n\n1991\n01:42:11,190 --> 01:42:12,670\nI've got it set to automatic, so\n\n1992\n01:42:12,670 --> 01:42:15,550\nit'll run automatically on a schedule that\nI set, I just need to pick how often.\n\n1993\n01:42:15,550 --> 01:42:17,930\nYou have to think about\nhow busy your server is.\n\n1994\n01:42:17,930 --> 01:42:22,750\nThis is a full text index, it could be\na lot of CPU power to do the index.\n\n1995\n01:42:22,750 --> 01:42:27,380\nSo I can come in and create one,\nI'll say, how about every six hours?\n\n1996\n01:42:28,560 --> 01:42:34,740\nSo every six hours I want it to do\nan update, so I'll set this to recurring.\n\n1997\n01:42:34,740 --> 01:42:40,854\nI want it to occur every six\nhours starting at 12 AM.\n\n1998\n01:42:40,854 --> 01:42:46,329\nRunning through 11:59:59 PM,\n\n1999\n01:42:46,329 --> 01:42:50,360\nall right, with no end date.\n\n2000\n01:42:50,360 --> 01:42:53,540\nSo now every six hours,\nit's gonna go and update that.\n\n2001\n01:42:53,540 --> 01:42:56,585\nNow notice it says table- incremental.\n\n2002\n01:42:56,585 --> 01:42:58,565\nIt doesn't re-index everything.\n\n2003\n01:42:58,565 --> 01:43:00,635\nIt doesn't rebuild the whole\nindex from scratch.\n\n2004\n01:43:00,635 --> 01:43:01,645\nIt just gets the updates.\n\n2005\n01:43:01,645 --> 01:43:04,375\nSo it's really not that bad\nunless you have a ton of data.\n\n2006\n01:43:04,375 --> 01:43:06,945\nIf you're Project Gutenberg and\nyou're loading in tons of books or\n\n2007\n01:43:06,945 --> 01:43:09,505\nsomething like that,\nit could be pretty bad.\n\n2008\n01:43:09,505 --> 01:43:11,035\nAll right, so that's it.\n\n2009\n01:43:11,035 --> 01:43:12,305\nNow I've got a full text index.\n\n2010\n01:43:12,305 --> 01:43:15,399\nSo not too much different\nthan creating a normal index.\n\n2011\n01:43:17,330 --> 01:43:19,500\nAll right,\nnow we've seen the power of indexes.\n\n2012\n01:43:19,500 --> 01:43:21,320\nWe know how they can help our queries.\n\n2013\n01:43:21,320 --> 01:43:25,490\nAnd if you understand the queries\nthat your users are gonna be running,\n\n2014\n01:43:25,490 --> 01:43:28,240\nyou can build queries to match that.\n\n2015\n01:43:28,240 --> 01:43:31,075\nWell, what if you're not somebody\nwho understands queries, right.\n\n2016\n01:43:31,075 --> 01:43:34,525\nWhat if you're not a developer in anyway,\ndon't even know how to write a SQL query,\n\n2017\n01:43:34,525 --> 01:43:38,635\nbut you're still being tasked with\nmaking the server run better.\n\n2018\n01:43:38,635 --> 01:43:40,685\nMicrosoft has a really neat utility.\n\n2019\n01:43:40,685 --> 01:43:44,365\nA utility called the database\nengine tuning advisor.\n\n2020\n01:43:44,365 --> 01:43:46,685\nIt's right up here under my tools menu.\n\n2021\n01:43:46,685 --> 01:43:48,950\nDatabase engine tuning advisor.\n\n2022\n01:43:48,950 --> 01:43:56,090\nAnd what it does, is it tries to figure\nout the best indexes for you, right.\n\n2023\n01:43:56,090 --> 01:43:59,370\nSo, for example, let me take the indexes\nthat I made on the employee table.\n\n2024\n01:43:59,370 --> 01:44:01,376\nI'm just gonna delete these.\n\n2025\n01:44:01,376 --> 01:44:04,490\nI'm just gonna get rid of all\nthe indexes that i've got.\n\n2026\n01:44:04,490 --> 01:44:07,624\nAnd basically it walks you\nthrough a little wizard And\n\n2027\n01:44:07,624 --> 01:44:11,661\nyou can feed it the queries that run\nmost commonly on your system, and\n\n2028\n01:44:11,661 --> 01:44:14,670\nthen it will recommend indexes to create,\nright.\n\n2029\n01:44:14,670 --> 01:44:18,630\nNow, we have to be able to give it\nthe queries that run on our system.\n\n2030\n01:44:18,630 --> 01:44:19,492\nIf you know them,\n\n2031\n01:44:19,492 --> 01:44:22,700\nyou can put them together into\na script file like I've done.\n\n2032\n01:44:22,700 --> 01:44:27,680\nSo I made this workload.sql, and I put\nmy two most common queries right here.\n\n2033\n01:44:27,680 --> 01:44:30,080\nThese are the two queries\nmy company runs the most.\n\n2034\n01:44:30,080 --> 01:44:34,360\nI can feed that into the database engine\ntuning adviser, and it'll recommend\n\n2035\n01:44:34,360 --> 01:44:37,692\nthe indexes to make, and it'll actually\nmake them for you if you let it, right.\n\n2036\n01:44:37,692 --> 01:44:39,980\nWhat if I don't even know that?\n\n2037\n01:44:39,980 --> 01:44:42,260\nWhat if I'm completely\nnew to this company, and\n\n2038\n01:44:42,260 --> 01:44:44,620\nI have no idea what queries run normally.\n\n2039\n01:44:44,620 --> 01:44:48,410\nWell, there's another utility\ncalled the SQL Server Profiler.\n\n2040\n01:44:48,410 --> 01:44:50,200\nIt's up under that Tools menu also.\n\n2041\n01:44:50,200 --> 01:44:52,040\nSQL Server Profiler, and\n\n2042\n01:44:52,040 --> 01:44:55,610\nit lets you monitor the background\nstuff on your server.\n\n2043\n01:44:55,610 --> 01:44:57,870\nYou get to see the queries\nthat are running.\n\n2044\n01:44:57,870 --> 01:45:01,680\nIf I just fire it up here,\nI'll fire up the Profiler, and\n\n2045\n01:45:01,680 --> 01:45:02,770\nI'll connect to my server.\n\n2046\n01:45:05,886 --> 01:45:08,940\nAll right, it's gonna offer to start up a,\n\n2047\n01:45:08,940 --> 01:45:13,610\nthey used to call this a SQL trace, and so\nsee how it's got trace properties here, so\n\n2048\n01:45:13,610 --> 01:45:17,470\nthe SQL profilers will replace\nthe old SQL trace utility.\n\n2049\n01:45:17,470 --> 01:45:19,960\nAnd so it's going to basically record\n\n2050\n01:45:19,960 --> 01:45:22,870\nall of the queries running\non my server right now.\n\n2051\n01:45:22,870 --> 01:45:25,212\nSo you just tell it what it\nis you want to record, and\n\n2052\n01:45:25,212 --> 01:45:26,800\nyou can choose to save it to a file.\n\n2053\n01:45:26,800 --> 01:45:31,321\nSo I'm gonna do that,\nI'm gonna save this to a file,\n\n2054\n01:45:31,321 --> 01:45:35,550\nand maybe I'll call this\nlike workload2.sql.\n\n2055\n01:45:35,550 --> 01:45:38,060\nAll right, and\nthen I'll go ahead and hit run.\n\n2056\n01:45:38,060 --> 01:45:42,280\nNow it's running, and\nas people run queries on my server,\n\n2057\n01:45:42,280 --> 01:45:46,490\nit'll start to record it here, so if I\ngo back here and run these two queries.\n\n2058\n01:45:46,490 --> 01:45:47,760\nLet me just run them.\n\n2059\n01:45:47,760 --> 01:45:52,720\nA transport level error occurred\nshared memory provider.\n\n2060\n01:45:52,720 --> 01:45:54,170\nNo processes on the other end of the pipe.\n\n2061\n01:45:54,170 --> 01:45:55,550\nWell, that's different.\n\n2062\n01:45:55,550 --> 01:46:01,090\nSo [LAUGH I wonder why\nit got unhappy there?\n\n2063\n01:46:01,090 --> 01:46:02,420\nMy window might be dead.\n\n2064\n01:46:02,420 --> 01:46:03,800\nLet me try a new one.\n\n2065\n01:46:06,050 --> 01:46:07,010\nThere we go.\n\n2066\n01:46:07,010 --> 01:46:09,837\nSo, if you keep a tab open too\nlong its session might die and\n\n2067\n01:46:09,837 --> 01:46:11,880\nthat's apparently what happened to me.\n\n2068\n01:46:11,880 --> 01:46:15,890\nSo, there, I just ran that one and it ran,\nand if i jump back to my Profiler,\n\n2069\n01:46:15,890 --> 01:46:19,670\nin here somewhere,\nI'll be able to find where that query ran.\n\n2070\n01:46:19,670 --> 01:46:22,690\nHere it is, select employee,\nfirst name, last name,\n\n2071\n01:46:22,690 --> 01:46:23,970\nthere's that query that ran right there.\n\n2072\n01:46:23,970 --> 01:46:28,210\nSelect employee ID, First name,\nlast name, from employees, and so on.\n\n2073\n01:46:28,210 --> 01:46:30,900\nIt saw that query ran and recorded it.\n\n2074\n01:46:30,900 --> 01:46:32,510\nAnd it's saving it to a file.\n\n2075\n01:46:32,510 --> 01:46:35,440\nSo what you could do is you\ncould launch the Profiler and\n\n2076\n01:46:35,440 --> 01:46:36,350\nlet it run for 30 minutes.\n\n2077\n01:46:36,350 --> 01:46:37,970\nLet it run for an hour.\n\n2078\n01:46:37,970 --> 01:46:41,070\nAnd it'll just collect everything that\nran on that server for that time.\n\n2079\n01:46:41,070 --> 01:46:42,890\nYou don't even have to know the queries.\n\n2080\n01:46:42,890 --> 01:46:46,320\nYou just collect the data and\nyou've got it, all right.\n\n2081\n01:46:46,320 --> 01:46:48,720\nAnd when you're done,\nyou just stop the trace.\n\n2082\n01:46:48,720 --> 01:46:51,390\nSo I'll stop it and\nit's already saved it to a file.\n\n2083\n01:46:51,390 --> 01:46:53,210\nI'm gonna hit Save just\nto be on the safe side.\n\n2084\n01:46:54,480 --> 01:46:56,490\nLooks like it's already created it there,\nyeah.\n\n2085\n01:46:56,490 --> 01:47:00,410\nIt's already 269k, so I'm not gonna bother\nwith that, and I'll close out of it.\n\n2086\n01:47:00,410 --> 01:47:02,675\nNow I have a work Workload file.\n\n2087\n01:47:02,675 --> 01:47:06,935\nSo you can make your own workload file\nlike this where you manually put in\n\n2088\n01:47:06,935 --> 01:47:10,175\nwhat are the queries that your\nsystem runs the most frequently.\n\n2089\n01:47:10,175 --> 01:47:14,215\nOr you can just use\nthe Profiler to grab that data.\n\n2090\n01:47:14,215 --> 01:47:19,170\nThen we just feed it into the database\nengine tuning adviser, all right?\n\n2091\n01:47:19,170 --> 01:47:27,050\nSo, let me just make sure I don't have\nany typos in this and we'll use it.\n\n2092\n01:47:27,050 --> 01:47:27,880\nOkay, good.\n\n2093\n01:47:27,880 --> 01:47:29,380\nAll right, so that one's good.\n\n2094\n01:47:29,380 --> 01:47:31,420\nIt's my other session, it just timed out.\n\n2095\n01:47:31,420 --> 01:47:32,210\nSo I've got it.\n\n2096\n01:47:32,210 --> 01:47:37,070\nI'm gonna feed that into\nthe database engine tuning adviser.\n\n2097\n01:47:37,070 --> 01:47:40,000\nSo I'll go up here to tools >\ndatabase engine tuning adviser.\n\n2098\n01:47:40,000 --> 01:47:46,370\nI'm gonna connect up to my server, and\nI'm gonna run through a new analysis.\n\n2099\n01:47:46,370 --> 01:47:48,800\nSo it's gonna ask me some basic questions.\n\n2100\n01:47:48,800 --> 01:47:50,166\nIt'll give it a session name.\n\n2101\n01:47:50,166 --> 01:47:52,040\nIt's your username, the date, and time, so\n\n2102\n01:47:52,040 --> 01:47:55,600\nyou can keep track of when it happened,\nand it's gonna ask for your workload.\n\n2103\n01:47:55,600 --> 01:47:58,020\nNow your workload's normally\ngonna come from a file.\n\n2104\n01:47:58,020 --> 01:48:01,260\nIt could come from a table if you've\nbeen storing stuff in a SQL table.\n\n2105\n01:48:01,260 --> 01:48:06,584\nOr from a planned cache, that's if you've\ngot a query that you've never run yet,\n\n2106\n01:48:06,584 --> 01:48:09,260\nand you've cached that execution plan.\n\n2107\n01:48:09,260 --> 01:48:12,180\nYou know, what it was going to do to run,\nyou can feed that in.\n\n2108\n01:48:12,180 --> 01:48:14,490\nBut most of the time we're\njust gonna pull from a file.\n\n2109\n01:48:14,490 --> 01:48:17,220\nI'll browse and pick that file\nthat I created a moment ago.\n\n2110\n01:48:20,130 --> 01:48:22,620\nSo that's just that workload.sql.\n\n2111\n01:48:22,620 --> 01:48:26,890\nThat contains those two queries that\nI wanted to optimize for, all right.\n\n2112\n01:48:26,890 --> 01:48:29,070\nThen it's gonna ask what\ndatabases I wanna tune.\n\n2113\n01:48:29,070 --> 01:48:31,850\nI just wanna tune my products database,\nthat's it,\n\n2114\n01:48:31,850 --> 01:48:34,750\nand you'll see the tables we wanna tune.\n\n2115\n01:48:34,750 --> 01:48:38,245\nWell, I'm just tuning, actually,\nwhat table am I tuning?\n\n2116\n01:48:38,245 --> 01:48:40,810\n[LAUGH] I've lost track.\n\n2117\n01:48:40,810 --> 01:48:42,260\nSo let's see.\n\n2118\n01:48:42,260 --> 01:48:46,300\nThe products database and the employees\ntable, that's what I'm working with.\n\n2119\n01:48:46,300 --> 01:48:47,920\nSo let me just turn those other ones off.\n\n2120\n01:48:47,920 --> 01:48:49,500\nYou could tune the whole thing.\n\n2121\n01:48:49,500 --> 01:48:51,874\nIf you had grabbed the workload\nfrom the SQL profile,\n\n2122\n01:48:51,874 --> 01:48:55,230\nyou'd probably want to tune it all,\nall your databases and so on.\n\n2123\n01:48:55,230 --> 01:48:58,040\nBut for me, I'm just working with\nthis particular one right here.\n\n2124\n01:48:59,260 --> 01:49:01,860\nAll right, so\nnow it knows what I want to tune.\n\n2125\n01:49:01,860 --> 01:49:05,890\nThe database for workload analysis is set\nwrong, so let me put that to products.\n\n2126\n01:49:05,890 --> 01:49:09,220\nAll right, and\nit's got my other stuff right there.\n\n2127\n01:49:09,220 --> 01:49:11,440\nSo we've pretty much\ngot everything we need.\n\n2128\n01:49:11,440 --> 01:49:14,790\nYou can go to tuning options and\ntweak this a little bit more.\n\n2129\n01:49:14,790 --> 01:49:17,540\nBy default it's looking for\nindexes to create.\n\n2130\n01:49:17,540 --> 01:49:20,130\nBut you'll see where you can\ntell it to do other things like\n\n2131\n01:49:20,130 --> 01:49:24,390\njust non clustered indexes,\nor indexing views also.\n\n2132\n01:49:24,390 --> 01:49:26,400\nWe haven't talked about views yet.\n\n2133\n01:49:26,400 --> 01:49:29,500\nWhether you want it to recommend\npartitioning, it'll look and\n\n2134\n01:49:29,500 --> 01:49:31,790\nsee if partitioning would make\nsense in your environment.\n\n2135\n01:49:31,790 --> 01:49:34,080\nI'm gonna say don't\nbother with partitioning.\n\n2136\n01:49:34,080 --> 01:49:37,290\nAnd it'll even look at your\nphysical design structures,\n\n2137\n01:49:37,290 --> 01:49:40,010\nyour PDS,\nwhich is how we've arranged our files and\n\n2138\n01:49:40,010 --> 01:49:43,430\nfile groups on the disk system, to see\nwhether or not we want to mess with that.\n\n2139\n01:49:43,430 --> 01:49:46,160\nSo, it's got a few\nrecommendations in there, but\n\n2140\n01:49:46,160 --> 01:49:48,380\nmostly we care about this, indexes.\n\n2141\n01:49:48,380 --> 01:49:51,160\nI want a recommendation on my indexes.\n\n2142\n01:49:51,160 --> 01:49:52,850\nSo we can start the analysis.\n\n2143\n01:49:52,850 --> 01:49:55,660\nIt's gonna run the queries\na handful of times,\n\n2144\n01:49:55,660 --> 01:49:59,700\nlook at the execution plan, and\ncome up with different solutions,\n\n2145\n01:49:59,700 --> 01:50:03,535\ndifferent ways that it can\nmake this query run faster.\n\n2146\n01:50:03,535 --> 01:50:06,505\nAnd when it's done, it'll give me\na recommendation of what to do.\n\n2147\n01:50:06,505 --> 01:50:09,995\nAnd if I like it,\nI can let it do it for me, right.\n\n2148\n01:50:09,995 --> 01:50:13,035\nBut if I don't like it,\nI can just ignore its recommendation.\n\n2149\n01:50:13,035 --> 01:50:14,255\nAnd it looks like mine has failed.\n\n2150\n01:50:14,255 --> 01:50:18,525\nThe minimum storage space,\nhave I run out of hard drive space?\n\n2151\n01:50:18,525 --> 01:50:21,855\n[LAUGH] The minimum storage space for\n\n2152\n01:50:21,855 --> 01:50:26,380\nthe selected physical design structure\nexceed the default storage space for data.\n\n2153\n01:50:28,210 --> 01:50:31,450\nIncrease the default storage space to be\nlarger than at least three megabytes.\n\n2154\n01:50:31,450 --> 01:50:33,440\nHow do I have less than\nthree megabytes of storage?\n\n2155\n01:50:33,440 --> 01:50:34,580\nWhat have I done to my system?\n\n2156\n01:50:36,780 --> 01:50:38,580\nI have tons of storage.\n\n2157\n01:50:38,580 --> 01:50:40,780\nAll right so\nit's gotten confused apparently.\n\n2158\n01:50:40,780 --> 01:50:43,200\nSo something's going wrong\nwhere it's not seeing that.\n\n2159\n01:50:43,200 --> 01:50:46,700\nI might have some issue with my\nraid controller or something.\n\n2160\n01:50:46,700 --> 01:50:51,640\nHm, well let me kind of\nflex my options here just\n\n2161\n01:50:51,640 --> 01:50:56,840\na little bit, and\nsee if that gets it happy again.\n\n2162\n01:51:00,510 --> 01:51:01,630\nLet's rerun that.\n\n2163\n01:51:01,630 --> 01:51:04,300\nAll right, so it's just reporting that\nI'm running out of hard drive space.\n\n2164\n01:51:04,300 --> 01:51:06,340\nBut basically it's going to\nrun the queries and look for\n\n2165\n01:51:06,340 --> 01:51:07,390\nwhat it can do to optimize it.\n\n2166\n01:51:07,390 --> 01:51:10,480\nAnd when it's done it gives you a nice\nlittle report with it's suggested changes.\n\n2167\n01:51:10,480 --> 01:51:13,230\nAnd like I said, take it or\nleave it, you don't have to do it,\n\n2168\n01:51:13,230 --> 01:51:15,062\nyou can ignore the recommendations.\n\n2169\n01:51:15,062 --> 01:51:19,500\nBut it'll recommend things like getting\nrid of indexes that don't help you, and\n\n2170\n01:51:19,500 --> 01:51:21,010\nadding new indexes that do.\n\n2171\n01:51:21,010 --> 01:51:23,660\nAnd if you hit the button to go ahead and\ndo it, it'll do it.\n\n2172\n01:51:23,660 --> 01:51:27,340\nIt'll go ahead and make the changes,\nput those indexes in place so.\n\n2173\n01:51:27,340 --> 01:51:28,920\nYeah, I wonder what's going on there?\n\n2174\n01:51:28,920 --> 01:51:30,590\nYou know let me try and run this.\n\n2175\n01:51:30,590 --> 01:51:32,850\nI'm running this as SA, and\n\n2176\n01:51:32,850 --> 01:51:37,690\nthe SA account is inside of SQL itself,\nbut if it's trying to write files to\n\n2177\n01:51:37,690 --> 01:51:42,410\nthe hard drive it may not have all\nthe permissions that it needs.\n\n2178\n01:51:42,410 --> 01:51:46,490\nSo let me run this as an administrator.\n\n2179\n01:51:49,950 --> 01:51:53,298\nSo, I'm just relaunching the database\nengine tuning adviser and\n\n2180\n01:51:53,298 --> 01:51:55,042\nI'm going to run it as my account.\n\n2181\n01:51:55,042 --> 01:51:56,980\nJust to make sure it's able\nto write to the hard drive.\n\n2182\n01:51:56,980 --> 01:51:59,418\nThere's no way I'm actually\nout of hard drive space.\n\n2183\n01:52:03,845 --> 01:52:05,737\nAll right.\nSo I'm just going to set these same\n\n2184\n01:52:05,737 --> 01:52:07,720\noptions and then we'll run it again.\n\n2185\n01:52:07,720 --> 01:52:08,530\nWe'll see how it goes.\n\n2186\n01:52:08,530 --> 01:52:09,540\nThird time's the charm, right?\n\n2187\n01:52:11,330 --> 01:52:14,670\nThe point of all this though, is that you\ndon't have to be some database wizard\n\n2188\n01:52:14,670 --> 01:52:17,550\nto create the right indexes to\nmake your database run faster.\n\n2189\n01:52:17,550 --> 01:52:20,240\nJust use the database engine tuning\nadvisor if you can get it to work.\n\n2190\n01:52:20,240 --> 01:52:23,760\n[LAUGH] And it'll run and\ngive you the indexes that you need.\n\n2191\n01:52:23,760 --> 01:52:25,730\nIt will change the life of your server.\n\n2192\n01:52:25,730 --> 01:52:28,310\nRight?\nThe right indexes will really speed up\n\n2193\n01:52:28,310 --> 01:52:29,650\nthose queries.\n\n2194\n01:52:29,650 --> 01:52:31,640\nAll right.\nI've got some kinda issue going on in\n\n2195\n01:52:31,640 --> 01:52:33,460\nmy system where it thinks\nI'm out of hard drive space,\n\n2196\n01:52:33,460 --> 01:52:35,540\nso I'll have to sort that out later.\n\n2197\n01:52:35,540 --> 01:52:38,060\nI might have written a bad\nworkload file or something.\n\n2198\n01:52:38,060 --> 01:52:42,780\nBut that's basically one of\nthe ways that we can go about it.\n\n2199\n01:52:42,780 --> 01:52:47,760\nThe other thing I wanna mention is that\nwhen an index is created, it gets built,\n\n2200\n01:52:47,760 --> 01:52:50,030\nand it gets loaded into RAM,\nbased on the data as it is now.\n\n2201\n01:52:50,030 --> 01:52:52,130\nBut your data changes.\n\n2202\n01:52:52,130 --> 01:52:54,710\nSome data gets deleted,\nand you remove rows.\n\n2203\n01:52:54,710 --> 01:52:58,620\nNew data gets added as you add rows,\nthe indexes change.\n\n2204\n01:52:58,620 --> 01:53:02,160\nAnd as that happens\nthe indexes begin to fragment.\n\n2205\n01:53:02,160 --> 01:53:04,560\nIt's just like writing files to\na hard drive where you get hard drive\n\n2206\n01:53:04,560 --> 01:53:05,900\nfragmentation.\n\n2207\n01:53:05,900 --> 01:53:07,760\nYou get index fragmentation also.\n\n2208\n01:53:08,950 --> 01:53:11,130\nAnd index fragmentation\ncan be a bad thing.\n\n2209\n01:53:11,130 --> 01:53:15,910\nIf you go and take a look at an index that\nyou've made, you'd actually be surprised.\n\n2210\n01:53:15,910 --> 01:53:19,730\nRight when you create an index\nthe first time It can be fragmented.\n\n2211\n01:53:19,730 --> 01:53:23,260\nIt can be fragmented right from the get go\nif there's underlying disc fragmentation.\n\n2212\n01:53:23,260 --> 01:53:24,360\nLet me show you what I mean.\n\n2213\n01:53:24,360 --> 01:53:28,365\nI'm gonna take my employees table and\nI'll create a new,\n\n2214\n01:53:28,365 --> 01:53:34,314\nnon-clustered index on\nthe employee last name.\n\n2215\n01:53:35,580 --> 01:53:36,730\nAll right, there we go.\n\n2216\n01:53:36,730 --> 01:53:41,030\nSo I just right now created\nthat non clustered index.\n\n2217\n01:53:41,030 --> 01:53:47,100\nWell if I pull up its properties, and\nI go into the fragmentation portion,\n\n2218\n01:53:47,100 --> 01:53:48,990\nI can see whether or\nnot it has any fragmentation.\n\n2219\n01:53:48,990 --> 01:53:50,470\nAnd actually this one has 0%.\n\n2220\n01:53:50,470 --> 01:53:52,360\nSo it's not fragmented.\n\n2221\n01:53:52,360 --> 01:53:54,830\nIt's not uncommon to see it higher, right?\n\n2222\n01:53:54,830 --> 01:53:58,020\nAnd what we're looking for\nare a couple of values, all right?\n\n2223\n01:53:58,020 --> 01:54:00,017\n0 to 5%, that's normal.\nYou don't worry about that, all right?\n\n2224\n01:54:00,017 --> 01:54:04,365\n5% to 30% means the index\nneeds to be updated.\n\n2225\n01:54:04,365 --> 01:54:08,164\nThe index has become fragmented,\nyou need to defragment it, all right?\n\n2226\n01:54:08,164 --> 01:54:12,390\nIf it's beyond 30% though, if it's 35% or\n\n2227\n01:54:12,390 --> 01:54:16,918\n40% or 50%,\nit would take longer to defragment\n\n2228\n01:54:16,918 --> 01:54:22,280\nthe index than it would just\nto delete it and rebuild it.\n\n2229\n01:54:22,280 --> 01:54:24,380\nSo when you have to update an index,\n\n2230\n01:54:24,380 --> 01:54:26,938\nwhen you have to defragment it,\nyou've really got two choices.\n\n2231\n01:54:26,938 --> 01:54:32,062\nIf I right-click on this index, you'll\nsee in here where I've got rebuild and\n\n2232\n01:54:32,062 --> 01:54:34,420\nreorganize, all right?.\n\n2233\n01:54:34,420 --> 01:54:35,450\nRebuild and reorganize.\n\n2234\n01:54:35,450 --> 01:54:41,070\nAnd what those are are the two ways\nthat I defragment an index, right?\n\n2235\n01:54:41,070 --> 01:54:43,240\nReorganize means defragment it.\n\n2236\n01:54:43,240 --> 01:54:47,250\nGo into the index, move some stuff around,\nand get it nice and clean and happy again,\n\n2237\n01:54:47,250 --> 01:54:48,330\nall right?\n\n2238\n01:54:48,330 --> 01:54:50,108\nIf you're less than 30% fragmented, and\n\n2239\n01:54:50,108 --> 01:54:52,886\nthese are the numbers you'll see on\nthe exam, so know these numbers.\n\n2240\n01:54:52,886 --> 01:54:58,750\nIf it's less than 30% fragmented\nyou wanna reorganize the index.\n\n2241\n01:54:58,750 --> 01:55:02,690\nBut if it's over 30%,\ndelete the index and recreate it.\n\n2242\n01:55:02,690 --> 01:55:05,550\nAnd you could do that yourself or\nyou can use rebuild.\n\n2243\n01:55:05,550 --> 01:55:06,990\nThat's what rebuild does.\n\n2244\n01:55:06,990 --> 01:55:10,600\nBut let me tell you, if you do it\nyourself, if you delete the index and\n\n2245\n01:55:10,600 --> 01:55:15,180\nrecreate it, there's a moment in\nbetween where there's no index.\n\n2246\n01:55:15,180 --> 01:55:18,460\nYou delete the index, you recreate it,\nit could take ten minutes for\n\n2247\n01:55:18,460 --> 01:55:20,250\nthat index to rebuild, right?\n\n2248\n01:55:20,250 --> 01:55:22,690\nAnd during that time you've got no index.\n\n2249\n01:55:22,690 --> 01:55:25,000\nAnd that means performance\nis going to be hurt.\n\n2250\n01:55:25,000 --> 01:55:28,390\nWhen you use rebuild,\nrebuild does something neat\n\n2251\n01:55:28,390 --> 01:55:32,170\nwhich allows you to keep the old index,\nthe fragmented one.\n\n2252\n01:55:32,170 --> 01:55:36,050\nYou can keep it online while\nit builds the new one.\n\n2253\n01:55:36,050 --> 01:55:37,760\nAnd when the build is done,\n\n2254\n01:55:37,760 --> 01:55:42,350\nwhen the new one is done, it then puts the\nnew one in place and deletes the old one.\n\n2255\n01:55:42,350 --> 01:55:46,500\nSo you have an index the entire time.\n\n2256\n01:55:46,500 --> 01:55:50,150\nSo, while rebuilding is really\ndeleting and creating a new index,\n\n2257\n01:55:50,150 --> 01:55:55,290\nit does it in an order that always keeps\nit online versus if you do it by hand,\n\n2258\n01:55:55,290 --> 01:55:57,402\nthen it won't.\n\n2259\n01:55:57,402 --> 01:56:01,000\nSo like, if I look at the scripting for\nthis, and I go back here and look,\n\n2260\n01:56:01,000 --> 01:56:06,530\nsee how it's got alter index and the name,\nand then it's doing rebuild partition.\n\n2261\n01:56:06,530 --> 01:56:09,440\nAnd then as I scroll over here\nI should see a with online.\n\n2262\n01:56:09,440 --> 01:56:12,970\nOh, actually, you know what?\n\n2263\n01:56:12,970 --> 01:56:14,068\nOnline equals off.\n\n2264\n01:56:14,068 --> 01:56:18,960\nIt's [LAUGH], If I can get my cursor\nto highlight it, online equals off.\n\n2265\n01:56:18,960 --> 01:56:21,780\nSo it's actually not doing\nit online by default.\n\n2266\n01:56:21,780 --> 01:56:23,022\nSo there's something to note.\n\n2267\n01:56:23,022 --> 01:56:25,461\nSo let me see if we have\nthat option in here.\n\n2268\n01:56:25,461 --> 01:56:28,366\nWhen we went to do the rebuild.\n\n2269\n01:56:28,366 --> 01:56:29,624\nSo if I tell it to rebuild.\n\n2270\n01:56:33,912 --> 01:56:38,810\nYou know, it does not give me\nthe option to do it online in here.\n\n2271\n01:56:38,810 --> 01:56:40,478\nI could have swore that it did.\n\n2272\n01:56:40,478 --> 01:56:43,340\nAll right, well,\nif you want to do it by hand,\n\n2273\n01:56:43,340 --> 01:56:47,200\nwhat I normally do is\na slightly different syntax.\n\n2274\n01:56:47,200 --> 01:56:49,552\nWell I'll say altering index and\nthe name of the index.\n\n2275\n01:56:54,469 --> 01:56:59,781\nAnd then, rebuild with online\n\n2276\n01:56:59,781 --> 01:57:03,875\nequals on, all right?\n\n2277\n01:57:03,875 --> 01:57:06,370\nThat's what I normally run, all right?\n\n2278\n01:57:06,370 --> 01:57:09,050\nAnd I don't normally use the GUI for this.\n\n2279\n01:57:09,050 --> 01:57:10,580\nThat's why I didn't realize\nthat option wasn't there.\n\n2280\n01:57:10,580 --> 01:57:14,490\nI almost always use transact SQL\nbecause I script this, right?\n\n2281\n01:57:14,490 --> 01:57:16,940\nI don't want this to happen right in\nthe middle of the day when people\n\n2282\n01:57:16,940 --> 01:57:17,610\nare in the system.\n\n2283\n01:57:17,610 --> 01:57:19,700\nRebuilding the index takes resources, so\n\n2284\n01:57:19,700 --> 01:57:24,090\nI like it to happen at 2 AM or 4 AM, when\npeople aren't in the office and working.\n\n2285\n01:57:24,090 --> 01:57:26,120\nHave it rebuild in\nthe middle of the night.\n\n2286\n01:57:26,120 --> 01:57:29,480\nAnd that's something you can do\nwith a maintenance plan also.\n\n2287\n01:57:29,480 --> 01:57:33,813\nIf we go back and look at our maintenance\nplans from the maintenance episode,\n\n2288\n01:57:33,813 --> 01:57:37,080\nthe SQL Server Agent episode,\nwe created a maintenance plan.\n\n2289\n01:57:39,270 --> 01:57:41,520\nAnd I'll just whip up a new one here.\n\n2290\n01:57:41,520 --> 01:57:44,650\nOh, apparently my SQL\nserver agent is stopped.\n\n2291\n01:57:44,650 --> 01:57:45,616\nSure is.\nLet me start that.\n\n2292\n01:57:49,842 --> 01:57:51,974\nAlright.\nSo if we create a maintenance plan,\n\n2293\n01:57:51,974 --> 01:57:56,250\nthere is a maintenance plan option\nthere for maintaining your indexes.\n\n2294\n01:57:56,250 --> 01:57:57,580\nSo if I go.\n\n2295\n01:57:57,580 --> 01:57:59,460\nIs my agent still stopped?\n\n2296\n01:57:59,460 --> 01:58:00,570\nNope there it goes.\n\n2297\n01:58:00,570 --> 01:58:02,730\nAll right.\nSo I'll go back into maintenance plans and\n\n2298\n01:58:02,730 --> 01:58:04,820\ncreate a new maintenance plan.\n\n2299\n01:58:04,820 --> 01:58:06,550\nAll right, when I go to whip this up and\n\n2300\n01:58:06,550 --> 01:58:09,560\nchoose the different things that I'm\ngonna do in my maintenance plan.\n\n2301\n01:58:09,560 --> 01:58:11,060\nOh, let me use the wizard.\n\n2302\n01:58:11,060 --> 01:58:12,050\nThat's going to be the hard way there.\n\n2303\n01:58:13,290 --> 01:58:14,920\nI'll do new maintenance plan wizard.\n\n2304\n01:58:17,110 --> 01:58:18,130\nThere we go.\n\n2305\n01:58:18,130 --> 01:58:20,030\nAnd we go in here and\npick what we're gonna do,\n\n2306\n01:58:20,030 --> 01:58:24,640\nyou'll see reorganize index and\nrebuild index, all right?\n\n2307\n01:58:24,640 --> 01:58:26,840\nSo you don't have to write this\nfrom scratch if you don't want to.\n\n2308\n01:58:26,840 --> 01:58:30,440\nYou can use a maintenance plan and\nset the schedule for it.\n\n2309\n01:58:30,440 --> 01:58:33,920\nSo if I want to reorganize my indexes,\nI can go through and\n\n2310\n01:58:33,920 --> 01:58:37,640\npick which one I want to do and\nthe order they're gonna happen in, and\n\n2311\n01:58:37,640 --> 01:58:39,830\nthen pick the indexes it's gonna affect.\n\n2312\n01:58:39,830 --> 01:58:41,436\nSo define reorganize index,\n\n2313\n01:58:41,436 --> 01:58:45,230\nI come in and tell it the database\nthat I'm working with.\n\n2314\n01:58:45,230 --> 01:58:47,220\nSo maybe this is my product's database.\n\n2315\n01:58:50,000 --> 01:58:52,710\nAnd then the object, I want to do a table.\n\n2316\n01:58:52,710 --> 01:58:56,290\nAnd then the particular table,\nI'll do employees.\n\n2317\n01:58:56,290 --> 01:59:00,910\nAnd so now it's going to access\nthe employees table, and it's gonna\n\n2318\n01:59:00,910 --> 01:59:05,280\nrebuild the indexes on that table, or\nreorganize the indexes on that table.\n\n2319\n01:59:05,280 --> 01:59:07,820\nNow it's smart enough to know\nif fragmentation is over 30%,\n\n2320\n01:59:07,820 --> 01:59:11,080\nit'll do a rebuild even though\nit's the reorganize task.\n\n2321\n01:59:11,080 --> 01:59:13,220\nSo I probably don't\nneed this rebuild task.\n\n2322\n01:59:13,220 --> 01:59:16,410\nBut if I specifically want to rebuild one\nI can use this and it'll knock it out.\n\n2323\n01:59:16,410 --> 01:59:20,750\nSo you got a few different options there\nas far as how you want to handle that,\n\n2324\n01:59:20,750 --> 01:59:22,515\nall based on your system.\n\n2325\n01:59:22,515 --> 01:59:25,965\nSo whatever it is that works\nis what you want to use.\n\n2326\n01:59:25,965 --> 01:59:29,925\n[LAUGH] All right, so\nthat's basically it for indexes.\n\n2327\n01:59:29,925 --> 01:59:32,999\nI do wish the database engine tuning\nadvisor hadn't crapped out on me\n\n2328\n01:59:32,999 --> 01:59:34,334\nthere cause it is kinda neat.\n\n2329\n01:59:34,334 --> 01:59:37,483\nYou just get this list of indexes, you\ncheck the ones you want and you hit do it.\n\n2330\n01:59:37,483 --> 01:59:39,480\nAnd it just makes the indexes.\n\n2331\n01:59:39,480 --> 01:59:40,360\nKinda nice.\n\n2332\n01:59:40,360 --> 01:59:43,232\nOr you just write it down and you say, all\nright, let me submit this to the guys and\n\n2333\n01:59:43,232 --> 01:59:44,258\nsay here's what I wanna do.\n\n2334\n01:59:44,258 --> 01:59:47,062\nAnd then they check it out and\nmake sure it's the right thing to do.\n\n2335\n01:59:47,062 --> 01:59:48,423\nIt's neat.\n\n2336\n01:59:48,423 --> 01:59:49,277\nIt's kind of nice.\n\n2337\n01:59:49,277 --> 01:59:53,041\nBut if you understand the queries that\nare being used in your environment,\n\n2338\n01:59:53,041 --> 01:59:56,102\nindexes can really improve\ntheir performance, all right.\n\n2339\n01:59:56,102 --> 02:00:00,290\nSo, we threw it in this episode with\nthe importing and exporting of data.\n\n2340\n02:00:00,290 --> 02:00:02,889\nAnd I know that doesn't necessarily\nsound like the same thing, but\n\n2341\n02:00:02,889 --> 02:00:05,090\nchronologically this is\nthe order we do it in.\n\n2342\n02:00:05,090 --> 02:00:07,495\nYou import data into SQL.\n\n2343\n02:00:07,495 --> 02:00:10,250\nSo you bring that data into a table,\nand then you\n\n2344\n02:00:10,250 --> 02:00:14,250\noptimize it with indexes to make sure the\nqueries run as efficiently as possible.\n\n2345\n02:00:14,250 --> 02:00:18,300\nIf you have this down pat, this is the\ndifference between somebody who just knows\n\n2346\n02:00:18,300 --> 02:00:23,715\nhow to install SQL and somebody who knows\nhow to make SQL run as fast as possible.\n\n2347\n02:00:23,715 --> 02:00:25,048\nThis is the difference.\n\n2348\n02:00:25,048 --> 02:00:27,040\nIndexes.\nWell that's a pretty good spot for\n\n2349\n02:00:27,040 --> 02:00:28,510\nus to wrap up our show.\n\n2350\n02:00:28,510 --> 02:00:30,320\nI am gonna post the show notes for this.\n\n2351\n02:00:30,320 --> 02:00:33,780\nI've got tons of transact SQL\nstatements that are in there.\n\n2352\n02:00:33,780 --> 02:00:36,570\nI know I mentioned having to\ndetermine whether people are actually\n\n2353\n02:00:36,570 --> 02:00:38,080\nusing your indexes.\n\n2354\n02:00:38,080 --> 02:00:41,110\nIn the show notes I'll put a neat\nlittle query in there that you can run\n\n2355\n02:00:41,110 --> 02:00:43,980\nthat'll show how many look\nups an index is getting.\n\n2356\n02:00:43,980 --> 02:00:47,110\nSo you can tell whether people\nare actually using that index or not.\n\n2357\n02:00:47,110 --> 02:00:48,240\nIt's kind of a nice thing.\n\n2358\n02:00:48,240 --> 02:00:50,060\nSo I'll post that with the show notes.\n\n2359\n02:00:50,060 --> 02:00:51,300\ndefinitely check that out.\n\n2360\n02:00:51,300 --> 02:00:54,660\nBut if you have questions on any of it,\nbe sure to ask, right?\n\n2361\n02:00:54,660 --> 02:00:58,300\nLive during the show you\ncan go to itpro.tv/live and\n\n2362\n02:00:58,300 --> 02:01:01,090\nyou'll see the chat box\nright beneath the video.\n\n2363\n02:01:01,090 --> 02:01:02,030\nPost your questions there.\n\n2364\n02:01:02,030 --> 02:01:04,060\nWe monitor and answer during the show.\n\n2365\n02:01:04,060 --> 02:01:07,710\nIf you have questions after the show,\ngo to our website.\n\n2366\n02:01:07,710 --> 02:01:10,570\nAt the top of every page\nis a link that says Q and\n\n2367\n02:01:10,570 --> 02:01:11,960\nA, it'll take you into Q and A forums.\n\n2368\n02:01:11,960 --> 02:01:14,270\nYou can post your questions there,\nwe monitor and answer.\n\n2369\n02:01:14,270 --> 02:01:17,553\nWe want to make sure you guys have\nthe information you need to be successful.\n\n2370\n02:01:17,553 --> 02:01:20,458\nAll right,\nwell I hope you guys enjoyed today's show.\n\n2371\n02:01:20,458 --> 02:01:24,806\nSigning off for ITprotv, I'm I'm Don Pezet\nand we'll see you next time.\n\n2372\n02:01:24,806 --> 02:01:34,806\n[MUSIC]\n\n",
          "vimeoId": "105971650"
        }
      ],
      "title": "Manage data"
    },
    {
      "episodes": [
        {
          "description": "In this episode Don demonstrates how to use user accounts and assign permissions inside of SQL Server. He also describes the various built-in roles included with every SQL server installation.",
          "length": "5254",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/008-Implementing-Security.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/008-Implementing-Security-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/008-Implementing-Security-sm.jpg",
          "title": "Implementing Security",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:33,628 --> 00:00:34,337\nAll right.\n\n3\n00:00:34,337 --> 00:00:36,504\nGood morning, good afternoon,\nand good evening.\n\n4\n00:00:36,504 --> 00:00:41,337\nAnd welcome back to another episode\nof IT Pro TV I'm your host Don Peset,\n\n5\n00:00:41,337 --> 00:00:44,755\nback again with another\nepisode of Microsoft SQL.\n\n6\n00:00:44,755 --> 00:00:47,443\nBoy, we have covered a lot of\ncontent in this show so far,\n\n7\n00:00:47,443 --> 00:00:50,130\njust kind of churning\nthrough our objectives.\n\n8\n00:00:50,130 --> 00:00:54,140\nThere have been a few times where\nI've mentioned security, but\n\n9\n00:00:54,140 --> 00:00:56,630\nwe haven't really touched it at all.\n\n10\n00:00:56,630 --> 00:00:57,150\nRight?\n\n11\n00:00:57,150 --> 00:01:01,850\nIn fact, in one of the first episodes I\nmade a joke about not wanting to log in as\n\n12\n00:01:01,850 --> 00:01:05,295\nSA, but then, what have I done in\nevery single episode since then?\n\n13\n00:01:05,295 --> 00:01:06,185\nI've logged in as SA.\n\n14\n00:01:06,185 --> 00:01:11,415\nAnd the reason is, we just haven't\nseen the securing piece of SQL yet.\n\n15\n00:01:11,415 --> 00:01:12,677\nToday is that day.\n\n16\n00:01:12,677 --> 00:01:14,435\nWe're gonna tackle it right\nhere in this episode.\n\n17\n00:01:14,435 --> 00:01:17,515\nWe'll get a chance to see some of\nthe things we need to be aware of when it\n\n18\n00:01:17,515 --> 00:01:22,155\ncomes to securing our server and getting\nit operating the way that we need it to.\n\n19\n00:01:22,155 --> 00:01:24,255\nSo, let's take a look at that.\n\n20\n00:01:24,255 --> 00:01:29,240\nNow, before I get into securing my\nuser credentials and stuff like that,\n\n21\n00:01:29,240 --> 00:01:30,950\nI do wanna take a look at one other thing,\n\n22\n00:01:30,950 --> 00:01:35,410\nwhich is just securing\nthe server as a whole.\n\n23\n00:01:35,410 --> 00:01:37,710\nMicrosoft SQL is a very old product.\n\n24\n00:01:37,710 --> 00:01:39,870\nIt's been around a long, long time and\n\n25\n00:01:39,870 --> 00:01:44,620\nso over the years, there have been\nseveral different ways to connect to it.\n\n26\n00:01:44,620 --> 00:01:47,380\nIn the early days of SQL, it was designed\n\n27\n00:01:47,380 --> 00:01:52,490\nwhen TCP/IP was not the most common\nnetworking protocol that was out there.\n\n28\n00:01:52,490 --> 00:01:56,170\nAnd so, there was another form of\nconnecting to it called Named Pipes.\n\n29\n00:01:57,540 --> 00:02:01,900\nNamed Pipes allowed a machine on one\nnetwork to connect to a SQL server\n\n30\n00:02:01,900 --> 00:02:06,246\non the same network, regardless of\nwhether you were running TCP/IP or\n\n31\n00:02:06,246 --> 00:02:11,490\nIPX/SPX or Apple Talk or NetBEUI,\nwhatever protocol it was you were using.\n\n32\n00:02:11,490 --> 00:02:13,310\nSo, it was kind of protocol-independent.\n\n33\n00:02:13,310 --> 00:02:17,260\nAnd it achieved that protocol\nindependence at the cost of security.\n\n34\n00:02:17,260 --> 00:02:19,420\nIt's not a terribly secure protocol.\n\n35\n00:02:19,420 --> 00:02:22,600\nSo, in your SQL environment, you may or\n\n36\n00:02:22,600 --> 00:02:25,470\nmay not actually need that\nold Named Pipes connectivity.\n\n37\n00:02:25,470 --> 00:02:29,060\nIf you've got legacy software that\nrequires that type of connectivity to your\n\n38\n00:02:29,060 --> 00:02:30,940\nserver, you might need to turn it on.\n\n39\n00:02:30,940 --> 00:02:32,750\nFor most of us though, we don't need it.\n\n40\n00:02:32,750 --> 00:02:35,000\nSo that's something that\nwe might wanna turn off.\n\n41\n00:02:35,000 --> 00:02:39,020\nSo just the general connectivity method\nto the server can be overridden to\n\n42\n00:02:39,020 --> 00:02:40,320\nchange that behavior.\n\n43\n00:02:40,320 --> 00:02:42,270\nIt's super easy to do.\n\n44\n00:02:42,270 --> 00:02:45,585\nAlthough, [LAUGH] in Windows Server 2012,\nthey make it hard.\n\n45\n00:02:45,585 --> 00:02:49,560\n[LAUGH] I hate to say it that way, but\n\n46\n00:02:49,560 --> 00:02:53,130\nSQL server, there's a number of different\nutilities that are associated with it.\n\n47\n00:02:53,130 --> 00:02:57,180\nWhen you install Microsoft SQL server, we\nalways think of the SQL server management\n\n48\n00:02:57,180 --> 00:02:59,050\nstudio because this is where\nwe do most of our work.\n\n49\n00:02:59,050 --> 00:03:00,750\nRight?\nThat's the tool I need.\n\n50\n00:03:00,750 --> 00:03:04,540\nWell, when you install SQL and\nyou go to your Metro UI,\n\n51\n00:03:04,540 --> 00:03:08,540\nwhatever, you don't really see a lot\nof the utilities that are there.\n\n52\n00:03:08,540 --> 00:03:10,240\nAnd I've pinned the Management Studio.\n\n53\n00:03:10,240 --> 00:03:14,810\nYou know, if you do a quick search,\nlike if I just type in SQL right?\n\n54\n00:03:14,810 --> 00:03:18,425\nIt'll search and show me all\nthe commands that have SQL in it and And\n\n55\n00:03:18,425 --> 00:03:22,845\nhere I can see the SQL Server Management\nStudio and the SQL server data tools.\n\n56\n00:03:22,845 --> 00:03:25,965\nWell, the data tools are really only\nshowing up here because I've run them\n\n57\n00:03:25,965 --> 00:03:26,675\nbefore.\n\n58\n00:03:26,675 --> 00:03:29,095\nAnd so now they're kind of in here.\n\n59\n00:03:29,095 --> 00:03:32,945\nBut, there's another utility\nthat's just not showing up.\n\n60\n00:03:32,945 --> 00:03:34,365\nAnd it is there.\n\n61\n00:03:34,365 --> 00:03:38,890\nIf we type in SQL server,\nwe start to get some more stuff.\n\n62\n00:03:38,890 --> 00:03:40,900\nAnd then down there at the bottom\nis the one that I want.\n\n63\n00:03:40,900 --> 00:03:42,500\nLet me bring it up to the top here.\n\n64\n00:03:42,500 --> 00:03:43,340\nThis guy.\n\n65\n00:03:43,340 --> 00:03:45,930\nThe SQL Server Configuration Manager.\n\n66\n00:03:47,210 --> 00:03:51,340\nThat's a utility that allows\nus to configure the overall\n\n67\n00:03:51,340 --> 00:03:53,490\naccess to our SQL server.\n\n68\n00:03:53,490 --> 00:03:56,210\nThe SQL Server Configuration Manager.\n\n69\n00:03:56,210 --> 00:03:57,710\nSo I'm gonna bring that utility up.\n\n70\n00:03:57,710 --> 00:04:04,102\nAnd what I normally do is I normally\npin that to the Start screen,\n\n71\n00:04:04,102 --> 00:04:08,930\njust so that I've got it right there and\nI can get to it a little bit easier.\n\n72\n00:04:08,930 --> 00:04:09,980\nBut basically,\n\n73\n00:04:09,980 --> 00:04:14,260\nit's a really simple utility that we don't\nhave to go into very often, all right?\n\n74\n00:04:14,260 --> 00:04:18,600\nFirst off, it gives us an easy\nplace to manage our SQL services.\n\n75\n00:04:18,600 --> 00:04:21,110\nWhen we installed SQL server,\n\n76\n00:04:21,110 --> 00:04:25,600\nit gave us a chance to provide services\nand user accounts associated with them.\n\n77\n00:04:25,600 --> 00:04:27,562\nIt created managed service accounts for\nus.\n\n78\n00:04:27,562 --> 00:04:29,270\nWhat if you want to change that later on?\n\n79\n00:04:29,270 --> 00:04:33,680\nWell, you can do that right\nhere under SQL Server Services.\n\n80\n00:04:33,680 --> 00:04:35,900\nIt's just like the services utility.\n\n81\n00:04:35,900 --> 00:04:41,820\nSo, if I were to go into my\nAdministrative Tools and Services here,\n\n82\n00:04:41,820 --> 00:04:46,970\nI see all the various services on my\nsystem, including the SQL ones right here.\n\n83\n00:04:48,210 --> 00:04:50,680\nSo, when I go into\nthe SQL Server Configuration Manager,\n\n84\n00:04:50,680 --> 00:04:52,520\nit's showing me the same thing.\n\n85\n00:04:52,520 --> 00:04:56,400\nIt's just filtering it so\nI only see the SQL services.\n\n86\n00:04:56,400 --> 00:04:59,150\nThat makes life a little bit easier for\nme.\n\n87\n00:04:59,150 --> 00:05:03,390\nI can see what's running, what isn't\nrunning, what's automatic, what's manual.\n\n88\n00:05:03,390 --> 00:05:06,160\nI can change them if I\ndouble-click on them.\n\n89\n00:05:06,160 --> 00:05:08,860\nI get the screens to change it,\njust like in the Services Panel.\n\n90\n00:05:08,860 --> 00:05:11,970\nSo, this is just a filtered\nview of my services.\n\n91\n00:05:15,250 --> 00:05:18,440\nI can start and stop these services if I\nwant, I can change their startup behavior,\n\n92\n00:05:18,440 --> 00:05:21,680\nand I can change their login,\nwho it is they're logging in as.\n\n93\n00:05:21,680 --> 00:05:23,570\nSo that's all right here.\n\n94\n00:05:23,570 --> 00:05:27,110\nThe other things over here though,\nrelate to how people connect.\n\n95\n00:05:27,110 --> 00:05:30,700\nAnd when people connect to your server,\nthey're connecting one or way or\n\n96\n00:05:30,700 --> 00:05:32,330\nanother with a client.\n\n97\n00:05:32,330 --> 00:05:36,490\nSo, you'll see over here, there's a few\ndifferent clients that are listed.\n\n98\n00:05:37,820 --> 00:05:41,970\nSo, I've got the SQL Server\nNetwork Configuration 32 bit and\n\n99\n00:05:41,970 --> 00:05:43,800\nNative Client 32-bit.\n\n100\n00:05:43,800 --> 00:05:47,970\nAnd then SQL Server Native Configuration\nand Native Client, not 32 bit,\n\n101\n00:05:47,970 --> 00:05:48,640\nwhat does that mean?\n\n102\n00:05:48,640 --> 00:05:51,050\nWell, that means 64 bit right?\n\n103\n00:05:51,050 --> 00:05:55,310\nSQL server 2012, when I installed it,\nit's a 64 bit service.\n\n104\n00:05:55,310 --> 00:05:58,240\nSo that's how people\nare gonna connect normally.\n\n105\n00:05:58,240 --> 00:06:01,470\nBut then there's the 32 bit connections\nwhich are available for, well,\n\n106\n00:06:01,470 --> 00:06:03,660\n32 bit clients if you've got them.\n\n107\n00:06:03,660 --> 00:06:05,030\nSo that's what I'm seeing right here,\n\n108\n00:06:05,030 --> 00:06:08,550\nis these two different\nsides: 32 bit versus 64 bit.\n\n109\n00:06:08,550 --> 00:06:10,630\nInside of that, I've got two pieces.\n\n110\n00:06:10,630 --> 00:06:13,920\nThe SQL Server Network Configuration.\n\n111\n00:06:13,920 --> 00:06:19,340\nThat's designed for generic connections to\nthe server, things like ODBC and OLEDB,\n\n112\n00:06:19,340 --> 00:06:24,900\nthe older style connections and what they\ndo when they reach out to the server.\n\n113\n00:06:24,900 --> 00:06:28,670\nBut then the SQL Native Client,\nthose are for\n\n114\n00:06:28,670 --> 00:06:32,680\nconnections that are using\nthe actual SQL API calls, right.\n\n115\n00:06:32,680 --> 00:06:34,650\nMicrosoft SQL,\nthey have a software development kit,\n\n116\n00:06:34,650 --> 00:06:39,000\nan SDK, and in it it's got the API or\napplication\n\n117\n00:06:39,000 --> 00:06:43,970\nprogramming interface that allows\ndevelopers to directly interact with SQL.\n\n118\n00:06:43,970 --> 00:06:46,680\nIt's not a standards compliance interface.\n\n119\n00:06:46,680 --> 00:06:48,020\nSo it's not like ODBC.\n\n120\n00:06:48,020 --> 00:06:50,570\nYou can't use it to connect to Oracle or\nwhatever.\n\n121\n00:06:50,570 --> 00:06:54,650\nThe SQL native client communicates to SQL,\nright?\n\n122\n00:06:54,650 --> 00:06:57,980\nAnd, ideally, this is the way\npeople are gonna be connecting.\n\n123\n00:06:57,980 --> 00:07:01,690\nWhen we've run the SQL Query Analyzer,\nyou know we've been doing queries all this\n\n124\n00:07:01,690 --> 00:07:06,480\nshow, we're actually doing that natively,\ndirectly into SQL.\n\n125\n00:07:06,480 --> 00:07:10,900\nBut, I could use the third party software\nand come in using the generic interfaces.\n\n126\n00:07:10,900 --> 00:07:15,580\nSo that's what I'm seeing right here, the\ndivision between generic interfaces and\n\n127\n00:07:15,580 --> 00:07:18,750\nspecific Microsoft SQL interfaces.\n\n128\n00:07:18,750 --> 00:07:20,680\nNow inside of them,\nthings are pretty much the same.\n\n129\n00:07:21,820 --> 00:07:24,860\nI can pick the protocols for my instances.\n\n130\n00:07:24,860 --> 00:07:27,420\nSo like here under Network Configuration,\nI've got my protocols for\n\n131\n00:07:27,420 --> 00:07:32,290\nMSSQLSERVER, which is my default\ninstance and protocols for TESTSQL.\n\n132\n00:07:32,290 --> 00:07:34,820\nThat's that second instance\nthat I brought up.\n\n133\n00:07:34,820 --> 00:07:37,370\nAnd over here you'll see\nthe ways people can connect.\n\n134\n00:07:37,370 --> 00:07:40,710\nThere's three main ways, shared memory.\n\n135\n00:07:40,710 --> 00:07:46,040\nShared memory, that means a program\nthat's running right here on the server.\n\n136\n00:07:46,040 --> 00:07:47,950\nThe network's not involved.\n\n137\n00:07:47,950 --> 00:07:51,882\nIf I'm running a program like\nMicrosoft SQL Management Studio, and\n\n138\n00:07:51,882 --> 00:07:56,583\nthe SQL server is right here on the same\nbox, they connect to each other in memory.\n\n139\n00:07:56,583 --> 00:07:58,570\nThey don't cross the network at all.\n\n140\n00:08:00,460 --> 00:08:03,083\nTCPIP, that's for\npeople that do cross the network.\n\n141\n00:08:03,083 --> 00:08:03,750\nRight?\n\n142\n00:08:03,750 --> 00:08:07,875\nThat's the transmission control.\n\n143\n00:08:07,875 --> 00:08:09,750\nNo, I've got that wrong.\n\n144\n00:08:09,750 --> 00:08:14,970\n[LAUGH] Nate, back me up here.\n\n145\n00:08:14,970 --> 00:08:17,167\nWhat does TCP stand for again?\n\n146\n00:08:17,167 --> 00:08:19,375\n>> Transmission Control Protocol.\n\n147\n00:08:19,375 --> 00:08:20,793\n>> Transmission Control Protocol,\nall right.\n\n148\n00:08:20,793 --> 00:08:23,270\nGuess I had it right then.\n\n149\n00:08:23,270 --> 00:08:25,292\nYou'd think I'd know,\nwe cover that in a ton of shows.\n\n150\n00:08:25,292 --> 00:08:26,375\n>> [INAUDIBLE] later.\n\n151\n00:08:26,375 --> 00:08:29,280\n>> [LAUGH] I'm getting\nmade fun of off set now.\n\n152\n00:08:29,280 --> 00:08:32,820\nBut transmission control protocol\nslash internet protocol, right?\n\n153\n00:08:32,820 --> 00:08:33,850\nIP.\n\n154\n00:08:33,850 --> 00:08:36,870\nThat's communicating\nacross a regular network.\n\n155\n00:08:36,870 --> 00:08:40,650\nSo, TCPIP, that's what most\npeople are going to come in as.\n\n156\n00:08:40,650 --> 00:08:45,655\nNamed pipes, that's the old style\nconnectivity, that works over IPX/SPX,\n\n157\n00:08:45,655 --> 00:08:47,595\nNetBEUI, and so on, it's a very,\n\n158\n00:08:47,595 --> 00:08:51,435\nvery generic form of communicating\nthat's not terribly secure.\n\n159\n00:08:51,435 --> 00:08:54,105\nSo, notice in my configuration here,\nI haven't change this,\n\n160\n00:08:54,105 --> 00:08:55,375\nthese are the defaults.\n\n161\n00:08:55,375 --> 00:09:00,910\nSo, by default, generic connections to my\nserver are allowed via shared memory and\n\n162\n00:09:00,910 --> 00:09:05,700\nTCP/IP They are not allowed,\nvia name pipes.\n\n163\n00:09:05,700 --> 00:09:09,620\nSo, I've got that there,\nthat's how it's set up by default.\n\n164\n00:09:09,620 --> 00:09:11,090\nI'm going to change this.\n\n165\n00:09:11,090 --> 00:09:13,480\nMaybe I don't want to allow\nnetwork connections at all.\n\n166\n00:09:13,480 --> 00:09:18,980\nMaybe this Sequel server is here\nspecifically to support a web application,\n\n167\n00:09:18,980 --> 00:09:21,900\nand the web application is\nright here on the server too.\n\n168\n00:09:21,900 --> 00:09:26,590\nIn that case, I can disable network\nconnections all together, and\n\n169\n00:09:26,590 --> 00:09:30,960\nby turning that off,\nI've improved the security of my server.\n\n170\n00:09:30,960 --> 00:09:35,480\nI don't have to worry about somebody\ntrying to actively jump in and\n\n171\n00:09:35,480 --> 00:09:39,500\naccess my SQL Server They'll have\nto hack the web app instead.\n\n172\n00:09:39,500 --> 00:09:43,460\nNow it's disabled, connections will\nonly be allowed via the web app.\n\n173\n00:09:43,460 --> 00:09:45,720\nVia the web app running\nright here in this system.\n\n174\n00:09:45,720 --> 00:09:46,220\nShared memory.\n\n175\n00:09:47,450 --> 00:09:51,100\nSo, you can manipulate that to\nreflect whatever your environment is.\n\n176\n00:09:51,100 --> 00:09:53,520\nYou need to change this to be appropriate.\n\n177\n00:09:53,520 --> 00:09:54,280\nThese right here.\n\n178\n00:09:54,280 --> 00:09:57,750\nThese are just affecting\nthe generic applications.\n\n179\n00:09:57,750 --> 00:10:01,890\nI've got the same thing down here for\nmy native applications.\n\n180\n00:10:01,890 --> 00:10:04,350\nSo, under the native side,\nI can go to client protocols and\n\n181\n00:10:04,350 --> 00:10:07,660\nI see the same thing: Shared Memory,\nTCIP, and Named Pipes.\n\n182\n00:10:07,660 --> 00:10:10,240\nNow, it is a little bit\ndifferent on this screen.\n\n183\n00:10:10,240 --> 00:10:13,530\nNotice how it's, well,\nfirst of all, they're all enabled.\n\n184\n00:10:13,530 --> 00:10:19,100\nThey're all enabled because the native\nclient has extra security attached to it.\n\n185\n00:10:19,100 --> 00:10:22,950\nSo, while named Pipes has weaker security,\nthe native client makes up for\n\n186\n00:10:22,950 --> 00:10:25,250\nthat by securing our communications.\n\n187\n00:10:25,250 --> 00:10:28,170\nSo, we're taking care of there so\nthey are all turned on.\n\n188\n00:10:28,170 --> 00:10:29,800\nBut there's also an order.\n\n189\n00:10:29,800 --> 00:10:31,820\nThis is the order of preference.\n\n190\n00:10:31,820 --> 00:10:34,570\nWhen somebody connects it prefers\nto do shared memory first.\n\n191\n00:10:34,570 --> 00:10:37,740\nIt prefers to support applications\nright here on the machine.\n\n192\n00:10:37,740 --> 00:10:40,710\nBut if not it will do TCP/IP second.\n\n193\n00:10:40,710 --> 00:10:42,130\nAnd named Pipes third.\n\n194\n00:10:42,130 --> 00:10:44,800\nAnd so\nthat's the order of preference in here.\n\n195\n00:10:44,800 --> 00:10:46,590\nAnd we can manipulate that if we need to.\n\n196\n00:10:46,590 --> 00:10:48,620\nSee how you've got this order option here?\n\n197\n00:10:48,620 --> 00:10:52,830\nAnd we can start to move them up and down\nbased on what our actual preference is.\n\n198\n00:10:56,180 --> 00:10:58,140\nAll right, and then you have aliases.\n\n199\n00:10:58,140 --> 00:11:02,530\nThis is if we need to have more than one\nname attached to a connection mechanism.\n\n200\n00:11:02,530 --> 00:11:04,120\nMost people don't use this.\n\n201\n00:11:04,120 --> 00:11:07,640\nIt was useful if you had a server\npublished with one name, and\n\n202\n00:11:07,640 --> 00:11:09,810\nyou want to make it\naccessible via the internet.\n\n203\n00:11:09,810 --> 00:11:13,200\nSo, its got like a public domain\nname out on the internet, and\n\n204\n00:11:13,200 --> 00:11:14,300\nyou want to attach that.\n\n205\n00:11:14,300 --> 00:11:17,110\nIt's a terrible idea, so\nmost people ever don't use this.\n\n206\n00:11:17,110 --> 00:11:19,030\nBut, you might have a special case for\n\n207\n00:11:19,030 --> 00:11:20,790\nthat, and\nyou've got that functionality there.\n\n208\n00:11:22,060 --> 00:11:26,090\nAll right, so the SQL Server Configuration\nManager, not a lot in there, right?\n\n209\n00:11:26,090 --> 00:11:30,750\nNot a lot of utilities or options or\nanything like that in here.\n\n210\n00:11:30,750 --> 00:11:31,900\nBut it is important.\n\n211\n00:11:31,900 --> 00:11:35,180\nWe can turn off some of the different\nfunctionality we might not need, and\n\n212\n00:11:35,180 --> 00:11:36,580\nthat helps to secure our server.\n\n213\n00:11:39,090 --> 00:11:45,745\nAll right, the other thing that we need\nto do is secure our user accounts.\n\n214\n00:11:45,745 --> 00:11:50,290\nEveryday I've come into the office, and\nI've launched the SQL management studio.\n\n215\n00:11:50,290 --> 00:11:53,260\nAnd I've logged in as one of two people.\n\n216\n00:11:53,260 --> 00:11:56,320\nI've either logged in as SA, right.\n\n217\n00:11:56,320 --> 00:11:58,980\nSA is the system\nadministrator built into SQL.\n\n218\n00:11:58,980 --> 00:12:00,550\nThat means I have full access.\n\n219\n00:12:00,550 --> 00:12:02,930\nTest to everything on this server.\n\n220\n00:12:02,930 --> 00:12:07,450\nOr, I've logged in as\nthe system administrator.\n\n221\n00:12:07,450 --> 00:12:09,900\nNot SA but administrator in Windows.\n\n222\n00:12:09,900 --> 00:12:13,680\nThe administrator in Windows has full\naccess to the underlying server and\n\n223\n00:12:13,680 --> 00:12:17,650\nas a result has full access\nto the SQL instance also.\n\n224\n00:12:17,650 --> 00:12:18,610\nAll right?\n\n225\n00:12:18,610 --> 00:12:21,270\nI've been logging in as those accounts\nbecause I wanted to make sure I had access\n\n226\n00:12:21,270 --> 00:12:26,120\nto everything, but the problem with that\nis every time I log in, There's a risk.\n\n227\n00:12:26,120 --> 00:12:29,010\nThere's a risk that somebody could\nhave intercepted my login credentials.\n\n228\n00:12:29,010 --> 00:12:32,180\nThey could have watched over my\nshoulder as I typed in my password.\n\n229\n00:12:32,180 --> 00:12:36,490\nThey could have put a keylogger\non my system and got my password.\n\n230\n00:12:36,490 --> 00:12:39,420\nAnd once they have that,\nthey've got full access to the database.\n\n231\n00:12:39,420 --> 00:12:42,470\nThey don't have to hack it or\nbreak in, they've got the credentials,\n\n232\n00:12:42,470 --> 00:12:46,390\nthey've got the key to open that door,\nwithout having a forced entry.\n\n233\n00:12:46,390 --> 00:12:47,780\nSo that's a big deal.\n\n234\n00:12:47,780 --> 00:12:51,840\nSo you shouldn't be logging in as\nan administrator on a regular basis.\n\n235\n00:12:51,840 --> 00:12:56,030\nYou should be logging in as a regular\nuser as you interact with the system and\n\n236\n00:12:56,030 --> 00:12:58,190\nonly using administrative\naccounts when you need them.\n\n237\n00:12:58,190 --> 00:13:02,690\nThe only problem is, we don't have\nany regular user accounts by default.\n\n238\n00:13:02,690 --> 00:13:07,710\nWhen you install Sequel, it asked us\nwho we wanted to be administrators.\n\n239\n00:13:07,710 --> 00:13:12,470\nAnd it asked us, if we wanted to use,\njust Windows accounts.\n\n240\n00:13:12,470 --> 00:13:16,040\nOr if we wanted to use Windows and\nSQL accounts.\n\n241\n00:13:16,040 --> 00:13:18,380\nAnd that's it.\nThat's all it asked us during the install.\n\n242\n00:13:18,380 --> 00:13:20,340\nAfter that we're left\nwith out Admin accounts.\n\n243\n00:13:20,340 --> 00:13:21,990\nSo we need to go back and secure things.\n\n244\n00:13:21,990 --> 00:13:23,640\nWe need to create more accounts in there.\n\n245\n00:13:23,640 --> 00:13:25,500\nWe need to add more people.\n\n246\n00:13:25,500 --> 00:13:28,230\nWith much more restricted permissions.\n\n247\n00:13:28,230 --> 00:13:31,980\nMicrosoft doesn't do that for us because\nthey don't know what our use scenario is,\n\n248\n00:13:31,980 --> 00:13:33,950\nthey don't know how we're going\nto be using the server so\n\n249\n00:13:33,950 --> 00:13:37,450\nit's up to us to go back and fix that.\n\n250\n00:13:37,450 --> 00:13:40,620\nSo, that's a real important step\nthat we're going to take a look at,\n\n251\n00:13:40,620 --> 00:13:41,500\nright here in this show.\n\n252\n00:13:41,500 --> 00:13:45,890\nOne of the things that I mentioned a\nmoment ago was the windows authentication\n\n253\n00:13:45,890 --> 00:13:49,480\nverses widows and sequel authentication.\n\n254\n00:13:49,480 --> 00:13:54,820\nDuring the installer, it defaults to doing\na Windows authentication only model.\n\n255\n00:13:54,820 --> 00:13:58,800\nAnd that means that when we login to\nthis server, we've got to provide\n\n256\n00:13:58,800 --> 00:14:02,660\na user account, and that user account has\nto be of a valid Windows user account.\n\n257\n00:14:03,690 --> 00:14:06,100\nThat works out for most people,\nand it's a great way to do it.\n\n258\n00:14:06,100 --> 00:14:09,380\nBecause of Windows user accounts,\nwe can enforce passwords policies,\n\n259\n00:14:09,380 --> 00:14:12,960\nmake people reset them\nevery 60 days ,or whatever.\n\n260\n00:14:12,960 --> 00:14:15,030\nWe can have a single sign on.\n\n261\n00:14:15,030 --> 00:14:18,760\nSomebody logs into the computer with one\naccount, they use the same account in SQL.\n\n262\n00:14:18,760 --> 00:14:20,250\nRight?\nSo, it really works out.\n\n263\n00:14:20,250 --> 00:14:23,700\nYou want to use those Windows\naccounts because it makes sense.\n\n264\n00:14:23,700 --> 00:14:26,920\nIt's easier on our users,\nand it's more secure.\n\n265\n00:14:26,920 --> 00:14:30,820\nBut there are special case scenarios\nwhere we might wanna have an account\n\n266\n00:14:30,820 --> 00:14:32,850\nthat has access to SQL.\n\n267\n00:14:32,850 --> 00:14:36,390\nBut, doesn't have a Windows account, and\n\n268\n00:14:36,390 --> 00:14:40,090\nif you want that,\nyou'll need to use sequel authentication.\n\n269\n00:14:40,090 --> 00:14:41,140\nSequel authentication,\n\n270\n00:14:41,140 --> 00:14:44,730\nthe user account is stored right\nin the database and that's it.\n\n271\n00:14:44,730 --> 00:14:48,120\nIt doesn't exist in Windows, so\nthat user can't log into your server,\n\n272\n00:14:48,120 --> 00:14:50,070\ncan't log into your workstation.\n\n273\n00:14:50,070 --> 00:14:54,050\nBut they can connect to the database and\ninteract with it, right?\n\n274\n00:14:54,050 --> 00:14:58,270\nAnd that's often times what's\nhappening with websites like Amazon.\n\n275\n00:14:58,270 --> 00:15:02,120\nWhen you go to Amazon and you log\nin to their site You're logging in,\n\n276\n00:15:02,120 --> 00:15:05,520\nand your user account\nexists in their database.\n\n277\n00:15:05,520 --> 00:15:09,580\nBut your user account doesn't exist\nin their directory service inside of\n\n278\n00:15:09,580 --> 00:15:10,460\ntheir company.\n\n279\n00:15:10,460 --> 00:15:13,150\nYou couldn't walk into the Amazon offices.\n\n280\n00:15:13,150 --> 00:15:14,860\nWell, you probably just couldn't do that,\nright?\n\n281\n00:15:14,860 --> 00:15:17,850\nBut let's say you broke in, and\nyou actually got into the Amazon offices.\n\n282\n00:15:17,850 --> 00:15:20,820\nYou couldn't sit down at a computer,\nand log in with your username and\n\n283\n00:15:20,820 --> 00:15:22,250\npassword from their website.\n\n284\n00:15:22,250 --> 00:15:23,500\nIt doesn't exist there.\n\n285\n00:15:23,500 --> 00:15:26,260\nIt just exists in the database.\n\n286\n00:15:26,260 --> 00:15:28,360\nSo that's a pretty useful\nconfiguration option.\n\n287\n00:15:28,360 --> 00:15:30,700\nBut it's not on by default.\n\n288\n00:15:30,700 --> 00:15:33,810\nAnd if you just click Next a bunch\nof times doing the install,\n\n289\n00:15:33,810 --> 00:15:38,230\nyour SQL server will be defaulting\nto just Windows accounts.\n\n290\n00:15:38,230 --> 00:15:39,440\nFortunately, you can change it.\n\n291\n00:15:39,440 --> 00:15:41,130\nYou can change it after the fact.\n\n292\n00:15:41,130 --> 00:15:43,940\nIt is done at the server level though.\n\n293\n00:15:43,940 --> 00:15:47,270\nSo, you can't change it per database,\nit's done at the server level.\n\n294\n00:15:47,270 --> 00:15:50,343\nAnd when I say at the server level I\nreally mean at the instance level.\n\n295\n00:15:50,343 --> 00:15:53,332\nIf I have multiple\ninstances on this server,\n\n296\n00:15:53,332 --> 00:15:56,093\neach instance could be set differently.\n\n297\n00:15:56,093 --> 00:15:58,625\nSo I'm connected to my\ndefault instance right now.\n\n298\n00:15:58,625 --> 00:16:05,375\nAnd if I right-click on the server name\nhere, WIN SQL01, I can go to Properties.\n\n299\n00:16:05,375 --> 00:16:06,691\nAnd in the properties for it,\n\n300\n00:16:06,691 --> 00:16:10,100\nI'll start to see some of the different\noptions that are available.\n\n301\n00:16:10,100 --> 00:16:12,310\nIf I go down to Security,\n\n302\n00:16:12,310 --> 00:16:16,980\nhere's where I'm gonna see the options\nfrom the setup wizard originally.\n\n303\n00:16:16,980 --> 00:16:19,990\nSo it's gonna show here\nhow I'm authenticating.\n\n304\n00:16:19,990 --> 00:16:23,180\nYou can choose Windows Authentication,\nthat's the default.\n\n305\n00:16:23,180 --> 00:16:25,200\nOr you can choose what\nI did during the setup,\n\n306\n00:16:25,200 --> 00:16:28,680\nwhich is SQL Server and\nWindows Authentication.\n\n307\n00:16:29,860 --> 00:16:33,400\nSo we can change that right here and\nmodify that behavior.\n\n308\n00:16:33,400 --> 00:16:35,760\nNow we're supporting both\ntypes of authentication.\n\n309\n00:16:36,780 --> 00:16:39,450\nNow, it looks like I'm doing it\n\n310\n00:16:39,450 --> 00:16:43,350\non the server as a whole here because\nI'm connected to the default instance.\n\n311\n00:16:43,350 --> 00:16:48,050\nBut let me get connected to my\nother instance, to that test SQL.\n\n312\n00:16:48,050 --> 00:16:52,880\nAnd actually, let me log in with\nmy Windows account on that one.\n\n313\n00:16:54,750 --> 00:16:55,610\nThere we go.\n\n314\n00:16:55,610 --> 00:16:59,990\nSo I'm connected to my default instance.\n\n315\n00:16:59,990 --> 00:17:04,200\nAnd you'll see here where it looks like\nI'm connected to the server, WIN-SQL01,\n\n316\n00:17:04,200 --> 00:17:05,510\ncuz it's the default.\n\n317\n00:17:05,510 --> 00:17:10,770\nBut here, I'm connected to\nWIN-SQL01\\TESTSQL, that other instance.\n\n318\n00:17:10,770 --> 00:17:11,883\nAnd I can pull up its properties.\n\n319\n00:17:16,237 --> 00:17:22,160\nAnd in its properties, I can go\ninto Security, and I can change it.\n\n320\n00:17:22,160 --> 00:17:26,130\nAnd maybe I want TESTSQL to be\nWindows Authentication only,\n\n321\n00:17:26,130 --> 00:17:29,230\nno authentication inside\nof the database itself.\n\n322\n00:17:29,230 --> 00:17:30,297\nSo, just using Windows Authentication.\n\n323\n00:17:30,297 --> 00:17:33,510\nI can flip that mode and I'll say OK.\n\n324\n00:17:33,510 --> 00:17:36,580\nIt's gonna make me restart,\nyou've gotta restart the SQL Server for\n\n325\n00:17:36,580 --> 00:17:38,270\nthat to take effect, it's a big change.\n\n326\n00:17:39,310 --> 00:17:40,429\nSo I'll let it restart.\n\n327\n00:17:43,006 --> 00:17:47,028\nAnd while it's restarting, I'm just gonna\ngo and double check my other instance,\n\n328\n00:17:47,028 --> 00:17:51,360\nwhich is warning me about restarting\nthe agent also, which I'm fine with that.\n\n329\n00:17:51,360 --> 00:17:54,270\nSo it's gonna restart, and\nwe'll check the other instance.\n\n330\n00:17:54,270 --> 00:17:56,060\nIt will still be set to mix mode.\n\n331\n00:17:57,290 --> 00:18:02,260\nSo if I go into its properties and\nsecurity, it's still set to SQL Server and\n\n332\n00:18:02,260 --> 00:18:04,030\nWindows Authentication.\n\n333\n00:18:04,030 --> 00:18:06,110\nNow, I call that mixed mode.\n\n334\n00:18:06,110 --> 00:18:06,720\nI'm glad I did that.\n\n335\n00:18:06,720 --> 00:18:09,050\nI didn't think about it, but on the exam,\n\n336\n00:18:09,050 --> 00:18:11,650\nyou may see this referred\nto as mixed mode.\n\n337\n00:18:11,650 --> 00:18:13,990\nThat's what it used to say in\nthe older versions of SQL.\n\n338\n00:18:13,990 --> 00:18:15,990\nThey actually say it right here,\nit's mixed mode.\n\n339\n00:18:15,990 --> 00:18:18,560\nAnd that just means that\nyou get both Windows and\n\n340\n00:18:18,560 --> 00:18:20,970\nSQL authentication, mixed Authentication.\n\n341\n00:18:22,130 --> 00:18:23,950\nIt's up to you which one you wanna choose.\n\n342\n00:18:23,950 --> 00:18:28,010\nTechnically, Windows Authentication\nonly is the more secure model, but\n\n343\n00:18:28,010 --> 00:18:31,190\nif you're trying to do application\nauthentication and things like that,\n\n344\n00:18:31,190 --> 00:18:34,360\nyou may not want to create Windows\naccounts for some of your applications.\n\n345\n00:18:34,360 --> 00:18:38,180\nAnd in that scenario, you wanna\ndo the SQL Server Authentication.\n\n346\n00:18:38,180 --> 00:18:39,570\nYou can change it whenever you want.\n\n347\n00:18:39,570 --> 00:18:43,440\nIt does require a restart of the server,\nso that's a little bit of a downtime.\n\n348\n00:18:43,440 --> 00:18:46,820\nBut other than that, you can change it and\nset it as you need it.\n\n349\n00:18:48,840 --> 00:18:51,288\nThere's a few other options on\nhere that are worth pointing out.\n\n350\n00:18:51,288 --> 00:18:54,145\nYou'll notice the Login auditing.\n\n351\n00:18:54,145 --> 00:18:58,080\nBy default, SQL only logs failed logins.\n\n352\n00:18:58,080 --> 00:19:02,785\nWell, any security researchers worth their\nsalt will tell you that failed logins,\n\n353\n00:19:02,785 --> 00:19:05,005\nthere's not really a lot of\npoint in monitoring them.\n\n354\n00:19:05,005 --> 00:19:10,465\nA failed login means that you had\nsecurity in place, and it worked.\n\n355\n00:19:10,465 --> 00:19:13,980\nSomebody tried to log in and\nthey couldn't.\n\n356\n00:19:13,980 --> 00:19:15,600\nThey failed to log in.\n\n357\n00:19:15,600 --> 00:19:19,090\nIf you monitor failed logins,\nthe only thing it really tells you\n\n358\n00:19:19,090 --> 00:19:21,450\nis if somebody's trying to\nbrute force your system.\n\n359\n00:19:21,450 --> 00:19:25,330\nIf you see 5,000 failed\nlogins in the last hour,\n\n360\n00:19:25,330 --> 00:19:27,425\nsomebody's trying to\nbrute force your system.\n\n361\n00:19:27,425 --> 00:19:31,880\nBut it doesn't take monitoring\nfailed logins to see that.\n\n362\n00:19:31,880 --> 00:19:33,980\nYou can just see\nthe elevated login amounts.\n\n363\n00:19:33,980 --> 00:19:35,490\nRight.\nSo I can see that people are logging\n\n364\n00:19:35,490 --> 00:19:37,035\nin much more frequently\nthan they were before.\n\n365\n00:19:37,035 --> 00:19:39,340\nThat'll show a brute force attack, also.\n\n366\n00:19:39,340 --> 00:19:43,030\nWhat's more important\nare successful logins.\n\n367\n00:19:43,030 --> 00:19:47,120\nA successful login means somebody\ntried to login, and they succeeded.\n\n368\n00:19:47,120 --> 00:19:48,030\nNow maybe that's a good thing.\n\n369\n00:19:48,030 --> 00:19:49,570\nMaybe they're supposed to be there.\n\n370\n00:19:49,570 --> 00:19:53,620\nBut if it was somebody who wasn't supposed\nto be there, the fact that they succeeded\n\n371\n00:19:53,620 --> 00:19:57,110\nis far more significant than\nthe fact that they failed.\n\n372\n00:19:57,110 --> 00:19:59,420\nSo that's what we normally want to see.\n\n373\n00:19:59,420 --> 00:20:01,600\nHey, somebody just deleted this table.\n\n374\n00:20:01,600 --> 00:20:03,020\nWho logged in recently?\n\n375\n00:20:03,020 --> 00:20:04,380\nThat's what I wanna know.\n\n376\n00:20:04,380 --> 00:20:05,600\nSomebody just deleted this table.\n\n377\n00:20:05,600 --> 00:20:07,230\nWho failed to log in recently?\n\n378\n00:20:07,230 --> 00:20:09,910\nDoesn't matter, they failed to log in,\nthey couldn't have deleted the table,\n\n379\n00:20:09,910 --> 00:20:11,340\nthey failed to log in.\n\n380\n00:20:11,340 --> 00:20:13,960\nSo monitoring those successes\nare really important.\n\n381\n00:20:13,960 --> 00:20:18,349\nSo in most environments, we're either\ngonna monitor successful logins, or\n\n382\n00:20:18,349 --> 00:20:21,220\nboth failed and successful.\n\n383\n00:20:21,220 --> 00:20:24,615\nThat's a big mistake a lot of people make,\nand you see Microsoft making it here,\n\n384\n00:20:24,615 --> 00:20:28,110\ncuz the default is failed logins only,\nwhich is almost worthless.\n\n385\n00:20:29,120 --> 00:20:31,380\nAnd you don't want to be in\na situation where you're like,\n\n386\n00:20:31,380 --> 00:20:33,070\nman, somebody deleted this table.\n\n387\n00:20:33,070 --> 00:20:34,950\nI wanna know who logged in.\n\n388\n00:20:34,950 --> 00:20:37,120\nOh shoot, it's not turned on,\nit's just failed.\n\n389\n00:20:37,120 --> 00:20:38,450\nLet me go change it.\n\n390\n00:20:38,450 --> 00:20:40,540\nWell, I don't have a history.\n\n391\n00:20:40,540 --> 00:20:43,700\nIt just starts recording\nfrom that moment on.\n\n392\n00:20:43,700 --> 00:20:47,810\nSo you'd rather make this\nchange before a problem occurs,\n\n393\n00:20:47,810 --> 00:20:49,780\nthan to wish you had it afterwards.\n\n394\n00:20:49,780 --> 00:20:53,603\nSo I recommend you at least change it\nto successful, but both failed and\n\n395\n00:20:53,603 --> 00:20:57,850\nsuccessful is really the best,\ncuz then you get the best of both worlds.\n\n396\n00:20:57,850 --> 00:20:59,711\nYou can see if somebody's\ntrying to brute force and\n\n397\n00:20:59,711 --> 00:21:01,320\nyou can track when people\nare in the system.\n\n398\n00:21:03,932 --> 00:21:08,047\nOn the point of logging, when you turn\nthat on it's doing the default logging for\n\n399\n00:21:08,047 --> 00:21:11,080\nSQL Server, and\nthat's usually good enough for us.\n\n400\n00:21:11,080 --> 00:21:14,390\nBut there's a few other options\ndown here at the bottom you'll see,\n\n401\n00:21:14,390 --> 00:21:19,280\nEnable Common Criteria compliance and\nEnable C2 audit tracing.\n\n402\n00:21:20,460 --> 00:21:24,060\nCommon Criteria, which is also called C2,\nthose are both the same things.\n\n403\n00:21:24,060 --> 00:21:27,810\nCommon Criteria and C2 is a US standard.\n\n404\n00:21:27,810 --> 00:21:30,570\nSo in the United States,\nour wonderful government here\n\n405\n00:21:30,570 --> 00:21:35,460\nhas proposed a security standard that I'm\nsure meets all the NSA's requirements.\n\n406\n00:21:35,460 --> 00:21:38,890\nBut basically just dictates\na method of logging\n\n407\n00:21:38,890 --> 00:21:42,390\nthat says you're gonna log this\ninformation in this format,\n\n408\n00:21:42,390 --> 00:21:45,860\nthat's able to be interpreted\nby standard security devices.\n\n409\n00:21:45,860 --> 00:21:49,020\nSo if you have third party\nsecurity monitoring software,\n\n410\n00:21:49,020 --> 00:21:53,970\nit might expect to be getting information\nin the common criteria format.\n\n411\n00:21:53,970 --> 00:21:58,440\nAnd by checking these options here,\nwe ensure that our server is gonna run at\n\n412\n00:21:58,440 --> 00:22:01,950\nthat higher level of security,\nand be producing\n\n413\n00:22:01,950 --> 00:22:06,870\nlogs in a format that's expected by other\ncommon criteria compatible systems.\n\n414\n00:22:06,870 --> 00:22:08,420\nYou may or may not need that, right?\n\n415\n00:22:08,420 --> 00:22:10,610\nif you don't have security\nmonitoring software,\n\n416\n00:22:10,610 --> 00:22:13,630\nthen what this does is actually\nmake the logs harder to read.\n\n417\n00:22:13,630 --> 00:22:15,880\nThey're more difficult\nto interpret as a human.\n\n418\n00:22:15,880 --> 00:22:18,720\nBut if you've got that third party\nsoftware, this is really useful.\n\n419\n00:22:18,720 --> 00:22:23,770\nIf you've got a government regulation\nthat says you have to be C2-compliant,\n\n420\n00:22:23,770 --> 00:22:26,440\nwell, then you'll want to turn these on,\nright.\n\n421\n00:22:26,440 --> 00:22:27,640\nThey're off by default.\n\n422\n00:22:27,640 --> 00:22:29,870\nIt's just another one that\nyou need to turn on yourself.\n\n423\n00:22:29,870 --> 00:22:31,274\nThe earlier you turn it on, the better.\n\n424\n00:22:34,582 --> 00:22:39,480\nAll right, so that's about it as\nfar as our authentication methods.\n\n425\n00:22:39,480 --> 00:22:44,710\nNow during the install, if we chose\nto do the mixed mode authentication,\n\n426\n00:22:44,710 --> 00:22:49,360\nit had us pick a password for\nthe SA account, the system admin account.\n\n427\n00:22:49,360 --> 00:22:51,800\nSo that account is created automatically.\n\n428\n00:22:52,930 --> 00:22:54,090\nThat's really the only one, though.\n\n429\n00:22:54,090 --> 00:22:57,020\nThere's a handful of other server's\naccounts, but the only user that\n\n430\n00:22:57,020 --> 00:23:01,750\nyou have with Sequel Authentication is SA,\nand then you can go and create more.\n\n431\n00:23:01,750 --> 00:23:05,070\nIf you chose Windows Authentication\nthough, you've already got\n\n432\n00:23:05,070 --> 00:23:09,050\nall of your users, hundreds, thousands,\nhowever many users, they already exist.\n\n433\n00:23:09,050 --> 00:23:12,520\nBut that doesn't mean they have\npermissions inside of SQL.\n\n434\n00:23:12,520 --> 00:23:16,265\nSo if we're doing Windows Authentication,\nour next step is to go and\n\n435\n00:23:16,265 --> 00:23:19,755\nassign permissions to our users so\nthey can access the system.\n\n436\n00:23:19,755 --> 00:23:22,715\nIf we're doing SQL Authentication,\nour next step is to go and\n\n437\n00:23:22,715 --> 00:23:27,525\ncreate the users we want, and then we give\nthem the permissions to access the system.\n\n438\n00:23:27,525 --> 00:23:28,705\nSo we're gonna take a look at that.\n\n439\n00:23:28,705 --> 00:23:32,765\nSQL handles user accounts a little\nbit differently than most systems, so\n\n440\n00:23:32,765 --> 00:23:34,505\nit is a kind of a bizarre thing.\n\n441\n00:23:34,505 --> 00:23:37,685\nBut that's what we're gonna take a look\nat next as we move through securing\n\n442\n00:23:37,685 --> 00:23:39,070\nour system.\n\n443\n00:23:39,070 --> 00:23:41,790\nThat being said, it's probably a pretty\ngood spot to stop and take a break.\n\n444\n00:23:41,790 --> 00:23:43,330\nSo why don't we take a breather here.\n\n445\n00:23:43,330 --> 00:23:45,920\nWhen we get back, we're gonna\nstart working with our account.\n\n446\n00:23:45,920 --> 00:23:47,110\nSo stay tuned.\n\n447\n00:23:47,110 --> 00:23:48,065\nWe'll be back after this.\n\n448\n00:23:48,065 --> 00:23:51,611\n[SOUND] All right,\n\n449\n00:23:51,611 --> 00:23:57,292\nwelcome back, everybody.\n\n450\n00:23:57,292 --> 00:24:00,750\nOkay, so now we're ready to\ncreate some user accounts.\n\n451\n00:24:00,750 --> 00:24:02,917\nWe've been talking about all this stuff so\nlong.\n\n452\n00:24:02,917 --> 00:24:04,292\nLet's get some user accounts in here.\n\n453\n00:24:04,292 --> 00:24:08,151\nWell if we're gonna be doing the Windows\nauthentication side of things well,\n\n454\n00:24:08,151 --> 00:24:11,191\nwe need to have some Windows accounts and\nthis is a new server so\n\n455\n00:24:11,191 --> 00:24:13,121\nI just have an Administrator account,\n\n456\n00:24:13,121 --> 00:24:16,000\nI'm gonna whip up a Windows\nuser account to be able to use.\n\n457\n00:24:17,820 --> 00:24:21,033\nSo let me just get into my computer\nmanagement screen here and\n\n458\n00:24:21,033 --> 00:24:22,042\nwe'll create it.\n\n459\n00:24:22,042 --> 00:24:24,638\nNow i could do this with\nactive directory accounts but\n\n460\n00:24:24,638 --> 00:24:27,300\nthis server isn't joined to a domain.\n\n461\n00:24:27,300 --> 00:24:30,710\nSo i'm just going to do it with a regular\nuser account right here on this system.\n\n462\n00:24:30,710 --> 00:24:35,120\nI'll just browse right into my local users\nand you'll see where I got administrators,\n\n463\n00:24:35,120 --> 00:24:36,680\nguests and so on.\n\n464\n00:24:36,680 --> 00:24:42,030\nSo, I'll just create a new user\nwhich I will call me, dpezet.\n\n465\n00:24:42,030 --> 00:24:43,650\nUser is Don Pezet.\n\n466\n00:24:43,650 --> 00:24:46,910\nI'll set a password for\nmyself that I'll have to remember.\n\n467\n00:24:49,700 --> 00:24:52,110\nAnd I'll say that my\n\n468\n00:24:52,110 --> 00:24:54,420\npassword doesn't have to change because\nI just typed it in, so that's fine.\n\n469\n00:24:54,420 --> 00:24:58,000\nSo, here I've got a Windows user account.\n\n470\n00:24:58,000 --> 00:25:01,200\nI'm not putting myself in any\nspecial groups or anything just yet.\n\n471\n00:25:01,200 --> 00:25:03,260\nWe'll talk about those a little bit later.\n\n472\n00:25:03,260 --> 00:25:05,380\nBut I got that Windows user account.\n\n473\n00:25:05,380 --> 00:25:06,520\nAlright?\n\n474\n00:25:06,520 --> 00:25:10,600\nI now want that user to have\naccess to my Sequel server.\n\n475\n00:25:10,600 --> 00:25:12,710\nWell, when we get access\nin the Sequel server,\n\n476\n00:25:12,710 --> 00:25:16,100\nwe need to think about what\naccess the user needs.\n\n477\n00:25:16,100 --> 00:25:20,180\nYou always want to exercise what's\ncalled the principle of least privilege.\n\n478\n00:25:20,180 --> 00:25:22,040\nThink about the access that user needs,\nand\n\n479\n00:25:22,040 --> 00:25:26,450\ngive them the bare minimum to\nlet them have that access.\n\n480\n00:25:26,450 --> 00:25:30,160\nDo they need to be able to\nread data from just one table?\n\n481\n00:25:30,160 --> 00:25:31,960\nDon't give them access\nto the whole database,\n\n482\n00:25:31,960 --> 00:25:34,890\njust give them access to the one table,\nall right.\n\n483\n00:25:34,890 --> 00:25:39,130\nDo they need access to two databases,\nbut not two other databases?\n\n484\n00:25:39,130 --> 00:25:40,610\nLimit their access, right?\n\n485\n00:25:40,610 --> 00:25:43,200\nYou don't want to go crazy and\ngive somebody more access than they need\n\n486\n00:25:43,200 --> 00:25:46,110\nbecause they'll make mistakes,\neven if it's unintentional, right?\n\n487\n00:25:46,110 --> 00:25:48,740\nNot malicious,\nthey just kind of browse around and\n\n488\n00:25:48,740 --> 00:25:50,970\nmake changes in databases\nthat they shouldn't.\n\n489\n00:25:50,970 --> 00:25:52,020\nIt happens.\n\n490\n00:25:52,020 --> 00:25:56,050\nIt is simple mistakes like I did in an\nearlier show, and I don't remember which\n\n491\n00:25:56,050 --> 00:25:59,650\nshow but I was creating a table and\nI had written a script to do it, and\n\n492\n00:25:59,650 --> 00:26:02,250\nI accidentally did it on\nthe master database, right,\n\n493\n00:26:02,250 --> 00:26:05,520\nyou guys might remember that, so I\ncreated this table on the master database\n\n494\n00:26:05,520 --> 00:26:08,890\ninstead of the database I was working on,\nit was a mistake I fixed it,\n\n495\n00:26:08,890 --> 00:26:14,070\nright, but I was able to do that\nbecause I was logged in as an admin.\n\n496\n00:26:14,070 --> 00:26:15,910\nI shouldn't have been\nlogged in as an Admin.\n\n497\n00:26:15,910 --> 00:26:18,640\nI should have been logged in as my\nregular user that wouldn't have had\n\n498\n00:26:18,640 --> 00:26:20,270\naccess to the master data base.\n\n499\n00:26:20,270 --> 00:26:22,450\nThat wouldn't have been\nable to make that change.\n\n500\n00:26:22,450 --> 00:26:25,030\nThen, when I tried to do it I\nwould've just got an error,\n\n501\n00:26:25,030 --> 00:26:26,330\nsaying I didn't have permissions.\n\n502\n00:26:26,330 --> 00:26:29,060\nAnd I would have said, oh shoot,\nI tried to write to the wrong data base.\n\n503\n00:26:29,060 --> 00:26:30,300\nLet me fix that.\n\n504\n00:26:30,300 --> 00:26:31,540\nBut instead it let me.\n\n505\n00:26:31,540 --> 00:26:32,920\nI made that change.\n\n506\n00:26:32,920 --> 00:26:37,050\nThat's the kind of mistake that can happen\nwhen you give somebody too much access.\n\n507\n00:26:38,230 --> 00:26:42,800\nNow in SQL, when we go to give access,\nthe first thing we need to think about is\n\n508\n00:26:42,800 --> 00:26:46,650\nare we giving them access\nto a single database, or\n\n509\n00:26:46,650 --> 00:26:50,528\nto multiple databases,\nor to the server itself?\n\n510\n00:26:50,528 --> 00:26:51,100\nThere's going to\n\n511\n00:26:51,100 --> 00:26:54,630\nbe some people that are admins that\nneed to connect to the server itself.\n\n512\n00:26:54,630 --> 00:26:58,970\nWhen we create user access inside\nof SQL there’s two levels.\n\n513\n00:26:58,970 --> 00:27:02,020\nThere’s the database level,\nand the server level.\n\n514\n00:27:02,020 --> 00:27:05,030\nIf you’re giving access to somebody\njust to a single database,\n\n515\n00:27:05,030 --> 00:27:06,230\nyou skip the server level.\n\n516\n00:27:06,230 --> 00:27:10,140\nAnd you go straight to the database, and\nyou attach their user account there.\n\n517\n00:27:10,140 --> 00:27:14,050\nBut if you’re going to give them\naccess to more than one database,\n\n518\n00:27:14,050 --> 00:27:17,330\nit makes sense to attach them\nto the server as a whole.\n\n519\n00:27:17,330 --> 00:27:19,570\nOr if you want to give them\naccess to the server, right?\n\n520\n00:27:19,570 --> 00:27:22,390\nIf they're an admin, then you want to give\nthem access to the server as a whole.\n\n521\n00:27:23,450 --> 00:27:28,820\nAt the server side, if I go to my server,\nso here I'm on Winsql01, and\n\n522\n00:27:28,820 --> 00:27:32,730\nI go down to security, you'll see logins.\n\n523\n00:27:34,120 --> 00:27:38,150\nSo logins,\nthat's people who are allowed to login and\n\n524\n00:27:38,150 --> 00:27:41,000\nconnect directly to the server.\n\n525\n00:27:42,700 --> 00:27:44,170\nWhat about the database?\n\n526\n00:27:44,170 --> 00:27:47,270\nWell if I browse to a database and\n\n527\n00:27:47,270 --> 00:27:51,890\nI go into my products database I've\ngot a security folder in here also.\n\n528\n00:27:53,110 --> 00:27:57,520\nSo there's security under the server and\nsecurity under the database.\n\n529\n00:27:57,520 --> 00:28:02,230\nThe difference is, under security\non the database, I've got users.\n\n530\n00:28:02,230 --> 00:28:04,790\nAt the server level, we have logins.\n\n531\n00:28:04,790 --> 00:28:07,610\nAt the database, we have users.\n\n532\n00:28:07,610 --> 00:28:10,760\nIf I give somebody a user account\nright there on the database,\n\n533\n00:28:10,760 --> 00:28:15,100\nthen they just have access to\nthat database and nothing else.\n\n534\n00:28:15,100 --> 00:28:18,590\nThey can't connect directly to the server,\nthey can't connect to any other databases.\n\n535\n00:28:18,590 --> 00:28:23,030\nThey've been partitioned into\njust this one database and\n\n536\n00:28:23,030 --> 00:28:25,430\nthat's usually what we want.\n\n537\n00:28:25,430 --> 00:28:29,110\nBut if it's a user that needs\naccess to more than one database,\n\n538\n00:28:29,110 --> 00:28:33,110\nthen we can create them\na login at the server level.\n\n539\n00:28:33,110 --> 00:28:37,740\nAnd from that log in we can then give\nthem access to more than one database.\n\n540\n00:28:37,740 --> 00:28:40,860\nAnd that way we're not having to redefine\ntheir user account over and over and\n\n541\n00:28:40,860 --> 00:28:43,410\nover again for each database that's there.\n\n542\n00:28:43,410 --> 00:28:47,420\nSo where we go is going to depend on\nthe type of access we want to get and so\n\n543\n00:28:47,420 --> 00:28:49,130\nyou kind of just have memorize this and\n\n544\n00:28:49,130 --> 00:28:53,959\nremember, at the server level we have log\nins, at the database level we have users.\n\n545\n00:28:55,010 --> 00:28:58,620\nIf you're running in Windows\nauthentication mode then these logins and\n\n546\n00:28:58,620 --> 00:29:03,350\nusers are going to match up to Windows\nuser accounts and Windows groups.\n\n547\n00:29:03,350 --> 00:29:06,410\nBut if it you also have SQL\nauthentication turned on,\n\n548\n00:29:06,410 --> 00:29:08,710\nit could match up to Windows users or\ngroups.\n\n549\n00:29:08,710 --> 00:29:13,150\nBut it could also match up\nto users inside of SQL.\n\n550\n00:29:13,150 --> 00:29:15,160\nWe don't have groups inside of SQL,\n\n551\n00:29:15,160 --> 00:29:17,720\nwe have some things that\nsort of act like groups.\n\n552\n00:29:17,720 --> 00:29:20,780\nWe'll see them a little bit later called\nrolls, but they're not truly groups.\n\n553\n00:29:20,780 --> 00:29:22,680\nSo, it's a little bit different there, but\n\n554\n00:29:22,680 --> 00:29:25,970\nin Windows you have groups that you can\ncombine multiple users together with.\n\n555\n00:29:27,400 --> 00:29:31,160\nAlright, so, let's say I want to\ncreate this account for myself.\n\n556\n00:29:31,160 --> 00:29:35,100\nAnd I want to have access\nto the whole server, right.\n\n557\n00:29:35,100 --> 00:29:36,940\nI want to be able to get in there and\nwork with a server.\n\n558\n00:29:36,940 --> 00:29:41,650\nWell, I'll want to create\na login at the server level.\n\n559\n00:29:41,650 --> 00:29:45,840\nSo, what I do is,\nI don't browse into the database.\n\n560\n00:29:45,840 --> 00:29:51,330\nI browse into the server when SQL01,\ngo to security, and log in.\n\n561\n00:29:51,330 --> 00:29:53,670\nNow, you'll already have\nsome log-ins in there and\n\n562\n00:29:53,670 --> 00:29:57,700\nif you look at them, they're mostly\ngoing to be service accounts.\n\n563\n00:29:57,700 --> 00:30:00,950\nSo, here's all these different service\naccounts that were created for things like\n\n564\n00:30:00,950 --> 00:30:06,810\nthe system account, my MMSQL service\nagent, the server itself and the agent.\n\n565\n00:30:06,810 --> 00:30:08,320\nSequel writer, Win management.\n\n566\n00:30:08,320 --> 00:30:11,330\nEach of these are service accounts that\nare attached at different parts of Sequel.\n\n567\n00:30:12,340 --> 00:30:17,150\nYou'll also see, if you did mixed\nmode authentication, you'll see SA.\n\n568\n00:30:17,150 --> 00:30:20,130\nThere's the SA account and\nif you want to change it to password,\n\n569\n00:30:20,130 --> 00:30:21,260\nyou can do it write here.\n\n570\n00:30:21,260 --> 00:30:22,470\nThat's the SA account.\n\n571\n00:30:22,470 --> 00:30:26,530\nDoesn't exist in Windows,\njust exists right here inside of Sequel.\n\n572\n00:30:28,230 --> 00:30:30,100\nI also see BUILTIN/Administrators.\n\n573\n00:30:30,100 --> 00:30:31,400\nWhat is that?\n\n574\n00:30:31,400 --> 00:30:35,950\nWell during the install it asked me who I\nwanted to allow to be an administrator.\n\n575\n00:30:35,950 --> 00:30:37,490\nAnd what did I do?\n\n576\n00:30:37,490 --> 00:30:39,345\nWell it had a button that\nsaid add the current user.\n\n577\n00:30:39,345 --> 00:30:43,305\nCould have added myself, but\ninstead I added the administrator's group.\n\n578\n00:30:43,305 --> 00:30:46,355\nSo anybody who's\nthe administrator on this server,\n\n579\n00:30:46,355 --> 00:30:50,675\non the Windows server, will also be\nan administrator inside of Sequel.\n\n580\n00:30:50,675 --> 00:30:52,425\nThat's what I chose during the setup.\n\n581\n00:30:52,425 --> 00:30:54,765\nIf you didn't pick that you might\nnot have the option there, or\n\n582\n00:30:54,765 --> 00:30:57,935\nyou might see your own username there\nif you chose yourself to be the admin.\n\n583\n00:30:57,935 --> 00:31:00,615\nSo that might be a little bit\ndifferent on your install, but\n\n584\n00:31:00,615 --> 00:31:01,775\nthe rest of these should be the same.\n\n585\n00:31:03,520 --> 00:31:07,410\nFrom here though I can\ncreate additional logins.\n\n586\n00:31:07,410 --> 00:31:09,510\nAnd notice that some of\nthese logins are disabled.\n\n587\n00:31:09,510 --> 00:31:13,980\nThere's a little red arrow on these two\nguys for the policy event processing.\n\n588\n00:31:13,980 --> 00:31:16,740\nAnd that's because we haven't\nturned on any policy services yet.\n\n589\n00:31:16,740 --> 00:31:19,030\nSo those are disabled and\nthey just sit there.\n\n590\n00:31:19,030 --> 00:31:20,760\nUntil we turn those other services on.\n\n591\n00:31:20,760 --> 00:31:23,730\nAlright I'm going to\ncreate a new login though.\n\n592\n00:31:23,730 --> 00:31:25,700\nSo I'm just going to right click\non that and hit new login.\n\n593\n00:31:27,150 --> 00:31:31,070\nAnd we'll get our screen that lets\nus go in and set our options.\n\n594\n00:31:31,070 --> 00:31:33,820\nIt's going to ask us for a login name.\n\n595\n00:31:33,820 --> 00:31:36,220\nNow if you're doing Window authentication.\n\n596\n00:31:36,220 --> 00:31:39,260\nThis login name is going\nto be the windows account.\n\n597\n00:31:39,260 --> 00:31:42,890\nBut, if you're doing sequel\nauthentication, see how that box,\n\n598\n00:31:42,890 --> 00:31:45,130\nI can type in it but\nthe search box is gone?\n\n599\n00:31:45,130 --> 00:31:46,900\nThat's because this\nuser doesn't exist yet.\n\n600\n00:31:46,900 --> 00:31:48,120\nI'm creating it from scratch.\n\n601\n00:31:48,120 --> 00:31:49,958\nI need to give it a log-in name.\n\n602\n00:31:49,958 --> 00:31:54,076\nIf it's a SQL account right here\non the server, I give it a name,\n\n603\n00:31:54,076 --> 00:31:56,000\nI give it a password and so on.\n\n604\n00:31:56,000 --> 00:31:58,875\nBut, if it's Windows,\nthe account already exists.\n\n605\n00:31:58,875 --> 00:32:02,583\nI don't have to give it a password\nI just need to search and find it.\n\n606\n00:32:02,583 --> 00:32:05,000\nSo I'm gonna go find my Don Pezet account.\n\n607\n00:32:05,000 --> 00:32:09,920\nI'm gonna search and find that one,\nI should be the only Pezet it there.\n\n608\n00:32:11,080 --> 00:32:12,980\nAnd it didn't find it, wonderful.\n\n609\n00:32:12,980 --> 00:32:14,615\nOh I guess it's cuz I'm DPezet.\n\n610\n00:32:15,770 --> 00:32:16,740\nThere we go.\n\n611\n00:32:16,740 --> 00:32:19,150\nSo it found me and there I am.\n\n612\n00:32:19,150 --> 00:32:20,640\nThere's my login name.\n\n613\n00:32:20,640 --> 00:32:21,820\nIt's a local account.\n\n614\n00:32:21,820 --> 00:32:25,050\nSo I'm seeing my server\nname slash my user name.\n\n615\n00:32:25,050 --> 00:32:27,560\nIf I'd done an active directory\ncount like a domain account,\n\n616\n00:32:27,560 --> 00:32:30,190\nI'd see the domain slash my username.\n\n617\n00:32:30,190 --> 00:32:33,890\nSo it's really easy to spot the Windows\naccounts because of that domain\n\n618\n00:32:33,890 --> 00:32:35,020\nthat's mentioned right beforehand.\n\n619\n00:32:35,020 --> 00:32:36,340\nAll right.\n\n620\n00:32:36,340 --> 00:32:39,480\nIt's set for Windows authentication, so\nI don't have to provide passwords or\n\n621\n00:32:39,480 --> 00:32:40,460\nanything else.\n\n622\n00:32:40,460 --> 00:32:42,250\nThat's basically it.\n\n623\n00:32:42,250 --> 00:32:44,750\nAnd now, I've got the user account.\n\n624\n00:32:44,750 --> 00:32:46,510\nI can go ahead and\nhit OK down here at the bottom.\n\n625\n00:32:49,590 --> 00:32:53,440\nAnd now I'll see under my logins,\nwell, I don't see it right now.\n\n626\n00:32:53,440 --> 00:32:54,070\nI have to refresh.\n\n627\n00:32:54,070 --> 00:32:55,790\nLet me refresh that.\n\n628\n00:32:55,790 --> 00:32:56,528\nAnd there we go.\n\n629\n00:32:56,528 --> 00:32:59,141\nWin-sql-01/dpezet.\n\n630\n00:32:59,141 --> 00:33:01,080\nThere's my user account.\n\n631\n00:33:01,080 --> 00:33:03,140\nI now have a login to the server.\n\n632\n00:33:03,140 --> 00:33:06,040\nNow, what am I able to do with that login?\n\n633\n00:33:06,040 --> 00:33:09,020\nWell, we'll take a look at\nthe permissions a little bit later.\n\n634\n00:33:09,020 --> 00:33:10,730\nWe have to give ourselves\npermissions to do things.\n\n635\n00:33:10,730 --> 00:33:15,000\nSo just because I have a login, doesn't\nmean I can really do all that much.\n\n636\n00:33:15,000 --> 00:33:19,450\nI can log in, but as far as access,\nwe have to go back and add permissions.\n\n637\n00:33:20,530 --> 00:33:22,840\nBut let's see creating a SQL account.\n\n638\n00:33:22,840 --> 00:33:25,660\nMaybe I want to have an admin\naccount on this system and\n\n639\n00:33:25,660 --> 00:33:27,530\nI don't want it to be my Windows account.\n\n640\n00:33:27,530 --> 00:33:30,330\nI want an admin account\nhere inside of SQL that is\n\n641\n00:33:30,330 --> 00:33:32,130\nindependent from my Windows account.\n\n642\n00:33:32,130 --> 00:33:34,940\nSo that when I need to do an\nadministrative task I can log in with that\n\n643\n00:33:34,940 --> 00:33:38,380\nuser, but otherwise I'll just\nlogin with my Windows user.\n\n644\n00:33:38,380 --> 00:33:42,310\nSo I am going to go ahead and\ncreate another login, all right.\n\n645\n00:33:42,310 --> 00:33:45,900\nAnd, for this one I'm going to\ngo ahead and call it dpadmin.\n\n646\n00:33:45,900 --> 00:33:49,560\nThis is going to be my admin account,\ndpadmin, all right.\n\n647\n00:33:49,560 --> 00:33:52,070\nNow because I'm doing SQL.\n\n648\n00:33:52,070 --> 00:33:55,780\nI don't have to search and find it,\nthis accounts going to exist right here.\n\n649\n00:33:55,780 --> 00:33:59,570\nAnd I can assign a password, and\nI'll give it a super secure password.\n\n650\n00:34:01,430 --> 00:34:06,040\nAnd then we can specify a few other neat\nlittle options that are in here like\n\n651\n00:34:06,040 --> 00:34:08,810\nenforced password policy,\nthat's a really cool one.\n\n652\n00:34:08,810 --> 00:34:11,740\nWhat it does is it looks at your\nWindows password policy and\n\n653\n00:34:11,740 --> 00:34:15,740\nit says okay, well you're making those\npeople reset their password every 60 days,\n\n654\n00:34:15,740 --> 00:34:17,390\nI'll do the same thing here in SQL.\n\n655\n00:34:17,390 --> 00:34:19,930\nI'll make them reset their\npasswords every 60 days.\n\n656\n00:34:19,930 --> 00:34:22,760\nSo, you can set whether you want\nthat password expiration and\n\n657\n00:34:22,760 --> 00:34:26,090\npassword complexity,\nthose all come from those two options.\n\n658\n00:34:26,090 --> 00:34:28,170\nAnd the user must change password\non next log on is checked.\n\n659\n00:34:28,170 --> 00:34:33,043\nI'm going to uncheck that since I've\nalready got a password that I’m\n\n660\n00:34:33,043 --> 00:34:33,960\nhappy with.\n\n661\n00:34:33,960 --> 00:34:34,597\nAll right now,\n\n662\n00:34:34,597 --> 00:34:38,360\nthere is one option that I didn’t set\non my other account that I should have.\n\n663\n00:34:38,360 --> 00:34:40,820\nIf you look at the bottom of\nthis User Account screen,\n\n664\n00:34:40,820 --> 00:34:45,260\nthere’s an option down here\nwhere is says Default database.\n\n665\n00:34:45,260 --> 00:34:47,140\nWhen the user connects, and\n\n666\n00:34:47,140 --> 00:34:52,370\nthey start to issue commands, the commands\nare gonna be issued against some database.\n\n667\n00:34:52,370 --> 00:34:55,330\nAnd if they use\nthe Use Database name command,\n\n668\n00:34:55,330 --> 00:34:57,610\nthen that'll tell it\nwhich database to run.\n\n669\n00:34:57,610 --> 00:35:01,440\nBut we can set a default database for\nthem to execute commands on.\n\n670\n00:35:01,440 --> 00:35:04,400\nFor an administrator,\nwe probably wanna leave it as Master.\n\n671\n00:35:04,400 --> 00:35:07,220\nWhen an administrator makes changes\nthey're normally making it to\n\n672\n00:35:07,220 --> 00:35:08,170\nthe server itself.\n\n673\n00:35:08,170 --> 00:35:10,750\nAnd those changes end up\nin the Master database.\n\n674\n00:35:10,750 --> 00:35:14,500\nBut for a regular user,\nlike my other Don Pezet account,\n\n675\n00:35:14,500 --> 00:35:17,310\nthat one's not gonna be working\nwith a master database.\n\n676\n00:35:17,310 --> 00:35:20,400\nSo, I probably need to change that one.\n\n677\n00:35:20,400 --> 00:35:25,384\nI'm gonna go and say okay here on my\n\n678\n00:35:25,384 --> 00:35:30,480\ndpadmin account, and down here for\n\n679\n00:35:30,480 --> 00:35:34,940\nthe default database, I'm gonna\nchange that to the products database.\n\n680\n00:35:34,940 --> 00:35:39,550\nSo now when I connect with my regular user\nif I just start issuing commands without\n\n681\n00:35:39,550 --> 00:35:43,260\na use-command,\nit will default to the products database,\n\n682\n00:35:43,260 --> 00:35:45,170\nwhich is probably where I\nwanna be working anyway.\n\n683\n00:35:46,610 --> 00:35:49,250\nAnd you can set different defaults for\ndifferent users, right, and\n\n684\n00:35:49,250 --> 00:35:50,060\nyou often will.\n\n685\n00:35:50,060 --> 00:35:52,170\nJust what a users gonna\nmake use of the most.\n\n686\n00:35:55,210 --> 00:35:57,870\nAll right.\nSo now I've got my individual user account\n\n687\n00:35:57,870 --> 00:36:01,370\nfrom Windows, and\nI've got a new account in SQL.\n\n688\n00:36:01,370 --> 00:36:02,760\nAnd it's easy to tell the difference.\n\n689\n00:36:02,760 --> 00:36:04,870\nRight?\nThat Windows account,\n\n690\n00:36:04,870 --> 00:36:08,250\nit's got the domain or\nserver name right before it.\n\n691\n00:36:08,250 --> 00:36:09,440\nThe SQL account doesn't.\n\n692\n00:36:09,440 --> 00:36:10,770\nRight?\nSo real easy to spot those.\n\n693\n00:36:12,450 --> 00:36:15,680\nNow in both of these scenarios I'm\ndealing with an individual user.\n\n694\n00:36:15,680 --> 00:36:19,598\nWe can do a group also, and\ngroups are often more handy.\n\n695\n00:36:19,598 --> 00:36:22,233\nEvery time you'll hire a new employee,\nyou don't want to come in here and\n\n696\n00:36:22,233 --> 00:36:23,352\ncreate a new account, do you?\n\n697\n00:36:23,352 --> 00:36:26,219\nYou don't want to have to come in and\ncreate a new log in every time somebody\n\n698\n00:36:26,219 --> 00:36:28,650\ngets hired or\nsomebody gets fired or whatever.\n\n699\n00:36:28,650 --> 00:36:31,880\nSo it's easier to manage that\nstuff inside of Windows, and\n\n700\n00:36:31,880 --> 00:36:36,510\nwhat you can do is back in Windows,\nlet me go back to my computer manager.\n\n701\n00:36:36,510 --> 00:36:41,500\nI created a user account for myself,\nbut I might have groups also.\n\n702\n00:36:41,500 --> 00:36:43,450\nAnd so I'll create some groups for\nmy company.\n\n703\n00:36:43,450 --> 00:36:49,380\nMaybe I've got the accounting department,\nand\n\n704\n00:36:49,380 --> 00:36:54,260\nmaybe the marketing department,\nand sales department,\n\n705\n00:36:54,260 --> 00:36:58,030\nright, these are all different\npeople inside of my company, and\n\n706\n00:36:58,030 --> 00:37:02,180\nwhen I hire a new accountant I put them\nin the accounting department group, and\n\n707\n00:37:02,180 --> 00:37:04,955\nwhen I hire a new salesperson,\nI put them in the sales department group.\n\n708\n00:37:04,955 --> 00:37:07,120\nBut when I hire a marketing person,\nI put them in that group.\n\n709\n00:37:07,120 --> 00:37:10,170\nSo I've got groups now\nbased on their job role.\n\n710\n00:37:10,170 --> 00:37:13,710\nAnd in Windows or in the Active Directory\nor in the local database here,\n\n711\n00:37:13,710 --> 00:37:19,280\nI'm moving users in and out as I hire them\nor I disable their accounts or whatever.\n\n712\n00:37:19,280 --> 00:37:25,020\nBack in SQL, when we added a login,\nyou can add a login for a group.\n\n713\n00:37:25,020 --> 00:37:27,830\nSo I'm gonna go to New Login, and\n\n714\n00:37:27,830 --> 00:37:32,350\nlast time I did this search and\nI searched for my user account.\n\n715\n00:37:32,350 --> 00:37:34,250\nWell it does default that.\n\n716\n00:37:34,250 --> 00:37:37,050\nSee up here where it says user or\nbuilt in security principle?\n\n717\n00:37:38,130 --> 00:37:40,340\nIt defaults looking for user accounts.\n\n718\n00:37:40,340 --> 00:37:43,700\nBut if you hit that object types button,\nyou can choose groups.\n\n719\n00:37:44,830 --> 00:37:46,770\nAnd now when you say okay to that,\n\n720\n00:37:46,770 --> 00:37:49,060\nit'll let you search to find\ngroups that are out there.\n\n721\n00:37:49,060 --> 00:37:51,550\nAnd so I can search for,\nyou know, marketing.\n\n722\n00:37:53,320 --> 00:37:55,950\nAnd it should find that group, or not.\n\n723\n00:37:55,950 --> 00:37:56,960\nMarketing department.\n\n724\n00:38:00,140 --> 00:38:01,010\nAll right.\n\n725\n00:38:01,010 --> 00:38:05,770\nIf the search doesn't work, sometimes it's\neasier to just hit the Advanced button.\n\n726\n00:38:05,770 --> 00:38:08,930\nAnd when you hit the Advanced button\nyou can just hit find now, and\n\n727\n00:38:08,930 --> 00:38:11,050\nit will give you a list of all the groups.\n\n728\n00:38:11,050 --> 00:38:13,340\nAnd you can find people that way too.\n\n729\n00:38:13,340 --> 00:38:15,450\nI guess maybe I spelled it wrong or\nsomething but\n\n730\n00:38:15,450 --> 00:38:17,770\nthere's my accounting\ndepartment right there.\n\n731\n00:38:17,770 --> 00:38:19,700\nIf a search doesn't work you\ncan always go this route.\n\n732\n00:38:20,950 --> 00:38:22,490\nSo I'll pick that, and\n\n733\n00:38:22,490 --> 00:38:26,220\nnow I can see right there it's got my\naccounting department and I can say okay.\n\n734\n00:38:26,220 --> 00:38:29,140\nAnd I'm going to add in my other ones.\n\n735\n00:38:29,140 --> 00:38:31,500\nNow you can come here and\nset the default database for\n\n736\n00:38:31,500 --> 00:38:35,470\nthese guys because, well, your accountants\nmight default to one database,\n\n737\n00:38:35,470 --> 00:38:37,850\nyour human resources to another one and\nso on.\n\n738\n00:38:37,850 --> 00:38:40,510\nSo you might need to adjust this\nbased on what they are doing.\n\n739\n00:38:40,510 --> 00:38:43,710\nSo I'll have the accountants\ndefault to the.\n\n740\n00:38:43,710 --> 00:38:45,400\nInventory database, I suppose.\n\n741\n00:38:48,100 --> 00:38:50,750\nAnd now I'll go in and\nadd human resources.\n\n742\n00:38:52,670 --> 00:38:55,450\nI'll just skip the search thing right\noff the bat here and do a find.\n\n743\n00:38:56,970 --> 00:38:58,560\nAnd find my human resources group.\n\n744\n00:38:58,560 --> 00:39:01,710\nOr, you know what, I didn't do\na human resources group, did I?\n\n745\n00:39:01,710 --> 00:39:04,090\nShoot.\nI did Marketing and\n\n746\n00:39:04,090 --> 00:39:05,960\nsales were the other ones.\n\n747\n00:39:05,960 --> 00:39:07,939\nWell, we'll just add in\nsome of the other ones.\n\n748\n00:39:09,909 --> 00:39:14,790\nYou know what?\nActually looking at it here, oh,\n\n749\n00:39:14,790 --> 00:39:17,060\nshoot, I forgot to check\nthe Groups box there.\n\n750\n00:39:17,060 --> 00:39:17,630\nThere we go.\n\n751\n00:39:19,370 --> 00:39:21,290\nThat does make a difference.\n\n752\n00:39:21,290 --> 00:39:23,110\nAll right, so I'll go ahead and\nadd in marketing.\n\n753\n00:39:23,110 --> 00:39:25,580\nAnd that's probably enough.\n\n754\n00:39:25,580 --> 00:39:26,720\nI don't need to add a ton more.\n\n755\n00:39:28,480 --> 00:39:30,680\nAnd I'll set them to default\nmaybe to the products database.\n\n756\n00:39:30,680 --> 00:39:35,700\nSo, now with these groups, when they're\ncreated, I hire a new employee.\n\n757\n00:39:35,700 --> 00:39:39,360\nI create their Windows account, and\nby putting them in a Windows group,\n\n758\n00:39:39,360 --> 00:39:42,870\nit will automatically authorize\nthem here inside of SQL too.\n\n759\n00:39:42,870 --> 00:39:46,270\nNow I don't have to come manage\npermissions inside of SQL that saves\n\n760\n00:39:46,270 --> 00:39:46,990\na lot of time.\n\n761\n00:39:46,990 --> 00:39:53,810\nAll right now, what we've been doing so\nfar, these are server level logins.\n\n762\n00:39:53,810 --> 00:39:56,667\nWhat about if I want somebody\nto have access at the database?\n\n763\n00:39:56,667 --> 00:39:59,083\nSo, for example,\nI still have the sales department.\n\n764\n00:39:59,083 --> 00:40:02,917\nMaybe I don't want the sales department to\nbe able to connect to the server itself.\n\n765\n00:40:02,917 --> 00:40:07,458\nMaybe I want to keep the sales department\ntied to a particular database.\n\n766\n00:40:07,458 --> 00:40:10,320\nSo up here in databases,\nmaybe I create a new database.\n\n767\n00:40:11,450 --> 00:40:14,290\nActually didn't I have an orders database?\n\n768\n00:40:14,290 --> 00:40:15,460\nI guess I deleted it.\n\n769\n00:40:15,460 --> 00:40:17,250\nI'll create an orders database and\n\n770\n00:40:17,250 --> 00:40:20,650\nI want the sales department to be\ntied to this order's database.\n\n771\n00:40:20,650 --> 00:40:23,230\nWell I can go under Orders.\n\n772\n00:40:23,230 --> 00:40:26,850\nAnd I can go under Security and Users and\n\n773\n00:40:26,850 --> 00:40:30,610\nI can add the sales department\nright here instead.\n\n774\n00:40:30,610 --> 00:40:33,110\nNow they're inside of this database.\n\n775\n00:40:33,110 --> 00:40:35,580\nAnd there is a few different reasons for\ndoing this but\n\n776\n00:40:35,580 --> 00:40:39,260\nhere I just want them to exist\ninside of this database.\n\n777\n00:40:39,260 --> 00:40:40,380\nSo I'll do a new user.\n\n778\n00:40:41,530 --> 00:40:44,645\nAnd when you do a new user,\nit's gonna ask is this a SQL user?\n\n779\n00:40:44,645 --> 00:40:46,030\nWe can zoom in on that.\n\n780\n00:40:47,130 --> 00:40:50,210\nIs this a SQL user or\nis it a Windows user?\n\n781\n00:40:50,210 --> 00:40:51,440\nRight?\nSo it's asking where I'm\n\n782\n00:40:51,440 --> 00:40:52,600\ngetting this from.\n\n783\n00:40:52,600 --> 00:40:55,050\nNow there's a few other\noptions that are in here.\n\n784\n00:40:55,050 --> 00:40:58,000\nFor example a SQL user without login.\n\n785\n00:40:58,000 --> 00:40:59,200\nWhat the heck is that about?\n\n786\n00:40:59,200 --> 00:40:59,790\nRight?\n\n787\n00:40:59,790 --> 00:41:05,040\nA SQL user without a login, that means I\nwant a SQL user within this database but\n\n788\n00:41:05,040 --> 00:41:08,930\nwithout a matching login\nat the server level.\n\n789\n00:41:08,930 --> 00:41:12,880\nNormally SQL accounts have that\nlogin at the server level, and\n\n790\n00:41:12,880 --> 00:41:14,860\na user at the database level.\n\n791\n00:41:14,860 --> 00:41:16,480\nIf I choose user without login,\n\n792\n00:41:16,480 --> 00:41:20,190\nit doesn't have to match to\nsomebody up at the server level.\n\n793\n00:41:20,190 --> 00:41:22,650\nIf I choose SQL user with login,\n\n794\n00:41:22,650 --> 00:41:26,260\nit has to match a user account\nup at the server level.\n\n795\n00:41:26,260 --> 00:41:28,360\nWindows users it can go either way,\nso it doesn't matter.\n\n796\n00:41:28,360 --> 00:41:29,840\nYou have a single option.\n\n797\n00:41:29,840 --> 00:41:33,210\nYou also have a few other options in here\nthat I'll talk about later in the show.\n\n798\n00:41:33,210 --> 00:41:36,550\nWe can authenticate users instead\nof with a user name and password.\n\n799\n00:41:36,550 --> 00:41:40,370\nWe can authenticate them with\na certificate or an asymmetric key.\n\n800\n00:41:40,370 --> 00:41:44,040\nAn asymmetric key is a public and private\nkey, it's usually two certificates.\n\n801\n00:41:44,040 --> 00:41:47,470\nSo we can authenticate\nthose other methods also.\n\n802\n00:41:47,470 --> 00:41:49,600\nBut I'm gonna do Windows user.\n\n803\n00:41:50,910 --> 00:41:53,310\nAnd for\nthe Windows username I'll just browse, and\n\n804\n00:41:53,310 --> 00:41:57,670\nwe're gonna go and find the Sales Group.\n\n805\n00:42:01,530 --> 00:42:04,090\nI do not know why my little\nfind is not working there, but\n\n806\n00:42:05,390 --> 00:42:10,190\nwe'll pull it up this way, and\nwe'll get our sales group in here.\n\n807\n00:42:10,190 --> 00:42:11,350\nSo there's my sales department.\n\n808\n00:42:12,940 --> 00:42:13,870\nAll right.\n\n809\n00:42:13,870 --> 00:42:15,960\nAnd it's asking for a log in name.\n\n810\n00:42:15,960 --> 00:42:18,390\nNow, if I don't type anything in there,\nif I leave it blank,\n\n811\n00:42:18,390 --> 00:42:21,370\nit will just use the user\nname from Windows.\n\n812\n00:42:21,370 --> 00:42:22,790\nWhy would I want a log in name, though?\n\n813\n00:42:22,790 --> 00:42:24,140\nWhy would I want to use\nsomething different?\n\n814\n00:42:24,140 --> 00:42:28,190\nWell, the way the login\nname works is by default.\n\n815\n00:42:28,190 --> 00:42:29,250\nIt matches this username, so\n\n816\n00:42:29,250 --> 00:42:32,700\nwhen a user logs in they would\nhave to log in as domain/username.\n\n817\n00:42:32,700 --> 00:42:34,560\nSo they'd have to log in that way.\n\n818\n00:42:34,560 --> 00:42:36,000\nBut I might not want that.\n\n819\n00:42:36,000 --> 00:42:39,800\nI might want to override it and\nhave it be sales.\n\n820\n00:42:39,800 --> 00:42:44,070\nNow they can log in as just sales without\nhaving to provide this full group name.\n\n821\n00:42:44,070 --> 00:42:46,150\nAll right,\nnow we don't normally do that for\n\n822\n00:42:46,150 --> 00:42:49,190\na group because they have\ntheir own user name anyway.\n\n823\n00:42:49,190 --> 00:42:51,792\nBut for a user account,\nwe might want to override that.\n\n824\n00:42:51,792 --> 00:42:54,310\nI'm gonna leave it blank so\nit will use the default one.\n\n825\n00:42:55,480 --> 00:42:58,704\nAll right, schema is we're gonna\ntalk a little bit later also.\n\n826\n00:42:58,704 --> 00:43:01,543\nSo I'm not gonna change whoops,\nI'm not gonna change any other options on\n\n827\n00:43:01,543 --> 00:43:04,450\nthe screen, we'll just leave it be,\nand hit, OK.\n\n828\n00:43:04,450 --> 00:43:05,900\nAnd that's gonna add that one in.\n\n829\n00:43:05,900 --> 00:43:07,570\nSo, now I can see,\n\n830\n00:43:07,570 --> 00:43:13,160\nif I refresh, that I've got the sales\ndepartment right here in this database.\n\n831\n00:43:13,160 --> 00:43:15,340\nSo, now the sales department\ncan log in to this database.\n\n832\n00:43:15,340 --> 00:43:17,195\nThey can't log in to\nmy other databases and\n\n833\n00:43:17,195 --> 00:43:19,208\nthey can't log in to\nthe server as a whole.\n\n834\n00:43:19,208 --> 00:43:20,068\nAll right.\n\n835\n00:43:20,068 --> 00:43:22,220\nWhat are some of my other accounts though?\n\n836\n00:43:22,220 --> 00:43:24,280\nLike my DP Admin account.\n\n837\n00:43:24,280 --> 00:43:27,470\nThe DP Admin account is\nat the server level.\n\n838\n00:43:27,470 --> 00:43:29,650\nDoes it have access to this database?\n\n839\n00:43:29,650 --> 00:43:31,270\nIt might, I don't know.\n\n840\n00:43:31,270 --> 00:43:33,650\nWe'll see later with permissions\nhow we can adjust that and\n\n841\n00:43:33,650 --> 00:43:35,450\ngive them access to the database.\n\n842\n00:43:35,450 --> 00:43:38,830\nBut one of the easiest ways to give\nsomebody access to a particular database\n\n843\n00:43:38,830 --> 00:43:44,470\nis to link their account, link their\nserver level login to a database user.\n\n844\n00:43:44,470 --> 00:43:49,860\nSo down here under users I\ncan always say new user and\n\n845\n00:43:49,860 --> 00:43:52,460\nfor the user, I could pick something\nlike a Windows user account.\n\n846\n00:43:53,510 --> 00:43:58,790\nAnd when I go to browse, I can pick that\nsame Windows account and link it right\n\n847\n00:43:58,790 --> 00:44:03,690\nin here, and now I'll have account access\nat the server level and at the database.\n\n848\n00:44:03,690 --> 00:44:08,800\nI can do it with SQL accounts to,\nif I go to SQL User with login,\n\n849\n00:44:08,800 --> 00:44:11,670\nthat tells them that it already\nexists at the server level.\n\n850\n00:44:11,670 --> 00:44:13,870\nAnd I can punch in\nwhatever that username is,\n\n851\n00:44:13,870 --> 00:44:17,510\nnormally we just leave it blank because\nit's gonna default to the login name.\n\n852\n00:44:17,510 --> 00:44:20,450\nAnd when we browse our logins,\nwe can go and find them.\n\n853\n00:44:20,450 --> 00:44:24,560\nThere's my DP admin account and\nI'll say OK on that.\n\n854\n00:44:24,560 --> 00:44:28,510\nAnd so now, DP admin,\nthe server level login\n\n855\n00:44:28,510 --> 00:44:32,810\nis being linked to a DP admin\nright here at the database.\n\n856\n00:44:32,810 --> 00:44:34,612\nAnd actually it is gonna make\nme type in that username.\n\n857\n00:44:34,612 --> 00:44:36,950\nLet me type that in real quick.\n\n858\n00:44:36,950 --> 00:44:37,880\nAnd there we go.\n\n859\n00:44:37,880 --> 00:44:39,500\nSo now I've got a DP admin here.\n\n860\n00:44:39,500 --> 00:44:42,570\nIt looks like a separate user account,\nbut it's actually linked.\n\n861\n00:44:42,570 --> 00:44:44,990\nIt's linked to the one\nup at the server level.\n\n862\n00:44:44,990 --> 00:44:47,420\nSo if I change the password\nat the server level,\n\n863\n00:44:47,420 --> 00:44:50,422\nthe password is changed here\nat the database level also.\n\n864\n00:44:50,422 --> 00:44:51,370\nAll right.\n\n865\n00:44:51,370 --> 00:44:56,050\nSo, you will often times, very,\nvery common see duplicate accounts.\n\n866\n00:44:56,050 --> 00:44:58,630\nYou'll see an account at\nthe database level, and\n\n867\n00:44:58,630 --> 00:45:00,472\nyou'll see the account\nat the server level.\n\n868\n00:45:00,472 --> 00:45:04,160\nAll right, and that's where somebody has\nlinked accounts like what I just did.\n\n869\n00:45:04,160 --> 00:45:05,530\nBut, you don't have to.\n\n870\n00:45:05,530 --> 00:45:08,080\nYou might see an account\nthat's at the database level\n\n871\n00:45:08,080 --> 00:45:09,930\nthat's not at the server level or\nthe other way around.\n\n872\n00:45:09,930 --> 00:45:12,290\nIt might be at the server level but\nnot at the database level.\n\n873\n00:45:12,290 --> 00:45:17,300\nSo don't assume the account is gonna be\nin both places, because it might not be.\n\n874\n00:45:17,300 --> 00:45:20,560\nIt just depends on the type of access\nthat we're trying to give people.\n\n875\n00:45:22,490 --> 00:45:25,850\nAll right, so\nthat's how we create user accounts.\n\n876\n00:45:25,850 --> 00:45:29,270\nOnce the user accounts are created\npeople can log into the system, great.\n\n877\n00:45:29,270 --> 00:45:33,120\nThe next thing we need to do\nthough is to Set Permissions.\n\n878\n00:45:33,120 --> 00:45:36,960\nAnd the way we set permissions\nis kind of interesting.\n\n879\n00:45:36,960 --> 00:45:40,110\nThe way we're supposed to do is\nthrough a system called Roles.\n\n880\n00:45:40,110 --> 00:45:43,540\nThere are a number of roles to find\nthroughout SQL server that dictate\n\n881\n00:45:43,540 --> 00:45:45,680\nwhat type of access you have.\n\n882\n00:45:45,680 --> 00:45:49,050\nSo, I wanna walk you guys\nthrough the roles that exist and\n\n883\n00:45:49,050 --> 00:45:51,600\nshow you how to create some\nof your own if you want to.\n\n884\n00:45:51,600 --> 00:45:53,340\nBut, I'm a little short\non time on this segment.\n\n885\n00:45:53,340 --> 00:45:56,140\nSo, why don't we stop here and\npause, and when we get back\n\n886\n00:45:56,140 --> 00:45:59,270\nwe'll take a look at those roles and\nget a chance to see how they work.\n\n887\n00:45:59,270 --> 00:46:00,440\nSo, stay tuned.\n\n888\n00:46:00,440 --> 00:46:03,292\nWe'll be back in a few.\n\n889\n00:46:03,292 --> 00:46:10,609\n[SOUND] All right, welcome back everybody.\n\n890\n00:46:10,609 --> 00:46:15,020\nSo we left off talking about\npermissions and I mentioned roles.\n\n891\n00:46:15,020 --> 00:46:19,350\nWhen you install SQL server there are a\nseries of default roles that are created.\n\n892\n00:46:19,350 --> 00:46:23,820\nAnd all the role is, it's basically\na list of permissions that a user has.\n\n893\n00:46:23,820 --> 00:46:28,720\nIf I go up to the server level and\nI go to Security, and not logins,\n\n894\n00:46:28,720 --> 00:46:32,460\nbut go to Server Roles,\nyou'll see a bunch of guys in here.\n\n895\n00:46:32,460 --> 00:46:36,370\nBulk Admin, DB Creator, Disk Admin,\nProcess Admin and so on.\n\n896\n00:46:36,370 --> 00:46:39,020\nThese are roles that Microsoft built for\n\n897\n00:46:39,020 --> 00:46:43,080\nus to be able to use to give people\npermissions to access the system.\n\n898\n00:46:43,080 --> 00:46:43,870\nAll right?\n\n899\n00:46:43,870 --> 00:46:45,480\nOn the database, it's the same thing.\n\n900\n00:46:45,480 --> 00:46:53,200\nIf I go under the database, so I'll go\nunder Payroll, and Security, and Roles.\n\n901\n00:46:53,200 --> 00:46:56,630\nAnd you'll see we've got\ndatabase roles in here also.\n\n902\n00:46:56,630 --> 00:47:01,118\nDB access admin, Backup operator,\nData Reader, Data Writer, and so on.\n\n903\n00:47:01,118 --> 00:47:03,350\nIf I wanna give somebody\npermission to access the database,\n\n904\n00:47:03,350 --> 00:47:08,200\nthe easiest way to do it is to put their\nuser account in one of these roles.\n\n905\n00:47:08,200 --> 00:47:09,030\nWhen they're in that role,\n\n906\n00:47:09,030 --> 00:47:12,880\nthey'll get a set of permissions that\nbasically cater to whatever that role is.\n\n907\n00:47:12,880 --> 00:47:14,320\nLet's review those real quick.\n\n908\n00:47:15,730 --> 00:47:19,000\nI'm gonna post my show notes,\nlike we always do with our episodes, and\n\n909\n00:47:19,000 --> 00:47:20,630\nI'll have all these roles laid out.\n\n910\n00:47:20,630 --> 00:47:23,250\nBut here's basically how\nthe roles break down.\n\n911\n00:47:23,250 --> 00:47:26,470\nThe server roles are really easy to spot,\nbecause they're just a name.\n\n912\n00:47:27,640 --> 00:47:32,260\nThe database roles all start with db_,\nso right off you can\n\n913\n00:47:32,260 --> 00:47:36,450\nuse that to see if it's db_, we're\ntalking about one particular database.\n\n914\n00:47:36,450 --> 00:47:39,702\nIf we don't see the db_ we're\ntalking about the server as a whole.\n\n915\n00:47:39,702 --> 00:47:40,400\nAll right?\n\n916\n00:47:40,400 --> 00:47:43,910\nAnd they work out like this, the most\nimportant one is probably sysadmin.\n\n917\n00:47:43,910 --> 00:47:48,570\nSysadmin is the role that gives you\nfull access to the entire server,\n\n918\n00:47:48,570 --> 00:47:50,750\nthat SA account that's sitting there.\n\n919\n00:47:50,750 --> 00:47:54,350\nIt has full access to the server\nbecause it's in the sysadmin role.\n\n920\n00:47:54,350 --> 00:47:56,910\nThere's nothing special\nabout the SA account,\n\n921\n00:47:56,910 --> 00:47:59,917\nthere is something special\nabout the role that it's in.\n\n922\n00:47:59,917 --> 00:48:01,542\nSo I created a DP admin account.\n\n923\n00:48:01,542 --> 00:48:06,010\nIf I want it to be a true admin, I'll\nwant to put it in that sys admin role.\n\n924\n00:48:06,010 --> 00:48:10,208\nThere's set-up admin, which is allowed\nto add or removed linked servers.\n\n925\n00:48:10,208 --> 00:48:13,967\nA linked server is if you have multiple\nSQL servers, and you want to run cross\n\n926\n00:48:13,967 --> 00:48:17,740\nserver queries, queries that span\ntables on more than one server.\n\n927\n00:48:17,740 --> 00:48:20,590\nAnd you'll need a set-up\nadmin to be able to do that.\n\n928\n00:48:20,590 --> 00:48:22,220\nThe server admin.\n\n929\n00:48:22,220 --> 00:48:23,280\nThis one's confusing.\n\n930\n00:48:23,280 --> 00:48:26,110\nA lot of people mix this\nup with system admin.\n\n931\n00:48:26,110 --> 00:48:29,740\nSystem admin is talking about SQL,\nMicrosoft SQL.\n\n932\n00:48:29,740 --> 00:48:33,385\nServer admin,\nthat's talking about Windows Server.\n\n933\n00:48:33,385 --> 00:48:37,085\nThis is a person who's actually able\nto make changes that affect the server.\n\n934\n00:48:37,085 --> 00:48:40,985\nLike, whether the SQL services\nare allowed to start or stop.\n\n935\n00:48:40,985 --> 00:48:44,215\nWhether they're automatic or\nmanual start, that kind of thing.\n\n936\n00:48:44,215 --> 00:48:46,605\nSo this is more server wide settings.\n\n937\n00:48:48,035 --> 00:48:50,605\nSecurity admin,\nable to manage permissions.\n\n938\n00:48:50,605 --> 00:48:54,055\nThe stuff that I'm doing in this episode,\nyou'd need to be a security admin to do.\n\n939\n00:48:55,485 --> 00:48:56,640\nPublic.\n\n940\n00:48:56,640 --> 00:48:58,230\nPublic is a special one, right?\n\n941\n00:48:58,230 --> 00:49:01,340\nIf you look at the public roll,\nit'll show that it has no users in it.\n\n942\n00:49:01,340 --> 00:49:04,180\nBut the reality is that\nthe public role has every user.\n\n943\n00:49:04,180 --> 00:49:06,010\nEverybody is a part of public.\n\n944\n00:49:06,010 --> 00:49:08,560\nSo these are the default permissions.\n\n945\n00:49:08,560 --> 00:49:11,630\nIf you want everybody to have\na certain level of permissions,\n\n946\n00:49:11,630 --> 00:49:14,700\nyou assign it to the public role,\nbecause everybody's in there.\n\n947\n00:49:14,700 --> 00:49:17,950\nI might be in the system admins group,\nbut I'm also in public.\n\n948\n00:49:17,950 --> 00:49:20,260\nAnd so\nyou get kind of the best of both worlds.\n\n949\n00:49:20,260 --> 00:49:22,980\nSo public is just what is\nour default permissions.\n\n950\n00:49:24,710 --> 00:49:28,710\nProcess admin, these are ones that can\nterminate processes inside of SQL.\n\n951\n00:49:28,710 --> 00:49:32,880\nWe're going to talk later on it in another\nepisode about how sometimes one query\n\n952\n00:49:32,880 --> 00:49:35,010\ncan bump into another query and\n\n953\n00:49:35,010 --> 00:49:37,250\ncreate a deadlock where they're\nboth waiting on each other.\n\n954\n00:49:37,250 --> 00:49:39,350\nAnd they just set there stuck.\n\n955\n00:49:39,350 --> 00:49:41,050\nWell, a process admin is able to fix that.\n\n956\n00:49:41,050 --> 00:49:44,470\nThey can cancel one of the processes,\nrolling back that user changes.\n\n957\n00:49:45,675 --> 00:49:48,600\nDisk admin can manipulate files and\nfile groups.\n\n958\n00:49:48,600 --> 00:49:50,830\nWe did table partitioning\nin another episode and\n\n959\n00:49:50,830 --> 00:49:52,510\nwe had to create a bunch of file groups.\n\n960\n00:49:52,510 --> 00:49:53,460\nDisc admins can do that.\n\n961\n00:49:54,560 --> 00:49:57,790\nDbcreator, like its name says,\ncan create databases.\n\n962\n00:49:57,790 --> 00:49:58,740\nNothing too special there.\n\n963\n00:49:58,740 --> 00:50:00,440\nThey can whip up new databases.\n\n964\n00:50:00,440 --> 00:50:04,560\nThey can also delete and\nchange existing databases.\n\n965\n00:50:04,560 --> 00:50:05,990\nSo that's kind of important there too.\n\n966\n00:50:05,990 --> 00:50:10,171\nAnd then bulkadmin that's a special role\nyou've got to have if you want to use\n\n967\n00:50:10,171 --> 00:50:11,600\nthe bulk insert command.\n\n968\n00:50:11,600 --> 00:50:13,310\nYou've got to be in the bulkadmin's group.\n\n969\n00:50:13,310 --> 00:50:16,550\nNow some of these roles have\nthe other role's permission.\n\n970\n00:50:16,550 --> 00:50:19,320\nLike if I am a system admin,\nI can use BULK INSERT.\n\n971\n00:50:19,320 --> 00:50:20,290\nI don't have to be in that role.\n\n972\n00:50:20,290 --> 00:50:20,940\nI am a sys admin.\n\n973\n00:50:20,940 --> 00:50:22,170\nI can do everything.\n\n974\n00:50:22,170 --> 00:50:25,470\nSo there is some overlap between\nthese roles, but in general,\n\n975\n00:50:25,470 --> 00:50:26,160\nthat's what they do.\n\n976\n00:50:27,250 --> 00:50:29,700\nAt the data base level,\nit's a little bit different.\n\n977\n00:50:29,700 --> 00:50:32,260\nWe don't see the server level stuff here.\n\n978\n00:50:32,260 --> 00:50:34,510\nAt the database level it's really simple.\n\n979\n00:50:34,510 --> 00:50:37,448\nThe two most important ones\nare these two right here,\n\n980\n00:50:37,448 --> 00:50:41,230\ndb_datareader and db_datawriter.\n\n981\n00:50:41,230 --> 00:50:44,290\nA reader is allowed to read\ndata from the database.\n\n982\n00:50:44,290 --> 00:50:47,790\nIt's like read access, so they can\nlook at data and do select statements,\n\n983\n00:50:47,790 --> 00:50:49,920\ntaking query data out of the database.\n\n984\n00:50:49,920 --> 00:50:52,910\nA writer can add, change, and delete data.\n\n985\n00:50:52,910 --> 00:50:56,920\nThey can do insert and update commands\nto change the data in the database.\n\n986\n00:50:57,950 --> 00:51:02,270\nThere's db_denydatareader and\ndenydatawriter.\n\n987\n00:51:02,270 --> 00:51:04,810\nThis is where we can override\nsome of these permissions.\n\n988\n00:51:04,810 --> 00:51:06,827\nDenying them the ability to read or write.\n\n989\n00:51:06,827 --> 00:51:09,862\nThere's db_owner.\n\n990\n00:51:09,862 --> 00:51:15,730\nDb_owner, that's like the sys admin role,\nexcept for the database.\n\n991\n00:51:15,730 --> 00:51:18,113\nIf you're the db_owner,\nif you have the db_owner role,\n\n992\n00:51:18,113 --> 00:51:19,980\nyou can do whatever you\nwant to that database.\n\n993\n00:51:19,980 --> 00:51:22,170\nYou have full access to the database.\n\n994\n00:51:23,600 --> 00:51:26,130\nWe've got DB, DM, as I put here.\n\n995\n00:51:26,130 --> 00:51:28,650\nSo db_securityadmin.\n\n996\n00:51:28,650 --> 00:51:32,080\nThey're the ones who are able to manage\nthe security settings on the database.\n\n997\n00:51:32,080 --> 00:51:36,690\nThings like creating user accounts, adding\nrole memberships, setting permissions,\n\n998\n00:51:36,690 --> 00:51:37,720\nthat kind of stuff.\n\n999\n00:51:37,720 --> 00:51:40,935\nThat's very similar to db_accessadmin.\n\n1000\n00:51:40,935 --> 00:51:44,280\ndb_accessadmin can add and\nremove logins, but\n\n1001\n00:51:44,280 --> 00:51:49,190\nthey can't create roles, so it's similar,\nbut a little bit more restricted.\n\n1002\n00:51:50,250 --> 00:51:52,550\nThere is db_backupoperator.\n\n1003\n00:51:52,550 --> 00:51:53,790\nThey can backup the database.\n\n1004\n00:51:53,790 --> 00:51:55,270\nRight.\nYou might have an employee,\n\n1005\n00:51:55,270 --> 00:51:58,800\nwho's sole job is backing up or\nrestoring SQL databases.\n\n1006\n00:51:58,800 --> 00:52:00,520\nSo there is that one, right.\n\n1007\n00:52:00,520 --> 00:52:02,290\nThen we have public also.\n\n1008\n00:52:02,290 --> 00:52:05,090\nPublic being whatever access we want\n\n1009\n00:52:05,090 --> 00:52:06,830\npretty much everybody to\nhave on the database.\n\n1010\n00:52:06,830 --> 00:52:08,960\nThis is the only role that\ndoesn't start with db_,\n\n1011\n00:52:08,960 --> 00:52:12,130\nand that's because we can't\nmodify this role anyway.\n\n1012\n00:52:12,130 --> 00:52:15,880\nWe can't change who's in it, we can just\nchange the permissions assigned to it.\n\n1013\n00:52:15,880 --> 00:52:19,240\nAny permissions you give to\nthe public role, everybody will have.\n\n1014\n00:52:20,910 --> 00:52:24,650\nSo these are the roles that\nare present on the server by default.\n\n1015\n00:52:24,650 --> 00:52:26,040\nBut you can create your own.\n\n1016\n00:52:26,040 --> 00:52:28,010\nYou can create your own\nspecialized roles if you want.\n\n1017\n00:52:28,010 --> 00:52:31,680\nBut for most people,\nthese kind of suit our needs.\n\n1018\n00:52:31,680 --> 00:52:37,490\nSo back here, I created a user account\nin the last segment at the server level.\n\n1019\n00:52:38,770 --> 00:52:42,730\nWhich was my dpadmin account.\n\n1020\n00:52:42,730 --> 00:52:44,830\nI want that to be an administrator.\n\n1021\n00:52:44,830 --> 00:52:46,600\nWell, it's just the user right now.\n\n1022\n00:52:46,600 --> 00:52:49,890\nIf I double click on the user right now,\nthey don't have anything to terribly\n\n1023\n00:52:49,890 --> 00:52:54,750\nspecial, but\nI can start to assign them roles and\n\n1024\n00:52:54,750 --> 00:52:56,970\nthen they will be able to\ndo some really good stuff.\n\n1025\n00:52:56,970 --> 00:52:59,800\nSo, here into the properties of dpadmin,\nsee on the left side,\n\n1026\n00:52:59,800 --> 00:53:01,690\nI've got server roles.\n\n1027\n00:53:01,690 --> 00:53:06,130\nAnd I can click on that and\nI can see all the roles that user has and\n\n1028\n00:53:06,130 --> 00:53:08,350\nby default you just have public.\n\n1029\n00:53:08,350 --> 00:53:13,140\nEverybody is in public by default,\nbut I can add more roles to them.\n\n1030\n00:53:13,140 --> 00:53:16,070\nI want dpadmin to be a sysadmin.\n\n1031\n00:53:16,070 --> 00:53:22,480\nSo I am gonna check sysadmin and now\ndpadmin is a true administrator account.\n\n1032\n00:53:22,480 --> 00:53:25,690\nNow it's actually able to do whatever\nit wants to do on this server.\n\n1033\n00:53:28,220 --> 00:53:30,120\nNow that's at the server level.\n\n1034\n00:53:30,120 --> 00:53:31,880\nWhat about at the database level?\n\n1035\n00:53:31,880 --> 00:53:36,230\nWell at the database level,\nit's not logins.\n\n1036\n00:53:36,230 --> 00:53:37,950\nThey're user accounts.\n\n1037\n00:53:37,950 --> 00:53:41,085\nSo if I go down to the database level,\nif I take like my, let's see,\n\n1038\n00:53:41,085 --> 00:53:43,020\nwhat one was I working with last segment?\n\n1039\n00:53:43,020 --> 00:53:43,690\nWas it payroll?\n\n1040\n00:53:46,440 --> 00:53:48,970\nLet's go check here and see.\n\n1041\n00:53:48,970 --> 00:53:50,270\nNo, shoot, I forgot which database.\n\n1042\n00:53:50,270 --> 00:53:51,900\nWe'll use this one anyway.\n\n1043\n00:53:51,900 --> 00:53:55,870\nSo, let's say I want my windows user\naccount to have access to the payroll\n\n1044\n00:53:55,870 --> 00:53:59,460\ndatabase and I want it to have full\naccess to the payroll database.\n\n1045\n00:53:59,460 --> 00:54:02,630\nI want my dpezet regular user\naccount to do whatever it wants in\n\n1046\n00:54:02,630 --> 00:54:03,910\nthe payroll database.\n\n1047\n00:54:03,910 --> 00:54:06,780\nWell, first I'll need to add the user.\n\n1048\n00:54:06,780 --> 00:54:11,830\nSo, I'm going to go in here and do a new\nuser and this is a Windows user so\n\n1049\n00:54:11,830 --> 00:54:15,320\nfor the log-in name I'll just browse and\n\n1050\n00:54:15,320 --> 00:54:19,030\nfind that user because we've already\ndefined it at the server level.\n\n1051\n00:54:20,200 --> 00:54:20,760\nThere we go.\n\n1052\n00:54:22,470 --> 00:54:25,870\nIf you do browse under username,\nyou'll browse the directory.\n\n1053\n00:54:25,870 --> 00:54:28,130\nSo, active directory,\nor your local system.\n\n1054\n00:54:28,130 --> 00:54:30,510\nIf you do login, you're looking for\nthe account you already made.\n\n1055\n00:54:30,510 --> 00:54:35,260\nI already made it at server level,\nso I was just browsing to find that.\n\n1056\n00:54:35,260 --> 00:54:36,990\nIt want me to set a user name.\n\n1057\n00:54:36,990 --> 00:54:39,020\nActually, I'll just stick with the same.\n\n1058\n00:54:41,770 --> 00:54:42,770\nThere.\n\n1059\n00:54:42,770 --> 00:54:45,100\nSo I've created the user account.\n\n1060\n00:54:45,100 --> 00:54:48,830\nNow I can edit that user account and\n\n1061\n00:54:48,830 --> 00:54:53,500\nI'll see in here as I look at it the user,\ntheir default schema.\n\n1062\n00:54:53,500 --> 00:54:55,290\nI don't actually see the role.\n\n1063\n00:54:56,400 --> 00:54:59,940\nAnd the reason is we assigned it\na slightly different way when we're inside\n\n1064\n00:54:59,940 --> 00:55:03,040\nof the database and\nwe're gonna see this more in a minute.\n\n1065\n00:55:03,040 --> 00:55:05,380\nBut if you come down here to the roll,\n\n1066\n00:55:05,380 --> 00:55:10,310\nlet's say I want that user to basically\nbe dbowner, I can pull that up and\n\n1067\n00:55:10,310 --> 00:55:15,190\nwe can see the dbowner list here, and\nit's really strange how it's listed.\n\n1068\n00:55:15,190 --> 00:55:17,490\nWe've got this owner.\n\n1069\n00:55:17,490 --> 00:55:19,760\nThe roll is called dbowner.\n\n1070\n00:55:19,760 --> 00:55:21,610\nThe owner is something called dbo.\n\n1071\n00:55:22,670 --> 00:55:23,600\nWhat is that?\n\n1072\n00:55:23,600 --> 00:55:28,040\nWell, dbo is actually part of a schema.\n\n1073\n00:55:28,040 --> 00:55:29,730\nAnd a schema is a special thing.\n\n1074\n00:55:29,730 --> 00:55:31,530\nIt's a special way of\nmanaging permissions.\n\n1075\n00:55:31,530 --> 00:55:34,440\nAnd we use these down here\nat the database side.\n\n1076\n00:55:34,440 --> 00:55:37,440\nSo, I'm going to talk about that a little\nbit more when we get to the schema side.\n\n1077\n00:55:37,440 --> 00:55:40,980\nBut what's important to me is\nwhat's down here, role members.\n\n1078\n00:55:40,980 --> 00:55:44,600\nThat dbo, that owner is\nthe only role member right now.\n\n1079\n00:55:44,600 --> 00:55:47,430\nI want to add in my dpezet account.\n\n1080\n00:55:47,430 --> 00:55:50,850\nI want dpezet to act as the dbowner.\n\n1081\n00:55:50,850 --> 00:55:56,793\nSo, I'll hit add and I'm going to\nfind that account right there.\n\n1082\n00:55:56,793 --> 00:56:01,070\nAnd now, depezet is in the DB owner role.\n\n1083\n00:56:01,070 --> 00:56:05,023\nAnd when I say okay to that,\nnow I could log in as depezet and\n\n1084\n00:56:05,023 --> 00:56:09,083\nI could do whatever I want to\nthe-- what database is this?\n\n1085\n00:56:09,083 --> 00:56:09,800\nPayroll.\n\n1086\n00:56:09,800 --> 00:56:11,660\nSo the Payroll database.\n\n1087\n00:56:11,660 --> 00:56:14,520\nBut, what access do I have\nto the other databases?\n\n1088\n00:56:14,520 --> 00:56:16,420\nWhatever public gets, right?\n\n1089\n00:56:16,420 --> 00:56:19,680\nI'm in public, so I get whatever access\npublic has on the other databases.\n\n1090\n00:56:19,680 --> 00:56:23,940\nBut on this database, I now just get,\nwell, I get everything,\n\n1091\n00:56:23,940 --> 00:56:28,430\nright, because I'm DBO, I'm database\nowner, or at least I'm in that role.\n\n1092\n00:56:28,430 --> 00:56:30,690\nI could have added myself to\nany of the others roles, too.\n\n1093\n00:56:30,690 --> 00:56:33,640\nI went db_owner cuz I wanted full access.\n\n1094\n00:56:33,640 --> 00:56:35,810\nLet's see, this is payroll, right?\n\n1095\n00:56:35,810 --> 00:56:40,760\nSo maybe I want the sales department\nto be able to read from this database.\n\n1096\n00:56:40,760 --> 00:56:45,290\nSo I could go to db_datareader,\nand under Role Members,\n\n1097\n00:56:45,290 --> 00:56:48,980\nI could add in the sales department,\nand get them added in.\n\n1098\n00:56:48,980 --> 00:56:50,470\nJust remember the database level,\n\n1099\n00:56:50,470 --> 00:56:53,560\nyou can only add in users\nthat exist in the database.\n\n1100\n00:56:53,560 --> 00:56:57,840\nSo, if I haven't added the sales\ndepartment as a user in the database yet,\n\n1101\n00:56:57,840 --> 00:56:59,160\nI won't be able to add them to a role.\n\n1102\n00:56:59,160 --> 00:57:02,910\nSo, I've gotta add the user first and\nthen I can add them to the role and\n\n1103\n00:57:02,910 --> 00:57:03,670\nthey get that access.\n\n1104\n00:57:04,850 --> 00:57:09,250\nNow you can create your on roles at\nthe server level and the database level.\n\n1105\n00:57:09,250 --> 00:57:12,920\nYou just right click on the roles\nfolder and choose new database role.\n\n1106\n00:57:12,920 --> 00:57:18,270\nAnd when you do that you give it a name\nand the users that are going to be in it.\n\n1107\n00:57:18,270 --> 00:57:20,890\nWe'll talk about the securable\nside a little bit later.\n\n1108\n00:57:20,890 --> 00:57:24,220\nSecurables, that's saying\nwhat access you have.\n\n1109\n00:57:24,220 --> 00:57:27,740\nYou got to give access to people so\nthey can access stuff.\n\n1110\n00:57:27,740 --> 00:57:32,060\nThat's the whole point of being connected\nis being able to work with the system.\n\n1111\n00:57:32,060 --> 00:57:35,510\nBut you can create your own role here,\nso maybe I've got something special,\n\n1112\n00:57:35,510 --> 00:57:40,110\nyou know, for db_general access.\n\n1113\n00:57:40,110 --> 00:57:41,330\nOr something like that.\n\n1114\n00:57:41,330 --> 00:57:45,830\nAnd so I can create that role, so\nI've got this db_general access, and\n\n1115\n00:57:45,830 --> 00:57:49,200\nI can start to manipulate\nthe permissions that are on it.\n\n1116\n00:57:49,200 --> 00:57:49,870\nAlright.\n\n1117\n00:57:49,870 --> 00:57:53,460\nFor the exam, you want to be\nfamiliar with the default roles.\n\n1118\n00:57:53,460 --> 00:57:56,320\nThe roles that are there\nwith the default install.\n\n1119\n00:57:56,320 --> 00:58:00,150\nSo, I've put them all in my notes with my\nlittle description of what each one is.\n\n1120\n00:58:00,150 --> 00:58:00,930\nBe familiar with those.\n\n1121\n00:58:02,030 --> 00:58:04,990\nRemember which ones\nare at the server level\n\n1122\n00:58:04,990 --> 00:58:07,220\nversus which ones are at\nthe database level.\n\n1123\n00:58:07,220 --> 00:58:09,418\nIt's pretty easy because of the db_.\n\n1124\n00:58:09,418 --> 00:58:16,240\nAll right, now I mentioned schemas also.\n\n1125\n00:58:16,240 --> 00:58:20,770\nSchemas are another way that\nwe can give people access.\n\n1126\n00:58:20,770 --> 00:58:23,760\nWhen we looked at this database.\n\n1127\n00:58:23,760 --> 00:58:27,050\nThe database was attached to a scheme,\nand really every object\n\n1128\n00:58:27,050 --> 00:58:29,690\ninside of your database is\nattached to a scheme of some sort.\n\n1129\n00:58:30,690 --> 00:58:34,570\nIn the old days,\nevery object had an owner, and\n\n1130\n00:58:34,570 --> 00:58:38,000\nthat owner was usually a user account,\nalright.\n\n1131\n00:58:38,000 --> 00:58:42,560\nAnd I mentioned this in another episode\nwhen we reference an object in sequel.\n\n1132\n00:58:42,560 --> 00:58:46,450\nThere's a relative name, and\nthere's a fully qualified name.\n\n1133\n00:58:46,450 --> 00:58:50,570\nIf I take, for example,\nhere I am in the payroll database.\n\n1134\n00:58:51,660 --> 00:58:53,040\nSorry, let me clean up my mess here.\n\n1135\n00:58:53,040 --> 00:58:55,120\nAll right,\nI'm in the payroll database, and\n\n1136\n00:58:55,120 --> 00:58:57,515\nif I go into tables, I don't have\nan don't have any tables, great.\n\n1137\n00:58:57,515 --> 00:59:00,035\nLet me just create one, so\n\n1138\n00:59:00,035 --> 00:59:04,941\nI'll whip up a table real quick and\nI'll call this payroll.\n\n1139\n00:59:04,941 --> 00:59:09,392\nAll right, so in inside of this database,\n\n1140\n00:59:09,392 --> 00:59:13,937\nI've got a table called payroll.\n\n1141\n00:59:13,937 --> 00:59:17,417\nThat table is an object\ninside of the database.\n\n1142\n00:59:17,417 --> 00:59:19,887\nIndexes are objects\ninside of the databases.\n\n1143\n00:59:19,887 --> 00:59:22,157\nViews are objects inside of the database.\n\n1144\n00:59:22,157 --> 00:59:25,957\nThe user accounts, these are all just\nobjects stored inside of the database.\n\n1145\n00:59:25,957 --> 00:59:30,077\nAnd every object has a relative name and\na fully qualified name.\n\n1146\n00:59:30,077 --> 00:59:30,917\nFor this one.\n\n1147\n00:59:33,940 --> 00:59:37,140\nSo this is the sales table,\nor the Payroll Table, right?\n\n1148\n00:59:37,140 --> 00:59:39,250\nSo this is the Payroll Table.\n\n1149\n00:59:40,520 --> 00:59:44,580\nThe Relative Name is Payroll.\n\n1150\n00:59:46,330 --> 00:59:47,730\nThat's it, just Payroll.\n\n1151\n00:59:47,730 --> 00:59:48,740\nThat's the relative name,\n\n1152\n00:59:48,740 --> 00:59:50,700\nnothing to special there, but\nthe Fully Qualified Name is much longer.\n\n1153\n00:59:50,700 --> 00:59:52,770\nThe Fully Qualified Name\n\n1154\n00:59:57,090 --> 01:00:04,212\nin this case is\nWIN-SQL01.Payroll.dbo.Payroll.\n\n1155\n01:00:04,212 --> 01:00:05,582\nAll right?\n\n1156\n01:00:05,582 --> 01:00:13,080\nI probably shouldn't have used the same,\nwe'll say this is in a different database.\n\n1157\n01:00:13,080 --> 01:00:13,700\nRight?\nMaybe this is in\n\n1158\n01:00:13,700 --> 01:00:15,120\nthe human resources database.\n\n1159\n01:00:17,310 --> 01:00:18,960\nOr the accounting data.\n\n1160\n01:00:18,960 --> 01:00:24,070\nSo it would probably make\nmore sense to be accounting.\n\n1161\n01:00:24,070 --> 01:00:32,540\nSo what you're looking at here is\nthe Server.Database.Schema.Object.\n\n1162\n01:00:32,540 --> 01:00:35,100\nThat's what each of those\nfour entries reference.\n\n1163\n01:00:35,100 --> 01:00:38,210\nThat's the fully qualified name.\n\n1164\n01:00:38,210 --> 01:00:41,980\nNow that is in SQL 2005 and newer.\n\n1165\n01:00:45,500 --> 01:00:50,455\n[SOUND] In SQL 2000 and earlier,\n\n1166\n01:00:50,455 --> 01:00:55,245\nmy screen's gonna go crazy here,\n\n1167\n01:00:55,245 --> 01:00:59,880\nthat was a little bit different.\n\n1168\n01:00:59,880 --> 01:01:06,930\nIt was Server.Database.Owner.Object,\nall right.\n\n1169\n01:01:06,930 --> 01:01:09,610\nIt used to be whoever owned it.\n\n1170\n01:01:09,610 --> 01:01:11,490\nIf I was the owner of\nthe payroll database,\n\n1171\n01:01:11,490 --> 01:01:14,140\nmy name was part of the qualified name.\n\n1172\n01:01:14,140 --> 01:01:17,870\nSo if I owned the payroll table,\n\n1173\n01:01:17,870 --> 01:01:23,672\nThen it would've been\nWIN-SQL01.HumanResources or\n\n1174\n01:01:23,672 --> 01:01:29,322\nAccounting .DPezet.Payroll, all right?\n\n1175\n01:01:29,322 --> 01:01:32,110\nNow that's fine, I'm the owner,\ngreat, I'm part of the name.\n\n1176\n01:01:32,110 --> 01:01:35,460\nBut the problem was, if we wrote\nall of our software to look for\n\n1177\n01:01:35,460 --> 01:01:38,960\nthat table using the full Fully\nqualified name, and then I got fired or\n\n1178\n01:01:38,960 --> 01:01:42,770\nI left the company or whatever, and\na new person came in as the owner.\n\n1179\n01:01:42,770 --> 01:01:46,020\nWell, the owner changed all my software,\n\n1180\n01:01:46,020 --> 01:01:48,330\nhad to be recompiled to\npoint to this new location.\n\n1181\n01:01:48,330 --> 01:01:49,060\nThat was a problem.\n\n1182\n01:01:49,060 --> 01:01:50,720\nIt was a really big issue.\n\n1183\n01:01:50,720 --> 01:01:55,460\nSo, that change in SQL 2005, and what used\nto be the Owner is now the Schema, and\n\n1184\n01:01:55,460 --> 01:01:59,246\nthe Schema is really just\nlike an alias for the Owner.\n\n1185\n01:01:59,246 --> 01:02:05,110\nYou make a Owner, you make a person own\nthe Schema and the Schema owns the Object.\n\n1186\n01:02:06,280 --> 01:02:09,910\nSo, this Schema Is not\na user account anymore.\n\n1187\n01:02:09,910 --> 01:02:13,500\nIt's more like a group or a container.\n\n1188\n01:02:13,500 --> 01:02:15,410\nAnd it's the owner of the object and\n\n1189\n01:02:15,410 --> 01:02:17,930\nnow I can change who owns\nthe schema to change that.\n\n1190\n01:02:17,930 --> 01:02:22,670\nNow that's pretty useful because we\ncan make somebody the owner of many\n\n1191\n01:02:22,670 --> 01:02:23,980\nobjects at once.\n\n1192\n01:02:23,980 --> 01:02:25,010\nLet me show you an example.\n\n1193\n01:02:26,240 --> 01:02:32,450\nIn my notes, I put out a little example\nhere, of some items in a database.\n\n1194\n01:02:32,450 --> 01:02:34,830\nMaybe the database is called company.\n\n1195\n01:02:34,830 --> 01:02:39,880\nAnd then the schemas here are accounting,\nDBO, HR.\n\n1196\n01:02:39,880 --> 01:02:40,920\nThen the objects.\n\n1197\n01:02:40,920 --> 01:02:44,120\nThere's an orders table,\nan expenses table, and so on.\n\n1198\n01:02:44,120 --> 01:02:45,470\nAll of these are in the same database.\n\n1199\n01:02:45,470 --> 01:02:48,361\nNow, notice how I only\nput three values here.\n\n1200\n01:02:48,361 --> 01:02:49,860\nI didn't put the server name.\n\n1201\n01:02:49,860 --> 01:02:53,530\nIf you leave something off, if you leave\nthe server name off, it assumes that\n\n1202\n01:02:53,530 --> 01:02:56,150\nyou're talking about the server that\nyou're running this command from.\n\n1203\n01:02:56,150 --> 01:02:59,330\nIf you leave the database name off,\nit assumes you're running\n\n1204\n01:02:59,330 --> 01:03:01,920\nfrom the database that you're\nconnected to currently.\n\n1205\n01:03:01,920 --> 01:03:02,690\nAll right.\n\n1206\n01:03:02,690 --> 01:03:07,070\nBut the schema, if you leave that off,\nit assumes it's your default schema.\n\n1207\n01:03:07,070 --> 01:03:08,890\nWhich we'll see how to\nset that in a minute.\n\n1208\n01:03:08,890 --> 01:03:11,790\nBut, otherwise, you have to manually\nput in the schema and the object name.\n\n1209\n01:03:11,790 --> 01:03:14,350\nThe object name is really\nthe only one you have to provide.\n\n1210\n01:03:14,350 --> 01:03:17,500\nYou have to provide an object name, or\nyou don't know what you're working with.\n\n1211\n01:03:17,500 --> 01:03:19,796\nRight.\nSo I left the server name off on here.\n\n1212\n01:03:19,796 --> 01:03:24,870\nIt's just going to assume I'm on my local\nserver if I hire a new accountant and\n\n1213\n01:03:24,870 --> 01:03:29,200\nI want that accountant to have full\ncontrol of the accounting tables, and\n\n1214\n01:03:29,200 --> 01:03:30,360\nthere's 50 accounting tables.\n\n1215\n01:03:31,380 --> 01:03:34,430\nIf I create an accounting schema, and\n\n1216\n01:03:34,430 --> 01:03:38,610\nthe accounting schema owns\nall the accounting tables.\n\n1217\n01:03:38,610 --> 01:03:40,910\nAll I have to do is take\nthat new accountant, and\n\n1218\n01:03:40,910 --> 01:03:44,600\nmake them the owner of\nthe Accounting schema.\n\n1219\n01:03:44,600 --> 01:03:47,930\nAnd when that happens,\nthey own Accounting, and\n\n1220\n01:03:47,930 --> 01:03:49,870\nAccounting owns these tables.\n\n1221\n01:03:49,870 --> 01:03:52,220\nSo now, that person owns all these tables.\n\n1222\n01:03:52,220 --> 01:03:53,458\nIt makes life a lot easier.\n\n1223\n01:03:53,458 --> 01:03:56,381\nAnd I can change that\nowner out whenever I want,\n\n1224\n01:03:56,381 --> 01:03:58,875\nwithout having to rewrite my software.\n\n1225\n01:03:58,875 --> 01:04:02,610\nSo, think of a schema as like a, an alias.\n\n1226\n01:04:02,610 --> 01:04:05,167\nAll right?\nIt's really easy to think it as a group.\n\n1227\n01:04:05,167 --> 01:04:08,410\nPut a person in this schema group or\nwhatever, and then they have the access.\n\n1228\n01:04:08,410 --> 01:04:13,740\nBut the problem is, a user can\nonly be in one schema at a time.\n\n1229\n01:04:13,740 --> 01:04:16,350\nIf I attach a schema to a particular user,\nthat's it.\n\n1230\n01:04:16,350 --> 01:04:17,020\nThey're in it.\n\n1231\n01:04:17,020 --> 01:04:18,750\nRight?\nThey're in that place.\n\n1232\n01:04:18,750 --> 01:04:21,530\nSo it's a lot different than groups,\n\n1233\n01:04:21,530 --> 01:04:24,950\nwhere you can be in a ton of different\ngroups at once, and off you go.\n\n1234\n01:04:24,950 --> 01:04:28,010\nAlso, Schema is really\njust owned by one person.\n\n1235\n01:04:28,010 --> 01:04:31,390\nWe could use a Windows group to get around\nthat, have a Windows group own the Schema\n\n1236\n01:04:31,390 --> 01:04:33,750\nand then whoever's in that Windows\ngroup would have the access.\n\n1237\n01:04:33,750 --> 01:04:36,100\nBut it's really designed\nto be owned by one person.\n\n1238\n01:04:36,100 --> 01:04:37,400\nSo we'd have to be\na little bit careful with\n\n1239\n01:04:39,040 --> 01:04:42,120\nthat because the old way was such a mess.\n\n1240\n01:04:42,120 --> 01:04:45,570\nThe old way, where this was\nan individual user, was such a mess\n\n1241\n01:04:45,570 --> 01:04:50,660\nthat most developers got in the habit\nof just leaving it at the default.\n\n1242\n01:04:50,660 --> 01:04:58,449\nThe default owner [SOUND]\nis an account called DBO.\n\n1243\n01:04:58,449 --> 01:05:01,440\nAnd it's not really an account at all,\nit's just a group.\n\n1244\n01:05:01,440 --> 01:05:03,800\nIt's called DBO,\nwhich stands for Database Owner.\n\n1245\n01:05:03,800 --> 01:05:08,160\nAnd most SQL developers have gotten in\nthe habit of just leaving it that way.\n\n1246\n01:05:08,160 --> 01:05:12,010\nNotice, when I created that payroll table\na minute ago, see how it's DBO.payroll.\n\n1247\n01:05:12,010 --> 01:05:15,120\nSo, DBO owns the payroll table.\n\n1248\n01:05:15,120 --> 01:05:16,191\nAll right?\n\n1249\n01:05:16,191 --> 01:05:21,280\nNow, the sysadmin group DBO role.\n\n1250\n01:05:21,280 --> 01:05:24,850\nAnd so anybody I put in the system\nadmins group will own DBO,\n\n1251\n01:05:24,850 --> 01:05:26,660\nwhich in turn owns payroll,\nthey'll own that table.\n\n1252\n01:05:26,660 --> 01:05:28,720\nThey'll have access to\ndo whatever they want.\n\n1253\n01:05:28,720 --> 01:05:32,120\nand so most developers out there will\ntell you to just leave it at DBO.\n\n1254\n01:05:32,120 --> 01:05:32,770\nBut you do not have to.\n\n1255\n01:05:32,770 --> 01:05:35,800\nYou can use it to really\nleverage permissions if you want,\n\n1256\n01:05:35,800 --> 01:05:38,680\nyou just need to create\nyour own schemas to do it.\n\n1257\n01:05:38,680 --> 01:05:40,190\nSo if we take,\n\n1258\n01:05:40,190 --> 01:05:43,420\nlets go up to my Human Resource database\nit will make a little more sense here.\n\n1259\n01:05:43,420 --> 01:05:47,050\nSo under human resources I might\nhave tables that do all sorts of\n\n1260\n01:05:47,050 --> 01:05:47,730\ndifferent things.\n\n1261\n01:05:49,320 --> 01:05:51,620\nI might have my payroll\ninformation in there.\n\n1262\n01:05:51,620 --> 01:05:52,600\nI might have.\n\n1263\n01:05:52,600 --> 01:05:55,550\nI don't really want to\ncreate a bunch of tables.\n\n1264\n01:05:55,550 --> 01:05:58,130\nLet's just do products instead, I suppose.\n\n1265\n01:05:58,130 --> 01:06:00,970\nIf we go to Products > Tables.\n\n1266\n01:06:00,970 --> 01:06:02,390\nYeah, I gotta a couple of Tables here.\n\n1267\n01:06:02,390 --> 01:06:05,090\nSee, I've got Employees,\nProducts, and so on.\n\n1268\n01:06:05,090 --> 01:06:08,910\nWell I might want a lot of people to\nhave access to the Products table and\n\n1269\n01:06:08,910 --> 01:06:10,090\nhave control over that.\n\n1270\n01:06:10,090 --> 01:06:14,410\nBut Employees, that should really be\nmanaged by my human resources department.\n\n1271\n01:06:14,410 --> 01:06:19,980\nSo I might create a schema called Human\nResources, and attach it to that table.\n\n1272\n01:06:19,980 --> 01:06:23,340\nAnd now I can control the owner\nbased on that schema.\n\n1273\n01:06:23,340 --> 01:06:31,250\nIf we go to security, I had Users and\nRoles the very next folder is Schemas.\n\n1274\n01:06:31,250 --> 01:06:33,750\nAnd in there, also the Default Schemas.\n\n1275\n01:06:33,750 --> 01:06:35,350\nNow, notice what's already in here.\n\n1276\n01:06:35,350 --> 01:06:39,038\nThere's things like DBO, I've mentioned\nthat one a few times, that's important.\n\n1277\n01:06:39,038 --> 01:06:42,420\nBut there is also all of the database\nrolls, there's all of the different\n\n1278\n01:06:42,420 --> 01:06:44,800\ndatabase rolls that are right there,\nthey have their own schema.\n\n1279\n01:06:44,800 --> 01:06:48,930\nSo, I could recycle those roles and\nwhen I put people in those roles,\n\n1280\n01:06:48,930 --> 01:06:50,870\nthey'll now have access\nto whatever that is.\n\n1281\n01:06:50,870 --> 01:06:55,780\nBut, I can create my own too, so\nI might create a schema in here called HR.\n\n1282\n01:06:55,780 --> 01:06:56,790\nAll right.\n\n1283\n01:06:56,790 --> 01:06:59,570\nSo this is gonna be my\nhuman resources schema, and\n\n1284\n01:06:59,570 --> 01:07:04,770\nI can set the schema owner which would\nprobably be like my human resources group.\n\n1285\n01:07:04,770 --> 01:07:08,070\nNow I didn't define that ahead of time,\nso let me do that real quick.\n\n1286\n01:07:08,070 --> 01:07:15,494\nI'll go into Windows, and I'll create\na new group called Human Resources.\n\n1287\n01:07:18,826 --> 01:07:19,870\nAll right.\n\n1288\n01:07:19,870 --> 01:07:24,690\nAnd then back in SQL,\nI'll go up at the server level,\n\n1289\n01:07:25,750 --> 01:07:27,920\ncause I'll probably use this\non more than one database.\n\n1290\n01:07:27,920 --> 01:07:29,949\nRight?\nSo at the server level I'll go into my\n\n1291\n01:07:29,949 --> 01:07:31,785\nlogins and I'll create a new login.\n\n1292\n01:07:34,020 --> 01:07:36,600\nAnd it's gonna be that\nhuman resources group.\n\n1293\n01:07:40,806 --> 01:07:42,130\nThere we go.\n\n1294\n01:07:42,130 --> 01:07:43,320\nSo, now I've got\nthe Human Resources group.\n\n1295\n01:07:43,320 --> 01:07:46,390\nI am gonna set them to default\nto that products database.\n\n1296\n01:07:49,110 --> 01:07:51,010\nActually it's not gonna let me do that,\nis it?\n\n1297\n01:07:51,010 --> 01:07:53,200\nAll right I'll leave it to the master.\n\n1298\n01:07:53,200 --> 01:07:56,480\nEach user can have their own default\nanyway so it doesn't really matter here so\n\n1299\n01:07:56,480 --> 01:07:57,800\nI'll just leave it be.\n\n1300\n01:07:57,800 --> 01:07:59,430\nAll right.\nSo, now I've got it there.\n\n1301\n01:07:59,430 --> 01:08:03,000\nAt the database,\nI'll go under security and\n\n1302\n01:08:03,000 --> 01:08:06,490\nlogins, and\nI'm gonna attach to that login.\n\n1303\n01:08:08,060 --> 01:08:11,562\nSo I'll just browse in here and\nfind it, or, wait.\n\n1304\n01:08:15,341 --> 01:08:18,647\nYeah, sorry, so let me just change\nthat to turn on groups there, and\n\n1305\n01:08:18,647 --> 01:08:20,197\nwe're gonna link in to it here.\n\n1306\n01:08:23,448 --> 01:08:24,150\nAll right.\n\n1307\n01:08:24,150 --> 01:08:28,840\nSo we'll get that in there and\nonce that's in place, now,\n\n1308\n01:08:28,840 --> 01:08:33,580\nwhen I create that new schema,\nwhen I create the schema for\n\n1309\n01:08:33,580 --> 01:08:36,360\nhuman resources, I'll be able\nto set that group as the owner.\n\n1310\n01:08:36,360 --> 01:08:38,740\nSo as I put anybody in\nthe human resources group,\n\n1311\n01:08:38,740 --> 01:08:42,510\nthey'll automatically have\nfull control over anything.\n\n1312\n01:08:42,510 --> 01:08:44,790\nOwned by the human resources schema.\n\n1313\n01:08:44,790 --> 01:08:48,990\nSo, back under products,\nI have my various tables so\n\n1314\n01:08:48,990 --> 01:08:53,410\nI'll go under Security > Schemas and I'll\ncreate that new human resources schema.\n\n1315\n01:08:53,410 --> 01:08:55,250\nI'll just call it HR.\n\n1316\n01:08:55,250 --> 01:09:03,180\nAnd for the owner, I'll set it to my\nhuman resources group, which, oh, shoot.\n\n1317\n01:09:03,180 --> 01:09:04,840\nThat's right,\nI've gotta create a role for it.\n\n1318\n01:09:04,840 --> 01:09:06,270\nI've gotta do one more step.\n\n1319\n01:09:06,270 --> 01:09:08,950\nAll right, you'll see it like\nI've got DBO and Guest, Public,\n\n1320\n01:09:08,950 --> 01:09:11,110\nthese are all the roles that are in place.\n\n1321\n01:09:11,110 --> 01:09:13,730\nSo I need to create a role and\nattach that group to the role.\n\n1322\n01:09:13,730 --> 01:09:14,990\nAll right?\nI forgot that step, so\n\n1323\n01:09:14,990 --> 01:09:16,720\nlet me do that real quick.\n\n1324\n01:09:16,720 --> 01:09:17,969\nSo I'll just go up to my roles.\n\n1325\n01:09:19,910 --> 01:09:20,820\nAnd so I'm gonna create a role.\n\n1326\n01:09:20,820 --> 01:09:24,030\nI'll call it db_humanresources.\n\n1327\n01:09:24,030 --> 01:09:26,140\nSo these will be my human\nresources employees.\n\n1328\n01:09:27,400 --> 01:09:33,570\nAnd for the role members\nI'm gonna add in my group.\n\n1329\n01:09:33,570 --> 01:09:35,030\nMy group's not showing up here.\n\n1330\n01:09:35,030 --> 01:09:35,830\nWhy is that?\n\n1331\n01:09:39,914 --> 01:09:41,220\nMy group is not showing up.\n\n1332\n01:09:41,220 --> 01:09:44,500\nBut, what I would normally do is go\nahead and add that into the role.\n\n1333\n01:09:44,500 --> 01:09:46,570\nI'm just gonna leave that be cuz\nnow I've got the role that I need.\n\n1334\n01:09:48,150 --> 01:09:50,670\nAnd now I can create my schema and\nassign that owner.\n\n1335\n01:09:50,670 --> 01:09:52,320\nIf I was a assigning to\nan individual person,\n\n1336\n01:09:52,320 --> 01:09:53,310\nthat would have been a lot shorter.\n\n1337\n01:09:53,310 --> 01:09:54,840\nRight?\nCreate in group, linking the group,\n\n1338\n01:09:54,840 --> 01:09:55,770\nthat extends things out.\n\n1339\n01:09:55,770 --> 01:09:57,710\nBut if you're attaching\nit to a single person,\n\n1340\n01:09:57,710 --> 01:10:00,120\nyou just move right through\nwith the individual user.\n\n1341\n01:10:00,120 --> 01:10:01,490\nSo I'll create that HR schema.\n\n1342\n01:10:02,490 --> 01:10:06,724\nAnd I should see that human\nresources role, there it is.\n\n1343\n01:10:08,552 --> 01:10:13,240\nAll right, so now anybody that I put in\nthat role will have access to this schema.\n\n1344\n01:10:13,240 --> 01:10:18,110\nAnd as I start creating tables, now I\ncan assign the tables to that schema.\n\n1345\n01:10:18,110 --> 01:10:19,397\nAnd control access that way.\n\n1346\n01:10:19,397 --> 01:10:21,545\nRight?\nControl ownership at least.\n\n1347\n01:10:21,545 --> 01:10:24,225\nSo if I take my employees table and\n\n1348\n01:10:24,225 --> 01:10:26,685\npull up its properties,\nyou'll see the schema right here.\n\n1349\n01:10:26,685 --> 01:10:29,935\nNow notice it's not letting\nme change the schema.\n\n1350\n01:10:29,935 --> 01:10:33,005\nWhen you create the table,\nyou set the schema at that time.\n\n1351\n01:10:33,005 --> 01:10:36,097\nSo if I wanna change this,\nI'm gonna have to recreate the table.\n\n1352\n01:10:36,097 --> 01:10:39,407\nThis is one of those things that you\ncan't change after the fact, but\n\n1353\n01:10:39,407 --> 01:10:42,317\nif I create a new table,\nI'll be able to specify that schema and\n\n1354\n01:10:42,317 --> 01:10:45,667\nI can copy the data over to it and\nyou recreate it.\n\n1355\n01:10:45,667 --> 01:10:49,147\nYou can do the script option to\ncreate a script to recreate and\n\n1356\n01:10:49,147 --> 01:10:51,857\njust change the schema at that point and\nit'll rebuild it.\n\n1357\n01:10:51,857 --> 01:10:55,790\nBut if I look at the properties when I\ncreate a new table, here's my schema.\n\n1358\n01:10:55,790 --> 01:10:58,350\nAnd I can pick from it and\nI'll see human resources in here.\n\n1359\n01:10:59,840 --> 01:11:00,910\nRight there.\n\n1360\n01:11:00,910 --> 01:11:01,470\nAll right.\n\n1361\n01:11:01,470 --> 01:11:05,790\nNow when I change that schema on\nthe table from now on when I refer to it.\n\n1362\n01:11:05,790 --> 01:11:10,113\nIt's fully qualified name would be\nlike in this case it would be WIN\n\n1363\n01:11:10,113 --> 01:11:16,618\n-SQL01.Products.hr.Employees.\n\n1364\n01:11:16,618 --> 01:11:18,153\nAll right?\n\n1365\n01:11:18,153 --> 01:11:23,345\nSo hr becomes part of\nthe name of that system.\n\n1366\n01:11:23,345 --> 01:11:24,815\nAnd it's really just controlling access.\n\n1367\n01:11:24,815 --> 01:11:28,725\nNow, if that seemed really long and\nconvoluted, it is, and\n\n1368\n01:11:28,725 --> 01:11:30,335\nit's kind of cumbersome.\n\n1369\n01:11:30,335 --> 01:11:32,675\nAnd so in real life land,\na lot of people don't use this.\n\n1370\n01:11:32,675 --> 01:11:36,115\nA lot of people leave it as DBO as\nthe default and don't mess with it.\n\n1371\n01:11:36,115 --> 01:11:39,795\nYou can give somebody full access\npermissions to a database just by putting\n\n1372\n01:11:39,795 --> 01:11:41,715\nthem in the DBO owner role.\n\n1373\n01:11:41,715 --> 01:11:42,780\nThat knocks it out.\n\n1374\n01:11:42,780 --> 01:11:43,690\nRight?\n\n1375\n01:11:43,690 --> 01:11:47,015\nBut if you want to give somebody\naccess to more than one object at\n\n1376\n01:11:47,015 --> 01:11:49,773\na time through the use of a schema,\nyou can do this and\n\n1377\n01:11:49,773 --> 01:11:53,125\nit's controlled at the table level,\nnot the database level.\n\n1378\n01:11:53,125 --> 01:11:56,486\nRight?\nIf I put somebody in the DB owner role,\n\n1379\n01:11:56,486 --> 01:11:58,792\nThat's the whole database.\n\n1380\n01:11:58,792 --> 01:12:01,580\nWhat if I just wanna have\naccess to a single table?\n\n1381\n01:12:01,580 --> 01:12:03,430\nWell, a schema will let you do that.\n\n1382\n01:12:03,430 --> 01:12:07,340\nIt'll let you give them ownership over\na single table or a group of tables and\n\n1383\n01:12:07,340 --> 01:12:08,230\nnot the whole database.\n\n1384\n01:12:08,230 --> 01:12:09,920\nThat's a big deal, right.\n\n1385\n01:12:09,920 --> 01:12:11,630\nBut you can do permissions differently.\n\n1386\n01:12:11,630 --> 01:12:13,330\nYou can do permissions\nmanually if you want.\n\n1387\n01:12:13,330 --> 01:12:15,200\nThis is another option.\n\n1388\n01:12:15,200 --> 01:12:18,810\nIf I pull up the properties\nof the data base itself, so\n\n1389\n01:12:18,810 --> 01:12:21,710\nif I go to products and properties,\n\n1390\n01:12:21,710 --> 01:12:24,840\nyou'll see you've got a permissions\noption over here on the left side and\n\n1391\n01:12:24,840 --> 01:12:29,690\nyou can add in users and specifically\nput what their permissions are.\n\n1392\n01:12:29,690 --> 01:12:32,880\nSo for example, I can go in here and\n\n1393\n01:12:32,880 --> 01:12:37,810\nfind my DBhumanresources roll,\n\n1394\n01:12:37,810 --> 01:12:41,240\nor if you browse a different way,\nyou can pull up users.\n\n1395\n01:12:41,240 --> 01:12:43,990\nBut I'll do the DB_humanresources role.\n\n1396\n01:12:43,990 --> 01:12:47,780\nAnd then I can say for DB_humanresources,\nhere's the access that they get.\n\n1397\n01:12:47,780 --> 01:12:49,320\nNow this is at the database level.\n\n1398\n01:12:49,320 --> 01:12:50,860\nSo at the database level,\n\n1399\n01:12:50,860 --> 01:12:55,130\nI can grant them all sorts of\nvery fine-grained permissions.\n\n1400\n01:12:55,130 --> 01:12:57,230\nLook at what all is in here.\n\n1401\n01:12:57,230 --> 01:13:04,700\nWe've got alter permissions, alter roles,\nalter keys, certificates, contacts.\n\n1402\n01:13:04,700 --> 01:13:07,890\nYou can grant them,\nyou can deny them, all right.\n\n1403\n01:13:07,890 --> 01:13:09,770\nYou've got a few different options here.\n\n1404\n01:13:09,770 --> 01:13:13,870\nGrant means grant it explicitly to them,\nyou want them to have that access.\n\n1405\n01:13:13,870 --> 01:13:16,470\nWith grant means as long as nobody else is\n\n1406\n01:13:16,470 --> 01:13:18,980\ndenying it we'll give\nthem that access also.\n\n1407\n01:13:18,980 --> 01:13:20,810\nSo we can kinda keep looking through.\n\n1408\n01:13:20,810 --> 01:13:22,140\nHere's all the alter commands.\n\n1409\n01:13:22,140 --> 01:13:25,400\nHere's backing up, creating objects.\n\n1410\n01:13:25,400 --> 01:13:29,720\nYou'll see deleting, executing,\nall sorts of very fine grain permissions.\n\n1411\n01:13:29,720 --> 01:13:33,640\nSo you can really get in there and\nset a specific set of permissions for\n\n1412\n01:13:33,640 --> 01:13:35,440\nwhat you want them to be able to do.\n\n1413\n01:13:35,440 --> 01:13:37,690\nMaybe you want them to be\nable to create tables.\n\n1414\n01:13:39,020 --> 01:13:42,170\nAnd so you can go in here and\nfind that create table, but\n\n1415\n01:13:42,170 --> 01:13:44,390\nyou don't want them to be\nable to create a view.\n\n1416\n01:13:44,390 --> 01:13:51,270\nWell, if I give them the DB data writer or\nDDL admin.\n\n1417\n01:13:51,270 --> 01:13:53,930\nDDL admin, I don't think I\nmentioned that one earlier,\n\n1418\n01:13:53,930 --> 01:13:55,970\nthat's data definition language.\n\n1419\n01:13:55,970 --> 01:13:59,310\nDDL admins, the ones who are able to\ncreate tables, and create views, and\n\n1420\n01:13:59,310 --> 01:14:01,820\ncreate infrastructure in the database.\n\n1421\n01:14:01,820 --> 01:14:06,240\nSo, if I want somebody to be able\nto create tables but not views,\n\n1422\n01:14:06,240 --> 01:14:11,700\nif I give them the DB DDL admin role,\nthey can create tables and views.\n\n1423\n01:14:11,700 --> 01:14:17,540\nBut if I do it this way I can give them\njust create tables, but not, create view.\n\n1424\n01:14:17,540 --> 01:14:20,470\nIn fact, I can specifically\ndeny them from creating views\n\n1425\n01:14:20,470 --> 01:14:22,490\nif I wanted to override that behavior.\n\n1426\n01:14:22,490 --> 01:14:24,460\nThis is a little more manual.\n\n1427\n01:14:24,460 --> 01:14:27,430\nWe're not using those automated roles,\nbut it's here and\n\n1428\n01:14:27,430 --> 01:14:29,270\nit gives you a lot more\nfine-grained control.\n\n1429\n01:14:30,880 --> 01:14:33,200\nNow I'm doing that here\non the database itself.\n\n1430\n01:14:33,200 --> 01:14:37,410\nIf you take a look at a table object,\nif I go to this employees table and\n\n1431\n01:14:37,410 --> 01:14:41,940\npull up it's properties and go to\npermissions you'll see it's very similar.\n\n1432\n01:14:41,940 --> 01:14:44,910\nWe can add in roles and\nwe can set what they want them to do.\n\n1433\n01:14:44,910 --> 01:14:49,107\nSo if I go here and\nI pick that DB humanresources role.\n\n1434\n01:14:51,550 --> 01:14:54,780\nAnd right now I'm just seeing\nthat one role that I made, right.\n\n1435\n01:14:54,780 --> 01:14:58,710\nIf I had added individual users to this\ndatabase, I'd see those users here, too.\n\n1436\n01:14:58,710 --> 01:15:00,230\nI added them to a different database.\n\n1437\n01:15:01,830 --> 01:15:04,320\nBut I can add them in, and\nI get the fine grain control here.\n\n1438\n01:15:04,320 --> 01:15:05,984\nIt's just a different set of controls,\nright?\n\n1439\n01:15:05,984 --> 01:15:10,070\nBecause these are controls as it\npertains to this particular table.\n\n1440\n01:15:10,070 --> 01:15:13,320\nSo on a table we don't see\nthings like create a table,\n\n1441\n01:15:13,320 --> 01:15:15,880\nbecause this is permissions\non a table itself.\n\n1442\n01:15:15,880 --> 01:15:19,655\nSo you'll see whether they can alter\nrecords, rows inside of the table.\n\n1443\n01:15:19,655 --> 01:15:24,890\nWhether they can delete them, do select\nstatements to query it, take ownership,\n\n1444\n01:15:24,890 --> 01:15:26,870\nupdate, each of those controls.\n\n1445\n01:15:26,870 --> 01:15:29,630\nYou can get very,\nvery specific on those permissions.\n\n1446\n01:15:32,370 --> 01:15:33,940\nAll right, its up to you though.\n\n1447\n01:15:33,940 --> 01:15:35,980\nThe default roles\nare normally adequate but\n\n1448\n01:15:35,980 --> 01:15:39,610\nif you're doing a web application, you've\ngot to be really careful with this stuff.\n\n1449\n01:15:39,610 --> 01:15:43,700\nBecause, if a hacker tries to do a SQL\ninjection attack, what they try and\n\n1450\n01:15:43,700 --> 01:15:47,020\ndo is get the server to run\ncommands you don't normally need.\n\n1451\n01:15:47,020 --> 01:15:50,090\nAnd those might be commands that\nthe default roles are exposing and\n\n1452\n01:15:50,090 --> 01:15:54,270\nallowing that you could have prevented if\nyou came in here and manually said, hey,\n\n1453\n01:15:54,270 --> 01:15:56,610\nthis account should really just\nbe running select commands.\n\n1454\n01:15:56,610 --> 01:15:58,780\nIt should never run an update or\nan insert.\n\n1455\n01:15:58,780 --> 01:15:59,380\nRight?\n\n1456\n01:15:59,380 --> 01:16:02,860\nBy doing that, if a hacker tries\nto inject one of those commands,\n\n1457\n01:16:02,860 --> 01:16:05,590\nit just gets denied outright because\nthey didn't have that access.\n\n1458\n01:16:05,590 --> 01:16:08,400\nVersus if I had given them\nsomething like DB Owner,\n\n1459\n01:16:08,400 --> 01:16:10,710\nthey could do whatever they wanted,\nand go crazy with it.\n\n1460\n01:16:10,710 --> 01:16:13,990\nSo really being specific about\nyour permissions is important.\n\n1461\n01:16:15,040 --> 01:16:18,970\nAll right, so those are schemas, groups,\n\n1462\n01:16:18,970 --> 01:16:20,760\nwe got to see a little\nbit about permissions.\n\n1463\n01:16:20,760 --> 01:16:22,490\nLet's see,\nwhat else am I leaving out here?\n\n1464\n01:16:24,680 --> 01:16:27,040\nI've got one more thing that\nI wanna talk about, but\n\n1465\n01:16:27,040 --> 01:16:30,550\nthis is probably a good place to stop and\ntake a break.\n\n1466\n01:16:30,550 --> 01:16:31,890\nSo, let's take a pause here.\n\n1467\n01:16:31,890 --> 01:16:33,880\nI've got a few more little\nthings I want to address, but\n\n1468\n01:16:33,880 --> 01:16:35,450\nwe're almost done with this one.\n\n1469\n01:16:35,450 --> 01:16:37,917\nSo, stay tuned, we'll be back after this.\n\n1470\n01:16:37,917 --> 01:16:38,982\n[MUSIC]\n\n1471\n01:16:38,982 --> 01:16:45,541\n[SOUND].\n\n1472\n01:16:45,541 --> 01:16:47,230\nAll right.\nWelcome back everybody.\n\n1473\n01:16:47,230 --> 01:16:50,620\nSo the last thing that I wanted to talk\nabout was something that we saw just\n\n1474\n01:16:50,620 --> 01:16:52,610\nbriefly at the beginning of the show.\n\n1475\n01:16:52,610 --> 01:16:56,960\nWhen we created the user account,\nit asked us to provide a password and\n\n1476\n01:16:56,960 --> 01:17:02,150\none of the other options it gave\nus was to provide a certificate,\n\n1477\n01:17:02,150 --> 01:17:03,140\ninstead of a password.\n\n1478\n01:17:03,140 --> 01:17:06,710\nNow, why would I wanna do\ncertificate-based authentication?\n\n1479\n01:17:06,710 --> 01:17:11,230\nThe main reason is not for\nusers but for applications.\n\n1480\n01:17:11,230 --> 01:17:16,020\nIf I have a program that's going\nto be reaching into SQL accessing\n\n1481\n01:17:16,020 --> 01:17:19,770\nthe data base and pulling data I do not\nnecessarily know who the user is, right?\n\n1482\n01:17:19,770 --> 01:17:23,420\nMy end users they may not need\ndirect access to the data base.\n\n1483\n01:17:23,420 --> 01:17:26,530\nI just want this software to\nhave access to the database,\n\n1484\n01:17:26,530 --> 01:17:28,310\nregardless of who the user is.\n\n1485\n01:17:28,310 --> 01:17:30,560\nSo that's a very common scenario.\n\n1486\n01:17:30,560 --> 01:17:33,490\nSo the application needs\nto authenticate itself.\n\n1487\n01:17:33,490 --> 01:17:35,800\nWell, you could put a password in there.\n\n1488\n01:17:35,800 --> 01:17:38,880\nBut, if somebody hacks the software and\nfigures out the password,\n\n1489\n01:17:38,880 --> 01:17:42,930\nthey can now reach out and access\nthe database versus doing certificate\n\n1490\n01:17:42,930 --> 01:17:46,630\nauthentication, which is tied\nto the application itself.\n\n1491\n01:17:46,630 --> 01:17:50,470\nThat will ensure that only that\nprogram is able to get in.\n\n1492\n01:17:50,470 --> 01:17:53,690\nYou might have further authentication for\nthe user as far as accessing that\n\n1493\n01:17:53,690 --> 01:17:58,550\napplication, but the program itself\nwill use certificates to show that it's\n\n1494\n01:17:58,550 --> 01:18:02,350\nallowed to connect in and authenticate\nwithout the need for a password.\n\n1495\n01:18:02,350 --> 01:18:03,820\nYou can use it, not just for\n\n1496\n01:18:03,820 --> 01:18:06,700\nthe authentication, but\nalso to encrypt the traffic.\n\n1497\n01:18:06,700 --> 01:18:11,580\nYou can create basically like a TLS,\na transport layer security tunnel between\n\n1498\n01:18:11,580 --> 01:18:15,480\nthe program and SQL to ensure that if\nsomebody is intercepting traffic they'll\n\n1499\n01:18:15,480 --> 01:18:20,720\njust see the encrypted [INAUDIBLE] text\nof the traffic passing over the network.\n\n1500\n01:18:20,720 --> 01:18:24,560\nSo, really cool stuff,\nnot really designed for end users.\n\n1501\n01:18:24,560 --> 01:18:28,520\nYou can use it for a regular user,\nbut it's a nightmare to get logged in.\n\n1502\n01:18:28,520 --> 01:18:30,140\nIt doesn't work that way.\n\n1503\n01:18:30,140 --> 01:18:33,000\nSo it's really designed for\napplications, all right?\n\n1504\n01:18:33,000 --> 01:18:35,730\nNow, you've got that option here\nto map it to a certificate.\n\n1505\n01:18:35,730 --> 01:18:39,340\nAnd you'll notice I've only got one\ncertificate in here for the transparent\n\n1506\n01:18:39,340 --> 01:18:44,090\ndatabase encryption, that's not one\nthat we should use for applications.\n\n1507\n01:18:44,090 --> 01:18:48,740\nYou see the settings here, but\nthe GUI really doesn't support it.\n\n1508\n01:18:48,740 --> 01:18:52,490\nSo, this is really saying,\nif you've already got your keys created,\n\n1509\n01:18:52,490 --> 01:18:55,820\nif you've already set all that stuff up,\nyou can pick it here in the GUI, but\n\n1510\n01:18:55,820 --> 01:18:56,870\nusually we don't.\n\n1511\n01:18:56,870 --> 01:19:01,510\nAnd, in fact, if you go back here\nto our server in security, and we\n\n1512\n01:19:01,510 --> 01:19:05,019\nstart to kind of browse around for things,\nactually as it need to go on the database.\n\n1513\n01:19:06,430 --> 01:19:09,750\nIf we go in here, there's actually\na certificates folder somewhere.\n\n1514\n01:19:09,750 --> 01:19:12,840\nI never use it because it\nis kinda worthless [LAUGH].\n\n1515\n01:19:12,840 --> 01:19:14,680\nLet me find it though, I'll show you.\n\n1516\n01:19:14,680 --> 01:19:17,820\nIt's one of those where they've\nadded entries here in the database\n\n1517\n01:19:17,820 --> 01:19:18,660\nwhere you can see them.\n\n1518\n01:19:18,660 --> 01:19:22,040\nSo here, certificates and\nsymmetric keys, asymmetric keys.\n\n1519\n01:19:22,040 --> 01:19:25,530\nSo I can look at the if I've go them, but\n\n1520\n01:19:25,530 --> 01:19:27,910\nif I right-click,\nthere's no new certificate.\n\n1521\n01:19:27,910 --> 01:19:29,370\nThere's no new symmetric key.\n\n1522\n01:19:29,370 --> 01:19:30,610\nThere's no new options.\n\n1523\n01:19:30,610 --> 01:19:33,190\nThe GUI doesn't actually\nsupport this stuff.\n\n1524\n01:19:33,190 --> 01:19:36,080\nSo, if you're writing an application\nthat you wanna be able to reach into\n\n1525\n01:19:36,080 --> 01:19:38,730\nthe database,\nit's straight to the command line.\n\n1526\n01:19:38,730 --> 01:19:42,020\nWe got to into transit desk you own\nto create all this infrastructure.\n\n1527\n01:19:42,020 --> 01:19:44,292\nNow it's not normally done by itself.\n\n1528\n01:19:44,292 --> 01:19:49,223\nIt's normally done in conjunction with\nanother technology called the service\n\n1529\n01:19:49,223 --> 01:19:50,360\nbroker, right.\n\n1530\n01:19:50,360 --> 01:19:55,414\nNow, the service broker it shows up on\nthe 7463 exam but this is the 7462 show so\n\n1531\n01:19:55,414 --> 01:19:59,167\nyou're not going to see much about\nthe service broker on there.\n\n1532\n01:19:59,167 --> 01:20:02,000\nThat's a good thing because\nit's pretty complex.\n\n1533\n01:20:02,000 --> 01:20:05,707\nWith an end user, if they go to\nmake a change in the database, and\n\n1534\n01:20:05,707 --> 01:20:07,708\nthe change fails, what happens?\n\n1535\n01:20:07,708 --> 01:20:08,958\nThey get an error, right?\n\n1536\n01:20:08,958 --> 01:20:09,950\nAnd what does the end user do?\n\n1537\n01:20:09,950 --> 01:20:10,740\nThey just retry try it.\n\n1538\n01:20:10,740 --> 01:20:12,370\nThey go, all right,\nwell I got an error, let me retry it.\n\n1539\n01:20:12,370 --> 01:20:14,480\nPretty straight forward.\n\n1540\n01:20:14,480 --> 01:20:18,030\nBut for an application,\nwhen it reaches out to that server,\n\n1541\n01:20:18,030 --> 01:20:21,250\nit might be doing something very\ncritical like doing a funds transfer,\n\n1542\n01:20:21,250 --> 01:20:24,170\na wire transfer of money\nbetween accounts or something.\n\n1543\n01:20:24,170 --> 01:20:27,390\nWe need to ensure that that\ncommunication gets through.\n\n1544\n01:20:27,390 --> 01:20:31,590\nAnd if the sequel database is offline or\nif it's busy, we don't care.\n\n1545\n01:20:31,590 --> 01:20:35,290\nWe still want that transmission to\nget there, and to be queued up,\n\n1546\n01:20:35,290 --> 01:20:39,690\nsitting there, ready to be applied as soon\nas the database becomes healthy again.\n\n1547\n01:20:39,690 --> 01:20:42,660\nThose are called reliable transactions.\n\n1548\n01:20:42,660 --> 01:20:43,920\nWith an application,\n\n1549\n01:20:43,920 --> 01:20:47,860\nyou want to ensure that your transactions\nalways execute successfully.\n\n1550\n01:20:47,860 --> 01:20:50,080\nAnd the service broker allows that.\n\n1551\n01:20:50,080 --> 01:20:53,970\nWhat the service broker does,\nis it sits in between your program, and\n\n1552\n01:20:53,970 --> 01:20:55,110\nthe data base.\n\n1553\n01:20:55,110 --> 01:20:58,760\nAnd when your program wants to add\nsomething to the data base, instead of\n\n1554\n01:20:58,760 --> 01:21:01,965\nreaching out to the data base directly\nit reaches out to the service broker.\n\n1555\n01:21:01,965 --> 01:21:07,055\nAnd the service broker gathers the data\nand queues it up, it holds it.\n\n1556\n01:21:07,055 --> 01:21:10,245\nAnd then it reaches out to the database\nand it goes to make the change.\n\n1557\n01:21:10,245 --> 01:21:15,220\nIf the database is offline, the service\nbroker just holds onto the change,\n\n1558\n01:21:15,220 --> 01:21:20,010\nholds it and waits, and when the database\nbecomes healthy it then applies it.\n\n1559\n01:21:20,010 --> 01:21:22,350\nThat's different than a transaction log,\nright?\n\n1560\n01:21:22,350 --> 01:21:25,340\nIf a transaction log goes to apply\nsomething to the database and the database\n\n1561\n01:21:25,340 --> 01:21:29,260\nis offline, the transaction log will just\nthrow the change away, it didn't happen.\n\n1562\n01:21:29,260 --> 01:21:31,350\nAll right, but the service broker won't.\n\n1563\n01:21:31,350 --> 01:21:36,490\nIt will hold on to things, and\nthat ensures reliable transmissions.\n\n1564\n01:21:36,490 --> 01:21:39,340\nYou can also have the service broker\nwhere it'll queue up things throughout\n\n1565\n01:21:39,340 --> 01:21:42,110\nthe day and make the changes all at once.\n\n1566\n01:21:42,110 --> 01:21:43,810\nThink about banks.\n\n1567\n01:21:43,810 --> 01:21:47,060\nA lot of banks here in\nthe United States have a rule that say\n\n1568\n01:21:47,060 --> 01:21:50,530\nall deposits must happen before 3 PM.\n\n1569\n01:21:50,530 --> 01:21:55,940\nAll right so, if you get to the bank at\n3:01 PM, you can still do your deposit.\n\n1570\n01:21:55,940 --> 01:22:00,230\nThey let you do your deposit, but it won't\nshow up on your account until tomorrow,\n\n1571\n01:22:00,230 --> 01:22:02,070\nall right, until 8:00 AM the next day.\n\n1572\n01:22:02,070 --> 01:22:04,560\nWell, what's happened to that transaction?\n\n1573\n01:22:04,560 --> 01:22:08,150\nThey're putting it in the system, but\nit doesn't apply to your account.\n\n1574\n01:22:08,150 --> 01:22:10,790\nWhat's happening is,\nthey've got a service broker.\n\n1575\n01:22:10,790 --> 01:22:12,280\nYou receive the transaction.\n\n1576\n01:22:12,280 --> 01:22:14,618\nYes, they got that deposit\nyou want to make, but\n\n1577\n01:22:14,618 --> 01:22:18,558\nit's sitting in a queue in the service\nbroker, and the next morning at 8:00 AM\n\n1578\n01:22:18,558 --> 01:22:21,435\nthe service broker kicks in and\napplies all those changes.\n\n1579\n01:22:21,435 --> 01:22:23,200\nPosts all those deposits to the accounts.\n\n1580\n01:22:23,200 --> 01:22:24,755\nAnd all of a sudden, you're good to go.\n\n1581\n01:22:24,755 --> 01:22:29,890\nSo throughout the day, from 8:00 AM to\n3:00 PM they're applying those right away.\n\n1582\n01:22:29,890 --> 01:22:33,180\nAnd then at 3 PM,\nthe service broker goes into hold mode.\n\n1583\n01:22:33,180 --> 01:22:34,610\nAnd it just holds the transaction.\n\n1584\n01:22:34,610 --> 01:22:36,020\nThat's the kind of thing it does.\n\n1585\n01:22:36,020 --> 01:22:37,720\nYour transaction is not lost.\n\n1586\n01:22:37,720 --> 01:22:39,660\nIt's just sitting there waiting for\nyou, all right.\n\n1587\n01:22:39,660 --> 01:22:42,200\nIt's not something an end\nuser is ever gonna do.\n\n1588\n01:22:42,200 --> 01:22:44,650\nThis is something a program would do.\n\n1589\n01:22:44,650 --> 01:22:47,680\nAnd so, to set it up,\nwe've gotta go to transact SQL.\n\n1590\n01:22:47,680 --> 01:22:49,260\nAnd the setup is not necessarily easy.\n\n1591\n01:22:50,540 --> 01:22:52,489\nWe don't have to know it for the exam but\nI do want to show it to you.\n\n1592\n01:22:52,489 --> 01:22:56,193\nThere's a website called\nthe Database Journal and they did\n\n1593\n01:22:56,193 --> 01:23:01,091\na good article several years ago that\nactually shows the setup process for it.\n\n1594\n01:23:01,091 --> 01:23:03,929\nAnd again,\nwe don't need to know the full setup, but\n\n1595\n01:23:03,929 --> 01:23:07,902\nI want to show you guys how this works,\nand what they're doing is setting up\n\n1596\n01:23:07,902 --> 01:23:11,710\nthe service broker In conjunction\nwith certificate authentication.\n\n1597\n01:23:11,710 --> 01:23:12,970\nSo that's why I wanted to show you this,\nso\n\n1598\n01:23:12,970 --> 01:23:15,940\nyou can get a chance to see\ncertificate authentication.\n\n1599\n01:23:15,940 --> 01:23:20,520\nAnd if you look at it,\nwhy is my zoom shortcut not working today?\n\n1600\n01:23:21,620 --> 01:23:23,569\nLet me zoom in on this a bit.\n\n1601\n01:23:25,903 --> 01:23:29,681\nSo what they're doing is the first thing\nthey do is they create an encryption\n\n1602\n01:23:29,681 --> 01:23:30,590\npassword.\n\n1603\n01:23:30,590 --> 01:23:33,220\nAll right, so they're setting that\npassword up to be able to use for\n\n1604\n01:23:33,220 --> 01:23:34,240\nencryption.\n\n1605\n01:23:34,240 --> 01:23:36,510\nAnd then they're creating a certificate.\n\n1606\n01:23:36,510 --> 01:23:39,150\nWe need a certificate for\nthe authentication piece.\n\n1607\n01:23:39,150 --> 01:23:40,380\nThey back it up.\n\n1608\n01:23:40,380 --> 01:23:42,060\nYou always wanna back up your certificate.\n\n1609\n01:23:42,060 --> 01:23:44,580\nBecause if you lose it,\nyou lose access to the data.\n\n1610\n01:23:45,630 --> 01:23:47,550\nThen they start the service broker's side.\n\n1611\n01:23:47,550 --> 01:23:49,820\nService brokers used\nwhat's call an endpoint.\n\n1612\n01:23:49,820 --> 01:23:54,080\nAnd endpoint is like a TCP port on\nthe server that's listening for\n\n1613\n01:23:54,080 --> 01:23:55,650\ntransactions to come in.\n\n1614\n01:23:55,650 --> 01:23:56,334\nYou assign a port number to it.\n\n1615\n01:23:56,334 --> 01:23:58,133\nThey've assigned 4022.\n\n1616\n01:23:58,133 --> 01:24:00,640\nYou can assign whatever\nport number you want.\n\n1617\n01:24:00,640 --> 01:24:03,370\nYour application will need\nto know to connect to that\n\n1618\n01:24:03,370 --> 01:24:05,390\nport number to send its transactions.\n\n1619\n01:24:05,390 --> 01:24:08,230\nThat way it knows any transaction\ncoming in on this port,\n\n1620\n01:24:08,230 --> 01:24:12,400\ndoesn't go right to the database, but\ninstead goes to a service broker, and\n\n1621\n01:24:12,400 --> 01:24:13,740\nthat's what they define here.\n\n1622\n01:24:13,740 --> 01:24:15,440\nSo, they're creating a service broker and\n\n1623\n01:24:15,440 --> 01:24:17,836\nsetting its authentication\nto require that certificate.\n\n1624\n01:24:17,836 --> 01:24:19,856\nAll right.\n\n1625\n01:24:19,856 --> 01:24:24,200\nAfter that, they go to their other side.\n\n1626\n01:24:24,200 --> 01:24:26,660\nAnd, maybe their other side,\nthe application,\n\n1627\n01:24:26,660 --> 01:24:28,600\nit might actually have its own data base.\n\n1628\n01:24:28,600 --> 01:24:31,270\nIt might run SQL Express or\nsomething like that.\n\n1629\n01:24:31,270 --> 01:24:34,130\nAnd so they're attaching\nthe certificate there and\n\n1630\n01:24:34,130 --> 01:24:37,040\ncreating an end point listener on\nthat end to be able to talk back.\n\n1631\n01:24:37,040 --> 01:24:40,980\nSo setting up both ends to be able to\ncommunicate using this service broker.\n\n1632\n01:24:40,980 --> 01:24:42,980\nOnce that's done, do they actually use it?\n\n1633\n01:24:42,980 --> 01:24:44,400\nYeah, they use it here.\n\n1634\n01:24:44,400 --> 01:24:46,250\nOh, no, I'm sorry,\nthey're just setting permissions.\n\n1635\n01:24:46,250 --> 01:24:49,030\nThey're setting permissions on who's\nallowed to use that service broker.\n\n1636\n01:24:49,030 --> 01:24:53,850\nBut once that's done,\nwhen a transaction is generated, it's sent\n\n1637\n01:24:53,850 --> 01:24:58,790\nto that service broker and\nit's sent signed by the certificate.\n\n1638\n01:24:58,790 --> 01:25:01,360\nSo, the certificate is what's\ndoing the authentication.\n\n1639\n01:25:01,360 --> 01:25:05,410\nWe're not sending a user name and\npassword, we're sending the certificate.\n\n1640\n01:25:05,410 --> 01:25:08,680\nThat gets picked up on the other side,\nwe authenticate the user that way.\n\n1641\n01:25:08,680 --> 01:25:13,060\nAgain, not something we're gonna do for\nend user, but for applications, we will.\n\n1642\n01:25:13,060 --> 01:25:16,600\nAnd if we need this kind of support,\nit's not normally a system admin\n\n1643\n01:25:16,600 --> 01:25:19,560\nthat's setting it up, it's the DBA's,\nthe data base administrators.\n\n1644\n01:25:19,560 --> 01:25:22,840\nAnd that's why it's covered on\nthe other exam, and not this one.\n\n1645\n01:25:22,840 --> 01:25:24,710\nBut I did want to show\nyou guys an example.\n\n1646\n01:25:24,710 --> 01:25:26,360\nI'll post the link to this article.\n\n1647\n01:25:27,500 --> 01:25:28,960\nThis article is a little bit old.\n\n1648\n01:25:28,960 --> 01:25:31,165\nIt's written for SQL 2005.\n\n1649\n01:25:31,165 --> 01:25:34,125\nIt was published in 2008,\nbut it hasn't changed.\n\n1650\n01:25:34,125 --> 01:25:38,330\nEven in 2014,\nit's still done the same exact way.\n\n1651\n01:25:38,330 --> 01:25:42,770\nSo just be aware of that it doesn't\nmatter that it's an old article.\n\n1652\n01:25:42,770 --> 01:25:45,450\nBut it's one of the few articles that I\ncould find where they actually showed\n\n1653\n01:25:45,450 --> 01:25:46,120\nall the steps.\n\n1654\n01:25:46,120 --> 01:25:47,473\nIt's not a very common thing,\nnot a lot of people do it.\n\n1655\n01:25:47,473 --> 01:25:51,429\nWhat I suspect we'll see is\nin the next version of SQL,\n\n1656\n01:25:51,429 --> 01:25:57,376\nwhich 2014 is already out so\nwhatever is after that, 2017 or something.\n\n1657\n01:25:57,376 --> 01:26:00,568\nWhen that one comes out then they'll\nstart to have a GUI for it, but\n\n1658\n01:26:00,568 --> 01:26:01,940\nright now we don't have it.\n\n1659\n01:26:01,940 --> 01:26:06,520\nAll right, so in this episode we got\na chance to see creating user accounts and\n\n1660\n01:26:06,520 --> 01:26:07,735\nlogins on the server.\n\n1661\n01:26:07,735 --> 01:26:11,545\nRemember it was logins at the server\nlevel, users at the database level.\n\n1662\n01:26:11,545 --> 01:26:12,945\nWe saw roles and\n\n1663\n01:26:12,945 --> 01:26:16,635\nhow we can assign permissions to\ncontrol people's access to the system.\n\n1664\n01:26:16,635 --> 01:26:18,385\nAnd we got to see schemas,\n\n1665\n01:26:18,385 --> 01:26:21,920\nhow we can control ownership without\nmessing with the names of our objects.\n\n1666\n01:26:21,920 --> 01:26:25,550\nSo, a couple of neat technologies\nthere all pretending to securing\n\n1667\n01:26:25,550 --> 01:26:26,900\nthe data on our server.\n\n1668\n01:26:26,900 --> 01:26:27,780\nRight?\n\n1669\n01:26:27,780 --> 01:26:31,120\nOnce you've planned that out for\nyour environment, you implement it and\n\n1670\n01:26:31,120 --> 01:26:33,680\nyou'll have a much more secure system.\n\n1671\n01:26:33,680 --> 01:26:35,440\nYou won't have to worry\nabout users drifting into\n\n1672\n01:26:35,440 --> 01:26:36,470\nareas they're not supposed to be in.\n\n1673\n01:26:36,470 --> 01:26:37,280\nIt's really cool stuff.\n\n1674\n01:26:38,470 --> 01:26:40,320\nAll right.\nWell, that's a pretty good spot for\n\n1675\n01:26:40,320 --> 01:26:41,630\nus to wrap this show up.\n\n1676\n01:26:41,630 --> 01:26:43,550\nI do want to remind you,\nif you have any questions,\n\n1677\n01:26:43,550 --> 01:26:47,520\ncuz this was a lot, feel free to ask.\n\n1678\n01:26:47,520 --> 01:26:50,130\nLive during the show you\ncan go to itpro.tv/live.\n\n1679\n01:26:50,130 --> 01:26:52,840\nAnd you'll see the chat box\nright beneath the video.\n\n1680\n01:26:52,840 --> 01:26:53,770\nPost your questions there.\n\n1681\n01:26:53,770 --> 01:26:55,480\nWe monitor and answer during the show.\n\n1682\n01:26:55,480 --> 01:26:58,764\nIf you have questions after\nthe show jump to our Q&A forums.\n\n1683\n01:26:58,764 --> 01:27:01,132\nThere's a link at the top\nof every page called Q&A.\n\n1684\n01:27:01,132 --> 01:27:03,155\nIt'll take you right to the forums.\n\n1685\n01:27:03,155 --> 01:27:04,465\nPost your questions there.\n\n1686\n01:27:04,465 --> 01:27:06,155\nWe monitor and answer.\n\n1687\n01:27:06,155 --> 01:27:10,075\nWe wanna make sure you guys have\nthe information you need to be successful.\n\n1688\n01:27:10,075 --> 01:27:12,395\nAll right, well,\nI hope you guys enjoyed the show.\n\n1689\n01:27:12,395 --> 01:27:16,039\nSigning off for ITProTv, I'm Don Pezet,\nand I will see you next time.\n\n1690\n01:27:16,039 --> 01:27:26,039\n[MUSIC]\n\n",
          "vimeoId": "106171019"
        }
      ],
      "title": "Implement security"
    },
    {
      "episodes": [
        {
          "description": "In this episode Don shows how to increase high availability on your SQL server by using Microsoft Failover Clustering. He then shows other methods of increasing redundancy without the need of a full cluster environment.",
          "length": "6330",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/009-Clustering-and-Redundancy.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/009-Clustering-and-Redundancy-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/009-Clustering-and-Redundancy-sm.jpg",
          "title": "Clustering and Redundancy",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:33,546 --> 00:00:34,167\nAll right.\n\n3\n00:00:34,167 --> 00:00:36,333\nGood morning, good afternoon,\nand good evening.\n\n4\n00:00:36,333 --> 00:00:38,833\nAnd welcome back to another\nepisode of ITProTV.\n\n5\n00:00:38,833 --> 00:00:43,230\nI'm your host, Don Pezet, back again\nwith another episode of Microsoft SQL.\n\n6\n00:00:43,230 --> 00:00:46,590\nAnd let me tell you,\nI'm kind of excited about this episode.\n\n7\n00:00:46,590 --> 00:00:51,330\nWe cover a lot of content here on\nthis show, and not just in SQL,\n\n8\n00:00:51,330 --> 00:00:54,440\nbut in all of the other\ndifferent shows that we do, and\n\n9\n00:00:54,440 --> 00:00:58,720\nthere's some episodes that I'm excited\nabout, and there's some episodes I'm like,\n\n10\n00:00:58,720 --> 00:01:02,730\nman if I have to do another episode on\nIPv4 subnetting, I'm going to go crazy.\n\n11\n00:01:02,730 --> 00:01:05,930\nBut today we're tackling clustering and\n\n12\n00:01:05,930 --> 00:01:08,890\nredundancy, which is something I\nalways have a lot of fun with.\n\n13\n00:01:08,890 --> 00:01:12,170\nSo that's what we're going to\nbe tackling in this episode.\n\n14\n00:01:12,170 --> 00:01:13,730\nWhen you bring up a SQL server,\n\n15\n00:01:13,730 --> 00:01:17,460\nand I know I've mentioned this countless\ntimes, it's running databases.\n\n16\n00:01:17,460 --> 00:01:21,770\nAnd those databases are often times\nmission critical to your company.\n\n17\n00:01:21,770 --> 00:01:27,330\nSo you want to do whatever you can to\nensure that those databases are online and\n\n18\n00:01:27,330 --> 00:01:33,180\nhealthy as often as possible,\nif not constantly available.\n\n19\n00:01:33,180 --> 00:01:38,590\nAchieving that goal of high availability\ninside a SQL, it's challenging.\n\n20\n00:01:38,590 --> 00:01:41,650\nHow do I make it so that my databases\nare always up and healthy, and\n\n21\n00:01:41,650 --> 00:01:44,720\nhow do I plan for some of the different\ndisasters that are out there?\n\n22\n00:01:44,720 --> 00:01:47,320\nWell, I'm gonna show you\nthree different methods.\n\n23\n00:01:47,320 --> 00:01:51,240\nWe've kind of already seen a fourth one,\nwhich is just having good backups.\n\n24\n00:01:51,240 --> 00:01:54,780\nIf you have a backup and your server\nfails or is destroyed or whatever,\n\n25\n00:01:54,780 --> 00:01:56,650\nyou can restore somewhere else.\n\n26\n00:01:56,650 --> 00:01:57,900\nThe problem is that takes time.\n\n27\n00:01:57,900 --> 00:02:01,490\nAnd so you're going to have down time,\nif you're just relying on backups.\n\n28\n00:02:01,490 --> 00:02:02,990\nYou should do your backups, right?\n\n29\n00:02:02,990 --> 00:02:05,620\nThey're always your final line of defense.\n\n30\n00:02:05,620 --> 00:02:08,780\nBut, there's a few other methods,\nthree in particular,\n\n31\n00:02:08,780 --> 00:02:12,460\nwe're gonna see today that can\nminimize the amount of down time,\n\n32\n00:02:12,460 --> 00:02:16,890\nor possibly eliminate the down time,\nwhen you have a physical server failure.\n\n33\n00:02:16,890 --> 00:02:17,440\nAll right?\n\n34\n00:02:17,440 --> 00:02:19,180\nWell, let's think about\nthat failure first.\n\n35\n00:02:19,180 --> 00:02:21,260\nWhat type of failure could we have?\n\n36\n00:02:21,260 --> 00:02:25,060\nWell, the most common is just a simple\nhardware failure in your server.\n\n37\n00:02:25,060 --> 00:02:28,470\nMaybe you have a hard drive that went bad,\npower supply went out,\n\n38\n00:02:28,470 --> 00:02:31,080\nnetwork card failed,\nsomething of that nature.\n\n39\n00:02:31,080 --> 00:02:34,120\nAnd when it fails,\nyour database server goes offline.\n\n40\n00:02:34,120 --> 00:02:34,640\nAll right?\n\n41\n00:02:34,640 --> 00:02:38,070\nIf you database server's offline,\npeople can't connect to the database and\n\n42\n00:02:38,070 --> 00:02:39,350\nthey can't work.\n\n43\n00:02:39,350 --> 00:02:40,730\nNow, how do you fix that?\n\n44\n00:02:40,730 --> 00:02:43,090\nWell, you can go put\na new power supply in or\n\n45\n00:02:43,090 --> 00:02:45,850\nput in a new hard drive and\nrecover the server.\n\n46\n00:02:45,850 --> 00:02:46,600\nBut that's down time.\n\n47\n00:02:47,760 --> 00:02:50,330\nThat's a very minor failure though.\n\n48\n00:02:50,330 --> 00:02:54,560\nTypically your data is safe and you're\nable to get by without too much trouble.\n\n49\n00:02:54,560 --> 00:02:56,160\nWhat if it's something bigger though?\n\n50\n00:02:56,160 --> 00:03:00,240\nWhat if your building catches on fire and\nyour data center is destroyed?\n\n51\n00:03:00,240 --> 00:03:01,550\nWell, now you can't just go and\n\n52\n00:03:01,550 --> 00:03:04,670\nrestore from a backup,\nbecause you don't have any servers.\n\n53\n00:03:04,670 --> 00:03:06,090\nSo how do you plan for that?\n\n54\n00:03:06,090 --> 00:03:07,750\nHow do you get redundancy there?\n\n55\n00:03:07,750 --> 00:03:11,610\nWell, we need to kind of pick and\nchoose between our solutions.\n\n56\n00:03:11,610 --> 00:03:12,750\nWe're gonna take a look at three things.\n\n57\n00:03:12,750 --> 00:03:16,760\nWe're gonna look at clustering, we're\ngonna look at database mirroring, and\n\n58\n00:03:16,760 --> 00:03:19,520\nwe're gonna look at database\ntransaction log shipping.\n\n59\n00:03:19,520 --> 00:03:22,540\nThose are the three technologies\nwe're gonna hit in this episode.\n\n60\n00:03:22,540 --> 00:03:24,750\nEach one has its place.\n\n61\n00:03:24,750 --> 00:03:27,390\nEach one provides a certain\nlevel of redundancy and\n\n62\n00:03:27,390 --> 00:03:31,230\na certain set of characteristics,\nand it's not a one size fits all.\n\n63\n00:03:31,230 --> 00:03:33,950\nJust because database\nclusters are awesome,\n\n64\n00:03:33,950 --> 00:03:35,850\ndoesn't mean everybody needs them.\n\n65\n00:03:35,850 --> 00:03:38,350\nSo you've got to look at your needs,\nyour environment and\n\n66\n00:03:38,350 --> 00:03:40,470\nfigure out which of these\nmethods works for you.\n\n67\n00:03:40,470 --> 00:03:43,880\nAnd you might be one of those shops\nwhere all three methods work.\n\n68\n00:03:43,880 --> 00:03:46,160\nThat's right,\nyou can use all these together.\n\n69\n00:03:46,160 --> 00:03:49,300\nAnd you're super mega\nredundant at that point.\n\n70\n00:03:49,300 --> 00:03:51,360\nAnd maybe that is what you need.\n\n71\n00:03:51,360 --> 00:03:53,440\nThere's some really cool stuff in here,\nthat we're going to tackle.\n\n72\n00:03:53,440 --> 00:03:56,020\nNow, if you read the exam objectives,\n\n73\n00:03:56,020 --> 00:03:59,930\nthe exam objectives talk about fail\nover clustering, and that's it.\n\n74\n00:03:59,930 --> 00:04:03,770\nThey don't specifically mention mirroring,\nor transaction log shipping.\n\n75\n00:04:03,770 --> 00:04:07,790\nBut, they do show up on the exam, so\nI want to make sure we cover them.\n\n76\n00:04:07,790 --> 00:04:09,360\nI'm not just making this stuff up.\n\n77\n00:04:09,360 --> 00:04:11,160\nBut it is stuff you're\ngonna use in real life too.\n\n78\n00:04:11,160 --> 00:04:12,370\nIt's really cool.\n\n79\n00:04:12,370 --> 00:04:14,010\nSo let's start with clustering.\n\n80\n00:04:14,010 --> 00:04:18,920\nNow if you've never worked with\na cluster before, a Windows cluster.\n\n81\n00:04:18,920 --> 00:04:21,910\nI really encourage you guys to\njump over to our 70-412 show.\n\n82\n00:04:21,910 --> 00:04:27,480\nAnd over there we recorded an entire\nepisode talking about clustering.\n\n83\n00:04:27,480 --> 00:04:29,690\nIt was Mike Rodrick and I did the show.\n\n84\n00:04:29,690 --> 00:04:32,080\nLet me see if I can find\nthat show real quick.\n\n85\n00:04:32,080 --> 00:04:33,710\nIt was a really good show.\n\n86\n00:04:33,710 --> 00:04:37,370\nWe jumped in there and tackled how to\nbuild clusters for Windows servers.\n\n87\n00:04:39,170 --> 00:04:45,090\nMicrosoft SQL Server 2012 does not have\nits own clustering service built in.\n\n88\n00:04:45,090 --> 00:04:49,500\nInstead it leverages the clustering\nservice built in to Windows.\n\n89\n00:04:49,500 --> 00:04:54,820\nAnd that's why in the MCSA server 2012\nR2 show, that's why we covered it there.\n\n90\n00:04:54,820 --> 00:04:57,630\nAnd so we showed how to build that\ncluster, how to get it in place.\n\n91\n00:04:57,630 --> 00:05:00,960\nAnd that type of cluster,\nyou can use it for\n\n92\n00:05:00,960 --> 00:05:05,930\na file server, for DHCP,\nfor other services.\n\n93\n00:05:05,930 --> 00:05:09,850\nAll sorts of different things you can\ncluster together with it, not just SQL.\n\n94\n00:05:09,850 --> 00:05:12,310\nBut SQL is gonna leverage it,\nand let's see.\n\n95\n00:05:12,310 --> 00:05:13,800\nWe've got, right here.\n\n96\n00:05:13,800 --> 00:05:16,050\nConfigure and\nmanage high availability, and\n\n97\n00:05:16,050 --> 00:05:20,630\nwe do failover services, clustering with\nhyper v, and managing cluster roles.\n\n98\n00:05:20,630 --> 00:05:26,550\nThose three episodes right there, we do a\ndeep dive into how to set up the cluster.\n\n99\n00:05:26,550 --> 00:05:28,420\nWell, in my lab environment,\n\n100\n00:05:28,420 --> 00:05:32,100\nthis environment here,\nI've already got a cluster in place.\n\n101\n00:05:32,100 --> 00:05:35,720\nI'm gonna give you a little tour of it,\njust a high level overview to see it.\n\n102\n00:05:35,720 --> 00:05:37,440\nBut I've already got a cluster in place,\nand\n\n103\n00:05:37,440 --> 00:05:40,390\nwe're gonna be adding SQL\nto it to create a cluster.\n\n104\n00:05:40,390 --> 00:05:42,690\nNow, what does a cluster do?\n\n105\n00:05:42,690 --> 00:05:43,790\nWhy would I create this?\n\n106\n00:05:43,790 --> 00:05:45,060\nRight, what's the why here?\n\n107\n00:05:45,060 --> 00:05:46,270\nWhat's motivating me?\n\n108\n00:05:46,270 --> 00:05:48,670\nWell, clusters do\nsomething really awesome.\n\n109\n00:05:48,670 --> 00:05:52,400\nWhat a cluster does is it takes\nsomething like our SQL server and\n\n110\n00:05:52,400 --> 00:05:56,140\nmakes it independent of\nthe hardware that it's running on.\n\n111\n00:05:56,140 --> 00:05:58,160\nIf you think about it,\nwhen an application runs, so\n\n112\n00:05:58,160 --> 00:06:02,530\nlike when Microsoft SQL server runs\nit's really made up of two pieces,\n\n113\n00:06:02,530 --> 00:06:05,720\nthe pieces that are in RAM,\nthat's not what's doing the real work,\n\n114\n00:06:05,720 --> 00:06:09,810\nanything that's cached, any queries\nthat are going on, that's all in RAM.\n\n115\n00:06:09,810 --> 00:06:13,490\nAnd then, there's what's on\nthe hard drives, the databases.\n\n116\n00:06:13,490 --> 00:06:18,690\nIf I could take those hard drives and\nmake them shared between more than one\n\n117\n00:06:18,690 --> 00:06:24,940\ncomputer, then I could take my sequel\nserver, and easily bring it up on new\n\n118\n00:06:24,940 --> 00:06:29,280\nhardware at a moment's notice if the hard\ndrives are shared between the systems.\n\n119\n00:06:29,280 --> 00:06:31,760\nWell, a cluster let's you do that.\n\n120\n00:06:31,760 --> 00:06:34,870\nWhen you have a clustered environment\nyou can have more than one server\n\n121\n00:06:34,870 --> 00:06:36,870\nattached to the same set of hard drives.\n\n122\n00:06:36,870 --> 00:06:40,100\nOnly one server will actually\nbe using those hard drives.\n\n123\n00:06:40,100 --> 00:06:42,260\nAnd if that one server fails,\n\n124\n00:06:42,260 --> 00:06:46,360\none of the other servers in the cluster\ncan jump right in and take over that role.\n\n125\n00:06:46,360 --> 00:06:50,300\nSo, if I have a hard drive failure, if I\nhave a memory failure, power supply, and\n\n126\n00:06:50,300 --> 00:06:54,930\nthat physical server goes down, I've\ngot an entirely second physical server\n\n127\n00:06:54,930 --> 00:06:58,830\nsitting there, ready to grab\nthe shared hard drives and get to work.\n\n128\n00:06:58,830 --> 00:07:02,590\nThat's really cool,\nvery small amount of down time.\n\n129\n00:07:02,590 --> 00:07:06,660\nAnd if it's a detectable failure, in other\nwords, one that the server can see before\n\n130\n00:07:06,660 --> 00:07:11,070\nit happens, then it can actually\nsynchronize the RAM also.\n\n131\n00:07:11,070 --> 00:07:12,450\nThat means I don't lose anything.\n\n132\n00:07:12,450 --> 00:07:13,240\nI have no downtime.\n\n133\n00:07:13,240 --> 00:07:17,430\nThen we're able to flip over to the other\nserver, without any downtime whatsoever.\n\n134\n00:07:17,430 --> 00:07:18,130\nIt's not without any.\n\n135\n00:07:18,130 --> 00:07:22,500\nThere's a little small window of time,\nusually less than a few milliseconds,\n\n136\n00:07:22,500 --> 00:07:25,040\nwhere the server is down,\nwhen it flips between the two.\n\n137\n00:07:25,040 --> 00:07:27,130\nBut it's really neat.\n\n138\n00:07:27,130 --> 00:07:30,830\nNow, those clusters are super\ncool when it comes to failures.\n\n139\n00:07:30,830 --> 00:07:33,830\nThey're also super cool just for\nregular maintenance.\n\n140\n00:07:33,830 --> 00:07:37,890\nLet's say for example that a new\nservice pack comes out for SQL and\n\n141\n00:07:37,890 --> 00:07:39,180\nI want to apply it.\n\n142\n00:07:39,180 --> 00:07:42,340\nWell, when you apply a service pack to\nSQL, it's got to stop the service and\n\n143\n00:07:42,340 --> 00:07:44,050\ntake the databases offline.\n\n144\n00:07:44,050 --> 00:07:47,530\nApply the service pack, and\nthen bring the services back online.\n\n145\n00:07:47,530 --> 00:07:49,997\nBut what happened to all your\nend users when you did that?\n\n146\n00:07:49,997 --> 00:07:50,970\nIt got kicked out, right?\n\n147\n00:07:50,970 --> 00:07:52,550\nThey got kicked out of the database.\n\n148\n00:07:52,550 --> 00:07:55,900\nSo now I'm going to schedule it for\n3AM on a Saturday morning or\n\n149\n00:07:55,900 --> 00:07:56,840\nsomething crazy like that.\n\n150\n00:07:56,840 --> 00:07:59,730\nI've got to come into the office\nto do that, and it stinks.\n\n151\n00:07:59,730 --> 00:08:00,417\nNobody wants to do that.\n\n152\n00:08:00,417 --> 00:08:02,890\nSo you hire an intern and\nmake them do that.\n\n153\n00:08:02,890 --> 00:08:07,043\nBut, you know, if you want to get\naround that You can use a cluster.\n\n154\n00:08:07,043 --> 00:08:12,030\nWith a cluster, I can have two or\nmore physical servers, but usually two.\n\n155\n00:08:12,030 --> 00:08:14,630\nAnd then I'm running SQL on server A, and\n\n156\n00:08:14,630 --> 00:08:16,990\nserver B is just sitting\nthere doing nothing.\n\n157\n00:08:16,990 --> 00:08:20,720\nWell, I can take server B, and\nI can apply the service pack to it.\n\n158\n00:08:20,720 --> 00:08:21,970\nServer B is not doing anything.\n\n159\n00:08:21,970 --> 00:08:23,000\nIt's a standby.\n\n160\n00:08:23,000 --> 00:08:26,510\nI can apply the update and\nnow it's running the latest update.\n\n161\n00:08:26,510 --> 00:08:31,830\nThen I can take my SQL server and\nfail it over to server B.\n\n162\n00:08:31,830 --> 00:08:35,290\nNow server A is doing nothing and\nI can apply the update.\n\n163\n00:08:35,290 --> 00:08:39,540\nNow both servers have been updated, and\nmy end users were never kicked out.\n\n164\n00:08:39,540 --> 00:08:42,110\nYou can do server maintenance\nin the middle of the day.\n\n165\n00:08:42,110 --> 00:08:45,420\nIn the middle of a weekday, you don't\nhave to come in on Saturday at 3 AM.\n\n166\n00:08:45,420 --> 00:08:47,290\nThat's really cool stuff.\n\n167\n00:08:47,290 --> 00:08:47,850\nAll right.\n\n168\n00:08:47,850 --> 00:08:51,730\nSo if SQL clusters are so\ncool, why wouldn't we do them?\n\n169\n00:08:51,730 --> 00:08:53,180\nRight?\nWell, what's the negative?\n\n170\n00:08:53,180 --> 00:08:55,380\nWell, the biggest negative\nis simply the cost.\n\n171\n00:08:55,380 --> 00:08:58,480\nWhat you used to be able to do with\none server now takes two servers.\n\n172\n00:08:58,480 --> 00:09:00,340\nSo your hardware costs are double.\n\n173\n00:09:00,340 --> 00:09:02,460\nRight?\nWell, it's even more than that.\n\n174\n00:09:02,460 --> 00:09:06,910\nBecause you need shared hard\ndrives between the two servers.\n\n175\n00:09:06,910 --> 00:09:08,530\nHard drives aren't designed for that, so\n\n176\n00:09:08,530 --> 00:09:12,000\nyou need a SAN,\na storage area network, right?\n\n177\n00:09:12,000 --> 00:09:14,004\nEither a fiber-channel SAN, or an iSCSI,\n\n178\n00:09:14,004 --> 00:09:16,290\nsomething like to be able\nto provide the storage.\n\n179\n00:09:16,290 --> 00:09:18,840\nNow, let me give you a word of warning.\n\n180\n00:09:18,840 --> 00:09:23,220\nIf you're running a database\nserver off of an iSCSI SAN,\n\n181\n00:09:23,220 --> 00:09:25,710\nyou're making a huge mistake, all right?\n\n182\n00:09:25,710 --> 00:09:30,800\niSCSI SANs are not tuned to perform\nthe right way for databases.\n\n183\n00:09:30,800 --> 00:09:34,590\nIt doesn't matter, any kind of database,\nOLAP, online analysis processing,\n\n184\n00:09:34,590 --> 00:09:36,210\nwhich is really read intensive.\n\n185\n00:09:36,210 --> 00:09:41,160\nOr OLTP, the online transaction processing\ndatabases which are very write intensive.\n\n186\n00:09:41,160 --> 00:09:44,250\nThey both suck outright on an iSCSI box.\n\n187\n00:09:44,250 --> 00:09:46,070\nIt's just not designed for that.\n\n188\n00:09:46,070 --> 00:09:49,990\niSCSI is good for testing and\npractice environments, not good for\n\n189\n00:09:49,990 --> 00:09:53,300\nproduction, definitely not good for\ndatabases, all right.\n\n190\n00:09:53,300 --> 00:09:56,500\nBut a fiber channel SAN, it'll do great.\n\n191\n00:09:56,500 --> 00:09:59,835\nYour server will see those hard drives\nas if they were internal to the box.\n\n192\n00:09:59,835 --> 00:10:02,010\nThey'd get the same read and write speeds.\n\n193\n00:10:02,010 --> 00:10:03,830\nIt works really, really well.\n\n194\n00:10:03,830 --> 00:10:08,610\nSo if you're serious about performance,\ndon't even mess with iSCSI.\n\n195\n00:10:08,610 --> 00:10:11,230\nThat being said, I'm gonna use\niSCSI here in my lab [LAUGH].\n\n196\n00:10:11,230 --> 00:10:13,700\nAnd that's because in a lab environment,\n\n197\n00:10:13,700 --> 00:10:17,540\nit's a heck of a lot cheaper to go\niSCSI than it is a fiber channel one.\n\n198\n00:10:17,540 --> 00:10:20,480\nBut in a production environment,\nyou definitely want to use fiber channel.\n\n199\n00:10:20,480 --> 00:10:24,220\nAll right, now once you have that\nshared storage, now you've got cost for\n\n200\n00:10:24,220 --> 00:10:28,460\nthe shared storage, and you've got the\ncost of having duplicate servers, right.\n\n201\n00:10:28,460 --> 00:10:30,450\nSo clusters are expensive.\n\n202\n00:10:30,450 --> 00:10:34,390\nThat's the number one reason not to do\nclustering, just cuz it's so expensive.\n\n203\n00:10:34,390 --> 00:10:38,820\nIt may be better for\nyour company to just accept an hour or\n\n204\n00:10:38,820 --> 00:10:42,410\ntwo of downtime when you replace that\nhard drive or replace that power supply\n\n205\n00:10:42,410 --> 00:10:45,780\nthan it would to drop all this money\non building redundant infrastructure.\n\n206\n00:10:45,780 --> 00:10:47,300\nAll right.\nThat's a decision\n\n207\n00:10:47,300 --> 00:10:48,320\nyour company has to make.\n\n208\n00:10:48,320 --> 00:10:49,690\nEverybody's got different needs.\n\n209\n00:10:49,690 --> 00:10:54,480\nIf you're Amazon.com, they lose a million\ndollars an hour when they have an outage.\n\n210\n00:10:54,480 --> 00:10:55,420\nRight?\n\n211\n00:10:55,420 --> 00:10:59,690\nIf your ITProTV it's not even measurable\nto that, it's considerably lower.\n\n212\n00:10:59,690 --> 00:11:04,020\nSo different companies have different\nfinancial ramifications to downtime, and\n\n213\n00:11:04,020 --> 00:11:07,480\nthat's what going to determine whether or\nnot you go to cluster.\n\n214\n00:11:07,480 --> 00:11:11,723\nIf you do have a cluster, though,\nyou're still not immune to failure.\n\n215\n00:11:11,723 --> 00:11:16,436\nSure, you could have one entire server\nfail, and the other server will take over.\n\n216\n00:11:16,436 --> 00:11:18,964\nSo processor, memory,\nmotherboard, power supply,\n\n217\n00:11:18,964 --> 00:11:21,706\nall the different things that\ncould fail inside of a server,\n\n218\n00:11:21,706 --> 00:11:25,530\nyou don't have to worry about\nanymore when you have a cluster.\n\n219\n00:11:25,530 --> 00:11:27,340\nBut what if your building burns down?\n\n220\n00:11:27,340 --> 00:11:30,530\nWell, your two cluster servers\nare sitting right next to each other,\n\n221\n00:11:30,530 --> 00:11:31,740\nthey both burn down.\n\n222\n00:11:31,740 --> 00:11:36,480\nSo a cluster does not save you from\nlike a building disaster all right.\n\n223\n00:11:36,480 --> 00:11:40,740\nAnd when you do a cluster,\nyou can't have one node here and\n\n224\n00:11:40,740 --> 00:11:43,110\none node in another geographic location.\n\n225\n00:11:43,110 --> 00:11:44,220\nClusters aren't designed for that.\n\n226\n00:11:44,220 --> 00:11:46,480\nClusters need real-time communications.\n\n227\n00:11:46,480 --> 00:11:47,848\nThere are technologies\nthat will let you do that.\n\n228\n00:11:47,848 --> 00:11:51,096\nThey're called geo-stretching,\nwhere you can take a subnet and\n\n229\n00:11:51,096 --> 00:11:54,402\nhave the one server on one subnet and\none server on another subnet and\n\n230\n00:11:54,402 --> 00:11:56,615\nmove them into a different\ngeographic area.\n\n231\n00:11:56,615 --> 00:12:01,263\nBut there's latency involved and while for\nsome technologies that's okay, for\n\n232\n00:12:01,263 --> 00:12:02,970\nSQL Server it isn't.\n\n233\n00:12:02,970 --> 00:12:07,100\nAnd so if you want multiple geographic\nlocations you don't need a cluster.\n\n234\n00:12:07,100 --> 00:12:11,160\nYou need one of the other technologies\nI'm gonna talk about later, mirroring and\n\n235\n00:12:11,160 --> 00:12:12,530\ntransaction log shipping.\n\n236\n00:12:12,530 --> 00:12:15,660\nThose work much better in\nseparate geographical locations\n\n237\n00:12:15,660 --> 00:12:16,330\nthan a cluster will.\n\n238\n00:12:16,330 --> 00:12:16,900\nAll right?\n\n239\n00:12:16,900 --> 00:12:18,670\nSo we'll get a chance to see those later.\n\n240\n00:12:18,670 --> 00:12:22,270\nBut for right now,\nlet's tackle a cluster, all right?\n\n241\n00:12:22,270 --> 00:12:25,130\nIf you wanna build up a cluster,\nthe first thing you need to do is,\n\n242\n00:12:25,130 --> 00:12:27,410\non your Windows server,\nso not even in SQL.\n\n243\n00:12:27,410 --> 00:12:30,210\nI'm just gonna get out of my\nSQL Management Studio there.\n\n244\n00:12:30,210 --> 00:12:33,470\nWe need to add the failover cluster role.\n\n245\n00:12:33,470 --> 00:12:35,060\nSo you can just go into\nyour Server Manager.\n\n246\n00:12:36,280 --> 00:12:36,940\nI'm sorry, it's not a role.\n\n247\n00:12:36,940 --> 00:12:40,014\nIt's a feature,\nthe failover cluster feature.\n\n248\n00:12:40,014 --> 00:12:44,070\nSo in here if I go to Add roles and\n\n249\n00:12:44,070 --> 00:12:48,126\nfeatures and we move forward,\n\n250\n00:12:48,126 --> 00:12:54,369\nI can pick the server I'm on,\nI'm on SQL 01.\n\n251\n00:12:54,369 --> 00:12:59,226\nAnd here's my roles, I'm not gonna mess up\nanything here, and then under Features,\n\n252\n00:12:59,226 --> 00:13:02,110\nyou want the failover clustering feature.\n\n253\n00:13:02,110 --> 00:13:05,750\nAll right, now I've already installed it\nto save time here int he segment, but\n\n254\n00:13:05,750 --> 00:13:09,030\nif you install, you check it, and\nyou hit Next, and there's no questions.\n\n255\n00:13:09,030 --> 00:13:10,770\nIt doesn't ask you any questions.\n\n256\n00:13:10,770 --> 00:13:11,370\nYou just check it.\n\n257\n00:13:11,370 --> 00:13:13,690\nIt might tell you there's some\nprerequisites that have to be met, and\n\n258\n00:13:13,690 --> 00:13:14,210\nyou just hit OK.\n\n259\n00:13:14,210 --> 00:13:15,730\nAnd then you just hit next a bunch.\n\n260\n00:13:15,730 --> 00:13:18,320\nThat's it.\nThere's no configuration on this screen.\n\n261\n00:13:18,320 --> 00:13:21,630\nSo, you do that, and that installs\nthe failover clustering role.\n\n262\n00:13:21,630 --> 00:13:25,440\nAll right,\nthis is on the first node of my cluster.\n\n263\n00:13:25,440 --> 00:13:28,820\nI probably need to do the same thing\non the second node of my cluster.\n\n264\n00:13:28,820 --> 00:13:31,110\nNow, you don't actually have to.\n\n265\n00:13:31,110 --> 00:13:34,960\nThe cluster wizard will actually install\nthe fail-over cluster on the other server.\n\n266\n00:13:34,960 --> 00:13:37,032\nBut, I like to install it ahead\nof time just to make sure\n\n267\n00:13:37,032 --> 00:13:38,217\nthe pre-requisites are met.\n\n268\n00:13:40,422 --> 00:13:44,958\nOnce you've got the fail-over clustering\nfeature installed the next thing that you\n\n269\n00:13:44,958 --> 00:13:47,930\nneed to do is make sure\nyou have shared storage.\n\n270\n00:13:47,930 --> 00:13:50,510\nIf you've got a fiber channel SAN,\nyou need to get it connected and\n\n271\n00:13:50,510 --> 00:13:52,400\nmake sure you can see the drives.\n\n272\n00:13:52,400 --> 00:13:55,080\nIf you've got an iSCSI SAN,\nyou need to get it connected.\n\n273\n00:13:55,080 --> 00:13:55,990\nAnd that's what I've done.\n\n274\n00:13:55,990 --> 00:14:02,140\nIf I go into my iSCSI initiator software,\nyou\n\n275\n00:14:02,140 --> 00:14:06,440\ncan see where I've connected to a server\nand this is where I'm getting my drives.\n\n276\n00:14:06,440 --> 00:14:08,925\nSo if I look at my volumes and devices,\nor actually it's not gonna show there.\n\n277\n00:14:11,089 --> 00:14:11,610\nHere we go.\n\n278\n00:14:11,610 --> 00:14:14,680\nSo we can see I'm connected to\nthe server and then here's the target,\n\n279\n00:14:14,680 --> 00:14:15,290\nthis is the drive.\n\n280\n00:14:15,290 --> 00:14:18,970\nI've created a little SQL server target\nand that's what I'm connected to.\n\n281\n00:14:18,970 --> 00:14:22,570\nSo when I go into my Disk Management\non this particular server\n\n282\n00:14:23,670 --> 00:14:27,350\nI will see those iSCSI drives as\nif they were locally attached.\n\n283\n00:14:27,350 --> 00:14:29,470\nAs far as the server's concerned,\nthey are locally attached.\n\n284\n00:14:29,470 --> 00:14:31,550\nThey're right here on this system.\n\n285\n00:14:31,550 --> 00:14:36,250\nSo when I go into my Disk Management,\nI created a 1\n\n286\n00:14:36,250 --> 00:14:41,540\ngigabyte and\na 36 gigabyte drive on my iSCSI SAN.\n\n287\n00:14:41,540 --> 00:14:43,060\nAnd then that's what I'm connected to.\n\n288\n00:14:43,060 --> 00:14:45,596\nNow, notice how these drives say Reserved?\n\n289\n00:14:45,596 --> 00:14:51,264\nThat's what you expect to see once they've\nbeen attached to the failover cluster.\n\n290\n00:14:51,264 --> 00:14:53,442\nBut if you haven't attached\nfrom the failover cluster yet,\n\n291\n00:14:53,442 --> 00:14:56,660\nthey'll just be sitting here saying\nBasic like this disc up here, all right?\n\n292\n00:14:56,660 --> 00:14:58,430\nSo, I've got that one sitting there.\n\n293\n00:14:58,430 --> 00:14:59,710\nIt's not really doing anything.\n\n294\n00:14:59,710 --> 00:15:00,800\nBut these guys show Reserved and\n\n295\n00:15:00,800 --> 00:15:03,030\nthat's because I've already\nattached them to the cluster.\n\n296\n00:15:05,160 --> 00:15:10,363\nIf I go into my Failover Cluster Manager,\nwhen\n\n297\n00:15:10,363 --> 00:15:13,450\nwe go into the Failover Cluster Manager,\nhere's where you create your cluster.\n\n298\n00:15:13,450 --> 00:15:15,850\nAnd remember this is still\nall independent of SQL,\n\n299\n00:15:15,850 --> 00:15:19,060\nyou don't even have SQL installed\nat this point necessarily.\n\n300\n00:15:19,060 --> 00:15:21,750\nYou'll go in and create a new cluster and\nwalk through the wizard.\n\n301\n00:15:21,750 --> 00:15:23,720\nNow the wizard's gonna\nask you a few questions.\n\n302\n00:15:23,720 --> 00:15:29,280\nYou have to add each of your nodes so\nI added my Win SQL01 and Win SQL02.\n\n303\n00:15:29,280 --> 00:15:32,080\nIt's gonna ask you to pick\na virtual IP address.\n\n304\n00:15:32,080 --> 00:15:35,680\nThere's gonna be a shared IP address\nbetween the nodes of your cluster.\n\n305\n00:15:35,680 --> 00:15:38,740\nYour clients are not gonna\nconnect to one node or\n\n306\n00:15:38,740 --> 00:15:41,620\nanother, they're gonna connect\nto that virtual IP and\n\n307\n00:15:41,620 --> 00:15:45,470\nyou need that because the virtual IP\ncan move between the physical hosts.\n\n308\n00:15:45,470 --> 00:15:48,280\nIf you have one host fail how do\npeople know to go to the other one?\n\n309\n00:15:48,280 --> 00:15:52,980\nWell, it's the shared IP and the IP moves\nto the other host, people connect, right,\n\n310\n00:15:52,980 --> 00:15:54,349\nand it's really, really pretty slick.\n\n311\n00:15:55,800 --> 00:15:58,810\nSo, as you run through that wizard,\nyou're just adding those two nodes.\n\n312\n00:15:58,810 --> 00:16:01,844\nAnd at the very end of\nthe wizard it will say,\n\n313\n00:16:01,844 --> 00:16:05,458\ndo you wanna import any\nexisting compatible disks?\n\n314\n00:16:05,458 --> 00:16:10,177\nAnd if you say Yes, it'll grab any iSCSI\nor Fibre Channel drives that it sees and\n\n315\n00:16:10,177 --> 00:16:12,583\nbring them in and attach them to the SAN.\n\n316\n00:16:12,583 --> 00:16:14,210\nAnd that's what mine did.\n\n317\n00:16:14,210 --> 00:16:18,667\nSo I'll see under Storage here,\nunder Disks, here's my two disks,\n\n318\n00:16:18,667 --> 00:16:23,208\nthat one gig disk and that 36 gig disk,\nthey're a part of my cluster.\n\n319\n00:16:23,208 --> 00:16:30,580\nAll right, so at this point I've got a two\nnode cluster with some shared storage.\n\n320\n00:16:30,580 --> 00:16:32,720\nNow that's just a real\nhigh level overview.\n\n321\n00:16:32,720 --> 00:16:35,140\nLike I said, if you've never\nworked with a cluster before,\n\n322\n00:16:35,140 --> 00:16:37,230\njump over to the 7412 show.\n\n323\n00:16:37,230 --> 00:16:38,520\nYou'll see those episodes right there.\n\n324\n00:16:38,520 --> 00:16:40,570\nWe go step by step in\nsetting all of that up.\n\n325\n00:16:40,570 --> 00:16:42,720\nFar more in depth than what I just did.\n\n326\n00:16:42,720 --> 00:16:47,208\nRemember as an ITproTV subscriber,\nthe 7412 show is available to you.\n\n327\n00:16:47,208 --> 00:16:51,500\nIt doesn't cost you any extra,\njust jump over and check those out.\n\n328\n00:16:51,500 --> 00:16:56,370\nNow, when you build a cluster it\ndoesn't actually do anything until you\n\n329\n00:16:56,370 --> 00:17:00,670\nadd rolls to it, and if I look under\nrolls I'll see I don't have anything.\n\n330\n00:17:00,670 --> 00:17:03,840\nSo, while I have a cluster\nbetween these two servers,\n\n331\n00:17:03,840 --> 00:17:07,540\nThere's absolutely no clustered resources\nor clustered rolls on there, so\n\n332\n00:17:07,540 --> 00:17:10,050\nit's not really a functional cluster.\n\n333\n00:17:10,050 --> 00:17:15,040\nI just did the window server piece before\nthe show and we need to do the SQL side\n\n334\n00:17:15,040 --> 00:17:18,240\nnow to add SQL to this cluster and\nmake it a clustered instance.\n\n335\n00:17:19,260 --> 00:17:20,950\nBefore we do that, one word of caution.\n\n336\n00:17:22,020 --> 00:17:25,840\nIn the other episodes when we do\nclustering just inside a Windows server.\n\n337\n00:17:25,840 --> 00:17:30,430\nI mentioned how you can validate\nyour cluster configuration.\n\n338\n00:17:30,430 --> 00:17:32,540\nWhen you right click on the cluster,\nyou'll see this option here,\n\n339\n00:17:32,540 --> 00:17:34,660\nvalidate cluster, all right?\n\n340\n00:17:34,660 --> 00:17:40,160\nIn the other episodes, I said,\nif you validate your cluster.\n\n341\n00:17:40,160 --> 00:17:43,150\nThen it'll make sure that all\nyour hardware is compatible,\n\n342\n00:17:43,150 --> 00:17:44,580\nthat your configuration is compatible.\n\n343\n00:17:44,580 --> 00:17:47,440\nAnd it'll give you a little green\ncheck mark that says when you call\n\n344\n00:17:47,440 --> 00:17:50,300\nMicrosoft support, they'll help you.\n\n345\n00:17:50,300 --> 00:17:53,980\nIf you don't validate your cluster,\nthen you don't get that little green check\n\n346\n00:17:53,980 --> 00:17:56,810\nmark, and if you call Microsoft for\nsupport, they won't help you.\n\n347\n00:17:56,810 --> 00:18:01,090\nAnd what I said in the other episode was,\nif you don't need Microsoft support,\n\n348\n00:18:01,090 --> 00:18:03,860\nthen there's really not any point\nin bothering with validating.\n\n349\n00:18:03,860 --> 00:18:06,600\nThe only thing validating does is make\nsure that your hardware is compatible, and\n\n350\n00:18:06,600 --> 00:18:09,820\nif you've already done that,\nthen don't worry about it, right.\n\n351\n00:18:09,820 --> 00:18:12,900\nWell for SQL that changes a little bit.\n\n352\n00:18:12,900 --> 00:18:16,180\nMicrosoft SQL Server 2012 will\n\n353\n00:18:16,180 --> 00:18:19,530\nonly install on clusters\nthat have been validated.\n\n354\n00:18:19,530 --> 00:18:22,470\nSo if you haven't done that,\nyou need to do it.\n\n355\n00:18:22,470 --> 00:18:25,170\nMine's already validated but\nI'll do it again here.\n\n356\n00:18:25,170 --> 00:18:29,070\nYou just right click on your cluster\ninstance and choose validate cluster, and\n\n357\n00:18:29,070 --> 00:18:32,730\nit just walks through a super simple\nwizard that checks your hardware and\n\n358\n00:18:32,730 --> 00:18:35,870\nyour software configuration to make\nsure that you're running in a compatible\n\n359\n00:18:35,870 --> 00:18:37,550\nconfiguration.\n\n360\n00:18:37,550 --> 00:18:40,060\nIt doesn't require incredibly\nexpensive hardware or\n\n361\n00:18:40,060 --> 00:18:43,060\nanything, it just has to be hardware\nthat Microsoft has signed off on.\n\n362\n00:18:43,060 --> 00:18:46,120\nSo I'm just gonna page\nthrough this wizard.\n\n363\n00:18:46,120 --> 00:18:49,050\nWe can tell it to run all tests,\nwhich is what we need to do.\n\n364\n00:18:49,050 --> 00:18:52,150\nIt's gonna test the hardware,\nthe storage, all of it.\n\n365\n00:18:52,150 --> 00:18:56,380\nI'm not going to check my quorum disk,\nbut I'm going to check this disc two.\n\n366\n00:18:56,380 --> 00:18:58,920\nThat's where I'm gonna put my databases.\n\n367\n00:18:58,920 --> 00:19:02,599\nSo it's gonna check those and\nthen it's gonna run through and\n\n368\n00:19:02,599 --> 00:19:03,950\nstart to do its tests.\n\n369\n00:19:03,950 --> 00:19:06,490\nHere it's just showing me all\nof the tests it's about to run.\n\n370\n00:19:07,660 --> 00:19:09,550\nAnd we'll let it run.\n\n371\n00:19:09,550 --> 00:19:12,590\nNow the Validation Wizard does\ntake a little while to run.\n\n372\n00:19:12,590 --> 00:19:16,230\nIt's checking all sorts of different\nthings and making sure I'm compatible.\n\n373\n00:19:16,230 --> 00:19:18,280\nIf you haven't run this wizard,\nwhen you try and\n\n374\n00:19:18,280 --> 00:19:20,830\ninstall the SQL cluster,\nit'll kick back an error.\n\n375\n00:19:20,830 --> 00:19:25,400\nIt'll say, nope, you're not validated,\nand it will not let you proceed, right.\n\n376\n00:19:25,400 --> 00:19:28,460\nIn the Windows Server stuff,\nyou can ignore it, just proceed anyway.\n\n377\n00:19:28,460 --> 00:19:29,970\nSQL server won't do that, all right?\n\n378\n00:19:29,970 --> 00:19:33,080\nSo it's really important to\nmake sure that we validate it.\n\n379\n00:19:33,080 --> 00:19:34,120\nAll right.\n\n380\n00:19:34,120 --> 00:19:38,300\nThe next thing, once this is done, I'll\nbe ready to bring SQL into the cluster.\n\n381\n00:19:38,300 --> 00:19:41,370\nNow, what you're clustering\nis not a database,\n\n382\n00:19:41,370 --> 00:19:42,890\nyou're not clustering a database.\n\n383\n00:19:42,890 --> 00:19:45,680\nYou're clustering an instance.\n\n384\n00:19:45,680 --> 00:19:50,080\nSo remember way back in episode one,\nwe installed sequel server and\n\n385\n00:19:50,080 --> 00:19:52,070\nwe had a default instance.\n\n386\n00:19:52,070 --> 00:19:54,690\nAnd then I installed sequel\nserver a second time and\n\n387\n00:19:54,690 --> 00:19:56,440\nI created a named instance.\n\n388\n00:19:56,440 --> 00:19:59,360\nI think mine was called test SQL or\nsomething like that, right?\n\n389\n00:19:59,360 --> 00:20:03,630\nSo we had multiple instances of\nSQL Server running on our server.\n\n390\n00:20:03,630 --> 00:20:07,420\nWell, when you do a cluster,\nit's the instance that you're clustering.\n\n391\n00:20:07,420 --> 00:20:10,550\nSo we're gonna install yet\nanother instance.\n\n392\n00:20:10,550 --> 00:20:12,830\nAnd it's gonna be attached to the cluster,\n\n393\n00:20:12,830 --> 00:20:15,090\nas opposed to being attached\nto an individual host.\n\n394\n00:20:15,090 --> 00:20:18,690\nThat's gonna allow that entire instance\nto move between cluster nodes.\n\n395\n00:20:18,690 --> 00:20:20,470\nSo when there's a failure, it can jump.\n\n396\n00:20:20,470 --> 00:20:23,930\nNow, that instance can have one or\nmore databases in it.\n\n397\n00:20:23,930 --> 00:20:27,930\nSo if I have five databases that\nI wanna cluster, I can put them\n\n398\n00:20:27,930 --> 00:20:32,710\nall in one instance and have that instance\nattached to the cluster, and now when\n\n399\n00:20:32,710 --> 00:20:37,030\none node fails, all five databases jump\nover to the other server or back again.\n\n400\n00:20:37,030 --> 00:20:37,900\nAll right.\n\n401\n00:20:37,900 --> 00:20:39,160\nThat's very easy to do.\n\n402\n00:20:39,160 --> 00:20:40,650\nIt works out pretty well.\n\n403\n00:20:40,650 --> 00:20:43,420\nBut, it's not very good for\nload balancing.\n\n404\n00:20:43,420 --> 00:20:46,010\nIf all of my databases\nare in one instance,\n\n405\n00:20:47,070 --> 00:20:49,880\nthe instance can only be\non one node at a time.\n\n406\n00:20:49,880 --> 00:20:52,530\nSo it's either gonna be on Server A or\nServer B.\n\n407\n00:20:52,530 --> 00:20:54,330\nCan't be on both, right?\n\n408\n00:20:54,330 --> 00:20:59,730\nSo I'm kind of wasting 50% of my\nprocessing power and 50% of my RAM and 50%\n\n409\n00:20:59,730 --> 00:21:04,050\nof my storage by having this second server\nsitting there doing absolutely nothing.\n\n410\n00:21:04,050 --> 00:21:08,060\nSo what you can do is you can\ncreate more than one instance.\n\n411\n00:21:08,060 --> 00:21:13,130\nI can have instance one and instance two,\nand have instance one be on server A and\n\n412\n00:21:13,130 --> 00:21:18,650\ninstance two be on server B, and\nsplit my databases between the two.\n\n413\n00:21:18,650 --> 00:21:23,760\nIf one server fails, instance one will\njump over to the other server, so\n\n414\n00:21:23,760 --> 00:21:26,600\nI might have server B\nrunning instance one and\n\n415\n00:21:26,600 --> 00:21:30,100\ninstance two, and it'll have all\nthe databases at that point.\n\n416\n00:21:30,100 --> 00:21:33,139\nIf you want failover to happen\non a per-database level,\n\n417\n00:21:33,139 --> 00:21:35,760\nthough, you'll have to\ncreate multiple instances.\n\n418\n00:21:35,760 --> 00:21:37,390\nOne instance for each database.\n\n419\n00:21:37,390 --> 00:21:39,650\nThere's no way to cluster\njust a database by itself.\n\n420\n00:21:41,340 --> 00:21:42,460\nAll right.\n\n421\n00:21:42,460 --> 00:21:45,300\nLooks like I had a test failure in there,\nwhich is interesting.\n\n422\n00:21:45,300 --> 00:21:46,120\nLet me just double check.\n\n423\n00:21:47,450 --> 00:21:49,650\nSometimes the failure shows up and\nthen disappears,\n\n424\n00:21:49,650 --> 00:21:51,820\nwhich means it just hadn't\nfinished the test yet.\n\n425\n00:21:51,820 --> 00:21:53,360\nAnd yeah, that's what mine did.\n\n426\n00:21:53,360 --> 00:21:57,360\nSo kind of skimming down the list\nhere I see all successes and\n\n427\n00:21:57,360 --> 00:22:00,200\nI think I had one warning, but\na warning is not enough to stop you.\n\n428\n00:22:00,200 --> 00:22:02,890\nSo validate network communication\nhad some kind of a warning but\n\n429\n00:22:02,890 --> 00:22:05,130\nit wasn't a big enough deal to stop it.\n\n430\n00:22:05,130 --> 00:22:07,140\nAnd everything else was successful.\n\n431\n00:22:07,140 --> 00:22:11,200\nI can view the report here and see what it\nwas that it actually got red flagged on.\n\n432\n00:22:13,950 --> 00:22:19,450\nLet's see, network and, let's see,\n\n433\n00:22:19,450 --> 00:22:22,260\nit is reachable by only one\npair of network interface.\n\n434\n00:22:22,260 --> 00:22:24,260\nOh.\nI have two network adapters in this\n\n435\n00:22:24,260 --> 00:22:27,670\nserver, and the second network adapter,\nI don't think it's even plugged in.\n\n436\n00:22:27,670 --> 00:22:30,410\nI think it's, it might be plugged in and\n\n437\n00:22:30,410 --> 00:22:35,170\njust not have an IP address attached to\nit So apparently it's upset about that.\n\n438\n00:22:35,170 --> 00:22:38,150\nAnd I'm not too worried about that.\n\n439\n00:22:38,150 --> 00:22:39,780\nActually I'm only showing\none adapter there.\n\n440\n00:22:41,020 --> 00:22:42,290\nAll right.\nWell either way.\n\n441\n00:22:42,290 --> 00:22:44,760\nSo that's not enough to stop\nthe wizard from validating these.\n\n442\n00:22:44,760 --> 00:22:47,860\nWe can go ahead and just hit finish.\n\n443\n00:22:47,860 --> 00:22:49,280\nAnd now my cluster is validated.\n\n444\n00:22:49,280 --> 00:22:53,950\nSo now I'm ready to go ahead and\nbring SQL into here and get it going.\n\n445\n00:22:53,950 --> 00:22:58,130\nWell, the way we do this is a little bit\ndifferent than other clustering software.\n\n446\n00:22:58,130 --> 00:23:02,710\nYou start by creating what's\ncalled a one node cluster.\n\n447\n00:23:02,710 --> 00:23:07,250\nWe install SQL Server, and we add it\nto one of the nodes in our cluster.\n\n448\n00:23:07,250 --> 00:23:10,070\nNow at that point it brings it up and\nit says that we're clustered but\n\n449\n00:23:10,070 --> 00:23:12,260\nwe really aren't cuz\nwe just have one node.\n\n450\n00:23:12,260 --> 00:23:16,070\nSo then we need to go to our second node,\nand do the same thing over there.\n\n451\n00:23:16,070 --> 00:23:16,950\nIt's a little bit different.\n\n452\n00:23:16,950 --> 00:23:18,630\nLet's start with the first node.\n\n453\n00:23:18,630 --> 00:23:21,650\nSo here I am on Win SQL 01.\n\n454\n00:23:21,650 --> 00:23:23,300\nThat's the server, that I'm on right now.\n\n455\n00:23:23,300 --> 00:23:25,710\nSo this is my server number one.\n\n456\n00:23:25,710 --> 00:23:28,720\nI'm just gonna close out all\nthe stuff I've got open.\n\n457\n00:23:28,720 --> 00:23:31,440\nI've already got SQL Server\ninstalled on here but\n\n458\n00:23:31,440 --> 00:23:34,340\nyou can't convert an instance\nto become clustered.\n\n459\n00:23:34,340 --> 00:23:37,550\nYou have to create a clustered\nindex from the beginning.\n\n460\n00:23:37,550 --> 00:23:39,570\nYou can move your databases\nafter the fact but\n\n461\n00:23:39,570 --> 00:23:42,730\nright now I need to just create a new one.\n\n462\n00:23:42,730 --> 00:23:45,630\nSo what I'm going to do is I'm\ngoing to fire up my installation CD\n\n463\n00:23:46,640 --> 00:23:48,440\nwhich I've got laying\naround here somewhere.\n\n464\n00:23:50,270 --> 00:23:52,720\nThere we go.\nSo I am going to fire up my In Station cd.\n\n465\n00:23:52,720 --> 00:23:55,740\nSo you're just taking your\nSQL Server 2012 install DVD and\n\n466\n00:23:55,740 --> 00:23:57,370\nyou pop it in your first node.\n\n467\n00:23:58,420 --> 00:24:01,370\nAnd when you run the setup there\nwere some options in there that\n\n468\n00:24:01,370 --> 00:24:04,730\nyou guys might have noticed in earlier\nepisode that I didn't click on.\n\n469\n00:24:04,730 --> 00:24:10,625\nIn particular, there is an option to\nset up a clustered instance of SQL.\n\n470\n00:24:10,625 --> 00:24:12,250\nSo that's what i'm gonna do here.\n\n471\n00:24:12,250 --> 00:24:14,770\nThe installation process\nis basically the same,\n\n472\n00:24:14,770 --> 00:24:17,000\nyou just have to tell\nit that it's cluster.\n\n473\n00:24:17,000 --> 00:24:21,180\nSo I'll go to installation and see how\nI've got new SQL Server stand alone.\n\n474\n00:24:21,180 --> 00:24:26,240\nThat's what i did way back in episode\none but, I've got this guy right here.\n\n475\n00:24:26,240 --> 00:24:29,650\nNew SQL Server failover\ncluster installation.\n\n476\n00:24:29,650 --> 00:24:32,960\nThat's how we're going to\ncreate this clustered install.\n\n477\n00:24:32,960 --> 00:24:37,950\nNotice the option beneath it, add a node\nto a SQL Server failover cluster.\n\n478\n00:24:37,950 --> 00:24:41,710\nOn your very first node,\nyou use this option.\n\n479\n00:24:41,710 --> 00:24:46,680\nAnd then on every other node, cuz you can\nhave 2 or more, I think the maximum is 32.\n\n480\n00:24:46,680 --> 00:24:47,520\nIt might be 16.\n\n481\n00:24:47,520 --> 00:24:49,410\nIt's something up there.\n\n482\n00:24:49,410 --> 00:24:51,460\nBut then on the other ones,\n\n483\n00:24:51,460 --> 00:24:54,310\nwe go to this option,\nadd node to a SQL Server failover cluster.\n\n484\n00:24:54,310 --> 00:24:56,110\nYou're adding to one\nthat's already been built.\n\n485\n00:24:56,110 --> 00:24:59,030\nSo I'm starting right here with a new one.\n\n486\n00:24:59,030 --> 00:25:03,740\nAll right, so I'll just click that option\nand it's going to kick in to the install.\n\n487\n00:25:03,740 --> 00:25:06,800\nNow, after you've done that there's\nreally not that much difference between\n\n488\n00:25:06,800 --> 00:25:10,470\nthis install and\na normal instance install.\n\n489\n00:25:10,470 --> 00:25:13,420\nIt's gonna ask us things about like\nwhat service accounts we want to use.\n\n490\n00:25:13,420 --> 00:25:17,000\nIt's gonna ask us about what we\nwant to name the instance, or\n\n491\n00:25:17,000 --> 00:25:18,320\nif it's the default instance.\n\n492\n00:25:18,320 --> 00:25:19,980\nIf this is the first\ninstance I'm installing it,\n\n493\n00:25:19,980 --> 00:25:22,000\nI can make it the default, right.\n\n494\n00:25:22,000 --> 00:25:23,410\nI've already got some, so I won't do that.\n\n495\n00:25:23,410 --> 00:25:25,692\nI'll do a named instance.\n\n496\n00:25:25,692 --> 00:25:29,799\nBut there are other\nconfigurations out there.\n\n497\n00:25:31,210 --> 00:25:31,830\nAll right, so here we go.\n\n498\n00:25:31,830 --> 00:25:32,950\nIt's just checking for updates.\n\n499\n00:25:32,950 --> 00:25:34,700\nLooks like it found one.\n\n500\n00:25:34,700 --> 00:25:36,102\nWe'll let it do it.\n\n501\n00:25:36,102 --> 00:25:37,760\nAnd there it goes.\n\n502\n00:25:37,760 --> 00:25:40,900\nSo far, this should look like a standard\ninstall other than the fact that I chose\n\n503\n00:25:40,900 --> 00:25:41,880\nthat different option.\n\n504\n00:25:41,880 --> 00:25:43,650\nWe'll see the differences\nhere in a few moments.\n\n505\n00:25:45,010 --> 00:25:48,060\nIt's gotta pull down that 145\nmegabyte file and apply it.\n\n506\n00:25:48,060 --> 00:25:49,476\nIt doesn't take too terribly long.\n\n507\n00:25:52,351 --> 00:25:55,518\nThere we go, and\nnow we're gonna start passing through it.\n\n508\n00:25:55,518 --> 00:25:59,203\nNow, on the second node, when this is\ndone, I'm gonna go to the second node and\n\n509\n00:25:59,203 --> 00:26:01,899\nrepeat this process but\nchoose that add a node option, and\n\n510\n00:26:01,899 --> 00:26:04,510\nyou'll see the wizard there\nis basically the same too.\n\n511\n00:26:04,510 --> 00:26:08,590\nWe just pick the cluster and\nit goes through and finishes the install.\n\n512\n00:26:08,590 --> 00:26:13,035\nNow, when it sets up the shared storage\nit's not only setting up the databases to\n\n513\n00:26:13,035 --> 00:26:17,060\nfailover between the two, it's setting\nup a lot of the SQL executables.\n\n514\n00:26:17,060 --> 00:26:18,830\nA lot of the binaries and DLLs and\n\n515\n00:26:18,830 --> 00:26:20,870\nall that other stuff to\nbe able to failover too.\n\n516\n00:26:20,870 --> 00:26:23,080\nAnd that's to ensure\neasier patch management.\n\n517\n00:26:23,080 --> 00:26:26,540\nTo ensure that we don't get conflicting\nversions between the systems.\n\n518\n00:26:26,540 --> 00:26:27,820\nSo it does a lot of neat stuff.\n\n519\n00:26:29,252 --> 00:26:31,530\nAll right,\nlooks like I gotta couple of warnings.\n\n520\n00:26:31,530 --> 00:26:36,070\nOh, it's telling me that I need\nto get my distributed transaction\n\n521\n00:26:36,070 --> 00:26:40,330\ncoordinator set up, and\nmy cluster service verification warning.\n\n522\n00:26:40,330 --> 00:26:45,726\nOh that's that network adapter warning so,\nI'll ignore those.\n\n523\n00:26:45,726 --> 00:26:51,476\nAll right, punch in my license key and\nthen I'll accept my license terms.\n\n524\n00:26:51,476 --> 00:26:54,033\nI'm not going to report errors to\nMicrosoft just because this server\n\n525\n00:26:54,033 --> 00:26:55,010\nwill be gone in a few days.\n\n526\n00:26:56,690 --> 00:26:59,080\nAll right,\nwe're doing a SQL Server feature install,\n\n527\n00:26:59,080 --> 00:27:00,340\nwe're adding a database engine.\n\n528\n00:27:03,270 --> 00:27:04,440\nAnd if you kinda look down the list,\n\n529\n00:27:04,440 --> 00:27:07,160\nyou'll see there's really only one\nscreen here that talks about clustering,\n\n530\n00:27:07,160 --> 00:27:09,870\nall these others are just\nmy standard install stuff.\n\n531\n00:27:09,870 --> 00:27:11,020\nI want to do database engine.\n\n532\n00:27:11,020 --> 00:27:14,640\nI could do analysis service,\nreporting services, SSIS right,\n\n533\n00:27:14,640 --> 00:27:16,930\nall the various other\nthings that I might need.\n\n534\n00:27:16,930 --> 00:27:19,020\nYou can come through and\npick and choose those.\n\n535\n00:27:19,020 --> 00:27:20,852\nWe're just going to do\na straight up database engine.\n\n536\n00:27:24,643 --> 00:27:26,960\nAll right.\n\n537\n00:27:26,960 --> 00:27:30,550\nAfter that, just a few other questions\nabout where I want to store this stuff.\n\n538\n00:27:30,550 --> 00:27:34,330\nNow, notice down here,\nmy shared feature directory and so\n\n539\n00:27:34,330 --> 00:27:36,910\non, is pointing at C:/ whatever.\n\n540\n00:27:36,910 --> 00:27:40,320\nI'm not pointing my install\nto the shared storage.\n\n541\n00:27:40,320 --> 00:27:42,685\nI'm gonna point the databases\nto the shared storage.\n\n542\n00:27:46,018 --> 00:27:46,530\nAll right.\n\n543\n00:27:46,530 --> 00:27:49,200\nNow it's asking for\na SQL Server Network Name.\n\n544\n00:27:49,200 --> 00:27:51,220\nNow what's it talking about there?\n\n545\n00:27:51,220 --> 00:27:55,820\nIt's talking about the shared name that's\ngonna be used in between these nodes.\n\n546\n00:27:55,820 --> 00:27:58,710\nThis node has a name of WINSQL01.\n\n547\n00:27:58,710 --> 00:28:00,560\nBut I can't call my instance that,\n\n548\n00:28:00,560 --> 00:28:04,570\nbecause if WINSQL01 goes offline,\npeople can't connect to it.\n\n549\n00:28:04,570 --> 00:28:11,836\nSo I need a generic name, and so I'm\ngonna call mine SQL-CLUSTER, all right?\n\n550\n00:28:11,836 --> 00:28:14,734\nThere, SQL-CLUSTER.\n\n551\n00:28:14,734 --> 00:28:17,320\nSo this way,\nI'll be able to identify it real easy.\n\n552\n00:28:17,320 --> 00:28:20,830\nIt's not SQL01 or SQL02,\nthis is my cluster.\n\n553\n00:28:20,830 --> 00:28:23,960\nAnd I'm gonna create a named instance and\n\n554\n00:28:23,960 --> 00:28:29,061\nI will call it my clustered Instance.\n\n555\n00:28:31,040 --> 00:28:36,601\nAnd I'm exceeding the,\nI'm exceeding my character limit.\n\n556\n00:28:38,976 --> 00:28:40,010\nI'll just call it CLUSTER.\n\n557\n00:28:40,010 --> 00:28:41,150\nThat'll be fine.\n\n558\n00:28:41,150 --> 00:28:41,800\nAll right.\n\n559\n00:28:41,800 --> 00:28:43,770\nAnd then it's got my\ninstance root directory.\n\n560\n00:28:43,770 --> 00:28:45,680\nAnd notice again,\nit's pointing to that C drive.\n\n561\n00:28:45,680 --> 00:28:47,580\nI'm okay with that,\nit's gonna correct that for\n\n562\n00:28:47,580 --> 00:28:51,105\nme to make sure it's on\nthe shared storage later.\n\n563\n00:28:51,105 --> 00:28:53,615\nAll right, then down here I've got my\n\n564\n00:28:53,615 --> 00:28:55,925\ninstances that are already on the server,\nright.\n\n565\n00:28:55,925 --> 00:28:59,845\nSo I've already got a default instance,\nmy test SQL is in there so\n\n566\n00:28:59,845 --> 00:29:02,675\nI've got a few different things\nthat already exist on this server.\n\n567\n00:29:02,675 --> 00:29:05,518\nBut I'm creating an all new instance\nright here so that's what I want.\n\n568\n00:29:10,060 --> 00:29:13,550\nAll right, then we'll move forward.\n\n569\n00:29:13,550 --> 00:29:15,810\nIt's got a few other\nquestions it's gotta ask me.\n\n570\n00:29:15,810 --> 00:29:18,230\nNotice, I haven't picked my\ncluster disk selection yet.\n\n571\n00:29:18,230 --> 00:29:21,645\nSo that's why I'm not worried about\nthese things being on C:\\Program Files.\n\n572\n00:29:21,645 --> 00:29:25,480\nC:\\Program Files might be different\non my different cluster nodes.\n\n573\n00:29:25,480 --> 00:29:27,210\nIt shouldn't be, but it could.\n\n574\n00:29:27,210 --> 00:29:30,410\nSo down here it's going to have me pick\nthe cluster disks to replace that.\n\n575\n00:29:31,770 --> 00:29:32,920\nAll right, it sees my C drive.\n\n576\n00:29:32,920 --> 00:29:36,670\nIt's got enough storage so it's happy\nthere and now my cluster resource group.\n\n577\n00:29:36,670 --> 00:29:38,860\nSo I need to pick what\nserver I'm connecting to and\n\n578\n00:29:38,860 --> 00:29:41,240\nI'm going to connect to\nthis SQL Server cluster.\n\n579\n00:29:41,240 --> 00:29:43,020\nIt's giving me some information down here.\n\n580\n00:29:43,020 --> 00:29:45,410\nNow it looks bad right, it looks\nlike I got a bunch of warnings but\n\n581\n00:29:45,410 --> 00:29:46,480\nit's really not a big deal.\n\n582\n00:29:46,480 --> 00:29:51,380\nIt's just telling me that there's some\nstorage on here that's already reserved\n\n583\n00:29:51,380 --> 00:29:54,140\nthat I can't make use of,\nand I'm okay with that.\n\n584\n00:29:54,140 --> 00:29:56,830\nI set up a quorum disk and stuff,\nand I'll just ignore that.\n\n585\n00:29:56,830 --> 00:29:58,690\nThere are disks I'll be able to pick,\nthough, and\n\n586\n00:29:58,690 --> 00:30:02,880\nwe'll see that right here on the next\nscreen where I can pick my disks.\n\n587\n00:30:02,880 --> 00:30:05,690\nThere we go.\nSo ClusterDisk2 is in the green,\n\n588\n00:30:05,690 --> 00:30:06,930\nthat's the one that I want.\n\n589\n00:30:06,930 --> 00:30:11,440\nThe other disk I'm using for quorum,\nit's a tie breaking technology when\n\n590\n00:30:11,440 --> 00:30:14,430\nthe cluster gets confused as to\nwhether there's a failure or not.\n\n591\n00:30:14,430 --> 00:30:15,850\nSo that's why that disk has been reserved.\n\n592\n00:30:18,200 --> 00:30:20,090\nAll right, now for the network.\n\n593\n00:30:20,090 --> 00:30:23,790\nIt's asking me what IP address I\nwant to use for this database.\n\n594\n00:30:23,790 --> 00:30:26,929\nThis database is going to be available\non the network with a name called,\n\n595\n00:30:26,929 --> 00:30:27,756\nwhat did I call it?\n\n596\n00:30:27,756 --> 00:30:29,570\nSQL-CLUSTER or something like that.\n\n597\n00:30:29,570 --> 00:30:32,620\nSo people are going to connect that,\nit needs an IP address also.\n\n598\n00:30:32,620 --> 00:30:34,101\nSo I'll give it one.\n\n599\n00:30:34,101 --> 00:30:38,560\nLet me do 10.1.230.252,\nI think is available.\n\n600\n00:30:41,310 --> 00:30:44,266\nIdeally we check our IP address\nspreadsheet or whatever and\n\n601\n00:30:44,266 --> 00:30:46,226\nmake sure that wasn't already in use.\n\n602\n00:30:46,226 --> 00:30:48,130\nNow, I need to pick\nsome other information.\n\n603\n00:30:48,130 --> 00:30:49,893\nThe account name for my services.\n\n604\n00:30:49,893 --> 00:30:53,867\nWe have to be careful here In\nthe earlier episodes when I set this up,\n\n605\n00:30:53,867 --> 00:30:58,530\nI used a local account or a managed\nservice account on a local server.\n\n606\n00:30:58,530 --> 00:31:01,230\nBut this instance isn't tied\nto a local server anymore.\n\n607\n00:31:01,230 --> 00:31:04,040\nIt could bounce between physical servers.\n\n608\n00:31:04,040 --> 00:31:05,230\nThat's a problem.\n\n609\n00:31:05,230 --> 00:31:08,110\nIf I pick a local service account,\nit's not gonna work very well.\n\n610\n00:31:08,110 --> 00:31:11,280\nSo in my case,\nI'm joined to an Active Directory domain.\n\n611\n00:31:11,280 --> 00:31:13,400\nI'm gonna use a domain account.\n\n612\n00:31:13,400 --> 00:31:15,360\nNow, I set up this account earlier.\n\n613\n00:31:15,360 --> 00:31:17,550\nYou just go into Active Directory and\nyou create a user account.\n\n614\n00:31:17,550 --> 00:31:20,580\nI created one called sqlservice and\nthat's what I'm gonna use.\n\n615\n00:31:20,580 --> 00:31:24,965\nMy domain is called lab,\nand my user is called,\n\n616\n00:31:24,965 --> 00:31:27,692\nsqlservice and I'm gonna use it for\nboth of these.\n\n617\n00:31:27,692 --> 00:31:33,410\nAll right, you'll want to take\nthat sequel service account,\n\n618\n00:31:33,410 --> 00:31:36,580\nand make it an administrator on\nthese two machines and I did that.\n\n619\n00:31:36,580 --> 00:31:41,780\nSo I made my sqlservice account\nan administrator on WINSQL01 and WINSQL02.\n\n620\n00:31:41,780 --> 00:31:45,350\nPermissions are normally the number\none thing that breaks replication.\n\n621\n00:31:45,350 --> 00:31:49,070\nSo when we talk about clustering and\nmirroring and transaction log shipping,\n\n622\n00:31:49,070 --> 00:31:52,890\nwhen you have problems, it almost\nalways boils down to permissions.\n\n623\n00:31:52,890 --> 00:31:56,892\nAnd as a general rule, you should\ncreate dedicated service accounts for\n\n624\n00:31:56,892 --> 00:32:01,167\nSQL and then give them administrative\naccess just to the severs running SQL.\n\n625\n00:32:01,167 --> 00:32:04,788\nDon't make them a domain admin,\nthat's a little overkill right,\n\n626\n00:32:04,788 --> 00:32:08,167\nbut give them the proper access\non the SQL Servers themselves.\n\n627\n00:32:08,167 --> 00:32:12,167\nAll right, I need to punch in\nthe passwords here, so I will do that.\n\n628\n00:32:12,167 --> 00:32:14,390\nThe box on the right is\na little misleading.\n\n629\n00:32:14,390 --> 00:32:15,625\nSee how it's got start-up type?\n\n630\n00:32:15,625 --> 00:32:18,580\nAnd you might think to yourself, man,\nI really need to make that automatic.\n\n631\n00:32:18,580 --> 00:32:20,650\nWell, it won't let me change those, and\n\n632\n00:32:20,650 --> 00:32:25,380\nthe reason is, when you're in a cluster,\nyou don't let the service manage itself.\n\n633\n00:32:25,380 --> 00:32:27,350\nThe cluster manages it.\n\n634\n00:32:27,350 --> 00:32:31,010\nThe cluster determines when to start or\nwhen to stop that service.\n\n635\n00:32:31,010 --> 00:32:34,830\nYou only want the service\nto run on the active node.\n\n636\n00:32:34,830 --> 00:32:38,310\nIf you have a two node cluster, only\none should be active for this instance.\n\n637\n00:32:38,310 --> 00:32:40,030\nThe other one should be in standby.\n\n638\n00:32:40,030 --> 00:32:42,170\nSo that's why I can't\nchange these values here.\n\n639\n00:32:42,170 --> 00:32:44,770\nIt's managed by the cluster.\n\n640\n00:32:44,770 --> 00:32:48,070\nThe only one that I can really manipulate\nis the SQL Server Browser down here.\n\n641\n00:32:48,070 --> 00:32:48,960\nActually, you know what?\n\n642\n00:32:48,960 --> 00:32:50,800\nIt won't let me manipulate\nthat one either.\n\n643\n00:32:50,800 --> 00:32:51,630\nI was gonna say,\n\n644\n00:32:51,630 --> 00:32:54,290\nthe only reason that won't be listed\nis cuz we might wanna disable it.\n\n645\n00:32:54,290 --> 00:32:56,070\nAnd you still can, even in a cluster.\n\n646\n00:32:57,980 --> 00:33:00,350\nAll right, I'll go ahead and\nhit Next on that.\n\n647\n00:33:00,350 --> 00:33:01,880\nNotice that Collation tab, again,\n\n648\n00:33:01,880 --> 00:33:04,310\neasy to overlook if you need\nto change your collation.\n\n649\n00:33:05,910 --> 00:33:07,460\nNow, just like in normal install,\n\n650\n00:33:07,460 --> 00:33:11,260\nI pick whether I'm going to do Windows\nauthentication mode or mixed mode.\n\n651\n00:33:11,260 --> 00:33:11,830\nI might go ahead and\n\n652\n00:33:11,830 --> 00:33:15,360\ndo mixed mode on this one just to have\nthat SAA account if I ever need it.\n\n653\n00:33:16,970 --> 00:33:20,530\nAnd for my users I'm gonna\nadd in a couple other things,\n\n654\n00:33:20,530 --> 00:33:22,459\nI'm gonna add in domain admins.\n\n655\n00:33:23,960 --> 00:33:27,210\nI want my domain administrators to be\nable to manage this server, you may not.\n\n656\n00:33:27,210 --> 00:33:30,050\nIn you're environment you may have\ndifferent people that you want to be able\n\n657\n00:33:30,050 --> 00:33:31,560\nto manage your system.\n\n658\n00:33:31,560 --> 00:33:36,380\nRoutes are already chosen, so\nI'm gonna add in domain admins.\n\n659\n00:33:36,380 --> 00:33:39,390\nAnd I'm gonna add in\nthat SQL service account.\n\n660\n00:33:39,390 --> 00:33:42,360\nI want the SQL service account\nto have access to my server.\n\n661\n00:33:42,360 --> 00:33:43,366\nSo I'll add it right there.\n\n662\n00:33:45,746 --> 00:33:49,910\nAll right, you've got your Data\nDirectories and your File Stream here.\n\n663\n00:33:49,910 --> 00:33:51,752\nNotice how in my install,\n\n664\n00:33:51,752 --> 00:33:55,788\nI was continually picking\nC:/Program Files, right.\n\n665\n00:33:55,788 --> 00:33:57,124\nLook at the directories now.\n\n666\n00:33:57,124 --> 00:33:59,225\nE:/mssq11.\n\n667\n00:33:59,225 --> 00:34:01,975\nWhen did we tell it E:?\n\n668\n00:34:01,975 --> 00:34:03,515\nI never did, right.\n\n669\n00:34:03,515 --> 00:34:07,745\nBut when I chose my cluster disks\nI chose that shared disk, and\n\n670\n00:34:07,745 --> 00:34:09,515\nit must have given it that drive letter E.\n\n671\n00:34:09,515 --> 00:34:10,235\nI don't know.\n\n672\n00:34:10,235 --> 00:34:12,000\nI mean, we can find out.\n\n673\n00:34:12,000 --> 00:34:16,590\nIf we go here to this PC and\nsure enough I've got an E drive and\n\n674\n00:34:16,590 --> 00:34:20,160\nthat's that 36 gig drive\nthat's on my iSCSI SAN.\n\n675\n00:34:20,160 --> 00:34:22,610\nSo there it is showing up.\n\n676\n00:34:22,610 --> 00:34:23,230\nThat's where I got it.\n\n677\n00:34:23,230 --> 00:34:26,260\nSo, it's automatically\nchanging all those values.\n\n678\n00:34:26,260 --> 00:34:28,679\nSo, all those values that I\nignored before, that's why.\n\n679\n00:34:28,679 --> 00:34:32,139\nIt just changes them here.\n\n680\n00:34:32,139 --> 00:34:35,425\nWe'll go ahead and hit Next.\n\n681\n00:34:35,425 --> 00:34:37,448\nAnd that should be about all it asks.\n\n682\n00:34:37,448 --> 00:34:39,100\nWe've got the Microsoft error reporting.\n\n683\n00:34:39,100 --> 00:34:43,710\nThen it says Cluster installation rules.\n\n684\n00:34:43,710 --> 00:34:45,462\nIt's just doing some\npre-requisite checking,\n\n685\n00:34:45,462 --> 00:34:47,600\nmaking sure that we are fully compatible.\n\n686\n00:34:47,600 --> 00:34:48,490\nAnd then it's ready to install.\n\n687\n00:34:50,350 --> 00:34:54,380\nSo that's gonna install, and\nthat's gonna get node 1 ready.\n\n688\n00:34:54,380 --> 00:34:56,180\nNow you have to be really careful,\n\n689\n00:34:56,180 --> 00:34:59,410\nbecause when this is done, if you go\ninto the Failover Cluster Manager,\n\n690\n00:34:59,410 --> 00:35:03,150\nyour SQL server instance will show\nup there, users can connect to it.\n\n691\n00:35:03,150 --> 00:35:06,700\nIt says it's redundant,\nbut it really isn't.\n\n692\n00:35:06,700 --> 00:35:11,330\nOkay, what we've created\nhere is a one node cluster.\n\n693\n00:35:11,330 --> 00:35:14,530\nAnd a one node cluster\ncan not survive failure.\n\n694\n00:35:14,530 --> 00:35:19,390\nSo the next step is to go to our second\nnode, and add them to the cluster also.\n\n695\n00:35:21,870 --> 00:35:24,580\nBut we're actually out of time on\nthis segment and we need to wait and\n\n696\n00:35:24,580 --> 00:35:26,120\nwatch this thing run anyway.\n\n697\n00:35:26,120 --> 00:35:27,610\nSo let's stop here and take a break.\n\n698\n00:35:27,610 --> 00:35:31,000\nAnd during the break I'll let this little\ngreen bar crawl across the screen and\n\n699\n00:35:31,000 --> 00:35:33,030\nwhen it's done we'll pick back up and\n\n700\n00:35:33,030 --> 00:35:36,580\nwe'll tackle that second node to\nfinish building our cluster together.\n\n701\n00:35:36,580 --> 00:35:37,655\nAll right.\nSo stay tuned.\n\n702\n00:35:37,655 --> 00:35:39,431\nWe'll be back in a few.\n\n703\n00:35:39,431 --> 00:35:47,012\n[MUSIC]\n\n704\n00:35:47,012 --> 00:35:48,620\nAll right welcome back everybody.\n\n705\n00:35:48,620 --> 00:35:52,190\nFor those of you watching live,\nwe just got to watch the amazing\n\n706\n00:35:52,190 --> 00:35:54,410\nenjoyment that is a green bar\ncrawling across our screen.\n\n707\n00:35:54,410 --> 00:35:57,890\nSo, now that it's done it's\ngiving me my success report.\n\n708\n00:35:57,890 --> 00:36:01,130\nSo I know that the cluster is done,\neverything is awesome, right.\n\n709\n00:36:01,130 --> 00:36:02,960\nSo now we're fully redundant.\n\n710\n00:36:02,960 --> 00:36:05,860\nWe can go kick our feet up on the desk,\nright.\n\n711\n00:36:05,860 --> 00:36:06,900\nWell not quite.\n\n712\n00:36:06,900 --> 00:36:11,355\nif you go in your Failover Cluster Manager\nit actually will show as being healthy.\n\n713\n00:36:11,355 --> 00:36:15,620\nAnd that's because the instance\nitself is healthy, right.\n\n714\n00:36:15,620 --> 00:36:17,460\nWe brought it up, it's there.\n\n715\n00:36:17,460 --> 00:36:20,160\nThere's my SQL server cluster,\nthat I brought up.\n\n716\n00:36:20,160 --> 00:36:23,260\nIt's showing as running,\ntype is Other, right?\n\n717\n00:36:23,260 --> 00:36:26,450\nSo, it's a clustered software\npackage that wasn't built in.\n\n718\n00:36:26,450 --> 00:36:30,060\nPriority medium, owning node is WIN SQL01.\n\n719\n00:36:30,060 --> 00:36:32,440\nSo, there it is, and it looks healthy.\n\n720\n00:36:32,440 --> 00:36:34,120\nBut if we stop here, we're in trouble.\n\n721\n00:36:34,120 --> 00:36:36,940\nAnd that's because the second\nnode is not set up.\n\n722\n00:36:36,940 --> 00:36:39,010\nIt doesn't have all the software, right?\n\n723\n00:36:39,010 --> 00:36:44,730\nSo, we need to install SQL on the second\nserver and, get it joined in to the node.\n\n724\n00:36:44,730 --> 00:36:47,390\nIf I were to try and\ndo something like a failover here.\n\n725\n00:36:47,390 --> 00:36:50,497\nRight?\nIf I right click on the cluster roll, and\n\n726\n00:36:50,497 --> 00:36:54,245\ngo to Move, and Select node,\nthere's Win-SQL2.\n\n727\n00:36:54,245 --> 00:36:55,580\nIt'll let me do it.\n\n728\n00:36:55,580 --> 00:36:57,380\nIt'll let me try and\nmove over to that other server.\n\n729\n00:36:57,380 --> 00:36:58,540\nBut if I do it,\n\n730\n00:36:58,540 --> 00:37:01,860\nit's gonna fail because the software\nhasn't been set up on the other end.\n\n731\n00:37:01,860 --> 00:37:03,258\nSo, we need to do that.\n\n732\n00:37:03,258 --> 00:37:06,660\nSo, I'm gonna jump over\nto my second server and\n\n733\n00:37:06,660 --> 00:37:08,550\nwe'll get it joined to the node.\n\n734\n00:37:08,550 --> 00:37:12,269\nLet me just get that mounted really quick,\nand there we go.\n\n735\n00:37:12,269 --> 00:37:16,180\nSo, now that I've got it in here I'm just\ngoing to go into my SQL server install\n\n736\n00:37:16,180 --> 00:37:19,050\ndisc, and I'll fire that one\nup just like we did before.\n\n737\n00:37:19,050 --> 00:37:21,973\nThe only difference being instead of\ncreating a new cluster this time,\n\n738\n00:37:21,973 --> 00:37:23,740\nI'm adding a node to an existing cluster.\n\n739\n00:37:23,740 --> 00:37:27,100\nSo, the wizard will actually be\na little bit shorter this time\n\n740\n00:37:27,100 --> 00:37:31,120\nbecause it's gonna read a lot of\nthe configuration from the other server.\n\n741\n00:37:31,120 --> 00:37:35,200\nMicrosoft Windows clusters, they store the\nconfigurations in the active directory,\n\n742\n00:37:35,200 --> 00:37:38,080\nand so all this one has to do is query\nthe active directory to find out most of\n\n743\n00:37:38,080 --> 00:37:38,710\nwhat it needs.\n\n744\n00:37:39,900 --> 00:37:45,620\nSo when I go to installation, instead\nof doing a new fail over cluster like\n\n745\n00:37:45,620 --> 00:37:49,940\nI did before, this time I'll go to Add\nnode to a SQL server fail over cluster.\n\n746\n00:37:49,940 --> 00:37:52,550\nThat'll launch that\nslightly different wizard.\n\n747\n00:37:52,550 --> 00:37:54,510\nReally, just the difference\nis we're telling it it\n\n748\n00:37:54,510 --> 00:37:56,720\ncan get most of the information\nfrom the other server.\n\n749\n00:37:58,460 --> 00:38:02,550\nWhen this is complete this server will\nnow have the matching software to\n\n750\n00:38:02,550 --> 00:38:03,570\nthe other server.\n\n751\n00:38:03,570 --> 00:38:07,650\nThey'll both have access to the drives\nthat store the database, and\n\n752\n00:38:07,650 --> 00:38:08,970\nit's ready to rock.\n\n753\n00:38:08,970 --> 00:38:10,690\nNow, we'll actually have\na redundant cluster.\n\n754\n00:38:11,760 --> 00:38:13,570\nI'm just gonna say OK to that.\n\n755\n00:38:13,570 --> 00:38:15,760\nAnd, we'll advance the wizard.\n\n756\n00:38:15,760 --> 00:38:18,420\nEventually, we'll get to the screen\nwhere it'll give us the list of all\n\n757\n00:38:18,420 --> 00:38:19,260\nthe wizard steps.\n\n758\n00:38:19,260 --> 00:38:22,500\nAnd, you'll see that it already has\nmost of the information it needs.\n\n759\n00:38:22,500 --> 00:38:23,900\nSees that same update file.\n\n760\n00:38:25,560 --> 00:38:27,290\nIt keeps popping up for\nus there, so we'll do that.\n\n761\n00:38:27,290 --> 00:38:29,470\nI guess this gets a little repetitious,\nbut\n\n762\n00:38:29,470 --> 00:38:30,800\nthat's what clusters are all about, right?\n\n763\n00:38:30,800 --> 00:38:32,370\nRepetition, redundancy.\n\n764\n00:38:32,370 --> 00:38:34,940\nI'm building a two node\ncluster right here.\n\n765\n00:38:34,940 --> 00:38:35,800\nYou can go more.\n\n766\n00:38:35,800 --> 00:38:38,160\nYou can have three, four,\nhowever many nodes you need.\n\n767\n00:38:38,160 --> 00:38:43,140\nThe nice part about that is you can have\nmany different clustered instances for\n\n768\n00:38:43,140 --> 00:38:44,450\nredundancy.\n\n769\n00:38:44,450 --> 00:38:47,650\nBut you can also have it where you\ncan have more than one failure.\n\n770\n00:38:47,650 --> 00:38:50,620\nYou might need to be able to survive that,\nso clusters are really good for that.\n\n771\n00:38:50,620 --> 00:38:52,040\nAll right, now,\n\n772\n00:38:52,040 --> 00:38:56,830\nwhile we're waiting on this to run, one\nof the biggest negatives with clustering\n\n773\n00:38:56,830 --> 00:39:01,560\nis they expect both of your servers to\nbe connected to the same shared storage.\n\n774\n00:39:01,560 --> 00:39:05,760\nAnd that's what kind of kills having\nservers in different geographic locations.\n\n775\n00:39:05,760 --> 00:39:08,500\nYou can't have servers\nin two different cities\n\n776\n00:39:08,500 --> 00:39:09,948\nconnected to the same fiber channel SAN.\n\n777\n00:39:09,948 --> 00:39:12,580\nYou're not gonna be able to get\nfiber ran that way, all right?\n\n778\n00:39:12,580 --> 00:39:17,690\nSo clustering really only works when your\ntwo systems are right next to each other.\n\n779\n00:39:17,690 --> 00:39:19,770\nIf you want that remote connectivity,\n\n780\n00:39:19,770 --> 00:39:23,242\nyou're gonna want to use some of the other\ntechnologies we'll see a little bit later.\n\n781\n00:39:23,242 --> 00:39:24,985\nAll right,\nhere we got Add a failover cluster note,\n\n782\n00:39:24,985 --> 00:39:26,540\nit's just giving us kind of that summary.\n\n783\n00:39:26,540 --> 00:39:30,150\nI'm getting the same warnings i did\nbefore cuz it's the same system.\n\n784\n00:39:30,150 --> 00:39:33,900\nBut notice the wizard over here,\na lot less entries over here.\n\n785\n00:39:33,900 --> 00:39:36,590\nIt's not asking a lot of\nthe questions it did before.\n\n786\n00:39:36,590 --> 00:39:40,292\nAnd that's because it's gonna pull\nthis from the other configuration.\n\n787\n00:39:40,292 --> 00:39:43,030\nAll right here's my licence key,\nI do have to accept my licence agreement.\n\n788\n00:39:45,260 --> 00:39:47,740\nAnd then here's my cluster\nnode configuration.\n\n789\n00:39:47,740 --> 00:39:49,830\nI've got a chance to join that cluster.\n\n790\n00:39:49,830 --> 00:39:53,030\nSo it's right here,\nmy SQL cluster that we created earlier.\n\n791\n00:39:53,030 --> 00:39:53,790\nI'm gonna pick that one.\n\n792\n00:39:53,790 --> 00:39:58,880\nAnd you can see you might have more\nthan one cluster on your network.\n\n793\n00:39:58,880 --> 00:40:01,020\nYou can pick whichever one\nit is that you're joining.\n\n794\n00:40:01,020 --> 00:40:02,710\nYou're not limited to just one cluster.\n\n795\n00:40:04,320 --> 00:40:05,230\nAll right, so we'll pick that one.\n\n796\n00:40:05,230 --> 00:40:06,290\nThis is where it's reaching out.\n\n797\n00:40:06,290 --> 00:40:07,870\nSee how it's kind of frozen here?\n\n798\n00:40:07,870 --> 00:40:09,880\nIt's just kind of sitting and thinking.\n\n799\n00:40:09,880 --> 00:40:12,875\nIt's actually reaching out to the active\ndirectory and gathering information.\n\n800\n00:40:12,875 --> 00:40:16,250\nSo now it already knows the IP address\nof the server that it's joining.\n\n801\n00:40:18,010 --> 00:40:18,631\nAnd the rest of it.\nAnd\n\n802\n00:40:18,631 --> 00:40:20,250\nthat came in from\nthe the active directory.\n\n803\n00:40:20,250 --> 00:40:22,550\nSo, there we go.\n\n804\n00:40:22,550 --> 00:40:24,624\nThe only thing that is really\ndifferent is that right here,\n\n805\n00:40:24,624 --> 00:40:26,000\nI do have to re-provide the password.\n\n806\n00:40:26,000 --> 00:40:28,208\nDo you notice that I can't\nchange the service account?\n\n807\n00:40:28,208 --> 00:40:31,583\nIt got that from the other server,\nbut I do have to type the password in.\n\n808\n00:40:31,583 --> 00:40:35,758\nIf we didn't, somebody could try and\nexploit the cluster system to\n\n809\n00:40:35,758 --> 00:40:40,167\ngain elevated privileges, so\nthat's why it makes us type that again.\n\n810\n00:40:40,167 --> 00:40:43,920\nAll right, there's our arrow\nreporting which I'll skip past.\n\n811\n00:40:43,920 --> 00:40:46,700\nAny node validation and\nthen that's about it.\n\n812\n00:40:46,700 --> 00:40:49,380\nIt's gonna finish up and\nwe'll have that second nodes.\n\n813\n00:40:49,380 --> 00:40:51,870\nWe'll let that install and there it goes.\n\n814\n00:40:53,190 --> 00:40:56,656\nAll right, so I don't wanna sit here and\nwatch this screen bar kinda churn along so\n\n815\n00:40:56,656 --> 00:40:59,521\nwhat we'll do is we'll talk about\none of the other technologies and\n\n816\n00:40:59,521 --> 00:41:02,150\nthen we'll come back to\nthis after it's done.\n\n817\n00:41:02,150 --> 00:41:06,220\nSo, clustering really,\nreally effective for protecting us\n\n818\n00:41:06,220 --> 00:41:10,680\nfrom a hardware failure in a single server\nwhen our facility is still fine, right?\n\n819\n00:41:10,680 --> 00:41:15,060\nMaking it where we can quickly failover\nand do it with almost no downtime, right?\n\n820\n00:41:15,060 --> 00:41:18,580\nWhat if I want to provide redundancy\nin the event that my building fails?\n\n821\n00:41:18,580 --> 00:41:19,230\nRight?\n\n822\n00:41:19,230 --> 00:41:23,350\nOr, what if I want to have redundancy and\nit's really just a matter of money?\n\n823\n00:41:23,350 --> 00:41:25,619\nI don't wanna invest in all this\ncluster hardware, all right.\n\n824\n00:41:25,619 --> 00:41:30,313\nWell, the cluster hardware, while it\ndoes give us the super fast failover,\n\n825\n00:41:30,313 --> 00:41:35,457\nis the thing that holds us back in terms\nof price and geographic dispersion, right?\n\n826\n00:41:35,457 --> 00:41:38,460\nWe can't spread geographically\nbecause of the cluster hardware.\n\n827\n00:41:38,460 --> 00:41:43,080\nSo, database mirroring is\nan alternative that we can use.\n\n828\n00:41:43,080 --> 00:41:46,540\nDatabase mirroring doesn't\nrequire shared storage.\n\n829\n00:41:46,540 --> 00:41:50,740\nDatabase mirroring can run on two separate\nSQL servers that are not in a cluster and\n\n830\n00:41:50,740 --> 00:41:53,830\nit can replicate the database\nbetween the two.\n\n831\n00:41:53,830 --> 00:41:59,070\nOn a cool side, it doesn't require cluster\nhardware, and so that means the servers\n\n832\n00:41:59,070 --> 00:42:02,580\ncan be in the same building or they can\nbe in separate geographic locations.\n\n833\n00:42:02,580 --> 00:42:04,250\nThat's cool, right?\n\n834\n00:42:04,250 --> 00:42:08,460\nOn a negative side,\nit is replicating constantly and\n\n835\n00:42:08,460 --> 00:42:10,850\nso if you put it in a remote\ngeographical location,\n\n836\n00:42:10,850 --> 00:42:13,440\nyou want to make you have enough\nbandwidth to be able to handle that.\n\n837\n00:42:13,440 --> 00:42:16,640\nThink about the amount of changes\nyour database is experiencing, and\n\n838\n00:42:16,640 --> 00:42:19,390\nthose changes are being\nreplicated across that link.\n\n839\n00:42:19,390 --> 00:42:21,620\nSo you gotta make sure you\nhave adequate bandwidth.\n\n840\n00:42:21,620 --> 00:42:24,820\nIf it's on a LAN, if it's on your local\narea network, you've got the bandwidth.\n\n841\n00:42:24,820 --> 00:42:26,100\nYou don't have to worry about it.\n\n842\n00:42:26,100 --> 00:42:31,290\nSo you could have two servers sitting\nright next to each other, and do a mirror\n\n843\n00:42:31,290 --> 00:42:36,820\nfor the database in between them, and you\nget something similar to a cluster, right?\n\n844\n00:42:36,820 --> 00:42:39,510\nNow, if you can do that without\nhaving to set up a cluster,\n\n845\n00:42:39,510 --> 00:42:41,580\nwhy bother setting up a cluster?\n\n846\n00:42:41,580 --> 00:42:43,260\nWell, remember when we set up the cluster,\n\n847\n00:42:43,260 --> 00:42:46,370\nit asked me to pick a cluster\nIP address and a cluster name?\n\n848\n00:42:46,370 --> 00:42:53,150\nAnd so I created SQL-cluster, and\nI gave it an IP of 10.1.230.252.\n\n849\n00:42:53,150 --> 00:42:56,740\nWell, all my clients connect\nto that IP address, and\n\n850\n00:42:56,740 --> 00:42:59,180\nthey don't know what node\nthey're connected on.\n\n851\n00:42:59,180 --> 00:43:02,260\nBut in a mirror,\nthey know what node they connect on.\n\n852\n00:43:02,260 --> 00:43:04,920\nIn a mirror,\nthey connect to node number one.\n\n853\n00:43:04,920 --> 00:43:09,620\nAnd if node number one fails, how do\nthey know to connect to node number two?\n\n854\n00:43:09,620 --> 00:43:10,872\nWell, a lot of times they don't.\n\n855\n00:43:10,872 --> 00:43:12,813\nWe need to go and change a DNS record or\n\n856\n00:43:12,813 --> 00:43:15,581\nsomething like that to point\nthem to the other node.\n\n857\n00:43:15,581 --> 00:43:21,250\nSo mirroring when you have a failure,\nmight not give you automatic failover.\n\n858\n00:43:21,250 --> 00:43:23,180\nNow if you're using\nthe Sequel Native client,\n\n859\n00:43:23,180 --> 00:43:25,010\nit will give you automatic failover.\n\n860\n00:43:25,010 --> 00:43:27,750\nThe client will understand,\noh node one just went down.\n\n861\n00:43:27,750 --> 00:43:29,380\nLet me switch over to node two.\n\n862\n00:43:29,380 --> 00:43:33,721\nSo, if you're using the SQL server Native\nClient to connect with your software, then\n\n863\n00:43:33,721 --> 00:43:37,893\na mirror will give you the same level of\nredundancy that a cluster will, all right?\n\n864\n00:43:37,893 --> 00:43:41,484\nBut if you're not using the Native Client,\nif you're using ODBC or\n\n865\n00:43:41,484 --> 00:43:45,328\nsomething like that to connect to\nthe SQL server which a lot of people do,\n\n866\n00:43:45,328 --> 00:43:47,742\nin that scenario it\nwon't know to failover.\n\n867\n00:43:47,742 --> 00:43:51,063\nAnd it'll be up to you changing DNS\nrecords or changing IP addresses or\n\n868\n00:43:51,063 --> 00:43:55,380\nsomething like that, to get people to\nmove over to the other server, all right?\n\n869\n00:43:55,380 --> 00:43:59,630\nAnd in that scenario, while your database\nis still online, you do have down time,\n\n870\n00:43:59,630 --> 00:44:01,690\nyou have down time while\nyou move people over.\n\n871\n00:44:01,690 --> 00:44:06,770\nSo mirroring requires a lot less hardware,\nit's a lot easier to implement, but\n\n872\n00:44:06,770 --> 00:44:10,170\ndoesn't eliminate down time\nthe way that a cluster does.\n\n873\n00:44:10,170 --> 00:44:13,155\nAll right, so that's why clusters are so\nimportant and\n\n874\n00:44:13,155 --> 00:44:17,347\nI can see that my cluster install here\njust finished, so I'm gonna go ahead and\n\n875\n00:44:17,347 --> 00:44:19,850\nhit close on that window,\nand now it's done.\n\n876\n00:44:19,850 --> 00:44:22,700\nNow I have a clustered instance.\n\n877\n00:44:22,700 --> 00:44:27,570\nMy two SQL servers are both joined to\nthe cluster, and I'm up and running.\n\n878\n00:44:27,570 --> 00:44:29,070\nNow, how do I know that?\n\n879\n00:44:29,070 --> 00:44:34,500\nWell, I can go back over\nhere to my cluster roles and\n\n880\n00:44:34,500 --> 00:44:36,030\nthings don't look much different here,\nright?\n\n881\n00:44:36,030 --> 00:44:38,860\nI still see my cluster,\nit's running, it's there.\n\n882\n00:44:38,860 --> 00:44:41,500\nIf I take a look at my nodes,\nI've got my two different nodes and\n\n883\n00:44:41,500 --> 00:44:42,950\nthat's terribly exciting.\n\n884\n00:44:42,950 --> 00:44:47,802\nBut if I look down here at my roles,\nI can see Win-SQL01 has the SQL server\n\n885\n00:44:47,802 --> 00:44:51,800\ncluster role, and\nif I look at WIN-SQL02, it doesn't.\n\n886\n00:44:51,800 --> 00:44:53,430\nIt's just sitting there idle.\n\n887\n00:44:53,430 --> 00:44:54,650\nIt's waiting, all right?\n\n888\n00:44:54,650 --> 00:44:57,680\nIt's waiting to be able to take\nover that cluster in the event\n\n889\n00:44:57,680 --> 00:44:59,110\nthat a failure happens.\n\n890\n00:44:59,110 --> 00:45:05,620\nAnd if I browse on my hard drive to this\nE drive, which is the cluster drive,\n\n891\n00:45:05,620 --> 00:45:10,420\nI can see there's that MSSQL11.CLUSTER,\nthat's my instance folder.\n\n892\n00:45:10,420 --> 00:45:14,380\nAnd if I browse into that,\nthere's the master database,\n\n893\n00:45:14,380 --> 00:45:16,270\nthe model database, the tempDB.\n\n894\n00:45:16,270 --> 00:45:21,140\nAll those different things for\nthe cluster right there, all right.\n\n895\n00:45:21,140 --> 00:45:25,600\nNow, I can go back to my SQL Server\nManagement Studio, and instead of\n\n896\n00:45:25,600 --> 00:45:29,268\nconnecting to one of the servers,\nI can connect to the cluster, all right?\n\n897\n00:45:29,268 --> 00:45:34,560\nSo here in my server name,\ninstead of connecting to Win-SQL01,\n\n898\n00:45:34,560 --> 00:45:39,010\nI can connect to, apparently it's\nnot finding it, so I'll type it.\n\n899\n00:45:39,010 --> 00:45:40,740\nSQL-CLUSTER.\n\n900\n00:45:42,745 --> 00:45:46,280\nAnd, I did a named instance,\nso it's /CLUSTER.\n\n901\n00:45:46,280 --> 00:45:49,340\nWe'll see if it can find that.\n\n902\n00:45:49,340 --> 00:45:51,980\nI might have to type in the IP address\nif it doesn't find it automatically.\n\n903\n00:45:53,870 --> 00:45:54,850\nThere we go.\n\n904\n00:45:54,850 --> 00:45:55,900\nSo it reached out, and\n\n905\n00:45:55,900 --> 00:45:59,985\nI just connected to SQL-CLUSTER, that's\nthe virtual name I gave for the cluster.\n\n906\n00:45:59,985 --> 00:46:03,500\n/CLUSTER, that's the name of\nthe instance that I created.\n\n907\n00:46:03,500 --> 00:46:04,920\nAnd now I'm connected.\n\n908\n00:46:04,920 --> 00:46:07,140\nAnd I can go in, and\nI can create my database, right?\n\n909\n00:46:07,140 --> 00:46:09,920\nMaybe I want this to be an accounting\ndatabase, so I can go in here and\n\n910\n00:46:09,920 --> 00:46:14,810\ncreate a new one which I'll\ncall accounting, all right?\n\n911\n00:46:14,810 --> 00:46:17,740\nNow, you do have to be careful\nlike when I create this database,\n\n912\n00:46:19,030 --> 00:46:20,310\ndouble check that path.\n\n913\n00:46:20,310 --> 00:46:21,690\nSee how it's my E drive?\n\n914\n00:46:21,690 --> 00:46:24,050\nThat's the cluster drive,\nthat's what I want.\n\n915\n00:46:24,050 --> 00:46:27,410\nRemember in earlier episodes I moved\nthings to different transaction log and\n\n916\n00:46:27,410 --> 00:46:29,008\ndifferent database folders and\nstuff like that.\n\n917\n00:46:29,008 --> 00:46:32,850\nIf you're gonna move those around,\nmake sure that they're on cluster drives.\n\n918\n00:46:32,850 --> 00:46:34,090\nDon't put anything on your C drive,\n\n919\n00:46:34,090 --> 00:46:36,680\nbecause that's not being\nreplicated between the nodes.\n\n920\n00:46:38,440 --> 00:46:41,200\nAll right, so we've got it there,\nI'll just say okay, and\n\n921\n00:46:41,200 --> 00:46:44,030\nit's gonna create that\ndatabase on the cluster.\n\n922\n00:46:44,030 --> 00:46:48,680\nNow the cluster, I know it's running\nfrom Win-SQL01 right now, but\n\n923\n00:46:48,680 --> 00:46:51,650\nI could fail it over to cluster\ntwo if I wanted, right?\n\n924\n00:46:51,650 --> 00:46:53,905\nAnd failing it over is\npretty straightforward.\n\n925\n00:46:53,905 --> 00:46:57,780\nFailover happened automatically if\nSQL 01 were to power off right now,\n\n926\n00:46:57,780 --> 00:47:01,048\nthe failover would happen automatically,\nbut I could move it myself.\n\n927\n00:47:01,048 --> 00:47:05,590\nIn the failover cluster manager you\njust right click on the node and, or\n\n928\n00:47:05,590 --> 00:47:10,570\nI'm sorry you go to the role and you right\nclick on the role and choose move, and\n\n929\n00:47:10,570 --> 00:47:15,230\nyou can select what node you want to\nmove it to, so right now it's on SQL 01.\n\n930\n00:47:15,230 --> 00:47:17,010\nI'm gonna move it to SQL 02.\n\n931\n00:47:17,010 --> 00:47:20,810\nNow, when that happens,\nsee how it goes to pending?\n\n932\n00:47:20,810 --> 00:47:22,360\nIt doesn't move immediately.\n\n933\n00:47:22,360 --> 00:47:23,370\nWhat's it doing?\n\n934\n00:47:23,370 --> 00:47:25,170\nWell both servers are up right now.\n\n935\n00:47:25,170 --> 00:47:27,400\nSo the hard drives,\nthey can flip over immediately.\n\n936\n00:47:27,400 --> 00:47:28,610\nThat's no big deal.\n\n937\n00:47:28,610 --> 00:47:33,160\nBut RAM, what's in memory, it's actually\nsynchronizing the memory between the two\n\n938\n00:47:33,160 --> 00:47:36,760\nnodes, so when the failover happens,\nI don't lose any data.\n\n939\n00:47:36,760 --> 00:47:45,150\nAnd you can see that if I start a ping,\nI'm gonna start pinging that shared IP.\n\n940\n00:47:45,150 --> 00:47:48,560\nSo here I'm pinging the shared IP for\nthe cluster, and\n\n941\n00:47:48,560 --> 00:47:51,770\nI see that it's still\npending the migration.\n\n942\n00:47:51,770 --> 00:47:54,990\nNow the migration takes time\nbecause it's synchronizing memory.\n\n943\n00:47:54,990 --> 00:47:57,350\nThe more RAM you have,\nthe longer it's gonna take.\n\n944\n00:47:57,350 --> 00:47:59,540\nI forget exactly how much\nRAM I've got in these systems.\n\n945\n00:47:59,540 --> 00:48:02,270\nI think 8 gigs, so\nit's gonna take a little while while it\n\n946\n00:48:02,270 --> 00:48:05,300\nsynchronizes the memory that's\nin use by that instance, but\n\n947\n00:48:05,300 --> 00:48:10,210\nas soon as it's done, it will flip and\nit will be on Win-SQL02.\n\n948\n00:48:10,210 --> 00:48:13,230\nAnd you'll see here as i watch\nthis IP that i'm pinging\n\n949\n00:48:13,230 --> 00:48:16,440\nthat it'll probably lose one ping.\n\n950\n00:48:16,440 --> 00:48:18,708\nIt usually doesn't lose more than two.\n\n951\n00:48:18,708 --> 00:48:21,708\nSometimes it doesn't lose any,\nit just kind of depends on how you hit it.\n\n952\n00:48:21,708 --> 00:48:25,793\nBu it'll probably lose one ping as it\ndoes the failover and then it's up.\n\n953\n00:48:25,793 --> 00:48:28,300\nIt's up and\nit's running on the second node.\n\n954\n00:48:28,300 --> 00:48:30,208\nReal easy to move it between.\n\n955\n00:48:30,208 --> 00:48:33,787\nYour clients, they may get disconnected,\nand if that happens,\n\n956\n00:48:33,787 --> 00:48:35,750\nthey just have to reconnect again.\n\n957\n00:48:35,750 --> 00:48:36,333\nRight?\nAnd\n\n958\n00:48:36,333 --> 00:48:38,833\nit's not normally the clusters\nfault that happens.\n\n959\n00:48:38,833 --> 00:48:41,000\nIt's normally your switch\nthat's causing the problem.\n\n960\n00:48:41,000 --> 00:48:43,500\nSwitches track what Mac\naddress is on what port.\n\n961\n00:48:43,500 --> 00:48:46,083\nAnd it can get confused when\na cluster failover happens.\n\n962\n00:48:46,083 --> 00:48:47,750\nSo that's normally where that happens.\n\n963\n00:48:47,750 --> 00:48:51,050\nAnd a client can just turn around and\nreconnect and off you go.\n\n964\n00:48:51,050 --> 00:48:54,100\nIf you're using the SQL native\nclient it does that automatically.\n\n965\n00:48:54,100 --> 00:48:55,700\nIt reconnects and off you go.\n\n966\n00:48:55,700 --> 00:48:58,700\nSo it's if you're using\nODBC with your own system.\n\n967\n00:48:58,700 --> 00:49:00,970\nYou just need to make sure you\nhave a retry interval set.\n\n968\n00:49:00,970 --> 00:49:06,370\nSo it's actually taking a little bit\nlonger than I was counting on, but what\n\n969\n00:49:06,370 --> 00:49:09,800\nyou'll see, like I'm in SQL Management\nStudio, you'll see it get disconnected.\n\n970\n00:49:09,800 --> 00:49:12,140\nYes, so there it is,\nmine's disconnected and\n\n971\n00:49:12,140 --> 00:49:15,640\nthat's because it's trying to\nflip over to the other side.\n\n972\n00:49:15,640 --> 00:49:17,460\nI could force it to connect but\nI'm trying to wait for\n\n973\n00:49:17,460 --> 00:49:20,350\nthis memory to finish syncing and\nthen it'll be in business.\n\n974\n00:49:20,350 --> 00:49:24,850\nNow If this server had actually failed,\nwe would've lost what was in RAM.\n\n975\n00:49:24,850 --> 00:49:28,020\nAnd so there's no need to\nsynchronize the RAM side of things.\n\n976\n00:49:28,020 --> 00:49:31,510\nIt just moves the hard drives to the other\nnode and brings the other node up.\n\n977\n00:49:31,510 --> 00:49:32,580\nIt's almost instant.\n\n978\n00:49:32,580 --> 00:49:34,440\nIt happens very, very quickly.\n\n979\n00:49:34,440 --> 00:49:37,130\nThe transaction log contains\nsome broken transactions.\n\n980\n00:49:37,130 --> 00:49:38,520\nIt just rolls those back.\n\n981\n00:49:38,520 --> 00:49:41,700\nRemember, you only write changes\nto the database if they've\n\n982\n00:49:41,700 --> 00:49:45,320\nbeen 100% written to the transaction log,\nso that stuff that you lost in RAM?\n\n983\n00:49:45,320 --> 00:49:46,490\nIt's no big deal.\n\n984\n00:49:46,490 --> 00:49:48,900\nYour end users will have to rerun whatever\nit was that they were running at that\n\n985\n00:49:48,900 --> 00:49:51,750\nmoment, but otherwise, the database is up.\n\n986\n00:49:51,750 --> 00:49:54,140\nAnd the fail over happened\nwithout you being involved.\n\n987\n00:49:54,140 --> 00:49:55,950\nThat's the real cool part about a cluster.\n\n988\n00:49:55,950 --> 00:49:57,560\nYou don't get involved.\n\n989\n00:49:57,560 --> 00:50:01,950\nWith a mirror, you can do a mirror\nwithout having to cluster hardware, but\n\n990\n00:50:01,950 --> 00:50:03,920\nif there's a failure,\nyou have to get involved.\n\n991\n00:50:03,920 --> 00:50:06,420\nYou have to get involved to make\nsure your client's redirected,\n\n992\n00:50:06,420 --> 00:50:08,250\nunless they're running the native client.\n\n993\n00:50:08,250 --> 00:50:11,320\nSo, gee,\nI think that's just gonna take its time.\n\n994\n00:50:11,320 --> 00:50:14,187\nYou wouldn't think I was consuming\nthat much memory on a brand new system\n\n995\n00:50:14,187 --> 00:50:15,178\nwith an empty database.\n\n996\n00:50:15,178 --> 00:50:18,835\nBut apparently it's gonna make me wait.\n\n997\n00:50:22,201 --> 00:50:24,009\nYeah, you don't get like a progress bar,\nso\n\n998\n00:50:24,009 --> 00:50:26,040\nyou don't really know how far along it is.\n\n999\n00:50:26,040 --> 00:50:28,710\nWith Hyper-V, when you do a failover,\nyou get a little progress bar,\n\n1000\n00:50:28,710 --> 00:50:29,540\nwith this one you don't.\n\n1001\n00:50:29,540 --> 00:50:31,800\nSo, just gonna have to wait impatiently.\n\n1002\n00:50:33,350 --> 00:50:34,710\nAll right.\nI'm kinda tired of waiting.\n\n1003\n00:50:34,710 --> 00:50:37,470\nBut once it finishes, I can just go\nback to my Management Studio and\n\n1004\n00:50:37,470 --> 00:50:38,640\nrefresh the screen.\n\n1005\n00:50:38,640 --> 00:50:39,540\nAnd I'll be connected.\n\n1006\n00:50:39,540 --> 00:50:40,180\nThe node is up.\n\n1007\n00:50:40,180 --> 00:50:41,940\nIt's happy, and we're ready to work.\n\n1008\n00:50:41,940 --> 00:50:42,520\nAll right?\n\n1009\n00:50:42,520 --> 00:50:43,500\nSo, really cool.\n\n1010\n00:50:43,500 --> 00:50:45,520\nNot that hard to get set up.\n\n1011\n00:50:45,520 --> 00:50:48,200\nBut it's the infrastructure\nside that makes it difficult.\n\n1012\n00:50:48,200 --> 00:50:49,280\nRight?\nThe cost of that.\n\n1013\n00:50:50,850 --> 00:50:52,730\nAll right, now, I mentioned a mirror.\n\n1014\n00:50:52,730 --> 00:50:55,380\nMirrors are actually\npretty easy to set up.\n\n1015\n00:50:55,380 --> 00:50:58,655\nOn the mirror side, we just need to\nhave two servers that are both running\n\n1016\n00:50:58,655 --> 00:51:02,340\nSQL Server, and we need to have\ncredentials that work on both of them.\n\n1017\n00:51:02,340 --> 00:51:05,010\nAnd then, what we can do is\nwe can create a database, and\n\n1018\n00:51:05,010 --> 00:51:08,940\nwe can start to synchronize that\ndatabase between the two nodes.\n\n1019\n00:51:08,940 --> 00:51:09,960\nOh, there we go.\n\n1020\n00:51:09,960 --> 00:51:11,010\nLooks like mine just finished.\n\n1021\n00:51:11,010 --> 00:51:13,550\nSo now it shows that it finished,\nit's moved over, it's running, and\n\n1022\n00:51:13,550 --> 00:51:15,190\nit's running on SQL 02.\n\n1023\n00:51:15,190 --> 00:51:18,229\nAnd back here in my management studio,\nall I need to do is,\n\n1024\n00:51:18,229 --> 00:51:21,214\nyou'll see here where it\nshows that I'm disconnected.\n\n1025\n00:51:21,214 --> 00:51:24,277\nI'm just gonna refresh that,\nand when I refresh,\n\n1026\n00:51:24,277 --> 00:51:26,996\nit should show that it's happy and\nhealthy.\n\n1027\n00:51:26,996 --> 00:51:30,374\nAnd this is the moment\nof truth right here.\n\n1028\n00:51:30,374 --> 00:51:31,198\nThere we go.\n\n1029\n00:51:31,198 --> 00:51:33,434\nAnd I'm connected,\nI can still get into that database,\n\n1030\n00:51:33,434 --> 00:51:36,573\nthere's my accounting database, I can\ngo and create some tables or whatever.\n\n1031\n00:51:36,573 --> 00:51:37,572\nI'm in.\n\n1032\n00:51:37,572 --> 00:51:38,977\nI'm ready to work.\n\n1033\n00:51:38,977 --> 00:51:43,810\nSo that is a SQL cluster in a nutshell.\n\n1034\n00:51:43,810 --> 00:51:47,630\nAfter that, you manage it just like all of\nyour other cluster resources, so in here\n\n1035\n00:51:47,630 --> 00:51:51,600\nyou might have clustered webservers, DHCP,\nor whatever it is that you're clustering.\n\n1036\n00:51:51,600 --> 00:51:52,750\nYou manage from here, just like that.\n\n1037\n00:51:52,750 --> 00:51:57,400\nBut at the SQL server cluster is\na special cluster type that'ss\n\n1038\n00:51:57,400 --> 00:52:01,220\nnot included with the Windows OS,\nit's managed by what's on that DVD.\n\n1039\n00:52:01,220 --> 00:52:03,770\nSo, you gotta have that install disk and\nbe ready to rock.\n\n1040\n00:52:05,430 --> 00:52:06,240\nAll right.\n\n1041\n00:52:06,240 --> 00:52:08,890\nWell, the next thing I want to do is, I\nwant to take a look at database mirroring.\n\n1042\n00:52:08,890 --> 00:52:10,560\nI want to show you guys\nhow to get that set up.\n\n1043\n00:52:11,720 --> 00:52:17,180\nYou can do mirroring on the same\nservers as your cluster if you wanted.\n\n1044\n00:52:17,180 --> 00:52:18,530\nIt does work.\n\n1045\n00:52:18,530 --> 00:52:20,290\nI prefer to try and\nkeep things separate at least for\n\n1046\n00:52:20,290 --> 00:52:21,920\nthe show to make sure we\ndon't get any conflicts.\n\n1047\n00:52:21,920 --> 00:52:24,210\nSo why don't we stop here and\ntake a break, and\n\n1048\n00:52:24,210 --> 00:52:28,130\nduring the break I'll tear down this\ncluster, and then we'll build up a mirror,\n\n1049\n00:52:28,130 --> 00:52:30,170\nand then we'll do transaction\nlog shipping after that.\n\n1050\n00:52:30,170 --> 00:52:31,620\nSo we'll get a chance to\nsee all three technologies.\n\n1051\n00:52:31,620 --> 00:52:35,335\nSo let's stop here and take a break, and\nwe'll pick back up in a few minutes.\n\n1052\n00:52:35,335 --> 00:52:39,160\n[SOUND] All right,\n\n1053\n00:52:39,160 --> 00:52:44,774\nwelcome back everybody.\n\n1054\n00:52:44,774 --> 00:52:47,652\nSo during the break I went ahead and\njust tore down the cluster so\n\n1055\n00:52:47,652 --> 00:52:49,530\nthat's gonna be out of the way.\n\n1056\n00:52:49,530 --> 00:52:53,690\nI want to show you guys that we can do\nmirroring and achieve a very similar\n\n1057\n00:52:53,690 --> 00:52:56,360\nresult, but without having the whole\ncluster infrastructure in the background.\n\n1058\n00:52:56,360 --> 00:52:58,930\nSo that's why I wanted to get that out\nof there, just to make sure that we\n\n1059\n00:52:58,930 --> 00:53:02,590\nunderstood they were completely\nseparate items, not tied to each other.\n\n1060\n00:53:02,590 --> 00:53:06,110\nMirroring is like a poor man's cluster,\nright?\n\n1061\n00:53:06,110 --> 00:53:08,570\nI shouldn't say poor man,\ncuz this is all expensive software anyway.\n\n1062\n00:53:08,570 --> 00:53:12,300\nBut basically,\nit allows you to mirror that database and\n\n1063\n00:53:12,300 --> 00:53:14,990\nhave it stored in two\nlocations in real time.\n\n1064\n00:53:14,990 --> 00:53:20,030\nAnd that way, if one node fails, another\none takes over, very similar to a cluster.\n\n1065\n00:53:20,030 --> 00:53:22,030\nVery easy to set up too.\n\n1066\n00:53:22,030 --> 00:53:24,920\nSetting up mirroring doesn't\nreally require a lot of effort.\n\n1067\n00:53:24,920 --> 00:53:28,980\nThe number one problem we have\nreally stems from permissions.\n\n1068\n00:53:28,980 --> 00:53:31,020\nSo we've gotta make sure we've\ngot our permissions set up right.\n\n1069\n00:53:31,020 --> 00:53:34,520\nThere's a few other little prerequisites\nwe have to do, but for the most part,\n\n1070\n00:53:34,520 --> 00:53:38,760\nit's really straight forward to get\ndatabase mirroring set up and running.\n\n1071\n00:53:38,760 --> 00:53:40,680\nA couple little caveats.\n\n1072\n00:53:40,680 --> 00:53:46,530\nWhen you set up a cluster,\nyou can have two nodes or even more.\n\n1073\n00:53:46,530 --> 00:53:48,180\nYou can have as many as you want, right.\n\n1074\n00:53:48,180 --> 00:53:53,700\nBut in a mirror, you can only have two\nnodes, the primary and the standby.\n\n1075\n00:53:53,700 --> 00:53:56,490\nThe primary is the one with\nthe active database on it and\n\n1076\n00:53:56,490 --> 00:53:58,935\nthe standby is the one who has that copy.\n\n1077\n00:53:58,935 --> 00:54:00,559\nA standby or secondary,\nwhatever you want to call it.\n\n1078\n00:54:00,559 --> 00:54:03,044\nSo you can only have an extra node.\n\n1079\n00:54:03,044 --> 00:54:06,240\nSo two systems and that's it.\n\n1080\n00:54:06,240 --> 00:54:08,430\nThat's a big caveat there.\n\n1081\n00:54:08,430 --> 00:54:11,580\nOther things, if your clients\nare using the SQL native client,\n\n1082\n00:54:11,580 --> 00:54:17,100\nthey will automatically failover between\nthe nodes during a failure, but if you're\n\n1083\n00:54:17,100 --> 00:54:20,060\nnot using the SQL native client, there's\ngonna be something manual involved.\n\n1084\n00:54:20,060 --> 00:54:22,630\nRight?\nSo you'll want to do a like a DNS record\n\n1085\n00:54:22,630 --> 00:54:25,810\ntied to the IP of one sever and\nwhen a failure happens, you go and\n\n1086\n00:54:25,810 --> 00:54:27,140\nedit the DNS record to\npoint to the other one.\n\n1087\n00:54:27,140 --> 00:54:31,930\nOr in your software, you write it and say,\nconnect to the database on this server.\n\n1088\n00:54:31,930 --> 00:54:33,357\n>> If you fail to connect\ntry this other one.\n\n1089\n00:54:33,357 --> 00:54:36,184\nBake that into the software\nthat you're writing, but\n\n1090\n00:54:36,184 --> 00:54:39,138\nas far as the mirror itself,\nthere's not too much to it.\n\n1091\n00:54:39,138 --> 00:54:43,230\nThe first thing you need to do is you're\ngoing to need a user account to be able to\n\n1092\n00:54:43,230 --> 00:54:47,335\nmanage this, and the user account needs\nto have permissions on both servers.\n\n1093\n00:54:47,335 --> 00:54:51,816\nIt's got to be able to restore\nbackups on the other server.\n\n1094\n00:54:51,816 --> 00:54:55,333\nThe way a lot of this mirroring\nworks is through the backup system.\n\n1095\n00:54:55,333 --> 00:54:59,867\nSo it's using a software agent, really\nyour SQL service agent in the background,\n\n1096\n00:54:59,867 --> 00:55:02,003\nto be able to send these changes over and\n\n1097\n00:55:02,003 --> 00:55:06,318\nroll them forward in the other database\nand keep them synchronized together.\n\n1098\n00:55:06,318 --> 00:55:08,840\nSo we gotta make sure we have\nan account that's set up for that.\n\n1099\n00:55:08,840 --> 00:55:13,470\nNow, I'm using an account for\nmy SQL service that I put in here.\n\n1100\n00:55:13,470 --> 00:55:14,820\nI've got the active directory, and\n\n1101\n00:55:14,820 --> 00:55:16,590\nthese servers are joined\nto the active directory, so\n\n1102\n00:55:16,590 --> 00:55:20,520\nI use the directory account and gave it\npermissions on both systems, all right?\n\n1103\n00:55:20,520 --> 00:55:24,940\nSo I create an account called SQL service,\nand I put that SQL service account\n\n1104\n00:55:24,940 --> 00:55:28,000\nin the local administrators\ngroup of both these servers,\n\n1105\n00:55:28,000 --> 00:55:30,620\nthat way it would have the access to\nbe able to do whatever it needed.\n\n1106\n00:55:30,620 --> 00:55:31,810\nAll right.\n\n1107\n00:55:31,810 --> 00:55:35,680\nYou'll also need some kind of shared\nfolder to be able to exchange at least\n\n1108\n00:55:35,680 --> 00:55:38,250\nyour initial backup between the servers.\n\n1109\n00:55:38,250 --> 00:55:43,900\nOne of the first steps we do, is we gotta\nbackup the database on our primary server\n\n1110\n00:55:43,900 --> 00:55:47,180\nand restore it on the secondary server so\nthey have a starting point, right?\n\n1111\n00:55:47,180 --> 00:55:48,500\nIts gotta have a starting point.\n\n1112\n00:55:48,500 --> 00:55:50,987\nSo you restore a backup on\nthat secondary server, and\n\n1113\n00:55:50,987 --> 00:55:53,740\nthen after that you're just\nsynchronizing the changes.\n\n1114\n00:55:53,740 --> 00:55:56,240\nSo that's kind of how\nwe get this kicked off.\n\n1115\n00:55:56,240 --> 00:55:59,230\nSo I've already got the user\naccount in place, I'm good there.\n\n1116\n00:55:59,230 --> 00:56:00,660\nOne thing to double-check though,\n\n1117\n00:56:00,660 --> 00:56:04,460\njust because you've added it to the local\nadministrator's account on your system,\n\n1118\n00:56:04,460 --> 00:56:08,320\ndoesn't mean it has\npermissions inside of SQL.\n\n1119\n00:56:08,320 --> 00:56:11,380\nSQL maintains its own administrators.\n\n1120\n00:56:11,380 --> 00:56:13,970\nSo what I'm gonna do is I'm\njust gonna double-check that.\n\n1121\n00:56:13,970 --> 00:56:18,867\nOn my Win SQL 01, I'm gonna go under\nSecurity and Logins, and I'm gonna\n\n1122\n00:56:18,867 --> 00:56:23,792\nlook and make sure that my SQL Service\naccount is in there, and I can see it.\n\n1123\n00:56:23,792 --> 00:56:27,582\nRight here, lab/sqlservice,\nthat's my account.\n\n1124\n00:56:27,582 --> 00:56:33,150\nAnd if I check its roles, so\nI'll just go here under server roles.\n\n1125\n00:56:33,150 --> 00:56:34,610\nI've made it a full sysadmin.\n\n1126\n00:56:34,610 --> 00:56:37,450\nNow, you may or may not want that, right.\n\n1127\n00:56:37,450 --> 00:56:42,690\nIf this instance only has one database,\nand that's the database you're mirroring,\n\n1128\n00:56:42,690 --> 00:56:45,640\nthen you might want to make\nyour sqlservice a sysadmin,\n\n1129\n00:56:45,640 --> 00:56:47,200\nit can have full access to the server.\n\n1130\n00:56:47,200 --> 00:56:50,800\nBut if you've got more than one database,\nand you want this account to just be\n\n1131\n00:56:50,800 --> 00:56:54,620\nreplicating that single database,\nyou probably don't want sysadmin.\n\n1132\n00:56:54,620 --> 00:56:58,120\nYou probably want to give it permissions\nright on the individual database, and\n\n1133\n00:56:58,120 --> 00:57:01,310\nmake it a db_backupoperator or\na db_owner, or one or\n\n1134\n00:57:01,310 --> 00:57:03,420\nthe other to be able to\nhandle that replication.\n\n1135\n00:57:03,420 --> 00:57:03,960\nAll right.\nSo\n\n1136\n00:57:03,960 --> 00:57:08,010\nmake sure you set your security in the way\nthat's appropriate for your environment.\n\n1137\n00:57:09,490 --> 00:57:10,100\nAll right.\n\n1138\n00:57:10,100 --> 00:57:12,820\nBut in mine, since I've only got one\ndatabase on here, I'll go ahead and\n\n1139\n00:57:12,820 --> 00:57:14,730\nmake it an assist admin.\n\n1140\n00:57:14,730 --> 00:57:15,520\nAll right.\n\n1141\n00:57:15,520 --> 00:57:18,620\nI just have this one database,\nthe human resources database, and\n\n1142\n00:57:18,620 --> 00:57:19,739\nthat's the one that I want to mirror.\n\n1143\n00:57:21,290 --> 00:57:24,610\nAll, right now that was on SQL 01,\nlet me check on SQL 02.\n\n1144\n00:57:24,610 --> 00:57:29,330\nSo on SQL 02, which I've connected\nto right here, I can go to security,\n\n1145\n00:57:29,330 --> 00:57:34,136\nlogins, and there's lab/sqlservice.\n\n1146\n00:57:34,136 --> 00:57:35,180\nAnd.\n\n1147\n00:57:35,180 --> 00:57:37,400\nIt's got the sysadmin server role also.\n\n1148\n00:57:37,400 --> 00:57:38,610\nSo it should be good to go.\n\n1149\n00:57:38,610 --> 00:57:41,990\nWe got this one account that\nhas access to both servers.\n\n1150\n00:57:43,290 --> 00:57:44,890\nNow I should go and pick my database.\n\n1151\n00:57:44,890 --> 00:57:49,960\nSo on SQL01, I'm going to go under\ndatabases and human resources.\n\n1152\n00:57:49,960 --> 00:57:51,570\nThat's the database I want to replicate.\n\n1153\n00:57:52,600 --> 00:57:56,540\nAnd I will right click on it and\n\n1154\n00:57:56,540 --> 00:58:00,620\ngo to Tasks, and\nright here under Tasks you'll see Mirror.\n\n1155\n00:58:02,220 --> 00:58:04,950\nNow when we go to Mirror it is gonna\nlaunch just this screen right here.\n\n1156\n00:58:04,950 --> 00:58:06,880\nIt's not a true wizard, right,\n\n1157\n00:58:06,880 --> 00:58:10,010\nit's really just a single screen with\na bunch of options on it for us.\n\n1158\n00:58:10,010 --> 00:58:13,480\nAnd you'll notice how\nthe options are all grayed out.\n\n1159\n00:58:13,480 --> 00:58:16,470\nI can't type into these, all right.\n\n1160\n00:58:16,470 --> 00:58:21,100\nWell it needs to verify that we've set\nup security properly between the two\n\n1161\n00:58:21,100 --> 00:58:24,850\nsystems and it needs to build\nwhat's called an end point.\n\n1162\n00:58:24,850 --> 00:58:30,900\nYou might remember I talked about the SQL\nserver session broker in another episode.\n\n1163\n00:58:30,900 --> 00:58:33,730\nAnd then session broker is\na way to reliably exchange\n\n1164\n00:58:33,730 --> 00:58:35,490\ntransactions between servers.\n\n1165\n00:58:35,490 --> 00:58:38,790\nWell, the SQL server\nmirroring uses that and\n\n1166\n00:58:38,790 --> 00:58:41,170\nso it needs to set up the endpoints first.\n\n1167\n00:58:41,170 --> 00:58:43,610\nYou can't just type in server\nnames here and let it go.\n\n1168\n00:58:43,610 --> 00:58:46,780\nIt's gotta build an endpoint.\n\n1169\n00:58:46,780 --> 00:58:48,750\nAnd look at this here.\n\n1170\n00:58:48,750 --> 00:58:51,440\nIt's got TCP://WIN-SQL01.lab.itpro.tv.\n\n1171\n00:58:51,440 --> 00:58:53,030\nThat's my server.\n\n1172\n00:58:53,030 --> 00:58:57,180\n:5022, what the heck is that 5022?\n\n1173\n00:58:57,180 --> 00:59:00,250\nWell, that's a session broker end point.\n\n1174\n00:59:00,250 --> 00:59:01,460\nAnd I haven't made that, right?\n\n1175\n00:59:01,460 --> 00:59:04,180\nThat's not a valid address right now.\n\n1176\n00:59:04,180 --> 00:59:08,610\nSo when you click Configure Security,\nit's going to make sure that you've got\n\n1177\n00:59:08,610 --> 00:59:11,030\na user account that has\npermissions on both servers.\n\n1178\n00:59:11,030 --> 00:59:12,340\nAnd it's going to create that end point.\n\n1179\n00:59:12,340 --> 00:59:14,770\nNow the reason I emphasize that here.\n\n1180\n00:59:14,770 --> 00:59:16,870\nIn order for this to work,\n\n1181\n00:59:16,870 --> 00:59:21,190\nserver one has to be able to talk\nto server two on that end point.\n\n1182\n00:59:21,190 --> 00:59:23,530\nSo if you've got a firewall\nin between them,\n\n1183\n00:59:23,530 --> 00:59:25,830\nyou've got to open that\nport on the firewall.\n\n1184\n00:59:25,830 --> 00:59:28,790\nEven if they're on the local network,\nthere's the Windows firewall.\n\n1185\n00:59:28,790 --> 00:59:30,710\nWe'll need to open up TCP Port 5022.\n\n1186\n00:59:30,710 --> 00:59:34,830\nOr whatever port number you pick,\nbecause you can pick any number you want.\n\n1187\n00:59:36,400 --> 00:59:37,590\nAll right.\nSo I’m gonna go ahead and\n\n1188\n00:59:37,590 --> 00:59:40,070\nhit Configure Security, and\nthat is going to launch\n\n1189\n00:59:40,070 --> 00:59:43,010\na little wizard that’s actually going\nto set up the whole mirror for us.\n\n1190\n00:59:44,320 --> 00:59:49,040\nWhen you move forward, it’s gonna ask you\nright off the bat, do you want a witness?\n\n1191\n00:59:49,040 --> 00:59:53,200\nRemember I mentioned earlier in a cluster,\nyou can have a cluster quorum, and\n\n1192\n00:59:53,200 --> 00:59:54,620\nit's like a tie breaker.\n\n1193\n00:59:54,620 --> 00:59:57,730\nIf the nodes ever get confused as\nto whether there's a failure or\n\n1194\n00:59:57,730 --> 01:00:00,050\nnot, sometimes it's useful\nto have a tie breaker.\n\n1195\n01:00:00,050 --> 01:00:01,850\nAnd that's what the quorum does.\n\n1196\n01:00:01,850 --> 01:00:06,730\nWell, in a mirror you have a witness and\na witness is the same thing as quorum.\n\n1197\n01:00:06,730 --> 01:00:07,800\nIt's the tie-breaker.\n\n1198\n01:00:07,800 --> 01:00:10,880\nThe two nodes can't determine\nif there's actually a failure\n\n1199\n01:00:10,880 --> 01:00:12,400\nif both nodes think they failed.\n\n1200\n01:00:12,400 --> 01:00:15,970\nFor example, how do they\ndetermine who's gonna go online?\n\n1201\n01:00:15,970 --> 01:00:18,180\nWell, the witness will be the tie-breaker.\n\n1202\n01:00:18,180 --> 01:00:22,840\nIf you say yes, you need to have\na third SQL server somewhere.\n\n1203\n01:00:22,840 --> 01:00:25,830\nAnd that third SQL server\nwill not host this database.\n\n1204\n01:00:25,830 --> 01:00:27,590\nRight?\nThe mirrored database is only going to be\n\n1205\n01:00:27,590 --> 01:00:28,820\ntwo servers.\n\n1206\n01:00:28,820 --> 01:00:31,250\nBut this third server will\njust act as a tie breaker.\n\n1207\n01:00:31,250 --> 01:00:31,750\nAll right?\n\n1208\n01:00:31,750 --> 01:00:34,390\nIt will maintain a little bit of\ninformation to track whether the servers\n\n1209\n01:00:34,390 --> 01:00:35,530\nare up or down.\n\n1210\n01:00:35,530 --> 01:00:37,830\nIn my case I don't have a third server so\nI'll just say no.\n\n1211\n01:00:37,830 --> 01:00:40,592\nBut if you say yes, you would just\nput in the server credentials, and\n\n1212\n01:00:40,592 --> 01:00:41,645\nit takes care of the rest.\n\n1213\n01:00:44,485 --> 01:00:45,420\nAll right.\n\n1214\n01:00:45,420 --> 01:00:47,360\nThen, who is our principal server?\n\n1215\n01:00:47,360 --> 01:00:49,440\nWho is the main one hosting the database?\n\n1216\n01:00:49,440 --> 01:00:51,080\nIn my case, it's WINSQL01.\n\n1217\n01:00:51,080 --> 01:00:53,240\nAnd here you'll see that port number,\n\n1218\n01:00:53,240 --> 01:00:56,930\n5022, and it's creating\nan endpoint called mirroring.\n\n1219\n01:00:58,430 --> 01:00:59,070\nAll right.\n\n1220\n01:00:59,070 --> 01:01:01,830\nThere is an option to encrypt data\nsent through this end point, and\n\n1221\n01:01:01,830 --> 01:01:03,030\nit's already checked off from mine.\n\n1222\n01:01:03,030 --> 01:01:04,530\nAnd notice this is grayed out.\n\n1223\n01:01:04,530 --> 01:01:06,630\nIt's grayed out because I've ran\nthrough this wizard once before,\n\n1224\n01:01:06,630 --> 01:01:08,780\nso the end point already exists.\n\n1225\n01:01:08,780 --> 01:01:10,860\nIf I went and deleted the end points,\nthese would light up and\n\n1226\n01:01:10,860 --> 01:01:12,029\nI could change these values.\n\n1227\n01:01:14,430 --> 01:01:16,740\nAll right, now for the other side.\n\n1228\n01:01:16,740 --> 01:01:18,090\nWho's going to be on the other side, and\n\n1229\n01:01:18,090 --> 01:01:22,210\nit's asking me to pick who it's going to\nbe, and so I'm going to pick my SQL 02,\n\n1230\n01:01:22,210 --> 01:01:25,220\nand when I pick it,\nit's going to ask me to authenticate.\n\n1231\n01:01:25,220 --> 01:01:28,190\nNow, I've got Windows Authentication\nset up so I can do that, but\n\n1232\n01:01:28,190 --> 01:01:30,530\notherwise you would have to provide\nthe credentials for that server.\n\n1233\n01:01:31,560 --> 01:01:35,580\nOnce you connect, you specify the end\npoint information over there.\n\n1234\n01:01:35,580 --> 01:01:38,090\nAgain, mine's grayed out because\nI've run through this before so\n\n1235\n01:01:38,090 --> 01:01:41,510\nthe endpoint already exists, but if it\ndidn't, you could punch in these values.\n\n1236\n01:01:41,510 --> 01:01:44,550\nYou do not have to use\nthe same port number.\n\n1237\n01:01:44,550 --> 01:01:48,240\nI typically do because it's easier\nto keep track of, but you don't.\n\n1238\n01:01:48,240 --> 01:01:50,880\nYou can pick whatever number\nyou want on that one.\n\n1239\n01:01:50,880 --> 01:01:52,010\nAnd then you can give it a name.\n\n1240\n01:01:52,010 --> 01:01:57,120\nAll right, after that it's asking for\nthe user account.\n\n1241\n01:01:57,120 --> 01:01:59,920\nNow if you're using an active\ndirectory account like I am, and\n\n1242\n01:01:59,920 --> 01:02:01,800\nit's got permissions on both servers,\n\n1243\n01:02:01,800 --> 01:02:05,410\nthen you're gonna use the same account\non the principal and on the mirror.\n\n1244\n01:02:05,410 --> 01:02:09,140\nBut if these machines aren't\njoined to a domain you might have\n\n1245\n01:02:09,140 --> 01:02:13,730\none local account for the principal and\na different local account for the mirror.\n\n1246\n01:02:13,730 --> 01:02:15,550\nSo, you'd provide those accounts here.\n\n1247\n01:02:15,550 --> 01:02:16,453\nFor me, it's gonna be\n\n1248\n01:02:16,453 --> 01:02:18,885\nthe same though because I did\ncreate a centralized account.\n\n1249\n01:02:21,311 --> 01:02:26,650\nSo, I'll just punch that in and\nthat's all it needs to finish that up.\n\n1250\n01:02:26,650 --> 01:02:30,560\nNow, it's gonna test and see if it\ncan connect those two end points, and\n\n1251\n01:02:30,560 --> 01:02:32,070\nif it can, great.\n\n1252\n01:02:32,070 --> 01:02:33,760\nAnd you know what,\nI just realized something.\n\n1253\n01:02:33,760 --> 01:02:34,320\nI missed something.\n\n1254\n01:02:34,320 --> 01:02:35,810\nI'm going to get an error here.\n\n1255\n01:02:35,810 --> 01:02:40,270\nIt seems to be happy and healthy,\nbut it really shouldn't be.\n\n1256\n01:02:40,270 --> 01:02:43,280\nSo here it's offering to start my mirror,\nand it's going to fail.\n\n1257\n01:02:43,280 --> 01:02:46,310\nSo when I hit start mirror,\nyeah there's the failure.\n\n1258\n01:02:46,310 --> 01:02:47,590\nNotice my warning.\n\n1259\n01:02:47,590 --> 01:02:51,330\nYou must restore a backup of\nthe principal database to the mirror.\n\n1260\n01:02:51,330 --> 01:02:54,210\nI said that just a few minutes ago and\nI didn't listen to myself.\n\n1261\n01:02:54,210 --> 01:02:56,760\nWe've gotta restore a backup of\nthe database to the other side so\n\n1262\n01:02:56,760 --> 01:02:58,430\nthat it has a starting point.\n\n1263\n01:02:58,430 --> 01:02:59,470\nI didn't do that.\n\n1264\n01:02:59,470 --> 01:03:01,400\nSo, I'm getting an error\nabout missing that.\n\n1265\n01:03:01,400 --> 01:03:04,180\nSo I do need to restore\na backup to the other server.\n\n1266\n01:03:04,180 --> 01:03:05,330\nSo, here's what I'm gonna do.\n\n1267\n01:03:05,330 --> 01:03:09,290\nI'm gonna take my human resources\ndatabase, and I'm gonna back it up.\n\n1268\n01:03:09,290 --> 01:03:12,370\nSo I'll just right click on it and\ngo to Tasks and Backup.\n\n1269\n01:03:14,260 --> 01:03:17,270\nAnd, I'll do a full backup.\n\n1270\n01:03:17,270 --> 01:03:19,410\nSo, I'm backing up the whole database.\n\n1271\n01:03:19,410 --> 01:03:23,890\nAnd I'm gonna send it to the other server.\n\n1272\n01:03:23,890 --> 01:03:27,230\nSo, down here for the destination,\nactually I've already got it plugged in.\n\n1273\n01:03:27,230 --> 01:03:29,060\nFor the destination, if you don't have it.\n\n1274\n01:03:29,060 --> 01:03:30,660\nLet me start this one from scratch here.\n\n1275\n01:03:30,660 --> 01:03:31,760\nI'll just remove that.\n\n1276\n01:03:31,760 --> 01:03:32,450\nAll right.\n\n1277\n01:03:32,450 --> 01:03:36,630\nFor the destination, you want to\npick somewhere on the other server.\n\n1278\n01:03:36,630 --> 01:03:39,770\nIf you've got network connectivity you can\ndo that, or you can back it up to a thumb\n\n1279\n01:03:39,770 --> 01:03:42,200\ndrive, so you can quickly\ntake it to the other server.\n\n1280\n01:03:42,200 --> 01:03:44,180\nBut I'm going to back it up to a file, and\n\n1281\n01:03:44,180 --> 01:03:47,420\nthe file that I'm going to back it up to\nis just going to be on the other server.\n\n1282\n01:03:47,420 --> 01:03:49,366\nSo I'll back up right to its C drive.\n\n1283\n01:03:51,636 --> 01:03:53,410\nAll right,\nactually I'll call it mirror.back.\n\n1284\n01:03:53,410 --> 01:03:54,770\nJust make sure I got a nice clean file.\n\n1285\n01:03:54,770 --> 01:03:59,174\nAll right, so that's where I'm gonna back\nup the database to to send it along.\n\n1286\n01:04:01,913 --> 01:04:03,910\nAnd it's a full backup.\n\n1287\n01:04:03,910 --> 01:04:04,520\nAnd we'll let that run.\n\n1288\n01:04:04,520 --> 01:04:06,770\nAll right, shouldn't take long.\n\n1289\n01:04:06,770 --> 01:04:08,740\nMy database it just has one table in it.\n\n1290\n01:04:08,740 --> 01:04:12,125\nNot a huge amount of data so\nit'll do that backup.\n\n1291\n01:04:12,125 --> 01:04:12,925\nAll right,\n\n1292\n01:04:12,925 --> 01:04:18,208\nnow that it's backed up on that server I\nneed to restore it on the other server.\n\n1293\n01:04:18,208 --> 01:04:22,147\nAnd here's the tricky part Remember\nfrom the backup and restore episode, or\n\n1294\n01:04:22,147 --> 01:04:26,145\nmaybe you haven't watched that one yet,\nwhen we do a restore you might restore\n\n1295\n01:04:26,145 --> 01:04:29,950\nyour full backup and\nthen some transaction log backups, right?\n\n1296\n01:04:29,950 --> 01:04:32,517\nAnd if you've got more backups to restore\n\n1297\n01:04:32,517 --> 01:04:36,708\nyou have to leave the database open\nto allow more restores to occur.\n\n1298\n01:04:36,708 --> 01:04:39,181\nWell, the mirroring process\nis constantly restoring,\n\n1299\n01:04:39,181 --> 01:04:42,970\nit's constantly restoring backups\ntaken from the production environment.\n\n1300\n01:04:42,970 --> 01:04:46,790\nSo I need to leave that database\nopen when I restore it.\n\n1301\n01:04:46,790 --> 01:04:49,480\nSo this is not gonna be a normal restore,\nright?\n\n1302\n01:04:49,480 --> 01:04:54,160\nSo I'm gonna go to WinSQL 2 and\nI'm gonna choose to restore\n\n1303\n01:04:54,160 --> 01:04:59,390\na database and\nI'm gonna tell to restore from a device.\n\n1304\n01:04:59,390 --> 01:05:01,200\nI need to browse and pick that file.\n\n1305\n01:05:02,820 --> 01:05:05,650\nSo I'm gonna browse to it's C drive and\n\n1306\n01:05:05,650 --> 01:05:08,000\nI'll pick that Mirror.backfile\nthat I just made.\n\n1307\n01:05:08,000 --> 01:05:12,880\nAll right, so there's the Human Resources\ndatabase that it's gonna restore.\n\n1308\n01:05:12,880 --> 01:05:15,840\nNow if I just hit okay, or whatever, and\n\n1309\n01:05:15,840 --> 01:05:18,220\ntold it to restore,\nI would have a problem.\n\n1310\n01:05:18,220 --> 01:05:21,930\nMy problem would be, it's gonna\nrestore it and bring it online, and\n\n1311\n01:05:21,930 --> 01:05:23,550\nthat's not what I want.\n\n1312\n01:05:23,550 --> 01:05:29,040\nInstead, what I wanna do,\nis I wanna tell it to, under options,\n\n1313\n01:05:29,040 --> 01:05:32,070\nrestore with no recovery.\n\n1314\n01:05:32,070 --> 01:05:35,930\nI don't want it to restore with recovery\ncuz that'll bring it online and\n\n1315\n01:05:35,930 --> 01:05:38,190\nclose it off, not allowing more restores.\n\n1316\n01:05:38,190 --> 01:05:43,040\nIf I say restore with no recovery,\nit'll leave the database offline and\n\n1317\n01:05:43,040 --> 01:05:47,390\nallow mirroring to\ncontinue to apply updates.\n\n1318\n01:05:47,390 --> 01:05:50,900\nAlright, and you know what,\nI'm getting that problem again,\n\n1319\n01:05:50,900 --> 01:05:53,350\nwhere I'm not getting my\nOK button on the screen.\n\n1320\n01:05:53,350 --> 01:05:55,950\nMy resolution seems to\ncut that off sometimes.\n\n1321\n01:05:55,950 --> 01:05:58,209\nI'll just do it as the script,\nI'm gonna hit the script button up here.\n\n1322\n01:05:59,990 --> 01:06:01,114\nAnd we'll run it that way.\n\n1323\n01:06:05,523 --> 01:06:06,210\nAll right.\n\n1324\n01:06:06,210 --> 01:06:09,160\nSo notice what it's doing, it's saying\nrestore the human resources database.\n\n1325\n01:06:09,160 --> 01:06:14,270\nIt's telling it where to get the file,\nand it's doing the no recovery option.\n\n1326\n01:06:14,270 --> 01:06:16,330\nThat's the important part,\nwe gotta make sure we've got that.\n\n1327\n01:06:17,400 --> 01:06:19,580\nAll right, just let me run that.\n\n1328\n01:06:19,580 --> 01:06:22,390\nSo it just ran that restore,\nand if I look over here,\n\n1329\n01:06:22,390 --> 01:06:24,320\nI should now have that database.\n\n1330\n01:06:24,320 --> 01:06:26,690\nIt might not show up right away,\nyou have to refresh it.\n\n1331\n01:06:26,690 --> 01:06:29,780\nSo I'll just right-click and\nchoose Refresh, and there it is.\n\n1332\n01:06:29,780 --> 01:06:32,010\nAnd this is exactly what we wanna see.\n\n1333\n01:06:32,010 --> 01:06:38,450\nWe wanna see our database with a little\ngreen up arrow on it, saying, restoring.\n\n1334\n01:06:38,450 --> 01:06:40,910\nWhen we did the restore,\nI didn't close it off.\n\n1335\n01:06:40,910 --> 01:06:42,840\nI didn't use the width recovery option.\n\n1336\n01:06:42,840 --> 01:06:47,330\nSo it's sitting there waiting for\nmore restores to happen, really important.\n\n1337\n01:06:47,330 --> 01:06:50,680\nIf you don't do that,\nthe whole mirror fails, right?\n\n1338\n01:06:50,680 --> 01:06:54,550\nBut now that that's done,\nI can go ahead an turn the mirror on and\n\n1339\n01:06:54,550 --> 01:06:56,060\nnow it will work all right.\n\n1340\n01:06:56,060 --> 01:07:01,220\nSo let me go back up to sequel 01 and\nI'm gonna redo that mirror process.\n\n1341\n01:07:01,220 --> 01:07:05,680\nI'll just right click on it and\ngo to tasks and mirror and\n\n1342\n01:07:05,680 --> 01:07:06,990\nI'll hit configure security.\n\n1343\n01:07:09,340 --> 01:07:11,330\nAnd most of these values\nshould be filled in for me so\n\n1344\n01:07:11,330 --> 01:07:12,562\nI'm really just gonna be\nclicking next a bunch.\n\n1345\n01:07:12,562 --> 01:07:14,349\nI'm gonna say no to\nthe witness server again.\n\n1346\n01:07:15,590 --> 01:07:20,960\nIt's already got my end point and\nI'll need to connect to server two.\n\n1347\n01:07:20,960 --> 01:07:25,020\nIt's got it's end point and\nmy user account so\n\n1348\n01:07:25,020 --> 01:07:26,860\nI'll punch in my SQL\nservice account again.\n\n1349\n01:07:28,670 --> 01:07:30,870\nOops, which if I spell it right,\nit will work better.\n\n1350\n01:07:33,040 --> 01:07:37,650\nThere we go, this time when it finishes,\nit will ask me if i wanna start\n\n1351\n01:07:37,650 --> 01:07:42,520\nmirroring and i can go ahead and\nhit start mirroring and it should work.\n\n1352\n01:07:42,520 --> 01:07:44,040\nOh but it didn't whats its problem?\n\n1353\n01:07:45,210 --> 01:07:48,190\nThe mirror database has\ninsufficient transaction log data,\n\n1354\n01:07:48,190 --> 01:07:50,130\nto preserve i've seen this.\n\n1355\n01:07:50,130 --> 01:07:53,550\nAll right so this is a weird error.\n\n1356\n01:07:53,550 --> 01:07:56,380\nAccording to Microsoft's documentation,\nthis never happens, but\n\n1357\n01:07:56,380 --> 01:07:58,980\nI've seen this error more than once.\n\n1358\n01:07:58,980 --> 01:08:01,560\nI restored a full backup\nto the other side.\n\n1359\n01:08:01,560 --> 01:08:04,920\nFor whatever reason, it doesn't\nseem to like that sometimes, and\n\n1360\n01:08:04,920 --> 01:08:09,070\nwhat it really wants you to do\nis to restore a full backup and\n\n1361\n01:08:09,070 --> 01:08:13,670\nat least one transaction log backup to\nkinda get it into transaction mode.\n\n1362\n01:08:13,670 --> 01:08:16,590\nSo, it's not happy about mine right now.\n\n1363\n01:08:16,590 --> 01:08:19,070\nI'm going to leave that screen right now,\ncome right back to it and\n\n1364\n01:08:19,070 --> 01:08:20,590\nhit start mirroring in a minute.\n\n1365\n01:08:20,590 --> 01:08:25,245\nBut what I'm gonna do, is I'm gonna take\nanother backup of human resources and\n\n1366\n01:08:25,245 --> 01:08:27,700\nI'm gonna go to backup, and\n\n1367\n01:08:27,700 --> 01:08:31,400\nthis time I'm gonna do\na transaction log backup, alright?\n\n1368\n01:08:31,400 --> 01:08:33,914\nSo I'm going to do\na transaction log backup and\n\n1369\n01:08:33,914 --> 01:08:36,435\nI will Send that to\na different file this time.\n\n1370\n01:08:38,903 --> 01:08:42,969\nSo I'm just gonna point to that\nC drive of the other server, and\n\n1371\n01:08:42,969 --> 01:08:45,240\nI'll call this one trans.back.\n\n1372\n01:08:45,240 --> 01:08:48,580\nNow there haven't been any transactions\non this database that I've made, but\n\n1373\n01:08:48,580 --> 01:08:49,400\nit doesn't matter.\n\n1374\n01:08:49,400 --> 01:08:51,890\nIt just seems to want you to do\none transaction, one backup.\n\n1375\n01:08:51,890 --> 01:08:53,710\nSo that's what I'm gonna do right here.\n\n1376\n01:08:53,710 --> 01:08:57,260\nI could've done it at the same time, did a\nfull backup, immediately turned around and\n\n1377\n01:08:57,260 --> 01:08:58,720\ndid a transaction log backup.\n\n1378\n01:08:58,720 --> 01:09:00,640\nBut you shouldn't have to,\nbut I'll do it here.\n\n1379\n01:09:02,082 --> 01:09:06,140\nAll right, now also remember, if you don't\nsee the transaction log backup option,\n\n1380\n01:09:06,140 --> 01:09:09,160\nif it's not showing up, that means\nyou're not in the full recovery model.\n\n1381\n01:09:09,160 --> 01:09:12,110\nIf you're in the simple recovery model,\ndatabase mirroring doesn't work.\n\n1382\n01:09:12,110 --> 01:09:13,580\nYou've got to be in\nthe full recovery model.\n\n1383\n01:09:14,860 --> 01:09:17,810\nAlright, so now I'm going to go back\ndown to this other database, and\n\n1384\n01:09:17,810 --> 01:09:19,140\nI'll go to restore.\n\n1385\n01:09:21,200 --> 01:09:23,150\nAnd option is not showing up.\n\n1386\n01:09:24,320 --> 01:09:25,380\nYeah, we'll go up here.\n\n1387\n01:09:25,380 --> 01:09:29,653\nI'll go to restore, and I'm gonna tell\nit the device that I'm restoring from.\n\n1388\n01:09:35,190 --> 01:09:37,610\nSo, there's that trans.back\nfile that I had.\n\n1389\n01:09:39,780 --> 01:09:41,020\nAnd oh shoot.\n\n1390\n01:09:41,020 --> 01:09:42,560\nAll right, let me restart this.\n\n1391\n01:09:42,560 --> 01:09:46,760\nSo, it's a little upset that I've kind of\nbrought the database up to one point and\n\n1392\n01:09:46,760 --> 01:09:48,910\nthen took the transaction\nlog back up after the fact.\n\n1393\n01:09:48,910 --> 01:09:50,340\nSo, I'm gonna start that one over again.\n\n1394\n01:09:50,340 --> 01:09:51,750\nLet me just redo my backups.\n\n1395\n01:09:52,750 --> 01:09:55,080\nSo, I'm gonna take a new backup and\n\n1396\n01:09:55,080 --> 01:09:57,070\nI'll just back these up into\na new file all together.\n\n1397\n01:09:57,070 --> 01:09:58,180\nThat'll get it happy.\n\n1398\n01:09:58,180 --> 01:10:00,608\nIt's just really finicky about this.\n\n1399\n01:10:00,608 --> 01:10:04,320\nSo I'm gonna do a full back up and\nlet me just start that file over again.\n\n1400\n01:10:06,360 --> 01:10:12,720\nSo I'm backing up to my other server and\nI'll just call this my new backup.bak.\n\n1401\n01:10:12,720 --> 01:10:17,770\nSo, there's my new back up, it's a full\nback up so I'm just gonna run that.\n\n1402\n01:10:17,770 --> 01:10:22,770\nAll right, and then I'm gonna turn\nright around and run another backup.\n\n1403\n01:10:25,070 --> 01:10:27,460\nBut this time I'm gonna do\na transaction log backup.\n\n1404\n01:10:27,460 --> 01:10:28,820\nAlright, so\nhere's a transaction log backup.\n\n1405\n01:10:28,820 --> 01:10:30,200\nI'm gonna back up to the same file,\n\n1406\n01:10:30,200 --> 01:10:34,570\nso the full transaction log will be right\nthere in the same file, and I'll say okay.\n\n1407\n01:10:35,980 --> 01:10:37,960\nAlright, now on the other side,\n\n1408\n01:10:37,960 --> 01:10:41,870\non WinSQL 02 I'm just gonna,\nI'll just wipe out this whole database.\n\n1409\n01:10:41,870 --> 01:10:45,170\nLet me just delete that, there we go.\n\n1410\n01:10:45,170 --> 01:10:47,564\nSo I just wiped out the database,\nand now I'm gonna restore it.\n\n1411\n01:10:50,317 --> 01:10:51,560\nSo I'm gonna restore it.\n\n1412\n01:10:51,560 --> 01:10:52,460\nLet me go to the device.\n\n1413\n01:10:52,460 --> 01:10:59,090\nSo I'm gonna browse and pick that file,\nnewbackup.back Alright.\n\n1414\n01:10:59,090 --> 01:11:01,670\nnow it's gonna see the full and\nthe transactional log backup.\n\n1415\n01:11:01,670 --> 01:11:05,010\nSee how they both show up there,\nso that's good and under options,\n\n1416\n01:11:05,010 --> 01:11:08,130\nI'll tell it to restore with no recovery.\n\n1417\n01:11:08,130 --> 01:11:10,515\nAnd I will not have an okay button.\n\n1418\n01:11:10,515 --> 01:11:12,470\n[LAUGHS] Alright.\n\n1419\n01:11:12,470 --> 01:11:13,460\nWell we'll do the script again.\n\n1420\n01:11:14,600 --> 01:11:16,680\nLet's see how many different\nproblems I can have in this.\n\n1421\n01:11:16,680 --> 01:11:18,850\nAll right, so here it's doing\nthat backup and restore, and\n\n1422\n01:11:18,850 --> 01:11:21,970\nnotice how both of\nthe restores are NORECOVERY.\n\n1423\n01:11:21,970 --> 01:11:23,900\nThat's exactly what I want.\n\n1424\n01:11:23,900 --> 01:11:24,860\nI'll run that.\n\n1425\n01:11:24,860 --> 01:11:28,070\nSo I'm gonna end up with\na database that will be\n\n1426\n01:11:28,070 --> 01:11:30,590\nonline except not accessible to users.\n\n1427\n01:11:30,590 --> 01:11:35,240\nIt's still showing it's restoring and\nI've restored one full backup and\n\n1428\n01:11:35,240 --> 01:11:38,590\none transaction log backup,\nso now it should be happy.\n\n1429\n01:11:38,590 --> 01:11:41,310\nIf I go back up here\nto my human resources,\n\n1430\n01:11:41,310 --> 01:11:44,370\nI should be able to start\nthe mirroring now, and it'll be happy.\n\n1431\n01:11:44,370 --> 01:11:50,310\nSo I'm just gonna go back here to\nstart mirroring and there it goes.\n\n1432\n01:11:50,310 --> 01:11:52,440\nLike I said, it's something that you\nreally shouldn't have to do, but\n\n1433\n01:11:52,440 --> 01:11:56,450\nI've seen that before where if you\ndon't restore at least transaction log,\n\n1434\n01:11:56,450 --> 01:11:59,580\nthe transactional end files just don't\nexist yet and so it gets ticked off and\n\n1435\n01:11:59,580 --> 01:12:01,610\nit doesn't start which\nis what happened to me.\n\n1436\n01:12:01,610 --> 01:12:05,540\nBut by restoring one transaction along\nfile, that creates the missing files and\n\n1437\n01:12:05,540 --> 01:12:08,650\nit gets it happy and\nthen it runs so there it is.\n\n1438\n01:12:08,650 --> 01:12:10,650\nNow, I'm mirroring.\n\n1439\n01:12:10,650 --> 01:12:12,900\nIt's running,\nit's mirroring that database.\n\n1440\n01:12:12,900 --> 01:12:17,613\nAny change that happens on SQL01 is\ngonna get replicated to SQL02 and\n\n1441\n01:12:17,613 --> 01:12:20,250\nnotice how the database names changed.\n\n1442\n01:12:20,250 --> 01:12:22,963\nIf I look at it here, on WIN SQL01,\n\n1443\n01:12:22,963 --> 01:12:27,001\nit shows HumanResources Principal,\nSynchronized.\n\n1444\n01:12:27,001 --> 01:12:27,542\nAll right.\n\n1445\n01:12:27,542 --> 01:12:30,910\nAnd if I look on SQL02,\nlet me just refresh this one.\n\n1446\n01:12:30,910 --> 01:12:32,417\nThis one will have changed also.\n\n1447\n01:12:32,417 --> 01:12:37,329\nIt shows HumanResources Mirror,\nSynchronized/Restoring.\n\n1448\n01:12:37,329 --> 01:12:38,250\nAll right.\n\n1449\n01:12:38,250 --> 01:12:42,520\nThat means that it is synchronized\nright now, it's up and synchronized but\n\n1450\n01:12:42,520 --> 01:12:44,490\nit's also still in the restoring state.\n\n1451\n01:12:44,490 --> 01:12:46,640\nIt's not available for\nusers to connect to.\n\n1452\n01:12:46,640 --> 01:12:48,760\nAll right, so it's there and it's happy.\n\n1453\n01:12:48,760 --> 01:12:52,804\nAnd if I go and\nstart making changes up here, so\n\n1454\n01:12:52,804 --> 01:12:58,430\nif i go into my human resources table and\nI'll, edit the table.\n\n1455\n01:13:00,570 --> 01:13:02,560\nSo here's my human resources information.\n\n1456\n01:13:02,560 --> 01:13:04,263\nAnd maybe this person\nhad a new phone number.\n\n1457\n01:13:04,263 --> 01:13:07,280\nRight?\nSo Indigo Saunders got a new phone number,\n\n1458\n01:13:08,660 --> 01:13:10,460\nand maybe they work for us now.\n\n1459\n01:13:10,460 --> 01:13:11,680\nSo we'll put in our office number.\n\n1460\n01:13:14,760 --> 01:13:15,310\nThere we go.\n\n1461\n01:13:16,950 --> 01:13:20,910\nSo there we go we got them, it's punched\nin, it's showing my cell is modified,\n\n1462\n01:13:20,910 --> 01:13:22,230\nI'm gonna hit Save.\n\n1463\n01:13:22,230 --> 01:13:25,640\nApparently it's not going to let me save,\nwhat's up with that?\n\n1464\n01:13:32,100 --> 01:13:34,024\nAll right well, [LAUGH].\n\n1465\n01:13:35,400 --> 01:13:36,579\nThere we go, all right.\n\n1466\n01:13:36,579 --> 01:13:39,360\nSo, [LAUGH] it wasn't letting me save it.\n\n1467\n01:13:39,360 --> 01:13:42,820\nThere's a little execute button right here\nyou can hit that forces it to save it, so\n\n1468\n01:13:42,820 --> 01:13:44,760\nthat's what I did and\nit just saved it down.\n\n1469\n01:13:44,760 --> 01:13:46,470\nSo, I made that change to the database.\n\n1470\n01:13:46,470 --> 01:13:49,690\nI want to verify that change went in there\nsince it gave me a little trouble with it.\n\n1471\n01:13:49,690 --> 01:13:52,570\nSo I'm just gonna do\na select top 1000 rows and\n\n1472\n01:13:52,570 --> 01:13:56,060\nmake sure that Indigo Sanders\ndoes have the new phone number.\n\n1473\n01:13:56,060 --> 01:14:01,630\nSo, when I put that new phone number in\nI wrote to the transaction log on SQL01,\n\n1474\n01:14:01,630 --> 01:14:06,070\nand when it was 100% written it\nthen wrote it to the database.\n\n1475\n01:14:06,070 --> 01:14:08,260\nAnd when it wrote it to\nthe database it turned around and\n\n1476\n01:14:08,260 --> 01:14:11,760\nsent that over to the other server and\nsaid, write it there too.\n\n1477\n01:14:11,760 --> 01:14:12,320\nOkay?\n\n1478\n01:14:12,320 --> 01:14:13,730\nAnd so\nit wrote it on the other server, and\n\n1479\n01:14:13,730 --> 01:14:15,522\nnow the other server has\nthis new phone number.\n\n1480\n01:14:15,522 --> 01:14:16,680\nAll right.\n\n1481\n01:14:16,680 --> 01:14:21,040\nNow, there are a few little\noptions we can tweak on that.\n\n1482\n01:14:21,040 --> 01:14:26,420\nIf we go into our mirror options, notice\nthese two right here, the operating mode.\n\n1483\n01:14:26,420 --> 01:14:27,180\nThis is important.\n\n1484\n01:14:28,290 --> 01:14:30,630\nThere are two operating modes for\nthe mirror.\n\n1485\n01:14:30,630 --> 01:14:33,852\nThe first one is High Performance and\nthe second one is High Safety.\n\n1486\n01:14:33,852 --> 01:14:35,230\nAll right.\n\n1487\n01:14:35,230 --> 01:14:38,350\nIt depends on what you're looking for,\nwhich one you pick.\n\n1488\n01:14:38,350 --> 01:14:42,140\nHigh performance,\nsays when I make a change on server one,\n\n1489\n01:14:42,140 --> 01:14:45,950\nmake the change right now, and\nsend the change to server two.\n\n1490\n01:14:45,950 --> 01:14:47,310\nIt can make it when it gets to it.\n\n1491\n01:14:47,310 --> 01:14:48,220\nAll right.\n\n1492\n01:14:48,220 --> 01:14:52,580\nIf server two is in a remote\ngeographic location,\n\n1493\n01:14:52,580 --> 01:14:54,580\nI probably want to\nchoose high performance.\n\n1494\n01:14:54,580 --> 01:14:59,100\nThat way, I make my change right away, and\nI send the other change to server two and\n\n1495\n01:14:59,100 --> 01:15:00,590\nit gets to it when it can.\n\n1496\n01:15:00,590 --> 01:15:01,570\nAll right.\n\n1497\n01:15:01,570 --> 01:15:07,220\nBut if both servers are sitting right next\nto each other I can choose high safety.\n\n1498\n01:15:07,220 --> 01:15:10,360\nWith high safety we receive the change and\n\n1499\n01:15:10,360 --> 01:15:14,170\nwe make the change on server one and\nserver two at the same time.\n\n1500\n01:15:14,170 --> 01:15:15,140\nAll right?\n\n1501\n01:15:15,140 --> 01:15:16,270\nIt's done in tandem.\n\n1502\n01:15:16,270 --> 01:15:19,160\nSee it's synchronous,\ndone at the same time.\n\n1503\n01:15:19,160 --> 01:15:23,270\nIf one server is taking a long time\nthen they both take a long time.\n\n1504\n01:15:23,270 --> 01:15:24,190\nThey both wait.\n\n1505\n01:15:24,190 --> 01:15:26,590\nThey both wait for each other to say,\nyes, I got the change,\n\n1506\n01:15:26,590 --> 01:15:29,510\nit's is in there before we\ntell the user it's done.\n\n1507\n01:15:29,510 --> 01:15:32,310\nSo if server two is in\na remote geographic location,\n\n1508\n01:15:32,310 --> 01:15:35,210\nchoosing high safety will cause\nyour queries to slow down.\n\n1509\n01:15:35,210 --> 01:15:35,910\nRight?\nIt'll\n\n1510\n01:15:35,910 --> 01:15:38,060\ntake longer to put data in the database.\n\n1511\n01:15:38,060 --> 01:15:40,820\nBecause both locations have\nto be in full agreement.\n\n1512\n01:15:40,820 --> 01:15:41,330\nRight?\n\n1513\n01:15:41,330 --> 01:15:44,910\nBut if the servers are right next to\neach other you can go high safety and\n\n1514\n01:15:44,910 --> 01:15:46,560\nthey run in what's called Lock Step.\n\n1515\n01:15:46,560 --> 01:15:48,340\nYou might see that\nterminology on the exam.\n\n1516\n01:15:48,340 --> 01:15:51,650\nLock Step means a change on one\nhas already happened on the other,\n\n1517\n01:15:51,650 --> 01:15:57,520\nyou are guaranteed to have two identical\ndatabases if you're in high safety mode.\n\n1518\n01:15:57,520 --> 01:16:02,160\nIf you're in high performance mode, your\ndatabases will be very close to identical.\n\n1519\n01:16:02,160 --> 01:16:05,410\nYour production one will have the latest\ndata, but your remote one, or\n\n1520\n01:16:05,410 --> 01:16:07,660\nmaybe it will be right next to it,\nit may be a little bit behind.\n\n1521\n01:16:07,660 --> 01:16:09,560\nJust because it's taking\nlonger to process,\n\n1522\n01:16:09,560 --> 01:16:12,940\nit's further away on the network,\nbandwidth constriction, who knows what.\n\n1523\n01:16:12,940 --> 01:16:13,510\nRight?\n\n1524\n01:16:13,510 --> 01:16:16,030\nSo it's up to you what\nyou're trying to achieve,\n\n1525\n01:16:16,030 --> 01:16:17,890\nHigh Performance versus High Safety.\n\n1526\n01:16:17,890 --> 01:16:20,730\nMost people want high safety and\nthat's the mode that I'm in.\n\n1527\n01:16:20,730 --> 01:16:24,270\nSo in my mode when I made\nthat phone number change,\n\n1528\n01:16:24,270 --> 01:16:26,270\nit applied to both servers and\n\n1529\n01:16:26,270 --> 01:16:29,370\nit's already there, I don't have to force\nit to synchronize, it's already done.\n\n1530\n01:16:29,370 --> 01:16:31,060\nBoth servers have that new phone number.\n\n1531\n01:16:32,440 --> 01:16:33,150\nAll right.\n\n1532\n01:16:33,150 --> 01:16:38,720\nNow as far as fail over, if this\ndatabase were to fail on server one,\n\n1533\n01:16:38,720 --> 01:16:40,710\nserver two will automatically kick in.\n\n1534\n01:16:40,710 --> 01:16:43,980\nServer two will automatically\ngo active and be available and\n\n1535\n01:16:43,980 --> 01:16:47,600\nanybody running the SQL native client\nwill automatically move over to it.\n\n1536\n01:16:47,600 --> 01:16:49,880\nIt's seamless, it's as good as a cluster.\n\n1537\n01:16:49,880 --> 01:16:51,830\nAll right.\nBut without all the hardware behind it,\n\n1538\n01:16:51,830 --> 01:16:53,000\nthe shared storage and all that.\n\n1539\n01:16:53,000 --> 01:16:54,790\nSo, it's really awesome.\n\n1540\n01:16:54,790 --> 01:16:59,520\nBut, if you're not running the SQL\nnative client, then you've gotta go and\n\n1541\n01:16:59,520 --> 01:17:01,870\nredirect your people to\nconnect to this other server.\n\n1542\n01:17:01,870 --> 01:17:02,470\nRight?\n\n1543\n01:17:02,470 --> 01:17:04,630\nSo, as far as failover,\nwe don't have to do anything.\n\n1544\n01:17:04,630 --> 01:17:07,150\nSo everyone fails,\nit'll automatically failover.\n\n1545\n01:17:07,150 --> 01:17:09,480\nBut you can force it,\nif you're trying to do maintenance or\n\n1546\n01:17:09,480 --> 01:17:12,550\nwhatever, you can\nright-click on the database.\n\n1547\n01:17:12,550 --> 01:17:14,240\nAnd you can go in there,\nand you can tell it.\n\n1548\n01:17:14,240 --> 01:17:16,335\nIf you go to tasks and mirror.\n\n1549\n01:17:18,355 --> 01:17:21,570\nUnder mirroring, you've got a button\nright here that says, Failover.\n\n1550\n01:17:21,570 --> 01:17:25,300\nAnd if you hit Failover, it'll tell\nserver two to go ahead and take over.\n\n1551\n01:17:25,300 --> 01:17:26,540\nAnd it's giving me a warning, right here,\n\n1552\n01:17:26,540 --> 01:17:28,760\njust letting me know\nthat it's gonna failover.\n\n1553\n01:17:28,760 --> 01:17:32,510\nIf we've just modified anything, it's\ngonna try and synchronize those changes.\n\n1554\n01:17:32,510 --> 01:17:35,390\nSince I'm in high safety mode,\nthere really won't be anything there.\n\n1555\n01:17:35,390 --> 01:17:37,290\nLet me go ahead and say yes.\n\n1556\n01:17:37,290 --> 01:17:39,171\nAnd it's gonna do the fail over for me.\n\n1557\n01:17:39,171 --> 01:17:39,710\nAll right.\n\n1558\n01:17:39,710 --> 01:17:41,440\nSo it'll move that over.\n\n1559\n01:17:41,440 --> 01:17:46,230\nAnd what we'll see is that this one,\nit says principal synchronized.\n\n1560\n01:17:46,230 --> 01:17:51,780\nAnd the other one says\nmirror synchronized/restore.\n\n1561\n01:17:51,780 --> 01:17:53,110\nThat's all about to change.\n\n1562\n01:17:53,110 --> 01:17:53,720\nRight?\n\n1563\n01:17:53,720 --> 01:17:57,390\nIf I refresh that,\nif I can actually click on refresh.\n\n1564\n01:17:57,390 --> 01:18:00,190\nSee how this one says\nprintable synchronized.\n\n1565\n01:18:00,190 --> 01:18:01,845\nAnd if I go up here and refresh this one.\n\n1566\n01:18:04,565 --> 01:18:05,300\nJust refresh it.\n\n1567\n01:18:06,520 --> 01:18:08,110\nI get a fail to connect.\n\n1568\n01:18:08,110 --> 01:18:10,990\nRight?.\nLet me refresh on the server itself.\n\n1569\n01:18:10,990 --> 01:18:12,670\nIf I try and refresh there, there we go.\n\n1570\n01:18:12,670 --> 01:18:15,440\nNow it says Mirror_Synchronized/Restoring.\n\n1571\n01:18:15,440 --> 01:18:17,150\nIt's flipped the roles around.\n\n1572\n01:18:17,150 --> 01:18:18,860\nSo the other one is primary.\n\n1573\n01:18:18,860 --> 01:18:20,460\nThis one is now the mirror.\n\n1574\n01:18:20,460 --> 01:18:22,580\nSo now I can do whatever\nI need to on this server.\n\n1575\n01:18:22,580 --> 01:18:23,930\nDo my maintenance, things like that.\n\n1576\n01:18:23,930 --> 01:18:25,690\nBring it up, let it get caught back up.\n\n1577\n01:18:25,690 --> 01:18:27,870\nAnd when it's caught back up,\nthen we can flip it again.\n\n1578\n01:18:27,870 --> 01:18:29,910\nRight?\nSo, pretty neat stuff.\n\n1579\n01:18:29,910 --> 01:18:33,680\nThis works out really well if you're\ntrying to get cluster-like support\n\n1580\n01:18:33,680 --> 01:18:34,950\nwithout the cluster hardware.\n\n1581\n01:18:34,950 --> 01:18:35,700\nAll right?\n\n1582\n01:18:35,700 --> 01:18:38,280\nOn a cluster, you have shared storage, so\n\n1583\n01:18:38,280 --> 01:18:41,610\nif you have a database that's five\nterabytes in size, it's only shared once.\n\n1584\n01:18:41,610 --> 01:18:43,030\nIt's on the shared storage.\n\n1585\n01:18:43,030 --> 01:18:47,600\nWith a mirror, you would have that\nfive terabyte database on server one,\n\n1586\n01:18:47,600 --> 01:18:50,910\nand you'd have that five\nterabyte database on server two.\n\n1587\n01:18:50,910 --> 01:18:54,510\nSo there's a bigger storage\nhit with mirroring.\n\n1588\n01:18:54,510 --> 01:18:59,210\nBut you don't need shared storage, and it\ncan be in multiple geographical locations.\n\n1589\n01:18:59,210 --> 01:19:00,950\nSo you get a lot of power with it.\n\n1590\n01:19:00,950 --> 01:19:04,690\nA lot of people choose to\ndo mirrors over clusters.\n\n1591\n01:19:04,690 --> 01:19:06,965\nIf you're using the SQL native client,\nit's just as good.\n\n1592\n01:19:06,965 --> 01:19:08,990\nRight?\nIf you're using ODBC though,\n\n1593\n01:19:08,990 --> 01:19:11,640\nthe cluster gives you\na little bit better failover.\n\n1594\n01:19:11,640 --> 01:19:12,450\nAll right.\n\n1595\n01:19:12,450 --> 01:19:14,100\nSo, that's mirroring.\n\n1596\n01:19:14,100 --> 01:19:17,320\nThere's still one more I wanna talk\nabout which is Transaction Log Shipping.\n\n1597\n01:19:17,320 --> 01:19:19,770\nSo that's the one we're going\nto take a look at next, but for\n\n1598\n01:19:19,770 --> 01:19:21,520\nright now let's stop and take a break.\n\n1599\n01:19:21,520 --> 01:19:26,260\nAnd when we get back, we'll get a chance\nto see transaction log shipping.\n\n1600\n01:19:26,260 --> 01:19:32,700\n[MUSIC]\n\n1601\n01:19:32,700 --> 01:19:34,880\nAll right, welcome back everybody.\n\n1602\n01:19:34,880 --> 01:19:37,880\nSo, what we're gonna take a look\nat now is a technology called\n\n1603\n01:19:37,880 --> 01:19:40,020\nTransaction Log Shipping.\n\n1604\n01:19:40,020 --> 01:19:43,365\nTransactional Log Shipping is\nreally Similar to mirroring.\n\n1605\n01:19:43,365 --> 01:19:44,975\nThere's a few subtle differences to it.\n\n1606\n01:19:44,975 --> 01:19:47,277\nFirst off, it does work using\ntransactional log backups,\n\n1607\n01:19:47,277 --> 01:19:48,344\njust like mirroring does.\n\n1608\n01:19:48,344 --> 01:19:49,805\nAll right?\n\n1609\n01:19:49,805 --> 01:19:54,635\nBut, instead of doing it in real time,\nit does it at intervals that we choose.\n\n1610\n01:19:54,635 --> 01:19:57,745\nThe default I believe, we'll see it in\nthe wizard, but I believe it's 15 minutes.\n\n1611\n01:19:57,745 --> 01:20:01,650\nSo every 15 minutes, it's taking\na transaction log backup of your database\n\n1612\n01:20:01,650 --> 01:20:04,500\nand sending the transaction\nto a remote location or\n\n1613\n01:20:04,500 --> 01:20:07,770\nto a second server,\nwhere the updates are applied.\n\n1614\n01:20:07,770 --> 01:20:11,150\nThat means that you have a certain\namount of latency between the systems.\n\n1615\n01:20:11,150 --> 01:20:13,340\nWith mirroring, I can go and lock step.\n\n1616\n01:20:13,340 --> 01:20:13,958\nRight?\n\n1617\n01:20:13,958 --> 01:20:16,480\nBut with transaction log\nshipping you really can't.\n\n1618\n01:20:16,480 --> 01:20:20,083\nThe servers are never identical\nunless they're sitting there idle.\n\n1619\n01:20:20,083 --> 01:20:21,459\nAs long as there's changes happening,\n\n1620\n01:20:21,459 --> 01:20:23,042\none's usually a little\nbit behind the other.\n\n1621\n01:20:23,042 --> 01:20:24,500\nNow, that sounds bad.\n\n1622\n01:20:24,500 --> 01:20:27,167\nWhy would I choose transaction\nlog shipping over mirroring?\n\n1623\n01:20:27,167 --> 01:20:30,341\nWell, you get a few advantages\nwith transaction log shipping,\n\n1624\n01:20:30,341 --> 01:20:33,800\nthe biggest being you can\nhave more than one endpoint.\n\n1625\n01:20:33,800 --> 01:20:37,025\nSo, you can replicate your database not\njust to one location, but five, ten,\n\n1626\n01:20:37,025 --> 01:20:38,500\n50 locations.\n\n1627\n01:20:38,500 --> 01:20:41,760\nSo, you can have it in several\ndifferent places which gives you\n\n1628\n01:20:41,760 --> 01:20:43,140\na lot of redundancy.\n\n1629\n01:20:43,140 --> 01:20:45,960\nIn fact,\nthe most common deployment of this\n\n1630\n01:20:45,960 --> 01:20:50,030\nis to use transaction log shipping and\nmirroring together.\n\n1631\n01:20:50,030 --> 01:20:54,230\nThat, in your home office, you might\nhave two SQL servers that are mirroring\n\n1632\n01:20:54,230 --> 01:20:57,810\nthe database between each other\nin lockstep, in high safety mode.\n\n1633\n01:20:57,810 --> 01:21:01,870\nSo, it's replicated right there,\nnice and synchronized.\n\n1634\n01:21:01,870 --> 01:21:05,720\nBut then you use transaction log shipping\nto send the changes to your disaster\n\n1635\n01:21:05,720 --> 01:21:08,290\nrecovery location,\nto another facility somewhere else.\n\n1636\n01:21:08,290 --> 01:21:12,950\nNow you're sending your stuff offsite,\nwith potentially a 15 minute loss window.\n\n1637\n01:21:12,950 --> 01:21:18,690\nBut a total building disaster, most\norganizations allow for a 15 minute loss.\n\n1638\n01:21:18,690 --> 01:21:20,160\nUsually they'll have much longer.\n\n1639\n01:21:20,160 --> 01:21:24,010\nI used to work for an FDIC-insured\nbank and they allowed us 72 hours.\n\n1640\n01:21:24,010 --> 01:21:27,820\nWe could lose three days worth of data and\nstill be okay.\n\n1641\n01:21:27,820 --> 01:21:30,993\nSo a 15-minute window like\nthis is perfectly fine, right?\n\n1642\n01:21:30,993 --> 01:21:32,780\nFor a total building loss.\n\n1643\n01:21:32,780 --> 01:21:34,730\nBut for a server loss,\nwe didn't even want to lose that.\n\n1644\n01:21:34,730 --> 01:21:38,240\nSo the mirroring would achieve what\nwe wanted, or clustering would, too.\n\n1645\n01:21:38,240 --> 01:21:40,266\nSo, pros and cons to each model.\n\n1646\n01:21:40,266 --> 01:21:43,310\nWith transaction log shipping,\nyou don't have to go 15 minutes.\n\n1647\n01:21:43,310 --> 01:21:45,520\nYou could go six hours or even 24 hours.\n\n1648\n01:21:45,520 --> 01:21:46,960\nIf you just wanted to be within 24 hours,\n\n1649\n01:21:46,960 --> 01:21:51,240\nnow it's just sending one big, fat log\nacross the network once a day or whatever.\n\n1650\n01:21:51,240 --> 01:21:52,730\nThis is starting to sound bad.\n\n1651\n01:21:52,730 --> 01:21:55,650\nSo anyhow, so we can send that data to\nthe other system, get it replicated out.\n\n1652\n01:21:55,650 --> 01:21:59,000\nThere's different options available for\nus depending on what we're trying to do.\n\n1653\n01:21:59,000 --> 01:22:01,930\nSo, transaction log shipping\nis just another tool\n\n1654\n01:22:01,930 --> 01:22:04,680\nin our toolkit that we can use\nto provide that redundancy.\n\n1655\n01:22:04,680 --> 01:22:09,410\nNow, the team that developed transaction\nlog shipping, whatever development team\n\n1656\n01:22:09,410 --> 01:22:12,600\ndesigned it was a different team\nthan who designed mirroring.\n\n1657\n01:22:12,600 --> 01:22:15,678\nAnd you'll find that setting up\ntransaction log shipping is a lot easier.\n\n1658\n01:22:15,678 --> 01:22:19,160\nThe whole back-up and restore thing\nI had to do manually a minute ago.\n\n1659\n01:22:19,160 --> 01:22:22,150\nWell, it happens automatically,\nwith transaction log shipping.\n\n1660\n01:22:22,150 --> 01:22:25,200\nIt will automatically create\nthe destination databases for me and\n\n1661\n01:22:25,200 --> 01:22:26,820\nget them setup.\n\n1662\n01:22:26,820 --> 01:22:29,810\nBut there's other parts like fail over\n\n1663\n01:22:29,810 --> 01:22:32,040\nthat are not automatic with\ntransaction log shipping.\n\n1664\n01:22:32,040 --> 01:22:34,760\nTransaction log shipping does\nnot do automatic failover.\n\n1665\n01:22:34,760 --> 01:22:38,630\nIf one end fails, we've got to go and\nwake up the other end.\n\n1666\n01:22:38,630 --> 01:22:41,440\nWe've got to get it out of the restoring\nmode and get it available for\n\n1667\n01:22:41,440 --> 01:22:45,560\nend users to connect to it, so there\nis no automatic failover on this one.\n\n1668\n01:22:45,560 --> 01:22:48,420\nThat makes it a little bit less\nattractive in some standpoints.\n\n1669\n01:22:48,420 --> 01:22:50,706\nBut if you just had\na full building disaster,\n\n1670\n01:22:50,706 --> 01:22:54,676\nhaving to wake up a service is really not\nthat big of a deal, so it becomes part of\n\n1671\n01:22:54,676 --> 01:22:58,202\nyour business resumption plan,\nand you go and knock it out.\n\n1672\n01:22:58,202 --> 01:23:00,730\nAll right, so\nlet's take a look at setting this up.\n\n1673\n01:23:00,730 --> 01:23:01,940\nJust like before,\n\n1674\n01:23:01,940 --> 01:23:04,970\npermissions are usually the number one\nthing that stops this from working.\n\n1675\n01:23:04,970 --> 01:23:08,500\nSo we have a couple of prerequisites\nwe need to get checked and set up.\n\n1676\n01:23:08,500 --> 01:23:12,290\nWe do need an account on both\nservers that will run and\n\n1677\n01:23:12,290 --> 01:23:13,550\nbe able to manipulate these files.\n\n1678\n01:23:13,550 --> 01:23:19,470\nNow, all of transaction log shipping\nruns by your SQL server agent.\n\n1679\n01:23:19,470 --> 01:23:23,720\nYour SQL server agent is what's doing all\nthe work for transaction log shipping.\n\n1680\n01:23:23,720 --> 01:23:27,170\nSo whatever service account, or\nwhatever proxy account it's using,\n\n1681\n01:23:27,170 --> 01:23:29,970\nis the account that's gonna be\nhandling the transaction log shipping.\n\n1682\n01:23:29,970 --> 01:23:33,420\nSo it needs to at least be\na DB backup operator for\n\n1683\n01:23:33,420 --> 01:23:36,190\nthe database which it'll take care of for\nus.\n\n1684\n01:23:36,190 --> 01:23:40,470\nBut it'll also need access to\na shared folder on the server, so\n\n1685\n01:23:40,470 --> 01:23:43,270\nwe'll have to check out NTFS and\nour share permissions.\n\n1686\n01:23:43,270 --> 01:23:46,886\nYou need a shared folder on the server,\nbecause that's where we're gonna be\n\n1687\n01:23:46,886 --> 01:23:50,792\ncopying our transaction log backups to, so\nthey can be restored on the other side.\n\n1688\n01:23:50,792 --> 01:23:51,900\nAll right.\n\n1689\n01:23:51,900 --> 01:23:56,800\nMy SQL server agent is running under\na domain account called SQL Service.\n\n1690\n01:23:56,800 --> 01:24:02,220\nSo, on my server, I created a folder on\nthe C drive called TL shipping, right?\n\n1691\n01:24:02,220 --> 01:24:04,160\nSo there's my transaction\nlog shipping folder.\n\n1692\n01:24:05,250 --> 01:24:06,530\nAnd I shared it.\n\n1693\n01:24:08,160 --> 01:24:11,580\nSo if I go into my advanced sharing here,\nI shared it out.\n\n1694\n01:24:11,580 --> 01:24:14,280\nAnd for the permissions,\nI gave administrators full control.\n\n1695\n01:24:14,280 --> 01:24:18,130\nAnd I gave the SQL service\naccount full control, so\n\n1696\n01:24:18,130 --> 01:24:20,680\nthat it can add files\nas well as delete them.\n\n1697\n01:24:20,680 --> 01:24:21,850\nYou want it to be able to delete,\n\n1698\n01:24:21,850 --> 01:24:25,530\notherwise this folder will fill up\nwith transaction log files over time.\n\n1699\n01:24:25,530 --> 01:24:29,280\nYou can tell it to prune those off,\nand it'll keep itself from filling up.\n\n1700\n01:24:31,340 --> 01:24:31,940\nAll right.\n\n1701\n01:24:31,940 --> 01:24:34,240\nSo we gotta have a shared folder,\nand we have to have a user account.\n\n1702\n01:24:34,240 --> 01:24:36,210\nAnd I'm choosing that\nsame one from before.\n\n1703\n01:24:37,800 --> 01:24:41,240\nAfter that, we're pretty much ready\nto set up transaction log shipping.\n\n1704\n01:24:41,240 --> 01:24:42,460\nLet me see, did I miss anything?\n\n1705\n01:24:42,460 --> 01:24:43,910\nI think that's pretty much it.\n\n1706\n01:24:43,910 --> 01:24:44,680\nYeah.\n\n1707\n01:24:44,680 --> 01:24:46,530\nOh, we do need to be in\nthe full recovery model.\n\n1708\n01:24:46,530 --> 01:24:47,960\nNow, I know that I am.\n\n1709\n01:24:47,960 --> 01:24:48,830\nBut if I didn't,\n\n1710\n01:24:48,830 --> 01:24:52,070\nI could pull up the properties of\nthe human resources database, and\n\n1711\n01:24:52,070 --> 01:24:56,400\ngo under options, and make sure that\nI was in that full recovery model.\n\n1712\n01:24:56,400 --> 01:25:00,390\nTransaction log shipping, like its name\nimplies, doesn't transmit the database,\n\n1713\n01:25:00,390 --> 01:25:02,150\nit transmits the transaction logs.\n\n1714\n01:25:02,150 --> 01:25:05,150\nSo it's basically taking\ntransaction log backups and\n\n1715\n01:25:05,150 --> 01:25:06,070\nsending them to the other side.\n\n1716\n01:25:06,070 --> 01:25:09,000\nIf you're in the simple recovery model,\nthat won't work, so\n\n1717\n01:25:09,000 --> 01:25:10,600\nwe've got to be in\nthe full recovery model.\n\n1718\n01:25:12,670 --> 01:25:13,450\nAll right.\n\n1719\n01:25:13,450 --> 01:25:14,520\nFrom there, we're ready to go.\n\n1720\n01:25:14,520 --> 01:25:17,840\nNow, when I did mirroring,\nI came down here to SQL02, and\n\n1721\n01:25:17,840 --> 01:25:20,420\nI created that human resources database.\n\n1722\n01:25:20,420 --> 01:25:21,280\nI didn't do that this time.\n\n1723\n01:25:21,280 --> 01:25:22,490\nLet me just refresh that.\n\n1724\n01:25:22,490 --> 01:25:24,350\nYou'll see there's no database there.\n\n1725\n01:25:24,350 --> 01:25:27,100\nI don't have anything created\non SQL02 ahead of time.\n\n1726\n01:25:27,100 --> 01:25:29,560\nI'll let the wizard do that, all right?\n\n1727\n01:25:29,560 --> 01:25:32,110\nTo get this set up,\nwe right click on our database, so\n\n1728\n01:25:32,110 --> 01:25:37,670\nI'll right click on human resources,\nand go to tasks, and in here we will\n\n1729\n01:25:37,670 --> 01:25:41,560\nsee somewhere, oh sorry it's not under\ntasks, this one's in a different place.\n\n1730\n01:25:41,560 --> 01:25:45,600\nI need to right click on the database and\ngo to properties, and\n\n1731\n01:25:45,600 --> 01:25:51,110\nhere you got transaction log shipping\nas a menu item as a pages item.\n\n1732\n01:25:51,110 --> 01:25:54,050\nSo a little bit different, not located\nin the same place as mirroring.\n\n1733\n01:25:54,050 --> 01:25:55,630\nWell you'll see mirroring\nis right above it though.\n\n1734\n01:25:55,630 --> 01:25:57,460\nSo if you want to do mirroring\nyou can do it that way.\n\n1735\n01:25:57,460 --> 01:26:00,650\nThe transaction log shipping is\nright here, and we can turn it on.\n\n1736\n01:26:00,650 --> 01:26:03,890\nNow you can sort of see some of\nthe defaults on this screen.\n\n1737\n01:26:03,890 --> 01:26:06,600\nIt's not enabled by default,\nand that makes sense.\n\n1738\n01:26:06,600 --> 01:26:10,690\nBut you'll see the backup settings\nare set to occur every 15 minutes between\n\n1739\n01:26:10,690 --> 01:26:13,110\n12 AM and 11:59 PM.\n\n1740\n01:26:13,110 --> 01:26:16,290\nSo the default is every 15 minutes\nthroughout the entire day.\n\n1741\n01:26:16,290 --> 01:26:19,650\nIt's gonna do a transaction log backup,\nand send it to the other side.\n\n1742\n01:26:19,650 --> 01:26:22,150\nIf you have a failure,\nworst-case scenario,\n\n1743\n01:26:22,150 --> 01:26:24,470\nyou could lose up to 15\nminutes of data this way.\n\n1744\n01:26:24,470 --> 01:26:25,280\nAll right.\n\n1745\n01:26:25,280 --> 01:26:28,750\nYou may need to make that smaller or\nbigger based on your company's needs.\n\n1746\n01:26:28,750 --> 01:26:29,780\nIt's up to you.\n\n1747\n01:26:29,780 --> 01:26:30,590\nAll right.\n\n1748\n01:26:30,590 --> 01:26:32,100\nI'm gonna go ahead and enable this.\n\n1749\n01:26:32,100 --> 01:26:32,802\nSo I'll turn it on.\n\n1750\n01:26:32,802 --> 01:26:35,010\nI'm gonna change my backup settings.\n\n1751\n01:26:35,010 --> 01:26:36,390\nI'm a little worried about 15 minutes.\n\n1752\n01:26:36,390 --> 01:26:38,800\nI wanna make my mine a little bit shorter.\n\n1753\n01:26:38,800 --> 01:26:42,992\nWell, we need to go into these settings\nanyway because here's where we start to\n\n1754\n01:26:42,992 --> 01:26:44,431\nspecify our network path,\n\n1755\n01:26:44,431 --> 01:26:48,140\nand some of the other values related\nto the transaction log shipping.\n\n1756\n01:26:48,140 --> 01:26:49,410\nSo, some of the options we've got.\n\n1757\n01:26:49,410 --> 01:26:52,260\nHere's the network path\nto the backup folder.\n\n1758\n01:26:52,260 --> 01:26:54,270\nWhere am I gonna back this stuff up to?\n\n1759\n01:26:54,270 --> 01:26:55,520\nWell, I showed you guys,\n\n1760\n01:26:55,520 --> 01:27:00,140\nI've already created a folder right\nhere on my C drive called TLShipping.\n\n1761\n01:27:00,140 --> 01:27:02,710\nI'm putting it right here on my server.\n\n1762\n01:27:02,710 --> 01:27:03,650\nYou don't have to do that.\n\n1763\n01:27:03,650 --> 01:27:04,770\nYou can put it anywhere.\n\n1764\n01:27:04,770 --> 01:27:08,351\nSo if it's on a network storage\ndevice that you've already got,\n\n1765\n01:27:08,351 --> 01:27:10,250\nyou could put the path to it there.\n\n1766\n01:27:10,250 --> 01:27:13,640\nIt's up to you.\n\n1767\n01:27:13,640 --> 01:27:17,990\nSo I'm going to put in\n//win-sql01/tlshipping.\n\n1768\n01:27:17,990 --> 01:27:21,676\nThat's the folder that I put that in.\n\n1769\n01:27:21,676 --> 01:27:24,650\nAll right.\nThen it says if the backup folder is\n\n1770\n01:27:24,650 --> 01:27:27,830\nlocated on this server,\nwhat's the local path to it?\n\n1771\n01:27:27,830 --> 01:27:32,730\nIt's asking that because if it can copy\nto a local path, it's faster then if it\n\n1772\n01:27:32,730 --> 01:27:38,080\ngoes through the SMB and netBIOS process\nof looking for this network share.\n\n1773\n01:27:38,080 --> 01:27:40,992\nSo, I give it a local and now,\nif this was on a remote system,\n\n1774\n01:27:40,992 --> 01:27:42,260\nI would leave this blank.\n\n1775\n01:27:42,260 --> 01:27:44,240\nYou would just leave it empty and\nnot put anything in there.\n\n1776\n01:27:44,240 --> 01:27:46,320\nBut because mine is local\nI'll put it in there.\n\n1777\n01:27:46,320 --> 01:27:47,676\nC:/tlshipping.\n\n1778\n01:27:47,676 --> 01:27:52,930\nAll right,\nhere we've got delete files older than.\n\n1779\n01:27:52,930 --> 01:27:56,130\nWe can specify how far back we want\nit to retain transaction logs.\n\n1780\n01:27:57,210 --> 01:28:00,060\nThis is where I said we needed that write,\nthat full control permission on\n\n1781\n01:28:00,060 --> 01:28:03,120\nthe folder, cuz we wanted to delete\nold transaction log files, and\n\n1782\n01:28:03,120 --> 01:28:06,430\nnot just sit there and store them and\nhave it build and build and build.\n\n1783\n01:28:06,430 --> 01:28:09,610\nSo 72 hours is good for me,\nsave three days worth of transactions.\n\n1784\n01:28:09,610 --> 01:28:10,708\nThat's fine.\n\n1785\n01:28:10,708 --> 01:28:12,208\nIt's probably too much, right?\n\n1786\n01:28:12,208 --> 01:28:15,771\nIf we're doing full backups of this\ndatabase once a day anyway, we probably\n\n1787\n01:28:15,771 --> 01:28:19,458\ndon't even need that, so you may be able\nto shrink that for your environment.\n\n1788\n01:28:19,458 --> 01:28:24,020\nAlert if no backup occurs within\na certain amount of hours, all right.\n\n1789\n01:28:24,020 --> 01:28:26,583\nIf a backup fails,\nhow soon do I want it to warn me?\n\n1790\n01:28:26,583 --> 01:28:28,000\nNow it's set to one hour.\n\n1791\n01:28:28,000 --> 01:28:30,872\nIf I'm doing backups every 15 minutes,\n\n1792\n01:28:30,872 --> 01:28:34,708\nthat means I could miss four\nbackups before it alerts me.\n\n1793\n01:28:34,708 --> 01:28:37,455\nWell I should have known about\nthat problem far earlier.\n\n1794\n01:28:37,455 --> 01:28:40,120\nI'm going to go every five minutes, right.\n\n1795\n01:28:40,120 --> 01:28:41,520\nFor my back ups.\n\n1796\n01:28:41,520 --> 01:28:46,290\nSo I want this to notify me if no\nbackup occurs within 15 minutes.\n\n1797\n01:28:46,290 --> 01:28:48,300\nSo I want to know in\na much shorter window,\n\n1798\n01:28:48,300 --> 01:28:50,420\nif a backup doesn't\noccur send me an alert.\n\n1799\n01:28:52,580 --> 01:28:55,750\nAll right, it's gonna create a backup job,\nso it's got it set up right here.\n\n1800\n01:28:55,750 --> 01:28:59,240\nYou change its name if you want, but\nthe schedule is every 15 minutes.\n\n1801\n01:28:59,240 --> 01:29:00,860\nI wanna make that more aggressive.\n\n1802\n01:29:00,860 --> 01:29:03,000\nSo I'm gonna make it every 5 minutes.\n\n1803\n01:29:04,900 --> 01:29:05,644\nThere we go.\n\n1804\n01:29:07,757 --> 01:29:10,701\nAll right, so now my backups\nare gonna happen every 5 minutes,\n\n1805\n01:29:10,701 --> 01:29:12,020\nfrom midnight to midnight.\n\n1806\n01:29:14,000 --> 01:29:16,238\nYou can also choose to use backup\ncompression if you're using\n\n1807\n01:29:16,238 --> 01:29:17,490\nSQL Enterprise Edition.\n\n1808\n01:29:17,490 --> 01:29:20,750\nIf you're running standard that doesn't\nwork, but you can choose to compress it.\n\n1809\n01:29:20,750 --> 01:29:22,040\nI'll just leave it at the default.\n\n1810\n01:29:22,040 --> 01:29:24,970\nI personally don't like to do the\ncompression cuz it generates a little more\n\n1811\n01:29:24,970 --> 01:29:27,660\nCPU usage, but you can use it if you want.\n\n1812\n01:29:29,970 --> 01:29:32,270\nAll right, I'll say okay to that.\n\n1813\n01:29:32,270 --> 01:29:34,240\nNow, it's got that set up.\n\n1814\n01:29:34,240 --> 01:29:37,110\nI'm set up for transaction log shipping,\nit knows to do the back up,\n\n1815\n01:29:37,110 --> 01:29:39,470\nit knows where to put the back ups.\n\n1816\n01:29:39,470 --> 01:29:41,720\nNow I just need to tell it where to go to.\n\n1817\n01:29:41,720 --> 01:29:43,400\nWho do I replicate this too?\n\n1818\n01:29:43,400 --> 01:29:47,330\nYou can now add in as many\ninstances as you want, okay.\n\n1819\n01:29:47,330 --> 01:29:51,050\nI don't have any right now,\nI'll add in SQL02.\n\n1820\n01:29:51,050 --> 01:29:54,528\nSo I'm gonna go up here and\nconnect to WIN SQL02.\n\n1821\n01:29:54,528 --> 01:29:58,860\nSo I'm going to connect up to it,\n\n1822\n01:29:58,860 --> 01:30:02,020\nprovide credentials if you need it,\nI'm doing Windows authentication.\n\n1823\n01:30:02,020 --> 01:30:04,790\nIt's asking what database I'm\ngonna create on the other side.\n\n1824\n01:30:04,790 --> 01:30:09,011\nNow SQL02 doesn't have any databases, so\nit's gonna have to create this for me,\n\n1825\n01:30:09,011 --> 01:30:09,611\nall right.\n\n1826\n01:30:09,611 --> 01:30:12,454\nAnd see how it selects\nan existing database, or\n\n1827\n01:30:12,454 --> 01:30:14,880\nenter the name to create a new database.\n\n1828\n01:30:14,880 --> 01:30:17,680\nSo it's actually gonna make a new one for\nme over there.\n\n1829\n01:30:17,680 --> 01:30:18,380\nIt doesn't exist yet.\n\n1830\n01:30:19,780 --> 01:30:22,690\nThen we can specify how we want to\ncreate that secondary database.\n\n1831\n01:30:22,690 --> 01:30:24,270\nYou've got three options here.\n\n1832\n01:30:24,270 --> 01:30:29,240\nThe first one is take a backup for\nme, and restore it on the other side.\n\n1833\n01:30:29,240 --> 01:30:30,000\nSo it'll do that.\n\n1834\n01:30:30,000 --> 01:30:32,690\nThat process I had to do for\nmirroring, it will do it for me.\n\n1835\n01:30:32,690 --> 01:30:36,109\nIt'll take a backup right now and\nrestore it on the other side, all right.\n\n1836\n01:30:36,109 --> 01:30:37,961\nIf you already have a backup though,\n\n1837\n01:30:37,961 --> 01:30:41,490\nyou can choose the second option\nthat says restore an existing one.\n\n1838\n01:30:41,490 --> 01:30:43,920\nI've already got a backup from\nthis morning, or whenever.\n\n1839\n01:30:43,920 --> 01:30:46,480\nIt'll use that one and\nrestore it to the other side too.\n\n1840\n01:30:46,480 --> 01:30:50,890\nThe third option though says\nthe secondary database is initialized.\n\n1841\n01:30:50,890 --> 01:30:54,600\nThat means you've already made\nthe database on the other side and\n\n1842\n01:30:54,600 --> 01:30:55,390\nput the data in it.\n\n1843\n01:30:55,390 --> 01:30:57,170\nNow, why would you do that?\n\n1844\n01:30:57,170 --> 01:30:58,840\nIf it'll do it automatically\nwhy would I do that?\n\n1845\n01:30:58,840 --> 01:31:02,480\nWell, backups and restorers,\nthey require resources, right?\n\n1846\n01:31:02,480 --> 01:31:04,760\nThey can slow your sever down if\nyou're doing a backup right now.\n\n1847\n01:31:04,760 --> 01:31:07,280\nSo you may want to do this some\nother time, after hours, whatever.\n\n1848\n01:31:07,280 --> 01:31:09,040\nSo that might be one reason.\n\n1849\n01:31:09,040 --> 01:31:12,930\nThe main reason though, is if you let\nit do the back up and restore for\n\n1850\n01:31:12,930 --> 01:31:17,920\nyou, it assumes the file paths are going\nto be identical on the two servers.\n\n1851\n01:31:17,920 --> 01:31:19,630\nBut that's not always the case.\n\n1852\n01:31:19,630 --> 01:31:23,290\nYou might have a different hard drive\nconfiguration on the destination server.\n\n1853\n01:31:23,290 --> 01:31:26,230\nSo by going and\ncreating the database yourself.\n\n1854\n01:31:26,230 --> 01:31:27,900\nYou can specify a different file path.\n\n1855\n01:31:27,900 --> 01:31:29,930\nAnd then when you restore the database,\n\n1856\n01:31:29,930 --> 01:31:34,200\nit's just restoring the data into\nthe database, the files are already there.\n\n1857\n01:31:34,200 --> 01:31:37,060\nSo if you want to adjust the path,\nthat's one way to do it.\n\n1858\n01:31:37,060 --> 01:31:40,270\nNow, in SQL 2005 and\n2008 you had to do that.\n\n1859\n01:31:40,270 --> 01:31:44,550\nIn 2012 they actually added\nthe option here under Restore Options\n\n1860\n01:31:44,550 --> 01:31:48,570\nwhere you can go in and override the path,\nthe folder for the data files,\n\n1861\n01:31:48,570 --> 01:31:50,190\nthe folder for the log files.\n\n1862\n01:31:50,190 --> 01:31:55,120\nBut if you have more than one file,\nif you have multiple file groups in\n\n1863\n01:31:55,120 --> 01:31:58,240\ndifferent locations,\nthis only lets you put in one path.\n\n1864\n01:31:58,240 --> 01:32:03,180\nSo if you have table partitioning or\nsomething really complex like that,\n\n1865\n01:32:03,180 --> 01:32:07,220\nyou'll probably wanna go and create the\ndatabase by hand to get it set up right.\n\n1866\n01:32:07,220 --> 01:32:10,840\nAnd, once it's set up right,\nthen you can go and restore into it.\n\n1867\n01:32:10,840 --> 01:32:14,760\nSo, that's why we have that third option\nto say, we'll just do it ourselves.\n\n1868\n01:32:14,760 --> 01:32:16,870\nBut, in my case, I don't have\nthe database, so I'm gonna go ahead and\n\n1869\n01:32:16,870 --> 01:32:20,240\nchoose the option to have it, back it up,\nand restore it, do the whole thing for me.\n\n1870\n01:32:22,040 --> 01:32:23,810\nThen we've got copyfiles.\n\n1871\n01:32:23,810 --> 01:32:26,900\nIt's gotta copy this backup\nto the other server, and\n\n1872\n01:32:26,900 --> 01:32:28,210\nthe server's gotta be able to get to it.\n\n1873\n01:32:28,210 --> 01:32:32,730\nSo I need to specify where I want that to\ngo, and on the other server I actually\n\n1874\n01:32:32,730 --> 01:32:37,638\ncreated the same folder, on WIN SQL02 I\ncreated a folder called TL shipping.\n\n1875\n01:32:37,638 --> 01:32:41,120\nWhich I didn't technically need, but\nI went ahead and created it there anyway.\n\n1876\n01:32:41,120 --> 01:32:44,340\nSo I'll tell it to go ahead and\nsend it over there for that backup.\n\n1877\n01:32:44,340 --> 01:32:46,920\nI've got delete copied files\nafter seventy two hours,\n\n1878\n01:32:46,920 --> 01:32:48,990\nhere's the backup job that's being set up.\n\n1879\n01:32:48,990 --> 01:32:52,180\nNow, for this one,\nit's copying them over and\n\n1880\n01:32:52,180 --> 01:32:54,820\nnotice it says every 15 minutes again,\nright.\n\n1881\n01:32:54,820 --> 01:32:58,880\nYou can specify different intervals for\ndifferent endpoints.\n\n1882\n01:32:58,880 --> 01:33:01,410\nMy main server's backing\nup every five minutes, but\n\n1883\n01:33:01,410 --> 01:33:04,560\nI'm only shipping logs over\nthere every 15 minutes, so\n\n1884\n01:33:04,560 --> 01:33:08,320\nI might want to adjust that and make that\nmore aggressive just like the other one.\n\n1885\n01:33:08,320 --> 01:33:09,809\nSo I'll do that too and go 5 minutes.\n\n1886\n01:33:11,597 --> 01:33:12,670\nAll right.\n\n1887\n01:33:12,670 --> 01:33:16,690\nAnd then under Restore Transaction Log,\nit's got how you want to do the restore.\n\n1888\n01:33:16,690 --> 01:33:19,060\nNow, the default is\nthe same no recovery mode.\n\n1889\n01:33:19,060 --> 01:33:22,820\nThat means to leave the database offline\nand have it sitting there waiting for\n\n1890\n01:33:22,820 --> 01:33:24,190\nmore restores.\n\n1891\n01:33:24,190 --> 01:33:27,300\nBut if we want to close it off and\nget that database up and running,\n\n1892\n01:33:27,300 --> 01:33:29,550\nwe can choose to put it into standby mode,\nor\n\n1893\n01:33:29,550 --> 01:33:32,700\nsome of the other options\nto tweak that performance.\n\n1894\n01:33:32,700 --> 01:33:37,072\nYou usually don't use these,\nwe want it to be in no recovery mode so\n\n1895\n01:33:37,072 --> 01:33:39,898\nthat we can continue\nto send updates to it.\n\n1896\n01:33:39,898 --> 01:33:44,260\nAll right, so I'm good with that,\nI'm going to leave that be.\n\n1897\n01:33:44,260 --> 01:33:46,980\nLet's see, what else do I wanna do here?\n\n1898\n01:33:46,980 --> 01:33:50,237\nThat should be about it.\n\n1899\n01:33:50,237 --> 01:33:52,570\nAnd yeah, all right.\n\n1900\n01:33:52,570 --> 01:33:54,970\nSo I'll leave that be, and\nwe'll go ahead and hit OK.\n\n1901\n01:33:54,970 --> 01:33:56,170\nAnd now we've got a new endpoint.\n\n1902\n01:33:56,170 --> 01:33:58,470\nI could then proceed\nto add more endpoints,\n\n1903\n01:33:58,470 --> 01:34:02,070\nif I wanted, and get them set up\nto sync over to the other side.\n\n1904\n01:34:02,070 --> 01:34:03,640\nYou know, just however many I needed.\n\n1905\n01:34:05,045 --> 01:34:09,095\nNow for monitoring, we're typically gonna\nmonitor from the server that's doing\n\n1906\n01:34:09,095 --> 01:34:13,365\ntransaction log shipping, but you can\nspecify an alternate monitor server.\n\n1907\n01:34:13,365 --> 01:34:16,115\nIt's like a witness, it's like\na third-party that's watching this whole\n\n1908\n01:34:16,115 --> 01:34:17,945\nprocess to ensure that it's healthy.\n\n1909\n01:34:17,945 --> 01:34:20,465\nIf you wanna do that,\nyou can specify that down here.\n\n1910\n01:34:20,465 --> 01:34:20,965\nI'm not going to.\n\n1911\n01:34:22,692 --> 01:34:25,470\nAll right, when you hit okay,\nit's gonna fire up.\n\n1912\n01:34:25,470 --> 01:34:29,500\nIt's backing up the database on one side,\nrestoring it on the other side, and\n\n1913\n01:34:29,500 --> 01:34:32,040\nthen setting up transaction log shipping.\n\n1914\n01:34:32,040 --> 01:34:35,450\nAny change made on the primary server,\n\n1915\n01:34:35,450 --> 01:34:37,855\nwill be backed up in\nthe next five minutes.\n\n1916\n01:34:37,855 --> 01:34:41,100\nSent over to the other server, and\nrestored within the next five minutes.\n\n1917\n01:34:41,100 --> 01:34:44,763\nSo I'll never be more than five\nminutes behind on the remote server.\n\n1918\n01:34:47,120 --> 01:34:51,393\nAll right, now that it's done, I see\nmy human resources database here, and\n\n1919\n01:34:51,393 --> 01:34:55,540\nsee human resources on the other\nserver in a restoring state.\n\n1920\n01:34:55,540 --> 01:34:58,820\nAs I start to make changes,\nso if I take this table.\n\n1921\n01:35:00,390 --> 01:35:03,040\nAnd I'll edit those rows.\n\n1922\n01:35:03,040 --> 01:35:04,840\nI'll change this person's\nphone number this time.\n\n1923\n01:35:08,630 --> 01:35:12,111\nAnd, get them punched in, so\nmaybe they work for us now too, so\n\n1924\n01:35:12,111 --> 01:35:14,101\nwe'll punch in the office number.\n\n1925\n01:35:17,210 --> 01:35:18,660\nMake sure that applies, there we go.\n\n1926\n01:35:18,660 --> 01:35:20,810\nIt didn't give me any grief\nabout saving that time.\n\n1927\n01:35:20,810 --> 01:35:22,620\nBut again it's just one database.\n\n1928\n01:35:22,620 --> 01:35:24,910\nIt's not in lockstep with\nanother database somewhere.\n\n1929\n01:35:24,910 --> 01:35:27,290\nI just make the change here,\nthat's all it did.\n\n1930\n01:35:27,290 --> 01:35:30,000\nAt some point in the next five minutes,\n\n1931\n01:35:30,000 --> 01:35:32,470\nthis database is gonna do\na transaction log backup.\n\n1932\n01:35:32,470 --> 01:35:37,200\nAnd that transaction log backup\nwill go into c:/tlshipping.\n\n1933\n01:35:37,200 --> 01:35:39,930\nSo if I sit here and watch this folder,\n\n1934\n01:35:39,930 --> 01:35:43,330\nat some point in the next five minutes I'm\ngonna see a transaction log back up here.\n\n1935\n01:35:43,330 --> 01:35:44,670\nNow, there's already a backup.\n\n1936\n01:35:44,670 --> 01:35:47,460\nThat might be it, I'd have to open\nit up to look at what's in there.\n\n1937\n01:35:47,460 --> 01:35:52,810\nBut that may also be the backup from when\nwe created the database on the other side,\n\n1938\n01:35:52,810 --> 01:35:55,570\nso that one's at 8:27, it's 8:28.\n\n1939\n01:35:55,570 --> 01:35:58,014\nOh, I'll bet that's\na transaction log backup there.\n\n1940\n01:35:58,014 --> 01:36:02,366\nBut as we continue to make changes, the\ntransaction log backups will occur here,\n\n1941\n01:36:02,366 --> 01:36:06,465\nthey'll get copied to the other server\nwhere the other server will then apply\n\n1942\n01:36:06,465 --> 01:36:10,020\nthem to the database, and\nthen that change will be down here also.\n\n1943\n01:36:10,020 --> 01:36:12,350\nIt will be applied to this database.\n\n1944\n01:36:12,350 --> 01:36:14,715\nSo that's going to be ongoing,\njust running throughout the day.\n\n1945\n01:36:14,715 --> 01:36:18,042\nBut performance on my main server\nis not affected too much, right.\n\n1946\n01:36:18,042 --> 01:36:20,500\nI can make changes and\nwe don't wait on the remote server.\n\n1947\n01:36:20,500 --> 01:36:23,208\nBut these continual backups,\nthey can create a bit of a burden.\n\n1948\n01:36:23,208 --> 01:36:26,333\nSo I want to track my disk IO,\nmake sure that everything's happy there.\n\n1949\n01:36:26,333 --> 01:36:30,224\nI'm backing up to my C drives,\nprobably not the greatest idea because I'm\n\n1950\n01:36:30,224 --> 01:36:33,208\ncontending with the OS and\nthe page file, the spot file.\n\n1951\n01:36:33,208 --> 01:36:36,234\nSo, I might want to move that\nto a different drive later on,\n\n1952\n01:36:36,234 --> 01:36:37,208\neasy enough to do.\n\n1953\n01:36:37,208 --> 01:36:38,250\nAlright.\n\n1954\n01:36:38,250 --> 01:36:40,809\nBut otherwise,\nI'm now replicating that database.\n\n1955\n01:36:41,840 --> 01:36:43,750\nIf a failure happens.\n\n1956\n01:36:43,750 --> 01:36:45,410\nThis is where it gets a little weird.\n\n1957\n01:36:45,410 --> 01:36:48,780\nIf a failure happens there's not\na way to automatically fail it over.\n\n1958\n01:36:48,780 --> 01:36:51,580\nThe main database goes offline and\nthe secondary guy,\n\n1959\n01:36:51,580 --> 01:36:54,050\nthis guy,\nis still just sitting here restoring.\n\n1960\n01:36:54,050 --> 01:36:57,270\nSo, what you have to do is go\nto that other database and\n\n1961\n01:36:57,270 --> 01:36:58,172\njust tell it to come online.\n\n1962\n01:36:58,172 --> 01:37:01,900\nIf there's a failure,\nwhat you really need to do\n\n1963\n01:37:01,900 --> 01:37:05,520\nis do a tail log back up of\nthe primary server if you can, right.\n\n1964\n01:37:05,520 --> 01:37:09,390\nRemember a tail log backup contains\nany change since the last backup.\n\n1965\n01:37:09,390 --> 01:37:13,380\nSo we run the tail log backup if we can\nand then we go and restore it down here.\n\n1966\n01:37:13,380 --> 01:37:17,620\nAnd when you restore it you\nuse the with recovery option.\n\n1967\n01:37:17,620 --> 01:37:20,260\nThat will bring the database on line and\nnow it is current and\n\n1968\n01:37:20,260 --> 01:37:21,170\nits got all your data.\n\n1969\n01:37:21,170 --> 01:37:23,500\nAll you did was restore a tail log.\n\n1970\n01:37:23,500 --> 01:37:27,810\nIf you don't have a tail log though, you\ncan do a restore on this, with recovery,\n\n1971\n01:37:27,810 --> 01:37:29,830\nand just don't give it a back up file.\n\n1972\n01:37:29,830 --> 01:37:32,725\nAnd when you do that, that'll tell it\nto bring it online, and off it goes.\n\n1973\n01:37:32,725 --> 01:37:34,820\nThat brings it online,\nand now it's available.\n\n1974\n01:37:34,820 --> 01:37:35,420\nRight?\n\n1975\n01:37:35,420 --> 01:37:39,450\nBut before I do that, I want to make\nsure that it's actually replicating.\n\n1976\n01:37:39,450 --> 01:37:41,410\nWith mirroring, I knew it was working,\n\n1977\n01:37:41,410 --> 01:37:43,390\nbecause it was all\nhappening at the same time.\n\n1978\n01:37:43,390 --> 01:37:45,610\nBut with transaction logs,\nthere's a delay.\n\n1979\n01:37:45,610 --> 01:37:49,030\nSo, how do I know that\nit's actually current?\n\n1980\n01:37:49,030 --> 01:37:51,180\nWell, there's actually\na report that's built in here.\n\n1981\n01:37:51,180 --> 01:37:55,084\nIf you right click on your server, so\nI'm going to click on WinSQL1, and\n\n1982\n01:37:55,084 --> 01:37:59,080\ngo to reports and standard reports,\n\n1983\n01:37:59,080 --> 01:38:03,840\nthere's a report buried in here called\ntransaction log shipping status.\n\n1984\n01:38:03,840 --> 01:38:06,690\nAnd if you run that report,\nit's the very last one on my list,\n\n1985\n01:38:06,690 --> 01:38:10,390\nif you run it it'll show you your\ntransaction log shipping, all the various\n\n1986\n01:38:10,390 --> 01:38:14,060\nones that are configured on your system,\nand what their current status is.\n\n1987\n01:38:14,060 --> 01:38:18,320\nSo looking at mine, I can see I've\ngot one replication set up for\n\n1988\n01:38:18,320 --> 01:38:20,040\nthe human resources database.\n\n1989\n01:38:20,040 --> 01:38:22,220\nIt's got one end point, WIN-SQL02,\n\n1990\n01:38:22,220 --> 01:38:26,119\nthe current status is good,\nI'm replicating, it's healthy.\n\n1991\n01:38:27,730 --> 01:38:30,030\nThe time since the last\nreplication was zero minutes.\n\n1992\n01:38:30,030 --> 01:38:31,750\nSo it just did it a minute ago.\n\n1993\n01:38:31,750 --> 01:38:33,530\nThe threshold is 15 minutes.\n\n1994\n01:38:33,530 --> 01:38:35,390\nThat's how many I can miss.\n\n1995\n01:38:35,390 --> 01:38:37,360\nAnd it will alert me if\nit misses that many.\n\n1996\n01:38:37,360 --> 01:38:38,220\nAll right.\n\n1997\n01:38:38,220 --> 01:38:40,380\nRemember I lowered that\nthreshold to 15 minutes.\n\n1998\n01:38:40,380 --> 01:38:41,510\nBut it's happy right now.\n\n1999\n01:38:41,510 --> 01:38:42,730\nIt's in business.\n\n2000\n01:38:42,730 --> 01:38:46,810\nYou know it should be good to go\nnothing too fancy going on there.\n\n2001\n01:38:46,810 --> 01:38:47,478\nAnd it's ready to rock.\n\n2002\n01:38:47,478 --> 01:38:48,683\nAll right, so quick,\n\n2003\n01:38:48,683 --> 01:38:52,752\neasy way to check right there just using\nthe reporting system inside of SQL.\n\n2004\n01:38:54,642 --> 01:38:57,120\nAll right,\nnow let's say something happens.\n\n2005\n01:38:57,120 --> 01:39:01,110\nSomething happens and the database\nin my main environment goes offline.\n\n2006\n01:39:01,110 --> 01:39:08,000\nOkay, so whatever it is this database just\ngoes offline so I'm taking it offline.\n\n2007\n01:39:09,220 --> 01:39:10,505\nI'm trying to take it offline.\n\n2008\n01:39:10,505 --> 01:39:12,450\n>> [LAUGH]\n>> We'll wait and see.\n\n2009\n01:39:12,450 --> 01:39:14,740\nCould go and\nyank the power cord out of that thing.\n\n2010\n01:39:14,740 --> 01:39:16,230\nBut anyhow, it's gonna try to go offline.\n\n2011\n01:39:16,230 --> 01:39:19,230\nNow, once it's offline, I could go and\n\n2012\n01:39:19,230 --> 01:39:22,660\nbring the other one back\nup to recover my system.\n\n2013\n01:39:22,660 --> 01:39:26,390\nTo do that, I should do a tail log\nbackup and restore it on the new system.\n\n2014\n01:39:26,390 --> 01:39:26,890\nThat'll work.\n\n2015\n01:39:26,890 --> 01:39:30,730\nSo if you didn't watch the backup episode\nyet, go check out that back up episode.\n\n2016\n01:39:30,730 --> 01:39:32,380\nWe show how to do the tail log.\n\n2017\n01:39:32,380 --> 01:39:37,010\nBut if I can't do a tail log then I\ncan just bring the other one online.\n\n2018\n01:39:37,010 --> 01:39:40,050\nAnd apparently it's just\ngonna sit there and do that.\n\n2019\n01:39:40,050 --> 01:39:41,280\nI'm gonna ignore that then.\n\n2020\n01:39:41,280 --> 01:39:43,000\nSo I'll go ahead and\nbring this other one online.\n\n2021\n01:39:43,000 --> 01:39:43,740\nIt's not like I'm gonna get\n\n2022\n01:39:43,740 --> 01:39:47,280\nduplicate names on the network cuz\nthese are two separate databases.\n\n2023\n01:39:47,280 --> 01:39:50,520\nIf I wanna bring it online, the easiest\nway is to restore the tail log back up.\n\n2024\n01:39:50,520 --> 01:39:53,940\nBut the manual way in the event\nthat I can't do a tail log backup,\n\n2025\n01:39:53,940 --> 01:39:57,400\nlike if I have a total server failure,\nwell what I can do\n\n2026\n01:39:59,260 --> 01:40:04,050\nis I can connect to this human\nresources data base and,\n\n2027\n01:40:04,050 --> 01:40:09,160\nactually I don't even need to do that,\nI can just, stay connected cuz\n\n2028\n01:40:09,160 --> 01:40:14,120\nI gotta do an alter database command\non the master database to do this.\n\n2029\n01:40:14,120 --> 01:40:16,350\nSo we can say use master or whatever.\n\n2030\n01:40:16,350 --> 01:40:19,932\nHere, we'll do use master.\n\n2031\n01:40:19,932 --> 01:40:24,190\nAnd then, we basically just need to\ntell it to bring the database online.\n\n2032\n01:40:24,190 --> 01:40:28,110\nThe command to do that is ALTER DATABASE.\n\n2033\n01:40:28,110 --> 01:40:29,080\nCan you guys see that?\n\n2034\n01:40:29,080 --> 01:40:30,449\nLet me zoom in a bit.\n\n2035\n01:40:32,847 --> 01:40:36,840\nSo it's ALTER DATABASE and the name of\nyour database, mine is HumanResources.\n\n2036\n01:40:38,860 --> 01:40:41,970\nAnd then we say WITH RECOVERY.\n\n2037\n01:40:43,178 --> 01:40:45,080\nAll right, now before I run this,\n\n2038\n01:40:45,080 --> 01:40:48,630\nI'll say that I've got about a 50-50\nshot of this working the first time.\n\n2039\n01:40:48,630 --> 01:40:51,300\nIt seems to not like\nto run the first time.\n\n2040\n01:40:51,300 --> 01:40:54,920\nSo I kind of expect to see an error here,\nyeah, I got an error.\n\n2041\n01:40:54,920 --> 01:40:57,110\nSo, I got an error and\nit's letting me know,\n\n2042\n01:40:57,110 --> 01:40:58,670\nactually this is the incorrect syntax.\n\n2043\n01:40:58,670 --> 01:40:59,990\nThat means I made a mistake.\n\n2044\n01:40:59,990 --> 01:41:01,420\nLet me find my mistake.\n\n2045\n01:41:01,420 --> 01:41:01,960\nLet's see.\n\n2046\n01:41:01,960 --> 01:41:05,090\nALTER DATABASE, the name of the database.\n\n2047\n01:41:05,090 --> 01:41:08,780\nOh. Shoot.\nIt needs to be RESTORE DATABASE.\n\n2048\n01:41:08,780 --> 01:41:10,450\nThat was not the error I was expecting.\n\n2049\n01:41:10,450 --> 01:41:12,200\nAll right.\nRESTORE DATABASE and\n\n2050\n01:41:12,200 --> 01:41:14,190\nthe name WITH RECOVERY.\n\n2051\n01:41:14,190 --> 01:41:16,150\nSo we're basically telling\nit to do a restore, but\n\n2052\n01:41:16,150 --> 01:41:17,520\nwe're not giving it any files.\n\n2053\n01:41:17,520 --> 01:41:19,160\nI don't have any files to restore.\n\n2054\n01:41:19,160 --> 01:41:21,730\nI'm just saying do it and bring it online.\n\n2055\n01:41:21,730 --> 01:41:26,150\nAnd this is the one I've got like\na 50/50 shot, oh, it did work.\n\n2056\n01:41:26,150 --> 01:41:28,120\nSo it worked this time on the first try,\nwell,\n\n2057\n01:41:28,120 --> 01:41:30,530\nI guess the second try\nafter I fixed my typo.\n\n2058\n01:41:30,530 --> 01:41:33,520\nJust for the record though,\nlet me show you what I do if it fails.\n\n2059\n01:41:33,520 --> 01:41:36,730\nIf you get a failure, every now and\nthen, I'll get a note that'll\n\n2060\n01:41:36,730 --> 01:41:41,180\nbug me about a problem with the database,\nand my theory, I haven't tested all this.\n\n2061\n01:41:41,180 --> 01:41:45,110\nMy theory is that I'm probably trying to\ndo this as a transaction log update is\n\n2062\n01:41:45,110 --> 01:41:46,190\nbeing applied.\n\n2063\n01:41:46,190 --> 01:41:49,722\nSo if you just wait a minute,\nit'll probably work fine, but\n\n2064\n01:41:49,722 --> 01:41:52,562\nif you're like me and\nyou're super impatient,\n\n2065\n01:41:52,562 --> 01:41:55,909\nwhat you can do is you can run\nALTER DATABASE and the name.\n\n2066\n01:41:59,952 --> 01:42:02,174\nSo, ALTER DATABASE, HumanResources for me.\n\n2067\n01:42:02,174 --> 01:42:10,170\nSET SINGLE_USER WITH ROLLBACK IMMEDIATE.\n\n2068\n01:42:10,170 --> 01:42:10,790\nAll right.\n\n2069\n01:42:10,790 --> 01:42:13,220\nWhat that does is it puts\nthe database in single user mode, so\n\n2070\n01:42:13,220 --> 01:42:14,570\nnobody else can mess with it.\n\n2071\n01:42:14,570 --> 01:42:17,590\nIn other words,\nstop doing transaction log updates to it.\n\n2072\n01:42:17,590 --> 01:42:18,870\nAll right, stop messing with it.\n\n2073\n01:42:18,870 --> 01:42:20,290\nI need to bring it online.\n\n2074\n01:42:20,290 --> 01:42:21,940\nAnd then with ROLLBACK IMMEDIATE,\n\n2075\n01:42:21,940 --> 01:42:25,610\nthat says if any transactions were\nin process, just roll them back.\n\n2076\n01:42:25,610 --> 01:42:27,240\nDon't try and finish them,\njust roll them back.\n\n2077\n01:42:27,240 --> 01:42:28,200\nUndo them.\n\n2078\n01:42:28,200 --> 01:42:30,330\nGive me this database so\nI can work with it.\n\n2079\n01:42:30,330 --> 01:42:33,450\nIf you run that,\nthen you can turn around, and\n\n2080\n01:42:33,450 --> 01:42:38,570\nrun restore database human resources with\nrecovery, and it will bring it online.\n\n2081\n01:42:38,570 --> 01:42:42,780\nHopefully, this command works for you\nthe first time, or you just wait a minute,\n\n2082\n01:42:42,780 --> 01:42:44,130\nrun it again and then it works.\n\n2083\n01:42:44,130 --> 01:42:46,880\nBut if it's still holding and\nyou're getting impatient, because there's\n\n2084\n01:42:46,880 --> 01:42:50,210\na failure and you need to get rolling,\nyou run the second command right here.\n\n2085\n01:42:50,210 --> 01:42:53,510\nFlip it into single user mode, that'll\nforce it to where you can get in and\n\n2086\n01:42:53,510 --> 01:42:57,650\nwork with it and then you do that\nrestore and you're back in business.\n\n2087\n01:42:57,650 --> 01:43:02,530\nBut I lucked out, it worked out just fine\nfor me, so if I refresh my database list,\n\n2088\n01:43:03,560 --> 01:43:06,300\nI can see there's my human\nresources database and\n\n2089\n01:43:06,300 --> 01:43:09,119\nlet's see if my records made it over\nright, I changed some phone numbers.\n\n2090\n01:43:10,650 --> 01:43:14,240\nSo if I go in here and I look,\noh, I didn't wait long enough.\n\n2091\n01:43:14,240 --> 01:43:16,390\nSee how my Indigo Saunders,\n\n2092\n01:43:16,390 --> 01:43:20,820\nthat phone number changed but Kyla Heath,\nshe still has her old number.\n\n2093\n01:43:20,820 --> 01:43:22,200\nThat means I didn't wait long enough,\n\n2094\n01:43:22,200 --> 01:43:26,360\nmy transaction logs hadn't shipped\nover yet that contained that change.\n\n2095\n01:43:26,360 --> 01:43:27,550\nSo I lost some data.\n\n2096\n01:43:27,550 --> 01:43:31,300\nI didn't lose more than five minutes\nof data, but I did lose data.\n\n2097\n01:43:31,300 --> 01:43:34,150\nThat's one of the negatives\nof transaction log shipping.\n\n2098\n01:43:34,150 --> 01:43:39,230\nThe schedule you pick determines\nhow much data you can lose, so\n\n2099\n01:43:39,230 --> 01:43:41,590\nyou gotta be careful with that.\n\n2100\n01:43:41,590 --> 01:43:44,170\nBut in this scenario,\nthis database is online on.\n\n2101\n01:43:44,170 --> 01:43:47,480\nI just need to point my end\nusers to this database, and\n\n2102\n01:43:47,480 --> 01:43:48,930\nnow they're back in the system.\n\n2103\n01:43:48,930 --> 01:43:52,480\nAnd the SQL native client doesn't\nautomatically pick this one up, so\n\n2104\n01:43:52,480 --> 01:43:54,350\neverybody's gotta be redirected.\n\n2105\n01:43:54,350 --> 01:43:57,600\nYou could do it through DNS names, or\nyou could just bake it into your software.\n\n2106\n01:43:57,600 --> 01:44:00,460\nTell your software to connect to this\nserver first and if that server's\n\n2107\n01:44:00,460 --> 01:44:02,980\nnot available, try and connect to this\none, or this one, or this one, and\n\n2108\n01:44:02,980 --> 01:44:05,690\nset all your various end points in\nthere for it to try and connect to.\n\n2109\n01:44:06,700 --> 01:44:08,370\nDoesn't take that much to\nbring it active though,\n\n2110\n01:44:08,370 --> 01:44:11,090\nyou can automate that with scripts or\nwhatever if you want.\n\n2111\n01:44:11,090 --> 01:44:12,910\nBut, I usually manually do it.\n\n2112\n01:44:12,910 --> 01:44:14,640\nIf there's a giant failure, you go and\n\n2113\n01:44:14,640 --> 01:44:17,140\nwake the database up and\nit's ready to rock.\n\n2114\n01:44:18,340 --> 01:44:23,180\nAlright, so we gotta take a look at SQL\nclustering, then we did mirroring and\n\n2115\n01:44:23,180 --> 01:44:25,240\nlastly we did transaction log shipping.\n\n2116\n01:44:25,240 --> 01:44:27,990\nThree different ways that we can\nmake our database redundant and\n\n2117\n01:44:27,990 --> 01:44:31,340\nprovide people access\neven in times of failure.\n\n2118\n01:44:31,340 --> 01:44:32,910\nNone of them were\nparticularly hard to set up.\n\n2119\n01:44:32,910 --> 01:44:34,070\nThey all had their little quirks.\n\n2120\n01:44:34,070 --> 01:44:35,810\nLittle problems that happened, but for\n\n2121\n01:44:35,810 --> 01:44:39,310\nthe most part, we restore it, get it back\nin action, and you're ready to rock.\n\n2122\n01:44:40,440 --> 01:44:42,900\nAll right.\nWell, let me remind you guys.\n\n2123\n01:44:42,900 --> 01:44:46,110\nIf you have questions on any of this,\nfeel free ask.\n\n2124\n01:44:46,110 --> 01:44:48,520\nLive during the show you\ncan go to itpro.tv/live.\n\n2125\n01:44:48,520 --> 01:44:50,320\nPost your questions right there.\n\n2126\n01:44:50,320 --> 01:44:52,420\nYou'll see the chat room\nright beneath the video.\n\n2127\n01:44:52,420 --> 01:44:55,940\nIf you have questions after the show,\nuse our Q&A forums.\n\n2128\n01:44:55,940 --> 01:44:57,610\nAt the top of each page,\nyou'll see a link that says Q&A,\n\n2129\n01:44:57,610 --> 01:44:59,460\nit'll take you into the forums.\n\n2130\n01:44:59,460 --> 01:45:00,370\nPost your questions there.\n\n2131\n01:45:00,370 --> 01:45:01,790\nWe monitor and answer.\n\n2132\n01:45:01,790 --> 01:45:04,650\nWe wanna make sure you guys have\nthe information you need to be successful.\n\n2133\n01:45:05,815 --> 01:45:09,125\nAll right well I hope you guys enjoyed\nthe show, signing off for ITProTV.\n\n2134\n01:45:09,125 --> 01:45:12,384\nI'm Don Pezet and\nI will see you next time.\n\n2135\n01:45:12,384 --> 01:45:17,646\n[MUSIC]\n\n",
          "vimeoId": "106382514"
        },
        {
          "description": "In this episode Don demonstrates assorted tools and techniques for monitoring your SQL server to ensure health and peak performance.",
          "length": "6065",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/010-Monitoring-SQL-Server.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/010-Monitoring-SQL-Server-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/microsoftsql/010-Monitoring-SQL-Server-sm.jpg",
          "title": "Monitoring SQL Server",
          "transcript": "1\n00:00:00,000 --> 00:00:10,000\n[MUSIC]\n\n2\n00:00:33,347 --> 00:00:37,000\nAll right, good morning, good afternoon,\nand good evening, and welcome back.\n\n3\n00:00:37,000 --> 00:00:40,640\nTo another episode of ITProTV,\nI'm your host Don Pezet.\n\n4\n00:00:40,640 --> 00:00:43,880\nBack again with another\nepisode of Microsoft SQL.\n\n5\n00:00:43,880 --> 00:00:47,065\nNow we have been on a roller\ncoaster ride of adventure.\n\n6\n00:00:47,065 --> 00:00:51,050\n[LAUGH] As we've gone through learning\nabout setting up our database servers,\n\n7\n00:00:51,050 --> 00:00:55,343\nand doing our redundancy and other types\nof optimizations and things like that.\n\n8\n00:00:55,343 --> 00:00:59,330\nNow we're gonna switch gears\ninto just regular operation.\n\n9\n00:00:59,330 --> 00:01:01,970\nAfter you spend all of that time\ngetting your server set up,\n\n10\n00:01:01,970 --> 00:01:05,670\ngetting everything put just the way you\nwanted it, optimizing your hard drives,\n\n11\n00:01:05,670 --> 00:01:09,343\nand setting it loose to your developers,\nwell your job doesn't end.\n\n12\n00:01:09,343 --> 00:01:13,525\nRight?\nNow, you get the routine maintenance task.\n\n13\n00:01:13,525 --> 00:01:15,490\nRight?\nJust keeping the server up and\n\n14\n00:01:15,490 --> 00:01:16,470\noperational.\n\n15\n00:01:16,470 --> 00:01:20,160\nSo, in this episode we're going to focus\non How to monitor your SQL server.\n\n16\n00:01:20,160 --> 00:01:24,520\nHow to look at it and see how performance\nis doing, how well it's running and\n\n17\n00:01:24,520 --> 00:01:26,890\nwhether or not we need to take actions.\n\n18\n00:01:26,890 --> 00:01:30,580\nWay back, in the beginning of the series\nwe talked about optimizing your hard disks\n\n19\n00:01:30,580 --> 00:01:35,190\nand how you could do RAID 5, but RAID 10\nwill get you a better performance profile.\n\n20\n00:01:35,190 --> 00:01:38,510\nDifferent solutions like that\nreally improve performance.\n\n21\n00:01:38,510 --> 00:01:40,240\nBut you may not need that.\n\n22\n00:01:40,240 --> 00:01:43,700\nYou may have a very low-utilization\ndatabase where you don't need to spend\n\n23\n00:01:43,700 --> 00:01:48,630\na ton of money on hardware, because the\ndatabase just isn't very resource hungry.\n\n24\n00:01:48,630 --> 00:01:49,560\nWell, how do we know?\n\n25\n00:01:49,560 --> 00:01:52,045\nHow do we know how\nresource-hungry our database is?\n\n26\n00:01:52,045 --> 00:01:54,085\nWell, it really depends.\n\n27\n00:01:54,085 --> 00:01:58,180\n[LAUGH] Unfortunately,\nthere's no one size fits all answer.\n\n28\n00:01:58,180 --> 00:02:01,670\nEverybody's database is a little bit\ndifferent and how we do our queries,\n\n29\n00:02:01,670 --> 00:02:03,270\nthose all make changes.\n\n30\n00:02:03,270 --> 00:02:05,030\nRight?\nMake it difficult to just\n\n31\n00:02:05,030 --> 00:02:06,550\nhave a one size fits all.\n\n32\n00:02:06,550 --> 00:02:10,290\nIf it was, if there was a one solution\nworks for everybody type environment,\n\n33\n00:02:10,290 --> 00:02:13,940\nwe wouldn't have to worry about indexes,\nMicrosoft would create the indexes for us.\n\n34\n00:02:13,940 --> 00:02:14,550\nRight?\nBut\n\n35\n00:02:14,550 --> 00:02:18,400\ninstead we have tools like the database\nengine tuning adviser, where we can\n\n36\n00:02:18,400 --> 00:02:22,400\nfeed it data and it makes decisions\nbased off of the data that we give it.\n\n37\n00:02:22,400 --> 00:02:26,570\nKnowing that our use case scenario may\nbe unique across the entire planet.\n\n38\n00:02:26,570 --> 00:02:29,500\nThere may not be a single other company\nout there that does work the way that we\n\n39\n00:02:29,500 --> 00:02:31,992\ndo it, so it's got to customize it for us.\n\n40\n00:02:31,992 --> 00:02:32,830\nAll right.\n\n41\n00:02:32,830 --> 00:02:34,960\nSo we need to watch our server.\n\n42\n00:02:34,960 --> 00:02:38,162\nAnd know when it's time to go in and\nmake those changes.\n\n43\n00:02:38,162 --> 00:02:39,550\nAll right.\n\n44\n00:02:39,550 --> 00:02:41,020\nWell, let's talk about one scenario first.\n\n45\n00:02:41,020 --> 00:02:43,170\nThis is the one that I\nget asked most commonly.\n\n46\n00:02:43,170 --> 00:02:47,750\nDon, I'm about to set up a database\nserver, what hardware do I need?\n\n47\n00:02:47,750 --> 00:02:48,930\nHow many CPUs do I need?\n\n48\n00:02:48,930 --> 00:02:51,670\nWhat disk structure,\nwhat should I start out with?\n\n49\n00:02:51,670 --> 00:02:53,330\nRight?\nThat's a real tough one.\n\n50\n00:02:53,330 --> 00:02:55,000\nRight?\nIt's a tough one because you don't have\n\n51\n00:02:55,000 --> 00:02:56,130\na database in production yet.\n\n52\n00:02:56,130 --> 00:02:58,180\nYou don't have any metrics to measure of.\n\n53\n00:02:58,180 --> 00:03:00,130\nThis is something that is brand new.\n\n54\n00:03:00,130 --> 00:03:05,490\nSo how do you spec out a server before\nyou even know what you're going to need.\n\n55\n00:03:05,490 --> 00:03:06,170\nAll right?\n\n56\n00:03:06,170 --> 00:03:08,480\nWell, Microsoft has a neat little utility.\n\n57\n00:03:08,480 --> 00:03:11,440\nThis used to be a utility you had\nto go to Microsoft and download but\n\n58\n00:03:11,440 --> 00:03:15,570\nin the last few versions of SQL,\nit's been baked into the product, and\n\n59\n00:03:15,570 --> 00:03:18,640\nit's called the SQL IO Simulator.\n\n60\n00:03:18,640 --> 00:03:23,630\nThe SQL Input Output Simulator.\n\n61\n00:03:23,630 --> 00:03:27,450\nWhat it does, is it allows you to\nbring up like a test environment for\n\n62\n00:03:27,450 --> 00:03:31,190\nyour database, and\nrun the IO Simulator on it,\n\n63\n00:03:31,190 --> 00:03:34,820\nproviding it a work load that's similar\nto what you're gonna need in production.\n\n64\n00:03:34,820 --> 00:03:38,030\nAnd then it'll run it again through\nwhatever machine you're on right then and\n\n65\n00:03:38,030 --> 00:03:40,540\ntell you whether that machine\ncan do that job or not.\n\n66\n00:03:40,540 --> 00:03:42,430\nAnd if the machine can do the job, great.\n\n67\n00:03:42,430 --> 00:03:45,740\nBut if it can't, it tells you\nthe specs that you're going to need,\n\n68\n00:03:45,740 --> 00:03:49,060\nexactly how much disk IO activity\nyou're gonna be generating.\n\n69\n00:03:49,060 --> 00:03:52,230\nIt's a really cool utility\nbecause you might be one person.\n\n70\n00:03:52,230 --> 00:03:57,440\nBut the SQLIO simulator can generate\ntraffic that is reflective of tons and\n\n71\n00:03:57,440 --> 00:03:59,740\ntons of people, hundreds,\nthousands of users.\n\n72\n00:03:59,740 --> 00:04:04,860\nNow, you'll see people talk about\nthe SQLIO simulator on the Internet, and\n\n73\n00:04:04,860 --> 00:04:07,190\nsome of them have it right\nsome of them have it wrong.\n\n74\n00:04:07,190 --> 00:04:10,390\nIt's really designed to simulate IO.\n\n75\n00:04:10,390 --> 00:04:11,810\nRight?\nThat's the name.\n\n76\n00:04:11,810 --> 00:04:15,920\nAnd it's used for specking out the proper\nserver to use in your environment.\n\n77\n00:04:15,920 --> 00:04:18,480\nYou'll hear people out there who\nsay to use it for stress testing.\n\n78\n00:04:18,480 --> 00:04:20,520\nThis is a great way to\nstress test your server.\n\n79\n00:04:20,520 --> 00:04:21,630\nWell, it doesn't do that.\n\n80\n00:04:21,630 --> 00:04:23,520\nAll right?\nIt doesn't stress test.\n\n81\n00:04:23,520 --> 00:04:27,810\nA stress test will basically find\nout what your server is capable of.\n\n82\n00:04:27,810 --> 00:04:31,900\nIt'll slowly increase it's load until\nit reaches the limit of your server,\n\n83\n00:04:31,900 --> 00:04:34,540\nthen it'll tell you what your\nserver's maximum capabilities are.\n\n84\n00:04:34,540 --> 00:04:35,320\nRight?\n\n85\n00:04:35,320 --> 00:04:37,170\nThe SQLIOSim doesn't do that.\n\n86\n00:04:37,170 --> 00:04:38,610\nYou give it a certain amount of load and\n\n87\n00:04:38,610 --> 00:04:41,050\neither your server performs it or\nit doesn't.\n\n88\n00:04:41,050 --> 00:04:44,670\nIt doesn't find the sweet spot,\nit doesn't find that tipping point.\n\n89\n00:04:44,670 --> 00:04:47,380\nThere's a lot of third party\nutilities out there that do that.\n\n90\n00:04:47,380 --> 00:04:51,790\nBut what the SQLIOSim does is it let's\nyou specify a level of activity and\n\n91\n00:04:51,790 --> 00:04:54,500\nthen the server will react in kind.\n\n92\n00:04:54,500 --> 00:04:58,800\nNow, it is built into SQL, so it's not\nsomething I have to install, but in\n\n93\n00:04:58,800 --> 00:05:03,300\nthe episode notes for this show, I'm gonna\nput the link here to Microsoft's page.\n\n94\n00:05:03,300 --> 00:05:07,840\nEven though we don't need to download it\nanymore, it's just part of the system.\n\n95\n00:05:07,840 --> 00:05:10,950\nIt's still a good idea to\ngo to Microsoft's site and\n\n96\n00:05:10,950 --> 00:05:13,040\ncheck out some information\non how to use it.\n\n97\n00:05:13,040 --> 00:05:15,042\nThe product is very complex.\n\n98\n00:05:15,042 --> 00:05:18,520\nI'm gonna show you the quickest,\neasiest way to run it.\n\n99\n00:05:18,520 --> 00:05:21,000\nBut it's also one of the least effective.\n\n100\n00:05:21,000 --> 00:05:24,600\nThe quickest, easiest way is to just run\nthe simulator and point it at your server.\n\n101\n00:05:24,600 --> 00:05:30,200\nAnd it's gonna reach in there and generate\na bunch of traffic for a generic data set.\n\n102\n00:05:30,200 --> 00:05:32,040\nThat doesn't reflect your company at all.\n\n103\n00:05:32,040 --> 00:05:35,820\nIt reflects some general idea\nthat somebody at Microsoft had.\n\n104\n00:05:35,820 --> 00:05:38,550\nYour use case scenario may\nbe completely different.\n\n105\n00:05:38,550 --> 00:05:42,120\nSo for the SQLIOSim to be truly useful,\n\n106\n00:05:42,120 --> 00:05:45,430\nyou need to create a custom workload for\nit.\n\n107\n00:05:45,430 --> 00:05:49,030\nAnd so when you run it, you'll see here\nin the syntax, or here's the downloads.\n\n108\n00:05:49,030 --> 00:05:52,160\nIf you're running an older version of\nSQL you can download a newer versions.\n\n109\n00:05:52,160 --> 00:05:53,090\nYou don't need it.\n\n110\n00:05:53,090 --> 00:05:56,160\nBut, so\nthere's all the different downloads.\n\n111\n00:05:56,160 --> 00:05:59,040\nAnd then it goes on to talk about\nthe command line parameters, and\n\n112\n00:05:59,040 --> 00:06:02,960\nthis is the important one right here,\n-cfg and a file.\n\n113\n00:06:02,960 --> 00:06:08,020\nYou can provide a configuration file to it\nthat'll tell it exactly what test to run,\n\n114\n00:06:08,020 --> 00:06:09,590\nhow much load to generate.\n\n115\n00:06:09,590 --> 00:06:13,740\nAnd what you're doing is you're saying,\nwe anticipate having this many users, and\n\n116\n00:06:13,740 --> 00:06:16,640\nwe anticipate them running these types\nof queries that are gonna generate this\n\n117\n00:06:16,640 --> 00:06:17,240\namount of disk IO.\n\n118\n00:06:18,310 --> 00:06:19,490\nCan my server handle it.\n\n119\n00:06:19,490 --> 00:06:20,080\nRight?\n\n120\n00:06:20,080 --> 00:06:23,380\nOr is this server not enough and\nI need to step up to do something more.\n\n121\n00:06:23,380 --> 00:06:23,880\nRight?\n\n122\n00:06:23,880 --> 00:06:27,720\nAnd you run the test and it'll tell you\nwhether your current server can do it, or\n\n123\n00:06:27,720 --> 00:06:29,450\nwhether you need to bump up to a new one.\n\n124\n00:06:29,450 --> 00:06:32,030\nSo, it is a great way to\nspec out that new system.\n\n125\n00:06:32,030 --> 00:06:35,990\nAll right, but that configuration file\nis kind of complex to write and so\n\n126\n00:06:35,990 --> 00:06:38,710\nthey've got all\nthe documentation right here.\n\n127\n00:06:38,710 --> 00:06:40,520\nIt's basically an XML document, and\n\n128\n00:06:40,520 --> 00:06:45,540\nyou specify all the information that\nis gonna be reflective of your server.\n\n129\n00:06:45,540 --> 00:06:48,530\nHow long your IOs are gonna be,\nwhether you're doing write through,\n\n130\n00:06:48,530 --> 00:06:52,430\nall that other stuff to be able to go\nin and craft that configuration file.\n\n131\n00:06:52,430 --> 00:06:56,240\nNow I can't tell you what to put there\nbecause I don't know your use case\n\n132\n00:06:56,240 --> 00:06:59,360\nscenario, I don't know what your\ndatabase is going to be like.\n\n133\n00:06:59,360 --> 00:07:02,630\nSo, if you're just trying to get\narbitrary numbers together you can run it\n\n134\n00:07:02,630 --> 00:07:04,030\nwith its generic config file.\n\n135\n00:07:04,030 --> 00:07:07,960\nBut it's not gonna be as effective\nas if you had configured it just for\n\n136\n00:07:07,960 --> 00:07:08,882\nyour environment.\n\n137\n00:07:08,882 --> 00:07:11,380\nAll right?\nLet me show you how it works.\n\n138\n00:07:11,380 --> 00:07:18,180\nSo here is my SQL server and, sorry,\nlet me get out of all this junk here.\n\n139\n00:07:18,180 --> 00:07:20,590\nAnd I'll just get into my\nSQL Management Studio.\n\n140\n00:07:20,590 --> 00:07:22,400\nThis is the one that we've\nbeen using all-show long.\n\n141\n00:07:22,400 --> 00:07:24,480\nThis is WINSQL01.\n\n142\n00:07:24,480 --> 00:07:25,810\nIt's already running SQL.\n\n143\n00:07:25,810 --> 00:07:26,820\nIt's up and happy.\n\n144\n00:07:26,820 --> 00:07:30,420\nTo run the SQLIOSim,\nyou do already have to be running SQL.\n\n145\n00:07:30,420 --> 00:07:33,610\nI've only got one database on here,\nmy human resources database.\n\n146\n00:07:33,610 --> 00:07:36,530\nAnd I've disabled all the transaction\nlog shipping and mirroring and\n\n147\n00:07:36,530 --> 00:07:38,420\nall that other stuff we set\nup in previous episodes.\n\n148\n00:07:38,420 --> 00:07:39,420\nThat's all gone.\n\n149\n00:07:39,420 --> 00:07:41,520\nSo it's just a real simple database.\n\n150\n00:07:41,520 --> 00:07:43,070\nThe server is sitting here idle,\n\n151\n00:07:43,070 --> 00:07:45,580\nyou might have noticed my task\nmanager when I first fired this up.\n\n152\n00:07:46,860 --> 00:07:48,880\nThe server's not really doing much.\n\n153\n00:07:48,880 --> 00:07:52,376\nRight?\nMy CPU is sitting at about 1% now.\n\n154\n00:07:52,376 --> 00:07:54,375\nMost of that was me firing\nup the task manager.\n\n155\n00:07:54,375 --> 00:07:57,757\nI'm using a pittance of\nthe memory on my server.\n\n156\n00:07:57,757 --> 00:07:59,730\nAnd my network is near dead.\n\n157\n00:07:59,730 --> 00:08:03,590\nMy remote desktop connection is generating\nthat traffic, about 64K of traffic.\n\n158\n00:08:03,590 --> 00:08:07,050\nSo, the server's not\nreally doing anything.\n\n159\n00:08:07,050 --> 00:08:11,410\nBut when I fire up the SQL IO sim,\nit's gonna act like it's doing a lot.\n\n160\n00:08:11,410 --> 00:08:13,840\nThe server's going to get really busy.\n\n161\n00:08:13,840 --> 00:08:17,050\nSo that's one of the things that\nwe can kind of watch and see.\n\n162\n00:08:17,050 --> 00:08:18,630\nNow, this is the task manager.\n\n163\n00:08:18,630 --> 00:08:22,965\nAnd the task manager is good for seeing\nwhat your system is doing right now.\n\n164\n00:08:22,965 --> 00:08:24,670\nRight?\nAnd the way I got to that,\n\n165\n00:08:24,670 --> 00:08:25,560\nthere's several ways, but\n\n166\n00:08:25,560 --> 00:08:28,620\nthe way I usually do is to right\nclick on the system bar down here.\n\n167\n00:08:28,620 --> 00:08:30,700\nThe task bar, sorry.\n\n168\n00:08:30,700 --> 00:08:33,020\nAnd then, we go to task manager.\n\n169\n00:08:33,020 --> 00:08:35,080\nIt's right there.\n\n170\n00:08:35,080 --> 00:08:37,700\nAnd so, we can pull that up and\ngo to the performance tab.\n\n171\n00:08:37,700 --> 00:08:41,780\nAnd you can see a small window of\ntime in your server's life, right?\n\n172\n00:08:41,780 --> 00:08:42,500\nSee the little note here?\n\n173\n00:08:42,500 --> 00:08:43,570\nIt says 60 seconds.\n\n174\n00:08:43,570 --> 00:08:46,810\nI'm seeing 60 seconds in\nthe life of my server.\n\n175\n00:08:46,810 --> 00:08:50,890\nAnd I can see CPU, memory, and network.\n\n176\n00:08:50,890 --> 00:08:52,820\nNow, I don't see Disk I/O there.\n\n177\n00:08:52,820 --> 00:08:54,500\nThat's kinda weak, right?\n\n178\n00:08:54,500 --> 00:08:58,480\nSo it'd be nice if we could see a little\nbit more information about my server.\n\n179\n00:08:58,480 --> 00:09:02,130\nAnd you'll notice right down here,\nwe've got Open Resource Monitor.\n\n180\n00:09:02,130 --> 00:09:05,620\nAnd if you go into the Resource Monitor,\nyou'll see even more information about\n\n181\n00:09:05,620 --> 00:09:07,970\nyour server, and\nthis is a little more useful.\n\n182\n00:09:07,970 --> 00:09:14,700\nThe Resource Monitor breaks it down by\nCPU, disk Network and Memory, all right?\n\n183\n00:09:14,700 --> 00:09:17,440\nSo it's breaking all that down and, you\nknow my head's covering some of that up.\n\n184\n00:09:17,440 --> 00:09:18,960\nLet me move it, there you go.\n\n185\n00:09:18,960 --> 00:09:20,593\nAnd it breaks it downm and\nyou can see it all at once.\n\n186\n00:09:20,593 --> 00:09:23,050\nAnd so, I don't just see CPU,\nnetwork, and memory.\n\n187\n00:09:23,050 --> 00:09:26,360\nI also see Disk I/O, and\nthat's really handy for\n\n188\n00:09:26,360 --> 00:09:29,230\nseeing what my server is doing right now.\n\n189\n00:09:29,230 --> 00:09:33,470\nI can see who is responsible for\nit, who's generating that load.\n\n190\n00:09:33,470 --> 00:09:35,260\nDisk I/O is our number one bottleneck, so\n\n191\n00:09:35,260 --> 00:09:37,850\nthat's normally the one\nI'm watching out for.\n\n192\n00:09:37,850 --> 00:09:41,451\nAnd so, you can see the files\nthat are being heavily hit,\n\n193\n00:09:41,451 --> 00:09:44,250\nwho's doing the real work, and so on.\n\n194\n00:09:44,250 --> 00:09:46,400\nAll right.\nSo my server's pretty idle right now.\n\n195\n00:09:46,400 --> 00:09:50,450\nI'm gonna fire up the SQL IO Sim and\nwe'll see that change.\n\n196\n00:09:50,450 --> 00:09:52,000\nAll right,\nI'm gonna open up a command prompt.\n\n197\n00:09:54,280 --> 00:09:57,715\nAnd let me bump up the font size, so you\nguys will be able to see this better cuz\n\n198\n00:09:57,715 --> 00:10:00,200\nit actually is kind of neat,\nwhat it's gonna do here.\n\n199\n00:10:02,940 --> 00:10:05,060\nAnd, there we go.\n\n200\n00:10:05,060 --> 00:10:08,570\nAll right,\nnow the utility is included in SQL.\n\n201\n00:10:08,570 --> 00:10:10,410\nIt's not in my executable path though.\n\n202\n00:10:10,410 --> 00:10:15,130\nIf I try to run SQL IO Sim like that,\nI get command not found.\n\n203\n00:10:15,130 --> 00:10:17,600\nDoesn't mean it's not there,\nit's just not in my path.\n\n204\n00:10:17,600 --> 00:10:20,170\nSo I need to change into\nthe directory where it is.\n\n205\n00:10:20,170 --> 00:10:21,630\nAnd it's installed with SQL.\n\n206\n00:10:21,630 --> 00:10:24,500\nSo it's in the bin folder for\nyour instance.\n\n207\n00:10:24,500 --> 00:10:27,140\nSo I need to get into program files,\n\n208\n00:10:28,720 --> 00:10:34,030\nMicrosoft SQL server, MSSQL 11.\n\n209\n00:10:34,030 --> 00:10:36,190\nAnd then I've got multiple instances.\n\n210\n00:10:36,190 --> 00:10:37,910\nI'm gonna go into my default instance.\n\n211\n00:10:40,960 --> 00:10:43,590\nAnd then, into my bin folder.\n\n212\n00:10:43,590 --> 00:10:46,555\nSo that's a nice long path for\nus there, right?\n\n213\n00:10:46,555 --> 00:10:52,116\nC:/Program Files/Microsoft\nSQL Server/MSSQL11.\n\n214\n00:10:52,116 --> 00:10:54,010\nand what your instance name is.\n\n215\n00:10:54,010 --> 00:11:00,010\nI went into default instance,\n/MSSQL/binn, that's where the file is.\n\n216\n00:11:00,010 --> 00:11:04,750\nAnd in there, if I run SQL IO Sim,\nI get a message saying,\n\n217\n00:11:04,750 --> 00:11:06,830\nno files have been configured,\nblah blah blah.\n\n218\n00:11:06,830 --> 00:11:08,458\nRight?\nSo it failed to run.\n\n219\n00:11:08,458 --> 00:11:11,090\nWell, that's cuz I didn't provide\nit any of the command line stuff.\n\n220\n00:11:11,090 --> 00:11:15,180\nSo that's a really long path there,\nto be able to execute it.\n\n221\n00:11:15,180 --> 00:11:17,850\nIf you're just running it one time,\nyou change into that path.\n\n222\n00:11:17,850 --> 00:11:19,660\nYou run it, and you're in business.\n\n223\n00:11:19,660 --> 00:11:24,097\nBut, if this is something you're\ngonna be running frequently,\n\n224\n00:11:24,097 --> 00:11:28,790\nyou might wanna consider adding\nthat to your path variable, right?\n\n225\n00:11:28,790 --> 00:11:34,750\nIn Windows, you have a variable\ncalled path, which is stored in.\n\n226\n00:11:34,750 --> 00:11:35,430\nOh, is it percent path?\n\n227\n00:11:36,780 --> 00:11:38,560\nLet's see if I can remember, there we go.\n\n228\n00:11:38,560 --> 00:11:40,130\nPercent path percent, and\n\n229\n00:11:40,130 --> 00:11:44,650\nhere's the folders that it looks to when\nit goes to find out where a program is.\n\n230\n00:11:44,650 --> 00:11:47,770\nSo if you just run a program,\nit looks in all these different folders.\n\n231\n00:11:47,770 --> 00:11:50,860\nSo we could add this big long\nfolder to it, and that would work.\n\n232\n00:11:50,860 --> 00:11:53,292\nBut I'm just going to run this once,\nso I'll run it right from here.\n\n233\n00:11:53,292 --> 00:11:54,650\nAl lright.\n\n234\n00:11:54,650 --> 00:11:58,680\nNow, the simplest way to get this thing\nfired up is to use a generic config that's\n\n235\n00:11:58,680 --> 00:12:02,268\nincluded with SQL IO sims,\nso that's what I'm gonna do.\n\n236\n00:12:02,268 --> 00:12:04,560\nIt is gonna generate some log files, so\n\n237\n00:12:04,560 --> 00:12:07,270\nit's a good idea to create\na folder somewhere to store them.\n\n238\n00:12:07,270 --> 00:12:09,620\nAnd I think I already have one.\n\n239\n00:12:09,620 --> 00:12:10,430\nLet's see.\nYeah,\n\n240\n00:12:10,430 --> 00:12:13,520\nI've got C:/sim is a folder that I made.\n\n241\n00:12:13,520 --> 00:12:16,350\nAnd I'm just gonna make sure that\nI've deleted everything out of that\n\n242\n00:12:16,350 --> 00:12:19,000\nin case I have any old records in there.\n\n243\n00:12:19,000 --> 00:12:20,690\nThere we go, all right.\n\n244\n00:12:20,690 --> 00:12:23,670\nSo now, I've got that empty sim\nfolder sitting there waiting for\n\n245\n00:12:23,670 --> 00:12:27,280\nme, and I'm gonna generate some logs and\ndump them in there.\n\n246\n00:12:27,280 --> 00:12:28,382\nAll right.\n\n247\n00:12:28,382 --> 00:12:34,340\nSo the command I'm gonna run\nis sqliosim -dir C:\\sim.\n\n248\n00:12:34,340 --> 00:12:40,860\nThat's the directory that it's gonna be\nusing for all of its temporary files.\n\n249\n00:12:40,860 --> 00:12:43,060\nAnd then, I'll say -log.\n\n250\n00:12:43,060 --> 00:12:46,265\nIt's gonna log it's information in C:\\sim.\n\n251\n00:12:46,265 --> 00:12:49,240\nNow, notice I'm not doing a -cfg.\n\n252\n00:12:49,240 --> 00:12:52,560\nThat's where I would provide\na config file, and I don't have one.\n\n253\n00:12:52,560 --> 00:12:53,150\nRight?\nSo\n\n254\n00:12:53,150 --> 00:12:56,970\nI'm just gonna use the generic\none that's built into SQL IO sim.\n\n255\n00:12:56,970 --> 00:12:59,630\nI told it the directory to use for\nit's temporary files, and\n\n256\n00:12:59,630 --> 00:13:01,960\nthe directory to store the logs in.\n\n257\n00:13:01,960 --> 00:13:03,104\nWhen you run it, it's going to.\n\n258\n00:13:03,104 --> 00:13:04,590\nOops.\n\n259\n00:13:04,590 --> 00:13:06,850\nFor the log, you actually have to\ngive it a file name, I forgot that.\n\n260\n00:13:06,850 --> 00:13:09,275\nSo, C:/sim/log.xml is what I'll do.\n\n261\n00:13:09,275 --> 00:13:10,358\nAll right.\n\n262\n00:13:10,358 --> 00:13:13,690\nNow, it's going to start running.\n\n263\n00:13:13,690 --> 00:13:16,970\nIt's going to connect to my SQL server,\nmy default instance here.\n\n264\n00:13:16,970 --> 00:13:19,750\nAnd it's going to start\ngenerating some workload.\n\n265\n00:13:19,750 --> 00:13:21,880\nNow, it's still waking up right now.\n\n266\n00:13:21,880 --> 00:13:24,770\nIt's gotta series of tests\nthat it's gonna run, and\n\n267\n00:13:24,770 --> 00:13:28,110\neach one of these is a process ID for\nsomething that it's doing.\n\n268\n00:13:28,110 --> 00:13:31,040\nYou'll see it doing check point tests,\noverall tests,\n\n269\n00:13:31,040 --> 00:13:32,865\ndoing displays, basic stuff.\n\n270\n00:13:32,865 --> 00:13:33,890\nRight?\n\n271\n00:13:33,890 --> 00:13:36,080\nEventually, we're gonna\nsee this list blow up, and\n\n272\n00:13:36,080 --> 00:13:39,940\nall of a sudden you'll see like 11 more\ntests that is running simultaneously.\n\n273\n00:13:39,940 --> 00:13:42,640\nAnd that's a generating\nload on the server, and\n\n274\n00:13:42,640 --> 00:13:46,020\nyou can watch it happen back\nhere in my resource monitor.\n\n275\n00:13:46,020 --> 00:13:48,470\nSee how my CPU spiked\nwhen the test started?\n\n276\n00:13:48,470 --> 00:13:51,372\nAnd now, where I was idling at 1 or\n\n277\n00:13:51,372 --> 00:13:54,760\n2%, now I'm idling at what\nlooks like closer to 20%.\n\n278\n00:13:54,760 --> 00:13:58,490\nI can see my disk I/O has\ngone up significantly.\n\n279\n00:13:58,490 --> 00:14:01,360\nIt is thrashing my hard\ndrives pretty hard right now.\n\n280\n00:14:01,360 --> 00:14:04,080\nMy network activity has\nstarted to spike a bit, and\n\n281\n00:14:04,080 --> 00:14:09,095\nmy memory consumption is quadrupled\nbecause the server is now doing something.\n\n282\n00:14:09,095 --> 00:14:11,860\nRight?\nIt's acting like it's under user load,\n\n283\n00:14:11,860 --> 00:14:14,170\nlike I've got users in the system\nthat are running queries,\n\n284\n00:14:14,170 --> 00:14:15,710\nthat are starting to do actions.\n\n285\n00:14:15,710 --> 00:14:19,640\nAnd I'm starting to see the disk\nI/O reflect that as it goes in.\n\n286\n00:14:19,640 --> 00:14:22,120\nNotice how my disk I/O just dropped a lot?\n\n287\n00:14:22,120 --> 00:14:25,910\nWell, these were the first people\naccessing the database right here in\n\n288\n00:14:25,910 --> 00:14:29,340\nthe beginning, so\nalot of stuff had to be read from disc.\n\n289\n00:14:29,340 --> 00:14:33,590\nBut after the first set of initial\nqueries, alot of it gets cashed in RAM.\n\n290\n00:14:33,590 --> 00:14:35,360\nRight?\nOur indexes are in RAM and\n\n291\n00:14:35,360 --> 00:14:38,250\nour other queries and execution\nplans start to get cashed in RAM.\n\n292\n00:14:38,250 --> 00:14:41,440\nSo we expect to see a drop off, and\nthat is exactly what we see here.\n\n293\n00:14:41,440 --> 00:14:45,130\nIt's dropping off, because now a lot\nof it's just pulling out of memory,\n\n294\n00:14:45,130 --> 00:14:46,770\nnot having to go to disk.\n\n295\n00:14:46,770 --> 00:14:49,680\nBut sometimes there's queries,\nlike when somebody does a table scan,\n\n296\n00:14:49,680 --> 00:14:51,530\nand it just has to go to disk.\n\n297\n00:14:51,530 --> 00:14:54,210\nAnd so, we'll see the disk I/O\nnever gets truly eliminated.\n\n298\n00:14:55,830 --> 00:14:57,590\nAll right.\nNow, this test\n\n299\n00:14:57,590 --> 00:14:59,110\nwill run as long as we let it.\n\n300\n00:14:59,110 --> 00:15:01,140\nSo we can let it run for\none minute if we want.\n\n301\n00:15:01,140 --> 00:15:01,970\nWe can let it run for\n\n302\n00:15:01,970 --> 00:15:06,400\nan entire day if we want, to simulate\nthat load over a long period of time.\n\n303\n00:15:06,400 --> 00:15:08,580\nYou don't normally need that long though.\n\n304\n00:15:08,580 --> 00:15:11,700\nSo what it does,\nis it breaks it up into passes.\n\n305\n00:15:11,700 --> 00:15:15,500\nSee how right now, it says\nOverall Test Progress Full Test Run #1.\n\n306\n00:15:15,500 --> 00:15:17,810\nSo it's doing test run one.\n\n307\n00:15:17,810 --> 00:15:20,630\nAnd that test will take\na good ten minutes.\n\n308\n00:15:20,630 --> 00:15:23,000\nWell, it depends on your system.\n\n309\n00:15:23,000 --> 00:15:24,630\nOn this one it takes a good ten minutes.\n\n310\n00:15:24,630 --> 00:15:28,110\nIf you've got a really beefy CPU and\nstuff, with a generic config file,\n\n311\n00:15:28,110 --> 00:15:29,485\nit may take less time.\n\n312\n00:15:29,485 --> 00:15:30,520\nRight?\n\n313\n00:15:30,520 --> 00:15:33,640\nDepending on your config file,\nit could take longer or shorter.\n\n314\n00:15:33,640 --> 00:15:37,110\nOnce it's done though, it'll just turn\naround and do test run 2, and test run 3,\n\n315\n00:15:37,110 --> 00:15:38,300\nand test run 4.\n\n316\n00:15:38,300 --> 00:15:42,628\nSo I usually just wait and\nwhen test run 1 is done, I stop it, and\n\n317\n00:15:42,628 --> 00:15:45,208\nthen I can go and look at the log files.\n\n318\n00:15:45,208 --> 00:15:52,720\nIt's logging all of that right\nhere into C:/sim/log.xml.\n\n319\n00:15:52,720 --> 00:15:55,140\nThat's the log file that it's making.\n\n320\n00:15:55,140 --> 00:15:58,679\nThese other files here are the temporary\nfiles that it's using as part of\n\n321\n00:15:58,679 --> 00:16:01,130\nthe execution and\nrunning its workload and so on.\n\n322\n00:16:01,130 --> 00:16:03,350\nSo those aren't really\nimportant to me right now.\n\n323\n00:16:03,350 --> 00:16:07,300\nBut the log.xml is, and if I look\nat it it's already started to grow.\n\n324\n00:16:07,300 --> 00:16:11,310\nIt's about 10k in size and it's putting\nall my performance metrics in there.\n\n325\n00:16:11,310 --> 00:16:11,840\nAll right?\n\n326\n00:16:11,840 --> 00:16:12,980\nSo it'll keep running.\n\n327\n00:16:12,980 --> 00:16:14,580\nMy server is now under load.\n\n328\n00:16:14,580 --> 00:16:19,050\nAnd so I can see how my server's behaving,\nsee whether it can withstand the workload.\n\n329\n00:16:19,050 --> 00:16:19,930\nAnd it looks like, for\n\n330\n00:16:19,930 --> 00:16:23,330\nthe workload, this is my generic\nconfig file, my server's doing okay.\n\n331\n00:16:23,330 --> 00:16:26,480\nMy CPU is, sure it's a little bit\nbusier than it used to be, but\n\n332\n00:16:26,480 --> 00:16:27,840\nit's not terribly busy.\n\n333\n00:16:27,840 --> 00:16:30,228\nLooks like we're averaging about 6% CPU.\n\n334\n00:16:30,228 --> 00:16:33,540\nMy disk I/O is up significantly.\n\n335\n00:16:33,540 --> 00:16:35,300\nAnd if I come in here\nin my resource manager,\n\n336\n00:16:35,300 --> 00:16:37,300\nI can see who it is that's\ngenerating that, right?\n\n337\n00:16:37,300 --> 00:16:39,950\nI can sort by read bytes per second, or\n\n338\n00:16:39,950 --> 00:16:42,960\nwrite bytes per second,\ntotal bytes per second.\n\n339\n00:16:42,960 --> 00:16:43,935\nEither way I sort it,\n\n340\n00:16:43,935 --> 00:16:48,890\nSQLIOSim.com is my number one\nconsumer on its own database, right?\n\n341\n00:16:48,890 --> 00:16:52,040\nSo it's using its own little database\nthere and generating that activity.\n\n342\n00:16:52,040 --> 00:16:54,281\nSo It's the one that's responsible for it.\n\n343\n00:16:56,018 --> 00:16:59,490\nWe can also go under Network and\nsee who's generating the most data there.\n\n344\n00:16:59,490 --> 00:17:03,150\nI can see it's a service host for\nterm services.\n\n345\n00:17:03,150 --> 00:17:04,140\nWhat is that?\n\n346\n00:17:04,140 --> 00:17:04,680\nThat's me.\n\n347\n00:17:04,680 --> 00:17:07,560\nThat's my remote desktop connection\nthat uses term services.\n\n348\n00:17:08,580 --> 00:17:12,290\nAnd then under Memory,\nagain we can break this one down\n\n349\n00:17:12,290 --> 00:17:15,845\nby looking at who's got the most\ncommits and biggest working set.\n\n350\n00:17:15,845 --> 00:17:18,000\nSQLISOSim is at the top of both of those,\nright?\n\n351\n00:17:18,000 --> 00:17:20,750\nIt's what's consuming\nall of this activity.\n\n352\n00:17:20,750 --> 00:17:23,700\nBut that gives you an example of how\nyou can look in and see what software\n\n353\n00:17:23,700 --> 00:17:27,190\nis consuming resources on your system,\nto look for contention there.\n\n354\n00:17:27,190 --> 00:17:29,490\nIt doesn't help us inside of\nthe database itself, though.\n\n355\n00:17:29,490 --> 00:17:32,550\nI don't know exactly which table\nis generating this load or\n\n356\n00:17:32,550 --> 00:17:34,700\nwhich user is performing the action.\n\n357\n00:17:34,700 --> 00:17:37,902\nI don't see that here, right, but\nI do get a high level view of it.\n\n358\n00:17:37,902 --> 00:17:42,825\nAll right, so pretty neat stuff there.\n\n359\n00:17:42,825 --> 00:17:45,619\nSQLIOSim is part of the system,\nyou can use it.\n\n360\n00:17:45,619 --> 00:17:50,532\nWriting the config file, that's the real\nchallenge, getting a good config\n\n361\n00:17:50,532 --> 00:17:55,410\nfile in place that has your kind\nof scenario, your server workload.\n\n362\n00:17:55,410 --> 00:17:57,930\nThat's what's gonna tell you whether or\nnot your server's going to be effective.\n\n363\n00:17:59,350 --> 00:18:03,814\nNotice how it's doing a lot of reads and\nwrites, some of these accesses, they'll go\n\n364\n00:18:03,814 --> 00:18:07,920\nto sleep, and they'll wake back up, so\nit does a lot of really complex stuff.\n\n365\n00:18:07,920 --> 00:18:10,460\nAnd it'll sit here and run for a while.\n\n366\n00:18:10,460 --> 00:18:12,940\nIt's only 40% done now,\nI'm not gonna wait for it.\n\n367\n00:18:12,940 --> 00:18:13,695\nI'll just cancel it out.\n\n368\n00:18:13,695 --> 00:18:15,962\nYou just hit Ctrl+C to stop it.\n\n369\n00:18:15,962 --> 00:18:18,200\nCtrl+C breaks it out.\n\n370\n00:18:18,200 --> 00:18:21,540\nI should have let it, well normally\nyou'd let it finish that first workload,\n\n371\n00:18:21,540 --> 00:18:23,120\nand then it goes to the second test.\n\n372\n00:18:23,120 --> 00:18:24,450\nAnd when you break out of it,\n\n373\n00:18:24,450 --> 00:18:27,810\nyour main log will have all the\ninformation you need for that first task.\n\n374\n00:18:27,810 --> 00:18:29,250\nSince I broke mine earlier,\nI won't have that.\n\n375\n00:18:29,250 --> 00:18:33,490\nAll right, so like I said,\n\n376\n00:18:33,490 --> 00:18:37,700\nutility built into SQL,\ngreat thing to use to monitor your server.\n\n377\n00:18:39,610 --> 00:18:41,910\nActually, I should have left that running.\n\n378\n00:18:41,910 --> 00:18:45,025\nLet me bring that back up again.\n\n379\n00:18:45,025 --> 00:18:47,191\nSo the reason I wanted to\nleave it running is so\n\n380\n00:18:47,191 --> 00:18:50,673\nthat I could have a little bit load on\nthe system, a little bit more load.\n\n381\n00:18:50,673 --> 00:18:55,437\nI mentioned how I get high visibility\nin the resource monitor, but\n\n382\n00:18:55,437 --> 00:18:58,000\nI don't get detailed visibility.\n\n383\n00:18:58,000 --> 00:19:01,870\nI really can't see into what's\ngoing on inside of SQL.\n\n384\n00:19:01,870 --> 00:19:04,620\nThere's other tools we have\nthat can show us that.\n\n385\n00:19:04,620 --> 00:19:08,152\nAnd it's just a matter of using\nthe right tool for the job.\n\n386\n00:19:08,152 --> 00:19:11,800\nSo SQLIOSim is what I was really\ntrying to demonstrate there.\n\n387\n00:19:11,800 --> 00:19:14,640\nAnd that's for\ngenerating a workload on your system so\n\n388\n00:19:14,640 --> 00:19:17,420\nthat you can measure disk IO,\nis its primary job.\n\n389\n00:19:17,420 --> 00:19:19,900\nBut it lets you see other things too.\n\n390\n00:19:19,900 --> 00:19:23,910\nSome of the other tools that\nwe have available for us,\n\n391\n00:19:23,910 --> 00:19:26,760\nthe resource monitor that I used there,\nwhich is pretty cool.\n\n392\n00:19:26,760 --> 00:19:29,150\nBut it didn't give me\nthe visibility I want.\n\n393\n00:19:29,150 --> 00:19:35,700\nSo there is another utility that's out\nthere, which is the activity monitor.\n\n394\n00:19:35,700 --> 00:19:39,690\nThe activity monitor is built\ninto SQL Management Studio, and\n\n395\n00:19:39,690 --> 00:19:47,520\nit is specifically designed to be able to\nshow us what's going on inside of SQL.\n\n396\n00:19:47,520 --> 00:19:50,490\nA lot more information than\nwhat we normally have.\n\n397\n00:19:50,490 --> 00:19:53,480\nSo I'm gonna start that back up again\njust so it's generating some workload.\n\n398\n00:19:54,740 --> 00:19:57,650\nAnd back here, what I'm gonna do is,\nin my management studio,\n\n399\n00:19:57,650 --> 00:20:01,420\nif you right-click on your server,\nso not on a database or a table, but\n\n400\n00:20:01,420 --> 00:20:05,940\non the server itself, just right-click\non it, you'll see Activity Monitor.\n\n401\n00:20:05,940 --> 00:20:10,000\nAnd the activity monitor is very\nsimilar to the resource monitor.\n\n402\n00:20:10,000 --> 00:20:11,730\nIt's showing me my overview.\n\n403\n00:20:11,730 --> 00:20:16,810\nProcesses, Resource Waits, Data File IO,\nRecent Expensive Queries, all right.\n\n404\n00:20:16,810 --> 00:20:19,770\nThis is very similar to what we\nsaw in the resource monitor.\n\n405\n00:20:19,770 --> 00:20:24,050\nThe difference here,\nit's filtered down to just SQL.\n\n406\n00:20:25,250 --> 00:20:28,590\nMaybe you're running Windows Server, well,\n\n407\n00:20:28,590 --> 00:20:31,440\nthey used to have\nthe Windows Small Business Server, and\n\n408\n00:20:31,440 --> 00:20:34,290\nthat ran SQL and\nother stuff on the same box.\n\n409\n00:20:34,290 --> 00:20:35,490\nIt ran Exchange, and so on.\n\n410\n00:20:35,490 --> 00:20:39,320\nNow they've replaced that with their\nfoundation server, but it's the same idea.\n\n411\n00:20:39,320 --> 00:20:42,090\nSo you might have more than one\nthing running on your system.\n\n412\n00:20:42,090 --> 00:20:46,690\nSo when you go into your resource monitor,\nyou see your CPU's really high.\n\n413\n00:20:46,690 --> 00:20:47,620\nBut maybe it's not SQL,\n\n414\n00:20:47,620 --> 00:20:50,630\nmaybe your running Exchange there also and\nit's Exchange that's the problem.\n\n415\n00:20:50,630 --> 00:20:55,269\nWell if we want to see just SQL,\nthe activity monitor is where we go.\n\n416\n00:20:55,269 --> 00:20:57,919\nYou right-click on the server name\nin the SQL Management Studio and\n\n417\n00:20:57,919 --> 00:20:59,570\nyou choose Activity Monitor.\n\n418\n00:20:59,570 --> 00:21:03,180\nAnd I'm seeing Processor,\nWait, Database IO, and\n\n419\n00:21:03,180 --> 00:21:08,750\nBatch Request/sec, I am seeing this\ninformation, this is just the SQL server.\n\n420\n00:21:08,750 --> 00:21:10,510\nSo what is some of this stuff?\n\n421\n00:21:10,510 --> 00:21:13,730\nWell CPU, it's my processor load.\n\n422\n00:21:13,730 --> 00:21:16,860\nHow busy is my processor right now?\n\n423\n00:21:16,860 --> 00:21:20,620\nAnd as far as SQL is concerned,\nit's apparently not terribly busy at all,\n\n424\n00:21:20,620 --> 00:21:23,470\nbecause I'm not even\nregistering on the chart.\n\n425\n00:21:23,470 --> 00:21:28,880\nThere is, let me zoom in here, you can\nsee that little green line right there,\n\n426\n00:21:28,880 --> 00:21:30,040\nthat's it starting to map it.\n\n427\n00:21:30,040 --> 00:21:32,430\nAnd that's gonna crawl across this chart.\n\n428\n00:21:32,430 --> 00:21:35,960\nYou might get spikes or whatever as\nwe're waiting for the processor.\n\n429\n00:21:35,960 --> 00:21:38,700\nWell, in my case, apparently I'm\nnot waiting for the processor.\n\n430\n00:21:38,700 --> 00:21:39,720\nI've got plenty of resources.\n\n431\n00:21:39,720 --> 00:21:41,990\nSo it's not even measuring.\n\n432\n00:21:41,990 --> 00:21:44,220\nAnd you can see that here,\ntoo, with waiting tasks.\n\n433\n00:21:44,220 --> 00:21:45,410\nThere's nothing waiting.\n\n434\n00:21:45,410 --> 00:21:47,640\nIt's just sitting there, doing its stuff.\n\n435\n00:21:47,640 --> 00:21:49,650\nThere's no big deal there.\n\n436\n00:21:49,650 --> 00:21:52,730\nWe also have Database IO per second.\n\n437\n00:21:52,730 --> 00:21:55,040\nHow much activity am I\ngenerating on my database?\n\n438\n00:21:55,040 --> 00:21:58,100\nWell, I'm running SQLIOSim\nin the background, but\n\n439\n00:21:58,100 --> 00:22:00,910\nit's not using a database\ninside of SQL Server.\n\n440\n00:22:00,910 --> 00:22:04,460\nIt's actually using its own little\ndatabase, so it's using temporary stuff.\n\n441\n00:22:04,460 --> 00:22:07,320\nSo it's not actually doing\nIO through that system.\n\n442\n00:22:07,320 --> 00:22:09,400\nThat's why it's not measuring here.\n\n443\n00:22:09,400 --> 00:22:12,850\nAnd then, Batch Requests/sec How\nmany queries am I running\n\n444\n00:22:12,850 --> 00:22:14,470\nper second on average, right?\n\n445\n00:22:14,470 --> 00:22:18,410\nSo people are in my system, they're doing\nwork, they're doing select statements,\n\n446\n00:22:18,410 --> 00:22:20,100\ninsert statements, and so on.\n\n447\n00:22:20,100 --> 00:22:23,100\nAnd we see activity there, so\nit's measuring that information too.\n\n448\n00:22:26,480 --> 00:22:27,430\nAll right.\n\n449\n00:22:27,430 --> 00:22:29,300\nOther things that you see here.\n\n450\n00:22:29,300 --> 00:22:32,460\nWe can go into processes,\nI'll just expand that out, and\n\n451\n00:22:32,460 --> 00:22:35,420\nit lays out each of my SQL processes.\n\n452\n00:22:35,420 --> 00:22:39,320\nI can see databases that are in use\nright now, Master database, msdb,\n\n453\n00:22:39,320 --> 00:22:41,200\ntemp, and so on.\n\n454\n00:22:41,200 --> 00:22:45,170\nAnd I can see what applications are using\nthem and what they're doing right now.\n\n455\n00:22:45,170 --> 00:22:46,020\nSee how I've got this one and\n\n456\n00:22:46,020 --> 00:22:49,610\nit says temp db running a select\nstatement, what is that?\n\n457\n00:22:49,610 --> 00:22:53,480\nWell the activity monitor is actually\ngathering information in the background\n\n458\n00:22:53,480 --> 00:22:54,450\nusing select statements.\n\n459\n00:22:54,450 --> 00:22:56,900\nI'll show you how that works\na little later in the episode.\n\n460\n00:22:56,900 --> 00:22:59,590\nSo it's actually performing\nsome activity right now,\n\n461\n00:22:59,590 --> 00:23:03,490\nwhich is generating a little bit of\nload and so we see that right there.\n\n462\n00:23:05,300 --> 00:23:06,520\nWe've got resource waits.\n\n463\n00:23:06,520 --> 00:23:09,000\nNow if you see waiting tasks up here,\n\n464\n00:23:09,000 --> 00:23:12,680\nthat means you've got tasks that\nare trying to do a job, but\n\n465\n00:23:12,680 --> 00:23:16,760\nthey can't do it right now because\nsomebody else is holding a resource open.\n\n466\n00:23:16,760 --> 00:23:19,150\nSo we can go here and\nsee resource waits and\n\n467\n00:23:19,150 --> 00:23:21,890\nactually get an idea of what's being held.\n\n468\n00:23:21,890 --> 00:23:25,840\nAnd so you'll see any recent wait time for\nlogging, network I/O, buffers,\n\n469\n00:23:25,840 --> 00:23:27,200\nlatches, and so on.\n\n470\n00:23:27,200 --> 00:23:29,030\nAnd you'll see their information here.\n\n471\n00:23:29,030 --> 00:23:33,090\nMy server's pretty idle, so most of this\ninformation is not even registering.\n\n472\n00:23:35,893 --> 00:23:37,680\nAll right, data file I/O.\n\n473\n00:23:37,680 --> 00:23:42,201\nThis is a really cool one, because you see\nwhich data files are generating input and\n\n474\n00:23:42,201 --> 00:23:44,084\noutput, right, your disk I/O.\n\n475\n00:23:44,084 --> 00:23:46,090\nAnd you see it based on the file.\n\n476\n00:23:46,090 --> 00:23:47,069\nThat's important,\n\n477\n00:23:47,069 --> 00:23:50,940\nbecause you might have one database that's\nbroken up into more than one file group.\n\n478\n00:23:50,940 --> 00:23:52,860\nDifferent tables and\ndifferent file groups.\n\n479\n00:23:52,860 --> 00:23:55,550\nAnd this'll show you which\nones are generating that load.\n\n480\n00:23:55,550 --> 00:23:56,790\nAnd it takes a minute to load.\n\n481\n00:23:56,790 --> 00:24:00,230\nBut here you can see my temp DB,\nmy master DB, my model DB.\n\n482\n00:24:00,230 --> 00:24:02,350\nSee how they're all listed twice?\n\n483\n00:24:02,350 --> 00:24:07,935\nThat's because I've got the database file\nand the transaction log file for each one.\n\n484\n00:24:07,935 --> 00:24:11,665\nIf you're having a lot of reads,\nthe data base file will be generating I/O.\n\n485\n00:24:11,665 --> 00:24:13,745\nBut if you're having a lot of writes,\n\n486\n00:24:13,745 --> 00:24:16,005\nyour transaction log file\nis generating the I/O.\n\n487\n00:24:16,005 --> 00:24:18,945\nSo you need to be able to see both and\nthey're laid out right here.\n\n488\n00:24:18,945 --> 00:24:23,030\nAnd so you can break that apart\ndatabase by database to see who it is\n\n489\n00:24:23,030 --> 00:24:24,750\nthat's experiencing the most I/O.\n\n490\n00:24:24,750 --> 00:24:26,310\nThat's a great way for\nyou to look at it and say,\n\n491\n00:24:26,310 --> 00:24:29,350\nman, my disks are really getting hit hard.\n\n492\n00:24:29,350 --> 00:24:31,430\nIt's this one database that's the problem,\n\n493\n00:24:31,430 --> 00:24:33,239\nmaybe I should move them\noff to their own disk.\n\n494\n00:24:34,240 --> 00:24:36,652\nOr you look at it and you say wow\nthese guys are generating no disk I/O.\n\n495\n00:24:36,652 --> 00:24:39,370\nI might keep all these\ndatabases on the same drive.\n\n496\n00:24:39,370 --> 00:24:40,920\nThat's how we start to\nmake those decisions,\n\n497\n00:24:40,920 --> 00:24:42,950\nby seeing where that\ncontention is coming from.\n\n498\n00:24:44,240 --> 00:24:47,210\nAll right, and again my data\nbase is sitting here near idol.\n\n499\n00:24:47,210 --> 00:24:49,520\nSo most of this stuff is\njust registering zeros.\n\n500\n00:24:49,520 --> 00:24:51,306\nMaybe during the break\nI'll write a script or\n\n501\n00:24:51,306 --> 00:24:54,590\nsomething to just generate some load and\nget some activity going on there.\n\n502\n00:24:54,590 --> 00:24:58,160\nThe SQL I/O sim, remember I said that\nit's not really good for this stuff.\n\n503\n00:24:58,160 --> 00:25:00,950\nAnd that's because it's\nnot querying my database.\n\n504\n00:25:00,950 --> 00:25:04,500\nI didn't write a config file for\nit to use the human resources database.\n\n505\n00:25:04,500 --> 00:25:08,210\nIt's running its generic config file\nwhich means it uses its own database.\n\n506\n00:25:08,210 --> 00:25:11,810\nIt's measuring the physical server,\nnot necessarily my SQL instance.\n\n507\n00:25:11,810 --> 00:25:15,545\nSo all this stuff is zeroed out even with\nthis thing running in the background.\n\n508\n00:25:18,192 --> 00:25:21,471\nThe fourth entry we have here\nin the activity monitor is\n\n509\n00:25:21,471 --> 00:25:23,530\nRecent Expensive Queries.\n\n510\n00:25:23,530 --> 00:25:25,430\nI really like this one.\n\n511\n00:25:25,430 --> 00:25:29,420\nYou might have 1,000 different queries\nthat your company runs throughout\n\n512\n00:25:29,420 --> 00:25:30,930\nthe course of a day.\n\n513\n00:25:30,930 --> 00:25:34,160\nBut at the end of the day, you don't\nneed to optimize every one of them.\n\n514\n00:25:34,160 --> 00:25:36,170\nIf there's a query that\nonly gets run once a day,\n\n515\n00:25:36,170 --> 00:25:37,950\nyou probably don't need to optimize it.\n\n516\n00:25:37,950 --> 00:25:39,260\nIt's not a big deal.\n\n517\n00:25:39,260 --> 00:25:42,320\nBut Recent Expensive Queries says,\nlet's look at a query and\n\n518\n00:25:42,320 --> 00:25:46,890\ndetermine which ones use the most CPU and\ngenerated the most disk I/O.\n\n519\n00:25:46,890 --> 00:25:51,120\nIf you can optimize that,\nthat'll free up resources on the server.\n\n520\n00:25:51,120 --> 00:25:53,040\nThese are the queries you\nwant to pay attention to.\n\n521\n00:25:53,040 --> 00:25:55,660\nThese are the queries that you want\nto feed into the database engine\n\n522\n00:25:55,660 --> 00:25:56,335\ntuning advisor.\n\n523\n00:25:56,335 --> 00:25:59,550\nThey're the ones that are gonna get you\nthe most return on your investment.\n\n524\n00:25:59,550 --> 00:26:03,240\nIf you can optimize these queries,\nit'll make the biggest difference.\n\n525\n00:26:03,240 --> 00:26:07,211\nSo if we expand that out we'll get\na list of the queries that have taken\n\n526\n00:26:07,211 --> 00:26:08,040\nthe longest.\n\n527\n00:26:08,040 --> 00:26:12,567\nNow, I'm not using my system right now so\nthese are all built in queries that\n\n528\n00:26:12,567 --> 00:26:15,416\nthe system runs as part\nof its own maintenance.\n\n529\n00:26:15,416 --> 00:26:17,540\nSo I probably don't want\nto mess with these.\n\n530\n00:26:17,540 --> 00:26:19,250\nBut when you have a server\nthat's in production,\n\n531\n00:26:19,250 --> 00:26:21,340\nyou'll start to see a lot more.\n\n532\n00:26:21,340 --> 00:26:22,120\nI guess I could do that.\n\n533\n00:26:22,120 --> 00:26:25,500\nI could remote into a production server\nand show you guys some neat stuff there.\n\n534\n00:26:25,500 --> 00:26:27,930\nMaybe I'll do that during the break,\njust pull one.\n\n535\n00:26:27,930 --> 00:26:31,230\nI try not to use production\nsystems on the show, but for\n\n536\n00:26:31,230 --> 00:26:32,870\nshowing performance it's kind of handy.\n\n537\n00:26:32,870 --> 00:26:37,196\nSo maybe I'll do that during the break,\njust pull a production system up and\n\n538\n00:26:37,196 --> 00:26:38,768\ncompromise our security.\n\n539\n00:26:38,768 --> 00:26:41,480\n[LAUGH] So we'll get a chance to see that.\n\n540\n00:26:41,480 --> 00:26:45,100\nBut basically, you come in here and\nyou look and you can sort by CPU.\n\n541\n00:26:45,100 --> 00:26:48,200\nWhat query is consuming\nthe most CPU on my system?\n\n542\n00:26:48,200 --> 00:26:51,690\nOr you can sort by your reads and\nwrites and\n\n543\n00:26:51,690 --> 00:26:53,930\nthat kind of information\nto find out disk I/O.\n\n544\n00:26:53,930 --> 00:26:56,150\nWho is it that's consuming\nthe most resources?\n\n545\n00:26:56,150 --> 00:26:58,460\nLet's take a look at that query, and\nsee what we can do to optimize it.\n\n546\n00:26:58,460 --> 00:27:00,410\nAre there some indexes that we could do?\n\n547\n00:27:00,410 --> 00:27:01,970\nThat would help with reads.\n\n548\n00:27:01,970 --> 00:27:06,190\nOr are there different physical\ndisk structures we could use?\n\n549\n00:27:06,190 --> 00:27:07,510\nThat'll help with writes.\n\n550\n00:27:07,510 --> 00:27:10,420\nYou kind of optimize based on how\nyour system is actually performing.\n\n551\n00:27:12,920 --> 00:27:17,320\nSo that's the activity monitor,\nwe've got the resource monitor in Windows.\n\n552\n00:27:17,320 --> 00:27:20,990\nBut the activity monitor gives\nus a lot more SQL-centric data,\n\n553\n00:27:20,990 --> 00:27:22,780\nand that makes it a lot more useful.\n\n554\n00:27:22,780 --> 00:27:24,320\nReally handy tool to have available.\n\n555\n00:27:25,650 --> 00:27:26,640\nAll right, well let's do this.\n\n556\n00:27:26,640 --> 00:27:29,720\nLet's stop here and take a break,\nand during the break I'll try and\n\n557\n00:27:29,720 --> 00:27:30,900\nconnect up to a production server.\n\n558\n00:27:30,900 --> 00:27:32,800\nIf I can't find one to use,\nI'll write a script.\n\n559\n00:27:32,800 --> 00:27:34,550\nSo we'll find one way or\nanother to get it.\n\n560\n00:27:34,550 --> 00:27:36,090\nAnd I want to show you some of that.\n\n561\n00:27:36,090 --> 00:27:37,830\nBut then we're going to\ngo a little bit further.\n\n562\n00:27:37,830 --> 00:27:39,630\nI want to show you where\nthis data is coming from.\n\n563\n00:27:39,630 --> 00:27:41,260\nThis data has got to come from somewhere,\nand\n\n564\n00:27:41,260 --> 00:27:43,200\nit's really neat the way\nthat SQL manages that.\n\n565\n00:27:43,200 --> 00:27:45,350\nSo, we'll get a chance to\nsee that after the break.\n\n566\n00:27:45,350 --> 00:27:47,466\nSo, stayed tuned and\nwe'll be back after this.\n\n567\n00:27:47,466 --> 00:27:51,237\n[NOISE] All right,\n\n568\n00:27:51,237 --> 00:27:56,772\nwelcome back everybody.\n\n569\n00:27:56,772 --> 00:27:59,187\nSo during the break,\nI remoted into a production server.\n\n570\n00:27:59,187 --> 00:28:03,111\nAnd this is for one of the other\ncompanies in the building with us.\n\n571\n00:28:03,111 --> 00:28:06,330\nAnd I, [LAUGH] was like,\nhere I'll connect to them.\n\n572\n00:28:06,330 --> 00:28:08,213\nThey've got to be under some kind of load,\nright?\n\n573\n00:28:08,213 --> 00:28:12,240\nAnd when I connected it,\nthe server was under like 100% CPU load.\n\n574\n00:28:12,240 --> 00:28:14,030\nSo it's a great example.\n\n575\n00:28:14,030 --> 00:28:15,970\nIt's under a fairly heavy load right now.\n\n576\n00:28:15,970 --> 00:28:19,430\nNow, the server was sitting\nat almost 100% CPU.\n\n577\n00:28:19,430 --> 00:28:22,408\nBut when I go into my\nSQL activity monitor,\n\n578\n00:28:22,408 --> 00:28:25,733\nnotice that it's not at 100% CPU, right?\n\n579\n00:28:25,733 --> 00:28:26,890\nSo what am I talking about?\n\n580\n00:28:26,890 --> 00:28:30,810\nWell, I didn't actually dig into it\ntoo deep cuz I was in a hurry, but\n\n581\n00:28:30,810 --> 00:28:32,860\none of two things is happening here.\n\n582\n00:28:32,860 --> 00:28:36,100\nEither one, when I first\nconnected It was just a fluke and\n\n583\n00:28:36,100 --> 00:28:39,586\nI connected it at a very peak time\nwhen it was at high CPU usage.\n\n584\n00:28:39,586 --> 00:28:42,890\nOr two, SQL is not the problem.\n\n585\n00:28:42,890 --> 00:28:47,693\nIf I look at SQL here,\nit's averaging somewhere around like 30%,\n\n586\n00:28:47,693 --> 00:28:49,820\n35% CPU on this little chart.\n\n587\n00:28:49,820 --> 00:28:54,060\nBut, when I looked at the server,\nI was seeing much higher utilization.\n\n588\n00:28:54,060 --> 00:28:56,480\nLike if I go into my Task Manager, and\n\n589\n00:28:56,480 --> 00:28:59,250\ninto Performance,\nI was seeing it considerably higher.\n\n590\n00:28:59,250 --> 00:29:02,410\nSee how I'm getting these spikes\nwhen I first fired it up, and\n\n591\n00:29:02,410 --> 00:29:03,130\nnow it's dropping down.\n\n592\n00:29:03,130 --> 00:29:06,270\nSo let's just watch this for\na second, and we'll kinda see.\n\n593\n00:29:06,270 --> 00:29:11,400\nI'm getting these spikes up to 100% CPU,\nbut it's not an average, right?\n\n594\n00:29:11,400 --> 00:29:12,550\nOn average it's definitely lower.\n\n595\n00:29:12,550 --> 00:29:15,460\nSo, it looks like it may have just\nbeen a fluke when I connected\n\n596\n00:29:15,460 --> 00:29:17,560\nthat it happened to be\nhigh CPU at that point.\n\n597\n00:29:17,560 --> 00:29:20,030\nBut, you may see differences here.\n\n598\n00:29:20,030 --> 00:29:24,520\nIf you see that your task manager is\ngiving you much higher numbers than what\n\n599\n00:29:24,520 --> 00:29:28,910\nthe activity monitor is giving you,\nwell the activity monitor is just SQL.\n\n600\n00:29:28,910 --> 00:29:31,595\nSo there may be something\nelse running on the server.\n\n601\n00:29:31,595 --> 00:29:36,060\nAnti-virus software is a great one that\ncan start generating huge amounts of CPU.\n\n602\n00:29:36,060 --> 00:29:38,880\nBig mistake a lot of people make is\nthey'll put anti-virus software on\n\n603\n00:29:38,880 --> 00:29:41,780\ntheir server and\nthey'll let it scan the database files.\n\n604\n00:29:42,830 --> 00:29:44,140\nTwo problems with that.\n\n605\n00:29:44,140 --> 00:29:49,460\nProblem number one is, every time you\nperform disk I/O on your database,\n\n606\n00:29:49,460 --> 00:29:51,210\nthe anti-virus scanner is scanning it.\n\n607\n00:29:51,210 --> 00:29:52,060\nThat's a big deal.\n\n608\n00:29:52,060 --> 00:29:53,525\nIt's a huge performance it.\n\n609\n00:29:53,525 --> 00:29:56,260\nIt will slaughter\nperformance on your server.\n\n610\n00:29:56,260 --> 00:30:01,010\nProblem number two, if your anti-virus\nsoftware ever flags anything in\n\n611\n00:30:01,010 --> 00:30:05,740\nthe database or transaction logs as being\na virus, it just destroyed your database.\n\n612\n00:30:05,740 --> 00:30:09,230\nIt'll quarantine that file, and\nyour database is now offline.\n\n613\n00:30:09,230 --> 00:30:13,830\nSo as a general rule, it's good to run\nantivirus software on your server.\n\n614\n00:30:13,830 --> 00:30:16,120\nIt's bad to scan your database files.\n\n615\n00:30:16,120 --> 00:30:19,390\nSo you need to put an exception in your\nantivirus software to say don't scan any\n\n616\n00:30:19,390 --> 00:30:22,260\nfile that ends in .mdf or .ldf,\n\n617\n00:30:22,260 --> 00:30:25,690\nbecause those are your databases,\nyou don't want to scan those.\n\n618\n00:30:25,690 --> 00:30:29,980\nNow, your security needs may vary,\nbut that's the general rule of thumb.\n\n619\n00:30:29,980 --> 00:30:33,760\nSo yeah on here it looks like my CPU\nis definitely averaging lower, so\n\n620\n00:30:33,760 --> 00:30:35,360\nnot anything too bad.\n\n621\n00:30:35,360 --> 00:30:40,840\nMy general rule is if a server\nis running at 80% CPU or\n\n622\n00:30:40,840 --> 00:30:47,130\nhigher on average, so just on average is\n80% CPU or higher, it's time to upgrade.\n\n623\n00:30:47,130 --> 00:30:48,867\nIn fact, if it's averaging 60% or\n\n624\n00:30:48,867 --> 00:30:51,596\nhigher that's usually when I\nstart planning the upgrade.\n\n625\n00:30:51,596 --> 00:30:53,278\nSo 60%, plan the upgrade.\n\n626\n00:30:53,278 --> 00:30:55,210\n80%, do the upgrade.\n\n627\n00:30:55,210 --> 00:30:56,850\nHere I'm averaging much lower.\n\n628\n00:30:56,850 --> 00:31:00,830\nIf you look at my average number\nI'm probably down around 15% or\n\n629\n00:31:00,830 --> 00:31:02,140\nsomething like that here.\n\n630\n00:31:02,140 --> 00:31:03,960\nSo definitely not that big of a deal.\n\n631\n00:31:05,210 --> 00:31:09,240\nAll right, back in the SQL side though,\nyou'll see I don't have any waiting tasks.\n\n632\n00:31:09,240 --> 00:31:11,550\nThat means this server is not\nsitting under contention.\n\n633\n00:31:11,550 --> 00:31:13,400\nI'm not having to wait for resources.\n\n634\n00:31:13,400 --> 00:31:15,400\nSo its a well specd server.\n\n635\n00:31:15,400 --> 00:31:17,330\nMy database I/O is pretty low.\n\n636\n00:31:17,330 --> 00:31:19,430\nI had some pretty heavy\nactivity a few moments ago.\n\n637\n00:31:19,430 --> 00:31:23,000\nAnd when I say heavy, there was\nabout three megabytes per second, so\n\n638\n00:31:23,000 --> 00:31:25,010\nwe're not talking about an insane amount.\n\n639\n00:31:25,010 --> 00:31:28,969\nThose disks in that server I believe\nare three gig per second drives,\n\n640\n00:31:28,969 --> 00:31:30,900\nthey might be six gig per second.\n\n641\n00:31:30,900 --> 00:31:36,208\nSo, to handle three megs per second\nis not even really registering.\n\n642\n00:31:36,208 --> 00:31:40,240\nAnd then over here, my batch request,\nI can see on average it looks like I'm\n\n643\n00:31:40,240 --> 00:31:44,650\ndoing about 30 queries per second on this\nserver which is actually not very busy.\n\n644\n00:31:44,650 --> 00:31:48,768\nOn a busy server, on a heavy-hit server,\none on the Internet,\n\n645\n00:31:48,768 --> 00:31:53,060\nyou might be seeing Hundreds of\nthousands of requests per second.\n\n646\n00:31:53,060 --> 00:31:54,120\nHere I'm just seeing 30.\n\n647\n00:31:54,120 --> 00:31:56,670\nSo it's really not a significant number.\n\n648\n00:31:56,670 --> 00:31:59,700\nBut as I start to break down my other\ninformation here, like my data files,\n\n649\n00:31:59,700 --> 00:32:05,400\nmy recent expensive queries, I'll start to\nsee real queries that people are running\n\n650\n00:32:05,400 --> 00:32:08,370\nand get an idea of which ones\nare bogging down my system.\n\n651\n00:32:08,370 --> 00:32:10,020\nNow I do have to be patient here.\n\n652\n00:32:10,020 --> 00:32:11,120\nThere we go.\n\n653\n00:32:11,120 --> 00:32:12,992\nAnd the system will pull\nsome of those up and\n\n654\n00:32:12,992 --> 00:32:15,810\nI can start to see some select\nstatements that were run and so on.\n\n655\n00:32:15,810 --> 00:32:19,320\nAnd we can use these as queries to\nlook at to determine whether or\n\n656\n00:32:19,320 --> 00:32:21,440\nnot there are some indexes I should make,\nor\n\n657\n00:32:21,440 --> 00:32:24,840\nsome partitioning I should implement\nto try and improve things.\n\n658\n00:32:24,840 --> 00:32:28,400\nI can the execution costs,\nthe CPU that was generated, and\n\n659\n00:32:28,400 --> 00:32:30,510\nso on, all based on that query.\n\n660\n00:32:30,510 --> 00:32:33,600\nAnd you probably just saw right there,\nit's dynamically updating.\n\n661\n00:32:33,600 --> 00:32:36,820\nUnlike the entire rest of\nthe Sequel Management Studio,\n\n662\n00:32:36,820 --> 00:32:38,600\nthe activity monitor dynamically updates.\n\n663\n00:32:38,600 --> 00:32:40,822\nSo you'll see these come\nin as things change.\n\n664\n00:32:40,822 --> 00:32:45,625\nAnd on my data files I can see which\ndatabase files are generating the most\n\n665\n00:32:45,625 --> 00:32:48,835\ndisk I/O, who I need to optimize and\nmove around.\n\n666\n00:32:48,835 --> 00:32:51,965\nSo right now,\nmy temp DB is at the top of this list, but\n\n667\n00:32:51,965 --> 00:32:54,915\nI might wanna look at reads versus writes,\nand so on.\n\n668\n00:32:54,915 --> 00:32:56,085\nWhy is all this zeroed out?\n\n669\n00:32:56,085 --> 00:32:58,635\nI'm probably just not giving it time.\n\n670\n00:32:58,635 --> 00:32:59,620\nThere it goes.\n\n671\n00:32:59,620 --> 00:33:02,990\nSo this is all updating in real-time so\n\n672\n00:33:02,990 --> 00:33:06,440\nI can see who's generating the disk,\nwho is responsible for that.\n\n673\n00:33:06,440 --> 00:33:08,810\nAny resource waits,\nwhich I don't have any.\n\n674\n00:33:08,810 --> 00:33:10,390\nAnd then my processes.\n\n675\n00:33:10,390 --> 00:33:15,230\nNow the cool part about processes,\nwhen it updates, is we'll see who's\n\n676\n00:33:15,230 --> 00:33:18,770\ngenerating the most load, and\nyou can actually kill processes from here.\n\n677\n00:33:18,770 --> 00:33:21,690\nSo if you see a SQL query\nthat's a long running query,\n\n678\n00:33:21,690 --> 00:33:25,340\nit's just been sitting there chewing\nup resources, you can cancel it.\n\n679\n00:33:25,340 --> 00:33:29,450\nAnd when you cancel it, it'll actually\nroll back the changes that were made,\n\n680\n00:33:29,450 --> 00:33:31,730\nso it's safe to go in and cancel one.\n\n681\n00:33:31,730 --> 00:33:34,230\nBut you can see\nthe database being queried,\n\n682\n00:33:34,230 --> 00:33:37,110\nthe application being used,\nwho the user is.\n\n683\n00:33:37,110 --> 00:33:41,730\nSo I've got my user accounts listed over\nhere and what host they're running from,\n\n684\n00:33:41,730 --> 00:33:44,860\nso you can get an idea of who it\nis that's generating that load.\n\n685\n00:33:44,860 --> 00:33:48,465\nAnd then you can always come in,\nright-click on it and kill the process,\n\n686\n00:33:48,465 --> 00:33:50,051\nand that's always a good time.\n\n687\n00:33:50,051 --> 00:33:53,261\nYou could also go in, like here,\nI'll take one that's me, and\n\n688\n00:33:53,261 --> 00:33:57,362\npull up the details and see a little bit\nmore information about what was being run,\n\n689\n00:33:57,362 --> 00:33:59,410\nsee the actual query that's in action.\n\n690\n00:33:59,410 --> 00:34:03,010\nSo a lot of really good data\ninside of that activity monitor.\n\n691\n00:34:04,348 --> 00:34:08,650\nAll right, now killing a process,\nwhy would I want to kill a process?\n\n692\n00:34:08,650 --> 00:34:13,950\nWell inside of SQL, there's\na situation that's called a deadlock.\n\n693\n00:34:13,950 --> 00:34:15,650\nAnd it's not just a Microsoft thing.\n\n694\n00:34:15,650 --> 00:34:19,410\nIt's any database software that's out\nthere can have what are called deadlocks.\n\n695\n00:34:19,410 --> 00:34:22,130\nDatabases do atomized transactions.\n\n696\n00:34:22,130 --> 00:34:24,560\nSo every time you write to a database,\n\n697\n00:34:24,560 --> 00:34:29,210\nit has to ensure that the transaction\nis safe, isolated, and\n\n698\n00:34:29,210 --> 00:34:36,240\nprotected from any other\ntransactions that are occurring.\n\n699\n00:34:36,240 --> 00:34:38,500\nThey call this process ACID.\n\n700\n00:34:38,500 --> 00:34:43,580\nAnd ACID is an acronym, and again,\nnot just a Microsoft thing.\n\n701\n00:34:43,580 --> 00:34:48,190\nLet me just pull this up real quick so\nyou can see.\n\n702\n00:34:48,190 --> 00:34:49,110\nGood old Wikipedia.\n\n703\n00:34:50,370 --> 00:34:56,200\nACID, it stands for Atomicity,\nConsistency, Isolation, Durability.\n\n704\n00:34:56,200 --> 00:34:59,610\nEvery transaction performed\non a SQL server, or on MySQL,\n\n705\n00:34:59,610 --> 00:35:04,230\nor Oracle, or whatever, tries to adhere\nto these four characteristics, right?\n\n706\n00:35:04,230 --> 00:35:05,270\nAtomicity.\n\n707\n00:35:05,270 --> 00:35:07,410\nIt's atomic,\nthat's what I was talking about.\n\n708\n00:35:07,410 --> 00:35:12,100\nWhen you go to perform an activity, you're\nmaking changes or you're querying data.\n\n709\n00:35:12,100 --> 00:35:15,700\nYou're working with a particular\nset of information.\n\n710\n00:35:15,700 --> 00:35:16,520\nThat's atomic.\n\n711\n00:35:16,520 --> 00:35:20,670\nIt's a single component, and it has to\nmake sure that other people that are doing\n\n712\n00:35:20,670 --> 00:35:24,540\nwork on the server at the same time don't\nmess with the data that you are getting.\n\n713\n00:35:24,540 --> 00:35:28,140\nSo when you go to work with it you grab\na single piece of that information, and\n\n714\n00:35:28,140 --> 00:35:29,760\nit needs to be consistent.\n\n715\n00:35:29,760 --> 00:35:32,230\nIf you read that record right now, and\n\n716\n00:35:32,230 --> 00:35:35,810\nyou read that record two seconds from now,\nit needs to have the same data.\n\n717\n00:35:35,810 --> 00:35:38,350\nOr if five people read from\nthe same record at the same time,\n\n718\n00:35:38,350 --> 00:35:41,740\nthey all need to get the same data,\nit needs to be consistent.\n\n719\n00:35:41,740 --> 00:35:42,790\nIsolated.\n\n720\n00:35:42,790 --> 00:35:46,570\nWhen I go to make a change,\nit needs to protect the data so\n\n721\n00:35:46,570 --> 00:35:49,870\nthat if somebody else is making a change,\nwe don't bump into each other.\n\n722\n00:35:49,870 --> 00:35:54,690\nOnly one person can make a change at\na time to ensure proper isolation.\n\n723\n00:35:54,690 --> 00:35:56,010\nAnd durability.\n\n724\n00:35:56,010 --> 00:35:59,450\nWhen I make a change,\nthe change needs to stay,right?\n\n725\n00:35:59,450 --> 00:36:01,970\nIf I'm making five changes in a row and\n\n726\n00:36:01,970 --> 00:36:06,380\nthe fifth change breaks, I need to\nroll back all five of those changes.\n\n727\n00:36:06,380 --> 00:36:07,740\nThey didn't work, right?\n\n728\n00:36:07,740 --> 00:36:09,450\nMy database needs to be durable.\n\n729\n00:36:09,450 --> 00:36:11,970\nIt needs to withstand failures like that.\n\n730\n00:36:11,970 --> 00:36:14,230\nAnd that's what your transactions logs do,\nand other things.\n\n731\n00:36:14,230 --> 00:36:16,830\nThey're all working towards\nthese four concepts.\n\n732\n00:36:16,830 --> 00:36:20,860\nAtomicity, Consistency,\nIsolation and Durability.\n\n733\n00:36:20,860 --> 00:36:26,150\nSo in our database,\nthat's happening all the time.\n\n734\n00:36:26,150 --> 00:36:31,060\nWell if one person is making a change,\nthe record is isolated so\n\n735\n00:36:31,060 --> 00:36:33,360\nthat only they can make a change to it.\n\n736\n00:36:33,360 --> 00:36:36,210\nWhat if somebody else wants to\nmake a change to that same record?\n\n737\n00:36:36,210 --> 00:36:38,250\nThat's where a wait comes in.\n\n738\n00:36:38,250 --> 00:36:40,786\nThat's where these resource waits are,\nright?\n\n739\n00:36:40,786 --> 00:36:42,780\nSo we've gotta wait our turn, wait for\n\n740\n00:36:42,780 --> 00:36:45,920\nuser one to finish before\nUser 2 can make the change.\n\n741\n00:36:47,010 --> 00:36:50,150\nWell hopefully,\nthat just takes a couple of nanoseconds,\n\n742\n00:36:50,150 --> 00:36:53,440\nwhatever, the change is done and then\nUser 2 gets in and makes their change.\n\n743\n00:36:53,440 --> 00:36:56,588\nBut there's a scenario\ncalled the deadlock,\n\n744\n00:36:56,588 --> 00:37:01,795\nwhere User 1 can be waiting on User 2,\nand User 2 can be waiting on User 1.\n\n745\n00:37:01,795 --> 00:37:05,050\nThey're waiting on each other,\nand they'll wait forever.\n\n746\n00:37:06,320 --> 00:37:11,510\nIn the official SQL definition,\ndeadlocks last forever.\n\n747\n00:37:11,510 --> 00:37:16,095\nDifferent vendors, like Oracle and\nthe MySQL Foundation, which is now Oracle,\n\n748\n00:37:16,095 --> 00:37:17,889\nMicrosoft with Microsoft SQL,\n\n749\n00:37:17,889 --> 00:37:22,830\nthey have different approaches they\ntake to dealing with these deadlocks.\n\n750\n00:37:22,830 --> 00:37:25,780\nSo let me show you what\nhappens with Microsoft.\n\n751\n00:37:25,780 --> 00:37:27,560\nLet me get to my little diagram.\n\n752\n00:37:29,390 --> 00:37:34,260\nAll right, here I've got an example\nof two tables in a database, and\n\n753\n00:37:34,260 --> 00:37:37,622\nlet's say that I am User 1.\n\n754\n00:37:37,622 --> 00:37:43,298\nOkay, so here's user one in the smallest\nfont I could have possibly chosen, so\n\n755\n00:37:43,298 --> 00:37:49,980\nhere's User 1, and user one is\nmaking some changes, all right?\n\n756\n00:37:49,980 --> 00:37:55,410\nUser 1 is adding a new employee,\nand the employee is Amy.\n\n757\n00:37:55,410 --> 00:37:58,340\nSo we're adding this new employee Amy, and\n\n758\n00:37:58,340 --> 00:38:00,550\nwe're trying to get her\nset up in the system.\n\n759\n00:38:00,550 --> 00:38:03,308\nSo User 1 comes in and\nstarts to make some changes.\n\n760\n00:38:03,308 --> 00:38:09,050\nNow in SQL we use what\nare called transactions, and\n\n761\n00:38:09,050 --> 00:38:14,860\nyou can have multiple queries all\nbuilt into the same transaction.\n\n762\n00:38:14,860 --> 00:38:19,195\nSo if you go through and you add a user,\nyou add their manager, you go and\n\n763\n00:38:19,195 --> 00:38:25,040\nyou update, you may update multiple tables\nwhile you're adding that record, okay?\n\n764\n00:38:25,040 --> 00:38:28,190\nSo all of those updates get\nrolled into one transaction,\n\n765\n00:38:28,190 --> 00:38:31,050\nthat way if one update fails\nthey can all roll back.\n\n766\n00:38:31,050 --> 00:38:33,160\nThat provides us our durability.\n\n767\n00:38:33,160 --> 00:38:36,545\nSo when we do that, if we're we're\naccessing more than one thing in\n\n768\n00:38:36,545 --> 00:38:40,525\nthat transaction, well,\nthey're all kind of locked by that user.\n\n769\n00:38:40,525 --> 00:38:42,235\nSo the users are dealing with these locks,\nand\n\n770\n00:38:42,235 --> 00:38:44,435\nthere's several different types of locks.\n\n771\n00:38:44,435 --> 00:38:48,415\nYou'll learn about those for\nthe 70-463 exam.\n\n772\n00:38:48,415 --> 00:38:50,025\nOn this one,\nwe don't worry about it so much.\n\n773\n00:38:50,025 --> 00:38:51,745\nWe just kinda generalize it.\n\n774\n00:38:51,745 --> 00:38:54,145\nBut let's say that User 1\nis gonna come in here and\n\n775\n00:38:54,145 --> 00:38:57,890\nstart to make some changes, all right?\n\n776\n00:38:57,890 --> 00:39:01,755\nSo they reach in here, and\nthis will be good old User 1.\n\n777\n00:39:03,330 --> 00:39:05,650\nI'll use red for this user.\n\n778\n00:39:05,650 --> 00:39:10,950\nAll right, so User 1's gonna get in here,\nand they're gonna start adding Amy, right?\n\n779\n00:39:10,950 --> 00:39:12,740\nThis entry down here at the bottom.\n\n780\n00:39:13,770 --> 00:39:16,220\nWe're gonna add her into the table, okay.\n\n781\n00:39:16,220 --> 00:39:17,350\nNow because we're adding her and\n\n782\n00:39:17,350 --> 00:39:22,350\nit's a new record, we're gonna lock\nthat row while we work with it, okay?\n\n783\n00:39:22,350 --> 00:39:26,950\nSo User 1 is gonna hold\na lock on that entire row.\n\n784\n00:39:26,950 --> 00:39:30,510\nYou're adding something new,\nso it's called a row lock, and\n\n785\n00:39:30,510 --> 00:39:34,959\nall of this data is now locked by\nUser 1 while they're adding it, okay?\n\n786\n00:39:34,959 --> 00:39:37,740\nNow User 1 is going on and\ndoing other things.\n\n787\n00:39:37,740 --> 00:39:40,970\nMaybe Amy is gonna be a manager.\n\n788\n00:39:40,970 --> 00:39:42,745\nAll right, so Amy we just hired her.\n\n789\n00:39:42,745 --> 00:39:45,667\nShe's managing a department so\nI need to add her over here.\n\n790\n00:39:45,667 --> 00:39:50,480\nThere's some departments, and\nmaybe Amy's our new manager for IT.\n\n791\n00:39:50,480 --> 00:39:53,430\nSo User 1 is gonna add Amy.\n\n792\n00:39:53,430 --> 00:39:56,322\nAnd then as soon as Amy is added,\n\n793\n00:39:56,322 --> 00:40:02,100\nUser 1 is going to reach over here and\nmodify the IT record.\n\n794\n00:40:02,100 --> 00:40:07,290\nWe've gotta modify that to change\nthe manager from id 3 to Amy's id,\n\n795\n00:40:07,290 --> 00:40:08,350\nwhich is id 5.\n\n796\n00:40:08,350 --> 00:40:14,810\nSo User 1 is going to reach over to this\nrow, and want to change this 3 to a 5.\n\n797\n00:40:14,810 --> 00:40:17,220\nSo that's the change that\nthe User 1 is going to do.\n\n798\n00:40:17,220 --> 00:40:21,922\nNow, we can't do that until\nAmy is actually created.\n\n799\n00:40:21,922 --> 00:40:28,540\nSo, User 1 goes in and\ncreates the Amy record.\n\n800\n00:40:31,060 --> 00:40:33,370\nAnd then User 1 reaches over and\n\n801\n00:40:33,370 --> 00:40:36,620\nupdates the IT department to\nhave a manager number five.\n\n802\n00:40:36,620 --> 00:40:37,270\nSo step one.\n\n803\n00:40:37,270 --> 00:40:38,345\nStep two.\n\n804\n00:40:38,345 --> 00:40:40,365\nThese are tied together.\n\n805\n00:40:40,365 --> 00:40:44,075\nIf I fail to create the Amy record,\nI don't wanna go and\n\n806\n00:40:44,075 --> 00:40:45,125\nupdate this record over here.\n\n807\n00:40:46,205 --> 00:40:47,995\nAnd if I fail to make her a manager,\n\n808\n00:40:47,995 --> 00:40:50,670\nmaybe I don't wanna add her account in the\nfirst place, so I wanna roll that back.\n\n809\n00:40:50,670 --> 00:40:51,900\nSo we transactionalize these.\n\n810\n00:40:51,900 --> 00:40:52,940\nWe put them together.\n\n811\n00:40:52,940 --> 00:40:53,880\nThey happen together.\n\n812\n00:40:53,880 --> 00:40:56,270\nEither they both succeed,\nor they both fail.\n\n813\n00:40:56,270 --> 00:40:58,440\nThere's no in between when\nyou do a transaction.\n\n814\n00:40:59,600 --> 00:41:02,440\nSo User 1 goes to perform the first part.\n\n815\n00:41:02,440 --> 00:41:05,880\nAnd then User 1 goes to\nperform the second part, but\n\n816\n00:41:05,880 --> 00:41:09,320\nit turns out there's another\nuser out there, User 2.\n\n817\n00:41:09,320 --> 00:41:11,114\nAnd User 2.\n\n818\n00:41:13,350 --> 00:41:16,236\nLets see, why can I not click on user?\n\n819\n00:41:16,236 --> 00:41:20,920\nAll right, well, User 2 is over here.\n\n820\n00:41:20,920 --> 00:41:22,700\nAnd User 2 is doing some work also.\n\n821\n00:41:23,760 --> 00:41:26,620\nAnd User 2, lets just update this.\n\n822\n00:41:26,620 --> 00:41:27,685\nMaybe we'll make User 2 green.\n\n823\n00:41:30,528 --> 00:41:35,288\nNow User 2 is busy updating\nthe department table also.\n\n824\n00:41:35,288 --> 00:41:38,240\nMaybe User 2 is going in and\ndecided that, hey, I don't wanna\n\n825\n00:41:38,240 --> 00:41:41,480\ncall it the IT department anymore,\nI wanna call it the IS department.\n\n826\n00:41:41,480 --> 00:41:44,130\nInstead of information technology,\nit'll be information systems.\n\n827\n00:41:44,130 --> 00:41:46,710\nThis is a debate that goes\non in too many companies.\n\n828\n00:41:46,710 --> 00:41:49,470\nBut they decided that's\nwhat they're gonna do.\n\n829\n00:41:49,470 --> 00:41:53,960\nSo User 2 is reaching out\nto modify this record.\n\n830\n00:41:55,200 --> 00:41:58,840\nAnd they're gonna be changing IT to BIS.\n\n831\n00:42:00,610 --> 00:42:01,840\nSo simple change.\n\n832\n00:42:01,840 --> 00:42:03,890\nNow when they change that.\n\n833\n00:42:03,890 --> 00:42:05,870\nMaybe, that's it.\n\n834\n00:42:05,870 --> 00:42:07,188\nThey're just making that change.\n\n835\n00:42:07,188 --> 00:42:11,320\nWell, User 1 comes along to change that\nrecord, to change the same row, but\n\n836\n00:42:11,320 --> 00:42:13,490\nthey can't because User 2 has it open.\n\n837\n00:42:14,650 --> 00:42:15,740\nThat's a wait.\n\n838\n00:42:15,740 --> 00:42:17,788\nUser 1 just has to wait for\nUser 2 to finish.\n\n839\n00:42:17,788 --> 00:42:22,240\nWhen User 2 is finished updating this row,\nthen User 1 can go in and update the row,\n\n840\n00:42:22,240 --> 00:42:23,190\nand that's fine.\n\n841\n00:42:23,190 --> 00:42:24,440\nThat's what we normally hope for.\n\n842\n00:42:25,710 --> 00:42:29,370\nBut, what if User 2 is in a transaction?\n\n843\n00:42:29,370 --> 00:42:33,400\nAnd, as part of that transaction\nthey're updating this record and\n\n844\n00:42:33,400 --> 00:42:38,770\nthen they wanna reach over and check for\nanybody over here who's got manager 3.\n\n845\n00:42:38,770 --> 00:42:43,183\nAnd so, they jump in and do a column lock,\ncolumn locks are the worst.\n\n846\n00:42:43,183 --> 00:42:46,030\nMaybe they come in here and they do one.\n\n847\n00:42:46,030 --> 00:42:48,120\nThere's various times\nwhere you might need that.\n\n848\n00:42:50,770 --> 00:42:56,365\nWell, what happens is User 1\nis accessing some data and\n\n849\n00:42:56,365 --> 00:42:59,838\nwaiting on User 2 for other data.\n\n850\n00:42:59,838 --> 00:43:04,940\nNow User 2 is accessing some data and\nit's going to have to wait on User 1.\n\n851\n00:43:04,940 --> 00:43:07,570\nUser 1 has a lock on this row right here.\n\n852\n00:43:09,010 --> 00:43:12,240\nAnd if User 2 is trying to\naccess this column, it overlaps.\n\n853\n00:43:12,240 --> 00:43:13,780\nSee my overlap right there?\n\n854\n00:43:13,780 --> 00:43:16,880\nSo User 2 is waiting on User 1.\n\n855\n00:43:16,880 --> 00:43:18,864\nUser 1 is waiting on User 2.\n\n856\n00:43:18,864 --> 00:43:20,420\nI now have a deadlock.\n\n857\n00:43:20,420 --> 00:43:22,580\nA deadlock is where these two\nusers are waiting on each other.\n\n858\n00:43:22,580 --> 00:43:24,130\nAnd they will wait forever.\n\n859\n00:43:25,230 --> 00:43:26,470\nSo what happens?\n\n860\n00:43:26,470 --> 00:43:29,560\nWell, they get added to\nthe activity monitor.\n\n861\n00:43:29,560 --> 00:43:31,990\nYou know, you'll see it in\nhere under resource waits.\n\n862\n00:43:31,990 --> 00:43:34,040\nSo there'll be some entries in here.\n\n863\n00:43:34,040 --> 00:43:37,740\nAnd I'm gonna show you some SQL tray stuff\nwe can do to run later to actually show\n\n864\n00:43:37,740 --> 00:43:39,210\nthis, and we can spot the deadlocks.\n\n865\n00:43:40,360 --> 00:43:43,680\nBut what happens is SQL\nactually has a built in timer.\n\n866\n00:43:43,680 --> 00:43:46,330\nIt has a little timer, and\nit's based on the user,\n\n867\n00:43:46,330 --> 00:43:47,740\nwhen they connect,\nwhen they set the timer.\n\n868\n00:43:47,740 --> 00:43:49,500\nI believe the default's 30 seconds.\n\n869\n00:43:50,610 --> 00:43:54,060\nWhen they connect up,\nthey'll wait a certain amount of time.\n\n870\n00:43:54,060 --> 00:43:58,370\nAnd, if the lock doesn't release,\nif it waits, and\n\n871\n00:43:58,370 --> 00:44:02,290\nwaits, and waits, and the lock doesn't\nrelease then it does something about it.\n\n872\n00:44:03,320 --> 00:44:03,870\nWhat does it do?\n\n873\n00:44:03,870 --> 00:44:06,120\nWell, SQL is really cool about this.\n\n874\n00:44:06,120 --> 00:44:09,060\nIt could just say first come,\nfirst serve, right?\n\n875\n00:44:09,060 --> 00:44:11,160\nBut who's the first one to get in here?\n\n876\n00:44:11,160 --> 00:44:12,810\nWell, we don't necessarily know.\n\n877\n00:44:12,810 --> 00:44:13,680\nThey're waiting on each other, but\n\n878\n00:44:13,680 --> 00:44:15,340\nit can kinda go back through\nthe execution plan and\n\n879\n00:44:15,340 --> 00:44:17,070\nfigure out which one started first.\n\n880\n00:44:17,070 --> 00:44:19,870\nBut Microsoft took\na different approach on it.\n\n881\n00:44:19,870 --> 00:44:23,410\nWhat they did is they said, all right,\nUser 1 is doing a transaction and\n\n882\n00:44:23,410 --> 00:44:26,850\nthat transaction,\nmaybe it's only got two steps.\n\n883\n00:44:26,850 --> 00:44:28,680\nAnd it generates a certain\namount of disk IO and\n\n884\n00:44:28,680 --> 00:44:32,080\nit generates a certain amount\nof CPU to perform those steps.\n\n885\n00:44:32,080 --> 00:44:34,770\nUser 2 is in a transaction, but\n\n886\n00:44:34,770 --> 00:44:39,800\nmaybe User 2's transaction is 50 steps and\nit's already on step 49.\n\n887\n00:44:39,800 --> 00:44:44,580\nIt generated a bunch of disk IO and\nit's already generated a bunch of CPU.\n\n888\n00:44:44,580 --> 00:44:47,072\nSQL looks at it and says, all right,\nif I were to cancel one of these guys,\n\n889\n00:44:47,072 --> 00:44:48,740\nwhich one would take\nthe most work to re-issue?\n\n890\n00:44:48,740 --> 00:44:54,480\nWhich one would take the most\nresources to redo it again?\n\n891\n00:44:55,650 --> 00:44:57,290\nAnd then it takes the other guy,\n\n892\n00:44:57,290 --> 00:45:01,230\nthe guy that would take less resources\nto re-do and it cancels that one.\n\n893\n00:45:01,230 --> 00:45:04,240\nIt basis it entirely on performance.\n\n894\n00:45:04,240 --> 00:45:06,960\nIt says all right,\nUser 2 might've been the second person.\n\n895\n00:45:06,960 --> 00:45:08,810\nThey might not have started first.\n\n896\n00:45:08,810 --> 00:45:11,580\nUser 1 started first,\nUser 2 started second.\n\n897\n00:45:11,580 --> 00:45:15,660\nBut User 1's query was so\nsmall, that it would be so\n\n898\n00:45:15,660 --> 00:45:20,080\nmuch easier to recreate than\nUser 2's massive transaction.\n\n899\n00:45:20,080 --> 00:45:24,000\nSo even though User 2 came in second\nplace, we'll let them finish, and\n\n900\n00:45:24,000 --> 00:45:25,590\nwe'll cancel User 1 and roll them back.\n\n901\n00:45:26,770 --> 00:45:30,970\nSo when we do a transaction SQL\nis really smart about that.\n\n902\n00:45:30,970 --> 00:45:33,200\nIt really figures it out\nbased on performance.\n\n903\n00:45:33,200 --> 00:45:36,360\nBut it also means when we do\na transaction we need to plan for that,\n\n904\n00:45:36,360 --> 00:45:39,700\nthat if your transaction fails,\nyou need to re-do it.\n\n905\n00:45:39,700 --> 00:45:42,800\nSo somebody who's writing software\nthat interacts with SQL will\n\n906\n00:45:42,800 --> 00:45:43,500\noften times do that.\n\n907\n00:45:43,500 --> 00:45:46,360\nYou've got to detect failure and\njust do a retry.\n\n908\n00:45:46,360 --> 00:45:49,500\nWhen you do a retry User 2 is probably\ndone at that point and then you go in and\n\n909\n00:45:49,500 --> 00:45:50,860\nyou knock now, right?\n\n910\n00:45:50,860 --> 00:45:54,670\nOr if User 2's not done, User 2's got the\nvarious locks you've got we just wait on\n\n911\n00:45:54,670 --> 00:45:55,780\nthem and then we move forward.\n\n912\n00:45:55,780 --> 00:45:57,580\nThe deadlock has been removed.\n\n913\n00:45:57,580 --> 00:45:59,190\nSo in Microsoft SQL,\n\n914\n00:45:59,190 --> 00:46:04,020\nwe don't have to worry about deadlocks\nbecause it deals with them for us.\n\n915\n00:46:04,020 --> 00:46:06,420\nIn other database software,\nyou do have to worry about them.\n\n916\n00:46:06,420 --> 00:46:08,200\nIn Microsoft SQL, problem solved.\n\n917\n00:46:08,200 --> 00:46:09,740\nWe don't have to worry about it.\n\n918\n00:46:09,740 --> 00:46:12,180\nAnd it's based entirely on performance.\n\n919\n00:46:13,450 --> 00:46:16,070\nNow that doesn't mean\ndeadlocks don't happen.\n\n920\n00:46:16,070 --> 00:46:16,890\nDeadlocks do happen.\n\n921\n00:46:16,890 --> 00:46:17,750\nThey happen all the time.\n\n922\n00:46:18,790 --> 00:46:21,600\nBut, SQL's just solving them for us,\nso we don't have to worry about it.\n\n923\n00:46:21,600 --> 00:46:22,890\nDoesn't mean we should ignore it.\n\n924\n00:46:22,890 --> 00:46:25,910\nYou should still pay attention to it, look\nfor when deadlocks are happening, because\n\n925\n00:46:25,910 --> 00:46:29,540\nif you can avoid the deadlock in the first\nplace, that's an even better solution.\n\n926\n00:46:29,540 --> 00:46:33,630\nBecause even though User 1 was less\nresource-intensive, and I canceled it and\n\n927\n00:46:33,630 --> 00:46:35,870\nredid it, I still had to redo it, right?\n\n928\n00:46:35,870 --> 00:46:39,740\nSo I had to do twice as much work than\nI should have because I had to redo\n\n929\n00:46:39,740 --> 00:46:40,660\nthat activity.\n\n930\n00:46:40,660 --> 00:46:44,970\nSo if there's some way we can identify\nwhere deadlocks are occurring and fix it.\n\n931\n00:46:44,970 --> 00:46:45,530\nAnd say, you know what?\n\n932\n00:46:45,530 --> 00:46:48,110\nFrom now on, whatever User 2's doing,\n\n933\n00:46:48,110 --> 00:46:50,860\nlet's get it to stop doing a column lock,\nand\n\n934\n00:46:50,860 --> 00:46:54,780\ninstead change it to some other kinda lock\nto minimize the impact on the database.\n\n935\n00:46:54,780 --> 00:46:56,510\nThere's ways to optimize that.\n\n936\n00:46:56,510 --> 00:46:59,410\nNot for us as system admins\nthere's not much we can do,\n\n937\n00:46:59,410 --> 00:47:00,670\nit's really the developers.\n\n938\n00:47:00,670 --> 00:47:04,560\nThey've gotta change the queries that\nthey're writing to minimize the impact on\n\n939\n00:47:04,560 --> 00:47:05,060\nthe database.\n\n940\n00:47:05,060 --> 00:47:10,270\nThat's how you can tell the difference\nbetween a developer that really knows SQL\n\n941\n00:47:10,270 --> 00:47:13,430\nversus a developer that's just\nusing Google to find their queries.\n\n942\n00:47:13,430 --> 00:47:17,140\nBecause the generic queries out there\non Google they'll lock entire databases\n\n943\n00:47:17,140 --> 00:47:19,110\nsometimes because they're so\npoorly written.\n\n944\n00:47:19,110 --> 00:47:23,420\nBut somebody is really in the know,\nthey can minimize that impact.\n\n945\n00:47:23,420 --> 00:47:25,890\nSo, definitely makes\na huge difference there.\n\n946\n00:47:27,090 --> 00:47:29,410\nAll right, so that's how a deadlock works.\n\n947\n00:47:29,410 --> 00:47:30,540\nThat's what they do.\n\n948\n00:47:30,540 --> 00:47:33,660\nThe system takes care of it for us,\nbut we do need to know about it.\n\n949\n00:47:33,660 --> 00:47:36,660\nAnd you'll see information in here\nunder your resource weights and\n\n950\n00:47:36,660 --> 00:47:38,070\nin some of the other areas.\n\n951\n00:47:38,070 --> 00:47:40,553\nAnd if there is a deadlock\nyou can find the process and\n\n952\n00:47:40,553 --> 00:47:41,917\nyou can cancel it yourself.\n\n953\n00:47:41,917 --> 00:47:45,483\nIf you're fast enough to catch it,\nyou could come in and choose one and\n\n954\n00:47:45,483 --> 00:47:46,520\nkill that process.\n\n955\n00:47:46,520 --> 00:47:50,300\nThat's an example of where we\nmight wanna kill a process.\n\n956\n00:47:50,300 --> 00:47:50,840\nAll right now.\n\n957\n00:47:52,550 --> 00:47:55,810\nI'm gonna show you in the next segment,\nactually, is it the next segment?\n\n958\n00:47:55,810 --> 00:47:58,630\nNo, in two segments I'll\nshow you the SQL Trace.\n\n959\n00:47:58,630 --> 00:48:01,970\nAnd with SQL Trace, we can actually,\nwell, you know, I've got enough time.\n\n960\n00:48:01,970 --> 00:48:03,130\nI'll show you right now.\n\n961\n00:48:03,130 --> 00:48:04,920\nSQL Trace is really awesome.\n\n962\n00:48:04,920 --> 00:48:07,890\nSQL Trace will let you see what's going\non in the background on your server and\n\n963\n00:48:07,890 --> 00:48:10,850\nI think I showed it to you guys in the\nindexing episode because it's a great way\n\n964\n00:48:10,850 --> 00:48:13,220\nto generate a workload file.\n\n965\n00:48:13,220 --> 00:48:16,530\nInside of my activity manager,\nI'm sorry, not my activity manager.\n\n966\n00:48:16,530 --> 00:48:19,210\nJust inside of my sequel\nmanagement studio.\n\n967\n00:48:19,210 --> 00:48:22,140\nYou can go up to tools and\nsequel server profiler.\n\n968\n00:48:22,140 --> 00:48:25,300\nI called it the SQL Server Trace,\nwhy did I call it that?\n\n969\n00:48:25,300 --> 00:48:29,890\nWell, for years and years and years, it\nwas called the SQL Server Trace utility.\n\n970\n00:48:29,890 --> 00:48:34,550\nAnd then they renamed it as SQL 2005 and\nthey called it the SQL Server Profiler.\n\n971\n00:48:34,550 --> 00:48:35,610\nFor whatever reason.\n\n972\n00:48:35,610 --> 00:48:37,190\nSo it's kinda got two names.\n\n973\n00:48:37,190 --> 00:48:40,910\nAnd when you run it here, so\ngo to tools and SQL Server Profiler.\n\n974\n00:48:40,910 --> 00:48:44,300\nIt'll launch, and then you'll\nsee what it's gonna try and do.\n\n975\n00:48:44,300 --> 00:48:45,840\nIt's gonna try and create a trace, right?\n\n976\n00:48:45,840 --> 00:48:47,150\nSo here's my trace properties.\n\n977\n00:48:47,150 --> 00:48:49,730\nSo the two names are kind\nof interchangeable.\n\n978\n00:48:49,730 --> 00:48:54,300\nA trace is a recording of the activities\nthat are going on on the server and\n\n979\n00:48:54,300 --> 00:48:58,060\nit's incredibly useful because you\ncan see a lot of really neat things.\n\n980\n00:48:58,060 --> 00:49:01,520\nWhen you go in here,\nit's got a default template that it uses\n\n981\n00:49:01,520 --> 00:49:04,450\nthat determines what\nit's going to be tracing.\n\n982\n00:49:04,450 --> 00:49:09,410\nSo I can come in and I can create a trace\nand maybe I just call it, what is today,\n\n983\n00:49:09,410 --> 00:49:10,690\nthe 16th.\n\n984\n00:49:10,690 --> 00:49:16,810\nSo I'll call this the September 16th,\n2014 activity trace.\n\n985\n00:49:16,810 --> 00:49:18,492\nAll right.\nJust so I can remember when it was made,\n\n986\n00:49:18,492 --> 00:49:20,230\nand what it's got.\n\n987\n00:49:20,230 --> 00:49:23,750\nAnd by default it just logs to the screen.\n\n988\n00:49:23,750 --> 00:49:27,710\nBut you can tell it to save the trace\nto a file, so that we can use it later.\n\n989\n00:49:27,710 --> 00:49:31,300\nRight, maybe I'll put this in my\nSIM directory that I made earlier.\n\n990\n00:49:33,500 --> 00:49:36,020\nSo I'll save it down there, right?\n\n991\n00:49:36,020 --> 00:49:37,540\nYou can save it to a table,\n\n992\n00:49:37,540 --> 00:49:41,020\nthat's really useful cuz then query\nagainst it to find out information.\n\n993\n00:49:41,020 --> 00:49:42,850\nSo you can save it wherever you want.\n\n994\n00:49:42,850 --> 00:49:45,490\nYou can choose to save\nserver process data also.\n\n995\n00:49:45,490 --> 00:49:46,690\nNormally, we don't care about that.\n\n996\n00:49:46,690 --> 00:49:48,950\nNormally we care about the queries.\n\n997\n00:49:48,950 --> 00:49:52,230\nYou can set a maximum file size, if you're\nworried about filling up your hard drive.\n\n998\n00:49:52,230 --> 00:49:54,770\nI'll bump it up to 500 megs.\n\n999\n00:49:54,770 --> 00:49:58,460\nAnd then under event selection,\nyou can pick what's going to get traced,\n\n1000\n00:49:58,460 --> 00:50:00,250\nand there's a lot of stuff.\n\n1001\n00:50:00,250 --> 00:50:04,435\nLog ins, log outs, stored procedures,\ntrans act SQL batches,\n\n1002\n00:50:04,435 --> 00:50:06,500\nbatch start, batch complete.\n\n1003\n00:50:07,650 --> 00:50:11,010\nThen inside of those you can\nchoose what you want to record.\n\n1004\n00:50:11,010 --> 00:50:13,060\nBatch start is what we\nnormally care about.\n\n1005\n00:50:13,060 --> 00:50:14,350\nThat's when somebody runs a query.\n\n1006\n00:50:14,350 --> 00:50:17,440\nWhen somebody runs a query its called\na SQL batch, that's our transaction.\n\n1007\n00:50:19,080 --> 00:50:23,090\nYou'll see their logging the text data,\nwhich is what the query actually was.\n\n1008\n00:50:23,090 --> 00:50:25,640\nThe application they use to enter it.\n\n1009\n00:50:25,640 --> 00:50:28,070\nThe user name, the log in name.\n\n1010\n00:50:28,070 --> 00:50:29,680\nThe NT use name is their windows account,\n\n1011\n00:50:29,680 --> 00:50:34,090\nthe log in name is their SQL account,\noftentimes those will be the same.\n\n1012\n00:50:34,090 --> 00:50:38,610\nThe CPU reads, writes,\nduration and client-processing.\n\n1013\n00:50:38,610 --> 00:50:41,560\nNow notice how CPU reads, writes,\nduration, I can't check that for\n\n1014\n00:50:41,560 --> 00:50:44,310\nbatch starting because the batch\nhasn't run yet, right.\n\n1015\n00:50:44,310 --> 00:50:46,350\nIf I want that I need batch completed.\n\n1016\n00:50:46,350 --> 00:50:50,330\nBatch completed will show CPU reads,\nwrites, duration, all right.\n\n1017\n00:50:50,330 --> 00:50:53,410\nHowever, what that won't show\nis if a transaction started and\n\n1018\n00:50:53,410 --> 00:50:55,030\ngot canceled and rolled back.\n\n1019\n00:50:55,030 --> 00:50:57,360\nWell, it didn't complete, it rolled back.\n\n1020\n00:50:57,360 --> 00:51:01,210\nSo that's why we have the two separate\nvalues to be able to trace those.\n\n1021\n00:51:01,210 --> 00:51:05,270\nNow, there's a lot more options\nthat we can trace that just aren't\n\n1022\n00:51:05,270 --> 00:51:06,380\nshowing up here.\n\n1023\n00:51:06,380 --> 00:51:10,240\nIf you go to, well,\nI guess it's too late here.\n\n1024\n00:51:10,240 --> 00:51:13,180\nWe can create a custom template that\nincludes a ton of other records.\n\n1025\n00:51:13,180 --> 00:51:15,360\nI'll show you that in just a moment.\n\n1026\n00:51:15,360 --> 00:51:19,300\nBut if we hit Run, it's gonna start\nrecording the activity in the background.\n\n1027\n00:51:19,300 --> 00:51:23,340\nAnd so there it goes, starting to\nshow what's happening on the system.\n\n1028\n00:51:23,340 --> 00:51:27,600\nIf I were to go back to my SQL\nmanagement studio, I'll do a new query.\n\n1029\n00:51:28,828 --> 00:51:30,930\nAnd you know,\nlet me close some of these other windows\n\n1030\n00:51:30,930 --> 00:51:32,770\nto reduce the traffic on the server.\n\n1031\n00:51:32,770 --> 00:51:35,590\nSo I'll say use human resources\n\n1032\n00:51:39,600 --> 00:51:43,790\nselect star from DBO.employees.\n\n1033\n00:51:43,790 --> 00:51:45,460\nThat's what I want.\n\n1034\n00:51:46,810 --> 00:51:51,140\nSo I'm just doing a query\nthere to pull up that table.\n\n1035\n00:51:51,140 --> 00:51:53,220\nSo I just reached in and\npulled up that table.\n\n1036\n00:51:53,220 --> 00:51:58,100\nIf I go back to my SQL server trace I\nshould be able to see it and there it is.\n\n1037\n00:51:58,100 --> 00:52:00,890\nLet me pause it cause more stuff\nwill come up on the screen.\n\n1038\n00:52:00,890 --> 00:52:03,930\nI can see two entries here,\nbatch starting,\n\n1039\n00:52:05,300 --> 00:52:08,870\nthat's when I ran the query, and batch\ncompleted, that means it was successful.\n\n1040\n00:52:10,620 --> 00:52:14,630\nIf we look at what it gives me,\nI can see what the actual query was.\n\n1041\n00:52:14,630 --> 00:52:19,670\nSo, I can see what it was that I was\nrunning I can see the NT username.\n\n1042\n00:52:19,670 --> 00:52:21,210\nI'm logged in as administrator.\n\n1043\n00:52:21,210 --> 00:52:23,590\nAnd the login name, lab/administrator.\n\n1044\n00:52:23,590 --> 00:52:25,500\nRight?\nSo I can see that account.\n\n1045\n00:52:25,500 --> 00:52:27,640\nI can see the application that was used.\n\n1046\n00:52:27,640 --> 00:52:29,280\nI used the SQL server management studio.\n\n1047\n00:52:30,460 --> 00:52:32,680\nAnd then I can see\nthe performance information.\n\n1048\n00:52:32,680 --> 00:52:33,230\nRight?\n\n1049\n00:52:33,230 --> 00:52:34,910\nHow long it took, the duration.\n\n1050\n00:52:34,910 --> 00:52:37,770\nI can see how many reads\nI did versus writes.\n\n1051\n00:52:37,770 --> 00:52:40,290\nSo I can get that breakdown of that query.\n\n1052\n00:52:42,330 --> 00:52:44,820\nAnd somewhere in here it\nshows the total duration,\n\n1053\n00:52:44,820 --> 00:52:46,640\noh actually it's right there duration, 48.\n\n1054\n00:52:46,640 --> 00:52:49,850\nSo, you can spot a lot of\ninformation about these queries and\n\n1055\n00:52:49,850 --> 00:52:51,450\nsee what's going on in your system.\n\n1056\n00:52:54,490 --> 00:52:59,220\nAll right, now that's something\nthat's kind of useful with trace,\n\n1057\n00:52:59,220 --> 00:53:01,170\njust seeing that generating a workload.\n\n1058\n00:53:01,170 --> 00:53:02,480\nBut if we're doing troubleshooting,\n\n1059\n00:53:02,480 --> 00:53:06,100\nlike I mentioned deadlocks,\nI want to watch my server for deadlocks.\n\n1060\n00:53:06,100 --> 00:53:09,850\nWell, what you can do is you can\ncreate an all new trace template.\n\n1061\n00:53:09,850 --> 00:53:10,750\nI'm just gonna close this one.\n\n1062\n00:53:12,070 --> 00:53:14,020\nOops.\nGuess I should have said yes there.\n\n1063\n00:53:14,020 --> 00:53:15,150\nThere we go.\n\n1064\n00:53:15,150 --> 00:53:18,070\nAnd notice my little new\nbutton here says new template.\n\n1065\n00:53:18,070 --> 00:53:22,340\nI can create a new template that tells\nthe server what I want to trace.\n\n1066\n00:53:22,340 --> 00:53:28,150\nSo I'm gonna trace my SQL Server 2012 and\nI'm gonna do dead lock tracing,\n\n1067\n00:53:28,150 --> 00:53:30,772\nso that's what I'm gonna call it,\ndead lock tracing.\n\n1068\n00:53:30,772 --> 00:53:34,850\nAll right, and\nI'm gonna create a new template and\n\n1069\n00:53:34,850 --> 00:53:37,260\ntell it under event\nselection what I wanna log.\n\n1070\n00:53:37,260 --> 00:53:39,880\nNow notice on this screen\nthere is a lot more then\n\n1071\n00:53:39,880 --> 00:53:41,800\nwhat we saw on the screen a moment ago.\n\n1072\n00:53:41,800 --> 00:53:47,180\nI've got broker options, CLR,\ncommon language runtime, full\n\n1073\n00:53:47,180 --> 00:53:51,690\ntext indexing, locks, tons of stuff in\nhere that I can log, but I didn't see on\n\n1074\n00:53:51,690 --> 00:53:55,820\nthe other screen because it was filtered\ndown based on the template that I chose.\n\n1075\n00:53:55,820 --> 00:53:58,310\nSo you can record lots and\n\n1076\n00:53:58,310 --> 00:54:02,890\nlots of stuff, even non query related\nstuff like performance reports.\n\n1077\n00:54:02,890 --> 00:54:04,890\nYou'll see those in here.\n\n1078\n00:54:04,890 --> 00:54:08,330\nQuery notifications,\nscan sessions, transact SQL.\n\n1079\n00:54:08,330 --> 00:54:12,280\nJust a ton of things.\n\n1080\n00:54:12,280 --> 00:54:14,730\nSo you got through and\nyou pick what it is you wanna log, and\n\n1081\n00:54:14,730 --> 00:54:17,780\nwhat I wanna log are dead locked.\n\n1082\n00:54:17,780 --> 00:54:22,600\nSo I'm gonna go up here under locks,\nand you've got lock, dead lock.\n\n1083\n00:54:22,600 --> 00:54:25,440\nI wanna know when dead locks occur,\nand I'm gonna check that off.\n\n1084\n00:54:25,440 --> 00:54:27,980\nIt's gonna get all the different\ninformation that it can log on it.\n\n1085\n00:54:27,980 --> 00:54:30,370\nSo there's another really cool one here,\ncalled dead lock graph.\n\n1086\n00:54:31,510 --> 00:54:33,260\nIf you do dead lock graph,\n\n1087\n00:54:33,260 --> 00:54:37,210\nit'll generate these really cool\nfiles that'll draw a picture for you.\n\n1088\n00:54:37,210 --> 00:54:39,570\nIt will show a table on the left,\nand a table on the right, and\n\n1089\n00:54:39,570 --> 00:54:41,940\na user on the left and a user on the\nright, and it will show the dead lock, and\n\n1090\n00:54:41,940 --> 00:54:46,990\na picture is so easy to interpret, so\nit really makes things a lot more simple.\n\n1091\n00:54:46,990 --> 00:54:50,380\nBut this one right here is going to\ngive me the raw data on the dead lock.\n\n1092\n00:54:50,380 --> 00:54:53,952\nSo I'm going to create this template here\nthat's just going to log those two things,\n\n1093\n00:54:53,952 --> 00:54:58,070\ndead lock graph and lock dead lock,\nand I'm going to save that.\n\n1094\n00:54:58,070 --> 00:55:02,210\nAnd now when I do a new\ntrace on my server,\n\n1095\n00:55:02,210 --> 00:55:05,050\nI'll have that template in here somewhere.\n\n1096\n00:55:05,050 --> 00:55:08,882\nSo under used template, I'm gonna find my\ndead lock graph, or dead lock tracing,\n\n1097\n00:55:08,882 --> 00:55:09,500\nthere it is.\n\n1098\n00:55:10,650 --> 00:55:13,350\nAll right, so dead lock tracing,\nthat's the one that I created.\n\n1099\n00:55:13,350 --> 00:55:17,220\nAnd let me just call\nit my dead lock trace.\n\n1100\n00:55:19,120 --> 00:55:21,070\nAnd I like to put the date on it.\n\n1101\n00:55:21,070 --> 00:55:26,857\nSo let me just stick in here,\nSeptember 16, 2014.\n\n1102\n00:55:26,857 --> 00:55:30,830\nDead lock trace, and I can start it up.\n\n1103\n00:55:30,830 --> 00:55:35,270\nAll right, now it's gonna run and\nI'm gonna see a lot less activity here.\n\n1104\n00:55:35,270 --> 00:55:39,269\nIf I jump back over to\nmy Query Analyzer and\n\n1105\n00:55:39,269 --> 00:55:45,917\nI re-run this query it just ran and\nif I go back to my trace, nothing.\n\n1106\n00:55:45,917 --> 00:55:49,270\nAll right?\nBecause I'm only tracing dead locks.\n\n1107\n00:55:49,270 --> 00:55:53,083\nAnd if a dead lock occurs, the server\nwill correct it, but I'll see it here.\n\n1108\n00:55:53,083 --> 00:55:56,250\nI'll know that it happened, and\nI'll be able to see what it was.\n\n1109\n00:55:56,250 --> 00:55:56,770\nWhat was the query?\n\n1110\n00:55:56,770 --> 00:55:57,460\nWhat generated that?\n\n1111\n00:55:57,460 --> 00:55:58,390\nWhat happened?\n\n1112\n00:55:58,390 --> 00:55:59,600\nAnd it'll generate that graph file.\n\n1113\n00:55:59,600 --> 00:56:01,810\nLet me show you the graph file.\n\n1114\n00:56:01,810 --> 00:56:08,600\nBack in the SQL Management Studio,\nif I go to file and open and file.\n\n1115\n00:56:10,110 --> 00:56:15,870\nThe graph files, and in XDL, so\nyou can find them wherever you're storing.\n\n1116\n00:56:15,870 --> 00:56:17,090\nI chose save to file so\n\n1117\n00:56:17,090 --> 00:56:20,650\nin that same directory you'll get\nthese XDL files, one for each graph.\n\n1118\n00:56:20,650 --> 00:56:25,740\nAnd so here's one that was generated, and\nhere's the picture I was talking about.\n\n1119\n00:56:25,740 --> 00:56:31,320\nIt really breaks it down in a super\neasy way to be able to look in there and\n\n1120\n00:56:31,320 --> 00:56:35,150\njust get an idea of\nwhat the heck happened.\n\n1121\n00:56:37,330 --> 00:56:38,820\nThat is really really small.\n\n1122\n00:56:38,820 --> 00:56:42,720\nLet me zoom in a bit here.\n\n1123\n00:56:42,720 --> 00:56:46,169\nBut you can see in here,\nit's kind of scaling a little weird, but\n\n1124\n00:56:46,169 --> 00:56:47,376\nI can see the key lock.\n\n1125\n00:56:47,376 --> 00:56:48,040\nRight?\n\n1126\n00:56:48,040 --> 00:56:49,350\nAnd I can see a key lock down here.\n\n1127\n00:56:49,350 --> 00:56:52,340\nSo here's these locks that happened.\n\n1128\n00:56:52,340 --> 00:56:53,640\nThe user on the left wanted to\ndo an update on this key, and\n\n1129\n00:56:53,640 --> 00:57:00,460\nthe user on the right wanted to do\nan update on this key down here.\n\n1130\n00:57:00,460 --> 00:57:03,700\nIn the meantime, they were both\ntrying to access the other's key, and\n\n1131\n00:57:03,700 --> 00:57:04,930\nthe deadlock was created.\n\n1132\n00:57:04,930 --> 00:57:05,440\nRight?\n\n1133\n00:57:05,440 --> 00:57:08,190\nSo I can see the deadlock, and\nthis whole picture is dynamic.\n\n1134\n00:57:08,190 --> 00:57:10,100\nSee how I can move all this stuff around?\n\n1135\n00:57:10,100 --> 00:57:13,120\nAnd the really cool part about that\nis if you float your cursor over it,\n\n1136\n00:57:13,120 --> 00:57:16,930\nyou'll get a ton of information\nabout the lock that occurred.\n\n1137\n00:57:16,930 --> 00:57:18,630\nSo these deadlock wraps are really useful,\nand\n\n1138\n00:57:18,630 --> 00:57:20,010\nit's showing me which one got cancelled.\n\n1139\n00:57:20,010 --> 00:57:22,280\nThis guy on the left,\nthat's the one that got cancelled.\n\n1140\n00:57:22,280 --> 00:57:23,640\nIt's got the blue x on it.\n\n1141\n00:57:23,640 --> 00:57:26,370\nAnd this guy on the right was the one that\nwas allowed to complete because it must\n\n1142\n00:57:26,370 --> 00:57:29,570\nhave been the higher resource\nintensive transaction.\n\n1143\n00:57:29,570 --> 00:57:33,820\nSo that kind of stuff is what's\ngenerated so that you can see it, and\n\n1144\n00:57:33,820 --> 00:57:38,280\nthen you can go and take action to try and\ncorrect it, try and\n\n1145\n00:57:38,280 --> 00:57:40,340\nminimize the occurrence of that deadlock.\n\n1146\n00:57:40,340 --> 00:57:43,310\nIt may have just been a fluke, maybe\nyou ignore and you don't do anything.\n\n1147\n00:57:43,310 --> 00:57:46,120\nBut there may be a specific action\nyou can take to correct that, so\n\n1148\n00:57:46,120 --> 00:57:47,710\nyou definitely want to look into it.\n\n1149\n00:57:47,710 --> 00:57:50,310\nAll really cool ways to use the tools\n\n1150\n00:57:50,310 --> 00:57:52,220\nthat are right here inside of\nthe SQL Management Studio.\n\n1151\n00:57:52,220 --> 00:57:56,050\nAll right, well I've blown way past\nthe break point for this segment, so let's\n\n1152\n00:57:56,050 --> 00:58:00,860\nstop here, and when we get back, we've got\neven more stuff for optimizing our server.\n\n1153\n00:58:00,860 --> 00:58:01,650\nStay tuned.\n\n1154\n00:58:01,650 --> 00:58:02,615\nWe'll be back after this.\n\n1155\n00:58:02,615 --> 00:58:09,793\n[NOISE]\nAll right.\n\n1156\n00:58:09,793 --> 00:58:12,040\nWelcome back everybody.\n\n1157\n00:58:12,040 --> 00:58:14,971\nSo, in the last few segments we\nsaw a couple of different ways\n\n1158\n00:58:14,971 --> 00:58:17,950\nto monitor our server and\nkinda see what's going on.\n\n1159\n00:58:17,950 --> 00:58:20,270\nThere's actually a few other ways\nthat are built into the system that\n\n1160\n00:58:20,270 --> 00:58:21,360\nare pretty neat.\n\n1161\n00:58:21,360 --> 00:58:22,459\nSo let me show you some of these.\n\n1162\n00:58:23,690 --> 00:58:26,460\nIf you have access to the physical server,\n\n1163\n00:58:26,460 --> 00:58:29,950\nif you can log into the physical\nSQL Server, you can use\n\n1164\n00:58:29,950 --> 00:58:34,150\nthe Windows Performance Monitor to view\nall sorts of SQL related information.\n\n1165\n00:58:34,150 --> 00:58:38,240\nWhen you install SQL Server,\nit installs not just SQL,\n\n1166\n00:58:38,240 --> 00:58:42,820\nit also installs a bunch of other\nextensions to some of the underlying OS.\n\n1167\n00:58:42,820 --> 00:58:47,360\nAnd one of the best places to see\nthat is in the Performance Monitor.\n\n1168\n00:58:47,360 --> 00:58:50,550\nSo I'm just gonna launch\nmy Performance Monitor, and\n\n1169\n00:58:50,550 --> 00:58:53,490\nnormally you click on this and\nyou see information about your server, and\n\n1170\n00:58:53,490 --> 00:58:55,140\nwe're really talking about Windows here.\n\n1171\n00:58:55,140 --> 00:58:57,900\nRight?\nSo I see my percent processor time is\n\n1172\n00:58:57,900 --> 00:59:02,820\nbeing displayed, and if you've watched\nour 70-410 show, we go into each\n\n1173\n00:59:02,820 --> 00:59:06,250\nof the different monitors you can put\nin here to track your disk IO and\n\n1174\n00:59:06,250 --> 00:59:08,120\nstuff for the operating system.\n\n1175\n00:59:08,120 --> 00:59:10,880\nWell, it is very operating system-centric.\n\n1176\n00:59:10,880 --> 00:59:12,230\nRight?\nIt's very focused on that.\n\n1177\n00:59:12,230 --> 00:59:15,785\nBut when we installed SQL,\nit put some extensions on here, and\n\n1178\n00:59:15,785 --> 00:59:19,490\nthe extensions let us monitor all\nsorts of SQL related activity.\n\n1179\n00:59:19,490 --> 00:59:23,074\nIf I hit my green plus button up\nhere it'll pull up my counters, and\n\n1180\n00:59:23,074 --> 00:59:26,211\nalmost all these counters\nare tied the operating system.\n\n1181\n00:59:26,211 --> 00:59:29,785\nBut you'll see a whole collection\nthat have been added right here.\n\n1182\n00:59:29,785 --> 00:59:32,445\nMSSQL $ whatever.\n\n1183\n00:59:32,445 --> 00:59:33,370\nRight?\n\n1184\n00:59:33,370 --> 00:59:35,775\nIt's not only added performance counters,\nbut\n\n1185\n00:59:35,775 --> 00:59:38,425\nit's added counters for\neach of my instances.\n\n1186\n00:59:38,425 --> 00:59:39,725\nRight?\nThat cluster instance from\n\n1187\n00:59:39,725 --> 00:59:41,505\nthe other day is there.\n\n1188\n00:59:41,505 --> 00:59:44,645\nWe've got, my default instance\nshould show up in here somewhere.\n\n1189\n00:59:45,965 --> 00:59:51,885\nTest SQL, and\nwhere is my default instance?\n\n1190\n00:59:51,885 --> 00:59:57,520\nMy default instance is just called MSSQL,\nand why am I not seeing it?\n\n1191\n00:59:57,520 --> 01:00:00,330\nI probably scrolled right past it.\n\n1192\n01:00:00,330 --> 01:00:03,800\nBut, either way, and we can take one of\nthese other ones like human resources.\n\n1193\n01:00:03,800 --> 01:00:06,810\nAnd you can go in, and you can view\nall sorts of different information.\n\n1194\n01:00:06,810 --> 01:00:10,830\nIt really does break it down into,\nto quite a few different things.\n\n1195\n01:00:10,830 --> 01:00:16,370\nSo you'll see access methods,\navailability, replication information.\n\n1196\n01:00:16,370 --> 01:00:19,680\nAnd we can pull up all sorts of data.\n\n1197\n01:00:19,680 --> 01:00:21,080\nThe hardest part here\nis knowing what to get.\n\n1198\n01:00:21,080 --> 01:00:22,080\nRight?\nCuz there's so\n\n1199\n01:00:22,080 --> 01:00:24,100\nmany different things to monitor.\n\n1200\n01:00:24,100 --> 01:00:26,570\nWell you've got this little checkbox\ndown here that says show description,\n\n1201\n01:00:26,570 --> 01:00:29,110\nand it'll give you a little\nsummary of what you're looking at.\n\n1202\n01:00:29,110 --> 01:00:32,500\nSo, if I wanna find bytes sent to replica.\n\n1203\n01:00:32,500 --> 01:00:34,080\nWell that one's pretty self explanatory.\n\n1204\n01:00:34,080 --> 01:00:36,440\nHow much data have I sent\nfrom one side to the other?\n\n1205\n01:00:36,440 --> 01:00:38,600\nBut, I might see something\nlike flow control.\n\n1206\n01:00:38,600 --> 01:00:40,030\nWell, what does that mean?\n\n1207\n01:00:40,030 --> 01:00:42,380\nWell, actually it's description's\nnot very good either.\n\n1208\n01:00:42,380 --> 01:00:46,610\nNumber of flow controls initiated in\nthe last second, so not very detailed.\n\n1209\n01:00:46,610 --> 01:00:48,680\nSome of them have really\ndetailed descriptions though,\n\n1210\n01:00:48,680 --> 01:00:51,770\nthat break it down and give you a great\nexplanation of what's going on.\n\n1211\n01:00:51,770 --> 01:00:55,450\nSo there's some neat stuff in here,\nreally good ways to monitor things,\n\n1212\n01:00:55,450 --> 01:00:58,080\nyour standard performance and\nother activities that are happening.\n\n1213\n01:00:58,080 --> 01:00:59,612\nNow, they will be summaries.\n\n1214\n01:00:59,612 --> 01:01:02,160\nRight?\nIt's just general performance on\n\n1215\n01:01:02,160 --> 01:01:05,650\nthe system, but\nit does give you a good idea.\n\n1216\n01:01:05,650 --> 01:01:09,098\nAnd if you're using things like system\ncenter operations manager it can gather\n\n1217\n01:01:09,098 --> 01:01:12,760\nthis data together and create charts,\nand graphs, and all sorts of stuff.\n\n1218\n01:01:12,760 --> 01:01:15,440\nBut, we can do it right here too.\n\n1219\n01:01:15,440 --> 01:01:19,250\nWe can go and monitor things\nlike our backups on the system.\n\n1220\n01:01:19,250 --> 01:01:23,260\nAnd you just figure out the ones that\nyou want, and you add them to the list.\n\n1221\n01:01:23,260 --> 01:01:27,040\nAnd as you add those in,\nlike my data files, my commit tables,\n\n1222\n01:01:27,040 --> 01:01:32,540\nwhatever it is I want to monitor, I add\nin each of these different entries, and\n\n1223\n01:01:32,540 --> 01:01:38,820\nit adds them to my chart so\nI'll be able to see them and view them.\n\n1224\n01:01:38,820 --> 01:01:39,430\nNow, did I not hit OK?\n\n1225\n01:01:41,180 --> 01:01:42,240\nI must not have.\n\n1226\n01:01:42,240 --> 01:01:46,501\nSo, I added a few entries, but then\nthey didn't stick for whatever reason.\n\n1227\n01:01:46,501 --> 01:01:49,480\nSo I'll monitor something\nlike my SQL Server Agent.\n\n1228\n01:01:49,480 --> 01:01:51,291\nOh, that's probably my problem.\n\n1229\n01:01:51,291 --> 01:01:54,105\nThese are my cluster\ninstances which I removed so\n\n1230\n01:01:54,105 --> 01:01:59,080\nthat they actually don't exist anymore,\nso the counters are not gonna work.\n\n1231\n01:01:59,080 --> 01:02:00,680\nSo when I add it in, and I hit OK,\n\n1232\n01:02:00,680 --> 01:02:05,106\nit's not adding it to my list because\nthose instances are actually removed.\n\n1233\n01:02:05,106 --> 01:02:06,740\nBut, basically add in some counters, and\n\n1234\n01:02:06,740 --> 01:02:08,940\nyou can really see some\ngood stuff on this system.\n\n1235\n01:02:08,940 --> 01:02:13,100\nIn my show notes which I'll post at the\nepisode, I listed some of the ones that I\n\n1236\n01:02:13,100 --> 01:02:18,499\nlike to monitor, and so\nI've got those buried in here, right here.\n\n1237\n01:02:18,499 --> 01:02:21,970\nSo I just call them my common\nSQL specific counters.\n\n1238\n01:02:21,970 --> 01:02:24,893\nThese are some that will really give you\na good idea of what your server is doing.\n\n1239\n01:02:24,893 --> 01:02:27,887\nThings like SQL Server Buffer Manager.\n\n1240\n01:02:27,887 --> 01:02:28,640\nAll right?\n\n1241\n01:02:28,640 --> 01:02:30,910\nThe buffer manager, and\nspecifically inside of that one,\n\n1242\n01:02:30,910 --> 01:02:35,440\nthe buffer cache hit ratio,\nthat's showing the ratio of\n\n1243\n01:02:35,440 --> 01:02:39,142\nwhen you find stuff in RAM versus when\nyou have to go to the hard drive.\n\n1244\n01:02:39,142 --> 01:02:39,840\nAll right?\n\n1245\n01:02:39,840 --> 01:02:43,120\nObviously we really wanna find\nstuff in RAM whenever possible.\n\n1246\n01:02:43,120 --> 01:02:46,670\nSo a high number for\nthis counter is a good thing.\n\n1247\n01:02:46,670 --> 01:02:47,770\nRight?\nThat means that,\n\n1248\n01:02:47,770 --> 01:02:51,910\nyeah, we're pulling data from RAM a lot\nmore often than we're going to disk.\n\n1249\n01:02:51,910 --> 01:02:55,600\nBut if you see a ratio that's way off,\nlike 1 to 100.\n\n1250\n01:02:55,600 --> 01:02:58,882\nOut of 100 queries only once do you\nfind the information you need in RAM and\n\n1251\n01:02:58,882 --> 01:03:00,726\nthe rest of the time you're going to disk,\n\n1252\n01:03:00,726 --> 01:03:03,649\nthat's a good indicator that you\nneed to optimize your databases,\n\n1253\n01:03:03,649 --> 01:03:06,340\ncreate indexes, do whatever it\nis you need to optimize that.\n\n1254\n01:03:07,550 --> 01:03:10,430\nSame thing goes with\nSQL Server Plan Cache.\n\n1255\n01:03:10,430 --> 01:03:14,460\nThe plan cache is, if you're running\nthe same query over and over and\n\n1256\n01:03:14,460 --> 01:03:18,060\nover again, SQL can cache that query so\n\n1257\n01:03:18,060 --> 01:03:21,780\nthat it doesn't have to go and\nredo the execution plan again.\n\n1258\n01:03:21,780 --> 01:03:22,770\nIt already knows how to get the data.\n\n1259\n01:03:22,770 --> 01:03:23,720\nIt can just jump in and do it.\n\n1260\n01:03:23,720 --> 01:03:24,930\nThat's a good thing.\n\n1261\n01:03:24,930 --> 01:03:28,940\nBut if your system runs a ton of unique\nqueries, there's nothing to cache.\n\n1262\n01:03:28,940 --> 01:03:29,910\nEvery query is different.\n\n1263\n01:03:29,910 --> 01:03:32,520\nIt can't cache the execution\nplan to re-execute it.\n\n1264\n01:03:32,520 --> 01:03:34,820\nSo on this one if we see a high value,\n\n1265\n01:03:34,820 --> 01:03:37,510\nthat means our cache is\nreally being used well.\n\n1266\n01:03:37,510 --> 01:03:41,292\nIf we see a low value it means our\ncache is not really being used well.\n\n1267\n01:03:41,292 --> 01:03:44,000\nSo we can add those in again.\n\n1268\n01:03:44,000 --> 01:03:46,800\nSQL Statistics, Batch Requests/sec.\n\n1269\n01:03:46,800 --> 01:03:49,337\nThis one, it doesn't really have a good or\n\n1270\n01:03:49,337 --> 01:03:53,640\na bad Batch request per second is just\nhow many queries we run per second.\n\n1271\n01:03:53,640 --> 01:03:57,188\nIt's a good way to gauge how busy your\nserver is, if it's under heavy load,\n\n1272\n01:03:57,188 --> 01:04:00,495\nif it's under light load, to be able\nto compare a good day to a bad day.\n\n1273\n01:04:00,495 --> 01:04:01,360\nRight?\nYou might look and\n\n1274\n01:04:01,360 --> 01:04:05,590\nsay, on a normal day,\nI'm processing 100 queries per second.\n\n1275\n01:04:05,590 --> 01:04:06,980\nToday the server seems a little sluggish.\n\n1276\n01:04:06,980 --> 01:04:08,160\nLet me go look at it.\n\n1277\n01:04:08,160 --> 01:04:10,140\nOh I'm doing 200 queries per second.\n\n1278\n01:04:10,140 --> 01:04:11,610\nThe server's twice as busy as normal.\n\n1279\n01:04:11,610 --> 01:04:12,630\nI wonder what's going on.\n\n1280\n01:04:12,630 --> 01:04:14,490\nRight?\nNot necessarily a good or a bad thing,\n\n1281\n01:04:14,490 --> 01:04:17,820\njust an indicator for us.\n\n1282\n01:04:17,820 --> 01:04:20,160\nLocks Average Wait Time.\n\n1283\n01:04:20,160 --> 01:04:22,740\nSo, when we're waiting on\na lock what's our average\n\n1284\n01:04:22,740 --> 01:04:24,920\nwait time before the lock is freed up?\n\n1285\n01:04:24,920 --> 01:04:26,580\nThis should be a really short number,\nright?\n\n1286\n01:04:26,580 --> 01:04:28,590\nThe lower the number the better,\nwith zero being the best.\n\n1287\n01:04:28,590 --> 01:04:30,130\nZero means we're never having to wait.\n\n1288\n01:04:30,130 --> 01:04:32,470\nBut if you see a really high number here,\n\n1289\n01:04:32,470 --> 01:04:34,860\nthat means I might need to\noptimize my queries a little bit,\n\n1290\n01:04:34,860 --> 01:04:37,180\nrearrange the queries so\nthey're not locking so much data.\n\n1291\n01:04:39,120 --> 01:04:41,750\nDatabase Cache Memory and Free memory,\n\n1292\n01:04:41,750 --> 01:04:46,890\nthese are two memory monitors or\nperformance counters that we use,\n\n1293\n01:04:46,890 --> 01:04:50,055\nand they show basically the same\ninformation, just a different way.\n\n1294\n01:04:50,055 --> 01:04:54,550\nDatabase Cache Memory is how much of\nour memory we're actually using, and\n\n1295\n01:04:54,550 --> 01:04:56,200\nFree Memory is, well,\nhow much we have free.\n\n1296\n01:04:56,200 --> 01:04:57,470\nNow that sounds a little weird.\n\n1297\n01:04:57,470 --> 01:04:59,830\nWhy would we monitor two of these?\n\n1298\n01:04:59,830 --> 01:05:02,693\nWell, let's say that I've assigned\nmy SQL Server four gigs of RAM.\n\n1299\n01:05:02,693 --> 01:05:04,503\nRight?\nI went into the server governor, and\n\n1300\n01:05:04,503 --> 01:05:07,190\nI set it, and\nI reserved four gigs of RAM for it.\n\n1301\n01:05:07,190 --> 01:05:10,760\nJust because I have four gigs of\nRAM doesn't mean I'm using it.\n\n1302\n01:05:10,760 --> 01:05:13,690\nMaybe my cache is really\nonly using a gig and a half.\n\n1303\n01:05:13,690 --> 01:05:16,530\nSo I'm kind of wasting the other\nmemory that I've reserved.\n\n1304\n01:05:16,530 --> 01:05:19,340\nWell I would see that right here\nwith my Database Cache Memory.\n\n1305\n01:05:19,340 --> 01:05:23,300\nIt's gonna show what we're actually\nusing of the memory that we've assigned.\n\n1306\n01:05:23,300 --> 01:05:25,999\nSo it's a good counter just to gauge\nwhether your server is sized right.\n\n1307\n01:05:27,580 --> 01:05:29,430\nAll right.\nBut those are the normal counters that\n\n1308\n01:05:29,430 --> 01:05:33,631\nI like to monitor, so in our performance\nmonitor we would go in and find those.\n\n1309\n01:05:33,631 --> 01:05:36,176\nRight?\nThey're all under the SQL Server counter\n\n1310\n01:05:36,176 --> 01:05:37,770\narea, so we just kinda find them.\n\n1311\n01:05:37,770 --> 01:05:38,281\nHere we go.\n\n1312\n01:05:38,281 --> 01:05:43,150\nSo SQL Server, see how I've got\nSQL Server, colon, and then a sub item?\n\n1313\n01:05:43,150 --> 01:05:47,880\nSo if I wanted to do the buffer manager,\nbuffer cache hit ratio,\n\n1314\n01:05:47,880 --> 01:05:52,420\nI would go for SQL Server, and\nthen find the buffer manager.\n\n1315\n01:05:52,420 --> 01:05:56,030\nAnd then under there I would find\nthe buffer cache hit ratio, and\n\n1316\n01:05:56,030 --> 01:05:56,990\nI would add that in.\n\n1317\n01:05:56,990 --> 01:06:00,890\nAnd when we say OK, it adds it to my list.\n\n1318\n01:06:00,890 --> 01:06:04,440\nThere it is, and now I'm starting\nto monitor that and I can see it.\n\n1319\n01:06:04,440 --> 01:06:08,020\nThe cool part here is I can monitor\nit over a much larger amount of time,\n\n1320\n01:06:08,020 --> 01:06:10,910\nnot just 60 seconds in the life\nof the server anymore.\n\n1321\n01:06:10,910 --> 01:06:13,640\nIn fact, if we go in and set a data\ncollector set, you can set it to\n\n1322\n01:06:13,640 --> 01:06:18,310\nlog to the hard drive, and you can\nmonitor 24 hours or weeks or months.\n\n1323\n01:06:18,310 --> 01:06:19,090\nRight?\n\n1324\n01:06:19,090 --> 01:06:20,350\nHere's the thing, though.\n\n1325\n01:06:20,350 --> 01:06:21,940\nBe careful with these monitors.\n\n1326\n01:06:21,940 --> 01:06:25,030\nThe more performance counters you add,\n\n1327\n01:06:25,030 --> 01:06:28,300\nthe more of a burden it creates\non the server to record the data.\n\n1328\n01:06:28,300 --> 01:06:32,322\nSo if you add a ton of counters in here,\nit'll really start to affect your server.\n\n1329\n01:06:32,322 --> 01:06:36,400\nYou'll see, your CPU utilization will\nstart to go up by a few percentage points,\n\n1330\n01:06:36,400 --> 01:06:39,450\nand your disk IA will start to go up\ncecause it's having to query the system to\n\n1331\n01:06:39,450 --> 01:06:41,140\nput all this information together.\n\n1332\n01:06:41,140 --> 01:06:41,730\nAll right?\n\n1333\n01:06:41,730 --> 01:06:45,430\nSo, you really wanna minimize the amount\nof performance counters you use,\n\n1334\n01:06:45,430 --> 01:06:48,360\nreally focus in on what it\nis you're trying to track.\n\n1335\n01:06:48,360 --> 01:06:49,440\nAnd that's why I made this list.\n\n1336\n01:06:49,440 --> 01:06:51,250\nI made this list years ago.\n\n1337\n01:06:51,250 --> 01:06:54,640\nThese are the ones that I use just\nreally commonly to get an idea of\n\n1338\n01:06:54,640 --> 01:06:58,750\nhow well my server's performing, and\nI might just run this for an hour, today.\n\n1339\n01:06:58,750 --> 01:07:00,960\nToday's a good day, so\nI run it for an hour.\n\n1340\n01:07:00,960 --> 01:07:04,610\nAn then that way on a bad day, when things\naren't running well, I can run this again.\n\n1341\n01:07:04,610 --> 01:07:07,320\nAnd I can say,\nis it the same as it used to be and\n\n1342\n01:07:07,320 --> 01:07:09,820\nthis is just my perception\nthat things are slow?\n\n1343\n01:07:09,820 --> 01:07:11,370\nOr is it actually worse?\n\n1344\n01:07:11,370 --> 01:07:13,540\nAnd we can see right here and\nfigure it out.\n\n1345\n01:07:13,540 --> 01:07:15,540\nAll right?\nSo good counters to use.\n\n1346\n01:07:15,540 --> 01:07:19,430\nNow this information right here is built\non the SQL Performance Monitor, and\n\n1347\n01:07:19,430 --> 01:07:22,392\nwe really need to have access to\nthe underlying server to get at the data.\n\n1348\n01:07:22,392 --> 01:07:23,530\nAll right?\n\n1349\n01:07:23,530 --> 01:07:25,660\nWhat if i don't have access\nto the underlying server?\n\n1350\n01:07:25,660 --> 01:07:27,740\nWhat if I'm a database administrator and\n\n1351\n01:07:27,740 --> 01:07:32,730\nI have access to SQL, I have a full\nsysadmin status inside of SQL, but\n\n1352\n01:07:32,730 --> 01:07:36,150\nI don't have administrative\naccess to the underlying OS.\n\n1353\n01:07:36,150 --> 01:07:38,390\nRight?\nSo I don't have access to that server.\n\n1354\n01:07:38,390 --> 01:07:40,530\nIn that scenario I can't use\nthe performance monitor.\n\n1355\n01:07:40,530 --> 01:07:42,380\nIt's part of the underlying OS.\n\n1356\n01:07:42,380 --> 01:07:46,710\nWell, SQL actually has a lot of this\ninformation in the database, too.\n\n1357\n01:07:46,710 --> 01:07:51,040\nIn the database, we have something called\na dynamic management view, or a DMV.\n\n1358\n01:07:51,040 --> 01:07:55,880\nThe dynamic management views are created\nfor us, we don't have to make them, and\n\n1359\n01:07:55,880 --> 01:07:57,720\nwhat they are is they're tables.\n\n1360\n01:07:57,720 --> 01:08:01,170\nThey're tables in our database\nthat the system makes.\n\n1361\n01:08:01,170 --> 01:08:05,957\nIf I go under my server here, and\nI go under human resources and\n\n1362\n01:08:05,957 --> 01:08:13,180\nI go under views, and system views, I'll\nstart to see a bunch of stuff in here.\n\n1363\n01:08:13,180 --> 01:08:17,518\nSee all these sys.unavailabilities,\nsys.columns, sys.whatever,\n\n1364\n01:08:17,518 --> 01:08:19,389\nthere's a lot of stuff in here.\n\n1365\n01:08:19,389 --> 01:08:20,410\nAll right?\n\n1366\n01:08:20,410 --> 01:08:23,130\nAnd then here's the sys DM ones,\nthese are the really useful ones.\n\n1367\n01:08:23,130 --> 01:08:26,560\nSys DMDB, sys DM exec, and so on.\n\n1368\n01:08:26,560 --> 01:08:27,320\nWhat are these?\n\n1369\n01:08:27,320 --> 01:08:30,170\nThat's a lot of tables,\nthere's hundreds of them.\n\n1370\n01:08:30,170 --> 01:08:30,670\nRight?\n\n1371\n01:08:31,670 --> 01:08:32,540\nWhat are those?\n\n1372\n01:08:32,540 --> 01:08:34,245\nAnd that's just for\none database right there,\n\n1373\n01:08:34,245 --> 01:08:36,000\nthat's not even counting\nthe server as a whole.\n\n1374\n01:08:36,000 --> 01:08:37,240\nThe server has them too.\n\n1375\n01:08:37,240 --> 01:08:40,050\nSo what those are, are virtual tables.\n\n1376\n01:08:40,050 --> 01:08:41,360\nThey're not real tables.\n\n1377\n01:08:41,360 --> 01:08:42,090\nThey're views.\n\n1378\n01:08:42,090 --> 01:08:45,180\nThere's no underlying table\ndata underneath them.\n\n1379\n01:08:45,180 --> 01:08:50,990\nAnd when I query them, if I query one of\nthose tables, the table doesn't exist.\n\n1380\n01:08:50,990 --> 01:08:54,290\nSQL will intercept my query and\nsay, oh you're looking for\n\n1381\n01:08:54,290 --> 01:08:56,550\nthis data, let me go and get it.\n\n1382\n01:08:56,550 --> 01:08:59,170\nAnd it's almost entirely performance data.\n\n1383\n01:08:59,170 --> 01:09:02,588\nSo if I wanna pull up my deadlock list I\ncan query a dynamic management view for\n\n1384\n01:09:02,588 --> 01:09:05,570\ndeadlocks, and it'll go out and\nfigure it out for me right then and\n\n1385\n01:09:05,570 --> 01:09:08,140\npresent the data to me\nas if it was a table.\n\n1386\n01:09:08,140 --> 01:09:08,649\nAll right?\n\n1387\n01:09:08,649 --> 01:09:09,920\nNow, why would I do that?\n\n1388\n01:09:09,920 --> 01:09:12,390\nWhy wouldn't I just use any of the other\ntools that we've talked about?\n\n1389\n01:09:12,390 --> 01:09:15,500\nWell, these can be\nqueried programatically.\n\n1390\n01:09:15,500 --> 01:09:19,030\nYou can query them right through\nTransact-SQL and get the data back.\n\n1391\n01:09:19,030 --> 01:09:22,280\nYou don't need any access\nto the underlying OS.\n\n1392\n01:09:22,280 --> 01:09:24,182\nYou can do it entirely through SQL.\n\n1393\n01:09:24,182 --> 01:09:27,030\nSo the dynamic management\nviews are designed to give\n\n1394\n01:09:27,030 --> 01:09:31,460\na database administrator access to all the\nperformance information they could need\n\n1395\n01:09:31,460 --> 01:09:34,050\nwithout having to rely on\nWindows underneath it.\n\n1396\n01:09:34,050 --> 01:09:34,700\nAll right?\n\n1397\n01:09:34,700 --> 01:09:38,150\nNow, there are hundreds of\ndynamic management views, and for\n\n1398\n01:09:38,150 --> 01:09:40,930\nthe exam they don't expect\nyou to know all of them.\n\n1399\n01:09:40,930 --> 01:09:42,980\nIn fact they really don't even\nexpect you to know a single one.\n\n1400\n01:09:42,980 --> 01:09:45,630\nThey want you to know that dynamic\nmanagement views exist and\n\n1401\n01:09:45,630 --> 01:09:46,830\nhow they can be used.\n\n1402\n01:09:46,830 --> 01:09:47,460\nAll right?\n\n1403\n01:09:47,460 --> 01:09:50,570\nBut, a couple of things that I\nwould make sure to remember, and\n\n1404\n01:09:50,570 --> 01:09:53,050\nagain these'll be in my show notes so\nyou guys will have it.\n\n1405\n01:09:53,050 --> 01:09:57,020\nBut the dynamic management views\nare really broken up into five categories.\n\n1406\n01:09:57,020 --> 01:09:57,670\nAll right?\n\n1407\n01:09:57,670 --> 01:10:02,606\nMost of them will have a name\nthat starts like this, sys.dm_\n\n1408\n01:10:02,606 --> 01:10:06,320\nsomething followed by another value.\n\n1409\n01:10:06,320 --> 01:10:07,310\nAll right?\n\n1410\n01:10:07,310 --> 01:10:11,470\nSo, sys.dm, that let's you know\nthat this is a system table or\n\n1411\n01:10:11,470 --> 01:10:15,210\nview, DM, it's a dynamic management view.\n\n1412\n01:10:15,210 --> 01:10:16,110\nAll right?\n\n1413\n01:10:16,110 --> 01:10:18,550\nThe next value, underscore something.\n\n1414\n01:10:18,550 --> 01:10:21,930\nThat's the category of what you're\nmonitoring, and there's five categories,\n\n1415\n01:10:21,930 --> 01:10:26,370\nexec, os, transaction, io, database.\n\n1416\n01:10:26,370 --> 01:10:27,840\nAll right?\n\n1417\n01:10:27,840 --> 01:10:31,770\nAfter that, there'll be something specific\nyou're monitoring about that entry.\n\n1418\n01:10:31,770 --> 01:10:34,120\nSo for example, transactions.\n\n1419\n01:10:34,120 --> 01:10:39,410\nIf I'm monitoring for deadlocks, that's\ngonna be underneath the transactions view.\n\n1420\n01:10:39,410 --> 01:10:42,787\nSo I'll see sys.dm_ tran_deadlocks.\n\n1421\n01:10:42,787 --> 01:10:46,502\nI don't know if that's exactly it, but\nit'll be named something like that.\n\n1422\n01:10:46,502 --> 01:10:48,380\nAll right?\nThat's how I know what that one is.\n\n1423\n01:10:48,380 --> 01:10:49,548\nOr I do an example down here.\n\n1424\n01:10:49,548 --> 01:10:50,873\nSys.dm_os, right?\n\n1425\n01:10:50,873 --> 01:10:55,700\nSo I'm querying something\nabout the operating system.\n\n1426\n01:10:55,700 --> 01:10:57,920\nUnderscore wait stats.\n\n1427\n01:10:57,920 --> 01:10:58,530\nAll right.\n\n1428\n01:10:58,530 --> 01:11:02,360\nHow long am I having to wait for\naccess to resources in the underlying OS?\n\n1429\n01:11:02,360 --> 01:11:04,520\nI don't have to have access to the OS.\n\n1430\n01:11:04,520 --> 01:11:07,432\nThis dynamic management view will\nfind out that data for me and\n\n1431\n01:11:07,432 --> 01:11:09,730\npresent it to me in table format.\n\n1432\n01:11:09,730 --> 01:11:10,340\nAll right?\n\n1433\n01:11:10,340 --> 01:11:11,845\nSo that's how we can use these.\n\n1434\n01:11:11,845 --> 01:11:16,380\nExec,that's for\nprocesses executing on the server.\n\n1435\n01:11:16,380 --> 01:11:20,430\nIf I'm running queries, stored procedures,\nanything like that, anything that's being\n\n1436\n01:11:20,430 --> 01:11:25,640\nexecuted or run in the SQL environment,\nI can query data on that.\n\n1437\n01:11:25,640 --> 01:11:28,150\nOS, that's the underlying\noperating system.\n\n1438\n01:11:28,150 --> 01:11:30,840\nAll the stuff that we pulled from\nthe performance monitor we can pull\n\n1439\n01:11:30,840 --> 01:11:33,170\nthrough sys.dm_os.\n\n1440\n01:11:33,170 --> 01:11:35,417\nThe data is gonna be stored in there too.\n\n1441\n01:11:35,417 --> 01:11:38,954\nSys.dm_tran, that's for\nour transactional information,\n\n1442\n01:11:38,954 --> 01:11:44,280\ntransactions being committed, successfully\nfinished, or rolled back, that failed.\n\n1443\n01:11:44,280 --> 01:11:45,516\nDeadlocks will show up in there to,\n\n1444\n01:11:45,516 --> 01:11:47,425\ncuz that's usually when we\nhave transaction issues.\n\n1445\n01:11:47,425 --> 01:11:52,060\nsys.dm_io, that's for input output.\n\n1446\n01:11:52,060 --> 01:11:54,870\nAs data is being sent in and\nout of the database.\n\n1447\n01:11:54,870 --> 01:11:59,190\nTypically, this is disk I/O, but\nyour cache falls under this also, so RAM,\n\n1448\n01:11:59,190 --> 01:12:03,140\ndata going in and\nout of RAM falls under the I/O category.\n\n1449\n01:12:03,140 --> 01:12:07,590\nAnd then, lastly sys.bm_db\ninformation about our database.\n\n1450\n01:12:07,590 --> 01:12:11,150\nIf you want to inquiry how full the\ndatabase is, how much free space it's got,\n\n1451\n01:12:11,150 --> 01:12:16,764\nif the indexes are fragmented, that\nkind of data, it's all under sys.bm_db.\n\n1452\n01:12:16,764 --> 01:12:20,665\nNow, each one of these\ncategories will have 50,\n\n1453\n01:12:20,665 --> 01:12:26,530\n100 different sub-entries right,\nthat actually make up the view.\n\n1454\n01:12:26,530 --> 01:12:30,900\nAnd that's what I saw here when I went\nunder this table in System Views.\n\n1455\n01:12:30,900 --> 01:12:35,993\nLet me zoom in on this a little bit so\nwe can see it.\n\n1456\n01:12:39,660 --> 01:12:40,310\nBut, yeah, whoops.\n\n1457\n01:12:40,310 --> 01:12:44,030\nI'm just going to go crazy here.\n\n1458\n01:12:44,030 --> 01:12:44,980\nThere we go.\n\n1459\n01:12:44,980 --> 01:12:46,320\nAll right.\nSo, sysdm.\n\n1460\n01:12:46,320 --> 01:12:49,890\nYou'll see this other one,\nsysdm_audit_broker.\n\n1461\n01:12:49,890 --> 01:12:52,400\nThose you're not likely\nto see on the exam.\n\n1462\n01:12:52,400 --> 01:12:55,780\nBut the ones that I highlighted,\nsys.dm_db.\n\n1463\n01:12:55,780 --> 01:12:57,490\nThat's a big one, right?\n\n1464\n01:12:57,490 --> 01:13:01,010\nAnd if you look under here, there's\ninformation on my mirroring status.\n\n1465\n01:13:01,010 --> 01:13:05,860\nI've got missing index group,\npartition status, task space usage.\n\n1466\n01:13:05,860 --> 01:13:08,820\nTons of information\nrelated to the database.\n\n1467\n01:13:08,820 --> 01:13:09,660\nAnd then exec.\n\n1468\n01:13:09,660 --> 01:13:11,800\nWhat's executing in the background.\n\n1469\n01:13:11,800 --> 01:13:15,940\nProcesses, background jobs,\nconnections, requests, sessions.\n\n1470\n01:13:15,940 --> 01:13:17,250\nTriggers all sorts of stuff there.\n\n1471\n01:13:17,250 --> 01:13:21,110\nAnd we'll see I/O.\n\n1472\n01:13:21,110 --> 01:13:25,560\nSo, here's the input, output information\nfor clustering, pending, and other things,\n\n1473\n01:13:25,560 --> 01:13:26,610\nback up tapes.\n\n1474\n01:13:26,610 --> 01:13:28,350\nSo, input, output on the back up.\n\n1475\n01:13:28,350 --> 01:13:32,420\nWe've got OS, child instances,\nhosts, and so on, memory.\n\n1476\n01:13:32,420 --> 01:13:35,100\nAll that data kind of\nstuffed away in there.\n\n1477\n01:13:35,100 --> 01:13:36,860\nTons of data that we can query.\n\n1478\n01:13:36,860 --> 01:13:41,170\nThese are tables, one of the easiest way\nto view them is you can come in here and\n\n1479\n01:13:41,170 --> 01:13:45,610\ntake something like weight stats,\nI mentioned weight stats a minute ago.\n\n1480\n01:13:45,610 --> 01:13:49,360\nYou can just right click on that and\nsay select top 1000 rows and\n\n1481\n01:13:49,360 --> 01:13:50,430\nit will generate it.\n\n1482\n01:13:50,430 --> 01:13:58,050\nSo now over here what I'm seeing,\nIf I zoom in a bit.\n\n1483\n01:13:58,050 --> 01:14:01,580\nHere's the wait types that are on\nmy system which are my locks.\n\n1484\n01:14:01,580 --> 01:14:03,250\nSo I can see the different locks.\n\n1485\n01:14:03,250 --> 01:14:07,126\nHow many waiting tasks there are, so\nI actually have a few waits right now, and\n\n1486\n01:14:07,126 --> 01:14:08,380\nwhat their wait time is.\n\n1487\n01:14:08,380 --> 01:14:10,080\nThis one has actually\nbeen waiting a long time.\n\n1488\n01:14:10,080 --> 01:14:13,290\nRight, this is a milliseconds so\nthat's waiting 30 seconds.\n\n1489\n01:14:13,290 --> 01:14:16,130\nThat's a long time in computer land.\n\n1490\n01:14:16,130 --> 01:14:19,470\nI can see max wait times for things and\nsignal wait times and so on.\n\n1491\n01:14:19,470 --> 01:14:20,480\nThis information is right here.\n\n1492\n01:14:20,480 --> 01:14:21,760\nIt looks like a table.\n\n1493\n01:14:21,760 --> 01:14:23,380\nTo me, this looks like a table.\n\n1494\n01:14:23,380 --> 01:14:25,460\nBut the server is not\nconstantly updating that.\n\n1495\n01:14:25,460 --> 01:14:29,650\nIn fact,\nthis view didn't exist until I queried it.\n\n1496\n01:14:29,650 --> 01:14:33,960\nWhen I queried it, the server got that\ndata for me, it presented it to me and\n\n1497\n01:14:33,960 --> 01:14:35,430\nnow it no longer exists either.\n\n1498\n01:14:35,430 --> 01:14:36,900\nThat table is gone.\n\n1499\n01:14:36,900 --> 01:14:40,410\nIf I rerun that query, it'll rerun and\n\n1500\n01:14:40,410 --> 01:14:44,210\nit regenerates it and now it's updated and\nreflecting new data, all right?\n\n1501\n01:14:44,210 --> 01:14:47,300\nI'll see some of my locks have\nactually increased their time.\n\n1502\n01:14:47,300 --> 01:14:49,180\nAt least I think they have.\n\n1503\n01:14:49,180 --> 01:14:50,670\nSo now it's the new information,\n\n1504\n01:14:50,670 --> 01:14:55,390\nthis is being dynamically generated\nwhen I request it, all right?\n\n1505\n01:14:55,390 --> 01:15:00,010\nNow, this is how I normally access it,\nI normally just select the whole table and\n\n1506\n01:15:00,010 --> 01:15:03,340\npull it up that way, but\nyou can do all sorts of stuff with this\n\n1507\n01:15:03,340 --> 01:15:06,950\nwhen you write a query, and that was\nlike the example I had in my notes.\n\n1508\n01:15:06,950 --> 01:15:09,570\nLet's see, where did I put that here?\n\n1509\n01:15:09,570 --> 01:15:11,415\nSo if we do something like\n\n1510\n01:15:11,415 --> 01:15:22,280\nselect*fromsys.DM_OS_weightstatsorderby\n\n1511\n01:15:22,280 --> 01:15:27,770\nwe can start to apply sorting to\nit which is always kinda nice.\n\n1512\n01:15:27,770 --> 01:15:30,140\nI'm gonna do wait time MS.\n\n1513\n01:15:30,140 --> 01:15:31,150\nWe'll do descending.\n\n1514\n01:15:33,620 --> 01:15:37,070\nAll right, so if I run that,\nit's the same data I saw a moment ago.\n\n1515\n01:15:37,070 --> 01:15:39,810\nIt's just now being sorted by\nthe wait time in milliseconds so\n\n1516\n01:15:39,810 --> 01:15:42,880\nI can see who's been waiting\nthe longest and so on.\n\n1517\n01:15:42,880 --> 01:15:45,990\nSo kind of makes life\na little bit simpler for us.\n\n1518\n01:15:45,990 --> 01:15:49,200\nWe get the information we need and\nwe work with it.\n\n1519\n01:15:49,200 --> 01:15:50,280\nReally cool stuff.\n\n1520\n01:15:50,280 --> 01:15:52,520\nIt's all built right\nthere into the system.\n\n1521\n01:15:52,520 --> 01:15:54,320\nYou don't have to make these,\nthey're already there.\n\n1522\n01:15:54,320 --> 01:15:56,330\nThe hardest part here is just\nknowing which ones exist, right?\n\n1523\n01:15:56,330 --> 01:15:57,800\nKnowing which ones to use.\n\n1524\n01:15:57,800 --> 01:16:00,710\nAnd so you'll find that if\nthere's performance counters and\n\n1525\n01:16:00,710 --> 01:16:05,240\nstuff that you really enjoy using,\nyou may wanna write a script or something,\n\n1526\n01:16:05,240 --> 01:16:07,660\nthat queries them and\nputs the data together.\n\n1527\n01:16:07,660 --> 01:16:10,550\nYou can dump this out into Excel,\nand do like a pivot table.\n\n1528\n01:16:10,550 --> 01:16:11,690\nMake graphs and charts out of it.\n\n1529\n01:16:11,690 --> 01:16:13,110\nYou can do all sorts of really neat stuff.\n\n1530\n01:16:13,110 --> 01:16:15,690\nI've seen people do some crazy things.\n\n1531\n01:16:15,690 --> 01:16:18,260\nA lot of the third party\nmonitoring software,\n\n1532\n01:16:18,260 --> 01:16:22,480\nthat taps into SQL Is just using\nthese dynamic management views.\n\n1533\n01:16:22,480 --> 01:16:25,370\nAll the data they need is right there and\nthey can just do a quick query, they get\n\n1534\n01:16:25,370 --> 01:16:27,840\nthe data, and then they can represent\nit in their software however they want.\n\n1535\n01:16:29,090 --> 01:16:30,920\nKeep in mind that they are at\nthe database level, but\n\n1536\n01:16:30,920 --> 01:16:34,640\nthere's also ones that are at the server\nlevel, and so we'll see those too.\n\n1537\n01:16:34,640 --> 01:16:37,040\nThey're actually a part of the MSDB.\n\n1538\n01:16:37,040 --> 01:16:40,900\nSo if we go into our system databases and\nMSDB.\n\n1539\n01:16:40,900 --> 01:16:44,020\nYou'll see some more that\nare tucked away in here,\n\n1540\n01:16:44,020 --> 01:16:47,010\nthat are based around that whole system.\n\n1541\n01:16:47,010 --> 01:16:48,580\nSo you'll see the same idea.\n\n1542\n01:16:49,970 --> 01:16:51,210\nAll right.\nA lot of cool stuff in there.\n\n1543\n01:16:51,210 --> 01:16:53,570\nTwo different ways to\nmonitor the same thing.\n\n1544\n01:16:53,570 --> 01:16:58,220\nI can go to the performance monitor,\nif I've got access to the underlying OS.\n\n1545\n01:16:58,220 --> 01:17:01,470\nOr I can use the dynamic management\nviews if I just have access to SQL or\n\n1546\n01:17:01,470 --> 01:17:02,370\nyou can just use both.\n\n1547\n01:17:02,370 --> 01:17:06,970\nDifferent scenarios work for\ndifferent ones.\n\n1548\n01:17:06,970 --> 01:17:11,380\nSo that pretty much wraps up pulling\nperformance data on the system.\n\n1549\n01:17:11,380 --> 01:17:14,270\nThere's one other thing that I want to\ntalk about this episode when it comes\n\n1550\n01:17:14,270 --> 01:17:15,630\nto monitoring the server.\n\n1551\n01:17:15,630 --> 01:17:17,750\nAnd that's auditing activity,\n\n1552\n01:17:17,750 --> 01:17:20,650\nkeeping track of what people\nare doing on your system.\n\n1553\n01:17:20,650 --> 01:17:23,040\nBut, it's a pretty good spot to stop and\ntake a break.\n\n1554\n01:17:23,040 --> 01:17:25,000\nSo why don't we pause for\na breather here and\n\n1555\n01:17:25,000 --> 01:17:28,060\nwhen we get back we'll see\nauditing our SQL server.\n\n1556\n01:17:28,060 --> 01:17:30,626\nSo stay tuned, we'll be back in a few.\n\n1557\n01:17:30,626 --> 01:17:38,306\n[MUSIC]\n\n1558\n01:17:38,306 --> 01:17:40,030\nAll right, welcome back everybody.\n\n1559\n01:17:40,030 --> 01:17:43,930\nSo all through this episode I've been\ntalking about how to monitor and\n\n1560\n01:17:43,930 --> 01:17:46,980\noptimize our server really\nbased on performance, right?\n\n1561\n01:17:46,980 --> 01:17:50,400\nStuff that's going on on the system,\nand that is a big part of what we do.\n\n1562\n01:17:51,480 --> 01:17:54,680\nBut there's also\na security aspect to this.\n\n1563\n01:17:54,680 --> 01:17:56,870\nA lot of time we want to monitor\nwhat's going on on our system so\n\n1564\n01:17:56,870 --> 01:18:00,480\nthat we can see when people are doing\nthings they shouldn't do, right?\n\n1565\n01:18:01,640 --> 01:18:04,460\nSo that falls under, not so\nmuch the realm of monitoring for\n\n1566\n01:18:04,460 --> 01:18:07,130\nperformance, but security auditing.\n\n1567\n01:18:07,130 --> 01:18:10,820\nAnd there's a few different ways\nthat we can auditing inside of SQL.\n\n1568\n01:18:10,820 --> 01:18:12,490\nThere's the old way, and\nthere's the new way.\n\n1569\n01:18:12,490 --> 01:18:15,500\nSo let's talk about the old way.\n\n1570\n01:18:15,500 --> 01:18:19,620\nThe old way of doing things,\nif we wanted to monitor what was going on,\n\n1571\n01:18:19,620 --> 01:18:23,120\non our server was to create\nwhat were called DML triggers.\n\n1572\n01:18:23,120 --> 01:18:25,710\nDML that stands for\ndata manipulation language.\n\n1573\n01:18:25,710 --> 01:18:29,120\nWhenever you're working\nwith data inside of SQL.\n\n1574\n01:18:29,120 --> 01:18:33,030\nWhen you're doing insert statements,\nand update statements, and create, and\n\n1575\n01:18:33,030 --> 01:18:34,840\ndrop table those type of things.\n\n1576\n01:18:34,840 --> 01:18:40,200\nThose are using DML and when you start to,\nI say create drop tables,\n\n1577\n01:18:40,200 --> 01:18:42,350\nthose are actually DVL,\nwhich is a little bit different but\n\n1578\n01:18:42,350 --> 01:18:44,900\nwhen you are doing inserts and\nupdates those are DML.\n\n1579\n01:18:44,900 --> 01:18:50,910\nSo we can set up a trigger so\nthat when anybody performs an insert or\n\n1580\n01:18:50,910 --> 01:18:54,900\nan update or something like that,\nthat it sends up a flag and\n\n1581\n01:18:54,900 --> 01:18:58,030\nit records it into a log somewhere and\nhas that record stored, all right?\n\n1582\n01:18:58,030 --> 01:19:01,790\nSo that is a nice little process to do.\n\n1583\n01:19:01,790 --> 01:19:02,660\nBut it's a little bit of a pain.\n\n1584\n01:19:02,660 --> 01:19:04,020\nAnd let me show you why.\n\n1585\n01:19:04,020 --> 01:19:05,910\nBasically you have to create a trigger.\n\n1586\n01:19:05,910 --> 01:19:07,970\nAnd so here's the syntax for a trigger.\n\n1587\n01:19:07,970 --> 01:19:12,050\nAnd if you're a system admin, you're not\nnormally the one creating triggers, right?\n\n1588\n01:19:12,050 --> 01:19:14,200\nThese are the DBAs that\nare going to be doing this.\n\n1589\n01:19:14,200 --> 01:19:18,210\nBut basically, I'm creating a trigger\nhere called remove product from inventory\n\n1590\n01:19:18,210 --> 01:19:19,860\non my products table.\n\n1591\n01:19:19,860 --> 01:19:21,860\nSo I've got a table called products.\n\n1592\n01:19:21,860 --> 01:19:26,300\nAnd anytime somebody goes in there and\ntakes a product out,\n\n1593\n01:19:26,300 --> 01:19:29,900\njust deletes a product out of\nthe database, I want to know, right?\n\n1594\n01:19:29,900 --> 01:19:31,780\nOr, maybe it's the inventory\nthat I'm wanting to track.\n\n1595\n01:19:31,780 --> 01:19:33,530\nAnytime somebody changes the inventory.\n\n1596\n01:19:33,530 --> 01:19:34,860\nIf there were ten in the inventory and\n\n1597\n01:19:34,860 --> 01:19:37,450\nthey changed it to nine,\nI want to know, right.\n\n1598\n01:19:37,450 --> 01:19:40,334\nThe reason I want to know is,\nwhere'd that one go, right?\n\n1599\n01:19:40,334 --> 01:19:42,042\nDoes it correspond to an order?\n\n1600\n01:19:42,042 --> 01:19:44,052\nOr did they just steal it and\nremove it from the inventory so\n\n1601\n01:19:44,052 --> 01:19:45,376\nthat I don't know it's been stolen?\n\n1602\n01:19:45,376 --> 01:19:46,280\nRight?\n\n1603\n01:19:46,280 --> 01:19:47,708\nI need to keep track of that.\n\n1604\n01:19:47,708 --> 01:19:50,020\nSo a DML trigger's a great way to do that.\n\n1605\n01:19:50,020 --> 01:19:53,980\nI can create an entry in there to say,\nanytime somebody modifies that record,\n\n1606\n01:19:53,980 --> 01:19:55,240\nperform these actions.\n\n1607\n01:19:55,240 --> 01:19:57,880\nAnd that's what I'm doing\nright here in this example.\n\n1608\n01:19:57,880 --> 01:20:00,200\nI'm looking for somebody doing an insert.\n\n1609\n01:20:00,200 --> 01:20:03,810\nWhen anybody does an insert,\nthen I want to.\n\n1610\n01:20:04,870 --> 01:20:05,480\nI'm sorry.\n\n1611\n01:20:05,480 --> 01:20:08,120\nI'm looking for an update right here.\n\n1612\n01:20:08,120 --> 01:20:12,110\nSo if somebody doesn't update\non the quantity column.\n\n1613\n01:20:12,110 --> 01:20:16,140\nAnytime somebody doesn't update on\nthe quantity column, perform an action.\n\n1614\n01:20:16,140 --> 01:20:16,950\nAnd what is an action?\n\n1615\n01:20:16,950 --> 01:20:18,640\nWell the action is an insert.\n\n1616\n01:20:18,640 --> 01:20:22,270\nI wanna insert a record into\nanother table, my audit table.\n\n1617\n01:20:22,270 --> 01:20:25,800\nSee I made this, products_audit table?\n\n1618\n01:20:25,800 --> 01:20:27,110\nI wanna to put a log there.\n\n1619\n01:20:27,110 --> 01:20:29,490\nSo anytime somebody changes a quantity,\n\n1620\n01:20:29,490 --> 01:20:33,520\nput a log entry over here in this other\ntable, a table they don't have access to.\n\n1621\n01:20:33,520 --> 01:20:36,580\nThat way, sure they went into\ninventory and deleted the item, but\n\n1622\n01:20:36,580 --> 01:20:39,520\nthey couldn't get into the audit table\nto go and remove the audit trail.\n\n1623\n01:20:39,520 --> 01:20:42,800\nSo I've got a record of it and\nit's stored right there.\n\n1624\n01:20:42,800 --> 01:20:46,620\nNow, when you do that,\nhow do we know what's happening?\n\n1625\n01:20:46,620 --> 01:20:49,340\nHow do we know the old value and\nthe new value and all that stuff?\n\n1626\n01:20:49,340 --> 01:20:52,880\nWell, whenever you perform an update\ninside of SQL, there's actually some\n\n1627\n01:20:52,880 --> 01:20:56,590\ntemporary tables that are created, and\nthat's what I'm referencing down here.\n\n1628\n01:20:56,590 --> 01:21:00,580\nI'm selecting the inserted quantity,\nright,\n\n1629\n01:21:00,580 --> 01:21:02,330\nthat's the value that they've added.\n\n1630\n01:21:02,330 --> 01:21:04,850\nI'm getting the deleted quantity.\n\n1631\n01:21:04,850 --> 01:21:08,870\nNow notice I'm writing this,\ndeleted.quantity, inserted.quantity.\n\n1632\n01:21:08,870 --> 01:21:09,880\nThose are table names.\n\n1633\n01:21:09,880 --> 01:21:12,120\nThere's a table called Deleted and\na table called Inserted.\n\n1634\n01:21:12,120 --> 01:21:15,020\nIf you look through the server\nyou'll never find that.\n\n1635\n01:21:15,020 --> 01:21:17,090\nYou'll never find a table\nwith those names.\n\n1636\n01:21:17,090 --> 01:21:21,820\nWhat happens is when your performing\na transaction SQL uses temporary tables.\n\n1637\n01:21:21,820 --> 01:21:24,480\nAnd it creates a temporary\ntable called Inserted.\n\n1638\n01:21:24,480 --> 01:21:26,610\nAnd a temporary table called Deleted.\n\n1639\n01:21:26,610 --> 01:21:30,330\nSo that during that transaction,\nyou can still retrieve those values.\n\n1640\n01:21:30,330 --> 01:21:31,710\nThat's how our rollbacks work.\n\n1641\n01:21:31,710 --> 01:21:33,830\nWhen a transaction fails and\nit rolls back,\n\n1642\n01:21:33,830 --> 01:21:37,330\nit still has the old values because\nthey were in these temporary tables.\n\n1643\n01:21:37,330 --> 01:21:41,340\nNow as soon as the transaction is done,\n100% complete, these go away.\n\n1644\n01:21:41,340 --> 01:21:44,660\nSo if I wanna log them,\nI've gotta log it during the transaction.\n\n1645\n01:21:44,660 --> 01:21:46,110\nAnd that's what this trigger does.\n\n1646\n01:21:46,110 --> 01:21:46,640\nAll right?\n\n1647\n01:21:46,640 --> 01:21:47,960\nSo it catches those values.\n\n1648\n01:21:47,960 --> 01:21:49,280\nWrites them to the other table.\n\n1649\n01:21:49,280 --> 01:21:50,760\nAnd then wraps it up there.\n\n1650\n01:21:50,760 --> 01:21:54,740\nThe end user is able to delete that\nitem out of inventory just fine.\n\n1651\n01:21:54,740 --> 01:21:56,830\nThey don't even know that\na log entry was made.\n\n1652\n01:21:56,830 --> 01:21:58,920\nAnd then I can go back and\nreview the log entries.\n\n1653\n01:21:58,920 --> 01:21:59,570\nRight?\n\n1654\n01:21:59,570 --> 01:22:02,300\nNow there's a few problems\nwith this solution.\n\n1655\n01:22:02,300 --> 01:22:04,370\nProblem number one is it's complex.\n\n1656\n01:22:04,370 --> 01:22:06,860\nI had to go and create this trigger and\nput it in place, and\n\n1657\n01:22:06,860 --> 01:22:08,770\nI've got to go monitor this other table,\nit's kind of a lot.\n\n1658\n01:22:09,970 --> 01:22:13,530\nThe second problem is,\nthere's a little bit of a performance hit.\n\n1659\n01:22:13,530 --> 01:22:17,330\nAny time someone writes,\nto the products table,\n\n1660\n01:22:17,330 --> 01:22:22,150\nany time they do an update, it's not\njust writing to the products table,\n\n1661\n01:22:22,150 --> 01:22:25,620\nit's got to write to\nthe products audit table too.\n\n1662\n01:22:25,620 --> 01:22:28,910\nSo every right operation\njust had it's IO doubled.\n\n1663\n01:22:30,020 --> 01:22:33,230\nSo I'm having to write two different\ntimes because of the audit.\n\n1664\n01:22:33,230 --> 01:22:35,760\nAnd that's a difficult thing,\nIt's kind of hard to get away from that.\n\n1665\n01:22:35,760 --> 01:22:38,310\nBut that's the other negative.\n\n1666\n01:22:38,310 --> 01:22:42,110\nSo every single time somebody doesn't\nupdate, this trigger is firing and\n\n1667\n01:22:42,110 --> 01:22:45,490\ndoing its job, it creates a little\nbit of a performance burden.\n\n1668\n01:22:45,490 --> 01:22:46,650\nBut boy, is it great, right?\n\n1669\n01:22:46,650 --> 01:22:49,200\nI mean this is gonna give us some\ngood auditing information right here.\n\n1670\n01:22:49,200 --> 01:22:51,310\nWe'll know who changed stuff,\nwhen it was done.\n\n1671\n01:22:51,310 --> 01:22:53,140\nThat's all getting logged into the system.\n\n1672\n01:22:53,140 --> 01:22:54,060\nIt works.\n\n1673\n01:22:54,060 --> 01:22:54,890\nAll right.\n\n1674\n01:22:54,890 --> 01:22:57,980\nWell, Microsoft has been working\nto improve this over the years.\n\n1675\n01:22:57,980 --> 01:23:01,350\nWith these, with DML triggers, you just\nhave to figure out what you wanna audit.\n\n1676\n01:23:01,350 --> 01:23:02,270\nAnd you have to define them.\n\n1677\n01:23:02,270 --> 01:23:03,280\nYou do it all from scratch.\n\n1678\n01:23:03,280 --> 01:23:04,570\nIt's all on your own.\n\n1679\n01:23:04,570 --> 01:23:07,620\nBut Microsoft has started introducing\nsome built-in features that can help\n\n1680\n01:23:07,620 --> 01:23:10,610\ntake away from the need\nto do these DML triggers.\n\n1681\n01:23:10,610 --> 01:23:12,870\nSo hopefully, you don't have to use these.\n\n1682\n01:23:12,870 --> 01:23:15,120\nBut I went ahead and\nput an example in my show notes so\n\n1683\n01:23:15,120 --> 01:23:17,920\nyou can have one to look at and\nkinda see how they work.\n\n1684\n01:23:17,920 --> 01:23:20,390\nYou can really do what you\nwant with a DML trigger, but\n\n1685\n01:23:20,390 --> 01:23:22,070\nin this case,\nI'm just using it for auditing.\n\n1686\n01:23:23,740 --> 01:23:27,670\nA better option would be to use\nthe pre-build auditing inside of SQL, and\n\n1687\n01:23:27,670 --> 01:23:30,990\nwe kind of saw that in one\nof our earlier episodes.\n\n1688\n01:23:30,990 --> 01:23:32,760\nIf I go to my server properties,\n\n1689\n01:23:32,760 --> 01:23:36,990\nall the way up here in the top,\nI'll just go to Server Properties.\n\n1690\n01:23:36,990 --> 01:23:39,130\nAnd inside of the properties for\nthe server,\n\n1691\n01:23:39,130 --> 01:23:44,200\nif I go to the Security page, I'll see\na few options down here at the bottom.\n\n1692\n01:23:46,700 --> 01:23:51,670\nEnable Common Criteria compliance,\nand Enable C2 audit tracing, right?\n\n1693\n01:23:51,670 --> 01:23:52,830\nWhat are those?\n\n1694\n01:23:52,830 --> 01:23:57,430\nWell, Common Criteria is\na United States government-sponsored\n\n1695\n01:23:57,430 --> 01:24:01,770\ninitiative to provide a certain\nlevel of security for environments.\n\n1696\n01:24:01,770 --> 01:24:05,865\nAnd they define security conditions\nthat you should follow to\n\n1697\n01:24:05,865 --> 01:24:08,405\nat least maintain basic\nsecurity practices.\n\n1698\n01:24:08,405 --> 01:24:11,255\nThey're definitely not the be all,\nend all of security practices, and\n\n1699\n01:24:11,255 --> 01:24:14,675\nit's not worldwide recognized, but\nit's basically like a minimum.\n\n1700\n01:24:14,675 --> 01:24:16,425\nThis is the minimum\namount you should do for\n\n1701\n01:24:16,425 --> 01:24:18,425\nauditing your system for keeping records.\n\n1702\n01:24:18,425 --> 01:24:22,415\nAnd it most of these centers around\nauditing user log ins, when somebody logs\n\n1703\n01:24:22,415 --> 01:24:26,370\nin and logs out, and data like that,\nso it's not even very detailed.\n\n1704\n01:24:26,370 --> 01:24:29,810\nBut if you want to maintain\nCommon Criteria compliance, or\n\n1705\n01:24:29,810 --> 01:24:33,840\nC2 Compliance, these are the two\nvalues we need to turn on.\n\n1706\n01:24:33,840 --> 01:24:38,590\nEnable Common Criteria compliance is going\nto change the way that SQL logs, to make\n\n1707\n01:24:38,590 --> 01:24:43,010\nsure the log files are formatted in\nthe way that Common Criteria wants them.\n\n1708\n01:24:43,010 --> 01:24:47,090\nThat's really handy, because a lot of\npeople use third-party security scanners.\n\n1709\n01:24:47,090 --> 01:24:50,380\nAnd in order to have that compatibility\nbetween those third party standards and\n\n1710\n01:24:50,380 --> 01:24:54,750\nSQL, they both agree to\nconform to common criteria.\n\n1711\n01:24:54,750 --> 01:24:55,710\nSo by checking that off,\n\n1712\n01:24:55,710 --> 01:24:58,610\nit ensures that everything is gonna\nbe in that nice, same format.\n\n1713\n01:24:58,610 --> 01:25:00,670\nI say nice, it's not very easy for\nhumans to read, but for\n\n1714\n01:25:00,670 --> 01:25:02,750\nthe system to read, it works great.\n\n1715\n01:25:02,750 --> 01:25:05,110\nAnd then Enable C2 audit tracing,\n\n1716\n01:25:05,110 --> 01:25:07,490\nthat's where we're gonna\nstart recording those events.\n\n1717\n01:25:07,490 --> 01:25:11,800\nWhen a user logs in, when a user performs\ncertain actions like drop statements,\n\n1718\n01:25:11,800 --> 01:25:13,930\nit's gonna audit those automatically.\n\n1719\n01:25:13,930 --> 01:25:18,400\nSo if I'm just looking for C2 compliance,\nI check those two boxes, and I'm done.\n\n1720\n01:25:18,400 --> 01:25:20,910\nI hit OK,\nnow I've got auditing turned on for that.\n\n1721\n01:25:22,040 --> 01:25:25,090\nHowever, maybe I want more control.\n\n1722\n01:25:25,090 --> 01:25:27,288\nMaybe I don't care about C2, right?\n\n1723\n01:25:27,288 --> 01:25:31,630\nHere at ITProTV, we don't have to\nconform to C2, so maybe I just have\n\n1724\n01:25:31,630 --> 01:25:36,630\nmy own auditing that I want to do, and\nmaybe I want to go beyond what C2 does.\n\n1725\n01:25:36,630 --> 01:25:39,070\nWell, we have full control over that.\n\n1726\n01:25:39,070 --> 01:25:43,330\nThere was a new feature introduced in SQL\n2008 that allowed us to get in and start\n\n1727\n01:25:43,330 --> 01:25:48,030\nto create our own audit system without\nhaving to go crazy into the command line,\n\n1728\n01:25:48,030 --> 01:25:50,160\nand do a bunch of nuts-o\nstuff with triggers.\n\n1729\n01:25:50,160 --> 01:25:51,738\nLet me show you what I mean.\n\n1730\n01:25:51,738 --> 01:25:55,427\nWoops, shoot.\n\n1731\n01:25:55,427 --> 01:25:58,190\nWell, I left my C2 stuff checked, so it's\n\n1732\n01:25:58,190 --> 01:26:01,130\njust warning me that I've got to restart\nthe server before that takes affect.\n\n1733\n01:26:01,130 --> 01:26:03,040\nI don't actually need to restart it here.\n\n1734\n01:26:03,040 --> 01:26:05,230\nCuz I'm not gonna do the logging.\n\n1735\n01:26:05,230 --> 01:26:07,520\nBut if I wanted to, I could.\n\n1736\n01:26:07,520 --> 01:26:08,030\nAll right.\n\n1737\n01:26:08,030 --> 01:26:10,980\nSo what we can do is,\nup here at our server level.\n\n1738\n01:26:10,980 --> 01:26:13,830\nSo I'm on the WinSQL01.\n\n1739\n01:26:13,830 --> 01:26:18,240\nIf we look down here under Security,\nyou'll see audits and\n\n1740\n01:26:18,240 --> 01:26:20,980\nserver audit specifications, okay?\n\n1741\n01:26:20,980 --> 01:26:22,172\nWhat are these?\n\n1742\n01:26:22,172 --> 01:26:26,020\nWell, they're two pieces\ninvolved in setting up an audit\n\n1743\n01:26:26,020 --> 01:26:27,500\non my system, all right?\n\n1744\n01:26:27,500 --> 01:26:29,140\nAudits are actually made\nup of three pieces,\n\n1745\n01:26:29,140 --> 01:26:31,920\nwhich I think I put in\nthe notes somewhere.\n\n1746\n01:26:31,920 --> 01:26:32,820\nRight here.\n\n1747\n01:26:32,820 --> 01:26:35,310\nThese are the three pieces\nthat make up an audit.\n\n1748\n01:26:35,310 --> 01:26:38,410\nThere's actions,\naudit specification, and audit.\n\n1749\n01:26:38,410 --> 01:26:41,340\nIn the GUI we really\njust see these first two.\n\n1750\n01:26:41,340 --> 01:26:43,340\nI'm sorry, the second two.\n\n1751\n01:26:43,340 --> 01:26:44,870\nThird two.\nI don't know, whatever.\n\n1752\n01:26:44,870 --> 01:26:46,530\nIt's breaking down here.\n\n1753\n01:26:46,530 --> 01:26:48,470\n[LAUGH] You really only see the last two.\n\n1754\n01:26:48,470 --> 01:26:50,100\nThe first one is actions.\n\n1755\n01:26:50,100 --> 01:26:52,305\nAn action is what somebody does, right?\n\n1756\n01:26:52,305 --> 01:26:54,270\nA predefined action,\n\n1757\n01:26:54,270 --> 01:26:59,220\nthe activity that a person performs\nthat generates an audit trace.\n\n1758\n01:26:59,220 --> 01:27:02,719\nSo, think of the actions\nas what your end user does.\n\n1759\n01:27:04,140 --> 01:27:08,830\nThe audit specification is which of\nthose actions we should be logging.\n\n1760\n01:27:08,830 --> 01:27:11,200\nWe don't necessarily want\nto log all of the actions,\n\n1761\n01:27:11,200 --> 01:27:13,640\notherwise our logs would be insanely full.\n\n1762\n01:27:13,640 --> 01:27:17,420\nSo the audit specification says,\nwhich of the actions we want to log.\n\n1763\n01:27:17,420 --> 01:27:18,810\nAnd that's what we define in the GUI.\n\n1764\n01:27:18,810 --> 01:27:20,970\nThe actions, your end users do those.\n\n1765\n01:27:20,970 --> 01:27:22,100\nThey already exist.\n\n1766\n01:27:22,100 --> 01:27:24,110\nSo the audit specification\nis where we just pick and\n\n1767\n01:27:24,110 --> 01:27:26,650\nchoose what it is we want to record.\n\n1768\n01:27:26,650 --> 01:27:30,390\nAnd then after that the audit itself,\nthat's what says,\n\n1769\n01:27:30,390 --> 01:27:32,980\nwhen we log and where we log it to.\n\n1770\n01:27:32,980 --> 01:27:35,140\nAm I logging it to a file?\n\n1771\n01:27:35,140 --> 01:27:36,030\nIs it on this server?\n\n1772\n01:27:36,030 --> 01:27:37,280\nIs it on another server?\n\n1773\n01:27:37,280 --> 01:27:39,250\nWhat time of day am I running this log?\n\n1774\n01:27:39,250 --> 01:27:40,640\nThat kind of stuff, right.\n\n1775\n01:27:40,640 --> 01:27:44,690\nSo these are the two that we really worry\nabout setting up to get auditing in place.\n\n1776\n01:27:44,690 --> 01:27:47,540\nAnd that's why I only see those\ntwo values here, Audits and\n\n1777\n01:27:47,540 --> 01:27:50,210\nServer Audit Specifications, all right?\n\n1778\n01:27:50,210 --> 01:27:51,890\nWe start with the Audit.\n\n1779\n01:27:51,890 --> 01:27:56,170\nOn the Audit folder, you can just\nright-click and choose New Audit and\n\n1780\n01:27:56,170 --> 01:27:59,570\nyou'll see in the options that there's\nnot a whole heck of a lot here for\n\n1781\n01:27:59,570 --> 01:28:01,240\nus to mess with, okay?\n\n1782\n01:28:01,240 --> 01:28:05,690\nIt's asking me to set my queue delay,\nwhich is when an action happens,\n\n1783\n01:28:05,690 --> 01:28:08,590\nhow long do I wait before\nI log that into the file.\n\n1784\n01:28:08,590 --> 01:28:10,320\nIt's set to 00:01 by default.\n\n1785\n01:28:11,590 --> 01:28:15,890\nThe reason we have a delay is we don't\nwant the performance of logging to affect\n\n1786\n01:28:15,890 --> 01:28:17,510\nthe performance of the action, so\n\n1787\n01:28:17,510 --> 01:28:19,330\nit puts a little delay in\nthere to make up for that.\n\n1788\n01:28:20,380 --> 01:28:23,480\nThen, what do we do if there\nis an Audit Log Failure?\n\n1789\n01:28:23,480 --> 01:28:26,120\nIf something happens where we\ncan't log to the audit log,\n\n1790\n01:28:26,120 --> 01:28:30,060\nin a high security environment,\nif you can't write to your audit log,\n\n1791\n01:28:30,060 --> 01:28:32,210\nit usually means\nan attacker's in your system.\n\n1792\n01:28:32,210 --> 01:28:34,170\nSo we've got the option\nto shut the server down.\n\n1793\n01:28:34,170 --> 01:28:36,530\nIf you can't write to the audit logs,\nshut the system down.\n\n1794\n01:28:36,530 --> 01:28:40,070\nWe don't want people in here if we\ncan't keep a record of what happened.\n\n1795\n01:28:40,070 --> 01:28:43,400\nYou could say just fail that\nparticular transaction.\n\n1796\n01:28:43,400 --> 01:28:45,490\nJust don't let it happen\nbecause we couldn't log it.\n\n1797\n01:28:45,490 --> 01:28:48,960\nThat will ensure you'll always able to\nlog what's happening on your system.\n\n1798\n01:28:48,960 --> 01:28:50,770\nOr you've got Continue,\nwhich is the default,\n\n1799\n01:28:50,770 --> 01:28:54,450\nwhich says if I can't write to the audit\nlogs, just ignore it and keep going.\n\n1800\n01:28:54,450 --> 01:28:55,720\nThat's not terribly secure.\n\n1801\n01:28:56,890 --> 01:28:58,748\nThen where do we log to?\n\n1802\n01:28:58,748 --> 01:29:00,080\nThe File is the default, but\n\n1803\n01:29:00,080 --> 01:29:04,900\nyou can log right to the Security Log\nin Windows, or the Application Log.\n\n1804\n01:29:04,900 --> 01:29:09,215\nSo you can go right to your event log in\nWindows, the underlying OS, if you want.\n\n1805\n01:29:09,215 --> 01:29:11,065\nOr you can go to a file on the hard drive.\n\n1806\n01:29:11,065 --> 01:29:11,865\nAll right.\n\n1807\n01:29:11,865 --> 01:29:13,215\nI usually go to a file on the hard drive,\n\n1808\n01:29:13,215 --> 01:29:14,955\nbut putting it in the event\nviewer can be useful.\n\n1809\n01:29:14,955 --> 01:29:17,535\nMakes it a little easier\nto view sometimes.\n\n1810\n01:29:17,535 --> 01:29:23,915\nSo, I'll put a path for it,\nI have that sim folder I'll put.\n\n1811\n01:29:23,915 --> 01:29:25,920\nSo, I'll just put it in there.\n\n1812\n01:29:25,920 --> 01:29:28,680\nThe file that it's gonna generate\nis a little binary file so\n\n1813\n01:29:28,680 --> 01:29:31,270\nit's not like a text file that you can\njust edit, but I'll show you a few\n\n1814\n01:29:31,270 --> 01:29:35,860\ndifferent ways that we can view it and\nlook at it and see what's in there.\n\n1815\n01:29:37,930 --> 01:29:41,880\nAll right, roll over files,\nwhat do we if the file fills up, right?\n\n1816\n01:29:41,880 --> 01:29:44,180\nA lot of times we'll set up\nmaximum size for the file.\n\n1817\n01:29:44,180 --> 01:29:46,910\nYou'll see that down here, maximum size.\n\n1818\n01:29:46,910 --> 01:29:49,670\nAnd if it fills it up,\nthen it moves on to a new file.\n\n1819\n01:29:49,670 --> 01:29:53,100\nYou can set a number of files and\nthat's the maximum amount it can create.\n\n1820\n01:29:53,100 --> 01:29:57,710\nIf it runs out of that space, it'll delete\nold stuff to make room for new stuff.\n\n1821\n01:29:57,710 --> 01:30:00,050\nThe default, though, is unlimited.\n\n1822\n01:30:00,050 --> 01:30:03,080\nThat means these audit files will grow and\ngrow and\n\n1823\n01:30:03,080 --> 01:30:05,400\ngrow until you run out\nof hard drive space.\n\n1824\n01:30:05,400 --> 01:30:06,620\nThat would be pretty bad.\n\n1825\n01:30:06,620 --> 01:30:10,640\nSo, we don't normally want to go\ntoo terribly crazy like that, but\n\n1826\n01:30:10,640 --> 01:30:13,850\nwe also want to ensure that\nwe don't lose records.\n\n1827\n01:30:13,850 --> 01:30:17,960\nIf an attacker gets in there, they can\njust flood the logs with stuff until\n\n1828\n01:30:17,960 --> 01:30:21,040\nit deletes their old activities, and then\nwe lose the fact that they got in there.\n\n1829\n01:30:21,040 --> 01:30:22,380\nWe lose what they did.\n\n1830\n01:30:22,380 --> 01:30:25,450\nSo you do have to be careful there,\nall right?\n\n1831\n01:30:25,450 --> 01:30:28,050\nBut that's about it here on the audit,\nright.\n\n1832\n01:30:28,050 --> 01:30:31,570\nWe're really just specifying where we're\nlogging to, I'm logging to a file,\n\n1833\n01:30:31,570 --> 01:30:33,640\nin my case, and that's about it.\n\n1834\n01:30:33,640 --> 01:30:36,830\nYou'll see you've got this filter option\nover here where you can put a scripted\n\n1835\n01:30:36,830 --> 01:30:40,320\nfilter in to control what\nactually makes it into the file.\n\n1836\n01:30:40,320 --> 01:30:42,960\nWe don't normally use this though because\nwe'll see in the Audit Specification we\n\n1837\n01:30:42,960 --> 01:30:44,320\ncan filter things pretty well there.\n\n1838\n01:30:46,770 --> 01:30:49,020\nSo that's the audit.\n\n1839\n01:30:49,020 --> 01:30:51,250\nThat's me putting in where\nI'm going to log to.\n\n1840\n01:30:52,730 --> 01:30:54,600\nThen, whoop.\n\n1841\n01:30:54,600 --> 01:30:55,360\nWhat do I have here?\n\n1842\n01:30:55,360 --> 01:30:57,860\nCreate failed for, oh shoot.\n\n1843\n01:30:57,860 --> 01:31:00,820\nI put a file name here,\nI should've just left that off.\n\n1844\n01:31:00,820 --> 01:31:02,550\nThere, it just wants the directory.\n\n1845\n01:31:02,550 --> 01:31:04,260\nThe file path, not the file name.\n\n1846\n01:31:05,400 --> 01:31:06,360\nThere we go.\n\n1847\n01:31:06,360 --> 01:31:09,900\nSo, now I've got an audit, but\nthat audit's kind of useless to me.\n\n1848\n01:31:09,900 --> 01:31:13,950\nIt's not gonna do anything unless\nI tell it what I want to audit.\n\n1849\n01:31:13,950 --> 01:31:17,340\nAnd that's where\nthe Server Audit Specification comes in.\n\n1850\n01:31:17,340 --> 01:31:21,090\nI can right-click on that and\ndo a New Server Audit Specification.\n\n1851\n01:31:21,090 --> 01:31:23,390\nAnd this is where the real action is.\n\n1852\n01:31:23,390 --> 01:31:27,990\nHere's where I pick what\nit is I want to audit.\n\n1853\n01:31:27,990 --> 01:31:29,630\nI need to make up my mind on what that is.\n\n1854\n01:31:29,630 --> 01:31:31,055\nThere's a ton of stuff.\n\n1855\n01:31:31,055 --> 01:31:33,940\nSo right here you've\ngot Audit Action Type.\n\n1856\n01:31:33,940 --> 01:31:36,840\nWhat actions am I going to be auditing?\n\n1857\n01:31:36,840 --> 01:31:40,900\nAnd if you drop that down,\nyou'll see a list of all the different\n\n1858\n01:31:40,900 --> 01:31:44,300\nactions that we can audit and\nthere's a a bunch of stuff in here.\n\n1859\n01:31:44,300 --> 01:31:46,640\nThings like database logout.\n\n1860\n01:31:46,640 --> 01:31:51,730\nYou've got database operations,\nrole member change,\n\n1861\n01:31:51,730 --> 01:31:55,110\nso anytime somebody puts somebody in\na role or takes them out of a role.\n\n1862\n01:31:55,110 --> 01:32:00,700\nYou'll see other things in here like\nschema operations, server state changes,\n\n1863\n01:32:00,700 --> 01:32:03,490\nsuccessful logins, you've got\n\n1864\n01:32:03,490 --> 01:32:07,170\nall sorts of information right here that\nyou might want to log for your system.\n\n1865\n01:32:08,170 --> 01:32:10,890\nFor me, maybe I want to create\nan audit for backup jobs.\n\n1866\n01:32:10,890 --> 01:32:13,940\nI want to know anytime somebody\ndoes a backup on my system.\n\n1867\n01:32:13,940 --> 01:32:18,256\nAll right, so in here somewhere,\nwe've got a backup entry,\n\n1868\n01:32:18,256 --> 01:32:21,810\nI think its called BACKUP_RESTORE_GROUP.\n\n1869\n01:32:21,810 --> 01:32:25,470\nNow, this means backups and\nrestores, which is good.\n\n1870\n01:32:25,470 --> 01:32:28,900\nThis is a group of actions that\nall center around backups and\n\n1871\n01:32:28,900 --> 01:32:31,660\nI want it logged when\nsomebody does a backup.\n\n1872\n01:32:31,660 --> 01:32:35,400\nAnd so I'm going to change my\nspecification here to say,\n\n1873\n01:32:35,400 --> 01:32:37,310\nBackup Operations.\n\n1874\n01:32:37,310 --> 01:32:41,840\nSo, this is gonna be an audit log for\nwhen people perform backups.\n\n1875\n01:32:41,840 --> 01:32:44,550\nNow some of the actions\nhave object classes,\n\n1876\n01:32:44,550 --> 01:32:46,010\nwhere you can filter them down more.\n\n1877\n01:32:46,010 --> 01:32:47,030\nMost of them don't though.\n\n1878\n01:32:47,030 --> 01:32:49,290\nSo, see how I can't click\non that drop down box.\n\n1879\n01:32:49,290 --> 01:32:53,078\nthat's fine there is just no object class\nfor it but other ones you might have that.\n\n1880\n01:32:53,078 --> 01:32:57,516\nIf you kind of pick and choose well\napparently I am not going to find one, but\n\n1881\n01:32:57,516 --> 01:32:59,066\nyou can browse through and\n\n1882\n01:32:59,066 --> 01:33:02,958\nfind them so you might have further\ndetails that you can specify.\n\n1883\n01:33:02,958 --> 01:33:03,922\nIn my case I don't.\n\n1884\n01:33:08,461 --> 01:33:14,010\nIts not going to let me delete that one\nout of there All right, well, whatever.\n\n1885\n01:33:14,010 --> 01:33:15,910\nSo I'll do a little bit more here.\n\n1886\n01:33:15,910 --> 01:33:17,580\nI'm changing passwords.\n\n1887\n01:33:17,580 --> 01:33:20,420\nSo, I'm specifying what I wanna log,\nthe actions.\n\n1888\n01:33:20,420 --> 01:33:23,910\nAnd that's it, there's really not anything\nelse to specify here so I've got it set.\n\n1889\n01:33:23,910 --> 01:33:26,630\nI do need to pick which audit\nis going to control this.\n\n1890\n01:33:26,630 --> 01:33:30,080\nSo I'll drop that down and\npick my audit that I defined before.\n\n1891\n01:33:30,080 --> 01:33:31,320\nI should have given it a better name.\n\n1892\n01:33:31,320 --> 01:33:33,810\nThe default is just audit dash and\na time stamp.\n\n1893\n01:33:35,020 --> 01:33:35,876\nSo, I'll go ahead and set that.\n\n1894\n01:33:35,876 --> 01:33:37,450\nAll right.\n\n1895\n01:33:37,450 --> 01:33:41,780\nSo now I've got the filter, basically the\nAudit Specification that's going to say\n\n1896\n01:33:41,780 --> 01:33:44,360\nwhat I want to audit and the audit itself.\n\n1897\n01:33:44,360 --> 01:33:45,427\nI just need to start them up.\n\n1898\n01:33:45,427 --> 01:33:46,623\nSo I'll go ahead and start that.\n\n1899\n01:33:46,623 --> 01:33:51,400\nI'm going to start my,\nI'll do enable Server Audit Specification.\n\n1900\n01:33:51,400 --> 01:33:56,380\nWe'll start that one up and\nthen I'll start the audit itself, okay.\n\n1901\n01:33:56,380 --> 01:33:59,220\nSo now it's running and it's auditing.\n\n1902\n01:33:59,220 --> 01:34:02,400\nWhenever somebody performs a backup,\nit's gonna log that.\n\n1903\n01:34:02,400 --> 01:34:06,848\nAnd I can right click on that and choose\nView Audit Logs and it'll bring it up so\n\n1904\n01:34:06,848 --> 01:34:07,810\nI can see.\n\n1905\n01:34:07,810 --> 01:34:12,010\nRight now the only thing I see in the log\nis, well, the AUDIT SESSION CHANGED.\n\n1906\n01:34:12,010 --> 01:34:12,560\nIt started.\n\n1907\n01:34:12,560 --> 01:34:14,810\nRight?\nBut there's no other entry in here.\n\n1908\n01:34:14,810 --> 01:34:16,790\nNothing crazy is happening.\n\n1909\n01:34:16,790 --> 01:34:20,890\nBut if I go and perform a backup,\nI'll take my HumanResources database.\n\n1910\n01:34:20,890 --> 01:34:21,570\nAnd I'll back it up.\n\n1911\n01:34:21,570 --> 01:34:23,580\nAll right.\n\n1912\n01:34:23,580 --> 01:34:24,860\nSo I'm gonna back it up to a file.\n\n1913\n01:34:25,900 --> 01:34:26,920\nI'll do a full backup.\n\n1914\n01:34:26,920 --> 01:34:29,830\nSo there it goes, and\nmaybe I'll do another backup.\n\n1915\n01:34:29,830 --> 01:34:31,751\nThis time I'll do\na transaction log backup.\n\n1916\n01:34:35,151 --> 01:34:36,420\nAll right.\nThere it goes.\n\n1917\n01:34:36,420 --> 01:34:38,690\nSo I just performed a few backups.\n\n1918\n01:34:38,690 --> 01:34:40,360\nNow I can go down to my audit and\n\n1919\n01:34:40,360 --> 01:34:44,540\nif I go to View Audit Logs,\nnow I've got some entries, all right?\n\n1920\n01:34:44,540 --> 01:34:48,958\nAnd if we look in there,\nI can see that on WIN-SQL01,\n\n1921\n01:34:48,958 --> 01:34:54,220\na full backup happened and\na transaction log backup happened.\n\n1922\n01:34:54,220 --> 01:34:57,020\nThey were DATABASE backups\nwhich we kind of expect.\n\n1923\n01:34:58,790 --> 01:35:03,960\nAnd if I keep scrolling\nover I'll see more data.\n\n1924\n01:35:05,300 --> 01:35:07,350\nIn particular, who did it.\n\n1925\n01:35:07,350 --> 01:35:07,970\nRight?\n\n1926\n01:35:07,970 --> 01:35:11,410\nSo the person who did it\nwas LAB\\Administrator.\n\n1927\n01:35:11,410 --> 01:35:14,870\nI can see who did the back up,\nwhat they backed up, and when they did it.\n\n1928\n01:35:14,870 --> 01:35:17,297\nSomewhere in here I'll see\nthe Database Name, there it is,\n\n1929\n01:35:17,297 --> 01:35:18,740\nDatabase Name HumanResources.\n\n1930\n01:35:18,740 --> 01:35:21,590\nAll right, I've got a record\nthat that back up occurred.\n\n1931\n01:35:21,590 --> 01:35:22,830\nAnd it's stored in a separate table.\n\n1932\n01:35:22,830 --> 01:35:26,020\nAnd it can be stored on\na different server entirely right?\n\n1933\n01:35:26,020 --> 01:35:29,350\nYou usually want that, because if\na hacker compromises this system,\n\n1934\n01:35:29,350 --> 01:35:32,200\nyou don't want them being able\nto overwrite these audit logs.\n\n1935\n01:35:32,200 --> 01:35:33,990\nThat's the real important part.\n\n1936\n01:35:33,990 --> 01:35:34,750\nRight?\n\n1937\n01:35:34,750 --> 01:35:39,000\nNow, once these audit logs have been made,\nyou can view them in the event viewer.\n\n1938\n01:35:39,000 --> 01:35:41,960\nYou can view them right here like I'm\ndoing in the SQL management studio.\n\n1939\n01:35:41,960 --> 01:35:43,840\nYou can also view them programmatically.\n\n1940\n01:35:43,840 --> 01:35:47,810\nYou can view them inside\nof A Transact-SQL query.\n\n1941\n01:35:47,810 --> 01:35:49,839\nLet me show you that real quick.\n\n1942\n01:35:51,723 --> 01:35:53,860\nI say real quick, it's gonna take\nme a minute to type this out.\n\n1943\n01:35:53,860 --> 01:35:54,900\nI need to get the filename first.\n\n1944\n01:35:54,900 --> 01:35:56,480\nLet me go and get that.\n\n1945\n01:35:56,480 --> 01:35:59,070\nSo I'm gonna browse into\nthe folder where I parked that.\n\n1946\n01:35:59,070 --> 01:36:00,645\nThe filename you'll see is nice and short.\n\n1947\n01:36:00,645 --> 01:36:04,390\n[LAUGH] It is an incredibly long,\nactually you know what?\n\n1948\n01:36:04,390 --> 01:36:05,130\nI'll use a wild card.\n\n1949\n01:36:06,560 --> 01:36:09,230\nInstead of typing in that long name,\nyou can query these things and\n\n1950\n01:36:09,230 --> 01:36:10,030\nuse a wild card.\n\n1951\n01:36:10,030 --> 01:36:12,180\nSo you can just get from\nevery log file in there.\n\n1952\n01:36:12,180 --> 01:36:13,320\nThat's what I'll do.\n\n1953\n01:36:13,320 --> 01:36:21,975\nSo I'm going to say SELECT *\nFROM sys.fn_get_audit_file.\n\n1954\n01:36:24,215 --> 01:36:25,957\nAnd then I need to tell it the file.\n\n1955\n01:36:29,050 --> 01:36:31,431\nSo I'm putting the c:/sim/*.\n\n1956\n01:36:31,431 --> 01:36:35,670\nAnd I'm just gonna put a *,\nwhich means get everything from there.\n\n1957\n01:36:38,120 --> 01:36:40,912\nAnd then you have to specify\nthe record offsets and all that.\n\n1958\n01:36:40,912 --> 01:36:41,981\nI'm just going with defaults.\n\n1959\n01:36:41,981 --> 01:36:42,957\nThat means get me all the data.\n\n1960\n01:36:42,957 --> 01:36:45,510\nLet me zoom in on that a bit so\nyou guys can see it a little better.\n\n1961\n01:36:47,240 --> 01:36:48,665\nSo I'm using a system function.\n\n1962\n01:36:48,665 --> 01:36:52,750\nThere's a function called get_audit_file\nthat will reach out to the filesystem and\n\n1963\n01:36:52,750 --> 01:36:56,710\ngrab that audit file and display\nthe audit entries to me as a table so\n\n1964\n01:36:56,710 --> 01:36:59,220\nI can pull it programmatically.\n\n1965\n01:36:59,220 --> 01:37:03,230\nI'm telling it to parse ever\nlog file in the c:\\sim folder.\n\n1966\n01:37:03,230 --> 01:37:06,730\nAnd just use the default offsets,\nwhich means to display everything.\n\n1967\n01:37:08,410 --> 01:37:09,410\nAll right.\n\n1968\n01:37:09,410 --> 01:37:10,400\nSo I'll go ahead and run that, and\n\n1969\n01:37:10,400 --> 01:37:12,520\nassuming I didn't have a typo,\nthere we go.\n\n1970\n01:37:13,550 --> 01:37:14,910\nSo right down here I get a table.\n\n1971\n01:37:14,910 --> 01:37:17,000\nThis is the same as\nviewing it the other way.\n\n1972\n01:37:17,000 --> 01:37:18,050\nI just see it here in a table.\n\n1973\n01:37:18,050 --> 01:37:19,240\nSo it's a little more programmatic.\n\n1974\n01:37:19,240 --> 01:37:22,350\nI can call this and filter,\nsort it, whatever I want.\n\n1975\n01:37:22,350 --> 01:37:25,710\nBut I can see those backups in here,\nand the day that it happened, so,\n\n1976\n01:37:25,710 --> 01:37:30,680\nI'm backing up the human resources\ndatabase and here's the actual\n\n1977\n01:37:30,680 --> 01:37:34,750\nstatement that was executed, so\nI can see the SQL that was put into place.\n\n1978\n01:37:34,750 --> 01:37:35,290\nRight?\n\n1979\n01:37:35,290 --> 01:37:37,900\nReally cool stuff,\nwe can keep a good record of this.\n\n1980\n01:37:37,900 --> 01:37:39,050\nIt's really just limited to you.\n\n1981\n01:37:39,050 --> 01:37:40,890\nRight?\nYou create the audit specification.\n\n1982\n01:37:40,890 --> 01:37:42,850\nYou tell it what events you want to audit.\n\n1983\n01:37:42,850 --> 01:37:44,400\nIt's a lot more efficient.\n\n1984\n01:37:44,400 --> 01:37:46,250\nIt can write to files\non a different system,\n\n1985\n01:37:46,250 --> 01:37:49,170\nwhich ensures that we don't have\na lot of disk I/O contention.\n\n1986\n01:37:49,170 --> 01:37:52,720\nAnd it's a lot easier to implement\nthan those DML triggers, right?\n\n1987\n01:37:52,720 --> 01:37:54,450\nDML triggers are kind of messy.\n\n1988\n01:37:54,450 --> 01:37:55,970\nThis is a much, much cleaner solution.\n\n1989\n01:37:55,970 --> 01:37:56,790\nAll right.\n\n1990\n01:37:56,790 --> 01:37:58,310\nDo you remember that\nthis was new in SQL 2008.\n\n1991\n01:37:58,310 --> 01:38:02,280\nSo if you have older versions of SQL,\nDML triggers are what's common.\n\n1992\n01:38:02,280 --> 01:38:06,460\nSo a lot of database admins when they\nupgrade it from 2005 to 2008 and\n\n1993\n01:38:06,460 --> 01:38:11,030\nnow 2008 to 2012, they've already\ngot the DML triggers in place.\n\n1994\n01:38:11,030 --> 01:38:12,590\nSo why change it, right?\n\n1995\n01:38:12,590 --> 01:38:15,390\nA lot of them still have it there,\nbut you might look at it and say hey,\n\n1996\n01:38:15,390 --> 01:38:17,730\nthis is a place where I\ncould optimize my server.\n\n1997\n01:38:17,730 --> 01:38:20,190\nIf we move away from DML triggers and\n\n1998\n01:38:20,190 --> 01:38:24,470\nmove to audits like these,\nit will improve performance on the server.\n\n1999\n01:38:24,470 --> 01:38:28,890\nSo just because the DML triggers\nare already there, don't leave it be.\n\n2000\n01:38:28,890 --> 01:38:32,580\nDon't just say, oh, it works, let's leave\nit, because this is more efficient.\n\n2001\n01:38:33,910 --> 01:38:34,660\nAll right.\n\n2002\n01:38:34,660 --> 01:38:37,500\nWell, that pretty much wraps\nup monitoring our server.\n\n2003\n01:38:37,500 --> 01:38:40,940\nLet me just check my notes here and\nmake sure I didn't leave anything out.\n\n2004\n01:38:40,940 --> 01:38:45,820\nAny Transact-SQL skill or whatever I did\non the screen, is in the episode notes.\n\n2005\n01:38:45,820 --> 01:38:47,870\nIt'll get posted with this episode so\nyou'll have access to it.\n\n2006\n01:38:47,870 --> 01:38:49,250\nIt's all there.\n\n2007\n01:38:49,250 --> 01:38:53,250\nAnd on the audit side, I'm going to\ninclude a link here to Microsoft's webpage\n\n2008\n01:38:53,250 --> 01:38:55,950\nbecause they have some really\ngood stuff on there about\n\n2009\n01:38:55,950 --> 01:38:58,490\ncommon things that you might want\nto audit and other information.\n\n2010\n01:38:58,490 --> 01:39:00,180\nSo that link will be\nin the show notes too.\n\n2011\n01:39:01,520 --> 01:39:02,890\nAll right, well.\n\n2012\n01:39:02,890 --> 01:39:07,230\nThis is the final episode from\nMicrosoft SQL because we've\n\n2013\n01:39:07,230 --> 01:39:08,330\ncovered all the objectives.\n\n2014\n01:39:08,330 --> 01:39:11,120\nSo we're gonna wrap it up here and\nnormally I say I'll see you next episode,\n\n2015\n01:39:11,120 --> 01:39:13,000\nbut this one's kind of done.\n\n2016\n01:39:13,000 --> 01:39:18,820\nSo, let me just remind you guys, if you\nhave any questions, feel free to ask.\n\n2017\n01:39:18,820 --> 01:39:21,360\nI'm not just gonna ignore SQL for\nthe rest of my life.\n\n2018\n01:39:21,360 --> 01:39:23,250\nIt's something that we got and\nwe want to support it.\n\n2019\n01:39:23,250 --> 01:39:26,250\nSo if you have questions make\nsure to let us know, all right?\n\n2020\n01:39:26,250 --> 01:39:27,550\nUse the Q and A forums.\n\n2021\n01:39:27,550 --> 01:39:31,700\nAt the top of every page you'll see a link\nthat says Q and A, you can click on that,\n\n2022\n01:39:31,700 --> 01:39:34,500\nit will take you into the forums and\nyou can post your questions there.\n\n2023\n01:39:34,500 --> 01:39:36,210\nWe monitor and answer.\n\n2024\n01:39:36,210 --> 01:39:38,910\nAnd if it's a really good question,\nwe'll film another episode.\n\n2025\n01:39:38,910 --> 01:39:39,810\nWe'll get up here.\n\n2026\n01:39:39,810 --> 01:39:40,800\nI say we, me.\n\n2027\n01:39:40,800 --> 01:39:42,820\nI'll film another episode to answer it.\n\n2028\n01:39:42,820 --> 01:39:44,960\nI really like those when it's\na hard question, it's easier for\n\n2029\n01:39:44,960 --> 01:39:48,150\nme to show than to explain it in typing.\n\n2030\n01:39:48,150 --> 01:39:51,580\nSo we can do that and\ngenerate more content as needed.\n\n2031\n01:39:51,580 --> 01:39:54,940\nBut if you're just brushing up for\nthe exam, we've covered it so\n\n2032\n01:39:54,940 --> 01:39:58,250\npretty much everything you're gonna\nsee on the exam, we've gone through.\n\n2033\n01:39:58,250 --> 01:40:03,090\nDefinitely wanna make sure you study this\nstuff, watch the episodes, practice some.\n\n2034\n01:40:03,090 --> 01:40:07,400\nYou can download Microsoft SQL Server for\nfree, right, from Microsoft's website, and\n\n2035\n01:40:07,400 --> 01:40:11,180\nyou can whip up sample databases and\nexperiment, kinda practice around a bit.\n\n2036\n01:40:11,180 --> 01:40:13,010\nAnd have some real fun with it.\n\n2037\n01:40:13,010 --> 01:40:16,460\nDo be careful though,\ndon't use SQL Server Express, right,\n\n2038\n01:40:16,460 --> 01:40:19,000\ndon't use the free, el cheapo version.\n\n2039\n01:40:19,000 --> 01:40:20,710\nIt doesn't have all\nthe management utilities.\n\n2040\n01:40:20,710 --> 01:40:24,580\nSo actually get an evaluation\nof SQL 2012 Enterprise.\n\n2041\n01:40:24,580 --> 01:40:26,280\nThey've got it, it's free, you can run it.\n\n2042\n01:40:26,280 --> 01:40:28,978\nI wanna say it's three\nmonths that it'll run, and\n\n2043\n01:40:28,978 --> 01:40:32,830\nthen if you exceed your three months,\nyou just delete it and rebuild it.\n\n2044\n01:40:32,830 --> 01:40:33,680\nIt's no big deal there.\n\n2045\n01:40:33,680 --> 01:40:37,450\nSo definitely take advantage\nof that in your studies.\n\n2046\n01:40:38,700 --> 01:40:39,360\nAll right.\nWell,\n\n2047\n01:40:39,360 --> 01:40:42,380\nI hope to see you guys in the forums\nwith any questions you might have.\n\n2048\n01:40:42,380 --> 01:40:46,140\nBut other than that, signing out for\nITProTV, I'm Don Pezet.\n\n2049\n01:40:46,140 --> 01:40:47,624\nAnd I'll see you next time.\n\n2050\n01:40:47,624 --> 01:40:57,624\n[MUSIC]\n\n",
          "vimeoId": "106382513"
        }
      ],
      "title": "Implement high availability"
    }
  ],
  "url": "microsoft-sql-server-2012",
  "vLab": false
}
