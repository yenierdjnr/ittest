{
  "description": "This exam has been retired. The Network+ certification was introduced by CompTIA in 1999. It was designed to do for Network Technicians what the A+ certification did for Computer Technicians. Obtaining the Network+ certification shows that the holder possess the same knowledge and skills of someone who has worked for nine months as a Network Technician. The Network+ exam covers topics ranging from theory (terminology, topology and design) to hardware (routers, switches and cabling) to provide the learner with a broad, vendor neutral perspective on the topics required to work in the field",
  "descriptionMD": "",
  "length": "150803",
  "name": "Network+",
  "practiceExam": false,
  "subtitle": null,
  "tagUrl": "legacy",
  "topics": [
    {
      "episodes": [
        {
          "description": "The Network+ certification was introduced by CompTIA in 1999. It was designed to do for Network Technicians what the A+ certification did for Computer Technicians. Obtaining the Network+ certification shows that the holder possess the same knowledge and skills of someone who has worked for nine months as a Network Technician. The Network+ exam covers topics ranging from theory (terminology, topology and design) to hardware (routers, switches and cabling) to provide the learner with a broad, vendor neutral perspective on the topics required to work in the field",
          "length": "884",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/001-Intro-To-Network.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/001-Intro-To-Network-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/001-Intro-To-Network-sm.jpg",
          "title": "Overview of Network+",
          "transcript": "",
          "vimeoId": "109580303"
        }
      ],
      "title": "Overview of CompTIA Network+ (N10-005)"
    },
    {
      "episodes": [
        {
          "description": "In this episode Ronnie and Don give a high level overview of the first objective of the Network+ exam. They detail the sub-objectives that will be covered in the 1.0 Networking Concepts objective such as the OSI model, classifying devices, IP addressing, ports and protocols, and more.",
          "length": "434",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-0-Networking-Concepts.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-0-Networking-Concepts-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-0-Networking-Concepts-sm.jpg",
          "title": "Networking Concepts Overview",
          "transcript": "",
          "vimeoId": "109580302"
        },
        {
          "description": "In this episode Ronnie and Don take a look at the OSI model and its seven layers. They break down each layer while discussing the protocols that can be found there. They also talk about TCP/IP model and how it compares to the OSI model.",
          "length": "2338",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-1-OSI-Model.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-1-OSI-Model-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-1-OSI-Model-sm.jpg",
          "title": "The OSI Model",
          "transcript": "",
          "vimeoId": "109580301"
        },
        {
          "description": "In this episode Ronnie and Don classify the various devices, protocols and applications found on the network and how they relate to the OSI model.",
          "length": "1755",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-2-Classifying-Items-In-OSI.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-2-Classifying-Items-In-OSI-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-2-Classifying-Items-In-OSI-sm.jpg",
          "title": "Classifying Items In OSI",
          "transcript": "",
          "vimeoId": "109580300"
        },
        {
          "description": "In this episode Don describes the characteristics of IP addressing. He begins with breaking down the IP address to binary conversion and how the subnet mask comes into play in determining which class the IP address belongs to. He wraps the show with a discussion on the main classes of IP addresses; both public and private classes.",
          "length": "5605",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-3-IP-Addressing.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-3-IP-Addressing-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/Net-1-3-IP-Addressing-sm.jpg",
          "title": "IP Addressing",
          "transcript": "WEBVTT\n\n1\n00:00:00.046 --> 00:00:10.046\n[MUSIC]\n\n2\n00:00:15.045 --> 00:00:19.754\n[SOUND]\n\n3\n00:00:22.171 --> 00:00:32.171\n[MUSIC]\n\n4\n00:00:33.796 --> 00:00:34.710\nAll right.\n\n5\n00:00:34.710 --> 00:00:36.620\nGood morning, good afternoon,\nand good evening and\n\n6\n00:00:36.620 --> 00:00:38.770\nwelcome back to another\nepisode of IT Pro TV.\n\n7\n00:00:38.770 --> 00:00:43.879\nI'm your host Don Pasette, back again\nwith another episode of CompTIA Network+.\n\n8\n00:00:43.879 --> 00:00:47.921\nToday, we're gonna be taking a look\nat exam objective 1.3, which is,\n\n9\n00:00:47.921 --> 00:00:51.660\nexplain the purpose and\nproperties of IP Addressing.\n\n10\n00:00:51.660 --> 00:00:55.410\nNow, this is one of the more deceptive\nexam objectives when you're looking\n\n11\n00:00:55.410 --> 00:00:56.320\nat the list.\n\n12\n00:00:56.320 --> 00:00:58.390\nIf we just bring it up,\nI'll bring it up here real quick.\n\n13\n00:00:58.390 --> 00:01:00.636\nSo far we've seen earlier\nobjectives like 1.1 and\n\n14\n00:01:00.636 --> 00:01:03.420\n1.2 where they've got\na ton of stuff listed.\n\n15\n00:01:03.420 --> 00:01:05.150\nAnd then we get to 1.3 and\n\n16\n00:01:05.150 --> 00:01:09.060\nit really just looks like a couple\nof points, nothing too crazy.\n\n17\n00:01:09.060 --> 00:01:11.120\nBut, there are a few of these,\n\n18\n00:01:11.120 --> 00:01:14.940\nlike this little guy right here,\nthat are actually some of the larger,\n\n19\n00:01:14.940 --> 00:01:19.120\nand more difficult topics to grasp inside\nof the network plus certification.\n\n20\n00:01:19.120 --> 00:01:22.080\nSo even though it looks like just a\nhandful of bullet points here in the exam\n\n21\n00:01:22.080 --> 00:01:25.270\nobjectives, we are spending\na good bit of time on this one.\n\n22\n00:01:25.270 --> 00:01:28.780\nSo this episode we're gonna\ncover the basics, and\n\n23\n00:01:28.780 --> 00:01:31.810\nthen what we'll do is the second part of\nthis episode where we go more advanced\n\n24\n00:01:31.810 --> 00:01:35.660\ninto some of the difficult areas\nof working with IP addresses.\n\n25\n00:01:36.660 --> 00:01:40.170\nBut, we can't get there unless\nwe cover the basics first.\n\n26\n00:01:40.170 --> 00:01:42.170\nSo, lets start with the basics.\n\n27\n00:01:42.170 --> 00:01:45.845\nThey are asking for us to understand the\npurpose and properties of an IP address,\n\n28\n00:01:45.845 --> 00:01:49.830\nso we probably need to know,\nwhat is an IP address?\n\n29\n00:01:49.830 --> 00:01:51.840\nWell, when you have a Network, and\n\n30\n00:01:51.840 --> 00:01:54.970\nyou have more than one computer on that\nnetwork, and you want them to talk to\n\n31\n00:01:54.970 --> 00:01:58.410\neach other, they've got to\nhave a way to find each other.\n\n32\n00:01:58.410 --> 00:02:00.730\nHow can they find each\nother on the network?\n\n33\n00:02:00.730 --> 00:02:03.710\nIf there were only two\ncomputers on the network,\n\n34\n00:02:03.710 --> 00:02:04.860\nthey wouldn't have to find each other.\n\n35\n00:02:04.860 --> 00:02:07.890\nJust one person could shout and\nthe other person would hear them, right?\n\n36\n00:02:07.890 --> 00:02:08.740\nVery easy.\n\n37\n00:02:08.740 --> 00:02:12.550\nIf you have two people in a room,\nthey don't have to see each other.\n\n38\n00:02:12.550 --> 00:02:13.640\nThey can just talk out loud.\n\n39\n00:02:13.640 --> 00:02:16.490\nThe other person is going to hear it and\nthey can have a conversation.\n\n40\n00:02:16.490 --> 00:02:18.290\nWell, that's how two computers would be.\n\n41\n00:02:18.290 --> 00:02:21.350\nAnd in the earliest of networks,\nthat's how it was.\n\n42\n00:02:21.350 --> 00:02:24.210\nYou had two computers with\na cable that ran between them and\n\n43\n00:02:24.210 --> 00:02:26.370\nthey could just shout\nright over that cable.\n\n44\n00:02:26.370 --> 00:02:28.570\nYou didn't need addressing.\n\n45\n00:02:28.570 --> 00:02:32.930\nBut it wasn't long before people wanted\n3 computers, or 4 computers, or 50,\n\n46\n00:02:32.930 --> 00:02:38.350\n100 computers, and at that point\nwhen you talk on the network,\n\n47\n00:02:38.350 --> 00:02:40.660\ndid you want to talk to everybody?\n\n48\n00:02:40.660 --> 00:02:43.580\nNot normally, normally you\nwanted to talk to one person, so\n\n49\n00:02:43.580 --> 00:02:45.590\nyou had to have some way to find them.\n\n50\n00:02:45.590 --> 00:02:47.290\nNow the early networks didn't do that.\n\n51\n00:02:47.290 --> 00:02:52.000\nSo when you take a look at older networks\nlike token ring, and some of the thin net,\n\n52\n00:02:52.000 --> 00:02:57.030\nthick net, those guys back then, even they\ndidn't use addressing in the early days.\n\n53\n00:02:57.030 --> 00:03:00.430\nYou would throw stuff on the wire and\neveryone would hear it.\n\n54\n00:03:00.430 --> 00:03:03.040\nAnd some computers would see that\ninformation you were sending and\n\n55\n00:03:03.040 --> 00:03:05.360\nact on it, and\nother people would just ignore it.\n\n56\n00:03:05.360 --> 00:03:06.985\nIt wasn't very efficient.\n\n57\n00:03:06.985 --> 00:03:09.635\nAnd those networks\ncouldn't scale very large.\n\n58\n00:03:09.635 --> 00:03:13.135\nSo, we had to come up with some way,\nI say we like I was involved.\n\n59\n00:03:13.135 --> 00:03:17.535\nThey the people that designed IP\naddressing, they had to come up with a way\n\n60\n00:03:17.535 --> 00:03:21.645\nto identify machines uniquely,\nso that when you talked,\n\n61\n00:03:21.645 --> 00:03:25.065\nyou weren't talking to everybody, you\nwere talking to one person specifically.\n\n62\n00:03:25.065 --> 00:03:29.000\nAnd they were planning for\nthe networks of the future.\n\n63\n00:03:29.000 --> 00:03:32.360\nWell, this was 40 years ago,\nand here we are today, and\n\n64\n00:03:32.360 --> 00:03:34.310\nwe're in that network of the future.\n\n65\n00:03:34.310 --> 00:03:38.930\nWhen you look at the internet,\nyou have millions of computers across\n\n66\n00:03:38.930 --> 00:03:42.130\nthe world that are all interconnected,\nand able to talk to each other.\n\n67\n00:03:42.130 --> 00:03:46.160\nCould you imagine if we still followed the\nold method, where you just shouted out and\n\n68\n00:03:46.160 --> 00:03:47.421\neverybody had to listen?\n\n69\n00:03:47.421 --> 00:03:52.150\nWith millions of computers out there doing\nthat, it would be constant collisions and\n\n70\n00:03:52.150 --> 00:03:53.650\na bandwidth nightmare.\n\n71\n00:03:53.650 --> 00:03:55.080\nIt wouldn't work.\n\n72\n00:03:55.080 --> 00:03:57.171\nNetworks like the Internet\nwould not be possible.\n\n73\n00:03:57.171 --> 00:04:01.200\nAll right, so\nIP addressing is what fills that gap.\n\n74\n00:04:01.200 --> 00:04:03.050\nIt's what makes it possible.\n\n75\n00:04:03.050 --> 00:04:05.070\nAn IP address is simply a number.\n\n76\n00:04:05.070 --> 00:04:09.620\nIt's a number attached to each computer\non a network that identifies it.\n\n77\n00:04:09.620 --> 00:04:13.360\nAnd IP specifically,\nthat stands for Internet Protocol.\n\n78\n00:04:13.360 --> 00:04:14.922\nIt was designed for the Internet.\n\n79\n00:04:14.922 --> 00:04:17.665\nBut it didn't take long for\n\n80\n00:04:17.665 --> 00:04:23.790\npeople to recognize that it\nwas a really good protocol.\n\n81\n00:04:23.790 --> 00:04:29.480\nAnd over the last 30 years, we've seen\nmany other addressing schemes come and\n\n82\n00:04:29.480 --> 00:04:34.090\ngo, and IP addressing has\nsettled in as the standard.\n\n83\n00:04:34.090 --> 00:04:37.260\nSo in today's world when\nyou go to a network,\n\n84\n00:04:37.260 --> 00:04:39.900\nthe odds are it's gonna\nbe an IP based network.\n\n85\n00:04:39.900 --> 00:04:42.940\nIn fact it's pretty rare\nthat you spot anything else.\n\n86\n00:04:42.940 --> 00:04:46.620\nSo on the exam, they don't even\nfocus on the other guys anymore.\n\n87\n00:04:46.620 --> 00:04:50.830\nTechnologies like AppleTalk,\nIPX/SPX, Banyan VINES,\n\n88\n00:04:50.830 --> 00:04:55.860\nthese technologies used to be big,\nback in the late 80s, early 90s even,\n\n89\n00:04:55.860 --> 00:05:00.330\nbut by this time, all right,\n20 years later, they're nonexistent.\n\n90\n00:05:00.330 --> 00:05:02.770\nYou really don't see networks\nrunning those protocols anymore.\n\n91\n00:05:02.770 --> 00:05:05.960\nSo IP addressing is what you're\ngoing to see on the Internet and\n\n92\n00:05:05.960 --> 00:05:07.710\nin your private networks.\n\n93\n00:05:07.710 --> 00:05:10.930\nAll right, so I mentioned that\nan IP address is like a number.\n\n94\n00:05:10.930 --> 00:05:12.620\nIt is, it's a number.\n\n95\n00:05:12.620 --> 00:05:17.530\nAnd it's made up of two parts,\none part identifies your network,\n\n96\n00:05:17.530 --> 00:05:22.910\nthe network that you're on, and the other\npart identifies you, your computer.\n\n97\n00:05:22.910 --> 00:05:26.490\nThose two parts work very\nsimilar to a street address.\n\n98\n00:05:26.490 --> 00:05:29.260\nLet's put the technology side\nout of our minds for a moment,\n\n99\n00:05:29.260 --> 00:05:32.520\nand let me just kind of\nshow you an example here.\n\n100\n00:05:32.520 --> 00:05:35.490\nSo the building I'm in right now.\n\n101\n00:05:35.490 --> 00:05:43.220\nI'm at the ITPro TV studios, and\nwe are at 6933 NW 4th Boulevard, right?\n\n102\n00:05:43.220 --> 00:05:46.180\nThat's the street address for\nour building.\n\n103\n00:05:46.180 --> 00:05:50.540\nSo if you wanted to come and visit\nthe studio, you could go into your GPS and\n\n104\n00:05:50.540 --> 00:05:51.530\nyou could punch in that.\n\n105\n00:05:51.530 --> 00:05:56.160\nNow, if you were in the same city as me,\nyou'd know exactly where to get that,\n\n106\n00:05:56.160 --> 00:05:57.320\nyour GPS would find it.\n\n107\n00:05:57.320 --> 00:05:59.550\nBut if you're in a different city,\nor even a different country,\n\n108\n00:05:59.550 --> 00:06:02.370\nyou might need a little more information.\n\n109\n00:06:02.370 --> 00:06:04.520\nBut IP addresses are smarter then that.\n\n110\n00:06:04.520 --> 00:06:07.760\nThey can be a lot more complex, and\nso we don't have the other things,\n\n111\n00:06:07.760 --> 00:06:14.230\nwe don't need a city, a state,\na zip code, a country, right?\n\n112\n00:06:14.230 --> 00:06:17.760\nWe don't need all of that other stuff\nbecause IP addresses manage to wrap\n\n113\n00:06:17.760 --> 00:06:21.020\nthis all up inside of\none bit of the address.\n\n114\n00:06:22.330 --> 00:06:25.810\nNow this street address,\nit's made up of two parts.\n\n115\n00:06:25.810 --> 00:06:30.260\nThe first part, 6933,\nthat's my building number, right?\n\n116\n00:06:30.260 --> 00:06:32.540\nSo that is my building number.\n\n117\n00:06:32.540 --> 00:06:37.710\nAnd on this street,\nthere is no other building that's 6933.\n\n118\n00:06:37.710 --> 00:06:40.810\nThere's a 6934 and a 6932.\n\n119\n00:06:40.810 --> 00:06:43.337\nThere's probably a couple of other\nnumbers thrown in there just\n\n120\n00:06:43.337 --> 00:06:45.462\nwith the other buildings\nthat are here on the street.\n\n121\n00:06:45.462 --> 00:06:50.754\nBut we are the only 6933 on this street,\nright?\n\n122\n00:06:50.754 --> 00:06:57.220\nNorthwest 4th Boulevard,\nThat is our street name.\n\n123\n00:06:58.900 --> 00:07:00.900\nAnd in our city,\n\n124\n00:07:00.900 --> 00:07:04.560\nin the city of Gainesville,\nthat is the only Northwest 4th Boulevard.\n\n125\n00:07:04.560 --> 00:07:06.923\nThere is no other Northwest\n4th Boulevard in town.\n\n126\n00:07:06.923 --> 00:07:09.990\nThere might be a Southwest or\na Northeast or whatever.\n\n127\n00:07:09.990 --> 00:07:12.390\nThere's only one Northwest 4th Boulevard.\n\n128\n00:07:12.390 --> 00:07:16.430\nAll right, so,\nthis street is unique to our\n\n129\n00:07:18.210 --> 00:07:20.960\ncity, 6933 is only unique to the street,\nright?\n\n130\n00:07:20.960 --> 00:07:22.379\nThere might be other 6933's.\n\n131\n00:07:22.379 --> 00:07:25.370\nThere might be a 6933\nNorthwest 5th Boulevard.\n\n132\n00:07:25.370 --> 00:07:27.180\nThat doesn't bump into me, right?\n\n133\n00:07:27.180 --> 00:07:31.300\nSo the two parts of this address by\nthemselves, are not necessarily unique.\n\n134\n00:07:31.300 --> 00:07:34.360\nThere's other buildings in\ntown that might be 6933,\n\n135\n00:07:34.360 --> 00:07:36.930\nand there are other streets in town,\nor other buildings,\n\n136\n00:07:36.930 --> 00:07:40.390\nsorry there's other buildings on my street\nthat end in Northwest 4th Boulevard.\n\n137\n00:07:40.390 --> 00:07:46.780\nSo those get reused, but together it's\nunique and it identifies our building.\n\n138\n00:07:46.780 --> 00:07:48.540\nNo other building in\nthe city of Gainesville\n\n139\n00:07:48.540 --> 00:07:50.740\nis 6933 Northwest 4th Boulevard.\n\n140\n00:07:50.740 --> 00:07:52.084\nThat's how an IP address is.\n\n141\n00:07:52.084 --> 00:07:57.125\nThe IP address has those two pieces\nthat kind of fit this same model,\n\n142\n00:07:57.125 --> 00:07:59.168\nonly they look different.\n\n143\n00:07:59.168 --> 00:08:04.459\nFor example 192.168.01.\n\n144\n00:08:04.459 --> 00:08:09.214\nThat is an example of an IPv4 address.\n\n145\n00:08:09.214 --> 00:08:17.330\nAnd part of it, 192.168.0,\nis the Network ID.\n\n146\n00:08:17.330 --> 00:08:23.930\nAnd the other part,\nwhich is just .1, is the Host ID.\n\n147\n00:08:23.930 --> 00:08:29.080\nSo 192.168.0 identifies\nthe network that it's on.\n\n148\n00:08:29.080 --> 00:08:31.010\nThat network is shared by other computers,\n\n149\n00:08:31.010 --> 00:08:33.320\nthis is other computers\non that same network.\n\n150\n00:08:33.320 --> 00:08:36.990\nBut .1, that's the Host ID,\non that network,\n\n151\n00:08:36.990 --> 00:08:39.980\nthis computer is the only\none that ends in .1.\n\n152\n00:08:39.980 --> 00:08:42.220\nNobody else on this network does.\n\n153\n00:08:42.220 --> 00:08:45.310\nSomebody might be on a different network,\nand they may end in .1.\n\n154\n00:08:45.310 --> 00:08:49.070\nSure, it's a different network, but\non my network, it's me individually.\n\n155\n00:08:50.710 --> 00:08:54.420\nSo these two things combined,\nthe Network ID and the Host ID,\n\n156\n00:08:54.420 --> 00:08:56.990\nwhen you stick them together.\n\n157\n00:08:56.990 --> 00:09:01.920\nSo if we say NetworkID.HostID When\nwe stick those together,\n\n158\n00:09:01.920 --> 00:09:06.680\nthat becomes a unique identifier for\nmy machine.\n\n159\n00:09:06.680 --> 00:09:09.810\nIt says, that's me and\nthat's how you can find me.\n\n160\n00:09:09.810 --> 00:09:12.720\nSo if you wanna get to me specifically,\nhere's how you do it.\n\n161\n00:09:14.560 --> 00:09:22.650\nJust like up here, where we have our\nBuildingNumber and our StreetName.\n\n162\n00:09:22.650 --> 00:09:25.370\nThose two combine to\ncreate that unique value.\n\n163\n00:09:25.370 --> 00:09:27.720\nThat is what an IP address is.\n\n164\n00:09:27.720 --> 00:09:32.600\nNow I mentioned how in a street name or\nwhatever\n\n165\n00:09:32.600 --> 00:09:38.030\nthat we may have to also include a city\nand a state and a country and a zip code.\n\n166\n00:09:38.030 --> 00:09:43.700\nBecause there's so many NW 4th\nBlvds across the United States,\n\n167\n00:09:43.700 --> 00:09:46.480\nand there's so\nmany of those across the State of Florida.\n\n168\n00:09:46.480 --> 00:09:50.610\nSo we've gotta be able to kinda\ndirect that down to a smaller area.\n\n169\n00:09:50.610 --> 00:09:53.710\nBut with IP addressing,\nbecause this is a number,\n\n170\n00:09:53.710 --> 00:09:58.790\nthere are literally millions of\ndifferent options that this could be and\n\n171\n00:09:58.790 --> 00:10:01.860\nsince there's so many different options,\nwe don't have duplicates.\n\n172\n00:10:01.860 --> 00:10:03.560\nWe don't have to worry about that so\n\n173\n00:10:03.560 --> 00:10:07.070\nwe don't need those additional\nidentifiers to get us to the target.\n\n174\n00:10:07.070 --> 00:10:10.720\nBut, at its heart,\nthat's what an IP address is.\n\n175\n00:10:10.720 --> 00:10:13.230\nAnd when you get on your computer and\n\n176\n00:10:13.230 --> 00:10:17.090\nyou hop out on the internet,\nYou're getting an address like that.\n\n177\n00:10:17.090 --> 00:10:18.040\nYou may never see it.\n\n178\n00:10:18.040 --> 00:10:20.760\nYou may never even noticed it before,\nbut you have one.\n\n179\n00:10:20.760 --> 00:10:24.560\nThe fact that you're on this website,\nwatching this episode right now, or\n\n180\n00:10:24.560 --> 00:10:26.940\non your Roku watching\nthis episode right now.\n\n181\n00:10:26.940 --> 00:10:30.300\nEither way, you're on the internet\nto be able to get to us,\n\n182\n00:10:30.300 --> 00:10:32.350\nand that means you have an address.\n\n183\n00:10:32.350 --> 00:10:34.410\nYou can see it, you can fire up a website.\n\n184\n00:10:35.540 --> 00:10:39.064\nI use a few different websites, but\none of them I like is ipmonkey.com.\n\n185\n00:10:40.120 --> 00:10:41.213\nJust because it's got a funny name.\n\n186\n00:10:41.213 --> 00:10:43.994\nIf you go to IPMonkey.com,\na little monkey appears and\n\n187\n00:10:43.994 --> 00:10:46.255\nhe tells you exactly\nwhat your IP address is.\n\n188\n00:10:46.255 --> 00:10:47.589\nThere's my IP address.\n\n189\n00:10:47.589 --> 00:10:51.339\n209.251.159.179.\n\n190\n00:10:51.339 --> 00:10:53.870\nThat's me.\n\n191\n00:10:53.870 --> 00:10:58.940\nNo one else in the entire planet is\nusing that IP address right now.\n\n192\n00:10:58.940 --> 00:11:00.390\nThat's me.\n\n193\n00:11:01.480 --> 00:11:04.380\nIf you got a thing against monkeys,\nyou can always use IP Chicken also.\n\n194\n00:11:04.380 --> 00:11:07.680\nWe like to keep our varieties open,\nso I'll go to IPChicken.com, and\n\n195\n00:11:07.680 --> 00:11:12.130\nI'll see that here we go again,\n209.251.159.179.\n\n196\n00:11:12.130 --> 00:11:14.270\nAnd apparently it thinks I'm in Denver.\n\n197\n00:11:14.270 --> 00:11:16.630\nSo [LAUGH] no that's\nadvertising with Google.\n\n198\n00:11:17.950 --> 00:11:18.850\nSo there we go.\n\n199\n00:11:18.850 --> 00:11:20.290\nThat's our IP address.\n\n200\n00:11:20.290 --> 00:11:21.000\nThat's us.\n\n201\n00:11:21.000 --> 00:11:21.790\nThat's us on the network.\n\n202\n00:11:21.790 --> 00:11:23.300\nAnd you're watching this show right now.\n\n203\n00:11:23.300 --> 00:11:26.580\nYou hit pause or if it's live I\nguess you can't really do that, but\n\n204\n00:11:26.580 --> 00:11:28.468\nopen up another window and\ndo exactly what I did.\n\n205\n00:11:28.468 --> 00:11:31.290\nGo to WhatIsMyIP.com or IPmonkey or\n\n206\n00:11:31.290 --> 00:11:34.510\nIPchicken, all these different sites\nthat are out there that do this.\n\n207\n00:11:34.510 --> 00:11:36.180\nI used to always use WhatIsMyIP.com but\n\n208\n00:11:36.180 --> 00:11:38.000\nthey started doing too\nmany ads on their page.\n\n209\n00:11:38.000 --> 00:11:40.660\nWell, actually they might\nhave cleaned it up a bit.\n\n210\n00:11:40.660 --> 00:11:42.190\nBut either way, you'll jump out there and\n\n211\n00:11:42.190 --> 00:11:46.640\nsee what your IP address is to\nget an idea of what that is.\n\n212\n00:11:46.640 --> 00:11:48.630\nThat's your unique identifier.\n\n213\n00:11:48.630 --> 00:11:50.810\nThe only problem is when\nyou look at that number,\n\n214\n00:11:50.810 --> 00:11:54.140\ndo you know which part is your network and\nwhich part is your host?\n\n215\n00:11:54.140 --> 00:11:56.270\nLike which one actually identifies you?\n\n216\n00:11:56.270 --> 00:11:57.250\nUnfortunately you don't.\n\n217\n00:11:57.250 --> 00:12:00.080\nIt's not as clean cut as a street number.\n\n218\n00:12:00.080 --> 00:12:02.110\nBut the street number is very obvious.\n\n219\n00:12:02.110 --> 00:12:06.420\nWhen we look at that number I\ncan see 6933, that's my number,\n\n220\n00:12:06.420 --> 00:12:10.190\nmy building number, and then everything\nelse is the street, it makes sense.\n\n221\n00:12:10.190 --> 00:12:13.840\nBut when you look at an IP address,\nthat's not enough.\n\n222\n00:12:13.840 --> 00:12:17.730\nAnd so IP addresses are normally\ncombined with a second thing.\n\n223\n00:12:17.730 --> 00:12:21.400\nAnd that second thing is\nwhat's called a subnet mask.\n\n224\n00:12:21.400 --> 00:12:25.550\nAnd the subnet mask is what helps us to\nknow which part is the network ID, and\n\n225\n00:12:25.550 --> 00:12:27.440\nwhich part is the host ID.\n\n226\n00:12:27.440 --> 00:12:30.220\nBut let's take that concept\nof a network mask, and\n\n227\n00:12:30.220 --> 00:12:32.560\nlet's just stick it behind our ear for\na minute or something.\n\n228\n00:12:32.560 --> 00:12:34.370\nWe'll save that one for\na little bit later.\n\n229\n00:12:34.370 --> 00:12:37.809\nI wanna wade into this nice and slow,\nso that we make sure we understand all\n\n230\n00:12:37.809 --> 00:12:40.923\nthe fundamental concepts before\nI start layering on complexity.\n\n231\n00:12:40.923 --> 00:12:44.381\nSo let's focus just on the address itself.\n\n232\n00:12:44.381 --> 00:12:51.490\nThis address, 192.168.0.1,\nwhat kind of number is that?\n\n233\n00:12:51.490 --> 00:12:52.450\nI've got periods.\n\n234\n00:12:52.450 --> 00:13:00.340\nWhen I do .168 is that a decimal\nlike 1.5 or 1.3 or whatever?\n\n235\n00:13:00.340 --> 00:13:04.740\nIf I am halfway there then\nam I .5 of the way there?\n\n236\n00:13:04.740 --> 00:13:07.440\nWell these are not regular decimal points,\n\n237\n00:13:07.440 --> 00:13:09.990\nwell you know that because\nthere more than one of them.\n\n238\n00:13:09.990 --> 00:13:14.560\nOr if you're European, here in the US\nwhere we have numbers that are greater\n\n239\n00:13:14.560 --> 00:13:18.550\nthan three digits we usually use a comma\nto designate the thousands place.\n\n240\n00:13:18.550 --> 00:13:21.400\nIn Europe you use a decimal\nright kind of reverse.\n\n241\n00:13:21.400 --> 00:13:26.660\nSo this might look like 192 million 168\nthousand or whatever, but it's kind of\n\n242\n00:13:26.660 --> 00:13:31.880\nwrong because we have this whole zero\nright here which is a little weird.\n\n243\n00:13:32.880 --> 00:13:34.990\nThis is not a traditional number.\n\n244\n00:13:34.990 --> 00:13:35.870\nIn fact,\n\n245\n00:13:35.870 --> 00:13:40.500\nit's not really even a number in the sense\nof the way that we think of it normally.\n\n246\n00:13:41.730 --> 00:13:46.669\nBehind the scenes, this is actually\na binary number, and if you've ever\n\n247\n00:13:46.669 --> 00:13:51.464\nmessed with binary, you know binary\nonly has two values, a 0 and a 1.\n\n248\n00:13:51.464 --> 00:13:54.589\nBut when I look at this,\nI've got 9s, I've got 6s and 8s.\n\n249\n00:13:54.589 --> 00:13:56.770\nThat's definitely not a binary number.\n\n250\n00:13:56.770 --> 00:14:00.670\nThis is a decimal representation\nof a binary number.\n\n251\n00:14:00.670 --> 00:14:03.250\nIt's represented this way\nto make it human readable,\n\n252\n00:14:03.250 --> 00:14:06.160\nsomething that we could\nmore easily interpret.\n\n253\n00:14:06.160 --> 00:14:10.942\nIf we were to write that in binary,\nit actually looks a lot different.\n\n254\n00:14:10.942 --> 00:14:16.357\n192.168.0.1, if I were to write\n\n255\n00:14:16.357 --> 00:14:23.631\nthat in binary [SOUND] let's see\nif I can do this all in my head.\n\n256\n00:14:23.631 --> 00:14:29.156\nYou know I should really use a calculator\nto make sure I get this right,\n\n257\n00:14:29.156 --> 00:14:31.881\nbut I'm pretty sure I've got it.\n\n258\n00:14:31.881 --> 00:14:38.490\nThere, so that's 192.168.0.1 written in\nbinary, looks a lot different doesn't it?\n\n259\n00:14:38.490 --> 00:14:41.240\nThat is a whole bunch of 1s and\n0s strung out.\n\n260\n00:14:41.240 --> 00:14:45.464\nThere's actually 32 of them,\n32 1s and 0s strung out in a line.\n\n261\n00:14:45.464 --> 00:14:46.422\nCan you remember that?\n\n262\n00:14:46.422 --> 00:14:48.010\nI can't.\n\n263\n00:14:48.010 --> 00:14:51.800\nThat just gets way beyond the amount of\nnumbers that I am capable of remembering.\n\n264\n00:14:51.800 --> 00:14:54.560\nIt definitely doesn't roll off the tongue,\nand with just 1s and 0s,\n\n265\n00:14:54.560 --> 00:14:57.670\nit's hard to spot patterns\nto even memorize it.\n\n266\n00:14:57.670 --> 00:14:59.720\nIt's not an easy number to work with.\n\n267\n00:14:59.720 --> 00:15:00.840\nComputers love it.\n\n268\n00:15:00.840 --> 00:15:02.200\nComputers love binary.\n\n269\n00:15:02.200 --> 00:15:03.640\nThat's what they use.\n\n270\n00:15:03.640 --> 00:15:06.390\nBut, human beings, when we grow up,\n\n271\n00:15:06.390 --> 00:15:11.140\nwe go to school as a kid and we learn\nwhat are called base 10 mathematics.\n\n272\n00:15:11.140 --> 00:15:13.920\nSo we're used to seeing 0 through 9.\n\n273\n00:15:13.920 --> 00:15:18.578\nAnd, each place of a number is\n0 through 9 so you've got 0\n\n274\n00:15:18.578 --> 00:15:24.240\nthrough 9 for single digit numbers, and\nthen we go into double digit numbers.\n\n275\n00:15:24.240 --> 00:15:30.790\nAnd with the double digit number,\nwe start with 10 and 11 and 12 and so on.\n\n276\n00:15:30.790 --> 00:15:34.440\nAnd so when we go up to the higher\nnumbers like 10 through 99,\n\n277\n00:15:34.440 --> 00:15:39.140\nwell it's still 0 through\n9 in each of those places.\n\n278\n00:15:39.140 --> 00:15:42.860\nSo this first value here when I'm\nin the 10s it starts with a 1,\n\n279\n00:15:42.860 --> 00:15:46.090\nwhen I'm in the 20x it starts with a 2,\nthe 30s it starts with a 3, and so on.\n\n280\n00:15:46.090 --> 00:15:47.660\nThat's base 10 mathematics.\n\n281\n00:15:47.660 --> 00:15:49.340\nThere's 10 values for each digit.\n\n282\n00:15:50.370 --> 00:15:53.209\nBinary is what's called\nbase 2 mathematics.\n\n283\n00:15:53.209 --> 00:15:57.875\nAnd with base 2 that means there's\nonly two values for each digit.\n\n284\n00:15:57.875 --> 00:16:01.169\nEach digit is either a 0 or\na 1 or there's nothing.\n\n285\n00:16:01.169 --> 00:16:06.260\nAll right, so writing it that\nway is counterintuitive to us.\n\n286\n00:16:06.260 --> 00:16:06.990\nSo why do it?\n\n287\n00:16:06.990 --> 00:16:09.760\nWhy not just make the computers\nuse regular decimal numbers?\n\n288\n00:16:09.760 --> 00:16:12.340\nWell, there's a problem with that.\n\n289\n00:16:12.340 --> 00:16:15.900\nThe problem is it's really hard to\nused a regular base 10 decimal number\n\n290\n00:16:15.900 --> 00:16:17.420\nacross an electrical wire.\n\n291\n00:16:17.420 --> 00:16:19.070\nThe engineering is wrong.\n\n292\n00:16:19.070 --> 00:16:21.010\nSo when they originally built computers,\nnot,\n\n293\n00:16:21.010 --> 00:16:23.930\nI'm talking about originally\nlike back in the 30s and 40s,\n\n294\n00:16:23.930 --> 00:16:27.940\nthe Charles Babbage days,\nthey were the really old days.\n\n295\n00:16:27.940 --> 00:16:32.300\nThey've gotta send these numbers across\nan electrical wire as electrical impulses.\n\n296\n00:16:32.300 --> 00:16:38.710\nAnd how do you designate a four versus\na nine with a single electrical impulse?\n\n297\n00:16:38.710 --> 00:16:41.210\nWell, back then the technology\nwasn't there to do it.\n\n298\n00:16:41.210 --> 00:16:45.510\nToday the technology is there, but it's so\nmuch more cumbersome than just doing\n\n299\n00:16:45.510 --> 00:16:49.690\nbinary that we still do binary today\nbecause it's faster and efficient.\n\n300\n00:16:49.690 --> 00:16:55.090\nWith binary, it's easy to send a zero or\na one over an electrical wire.\n\n301\n00:16:55.090 --> 00:16:58.440\nYou can send a positive electric\ncharge to represent a 1,\n\n302\n00:16:58.440 --> 00:17:01.460\nand you can send a negative\nelectric charge to represent a 0.\n\n303\n00:17:01.460 --> 00:17:05.390\nOr some systems they send a positive for\na 1, and no charge for\n\n304\n00:17:05.390 --> 00:17:07.850\na 0, it just depends on the system.\n\n305\n00:17:07.850 --> 00:17:11.460\nSo there's different ways of very easily\nrepresenting that using electricity.\n\n306\n00:17:11.460 --> 00:17:14.000\nAnd that's why computers use binary,\nbecause they can.\n\n307\n00:17:14.000 --> 00:17:16.938\nRight, because it makes sense\nfrom an engineering perspective.\n\n308\n00:17:16.938 --> 00:17:21.670\nAll right so when computers look at\nnumbers they see them as binary.\n\n309\n00:17:21.670 --> 00:17:26.390\nWe just convert them into this format so\nwe can understand them.\n\n310\n00:17:26.390 --> 00:17:30.320\nUnfortunately on the exam\nyou're going to see both.\n\n311\n00:17:30.320 --> 00:17:34.310\nOn the network plus exam they grade\nyou both on not just knowing how to\n\n312\n00:17:34.310 --> 00:17:38.970\ndeal with this as a decimal number,\nbut as a binary number also.\n\n313\n00:17:38.970 --> 00:17:42.470\nSo, if you've never done binary\nto decimal conversion or\n\n314\n00:17:42.470 --> 00:17:46.990\nvice versa, if you don't know how decimal\nnumbers work, that's an important thing.\n\n315\n00:17:46.990 --> 00:17:49.700\nWe need to make sure we understand it.\n\n316\n00:17:49.700 --> 00:17:51.290\nSo, let's start there.\n\n317\n00:17:51.290 --> 00:17:53.360\nThat's going to be the basics\nthat we're going to start with,\n\n318\n00:17:53.360 --> 00:17:57.790\nis we just figure out how this IP address\nis even built in the first place.\n\n319\n00:17:57.790 --> 00:18:00.800\nThen we're going to get more advanced\nas we start to talk about different IP\n\n320\n00:18:00.800 --> 00:18:01.730\naddress ranges and\n\n321\n00:18:01.730 --> 00:18:05.110\nvalues that make a significant\ndifference in how we handle our data.\n\n322\n00:18:05.110 --> 00:18:08.680\nAnd then we'll continue on\nfrom there building upon this.\n\n323\n00:18:08.680 --> 00:18:10.040\nBut this is kind of where we start.\n\n324\n00:18:10.040 --> 00:18:13.600\nYou got to understand basic\nbinary before we can understand\n\n325\n00:18:13.600 --> 00:18:15.500\nhow all these addresses are built.\n\n326\n00:18:15.500 --> 00:18:20.212\nAll right so\nI wrote out 192.68.0.1 in binary.\n\n327\n00:18:20.212 --> 00:18:22.570\nAll right that's what all\nthis mess is right here.\n\n328\n00:18:22.570 --> 00:18:23.690\nAnd I did it in my head.\n\n329\n00:18:23.690 --> 00:18:24.540\nNow how did I do that.\n\n330\n00:18:24.540 --> 00:18:28.330\nNow first off I'll tell\nyou I'm not a math wizard.\n\n331\n00:18:28.330 --> 00:18:30.660\nMath was not my strong subject in college.\n\n332\n00:18:30.660 --> 00:18:34.470\nYou know it's not something I do\nas a hobby or anything like that.\n\n333\n00:18:34.470 --> 00:18:37.660\nI'm more likely to grab\na calculator when I do this stuff.\n\n334\n00:18:37.660 --> 00:18:39.830\nBut on the exam you gotta be\nable to do it in your head.\n\n335\n00:18:39.830 --> 00:18:44.098\nAnd so, just like you,\nyears ago I was studying for this exam and\n\n336\n00:18:44.098 --> 00:18:46.801\nI just had to sit down and study and work.\n\n337\n00:18:46.801 --> 00:18:49.108\nAnd work, and work, and\nkeep trying over and over and\n\n338\n00:18:49.108 --> 00:18:52.446\nover until I finally got this memorized\nwhere I could actually get in there and\n\n339\n00:18:52.446 --> 00:18:54.470\nstart to work with these and\ndo them in my head.\n\n340\n00:18:54.470 --> 00:18:56.480\nNow, on the exam,\nyou don't have to do them in your head.\n\n341\n00:18:56.480 --> 00:19:00.210\nYou'll have a scratch paper, you can write\nthat down with, and do the conversions.\n\n342\n00:19:00.210 --> 00:19:01.910\nBut it works this way.\n\n343\n00:19:01.910 --> 00:19:06.880\nEach number that's separated by dots,\nis treated individually.\n\n344\n00:19:06.880 --> 00:19:08.890\nSee how I kept the dots right here?\n\n345\n00:19:08.890 --> 00:19:13.580\nSo there's one of the dots, and\nhere's the next one, and so on, okay?\n\n346\n00:19:13.580 --> 00:19:17.020\nEach one of these numbers\nis treated separately, and\n\n347\n00:19:17.020 --> 00:19:19.500\nit's represented by eight digits.\n\n348\n00:19:19.500 --> 00:19:22.520\nSo you've got eight ones and zeroes here.\n\n349\n00:19:22.520 --> 00:19:25.030\nYou've got eight ones and zeros here.\n\n350\n00:19:25.030 --> 00:19:27.320\nEight more here and eight more here.\n\n351\n00:19:27.320 --> 00:19:28.460\nAll right?\n\n352\n00:19:28.460 --> 00:19:32.249\nIf we add that up that's\na total of 32 digits.\n\n353\n00:19:32.249 --> 00:19:36.660\nAnd I mentioned earlier that\nIPV 4 uses a 32 bit address.\n\n354\n00:19:36.660 --> 00:19:37.795\nThere's our 32 bits.\n\n355\n00:19:37.795 --> 00:19:39.390\nWhat is a bit?\n\n356\n00:19:39.390 --> 00:19:41.770\nA bit is a binary bit.\n\n357\n00:19:41.770 --> 00:19:43.710\nA zero, or a one.\n\n358\n00:19:43.710 --> 00:19:47.890\nSo when we say it's a 32 bit number,\nthat just means it's 32 zeroes or ones.\n\n359\n00:19:47.890 --> 00:19:52.960\nIf it was a 64 bit number,\nit would be 64 zeroes or ones.\n\n360\n00:19:52.960 --> 00:19:57.900\nNow we take those zeroes and ones,\nand we divide them up into 8.\n\n361\n00:19:57.900 --> 00:19:59.210\nWhy eight?\n\n362\n00:19:59.210 --> 00:20:04.246\nBecause eight makes it small and\neasier for humans to handle all\n\n363\n00:20:04.246 --> 00:20:09.771\nright in eight bits you can represent\nany number from zero to 255.\n\n364\n00:20:09.771 --> 00:20:12.354\nNow that's not a very big number,\n\n365\n00:20:12.354 --> 00:20:18.350\nright zero to 255 is a total of 256\nnumbers It's not very high, right?\n\n366\n00:20:18.350 --> 00:20:22.090\nMost of us could count to 256\nin just a couple of minutes.\n\n367\n00:20:22.090 --> 00:20:23.470\nWhat about bigger numbers?\n\n368\n00:20:23.470 --> 00:20:25.840\nWell, with 8 bits you can't represent it.\n\n369\n00:20:25.840 --> 00:20:32.800\nWith all 32 bits combined,\nwell now we can write some big numbers.\n\n370\n00:20:32.800 --> 00:20:38.360\nWith all 32 bits you can actually\nwrite a number between zero and\n\n371\n00:20:38.360 --> 00:20:41.080\nsomewhere over 4.3 billion.\n\n372\n00:20:41.080 --> 00:20:44.250\nRight?\nThat's the numbering if you go from 0 all\n\n373\n00:20:44.250 --> 00:20:47.350\nthe way up to the full 32 bits,\nit ends up being around 4.3 billion.\n\n374\n00:20:47.350 --> 00:20:50.040\nSo, now we've got some nice big numbers.\n\n375\n00:20:50.040 --> 00:20:51.340\nSo with IP addressing,\n\n376\n00:20:51.340 --> 00:20:56.500\nwe have this 32 bit number which gives\nus over 4 billion possible values.\n\n377\n00:20:56.500 --> 00:20:57.910\nThat's a lot, right?\n\n378\n00:20:57.910 --> 00:21:00.600\nNow we've got a number we can work\nwith as far as assigning it to\n\n379\n00:21:00.600 --> 00:21:01.790\ncomputers and so on.\n\n380\n00:21:01.790 --> 00:21:05.170\nBut it's such a big number that it's\nreally a mess to work with and so\n\n381\n00:21:05.170 --> 00:21:07.570\nthese dots are put in to help us.\n\n382\n00:21:07.570 --> 00:21:10.080\nIn fact the computer\ndoesn't even do the dots.\n\n383\n00:21:10.080 --> 00:21:12.670\nWhen the computer sees it,\nit takes those out.\n\n384\n00:21:12.670 --> 00:21:14.870\nIt just says all right\ngive me the 32 bit number.\n\n385\n00:21:14.870 --> 00:21:16.820\nAnd runs with it because\ncomputers can do that.\n\n386\n00:21:16.820 --> 00:21:18.030\nThey're machines.\n\n387\n00:21:18.030 --> 00:21:21.390\nSo that's basically what\nthey get right there.\n\n388\n00:21:21.390 --> 00:21:23.010\nBut it we want to deal with it.\n\n389\n00:21:23.010 --> 00:21:24.190\nWe need to make it easier.\n\n390\n00:21:24.190 --> 00:21:26.760\nWe need to make it something like this.\n\n391\n00:21:26.760 --> 00:21:31.970\nSo what we do is we convert each\nof these numbers into binary.\n\n392\n00:21:31.970 --> 00:21:32.930\nSo let's take a simple number.\n\n393\n00:21:32.930 --> 00:21:35.279\nLet's take 192.\n\n394\n00:21:35.279 --> 00:21:39.900\nI wanna take 192, and\nI wanna convert it to binary.\n\n395\n00:21:41.370 --> 00:21:44.960\nWell, I mentioned that\nthere's eight digits.\n\n396\n00:21:44.960 --> 00:21:49.140\nEach binary digit\nrepresents a certain value.\n\n397\n00:21:49.140 --> 00:21:54.520\nSo if I said 11000000, right?\n\n398\n00:21:54.520 --> 00:21:57.620\nRight, that was what I said 192 was,\nall right.\n\n399\n00:21:57.620 --> 00:22:01.620\nAnd if I represented each one of\nthese digits with just a number,\n\n400\n00:22:01.620 --> 00:22:03.400\nI'm gonna identify them,\nright, so there's eight bits.\n\n401\n00:22:03.400 --> 00:22:05.940\nI'll do one, two, three, four,\nfive, six, seven, eight, right,\n\n402\n00:22:05.940 --> 00:22:06.820\nthere's my eight bits.\n\n403\n00:22:07.920 --> 00:22:12.160\nNow bit number one has a certain value,\nand\n\n404\n00:22:12.160 --> 00:22:17.900\nwhen I put a one here, I'm saying,\nwe get that value, we get that amount.\n\n405\n00:22:17.900 --> 00:22:21.670\nSame thing with number two, but for all of\nthese other guys, for three, four, five,\n\n406\n00:22:21.670 --> 00:22:23.575\nsix, seven, eight,\nthese guys are all zero.\n\n407\n00:22:23.575 --> 00:22:26.155\nAnd since they're zeros\nwe don't get that value.\n\n408\n00:22:26.155 --> 00:22:29.545\nSo think of these as like points, right?\n\n409\n00:22:29.545 --> 00:22:33.395\nThe teacher of mine that I had a long time\nago, said to think of them as buckets.\n\n410\n00:22:33.395 --> 00:22:36.857\nIf you've every gone to a carnival, they\nusually have a game where you can toss\n\n411\n00:22:36.857 --> 00:22:40.217\na ball and if it can land in a bucket,\nyou get a certain amount of points.\n\n412\n00:22:40.217 --> 00:22:41.347\nOr I always think of skee ball.\n\n413\n00:22:41.347 --> 00:22:45.747\nIf you go to an arcade, where you have the\nwooden balls and you roll them up and they\n\n414\n00:22:45.747 --> 00:22:49.067\ngo into all those circles, and each of\nthose circles is worth different points.\n\n415\n00:22:49.067 --> 00:22:52.807\nThat's how this is, each of these\ndigits are worth different points.\n\n416\n00:22:52.807 --> 00:22:53.387\nAll right?\n\n417\n00:22:53.387 --> 00:22:56.207\nThat very first one is worth 128 points.\n\n418\n00:22:57.750 --> 00:23:00.140\nThat second one is worth 64 points.\n\n419\n00:23:01.330 --> 00:23:04.660\nThe third one is worth 32 points.\n\n420\n00:23:04.660 --> 00:23:07.250\nThe fourth one is worth 16 points.\n\n421\n00:23:07.250 --> 00:23:07.750\nWhoops.\n\n422\n00:23:09.020 --> 00:23:11.260\nThe fifth one is worth 8 points.\n\n423\n00:23:11.260 --> 00:23:16.060\nLet's move that up a bit.\n\n424\n00:23:16.060 --> 00:23:18.500\nThe, 6th one is worth 4 points.\n\n425\n00:23:20.630 --> 00:23:24.220\nAnd the seventh one is worth two points.\n\n426\n00:23:24.220 --> 00:23:27.069\nAnd the last one is worth one point.\n\n427\n00:23:27.069 --> 00:23:27.695\nOkay.\n\n428\n00:23:27.695 --> 00:23:32.350\n[LAUGH] This little auto text\nexpander is gonna drive me nuts.\n\n429\n00:23:32.350 --> 00:23:37.960\nI'll have to figure out how to\nturn that off during the break.\n\n430\n00:23:39.120 --> 00:23:39.840\nOkay.\n\n431\n00:23:39.840 --> 00:23:41.890\nSo when we put these numbers in here,\n\n432\n00:23:41.890 --> 00:23:47.510\nwhen I say a one in this first placeholder\nthat means that I get 128 points.\n\n433\n00:23:47.510 --> 00:23:51.820\nAnd when I put a one in the second\none that means I get 64 points.\n\n434\n00:23:51.820 --> 00:23:55.563\nAnd when I put zeros in all of these\nothers that means I don't get 32, I don't\n\n435\n00:23:55.563 --> 00:23:59.680\nget 16, I don't get eight, I don't get\nfour, I don't get two, I don't get one.\n\n436\n00:23:59.680 --> 00:24:02.458\nAnd so what I'm left with is.\n\n437\n00:24:02.458 --> 00:24:07.224\nAt the end of the day 128+64.\n\n438\n00:24:07.224 --> 00:24:15.043\nAnd if we work that out\n128+64 = 192 right.\n\n439\n00:24:15.043 --> 00:24:18.728\nThat's how we get to 192 and\nthat's what I did in my head.\n\n440\n00:24:18.728 --> 00:24:21.482\nI said all right I need 192.\n\n441\n00:24:21.482 --> 00:24:25.698\nWell 192 is bigger than 128, so\n\n442\n00:24:25.698 --> 00:24:31.901\nI know I'm gonna need that so\nI did 192 minus 128.\n\n443\n00:24:31.901 --> 00:24:32.830\nWhat did that leave me?\n\n444\n00:24:32.830 --> 00:24:39.630\nIt left me 64 and then 64, well that's\nexactly this one so I know I need that.\n\n445\n00:24:39.630 --> 00:24:42.340\nTake away 64 and you end up with zero.\n\n446\n00:24:42.340 --> 00:24:47.570\nSo in my mind, I did 192- 128, which\n\n447\n00:24:49.060 --> 00:24:55.170\nequaled 64, and then I did 64- 64,\nwhich equals 0.\n\n448\n00:24:55.170 --> 00:25:00.749\nAnd I knew that I now had the full number,\nthat everything else was going to be zero,\n\n449\n00:25:00.749 --> 00:25:05.470\nand that's how I converted\nthat into 11000000, all right.\n\n450\n00:25:05.470 --> 00:25:09.610\nNow that one was kind of easy,\ncuz the numbers worked out really well.\n\n451\n00:25:09.610 --> 00:25:11.730\nBut other numbers are a little harder.\n\n452\n00:25:11.730 --> 00:25:18.000\nIf we take a number like 168 for\nexample, 168 is definitely harder.\n\n453\n00:25:18.000 --> 00:25:22.070\nIt's a stranger number because these\nthings don't quite add up right, and\n\n454\n00:25:22.070 --> 00:25:24.870\nso we have to skip some of the values.\n\n455\n00:25:24.870 --> 00:25:30.370\nIf we take 168 it is bigger than 128, so\nI can recognize that, I can take away 168,\n\n456\n00:25:30.370 --> 00:25:36.520\nI mean 128 and if I do the math on that,\nthat leaves me with 40.\n\n457\n00:25:36.520 --> 00:25:40.270\nOkay, well 40 is bigger than 6.\n\n458\n00:25:40.270 --> 00:25:43.760\nI mean, my math skills are breaking down.\n\n459\n00:25:43.760 --> 00:25:47.029\n40 is smaller than 64.\n\n460\n00:25:47.029 --> 00:25:51.190\nSo if I do 40 minus 64 I'll\nend up with a negative number.\n\n461\n00:25:51.190 --> 00:25:52.810\nSo that would be bad right?\n\n462\n00:25:52.810 --> 00:25:54.160\nSo I don't want that.\n\n463\n00:25:54.160 --> 00:25:59.312\nSo, I need to skip over 64 and\nremember what I wrote up there for\n\n464\n00:25:59.312 --> 00:26:07.710\n168, I did 101 see,\nI skipped over that second place.\n\n465\n00:26:07.710 --> 00:26:10.225\nThat was me skipping 64.\n\n466\n00:26:12.120 --> 00:26:13.090\nAll right.\n\n467\n00:26:13.090 --> 00:26:15.420\nSo, I skipped 64 and the next one is 32.\n\n468\n00:26:15.420 --> 00:26:16.690\nWell, I do need that, right?\n\n469\n00:26:16.690 --> 00:26:20.870\nSo 40 minus 32, and that leaves 8.\n\n470\n00:26:20.870 --> 00:26:23.620\nWell 8 is smaller than 16,\n\n471\n00:26:23.620 --> 00:26:28.800\nso I'll skip that one, and then I get 8,\nand it's exactly 8, right?\n\n472\n00:26:28.800 --> 00:26:29.500\nThat's what I want.\n\n473\n00:26:29.500 --> 00:26:34.140\nAnd that's going to result in 0, so\nI know all of the other ones are zeros.\n\n474\n00:26:34.140 --> 00:26:37.848\nSo, I needed 128, so\n\n475\n00:26:37.848 --> 00:26:41.920\nthat one is going to be a 1.\n\n476\n00:26:41.920 --> 00:26:44.520\nI needed 32, that one is going\nto be a 1 and I needed eight.\n\n477\n00:26:44.520 --> 00:26:46.150\nThat one is going to be a one.\n\n478\n00:26:46.150 --> 00:26:53.490\nAnd so I was one zero one zero\none zero zero zero, right?\n\n479\n00:26:53.490 --> 00:26:55.375\nThat's how I was able to do that.\n\n480\n00:26:55.375 --> 00:26:58.863\nNow if you're just learning this for\nthe first time,\n\n481\n00:26:58.863 --> 00:27:01.818\nthat's a strange concept to learn, right?\n\n482\n00:27:01.818 --> 00:27:03.199\nThat you've got these placeholders, and\n\n483\n00:27:03.199 --> 00:27:04.705\neach one's worth a certain\namount of points.\n\n484\n00:27:04.705 --> 00:27:07.895\nAnd being able to do that\nconversion is a little tricky.\n\n485\n00:27:07.895 --> 00:27:09.735\nThe reverse process is the same way.\n\n486\n00:27:09.735 --> 00:27:12.085\nYou just look wherever there's a one,\nand that's a placeholder you get.\n\n487\n00:27:12.085 --> 00:27:15.240\nAnd you add those together\nto create the final number.\n\n488\n00:27:15.240 --> 00:27:20.220\nSo the process becomes easier the more\nyou do it, the more you practice.\n\n489\n00:27:20.220 --> 00:27:24.910\nSo what I recommend you do is just,\nin your head, pick a number.\n\n490\n00:27:24.910 --> 00:27:29.339\nPick a number between zero and 255.\n\n491\n00:27:29.339 --> 00:27:30.512\nDon't pick 256 or higher,\n\n492\n00:27:30.512 --> 00:27:33.860\nbecause you won't be able to do it with\njust eight digits, it's not enough.\n\n493\n00:27:33.860 --> 00:27:38.050\nSo, you've gotta pick zero through 255.\n\n494\n00:27:38.050 --> 00:27:39.720\nJust pick a number at random.\n\n495\n00:27:39.720 --> 00:27:41.629\n173 all right?\n\n496\n00:27:41.629 --> 00:27:44.912\nAnd then convert it, take 173 and\ngo through the list,\n\n497\n00:27:44.912 --> 00:27:46.530\npick a low number pick 11.\n\n498\n00:27:46.530 --> 00:27:51.150\nGo down the list with number 11 and\nfigure out the placeholders you need and\n\n499\n00:27:51.150 --> 00:27:53.710\nconvert that into a binary number.\n\n500\n00:27:53.710 --> 00:27:55.910\nYou really need to get\ncomfortable with that.\n\n501\n00:27:55.910 --> 00:28:00.550\nYou don't want to struggle with converting\na binary number because it's simple math.\n\n502\n00:28:00.550 --> 00:28:02.600\nThere's a right answer and\na wrong answer and that's it.\n\n503\n00:28:02.600 --> 00:28:03.820\nThere's no in between.\n\n504\n00:28:03.820 --> 00:28:07.060\nSo these should be some of\nthe easier questions on the exam for\n\n505\n00:28:07.060 --> 00:28:10.560\nyou because they're so black and\nwhite, they're so cut and dry.\n\n506\n00:28:10.560 --> 00:28:11.160\nAll right.\n\n507\n00:28:11.160 --> 00:28:13.180\nBut practice makes perfect.\n\n508\n00:28:13.180 --> 00:28:16.690\nIf you've ever seen me\nin the testing booth.\n\n509\n00:28:16.690 --> 00:28:19.748\nI know most of you haven't, but\nif one day, our paths collide and\n\n510\n00:28:19.748 --> 00:28:23.270\nyou just happen to see me sitting\nthere in the testing both.\n\n511\n00:28:23.270 --> 00:28:28.198\nIf you look at my scratch paper that\nI have sitting there on my desk,\n\n512\n00:28:28.198 --> 00:28:33.214\nyou'll see that I almost always\nacross the top of my scratch paper,\n\n513\n00:28:33.214 --> 00:28:38.597\nI almost always write 128,\n64, 32, 16, 8, 4, 2 and 1.\n\n514\n00:28:38.597 --> 00:28:40.930\nI write it right across\nthe top of that paper.\n\n515\n00:28:40.930 --> 00:28:44.080\nSo that when I'm on the exam whenever\nI get to a question that deals with\n\n516\n00:28:44.080 --> 00:28:49.020\nsubnetting, I can look at that to help me\ndo the conversions a little more easily.\n\n517\n00:28:49.020 --> 00:28:52.190\nIt's something I've done for\na long time, I still do it today.\n\n518\n00:28:53.400 --> 00:28:56.500\nThat being said, I think its not allowed\nto look at other people's scratch paper,\n\n519\n00:28:56.500 --> 00:28:59.500\nbut if we were, that's what would happen.\n\n520\n00:28:59.500 --> 00:29:02.570\nSo pretty straight forward there\nas far as how that all works out.\n\n521\n00:29:04.300 --> 00:29:07.282\nNow converting numbers to\nbinary in real life land,\n\n522\n00:29:07.282 --> 00:29:11.010\nthere are calculators that can do\nit right within your computer,\n\n523\n00:29:11.010 --> 00:29:15.858\nthe built in windows calculator the Mac OS\ncalculator, almost all of them can do it.\n\n524\n00:29:15.858 --> 00:29:20.760\nThere are special IP subnet\ncalculators that can do it.\n\n525\n00:29:20.760 --> 00:29:23.590\nSo in real life land,\nyou normally won't do this by hand.\n\n526\n00:29:23.590 --> 00:29:24.580\nSo why are we doing it here?\n\n527\n00:29:24.580 --> 00:29:27.250\nWell, if you do it by hand,\n\n528\n00:29:27.250 --> 00:29:31.600\nit will help you to truly understand\nwhat's going on in the background.\n\n529\n00:29:31.600 --> 00:29:35.620\nSo don't rely on those calculators,\nespecially not now before the exam, right?\n\n530\n00:29:35.620 --> 00:29:37.130\nAfter the exam do whatever you want.\n\n531\n00:29:37.130 --> 00:29:40.780\nBut before the exam learning to do\nthis by hand will ensure that you've\n\n532\n00:29:40.780 --> 00:29:43.770\nreally got an understanding\nof the fundamental concepts.\n\n533\n00:29:43.770 --> 00:29:45.900\nWhat's going on behind the scenes.\n\n534\n00:29:45.900 --> 00:29:48.380\nAnd understanding that foundation\nis what's gonna lead to\n\n535\n00:29:48.380 --> 00:29:50.460\nbetter understanding of\nwhat builds on top of it.\n\n536\n00:29:50.460 --> 00:29:52.890\nSo it's real important to learn\nhow to do this on your own.\n\n537\n00:29:54.682 --> 00:29:58.770\nAll right, so, we've had out first brush\nwith binary numbers right here, and\n\n538\n00:29:58.770 --> 00:30:02.780\nwe're going to see more of\nthat as we continue on.\n\n539\n00:30:02.780 --> 00:30:05.380\nLet's stop and take a break, though,\nI need to figure to turn this\n\n540\n00:30:05.380 --> 00:30:08.370\ntext expander off,\nbecause it's going to drive me crazy.\n\n541\n00:30:08.370 --> 00:30:10.120\nSo, I'll turn that off during the break.\n\n542\n00:30:10.120 --> 00:30:12.770\nWhen we get back, we're going to work\nwith binary numbers a little more, and\n\n543\n00:30:12.770 --> 00:30:16.270\nthen we're going to start taking a look\nat the IP addresses themselves and\n\n544\n00:30:16.270 --> 00:30:17.440\nhow they function.\n\n545\n00:30:17.440 --> 00:30:18.110\nAll right.\n\n546\n00:30:18.110 --> 00:30:19.570\nSo stay tuned.\n\n547\n00:30:19.570 --> 00:30:21.528\nWe'll be back after this.\n\n548\n00:30:21.528 --> 00:30:24.522\n[MUSIC]\n\n549\n00:30:24.522 --> 00:30:29.909\n[SOUND] All right.\n\n550\n00:30:29.909 --> 00:30:31.290\nWelcome back everybody.\n\n551\n00:30:31.290 --> 00:30:35.740\nSo, in our first segment we got our\nfirst chance to take a look at binary.\n\n552\n00:30:35.740 --> 00:30:36.610\nNow.\n\n553\n00:30:36.610 --> 00:30:39.760\nI brought up binary because it's\nimportant to understand that to\n\n554\n00:30:39.760 --> 00:30:42.740\nfigure out the rest of\nhow an IP address works.\n\n555\n00:30:42.740 --> 00:30:48.610\nWhen you get an IP address it's\nnormally combined with a second number.\n\n556\n00:30:48.610 --> 00:30:51.760\nAnd that second number is the subnet mask.\n\n557\n00:30:51.760 --> 00:30:54.760\nAnd the subnet mask is what's\ngonna tell us what part of the IP\n\n558\n00:30:54.760 --> 00:30:59.670\naddresses the network ID and\nwhat part of the address is the host ID?\n\n559\n00:30:59.670 --> 00:31:03.300\nWhich part represents our network as\na whole and all the computers on it and\n\n560\n00:31:03.300 --> 00:31:06.800\nwhich part represents just our computer?\n\n561\n00:31:06.800 --> 00:31:10.580\nAnd the way it looks, doesn't make\na whole heck of a lot of sense.\n\n562\n00:31:10.580 --> 00:31:11.970\nLet me show you what I mean.\n\n563\n00:31:11.970 --> 00:31:16.760\nI'm gonna make up an IP address\nright off the top of my head.\n\n564\n00:31:16.760 --> 00:31:21.370\nAnd you know we'll try to think\nof something not too repetitive.\n\n565\n00:31:21.370 --> 00:31:24.660\nThere we go.\nAll right so if I give you an IP address\n\n566\n00:31:24.660 --> 00:31:29.110\nand I say it's 172.143.8.16, all right.\n\n567\n00:31:29.110 --> 00:31:31.310\nWhat part of that represents the network.\n\n568\n00:31:31.310 --> 00:31:33.780\nAnd what part represents the host.\n\n569\n00:31:33.780 --> 00:31:34.560\nI don't know.\n\n570\n00:31:34.560 --> 00:31:35.300\nAll right.\n\n571\n00:31:35.300 --> 00:31:39.300\nTechnically this is not enough information\nfor me to be able to figure that out.\n\n572\n00:31:39.300 --> 00:31:39.800\nRight.\n\n573\n00:31:39.800 --> 00:31:44.480\nSo what we have to do is\nget an extra bit of data.\n\n574\n00:31:44.480 --> 00:31:45.709\nThe subnet mask.\n\n575\n00:31:45.709 --> 00:31:54.194\nAnd the three most common subnet masks\nthat you're going to see are 255.0.0.0,\n\n576\n00:31:54.194 --> 00:32:00.458\nor 255.255.0.0, or 255.255.255.0.\n\n577\n00:32:00.458 --> 00:32:05.043\nThose are the three most common\nsubnet masks that you'll see.\n\n578\n00:32:05.043 --> 00:32:06.100\nWhat the heck are those, right?\n\n579\n00:32:06.100 --> 00:32:07.930\nWhat's with all this 255 stuff, all right?\n\n580\n00:32:09.350 --> 00:32:13.340\nWell subnet masks don't make a whole\nheck of a lot of sense when they're\n\n581\n00:32:13.340 --> 00:32:15.440\nwritten in decimal like this.\n\n582\n00:32:15.440 --> 00:32:19.510\nBut when they're written in binary,\nwhat you're going to see are ones and\n\n583\n00:32:19.510 --> 00:32:21.170\nzeros arranged in a certain way.\n\n584\n00:32:22.450 --> 00:32:27.350\nAnd where the ones end,\nthat's where our network ID ends.\n\n585\n00:32:27.350 --> 00:32:32.620\nAnd where the zeros start,\nthat's where our host ID starts.\n\n586\n00:32:32.620 --> 00:32:36.730\nSo the subnet mask is gonna\nshow us where that division is.\n\n587\n00:32:36.730 --> 00:32:38.960\nThe problem is it's\nreally hard to read it,\n\n588\n00:32:38.960 --> 00:32:41.740\nbecause it's normally written in\ndecimal like we're seeing here.\n\n589\n00:32:41.740 --> 00:32:47.230\nSo these three are the easiest ones to\nrecognize and make them human readable.\n\n590\n00:32:47.230 --> 00:32:51.481\nAnd what these are doing is they're\nusing that value of 255, okay?\n\n591\n00:32:51.481 --> 00:32:56.670\n255, if we were to convert that to binary,\nwell let's do it, right?\n\n592\n00:32:56.670 --> 00:32:59.650\nWe need some practice seeing\nthe kind of conversions.\n\n593\n00:32:59.650 --> 00:33:02.990\nSo let's go through\nconverting 255 into binary\n\n594\n00:33:02.990 --> 00:33:07.960\nIf we wanna convert 255 into binary,\nwe say, well, I've got my placeholders.\n\n595\n00:33:07.960 --> 00:33:11.380\nSo my suggestion in the earlier segment\nwas, when you sit down to take the exam,\n\n596\n00:33:11.380 --> 00:33:13.490\nwrite them on top of your scratch paper.\n\n597\n00:33:13.490 --> 00:33:14.570\nSo I always remember 128,\n\n598\n00:33:14.570 --> 00:33:19.940\nor you could start with 1 if you wanted to\ngo backwards, but I always remember 128.\n\n599\n00:33:19.940 --> 00:33:22.000\nThat's the only number you\nreally need to remember.\n\n600\n00:33:22.000 --> 00:33:25.610\nBecause from there each one\nis simply divided by two.\n\n601\n00:33:25.610 --> 00:33:28.541\nSo the first placeholder is 128.\n\n602\n00:33:28.541 --> 00:33:31.919\nAnd then I divide that by two and it's 64.\n\n603\n00:33:31.919 --> 00:33:34.140\nAnd then I divide that by two and it's 32.\n\n604\n00:33:34.140 --> 00:33:37.830\nAnd then I divide that by two and it's 16.\n\n605\n00:33:37.830 --> 00:33:39.720\nDivide that by two and it's 8.\n\n606\n00:33:39.720 --> 00:33:44.750\nDivide that by two and it's 4.\n\n607\n00:33:44.750 --> 00:33:46.699\nDivide that by two, and it's two.\n\n608\n00:33:46.699 --> 00:33:49.630\nAnd then divide that by two,\nand it is one.\n\n609\n00:33:49.630 --> 00:33:51.720\nThere's my eight placeholders.\n\n610\n00:33:51.720 --> 00:33:53.140\nSo you don't really have to sit down and\n\n611\n00:33:53.140 --> 00:33:57.550\nmemorize the whole list, you can just\nremember 128, and divide it by 2.\n\n612\n00:33:57.550 --> 00:34:00.900\nOr you can just remember one and\nmultiply it by two.\n\n613\n00:34:00.900 --> 00:34:03.980\n1 times 2 is 2, 2 times 2 is 4,\nall the way up to 128, and\n\n614\n00:34:03.980 --> 00:34:06.270\nthen just stop at 8 digits.\n\n615\n00:34:06.270 --> 00:34:09.590\nRight so now I want to convert 255.\n\n616\n00:34:09.590 --> 00:34:14.675\nSo 255 equals something, right?\n\n617\n00:34:14.675 --> 00:34:16.070\nI don't know what.\n\n618\n00:34:16.070 --> 00:34:19.870\nSo I need to go down this list and\nfigure it out.\n\n619\n00:34:19.870 --> 00:34:21.830\nAll right so, I'm gonna say 128.\n\n620\n00:34:21.830 --> 00:34:26.220\n255 is bigger than 128 so I need that.\n\n621\n00:34:26.220 --> 00:34:28.380\nIf I need a value, I put a one there.\n\n622\n00:34:28.380 --> 00:34:31.310\nIf I don't need a value\nI put a zero there.\n\n623\n00:34:31.310 --> 00:34:35.350\nSo if we were smaller than 128 I'd put\na zero there and I wouldn't need it.\n\n624\n00:34:35.350 --> 00:34:38.000\nI'll just stick a one, all right.\n\n625\n00:34:38.000 --> 00:34:46.550\nThen I come down here and I say 255\nminus 128 equals, something right?\n\n626\n00:34:46.550 --> 00:34:49.080\nSo I gotta kinda work that out and\n\n627\n00:34:49.080 --> 00:34:51.430\nyou wanna try to be able to do\nthis in your head for the exam.\n\n628\n00:34:51.430 --> 00:34:53.780\nFortunately the numbers are pretty small.\n\n629\n00:34:53.780 --> 00:34:55.360\nIn real life you could fire\nup your calculator, but\n\n630\n00:34:55.360 --> 00:34:56.270\nit's gonna equal 127, all right.\n\n631\n00:34:57.930 --> 00:35:03.280\nSo I got 127 left, and\n127 is bigger than 64.\n\n632\n00:35:03.280 --> 00:35:05.850\nSo I'm gonna need that one.\n\n633\n00:35:05.850 --> 00:35:10.000\nAnd so I subtract out 64,\nand I'm gonna have 63 left.\n\n634\n00:35:11.550 --> 00:35:12.820\nAll right.\n\n635\n00:35:12.820 --> 00:35:13.860\nSo then I take 63.\n\n636\n00:35:13.860 --> 00:35:14.970\nThat's bigger than 32.\n\n637\n00:35:14.970 --> 00:35:18.550\nSo I'll take that value,\nand I'll subtract out 32.\n\n638\n00:35:18.550 --> 00:35:21.890\nAnd that's gonna leave me with 31.\n\n639\n00:35:21.890 --> 00:35:22.480\nAll right.\n\n640\n00:35:22.480 --> 00:35:24.180\n31 is bigger than 16,\nso I'll need that one.\n\n641\n00:35:24.180 --> 00:35:27.380\n31 minus 16,\n\n642\n00:35:27.380 --> 00:35:32.300\nwhich is going to leave me with 15.\n\n643\n00:35:32.300 --> 00:35:34.140\nAll right?\n\n644\n00:35:34.140 --> 00:35:36.325\n15 is bigger than 8.\n\n645\n00:35:36.325 --> 00:35:38.920\nI know this is getting repetitive,\nbut it's good to see this, right?\n\n646\n00:35:38.920 --> 00:35:40.130\nThis is how you remember things.\n\n647\n00:35:40.130 --> 00:35:42.540\nRepetition leads to retention.\n\n648\n00:35:42.540 --> 00:35:47.440\nSo, 15 minus 8 is 7.\n\n649\n00:35:47.440 --> 00:35:51.710\nSeven is bigger than 4 so we'll take that\nvalue too and we'll subtract that 4.\n\n650\n00:35:51.710 --> 00:35:53.120\nRight?\nWe're getting pretty far down\n\n651\n00:35:53.120 --> 00:35:54.550\nthe line here.\n\n652\n00:35:54.550 --> 00:35:56.290\nSeven minus 4 is going to give us 3.\n\n653\n00:35:56.290 --> 00:35:59.790\nThree is bigger than 2 so\nwe'll need that value.\n\n654\n00:35:59.790 --> 00:36:04.640\nThree minus two is one and\none is equal to one so\n\n655\n00:36:04.640 --> 00:36:11.160\nwe need that one to finish off our number\nso one minus one equals zero right?\n\n656\n00:36:11.160 --> 00:36:15.010\nThat got us all the way to zero and once\nyou're at zero you've got your number.\n\n657\n00:36:15.010 --> 00:36:22.957\nAnd if I look over here.- I can see\nthat 255 written in binary is 11111111.\n\n658\n00:36:22.957 --> 00:36:27.769\nAll 8 digits of this\nparticular value are ones.\n\n659\n00:36:27.769 --> 00:36:28.720\nRight?\n\n660\n00:36:28.720 --> 00:36:32.720\nWhen we right an IP address we are writing\nit up into those four values and\n\n661\n00:36:32.720 --> 00:36:34.630\neach one is eight bits.\n\n662\n00:36:34.630 --> 00:36:37.490\nSo they have a nickname for\nthat since its eight bits.\n\n663\n00:36:37.490 --> 00:36:38.710\nThey call it an octet.\n\n664\n00:36:38.710 --> 00:36:41.040\nRight?\nIt's kind of like an octopus, right,\n\n665\n00:36:41.040 --> 00:36:45.740\nan octopus has eight arms, an octet has\neight bits and so they call it an octet.\n\n666\n00:36:45.740 --> 00:36:50.370\nSo for this octet, all the bits are ones.\n\n667\n00:36:50.370 --> 00:36:55.820\nSo when I give you\na number like 255.0.0.0.\n\n668\n00:36:55.820 --> 00:36:58.260\nI don't have to go and\ndo all this crazy binary conversion.\n\n669\n00:36:58.260 --> 00:37:04.820\nI know what that is in binary because I\nknow that 2,5,5 is effectively all ones.\n\n670\n00:37:04.820 --> 00:37:08.470\nSo this would be eight ones,\n\n671\n00:37:08.470 --> 00:37:12.555\nfollowed by eight zeros,\nWhich is harder to type than you'd think.\n\n672\n00:37:12.555 --> 00:37:15.900\n[LAUGH] Or I'm less talented than I think.\n\n673\n00:37:15.900 --> 00:37:17.990\nMaybe that's closer to the truth there.\n\n674\n00:37:17.990 --> 00:37:20.880\nBut we'll go through and\ndesignate each one of these.\n\n675\n00:37:20.880 --> 00:37:24.820\nSo 255.255.\n\n676\n00:37:24.820 --> 00:37:25.700\nSo as I write these out,\nI don't have to do this.\n\n677\n00:37:25.700 --> 00:37:29.450\nI don't have to go and draw out\nthe placeholders and all that stuff.\n\n678\n00:37:29.450 --> 00:37:30.510\nThese are really easy.\n\n679\n00:37:30.510 --> 00:37:34.220\n255 should be one of the ones that\nyou have committed to memory.\n\n680\n00:37:34.220 --> 00:37:42.019\nA 255 is eight 1s, and then a 0 is\nsimply eight 0s, and there's my 32 bits.\n\n681\n00:37:42.019 --> 00:37:46.560\nIf I were to add up all those 1s and 0s,\nthere's actually 32 digits, right here,\n\n682\n00:37:46.560 --> 00:37:49.480\nnot counting the periods,\nthe periods don't count.\n\n683\n00:37:50.680 --> 00:37:52.980\nBut there's those three subnets, and\n\n684\n00:37:52.980 --> 00:37:57.730\nwhat we can see is that the ones\nare always on the left.\n\n685\n00:37:57.730 --> 00:38:00.500\nSee how the ones are always\nover on the left, and\n\n686\n00:38:00.500 --> 00:38:02.850\nthe zeros are always on the right.\n\n687\n00:38:02.850 --> 00:38:06.860\nIn a subnet mask, the ones and\nzeroes never mix.\n\n688\n00:38:06.860 --> 00:38:08.310\nThey don't mix together.\n\n689\n00:38:08.310 --> 00:38:13.210\nBecause it's showing us\nthe particular point at which\n\n690\n00:38:13.210 --> 00:38:18.430\nthe network ID stops,\nand the host ID starts.\n\n691\n00:38:18.430 --> 00:38:21.110\nSo when you give me an address,\nlike this, 172.143.8.16,\n\n692\n00:38:21.110 --> 00:38:26.380\nthese ones show me where that stops.\n\n693\n00:38:27.720 --> 00:38:30.130\nIf I gave you this subnet mask right here,\n255.0.0.0,\n\n694\n00:38:30.130 --> 00:38:33.910\nthat means the 172 is the network and\n143.8.16 is the host,\n\n695\n00:38:33.910 --> 00:38:37.850\nit's the computer.\n\n696\n00:38:42.120 --> 00:38:42.670\nAll right.\n\n697\n00:38:42.670 --> 00:38:46.300\nSo that's where I'm getting that\nstreet and building number.\n\n698\n00:38:46.300 --> 00:38:48.316\nRight?\n172 is the street and\n\n699\n00:38:48.316 --> 00:38:51.357\nthere's a lot of people on that street.\n\n700\n00:38:51.357 --> 00:38:56.660\nAnd then 143.8.16,\nthat's my computer and that's just me.\n\n701\n00:38:56.660 --> 00:38:57.610\nAll right?\n\n702\n00:38:57.610 --> 00:39:00.030\nNow, why do we need to know all this?\n\n703\n00:39:00.030 --> 00:39:05.150\nWell, if I have two computers\nthat are on the same network,\n\n704\n00:39:05.150 --> 00:39:08.900\nif I have two computers in this scenario,\nwould this be my subnet?\n\n705\n00:39:08.900 --> 00:39:13.180\nIf I have two computers who's IP addresses\nstart with 172 that means they're on\n\n706\n00:39:13.180 --> 00:39:19.180\nthe same network and they can talk\nto each other directly, all right.\n\n707\n00:39:19.180 --> 00:39:22.730\nBut if they were on different networks.\n\n708\n00:39:22.730 --> 00:39:28.220\nIf one of them was on 172 and another\none was on 173, two different networks.\n\n709\n00:39:28.220 --> 00:39:30.700\nThen they can't talk to\neach other directly.\n\n710\n00:39:30.700 --> 00:39:33.730\nInstead, they have to go through a router.\n\n711\n00:39:33.730 --> 00:39:36.490\nA router will help you\nget to other networks,\n\n712\n00:39:36.490 --> 00:39:38.290\nnetworks that you're not connected to.\n\n713\n00:39:38.290 --> 00:39:39.570\nThink about it as if you were at home.\n\n714\n00:39:39.570 --> 00:39:42.040\nYou know,\nif you're at home watching the show,\n\n715\n00:39:42.040 --> 00:39:47.280\nyou've probably got a cable\nhigh-speed Internet or DSL broadband.\n\n716\n00:39:47.280 --> 00:39:49.730\nYou might have satellite Internet or,\nwho knows,\n\n717\n00:39:49.730 --> 00:39:52.980\nmaybe you got fiber optic Metro-E\nrun into your house, or whatever.\n\n718\n00:39:52.980 --> 00:39:56.600\nWell you have a network\ninside of your house.\n\n719\n00:39:56.600 --> 00:39:59.983\nAnd the computers in your house can\ntalk to each other without going to\n\n720\n00:39:59.983 --> 00:40:00.751\nthe Internet.\n\n721\n00:40:00.751 --> 00:40:03.618\nBut when they want to talk to the\nInternet, they know to go to the router,\n\n722\n00:40:03.618 --> 00:40:06.210\nto go out and connect to the bigger\nnetwork out there in the world.\n\n723\n00:40:06.210 --> 00:40:08.730\nAnd they're doing that\nthanks to your subnet mask.\n\n724\n00:40:08.730 --> 00:40:12.736\nYour subnet mask is helping them\nknow when somebody is local and\n\n725\n00:40:12.736 --> 00:40:14.410\nwhen somebody is remote.\n\n726\n00:40:14.410 --> 00:40:18.020\nThat's an important part of an IP address.\n\n727\n00:40:18.020 --> 00:40:22.692\nNow if my subnet mask was 255.255.0.0,\n\n728\n00:40:22.692 --> 00:40:26.409\nthat would mean the first 16 bits here,\n\n729\n00:40:26.409 --> 00:40:31.490\nthe first 2 octets would\nbe part of the network ID.\n\n730\n00:40:31.490 --> 00:40:37.600\nAnd with this address that means that\n172.143 would be the network and\n\n731\n00:40:37.600 --> 00:40:39.858\n8.16 would be the host.\n\n732\n00:40:39.858 --> 00:40:42.880\nSo if I had two computers\nthat started with 172.143,\n\n733\n00:40:42.880 --> 00:40:46.690\nthey could talk to each other\nwithout going through a router.\n\n734\n00:40:46.690 --> 00:40:47.767\nBut if somebody was 172.144,\n\n735\n00:40:47.767 --> 00:40:53.490\nwe'd have to go through a router to\nget to them, it's a different network.\n\n736\n00:40:53.490 --> 00:40:58.807\nAnd it gets even smaller when we\nget down here to 255.255.255.0.\n\n737\n00:40:58.807 --> 00:41:06.710\nThat means the first 3 octets, the first\n24 bits are part of the network ID.\n\n738\n00:41:06.710 --> 00:41:13.540\nThat means that 172.143.8 is the network,\nand .16 is me.\n\n739\n00:41:13.540 --> 00:41:17.110\nSo anybody else who starts with 172.143.8,\n\n740\n00:41:17.110 --> 00:41:19.130\nI can talk to them without\ngoing through a router.\n\n741\n00:41:19.130 --> 00:41:22.450\nBut anybody else, I'm gonna have to\ngo through my router to get there.\n\n742\n00:41:22.450 --> 00:41:25.030\nAll right, that's how routers work.\n\n743\n00:41:25.030 --> 00:41:27.840\nThey recognize networks\nbased on subnet masks and\n\n744\n00:41:27.840 --> 00:41:30.200\nthat's how our computers or clients work.\n\n745\n00:41:30.200 --> 00:41:32.310\nThey know when they can go direct,\n\n746\n00:41:32.310 --> 00:41:36.520\nversus having to go through\na router based on this subnet mask.\n\n747\n00:41:36.520 --> 00:41:39.770\nSo subnet mask is really important, right?\n\n748\n00:41:39.770 --> 00:41:44.030\nNow when IP addresses\nwere originally created,\n\n749\n00:41:44.030 --> 00:41:46.380\ncomputer networks were very small, right?\n\n750\n00:41:46.380 --> 00:41:49.800\nIt was uncommon to have a network\nwith more than ten computers.\n\n751\n00:41:49.800 --> 00:41:53.850\nAnd the idea of a global network spanning\nmillions of computers was just a dream in\n\n752\n00:41:53.850 --> 00:41:55.570\na sci fi writer's mind.\n\n753\n00:41:55.570 --> 00:41:59.620\nAnd so\nnetworks really have exploded since then.\n\n754\n00:41:59.620 --> 00:42:02.590\nBut in the early days,\nthey didn't plan for it that way.\n\n755\n00:42:02.590 --> 00:42:04.670\nThey planned for\nthings to be much smaller and\n\n756\n00:42:04.670 --> 00:42:09.440\nso they didn't have subnet\nmasks in the very early days.\n\n757\n00:42:09.440 --> 00:42:13.618\nIn the very early days they used\nsomething different called classes.\n\n758\n00:42:13.618 --> 00:42:18.240\nIP addresses fell into certain classes,\nand based on their numbers\n\n759\n00:42:18.240 --> 00:42:23.040\nthat's what would determine whether\ncertain values were the network ID or\n\n760\n00:42:23.040 --> 00:42:24.970\ncertain values were the host ID.\n\n761\n00:42:24.970 --> 00:42:29.580\nAnd so we need to understand those\nclasses, they're not used anymore, right?\n\n762\n00:42:29.580 --> 00:42:33.350\nWe really don't use the classes, but\nyou'll hear people refer to them and\n\n763\n00:42:33.350 --> 00:42:36.560\nit's more of just kind of throw\nback to the old terminology, but\n\n764\n00:42:36.560 --> 00:42:38.380\non the exam, even,\nyou'll see them thrown out.\n\n765\n00:42:38.380 --> 00:42:40.930\nSo we need to remember those old classes.\n\n766\n00:42:40.930 --> 00:42:44.380\nBut on newer systems,\nthe classes don't matter.\n\n767\n00:42:44.380 --> 00:42:46.710\nThe subnet mask does all the work.\n\n768\n00:42:46.710 --> 00:42:48.430\nSo we're going to look at\nthat subnet mask more.\n\n769\n00:42:48.430 --> 00:42:51.370\nWe're actually going to do a special\nepisode just on subnetting,\n\n770\n00:42:51.370 --> 00:42:53.250\nwhich is manipulating that subnet mask.\n\n771\n00:42:53.250 --> 00:42:55.220\nSo we'll get a chance to see that but\n\n772\n00:42:55.220 --> 00:42:57.610\nthese three right here\nare really the most common.\n\n773\n00:42:57.610 --> 00:43:02.260\nThese are the ones you're gonna see on\na regular basis in private networks, and\n\n774\n00:43:02.260 --> 00:43:06.920\nthey're really easy to use because\n255 means that whole octet.\n\n775\n00:43:06.920 --> 00:43:08.520\nI really didn't have to convert to binary.\n\n776\n00:43:08.520 --> 00:43:12.600\nI did it, right, I converted to binary\njust to show it, but I didn't have to.\n\n777\n00:43:12.600 --> 00:43:14.940\nI could have just said, well 255.255,\n\n778\n00:43:14.940 --> 00:43:19.030\nthat means the first two octets,\nthere's my network ID, done, right?\n\n779\n00:43:19.030 --> 00:43:21.160\nAnd that's perfect, that's really ideal.\n\n780\n00:43:22.330 --> 00:43:25.560\nBut there's many other subnet\nmasks that can be used,\n\n781\n00:43:25.560 --> 00:43:28.870\nthese are just the three simplest,\nsimplest being the most common.\n\n782\n00:43:29.950 --> 00:43:31.440\nNow these simplest ones,\n\n783\n00:43:31.440 --> 00:43:35.760\nthey actually correspond to the old\nclasses that I was talking about.\n\n784\n00:43:35.760 --> 00:43:37.810\nThey didn't make these\nnumbers up out of nowhere.\n\n785\n00:43:37.810 --> 00:43:40.660\nThese numbers built off\nof the old classes.\n\n786\n00:43:40.660 --> 00:43:44.180\nAnd there's some kind of neat\nstuff there that we'll see.\n\n787\n00:43:44.180 --> 00:43:52.381\nLet's take a look at those classes.\n\n788\n00:43:52.381 --> 00:43:53.072\nWith an IP address,\nthe absolute lowest number\n\n789\n00:43:53.072 --> 00:43:53.599\nthat we can have with an IP address.\n\n790\n00:43:55.120 --> 00:44:00.469\nIf we break this down in terms of\nthe lowest and highest number, okay.\n\n791\n00:44:00.469 --> 00:44:07.388\nWith a 32-bit decimal number,\nbinary number, sorry,\n\n792\n00:44:07.388 --> 00:44:13.370\n32-bit binary number, the lowest number\nyou could have would be 32 zeroes, okay.\n\n793\n00:44:13.370 --> 00:44:16.200\nAnd I'm gonna cheat just a little\nbit to save me some typing.\n\n794\n00:44:18.320 --> 00:44:23.480\nSo, the lowest number we could\nhave would be 32 0s like that,\n\n795\n00:44:23.480 --> 00:44:27.820\nand really, in binary,\nwe would drop those dots out.\n\n796\n00:44:27.820 --> 00:44:30.010\nSo, it's really just 32 0s.\n\n797\n00:44:30.010 --> 00:44:32.790\nFortunately for us that is\nsomething really easy to convert,\n\n798\n00:44:32.790 --> 00:44:35.660\nbecause all zeros is a zero, right?\n\n799\n00:44:35.660 --> 00:44:42.150\nSuper easy, but, the highest number\nthat we could have, would be 32 1s.\n\n800\n00:44:42.150 --> 00:44:48.670\n32 1s would be the absolute highest number\nthat we could have in a 32 bit value.\n\n801\n00:44:48.670 --> 00:44:53.320\nAnd in IPv4, that actually works\nout to a much bigger number.\n\n802\n00:44:54.640 --> 00:44:57.300\nAll right, so there's the 32.\n\n803\n00:44:57.300 --> 00:45:01.054\nSo, when we go to convert a number\nlike this, it's huge, and\n\n804\n00:45:01.054 --> 00:45:06.270\nthe number that we're gonna result in, is\nthe total size of the IPv4 address space.\n\n805\n00:45:06.270 --> 00:45:07.328\nSo let me just write that here.\n\n806\n00:45:07.328 --> 00:45:12.929\nIt's 4,294,967,\n\n807\n00:45:12.929 --> 00:45:21.444\noh, wait, 4,294,967,296.\n\n808\n00:45:21.444 --> 00:45:25.310\nThat is the highest number we can\nwrite in a 32 bit address space.\n\n809\n00:45:25.310 --> 00:45:31.724\nSo, that means, whoever created IPv4,\nor IP as we know it, originally,\n\n810\n00:45:31.724 --> 00:45:39.275\nthey picked a 32-bit address that only\nsupported roughly 4.3 billion addresses.\n\n811\n00:45:39.275 --> 00:45:41.140\nWell, how may people are in the world?\n\n812\n00:45:42.340 --> 00:45:43.740\nA lot more than 4.3 billion.\n\n813\n00:45:43.740 --> 00:45:46.849\nI think the world's population is\ncreeping up on 7 billion now, so\n\n814\n00:45:46.849 --> 00:45:48.930\nit's getting to be pretty large.\n\n815\n00:45:48.930 --> 00:45:53.090\nSo these IP addresses are not\nreally the be all end all.\n\n816\n00:45:53.090 --> 00:45:56.530\nAnd we're gonna see later on\nthat there's a newer version\n\n817\n00:45:56.530 --> 00:45:59.160\nof IP that's kind of replacing this.\n\n818\n00:45:59.160 --> 00:46:05.150\nWhat we're seeing here, this is called\nIPv4, or Internet Protocol version four.\n\n819\n00:46:05.150 --> 00:46:08.320\nThere really wasn't a version one,\ntwo, or three, they weren't released.\n\n820\n00:46:08.320 --> 00:46:11.510\nVersion four was the one that was\npublicly released that we all use.\n\n821\n00:46:11.510 --> 00:46:15.790\nAnd it's the most common version\nof internet protocols available.\n\n822\n00:46:15.790 --> 00:46:19.790\nThe replacement for it is IPv6,\nInternet Protocol Version 6.\n\n823\n00:46:19.790 --> 00:46:25.540\nThey skipped 5, there was some kind of a\ntrademark dispute with that IPv5 moniker.\n\n824\n00:46:25.540 --> 00:46:28.369\nBut IPv6 is what the newer one is, and\n\n825\n00:46:28.369 --> 00:46:33.243\nit goes to a 128 bit address base,\nwhich is insanely massive.\n\n826\n00:46:33.243 --> 00:46:36.570\nIt is a gigantic one because it\ndoesn't have a 32-bit number.\n\n827\n00:46:36.570 --> 00:46:39.070\nIt's got a 128-bit number.\n\n828\n00:46:39.070 --> 00:46:41.470\nThat's insanely large.\n\n829\n00:46:41.470 --> 00:46:43.380\nWe'll talk about it in another segment.\n\n830\n00:46:43.380 --> 00:46:45.620\nLet's save that one for later.\n\n831\n00:46:45.620 --> 00:46:49.840\nBut when we represent the full numbers\nlike this, those are some big numbers.\n\n832\n00:46:51.140 --> 00:46:54.310\nBut if we just deal\nwith individual octets.\n\n833\n00:46:54.310 --> 00:46:56.650\nWhen we look at just\nthe individual octets,\n\n834\n00:46:56.650 --> 00:46:59.430\nthe numbers become a lot more manageable.\n\n835\n00:46:59.430 --> 00:47:01.610\nAn individual octet's only eight bits.\n\n836\n00:47:03.170 --> 00:47:06.660\nSo the lowest number we\ncould write is a 0, and\n\n837\n00:47:06.660 --> 00:47:11.840\nthe highest number we could write\nwould be 8 1s, which is 255.\n\n838\n00:47:11.840 --> 00:47:18.080\nSo when you're dealing with individual\noctets, just that makes it easy.\n\n839\n00:47:18.080 --> 00:47:20.380\nNo numbers higher than 255.\n\n840\n00:47:20.380 --> 00:47:22.380\nNothing more than eight digits in binary.\n\n841\n00:47:22.380 --> 00:47:23.710\nPretty simple to convert.\n\n842\n00:47:23.710 --> 00:47:25.112\nSo that's kind of our saving grace here.\n\n843\n00:47:25.112 --> 00:47:29.680\nAs we start to convert these numbers,\nlife becomes a lot easier, all right?\n\n844\n00:47:29.680 --> 00:47:31.620\nOkay, but I mentioned the classes.\n\n845\n00:47:31.620 --> 00:47:35.140\nNow the classes are gonna\ntake this address space.\n\n846\n00:47:35.140 --> 00:47:40.582\nIt's gonna take these 4.3 billion\naddresses, and it's gonna divide them up.\n\n847\n00:47:40.582 --> 00:47:44.160\nIt's gonna divide them up into\nsmaller units, which is what\n\n848\n00:47:44.160 --> 00:47:48.510\nmade it possible to give some people IP's,\nand other people other IP's.\n\n849\n00:47:48.510 --> 00:47:52.002\nIn the early days of the Internet, you had\nto go out and get IP addresses to use, and\n\n850\n00:47:52.002 --> 00:47:54.293\nyou didn't want to duplicate anybody else,\nright?\n\n851\n00:47:54.293 --> 00:47:58.734\nIf you have a duplicate with somebody,\nit's gonna cause all sorts of problems,\n\n852\n00:47:58.734 --> 00:48:01.751\nand that's why everyone has\nto have a unique address.\n\n853\n00:48:01.751 --> 00:48:04.252\nWell, how do we keep that straight?\n\n854\n00:48:04.252 --> 00:48:08.000\nFortunately for us, there is actually\nan organization that takes care of that.\n\n855\n00:48:08.000 --> 00:48:12.244\nThere's an organization called the IANA.\n\n856\n00:48:12.244 --> 00:48:16.850\nThe IANA which is\nthe Internet Assigned Numbers Authority.\n\n857\n00:48:16.850 --> 00:48:20.850\nThis is the organization that\nmanages the IPV4 address space.\n\n858\n00:48:20.850 --> 00:48:25.200\nIf you wanna get on the Internet you're\ngoing to need an IP address, and that IP\n\n859\n00:48:25.200 --> 00:48:31.400\naddress is going to have to be given to\nyou either directly by the IANA, which\n\n860\n00:48:31.400 --> 00:48:36.920\nis pretty uncommon, or more commonly from\nyour ISP, your Internet Service Provider.\n\n861\n00:48:36.920 --> 00:48:40.410\nSo my Internet Service Provider\nhere is a company called GRU.\n\n862\n00:48:40.410 --> 00:48:45.232\nGRU has an upstream provider, they buy\ntheir bandwidth from somebody else, and\n\n863\n00:48:45.232 --> 00:48:47.100\ntheir upstream provider is Cogent.\n\n864\n00:48:47.100 --> 00:48:51.708\nAnd Cogent Communications, they're big,\nthey are a massive company and\n\n865\n00:48:51.708 --> 00:48:54.720\nthey buy their addresses from the IANA,\nright?\n\n866\n00:48:54.720 --> 00:48:55.330\nThey get them from the top.\n\n867\n00:48:55.330 --> 00:48:59.215\nWell, actually, there's one extra tier\nin there I'll talk about in a minute.\n\n868\n00:48:59.215 --> 00:49:01.720\nBut basically they come from the IANA.\n\n869\n00:49:01.720 --> 00:49:03.820\nSo the IANA doesn't normally\ndeal with little people,\n\n870\n00:49:03.820 --> 00:49:05.230\nthey don't deal with people like me.\n\n871\n00:49:05.230 --> 00:49:07.440\nI've never bought an address\nright from the IANA,\n\n872\n00:49:07.440 --> 00:49:09.600\neven though they manage it, all right?\n\n873\n00:49:09.600 --> 00:49:13.680\nInstead they dole them out to other\norganizations that in turn dole them out\n\n874\n00:49:13.680 --> 00:49:15.250\nto customers like me.\n\n875\n00:49:15.250 --> 00:49:18.350\nSo that's where our addresses\nare coming from, and\n\n876\n00:49:18.350 --> 00:49:19.960\nthe IANA is trying to manage that.\n\n877\n00:49:19.960 --> 00:49:23.850\nAnd in the early days,\nthey managed it by creating these classes,\n\n878\n00:49:23.850 --> 00:49:29.640\nthese subdivisions of IPs, to cut them\ninto pieces that can be given out.\n\n879\n00:49:29.640 --> 00:49:32.030\nAnd so when you requested an address,\n\n880\n00:49:32.030 --> 00:49:34.110\nthere were three classes\nyou could request.\n\n881\n00:49:34.110 --> 00:49:38.281\nA class A, a class B, or a class C.\n\n882\n00:49:38.281 --> 00:49:44.890\nA class A would give you\n16.7 million IP addresses.\n\n883\n00:49:44.890 --> 00:49:49.510\nSo if you needed a bunch of\nIP's you'd go to the IANA and\n\n884\n00:49:49.510 --> 00:49:50.620\nsay hey can I have a class A?\n\n885\n00:49:50.620 --> 00:49:55.000\nAnd they'd say sure here you go here\nis 16.7 million IP's, good luck.\n\n886\n00:49:55.000 --> 00:49:59.200\nAnd now you could bring up a network with\n16.7 million computers and you'd be fine.\n\n887\n00:49:59.200 --> 00:50:02.460\nAll right, now you might ask\nyourself who the heck would do that?\n\n888\n00:50:02.460 --> 00:50:03.970\nPlenty of companies did, right?\n\n889\n00:50:03.970 --> 00:50:06.070\nFord motor company did it.\n\n890\n00:50:06.070 --> 00:50:09.860\nThis was back in the late 70s,\nearly 80s, and Ford said,\n\n891\n00:50:09.860 --> 00:50:13.370\nhey we don't know about this Internet\nthing, but it might catch on, and\n\n892\n00:50:13.370 --> 00:50:18.200\nif it does, we might want every one\nof our cars to have an IP address.\n\n893\n00:50:18.200 --> 00:50:21.440\nWe better get in on that early,\nlet's get those IPs.\n\n894\n00:50:21.440 --> 00:50:24.163\nAnd they got a pool of 16.7 million IPs.\n\n895\n00:50:24.163 --> 00:50:27.781\nNow as time went on, they didn't need it,\nand so they gave it back, right, but\n\n896\n00:50:27.781 --> 00:50:30.420\nthey did have that pool originally.\n\n897\n00:50:30.420 --> 00:50:32.580\nApple computer, they said well, shoot,\n\n898\n00:50:32.580 --> 00:50:34.500\nwe might want to include\nan IP with every computer.\n\n899\n00:50:34.500 --> 00:50:40.320\nSo they requested a class A and got 16.7\nmillion IPs which they still hold today.\n\n900\n00:50:40.320 --> 00:50:45.420\nRight now at this very moment Apple has\nover 16.7 million IPs and for those of\n\n901\n00:50:45.420 --> 00:50:48.730\nyou who know there's an Internet shortage\nout there, there' actually an IP shortage.\n\n902\n00:50:48.730 --> 00:50:51.560\nPeople have been putting pressure on Apple\nto return it and they still haven't.\n\n903\n00:50:51.560 --> 00:50:55.840\nSo some companies haven't given\nback these really old ranges.\n\n904\n00:50:55.840 --> 00:50:58.210\nBut a class A was too big for most people.\n\n905\n00:50:58.210 --> 00:51:01.690\nMost people instead would go\nwith what's called a class B.\n\n906\n00:51:01.690 --> 00:51:06.310\nA class B address was 65,534 IP addresses,\nright?\n\n907\n00:51:07.580 --> 00:51:09.900\nNice big chunk there, 65,000.\n\n908\n00:51:09.900 --> 00:51:14.100\nVery few companies at the time\nhad more than 65,000 computers.\n\n909\n00:51:14.100 --> 00:51:16.660\nFor a large company that was\na great number right there.\n\n910\n00:51:16.660 --> 00:51:18.660\nIt was a perfect one to get in.\n\n911\n00:51:18.660 --> 00:51:23.560\nBut if you were a home or a school,\nyou probably didn't have 65,000 computers.\n\n912\n00:51:23.560 --> 00:51:25.652\nYou probably had much, much less.\n\n913\n00:51:25.652 --> 00:51:28.253\nAnd so for that there was a class C.\n\n914\n00:51:28.253 --> 00:51:33.948\nAnd a class C address would\ngive you 254 usable addresses.\n\n915\n00:51:33.948 --> 00:51:38.730\nNow we were a little more in the range of,\nwell it's kind of overkill for homes but\n\n916\n00:51:38.730 --> 00:51:43.640\nfor schools it was pretty standard,\nso 254 IP's in a class C.\n\n917\n00:51:44.790 --> 00:51:49.040\nNow, that worked out, in the 1980s.\n\n918\n00:51:49.040 --> 00:51:53.030\nBut by the time the 90s rolled around we\nstarted having that whole dot-com boom.\n\n919\n00:51:53.030 --> 00:51:55.220\nThe internet started taking off.\n\n920\n00:51:55.220 --> 00:51:57.350\nAnd they recognized some problems.\n\n921\n00:51:57.350 --> 00:52:03.490\nAnd the classes put these limits in where\nthey couldn't dole out less than 254 IPs.\n\n922\n00:52:03.490 --> 00:52:06.820\nSo if I just wanted one address,\nthey had to give me 254.\n\n923\n00:52:06.820 --> 00:52:08.270\nWhat a huge waste!\n\n924\n00:52:08.270 --> 00:52:09.060\nRight?\n\n925\n00:52:09.060 --> 00:52:12.710\nAnd so they recognized that and\nthey abandoned the classes.\n\n926\n00:52:12.710 --> 00:52:17.410\nAnd so in today's world, you can get 1 IP.\n\n927\n00:52:17.410 --> 00:52:18.760\nWell, we'll see some limitations.\n\n928\n00:52:18.760 --> 00:52:20.710\nReally two is the smallest you can get.\n\n929\n00:52:20.710 --> 00:52:24.840\nBut you can get 2 IP addresses or\nyou can get 10 or 30 or whatever.\n\n930\n00:52:24.840 --> 00:52:28.330\nYou can get these variations\nthat are much less wasteful\n\n931\n00:52:28.330 --> 00:52:29.700\nbecause we've abandoned classes.\n\n932\n00:52:30.850 --> 00:52:35.330\nBut, everything we do still\nmirrors this old class technology\n\n933\n00:52:35.330 --> 00:52:36.470\nbecause it was so entrenched.\n\n934\n00:52:36.470 --> 00:52:39.990\nIt was used for years and years and years,\nand so, you still see that terminology\n\n935\n00:52:39.990 --> 00:52:42.440\nused a lot so that's why we need\nto make sure we understand it.\n\n936\n00:52:42.440 --> 00:52:43.190\nAll right.\n\n937\n00:52:43.190 --> 00:52:46.680\nSo, Why don't we stop here,\nand we'll take a break.\n\n938\n00:52:46.680 --> 00:52:51.620\nAnd when we get back, I want to go back\nover the Class A, Class B, and Class C.\n\n939\n00:52:51.620 --> 00:52:55.070\nShow you how they work, show you how\nyou can recognize those addresses, and\n\n940\n00:52:55.070 --> 00:53:00.060\ndetermine a network range without\nhaving to know a subnet mask.\n\n941\n00:53:00.060 --> 00:53:01.870\nRight?\nThat old trick that we had.\n\n942\n00:53:01.870 --> 00:53:05.680\nIt's pretty good stuff to know, and\nit'll definitely help you on the exam.\n\n943\n00:53:05.680 --> 00:53:07.747\nAll right.\nStay tuned, we'll be back in a few.\n\n944\n00:53:07.747 --> 00:53:15.439\n[MUSIC]\n\n945\n00:53:15.439 --> 00:53:16.650\n>> All right, welcome back, everybody.\n\n946\n00:53:16.650 --> 00:53:20.520\nSo now, we're gonna take a look at\nthose classes I was talking about.\n\n947\n00:53:20.520 --> 00:53:22.490\nThey're very well defined number ranges,\nand so\n\n948\n00:53:22.490 --> 00:53:24.740\nthey're something that's\npretty easy to memorize.\n\n949\n00:53:24.740 --> 00:53:28.410\nWell, as easy as any random\nnumber is to memorize, right?\n\n950\n00:53:28.410 --> 00:53:29.960\nNow let's take a look at these.\n\n951\n00:53:29.960 --> 00:53:35.440\nBasically, your IP addresses, the lowest\nnumber you would have would be all zeros,\n\n952\n00:53:35.440 --> 00:53:38.570\nright, and the highest number\nyou'd have would be all 255s.\n\n953\n00:53:38.570 --> 00:53:43.370\nAnd so they took that range and\nthey divided it into these classes.\n\n954\n00:53:43.370 --> 00:53:49.018\nThe first is a Class A, and\nI mentioned that a Class A has roughly\n\n955\n00:53:49.018 --> 00:53:55.537\n16.7 million IP addresses or\nright here, 16,777,214.\n\n956\n00:53:55.537 --> 00:54:01.401\nClass As are easy to recognize,\nbecause the first digit, the first octet,\n\n957\n00:54:01.401 --> 00:54:06.273\nright, this value right here,\nwill be between 0 and 126.\n\n958\n00:54:06.273 --> 00:54:06.990\nRight?\n\n959\n00:54:06.990 --> 00:54:08.770\nIf you see a number between zero and\n\n960\n00:54:08.770 --> 00:54:12.516\n126 in the first octet,\nthat's going to be a Class A.\n\n961\n00:54:12.516 --> 00:54:14.150\nUnder the class full system.\n\n962\n00:54:14.150 --> 00:54:17.050\nAlways keep in mind that we don't\nfollow the classes anymore.\n\n963\n00:54:17.050 --> 00:54:21.970\nSo on modern networks,\nthat may not be true anymore, right.\n\n964\n00:54:21.970 --> 00:54:23.960\nBut for the exam,\nwe need to remember these.\n\n965\n00:54:23.960 --> 00:54:26.290\nAnd we'll see they still\ncrop up a few other places.\n\n966\n00:54:26.290 --> 00:54:30.890\nBut 0 through 126, now technically,\nyou can't start your network with a 0.\n\n967\n00:54:30.890 --> 00:54:35.680\nSo you really have 1 through 126,\nwhich is why down here\n\n968\n00:54:35.680 --> 00:54:40.020\nwhere it says, number of networks 126 and\nnot 127, right?\n\n969\n00:54:40.020 --> 00:54:46.040\nSo that 0 isn't truly viable, so\nwe could just change that to like 1.0.0.0.\n\n970\n00:54:46.040 --> 00:54:48.740\nAlright, so those are our ranges.\n\n971\n00:54:48.740 --> 00:54:54.873\nAnd notice it goes from 1.0.0.0 all\nthe way to 126.255.255.255 that's\n\n972\n00:54:54.873 --> 00:54:59.879\nas high as you can get without going\nto the next number, to 127, all right?\n\n973\n00:54:59.879 --> 00:55:06.520\nSo if we're using a class A the first\noctet will be the network ID.\n\n974\n00:55:06.520 --> 00:55:09.340\nAnd the remaining octets\nwill be your host ID.\n\n975\n00:55:09.340 --> 00:55:14.189\nSo the subnet mask for\na Class A is 255.0.0.0.\n\n976\n00:55:14.189 --> 00:55:16.020\nBut we didn't need that subnet mask.\n\n977\n00:55:16.020 --> 00:55:18.080\nYou didn't have to tell\nsomebody the subnet mask,\n\n978\n00:55:18.080 --> 00:55:20.840\nbecause they could just look at\nthat first number, and say oh,\n\n979\n00:55:20.840 --> 00:55:25.200\nit's between 1 and 126,\nthat first number, that's the network ID.\n\n980\n00:55:25.200 --> 00:55:28.070\nAnd the other three octets,\nthose are the host ID.\n\n981\n00:55:28.070 --> 00:55:32.635\nYou just knew,\nbecause of the number range, all right?\n\n982\n00:55:32.635 --> 00:55:35.490\nClass B was very similar.\n\n983\n00:55:35.490 --> 00:55:41.056\nFor a Class B,\nif the first octet was between 128 and\n\n984\n00:55:41.056 --> 00:55:47.590\n191, if it was in-between those\nyou had a Class B network and\n\n985\n00:55:47.590 --> 00:55:54.003\nclass B networks used\na 255.255.0.0 subnet mask.\n\n986\n00:55:54.003 --> 00:55:57.170\nAnd, I'm gonna save this.\n\n987\n00:55:57.170 --> 00:55:59.120\nThis number is not quite right, but\n\n988\n00:55:59.120 --> 00:56:02.501\nI'll explain why it's written\nlike that a little bit later.\n\n989\n00:56:02.501 --> 00:56:05.084\nSo let me just change that one.\n\n990\n00:56:05.084 --> 00:56:09.460\nSo this would actually be\n255.255.0.0 Fix this one, too.\n\n991\n00:56:09.460 --> 00:56:10.209\nThere.\n\n992\n00:56:10.209 --> 00:56:11.585\nAll right, so that's a Class B.\n\n993\n00:56:11.585 --> 00:56:13.500\nAnd again,\nyou could spot that really easy.\n\n994\n00:56:13.500 --> 00:56:17.080\nYou know a Class B cuz that\nfirst octet is between 128 and\n\n995\n00:56:17.080 --> 00:56:21.880\n191, and if that's the case, the first\ntwo octets are the network ID and\n\n996\n00:56:21.880 --> 00:56:23.340\nthe last two octets are the host ID.\n\n997\n00:56:24.835 --> 00:56:27.858\nA Class C,\nthat's the smallest of the three.\n\n998\n00:56:27.858 --> 00:56:35.392\nIf the first octet is between 192 and\n223, that's gonna be a Class C.\n\n999\n00:56:35.392 --> 00:56:39.744\nAnd a Class C uses a subnet\nmask of 255.255.225.0,\n\n1000\n00:56:39.744 --> 00:56:44.380\nmeaning the first three octets\nare part of the network ID.\n\n1001\n00:56:44.380 --> 00:56:48.210\nAnd that last fourth octet is\nthe actual host ID, right,\n\n1002\n00:56:48.210 --> 00:56:50.100\nthe actual individual machine.\n\n1003\n00:56:50.100 --> 00:56:55.290\nSo that creates a very\nsmall network only 254\n\n1004\n00:56:55.290 --> 00:57:00.290\nhosts verses 65,000 hosts and\n16.7 million hosts, right?\n\n1005\n00:57:00.290 --> 00:57:03.180\nThey get bigger and bigger with each one.\n\n1006\n00:57:03.180 --> 00:57:06.960\nNow, these were the three classes\nthat were created in the early days.\n\n1007\n00:57:06.960 --> 00:57:10.360\nAnd when you requested an IP\naddress from the IANA,\n\n1008\n00:57:10.360 --> 00:57:13.220\nyou were requesting one of these three,\nright.\n\n1009\n00:57:13.220 --> 00:57:16.484\nAnd they would then give you\nthe addresses to be able to use and\n\n1010\n00:57:16.484 --> 00:57:19.044\nyou'd get one of these three amounts,\nright.\n\n1011\n00:57:19.044 --> 00:57:20.565\nBut you can see the problem there.\n\n1012\n00:57:20.565 --> 00:57:22.460\nThere's only so many of these.\n\n1013\n00:57:22.460 --> 00:57:25.889\nIf you think about it, for\nclass As, 1 through 126, so\n\n1014\n00:57:25.889 --> 00:57:27.542\nhow many class As are there?\n\n1015\n00:57:27.542 --> 00:57:29.481\nThere's only 126 of them.\n\n1016\n00:57:29.481 --> 00:57:32.264\nAnd 128 to 191.\n\n1017\n00:57:32.264 --> 00:57:34.749\nNow my math skills\nare really gonna get tested.\n\n1018\n00:57:34.749 --> 00:57:36.129\nIt is what, 63.\n\n1019\n00:57:36.129 --> 00:57:38.780\nSo, there's only 63 class Bs.\n\n1020\n00:57:38.780 --> 00:57:40.170\nAnd well, at least for\n\n1021\n00:57:40.170 --> 00:57:43.510\nthat first octet before we have to\ndive into the subs there, right?\n\n1022\n00:57:43.510 --> 00:57:46.740\nSo, we have 63 in the first octet and\n\n1023\n00:57:46.740 --> 00:57:50.660\nthen another 255 possible\nsubvalues underneath that.\n\n1024\n00:57:50.660 --> 00:57:52.520\nSo it starts to get much much larger.\n\n1025\n00:57:52.520 --> 00:57:54.400\nThere actually end up being,\n\n1026\n00:57:54.400 --> 00:57:59.722\nlet's see it would be 255 times 16 is\nthe amount of class Bs that you have.\n\n1027\n00:57:59.722 --> 00:58:05.335\nClass Cs, 192 through 223,\nthat seems like a fairly small amount.\n\n1028\n00:58:05.335 --> 00:58:06.972\nWhat is that, 31?\n\n1029\n00:58:06.972 --> 00:58:11.302\nBut, we've got the second octet and the\nthird octet that are part of the network\n\n1030\n00:58:11.302 --> 00:58:14.350\nID, that creates even more\npossible combinations.\n\n1031\n00:58:14.350 --> 00:58:17.940\nSo it really creates more and more and\nmore, so there are many, many,\n\n1032\n00:58:17.940 --> 00:58:20.930\nmany networks created here for a Class C.\n\n1033\n00:58:20.930 --> 00:58:27.217\nThere's only 126 class As,\nbut there's 16,384 class Bs,\n\n1034\n00:58:27.217 --> 00:58:30.980\nand there's over 2 million class Cs.\n\n1035\n00:58:30.980 --> 00:58:34.790\nSo there's a lot of these addresses\nthat are available, these ranges.\n\n1036\n00:58:34.790 --> 00:58:37.040\nBut that turned out not to be enough.\n\n1037\n00:58:37.040 --> 00:58:42.390\nIn the early days, late 70s, early 80s\nthese seemed like really big numbers.\n\n1038\n00:58:42.390 --> 00:58:46.030\nYou gotta remember back then not every\none had a computer in their house.\n\n1039\n00:58:46.030 --> 00:58:48.990\nCell phones weren't around\nthe way they are now.\n\n1040\n00:58:48.990 --> 00:58:52.980\nPeople didn't know what the IP address\nconsumption was going to be like.\n\n1041\n00:58:52.980 --> 00:58:55.700\nSo, these seemed like really big numbers.\n\n1042\n00:58:55.700 --> 00:58:58.370\nOnly recently, in the last 15 years or so\n\n1043\n00:58:58.370 --> 00:59:01.020\ndo we really see that\nproblem come to light.\n\n1044\n00:59:01.020 --> 00:59:03.120\nAnd, now, we're out of IP addresses.\n\n1045\n00:59:03.120 --> 00:59:04.790\nAll right.\n\n1046\n00:59:04.790 --> 00:59:08.460\nSome people argue about that,\nwhether we're out of IP addresses or not.\n\n1047\n00:59:08.460 --> 00:59:11.970\nWe are technically out of IP addresses.\n\n1048\n00:59:11.970 --> 00:59:15.462\nThat being said, if you were to call your\ninternet service provider and ask for\n\n1049\n00:59:15.462 --> 00:59:18.150\nIPs, I doubt you would get rejected,\nright?\n\n1050\n00:59:18.150 --> 00:59:21.910\nAt the highest level,\nI mentioned the IANA earlier.\n\n1051\n00:59:21.910 --> 00:59:25.540\nThe IANA, they're the guys who\nare running the show for IP addresses.\n\n1052\n00:59:25.540 --> 00:59:29.140\nAnd so, when you go to their website,\nright here, the IANA.\n\n1053\n00:59:29.140 --> 00:59:32.180\nThese are the guys that run it and they're\nthe ones who issue out IP addresses.\n\n1054\n00:59:32.180 --> 00:59:33.010\nAll right?\n\n1055\n00:59:33.010 --> 00:59:34.600\nThe IANA is out.\n\n1056\n00:59:34.600 --> 00:59:35.950\nThey've got no more addresses.\n\n1057\n00:59:35.950 --> 00:59:36.830\nAll right?\n\n1058\n00:59:36.830 --> 00:59:39.420\nBut I've said that they don't\nissue them to the little people.\n\n1059\n00:59:39.420 --> 00:59:42.240\nInstead they issue them to other\n\n1060\n00:59:42.240 --> 00:59:45.660\nregistrars who then issue them to\nISPs who then issue them to us.\n\n1061\n00:59:45.660 --> 00:59:49.150\nSo we go through several tiers\nbefore they get to us, the end user.\n\n1062\n00:59:49.150 --> 00:59:50.540\nSo the IANA is out, but\n\n1063\n00:59:50.540 --> 00:59:52.900\nthat just means that they've\ngiven them all to the registrars.\n\n1064\n00:59:52.900 --> 00:59:54.520\nAnd who are the registrars?\n\n1065\n00:59:54.520 --> 00:59:57.560\nEach current net has its own registrar.\n\n1066\n00:59:57.560 --> 00:59:59.830\nHere in the United States\nwe're in North America, and\n\n1067\n00:59:59.830 --> 01:00:03.410\nthe North American registrar is ARIN,\nokay.\n\n1068\n01:00:03.410 --> 01:00:06.180\nThat's the American Registry for\nInternet Numbers.\n\n1069\n01:00:06.180 --> 01:00:10.465\nSo ARIN got addresses from IANA and\n\n1070\n01:00:10.465 --> 01:00:14.875\nthen here in North America the ARIN\nis where our addresses come from.\n\n1071\n01:00:14.875 --> 01:00:17.693\nAnd the ARIN, they have addresses,\nthey've got them,\n\n1072\n01:00:17.693 --> 01:00:20.675\nthey've got them that they can give out,\nall right?\n\n1073\n01:00:20.675 --> 01:00:25.155\nSo while the IANA is out,\nthe sub-registrars aren't.\n\n1074\n01:00:25.155 --> 01:00:27.185\nNow some of the sub-registrars\nare in trouble.\n\n1075\n01:00:27.185 --> 01:00:28.265\nThey're running low.\n\n1076\n01:00:28.265 --> 01:00:33.102\nThe ARIN North America, we're probably\nthe largest consumer of IPs because of\n\n1077\n01:00:33.102 --> 01:00:36.075\nall the data centers and\nthe technology we have.\n\n1078\n01:00:36.075 --> 01:00:38.985\nThe internet was born here\nin the United States, so\n\n1079\n01:00:38.985 --> 01:00:41.159\nwe have a lot of that infrastructure.\n\n1080\n01:00:41.159 --> 01:00:44.785\nNow, other countries didn't get\nin on the early days, and so\n\n1081\n01:00:44.785 --> 01:00:48.440\nthey didn't have the same\npools that we drew from.\n\n1082\n01:00:48.440 --> 01:00:53.120\nBut now they've either caught up or\nsurpassed us for IPs, take China for\n\n1083\n01:00:53.120 --> 01:00:56.343\nexample, just based on\nsheer population alone,\n\n1084\n01:00:56.343 --> 01:01:00.198\nthey way out strip us for\ndemand for access to the internet.\n\n1085\n01:01:00.198 --> 01:01:04.795\nAnd so they didn't have access to the big\npools like we did in the early days and\n\n1086\n01:01:04.795 --> 01:01:07.694\nnow they are consuming IPs\nat a rapid rate, and so\n\n1087\n01:01:07.694 --> 01:01:10.414\nthe Asian registrars\nare really in trouble.\n\n1088\n01:01:10.414 --> 01:01:11.958\nThey're running out of addresses.\n\n1089\n01:01:11.958 --> 01:01:15.557\nAll right, so you can see here on ARIN,\nthey actually have that notice.\n\n1090\n01:01:15.557 --> 01:01:19.574\nThe IANA IPv4 address free pool\nis now depleted, all right.\n\n1091\n01:01:19.574 --> 01:01:22.339\nThey're not saying that their\npool is depleted though,\n\n1092\n01:01:22.339 --> 01:01:24.430\nthey are saying that the IANA is depleted.\n\n1093\n01:01:24.430 --> 01:01:29.960\nARIN has this little countdown, and they\nshow how many addresses they have left.\n\n1094\n01:01:29.960 --> 01:01:33.596\nAnd if we look, you'll see that there is,\nwell, they're using subnet notation.\n\n1095\n01:01:33.596 --> 01:01:34.792\nWe haven't learned about that yet.\n\n1096\n01:01:34.792 --> 01:01:37.250\nBut they are out of class As.\n\n1097\n01:01:37.250 --> 01:01:39.810\nBut if we get down to full on class Bs and\n\n1098\n01:01:39.810 --> 01:01:43.710\nsubs under that and class Cs,\nthat they've got quite a few.\n\n1099\n01:01:43.710 --> 01:01:47.050\nSo, there's quite a few different address\npools still sitting available, but\n\n1100\n01:01:47.050 --> 01:01:49.120\nthe counter is ticking,\nthey're running out.\n\n1101\n01:01:49.120 --> 01:01:53.080\nThey have the equivalent\nof 0.6 class As left.\n\n1102\n01:01:53.080 --> 01:01:55.780\nSo, they've got a little more than\nhalf of a class A left to give.\n\n1103\n01:01:56.900 --> 01:01:59.100\nSo, we're running out.\n\n1104\n01:01:59.100 --> 01:02:02.092\nNow, the reason we're running out is cuz\nof how poorly the IPs were managed in\n\n1105\n01:02:02.092 --> 01:02:02.747\nthe early days.\n\n1106\n01:02:02.747 --> 01:02:07.169\nWhen we give out those classes,\nwe're giving out huge swaths of IPs.\n\n1107\n01:02:07.169 --> 01:02:09.503\nThere's another problem too you'll notice.\n\n1108\n01:02:09.503 --> 01:02:10.966\nWhere do my numbers stop?\n\n1109\n01:02:10.966 --> 01:02:15.492\nI go 1 to 126, 128 to 191,\n\n1110\n01:02:15.492 --> 01:02:19.882\n192 to 223, and then I stop.\n\n1111\n01:02:19.882 --> 01:02:21.786\nBut the highest number is 255.\n\n1112\n01:02:21.786 --> 01:02:26.267\nSo, what happened to 224 to 255?\n\n1113\n01:02:26.267 --> 01:02:27.324\nWhere did those go?\n\n1114\n01:02:27.324 --> 01:02:28.147\nRight?\n\n1115\n01:02:28.147 --> 01:02:31.365\nWell, in the early days they\nsaid we've got so many IPs,\n\n1116\n01:02:31.365 --> 01:02:35.206\nwell let's just block some off for\nsome various stuff, all right.\n\n1117\n01:02:35.206 --> 01:02:39.583\nAnd so 224 and higher were blocked off for\nspecial purposes.\n\n1118\n01:02:39.583 --> 01:02:41.487\nAnd there's another one\nthat was blocked off.\n\n1119\n01:02:41.487 --> 01:02:45.927\nNotice we skip from 126 to 128.\n\n1120\n01:02:45.927 --> 01:02:48.319\nYou might have thought\nthat I made a typo there.\n\n1121\n01:02:48.319 --> 01:02:50.467\nIt's actually blocked off.\n\n1122\n01:02:50.467 --> 01:02:53.079\n127 is special.\n\n1123\n01:02:53.079 --> 01:02:55.842\n127 is what's called the loopback.\n\n1124\n01:02:55.842 --> 01:02:58.221\nSo, I'm just going to add\nthat up here at the top.\n\n1125\n01:02:58.221 --> 01:03:03.328\nSo, we have this loop back,\nand it is 127.0.0.0\n\n1126\n01:03:03.328 --> 01:03:08.345\nall the way through 127.255.255.255.\n\n1127\n01:03:08.345 --> 01:03:09.065\nAll right.\n\n1128\n01:03:09.065 --> 01:03:10.725\nWhat is that?\n\n1129\n01:03:10.725 --> 01:03:13.910\nWell the loopback network is yourself.\n\n1130\n01:03:13.910 --> 01:03:17.768\nIf you ever want to test network\nconnectivity with yourself,\n\n1131\n01:03:17.768 --> 01:03:21.773\nyou can just reach out to 127.0.0 or\n127.whatever,\n\n1132\n01:03:21.773 --> 01:03:25.424\n127.anything is going to\nredirect right back to you.\n\n1133\n01:03:25.424 --> 01:03:29.660\nOkay, for\na loopback they needed one address.\n\n1134\n01:03:29.660 --> 01:03:31.010\nAnd what did they do?\n\n1135\n01:03:31.010 --> 01:03:33.012\nThey blocked off a class A.\n\n1136\n01:03:33.012 --> 01:03:36.886\nJust 16.7 million IPs down\nthe drain just like that for\n\n1137\n01:03:36.886 --> 01:03:40.537\nthe loop back, so\na little on the wasteful side there.\n\n1138\n01:03:40.537 --> 01:03:44.717\nBut that's where 127 went, and that's\nwhy the Class As and Bs skipped that.\n\n1139\n01:03:44.717 --> 01:03:48.402\nThe 127 is sitting in between Class As and\nClass Bs.\n\n1140\n01:03:48.402 --> 01:03:50.020\nAll right.\n\n1141\n01:03:50.020 --> 01:03:53.300\nThen as we scroll down,\nwe'll see those Class Cs.\n\n1142\n01:03:53.300 --> 01:03:55.050\nAs I try to scroll down.\n\n1143\n01:03:55.050 --> 01:03:58.490\nAnd then the Class Cs stop at 223,\neverything above was reserved.\n\n1144\n01:03:58.490 --> 01:04:01.032\nWell later on they did find some uses for\nthese.\n\n1145\n01:04:01.032 --> 01:04:03.626\nThey took and created a class D.\n\n1146\n01:04:03.626 --> 01:04:06.876\nThey took 224 through 239.\n\n1147\n01:04:06.876 --> 01:04:11.054\nSo, in the next set of values,\nAnd they set those aside for\n\n1148\n01:04:11.054 --> 01:04:13.850\nmulticast communications.\n\n1149\n01:04:13.850 --> 01:04:15.560\nNow what are multicasts?\n\n1150\n01:04:15.560 --> 01:04:19.180\nWell in normal communications,\nwe communicate one of two ways,\n\n1151\n01:04:19.180 --> 01:04:21.730\nthrough unicast and broadcast.\n\n1152\n01:04:21.730 --> 01:04:25.390\nA unicast is when we send\none message to one person.\n\n1153\n01:04:25.390 --> 01:04:27.990\nComputer A wants to talk to Computer B, or\n\n1154\n01:04:27.990 --> 01:04:30.690\nComputer A wants to talk to Computer D,\nright?\n\n1155\n01:04:30.690 --> 01:04:33.210\nOr I want to get to Google's website.\n\n1156\n01:04:33.210 --> 01:04:35.930\nThat's gonna be a unicast,\nI'm talking to Google.\n\n1157\n01:04:37.190 --> 01:04:40.790\nI don't reach out to the entire world,\nI just reach out to that one machine.\n\n1158\n01:04:40.790 --> 01:04:42.180\nA unicast is what we normally do.\n\n1159\n01:04:43.220 --> 01:04:46.730\nBut sometimes,\nwe need to do what's called a broadcast.\n\n1160\n01:04:46.730 --> 01:04:50.250\nA broadcast is where we send\nout a message to everybody.\n\n1161\n01:04:50.250 --> 01:04:53.530\nAnd we say, hey everybody,\nI've got some information.\n\n1162\n01:04:53.530 --> 01:04:56.050\nSo for example if we're trying\nto find someone on the network,\n\n1163\n01:04:56.050 --> 01:04:59.710\nwe'll send that to broadcast we'll\nsay hey is anybody out there?\n\n1164\n01:04:59.710 --> 01:05:03.940\nAnd we're talking to everybody and\nwe get responses back, that's a broadcast.\n\n1165\n01:05:03.940 --> 01:05:07.226\nNow broadcasts are bad on the Internet,\nInternet routers are designed to\n\n1166\n01:05:07.226 --> 01:05:09.929\nblock those, but\non a local network they're very useful for\n\n1167\n01:05:09.929 --> 01:05:12.005\ndetecting the other\nmachines on the network.\n\n1168\n01:05:12.005 --> 01:05:16.310\nSo you use broadcast and unicast on\nyour local network all the time.\n\n1169\n01:05:16.310 --> 01:05:18.820\nOn the Internet,\nyou only use unicast, right?\n\n1170\n01:05:18.820 --> 01:05:20.230\nBroadcasts are not\nallowed on the Internet.\n\n1171\n01:05:21.670 --> 01:05:24.460\nBut what if you want to talk\nto something in between?\n\n1172\n01:05:24.460 --> 01:05:29.250\nNot one person, not everybody,\nbut a group of people.\n\n1173\n01:05:29.250 --> 01:05:31.930\nYou wanna talk to a couple\nof different computers.\n\n1174\n01:05:31.930 --> 01:05:37.560\nSo for example right now I'm streaming\nthis video live out to the Internet.\n\n1175\n01:05:37.560 --> 01:05:39.420\nThere's not one person watching,\n\n1176\n01:05:39.420 --> 01:05:41.500\nthere's actually about 60\npeople watching right now.\n\n1177\n01:05:41.500 --> 01:05:47.340\nSo that's going out to your laptops,\nyour desktops, your Roku devices.\n\n1178\n01:05:47.340 --> 01:05:51.470\nWhatever it is that you're using to watch\nthis channel, it's coming to you live.\n\n1179\n01:05:51.470 --> 01:05:54.200\nIt's the same communication,\nwe're sending the exact identical\n\n1180\n01:05:54.200 --> 01:05:57.120\ninformation to all 60 people\nwatching this live feed right now.\n\n1181\n01:05:57.120 --> 01:06:02.940\nAll right, but I'm having to send\nit 60 different times right.\n\n1182\n01:06:02.940 --> 01:06:06.870\nIf they're unicast it's being\nsend 60 different times.\n\n1183\n01:06:06.870 --> 01:06:09.790\nThat's not terribly efficient\nbecause that's all identical.\n\n1184\n01:06:09.790 --> 01:06:13.180\nWouldn't it be nice if we\ncould send that one stream.\n\n1185\n01:06:13.180 --> 01:06:17.120\nAnd then have it just go to the sixty\ndifferent people, not the whole Internet,\n\n1186\n01:06:17.120 --> 01:06:18.540\njust a group.\n\n1187\n01:06:18.540 --> 01:06:20.350\nThat's what multicast does.\n\n1188\n01:06:20.350 --> 01:06:24.500\nMulticast allows people to\nopt in to a communication\n\n1189\n01:06:24.500 --> 01:06:28.140\nthen start getting copies of it and\nthen when they are done they can opt out.\n\n1190\n01:06:28.140 --> 01:06:31.400\nPeople can join and un-join the multicast.\n\n1191\n01:06:31.400 --> 01:06:34.180\nMulticast uses group, multicast groups and\n\n1192\n01:06:34.180 --> 01:06:39.200\nyou have the IGMP the Internet multicast\ngroup protocol, group management\n\n1193\n01:06:39.200 --> 01:06:43.840\nprotocol and what it does is it lets you\nmanage people joining and un-joining\n\n1194\n01:06:43.840 --> 01:06:47.750\nfrom that communication, and getting\nout there and receiving that content.\n\n1195\n01:06:47.750 --> 01:06:51.890\nWell, in order to do that,\nthey create alias addresses.\n\n1196\n01:06:51.890 --> 01:06:56.360\nMulticast and IGMP specifically use\nalias addresses that people connect to.\n\n1197\n01:06:56.360 --> 01:07:01.890\nAnd so, when I send out that stream, I\ncould say that stream is on 224.0.0.1 and\n\n1198\n01:07:01.890 --> 01:07:06.860\nyou guys out there could start to\nreach out to 224.0.0.1 and connect.\n\n1199\n01:07:06.860 --> 01:07:09.680\nAnd now you'd be getting\na copy of that video stream.\n\n1200\n01:07:09.680 --> 01:07:11.110\nYou'd listen in on that IP.\n\n1201\n01:07:12.180 --> 01:07:13.760\nNow it doesn't work over the Internet.\n\n1202\n01:07:13.760 --> 01:07:18.252\nMost ISPs block that but inside of a\ncompany you can use it and it'll cut down\n\n1203\n01:07:18.252 --> 01:07:23.193\non bandwidth significantly when you're\ndoing like system imaging or whatever.\n\n1204\n01:07:23.193 --> 01:07:26.714\nYou know you're dropping a new operating\nsystem on 20 different machines,\n\n1205\n01:07:26.714 --> 01:07:30.444\nyou could send that one image and have it\ngo to all 20 machines as a single machine,\n\n1206\n01:07:30.444 --> 01:07:32.250\nreally cuts down on bandwidth.\n\n1207\n01:07:32.250 --> 01:07:37.400\nMulticast is really cool, but they\nneeded aliases, and so they blocked off\n\n1208\n01:07:37.400 --> 01:07:42.610\nmany class As, right, several class\nAs here to be able to designate that.\n\n1209\n01:07:42.610 --> 01:07:46.250\nWell, I say class As,\nseveral of the first octets, right?\n\n1210\n01:07:46.250 --> 01:07:51.250\n224 all the way through 239,\nthose could have been used as class As.\n\n1211\n01:07:51.250 --> 01:07:54.880\nEach of these is representing\n16.7 million IPs, so\n\n1212\n01:07:54.880 --> 01:07:59.170\nif we take 224 all the way to 239,\nthat is, what is that, 25?\n\n1213\n01:07:59.170 --> 01:08:01.491\nNo, it's 15, right?\n\n1214\n01:08:01.491 --> 01:08:04.930\nSee how bad my math can be today.\n\n1215\n01:08:04.930 --> 01:08:05.715\nActually, it's 16.\n\n1216\n01:08:05.715 --> 01:08:10.600\nSo there's 16 of these first\nnumbers here in the octet.\n\n1217\n01:08:10.600 --> 01:08:14.060\nAnd then after that these numbers what\nare left from the actual multicast host ID\n\n1218\n01:08:14.060 --> 01:08:16.240\nthose would be basically 16.7 [INAUDIBLE].\n\n1219\n01:08:16.240 --> 01:08:20.670\nSo whatever that is times\n16 is how many they wasted.\n\n1220\n01:08:20.670 --> 01:08:23.580\nBut multicasts do get used so\nat least there's that.\n\n1221\n01:08:23.580 --> 01:08:26.260\nIt gets even worse though\nwhen you get to the class Es.\n\n1222\n01:08:26.260 --> 01:08:28.440\nClass Es are the experimental IPs.\n\n1223\n01:08:28.440 --> 01:08:30.690\nThey set these aside for testing.\n\n1224\n01:08:30.690 --> 01:08:33.990\nAnd this is just everything else,\n240 on to the end.\n\n1225\n01:08:33.990 --> 01:08:34.610\nRight?\n\n1226\n01:08:34.610 --> 01:08:38.360\nSo here this giant chunk of IPs at the\nvery end they just said well we'll save\n\n1227\n01:08:38.360 --> 01:08:41.655\nthose for experiments, testing,\nyou know, whatever we want.\n\n1228\n01:08:41.655 --> 01:08:43.935\nWe just won't issue those, all right?\n\n1229\n01:08:43.935 --> 01:08:47.675\nSo when they made these decisions,\nthey weren't bad decisions.\n\n1230\n01:08:47.675 --> 01:08:48.465\nThey just didn't know.\n\n1231\n01:08:48.465 --> 01:08:49.825\nNobody knew back then.\n\n1232\n01:08:49.825 --> 01:08:52.075\nWe're talking about 40 years ago,\n30 years ago.\n\n1233\n01:08:52.075 --> 01:08:55.695\nPeople didn't know how big the Internet\nwas gonna be, how popular,\n\n1234\n01:08:55.695 --> 01:08:56.855\nhow many devices.\n\n1235\n01:08:56.855 --> 01:08:59.955\nThey didn't know that almost everybody\nwould have a laptop and a tablet and\n\n1236\n01:08:59.955 --> 01:09:02.370\na cell phone and\nneed all these different IPs.\n\n1237\n01:09:02.370 --> 01:09:03.480\nThey didn't know.\n\n1238\n01:09:03.480 --> 01:09:07.220\nAnd so setting this stuff aside made\nsense back then and that's what they did.\n\n1239\n01:09:07.220 --> 01:09:09.400\nSo that's kind of the rationale\nbehind what happened.\n\n1240\n01:09:10.430 --> 01:09:14.260\nUnder the class system,\nit was super easy to work with IPs.\n\n1241\n01:09:14.260 --> 01:09:18.160\nYou knew what the network ID was\njust based on that first octet.\n\n1242\n01:09:18.160 --> 01:09:21.070\nIf you saw that first octet was a 198,\n\n1243\n01:09:21.070 --> 01:09:25.530\nyou knew that fell in the class C range,\nand so you knew the first three octets for\n\n1244\n01:09:25.530 --> 01:09:28.200\nthe network ID, and\nthe fourth octet was the host ID.\n\n1245\n01:09:28.200 --> 01:09:31.780\nYou were able to determine\nthat really easily, okay.\n\n1246\n01:09:31.780 --> 01:09:33.290\nThe problem was just the shortage.\n\n1247\n01:09:33.290 --> 01:09:36.110\nIt needed some way to be\nable to get around that.\n\n1248\n01:09:36.110 --> 01:09:39.870\nAnd so they came up with some\nnew technologies that kind of\n\n1249\n01:09:39.870 --> 01:09:41.560\ngot us away from the class system.\n\n1250\n01:09:41.560 --> 01:09:47.390\nAnd so the class system has been abandoned\nfor about, probably about 16 years now.\n\n1251\n01:09:47.390 --> 01:09:52.120\nI think you still saw some systems kick\naround for a little while after that.\n\n1252\n01:09:52.120 --> 01:09:56.680\nBut any networking gear that's been\npurchased in the last 10 to 15 years\n\n1253\n01:09:56.680 --> 01:10:00.010\nis likely running in classless mode.\n\n1254\n01:10:00.010 --> 01:10:03.700\nYou have class full and classless modes.\n\n1255\n01:10:03.700 --> 01:10:07.930\nSo, let me just write\nthat terminology here.\n\n1256\n01:10:07.930 --> 01:10:11.950\nSo classless and classful.\n\n1257\n01:10:11.950 --> 01:10:17.070\nIf something is classful it\nrespects the class boundaries.\n\n1258\n01:10:17.070 --> 01:10:19.690\nAnd it has to adhere\nto those designations.\n\n1259\n01:10:19.690 --> 01:10:24.200\nBut if it's classless it\ndisregards the class boundaries.\n\n1260\n01:10:24.200 --> 01:10:26.050\nAnd that's where things get tricky.\n\n1261\n01:10:26.050 --> 01:10:29.260\nBecause if we disregard\nthe boundaries we can have\n\n1262\n01:10:29.260 --> 01:10:31.830\nnetworks that don't match\nup with the old rules.\n\n1263\n01:10:31.830 --> 01:10:37.229\nSo, for\nexample if I gave you an IP address\n\n1264\n01:10:37.229 --> 01:10:42.024\nthat was 10.73.1.211.\n\n1265\n01:10:42.024 --> 01:10:45.860\nAnd I just gave you that IP and\nthat's it, that's what I'm giving you.\n\n1266\n01:10:45.860 --> 01:10:50.330\nYou could look up at your classes and you\ncan say, okay, well based on that having\n\n1267\n01:10:50.330 --> 01:10:55.970\na 10 in the first octet, that's\nbetween 1 and 126, that's a Class A.\n\n1268\n01:10:55.970 --> 01:11:00.040\nSo I know the first octet is gonna\nbe part of the network ID, and\n\n1269\n01:11:00.040 --> 01:11:02.720\nall of the rest of it\nis part of the host ID.\n\n1270\n01:11:02.720 --> 01:11:10.694\nSo If I have two computers, I might have\nanother computer that is 10.73.41.9.\n\n1271\n01:11:10.694 --> 01:11:14.306\nSince they both start with a 10,\nand a 10 is a class A,\n\n1272\n01:11:14.306 --> 01:11:16.500\nthose two are on the same network.\n\n1273\n01:11:16.500 --> 01:11:20.700\nThose two systems can talk to each\nother without going through a router,\n\n1274\n01:11:20.700 --> 01:11:25.515\nbecause 10 is between one and\n126, a Class A and\n\n1275\n01:11:25.515 --> 01:11:29.300\nthat designates 255.0.0.0.\n\n1276\n01:11:29.300 --> 01:11:34.374\nThe first octet is the network ID,\nbut in a class list environment,\n\n1277\n01:11:34.374 --> 01:11:37.409\nthey might use a different subnet mask.\n\n1278\n01:11:37.409 --> 01:11:42.061\nThey might use 255.255.255.0, right?\n\n1279\n01:11:42.061 --> 01:11:43.306\nThat's a class C subnet mask, or\n\n1280\n01:11:43.306 --> 01:11:46.470\nwhat we'd normally associated\nwith a class C subnet mask.\n\n1281\n01:11:46.470 --> 01:11:51.420\nIf that's the case, the first three octets\nare part of the Network ID, and the last,\n\n1282\n01:11:51.420 --> 01:11:52.310\nthe fourth octet.\n\n1283\n01:11:52.310 --> 01:11:54.200\nThat one is the Host ID.\n\n1284\n01:11:54.200 --> 01:11:57.043\nAnd with this subnet mask,\nthings become different, don't they?\n\n1285\n01:11:57.043 --> 01:12:02.043\nNow, 10.73.1 is this guy's network ID.\n\n1286\n01:12:02.043 --> 01:12:04.930\n10.73.41 is this guy's network ID.\n\n1287\n01:12:04.930 --> 01:12:06.543\nThey're different.\n\n1288\n01:12:06.543 --> 01:12:09.209\nThey're gonna have to use\na router to talk to each other.\n\n1289\n01:12:09.209 --> 01:12:12.650\nAnd if there's no router present\nthey're not gonna be able to talk.\n\n1290\n01:12:12.650 --> 01:12:14.160\nAnd so I might be sitting\nthere scratching my head\n\n1291\n01:12:14.160 --> 01:12:15.640\nlike why won't these two computers talk?\n\n1292\n01:12:15.640 --> 01:12:17.520\nThey're right here on the same network.\n\n1293\n01:12:17.520 --> 01:12:20.510\nAnd it turns out that\nthe subnet mask is different.\n\n1294\n01:12:20.510 --> 01:12:26.050\nSo in a classless environment you\ncan't trust the first octet anymore.\n\n1295\n01:12:26.050 --> 01:12:28.020\nAll right?\nYou can't rely on that.\n\n1296\n01:12:28.020 --> 01:12:31.740\nBut in a classful environment,\nthe first octet means something.\n\n1297\n01:12:31.740 --> 01:12:34.430\nBut you really just don't see\nclassful environments anymore.\n\n1298\n01:12:34.430 --> 01:12:37.420\nThey're pretty much gone,\nand they're out of there.\n\n1299\n01:12:37.420 --> 01:12:39.050\nBut for\nthe exam we do need to remember them,\n\n1300\n01:12:39.050 --> 01:12:41.410\nbecause we do build off of\nthat with other things.\n\n1301\n01:12:41.410 --> 01:12:44.730\nNow, the numbers that they use for\nthe classful ranges, right?\n\n1302\n01:12:44.730 --> 01:12:48.400\nI said that it was It was 1-126.\n\n1303\n01:12:48.400 --> 01:12:50.710\nBecause zero couldn't be used, right?\n\n1304\n01:12:50.710 --> 01:12:53.881\nBut technically it does start at zero.\n\n1305\n01:12:53.881 --> 01:12:55.158\nI'll just add that, right.\n\n1306\n01:12:55.158 --> 01:12:59.709\nAnd then it was 128-191.\n\n1307\n01:12:59.709 --> 01:13:02.565\nAnd then it was 192-223.\n\n1308\n01:13:02.565 --> 01:13:04.390\nThose are the classes, right?\n\n1309\n01:13:04.390 --> 01:13:06.140\nSo that was an A.\n\n1310\n01:13:06.140 --> 01:13:08.100\nA B and a C, right?\n\n1311\n01:13:10.400 --> 01:13:13.110\nSo these were the first octets.\n\n1312\n01:13:16.000 --> 01:13:18.870\nThat's what those are right there,\nand that's how we can spot it.\n\n1313\n01:13:18.870 --> 01:13:22.400\nWell, did they just make those numbers up,\npull them out of a hat?\n\n1314\n01:13:22.400 --> 01:13:23.570\nNo.\n\n1315\n01:13:23.570 --> 01:13:27.600\nWhat they did is they based this\non the numbers written in binary.\n\n1316\n01:13:27.600 --> 01:13:32.450\nAnd they basically said, if I write\nzero in binary, it's eight zeroes.\n\n1317\n01:13:32.450 --> 01:13:36.730\nBut if I write other numbers,\nit starts to change, right.\n\n1318\n01:13:36.730 --> 01:13:39.970\nAnd they used the binary values\nto determine the classes.\n\n1319\n01:13:39.970 --> 01:13:42.880\nIf we were to convert these numbers,\nand I'm not gonna bore us to death by\n\n1320\n01:13:42.880 --> 01:13:44.850\nconverting all of these,\nit would drive us nuts.\n\n1321\n01:13:44.850 --> 01:13:49.460\nBut if we were to convert these, there's\na pattern that you start to notice.\n\n1322\n01:13:49.460 --> 01:13:54.520\nEvery number between 0 and\n126, when you write it\n\n1323\n01:13:54.520 --> 01:13:58.830\nin binary, the first digit,\nthe first of the eight octets,\n\n1324\n01:13:58.830 --> 01:14:04.130\nis a 0, and all of the other\noctets can be whatever they want.\n\n1325\n01:14:04.130 --> 01:14:07.539\nWith a number in between zero and\n\n1326\n01:14:07.539 --> 01:14:11.842\n126, it's gonna start with a zero.\n\n1327\n01:14:11.842 --> 01:14:16.683\nAll right, 128 to 191,\nnumbers in that range always start with.\n\n1328\n01:14:19.608 --> 01:14:21.780\n1-0.\n\n1329\n01:14:21.780 --> 01:14:22.502\nAnd then whatever.\n\n1330\n01:14:22.502 --> 01:14:24.670\nAll right?\n\n1331\n01:14:24.670 --> 01:14:28.170\nOne because 128 is the lowest number.\n\n1332\n01:14:28.170 --> 01:14:31.225\nAnd that first value is worth 128 points.\n\n1333\n01:14:31.225 --> 01:14:35.430\nSo if it's going to be a number bigger\nthan 128, we got to start with a one.\n\n1334\n01:14:36.990 --> 01:14:40.450\nBut that second number, that is worth 64.\n\n1335\n01:14:40.450 --> 01:14:45.380\nRemember our place holders,\nso it was 128, 64, 32, 16,\n\n1336\n01:14:45.380 --> 01:14:50.430\n8, 4, 2, 1, those were our place holders.\n\n1337\n01:14:50.430 --> 01:14:55.840\nThat first bit was worth 128, if I add\nthe second bit, which I've got a zero,\n\n1338\n01:14:55.840 --> 01:15:00.690\nbut if I made that a one,\nit would be 128 plus 64, that's 192.\n\n1339\n01:15:00.690 --> 01:15:05.600\nSo if I have a one zero the highest\nnumber I could write would be if it\n\n1340\n01:15:05.600 --> 01:15:10.624\nwas one zero and then everything\nelse was a one and that's 191.\n\n1341\n01:15:10.624 --> 01:15:13.620\nThat's how they picked these limits right?\n\n1342\n01:15:13.620 --> 01:15:18.570\nClass As,\nthe first binary bit was always a zero.\n\n1343\n01:15:18.570 --> 01:15:22.200\nA class B, the first binary\nbit was always a one zero.\n\n1344\n01:15:22.200 --> 01:15:26.360\nAnd at class C,\nthe first couple of binary bits were 110.\n\n1345\n01:15:26.360 --> 01:15:31.196\nTo start with 192, you would need a 1 and\n\n1346\n01:15:31.196 --> 01:15:34.860\na 1 in those first two bits.\n\n1347\n01:15:34.860 --> 01:15:39.740\nBut to keep it below 223, they had\nto take away that third bit, and so\n\n1348\n01:15:39.740 --> 01:15:42.490\nit's 110, and then whatever.\n\n1349\n01:15:42.490 --> 01:15:47.300\nSo you could really spot a class\nA if it was written binary.\n\n1350\n01:15:47.300 --> 01:15:49.120\nIf the very first value is a zero.\n\n1351\n01:15:49.120 --> 01:15:51.390\nYou knew you were dealing with class A.\n\n1352\n01:15:51.390 --> 01:15:54.550\nIf the first two values were a one\nzero you knew it was class B.\n\n1353\n01:15:54.550 --> 01:15:59.160\nAnd if the first three values were a one\none zero, you knew it was a class C.\n\n1354\n01:15:59.160 --> 01:16:02.570\nWhen a computer's receiving these bits\nthat meant that it just had a look at\n\n1355\n01:16:02.570 --> 01:16:05.840\na couple and it could make a decision and\nit was really fast.\n\n1356\n01:16:05.840 --> 01:16:07.370\nThat's why they picked these numbers.\n\n1357\n01:16:07.370 --> 01:16:08.980\nIt made sense at the time.\n\n1358\n01:16:08.980 --> 01:16:11.470\nSo today yeah,\nit looks like a bad decision.\n\n1359\n01:16:11.470 --> 01:16:13.410\nBut, it actually made a lot of sense,\nright?\n\n1360\n01:16:13.410 --> 01:16:18.180\nIt made a lot of sense back then because\nit was fast, it was efficient, and\n\n1361\n01:16:18.180 --> 01:16:19.730\nit was 4.3 billion IP addresses.\n\n1362\n01:16:19.730 --> 01:16:20.280\nIt was huge!\n\n1363\n01:16:20.280 --> 01:16:20.780\nBack then.\n\n1364\n01:16:21.950 --> 01:16:22.810\nToday, it's not.\n\n1365\n01:16:22.810 --> 01:16:23.340\nRight?\n\n1366\n01:16:23.340 --> 01:16:24.560\nSo, hindsight is 20/20, and\n\n1367\n01:16:24.560 --> 01:16:29.030\nwe'll see some things later that fix that,\nas we delve deeper into it.\n\n1368\n01:16:29.030 --> 01:16:31.350\nAll right.\n\n1369\n01:16:31.350 --> 01:16:36.450\nNow, what I've been talking about so\nfar have all been public IP addresses.\n\n1370\n01:16:36.450 --> 01:16:39.790\nThe IP addresses that we\nuse out on the Internet.\n\n1371\n01:16:39.790 --> 01:16:44.390\nBut there are special addresses that\nwe can use on our own internal network.\n\n1372\n01:16:44.390 --> 01:16:46.390\nAnd I wanna take a look at those next.\n\n1373\n01:16:46.390 --> 01:16:47.770\nBut let's stop and take a break.\n\n1374\n01:16:47.770 --> 01:16:51.510\nI think I've crammed our minds full of\na lot of stuff so far, so let's take\n\n1375\n01:16:51.510 --> 01:16:56.280\na pause here and when we get back we'll\nlook at those special private addresses.\n\n1376\n01:16:56.280 --> 01:17:01.602\nSo stay tuned, we'll be back after this.\n\n1377\n01:17:01.602 --> 01:17:07.865\n[SOUND] Welcome back everybody.\n\n1378\n01:17:07.865 --> 01:17:12.216\nSo in the last segment, we talked a little\nbit about the classes of IP addresses, and\n\n1379\n01:17:12.216 --> 01:17:15.467\nI mentioned the IANA that's\nhanding these addresses out, and\n\n1380\n01:17:15.467 --> 01:17:19.240\nhow they're all very managed and\nstructured and so on.\n\n1381\n01:17:19.240 --> 01:17:24.620\nWhat I wanna take a look at now, are some\nother special ranges of addresses.\n\n1382\n01:17:24.620 --> 01:17:27.990\nMost of what's been assigned,\nwe saw the Class A, B, C, D, E, right, and\n\n1383\n01:17:27.990 --> 01:17:29.830\nit covered pretty much the whole range.\n\n1384\n01:17:29.830 --> 01:17:31.440\nBut we saw where there were\nsome little exceptions.\n\n1385\n01:17:31.440 --> 01:17:36.030\nAnd one of those was the 127.0.0.0\nnetwork that was for a loopback, right.\n\n1386\n01:17:36.030 --> 01:17:39.690\nThat was for testing our connectivity and\nthings of that nature.\n\n1387\n01:17:39.690 --> 01:17:42.850\nSo that's a special\nkind of exempted range.\n\n1388\n01:17:42.850 --> 01:17:45.150\nThere's others that are like that.\n\n1389\n01:17:45.150 --> 01:17:49.920\nThey realized early on that not everyone\nwas going to be on the Internet.\n\n1390\n01:17:49.920 --> 01:17:54.110\nThat some people might want to have IP\naddresses assigned to machines, but\n\n1391\n01:17:54.110 --> 01:17:55.940\nnot have it on the Internet.\n\n1392\n01:17:55.940 --> 01:17:59.130\nAnd so having true uniqueness\nwasn't necessary anymore.\n\n1393\n01:17:59.130 --> 01:18:01.550\nIf you wanted to set up\na network in your house,\n\n1394\n01:18:01.550 --> 01:18:04.740\nthey didn't want you to have to\ngo to the IANA and register IPs.\n\n1395\n01:18:04.740 --> 01:18:08.010\nThen it wants you to have to be\nunique across the entire globe,\n\n1396\n01:18:08.010 --> 01:18:09.930\nbecause it was just in your house.\n\n1397\n01:18:09.930 --> 01:18:15.470\nThey set aside some special ranges\nwhich they call the private ranges.\n\n1398\n01:18:15.470 --> 01:18:17.480\nWhen you hear somebody\ntalk about IP addresses,\n\n1399\n01:18:17.480 --> 01:18:21.350\nthey may call them public IPs or\nprivate IPs.\n\n1400\n01:18:21.350 --> 01:18:25.830\nA public IP is one that is\nunique across the entire planet.\n\n1401\n01:18:25.830 --> 01:18:29.020\nNo one else is using that IP except for\nyou.\n\n1402\n01:18:29.020 --> 01:18:33.950\nPublic IPs cannot be shared and they're\nexclusively assigned to a single person.\n\n1403\n01:18:33.950 --> 01:18:36.930\nPublic IPs are the ones that\nare registered with the ARIN and\n\n1404\n01:18:36.930 --> 01:18:39.210\nthe other organizations like the IANA.\n\n1405\n01:18:40.540 --> 01:18:44.620\nPrivate IPs on the other hand, these\nare sometimes referred to as fake IPs.\n\n1406\n01:18:44.620 --> 01:18:46.620\nThey're not fake, they're real.\n\n1407\n01:18:46.620 --> 01:18:49.150\nBut they're not valid on the Internet.\n\n1408\n01:18:49.150 --> 01:18:52.010\nThey're special IP ranges\nthat have been set aside for\n\n1409\n01:18:52.010 --> 01:18:55.970\nyou to use in your work,\nin your home, in other places.\n\n1410\n01:18:55.970 --> 01:18:57.510\nAnd you don't have to register them.\n\n1411\n01:18:57.510 --> 01:18:59.380\nIf you wanna use them more power to you.\n\n1412\n01:18:59.380 --> 01:19:01.010\nYou can use them.\n\n1413\n01:19:01.010 --> 01:19:04.230\nBut the IANA won't guarantee uniqueness.\n\n1414\n01:19:04.230 --> 01:19:07.020\nMany other people might\nbe using these same IPs.\n\n1415\n01:19:07.020 --> 01:19:10.330\nSo these IPs are not\nallowed on the Internet.\n\n1416\n01:19:10.330 --> 01:19:13.790\nYou can use them in your private network,\nuse them as much as you want.\n\n1417\n01:19:13.790 --> 01:19:14.920\nBut they're not allowed on the Internet.\n\n1418\n01:19:16.330 --> 01:19:19.610\nSo these private ranges,\nthat's exactly how they get used.\n\n1419\n01:19:19.610 --> 01:19:21.060\nThey get used a lot.\n\n1420\n01:19:21.060 --> 01:19:23.620\nI use them in my house,\nI'm using them here in the studio.\n\n1421\n01:19:23.620 --> 01:19:27.280\nYou guys are likely using them in your\nhouse too, you may or may not know that,\n\n1422\n01:19:27.280 --> 01:19:29.440\nbut you very well are using them.\n\n1423\n01:19:29.440 --> 01:19:32.310\nAnd that's because you don't want\nto have to reach out to some\n\n1424\n01:19:32.310 --> 01:19:34.800\ngoverning body every time you add\na new computer in your house,\n\n1425\n01:19:34.800 --> 01:19:36.740\nevery time you buy a new tablet or\na phone.\n\n1426\n01:19:36.740 --> 01:19:38.550\nSo you use private ranges.\n\n1427\n01:19:38.550 --> 01:19:40.430\nNow I said they're not\nallowed on the Internet.\n\n1428\n01:19:40.430 --> 01:19:42.810\nYou guys are obviously on the Internet\nif you're watching this, so\n\n1429\n01:19:42.810 --> 01:19:43.960\nhow does that work?\n\n1430\n01:19:43.960 --> 01:19:46.920\nWell, you're more than\nlikely using a router or\n\n1431\n01:19:46.920 --> 01:19:50.530\na firewall that does what's called\nnetwork address translation.\n\n1432\n01:19:50.530 --> 01:19:54.650\nYour router or your firewall\nhas a true public IP address.\n\n1433\n01:19:54.650 --> 01:19:56.280\nOne that's assigned to it.\n\n1434\n01:19:56.280 --> 01:20:01.459\nAnd all of your private IP addresses in\nyour house or work, those get translated.\n\n1435\n01:20:01.459 --> 01:20:05.010\nAs you pass through that firewall it\ncoverts it to be the firewall's address.\n\n1436\n01:20:05.010 --> 01:20:08.316\nSo it looks like the firewall is out\nthere talking to the Internet and\n\n1437\n01:20:08.316 --> 01:20:10.001\nnot all your individual devices.\n\n1438\n01:20:10.001 --> 01:20:12.568\nSo your private addresses are hidden,\n\n1439\n01:20:12.568 --> 01:20:16.430\nthey're hidden and\nunique just within your house.\n\n1440\n01:20:16.430 --> 01:20:20.840\nOther people can be duplicating those IPs,\nbut they're hiding theirs also.\n\n1441\n01:20:20.840 --> 01:20:23.740\nSo on the Internet,\nwe don't see these duplicates.\n\n1442\n01:20:23.740 --> 01:20:24.920\nAnd in fact, if you try and\n\n1443\n01:20:24.920 --> 01:20:29.190\nuse one of these fake, shouldn't say that,\nuse one of the private ranges, and\n\n1444\n01:20:29.190 --> 01:20:32.300\ngo out to the internet,\nthe ISP is the internet service providers,\n\n1445\n01:20:32.300 --> 01:20:35.060\nthey're actually required to drop that\ntraffic so they just throw it away.\n\n1446\n01:20:35.060 --> 01:20:36.560\nIt won't even go anywhere.\n\n1447\n01:20:36.560 --> 01:20:40.626\nIt'll hit the internet service provider\nand they will throw it away, all right?\n\n1448\n01:20:40.626 --> 01:20:42.110\nSo what are the IP ranges?\n\n1449\n01:20:42.110 --> 01:20:44.260\nWell, there's a couple of different ones.\n\n1450\n01:20:44.260 --> 01:20:49.620\nThey set aside one Class A,\na couple of Class B's and\n\n1451\n01:20:49.620 --> 01:20:53.510\ncouple of Class C's for\nyou to use at your leisure.\n\n1452\n01:20:53.510 --> 01:20:55.130\nRight?\nHowever you want.\n\n1453\n01:20:55.130 --> 01:20:57.360\nThese are all designated in RFC 1918.\n\n1454\n01:20:57.360 --> 01:21:01.330\nNow normally I don't harp\nover RFC numbers, but\n\n1455\n01:21:01.330 --> 01:21:06.330\nthis one I'm going to because sometimes\npeople call them private IPs.\n\n1456\n01:21:06.330 --> 01:21:09.624\nOther times people will\ncall them RFC 1918 IPs.\n\n1457\n01:21:09.624 --> 01:21:11.709\nCisco is really bad about that.\n\n1458\n01:21:11.709 --> 01:21:13.860\nI shouldn't say bad,\nit's just a different way of doing things.\n\n1459\n01:21:13.860 --> 01:21:17.310\nCisco will all the time say,\noh yeah, our RFC 1918 addresses.\n\n1460\n01:21:17.310 --> 01:21:20.910\nAnd you've got to know in your mind, oh,\nthey're talking about private addresses.\n\n1461\n01:21:20.910 --> 01:21:24.840\nSo the private IP addresses\nare pretty easy to handle.\n\n1462\n01:21:24.840 --> 01:21:29.944\nWith Class A's, they set aside one\nclass A, the ten dot, all right?\n\n1463\n01:21:29.944 --> 01:21:33.214\nSo if you ever see an address\nthat starts with ten dot,\n\n1464\n01:21:33.214 --> 01:21:35.740\nthat's in this private class A.\n\n1465\n01:21:35.740 --> 01:21:39.470\nIt's not registered with the INA, it's not\nallowed to go out to the internet, but\n\n1466\n01:21:39.470 --> 01:21:42.850\nyou can use it as much as you want and\nnot have to worry about it.\n\n1467\n01:21:42.850 --> 01:21:44.650\nThe IP address on my laptop right now,\n\n1468\n01:21:44.650 --> 01:21:49.510\nif I were to pull up my IP,\nit actually is in that range.\n\n1469\n01:21:49.510 --> 01:21:54.110\nIt'll be a 10.1.230 dot\nsomething is what I am using.\n\n1470\n01:21:54.110 --> 01:21:56.920\nThose ranges are right there,\nwe use them here in the building, and\n\n1471\n01:21:56.920 --> 01:22:01.290\nwe didn't have to go purchase or\nrent or register these IP's.\n\n1472\n01:22:01.290 --> 01:22:03.960\nSo Class A,\nanything that starts with ten dot.\n\n1473\n01:22:05.060 --> 01:22:08.670\nFor Class B,\nthey've set aside more than one.\n\n1474\n01:22:08.670 --> 01:22:11.240\nI'm sure they wanted to set aside more\nthan one Class A but they couldn't,\n\n1475\n01:22:11.240 --> 01:22:12.830\ncuz there's just not enough of them.\n\n1476\n01:22:12.830 --> 01:22:14.940\nBut on the Class B side,\nthere were plenty.\n\n1477\n01:22:14.940 --> 01:22:22.611\nAnd so, what they did is they set aside\n172.16 all the way through 172.31.\n\n1478\n01:22:22.611 --> 01:22:26.470\nThat is a total of sixteen\nof these Class B's.\n\n1479\n01:22:26.470 --> 01:22:32.400\nSo, you could use 172.16 dot whatever\ndot whatever, that would be 65,000 IP's.\n\n1480\n01:22:32.400 --> 01:22:35.895\nAnd then you could 172.17, and 172.18 and\n\n1481\n01:22:35.895 --> 01:22:40.545\n19, all the way up to 31, so\nall of those being class B's available.\n\n1482\n01:22:40.545 --> 01:22:42.986\n65,000 IP's a pop, right?\n\n1483\n01:22:42.986 --> 01:22:44.020\nNice big networks.\n\n1484\n01:22:44.020 --> 01:22:44.590\nThere's 16 of them.\n\n1485\n01:22:45.970 --> 01:22:50.970\nAnd then they set aside some class C's,\nand they set aside a lot of these,\n\n1486\n01:22:50.970 --> 01:22:52.108\n256 of them.\n\n1487\n01:22:52.108 --> 01:22:59.138\n192.168.0 all the way through 192.168.255,\nall right?\n\n1488\n01:22:59.138 --> 01:23:01.540\nThat might sound familiar to you.\n\n1489\n01:23:01.540 --> 01:23:06.444\nOn a home router, the vendors that\nare out there, Linksys, Netgear, Belkin,\n\n1490\n01:23:06.444 --> 01:23:10.214\nBuffalo, those guys,\nthey usually use one of these ranges.\n\n1491\n01:23:10.214 --> 01:23:14.081\nYou'll see 192.168.0.0,\n\n1492\n01:23:14.081 --> 01:23:19.999\n192.168.1.0, 192.168.100.0.\n\n1493\n01:23:19.999 --> 01:23:21.723\nThose three you see them all the time.\n\n1494\n01:23:21.723 --> 01:23:23.800\nLinksys, NETGEAR, those guys use them.\n\n1495\n01:23:23.800 --> 01:23:26.795\nSo most people in their houses,\nthey're using using a range right there.\n\n1496\n01:23:26.795 --> 01:23:29.133\nIf you ever looked at it and\nsaid, 192.168,\n\n1497\n01:23:29.133 --> 01:23:31.109\nwhy did they pick\nsomething hard like that?\n\n1498\n01:23:31.109 --> 01:23:34.064\nWhy didn't they pick something\neasy like 1.1.1, right?\n\n1499\n01:23:34.064 --> 01:23:35.620\nWhy does it gotta be this craziness?\n\n1500\n01:23:35.620 --> 01:23:39.560\nAnd the reason is,\nit's got to fall in the Class C range,\n\n1501\n01:23:39.560 --> 01:23:44.350\nwhich means the first number has\nto be between 192 and 223, right?\n\n1502\n01:23:45.620 --> 01:23:48.290\nSo they picked 192 right at the beginning.\n\n1503\n01:23:48.290 --> 01:23:50.378\nWell, why 168?\n\n1504\n01:23:50.378 --> 01:23:51.937\nWhy that number?\n\n1505\n01:23:51.937 --> 01:23:58.640\nWell, 168 falls somewhere close to\nthe middle of the available pool.\n\n1506\n01:23:58.640 --> 01:24:03.290\nThe pool for that octet would be 255 and\nif you were to divide that in half,\n\n1507\n01:24:03.290 --> 01:24:07.380\nwell it's 127, 128 right in that range.\n\n1508\n01:24:07.380 --> 01:24:11.160\nSo, it's semi-close to that, but\nit's not exactly in the middle, so\n\n1509\n01:24:11.160 --> 01:24:12.420\nwhere did that one come from?\n\n1510\n01:24:12.420 --> 01:24:16.250\nAnd this is another one of those where\nit's all based on the bits that would be\n\n1511\n01:24:16.250 --> 01:24:18.760\nones versus zeroes to designate that.\n\n1512\n01:24:18.760 --> 01:24:21.735\nSo, after that, though, you can do\nwhatever you want for the last two.\n\n1513\n01:24:21.735 --> 01:24:25.753\nIt doesn't make a whole lot of sense to\nkind of extrapolate where that came from,\n\n1514\n01:24:25.753 --> 01:24:26.887\nyou just memorize it.\n\n1515\n01:24:26.887 --> 01:24:32.791\n192.168, memorize that and\nremember it, and 172.16 through 31.\n\n1516\n01:24:32.791 --> 01:24:34.450\nClass As are easy, just 10.\n\n1517\n01:24:34.450 --> 01:24:37.383\n10 dot whatever is a Class A, all right?\n\n1518\n01:24:37.383 --> 01:24:41.764\nBe careful with these,\nbecause there's private addresses and\n\n1519\n01:24:41.764 --> 01:24:46.720\nthere's public addresses that\nare right next to them, all right.\n\n1520\n01:24:46.720 --> 01:24:50.720\nSo for class A's,\nyou could have a 9 dot something or\n\n1521\n01:24:50.720 --> 01:24:53.720\nan 11 dot something, and\nthose are public addresses.\n\n1522\n01:24:53.720 --> 01:24:56.410\nBut 10 dot something, that's private.\n\n1523\n01:24:56.410 --> 01:25:02.609\nWith a class B, I could have 172.15 dot\nsomething and that would be public.\n\n1524\n01:25:02.609 --> 01:25:07.978\nOr 172.16.32 and that would be public.\n\n1525\n01:25:07.978 --> 01:25:13.450\nBut 172.16.31 wait,\nI'm sorry I'm getting this wrong.\n\n1526\n01:25:13.450 --> 01:25:16.936\n172.16, right, that's gonna be my private.\n\n1527\n01:25:16.936 --> 01:25:23.295\n172.32 or 172.15,\nthose are gonna be public.\n\n1528\n01:25:23.295 --> 01:25:26.430\nThey're really close, so\nwe've gotta memorize each octet.\n\n1529\n01:25:26.430 --> 01:25:30.096\nDon't memorize just that first digit,\n172, cuz that's not enough.\n\n1530\n01:25:30.096 --> 01:25:32.408\nThere's valid internet addresses.\n\n1531\n01:25:32.408 --> 01:25:35.054\n172.200 dot something, dot something,\n\n1532\n01:25:35.054 --> 01:25:37.767\nthat's a valid public internet address,\nright?\n\n1533\n01:25:37.767 --> 01:25:40.530\nSo, make sure you know that second octet.\n\n1534\n01:25:40.530 --> 01:25:41.890\nClass C's are the hardest right?\n\n1535\n01:25:41.890 --> 01:25:45.521\nIts 192.168 dot whatever.\n\n1536\n01:25:45.521 --> 01:25:49.097\nSo 192.167 thats public.\n\n1537\n01:25:49.097 --> 01:25:49.664\nThat's in use.\n\n1538\n01:25:49.664 --> 01:25:51.342\nThat's out there on the internet.\n\n1539\n01:25:51.342 --> 01:25:55.298\n192.169 that's valid.\n\n1540\n01:25:55.298 --> 01:25:56.106\nThat's public.\n\n1541\n01:25:56.106 --> 01:25:57.460\nIt's out there on the internet.\n\n1542\n01:25:57.460 --> 01:26:00.771\nYou'll find the U.S.\nmilitary uses a lot of 192 addresses.\n\n1543\n01:26:00.771 --> 01:26:02.377\nThat's what they pulled early on.\n\n1544\n01:26:02.377 --> 01:26:04.745\nAnd so, those addresses you might try and\nuse them and\n\n1545\n01:26:04.745 --> 01:26:08.070\nthey duplicate sites that are actually\nout there on the internet.\n\n1546\n01:26:08.070 --> 01:26:11.875\nAnd if you do that, you won't be able\nto get routed on the internet and\n\n1547\n01:26:11.875 --> 01:26:16.470\nyou won't be able to contact other sites\nthat are actually using those IP's.\n\n1548\n01:26:16.470 --> 01:26:18.720\nSo you do have to be careful about that,\ntoo.\n\n1549\n01:26:18.720 --> 01:26:20.860\nBut these are the private ranges,\n\n1550\n01:26:20.860 --> 01:26:24.170\nyou can use them however you want,\ninside of your own environment.\n\n1551\n01:26:24.170 --> 01:26:26.170\nYou don't have to register\nthem with the IANA.\n\n1552\n01:26:28.150 --> 01:26:31.640\nThere's one more range I wanna mention,\nand this is a weird one, all right?\n\n1553\n01:26:31.640 --> 01:26:36.841\nThis one is not actually defined in the\nRFC standard as being private, but it is.\n\n1554\n01:26:36.841 --> 01:26:41.715\nIt's the 169.254 Class B.\n\n1555\n01:26:41.715 --> 01:26:48.160\n169.254, that is not\ncovered here in this range.\n\n1556\n01:26:48.160 --> 01:26:52.840\nClass B is the first octet\nruns from 128 through 191, so\n\n1557\n01:26:52.840 --> 01:26:56.480\n169 falls in that range but\nit's not in this private range.\n\n1558\n01:26:57.530 --> 01:27:02.205\nBut 169.254 dot something dot something\nis designed to be used privately.\n\n1559\n01:27:02.205 --> 01:27:05.980\nIt's a special range set aside for\nwhats called APIPA,\n\n1560\n01:27:07.810 --> 01:27:12.340\nthat stands for\nautomatic private IP addressing.\n\n1561\n01:27:13.390 --> 01:27:18.560\nA lot of networks use a server\ncalled dynamic post configuration\n\n1562\n01:27:18.560 --> 01:27:20.060\nprotocol or DATP.\n\n1563\n01:27:20.060 --> 01:27:22.510\nSo you may have a DHCP server so\n\n1564\n01:27:22.510 --> 01:27:25.630\nwhen your computer boots up,\nit doesn't have to have an IP.\n\n1565\n01:27:25.630 --> 01:27:28.220\nIt can boot up and\njust ask the network and say,\n\n1566\n01:27:28.220 --> 01:27:30.890\nhey can somebody just give\nme an IP address to use?\n\n1567\n01:27:30.890 --> 01:27:34.800\nAnd the DHCP server will give them\nan address and then they can then work.\n\n1568\n01:27:34.800 --> 01:27:37.430\nSo, our computers don't actually\nhave to know an IP at boot time.\n\n1569\n01:27:37.430 --> 01:27:39.150\nThey can just get one from the network.\n\n1570\n01:27:39.150 --> 01:27:40.400\nThat's what DHCP does.\n\n1571\n01:27:41.600 --> 01:27:44.950\nBut the problem there is,\nwhat if the DHCP server fails?\n\n1572\n01:27:44.950 --> 01:27:46.620\nIf it goes offline?\n\n1573\n01:27:46.620 --> 01:27:50.550\nNow our computers boot up and\nthey can't get an address, and\n\n1574\n01:27:50.550 --> 01:27:51.320\nthey're dead in the water.\n\n1575\n01:27:51.320 --> 01:27:53.430\nThey can't talk to the network.\n\n1576\n01:27:53.430 --> 01:27:57.040\nSo they created a APIPA to try and\nhelp with that.\n\n1577\n01:27:57.040 --> 01:28:00.630\nIf your computer boots up and\ndoesn't get an address,\n\n1578\n01:28:00.630 --> 01:28:05.610\nit can use APIPA to create its own,\njust to pick one out of thin air.\n\n1579\n01:28:05.610 --> 01:28:07.456\nBut if you're just picking\none out of thin air,\n\n1580\n01:28:07.456 --> 01:28:09.501\nhow do you get your other\nclients to still talk to it?\n\n1581\n01:28:09.501 --> 01:28:12.209\nAPIPA says we'll pull\nthem from the same range.\n\n1582\n01:28:12.209 --> 01:28:14.584\nSo they set aside one Class B.\n\n1583\n01:28:14.584 --> 01:28:19.927\nYou can spot it really easy cuz\nit starts with 169.254.0.0 and\n\n1584\n01:28:19.927 --> 01:28:24.594\nit goes all the way\nthrough 169.254.255.255.\n\n1585\n01:28:24.594 --> 01:28:31.925\nAnd the subnet Mask: is 255.255.0.0,\nit's a class B.\n\n1586\n01:28:31.925 --> 01:28:35.080\nSo, 169.254 is the network.\n\n1587\n01:28:35.080 --> 01:28:38.340\nAnd 0.0, that's the host, right,\nall the way through 255.255 for the host.\n\n1588\n01:28:39.460 --> 01:28:44.993\nSo you could have 16,500\ndifferent hosts on this network.\n\n1589\n01:28:44.993 --> 01:28:47.432\nAnd they'll all start with 169.254.\n\n1590\n01:28:47.432 --> 01:28:51.530\nSo if your DHCP server fails, they'll\nstill be able to talk to each other.\n\n1591\n01:28:51.530 --> 01:28:55.420\nAnd the idea is that if your DHP server\nfails, your network can still function\n\n1592\n01:28:55.420 --> 01:28:58.190\nwhile you go and fix it, right,\nyou can go and fix your DHP server, get\n\n1593\n01:28:58.190 --> 01:29:03.070\nit back online and now you're in business\nand you get your regular IPs back.\n\n1594\n01:29:03.070 --> 01:29:06.251\nThe biggest problem with APIPA though\nis you don't get a default gateway,\n\n1595\n01:29:06.251 --> 01:29:07.420\nyou don't get a router IP.\n\n1596\n01:29:07.420 --> 01:29:10.155\nSo you're not going to be able to\nget out to the Internet, right?\n\n1597\n01:29:10.155 --> 01:29:11.679\nYou're gonna be stuck local, but\n\n1598\n01:29:11.679 --> 01:29:14.947\nat least you can communicate with\nlocal machines to continue doing work.\n\n1599\n01:29:14.947 --> 01:29:18.161\nYou're not gonna be able to browse the\nInternet and go to Ebay or whatever, but\n\n1600\n01:29:18.161 --> 01:29:21.675\nat least you'll be able to share files and\nuse the network printers and so on.\n\n1601\n01:29:21.675 --> 01:29:26.868\nBecause those devices will lose their\naddresses and get 169.254 addresses also.\n\n1602\n01:29:26.868 --> 01:29:30.200\nAnd you can find them on the network and\ncommunicate, and work as expected.\n\n1603\n01:29:31.270 --> 01:29:34.482\nSo that's another special range that's,\nkind of, mixed in there.\n\n1604\n01:29:34.482 --> 01:29:36.240\nThere's a lot of special stuff, right?\n\n1605\n01:29:36.240 --> 01:29:41.530\nThe IPv4 address space, it's made up of\na lot of weird little segments like this.\n\n1606\n01:29:41.530 --> 01:29:45.910\nFor the exam,\nyou need to remember the public, class A,\n\n1607\n01:29:45.910 --> 01:29:50.240\nclass B, class C, and\nclass D ranges, right.\n\n1608\n01:29:50.240 --> 01:29:54.303\nClass D that was the multicast range, and\nI'll post these notes with the show so\n\n1609\n01:29:54.303 --> 01:29:55.343\nyou'll have them.\n\n1610\n01:29:55.343 --> 01:29:58.920\nDon't feel like you have to jot all these\ndown, but it'll be posted on there.\n\n1611\n01:29:58.920 --> 01:30:03.950\nBut make sure you know,\njust memorize, class A, B, C, and D.\n\n1612\n01:30:03.950 --> 01:30:06.050\nE doesn't normally show up on the exam.\n\n1613\n01:30:06.050 --> 01:30:06.827\nIt doesn't hurt to memorize it.\n\n1614\n01:30:06.827 --> 01:30:10.150\nIt's good knowledge to have, but\nthat one usually doesn't show up.\n\n1615\n01:30:11.460 --> 01:30:15.890\nThe other thing to remember\nare the private ranges, these exceptions.\n\n1616\n01:30:15.890 --> 01:30:17.152\nThe RFC918 ones.\n\n1617\n01:30:17.152 --> 01:30:19.776\nThe ones that are set aside for\nour private use, and\n\n1618\n01:30:19.776 --> 01:30:22.110\nwe need to memorize those ranges too.\n\n1619\n01:30:22.110 --> 01:30:25.700\nThe Class A, B, and\nC that are set aside for those.\n\n1620\n01:30:25.700 --> 01:30:30.660\nAnd then lastly, the other exception\nis APIPA and the loopback, right?\n\n1621\n01:30:30.660 --> 01:30:34.079\nSo APIPA I've got right there,\n169.254, and\n\n1622\n01:30:34.079 --> 01:30:39.516\nthe loopback I put way up here somewhere,\nthere we go, 127.,whatever, right?\n\n1623\n01:30:39.516 --> 01:30:41.931\nThose are the ranges.\n\n1624\n01:30:41.931 --> 01:30:48.020\nOkay, so in this episode we got a chance\nto take a look at the IPv4 address space.\n\n1625\n01:30:48.020 --> 01:30:51.092\nHow the number is written,\nwhere the number comes from,\n\n1626\n01:30:51.092 --> 01:30:53.908\nwe got a chance to see a subnet mask and\nhow it works for\n\n1627\n01:30:53.908 --> 01:30:56.919\ndetermining what's a network ID and\nwhat's a host ID.\n\n1628\n01:30:56.919 --> 01:31:00.794\nAnd we got a chance to see all of\nour classes the class A,B,C,D,E and\n\n1629\n01:31:00.794 --> 01:31:05.640\nthose variations there and a couple of\nother neat little exceptions to that.\n\n1630\n01:31:05.640 --> 01:31:08.370\nThere is still a lot more.\n\n1631\n01:31:08.370 --> 01:31:10.353\nWay more than I can fit in one episode.\n\n1632\n01:31:10.353 --> 01:31:12.678\nSo, while we covered a good bit of stuff,\n\n1633\n01:31:12.678 --> 01:31:15.540\nwe haven't touch classlist\ncommunications yet.\n\n1634\n01:31:15.540 --> 01:31:17.369\nWe're going to get a chance to see that.\n\n1635\n01:31:17.369 --> 01:31:19.270\nSubnetting, manipulation of subnet masks.\n\n1636\n01:31:19.270 --> 01:31:21.410\nThat's some really powerful stuff.\n\n1637\n01:31:21.410 --> 01:31:24.430\nSo, this is gonna be a multi-part series.\n\n1638\n01:31:24.430 --> 01:31:28.170\nWe've covered the basics here then we're\ngoing to move on to more advanced things.\n\n1639\n01:31:28.170 --> 01:31:29.560\nWe'll do like an intermediate show and\n\n1640\n01:31:29.560 --> 01:31:34.330\nan advanced show after that, we get into\nreally hard core nitty gritty stuff.\n\n1641\n01:31:34.330 --> 01:31:36.631\nBut if you just watched all this and\nit blew your mind,\n\n1642\n01:31:36.631 --> 01:31:38.225\ndon't move on to the next shows yet.\n\n1643\n01:31:38.225 --> 01:31:40.310\nWell, you can move on to\nshows of other topics, but\n\n1644\n01:31:40.310 --> 01:31:42.630\ndon't move on to the next IP shows yet.\n\n1645\n01:31:42.630 --> 01:31:45.280\nMake sure you grasp these concepts.\n\n1646\n01:31:45.280 --> 01:31:47.529\nCuz if you don't\nunderstand these concepts,\n\n1647\n01:31:47.529 --> 01:31:51.001\nthe other ones are just going to get\nyou more and more confused, right?\n\n1648\n01:31:51.001 --> 01:31:52.710\nSo understand these basics, and\n\n1649\n01:31:52.710 --> 01:31:56.580\nthen we'll build on top of them\nin the next episode as we go on.\n\n1650\n01:31:56.580 --> 01:31:58.200\nNow if you have questions,\n\n1651\n01:31:58.200 --> 01:32:02.550\nif this gets really confusing and\njust not making sense, let us know.\n\n1652\n01:32:02.550 --> 01:32:06.080\nLive during the show you\ncan go to itpro.tv/live.\n\n1653\n01:32:06.080 --> 01:32:08.630\nAnd you'll see the chat box\nright beneath the video,\n\n1654\n01:32:08.630 --> 01:32:12.160\nyou can post your questions there and\nwe monitor and answer during the show.\n\n1655\n01:32:12.160 --> 01:32:15.430\nBut if you're watching this recorded,\nwe might not be live, right.\n\n1656\n01:32:15.430 --> 01:32:18.330\nSo in those cases make sure\nto use our Q and A forums.\n\n1657\n01:32:18.330 --> 01:32:22.480\nAt the top of every page you'll see a link\nthat says Q and A, just click on it.\n\n1658\n01:32:22.480 --> 01:32:25.080\nIt'll take you into the forums and\nyou can post your question there and\n\n1659\n01:32:25.080 --> 01:32:26.903\nwe monitor and\nanswer that after hours, right.\n\n1660\n01:32:26.903 --> 01:32:30.650\nWe see them all the time, we might not get\nback to you right away, but we do respond.\n\n1661\n01:32:30.650 --> 01:32:33.830\nSo that you get the answers you need,\nand to help you understand that.\n\n1662\n01:32:33.830 --> 01:32:35.830\nThis is one of the hardest\nthings to understand,\n\n1663\n01:32:35.830 --> 01:32:37.050\nespecially when we get to subnetting.\n\n1664\n01:32:37.050 --> 01:32:40.590\nCuz there's just so many new numbers and\na different way of looking at things, and\n\n1665\n01:32:40.590 --> 01:32:41.940\nit's challenging.\n\n1666\n01:32:41.940 --> 01:32:45.728\nI remember when I was learning\nthis about 15 years ago, and\n\n1667\n01:32:45.728 --> 01:32:47.966\nhow much of a struggle it was for me.\n\n1668\n01:32:47.966 --> 01:32:50.370\nBut once you learn it, it kinda clicks.\n\n1669\n01:32:50.370 --> 01:32:53.720\nAnd then it becomes a heck of a lot\neasier, and the rest of your life,\n\n1670\n01:32:53.720 --> 01:32:57.470\nit'll be a skill that you've got, some\nfoundational knowledge that you know, and\n\n1671\n01:32:57.470 --> 01:33:00.250\nit'll really help with your\nunderstanding of networks.\n\n1672\n01:33:00.250 --> 01:33:04.638\nAll right, well I hope you guys enjoyed\nthe show, signing off for ITProTV,\n\n1673\n01:33:04.638 --> 01:33:07.258\nI'm Don Pazet, and\nI will see you next time.\n\n1674\n01:33:07.258 --> 01:33:13.659\n[MUSIC]\n\n",
          "vimeoId": "109692163"
        },
        {
          "description": "In this episode Don covers the characteristics of IPv6 addressing. He begins by comparing IPv6 to IPv4 address and how they differ. He discusses the various classes of IPv6 addresses such as the private, loopback, multicast and link-local addresses.",
          "length": "3360",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/1-3-IPv6-Addressing.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/1-3-IPv6-Addressing-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/1-3-IPv6-Addressing-sm.jpg",
          "title": "IPv6 Addressing",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:15.611 --> 00:00:22.993\n[SOUND]\n\n3\n00:00:22.993 --> 00:00:33.461\n[MUSIC]\n\n4\n00:00:33.461 --> 00:00:36.237\nAll right, good morning,\ngood afternoon, and good evening, and\n\n5\n00:00:36.237 --> 00:00:38.099\nwelcome back to another\nepisode of ITProTV.\n\n6\n00:00:38.099 --> 00:00:39.870\nI'm your host, Don Pezet.\n\n7\n00:00:39.870 --> 00:00:43.770\nBack again with another exciting\nepisode of Comp Tia Network Plus.\n\n8\n00:00:43.770 --> 00:00:48.770\nWe covered in a previous episode\nobjective 1.3 which is IP addressing.\n\n9\n00:00:48.770 --> 00:00:54.751\nIn that episode we spent almost our\nentire time talking about IPv4.\n\n10\n00:00:54.751 --> 00:00:58.223\nThe standard 32 bit IP addressing\nscheme used on the Internet and\n\n11\n00:00:58.223 --> 00:01:00.820\nin networks across the world.\n\n12\n00:01:00.820 --> 00:01:04.940\nBut in today's episode,\nwe're gonna continue on with 1.3.\n\n13\n00:01:04.940 --> 00:01:09.810\nSo it's still 1.3, explain the purpose and\nproperties of IP addressing.\n\n14\n00:01:09.810 --> 00:01:13.750\nBut this time we're gonna jump into IPv6,\nall right?\n\n15\n00:01:13.750 --> 00:01:17.320\nNotice in the objectives, they want us\nto be aware of things like classes,\n\n16\n00:01:17.320 --> 00:01:20.190\npublic versus private, CIDR.\n\n17\n00:01:20.190 --> 00:01:22.449\nYou'll see some of the other different\nthings that they mentioned in here.\n\n18\n00:01:22.449 --> 00:01:25.189\nMost of that all pertains to IPv4, but\n\n19\n00:01:25.189 --> 00:01:30.346\nthey also want you to understand\nthe difference between IPv4 and IPv6.\n\n20\n00:01:30.346 --> 00:01:32.560\nNow, they don't want you\nto be an expert on it.\n\n21\n00:01:32.560 --> 00:01:35.090\nYou're not supposed to be a genius on it,\nbut they do want you to be\n\n22\n00:01:35.090 --> 00:01:39.390\nfamiliar with it because it's the new and\ncoming replacement for IPv4.\n\n23\n00:01:39.390 --> 00:01:40.050\nAll right?\n\n24\n00:01:40.050 --> 00:01:42.640\nSo let’s talk a little bit about IPv6.\n\n25\n00:01:42.640 --> 00:01:43.560\nWhat it is.\n\n26\n00:01:43.560 --> 00:01:44.100\nHow it works.\n\n27\n00:01:44.100 --> 00:01:45.510\nWhat the addresses look like.\n\n28\n00:01:45.510 --> 00:01:48.304\nAnd let's get our first exposure to it.\n\n29\n00:01:48.304 --> 00:01:49.430\nAll right.\nWell let’s first off,\n\n30\n00:01:49.430 --> 00:01:51.940\nwhy do we even have IPv6?\n\n31\n00:01:51.940 --> 00:01:53.170\nWhat’s the deal?\n\n32\n00:01:53.170 --> 00:01:56.846\nWell IPv4 was developed a long time ago.\n\n33\n00:01:56.846 --> 00:02:00.540\nNow late 70s, early 80s,\nit's really been around a long time.\n\n34\n00:02:00.540 --> 00:02:05.450\nAnd it was designed at a time when it\nwas inconceivable that we could have\n\n35\n00:02:05.450 --> 00:02:09.000\nmore than 4.3 billion\nmachines on a network.\n\n36\n00:02:10.580 --> 00:02:15.140\nUnfortunately as time has gone on we've\nseen the Internet grow to massive numbers.\n\n37\n00:02:15.140 --> 00:02:18.800\nAnd all of a sudden the idea of having\n4.3 billion machines on a network\n\n38\n00:02:18.800 --> 00:02:20.610\nis not so out there.\n\n39\n00:02:20.610 --> 00:02:21.730\nRight?\n\n40\n00:02:21.730 --> 00:02:24.800\nIf you take your average person on\nthe street, they may have a laptop,\n\n41\n00:02:24.800 --> 00:02:27.100\nthey may have a cell phone,\nthey may have a desktop at home.\n\n42\n00:02:27.100 --> 00:02:31.370\nThey may have a tablet,\neach one consuming an IP address, right.\n\n43\n00:02:31.370 --> 00:02:35.660\nOur usage of these devices has really\nratched it up and that's just counting\n\n44\n00:02:35.660 --> 00:02:39.890\nusers, think about all the other\nnon-user items that are out there.\n\n45\n00:02:39.890 --> 00:02:41.650\nPeople have scales for\n\n46\n00:02:41.650 --> 00:02:44.100\nreporting their weight loss that they\nreport out to the Internet, right.\n\n47\n00:02:44.100 --> 00:02:47.250\nThey have IP addresses, or\nthermostats with IP addresses.\n\n48\n00:02:47.250 --> 00:02:51.910\nWebcams, the traffic camera at\nintersections, all of those things use IP\n\n49\n00:02:51.910 --> 00:02:56.520\nto communicate out across the Internet,\nand each one needs an IP address.\n\n50\n00:02:56.520 --> 00:03:00.928\nSo IPv4 while it was a good protocol,\nhad some short comings, and\n\n51\n00:03:00.928 --> 00:03:04.170\nthe biggest short coming\nwas its address space.\n\n52\n00:03:04.170 --> 00:03:09.379\nAt 32 bits,\nthe IPv4 address space provided for,\n\n53\n00:03:09.379 --> 00:03:13.443\nbasically 4.3 billion IP addresses.\n\n54\n00:03:13.443 --> 00:03:17.430\nThat may seem like a lot, but\nthere's over 6 billion people on earth.\n\n55\n00:03:17.430 --> 00:03:19.680\nI think we're actually\ncreeping up on 7 billion.\n\n56\n00:03:19.680 --> 00:03:21.670\nSo, there's not enough IP addresses for\n\n57\n00:03:21.670 --> 00:03:24.520\nevery single person on\nthe planet to have one address.\n\n58\n00:03:24.520 --> 00:03:26.100\nSo, over the years,\n\n59\n00:03:26.100 --> 00:03:30.690\nthey've had to come up with all sorts\nof hacks to get IPv4 to keep working.\n\n60\n00:03:30.690 --> 00:03:33.780\nThings like NAT,\nnetwork access translation.\n\n61\n00:03:33.780 --> 00:03:38.080\nProxies, things like, well even the whole\nquality of service system that we use is\n\n62\n00:03:38.080 --> 00:03:40.460\ncompletely hacked on to IPv4.\n\n63\n00:03:40.460 --> 00:03:42.680\nThat's stuff that kind of\ncame about afterwards.\n\n64\n00:03:42.680 --> 00:03:45.920\nPeople developed it and added it on,\nand it only works so well.\n\n65\n00:03:47.110 --> 00:03:50.600\nSo with IPv6, they said let's fix it.\n\n66\n00:03:50.600 --> 00:03:54.280\nNow, they recognized this as\na problem a long time ago.\n\n67\n00:03:54.280 --> 00:03:56.870\nThey recognized it as a problem,\nreally in the 1980s.\n\n68\n00:03:56.870 --> 00:04:03.100\nSo as IPv4 was just starting to take hold,\nthey already recognized the problem.\n\n69\n00:04:03.100 --> 00:04:05.430\nBut networks grow slow, right?\n\n70\n00:04:05.430 --> 00:04:08.730\nAdoption is slow, so they had time,\nand so they started working on it,\n\n71\n00:04:08.730 --> 00:04:10.430\nand they came up with the solution.\n\n72\n00:04:10.430 --> 00:04:15.560\nIPv6, which was really developed in\nthe late 80s and ratified in the 90s.\n\n73\n00:04:15.560 --> 00:04:18.320\nAnd so it's been around 20 years now.\n\n74\n00:04:18.320 --> 00:04:21.650\nIt's been around in its final form,\nreally, at least 15 years, so\n\n75\n00:04:21.650 --> 00:04:22.850\nIPv6 is not new.\n\n76\n00:04:22.850 --> 00:04:25.210\nWe call it the new, up and\ncoming replacement for IPv4, but\n\n77\n00:04:25.210 --> 00:04:27.250\nit's been around a long time.\n\n78\n00:04:28.450 --> 00:04:33.323\nIt was developed, designed, and\nratified in the 90s, and back then,\n\n79\n00:04:33.323 --> 00:04:35.295\nit really just did one thing.\n\n80\n00:04:35.295 --> 00:04:37.158\nIt increased our address space.\n\n81\n00:04:37.158 --> 00:04:42.934\nIt went from a 32 bit\naddress to a 128 bit address.\n\n82\n00:04:42.934 --> 00:04:45.138\nAll right.\nNow with IPv4 32 bits,\n\n83\n00:04:45.138 --> 00:04:47.440\nthat's a pretty big number.\n\n84\n00:04:47.440 --> 00:04:50.570\nAnd so we have to represent that\na special way to make it human readable.\n\n85\n00:04:50.570 --> 00:04:55.080\nSo, we write that as four separate decimal\nnumbers that are separated by periods.\n\n86\n00:04:55.080 --> 00:04:57.072\nThey call that dotted decimal notation.\n\n87\n00:04:57.072 --> 00:05:01.237\nSo, we see numbers like 192.168.0.1,\nright?\n\n88\n00:05:01.237 --> 00:05:03.260\nWhich are not that hard to remember.\n\n89\n00:05:03.260 --> 00:05:05.810\nIPv4 addresses are not that long.\n\n90\n00:05:05.810 --> 00:05:09.040\nThe most digits you're gonna have in\nan IPv4 address, when you write it out,\n\n91\n00:05:09.040 --> 00:05:12.010\nare, well, 12, right?\n\n92\n00:05:12.010 --> 00:05:13.240\nThree, three, three, and three.\n\n93\n00:05:13.240 --> 00:05:15.060\nSo it's not gonna be that big of a deal.\n\n94\n00:05:15.060 --> 00:05:17.610\nAnd even in binary,\nit's just 32 bits, right?\n\n95\n00:05:17.610 --> 00:05:20.090\nSo, eight ones, or eight zeros, whatever.\n\n96\n00:05:20.090 --> 00:05:21.270\nEight, eight, eight, and eight.\n\n97\n00:05:21.270 --> 00:05:25.500\n32 bits, but 128 bits I mean that's a lot.\n\n98\n00:05:25.500 --> 00:05:28.120\nThat's four times the size, right.\n\n99\n00:05:28.120 --> 00:05:32.540\nAnd in binary when you add that many more\nbits it's not an even like four times.\n\n100\n00:05:32.540 --> 00:05:35.010\nRight.\nSo it's not 4.3 billion times four.\n\n101\n00:05:35.010 --> 00:05:39.600\nIt increases exponentially with each\nbit you add and so it gets bigger and\n\n102\n00:05:39.600 --> 00:05:40.898\nbigger and bigger.\n\n103\n00:05:40.898 --> 00:05:45.400\nAnd with IPv6 you end up with\nan address base that is so big.\n\n104\n00:05:45.400 --> 00:05:47.460\nThe human mind has\na hard time grasping it.\n\n105\n00:05:47.460 --> 00:05:48.050\nAll right.\n\n106\n00:05:48.050 --> 00:05:49.990\nLet me show you what I mean.\n\n107\n00:05:49.990 --> 00:05:55.190\nBefore the show, I went and I got\nthe actual number that applies to this.\n\n108\n00:05:55.190 --> 00:05:57.920\nSo with IPv4,\nI think I showed this in another show.\n\n109\n00:05:57.920 --> 00:06:00.020\nLet me jump back to one\nof my old sheets here.\n\n110\n00:06:00.020 --> 00:06:00.820\nHere we go.\n\n111\n00:06:00.820 --> 00:06:06.049\nSo with IPv4, this is my little note sheet\nfrom the other episode, a 32-bit address.\n\n112\n00:06:06.049 --> 00:06:11.194\nGives you 4,294,967,296 addresses,\n\n113\n00:06:11.194 --> 00:06:16.106\nthat's 2 to the 32nd power,\nthat is the address\n\n114\n00:06:16.106 --> 00:06:20.920\nbase we get with IPv4,\n4.3 billion roughly.\n\n115\n00:06:20.920 --> 00:06:25.670\nWith IPv6 we get this many.\n\n116\n00:06:27.070 --> 00:06:29.640\nThat number right there, okay.\n\n117\n00:06:29.640 --> 00:06:31.100\nWhat even is that, right?\n\n118\n00:06:31.100 --> 00:06:34.290\nWhen it's that big, now,\nI actually know what it's called.\n\n119\n00:06:34.290 --> 00:06:37.021\nAnd the only reason I know it is because\nevery time Nate, here in our office,\n\n120\n00:06:37.021 --> 00:06:39.410\nsays that, I'm like, holy crap,\nhow does he know that?\n\n121\n00:06:39.410 --> 00:06:43.560\nBut apparently it's called an undecillion,\nand that's just some crazy,\n\n122\n00:06:43.560 --> 00:06:46.540\nmassive number that most of\nus never deal with, right.\n\n123\n00:06:46.540 --> 00:06:51.040\nIf you think about it, you go from\nyour ones to your thousands to your\n\n124\n00:06:52.440 --> 00:06:56.270\nmillions, your billions,\nyour trillions, your quadrillions.\n\n125\n00:06:56.270 --> 00:06:58.670\nAnd then it goes beyond that even larger.\n\n126\n00:06:58.670 --> 00:07:01.356\nThis is the address\nspace we get with IPv6.\n\n127\n00:07:01.356 --> 00:07:05.900\nAll right, it is hard to wrap our\nmind around the size of that.\n\n128\n00:07:05.900 --> 00:07:10.170\nAll right, so here's the way that I\nusually kind of just lay it out so\n\n129\n00:07:10.170 --> 00:07:12.180\nwe can recognize how big this is.\n\n130\n00:07:12.180 --> 00:07:14.370\nIf there's 7 billion people on the planet.\n\n131\n00:07:14.370 --> 00:07:16.150\nSo on the planet Earth,\nthere's 7 billion people.\n\n132\n00:07:17.260 --> 00:07:20.505\nWith IPv6, the address space is so big,\n\n133\n00:07:20.505 --> 00:07:25.329\nthat not only could everybody\non the planet have one address,\n\n134\n00:07:25.329 --> 00:07:30.644\neverybody on the planet could\nactually have 4.3 billion IP's.\n\n135\n00:07:30.644 --> 00:07:37.130\nIf we gave 4.3 billion IPs to each and\nevery single person on the planet Earth.\n\n136\n00:07:37.130 --> 00:07:41.239\nAll 7 billion of them, we would\nstill have IP addresses left over,\n\n137\n00:07:41.239 --> 00:07:44.360\nthat's how big this address space is.\n\n138\n00:07:44.360 --> 00:07:46.968\nBasically, they looked it and\nthey said you know what,\n\n139\n00:07:46.968 --> 00:07:49.084\nwe never wanna run out\nof IP addresses again.\n\n140\n00:07:49.084 --> 00:07:51.668\nWhat can we do to just mae\nsure that never happens?\n\n141\n00:07:51.668 --> 00:07:54.501\nWell they picked a really big address and\nthat's one way to achieve it, right?\n\n142\n00:07:54.501 --> 00:07:56.126\nThat's what they did.\n\n143\n00:07:56.126 --> 00:07:58.001\nMassive address.\n\n144\n00:07:58.001 --> 00:08:00.543\nWell they developed that,\nthey came up with it.\n\n145\n00:08:00.543 --> 00:08:02.930\nThey said we're going to have\nthis bigger address space.\n\n146\n00:08:03.930 --> 00:08:07.720\nBut the number's so big that it\nis just challenging to write it.\n\n147\n00:08:07.720 --> 00:08:10.140\nIf you write a number,\n\n148\n00:08:10.140 --> 00:08:15.080\nyou know a 128 bit binary address,\nif you write it out as ones and zeroes.\n\n149\n00:08:15.080 --> 00:08:16.900\nI've done that right here on line 13.\n\n150\n00:08:16.900 --> 00:08:18.070\nThis line.\n\n151\n00:08:18.070 --> 00:08:23.710\nThis is an IPv6 address\nwritten out in binary.\n\n152\n00:08:23.710 --> 00:08:28.370\nAnd you'll see that it stretches well\noff of my screen there as it goes on.\n\n153\n00:08:28.370 --> 00:08:31.060\n128 ones and zeros.\n\n154\n00:08:31.060 --> 00:08:33.510\nThat is a big number.\n\n155\n00:08:33.510 --> 00:08:34.630\nSo just like IPv4,\n\n156\n00:08:34.630 --> 00:08:38.620\nthey recognized that writing in binary\nis not going to be good for humans.\n\n157\n00:08:38.620 --> 00:08:39.960\nRight, for computers they love it.\n\n158\n00:08:39.960 --> 00:08:43.250\nComputers do great with it,\nbut for humans not so good.\n\n159\n00:08:43.250 --> 00:08:45.650\nSo they write it differently.\n\n160\n00:08:45.650 --> 00:08:51.080\nWhat they do is they take that number,\nthat massive 128 bit number, and\n\n161\n00:08:51.080 --> 00:08:57.410\nthey divide it up into 16\nbit little segments here.\n\n162\n00:08:57.410 --> 00:08:59.405\nAnd so you'll see every 16 bits.\n\n163\n00:08:59.405 --> 00:09:02.662\nWhen we go across this,\nkind of looking down the line.\n\n164\n00:09:02.662 --> 00:09:06.525\nEvery 16 bits, you'll see a colon and\nso they throw a colon in there and then\n\n165\n00:09:06.525 --> 00:09:10.645\nthe next 16 bits in a colon and then the\nnext 16 bits in a colon and so on, right?\n\n166\n00:09:10.645 --> 00:09:14.450\nThen they take the 16 bits right there.\n\n167\n00:09:14.450 --> 00:09:18.065\nAnd instead of converting it to decimal,\nbecause that could be a big number, right?\n\n168\n00:09:18.065 --> 00:09:21.570\n16 bits you could write up to, let's see,\n\n169\n00:09:21.570 --> 00:09:24.770\nI think that goes all the way\nup to just beneath like 16.\n\n170\n00:09:24.770 --> 00:09:27.480\nOr it would be, shoot.\n\n171\n00:09:27.480 --> 00:09:30.080\nThe maximum number would\nbe somewhere beneath\n\n172\n00:09:30.080 --> 00:09:31.740\nlike 16 point something million, right?\n\n173\n00:09:31.740 --> 00:09:33.550\nSo it would actually be\na pretty big number.\n\n174\n00:09:33.550 --> 00:09:34.320\nSo.\n\n175\n00:09:34.320 --> 00:09:38.530\nInstead, they represent it as hexadecimal.\n\n176\n00:09:38.530 --> 00:09:41.280\nHexadecimal is different.\n\n177\n00:09:41.280 --> 00:09:47.730\nWith normal mathematics,\nwe normally do base ten mathematics.\n\n178\n00:09:49.180 --> 00:09:56.200\nAnd what that means is we deal\nwith basically ten digits.\n\n179\n00:09:56.200 --> 00:10:00.170\nEverything we deal with\nis zero through nine.\n\n180\n00:10:00.170 --> 00:10:03.820\nSo if I give you a single number it's\ngoing to be between zero and nine.\n\n181\n00:10:03.820 --> 00:10:06.850\nIf I give you a double digit number,\nsomething 10 or\n\n182\n00:10:06.850 --> 00:10:09.800\nhigher, it's going to be a zero\nthrough nine in the first place value,\n\n183\n00:10:09.800 --> 00:10:12.800\nand a zero through nine in\nthe second place value.\n\n184\n00:10:12.800 --> 00:10:18.170\nEach place would be zero through nine,\nthat is base ten mathematics.\n\n185\n00:10:18.170 --> 00:10:24.370\nBase two mathematics\nwhich is binary right.\n\n186\n00:10:24.370 --> 00:10:27.610\nBase two mathematics well\nyou just have zero or one.\n\n187\n00:10:27.610 --> 00:10:29.235\nEverything is just one of two values.\n\n188\n00:10:29.235 --> 00:10:30.310\nIt's either a zero or a one.\n\n189\n00:10:30.310 --> 00:10:32.800\nEvery time we add a place holder\nits just a zero or a one.\n\n190\n00:10:32.800 --> 00:10:37.134\nBut with hexadecimal, it's base 16.\n\n191\n00:10:39.512 --> 00:10:44.578\nAnd with base 16, everything is\n\n192\n00:10:44.578 --> 00:10:49.298\na 0 to a 9, or an A through an F.\n\n193\n00:10:49.298 --> 00:10:51.206\nWe get letters, all right.\n\n194\n00:10:51.206 --> 00:10:52.793\nLetters that add onto this.\n\n195\n00:10:52.793 --> 00:10:56.566\nSo we go 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, and\n\n196\n00:10:56.566 --> 00:11:00.572\nthen instead of hitting ten,\nwe go to A, B, C, D, E, and F.\n\n197\n00:11:00.572 --> 00:11:05.690\nSo when you go zero through F it's really\nlike going zero through 15, right.\n\n198\n00:11:05.690 --> 00:11:07.850\nIt keeps going up all the way to 15.\n\n199\n00:11:07.850 --> 00:11:11.926\nBut since you have zero it's\na total of 16 different values.\n\n200\n00:11:11.926 --> 00:11:15.013\nThere's 16 different values for\neach place holder.\n\n201\n00:11:15.013 --> 00:11:20.580\nWhen I see this A right here,\nin my mind, to me, that's a ten, right?\n\n202\n00:11:20.580 --> 00:11:22.850\nWe went from nine to A.\n\n203\n00:11:22.850 --> 00:11:26.350\nWhen I see an F, that's like a 15, right?\n\n204\n00:11:26.350 --> 00:11:28.960\nBut an eight, well that's an eight, right?\n\n205\n00:11:28.960 --> 00:11:30.560\nIt's kinda how we think of it normally.\n\n206\n00:11:30.560 --> 00:11:33.230\nSo hexadecimal is different.\n\n207\n00:11:33.230 --> 00:11:36.100\nIt's different because\nof those extra values.\n\n208\n00:11:36.100 --> 00:11:39.020\nSo this is our normal decimal system.\n\n209\n00:11:39.020 --> 00:11:43.915\nThis is our binary system and\nthis is hexidecimal, all right?\n\n210\n00:11:43.915 --> 00:11:49.200\nSo they take this big long number and they\nrepresent it right here as hexidecimal.\n\n211\n00:11:49.200 --> 00:11:53.710\nSo that's what we're seeing right\nthere is an example of an IPv4\n\n212\n00:11:53.710 --> 00:11:56.093\naddress written in hexidecimal.\n\n213\n00:11:56.093 --> 00:11:58.842\nNow I rattled off an IPv4 address\nat the beginning of the show.\n\n214\n00:11:58.842 --> 00:12:01.600\nI said, 192.168.0.1.\n\n215\n00:12:01.600 --> 00:12:02.380\nRight.\n\n216\n00:12:02.380 --> 00:12:04.693\nI can remember that,\nit's not that many numbers.\n\n217\n00:12:04.693 --> 00:12:10.615\nBut how about 2001:00C0:00A8 blah,\nblah, blah, right.\n\n218\n00:12:10.615 --> 00:12:12.690\nI've already gotten bored and\nI've only said three of the segments.\n\n219\n00:12:12.690 --> 00:12:14.840\nI still got five more to go, right.\n\n220\n00:12:14.840 --> 00:12:16.660\nThere's eight of these segments.\n\n221\n00:12:16.660 --> 00:12:18.680\nSo the number is still long,\n\n222\n00:12:18.680 --> 00:12:21.760\nand it's longer than what's\ngoing to be human readable.\n\n223\n00:12:21.760 --> 00:12:26.360\nThere are certain shortcuts we can use to\nshrink the address and get it smaller.\n\n224\n00:12:26.360 --> 00:12:31.080\nBut in general, IPv6 addresses\nare going to be too long to remember.\n\n225\n00:12:31.080 --> 00:12:32.490\nThat's just how it is.\n\n226\n00:12:32.490 --> 00:12:34.660\nWe've got to get ready for\nthat eventuality.\n\n227\n00:12:34.660 --> 00:12:38.232\nThere will come a time\nwhen we go all IPv6.\n\n228\n00:12:38.232 --> 00:12:42.363\nAnd you just won't be able to\nmemorize addresses anymore.\n\n229\n00:12:42.363 --> 00:12:47.130\nWhen that happens, your reliance on a name\nlookup system will be really important.\n\n230\n00:12:47.130 --> 00:12:51.994\nWhen you go on the Internet and you type\nin www.google.com, you're reaching out\n\n231\n00:12:51.994 --> 00:12:56.511\nto a DNS server, and that DNS server is\nconverting that name to an IP address,\n\n232\n00:12:56.511 --> 00:13:01.940\nan IP before address, and then you're\ngoing out and finding that system, right?\n\n233\n00:13:01.940 --> 00:13:03.990\nThat works with IPv6 also.\n\n234\n00:13:03.990 --> 00:13:09.050\nYou can do a DNS look up for a name,\nwww.google.com and it will return\n\n235\n00:13:09.050 --> 00:13:14.320\nthe hexadecimal IPv6 address for\nthat one, and you'll go to it.\n\n236\n00:13:14.320 --> 00:13:17.220\nRight now, we might memorize\nthe IP addresses of certain\n\n237\n00:13:17.220 --> 00:13:18.520\nsystems just because they are easy.\n\n238\n00:13:18.520 --> 00:13:19.920\nWe can get to them that way.\n\n239\n00:13:19.920 --> 00:13:23.160\nBut under IPv6,\nyou'll want to create those DNS records.\n\n240\n00:13:23.160 --> 00:13:25.890\nYou'll want to have those name look\nup systems in place to handle it.\n\n241\n00:13:25.890 --> 00:13:29.200\nAnd so we'll start using names\ninstead of addresses like these.\n\n242\n00:13:29.200 --> 00:13:30.760\nAnd that'll make life a lot easier.\n\n243\n00:13:30.760 --> 00:13:32.210\nSo don't freak out over it,\n\n244\n00:13:32.210 --> 00:13:34.740\ndon't feel like you're going to have\nto memorize a ton of these things.\n\n245\n00:13:34.740 --> 00:13:38.070\nThere's really just a handful of numbers\nthat we actually need to remember with it.\n\n246\n00:13:38.070 --> 00:13:38.770\nAll right.\n\n247\n00:13:38.770 --> 00:13:42.890\nBut that's basically how an IPv6\naddress is going to be written.\n\n248\n00:13:42.890 --> 00:13:45.870\nNow let's talk about those\nshortcuts I mentioned.\n\n249\n00:13:45.870 --> 00:13:49.470\nThere's shortcuts we can do\nto shrink an address down and\n\n250\n00:13:49.470 --> 00:13:51.010\nmake it a little bit smaller.\n\n251\n00:13:51.010 --> 00:13:51.610\nAll right?\n\n252\n00:13:51.610 --> 00:13:53.130\nLet me show you some examples.\n\n253\n00:13:53.130 --> 00:13:58.500\nI'm going to, let me just switch\nover to an all new sheet and\n\n254\n00:13:58.500 --> 00:14:00.640\nI'm gonna change this a little bit.\n\n255\n00:14:00.640 --> 00:14:04.830\nLet me modify some of these values here.\n\n256\n00:14:04.830 --> 00:14:09.910\nAnd, just so I can show some of the\ndifferent shortcuts that I have in mind.\n\n257\n00:14:09.910 --> 00:14:11.000\nThere, that'll do.\n\n258\n00:14:11.000 --> 00:14:11.890\nAll right.\n\n259\n00:14:11.890 --> 00:14:14.510\nSo there's a fully written IPv6 address.\n\n260\n00:14:14.510 --> 00:14:17.310\nI've got four digits and a colon.\n\n261\n00:14:17.310 --> 00:14:18.300\nFour digits and a colon.\n\n262\n00:14:18.300 --> 00:14:19.310\nFour, four, and so on.\n\n263\n00:14:19.310 --> 00:14:22.300\nSo there's eight of these segments, and\n\n264\n00:14:22.300 --> 00:14:24.380\nthere's four digits in\neach of the segments.\n\n265\n00:14:24.380 --> 00:14:25.050\nAll right.\n\n266\n00:14:25.050 --> 00:14:26.730\nThey're hexadecimal.\n\n267\n00:14:26.730 --> 00:14:31.500\nAnd so each of these placeholders\nrepresents 16 different values, and\n\n268\n00:14:31.500 --> 00:14:35.120\ncombined with the other ones, that starts\nto fill up our full address space.\n\n269\n00:14:35.120 --> 00:14:38.790\nEach one representing 16 bits for\na total of 128 bits, right?\n\n270\n00:14:38.790 --> 00:14:39.880\nAll right?\n\n271\n00:14:39.880 --> 00:14:42.690\nWritten this way, it's a long mess.\n\n272\n00:14:42.690 --> 00:14:45.040\nSo what can we do to shrink that down?\n\n273\n00:14:45.040 --> 00:14:49.790\nWell the first thing we can do is\nwe can eliminate leading 0s, okay?\n\n274\n00:14:49.790 --> 00:14:54.350\nSo leading 0s are optional.\n\n275\n00:14:54.350 --> 00:14:55.770\nNow what's a leading 0?\n\n276\n00:14:55.770 --> 00:14:58.940\nWell let's put our mind back to\njust regular decimal numbers,\n\n277\n00:14:58.940 --> 00:15:00.140\nthe numbers we're used to.\n\n278\n00:15:00.140 --> 00:15:01.340\nOkay?\n\n279\n00:15:01.340 --> 00:15:03.640\nIf I tell you I need $5, right?\n\n280\n00:15:03.640 --> 00:15:05.840\nCan I borrow five bucks?\n\n281\n00:15:05.840 --> 00:15:08.200\nI just say five, and that's it, right?\n\n282\n00:15:08.200 --> 00:15:11.215\nWhat if I said I needed zero five dollars?\n\n283\n00:15:11.215 --> 00:15:13.983\nIt's still $5, right?\n\n284\n00:15:13.983 --> 00:15:16.048\nOr what if I said zero zero five?\n\n285\n00:15:16.048 --> 00:15:18.320\nIt's still $5.\n\n286\n00:15:18.320 --> 00:15:21.690\nThe leading zeros don't mean anything.\n\n287\n00:15:21.690 --> 00:15:22.980\nSo we leave those off.\n\n288\n00:15:22.980 --> 00:15:25.130\nWe leave those off in\nregular decimal mathematics.\n\n289\n00:15:25.130 --> 00:15:26.540\nThat's not anything special.\n\n290\n00:15:26.540 --> 00:15:29.420\nYou can do the same thing\nin an IPv6 address.\n\n291\n00:15:29.420 --> 00:15:33.980\nSo anywhere you see a leading zero or\neven multiple leading zeros.\n\n292\n00:15:33.980 --> 00:15:36.170\nHere I've got zero, zero, eight, eight.\n\n293\n00:15:36.170 --> 00:15:41.000\nYou can leave the leading 0's off, and\nthat'll start to shrink that address.\n\n294\n00:15:41.000 --> 00:15:46.834\nSo this address right here,\nif I call that my full address,\n\n295\n00:15:46.834 --> 00:15:52.334\nright, and then I can come down here and\nabbreviate it.\n\n296\n00:15:52.334 --> 00:15:55.126\nIf I take that same address.\n\n297\n00:15:57.626 --> 00:15:59.659\nAnd just go and\neliminate the leading zeros,\n\n298\n00:15:59.659 --> 00:16:03.170\nwe'll start to see the address\nshrink down a little bit.\n\n299\n00:16:03.170 --> 00:16:06.380\nI'm just getting rid of the leading zeros.\n\n300\n00:16:06.380 --> 00:16:09.570\nAnd see these here where I've got 0000,\nit's entirely 0,\n\n301\n00:16:09.570 --> 00:16:11.710\nwell I just need one 0 to represent that.\n\n302\n00:16:11.710 --> 00:16:14.020\nI don't need all these extra ones, right.\n\n303\n00:16:14.020 --> 00:16:17.280\nAll of a sudden, that big long address\nstarts getting a little smaller,\n\n304\n00:16:17.280 --> 00:16:20.260\na little bit easier to swallow.\n\n305\n00:16:20.260 --> 00:16:22.070\nBut it's still a big address.\n\n306\n00:16:22.070 --> 00:16:23.770\nSo what else can we do?\n\n307\n00:16:23.770 --> 00:16:28.420\nWell, in IPv6, it's pretty common to have\n\n308\n00:16:28.420 --> 00:16:32.110\nmore than one segment\nof all zeros in a row.\n\n309\n00:16:32.110 --> 00:16:37.330\nAnd when you have segments of all zeros\nin a row, you can collapse them together,\n\n310\n00:16:37.330 --> 00:16:38.580\nall right?\n\n311\n00:16:38.580 --> 00:16:42.250\nNotice over here,\nI've got two zeros in a row.\n\n312\n00:16:43.390 --> 00:16:48.145\nWhat I can do is, instead of saying 0:0:,\nyou can replace that\n\n313\n00:16:48.145 --> 00:16:52.870\nwith just a double colon, all right?\n\n314\n00:16:52.870 --> 00:16:59.920\nSo we can collapse contiguous 0's.\n\n315\n00:16:59.920 --> 00:17:02.320\nThat's probably a horrible\nway to write that, but\n\n316\n00:17:02.320 --> 00:17:03.520\nthat's what I'm going to call it.\n\n317\n00:17:03.520 --> 00:17:06.200\nCollapsing contiguous 0's.\n\n318\n00:17:06.200 --> 00:17:09.730\nAnd what we do with that, and\nactually let me take my shorter one here,\n\n319\n00:17:10.940 --> 00:17:14.090\nis we say if we ever\nhave two 0's in a row,\n\n320\n00:17:15.130 --> 00:17:19.460\nwe can just knock them out,\nand have ::, all right?\n\n321\n00:17:19.460 --> 00:17:23.270\nWhen you have a double colon like that,\nthe computer will look at it.\n\n322\n00:17:23.270 --> 00:17:27.770\nIt'll see two colons in a row, say okay,\neverything between here is a zero.\n\n323\n00:17:27.770 --> 00:17:31.210\nBut you can have more than\none field of zeros in there.\n\n324\n00:17:31.210 --> 00:17:35.270\nSo what it does, it says all right, I've\ngot one segment here, one segment here,\n\n325\n00:17:35.270 --> 00:17:38.140\none segment here, one here,\none here, one here.\n\n326\n00:17:38.140 --> 00:17:41.550\nThat's a total of six segments.\n\n327\n00:17:41.550 --> 00:17:45.850\nI'm missing two, so\nthere must be two right here in this gap.\n\n328\n00:17:45.850 --> 00:17:47.680\nAnd so it's able to imply that oh yeah,\n\n329\n00:17:47.680 --> 00:17:50.310\nthere's two that go right there,\nall right.\n\n330\n00:17:50.310 --> 00:17:52.250\nSo that's how it's able\nto figure that out, and\n\n331\n00:17:52.250 --> 00:17:55.130\nit puts the two sets of zeroes in there\nfor us without us having to type it.\n\n332\n00:17:55.130 --> 00:17:57.600\nSo that starts to make it shorter, right?\n\n333\n00:17:57.600 --> 00:17:59.790\nYou could do the same\nthing with a single zero.\n\n334\n00:17:59.790 --> 00:18:03.050\nA single zero can collapse down to a ::,\nbut it doesn't save us much time.\n\n335\n00:18:04.350 --> 00:18:09.400\nOne important thing to remember,\nis that when you collapse contiguous 0's\n\n336\n00:18:09.400 --> 00:18:16.680\nyou need to only use the shortcut once,\nper address.\n\n337\n00:18:18.160 --> 00:18:21.910\nYou can't use the shortcut\ntwice in the same address.\n\n338\n00:18:21.910 --> 00:18:26.165\nIn other words, if I had\n\n339\n00:18:26.165 --> 00:18:33.466\n2001:0:0 :0:0:AA:0:0:ABCD,\n\n340\n00:18:33.466 --> 00:18:39.115\nrunning out of ideas here.\n\n341\n00:18:39.115 --> 00:18:39.665\n1, 2, 3, 4.\n\n342\n00:18:39.665 --> 00:18:40.205\n1, 2, 3, 4.\n\n343\n00:18:40.205 --> 00:18:41.575\nPerfect.\n\n344\n00:18:41.575 --> 00:18:43.105\nThat's a valid address right there.\n\n345\n00:18:43.105 --> 00:18:43.805\nOkay?\nWritten\n\n346\n00:18:43.805 --> 00:18:45.815\nout that way that's a valid address.\n\n347\n00:18:45.815 --> 00:18:50.445\nI've left off my leading zeros so\nI have an A8 there instead of 00A8.\n\n348\n00:18:50.445 --> 00:18:52.445\nBut that's a valid address.\n\n349\n00:18:52.445 --> 00:18:55.705\nNow I've got three zeros\nin a row right here and\n\n350\n00:18:55.705 --> 00:18:57.915\nI've got two zeros in a row right here.\n\n351\n00:18:57.915 --> 00:19:02.150\nSo I might consider collapsing both\nof them down to double colons.\n\n352\n00:19:02.150 --> 00:19:05.180\nIf I do that, though,\nhere's what's gonna happen, right?\n\n353\n00:19:05.180 --> 00:19:08.009\nWhat's gonna happen is,\nI'm gonna take that data.\n\n354\n00:19:08.009 --> 00:19:10.093\nI'm gonna collapse these three.\n\n355\n00:19:10.093 --> 00:19:12.509\nAnd then I'm gonna collapse these three,\nall right?\n\n356\n00:19:12.509 --> 00:19:14.300\nAnd then I'm gonna give\nit to the computer.\n\n357\n00:19:14.300 --> 00:19:15.340\nAnd what's the computer gonna do?\n\n358\n00:19:15.340 --> 00:19:17.134\nIt's gonna look at this,\nand it's gonna say, okay.\n\n359\n00:19:17.134 --> 00:19:19.842\nEverything between here is a zero.\n\n360\n00:19:19.842 --> 00:19:22.870\nAnd everything between here is a zero.\n\n361\n00:19:22.870 --> 00:19:26.070\nI've got one field here,\none field here, one field here.\n\n362\n00:19:26.070 --> 00:19:27.660\nI'm missing five fields.\n\n363\n00:19:27.660 --> 00:19:32.480\nSo there's five segments that I've gotta\nfigure out where they go, all right.\n\n364\n00:19:32.480 --> 00:19:37.450\nWell, is it one here and four over here?\n\n365\n00:19:37.450 --> 00:19:40.750\nOr is it four over here or one over here?\n\n366\n00:19:40.750 --> 00:19:43.660\nIs it three over here and two over here?\n\n367\n00:19:43.660 --> 00:19:46.700\nIt's gotta figure out how many fields\ngo into each gap and it can't do it.\n\n368\n00:19:46.700 --> 00:19:49.630\nThere's no way that it can know which\none's gonna contain the right amount\n\n369\n00:19:49.630 --> 00:19:50.610\nof zeros.\n\n370\n00:19:50.610 --> 00:19:54.450\nSo when we do the collapse to\na double colon you can only do it\n\n371\n00:19:54.450 --> 00:19:58.790\nonce per address because then it can\nfigure out where those came from.\n\n372\n00:19:58.790 --> 00:20:02.330\nSo in this scenario I'd probably\ncollapse this one because there's three.\n\n373\n00:20:02.330 --> 00:20:06.720\nAnd for\nthe second one I would need to do that.\n\n374\n00:20:06.720 --> 00:20:07.562\nOkay.\n\n375\n00:20:07.562 --> 00:20:11.616\nSo this is a good example\n\n376\n00:20:11.616 --> 00:20:16.870\nversus the old bad example.\n\n377\n00:20:16.870 --> 00:20:17.470\nRight.\n\n378\n00:20:17.470 --> 00:20:20.270\nYou can't do it twice because we\njust don't know where to expand it.\n\n379\n00:20:21.360 --> 00:20:22.000\nAll right.\n\n380\n00:20:22.000 --> 00:20:26.508\nSo, those are some of the ways that\nwe can shrink that address down, but\n\n381\n00:20:26.508 --> 00:20:31.169\neven at its shortest, right here,\nwhere I'm using that colon, colon,\n\n382\n00:20:31.169 --> 00:20:34.342\neven at its shortest,\nit's still a lot, right.\n\n383\n00:20:34.342 --> 00:20:36.218\nSo it's going to be bit of a headache.\n\n384\n00:20:36.218 --> 00:20:41.043\nNow for your own network, when you're\ndesigning your own IPv6 network,\n\n385\n00:20:41.043 --> 00:20:45.738\nyou can plan for stuff like this and\nyou can make it really, really easy.\n\n386\n00:20:45.738 --> 00:20:51.520\nFor example, for IPv6 you have\na private range, just like you\n\n387\n00:20:51.520 --> 00:20:56.850\nhave in IPv4 In IPv4 we had private IPs we\ncan use without registering with the INNA.\n\n388\n00:20:56.850 --> 00:20:58.342\nIn IPv6 we had that also.\n\n389\n00:20:58.342 --> 00:21:04.217\nThey're easy to spot because\nthey start with FC0.\n\n390\n00:21:04.217 --> 00:21:08.500\nIf you ever see an address, you know,\nI'll just, I'll add this here,\n\n391\n00:21:08.500 --> 00:21:13.418\nPrivate Addresses, if you ever see an\naddress that starts with FC0, Something,\n\n392\n00:21:13.418 --> 00:21:14.590\nright?\n\n393\n00:21:14.590 --> 00:21:17.180\nThat is what's called\na locally unique address.\n\n394\n00:21:17.180 --> 00:21:18.170\nIt's a private address.\n\n395\n00:21:18.170 --> 00:21:19.590\nYou can use it internally.\n\n396\n00:21:19.590 --> 00:21:23.120\nSo if you know that, you can design\nyour network around that and\n\n397\n00:21:23.120 --> 00:21:26.400\nyou can design your\naddresses to be really easy.\n\n398\n00:21:26.400 --> 00:21:33.236\nSo, for example, if I have three networks,\nwhat I might wanna do is say,\n\n399\n00:21:33.236 --> 00:21:38.091\nall right I'm gonna use FC00: and\nthen zeroes for\n\n400\n00:21:38.091 --> 00:21:43.634\nthe next three, and maybe for\nnetwork one, I do a one here.\n\n401\n00:21:43.634 --> 00:21:48.080\nRight, and then I start to do my\nhost information, whatever my host\n\n402\n00:21:48.080 --> 00:21:53.440\naddresses are, and if I'm doing static\nIPs, then I can assign them myself.\n\n403\n00:21:53.440 --> 00:21:58.910\nYou can do static IPs in IPv6 just like in\nIPv4 where you manually assign the IPs.\n\n404\n00:21:58.910 --> 00:22:05.350\nSo here I'm saying,\nnetwork number one, host number one,\n\n405\n00:22:05.350 --> 00:22:09.170\nand because I've written it this way,\nthis can be shortened down to.\n\n406\n00:22:09.170 --> 00:22:11.370\nFC, actually, you know what?\n\n407\n00:22:11.370 --> 00:22:16.190\nWe can make this even shorter if we\ndesignate the network way up here.\n\n408\n00:22:16.190 --> 00:22:19.400\nSo I'm gonna say FC00,\nthat means it's my private network.\n\n409\n00:22:19.400 --> 00:22:22.009\nAnd then 001, that'll be my network.\n\n410\n00:22:22.009 --> 00:22:24.551\nAnd then the whole rest of\nthis will identify the host,\n\n411\n00:22:24.551 --> 00:22:26.218\nor however I wanna designate that.\n\n412\n00:22:26.218 --> 00:22:32.510\nI could shorten this to FC00:1, ::, one.\n\n413\n00:22:32.510 --> 00:22:35.210\nThat's a short address, right.\n\n414\n00:22:35.210 --> 00:22:38.920\nNow things start to become\na little more manageable for me.\n\n415\n00:22:38.920 --> 00:22:44.540\nI could have FC00:1::100 right,\n\n416\n00:22:44.540 --> 00:22:47.550\nand that would be another\nmachine on the same network.\n\n417\n00:22:47.550 --> 00:22:49.420\nNow the address has\nbecome really manageable.\n\n418\n00:22:49.420 --> 00:22:52.030\nSo if you need to do static\nIPs you can do that and\n\n419\n00:22:52.030 --> 00:22:54.410\nget nice, easy to manage addresses.\n\n420\n00:22:54.410 --> 00:22:56.210\nAnd they become a lot\nmore simple to deal with.\n\n421\n00:22:56.210 --> 00:22:59.530\nSo don't get intimidated by IPv6\nbecause of the big address space.\n\n422\n00:22:59.530 --> 00:23:00.320\nIt is annoying.\n\n423\n00:23:00.320 --> 00:23:03.430\nIt is a lot of a number to work with but\n\n424\n00:23:03.430 --> 00:23:06.130\nthere's ways to shorten it to make\nit a little bit easier to swallow.\n\n425\n00:23:07.640 --> 00:23:09.060\nAll right, so with IPv6,\n\n426\n00:23:09.060 --> 00:23:13.240\nthat's the main feature they gave\nus was this massive address space.\n\n427\n00:23:13.240 --> 00:23:17.840\nSuch a big number gives us\ntrillions upon trillions of IPs.\n\n428\n00:23:17.840 --> 00:23:21.080\nYou have an undecillion of IPs to use.\n\n429\n00:23:21.080 --> 00:23:26.217\nWhich means under IPv6, we won't ever\nhave to worry about an IP shortage again.\n\n430\n00:23:26.217 --> 00:23:30.967\nAll right, now IPv6 did get released\n15 years ago, or over 15 years ago.\n\n431\n00:23:30.967 --> 00:23:36.968\nAnd in 2013, they named that the official\nswitchover date for the Internet.\n\n432\n00:23:36.968 --> 00:23:43.133\nThat official internet support for\nIPv6 was introduced in June of 2013.\n\n433\n00:23:43.133 --> 00:23:45.009\nAll right.\n\n434\n00:23:45.009 --> 00:23:48.663\nBut, as of right now, it's been\nwell over a year since that date,\n\n435\n00:23:48.663 --> 00:23:50.900\nand most of us are still not using IPv6.\n\n436\n00:23:52.010 --> 00:23:53.668\nAnd, there's a few different reasons for\nthat.\n\n437\n00:23:53.668 --> 00:23:58.168\nThe biggest reason, actually,\nkind of goes back about 15 years ago.\n\n438\n00:23:58.168 --> 00:24:00.084\nIn 1999.\n\n439\n00:24:00.084 --> 00:24:03.835\nIn 2000 we had what was\ncalled the dot-com boom.\n\n440\n00:24:03.835 --> 00:24:07.768\nA lot of IT companies started really\ngetting some big investor capital and\n\n441\n00:24:07.768 --> 00:24:11.100\nfunding and\nstock markets were going through the roof.\n\n442\n00:24:11.100 --> 00:24:12.710\nIT companies could do no wrong.\n\n443\n00:24:12.710 --> 00:24:13.540\nRight?\n\n444\n00:24:13.540 --> 00:24:16.940\nAnd during that time these companies were\ngetting millions of dollars in venture\n\n445\n00:24:16.940 --> 00:24:20.760\ncapital funds that they were dumping\ninto network infrastructure, right?\n\n446\n00:24:20.760 --> 00:24:23.550\nThey were paying for all of these\nfancy routers and switches and\n\n447\n00:24:23.550 --> 00:24:27.020\ndata centers that were crazy,\nhuge investments in infrastructure.\n\n448\n00:24:28.260 --> 00:24:32.599\nSo all of that money was\nbeing dumped into IPv4.\n\n449\n00:24:32.599 --> 00:24:35.913\nSo then when we come along and\nstart proposing IPv6, people are like,\n\n450\n00:24:35.913 --> 00:24:38.686\nwell we've got all this great\ninfrastructure with IPv4.\n\n451\n00:24:38.686 --> 00:24:40.640\nDo we really wanna switch over?\n\n452\n00:24:40.640 --> 00:24:43.320\nAnd then the dot-com bubble burst.\n\n453\n00:24:43.320 --> 00:24:45.610\nIt burst and half those companies,\n\n454\n00:24:45.610 --> 00:24:47.590\nprobably more than half of\nthem went out of business.\n\n455\n00:24:47.590 --> 00:24:50.780\nAnd so\nnow we had a surplus of infrastructure.\n\n456\n00:24:50.780 --> 00:24:55.120\nA lot of extra equipment, extra bandwidth\nthat was gonna carry us for a while.\n\n457\n00:24:55.120 --> 00:24:55.640\nRight?\n\n458\n00:24:55.640 --> 00:24:58.340\nFor over ten years people\nhave been riding that wave.\n\n459\n00:24:58.340 --> 00:25:02.330\nAnd as a result IPv6 was\nput on the back shelf.\n\n460\n00:25:02.330 --> 00:25:03.280\nThey said you know what?\n\n461\n00:25:03.280 --> 00:25:04.000\nWe'll wait.\n\n462\n00:25:04.000 --> 00:25:05.408\nThings are slowing down now.\n\n463\n00:25:05.408 --> 00:25:08.200\nWe'll wait till they pick back up and\nthen we'll worry about it.\n\n464\n00:25:08.200 --> 00:25:09.709\nAnd so IPv6 got tabled.\n\n465\n00:25:09.709 --> 00:25:16.104\nIt was ready a long time ago, but\nit just got put on the shelf, right?\n\n466\n00:25:16.104 --> 00:25:18.700\nIn that time though, they didn't sit idle.\n\n467\n00:25:18.700 --> 00:25:20.760\nWhat they did is they said okay,\nthis is a good thing.\n\n468\n00:25:20.760 --> 00:25:23.360\nThe developers,\nthe engineers that were working on IPv6,\n\n469\n00:25:23.360 --> 00:25:25.630\nthey said let's make the most out of this.\n\n470\n00:25:25.630 --> 00:25:29.121\nBecause now we've got time,\nlet's make IPv6 better.\n\n471\n00:25:29.121 --> 00:25:32.196\nAnd they started looking at IPv4 and\nsaying all right,\n\n472\n00:25:32.196 --> 00:25:35.150\nwhat are all the hacks that\npeople have stuck on it?\n\n473\n00:25:35.150 --> 00:25:36.140\nQuality of service.\n\n474\n00:25:36.140 --> 00:25:38.200\nQuality of service,\nthey really hacked that in there.\n\n475\n00:25:38.200 --> 00:25:39.937\nWouldn't it be nice to have that built in?\n\n476\n00:25:39.937 --> 00:25:41.598\nAnd then they looked at it and\nthey said well,\n\n477\n00:25:41.598 --> 00:25:43.500\nwhat are some of the other\nthings that are on there?\n\n478\n00:25:43.500 --> 00:25:48.740\nThings like IP mobility or IPsec, right?\n\n479\n00:25:48.740 --> 00:25:50.610\nEncryption and security.\n\n480\n00:25:50.610 --> 00:25:53.240\nIPv4 doesn't have any encryption and\nsecurity.\n\n481\n00:25:53.240 --> 00:25:55.190\nYou have to use other software for that.\n\n482\n00:25:55.190 --> 00:25:57.020\nWith IPv6 they said you know what?\n\n483\n00:25:57.020 --> 00:25:58.000\nLet's build that in.\n\n484\n00:25:58.000 --> 00:26:00.501\nLet's put that into the protocol,\nand they did.\n\n485\n00:26:00.501 --> 00:26:02.772\nAnd it was easy to do it back\nthen cuz nobody was running it.\n\n486\n00:26:02.772 --> 00:26:04.190\nRight?\nSo it didn't affect anybody.\n\n487\n00:26:04.190 --> 00:26:06.950\nWe can just add this stuff and\nnobody cares.\n\n488\n00:26:06.950 --> 00:26:08.040\nSo that's what they did.\n\n489\n00:26:08.040 --> 00:26:13.510\nAnd they've spent the last 15 years\nmaking IPv6 better and better and better.\n\n490\n00:26:13.510 --> 00:26:17.580\nUntil now where it's got this whole suite\nof features in it that are awesome.\n\n491\n00:26:17.580 --> 00:26:18.320\nAnd most of us,\n\n492\n00:26:18.320 --> 00:26:23.250\npeople like me, are sitting here going man\nI can't wait until I get to deploy IPv6.\n\n493\n00:26:23.250 --> 00:26:27.200\nBecause when I have IPv6,\nI don't need VPN tunnels anymore.\n\n494\n00:26:27.200 --> 00:26:29.860\nI can build IPv6 sessions right\nout of the base protocol.\n\n495\n00:26:29.860 --> 00:26:32.180\nI don't need specialized software for\nthat, right?\n\n496\n00:26:32.180 --> 00:26:35.600\nCertificates on webpages,\nI just need those to validate identities.\n\n497\n00:26:35.600 --> 00:26:37.420\nI'm not gonna use those for my encryption.\n\n498\n00:26:37.420 --> 00:26:42.310\nSo exploits like the POODLE and some of\nthe other big ones that have been going\n\n499\n00:26:42.310 --> 00:26:45.150\naround, Heartbleed and stuff,\nthose start to go away, right?\n\n500\n00:26:45.150 --> 00:26:48.110\nCuz we're not using those certificates for\nencryption anymore, just identities.\n\n501\n00:26:48.110 --> 00:26:51.575\nThose are some of the things that\nwe'll have when we get to IPv6.\n\n502\n00:26:51.575 --> 00:26:53.846\nSo we want it, right?\n\n503\n00:26:53.846 --> 00:26:57.896\nIf you're just getting started, you might\nnot know that yet, but in time as you work\n\n504\n00:26:57.896 --> 00:27:01.205\nwith networking more, you'll see\nthat IPv6 has a lot of benefits,\n\n505\n00:27:01.205 --> 00:27:04.460\nand you'll want to get to it\nas soon as you can, all right?\n\n506\n00:27:04.460 --> 00:27:06.580\nBut for now we have to wait patiently,\nwaiting for our ISPs.\n\n507\n00:27:06.580 --> 00:27:08.530\nAnd in the meantime, we get ready.\n\n508\n00:27:08.530 --> 00:27:11.560\nWe use this time to learn it so\nwe're more prepared when we go and\n\n509\n00:27:11.560 --> 00:27:12.410\nroll it out in a production.\n\n510\n00:27:13.572 --> 00:27:16.533\nAll right, well I want to take a look\nat some of the other features of IPV6\n\n511\n00:27:16.533 --> 00:27:18.540\nas whether as the IP ranges\nthat are inside of it.\n\n512\n00:27:18.540 --> 00:27:22.424\nThere are some special address ranges that\nare reserved, so we wanna look at that,\n\n513\n00:27:22.424 --> 00:27:24.265\nand we'll do that in the next segment.\n\n514\n00:27:24.265 --> 00:27:27.934\nSo let's take a pause right here,\nand when we get back,\n\n515\n00:27:27.934 --> 00:27:30.681\nwe're gonna have more IPv6 after this.\n\n516\n00:27:30.681 --> 00:27:38.273\n[MUSIC]\n\n517\n00:27:38.273 --> 00:27:38.810\n>> All right.\n\n518\n00:27:38.810 --> 00:27:40.100\nWelcome back, everybody.\n\n519\n00:27:40.100 --> 00:27:43.210\nSo, in the last segment I\nthrew out an IPv6 address,\n\n520\n00:27:43.210 --> 00:27:47.990\nand I said that if we wanted to\nuse private IPs on our network,\n\n521\n00:27:47.990 --> 00:27:52.890\nwe could set the very beginning of\nthem to FC0, blah, blah, blah, and\n\n522\n00:27:52.890 --> 00:27:56.240\nthat was special set aside for\nus just to use at home.\n\n523\n00:27:56.240 --> 00:27:59.800\nWell, in IPv6, there's actually\nseveral ranges that are like that.\n\n524\n00:27:59.800 --> 00:28:02.810\nSpecial ranges that are set aside for\nus to use for\n\n525\n00:28:02.810 --> 00:28:05.870\ncertain things or\nto be used for certain things.\n\n526\n00:28:05.870 --> 00:28:10.530\nBut all of the other addresses\nare considered publicly managed.\n\n527\n00:28:10.530 --> 00:28:12.400\nThey're registered addresses.\n\n528\n00:28:12.400 --> 00:28:15.590\nYou've gotta register them\nwith the IANA just like IPv4.\n\n529\n00:28:15.590 --> 00:28:17.020\nSo you can't just go and pick them out.\n\n530\n00:28:17.020 --> 00:28:19.930\nBecause they've gotta be globally unique.\n\n531\n00:28:19.930 --> 00:28:23.740\nSo within that FC0 range,\nyou have free reign.\n\n532\n00:28:23.740 --> 00:28:26.690\nYou can do whatever you want, but\nthey're not routable on the internet,\n\n533\n00:28:26.690 --> 00:28:30.550\njust like IPv4s RFC 1918 addresses.\n\n534\n00:28:30.550 --> 00:28:33.750\nBut there's other ranges in here\nthat we need to be aware of just so\n\n535\n00:28:33.750 --> 00:28:35.120\nwe can kind of spot that.\n\n536\n00:28:35.120 --> 00:28:39.090\nSo I wanna show you guys some specials\naddresses that you might encounter.\n\n537\n00:28:39.090 --> 00:28:39.940\nAll right?\n\n538\n00:28:39.940 --> 00:28:42.960\nOne of my favorites is a loopback.\n\n539\n00:28:42.960 --> 00:28:46.643\nIn IPv4 we have a loopback address and\nit's annoying.\n\n540\n00:28:46.643 --> 00:28:48.230\nIt doesn't make a whole heck\nof a lot of sense, right?\n\n541\n00:28:48.230 --> 00:28:50.328\nIt's 127.0.0.1.\n\n542\n00:28:50.328 --> 00:28:53.156\nIt's what most people use and\nif you ever go to that IP,\n\n543\n00:28:53.156 --> 00:28:55.630\nyou're basically going to yourself, right?\n\n544\n00:28:55.630 --> 00:29:00.780\nThat's the loopback in IPv4, all right?\n\n545\n00:29:00.780 --> 00:29:04.190\nWell, in IPv6, they said, you know what?\n\n546\n00:29:04.190 --> 00:29:06.260\nThat didn't make a whole\nheck of a lot of sense.\n\n547\n00:29:06.260 --> 00:29:09.920\nSo let's make something\na little more meaningful.\n\n548\n00:29:09.920 --> 00:29:16.690\nAnd what they did is they made the loop\nback in IPv6 the very first IP address.\n\n549\n00:29:16.690 --> 00:29:21.040\nSo it's basically all zeros and a one.\n\n550\n00:29:21.040 --> 00:29:24.000\nAnd if I were to write that out,\nthat'd be a pretty long number.\n\n551\n00:29:24.000 --> 00:29:26.690\nI mean, I've kind of almost done\nit right here with this one.\n\n552\n00:29:26.690 --> 00:29:34.770\nIf we were to write that all the way out\nit would be just the very first address.\n\n553\n00:29:34.770 --> 00:29:40.040\nThere, all zeros and a one but\nfortunately thanks to our shortcuts,\n\n554\n00:29:40.040 --> 00:29:45.270\nwe can abbreviate that down to ::1.\n\n555\n00:29:45.270 --> 00:29:50.385\nSo if you ever want to ping your loop\nback in IPv6, you just ping ::1.\n\n556\n00:29:50.385 --> 00:29:52.740\nAnd there you go,\nnow you're pinging yourself.\n\n557\n00:29:52.740 --> 00:29:54.870\nIt makes a lot more sense\nthan the old loop act and\n\n558\n00:29:54.870 --> 00:29:57.550\nit's right there at the beginning nice,\nshort and easy.\n\n559\n00:29:59.320 --> 00:30:03.710\nSome of the other addresses that we bump\ninto are based upon other prefixes and\n\n560\n00:30:03.710 --> 00:30:04.920\nused for different things.\n\n561\n00:30:04.920 --> 00:30:10.130\nLet's lay out a few here,\nlet's see Link locals.\n\n562\n00:30:11.390 --> 00:30:15.710\nWhen you bring up a, well actually let\nme go a slightly different order here.\n\n563\n00:30:15.710 --> 00:30:16.610\nLet's do multicast first.\n\n564\n00:30:17.830 --> 00:30:22.150\nIn IPv6, I mentioned they did a lot\nof improvements to make it better,\n\n565\n00:30:22.150 --> 00:30:24.090\nto improve it over the years.\n\n566\n00:30:24.090 --> 00:30:28.930\nAnd one of the things they noticed in\nIPv4, is a lot of the inefficient traffic,\n\n567\n00:30:28.930 --> 00:30:32.830\na lot of the traffic that bogs\na network down, is broadcast traffic.\n\n568\n00:30:32.830 --> 00:30:36.100\nNormally you send either unicast or\na broadcast.\n\n569\n00:30:36.100 --> 00:30:39.010\nA unicast is a message\nbetween two computers.\n\n570\n00:30:39.010 --> 00:30:42.460\nOne host, or one source, and\none destination and that's it.\n\n571\n00:30:42.460 --> 00:30:47.068\nBut a broadcast is a message from\none host to everyone, right?\n\n572\n00:30:47.068 --> 00:30:49.100\nA big broadcast message to every computer.\n\n573\n00:30:50.200 --> 00:30:52.380\nDoes every computer need to hear that?\n\n574\n00:30:52.380 --> 00:30:54.440\nNot normally, normally it's a waste.\n\n575\n00:30:54.440 --> 00:30:59.180\nThere might be 500 computers on my network\nand I'm trying to find one of them so,\n\n576\n00:30:59.180 --> 00:31:01.130\nI send out a broadcast.\n\n577\n00:31:01.130 --> 00:31:04.712\nI bother 499 computers for\nno point at all.\n\n578\n00:31:04.712 --> 00:31:07.619\nBut, one of them is the right one and\nit responds back to me and says,\n\n579\n00:31:07.619 --> 00:31:08.720\nhey that's me, right?\n\n580\n00:31:08.720 --> 00:31:10.548\nSo, broadcast, not very efficient.\n\n581\n00:31:10.548 --> 00:31:14.590\nSo in IPv6 they killed off broadcast.\n\n582\n00:31:14.590 --> 00:31:16.811\nThere are no broadcast in IPv6.\n\n583\n00:31:16.811 --> 00:31:17.740\nYou can't do it.\n\n584\n00:31:17.740 --> 00:31:20.870\nThere is no way to send a message on\nthe network that will go to everyone.\n\n585\n00:31:20.870 --> 00:31:22.460\nAll right?\n\n586\n00:31:22.460 --> 00:31:26.870\nInstead they require the use of multicast.\n\n587\n00:31:26.870 --> 00:31:29.130\nMulticast is that in between.\n\n588\n00:31:29.130 --> 00:31:31.850\nYou don't speak to just one person,\nyou don't speak to everybody,\n\n589\n00:31:31.850 --> 00:31:34.440\nyou speak to some people.\n\n590\n00:31:34.440 --> 00:31:39.332\nPeople who opt in, people who\nare listening on special addresses and\n\n591\n00:31:39.332 --> 00:31:43.730\nmulticast addresses are really\neasy to spot inside of IPv6.\n\n592\n00:31:43.730 --> 00:31:46.940\nBecause they start with it,\n\n593\n00:31:46.940 --> 00:31:52.168\nthey start with FF0, well really just FF0.\n\n594\n00:31:52.168 --> 00:31:58.708\n[LAUGH] There's a few different ranges but\nFF0 is where they start and it is.\n\n595\n00:31:58.708 --> 00:32:00.419\nActually I'll write it as FF00.\n\n596\n00:32:00.419 --> 00:32:02.168\nOkay I gotta get my placeholder in there.\n\n597\n00:32:02.168 --> 00:32:04.762\nYou can leave off leading\nzeros at the beginning but\n\n598\n00:32:04.762 --> 00:32:06.700\nyou can't leave off trailing zeros.\n\n599\n00:32:06.700 --> 00:32:10.150\nYou gotta leave those, but it is a /8.\n\n600\n00:32:10.150 --> 00:32:15.530\nAnd what that means, that /8, means that\nit's really just the first eight bits.\n\n601\n00:32:15.530 --> 00:32:20.140\nThe first eight bits, which is where\nwe get this FF and then the zero.\n\n602\n00:32:20.140 --> 00:32:22.330\nSo this last zero could actually\nbe something different.\n\n603\n00:32:22.330 --> 00:32:26.706\nI could have FF01 or FF02, FF09, FF0B,\n\n604\n00:32:26.706 --> 00:32:30.140\nall sorts of different values there.\n\n605\n00:32:30.140 --> 00:32:34.210\nSo FF00::/8.\n\n606\n00:32:34.210 --> 00:32:37.715\nAny time you see an address that\nstarts with FF0, that's a multicast.\n\n607\n00:32:38.765 --> 00:32:42.865\nSo, for example,\nlet's say that you had DHCP.\n\n608\n00:32:42.865 --> 00:32:45.325\nDynamic Host Configuration Protocol.\n\n609\n00:32:45.325 --> 00:32:47.495\nYou wanted to get an IP\naddress from the network.\n\n610\n00:32:47.495 --> 00:32:49.365\nYou wanted somebody to assign it to you.\n\n611\n00:32:49.365 --> 00:32:50.740\nWell in the past you'd do a broadcast.\n\n612\n00:32:50.740 --> 00:32:53.155\nYou'd send a big message out\non the network saying hey,\n\n613\n00:32:53.155 --> 00:32:56.350\nanybody out there can somebody\nplease give me an address?\n\n614\n00:32:56.350 --> 00:32:57.860\nWell, in IPv6 you don't do that.\n\n615\n00:32:57.860 --> 00:33:02.660\nYou say all right,\nDHCPv6 uses this multicast address.\n\n616\n00:33:02.660 --> 00:33:04.110\nI'll talk to that address.\n\n617\n00:33:04.110 --> 00:33:06.640\nAnd only the people listening\non that address will hear it.\n\n618\n00:33:06.640 --> 00:33:08.360\nAnd those should be your DHCP servers.\n\n619\n00:33:08.360 --> 00:33:11.190\nSo they get the communication and\nnot everybody else.\n\n620\n00:33:11.190 --> 00:33:13.030\nIt's far more efficient.\n\n621\n00:33:13.030 --> 00:33:17.220\nSo multicast gets used a lot\nbecause broadcast is gone.\n\n622\n00:33:17.220 --> 00:33:18.850\nThere's no broadcast in IPv6.\n\n623\n00:33:21.440 --> 00:33:24.550\nAlright now, I mention that one because\n\n624\n00:33:24.550 --> 00:33:29.375\nthere is another neat little range that's\nout there what's called a link-local.\n\n625\n00:33:30.400 --> 00:33:35.050\nAnd the link-local range is FE8.\n\n626\n00:33:35.050 --> 00:33:39.130\nAnd I'm gonna stick a zero\non the end of this one, too.\n\n627\n00:33:39.130 --> 00:33:42.490\nBut FE80 is the most\ncommon one that we see.\n\n628\n00:33:42.490 --> 00:33:44.520\nWhoop, too many slashes.\n\n629\n00:33:44.520 --> 00:33:46.910\nBut it could be, you know, FE81, FE82.\n\n630\n00:33:46.910 --> 00:33:49.870\nIt actually goes higher than that,\nso you could add FE9.\n\n631\n00:33:49.870 --> 00:33:52.720\nBut FE8 is what we normally see.\n\n632\n00:33:52.720 --> 00:33:57.840\nAnytime you see an address that\nstarts with FE8, that is a local only\n\n633\n00:33:57.840 --> 00:34:01.520\naddress that is non-routable.\n\n634\n00:34:01.520 --> 00:34:06.610\nThis one up here, this FC0, these guys up\nhere are local addresses, they're private.\n\n635\n00:34:06.610 --> 00:34:09.140\nBut they're routable,\na router will send them along.\n\n636\n00:34:09.140 --> 00:34:12.870\nBut FE8, that guy,\nthat's not routable, all right.\n\n637\n00:34:12.870 --> 00:34:15.040\nWhen your system boots up for\nthe first time and\n\n638\n00:34:15.040 --> 00:34:18.140\nconnects to the network,\nif it needs to get an IP address and\n\n639\n00:34:18.140 --> 00:34:21.790\nit's gotta use a multicast to do it,\nif it's gotta talk to one of these,\n\n640\n00:34:21.790 --> 00:34:24.770\nhow can it talk on the network if\nit doesn't have an address itself?\n\n641\n00:34:24.770 --> 00:34:25.800\nIt can't.\n\n642\n00:34:25.800 --> 00:34:28.540\nSo it needs some kind of address.\n\n643\n00:34:28.540 --> 00:34:32.700\nSo, regardless of whether you set\nan IP address on your interfaces,\n\n644\n00:34:32.700 --> 00:34:39.512\nif you have IPv6 support, your system will\nat a minimum have an FE8 address on it.\n\n645\n00:34:39.512 --> 00:34:44.080\nIf you're running Windows right now\nWindows, ever since Windows Vista,\n\n646\n00:34:44.080 --> 00:34:46.250\nIPv6 has been on by default, and\n\n647\n00:34:46.250 --> 00:34:50.270\nyou will likely have an an FE8 address\nattached to your system right now.\n\n648\n00:34:50.270 --> 00:34:52.370\nMacOS, same way.\n\n649\n00:34:52.370 --> 00:34:54.860\nEven if you haven't turned on IPv6,\nif you're not using it,\n\n650\n00:34:54.860 --> 00:34:58.280\nit's on by default, and\nyou'll likely have that address.\n\n651\n00:34:58.280 --> 00:35:00.500\nMy laptop should be like that,\nhere, let's find out.\n\n652\n00:35:00.500 --> 00:35:06.090\nSo, I'm not using IPv6 on my system,\nbut If I do a quick IF config and\n\n653\n00:35:06.090 --> 00:35:09.710\nstart to look at some of the addresses\nattached to mine, right here.\n\n654\n00:35:09.710 --> 00:35:13.421\nSo here's my network adapter and\n10.1.230.243,\n\n655\n00:35:13.421 --> 00:35:17.623\nthat's my IPv4 address,\nthat's what I'm actually using right now.\n\n656\n00:35:17.623 --> 00:35:26.786\nBut look right above it\nFE80::6A5B:35FF:FE blah blah blah, right?\n\n657\n00:35:26.786 --> 00:35:28.100\nSo you're seeing all of that right there.\n\n658\n00:35:28.100 --> 00:35:31.050\nThat is my address.\n\n659\n00:35:31.050 --> 00:35:32.650\nIt's a link-local address.\n\n660\n00:35:32.650 --> 00:35:36.100\nIt was generated by my system for\nuse just so\n\n661\n00:35:36.100 --> 00:35:39.550\nit could find other people\nout there on the network.\n\n662\n00:35:39.550 --> 00:35:43.140\nSo that is the one that my laptop has.\n\n663\n00:35:43.140 --> 00:35:43.760\nAll right.\n\n664\n00:35:43.760 --> 00:35:46.110\nI didn't set that,\nI didn't tell it to use it.\n\n665\n00:35:46.110 --> 00:35:48.340\nIt came up with it on its own, all right.\n\n666\n00:35:48.340 --> 00:35:50.820\nIt's using that, and it goes and\nstarts to communicate.\n\n667\n00:35:50.820 --> 00:35:53.560\nNow, there's always a possibility\nyou can get a duplicate\n\n668\n00:35:53.560 --> 00:35:55.810\nwhen you have an automatically\ngenerated address like this.\n\n669\n00:35:55.810 --> 00:35:57.360\nSo it does do duplicate detection,\n\n670\n00:35:57.360 --> 00:36:00.000\nit looks out on the network to\nsee if anybody else has it.\n\n671\n00:36:00.000 --> 00:36:02.450\nAnd if they don't,\nthen E uses it, and off it goes.\n\n672\n00:36:02.450 --> 00:36:04.910\nIf somebody does,\nit just picks another one, right?\n\n673\n00:36:04.910 --> 00:36:07.542\nBut that's an address that we can use for\nour initial communications.\n\n674\n00:36:07.542 --> 00:36:10.670\nIt's non routeable though, so\nwe can just it for local stuff,\n\n675\n00:36:10.670 --> 00:36:13.370\npeople that are right there on\nthe same network as us, and\n\n676\n00:36:13.370 --> 00:36:16.370\nif we wanna get any further,\nwe'll need to get a better address.\n\n677\n00:36:18.530 --> 00:36:22.590\nAll right, other addresses that we might\nsee, there's one special one, I do want\n\n678\n00:36:22.590 --> 00:36:26.920\nto point this one out, it's kind of silly,\nbut It's called the documentation range.\n\n679\n00:36:28.070 --> 00:36:34.919\nAnd it is 2001: DB8::/32.\n\n680\n00:36:34.919 --> 00:36:36.281\nThat one right there, all right?\n\n681\n00:36:36.281 --> 00:36:38.830\nThis one is used in textbooks.\n\n682\n00:36:38.830 --> 00:36:42.680\nThey actually set this aside, they say\nwe wanna set this range aside because\n\n683\n00:36:42.680 --> 00:36:47.500\na lot of people use IP examples in books,\nand they pick an IP that's\n\n684\n00:36:47.500 --> 00:36:50.860\nreally used out there on the internet,\nand that can be a problem because\n\n685\n00:36:50.860 --> 00:36:54.620\nby the time that book publishes, that IP\nmight not be in use anymore or whatever.\n\n686\n00:36:54.620 --> 00:36:57.590\nSo we need something we\ncan use in the books, and\n\n687\n00:36:57.590 --> 00:37:00.000\nthat's what this one is designed for.\n\n688\n00:37:00.000 --> 00:37:04.060\nIn the chatroom Favian just\nmentioned is FE80 like APIPA, right?\n\n689\n00:37:04.060 --> 00:37:06.540\nThe Automatic Private IP Addressing.\n\n690\n00:37:06.540 --> 00:37:09.330\nAnd yeah, that's actually a great example.\n\n691\n00:37:09.330 --> 00:37:14.240\nIn IPv4, we have APIPA which\ngenerates those 169.254 addresses.\n\n692\n00:37:14.240 --> 00:37:16.410\nLet me see, I've got that right here.\n\n693\n00:37:16.410 --> 00:37:20.714\nSo if you can't find a server to\ngive you an IP, you make one up,\n\n694\n00:37:20.714 --> 00:37:24.552\n169.254 dot something dot something,\nright?\n\n695\n00:37:24.552 --> 00:37:28.503\nAnd that's effectively\nwhat your IPv6 systems do,\n\n696\n00:37:28.503 --> 00:37:32.205\nis they go in and they generate,\nwait where was I?\n\n697\n00:37:32.205 --> 00:37:33.186\nI got lost!\n\n698\n00:37:33.186 --> 00:37:34.990\nHere we go.\n[LAUGH] They go in and\n\n699\n00:37:34.990 --> 00:37:38.695\nthey generate a FE80 and\nthen a bunch of zeroes and\n\n700\n00:37:38.695 --> 00:37:44.490\nthen the last 64 bits they dynamically\ngenerate so it's very similar.\n\n701\n00:37:44.490 --> 00:37:49.310\nThe only difference is with APIPA,\nwhen a DHP server comes back up and\n\n702\n00:37:49.310 --> 00:37:52.780\nyou get a real address,\nyour APIPA address goes away.\n\n703\n00:37:52.780 --> 00:37:57.390\nSo you've only got an APIPA address\nwhen there's a problem, all right?\n\n704\n00:37:57.390 --> 00:38:02.170\nBut an FE80 address,\nthat link-local, you always have it.\n\n705\n00:38:02.170 --> 00:38:04.180\nEven when you've got a good address,\n\n706\n00:38:04.180 --> 00:38:09.890\nwith IPv6 it is very common to have more\nthan one address on the same interface.\n\n707\n00:38:09.890 --> 00:38:13.170\nSo often times you'll have\nyour public address and\n\n708\n00:38:13.170 --> 00:38:16.780\nyour FE8 link-local address\nright there side by side.\n\n709\n00:38:16.780 --> 00:38:17.350\nYou can do that.\n\n710\n00:38:17.350 --> 00:38:20.180\nYou can have many many addresses\nattached to the interface.\n\n711\n00:38:20.180 --> 00:38:23.470\nYou can actually do that under IPv4 too\nbut there's not much reason for it.\n\n712\n00:38:23.470 --> 00:38:24.890\nBut in IPv6 there is.\n\n713\n00:38:24.890 --> 00:38:26.770\nSo you may see that.\n\n714\n00:38:26.770 --> 00:38:27.710\nYeah, great question thank you.\n\n715\n00:38:29.910 --> 00:38:33.440\nAll right so the documentation one,\nthat's just for textbooks and\n\n716\n00:38:33.440 --> 00:38:36.830\ntechnically people like me, where I'm\nusing examples here on the screen,\n\n717\n00:38:36.830 --> 00:38:41.490\nthat's what I should be using 2001:DB8\nit's not in use out in the internet but\n\n718\n00:38:41.490 --> 00:38:46.410\nit is what would normally be in\nthe publicly registered range.\n\n719\n00:38:46.410 --> 00:38:51.420\nIf you go and get a registered\nIPv6 network from IANA, right\n\n720\n00:38:51.420 --> 00:38:56.950\nnow their issuing in the 2001's and 2002's\nthat's where their issuing from right now.\n\n721\n00:38:56.950 --> 00:38:59.720\nAnd as they fill up they'll go to 2003 and\nso on.\n\n722\n00:38:59.720 --> 00:39:03.070\nSo most of your public addresses\nare starting with 200.\n\n723\n00:39:03.070 --> 00:39:03.980\nYou don't have to, right?\n\n724\n00:39:03.980 --> 00:39:06.180\nYou've got a wide range of\naddresses that are out there.\n\n725\n00:39:06.180 --> 00:39:07.910\nBut that's kind of where\nthey pick to start.\n\n726\n00:39:09.270 --> 00:39:11.375\nI'm not actually sure\nof the logic of that,\n\n727\n00:39:11.375 --> 00:39:14.220\nlike why they decided to start there,\nbut that is where they started.\n\n728\n00:39:16.042 --> 00:39:20.400\nAll right, so those are some special\nranges that we'll see inside of IPv6.\n\n729\n00:39:22.120 --> 00:39:26.630\nNow, with IPv6, your address space is big.\n\n730\n00:39:26.630 --> 00:39:27.890\nAll right?\n\n731\n00:39:27.890 --> 00:39:33.190\nAnd, as a result, a lot of the things we\ndo under IPv4 won't be necessary anymore.\n\n732\n00:39:33.190 --> 00:39:35.020\nIn IPv4, a lot of times,\n\n733\n00:39:35.020 --> 00:39:39.790\nwe use private IPs inside of our network,\njust because we don't have enough publics.\n\n734\n00:39:39.790 --> 00:39:43.560\nSo we use private, and\nthen we use a router, a device like that\n\n735\n00:39:43.560 --> 00:39:46.600\nto hide all of our internal IPs\nwhen they go out to the Internet.\n\n736\n00:39:46.600 --> 00:39:50.708\nBut with IPv6 the address space is so\nbig, you don't need to hide anymore.\n\n737\n00:39:50.708 --> 00:39:54.444\nYou can give everybody a real public IP\nand they can go right out to the internet\n\n738\n00:39:54.444 --> 00:39:57.490\nwithout having to do network\naddress translation.\n\n739\n00:39:57.490 --> 00:40:00.808\nAnd I know if any of you guys are security\nprofessionals out there, you're like oh,\n\n740\n00:40:00.808 --> 00:40:01.709\nwhy would you do that?\n\n741\n00:40:01.709 --> 00:40:04.110\nWhy would you give a public\nIP to every system?\n\n742\n00:40:04.110 --> 00:40:07.940\nWell, NAT, Network Address Translation,\nwhat hides those IPs,\n\n743\n00:40:07.940 --> 00:40:10.580\nis really a sham for security.\n\n744\n00:40:10.580 --> 00:40:12.310\nIt's security through obscurity.\n\n745\n00:40:12.310 --> 00:40:14.400\nIt just hides things,\nit doesn't actually protect them.\n\n746\n00:40:14.400 --> 00:40:18.410\nAnd it's not that difficult to pull\nan attack through a net router.\n\n747\n00:40:18.410 --> 00:40:21.580\nSo it was really a false sense\nof security in the first place.\n\n748\n00:40:21.580 --> 00:40:22.940\nSo don't think of it that way.\n\n749\n00:40:22.940 --> 00:40:26.680\nYou'll still have things like firewalls,\nand VPN tunnels and other devices like\n\n750\n00:40:26.680 --> 00:40:31.830\nthat to secure your network, but when each\nmachine has their own public IP, a lot of\n\n751\n00:40:31.830 --> 00:40:37.830\nthe stuff like port forwarding, and all of\nthat UPnP automatic network configuration.\n\n752\n00:40:37.830 --> 00:40:41.360\nAll that crazy junk that you might have\nhad to deal with at home before goes away.\n\n753\n00:40:41.360 --> 00:40:44.960\nWe don't need that anymore, and\nthe network works a lot more reliably.\n\n754\n00:40:44.960 --> 00:40:47.350\nSo definitely some big\nbenefits to having that.\n\n755\n00:40:49.090 --> 00:40:54.860\nAll right, now that FE80 address,\nI mentioned that it makes it up.\n\n756\n00:40:54.860 --> 00:40:58.119\nWell, it's actually not just\nmaking it up from thin air.\n\n757\n00:40:58.119 --> 00:41:02.094\nWith IPv6, there's\n\n758\n00:41:02.094 --> 00:41:07.327\na process called EUI-64.\n\n759\n00:41:07.327 --> 00:41:10.300\nAnd EUI-64, it's a little standard.\n\n760\n00:41:10.300 --> 00:41:13.430\nIt actually stands for, oh,\nshoot, I always forget this, and\n\n761\n00:41:13.430 --> 00:41:14.240\nI thought I wrote it down.\n\n762\n00:41:14.240 --> 00:41:14.750\nBut you know what?\n\n763\n00:41:14.750 --> 00:41:16.110\nI didn't.\n\n764\n00:41:16.110 --> 00:41:20.692\nBut it's an unique IP generation,\nis what it stands for, and\n\n765\n00:41:20.692 --> 00:41:25.190\nwhat it does is it helps you\nto get that unique address.\n\n766\n00:41:25.190 --> 00:41:29.150\nThe problem is, how can one system\njust create a unique address?\n\n767\n00:41:29.150 --> 00:41:34.810\nWell, it knows that a link local,\nfor example, has to start with FE8.\n\n768\n00:41:34.810 --> 00:41:39.120\nAnd so when EUI-64 goes to build\nthe address, it assumes that it's gonna be\n\n769\n00:41:39.120 --> 00:41:41.660\na link-local,\nthat's where we start, all right.\n\n770\n00:41:41.660 --> 00:41:45.733\nAnd with a link-local, because it's\nnon-routable, part of the address\n\n771\n00:41:45.733 --> 00:41:50.202\nrepresents the network, but it doesn't\nreally matter cuz it's non-routable.\n\n772\n00:41:50.202 --> 00:41:53.010\nSo it always uses the same one, FE80.\n\n773\n00:41:53.010 --> 00:41:58.041\nAnd if I write that all the way out,\nit would be\n\n774\n00:41:58.041 --> 00:42:04.411\nFE80:0000:0000:0000, all right?\n\n775\n00:42:04.411 --> 00:42:07.786\nThat's the first half of the address.\n\n776\n00:42:07.786 --> 00:42:09.162\nBut then there's more, right?\n\n777\n00:42:09.162 --> 00:42:12.630\nThe rest of it comes afterwards.\n\n778\n00:42:12.630 --> 00:42:17.025\nAnd this is the part that's gonna be\nset for that individual client and\n\n779\n00:42:17.025 --> 00:42:18.452\nit needs to be unique.\n\n780\n00:42:18.452 --> 00:42:23.014\nSo the first 64 bits of my address,\nit's 128 bits,\n\n781\n00:42:23.014 --> 00:42:26.161\nthe first half would be FE80000.\n\n782\n00:42:26.161 --> 00:42:29.411\nSo in APIPA, we had 169.254.\n\n783\n00:42:29.411 --> 00:42:32.618\nHere we have FE80000.\n\n784\n00:42:32.618 --> 00:42:33.287\nAll right.\n\n785\n00:42:33.287 --> 00:42:36.084\nAnd then this second half of the address,\nwe need to generate.\n\n786\n00:42:36.084 --> 00:42:40.630\nAnd what EUI-64 says is, boy,\n\n787\n00:42:40.630 --> 00:42:46.160\nwouldn't it be nice if we had\nsome kind of a hexadecimal number\n\n788\n00:42:46.160 --> 00:42:49.810\nthat uniquely identified this machine\nwhere we didn't have duplicates?\n\n789\n00:42:49.810 --> 00:42:51.560\nWouldn't it be nice if that existed?\n\n790\n00:42:51.560 --> 00:42:53.494\nWell unfortunately we don't have that.\n\n791\n00:42:53.494 --> 00:42:56.745\nBut we do have a 48-bit number.\n\n792\n00:42:56.745 --> 00:42:59.250\nYou might have noticed looking\nat the exam objectives.\n\n793\n00:42:59.250 --> 00:43:00.840\nLet me pull the exam objectives up.\n\n794\n00:43:00.840 --> 00:43:03.320\nThere's an interesting\nlittle note in here.\n\n795\n00:43:03.320 --> 00:43:06.540\nSo we're talking about explaining the\npurpose and properties of IP addressing.\n\n796\n00:43:07.550 --> 00:43:11.630\nBut in the objectives,\nthey call out a MAC address.\n\n797\n00:43:11.630 --> 00:43:13.520\nWhy would they mention a MAC address here?\n\n798\n00:43:13.520 --> 00:43:15.541\nIf you remember the OSI model,\n\n799\n00:43:15.541 --> 00:43:18.663\nMAC addresses are at layer\ntwo of the OSS model.\n\n800\n00:43:18.663 --> 00:43:20.952\nAnd IP addresses are at\nlayer three of the OSS.\n\n801\n00:43:20.952 --> 00:43:22.310\nThese are different layers.\n\n802\n00:43:22.310 --> 00:43:22.900\nRight?\n\n803\n00:43:22.900 --> 00:43:25.360\nMACs don't influence IPs.\n\n804\n00:43:25.360 --> 00:43:27.020\nAnd IPs don't influence MACs.\n\n805\n00:43:27.020 --> 00:43:28.619\nSo why is that here?\n\n806\n00:43:28.619 --> 00:43:31.536\nWell the reason is UI64.\n\n807\n00:43:31.536 --> 00:43:36.960\nA MAC address is a hardware address\nthat's burned into your network adapter.\n\n808\n00:43:38.090 --> 00:43:41.460\nMAC stands for media access control.\n\n809\n00:43:41.460 --> 00:43:42.930\nIt's not Mac like Macintosh.\n\n810\n00:43:42.930 --> 00:43:47.240\nRight, it's media access control, and\nit identifies your network adapter.\n\n811\n00:43:47.240 --> 00:43:50.640\nIf you have a wireless adapter,\nit's got a MAC burned into it.\n\n812\n00:43:50.640 --> 00:43:53.320\nIf you've got a physical adapter,\nit's got a MAC burned into it.\n\n813\n00:43:53.320 --> 00:43:56.110\nIf you've got a fiber\noptic network adapter\n\n814\n00:43:56.110 --> 00:43:57.490\nit has a MAC address burned into it.\n\n815\n00:43:57.490 --> 00:43:59.100\nThey've all got MAC addresses.\n\n816\n00:43:59.100 --> 00:44:03.430\nIf they talk on an ethernet network,\nthey will have a MAC address, all right.\n\n817\n00:44:03.430 --> 00:44:10.202\nAnd that MAC address is 48 bits and\nit's hexadecimal.\n\n818\n00:44:10.202 --> 00:44:13.452\nIt's almost perfect for\nwhat we need in IPv6.\n\n819\n00:44:13.452 --> 00:44:18.412\nIt's 48 bits, hexadecimal and\nuniquely identifies your adapter.\n\n820\n00:44:18.412 --> 00:44:19.702\nThere's not going to be a duplicate.\n\n821\n00:44:19.702 --> 00:44:25.020\nThere's not going to be a duplicate on\nyour network, and so EUI 64 uses that.\n\n822\n00:44:25.020 --> 00:44:25.590\nAll right.\n\n823\n00:44:25.590 --> 00:44:28.500\nBut before I go too far into it,\nlet's talk a little bit more about MAC\n\n824\n00:44:28.500 --> 00:44:31.360\naddresses, because some of you might\nnot have been exposed to that before.\n\n825\n00:44:31.360 --> 00:44:34.410\nA MAC address is going to look\nsomething like this, right.\n\n826\n00:44:34.410 --> 00:44:38.200\nSo MAC, let me move this up on my screen.\n\n827\n00:44:38.200 --> 00:44:42.150\nMAC, that's media access control,\n\n828\n00:44:43.470 --> 00:44:47.630\nit's a 48 bit hexadecimal number.\n\n829\n00:44:48.780 --> 00:44:50.950\nOr hexadecimal, cuz it's not.\n\n830\n00:44:50.950 --> 00:44:53.630\nHexidecimal you can have letters,\nso it's not necessarily a number.\n\n831\n00:44:53.630 --> 00:44:56.160\nAnd it's assigned by\nthe hardware manufacturers.\n\n832\n00:44:59.370 --> 00:45:00.410\nAll right?\n\n833\n00:45:00.410 --> 00:45:03.430\nBut, it's not just made up out\nof the blue by them either.\n\n834\n00:45:03.430 --> 00:45:05.900\nThere's an organization called the IEEE.\n\n835\n00:45:05.900 --> 00:45:07.900\nThey're an engineering organization.\n\n836\n00:45:07.900 --> 00:45:11.060\nAnd they put together a lot of\nthe standards that we use in computing.\n\n837\n00:45:11.060 --> 00:45:14.460\nIn the IEEE you're the one\nwho defined MAC addresses.\n\n838\n00:45:14.460 --> 00:45:16.768\nAn example of a MAC address would\nbe something like this, and\n\n839\n00:45:16.768 --> 00:45:18.411\nthere's a few different ways to write it.\n\n840\n00:45:18.411 --> 00:45:22.911\nSo it might be written as,\nlet me just make one up.\n\n841\n00:45:22.911 --> 00:45:27.461\nYou know what, here, let me just use\nthe own from my own laptop here so\n\n842\n00:45:27.461 --> 00:45:29.827\nThat is my MAC address right there.\n\n843\n00:45:38.160 --> 00:45:39.200\nThere.\n\n844\n00:45:39.200 --> 00:45:40.911\nAll right.\nThis is one way to right it.\n\n845\n00:45:40.911 --> 00:45:43.020\nThese are hexadecimal letters.\n\n846\n00:45:43.020 --> 00:45:46.460\nNotice how we've got a B and I've got a C,\nright, those letters mixed in there.\n\n847\n00:45:46.460 --> 00:45:50.540\nAnd we've got two digits and a colon,\ntwo digits and a colon and so on.\n\n848\n00:45:50.540 --> 00:45:52.340\nThat's one way to write it.\n\n849\n00:45:52.340 --> 00:45:57.090\nAnother way to write it is,\ninstead of colons, to use dashes.\n\n850\n00:45:57.090 --> 00:46:00.120\nYou'll see people do this pretty commonly.\n\n851\n00:46:00.120 --> 00:46:00.910\nAll right.\n\n852\n00:46:00.910 --> 00:46:06.065\nAnd there is a third way to write it which\nyou'll see some vendors use, especially\n\n853\n00:46:06.065 --> 00:46:10.560\nCisco, where they do it in groups of\nfour separated with some periods.\n\n854\n00:46:11.830 --> 00:46:12.880\nLike that.\n\n855\n00:46:12.880 --> 00:46:13.710\nOkay.\n\n856\n00:46:13.710 --> 00:46:15.450\nBut at the end of the day\nit doesn't matter.\n\n857\n00:46:15.450 --> 00:46:16.786\nThey all mean the same thing.\n\n858\n00:46:16.786 --> 00:46:22.244\nThey're all a 48 bit, hexadecimal system\nthat identifies my network adapter.\n\n859\n00:46:22.244 --> 00:46:23.118\nAll right?\n\n860\n00:46:23.118 --> 00:46:27.702\nNow on the 48 bits, the first 24 bits.\n\n861\n00:46:27.702 --> 00:46:34.200\nSo the first 24 bits,\nthat identifies The vendor.\n\n862\n00:46:34.200 --> 00:46:36.210\nWho made the device, all right?\n\n863\n00:46:36.210 --> 00:46:37.160\nWas it Intel?\n\n864\n00:46:37.160 --> 00:46:37.960\nWas it Broadcom?\n\n865\n00:46:37.960 --> 00:46:40.560\nWas it HP or Dell or Apple, or whoever?\n\n866\n00:46:40.560 --> 00:46:44.020\nWho was it that made that\nnetwork interface, all right?\n\n867\n00:46:44.020 --> 00:46:45.940\nThat one is called a OUI.\n\n868\n00:46:48.910 --> 00:46:53.230\nAnd that is the organizationally\nunique identifier.\n\n869\n00:46:53.230 --> 00:46:54.860\nThat's a mouthful.\n\n870\n00:46:54.860 --> 00:46:58.842\nOrganizationally unique identifier.\n\n871\n00:46:58.842 --> 00:47:02.230\nAll right so, it's identifying\nthe organization and what'll happen is if\n\n872\n00:47:02.230 --> 00:47:04.830\nyou're a company, let's say you decide\ntoday hey I'm gonna open up a company that\n\n873\n00:47:04.830 --> 00:47:08.920\nmakes network cards or makes some device\nthat has a network jack on it like Roku.\n\n874\n00:47:08.920 --> 00:47:11.160\nRoku decides hey they're\ngonna make these boxes and\n\n875\n00:47:11.160 --> 00:47:12.820\nthey've got network jacks on them.\n\n876\n00:47:12.820 --> 00:47:14.570\nThey're going to need MAC addresses.\n\n877\n00:47:14.570 --> 00:47:19.500\nSo, they call up the IEEE and they say,\nhey we're a new business we're going to be\n\n878\n00:47:19.500 --> 00:47:23.610\nputting in network jacks into our systems\nwe're going to make them ourselves we're\n\n879\n00:47:23.610 --> 00:47:26.770\nnot going to buy them from intel or\nwhatever, we're making them ourselves.\n\n880\n00:47:26.770 --> 00:47:30.957\nThe IEEE will say okay,\nlet me give you an OUI and\n\n881\n00:47:30.957 --> 00:47:34.537\nthey'll give them the first 24 bits.\n\n882\n00:47:34.537 --> 00:47:39.526\nAll right, and\nthat will leave them with 24 more bits\n\n883\n00:47:39.526 --> 00:47:44.202\nright there to be able to\nassign to their hardware.\n\n884\n00:47:44.202 --> 00:47:50.251\n24 bits is enough to generate 16.7\nmillion individual unique MAC addresses.\n\n885\n00:47:50.251 --> 00:47:54.684\nSo as long as they manufacture\nless than 16.7 million devices,\n\n886\n00:47:54.684 --> 00:47:57.418\nthey'll fit right there in that one OUI.\n\n887\n00:47:57.418 --> 00:48:00.928\nBut, if they do more, right,\nif they're really successful, and\n\n888\n00:48:00.928 --> 00:48:03.920\nthey sell more than that,\nthen they'll need more OUIs.\n\n889\n00:48:03.920 --> 00:48:06.546\nAnd they'll go back to the IEEE and\nthey'll say, hey guys, sorry,\n\n890\n00:48:06.546 --> 00:48:08.696\nwe kind of used that whole one,\ncan we have another one?\n\n891\n00:48:08.696 --> 00:48:09.714\nAnd they'll get another one.\n\n892\n00:48:09.714 --> 00:48:16.880\nAnd so a company may have more than one\nOUI but, they'll never issue duplicates.\n\n893\n00:48:16.880 --> 00:48:18.630\nThey won't reuse the addresses.\n\n894\n00:48:18.630 --> 00:48:22.860\nSo as they just fill up one OUI, they\njust go to the next one and continue on.\n\n895\n00:48:22.860 --> 00:48:27.890\nCompanies like Apple, HP,\nDell they have a multitude of OUIs.\n\n896\n00:48:27.890 --> 00:48:31.300\nThey may have five, six, ten OUIs.\n\n897\n00:48:31.300 --> 00:48:34.801\nSmaller companies though,\nyou take somebody like,\n\n898\n00:48:34.801 --> 00:48:38.470\nI don't know who manufactures,\nwell, Roku, right?\n\n899\n00:48:38.470 --> 00:48:41.449\nI don't know that Roku has\nsold 16.7 million Rokus.\n\n900\n00:48:41.449 --> 00:48:46.170\nSo they may still be on their original OUI\nor they may not have their own at all.\n\n901\n00:48:46.170 --> 00:48:49.460\nIf they're buying their network\nadapters from Intel or Broadcom,\n\n902\n00:48:49.460 --> 00:48:54.130\nthen that's the company that's actually\ngonna be assigning the address to it, so\n\n903\n00:48:54.130 --> 00:48:56.180\nit may not even be Roku identified at all.\n\n904\n00:48:57.960 --> 00:49:01.250\nIf you're ever curious and you want to\nlook it up though, you can take the first\n\n905\n00:49:01.250 --> 00:49:06.570\nhalf of that address and you can look\nit up against the IEEE's website.\n\n906\n00:49:06.570 --> 00:49:11.440\nThey do expect it to be either with\nhyphens or with nothing at all,\n\n907\n00:49:11.440 --> 00:49:13.180\njust the six digits all in a row.\n\n908\n00:49:13.180 --> 00:49:17.630\nBut you just take those first six\ncharacters and you can copy that and\n\n909\n00:49:17.630 --> 00:49:19.470\njump over to the IEEE's webpage.\n\n910\n00:49:19.470 --> 00:49:20.950\nSo I've got it pulled up back here.\n\n911\n00:49:20.950 --> 00:49:23.660\nSo here's\nthe IEEE's Standards Association, and\n\n912\n00:49:23.660 --> 00:49:27.390\nthey have a MAC address\nlook up tool on their site.\n\n913\n00:49:27.390 --> 00:49:31.040\nAnd I'll post the URL to\nthis with the show notes.\n\n914\n00:49:31.040 --> 00:49:34.650\nBut you can come down here and just punch\nin that first part of the MAC address.\n\n915\n00:49:34.650 --> 00:49:38.742\nSo there's my first part of the MAC\naddress, and I'll hit Search.\n\n916\n00:49:38.742 --> 00:49:45.486\nAnd it's gonna look it up and tell me,\nthat OUI 685B35 is Apple right?\n\n917\n00:49:45.486 --> 00:49:48.808\nI'm on a MacBook here, so\nthat's an Apple address and\n\n918\n00:49:48.808 --> 00:49:52.450\nhere's their mailing address so\nyou can find them.\n\n919\n00:49:52.450 --> 00:49:56.390\nSo, they keep that in a database,\nthey manage it, they issue it, and\n\n920\n00:49:56.390 --> 00:49:58.690\nyou can actually download the whole\ndatabase, they've got right here.\n\n921\n00:49:58.690 --> 00:50:00.813\nYou can download a copy of it.\n\n922\n00:50:00.813 --> 00:50:02.790\nThey update it daily,\nand you can pull it up.\n\n923\n00:50:02.790 --> 00:50:04.130\nI forget, I think it's just text.\n\n924\n00:50:04.130 --> 00:50:05.170\nYeah, here it is.\n\n925\n00:50:05.170 --> 00:50:05.860\nAnd when you pull it up,\n\n926\n00:50:05.860 --> 00:50:09.710\nyou'll see the early ones are really\nold companies like Xerox.\n\n927\n00:50:09.710 --> 00:50:14.160\nXerox was a pioneer in the world of\nEthernet, and so that's why they've got so\n\n928\n00:50:14.160 --> 00:50:17.960\nmuch of the beginning ones, but\nsee how Xerox has several of these.\n\n929\n00:50:17.960 --> 00:50:19.050\nAnd then you've got other companies,\n\n930\n00:50:19.050 --> 00:50:23.940\nthere was Fujitsu, Oracle,\nProdigy, good old Prodigy.\n\n931\n00:50:23.940 --> 00:50:27.500\nBut you'll see a bunch of companies\nranging from small ones to big ones, and\n\n932\n00:50:27.500 --> 00:50:31.430\nit just depends on how much\nequipment they have generated.\n\n933\n00:50:31.430 --> 00:50:35.089\nThere's more Apple right there, and\nwe'll probably find Apple several times\n\n934\n00:50:35.089 --> 00:50:37.668\nthroughout it,\nevery time they fill up an OUI, right.\n\n935\n00:50:37.668 --> 00:50:43.585\nSo we could search for somebody like Roku,\nand that's like a city there.\n\n936\n00:50:43.585 --> 00:50:44.535\nThere we go, Roku.\n\n937\n00:50:44.535 --> 00:50:48.491\nSo Roku actually has at least one OUI,\n000d4b.\n\n938\n00:50:48.491 --> 00:50:52.730\nSo there's that one, and if we keep\nsearching, we might find more, or\n\n939\n00:50:52.730 --> 00:50:53.645\nwe might not.\n\n940\n00:50:53.645 --> 00:50:54.735\nThere's another one, right?\n\n941\n00:50:54.735 --> 00:50:57.505\nSo they have sold more\nthan 16.7 million devices,\n\n942\n00:50:57.505 --> 00:51:00.900\nbecause we can see they've\npulled another OUI.\n\n943\n00:51:00.900 --> 00:51:03.320\nPretty neat stuff you know,\nit's all right there.\n\n944\n00:51:03.320 --> 00:51:09.063\nSo I've kind of diverged from my original\ntopic though which is how we use this for\n\n945\n00:51:09.063 --> 00:51:09.998\nEUI-64.\n\n946\n00:51:09.998 --> 00:51:13.613\nEUI-64 says hey I need\nto generate a 64 bit,\n\n947\n00:51:13.613 --> 00:51:18.480\nhexadecimal number that's\nunique to this machine.\n\n948\n00:51:18.480 --> 00:51:20.460\nA MAC address would be perfect right?\n\n949\n00:51:20.460 --> 00:51:22.120\nIt's only 48 bits.\n\n950\n00:51:22.120 --> 00:51:25.530\nBut if we just pad it a little bit, we\nstick some extra values in there, it can\n\n951\n00:51:25.530 --> 00:51:29.340\nbe 64 bit and it's already unique so\nwe don't have to worry about duplicates.\n\n952\n00:51:29.340 --> 00:51:31.200\nAnd that's exactly what it does.\n\n953\n00:51:31.200 --> 00:51:36.710\nWhat it does is it takes that MAC address,\nso this is my MAC address, all right, and\n\n954\n00:51:36.710 --> 00:51:42.440\nEUI-64 will take that and\nstick some more stuff in there.\n\n955\n00:51:42.440 --> 00:51:45.298\nAnd where did I write EUI-64?\n\n956\n00:51:45.298 --> 00:51:46.130\nI guess I didn't.\n\n957\n00:51:46.130 --> 00:51:50.202\nSo what EUI-64 will do is take\nthat MAC address like mine.\n\n958\n00:51:53.263 --> 00:51:57.855\nSo here's my original media\naccess control address, and\n\n959\n00:51:57.855 --> 00:52:04.690\nit will then pad it, so my padded MAC,\nit's gonna go straight to the middle.\n\n960\n00:52:04.690 --> 00:52:08.190\nAnd in the middle of it,\nin between the two paths, right?\n\n961\n00:52:08.190 --> 00:52:10.512\nSo you got 24 bits on the left,\n24 bits on the right.\n\n962\n00:52:10.512 --> 00:52:16.743\nIt's gonna add FF:FE:.\n\n963\n00:52:16.743 --> 00:52:20.590\nThose two extra values there, FF, FE.\n\n964\n00:52:20.590 --> 00:52:25.845\nThat's how you can spot an EUI-64 address,\nit will take that and\n\n965\n00:52:25.845 --> 00:52:31.697\nthere's 64 bits, and\nnow it can build my EUI-64 address.\n\n966\n00:52:34.925 --> 00:52:38.369\nAnd it will look just like this.\n\n967\n00:52:38.369 --> 00:52:40.938\nJust gonna throw that in there,\nthat's the first half and\n\n968\n00:52:40.938 --> 00:52:43.885\nthen we'll take this in here and\nthrow it in the second half.\n\n969\n00:52:43.885 --> 00:52:45.665\nI got a lot more colons than I need, so\n\n970\n00:52:45.665 --> 00:52:50.395\nI gotta take those out to\nconform to IPv6's arrangement.\n\n971\n00:52:50.395 --> 00:52:52.630\nWhoops, that was not one of them.\n\n972\n00:52:52.630 --> 00:52:57.610\nThere, and you'll see there's that\nlink local address written out, and\n\n973\n00:52:57.610 --> 00:53:03.100\nthey got a full 128 bits,\nthat basically guaranteed to be unique.\n\n974\n00:53:03.100 --> 00:53:06.430\nThere's no other network adapter on my\nphysical network that should have that\n\n975\n00:53:06.430 --> 00:53:08.510\nsame MAC address, it's now unique.\n\n976\n00:53:08.510 --> 00:53:11.640\nSo it's a neat way to generate that\naddress without creating a duplicate, and\n\n977\n00:53:11.640 --> 00:53:12.600\nif a duplicate is detected,\n\n978\n00:53:12.600 --> 00:53:15.790\nit will just randomly generate one,\nto pick on that isn't in use.\n\n979\n00:53:15.790 --> 00:53:20.620\nBut it's doing that and you might have\nnoticed that when you look at my machine,\n\n980\n00:53:20.620 --> 00:53:25.130\nso here's my machine and\nmy FEA address, there's my link local.\n\n981\n00:53:25.130 --> 00:53:30.110\nNotice right in the middle of that FFFE,\nI can spot it right there.\n\n982\n00:53:30.110 --> 00:53:34.160\nThat's my machine generating\none of these EUI-64 link\n\n983\n00:53:34.160 --> 00:53:36.740\nlocal addresses to be able to talk.\n\n984\n00:53:36.740 --> 00:53:39.500\nIPV6 is very automated.\n\n985\n00:53:39.500 --> 00:53:43.340\nIt can generate a lot of connectivity\nwithout us having to do anything.\n\n986\n00:53:43.340 --> 00:53:44.880\nSo it is really powerful.\n\n987\n00:53:44.880 --> 00:53:46.500\nIt's an exciting protocol.\n\n988\n00:53:46.500 --> 00:53:49.090\nA lot of us are really looking\nforward to the day when we\n\n989\n00:53:49.090 --> 00:53:52.030\nfinally get to roll this out and\nput it in action.\n\n990\n00:53:54.280 --> 00:53:58.678\nAll right so\nthat's probably enough on IPv6.\n\n991\n00:53:58.678 --> 00:54:03.038\nI could go on a lot more but\nthis is Network+.\n\n992\n00:54:03.038 --> 00:54:04.670\nThis is your first exposure to IPv6 and\n\n993\n00:54:04.670 --> 00:54:07.880\nI don't want to blow your mind\nany more than we already have.\n\n994\n00:54:07.880 --> 00:54:11.780\nIf you want to learn more about IPv6,\nI encourage you to jump over to\n\n995\n00:54:11.780 --> 00:54:16.190\none of our CCNA shows like\nthe Cisco CCNT and CCNA show.\n\n996\n00:54:16.190 --> 00:54:20.170\nThere, not only do we talk about IPv6,\nbut we show how to implement it.\n\n997\n00:54:20.170 --> 00:54:23.200\nWe configure it on some Cisco routers and\nget it going there.\n\n998\n00:54:23.200 --> 00:54:26.512\nYou'll also see it in some of\nthe Windows Server shows that we do,\n\n999\n00:54:26.512 --> 00:54:27.911\nWindows Server 2012.\n\n1000\n00:54:27.911 --> 00:54:32.250\nWe set up some of the services there and\nshow how to do DNS lookups and all that.\n\n1001\n00:54:32.250 --> 00:54:33.970\nSo there's a lot more to it.\n\n1002\n00:54:33.970 --> 00:54:36.750\nBut this is enough for\nan introduction and definitely covers\n\n1003\n00:54:36.750 --> 00:54:39.670\nall the things that you're gonna\nsee on the exam based around IPv6.\n\n1004\n00:54:41.150 --> 00:54:44.610\nAll right, well, that is not\nthe end of IP addressing for us.\n\n1005\n00:54:44.610 --> 00:54:45.770\nWe still have a little more to go.\n\n1006\n00:54:45.770 --> 00:54:48.570\nWe haven't even talked about subnets yet.\n\n1007\n00:54:48.570 --> 00:54:52.880\nBut for IPv6 that's a wrap so this is\na pretty good stopping point for us.\n\n1008\n00:54:52.880 --> 00:54:55.410\nNow if you have any questions\nI don't blame you, right.\n\n1009\n00:54:55.410 --> 00:54:58.510\nIt's definitely a big\namount to swallow there.\n\n1010\n00:54:58.510 --> 00:55:01.530\nSo, if you have questions,\nfeel free to ask.\n\n1011\n00:55:01.530 --> 00:55:04.450\nLive during the show you\ncan go to itpro.tv/live and\n\n1012\n00:55:04.450 --> 00:55:06.680\nyou'll the chat box\nright beneath the video.\n\n1013\n00:55:06.680 --> 00:55:10.000\nPost your questions, we monitor and\nanswer during the show.\n\n1014\n00:55:10.000 --> 00:55:13.710\nIf you have questions, after the show,\njump to our Q&A forums.\n\n1015\n00:55:13.710 --> 00:55:15.729\nAt the top of every page\nis a link that says Q&A,\n\n1016\n00:55:15.729 --> 00:55:18.280\nyou can hop in there and\npost your questions.\n\n1017\n00:55:18.280 --> 00:55:21.780\nIt will sit there and we'll monitor it and\ncatch that after hours.\n\n1018\n00:55:21.780 --> 00:55:24.587\nWe are not up until the wee hours of\nthe night checking it, but we do check it\n\n1019\n00:55:24.587 --> 00:55:27.684\nthroughout the day, and that's a great\nway to get answers when we're not live.\n\n1020\n00:55:27.684 --> 00:55:32.602\nSo take advantage of either one of those\nresources, whichever one works for you.\n\n1021\n00:55:32.602 --> 00:55:34.512\nAll right, well I hope you\nguys enjoyed the show today.\n\n1022\n00:55:34.512 --> 00:55:39.111\nSigning off for ITProTV I'm Don Pezet and\nI'll see you next time.\n\n1023\n00:55:39.111 --> 00:55:49.111\n[MUSIC]\n\n1024\n00:55:51.287 --> 00:55:56.924\n[SOUND]\n\n",
          "vimeoId": "109806715"
        },
        {
          "description": "In this episode Don begins the multipart series on IPv4 subnetting. He begins with a detailed discussion on what a subnet is, what it does and what we use it for. He continues with explaining the process of decimal to binary conversion and how to determine whether an IP address is part of the same network as another address.",
          "length": "4679",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/1-3-IPv4-Subnetting.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/1-3-IPv4-Subnetting-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/1-3-IPv4-Subnetting-sm.jpg",
          "title": "IPv4 Subnetting",
          "transcript": "",
          "vimeoId": "109919271"
        },
        {
          "description": "In this episode Don continues with a discussion on IPv4 subnetting with leveraging the use of subnets to create smaller or larger network to optimize network performance. He uses examples of splitting and combining networks to ensure enough IP address are available for network devices.",
          "length": "5797",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/1-3-IPv4-Subnetting-Pt-2.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/1-3-IPv4-Subnetting-Pt-2-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/1-3-IPv4-Subnetting-Pt-2-sm.jpg",
          "title": "IPv4 Subnetting Part 2",
          "transcript": "",
          "vimeoId": "110136671"
        },
        {
          "description": "",
          "length": "487",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example01-110614.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example01-110614-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example01-110614-sm.jpg",
          "title": "Subnetting Example #1",
          "transcript": "",
          "vimeoId": "113538440"
        },
        {
          "description": "",
          "length": "581",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example02-110614.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example02-110614-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example02-110614-sm.jpg",
          "title": "Subnetting Example #2",
          "transcript": "",
          "vimeoId": "113537690"
        },
        {
          "description": "",
          "length": "813",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example03-110614.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example03-110614-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example03-110614-sm.jpg",
          "title": "Subnetting Example #3",
          "transcript": "",
          "vimeoId": "113540546"
        },
        {
          "description": "",
          "length": "935",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example04-120214.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example04-120214-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example04-120214-sm.jpg",
          "title": "Subnetting Example #4",
          "transcript": "",
          "vimeoId": "113538154"
        },
        {
          "description": "",
          "length": "691",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example05-120214.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example05-120214-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example05-120214-sm.jpg",
          "title": "Subnetting Example #5",
          "transcript": "",
          "vimeoId": "113538003"
        },
        {
          "description": "",
          "length": "676",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example06-120214.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example06-120214-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example06-120214-sm.jpg",
          "title": "Subnetting Example #6",
          "transcript": "",
          "vimeoId": "113538298"
        },
        {
          "description": "",
          "length": "1094",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example07-120214.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example07-120214-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example07-120214-sm.jpg",
          "title": "Subnetting Example #7",
          "transcript": "",
          "vimeoId": "113538279"
        },
        {
          "description": "",
          "length": "727",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example08-120214.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example08-120214-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example08-120214-sm.jpg",
          "title": "Subnetting Example #8",
          "transcript": "",
          "vimeoId": "113538450"
        },
        {
          "description": "",
          "length": "760",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example09-120214.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example09-120214-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/networkplus/networkplus-1-3-subnetting-example09-120214-sm.jpg",
          "title": "Subnetting Example #9",
          "transcript": "",
          "vimeoId": "113538309"
        },
        {
          "description": "In this episode, Wes and Ronnie take a look into the working with switches and the purpose of switching.  They introduce the concept of switching as a centralized connectivity device that provides forwarding, flooding and filtering of data to all the devices that are plugged into a switch. They identify and describe the basic IEEE 802.1q VLAN tagging concept.  They also describe some of the issues in a redundant switch topology (working with multiple switches with multiple paths) and how Spanning Tree Protocol functions.",
          "length": "4626",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/031-Switching.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/031-Switching-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/031-Switching-sm.jpg",
          "title": "Switching",
          "transcript": "",
          "vimeoId": "105865972"
        },
        {
          "description": "In this episode, Wes and Ronnie introduce the concept of working with routers and how routers function.  Routers help us to forward data between different IP networks but can only do so if they have routes they can see.  Wes and Ronnie show internal hardware of a basic router and talk about how routers can build the routing tables they need to forward data to other networks.  They introduce the concepts of static and dynamic routing and describe how some of the routing protocols work.",
          "length": "6121",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/032-Routers.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/032-Routers-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/032-Routers-sm.jpg",
          "title": "Routers",
          "transcript": "",
          "vimeoId": "106171020"
        },
        {
          "description": "In this episode, Wes and Ronnie discuss the most common ports used in networking.  They provide the background of using ports between a source and destination computer.  The ports are important to keeping network traffic separated between source and destination.  Using Wireshark, they display the port information while making an http, ftp and telnet connection across a network.  ",
          "length": "3392",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/033-Identifying-Common-TCPUDP-Ports.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/033-Identifying-Common-TCPUDP-Ports-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/033-Identifying-Common-TCPUDP-Ports-sm.jpg",
          "title": "Identifying Common TCP/UDP Ports",
          "transcript": "",
          "vimeoId": "106967402"
        },
        {
          "description": "In this episode Nate and Wes discuss some of the common networking protocols every Network+ professional should be familiar with. They give examples and scenarios of the use of these protocols. ",
          "length": "5424",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/034-Common-Network-Protocols.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/034-Common-Network-Protocols-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/034-Common-Network-Protocols-sm.jpg",
          "title": "Common Network Protocols",
          "transcript": "",
          "vimeoId": "107163250"
        },
        {
          "description": "In this episode, Nate and Ronnie discuss the one most common protocols used in networking, DNS (Domain Name System).  DNS helps us to resolve names to IP addresses to make it easier for people to network. People can use names instead of IP addresses to connect to machines.  Nate and Ronnie talk about the structure of DNS, they describe the function of DNS server and the components that make DNS work.  They demonstrate the DNS process works and show the different records and how to manually create a record too.",
          "length": "5068",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/035-DNS-Concepts.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/035-DNS-Concepts-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/035-DNS-Concepts-sm.jpg",
          "title": "DNS Concepts",
          "transcript": "",
          "vimeoId": "107256005"
        },
        {
          "description": "In this episode Wes and Ronnie take a look at the network troubleshooting methodology. They discuss the steps every Network+ professional should be familiar with then diagnosing network issues. They give examples of identifying the problem, establishing a plan and verifying full system functionality.",
          "length": "5886",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/036-Troubleshooting-Methodology.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/036-Troubleshooting-Methodology-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/036-Troubleshooting-Methodology-sm.jpg",
          "title": "Troubleshooting Methodology",
          "transcript": "",
          "vimeoId": "107464017"
        },
        {
          "description": "In this episode Wes and Don take a look at virtual networking components and its role in powering cloud computing. They discuss components such as network as a service (NaaS) as well as virtual PBXs and onsite vs. offsite components.",
          "length": "3305",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/011-Virtual-Network-Components.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/011-Virtual-Network-Components-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/011-Virtual-Network-Components-sm.jpg",
          "title": "Virtual Network Components",
          "transcript": "",
          "vimeoId": "78302135"
        }
      ],
      "title": "Networking Concepts"
    },
    {
      "episodes": [
        {
          "description": "In this episode Wes and Mike take a look at the technology encountered when configuring routers and switches such as address translation and traffic filtering.",
          "length": "4679",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/005-Routers-and-Switches.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/005-Routers-and-Switches-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/005-Routers-and-Switches-sm.jpg",
          "title": "Routers and Switches",
          "transcript": "",
          "vimeoId": "78230265"
        },
        {
          "description": "In this episode Wes and Mike discuss the planning and configuring of a wireless network such as WAP placement, antenna types and channel selection.",
          "length": "4385",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/006-Configure-Wireless-Network.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/006-Configure-Wireless-Network-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/006-Configure-Wireless-Network-sm.jpg",
          "title": "Configure a Wireless Network",
          "transcript": "",
          "vimeoId": "78230502"
        },
        {
          "description": "In this episode Wes and Don examine the Dynamic Host Configuration Protocol (DHCP). They take a look at the concept and theory of DHCP and then demonstrate implementing DHCP in a network environment.",
          "length": "4249",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/008-DHCP.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/008-DHCP-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/008-DHCP-sm.jpg",
          "title": "DHCP",
          "transcript": "",
          "vimeoId": "78230693"
        },
        {
          "description": "In this episode Nate and Don continue to explore the area of network troubleshooting. They work through a series of network issues and demonstrate how to diagnose and repair the issue using CompTIA's recommended troubleshooting methodology.",
          "length": "6067",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/012-Troubleshooting-Pt-2.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/012-Troubleshooting-Pt-2-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/012-Troubleshooting-Pt-2-sm.jpg",
          "title": "Troubleshooting Part 2",
          "transcript": "",
          "vimeoId": "78342561"
        },
        {
          "description": "In this episode Nate and Don explore the world of designing and implementing a small office or home office network. They take a look at the various components that make up a SOHO network as well as other considerations of that design.",
          "length": "5632",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/013-Building-SOHO-Network.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/013-Building-SOHO-Network-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/013-Building-SOHO-Network-sm.jpg",
          "title": "Building a SOHO Network",
          "transcript": "",
          "vimeoId": "78302133"
        }
      ],
      "title": "Network Installation and Configuration"
    },
    {
      "episodes": [
        {
          "description": "In this episode Wes and Don take look at various media types and connector types.",
          "length": "6262",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/016-Network-Media.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/016-Network-Media-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/016-Network-Media-sm.jpg",
          "title": "Network Media",
          "transcript": "",
          "vimeoId": "79265654"
        },
        {
          "description": "In this episode Wes and Don take a look at the various wireless standards covered by IEEE 802.11. They explore the characteristics and behavior of each protocol and explain real world uses.",
          "length": "3388",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/018-Network-Media-Pt-2.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/018-Network-Media-Pt-2-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/018-Network-Media-Pt-2-sm.jpg",
          "title": "Network Media Part 2",
          "transcript": "",
          "vimeoId": "79361291"
        },
        {
          "description": "In this episode Wes and Don take a look at wide area network (WAN) connections. They discuss technologies ranging from standard business connections like cable broadband and T1 lines all the way through ISP level connections like OC192s.",
          "length": "5323",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/020-WAN-Technologies.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/020-WAN-Technologies-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/020-WAN-Technologies-sm.jpg",
          "title": "WAN Technologies",
          "transcript": "",
          "vimeoId": "79999095"
        },
        {
          "description": "In this episode Wes and Nate discuss different types of network topologies such as star, mesh, and networking models such as client-server. They also explain the different LAN technologies and properties of each.",
          "length": "5384",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/022-Technologies-and-Topologies.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/022-Technologies-and-Topologies-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/022-Technologies-and-Topologies-sm.jpg",
          "title": "Technologies and Topologies",
          "transcript": "",
          "vimeoId": "81109147"
        },
        {
          "description": "In this episode Wes and Don take a look at cabling design and documentation. They discuss the common methods for cabling a building and then discus the various ways of documenting the physical and logical networks.",
          "length": "5270",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/024-Wired-Distribution.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/024-Wired-Distribution-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/024-Wired-Distribution-sm.jpg",
          "title": "Wiring Distribution",
          "transcript": "",
          "vimeoId": "81719759"
        }
      ],
      "title": "Network Media and Topologies"
    },
    {
      "episodes": [
        {
          "description": "In this episode Nate and Don take a look at various network appliances such as load balances and proxy servers. They also demonstrate network monitoring using SNMP and network sniffers.",
          "length": "5483",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/017-Network-Management.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/017-Network-Management-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/017-Network-Management-sm.jpg",
          "title": "Network Management",
          "transcript": "",
          "vimeoId": "79265622"
        },
        {
          "description": "In this episode Nate and Don discuss troubleshooting network issues and the assorted network tools than can be used to isolate the problem.",
          "length": "4135",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/023-Troubleshooting-Tools.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/023-Troubleshooting-Tools-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/023-Troubleshooting-Tools-sm.jpg",
          "title": "Troubleshooting Tools",
          "transcript": "",
          "vimeoId": "81499064"
        },
        {
          "description": "In this episode Ronnie and Don take a look at network optimization technologies. They discuss hardware and software solutions that can help a network be resilient and efficient.",
          "length": "2527",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/026-Network-Optimization.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/026-Network-Optimization-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/026-Network-Optimization-sm.jpg",
          "title": "Network Optimization",
          "transcript": "",
          "vimeoId": "82096103"
        },
        {
          "description": "In this ITProTV special Ronnie and Don answer a question from the Q&A. They describe Simple Network Management Protocol (SNMP) in detail and then demonstrate several real-world examples of collecting and interpreting SNMP data for monitoring purposes.",
          "length": "1166",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/027-SNMP.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/027-SNMP-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/027-SNMP-sm.jpg",
          "title": "Simple Network Management Protocol (SNMP)",
          "transcript": "",
          "vimeoId": "87179915"
        }
      ],
      "title": "Network Management"
    },
    {
      "episodes": [
        {
          "description": "In this episode Nate and Don discuss wireless security measures and methods of user authentication. They demonstrate device placement and signal strength planning as well as authenticating on remote resources.",
          "length": "4799",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/015-Network-Security.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/015-Network-Security-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/015-Network-Security-sm.jpg",
          "title": "Network Security",
          "transcript": "",
          "vimeoId": "79104575"
        },
        {
          "description": "In this episode Nate and Don take a look at methods of securing network access. They discuss access control lists (ACL) and various VPN tunneling technologies. They continue with remote access types such as Remote Desktop Protocol (RDP) as well as Secure Shell (SSH).",
          "length": "5544",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/014-Network-Access-Security.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/014-Network-Access-Security-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/014-Network-Access-Security-sm.jpg",
          "title": "Network Access Security",
          "transcript": "",
          "vimeoId": "78818276"
        },
        {
          "description": "In this episode Mike and Don discuss some of the common security threats that network administrators are faced with and examine some of the methods used to defend against them.",
          "length": "6197",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/021-Security-Threats-and-Appliances.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/021-Security-Threats-and-Appliances-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/021-Security-Threats-and-Appliances-sm.jpg",
          "title": "Security Threats and Appliances",
          "transcript": "",
          "vimeoId": "81009444"
        },
        {
          "description": "In this episode Nate and Don demonstrate the installation and management of a basic firewall. They run through various scenarios and demonstrate a typical configuration. If you would like to learn more about pfSense be sure to check out their website at http://pfsense.org",
          "length": "4875",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/019-Configuring-A-Firewall.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/019-Configuring-A-Firewall-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/netplus/019-Configuring-A-Firewall-sm.jpg",
          "title": "Configuring a Firewall",
          "transcript": "",
          "vimeoId": "79830178"
        }
      ],
      "title": "Network Security"
    }
  ],
  "url": "network",
  "vLab": false
}
