{
  "description": "In this series we will be covering the use of network mapper utility aptly called Nmap. This series aims to give the viewer a firm grasp of the concepts and applications inherent to Nmap, such as Host Discovery, Port Scanning, Service/OS/Version Detection, and the Nmap Scripting Engine(NSE) for the purposes of security and general network administration.",
  "descriptionMD": "",
  "length": "25597",
  "name": "Nmap",
  "practiceExam": false,
  "subtitle": "Network Mapper, a Security Scanner",
  "tagUrl": "network-admin",
  "topics": [
    {
      "episodes": [
        {
          "description": "In this episode, Wes and Dan explore the administrative utility known as Nmap. They discuss what the Nmap software is and might use this software. They demonstrate how to obtain the software as well the types of operating systems that support Nmap and their associated installer types. They will show how to install Nmap in the major operating systems such as Windows, Ubuntu and CentOS.",
          "length": "2706",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-1-installing_nmap-050316-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-1-installing_nmap-050316-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-1-installing_nmap-050316-1-sm.jpg",
          "title": "Installing Nmap",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.434 --> 00:00:14.831\nWelcome back to another exciting\nepisode here at IT Pro TV.\n\n3\n00:00:14.831 --> 00:00:17.760\nI'm your host, Wes Bryan,\nand in today's episode,\n\n4\n00:00:17.760 --> 00:00:22.280\nwe are diving into the world of none\nother than something called Nmap.\n\n5\n00:00:22.280 --> 00:00:24.750\nThat's right, we've got a special\nepisode here for you today, and\n\n6\n00:00:24.750 --> 00:00:27.540\njoining us today in the studios is\nnone other than Mr. Dan Lowrie.\n\n7\n00:00:27.540 --> 00:00:28.710\nDan, how are you doing today, sir?\n\n8\n00:00:28.710 --> 00:00:31.540\nMan, I'm doing great,\nexcited to be hear today!\n\n9\n00:00:31.540 --> 00:00:34.870\nNmap and computer security,\none of my favorite topics.\n\n10\n00:00:34.870 --> 00:00:40.710\nSo I am really looking forward for us to\ntake a really good deep dive into Nmap,\n\n11\n00:00:40.710 --> 00:00:43.520\nbecause you may have heard of it if\nyou've been around computers at all for\n\n12\n00:00:43.520 --> 00:00:44.150\nany length of time.\n\n13\n00:00:44.150 --> 00:00:47.660\nSpecifically security,\nyou've probably heard this term and\n\n14\n00:00:47.660 --> 00:00:51.390\nthis little software bundle\nmentioned from time to time.\n\n15\n00:00:51.390 --> 00:00:54.470\nAnd if you have you may what is this and\nwhat does it do?\n\n16\n00:00:54.470 --> 00:00:58.000\nAnd you know that maybe even\nsome nefarious type people\n\n17\n00:00:58.000 --> 00:01:01.070\ntend to lurk about using\nthis tool as well and\n\n18\n00:01:01.070 --> 00:01:04.050\nthat's something we need to get into but\nwhat is M Map?\n\n19\n00:01:04.050 --> 00:01:08.530\nHow do we use it I want you to be\nable by the end of this series\n\n20\n00:01:08.530 --> 00:01:11.290\nto say I know pretty darn well.\n\n21\n00:01:11.290 --> 00:01:13.550\nI know anybody can kick off a scan.\n\n22\n00:01:13.550 --> 00:01:16.470\nAnybody can grab and\nmap type it into a command line.\n\n23\n00:01:16.470 --> 00:01:21.230\nUse the graphical interface that they have\nalong with it and scan some systems and\n\n24\n00:01:21.230 --> 00:01:24.490\nthat's what we're gonna do, but\nI want you to know what's going on.\n\n25\n00:01:24.490 --> 00:01:27.520\nWhat's underneath the hood is happening.\n\n26\n00:01:27.520 --> 00:01:29.030\nWhen I kick off then on.\n\n27\n00:01:29.030 --> 00:01:35.340\nAll of the myriads of different switches\nand arguments that we can throw at it.\n\n28\n00:01:35.340 --> 00:01:36.330\nHow do we use those?\n\n29\n00:01:36.330 --> 00:01:40.330\nHow do we that to create the correct\nscan for my environment,\n\n30\n00:01:40.330 --> 00:01:42.360\nwhat I'm trying to accomplish with that?\n\n31\n00:01:42.360 --> 00:01:47.300\nSo I guess it's a good place to start\nis what exactly is and you're right.\n\n32\n00:01:47.300 --> 00:01:48.370\nIt is a good place to start.\n\n33\n00:01:48.370 --> 00:01:51.250\nIf you have never heard of nmap before,\nwhat it means,\n\n34\n00:01:51.250 --> 00:01:53.390\nit stands for network mapper.\n\n35\n00:01:53.390 --> 00:01:55.880\nRight?\nSo that already should be lending your\n\n36\n00:01:55.880 --> 00:01:58.420\nmind to exactly what it is\nthat we're talking about.\n\n37\n00:01:58.420 --> 00:02:01.490\nWe are mapping networks and that's,\nit's original Intention was,\n\n38\n00:02:01.490 --> 00:02:04.890\nI want to be able to see what\ncomputers are on my network,\n\n39\n00:02:04.890 --> 00:02:07.310\nand what are they running,\nwhat is it that they're doing?\n\n40\n00:02:07.310 --> 00:02:10.210\nWas there IP addresses, where might\nthey be, what subnets are they on?\n\n41\n00:02:10.210 --> 00:02:14.310\nThese are the kinds of things that we're\ngonna discover and find out with using\n\n42\n00:02:14.310 --> 00:02:21.350\nNMap, and it's a really cool little\nprogram, it's not difficult to us.\n\n43\n00:02:21.350 --> 00:02:26.790\nIt can be a little overwhelming when you\nsee how many options are available for it.\n\n44\n00:02:26.790 --> 00:02:29.730\nPlus, and I haven't even gotten into\nthe fact that there's a whole entire\n\n45\n00:02:29.730 --> 00:02:33.060\nscripting engine riding\nunderneath the hood as well.\n\n46\n00:02:33.060 --> 00:02:34.680\nAnd that can also be\na little overwhelming.\n\n47\n00:02:34.680 --> 00:02:37.810\nBut we're gonna take you from the bare\nminimum, you've never heard of this thing\n\n48\n00:02:37.810 --> 00:02:42.330\nbefore, today's your first\nforay into working with.\n\n49\n00:02:42.330 --> 00:02:46.200\nAnd we're gonna build from that foundation\nand ultimately by the end of the series\n\n50\n00:02:46.200 --> 00:02:50.010\nyou should have a pretty good working\nknowledge of the system itself, and\n\n51\n00:02:50.010 --> 00:02:52.320\nbe able to utilize it and your networks.\n\n52\n00:02:52.320 --> 00:02:55.870\n>> That's great Dan, when I think\nof a map in general not even in\n\n53\n00:02:55.870 --> 00:02:58.430\nwhen you talk about networking in general.\n\n54\n00:02:58.430 --> 00:03:01.460\nWhen I think of a map,\nwe're talking about like the topography,\n\n55\n00:03:01.460 --> 00:03:03.600\nwe're talking about the layout\nof the land, right.\n\n56\n00:03:03.600 --> 00:03:05.530\nIf I need to know what's out there and\n\n57\n00:03:05.530 --> 00:03:08.830\nI need to see exactly what is\ngoing on in a certain area.\n\n58\n00:03:08.830 --> 00:03:09.970\nWell what do I do?\n\n59\n00:03:09.970 --> 00:03:11.390\nI grab a map and I look at a map.\n\n60\n00:03:11.390 --> 00:03:14.870\nSo when we're talking about end map data,\nwe're talking about something like that.\n\n61\n00:03:14.870 --> 00:03:17.830\nSomething that can basically tell\nus the layout of our network.\n\n62\n00:03:17.830 --> 00:03:19.760\n>> Yeah.\nIt will definitely give you the layout of\n\n63\n00:03:19.760 --> 00:03:20.280\nyour network.\n\n64\n00:03:20.280 --> 00:03:24.490\nIt might not do this graphically and\nthat is what Wes might be alluding to.\n\n65\n00:03:24.490 --> 00:03:27.020\nThere are tools that do that.\n\n66\n00:03:27.020 --> 00:03:30.530\nBut they might use Nmap to find out where\nthose machines are, or what they are, or\n\n67\n00:03:30.530 --> 00:03:31.360\nwhat they do.\n\n68\n00:03:31.360 --> 00:03:35.310\nThe graphical mapping portions of\nthings tend to be with things like,\n\n69\n00:03:35.310 --> 00:03:37.390\nsuch as SolarWinds.\n\n70\n00:03:37.390 --> 00:03:40.130\nThese are suites of software\n\n71\n00:03:40.130 --> 00:03:45.180\nthat try to give you a more visual idea\nof what's going on inside your network.\n\n72\n00:03:45.180 --> 00:03:50.450\nNmap is more specifically for I need,\nyou gotta remember this came from more of\n\n73\n00:03:50.450 --> 00:03:55.380\na command line era, back when command\nline was still a very very popular thing.\n\n74\n00:03:55.380 --> 00:03:59.820\nBecause a, they run really fast and\ntypically if you're running in a Unix or\n\n75\n00:03:59.820 --> 00:04:01.180\nVariance systems.\n\n76\n00:04:01.180 --> 00:04:03.340\nYou're going to be working\nin a command line a lot.\n\n77\n00:04:03.340 --> 00:04:06.590\nIt doesn't mean you Windows\nboys are out in the weeds.\n\n78\n00:04:06.590 --> 00:04:08.440\nWe will get to that,\nwhether or not this works,\n\n79\n00:04:08.440 --> 00:04:10.930\nand how can we get it to work if so.\n\n80\n00:04:10.930 --> 00:04:13.000\nBut if you do want to run this,\n\n81\n00:04:13.000 --> 00:04:16.390\ntypically you're going to be\nworking in that CLI environment.\n\n82\n00:04:16.390 --> 00:04:20.150\nSo, be prepared to jump\ninto a black tight box.\n\n83\n00:04:20.150 --> 00:04:24.020\nOr maybe hacker green if that's what you\nprefer, and be able to type in a few\n\n84\n00:04:24.020 --> 00:04:27.650\ncommands and there's a graphical tool\nas well, but we'll get to that later.\n\n85\n00:04:27.650 --> 00:04:31.780\n>> Now you mentioned, Dan,\nthat this is a systems administrator,\n\n86\n00:04:31.780 --> 00:04:35.900\na systems engineer type of software and\n>> I have to say,\n\n87\n00:04:35.900 --> 00:04:40.330\nkind of playing devil's advocate here like\nI like to do a lot, it seems like a lot of\n\n88\n00:04:40.330 --> 00:04:44.480\nthe utilities that we have out there that\ncan help us define things on our networks.\n\n89\n00:04:44.480 --> 00:04:48.190\nMake sure that our networks are optimized\nwhile they are are used by the systems\n\n90\n00:04:48.190 --> 00:04:51.560\nadministrators, seems like they can\nalso put the black hat on if they want.\n\n91\n00:04:51.560 --> 00:04:54.910\nAnd this can also do a little bit of\nharm and damage to the network as well.\n\n92\n00:04:54.910 --> 00:04:56.020\n>> Yeah.\n\n93\n00:04:56.020 --> 00:04:59.920\nIt's not, let's just start here,\nlet's just wipe the slate.\n\n94\n00:04:59.920 --> 00:05:02.140\nAnd if you've heard\nanything bad about Nmap.\n\n95\n00:05:02.140 --> 00:05:06.000\nAbout it crashing machines,\ncrashing networks, bringing down networks.\n\n96\n00:05:06.000 --> 00:05:06.620\nLet me go ahead and\n\n97\n00:05:06.620 --> 00:05:11.120\ndispell any preconceived notion\nthat that's what it's used for.\n\n98\n00:05:11.120 --> 00:05:12.390\nThat is not it's intended use.\n\n99\n00:05:12.390 --> 00:05:14.340\nIt wasn't designed to do that.\n\n100\n00:05:14.340 --> 00:05:17.760\nIf it does do that,\nit's purely coincidental.\n\n101\n00:05:17.760 --> 00:05:18.880\nIt's purely accidental.\n\n102\n00:05:18.880 --> 00:05:21.650\nIt's not meant to be crashing systems.\n\n103\n00:05:21.650 --> 00:05:24.080\nIf I'm using Nmap as\na system's administrator.\n\n104\n00:05:24.080 --> 00:05:27.720\nWe're gonna get to what West's real\nquestion is there in just a second.\n\n105\n00:05:27.720 --> 00:05:30.870\nIf I'm a system's administrator,\nI'm a network administrator and\n\n106\n00:05:30.870 --> 00:05:34.600\nI'm employing Nmap, it's sure as\nheck isn't to crash my systems.\n\n107\n00:05:34.600 --> 00:05:39.190\nAnd I'm not going to use a tool that\nis known to crash these things.\n\n108\n00:05:39.190 --> 00:05:42.440\nHave I ever heard of end\nmap crashing a system?\n\n109\n00:05:42.440 --> 00:05:46.150\nLike through he said she said,\nshe said he said, right.\n\n110\n00:05:46.150 --> 00:05:49.890\nThrough way way beyond, yeah I heard or\n\n111\n00:05:49.890 --> 00:05:52.910\nread about a guy who used in\nhis friend down the street.\n\n112\n00:05:52.910 --> 00:05:55.620\nEmployed at one time and\nit crashed his neighbor's computer.\n\n113\n00:05:55.620 --> 00:05:58.720\nYeah, I've heard those\nanecdotal situations, but\n\n114\n00:05:58.720 --> 00:06:03.350\nI've never known anybody that's said I ran\nNMAP directly and it crashed my system.\n\n115\n00:06:03.350 --> 00:06:07.470\nI've never run NMAP and it's crashed\nany of the systems that I've worked on.\n\n116\n00:06:07.470 --> 00:06:13.080\nI've been using NMAP since 2001, and I've\nyet to have a single crash on a system.\n\n117\n00:06:13.080 --> 00:06:18.840\nNow that begs the question of what Wes\nwas asking, do black hats use this?\n\n118\n00:06:18.840 --> 00:06:21.580\nYes they do.\nDo they use it to crash systems?\n\n119\n00:06:21.580 --> 00:06:27.470\nIf they do it's likely unintentionally,\nbecause of why they're using end map.\n\n120\n00:06:27.470 --> 00:06:31.450\nSo if it is crashing systems,\nmaybe they found a system that\n\n121\n00:06:31.450 --> 00:06:34.310\nit crashes very well and\nthey want that system to crash.\n\n122\n00:06:34.310 --> 00:06:36.200\nAnd in that sense they would\nprobably deploy it and\n\n123\n00:06:36.200 --> 00:06:39.060\nsay hey, I found a weirdness.\n\n124\n00:06:39.060 --> 00:06:41.040\nAnd you got to remember\nthat is the hacker mindset.\n\n125\n00:06:41.040 --> 00:06:43.270\nRight.\nThey think outside the box.\n\n126\n00:06:43.270 --> 00:06:46.180\nIf you're a hacker and\nI give you something and\n\n127\n00:06:46.180 --> 00:06:49.470\nI say it is designed to do X You go,\ngreat that's awesome.\n\n128\n00:06:49.470 --> 00:06:53.820\nAnd you learn how to do it to make it do\nx a million times to do it very well, but\n\n129\n00:06:53.820 --> 00:06:56.380\nthe hacker always goes,\nwell what else can I do with it?\n\n130\n00:06:56.380 --> 00:06:58.660\nAnd how else can I make this thing work?\n\n131\n00:06:58.660 --> 00:07:00.130\nWhat can I do?\nWhat if I threw it at the TV?\n\n132\n00:07:00.130 --> 00:07:01.250\nWould that do something?\n\n133\n00:07:01.250 --> 00:07:02.000\nWhat if I did this?\n\n134\n00:07:02.000 --> 00:07:02.690\nWhat if I did that?\n\n135\n00:07:02.690 --> 00:07:04.190\nAnd that's the hacker mindset.\n\n136\n00:07:04.190 --> 00:07:07.400\nSo if they find a way to\ncrash a system using it A,\n\n137\n00:07:07.400 --> 00:07:11.860\nthey're going to want to intentionally\ncrash the system, any good hacker.\n\n138\n00:07:11.860 --> 00:07:17.340\nA script kitty, I guess, might go, I\ncrashed a system but all it did was cause\n\n139\n00:07:17.340 --> 00:07:21.450\na minor denial of service for however long\nit took them to reboot the system, and\n\n140\n00:07:21.450 --> 00:07:24.400\nthen they'll firewall that off and\nyou'll never see it again.\n\n141\n00:07:24.400 --> 00:07:29.250\nSo typically, if systems are being crashed\nthrough the use of nmap, it's either, A,\n\n142\n00:07:29.250 --> 00:07:30.660\nbecause they found a way to do it.\n\n143\n00:07:30.660 --> 00:07:35.110\nAnd that's exactly what they want to do,\nor, B, it was just completely accidental.\n\n144\n00:07:35.110 --> 00:07:37.030\nSo yes, the system admin,\n\n145\n00:07:37.030 --> 00:07:41.880\nhe grabs nmap, he puts it in his tool kit\nof administration tools, of network tools,\n\n146\n00:07:41.880 --> 00:07:45.270\nand says I'm gonna scan a network\nI'm gonna get everything.\n\n147\n00:07:45.270 --> 00:07:49.790\nI wanna see what's on my systems what\neverything is running maybe start looking\n\n148\n00:07:49.790 --> 00:07:54.870\nat a vulnerability assessment when we\nstart looking at things of that nature.\n\n149\n00:07:54.870 --> 00:07:58.525\nI want to come at this from\na security standpoint and\n\n150\n00:07:58.525 --> 00:08:02.265\nharden my system look at\nit from that security idea.\n\n151\n00:08:02.265 --> 00:08:05.149\nIf I'm a hacker I still am\nusing it in the same way,\n\n152\n00:08:05.149 --> 00:08:07.782\nit's just the reasoning that I'm using it.\n\n153\n00:08:07.782 --> 00:08:10.170\nRight that's really what it boils down to.\n\n154\n00:08:10.170 --> 00:08:15.360\nSystems, administrators, they use this for\nthe purposes of scanning for,\n\n155\n00:08:16.560 --> 00:08:19.200\nto find vulnerabilities, and remove them.\n\n156\n00:08:19.200 --> 00:08:24.220\nWhere as a hacker, uses it to find\nvulnerabilities and exploit them.\n\n157\n00:08:24.220 --> 00:08:28.815\nSo that's the big difference between\nwhy a SysAdmin would use it,\n\n158\n00:08:28.815 --> 00:08:33.380\nand/or a hacker or\na nefarious type might be employing NMap.\n\n159\n00:08:33.380 --> 00:08:35.940\n>> So Dan would it be fair\nto say that most likely,\n\n160\n00:08:35.940 --> 00:08:40.550\nwell what it sounds like is that it's\nintent, we have a piece of software.\n\n161\n00:08:40.550 --> 00:08:41.840\n>> Seems like it has many capabilities,\n\n162\n00:08:41.840 --> 00:08:44.260\nwhich we're going to see some of\nthat throughout this series, but\n\n163\n00:08:44.260 --> 00:08:45.190\nit's the intent or\n\n164\n00:08:45.190 --> 00:08:50.240\nthe user behind this software that really\ndefines what it does, is that the case?\n\n165\n00:08:50.240 --> 00:08:53.250\n>> I think you hit the nail\nright on the head with that one,\n\n166\n00:08:53.250 --> 00:08:54.480\nit's all about the intent.\n\n167\n00:08:54.480 --> 00:08:56.040\nHow do I intend to use this?\n\n168\n00:08:56.040 --> 00:08:59.850\nAnd just like anything that is meant\n>> for neither good nor evil.\n\n169\n00:08:59.850 --> 00:09:04.750\nIt's just a tool,\nit is the person wielding said tool that\n\n170\n00:09:04.750 --> 00:09:08.430\ngives you the whether or\nnot it's been used badly or if the person,\n\n171\n00:09:08.430 --> 00:09:13.390\nwe don't go after the creators of Nmap for\nhackers using it for nefarious purposes.\n\n172\n00:09:13.390 --> 00:09:16.170\nIt's just it was never intended for that.\n\n173\n00:09:16.170 --> 00:09:19.660\nIt's meant for\nenumeration is the technical term.\n\n174\n00:09:19.660 --> 00:09:22.480\nI want to enumerate the systems\nthat are on my network.\n\n175\n00:09:22.480 --> 00:09:27.130\nThat I have authorization for\npurposes of keeping track of things.\n\n176\n00:09:27.130 --> 00:09:30.870\nMaking sure that I don't have any\nvulnerabilities that are just gaping holes\n\n177\n00:09:30.870 --> 00:09:32.280\nin my security system.\n\n178\n00:09:32.280 --> 00:09:34.150\nThat is its intention.\n\n179\n00:09:34.150 --> 00:09:39.180\nAnd this has been throughout time as long\nas computer systems have been around\n\n180\n00:09:39.180 --> 00:09:41.900\nhackers have been saying, hum, how can I.\n\n181\n00:09:41.900 --> 00:09:46.320\nI think if I did this It will do X and\nthat'll be awesome.\n\n182\n00:09:46.320 --> 00:09:47.440\nLet me check that out.\n\n183\n00:09:47.440 --> 00:09:50.270\nSo there's nothing wrong with\nthe hacker mind set per say.\n\n184\n00:09:50.270 --> 00:09:55.650\nIt's now I want to crash this machine,\nI want, I've been paid\n\n185\n00:09:55.650 --> 00:09:59.700\nby X company because you're the competitor\nto crash as many machines as possible.\n\n186\n00:09:59.700 --> 00:10:03.310\nOr to scan their networks,\nfind out what they're running and\n\n187\n00:10:03.310 --> 00:10:05.200\nmaybe exploit vulnerabilities\nin those systems.\n\n188\n00:10:05.200 --> 00:10:07.290\nSo yeah, it can be used for evil purposes.\n\n189\n00:10:07.290 --> 00:10:10.160\nBut in and of itself it's neither good nor\nbad, it's just a tool.\n\n190\n00:10:10.160 --> 00:10:15.750\nIt's how we use it that's going to dictate\nwhether or not we're good, or we're bad.\n\n191\n00:10:15.750 --> 00:10:18.970\nSo, Dan, if I've got my wallet here,\nready to go.\n\n192\n00:10:18.970 --> 00:10:19.680\nI've decided,\n\n193\n00:10:19.680 --> 00:10:22.870\ncuz it does sound interesting,\nthat I want to get Nmap, all right?\n\n194\n00:10:22.870 --> 00:10:25.450\nSo, I want Nmap, how do we get it?\n\n195\n00:10:25.450 --> 00:10:26.730\n>> That's a really good question.\n\n196\n00:10:26.730 --> 00:10:28.800\nAnd the great news is about Nmap and\n\n197\n00:10:28.800 --> 00:10:34.630\nall of my favorite software is it\ncosts the low, low price of free 99.\n\n198\n00:10:34.630 --> 00:10:38.545\nThat's right, for a limited time only if\nyou act now you too can have a copy of\n\n199\n00:10:38.545 --> 00:10:42.210\nNmap and when I say a limited time only\nI mean ever since its inception and\n\n200\n00:10:42.210 --> 00:10:46.100\ncreation, it is open source software,\nit is free to use.\n\n201\n00:10:46.100 --> 00:10:52.920\nIt, I believe, is under the GPL licence,\nthe public licence that's available for\n\n202\n00:10:52.920 --> 00:10:55.300\nmost open-source software,\nif I'm not mistaken.\n\n203\n00:10:55.300 --> 00:10:58.250\nAnd we can dive into that but\nit's neither here nor there.\n\n204\n00:10:58.250 --> 00:11:02.280\nBasically what it's saying is you can\nuse this software as much as you like.\n\n205\n00:11:02.280 --> 00:11:07.190\nYou can even distribute it as, well,\nas the source code along with it,\n\n206\n00:11:07.190 --> 00:11:10.290\nas long as you don't try to do that for\nmonetary purposes.\n\n207\n00:11:10.290 --> 00:11:12.770\nYou don't try to sell this.\n\n208\n00:11:12.770 --> 00:11:14.210\nAnd if you do wanna give it away,\n\n209\n00:11:14.210 --> 00:11:16.280\nmake sure you give the source\ncode along with it.\n\n210\n00:11:16.280 --> 00:11:20.900\nTypically that's the general idea\nof when we're talking about free,\n\n211\n00:11:20.900 --> 00:11:22.680\nor under the GPL licensing.\n\n212\n00:11:22.680 --> 00:11:23.910\nSo keep that in mind.\n\n213\n00:11:23.910 --> 00:11:26.050\nThis is something you can go,\nyou can get yourself.\n\n214\n00:11:26.050 --> 00:11:29.800\nNow we jump over really to Wes's\nreal question, which is, all right,\n\n215\n00:11:29.800 --> 00:11:32.880\nnow that I know that I can have this and\nit costs me a whole lot of nothing.\n\n216\n00:11:32.880 --> 00:11:34.018\n>> We know that Wes can afford it.\n\n217\n00:11:34.018 --> 00:11:35.710\n[LAUGH]\n>> Right, well this is definitely\n\n218\n00:11:35.710 --> 00:11:38.460\nin Wes's will house when\nit comes to monetary.\n\n219\n00:11:38.460 --> 00:11:39.810\nHow do we get this?\n\n220\n00:11:39.810 --> 00:11:40.760\nWhat do we do?\nWhere do we go?\n\n221\n00:11:40.760 --> 00:11:42.180\nOkay, I'm glad you asked.\n\n222\n00:11:42.180 --> 00:11:43.560\nLet's jump up on my computer real quick.\n\n223\n00:11:43.560 --> 00:11:45.410\nI've already brought up their website.\n\n224\n00:11:45.410 --> 00:11:47.861\nWhich is NMAP.org.\n\n225\n00:11:47.861 --> 00:11:51.900\nThere we go, so\nthis is the NMAP.org website.\n\n226\n00:11:51.900 --> 00:11:54.730\nSomething that you'll definitely\nwant to get familiar with.\n\n227\n00:11:54.730 --> 00:11:58.960\nNot just so that you can just download\nNMAP and install, even though it's\n\n228\n00:11:58.960 --> 00:12:03.050\nvery good for that reason, but\nthere's a lot of information here.\n\n229\n00:12:03.050 --> 00:12:05.200\nSign up for the newsletters.\n\n230\n00:12:05.200 --> 00:12:07.360\nWhatever they've got,\nsign up for it, right.\n\n231\n00:12:07.360 --> 00:12:08.230\nGet in on here.\n\n232\n00:12:08.230 --> 00:12:11.050\nIf you want to be effective with Nmap,\n\n233\n00:12:11.050 --> 00:12:14.790\nbecoming a part of the community\nis going to help you a lot.\n\n234\n00:12:14.790 --> 00:12:16.950\nUnless you just want a working knowledge,\nthen, of course,\n\n235\n00:12:16.950 --> 00:12:18.080\nyou don't have to go through all that.\n\n236\n00:12:18.080 --> 00:12:21.890\nBut if you really,\nreally want to have a good grasp of Nmap,\n\n237\n00:12:21.890 --> 00:12:24.990\nwhat's going on with Nmap, and\nit's something that you're gonna be using.\n\n238\n00:12:24.990 --> 00:12:26.390\nAs a network administrator,\n\n239\n00:12:26.390 --> 00:12:31.370\nas maybe a penetration tester,\nif that's your goal in life one day.\n\n240\n00:12:31.370 --> 00:12:35.640\nThis is something you're going to want to\nknow about a lot because it is a fantastic\n\n241\n00:12:35.640 --> 00:12:40.980\ntool and it's a favorite tool of CS net\nand penetration testing administrators.\n\n242\n00:12:40.980 --> 00:12:42.370\nSo, be aware of that.\n\n243\n00:12:42.370 --> 00:12:44.740\nLet's take a look at the silence,\nlet's bounce around a little bit and\n\n244\n00:12:44.740 --> 00:12:48.460\nthen we'll find out how we can\nactually acquire Nmap from it.\n\n245\n00:12:48.460 --> 00:12:52.220\nSo let's go, there is couple of\nthings I just wanted to show you was,\n\n246\n00:12:52.220 --> 00:12:55.666\nlike over here on the left hand side.\n\n247\n00:12:55.666 --> 00:12:58.700\nYou'll see, it talks about intro,\nthere is a reference guide,\n\n248\n00:12:58.700 --> 00:13:03.390\nan installation guide, this will be\nworth its weight in gold for you,\n\n249\n00:13:03.390 --> 00:13:06.710\nespecially as you bounce through\ndifferent types of systems.\n\n250\n00:13:06.710 --> 00:13:10.270\nWe are going to show you how to install\nNmap today, how to get it, how to install\n\n251\n00:13:10.270 --> 00:13:15.530\nit for different types of Unix systems,\nLinux systems, as well as Windows.\n\n252\n00:13:15.530 --> 00:13:19.530\nSo these reference guides for installation\nare going to be very helpful for you.\n\n253\n00:13:19.530 --> 00:13:24.350\nThere's also changelogs,\nwhat's going on with Nmap.\n\n254\n00:13:24.350 --> 00:13:26.220\nAre there any new features to Nmap?\n\n255\n00:13:26.220 --> 00:13:29.450\nMaybe there's an update to it,\nI'd wanna go there, find out and\n\n256\n00:13:29.450 --> 00:13:33.250\nmaybe run an update for\nmy Nmap system, if that's necessary.\n\n257\n00:13:33.250 --> 00:13:38.430\nWe also have this book and\ndocs again worth their weight in gold.\n\n258\n00:13:38.430 --> 00:13:42.850\nAnd primarily a lot of the information\nthat I am going to be giving to you\n\n259\n00:13:42.850 --> 00:13:47.790\nis coming straight from this site and\nstraight from the chapters in the book\n\n260\n00:13:47.790 --> 00:13:51.790\nthat are available on the website and the\ndocumentation that's available as well.\n\n261\n00:13:51.790 --> 00:13:53.270\nI have further experience and\n\n262\n00:13:53.270 --> 00:13:57.980\nreferences so we'll go a little bit\nfurther than what they have but,\n\n263\n00:13:57.980 --> 00:14:03.850\nif you just had this at your disposal,\nyou have a lot to go through.\n\n264\n00:14:03.850 --> 00:14:07.230\nAnd not only that, but\nother things like the manual pages.\n\n265\n00:14:07.230 --> 00:14:11.400\nJust tons of information on how\nyou can effectively use Nmap and\n\n266\n00:14:11.400 --> 00:14:13.550\nwhat is happening when you are running it.\n\n267\n00:14:13.550 --> 00:14:17.770\nSo give you that good\nthat overall experience,\n\n268\n00:14:17.770 --> 00:14:20.500\nI know what's happening with my system.\n\n269\n00:14:20.500 --> 00:14:23.670\n>> Is there also, like we have on\nsome other websites out there for\n\n270\n00:14:23.670 --> 00:14:24.770\ndifferent pieces of software.\n\n271\n00:14:24.770 --> 00:14:26.720\nIs there like a community\nforum where you can,\n\n272\n00:14:26.720 --> 00:14:29.070\nyou know maybe some people\nhave used this before?\n\n273\n00:14:29.070 --> 00:14:31.500\nOr is that something that you can\nkinda research out there, and\n\n274\n00:14:31.500 --> 00:14:33.120\nfind forums that use Nmap?\n\n275\n00:14:33.120 --> 00:14:37.020\n>> There's probably, just security forums\nin general, probably even have like a.\n\n276\n00:14:37.020 --> 00:14:42.640\n>> An enumeration area or an Nmap area\nbecause it is so prolific, so widely used.\n\n277\n00:14:42.640 --> 00:14:44.410\nI'm not a hundred percent on whether or\nnot.\n\n278\n00:14:44.410 --> 00:14:47.030\nThat's.\nI'm looking on the page really quickly.\n\n279\n00:14:47.030 --> 00:14:49.630\nI don't see one off the top of my head,\nbut if they do.\n\n280\n00:14:49.630 --> 00:14:53.530\nIf I am remembering correctly, if you sign\nup there is a newsletter that you can get\n\n281\n00:14:53.530 --> 00:14:57.240\nand that will keep you abreast of all the\ninformation that's happening with Nmap,\n\n282\n00:14:57.240 --> 00:14:58.380\nwhere it's being used.\n\n283\n00:14:58.380 --> 00:15:01.200\nOther than that, you can just come\nstraight here to their front page.\n\n284\n00:15:01.200 --> 00:15:04.323\nThey keep a lot of the news,\nyou can see right here.\n\n285\n00:15:04.323 --> 00:15:06.660\nNmap 7.12 is now available.\n\n286\n00:15:06.660 --> 00:15:09.780\nThere's the change log and a download\nlink, right, so all the latest and\n\n287\n00:15:09.780 --> 00:15:11.850\ngreatest news is going to be\nright here on their front page.\n\n288\n00:15:11.850 --> 00:15:14.382\nSo, again that's NMAP.org I believe.\n\n289\n00:15:14.382 --> 00:15:17.480\nNsecure.org will also take\nyou here if I'm not mistaken.\n\n290\n00:15:17.480 --> 00:15:21.840\nBut I know NMAP.org will because as\nyou can see right here, it does that.\n\n291\n00:15:23.130 --> 00:15:28.760\nOther things just another random aside\non the greatness that is this site.\n\n292\n00:15:28.760 --> 00:15:31.940\nIf you look over here\nit says security tools.\n\n293\n00:15:31.940 --> 00:15:36.150\nSo when you are ready, and you say,\nyou know what, I really enjoy security.\n\n294\n00:15:36.150 --> 00:15:40.900\nI enjoy finding the flaw and then\nfixing the flaw, they're going to have\n\n295\n00:15:40.900 --> 00:15:44.040\na ton of tools that are going to\nbe available for you to download.\n\n296\n00:15:44.040 --> 00:15:47.120\nAnd it'll let you know whether or\nnot they're free, or if they're pay, or\n\n297\n00:15:47.120 --> 00:15:51.370\nfree to try, and then buy different\nlicences, what platform they run on.\n\n298\n00:15:51.370 --> 00:15:53.650\nAnd as you can see they've\ngot password auditing,\n\n299\n00:15:53.650 --> 00:15:56.640\nsniffers, vulnerability scanners,\nweb scanners,\n\n300\n00:15:56.640 --> 00:16:00.240\nwireless exploitation, and\npacket crafters and more.\n\n301\n00:16:00.240 --> 00:16:01.550\nTons of stuff.\n\n302\n00:16:01.550 --> 00:16:05.954\nThis website is a great resource for\nany person in the security realm.\n\n303\n00:16:05.954 --> 00:16:06.685\nSo.\n\n304\n00:16:06.685 --> 00:16:07.648\nFamiliarize yourself with it.\n\n305\n00:16:07.648 --> 00:16:08.623\nWalk through it.\n\n306\n00:16:08.623 --> 00:16:13.693\nClick on every link cuz there's always\nsome great information there just waiting\n\n307\n00:16:13.693 --> 00:16:18.173\nto be found by you and you'll learn\na ton of stuff just by perusing here and\n\n308\n00:16:18.173 --> 00:16:20.470\nreading everything it has to offer.\n\n309\n00:16:20.470 --> 00:16:24.980\nNow that we know that's what's going\non with the website, very cool stuff.\n\n310\n00:16:24.980 --> 00:16:29.200\nLet's get to the download page and\nsee what's going on there.\n\n311\n00:16:29.200 --> 00:16:32.110\nSo, I can either go here\nwhere it says download, or\n\n312\n00:16:32.110 --> 00:16:33.490\nI can run over here to download.\n\n313\n00:16:33.490 --> 00:16:34.890\nEither one takes you to the same place.\n\n314\n00:16:34.890 --> 00:16:38.350\nThey try to make it pretty easy for\nyou to actually acquire Nmap, cuz, hey,\n\n315\n00:16:38.350 --> 00:16:40.100\nthey wrote the software and\nthey want you to use it.\n\n316\n00:16:40.100 --> 00:16:43.470\nSo, let's jump on over\nto the download page.\n\n317\n00:16:43.470 --> 00:16:45.178\nSo it talks about downloading Nmap.\n\n318\n00:16:45.178 --> 00:16:48.714\nThis is really like a quick and\ndirty how to download Nmap for\n\n319\n00:16:48.714 --> 00:16:53.045\nwhatever platform you're running and\nprobably even get it installed.\n\n320\n00:16:53.045 --> 00:16:56.486\nIf you need the little installation guide,\n\n321\n00:16:56.486 --> 00:17:02.590\nyou can jump to that as well and\nI think there's links to that on each one.\n\n322\n00:17:02.590 --> 00:17:04.160\nWe'll see it as we go down.\n\n323\n00:17:04.160 --> 00:17:05.220\nBut let's see here.\n\n324\n00:17:05.220 --> 00:17:08.310\nDownloading Nmap, and\nit's talking about, and Zen Map,\n\n325\n00:17:08.310 --> 00:17:10.216\nyou might be like, what's that?\n\n326\n00:17:10.216 --> 00:17:11.273\nNMap and Zen Map.\n\n327\n00:17:11.273 --> 00:17:16.210\nZen Map is the graphical front end for\nyour Nmap installation.\n\n328\n00:17:16.210 --> 00:17:18.470\nYou'll notice I haven't\ntalked about it a lot, and\n\n329\n00:17:18.470 --> 00:17:21.390\nthat's because I don't typically use it.\n\n330\n00:17:21.390 --> 00:17:25.460\nI'm not saying that it's bad, don't hear\nme say that, it's actually a really nice\n\n331\n00:17:25.460 --> 00:17:31.150\nlittle interface, it's got a lot, but,\nI would say that if you're a newbie,\n\n332\n00:17:31.150 --> 00:17:35.930\nif you're new to Nmap, Zen Map is gonna\nbe a nice crutch for you to lean on.\n\n333\n00:17:35.930 --> 00:17:41.380\nIf you're not, if you're good with a CLI,\nyou're happy inside of a command line,\n\n334\n00:17:41.380 --> 00:17:44.110\nthen Nmap is where you're gonna\nspend the bulk of your time.\n\n335\n00:17:44.110 --> 00:17:47.940\nBecause Zen Map tends to hide\na lot of what's going on.\n\n336\n00:17:47.940 --> 00:17:52.720\nYou don't have to know so much about\nNmap to get it to work using Zen Map so\n\n337\n00:17:52.720 --> 00:17:56.000\nthat's why I'm gonna focus\nmore on using Nmap instead.\n\n338\n00:17:56.000 --> 00:17:57.843\nWe will take a look at Zen Map though.\n\n339\n00:17:57.843 --> 00:18:01.466\n>> Dan, I know that you've got a lot\nof experience down in the command line,\n\n340\n00:18:01.466 --> 00:18:02.059\nthe shell.\n\n341\n00:18:02.059 --> 00:18:04.920\nI've definitely seen it before,\nfire up a terminal a lot.\n\n342\n00:18:04.920 --> 00:18:09.560\nSo are you saying somebody like me,\nwho's been more primarily Window-centric,\n\n343\n00:18:09.560 --> 00:18:12.530\ndo a lot in the Gui and I do realize\nthat there's some limitations they don't\n\n344\n00:18:12.530 --> 00:18:15.690\nmake a button, well,\nyou're not doing it in the Gui.\n\n345\n00:18:15.690 --> 00:18:18.210\nBut the zenmap might be something for\nsomebody like me.\n\n346\n00:18:18.210 --> 00:18:19.420\n>> That's exactly right.\n\n347\n00:18:19.420 --> 00:18:22.669\nLike I said, if you're new to the systems,\nyou're more of a Windows guy, and\n\n348\n00:18:22.669 --> 00:18:24.160\nthere's nothing wrong with that.\n\n349\n00:18:24.160 --> 00:18:26.270\nDon't hear me down Windows, I'm not.\n\n350\n00:18:26.270 --> 00:18:28.830\nI've used Windows extensively\nthroughout my career,\n\n351\n00:18:28.830 --> 00:18:31.550\nit's a great operating system for\nwhat it does.\n\n352\n00:18:31.550 --> 00:18:34.570\nIt's even a great operating system for\nwhat I need it for.\n\n353\n00:18:34.570 --> 00:18:35.990\nEverything has its place.\n\n354\n00:18:35.990 --> 00:18:38.180\nEverything is a tool for the proper job.\n\n355\n00:18:38.180 --> 00:18:40.270\nThere is no one better than the other,\n\n356\n00:18:40.270 --> 00:18:43.030\nit's just maybe better\nat this than the other.\n\n357\n00:18:43.030 --> 00:18:44.660\nSo, you gotta keep that in mind.\n\n358\n00:18:44.660 --> 00:18:47.640\nIf you're running Windows,\nyou can be a penetration tester,\n\n359\n00:18:47.640 --> 00:18:51.190\nyou can hack all day long and\nhave a good time and enjoy it.\n\n360\n00:18:52.200 --> 00:18:53.680\nNmap will work for you.\n\n361\n00:18:53.680 --> 00:18:56.870\nAnd there is ZenMap as well,\nwhich will give you that, hey, and\n\n362\n00:18:56.870 --> 00:18:59.520\nyou know what, if you're in Windows,\nyou're a graphical guy.\n\n363\n00:18:59.520 --> 00:19:01.080\nYou like a GUI.\n\n364\n00:19:01.080 --> 00:19:03.420\nMake no apologies for that.\n\n365\n00:19:03.420 --> 00:19:05.560\nYou can say, you know what, I like GUIs.\n\n366\n00:19:05.560 --> 00:19:07.440\nThey work for me, they're very handy.\n\n367\n00:19:07.440 --> 00:19:10.260\nThey're very fast,\nthey're easy to get around.\n\n368\n00:19:10.260 --> 00:19:10.930\nI do like it.\n\n369\n00:19:10.930 --> 00:19:12.530\nSometimes I just want to use a tool.\n\n370\n00:19:12.530 --> 00:19:14.270\nI don't wanna be a master at it.\n\n371\n00:19:14.270 --> 00:19:15.540\nAnd if you just wanna get your feet wet,\n\n372\n00:19:15.540 --> 00:19:18.610\nyou want to start doing some scanning,\nZenmap's gonna help you out with that.\n\n373\n00:19:18.610 --> 00:19:19.350\nSo let's take a look.\n\n374\n00:19:19.350 --> 00:19:22.500\nLet's go back,\nkinda random aside complete.\n\n375\n00:19:22.500 --> 00:19:26.200\nLet's jump back down in and\ntake a look at how we acquire this.\n\n376\n00:19:26.200 --> 00:19:29.710\nSo one of the ways you can do this\nis obviously through source code.\n\n377\n00:19:29.710 --> 00:19:33.510\nAnd if you're a Linux-Unix guy,\n\n378\n00:19:33.510 --> 00:19:37.650\nyou've probably done installation\nfrom source before, right?\n\n379\n00:19:37.650 --> 00:19:39.410\nCompiling source.\n\n380\n00:19:39.410 --> 00:19:42.490\nIf you're new to Linux and\nUnix, you hear those words and\n\n381\n00:19:42.490 --> 00:19:46.839\nyou're thinking, man, I'm getting\nthe sweats, I'm getting the shakes.\n\n382\n00:19:47.840 --> 00:19:53.780\nThis whole source compiling thing, that's\nfor real users, I'm not quite there yet.\n\n383\n00:19:53.780 --> 00:19:56.980\nFortunately, this is a great example\nof if you've never done compiling\n\n384\n00:19:56.980 --> 00:19:58.250\nfrom source before.\n\n385\n00:19:58.250 --> 00:20:01.250\nIt's not that difficult,\nit's actually quite easy.\n\n386\n00:20:01.250 --> 00:20:04.040\nIt just gives you more options,\nmore ability to\n\n387\n00:20:05.320 --> 00:20:09.670\ncurtail the software to your environment\nand to a way that you want it set up and\n\n388\n00:20:09.670 --> 00:20:12.780\nthat's what really the Linux\ncommunity is all about.\n\n389\n00:20:12.780 --> 00:20:15.570\nIt's all about customization for\nthe individual.\n\n390\n00:20:15.570 --> 00:20:19.315\nSo don't worry, you can still get it\ninstalled very quickly, very easily.\n\n391\n00:20:19.315 --> 00:20:23.460\nIt's basically three commands and\nyou're done.\n\n392\n00:20:23.460 --> 00:20:25.100\nIt's very simple.\n\n393\n00:20:25.100 --> 00:20:28.130\nAnd we'll take a look at doing\nthat here in just a few minutes.\n\n394\n00:20:28.130 --> 00:20:30.680\nNow, let's look at some of\nthe other ways that we have.\n\n395\n00:20:30.680 --> 00:20:34.660\nHere's the Microsoft Windows binaries,\nand he's like, well, what is a binary?\n\n396\n00:20:34.660 --> 00:20:36.220\nBasically an executable package.\n\n397\n00:20:36.220 --> 00:20:39.790\nLike a package that for\ninstalling software on Windows.\n\n398\n00:20:39.790 --> 00:20:41.910\nThat's what they're talking\nabout when they say binaries.\n\n399\n00:20:41.910 --> 00:20:47.140\nYou'll notice right there the familiar\n.exe type of download and installation.\n\n400\n00:20:47.140 --> 00:20:51.430\nThe cool thing about it is if I'm not\nmistaken, and I might be, I just can't\n\n401\n00:20:51.430 --> 00:20:53.980\nremember off the top of my head because\nI don't typically use Windows for\n\n402\n00:20:53.980 --> 00:20:57.790\nthis, but I think Zen Map becomes bundled\n\n403\n00:20:57.790 --> 00:21:00.760\nwith Nmap when you install on\na Windows operating system.\n\n404\n00:21:00.760 --> 00:21:02.260\nSo you get the best of both worlds.\n\n405\n00:21:02.260 --> 00:21:05.960\nYou can run it from your command prompt\nand you can use the zen map front end.\n\n406\n00:21:05.960 --> 00:21:10.288\nAnd if not, easy enough fix, we'll grab\nthe zen map front end, install that so\n\n407\n00:21:10.288 --> 00:21:12.298\nthat you have the best there as well.\n\n408\n00:21:12.298 --> 00:21:14.070\nAll right,\nlet's see what else we have here.\n\n409\n00:21:14.070 --> 00:21:18.750\nHere's Linux RPM source and\nbinaries, and MAC OSS binaries.\n\n410\n00:21:20.052 --> 00:21:25.400\nSo Linux, if you've worked on Linux at\nall, RPMs is a red-hat package manager,\n\n411\n00:21:25.400 --> 00:21:30.330\nit's basically kinda like what we\nsaw with the binaries for Windows.\n\n412\n00:21:30.330 --> 00:21:32.510\nIt says double-click and it installs.\n\n413\n00:21:32.510 --> 00:21:37.200\nYou have a command line utility as\nwell for RPM to download an RPM and\n\n414\n00:21:37.200 --> 00:21:38.820\ninstall it to your system.\n\n415\n00:21:38.820 --> 00:21:40.610\nAnd you have to know those systems.\n\n416\n00:21:40.610 --> 00:21:45.210\nI don't think I'm gonna\ninstall using RPM because RPM\n\n417\n00:21:45.210 --> 00:21:50.220\ntypically isn't how we install software\non Linux and Unix systems any more.\n\n418\n00:21:50.220 --> 00:21:51.830\nNot that's it out of\nthe realm of possibility.\n\n419\n00:21:51.830 --> 00:21:52.630\nIt is.\n\n420\n00:21:52.630 --> 00:21:56.622\nIt's definitely there if you like RPMs,\ngrab the RPM, you're familiar with that,\n\n421\n00:21:56.622 --> 00:21:58.730\nuse it, it's not that difficult.\n\n422\n00:21:58.730 --> 00:22:01.950\nA little quick perusing of the man\npage will get you up an running very,\n\n423\n00:22:01.950 --> 00:22:06.820\nvery quickly, but we're going to use, and\nyou'll notice you don't see that here,\n\n424\n00:22:06.820 --> 00:22:12.680\nis what's called package management\nsystems for our Linux variance.\n\n425\n00:22:12.680 --> 00:22:17.953\nWe have the Debian type of package\nmanagement was the app to get and we have\n\n426\n00:22:17.953 --> 00:22:23.670\nthe Yum package management system which\nis for Red Hat CentOS Ttpe of systems.\n\n427\n00:22:23.670 --> 00:22:25.080\nSo the two different architectures\n\n428\n00:22:25.080 --> 00:22:27.260\nhave their two different\npackage management systems.\n\n429\n00:22:27.260 --> 00:22:30.290\nThat's what we're gonna look at today and\nwe're gonna install from source, as well.\n\n430\n00:22:30.290 --> 00:22:32.860\nSo we're gonna look at\nthose different things.\n\n431\n00:22:32.860 --> 00:22:38.130\nOne thing I do wanna say\nabout Mac OSX is you,\n\n432\n00:22:38.130 --> 00:22:40.630\nthis is the one that's\na little more difficult.\n\n433\n00:22:40.630 --> 00:22:42.340\nSo if you're installing on Mac,\n\n434\n00:22:42.340 --> 00:22:46.500\nyou just gotta know that if Mac\nruns BSD under the hood, right?\n\n435\n00:22:46.500 --> 00:22:51.350\nSo it's got the Berkeley System D\nunder the hood.\n\n436\n00:22:51.350 --> 00:22:53.510\nIt's a true Unix variant.\n\n437\n00:22:53.510 --> 00:22:56.490\nIt's not a Linux system,\nit's a true Unix type system.\n\n438\n00:22:56.490 --> 00:23:01.319\nThere can be, especially when it\ncomes to Zenmap, you need some extra,\n\n439\n00:23:01.319 --> 00:23:05.199\nwhich is called I think Xcode,\nthat goes along with that,\n\n440\n00:23:05.199 --> 00:23:10.133\nwhich you'll need to support\nthe graphical front-end and make it work.\n\n441\n00:23:10.133 --> 00:23:12.709\nAnd preparing for this system,\nI did some updating and\n\n442\n00:23:12.709 --> 00:23:15.852\nscrewing around with my system,\nand I've completely broken it.\n\n443\n00:23:15.852 --> 00:23:19.160\nIt's not really that\ndetrimental to our show.\n\n444\n00:23:19.160 --> 00:23:21.920\nSo we're gonna go ahead and\nrun with that ball.\n\n445\n00:23:21.920 --> 00:23:23.270\nNot that big of a deal.\n\n446\n00:23:23.270 --> 00:23:26.830\nAgain, we're gonna focus a lot of being\ninside the graphical environment.\n\n447\n00:23:26.830 --> 00:23:30.830\nI think that if we want to use Zen Map,\nwe'll run over to our Windows box because\n\n448\n00:23:30.830 --> 00:23:33.120\ntypically that's where you're\ngonna be seeing it used.\n\n449\n00:23:33.120 --> 00:23:39.200\nMost people that run Nmap from any system,\nincluding Mac, are running it from a CLI.\n\n450\n00:23:39.200 --> 00:23:42.340\nSo that why I said,\nI don't think it really hinders us.\n\n451\n00:23:42.340 --> 00:23:45.640\nIf we need to see Zen map, we'll fire\nup Windows and play with Zen map.\n\n452\n00:23:45.640 --> 00:23:50.910\nIf we don't, we'll just continue to work\nin whatever CLI, it'll either be Linux or\n\n453\n00:23:50.910 --> 00:23:52.660\nmy Macintosh.\n\n454\n00:23:52.660 --> 00:23:54.090\nVery, very simple.\n\n455\n00:23:54.090 --> 00:23:55.150\nLet's get down and dirty.\n\n456\n00:23:55.150 --> 00:23:55.958\nLet's get to business.\n\n457\n00:23:55.958 --> 00:24:00.268\nI know that the clock is over there\nticking away like a slave master driving\n\n458\n00:24:00.268 --> 00:24:02.432\nus, let's install some software.\n\n459\n00:24:02.432 --> 00:24:03.013\nLet's do it.\n\n460\n00:24:03.013 --> 00:24:04.069\nLet's go ahead and jump on.\n\n461\n00:24:04.069 --> 00:24:06.860\nLet's see what the first system\nI have To play around with this.\n\n462\n00:24:06.860 --> 00:24:08.511\nOkay, so here's Ubuntu.\n\n463\n00:24:08.511 --> 00:24:14.162\nI think this is as of it least the last\nfew weeks the latest rendition of Ubuntu,\n\n464\n00:24:14.162 --> 00:24:16.915\nit's 15 point something or other.\n\n465\n00:24:18.200 --> 00:24:19.380\nThat's neither here nor there.\n\n466\n00:24:19.380 --> 00:24:23.948\nReally how is it that we're gonna\nget Nmap installed on our system and\n\n467\n00:24:23.948 --> 00:24:26.250\nthat's going to be through.\n\n468\n00:24:26.250 --> 00:24:29.870\nSince this is a dev invariant\nwe're gonna use app to get system.\n\n469\n00:24:29.870 --> 00:24:31.314\n>> That was the question\nthat was gonna be.\n\n470\n00:24:31.314 --> 00:24:34.190\nYou said there were two different\nways you could install this.\n\n471\n00:24:34.190 --> 00:24:38.452\nI was about to ask you what's under\nthe hood when we say Ubuntu because just\n\n472\n00:24:38.452 --> 00:24:40.584\nbecause the adistro says one thing,\n\n473\n00:24:40.584 --> 00:24:43.904\nit doesn't necessarily mean\nthat it's as all Linux is.\n\n474\n00:24:43.904 --> 00:24:45.124\nIt usually has and MAC,\n\n475\n00:24:45.124 --> 00:24:49.050\nit's got something under the hood\nthat really dictates how we install.\n\n476\n00:24:49.050 --> 00:24:50.120\n>> Yeah that's exactly right.\n\n477\n00:24:50.120 --> 00:24:52.780\nYou do need to need to kind of understand\nyour architecture a little bit.\n\n478\n00:24:52.780 --> 00:24:55.510\nBe familiar with your own system,\nthat's gonna help you.\n\n479\n00:24:55.510 --> 00:24:58.870\nBut if you're at this level, if you're\nlike hey I wanna start playing with Nmap,\n\n480\n00:24:58.870 --> 00:25:01.940\nyou've probably got some\ncomputer time under the belt.\n\n481\n00:25:01.940 --> 00:25:04.850\nSo if you don't,\nif you're like man I'm completely new\n\n482\n00:25:04.850 --> 00:25:07.950\nto this whole Linux Unix area and\nI wanna jump into that.\n\n483\n00:25:07.950 --> 00:25:09.700\nWes makes a really good point.\n\n484\n00:25:09.700 --> 00:25:12.120\nYou need to know what\ntype of variant are you.\n\n485\n00:25:12.120 --> 00:25:17.910\nAre you a Debian which\nis a main fork of Linux,\n\n486\n00:25:17.910 --> 00:25:22.290\nor are you a Red Hat which is one\nof the other main forks of Linux.\n\n487\n00:25:22.290 --> 00:25:27.030\nAnd they are typically any derivation\nthere of, it just means that\n\n488\n00:25:27.030 --> 00:25:30.640\nyou're either being so if I'm running\na Bluetooth, that's a Debian variant.\n\n489\n00:25:30.640 --> 00:25:32.970\nActually Ubuntu has been around so\nlong and\n\n490\n00:25:32.970 --> 00:25:37.100\nso copied that it's starting\nto become its own major fork.\n\n491\n00:25:37.100 --> 00:25:40.370\nEven though it's still under Debian\nbecause it is a Debian variant and\n\n492\n00:25:40.370 --> 00:25:42.730\nit doesn't work like\nthe other Debian systems.\n\n493\n00:25:42.730 --> 00:25:46.140\nBut it has been widely copied and\nwidely changed and\n\n494\n00:25:46.140 --> 00:25:49.240\nused as a platform to create\nother Linux operating systems.\n\n495\n00:25:49.240 --> 00:25:52.750\nI think of Linux Mint,\nvery popular, I use it myself.\n\n496\n00:25:52.750 --> 00:25:56.280\nIt is a Ubuntu variant which\ntherefore makes it a Debian variant.\n\n497\n00:25:56.280 --> 00:25:59.390\nSo you'll see apt-get again under\nthe hood for package management.\n\n498\n00:25:59.390 --> 00:26:02.220\nWhen we jump over to the other Linux\nsystem, we'll see that as well,\n\n499\n00:26:02.220 --> 00:26:05.010\nwhich is CentOS is a Red Hat variant.\n\n500\n00:26:05.010 --> 00:26:08.130\nSo you gotta know those major systems,\nwhat's happening there.\n\n501\n00:26:08.130 --> 00:26:10.770\nSo let's look at my system,\nlet's get in here.\n\n502\n00:26:10.770 --> 00:26:12.690\nFirst thing I need to do is\nopen up a terminal right?\n\n503\n00:26:12.690 --> 00:26:17.430\nSo let's see here, well actually I'll\njust type terminal and look at that.\n\n504\n00:26:17.430 --> 00:26:19.390\nI've got a few options,\nI'll just take the first one.\n\n505\n00:26:19.390 --> 00:26:25.890\nLet me go ahead and\nmake this a little easier if I can here.\n\n506\n00:26:25.890 --> 00:26:28.360\nControl, well I used\nto be able to do this.\n\n507\n00:26:30.100 --> 00:26:34.190\nI'm hitting the wrong button that\ntypically doesn't help here.\n\n508\n00:26:34.190 --> 00:26:36.689\nI'm not hitting the wrong button,\nI'm hitting delete.\n\n509\n00:26:37.780 --> 00:26:41.080\nWell, there we go.\n\n510\n00:26:41.080 --> 00:26:42.100\nI knew I could find it.\n\n511\n00:26:42.100 --> 00:26:43.640\nAll I had to do was hit the right.\n\n512\n00:26:43.640 --> 00:26:45.140\nThe Mac keyboard really throws me off.\n\n513\n00:26:45.140 --> 00:26:47.490\nI'm so\nused to a standard IBM type keyboard.\n\n514\n00:26:47.490 --> 00:26:48.400\nBut, there we go.\n\n515\n00:26:48.400 --> 00:26:51.160\nAll I did to do that was\nhit the shift control and\n\n516\n00:26:51.160 --> 00:26:53.430\nplus key in, bumps the font up for us.\n\n517\n00:26:53.430 --> 00:26:55.790\nGives us better resolution for\nyou guys to see.\n\n518\n00:26:55.790 --> 00:26:57.930\nBut now you can see,\nI'm in my terminal, what do I gotta do?\n\n519\n00:26:57.930 --> 00:27:00.800\nFirst I gotta check and make sure I\nam running a Debian type system, and\n\n520\n00:27:00.800 --> 00:27:05.950\nthe easy way to do that is to see if the\napt packet manager is available for me.\n\n521\n00:27:05.950 --> 00:27:11.790\nSo I can just do something like,\napt dash get, and then dash dash help.\n\n522\n00:27:11.790 --> 00:27:12.400\nSomething like that.\n\n523\n00:27:12.400 --> 00:27:16.780\nAnd you'll see, if I get output, I know\nthe system's there and it's saying, hey!\n\n524\n00:27:16.780 --> 00:27:22.530\nYou know, either this help function\nis a valid way to get help, or you've\n\n525\n00:27:22.530 --> 00:27:26.660\ntyped in something I don't know, so here's\nsome output on how to use this system.\n\n526\n00:27:26.660 --> 00:27:27.630\nIt's a really quick and\n\n527\n00:27:27.630 --> 00:27:30.190\ndirty way to find out whether\nyou have it installed on there.\n\n528\n00:27:30.190 --> 00:27:31.980\nI do, because there it is, it's running.\n\n529\n00:27:31.980 --> 00:27:36.380\nYou'll notice I can do an app-get-dash-H,\nand I would have also done that.\n\n530\n00:27:36.380 --> 00:27:39.710\nOf course, my computer is\ngoing to freak out on me here.\n\n531\n00:27:39.710 --> 00:27:43.160\nLet me just, there we go.\n\n532\n00:27:43.160 --> 00:27:44.150\nBack into action here.\n\n533\n00:27:44.150 --> 00:27:48.840\nMy computer's trying to go crazy on us,\nwith that being said I know app gate\n\n534\n00:27:48.840 --> 00:27:51.080\nis waiting, and I can use that,\nso let's do that.\n\n535\n00:27:51.080 --> 00:27:54.370\nAll you have to do is remember\nif you need to install software,\n\n536\n00:27:54.370 --> 00:27:55.800\nyou have to be a super user.\n\n537\n00:27:55.800 --> 00:28:00.010\nYou have to be administrative privileges,\nso typically you don't log in\n\n538\n00:28:00.010 --> 00:28:03.490\nas the root user,\nwhich is the Linux super user account.\n\n539\n00:28:03.490 --> 00:28:07.950\nSo you'll use a little switch called\nsudo or sudo, whatever you like.\n\n540\n00:28:07.950 --> 00:28:09.630\nSo you just do sudo, like that.\n\n541\n00:28:09.630 --> 00:28:11.700\nIf you're part of the sudo group,\n\n542\n00:28:11.700 --> 00:28:15.790\nthen you will be able to elevate your\nprivileges to do this one function.\n\n543\n00:28:15.790 --> 00:28:18.970\nOnce it's done it'll drop you\nback down to a standard user.\n\n544\n00:28:18.970 --> 00:28:25.800\nSo I'll do sudo and then I'll say\napt-get install and then say Nmap.\n\n545\n00:28:25.800 --> 00:28:28.820\nOkay so this is basically how it's done.\n\n546\n00:28:28.820 --> 00:28:31.750\nI'm gonna say hit return it's\ngonna ask me for my password.\n\n547\n00:28:31.750 --> 00:28:34.958\nIt's gonna let the system\nknow I am who I say I am.\n\n548\n00:28:34.958 --> 00:28:40.830\nSo I'll type that in and now it's\nlooking for the package it has found it.\n\n549\n00:28:40.830 --> 00:28:45.170\nAnd saying okay, after this operation\n18 MB of space will be needed.\n\n550\n00:28:45.170 --> 00:28:46.190\nHere's what we found.\n\n551\n00:28:46.190 --> 00:28:48.760\nThese are the new packages\nthat will be installed.\n\n552\n00:28:48.760 --> 00:28:52.180\nSo it's showing me this, so if there's any\ndependencies and libraries and things of\n\n553\n00:28:52.180 --> 00:28:56.250\nthat nature that are necessary for the\ninstallation, this is what it's gonna do.\n\n554\n00:28:56.250 --> 00:28:57.940\nSo do you want to continue?\n\n555\n00:28:57.940 --> 00:28:59.150\nI sure do.\n\n556\n00:28:59.150 --> 00:29:03.010\nHit Y, hit return, and\nnow it's downloading and installing.\n\n557\n00:29:03.010 --> 00:29:09.080\nNow for some of us that maybe use\nthe Windows operating system, Dan, I can\n\n558\n00:29:09.080 --> 00:29:12.890\nassume, and I'm gonna assume here, and you\ncan correct my assumption if I'm wrong.\n\n559\n00:29:12.890 --> 00:29:15.370\nThat it's reaching out to\nsome public repository,\n\n560\n00:29:15.370 --> 00:29:17.940\nit's finding the exact\npackage that you want.\n\n561\n00:29:17.940 --> 00:29:20.840\nVerifying that package and then pulling\nit back down and installing it?\n\n562\n00:29:20.840 --> 00:29:21.790\n>> That's exactly right,\n\n563\n00:29:21.790 --> 00:29:25.450\nwith these package managers,\n>> There are repositories that they\n\n564\n00:29:25.450 --> 00:29:27.570\nlook for to say is this there.\n\n565\n00:29:27.570 --> 00:29:33.240\nIf you know that there is a software that\nis available through the App-Get system\n\n566\n00:29:33.240 --> 00:29:36.245\nbut it's not finding it, it's probably\nbecause you need to add a repository.\n\n567\n00:29:36.245 --> 00:29:38.315\nThat contains that software.\n\n568\n00:29:38.315 --> 00:29:40.575\nThat's a little beyond what\nwe're trying to do here,\n\n569\n00:29:40.575 --> 00:29:42.525\nnormally this is going to work.\n\n570\n00:29:42.525 --> 00:29:43.285\nIf you need help with that,\n\n571\n00:29:43.285 --> 00:29:46.815\ndon't be afraid to ask us in our forums or\nsomething of that nature.\n\n572\n00:29:46.815 --> 00:29:48.285\nWe'll steer you in the right direction.\n\n573\n00:29:48.285 --> 00:29:52.785\nBut I think most standard repositories\nare going to include Nmap,\n\n574\n00:29:52.785 --> 00:29:54.410\ncuz it's the tried and true software.\n\n575\n00:29:54.410 --> 00:29:57.280\nIt's been around a long time, you're\ngonna see with just about everything.\n\n576\n00:29:57.280 --> 00:30:01.310\nAs you can see it didn't take very long,\nit's text based, it's very small.\n\n577\n00:30:01.310 --> 00:30:02.280\nIt is installed!\n\n578\n00:30:02.280 --> 00:30:07.450\nNow, if I just do Nmap,\nyou'll see that I have Nmap available.\n\n579\n00:30:07.450 --> 00:30:11.220\nWe can even probably glean if\nit got the latest and greatest.\n\n580\n00:30:11.220 --> 00:30:11.870\nLet's see here.\n\n581\n00:30:11.870 --> 00:30:17.570\nAnd you can see there's a lot of options,\nso it grabbed Nmap version 6.47.\n\n582\n00:30:17.570 --> 00:30:20.810\nIf i wanted to update that, then I could\nrun an update command on my app get,\n\n583\n00:30:20.810 --> 00:30:22.980\nmake sure that it was getting the common.\n\n584\n00:30:22.980 --> 00:30:25.840\nBut this is fine,\nthis will work with every one of our,\n\n585\n00:30:25.840 --> 00:30:28.410\nif you want to run 7.1 too,\nthat's fine as well.\n\n586\n00:30:28.410 --> 00:30:30.340\nThat will work.\n\n587\n00:30:30.340 --> 00:30:33.590\nAll of the stuff that we are going to do,\nis going to work regardless of whether\n\n588\n00:30:33.590 --> 00:30:37.940\nyou're using 6.47, or\nthe latest version seven of Nmap.\n\n589\n00:30:37.940 --> 00:30:39.860\nSo pretty simple,\nvery straightforward, very easy.\n\n590\n00:30:39.860 --> 00:30:42.960\nLet's jump over to CentOS and\nsee how that differs.\n\n591\n00:30:42.960 --> 00:30:47.870\nHere we are again, basic operating system.\n\n592\n00:30:47.870 --> 00:30:50.680\nBasically, you just need to log in\nover here and grab me a terminal.\n\n593\n00:30:50.680 --> 00:30:52.520\nLet me go to recently used.\n\n594\n00:30:52.520 --> 00:30:55.740\nI actually use this computer so\nLet's try this again.\n\n595\n00:30:55.740 --> 00:30:57.330\nHey, look at that.\nI am getting better at it everyday.\n\n596\n00:30:58.590 --> 00:31:02.120\nAgain, you will need to elevate privileges\nso we'll need a pseudo command.\n\n597\n00:31:02.120 --> 00:31:05.160\nYou could in theory be logged in as root,\nlike I said, but\n\n598\n00:31:05.160 --> 00:31:06.720\nthat is a dangerous practice.\n\n599\n00:31:06.720 --> 00:31:10.308\nSo we'll typically just use\nthe pseudo commands to elevate and\n\n600\n00:31:10.308 --> 00:31:11.549\nde-elevate as necessary.\n\n601\n00:31:12.910 --> 00:31:15.210\nSo, we need the yum.\n\n602\n00:31:15.210 --> 00:31:20.400\nSo, yum is what is going to get us\nthe installation for a sent OS or\n\n603\n00:31:20.400 --> 00:31:21.870\nred hat variance.\n\n604\n00:31:21.870 --> 00:31:25.070\nSo, yum install, and\nthen we'll just say Nmap.\n\n605\n00:31:26.700 --> 00:31:28.370\nAsking me for the password one more time.\n\n606\n00:31:30.650 --> 00:31:31.550\nAnd here we go.\n\n607\n00:31:31.550 --> 00:31:32.810\nBasically, doing the same kind of thing.\n\n608\n00:31:32.810 --> 00:31:36.410\nIt's checking a repository,\nis this software package available?\n\n609\n00:31:36.410 --> 00:31:38.100\nDo I find anything by that name?\n\n610\n00:31:38.100 --> 00:31:41.580\nOr maybe a variant of that name,\nmaybe an alias of that name?\n\n611\n00:31:41.580 --> 00:31:44.810\nDo displace that to me,\nlet me know, there it is.\n\n612\n00:31:44.810 --> 00:31:50.050\nIt's giving me version numbers,\nand I guess that's for Nmap.\n\n613\n00:31:50.050 --> 00:31:51.700\nAnd then telling me the size,\nand all that thing.\n\n614\n00:31:51.700 --> 00:31:53.380\nDo I wish to continue?\n\n615\n00:31:53.380 --> 00:31:54.510\nYes, delete.\n\n616\n00:31:54.510 --> 00:31:58.850\nNow the weird thing about yum is it\nkind of actually saves the fact that,\n\n617\n00:31:58.850 --> 00:32:00.680\nif I did look up and\nI decided here, you know what?\n\n618\n00:32:00.680 --> 00:32:01.430\nI wanna wait.\n\n619\n00:32:01.430 --> 00:32:04.690\nMaybe this version isn't to my liking, and\n\n620\n00:32:04.690 --> 00:32:08.224\nI wanna verify before I continue,\nand I hit no.\n\n621\n00:32:08.224 --> 00:32:11.773\nIt'll actually save the session, and\nI can come back and run the session And\n\n622\n00:32:11.773 --> 00:32:15.437\ninstead of running Yum install nmap,\nyou know that's pretty simple as well,\n\n623\n00:32:15.437 --> 00:32:18.730\nI typically just rerun the command\nbecause it's not that difficult.\n\n624\n00:32:18.730 --> 00:32:21.600\nSo for here, so you do have the delete\noption and that's what that means.\n\n625\n00:32:21.600 --> 00:32:23.550\nIt's deleting this as a session.\n\n626\n00:32:23.550 --> 00:32:25.130\nBut I want yes.\n\n627\n00:32:25.130 --> 00:32:26.160\nThere we go.\n\n628\n00:32:26.160 --> 00:32:29.260\nDownloading, again a very small package.\n\n629\n00:32:29.260 --> 00:32:30.110\nInstalling.\n\n630\n00:32:30.110 --> 00:32:31.740\nAnd look at that, we're complete.\n\n631\n00:32:31.740 --> 00:32:34.910\nVery quick and\neasy to get installed on Cent.\n\n632\n00:32:34.910 --> 00:32:41.090\nNow since we're here, let's go ahead and\nlet's do a source install as well, okay?\n\n633\n00:32:41.090 --> 00:32:45.320\nSo what I'm gonna do is I'm gonna\nuninstall here, let's say sudo yum,\n\n634\n00:32:45.320 --> 00:32:48.120\nI think it's erase, and\n\n635\n00:32:48.120 --> 00:32:53.540\nI'll say nmap and there we go, so\nit's asking me if this is okay.\n\n636\n00:32:53.540 --> 00:32:56.340\nYes and now it's completed.\n\n637\n00:32:56.340 --> 00:32:57.850\nIt is removed.\n\n638\n00:32:57.850 --> 00:32:59.920\nLet's open up a web browser,\n\n639\n00:32:59.920 --> 00:33:03.940\ngo to the site and\nactually download the source code itself.\n\n640\n00:33:03.940 --> 00:33:07.420\nSo let's see here, go to recently used,\ngrab a web browser.\n\n641\n00:33:08.820 --> 00:33:15.440\nAnd we will go to Nmap.org.\n\n642\n00:33:15.440 --> 00:33:20.030\nGo to download, find source and binaries,\n\n643\n00:33:20.030 --> 00:33:23.970\nhere they are, and they even give\nyou a handy little look, right here.\n\n644\n00:33:23.970 --> 00:33:26.860\nVery, very simple to make this work.\n\n645\n00:33:26.860 --> 00:33:30.430\nSo we just want to grab that.\n\n646\n00:33:30.430 --> 00:33:32.440\nActually, I think I may have\neven downloaded it already.\n\n647\n00:33:32.440 --> 00:33:34.430\nLet me check it real quick here.\n\n648\n00:33:34.430 --> 00:33:35.460\nLet's see here.\n\n649\n00:33:35.460 --> 00:33:38.080\ncd Downloads.\n\n650\n00:33:38.080 --> 00:33:38.800\nAnd look at that.\n\n651\n00:33:38.800 --> 00:33:39.360\nI am the man.\n\n652\n00:33:39.360 --> 00:33:41.580\nI have already prestaged\nthis whole environment.\n\n653\n00:33:41.580 --> 00:33:42.780\nAll I would do is download the link.\n\n654\n00:33:42.780 --> 00:33:43.870\nObviously, you click the link.\n\n655\n00:33:43.870 --> 00:33:45.260\nIt says do you want to save this?\n\n656\n00:33:45.260 --> 00:33:46.640\nYes or no.\nAnd that's what I did.\n\n657\n00:33:46.640 --> 00:33:47.560\nI saved it.\n\n658\n00:33:47.560 --> 00:33:51.848\nSo here it is, Nmap 7.1 to T-G-Z and\n\n659\n00:33:51.848 --> 00:33:57.852\nall I have to do is follow\nthe directions right here.\n\n660\n00:33:57.852 --> 00:34:02.800\nIs Bzip, I could even copy and\npaste this if I want.\n\n661\n00:34:02.800 --> 00:34:04.560\nThat's a little too much.\n\n662\n00:34:04.560 --> 00:34:05.630\nI don't need that.\n\n663\n00:34:05.630 --> 00:34:07.276\nAnd grab that.\n\n664\n00:34:09.366 --> 00:34:11.010\nI'm over.\n\n665\n00:34:11.010 --> 00:34:11.800\nThere we go.\n\n666\n00:34:11.800 --> 00:34:18.590\nGet to the console,\npaste that in there and hit return.\n\n667\n00:34:18.590 --> 00:34:22.330\nI guess I did need that\nwhole tag on the end.\n\n668\n00:34:22.330 --> 00:34:23.350\nIt's giving me errors here.\n\n669\n00:34:23.350 --> 00:34:25.060\nNo such file.\n\n670\n00:34:25.060 --> 00:34:25.560\nWhat is?\n\n671\n00:34:25.560 --> 00:34:26.930\nThat's because I didn't get the BZ2.\n\n672\n00:34:26.930 --> 00:34:29.090\nLook at me I'm getting ahead of myself.\n\n673\n00:34:29.090 --> 00:34:32.010\nI guess I just grabbed\nthe tar file itself.\n\n674\n00:34:32.010 --> 00:34:35.670\nSo this is TGZ, so\ndo I have to go an unzip it?\n\n675\n00:34:35.670 --> 00:34:40.922\nI don't remember,\nlets just try tar -zxvf should then\n\n676\n00:34:40.922 --> 00:34:46.720\ngive me the Nmap at some point 1.12,\nthere we go.\n\n677\n00:34:46.720 --> 00:34:50.360\nThere we go, so\nnow I've unzipped the folder.\n\n678\n00:34:50.360 --> 00:34:52.990\nI do an ls, there should be nmap,\nthere we go.\n\n679\n00:34:52.990 --> 00:34:55.650\nSo now all I have to do is go into\nthat directory that is created.\n\n680\n00:34:55.650 --> 00:34:57.820\nThat's where all\nthe installation files are.\n\n681\n00:34:57.820 --> 00:35:03.250\nSo, cd into nmap and if I do an ls,\nhere's all the things that we need.\n\n682\n00:35:03.250 --> 00:35:05.740\nHere's where it start's getting tricky.\n\n683\n00:35:05.740 --> 00:35:07.730\nOkay, uncompressing a zip file and\n\n684\n00:35:07.730 --> 00:35:11.090\ndumping its contents into a folder,\nI can hang with that.\n\n685\n00:35:11.090 --> 00:35:12.310\nBut it's this compilation stuff,\n\n686\n00:35:12.310 --> 00:35:15.600\nthis compiling source that\nI'm not familiar with.\n\n687\n00:35:15.600 --> 00:35:17.646\nAgain, not a big deal, it's pretty simple.\n\n688\n00:35:17.646 --> 00:35:20.479\nThree short commands, we do a ./configure.\n\n689\n00:35:20.479 --> 00:35:24.639\nActually I'm gonna just I'm gonna sudo\neverything just cuz I like to have that\n\n690\n00:35:24.639 --> 00:35:25.668\nlevel of control.\n\n691\n00:35:25.668 --> 00:35:29.460\nConfigure, yep, that's right.\n\n692\n00:35:29.460 --> 00:35:30.620\nAnd hit enter, right?\n\n693\n00:35:30.620 --> 00:35:32.810\nNow, that's running through.\n\n694\n00:35:32.810 --> 00:35:36.410\nCraziness is happening right here and\nI can't follow this.\n\n695\n00:35:36.410 --> 00:35:37.050\nNot a big deal.\n\n696\n00:35:37.050 --> 00:35:40.240\nIt's just basically building\nthe package for you.\n\n697\n00:35:40.240 --> 00:35:43.200\nIt's saying, here's all this system.\n\n698\n00:35:43.200 --> 00:35:47.370\nI'm looking at this system, I'm saying,\nokay, I'm running on Cento S,\n\n699\n00:35:47.370 --> 00:35:52.990\nI'm running on this type of architecture,\nhere's the CPU.\n\n700\n00:35:52.990 --> 00:35:54.250\nWhat kind is that?\n\n701\n00:35:54.250 --> 00:35:57.220\nAll that other good stuff,\nit's figuring that out.\n\n702\n00:35:57.220 --> 00:35:59.720\nWhat is this system I'm\ntrying to install on?\n\n703\n00:35:59.720 --> 00:36:00.620\nAnd that's compiling and\n\n704\n00:36:00.620 --> 00:36:03.882\nyou get a cool little graphic out here,\nsaying the configuration is complete.\n\n705\n00:36:03.882 --> 00:36:08.220\nSo Nmap has been configured,\nnow we gotta do a little extra.\n\n706\n00:36:08.220 --> 00:36:13.530\nSudo make, and this is actually\ngoing to build the package right?\n\n707\n00:36:13.530 --> 00:36:15.150\nSo we hit return.\n\n708\n00:36:15.150 --> 00:36:16.150\nAnd off we go.\n\n709\n00:36:16.150 --> 00:36:16.750\nIt's billing.\n\n710\n00:36:16.750 --> 00:36:19.840\nIf there are any library dependencies or\nanything like that,\n\n711\n00:36:19.840 --> 00:36:22.810\nthis is typically were\nwe'll run into errors.\n\n712\n00:36:22.810 --> 00:36:27.560\nSo if I needed a library it would error\nout and give me a dependency not found,\n\n713\n00:36:27.560 --> 00:36:28.760\nthings of that nature.\n\n714\n00:36:28.760 --> 00:36:31.450\nThis is why people tend\nto be afraid of using or\n\n715\n00:36:31.450 --> 00:36:34.690\ncompiling from source is because\nit can be a lot of leg work.\n\n716\n00:36:34.690 --> 00:36:35.640\nThere's no doubt.\n\n717\n00:36:35.640 --> 00:36:39.300\nIf your system does not support what it\nis that you're trying to do you're gonna\n\n718\n00:36:39.300 --> 00:36:43.110\nspend all day running around trying to\nfind the dependencies, installing those,\n\n719\n00:36:43.110 --> 00:36:45.950\nmaybe those dependencies\nhave dependencies and\n\n720\n00:36:45.950 --> 00:36:50.560\nyou start seeing why people are like,\nthat evil compiling from source.\n\n721\n00:36:50.560 --> 00:36:52.390\nAnd yeah it can be a lot of work but\n\n722\n00:36:53.700 --> 00:36:57.380\nas you get better at doing it as you get\nmore familiar with the operating system\n\n723\n00:36:57.380 --> 00:37:01.200\nas you get more familiar with\nthe software that you're installing and\n\n724\n00:37:01.200 --> 00:37:06.420\nthe options that are available at\ninstall time, it lends you to be able to\n\n725\n00:37:06.420 --> 00:37:11.850\nmore tightly conform it to what it is that\nyou're using the system that you have.\n\n726\n00:37:11.850 --> 00:37:13.340\nSo, we're giving you the quick and\n\n727\n00:37:13.340 --> 00:37:16.740\ndirty way of installing\nthrough compiling from source.\n\n728\n00:37:16.740 --> 00:37:23.580\nBut there are much further options and\nability through doing up this way.\n\n729\n00:37:23.580 --> 00:37:24.880\nAnd looks like we're done.\n\n730\n00:37:24.880 --> 00:37:26.290\nI don't see any errors.\n\n731\n00:37:26.290 --> 00:37:27.290\nEverything looks good.\n\n732\n00:37:27.290 --> 00:37:32.210\nWe got one more command to do and\nthat's sudo make install.\n\n733\n00:37:33.440 --> 00:37:37.220\nAnd that's what actually makes it\navailable to the system as a program.\n\n734\n00:37:38.620 --> 00:37:41.070\nHere we go, successfully installed.\n\n735\n00:37:41.070 --> 00:37:44.120\nLooks like we are now Nmap\nready on that system.\n\n736\n00:37:44.120 --> 00:37:45.569\nThat's it.\nThat's what all it took.\n\n737\n00:37:45.569 --> 00:37:48.495\nYou ./configure which runs\nthe configure script.\n\n738\n00:37:48.495 --> 00:37:51.125\nYou do make which actually\nbuilds the program and\n\n739\n00:37:51.125 --> 00:37:54.000\nthen make install which\nactually installs it.\n\n740\n00:37:54.000 --> 00:37:55.560\nThat's compiling from source everybody.\n\n741\n00:37:55.560 --> 00:37:59.120\nNmap should be ready to rock on this and\nthere it is.\n\n742\n00:37:59.120 --> 00:38:03.530\nIt's good to go even though I didn't\nuse the much more convenient Yum\n\n743\n00:38:03.530 --> 00:38:05.230\napplications manager.\n\n744\n00:38:05.230 --> 00:38:08.935\nNow, Wes, we've got one more and\nI know our clock is super, super gone.\n\n745\n00:38:08.935 --> 00:38:10.160\n>> Yeah [LAUGH].\n\n746\n00:38:10.160 --> 00:38:13.640\n>> I don't know how far over we are but\nwe've got one more and that's Windows.\n\n747\n00:38:13.640 --> 00:38:16.340\nWe'll run through it as quickly\nas possible because it's Windows.\n\n748\n00:38:16.340 --> 00:38:17.600\nIt's super easy, right?\n\n749\n00:38:17.600 --> 00:38:19.030\nSo let's go over to the Windows machine.\n\n750\n00:38:19.030 --> 00:38:20.400\nLet me get logged in.\n\n751\n00:38:20.400 --> 00:38:23.240\nAnd I believe I've already\neven downloaded it for us.\n\n752\n00:38:23.240 --> 00:38:25.548\nI think it's in the folder here.\n\n753\n00:38:25.548 --> 00:38:29.720\nWent to Nmap.org,\nwent to the downloads page.\n\n754\n00:38:29.720 --> 00:38:34.650\nGrab that link that said\nDownload Windows Binaries, right?\n\n755\n00:38:34.650 --> 00:38:36.320\nThat's what it was.\n\n756\n00:38:36.320 --> 00:38:39.010\nThat Nmap 7.12.exe.\n\n757\n00:38:39.010 --> 00:38:41.830\nAnd probably in the Downloads folder.\n\n758\n00:38:41.830 --> 00:38:43.829\nThere it is right there,\nsetup, double-click.\n\n759\n00:38:44.880 --> 00:38:46.650\nYes, you'll notice that\nyou get the UAC prompt,\n\n760\n00:38:46.650 --> 00:38:48.920\nit's saying hey you're\ninstalling software,\n\n761\n00:38:48.920 --> 00:38:52.310\nyou've gotta have administrator privileges\nhere, do you want me to do this?\n\n762\n00:38:52.310 --> 00:38:55.270\nHere comes the EULA,\nthe license agreement.\n\n763\n00:38:55.270 --> 00:38:58.540\nRead through it,\ndefinitely I don't think it's too long.\n\n764\n00:38:58.540 --> 00:39:01.590\nYou'll only fall asleep two or\nthree times getting through it.\n\n765\n00:39:01.590 --> 00:39:03.900\nI'm just going to click\nI Agree because I do.\n\n766\n00:39:03.900 --> 00:39:04.640\nAnd here we go.\n\n767\n00:39:04.640 --> 00:39:06.380\nAll the options are available.\n\n768\n00:39:06.380 --> 00:39:10.030\nAll the tried and true easiness\nof Windows, what it's known for,\n\n769\n00:39:10.030 --> 00:39:12.890\nwhy we love it so\nbecause of its ease of use.\n\n770\n00:39:12.890 --> 00:39:14.960\nAnd look,\nthere's Zen Map already installed.\n\n771\n00:39:14.960 --> 00:39:18.250\nNotice it's also installing\nEnd Cat which is Net Cat,\n\n772\n00:39:18.250 --> 00:39:20.610\nthe swiss army knife of network tools.\n\n773\n00:39:20.610 --> 00:39:22.980\nIt is a very nice thing to have as well.\n\n774\n00:39:22.980 --> 00:39:27.660\nNdiff, Nping, Packet Generator,\nScan Comparison Tool.\n\n775\n00:39:27.660 --> 00:39:31.240\nLot of cool stuff in this suite so\nI'm just gonna go with the defaults here,\n\n776\n00:39:31.240 --> 00:39:32.390\nhit next.\n\n777\n00:39:32.390 --> 00:39:34.300\nAnd of course there was a description\nnext to each one of those so\n\n778\n00:39:34.300 --> 00:39:36.200\nif you don't know what they do,\njust hover over it.\n\n779\n00:39:36.200 --> 00:39:38.030\nIt will give you\nthe description off to the side.\n\n780\n00:39:38.030 --> 00:39:41.660\nSo it's asking me where I want to\ninstall it at, default's fine for me.\n\n781\n00:39:41.660 --> 00:39:45.670\nMaybe you have a different system so know\nyour system, where you install software,\n\n782\n00:39:45.670 --> 00:39:48.030\nwe'll hit Install and off to the races.\n\n783\n00:39:48.030 --> 00:39:52.840\nAgain, it's not a huge operating system\neven with all the extra bells and\n\n784\n00:39:52.840 --> 00:39:56.880\nwhistles that we just saw it\ndoesn't take a long time.\n\n785\n00:39:56.880 --> 00:40:00.430\nI'd be surprised if it took two minutes.\n\n786\n00:40:00.430 --> 00:40:01.850\nThis is something that\nyou do need to know.\n\n787\n00:40:01.850 --> 00:40:06.096\nYou'll notice that it's giving me\nanother licensing agreement for.\n\n788\n00:40:06.096 --> 00:40:08.254\nWinpcap, what is that?\n\n789\n00:40:08.254 --> 00:40:13.260\nThe Winpcap is a driver\nthat allows us to put our.\n\n790\n00:40:13.260 --> 00:40:17.462\nOur network card into what's\ncalled promiscuous mode.\n\n791\n00:40:17.462 --> 00:40:20.357\nIt's saying normally when network\ntraffic comes to your card,\n\n792\n00:40:20.357 --> 00:40:23.787\nif it's not for your system, it's not\ndestined for you, it just drops it,\n\n793\n00:40:23.787 --> 00:40:26.490\nit just says well it's not for\nme, I don't need that data.\n\n794\n00:40:26.490 --> 00:40:29.560\nBut what if I wanted to see it, right?\n\n795\n00:40:29.560 --> 00:40:30.850\nWhat if I wanted to see that data,\n\n796\n00:40:30.850 --> 00:40:33.720\nI didn't want to just drop it,\nI wanna take a look at it.\n\n797\n00:40:33.720 --> 00:40:35.400\nThe WinPcap is what's necessary for that.\n\n798\n00:40:35.400 --> 00:40:39.000\nAnd since we're doing a lot of that type\nof functionality and we'll need that for\n\n799\n00:40:39.000 --> 00:40:40.400\nfurther down the road and\n\n800\n00:40:40.400 --> 00:40:44.000\ngetting more advanced,\nwe need to install this here at run time.\n\n801\n00:40:44.000 --> 00:40:46.862\nLuckily, if it senses that you\ndon't have the WinPcap installed,\n\n802\n00:40:46.862 --> 00:40:50.660\nit will throw it up and say, hey,\nyou need to install the WinPcap driver.\n\n803\n00:40:50.660 --> 00:40:55.850\nSo I'll agree to that as well,\nanother really quick and it's done.\n\n804\n00:40:55.850 --> 00:40:59.260\nI click next,\nstart the WinPcap service now.\n\n805\n00:40:59.260 --> 00:41:02.960\nYou can make these decisions as you like,\nagain,\n\n806\n00:41:02.960 --> 00:41:06.330\nI'm going with all the defaults\nwhen Pcap is installed.\n\n807\n00:41:06.330 --> 00:41:10.220\nAnd when that's done Nmap\nis not far after again,\n\n808\n00:41:10.220 --> 00:41:12.870\nthis just took me two minutes, if that.\n\n809\n00:41:12.870 --> 00:41:15.100\nStart to finish, very, very simple.\n\n810\n00:41:15.100 --> 00:41:16.200\nI click next.\n\n811\n00:41:16.200 --> 00:41:17.830\nSays do you want me to\ncreate a desktop icon?\n\n812\n00:41:17.830 --> 00:41:19.520\nThat will give you the Zenmap GUI.\n\n813\n00:41:19.520 --> 00:41:21.580\nDo you want me to start menu for.\n\n814\n00:41:21.580 --> 00:41:25.530\nAgain, I tend to stick with defaults\nunless I don't wanna clutter up\n\n815\n00:41:25.530 --> 00:41:26.100\nmy desktop.\n\n816\n00:41:26.100 --> 00:41:29.000\nBut hey it's nice to have\na graphic right there for me.\n\n817\n00:41:29.000 --> 00:41:34.260\nClick finish and\nnow if I either open up a command prompt\n\n818\n00:41:34.260 --> 00:41:38.300\nwhich again you've gotta remember and this\nis something we'll get into later, but\n\n819\n00:41:38.300 --> 00:41:41.990\nI'm gonna mention it right here because\nwe're in Windows in Windows if you open\n\n820\n00:41:41.990 --> 00:41:44.240\na regular command prompt you have\nno administrator privileges.\n\n821\n00:41:44.240 --> 00:41:47.870\nYou have to do the right click Windows\nadministrator and then you get admin M Map\n\n822\n00:41:47.870 --> 00:41:53.780\nruns differently when you're logged in as\nour standard user versus an administrator,\n\n823\n00:41:53.780 --> 00:41:56.440\nso keep that in mind as\nwe move down the line and\n\n824\n00:41:56.440 --> 00:42:00.420\nwhat we can do within that data and\ndo I need to have elevated privileges.\n\n825\n00:42:00.420 --> 00:42:02.300\nSo just keep that as a heads up.\n\n826\n00:42:02.300 --> 00:42:05.350\nI'm not interested in\nthat I just want CMD.\n\n827\n00:42:05.350 --> 00:42:12.590\nSo I can either, let me zoom in here,\nand I can either just type Nmap.\n\n828\n00:42:13.660 --> 00:42:18.000\nAgain get the same kind of\nstandard output that we're\n\n829\n00:42:18.000 --> 00:42:21.290\nused to seeing from the other terminal or\nI can go to Zenmap Gui and\n\n830\n00:42:21.290 --> 00:42:24.900\nwe'll get a little sneak preview of it\nright here, very, very nice, right?\n\n831\n00:42:24.900 --> 00:42:25.960\nGood old fashioned.\n\n832\n00:42:25.960 --> 00:42:29.620\nThe cool thing is it does tell\nyou whatever you're trying to do.\n\n833\n00:42:29.620 --> 00:42:32.760\nIf I say I don't know we're going\nto grab different types of scans.\n\n834\n00:42:32.760 --> 00:42:36.700\nWhatever I do, it shows me\nthe actual command line output,\n\n835\n00:42:36.700 --> 00:42:39.940\nor input should I say, for the CLI.\n\n836\n00:42:39.940 --> 00:42:43.110\nSo if I wanted to do this in the CLI,\nhow would I do it?\n\n837\n00:42:43.110 --> 00:42:44.580\nWell there it is right there.\n\n838\n00:42:44.580 --> 00:42:47.440\nI come and use,\nlike I said it's a great crutch for\n\n839\n00:42:47.440 --> 00:42:51.980\nanybody just getting started having no\ncommand line experience this is going to\n\n840\n00:42:51.980 --> 00:42:54.970\nhelp a lot, and if you are just having\ntrouble, why isn't this working correctly?\n\n841\n00:42:54.970 --> 00:42:59.430\nJump over to Zen map and run it from\none of their default scans and see.\n\n842\n00:42:59.430 --> 00:43:01.270\nI missed the dash A.\n\n843\n00:43:01.270 --> 00:43:02.770\nI wasn't doing that, cool.\n\n844\n00:43:02.770 --> 00:43:03.490\nNow you know what to do.\n\n845\n00:43:03.490 --> 00:43:05.022\nIt's a really great help.\n\n846\n00:43:05.022 --> 00:43:07.780\nBut its very straightforward and\nwe'll get more into the look and\n\n847\n00:43:07.780 --> 00:43:09.870\nfeel of the thing in other episodes.\n\n848\n00:43:09.870 --> 00:43:12.170\nBut, that's basically it.\n\n849\n00:43:12.170 --> 00:43:15.640\nWe've seen it installed on Lynux which is\nbasically the same way we would install it\n\n850\n00:43:15.640 --> 00:43:20.290\nin Mac OS as well other than\nthat X code for Zenmap.\n\n851\n00:43:20.290 --> 00:43:23.340\nBut also we've seen it\ninstalled on Windows.\n\n852\n00:43:23.340 --> 00:43:25.100\nHopefully you guys are trudging\nright through this.\n\n853\n00:43:25.100 --> 00:43:27.160\nThis is not too difficult.\n\n854\n00:43:27.160 --> 00:43:30.200\nIf it is, make sure just give us a,\ngive us an ask there in our forums,\n\n855\n00:43:30.200 --> 00:43:32.150\nwe'll be glad to help you guys out.\n\n856\n00:43:32.150 --> 00:43:34.770\nBut Wes, that's all there is to it.\n\n857\n00:43:34.770 --> 00:43:38.210\nWe've got Nmap installed,\nwe've got Zenmap installed we are now,\n\n858\n00:43:38.210 --> 00:43:43.210\nwe have the platform ready for\nus to jump off and start scanning systems.\n\n859\n00:43:43.210 --> 00:43:44.710\n>> Well thank you for\nthat information Dan.\n\n860\n00:43:44.710 --> 00:43:47.430\nKeep in mind what have we\nlooked at in this episode.\n\n861\n00:43:47.430 --> 00:43:50.170\nWe told you what Nmap is,\nwe told you where to find it and\n\n862\n00:43:50.170 --> 00:43:53.190\nDan you've been gracious enough\nto show us how to install it, but\n\n863\n00:43:53.190 --> 00:43:56.590\nyet we are flexing the muscles on\nthe clock on this episode for sure.\n\n864\n00:43:56.590 --> 00:44:00.360\nBut before we go, got anything else,\nany other piece of advice for us?\n\n865\n00:44:00.360 --> 00:44:05.150\n>> Yeah, just be really careful, like if\nyou have installed NMap, don't run out and\n\n866\n00:44:05.150 --> 00:44:07.510\nstart scanning all\nthe systems in the world.\n\n867\n00:44:07.510 --> 00:44:12.020\nYour service provider might frown on that,\neven if you have permission to do it.\n\n868\n00:44:12.020 --> 00:44:16.440\nYou want to be real careful to not\nscan anything that you don't have\n\n869\n00:44:16.440 --> 00:44:18.370\nspecific permission for.\n\n870\n00:44:18.370 --> 00:44:20.780\nAt least not until we get\nlater in the episode.\n\n871\n00:44:20.780 --> 00:44:22.550\nWe want to get you more\nfamiliar with things.\n\n872\n00:44:22.550 --> 00:44:26.870\nDon't go crazy, we don't want you wielding\nthis like a kid with a gun, right?\n\n873\n00:44:26.870 --> 00:44:32.680\nIt can be dangerous so set up a scanning\nsystem, scan your own systems.\n\n874\n00:44:32.680 --> 00:44:33.905\nScan one, two, seven.\n\n875\n00:44:33.905 --> 00:44:34.600\n.0.0.1, right?\n\n876\n00:44:34.600 --> 00:44:37.490\nStart scanning your own platform,\nsee what you can find,\n\n877\n00:44:37.490 --> 00:44:38.840\nand start playing around with it.\n\n878\n00:44:38.840 --> 00:44:43.470\nAnd, we'll definitely get you better\nable to use it in subsequent episodes.\n\n879\n00:44:43.470 --> 00:44:44.080\nBut that's about it.\n\n880\n00:44:44.080 --> 00:44:45.700\nWes, it should be ready to rock.\n\n881\n00:44:45.700 --> 00:44:47.680\n>> I tell you, Dan, thank you for\nall that information.\n\n882\n00:44:47.680 --> 00:44:50.750\nAnd thank you to our viewers our there for\nwatching, but we're going to go ahead and\n\n883\n00:44:50.750 --> 00:44:52.230\ntake this time to sign out.\n\n884\n00:44:52.230 --> 00:44:54.649\nSigning off for IT Pro TV,\nI've been your host Wes Bryan\n\n885\n00:44:54.649 --> 00:44:55.557\n>> I'm Daniel Lowery\n\n886\n00:44:55.557 --> 00:44:58.041\n>> And we'll see you next time.\n\n887\n00:44:58.041 --> 00:45:05.750\n[MUSIC]\n\n",
          "vimeoId": "165935784"
        },
        {
          "description": "In this episode, Wes and Dan introduce the viewer to the basics on Nmap. They explain the caution, when it comes to legalities, that should be taken when performing scans against a network. They demonstrate the user interfaces that an administrator will use such as the terminal or Windows Xenmap GUI-based version.",
          "length": "1706",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-2-1-nmap_basics-050416-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-2-1-nmap_basics-050416-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-2-1-nmap_basics-050416-1-sm.jpg",
          "title": "Nmap Basics",
          "transcript": "WEBVTT\n\n1\n00:00:00.404 --> 00:00:10.404\n[MUSIC]\n\n2\n00:00:12.297 --> 00:00:14.790\nWelcome back to another exciting\nepisode here at ITPro TV.\n\n3\n00:00:14.790 --> 00:00:16.508\nI'm your host, Wes Brian and\n\n4\n00:00:16.508 --> 00:00:20.750\nin today's episode we're continuing\nthrough our series on Nmap.\n\n5\n00:00:20.750 --> 00:00:24.350\nAnd joining us in the studios today to\nlend his expertise is none other than Mr.\n\n6\n00:00:24.350 --> 00:00:25.020\nDan Lowrie.\n\n7\n00:00:25.020 --> 00:00:26.340\nDan welcome back sir.\n\n8\n00:00:26.340 --> 00:00:27.300\n>> Thank you for having me.\n\n9\n00:00:27.300 --> 00:00:29.900\nI'm glad to be here,\nreally excited because\n\n10\n00:00:29.900 --> 00:00:32.484\nwe get to play around with NMap and\nit's one of my favorite tools and\n\n11\n00:00:32.484 --> 00:00:36.570\nof the favorite things I've ever gotten\nto mess with as an IT professional.\n\n12\n00:00:36.570 --> 00:00:39.440\nAnd you know what the good thing the good\nnews is that you don't have to be an IT\n\n13\n00:00:39.440 --> 00:00:41.530\nprofessional\n>> To play around with Nmap.\n\n14\n00:00:41.530 --> 00:00:43.820\nWe've shown you how to install and\n\n15\n00:00:43.820 --> 00:00:47.200\nget your feet wet a little bit\nwith it in a previous episode.\n\n16\n00:00:47.200 --> 00:00:51.600\nBut today we're going to look at some of\nthe basics, one of the things that I need\n\n17\n00:00:51.600 --> 00:00:56.670\nto know when I hit the ground running,\nthe very core essentials for running and\n\n18\n00:00:56.670 --> 00:00:59.920\nworking with Nmap and that's what\nwe're going to try to cover today.\n\n19\n00:00:59.920 --> 00:01:02.580\nSo I guess that being said,\nwe kind of set the stage.\n\n20\n00:01:02.580 --> 00:01:03.750\nWe'll do that very thing.\n\n21\n00:01:03.750 --> 00:01:06.460\nWe'll hit the ground running and\nsee what happens.\n\n22\n00:01:06.460 --> 00:01:09.438\nSo the first thing we want to do is\nwe want to actually take a look.\n\n23\n00:01:09.438 --> 00:01:12.760\nWe've installed Nmap and\nwe've seen what that does and\n\n24\n00:01:12.760 --> 00:01:16.160\neven from the command line I've\ntyped in the word Nmap and ran it.\n\n25\n00:01:16.160 --> 00:01:19.400\nAnd it saw it as a command because\nit is installed and ready to go.\n\n26\n00:01:19.400 --> 00:01:22.329\nIf you're at that level, if you're\nalready there standing there next to me\n\n27\n00:01:22.329 --> 00:01:25.490\nside-by-side with the instructions\nin front of you going, yeah, yeah,\n\n28\n00:01:25.490 --> 00:01:27.230\nI'm good to go, where do we go next?\n\n29\n00:01:27.230 --> 00:01:31.510\nNow we wanna actually run some scans,\nsee how does a basic scan look?\n\n30\n00:01:31.510 --> 00:01:35.000\nHow do I work with the interface and\nthe CLI version?\n\n31\n00:01:35.000 --> 00:01:38.600\nHow do I play around with Zenmap,\nthe graphical user interface?\n\n32\n00:01:38.600 --> 00:01:40.710\nVersion, the GUI as it were.\n\n33\n00:01:40.710 --> 00:01:41.830\nSo that's what we're gonna do.\n\n34\n00:01:41.830 --> 00:01:45.130\nWe're gonna give you a little bit\nof a tour around those systems, so\n\n35\n00:01:45.130 --> 00:01:47.000\nthat you are at least familiar with them.\n\n36\n00:01:47.000 --> 00:01:50.050\nSo that when we work with terms,\nand I say, you go here or\n\n37\n00:01:50.050 --> 00:01:54.030\nyou type this, you kinda understand\nwhat I'm expecting out of you, and\n\n38\n00:01:54.030 --> 00:01:56.230\nyou know what to expect\nfrom the system itself.\n\n39\n00:01:56.230 --> 00:02:00.190\nYou know Dan in a previous episode you\nhad mentioned how with this utility it's\n\n40\n00:02:00.190 --> 00:02:03.970\nmajority of this utility is gonna be\nused by your systems administrators.\n\n41\n00:02:03.970 --> 00:02:05.880\nHowever, if you're not so\n\n42\n00:02:05.880 --> 00:02:09.726\nnice then some malicious nature\ncould come behind this off.\n\n43\n00:02:09.726 --> 00:02:12.930\nWell not the software itself but remember\nit is the intent, so are there any\n\n44\n00:02:12.930 --> 00:02:16.290\nlegalities we have to worry about when\nit comes to a software like this?\n\n45\n00:02:16.290 --> 00:02:19.070\n>> Yeah.\nWhen we say legalities,\n\n46\n00:02:19.070 --> 00:02:21.190\nthe laws differ from region to region.\n\n47\n00:02:21.190 --> 00:02:24.350\nThrough the United States,\nyou have a certain set of laws.\n\n48\n00:02:24.350 --> 00:02:28.950\nThey're gonna govern how you're able\nto work and use Nmap as a scanning and\n\n49\n00:02:28.950 --> 00:02:30.750\na probing type of system.\n\n50\n00:02:30.750 --> 00:02:33.420\nIf you're in a different country it's\ngoing to have their own set of laws.\n\n51\n00:02:33.420 --> 00:02:37.470\nAnd even though they may be similar,\nthey may be just different enough that\n\n52\n00:02:37.470 --> 00:02:40.220\nyou may be crossing a line\non one side of the border.\n\n53\n00:02:40.220 --> 00:02:43.780\nYou go across the other side of the border\nand you're just fine or vice versa.\n\n54\n00:02:43.780 --> 00:02:46.810\nEven within the United States,\ncause that's my immediate context.\n\n55\n00:02:46.810 --> 00:02:48.620\nDifferent states have different laws, so\n\n56\n00:02:48.620 --> 00:02:54.010\nyou really need to check with your state\nlaws, try to be on top of that thing.\n\n57\n00:02:54.010 --> 00:02:57.270\nBecause if you're working as a penetration\ntester, this is nothing new to you.\n\n58\n00:02:57.270 --> 00:02:58.550\nYou understand that.\n\n59\n00:02:58.550 --> 00:03:03.160\nYou're basically attacking systems and you\ndo have to be careful because here's what\n\n60\n00:03:03.160 --> 00:03:07.230\nhappens if you attack a system that's not\nyours, then you get in trouble, right?\n\n61\n00:03:07.230 --> 00:03:10.000\nBecause you did launch\nan attack against a system.\n\n62\n00:03:10.000 --> 00:03:12.120\nThey don't know that you're\nnot trying to be malicious.\n\n63\n00:03:12.120 --> 00:03:14.460\nAnd if they detect it,\nyou may have some legal trouble.\n\n64\n00:03:14.460 --> 00:03:20.360\nSo, when you're using NMAP verify, always\nverify, that the machines that you're\n\n65\n00:03:20.360 --> 00:03:23.970\nactually scanning, that you're looking at,\neven though a lot of what were going to do\n\n66\n00:03:23.970 --> 00:03:28.510\nis just basically going to come down\nto asking what are you guys doing?\n\n67\n00:03:28.510 --> 00:03:30.530\nWhat do you look like, you know.\n\n68\n00:03:30.530 --> 00:03:36.610\nThe very, what seems mundane and\nvery nothing crazy, right?\n\n69\n00:03:36.610 --> 00:03:40.380\nIt doesn't seem like that but to the end\nuser, the person on the other end,\n\n70\n00:03:40.380 --> 00:03:44.080\non an unauthorized system they might\nsee it as a platform for an attack.\n\n71\n00:03:44.080 --> 00:03:46.590\nBecause a lot of times that's\nexactly what this is used for.\n\n72\n00:03:46.590 --> 00:03:48.440\nWith the black cats out there.\n\n73\n00:03:48.440 --> 00:03:50.630\nThey use Nmap scan systems find.\n\n74\n00:03:50.630 --> 00:03:54.510\nSystems that might be vulnerable and\nuse that as a jumping off platform.\n\n75\n00:03:54.510 --> 00:03:58.390\nSo be careful, we'd like to\ngive you that legal disclaimer.\n\n76\n00:03:58.390 --> 00:04:05.940\nIt's best to build a small, like\na penetrating testing platform, right.\n\n77\n00:04:05.940 --> 00:04:07.600\nI use metasploitable, it's a.\n\n78\n00:04:07.600 --> 00:04:10.160\nFree downloading, gonna grab that,\nit's like an iso.\n\n79\n00:04:10.160 --> 00:04:12.980\nRun it as a virtual machine,\nthrow it on an old laptop,\n\n80\n00:04:12.980 --> 00:04:16.830\nbuild your own home network,\nyour own pen testing sandbox as it were.\n\n81\n00:04:16.830 --> 00:04:20.900\nKeep it all safe, keep it all legal,\nonly go after your own machines.\n\n82\n00:04:20.900 --> 00:04:25.420\nHeck, scan your very machine that you\nhave end map running on, it can do that,\n\n83\n00:04:25.420 --> 00:04:26.990\nit's not gonna hurt it.\n\n84\n00:04:26.990 --> 00:04:28.880\nSo have some fun,\nplay around with your own stuff.\n\n85\n00:04:28.880 --> 00:04:30.300\nLearn how the Nmap works.\n\n86\n00:04:30.300 --> 00:04:32.950\nAnd then if you\nare a systems administrator\n\n87\n00:04:32.950 --> 00:04:34.990\nyou're then able to use\nthat in your environment.\n\n88\n00:04:34.990 --> 00:04:37.570\nHey, you know what,\nI wanna see what's going on here.\n\n89\n00:04:37.570 --> 00:04:39.470\nLet me look for rogue devices.\n\n90\n00:04:39.470 --> 00:04:41.860\nThings of that nature is\nwhere Nmap comes in handy.\n\n91\n00:04:41.860 --> 00:04:43.680\nSo yes, good question Wes.\n\n92\n00:04:43.680 --> 00:04:48.850\nWe do wanna make sure that only what\nyou have authorization to scan.\n\n93\n00:04:48.850 --> 00:04:51.780\nFor the most part, we are going to\nscan some systems that aren't ours,\n\n94\n00:04:51.780 --> 00:04:52.840\nthat we don't have authorization for.\n\n95\n00:04:52.840 --> 00:04:57.850\nBut you're gonna see that we're not really\njumping over the lines of legalities.\n\n96\n00:04:57.850 --> 00:05:00.780\nBut we'll get to that as we\nmove through the series and\n\n97\n00:05:00.780 --> 00:05:02.040\nyou'll see what I'm talking\nabout a little more.\n\n98\n00:05:02.040 --> 00:05:06.340\nWith that being said, let's go ahead and\ntake a look at my computer and\n\n99\n00:05:06.340 --> 00:05:09.750\nsee what NMAP actually looks like\nwhen it comes to the command line.\n\n100\n00:05:09.750 --> 00:05:11.580\nHopefully you guys can see that.\n\n101\n00:05:11.580 --> 00:05:15.660\nI'll zoom in a little bit here,\nmake it a little more accessible.\n\n102\n00:05:15.660 --> 00:05:19.260\nAll you have to do when you open your\ncommand prompt, this is a universally\n\n103\n00:05:19.260 --> 00:05:23.870\naccepted command on most systems\nunless you've dictated otherwise.\n\n104\n00:05:23.870 --> 00:05:27.860\nWe just type in Nmap, and\nof course we did that in the last episode.\n\n105\n00:05:27.860 --> 00:05:31.430\nBut that's invoking the program itself.\n\n106\n00:05:31.430 --> 00:05:34.620\nOnce you've invoked the program, you then\nneed to tell it what you want to do.\n\n107\n00:05:34.620 --> 00:05:38.520\nI'm gonna give you just a basic\nway to scan and, basically,\n\n108\n00:05:38.520 --> 00:05:42.840\nI can just say Nmap scan this system.\n\n109\n00:05:42.840 --> 00:05:45.340\nYou don't even have to give\nit any arguments or anything.\n\n110\n00:05:45.340 --> 00:05:48.390\nWe can just do a good\nold-fashioned Nmap scan.\n\n111\n00:05:48.390 --> 00:05:52.972\nIt does have a default that it will go\nto so some parameters that's built in.\n\n112\n00:05:52.972 --> 00:05:54.880\nIt says if you don't throw\nany arguments at me,\n\n113\n00:05:54.880 --> 00:05:57.890\nI'll do it this way because I\nassume that's what you want.\n\n114\n00:05:57.890 --> 00:05:59.476\nSo there's a default mechanism.\n\n115\n00:05:59.476 --> 00:06:03.449\nSo I can Nmap scan, I do have a meta\nexploitable target machine up and running\n\n116\n00:06:03.449 --> 00:06:07.560\nready for us to play around with, look\nat the output and things of that nature.\n\n117\n00:06:07.560 --> 00:06:10.570\nWe're not going to get into a deep\ndive of the output just quite yet\n\n118\n00:06:10.570 --> 00:06:14.010\nbecause it's a little, a little more, I\njust want you guys to see how it operates,\n\n119\n00:06:14.010 --> 00:06:17.940\nhow it runs, start getting\nfamiliar with the system itself.\n\n120\n00:06:17.940 --> 00:06:20.580\nSo let's scan that guy.\n\n121\n00:06:20.580 --> 00:06:22.190\nI know it's 192.168.219.135.\n\n122\n00:06:22.190 --> 00:06:25.700\nSo I have used an IP address, right?\n\n123\n00:06:25.700 --> 00:06:28.010\nI'll go ahead and hit return,\nlet's see what happens.\n\n124\n00:06:28.010 --> 00:06:29.550\nLet me pull out of there.\n\n125\n00:06:29.550 --> 00:06:31.880\nYou'll notice it found a lot.\n\n126\n00:06:31.880 --> 00:06:35.590\nOf open ports, and it gives me\nthe port number, and that is tcp,\n\n127\n00:06:35.590 --> 00:06:40.050\nthe fact that it's open and then what the\nservice is that's running into that port.\n\n128\n00:06:40.050 --> 00:06:42.180\nAnd that's basically the quick and\ndirty of the output.\n\n129\n00:06:42.180 --> 00:06:46.212\nWe are going to get into more complex\noutput as we reach further into\n\n130\n00:06:46.212 --> 00:06:51.080\nthe usefulness of Nmap and its abilities.\n\n131\n00:06:51.080 --> 00:06:54.220\nBut for right now that's\nexactly what you need to know.\n\n132\n00:06:54.220 --> 00:06:58.730\nYou type in Nmap, you give it an IP\naddress, you can also give it a host name.\n\n133\n00:06:58.730 --> 00:07:02.420\nIt will be able to resolve that, if you\nhave your own dns structure it will use\n\n134\n00:07:02.420 --> 00:07:06.670\nyour dns servers that you have\nin your machine to work that,\n\n135\n00:07:06.670 --> 00:07:10.000\nit also works with the local resolver\ncache, it actually does a lot of that.\n\n136\n00:07:10.000 --> 00:07:11.030\nWe'll get into that a lot later,\n\n137\n00:07:11.030 --> 00:07:14.870\nagain this is more of a how does\nthis look when we run a scan.\n\n138\n00:07:14.870 --> 00:07:16.220\nBut that's basically it.\n\n139\n00:07:16.220 --> 00:07:20.030\nQuick and dirty NMAP run a scan\nagainst this machine and\n\n140\n00:07:20.030 --> 00:07:21.590\nI just happen to use the IP address here.\n\n141\n00:07:21.590 --> 00:07:22.830\n>> So Dan if, and\n\n142\n00:07:22.830 --> 00:07:25.980\nlike you said I know you will get much\nmore in depth on the output here.\n\n143\n00:07:25.980 --> 00:07:27.595\nSo maybe as the systems administrator and\n\n144\n00:07:27.595 --> 00:07:29.860\nI have this run this against\nthe server right here.\n\n145\n00:07:29.860 --> 00:07:34.340\nI can get a really quick look at you know,\nnot only what's open but\n\n146\n00:07:34.340 --> 00:07:36.340\nthe services that might be\nrunning on that server.\n\n147\n00:07:36.340 --> 00:07:39.180\nJust to kinda get an idea of,\nwell what is that server doing for me.\n\n148\n00:07:39.180 --> 00:07:43.009\n>> Yeah, that's exactly right and that's\n>> That's usually probably what you're\n\n149\n00:07:43.009 --> 00:07:47.115\nrunning it for and that's why typically\nwhen you see Nmap referenced,\n\n150\n00:07:47.115 --> 00:07:49.589\nit's something very simple such as this.\n\n151\n00:07:49.589 --> 00:07:52.561\nAnd it goes way beyond that and\nthat's what we're going to try to do.\n\n152\n00:07:52.561 --> 00:07:55.765\nGive you a little more\nmastery over the breath and\n\n153\n00:07:55.765 --> 00:08:00.377\ndepth of what nmap can actually\naccomplish for you as an administrator\n\n154\n00:08:00.377 --> 00:08:04.460\ntrying to map out your network and\nsee what's going on there.\n\n155\n00:08:04.460 --> 00:08:07.580\nLooking for things that might\nbe out of wack, out of kilter.\n\n156\n00:08:07.580 --> 00:08:12.270\nAnd I'm actually,\nduring the preparation for this show.\n\n157\n00:08:12.270 --> 00:08:14.900\nI found somethings out about my own system\nand we're gonna take a look at that.\n\n158\n00:08:14.900 --> 00:08:17.270\nI actually left them there so\nwe can see that.\n\n159\n00:08:17.270 --> 00:08:20.280\nAnd you guys can get an idea\nhow that is actually useful.\n\n160\n00:08:20.280 --> 00:08:25.080\nBut as for running it in the command line,\nso far so good.\n\n161\n00:08:25.080 --> 00:08:26.130\nVery, very simple.\n\n162\n00:08:26.130 --> 00:08:30.670\nWe're gonna use nmap and\nthen whatever arguments if we have any and\n\n163\n00:08:30.670 --> 00:08:34.760\nthen the targets and then you hit\nenter and it runs, it does it's thing.\n\n164\n00:08:34.760 --> 00:08:37.330\nAnd then you use the output\nof what it gives you.\n\n165\n00:08:37.330 --> 00:08:40.020\nThat being said,\nlet's take a look at zenmap as well.\n\n166\n00:08:40.020 --> 00:08:42.490\nI don't wanna leave it\ncompletely out in the cold\n\n167\n00:08:42.490 --> 00:08:45.270\neven though we're not gonna\nbe using it a whole lot.\n\n168\n00:08:45.270 --> 00:08:48.300\nI do wanna show you some of\nthe benefits of using zenmaps.\n\n169\n00:08:48.300 --> 00:08:52.310\nSo I did bring up a Windows 10 machine,\nhere you are little Windows 10.\n\n170\n00:08:52.310 --> 00:08:55.880\nHere we are get our little zenmap up and\nrunning.\n\n171\n00:08:55.880 --> 00:08:59.060\nI'm just gonna give you, like I said,\nthe dime tour of what it looks like and\n\n172\n00:08:59.060 --> 00:09:00.900\nwhat's going on, the different areas.\n\n173\n00:09:00.900 --> 00:09:05.800\nUp here in the top left hand corner,\nwe have the menu options.\n\n174\n00:09:05.800 --> 00:09:06.550\nYou have scan.\n\n175\n00:09:06.550 --> 00:09:10.010\nYou can create a new scan window\nwhich would look just like this.\n\n176\n00:09:10.010 --> 00:09:13.250\nI can open a scan which lets me think that\n\n177\n00:09:13.250 --> 00:09:15.830\nI can save the scan if I\nwant to which you can.\n\n178\n00:09:15.830 --> 00:09:17.990\nYou'll notice that's right here,\nsave a scan.\n\n179\n00:09:17.990 --> 00:09:20.030\nSave the scan on directory.\n\n180\n00:09:20.030 --> 00:09:22.340\nTick all the scans to directory,\nI'm sorry.\n\n181\n00:09:22.340 --> 00:09:26.230\nOpen the scan and this window if you\ndon't wanna open in another window,\n\n182\n00:09:26.230 --> 00:09:27.990\nyou could keep it and the one you're at.\n\n183\n00:09:27.990 --> 00:09:29.950\nThey do that in case you're\nrunning a current scan.\n\n184\n00:09:29.950 --> 00:09:32.800\nYou just want to look at a preview scan\nthat you're already been working on.\n\n185\n00:09:32.800 --> 00:09:34.370\nOr you can run both at the same time.\n\n186\n00:09:34.370 --> 00:09:36.110\nThat's one of the benefits\nof working with nmap.\n\n187\n00:09:36.110 --> 00:09:38.910\nYou can have ten instances\nof that sucker running.\n\n188\n00:09:38.910 --> 00:09:41.080\nI just used that number arbitrarily,\nas many as you want.\n\n189\n00:09:41.080 --> 00:09:44.360\nAs long as your system can\nhandle the traffic and\n\n190\n00:09:44.360 --> 00:09:47.850\nthe intensity against it's resources,\ncarry on.\n\n191\n00:09:47.850 --> 00:09:49.500\nGo as many scans as you like.\n\n192\n00:09:49.500 --> 00:09:51.760\nAnd that can even come in\nhandy from time to time.\n\n193\n00:09:51.760 --> 00:09:53.700\nWe will actually look at stuff like that.\n\n194\n00:09:53.700 --> 00:09:57.690\nAlso has tools, it says to compare\nresults, so we'll run a couple of scans,\n\n195\n00:09:57.690 --> 00:10:01.600\nI want to take a look side by\nside what's happening there.\n\n196\n00:10:01.600 --> 00:10:06.800\nSearch for different scan results,\nobviously that's very self-explanatory.\n\n197\n00:10:06.800 --> 00:10:10.830\nFilter hosts, maybe I don't want to look\nat all the results from all the hosts that\n\n198\n00:10:10.830 --> 00:10:13.940\nI've scanned, I just want specific ones,\nyou can do that as well.\n\n199\n00:10:13.940 --> 00:10:17.210\nThis is an interesting one,\nprofile, create a new profile or\n\n200\n00:10:17.210 --> 00:10:19.190\ncommand or edit selected profile.\n\n201\n00:10:19.190 --> 00:10:22.680\nSo, what we can do is we can create\nmultiple different profiles.\n\n202\n00:10:22.680 --> 00:10:27.140\nActually, remember how I told you just a\nfew minutes ago how when I run end map and\n\n203\n00:10:27.140 --> 00:10:28.420\nthen just the target it says well,\n\n204\n00:10:28.420 --> 00:10:31.260\nI've got a set of defaults\nthat I'm going to do.\n\n205\n00:10:31.260 --> 00:10:33.560\nThat's where you edit\nthose defaults in zenmap.\n\n206\n00:10:33.560 --> 00:10:34.490\nSo, if you wanted to say hey,\n\n207\n00:10:34.490 --> 00:10:37.910\nyou know what, I don't want it\nto run like this as default.\n\n208\n00:10:37.910 --> 00:10:41.020\nI can either create a new profile, which\ngives it a different set of results, or\n\n209\n00:10:41.020 --> 00:10:44.500\na different set of defaults, should I say.\n\n210\n00:10:44.500 --> 00:10:47.170\nOr, I can edit the one\nthat I'm already in, so\n\n211\n00:10:47.170 --> 00:10:51.090\nI say, you know what, I only tend to use\nthis one, I wanna tweak it a little bit,\n\n212\n00:10:51.090 --> 00:10:55.450\nI can run in here, I can say like,\nedit this selected profile give it a name,\n\n213\n00:10:55.450 --> 00:10:59.800\nwhat kind of scans are gonna run,\nall the defaults.\n\n214\n00:10:59.800 --> 00:11:04.004\nHere's basically what I'm going to\nbe running from this default, and\n\n215\n00:11:04.004 --> 00:11:07.787\nI can change that through all\nthese different menu items again,\n\n216\n00:11:07.787 --> 00:11:11.640\nwhich targets I wanna use,\ndo I wanna exclude hosts or networks,\n\n217\n00:11:11.640 --> 00:11:14.963\nlot of a lot of functionality\nbuilt into the profiling.\n\n218\n00:11:14.963 --> 00:11:18.837\nSo if you get to using nmap a lot and you\nrealize, man, this way typically is how\n\n219\n00:11:18.837 --> 00:11:22.656\nI'm gonna run that scan, create that\nprofile, launch it and you're off and\n\n220\n00:11:22.656 --> 00:11:26.573\nrunning and it makes it a whole lot easier\nthan having to type all that stuff in.\n\n221\n00:11:26.573 --> 00:11:29.846\n>> And Dan, would that be\na persistent set of settings so\n\n222\n00:11:29.846 --> 00:11:33.130\nonce I set the profile I\ncan reboot the computer.\n\n223\n00:11:33.130 --> 00:11:34.990\nAnd I don't have to set it,\nset it forget it right?\n\n224\n00:11:34.990 --> 00:11:36.350\nI don't have to set it 100 times over.\n\n225\n00:11:36.350 --> 00:11:40.470\n>> That's exactly right and even if you\ndid if for some reason it lost that as you\n\n226\n00:11:40.470 --> 00:11:45.230\ncan see we are saving that so you should\nbe able to load it up as a profile and\n\n227\n00:11:45.230 --> 00:11:46.900\nthen grab that and you're off and running.\n\n228\n00:11:47.910 --> 00:11:50.330\nTypically again I don't\nwork with Zenmap so\n\n229\n00:11:50.330 --> 00:11:53.260\nmuch even though it is\ngetting better as a GUI tool.\n\n230\n00:11:54.510 --> 00:11:59.290\nI still tend to work in\nthe command line portion of it.\n\n231\n00:11:59.290 --> 00:12:02.440\nAnd I think most administrators\nprobably do as well.\n\n232\n00:12:02.440 --> 00:12:05.090\nThis is great for viewing the results,\ndon't get me wrong, and\n\n233\n00:12:05.090 --> 00:12:07.080\nif you're a Windows guy and\nyou're running Windows,\n\n234\n00:12:07.080 --> 00:12:09.730\nthis is probably how you're gonna\nbe working with these things.\n\n235\n00:12:09.730 --> 00:12:12.510\nBut typically, Unix, Linux,\n\n236\n00:12:12.510 --> 00:12:17.340\nMac guys we're gonna be in a command\nline state, so that's why we want you\n\n237\n00:12:17.340 --> 00:12:22.320\nguys to have a good command over\nthe command line version of nmap.\n\n238\n00:12:22.320 --> 00:12:25.320\nThat way, maybe you're running on\na headless server, maybe you're running on\n\n239\n00:12:25.320 --> 00:12:29.910\na server that doesn't have a good, maybe\na minimal install of cent OS or slackware,\n\n240\n00:12:29.910 --> 00:12:34.850\nsomething crazy like that you need to be\nable to work with, the GUIs are great.\n\n241\n00:12:34.850 --> 00:12:38.660\nNow, I had a mentor of mine when\nI first got into Linux systems,\n\n242\n00:12:38.660 --> 00:12:41.320\nsomebody ask on why do we learn on\nhow to do it in the command line,\n\n243\n00:12:41.320 --> 00:12:45.060\nwe have all these great GUIs, it's a\nlapped if the GUI is not there, all right?\n\n244\n00:12:45.060 --> 00:12:46.050\nWhat do you do then?\n\n245\n00:12:46.050 --> 00:12:49.000\nYou're completely dead in the water if you\ndon't know how to use the CLI version.\n\n246\n00:12:49.000 --> 00:12:51.310\nSo, that's where we're gonna\nspend the bulk of our time and\n\n247\n00:12:51.310 --> 00:12:56.880\nthat is gonna give us a nice foundational\nknowledge to, when we do work with zenmap,\n\n248\n00:12:56.880 --> 00:12:59.760\nknow exactly what's happening and\nit's even easier for us.\n\n249\n00:12:59.760 --> 00:13:01.310\nSo that's why I typically stay over there.\n\n250\n00:13:01.310 --> 00:13:05.180\nSo be prepared if we do want to play\naround with zenmap if I find it to be,\n\n251\n00:13:06.320 --> 00:13:10.010\nthat's going to be more functional for us\nto understand something we'll jump there,\n\n252\n00:13:10.010 --> 00:13:13.330\nbut other than that I just want to\ngive you the dime tour on this guy so\n\n253\n00:13:13.330 --> 00:13:14.750\npretty straight forward.\n\n254\n00:13:14.750 --> 00:13:17.068\nYou see also this is\nwhere I put the targets.\n\n255\n00:13:17.068 --> 00:13:24.230\nLet me jump over to here real quick.\n\n256\n00:13:24.230 --> 00:13:25.660\nThere we go.\n\n257\n00:13:25.660 --> 00:13:27.810\nSo, you see the target right here.\n\n258\n00:13:27.810 --> 00:13:29.690\nWhat kind of scan do I want to run?\n\n259\n00:13:29.690 --> 00:13:30.700\nThis is the profile.\n\n260\n00:13:30.700 --> 00:13:32.810\nYou can create these\ndifferent kind of profiles.\n\n261\n00:13:32.810 --> 00:13:33.980\nWe saw that.\n\n262\n00:13:33.980 --> 00:13:38.180\nAnd this is where they would be saved and\nyou can load it up from there.\n\n263\n00:13:38.180 --> 00:13:39.040\nLet's see here.\n\n264\n00:13:39.040 --> 00:13:41.100\nThis is the actual command\nthat is being run.\n\n265\n00:13:41.100 --> 00:13:44.590\nSo if I change this profile to ping scan,\n\n266\n00:13:44.590 --> 00:13:48.400\nyou'll notice that the command changes\nto what a ping scan actually is.\n\n267\n00:13:49.880 --> 00:13:51.476\nWhat else?\nQuick traceroute,\n\n268\n00:13:51.476 --> 00:13:56.032\nthings of that nature changes that and\nit's just giving you that command line so\n\n269\n00:13:56.032 --> 00:13:59.364\nif you come from a command\nline background you're going\n\n270\n00:13:59.364 --> 00:14:03.053\nokay yeah I see what's going on\nhere it's very, very helpful.\n\n271\n00:14:03.053 --> 00:14:08.827\nIf you look over here we do have a list of\nhosts if I did a scan say if I scanned our\n\n272\n00:14:08.827 --> 00:14:16.233\nMetasploitable 192.1 nope 68299.135 see\nif I ran that guy, hit the scan button,\n\n273\n00:14:16.233 --> 00:14:21.739\nit's running kind of starting to see\nthe same kind of output that we saw,\n\n274\n00:14:21.739 --> 00:14:26.885\nit's running a little bit more slowly and\nthat can be just because of\n\n275\n00:14:26.885 --> 00:14:32.360\nthe that's because I'm doing a traceroute,\nthat's the problem.\n\n276\n00:14:32.360 --> 00:14:33.590\nSo we'll go ahead and cancel that scan.\n\n277\n00:14:33.590 --> 00:14:34.980\nNow it's finished.\n\n278\n00:14:34.980 --> 00:14:37.370\nBut there you go,\nit gives you the what hosts and\n\n279\n00:14:37.370 --> 00:14:39.220\nthat's what we're seeing over here.\n\n280\n00:14:42.190 --> 00:14:45.860\nRight here, so it gives me a list of hosts\nthat I've scanned and that way I can see\n\n281\n00:14:45.860 --> 00:14:51.320\nthe output, if I did any ports that\nwould show up here topologies.\n\n282\n00:14:51.320 --> 00:14:54.240\nIt is kind of diving into the graphical\nwheat, we saw that here before\n\n283\n00:14:54.240 --> 00:14:58.260\nthe break and I was like, that's nice,\nyou can build maps and mark out different\n\n284\n00:14:58.260 --> 00:15:01.860\nspots where your hosts actually are in\na graphical representation, kinda nice.\n\n285\n00:15:01.860 --> 00:15:05.220\n>> Dan, you already mentioned\nabout the intense scan there.\n\n286\n00:15:05.220 --> 00:15:06.460\nQuestion on this one.\n\n287\n00:15:06.460 --> 00:15:09.360\nThat seems like if you\nare running an intense scan,\n\n288\n00:15:09.360 --> 00:15:13.510\nI can only imagine that probably means\nevery port that it can find maybe might\n\n289\n00:15:13.510 --> 00:15:17.570\nflag an IDS, like if you've got\nan intrusion detection system,\n\n290\n00:15:17.570 --> 00:15:20.480\nyou might have to consider that if\nyou're running it on your network.\n\n291\n00:15:20.480 --> 00:15:24.950\n>> Yeah, definitely, those intensive\nscans are nice because they're quick, and\n\n292\n00:15:24.950 --> 00:15:29.440\nthey return a lot of information and\nwe're gonna get into.\n\n293\n00:15:29.440 --> 00:15:32.660\nWell, you know what scan is right for me?\n\n294\n00:15:32.660 --> 00:15:36.850\nThat's obviously going to be upcoming,\nbut yeah Wes is totally right.\n\n295\n00:15:36.850 --> 00:15:38.800\nIf you run an intensive scan and\n\n296\n00:15:38.800 --> 00:15:43.750\nyou're actually trying to not get noticed\nprobably not the best way to go about\n\n297\n00:15:43.750 --> 00:15:47.652\nit because it's gonna flag IDS's and\nthings of that nature.\n\n298\n00:15:47.652 --> 00:15:50.717\n>> You know Dan, you mentioned that we\ncan run this against a single host.\n\n299\n00:15:50.717 --> 00:15:55.116\nDo we have the option of maybe I've got a\nsubnet, or maybe I know that in a certain\n\n300\n00:15:55.116 --> 00:15:59.790\nIP range I've got f50 servers and I want\nto see exactly what's going on there.\n\n301\n00:15:59.790 --> 00:16:02.710\nDo we have the ability to not\njust target a single host,\n\n302\n00:16:02.710 --> 00:16:05.070\ncan we actually target\na range of IP addresses?\n\n303\n00:16:05.070 --> 00:16:06.510\n>> Yes, yes we can.\n\n304\n00:16:06.510 --> 00:16:08.380\nAnd that is one of the great\nthings about Nmap.\n\n305\n00:16:08.380 --> 00:16:12.100\nIt's very flexible,\nvery agile in the way that it works.\n\n306\n00:16:12.100 --> 00:16:14.990\nSo let's take a look at some of that.\n\n307\n00:16:14.990 --> 00:16:17.520\nI'm going to pull out of ZenMap here cuz\n\n308\n00:16:17.520 --> 00:16:19.340\nwe kind of get the idea\nof what's going on.\n\n309\n00:16:19.340 --> 00:16:23.920\nIt's just a graphical version\nof what the command line does.\n\n310\n00:16:23.920 --> 00:16:25.590\nIt does give you some nice output.\n\n311\n00:16:25.590 --> 00:16:26.150\nIt is nice.\n\n312\n00:16:26.150 --> 00:16:27.900\nIt's very easy to read.\n\n313\n00:16:27.900 --> 00:16:31.400\nSo that can be helpful especially\nif you're starting out but again,\n\n314\n00:16:31.400 --> 00:16:34.920\nI, we tend to see a lot of the CLS,\nso that's what we're going to do.\n\n315\n00:16:34.920 --> 00:16:38.390\nSo let me jump back over to my machine,\nand let's see here.\n\n316\n00:16:38.390 --> 00:16:41.830\nWe have seen what,\nrunning just Nmap against versus host.\n\n317\n00:16:41.830 --> 00:16:44.020\nVery, very simple thing to do, right?\n\n318\n00:16:44.020 --> 00:16:45.160\nBut what if I wanted to do that?\n\n319\n00:16:45.160 --> 00:16:48.890\nWhat if I had a whole,\nwhat if I had a class c address block\n\n320\n00:16:48.890 --> 00:16:52.440\nof addresses that I'm using\nfrom my local area network?\n\n321\n00:16:52.440 --> 00:16:53.660\nHow would I scan each one?\n\n322\n00:16:53.660 --> 00:16:58.651\nWould I have to go through and\nsay okay, Nmap 192.168.219.1 enter,\n\n323\n00:16:58.651 --> 00:17:01.665\nwait for the results okay now that's done.\n\n324\n00:17:01.665 --> 00:17:05.000\nNmap, and on and on and on,\nthat would be a drudgery.\n\n325\n00:17:05.000 --> 00:17:06.210\nNo, we don't have to do that.\n\n326\n00:17:06.210 --> 00:17:10.100\nBasically what you can do is like,\nif I wanted to do the entire\n\n327\n00:17:10.100 --> 00:17:14.050\nblock of IP addresses, I could do\nthat using CIDR notation, right?\n\n328\n00:17:14.050 --> 00:17:19.070\nSo if you're familiar with CIDR or\nthe classless inner domain routing type\n\n329\n00:17:19.070 --> 00:17:22.180\nof notation,\nyou know exactly what I'm talking about.\n\n330\n00:17:22.180 --> 00:17:24.680\nIf you're not familiar with that,\nit's basically saying\n\n331\n00:17:24.680 --> 00:17:29.070\nhere are the bits that are masking,\nthat are my subnet mask.\n\n332\n00:17:29.070 --> 00:17:31.260\nHow many bits do I have in my subnet mask?\n\n333\n00:17:31.260 --> 00:17:35.002\nAnd all we have to do is add a forward\nslash, and how many bits then are.\n\n334\n00:17:35.002 --> 00:17:39.178\nSo, in my network I'm running,\n192 with a class c type subnet,\n\n335\n00:17:39.178 --> 00:17:43.231\neven though I know we're talking\nabout side notes, class list.\n\n336\n00:17:43.231 --> 00:17:47.536\nThere really is a, they really don't use\nthat anymore, but from back in the day\n\n337\n00:17:47.536 --> 00:17:51.790\nthe old throw back of, [LAUGH], how many\nbits am I running, what class is that?\n\n338\n00:17:51.790 --> 00:17:53.810\nIt would be a type of class c.\n\n339\n00:17:53.810 --> 00:17:54.960\nI could run my scan, and\n\n340\n00:17:54.960 --> 00:17:58.650\nif I just add that forward slash,\nand I have 24 bits masked off.\n\n341\n00:17:58.650 --> 00:18:04.140\nAnd you'll notice one thing about this,\nI didn't change the IP itself.\n\n342\n00:18:04.140 --> 00:18:06.740\nThis is an interesting\nthing of how nmap works and\n\n343\n00:18:06.740 --> 00:18:10.230\nthis is one of the things that I want\nyou guys to take away from this.\n\n344\n00:18:10.230 --> 00:18:13.260\nThis is that little bit\nof a deeper knowledge.\n\n345\n00:18:13.260 --> 00:18:15.593\nWe're not just gonna scratch the surface,\nwe're gonna go a little deeper.\n\n346\n00:18:15.593 --> 00:18:19.762\nIs that even though I didn't\nchange the IP address,\n\n347\n00:18:19.762 --> 00:18:27.360\nit'll scan the entire range of\n192.168.219.whatever for those 24 bits.\n\n348\n00:18:27.360 --> 00:18:30.301\nSo, how is that,\nit's just the default was it works.\n\n349\n00:18:30.301 --> 00:18:34.289\nIt's basically looking at\nthe network address and saying,\n\n350\n00:18:34.289 --> 00:18:39.058\nhere is what I'm going to scan out\nof that, you're giving my 24 bits,\n\n351\n00:18:39.058 --> 00:18:42.107\nI know how many nodes I have,\nbecause of that,\n\n352\n00:18:42.107 --> 00:18:47.138\ngiving me this amount of nodes,\nwhich is like 254 I believe, or 253.\n\n353\n00:18:47.138 --> 00:18:47.720\nI can never remember.\n\n354\n00:18:47.720 --> 00:18:49.060\nIt's 2 to the n minus 2,\n\n355\n00:18:49.060 --> 00:18:53.260\nand that's I'm remembering my\nnetworking notation correctly.\n\n356\n00:18:53.260 --> 00:18:54.770\nSo that will scan the entire network.\n\n357\n00:18:54.770 --> 00:18:55.620\nAnd let's do that.\n\n358\n00:18:55.620 --> 00:18:57.990\nLet's run this scan on\nthis entire network and\n\n359\n00:18:57.990 --> 00:18:59.820\nsee what kinda results we get from this.\n\n360\n00:19:00.820 --> 00:19:02.630\nHopefully this doesn't take too very long.\n\n361\n00:19:02.630 --> 00:19:08.290\nTypically when you're running on a LAN it\ndoesn't take more than just maybe 20 or\n\n362\n00:19:08.290 --> 00:19:10.090\n30 seconds if that.\n\n363\n00:19:10.090 --> 00:19:12.890\nIt's when you get out to the Internet\nwhere things can typically slow down.\n\n364\n00:19:12.890 --> 00:19:15.020\nAnd we'll have tricks for\nspeeding that up.\n\n365\n00:19:15.020 --> 00:19:16.500\nBut I am done.\n\n366\n00:19:16.500 --> 00:19:21.050\nIt does say that there are 256\nIP addresses that it scanned.\n\n367\n00:19:21.050 --> 00:19:22.130\nSo 256.\nSo you grabbed them all.\n\n368\n00:19:22.130 --> 00:19:25.980\nIt went from 0 to 255 even\nthough those aren't valid.\n\n369\n00:19:25.980 --> 00:19:27.360\nIPs on that range, right?\n\n370\n00:19:27.360 --> 00:19:30.290\nThat's gonna be the network,\nand then the broadcast address.\n\n371\n00:19:30.290 --> 00:19:33.020\nDidn't care, it said you told me 24 bits.\n\n372\n00:19:33.020 --> 00:19:34.710\nI'm scanning all 256 addresses.\n\n373\n00:19:34.710 --> 00:19:37.300\nSo that's nice, so\nthere's that little bit of output.\n\n374\n00:19:37.300 --> 00:19:40.430\nAnd it found two hosts up, two hosts up.\n\n375\n00:19:40.430 --> 00:19:43.050\nNow I do have three hosts\nactually on this network.\n\n376\n00:19:43.050 --> 00:19:44.350\nAnd I have my Macbook.\n\n377\n00:19:44.350 --> 00:19:46.730\nThe Metasploitable and\nthat Windows machine.\n\n378\n00:19:46.730 --> 00:19:49.530\nWe only found two, and that's\ninteresting so we're going to keep that\n\n379\n00:19:49.530 --> 00:19:53.410\nlodged away in our head maybe not for this\nepisode, but for at least as we get down\n\n380\n00:19:53.410 --> 00:19:56.330\nthe road I want you to remember that\nfact that we didn't find all three.\n\n381\n00:19:56.330 --> 00:19:59.530\nIt only scanned in 8.36 seconds,\nit was pretty quick.\n\n382\n00:19:59.530 --> 00:20:01.080\nSo let's see what we found.\n\n383\n00:20:01.080 --> 00:20:05.500\nWe obviously found our Metasploitable\nguy here and as you can see.\n\n384\n00:20:05.500 --> 00:20:09.840\nNmap scan for metasploitable,\nand there is the IP address, but\n\n385\n00:20:09.840 --> 00:20:15.010\nit also found an Nmap report for\nthis second machine 219.1.\n\n386\n00:20:15.010 --> 00:20:19.140\nAnd it says that it's running FTP.\n\n387\n00:20:19.140 --> 00:20:22.730\nWell guess what ladies and\ngentlemen, that is my Macbook.\n\n388\n00:20:22.730 --> 00:20:29.070\nIt is running FTP,\nas I did this scan earlier today, I said,\n\n389\n00:20:29.070 --> 00:20:33.940\nI don't remember installing\nanything ftp but let's take a look.\n\n390\n00:20:33.940 --> 00:20:38.480\nIt alerted me to the fact, now you're\nseeing this is a practical use for\n\n391\n00:20:38.480 --> 00:20:40.110\nusing Nmap in your network.\n\n392\n00:20:40.110 --> 00:20:41.080\nI have found that yes,\n\n393\n00:20:41.080 --> 00:20:44.920\nmy machine should be showing up,\nbut why is it showing that FTP?\n\n394\n00:20:44.920 --> 00:20:47.180\nAnd that's what we need to explore.\n\n395\n00:20:47.180 --> 00:20:51.730\n>> So as an administrator here Dan,\nI've just realized that I've got\n\n396\n00:20:51.730 --> 00:20:55.285\na potentially exploitable protocol,\njust based on its nature.\n\n397\n00:20:55.285 --> 00:20:57.640\nYeah, FTP, oldie but goodie,\nyou've been around for a long time,\n\n398\n00:20:57.640 --> 00:21:00.140\nthere's nothing wrong with it when\nwe tried to secure it today, but\n\n399\n00:21:00.140 --> 00:21:02.320\nas an administrator,\nI've just got a red flag that says,\n\n400\n00:21:02.320 --> 00:21:05.934\nI've got a service somewhere on my\nnetwork that's potentially unprotected.\n\n401\n00:21:05.934 --> 00:21:07.842\n>> [NOISE] 100% right.\n\n402\n00:21:07.842 --> 00:21:09.030\nHe hit the nail on the head.\n\n403\n00:21:09.030 --> 00:21:11.620\nThis is why we perform\nthese types of scans.\n\n404\n00:21:11.620 --> 00:21:12.850\nIf I find something like this,\n\n405\n00:21:12.850 --> 00:21:17.150\nespecially since I have no idea\nwhy FTP should be running.\n\n406\n00:21:17.150 --> 00:21:22.100\nIf I have a legitimate reason to have FTP\nrunning, maybe I'm running an FTP site!\n\n407\n00:21:22.100 --> 00:21:24.350\nAnd I need FTP up and running.\n\n408\n00:21:24.350 --> 00:21:25.660\nBut, I'm not.\n\n409\n00:21:25.660 --> 00:21:27.800\nI don't remember doing that at all.\n\n410\n00:21:27.800 --> 00:21:29.670\nSo, let's see what's going on.\n\n411\n00:21:29.670 --> 00:21:32.710\nNow, it's interesting to me maybe\nbecause of the type of scan I'm running.\n\n412\n00:21:32.710 --> 00:21:34.500\nI get different results,\n\n413\n00:21:34.500 --> 00:21:36.960\nyou'll get different results\nwith different types of scan.\n\n414\n00:21:36.960 --> 00:21:41.990\nI also found that I was running an HTTP\nserver, I found Port 80 was open, as well.\n\n415\n00:21:41.990 --> 00:21:43.600\nSo I thought, hm, that's interesting.\n\n416\n00:21:43.600 --> 00:21:46.410\nPort 80's running, that means web right?\n\n417\n00:21:46.410 --> 00:21:48.290\nThat's web services.\n\n418\n00:21:48.290 --> 00:21:53.170\nSo, let's open a browser and\nsee what happens there, so, if I went to,\n\n419\n00:21:53.170 --> 00:21:55.820\nlet's use Safari because I know\nthere's nothing going on there.\n\n420\n00:21:58.160 --> 00:22:04.655\nI open Safari and I say 192.168.219.1 and\n\n421\n00:22:04.655 --> 00:22:10.440\nI hit Return,\nI do have a webpage that returns.\n\n422\n00:22:10.440 --> 00:22:12.660\nI don't get an error of any kind or 404s,\n\n423\n00:22:12.660 --> 00:22:18.320\nno nothing, I get this copy\nof Rumpus has expired, okay.\n\n424\n00:22:18.320 --> 00:22:20.170\nThe Rumpus evaluation\nsoftware has expired.\n\n425\n00:22:20.170 --> 00:22:23.010\nIf you've already purchased Rumpus,\nwhat the heck is Rumpus?\n\n426\n00:22:23.010 --> 00:22:24.000\nI have no idea.\n\n427\n00:22:24.000 --> 00:22:26.080\nI don't remember installing Rumpus.\n\n428\n00:22:26.080 --> 00:22:27.030\nIs this malware?\n\n429\n00:22:27.030 --> 00:22:27.730\nWhat is this?\n\n430\n00:22:27.730 --> 00:22:31.684\nSo let's do a quick old Google\nsearch there for Rumpus.\n\n431\n00:22:35.723 --> 00:22:38.460\nThat's gonna give me Rumpus Room so\nlet's do FTP.\n\n432\n00:22:40.890 --> 00:22:42.405\nHere we go.\n\n433\n00:22:42.405 --> 00:22:46.982\nMaxim.com, Rumpus FAQ, let's see here.\n\n434\n00:22:46.982 --> 00:22:50.618\nIt's a suite of software for\nMac OSX 10.0 there.\n\n435\n00:22:50.618 --> 00:22:56.470\nIt's an FTP server that has a web\nbased front end to manage it with.\n\n436\n00:22:56.470 --> 00:22:59.070\nAnd you know what, when I saw this I said.\n\n437\n00:22:59.070 --> 00:23:00.430\nI do remember this offer.\n\n438\n00:23:00.430 --> 00:23:06.270\nI used it to setup an FDP server to\nmove some files for a show we did.\n\n439\n00:23:06.270 --> 00:23:07.500\nI couldn't tell you how long ago.\n\n440\n00:23:07.500 --> 00:23:12.470\nAnd I forgot about it and that was running\non my shield making me vulnerable.\n\n441\n00:23:12.470 --> 00:23:15.620\nSo now I always run up to my\nspotlight here to Rumpus.\n\n442\n00:23:15.620 --> 00:23:16.570\nLook!\n\n443\n00:23:16.570 --> 00:23:17.680\nIt has already found room.\n\n444\n00:23:17.680 --> 00:23:19.060\nYeah software is running.\n\n445\n00:23:19.060 --> 00:23:20.810\nThere's the sweet of it right here.\n\n446\n00:23:20.810 --> 00:23:24.070\nIt's asking me to order obviously\nI was using an evaluation version\n\n447\n00:23:24.070 --> 00:23:26.930\nwhich has expired but\nthere is something still running.\n\n448\n00:23:26.930 --> 00:23:28.520\nIt is, I don't need it.\n\n449\n00:23:28.520 --> 00:23:33.110\nEven if it's not active it can't be\nused because of it's expiration.\n\n450\n00:23:33.110 --> 00:23:37.043\nI don't want any sources running\nthat I'm not actively using.\n\n451\n00:23:37.043 --> 00:23:41.565\nSo this is a great way to\nuse Nmap to find exploitable\n\n452\n00:23:41.565 --> 00:23:46.204\nthings I found that my\nsystem might be exploitable.\n\n453\n00:23:46.204 --> 00:23:48.966\nI haven't found out if my\nsystem is exploitable.\n\n454\n00:23:48.966 --> 00:23:53.656\nBut I found that it might be because it's\nrunning a service that I was not aware of\n\n455\n00:23:53.656 --> 00:23:58.136\nand that is one of the main reasons that\nwe want to understand Nmap in that it is\n\n456\n00:23:58.136 --> 00:24:02.780\nhelpful for us as administrators to\nsee what's happening on our network.\n\n457\n00:24:02.780 --> 00:24:05.990\nThis was a great one right here and\nit's just serendipitous\n\n458\n00:24:05.990 --> 00:24:09.630\nthat I actually had some software\nrunning that I'd forgotten all about.\n\n459\n00:24:09.630 --> 00:24:11.320\nAnd Nmap discovered that for me.\n\n460\n00:24:11.320 --> 00:24:13.370\nSo, very very useful.\n\n461\n00:24:13.370 --> 00:24:16.280\n>> So at this point, you could say,\nwell, time to do some spring cleaning,\n\n462\n00:24:16.280 --> 00:24:18.500\nclose off the, a potential exploit, right?\n\n463\n00:24:18.500 --> 00:24:21.490\nAnyway, we're not going into exploit,\nwe're just being aware of the services,\n\n464\n00:24:21.490 --> 00:24:25.070\nbut at this time you could say I'm aware\nof it now, and now I can do some spring\n\n465\n00:24:25.070 --> 00:24:27.910\ncleaning, and get that off the machine\nif I don't want it in my network.\n\n466\n00:24:27.910 --> 00:24:29.070\n>> Yes.\nExactly right.\n\n467\n00:24:29.070 --> 00:24:33.850\nBecause, if this wasn't my own machine,\nif I'm the net admin of a 3,000 person\n\n468\n00:24:33.850 --> 00:24:37.890\ncompany, and I start running Nmap scans\nagainst IP blocks that we're running,\n\n469\n00:24:37.890 --> 00:24:39.400\nI see this kinda thing come up and\n\n470\n00:24:39.400 --> 00:24:44.230\nI see that it's a workstation on\nthe fourth floor in HR, and it's got FTP.\n\n471\n00:24:44.230 --> 00:24:48.300\nWell I'm gonna go down to HR,\nI'm gonna see whose machine that is.\n\n472\n00:24:48.300 --> 00:24:51.870\nI'm gonna look it up in our directory or\nservices or whatever.\n\n473\n00:24:51.870 --> 00:24:54.170\nAnd I'm gonna find out who that belongs to\nand I'm gonna walk over to them and say,\n\n474\n00:24:54.170 --> 00:24:55.590\nhey, I was scanning machines,\n\n475\n00:24:55.590 --> 00:24:58.780\nI noticed that you're running a FTP\nserver over a file transfer server.\n\n476\n00:24:58.780 --> 00:25:03.120\nIs that something you're aware of, and\nif so, can you justify the use of FTP?\n\n477\n00:25:03.120 --> 00:25:07.990\nBecause I don't see any change requests,\nI don't see any requests for\n\n478\n00:25:07.990 --> 00:25:10.230\nthat to be allowed to be done.\n\n479\n00:25:10.230 --> 00:25:13.870\nNormally that kind of thing would run\nthrough IT before being given, and\n\n480\n00:25:13.870 --> 00:25:16.900\nthen IT would install,\nmanage, and configure it.\n\n481\n00:25:16.900 --> 00:25:18.730\nSo, can you explain that?\n\n482\n00:25:18.730 --> 00:25:21.910\nAnd if they can they go, yeah so\napparently the paperwork was lost,\n\n483\n00:25:21.910 --> 00:25:25.830\nor maybe something to that effect, or\nit was the other IT guy in the building,\n\n484\n00:25:25.830 --> 00:25:26.890\nhe did it for me.\n\n485\n00:25:26.890 --> 00:25:29.400\nOkay, great that's why we need\nto document these things.\n\n486\n00:25:29.400 --> 00:25:33.180\nAnd I can put this in our documentation\nsystem because there was nothing there,\n\n487\n00:25:33.180 --> 00:25:34.710\nand that'll be fine.\n\n488\n00:25:34.710 --> 00:25:40.850\nIf they go, I have no idea what that is,\nyou say, we need do like Wes said.\n\n489\n00:25:40.850 --> 00:25:41.850\nIt's time to spring clean.\n\n490\n00:25:41.850 --> 00:25:45.480\nWe're gonna remove that,\ncuz it's not authorized software.\n\n491\n00:25:45.480 --> 00:25:48.420\nThat way we can become compliant\nwith our company's security policy.\n\n492\n00:25:48.420 --> 00:25:50.050\nWe don't wanna get out of that.\n\n493\n00:25:50.050 --> 00:25:51.720\nRight, you'll be in trouble.\n\n494\n00:25:51.720 --> 00:25:54.630\nWe wouldn't want standing before the man\ntrying to answer to what the heck is\n\n495\n00:25:54.630 --> 00:25:55.890\ngoing on here.\n\n496\n00:25:55.890 --> 00:25:57.160\nSo we'll get that taken care of, and\n\n497\n00:25:57.160 --> 00:26:00.960\nthen if we find out that you do need\nan FTP server, then we can find some\n\n498\n00:26:00.960 --> 00:26:04.730\nauthorized software which may be\nthe one that you're already using.\n\n499\n00:26:04.730 --> 00:26:06.090\nInstall it, configure it, and\n\n500\n00:26:06.090 --> 00:26:09.220\nmanagement in lines with\nthe company's security policy.\n\n501\n00:26:09.220 --> 00:26:11.850\nSo you're starting to see very simple, and\n\n502\n00:26:11.850 --> 00:26:14.910\nI'm just making sure that\nI'm not missing anything.\n\n503\n00:26:14.910 --> 00:26:16.620\nI know we're running very,\nvery short on time.\n\n504\n00:26:16.620 --> 00:26:18.570\nWe probably only have a few minutes left.\n\n505\n00:26:18.570 --> 00:26:23.080\nLet's run through a couple of other\ndifferent, actually, you know what?\n\n506\n00:26:23.080 --> 00:26:26.720\nWe've got enough for a second part\non this, to be honest with you.\n\n507\n00:26:26.720 --> 00:26:28.270\nSo, that's what we'll do.\n\n508\n00:26:28.270 --> 00:26:31.680\nThis is a good stopping spot,\nto be honest with you and\n\n509\n00:26:31.680 --> 00:26:34.750\nwe've seen how Nmap can run, right?\n\n510\n00:26:34.750 --> 00:26:38.860\nWe've worked with it in both the SILI and\nthe GUI interface.\n\n511\n00:26:38.860 --> 00:26:42.500\nAnd how it can be beneficial on\njust the most rudimentary of scans,\n\n512\n00:26:42.500 --> 00:26:44.510\nby scanning in an entire IP range.\n\n513\n00:26:44.510 --> 00:26:49.160\nWe have some different ways in which\nwe can scan multiple machines and\n\n514\n00:26:49.160 --> 00:26:50.300\nthat's a very interesting thing.\n\n515\n00:26:50.300 --> 00:26:51.230\nWe want you guys to be aware of it.\n\n516\n00:26:51.230 --> 00:26:53.390\nBut it looks like we're gonna\nneed a part two for that.\n\n517\n00:26:53.390 --> 00:26:54.890\n>> A lot of great information and\n\n518\n00:26:54.890 --> 00:26:58.250\nkeep in mind out there guys,\nkind of the legal disclaimer.\n\n519\n00:26:58.250 --> 00:27:00.210\nRemember what you're\nseeing here can only be,\n\n520\n00:27:00.210 --> 00:27:02.540\nshould only be done on your own\nnetworks and your own machines.\n\n521\n00:27:02.540 --> 00:27:06.880\nAnd keep in mind even if you thought that\nmaybe it should be legal, you don't own\n\n522\n00:27:06.880 --> 00:27:10.800\nyour ISP's network so anything you do\non their network also effects you.\n\n523\n00:27:10.800 --> 00:27:14.010\nSo Dan great information I tell you,\nI can't wait for\n\n524\n00:27:14.010 --> 00:27:17.410\nyou to really unlock this utility,\nsee some of the power, but\n\n525\n00:27:17.410 --> 00:27:21.010\nas you've said, we're definitely\nflexing the muscles of the clock there.\n\n526\n00:27:21.010 --> 00:27:25.170\nDo you have any parting words of wisdom\nbefore we come back for part two?\n\n527\n00:27:25.170 --> 00:27:27.950\n>> No, just be aware like Wes said,\n\n528\n00:27:27.950 --> 00:27:30.620\ntry to stay out of the weeds\nwhen it comes to the scanning.\n\n529\n00:27:30.620 --> 00:27:34.040\nI know we're banging that drum pretty\nhard, but we care about you out there.\n\n530\n00:27:34.040 --> 00:27:35.540\nWe don't want to see\nanything bad happen to you.\n\n531\n00:27:35.540 --> 00:27:39.760\nAnd I know you guys wouldn't\ndo anything purposely wrong,\n\n532\n00:27:39.760 --> 00:27:41.790\nyou bunch of sinister creatures.\n\n533\n00:27:41.790 --> 00:27:44.130\nNo, we're just kidding around.\n\n534\n00:27:44.130 --> 00:27:47.570\nEven if you have something\nlike a contract that says,\n\n535\n00:27:47.570 --> 00:27:50.180\nwe give you authorization\nto scan our network.\n\n536\n00:27:50.180 --> 00:27:52.950\nRight, what if they gave you\nthe wrong IP block, right?\n\n537\n00:27:52.950 --> 00:27:56.300\nSo, we're going to do a lot of verifying\n\n538\n00:27:56.300 --> 00:28:00.970\nthat we're actually working within the\nparameters of our legal rights to scan.\n\n539\n00:28:00.970 --> 00:28:03.485\nSo, that is a great, great disclaimer.\n\n540\n00:28:03.485 --> 00:28:04.925\nOther than that I just\nlook forward to part two,\n\n541\n00:28:04.925 --> 00:28:06.255\nwe'll get a little more into this.\n\n542\n00:28:06.255 --> 00:28:09.225\n>> All right, well thank you Dan,\nas always it's great to have you here with\n\n543\n00:28:09.225 --> 00:28:12.435\nIT Pro TV, and it's great to have\nthe viewers here with IT Pro TV, but\n\n544\n00:28:12.435 --> 00:28:14.265\nwe're gonna go ahead and\ntake this time to sign off.\n\n545\n00:28:14.265 --> 00:28:15.795\nI've been your host Wes Bryan.\n\n546\n00:28:15.795 --> 00:28:16.455\n>> I'm Daniel Lowry.\n\n547\n00:28:16.455 --> 00:28:17.813\n>> And we'll see you next time.\n\n548\n00:28:17.813 --> 00:28:26.340\n[MUSIC]\n\n",
          "vimeoId": "165935785"
        },
        {
          "description": "In this episode, Wes and Dan continue their discussion on the basics of Nmap. They will explore basic introductory scans. They look at scanning a range of IP address as well as scanning small portions of a subnet.  They will demonstrate coupling utilities like nslookup, host and dig with Nmap as well as explaining some of the interactions with DNS that a user needs to be aware of when using Nmap.",
          "length": "2368",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-2-2-nmap_basics_pt2-050416-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-2-2-nmap_basics_pt2-050416-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-2-2-nmap_basics_pt2-050416-1-sm.jpg",
          "title": "Nmap Basics Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.278 --> 00:00:15.169\nWelcome back to another exciting\nepisode here at ITProTV.\n\n3\n00:00:15.169 --> 00:00:17.881\nI'm your host Wes Bryan and\nin today's episode,\n\n4\n00:00:17.881 --> 00:00:20.530\nwe're coming back at\nyou with more of Nmap.\n\n5\n00:00:20.530 --> 00:00:22.790\nThat's right and\nthis is actually a part two.\n\n6\n00:00:22.790 --> 00:00:26.810\nWe had so much great content to fit into\nthis episode, well it's the sequel here.\n\n7\n00:00:26.810 --> 00:00:29.970\nAnd to help us out with that\nendeavor is Mr. Dan Lowry.\n\n8\n00:00:29.970 --> 00:00:31.030\nDan, how you doing sir?\n\n9\n00:00:31.030 --> 00:00:31.740\n>> I'm doing great.\n\n10\n00:00:31.740 --> 00:00:36.185\nJust when you thought it was\nsafe to go back to the Nmap.\n\n11\n00:00:36.185 --> 00:00:37.437\nThere is more, right.\n\n12\n00:00:37.437 --> 00:00:39.394\nPart two, the reckoning of Nmap.\n\n13\n00:00:39.394 --> 00:00:42.342\nNow we left off in the last episode,\nT\\yalking about,\n\n14\n00:00:42.342 --> 00:00:45.477\nlooking at how does Nmap actually run,\nwhat do we got to do,\n\n15\n00:00:45.477 --> 00:00:48.380\nwhat does it take to make\nit actually run a scan?\n\n16\n00:00:48.380 --> 00:00:49.910\nAnd then Wes came up with a great idea,\n\n17\n00:00:49.910 --> 00:00:53.310\nhe's like, hell, if I can scan\none can I scan multiple hosts?\n\n18\n00:00:53.310 --> 00:00:56.120\nAnd we did that,\nwe did a whole IP range and\n\n19\n00:00:56.120 --> 00:00:59.600\nI'm able to do any IP range I want\njust by adding that CIDR notation,\n\n20\n00:00:59.600 --> 00:01:03.200\nthat's the C-I-D-R classless\ninter-domain routing notation.\n\n21\n00:01:03.200 --> 00:01:08.070\nSo, get familiar with that and it'll help\nyou out with your larger, broader scans.\n\n22\n00:01:08.070 --> 00:01:11.687\nBut what if I want to work my way\nback down a little bit, right?\n\n23\n00:01:11.687 --> 00:01:14.693\nThat's really where we gotta jump back in,\nand you'll notice, again,\n\n24\n00:01:14.693 --> 00:01:17.470\nI like to hit the ground running\nbecause I'm a little long winded.\n\n25\n00:01:17.470 --> 00:01:21.310\n[LAUGH] As Wes is laughing and\nshaking his head, yes.\n\n26\n00:01:22.410 --> 00:01:26.110\nWhat if I wanted to pair that back down,\nright, maybe I don't want to do the entire\n\n27\n00:01:26.110 --> 00:01:28.530\nnetwork, but\nI want to do a good chunk of it.\n\n28\n00:01:28.530 --> 00:01:30.710\nOr I want to break it down in to chunks.\n\n29\n00:01:30.710 --> 00:01:35.080\nMaybe I've separated the each one\nof floors of my building into,\n\n30\n00:01:35.080 --> 00:01:41.080\nthe first floor is gonna be .one\nthrough .20 and second floor,\n\n31\n00:01:41.080 --> 00:01:46.020\nor 19 second floor would be 20 through 29\nand third floor and so on and so forth.\n\n32\n00:01:46.020 --> 00:01:48.320\nWhat if I wanted to scan for floor and\n\n33\n00:01:48.320 --> 00:01:51.150\nas I've got that broken down\nthat's how I wanna do it.\n\n34\n00:01:51.150 --> 00:01:53.130\nOne floor at a time, can I do that?\n\n35\n00:01:53.130 --> 00:01:56.510\nYes.\nWe can break our scans into chunks.\n\n36\n00:01:56.510 --> 00:01:57.840\nCan be very helpful.\n\n37\n00:01:57.840 --> 00:01:59.080\nSo, let's take a look at that.\n\n38\n00:01:59.080 --> 00:02:01.110\nAgain this is foundational knowledge.\n\n39\n00:02:01.110 --> 00:02:02.290\nSomething that you need to know, so\n\n40\n00:02:02.290 --> 00:02:04.680\nthat as we progress,\nyou're familiar with these things.\n\n41\n00:02:04.680 --> 00:02:07.060\nWe don't have to build,\nwe're already there,\n\n42\n00:02:07.060 --> 00:02:08.420\nwe already know what we need to know.\n\n43\n00:02:08.420 --> 00:02:12.690\nSo that, as we get a little\nmore excited with Nmap and\n\n44\n00:02:12.690 --> 00:02:17.030\nuse it to its more robust abilities,\nwe're gonna be on the same page.\n\n45\n00:02:17.030 --> 00:02:18.480\nSo, let's jump back into my machine, and\n\n46\n00:02:18.480 --> 00:02:22.140\ntake a look at what it's gonna\ntake to break this into chunks.\n\n47\n00:02:22.140 --> 00:02:25.500\nSo, what we can do is we\ncan assign a range of IPs.\n\n48\n00:02:25.500 --> 00:02:29.500\nThat's basically the technical\nway to state this.\n\n49\n00:02:29.500 --> 00:02:31.540\nWell, I wanna scan a range of IPs.\n\n50\n00:02:31.540 --> 00:02:35.950\nLet me just zoom in on my PC\nhere a little bit for you, so\n\n51\n00:02:35.950 --> 00:02:37.010\nthat you can see that a little easier.\n\n52\n00:02:37.010 --> 00:02:40.030\nAnd what we're gonna do is we're gonna\ntake our same type of Nmap command, right?\n\n53\n00:02:40.030 --> 00:02:44.220\nWe'll say Nmap and\nthis time I'm actually going to do a -sT.\n\n54\n00:02:44.220 --> 00:02:46.810\nAnd you don't have to worry about this,\nthe type of scan that I'm running.\n\n55\n00:02:46.810 --> 00:02:49.410\nThis is a standard type of scan.\n\n56\n00:02:49.410 --> 00:02:53.230\nAnd I'm going to give it a range of IP,\nso I'm going to say.\n\n57\n00:02:53.230 --> 00:02:57.222\nI'm going to do 192.168.219 and\n\n58\n00:02:57.222 --> 00:03:01.219\nI'll say ., we'll say 10 through 20.\n\n59\n00:03:03.727 --> 00:03:05.020\nLike so, right?\n\n60\n00:03:05.020 --> 00:03:05.970\nThere you go.\n\n61\n00:03:05.970 --> 00:03:09.550\nSo, all I had to do was say,\nhere's my start, right?\n\n62\n00:03:09.550 --> 00:03:10.260\nHere's my network.\n\n63\n00:03:12.190 --> 00:03:16.770\nHere's my start IP and\nhere is my finish IP.\n\n64\n00:03:16.770 --> 00:03:22.050\nSo, I'm basically telling it what octet\nto look through by giving it the range.\n\n65\n00:03:22.050 --> 00:03:25.590\nI could if I wanted to break\nthis out in the networks.\n\n66\n00:03:25.590 --> 00:03:26.900\nMaybe I had multiple networks.\n\n67\n00:03:26.900 --> 00:03:35.160\nMaybe it was 219 through 224,\nthat could be as well.\n\n68\n00:03:35.160 --> 00:03:36.950\nI've got two separate ranges.\n\n69\n00:03:36.950 --> 00:03:41.730\nSo, it's going to scan one\nIP block from 10 to 20 and\n\n70\n00:03:41.730 --> 00:03:44.620\nthen another IP block from 10 to 20,\nso on and so forth.\n\n71\n00:03:44.620 --> 00:03:47.670\nSo I am giving it the ranges\non which it needs to scan\n\n72\n00:03:47.670 --> 00:03:50.900\njust by adding that hyphen and\nfrom start to the finish.\n\n73\n00:03:50.900 --> 00:03:52.450\nSo that is what you need you need to know.\n\n74\n00:03:52.450 --> 00:03:53.110\nVery simple stuff.\n\n75\n00:03:53.110 --> 00:03:56.040\nWe are just going to make it easy right\nnow and actually because I would,\n\n76\n00:03:56.040 --> 00:04:00.030\nactually like to have some results\nhere other than my Mac Book.\n\n77\n00:04:00.030 --> 00:04:07.355\nWe'll change this to,\nwe'll say 1:30 to 140.\n\n78\n00:04:07.355 --> 00:04:07.940\nSo, that's what we'll do.\n\n79\n00:04:07.940 --> 00:04:10.630\nWe should see that\nmetasploitable right here.\n\n80\n00:04:10.630 --> 00:04:13.280\nSo, I hit Return and off it goes.\n\n81\n00:04:13.280 --> 00:04:15.210\nLet me pull out of there a little bit.\n\n82\n00:04:15.210 --> 00:04:17.690\nAnd there it did find that\nmetasploitable machine.\n\n83\n00:04:17.690 --> 00:04:22.990\nNotice here it says, Nmap done,\n11 IP addresses that it actually scanned.\n\n84\n00:04:22.990 --> 00:04:27.620\nIt actually looked have 11 IP addresses\nbut only found one host actually up.\n\n85\n00:04:27.620 --> 00:04:32.450\nSo, there's us checking a range of IPs,\na chunk of IPs, and\n\n86\n00:04:32.450 --> 00:04:36.620\ngetting some different results, or\ngetting the results out of that.\n\n87\n00:04:36.620 --> 00:04:39.780\nThat being said,\nwhat if I know I don't need.\n\n88\n00:04:39.780 --> 00:04:44.520\nI know there's machines that I\nwant to scan throughout a network.\n\n89\n00:04:44.520 --> 00:04:48.920\nI have them, how do I feed that into Nmap?\n\n90\n00:04:48.920 --> 00:04:53.650\nHow can I do that without scanning\nthe entire block of IPs or\n\n91\n00:04:53.650 --> 00:04:55.070\neven a chunk of IPs?\n\n92\n00:04:55.070 --> 00:04:58.740\nI want to point that laser\na little more finely.\n\n93\n00:04:58.740 --> 00:05:01.800\nI want to narrow it down even more,\nhow do I do that one?\n\n94\n00:05:01.800 --> 00:05:04.710\nWell, I'm glad that you asked\ncuz obviously it is doable\n\n95\n00:05:04.710 --> 00:05:06.700\notherwise I wouldn't be talking about it,\nright?\n\n96\n00:05:06.700 --> 00:05:08.460\nWhat we can do is we can say,\n\n97\n00:05:08.460 --> 00:05:12.050\nhere are the IP addresses and\nI can do it a few different ways.\n\n98\n00:05:12.050 --> 00:05:14.060\nAnd the most convenient one is\nthe one I'm gonna show you.\n\n99\n00:05:14.060 --> 00:05:15.945\nAnd that's really what we want to do.\n\n100\n00:05:15.945 --> 00:05:19.700\nIt's just like, I tell yah,\nthese are the IPs I want you to run.\n\n101\n00:05:19.700 --> 00:05:21.790\nThese are the IPs I want you to scan.\n\n102\n00:05:21.790 --> 00:05:26.830\nBut we can use a comma kind of\nthe same way that we used our hyphen,\n\n103\n00:05:26.830 --> 00:05:31.140\nlittle dash symbol there, to say I'm\nseparating the different values out.\n\n104\n00:05:31.140 --> 00:05:35.170\nSo, instead of doing a range,\nit's saying do this one, comma, and\n\n105\n00:05:35.170 --> 00:05:37.240\nthis one, comma, and so on and so forth.\n\n106\n00:05:37.240 --> 00:05:39.390\nIt's very simple to see\nwhat that looks like.\n\n107\n00:05:39.390 --> 00:05:43.920\nSo in map, I'll do the -sT again.\n\n108\n00:05:44.950 --> 00:05:49.295\nAnd I'll say 192.168.219, 219.\n\n109\n00:05:49.295 --> 00:05:53.930\n.1, cuz I know that machine's up,\nthat's my host machine.\n\n110\n00:05:53.930 --> 00:05:56.640\nI'll do 135.\nI know that machine's up, right?\n\n111\n00:05:56.640 --> 00:05:58.990\nBecause we just founded\nthe metasploitable machine.\n\n112\n00:05:58.990 --> 00:06:02.370\nAnd that's all I had to do was add\nthat little comment in there and\n\n113\n00:06:02.370 --> 00:06:06.080\nnow it knows what hosts\nthat I wanted to scan.\n\n114\n00:06:06.080 --> 00:06:10.780\nHit Return, of course NMap engine starts,\nand it's off to the races!\n\n115\n00:06:10.780 --> 00:06:13.600\nAnd it returns, you'll notice right here.\n\n116\n00:06:13.600 --> 00:06:19.745\nNMap done, two IP addresses found, two\nhosts up, and it scanned in 3.1 seconds.\n\n117\n00:06:19.745 --> 00:06:20.575\nVery very simple.\n\n118\n00:06:20.575 --> 00:06:24.325\nThere's both of my results and\nonly looked for the ones that I fed it and\n\n119\n00:06:24.325 --> 00:06:26.045\nnot the entire range of IPs.\n\n120\n00:06:26.045 --> 00:06:28.605\n>> I can where that comes in handy Dan,\nwhere maybe you're\n\n121\n00:06:28.605 --> 00:06:32.610\npresented with a spread sheet that says\nhey, we've reserved this range of IPs.\n\n122\n00:06:32.610 --> 00:06:36.557\nWe haven't populated all of them but\naccording to our network documentation,\n\n123\n00:06:36.557 --> 00:06:39.497\nwe've reserved this block of IPs for\nspecific servers and\n\n124\n00:06:39.497 --> 00:06:43.027\nout of that range you say,\nI want this server and I want this server.\n\n125\n00:06:43.027 --> 00:06:46.483\nNow speaking a list Dan, what if I\ncame to you and I said you know what?\n\n126\n00:06:46.483 --> 00:06:47.803\nHere's the documentation.\n\n127\n00:06:47.803 --> 00:06:48.723\nI've got a list.\n\n128\n00:06:48.723 --> 00:06:49.773\nCan you check these hosts?\n\n129\n00:06:49.773 --> 00:06:51.053\n>> Yeah, you can totally do that.\n\n130\n00:06:51.053 --> 00:06:54.903\nAnd this really comes in handy because,\nif we do it like this.\n\n131\n00:06:54.903 --> 00:06:58.843\nWe do the comma delimitation or\nthe comma separation to say,\n\n132\n00:06:58.843 --> 00:07:01.953\nhere are the hosts that I wanna\ngo through and only those hosts.\n\n133\n00:07:01.953 --> 00:07:04.210\nThat's great, that's a nice function.\n\n134\n00:07:04.210 --> 00:07:07.090\nIf I've got three, four,\nmaybe five machines.\n\n135\n00:07:07.090 --> 00:07:11.430\nBut as you start getting more\nmachines that you wanna go through,\n\n136\n00:07:11.430 --> 00:07:14.200\nwhat Wes is talking about is\ndefinitely the way you wanna fly.\n\n137\n00:07:14.200 --> 00:07:17.510\nBecause otherwise,\nyou're typing all day long,\n\n138\n00:07:17.510 --> 00:07:22.160\nand you'll see that some of our Nmap\ncommands are gonna get a little lengthy.\n\n139\n00:07:22.160 --> 00:07:24.690\nAnd that can tend to make\nit difficult to look at.\n\n140\n00:07:24.690 --> 00:07:29.340\nSo, it's easier if I can just\nfeed it a list of hosts, and\n\n141\n00:07:29.340 --> 00:07:33.090\nfrom a file, instead of doing it\nstraight there in the command line.\n\n142\n00:07:33.090 --> 00:07:37.900\nSo, instead of having to have all those\nhosts drawn out, I can say, here's a file\n\n143\n00:07:37.900 --> 00:07:42.900\nwith my list of hosts scan in there,\nso that's definitely a helpful thing.\n\n144\n00:07:42.900 --> 00:07:44.060\nLet's see how we can do that.\n\n145\n00:07:44.060 --> 00:07:47.320\nLet me scroll down and\nwhat I've done is, I went ahead and\n\n146\n00:07:47.320 --> 00:07:50.070\nI created a file, but\nwe'll open it up and play with it.\n\n147\n00:07:50.070 --> 00:07:54.322\nLet's see here.\nI'll just use my handy vi improved editor.\n\n148\n00:07:54.322 --> 00:07:58.277\nI'll just call it hostlist.txt.\n\n149\n00:07:58.277 --> 00:08:00.917\nI've got a couple of\nhosts in there already.\n\n150\n00:08:00.917 --> 00:08:02.877\nAnd you'll notice it's very simple, right?\n\n151\n00:08:02.877 --> 00:08:05.831\nIt's just IP address,\nhit the carriage return and\n\n152\n00:08:05.831 --> 00:08:09.370\ngive it a new line character basically,\ngive it an x-list.\n\n153\n00:08:09.370 --> 00:08:11.710\nIf I had 50 addresses in here,\n\n154\n00:08:11.710 --> 00:08:16.185\nthat's a whole lot easier here to give\nit the addresses in this list format,\n\n155\n00:08:16.185 --> 00:08:19.015\nbecause, as network and\nsystems administrators,\n\n156\n00:08:19.015 --> 00:08:22.935\nwe typically have a list of servers\nthat we work with on any given time.\n\n157\n00:08:22.935 --> 00:08:25.715\nAnd we know what they are,\nwe know what their IP addresses are,\n\n158\n00:08:25.715 --> 00:08:28.925\nbecause they're typically\nstatically mapped, because they're\n\n159\n00:08:28.925 --> 00:08:33.550\nservers they need to be available\nat the same IP at all given times.\n\n160\n00:08:33.550 --> 00:08:35.450\nThings like, I don't know,\nfile servers, right?\n\n161\n00:08:35.450 --> 00:08:36.820\nThat tends to be very helpful.\n\n162\n00:08:36.820 --> 00:08:40.150\nI don't know, mail servers,\nthat tends to be very helpful.\n\n163\n00:08:40.150 --> 00:08:45.260\nWeb servers, again, also very helpful\nfact that their IPs don't change on us.\n\n164\n00:08:45.260 --> 00:08:48.690\nWe want to be able to get to them\nat any given point in time a day.\n\n165\n00:08:48.690 --> 00:08:51.320\nSo, if I want to be able\nto scan those as a list or\n\n166\n00:08:51.320 --> 00:08:54.970\nexclude them as a list I can\ncreate a lists such as this.\n\n167\n00:08:54.970 --> 00:08:58.820\nAnd now there's a couple different\nways in which you can delimit\n\n168\n00:08:58.820 --> 00:09:00.330\nthe fact that there are multiple machines.\n\n169\n00:09:00.330 --> 00:09:03.810\nYou can do it like I've done it here,\nwhich I've found to be the most\n\n170\n00:09:03.810 --> 00:09:08.580\nconvenient way, the most easily digested,\nthe most easily consumed\n\n171\n00:09:08.580 --> 00:09:12.960\nvisually when you create these lists is\nto do what they call new line character.\n\n172\n00:09:12.960 --> 00:09:16.670\nWhich is basically you type in\nyour IP address, just like so, so\n\n173\n00:09:16.670 --> 00:09:23.040\nif I wanted another one here,\nlet me go into insert mode.\n\n174\n00:09:23.040 --> 00:09:25.550\nSo if I typed in 192.168-291.1, right?\n\n175\n00:09:26.950 --> 00:09:30.540\nThe new line character is when I hit\nreturn and it gives me a new line,\n\n176\n00:09:30.540 --> 00:09:32.250\nso hence the new line character.\n\n177\n00:09:32.250 --> 00:09:33.520\nThat's one way I can do it.\n\n178\n00:09:33.520 --> 00:09:36.840\nI can separate these out, there can be\nnew lines in-between them, that's fine.\n\n179\n00:09:36.840 --> 00:09:40.500\nThat's easier to see,\nI typically just leave it as such.\n\n180\n00:09:40.500 --> 00:09:46.100\nThe other way you can do it is through,\nlet me see here I wrote it down\n\n181\n00:09:46.100 --> 00:09:50.710\njust to make sure, I typically use this\nway, spaces, I can separate it by spaces.\n\n182\n00:09:50.710 --> 00:09:54.870\nSo if I just did this, 192.168.219.135.\n\n183\n00:09:54.870 --> 00:09:59.940\nI could do it like that,\nspace, 192.168.219.144, and\n\n184\n00:09:59.940 --> 00:10:04.960\nso on and so forth.\n\n185\n00:10:04.960 --> 00:10:08.220\nI can do it with spaces and\nMAP will read those.\n\n186\n00:10:08.220 --> 00:10:12.150\nAnd as you can see, that starts getting a\nlittle hard to read, at least in my mind.\n\n187\n00:10:12.150 --> 00:10:14.940\nMaybe that's the format you like,\nif you do,\n\n188\n00:10:14.940 --> 00:10:17.670\ngreat, you have that available for you.\n\n189\n00:10:17.670 --> 00:10:19.710\nWe also have tabs.\n\n190\n00:10:19.710 --> 00:10:21.270\nIt will separate through tabs.\n\n191\n00:10:21.270 --> 00:10:27.970\nSo if I was doing 192.168.219.135 and then\nI hit the tab, you'll notice it didn't\n\n192\n00:10:29.450 --> 00:10:33.830\nget a it's not a whole lot different\nfrom the spaces, to be honest with you.\n\n193\n00:10:33.830 --> 00:10:38.560\nBasically, I'm just giving it something\nto break it from one host to the other.\n\n194\n00:10:38.560 --> 00:10:42.060\nBut it accepts new line characters,\nspaces, and tabs.\n\n195\n00:10:42.060 --> 00:10:43.190\nSo keep this in mind,\n\n196\n00:10:43.190 --> 00:10:48.250\nuse the one that you like the best, and\nhenceforth, go on and enjoy your scanning.\n\n197\n00:10:48.250 --> 00:10:51.640\n>> Well, you know, it's great to know\nthat you can search by a list rather than\n\n198\n00:10:51.640 --> 00:10:53.690\nhaving to type those\ncommands multiple times.\n\n199\n00:10:53.690 --> 00:10:57.450\nAnd now, let's say in the middle\nof that list that I've handed you,\n\n200\n00:10:57.450 --> 00:11:00.310\nI've got one and\nit's in red numbers, there.\n\n201\n00:11:00.310 --> 00:11:02.330\nI've got an IP in the list and\nit's in red numbers.\n\n202\n00:11:02.330 --> 00:11:04.320\nAnd I tell you, I say, you know what, Dan?\n\n203\n00:11:04.320 --> 00:11:06.510\nI don't want you scanning that host.\n\n204\n00:11:06.510 --> 00:11:08.230\nAnd the reason I don't want\nyou scanning that host is,\n\n205\n00:11:08.230 --> 00:11:12.210\nwe've got some very sensitive\nintrusion protection system on it.\n\n206\n00:11:12.210 --> 00:11:16.000\nAnd if it detects some kind of scan, well\nthen what's gonna end up happening is,\n\n207\n00:11:16.000 --> 00:11:17.210\nit's going to shut all the ports down.\n\n208\n00:11:17.210 --> 00:11:18.540\nWe're gonna lose some services.\n\n209\n00:11:18.540 --> 00:11:20.830\nIs there a way that I can exclude a host?\n\n210\n00:11:20.830 --> 00:11:23.110\n>> Young grasshopper,\nyou are very, very wise.\n\n211\n00:11:23.110 --> 00:11:23.710\nHe is right.\n\n212\n00:11:23.710 --> 00:11:28.930\nA lot of times when we create a list\nof hosts to scan, it's an exclusion.\n\n213\n00:11:28.930 --> 00:11:30.870\nI don't want you to scan these.\n\n214\n00:11:30.870 --> 00:11:32.248\nThese are sensitive.\n\n215\n00:11:32.248 --> 00:11:34.130\n[COUGH] Excuse me.\n\n216\n00:11:34.130 --> 00:11:37.180\nI can't handle a network traffic on it.\n\n217\n00:11:37.180 --> 00:11:39.020\nMaybe I'm worried about it.\n\n218\n00:11:39.020 --> 00:11:44.070\nAgain, the urban legend that end\nmap is gonna crash everything.\n\n219\n00:11:44.070 --> 00:11:47.140\nI don't want you to\nmaybe crash the system.\n\n220\n00:11:47.140 --> 00:11:48.330\nAnd I make light of it,\n\n221\n00:11:48.330 --> 00:11:54.540\nit could be a much older system that\nis unable to handle an intensive scan.\n\n222\n00:11:54.540 --> 00:11:56.630\nI just don't wanna scan, it doesn't\nneed to be scanned, whatever reason.\n\n223\n00:11:56.630 --> 00:11:58.440\nI've got it firewalled off to high heaven.\n\n224\n00:11:58.440 --> 00:11:59.410\nI don't need to worry about it.\n\n225\n00:11:59.410 --> 00:12:01.180\nJust don't scan these systems.\n\n226\n00:12:01.180 --> 00:12:03.890\nYes, we can do that as well.\n\n227\n00:12:03.890 --> 00:12:06.530\nSo what I wanna do is I wanna\ncreate an exclude file.\n\n228\n00:12:06.530 --> 00:12:10.560\nI'm going to basically just\nescape out of here and\n\n229\n00:12:10.560 --> 00:12:13.740\nquit without saving so that way it\ndoesnt mess with my actual work.\n\n230\n00:12:13.740 --> 00:12:14.890\nBecause we're going to use these files,\n\n231\n00:12:14.890 --> 00:12:17.110\nwe're going to see how\nthey work in jus a second.\n\n232\n00:12:17.110 --> 00:12:17.650\nSo what do I do?\n\n233\n00:12:17.650 --> 00:12:19.750\nI've got to create an exclude file.\n\n234\n00:12:19.750 --> 00:12:22.050\nBasically the same type\nof thing that I just did.\n\n235\n00:12:22.050 --> 00:12:25.760\nSo I'll create one of them,\nI'll call it exclude.\n\n236\n00:12:25.760 --> 00:12:27.330\nIs that what I want to call it?\n\n237\n00:12:29.010 --> 00:12:30.817\nYeah, we'll call it don't scan.\n\n238\n00:12:30.817 --> 00:12:34.000\nThat's a little more [LAUGH] helpful,\nright?\n\n239\n00:12:34.000 --> 00:12:38.890\nSo we'll call it dont_scan.txt like so.\n\n240\n00:12:38.890 --> 00:12:40.240\nAnd then what do I do?\n\n241\n00:12:40.240 --> 00:12:44.035\nGo in and I create a list of hosts\nthat I don't want it to scan.\n\n242\n00:12:44.035 --> 00:12:45.904\nSo I'll say, we'll say I don't\nwant it to scan my MacBook.\n\n243\n00:12:45.904 --> 00:12:50.736\nI'll say 192.168.219.1\n\n244\n00:12:50.736 --> 00:12:54.868\nthere we go, escape, save that.\n\n245\n00:12:54.868 --> 00:12:59.370\n[INAUDIBLE] Like so,\nhelps if I actually do it correctly.\n\n246\n00:13:00.660 --> 00:13:05.630\nEscape and then wq there's my problem.\n\n247\n00:13:05.630 --> 00:13:08.530\nA little backwards today\nmy dyslexia's kicking in.\n\n248\n00:13:08.530 --> 00:13:09.900\nSo now I have a file,\n\n249\n00:13:09.900 --> 00:13:14.490\nif I cat this, say don't scan, I see\nthere's the IP that's inside of there.\n\n250\n00:13:14.490 --> 00:13:17.050\nI can also cat my host list.\n\n251\n00:13:17.050 --> 00:13:19.590\nSo these are the things\nthat I do want to scan.\n\n252\n00:13:19.590 --> 00:13:20.480\nThere they are, right there.\n\n253\n00:13:20.480 --> 00:13:25.370\nNow all I got to do is feed\nthose files into NMAP, and\n\n254\n00:13:25.370 --> 00:13:26.630\nthen it will scan the files.\n\n255\n00:13:26.630 --> 00:13:28.290\nAnd we'll show you that\nhere in just a second.\n\n256\n00:13:28.290 --> 00:13:31.946\n>> You know, Dan, we've got a good\nquestion that came from the chat room that\n\n257\n00:13:31.946 --> 00:13:34.384\nsaid, in the files there\nthat you're creating,\n\n258\n00:13:34.384 --> 00:13:37.364\nis there a way that you can comment\nit out so that NMAP sees it?\n\n259\n00:13:37.364 --> 00:13:40.948\nAnd obviously it doesn't try to think\nof it as a syntax can you comment on\n\n260\n00:13:40.948 --> 00:13:41.560\na find out?\n\n261\n00:13:41.560 --> 00:13:43.570\n>> I want to say yes,\n\n262\n00:13:43.570 --> 00:13:47.735\nprobably in the same way that you\ncomment most files using a hash.\n\n263\n00:13:47.735 --> 00:13:52.030\nI am not a 100%,\nthat is why I don't want to put,\n\n264\n00:13:52.030 --> 00:13:54.870\nwhat it is a great way to find out, right.\n\n265\n00:13:54.870 --> 00:13:58.120\nWe will actually just want to try to\ncomment, typically that's what you do,\n\n266\n00:13:58.120 --> 00:14:00.170\nyou use a hash for comments.\n\n267\n00:14:00.170 --> 00:14:04.850\nI would assume the same will be true here\nas it was written by a program or so.\n\n268\n00:14:04.850 --> 00:14:07.210\nI assume he runs the same gamma here.\n\n269\n00:14:07.210 --> 00:14:09.880\nLet's get it through,\nI'll create another host file list,\n\n270\n00:14:09.880 --> 00:14:12.090\nwe'll put a comment in there and\nsee if it works.\n\n271\n00:14:12.090 --> 00:14:14.830\nIf not I'll research that and\nfind out for you and\n\n272\n00:14:14.830 --> 00:14:18.450\nwe'll make sure to mention it in another\nepisode if I don't get to it here.\n\n273\n00:14:18.450 --> 00:14:21.330\nSo, let's do that, let's, I'll vim.\n\n274\n00:14:21.330 --> 00:14:27.505\nWe'll call it, commented_hosts.txt and\n\n275\n00:14:27.505 --> 00:14:35.793\ninsert and we'll say 192.168.219.135 and\n\n276\n00:14:35.793 --> 00:14:39.529\nif I can stop using commas,\n\n277\n00:14:39.529 --> 00:14:44.748\nthat would probably help a whole lot.\n\n278\n00:14:44.748 --> 00:14:45.579\n[LAUGH] 135.\n\n279\n00:14:45.579 --> 00:14:50.731\nAnd then I'll just tab over\na little bit and say, this\n\n280\n00:14:50.731 --> 00:14:56.199\nis metasploitable.\n\n281\n00:14:58.471 --> 00:15:01.000\nThere we go.\n\n282\n00:15:01.000 --> 00:15:02.540\nHopefully that'll work out for us.\n\n283\n00:15:02.540 --> 00:15:04.760\nWe'll see,\nlike I said I'm not 100% sure but\n\n284\n00:15:04.760 --> 00:15:08.530\nwe'll get to play around\nwith it that's always fun.\n\n285\n00:15:08.530 --> 00:15:14.180\nColon wq and write that and now if I\ncan't commented hosts, there we go.\n\n286\n00:15:14.180 --> 00:15:16.720\nNow we'll try all three of these and\nsee what happens.\n\n287\n00:15:16.720 --> 00:15:20.720\nSo how do I do it, how do I actually\nmake NMAP read from these files?\n\n288\n00:15:20.720 --> 00:15:23.600\nWell like anything it's an argument\nthat you throw at NMAP so\n\n289\n00:15:23.600 --> 00:15:25.010\nit knows that that's\nexactly what you wanna do.\n\n290\n00:15:25.010 --> 00:15:28.790\nSo we're gonna give it an argument, give\nit the filename and then there you go.\n\n291\n00:15:28.790 --> 00:15:31.850\nNotice I didn't say we're gonna give you\nthe host name cuz we're gonna get the host\n\n292\n00:15:31.850 --> 00:15:33.390\nfrom the file itself.\n\n293\n00:15:33.390 --> 00:15:34.030\nSo how do we do that?\n\n294\n00:15:34.030 --> 00:15:35.650\nLet me check my notes here\nto make sure I got it right.\n\n295\n00:15:35.650 --> 00:15:36.320\nYes, that's right.\n\n296\n00:15:36.320 --> 00:15:38.550\nVery simply, use -iL.\n\n297\n00:15:38.550 --> 00:15:44.370\nIt's a lowercase i, capital L,\nbasically saying read from this list.\n\n298\n00:15:44.370 --> 00:15:50.180\nSo we'll say nmap -iL, that's letting\nit know to read from the list.\n\n299\n00:15:50.180 --> 00:15:52.786\nAnd then you gotta give it the list\nthat you actually want it to read from.\n\n300\n00:15:52.786 --> 00:15:57.508\nSo we will say, we'll start with the host\nlist, the simple one that we know works.\n\n301\n00:15:57.508 --> 00:16:00.562\nHit return, yes, NMAPS is firing off.\n\n302\n00:16:00.562 --> 00:16:02.169\nAnd it scanned the machine.\n\n303\n00:16:02.169 --> 00:16:03.492\nThere's the results.\n\n304\n00:16:03.492 --> 00:16:07.147\nYou'll notice that it scanned two\nIP addresses and found one of,\n\n305\n00:16:07.147 --> 00:16:11.305\njust cuz I gave it a random, there were\ntwo IP addresses in that host file.\n\n306\n00:16:11.305 --> 00:16:13.070\nBut only one actually returned results,\n\n307\n00:16:13.070 --> 00:16:14.880\nthe other one was a random one\nthat I picked out of the air.\n\n308\n00:16:16.160 --> 00:16:21.400\nAll right, now let's do the don't\nscan these IP addresses.\n\n309\n00:16:21.400 --> 00:16:28.030\nSo if I want to do that,\nI think I would actually use exclude.\n\n310\n00:16:28.030 --> 00:16:32.080\nSo I can exclude one and\nthe command line using nmap\n\n311\n00:16:35.600 --> 00:16:38.570\nand doing- - exclude like that.\n\n312\n00:16:38.570 --> 00:16:44.820\nJust simply saying I don't want\nyou to scan 192.168.209.1.\n\n313\n00:16:44.820 --> 00:16:48.090\nI can do that and then throw that out.\n\n314\n00:16:48.090 --> 00:16:49.710\nIt won't scan that.\n\n315\n00:16:49.710 --> 00:16:57.598\nI think I then can just say -st 102.1.68.\n\n316\n00:16:57.598 --> 00:17:00.495\n192.168..219.0/24.\n\n317\n00:17:00.495 --> 00:17:05.370\nI believe that should work.\n\n318\n00:17:05.370 --> 00:17:07.960\nWe'll get errors if it doesn't or\n\n319\n00:17:07.960 --> 00:17:10.660\nit will actually scan the machine that\nI don't want to scan it if it doesn't.\n\n320\n00:17:10.660 --> 00:17:17.430\nI'm pretty sure it will exclude this one\nand then scan the rest of the system.\n\n321\n00:17:17.430 --> 00:17:21.275\nNotice it's taking a little bit of time\ncuz it's actually looking for hosts,\n\n322\n00:17:21.275 --> 00:17:24.256\ndoing discovery,\nsaying are there any machines out there?\n\n323\n00:17:24.256 --> 00:17:26.023\nIf I find them, what is the result?\n\n324\n00:17:26.023 --> 00:17:27.120\nSo there we go.\n\n325\n00:17:27.120 --> 00:17:31.022\nYou'll notice that it scanned\n255 IP addresses, right?\n\n326\n00:17:31.022 --> 00:17:34.130\nIt excluded the one\nthat I gave it in line.\n\n327\n00:17:34.130 --> 00:17:36.490\nWhat if I want to use my exclude file?\n\n328\n00:17:36.490 --> 00:17:42.440\nSame kind of idea except this time,\nwe'll just come back here and say,\n\n329\n00:17:42.440 --> 00:17:48.000\ntake that IP address out of there and\nsay excludefile, like that.\n\n330\n00:17:48.000 --> 00:17:50.520\nSo just add file to the end\nof your exclude statement and\n\n331\n00:17:50.520 --> 00:17:52.410\nthen tell it what the file is.\n\n332\n00:17:52.410 --> 00:17:54.090\nAnd what did we call that?\n\n333\n00:17:54.090 --> 00:17:56.790\nI think we called it dont_scan,\nif I'm not mistaken.\n\n334\n00:17:56.790 --> 00:18:01.320\nSo, we'll say dont_scan.txt and\nI did tab autocomplete for us there.\n\n335\n00:18:01.320 --> 00:18:02.420\nAnd now I hit return.\n\n336\n00:18:03.680 --> 00:18:06.040\nNmap starts to crank away,\nthe engine's working.\n\n337\n00:18:06.040 --> 00:18:09.210\nAgain, it's doing discovery,\nit's looking for hosts out there.\n\n338\n00:18:09.210 --> 00:18:13.200\nAnd when it finds it, it's even doing\nthings like reverse DNS lookups and\n\n339\n00:18:13.200 --> 00:18:14.450\na bunch of other cool stuff.\n\n340\n00:18:14.450 --> 00:18:18.360\nAnd then once, if it did find a host,\nscans the ports.\n\n341\n00:18:18.360 --> 00:18:18.990\nWhat does it find?\n\n342\n00:18:18.990 --> 00:18:20.020\nReturns the results.\n\n343\n00:18:20.020 --> 00:18:22.280\nSo it took almost a full eight seconds.\n\n344\n00:18:22.280 --> 00:18:24.400\nI know that's brutal waiting time for us.\n\n345\n00:18:24.400 --> 00:18:28.070\nBut very simple,\nyou'll notice that, what did it do?\n\n346\n00:18:28.070 --> 00:18:29.720\nWe have 255 IP addresses.\n\n347\n00:18:29.720 --> 00:18:34.870\nAgain, it excluded one, the one that\nit founded in the exclude file that\n\n348\n00:18:34.870 --> 00:18:40.640\nwe created, the dontscan.txt and\nwe use that --exclude file and\n\n349\n00:18:40.640 --> 00:18:43.780\nthen the file name and that's how you\ntell it to exclude certain things.\n\n350\n00:18:43.780 --> 00:18:46.292\nLet's check that commented one and\nsee if that sucker works.\n\n351\n00:18:46.292 --> 00:18:50.840\nLet me go back up here,\nwe'll grab our host list here, and\n\n352\n00:18:50.840 --> 00:18:53.290\nwe called it commented\nif I'm not mistaken.\n\n353\n00:18:54.480 --> 00:18:55.800\nYeah, there we go, let's get rid of that.\n\n354\n00:18:55.800 --> 00:19:00.160\nLet's see if that works and\nthere we go, yeah, it sure does.\n\n355\n00:19:00.160 --> 00:19:02.850\nSo, we all learned something new today.\n\n356\n00:19:02.850 --> 00:19:07.430\nIf you want to put a comment in, just use\nthe hash and put your comment after that.\n\n357\n00:19:07.430 --> 00:19:10.390\nIt's not going to interpret\nanything after the hash.\n\n358\n00:19:10.390 --> 00:19:13.220\nIt'll just run the scan on\nthe IP address to the host names\n\n359\n00:19:13.220 --> 00:19:15.670\nthat you have inside of\nyour host list files.\n\n360\n00:19:15.670 --> 00:19:19.980\nSo very, very handy for\nus to be able to scan things that we want.\n\n361\n00:19:19.980 --> 00:19:22.470\nWe know this is a list of\ntargets that I'm looking for.\n\n362\n00:19:22.470 --> 00:19:25.650\nOr I know this is a list of\ntargets I don't want to scan.\n\n363\n00:19:25.650 --> 00:19:27.180\nVery simply done.\n\n364\n00:19:27.180 --> 00:19:28.150\n>> Yeah, that's a great way.\n\n365\n00:19:28.150 --> 00:19:31.046\nIn fact, I was thinking of\na scenario where I could use,\n\n366\n00:19:31.046 --> 00:19:34.745\nthe way I set up my machines is I\ntypically put the clients on the lower end\n\n367\n00:19:34.745 --> 00:19:38.220\nof the range and I put all the servers\non the higher end of the range.\n\n368\n00:19:38.220 --> 00:19:41.970\nSo it's nice to know that you don't have\nto, even though this is fairly quick,\n\n369\n00:19:41.970 --> 00:19:46.710\nI mean, within seconds it\nwent through 255 addresses.\n\n370\n00:19:46.710 --> 00:19:50.320\nBut I can only imagine that if you've got\nmultiple machines and it's populated,\n\n371\n00:19:50.320 --> 00:19:53.460\nprobably take a little bit longer cuz\nyou've got more information coming back as\n\n372\n00:19:53.460 --> 00:19:54.340\nports are opened.\n\n373\n00:19:54.340 --> 00:19:55.110\nBut it's nice to say,\n\n374\n00:19:55.110 --> 00:19:58.880\nokay, maybe according to my architecture,\nI just want to scan my clients.\n\n375\n00:19:58.880 --> 00:20:01.570\nOr maybe I want to scan my servers,\nso really good information.\n\n376\n00:20:01.570 --> 00:20:03.610\nAnd then to be able to exclude one.\n\n377\n00:20:03.610 --> 00:20:06.940\nMaybe we've got security purposes,\nmaybe we've got a policy that says\n\n378\n00:20:06.940 --> 00:20:10.700\ndon't run any scans against\nthis specific machine.\n\n379\n00:20:10.700 --> 00:20:12.440\nThe fact that you can keep that out there.\n\n380\n00:20:12.440 --> 00:20:15.740\nAll right, Dan, so great information,\nand what do we have up next?\n\n381\n00:20:15.740 --> 00:20:18.870\n>> All right, so now we've come\nto the portion of our proceedings\n\n382\n00:20:18.870 --> 00:20:22.230\nwhere we get into a little more,\nit's not Nmap.\n\n383\n00:20:22.230 --> 00:20:23.030\nYou're thinking to yourself,\n\n384\n00:20:23.030 --> 00:20:27.160\nokay, why would we talk about not\nNmap when we're doing an Nmap show?\n\n385\n00:20:27.160 --> 00:20:29.810\nWell I'm glad you asked because\nthat's a very insightful thing for\n\n386\n00:20:29.810 --> 00:20:35.150\nyou to wonder and ponder about, and\nthe reason is because verification, right?\n\n387\n00:20:35.150 --> 00:20:39.260\nWe're going back to the idea that we\nwant to make sure that we are scanning\n\n388\n00:20:39.260 --> 00:20:42.520\nonly the machines that we have\nauthorization for, right?\n\n389\n00:20:42.520 --> 00:20:46.110\nIf we don't have authorization\nwhen we start scanning machines,\n\n390\n00:20:46.110 --> 00:20:47.900\nyou could find yourself\nin a little hot water.\n\n391\n00:20:47.900 --> 00:20:52.420\nAnd there's stories upon stories that\nI've heard, stories on the Internet\n\n392\n00:20:52.420 --> 00:20:56.510\nthat you'll read about, when it comes to\ndoing things like penetration testing or\n\n393\n00:20:56.510 --> 00:20:59.550\njust internal security scans.\n\n394\n00:20:59.550 --> 00:21:02.760\nThat you can get in trouble by\naccidentally scanning somebody that you\n\n395\n00:21:02.760 --> 00:21:04.670\ndon't have authorization for.\n\n396\n00:21:04.670 --> 00:21:06.610\nYou never know who's gonna\ntake exception to this.\n\n397\n00:21:06.610 --> 00:21:11.320\nYou never know what local law is in effect\nthat they're going to try to exploit to\n\n398\n00:21:11.320 --> 00:21:13.580\nrun you down the rail a little bit so\n\n399\n00:21:13.580 --> 00:21:17.500\nwe wanna make sure that what we're\nscanning is what we have authorization to.\n\n400\n00:21:17.500 --> 00:21:20.420\nAll of that being said, how do we do that?\n\n401\n00:21:20.420 --> 00:21:21.800\nHow do we make sure?\n\n402\n00:21:21.800 --> 00:21:27.250\nWell, doesn't my contract with the person\nthat has hired me to be a pen tester,\n\n403\n00:21:27.250 --> 00:21:29.350\ndoesn't that give me authorization\nto scan their networks?\n\n404\n00:21:29.350 --> 00:21:31.190\nYes, yes it does.\n\n405\n00:21:31.190 --> 00:21:33.260\nBut what you have to be aware of,\n\n406\n00:21:33.260 --> 00:21:37.600\nwhat you have to keep in mind is,\nwe're human, we make mistakes.\n\n407\n00:21:37.600 --> 00:21:42.419\nWhat if they gave you a block of IPs and\nthey said,\n\n408\n00:21:42.419 --> 00:21:47.475\nyeah, we've got this block of IPs,\nthere's just\n\n409\n00:21:47.475 --> 00:21:52.430\ngonna be 221.135.7.6 through 15.\n\n410\n00:21:52.430 --> 00:21:56.780\nThat's our IP block, but\nthey really have it through 14,\n\n411\n00:21:56.780 --> 00:21:58.930\nand somebody just made a mistake.\n\n412\n00:21:58.930 --> 00:22:01.370\nYou start scanning that 15th,\nthat's not theirs.\n\n413\n00:22:01.370 --> 00:22:04.720\nI don't care what contract you've signed,\nyou do not have authorization.\n\n414\n00:22:04.720 --> 00:22:08.870\nThey don't have the authorization\nto give you authorization to scan\n\n415\n00:22:08.870 --> 00:22:10.220\nthat person's IP address.\n\n416\n00:22:10.220 --> 00:22:15.190\nSo you have to verify that all the IP\naddresses that you have, that you've\n\n417\n00:22:15.190 --> 00:22:18.900\nbeen hired to scan, maybe these aren't\nyours, that you don't make a mistake.\n\n418\n00:22:18.900 --> 00:22:19.600\nHow do we do that?\n\n419\n00:22:19.600 --> 00:22:20.790\nWell, a lot of times,\nwhen you're scanning,\n\n420\n00:22:20.790 --> 00:22:22.140\nyou're scanning from the outside.\n\n421\n00:22:22.140 --> 00:22:24.100\nYou're scanning over the Internet.\n\n422\n00:22:24.100 --> 00:22:25.980\nYou're not doing an internal scan.\n\n423\n00:22:25.980 --> 00:22:29.230\nThis is, typically,\npenetration testing, right?\n\n424\n00:22:29.230 --> 00:22:30.640\nThat's what we're talking about here.\n\n425\n00:22:30.640 --> 00:22:33.491\nInternally, you're less\nlikely to make this mistake.\n\n426\n00:22:33.491 --> 00:22:36.952\nIt still can happen so you still should\nverify, but you're more likely to do this\n\n427\n00:22:36.952 --> 00:22:39.050\nas a penetration tester\ncoming from the outside in.\n\n428\n00:22:39.050 --> 00:22:41.110\nYou're going over the public networks,\nright?\n\n429\n00:22:42.110 --> 00:22:43.200\nSo what do we do?\n\n430\n00:22:43.200 --> 00:22:46.650\nWell, A, we do have a list of IP addresses\nthat they may have given you saying,\n\n431\n00:22:46.650 --> 00:22:48.830\nhere are the IPs we want you to scan.\n\n432\n00:22:48.830 --> 00:22:51.360\nAnd that's great, but\nwe've gotta verify that.\n\n433\n00:22:51.360 --> 00:22:53.850\nHow do we do that?\nWe do that through DNS.\n\n434\n00:22:53.850 --> 00:22:56.510\nIt's a very handy way to make sure\n\n435\n00:22:56.510 --> 00:23:00.540\nthat you are actually scanning an IP\nblock that belongs to these people.\n\n436\n00:23:00.540 --> 00:23:04.900\nA great way to start is a who is search.\n\n437\n00:23:04.900 --> 00:23:07.550\nAnd if you've never done a who is search,\nit's very simple.\n\n438\n00:23:07.550 --> 00:23:12.735\nYou can go to Network Solutions,\nthe websites like that,\n\n439\n00:23:12.735 --> 00:23:18.560\nGoDaddy.com, they all have the ability to\nsearch and see if somebody owns a domain.\n\n440\n00:23:18.560 --> 00:23:23.490\nAnd if they do, what IP addresses\nare associated with said domain, right?\n\n441\n00:23:23.490 --> 00:23:25.610\nSo that's a really good place to start.\n\n442\n00:23:25.610 --> 00:23:26.998\nWhat is their IP block?\n\n443\n00:23:26.998 --> 00:23:31.100\nThere's companies like ARI and\nErin and ICan,\n\n444\n00:23:31.100 --> 00:23:35.420\nall these other alphabet soups that I\ncan't hardly ever remember the names for,\n\n445\n00:23:36.570 --> 00:23:41.300\nbut what they do is they're\nbasically the authorities over IPs.\n\n446\n00:23:41.300 --> 00:23:44.078\nWho gets what,\nwho is registered for what, and\n\n447\n00:23:44.078 --> 00:23:47.139\ndoing a who is search is\ngoing to help you start that.\n\n448\n00:23:47.139 --> 00:23:53.143\nNow, because it's a practice\nby the bad guys to start here,\n\n449\n00:23:53.143 --> 00:23:57.855\nin recent years they have\nstarted cracking down\n\n450\n00:23:57.855 --> 00:24:02.828\na lot on using Things like\na WhoIs automated tool.\n\n451\n00:24:02.828 --> 00:24:06.720\nSo, like WhoIs, it's built in to\nthe Unix and Linux operating systems.\n\n452\n00:24:06.720 --> 00:24:12.130\nYou can jump into a terminal,\ntype in WhoIs and the name of a domain and\n\n453\n00:24:12.130 --> 00:24:15.610\nget some information about that,\nwhatever's available.\n\n454\n00:24:15.610 --> 00:24:17.420\nThey've started cracking down on that.\n\n455\n00:24:17.420 --> 00:24:21.190\nThey don't readily give that information\nout as they used to yesterday.\n\n456\n00:24:21.190 --> 00:24:24.680\nThe Internet was once a wonderful, safe\nplace where we could all play nicely and\n\n457\n00:24:24.680 --> 00:24:29.110\nhold each other's hands and sing Kumbaya,\nbut now it is a land of death and\n\n458\n00:24:29.110 --> 00:24:31.650\ndestruction when it comes to\nthe black hats out there.\n\n459\n00:24:31.650 --> 00:24:37.600\nThey are constantly working and\nwe are constantly having to change\n\n460\n00:24:37.600 --> 00:24:41.810\nour techniques and our policies, so that\nwe're not just giving it away any more.\n\n461\n00:24:41.810 --> 00:24:43.360\nSo, this is something you might run into.\n\n462\n00:24:43.360 --> 00:24:45.490\nSo, run a WhoIs scan, very simple.\n\n463\n00:24:45.490 --> 00:24:47.580\nI can actually show you, probably.\n\n464\n00:24:48.730 --> 00:24:51.400\nJust go WhoIs, like so.\n\n465\n00:24:51.400 --> 00:24:55.580\nNotice it gives me some options here.\n\n466\n00:24:55.580 --> 00:25:01.555\nIf I wanted to do WhoIs ITPro, ITPro.TV?\n\n467\n00:25:01.555 --> 00:25:03.230\nYou'll notice I get this terms of use.\n\n468\n00:25:03.230 --> 00:25:04.272\nThis is actually the bottom.\n\n469\n00:25:04.272 --> 00:25:06.960\nThis is a legal disclaimer\n\n470\n00:25:06.960 --> 00:25:10.700\nthat it tells you about we don't\nlike really giving out information.\n\n471\n00:25:10.700 --> 00:25:13.720\nYes, I totally get that, but\nit did give me some information so\n\n472\n00:25:13.720 --> 00:25:17.135\nlike here at ITPro.TV we're not\nblocking some of this stuff.\n\n473\n00:25:17.135 --> 00:25:18.110\nWe're actually giving that out.\n\n474\n00:25:18.110 --> 00:25:23.345\nAnd you're seeing who we're registered\nwith, which is Tucows Domains Inc.\n\n475\n00:25:23.345 --> 00:25:24.995\nRight, that's who we're going through,\n\n476\n00:25:24.995 --> 00:25:26.920\nyou might even get some\nmore information out of us.\n\n477\n00:25:28.252 --> 00:25:30.460\nLike right here,\nthese are our DNS servers.\n\n478\n00:25:32.040 --> 00:25:32.846\nIt's who we get DNS through.\n\n479\n00:25:32.846 --> 00:25:35.560\nDoes that look familiar to\nyou right there, Mr. Wesley?\n\n480\n00:25:35.560 --> 00:25:37.031\n>> Yes, it does.\n\n481\n00:25:37.031 --> 00:25:38.540\n>> Who is that?\n\n482\n00:25:38.540 --> 00:25:40.400\n>> Is that Atlanta?\n\n483\n00:25:40.400 --> 00:25:42.881\n>> No, that is Amazon Web Services, AWS.\n\n484\n00:25:42.881 --> 00:25:43.903\n>> I can't see the AWS.\n\n485\n00:25:43.903 --> 00:25:46.913\n>> Here we go, for\nuse at home with the, there we go.\n\n486\n00:25:46.913 --> 00:25:48.022\n>> There we go.\n\n487\n00:25:48.022 --> 00:25:49.450\n[LAUGH]\n>> A little bit easier to see.\n\n488\n00:25:49.450 --> 00:25:50.636\nAWSDNS.\n\n489\n00:25:50.636 --> 00:25:51.226\n>> That's right.\n\n490\n00:25:51.226 --> 00:25:55.090\n>> That's Amazon Web Services,\nthat's what we use for our hosting.\n\n491\n00:25:55.090 --> 00:25:57.490\nThat's our cloud service provider.\n\n492\n00:25:57.490 --> 00:25:58.170\nSo what's going on?\n\n493\n00:25:58.170 --> 00:25:59.630\nAnd that's freely available.\n\n494\n00:25:59.630 --> 00:26:03.171\nThat gives me an idea, okay, well,\nnow I know, what is that, four or\n\n495\n00:26:03.171 --> 00:26:05.770\nfive different machines\nthat ITProTV is using.\n\n496\n00:26:05.770 --> 00:26:09.310\nSo I know, but\nit's not owned by us, it says AWS.\n\n497\n00:26:09.310 --> 00:26:11.350\nI can't scan that, right?\n\n498\n00:26:11.350 --> 00:26:14.230\nAmazon would have to give me\npermission to scan that if I wanted to,\n\n499\n00:26:14.230 --> 00:26:17.810\nand they're not gonna do that, so that's\nthe kinda thing we wanna be aware of.\n\n500\n00:26:17.810 --> 00:26:22.794\nAnd I'm gonna show you a few other\ntricks and tips to verify IPs.\n\n501\n00:26:22.794 --> 00:26:26.120\n>> And that's interesting, too,\ncuz I notice that register IANA ID, too.\n\n502\n00:26:26.120 --> 00:26:30.470\nSo you can see that this is a legitimate,\nthe provider there,\n\n503\n00:26:30.470 --> 00:26:32.960\nthe registrar there,\nyou can see their IANA Id and\n\n504\n00:26:32.960 --> 00:26:36.700\nthat goes right back up to the totem\npoll of the people who control this.\n\n505\n00:26:36.700 --> 00:26:37.460\n>> That's exactly right.\n\n506\n00:26:37.460 --> 00:26:39.560\n>> Yup.\n>> So, and this is a good place to start.\n\n507\n00:26:39.560 --> 00:26:42.180\nJust giving me a little bit more\ninformation about the company.\n\n508\n00:26:42.180 --> 00:26:48.910\nThis is us doing our research on,\nare we getting good hosts?\n\n509\n00:26:48.910 --> 00:26:51.250\nAre we actually going\nafter the right people?\n\n510\n00:26:51.250 --> 00:26:53.976\nI say going after, are we scanning\ncorrectly the people that have given\n\n511\n00:26:53.976 --> 00:26:55.395\nus authorization to actually scan?\n\n512\n00:26:55.395 --> 00:26:56.820\nSo, that's what we wanna start doing.\n\n513\n00:26:56.820 --> 00:26:57.671\nI'm gonna zoom out here.\n\n514\n00:26:57.671 --> 00:27:02.610\nI wanna show you guys a couple of\nother things, talking about DNS.\n\n515\n00:27:02.610 --> 00:27:06.740\nGood old fashioned NsLookup,\nbuilt right into your systems,\n\n516\n00:27:06.740 --> 00:27:07.520\nwhat can you do with that?\n\n517\n00:27:07.520 --> 00:27:09.080\nJust throw NsLookup at it here.\n\n518\n00:27:09.080 --> 00:27:13.710\nLet me, NsLookup,\ntakes me into interactive mode.\n\n519\n00:27:13.710 --> 00:27:17.643\nAnd I can start doing\nthings like ITPro.TV,\n\n520\n00:27:17.643 --> 00:27:21.270\nI can get information about ITPro.TV.\n\n521\n00:27:21.270 --> 00:27:27.410\nI've got an address here that's\nprobably the web server, right.\n\n522\n00:27:27.410 --> 00:27:29.530\nSo if they wanted me to scan that,\nif it wasn't AWS, obviously,\n\n523\n00:27:29.530 --> 00:27:34.900\nmaybe this was an internal,\nsomething in the DMZ.\n\n524\n00:27:34.900 --> 00:27:36.380\nWe've got a web server in the DMZ.\n\n525\n00:27:36.380 --> 00:27:37.790\nThere's its IP address.\n\n526\n00:27:37.790 --> 00:27:41.330\nI know that's legit and I have\nauthorization to scan it, there it is.\n\n527\n00:27:41.330 --> 00:27:46.236\nI can do something like set type = any.\n\n528\n00:27:46.236 --> 00:27:50.440\nThat will give me all the different type\nof records and not just the A record.\n\n529\n00:27:50.440 --> 00:27:55.337\nAnd you hit Return, it helps if\n\n530\n00:27:55.337 --> 00:28:00.247\nI do ITPro.TV again, ITPro.TV.\n\n531\n00:28:00.247 --> 00:28:01.700\nNotice I get a little more information.\n\n532\n00:28:01.700 --> 00:28:03.760\nThere's all our name servers.\n\n533\n00:28:03.760 --> 00:28:07.170\nI believe it'll even give us,\nthere's our mail Exchange right there.\n\n534\n00:28:07.170 --> 00:28:08.630\nSo what are we going through?\n\n535\n00:28:08.630 --> 00:28:14.000\nitpro-tv.mail.protection.outlook.com, so\nsome form of Microsoft.\n\n536\n00:28:14.000 --> 00:28:17.580\nI can tell you we're running Office 365,\nanother cloud provider.\n\n537\n00:28:17.580 --> 00:28:19.917\nSo I'm getting some\ninformation about the system.\n\n538\n00:28:19.917 --> 00:28:22.059\nThis is all the enumeration process.\n\n539\n00:28:22.059 --> 00:28:27.640\nNow what was cool about NsLookup is it\ndoes give me quite a bit of information.\n\n540\n00:28:27.640 --> 00:28:31.070\nIt used to be a whole lot more helpful.\n\n541\n00:28:31.070 --> 00:28:34.585\nThere was a command,\nyou used to be able to do ls-d and\n\n542\n00:28:34.585 --> 00:28:37.567\nit would do an entire zone transfer,\nright?\n\n543\n00:28:37.567 --> 00:28:40.590\n[LAUGH] Yeah,\nWes's face just went, my goodness!\n\n544\n00:28:40.590 --> 00:28:42.338\nRight, and for good reason.\n\n545\n00:28:42.338 --> 00:28:44.977\nWhat's the reason?\nWhy does Wes get all squinty faced when I\n\n546\n00:28:44.977 --> 00:28:46.590\nmention zone transfers?\n\n547\n00:28:46.590 --> 00:28:48.040\nWes, why do you get squinty faced?\n\n548\n00:28:48.040 --> 00:28:51.000\n>> You know, the first thing that\ncomes to mind is that file in itself,\n\n549\n00:28:51.000 --> 00:28:54.280\nif you're transferring it, especially over\nan unencrypted network, I mean, that's,\n\n550\n00:28:54.280 --> 00:28:57.210\nyou could map out every\nsingle host name and\n\n551\n00:28:57.210 --> 00:29:00.250\nIP address, basically map out\nyour entire infrastructure.\n\n552\n00:29:00.250 --> 00:29:03.164\nSo, yeah, when you said that\nI got a little cringe there.\n\n553\n00:29:03.164 --> 00:29:05.330\n[LAUGH]\n>> A chill ran up Wes's spine and\n\n554\n00:29:05.330 --> 00:29:09.100\nhe felt the cold hand of death\nclamor around him and for\n\n555\n00:29:09.100 --> 00:29:11.310\na good reason, exactly what he said.\n\n556\n00:29:11.310 --> 00:29:15.710\nAnd because of that reason, typically\nzone transfers are not allowed any more.\n\n557\n00:29:15.710 --> 00:29:19.338\nAgain, we used to live in a happy,\njoyful land of sharing, but\n\n558\n00:29:19.338 --> 00:29:20.916\nno longer does that exist.\n\n559\n00:29:20.916 --> 00:29:24.180\nDNS is a favorite target of hackers.\n\n560\n00:29:24.180 --> 00:29:27.550\nSo, a lot of times zone\ntransfers will not work.\n\n561\n00:29:27.550 --> 00:29:28.890\nDoes that mean we shouldn't do them, or\n\n562\n00:29:28.890 --> 00:29:33.400\nattempt to do them as penetration testers,\nor doing a security audit internally?\n\n563\n00:29:33.400 --> 00:29:35.620\nNo, we should still attempt to do that.\n\n564\n00:29:35.620 --> 00:29:36.580\nWhy do you ask?\n\n565\n00:29:36.580 --> 00:29:38.110\nWhy should we attempt to do that?\n\n566\n00:29:38.110 --> 00:29:41.120\nBecause what happens if\nyou do a zone transfer and\n\n567\n00:29:41.120 --> 00:29:44.170\nyou'll get the zone file,\nyou'll get the entire zone transfer.\n\n568\n00:29:44.170 --> 00:29:46.680\nWell, now you know,\nI need to stop doing that, right?\n\n569\n00:29:46.680 --> 00:29:51.590\nI need to tell these people you have\na possible exploitable problem.\n\n570\n00:29:51.590 --> 00:29:53.420\nAnd again we're not talking NMAP here, but\n\n571\n00:29:53.420 --> 00:29:57.120\nyou're typically doing these things\nin conjunction with each other.\n\n572\n00:29:57.120 --> 00:30:00.180\nSo I do wanna show you how\nto do a zone transfer.\n\n573\n00:30:00.180 --> 00:30:04.455\nWe're gonna abandon NsLookup here,\nso let me get out of there.\n\n574\n00:30:04.455 --> 00:30:07.840\nLet me bring the screen up a little bit.\n\n575\n00:30:07.840 --> 00:30:11.990\nWe're gonna use a couple utilities that\nare usually built into the Linux, Unix,\n\n576\n00:30:11.990 --> 00:30:13.540\nand Mac environments, okay?\n\n577\n00:30:13.540 --> 00:30:18.680\nSo one of my favorite ones is\na word that I go with first, host.\n\n578\n00:30:18.680 --> 00:30:22.950\nSo if you just do host, and\nyou get some actual output.\n\n579\n00:30:22.950 --> 00:30:25.800\nIt doesn't say command not found,\nor something to that favor,\n\n580\n00:30:25.800 --> 00:30:29.830\nyou have host installed on your system,\nand you can do something like this.\n\n581\n00:30:29.830 --> 00:30:32.300\nBefore I get too far into this, and\nI know we're running short on time.\n\n582\n00:30:32.300 --> 00:30:33.810\nWe're almost done here.\n\n583\n00:30:33.810 --> 00:30:35.911\nI'll only go over 20 minutes tops.\n\n584\n00:30:35.911 --> 00:30:41.710\n[LAUGH] If I go to Firefox,\nI've brought up this DigiNinja site.\n\n585\n00:30:41.710 --> 00:30:43.270\nVery cool site, this person has,\n\n586\n00:30:43.270 --> 00:30:47.440\nobviously they're security-related,\nsomething about security, it's a blog.\n\n587\n00:30:47.440 --> 00:30:52.150\nI found this very helpful when talking\nabout zone transfers because this person\n\n588\n00:30:52.150 --> 00:30:56.950\nhas done the world a favor for people who\nare trying to learn these techniques and\n\n589\n00:30:56.950 --> 00:31:04.257\nhas actually created this,\nright here, zonetransfer.me.\n\n590\n00:31:04.257 --> 00:31:07.230\nIt will actually give you\na full zone transfer.\n\n591\n00:31:07.230 --> 00:31:09.680\nSo that you can see what this\nkinda thing looks like, and\n\n592\n00:31:09.680 --> 00:31:11.180\nif you read this article ,it's fantastic.\n\n593\n00:31:11.180 --> 00:31:13.880\nI'll make sure the link\nis in the show notes.\n\n594\n00:31:13.880 --> 00:31:17.630\nThat gives you a big breakdown on\nhow to use things like host and\n\n595\n00:31:17.630 --> 00:31:18.370\nwe're gonna look at dig.\n\n596\n00:31:18.370 --> 00:31:21.610\nAnd you see they got dig up here,\nand what's going on with that.\n\n597\n00:31:21.610 --> 00:31:27.270\nSo if we wanna do a zone transfer,\ngo check out this site.\n\n598\n00:31:27.270 --> 00:31:28.730\nIt has everything, just about,\n\n599\n00:31:28.730 --> 00:31:32.180\nyou'd ever wanna know about doing\nzone transfers using these tools.\n\n600\n00:31:32.180 --> 00:31:36.260\nAnd really, all I want you to know is,\nquickly, how do I do this so\n\n601\n00:31:36.260 --> 00:31:39.780\nthat I can verify my host and\nmy IPs and everything like that.\n\n602\n00:31:39.780 --> 00:31:41.430\nSo check that out.\n\n603\n00:31:41.430 --> 00:31:44.730\nSo I'm going to use his\nsystem as that example, so\n\n604\n00:31:44.730 --> 00:31:46.200\nI just wanted to point that out.\n\n605\n00:31:46.200 --> 00:31:47.636\nSo let's see here,\nwe're gonna start with host.\n\n606\n00:31:47.636 --> 00:31:51.240\nWe're going to say host-t,\nthat letting you know I wanna do,\n\n607\n00:31:51.240 --> 00:31:54.620\nI actually forget what -t\ndoes off the top of my head.\n\n608\n00:31:54.620 --> 00:31:55.630\nI just do it so often.\n\n609\n00:31:55.630 --> 00:31:57.992\nYou ever do that, Wes?\nYou just forget, why do I do that?\n\n610\n00:31:57.992 --> 00:31:59.580\nI don't know, cuz I do it.\n\n611\n00:31:59.580 --> 00:32:01.491\nBut you could do a man host and\n\n612\n00:32:01.491 --> 00:32:05.404\nIt'll tell you actually my\nguess is probably right here.\n\n613\n00:32:05.404 --> 00:32:10.028\nSpecifies the query type so\nthat's what we're looking for.\n\n614\n00:32:10.028 --> 00:32:13.736\nSo I'm gonna do host -t\nspecify the type of query and\n\n615\n00:32:13.736 --> 00:32:18.217\nnow it's making sense because now\nwhat you have to add is axfr.\n\n616\n00:32:18.217 --> 00:32:24.090\nYeah I believe axfr,\nthis is the type of scan we're doing.\n\n617\n00:32:24.090 --> 00:32:27.800\nThis is in the RFC's for\nDNS and doing zone transfers.\n\n618\n00:32:27.800 --> 00:32:31.600\nThis is the type of record\nlookup that we wanna do so\n\n619\n00:32:31.600 --> 00:32:33.080\nthat's why we're throwing in out there.\n\n620\n00:32:33.080 --> 00:32:34.890\nThis is a full zone transfer.\n\n621\n00:32:34.890 --> 00:32:42.040\nAnd then we give it the actual host that\nwe want to get the zone transfer for.\n\n622\n00:32:42.040 --> 00:32:44.360\nSo if it was ITPro.tv,\nthat's what we put in.\n\n623\n00:32:44.360 --> 00:32:48.360\nFor this I'm gonna use just because it\ndoes give me a full zone transfer, and\n\n624\n00:32:48.360 --> 00:32:53.360\nit is zonetransfer.me.\n\n625\n00:32:53.360 --> 00:32:56.238\nAnd then we give the DNS\nserver that we wanna use.\n\n626\n00:32:56.238 --> 00:33:00.492\nAnd he is that site,\nthat digi ninja has so\n\n627\n00:33:00.492 --> 00:33:04.018\ngraciously given us that as well,\n\n628\n00:33:04.018 --> 00:33:08.166\nwhich is nsztml.digi.ninja like so.\n\n629\n00:33:08.166 --> 00:33:09.526\nAnd I think it has a period on the end.\n\n630\n00:33:09.526 --> 00:33:10.566\nWe'll see if that works.\n\n631\n00:33:10.566 --> 00:33:12.297\nConnection refused.\n\n632\n00:33:12.297 --> 00:33:13.562\nI probably added too much.\n\n633\n00:33:13.562 --> 00:33:16.560\nAll right, so\nwe're getting connection refused.\n\n634\n00:33:17.580 --> 00:33:20.060\nMy, am I missing anything?\n\n635\n00:33:20.060 --> 00:33:23.275\nJust easiest if I maybe I got the wrong.\n\n636\n00:33:23.275 --> 00:33:27.470\nmszt.ml.digi.ninja.\n\n637\n00:33:27.470 --> 00:33:30.580\nWell this is maybe they\nhave it closed down for\n\n638\n00:33:30.580 --> 00:33:33.000\nright now maybe its only\nrunning certain times.\n\n639\n00:33:33.000 --> 00:33:35.080\nNormally though I did this earlier.\n\n640\n00:33:35.080 --> 00:33:36.890\nCame back with his own thoughts, gigantic.\n\n641\n00:33:36.890 --> 00:33:37.630\nLet's try another one.\n\n642\n00:33:37.630 --> 00:33:38.740\nLet's use dig.\n\n643\n00:33:38.740 --> 00:33:40.130\nThe host, that's how would you do it.\n\n644\n00:33:40.130 --> 00:33:40.760\nLet's try dig.\n\n645\n00:33:40.760 --> 00:33:45.520\nDig tends to be the most popular\nway in which you will do this, so\n\n646\n00:33:45.520 --> 00:33:49.460\nI like dig the best, I'm not as familiar\nwith host, I don't use host a whole lot,\n\n647\n00:33:49.460 --> 00:33:51.870\nonly when I don't have dig available and\nhost is available.\n\n648\n00:33:51.870 --> 00:33:54.060\nSo that's why I wanted\nto show you all three.\n\n649\n00:33:54.060 --> 00:34:00.500\nSo let's try dig, let's see dig,\nand we'll do the axfr like so.\n\n650\n00:34:00.500 --> 00:34:05.970\nAnd then this time we do @\nwhat the NDS server is and\n\n651\n00:34:05.970 --> 00:34:11.510\nthat is nsztml.digi.ninja.\n\n652\n00:34:11.510 --> 00:34:12.390\nDid I spell ninja wrong?\n\n653\n00:34:12.390 --> 00:34:18.725\nNo I didn't, that's okay were good to\ngo there and then zonetransfer.me.\n\n654\n00:34:19.750 --> 00:34:24.840\nFingers crossed, yeah so it looks\nlike they actually closed it down for\n\n655\n00:34:24.840 --> 00:34:27.320\nthe day, maybe on lunch for\na certain amount of time.\n\n656\n00:34:27.320 --> 00:34:33.500\nBut I was able to do a full zonetransfer\nusing both dig and host earlier today.\n\n657\n00:34:33.500 --> 00:34:35.340\nSo, just if you're testing this out,\n\n658\n00:34:35.340 --> 00:34:37.230\nyou're trying this,\ntry throughout the day.\n\n659\n00:34:37.230 --> 00:34:40.030\nIf you're not getting connection,\nwho knows what's going on.\n\n660\n00:34:40.030 --> 00:34:41.230\nIt's a free service.\n\n661\n00:34:41.230 --> 00:34:43.880\nI was hoping it would work for\nus here but it didn't.\n\n662\n00:34:43.880 --> 00:34:46.830\nIt's not a big deal but that's how you\nwould do it and it's a good thing, right?\n\n663\n00:34:46.830 --> 00:34:50.600\nIt's showing us this is normally what\nwe're gonna see, connection refused.\n\n664\n00:34:50.600 --> 00:34:52.010\nI don't wanna give you a zone transfer.\n\n665\n00:34:52.010 --> 00:34:54.590\nThat's normally how you're gonna see this.\n\n666\n00:34:54.590 --> 00:34:57.210\nBut that one time you're\ndoing a pen test or\n\n667\n00:34:57.210 --> 00:35:02.260\ndoing a scan and it comes back with\nthis laundry list of different things.\n\n668\n00:35:02.260 --> 00:35:04.060\nActually we can go to their site.\n\n669\n00:35:04.060 --> 00:35:06.420\nThey kinda show you the output there.\n\n670\n00:35:06.420 --> 00:35:07.370\nThere we go.\n\n671\n00:35:07.370 --> 00:35:09.150\nThat's typically what you'll see.\n\n672\n00:35:09.150 --> 00:35:12.186\nYou'll notice this is giving\nup the ghost right here,\n\n673\n00:35:12.186 --> 00:35:14.438\nthis is everything about this network.\n\n674\n00:35:14.438 --> 00:35:19.704\nWe're seeing IP addresses and also actual\nhost names, so I can do a reverse DNS,\n\n675\n00:35:19.704 --> 00:35:24.128\nget IP addresses for the host names\nthat aren't being reverse DNS.\n\n676\n00:35:24.128 --> 00:35:27.488\nRight here through dig, very,\nvery, very scary again,\n\n677\n00:35:27.488 --> 00:35:30.782\nthat's why Wes got a little\ncrazy there in the face region\n\n678\n00:35:30.782 --> 00:35:33.958\nwhen he heard me say we're\ngoing to do a zone transfer.\n\n679\n00:35:33.958 --> 00:35:39.760\nTypically that's what you will see\nwhen a zone transfer is successful.\n\n680\n00:35:39.760 --> 00:35:42.230\nBut right now they must have it shut\ndown for whatever strange reason.\n\n681\n00:35:42.230 --> 00:35:43.290\nMaybe they're doing maintenance.\n\n682\n00:35:43.290 --> 00:35:45.830\nOr maybe they're getting\ntoo many hits today.\n\n683\n00:35:45.830 --> 00:35:47.530\nYeah, that's kind of\nmaybe they got attacked.\n\n684\n00:35:47.530 --> 00:35:48.540\n>> Yeah, that was my first thought.\n\n685\n00:35:48.540 --> 00:35:50.750\n>> [LAUGH]\n>> Is maybe they're regulating it so\n\n686\n00:35:50.750 --> 00:35:52.860\nthey don't have a denial,\na distributed denial with service.\n\n687\n00:35:52.860 --> 00:35:54.910\nAll of that information\nbouncing off their servers.\n\n688\n00:35:54.910 --> 00:35:58.990\nMaybe they are closed for\nnon or I should say.\n\n689\n00:35:58.990 --> 00:36:02.000\nUnexplained reasons,\nunplanned reasons so, for sure, so\n\n690\n00:36:02.000 --> 00:36:05.700\nyeah that's a lot of information\nthat you gotta be careful with.\n\n691\n00:36:05.700 --> 00:36:09.350\nNow, I know we're not going\ninto DNS security and all, but\n\n692\n00:36:09.350 --> 00:36:13.480\nthat information you could definitely\nstage something like a DNS stage attack or\n\n693\n00:36:13.480 --> 00:36:15.560\na DNS hijacking attack.\n\n694\n00:36:15.560 --> 00:36:16.748\nAll right, great information, man.\n\n695\n00:36:16.748 --> 00:36:18.860\nAnd I know you got a couple left for\nus, right.\n\n696\n00:36:18.860 --> 00:36:20.975\n>> Yeah, I'm gonna shotgun\nthem out here real quick for\n\n697\n00:36:20.975 --> 00:36:22.527\nus just so we can get it in this episode.\n\n698\n00:36:22.527 --> 00:36:24.207\nBecause it's not gonna fit anywhere else,\nand\n\n699\n00:36:24.207 --> 00:36:26.460\nit goes perfectly with\nwhat we're talking about.\n\n700\n00:36:26.460 --> 00:36:29.840\nNmap actually will do some DNS work for\nyou.\n\n701\n00:36:29.840 --> 00:36:35.520\nIt works with your resolver cache,\nit'll work with your own DNS servers.\n\n702\n00:36:35.520 --> 00:36:39.310\nIt always does a DNS reverse lookup\nfrom any host that it finds and\n\n703\n00:36:39.310 --> 00:36:43.650\nstarts to scan, does that to verify its IP\nto all the things that we want it to do,\n\n704\n00:36:43.650 --> 00:36:45.830\ngive me that information\nabout this machine.\n\n705\n00:36:45.830 --> 00:36:47.190\nSo, I just wanted you to be aware of that.\n\n706\n00:36:47.190 --> 00:36:51.460\nLet's see here, does DNS on every lookup,\n\n707\n00:36:51.460 --> 00:36:56.550\nwe can turn discovery off,\nwhere it does like a ping scan, and\n\n708\n00:36:56.550 --> 00:37:02.530\nthen it'll do resolution for only the IPs\nthat it actually finds in the scan.\n\n709\n00:37:02.530 --> 00:37:04.000\nWhat else do we want to know?\n\n710\n00:37:04.000 --> 00:37:07.580\nThere are four options for\ncontrolling resolution.\n\n711\n00:37:07.580 --> 00:37:12.170\nA dash N, so\nif you just have N map dash lowercase N,\n\n712\n00:37:12.170 --> 00:37:14.478\nactually let's jump to the screen so\nyou can see it a little easier.\n\n713\n00:37:14.478 --> 00:37:18.030\nZoom in down there.\n\n714\n00:37:18.030 --> 00:37:21.090\nSo I did nmap -n like so.\n\n715\n00:37:21.090 --> 00:37:24.320\nWhat that does is this\nsays do no DNS resolution.\n\n716\n00:37:24.320 --> 00:37:26.840\nAnd it does that to it'll\nspeed things up immensely.\n\n717\n00:37:26.840 --> 00:37:28.800\nSo if I'm doing a large scan,\n\n718\n00:37:28.800 --> 00:37:32.980\nmaybe I don't wanna do DNA resolution\njust because I know it's good IPs, right?\n\n719\n00:37:32.980 --> 00:37:34.830\nI just want it to do the scan.\n\n720\n00:37:34.830 --> 00:37:36.530\nLeave DNS resolution out of it,\n\n721\n00:37:36.530 --> 00:37:40.250\nthat -n will help you with that turn,\nthat resolution off.\n\n722\n00:37:40.250 --> 00:37:47.820\nIf we do -R like so, a capital R, It will\ndo DNS resolution for all targets, right?\n\n723\n00:37:47.820 --> 00:37:51.190\nIt will make sure that it does do\nDNS resolution for the targets.\n\n724\n00:37:51.190 --> 00:37:54.230\nSo if for whatever reason maybe\nyou've changed the profile,\n\n725\n00:37:54.230 --> 00:37:57.440\nto change the default way in which\nit's working, maybe using zenmap,\n\n726\n00:37:57.440 --> 00:37:59.780\nsomething to that effect,\nyou can have a dash r, get that back.\n\n727\n00:38:01.380 --> 00:38:02.190\nWhat else do we have?\n\n728\n00:38:02.190 --> 00:38:04.100\nUse your own system DNS.\n\n729\n00:38:04.100 --> 00:38:10.820\nYou can do that by just\nsaying --system-dns, like so.\n\n730\n00:38:10.820 --> 00:38:14.580\nAnd then, whatever your DNS name,\nmaybe it's 192.168.\n\n731\n00:38:14.580 --> 00:38:17.020\nWhatever it is, throw that on there.\n\n732\n00:38:17.020 --> 00:38:20.680\nWell, the last one is\nchoose your DNS server.\n\n733\n00:38:20.680 --> 00:38:22.990\nSo if I,\nkind of like what we're doing with dig,\n\n734\n00:38:22.990 --> 00:38:27.140\nwhere we were specifying what\ndns server we wanted to use.\n\n735\n00:38:27.140 --> 00:38:31.550\nI can do DNS-servers, and then say\n\n736\n00:38:32.640 --> 00:38:36.540\nthis server and next server, and just give\nit a list of servers that I wanted to use.\n\n737\n00:38:36.540 --> 00:38:38.100\nWhy wouldn't I want to do that?\n\n738\n00:38:38.100 --> 00:38:41.670\nWell one DNS server might illicit\nmore information than another, or\n\n739\n00:38:41.670 --> 00:38:43.050\njust different information.\n\n740\n00:38:43.050 --> 00:38:46.740\nSo sometimes you want to pin point\nwhat DNS servers you're using and\n\n741\n00:38:46.740 --> 00:38:53.000\ninmap is capable of doing a lot of good\nDNS searching and resolution for user.\n\n742\n00:38:53.000 --> 00:38:56.870\nThat being said,\nI know it's a lot to digest,\n\n743\n00:38:56.870 --> 00:38:59.710\nit's a lot to work with but\nyou do want to verify those hosts.\n\n744\n00:38:59.710 --> 00:39:03.560\nYou do want to make sure you're scanning\nstuff that you actually want to scan.\n\n745\n00:39:03.560 --> 00:39:04.380\nThere you go.\n\n746\n00:39:04.380 --> 00:39:04.930\n>> All right Dan.\n\n747\n00:39:04.930 --> 00:39:06.450\nThank you for that foundational knowledge.\n\n748\n00:39:06.450 --> 00:39:08.540\nI know it's a lot of information but\nyou know what,\n\n749\n00:39:08.540 --> 00:39:11.100\nwhen you start any new\ntechnology you need to learn it.\n\n750\n00:39:11.100 --> 00:39:12.160\nYou need a good foundation.\n\n751\n00:39:12.160 --> 00:39:15.710\nBut we're gonna take this time to\nahead and sign out here at ITProTV.\n\n752\n00:39:15.710 --> 00:39:17.130\nI've been your host, Wes Bryan.\n\n753\n00:39:17.130 --> 00:39:17.960\n>> I'm Daniel Lowrie.\n\n754\n00:39:17.960 --> 00:39:19.028\n>> And we'll see you next time.\n\n755\n00:39:19.028 --> 00:39:27.900\n[MUSIC]\n\n",
          "vimeoId": "165935786"
        },
        {
          "description": "In this episode, Wes and Dan dive into host discovery with Nmap. They look at performing a ping sweep scan and explain what encompasses a default ping. They demonstrate scans that use ICMP ECHOs , ARP and TCP ACKs and SYN request packets to generate the information.",
          "length": "2002",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-3-1-host_discovery-050516-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-3-1-host_discovery-050516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-3-1-host_discovery-050516-1-sm.jpg",
          "title": "Host Discovery",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.994 --> 00:00:14.670\nWelcome back to another exciting\nepisode here at ITProTV.\n\n3\n00:00:14.670 --> 00:00:16.690\nI'm your host Wes Bryan.\n\n4\n00:00:16.690 --> 00:00:20.530\nAnd in today's episode, we're actually\nmoving through our Nmap series.\n\n5\n00:00:20.530 --> 00:00:23.440\nAnd joining me in the studio is\nnone other than Mr. Dan Lowrie.\n\n6\n00:00:23.440 --> 00:00:24.750\nDan, how you doing today sir?\n\n7\n00:00:24.750 --> 00:00:25.560\n>> Man, I'm doing great.\n\n8\n00:00:25.560 --> 00:00:26.920\nThanks for having me back on the show.\n\n9\n00:00:26.920 --> 00:00:30.710\nIt's always fun when I'm on this side\nof the camera other than the other.\n\n10\n00:00:30.710 --> 00:00:31.360\nI'm usually hosting.\n\n11\n00:00:31.360 --> 00:00:35.150\nBut this is one of the things that I've\nactually worked with in my life and,\n\n12\n00:00:35.150 --> 00:00:38.780\nhopefully I'm going to partake some\nof that knowledge into you, or\n\n13\n00:00:38.780 --> 00:00:41.110\nimpart some of that knowledge into you,\ncuz that's right.\n\n14\n00:00:41.110 --> 00:00:42.140\nWe're moving through nmap.\n\n15\n00:00:42.140 --> 00:00:44.090\nWe've covered some good ground so far.\n\n16\n00:00:44.090 --> 00:00:48.323\nSo if you've been watching this series,\nyou should be up to speed with\n\n17\n00:00:48.323 --> 00:00:53.231\ninstalling and even the basics of what's\ngoing on with how to actually do a scan.\n\n18\n00:00:53.231 --> 00:00:57.690\nNow, I do need to throw a bit of\nan addendum, a correction as it were.\n\n19\n00:00:57.690 --> 00:00:59.623\nAs I was going through today's show, and\n\n20\n00:00:59.623 --> 00:01:02.716\nI'd said in a previous episode\nthat version six, version seven,\n\n21\n00:01:02.716 --> 00:01:05.160\nyou're probably gonna get\nthe same kind of output.\n\n22\n00:01:05.160 --> 00:01:09.740\nI have found some differences where they\nhave changed throughout the versions.\n\n23\n00:01:09.740 --> 00:01:13.070\nI probably should've checked that\nchange log a little bit closer.\n\n24\n00:01:13.070 --> 00:01:16.280\nSo there might be some differences if\nyou're running an older version of Nmap.\n\n25\n00:01:16.280 --> 00:01:20.210\nI'm on the latest version, which is 7.12.\n\n26\n00:01:20.210 --> 00:01:24.190\nBut for the most part a lot the stuff\nstill works very similarly and\n\n27\n00:01:24.190 --> 00:01:28.070\nif not identically,\nit has an older function.\n\n28\n00:01:28.070 --> 00:01:30.910\nOr I'll try to mention them as\nwe go through it just to make\n\n29\n00:01:30.910 --> 00:01:34.010\nsure if you are using an older version\nyou're still there with us, right?\n\n30\n00:01:34.010 --> 00:01:36.580\nSo that being said what\nis today's episode about?\n\n31\n00:01:36.580 --> 00:01:40.910\nWell if you saw the lovely little\nsubtitles that we put on the screen\n\n32\n00:01:40.910 --> 00:01:43.240\nit is host discovery.\n\n33\n00:01:43.240 --> 00:01:44.990\nHost discovery is what\nwe're talking about.\n\n34\n00:01:44.990 --> 00:01:48.200\nSo what is that, what are we talking\nabout when we say host discovery,\n\n35\n00:01:48.200 --> 00:01:51.610\nwhat is it that I want you\nto know about that topic?\n\n36\n00:01:51.610 --> 00:01:56.430\nWell a, host discovery is just that we're\ndiscovering a host, nodes, computers,\n\n37\n00:01:56.430 --> 00:02:01.370\nmachines, devices that our networked and\nare alive and kicking.\n\n38\n00:02:01.370 --> 00:02:05.320\nWe want to find out what those are and\nthat's, that's really the basic job of\n\n39\n00:02:05.320 --> 00:02:08.450\nnmap, or at least one of the major\nbasic jobs, let me put it that way.\n\n40\n00:02:08.450 --> 00:02:11.700\nOne of the major basic\njobs of why we use nmap.\n\n41\n00:02:11.700 --> 00:02:13.330\nI need to see what\nthe heck is on my network.\n\n42\n00:02:13.330 --> 00:02:19.120\nI need to verify that what I think is\non my network is what I'm finding,\n\n43\n00:02:19.120 --> 00:02:22.770\nnmap does a great job of that,\nhence the name network mapper.\n\n44\n00:02:22.770 --> 00:02:26.800\nAnd it was interesting, Wes and I were\njust talking about what we're going to go\n\n45\n00:02:26.800 --> 00:02:29.510\nthrough on today's show, and\nhe was talking about scanning, and\n\n46\n00:02:29.510 --> 00:02:32.240\nI was like, we're not even into\nscanning yet, to be honest with you.\n\n47\n00:02:32.240 --> 00:02:36.330\nWe are port scanning,\nenumeration further down, looking for\n\n48\n00:02:36.330 --> 00:02:38.650\nvulnerabilities, we're just finding hosts.\n\n49\n00:02:38.650 --> 00:02:40.280\nThat's what we're talking about so\n\n50\n00:02:40.280 --> 00:02:43.890\nwhen we say host discovery,\nthat is what we're learning to.\n\n51\n00:02:43.890 --> 00:02:46.810\n>> Dan, on of the things we were\ntalking about and this is what I\n\n52\n00:02:46.810 --> 00:02:51.000\njust can't wait to see if the fact that\nI was gonna hide my machine from you.\n\n53\n00:02:51.000 --> 00:02:54.230\nI've got a Windows machine and I was\nknow exactly how to hide it from Dan so\n\n54\n00:02:54.230 --> 00:02:55.270\nthat he can't find it.\n\n55\n00:02:55.270 --> 00:02:56.930\nWell how wrong was I?\n\n56\n00:02:56.930 --> 00:02:59.540\nSo Dan if we are gonna discover\nhosts where do we start?\n\n57\n00:02:59.540 --> 00:03:02.670\n>> Well with Nmap,\nthe great thing about Nmap and\n\n58\n00:03:02.670 --> 00:03:07.860\nI'll just have to put this out there for\nyou, it is a beast of a program.\n\n59\n00:03:07.860 --> 00:03:12.190\nYou are not going to hide from this thing.\n\n60\n00:03:12.190 --> 00:03:15.469\nI've seen some tricky stuff in my time,\nI'm not gonna lie ladies and gentlemen\n\n61\n00:03:17.310 --> 00:03:22.400\nNmap's ability to find what it is\nlooking for continues to increase.\n\n62\n00:03:22.400 --> 00:03:26.110\nAnd that's how I found out\nthat the newest version\n\n63\n00:03:26.110 --> 00:03:29.240\nis even more robust than\nthe previous version.\n\n64\n00:03:29.240 --> 00:03:32.410\nBecause all the firewalling I did\nto try to hide things from it\n\n65\n00:03:32.410 --> 00:03:34.580\nwas no longer working.\n\n66\n00:03:34.580 --> 00:03:41.100\nAs I read on a lovely forum, how do I\nhide my machines from being scanned?\n\n67\n00:03:41.100 --> 00:03:43.610\nOr at least being detected from Nmap?\n\n68\n00:03:43.610 --> 00:03:48.230\nWell, there's only one good way and\nthat is to unplug it from the system that\n\n69\n00:03:48.230 --> 00:03:52.360\nit doesn't have a blue cable in\nthe back,there's no Wi-Fi going on.\n\n70\n00:03:52.360 --> 00:03:55.580\nThat is the only surefire method for\n\n71\n00:03:55.580 --> 00:03:59.660\nthis thing to not find you, if you're out\nthere and actually alive and kicking.\n\n72\n00:03:59.660 --> 00:04:03.010\nBut typically, when we're talking\nabout host discovery, right?\n\n73\n00:04:03.010 --> 00:04:04.130\nForget Nmap, for a second.\n\n74\n00:04:04.130 --> 00:04:04.820\nWhat do we normally do?\n\n75\n00:04:04.820 --> 00:04:05.900\nWe run ping.\n\n76\n00:04:05.900 --> 00:04:11.270\nPing is that tried and true wonderful\nlittle program that most operating\n\n77\n00:04:11.270 --> 00:04:16.410\nsystems come bundled with that\nrelies on the ICMP echo request and\n\n78\n00:04:16.410 --> 00:04:22.320\nreplies for just that, to check\nthe connectivity between two hosts.\n\n79\n00:04:22.320 --> 00:04:25.940\nAnd we love it, I love it, I've used\nit since I've known about it, right?\n\n80\n00:04:25.940 --> 00:04:27.170\nSince I've been in the business.\n\n81\n00:04:27.170 --> 00:04:29.580\nI'm sure that if you've been in\nthe business for any stretch of time,\n\n82\n00:04:29.580 --> 00:04:33.480\nor if you have a home network, you've\nused ping, it's a great little utility.\n\n83\n00:04:33.480 --> 00:04:37.598\nBut we've learn that and you can find out\nwhat's on the network by using ping, and\n\n84\n00:04:37.598 --> 00:04:42.710\na lot of times, I think we were talking\nabout this as well, Windows machines, they\n\n85\n00:04:42.710 --> 00:04:47.240\ncome out of the gate when you fired up for\nthe first time, pin disabled, right?\n\n86\n00:04:47.240 --> 00:04:50.910\nIt's firewalled off, the Windows\nfirewall says nope not gonna allow that.\n\n87\n00:04:50.910 --> 00:04:55.230\nYou actually have to go through some steps\nto make sure that that is enabled, so\n\n88\n00:04:55.230 --> 00:04:57.770\nthat you can ping machines if you want to.\n\n89\n00:04:57.770 --> 00:05:01.480\nBecause they take the idea of, well,\npeople complain about security.\n\n90\n00:05:01.480 --> 00:05:05.030\nWe're gonna take a security stance and\nsay, no ping right out of the gate.\n\n91\n00:05:05.030 --> 00:05:08.320\nIf you want ping,\nyou have to expressively allow that.\n\n92\n00:05:08.320 --> 00:05:12.290\nSo, pings are being blocked more and\nmore often, and\n\n93\n00:05:12.290 --> 00:05:13.750\nwe see that even in internet sites.\n\n94\n00:05:13.750 --> 00:05:16.360\nThere are lots of websites that\nwill allow you to ping them, but\n\n95\n00:05:16.360 --> 00:05:18.310\nthere's a lot of websites that won't.\n\n96\n00:05:18.310 --> 00:05:20.450\nSo, what do I do, how do I, and\n\n97\n00:05:20.450 --> 00:05:24.930\nthat really brings us back to our point in\nNmap if I run a ping scan, which I can do.\n\n98\n00:05:24.930 --> 00:05:28.190\nI just wanna scan this IP range and\n\n99\n00:05:28.190 --> 00:05:32.490\ntell me every host you find if I\njust run Nmap by default, right?\n\n100\n00:05:32.490 --> 00:05:35.050\nJust Nmap and then give it an IP range,\n\n101\n00:05:35.050 --> 00:05:39.080\nit does a ping scan by default\ncuz it's looking for live hosts.\n\n102\n00:05:39.080 --> 00:05:42.520\nBecause what's the point of running\na scan against hosts that aren't live.\n\n103\n00:05:42.520 --> 00:05:44.000\nIt doesn't make any sense.\n\n104\n00:05:44.000 --> 00:05:47.830\nIt assumes that you are not blocking ping.\n\n105\n00:05:47.830 --> 00:05:50.080\nLooks throughout that\nrange of IP addresses,\n\n106\n00:05:50.080 --> 00:05:52.720\nfinds the ones that are live and\nthen starts its scan.\n\n107\n00:05:52.720 --> 00:05:53.720\nSo that's a default setting.\n\n108\n00:05:53.720 --> 00:05:56.240\nThat's how it works out of the gate.\n\n109\n00:05:56.240 --> 00:05:58.790\nBut sometimes that's not\nwhat we want it to do.\n\n110\n00:05:58.790 --> 00:06:00.000\nAnd why is that?\n\n111\n00:06:00.000 --> 00:06:01.720\nThat's the big question.\n\n112\n00:06:01.720 --> 00:06:03.820\nSo you might be thinking,\nwell, okay, you got me.\n\n113\n00:06:03.820 --> 00:06:04.780\nWhy is that?\n\n114\n00:06:04.780 --> 00:06:06.160\nBecause we're firewalling.\n\n115\n00:06:06.160 --> 00:06:10.670\nIf I'm running Windows operating systems\nand I've left that firewall enabled, well,\n\n116\n00:06:10.670 --> 00:06:11.750\nI'm not going to find that machine.\n\n117\n00:06:11.750 --> 00:06:15.870\nAnd if I'm just trying to enumerate\nwhat machines are on my system, or\n\n118\n00:06:15.870 --> 00:06:18.800\nin my environment,\nI'm not going to find it.\n\n119\n00:06:18.800 --> 00:06:22.500\nEven though if I know it's something like,\nI know there is\n\n120\n00:06:22.500 --> 00:06:25.710\na machine at 192168219.135,\nI know there's a machine live and\n\n121\n00:06:25.710 --> 00:06:28.390\nactive there,\nit's not showing up on my scan, why not?\n\n122\n00:06:28.390 --> 00:06:31.310\nThat's why, because I'm blocking ping.\n\n123\n00:06:31.310 --> 00:06:34.070\nSo we're going to as we\nget into host discovery.\n\n124\n00:06:34.070 --> 00:06:35.040\nNot that this won't work for you.\n\n125\n00:06:35.040 --> 00:06:37.440\nBut we're gonna show you\nthe multiple layers.\n\n126\n00:06:37.440 --> 00:06:39.511\nIt is a really multi-faceted,\n\n127\n00:06:39.511 --> 00:06:43.990\na multi-layered way in which you\nneed to learn to use Nmap so\n\n128\n00:06:43.990 --> 00:06:49.240\nthat you can discover all the hosts on\na network inside of an environment,\n\n129\n00:06:49.240 --> 00:06:51.520\nso that's what we're gonna\ntake a look at today.\n\n130\n00:06:51.520 --> 00:06:56.440\n>> So and, when you say ping sweeps, and\ndefaulting to ping sweeps, if it returns,\n\n131\n00:06:56.440 --> 00:06:59.720\nI don't wanna say false positives because\nthat's a little bit different topic.\n\n132\n00:06:59.720 --> 00:07:04.060\nBut you're not seeing the results,\nyou want, we can modify those defaults,\n\n133\n00:07:04.060 --> 00:07:06.770\nmaybe send out some so,\nsome other type of information.\n\n134\n00:07:06.770 --> 00:07:08.760\nMaybe gather a little bit\nmore information back.\n\n135\n00:07:08.760 --> 00:07:09.690\nIs that what we're looking at?\n\n136\n00:07:09.690 --> 00:07:12.520\n>> Yeah, that's exactly right,\nWes is in the right mind set.\n\n137\n00:07:12.520 --> 00:07:15.640\nWe're going to learn to modify\nthe way in which we use the map, and\n\n138\n00:07:15.640 --> 00:07:18.030\nwe're going to throw some\narguments out today so\n\n139\n00:07:18.030 --> 00:07:23.550\nwe can see beyond maybe even\nget past fire wall systems.\n\n140\n00:07:23.550 --> 00:07:26.900\nMaybe they have fire wall set\nin place to block ping but\n\n141\n00:07:26.900 --> 00:07:28.190\nI still need to be able to find them.\n\n142\n00:07:28.190 --> 00:07:30.530\nAnd especially if I'm doing some\nkind of penetration testing,\n\n143\n00:07:30.530 --> 00:07:33.280\nsecurity audits, things of that nature.\n\n144\n00:07:33.280 --> 00:07:36.550\nThey have put those security measures\nin place for a good reason but\n\n145\n00:07:36.550 --> 00:07:37.470\ncan hackers still find it?\n\n146\n00:07:37.470 --> 00:07:40.720\nCan the bad guys still get to that\neven though we've firewalled it?\n\n147\n00:07:40.720 --> 00:07:43.630\nAnd then do we need to re-look\nat our firewall rules,\n\n148\n00:07:43.630 --> 00:07:44.830\nmake them a little more robust?\n\n149\n00:07:44.830 --> 00:07:47.910\nMake them a little more strong like bull,\nright.\n\n150\n00:07:47.910 --> 00:07:49.510\nThat's what we got to take a look at.\n\n151\n00:07:49.510 --> 00:07:55.114\nSo let's, let me jump to my machine really\nquick and got the CLI up and running.\n\n152\n00:07:55.114 --> 00:07:59.573\nWhat we are going to do is run a standard\nend map scan against an IP range.\n\n153\n00:07:59.573 --> 00:08:00.931\nOkay, let's just do that.\n\n154\n00:08:00.931 --> 00:08:03.543\nSo let's just say end map against my.\n\n155\n00:08:03.543 --> 00:08:10.991\nMy good dreams there my 192.168.219.0/24.\n\n156\n00:08:10.991 --> 00:08:13.730\nAll right, so there is the range\nof IPs in which I wanna scan.\n\n157\n00:08:13.730 --> 00:08:17.530\nActually, I'm gonna throw a little\nargumentation here just to make it\n\n158\n00:08:17.530 --> 00:08:18.710\na little quicker.\n\n159\n00:08:18.710 --> 00:08:21.340\nThis means don't do any\nname resolution at -n.\n\n160\n00:08:21.340 --> 00:08:23.070\nAnd we'll get into more of that later, but\n\n161\n00:08:23.070 --> 00:08:27.710\nwe have taught DNS before so\nthat's a quick little dirty one there.\n\n162\n00:08:27.710 --> 00:08:31.690\nSo, if you want to speed up scans, do a\n-n, and it won't do any name resolutions.\n\n163\n00:08:31.690 --> 00:08:32.760\nSo here we go.\n\n164\n00:08:32.760 --> 00:08:36.370\nWe fire off, Nmap is going to town,\nit's churning away.\n\n165\n00:08:36.370 --> 00:08:38.570\nI don't know how long this is gonna take.\n\n166\n00:08:38.570 --> 00:08:41.740\nIt's scanning 256 different IP addresses.\n\n167\n00:08:41.740 --> 00:08:42.790\nAnd there we go.\n\n168\n00:08:42.790 --> 00:08:43.756\nIt's actually pretty quick.\n\n169\n00:08:43.756 --> 00:08:49.743\n8.74 seconds and\nit came up with 192.168.219.1.\n\n170\n00:08:49.743 --> 00:08:53.252\nAnd as we can see ports 21 and\n80 are open.\n\n171\n00:08:53.252 --> 00:08:58.135\nBecause I didn't give it any other\ntypes of argumentation it did a scan\n\n172\n00:08:58.135 --> 00:09:00.550\nof the host that it found, right?\n\n173\n00:09:00.550 --> 00:09:01.550\nSo that's what it did.\n\n174\n00:09:01.550 --> 00:09:02.815\nI fired off Nmap, what did it do?\n\n175\n00:09:02.815 --> 00:09:06.330\nIt did a ping scan first,\nanybody out there?\n\n176\n00:09:06.330 --> 00:09:07.707\nAnd then something replied.\n\n177\n00:09:07.707 --> 00:09:09.310\nIt said okay, I'm gonna scan you now.\n\n178\n00:09:09.310 --> 00:09:10.960\nThank you for\ntelling me that you were there.\n\n179\n00:09:10.960 --> 00:09:11.850\nAnd that's what it did.\n\n180\n00:09:11.850 --> 00:09:14.830\nIt found two ports open, FTP and HTTP.\n\n181\n00:09:15.910 --> 00:09:18.660\nSo, that being the case,\nthat's awesome right?\n\n182\n00:09:18.660 --> 00:09:19.330\nIt did its job.\n\n183\n00:09:20.440 --> 00:09:21.890\nThere's only one problem here.\n\n184\n00:09:21.890 --> 00:09:28.100\nLike I said before, I know that there is a\nhost on that network that it did not find.\n\n185\n00:09:28.100 --> 00:09:29.260\nDidn't find at all, didn't show up.\n\n186\n00:09:29.260 --> 00:09:31.140\nWhere is that?\nThat's what we wanna see.\n\n187\n00:09:31.140 --> 00:09:35.380\nSo here in the background here,\nthis is my Metasploitable.\n\n188\n00:09:35.380 --> 00:09:37.410\nLet me move that guy for you here, and\n\n189\n00:09:37.410 --> 00:09:39.330\nget it a little more in\nthe middle of the screen.\n\n190\n00:09:40.460 --> 00:09:41.867\nThis is a machine that's on that network.\n\n191\n00:09:41.867 --> 00:09:47.690\nLet me do a little ifconfig, there we go.\n\n192\n00:09:47.690 --> 00:09:54.240\nAnd if you look right here,\nlast time I checked 192.168.218.135 is in\n\n193\n00:09:54.240 --> 00:09:59.400\nthe range of IP addresses\nthat I asked Nmap to scan.\n\n194\n00:09:59.400 --> 00:10:01.140\nI did not find it, right?\n\n195\n00:10:01.140 --> 00:10:02.340\nWhy is that?\n\n196\n00:10:02.340 --> 00:10:03.060\nFirewalls.\n\n197\n00:10:03.060 --> 00:10:07.000\nFirewalls are blocking, so\nlet me take a look at there.\n\n198\n00:10:07.000 --> 00:10:11.877\nWe'll take a look at the IP tables,\n\n199\n00:10:11.877 --> 00:10:15.780\nsudo iptables -L and -n and\n\n200\n00:10:15.780 --> 00:10:21.320\ngive it the old password and there we go.\n\n201\n00:10:21.320 --> 00:10:23.950\nYou'll notice I've got\na lot going on here.\n\n202\n00:10:23.950 --> 00:10:29.690\nI've got a lot of firewall rules\nhappening, specifically for certain ports.\n\n203\n00:10:29.690 --> 00:10:34.170\nAnd we're really gonna tackle why I have\nthese specific ports here in just a few\n\n204\n00:10:34.170 --> 00:10:36.460\nminutes, but\nI don't want to jump ahead of stuff.\n\n205\n00:10:36.460 --> 00:10:38.630\nI want to start you from the easy stuff,\nand\n\n206\n00:10:38.630 --> 00:10:40.650\nwork our way through\nthe more difficult things.\n\n207\n00:10:40.650 --> 00:10:45.400\nBut this is heavily firewalled, and\nthat is why it did not find this machine.\n\n208\n00:10:45.400 --> 00:10:46.960\nSo, what do we got to do?\n\n209\n00:10:46.960 --> 00:10:51.060\nWhat can we do to make the Nmap\nscan find this machine?\n\n210\n00:10:51.060 --> 00:10:53.768\nSo that's what we're gonna do.\n\n211\n00:10:53.768 --> 00:10:55.965\nSo, let's see I'll just shrink\nthat guy out of the way here,\n\n212\n00:10:55.965 --> 00:10:57.070\nI'll go back to my terminal.\n\n213\n00:10:58.680 --> 00:11:01.980\nOne of the first things I\nwanna to show you how to use,\n\n214\n00:11:01.980 --> 00:11:06.000\nwhen it comes to Nmap,\nis what they call a list scan, right?\n\n215\n00:11:06.000 --> 00:11:11.060\nThis is a very non-intrusive,\nnon-obtrusive, type of scan,\n\n216\n00:11:11.060 --> 00:11:15.970\ncuz all it does is say, here are the IP\n\n217\n00:11:15.970 --> 00:11:19.930\naddresses that I would\nscan If you fired me off.\n\n218\n00:11:21.050 --> 00:11:23.864\nAnd you think well,\nwhat's the purpose of that?\n\n219\n00:11:23.864 --> 00:11:27.784\nWell I think if I'm not mistaken\nit does DNS resolution,\n\n220\n00:11:27.784 --> 00:11:30.969\nAim resolution as well\nwhen you do a list scan,\n\n221\n00:11:30.969 --> 00:11:36.405\nso it's gonna enumerate some names for\nyou that's always nice.\n\n222\n00:11:36.405 --> 00:11:40.800\nAlso, you want to make sure that you\ndon't scan the wrong stuff, right.\n\n223\n00:11:40.800 --> 00:11:42.928\nSo if I get a list, 100%,\n\n224\n00:11:42.928 --> 00:11:47.620\nI know 100% exactly what IP\naddresses the Nmap is gonna scan.\n\n225\n00:11:47.620 --> 00:11:51.039\nAnd if I go to that list and\nI see that I've got a no no on there,\n\n226\n00:11:51.039 --> 00:11:53.212\nwell I gotta exclude that from there.\n\n227\n00:11:53.212 --> 00:11:54.600\nI gotta use my exclude or\n\n228\n00:11:54.600 --> 00:11:58.130\nexclude file, something of that\nnature to get that guy out of there.\n\n229\n00:11:58.130 --> 00:12:01.870\nMaybe do a range of IPs and\nthen jump around.\n\n230\n00:12:01.870 --> 00:12:02.962\nUse my comma delimitation.\n\n231\n00:12:02.962 --> 00:12:04.645\nAll the stuff we saw in\nthe previous episodes.\n\n232\n00:12:04.645 --> 00:12:09.126\nWays to either add or remove things\nout of the actual scan itself.\n\n233\n00:12:09.126 --> 00:12:11.020\nSo let's see how we do that.\n\n234\n00:12:11.020 --> 00:12:16.584\nIf I do nmap- sl and then my IP range,\n\n235\n00:12:16.584 --> 00:12:22.694\n192.168.219.0/24.\n\n236\n00:12:22.694 --> 00:12:25.110\nHere we go, I fire it off and\nit gives me, there it is.\n\n237\n00:12:25.110 --> 00:12:28.440\nThis is the list of IP addresses\nthat it is going to find.\n\n238\n00:12:28.440 --> 00:12:32.270\nAnd I look through here, let me see\nif if did the DNS resolution, it did.\n\n239\n00:12:32.270 --> 00:12:36.760\nSo that 135 has a DNS\nname of metasploitable\n\n240\n00:12:36.760 --> 00:12:40.160\nbecause that's the operating\nsystem that it's running.\n\n241\n00:12:40.160 --> 00:12:43.080\nIt's meant to be open, full of holes for\n\n242\n00:12:43.080 --> 00:12:45.520\nus to play around with and\nsee how we can do these things.\n\n243\n00:12:45.520 --> 00:12:46.530\nSo very, very cool.\n\n244\n00:12:46.530 --> 00:12:48.980\nI can look through here,\nit looks very standard.\n\n245\n00:12:48.980 --> 00:12:52.350\nMaybe if I get it a range\nthat'll be a little better.\n\n246\n00:12:52.350 --> 00:12:55.240\nMaybe if I gave it specific\nIPs common to limitation.\n\n247\n00:12:55.240 --> 00:12:59.540\nI want to verify that every one of those\nare showing up before I fire the scan off.\n\n248\n00:12:59.540 --> 00:13:02.498\nAgain, this is all about safety first,\nright?\n\n249\n00:13:02.498 --> 00:13:06.520\nWe don't wanna get ahead of\nourselves until we're 100% sure that\n\n250\n00:13:06.520 --> 00:13:08.550\nwe're scanning what it is we want to scan.\n\n251\n00:13:08.550 --> 00:13:11.860\nAnd you might not do this all the time,\nbut it's one of the things you\n\n252\n00:13:11.860 --> 00:13:14.660\ndo need to be aware of,\nyou do need to know about it, so that\n\n253\n00:13:14.660 --> 00:13:18.100\nif you do need it it's in the toolkit, you\nunderstand it, it's there ready to rock.\n\n254\n00:13:19.470 --> 00:13:20.220\nAll right, let's see.\n\n255\n00:13:20.220 --> 00:13:22.996\nWhere do we go from here?\n\n256\n00:13:22.996 --> 00:13:24.121\nPing scan.\n\n257\n00:13:24.121 --> 00:13:25.540\nRight?\n\n258\n00:13:25.540 --> 00:13:27.440\nThat's the next best place to go.\n\n259\n00:13:27.440 --> 00:13:29.560\nLet's actually do a ping scan.\n\n260\n00:13:29.560 --> 00:13:31.630\nNow, you're thinking,\ndidn't we do that just a minute ago?\n\n261\n00:13:31.630 --> 00:13:35.869\nWell technically, yes,\nwe did a ping scan when we fired off Nmap,\n\n262\n00:13:35.869 --> 00:13:41.350\nbut that was also a port scan as\nwell where it was more intensive.\n\n263\n00:13:41.350 --> 00:13:43.460\nAgain, we're starting very easy.\n\n264\n00:13:43.460 --> 00:13:48.110\nYou're easing your way out into those\nwaters of scanning and enumeration,\n\n265\n00:13:48.110 --> 00:13:50.710\nbecause you don't want to raise red flags.\n\n266\n00:13:50.710 --> 00:13:57.850\nThis is all about trying to evade,\nand be subtle, and not attack full on.\n\n267\n00:13:57.850 --> 00:14:00.810\nYou can do that from time to time,\nbut if you're a pen tester and\n\n268\n00:14:00.810 --> 00:14:04.060\nyou're doing a security audit,\nyou wanna act like a hacker, right?\n\n269\n00:14:04.060 --> 00:14:06.470\nThat's the way you wanna come at this.\n\n270\n00:14:06.470 --> 00:14:08.410\nSo, you wanna ease it,\nyou don't wanna raise alarms,\n\n271\n00:14:08.410 --> 00:14:11.970\nyou don't wanna raise alerts, so\nyou start really, really small.\n\n272\n00:14:11.970 --> 00:14:18.140\nTypically, even if ping is being blocked,\nit's not being logged, right?\n\n273\n00:14:18.140 --> 00:14:19.320\nSo no one cares.\n\n274\n00:14:19.320 --> 00:14:23.620\nThey understand ping is a very common\nprotocol that's used throughout networks,\n\n275\n00:14:23.620 --> 00:14:25.410\nso it's unlikely that it's being logged,\n\n276\n00:14:25.410 --> 00:14:27.610\nso that's where we're gonna\nnext with the ping scan.\n\n277\n00:14:27.610 --> 00:14:29.620\n>> All right, Dan.\nSo, I do have a question about something.\n\n278\n00:14:29.620 --> 00:14:33.300\nIf you had some kind of security class\nsoftware on there and maybe you had some\n\n279\n00:14:33.300 --> 00:14:38.370\nkind of countermeasure and it recognizes\nthat you're doing a port scan or\n\n280\n00:14:38.370 --> 00:14:42.830\nmaybe you're doing a ping sweep that might\nalter the results and maybe give you\n\n281\n00:14:42.830 --> 00:14:46.090\na false indication whether machines\nare present or not on your network?\n\n282\n00:14:46.090 --> 00:14:50.580\n>> Yeah, with something like an IPS,\nintrusion prevention system, that might be\n\n283\n00:14:50.580 --> 00:14:55.010\nthe case, or even if you just have\nan idea, some sort of alarming system.\n\n284\n00:14:55.010 --> 00:14:58.130\nYou probably don't wanna have\nyour phone going berserk and\n\n285\n00:14:58.130 --> 00:15:03.220\nyour email filling up with alerts,\nbecause you're scanning your own system.\n\n286\n00:15:03.220 --> 00:15:08.160\nSo, a lot of times it's just a really\ngood practice to start simple,\n\n287\n00:15:08.160 --> 00:15:10.370\nwork your way up to more advanced things.\n\n288\n00:15:10.370 --> 00:15:13.970\nAnd, of course, I don't have you\nguys quite at that level yet, right?\n\n289\n00:15:13.970 --> 00:15:18.040\nWe're going to be able to evade and\nget around those devices,\n\n290\n00:15:18.040 --> 00:15:23.220\nbut at this point we just need to be able\nto discover things that are out there.\n\n291\n00:15:23.220 --> 00:15:29.080\nAnd although ping scans can trip an alarm\nor two, so we do need to be careful.\n\n292\n00:15:29.080 --> 00:15:30.480\nWe are gonna take that into account,\n\n293\n00:15:30.480 --> 00:15:34.740\nwe still do need to know how to do it just\nin general and then we'll get to the, how\n\n294\n00:15:34.740 --> 00:15:39.200\ndo we evade the systems that are trying\nto stop me from doing that for discovery?\n\n295\n00:15:39.200 --> 00:15:39.940\nSo that's what we'll do.\n\n296\n00:15:39.940 --> 00:15:41.470\nSo, let's start there.\n\n297\n00:15:41.470 --> 00:15:43.800\nLet's start with a simple ping scan.\n\n298\n00:15:43.800 --> 00:15:45.590\nHow do I just do a ping scan?\n\n299\n00:15:45.590 --> 00:15:49.080\nCuz like I said, we did that in our\noriginal scan, but that was a full scan.\n\n300\n00:15:49.080 --> 00:15:51.390\nThat was ports and pings, right.\n\n301\n00:15:51.390 --> 00:15:53.630\nI just wanna ping scan,\nwhat do I gotta do?\n\n302\n00:15:53.630 --> 00:15:54.738\nGlad you asked, it's very simple.\n\n303\n00:15:54.738 --> 00:15:58.436\nAs always it's just an argument\nto throw at good old Nmap.\n\n304\n00:15:58.436 --> 00:16:00.386\nSo we say, Nmap.\n\n305\n00:16:00.386 --> 00:16:02.277\n-sn.\n\n306\n00:16:02.277 --> 00:16:06.012\nNow this is one of those places where\nit used to be something else and\n\n307\n00:16:06.012 --> 00:16:08.070\nit's different now, okay.\n\n308\n00:16:08.070 --> 00:16:13.520\nSo at this point in time as of mid 2016,\nversion 7.12, I believe is the version\n\n309\n00:16:13.520 --> 00:16:17.790\nI'm using I don't know if it was\neven the version before this.\n\n310\n00:16:17.790 --> 00:16:22.500\nBut I think back in six\nthis used to be -sp.\n\n311\n00:16:22.500 --> 00:16:26.490\nAnd I believe sp even still works in 7,\n\n312\n00:16:26.490 --> 00:16:30.710\nbut it is depreciated and\neventually it's just going to be sn.\n\n313\n00:16:30.710 --> 00:16:33.440\nSo it's good for us to go ahead and\nstart with that.\n\n314\n00:16:33.440 --> 00:16:37.020\nIf you're using an older version, Throw SP\nat it and it'll work, even if you're using\n\n315\n00:16:37.020 --> 00:16:40.010\na new version like I said, I'm pretty\nsure it still does work in this instance.\n\n316\n00:16:40.010 --> 00:16:43.110\nSo you can use it as well, but,\nI'll try to keep it on the latest and\n\n317\n00:16:43.110 --> 00:16:44.930\ngreatest of the nomenclatures for us.\n\n318\n00:16:44.930 --> 00:16:46.170\nSo that we know, eventually,\n\n319\n00:16:46.170 --> 00:16:49.160\nthis is gonna be the standard\nstandard that everybody uses.\n\n320\n00:16:49.160 --> 00:16:52.660\nSo there's my disclaimer for\nmoving on forward, that's what'll happen,\n\n321\n00:16:52.660 --> 00:16:54.180\nI'll mention And I will move on.\n\n322\n00:16:54.180 --> 00:16:59.660\nSo nmap dash sn that's saying,\nI want to do a ping only scan.\n\n323\n00:16:59.660 --> 00:17:01.700\nThere are somethings\nwe need to about this,\n\n324\n00:17:01.700 --> 00:17:07.520\nwhen we do a ping only it's kinda defaults\nof what happens when I do a ping scan.\n\n325\n00:17:07.520 --> 00:17:12.800\nI'll finish up the thing here, my range of\n\n326\n00:17:12.800 --> 00:17:18.700\nIPs 192.168..219.0/24 Four, there we go.\n\n327\n00:17:18.700 --> 00:17:22.080\nAll right, so,\nwhat's going to happen when we do this?\n\n328\n00:17:22.080 --> 00:17:25.230\nNow, you think, well we're doing a ping\nscan, so it's obviously gonna run ping,\n\n329\n00:17:25.230 --> 00:17:28.580\nand it's gonna ping against\nall those IP addresses.\n\n330\n00:17:28.580 --> 00:17:32.050\nAnd you are 100% correct,\nexcept that you've left some stuff out.\n\n331\n00:17:32.050 --> 00:17:35.770\nSome things that you might not be aware\nof that it's doing, and this is for\n\n332\n00:17:35.770 --> 00:17:38.420\nthe purposes Of being awesome, right?\n\n333\n00:17:38.420 --> 00:17:43.860\nBecause as the person running nmap\nyou're like, this thing rocks.\n\n334\n00:17:43.860 --> 00:17:49.780\nIt's so awesome I can't even imagine how\nawesome it's even just for host discovery.\n\n335\n00:17:49.780 --> 00:17:54.500\nIf you're the guy trying to prevent nmap\nfrom working, you're going I hate you.\n\n336\n00:17:54.500 --> 00:17:56.110\nI hate you, I hate you so\n\n337\n00:17:56.110 --> 00:18:01.450\nmuch because I cannot stop you from\ndoing what it is you're doing.\n\n338\n00:18:01.450 --> 00:18:05.200\nAnd that's the funny thing while we're\nbusting here laughing about it because\n\n339\n00:18:05.200 --> 00:18:07.550\nin this show I'm kind of\nhaving to play both hats.\n\n340\n00:18:07.550 --> 00:18:09.680\nSo on one hand I'm like yeah look at nmap.\n\n341\n00:18:09.680 --> 00:18:10.970\nIt's so awesome,\n\n342\n00:18:10.970 --> 00:18:14.340\nmy goodness nmap you're killing me\nbecause I'm trying to firewall you off.\n\n343\n00:18:14.340 --> 00:18:16.420\nAnd it's basically a futile effort,\n\n344\n00:18:16.420 --> 00:18:19.760\nbut I do the best I can so\nthat you guys can see what it's like.\n\n345\n00:18:19.760 --> 00:18:21.330\nOn both ends of the stick, right?\n\n346\n00:18:21.330 --> 00:18:22.280\nThat's why we do this.\n\n347\n00:18:22.280 --> 00:18:24.030\nThat's why we're running security on it.\n\n348\n00:18:24.030 --> 00:18:26.124\nIt's why we're running tests.\n\n349\n00:18:26.124 --> 00:18:29.470\nSo that we can do what we\ncan to protect our systems.\n\n350\n00:18:29.470 --> 00:18:34.050\nAnd if I don't know how to get around\nthat stuff, or what is coming at me,\n\n351\n00:18:34.050 --> 00:18:35.830\nI don't know how to stop it.\n\n352\n00:18:35.830 --> 00:18:40.580\nUnfortunately again it goes back to NMAP\nis a very Very robust piece of software,\n\n353\n00:18:40.580 --> 00:18:42.300\nand it does a fantastic job.\n\n354\n00:18:42.300 --> 00:18:47.130\nThis simple scan alone is probably\ngoing to bypass, I say probably, it is.\n\n355\n00:18:47.130 --> 00:18:50.830\nIt's going to bypass all those\nfirewall rules that i have in place\n\n356\n00:18:50.830 --> 00:18:51.640\non that meta exploitable.\n\n357\n00:18:52.850 --> 00:18:56.510\nLet me add the -n to this to\nmake sure it speeds up and\n\n358\n00:18:56.510 --> 00:19:00.100\ndoesn't do the DNS lookup stuff.\n\n359\n00:19:00.100 --> 00:19:01.690\nWhich should give us\na little faster results.\n\n360\n00:19:01.690 --> 00:19:03.400\nSo I'm gonna fire it off.\n\n361\n00:19:03.400 --> 00:19:09.030\nAnd let's see if it\nactually finds addresses.\n\n362\n00:19:09.030 --> 00:19:09.650\nActually it didn't.\n\n363\n00:19:09.650 --> 00:19:13.380\nIt says host is up, and\nthat's interesting.\n\n364\n00:19:13.380 --> 00:19:14.350\nWell, yeah, that's right.\n\n365\n00:19:14.350 --> 00:19:16.020\nSaying here we go.\n\n366\n00:19:16.020 --> 00:19:17.220\nDid I forget anything?\n\n367\n00:19:17.220 --> 00:19:18.670\nNo.\n\n368\n00:19:18.670 --> 00:19:22.710\nIt looks like my firewall rules\nare working and that's interesting to me\n\n369\n00:19:22.710 --> 00:19:27.750\nbecause by default it does\nthe ICMP echo request, right?\n\n370\n00:19:27.750 --> 00:19:31.000\nThat's good, but\nI'm blocking echo request.\n\n371\n00:19:31.000 --> 00:19:32.520\nSo you're thinking okay,\nwell, it did its job.\n\n372\n00:19:32.520 --> 00:19:34.130\nBut it also does a few other things.\n\n373\n00:19:34.130 --> 00:19:39.380\nIt does a TCP Ack, if you remember\nform your three way handshake\n\n374\n00:19:39.380 --> 00:19:45.570\nback in the network plus type\nof material you've got the sin,\n\n375\n00:19:45.570 --> 00:19:49.160\nthe ack, and the\n>> Be soon.\n\n376\n00:19:49.160 --> 00:19:52.130\n>> Yeah, the sin ack, and then the ack.\n\n377\n00:19:52.130 --> 00:19:56.080\nI always remember it as the sin,\nsin, ack, ack.\n\n378\n00:19:56.080 --> 00:19:59.294\nIt's like sin sin ack ack But\nthe three-way handshake SYN,\n\n379\n00:19:59.294 --> 00:20:01.220\nSYN-ACK and then ACK.\n\n380\n00:20:01.220 --> 00:20:06.550\nSo the ACK is basically saying I'm\nlooking for a type of connection.\n\n381\n00:20:06.550 --> 00:20:08.800\nAnd your computer will go well,\n\n382\n00:20:08.800 --> 00:20:14.600\nthat's the end of a TCP three-way\nhandshake and I don't have any handshake.\n\n383\n00:20:14.600 --> 00:20:17.350\nYou need to reset or\nsomething that's not right.\n\n384\n00:20:17.350 --> 00:20:18.680\nI'm not waiting for that.\n\n385\n00:20:18.680 --> 00:20:21.640\nBy the very fact that it responds,\nwhat does it do?\n\n386\n00:20:21.640 --> 00:20:24.000\nIt lets Nmap know its alive.\n\n387\n00:20:24.000 --> 00:20:28.300\nEven though it didn't respond to the ICMP,\nit did respond to the ACK.\n\n388\n00:20:28.300 --> 00:20:31.260\nYou're thinking, okay well it\ndidn't respond to the ACK here.\n\n389\n00:20:31.260 --> 00:20:32.760\nYeah, apparently it did not.\n\n390\n00:20:32.760 --> 00:20:37.239\nAnd here's one of the fun little\ncaveats of working with Nmap.\n\n391\n00:20:38.730 --> 00:20:42.700\nMost likely, my issue here is the fact\nthat I'm on a local ethernet.\n\n392\n00:20:42.700 --> 00:20:45.570\nI'm on a local LAN, a local area network.\n\n393\n00:20:45.570 --> 00:20:50.220\nIt acts differently when it's on\na LAN than it does when you're going\n\n394\n00:20:50.220 --> 00:20:52.940\nthrough a router,\nwhen you're on different networks.\n\n395\n00:20:52.940 --> 00:20:57.450\nSo when nmap detects that you're on\nthe same network as the machines you're\n\n396\n00:20:57.450 --> 00:21:02.100\nscanning, it behaves a little\ndifferently and it does Sin and\n\n397\n00:21:02.100 --> 00:21:03.590\na couple of other things.\n\n398\n00:21:03.590 --> 00:21:05.020\nWe'll get to that in just a second.\n\n399\n00:21:05.020 --> 00:21:11.090\nIt works differently that's the basic idea\nbecause of that it might not be as robust.\n\n400\n00:21:11.090 --> 00:21:12.090\nWe might need to sudo.\n\n401\n00:21:12.090 --> 00:21:14.350\nSo let me up my privileges.\n\n402\n00:21:14.350 --> 00:21:17.990\nLet's me act as a privileged\nadministrator as I normally would.\n\n403\n00:21:17.990 --> 00:21:19.750\nThat's the wrong thing there.\n\n404\n00:21:19.750 --> 00:21:22.560\nDo sudo Let's see what\nhappens when i do that.\n\n405\n00:21:22.560 --> 00:21:23.915\nGive it the old password.\n\n406\n00:21:23.915 --> 00:21:30.818\n[NOISE] And\nsee if we get any different results.\n\n407\n00:21:30.818 --> 00:21:31.430\nThere we go.\n\n408\n00:21:32.550 --> 00:21:34.350\nYes, yes it does, right?\n\n409\n00:21:34.350 --> 00:21:38.910\nSo because I've elevated my privileges\nI've gotten a little more functionality\n\n410\n00:21:38.910 --> 00:21:39.720\nout of my scan.\n\n411\n00:21:39.720 --> 00:21:41.080\nAnd you'll see right here,\n\n412\n00:21:41.080 --> 00:21:45.360\nthere it is Showing me a report for\n192.168.219.135 which is my.\n\n413\n00:21:45.360 --> 00:21:48.130\nYou notice it did not\ndo the DNS name lookup.\n\n414\n00:21:48.130 --> 00:21:49.450\nThere's no DNS name there.\n\n415\n00:21:49.450 --> 00:21:53.190\nIt also found something on 254.\n\n416\n00:21:53.190 --> 00:21:57.980\nThis is, as you can see,\nthis is VMWare that I'm using.\n\n417\n00:21:57.980 --> 00:22:01.720\nThis is a virtual network that I've kind\nof creator here, we're going to see a bit\n\n418\n00:22:01.720 --> 00:22:04.750\nof hanky results here, i'll point that\nout when I find them, or when we see it.\n\n419\n00:22:05.830 --> 00:22:09.230\nBut it did find my machine as well\nwhich is this guy right here.\n\n420\n00:22:09.230 --> 00:22:13.940\nThis is actually probably another v m wear\nnetwork adapter that's on the machine that\n\n421\n00:22:13.940 --> 00:22:18.210\nit's actually found, but\nit is showing right here, look at that.\n\n422\n00:22:18.210 --> 00:22:22.140\nHost is up it bypassed my\nfirewall rules if I can\n\n423\n00:22:22.140 --> 00:22:24.150\nBlew on this the correct way, there we go.\n\n424\n00:22:24.150 --> 00:22:28.360\nHost is up, very little latency,\nit actually bypassed the firewall.\n\n425\n00:22:28.360 --> 00:22:30.701\nLet's go back to the machine.\n\n426\n00:22:30.701 --> 00:22:35.490\nTake a look at those rules,\nI'm blocking a lot of stuff here.\n\n427\n00:22:35.490 --> 00:22:42.660\nI'm blocking ICMP, there's ICMP,\n\n428\n00:22:42.660 --> 00:22:48.290\nICMP That's in the input chain things that\nare coming in it with the ICP protocol.\n\n429\n00:22:48.290 --> 00:22:49.020\nBlocking.\n\n430\n00:22:49.020 --> 00:22:49.930\nRight.\n\n431\n00:22:49.930 --> 00:22:51.920\nLet's see here.\n\n432\n00:22:51.920 --> 00:22:53.810\nICMP on the output chain as well.\n\n433\n00:22:53.810 --> 00:22:58.560\nIf you do make a successful connection,\nI'm dropping all the replies.\n\n434\n00:22:58.560 --> 00:23:00.050\nI'm not allowing it.\n\n435\n00:23:00.050 --> 00:23:03.350\nWe're really firewall this thing up and\nit still found it, right?\n\n436\n00:23:03.350 --> 00:23:06.310\nAnd all I had to do was elevate\nmy privileges to get the extra.\n\n437\n00:23:06.310 --> 00:23:08.620\nSo here's what I want you to know about,\nlet me get out of there,\n\n438\n00:23:08.620 --> 00:23:10.580\ncuz it looks like a nightmare come true.\n\n439\n00:23:10.580 --> 00:23:16.430\nWhat I want you to know is when\nyou run the SNScan unprivileged,\n\n440\n00:23:16.430 --> 00:23:19.090\nyou are going to have, or\n\n441\n00:23:19.090 --> 00:23:23.650\nif you're in a Windows,\nyou might have the Winpeak cap installed.\n\n442\n00:23:23.650 --> 00:23:24.730\nLet's say you bypassed that.\n\n443\n00:23:24.730 --> 00:23:26.690\nYou care to have that.\n\n444\n00:23:26.690 --> 00:23:30.420\nIt'll run differently as\nwell with that as an aside.\n\n445\n00:23:30.420 --> 00:23:35.960\nIt will do a sin connect,\nright, a connect scan.\n\n446\n00:23:35.960 --> 00:23:40.550\nLike a TCP connect to ports 80 and\n443, which are typically open for\n\n447\n00:23:40.550 --> 00:23:41.560\nweb purposes, right.\n\n448\n00:23:41.560 --> 00:23:43.110\nSo be aware of that.\n\n449\n00:23:43.110 --> 00:23:44.410\nYou can change that if you like.\n\n450\n00:23:44.410 --> 00:23:48.410\nYou can change it to a different port,\nbut that's a little more advanced.\n\n451\n00:23:48.410 --> 00:23:49.621\nWe'll get to that.\n\n452\n00:23:49.621 --> 00:23:53.348\nIf you're running as\na privileged administrator,\n\n453\n00:23:53.348 --> 00:23:58.346\nyou get the TCP [INAUDIBLE] It also\nsupports 80 and 443, I think and\n\n454\n00:23:58.346 --> 00:24:02.242\nit also runs ICMP so\nwe did ICMP Echo request and reply,\n\n455\n00:24:02.242 --> 00:24:08.200\nit's normal like ping type deal, and also\ndoes ICMP timestamp request and reply.\n\n456\n00:24:08.200 --> 00:24:10.670\nAnd you're like, whoa,\nI've never heard of this.\n\n457\n00:24:10.670 --> 00:24:14.930\nIt's just another part\nof the ICMP suite and\n\n458\n00:24:14.930 --> 00:24:17.960\nmost people aren't aware of it because we\ndon't really tend to use it very often.\n\n459\n00:24:17.960 --> 00:24:22.200\nBut you might not be blocking it, you\nmight be just blocking Echo request and\n\n460\n00:24:22.200 --> 00:24:25.110\nreply because that's normally what\nyou're trying to guard against.\n\n461\n00:24:25.110 --> 00:24:29.790\nIf you're not blocking timestamp request\nand reply, I'll give request and\n\n462\n00:24:29.790 --> 00:24:32.060\nreply because it's not being\nblocked by the firewall.\n\n463\n00:24:32.060 --> 00:24:38.180\nThat's NMAP doing that by default,\nand I'll show you what I mean here.\n\n464\n00:24:38.180 --> 00:24:42.600\nIf I do a man NMAP, which gives\nyou the manual If I can type it,\n\n465\n00:24:44.350 --> 00:24:46.419\nand I search for -sn.\n\n466\n00:24:46.419 --> 00:24:49.190\nLet's go next.\n\n467\n00:24:49.190 --> 00:24:49.880\nWhere's it at here?\n\n468\n00:24:51.820 --> 00:24:52.970\nI think, there we go.\n\n469\n00:24:54.350 --> 00:24:55.950\nNo, I think one more.\n\n470\n00:24:55.950 --> 00:24:59.410\nThere we go.\nSo here's the section for the sn scan.\n\n471\n00:24:59.410 --> 00:25:04.360\nIf you look right down here, it says,\nthe default host discover done\n\n472\n00:25:04.360 --> 00:25:09.140\nwith SM consists of an ICMP echo request,\na TCP send to port 443,\n\n473\n00:25:09.140 --> 00:25:16.190\na TCP ack to port 80, and\nan ICMP timestamp request by default.\n\n474\n00:25:16.190 --> 00:25:19.210\nRight?\nSo keep that in mind, it's by default.\n\n475\n00:25:19.210 --> 00:25:23.870\nAlso, we see some interesting things\nhere talks about the when executed by\n\n476\n00:25:23.870 --> 00:25:27.050\nan unprivileged user,\nsends only send packets.\n\n477\n00:25:27.050 --> 00:25:30.620\nBut if you look down here, it says,\nwhen a privileged user tries to scan\n\n478\n00:25:30.620 --> 00:25:35.290\ntargets on the local ethernet network,\narp requests are used.\n\n479\n00:25:35.290 --> 00:25:38.630\nAgain, it works differently\nwhen you're in an environment.\n\n480\n00:25:38.630 --> 00:25:40.040\nThat's how I'm getting\naround the firewall.\n\n481\n00:25:40.040 --> 00:25:42.190\nAt least one of the ways, right?\n\n482\n00:25:42.190 --> 00:25:45.700\nIt's saying, let's throw ARP at it,\nsee how that works.\n\n483\n00:25:45.700 --> 00:25:46.880\nHey look, there's a machine.\n\n484\n00:25:46.880 --> 00:25:50.650\nI found it and\nI can add it to my list as a live hosts.\n\n485\n00:25:50.650 --> 00:25:53.800\n>> Now that's interesting, Dan, cuz I\nknow a little bit about the ARP protocol.\n\n486\n00:25:53.800 --> 00:25:56.600\nSo what you're saying is it's\nusing a broadcast communication.\n\n487\n00:25:56.600 --> 00:25:58.370\nIt's sending a communication to.\n\n488\n00:25:58.370 --> 00:26:00.910\nWhatever the broadcast address\nis on that local subnet and\n\n489\n00:26:00.910 --> 00:26:02.800\nif you think about that right,\nwhat happens?\n\n490\n00:26:02.800 --> 00:26:03.920\nWho responds to a broadcast.\n\n491\n00:26:03.920 --> 00:26:05.560\nWell first of all,\n\n492\n00:26:05.560 --> 00:26:09.480\ndon't put the carriage in front of the\nhorse, who is it that hears the broadcast?\n\n493\n00:26:09.480 --> 00:26:11.090\nWell, everybody on my network.\n\n494\n00:26:11.090 --> 00:26:13.840\nSo who is it that's gonna\nrespond to the broadcast?\n\n495\n00:26:13.840 --> 00:26:15.630\nThat's interesting,\neverybody on the network.\n\n496\n00:26:15.630 --> 00:26:18.970\nSo, what you're saying here, if I\nunderstand this right, is when it uses R\n\n497\n00:26:18.970 --> 00:26:21.980\nit's basically looking for\neverybody using that broadcast address.\n\n498\n00:26:21.980 --> 00:26:22.920\n>> That's exactly right.\n\n499\n00:26:22.920 --> 00:26:24.930\nIt's throwing everything and\n\n500\n00:26:24.930 --> 00:26:30.460\nthe kitchen sink at the network\nspecified to try to find a live host.\n\n501\n00:26:30.460 --> 00:26:34.790\nAnd again, it's doing this by default, I'm\nnot having to add argumentation to it, and\n\n502\n00:26:34.790 --> 00:26:36.680\nthat's what happens when\nyou get updates right.\n\n503\n00:26:36.680 --> 00:26:40.150\nThey say hey I see what you did there,\nyou're stopping me from finding hosts,\n\n504\n00:26:40.150 --> 00:26:42.860\nwe'll fix that we'll just make\nthe default do these things.\n\n505\n00:26:42.860 --> 00:26:49.740\nSo really is becoming easier and easier\nfor people who are new to it to use.\n\n506\n00:26:49.740 --> 00:26:54.110\nRight because they're making it do\nmore advance functionality by defaults\n\n507\n00:26:54.110 --> 00:26:57.560\ninstead of you having to know\nto add that functionality to it.\n\n508\n00:26:57.560 --> 00:26:59.490\nEven though that's\nthe case which is awesome.\n\n509\n00:26:59.490 --> 00:27:04.940\nAgain us over here on the discovery\nside going yeah mmap is great and it is.\n\n510\n00:27:04.940 --> 00:27:06.490\nIt's awesome obviously.\n\n511\n00:27:06.490 --> 00:27:08.230\nYou're having a hard time finding,\n\n512\n00:27:08.230 --> 00:27:12.560\nI came to the point where I\nactually had to break Nmap.\n\n513\n00:27:12.560 --> 00:27:17.130\nI had to tell it to do something specific\nso that it would not find the host and\n\n514\n00:27:17.130 --> 00:27:19.112\nthat was basically don't do ARP.\n\n515\n00:27:19.112 --> 00:27:21.710\nAll right, because that ARP is\njust giving away the ghost,\n\n516\n00:27:21.710 --> 00:27:24.660\nit's just, it's doing the business,\nI can't stop it.\n\n517\n00:27:24.660 --> 00:27:26.920\nI'd have to firewall off ARP.\n\n518\n00:27:26.920 --> 00:27:29.980\nAnd Wes what's going to\nhappen if a firewall ARP?\n\n519\n00:27:29.980 --> 00:27:31.780\n>> Well you're not going\nto get any communications,\n\n520\n00:27:31.780 --> 00:27:35.010\nany kind of Mac address to IP resolution.\n\n521\n00:27:35.010 --> 00:27:37.590\nBasically, your communications are going\nto come to a halt on your network.\n\n522\n00:27:37.590 --> 00:27:39.070\n>> That's exactly right.\n\n523\n00:27:39.070 --> 00:27:42.360\n>> Or I would also put it in there,\nif you're blocking ARP from a specific\n\n524\n00:27:42.360 --> 00:27:44.710\nmachine your communications\non that machine,\n\n525\n00:27:44.710 --> 00:27:45.880\nthey're going to be null and void.\n\n526\n00:27:45.880 --> 00:27:47.540\n>> And he brings up the great point,\nso what do we do?\n\n527\n00:27:47.540 --> 00:27:50.060\nHow do we stop this on\nthe other side of the fence?\n\n528\n00:27:50.060 --> 00:27:51.600\nHow do we keep this from happening?\n\n529\n00:27:51.600 --> 00:27:56.800\nYou have to be very specific in your\nfirewalling and say only allow art from\n\n530\n00:27:56.800 --> 00:27:59.940\nthese machines that are known and\nthat gets extremely tedious.\n\n531\n00:27:59.940 --> 00:28:02.740\nYou might have to write scripts for that.\n\n532\n00:28:02.740 --> 00:28:05.280\nIt's a nightmare but\nthat's what's happening.\n\n533\n00:28:05.280 --> 00:28:09.050\nYou're having to go to the nth degree.\n\n534\n00:28:09.050 --> 00:28:12.260\nTo keep N map from doing it's job\nbecause it does it extremely well.\n\n535\n00:28:12.260 --> 00:28:16.740\nAll right, let's go to one more thing I\nwant to show you guys about N map and\n\n536\n00:28:16.740 --> 00:28:19.720\nthen it looks like,\nwe're well out of time almost here.\n\n537\n00:28:19.720 --> 00:28:21.770\nThat clock is getting super short on time.\n\n538\n00:28:21.770 --> 00:28:23.810\nSo let's see here.\n\n539\n00:28:23.810 --> 00:28:27.960\nN map, all right I want to hammer the guy.\n\n540\n00:28:27.960 --> 00:28:31.920\nI want to say you know what\nI don't care about no ping.\n\n541\n00:28:31.920 --> 00:28:35.740\nI just want to hammer every\ni p address that I feed you.\n\n542\n00:28:35.740 --> 00:28:37.930\nI want to go full on port scan.\n\n543\n00:28:37.930 --> 00:28:38.590\nRight?\n\n544\n00:28:38.590 --> 00:28:39.120\nWhat do I do?\n\n545\n00:28:39.120 --> 00:28:41.680\nOkay, what I'm going to do here is\nI'm going to quit out of here first,\n\n546\n00:28:41.680 --> 00:28:43.840\nI'm going to clean some of this up.\n\n547\n00:28:43.840 --> 00:28:47.670\nIf I do end map, dash s\n\n548\n00:28:49.360 --> 00:28:53.460\nI'm sorry it's not s, we do p m like that.\n\n549\n00:28:53.460 --> 00:28:56.090\nWhat's happening is,\nI'm saying forget the port scan.\n\n550\n00:28:56.090 --> 00:28:58.470\nI mean, I'm sorry forget the ping scan.\n\n551\n00:28:58.470 --> 00:28:59.360\nI don't care.\n\n552\n00:28:59.360 --> 00:29:02.830\nWhat I want you to do is,\nI'm gonna give a list of IP addresses.\n\n553\n00:29:02.830 --> 00:29:05.310\nI want you to go a full scan on every\nIP address whether it's up or not.\n\n554\n00:29:05.310 --> 00:29:07.250\nAnd you might rethink any is up.\n\n555\n00:29:07.250 --> 00:29:10.180\nThat seems a little, a little touch much.\n\n556\n00:29:10.180 --> 00:29:11.490\nWhat you say there, Mr Lowry?\n\n557\n00:29:11.490 --> 00:29:13.510\nAnd I say, yeah this touch much.\n\n558\n00:29:13.510 --> 00:29:19.350\nBut, if you want to be thorough, you\nwant to make sure that you grab and get.\n\n559\n00:29:19.350 --> 00:29:21.450\nSometimes that's what you\nhave got to go through, and\n\n560\n00:29:21.450 --> 00:29:24.400\nyou have got to remember\ndefault in that scan,\n\n561\n00:29:24.400 --> 00:29:29.630\nwhat's it do is a ping sweep\nevery host that turns back alive.\n\n562\n00:29:29.630 --> 00:29:33.290\nIt then does a port scan to, but\nif it doesn't come back alive,\n\n563\n00:29:33.290 --> 00:29:34.640\nit doesn't do a port scan.\n\n564\n00:29:34.640 --> 00:29:38.380\nSomething's hiding in the ping sweep,\nthen I'll miss it and\n\n565\n00:29:38.380 --> 00:29:39.600\nI won't get a port scan on it.\n\n566\n00:29:39.600 --> 00:29:43.290\nSo that's the kind of thing, that's why\nwe will do both types of scans, and\n\n567\n00:29:43.290 --> 00:29:45.150\nthat's why we're gonna hammer it this way.\n\n568\n00:29:45.150 --> 00:29:46.860\n>> You know,\nI was gonna ask a question about that, but\n\n569\n00:29:46.860 --> 00:29:50.140\nI think you've kind of\nalready answered it here.\n\n570\n00:29:50.140 --> 00:29:52.190\nBut let me go ahead and\nask it cuz maybe you have it there.\n\n571\n00:29:52.190 --> 00:29:54.110\nWhy would I?\n\n572\n00:29:54.110 --> 00:29:56.600\nPing or\nwhy would I try to ping a computer or\n\n573\n00:29:56.600 --> 00:30:00.000\neven use a ping sweep against a computer\nthat isn't returning response.\n\n574\n00:30:00.000 --> 00:30:01.060\n>> Yeah.\nGreat question.\n\n575\n00:30:01.060 --> 00:30:02.450\nIt's sake of thoroughness.\n\n576\n00:30:02.450 --> 00:30:03.020\nRight.\n\n577\n00:30:03.020 --> 00:30:05.970\nI want to make sure that\nI do not miss anything.\n\n578\n00:30:05.970 --> 00:30:07.330\nThat's the whole purpose of it.\n\n579\n00:30:07.330 --> 00:30:10.950\nThe great thing is as the suppose\nthe bad guy, security auditor or\n\n580\n00:30:10.950 --> 00:30:13.090\na ping tester I have time on my hands.\n\n581\n00:30:13.090 --> 00:30:18.010\nI can sit back and take a long time to\nscan a network, and do multiple different\n\n582\n00:30:18.010 --> 00:30:23.310\nscans to make sure that I'm gleaning\nevery piece of wheat in the field.\n\n583\n00:30:23.310 --> 00:30:24.890\nThat's what we wanna do.\n\n584\n00:30:24.890 --> 00:30:28.080\nSo using both scans is probably a practice\n\n585\n00:30:28.080 --> 00:30:30.430\nthat you wanna get into\nthe habit of doing.\n\n586\n00:30:30.430 --> 00:30:34.280\nNow what's funny is you can actually\nnegate both of them by saying,\n\n587\n00:30:34.280 --> 00:30:35.165\nby doing this.\n\n588\n00:30:35.165 --> 00:30:41.070\nIf I did Pn -s and like this,\nI'm saying do nothing,\n\n589\n00:30:41.070 --> 00:30:46.030\nbut a port scan with Pn on\nevery IP address with the s and\n\n590\n00:30:46.030 --> 00:30:50.930\nI'm saying don't do a port scan,\nonly do a ping On every IP address.\n\n591\n00:30:50.930 --> 00:30:52.500\nFind it, right.\n\n592\n00:30:52.500 --> 00:30:54.610\nSo it's basically they're\ncrossing each other out,\n\n593\n00:30:54.610 --> 00:30:55.940\nand that's in the documentation.\n\n594\n00:30:55.940 --> 00:30:59.470\nYou can read that as well, but\nit's a little neat trick for you.\n\n595\n00:30:59.470 --> 00:31:03.570\n>> Now, Dan, when doing something\nlike a complete scan like this,\n\n596\n00:31:03.570 --> 00:31:07.190\ncould you tell us a little bit about what\nwe can expect as far as performance-wise?\n\n597\n00:31:07.190 --> 00:31:09.750\nAre we gonna be going\ngrabbing some coffee?\n\n598\n00:31:09.750 --> 00:31:13.220\nAre we gonna be just feverishly\nwaiting for the results quickly?\n\n599\n00:31:13.220 --> 00:31:14.800\nWhat's the performance gonna be like?\n\n600\n00:31:14.800 --> 00:31:18.660\n>> Yeah, performance is gonna vary\ndepending on your bandwidth and\n\n601\n00:31:18.660 --> 00:31:21.680\nare you on a LAN,\nare you scanning through the Internet?\n\n602\n00:31:21.680 --> 00:31:24.430\nAre you scanning through a WAN connection?\n\n603\n00:31:24.430 --> 00:31:25.960\nIt's just gonna depend on that.\n\n604\n00:31:25.960 --> 00:31:27.636\nDefinitely adding more\nargumentation to it.\n\n605\n00:31:27.636 --> 00:31:31.160\nAdding a adding more feature\n\n606\n00:31:31.160 --> 00:31:34.610\nto the MF scan is going to slow\ndown because it has to do stuff.\n\n607\n00:31:34.610 --> 00:31:38.130\nAnd then of course, is it being\nfirewalled, are packets being dropped and\n\n608\n00:31:38.130 --> 00:31:42.330\nit's having to, you know the ping didn't\nwork so now I have got to try to at.\n\n609\n00:31:42.330 --> 00:31:44.200\nBecause at didn't work\nlet me try that sent.\n\n610\n00:31:44.200 --> 00:31:46.750\nLet me try ICMP timestamp.\n\n611\n00:31:46.750 --> 00:31:47.310\nDid that work.\n\n612\n00:31:47.310 --> 00:31:51.540\nSo all of these things can\ndefinitely play a part in the time.\n\n613\n00:31:51.540 --> 00:31:54.810\nIt just really boils down to it depends.\n\n614\n00:31:54.810 --> 00:31:56.105\nThat's how it works out.\n\n615\n00:31:56.105 --> 00:31:57.230\n>> [LAUGH] I was gonna say,\n\n616\n00:31:57.230 --> 00:32:00.960\nlot of good information here when it comes\nto host discovery, and you know what?\n\n617\n00:32:00.960 --> 00:32:02.590\nWe've got a lot more to go.\n\n618\n00:32:02.590 --> 00:32:04.010\nWe're always.\n\n619\n00:32:04.010 --> 00:32:08.090\nPushing the time envelope here but\nDan I'm looking at that time.\n\n620\n00:32:08.090 --> 00:32:09.990\nAnd it doesn't look like\nwe've gone well past it, but\n\n621\n00:32:09.990 --> 00:32:13.030\nbefore we go, got any words of wisdom?\n\n622\n00:32:13.030 --> 00:32:16.090\n>> No, just don't be afraid\nto do any of these scans.\n\n623\n00:32:16.090 --> 00:32:19.680\nObviously if we do the P inscan,\nthat's that high performance,\n\n624\n00:32:19.680 --> 00:32:22.100\ngive it to them with both\nbarrels kind of scanning.\n\n625\n00:32:22.100 --> 00:32:24.010\nIf you have IDS, IPS.\n\n626\n00:32:24.010 --> 00:32:27.860\nInvolved any kind of alerting systems are\nprobably going to fire up at that point\n\n627\n00:32:27.860 --> 00:32:31.760\nand start hammering you with emails,\nbut that's to be expected.\n\n628\n00:32:31.760 --> 00:32:33.440\nSo be aware of that and it's very simple.\n\n629\n00:32:33.440 --> 00:32:38.330\nAgain, just add your IP range, add the IPs\nthat you want to hit, and go for broke.\n\n630\n00:32:38.330 --> 00:32:39.270\nThat's a great way.\n\n631\n00:32:39.270 --> 00:32:44.240\nAgain, it's all about if it's hiding And\nI hid it anyway.\n\n632\n00:32:44.240 --> 00:32:48.130\nIt's going to show up cuz I don't\nassume you're down because you didn't\n\n633\n00:32:48.130 --> 00:32:49.340\nrespond to something.\n\n634\n00:32:49.340 --> 00:32:51.910\nI'm just going to go ahead and\nhit you and see what happens.\n\n635\n00:32:51.910 --> 00:32:53.730\nThat's basically the hacker mindset.\n\n636\n00:32:53.730 --> 00:32:56.420\nWe definitely have different ways in\nwhich we're going to do host discovery.\n\n637\n00:32:56.420 --> 00:32:58.830\nLike you said, I know our clock is\nover there screaming for mercy.\n\n638\n00:32:58.830 --> 00:33:03.090\nSo I will take my hands off the wheel and\nwe'll call it a day.\n\n639\n00:33:03.090 --> 00:33:03.600\n>> All right, Dan.\n\n640\n00:33:03.600 --> 00:33:04.110\nThank you for that.\n\n641\n00:33:04.110 --> 00:33:07.430\nA lot of great information on host\ndiscovery, but we've got more to come so\n\n642\n00:33:07.430 --> 00:33:10.220\nstick around, and until we see you,\nsigning out for IT Pro TV,\n\n643\n00:33:10.220 --> 00:33:12.010\nI've been your host, Wes Bryan.\n\n644\n00:33:12.010 --> 00:33:12.660\n>> I'm Daniel Lawry.\n\n645\n00:33:12.660 --> 00:33:16.400\n>> And we'll see you next time.\n\n",
          "vimeoId": "166201092"
        },
        {
          "description": "In this episode, Wes and Dan continue their discussion on host discovery with Nmap.  They look at how to find hidden hosts through SYN pings. They also demonstrate how to use SYN pings to discover hidden hosts that are firewalled.",
          "length": "2171",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-3-2-host_discover_pt2-050616-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-3-2-host_discover_pt2-050616-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-3-2-host_discover_pt2-050616-1-sm.jpg",
          "title": "Host Discovery Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.404 --> 00:00:10.404\n[MUSIC]\n\n2\n00:00:12.221 --> 00:00:15.174\nWelcome back to another exciting\nepisode here at IT Pro TV.\n\n3\n00:00:15.174 --> 00:00:16.777\nI'm your host Wes Bryan and\n\n4\n00:00:16.777 --> 00:00:20.640\nin today's episode we are moving\nthrough our NMAP series.\n\n5\n00:00:20.640 --> 00:00:23.360\nAnd joining me in the studio today\nis none other than Mr. Dan Lowrie.\n\n6\n00:00:23.360 --> 00:00:24.520\nDan, how you doing today, sir?\n\n7\n00:00:24.520 --> 00:00:25.610\n>> Hey, Wes, I'm doing great.\n\n8\n00:00:25.610 --> 00:00:29.570\nI'm glad to be back here in the studio\nto come back with a little more NMAP.\n\n9\n00:00:29.570 --> 00:00:32.520\nWe have covered a lot of\nground with the NMAP so far.\n\n10\n00:00:32.520 --> 00:00:35.450\nWe've got through installation,\nwe've gotten through basic use, and\n\n11\n00:00:35.450 --> 00:00:39.520\nwe've even seen how to use it to start\nour host discovery, and guess what?\n\n12\n00:00:39.520 --> 00:00:43.080\nWe were nowhere near done\nwith that barrel of laughs.\n\n13\n00:00:43.080 --> 00:00:44.350\nAnd then that's exactly what it is,\n\n14\n00:00:44.350 --> 00:00:49.480\nit's a lot of information just to get a\nlist of hosts that we might start to scan.\n\n15\n00:00:49.480 --> 00:00:54.060\nAnd eventually we will get to actual port\nscanning and looking for vulnerabilities.\n\n16\n00:00:54.060 --> 00:00:57.237\nBut, I want to make sure you guys\nhave a very thorough knowledge and\n\n17\n00:00:57.237 --> 00:01:00.774\na good foundational understanding of NMAP,\nwhat it does, how it works.\n\n18\n00:01:00.774 --> 00:01:04.866\nBecause it can be a little confusing,\nespecially when you're working in\n\n19\n00:01:04.866 --> 00:01:09.030\ndifferent environments, maybe you\nare an administrator running NMAP.\n\n20\n00:01:09.030 --> 00:01:11.400\nMaybe you're not an administrator and\nyou're running NMAP.\n\n21\n00:01:11.400 --> 00:01:14.550\nThese things tend to make\nNMAP work differently,\n\n22\n00:01:14.550 --> 00:01:16.955\nas I have definitely come to find out.\n\n23\n00:01:16.955 --> 00:01:19.940\n[LAUGH] Normally I run as root for\neverything, don't you?\n\n24\n00:01:19.940 --> 00:01:21.076\nSo it's a bad practice, don't do that.\n\n25\n00:01:21.076 --> 00:01:25.131\n[LAUGH] With that being said,\nlet's continue with host discovery, and\n\n26\n00:01:25.131 --> 00:01:29.070\ntaking a look at, well basically,\nfirewalled computers, right?\n\n27\n00:01:29.070 --> 00:01:33.807\nThis is something that happens a lot,\nbecause as we talked about previously,\n\n28\n00:01:33.807 --> 00:01:37.339\nif you can ping my computer\nyou can kinda touch it, right?\n\n29\n00:01:37.339 --> 00:01:41.310\nYou kinda see that it's there and\nthat's not necessarily a good thing.\n\n30\n00:01:41.310 --> 00:01:44.483\nSometimes it is and that's why we\nallowed it during those times, but\n\n31\n00:01:44.483 --> 00:01:45.643\na lot of times it's not.\n\n32\n00:01:45.643 --> 00:01:50.120\nAnd a lot of people they start shutting\nping off, they firewall it off.\n\n33\n00:01:50.120 --> 00:01:52.957\nIf I'm a network administrator,\nI'm a sysadmin,\n\n34\n00:01:52.957 --> 00:01:57.028\nI'm somebody that I need to see\neverything that's going on in my network.\n\n35\n00:01:57.028 --> 00:01:58.719\nAnd I wanna check hosts,\n\n36\n00:01:58.719 --> 00:02:03.572\nmake sure that what I'm seeing is what\nI expect to see and no surprises.\n\n37\n00:02:03.572 --> 00:02:06.780\nGotta love rogue access points and\nthings of that nature.\n\n38\n00:02:06.780 --> 00:02:10.914\nPeople plugging in laptops to points that\nmaybe there was a printer there before and\n\n39\n00:02:10.914 --> 00:02:14.450\nthey're like, there's a nice free blue\ncable, let me jack that in, right?\n\n40\n00:02:14.450 --> 00:02:16.878\nThis is the kind of\nthing we're looking for.\n\n41\n00:02:16.878 --> 00:02:20.191\nAnd by looking for these things,\nby discovering hey I got\n\n42\n00:02:20.191 --> 00:02:24.910\nsome rogue machines out there,\nI've got some rogue hosts on my network.\n\n43\n00:02:24.910 --> 00:02:29.170\nWe can start to mitigate any security\nrisks that they might encompass.\n\n44\n00:02:29.170 --> 00:02:30.800\nSo that's what we wanna\nbe on the look out for.\n\n45\n00:02:30.800 --> 00:02:33.460\n>> You know Dan, you said rogue\ndevices and you might think, well man,\n\n46\n00:02:33.460 --> 00:02:35.430\nthese have got to be\nmalicious rogue devices.\n\n47\n00:02:35.430 --> 00:02:38.510\nI was thinking about something recently,\nhow many of you out there have\n\n48\n00:02:38.510 --> 00:02:42.590\nplugged a printer into your home network,\nmaybe your office network.\n\n49\n00:02:42.590 --> 00:02:47.290\nAnd you fire up a mobile device, you fire\nup a tablet, you fire up a laptop and\n\n50\n00:02:47.290 --> 00:02:51.414\nall of a sudden in the devices that\nyou see, you've got a hot spot.\n\n51\n00:02:51.414 --> 00:02:54.859\nYou didn't realize it that the wifi's\nturned on that printer and, well,\n\n52\n00:02:54.859 --> 00:02:57.330\nnow people have a,\npretty much an open access point.\n\n53\n00:02:57.330 --> 00:03:01.215\nSo I can see where finding hosts\nthat you can see comes in handy.\n\n54\n00:03:01.215 --> 00:03:04.464\nBut Dan I have a feeling you're gonna show\nus what happens when those hosts aren't so\n\n55\n00:03:04.464 --> 00:03:05.362\neasy to find, right?\n\n56\n00:03:05.362 --> 00:03:09.800\n>> That's right, we do have\nhosts that we will tend to hide.\n\n57\n00:03:09.800 --> 00:03:11.930\nBut if I want to do a thorough scan,\n\n58\n00:03:11.930 --> 00:03:14.420\nI want to make sure that\nI have every device,\n\n59\n00:03:14.420 --> 00:03:18.570\nespecially if I'm doing things of the\nnature of pin testing, security auditing.\n\n60\n00:03:18.570 --> 00:03:21.250\nI want to find every\nhost available because\n\n61\n00:03:21.250 --> 00:03:22.770\nthat's what a hacker's gonna try to do,\nright?\n\n62\n00:03:22.770 --> 00:03:28.690\nSo I want to kinda put my black hat on for\na minute and pretend I'm a hacker\n\n63\n00:03:28.690 --> 00:03:32.960\nto start to find devices that maybe\nI thought I firewalled off very well.\n\n64\n00:03:32.960 --> 00:03:36.330\nBut because I'm better as a hacker,\n\n65\n00:03:36.330 --> 00:03:38.770\nI'm a very good hacker,\nI can find these machines.\n\n66\n00:03:38.770 --> 00:03:40.668\nSo that's the kind of role\nwe're going to play today.\n\n67\n00:03:40.668 --> 00:03:43.334\nWe're going to play\nthe role of a sysadmin,\n\n68\n00:03:43.334 --> 00:03:46.730\ntrying to protect his network\nthrough host discovery.\n\n69\n00:03:46.730 --> 00:03:51.170\nAnd we're gonna play the role of\na black hat hacker who is discovering\n\n70\n00:03:51.170 --> 00:03:53.660\nthings to see what he could exploit.\n\n71\n00:03:53.660 --> 00:03:57.030\nAnd we're gonna use each one of\nthose roles to complement the other.\n\n72\n00:03:57.030 --> 00:04:01.140\nSo while I play a black hat I can\nsay well, here's why you need to\n\n73\n00:04:01.140 --> 00:04:04.390\nbe blocking this, this, this,\nand this, right on this machine.\n\n74\n00:04:04.390 --> 00:04:07.700\nI found it through these various means,\nand in sundry devices.\n\n75\n00:04:07.700 --> 00:04:08.730\nAnd the other way around,\n\n76\n00:04:08.730 --> 00:04:12.360\nif I wanted to stop hackers,\nwhat would I do, how would I work that?\n\n77\n00:04:12.360 --> 00:04:13.645\nSo that's what we're looking at today.\n\n78\n00:04:13.645 --> 00:04:17.882\nAnd we're gonna start off, so\nwe talk about firewalled machines, right?\n\n79\n00:04:17.882 --> 00:04:22.696\nSo what happens when I send a ping,\nif I ping a machine who uses the ICMP\n\n80\n00:04:22.696 --> 00:04:26.277\nprotocol to send an echo and\nlook for a reply right?\n\n81\n00:04:26.277 --> 00:04:28.435\nThat's basically what's going on here.\n\n82\n00:04:28.435 --> 00:04:33.210\nAnd when that reply comes back I know that\nI've made connectivity with that device\n\n83\n00:04:33.210 --> 00:04:35.680\nand connectivity is available.\n\n84\n00:04:35.680 --> 00:04:37.720\nIt's alive, it's up, cuz it responded.\n\n85\n00:04:37.720 --> 00:04:40.550\nAnd I have a full connection\nthat can be made.\n\n86\n00:04:40.550 --> 00:04:44.800\nAnd that's a good thing,\nthat's why it's such a nice utility, ping.\n\n87\n00:04:44.800 --> 00:04:49.560\nBut if I'm blocking it, if I'm firewalling\nthat so that people don't see that.\n\n88\n00:04:49.560 --> 00:04:52.930\nHow do I as an NMAP user,\nif I'm trying to scan a network\n\n89\n00:04:52.930 --> 00:04:56.948\nwhere things might be being blocked,\nhow do I discover those hosts?\n\n90\n00:04:56.948 --> 00:04:59.750\nSo let's start off with one of the basic\nways in which we'll do this, and\n\n91\n00:04:59.750 --> 00:05:02.790\nI say basic, it's got a lot of things\nthat we need to know about it.\n\n92\n00:05:02.790 --> 00:05:06.290\nAnd it is the SYN ping as we'll call it.\n\n93\n00:05:06.290 --> 00:05:10.400\nI think the NMAP documentation even\nrefers to it as such, SYN ping.\n\n94\n00:05:10.400 --> 00:05:12.210\nYou're like sin as in sinful?\n\n95\n00:05:12.210 --> 00:05:16.720\nNo, we're not sinful like that,\nS Y N, not S I N, right.\n\n96\n00:05:16.720 --> 00:05:22.484\nThe SYN flag that begins ATCP handshake,\nright, the three way handshake.\n\n97\n00:05:22.484 --> 00:05:25.539\nAnd you're thinking to yourself,\nI remember them talking about that,\n\n98\n00:05:25.539 --> 00:05:27.750\nin NetPlus, and you're right, they did.\n\n99\n00:05:27.750 --> 00:05:29.270\nThink, why would I ever wanna use that.\n\n100\n00:05:29.270 --> 00:05:30.510\nWell, this was a fantastic,\n\n101\n00:05:30.510 --> 00:05:34.840\nsomebody said networking fundamentals,\nlet's use them to our advantage.\n\n102\n00:05:34.840 --> 00:05:38.140\nWe'll make NMAP hit the SYN flag, right?\n\n103\n00:05:38.140 --> 00:05:38.820\nIt doesn't do anything,\n\n104\n00:05:38.820 --> 00:05:42.160\nthere's no data in the packet, even\nthough you can add that if you'd like.\n\n105\n00:05:42.160 --> 00:05:44.889\nBut we're gonna keep it quick and\ndirty and nice and easy for us.\n\n106\n00:05:44.889 --> 00:05:47.733\nIf I just have an empty data\npacket with the SYN flag sent and\n\n107\n00:05:47.733 --> 00:05:49.778\nI send it to a machine, what does that do?\n\n108\n00:05:49.778 --> 00:05:54.320\nIt initiates a conversation,\nstarts that three way handshake.\n\n109\n00:05:54.320 --> 00:06:00.180\nWell, if I'm firewalling that old ICMP,\nthe ping,\n\n110\n00:06:00.180 --> 00:06:05.661\nand it's not expecting\na SYN to some random port.\n\n111\n00:06:05.661 --> 00:06:09.340\nSome random port says,\nI'm not even open, what's is gonna do?\n\n112\n00:06:09.340 --> 00:06:10.300\nIt's gonna reply and\n\n113\n00:06:10.300 --> 00:06:15.283\nsay, I'm not open, just obviously\nthere was some more sort of mistake.\n\n114\n00:06:15.283 --> 00:06:19.700\nAnd it'll send a RST,\na reset pack right, of the reset packet.\n\n115\n00:06:19.700 --> 00:06:22.740\nPacket, I keep saying that, flag,\nthe reset flag will be sent\n\n116\n00:06:22.740 --> 00:06:26.170\nin a packet back to the sending machine,\nback to my NMAP machine.\n\n117\n00:06:26.170 --> 00:06:30.150\nSo I said okay great, it's awesome,\nwhat does that tell me?\n\n118\n00:06:30.150 --> 00:06:33.600\nIt tells me the machine is up,\nit's responding to something.\n\n119\n00:06:33.600 --> 00:06:38.960\nI didn't use ping,\nI used another method to get a response.\n\n120\n00:06:38.960 --> 00:06:43.380\nThat's basically what we're gonna be doing\nall day today is how can I elicit some\n\n121\n00:06:43.380 --> 00:06:47.250\nform of a response from\nmy target computer.\n\n122\n00:06:47.250 --> 00:06:48.620\nThat's what it's all about.\n\n123\n00:06:48.620 --> 00:06:53.420\nSo by using SYN, I say yeah, I'm\nopening this TCP conversation with you.\n\n124\n00:06:53.420 --> 00:06:55.650\nAnd it says, well that port's not open.\n\n125\n00:06:55.650 --> 00:06:56.320\nAnd by default,\n\n126\n00:06:56.320 --> 00:07:00.128\nI want you to know this, let me get\nsome of the good stuff out of the way.\n\n127\n00:07:00.128 --> 00:07:03.260\nWith the SYN ping scan, the TCP packet,\n\n128\n00:07:03.260 --> 00:07:06.850\nthe SYN ping, will go to port 80\nby default, which we can change.\n\n129\n00:07:06.850 --> 00:07:10.000\nWe can say go to port\nanything that we want.\n\n130\n00:07:10.000 --> 00:07:13.010\nOr even a range of ports\nif we like as well.\n\n131\n00:07:13.010 --> 00:07:16.510\nWhat else is I wanna make\nsure you guys know about.\n\n132\n00:07:16.510 --> 00:07:23.618\nThat's basically it as far as what\nNMAP is doing when it sends this ping.\n\n133\n00:07:23.618 --> 00:07:26.840\nYeah this SYN ping,\nit's the computer that sends the response,\n\n134\n00:07:26.840 --> 00:07:29.730\nthat's what really we wanna\nget into the idea of.\n\n135\n00:07:29.730 --> 00:07:30.780\nNow you might be saying to yourself,\n\n136\n00:07:30.780 --> 00:07:36.410\nwell what if you happen to hit, what if\nport 80 is open, right, what happens then?\n\n137\n00:07:36.410 --> 00:07:40.520\nWell, guess what, if a port's open,\nwhat's it gonna do when it sees a SYN?\n\n138\n00:07:40.520 --> 00:07:45.085\nIt's gonna send the second half,\nthe second third I guess it is,\n\n139\n00:07:45.085 --> 00:07:47.500\nof that three way handshake.\n\n140\n00:07:47.500 --> 00:07:49.890\nIt's gonna send the SYN-ACK back to you.\n\n141\n00:07:49.890 --> 00:07:54.772\nAnd if I receive a SYN-ACK from a machine\nI sent a SYN to, what does that tell me?\n\n142\n00:07:54.772 --> 00:07:57.554\nIt tells me that the machine is alive,\nit is there.\n\n143\n00:07:57.554 --> 00:08:02.059\nIt might not be responding to normal\npings, but it did respond to my SYN.\n\n144\n00:08:02.059 --> 00:08:04.130\nWith the Sin app,\nwhich is the proper response.\n\n145\n00:08:04.130 --> 00:08:08.936\nOnce I get that, when NMap sees\nthat that was what was returned,\n\n146\n00:08:08.936 --> 00:08:10.640\nit's gonna say what?\n\n147\n00:08:10.640 --> 00:08:13.971\nI know you thought I was trying to build\na relationship here, but it's not you,\n\n148\n00:08:13.971 --> 00:08:14.832\nit's me, really.\n\n149\n00:08:14.832 --> 00:08:18.820\nAnd it sends that RST, that reset flag,\nright back, and it kills the connection\n\n150\n00:08:18.820 --> 00:08:22.980\nbecause it doesn't really wanna initiate\nany kind of conversation with it.\n\n151\n00:08:22.980 --> 00:08:24.500\nIt just wanted to know whether or\nnot it was there.\n\n152\n00:08:24.500 --> 00:08:26.310\nAnd since it responded, it knows that now.\n\n153\n00:08:26.310 --> 00:08:32.490\nSo it's all about using NMap to deduce\nwhether or not a client is up and live.\n\n154\n00:08:32.490 --> 00:08:36.610\nAnd now we know we can add\nthat to our list of good hosts\n\n155\n00:08:36.610 --> 00:08:41.770\nthat maybe we'll want to scan\na little more robustly down the road.\n\n156\n00:08:41.770 --> 00:08:46.348\nRight now, what we're worried about\nis getting that host discovery,\n\n157\n00:08:46.348 --> 00:08:49.400\nand that syn ping can do that for us.\n\n158\n00:08:49.400 --> 00:08:54.121\nAll right, I've talked it up a good game,\nI guess the next thing we can do, Wes,\n\n159\n00:08:54.121 --> 00:08:58.233\nis actually throw some commands at\nNMap and see how we can do a syn scan.\n\n160\n00:08:58.233 --> 00:09:01.510\nSo let's jump onto my\ncomputer here really quickly.\n\n161\n00:09:01.510 --> 00:09:07.660\nAnd first thing we gotta do is definitely,\nI'm gonna throw some, let's do this.\n\n162\n00:09:07.660 --> 00:09:10.490\nLet's ping some Internet machines,\nand you're saying,\n\n163\n00:09:10.490 --> 00:09:13.950\nI thought you said we weren't gonna\nmess with machines that weren't ours.\n\n164\n00:09:13.950 --> 00:09:14.880\nBut we're just pinging them,\n\n165\n00:09:14.880 --> 00:09:18.660\nand pinging typically isn't\nfrowned upon by too many things.\n\n166\n00:09:18.660 --> 00:09:23.736\nSo we're gonna ping some\nInternet connected devices,\n\n167\n00:09:23.736 --> 00:09:28.596\nso I'll just say,\nlet's see here, sudo nmap- sn.\n\n168\n00:09:28.596 --> 00:09:32.750\nRemember, the sn, and I'll give you\na little easier viewpoint there.\n\n169\n00:09:32.750 --> 00:09:37.660\nDo you remember the sn\ntells it to only do a scan?\n\n170\n00:09:37.660 --> 00:09:39.500\nIt doesn't do any port scanning.\n\n171\n00:09:39.500 --> 00:09:41.770\nIt only looks for hosts, right?\n\n172\n00:09:41.770 --> 00:09:43.030\nThat's all it wants to do.\n\n173\n00:09:43.030 --> 00:09:44.440\nBut no actual port scanning.\n\n174\n00:09:44.440 --> 00:09:46.080\nSo remember,\nthat's a very important thing.\n\n175\n00:09:46.080 --> 00:09:48.160\nEspecially if you're messing\nwith Internet hosts,\n\n176\n00:09:48.160 --> 00:09:51.060\nwe don't wanna be port scanning them,\nthey might take offense to that.\n\n177\n00:09:51.060 --> 00:09:53.520\nSo make sure the sn is there.\n\n178\n00:09:53.520 --> 00:09:57.180\nAnd then we're going to do a -PE.\n\n179\n00:09:57.180 --> 00:09:59.010\nNow, I haven't mentioned PE yet,\n\n180\n00:09:59.010 --> 00:10:01.634\nbut basically this is your standard ping,\nright?\n\n181\n00:10:01.634 --> 00:10:08.710\nSo the -PE, it send the ICMP just like\nyou normally would if I typed in ping.\n\n182\n00:10:08.710 --> 00:10:10.140\nActually, I'm gonna back up.\n\n183\n00:10:10.140 --> 00:10:11.290\nLet me start here.\n\n184\n00:10:11.290 --> 00:10:13.780\nLet's do that, let's ping some machines.\n\n185\n00:10:13.780 --> 00:10:17.596\nI'm gonna ping itpro.tv, right?\n\n186\n00:10:17.596 --> 00:10:21.660\nAnd we see that we are getting\nsome response from that good guy.\n\n187\n00:10:21.660 --> 00:10:22.880\nIt's going crazy, great.\n\n188\n00:10:22.880 --> 00:10:26.020\nWe know it's alive, nothing special.\n\n189\n00:10:26.020 --> 00:10:31.071\nBut what if we ping,\nI don't know, amazon.com?\n\n190\n00:10:31.071 --> 00:10:32.010\nLet's see if we get anything from that.\n\n191\n00:10:33.530 --> 00:10:34.030\nWe don't.\n\n192\n00:10:35.170 --> 00:10:37.970\nIt's not responding to a standard ping.\n\n193\n00:10:37.970 --> 00:10:40.750\nA lot of websites do this actually.\n\n194\n00:10:40.750 --> 00:10:42.510\nI think eBay might be another one.\n\n195\n00:10:42.510 --> 00:10:45.690\nSo like ping ebay.com.\n\n196\n00:10:45.690 --> 00:10:49.926\nYeah, look, see, I'm getting this\nrequest timeout for icmp_seq 1, 2,\n\n197\n00:10:49.926 --> 00:10:52.090\n3, 4, and off we go, right?\n\n198\n00:10:52.090 --> 00:10:54.560\nSo it's not responding to pings.\n\n199\n00:10:54.560 --> 00:10:57.762\nSo how do I know, obviously, I know\nit's alive cuz I can go to ebay.com.\n\n200\n00:10:57.762 --> 00:11:00.970\nRight, I can go to amazon.com,\nI can itpro.tv.\n\n201\n00:11:00.970 --> 00:11:04.736\nHere, we're just, those kind of great\nguys, we allow you to ping our systems to\n\n202\n00:11:04.736 --> 00:11:10.040\nknow that they're alive, that they are\navailable and ready for you to work with.\n\n203\n00:11:10.040 --> 00:11:13.080\nBut so why are they blocking the pings for\nthat very purpose?\n\n204\n00:11:13.080 --> 00:11:15.426\nThey still want hammering them with pings.\n\n205\n00:11:15.426 --> 00:11:17.718\nThere's all the old ping\nof death kind of ideas.\n\n206\n00:11:17.718 --> 00:11:19.520\nSo ping gets shut off quite a bit,\n\n207\n00:11:19.520 --> 00:11:22.280\neven when you want people to\nbe able to find your systems.\n\n208\n00:11:22.280 --> 00:11:24.370\nThis just a standard\nsecurity practice anymore.\n\n209\n00:11:24.370 --> 00:11:26.860\nLet me scroll out just a little bit.\n\n210\n00:11:26.860 --> 00:11:29.072\nSo what we're gonna do now is\nwe're gonna throw that, and\n\n211\n00:11:29.072 --> 00:11:31.120\nwe're gonna use nmap to do\nbasically the same thing.\n\n212\n00:11:31.120 --> 00:11:36.090\nSo let's do that again,\nsudo nmap -sn -PE, and\n\n213\n00:11:36.090 --> 00:11:39.800\nI'm gonna do -n, so\nit doesn't do name resolution lookup.\n\n214\n00:11:39.800 --> 00:11:42.120\nIf you want to do name resolution lookup,\n\n215\n00:11:42.120 --> 00:11:44.560\njust leave that off because\nit does it by default.\n\n216\n00:11:44.560 --> 00:11:47.210\nOr if, for some reason,\nit wasn't doing it by default,\n\n217\n00:11:47.210 --> 00:11:51.740\nyou can add the -r, but I don't want it to\ndo it, I'm gonna do -v for very verbose.\n\n218\n00:11:51.740 --> 00:11:55.550\nI want more output to see what's going on.\n\n219\n00:11:55.550 --> 00:11:58.104\nAnd then we'll do a list of hosts,\nwe'll do the ones we just did.\n\n220\n00:11:58.104 --> 00:12:04.718\nSo itpro.tv, we'll do amazon.com, we'll\ndo, let me scroll out here a little bit.\n\n221\n00:12:04.718 --> 00:12:06.850\nWe'll do ebay.com.\n\n222\n00:12:06.850 --> 00:12:08.760\nWe'll throw, that's good.\n\n223\n00:12:08.760 --> 00:12:11.670\nSo let me type my\npassword cuz I'm sudoing.\n\n224\n00:12:13.590 --> 00:12:14.720\nOff nmap goes.\n\n225\n00:12:14.720 --> 00:12:16.980\nIt's starting its ping scan.\n\n226\n00:12:16.980 --> 00:12:17.950\nWhat does it find?\n\n227\n00:12:17.950 --> 00:12:25.030\nIt says 3 IP addresses,\nit's showing 0 hosts up.\n\n228\n00:12:25.030 --> 00:12:29.770\nNow we saw ITProTV did respond to pings,\nand I've noticed some hinkiness,\n\n229\n00:12:29.770 --> 00:12:33.980\nif that's an actual word,\nit's probably not, but you get the idea,\n\n230\n00:12:33.980 --> 00:12:37.070\nsome weird activity when using nmap.\n\n231\n00:12:37.070 --> 00:12:40.174\nSo sometimes,\nit's good to run scans more than once,\n\n232\n00:12:40.174 --> 00:12:42.536\njust to make sure that what you've seen,\n\n233\n00:12:42.536 --> 00:12:46.935\nthat the results that you're getting\nare the results that you're getting.\n\n234\n00:12:46.935 --> 00:12:47.596\nYou know what I mean?\n\n235\n00:12:47.596 --> 00:12:51.770\nThat the consistency is there is\nreally what I'm trying to say.\n\n236\n00:12:51.770 --> 00:12:55.477\nSo I see that 3 addresses were scanned,\nbut 0 hosts were up, right?\n\n237\n00:12:55.477 --> 00:12:59.225\nAnd that's because the two of them\nwere definitely blocking pings, and\n\n238\n00:12:59.225 --> 00:13:03.350\nITProTV might have just not responded in\na quick amount of time, but to show up.\n\n239\n00:13:03.350 --> 00:13:08.090\nSo let's run it again really quickly and\nsee if, yeah, there we go, 1 host up.\n\n240\n00:13:08.090 --> 00:13:11.630\nSo ITProTV is getting 3 hosts, 1 port.\n\n241\n00:13:11.630 --> 00:13:16.220\nThis is a nmap scan for,\nand there's our IP address.\n\n242\n00:13:16.220 --> 00:13:20.130\nHost is up and\nvery little latency on that.\n\n243\n00:13:20.130 --> 00:13:22.450\nWe looked at amazon.com,\n\n244\n00:13:22.450 --> 00:13:25.890\nit did do name resolution on that,\nprobably just by default.\n\n245\n00:13:26.920 --> 00:13:29.390\nWell, it did a reverse name resolution,\nthat's what it did.\n\n246\n00:13:30.430 --> 00:13:34.730\nI gave it the name and\nto look for the IP for me.\n\n247\n00:13:34.730 --> 00:13:36.250\nThat's standard resolution.\n\n248\n00:13:36.250 --> 00:13:39.700\nBut it gave me some more IP addresses\nassociated with it as well,\n\n249\n00:13:39.700 --> 00:13:43.070\ngleaning more and\nmore information as we continue on.\n\n250\n00:13:43.070 --> 00:13:47.370\nThat's nice, if I was actually wanting\nto scan amazon.com, that would be good.\n\n251\n00:13:47.370 --> 00:13:51.140\nI would grab those IPs because it's\nsaying it's associated with amazon.com\n\n252\n00:13:51.140 --> 00:13:52.435\nas a domain system.\n\n253\n00:13:52.435 --> 00:13:55.635\nSo I'd probably want to\ntake a note of that.\n\n254\n00:13:55.635 --> 00:13:58.835\nEbay, same kind of thing,\nhost is down, host is down,\n\n255\n00:13:58.835 --> 00:14:00.465\neven though we know they're not down.\n\n256\n00:14:00.465 --> 00:14:03.905\nGo to amazon.com, and\ngo to google.com, and or ebay.com.\n\n257\n00:14:03.905 --> 00:14:07.135\nThey all work just fine, but\nthey're blocking that ping.\n\n258\n00:14:07.135 --> 00:14:12.155\nSo PS is going to be our go to\nguide to try to see if we can get\n\n259\n00:14:12.155 --> 00:14:15.480\naround that very item,\nthat that's what's happening.\n\n260\n00:14:15.480 --> 00:14:17.550\nSo let's see what happens here.\n\n261\n00:14:17.550 --> 00:14:20.360\nI'm going to run the pss.\n\n262\n00:14:20.360 --> 00:14:27.730\nSo let's do the sudo nmap -sn -PS,\nand that's our syn ping flag.\n\n263\n00:14:27.730 --> 00:14:29.430\nThat's our argument for syn ping.\n\n264\n00:14:29.430 --> 00:14:30.180\nAgain, remember,\n\n265\n00:14:30.180 --> 00:14:35.400\nit sends the syn flagged packet to\nport 80 if that's what you leave.\n\n266\n00:14:35.400 --> 00:14:40.822\nIf I do nothing else other than PS,\nand of course, my -n,\n\n267\n00:14:40.822 --> 00:14:46.246\nit helps me speed up my scans,\n-v, and then itpro.tv and\n\n268\n00:14:46.246 --> 00:14:50.695\nebay.com and amazon,\nhey, can I spell that?\n\n269\n00:14:50.695 --> 00:14:55.000\n[LAUGH] Amazoon I'm sure they might\nactually be a system, who knows?\n\n270\n00:14:55.000 --> 00:14:58.665\nDot com, let's do google.com,\nthat's not right, there we go,\n\n271\n00:14:58.665 --> 00:15:02.864\nford.com I think was one of them, so\nwe'll take a look and see what happens.\n\n272\n00:15:02.864 --> 00:15:06.698\nWell, we'll keep it consistent,\nAmazon and Google, there we go.\n\n273\n00:15:06.698 --> 00:15:08.320\nHit Return.\n\n274\n00:15:08.320 --> 00:15:13.090\nAnd now, if you look at the very bottom\nhere, this lovely little area here,\n\n275\n00:15:14.150 --> 00:15:17.480\nit's showing me 3 hosts up.\n\n276\n00:15:17.480 --> 00:15:21.980\nSo PS did exactly what it is\nthat we needed it to do, right?\n\n277\n00:15:21.980 --> 00:15:29.180\nIt said, well, I'm not gonna send\na standard ICMP ping to these machines.\n\n278\n00:15:29.180 --> 00:15:34.110\nI'm gonna send a syn flag packet to\nport 80 and see what that elicits.\n\n279\n00:15:34.110 --> 00:15:37.740\nSo all of these guys, they responded, and\nbecause they responded in some way, shape,\n\n280\n00:15:37.740 --> 00:15:44.060\nor form, whether it be with\na reset packet or a SYN-ACK, it\n\n281\n00:15:44.060 --> 00:15:47.690\nelicited a response letting us know that\nthose machines are actually up and active.\n\n282\n00:15:47.690 --> 00:15:49.150\nAnd that was over the Internet, right?\n\n283\n00:15:49.150 --> 00:15:53.529\nThose are through routers and everything,\nand it's not on a similar network,\n\n284\n00:15:53.529 --> 00:15:57.204\nthey're dissimilar networks,\nand that's an important thing.\n\n285\n00:15:57.204 --> 00:16:01.560\nCuz what we've talked about this before,\nright, nmap works differently and\n\n286\n00:16:01.560 --> 00:16:04.869\nusually in two different ways\nin two different scenarios.\n\n287\n00:16:04.869 --> 00:16:06.959\nWhether you're running as root or\nnot root,\n\n288\n00:16:06.959 --> 00:16:11.070\nor whether or not you're running on a LAN,\nright, so you've gotta keep that in mind.\n\n289\n00:16:11.070 --> 00:16:13.270\nNone of these machines\nare on my local LAN.\n\n290\n00:16:13.270 --> 00:16:17.650\nEven the ITPro.TV one that's on\nAmazon Web Services web server.\n\n291\n00:16:17.650 --> 00:16:19.150\nSo it's being hosted.\n\n292\n00:16:19.150 --> 00:16:19.960\nIt's out in the cloud,\n\n293\n00:16:19.960 --> 00:16:22.290\nit's not here on-premise, so\nit's on a different network.\n\n294\n00:16:22.290 --> 00:16:25.750\nSo make sure you keep those in mind\nas you're doing scanning codes.\n\n295\n00:16:25.750 --> 00:16:26.612\nIt will trip you up, trust me.\n\n296\n00:16:26.612 --> 00:16:28.510\n[LAUGH]\n>> Here, speaking of trip you up,\n\n297\n00:16:28.510 --> 00:16:30.740\nI'm gonna throw you a curveball\nhere on this one, Dan.\n\n298\n00:16:30.740 --> 00:16:35.120\nIs there a way that you can run a scan and\nmaybe tailor-make it to a specific port?\n\n299\n00:16:36.410 --> 00:16:38.060\n>> Yes, actually you can.\n\n300\n00:16:38.060 --> 00:16:38.560\nYou can do that.\n\n301\n00:16:38.560 --> 00:16:42.540\nAnd that's one of the great things about\nusing Nmap is it's a very flexible with\n\n302\n00:16:42.540 --> 00:16:43.580\nthings like this.\n\n303\n00:16:43.580 --> 00:16:46.110\nSo Wes brings up a great question.\n\n304\n00:16:46.110 --> 00:16:52.520\nWhat happens if I say you know what,\nI know your dirty little trick, right, and\n\n305\n00:16:52.520 --> 00:16:57.620\nI'm gonna firewall off send requests\nthat don't have any data in the packet,\n\n306\n00:16:57.620 --> 00:16:59.640\nand I'm just gonna block\nthat from port 80.\n\n307\n00:16:59.640 --> 00:17:02.770\nCuz I know that's what Nmap will\ndo if you throw that out there.\n\n308\n00:17:02.770 --> 00:17:05.960\nWell the good developers at MS\nsay I see what you did there,\n\n309\n00:17:05.960 --> 00:17:07.460\nyeah, you're a smart little cookie,\naren't you?\n\n310\n00:17:07.460 --> 00:17:08.890\nAnd we're gonna fix that.\n\n311\n00:17:08.890 --> 00:17:10.770\nSo we can do it at any port, right?\n\n312\n00:17:10.770 --> 00:17:17.070\nSo that's what we'll do, let me pull out\nof here real quick and let's see here.\n\n313\n00:17:17.070 --> 00:17:20.480\nSo, what ports should we pick?\n\n314\n00:17:20.480 --> 00:17:22.980\nTypically, if you're running\nagainst a web host, 80 works.\n\n315\n00:17:22.980 --> 00:17:25.440\nAnd that's why 80's the default,\nbecause they're web hosts.\n\n316\n00:17:25.440 --> 00:17:30.550\nBut like Wes said, they may have gotten\nwise to our ways and blocked that off.\n\n317\n00:17:30.550 --> 00:17:35.700\nJust the SYN itself, right,\njust that empty data SYN flag packet.\n\n318\n00:17:35.700 --> 00:17:40.164\nBut you know what else is another common\nport that web servers typically run?\n\n319\n00:17:40.164 --> 00:17:44.863\n443 for TLS and SSL, if I can speak today,\n\n320\n00:17:44.863 --> 00:17:48.500\nthey typically run those as well.\n\n321\n00:17:48.500 --> 00:17:53.100\nCuz most websites have some sort of\nencryption security enabled features\n\n322\n00:17:53.100 --> 00:17:56.080\nthat you wanna take advantage of,\nso they need 443 open.\n\n323\n00:17:56.080 --> 00:17:58.143\nSo what if we threw that at it,\nthen we have a chance it would fall, so\n\n324\n00:17:58.143 --> 00:17:58.669\nlet's do that.\n\n325\n00:17:58.669 --> 00:18:03.040\nI'm just gonna do an up and\nCTRL+A here to get back to the beginning.\n\n326\n00:18:03.040 --> 00:18:05.540\nAnd all you have to do to add the port\n\n327\n00:18:05.540 --> 00:18:11.020\nto change it from that default\n80 is go to the end of your PS.\n\n328\n00:18:11.020 --> 00:18:14.274\nDo not space over this should\nall be grouped together, okay?\n\n329\n00:18:14.274 --> 00:18:18.705\nDon't do PS space port 443 or just 443.\n\n330\n00:18:18.705 --> 00:18:21.660\nYou want to do PS443, right?\n\n331\n00:18:21.660 --> 00:18:26.501\nSo that's what we'll do,\nwe'll say 443, like that.\n\n332\n00:18:26.501 --> 00:18:27.230\nI can do that.\n\n333\n00:18:27.230 --> 00:18:34.690\nI can do a range, so I can say 443-500,\nso just give them a dash 500.\n\n334\n00:18:34.690 --> 00:18:38.432\nSo if I wanted to try a range of ports,\nthat would work for us there.\n\n335\n00:18:38.432 --> 00:18:42.268\nI can also say I want that range and\n\n336\n00:18:42.268 --> 00:18:48.023\nport 6098 by just adding a comma,\nall right.\n\n337\n00:18:48.023 --> 00:18:51.600\nI'm just grabbing these at random\nobviously, making it up as I go.\n\n338\n00:18:51.600 --> 00:18:54.910\nBut, that could legitimately\nillicit a response, right?\n\n339\n00:18:54.910 --> 00:18:58.010\nThat port might be closed and\nnot blocked by a firewall, and\n\n340\n00:18:58.010 --> 00:19:00.492\ngive me a result that I'm looking for,\nright?\n\n341\n00:19:00.492 --> 00:19:04.587\nAnd show that the machine is up and say\nhey I'm not trying to, I'm a close port,\n\n342\n00:19:04.587 --> 00:19:05.332\nhere's RST.\n\n343\n00:19:05.332 --> 00:19:07.130\nAnd okay well thanks.\n\n344\n00:19:07.130 --> 00:19:08.920\nAppreciate that,\nnow I know that you're up.\n\n345\n00:19:08.920 --> 00:19:10.480\nThanks for playing the game, right?\n\n346\n00:19:10.480 --> 00:19:13.020\nSo that's something that\nmight actually work.\n\n347\n00:19:13.020 --> 00:19:16.044\nSo be on the look out for\nbeing able to use this, and\n\n348\n00:19:16.044 --> 00:19:20.077\nas we move to the different types\nof pinging, scans that we can do,\n\n349\n00:19:20.077 --> 00:19:24.053\nyou're gonna be able to do these\ntypes of things with all of them.\n\n350\n00:19:24.053 --> 00:19:27.633\nSo, if you wanna designate\na specific port,\n\n351\n00:19:27.633 --> 00:19:32.546\njust add that port to the end\nof your actual argument, right.\n\n352\n00:19:32.546 --> 00:19:36.840\nIf you wanna do a range of ports, it's\nthe beginning port dash ending port, and\n\n353\n00:19:36.840 --> 00:19:38.453\nbetween that it'll do that.\n\n354\n00:19:38.453 --> 00:19:44.794\nIf you want to do multiple specific\nport targets, comma delimitations, so\n\n355\n00:19:44.794 --> 00:19:50.952\n443,521,6073, whatever, and\non with your laundry list.\n\n356\n00:19:50.952 --> 00:19:52.421\nSo that is basically how you do that.\n\n357\n00:19:52.421 --> 00:19:56.711\nAnd keep that in mind, write that down,\nand get that burned into your brain,\n\n358\n00:19:56.711 --> 00:20:00.539\nbecause that is what is going to help\nyou do these things with all these\n\n359\n00:20:00.539 --> 00:20:02.060\ndifferent types of scans.\n\n360\n00:20:02.060 --> 00:20:03.550\nSo make sure you understand that.\n\n361\n00:20:03.550 --> 00:20:05.770\nLet's see where we're at,\nlet's see what else we need to do here.\n\n362\n00:20:08.170 --> 00:20:09.890\nYes, there is one thing else.\n\n363\n00:20:09.890 --> 00:20:14.750\nWe talked about if I'm\nnot running as router, or\n\n364\n00:20:14.750 --> 00:20:17.730\nif I'm on LAN,\nthings can go weird on us, right?\n\n365\n00:20:17.730 --> 00:20:20.880\nSpecifically here I wanna\nmention running as root.\n\n366\n00:20:20.880 --> 00:20:28.860\nOkay, so let me take that off here and\nlet me take off this sudo.\n\n367\n00:20:28.860 --> 00:20:32.290\nSo that means I'm not gonna be\nrunning this command as root.\n\n368\n00:20:32.290 --> 00:20:33.770\nAnd let's see what happens.\n\n369\n00:20:33.770 --> 00:20:40.274\nActually let's change this back\nto a regular, I hit return.\n\n370\n00:20:40.274 --> 00:20:41.736\nNow an interesting thing has occurred.\n\n371\n00:20:41.736 --> 00:20:45.460\nRemember when I first ran my\nvery first scan against this,\n\n372\n00:20:45.460 --> 00:20:49.488\nrunning basically this exact,\nI think it was this exact scan,\n\n373\n00:20:49.488 --> 00:20:53.120\nexcept I elevated my\nprivileges using sudo.\n\n374\n00:20:53.120 --> 00:20:55.580\nNow I'm doing the same scan,\nI'm removing the sudo so\n\n375\n00:20:55.580 --> 00:20:57.009\nthat I'm now running as a standard user.\n\n376\n00:20:58.010 --> 00:21:02.360\nAnd when I first did this with my\nelevator privileges, we got zero hosts.\n\n377\n00:21:02.360 --> 00:21:04.930\nRemember even ITPro.TV\ndidn't even respond.\n\n378\n00:21:04.930 --> 00:21:09.452\nBut now, I'm getting 3 hosts are up,\nit's right here, 3 hosts up.\n\n379\n00:21:09.452 --> 00:21:10.570\nWe'll zoom that in.\n\n380\n00:21:10.570 --> 00:21:11.510\nThere it is, 3 hosts up.\n\n381\n00:21:12.570 --> 00:21:13.270\nWhy did that happen?\n\n382\n00:21:13.270 --> 00:21:15.940\nYou're running as a standard user.\n\n383\n00:21:15.940 --> 00:21:17.710\nWhat the heck is going on?\n\n384\n00:21:17.710 --> 00:21:21.910\nYou gotta understand, again,\nwhat Nmap is trying to do for us.\n\n385\n00:21:21.910 --> 00:21:26.120\nIf it sees you running as a standard user,\nit's gonna say, you don't\n\n386\n00:21:26.120 --> 00:21:31.200\nhave the administrative privileges\nto actually work with raw TCP data.\n\n387\n00:21:31.200 --> 00:21:32.750\nAnd there's your problem, right?\n\n388\n00:21:32.750 --> 00:21:36.810\nSo if you wanna do this scan,\nit's really not gonna work for\n\n389\n00:21:36.810 --> 00:21:38.220\nyou because you can't do that.\n\n390\n00:21:38.220 --> 00:21:38.900\nSo you know what?\n\n391\n00:21:38.900 --> 00:21:40.240\nI'm gonna try to help you out.\n\n392\n00:21:40.240 --> 00:21:42.910\nI'm here for you, I work for you buddy.\n\n393\n00:21:42.910 --> 00:21:45.630\nI want you to get the results\nyou're looking for, so\n\n394\n00:21:45.630 --> 00:21:46.610\nI'm gonna do some stuff for you.\n\n395\n00:21:46.610 --> 00:21:51.260\nAnd to illustrate this point, I'm actually\ngonna allow Nmap do the talking here,\n\n396\n00:21:51.260 --> 00:21:53.550\nI actually pulled up the manual for Nmap.\n\n397\n00:21:53.550 --> 00:21:58.088\nHere's the main page for Nmap,\nthe Nmap reference guide.\n\n398\n00:21:58.088 --> 00:21:59.901\nI'm gonna do a quick search for\n\n399\n00:21:59.901 --> 00:22:04.520\nthe dash PS option which gives us,\nlet me go to next one, I think this one.\n\n400\n00:22:04.520 --> 00:22:06.460\nHere we go, that's what we're looking for.\n\n401\n00:22:06.460 --> 00:22:10.030\nSo the TCP SYN ping as they call it,\nright?\n\n402\n00:22:10.030 --> 00:22:15.233\nIf you look down here, it says on Unix\nboxes, only the privileged user root is\n\n403\n00:22:15.233 --> 00:22:21.148\ngenerally able to send and receive raw TCP\npackets, and that's what we talked about.\n\n404\n00:22:21.148 --> 00:22:25.400\nSo for the unprivileged users,\na workaround is automatically deployed.\n\n405\n00:22:25.400 --> 00:22:28.900\nAnd this is, look at old Nmap man,\nhe's trying to make it happen for you.\n\n406\n00:22:28.900 --> 00:22:31.800\nHe wants you to be able to scan\nmachines if at all possible.\n\n407\n00:22:31.800 --> 00:22:36.390\nIt realizes you're not a root user so\nit says, what we'll do is we'll send\n\n408\n00:22:36.390 --> 00:22:41.680\na connect system call against each\ntarget port that you specify, right?\n\n409\n00:22:41.680 --> 00:22:46.730\nSo if I'm running this PS, it says well,\nyou're not root, so I'll send this\n\n410\n00:22:46.730 --> 00:22:52.175\nconnect system call to the default port,\nwhich is 80, and see what that happens.\n\n411\n00:22:52.175 --> 00:22:57.535\nWell what happens when I send the system\ncall, is it's basically a SYN packet going\n\n412\n00:22:57.535 --> 00:23:03.150\nto whatever port it's been designated for,\nport 80 in this instance and bada bing.\n\n413\n00:23:03.150 --> 00:23:05.950\nWell what happens when you\nsend a SYN packet to port 80?\n\n414\n00:23:05.950 --> 00:23:06.770\nWe saw that.\n\n415\n00:23:06.770 --> 00:23:10.260\nIt's basically getting around the fact,\nlike I said, it's a workaround.\n\n416\n00:23:10.260 --> 00:23:13.532\nIt's getting around the fact that\nyou're not a root user whenever it can.\n\n417\n00:23:13.532 --> 00:23:14.855\nAnd it's trying to help out,\n\n418\n00:23:14.855 --> 00:23:17.335\neven standard users get the results\nthat they are looking for.\n\n419\n00:23:17.335 --> 00:23:19.395\nSo you don't always have\nto be logged in as root.\n\n420\n00:23:19.395 --> 00:23:24.295\nAnd this really, I've noticed this here\nrecently, because I'm trying to get\n\n421\n00:23:24.295 --> 00:23:29.255\nevery facet and every caveat for you guys\nso that you will understand Nmap better.\n\n422\n00:23:29.255 --> 00:23:34.810\nIs that a lot of times it can be very\nbeneficial to run two scans side by side,\n\n423\n00:23:34.810 --> 00:23:36.630\none as root and one not as root, right.\n\n424\n00:23:36.630 --> 00:23:38.960\nOne as a privileged user and\none as an unprivileged user,\n\n425\n00:23:38.960 --> 00:23:42.170\nbecause you never know what results you're\ngonna get with both types of scans,\n\n426\n00:23:42.170 --> 00:23:45.270\nbecause of the fact that\nNmap in a lot of ways\n\n427\n00:23:45.270 --> 00:23:48.870\nwill try to do things by default when\nit sees that you're not a root user.\n\n428\n00:23:48.870 --> 00:23:51.454\nOr try to do things by default because\nit sees that you are a root user.\n\n429\n00:23:51.454 --> 00:23:55.085\nSo keep that in mind, it's a very\nimportant thing to keep in mind that if\n\n430\n00:23:55.085 --> 00:23:57.700\nyou're not root you might\nget different results.\n\n431\n00:23:57.700 --> 00:24:01.167\nSo, Dan, you mentioned about running that\nas an administrator, or a root user.\n\n432\n00:24:01.167 --> 00:24:02.820\nThere's that Windows coming out of me.\n\n433\n00:24:02.820 --> 00:24:05.490\nThe root user, and standard user.\n\n434\n00:24:05.490 --> 00:24:07.830\nThat goes back to\na comment you made earlier.\n\n435\n00:24:07.830 --> 00:24:11.190\nIs that for consistency, so\nyou know what kind of results to expect?\n\n436\n00:24:11.190 --> 00:24:14.450\nIf I get one result as an administrator,\nand I get a different result,\n\n437\n00:24:14.450 --> 00:24:17.860\nmaybe run them twice there and make sure\nthose are just consistent between the two?\n\n438\n00:24:17.860 --> 00:24:20.530\n>> Yeah, I don't mean,\nyou might get different results and\n\n439\n00:24:20.530 --> 00:24:23.500\nthat's consistency is\nwhat you're looking for.\n\n440\n00:24:23.500 --> 00:24:27.870\nI might not get consistency between\nrunning as root, and running as not root.\n\n441\n00:24:27.870 --> 00:24:30.990\nBut I want to get consistency\nwhen I'm not running as root\n\n442\n00:24:30.990 --> 00:24:32.370\nevery time I run not as root.\n\n443\n00:24:32.370 --> 00:24:35.180\nI want to get consistency\nevery time I run as root.\n\n444\n00:24:35.180 --> 00:24:36.540\nThat's the consistency you're looking for.\n\n445\n00:24:36.540 --> 00:24:40.570\nSo again you might not get consistency\nbetween root and not root.\n\n446\n00:24:40.570 --> 00:24:44.760\nAnd that's why I run both side by side,\nso you'll see those inconsistencies.\n\n447\n00:24:44.760 --> 00:24:50.160\nOne scan might actually see a system\nwhere the other scan doesn't because\n\n448\n00:24:50.160 --> 00:24:52.850\nof the way you form\nthe scans on either side.\n\n449\n00:24:52.850 --> 00:24:55.690\nAnd the way they work, by default.\n\n450\n00:24:55.690 --> 00:24:57.200\nLike we saw here on the man page.\n\n451\n00:24:57.200 --> 00:25:00.960\nSo, just keep that in mind, if you\nrun a scan and you don't see what you\n\n452\n00:25:00.960 --> 00:25:04.910\nthink you should see try running\nit as root, see if that works.\n\n453\n00:25:04.910 --> 00:25:07.400\nAnd if you ran it as root,\ntry running it not as root.\n\n454\n00:25:07.400 --> 00:25:08.520\nSee if that works.\n\n455\n00:25:08.520 --> 00:25:12.920\nIf it does, maybe it's because\nyou didn't do something correctly\n\n456\n00:25:12.920 --> 00:25:14.670\nin your scanning and\nwhen you ran it first.\n\n457\n00:25:14.670 --> 00:25:19.740\nJust keep that in mind, it's basically\nwhat I to get you guys to see here.\n\n458\n00:25:19.740 --> 00:25:22.640\nNow, interestingly enough,\nagain we had one more caveat,\n\n459\n00:25:22.640 --> 00:25:24.990\nright, that was what happens\nwhen you're on a LAN?\n\n460\n00:25:24.990 --> 00:25:30.420\nAnd this was fun for me because I don't\nhave a bunch of machines I can just\n\n461\n00:25:30.420 --> 00:25:34.140\ngo scanning, and have them work the way\nI want them, so I have to build my own.\n\n462\n00:25:34.140 --> 00:25:37.810\nI have my own local network\nin a virtual environment, and\n\n463\n00:25:37.810 --> 00:25:43.750\nI'm having to fake out nmap to let it\nthink that I'm not on the same network.\n\n464\n00:25:43.750 --> 00:25:49.210\nI'm doing that by basically breaking\nthe default way in which it works\n\n465\n00:25:49.210 --> 00:25:53.190\nbecause otherwise the thing just find\nmachines like it's going out of style.\n\n466\n00:25:53.190 --> 00:25:58.330\nIf I'm trying to check something like\nI don't know fire wall center, and\n\n467\n00:25:58.330 --> 00:26:01.030\nit's still finding it because it's never\nreally even getting to the fire wall\n\n468\n00:26:01.030 --> 00:26:03.830\nportion of our proceedings,\nwell that can be very frustrating so\n\n469\n00:26:03.830 --> 00:26:07.710\nif you are a net admin and\nyou're trying to check firewall settings.\n\n470\n00:26:07.710 --> 00:26:08.870\nYou're working on a LAN together.\n\n471\n00:26:08.870 --> 00:26:10.570\nYou either got to do one of two things.\n\n472\n00:26:10.570 --> 00:26:14.560\nGet on a different network or,\nb, turn off the features\n\n473\n00:26:15.560 --> 00:26:20.340\nthat mmap does when it discovers\nthat it's on a local ethernet.\n\n474\n00:26:20.340 --> 00:26:21.840\nSo what do we do?\n\n475\n00:26:21.840 --> 00:26:22.550\nWhat am I talking about?\n\n476\n00:26:22.550 --> 00:26:23.940\nAll right, let's take a look here.\n\n477\n00:26:23.940 --> 00:26:27.010\nWe go back to my computer,\none of the things I did was I got,\n\n478\n00:26:27.010 --> 00:26:28.480\nso I got this machine up.\n\n479\n00:26:28.480 --> 00:26:31.720\nYou'll see it's called Metaslpoitable,\nthere it is right there,\n\n480\n00:26:31.720 --> 00:26:35.300\nit's just basically a terminal\nof a Unix type of device.\n\n481\n00:26:35.300 --> 00:26:37.250\nI think it's some form of Linux.\n\n482\n00:26:37.250 --> 00:26:40.960\nI also have this Windows\n10 machine right here.\n\n483\n00:26:40.960 --> 00:26:45.982\nBoth of them are on the same network\nas my attack machine, my Nmap machine.\n\n484\n00:26:45.982 --> 00:26:51.692\nThis Windows machine is 192.168.291.136.\n\n485\n00:26:51.692 --> 00:26:55.282\nAnd this guy is 192.168.219.135.\n\n486\n00:26:55.282 --> 00:26:58.161\nSo 135 and 136 are my two machine.\n\n487\n00:26:58.161 --> 00:27:01.750\nI believe that if I do a sudo IP tables.\n\n488\n00:27:01.750 --> 00:27:05.200\nI think I flushed this,\nif I didn't, here we go.\n\n489\n00:27:08.030 --> 00:27:12.510\nNow it's flushed, there should be\nno IP tables, no rules whatsoever.\n\n490\n00:27:15.990 --> 00:27:20.265\nIt helps if I sell sudo\n\n491\n00:27:20.265 --> 00:27:25.660\ncorrectly [LAUGH] Supo!\n\n492\n00:27:25.660 --> 00:27:26.440\nYeah that works, Daniel.\n\n493\n00:27:26.440 --> 00:27:27.750\nThere we go, there we go.\n\n494\n00:27:27.750 --> 00:27:30.900\nNothing in here,\nthere are no rules set for this thing.\n\n495\n00:27:30.900 --> 00:27:34.100\nSo I should be easily\nfinding this machine.\n\n496\n00:27:34.100 --> 00:27:36.020\nThat Windows 10 is default\ninstallation though.\n\n497\n00:27:36.020 --> 00:27:37.970\nI haven't done anything\nto the Windows firewall.\n\n498\n00:27:37.970 --> 00:27:41.160\nWe should have some issues\nwith discovering it and I did.\n\n499\n00:27:41.160 --> 00:27:42.370\nI found plenty of them, right?\n\n500\n00:27:42.370 --> 00:27:44.510\nAnd that's good,\nit means the firewall's working.\n\n501\n00:27:44.510 --> 00:27:45.330\nHow do we get around that?\n\n502\n00:27:45.330 --> 00:27:46.000\nWhat do we gotta do?\n\n503\n00:27:47.270 --> 00:27:54.120\nSo first thing I did was, let's see if I\ncan follow my line of reasoning here so\n\n504\n00:27:54.120 --> 00:27:59.960\nI can give you guys the right stuff,\nis I did a sudo nmap, -sn, -PS right?\n\n505\n00:27:59.960 --> 00:28:01.530\nOur good old syn scan suite.\n\n506\n00:28:01.530 --> 00:28:03.820\nIt's gonna get around that firewall,\nright?\n\n507\n00:28:03.820 --> 00:28:07.098\nWell we'll see what happens.\n\n508\n00:28:07.098 --> 00:28:10.770\nn- v and then.\n\n509\n00:28:10.770 --> 00:28:14.650\nHere's the part where I break\nnmap from working, right?\n\n510\n00:28:14.650 --> 00:28:20.670\nSo what I gotta do is say\ndash dash send dash ip, okay?\n\n511\n00:28:20.670 --> 00:28:26.810\nSend ip means I don't want\nyou to do ARP discovery.\n\n512\n00:28:26.810 --> 00:28:28.440\nBecause that's what was killing me.\n\n513\n00:28:28.440 --> 00:28:34.110\nARP was easy, and ARP is great so if\nyou're really doing scans, you really just\n\n514\n00:28:34.110 --> 00:28:38.620\nwanna find everything and it's brother,\nand you're on the same network, sweet.\n\n515\n00:28:38.620 --> 00:28:39.710\nYou've got ARP right there,\n\n516\n00:28:39.710 --> 00:28:42.920\nyou're gonna get a lot of results,\nyou're gonna get about everything and\n\n517\n00:28:42.920 --> 00:28:45.660\nthe kitchen sink because of what\nARP does and how that works.\n\n518\n00:28:45.660 --> 00:28:47.200\nWe talked about that earlier.\n\n519\n00:28:47.200 --> 00:28:52.030\nBut I needed that to stop, I need to\nsee if my firewall rules were working.\n\n520\n00:28:52.030 --> 00:28:55.800\nBut if I kept getting the response back\nfrom the feed, I couldn't tell, right?\n\n521\n00:28:55.800 --> 00:28:58.350\nSo I had to shut that\noff by saying send IP.\n\n522\n00:28:58.350 --> 00:29:01.140\nWhich basically says disable ARP pinging,\nright?\n\n523\n00:29:01.140 --> 00:29:02.450\nDon't do ARP.\n\n524\n00:29:02.450 --> 00:29:07.314\nYou can also do the exact\nsame thing by giving it\n\n525\n00:29:07.314 --> 00:29:12.067\nthe command of disable ARP ping,\nlike that.\n\n526\n00:29:12.067 --> 00:29:16.409\nThey both do the exact same thing,\nfor our intents and purposes, right?\n\n527\n00:29:16.409 --> 00:29:17.663\nSo I can leave that up there.\n\n528\n00:29:17.663 --> 00:29:21.586\nI like to send IP because\nit's less typing typing and\n\n529\n00:29:21.586 --> 00:29:25.340\nthen I'm going to give it\na range of IP addresses.\n\n530\n00:29:25.340 --> 00:29:28.720\n68.219.134 through 137,\n\n531\n00:29:28.720 --> 00:29:34.520\nthat way we get a few machines that I\nknow aren't up and the two that are.\n\n532\n00:29:34.520 --> 00:29:36.780\nLet's see what happens\nwhen we crank that out.\n\n533\n00:29:36.780 --> 00:29:41.240\nWhat's my password, sure no problemo.\n\n534\n00:29:41.240 --> 00:29:43.140\nHere we go,\nwe notice that we got one host up.\n\n535\n00:29:44.160 --> 00:29:48.476\nWe see the one through five right there.\n\n536\n00:29:48.476 --> 00:29:51.170\nAnd that's a [INAUDIBLE].\n\n537\n00:29:51.170 --> 00:29:53.520\nThat's my metasploitable guy.\n\n538\n00:29:53.520 --> 00:29:57.370\nAnd here's 1, 3, 6 which we know is up but\n\n539\n00:29:57.370 --> 00:30:00.760\nit's firewalling from that ps scale,\nright.\n\n540\n00:30:00.760 --> 00:30:02.250\nGreat, it is doing its job.\n\n541\n00:30:02.250 --> 00:30:04.510\nIt's showing it as host down.\n\n542\n00:30:04.510 --> 00:30:07.930\nI'm done, I've put my network\nadmin hat on and my job is done.\n\n543\n00:30:07.930 --> 00:30:10.360\nThat Windows firewall is\nworking like a charm.\n\n544\n00:30:10.360 --> 00:30:12.010\nAll right, let's take that off.\n\n545\n00:30:12.010 --> 00:30:13.400\nLet's put the black hat back on.\n\n546\n00:30:14.530 --> 00:30:15.940\nI'm looking for machines and\n\n547\n00:30:15.940 --> 00:30:20.570\nI know the Windows firewall\nblocks that PS scan by default.\n\n548\n00:30:20.570 --> 00:30:21.780\nSo what am I gonna do, right?\n\n549\n00:30:21.780 --> 00:30:22.930\nWe're gonna use our work-around.\n\n550\n00:30:22.930 --> 00:30:24.820\nWe're gonna throw different ports at it.\n\n551\n00:30:24.820 --> 00:30:28.400\nNow the thing was about this,\nis, I thought well maybe\n\n552\n00:30:28.400 --> 00:30:30.710\nport 80 obviously isn't working,\nit doesn't have a web server or\n\n553\n00:30:30.710 --> 00:30:34.640\nanything running, that port's closed, and\nthe firewall is dropping the packets.\n\n554\n00:30:34.640 --> 00:30:35.640\nThat's the problem.\n\n555\n00:30:35.640 --> 00:30:39.010\nThe firewall is not\nallowing the packet to go.\n\n556\n00:30:39.010 --> 00:30:41.630\nI'm a port that's not open,\nhere's a reset.\n\n557\n00:30:41.630 --> 00:30:44.950\nEven if the port is closed and\nI should get that reset, or\n\n558\n00:30:44.950 --> 00:30:48.490\nif it's open the firewall is saying nein,\nno, don't do that.\n\n559\n00:30:48.490 --> 00:30:50.680\nI'm just going to drop\nthe packets on floor,\n\n560\n00:30:50.680 --> 00:30:52.670\nI'm not going to elicit any response.\n\n561\n00:30:52.670 --> 00:30:54.870\nAnd that's why that's not showing as up.\n\n562\n00:30:54.870 --> 00:30:56.180\nFirewall is doing a great job.\n\n563\n00:30:56.180 --> 00:30:57.540\nThat's what we want.\n\n564\n00:30:57.540 --> 00:31:00.080\nSo how do we get around that,\nhow do we do that?\n\n565\n00:31:00.080 --> 00:31:04.409\nThe answer I found was to scan all 6,550,\nright?\n\n566\n00:31:04.409 --> 00:31:07.510\n65,000, I'm sorry, 65,535 ports.\n\n567\n00:31:07.510 --> 00:31:13.710\nNow I will spare you the time\nthat it takes to do that,\n\n568\n00:31:13.710 --> 00:31:18.000\neven on a single machine,\nlet alone a range of machines.\n\n569\n00:31:18.000 --> 00:31:19.820\nI've already kind of pre-baked this for\nus so\n\n570\n00:31:19.820 --> 00:31:21.810\nthat we can see it without\nhaving to wait for it.\n\n571\n00:31:21.810 --> 00:31:24.020\nPut that turkey in the oven,\njust pull up the cooked one right out.\n\n572\n00:31:24.020 --> 00:31:24.680\nAll right, so\n\n573\n00:31:24.680 --> 00:31:28.280\nyeah I've got this, well you know what\nactually like I said I saved the scan.\n\n574\n00:31:28.280 --> 00:31:30.570\nI was a smart person, precook this.\n\n575\n00:31:30.570 --> 00:31:32.000\nHere it is right here.\n\n576\n00:31:32.000 --> 00:31:33.220\nSo here is the command.\n\n577\n00:31:34.580 --> 00:31:39.740\nSudo elevated privileges nmap sn,\nwe only wanna do ping type scans.\n\n578\n00:31:39.740 --> 00:31:43.610\nAnd there's my ps for my sin ping,\nand then I gave it the port range.\n\n579\n00:31:43.610 --> 00:31:47.710\nRemember I showed you how\nto do the port range.\n\n580\n00:31:47.710 --> 00:31:50.709\nOne through 65,535,\nwow that's a lot of ports.\n\n581\n00:31:50.709 --> 00:31:55.496\nYou started, and as I kicked it off, and\nyou'll notice it's the same exact thing,\n\n582\n00:31:55.496 --> 00:31:57.397\nI did a range, 134 to 137.\n\n583\n00:31:57.397 --> 00:31:59.802\nAnd you'll notice I got\nsome weird results,\n\n584\n00:31:59.802 --> 00:32:02.610\nit didn't really like what\nwas going on [LAUGH] here.\n\n585\n00:32:02.610 --> 00:32:06.470\nProbably because of the massive\namount of activity that was going on.\n\n586\n00:32:06.470 --> 00:32:10.980\nGave me some, okay, if you really want to\nsee all these errors that we're getting,\n\n587\n00:32:10.980 --> 00:32:15.860\nyou can add this -d2 option but obviously,\nI wasn't too enthused about that.\n\n588\n00:32:15.860 --> 00:32:19.630\nThen it gave me some countdown,\nhow long it was left before it was done.\n\n589\n00:32:19.630 --> 00:32:25.070\nThen it completed the scan and\nfound two hosts up, right?\n\n590\n00:32:25.070 --> 00:32:25.890\nThat's good, right?\n\n591\n00:32:25.890 --> 00:32:27.290\nThere it is, right there.\n\n592\n00:32:27.290 --> 00:32:32.520\nBing, host is up, nice.\n\n593\n00:32:32.520 --> 00:32:33.550\nIt found a scan.\n\n594\n00:32:33.550 --> 00:32:35.400\nBut which port did it find it on?\n\n595\n00:32:35.400 --> 00:32:36.640\nI don't know, right?\n\n596\n00:32:36.640 --> 00:32:38.470\nI didn't get to see that part.\n\n597\n00:32:38.470 --> 00:32:39.730\nIt really wasn't part of the output.\n\n598\n00:32:40.870 --> 00:32:43.240\nBut being a seasoned veteran as I am,\n\n599\n00:32:43.240 --> 00:32:46.110\nI know some software that\nwill help us out with that.\n\n600\n00:32:46.110 --> 00:32:48.500\nThat's our good old friend Wireshark.\n\n601\n00:32:48.500 --> 00:32:50.560\nSo what I did was before\nI fired off the scan,\n\n602\n00:32:50.560 --> 00:32:56.430\nI started sniffing my network\nto see what the activity was.\n\n603\n00:32:56.430 --> 00:32:58.180\nI can actually see that stuff.\n\n604\n00:32:58.180 --> 00:33:01.250\nSo what I did was, again,\nalready had this stuff pre-baked for us.\n\n605\n00:33:01.250 --> 00:33:06.144\nI had my Wireshark output right here and\nI've sorted it by source\n\n606\n00:33:06.144 --> 00:33:10.688\nIP that would go descending\ninstead of ascending, right?\n\n607\n00:33:10.688 --> 00:33:14.566\nSo instead of starting from one and going\nup, it starts from the highest number, and\n\n608\n00:33:14.566 --> 00:33:15.777\ngoes down to one, right?\n\n609\n00:33:15.777 --> 00:33:17.080\nSo that's where I'm looking at.\n\n610\n00:33:17.080 --> 00:33:21.450\nHere, we see a lot of ARP requests, and\nas you can see, that's what it's doing,\n\n611\n00:33:21.450 --> 00:33:22.670\nit's trying to ARP out.\n\n612\n00:33:22.670 --> 00:33:25.762\nARP is a good thing and\nthat's why we can find so\n\n613\n00:33:25.762 --> 00:33:30.678\nmany things, but once we get past our\nARP information, which is almost,\n\n614\n00:33:30.678 --> 00:33:34.035\nthere we go,\nhere's our actual from the source.\n\n615\n00:33:34.035 --> 00:33:39.982\nSo it's coming from 192.168.219.136,\nthat's my Windows 10 machine.\n\n616\n00:33:39.982 --> 00:33:41.721\nAnd where's it going to?\n\n617\n00:33:41.721 --> 00:33:44.567\nThe destination 192.168.219.1.\n\n618\n00:33:44.567 --> 00:33:45.905\nThat's me, that's my attack machine.\n\n619\n00:33:45.905 --> 00:33:48.227\nThat means it actually\nmade a response back.\n\n620\n00:33:48.227 --> 00:33:48.958\nAnd what was it?\n\n621\n00:33:48.958 --> 00:33:52.456\nIt was a TCP protocol on port 7680,\n\n622\n00:33:52.456 --> 00:33:57.120\nback to the originating\nport which was 39526.\n\n623\n00:33:57.120 --> 00:33:58.092\nAnd what is it?\n\n624\n00:33:58.092 --> 00:34:00.516\nA synac, right?\n\n625\n00:34:00.516 --> 00:34:01.500\nA synac.\n\n626\n00:34:01.500 --> 00:34:02.640\nWell, excellent.\n\n627\n00:34:02.640 --> 00:34:07.426\nThat means the port is actually open and\nable to make connections, and\n\n628\n00:34:07.426 --> 00:34:08.540\nit sent that back to me.\n\n629\n00:34:08.540 --> 00:34:13.000\nSo I'm sure if we looked back through, we\nwould see the RST that I sent back saying,\n\n630\n00:34:13.000 --> 00:34:15.370\nno, no, we're good,\nthank you for your response.\n\n631\n00:34:15.370 --> 00:34:20.749\nI now know that port 7680 is open on that\nmachine and that's why it found it open.\n\n632\n00:34:20.749 --> 00:34:25.314\nSo if I wanted to, and I said, I know\nI got a bunch of Windows 10 machines,\n\n633\n00:34:25.314 --> 00:34:29.229\nI wanna scan, I'd probably do\nthat PS with 7680 as my port,\n\n634\n00:34:29.229 --> 00:34:31.494\ninstead of the default as port 80.\n\n635\n00:34:31.494 --> 00:34:33.530\nLet's see if that actually works.\n\n636\n00:34:33.530 --> 00:34:35.550\nLet me shrink this down.\n\n637\n00:34:35.550 --> 00:34:38.260\nWe'll go back over here, and\nwe'll say, let's see here.\n\n638\n00:34:39.500 --> 00:34:44.580\nI will just add the port\n7680 to my sim ping,\n\n639\n00:34:44.580 --> 00:34:48.670\nhit Return, asks for\nmy password, of course.\n\n640\n00:34:51.010 --> 00:34:51.870\nThere we go.\n\n641\n00:34:51.870 --> 00:34:55.080\nWe see two hosts are up,\nthat ping is actually working, so\n\n642\n00:34:55.080 --> 00:35:00.710\nnow I have an effective canned\nresponse for Windows 10 machines.\n\n643\n00:35:00.710 --> 00:35:04.830\nI know this will work if I've got a whole\nhost of Windows 10 machines that,\n\n644\n00:35:04.830 --> 00:35:08.390\neven though they're blocking the standard\nping and even that sim ping to port 80,\n\n645\n00:35:08.390 --> 00:35:10.480\nI can use that port to get around this.\n\n646\n00:35:10.480 --> 00:35:13.570\nNow you're starting to see\nthe importance of doing this and\n\n647\n00:35:13.570 --> 00:35:18.200\nunderstanding what's happening under the\nhood so that we can get around firewalls.\n\n648\n00:35:18.200 --> 00:35:21.750\n>> I was gonna say great job, that's very\ncrafty there, finding that hidden host.\n\n649\n00:35:21.750 --> 00:35:24.550\nI thought the blinders were\ngonna be on there for a second.\n\n650\n00:35:24.550 --> 00:35:27.491\nDan, it does look like we are coming\nto the end of another episode, so\n\n651\n00:35:27.491 --> 00:35:29.536\nbefore we do go,\ndo you have any parting words?\n\n652\n00:35:29.536 --> 00:35:32.851\n>> No, other than we're nowhere near done,\nright?\n\n653\n00:35:32.851 --> 00:35:36.230\nHost discovery, well, we're about\nhalfway through it, should I say.\n\n654\n00:35:36.230 --> 00:35:38.880\nWe got some other tricks\nin our toolkit just in case\n\n655\n00:35:38.880 --> 00:35:42.420\nwe get some crafty admins out there that\ngo, I see what you did there, right?\n\n656\n00:35:42.420 --> 00:35:46.950\nWe're always playing back and forth with\nthe sys admins versus the bad guys, and\n\n657\n00:35:46.950 --> 00:35:50.630\nwe have to play both sides so that we\ncan effectively secure our network.\n\n658\n00:35:50.630 --> 00:35:53.542\nSo, we're gonna take a look at some\nmore stuff in an upcoming episode.\n\n659\n00:35:53.542 --> 00:35:55.760\n>> All right, well, I look forward\nto seeing you in part three and\n\n660\n00:35:55.760 --> 00:35:58.080\nwe look forward to having you there\ntoo but we're gonna go ahead and\n\n661\n00:35:58.080 --> 00:35:59.360\ntake this time to sign out.\n\n662\n00:35:59.360 --> 00:36:00.730\nI've been your host, Wes Bryan.\n\n663\n00:36:00.730 --> 00:36:01.349\n>> I'm Daniel Lowrie.\n\n664\n00:36:01.349 --> 00:36:02.742\n>> And we'll see you next time.\n\n665\n00:36:02.742 --> 00:36:09.182\n[SOUND]\n\n",
          "vimeoId": "165935787"
        },
        {
          "description": "In this episode, Wes and Dan continue their discussion on host discovery with Nmap. They venture away from using TCP and take a look at using UDP pings. They will explore some of the various ICMP ping types like echo requests, time stamp requests, address mask replies as well as ARP pings.",
          "length": "2033",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-3-3-host_discover_pt3-050616-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-3-3-host_discover_pt3-050616-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-1-3-3-host_discover_pt3-050616-1-sm.jpg",
          "title": "Host Discovery Part 3",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:10.008\n[MUSIC]\n\n2\n00:00:12.088 --> 00:00:16.320\nWelcome back to another exciting episode\nhere at ITProTV, I'm your host Wes Bryan.\n\n3\n00:00:16.320 --> 00:00:19.320\nAnd in today's episode we're\nmoving through our series on Nmap.\n\n4\n00:00:19.320 --> 00:00:21.070\nAnd more specifically,\n\n5\n00:00:21.070 --> 00:00:24.270\nwe're continuing along with\nthe novel that is host discovery.\n\n6\n00:00:24.270 --> 00:00:26.470\nWe've got a couple of\nparts under our belts and\n\n7\n00:00:26.470 --> 00:00:27.620\nwe're coming back with a part three.\n\n8\n00:00:27.620 --> 00:00:30.590\nAnd to help lend his expertise is\nnone other than Mr. Dan Lowrie.\n\n9\n00:00:30.590 --> 00:00:31.278\nDan, how're you doing today, sir?\n\n10\n00:00:31.278 --> 00:00:34.338\nI'm doing fantastic, Wes,\nthanks so much for having me back.\n\n11\n00:00:34.338 --> 00:00:35.862\nBecause you're right,\n\n12\n00:00:35.862 --> 00:00:40.298\nthis is turning into quite the extensive\nvolume that is host discovery.\n\n13\n00:00:40.298 --> 00:00:45.558\nBut it's good stuff, it's definitely\ngoing to help you as an Nmap user.\n\n14\n00:00:45.558 --> 00:00:49.328\nAs someone who's gonna be doing security\ntesting against your own systems,\n\n15\n00:00:49.328 --> 00:00:52.290\nmaybe even becoming that\npenetration tester one day.\n\n16\n00:00:52.290 --> 00:00:54.080\nYou don't wanna say, yeah I've used Nmap,\n\n17\n00:00:54.080 --> 00:00:58.040\nand all you've really done is thrown\na couple of easy scans at machines before.\n\n18\n00:00:58.040 --> 00:01:01.690\nThat's not really using Nmap,\neven thought that is using Nmap.\n\n19\n00:01:01.690 --> 00:01:06.960\nWe want a much wider breadth to our\nknowledge when it comes to Nmap.\n\n20\n00:01:06.960 --> 00:01:11.108\nSo we've been working our way through host\ndiscovery, [SOUND] and it is lengthy.\n\n21\n00:01:11.108 --> 00:01:14.334\nWe have gotten to the part now where,\nlet's see here,\n\n22\n00:01:14.334 --> 00:01:18.290\nwe've talked about getting\naround firewalled computers.\n\n23\n00:01:18.290 --> 00:01:21.490\nPinging machines, I wanna see\nwhat machines are on my network.\n\n24\n00:01:21.490 --> 00:01:24.530\nAnd when that doesn't work\nbecause of firewalling ping, or\n\n25\n00:01:24.530 --> 00:01:26.600\ndisabling ping, what do I do?\n\n26\n00:01:26.600 --> 00:01:29.710\nWell we've got things around that,\nwe looked at the -ps, or\n\n27\n00:01:29.710 --> 00:01:35.350\nthe sin ping utility built into\nNmap as well, and that was great.\n\n28\n00:01:35.350 --> 00:01:36.278\nThat was a wonderful little tool.\n\n29\n00:01:36.278 --> 00:01:40.998\nWe actually were able to\ncircumvent a Windows 10 firewall.\n\n30\n00:01:40.998 --> 00:01:44.877\nWe got right around that bad boy,\neven though it was blocking us before, and\n\n31\n00:01:44.877 --> 00:01:47.360\nwe were able to find machines using that.\n\n32\n00:01:47.360 --> 00:01:52.820\nBut now we need to take a look at its\nbrother, and that is the ACK scan.\n\n33\n00:01:52.820 --> 00:01:55.390\nAnd that's, you're thinking, yeah I've\nhear of ACK, well yeah that's because\n\n34\n00:01:55.390 --> 00:02:00.340\nwe've talked about ACK and SYN, and\nSYN-ACK, and all the variations thereof.\n\n35\n00:02:00.340 --> 00:02:03.837\nSo that's where we're\ngonna start in with today,\n\n36\n00:02:03.837 --> 00:02:07.428\nis with using the PA, or\nthe ACK ping inside of Nmap.\n\n37\n00:02:07.428 --> 00:02:11.368\n>> Now Dan, I know a little about\nthe three way handshake before.\n\n38\n00:02:11.368 --> 00:02:14.408\nAnd I can understand why you're\nusing a synchronization request.\n\n39\n00:02:14.408 --> 00:02:18.043\nYou're trying to, is that machine out\nthere and even if it doesn't give you that\n\n40\n00:02:18.043 --> 00:02:21.660\nSYN-ACK packet back it's going to give\nme some errors, says hey I'm closed.\n\n41\n00:02:21.660 --> 00:02:25.340\nNow why in the world would we use\nACK when that's the third and\n\n42\n00:02:25.340 --> 00:02:29.580\nfinal part of a handshake that\nhasn't really even gone on yet.\n\n43\n00:02:29.580 --> 00:02:31.630\n>> Yeah, I know it sounds weird.\n\n44\n00:02:31.630 --> 00:02:38.010\nYou're like, we're basically forgetting\nthe first portion of a TCP connection.\n\n45\n00:02:38.010 --> 00:02:39.570\nHow the heck does that even work?\n\n46\n00:02:39.570 --> 00:02:44.890\nWell the good thing is,\nis that Nmap as a system level utility\n\n47\n00:02:44.890 --> 00:02:48.350\nis able to control the flags.\n\n48\n00:02:48.350 --> 00:02:49.990\nWe can turn on the SYN flag.\n\n49\n00:02:49.990 --> 00:02:52.640\nWell, if we can turn on the SYN flag,\nwe can also turn on the ACK flag.\n\n50\n00:02:52.640 --> 00:02:55.560\nAnd that goes back to Wes's question,\nwhy would we do that?\n\n51\n00:02:55.560 --> 00:02:56.810\nWhy wouldn't we start with ping?\n\n52\n00:02:56.810 --> 00:03:03.530\nAnd the great answer to that question is,\nwhy don't we start with SYN, the SYN ping?\n\n53\n00:03:03.530 --> 00:03:04.820\nWhat if SYNs being blocked?\n\n54\n00:03:04.820 --> 00:03:09.780\nWhat if someone gets wise, and says,\nwell I understand Nmap, by default,\n\n55\n00:03:09.780 --> 00:03:12.820\nif you use that PS argument against it.\n\n56\n00:03:12.820 --> 00:03:17.210\nIt will just send a SYN flag to port 80,\nI'll block port 80.\n\n57\n00:03:17.210 --> 00:03:21.410\nHeck, I might even block all\nthe ports from that SYN request\n\n58\n00:03:21.410 --> 00:03:23.040\nyou little rascal, you.\n\n59\n00:03:23.040 --> 00:03:24.510\nAnd now what do you do?\n\n60\n00:03:24.510 --> 00:03:27.980\nAnd that's when we would enter\ninto using the ACK request,\n\n61\n00:03:27.980 --> 00:03:30.300\nbecause you probably aren't blocking that.\n\n62\n00:03:30.300 --> 00:03:33.880\nOf course you could, but\nyou've gotta remember most people,\n\n63\n00:03:33.880 --> 00:03:36.740\nthey probably aren't thinking\nof this right out of the gate.\n\n64\n00:03:36.740 --> 00:03:38.210\nThey just think I just need to block ping.\n\n65\n00:03:38.210 --> 00:03:39.900\nAnd that's why PS works.\n\n66\n00:03:39.900 --> 00:03:45.260\nAnd if they get bit by that bug, they go,\nwell I'll block SYN, and that will work.\n\n67\n00:03:45.260 --> 00:03:46.450\nWell, guess what?\n\n68\n00:03:46.450 --> 00:03:48.210\nGot another way around your\nlittle firewall there, and\n\n69\n00:03:48.210 --> 00:03:50.070\nthat is using our ACK packet.\n\n70\n00:03:50.070 --> 00:03:50.880\nNow, how does this work?\n\n71\n00:03:50.880 --> 00:03:56.810\nIt's very simple, it's in the very\nsame vein of the SYN ping.\n\n72\n00:03:56.810 --> 00:04:01.470\nOur ACK ping is gonna send an ACK\npacket to port 80, by default.\n\n73\n00:04:01.470 --> 00:04:06.020\nAgain, we can use all our\nstandard malformation.\n\n74\n00:04:06.020 --> 00:04:08.950\nSo if we wanted to do something\nlike change the port from\n\n75\n00:04:08.950 --> 00:04:13.280\nport 80 to port 443 or any other port for\nthat matter, just add it on the end there.\n\n76\n00:04:13.280 --> 00:04:17.180\nIf we wanna do a range of ports,\ndo the hyphen with those beginning and\n\n77\n00:04:17.180 --> 00:04:18.780\nending ports that you wanna use.\n\n78\n00:04:18.780 --> 00:04:20.780\nIt works there as well, same kind of idea.\n\n79\n00:04:20.780 --> 00:04:22.630\nIf you wanna comment the limits,\n\n80\n00:04:22.630 --> 00:04:26.130\nspecific ports out of the range of ports,\nyou can do that.\n\n81\n00:04:26.130 --> 00:04:28.420\nSo all the good stuff we learned\nin the previous episode,\n\n82\n00:04:28.420 --> 00:04:30.750\nthat works here just as well.\n\n83\n00:04:30.750 --> 00:04:34.380\nAnd that's basically all you need to know\nabout it, for all intents and purposes.\n\n84\n00:04:34.380 --> 00:04:38.070\nSo very similar to the sin but\nthe difference is,\n\n85\n00:04:38.070 --> 00:04:43.600\nit's sending that ACK request instead,\nthe ACK flag instead of the SYN flag.\n\n86\n00:04:43.600 --> 00:04:45.300\nSo let's take a look at my computer.\n\n87\n00:04:46.330 --> 00:04:49.390\nWe don't wanna just talk about these\nthings, I wanna show you this stuff guys.\n\n88\n00:04:49.390 --> 00:04:51.210\nSo let's see here.\n\n89\n00:04:51.210 --> 00:04:52.990\nFor testing purposes,\nwhere are we at here?\n\n90\n00:04:52.990 --> 00:04:55.390\nI'm gonna follow my notes here so\nI make sure I'm on the right page for\n\n91\n00:04:55.390 --> 00:04:58.440\nyou, let's do this.\n\n92\n00:04:58.440 --> 00:05:04.308\nLet's go to the Metasploitable machine and\nlet's shut off sin.\n\n93\n00:05:04.308 --> 00:05:08.749\nBecause right now if I do an Nmap,\n\n94\n00:05:08.749 --> 00:05:13.508\nI sudo nmap -sn- PS and then I say,\n\n95\n00:05:13.508 --> 00:05:18.107\nI do the -n -v and when I do the,\n\n96\n00:05:18.107 --> 00:05:22.248\ndon't forget my --sendIP.\n\n97\n00:05:22.248 --> 00:05:27.552\nAnd then 192.168, if I can hit my dot,\n\n98\n00:05:27.552 --> 00:05:31.088\n.168.219.135.\n\n99\n00:05:31.088 --> 00:05:35.781\nThat's my Metasploitable e\nmachine's address, if I hit that,\n\n100\n00:05:35.781 --> 00:05:38.180\nhit return, put my password in.\n\n101\n00:05:39.880 --> 00:05:41.190\nAnd I see, one host up.\n\n102\n00:05:41.190 --> 00:05:42.910\nGreat, that actually worked.\n\n103\n00:05:42.910 --> 00:05:45.820\nThat's because I don't have\nany fire walling going off.\n\n104\n00:05:45.820 --> 00:05:48.270\nI'm a smart Nmap user,\n\n105\n00:05:48.270 --> 00:05:52.150\nI've gotten around any, maybe if I had\na firewall up for that ping request.\n\n106\n00:05:52.150 --> 00:05:55.650\nSo now I'm going to put on my sys admin,\nokay I've got to fix that problem.\n\n107\n00:05:55.650 --> 00:06:00.878\nJump over here to my Metasploitable and\nI'll add that to my firewall.\n\n108\n00:06:00.878 --> 00:06:04.906\nNow I just wanted to let you guys know,\nI am using Metasploitable, A,\n\n109\n00:06:04.906 --> 00:06:09.298\nbecause it gives us a great target to\ngive us all sorts of cool responses for.\n\n110\n00:06:09.298 --> 00:06:11.058\nBecause that is what it is intended to do.\n\n111\n00:06:11.058 --> 00:06:14.077\nAnd B,it's a Unix variant or\nLinux variant and\n\n112\n00:06:14.077 --> 00:06:19.270\nLinux typically even though it has\na firewall it is usually not configured.\n\n113\n00:06:19.270 --> 00:06:20.980\nThey leave it up to you\nto add whatever you want.\n\n114\n00:06:20.980 --> 00:06:22.780\nSo I am working with a clean slate here.\n\n115\n00:06:22.780 --> 00:06:25.200\nNot having to work around things,\nturn stuff off and on.\n\n116\n00:06:25.200 --> 00:06:27.987\nI just go ahead and do what I need to\ndo for our demonstration purposes.\n\n117\n00:06:27.987 --> 00:06:31.867\nSo it's a great platform for demonstration\nbasically is what I'm trying to say.\n\n118\n00:06:31.867 --> 00:06:39.570\nSo let's do that, let's sudo iptables,\nthat's our firewall.\n\n119\n00:06:39.570 --> 00:06:46.980\nThe -a which is appended the input chain,\nand let's see here.\n\n120\n00:06:46.980 --> 00:06:53.850\n-P for TCP and now I want to do --SYM,\nthis is a lovely little thing.\n\n121\n00:06:53.850 --> 00:06:57.310\nI want to stop that syn, so, there it is.\n\n122\n00:06:57.310 --> 00:07:02.360\nI'm telling, this is basically the type\nof flag I want you to start blocking.\n\n123\n00:07:02.360 --> 00:07:07.130\nAnd then I can tell it what port, so\nI know by default Nmap goes to port 80,\n\n124\n00:07:07.130 --> 00:07:08.670\nso bing, we'll block port 80.\n\n125\n00:07:08.670 --> 00:07:13.528\nI'll say -- dport,\nwhich is the destination port, 80,\n\n126\n00:07:13.528 --> 00:07:18.250\nand then -J which means where do I wanna\nsend this, what do I wanna do with it?\n\n127\n00:07:18.250 --> 00:07:22.500\nAnd I'll say drop, which is basically just\ndrop it on the floor, don't respond to,\n\n128\n00:07:22.500 --> 00:07:23.430\ndon't do anything.\n\n129\n00:07:23.430 --> 00:07:27.060\nJust pretend like it never even happened,\nthat's what you want to do.\n\n130\n00:07:27.060 --> 00:07:30.750\nJust drop those packets like they\nnever existed when it comes in.\n\n131\n00:07:30.750 --> 00:07:35.130\nHit return, give me my ms if admin and\nthere we go, it doesn't complain.\n\n132\n00:07:35.130 --> 00:07:37.620\nThat means I put in my chain correctly.\n\n133\n00:07:37.620 --> 00:07:43.240\nGo back, let's run the same scan,\nlet's see what we get.\n\n134\n00:07:43.240 --> 00:07:44.090\nRunning, running, running.\n\n135\n00:07:44.090 --> 00:07:47.960\nLook we have done it,\nwe have ha ha, take that MF user.\n\n136\n00:07:47.960 --> 00:07:51.074\nYou will never detect my machine again.\n\n137\n00:07:51.074 --> 00:07:54.348\nZero hosts are up right there.\n\n138\n00:07:54.348 --> 00:07:57.436\nWe love it,\nthat's exactly what we were looking for.\n\n139\n00:07:57.436 --> 00:08:02.730\nBut now okay I'm putting\nmy NMAP hat back on.\n\n140\n00:08:02.730 --> 00:08:05.000\nWe're very handy with our PS utility.\n\n141\n00:08:05.000 --> 00:08:06.980\nIt has more than one trick up its sleeve.\n\n142\n00:08:06.980 --> 00:08:07.790\nI can change the port.\n\n143\n00:08:07.790 --> 00:08:11.530\nRemember I'm blocking port 80\nbecause that's the default port.\n\n144\n00:08:11.530 --> 00:08:15.370\nAnd if I'm a smart admin, or\nif I'm a smart hacker, should I say, okay,\n\n145\n00:08:15.370 --> 00:08:19.450\nwell you're blocking port 80, no problem,\nwe'll run our scan one more time\n\n146\n00:08:19.450 --> 00:08:22.910\nexcept this time we'll change the port,\nsee how that stirs your tea.\n\n147\n00:08:22.910 --> 00:08:25.769\nAll right,\nI'll change it to whatever, 1-2-3-4.\n\n148\n00:08:25.769 --> 00:08:30.980\nThere we go, look,\nbecause I'm a smart hacker, there we go.\n\n149\n00:08:30.980 --> 00:08:32.470\nOne host up.\n\n150\n00:08:32.470 --> 00:08:35.980\nOkay, Blackhat, take that off,\nlet's put our network hat back on.\n\n151\n00:08:37.090 --> 00:08:40.850\nI say, all right there,\nyou're a pretty smart guy.\n\n152\n00:08:40.850 --> 00:08:42.480\nWe're gonna fix your little red wagon.\n\n153\n00:08:42.480 --> 00:08:46.300\nWhat if I just block every\nport from that send request?\n\n154\n00:08:46.300 --> 00:08:48.120\nHow would you like that, right?\n\n155\n00:08:48.120 --> 00:08:49.420\nSo come back over here.\n\n156\n00:08:49.420 --> 00:08:55.695\nI'll just flush this out, start with\na clean slate, sudo iptables -F.\n\n157\n00:08:55.695 --> 00:08:56.310\nThat flushes it out.\n\n158\n00:08:57.810 --> 00:08:59.780\nAnd I'll do this.\n\n159\n00:08:59.780 --> 00:09:06.882\nI'll say sudo iptables\n-A to the input chain.\n\n160\n00:09:06.882 --> 00:09:13.664\nAnd I'll say -P tcp --syn.\n\n161\n00:09:13.664 --> 00:09:18.700\nAnd I'll say,\nJust to make sure I've got my example.\n\n162\n00:09:18.700 --> 00:09:22.246\nI don't want to mistype anything.\n\n163\n00:09:22.246 --> 00:09:24.220\nHere we go.\n\n164\n00:09:24.220 --> 00:09:24.882\nWhat is it?\n\n165\n00:09:24.882 --> 00:09:29.369\nYeah, -m, that's what it is,\n-m and let's say multiports,\n\n166\n00:09:29.369 --> 00:09:32.580\nis it ports or, yeah, multiport.\n\n167\n00:09:32.580 --> 00:09:38.190\nAnd then -- destination- ports.\n\n168\n00:09:38.190 --> 00:09:40.940\nSo this is basically saying\nI've got more than one port,\n\n169\n00:09:40.940 --> 00:09:44.530\nbecause before I just did that destination\nport, that -- D port and said 80.\n\n170\n00:09:44.530 --> 00:09:47.844\nWell, if I want to do more than one\nport I gotta add all this extra\n\n171\n00:09:47.844 --> 00:09:49.525\nskullduggery here.\n\n172\n00:09:49.525 --> 00:09:50.739\nSo I gotta do the- m,\n\n173\n00:09:50.739 --> 00:09:55.765\nno, I wanna do multiport cuz- n of these\narguments is the multiport argument.\n\n174\n00:09:55.765 --> 00:09:57.886\nAnd then I can do -- destination-ports.\n\n175\n00:09:57.886 --> 00:10:00.595\nWhat destination-ports do I wanna block?\n\n176\n00:10:00.595 --> 00:10:02.472\nNow I can add multiple ports if I want,\nbut\n\n177\n00:10:02.472 --> 00:10:05.218\nI'm gonna do a whole range cuz\nI'm gonna block everything.\n\n178\n00:10:05.218 --> 00:10:12.050\nSo I'm gonna say 1: 65535 and\nthen say -j drop and there we go.\n\n179\n00:10:12.050 --> 00:10:15.160\nThat should be, I think that's\nall we need, I think that's it.\n\n180\n00:10:15.160 --> 00:10:16.090\nHit Return, there we go.\n\n181\n00:10:16.090 --> 00:10:19.280\nYeah, no arguments from iptables.\n\n182\n00:10:19.280 --> 00:10:22.870\nNow let's see if that same\nscan will work for us here.\n\n183\n00:10:22.870 --> 00:10:28.260\nSo again, I just hit the up arrow going\nback to the PS scan, 1234 and hit return.\n\n184\n00:10:28.260 --> 00:10:29.736\nIt's taking a little time.\n\n185\n00:10:29.736 --> 00:10:30.443\nLook.\n\n186\n00:10:30.443 --> 00:10:31.160\nHa!\n\n187\n00:10:31.160 --> 00:10:33.270\nI'm much better than you, Mr. Man.\n\n188\n00:10:33.270 --> 00:10:38.773\nSo this is how I'm effectively using NMAP\nto start to secure my environment, right.\n\n189\n00:10:38.773 --> 00:10:43.630\nSo I've done a really good job of\nclosing off every port to that SYN scan.\n\n190\n00:10:43.630 --> 00:10:49.310\n>> Dan, when that host was discovered,\nwhat was it that NMAP's receiving back?\n\n191\n00:10:49.310 --> 00:10:51.030\nBecause we know what\nthe SYN packet's doing,\n\n192\n00:10:51.030 --> 00:10:54.760\nwe know that it's part of that handshake\nbut if we're not in a handshake,\n\n193\n00:10:54.760 --> 00:10:58.380\nwhat is it that NMAP's receiving back\nto detect whether that host is there or\n\n194\n00:10:58.380 --> 00:11:00.400\nnot, even though it's not\nthe three-way handshake?\n\n195\n00:11:00.400 --> 00:11:04.092\n>> Yeah, even though it's not the three\nway handshake, if it's the SYN then\n\n196\n00:11:04.092 --> 00:11:08.323\nit's receiving either an RST, remember,\nwe learned that in the previous episode.\n\n197\n00:11:08.323 --> 00:11:11.601\nIt's giving that reset flag\nwhich lets me know that, hey,\n\n198\n00:11:11.601 --> 00:11:14.762\nyou're giving me a response\nof some kind and you're up.\n\n199\n00:11:14.762 --> 00:11:17.838\nOr if it is an open port it'll\nsend back the SYN/ACK, right,\n\n200\n00:11:17.838 --> 00:11:19.765\nbecause that's the second step.\n\n201\n00:11:19.765 --> 00:11:21.665\nIt says,\nyou wanna open a relationship with me?\n\n202\n00:11:21.665 --> 00:11:23.395\nYou wanna get a conversation going.\n\n203\n00:11:23.395 --> 00:11:26.105\nWell, here's the second part of that,\nwhich is that SYN/ACK.\n\n204\n00:11:26.105 --> 00:11:29.704\nAnd then I'm supposed to send an ACK back,\nbut typically you'll send a reset back,\n\n205\n00:11:29.704 --> 00:11:32.185\ngoing, yeah,\nI've decided not to talk to you right now,\n\n206\n00:11:32.185 --> 00:11:35.342\nbecause basically I'm just trying\nto see if you're up and alive.\n\n207\n00:11:35.342 --> 00:11:36.492\nThat's whats happening.\n\n208\n00:11:36.492 --> 00:11:38.842\nBut now that we've firewalled it off,\n\n209\n00:11:38.842 --> 00:11:43.132\nwhat's coming back is nothing, right,\nit's just dropping those packets.\n\n210\n00:11:43.132 --> 00:11:45.502\nThere is no response from the machine.\n\n211\n00:11:45.502 --> 00:11:48.072\nSo what happens it sees it as\nI'm getting no response, so\n\n212\n00:11:48.072 --> 00:11:50.802\nit must be down, right, so\nthat's why that happens.\n\n213\n00:11:50.802 --> 00:11:56.290\nSo as I've blocked all the ports,\nnow the PS attack isn't gonna work.\n\n214\n00:11:56.290 --> 00:11:58.565\nIn walks our lovely PA scan.\n\n215\n00:11:58.565 --> 00:12:03.830\nI'm not blocking ACK, right, I'm just\nblocking the SYN, so I can use PA.\n\n216\n00:12:03.830 --> 00:12:09.951\nSo it's really simple, like I said, it\nworks just like the PS, just gotta use PA.\n\n217\n00:12:09.951 --> 00:12:12.235\nSo let's see what happens if I do that.\n\n218\n00:12:12.235 --> 00:12:17.197\nI'll bring this up,\nI will do, I don't want that.\n\n219\n00:12:17.197 --> 00:12:19.595\nI want to go to the beginning, here we go.\n\n220\n00:12:19.595 --> 00:12:24.730\nI'm going to just, I'm even gonna remove\nthe crazy random port I added to it and\n\n221\n00:12:24.730 --> 00:12:25.780\nmake that PA.\n\n222\n00:12:25.780 --> 00:12:30.194\nSo that is your ACK ping right there.\n\n223\n00:12:30.194 --> 00:12:33.410\nI'm gonna scroll that in so\nyou can see it a little bit better.\n\n224\n00:12:33.410 --> 00:12:35.900\nNo crazy ports on the end of it, just -PA.\n\n225\n00:12:35.900 --> 00:12:40.338\nIt's gonna send an ACK flagged\npacket straight to Port 80.\n\n226\n00:12:40.338 --> 00:12:41.610\nThat's the default.\n\n227\n00:12:41.610 --> 00:12:46.230\nSo now all we gotta do is hit\nthe Enter key, and see what happens.\n\n228\n00:12:46.230 --> 00:12:49.800\nLook, now even though my firewall\nis blocking like a crazy man for\n\n229\n00:12:49.800 --> 00:12:52.640\nthem SYNs,\nit's not blocking anything else.\n\n230\n00:12:52.640 --> 00:12:54.700\nSo the ACK worked with us.\n\n231\n00:12:54.700 --> 00:12:56.570\nAnd that's what we wanted.\n\n232\n00:12:56.570 --> 00:13:00.850\n>> And Dan, you've said in previous\nportions of this series that we're doing\n\n233\n00:13:00.850 --> 00:13:04.740\nthat there's a difference here\nin different types of output.\n\n234\n00:13:04.740 --> 00:13:06.421\nWhy did you run this as sudo?\n\n235\n00:13:06.421 --> 00:13:07.760\n>> Yeah, great question.\n\n236\n00:13:07.760 --> 00:13:10.630\nBecause if I don't run this as sudo,\nyou gotta remember,\n\n237\n00:13:10.630 --> 00:13:15.410\nthe root privilege gives you\nthe ability to set the raw data.\n\n238\n00:13:15.410 --> 00:13:17.890\nYou can work with the raw packets itself,\nright.\n\n239\n00:13:17.890 --> 00:13:21.397\nThat's the privilege of being\nthe privileged user is you can do things\n\n240\n00:13:21.397 --> 00:13:21.999\nlike that.\n\n241\n00:13:21.999 --> 00:13:25.255\nAs an unprivileged user, I can run PA, but\n\n242\n00:13:25.255 --> 00:13:29.280\nit's not gonna be able\nto send that ACK flag.\n\n243\n00:13:29.280 --> 00:13:33.740\nSo, NMAP is gonna say, well you don't have\nthe rights to send that ACK flag, but\n\n244\n00:13:33.740 --> 00:13:35.170\nyou know what you do have the rights to?\n\n245\n00:13:35.170 --> 00:13:36.850\nYou have the right to\ndo that connect scan,\n\n246\n00:13:36.850 --> 00:13:39.220\nlike we talked about prior with the PS.\n\n247\n00:13:39.220 --> 00:13:44.600\nSo when you're not running as\nan administrator, when you do the PS scan,\n\n248\n00:13:44.600 --> 00:13:46.320\nit does the connect scan instead,\n\n249\n00:13:46.320 --> 00:13:50.230\nwhich basically is a roundabout\nway to send SYN packets.\n\n250\n00:13:50.230 --> 00:13:52.770\nWell that's exactly what's gonna\nhappen here, it's gonna say,\n\n251\n00:13:52.770 --> 00:13:57.450\nyou're not a root user, so I can't do this\nACK flag that you'd like me to do, but\n\n252\n00:13:57.450 --> 00:14:01.600\nI can send a SYN connect scan,\nso that's what I'll do instead.\n\n253\n00:14:01.600 --> 00:14:05.140\nSo, if I do this without that sudo,\nI'm not gonna get these results.\n\n254\n00:14:05.140 --> 00:14:10.160\nSo if I up like this, I took sudo out\nof there if I was logged in as root,\n\n255\n00:14:10.160 --> 00:14:13.630\nand I logged out from root and logged\nin as a standard user and tried this.\n\n256\n00:14:14.900 --> 00:14:18.640\nIt's running and running and running,\nbut look at this right here.\n\n257\n00:14:18.640 --> 00:14:22.700\nHost seems down, if it really is up,\nbut blocking our ping probe.\n\n258\n00:14:22.700 --> 00:14:25.970\nTry this type of scan and\nmaybe it'll work for you.\n\n259\n00:14:25.970 --> 00:14:29.660\nThat's more of where we saw this before,\nthat full blown just scan it.\n\n260\n00:14:29.660 --> 00:14:31.960\nGo crazy, give it to it with both barrels.\n\n261\n00:14:31.960 --> 00:14:35.610\nI'm not at that point yet, but\nit's not seeing it as up, right?\n\n262\n00:14:35.610 --> 00:14:37.770\nIt's saying it might be firewalled,\nI don't know,\n\n263\n00:14:37.770 --> 00:14:39.610\nI'm not getting any response from it.\n\n264\n00:14:39.610 --> 00:14:42.510\nAnd it's because these SYN packets\nare being blocked by my firewall.\n\n265\n00:14:42.510 --> 00:14:43.740\nThat's what's happening.\n\n266\n00:14:43.740 --> 00:14:47.150\nSo again, like we've been saying,\npay attention to whether or\n\n267\n00:14:47.150 --> 00:14:50.040\nnot you're logged in as a root user or\n\n268\n00:14:50.040 --> 00:14:55.840\nnot because it can change the results that\nyou might get from your scans themselves.\n\n269\n00:14:55.840 --> 00:14:57.730\nAll right, let's see here.\n\n270\n00:14:57.730 --> 00:14:59.890\nWe are working our way through\nthis lovely thing here.\n\n271\n00:14:59.890 --> 00:15:04.820\nAnd what I do, I make sure that I\ndon't miss anything for you, yes.\n\n272\n00:15:04.820 --> 00:15:07.790\nI did wanna mention\nthe Windows 10 machine, right.\n\n273\n00:15:07.790 --> 00:15:09.840\nWe don't wanna forget that guy.\n\n274\n00:15:09.840 --> 00:15:14.960\nDefinitely get some different\nresults when I run against 136,\n\n275\n00:15:14.960 --> 00:15:16.730\nwhich is that Windows 10 machine.\n\n276\n00:15:18.810 --> 00:15:20.480\nLet's see what happens.\n\n277\n00:15:20.480 --> 00:15:24.650\nLook at that.\nIt's showing one IP address, 0 hosts up.\n\n278\n00:15:24.650 --> 00:15:26.860\nIt's kind of giving me the same error.\n\n279\n00:15:26.860 --> 00:15:29.280\nBut this worked even\nthough I was blocking,\n\n280\n00:15:29.280 --> 00:15:32.100\nthe Windows firewall is definitely\nblocking this type of attack.\n\n281\n00:15:32.100 --> 00:15:35.700\nSo you might be asking yourself,\nwell, why not just run it?\n\n282\n00:15:35.700 --> 00:15:37.960\nBecause what did work, the PS, right?\n\n283\n00:15:37.960 --> 00:15:41.120\nRemember we ran PS against it,\n\n284\n00:15:41.120 --> 00:15:44.180\nwe found that 7680 port alive at five,\nready to talk.\n\n285\n00:15:44.180 --> 00:15:47.380\nAnd it did allow me to\nfind that that was there.\n\n286\n00:15:47.380 --> 00:15:49.510\nSo why didn't I just do that here?\n\n287\n00:15:49.510 --> 00:15:53.410\nAnd that's a good question,\nI guess I could say.\n\n288\n00:15:53.410 --> 00:15:55.813\n>> Dan, now,\nlet me just be clear on something, and\n\n289\n00:15:55.813 --> 00:15:57.828\nI want to make sure that it's clarified.\n\n290\n00:15:57.828 --> 00:16:00.700\nAre you saying that the Windows firewall,\nand iptables,\n\n291\n00:16:00.700 --> 00:16:04.580\nwhen it comes to configurations are almost\nthe polar opposites of each other?\n\n292\n00:16:04.580 --> 00:16:09.121\nAnd what I mean by that specifically is\nthe fact that Windows firewall comes ready\n\n293\n00:16:09.121 --> 00:16:11.210\nto go, it's a pretty good defence.\n\n294\n00:16:11.210 --> 00:16:13.340\nIP Tables,\nit's not that it's not a good firewall,\n\n295\n00:16:13.340 --> 00:16:15.010\nI mean it's used by a lot of systems.\n\n296\n00:16:15.010 --> 00:16:18.110\nIt's just the fact that you have\nto configure every aspect of it.\n\n297\n00:16:18.110 --> 00:16:19.350\n>> Yeah that's exactly right.\n\n298\n00:16:19.350 --> 00:16:22.280\nThe Windows firewall comes like Wes said,\npreconfigured.\n\n299\n00:16:22.280 --> 00:16:25.890\nIt has default settings already built in.\n\n300\n00:16:25.890 --> 00:16:27.390\nThe guys at Microsoft said you know what?\n\n301\n00:16:27.390 --> 00:16:30.650\nThere's some security things that as\nsecurity professionals we know about.\n\n302\n00:16:30.650 --> 00:16:33.140\nLet's go ahead and\njust implement that for our users.\n\n303\n00:16:33.140 --> 00:16:36.460\nBecause what is the Windows desktop\noperating system mostly used for?\n\n304\n00:16:36.460 --> 00:16:40.200\nHome users that aren't really\nprobably that tech savvy.\n\n305\n00:16:40.200 --> 00:16:45.570\nEven if you are in a domain environment\nlike some corporate type of environment.\n\n306\n00:16:45.570 --> 00:16:50.330\nIt is still really helpful that these\nthings have settings out of the box and\n\n307\n00:16:50.330 --> 00:16:52.200\nthen we can tweak it as we like.\n\n308\n00:16:52.200 --> 00:16:58.880\nWhere as Unix and Linux systems assume a\nhigh level of knowledge for the end user.\n\n309\n00:16:58.880 --> 00:17:01.610\nSo they just leave a slate and\nsay make it the way you want to make it.\n\n310\n00:17:01.610 --> 00:17:04.400\nSo we have to go in and\nset those settings.\n\n311\n00:17:04.400 --> 00:17:05.920\n>> Yeah, Wes great question.\n\n312\n00:17:05.920 --> 00:17:08.310\nAnd the other one goes back to\nwhat I was talking about earlier.\n\n313\n00:17:08.310 --> 00:17:11.580\nWhy would I use one over the other?\n\n314\n00:17:11.580 --> 00:17:16.220\nWhy am I using ACK and SYN?\n\n315\n00:17:16.220 --> 00:17:18.610\nRight, and that's a great question,\nthat's a really good one.\n\n316\n00:17:18.610 --> 00:17:22.680\nIt's because one might elicit a response,\nand the other one might not.\n\n317\n00:17:22.680 --> 00:17:26.340\nOr both might elicit a response,\nneither might elicit a response.\n\n318\n00:17:26.340 --> 00:17:31.860\nIt's all about using everything at\nour disposal to discover hosts.\n\n319\n00:17:31.860 --> 00:17:35.420\nSo If I run that ps scan and\nI get nothing,\n\n320\n00:17:35.420 --> 00:17:38.440\nespecially in a test environment\nwhere I know there's something there,\n\n321\n00:17:38.440 --> 00:17:41.750\nnow I'm going to run that pa, and\nsee if that gets me something.\n\n322\n00:17:41.750 --> 00:17:45.070\nSo it's all about\neliciting those responses.\n\n323\n00:17:45.070 --> 00:17:48.410\n>> Now I could also see where\nin the concept of syn and\n\n324\n00:17:48.410 --> 00:17:51.070\nack here Dan, if somebody's actively,\n\n325\n00:17:51.070 --> 00:17:55.010\nmaybe blocking because of a syn flood\nattack, so We've got software there.\n\n326\n00:17:55.010 --> 00:17:56.380\nAnd it's not even in this context.\n\n327\n00:17:56.380 --> 00:17:58.638\nIt's blocking against\na completely different attack.\n\n328\n00:17:58.638 --> 00:18:01.440\nWhere the ACK packet,\neven though the SYNs being blocked,\n\n329\n00:18:01.440 --> 00:18:04.460\npreventing SYN flood attacks, were you\nmight jump over to the ACK packet?\n\n330\n00:18:05.940 --> 00:18:07.990\n>> Yeah, I guess you could.\n\n331\n00:18:07.990 --> 00:18:10.730\nIt just really depends on what\nyour environment's going on to\n\n332\n00:18:10.730 --> 00:18:11.530\nbe honest with you.\n\n333\n00:18:11.530 --> 00:18:13.060\n>> Gotcha, yup.\n>> And when you're firewalling,\n\n334\n00:18:13.060 --> 00:18:15.660\nyou have to figure out\nwhat's gonna work for you.\n\n335\n00:18:15.660 --> 00:18:18.360\nIf I'm running a web server,\nI have to open port 80.\n\n336\n00:18:18.360 --> 00:18:23.510\nI gotta open it up and that is a common\ninroad in the people's networks.\n\n337\n00:18:23.510 --> 00:18:25.280\nBut what good is it gonna do?\n\n338\n00:18:25.280 --> 00:18:26.400\nWe need to have a web server.\n\n339\n00:18:26.400 --> 00:18:27.940\nNo one can get to this thinking thing.\n\n340\n00:18:27.940 --> 00:18:32.000\nSo it's all gonna boil down to whether or\nnot you need something versus whether or\n\n341\n00:18:32.000 --> 00:18:35.025\nnot you want something, and\ntrying to just figure out ways.\n\n342\n00:18:35.025 --> 00:18:39.910\nReally firewalling is a course all\non to itself, to be honest with you.\n\n343\n00:18:39.910 --> 00:18:44.220\nWe're specifically looking at how can we\nget around these firewalls using Nma and\n\n344\n00:18:44.220 --> 00:18:47.320\nthen use Nmap to figure\nout what we need to do\n\n345\n00:18:47.320 --> 00:18:48.870\nto make sure our firewalls are effective.\n\n346\n00:18:48.870 --> 00:18:51.040\nSo it's kind of like a pre\nstaging environment for\n\n347\n00:18:51.040 --> 00:18:52.890\na good firewall show\nto be honest with you.\n\n348\n00:18:52.890 --> 00:18:54.360\nAll right, so let's see here.\n\n349\n00:18:54.360 --> 00:18:57.410\nWe covered the ACK scans.\n\n350\n00:18:57.410 --> 00:18:58.280\nPretty straight forward.\n\n351\n00:18:58.280 --> 00:18:59.720\nNothing too it like I said,\n\n352\n00:18:59.720 --> 00:19:05.030\nvery similar to our synth ping but,\nWes, I thought this was funny.\n\n353\n00:19:05.030 --> 00:19:07.030\nWe were talking about this earlier.\n\n354\n00:19:07.030 --> 00:19:11.580\nWhat about the lazy,\nteenage brother of TCP?\n\n355\n00:19:11.580 --> 00:19:12.700\nRight?\n\n356\n00:19:12.700 --> 00:19:14.072\nAnd Wes.\n\n357\n00:19:14.072 --> 00:19:14.997\n>> Absolutely.\n\n358\n00:19:14.997 --> 00:19:15.565\n>> You're sitting here.\n\n359\n00:19:15.565 --> 00:19:18.314\n>> I'm sitting here thinking\nthat we've been relying a lot\n\n360\n00:19:18.314 --> 00:19:20.319\non TCP Transmission Control Protocol but\n\n361\n00:19:20.319 --> 00:19:23.467\nthose of you guys out there watching\nthat have looked at some of our\n\n362\n00:19:23.467 --> 00:19:26.925\nother episodes you know that there's\nalso a connectionless service.\n\n363\n00:19:26.925 --> 00:19:28.525\nAnd that's why we're here joking around.\n\n364\n00:19:28.525 --> 00:19:31.125\nWhat about the lazy brother to TCP?\n\n365\n00:19:31.125 --> 00:19:32.865\nAnd that's none other than UDP.\n\n366\n00:19:32.865 --> 00:19:35.165\nCan we use UDP inside of a MAP?\n\n367\n00:19:35.165 --> 00:19:36.455\n>> Yes we can.\n\n368\n00:19:36.455 --> 00:19:37.555\nBecause, why?\n\n369\n00:19:37.555 --> 00:19:40.430\nBecause a, we have access to UDP.\n\n370\n00:19:40.430 --> 00:19:44.675\nIt's a protocol that's available to us\nas users in our computer systems and\n\n371\n00:19:44.675 --> 00:19:48.680\nNmap says what if you're\nblocking some sort of TCP scans?\n\n372\n00:19:48.680 --> 00:19:52.580\nWhat if you're that good at\nfirewalling can we use UDP?\n\n373\n00:19:52.580 --> 00:19:55.330\nWell yep we sure can UDP\nis a fantastic thing.\n\n374\n00:19:55.330 --> 00:19:58.330\nLet's jump to my computer real quick,\nI'll show you the quick and dirty.\n\n375\n00:19:58.330 --> 00:20:03.570\nGonna kind of shotgun these next\ndifferent types of scans because, again,\n\n376\n00:20:03.570 --> 00:20:07.620\nbasically the same kind of\nformat as the PS and the PA.\n\n377\n00:20:07.620 --> 00:20:09.410\nAnd now that you guys\nare familiar with it,\n\n378\n00:20:09.410 --> 00:20:11.470\nwe should be able to more\neasily move through them.\n\n379\n00:20:11.470 --> 00:20:13.950\nSo for PU, I'm gonna clear\nthe screen just to make it easier.\n\n380\n00:20:16.140 --> 00:20:16.830\nHere we go.\n\n381\n00:20:16.830 --> 00:20:19.720\nAll I have to do is go over to my P.\n\n382\n00:20:19.720 --> 00:20:22.520\nChange it to u and guess what?\n\n383\n00:20:22.520 --> 00:20:25.910\nIt sends UDP packets\ninstead of TCP packets.\n\n384\n00:20:25.910 --> 00:20:30.830\nAnd if I'm not mistaken,\nactually they are going to a strange port.\n\n385\n00:20:30.830 --> 00:20:32.930\nI'm glad I thought of this.\n\n386\n00:20:32.930 --> 00:20:36.140\nBy default they send UDP\npackets to which port?\n\n387\n00:20:36.140 --> 00:20:37.300\nYou probably said 80.\n\n388\n00:20:37.300 --> 00:20:38.900\nWell that's not true.\n\n389\n00:20:38.900 --> 00:20:43.540\nIt's not sending it to port 80,\nit's sending it to port 40125,\n\n390\n00:20:43.540 --> 00:20:48.500\nand 40125 that's an odd place to\nsend things and you're right it is.\n\n391\n00:20:48.500 --> 00:20:51.320\nAnd typically that port is closed.\n\n392\n00:20:51.320 --> 00:20:56.830\nAnd you're thinking, okay again\nis this something like our ps and\n\n393\n00:20:56.830 --> 00:20:59.550\npa where if it's close\nit elicits a response.\n\n394\n00:20:59.550 --> 00:21:00.900\nYup, you're very very right.\n\n395\n00:21:00.900 --> 00:21:04.680\nActually, if it's closed,\nit'll send an error, right?\n\n396\n00:21:04.680 --> 00:21:05.650\nAnd that's what we want.\n\n397\n00:21:05.650 --> 00:21:11.510\nWe want it to send something back to it\nto say you realize I'm closed port right?\n\n398\n00:21:11.510 --> 00:21:13.170\nAnd that's basically what it's doing.\n\n399\n00:21:13.170 --> 00:21:17.680\nSo instead of like with our\nTCP hand shake we're saying,\n\n400\n00:21:17.680 --> 00:21:21.700\nyou didn't send the right thing, so\nI'm sending a reset, or I'm open.\n\n401\n00:21:21.700 --> 00:21:24.730\nSo, here's the next step on\nour conversation remember with\n\n402\n00:21:24.730 --> 00:21:27.180\nUDP we send data and it just goes.\n\n403\n00:21:27.180 --> 00:21:32.190\nMy computer doesn't typically look for any\ntype of responses to that is just sending\n\n404\n00:21:32.190 --> 00:21:36.280\ndata like a machine gun and if it hits\nthe target, great, if it doesn't, well.\n\n405\n00:21:36.280 --> 00:21:37.830\nRight, it's best effort.\n\n406\n00:21:39.460 --> 00:21:42.806\nWhen I hit a port that's not\nexpecting to do anything,\n\n407\n00:21:42.806 --> 00:21:45.372\nthat's actually when we get a response.\n\n408\n00:21:45.372 --> 00:21:50.125\nIf I'm sending a TCP,\nI'm sorry a UDP packet to a port\n\n409\n00:21:50.125 --> 00:21:55.105\nthat's DUP that's open and\nlooking for connections.\n\n410\n00:21:55.105 --> 00:21:59.394\nWell a, I'm gonna see the connection\nthere so the great, I know my but\n\n411\n00:21:59.394 --> 00:22:02.030\nit's not gonna list a very good response.\n\n412\n00:22:02.030 --> 00:22:05.940\nOnly very few UDP services enlisted the\nkind of responses that will let us know\n\n413\n00:22:05.940 --> 00:22:07.140\nthat it's alive.\n\n414\n00:22:07.140 --> 00:22:09.870\nJust gonna accept the packets and\ngo on its merry way.\n\n415\n00:22:09.870 --> 00:22:14.430\nIt's when the port is closed that it's\ngonna say [SOUND] I'm not an open port,\n\n416\n00:22:14.430 --> 00:22:16.120\nwhat are you doing.\n\n417\n00:22:16.120 --> 00:22:17.470\nAnd it's gonna send the error back to us.\n\n418\n00:22:17.470 --> 00:22:22.340\nSo, then we know, okay, my bad, I didn't\nmean to bother you there good sir.\n\n419\n00:22:22.340 --> 00:22:26.000\nI'm just gonna write down the fact\nthat you're actually breathing and\n\n420\n00:22:26.000 --> 00:22:26.950\nmove on my merry way.\n\n421\n00:22:26.950 --> 00:22:28.090\nThat's what's going on.\n\n422\n00:22:28.090 --> 00:22:30.390\nSo that's why we might use UDP.\n\n423\n00:22:30.390 --> 00:22:33.300\nAgain, typically if we're blocking TCP or\n\n424\n00:22:33.300 --> 00:22:37.090\nwe wanna be a little more stealthy,\nthis can be very helpful with that.\n\n425\n00:22:37.090 --> 00:22:40.130\nLet's see here, anything else I\nwanted to tell you about that.\n\n426\n00:22:42.590 --> 00:22:48.910\nBasically that's about it,\nit can be another tool in the chest.\n\n427\n00:22:48.910 --> 00:22:51.350\nSo that we can elicit looking for\n\n428\n00:22:51.350 --> 00:22:54.710\nmachines that maybe are being\nfirewalled from TCP connections.\n\n429\n00:22:54.710 --> 00:22:55.880\nSo use that one as you will.\n\n430\n00:22:55.880 --> 00:22:57.640\nSo let's see here, okay.\n\n431\n00:22:58.800 --> 00:23:00.900\nSo we've talked about different\ntypes of pings, right.\n\n432\n00:23:00.900 --> 00:23:02.480\nSo far we've gone through.\n\n433\n00:23:02.480 --> 00:23:07.250\nSend ping, act ping, and now UDP ping,\nwhat about good old ping?\n\n434\n00:23:07.250 --> 00:23:09.310\nI did show this to you earlier.\n\n435\n00:23:10.350 --> 00:23:12.390\nAnd Nmap can do it.\n\n436\n00:23:12.390 --> 00:23:16.630\nAll we have to do is the dash\npe argumentation right?\n\n437\n00:23:16.630 --> 00:23:21.250\nSo instead of pu I would do pe,\nand this would do the standard and\n\n438\n00:23:21.250 --> 00:23:25.240\nwhat's called a type eight,\necho request and reply.\n\n439\n00:23:25.240 --> 00:23:26.400\nThat's what it's looking for.\n\n440\n00:23:26.400 --> 00:23:31.850\nThis is just like if I typed ping, or at\nleast extremely similar, if not identical\n\n441\n00:23:31.850 --> 00:23:37.500\nto, depending on the system,\nhow it deals with the TCP/IP sweep.\n\n442\n00:23:37.500 --> 00:23:40.790\nBut typically very,\nvery similar to here is an echo.\n\n443\n00:23:40.790 --> 00:23:42.480\nI'm waiting for a reply,\nnow I know this is up.\n\n444\n00:23:42.480 --> 00:23:46.170\nSo if I just wanna do a regular\nold ping with nmap, I can do that.\n\n445\n00:23:46.170 --> 00:23:48.270\nI can jump right there, hit Return.\n\n446\n00:23:48.270 --> 00:23:50.480\nOf course I'm fire,\nwell actually I'm not firewalling.\n\n447\n00:23:50.480 --> 00:23:53.110\nSo, I am firewalling.\n\n448\n00:23:53.110 --> 00:23:55.692\nBut we'll see what happens cuz I don't\nremember what I've done with the firewall.\n\n449\n00:23:55.692 --> 00:23:56.704\nYeah, there you go.\n\n450\n00:23:56.704 --> 00:23:57.991\nIt's being blocked.\n\n451\n00:23:57.991 --> 00:23:59.327\nSo great stuff.\n\n452\n00:23:59.327 --> 00:24:00.884\n0 hosts down.\n\n453\n00:24:00.884 --> 00:24:03.660\nEven though it's actually not down.\n\n454\n00:24:03.660 --> 00:24:04.910\nNow did I do the right one?\n\n455\n00:24:04.910 --> 00:24:06.970\nYeah, that was 136, so\nthat is being firewalled.\n\n456\n00:24:06.970 --> 00:24:08.490\nThat's our Windows machine.\n\n457\n00:24:08.490 --> 00:24:11.630\nIf I did our Metasploitable,\nlet's see what happens there.\n\n458\n00:24:11.630 --> 00:24:17.810\nYeah, so good old-fashioned ping,\nit's working great, nothing to it, -PE.\n\n459\n00:24:17.810 --> 00:24:21.410\nThis is, like I said,\nbasically what ping does by default.\n\n460\n00:24:21.410 --> 00:24:23.270\nWe've seen how it works,\n\n461\n00:24:23.270 --> 00:24:28.490\npretty simple, but let's go ahead and\nfirewall that, right?\n\n462\n00:24:28.490 --> 00:24:31.351\nLet's firewall that standard ping off.\n\n463\n00:24:31.351 --> 00:24:34.730\nLet me jump over here to\nmy Metasploitable, and\n\n464\n00:24:34.730 --> 00:24:37.016\nI'll do my flush command here.\n\n465\n00:24:37.016 --> 00:24:42.772\nAnd I'm gonna do sudo\niptables -A INPUT -p,\n\n466\n00:24:42.772 --> 00:24:47.651\nfor what we wanna block, which is tcp.\n\n467\n00:24:47.651 --> 00:24:52.713\nActually, it's icmp,\nthis is not a tcp, it's an icmp.\n\n468\n00:24:52.713 --> 00:24:56.192\nAnd I'm going to,\nis that everything I wanna do?\n\n469\n00:24:56.192 --> 00:24:59.686\nI'll block tcp, yes, the IC,\n\n470\n00:24:59.686 --> 00:25:03.913\nI think that's all we need for right now.\n\n471\n00:25:03.913 --> 00:25:05.350\nI just gotta remember my IP tables.\n\n472\n00:25:06.655 --> 00:25:11.806\nNo, there is something,\nit's the icmp-type.\n\n473\n00:25:11.806 --> 00:25:14.709\nThat's what we're looking for\nand I wanna block echo.\n\n474\n00:25:14.709 --> 00:25:16.973\nActually, I don't want the input,\nI want the output chain.\n\n475\n00:25:19.411 --> 00:25:24.220\nO-U-T, this isn't important for\nother than learning how to use a firewall.\n\n476\n00:25:24.220 --> 00:25:28.650\nBlock that output chain,\nand I wanna block echo.\n\n477\n00:25:28.650 --> 00:25:33.952\nThis is the type of echo reply.\n\n478\n00:25:33.952 --> 00:25:37.440\nYeah, and then do- j DROP.\n\n479\n00:25:37.440 --> 00:25:38.900\nOkay, so here we go.\n\n480\n00:25:38.900 --> 00:25:42.280\nFrom the beginning, we've got sudo\niptables that came from the output, so\n\n481\n00:25:42.280 --> 00:25:48.240\nI'm actually accepting the data\ncoming in from the ping,\n\n482\n00:25:48.240 --> 00:25:50.830\nbut when it goes to respond,\nI'm dropping it.\n\n483\n00:25:50.830 --> 00:25:52.650\nI'm saying don't respond.\n\n484\n00:25:52.650 --> 00:25:56.000\nI'm allowing it to come in, but I'm not\nallowing it to go out with the reply.\n\n485\n00:25:56.000 --> 00:25:59.235\nSo, I'm blocking my machine\nfrom any activity, okay.\n\n486\n00:25:59.235 --> 00:26:02.405\nAnd then I'm saying -p icmp,\nthat's what we're blocking.\n\n487\n00:26:02.405 --> 00:26:04.042\nWhat type of icmp?\n\n488\n00:26:04.042 --> 00:26:09.375\nIt's that echo-reply -j DROP that sends\nthem my drop, leave that echo alone.\n\n489\n00:26:09.375 --> 00:26:11.439\nSo I'll hit Enter, there we go.\n\n490\n00:26:11.439 --> 00:26:16.225\nAnd now when I run the same command,\nwe should see no hosts up.\n\n491\n00:26:16.225 --> 00:26:19.850\nAnd there we go, that's exactly\nwhat we're seeing right there.\n\n492\n00:26:21.210 --> 00:26:23.750\n>> Now, we should be good, right, Dan?\n\n493\n00:26:23.750 --> 00:26:25.610\nIf I look at this right, you blocked ICMP.\n\n494\n00:26:25.610 --> 00:26:27.290\nI don't have to worry about it anymore.\n\n495\n00:26:27.290 --> 00:26:29.500\nI can set it, forget it, walk away.\n\n496\n00:26:29.500 --> 00:26:32.180\nI should be good from ICMP based scans,\nright?\n\n497\n00:26:32.180 --> 00:26:36.300\n>> Yeah, you are,\nfrom ICMP echo reply scans.\n\n498\n00:26:36.300 --> 00:26:42.258\nBut again, we're landing back to\nour basic networking knowledge,\n\n499\n00:26:42.258 --> 00:26:44.937\nright, .Net+ kind of info.\n\n500\n00:26:44.937 --> 00:26:48.990\nICMP is a whole suite of utilities,\nactually.\n\n501\n00:26:48.990 --> 00:26:50.220\nSo it's not just ping.\n\n502\n00:26:50.220 --> 00:26:52.250\nIt's not just echo requests and replies.\n\n503\n00:26:52.250 --> 00:26:53.780\nIt does other things.\n\n504\n00:26:53.780 --> 00:27:01.210\nSpecifically, for Nmap usage,\nit does timestamp look up, all right.\n\n505\n00:27:01.210 --> 00:27:05.822\nI can actually reach out to the machine\nand say, tell me the time that you're in.\n\n506\n00:27:05.822 --> 00:27:08.630\nI wanna verify the clocks\nare set correctly and\n\n507\n00:27:08.630 --> 00:27:10.860\nthat all of that system is working fine.\n\n508\n00:27:10.860 --> 00:27:13.110\nSo that's part of the ICMP suite.\n\n509\n00:27:13.110 --> 00:27:14.890\nAlso part of the ICMP is address masking.\n\n510\n00:27:14.890 --> 00:27:17.130\nWhat's your address mask?\n\n511\n00:27:17.130 --> 00:27:18.780\nSend that back as well.\n\n512\n00:27:18.780 --> 00:27:19.740\nRight?\n\n513\n00:27:19.740 --> 00:27:22.200\nIf I'm not blocking those that\nmeans I can still talk to them.\n\n514\n00:27:22.200 --> 00:27:25.050\nAll I've blocked is what type echo reply.\n\n515\n00:27:25.050 --> 00:27:28.660\nSo I can still ping and\nthat's what we're going to show you.\n\n516\n00:27:28.660 --> 00:27:30.870\nWe're going to show you\nhow to do that actually.\n\n517\n00:27:30.870 --> 00:27:31.940\nSo you're thinking,\n\n518\n00:27:31.940 --> 00:27:36.580\ndo I do PE something, no, well run away\nfrom PE because that's being blocked.\n\n519\n00:27:36.580 --> 00:27:38.790\nWe've got a couple of\nits brothers though or\n\n520\n00:27:38.790 --> 00:27:41.580\nsisters if you'd like\nwhatever the case may be.\n\n521\n00:27:41.580 --> 00:27:43.180\nWe have dash pp.\n\n522\n00:27:45.240 --> 00:27:49.200\nSo dash pp will give us\nthe ability to check that\n\n523\n00:27:49.200 --> 00:27:53.340\nI believe that's the time\nstamp one if I'm not mistaken.\n\n524\n00:27:53.340 --> 00:27:56.820\nYes, that's the type,\nit's a type 14 ICMP, right?\n\n525\n00:27:56.820 --> 00:28:00.880\nSo just figure general knowledge,\nthere's no exam on this that I know of,\n\n526\n00:28:00.880 --> 00:28:03.960\nbut for your behoovement there.\n\n527\n00:28:03.960 --> 00:28:07.990\nSo -PP will give us that response, let's\nsee what happens when I run that guy.\n\n528\n00:28:07.990 --> 00:28:11.700\nLook, it did return because\nI'm not blocking that type.\n\n529\n00:28:11.700 --> 00:28:17.970\nSo now again, I take off my hacker hat,\nI put on my network administrator hat.\n\n530\n00:28:17.970 --> 00:28:20.920\nI'll say okay, well,\nI guess I need to block that too.\n\n531\n00:28:20.920 --> 00:28:27.040\nSo I'll jump over here And I will change\nthis to Timestamp instead of Echo Reply.\n\n532\n00:28:32.150 --> 00:28:34.360\nThat's it,\n\n533\n00:28:35.500 --> 00:28:40.539\nadded another chain to my table here, and\nnow we come over, we run the same command.\n\n534\n00:28:41.830 --> 00:28:44.720\nLet's see here, taking a little time,\na little effort and\n\n535\n00:28:44.720 --> 00:28:47.120\nyep zero hosts up, right there.\n\n536\n00:28:48.620 --> 00:28:50.220\nNow we've locked that timestamp.\n\n537\n00:28:50.220 --> 00:28:53.470\nSo this is how we get around it and\nthis is how we block it, right?\n\n538\n00:28:53.470 --> 00:28:56.490\nSo I'm kind of giving you\na mini firewalling idea.\n\n539\n00:28:56.490 --> 00:28:59.910\nThis works as well in\nthe Windows 10 firewall.\n\n540\n00:28:59.910 --> 00:29:04.830\nIt's not turned on,\nif I drop this down, and\n\n541\n00:29:04.830 --> 00:29:08.780\nwe do 136,\nlet's see if we get anything out of that.\n\n542\n00:29:09.820 --> 00:29:12.160\nYeah, it, okay, so\nthis is blocking it in some way, shape, or\n\n543\n00:29:12.160 --> 00:29:13.580\nform, cuz we're getting 0 hosts up.\n\n544\n00:29:13.580 --> 00:29:15.310\nSo that's something you gotta be aware of.\n\n545\n00:29:15.310 --> 00:29:19.580\nAs you bounce through different\ntypes of systems One firewall might\n\n546\n00:29:19.580 --> 00:29:22.490\nbe giving you all the gold and\nthe other one might be saying I am stingy,\n\n547\n00:29:22.490 --> 00:29:24.610\nEbenezer Scrooge,\nyou aint getting nothing.\n\n548\n00:29:24.610 --> 00:29:27.110\nRight and the windows firewall is\npretty robust out of the gate,\n\n549\n00:29:27.110 --> 00:29:31.910\nso be prepared to really have to work for\ninformation from that guy.\n\n550\n00:29:31.910 --> 00:29:33.430\nIt's a very good firewall.\n\n551\n00:29:33.430 --> 00:29:35.360\nI am impressed with it\nto be honest with you.\n\n552\n00:29:35.360 --> 00:29:37.310\nAll right, let's see what else we have.\n\n553\n00:29:37.310 --> 00:29:43.367\nThe pm is the next one, let's see\nhere we'll just change this pp to pm.\n\n554\n00:29:45.724 --> 00:29:48.448\nAnd let's see what that does, let's see\nif we can hit that Window's firewall,\n\n555\n00:29:48.448 --> 00:29:49.020\ngets anything.\n\n556\n00:29:49.020 --> 00:29:50.470\nNope, still blocking that.\n\n557\n00:29:50.470 --> 00:29:54.000\nThat's our address mask, type of ping.\n\n558\n00:29:54.000 --> 00:29:56.620\nSo again another tool in the tool belts.\n\n559\n00:29:56.620 --> 00:30:00.760\nThat's what this is all about, giving you\nall the different types of host scans\n\n560\n00:30:00.760 --> 00:30:05.040\nthat you can do that will in\nmaybe some way elicit a response.\n\n561\n00:30:05.040 --> 00:30:07.590\nWhat else do we have here?\n\n562\n00:30:07.590 --> 00:30:10.470\nBy the way, we do have arp scanning.\n\n563\n00:30:10.470 --> 00:30:13.680\nNow, we talk about this, arp scanning's\ndone by default So typically you don't\n\n564\n00:30:13.680 --> 00:30:18.494\nhave to enable it, but if you needed to\nfor whatever reason, it's -pr, right?\n\n565\n00:30:18.494 --> 00:30:23.474\nSo -pr and\nthat will make sure it uses arp-scanning\n\n566\n00:30:23.474 --> 00:30:26.270\ninstead of echoes or\nwhatever the case may be.\n\n567\n00:30:26.270 --> 00:30:27.690\nSo use pr for that.\n\n568\n00:30:27.690 --> 00:30:29.640\nIt's great for LANs.\n\n569\n00:30:29.640 --> 00:30:32.620\nSuper fast,\nreally picks up a lot of information.\n\n570\n00:30:32.620 --> 00:30:34.090\nIt's very reliable.\n\n571\n00:30:34.090 --> 00:30:36.560\n>> You know, I could see why Art would\n\n572\n00:30:36.560 --> 00:30:39.290\nbe beneficial definitely\nin trying to find out host.\n\n573\n00:30:39.290 --> 00:30:42.250\nCause any time I want to get somebody's\nattention in the mall the first\n\n574\n00:30:42.250 --> 00:30:44.970\nthing I do is jump up on the table,\nand scream at the top of my lungs and\n\n575\n00:30:44.970 --> 00:30:46.120\nI usually get some kind of response.\n\n576\n00:30:46.120 --> 00:30:49.940\nEverybody in the courtyard looks back\nat me And our is broadcast right.\n\n577\n00:30:49.940 --> 00:30:52.410\nSo if everybody on\nthe network should respond.\n\n578\n00:30:52.410 --> 00:30:53.970\nGreat stuff there Dan.\n\n579\n00:30:53.970 --> 00:30:55.710\nI think we've got a couple\nmore though right?\n\n580\n00:30:55.710 --> 00:30:58.660\n>> Yeah just two more for\nyour education purposes.\n\n581\n00:30:58.660 --> 00:31:03.390\nAnd this is dash P Y and dash P O,\nthese are both new scans.\n\n582\n00:31:03.390 --> 00:31:09.450\nI'm just gonna let the nmap manual\npage here do the talking there.\n\n583\n00:31:09.450 --> 00:31:15.510\nThere we go, PY is a portless or\nSCTP INIT ping scan.\n\n584\n00:31:15.510 --> 00:31:18.140\nThis is new territory for even myself,\n\n585\n00:31:18.140 --> 00:31:23.870\nthis is I think With the newest\nversion of Nmap or just prior.\n\n586\n00:31:23.870 --> 00:31:29.130\nI haven't had any real experience with it,\nother than it works very similar,\n\n587\n00:31:29.130 --> 00:31:33.780\njust differently, but very similarly\nto the other scans we've done so far.\n\n588\n00:31:33.780 --> 00:31:36.350\n>> Is this one that you'd have\nto be a privileged user Dan, or\n\n589\n00:31:36.350 --> 00:31:39.260\ncan you be a non-privileged user,\nhow would you have to run this?\n\n590\n00:31:39.260 --> 00:31:40.380\n>> Yeah, great question,\n\n591\n00:31:40.380 --> 00:31:45.210\nand you absolutely have to be a privileged\nuser to run this type of scan.\n\n592\n00:31:45.210 --> 00:31:51.800\nAnd the next one, which is This one\nright here POP, the IP Protocol Ping.\n\n593\n00:31:51.800 --> 00:31:56.640\nSo, it gives you a certain levels of,\nagain another one that's new to me\n\n594\n00:31:56.640 --> 00:31:59.510\non how to use it but\nit's right there on the documentation.\n\n595\n00:31:59.510 --> 00:32:01.900\nSo, you got to look at\nwords very similarly and\n\n596\n00:32:01.900 --> 00:32:06.110\nagain you just go to the dash PO\nall the port options actually work.\n\n597\n00:32:06.110 --> 00:32:09.140\nI think this is the only one that is\ndifferent that's give you a range\n\n598\n00:32:09.140 --> 00:32:11.780\nof 1 to 255 these different\ntypes of protocol options\n\n599\n00:32:11.780 --> 00:32:16.350\ndoesn't really get into\ngreat detail in here.\n\n600\n00:32:16.350 --> 00:32:21.490\nYou have ICMP, protocol one,\nIGMP which is protocol two,\n\n601\n00:32:21.490 --> 00:32:26.050\nand IPNIP which is protocol four, so\nyou use one of these types of things.\n\n602\n00:32:26.050 --> 00:32:27.110\nAnd it's just, again,\n\n603\n00:32:27.110 --> 00:32:30.750\ntrying to elicit some sort of\nresponse From the target machine.\n\n604\n00:32:30.750 --> 00:32:34.460\nSo you can just throw every\none of these scans at it.\n\n605\n00:32:34.460 --> 00:32:38.370\nHave ten different scans running\nsimultaneously if you want.\n\n606\n00:32:38.370 --> 00:32:41.670\nOther than it'll take awhile\nit's not going to hurt anything.\n\n607\n00:32:41.670 --> 00:32:44.990\nSo use them all make sure\nthat you play with them,\n\n608\n00:32:44.990 --> 00:32:46.450\nif one doesn't work try the other one.\n\n609\n00:32:46.450 --> 00:32:47.950\nIf that doesn't work, try another one.\n\n610\n00:32:47.950 --> 00:32:50.390\nIf you're trying to fire wall things off,\n\n611\n00:32:50.390 --> 00:32:53.320\nuse these scans to see if you can\nget around your fire wall, and\n\n612\n00:32:53.320 --> 00:32:56.860\nthen go back to the drawing board\nas far as your fire wall goes.\n\n613\n00:32:56.860 --> 00:32:59.070\nHost discovery, there it is.\n\n614\n00:32:59.070 --> 00:33:00.140\n>> Dan thank you so much.\n\n615\n00:33:00.140 --> 00:33:02.370\nIt's been a long journey that\nwe've been taken through.\n\n616\n00:33:02.370 --> 00:33:04.190\nHost discovery and\nthe journey's long, why?\n\n617\n00:33:04.190 --> 00:33:06.730\nBecause end math is very powerful and\nthere's a lot of options.\n\n618\n00:33:06.730 --> 00:33:09.240\nSo take Dan's advice Use different scans.\n\n619\n00:33:09.240 --> 00:33:11.910\nIf you don't get the results you\nwant make sure you are in sudo or\n\n620\n00:33:11.910 --> 00:33:13.360\nyou're a non sudo user.\n\n621\n00:33:13.360 --> 00:33:15.810\nDan, I do see that we are coming\nto the end of another episode.\n\n622\n00:33:15.810 --> 00:33:18.040\nBut before we leave do you\nhave any words of wisdom?\n\n623\n00:33:18.040 --> 00:33:22.360\n>> Yeah, just again do not scan\nmachines that you do not own.\n\n624\n00:33:22.360 --> 00:33:23.580\nPinging is one thing.\n\n625\n00:33:23.580 --> 00:33:28.190\nMake sure you use that sn if you want\nto just scan machines that are not\n\n626\n00:33:28.190 --> 00:33:29.830\nwithin your territory so\n\n627\n00:33:29.830 --> 00:33:33.550\nto speak, that way it doesn't actually\ndo any kind of port scanning yet.\n\n628\n00:33:33.550 --> 00:33:34.610\nWe'll get to port scanning,\n\n629\n00:33:34.610 --> 00:33:36.980\nthough it's actually coming up\nin our next couple of episodes.\n\n630\n00:33:36.980 --> 00:33:39.640\n>> Well thank you for being here Dan,\nand thank you guys for watching, but\n\n631\n00:33:39.640 --> 00:33:41.480\nwe're gonna go ahead and\ntake this time to sign out.\n\n632\n00:33:41.480 --> 00:33:43.550\nI've been your host Wes Bryan\n>> I'm Daniel Lowry.\n\n633\n00:33:43.550 --> 00:33:45.913\n>> And we'll see you next time.\n\n634\n00:33:45.913 --> 00:33:53.420\n[MUSIC]\n\n",
          "vimeoId": "165935788"
        },
        {
          "description": "In this episode, Wes and Dan discuss the various states of TCP/IP ports. They demonstrate the output that can be received within Nmap when a port scan is performed. They cover open, closed, filtered, unfiltered, open/filtered and finally the closed/filtered state.",
          "length": "2011",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-1-port-states-051016-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-1-port-states-051016-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-1-port-states-051016-1-sm.jpg",
          "title": "Port States",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.956 --> 00:00:15.250\nWelcome back to another exciting\nepisode here at ITProTV.\n\n3\n00:00:15.250 --> 00:00:18.880\nI'm your host Wes Bryan, and in today's\nepisode, we're moving through, or\n\n4\n00:00:18.880 --> 00:00:22.020\nshould I say continuing\nthrough our nmap's here.\n\n5\n00:00:22.020 --> 00:00:24.080\nWe got none other than in\nthe studio today then Mr.\n\n6\n00:00:24.080 --> 00:00:25.630\nDan Lowrie, Dan how you doing sir?\n\n7\n00:00:25.630 --> 00:00:28.360\n>> Man, I am doing fantastic,\nI am so glad to be here,\n\n8\n00:00:28.360 --> 00:00:30.760\ntalking about nmap again with you guys.\n\n9\n00:00:30.760 --> 00:00:32.750\nAnd guess what, we're, we're ever so\n\n10\n00:00:32.750 --> 00:00:37.080\nmuch closer to actually doing some port\nscans and seeing what happens there.\n\n11\n00:00:37.080 --> 00:00:42.210\nBut we got this one episode right\nhere that we need to have a sit down,\n\n12\n00:00:42.210 --> 00:00:44.630\npop a squat, sit by the fire and\n\n13\n00:00:44.630 --> 00:00:48.230\nunderstand some things before we\ncan actually get to that area.\n\n14\n00:00:48.230 --> 00:00:51.070\nAnd what I'm talking about is port states.\n\n15\n00:00:51.070 --> 00:00:54.790\nIf I don't know what-,\nlet me put it this way.\n\n16\n00:00:54.790 --> 00:00:59.810\nIf I run an Nmap scan against a target or\na multitude of targets, and\n\n17\n00:00:59.810 --> 00:01:05.425\nit returns results to me, and I'm unable\nto at least have a basic understanding of\n\n18\n00:01:05.425 --> 00:01:11.400\nA: What has happened when I fired off\nthat scan, and B: What is the result?\n\n19\n00:01:11.400 --> 00:01:16.930\nHow can I look at these results with any\nkind of understanding and knowledge then\n\n20\n00:01:16.930 --> 00:01:21.500\nI'm gonna have a hard time using that data\nto my advantage later on down the road.\n\n21\n00:01:21.500 --> 00:01:25.390\nNow typically if you're just running\nsomething maybe just a standard security\n\n22\n00:01:25.390 --> 00:01:27.550\nscan you can do it the easy way and\n\n23\n00:01:27.550 --> 00:01:30.180\nthat is a very common way\nin which this is done.\n\n24\n00:01:30.180 --> 00:01:32.100\nBut if we want to have\nthat deeper understanding,\n\n25\n00:01:32.100 --> 00:01:36.380\nwell then we need to take a look at\nthe different port states that we might\n\n26\n00:01:36.380 --> 00:01:41.770\nencounter, that are elicited by the many\ndifferent types of scans that we can run.\n\n27\n00:01:41.770 --> 00:01:46.820\nAnd then, once we get this under our\nbelts, we'll be able to more effectively\n\n28\n00:01:46.820 --> 00:01:50.730\nlook at the different types of port scans,\nsee the output that comes from it, and\n\n29\n00:01:50.730 --> 00:01:53.980\ndeal with that and\ndigest it as an end user.\n\n30\n00:01:53.980 --> 00:01:56.390\nHave that data actually work for\nus and mean something.\n\n31\n00:01:56.390 --> 00:01:58.470\nSo that's what today's\nepisode is all about.\n\n32\n00:01:58.470 --> 00:02:03.590\nWe're gonna take a look at the different\nport states and what they mean to us.\n\n33\n00:02:03.590 --> 00:02:07.480\nThat being said, let's hit the ground\nrunning, start with the beginning here.\n\n34\n00:02:07.480 --> 00:02:11.470\nOne of the first things I do what you guys\nto understand is that when you fire off\n\n35\n00:02:11.470 --> 00:02:14.390\nan Nmap scan,\nif I got it on to my computer here and\n\n36\n00:02:14.390 --> 00:02:20.130\nI do a good old sudu nmap and\nmy target IP or whatever target like so.\n\n37\n00:02:20.130 --> 00:02:22.670\nAnd I fired it off, what happens?\n\n38\n00:02:22.670 --> 00:02:23.960\nWhat does nmap do?\n\n39\n00:02:23.960 --> 00:02:25.990\nWell it's got a few defaults.\n\n40\n00:02:25.990 --> 00:02:28.650\nIt's gonna run the defaults type of scan,\n\n41\n00:02:28.650 --> 00:02:32.370\nwe'll get to that in just a little while\nand I bet probably in the next episode.\n\n42\n00:02:32.370 --> 00:02:36.160\nAnd it also it start\nscanning the machines ports.\n\n43\n00:02:36.160 --> 00:02:39.070\nAnd this is where something as just wanted\nto make sure that you're aware of that you\n\n44\n00:02:39.070 --> 00:02:40.470\nhave this knowledge.\n\n45\n00:02:40.470 --> 00:02:44.730\nBecause you may want to make it act\ndifferently, and that's fine, but\n\n46\n00:02:44.730 --> 00:02:49.010\nyou gotta know how it acts by default if\nyou're going to know how to work with it\n\n47\n00:02:50.520 --> 00:02:52.010\noutside of those defaults.\n\n48\n00:02:52.010 --> 00:02:57.400\nSo the default way an nmap is gonna work,\nit's gonna run a SYN scan, and\n\n49\n00:02:57.400 --> 00:03:01.970\nit's gonna run that against the first\n1,000 ports on your target computer.\n\n50\n00:03:01.970 --> 00:03:03.120\nAnd you're thinking, cool!\n\n51\n00:03:03.120 --> 00:03:04.515\nThat's nice.\n\n52\n00:03:04.515 --> 00:03:06.510\n1,000, that's a nice round number.\n\n53\n00:03:06.510 --> 00:03:10.720\nAnd it is, and there's a good reason\nit runs against the first 1,000 ports.\n\n54\n00:03:10.720 --> 00:03:14.885\nThat's because those are known as\nthe well-known ports are very common ports\n\n55\n00:03:14.885 --> 00:03:17.405\nin which network services are running on.\n\n56\n00:03:17.405 --> 00:03:21.415\nSo, if you scan a machine, and\nyou do it against those first 1,000 ports,\n\n57\n00:03:21.415 --> 00:03:24.155\nas nmap does, the good thing is is,\n\n58\n00:03:24.155 --> 00:03:29.035\nif there is something running, it's\nprobably going to be in those 1,000 ports.\n\n59\n00:03:29.035 --> 00:03:30.465\nNot necessarily, but\n\n60\n00:03:30.465 --> 00:03:35.970\nit's a very good chance if that computer\nis running some type of service.\n\n61\n00:03:35.970 --> 00:03:39.900\nIn those first 1,000 which are most\nlikely going to show that surface.\n\n62\n00:03:39.900 --> 00:03:41.340\n>> Now Dan, I do have a question.\n\n63\n00:03:41.340 --> 00:03:45.320\nWhen you mention those first 1,000 ports,\nI know there's a lot, right?\n\n64\n00:03:45.320 --> 00:03:46.076\nYou mentioned it in earlier episode.\n\n65\n00:03:46.076 --> 00:03:46.622\n>> 1,000 of them.\n[LAUGH]\n\n66\n00:03:46.622 --> 00:03:50.120\n>> There's 65,535 ports,\n\n67\n00:03:50.120 --> 00:03:52.423\nthat's a lot of ports to do some scanning.\n\n68\n00:03:52.423 --> 00:03:56.030\nSo, when you say well-known ports, ome of\nthe things that come to mid are things\n\n69\n00:03:56.030 --> 00:03:58.520\nlike your Email ports right,\nthings like Telnet,\n\n70\n00:03:58.520 --> 00:04:03.370\nthings like SSH, things like SMB traffic\nif you're in a Windows network and\n\n71\n00:04:03.370 --> 00:04:05.020\nthese are some of the ports\nthat you are talking about?\n\n72\n00:04:05.020 --> 00:04:06.385\n>> That is exactly right.\n\n73\n00:04:06.385 --> 00:04:08.660\nWes is been around the block a few times.\n\n74\n00:04:08.660 --> 00:04:11.430\nHe's work with ports himself\nI'm sure you guys have as well.\n\n75\n00:04:11.430 --> 00:04:14.840\nSo this shouldn't be anything\ntoo insanely new to you,\n\n76\n00:04:14.840 --> 00:04:18.350\nyou should be like okay all that makes\nsense now that I know what nmap is doing I\n\n77\n00:04:18.350 --> 00:04:24.060\nget that it should be looking for\nthings like Telnet and FTP and DNS and\n\n78\n00:04:24.060 --> 00:04:29.150\nany other service SMTP or POP3 something\n\n79\n00:04:29.150 --> 00:04:34.470\nof that nature those are gonna be found\nusually within that first 1,000 ports.\n\n80\n00:04:34.470 --> 00:04:36.850\nAnd that's the money, right.\n\n81\n00:04:36.850 --> 00:04:38.120\nThat's the good stuff.\n\n82\n00:04:38.120 --> 00:04:40.660\nNow, it will also look for\nother things as well but\n\n83\n00:04:40.660 --> 00:04:45.550\nbasically it might not necessarily be\nlooking for ports one through 1,000.\n\n84\n00:04:45.550 --> 00:04:48.120\nLet me do make that distinction.\n\n85\n00:04:48.120 --> 00:04:52.160\nIt's looking for the most common ports\nwithin the first common port range.\n\n86\n00:04:52.160 --> 00:04:56.560\nAs well as a few other ports that\nare above that, that are also common,\n\n87\n00:04:56.560 --> 00:05:00.460\njust they're outside of\nthe well-known port range, per se.\n\n88\n00:05:00.460 --> 00:05:02.320\nAll right, so let's keep that in mind.\n\n89\n00:05:02.320 --> 00:05:05.400\nAnd that way if you say hey,\nyou've got port 8,000 something there.\n\n90\n00:05:05.400 --> 00:05:08.200\nI go yes, I know, and\nI know I told you it was the 1,000 ports.\n\n91\n00:05:08.200 --> 00:05:11.840\nIt's not specifically\nthe first 1,000 ports.\n\n92\n00:05:11.840 --> 00:05:16.720\nIt is a 1,000 ports, most of them in\nthe common or well-known port range.\n\n93\n00:05:16.720 --> 00:05:17.640\nThere we go.\n\n94\n00:05:17.640 --> 00:05:18.630\nDisclaimer says so\n\n95\n00:05:18.630 --> 00:05:21.805\nthat way if I mess up horribly,\nyou guys can't hammer me too badly.\n\n96\n00:05:21.805 --> 00:05:25.830\n[LAUGH] [INAUDIBLE] You guys\nwould never do that to me.\n\n97\n00:05:25.830 --> 00:05:26.870\n>> That's a great point Dan.\n\n98\n00:05:26.870 --> 00:05:27.850\nI thought about that.\n\n99\n00:05:27.850 --> 00:05:30.430\nUntil you mentioned it I would\nhave probably thought hey,\n\n100\n00:05:30.430 --> 00:05:33.390\nyou meant from zero to 1,000\nin that well-known port range.\n\n101\n00:05:33.390 --> 00:05:34.160\nBut wait a second.\n\n102\n00:05:34.160 --> 00:05:36.990\nNow I'm thinking well, there's a common\nport out there that sits in the middle of\n\n103\n00:05:36.990 --> 00:05:38.640\nthose registered port ranges.\n\n104\n00:05:38.640 --> 00:05:40.120\nAnd it's common to every Windows machine,\nright?\n\n105\n00:05:40.120 --> 00:05:42.010\nNow many of you out there are running RDP?\n\n106\n00:05:42.010 --> 00:05:45.480\nWell RDP is port 3389 and that's\ndefinitely not in the first 1,000 ports.\n\n107\n00:05:45.480 --> 00:05:47.120\nSo something like this,\nis this what you mean?\n\n108\n00:05:47.120 --> 00:05:48.150\n>> That's exactly right.\n\n109\n00:05:48.150 --> 00:05:49.910\nAnd I'd almost guarantee.\n\n110\n00:05:49.910 --> 00:05:55.420\nI need to find a list of exactly what\nthose 1,000 ports are that it scans.\n\n111\n00:05:55.420 --> 00:06:00.210\nI just know that the vast majority\nof them lie in, actually it's\n\n112\n00:06:00.210 --> 00:06:05.485\nthe first 1,048 or\n28 ports if I'm not mistaken.\n\n113\n00:06:05.485 --> 00:06:08.560\n1,024 ports is the well-known port range,\nper se.\n\n114\n00:06:08.560 --> 00:06:13.200\nBut we do have a couple of those\nvery well-known ports like 3389 that\n\n115\n00:06:13.200 --> 00:06:17.030\nsit obviously outside of 1,024.\n\n116\n00:06:17.030 --> 00:06:18.770\nSo that being said there we go.\n\n117\n00:06:18.770 --> 00:06:22.980\nHopefully that dispels any kind of,\nwell why am I getting this and\n\n118\n00:06:22.980 --> 00:06:24.320\nthose types of questions.\n\n119\n00:06:24.320 --> 00:06:28.870\nWhy am I seeing port 3389 when\nI'm scanning a 1,000 ports?\n\n120\n00:06:28.870 --> 00:06:33.020\nIt just doesn't mean that it's one\nthrough 1,000 like Wes had mentioned.\n\n121\n00:06:33.020 --> 00:06:36.010\nAll right,\nnow let's talk about port states.\n\n122\n00:06:36.010 --> 00:06:39.650\nThis is definitely the bread and\nbutter of this here episode.\n\n123\n00:06:39.650 --> 00:06:43.540\nThe thing about the 1,000 ports\nis just informational for you, so\n\n124\n00:06:43.540 --> 00:06:44.550\nthat you would know that.\n\n125\n00:06:44.550 --> 00:06:47.319\nBut these port states are very,\nvery interesting information.\n\n126\n00:06:48.620 --> 00:06:50.010\nSo what do I mean by port states?\n\n127\n00:06:50.010 --> 00:06:53.400\nIt means is the port open,\nis the port closed?\n\n128\n00:06:53.400 --> 00:06:59.330\nWhat are the different responses or\nreports that I might get from nmap,\n\n129\n00:06:59.330 --> 00:07:04.770\nthese labels for the ports that it has\nfound from the different scans, we'll\n\n130\n00:07:04.770 --> 00:07:09.930\nget a multitude, actually, there are six\nspecific states that you might encounter\n\n131\n00:07:09.930 --> 00:07:13.460\nwith any nmap scan that you run, and\nI'll just run through them really quickly.\n\n132\n00:07:13.460 --> 00:07:15.930\nIt's going to be open, closed.\n\n133\n00:07:15.930 --> 00:07:16.870\nWhat else is it?\n\n134\n00:07:16.870 --> 00:07:19.090\nFiltered, unfiltered.\n\n135\n00:07:19.090 --> 00:07:23.180\nThat it's open filtered and\nclosed filtered.\n\n136\n00:07:23.180 --> 00:07:27.410\nOkay?\nSo, okay, kind of you had me for\n\n137\n00:07:27.410 --> 00:07:29.990\na little while, and\nthen now it's starting to get a little\n\n138\n00:07:29.990 --> 00:07:34.290\nvague okay let's we'll get to that and\nprobably remove the veil.\n\n139\n00:07:34.290 --> 00:07:35.950\nHopefully we'll remove the veil for you so\n\n140\n00:07:35.950 --> 00:07:38.220\nthat makes a little more\nsense as we get to it.\n\n141\n00:07:38.220 --> 00:07:39.330\nLet's just start at the beginning, right.\n\n142\n00:07:39.330 --> 00:07:44.510\nOpen ports, what does that mean when\nm maps says this port is open right.\n\n143\n00:07:44.510 --> 00:07:46.920\nWhat it means is that there is a service,\n\n144\n00:07:46.920 --> 00:07:50.420\nthat is running on that port,\nit is waiting and accepting connections.\n\n145\n00:07:50.420 --> 00:07:55.375\nRight, so it's waiting for an accepting\nconnections, that come inbound to it.\n\n146\n00:07:55.375 --> 00:07:57.529\nRight?\nThis is, SSH, it's a great one,\n\n147\n00:07:57.529 --> 00:08:02.938\nit's sitting there, going, it's twiddling\nit's thumbs and doing sitting around.\n\n148\n00:08:02.938 --> 00:08:07.894\nAnd then when someone says at\na terminal or through a utility,\n\n149\n00:08:07.894 --> 00:08:13.134\nSSH to this computer on this port,\nand they hit the Enter button,\n\n150\n00:08:13.134 --> 00:08:17.270\nthey hit go, they hit do it,\nhit execute, right?\n\n151\n00:08:17.270 --> 00:08:22.910\nThat computer sees the request come in on\nthat port and says that's SSH, that's me.\n\n152\n00:08:22.910 --> 00:08:24.200\nI'm good to go.\n\n153\n00:08:24.200 --> 00:08:25.418\nAnd replies to it.\n\n154\n00:08:25.418 --> 00:08:30.790\nSo what NMAP is doing is it's\nsending information to that port and\n\n155\n00:08:30.790 --> 00:08:32.910\nseeing if any response is elicited.\n\n156\n00:08:32.910 --> 00:08:36.940\nIf a response is elicited,\nwell then it knows the port is open and\n\n157\n00:08:36.940 --> 00:08:37.980\nit is receiving.\n\n158\n00:08:37.980 --> 00:08:39.440\nSo how does it do that?\n\n159\n00:08:39.440 --> 00:08:40.640\nThat's really what we need to get into.\n\n160\n00:08:40.640 --> 00:08:41.420\nWes, do you have a question?\n\n161\n00:08:41.420 --> 00:08:44.260\n>> Yeah, I was gonna ask you\nsomething about the open port states.\n\n162\n00:08:44.260 --> 00:08:48.230\nYou said that it's part of a network\nservice and it's a communication.\n\n163\n00:08:48.230 --> 00:08:51.810\nDan, would it be fair to say, and correct\nme if I'm wrong, does that mean that if\n\n164\n00:08:51.810 --> 00:08:55.050\na port, let's say our computer\nisn't currently using that service,\n\n165\n00:08:55.050 --> 00:08:58.860\nbut it is enabled, that maybe that port\nbeing open is in a listening state?\n\n166\n00:08:58.860 --> 00:09:00.630\nWould that be a way to think of it?\n\n167\n00:09:00.630 --> 00:09:01.180\n>> Yeah, yeah.\n\n168\n00:09:01.180 --> 00:09:02.530\nThat's a really good way to think of it.\n\n169\n00:09:02.530 --> 00:09:07.280\nIt is waiting for connections to occur,\neven if you're not using it, right?\n\n170\n00:09:07.280 --> 00:09:12.220\nAnd this is one of the main reasons in\nwhich we use NMAP, cuz sometimes, and\n\n171\n00:09:12.220 --> 00:09:14.570\nwe saw this in one of\nthe earlier episodes, right?\n\n172\n00:09:14.570 --> 00:09:15.990\nI ran a scan against my own machine.\n\n173\n00:09:15.990 --> 00:09:19.230\nI found two ports opening,\nthat were open and listening.\n\n174\n00:09:19.230 --> 00:09:22.090\nI had no idea that that was happening,\nright?\n\n175\n00:09:22.090 --> 00:09:25.300\nI mean it was from some old software that\nI had installed and forgotten about.\n\n176\n00:09:25.300 --> 00:09:27.160\nAnd there it was.\n\n177\n00:09:27.160 --> 00:09:30.670\nThat software did not\ncare whether it was me,\n\n178\n00:09:30.670 --> 00:09:35.350\nWes, or\nsome guy in Timbuktu trying to contact it.\n\n179\n00:09:35.350 --> 00:09:38.710\nIt was in an open state, and\nif you had the right set of credentials or\n\n180\n00:09:38.710 --> 00:09:42.300\nwhatever it is that it met you with\nto allow you to make that connection,\n\n181\n00:09:42.300 --> 00:09:43.560\nit would've done it, right.\n\n182\n00:09:43.560 --> 00:09:45.670\nIf I didn't know that,\nif I didn't run NMAP and\n\n183\n00:09:45.670 --> 00:09:47.960\nfind that, then I would have been exposed.\n\n184\n00:09:47.960 --> 00:09:50.370\nI have a vulnerability and\nit was a vulnerability.\n\n185\n00:09:50.370 --> 00:09:53.480\nI was running a web server and\nwho knows what kind of web server it was,\n\n186\n00:09:53.480 --> 00:09:55.070\nsome generic web server.\n\n187\n00:09:55.070 --> 00:09:58.470\nI don't know if they patch, I certainly\nhadn't patched the thing in god know when.\n\n188\n00:09:58.470 --> 00:10:00.800\nRunning FTP, dangerous right,\n\n189\n00:10:00.800 --> 00:10:04.190\ndangerous thing to just be randomly\nrunning some FTP especially\n\n190\n00:10:04.190 --> 00:10:08.920\nwhen we have more secure protocols out\nthere that do the exact same things.\n\n191\n00:10:08.920 --> 00:10:11.350\nOne runs to my mind, secure FTP anyone?\n\n192\n00:10:11.350 --> 00:10:14.010\nRight, so these are things that\nwe need to be on the lookout for.\n\n193\n00:10:14.010 --> 00:10:14.730\nSo Wes is right.\n\n194\n00:10:14.730 --> 00:10:18.340\nIt's just sitting there going, hey,\nanybody want to do some FTP today?\n\n195\n00:10:18.340 --> 00:10:21.180\nI'm down for it if you want to.\n\n196\n00:10:21.180 --> 00:10:23.640\nSo that's one of the great\nreasons that we use that.\n\n197\n00:10:23.640 --> 00:10:24.850\nThat would be an open port.\n\n198\n00:10:24.850 --> 00:10:26.140\nThe service is running.\n\n199\n00:10:26.140 --> 00:10:29.460\nIt's waiting for and\naccepting incoming connections.\n\n200\n00:10:29.460 --> 00:10:32.730\nAnd if the price is right,\nif everything works out correctly,\n\n201\n00:10:32.730 --> 00:10:37.420\nit will establish that full connection and\ndo what the protocol is intended to do.\n\n202\n00:10:37.420 --> 00:10:42.000\nSo if it's FTP, it'll allow you to send\nand transfer files, right, great stuff.\n\n203\n00:10:42.000 --> 00:10:45.660\nIf it's AD, it's gonna give you web\nservices, all that other goodness.\n\n204\n00:10:45.660 --> 00:10:48.990\nSo, that's what we mean when\nwe say this is an open port.\n\n205\n00:10:48.990 --> 00:10:51.110\nLet me make sure I didn't miss anything.\n\n206\n00:10:52.200 --> 00:10:53.850\nNo, that's basically it.\n\n207\n00:10:53.850 --> 00:10:57.640\nSo it's accepting incoming connections,\nand that's all you need to know.\n\n208\n00:10:57.640 --> 00:11:02.380\nSo, if NMAP tells you it's open,\nyou know, okay, this is the gold.\n\n209\n00:11:02.380 --> 00:11:06.290\nThis is what we're mining for\nwhen we're using NMAP.\n\n210\n00:11:06.290 --> 00:11:08.345\nThat's the really,\nreally good stuff, okay?\n\n211\n00:11:09.390 --> 00:11:11.770\nSo let's move on to closed.\n\n212\n00:11:11.770 --> 00:11:14.512\nAll right so again,\nit seems pretty straightforward.\n\n213\n00:11:14.512 --> 00:11:19.390\nAll right the port is closed,\nthat means it is not waiting for or\n\n214\n00:11:19.390 --> 00:11:20.900\naccepting incoming connections.\n\n215\n00:11:20.900 --> 00:11:24.220\nIt's basically the opposite of open.\n\n216\n00:11:24.220 --> 00:11:30.420\nSo, what else, great,\nit's the opposite of open.\n\n217\n00:11:30.420 --> 00:11:31.140\nIt's closed.\n\n218\n00:11:31.140 --> 00:11:32.390\nThere's nothing else we can do with that.\n\n219\n00:11:33.600 --> 00:11:35.950\nYeah, well sometimes closed\nports can be our friend, right?\n\n220\n00:11:35.950 --> 00:11:39.260\nSo sometimes it lets us know\nthat there's a machine there.\n\n221\n00:11:39.260 --> 00:11:42.540\nYou know, we went through a lot of\nthis kind of stuff in host discovery\n\n222\n00:11:42.540 --> 00:11:44.960\nwith what we can do with a closed port.\n\n223\n00:11:44.960 --> 00:11:47.836\nWes, it looks like you\nhave another question?\n\n224\n00:11:47.836 --> 00:11:51.080\n>> I do,\ncuz in that episode you said closed ports,\n\n225\n00:11:51.080 --> 00:11:54.360\nbut there was a problem that you\nshowed us with there because\n\n226\n00:11:54.360 --> 00:11:58.110\njust because it's closed,\ndoesn't mean that you can't discover it.\n\n227\n00:11:58.110 --> 00:12:00.230\nSo maybe help us out with that one there.\n\n228\n00:12:00.230 --> 00:12:02.290\nJust because it's closed doesn't\nmean we're secure, right?\n\n229\n00:12:02.290 --> 00:12:03.030\n>> Right.\n\n230\n00:12:03.030 --> 00:12:06.910\nIt just means that it's not going to be,\nright yeah.\n\n231\n00:12:06.910 --> 00:12:07.980\nWes puts it really well.\n\n232\n00:12:07.980 --> 00:12:10.240\nHe says it doesn't mean it's secure.\n\n233\n00:12:10.240 --> 00:12:11.140\nThat's exactly right.\n\n234\n00:12:11.140 --> 00:12:16.260\nAnd really where this helps us\na lot is in the discovery phase,\n\n235\n00:12:16.260 --> 00:12:17.750\nlike we looked at, right?\n\n236\n00:12:17.750 --> 00:12:22.710\nWhen I can have all the ports on\nmy computer completely closed off,\n\n237\n00:12:22.710 --> 00:12:26.130\nbasically, for whatever reason I've\nconnected it to the network and\n\n238\n00:12:26.130 --> 00:12:28.540\nit has no network connectivity, right?\n\n239\n00:12:28.540 --> 00:12:34.541\nOr it's not accepting anything\nother than what I've requested.\n\n240\n00:12:34.541 --> 00:12:39.690\nSo only outbound communications will and\n\n241\n00:12:39.690 --> 00:12:42.030\nthen of course that's stateful,\nyou've gotta.\n\n242\n00:12:42.030 --> 00:12:44.330\nBecause I've sent something,\nsay I wanted to see a website right?\n\n243\n00:12:44.330 --> 00:12:47.837\nObviously I would go into\nport 80 of that machine.\n\n244\n00:12:47.837 --> 00:12:50.669\nOf course we would open a port and\na socket and that would work but\n\n245\n00:12:50.669 --> 00:12:54.910\nit's not really what we're talking about\nfor intents and purposes of NMAP scanning.\n\n246\n00:12:54.910 --> 00:12:57.090\nWhat we're meaning here\nis in the host discovery,\n\n247\n00:12:57.090 --> 00:13:00.790\nremember we saw that if a port was closed,\nand\n\n248\n00:13:00.790 --> 00:13:05.600\nI sent data to it, I sent something\nlike that SYN flag, what would it do?\n\n249\n00:13:05.600 --> 00:13:07.200\nIt said well I'm closed,\n\n250\n00:13:07.200 --> 00:13:11.710\nI shouldn't be receiving any SYN\nflags because I'm a closed port.\n\n251\n00:13:11.710 --> 00:13:12.480\nSo what does it do?\n\n252\n00:13:12.480 --> 00:13:13.760\nIt responds.\n\n253\n00:13:13.760 --> 00:13:17.620\nIt responds in a specific way that\nit's been defined to respond,\n\n254\n00:13:17.620 --> 00:13:19.930\nwhich is that RST, that reset pack, right?\n\n255\n00:13:19.930 --> 00:13:23.740\nSo it flags RST and sends that back and\nsays you got the wrong port buddy,\n\n256\n00:13:23.740 --> 00:13:25.100\nI'm closed.\n\n257\n00:13:25.100 --> 00:13:27.190\nSo a we know that the port is closed,\nso that's good,\n\n258\n00:13:27.190 --> 00:13:32.920\nI know that's not an avenue of attack for\nme as a security person or\n\n259\n00:13:32.920 --> 00:13:35.700\nI say as a hacker it's\nnot an avenue of attack.\n\n260\n00:13:35.700 --> 00:13:37.030\nAnd if I'm a security person,\n\n261\n00:13:37.030 --> 00:13:39.350\nit's not an avenue of vulnerability\nthat I need to worry about.\n\n262\n00:13:39.350 --> 00:13:44.930\nBecause other than the fact that it is\nsending back RSTs, cuz it's a closed port,\n\n263\n00:13:44.930 --> 00:13:49.230\nthat's all I need to really\nreally worry about, okay?\n\n264\n00:13:49.230 --> 00:13:50.680\nLet's jump back to my computer real quick.\n\n265\n00:13:50.680 --> 00:13:53.790\nAnd I do wanna show you what this\nkind of stuff does look like.\n\n266\n00:13:53.790 --> 00:13:57.290\nLet me really quickly show you\nwhat it means to see open.\n\n267\n00:13:57.290 --> 00:13:59.980\nAnd then we'll look what it\nlooks like to see a closed port.\n\n268\n00:13:59.980 --> 00:14:01.470\nJust so you can see that output.\n\n269\n00:14:01.470 --> 00:14:05.870\nSo I'm just gonna run a standard\nNMAP scan against my Metasploitable.\n\n270\n00:14:05.870 --> 00:14:10.620\nAnd actually did some DNS skullduggery so\nthat I could start typing the name.\n\n271\n00:14:10.620 --> 00:14:13.786\nMetasploitable I think that's right.\n\n272\n00:14:13.786 --> 00:14:18.800\nSo I give them my old password and\nhere we go and this is what I mean,\n\n273\n00:14:18.800 --> 00:14:22.500\nright here we see here's our port number.\n\n274\n00:14:22.500 --> 00:14:24.780\nIt's TCP and the state is open.\n\n275\n00:14:24.780 --> 00:14:28.030\nAnd it so kindly gives me\nthe service that runs on that port.\n\n276\n00:14:28.030 --> 00:14:32.010\nBut that's what we mean when we say that\nnmap will tell you that the port is open.\n\n277\n00:14:32.010 --> 00:14:35.180\nThat's it right there,\nthe state is open, right?\n\n278\n00:14:35.180 --> 00:14:35.990\nSo what about closed?\n\n279\n00:14:35.990 --> 00:14:36.940\nHow do we see closed?\n\n280\n00:14:38.240 --> 00:14:39.190\nLet's see here.\n\n281\n00:14:39.190 --> 00:14:44.080\nIf I do that same thing but I go after\na port that I know specifically is\n\n282\n00:14:44.080 --> 00:14:49.200\nclosed by default, it's obviously not\nreporting back to me any closed ports.\n\n283\n00:14:49.200 --> 00:14:55.180\nBut if I wanted to scan a specific port\nand find out whether it was specifically\n\n284\n00:14:55.180 --> 00:14:59.980\nopen or closed, or maybe something else,\nI could actually pinpoint that.\n\n285\n00:14:59.980 --> 00:15:04.240\nSo, I just say nmap, I do my -p for\nport and what port I want.\n\n286\n00:15:04.240 --> 00:15:05.826\n223, how about that?\n\n287\n00:15:05.826 --> 00:15:07.440\nI don't know, a random port.\n\n288\n00:15:07.440 --> 00:15:10.140\nIt didn't show up in my list,\nso I assume that it's closed.\n\n289\n00:15:10.140 --> 00:15:13.220\nHit Return and there we go.\n\n290\n00:15:13.220 --> 00:15:18.260\nThere's the port 223, state is closed and\nit even gives me the service for that.\n\n291\n00:15:18.260 --> 00:15:19.675\nSo I know that that is closed.\n\n292\n00:15:19.675 --> 00:15:22.980\nThat's what you'll see, so\nif I did a few different ports and\n\n293\n00:15:22.980 --> 00:15:27.650\nthey were all closed I would see a list of\nclosed ports letting me know specifically\n\n294\n00:15:27.650 --> 00:15:29.340\nthese ports are closed.\n\n295\n00:15:29.340 --> 00:15:31.600\nSo that's basically what\nwe're talking about.\n\n296\n00:15:31.600 --> 00:15:35.140\nI want you to be familiar with the output\nand the states that they're returning.\n\n297\n00:15:35.140 --> 00:15:38.280\nNotice that this does say state.\n\n298\n00:15:38.280 --> 00:15:40.170\nAnd underneath that column\nis going to be the state.\n\n299\n00:15:40.170 --> 00:15:42.690\nAnd sometimes you'll\njust see a list of open,\n\n300\n00:15:42.690 --> 00:15:44.490\nsometimes you'll see a list of closed.\n\n301\n00:15:44.490 --> 00:15:46.860\nSometimes you'll see a hodge podge\nof the different stuff as well.\n\n302\n00:15:46.860 --> 00:15:49.872\nSo I'm gonna try to show you\nevery one of them that I can.\n\n303\n00:15:49.872 --> 00:15:54.062\nSo at least you've visually laid eyes\non these things, you're not completely\n\n304\n00:15:54.062 --> 00:15:57.268\na newbie when it comes to seeing\nthe output of Of an M Map scan.\n\n305\n00:15:57.268 --> 00:15:58.909\nAll right.\n\n306\n00:15:58.909 --> 00:16:00.720\nLet' see here,\nwhat else do we need to go over?\n\n307\n00:16:00.720 --> 00:16:01.945\nAll right.\nSo we've looked at open,\n\n308\n00:16:01.945 --> 00:16:03.030\nwe looked at close.\n\n309\n00:16:03.030 --> 00:16:07.410\nI guess the next best stop\nwill be a filtered, port.\n\n310\n00:16:07.410 --> 00:16:09.150\nSo what do we mean, when we say filtered?\n\n311\n00:16:10.620 --> 00:16:14.310\nWell, if we live in this day and age,\nand you've messed around with just about\n\n312\n00:16:14.310 --> 00:16:20.190\nanything networking, lies, right?\n\n313\n00:16:20.190 --> 00:16:22.330\nIn reference to a network.\n\n314\n00:16:22.330 --> 00:16:25.640\nYou've probably heard of things\nlike firewalls, right, net filters.\n\n315\n00:16:25.640 --> 00:16:31.820\nThese are things that are saying,\nokay, I've got a port open, but\n\n316\n00:16:31.820 --> 00:16:37.300\nI just don't want any old person jumping\non that port and doing whatever they want.\n\n317\n00:16:37.300 --> 00:16:39.890\nOr maybe I don't even want\nthem to know that it's there.\n\n318\n00:16:39.890 --> 00:16:43.760\nSo I'll filter out any\ntraffic that comes from here,\n\n319\n00:16:43.760 --> 00:16:47.180\nor, if it's of this type, or\nthings of that nature, right?\n\n320\n00:16:47.180 --> 00:16:50.790\nSo that's basically what we're looking for\nwhen we look for filtered.\n\n321\n00:16:50.790 --> 00:16:53.710\nNow why is this important for\nus as Nmap scanners, right?\n\n322\n00:16:53.710 --> 00:16:54.870\nThis is important because, A,\n\n323\n00:16:54.870 --> 00:16:59.340\nit's gonna illicit the fact that\nthere is a firewall involved.\n\n324\n00:16:59.340 --> 00:17:03.580\nSo, if I get filtered back,\nI know that I'm passing through a firewall\n\n325\n00:17:03.580 --> 00:17:05.950\nbefore my packets ever make\nit to the target machine.\n\n326\n00:17:05.950 --> 00:17:07.580\nAnd that's important for us, right?\n\n327\n00:17:07.580 --> 00:17:14.240\nWe're gonna look at ways of circumventing\nthose little buggers, right?\n\n328\n00:17:14.240 --> 00:17:19.340\nAs they're doing their job,\ndoing a great job in any IDS or net filter\n\n329\n00:17:19.340 --> 00:17:24.830\nworth it's salt is going to do\na really good job at frustrating us.\n\n330\n00:17:24.830 --> 00:17:30.380\nAnd it's only as good as the guy or\nthe girl running it right, so\n\n331\n00:17:30.380 --> 00:17:35.450\nwe do have that on our side as far as\nif we're wearing a black hat right?\n\n332\n00:17:35.450 --> 00:17:40.310\nSo we have to be really good\nat figuring out how to filter\n\n333\n00:17:40.310 --> 00:17:44.370\nany kind of discovery from things like\nNmap and Nmap's not the only game in town,\n\n334\n00:17:44.370 --> 00:17:45.290\nthere's a lot of stuff out there.\n\n335\n00:17:45.290 --> 00:17:46.920\nSo we gotta be very pointed.\n\n336\n00:17:46.920 --> 00:17:51.720\nNow the cool thing is,\nif we want to be bad guys,\n\n337\n00:17:51.720 --> 00:17:55.970\nif we're really working let me take it\nout of context or not bad guys here.\n\n338\n00:17:55.970 --> 00:17:58.564\nWe want to be the good guys we want\nto be things like pen testers,\n\n339\n00:17:58.564 --> 00:17:59.588\nsecurity auditors.\n\n340\n00:17:59.588 --> 00:18:04.240\nAs a security audit our part\nis to play a bad guy and\n\n341\n00:18:04.240 --> 00:18:07.600\nto find ways around that we can\nbetter tighten down security.\n\n342\n00:18:07.600 --> 00:18:12.440\nSo what we want to do like I\nsaid is play that part and\n\n343\n00:18:12.440 --> 00:18:17.290\nfind ways around those filters so\nI can say hey, I was able to circumvent\n\n344\n00:18:17.290 --> 00:18:21.950\nthe security measures you have in play\nright now by doing x, y, or z, right?\n\n345\n00:18:21.950 --> 00:18:23.390\nSo that's why we're learning this,\n\n346\n00:18:23.390 --> 00:18:26.540\nthat's why we're trying to\nunderstand filters specifically.\n\n347\n00:18:26.540 --> 00:18:31.535\nSo what I wanna tell you here, again\ngreat for hiding machines from scans.\n\n348\n00:18:31.535 --> 00:18:36.400\n[COUGH] As an administrator or\nsecurity auditor, pen tester,\n\n349\n00:18:36.400 --> 00:18:41.890\nyou're using Nmap and\nfirewalls in conjunction with each other.\n\n350\n00:18:41.890 --> 00:18:44.430\nI'm using Nmap to test my security.\n\n351\n00:18:44.430 --> 00:18:48.230\nAnd then I'm testing how well\nI'm testing my security by\n\n352\n00:18:48.230 --> 00:18:51.500\nincreasing the complexity and\nthe rule set of my firewall.\n\n353\n00:18:51.500 --> 00:18:55.770\nSo they work hand-in-hand when it\ncomes to what we're talking all right?\n\n354\n00:18:55.770 --> 00:18:57.700\nWhat else is?\n\n355\n00:18:57.700 --> 00:19:02.000\nUsually this is typically done by some\nsort of hardware firewall or a router,\n\n356\n00:19:02.000 --> 00:19:06.580\nrouters do have the ability to set\nup very basic filtering rules.\n\n357\n00:19:06.580 --> 00:19:10.315\nSo it doesn't have to necessarily\nbe a firewall appliance.\n\n358\n00:19:10.315 --> 00:19:14.765\nIt could also be a software firewall\nthat runs locally on the host itself.\n\n359\n00:19:15.875 --> 00:19:18.985\nThat could possibly be pinging and\nI'm actually using that for\n\n360\n00:19:18.985 --> 00:19:20.295\ndemonstration purposes.\n\n361\n00:19:20.295 --> 00:19:25.755\nIP tables, Windows firewall, I remember\nan old one was Black Ice, right?\n\n362\n00:19:25.755 --> 00:19:27.610\nA lot of antivirus software.\n\n363\n00:19:27.610 --> 00:19:32.060\nComes with firewall\nutilities built in as well.\n\n364\n00:19:32.060 --> 00:19:33.260\nSo you gotta be on lookout for\nthese things.\n\n365\n00:19:33.260 --> 00:19:35.775\nThey could be filtering your responses and\n\n366\n00:19:35.775 --> 00:19:38.510\nNmap can let you know\nwhen that is happening.\n\n367\n00:19:38.510 --> 00:19:41.400\n>> Now Dan, let me stop you here for\na second because I do have a question.\n\n368\n00:19:41.400 --> 00:19:44.950\nWe've seen in past episodes when\nyou send a send packet, right,\n\n369\n00:19:44.950 --> 00:19:47.790\na send request to port 80,\nwe did get information back.\n\n370\n00:19:47.790 --> 00:19:51.620\nWith the filtered ports there,\nare we going to receive any information or\n\n371\n00:19:51.620 --> 00:19:55.130\nare we going complete, midnight stealth,\nwe don't even know anything is there?\n\n372\n00:19:55.130 --> 00:19:57.980\nWhat happens when the port,\nspecifically, is filtered?\n\n373\n00:19:57.980 --> 00:19:59.260\n>> Yeah, that's a great question.\n\n374\n00:19:59.260 --> 00:20:03.770\nAnd the answer is yes,\nwe will get some information back and\n\n375\n00:20:03.770 --> 00:20:07.820\nNmap will put that in the state column and\nit will show up as filtered.\n\n376\n00:20:07.820 --> 00:20:09.220\nIt will say that.\n\n377\n00:20:09.220 --> 00:20:10.680\nCuz typically what happens is,\n\n378\n00:20:10.680 --> 00:20:13.190\nwith firewalls they typically\ndo one of two things.\n\n379\n00:20:13.190 --> 00:20:18.450\nThey either reject outright the fact that\nyou're trying to make contact there.\n\n380\n00:20:18.450 --> 00:20:21.260\nIt's saying nope, I'm blocking this stop.\n\n381\n00:20:21.260 --> 00:20:22.410\nYou can't send information.\n\n382\n00:20:22.410 --> 00:20:26.810\nIt will send back to you, some\ninformation saying this port is blocked.\n\n383\n00:20:26.810 --> 00:20:27.850\nDo not come here.\n\n384\n00:20:27.850 --> 00:20:31.710\nRight, and usually with things like this\nit's almost like it's in a closed state\n\n385\n00:20:31.710 --> 00:20:32.700\nto be honest with you.\n\n386\n00:20:32.700 --> 00:20:36.550\nIt'll probably send something\nlike that RST packet back hey not\n\n387\n00:20:36.550 --> 00:20:41.540\naccepting information here at this time,\nat least not from you right.\n\n388\n00:20:41.540 --> 00:20:45.820\nAnd we can take a look at some of that a\nlittle bit later in just a few minutes to\n\n389\n00:20:45.820 --> 00:20:48.700\nbe honest with you but basically say,\n\n390\n00:20:48.700 --> 00:20:54.000\nno don't want any thanks, but\nI'm good, I don't need Amway.\n\n391\n00:20:54.000 --> 00:20:59.030\nSo, just giving you a short response,\nand that way MF says okay,\n\n392\n00:20:59.030 --> 00:21:02.550\nwell I got a response, so\nI know it's being filled.\n\n393\n00:21:02.550 --> 00:21:07.640\nI could make contact with it, I know that\nI received a response from something.\n\n394\n00:21:07.640 --> 00:21:11.675\nIt wasn't the port, so I know it's being\nfiltered, so it'll label it filter.\n\n395\n00:21:11.675 --> 00:21:14.120\nThe other thing that a firewall does, and\n\n396\n00:21:14.120 --> 00:21:18.910\nthis is what typically happens, is it\njust drops the packets and it says, okay,\n\n397\n00:21:18.910 --> 00:21:23.920\nI've received it It's destination\nis a port that I am filtering.\n\n398\n00:21:23.920 --> 00:21:26.970\nSo I just whoa, hey,\nput that on the ground.\n\n399\n00:21:26.970 --> 00:21:28.840\nI don't even know where it came from,\nright?\n\n400\n00:21:28.840 --> 00:21:30.740\nIt just acts like nothing.\n\n401\n00:21:30.740 --> 00:21:32.235\nAnd this can be problematic for\n\n402\n00:21:32.235 --> 00:21:36.370\nNmap because it's not giving\nit any type of response.\n\n403\n00:21:36.370 --> 00:21:38.208\nNow the good news is\nthat Nmap is very smart.\n\n404\n00:21:38.208 --> 00:21:42.510\nAnd typically if you're getting this,\n\n405\n00:21:43.940 --> 00:21:48.880\nit might realize and say, hey,\nyou know, I bet this is being filtered\n\n406\n00:21:48.880 --> 00:21:53.470\nbecause normally if it was closed,\nit would send me an RST and it's not.\n\n407\n00:21:53.470 --> 00:21:55.090\nRight?\nNormally I would get that RST and\n\n408\n00:21:55.090 --> 00:21:57.280\nhere I'm getting nothing back.\n\n409\n00:21:57.280 --> 00:21:59.370\nSo I'm guessing this is gonna be filtered.\n\n410\n00:21:59.370 --> 00:22:05.060\nA lot of this is just really\nwell educated guesses by Nmap so\n\n411\n00:22:05.060 --> 00:22:07.160\nit will show up as filtered as well.\n\n412\n00:22:07.160 --> 00:22:10.670\n>> Dan, and the other thing I'm thinking\nabout is from a performance standpoint\n\n413\n00:22:10.670 --> 00:22:14.240\nyou've shown us before\nhow if you do intense,\n\n414\n00:22:14.240 --> 00:22:17.240\nend up scans the scanning process,\neven on a couple of hosts,\n\n415\n00:22:17.240 --> 00:22:20.670\ncan take a little bit\n>> How does filter ports affect the end\n\n416\n00:22:20.670 --> 00:22:23.520\nmap scanning process from\nan administrative stand point.\n\n417\n00:22:23.520 --> 00:22:25.650\nIf I'm sitting in front\nof the machine right now,\n\n418\n00:22:25.650 --> 00:22:28.620\nwhat am I gonna see as far\nas the scan performance.\n\n419\n00:22:28.620 --> 00:22:29.780\n>> Yeah, great question.\n\n420\n00:22:29.780 --> 00:22:31.150\nAnd it is gonna slow things down,\n\n421\n00:22:31.150 --> 00:22:35.390\nespecially if you're doing a lot of\nscanning and intensive scanning or\n\n422\n00:22:35.390 --> 00:22:40.160\nacross networks, you're not all Local\nArea Network with high speed bandwidth.\n\n423\n00:22:40.160 --> 00:22:42.440\nSo, it is going to degrade performance.\n\n424\n00:22:42.440 --> 00:22:45.060\nBecause it's not answering, right.\n\n425\n00:22:45.060 --> 00:22:48.660\nIt hasn't given any kind of reply and\nmap wants to be thorough.\n\n426\n00:22:48.660 --> 00:22:52.400\nAnd it wants to make sure that maybe that\ntransmission just didn't make it back to\n\n427\n00:22:52.400 --> 00:22:57.100\nme, maybe there was network congestion and\nthat's why I didn't receive it.\n\n428\n00:22:57.100 --> 00:23:00.710\nSo it will actually\nretry a couple of times.\n\n429\n00:23:00.710 --> 00:23:05.260\nTo make sure that it's seeing\nconsistency in the response, right?\n\n430\n00:23:05.260 --> 00:23:05.930\nAnd what's that gonna do?\n\n431\n00:23:05.930 --> 00:23:07.120\nThat's gonna slow things down.\n\n432\n00:23:07.120 --> 00:23:09.920\nThat's gonna cause slowdowns.\n\n433\n00:23:09.920 --> 00:23:15.420\nAnother way that firewalls can just\nbe a real pain in the behind for\n\n434\n00:23:15.420 --> 00:23:17.570\nanybody that's trying to scan networks.\n\n435\n00:23:17.570 --> 00:23:19.910\nAgain, that's kinda the give and take.\n\n436\n00:23:19.910 --> 00:23:24.450\nIt's the yin and\nyang of enumeration versus\n\n437\n00:23:24.450 --> 00:23:28.900\nfiltering it's why we do both at the same\ntime kind of work each other together.\n\n438\n00:23:28.900 --> 00:23:33.030\nSo we try to make the most out of our\nfirewalling procedures and then we try to\n\n439\n00:23:33.030 --> 00:23:37.770\nmake the most out of our discovery\nprocedures and port scanning through Nmap.\n\n440\n00:23:37.770 --> 00:23:41.340\nSo yes, to answer Wes' question shortly,\nit will slow things down.\n\n441\n00:23:41.340 --> 00:23:42.270\nSo be prepared for that.\n\n442\n00:23:43.328 --> 00:23:47.420\nAll right, let's move,\nI do want to show you a filtered.\n\n443\n00:23:47.420 --> 00:23:49.225\nSo let's- yeah let's do that right?\n\n444\n00:23:49.225 --> 00:23:50.654\nJump into my computer here.\n\n445\n00:23:50.654 --> 00:23:56.320\nLet's see here, let me go over to\nthis machine, this is my Computer and\n\n446\n00:23:56.320 --> 00:24:00.730\nwe'll add a filter to a port,\na common port like SSH, right.\n\n447\n00:24:00.730 --> 00:24:02.830\nEverybody loves SSH so\nthat's what we'll do.\n\n448\n00:24:02.830 --> 00:24:08.000\nWe'll say sudo iptable, I've gotta get\nrid of that white space, there we go.\n\n449\n00:24:08.000 --> 00:24:12.290\nsudo iptables -A INPUT.\n\n450\n00:24:12.290 --> 00:24:17.380\nSo I'm appending to the input chain and\nI'm gonna say -tcp,\n\n451\n00:24:17.380 --> 00:24:19.959\nthat's the, I'm sorry, -p.\n\n452\n00:24:19.959 --> 00:24:23.069\nSo the protocol which will be tcp.\n\n453\n00:24:23.069 --> 00:24:28.878\nAnd then that will be dport.\n\n454\n00:24:28.878 --> 00:24:31.109\nI know this is an old\nlesson in firewalling but\n\n455\n00:24:31.109 --> 00:24:33.117\nI'll give you the run down here as we go.\n\n456\n00:24:33.117 --> 00:24:35.994\nDestination port is what dport stands for\nso\n\n457\n00:24:35.994 --> 00:24:41.010\nwe're blocking tcp on destination port 22,\nwhich is SSH, right?\n\n458\n00:24:41.010 --> 00:24:42.340\nAnd now I can tell it what to do.\n\n459\n00:24:42.340 --> 00:24:46.250\nI can say -j REJECT, like so, right?\n\n460\n00:24:46.250 --> 00:24:50.460\nHit Enter, give it the password there.\n\n461\n00:24:50.460 --> 00:24:54.317\nNo barking at me, lets me know that\nI typed something in correctly, and\n\n462\n00:24:54.317 --> 00:24:55.500\nit accepted it.\n\n463\n00:24:55.500 --> 00:25:02.870\nSo now I should be rejecting any activity\nthat comes in to port 22 on this machine.\n\n464\n00:25:02.870 --> 00:25:08.540\nSo if I go back here, go to my\nmetasploitable and I'll say port 22,\n\n465\n00:25:08.540 --> 00:25:15.520\npassword, there we go and\nthere we go, right there.\n\n466\n00:25:15.520 --> 00:25:17.100\nState is filtered.\n\n467\n00:25:17.100 --> 00:25:23.280\nSo again, underneath the state area,\nwe get filter back, it is actively saying,\n\n468\n00:25:23.280 --> 00:25:27.780\nyou are not allowed to access this port,\neven though it may or may not be open.\n\n469\n00:25:27.780 --> 00:25:28.780\nMost likely it's open though.\n\n470\n00:25:28.780 --> 00:25:31.070\nOtherwise, why am I filtering, right?\n\n471\n00:25:31.070 --> 00:25:33.760\nAnd we'll talk about that also.\n\n472\n00:25:33.760 --> 00:25:37.338\nVery interesting philosophy\nof design of security.\n\n473\n00:25:37.338 --> 00:25:41.618\nAll right, but what if I'm dropping?\n\n474\n00:25:41.618 --> 00:25:45.490\nWhat if I'm not just actively rejecting,\nI'm actually dropping packets?\n\n475\n00:25:45.490 --> 00:25:49.365\nLet's do that, I'll clear this out here,\n\n476\n00:25:49.365 --> 00:25:53.149\nI'll say sudo iptables -F to flush them.\n\n477\n00:25:53.149 --> 00:25:58.856\nAnd then we'll drop the packet.\n\n478\n00:25:58.856 --> 00:26:02.469\nI'm guessing this will take,\nagain, I'm on a VM network, so\n\n479\n00:26:02.469 --> 00:26:06.287\nit's still super duper fast, but\nI'm guessing it might take a few\n\n480\n00:26:06.287 --> 00:26:09.780\nnanoseconds longer to actually\ndetect the filtered state.\n\n481\n00:26:09.780 --> 00:26:10.850\nSo let's see what happens here.\n\n482\n00:26:12.450 --> 00:26:13.330\nAnd there we go.\n\n483\n00:26:13.330 --> 00:26:15.640\nYeah, it did actually make\nit take a little bit longer.\n\n484\n00:26:15.640 --> 00:26:19.700\nSo, it did find it as filtered,\nright, SSH.\n\n485\n00:26:19.700 --> 00:26:23.550\nBut notice, here's our previous scan,\nit did it in 0.13 seconds.\n\n486\n00:26:23.550 --> 00:26:26.570\nThis scan did it in 0.35 seconds,\n\n487\n00:26:26.570 --> 00:26:30.230\nso increased it by about\na third of the time, right?\n\n488\n00:26:30.230 --> 00:26:34.250\nOr two thirds more, two thirds more\ntime to actually complete the scan.\n\n489\n00:26:34.250 --> 00:26:38.410\nNow to us it was imperceivable, because\nit's less than a second, it was super,\n\n490\n00:26:38.410 --> 00:26:39.440\nsuper fast.\n\n491\n00:26:39.440 --> 00:26:40.780\nBut it did increase the time.\n\n492\n00:26:40.780 --> 00:26:44.020\nNow imagine you're scanning\na thousand computers.\n\n493\n00:26:44.020 --> 00:26:48.530\nThat is going to increase your time a lot,\nso it does help us,\n\n494\n00:26:48.530 --> 00:26:53.850\nit is our friend, to filter ports with\nthe drop instead of the active rejecting.\n\n495\n00:26:53.850 --> 00:26:55.480\nAll right, let's hurry up through this.\n\n496\n00:26:55.480 --> 00:26:58.440\nI know our time is getting short but\nwe only have a few more.\n\n497\n00:26:59.510 --> 00:27:02.140\nLooks like unfiltered is our next one.\n\n498\n00:27:02.140 --> 00:27:03.700\nHow is that any different than open?\n\n499\n00:27:03.700 --> 00:27:04.890\nGreat question.\n\n500\n00:27:04.890 --> 00:27:11.020\nWhat it means is,\nis that Nmap can contact the port, okay.\n\n501\n00:27:11.020 --> 00:27:14.858\nBut it's not really 100% sure on\nwhether or not it's open or closed.\n\n502\n00:27:14.858 --> 00:27:16.437\nRight?\n\n503\n00:27:16.437 --> 00:27:20.560\nSo yeah, it just doesn't realize,\n\n504\n00:27:20.560 --> 00:27:26.330\nit's having trouble figuring out and it's\nprobably due to some sort of filtering or\n\n505\n00:27:26.330 --> 00:27:29.040\njust a strange way in\nwhich it's responding.\n\n506\n00:27:29.040 --> 00:27:30.577\nAnd that could be also be the problem.\n\n507\n00:27:30.577 --> 00:27:36.640\nYou've gotta remember not every host is\nRFC compliant, and that can cause issues.\n\n508\n00:27:36.640 --> 00:27:41.409\nAnd that might be some of the things\nthat you'll see when it comes to this.\n\n509\n00:27:41.409 --> 00:27:48.770\nAlso, you'll only see unfiltered as\na result of what's called an ACK scan.\n\n510\n00:27:48.770 --> 00:27:51.630\nSo we've looked at ACK scanning\nwhen it came to host discovery.\n\n511\n00:27:51.630 --> 00:27:58.550\nWe just threw an ACK flag TCP packet at\nour target, and that elicited a response,\n\n512\n00:27:58.550 --> 00:28:00.590\nbecause it's like, hey,\nthis is the end of a three-way handshake.\n\n513\n00:28:00.590 --> 00:28:02.370\nI don't know what the heck\nis going on here.\n\n514\n00:28:02.370 --> 00:28:04.640\nSame kind of idea when\nwe're port scanning, right?\n\n515\n00:28:04.640 --> 00:28:08.360\nKind of doing the same thing, except\nagainst the ports instead of the IP, and\n\n516\n00:28:08.360 --> 00:28:10.670\nseeing what kind of response that we get.\n\n517\n00:28:10.670 --> 00:28:16.940\nSo what we need to know about that is\nthat if I get that ACK scanning here, I\n\n518\n00:28:16.940 --> 00:28:19.530\ndon't wanna get too much into ACK scanning\ncuz we're gonna get into ACK scanning.\n\n519\n00:28:19.530 --> 00:28:22.700\nBut typically it's done to test for\nfirewalls.\n\n520\n00:28:22.700 --> 00:28:26.710\nSo if I get unfiltered,\nI know that that's just\n\n521\n00:28:26.710 --> 00:28:31.630\nACK reporting ports that it\nencountered during an ACK scan.\n\n522\n00:28:31.630 --> 00:28:34.230\nSo that's really all you\nneed to know at least for\n\n523\n00:28:34.230 --> 00:28:38.140\nright now as far as what happens,\nwhy would I see unfiltered.\n\n524\n00:28:38.140 --> 00:28:41.910\nYou ran an ACK scan and it found\nunfiltered ports that it wasn't sure about\n\n525\n00:28:41.910 --> 00:28:44.620\nand it gave that to you,\nit gave you that output.\n\n526\n00:28:44.620 --> 00:28:47.100\nWe can probably run an ACK\nscan here really quickly.\n\n527\n00:28:47.100 --> 00:28:49.815\nLet's see here.\n\n528\n00:28:49.815 --> 00:28:50.855\nLet's see if we get that.\n\n529\n00:28:50.855 --> 00:28:54.724\n-sA, I know I'm not doing\na lot of filtering, but.\n\n530\n00:28:54.724 --> 00:28:56.840\nThere we go, so, yeah.\n\n531\n00:28:56.840 --> 00:28:58.043\nRight here.\n\n532\n00:28:58.043 --> 00:29:00.410\nIt says, not shown 999 unfiltered ports.\n\n533\n00:29:01.580 --> 00:29:05.710\nSo you see unfiltered, there you go, and\nthen it did find the one filtered port,\n\n534\n00:29:05.710 --> 00:29:07.460\nobviously right here.\n\n535\n00:29:07.460 --> 00:29:09.060\nSo, that's when you'll see unfiltered.\n\n536\n00:29:10.280 --> 00:29:12.480\nMoving on,\nwe have two more left in the can.\n\n537\n00:29:12.480 --> 00:29:15.420\nVery quickly, open filtered, right?\n\n538\n00:29:15.420 --> 00:29:19.910\nSo open, like the pipe character,\nand then filtered.\n\n539\n00:29:19.910 --> 00:29:21.430\nSo, what's happening with open filtered?\n\n540\n00:29:21.430 --> 00:29:25.800\nAgain, it's able to contact, but\nit's not 100% sure of whether or\n\n541\n00:29:25.800 --> 00:29:28.760\nnot the thing is open,\nor is it being filtered?\n\n542\n00:29:28.760 --> 00:29:30.766\nSo where at the ACK scan\nit was letting us know,\n\n543\n00:29:30.766 --> 00:29:33.020\nit didn't know whether it was open or\nclosed.\n\n544\n00:29:33.020 --> 00:29:38.670\nHere it doesn't know whether it's open or\nit's actually being filtered, right?\n\n545\n00:29:38.670 --> 00:29:40.200\nSo, that's when you'll see this.\n\n546\n00:29:40.200 --> 00:29:42.120\nNow typically, again,\n\n547\n00:29:42.120 --> 00:29:46.930\nyou'll only see this I think in a specific\nscan, let me check my notes here.\n\n548\n00:29:49.870 --> 00:29:52.980\nYeah I guess there's no specific scan.\n\n549\n00:29:52.980 --> 00:29:58.060\nNo there are, the FIN scans,\nthe Christmas scans and the NULL scans.\n\n550\n00:29:58.060 --> 00:30:02.810\nThey typically can find this whether or\nnot, this is where you'll see this right.\n\n551\n00:30:02.810 --> 00:30:11.130\nSo again it also could be because non RFC\ncompliant machine is acting strangely,\n\n552\n00:30:11.130 --> 00:30:15.920\nit doesn't send the results back\nin the way in which Nmap expects.\n\n553\n00:30:15.920 --> 00:30:18.710\nSo it can't go, I know that port is open,\n\n554\n00:30:18.710 --> 00:30:23.608\nit might be filtered I'm not sure,\nbecause of what I'm getting back.\n\n555\n00:30:23.608 --> 00:30:26.280\nSo be aware of that, and\nlet's just show you what that looks like.\n\n556\n00:30:26.280 --> 00:30:28.049\nLet me clear the screen\na little bit out here.\n\n557\n00:30:29.280 --> 00:30:37.260\nLet's do a FIN scan real quick so\nwe can see if we get any of that.\n\n558\n00:30:37.260 --> 00:30:37.800\nThere we go.\n\n559\n00:30:37.800 --> 00:30:39.030\nThat's exactly what it looks like.\n\n560\n00:30:39.030 --> 00:30:41.100\nSo very straightforward.\n\n561\n00:30:41.100 --> 00:30:44.150\nNow we know that is it open,\nwe know that it is filtered.\n\n562\n00:30:44.150 --> 00:30:48.810\nMaybe this machine's not RFC compliant,\nmaybe, and\n\n563\n00:30:48.810 --> 00:30:50.340\nthat's probably what's happening.\n\n564\n00:30:50.340 --> 00:30:54.920\nBut FIN scans, Christmas scans,\nand NULL scans typically,\n\n565\n00:30:54.920 --> 00:30:57.800\neven if it is open, they'll still\ncome back as open and filtered.\n\n566\n00:30:57.800 --> 00:31:03.340\nSo, this lends us back to, am I using\nthe right scan for the job, right?\n\n567\n00:31:03.340 --> 00:31:04.850\nSo, keep that in mind.\n\n568\n00:31:04.850 --> 00:31:08.820\nIf you're doing a FIN scan, a NULL scan,\na Christmas scan, or an Xmas scan,\n\n569\n00:31:08.820 --> 00:31:11.470\nI guess it is, and you receive open and\n\n570\n00:31:11.470 --> 00:31:15.280\nfiltered you're going man I'm\nnot sure because it's not sure.\n\n571\n00:31:15.280 --> 00:31:18.740\nWell maybe you need to run a SYN\nscan instead and be sure because SYN\n\n572\n00:31:18.740 --> 00:31:22.690\nscans typically are very straightforward\nwith I found this to be open,\n\n573\n00:31:22.690 --> 00:31:27.930\nI found this to be filtered, I found this\nto be closed, so just be aware of that.\n\n574\n00:31:27.930 --> 00:31:32.040\nWhat else, last is the closed filtered.\n\n575\n00:31:32.040 --> 00:31:35.830\nAgain, Nmap can't tell whether or\nnot it's closed or filtered, so\n\n576\n00:31:35.830 --> 00:31:39.620\nit's kind of freaking out on us and\ngives us the closed and filtered.\n\n577\n00:31:39.620 --> 00:31:45.278\nThis is only returned\nfrom an IP idle scan.\n\n578\n00:31:45.278 --> 00:31:46.625\nAnd you're like what is that?\n\n579\n00:31:46.625 --> 00:31:49.080\nAnd we will get to that\nwhen we get to scanning.\n\n580\n00:31:49.080 --> 00:31:52.910\nAnd even for the purposes of showing\nit to you it's a little involved,\n\n581\n00:31:52.910 --> 00:31:55.920\nso just know that only from that.\n\n582\n00:31:55.920 --> 00:32:00.570\nAnd it'll look just like this except\nit will say closed pipe filter, right?\n\n583\n00:32:00.570 --> 00:32:04.820\nSo if you look at my screen really quick,\nyeah, there you go.\n\n584\n00:32:04.820 --> 00:32:08.070\nSo, this will instead of saying\nopen will say closed and pipe and\n\n585\n00:32:08.070 --> 00:32:09.790\nfilter should give you a little.\n\n586\n00:32:09.790 --> 00:32:12.110\nThere you go just like that boom.\n\n587\n00:32:12.110 --> 00:32:16.310\nVery, very straightforward but\nagain only from that\n\n588\n00:32:16.310 --> 00:32:21.900\nidle scan are you going to elicit\nthe closed slash filtered port state.\n\n589\n00:32:21.900 --> 00:32:26.370\nAll right everyone that is\nbasically our six port states.\n\n590\n00:32:26.370 --> 00:32:27.820\nWe've walked through them all,\nremember open,\n\n591\n00:32:27.820 --> 00:32:32.260\nclosed, filtered, unfiltered,\nopen filtered and closed filtered.\n\n592\n00:32:32.260 --> 00:32:33.810\nAnd go through this a bunch of times and\n\n593\n00:32:33.810 --> 00:32:37.710\nmake sure you're familiar with which type\nof scan elicits which type of response and\n\n594\n00:32:37.710 --> 00:32:39.840\nwhy and\nall the reasons we talked about that.\n\n595\n00:32:39.840 --> 00:32:43.520\nBut that is basically the six\nport states wrapped up in a ball.\n\n596\n00:32:43.520 --> 00:32:46.260\n>> I'll tell you Dan that's a lot of good\ninformation to know cuz I have worked with\n\n597\n00:32:46.260 --> 00:32:48.300\nthe ports for a few years now but\nit's even better.\n\n598\n00:32:48.300 --> 00:32:51.040\nAnd I can also say not even\nform an Nmap standpoint, but\n\n599\n00:32:51.040 --> 00:32:55.540\njust a general networking fundamental\nstandpoint to know what condition,\n\n600\n00:32:55.540 --> 00:32:57.480\nwhat state can these ports even be in.\n\n601\n00:32:57.480 --> 00:32:59.740\nSo, a lot of great information,\nwe thank you for that.\n\n602\n00:32:59.740 --> 00:33:04.430\nBut before we go, got any words of\nwisdom before we let everybody go?\n\n603\n00:33:04.430 --> 00:33:07.930\n>> Learn your port states because\nthey're really gonna help you out\n\n604\n00:33:07.930 --> 00:33:10.160\nas you get into port scanning.\n\n605\n00:33:10.160 --> 00:33:12.860\nUnderstanding that output\nis just invaluable.\n\n606\n00:33:12.860 --> 00:33:14.880\n>> Well thank you sir,\nwe appreciate that information.\n\n607\n00:33:14.880 --> 00:33:16.700\nWe appreciate you,\nthe viewers out here, but\n\n608\n00:33:16.700 --> 00:33:18.740\nwe're gonna take the time to sign out for\nITProTV.\n\n609\n00:33:18.740 --> 00:33:20.270\nI've been your host, Wes Bryan.\n\n610\n00:33:20.270 --> 00:33:21.340\n>> I'm Daniel Lowrie.\n\n611\n00:33:21.340 --> 00:33:23.885\n>> And we'll see you next time.\n\n612\n00:33:23.885 --> 00:33:26.646\n[MUSIC]\n\n613\n00:33:26.646 --> 00:33:31.380\n[SOUND]\n\n",
          "vimeoId": "166510622"
        },
        {
          "description": "In this episode, Wes and Dan explore port scans and their application inside of your network. They discuss the difference between privileged and non-privileged scans. They explain performing TCP versus UDP scans.",
          "length": "2063",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-2-port-scanning-051016-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-2-port-scanning-051016-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-2-port-scanning-051016-1-sm.jpg",
          "title": "Port Scanning",
          "transcript": "WEBVTT\n\n1\n00:00:00.160 --> 00:00:10.160\n[MUSIC]\n\n2\n00:00:12.019 --> 00:00:16.600\nWelcome back to another exciting episode\nhere in ITProTV, I'm you host Wes Bryan.\n\n3\n00:00:16.600 --> 00:00:21.330\nAnd in today's episode we are continuing\nalong the series that is known as nmap.\n\n4\n00:00:21.330 --> 00:00:24.310\nAnd joining me in the studios today\nis none other than Mr. Dan Lowrie.\n\n5\n00:00:24.310 --> 00:00:25.340\nDan, how are you doing today sir?\n\n6\n00:00:25.340 --> 00:00:27.610\n>> Man, I couldn't be happier\nto be back in the studio today,\n\n7\n00:00:27.610 --> 00:00:29.720\nbecause we've arrived.\n\n8\n00:00:29.720 --> 00:00:31.948\nWe're here.\nWe're actually gonna do some scanning,\n\n9\n00:00:31.948 --> 00:00:35.738\nwe're gonna scan machines, actually we\nhave scanned machines to be honest with\n\n10\n00:00:35.738 --> 00:00:38.096\nyou [LAUGH] have you been\nwatching up to this point?\n\n11\n00:00:38.096 --> 00:00:42.716\nI've slipped in a scan here and there so\nthat we can look at the output but\n\n12\n00:00:42.716 --> 00:00:45.950\ntoday is all about the scan\nprocess itself right.\n\n13\n00:00:45.950 --> 00:00:51.030\nWhat kind of scans are available, and\nI'm just gonna go ahead and warn you\n\n14\n00:00:51.030 --> 00:00:56.380\nthere I think about a dozen different\ntypes of port scans, specifically,\n\n15\n00:00:56.380 --> 00:01:00.350\nthat nmap does, so we are not going\nto make it through all of them today.\n\n16\n00:01:00.350 --> 00:01:04.410\nWe're going to get through some of\nthem today and this will definitely\n\n17\n00:01:04.410 --> 00:01:08.690\nbe a multi-parter, so just keep that in\nmind that there is no way [LAUGH] I'm\n\n18\n00:01:08.690 --> 00:01:12.920\ngetting through all 12, it's just way\ntoo much information about each one for\n\n19\n00:01:12.920 --> 00:01:15.270\nus to be able to hit all of\nthem at one point in time.\n\n20\n00:01:15.270 --> 00:01:20.040\nSo let's talk about the ones that we\nare going to talk about today, in fact.\n\n21\n00:01:20.040 --> 00:01:22.630\nAnd let's talk about\nport scanning in general.\n\n22\n00:01:23.990 --> 00:01:27.850\nFirst thing I want you guys to\nunderstand about port scanning is well,\n\n23\n00:01:27.850 --> 00:01:29.070\nwhat's happening, right.\n\n24\n00:01:29.070 --> 00:01:35.080\nWhat I'm doing, is I'm telling nmap to\nsend packets, toward a target machine,\n\n25\n00:01:35.080 --> 00:01:39.150\nto again, as we said over and over again,\nto elicit some sort of response.\n\n26\n00:01:39.150 --> 00:01:42.810\nAnd the response that I want to know is,\nis there a port that is open?\n\n27\n00:01:42.810 --> 00:01:43.740\nIs it closed?\n\n28\n00:01:43.740 --> 00:01:44.390\nIs it filtered?\n\n29\n00:01:44.390 --> 00:01:48.940\nI wanna know everything I\ncan know about my target for\n\n30\n00:01:48.940 --> 00:01:53.270\nthe purposes of,\nif I'm black hat, exploitation.\n\n31\n00:01:53.270 --> 00:01:58.270\nIf I'm a white hat, I'm a security\nspecialist, a network admin,\n\n32\n00:01:58.270 --> 00:02:02.630\nof some sort, for the purposes of,\nclosing vulnerability.\n\n33\n00:02:02.630 --> 00:02:05.350\nSo one's looking for open vulnerabilities,\none's looking for them so\n\n34\n00:02:05.350 --> 00:02:08.990\nthat they can close them, or at least\nmitigate them as a problem, right.\n\n35\n00:02:08.990 --> 00:02:11.300\nSo that's why we're doing port scanning.\n\n36\n00:02:11.300 --> 00:02:17.940\nAnd of course, nmap by default, scans the\nthousand common most used ports, right.\n\n37\n00:02:17.940 --> 00:02:20.649\nAgain, not 1 through 1,000 but\n\n38\n00:02:20.649 --> 00:02:26.080\neven though I'm sure the vast majority\nof them lie within that range.\n\n39\n00:02:26.080 --> 00:02:30.200\nIt is the most commonly used ports and\nthere are typically a thousand of them.\n\n40\n00:02:30.200 --> 00:02:31.220\n>> All right.\n>> Not typically,\n\n41\n00:02:31.220 --> 00:02:32.340\nthere are a thousand of them.\n\n42\n00:02:32.340 --> 00:02:34.640\nI wanna be very,\nvery solid in my speech there.\n\n43\n00:02:36.000 --> 00:02:40.050\nI do wanna talk about, and\nagain kinda going back to some reminders,\n\n44\n00:02:40.050 --> 00:02:45.980\nsome things to help us keep going is\nprivileged versus nonprivileged use, okay?\n\n45\n00:02:45.980 --> 00:02:50.780\nIf you run a port scan,\nif you run a host discovery,\n\n46\n00:02:50.780 --> 00:02:54.920\nrunning it as a route, or\npower user, an administrator,\n\n47\n00:02:54.920 --> 00:02:58.890\nis going to work differently than if\nyou were running it as a standard user.\n\n48\n00:02:58.890 --> 00:03:01.380\nSomeone without privileged\nrights to the machine.\n\n49\n00:03:01.380 --> 00:03:04.380\nAnd this is important for us to know,\nwe gotta figure this out,\n\n50\n00:03:04.380 --> 00:03:08.500\nwe gotta understand what's happening\nif I'm not a privileged user.\n\n51\n00:03:08.500 --> 00:03:11.980\nNow the cool thing about nmap\nit knows when you're okay.\n\n52\n00:03:11.980 --> 00:03:15.665\nYou might not be the king of this castle,\nand because of that, you gotta remember,\n\n53\n00:03:15.665 --> 00:03:21.380\nnmap was, I think it was 1997 when\nit came out, somewhere around there.\n\n54\n00:03:21.380 --> 00:03:25.600\nAnd back then computers\nwere relatively expensive,\n\n55\n00:03:25.600 --> 00:03:27.390\nat least more expensive than they are now.\n\n56\n00:03:27.390 --> 00:03:29.350\nMuch cheaper nowadays to grab a laptop.\n\n57\n00:03:29.350 --> 00:03:33.030\nI think you can go to Best Buy or\nsomething and pick up a laptop for\n\n58\n00:03:33.030 --> 00:03:34.550\n300 bucks or even cheaper.\n\n59\n00:03:34.550 --> 00:03:36.800\nIt's super cheap, right?\n\n60\n00:03:36.800 --> 00:03:38.790\nMost people,\nif they're in a Unix environment,\n\n61\n00:03:38.790 --> 00:03:42.730\nprobably have some sort of shared\nshell that they logged into.\n\n62\n00:03:42.730 --> 00:03:46.750\nAnd they didn't have full privileges to\nthat environment, wasn't there machine,\n\n63\n00:03:46.750 --> 00:03:48.260\nthey just had rights to login.\n\n64\n00:03:48.260 --> 00:03:52.780\nMaybe you were at a university of some\nsort and they gave you shell access.\n\n65\n00:03:52.780 --> 00:03:56.040\nIf you're a computer science major,\nsomething like that, they gave you that.\n\n66\n00:03:56.040 --> 00:03:58.520\nSo it wasn't your system.\n\n67\n00:03:58.520 --> 00:03:59.970\nWe don't live in those days any more so\n\n68\n00:03:59.970 --> 00:04:03.980\nthis isn't as much of a problem\nas it used to be, all right?\n\n69\n00:04:03.980 --> 00:04:08.440\nBefore so the developers of nmap said,\n\n70\n00:04:08.440 --> 00:04:12.360\nwell since you don't have the ability\nwe're gonna try to do some finagling,\n\n71\n00:04:12.360 --> 00:04:15.980\nwe're gonna do what we can to get you\nas much information as possible, and\n\n72\n00:04:15.980 --> 00:04:18.860\nwe're gonna talk about that in more\ndetail here in just a few minutes.\n\n73\n00:04:18.860 --> 00:04:22.900\nBut just remember root users,\ndefinitely the way to go.\n\n74\n00:04:22.900 --> 00:04:27.520\nYou have more control because you\nhave the ability to do things like\n\n75\n00:04:27.520 --> 00:04:30.900\ncontrol the raw data, and\nthat's really what it boils down to.\n\n76\n00:04:30.900 --> 00:04:35.250\nThat's the brass tacks difference between\nprivilege to none-privilege users.\n\n77\n00:04:35.250 --> 00:04:40.460\nWe have to find other means of\nelicitation from our target computer\n\n78\n00:04:40.460 --> 00:04:43.290\nthrough a different means of using nmap\nwhen we don't have that privilege.\n\n79\n00:04:43.290 --> 00:04:47.280\nSo keep that mind, that is something\nthat you want to be aware of.\n\n80\n00:04:47.280 --> 00:04:49.380\nIf you throw an Nmap scan at something,\n\n81\n00:04:49.380 --> 00:04:53.220\nit doesn't quite reply the way\nin which you think it should.\n\n82\n00:04:53.220 --> 00:04:55.970\nMaybe it's because I forgot to that,\nall right.\n\n83\n00:04:55.970 --> 00:05:00.160\nCuz obviously it's a very bad practice\nto logged in as root all the time.\n\n84\n00:05:00.160 --> 00:05:03.827\nSo you'll see me throw at\nthis thing all the time.\n\n85\n00:05:03.827 --> 00:05:06.609\nAnd that's because I want\nthat elevated privilege.\n\n86\n00:05:06.609 --> 00:05:11.800\nAll right, so also,\nwe did talk about this in Host Discovery,\n\n87\n00:05:11.800 --> 00:05:16.320\nif I do an unprivileged scan,\nit has a specific language it does that.\n\n88\n00:05:16.320 --> 00:05:20.530\nIt does what's called a TCP connect scan,\nokay.\n\n89\n00:05:20.530 --> 00:05:24.590\nIt basically simulates a SYN scan.\n\n90\n00:05:24.590 --> 00:05:29.590\nDon't worry if you're going SYN scan, TCP\nscan, I don't know what's going on here.\n\n91\n00:05:29.590 --> 00:05:31.930\nDon't worry we're going to get\nhere in just a few minutes,\n\n92\n00:05:31.930 --> 00:05:33.770\ninto those scans specifically.\n\n93\n00:05:33.770 --> 00:05:35.660\nBut if that's its way of\nworking it around, so\n\n94\n00:05:35.660 --> 00:05:39.660\nit's basically if you do m map target and\n\n95\n00:05:39.660 --> 00:05:44.720\nyou're unprivileged user it's basically\ndoing a dash st which is a TCP scan.\n\n96\n00:05:44.720 --> 00:05:46.220\nAnd like I said,\nin just a few minutes here,\n\n97\n00:05:46.220 --> 00:05:49.040\nwe'll we'll describe\nexactly what that means.\n\n98\n00:05:49.040 --> 00:05:53.934\nSo now that you know that, we can move\nahead and start really unraveling\n\n99\n00:05:53.934 --> 00:05:59.095\nthis onion, or to peeling away the layers\nof the onion that is nmap port scanning.\n\n100\n00:05:59.095 --> 00:06:02.785\nSo the first one we're gonna\nstart with is the default scan,\n\n101\n00:06:02.785 --> 00:06:06.535\nwhich is the SYN scan, the -ss.\n\n102\n00:06:06.535 --> 00:06:12.355\nNow if I type in nmap target machine,\nor sudo nmap target machine if I'm\n\n103\n00:06:12.355 --> 00:06:16.330\nnot a privileged user, sudo nmap target\nmachine that's what it runs by default.\n\n104\n00:06:16.330 --> 00:06:21.190\nI don't have to throw the dash\nss at it to make it do this.\n\n105\n00:06:21.190 --> 00:06:22.730\nThis is just what it does by default.\n\n106\n00:06:22.730 --> 00:06:26.560\nSo it's funny that those\nflags are still around from\n\n107\n00:06:26.560 --> 00:06:30.959\nharkening back from old from\nye old days of nmaps yor.\n\n108\n00:06:30.959 --> 00:06:33.220\nIt's still there.\n\n109\n00:06:33.220 --> 00:06:37.600\nAnd it's helpful to know\nwhat they are in your head.\n\n110\n00:06:37.600 --> 00:06:40.200\nSo I know I'm running that SYN scan,\nthat dash SS.\n\n111\n00:06:40.200 --> 00:06:44.160\nThat's also known as a stealth scan and\nthere's good reason for that.\n\n112\n00:06:44.160 --> 00:06:45.830\nAnd I'm glad you asked why, right?\n\n113\n00:06:45.830 --> 00:06:48.420\nWhy is that a good reason,\nwhat is that good reason?\n\n114\n00:06:48.420 --> 00:06:50.700\nThe good reason is that it's quick.\n\n115\n00:06:50.700 --> 00:06:53.350\nSuperfast and it's stealthy.\n\n116\n00:06:53.350 --> 00:06:56.090\nYou say, how's it, what does that mean?\n\n117\n00:06:56.090 --> 00:06:57.520\nWhat does it mean that it's quick?\n\n118\n00:06:57.520 --> 00:06:59.290\nAnd what does it mean that it's stealthy?\n\n119\n00:06:59.290 --> 00:07:02.090\nWell, it's fast and\npeople can't detect it, right.\n\n120\n00:07:02.090 --> 00:07:06.620\nI know, right, that's the facetious\nanswer, the quick and dirty answer.\n\n121\n00:07:06.620 --> 00:07:08.760\nLet's dive into that a little bit more.\n\n122\n00:07:08.760 --> 00:07:13.901\nWhen we say that it's quick,\nit means that because of how it works is\n\n123\n00:07:13.901 --> 00:07:19.149\nwhy it's fast okay and that's what\nimportant for us to understand.\n\n124\n00:07:19.149 --> 00:07:24.689\nIs I'm creating a connection\nI'm sending right we talking\n\n125\n00:07:24.689 --> 00:07:30.689\nabout this I'm sending a scene\nflagged tcp packet to a machine.\n\n126\n00:07:30.689 --> 00:07:35.970\nAnd it's either going to be in open\ncourt and it will respond with a snap\n\n127\n00:07:35.970 --> 00:07:41.699\nright in which case my in map machine will\nmove on with an rst because we really\n\n128\n00:07:41.699 --> 00:07:47.893\nto create a full connection we don't want\nto complete the three-way handshake.\n\n129\n00:07:47.893 --> 00:07:51.653\nI don't need to,\nI don't need to make that full connection.\n\n130\n00:07:51.653 --> 00:07:53.740\nI just wanna know whether or\nnot the port's open.\n\n131\n00:07:53.740 --> 00:07:57.740\nIf I get that synac I know it's open,\nyou've responded.\n\n132\n00:07:57.740 --> 00:07:59.683\nIt's giving me information.\n\n133\n00:07:59.683 --> 00:08:01.890\nThank you very much I'm on my happy way.\n\n134\n00:08:01.890 --> 00:08:05.097\nBut that's the important,\nthat's the key of how why is this fast.\n\n135\n00:08:05.097 --> 00:08:07.416\nI'm not creating full connections.\n\n136\n00:08:07.416 --> 00:08:09.247\nI'm sending out there.\n\n137\n00:08:09.247 --> 00:08:10.900\nIf I get Synac boom, I'm done.\n\n138\n00:08:10.900 --> 00:08:13.930\nThere's my RST, I'm off to the next port.\n\n139\n00:08:13.930 --> 00:08:15.190\nIt's super quick.\n\n140\n00:08:15.190 --> 00:08:16.230\nSo it cuts the time down.\n\n141\n00:08:16.230 --> 00:08:18.290\nIf the port is closed, it's even faster.\n\n142\n00:08:18.290 --> 00:08:22.013\nCuz what's the first thing I'm\ngonna get from a closed port?\n\n143\n00:08:22.013 --> 00:08:22.746\nAnyone?\nBueller?\n\n144\n00:08:22.746 --> 00:08:24.950\nBueller?\nIt's going to be RST.\n\n145\n00:08:24.950 --> 00:08:25.920\nI'm not an open port.\n\n146\n00:08:25.920 --> 00:08:27.940\nI'm not supposed to be receiving.\n\n147\n00:08:27.940 --> 00:08:28.770\nNetwork activity.\n\n148\n00:08:28.770 --> 00:08:30.040\nHere's your RST.\n\n149\n00:08:30.040 --> 00:08:31.250\nPlease reset your connection.\n\n150\n00:08:31.250 --> 00:08:33.070\nYou've got the wrong guy.\n\n151\n00:08:33.070 --> 00:08:34.080\nThanks a lot.\n\n152\n00:08:34.080 --> 00:08:35.580\nAnd for this very reason,\n\n153\n00:08:35.580 --> 00:08:39.940\nthey tend to call this a,\nwhat's it called, a half open.\n\n154\n00:08:39.940 --> 00:08:41.760\nThey call it half open scan,\n\n155\n00:08:41.760 --> 00:08:46.940\nbecause I'm not creating full TCP\nconnections, open connections, right?\n\n156\n00:08:46.940 --> 00:08:48.260\nThey're not fully connecting,\n\n157\n00:08:48.260 --> 00:08:52.130\nthey're only half opening, either by\ngetting that RST back from the target.\n\n158\n00:08:52.130 --> 00:08:55.480\nOr getting the Synac because\nthe port is open and responding but\n\n159\n00:08:55.480 --> 00:08:59.940\neither way we're killing it after we\nknow that the port is open or closed and\n\n160\n00:08:59.940 --> 00:09:01.160\nit's stopping right then and there.\n\n161\n00:09:01.160 --> 00:09:03.930\nSo half open scan is something\nthat you might run into,\n\n162\n00:09:03.930 --> 00:09:08.020\njust keep that in mind\nit's the nomenclature or\n\n163\n00:09:08.020 --> 00:09:12.110\nthe the dialect of working with Nmap,\nright.\n\n164\n00:09:12.110 --> 00:09:13.430\nSome of the things you'll pick up.\n\n165\n00:09:13.430 --> 00:09:16.080\nIt's like being in the military,\nyou get your own type of language and\n\n166\n00:09:16.080 --> 00:09:16.640\nit's a lot of fun.\n\n167\n00:09:17.950 --> 00:09:21.742\nAll right, let's see, what else do\nwe need to know about the sendscan?\n\n168\n00:09:21.742 --> 00:09:25.870\nAll right, so we do know it sends\na tcp packet with the send flag and\n\n169\n00:09:25.870 --> 00:09:28.500\nthen it responds with either the Synac or\nthe rst.\n\n170\n00:09:29.670 --> 00:09:32.370\nAlso, what happens if I\ndon't receive a response?\n\n171\n00:09:32.370 --> 00:09:34.070\nWhat happens there, right?\n\n172\n00:09:34.070 --> 00:09:38.260\nProbably gonna get that filtered,\nright, because open and\n\n173\n00:09:38.260 --> 00:09:43.550\nclosed ports should be sending\nsome sort of response back to my\n\n174\n00:09:43.550 --> 00:09:46.380\nattacking computer,\nmy end map machine, right?\n\n175\n00:09:46.380 --> 00:09:48.220\nIt should be giving me something?\n\n176\n00:09:48.220 --> 00:09:52.900\nShould have either given me that RST going\nI'm closed or Synac going hey I'm open,\n\n177\n00:09:52.900 --> 00:09:55.080\ndo you want to get some talking going,\n\n178\n00:09:55.080 --> 00:09:57.720\nwant to build a relationship,\nwant to get a connection, right?\n\n179\n00:09:57.720 --> 00:09:59.600\nThat's what should be happening,\n\n180\n00:09:59.600 --> 00:10:04.430\nif nothing comes back well then\nNmap is going to conclude that\n\n181\n00:10:04.430 --> 00:10:08.650\nthis is probably a filtered port because\nI should be receiving something.\n\n182\n00:10:08.650 --> 00:10:12.240\nNow there are other reasons in\nwhich it might not be responding,\n\n183\n00:10:12.240 --> 00:10:13.870\nnetwork congestion, things of that nature.\n\n184\n00:10:13.870 --> 00:10:19.800\nAnd again we talk about how because\nNmap is very thorough it tries\n\n185\n00:10:19.800 --> 00:10:23.540\nto retry over and over and over again just\nto make sure it wasn't network congestion.\n\n186\n00:10:23.540 --> 00:10:27.130\nIf it sees that consistent no response\n\n187\n00:10:27.130 --> 00:10:31.020\nagain it still could\nbe network congestion.\n\n188\n00:10:31.020 --> 00:10:34.690\nBut, at this point, it's gonna go ahead,\nand guess that it is a filtered state.\n\n189\n00:10:36.290 --> 00:10:41.810\nAnd, I did wanna take a random aside,\nto just talk about that, because, Wes,\n\n190\n00:10:41.810 --> 00:10:46.940\nwhat do you think that the answer,\nif I'm an N Map scanner, I'm the bad guy.\n\n191\n00:10:46.940 --> 00:10:48.360\nAnd you're the good guy.\n\n192\n00:10:48.360 --> 00:10:51.980\nYou've got a machine, you've got a server\nof some sort, and I start scanning your\n\n193\n00:10:51.980 --> 00:10:56.520\nmachine and I wanna get telnet,\nor I wanna get SSH let's say SSH.\n\n194\n00:10:56.520 --> 00:10:58.160\nSSH is my thing.\n\n195\n00:10:58.160 --> 00:10:58.750\nI'd go for that.\n\n196\n00:10:59.760 --> 00:11:02.690\nWhat are you going to do as an admin\nto stop me from doing that?\n\n197\n00:11:02.690 --> 00:11:05.830\n>> Well, the first thing I would do is\njust take the service itself that uses\n\n198\n00:11:05.830 --> 00:11:07.070\nthat port and close it down.\n\n199\n00:11:07.070 --> 00:11:10.790\nAnd, well, we should have a closed\nport and hopefully we would be secure.\n\n200\n00:11:10.790 --> 00:11:14.630\n>> That's a great answer,\nwhat if you need SSH?\n\n201\n00:11:14.630 --> 00:11:16.170\n>> Well then we're going to\nhave to leave the port open and\n\n202\n00:11:16.170 --> 00:11:17.180\nwe're going to be unsecure.\n\n203\n00:11:17.180 --> 00:11:18.660\n>> Right, so what do we do, right?\n\n204\n00:11:18.660 --> 00:11:24.330\nI either have to leave it open and allow\nthe attacker to know this port is open.\n\n205\n00:11:24.330 --> 00:11:30.210\nBut typically a security avenue to get\naround that is what people do, right?\n\n206\n00:11:30.210 --> 00:11:34.528\nAnd what they do is they\nfilter the port from everyone\n\n207\n00:11:34.528 --> 00:11:38.410\nexcept certain people right,\ncertain machines.\n\n208\n00:11:38.410 --> 00:11:39.750\nSo that's the way you can get around this.\n\n209\n00:11:39.750 --> 00:11:44.280\nI can at least filter the port, you might\neven still understand that it's open but\n\n210\n00:11:44.280 --> 00:11:48.230\nI wanted to show you this, right, just to\ngive you an idea of how these give and\n\n211\n00:11:48.230 --> 00:11:48.740\ntakes works.\n\n212\n00:11:48.740 --> 00:11:51.540\nSo let's look at my\nmachine really quickly.\n\n213\n00:11:51.540 --> 00:11:55.910\nAnd what I'm gonna do is, we'll just\ndo a quick Nmap scan, sudu Nmap.\n\n214\n00:11:55.910 --> 00:11:57.570\nAnd remember I don't need any flags or\n\n215\n00:11:57.570 --> 00:12:00.840\narguments at this point cuz I'm\ndoing the standard SYN scan.\n\n216\n00:12:00.840 --> 00:12:04.955\nAgainst my metasploitable.\n\n217\n00:12:04.955 --> 00:12:05.868\nMetasploitable.\n\n218\n00:12:05.868 --> 00:12:06.598\nThere we go.\n\n219\n00:12:06.598 --> 00:12:07.329\nMy password.\n\n220\n00:12:08.600 --> 00:12:09.940\nHopefully I typed that right I didn't.\n\n221\n00:12:11.920 --> 00:12:14.150\nI knew it when I typed it\nwas just completely wrong.\n\n222\n00:12:14.150 --> 00:12:18.320\nSo there we go, ports are open,\nlook there's that SSH wide open.\n\n223\n00:12:18.320 --> 00:12:22.650\nI do not want people getting\naccess to this right.\n\n224\n00:12:22.650 --> 00:12:25.200\nSo at least they know right here,\nit's open.\n\n225\n00:12:25.200 --> 00:12:26.920\nI wanna block that.\n\n226\n00:12:26.920 --> 00:12:27.530\nSo you know what?\n\n227\n00:12:27.530 --> 00:12:30.950\nI'm gonna block TCP connections to SSH,\nno problem.\n\n228\n00:12:30.950 --> 00:12:32.020\nI'm gonna go over here.\n\n229\n00:12:32.020 --> 00:12:39.003\nHere we go to do my sudo\niptables -A INPUT -p tcp,\n\n230\n00:12:39.003 --> 00:12:46.300\nand then it's -- --dport to 22 -J,\nand we'll reject.\n\n231\n00:12:46.300 --> 00:12:50.231\nLet's reject it.\n\n232\n00:12:50.231 --> 00:12:53.950\nActually, we'll drop it, I don't care.\nDrop, here we go.\n\n233\n00:12:53.950 --> 00:12:57.340\nBoom, we put that password in, msfadmin.\n\n234\n00:12:57.340 --> 00:12:59.120\nThere we go done, right?\n\n235\n00:12:59.120 --> 00:13:01.620\nNow no one gets any SSH, boom.\n\n236\n00:13:01.620 --> 00:13:06.350\nI run my scan again and it should\nat least show up as filter, right?\n\n237\n00:13:07.485 --> 00:13:09.350\nThere we go, there it is filtered.\n\n238\n00:13:09.350 --> 00:13:10.065\nI'm the bad guy.\n\n239\n00:13:10.065 --> 00:13:13.255\nI'm sitting here I'm going\nwell SSH is running but\n\n240\n00:13:13.255 --> 00:13:15.705\nfrom here I'm not going\nto get access to it.\n\n241\n00:13:15.705 --> 00:13:16.715\nThey've got me blocked down.\n\n242\n00:13:16.715 --> 00:13:18.245\nIt's a filtered port.\n\n243\n00:13:18.245 --> 00:13:24.485\nI can maybe try some more complex\nattacks to get into that.\n\n244\n00:13:24.485 --> 00:13:26.975\nBut the very least I know\nthat somethings up with it.\n\n245\n00:13:26.975 --> 00:13:31.750\nNow I could just be blocking tcp across\nevery port right one through one.\n\n246\n00:13:31.750 --> 00:13:32.940\nWe saw that in an early episode.\n\n247\n00:13:32.940 --> 00:13:35.790\nI can just block it off there you go,\nnothing, you get nothing and\n\n248\n00:13:35.790 --> 00:13:39.922\nthat's actually a very good way to\nlook at from a security standpoint.\n\n249\n00:13:39.922 --> 00:13:44.010\nI could just block every port and then\nonly allow access to maybe like a port, or\n\n250\n00:13:44.010 --> 00:13:44.730\nan IP range.\n\n251\n00:13:44.730 --> 00:13:49.290\nI can say only this internal\nLAN has access to that and\n\n252\n00:13:49.290 --> 00:13:51.430\nthen here's some VPN IP addresses.\n\n253\n00:13:51.430 --> 00:13:55.390\nSo if you're coming from the outside,\nyou need to authenticate in some way,\n\n254\n00:13:55.390 --> 00:13:56.280\nshape or form, right?\n\n255\n00:13:56.280 --> 00:13:57.080\nThat could be happening.\n\n256\n00:13:57.080 --> 00:13:59.000\nIt's a good way to go, right?\n\n257\n00:13:59.000 --> 00:13:59.960\nThat's what could do.\n\n258\n00:13:59.960 --> 00:14:02.675\nBut if I just wanna say, you know what,\nI only got one machine and\n\n259\n00:14:02.675 --> 00:14:05.420\nthat's the only person that needs access,\nI can do that.\n\n260\n00:14:05.420 --> 00:14:06.920\nI could jump back over\nto my metasploitable.\n\n261\n00:14:06.920 --> 00:14:08.710\nLet's do that, let's go there.\n\n262\n00:14:08.710 --> 00:14:12.140\nAnd what we'll do is we'll say, let's see,\n\n263\n00:14:12.140 --> 00:14:18.020\nyour sudo Iptables, so right now I'm\ndropping all traffic to port 22.\n\n264\n00:14:18.020 --> 00:14:23.790\nBut I want to allow a management machine,\nright, so iptables, we'll do dash i.\n\n265\n00:14:23.790 --> 00:14:28.170\nThis is to, we're not appending,\nI'm inserting into a certain spot.\n\n266\n00:14:28.170 --> 00:14:30.710\nRemember, firewall rules go from top down.\n\n267\n00:14:30.710 --> 00:14:33.260\nIt reads it and\nfinds a rule if it applies.\n\n268\n00:14:33.260 --> 00:14:34.890\nIt does it and just stops.\n\n269\n00:14:34.890 --> 00:14:39.250\nSo right now the top\nrule is allow no access,\n\n270\n00:14:39.250 --> 00:14:41.770\nso I've gotta throw this on top of it.\n\n271\n00:14:41.770 --> 00:14:44.640\nI input and\nbasically the same thing I'm gonna\n\n272\n00:14:44.640 --> 00:14:47.800\ntell it what spot I want to be\nin number one the top spot.\n\n273\n00:14:47.800 --> 00:14:54.284\nAnd then basically the same thing\ndash p tcp dash dash d port 22.\n\n274\n00:14:54.284 --> 00:14:56.270\n-J here's where we say ACCEPT.\n\n275\n00:14:56.270 --> 00:15:01.320\nActually I'm sorry forgot one thing\nthe actual management machine.\n\n276\n00:15:01.320 --> 00:15:05.725\nI'll say -s this is the source and\n\n277\n00:15:05.725 --> 00:15:11.310\nI'll say 192.168.219.136 and\nthen -J ACCEPT.\n\n278\n00:15:11.310 --> 00:15:16.770\nSo now I've written a rule that should\nonly allow access to SSH from one port.\n\n279\n00:15:16.770 --> 00:15:18.720\nSo now I can still be filtered.\n\n280\n00:15:18.720 --> 00:15:20.870\nAnd Nmap scans run, right?\n\n281\n00:15:20.870 --> 00:15:23.610\nRun it again,\nit should still say filtered.\n\n282\n00:15:23.610 --> 00:15:25.070\nHere we go, let's take a look.\n\n283\n00:15:25.070 --> 00:15:25.610\nThere it is.\n\n284\n00:15:25.610 --> 00:15:26.990\nIt's filtered content.\n\n285\n00:15:26.990 --> 00:15:30.390\nBut if I'm over on my management machine,\nI get access.\n\n286\n00:15:30.390 --> 00:15:34.340\nSo this is how we use proper\nfirewalling techniques\n\n287\n00:15:34.340 --> 00:15:39.360\nto still block our NMAP scanners and\nallow access to the authorized people.\n\n288\n00:15:39.360 --> 00:15:40.230\nAll right.\n\n289\n00:15:40.230 --> 00:15:44.570\nLet's see what else we\nneed to talk about here.\n\n290\n00:15:44.570 --> 00:15:49.633\nThere is a possibility that\nwhen you send the SYN flag\n\n291\n00:15:49.633 --> 00:15:54.941\npacket to the target,\nthat it will send a SYN in reply.\n\n292\n00:15:54.941 --> 00:15:59.046\nOkay, and that's a little crazy, right?\n\n293\n00:15:59.046 --> 00:16:02.121\nThat's like woah, hey now,\nthat's not normal, what is going on?\n\n294\n00:16:02.121 --> 00:16:03.034\nRight?\n\n295\n00:16:03.034 --> 00:16:07.522\nWhat's happening is this is called a\nsimultaneous open or, what was it called,\n\n296\n00:16:07.522 --> 00:16:08.930\na split handshake.\n\n297\n00:16:08.930 --> 00:16:10.150\nSo if you need to look that stuff up and\n\n298\n00:16:10.150 --> 00:16:13.426\nyou wanna be a little bit more involved\nwith that and learn what that is,\n\n299\n00:16:13.426 --> 00:16:17.780\nit could be that that machine is doing\nthat very thing, and it's a rarity.\n\n300\n00:16:17.780 --> 00:16:21.700\nIt's something that happens very,\nvery minimal.\n\n301\n00:16:21.700 --> 00:16:26.210\nSo it's unlikely that you'll see this\nvery often but it is a possibility so\n\n302\n00:16:26.210 --> 00:16:27.640\nI just wanted to make sure\nyou guys were aware of it.\n\n303\n00:16:27.640 --> 00:16:30.840\nYou can just read more about\nthe split handshake and\n\n304\n00:16:30.840 --> 00:16:32.530\nit will make more sense to you.\n\n305\n00:16:32.530 --> 00:16:36.200\n>> Now Dan, you've showed us\nhow to run the end map scanner.\n\n306\n00:16:36.200 --> 00:16:40.190\nAnd the sin is the default there but\nthat does require root, right?\n\n307\n00:16:40.190 --> 00:16:43.250\nIt requires root access or\nprivilege user myself.\n\n308\n00:16:43.250 --> 00:16:45.280\nMaybe I am a non-privilege user and\n\n309\n00:16:45.280 --> 00:16:48.270\nI wanna run a scan, you have told\nus a little bit about that scan.\n\n310\n00:16:48.270 --> 00:16:51.300\nCan you tell us a little bit more\nabout a scan that would be run if\n\n311\n00:16:51.300 --> 00:16:52.670\nyou don't have those privileges.\n\n312\n00:16:52.670 --> 00:16:53.690\n>> Yeah.\nAnd it is a,\n\n313\n00:16:53.690 --> 00:16:55.470\nactually it's a really good scan.\n\n314\n00:16:55.470 --> 00:16:58.370\nEspecially for if the fact that you're,\nfor whatever reason you're\n\n315\n00:16:58.370 --> 00:17:01.940\nnot using your own system and\nyou don't have privileged access to it.\n\n316\n00:17:01.940 --> 00:17:04.870\nAnd this is the TCP Connect Scan, right.\n\n317\n00:17:04.870 --> 00:17:09.400\nSo, if you were looking at it,\nI'll show you really quickly, here we go.\n\n318\n00:17:09.400 --> 00:17:13.710\nIf I did my nmap, so\njust nmap, no CDO right?\n\n319\n00:17:13.710 --> 00:17:15.680\nRunning standard user.\n\n320\n00:17:15.680 --> 00:17:19.740\nI don't have to put this in again,\nthis is the way it defaults to\n\n321\n00:17:19.740 --> 00:17:24.830\nunprivileged users but just so\nyou guys can use it sT like that.\n\n322\n00:17:24.830 --> 00:17:30.410\nSo if for whatever reason I was logged\nin as root and I wanted it to run\n\n323\n00:17:30.410 --> 00:17:36.500\na TCP connect scan this s T I know that I\ngotta throw this dash s capital T at it.\n\n324\n00:17:36.500 --> 00:17:41.790\nAnd I don't know if you picked up on\nthis yet, but dash ss is the SYN scan.\n\n325\n00:17:41.790 --> 00:17:45.070\nDash ST is the TCP connect scan.\n\n326\n00:17:45.070 --> 00:17:49.289\nIt kinda like tries to help as\na pneumonic, make it a very prominent\n\n327\n00:17:50.300 --> 00:17:53.930\nfeature of the type of scan to help\nyou remember which one's which, and\n\n328\n00:17:53.930 --> 00:17:54.860\nnot get them all confused.\n\n329\n00:17:54.860 --> 00:17:57.700\nBecause there's a lot of them obviously,\nand we don't want you to get confused.\n\n330\n00:17:57.700 --> 00:18:00.703\nSo there we go, I would do -sT,\nI don't have to do that here and\n\n331\n00:18:00.703 --> 00:18:03.385\nthen metasplitable or\nwhatever the target machine is.\n\n332\n00:18:06.118 --> 00:18:10.741\nThere we go, it's firing off nmap ram,\nactually got a lot of the same\n\n333\n00:18:10.741 --> 00:18:14.500\ntype of output if not\nthe exact same type of output.\n\n334\n00:18:14.500 --> 00:18:15.810\nI think I did actually.\n\n335\n00:18:15.810 --> 00:18:19.210\nAnd that's because again it's\ndoing a very good job of trying to\n\n336\n00:18:19.210 --> 00:18:23.480\nhelp you as an unprivileged user\nactually still be able to scan machines.\n\n337\n00:18:23.480 --> 00:18:28.930\nAnd it's going back to, it's using\nwhat's called the Berkeley socket API.\n\n338\n00:18:28.930 --> 00:18:29.790\nIs that correct?\n\n339\n00:18:29.790 --> 00:18:31.170\nYeah, Berkeley sockets API,\n\n340\n00:18:31.170 --> 00:18:36.790\nthis is basically how unprivileged\nusers make contact with web servers and\n\n341\n00:18:36.790 --> 00:18:41.010\nthings of that nature that you get\ntraffic over network connectivity without\n\n342\n00:18:41.010 --> 00:18:44.920\nhaving administrative level privileges\non your network interface right.\n\n343\n00:18:44.920 --> 00:18:50.040\nSo this basically exploiting the fact that\nwe want to live in a friendly society that\n\n344\n00:18:50.040 --> 00:18:56.210\nallows everyone access to certain\nareas of the public networks right.\n\n345\n00:18:56.210 --> 00:19:02.140\nSo that's a cool thing, I like being able\nto surf the web and do stuff like that so\n\n346\n00:19:02.140 --> 00:19:06.933\nnmap is saying well we can just piggy back\non that, send that TCP connect call out\n\n347\n00:19:06.933 --> 00:19:12.780\nand then illicit a response that\nway instead of using raw data and\n\n348\n00:19:12.780 --> 00:19:18.030\nsetting flags in the packets themselves\nwhich this user doesn't access to.\n\n349\n00:19:18.030 --> 00:19:20.428\nIt’s really cool thing that they do this.\n\n350\n00:19:20.428 --> 00:19:23.740\nAgain it's the default scan for\nunprivileged users.\n\n351\n00:19:23.740 --> 00:19:28.290\nIt is not as quick even though to us\nthat looked amazingly fast, right?\n\n352\n00:19:28.290 --> 00:19:30.800\nI hit enter and\nabout maybe 2 seconds later.\n\n353\n00:19:30.800 --> 00:19:34.980\nActually we can tell you,\n1.29 seconds later we had our results.\n\n354\n00:19:34.980 --> 00:19:38.350\nAnd that may have been faster than,\nyeah and it was.\n\n355\n00:19:38.350 --> 00:19:39.990\nIt was faster.\n\n356\n00:19:39.990 --> 00:19:42.910\nI'm running a VMware network here,\nit's a virtual network.\n\n357\n00:19:42.910 --> 00:19:45.530\nIf we were on a traditional\nwired network or\n\n358\n00:19:45.530 --> 00:19:49.000\na wireless network,\nscanning real machines out there,\n\n359\n00:19:49.000 --> 00:19:52.260\nthis would be a slower type of scan and\nthere's a good reason for that.\n\n360\n00:19:52.260 --> 00:19:58.230\nThe reason is is because I have to\ncreate full TCP connections for\n\n361\n00:19:58.230 --> 00:20:01.030\nthis to work and so what does that mean?\n\n362\n00:20:01.030 --> 00:20:06.740\nSo our quick and stealthy with the SS\nscan kinda starts flying away,\n\n363\n00:20:06.740 --> 00:20:08.140\ngoing bye-bye, right.\n\n364\n00:20:08.140 --> 00:20:11.810\nIt's not as quick obviously because\nit's creating full connections.\n\n365\n00:20:11.810 --> 00:20:16.739\nUnlike our stealth scan which doesn't,\nit just says soon as you reply I'm done.\n\n366\n00:20:17.820 --> 00:20:20.202\nAnd, since that full\nconnection is being made,\n\n367\n00:20:20.202 --> 00:20:22.596\nyou're more likely to be being logged,\nright?\n\n368\n00:20:22.596 --> 00:20:27.629\nThere's more likely that\nthe system is saying there was\n\n369\n00:20:27.629 --> 00:20:33.099\na connection made at 3:23AM\non May the 3rd, 2016.\n\n370\n00:20:33.099 --> 00:20:35.620\nAnd this port, da da da,\nit's actually logging that, right?\n\n371\n00:20:35.620 --> 00:20:37.510\nThe system does that, by default.\n\n372\n00:20:37.510 --> 00:20:40.390\nSo it's a very good possibility that\nthese things are being scanned.\n\n373\n00:20:40.390 --> 00:20:44.580\nNow unless you're monitoring those things,\nprobably not gonna see that.\n\n374\n00:20:44.580 --> 00:20:47.750\nSome strange reason you got an alert,\nmaybe an IDS system,\n\n375\n00:20:47.750 --> 00:20:49.820\nIPS system involved,\nthen you would see that.\n\n376\n00:20:49.820 --> 00:20:54.190\nBut, just know that, if you're using that\ntype of scan, and you think you're gonna\n\n377\n00:20:54.190 --> 00:20:58.940\nget away with something,\nyou're more likely than not being logged.\n\n378\n00:20:58.940 --> 00:21:02.550\n>> Dan, you know with the sin scans,\nwith the ax scans,\n\n379\n00:21:02.550 --> 00:21:06.650\nwe've really be piggybacking\noff of the DNA of TCP, right?\n\n380\n00:21:06.650 --> 00:21:10.450\nConnection oriented service,\nit starts that connection process, but\n\n381\n00:21:10.450 --> 00:21:15.470\nI know that we have another transport\nprotocol out there and are there uses for\n\n382\n00:21:15.470 --> 00:21:16.560\nusing its cousin?\n\n383\n00:21:16.560 --> 00:21:18.250\nThat's a little bit lazy, right?\n\n384\n00:21:18.250 --> 00:21:20.620\nThe UDP, or the user datagram protocol.\n\n385\n00:21:20.620 --> 00:21:24.710\nCan we use scans that\nbasically utilize UTP?\n\n386\n00:21:24.710 --> 00:21:28.370\n>> Man, I'm so glad you brought that up,\ncuz he is exactly right.\n\n387\n00:21:28.370 --> 00:21:35.670\nAnd for us as the penetration tester,\nsecurity specialist.\n\n388\n00:21:35.670 --> 00:21:37.420\nThis is a good thing.\n\n389\n00:21:37.420 --> 00:21:39.410\nBecause most people forget about that.\n\n390\n00:21:39.410 --> 00:21:45.000\nMost even admins that know that data\ngoes across UDP on a daily basis.\n\n391\n00:21:45.000 --> 00:21:46.110\nWe tend to forget that.\n\n392\n00:21:46.110 --> 00:21:49.240\nWe tend,\nbecause TCP is the bell of the ball.\n\n393\n00:21:49.240 --> 00:21:50.450\nShe is more popular.\n\n394\n00:21:50.450 --> 00:21:51.710\nRight?\nAnd rightly so.\n\n395\n00:21:51.710 --> 00:21:56.590\nA lot of times, I need that connection\noriented protocol to make sure\n\n396\n00:21:56.590 --> 00:22:01.430\nthat data is going in the right order, and\ngetting received, and everything's good.\n\n397\n00:22:01.430 --> 00:22:05.540\nYou know, if only part of my email gets\nto the person, what good does that do?\n\n398\n00:22:05.540 --> 00:22:06.360\nRight?\nThat's not great.\n\n399\n00:22:06.360 --> 00:22:11.020\nSo, TCP is more widely used for\nnetworking.\n\n400\n00:22:11.020 --> 00:22:15.648\nBut UDP is no slouch, it's great for\ncertain specific needs and requirements\n\n401\n00:22:15.648 --> 00:22:19.727\nbut it's not connection oriented so\npeople tend to forget about it.\n\n402\n00:22:19.727 --> 00:22:23.117\nWe don't need to do that, for\nus as nmap scanners that's a good thing so\n\n403\n00:22:23.117 --> 00:22:25.980\nyour unlikely,\nit's not like you're being firewalled.\n\n404\n00:22:25.980 --> 00:22:28.782\nSo you're going to be able to eat right\nthrough that, scan all the reports.\n\n405\n00:22:28.782 --> 00:22:33.828\nHere's the one caveat I want to give you,\neven though it's not being\n\n406\n00:22:33.828 --> 00:22:39.506\nblocked usually, for us as the scanner\nrunning nmap against it, it is slow.\n\n407\n00:22:39.506 --> 00:22:44.080\nIt is painfully slow, super slow, right?\n\n408\n00:22:44.080 --> 00:22:47.700\nOn this VM network alone, actually,\nlet's just, let's quit talking and\n\n409\n00:22:47.700 --> 00:22:49.030\nlet me just give you a little show.\n\n410\n00:22:49.030 --> 00:22:50.690\nLet's jump in here into my computer.\n\n411\n00:22:50.690 --> 00:22:53.480\nI saved it because it took so long.\n\n412\n00:22:53.480 --> 00:22:55.870\nHere was me running a, here we go.\n\n413\n00:22:55.870 --> 00:22:57.990\nPseudo nmap SU.\n\n414\n00:22:57.990 --> 00:23:05.500\nWhich gives you the UTP type of scan and\nthere is my machine name starting that.\n\n415\n00:23:05.500 --> 00:23:07.075\nAnd here it is giving me some updates.\n\n416\n00:23:07.075 --> 00:23:09.518\n8:56 minutes remaining.\n\n417\n00:23:09.518 --> 00:23:14.929\nThis is on a local, virtual, super fast\nconnection, super super fast because\n\n418\n00:23:14.929 --> 00:23:20.450\nit is basically turning right around and\ngiving it right back to itself, right.\n\n419\n00:23:20.450 --> 00:23:22.355\nIt's not even really hitting a wire,\nright.\n\n420\n00:23:22.355 --> 00:23:26.210\nAnd this took me 1078.13 seconds.\n\n421\n00:23:26.210 --> 00:23:27.090\nI did the math on that.\n\n422\n00:23:27.090 --> 00:23:33.340\nThat's just a hair under 18 minutes\nit took the scan to run, one machine.\n\n423\n00:23:34.430 --> 00:23:36.280\nOne machine took 18 minutes to run.\n\n424\n00:23:36.280 --> 00:23:39.010\nSo beware, very, very, very slow.\n\n425\n00:23:39.010 --> 00:23:39.820\nOkay.\n\n426\n00:23:39.820 --> 00:23:43.419\nBut, it did also come up\nwith some good information.\n\n427\n00:23:43.419 --> 00:23:46.601\nSome UDP ports, were available for me.\n\n428\n00:23:46.601 --> 00:23:47.670\nLook at this.\n\n429\n00:23:47.670 --> 00:23:50.231\nI got port 53, DNS.\n\n430\n00:23:50.231 --> 00:23:53.176\nNot only uses port 53 and\nTCP but it uses port 53 and\n\n431\n00:23:53.176 --> 00:23:57.172\nUDP to pass certain types of information\nthat it doesn't care whether or\n\n432\n00:23:57.172 --> 00:24:01.575\nnot you received it right so that's why\nthey use UDP cuz it's connectionless.\n\n433\n00:24:01.575 --> 00:24:02.317\nIt's fast.\n\n434\n00:24:02.317 --> 00:24:03.760\nHere, go, here's your stuff.\n\n435\n00:24:03.760 --> 00:24:05.038\nRight?\n\n436\n00:24:05.038 --> 00:24:08.570\nThe port is open, I didn't know that,\nfrom the stealth scan.\n\n437\n00:24:08.570 --> 00:24:12.810\nI knew that TCP 53 was open,\nI didn't know 53 EDP is open.\n\n438\n00:24:12.810 --> 00:24:16.000\nAnd DNS is a great target for\nhackers out there anymore.\n\n439\n00:24:16.000 --> 00:24:17.370\nTo dial service anybody, right?\n\n440\n00:24:17.370 --> 00:24:20.577\nDistributed dial service,\nthey love to go after a DNS.\n\n441\n00:24:20.577 --> 00:24:25.150\nSo knowing that that is open as running\na UDP service as a hacker is awesome.\n\n442\n00:24:25.150 --> 00:24:28.910\nAs a security specialist now I know hey\nyou know I didn't think about that,\n\n443\n00:24:28.910 --> 00:24:35.060\nmaybe that's something I need to write\na very pointed set of firewall rules for\n\n444\n00:24:35.060 --> 00:24:39.870\nthat only accept UDP traffic on Port\n53 from certain sources right so\n\n445\n00:24:39.870 --> 00:24:41.210\nthat's what helps us do this.\n\n446\n00:24:41.210 --> 00:24:47.680\nGot a couple of other very common UDP\nports, 68 and 69, DACP and TFTP, right?\n\n447\n00:24:47.680 --> 00:24:49.240\nCisco, what does it use, TFTP, right?\n\n448\n00:24:50.350 --> 00:24:52.740\nMaybe that UDP port is being used.\n\n449\n00:24:52.740 --> 00:24:53.460\nWho knows?\n\n450\n00:24:53.460 --> 00:24:55.820\nThis is does DACP,\nvery common, very common.\n\n451\n00:24:57.290 --> 00:25:00.710\nNetBIOS going on here, NFS, right?\n\n452\n00:25:00.710 --> 00:25:02.130\nThis is a great system.\n\n453\n00:25:02.130 --> 00:25:04.140\nSo, don't forget to run your UDP.\n\n454\n00:25:04.140 --> 00:25:07.180\nLet's see,\nwhat else do we want to know about this?\n\n455\n00:25:07.180 --> 00:25:12.260\nIt can be run simultaneously\nwith the Stealth scan, right?\n\n456\n00:25:12.260 --> 00:25:15.820\nSo, I can do SU-SS, right, do both.\n\n457\n00:25:15.820 --> 00:25:16.520\nRun them at the same time.\n\n458\n00:25:16.520 --> 00:25:20.280\nNow it'll still take a long time because\nboth scans have to finish before it gives\n\n459\n00:25:20.280 --> 00:25:21.420\nme my results.\n\n460\n00:25:21.420 --> 00:25:24.750\nBut, I'm making it really run faster\n\n461\n00:25:24.750 --> 00:25:27.690\nin the long run because I'm not running\none scan and then running another.\n\n462\n00:25:27.690 --> 00:25:29.190\nI'm combining them together.\n\n463\n00:25:29.190 --> 00:25:30.890\nThat's the nice thing.\n\n464\n00:25:32.250 --> 00:25:35.880\nOpen and filtered ports usually\ndo not respond to Nmap.\n\n465\n00:25:35.880 --> 00:25:43.020\nSo, it will retry, to make a connections\nsnd this slows things down, right.\n\n466\n00:25:43.020 --> 00:25:46.836\nSo, because of the nature of UDP\nnot responding, what does it think?\n\n467\n00:25:46.836 --> 00:25:49.376\nWell maybe there's network congestion,\nmaybe something happened and\n\n468\n00:25:49.376 --> 00:25:50.540\nthe packet got dropped.\n\n469\n00:25:50.540 --> 00:25:52.930\nLet me try again, let me try again.\n\n470\n00:25:52.930 --> 00:25:55.560\nSlowing things down,\nthis is why it takes so long.\n\n471\n00:25:55.560 --> 00:25:57.730\nPlus, some hosts can do rate limiting.\n\n472\n00:25:57.730 --> 00:26:01.810\nLinux and Solaris,\nthey're notorious for this.\n\n473\n00:26:01.810 --> 00:26:04.190\nThey start receiving a ton of traffic,\nand they say,\n\n474\n00:26:04.190 --> 00:26:07.100\nwhoa buddy, we need to slow our roll.\n\n475\n00:26:07.100 --> 00:26:08.618\nAnd let's do, how about,\n\n476\n00:26:08.618 --> 00:26:12.540\nI think the default on Linux\nis one message per second.\n\n477\n00:26:12.540 --> 00:26:15.850\nNow the cool thing is that Nmap says,\nI'm in a rate limited environment,\n\n478\n00:26:15.850 --> 00:26:18.650\nI need to calm myself down.\n\n479\n00:26:18.650 --> 00:26:19.620\nBut, what does that mean?\n\n480\n00:26:19.620 --> 00:26:20.420\nIt slows down.\n\n481\n00:26:20.420 --> 00:26:28.590\nSo it's all these things that work against\nUDP's speed as a scan that it's doing.\n\n482\n00:26:28.590 --> 00:26:32.320\nSo this rate limiting can\ncause big slow downs,\n\n483\n00:26:32.320 --> 00:26:36.260\nthe one message per second coming from\na Linux box can cause slow downs and\n\n484\n00:26:36.260 --> 00:26:40.070\nNmap itself is slowing it down\nto hit that rate limiting thing.\n\n485\n00:26:40.070 --> 00:26:44.170\nCouple of things we can do to speed things\nup, scan multiple hosts simultaneously.\n\n486\n00:26:44.170 --> 00:26:49.270\nGet five, ten machines and get some\nreally juicy stuff that you wanna scan.\n\n487\n00:26:49.270 --> 00:26:51.480\nRun it all at one time\nagainst all those targets.\n\n488\n00:26:51.480 --> 00:26:52.210\nOne spot, right?\n\n489\n00:26:53.450 --> 00:26:57.480\nAnother thing we can do is\nskip slow hosts, right?\n\n490\n00:26:57.480 --> 00:27:03.610\nIf Nmap detects and you add a flag,\nit's the --host timeout.\n\n491\n00:27:03.610 --> 00:27:08.150\nSo if I ran, let's take a look just so\nyou can see it in practicum.\n\n492\n00:27:08.150 --> 00:27:14.210\nSo if I was running this scan and\nI did --host-timeout like that,\n\n493\n00:27:14.210 --> 00:27:20.050\nthen if a host took longer than a certain\namount of time to reply, it just skips it.\n\n494\n00:27:20.050 --> 00:27:23.490\nIt just says, you're taking too\nlong I'm trying to be fast here.\n\n495\n00:27:23.490 --> 00:27:28.180\nTo speed things up, I'm gonna just jump\nby you, and go on to the next thing.\n\n496\n00:27:28.180 --> 00:27:31.440\nSo that can help speed things up as well.\n\n497\n00:27:31.440 --> 00:27:36.842\nInteresting thing about UDP is for\ncommon UDP services,\n\n498\n00:27:36.842 --> 00:27:42.131\ncommon user ports, it will,\ntypically when Nmap sends\n\n499\n00:27:42.131 --> 00:27:47.442\na scan it is an empty packet\nwith just a flag set, right?\n\n500\n00:27:47.442 --> 00:27:52.120\nJust empty with all the necessary things\nneeded to go across a network connection.\n\n501\n00:27:52.120 --> 00:27:54.730\nAnd make a connection, right?\n\n502\n00:27:54.730 --> 00:27:55.410\nJust no data in it.\n\n503\n00:27:56.410 --> 00:28:01.970\nBut with a UDP scan for the common ports,\nit will actually put in a specific\n\n504\n00:28:01.970 --> 00:28:07.040\npayload for those common types\nof services, like in DNS, right?\n\n505\n00:28:07.040 --> 00:28:08.560\nThat's a great example.\n\n506\n00:28:08.560 --> 00:28:13.270\nIt'll put a payload in it,\nwill help illicit a response more often.\n\n507\n00:28:13.270 --> 00:28:15.440\nRight?\nSo if some sort of filtering is happening,\n\n508\n00:28:15.440 --> 00:28:17.520\nor empty packets.\n\n509\n00:28:17.520 --> 00:28:20.370\nDon't accept empty packets\nwith just a send flag set.\n\n510\n00:28:20.370 --> 00:28:23.480\nAnd it's dropping that, well,\nnow I'm adding a payload to it, so\n\n511\n00:28:23.480 --> 00:28:25.090\nnow it accepts those packets.\n\n512\n00:28:25.090 --> 00:28:26.620\nSo a very good thing to know.\n\n513\n00:28:26.620 --> 00:28:29.230\n>> So it might be doing something,\nand I'm just taking a guess here, and\n\n514\n00:28:29.230 --> 00:28:31.000\nwe might not have any answer on this one.\n\n515\n00:28:31.000 --> 00:28:34.060\nBut if it is something like DNS,\nrather than like you said,\n\n516\n00:28:34.060 --> 00:28:37.140\njust an empty shell of a packet\ngoing across the wire,\n\n517\n00:28:37.140 --> 00:28:39.840\nin this case virtualized network, [LAUGH]\nwe're really not leaving the computer,\n\n518\n00:28:39.840 --> 00:28:44.090\nbut Going across the wire, we might\nput maybe a resolver query in that.\n\n519\n00:28:44.090 --> 00:28:49.070\nIt could be arbitrary data, but it could\nbe something specific that when you send\n\n520\n00:28:49.070 --> 00:28:52.810\nit to the endpoint, would be something\nthat the DNS server goes, I realize this.\n\n521\n00:28:52.810 --> 00:28:54.820\nThis is my whole purpose of existence.\n\n522\n00:28:54.820 --> 00:28:57.150\nHelp me send that back,\nfire it back to your Nmap scanner.\n\n523\n00:28:57.150 --> 00:28:58.870\n>> Yeah,\nthat's definitely part of the equation,\n\n524\n00:28:58.870 --> 00:29:02.890\nis that DNS system says,\nthis is definitely for me.\n\n525\n00:29:02.890 --> 00:29:04.110\nLet me respond to that.\n\n526\n00:29:04.110 --> 00:29:07.300\nBut it's also, the other half of\nthat is to get around the firewall.\n\n527\n00:29:07.300 --> 00:29:07.830\nRight?\n\n528\n00:29:07.830 --> 00:29:09.510\nSo two things in conjunction.\n\n529\n00:29:09.510 --> 00:29:13.750\nAnd that does that for\ncommon services by default, right?\n\n530\n00:29:13.750 --> 00:29:17.500\nIf you want to add data to\nempty packets that are for\n\n531\n00:29:17.500 --> 00:29:20.850\nother ports, you can do that as well.\n\n532\n00:29:20.850 --> 00:29:24.830\nYou can add the Dash,\ndash, data arguments.\n\n533\n00:29:24.830 --> 00:29:31.480\nWhich basically says, I think it works\nin hexidecimal, you put hexidecimal\n\n534\n00:29:31.480 --> 00:29:36.420\nvalues in there, and it just pads\nthe packet itself, gives it some data.\n\n535\n00:29:36.420 --> 00:29:40.790\nYou can do dash dash data dash string,\nRight?\n\n536\n00:29:40.790 --> 00:29:44.630\nAnd this will actually allow you to\ntype something in, some actual content.\n\n537\n00:29:44.630 --> 00:29:49.550\nYou can put you were super hacked\nby elite hacker group Elite, or\n\n538\n00:29:49.550 --> 00:29:50.570\nwhatever you wanna call yourself.\n\n539\n00:29:50.570 --> 00:29:52.720\nI don't know, have a good time with it.\n\n540\n00:29:52.720 --> 00:29:54.520\nThe good thing is, again, most likely,\n\n541\n00:29:54.520 --> 00:29:57.830\nsomeone's not paying attention to\nwhat's inside of those data packets.\n\n542\n00:29:57.830 --> 00:30:00.350\nRunning WireShark, or\nwhatever at that point in time.\n\n543\n00:30:00.350 --> 00:30:01.990\nSo, have fun with it.\n\n544\n00:30:01.990 --> 00:30:03.700\nJust, you're just giving it some data,\n\n545\n00:30:03.700 --> 00:30:06.900\nso that it'll make it\nthrough those types of scans.\n\n546\n00:30:06.900 --> 00:30:09.620\nAnd then dash, dash, data dash, length.\n\n547\n00:30:09.620 --> 00:30:13.820\nWhich gives it random\ndata that Nmap produces,\n\n548\n00:30:13.820 --> 00:30:16.080\nputs it in there again just\nto give you some padding.\n\n549\n00:30:17.400 --> 00:30:19.500\nOkay so last, but not least,\n\n550\n00:30:19.500 --> 00:30:25.240\nwe're talking about the results of\nthese scans, right, the states.\n\n551\n00:30:25.240 --> 00:30:26.300\nLooking at my computer.\n\n552\n00:30:26.300 --> 00:30:29.080\nYou notice we've got some open.\n\n553\n00:30:29.080 --> 00:30:30.750\nWe've got open filter.\n\n554\n00:30:30.750 --> 00:30:35.110\nI'm not seeing any closed, but\nthere's reasons why you might see open and\n\n555\n00:30:35.110 --> 00:30:36.700\nthere's reasons why you\nmight see open filter.\n\n556\n00:30:36.700 --> 00:30:41.340\nThere's another one that elicits the open\nfiltered response, very cool, right.\n\n557\n00:30:41.340 --> 00:30:42.830\nSo let's go do that.\n\n558\n00:30:42.830 --> 00:30:48.800\nIf it gives the target computer\nreplies with an ICMP unreachable\n\n559\n00:30:48.800 --> 00:30:53.190\nType Three code three I know\nthat's very specific, but\n\n560\n00:30:53.190 --> 00:30:56.610\nif that's what it responds with then this\nall comes from the firewall or whatever.\n\n561\n00:30:57.780 --> 00:31:03.190\nThen it shows it as closed, that then the\nUDP scan says well this is a closed port.\n\n562\n00:31:03.190 --> 00:31:06.360\nAll right, so just food for thought.\n\n563\n00:31:06.360 --> 00:31:10.850\nYou don't have to keep that and go, hey,\ndid you know it was a ICMP type three,\n\n564\n00:31:10.850 --> 00:31:11.868\ncode three.\n\n565\n00:31:11.868 --> 00:31:17.650\nAnd then Nmap UDP scan will elicit\na closed state in the port response.\n\n566\n00:31:17.650 --> 00:31:22.373\nSo, yeah, that's basically what you\ncan do is talk cool at parties.\n\n567\n00:31:22.373 --> 00:31:25.460\n[LAUGH] Going to other\nICMP unreachable replies.\n\n568\n00:31:25.460 --> 00:31:27.830\nThings like, again,\nit's in the type three.\n\n569\n00:31:29.070 --> 00:31:35.690\nCode 0, 1, 2, 9, 10, and\n13 will give you a filtered response.\n\n570\n00:31:35.690 --> 00:31:38.270\nAll right?\nSo if you get filtered back, that's why.\n\n571\n00:31:38.270 --> 00:31:41.470\nAnd you can look these codes up on\nwhy that's happening, but just so\n\n572\n00:31:41.470 --> 00:31:45.340\nyou know, when you pop the hood on Nmap,\nwhat's happening?\n\n573\n00:31:45.340 --> 00:31:50.270\nThat's why you're getting filtered\nback in the state column, okay.\n\n574\n00:31:50.270 --> 00:31:53.624\nNmap receives, if Nmap receives\nthe UDP packet back right,\n\n575\n00:31:53.624 --> 00:31:56.010\nobviously that's gonna be open, right.\n\n576\n00:31:56.010 --> 00:32:00.560\nThe port is open,\nit's responding and doing the thing,\n\n577\n00:32:00.560 --> 00:32:05.020\nalso if you receive closed\nyou might even get that.\n\n578\n00:32:05.020 --> 00:32:09.290\nBut not close, I'm sorry, if it responds\nwith an RC or doesn't respond at all,\n\n579\n00:32:09.290 --> 00:32:10.690\nit might actually give you something.\n\n580\n00:32:10.690 --> 00:32:16.170\nBut if you do get that UDP packet back,\nit will show it as being open, all right?\n\n581\n00:32:16.170 --> 00:32:19.540\nAnd then, no response at all,\nwell, we see that right here.\n\n582\n00:32:19.540 --> 00:32:23.360\nWe're getting open, but\nit's actually being filtered, right.\n\n583\n00:32:23.360 --> 00:32:24.640\nOr it doesn't know.\n\n584\n00:32:24.640 --> 00:32:30.250\nIt thinks this could be open, it could be\nfiltered, I'm not receiving a response so\n\n585\n00:32:30.250 --> 00:32:32.930\nI can't tell which one this is so\nI'm gonna just kind of give you both.\n\n586\n00:32:32.930 --> 00:32:37.500\nAnd you decide, or maybe run a different\ntype of scan to elicit whether or\n\n587\n00:32:37.500 --> 00:32:40.890\nnot it is open and\ntruly verify these things.\n\n588\n00:32:40.890 --> 00:32:45.380\nThat's basically the different types\nof responses that you're gonna see, so\n\n589\n00:32:45.380 --> 00:32:47.100\nI'm looking at our clock.\n\n590\n00:32:47.100 --> 00:32:51.220\nI know Wes, he's giving me the evil eye\nsaying hey boy, that's enough of that.\n\n591\n00:32:51.220 --> 00:32:52.240\nWe've got more shows to do.\n\n592\n00:32:52.240 --> 00:32:55.030\nSo That's a a good stopping spot for us.\n\n593\n00:32:55.030 --> 00:32:56.500\n>> That's great, it's kinda interesting.\n\n594\n00:32:56.500 --> 00:32:59.390\nI was thinking Dan,\nwhen you talked about what was that type,\n\n595\n00:32:59.390 --> 00:33:01.980\nthat was data string, right?\n\n596\n00:33:01.980 --> 00:33:05.690\nMaybe you've got somebody on your\nnetwork who works for the company and\n\n597\n00:33:05.690 --> 00:33:06.880\nis doing some kinda auditing.\n\n598\n00:33:06.880 --> 00:33:10.910\nThey've got Wireshark open, wouldn't that\nbe good to say in the data packet are you\n\n599\n00:33:10.910 --> 00:33:13.620\nreally paying attention and we'll see if\nwe're getting our money's worth or not.\n\n600\n00:33:13.620 --> 00:33:17.071\n>> That would be boring\n>> [LAUGH] Great information, Dan,\n\n601\n00:33:17.071 --> 00:33:18.218\nthanks for that.\n\n602\n00:33:18.218 --> 00:33:21.483\nGot any more information\nbefore we part ways?\n\n603\n00:33:21.483 --> 00:33:26.420\n>> No, just read over the man pages and\nobviously insecure.org or nmap.org.\n\n604\n00:33:26.420 --> 00:33:30.250\nIt's a wealth of information that's gonna\nhelp you remember these things if you've\n\n605\n00:33:30.250 --> 00:33:34.300\ngot Nmap installed, the man page is great,\nand it's got tons of information.\n\n606\n00:33:34.300 --> 00:33:37.300\nBasically, where I'm eliciting\njust about all of this stuff.\n\n607\n00:33:37.300 --> 00:33:40.210\nI mean, if you've worked with Nmap,\nyou're in that manual page, so\n\n608\n00:33:40.210 --> 00:33:41.640\ndefinitely use that.\n\n609\n00:33:41.640 --> 00:33:45.185\nWe don't expect Don't expect you to\nhave this stuff memorized after one\n\n610\n00:33:45.185 --> 00:33:46.445\nday of looking it over.\n\n611\n00:33:46.445 --> 00:33:50.795\nSo, go through it but\nwe do want you to be familiar with it and\n\n612\n00:33:50.795 --> 00:33:54.865\nas you work with it more you will become\nlike, I know exactly what's happening when\n\n613\n00:33:54.865 --> 00:34:00.115\nI do an SS scan and that's gonna hope\nyou be a better security specialist for\n\n614\n00:34:00.115 --> 00:34:03.410\nboth your own companies and if you're\ndoing like penetration testing, so.\n\n615\n00:34:03.410 --> 00:34:06.540\n>> Dan, we appreciate all the information\nyou've given here and we appreciate you,\n\n616\n00:34:06.540 --> 00:34:07.490\nthe viewers out here.\n\n617\n00:34:07.490 --> 00:34:10.000\nBut we're gonna go ahead and\ntake this time to sign off for ITProTV.\n\n618\n00:34:10.000 --> 00:34:11.820\nI've been your host, Wes Bryan.\n\n619\n00:34:11.820 --> 00:34:12.540\n>> I'm Daniel Lowrie.\n\n620\n00:34:12.540 --> 00:34:14.786\n>> And we'll see you next time.\n\n621\n00:34:14.786 --> 00:34:20.709\n[NOISE]\n\n",
          "vimeoId": "166508470"
        },
        {
          "description": null,
          "length": "2128",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-2-port-scanning-pt2-061316-.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-2-port-scanning-pt2-061316--med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-2-port-scanning-pt2-061316--sm.jpg",
          "title": "Port Scanning Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:11.677 --> 00:00:14.255\nWelcome back to another exciting\nepisode here at ITProTV.\n\n3\n00:00:14.255 --> 00:00:15.619\nI'm your host Wes Bryan,\n\n4\n00:00:15.619 --> 00:00:19.031\nand in today's episode we're\ncoming back at you with more Nmap.\n\n5\n00:00:19.031 --> 00:00:22.490\nThat's right, more of that networking\nsoftware that you love and\n\n6\n00:00:22.490 --> 00:00:24.570\nit's actually a part two in port scanning.\n\n7\n00:00:24.570 --> 00:00:27.130\nJoining me back in the studios is\nnone other than Mr. Dan Lowrie.\n\n8\n00:00:27.130 --> 00:00:28.120\nDan, how you doing, sir?\n\n9\n00:00:28.120 --> 00:00:29.080\n>> Man, I'm doing great.\n\n10\n00:00:29.080 --> 00:00:32.900\nGlad to be back here in the studio\ntoday for more of our Nmap series.\n\n11\n00:00:32.900 --> 00:00:34.830\nIt is entertaining and\nfun at the same time, so\n\n12\n00:00:34.830 --> 00:00:36.740\nhopefully you guys\nare getting a lot out of it.\n\n13\n00:00:36.740 --> 00:00:37.940\nThat's my hope, anyway.\n\n14\n00:00:37.940 --> 00:00:39.891\nThat being said, Wes is right.\n\n15\n00:00:39.891 --> 00:00:41.238\nWe are back for a part two.\n\n16\n00:00:41.238 --> 00:00:44.632\nThis isn't our first rodeo, but\nwe got a little more to learn about.\n\n17\n00:00:44.632 --> 00:00:45.180\nAnd actually,\n\n18\n00:00:45.180 --> 00:00:48.120\nwe've got a whole lot more to learn\nabout if we're gonna be honest with you.\n\n19\n00:00:48.120 --> 00:00:51.840\nI say we just jump right in,\ndive right into the next type of scan.\n\n20\n00:00:51.840 --> 00:00:55.980\nSo that we continue our port\nscanning education as it were.\n\n21\n00:00:55.980 --> 00:01:00.769\nSo, the next type of scan that we're gonna\ntake a look at is the SCTP scan, and\n\n22\n00:01:00.769 --> 00:01:04.321\nthis stands for\nStream Control Transmission Protocol.\n\n23\n00:01:04.321 --> 00:01:09.137\nAnd we kinda talked about this and\nwhen I say kinda, I'm talking very quickly\n\n24\n00:01:09.137 --> 00:01:13.378\ncurse over the SCTP when we were\nlooking at host discovery, right?\n\n25\n00:01:13.378 --> 00:01:15.642\nThere was an option there for SCTP.\n\n26\n00:01:15.642 --> 00:01:17.244\nAnd I thought, okay, that's interesting.\n\n27\n00:01:17.244 --> 00:01:19.521\nIt's definitely a new\nfeature here in Nmap.\n\n28\n00:01:19.521 --> 00:01:23.120\nAnd I thought okay, well,\nit's not a big deal, I'll just move on.\n\n29\n00:01:23.120 --> 00:01:26.556\nAnd I got to port scanning, there was\nSCTP again staring me right in the face.\n\n30\n00:01:26.556 --> 00:01:28.929\nSo I thought,\nlet's take a better look at this thing and\n\n31\n00:01:28.929 --> 00:01:30.608\nat least understand what's going on.\n\n32\n00:01:30.608 --> 00:01:34.543\nAnd even though you might\nnot have ever heard of SCTP.\n\n33\n00:01:34.543 --> 00:01:36.718\nAnd I'm going to be honest with you,\nneither did I.\n\n34\n00:01:36.718 --> 00:01:41.425\nAs I searched out what SCTP was,\nI found out that most networking\n\n35\n00:01:41.425 --> 00:01:45.795\nprofessionals are probably\nunaware of SCTP as a protocol.\n\n36\n00:01:47.290 --> 00:01:49.130\nBut they shouldn't, they should be aware.\n\n37\n00:01:49.130 --> 00:01:51.670\nYou guys should definitely learn\nas much as you can about SCTP,\n\n38\n00:01:51.670 --> 00:01:53.960\nit's a very cool protocol.\n\n39\n00:01:53.960 --> 00:01:56.510\nThings I want you to know about SCTP,\n\n40\n00:01:56.510 --> 00:02:00.860\nspecifically is that it's a Layer 4\nprotocol, just like TCP is, right?\n\n41\n00:02:00.860 --> 00:02:01.698\nIt's very, very cool.\n\n42\n00:02:01.698 --> 00:02:09.540\nAnd you've gotta think of it as\nkind of a hybrid of TCP and UDP.\n\n43\n00:02:09.540 --> 00:02:14.110\nBut, for the most part,\nit looks mostly like TCP,\n\n44\n00:02:14.110 --> 00:02:16.585\nbut doing basically\nthe very same function.\n\n45\n00:02:16.585 --> 00:02:20.282\nWe're looking at creating sockets,\nmaking sure data is transmitted and\n\n46\n00:02:20.282 --> 00:02:21.840\nthat the connection was made.\n\n47\n00:02:21.840 --> 00:02:26.600\nAnd there was no errors, looks for error\ncontrol, all that just like TCP does.\n\n48\n00:02:26.600 --> 00:02:31.061\nSo when you think of SCTP you're\nreally not far off base if you\n\n49\n00:02:31.061 --> 00:02:32.823\njust think TCP as well.\n\n50\n00:02:32.823 --> 00:02:35.021\n>> Now Dan, knowing a little\nbit about the transport layer.\n\n51\n00:02:35.021 --> 00:02:39.721\nI know that the Transmission Control\nProtocol is a connection oriented service,\n\n52\n00:02:39.721 --> 00:02:41.500\nit ensure reliable delivery.\n\n53\n00:02:41.500 --> 00:02:45.120\nNow, why might I use\nsomething like this hybrid?\n\n54\n00:02:45.120 --> 00:02:47.950\nIs this strange lab work going on here,\n\n55\n00:02:47.950 --> 00:02:52.140\nwhere we're combining parts of TCP and\nUDP here?\n\n56\n00:02:52.140 --> 00:02:53.370\nWhy would we use this protocol?\n\n57\n00:02:53.370 --> 00:02:56.960\n>> Yeah, Dr. Frankenstein definitely\nhad a good time with this protocol.\n\n58\n00:02:56.960 --> 00:03:02.060\nIt's actually a really cool protocol and\nfor a couple of reasons, right?\n\n59\n00:03:02.060 --> 00:03:05.620\nOne is that it is multi-homing, right?\n\n60\n00:03:05.620 --> 00:03:08.680\nThat means it can connect\nto more than one network,\n\n61\n00:03:08.680 --> 00:03:11.300\nmake a connection with\nmore than one network.\n\n62\n00:03:11.300 --> 00:03:12.817\nThat's actually a really cool thing.\n\n63\n00:03:12.817 --> 00:03:15.949\nSo if I have multiple network cards\ninside of my device, I can make and\n\n64\n00:03:15.949 --> 00:03:17.519\nthey're on different networks.\n\n65\n00:03:17.519 --> 00:03:20.697\nI can make a stream of\nconnections coming through, or\n\n66\n00:03:20.697 --> 00:03:24.521\nI can just have multi-home systems and\nhave multiple streams.\n\n67\n00:03:24.521 --> 00:03:29.040\nThat leads us into the next part of why\nit's cool is it does multiple streams of\n\n68\n00:03:29.040 --> 00:03:33.835\ndata whereas in TCP, I ask a website for\nits webpage, or I just go to google.com or\n\n69\n00:03:33.835 --> 00:03:34.481\nITProTV.\n\n70\n00:03:34.481 --> 00:03:36.454\nThat's actually probably a better\nexample to be honest with you.\n\n71\n00:03:36.454 --> 00:03:39.357\nSo you go to ITProTV,\nyou make the request for the website.\n\n72\n00:03:39.357 --> 00:03:44.850\nThe website responds and sends you\nthe website in a stream of data, right?\n\n73\n00:03:44.850 --> 00:03:47.400\nTCP segments coming across the wire,\n\n74\n00:03:47.400 --> 00:03:50.750\nall nicely bundled up in a lovely\nlittle package with a bow on it.\n\n75\n00:03:50.750 --> 00:03:55.720\nAnd that includes the text that's\ninvolved on the page, the colors.\n\n76\n00:03:55.720 --> 00:03:58.110\nAny multimedia things like audio and\n\n77\n00:03:58.110 --> 00:04:00.600\nvideo that you might be\nwatching right now, right?\n\n78\n00:04:00.600 --> 00:04:02.620\nThat all comes across, well obviously,\n\n79\n00:04:02.620 --> 00:04:05.260\nif you're watching live,\n[LAUGH] it's using UDP.\n\n80\n00:04:05.260 --> 00:04:07.590\nBut if you're watching\nthis as a recording,\n\n81\n00:04:07.590 --> 00:04:10.380\nit is a file that is\nbeing transferred across.\n\n82\n00:04:10.380 --> 00:04:12.379\nIt does it in one single data stream,\n\n83\n00:04:12.379 --> 00:04:15.544\nwhereas an SCTP can actually\ndo multiple streams of data.\n\n84\n00:04:15.544 --> 00:04:18.320\nIt can actually bring in the text,\n\n85\n00:04:18.320 --> 00:04:23.120\nvideo and audio all at one time\nthrough different streams.\n\n86\n00:04:23.120 --> 00:04:28.937\nSo, it actually, it's a little more\nrobust than TCP is to be honest with you.\n\n87\n00:04:28.937 --> 00:04:32.551\nBecause of it's ability to do\nmulti-streaming, it's very cool and\n\n88\n00:04:32.551 --> 00:04:37.083\nit's basically using what's called, and\nagain, you don't have to know this stuff,\n\n89\n00:04:37.083 --> 00:04:40.230\nit's just for your edification\nwhen it comes to using Nmap.\n\n90\n00:04:40.230 --> 00:04:43.349\nSo, if you're ever on\na SCTP utilized network,\n\n91\n00:04:43.349 --> 00:04:46.940\nthen you'll still be able to\nscan that network as well.\n\n92\n00:04:46.940 --> 00:04:50.900\nSo, this basically why I'm\ngiving you this information.\n\n93\n00:04:50.900 --> 00:04:54.490\nI don't think there's too many\ntypes of tests running out there,\n\n94\n00:04:54.490 --> 00:04:56.760\nthis isn't a test-oriented show anyway.\n\n95\n00:04:56.760 --> 00:04:58.424\nJust a tech skill for\nyou guys to understand and\n\n96\n00:04:58.424 --> 00:05:00.400\nknow this product a little bit better.\n\n97\n00:05:00.400 --> 00:05:03.900\nSo in that vein, just wanted you to\nknow that that's how that works.\n\n98\n00:05:03.900 --> 00:05:07.710\nThere's multiple streams of data,\ncan do all that stuff at one given time.\n\n99\n00:05:09.190 --> 00:05:10.690\nYeah, the SS7.\n\n100\n00:05:10.690 --> 00:05:12.990\nThis is basically what it's looking for.\n\n101\n00:05:12.990 --> 00:05:18.250\nIf you look up SCTP, you'll see SS7 or\nSIGTRAN services typically applied.\n\n102\n00:05:18.250 --> 00:05:24.970\nIf I'm remembering correctly,\nit's typically for a VOIP type of system.\n\n103\n00:05:24.970 --> 00:05:27.210\nIt was developed for VOIP type systems.\n\n104\n00:05:27.210 --> 00:05:31.239\nGive you a little bit of more robustness\nand multiple streams of data and\n\n105\n00:05:31.239 --> 00:05:33.666\nincreasing your quality control as well.\n\n106\n00:05:33.666 --> 00:05:35.524\nSo, very cool device.\n\n107\n00:05:35.524 --> 00:05:36.743\nSo let's see here.\n\n108\n00:05:36.743 --> 00:05:40.380\nSo, now I'm getting back to Nmap, let's go\nahead and jump to my screen real quick.\n\n109\n00:05:40.380 --> 00:05:43.870\nLet's show you how to\nactually invoke a scan here.\n\n110\n00:05:43.870 --> 00:05:46.986\nSo we do our good old sudo -S nmap.\n\n111\n00:05:46.986 --> 00:05:48.519\nThat's not the right character.\n\n112\n00:05:48.519 --> 00:05:55.400\nNmap-sY, capital Y remember usually on\nthe backside there, it's a capital.\n\n113\n00:05:55.400 --> 00:05:57.085\nSo -s type of scan and then Y.\n\n114\n00:05:57.085 --> 00:06:00.923\nNow, with our other scans,\nwe looked at the SYN scan,\n\n115\n00:06:00.923 --> 00:06:06.670\nthe TCP connect scan and the UDP scan\nback in part one of port scanning.\n\n116\n00:06:06.670 --> 00:06:11.670\nIt was SS, or SYN scan, ST for\n\n117\n00:06:11.670 --> 00:06:15.750\nTCP connect scan, SU for UDP scan.\n\n118\n00:06:15.750 --> 00:06:19.140\nHere we have SY for SCTP.\n\n119\n00:06:19.140 --> 00:06:22.430\nWell, obviously, we couldn't use S\nagain cuz it's already been taken.\n\n120\n00:06:22.430 --> 00:06:25.098\nAnd I can't think of any reason\nwhy [LAUGH] they used Y and\n\n121\n00:06:25.098 --> 00:06:27.690\nthey don't give any reason\nas far as Nmap goes.\n\n122\n00:06:27.690 --> 00:06:32.810\nSo just know SY is SCTP,\nthat is the scan you can invoke.\n\n123\n00:06:32.810 --> 00:06:35.010\nAnd then just like our SYN scan,\n\n124\n00:06:35.010 --> 00:06:39.970\nour regular good old fashioned\nTCP SYN scan, the dash SS.\n\n125\n00:06:39.970 --> 00:06:43.862\nYou give it any kind of arguments that you\nwant and then the actual target you want.\n\n126\n00:06:43.862 --> 00:06:51.433\nSo, 192.1.168.219.135 that's our target,\nhit Return.\n\n127\n00:06:51.433 --> 00:06:56.480\nIt's gonna ask me for my password\ncuz I'm sudoing, starts to scan.\n\n128\n00:06:56.480 --> 00:06:59.320\nOff it goes and there we are.\n\n129\n00:06:59.320 --> 00:07:01.740\nThere's a bunch of filtered\nports right here but\n\n130\n00:07:01.740 --> 00:07:03.640\nbecause I'm not running\nanything with SCPT.\n\n131\n00:07:03.640 --> 00:07:06.150\n>> I was gonna jump\nhere real quick Dan and\n\n132\n00:07:06.150 --> 00:07:08.180\nsay well I've seen some of\nthe scans you've done before.\n\n133\n00:07:08.180 --> 00:07:10.580\nAnd that one was pretty fast,\nthat was just like your SYN scan.\n\n134\n00:07:10.580 --> 00:07:11.339\nSo why would we use\n\n135\n00:07:11.339 --> 00:07:14.460\nsomething like this over something\nlike a traditional SYN scan?\n\n136\n00:07:14.460 --> 00:07:16.040\n>> Yeah, that's a really good question.\n\n137\n00:07:16.040 --> 00:07:22.100\nAnd the reason that we would use this\nguy over is because you're using SCTP.\n\n138\n00:07:22.100 --> 00:07:28.400\nThere is SCTP services that you would\nlike to enumerate and see what's running.\n\n139\n00:07:28.400 --> 00:07:29.900\nSo maybe there's a program, you\n\n140\n00:07:31.290 --> 00:07:36.270\ncould replace your whole\nentire TCP protocol with SCTP.\n\n141\n00:07:36.270 --> 00:07:37.790\nSo if you're a developer or\na programmer and\n\n142\n00:07:37.790 --> 00:07:40.982\nyou're writing in-house code,\nmaybe you thought, hey, you know what?\n\n143\n00:07:40.982 --> 00:07:44.690\nSCTP is more robust,\nI'm gonna write all things for SCTP.\n\n144\n00:07:44.690 --> 00:07:46.498\nNow, we don't see that because, well, for\n\n145\n00:07:46.498 --> 00:07:48.982\nthe same reason that we don't\nsee IPv6 everywhere, right?\n\n146\n00:07:48.982 --> 00:07:50.784\nBecause even though\nit's a better protocol,\n\n147\n00:07:50.784 --> 00:07:52.176\nit's gonna work to our advantage.\n\n148\n00:07:52.176 --> 00:07:55.379\nIt's really entrenched,\nTCP is very entrenched.\n\n149\n00:07:55.379 --> 00:08:01.181\nSo it's hard to get people to start\nwriting everything with SCTP in mind.\n\n150\n00:08:01.181 --> 00:08:05.507\nI believe eventually we will, and then\nwe'll See that as a protocol as but for\n\n151\n00:08:05.507 --> 00:08:08.531\nright now TCP is the king of the hill so\nthat's what you see.\n\n152\n00:08:08.531 --> 00:08:10.779\n>> I'm gonna go ahead and\ntake the black hat off here for a second,\n\n153\n00:08:10.779 --> 00:08:12.150\njust go ahead and put the white hat on.\n\n154\n00:08:12.150 --> 00:08:14.510\nNow if you're an administrator so\nyou're saying maybe for\n\n155\n00:08:14.510 --> 00:08:16.190\na scenario based you would use this.\n\n156\n00:08:16.190 --> 00:08:19.650\nIf you're scanning a network that you\nknow that you're administering to and\n\n157\n00:08:19.650 --> 00:08:21.880\nit's got like heavy VoIP traffic,\nlike you've mentioned,\n\n158\n00:08:21.880 --> 00:08:25.460\nhigh definition teleconferencing and\nstuff might be a reason.\n\n159\n00:08:25.460 --> 00:08:27.700\nI would use this over something\nlike a traditional TCP.\n\n160\n00:08:27.700 --> 00:08:28.740\n>> Yeah.\nThat's it.\n\n161\n00:08:28.740 --> 00:08:29.700\nThat's exactly right.\n\n162\n00:08:29.700 --> 00:08:33.782\nYou know you're running SETP services,\nyou wanna check that stuff out.\n\n163\n00:08:33.782 --> 00:08:38.350\nYou wanna see what a scanner, like Wes\nsays, he's taking his black hat off and\n\n164\n00:08:38.350 --> 00:08:41.250\nyou're becoming a white hat, you want\nto see what black hat's are seeing.\n\n165\n00:08:41.250 --> 00:08:43.060\nYou wanna see, is that stuff vulnerable?\n\n166\n00:08:43.060 --> 00:08:44.660\nYou wanna do a scan in your network?\n\n167\n00:08:44.660 --> 00:08:48.700\nBoom, you can run this and see what's\nrunning and see what you can enumerate.\n\n168\n00:08:48.700 --> 00:08:53.090\nThat's what it's all about, is discovery,\nso that whole term enumeration.\n\n169\n00:08:53.090 --> 00:08:58.210\nBasically giving an entire picture of\nwhat your network looks like, using SCTP.\n\n170\n00:08:58.210 --> 00:09:02.420\nSo, let's give you a couple more\ndetails when it comes to SCTP so\n\n171\n00:09:02.420 --> 00:09:04.170\nthat you can have a more\nfull understanding.\n\n172\n00:09:04.170 --> 00:09:05.460\nLet's see here.\n\n173\n00:09:05.460 --> 00:09:11.690\nIt runs just like the SS command,\nthe SYN scan, the regular SYN scan.\n\n174\n00:09:11.690 --> 00:09:16.930\nAnd just like that SYN scan,\nit is fast and it's stealthy, right.\n\n175\n00:09:16.930 --> 00:09:22.040\nThis is basically the SCTP\nversion of the SYN scan.\n\n176\n00:09:22.040 --> 00:09:24.900\nIt works almost, it does work identically.\n\n177\n00:09:24.900 --> 00:09:26.540\nIt just uses a different protocol.\n\n178\n00:09:26.540 --> 00:09:30.090\nSo keep that in mind as well\nas you continue the scan.\n\n179\n00:09:30.090 --> 00:09:34.900\nAnd that brings us to,\nwell why is it stealthy?\n\n180\n00:09:34.900 --> 00:09:36.320\nwhy is it fast?\n\n181\n00:09:36.320 --> 00:09:40.130\nSame reasons, right, because if it's\nworking exactly like the SYN scan then\n\n182\n00:09:40.130 --> 00:09:45.070\nthe same reasons apply, that it's\nmaking half open connections, right?\n\n183\n00:09:45.070 --> 00:09:49.220\nit's not completely\nmaking a full handshake.\n\n184\n00:09:49.220 --> 00:09:51.080\nBecause SCTP does do a handshake.\n\n185\n00:09:51.080 --> 00:09:54.240\nIt does a four-way handshake\ninstead of a three-way handshake.\n\n186\n00:09:54.240 --> 00:09:59.880\nInstead of a send packet that it sends,\nit sends an init packet to the target.\n\n187\n00:09:59.880 --> 00:10:02.470\nA little trying to illicit\na type of response.\n\n188\n00:10:02.470 --> 00:10:06.320\nThe type of response that it's\ntrying to illicit is the Init ACK.\n\n189\n00:10:06.320 --> 00:10:10.470\nSo if it gets the Init ACK back, then the\nport is open just like if we send a SYN,\n\n190\n00:10:10.470 --> 00:10:14.360\nwe got a SYN ACK back,\nwe know the port is open, so there you go.\n\n191\n00:10:14.360 --> 00:10:20.250\nIf you get an ABORT, so\nthat's SCTP's version of the RST, right?\n\n192\n00:10:20.250 --> 00:10:23.210\nIt's saying hey, something's weird here.\n\n193\n00:10:23.210 --> 00:10:26.520\nI Don't really see any connection\nthat I haven't made before.\n\n194\n00:10:26.520 --> 00:10:27.920\nThis is kind of order.\n\n195\n00:10:27.920 --> 00:10:30.680\nIt's weird.\nI'm just gonna send a reset, right, or\n\n196\n00:10:30.680 --> 00:10:32.530\nan abort in this case.\n\n197\n00:10:32.530 --> 00:10:33.380\nLet's start over.\n\n198\n00:10:33.380 --> 00:10:34.890\nIf you're looking to make a connection,\n\n199\n00:10:34.890 --> 00:10:37.830\nwe need to start over cuz something'\nwent haywire I didn't get something so\n\n200\n00:10:37.830 --> 00:10:41.300\nit sends an abort package so\nthat you can start over as the sender.\n\n201\n00:10:41.300 --> 00:10:44.980\nBut that's good too because then we know\nthat if it's an abort it's closed right.\n\n202\n00:10:44.980 --> 00:10:48.540\nThere's nothing to talk to there\nthat's why it's sending the abort.\n\n203\n00:10:48.540 --> 00:10:52.940\nAll right if you get no response or if\nyou get like an error like an unreachable\n\n204\n00:10:52.940 --> 00:10:57.730\nerror kind of like if you did like\nan ICMP type deal, those are filtered.\n\n205\n00:10:57.730 --> 00:11:01.010\nBasically, SCTP wrapped up in a ball.\n\n206\n00:11:01.010 --> 00:11:05.950\nVery quick and dirty, but you guys now\nshould have at least some understanding\n\n207\n00:11:05.950 --> 00:11:08.330\nof what's going on when it comes to SCTP.\n\n208\n00:11:08.330 --> 00:11:11.360\nAnd it doesn't just look like a weird\nscan that you available to you\n\n209\n00:11:11.360 --> 00:11:12.720\nin your n-map system.\n\n210\n00:11:12.720 --> 00:11:14.180\nVery, very cool.\n\n211\n00:11:14.180 --> 00:11:16.770\nAlright, enough crazy protocol of SCTP.\n\n212\n00:11:16.770 --> 00:11:21.410\nLearn more about that on your own time and\nbe better educated for it, but\n\n213\n00:11:21.410 --> 00:11:22.790\nlet's move back to TCP.\n\n214\n00:11:22.790 --> 00:11:26.470\nLet's move back to traditional\nn-maps scanning, and\n\n215\n00:11:26.470 --> 00:11:27.870\nsee what else we can learn from this guy.\n\n216\n00:11:27.870 --> 00:11:31.000\nNow, the next thing I want\nyou guys to know, moving on,\n\n217\n00:11:31.000 --> 00:11:35.480\nthe next thing I want you guys to know,\nand I've put this here purposefully,\n\n218\n00:11:35.480 --> 00:11:39.190\nis a type of argument for Nmap.\n\n219\n00:11:39.190 --> 00:11:42.556\nIt's called,\nlet me just tell you what it is.\n\n220\n00:11:42.556 --> 00:11:44.630\nIt's called scan flags.\n\n221\n00:11:44.630 --> 00:11:49.190\nWe've kind of been talking about\nthis almost the entire time\n\n222\n00:11:49.190 --> 00:11:50.790\nthat we've been talking about Nmap.\n\n223\n00:11:50.790 --> 00:11:56.350\nIt's the type of flags that you\ncan set inside of the TCP packet.\n\n224\n00:11:56.350 --> 00:11:59.140\nWe've looked at these before with the SYN,\nright?\n\n225\n00:11:59.140 --> 00:12:02.970\nBasically I'm setting a flag\nthat says this is a SYN Packet.\n\n226\n00:12:02.970 --> 00:12:04.750\nI want to create a connection.\n\n227\n00:12:04.750 --> 00:12:06.160\nSo and so and so forth.\n\n228\n00:12:06.160 --> 00:12:08.550\nThere's quite a few\ndifferent types of ones.\n\n229\n00:12:08.550 --> 00:12:11.230\nThe one specifically that\nwe need to know for Nmap.\n\n230\n00:12:11.230 --> 00:12:13.700\nI actually have on me screen here.\n\n231\n00:12:13.700 --> 00:12:14.390\nLet me see, here.\n\n232\n00:12:14.390 --> 00:12:17.010\nI made a nice little, not a diagram,\n\n233\n00:12:17.010 --> 00:12:21.880\nI guess this is more like an informatic,\nthat we have the six different\n\n234\n00:12:21.880 --> 00:12:27.250\nflags that we need to be aware of as\nfar as where we're at so far with Nmap.\n\n235\n00:12:27.250 --> 00:12:29.180\nWe have seen a few of these so far right?\n\n236\n00:12:29.180 --> 00:12:32.590\nSYN initiates a connection, so\nwe might want to do a SYN scan.\n\n237\n00:12:32.590 --> 00:12:36.280\nI'm going to set the SYN\nflag using Nmap as software.\n\n238\n00:12:36.280 --> 00:12:38.190\nIt can actually make that connection,\nright?\n\n239\n00:12:39.520 --> 00:12:42.360\nIf I want to do an ACK scan\nI can set the ACK packet.\n\n240\n00:12:42.360 --> 00:12:49.120\nWe've talked about ACK's being the\nresponse to certain types of scans, right?\n\n241\n00:12:49.120 --> 00:12:53.280\nThat the target computer usually is\nsending us an ACK saying, I acknowledge\n\n242\n00:12:53.280 --> 00:12:56.510\nthat you'd like to have a connection\ngoing, let's go ahead and do this.\n\n243\n00:12:56.510 --> 00:13:00.480\nAnd that could mean, depending on\nthe scan, that the port is open, or\n\n244\n00:13:00.480 --> 00:13:03.740\nit's closed, or it's filtered,\nwhatever the case may be, right?\n\n245\n00:13:03.740 --> 00:13:06.770\nAnd also the RST,\none of our favorites so far, the reset.\n\n246\n00:13:06.770 --> 00:13:10.990\nWe typically look for\nthat a lot as a type of response,\n\n247\n00:13:10.990 --> 00:13:15.360\nwe love that, cuz we know if we're getting\nan RST, at least there's a machine there.\n\n248\n00:13:15.360 --> 00:13:17.830\nIt's alive, it's working,\nthere's our host discovery.\n\n249\n00:13:17.830 --> 00:13:20.020\nAnd then depending on the scan,\nif we get an RST,\n\n250\n00:13:20.020 --> 00:13:24.470\nthe port's gonna be open or closed, maybe\nfiltered, again, depending on the scan.\n\n251\n00:13:24.470 --> 00:13:25.480\nBut I've got a few more, right?\n\n252\n00:13:25.480 --> 00:13:27.880\nWe've got URG, PSH, and FIN.\n\n253\n00:13:27.880 --> 00:13:28.570\nSo let's go over those.\n\n254\n00:13:28.570 --> 00:13:33.305\nLet's understand what those guys\nare really, really quickly.\n\n255\n00:13:33.305 --> 00:13:36.080\nURG prioritizes data in a segment.\n\n256\n00:13:37.100 --> 00:13:38.270\nSo okay, it prioritizes it.\n\n257\n00:13:38.270 --> 00:13:42.030\nIt means that I'm telling the target.\n\n258\n00:13:42.030 --> 00:13:46.120\nl am telling my computer to tell the\ntarget computer this is urgent information\n\n259\n00:13:46.120 --> 00:13:47.770\nthat needs to be prioritized.\n\n260\n00:13:47.770 --> 00:13:51.260\nThat needs to go ahead of other\ndata that you already have.\n\n261\n00:13:51.260 --> 00:13:54.100\nIn the queue right so\nthat's what it's going to do.\n\n262\n00:13:54.100 --> 00:13:56.280\nIt's gonna push that off\nto the targeting computer.\n\n263\n00:13:56.280 --> 00:14:01.440\nWhether that be an attack or\njust regular data that is very important.\n\n264\n00:14:01.440 --> 00:14:05.640\nThe software that you're using\ntypically sets these flags for you.\n\n265\n00:14:05.640 --> 00:14:08.200\nObviously we're not in there going, okay,\nI need this flag, this flag, this flag.\n\n266\n00:14:08.200 --> 00:14:10.870\nBut with that map, we can do that,\n\n267\n00:14:10.870 --> 00:14:14.945\nusing the scan flags argument\nthat we have, right.\n\n268\n00:14:14.945 --> 00:14:19.120\nPSH says makes TCP and\nreceiving host push data immediately.\n\n269\n00:14:19.120 --> 00:14:23.190\nYou're probably thinking, well how's\nthat any different than the urgent?\n\n270\n00:14:23.190 --> 00:14:24.280\nThat's a good question.\n\n271\n00:14:24.280 --> 00:14:29.000\nHow's that any different than the urgent\nis that this is typically used for\n\n272\n00:14:29.000 --> 00:14:31.040\nwhen I need it to.\n\n273\n00:14:31.040 --> 00:14:32.740\nIf I'm typing in a terminal and\n\n274\n00:14:32.740 --> 00:14:37.900\nI need it to show up on a remote host,\nit needs to use the PSH flag to do that.\n\n275\n00:14:37.900 --> 00:14:41.020\nOtherwise, I have to type it in and\nget enough for a TCP segment and\n\n276\n00:14:41.020 --> 00:14:42.460\nthen have it send it.\n\n277\n00:14:42.460 --> 00:14:45.220\nThat would take a lot of typing, and\nthat would not be a lot of fun to do.\n\n278\n00:14:45.220 --> 00:14:46.850\nSo I need to be able to press a, and\n\n279\n00:14:46.850 --> 00:14:49.510\nhave it show up as a at\nthe terminal on the other end.\n\n280\n00:14:49.510 --> 00:14:51.730\nPush flags do that for us, right?\n\n281\n00:14:51.730 --> 00:14:55.210\nSo it flags all that data as\nI'm typing it as pushed, and\n\n282\n00:14:55.210 --> 00:14:57.020\nas soon as I type something it pushes it.\n\n283\n00:14:57.020 --> 00:15:02.060\nIt's sending that data in live, or in\nreal-time Pushing it to the other side so\n\n284\n00:15:02.060 --> 00:15:04.070\nthat immediately arrives there so\n\n285\n00:15:04.070 --> 00:15:06.220\nit can be worked with by the end user or\nyourself.\n\n286\n00:15:07.350 --> 00:15:10.180\nAnd then the FIN closes connections.\n\n287\n00:15:10.180 --> 00:15:14.200\nThis basically is saying, I'm finished,\nwe're done, have a nice day.\n\n288\n00:15:14.200 --> 00:15:15.291\nThanks for the connection.\n\n289\n00:15:15.291 --> 00:15:15.820\nOff we go.\n\n290\n00:15:15.820 --> 00:15:18.300\nSo that is then run down in a ball.\n\n291\n00:15:18.300 --> 00:15:20.880\nVery, very simple,\nshouldn't be anything too complex.\n\n292\n00:15:20.880 --> 00:15:24.070\nAnd actually probably makes a little\nbit more sense of your network as you\n\n293\n00:15:24.070 --> 00:15:24.960\ngo through it.\n\n294\n00:15:24.960 --> 00:15:29.740\n>> Dan, great explanation on\nthe individual usage of the flags and\n\n295\n00:15:29.740 --> 00:15:30.310\nwhat they do.\n\n296\n00:15:30.310 --> 00:15:33.310\nNow I've got more of a generic\nquestion for you, collectively.\n\n297\n00:15:33.310 --> 00:15:37.930\nWhat would be the benefit of either\nadding one of these flags or\n\n298\n00:15:37.930 --> 00:15:40.950\nmaybe not using one of these flags\nwhen it comes to my skins in general.\n\n299\n00:15:40.950 --> 00:15:42.360\nWhat benefit do I get from them.\n\n300\n00:15:42.360 --> 00:15:46.330\n>> Yeah and that's the perfect\nquestion to ask for this actually.\n\n301\n00:15:46.330 --> 00:15:52.345\nAnd the reason is because modern firewalls\nunderstand that when you do a SYN scan,\n\n302\n00:15:52.345 --> 00:15:57.420\nmodern firewalls understand that\nSYN scans are extremely popular.\n\n303\n00:15:57.420 --> 00:15:59.880\nAnd because they're extremely popular,\nwhat are they gonna do?\n\n304\n00:15:59.880 --> 00:16:01.374\nThey're gonna firewall it out.\n\n305\n00:16:01.374 --> 00:16:04.384\nThey don't want you to be able to\nillicit those types of responses.\n\n306\n00:16:04.384 --> 00:16:07.492\nI want to hide from you, you bad,\nbad man, or bad, bad woman,\n\n307\n00:16:07.492 --> 00:16:09.043\nwhatever the case Case may be.\n\n308\n00:16:09.043 --> 00:16:11.166\nStop doing this, okay.\n\n309\n00:16:11.166 --> 00:16:13.340\nSo, what do we do?\n\n310\n00:16:13.340 --> 00:16:18.408\nIf they're blocking syn, I guess I would\nhave to use another type of scan, right?\n\n311\n00:16:18.408 --> 00:16:21.143\nI could use SCTP scan maybe or\nmaybe UDP scan, but\n\n312\n00:16:21.143 --> 00:16:24.420\nthey're all gonna have their strengths and\nweaknesses.\n\n313\n00:16:26.130 --> 00:16:30.740\nIt's a good point to bring up right here\nis that not every scan is perfect for\n\n314\n00:16:30.740 --> 00:16:34.040\nevery, there is no one fits all, right?\n\n315\n00:16:34.040 --> 00:16:38.330\nI think it was Adam used to say,\none fits one, right?\n\n316\n00:16:38.330 --> 00:16:41.740\nYou have this system, and you might\nthrow every scan in the book at it,\n\n317\n00:16:41.740 --> 00:16:46.730\nyou might throw very specific scans at it,\nit's gonna be for what you're doing in\n\n318\n00:16:46.730 --> 00:16:51.502\nthat specific reason, so there might be,\nI wanna check my firewalls, right?\n\n319\n00:16:51.502 --> 00:16:53.755\nI wanna see if I can get around them, and\n\n320\n00:16:53.755 --> 00:16:56.967\nthat's why scan flags can help\nbecause they can help get\n\n321\n00:16:56.967 --> 00:17:01.360\naround a firewalled out system that's\nlooking for things likes a syn scan.\n\n322\n00:17:01.360 --> 00:17:03.980\nSo let's take a look at what that\nactually looks like, all right?\n\n323\n00:17:03.980 --> 00:17:05.020\nLet's jump back to my computer.\n\n324\n00:17:05.020 --> 00:17:07.739\nLet me bring my terminal up here.\n\n325\n00:17:07.739 --> 00:17:14.170\nLet's see here, first thing we need to\ndo is we need to firewall syn scans.\n\n326\n00:17:14.170 --> 00:17:15.362\nThat's what we need to do, right?\n\n327\n00:17:15.362 --> 00:17:20.355\nSo I do know that this middle exploitable\nmachine right here is running all\n\n328\n00:17:20.355 --> 00:17:22.540\nsorts of great services for us.\n\n329\n00:17:22.540 --> 00:17:26.535\nIt's the whole purpose that I used this\ncuz it's easily like looked at and\n\n330\n00:17:26.535 --> 00:17:28.260\ngives us a response.\n\n331\n00:17:28.260 --> 00:17:32.558\nSo if I wanna firewall syn scans,\n\n332\n00:17:32.558 --> 00:17:37.316\nI would do sudo iptables -a inputs,\n\n333\n00:17:37.316 --> 00:17:42.238\ngoing into the input chain, -p tcp.\n\n334\n00:17:42.238 --> 00:17:46.989\nAnd I'll say --dport, and\nwe'll say we'll firewall off,\n\n335\n00:17:46.989 --> 00:17:50.134\nhow about telnet, right, so port 23.\n\n336\n00:17:50.134 --> 00:17:54.726\nIf I do --syn like that,\nthat's telling the firewall that if you\n\n337\n00:17:54.726 --> 00:17:59.318\nreceive a packet with just the syn\nflag and all the others cleared,\n\n338\n00:17:59.318 --> 00:18:04.156\nthat's a tell tale sign that someone's\ntrying to scam this network,\n\n339\n00:18:04.156 --> 00:18:07.830\nright, there's not really a connection.\n\n340\n00:18:07.830 --> 00:18:12.100\nThere's no data, there's nothing,\nit's just a packet with a syn flag.\n\n341\n00:18:12.100 --> 00:18:13.580\nTell tale sign,\nthose things are happening.\n\n342\n00:18:13.580 --> 00:18:17.740\nSo I can do this --syn option, and\nobviously, whatever firewall you're using,\n\n343\n00:18:17.740 --> 00:18:19.060\nyou'd have to check their documentation.\n\n344\n00:18:19.060 --> 00:18:20.935\nI just happen to know\nthat iptables does this,\n\n345\n00:18:20.935 --> 00:18:24.428\ncuz I work with iptables, so\nthat's what I'm gonna show you [LAUGH].\n\n346\n00:18:24.428 --> 00:18:27.300\nSo, there you go, I put in that,\nnow I know that if it sees that,\n\n347\n00:18:27.300 --> 00:18:28.290\nto drop those packets.\n\n348\n00:18:28.290 --> 00:18:29.357\nAnd how do I know to drop the packets?\n\n349\n00:18:29.357 --> 00:18:33.568\nCuz I say -j, and actually,\n\n350\n00:18:33.568 --> 00:18:37.443\nI'm gonna say reject, and\n\n351\n00:18:37.443 --> 00:18:44.197\nI'm gonna say --reject-with tcp-reset.\n\n352\n00:18:44.197 --> 00:18:45.900\nI believe that's the correct,\ndid I write that down?\n\n353\n00:18:45.900 --> 00:18:47.450\nYeah, DC should be reset.\n\n354\n00:18:47.450 --> 00:18:48.060\nThere we go.\n\n355\n00:18:48.060 --> 00:18:52.880\nSo if I do that, it's just gonna ask me\nfor my password, nsfadmin, there we go.\n\n356\n00:18:52.880 --> 00:18:57.840\nAnd now, if I do a scan,\nI know that telnet is open on a system,\n\n357\n00:18:57.840 --> 00:18:59.220\ncuz I'm the administrator.\n\n358\n00:18:59.220 --> 00:19:01.710\nWhite hat is on fully, right?\n\n359\n00:19:01.710 --> 00:19:02.660\nI have firewalled it.\n\n360\n00:19:02.660 --> 00:19:07.188\nNow if I do it in a map scan, a regular\nsyn scan, I shouldn't see port 23 is open.\n\n361\n00:19:07.188 --> 00:19:08.040\nSo let's see here.\n\n362\n00:19:08.040 --> 00:19:11.438\nLet's do sudo nmap -.\n\n363\n00:19:11.438 --> 00:19:15.088\nActually, I don't even have to do SSH,\ncuz remember, that's the default for\n\n364\n00:19:15.088 --> 00:19:16.420\nnmap as a syn scan.\n\n365\n00:19:16.420 --> 00:19:19.820\nSo I'll just say -n, so\nit doesn't do any DNS look up.\n\n366\n00:19:19.820 --> 00:19:23.780\nAnd I'll do -v for verbosity.\n\n367\n00:19:23.780 --> 00:19:27.380\nAnd just give it the target here, so\n\n368\n00:19:27.380 --> 00:19:32.543\n192.168., although I will do send-ip.\n\n369\n00:19:32.543 --> 00:19:36.883\nThat way, it doesn't do any weird\nmalfeasance cuz I'm on the same network.\n\n370\n00:19:36.883 --> 00:19:41.434\nLet's see here, and then 192.168.219.135.\n\n371\n00:19:41.434 --> 00:19:42.059\nThere we go.\n\n372\n00:19:42.059 --> 00:19:43.036\nLet's see what happens.\n\n373\n00:19:46.405 --> 00:19:49.468\nGoing through,\nwe got a lot of verbosity there,\n\n374\n00:19:49.468 --> 00:19:53.340\nyou'll notice port 23 is\nnot showing up in our scan.\n\n375\n00:19:53.340 --> 00:19:56.640\nOur firewall rules working beautifully.\n\n376\n00:19:56.640 --> 00:20:00.620\nAny regular script key out there that's\nlike, yeah, I got nmap installed.\n\n377\n00:20:00.620 --> 00:20:03.670\nI'm gonna scan this machine and find out\neverything there is to know about it.\n\n378\n00:20:03.670 --> 00:20:05.805\nThey're not gonna see that port 23's open.\n\n379\n00:20:05.805 --> 00:20:09.861\nSo for those type of hackers or\nblack hats that're out there,\n\n380\n00:20:09.861 --> 00:20:14.775\nthey might say, well, that's my one\ntrick pony is I know how to bust open or\n\n381\n00:20:14.775 --> 00:20:18.140\nget through telnet and brute force it.\n\n382\n00:20:18.140 --> 00:20:20.940\nAnd it's not open, so I'm not even\ngonna bother with this machine, right?\n\n383\n00:20:20.940 --> 00:20:22.840\nThat might have been the only port open,\n\n384\n00:20:22.840 --> 00:20:24.440\nand that's not even gonna\nshow up at that point.\n\n385\n00:20:24.440 --> 00:20:25.825\nIt would be no ports open, right?\n\n386\n00:20:25.825 --> 00:20:27.830\nSo, firewall working great.\n\n387\n00:20:29.050 --> 00:20:32.520\nAnd then we bring in our scan flags.\n\n388\n00:20:32.520 --> 00:20:37.500\nThe cool thing about scan flags\nis we can set any one of those\n\n389\n00:20:37.500 --> 00:20:42.260\ndifferent types of flags that we have,\nright, using scan flags.\n\n390\n00:20:42.260 --> 00:20:43.130\nSo how do we do that?\n\n391\n00:20:43.130 --> 00:20:45.290\nSo let me bring this back up here.\n\n392\n00:20:45.290 --> 00:20:46.790\nYeah, there we go.\n\n393\n00:20:46.790 --> 00:20:52.265\nAnd what I will do is I'll say --,\nif we can actually\n\n394\n00:20:52.265 --> 00:20:56.650\ngonna be covering this, there we go,\nfull screen, that'll ought to work for us.\n\n395\n00:20:56.650 --> 00:21:01.873\nIf I do --, see where my cursor is,\n--scanflags,\n\n396\n00:21:01.873 --> 00:21:04.628\nlike so, right?\n\n397\n00:21:04.628 --> 00:21:09.080\nAnd then I say what flags I want.\n\n398\n00:21:09.080 --> 00:21:11.880\nDo I want urge, fin, push, blah,\nblah, blah, whatever the case may be.\n\n399\n00:21:11.880 --> 00:21:16.760\nLet's use FIN, all right, just for\nthose intents and purposes.\n\n400\n00:21:16.760 --> 00:21:21.180\nSo, I set my FIN, I rock and\nroll, firing off, there we go.\n\n401\n00:21:21.180 --> 00:21:22.798\nWe're all done.\n\n402\n00:21:22.798 --> 00:21:23.546\nLook.\n\n403\n00:21:23.546 --> 00:21:30.130\nPort 23 is now showing up as filtered,\nthat's interesting, right?\n\n404\n00:21:30.130 --> 00:21:33.933\nNow what's also really interesting\nis the fact that it says filtered.\n\n405\n00:21:33.933 --> 00:21:38.552\nAll right, so we got to use the scan\nflags option to bypass the firewall to\n\n406\n00:21:38.552 --> 00:21:43.551\nactually show this port, which is showing\nup with a bunch of other ports that we\n\n407\n00:21:43.551 --> 00:21:46.610\nknow are open cuz of our previous scan.\n\n408\n00:21:46.610 --> 00:21:50.160\nSo we could probably deduce that\nthis port is also open, but\n\n409\n00:21:50.160 --> 00:21:55.430\njust wasn't showing up in\nthe traditional syn scan, so very cool.\n\n410\n00:21:55.430 --> 00:21:59.268\nThe other neat thing about it\nis that we're basically saying,\n\n411\n00:21:59.268 --> 00:22:07.050\nuse the syn scan as a basis for\nresulting, right, our results.\n\n412\n00:22:07.050 --> 00:22:09.720\nSo that's why we see filtered,\nremember with the syn scan, it's open,\n\n413\n00:22:09.720 --> 00:22:11.130\nclosed, or filtered.\n\n414\n00:22:11.130 --> 00:22:14.827\nIf we're using another type of\nscan as the base, like UDP scan or\n\n415\n00:22:14.827 --> 00:22:17.908\nan actual thin scan,\nwhich we're about to get into,\n\n416\n00:22:17.908 --> 00:22:22.170\nI can probably show you that now,\nlet's do that really quickly.\n\n417\n00:22:22.170 --> 00:22:25.519\nSo if I use, I'm gonna jump way back here,\n\n418\n00:22:25.519 --> 00:22:29.536\neven though I could have\nprobably put it anywhere.\n\n419\n00:22:29.536 --> 00:22:33.956\nI'll do sF,\nwhich is a canned scan flag, so\n\n420\n00:22:33.956 --> 00:22:40.930\nbasically adding this whole region\nright here just by adding this.\n\n421\n00:22:40.930 --> 00:22:43.230\nSo now I can actually take this out.\n\n422\n00:22:44.260 --> 00:22:45.930\nI don't need that anymore.\n\n423\n00:22:45.930 --> 00:22:47.710\nAnd it has a couple other\nthings that it does.\n\n424\n00:22:47.710 --> 00:22:49.263\nWe'll get into that in just a second here.\n\n425\n00:22:49.263 --> 00:22:50.760\nI think that's good.\n\n426\n00:22:50.760 --> 00:22:55.130\nSo now I do sF,\nI'm doing a thin scan, okay?\n\n427\n00:22:55.130 --> 00:22:57.940\nLet's do that,\nlet's see what happens here.\n\n428\n00:22:57.940 --> 00:23:00.367\nHere we go.\nYou notice that the results have changed\n\n429\n00:23:00.367 --> 00:23:02.160\nto open filtered.\n\n430\n00:23:02.160 --> 00:23:05.530\nAnd that's because of the type\nof scan a FIN scan is,\n\n431\n00:23:05.530 --> 00:23:09.450\nthat they way nmap has set it up as\na canned type of scan, all right?\n\n432\n00:23:09.450 --> 00:23:12.362\nSo, depending on what you use as a base,\n\n433\n00:23:12.362 --> 00:23:16.110\nit's gonna influence the results,\njust keep that in mind.\n\n434\n00:23:16.110 --> 00:23:19.240\nBecause that can be helpful for\nyou as you do some scanning.\n\n435\n00:23:20.650 --> 00:23:25.630\nAnd here we see that it is\nshowing up as open/filtered,\n\n436\n00:23:25.630 --> 00:23:29.410\neven though with our traditional syn scan,\nwe got nothing out of it.\n\n437\n00:23:29.410 --> 00:23:30.790\n>> What happens if I get a little lazy,\n\n438\n00:23:30.790 --> 00:23:33.830\nDan, and I decide I don’t wanna use any\noptions, what are we gonna see then?\n\n439\n00:23:33.830 --> 00:23:34.930\n>> Yeah, great question, right?\n\n440\n00:23:34.930 --> 00:23:37.050\nWhat if I don’t put any kind of options?\n\n441\n00:23:37.050 --> 00:23:40.990\nWell, it goes to its default, right,\nwhat’s the default scan for nmap?\n\n442\n00:23:40.990 --> 00:23:43.737\nThat is the syn scan, so\nif you forget and you're like,\n\n443\n00:23:43.737 --> 00:23:45.262\nwhy am I seeing open filtered?\n\n444\n00:23:45.262 --> 00:23:46.970\nThat's not what I was looking for.\n\n445\n00:23:46.970 --> 00:23:48.380\nI want it to say open,\nclosed, or filtered.\n\n446\n00:23:49.480 --> 00:23:53.236\nOr I'm looking for open filtered, and it's\ntelling me it's either open, closed, or\n\n447\n00:23:53.236 --> 00:23:53.785\nfiltered.\n\n448\n00:23:53.785 --> 00:23:57.957\nI'm just getting filtered,\nthen I must have forgotten the base scan.\n\n449\n00:23:57.957 --> 00:24:01.192\nI need to figure out what base\nis gonna be best for me here.\n\n450\n00:24:01.192 --> 00:24:06.015\nSo another real quick and\ndirty thing I want you guys to see about\n\n451\n00:24:06.015 --> 00:24:09.291\nusing the scan flags\noption is if I want to.\n\n452\n00:24:09.291 --> 00:24:11.950\nLet me go back over here real quickly.\n\n453\n00:24:11.950 --> 00:24:14.280\nIf I want to use it still.\n\n454\n00:24:14.280 --> 00:24:17.580\nSo if I wanna use sf as\nmy base type of scan,\n\n455\n00:24:17.580 --> 00:24:22.930\nI can still do scan flags and\nsay, like, urge.\n\n456\n00:24:22.930 --> 00:24:23.430\nOops.\n\n457\n00:24:24.925 --> 00:24:30.385\nURGPSHFIN, I can do that, like that,\njust string them all together, no spaces.\n\n458\n00:24:30.385 --> 00:24:33.450\nPut the flags that you want,\nand play around with it.\n\n459\n00:24:33.450 --> 00:24:36.810\nYou never know what\nyou'll get as a response\n\n460\n00:24:36.810 --> 00:24:39.770\njust playing around with setting\nflags on your TCP packets.\n\n461\n00:24:39.770 --> 00:24:42.840\nIt's a lot of fun,\ncome up with a really cool scan and\n\n462\n00:24:42.840 --> 00:24:48.400\nsome scans have come out of that type of\nmentality, so use that type of mentality,\n\n463\n00:24:48.400 --> 00:24:53.500\nelicit cool responses, you never know\nwhat might get around what right?\n\n464\n00:24:53.500 --> 00:24:56.260\nWhat you might see so,\ndefinitely use it that way.\n\n465\n00:24:56.260 --> 00:24:56.900\nLet's see here.\n\n466\n00:24:58.200 --> 00:25:01.106\nWhat else do I want to\nshow you guys about that?\n\n467\n00:25:01.106 --> 00:25:04.960\nThink that's the basics\nof scan flags itself.\n\n468\n00:25:04.960 --> 00:25:12.630\nYou just --scanflags and then what flags\nyou want to set in the TCP packet itself.\n\n469\n00:25:12.630 --> 00:25:15.210\nAnd play around with it, that's that.\n\n470\n00:25:15.210 --> 00:25:22.510\nAll right, so let's move onto the can flag\nscams that we have available all right?\n\n471\n00:25:22.510 --> 00:25:27.850\nAnd we've already talked about\nobviously the SIN, the UDP which is not\n\n472\n00:25:27.850 --> 00:25:32.980\na scam flag I guess,\nit's a protocol but you've seen the SF.\n\n473\n00:25:32.980 --> 00:25:33.680\nVery cool right?\n\n474\n00:25:33.680 --> 00:25:36.420\nThat's a FIN scan, what does that mean?\n\n475\n00:25:36.420 --> 00:25:42.340\nBasically I'm setting the FIN flag,\na finish flag on the packet itself.\n\n476\n00:25:42.340 --> 00:25:45.770\nWe also have NULL scan, N-U-L-L, NULL.\n\n477\n00:25:45.770 --> 00:25:52.400\nWhich is S capital N and as in November,\nNULL, which sets no flags.\n\n478\n00:25:52.400 --> 00:25:56.420\nWe also have a Christmas scan, and the\ncall it a Christmas scan because it lights\n\n479\n00:25:56.420 --> 00:25:59.170\nup the packet like said Christmas tree.\n\n480\n00:25:59.170 --> 00:26:00.320\nAnd what does that mean?\n\n481\n00:26:00.320 --> 00:26:04.480\nBasically, it means that it setting the,\nif I'm correct, the push or defend.\n\n482\n00:26:04.480 --> 00:26:07.070\nI think so let me see here, yes!\n\n483\n00:26:07.070 --> 00:26:11.720\nPush urge and thin flags are being set\n\n484\n00:26:11.720 --> 00:26:15.840\nin the TCP packet so when it goes it's\njust lit up like a Christmas tree.\n\n485\n00:26:15.840 --> 00:26:22.125\nThat was somebody's idea of wordplay and\nfun, and it just kinda stuck to it and so\n\n486\n00:26:22.125 --> 00:26:27.515\nwe still have it to today,\nthat is a s-sx all right?\n\n487\n00:26:27.515 --> 00:26:30.115\nNow first thing I want you guys\nto know about that is that they\n\n488\n00:26:30.115 --> 00:26:33.225\nall really basically\nwork the same way okay?\n\n489\n00:26:34.335 --> 00:26:40.000\nCuz what they're doing is they're\ntaking advantage of a weird\n\n490\n00:26:40.000 --> 00:26:43.640\nway in which TCP works, okay?\n\n491\n00:26:43.640 --> 00:26:49.430\nAnd basically it says that if you send\na packet that doesn't have a SYN,\n\n492\n00:26:49.430 --> 00:26:53.570\nan ACK, or an RST set, right?\n\n493\n00:26:53.570 --> 00:26:59.050\nIf it doesn't have one of those set,\nthen send an RST in response, right?\n\n494\n00:26:59.050 --> 00:27:02.470\nIf I'm remembering correctly\nthat's exactly how it goes, right?\n\n495\n00:27:02.470 --> 00:27:07.750\nSo if this condition is true\nthen the port is closed,\n\n496\n00:27:07.750 --> 00:27:10.540\nif I send something that\ndoesn't have a send,\n\n497\n00:27:10.540 --> 00:27:14.020\ndoesn't have an act,\ndoesn't have an RST in it.\n\n498\n00:27:14.020 --> 00:27:17.770\nObviously RST's reset the connection so\nwhat good is that gonna do you right?\n\n499\n00:27:17.770 --> 00:27:21.510\nIf it doesn't have one of those three\navailable then the port that it goes to\n\n500\n00:27:21.510 --> 00:27:26.390\nshould respond with an RST\nsaying I'm closed man,\n\n501\n00:27:26.390 --> 00:27:27.820\nI don't even know what's going on here.\n\n502\n00:27:29.150 --> 00:27:29.950\nNow, you're thinking, okay,\n\n503\n00:27:29.950 --> 00:27:33.580\nthat's strange it's a little backwards\nfrom what we've been looking at.\n\n504\n00:27:33.580 --> 00:27:36.040\nWhat happens if the port is open, right?\n\n505\n00:27:36.040 --> 00:27:41.092\nWell if the port if open, it won't\nrespond at all because it's not a SYN,\n\n506\n00:27:41.092 --> 00:27:44.122\nit's not an ACK, it's not an RST, right.\n\n507\n00:27:44.122 --> 00:27:44.930\nSo it's just not gonna respond.\n\n508\n00:27:44.930 --> 00:27:49.330\nIt's gonna say, yeah, I'm an open port but\nnone of those actually do anything for\n\n509\n00:27:49.330 --> 00:27:53.480\nme, so there you go, I just won't respond.\n\n510\n00:27:53.480 --> 00:27:55.990\nSee, the closed ports are responding\nbecause they think you are trying to do\n\n511\n00:27:55.990 --> 00:28:00.390\nsomething and they let you know,\nhey buddy I'm not open for business.\n\n512\n00:28:00.390 --> 00:28:01.360\nWe're closed right now.\n\n513\n00:28:01.360 --> 00:28:04.180\nI got nothing going on.\n\n514\n00:28:04.180 --> 00:28:06.140\nThere you go.\nSo it sends that RST.\n\n515\n00:28:06.140 --> 00:28:12.700\nAn open port, though, open port says well\nthat's not for me, and I need to remain\n\n516\n00:28:12.700 --> 00:28:18.620\nthe way I am it's just the way that it\nwas created, like I said it's a little\n\n517\n00:28:18.620 --> 00:28:22.880\nweird way in which it acts is\nit just doesn't do anything.\n\n518\n00:28:24.410 --> 00:28:26.420\nSo what happens if the port\nis being filtered?\n\n519\n00:28:27.510 --> 00:28:31.020\nWell, typically,\nwhat happens with filtered ports?\n\n520\n00:28:31.020 --> 00:28:35.570\nThey drop TCP packets that come their\nway and that they're filtering, right?\n\n521\n00:28:35.570 --> 00:28:37.540\nSo it won't respond.\n\n522\n00:28:37.540 --> 00:28:43.470\nSo in lies one of the major issues with\nusing one of these types of scans,\n\n523\n00:28:43.470 --> 00:28:44.900\nis it's hard to tell whether or\n\n524\n00:28:44.900 --> 00:28:48.890\nnot the portal is open or filtered\nbecause they both respond the same way.\n\n525\n00:28:48.890 --> 00:28:50.630\nDoes that mean it's a useless scan?\n\n526\n00:28:50.630 --> 00:28:54.610\nNo not at all, like we've seen already,\n\n527\n00:28:54.610 --> 00:28:59.157\nit can at least let you know\nif there is a fire rule\n\n528\n00:28:59.157 --> 00:29:03.620\nmaybe that's hiding from\na regular sin scan.\n\n529\n00:29:03.620 --> 00:29:05.050\nSo that's something we missed.\n\n530\n00:29:05.050 --> 00:29:07.260\nSo you can still find use for\nthese things.\n\n531\n00:29:07.260 --> 00:29:10.110\nSo let's take a look at how\nthey're actually used and\n\n532\n00:29:10.110 --> 00:29:11.900\njust kind of run through\nthem really quickly.\n\n533\n00:29:11.900 --> 00:29:13.340\nSo that you can see them in action.\n\n534\n00:29:13.340 --> 00:29:17.780\nSo let's jump back to my screen and\nI'm gonna leave this exact same scan up\n\n535\n00:29:17.780 --> 00:29:20.420\nbecause we've already seen sF,\nwe've seen what it does.\n\n536\n00:29:20.420 --> 00:29:26.750\nI'm gonna take the scan flags out\nof there, and then, just try an sN.\n\n537\n00:29:26.750 --> 00:29:29.820\nPut in my password here.\n\n538\n00:29:31.660 --> 00:29:32.200\nThere we go.\n\n539\n00:29:34.510 --> 00:29:38.440\nAnd, you'll notice,\nyou get an open filter, right?\n\n540\n00:29:38.440 --> 00:29:39.050\nSame kind of thing.\n\n541\n00:29:39.050 --> 00:29:40.590\nIt's still responding in the same way.\n\n542\n00:29:40.590 --> 00:29:42.170\nThat's why I say, play around with them.\n\n543\n00:29:42.170 --> 00:29:42.820\nThese are canned.\n\n544\n00:29:42.820 --> 00:29:44.780\nThese are the ones that\nare the most popular.\n\n545\n00:29:44.780 --> 00:29:47.280\nSo you just add them to the software and\nsay okay.\n\n546\n00:29:47.280 --> 00:29:49.000\nInstead of having to just\nscan flags everything,\n\n547\n00:29:49.000 --> 00:29:50.960\nmaybe you want to use one\nof most popular ones.\n\n548\n00:29:50.960 --> 00:29:53.730\nYou get null, thin and Christmas.\n\n549\n00:29:53.730 --> 00:29:58.170\nAnd one thing I did want to show\nyou guys is exactly how this looks\n\n550\n00:29:58.170 --> 00:29:59.370\nas it crosses a network.\n\n551\n00:29:59.370 --> 00:30:01.890\nSo let's fire up Wireshark right.\n\n552\n00:30:03.210 --> 00:30:05.010\nLet's do a Wireshark.\n\n553\n00:30:05.010 --> 00:30:07.960\nI know I'm pushing time here,\nthis should take just a few seconds here.\n\n554\n00:30:07.960 --> 00:30:11.470\nLet's open up the network and\n\n555\n00:30:11.470 --> 00:30:13.910\nwe will start the capture\nwhich we're already going.\n\n556\n00:30:13.910 --> 00:30:21.340\nTerminal, let's actually give it an IP\nrange to keep data down to a minimum.\n\n557\n00:30:21.340 --> 00:30:24.561\nDash p, I'll just go here, here we go.\n\n558\n00:30:24.561 --> 00:30:29.230\nDash p and we'll say 20 through 25.\n\n559\n00:30:29.230 --> 00:30:33.360\nThere we go, scanning ports, I see\nthat guy's back there doing something.\n\n560\n00:30:33.360 --> 00:30:34.760\nThat's not the right thing.\n\n561\n00:30:34.760 --> 00:30:37.270\nThere we go.\nI'll go ahead and stop the capture.\n\n562\n00:30:37.270 --> 00:30:40.990\nNow we should have very minimum\ndata with which to work with.\n\n563\n00:30:40.990 --> 00:30:42.970\nSo this is what we're looking for.\n\n564\n00:30:42.970 --> 00:30:45.020\nLet's change the source.\n\n565\n00:30:45.020 --> 00:30:51.728\nSo here's my computer,\n219.1, talking to .135 and\n\n566\n00:30:51.728 --> 00:30:57.810\nit's sending a TCP over here,\nand you'll notice none.\n\n567\n00:30:57.810 --> 00:30:58.812\nIt doesn't say anything.\n\n568\n00:30:58.812 --> 00:31:00.860\nThere's nothing there, right?\n\n569\n00:31:00.860 --> 00:31:04.790\nTypically, you'll see something like this,\nRST or ACK, what type of flag.\n\n570\n00:31:04.790 --> 00:31:06.700\nSo that must have been my null scan.\n\n571\n00:31:06.700 --> 00:31:12.930\nSo if we look back,\nthe one which we used was the sN option.\n\n572\n00:31:12.930 --> 00:31:15.380\nNo flags have been set, right?\n\n573\n00:31:15.380 --> 00:31:16.950\nSo, what happens?\n\n574\n00:31:16.950 --> 00:31:18.790\nWhat response does it elicit?\n\n575\n00:31:20.210 --> 00:31:23.040\nI can take a look at some responses here.\n\n576\n00:31:23.040 --> 00:31:27.664\nIt responded with an RST for\nport 24 and port 20.\n\n577\n00:31:27.664 --> 00:31:30.800\nWhat do we remember about\nthe way these work?\n\n578\n00:31:30.800 --> 00:31:34.410\nIf you get an RST the port is closed,\nright.\n\n579\n00:31:34.410 --> 00:31:39.180\nSo if we look back at our actual\nnmap scan, what does it tell me?\n\n580\n00:31:39.180 --> 00:31:40.640\nPort 20 closed.\n\n581\n00:31:40.640 --> 00:31:42.644\nPort 24 closed.\n\n582\n00:31:42.644 --> 00:31:44.800\nEverything is working just right.\n\n583\n00:31:44.800 --> 00:31:47.030\nLet's look at a Christmas scan,\nreally quickly again just so\n\n584\n00:31:47.030 --> 00:31:48.790\nwe can see some more coolness.\n\n585\n00:31:48.790 --> 00:31:49.370\nWhoops.\n\n586\n00:31:50.800 --> 00:31:54.454\nStart a new.\n\n587\n00:31:54.454 --> 00:31:56.377\nI'm all over the map with this thing.\n\n588\n00:31:56.377 --> 00:32:01.685\nThere we go, Wireshark back up,\nget that network back going,\n\n589\n00:32:01.685 --> 00:32:06.302\nlet's run a Christmas scan just for\nthe funsies of it.\n\n590\n00:32:06.302 --> 00:32:09.889\nTake a look at that option,\nreally quickly.\n\n591\n00:32:09.889 --> 00:32:10.938\nThere we go.\n\n592\n00:32:10.938 --> 00:32:13.070\nDash SX for Christmas scan.\n\n593\n00:32:14.820 --> 00:32:15.540\nThere we go.\n\n594\n00:32:15.540 --> 00:32:17.940\nSame type of response, but\n\n595\n00:32:17.940 --> 00:32:21.910\nwhen we look at Wireshark,\nyou'll notice thin, push and urge.\n\n596\n00:32:21.910 --> 00:32:24.220\nLet me stop this before it fills up.\n\n597\n00:32:24.220 --> 00:32:27.030\nThin, push and urge, and\nit's sending to Port 22.\n\n598\n00:32:27.030 --> 00:32:31.590\nWe get the responses, the RSTs,\nthe other are not responding at all\n\n599\n00:32:31.590 --> 00:32:36.580\nletting us know the port is open, and\nit bypassed our firewall as well because,\n\n600\n00:32:36.580 --> 00:32:41.570\nlook at this,\nport 23 is showing open filtered,\n\n601\n00:32:41.570 --> 00:32:46.560\neven though we're fire-walling\nthat from a typical sim type scan.\n\n602\n00:32:46.560 --> 00:32:47.290\nNot gonna show up.\n\n603\n00:32:47.290 --> 00:32:49.870\nIf I do a sim scan, if I just sudo mmap.\n\n604\n00:32:51.262 --> 00:32:54.731\nJust so you guys know that I'm\nnot cheating you here, -sS,\n\n605\n00:32:54.731 --> 00:32:57.610\n--send-ip 192.168.219 at 35.\n\n606\n00:32:57.610 --> 00:33:05.283\nYou know it's all good in the hood.\n\n607\n00:33:05.283 --> 00:33:07.735\nLook at that, not showing up.\n\n608\n00:33:07.735 --> 00:33:10.410\nPort 22 straight to 25.\n\n609\n00:33:10.410 --> 00:33:13.250\nSo doing a great job here.\n\n610\n00:33:13.250 --> 00:33:19.240\nWe can use the different types of\nadvantages using the send flags.\n\n611\n00:33:19.240 --> 00:33:23.640\nThat we have, and are available,\nto bypass around routers.\n\n612\n00:33:23.640 --> 00:33:26.840\nNow, if you've got a modern IDS or\nIPS, this isn't going to help you,\n\n613\n00:33:26.840 --> 00:33:28.030\nthey'll detect this type of thing.\n\n614\n00:33:28.030 --> 00:33:29.410\nIt's very common.\n\n615\n00:33:29.410 --> 00:33:31.420\nEven though it's still fast, it's great,\n\n616\n00:33:31.420 --> 00:33:34.060\nit's even more stealthy\nthan a typical SYN scan.\n\n617\n00:33:34.060 --> 00:33:36.490\nObviously it's getting\naround firewalls that way.\n\n618\n00:33:36.490 --> 00:33:42.200\nBut modern IDSs or state firewalls will\nprobably still be able detect this.\n\n619\n00:33:42.200 --> 00:33:43.280\nThat doesn't mean you don't use it.\n\n620\n00:33:43.280 --> 00:33:46.340\nIt just means that you\ngotta be aware of that, and\n\n621\n00:33:46.340 --> 00:33:51.000\nthat it might not avail you of anymore\ninformation than it's suppose to scan.\n\n622\n00:33:51.000 --> 00:33:51.600\nIt's quick.\n\n623\n00:33:51.600 --> 00:33:52.430\nIt's fast.\n\n624\n00:33:52.430 --> 00:33:53.730\nAnd it gets around firewalls.\n\n625\n00:33:53.730 --> 00:33:55.330\nUse it when it's appropriate.\n\n626\n00:33:55.330 --> 00:33:58.430\nAnd play around with it and\nsee what kinda cool responses you can get.\n\n627\n00:33:58.430 --> 00:34:03.210\nBut that, my friends, is part two of\nport scanning wrapped up in a ball.\n\n628\n00:34:03.210 --> 00:34:05.590\nI know it was a lot and\nwe do have more to go through.\n\n629\n00:34:05.590 --> 00:34:08.760\nAs my voice is now getting hoarse,\nsounds very awesome.\n\n630\n00:34:08.760 --> 00:34:12.230\nBut that's it, Wes, and\nwe got part three coming.\n\n631\n00:34:12.230 --> 00:34:14.260\n>> All right, well, you know\nthat's a lot of great information,\n\n632\n00:34:14.260 --> 00:34:16.950\na lot of fun information too, and\nit's good when you know how to dig\n\n633\n00:34:16.950 --> 00:34:19.670\njust a little bit deeper to\nfind those systems out there.\n\n634\n00:34:19.670 --> 00:34:22.060\nLike you said, Dan, we are coming\nto the end of another episode,\n\n635\n00:34:22.060 --> 00:34:24.365\ndo you have anything else you would\nlike to put into this episode?\n\n636\n00:34:24.365 --> 00:34:25.725\nWe're going to save that for the trilogy.\n\n637\n00:34:25.725 --> 00:34:30.775\n>> No no and one last thing I'll\ntell you is that open filter right.\n\n638\n00:34:30.775 --> 00:34:33.895\nIf you combine a regular SIN scan and\n\n639\n00:34:33.895 --> 00:34:38.600\nthen a FIN scan and\nthen maybe another type of scan and\n\n640\n00:34:38.600 --> 00:34:43.090\nyou're seeing filtered,\nopen filtered, open filtered.\n\n641\n00:34:43.090 --> 00:34:46.040\nWell, the one comment is\nthat everything is filtered.\n\n642\n00:34:47.170 --> 00:34:51.170\nIt's probably a good deduction that,\nthat's a filtered port.\n\n643\n00:34:51.170 --> 00:34:53.138\nSo use them in conjunction\nwith each other.\n\n644\n00:34:53.138 --> 00:34:56.920\nJust because you're seeing open filter and\nyou can't tell whether or not it's opened\n\n645\n00:34:56.920 --> 00:35:01.360\nor filtered doesn't mean you can't deduce\nwhether or not something is open filtered.\n\n646\n00:35:01.360 --> 00:35:03.240\nJust keep that in mind\nas you do your scan.\n\n647\n00:35:03.240 --> 00:35:07.630\nWe will have a lot of fun here but we'll\nsave the rest of it for the next part.\n\n648\n00:35:07.630 --> 00:35:08.270\n>> Absolutely.\n\n649\n00:35:08.270 --> 00:35:10.820\nWell, we appreciate you being\nin the studios with us and\n\n650\n00:35:10.820 --> 00:35:12.270\nlook forward to seeing you in our Part 3.\n\n651\n00:35:12.270 --> 00:35:14.590\nAnd we look forward to seeing\nyou guys in that Part 3.\n\n652\n00:35:14.590 --> 00:35:17.030\nSigning out for ITProTV,\nI've been your host, Wes Bryan.\n\n653\n00:35:17.030 --> 00:35:18.020\n>> And I'm Daniel Lowrie.\n\n654\n00:35:18.020 --> 00:35:21.935\n>> And we'll see you next time.\n\n655\n00:35:21.935 --> 00:35:28.060\n[SOUND]\n\n",
          "vimeoId": "170675799"
        },
        {
          "description": "In this episode, Daniel and Mike continue their look at types of port scanning. They explain and demonstrate how to perform an ACK scan to determine if a firewall is stateful or stateless. They also discuss Windows scans, Maimon scans, and an SCTP Cookie scan.",
          "length": "2132",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-2-3-port-scanning-pt3-081216-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-2-3-port-scanning-pt3-081216-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-2-3-port-scanning-pt3-081216-1-sm.jpg",
          "title": "Port Scanning Part 3",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.154 --> 00:00:15.518\nHello, welcome to another\nexciting episode here at ITProTV.\n\n3\n00:00:15.518 --> 00:00:19.080\nI'm your host Mike Rodrick and\ntoday we're doing our Nmap series.\n\n4\n00:00:19.080 --> 00:00:22.240\nSpecifically, in this episode,\nwe're gonna doing port scanning.\n\n5\n00:00:22.240 --> 00:00:25.174\nNow we've already had a couple episodes\nthat are dealing with port scanning and\n\n6\n00:00:25.174 --> 00:00:26.503\nwe've got more types of scan to do.\n\n7\n00:00:26.503 --> 00:00:30.272\nAnd who better to help guide us through\nthe wonderful world of scanning than Mr.\n\n8\n00:00:30.272 --> 00:00:31.066\nDaniel Lowrie.\n\n9\n00:00:31.066 --> 00:00:31.800\nHow are you doing, Dan?\n\n10\n00:00:31.800 --> 00:00:35.375\n>> Mike, I'm doing fantastic,\nI love the Nmap, I love this.\n\n11\n00:00:35.375 --> 00:00:39.170\nAnd you're no slouch yourself, so I'm kind\nof glad to have you here with me today.\n\n12\n00:00:39.170 --> 00:00:42.966\nYes, Mike is correct, we have done\na couple of episodes on port scanning.\n\n13\n00:00:42.966 --> 00:00:45.460\nYou're like wow,\nhow do you go through two episodes and\n\n14\n00:00:45.460 --> 00:00:46.950\nnow you're onto a third\nwith port scanning?\n\n15\n00:00:46.950 --> 00:00:49.914\nWell, there's a lot that this\nlovely little tool can do, and\n\n16\n00:00:49.914 --> 00:00:52.884\nI kinda warned you about that\nback when we started the series.\n\n17\n00:00:52.884 --> 00:00:56.294\nSo hopefully this is no surprise\nthat we're still continuing on port\n\n18\n00:00:56.294 --> 00:00:57.480\nscanning types.\n\n19\n00:00:57.480 --> 00:00:58.950\nBut it is good to know\nbecause there are so\n\n20\n00:00:58.950 --> 00:01:02.425\nmany different ways that\nNmap is helpful to us.\n\n21\n00:01:02.425 --> 00:01:06.032\nIn either disseminating the different\ncomputers that are on our network,\n\n22\n00:01:06.032 --> 00:01:08.510\nor if we're trying to do a good scan, and\n\n23\n00:01:08.510 --> 00:01:11.280\nmaybe a certain scan will work\nbetter over another scan.\n\n24\n00:01:11.280 --> 00:01:15.222\nSo none of these are the way to do it,\nthey're just ways to do it.\n\n25\n00:01:15.222 --> 00:01:18.628\nAnd you use the right application for\nwhatever your environment calls for.\n\n26\n00:01:18.628 --> 00:01:21.868\nSo that's where we're trying to work you\nthrough all these multiple different types\n\n27\n00:01:21.868 --> 00:01:22.457\nof port scans.\n\n28\n00:01:22.457 --> 00:01:25.939\n>> So it really comes down to different\nenvironments, different operating systems\n\n29\n00:01:25.939 --> 00:01:28.673\nrespond differently to different\ntypes of packets we send out.\n\n30\n00:01:28.673 --> 00:01:32.458\nSo all these different scans are basically\nusing a different flag set in the packet,\n\n31\n00:01:32.458 --> 00:01:35.815\nor a different combination of flags to\nhopefully give us the results we're\n\n32\n00:01:35.815 --> 00:01:36.470\nlooking for.\n\n33\n00:01:36.470 --> 00:01:37.570\n>> That is exactly right.\n\n34\n00:01:37.570 --> 00:01:40.010\nIt's the whole purpose of us walking\nyou through each one of them.\n\n35\n00:01:40.010 --> 00:01:42.790\nPlus, we want you to be\nvery well versed and\n\n36\n00:01:42.790 --> 00:01:45.960\nunderstand what is happening\nduring each one of the scans.\n\n37\n00:01:45.960 --> 00:01:47.170\nThat way if something goes wrong,\n\n38\n00:01:47.170 --> 00:01:49.600\nyou get an output that you're not,\nhm, that doesn't look right.\n\n39\n00:01:49.600 --> 00:01:50.940\nWhy is this not working?\n\n40\n00:01:50.940 --> 00:01:54.050\nWell, if you understand how the scan\nworks, you can try to figure out\n\n41\n00:01:54.050 --> 00:01:56.750\nwhy it's not giving you the results\nyou might be looking for.\n\n42\n00:01:56.750 --> 00:01:58.110\nSo that's why I wanna give you a nice,\n\n43\n00:01:58.110 --> 00:02:01.030\ngood, in depth look at\neach one of these scans.\n\n44\n00:02:01.030 --> 00:02:04.440\nThat being said,\nlet's move on to our next type of scan and\n\n45\n00:02:04.440 --> 00:02:05.780\nthis is an interesting scan.\n\n46\n00:02:05.780 --> 00:02:11.200\nIt's not so\nmuch of a port scan as it is a way to\n\n47\n00:02:11.200 --> 00:02:14.900\nelucidate, if I can use that term [LAUGH],\nfirewall rules.\n\n48\n00:02:14.900 --> 00:02:17.412\n>> Only if you define it for\nus after you use it, right?\n\n49\n00:02:17.412 --> 00:02:20.747\n>> [LAUGH] That's right,\nlet's go to dictionary.com real quick and.\n\n50\n00:02:20.747 --> 00:02:24.441\nBasically, it just means that we can know\nand understand what we're looking for\n\n51\n00:02:24.441 --> 00:02:26.830\nspecifically, and that is firewall rules.\n\n52\n00:02:26.830 --> 00:02:29.760\nCuz a lot of times,\nwhat are we doing as admins, right?\n\n53\n00:02:29.760 --> 00:02:32.490\nWe're trying to stop people\nthat are using Nmap for\n\n54\n00:02:32.490 --> 00:02:35.940\nnefarious purposes,\nfrom discerning things on our network.\n\n55\n00:02:35.940 --> 00:02:38.900\nWe don't want them to know\nwhat services we're running.\n\n56\n00:02:38.900 --> 00:02:41.589\nEven if we are,\nwe'll like to hide that if we can or\n\n57\n00:02:41.589 --> 00:02:43.456\njust block them straight from it.\n\n58\n00:02:43.456 --> 00:02:47.270\nAnd firewalls tend to be our\ngo-to form of making that happen.\n\n59\n00:02:47.270 --> 00:02:51.090\nObviously, multiple different types of\nfirewalls are out there, benders and\n\n60\n00:02:51.090 --> 00:02:53.490\nthe ways that they work,\nthe instructions sets, all that.\n\n61\n00:02:53.490 --> 00:02:58.018\nSo you're gonna have to basically work\nwith whatever firewall it is you're\n\n62\n00:02:58.018 --> 00:03:04.040\nimplementing, to know how to make it\nbasically stop these scans from working.\n\n63\n00:03:04.040 --> 00:03:05.970\nAnd sometimes you can,\nsometimes you can't,\n\n64\n00:03:05.970 --> 00:03:09.010\nbut that is what we're gonna\ntry to do today with this scan.\n\n65\n00:03:09.010 --> 00:03:13.034\nThe scan is called the ACK scan,\nthe E-A, the A-E, yeah.\n\n66\n00:03:13.034 --> 00:03:15.530\n>> [LAUGH]\n>> A-C-K, ACK, not ECK, ACK,\n\n67\n00:03:15.530 --> 00:03:17.961\nthat is the scan we're talking about.\n\n68\n00:03:17.961 --> 00:03:23.779\nBecause it uses the ACK flag in the TCP\npacket to basically bypass firewalls and\n\n69\n00:03:23.779 --> 00:03:26.150\nfind out is being filtered.\n\n70\n00:03:26.150 --> 00:03:28.829\nThat being said, using the ACK scan,\n\n71\n00:03:28.829 --> 00:03:32.439\nyou cannot discern what is closed or\nopen, right.\n\n72\n00:03:32.439 --> 00:03:35.340\nIt's not what the scan is for, that's what\nwe have the other types of scans for.\n\n73\n00:03:35.340 --> 00:03:37.610\nAnd other scans that we're gonna see.\n\n74\n00:03:37.610 --> 00:03:42.030\nThis type of scan is specifically for\nmapping out firewall rules.\n\n75\n00:03:42.030 --> 00:03:45.930\nI think that is the verbiage used\ninside of the documentation when you do\n\n76\n00:03:45.930 --> 00:03:49.650\nthe manual, or\nthe Nmap inside of your terminal.\n\n77\n00:03:49.650 --> 00:03:51.670\nSo when you look at that,\nthat's what we're trying to do.\n\n78\n00:03:51.670 --> 00:03:54.964\nWe're trying to map out what is\nbeing blocked by the firewall,\n\n79\n00:03:54.964 --> 00:03:56.529\nhow is the firewall working.\n\n80\n00:03:56.529 --> 00:04:00.420\nAnd just get a basically lay of the land\nwhen it comes to filtering in our network.\n\n81\n00:04:00.420 --> 00:04:02.442\nSo let's go ahead and\njump into my computer,\n\n82\n00:04:02.442 --> 00:04:05.115\nwe'll do a real quick scan to\nshow you what that looks like.\n\n83\n00:04:05.115 --> 00:04:08.578\nIt's really simple,\ndon't forget we're running in a terminal.\n\n84\n00:04:08.578 --> 00:04:12.507\nIf you are using Windows hopefully you're\nlogged in as an administrator to get full\n\n85\n00:04:12.507 --> 00:04:14.752\naccess to your system if\nyou're using Zenmap or\n\n86\n00:04:14.752 --> 00:04:16.563\nthe graphical in the command prompt.\n\n87\n00:04:16.563 --> 00:04:21.750\nBut as usual I'm in my little Bash\nterminal here in my Mac OS system.\n\n88\n00:04:21.750 --> 00:04:25.910\nAll I got to do is my sudo and then nmap,\nwe know that command very well.\n\n89\n00:04:25.910 --> 00:04:30.080\nAnd we're gonna say -sA,\nthere it is, capital A.\n\n90\n00:04:30.080 --> 00:04:34.030\nRemember, it's case sensitive so\nthe -sa lowercase is not gonna work, or\n\n91\n00:04:34.030 --> 00:04:36.572\nit might do something you\ndon't expect it to do.\n\n92\n00:04:36.572 --> 00:04:39.980\nCapital A, right, that is to let\nyou know it is the ACK scan.\n\n93\n00:04:39.980 --> 00:04:43.840\nRemember they try to stick with a type of\nmnemonic with each one of these scans so\n\n94\n00:04:43.840 --> 00:04:45.482\nyou can easily remember which one's which.\n\n95\n00:04:45.482 --> 00:04:50.306\nSo -sA right there is the scan we\nare looking for and we're just gonna,\n\n96\n00:04:50.306 --> 00:04:56.430\nsince I'm on the same network,\nI tend to like using this --send-ip.\n\n97\n00:04:56.430 --> 00:05:00.200\nThat way it doesn't use any,\nit actually sends IP packets and\n\n98\n00:05:00.200 --> 00:05:04.670\ndoesn't use things like,\nwhat am I thinking of?\n\n99\n00:05:04.670 --> 00:05:06.150\nARP, it doesn't ARP, right?\n\n100\n00:05:06.150 --> 00:05:09.590\nSo it can still find stuff because of\nthe ARP, you're on the same network.\n\n101\n00:05:09.590 --> 00:05:11.660\nSo I tend to do this\nwhen I'm working inside.\n\n102\n00:05:11.660 --> 00:05:15.250\nIf you're on a network that's\ncrossing boundaries through VLANs,\n\n103\n00:05:15.250 --> 00:05:16.920\nthings of that nature,\nyou don't need this.\n\n104\n00:05:16.920 --> 00:05:19.552\nBut for right there and these purposes,\nthat's why I'm using --send-ip.\n\n105\n00:05:19.552 --> 00:05:21.360\nSermon over, rIght.\n\n106\n00:05:21.360 --> 00:05:23.280\nSo, let's see here.\n\n107\n00:05:23.280 --> 00:05:29.223\nAnd then just whatever machine I\nwanna scan so 192.168.219.135.\n\n108\n00:05:29.223 --> 00:05:33.610\nThat's my Metasploitable machine with\nall sorts of lovely things open for us.\n\n109\n00:05:33.610 --> 00:05:37.930\nBut let's see if there's actually\nanything being filtered by that machine.\n\n110\n00:05:37.930 --> 00:05:43.180\nHit Return, throw in my password because\nI'm elevating my privileges, and\n\n111\n00:05:43.180 --> 00:05:44.770\nNmap's firing away.\n\n112\n00:05:44.770 --> 00:05:48.235\nIt churns and burns a little minute there,\nand we're back.\n\n113\n00:05:48.235 --> 00:05:53.820\nIt says, the host seems down, but\nthe ping probes or blocking ping probes.\n\n114\n00:05:53.820 --> 00:05:56.260\nMaybe I need to throw in a dash.\n\n115\n00:05:56.260 --> 00:05:59.000\nLet me take the ping out\nof there just in case.\n\n116\n00:05:59.000 --> 00:06:02.120\nYou never know when that\ncould be causing an issue.\n\n117\n00:06:02.120 --> 00:06:04.060\nSee if that happens, here we go.\n\n118\n00:06:04.060 --> 00:06:07.500\nFire it off, churning and burning,\ncuz I know that host is up.\n\n119\n00:06:07.500 --> 00:06:09.580\nMaybe I actually have something blocking.\n\n120\n00:06:09.580 --> 00:06:11.520\nBut it seems to be going\na little bit longer now,\n\n121\n00:06:11.520 --> 00:06:14.750\nso hopefully that means it's actually,\nyes.\n\n122\n00:06:14.750 --> 00:06:16.240\nBecause remember we\nare trying to be stealthy.\n\n123\n00:06:16.240 --> 00:06:21.070\nSo a lot of times if you're not doing\nhost discovery, no real need for\n\n124\n00:06:21.070 --> 00:06:23.020\na ping in a lot of senses, right?\n\n125\n00:06:23.020 --> 00:06:26.180\nSo in a lot of types of scan, you just\nwanna take that ping out of there.\n\n126\n00:06:26.180 --> 00:06:29.980\nJust remove that by doing that\n-pn option that I put in there.\n\n127\n00:06:29.980 --> 00:06:35.139\nIt is taking a moment, I know that-\n>> Maybe it's finding lots of good stuff.\n\n128\n00:06:35.139 --> 00:06:37.613\n>> Make sure my IP is right,\nright, 192.168.\n\n129\n00:06:37.613 --> 00:06:43.350\nYeah, it could just be, remember it's\ngoing through 1,000 different ports and\n\n130\n00:06:43.350 --> 00:06:46.110\nsaying are they filtered, are they not?\n\n131\n00:06:47.990 --> 00:06:49.290\nWhat's happening here?\n\n132\n00:06:49.290 --> 00:06:52.486\nLet's actually jump over to\nthis Metasploitable machine.\n\n133\n00:06:52.486 --> 00:06:57.375\nLet's see if sudo iptables -L,\n\n134\n00:06:57.375 --> 00:07:02.620\nthis'll list any IP tables I have.\n\n135\n00:07:03.880 --> 00:07:08.480\nThere's the problem, I changed\nthe policy on this to default DROP.\n\n136\n00:07:08.480 --> 00:07:11.950\nSo it is firewalling, that's the problem,\neverything's being dropped.\n\n137\n00:07:11.950 --> 00:07:15.220\nSo it's not getting any action out\nof that Metasploitable machine.\n\n138\n00:07:15.220 --> 00:07:19.240\nSo what I need to do is I need to\ngo back in here, into my iptables.\n\n139\n00:07:19.240 --> 00:07:20.470\nI flushed all the rules out but\n\n140\n00:07:20.470 --> 00:07:23.678\nI forgot to change the policies\nback from my testing from earlier.\n\n141\n00:07:23.678 --> 00:07:25.602\nSo you gotta be careful\nof that kind of thing.\n\n142\n00:07:25.602 --> 00:07:31.007\nSo let's do that,\nlet's change that policy, sudo iptables,\n\n143\n00:07:31.007 --> 00:07:37.600\nand we'll say -P and then it is INPUT,\nand we'll say ACCEPT like so.\n\n144\n00:07:37.600 --> 00:07:42.259\nThere we go, now when we do iptables\n-L we see that the Chain INPUT\n\n145\n00:07:42.259 --> 00:07:47.194\npolicy equals ACCEPT,\neverything should be working normally now.\n\n146\n00:07:47.194 --> 00:07:50.746\nLet's go back in,\nas you can see, it says yeah,\n\n147\n00:07:50.746 --> 00:07:56.827\nit says all 1000 scanned ports on\nmetasploitable are unfiltered or filtered.\n\n148\n00:07:56.827 --> 00:07:58.214\nSo it really freaked it out.\n\n149\n00:07:58.214 --> 00:08:00.212\nLet's run that one more time and\n\n150\n00:08:00.212 --> 00:08:03.248\nsee if that actually I can\nleave that PN in there.\n\n151\n00:08:03.248 --> 00:08:04.833\nLet's give it, all right, here we go.\n\n152\n00:08:04.833 --> 00:08:06.880\nVery fast that time right.\n\n153\n00:08:06.880 --> 00:08:08.570\nWe like that, we like fast.\n\n154\n00:08:08.570 --> 00:08:12.329\nAnd here we are,\nit says that all 1,000 scanned ports\n\n155\n00:08:12.329 --> 00:08:15.640\non those metasploitable are unfiltered,\nright.\n\n156\n00:08:15.640 --> 00:08:16.385\nAnd that's true, right.\n\n157\n00:08:16.385 --> 00:08:19.270\nWe went to the policy,\nmade sure to change that to accept.\n\n158\n00:08:19.270 --> 00:08:20.540\nMy bad, right.\n\n159\n00:08:20.540 --> 00:08:24.530\nThere were no rules engaged, so\nit's not filtering anything.\n\n160\n00:08:24.530 --> 00:08:27.830\nIt's just allowing all traffic to run\nthrough it even though there is a firewall\n\n161\n00:08:27.830 --> 00:08:28.410\nin place.\n\n162\n00:08:28.410 --> 00:08:29.110\nAnd that's good.\n\n163\n00:08:29.110 --> 00:08:31.600\nAnd you notice it didn't give\nme every 1,000 port saying,\n\n164\n00:08:31.600 --> 00:08:35.200\nthis port is unfiltered,\nthis port is unfiltered, this port is un.\n\n165\n00:08:35.200 --> 00:08:38.330\nIt says, I could do that,\nbut it's probably easier for\n\n166\n00:08:38.330 --> 00:08:41.630\nyou to read that all these ports were\nunfiltered and group them all together.\n\n167\n00:08:41.630 --> 00:08:44.630\nSo we see output like that\na lot inside of Nmap.\n\n168\n00:08:44.630 --> 00:08:46.520\nSo let's change that, right.\n\n169\n00:08:46.520 --> 00:08:47.970\nLet's add a rule so\n\n170\n00:08:47.970 --> 00:08:51.760\nwe can see what it looks like when\nsomething is being filtered, right.\n\n171\n00:08:51.760 --> 00:08:53.900\nLet's do that.\nLet's jump back to our machine here.\n\n172\n00:08:53.900 --> 00:08:55.330\nWe will add a rule.\n\n173\n00:08:55.330 --> 00:08:59.610\nWe will say sudo iptables -a or\ni, whatever you like.\n\n174\n00:08:59.610 --> 00:09:03.724\nI guess I like a because\nit adds to the next line.\n\n175\n00:09:03.724 --> 00:09:08.399\nINPUT, we'll say -p tcp and\n\n176\n00:09:08.399 --> 00:09:15.910\nwe'll make it deport,\nhow about good old ssh.\n\n177\n00:09:15.910 --> 00:09:20.890\nWe'll drop that guy and -j DROP.\n\n178\n00:09:20.890 --> 00:09:26.350\nThere we go, so we are dropping\nall packets to SSH, hit return.\n\n179\n00:09:26.350 --> 00:09:29.320\nThere is of now an ACL in place.\n\n180\n00:09:29.320 --> 00:09:33.286\nLet's jump back to our machine here,\nwe'll run the same exact scan.\n\n181\n00:09:33.286 --> 00:09:38.230\nAnd it turns and burns, we'll take a look,\nokay wait for it, and it's done.\n\n182\n00:09:38.230 --> 00:09:43.230\nAnd look, so now we have,\n999 unfiltered ports,\n\n183\n00:09:43.230 --> 00:09:48.210\nwith one filtered port, tcp port 22 ssh.\n\n184\n00:09:48.210 --> 00:09:51.020\nWe are now blocking all ssh\n\n185\n00:09:51.020 --> 00:09:53.890\ntraffic from coming into that\nmachine using an ACL lure.\n\n186\n00:09:53.890 --> 00:09:58.898\nSimple rule but we start to see\nthat all I care about using just,\n\n187\n00:09:58.898 --> 00:10:05.530\ndon't we get filtered rules shows filtered\nwhen we do a stealth scan, like a -ss?\n\n188\n00:10:05.530 --> 00:10:08.617\nYes we do,\nwe do get to where it says filtered, but\n\n189\n00:10:08.617 --> 00:10:12.500\nI also get all the ports that\nshow up as open as well.\n\n190\n00:10:12.500 --> 00:10:14.720\nIn this case I don't care\nabout what ports are open,\n\n191\n00:10:14.720 --> 00:10:16.800\nI only care about what ports are filtered.\n\n192\n00:10:16.800 --> 00:10:19.100\nSo it's a very pointed kind of scan.\n\n193\n00:10:19.100 --> 00:10:21.450\nAgain, why are we engaging this?\n\n194\n00:10:21.450 --> 00:10:24.970\nAll I care about right\nnow is firewalled ports.\n\n195\n00:10:24.970 --> 00:10:26.220\nIs that happening?\n\n196\n00:10:26.220 --> 00:10:29.610\nSo we're using the SA\nscan to discern that.\n\n197\n00:10:29.610 --> 00:10:31.430\nAll right, let's see here.\n\n198\n00:10:31.430 --> 00:10:35.410\nI say let's take a look at this\nactually in action, right.\n\n199\n00:10:35.410 --> 00:10:40.230\nLet's see what this looks like as\nthe packets are passing back and forth.\n\n200\n00:10:40.230 --> 00:10:43.450\nAnd we can use our handy\ndandy Wireshark to see that.\n\n201\n00:10:43.450 --> 00:10:47.830\nSo I will fire up Wireshark here,\nshark, there we go.\n\n202\n00:10:49.740 --> 00:10:51.960\nAnd there we go,\nit's gonna take a second here.\n\n203\n00:10:51.960 --> 00:10:56.790\nI gotta pick my network, which is\nvmnet1 cuz I'm using virtual machines.\n\n204\n00:10:56.790 --> 00:10:59.450\nAnd all I gotta do is run back over here.\n\n205\n00:10:59.450 --> 00:11:04.880\nAnd I'm going to add a port to this just\nfor ease of seeing what's going on, okay.\n\n206\n00:11:04.880 --> 00:11:07.370\nThat's just to make it easy for us.\n\n207\n00:11:07.370 --> 00:11:10.260\nSo, I'm gonna add, let's see here.\n\n208\n00:11:10.260 --> 00:11:15.350\nI'll save -p and I'll make it the port\nthat we know is being filtered, right.\n\n209\n00:11:15.350 --> 00:11:16.150\nSo, we hit Return.\n\n210\n00:11:17.490 --> 00:11:20.180\nAs soon as it gets done, which it is,\nwe'll run back over here and\n\n211\n00:11:20.180 --> 00:11:23.470\nwe'll stop the scan so we don't start\ngetting arps and things of that nature.\n\n212\n00:11:23.470 --> 00:11:28.480\nWe got a very nice, neat, and\nclean looking Wireshark capture here.\n\n213\n00:11:28.480 --> 00:11:31.510\nSo here's my capture,\nit's just a couple packets.\n\n214\n00:11:31.510 --> 00:11:35.280\nAnd this really gets into,\nokay we've seen it work,\n\n215\n00:11:35.280 --> 00:11:37.590\nwe've seen what it does,\nwe know why were using it.\n\n216\n00:11:37.590 --> 00:11:39.240\nBut how does that work out, right?\n\n217\n00:11:39.240 --> 00:11:39.850\nHow does that work?\n\n218\n00:11:39.850 --> 00:11:41.790\nThat's what we're going to see right here.\n\n219\n00:11:41.790 --> 00:11:44.857\nYou'll notice that here's\nour attacker machine,\n\n220\n00:11:44.857 --> 00:11:49.810\n192.168.219.1, its destination\nis our target, which is 135,\n\n221\n00:11:49.810 --> 00:11:54.090\nit sends a TCP protocol of ack to port 22.\n\n222\n00:11:54.090 --> 00:12:00.230\nSo here is the response,\nit's sent an ack back.\n\n223\n00:12:01.350 --> 00:12:02.300\nIt's very strange.\n\n224\n00:12:02.300 --> 00:12:03.300\n>> That is odd.\n\n225\n00:12:03.300 --> 00:12:07.880\n>> Yeah, we look down in here and\nwe can see, yeah there, it set the flag to\n\n226\n00:12:07.880 --> 00:12:13.070\nacknowledgement, there it is right there,\nand that's really weird.\n\n227\n00:12:13.070 --> 00:12:14.940\nSo what does that mean for us?\n\n228\n00:12:14.940 --> 00:12:17.670\nWell we got to remember how TCP works,\n\n229\n00:12:17.670 --> 00:12:20.610\nthe three way handshake,\nunderstand some things about that so\n\n230\n00:12:20.610 --> 00:12:24.100\nwe can kinda figure out what the heck\nis going on, what we're doing here.\n\n231\n00:12:24.100 --> 00:12:28.160\nWhen I send an ack packet, what part\nmight, you're probably pretty familiar\n\n232\n00:12:28.160 --> 00:12:31.590\nwith TCP, what part of ack\nis the three way handshake?\n\n233\n00:12:31.590 --> 00:12:34.610\n>> Well let's see, you're gonna start\nwith the send packet that gets sent from\n\n234\n00:12:34.610 --> 00:12:37.240\nthe requester to the one it\nwants to communicate with.\n\n235\n00:12:37.240 --> 00:12:40.740\nShould respond with a sind ack,\nso acknowledging that send\n\n236\n00:12:40.740 --> 00:12:43.070\npacket that is that first\nacknowledgment that comes across.\n\n237\n00:12:43.070 --> 00:12:46.090\nAnd then a final acknowledgment\nback from the original sender\n\n238\n00:12:46.090 --> 00:12:49.238\nto acknowledge the send packet\nthat the receiver had sent.\n\n239\n00:12:49.238 --> 00:12:49.860\n>> That's right.\n\n240\n00:12:49.860 --> 00:12:51.650\nIt is our acknowledgment flag, right.\n\n241\n00:12:51.650 --> 00:12:54.180\nIt's saying that I've acknowledged\nthat something is happening.\n\n242\n00:12:54.180 --> 00:12:56.230\nAnd ack only shows up by itself, right.\n\n243\n00:12:56.230 --> 00:12:59.923\nWith the second part of the hand shake\nit's a send ack, it does a send and\n\n244\n00:12:59.923 --> 00:13:01.540\nan ack, sets both of those flags.\n\n245\n00:13:01.540 --> 00:13:04.270\nSo there is an ack there,\nbut it's not alone.\n\n246\n00:13:04.270 --> 00:13:06.280\nThe only time an ack is alone,\nwell at least for our intents and\n\n247\n00:13:06.280 --> 00:13:10.100\npurposes, is when the connection\nis being established.\n\n248\n00:13:10.100 --> 00:13:13.150\nIt is finishing that three way handshake.\n\n249\n00:13:13.150 --> 00:13:16.160\nAnd then that connection is built and\nyou can start transferring data.\n\n250\n00:13:16.160 --> 00:13:21.130\nSo that being said,\nI'm sending that as the initiation.\n\n251\n00:13:21.130 --> 00:13:24.120\nThat's why this works, right,\n\n252\n00:13:24.120 --> 00:13:29.630\nbecause it's most systems that they're RFC\ncompliant, they see an ack come to them.\n\n253\n00:13:29.630 --> 00:13:31.060\nWhat are they expecting?\n\n254\n00:13:31.060 --> 00:13:36.675\nThey're expecting to see that,\nwe had a conversation going.\n\n255\n00:13:36.675 --> 00:13:39.985\nAnd it's going to get that ack pack and\nlook around and say, I-\n\n256\n00:13:39.985 --> 00:13:41.365\n>> Did I miss something here?\n\n257\n00:13:41.365 --> 00:13:43.805\n>> Yeah, I don't have\na conversation going on with this,\n\n258\n00:13:43.805 --> 00:13:45.415\nI don't understand this ack packet.\n\n259\n00:13:45.415 --> 00:13:51.200\nSo normally if the port is open or\nclosed and unfiltered, either way, right,\n\n260\n00:13:51.200 --> 00:13:57.440\nif it's an unfiltered, opened or closed\nport, it's just gonna return with a RST.\n\n261\n00:13:57.440 --> 00:13:59.307\n>> Right.\n>> Right, it's just gonna say,\n\n262\n00:13:59.307 --> 00:14:00.582\nI don't know what this is.\n\n263\n00:14:00.582 --> 00:14:04.653\nHere's the RST for that, enjoy, right.\n\n264\n00:14:04.653 --> 00:14:06.682\nCuz obviously you sent\nthis to the wrong person.\n\n265\n00:14:06.682 --> 00:14:08.456\n>> Let's start this over, or-\n>> Return to sender.\n\n266\n00:14:08.456 --> 00:14:11.170\n>> [LAUGH]\n>> That's right, return to sender.\n\n267\n00:14:11.170 --> 00:14:16.250\nBack to you, maybe we got mistaken\nhere but this isn't right.\n\n268\n00:14:16.250 --> 00:14:18.480\nSo what can we learn from that?\n\n269\n00:14:18.480 --> 00:14:23.127\nA, the first thing we learn is that\nif the port is open or closed and\n\n270\n00:14:23.127 --> 00:14:25.575\nunfiltered then we're gonna get that RST.\n\n271\n00:14:25.575 --> 00:14:28.235\nLet's do that, let's see how that looks.\n\n272\n00:14:28.235 --> 00:14:29.395\nLet me jump back on my terminal here.\n\n273\n00:14:29.395 --> 00:14:31.865\nWhere are you hiding little terminal?\n\n274\n00:14:31.865 --> 00:14:33.225\nThere you are.\n\n275\n00:14:33.225 --> 00:14:35.245\nLet's do a port that\nwe know is unfiltered.\n\n276\n00:14:35.245 --> 00:14:38.876\nSo I'll go with telnet, how about that,\nbecause it's easiest, 23.\n\n277\n00:14:38.876 --> 00:14:42.510\n23, send IP, there we go.\n\n278\n00:14:42.510 --> 00:14:44.265\nIt probably helps if I Wireshark that.\n\n279\n00:14:44.265 --> 00:14:46.225\n>> [LAUGH]\n>> That old chestnut.\n\n280\n00:14:46.225 --> 00:14:47.050\n>> It makes it easier to see.\n\n281\n00:14:47.050 --> 00:14:47.995\n>> It really does.\n\n282\n00:14:47.995 --> 00:14:49.390\n[LAUGH] So let's do this.\n\n283\n00:14:49.390 --> 00:14:51.050\nContinue without saving,\nstart another one.\n\n284\n00:14:51.050 --> 00:14:56.296\nThere we go, refire that off,\nthere we go, real quick, it's done.\n\n285\n00:14:56.296 --> 00:14:58.390\nAnd we'll stop the scan.\n\n286\n00:14:58.390 --> 00:15:02.160\nSo there it is and look, there is our RST\n\n287\n00:15:02.160 --> 00:15:06.800\nthat was returned from our target\ncomputer, and the port was open.\n\n288\n00:15:06.800 --> 00:15:11.310\nAnd here's the tricky thing,\na little weird thing about, and if\n\n289\n00:15:11.310 --> 00:15:15.140\nyou've been following along in your books,\nit will make sense as soon as I say this.\n\n290\n00:15:15.140 --> 00:15:18.772\nThe ack scan will not be able to tell you\nwhether or not a port is open or closed.\n\n291\n00:15:18.772 --> 00:15:20.440\n>> Right.\n>> Right, it can't do that.\n\n292\n00:15:20.440 --> 00:15:21.070\nWhy?\n\n293\n00:15:21.070 --> 00:15:25.290\nBecause both opened ports and\nclosed ports return with an RST.\n\n294\n00:15:25.290 --> 00:15:29.792\nI know that port 23 is open, but\nwhat if I picked a port that was closed?\n\n295\n00:15:29.792 --> 00:15:31.358\nI'd get the exact same type of output.\n\n296\n00:15:31.358 --> 00:15:35.526\nIt would respond in a exact same way,\nright, it will send that RST.\n\n297\n00:15:35.526 --> 00:15:42.463\nNow we got the ack back from the filtered\nport, because what was it doing?\n\n298\n00:15:42.463 --> 00:15:49.372\nThere was a firewall rule in place that\nsaid, when you receive traffic do this.\n\n299\n00:15:49.372 --> 00:15:51.714\nAnd typically it's just\nbasically dropping,\n\n300\n00:15:51.714 --> 00:15:54.122\nit was kind of funny that\nwe received an ack back.\n\n301\n00:15:54.122 --> 00:15:56.856\nWe should have seen no reply.\n\n302\n00:15:56.856 --> 00:16:00.260\nAt least in, maybe it was because there\nwere some other things happening.\n\n303\n00:16:00.260 --> 00:16:04.210\nBut typically, you'll just see no reply at\nall, because your firewall, if I put drop,\n\n304\n00:16:04.210 --> 00:16:09.160\nit's just dropping the packets, saying,\nI'm not answering that door, right?\n\n305\n00:16:09.160 --> 00:16:10.220\nSo, don't worry about it.\n\n306\n00:16:10.220 --> 00:16:13.190\nSo typically that's what you see,\nyou won't see a return call.\n\n307\n00:16:13.190 --> 00:16:16.830\nSometimes you will see,\nnetworks are funny things, computers and\n\n308\n00:16:16.830 --> 00:16:18.550\nprograms that use networks\nare funny things.\n\n309\n00:16:18.550 --> 00:16:21.712\nAnd sometimes they do out of the box\nstuff that you don't expect you're\n\n310\n00:16:21.712 --> 00:16:23.252\ngonna have to troubleshoot that.\n\n311\n00:16:23.252 --> 00:16:28.080\nBut typically you won't see anything,\nwe did get a response back, which is\n\n312\n00:16:28.080 --> 00:16:32.228\nnot the RST, which is why it showed\nup as filtered, because you can get,\n\n313\n00:16:32.228 --> 00:16:36.150\nif it's being filtered,\nyou can get like ICMP error messages.\n\n314\n00:16:36.150 --> 00:16:39.824\nRight, sometimes when you have\nan actively rejecting firewall,\n\n315\n00:16:39.824 --> 00:16:44.546\ninstead of just a dropping firewall, it\nwill say, I'm telling you we're closed for\n\n316\n00:16:44.546 --> 00:16:46.020\nbusiness for you.\n\n317\n00:16:46.020 --> 00:16:48.000\nYou can't come in here, right.\n\n318\n00:16:48.000 --> 00:16:52.030\nOkay well I've received something, its not\nthe RST, so it must be being filtered, and\n\n319\n00:16:52.030 --> 00:16:54.350\nI assume that's what happening\nhere with my meta splitable.\n\n320\n00:16:54.350 --> 00:16:59.090\nAnd probably if I picked another port\nmaybe it would give me less trouble, but\n\n321\n00:16:59.090 --> 00:17:00.770\nthat is what is going on right there.\n\n322\n00:17:00.770 --> 00:17:03.220\nVery simple stuff, very easy stuff.\n\n323\n00:17:03.220 --> 00:17:05.330\nLet me see what else I wanna\nshow you guys about this.\n\n324\n00:17:06.980 --> 00:17:09.080\nWe figured out why we're running RC.\n\n325\n00:17:09.080 --> 00:17:13.260\nNow as tricky little net admins as we are,\n\n326\n00:17:13.260 --> 00:17:17.630\nwe can kind of trick\nthis from working right.\n\n327\n00:17:17.630 --> 00:17:20.298\nWe can get around it and that's kind\nof like what I'm wanting to teach you.\n\n328\n00:17:20.298 --> 00:17:23.890\nWe're using Nmap to scan our system,\nscan our networks\n\n329\n00:17:23.890 --> 00:17:27.360\nfind out where the vulnerabilities are and\nthen do our best to close those down or\n\n330\n00:17:27.360 --> 00:17:29.780\nmitigate that as much as possible,\nand we can do this.\n\n331\n00:17:29.780 --> 00:17:31.060\nIt's very cool stuff.\n\n332\n00:17:31.060 --> 00:17:33.470\nLet me get Wireshark out of the way.\n\n333\n00:17:33.470 --> 00:17:35.850\nLet's go back to Metasploitable\nactually over here.\n\n334\n00:17:36.980 --> 00:17:37.650\nWe got this going on.\n\n335\n00:17:37.650 --> 00:17:43.960\nI'm gonna flush these rules out,\nand yeah, let's flush this out.\n\n336\n00:17:43.960 --> 00:17:49.050\nSo sudo iptables -F.\n\n337\n00:17:49.050 --> 00:17:55.540\nBe done with you, and\nthere should be no more rules on, yeah.\n\n338\n00:17:55.540 --> 00:17:56.830\nNothing there.\nGreat.\n\n339\n00:17:56.830 --> 00:17:59.480\nLet's add a rule and we're gonna\nadd basically the exact same rule,\n\n340\n00:17:59.480 --> 00:18:00.790\nwe're just gonna add\na little something to it.\n\n341\n00:18:00.790 --> 00:18:03.730\nAdd a little stank on it and\nsee what happens right?\n\n342\n00:18:03.730 --> 00:18:06.000\nSo let's add that rule back.\n\n343\n00:18:06.000 --> 00:18:09.440\nBut over here, I'm gonna say,\ndash dash sin.\n\n344\n00:18:10.530 --> 00:18:11.250\nInteresting.\n\n345\n00:18:11.250 --> 00:18:11.870\nRight?\n\n346\n00:18:11.870 --> 00:18:13.750\nAnd it does some funky\nstuff with IP tables.\n\n347\n00:18:13.750 --> 00:18:15.690\nAgain, consult your documentation, for\n\n348\n00:18:15.690 --> 00:18:19.920\nwhatever it is the firewall you are using\nto try to block these type of things.\n\n349\n00:18:19.920 --> 00:18:21.680\nI just happen to use IP\ntables all the time.\n\n350\n00:18:21.680 --> 00:18:23.200\nSo that's what I'm familiar with and\n\n351\n00:18:23.200 --> 00:18:25.910\nthat's what we're using for\ndemonstration purposes.\n\n352\n00:18:25.910 --> 00:18:31.368\nAdd that in there, it is now available,\nlet's go back, open up my terminal and\n\n353\n00:18:31.368 --> 00:18:37.058\nwe're gonna run the same scan and\nsee what happens.\n\n354\n00:18:37.058 --> 00:18:37.567\nLook at that.\n\n355\n00:18:37.567 --> 00:18:43.080\nIt has changed, no it's still storing\nunfiltered, right what do we do?\n\n356\n00:18:43.080 --> 00:18:43.897\nWhat am I missing here?\n\n357\n00:18:46.744 --> 00:18:49.340\n>> You added the sin\nswitch to your IP tables?\n\n358\n00:18:50.570 --> 00:18:51.517\n>> I did add this, so\n\n359\n00:18:51.517 --> 00:18:55.720\nthe sin swift actually starts\nreplying with an RST, right.\n\n360\n00:18:55.720 --> 00:18:58.990\nSo that's what it does,\nthat's why I added the sin,\n\n361\n00:18:58.990 --> 00:19:03.660\ncause what it does is when you drop\nthe packet, also send an RST back, right?\n\n362\n00:19:03.660 --> 00:19:05.390\nSo it should show up as unfiltered.\n\n363\n00:19:05.390 --> 00:19:06.480\nI didn't realize that it showed.\n\n364\n00:19:06.480 --> 00:19:07.060\nI thought it said filtered.\n\n365\n00:19:07.060 --> 00:19:07.745\nI missed the un.\n\n366\n00:19:07.745 --> 00:19:10.340\nI don't why that's showing unfiltered.\n\n367\n00:19:10.340 --> 00:19:12.290\nLet's play around with it and\nsee what happens here real quick.\n\n368\n00:19:12.290 --> 00:19:13.130\nSo let's go back.\n\n369\n00:19:13.130 --> 00:19:14.700\nWe'll flush this out.\n\n370\n00:19:14.700 --> 00:19:16.290\nWe'll play with our error.\n\n371\n00:19:16.290 --> 00:19:17.460\nFlush.\n\n372\n00:19:17.460 --> 00:19:18.620\nWe'll get our original.\n\n373\n00:19:18.620 --> 00:19:22.434\n>> Wait, the scan shows unfiltered,\na sin scan will show it as filtered.\n\n374\n00:19:22.434 --> 00:19:25.570\n>> A sin scan will definitely\nshow it as filtered.\n\n375\n00:19:25.570 --> 00:19:26.340\n>> Yeah.\n>> Yes.\n\n376\n00:19:26.340 --> 00:19:28.982\n>> Because you added the sin to the rule?\n\n377\n00:19:28.982 --> 00:19:29.508\n>> Yes, yeah.\n\n378\n00:19:29.508 --> 00:19:31.910\nThe sin scan, he is right.\n\n379\n00:19:31.910 --> 00:19:34.000\nBecause I'm getting a RST back, or\n\n380\n00:19:34.000 --> 00:19:36.580\nsomething back,\n>> That it's expecting,\n\n381\n00:19:36.580 --> 00:19:39.370\nlet's just take a look,\nI'm starting to get off my track here.\n\n382\n00:19:39.370 --> 00:19:41.440\n>> Sorry.\n>> Let's just see what happens.\n\n383\n00:19:41.440 --> 00:19:45.950\nI wanna put this back in here,\nsudo iptables INPUT chain,\n\n384\n00:19:45.950 --> 00:19:49.870\ntcp port 22, DROP that monkey,\nthat should be happening.\n\n385\n00:19:49.870 --> 00:19:52.940\nAll right, so\nnow that should show up as filtered.\n\n386\n00:19:52.940 --> 00:19:54.750\nWhen we do an SA scan.\n\n387\n00:19:54.750 --> 00:19:59.650\nI'm just gonna do a regular,\nI'm just gonna take all this out of here,\n\n388\n00:19:59.650 --> 00:20:00.480\ndon't need all that.\n\n389\n00:20:00.480 --> 00:20:01.530\nLet's make it special.\n\n390\n00:20:02.990 --> 00:20:04.440\nI got a little white space coming on here.\n\n391\n00:20:04.440 --> 00:20:05.100\nLet's try that.\n\n392\n00:20:05.100 --> 00:20:06.060\nLet's see what happens.\n\n393\n00:20:07.090 --> 00:20:08.270\nYeah, there we go, perfect, yeah.\n\n394\n00:20:08.270 --> 00:20:09.570\nThis is exactly what it should be doing.\n\n395\n00:20:09.570 --> 00:20:11.930\nIt's showing us filtered right there.\n\n396\n00:20:11.930 --> 00:20:13.180\nAs it should.\n\n397\n00:20:13.180 --> 00:20:20.050\nBut if we go back and we flush that rule,\nput the syn part of it in there.\n\n398\n00:20:20.050 --> 00:20:23.000\nThere it is, add that.\n\n399\n00:20:23.000 --> 00:20:24.730\nNow we run the same scan yet again.\n\n400\n00:20:24.730 --> 00:20:27.270\nAnd let's see what happens.\n\n401\n00:20:27.270 --> 00:20:31.130\nAha, there it is, that's what I\nexpected to see, right there.\n\n402\n00:20:31.130 --> 00:20:33.840\nSometimes you just gotta do these things\ntwice so that they work, I don't know,\n\n403\n00:20:33.840 --> 00:20:34.365\nit's computers.\n\n404\n00:20:34.365 --> 00:20:37.046\n[LAUGH] They're fun.\n\n405\n00:20:37.046 --> 00:20:39.080\nIt's never this error.\n\n406\n00:20:39.080 --> 00:20:40.310\nThat doesn't happen.\n\n407\n00:20:40.310 --> 00:20:42.670\n>> So let's say that-\n>> We do get some caching going on,\n\n408\n00:20:42.670 --> 00:20:43.310\nthings like that.\n\n409\n00:20:43.310 --> 00:20:44.210\nYou never know.\n>> Who knows what,\n\n410\n00:20:44.210 --> 00:20:45.960\nmaybe it was still sending data back over.\n\n411\n00:20:45.960 --> 00:20:46.740\nWho knows.\n\n412\n00:20:46.740 --> 00:20:48.910\nSo all good in the hood right now.\n\n413\n00:20:48.910 --> 00:20:50.700\nEverything is showing up\nexactly how it should.\n\n414\n00:20:50.700 --> 00:20:54.440\nIt's saying that all ports are unfiltered,\neven though we know for\n\n415\n00:20:54.440 --> 00:20:57.810\na fact that that port is being filtered.\n\n416\n00:20:57.810 --> 00:20:59.030\nWe just made a little modification.\n\n417\n00:20:59.030 --> 00:21:03.120\nWe're kind of doing that whole\ndefense in depth concept.\n\n418\n00:21:03.120 --> 00:21:04.200\nWe're just trying to make layers.\n\n419\n00:21:04.200 --> 00:21:07.820\nIt's not going to stop like\nevery hacker on earth.\n\n420\n00:21:07.820 --> 00:21:10.650\nIf they're bound and determined to get\nafter it, they're going to come after it\n\n421\n00:21:10.650 --> 00:21:13.860\nanyway, even if it shows as filtered or\nunfiltered or whatever.\n\n422\n00:21:13.860 --> 00:21:16.550\nIf they're bound and determined,\nthey're just gonna keep on going.\n\n423\n00:21:16.550 --> 00:21:20.060\nBut we do this so that everybody and\ntheir brother doesn't go hey,\n\n424\n00:21:20.060 --> 00:21:22.630\nthey've got an unfiltered wide open SSH.\n\n425\n00:21:22.630 --> 00:21:25.700\nLet's go attack it with our brute\nforce and have a great time.\n\n426\n00:21:25.700 --> 00:21:27.490\nThat's what we're trying to avoid, right?\n\n427\n00:21:27.490 --> 00:21:29.130\nSo that's the purpose of this.\n\n428\n00:21:29.130 --> 00:21:31.090\nSo very cool.\n\n429\n00:21:31.090 --> 00:21:32.330\n>> It is.\n\n430\n00:21:32.330 --> 00:21:34.290\n>> The next thing I want\nus to talk about is,\n\n431\n00:21:34.290 --> 00:21:36.190\nnow that we kinda know how\nthis thing works, right?\n\n432\n00:21:36.190 --> 00:21:38.600\nIt's not too difficult of a concept.\n\n433\n00:21:38.600 --> 00:21:41.800\nThere's packets being sent and\ncheck my port.\n\n434\n00:21:41.800 --> 00:21:43.593\nWas I doing the wrong port?\n\n435\n00:21:43.593 --> 00:21:46.210\nOur,\n>> [LAUGH]\n\n436\n00:21:46.210 --> 00:21:47.060\n>> Our chatroom there,\n\n437\n00:21:47.060 --> 00:21:48.180\nthey're on the point.\n\n438\n00:21:48.180 --> 00:21:49.540\nThank you Doug.\n\n439\n00:21:49.540 --> 00:21:51.740\nI was using the wrong ports.\n\n440\n00:21:51.740 --> 00:21:55.390\nAnd in my previous scan I was so\nI was showing as unfiltered.\n\n441\n00:21:55.390 --> 00:21:57.660\nAm an idiot,\nlike I said it never happens here,\n\n442\n00:21:57.660 --> 00:22:00.660\nnever, it's always the computer's fault.\n\n443\n00:22:00.660 --> 00:22:01.500\nSo, yeah.\n\n444\n00:22:01.500 --> 00:22:06.010\nCheck your ports it's easy, these are long\ntypes of commands and it's really easy and\n\n445\n00:22:06.010 --> 00:22:08.170\nespecially when you're doing 22 and 23.\n\n446\n00:22:08.170 --> 00:22:09.350\n>> Yeah\n>> [LAUGH] Get those mixed up.\n\n447\n00:22:09.350 --> 00:22:12.410\nThey do almost the identical, well, they\ndo the same thing, just different labor.\n\n448\n00:22:12.410 --> 00:22:17.000\nSo let's move on back to\nwhat I was talking about.\n\n449\n00:22:17.000 --> 00:22:22.760\nThe Nmap engine for doing ACK scans\nalso can help you discern whether or\n\n450\n00:22:22.760 --> 00:22:25.790\nnot this is a stateful or\na stateless firewall.\n\n451\n00:22:25.790 --> 00:22:27.840\nAnd that's helpful, right?\n\n452\n00:22:27.840 --> 00:22:30.630\nThat's very helpful,\nbecause we know what we're up against.\n\n453\n00:22:30.630 --> 00:22:32.970\nWith stateful firewalls,\nyou're up against a big,\n\n454\n00:22:32.970 --> 00:22:36.420\nmean grizzly bear that's been stabbed in\nthe eye And he's not very happy, right.\n\n455\n00:22:36.420 --> 00:22:39.540\nThey're much tougher to work around.\n\n456\n00:22:39.540 --> 00:22:44.210\nStateless firewalls,\nthey're efficient, they do a good job.\n\n457\n00:22:44.210 --> 00:22:47.060\nAnd for\npeople that are getting in to firewalling,\n\n458\n00:22:47.060 --> 00:22:52.048\nthey're perfect because they teach you\nabout how to create good rules and lists,\n\n459\n00:22:52.048 --> 00:22:55.070\nand default denies and\nthings of that nature.\n\n460\n00:22:55.070 --> 00:22:59.680\nBut they don't track\nthe state of the connections.\n\n461\n00:22:59.680 --> 00:23:02.020\nThat's what stateful does.\n\n462\n00:23:02.020 --> 00:23:04.360\nAnd that's what we wanna know.\n\n463\n00:23:04.360 --> 00:23:06.620\nAm I up against the big\nnasty grizzly bear?\n\n464\n00:23:06.620 --> 00:23:09.480\nOr am I going to be able to fool things.\n\n465\n00:23:09.480 --> 00:23:13.090\nAm I going to be able to get\naround that stateless firewall.\n\n466\n00:23:13.090 --> 00:23:15.900\nThe SA scan can get around\nstateless firewalls.\n\n467\n00:23:15.900 --> 00:23:18.660\nAnd it does that because\nit uses the ACT packet.\n\n468\n00:23:18.660 --> 00:23:20.170\nThat's what's important, right?\n\n469\n00:23:20.170 --> 00:23:24.920\nIs because I'm sending\nan ACT it's saying well this\n\n470\n00:23:24.920 --> 00:23:27.060\nis going here it must be\npart of a connection.\n\n471\n00:23:27.060 --> 00:23:32.290\nAnd unless there's a rule specifically\nsaying block all traffic or\n\n472\n00:23:32.290 --> 00:23:34.970\nblock this traffic from this source or\nwhatever.\n\n473\n00:23:34.970 --> 00:23:36.500\nSaying don't let that go there.\n\n474\n00:23:36.500 --> 00:23:41.952\nIt's just gonna let it slide on by and\ngo, hey port here's some data for you.\n\n475\n00:23:41.952 --> 00:23:43.517\nIt looks like it's headed your way.\n\n476\n00:23:43.517 --> 00:23:48.040\nI don't have any rules telling\nme to stop it, so off you go.\n\n477\n00:23:48.040 --> 00:23:48.723\nRight.\n\n478\n00:23:48.723 --> 00:23:55.220\nAnd then the port, is what actually\nanswers back to our attack machine, right.\n\n479\n00:23:55.220 --> 00:23:58.570\nSo that the port is\nhandling the interaction.\n\n480\n00:23:58.570 --> 00:24:02.230\nWhereas, with the stateful firewall,\nwe'd not so lucky, right.\n\n481\n00:24:02.230 --> 00:24:05.040\nCuz stateful firewalls,\nthey do track connections, so\n\n482\n00:24:05.040 --> 00:24:08.500\nthey can if you're a good Firewall admin,\nyou set that up.\n\n483\n00:24:08.500 --> 00:24:14.380\nI want to track the TCP connections\nthat have happened with everything.\n\n484\n00:24:14.380 --> 00:24:18.200\nIt tracks every connection that goes\nthrough it, that's its whole purpose.\n\n485\n00:24:18.200 --> 00:24:19.480\nIs this a new connection?\n\n486\n00:24:19.480 --> 00:24:21.410\nIs this an established connection?\n\n487\n00:24:21.410 --> 00:24:26.183\nIs this a connection that is\nrelated in some way, right?\n\n488\n00:24:26.183 --> 00:24:27.290\n>> Right.\n\n489\n00:24:27.290 --> 00:24:28.950\n>> That's what it's trying to figure out.\n\n490\n00:24:28.950 --> 00:24:31.695\n>> Yeah, cuz really we were talking\nearlier about the three way handshake.\n\n491\n00:24:31.695 --> 00:24:33.430\n>> Mm-hm.\n>> We expect that ACK packet as\n\n492\n00:24:33.430 --> 00:24:36.245\nthe last packet in that\nthree way handshake.\n\n493\n00:24:36.245 --> 00:24:38.290\nSYN, SYNACK, and then ACK.\n\n494\n00:24:38.290 --> 00:24:40.850\nStateless sees the ACK, but\n\n495\n00:24:40.850 --> 00:24:44.660\nas stateless he doesn't know if there\nwas a SYNACK right before that or\n\n496\n00:24:44.660 --> 00:24:47.880\ncome previously, so if it's part of\na conversation or not he has no idea.\n\n497\n00:24:47.880 --> 00:24:49.770\nHe just says,\nI'm not supposed to drop ACKs.\n\n498\n00:24:49.770 --> 00:24:50.710\nI let it go.\n\n499\n00:24:50.710 --> 00:24:54.820\nStateful sees that ACK packet and\nsays, wait a second.\n\n500\n00:24:54.820 --> 00:24:57.810\nThis should only come after a SYN and\na SYN-ACK have come by.\n\n501\n00:24:57.810 --> 00:25:00.100\nI don't have the rest\nof that conversation.\n\n502\n00:25:00.100 --> 00:25:03.520\nSomething's not right here, and\nlet's not let that go through.\n\n503\n00:25:03.520 --> 00:25:05.230\n>> Mike is dead on the money.\n\n504\n00:25:05.230 --> 00:25:07.050\nHe is a gold star.\n\n505\n00:25:07.050 --> 00:25:09.938\nMike Rodger,\nbecause that is exactly the point.\n\n506\n00:25:09.938 --> 00:25:13.740\nThat stateless firewall, it's looking\nat its connection state tables and\n\n507\n00:25:13.740 --> 00:25:20.730\ngoing well, I'm allowed to allow\nrelated traffic, and establish traffic.\n\n508\n00:25:20.730 --> 00:25:24.620\nBecause it's not new, right,\nI'm not allowed to allow new.\n\n509\n00:25:24.620 --> 00:25:28.700\nOnly new coming from inside to outside,\nnot from the outside to the inside,\n\n510\n00:25:28.700 --> 00:25:32.801\nunless I have a rule that says allow new\nto come in from this specific device.\n\n511\n00:25:32.801 --> 00:25:35.800\nAnd if you're not on that list,\nguess what, the bouncer kicks you out.\n\n512\n00:25:35.800 --> 00:25:38.340\nThe guy at the velvet\nrope does not let you by.\n\n513\n00:25:38.340 --> 00:25:39.240\nAnd that's his whole point.\n\n514\n00:25:39.240 --> 00:25:40.800\nHe's watching those states.\n\n515\n00:25:40.800 --> 00:25:42.260\nSo, how do I know?\n\n516\n00:25:42.260 --> 00:25:46.230\nAnd I was telling Mike, it was like\nthe big epiphany that came out is really,\n\n517\n00:25:46.230 --> 00:25:48.270\nhow do I discern what's what?\n\n518\n00:25:48.270 --> 00:25:53.850\nBecause, I can get the same type\nof output from both stateful and\n\n519\n00:25:53.850 --> 00:25:57.050\nstateless firewalls, and\nyou do it by looking at the output.\n\n520\n00:25:57.050 --> 00:26:02.840\nHow does the output look\nwhen you run the ACK scan?\n\n521\n00:26:02.840 --> 00:26:04.510\nAnd that's what's gonna\nlet you know whether or\n\n522\n00:26:04.510 --> 00:26:06.750\nnot it's a stateful firewall or\na stateless firewall.\n\n523\n00:26:06.750 --> 00:26:08.880\nAnd you really need to\nscan the entire system,\n\n524\n00:26:08.880 --> 00:26:12.490\nlet it really churn\nagainst a lot of ports.\n\n525\n00:26:12.490 --> 00:26:17.130\nAll right, let it do its full 1000 port\nscan or a good range of ports because\n\n526\n00:26:17.130 --> 00:26:21.830\nseeing what happens to a large group and\nnot just a single port or\n\n527\n00:26:21.830 --> 00:26:25.910\ntwo ports, that's gonna make it\nmore difficult for you to discern.\n\n528\n00:26:25.910 --> 00:26:30.920\nSo running your full scans first\nis going to help you figure that,\n\n529\n00:26:30.920 --> 00:26:32.230\nthe ACK scan, that is.\n\n530\n00:26:32.230 --> 00:26:33.430\nThe full ACK scan.\n\n531\n00:26:33.430 --> 00:26:38.460\nJust let it go, nmap,\nassay, target, fire away.\n\n532\n00:26:38.460 --> 00:26:39.470\nAll right, let it do its thing.\n\n533\n00:26:39.470 --> 00:26:42.540\nThousands of different ports,\nit's gonna hammer away at them.\n\n534\n00:26:42.540 --> 00:26:44.290\nWhat does it come back with?\n\n535\n00:26:44.290 --> 00:26:50.320\nIf I get some ports are filtered and\n937 were unfiltered like\n\n536\n00:26:50.320 --> 00:26:55.090\nwhat we've seen here, then I'm probably\nworking with a stateless firewall.\n\n537\n00:26:55.090 --> 00:26:56.140\nWhy is that?\n\n538\n00:26:56.140 --> 00:26:59.070\nBecause those ACKs made it to the port,\nall right.\n\n539\n00:26:59.070 --> 00:27:02.910\nThe port said, I'm closed, or\nI'm filtered, or this was dropped.\n\n540\n00:27:02.910 --> 00:27:06.200\nBut these ports weren't because\nI'm seeing unfiltered ports.\n\n541\n00:27:06.200 --> 00:27:08.210\nIf you send that out and\n\n542\n00:27:08.210 --> 00:27:13.110\nit says 1000 ports are filtered,\nyou're probably working with a stateful\n\n543\n00:27:13.110 --> 00:27:17.700\nfirewall because none of the ACKs are\nmaking its way past the firewall rules.\n\n544\n00:27:17.700 --> 00:27:21.880\nIt could just be a guy that's\ngone buck wild with ACL's and\n\n545\n00:27:21.880 --> 00:27:24.218\nhas written a rule for every possible.\n\n546\n00:27:24.218 --> 00:27:28.480\nBut not probable, but could happen.\n\n547\n00:27:28.480 --> 00:27:30.440\nIt might happen, you could see that.\n\n548\n00:27:30.440 --> 00:27:35.176\nSo I'm saying it's not 100%, you have to\nbe discerning, you have to really look at\n\n549\n00:27:35.176 --> 00:27:39.350\nthe data that's coming back and\nfigure out what it's trying to tell you.\n\n550\n00:27:39.350 --> 00:27:40.470\nBut that's how you're gonna do it.\n\n551\n00:27:40.470 --> 00:27:44.240\nIf the port responds you get some\nunfiltered and some filtered,\n\n552\n00:27:44.240 --> 00:27:46.270\nyou're probably working\nwith a stateless firewall.\n\n553\n00:27:46.270 --> 00:27:49.548\nIf you get all filtered, you're probably\nworking with a stateful firewall.\n\n554\n00:27:49.548 --> 00:27:52.460\nIt's basically all you\nneed to know about that.\n\n555\n00:27:52.460 --> 00:27:55.916\nLet me see if there's anything else\nI wanted you guys to know when\n\n556\n00:27:55.916 --> 00:27:56.882\nit comes to this.\n\n557\n00:27:56.882 --> 00:28:00.396\nNo response, obviously it's letting you\nknow it's filtered because it's dropping\n\n558\n00:28:00.396 --> 00:28:00.981\nthe packets.\n\n559\n00:28:00.981 --> 00:28:08.740\nIf you get ICMP;errors, the type\nIII code 013 2 and 3, 9, 10 and 13.\n\n560\n00:28:08.740 --> 00:28:12.120\nYou get those, that's a rejection.\n\n561\n00:28:12.120 --> 00:28:15.392\nIt's saying I'm filtering stuff,\nyou're getting those ICP errors.\n\n562\n00:28:15.392 --> 00:28:17.660\nSo you're gonna see filter.\n\n563\n00:28:17.660 --> 00:28:19.920\nThat's basically the ACK\nscan wrapped up in a ball.\n\n564\n00:28:19.920 --> 00:28:23.150\nI know we got a little bit of time left,\nthere are a few other scans I wanna\n\n565\n00:28:23.150 --> 00:28:26.650\nquickly run through, and I'm not doing you\na disservice because they're basically\n\n566\n00:28:26.650 --> 00:28:30.770\nthe ACK scan with a little modifier,\nlittle twist to how they work.\n\n567\n00:28:32.110 --> 00:28:35.440\nOne of them is the Windows scan,\njump to my terminal quickly.\n\n568\n00:28:35.440 --> 00:28:40.975\nI'm gonna clear screen windows\nscan is sudo nmap -sw and\n\n569\n00:28:40.975 --> 00:28:46.756\nthen your target 192.168.219.135 boom!\n\n570\n00:28:46.756 --> 00:28:47.402\nFire it off.\n\n571\n00:28:49.865 --> 00:28:53.900\nThere we go and\nit looks just like an ACK scan.\n\n572\n00:28:53.900 --> 00:28:54.820\nIt does, right?\n\n573\n00:28:54.820 --> 00:28:57.290\nIt just does things\na little bit differently.\n\n574\n00:28:57.290 --> 00:29:00.840\nThe Windows scan can actually determine,\n\n575\n00:29:00.840 --> 00:29:05.740\nin some cases, whether or not a port is\nopen or closed by the way it responds.\n\n576\n00:29:05.740 --> 00:29:10.420\nBecause of the window field\ninside of the packet.\n\n577\n00:29:10.420 --> 00:29:13.000\nSo if you look at the packet like\nwe do with Wireshark just a minute\n\n578\n00:29:13.000 --> 00:29:17.330\nago where we saw the flags, there's also\nanother place there for the window size.\n\n579\n00:29:17.330 --> 00:29:22.140\nIf the window field has a positive size,\nthen usually the port is open.\n\n580\n00:29:22.140 --> 00:29:23.569\nThat's typical, it's just RFC compliance.\n\n581\n00:29:24.660 --> 00:29:29.440\nIf the window has a field size of 0,\nthen the port is usually closed.\n\n582\n00:29:29.440 --> 00:29:33.890\nNow, the only problem with this\nis this not a very reliable scan.\n\n583\n00:29:33.890 --> 00:29:35.260\nWhen it works, it's awesome, all right?\n\n584\n00:29:35.260 --> 00:29:37.590\nCuz it tells you whether\nthe ports are opened or closed.\n\n585\n00:29:37.590 --> 00:29:39.360\nAnd you get firewall rules.\n\n586\n00:29:39.360 --> 00:29:43.913\nSweet, awesome stuff right, but\nit's just not very, very reliable.\n\n587\n00:29:43.913 --> 00:29:46.250\nYou are not gonna see this\nwork on a ton of machines.\n\n588\n00:29:46.250 --> 00:29:50.225\nDoes that mean you just toss it in a bin\nand say I don't even know why that is in\n\n589\n00:29:50.225 --> 00:29:54.870\nnmap, no because there is gonna be\nthose times that this is the thing\n\n590\n00:29:54.870 --> 00:29:58.580\nthat gets you the data you are looking for\nwhen the other scans don't.\n\n591\n00:29:58.580 --> 00:30:01.460\nSo it doesn't mean you discard it,\nit just means that, when you run it,\n\n592\n00:30:01.460 --> 00:30:02.550\nexpect it to fail or\n\n593\n00:30:02.550 --> 00:30:06.270\nnot gives you back much information\nother than what you've already gotten.\n\n594\n00:30:06.270 --> 00:30:08.420\nIf you do hit the money load though,\n\n595\n00:30:08.420 --> 00:30:10.750\nyou're on easy street because\nit's done what you want it to do.\n\n596\n00:30:10.750 --> 00:30:14.355\nIt's tell you whether or\nnot ports are open or closed.\n\n597\n00:30:14.355 --> 00:30:17.045\nAnother one is the Maimon scan.\n\n598\n00:30:17.045 --> 00:30:18.600\nYeah, it's a mouth full, right?\n\n599\n00:30:18.600 --> 00:30:19.625\n>> [LAUGH]\n>> Let's go\n\n600\n00:30:19.625 --> 00:30:20.985\nback to the terminal here really quick.\n\n601\n00:30:20.985 --> 00:30:22.355\nWe'll run that scan.\n\n602\n00:30:22.355 --> 00:30:25.601\nSo I'm just bringing back the same scan I\njust run cuz we're just gonna change this\n\n603\n00:30:25.601 --> 00:30:26.412\nwhole option here.\n\n604\n00:30:26.412 --> 00:30:32.185\nChanging that to sM,\nthat's the Maimon scan.\n\n605\n00:30:32.185 --> 00:30:34.537\nAgain, looks just like ACK.\n\n606\n00:30:34.537 --> 00:30:36.410\nWell what's its big hairy deal?\n\n607\n00:30:36.410 --> 00:30:42.010\nIt works kind of like a FIN,\nor a NULL, or a XMAS scan.\n\n608\n00:30:42.010 --> 00:30:47.560\nIt sets some flags, and\nit's setting the FIN and ACK flags.\n\n609\n00:30:47.560 --> 00:30:53.170\nIt says that the target should respond\nwith an RST if the port is open or\n\n610\n00:30:53.170 --> 00:30:54.010\nclosed, right?\n\n611\n00:30:54.010 --> 00:30:55.910\nKind of like what we talked about before.\n\n612\n00:30:55.910 --> 00:30:59.333\nThis guy named Ural Maimon or\nMimen, whatever his name is,\n\n613\n00:30:59.333 --> 00:31:02.760\nrealized that a lot of BSD\nsystems responded in this way.\n\n614\n00:31:02.760 --> 00:31:04.270\nIf the port was open and closed.\n\n615\n00:31:04.270 --> 00:31:09.240\nInstead of doing the traditional\nversion of how the ACK works.\n\n616\n00:31:09.240 --> 00:31:13.830\nIf you send the FIN ACK,\nyou can get some response out of it.\n\n617\n00:31:13.830 --> 00:31:18.120\nSo again another one of those scans\nyou're probably not gonna use a ton, but\n\n618\n00:31:18.120 --> 00:31:23.188\nif you're working on a heavily\nBSD operating system environment.\n\n619\n00:31:23.188 --> 00:31:26.700\nYou might wanna throw that at the, and\nthe kitchen sink at it from time to time.\n\n620\n00:31:26.700 --> 00:31:29.100\nSee maybe you'll get exactly\nwhat you're looking for.\n\n621\n00:31:29.100 --> 00:31:36.112\nAnd the very last scan we have to talk\nabout is the SCTP cookie echo scan.\n\n622\n00:31:36.112 --> 00:31:39.919\nWe've talked about SCTP in\nprevious episodes as well.\n\n623\n00:31:39.919 --> 00:31:45.767\nVery cool protocol, very TCP like but\nbetter really to be honest with you.\n\n624\n00:31:45.767 --> 00:31:49.392\nIt's just not intrenched yet\nbecause TCP is every stinking where.\n\n625\n00:31:49.392 --> 00:31:55.516\nBut basically what you wanna know about\nthis is the switch is S capital Z.\n\n626\n00:31:55.516 --> 00:31:59.894\nI'm not gonna trouble you with showing it\non the screen because I am not running\n\n627\n00:31:59.894 --> 00:32:01.163\nan SCTP environment.\n\n628\n00:32:01.163 --> 00:32:03.290\nSo it's not really gonna\ndo a whole lot for me.\n\n629\n00:32:03.290 --> 00:32:04.360\nYou can run it.\n\n630\n00:32:04.360 --> 00:32:06.770\nEven if you're not running\nSCTP it will still run, but\n\n631\n00:32:06.770 --> 00:32:09.280\nI don't know what kind of\noutput you'll get for that.\n\n632\n00:32:09.280 --> 00:32:15.080\nBut if you are running SCTP this is\nthat when you send a SCTP packet,\n\n633\n00:32:15.080 --> 00:32:20.060\nthere's a little cookie area that's\ninvolved inside of that packet, right.\n\n634\n00:32:20.060 --> 00:32:22.830\nAnd it has an echo that\ngoes along with it.\n\n635\n00:32:22.830 --> 00:32:27.240\nIf you send that echo,\nwhat it will do is, well,\n\n636\n00:32:27.240 --> 00:32:31.010\nlet me grab my notes here,\nmake sure I'm telling you correctly.\n\n637\n00:32:31.010 --> 00:32:34.659\nWhat will happen is,\nif the port receives it,\n\n638\n00:32:34.659 --> 00:32:38.597\nit should either send an abort or\nsomething else.\n\n639\n00:32:38.597 --> 00:32:42.770\nWhat was the other thing?\n\n640\n00:32:42.770 --> 00:32:45.860\nThe abort shows that it's closed,\nand then the echo.\n\n641\n00:32:45.860 --> 00:32:47.350\nThe echo was what shows that it's open.\n\n642\n00:32:47.350 --> 00:32:49.740\nSo if you send that cookie,\nthat SCTP cookie,\n\n643\n00:32:49.740 --> 00:32:52.820\nI'm sorry that's where I was getting\nconfused, my mind was twisting around.\n\n644\n00:32:52.820 --> 00:32:55.670\nThe SCT echo comes back,\nyou know the port is open.\n\n645\n00:32:55.670 --> 00:32:59.780\nIf you get the abort,\nit's kinda like RST and SYN-ACK, right.\n\n646\n00:32:59.780 --> 00:33:01.140\nJust for it's protocol.\n\n647\n00:33:01.140 --> 00:33:05.030\nIt's the same type of idea, right.\n\n648\n00:33:05.030 --> 00:33:07.500\nYou get one,\nyou know a thing is happening.\n\n649\n00:33:07.500 --> 00:33:10.510\nYou get the other, it's just, I don't\nknow what you're doing, I'm not open for\n\n650\n00:33:10.510 --> 00:33:12.590\nbusiness so abort.\n\n651\n00:33:12.590 --> 00:33:14.650\nPull the rip cord, I'm out,\njump out the plane.\n\n652\n00:33:14.650 --> 00:33:16.250\nBe done with it.\n\n653\n00:33:16.250 --> 00:33:18.732\nThe advantages are that it\nis more stealthy obviously.\n\n654\n00:33:18.732 --> 00:33:23.318\nIt can get past non-stateful firewalls,\nright.\n\n655\n00:33:23.318 --> 00:33:25.730\nWe've seen how that kind of action works.\n\n656\n00:33:25.730 --> 00:33:29.960\nDisadvantages are it's still\ndetectable by IDS and IPSs.\n\n657\n00:33:29.960 --> 00:33:34.660\nAnd you can't tell the difference\nbetween open and filtered ports, so\n\n658\n00:33:34.660 --> 00:33:40.316\nyou typically the see the output\nstate as open pipe filtered,\n\n659\n00:33:40.316 --> 00:33:43.420\ncuz I don't know if it's open or filter,\nso am just gonna say open filter.\n\n660\n00:33:43.420 --> 00:33:45.100\nAll right, that's what it's gonna do.\n\n661\n00:33:45.100 --> 00:33:46.110\n>> It's not closed.\n\n662\n00:33:46.110 --> 00:33:47.030\n>> Yeah, it's not closed.\n\n663\n00:33:47.030 --> 00:33:49.050\nWe know that, it's not closed.\n\n664\n00:33:49.050 --> 00:33:53.140\nBut it is open or filtered and\nthe more scans you throw at it, and\n\n665\n00:33:53.140 --> 00:33:57.680\nyou start seeing a consistency,\nif it's consistently showing up as\n\n666\n00:33:57.680 --> 00:34:00.990\nmore filtered than open, you probably\nare working with a filtered port.\n\n667\n00:34:00.990 --> 00:34:04.310\nYou're seeing open, open filter open,\nit's probably open.\n\n668\n00:34:04.310 --> 00:34:07.835\nSo you just gotta use a little\ndiscernment, but that's our scans.\n\n669\n00:34:07.835 --> 00:34:08.815\nThat's port scanning.\n\n670\n00:34:08.815 --> 00:34:14.255\nWe have completed the standard\nbevy of port scans.\n\n671\n00:34:14.255 --> 00:34:16.185\nThat wraps this up.\n\n672\n00:34:16.185 --> 00:34:18.651\nWith the next episodes, we'll get into\na little more advanced port scanning.\n\n673\n00:34:18.651 --> 00:34:20.412\nYou might think,\nI don't know that sounded advanced, but\n\n674\n00:34:20.412 --> 00:34:22.682\nit's not, that's standard stuff,\nbut we'll get into more.\n\n675\n00:34:22.682 --> 00:34:23.572\nIt's actually really cool,\n\n676\n00:34:23.572 --> 00:34:26.072\nI'm looking forward for\nus to be doing the next couple of shows.\n\n677\n00:34:26.072 --> 00:34:27.667\n>> Nice.\n>> That's all I got for us today, Mike.\n\n678\n00:34:27.667 --> 00:34:30.192\n>> All right, fantastic,\nwasn't it, ladies and gentlemen?\n\n679\n00:34:30.192 --> 00:34:33.890\nI mean really good look at as we've\nbeen doing these last few videos,\n\n680\n00:34:33.890 --> 00:34:35.118\nlooking at these port scans.\n\n681\n00:34:35.118 --> 00:34:38.960\nHere, we get to take a close up look at\nthe ACK scan, how it's working underneath\n\n682\n00:34:38.960 --> 00:34:41.870\nthe hood, got to capture some\nof that traffic and see it.\n\n683\n00:34:41.870 --> 00:34:45.670\nAnd really, Daniel did a great job there,\nexplaining the results, what you get back.\n\n684\n00:34:45.670 --> 00:34:47.590\nHow do I interpret what I'm getting back?\n\n685\n00:34:47.590 --> 00:34:48.410\nCuz that's what it's all about.\n\n686\n00:34:48.410 --> 00:34:52.280\nWe can run these scans, but if we can't\nfigure out what their resulting data means\n\n687\n00:34:52.280 --> 00:34:54.570\nto us, doesn't do a lot of good,\nso we thank you for that.\n\n688\n00:34:54.570 --> 00:34:58.260\nAnd we also got a good look at a couple\nalternative ACK scans if you will, right.\n\n689\n00:34:58.260 --> 00:35:02.710\nWe got that Windows scan in there, we\ngot that scan in there, and then one for\n\n690\n00:35:02.710 --> 00:35:06.770\na new protocol that we might or might not\nsee on a network, but another good one to\n\n691\n00:35:06.770 --> 00:35:13.950\nhave in the tool bag just in case is\nthat SCTP protocol scan capability.\n\n692\n00:35:13.950 --> 00:35:15.730\nSo fantastic, we appreciate that, Daniel.\n\n693\n00:35:15.730 --> 00:35:16.370\n>> No problem.\n\n694\n00:35:16.370 --> 00:35:18.110\n>> Hope everybody out\nthere enjoyed watching.\n\n695\n00:35:18.110 --> 00:35:21.060\nSigning off for ITProTV,\nI've been your host, Mike Rodrick.\n\n696\n00:35:21.060 --> 00:35:21.760\n>> I'm Daniel Lowrie.\n\n697\n00:35:21.760 --> 00:35:22.915\n>> And we'll see you next time.\n\n698\n00:35:22.915 --> 00:35:32.380\n[MUSIC]\n\n",
          "vimeoId": "179490515"
        },
        {
          "description": "In this episode, Daniel and Mike discuss some advanced port scanning techniques. In particular, they focus on an IP ID idle scan, explaining how it works. Then they demonstrate an IP ID Idle scan, and examine the output.",
          "length": "2254",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-3-advanced_port_scanning_ip_id_idle_scan-081216-1.jpg",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-3-advanced_port_scanning_ip_id_idle_scan-081216-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-3-advanced_port_scanning_ip_id_idle_scan-081216-1-sm.jpg",
          "title": "Advanced Port Scanning IP ID Idle Scan",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.010 --> 00:00:14.552\nHello.\nWelcome to another exciting episode here\n\n3\n00:00:14.552 --> 00:00:16.890\nat ITProTV, I'm your host Mike Rodrick.\n\n4\n00:00:16.890 --> 00:00:20.633\nAnd today we are doing our Nmap series and\nspecifically in this one,\n\n5\n00:00:20.633 --> 00:00:24.072\nwe're continuing our look at\ndifferent types of port scans.\n\n6\n00:00:24.072 --> 00:00:27.750\nWe're gonna be getting into some\nadvance port scans in this one.\n\n7\n00:00:27.750 --> 00:00:31.900\nAnd of course, back with me again is\nthe one and only Mr. Daniel Lowrie.\n\n8\n00:00:31.900 --> 00:00:32.770\nHow you doing, Daniel?\n\n9\n00:00:32.770 --> 00:00:34.020\n>> Mike, I'm doing fantastic.\n\n10\n00:00:34.020 --> 00:00:34.990\nThanks for having me yet\n\n11\n00:00:34.990 --> 00:00:38.620\nagain here in your lovely,\nlovely studio two here at ITProTV.\n\n12\n00:00:38.620 --> 00:00:41.040\nWe do enjoy it here cuz it's nice and\ncool.\n\n13\n00:00:41.040 --> 00:00:44.810\nAnd speaking of cool, we got a super\ncool scan for you guys today.\n\n14\n00:00:44.810 --> 00:00:48.500\nWe've moved on from the typical\nrun in the mill, everyday,\n\n15\n00:00:48.500 --> 00:00:50.410\nI gotta know this type of scans.\n\n16\n00:00:50.410 --> 00:00:52.606\nAnd now we're gonna get\na little more sneaky,\n\n17\n00:00:52.606 --> 00:00:56.292\nwe're gonna get a little more dabbily\ninto the more darky arts, if you will.\n\n18\n00:00:56.292 --> 00:00:58.315\n>> All right.\n>> It's gonna be a lot of fun.\n\n19\n00:00:58.315 --> 00:00:59.735\nThis is a really cool scan.\n\n20\n00:00:59.735 --> 00:01:01.635\nWe're gonna spend\nthe entirety of this show.\n\n21\n00:01:01.635 --> 00:01:05.855\nIt might not go full, maybe cuz I like\nto run my app in my Go Full show.\n\n22\n00:01:05.855 --> 00:01:11.880\nBut it's all gonna be about the IP ID\nidle scan, which is a mouthful to say.\n\n23\n00:01:11.880 --> 00:01:15.790\nIt doesn't look like much on paper,\nit's just a little short ip id idle scans,\n\n24\n00:01:15.790 --> 00:01:19.170\nvery short, but\nto say that is a bit of a mouthful.\n\n25\n00:01:19.170 --> 00:01:22.492\nWhat is this IP ID idle,\nsee it's even harder to say.\n\n26\n00:01:22.492 --> 00:01:26.050\nIP ID idle scan of which you speak,\nyou might be asking.\n\n27\n00:01:26.050 --> 00:01:26.840\nWell, I'm glad you did,\n\n28\n00:01:26.840 --> 00:01:31.858\nbecause otherwise you should probably be\nwatching one of our other shows [LAUGH].\n\n29\n00:01:31.858 --> 00:01:36.960\nIt is a very, very sneaky scan and\n\n30\n00:01:36.960 --> 00:01:42.264\nthe great thing about this is that\nwe get to actually exploit another\n\n31\n00:01:42.264 --> 00:01:47.555\nsystem to be our middle man if you\nwere and do the scanning for us.\n\n32\n00:01:47.555 --> 00:01:52.635\nYeah, so we're gonna take a look at\nhow to do this, a really cool thing.\n\n33\n00:01:52.635 --> 00:01:56.090\nWe're gonna start off with just I\nwanna give you the gist, right?\n\n34\n00:01:56.090 --> 00:01:57.160\nWhat are we talking about?\n\n35\n00:01:57.160 --> 00:01:57.720\nHow do you mean?\n\n36\n00:01:57.720 --> 00:02:02.710\nHow do I get these other players to\nget involved and scan machines for me?\n\n37\n00:02:02.710 --> 00:02:04.000\nDo I install Nmap?\n\n38\n00:02:04.000 --> 00:02:05.720\nWhat do I do, right?\n\n39\n00:02:05.720 --> 00:02:07.540\nVery simple, simple thing.\n\n40\n00:02:07.540 --> 00:02:11.090\nIt's the fact that the way\nsome machines work,\n\n41\n00:02:11.090 --> 00:02:12.900\nwe're gonna exploit how that happens.\n\n42\n00:02:12.900 --> 00:02:14.540\nThat's what we're gonna take a look at.\n\n43\n00:02:14.540 --> 00:02:16.850\nSo where should we start?\n\n44\n00:02:16.850 --> 00:02:19.870\nFirst thing, the terminology I want to use\n\n45\n00:02:19.870 --> 00:02:24.390\nis it does what we like to say\nin the biz is a blind port scan.\n\n46\n00:02:24.390 --> 00:02:29.350\nAnd we say that it's blind because we\nare not scanning the machine, right?\n\n47\n00:02:29.350 --> 00:02:32.610\nWe're having that intermediate do it for\nus,\n\n48\n00:02:32.610 --> 00:02:35.920\nwe're having our little proxy\nguy kind of do this game first.\n\n49\n00:02:35.920 --> 00:02:41.520\nSo we don't actually touch the machine,\nwell, we do and you'll see how we do this.\n\n50\n00:02:41.520 --> 00:02:42.536\nBut for the most part, we don't.\n\n51\n00:02:42.536 --> 00:02:43.690\n>> Kind of indirectly.\n\n52\n00:02:43.690 --> 00:02:46.500\n>> Yes, very indirectly,\nvery, very indirectly.\n\n53\n00:02:46.500 --> 00:02:51.060\nOnly in certain ways, and when we do\nactually make contact with our target,\n\n54\n00:02:52.110 --> 00:02:55.390\nwe pretend that we're not us, yeah, right.\n\n55\n00:02:55.390 --> 00:02:57.650\nIt's gonna be really cool,\na lot of fun with that.\n\n56\n00:02:57.650 --> 00:02:58.910\nLet's see here.\n\n57\n00:02:58.910 --> 00:03:05.370\nWhat we do is like I said, we use an\nintermediary host also known as a zombie.\n\n58\n00:03:05.370 --> 00:03:06.395\nIt's kind of a fun name, right?\n\n59\n00:03:06.395 --> 00:03:10.655\nWe got zombies in our network\nto perform the scan for us.\n\n60\n00:03:10.655 --> 00:03:15.245\nAnd when we do that, when we implement\nthat zombie to do that scan,\n\n61\n00:03:15.245 --> 00:03:16.905\nwhat does that do for us?\n\n62\n00:03:16.905 --> 00:03:19.435\nWhy would we want to\nimplement the service scan?\n\n63\n00:03:19.435 --> 00:03:21.095\nIf we really need to be sneaky and\n\n64\n00:03:21.095 --> 00:03:25.950\nwe don't want it showing up\nin things like IDS or IPS.\n\n65\n00:03:25.950 --> 00:03:29.470\nThat we were doing the scanning.\n\n66\n00:03:29.470 --> 00:03:34.230\nNot them saying that IPS or an IDS would\nnot detect that they were being scanned,\n\n67\n00:03:34.230 --> 00:03:35.830\nbut it won't detect that it's us.\n\n68\n00:03:35.830 --> 00:03:37.530\n>> Won't be my IP address in the log file.\n\n69\n00:03:37.530 --> 00:03:38.410\n>> There you go.\n\n70\n00:03:38.410 --> 00:03:40.420\nMike's hit the nail on the head.\n\n71\n00:03:40.420 --> 00:03:44.310\nYou aint the one holding the gun,\nstanding over the dead body going.\n\n72\n00:03:44.310 --> 00:03:46.290\nI swear officer, it wasn't me, right?\n\n73\n00:03:46.290 --> 00:03:50.830\nThen we're standing over here in\nthe corner, saying your so bad,\n\n74\n00:03:50.830 --> 00:03:52.158\nwe saw the whole thing, right?\n\n75\n00:03:52.158 --> 00:03:56.165\nThat's kind of what we're doing, that's\nwhy it's so sneaky and so stealthy and\n\n76\n00:03:56.165 --> 00:03:58.266\nreally, really cool and\na lot of fun to do.\n\n77\n00:03:58.266 --> 00:04:01.910\nThere are some pre-requisite knowledge\nthat we need to have under our belts.\n\n78\n00:04:01.910 --> 00:04:06.570\nSo that we can understand what's\nhappening during this type of scan.\n\n79\n00:04:06.570 --> 00:04:08.890\nAnd let's see here,\nwhat do we need to know?\n\n80\n00:04:08.890 --> 00:04:13.110\nWe need to know what happens when\na SYN packet is sent to a port, right.\n\n81\n00:04:13.110 --> 00:04:16.370\nWe have talked about this ad nauseum,\nat length.\n\n82\n00:04:16.370 --> 00:04:20.160\nSo hopefully, if you've been watching\nthe series from start to finish,\n\n83\n00:04:20.160 --> 00:04:22.500\nyou're like I got that,\nDaniel, no problem.\n\n84\n00:04:22.500 --> 00:04:26.550\nI know what SYN does,\nwhy we use SYN scans, right,\n\n85\n00:04:26.550 --> 00:04:29.810\nour good old fashioned stealth scan,\nthe default scans of Nmap.\n\n86\n00:04:29.810 --> 00:04:30.750\nI'm cranking out with you,\n\n87\n00:04:30.750 --> 00:04:33.930\nthree way handshakes,\nall day long I can handle that stuff.\n\n88\n00:04:33.930 --> 00:04:37.369\nWe know it's a SYN,\nresponds with a SYN ACK, back with an ACK.\n\n89\n00:04:37.369 --> 00:04:40.760\nAnd then you have a three-way handshake\nconnection complete, start sending data.\n\n90\n00:04:40.760 --> 00:04:41.440\nSimple stuff.\n\n91\n00:04:42.650 --> 00:04:46.130\nThe SYN, when it gets into an open port,\n\n92\n00:04:46.130 --> 00:04:49.070\nknow that that port\nresponds with that SYN ACK.\n\n93\n00:04:49.070 --> 00:04:52.734\nThat's when ports are open,\nif I wanted to make an FTP connection,\n\n94\n00:04:52.734 --> 00:04:54.240\nI use my FTP client.\n\n95\n00:04:54.240 --> 00:04:58.530\nIt initiates that connection with the SYN\npacket, the FTP server replies with\n\n96\n00:04:58.530 --> 00:05:03.220\na SYN ACK because the port is\nopen ready to accept connections.\n\n97\n00:05:03.220 --> 00:05:05.780\nWe ACK back,\nwe have FTP rocking and rolling.\n\n98\n00:05:05.780 --> 00:05:07.610\nClosed ports, what do they do, right?\n\n99\n00:05:07.610 --> 00:05:09.040\nGotta remember what that is.\n\n100\n00:05:09.040 --> 00:05:11.960\nWhen you send a SYN to a closed port,\nit's typically going,\n\n101\n00:05:11.960 --> 00:05:14.400\nI don't know why you're\ntrying to connect to me.\n\n102\n00:05:14.400 --> 00:05:16.480\nI'm not open, I'm closed for\nbusiness right now.\n\n103\n00:05:16.480 --> 00:05:19.980\nSo here's a reset, maybe you just\npicked the wrong port accidentally.\n\n104\n00:05:19.980 --> 00:05:23.240\nSo I'm just gonna let you reset that and\ntry again.\n\n105\n00:05:23.240 --> 00:05:25.130\nSo it keeps that reset packet, right?\n\n106\n00:05:25.130 --> 00:05:28.258\nSo that's what we need to know.\n\n107\n00:05:28.258 --> 00:05:35.700\nRandom SYN ACKs to open ports respond\nwith RSTs, keep that in mind as well.\n\n108\n00:05:35.700 --> 00:05:37.860\nSo if we send this in SYN ACK packet,\n\n109\n00:05:37.860 --> 00:05:40.410\ncuz remember,\nwe have control over the data packet.\n\n110\n00:05:40.410 --> 00:05:44.150\nWe've done it plenty of times, scan flags,\nwe've set those, we can send push,\n\n111\n00:05:44.150 --> 00:05:45.850\nurge, pin, whatever, right?\n\n112\n00:05:45.850 --> 00:05:51.220\nWe have carte blanche with our system\nto set whatever flag we desire and\n\n113\n00:05:51.220 --> 00:05:52.680\nsee what the output is.\n\n114\n00:05:52.680 --> 00:05:54.980\nAnd Nmap affords us that ability.\n\n115\n00:05:54.980 --> 00:05:56.960\nIt gives us a nice interface\nto do that very thing.\n\n116\n00:05:56.960 --> 00:06:01.540\nSo, if we send a random SYN ACK which is\nthat middle portion of the trigger hand\n\n117\n00:06:01.540 --> 00:06:04.430\nshake, to an open port,\nit will respond with an RST.\n\n118\n00:06:04.430 --> 00:06:05.650\nWhy?\n\n119\n00:06:05.650 --> 00:06:10.965\nBecause it is expecting a connection\nthat's trying to be established\n\n120\n00:06:10.965 --> 00:06:18.180\nto start to start with a SYN, not a SYN\nACK, it's going well, again, what is this?\n\n121\n00:06:18.180 --> 00:06:19.070\nI don't have anything for that.\n\n122\n00:06:19.070 --> 00:06:20.200\n>> What the heck are you acknowledging.\n\n123\n00:06:20.200 --> 00:06:21.040\n>> Exactly.\n\n124\n00:06:21.040 --> 00:06:22.650\nWhat do you think?\n\n125\n00:06:22.650 --> 00:06:25.070\nSo sends that RST back to the systems.\n\n126\n00:06:25.070 --> 00:06:26.438\nKeep that in mind as well.\n\n127\n00:06:26.438 --> 00:06:30.740\nAnd random RSTs will just simply be\nignored because what do they do?\n\n128\n00:06:30.740 --> 00:06:33.130\nThey say, research your connection.\n\n129\n00:06:33.130 --> 00:06:38.100\nWell, we don't have one, so there's no\npoint of even telling you anything cuz\n\n130\n00:06:38.100 --> 00:06:39.630\nwe haven't been talking to me.\n\n131\n00:06:39.630 --> 00:06:44.330\nIt's like me walking up to Mike and\ngoing, so then the guy said, wrecked him,\n\n132\n00:06:44.330 --> 00:06:45.443\ndang near killed him.\n\n133\n00:06:45.443 --> 00:06:48.369\n[LAUGH] And he's like, okay.\n\n134\n00:06:48.369 --> 00:06:49.593\nHe has no response to that, right?\n\n135\n00:06:49.593 --> 00:06:53.168\nIt's just some random non sequitur and\nit makes no sense to have,\n\n136\n00:06:53.168 --> 00:06:54.800\njust like our computer says.\n\n137\n00:06:54.800 --> 00:06:58.450\nThat makes no sense to me, I have no\nreason, there's nothing to respond to.\n\n138\n00:06:58.450 --> 00:06:59.500\nYou've given me nothing.\n\n139\n00:06:59.500 --> 00:07:01.184\nSo remember that.\n\n140\n00:07:01.184 --> 00:07:06.800\nSo now we come into some of the really\ngood meat and potatoes of why this works.\n\n141\n00:07:07.870 --> 00:07:10.960\nAnd it's called the fragment\nidentification number,\n\n142\n00:07:10.960 --> 00:07:15.160\nalso known as the IP ID,\nhence the IP ID idle scan.\n\n143\n00:07:15.160 --> 00:07:17.460\nOr at least the IP ID part of it.\n\n144\n00:07:17.460 --> 00:07:21.150\nSo it's a little piece of your packet.\n\n145\n00:07:21.150 --> 00:07:25.740\nWell, I'm keeping track of\nthings basically, okay?\n\n146\n00:07:25.740 --> 00:07:26.640\nThat's what it's doing.\n\n147\n00:07:26.640 --> 00:07:30.040\nIt's saying, I've got a connection,\nthis is connection number one,\n\n148\n00:07:30.040 --> 00:07:30.880\nit's my first connection.\n\n149\n00:07:30.880 --> 00:07:32.820\nIt's the first time this\ncomputer has ever turned on.\n\n150\n00:07:32.820 --> 00:07:37.580\nAnd it's been connected to a network and\nthat first connection has come in or\n\n151\n00:07:37.580 --> 00:07:39.130\nis trying to go out.\n\n152\n00:07:39.130 --> 00:07:41.460\nAnd I'm going to label that.\n\n153\n00:07:41.460 --> 00:07:42.740\nThat's number one.\n\n154\n00:07:42.740 --> 00:07:43.920\nThe next one is number two.\n\n155\n00:07:43.920 --> 00:07:45.180\nThe next one is number three.\n\n156\n00:07:45.180 --> 00:07:47.060\nThat's the important part, right?\n\n157\n00:07:47.060 --> 00:07:53.088\nThat's why we call this IP ID, because\nit uses that ID to track connections.\n\n158\n00:07:53.088 --> 00:07:56.722\nSo that if I get multiple connections,\nI know where they're going, right?\n\n159\n00:07:56.722 --> 00:08:00.150\nAnd it typically increments\nin a certain fashion.\n\n160\n00:08:00.150 --> 00:08:03.556\nAnd we're looking for\na specific type of incrementation so\n\n161\n00:08:03.556 --> 00:08:05.745\nthat we can perform this type of scan.\n\n162\n00:08:05.745 --> 00:08:08.128\nI will give that as a caveat right now.\n\n163\n00:08:08.128 --> 00:08:15.870\nUnfortunately in today's modern society\nnot all people enjoy being RFC compliant.\n\n164\n00:08:15.870 --> 00:08:20.760\nSo you might find computers\nthat do not respond this way.\n\n165\n00:08:20.760 --> 00:08:25.100\nSo you need to find computers that will\nrespond this way for the scan to work.\n\n166\n00:08:25.100 --> 00:08:27.920\nWe'll talk a little more\nabout that as we continue.\n\n167\n00:08:27.920 --> 00:08:30.120\nSo let's bear that in mind.\n\n168\n00:08:30.120 --> 00:08:33.890\nSo you remember that the IP ID\nis a part of each packet.\n\n169\n00:08:33.890 --> 00:08:39.370\nAnd many systems increment by just one,\nthat's really what we're looking for.\n\n170\n00:08:39.370 --> 00:08:43.950\nI want a system that says,\nevery time I increment for\n\n171\n00:08:43.950 --> 00:08:46.810\na connection I want to do it by one,\nright?\n\n172\n00:08:46.810 --> 00:08:49.330\n>> Because that is where\nwe're gonna be able,\n\n173\n00:08:49.330 --> 00:08:52.300\nthat's what we're gonna be able to\nexploit, the fact that it does that.\n\n174\n00:08:52.300 --> 00:08:53.810\nWe can discern some things.\n\n175\n00:08:53.810 --> 00:08:58.092\nRemember net map,\na lot of times it comes down to us going\n\n176\n00:08:58.092 --> 00:09:01.560\nwe're basically doing\ninductive reasoning right?\n\n177\n00:09:01.560 --> 00:09:05.350\nThat this and this means that\nthis is probably whats happening.\n\n178\n00:09:05.350 --> 00:09:09.135\nAll right, so just keep that in mind.\n\n179\n00:09:09.135 --> 00:09:11.670\nAnd then you can deduce how many\npackets have been sent, right?\n\n180\n00:09:11.670 --> 00:09:17.280\nBecause if its incremented by five I\nassume that five packets have hit and\n\n181\n00:09:17.280 --> 00:09:17.910\nbeen counted.\n\n182\n00:09:17.910 --> 00:09:22.590\nAnd part of that connection series,\n[SOUND] and I know okay, good.\n\n183\n00:09:22.590 --> 00:09:24.410\nThat's what we're gonna exploit.\n\n184\n00:09:24.410 --> 00:09:29.540\nSo let me show you, I actually did\nsome work and I created a diagram.\n\n185\n00:09:29.540 --> 00:09:34.860\nSo that we can see in a visual sense\nhow this basically is working,\n\n186\n00:09:34.860 --> 00:09:37.470\nremember keep the emphasis\non the work basically.\n\n187\n00:09:37.470 --> 00:09:41.040\nSo let me pull this up here,\nsimple diagrams that I have created.\n\n188\n00:09:41.040 --> 00:09:44.080\nLovely little thing here,\nthis is our step one.\n\n189\n00:09:44.080 --> 00:09:47.982\nWe're gonna take a look at what happens\nwith an open port when we try to contact\n\n190\n00:09:47.982 --> 00:09:48.712\nan open port.\n\n191\n00:09:48.712 --> 00:09:52.200\nAnd what happens when we try to scan\nclosed ports and how they work together.\n\n192\n00:09:53.260 --> 00:09:58.610\nSo first, here's our attacker, here's our\nzombie host, and here's our target system.\n\n193\n00:09:58.610 --> 00:10:01.960\nSo this is the system we\nactually want to scan right here.\n\n194\n00:10:01.960 --> 00:10:04.690\nBut for whatever reason,\nmaybe we're firewalled off,\n\n195\n00:10:04.690 --> 00:10:07.680\nwe can't actually touch it, or\nwe just want to be super-stealthy and\n\n196\n00:10:07.680 --> 00:10:12.070\nnot let people think it's us and\nstay out of that business, right?\n\n197\n00:10:12.070 --> 00:10:14.340\nSo no log show that it coming from us.\n\n198\n00:10:14.340 --> 00:10:16.230\nSo what's the first thing we do?\n\n199\n00:10:16.230 --> 00:10:19.083\nWe send this random SYN-ACK.\n\n200\n00:10:19.083 --> 00:10:21.316\nBut what happens when we send the SYN-ACK?\n\n201\n00:10:21.316 --> 00:10:24.350\nWe get a RSTS reply.\n\n202\n00:10:24.350 --> 00:10:27.820\nAnd you'll notice I'm sending it to the\nzombie, I'm not sending it to the target.\n\n203\n00:10:27.820 --> 00:10:31.350\nAgain, not trying to initiate any kind\nof conversations with that target.\n\n204\n00:10:31.350 --> 00:10:32.910\nI want it stay in the background.\n\n205\n00:10:32.910 --> 00:10:35.340\nI want it to pay no attention\nto the man behind the curtain.\n\n206\n00:10:35.340 --> 00:10:36.380\nThat's the whole purpose of this.\n\n207\n00:10:36.380 --> 00:10:39.810\nThis is why we have to play\nwith the zombie first, right?\n\n208\n00:10:39.810 --> 00:10:42.320\nSo we sent it to SYN-ACK.\n\n209\n00:10:42.320 --> 00:10:45.688\nIt says, that's weird.\n\n210\n00:10:45.688 --> 00:10:46.820\nI don't know what to do with that.\n\n211\n00:10:46.820 --> 00:10:47.460\nHere's an RST.\n\n212\n00:10:47.460 --> 00:10:49.380\nMaybe you sent it to the wrong person.\n\n213\n00:10:49.380 --> 00:10:52.540\nBut it also, in that RST packet,\nit sends back,\n\n214\n00:10:52.540 --> 00:10:57.765\nit includes Includes the IPID counter,\nso I know what counter it's at.\n\n215\n00:10:57.765 --> 00:11:02.465\nThis is where the idle part\nof the scan comes into play.\n\n216\n00:11:02.465 --> 00:11:03.595\nThis is the important part.\n\n217\n00:11:03.595 --> 00:11:08.845\nThis zombie that I'm using needs\nto actually be an idle machine.\n\n218\n00:11:08.845 --> 00:11:14.115\nIt needs to be something that's not\nhaving a lot of connections through TCPS,\n\n219\n00:11:14.115 --> 00:11:16.390\nnot sending a lot of\ndata through the network.\n\n220\n00:11:16.390 --> 00:11:18.940\nIt's just sitting there idle.\n\n221\n00:11:18.940 --> 00:11:22.340\nAnd you're like wow,\nwhat computer just sits there idle?\n\n222\n00:11:22.340 --> 00:11:26.170\nCompany installs kiosks all\nthe time at night who's using them?\n\n223\n00:11:26.170 --> 00:11:27.164\nNobody, right?\n\n224\n00:11:27.164 --> 00:11:28.410\nThey're not being used.\n\n225\n00:11:28.410 --> 00:11:31.368\n>> So, things that Titus sits in it,\nhe's never very busy.\n\n226\n00:11:31.368 --> 00:11:33.640\n>> Does absolutely nothing, right.\n\n227\n00:11:33.640 --> 00:11:36.230\nTitus machine is a perfect target for\na zombie, right?\n\n228\n00:11:36.230 --> 00:11:39.120\nThis is exactly what,\nbecause it never gets touched at all.\n\n229\n00:11:39.120 --> 00:11:41.270\n>> And\nwhat happens if that machine is busy?\n\n230\n00:11:41.270 --> 00:11:42.970\nWhat problems does that cause?\n\n231\n00:11:42.970 --> 00:11:44.240\n>> That's the great question Mike.\n\n232\n00:11:44.240 --> 00:11:46.920\nMike is on par, he's on the ball,\nhe knows exactly what's going on here.\n\n233\n00:11:46.920 --> 00:11:51.780\nIf the machine is busy,\nI send it this SYN-ACK.\n\n234\n00:11:51.780 --> 00:11:53.730\nAnd it responds, here's my counter.\n\n235\n00:11:53.730 --> 00:11:55.970\nWell, let's just say for the sake of\nargument, I send another SYN-ACK.\n\n236\n00:11:55.970 --> 00:11:59.320\nI says, I wanna see the counter again and\nit's incremented by seven.\n\n237\n00:12:00.860 --> 00:12:06.780\nWell, now it's gonna blow away my ability\nto exploit the fact that increases by one.\n\n238\n00:12:06.780 --> 00:12:12.080\nI need it to be not busy so\nthat I can counts on it\n\n239\n00:12:12.080 --> 00:12:17.810\ngiving me certain amounts of incrimination\nWhen it comes to that IP ID counter.\n\n240\n00:12:17.810 --> 00:12:21.500\nI need to be able to,\nI need a predictable-\n\n241\n00:12:21.500 --> 00:12:22.640\n>> Yes, predictable, thank you.\n\n242\n00:12:22.640 --> 00:12:26.190\n>> Yes, cuz if it's sending a lot of\ntraffic to other, if it's somebody surfing\n\n243\n00:12:26.190 --> 00:12:30.830\nthe web, or hitting a file share,\nthat number starts getting thrown off and\n\n244\n00:12:30.830 --> 00:12:33.710\nnow you don't know what it's gonna be for\nthe next one cuz how busy is it?\n\n245\n00:12:33.710 --> 00:12:36.760\nDoes it stop with the fileshare,\njust going to lose that predictability and\n\n246\n00:12:36.760 --> 00:12:38.090\nthat's really what you need, right?\n\n247\n00:12:38.090 --> 00:12:42.560\n>> Exactly, Mike is already out of\nthe game, he's on top of this thing.\n\n248\n00:12:42.560 --> 00:12:43.690\nIf you lose the predictability,\n\n249\n00:12:43.690 --> 00:12:45.700\nthat is the word I was looking for,\nthe predictability.\n\n250\n00:12:45.700 --> 00:12:49.470\nYou need to be able to predict that this\nis either going to increase by one or\n\n251\n00:12:49.470 --> 00:12:50.990\nits going to increase by two.\n\n252\n00:12:50.990 --> 00:12:53.460\nIf it increases by one,\nthat's a certain result.\n\n253\n00:12:53.460 --> 00:12:55.399\nIf it increases by two,\nthat's another result.\n\n254\n00:12:56.530 --> 00:13:00.110\nBasically if you've noticed a little\npattern to what we do when we're scanning,\n\n255\n00:13:00.110 --> 00:13:01.340\nwe're looking for what?\n\n256\n00:13:01.340 --> 00:13:03.480\nOpen and closed ports.\n\n257\n00:13:03.480 --> 00:13:06.740\nSo if one increases by one,\nit's a closed port.\n\n258\n00:13:06.740 --> 00:13:09.090\nIf it increases by two, it's an open port.\n\n259\n00:13:09.090 --> 00:13:12.680\nThat is the key to the IP ID idle scan.\n\n260\n00:13:12.680 --> 00:13:15.830\nSo if we don't get that predictability\nWe're dead in the water.\n\n261\n00:13:15.830 --> 00:13:17.980\nWe need to move onto a better zombie host,\nokay?\n\n262\n00:13:17.980 --> 00:13:20.440\nSo, keep that in mind.\n\n263\n00:13:20.440 --> 00:13:24.050\nThe good thing is, again, this is a very\ngeneral idea of how this is working.\n\n264\n00:13:24.050 --> 00:13:26.920\nWe will get into more of the minutia\n\n265\n00:13:26.920 --> 00:13:31.430\nof what actually happens when we fire off\nan IP idle scan here in just a minute.\n\n266\n00:13:31.430 --> 00:13:34.940\nI just want you guys to\nunderstand the process first.\n\n267\n00:13:34.940 --> 00:13:37.500\nSo we get the counter,\nlet's move to step two for an open port.\n\n268\n00:13:38.900 --> 00:13:40.980\nThis is where we actually\ndo make a connection,\n\n269\n00:13:40.980 --> 00:13:45.080\nwell you don't make a connection but\nwe send data to our actual target machine.\n\n270\n00:13:45.080 --> 00:13:48.070\nWhat we do is we send a SYN packet, so\n\n271\n00:13:48.070 --> 00:13:51.880\nnotice I didn't color SYN here red\nlike everything under the attacker.\n\n272\n00:13:51.880 --> 00:13:56.134\nBecause it's a spoofed IP address.\n\n273\n00:13:56.134 --> 00:14:03.090\nIt's the IP address, so\nit's a spoofed IP address that it's this.\n\n274\n00:14:03.090 --> 00:14:06.150\nAnd since I already know what that\ncomputer is, I know its IP address,\n\n275\n00:14:06.150 --> 00:14:09.420\nI've scanned it, I've played around with\nit, I've all ready done some things with,\n\n276\n00:14:09.420 --> 00:14:14.130\nI know its IP and map will scan and\nspoof that IP address.\n\n277\n00:14:14.130 --> 00:14:17.812\nYou just tell it which one that you want\nit to spoof, so I know what it is, and\n\n278\n00:14:17.812 --> 00:14:20.691\nI'm gonna use that in my command\nwhen we fire off the scan.\n\n279\n00:14:20.691 --> 00:14:26.800\nSo it spoofs] that and it sends that but\nit's not a full on conversation, right?\n\n280\n00:14:26.800 --> 00:14:31.420\nAnd the data that it's getting is\nsaying it is coming from our zombie.\n\n281\n00:14:31.420 --> 00:14:34.050\nSo even if someone checks the logs,\nand they say,\n\n282\n00:14:34.050 --> 00:14:37.740\nwell, it was the zombie that did this,\nnot the guy.\n\n283\n00:14:37.740 --> 00:14:41.040\nThat's where I got the data from\ncuz that's what the packet says.\n\n284\n00:14:41.040 --> 00:14:43.350\nRight, there you go, so nicely done.\n\n285\n00:14:43.350 --> 00:14:45.540\nThank you Nmap for spoofing for us.\n\n286\n00:14:45.540 --> 00:14:48.040\nSo that's a sneaky bit there.\n\n287\n00:14:48.040 --> 00:14:52.940\nBut, what is the target gonna do sub set\nsees the data as coming from the zombie.\n\n288\n00:14:52.940 --> 00:14:54.250\nWho's gonna respond too?\n\n289\n00:14:54.250 --> 00:14:54.862\n>> The zombie.\n\n290\n00:14:54.862 --> 00:14:56.542\n>> The zombie, right?\n\n291\n00:14:56.542 --> 00:15:01.201\nSo the syn, connection initiator for\na TCP connection,\n\n292\n00:15:01.201 --> 00:15:04.290\ngoes, so what does it respond with?\n\n293\n00:15:04.290 --> 00:15:06.920\nSYN-ACK, to the zombie.\n\n294\n00:15:06.920 --> 00:15:11.140\nThe zombie then says,\nwhat are you doing, right?\n\n295\n00:15:11.140 --> 00:15:13.750\nJust like we did when we looked for\nthe counter and\n\n296\n00:15:13.750 --> 00:15:16.680\nit told us what the counter was,\nwe send it a SYN-ACK.\n\n297\n00:15:16.680 --> 00:15:22.010\nRespond with a RST plus inside\nof that RST is the counter.\n\n298\n00:15:22.010 --> 00:15:27.330\nIt says, well, I had another piece of\nconnection so I increase my counter,\n\n299\n00:15:27.330 --> 00:15:31.860\nby one, sends it back to the target.\n\n300\n00:15:31.860 --> 00:15:36.530\nYou're thinking,\nwell how do I get that from the target?\n\n301\n00:15:36.530 --> 00:15:37.420\nWell, we don't.\n\n302\n00:15:37.420 --> 00:15:39.440\nWe don't, cause we don't need to.\n\n303\n00:15:39.440 --> 00:15:41.890\nThe zombie is gonna do the work for\nus as it does.\n\n304\n00:15:41.890 --> 00:15:42.760\nLet's move to step three.\n\n305\n00:15:44.180 --> 00:15:48.586\nSo remember, we had the encounter\nhas increased by one so far, but\n\n306\n00:15:48.586 --> 00:15:51.906\nthen we sent another\nSYN-ACK back to the zombie.\n\n307\n00:15:51.906 --> 00:15:54.686\nWhat does the zombie do\nwhen it receives SYN-ACKs,\n\n308\n00:15:54.686 --> 00:15:58.492\nincreases the counter and sends the RST\nwith that counter inside of it.\n\n309\n00:15:58.492 --> 00:16:02.729\nSo now it's increased by two And\nsent that back to us.\n\n310\n00:16:02.729 --> 00:16:07.877\nWe see that it's increased by two,\nwe deduced the port is open.\n\n311\n00:16:07.877 --> 00:16:09.890\nRight, ah-ha, so\n\n312\n00:16:09.890 --> 00:16:14.740\nwe've only really talked and finagled\nwith the zombie, and very little, and\n\n313\n00:16:14.740 --> 00:16:17.990\nthat's what we call a blind scan,\ncuz we're not scanning, the zombie is.\n\n314\n00:16:17.990 --> 00:16:21.230\nIt has deduced that that port is open,\nand sent us that.\n\n315\n00:16:21.230 --> 00:16:25.240\nAnd we've figured out that information\nby the counter increasing.\n\n316\n00:16:25.240 --> 00:16:28.420\nAgain, the importance of\nthe idleness of the zombie.\n\n317\n00:16:28.420 --> 00:16:29.940\nThat's extremely important.\n\n318\n00:16:29.940 --> 00:16:31.800\nBecause if like Mike says,\na guy jumps on and\n\n319\n00:16:31.800 --> 00:16:35.500\nstarts surfing the web,\nall of a sudden it's increased by 7,000.\n\n320\n00:16:35.500 --> 00:16:39.990\nOkay, that's not an idle machine at all,\nit's doing some business.\n\n321\n00:16:39.990 --> 00:16:41.364\nSo you wanna move on to another target.\n\n322\n00:16:41.364 --> 00:16:46.374\nYou gotta pick a good zombie but\nonce you find one they're great because\n\n323\n00:16:46.374 --> 00:16:51.400\nyou can continue to use them as much\nas you want to do scans such as these.\n\n324\n00:16:51.400 --> 00:16:53.370\nSo that's how we figure out an open port.\n\n325\n00:16:53.370 --> 00:16:55.720\nClosed port, very similar.\n\n326\n00:16:55.720 --> 00:17:00.720\nSo in the SYN-ACK, we get the IPID\ncalendar back with the RST.\n\n327\n00:17:00.720 --> 00:17:06.140\nWe move to step 2, again, not too\ndifferent except for one little spot.\n\n328\n00:17:07.260 --> 00:17:09.370\nThe RST goes and what does the zombie do?\n\n329\n00:17:09.370 --> 00:17:14.480\nThe zombie doesn't reply because what\ndo RST compliant computers do when\n\n330\n00:17:14.480 --> 00:17:16.460\nthey receive random RSTs?\n\n331\n00:17:16.460 --> 00:17:17.528\nThey ignore them.\n\n332\n00:17:17.528 --> 00:17:23.144\nAnd so, you'll notice also I put here\na filter host will not perform this step,\n\n333\n00:17:23.144 --> 00:17:26.600\nit'll just simply drop the packet,\nand then you know what?\n\n334\n00:17:26.600 --> 00:17:30.560\nIt'll show up as filtered in\nthe state when your nmap scan.\n\n335\n00:17:30.560 --> 00:17:33.180\nSo, you just know, okay,\nthere's nothing happened.\n\n336\n00:17:33.180 --> 00:17:34.440\nThat's gotta be a filtered port and\n\n337\n00:17:34.440 --> 00:17:36.840\nthe machine is not on or\nsomething to that effect.\n\n338\n00:17:36.840 --> 00:17:41.010\nIt's not responding in any way, shape or\nform, so you just be aware of that.\n\n339\n00:17:41.010 --> 00:17:47.447\nSo no response, no response also means no\nincrementation of the IPID counter, right?\n\n340\n00:17:47.447 --> 00:17:49.870\n>> Mm-hm.\n>> So, we're gonna do what again?\n\n341\n00:17:49.870 --> 00:17:53.860\nWe're gonna send ourselves\nanother little lovely SYN-ACK.\n\n342\n00:17:53.860 --> 00:17:56.730\nAnd so, I'm only gonna increase it by 1,\nbecause we SYN-ACKed it.\n\n343\n00:17:56.730 --> 00:17:57.740\nThat's a fun word.\n\n344\n00:17:57.740 --> 00:17:58.682\nWe SYN-ACKed it.\n\n345\n00:17:58.682 --> 00:18:00.123\n>> [LAUGH]\n>> No, I just verb.\n\n346\n00:18:00.123 --> 00:18:02.362\n>> [LAUGH]\n>> A protocol flag.\n\n347\n00:18:02.362 --> 00:18:04.700\n>> [LAUGH]\n>> We SYN-ACKed it.\n\n348\n00:18:04.700 --> 00:18:06.150\nIt RSTed us.\n\n349\n00:18:06.150 --> 00:18:09.490\nAnd of course it increased\nits counter by one this time,\n\n350\n00:18:09.490 --> 00:18:11.130\nletting us know that port is closed.\n\n351\n00:18:11.130 --> 00:18:15.010\nSo that's how we determine what ports\nare open, what ports are closed.\n\n352\n00:18:15.010 --> 00:18:20.702\nUsing our zombie, you're like okay,\nsweet, this looks awesome.\n\n353\n00:18:20.702 --> 00:18:22.026\nLet's do it, right?\n\n354\n00:18:22.026 --> 00:18:24.183\n>> Let's do it.\n>> Let's do it.\n\n355\n00:18:24.183 --> 00:18:30.450\nI do want to let you know, remember\nthe one good thing, pick a good zombie.\n\n356\n00:18:30.450 --> 00:18:32.030\nAnd here's how you can pick a good zombie,\n\n357\n00:18:32.030 --> 00:18:35.130\nyou need to know a few things\nabout what makes a good zombie.\n\n358\n00:18:35.130 --> 00:18:38.697\nAnd let's jump to my, yeah,\nwe're already up here.\n\n359\n00:18:38.697 --> 00:18:40.360\nI'm out of the game here.\n\n360\n00:18:40.360 --> 00:18:43.734\nI got my terminal up here.\n\n361\n00:18:43.734 --> 00:18:48.000\nFirst thing I'm probably gonna wanna do is\njust scan the network looking for hosts.\n\n362\n00:18:48.000 --> 00:18:51.183\nGood thing is,\nis I've got a smaller network here and\n\n363\n00:18:51.183 --> 00:18:54.317\nthat's gonna make it easy for\nus to discern things.\n\n364\n00:18:54.317 --> 00:18:58.498\nSo if I do something like, let's just see,\n\n365\n00:18:58.498 --> 00:19:03.244\nlike we did back in the first\ncouple of shows here,\n\n366\n00:19:03.244 --> 00:19:06.747\nwe just do an S N and then 192.1,\n\n367\n00:19:06.747 --> 00:19:11.614\nthat's my network, here's 219.1 /24.\n\n368\n00:19:11.614 --> 00:19:15.690\nOr it doesn't matter what the last IP\nis because you put the sider notation,\n\n369\n00:19:15.690 --> 00:19:18.360\nit just says that's that network.\n\n370\n00:19:18.360 --> 00:19:19.020\nAnd you'll recall that.\n\n371\n00:19:19.020 --> 00:19:25.270\nSo I can check that, And\nthere we go, let it fire away.\n\n372\n00:19:25.270 --> 00:19:30.240\nIt's gonna find any host on that network,\nso let's very quickly done,\n\n373\n00:19:30.240 --> 00:19:32.870\nnicely nicely, let's see here.\n\n374\n00:19:32.870 --> 00:19:38.425\nWe've got 135, that's our metasploitable\nmachine, that's gonna be our target.\n\n375\n00:19:38.425 --> 00:19:39.402\nLook, there's another one.\n\n376\n00:19:39.402 --> 00:19:44.321\n138, here's .254 and .1.\n\n377\n00:19:44.321 --> 00:19:48.030\nWell I know I'm .1, and\nby coincidence because I'm running VMware.\n\n378\n00:19:48.030 --> 00:19:52.670\nI also know that I'm also .254 cuz\nit's kind of like the virtual network\n\n379\n00:19:52.670 --> 00:19:53.710\nswitch or whatever.\n\n380\n00:19:53.710 --> 00:19:56.400\nThat's working even\nthough it's my machine.\n\n381\n00:19:56.400 --> 00:19:59.070\nBut .1 is my actual IP address for\nthis network.\n\n382\n00:19:59.070 --> 00:20:01.600\nSo really only have three IP addresses.\n\n383\n00:20:01.600 --> 00:20:05.080\nOne's my target, one's another computer.\n\n384\n00:20:05.080 --> 00:20:07.290\nLet's jump over to the target real quick.\n\n385\n00:20:07.290 --> 00:20:11.210\nAnd let's say that target\nguy has done his homework.\n\n386\n00:20:11.210 --> 00:20:16.375\nHe's doing sudo nmap,\nfirst let's not nmap, what am I doing?\n\n387\n00:20:16.375 --> 00:20:18.980\niptables, let's take\na look at the list here.\n\n388\n00:20:20.330 --> 00:20:23.255\nAdmin, everything's clear.\n\n389\n00:20:23.255 --> 00:20:24.180\nWe gotta fix that.\n\n390\n00:20:24.180 --> 00:20:29.110\nI gotta block, I wanna make a safe\nIP range and a dirty IP range.\n\n391\n00:20:29.110 --> 00:20:33.003\nSo people that I'm gonna allow to connect\nto this computer for certain services\n\n392\n00:20:33.003 --> 00:20:36.852\nare gonna go through this range, and\nthe others are gonna go through another.\n\n393\n00:20:36.852 --> 00:20:38.436\nHopefully, I can remember how to do this.\n\n394\n00:20:38.436 --> 00:20:40.770\n>> [LAUGH]\n>> Because I don't do it all the time.\n\n395\n00:20:40.770 --> 00:20:42.310\nLet me see if I can remember here.\n\n396\n00:20:42.310 --> 00:20:46.993\nBut basically, I wanna say sudo\n\n397\n00:20:46.993 --> 00:20:52.030\niptables -a input chain -p tcp.\n\n398\n00:20:52.030 --> 00:20:56.800\nAnd we'll say, I think it's -m.\n\n399\n00:20:56.800 --> 00:21:01.400\nAnd it is iprange.\n\n400\n00:21:01.400 --> 00:21:08.260\niprange, and then,\nit is --src range, right?\n\n401\n00:21:08.260 --> 00:21:13.280\nYeah, I think that's a source address.\n\n402\n00:21:14.950 --> 00:21:17.300\nI can't remember.\n\n403\n00:21:17.300 --> 00:21:18.185\nLet me nmap.\n\n404\n00:21:18.185 --> 00:21:19.830\nnmap, I got him up on the brain.\n\n405\n00:21:20.970 --> 00:21:23.540\nMan IP tables, this will also help you.\n\n406\n00:21:23.540 --> 00:21:24.737\nThe man pages are a wonderful thing.\n\n407\n00:21:24.737 --> 00:21:25.370\n>> Mm-hm.\n\n408\n00:21:25.370 --> 00:21:28.460\n>> I can remember this\ncommand here real quickly.\n\n409\n00:21:28.460 --> 00:21:29.800\nI'm gonna look for it.\n\n410\n00:21:29.800 --> 00:21:31.584\nIt will be --ssrc.\n\n411\n00:21:31.584 --> 00:21:34.921\n[SOUND] Let's see here.\n\n412\n00:21:34.921 --> 00:21:39.030\nAnd for the next one, there it is.\n\n413\n00:21:39.030 --> 00:21:40.276\nA search range, that's what it is.\n\n414\n00:21:40.276 --> 00:21:41.530\nIP to IP.\n\n415\n00:21:41.530 --> 00:21:42.830\nPerfect.\nLet's get out of here,\n\n416\n00:21:42.830 --> 00:21:43.974\nI'm gonna skip that command.\n\n417\n00:21:43.974 --> 00:21:48.743\nGoing to sudo Iptables -I\n\n418\n00:21:48.743 --> 00:21:53.727\nINPUT -p tcp and then -m,\n\n419\n00:21:53.727 --> 00:21:57.845\nwhich is iprange, and\n\n420\n00:21:57.845 --> 00:22:03.072\nthen it's --RC-range.\n\n421\n00:22:03.072 --> 00:22:07.029\nAnd then whatever the range of\nthe IP addresses that you need.\n\n422\n00:22:07.029 --> 00:22:10.860\nI'm just gonna make like the 130s safe.\n\n423\n00:22:10.860 --> 00:22:13.870\nAnybody in the 130s is good,\nthey can connect to each other.\n\n424\n00:22:13.870 --> 00:22:18.570\nSo I'll say 192.168.219.130 through 192,\nyes you have to type\n\n425\n00:22:18.570 --> 00:22:23.704\nthe whole stinking thing out,\nit is horrible.\n\n426\n00:22:23.704 --> 00:22:30.806\n168.219.139 and\n\n427\n00:22:30.806 --> 00:22:35.921\nthen say -j ACCEPT.\n\n428\n00:22:35.921 --> 00:22:38.602\nAll right, what did I do wrong here?\n\n429\n00:22:38.602 --> 00:22:44.840\nCouldn't load target\nbecause I spelled it wrong.\n\n430\n00:22:44.840 --> 00:22:47.130\n>> [LAUGH]\n>> Spelling thing.\n\n431\n00:22:47.130 --> 00:22:50.330\nI did go to third grade everybody,\nso let's try that again.\n\n432\n00:22:50.330 --> 00:22:52.370\nEPTX, does that look right to you Mike?\n\n433\n00:22:52.370 --> 00:22:53.050\n>> That looks better.\n\n434\n00:22:53.050 --> 00:22:53.590\n>> All right.\n\n435\n00:22:53.590 --> 00:22:54.723\nOkay, yeah that works a whole lot better.\n\n436\n00:22:54.723 --> 00:22:55.420\n>> [LAUGH]\n>> Now I'm gonna\n\n437\n00:22:55.420 --> 00:22:59.880\nchange it to a default deny for\nthe policy, for that chain, just so\n\n438\n00:22:59.880 --> 00:23:03.240\nthat everything gets dropped other than\nanything that comes from that network.\n\n439\n00:23:03.240 --> 00:23:08.057\nSo I'm just gonna say sudo\niptables -p INPUT -j,\n\n440\n00:23:08.057 --> 00:23:11.990\nall right, yeah I think it's just drop.\n\n441\n00:23:11.990 --> 00:23:13.073\nI don't know if I need the -j.\n\n442\n00:23:13.073 --> 00:23:15.080\nYeah, I don't need to jump to the drop.\n\n443\n00:23:15.080 --> 00:23:16.430\nI just put drop.\n\n444\n00:23:16.430 --> 00:23:20.280\nBoom, so\nnow anything let's jump back over here.\n\n445\n00:23:20.280 --> 00:23:23.260\nLet's just try a simple scan right?\n\n446\n00:23:23.260 --> 00:23:27.653\nLet's try sudo nmap --ss\n\n447\n00:23:27.653 --> 00:23:33.765\n192.168.219.135.\n\n448\n00:23:33.765 --> 00:23:34.963\nThat's my target.\n\n449\n00:23:34.963 --> 00:23:36.902\nNormally, I would not do this, but\n\n450\n00:23:36.902 --> 00:23:41.190\nI'm doing this to show you guys that\nit actually is being firewalled.\n\n451\n00:23:41.190 --> 00:23:42.947\nAll right,\nbecause we're trying to be stealthy here.\n\n452\n00:23:42.947 --> 00:23:47.840\nAnd actually running a scan against\nthe target machine, this is stealthy, but\n\n453\n00:23:47.840 --> 00:23:49.164\nit can still show up.\n\n454\n00:23:49.164 --> 00:23:50.168\nSo, it's not.\n\n455\n00:23:50.168 --> 00:23:52.153\nStealthy is what we're trying to be.\n\n456\n00:23:52.153 --> 00:23:54.812\nLet's just run that guy real quick,\nsee what happens.\n\n457\n00:23:54.812 --> 00:23:56.210\nThis might take a minute.\n\n458\n00:23:56.210 --> 00:23:59.610\nHopefully it doesn't take too long,\njust gets denied, denied, denied.\n\n459\n00:23:59.610 --> 00:24:05.190\nThe good thing about NMAP is that\nit does try quite a few times to\n\n460\n00:24:05.190 --> 00:24:09.150\nactually see if it's,\nmaybe you were just busy.\n\n461\n00:24:09.150 --> 00:24:12.580\nMaybe you were not at the door,\nyou were in the shower, I'll try it again.\n\n462\n00:24:12.580 --> 00:24:15.110\nCuz it does, it's very consistent.\n\n463\n00:24:15.110 --> 00:24:17.700\nThat's the difference between NMAP and\nother scanners.\n\n464\n00:24:17.700 --> 00:24:23.710\nOther scanners may be faster, but\nthey're not as consistent and detailed.\n\n465\n00:24:23.710 --> 00:24:29.580\nAnd the results that you get from it,\nyou can almost bank on because of how\n\n466\n00:24:29.580 --> 00:24:33.970\nintensive it is and it's very persistent\nto make sure that it is consistent.\n\n467\n00:24:33.970 --> 00:24:37.190\nBut who knows, here 1000 points\nare scanned and are filtered.\n\n468\n00:24:37.190 --> 00:24:39.320\nI have no access to this guy.\n\n469\n00:24:39.320 --> 00:24:41.120\nHow in the world am I gonna get at that?\n\n470\n00:24:41.120 --> 00:24:44.050\nWell what about the other guy, right?\n\n471\n00:24:44.050 --> 00:24:44.680\nWhat's he doing?\n\n472\n00:24:44.680 --> 00:24:45.540\nLet's scan him.\n\n473\n00:24:45.540 --> 00:24:46.750\nLet's scan 138.\n\n474\n00:24:46.750 --> 00:24:50.510\nMaybe he doesn't have such\nstrict firewall rules.\n\n475\n00:24:50.510 --> 00:24:51.950\nAnd he does not.\n\n476\n00:24:51.950 --> 00:24:55.780\nActually, he has a few ports open.\n\n477\n00:24:55.780 --> 00:24:56.320\nHe's got 135, 139, 445.\n\n478\n00:24:56.320 --> 00:24:58.160\nI like that.\n\n479\n00:24:58.160 --> 00:24:59.740\n>> I'm thinking zombie candidate.\n\n480\n00:24:59.740 --> 00:25:00.400\n>> Yes sir.\n\n481\n00:25:00.400 --> 00:25:03.820\nWe've got prime zombie material here.\n\n482\n00:25:03.820 --> 00:25:05.650\nAnd I know it's even better\nprime zombie material.\n\n483\n00:25:05.650 --> 00:25:07.780\nBut it might not be.\n\n484\n00:25:07.780 --> 00:25:10.630\nWe do have a machine here,\nfour out of five, but\n\n485\n00:25:10.630 --> 00:25:14.110\nit might not work cuz you\nstill need some specifics.\n\n486\n00:25:14.110 --> 00:25:17.720\nSo let's run some OS detection against it.\n\n487\n00:25:17.720 --> 00:25:21.619\nWe haven't talked about OS\ndetection a whole lot yet,\n\n488\n00:25:21.619 --> 00:25:26.451\nbut OS detection is an invaluable help for\nus on this particular scan\n\n489\n00:25:26.451 --> 00:25:31.705\nbecause we need to see how it handles\nthe incrementation for its IP ID.\n\n490\n00:25:31.705 --> 00:25:32.220\nRight?\n\n491\n00:25:32.220 --> 00:25:33.120\nSo let's take a look at that.\n\n492\n00:25:33.120 --> 00:25:35.670\nSo let's run this guy here.\n\n493\n00:25:35.670 --> 00:25:38.200\nWe don't need to actually\nrun a port scan against it,\n\n494\n00:25:38.200 --> 00:25:42.010\nwe just need to do dash o,\nwhich is OS detection.\n\n495\n00:25:42.010 --> 00:25:46.190\nAnd I'm gonna add a dash v for verbosity,\ngive me a little more information.\n\n496\n00:25:46.190 --> 00:25:47.716\nAs it works through it.\n\n497\n00:25:47.716 --> 00:25:51.820\nAnd yeah, let's see how that works out.\n\n498\n00:25:51.820 --> 00:25:54.370\nWe'll see what happens here.\n\n499\n00:25:54.370 --> 00:25:58.200\nOff it goes,\nit's going a bunch of voodoo that it does.\n\n500\n00:25:58.200 --> 00:25:59.780\nAnd here we go.\n\n501\n00:26:01.350 --> 00:26:03.240\nDown here, yes.\n\n502\n00:26:03.240 --> 00:26:06.390\nThat is the magic that we're looking for.\n\n503\n00:26:06.390 --> 00:26:10.720\nIP ID sequence generation is incremental.\n\n504\n00:26:10.720 --> 00:26:12.480\nThat is the important part.\n\n505\n00:26:12.480 --> 00:26:18.280\nMake sure that it says incremental cuz\nif it's not then you're out of luck.\n\n506\n00:26:18.280 --> 00:26:20.320\nYou've got a bad zombie,\nit's not going to work very well.\n\n507\n00:26:20.320 --> 00:26:24.280\nIt will even tell you that if you try to\nuse a bad zombie when you run the zombie\n\n508\n00:26:24.280 --> 00:26:26.540\nscan, so keep that in mind.\n\n509\n00:26:26.540 --> 00:26:28.520\nYou need to be looking for\nthat incremental.\n\n510\n00:26:28.520 --> 00:26:29.900\nIt's a very important thing.\n\n511\n00:26:29.900 --> 00:26:34.100\nBut now that we know we've got a good\nzombie, let's attack that host.\n\n512\n00:26:34.100 --> 00:26:35.540\nLet's see here.\n\n513\n00:26:35.540 --> 00:26:41.590\nLet me clear the screen off a little bit\nhere, and we've already run a sent scan.\n\n514\n00:26:41.590 --> 00:26:45.580\nSo we know that 135.139 And 445 are open.\n\n515\n00:26:45.580 --> 00:26:49.510\nThe IP ID idle scan uses\nport 80 by default,\n\n516\n00:26:49.510 --> 00:26:51.810\nbecause typically you're running this\nagainst some sort of web server.\n\n517\n00:26:51.810 --> 00:26:56.870\nSo, a web server sitting around that's\nnot doing much, maybe just a junky\n\n518\n00:26:56.870 --> 00:27:02.410\nweb server on that has an Internet\npresence is a great zombie, right?\n\n519\n00:27:02.410 --> 00:27:07.770\nNobody's going to Mike's Dog Hats.com\nwith any kind of frequency so\n\n520\n00:27:07.770 --> 00:27:09.680\nespecially in the middle of the night.\n\n521\n00:27:09.680 --> 00:27:11.590\nYou're going to Ronnie's Hats for Cats.\n\n522\n00:27:11.590 --> 00:27:13.860\nThey don't care about Ronnie's\nstuff whatsoever, right.\n\n523\n00:27:13.860 --> 00:27:16.440\nThat's the hotness, it's Ronnie's site.\n\n524\n00:27:16.440 --> 00:27:17.730\nMike's just sitting there doing nothing.\n\n525\n00:27:17.730 --> 00:27:18.870\nHe ain't making a dime.\n\n526\n00:27:18.870 --> 00:27:20.282\nDoggone.\n>> Yeah, I know, poor Mike.\n\n527\n00:27:20.282 --> 00:27:21.380\n[LAUGH]\n>> [LAUGH]\n\n528\n00:27:21.380 --> 00:27:23.030\n>> So he's a good zombie.\n\n529\n00:27:23.030 --> 00:27:24.740\nSo that's typically why it's port 80 but\n\n530\n00:27:24.740 --> 00:27:29.710\nyou can pick any open port you want\njust by defining it in the scan.\n\n531\n00:27:29.710 --> 00:27:33.500\nSo let's do that, we've got our good\nzombie, we know what our target is,\n\n532\n00:27:33.500 --> 00:27:35.320\nwe're ready to launch the attack.\n\n533\n00:27:35.320 --> 00:27:42.120\nSo, we will do it,\nwe will say sudo mf, obviously, NMAP.\n\n534\n00:27:42.120 --> 00:27:44.833\nAnd we'll say -Pn.\n\n535\n00:27:44.833 --> 00:27:48.360\nAnd this, if you remember, stops pings.\n\n536\n00:27:48.360 --> 00:27:52.240\nWe don't wanna send pings because\nwe're trying to be stealthy here.\n\n537\n00:27:52.240 --> 00:27:54.350\nWe don't want it to reach out and\n\n538\n00:27:54.350 --> 00:27:56.850\ntalk to people we don't want\nit to reach out and talk to.\n\n539\n00:27:56.850 --> 00:27:59.590\nSo I just say just don't ping,\ndon't worry about that.\n\n540\n00:27:59.590 --> 00:28:03.828\nI'm gonna give me some verbosity as well,\ncuz I like verbosity.\n\n541\n00:28:03.828 --> 00:28:08.100\nAnd then -si\n\n542\n00:28:08.100 --> 00:28:12.770\nis the IP ID idle scan flag or\nswitch for NMAP.\n\n543\n00:28:12.770 --> 00:28:16.518\nFirst thing we're gonna give\nit is our zombie, all right?\n\n544\n00:28:16.518 --> 00:28:24.720\nSo that's 192.16.8.209.138, and\nwe are also gonna give it a port\n\n545\n00:28:24.720 --> 00:28:29.600\nwhich is, let's do 135,\nI think 135 was open, right Mike?\n\n546\n00:28:29.600 --> 00:28:30.580\n>> 135?\nIt should be.\n\n547\n00:28:30.580 --> 00:28:34.940\n>> Alright, so 135 is open,\nthat's the port I'm gonna choose, and\n\n548\n00:28:34.940 --> 00:28:37.175\nthen I gotta give it the actual target.\n\n549\n00:28:37.175 --> 00:28:44.770\n192.16.8.219.135, and\nI think we are ready to rock and roll.\n\n550\n00:28:44.770 --> 00:28:45.920\nHit return.\n\n551\n00:28:45.920 --> 00:28:46.900\nOff it goes.\n\n552\n00:28:46.900 --> 00:28:51.740\nI like to give the verbosity because it\nshows us a lot that's happening here.\n\n553\n00:28:51.740 --> 00:28:55.790\nLook so it says scanning 135 and\n\n554\n00:28:55.790 --> 00:28:58.810\ninitiating IP idle scan\nagainst metaexploitable.\n\n555\n00:28:58.810 --> 00:29:02.350\nAt this time, IP scan using zombie and\n\n556\n00:29:02.350 --> 00:29:05.060\nthen there's the IP address\nof the zombie host.\n\n557\n00:29:05.060 --> 00:29:09.060\nAnd even the port number that we used\nbecause the class is incremental.\n\n558\n00:29:09.060 --> 00:29:13.230\nIts all working,\nit's discovering open ports, and\n\n559\n00:29:13.230 --> 00:29:16.900\nif that metaexploitable machine\nis running any kind of logging,\n\n560\n00:29:16.900 --> 00:29:21.700\nany kind of even just standard TCP\nlogging, what connections have I made?\n\n561\n00:29:21.700 --> 00:29:25.230\nAnd people wanna look at that output,\nthey could go in and see that.\n\n562\n00:29:25.230 --> 00:29:31.240\nBut it wouldn't be coming from us because\nit is coming from that guy right there.\n\n563\n00:29:31.240 --> 00:29:32.000\nVery cool stuff.\n\n564\n00:29:32.000 --> 00:29:36.840\nAs soon as this is done, it should,\nusually this scan on a network like ours,\n\n565\n00:29:36.840 --> 00:29:38.650\njust takes about a minute,\nminute and a half.\n\n566\n00:29:38.650 --> 00:29:39.900\nNot too terribly long.\n\n567\n00:29:39.900 --> 00:29:43.266\nGives me enough time to sip\nmy lovely beverage from this\n\n568\n00:29:43.266 --> 00:29:45.711\nwonderful IT Pro TV glass service cup.\n\n569\n00:29:45.711 --> 00:29:50.790\n>> [LAUGH] It is a really neat concept\nthough, the fact that we are able\n\n570\n00:29:50.790 --> 00:29:55.480\nto perform a scan against a target machine\nwithout actually contacting the target.\n\n571\n00:29:55.480 --> 00:30:02.010\nLike you said, avoid any type of login,\nhopefully, being detected.\n\n572\n00:30:02.010 --> 00:30:02.840\nAnd as you said,\n\n573\n00:30:02.840 --> 00:30:07.010\nthe zombie is gonna be the one that\nis gonna show up in log files.\n\n574\n00:30:07.010 --> 00:30:08.350\n>> Right.\n>> And the other thing is too,\n\n575\n00:30:08.350 --> 00:30:12.240\nit might be where we can't, as you were\nsaying, can't get directly to that node\n\n576\n00:30:12.240 --> 00:30:16.640\nthat we're trying to scan because of\nfirewall rules blocking our IP range,\n\n577\n00:30:16.640 --> 00:30:19.820\nyou know that kind of traffic coming\nfrom the outside for example.\n\n578\n00:30:19.820 --> 00:30:23.740\nWe can compromise our web server, sort of\nbouncing this scan off the web server,\n\n579\n00:30:23.740 --> 00:30:26.720\nwell the web server is part of the\norganization, it's probably allowed to go\n\n580\n00:30:26.720 --> 00:30:29.690\nthrough that firewall and talk to\nthis node that we're trying to scan.\n\n581\n00:30:29.690 --> 00:30:30.890\n>> That's exactly right.\n\n582\n00:30:30.890 --> 00:30:32.350\n>> So a lot of benefits to\ndoing a scan like this.\n\n583\n00:30:32.350 --> 00:30:35.730\n>> Yeah, and as you see,\nhere it's done, didn't take too long,\n\n584\n00:30:35.730 --> 00:30:38.460\nwe did it in 76.38 seconds.\n\n585\n00:30:38.460 --> 00:30:40.510\nLook at NMAP rocking and rolling there.\n\n586\n00:30:40.510 --> 00:30:45.240\nAnd we're getting all the wonderful\nports that we normally would, but\n\n587\n00:30:45.240 --> 00:30:46.960\nwe're not holding a smoking gun.\n\n588\n00:30:46.960 --> 00:30:48.350\nOur zombie is.\n\n589\n00:30:48.350 --> 00:30:49.920\nThat's just what Mike was talking about.\n\n590\n00:30:49.920 --> 00:30:52.660\nWe have no fingerprint on this whatsoever.\n\n591\n00:30:52.660 --> 00:30:55.150\nThey would have to\ninvestigate the zombie and\n\n592\n00:30:55.150 --> 00:30:58.090\nsee connections coming from us from there.\n\n593\n00:30:58.090 --> 00:31:02.570\nBut you'd have to be a good, it would be\nlike wow this is a key loss maybe someone\n\n594\n00:31:02.570 --> 00:31:06.280\nran NMAP from this and scanned our network\nand that's why we're getting this.\n\n595\n00:31:06.280 --> 00:31:07.100\nThey wouldnt know.\n\n596\n00:31:07.100 --> 00:31:10.660\nIt would take a really good investigator\nto figure out that that's exactly what\n\n597\n00:31:10.660 --> 00:31:11.370\nwas happening.\n\n598\n00:31:11.370 --> 00:31:15.880\nPlus there would need to be some sort of\nlogging on that machine maybe not because\n\n599\n00:31:15.880 --> 00:31:20.550\nof it's nature but we got all of\nour ports showing us back up and\n\n600\n00:31:20.550 --> 00:31:24.020\nwe've got a lot of great open ports\nthere and we never had to touch it.\n\n601\n00:31:25.200 --> 00:31:28.440\nI did give you the general\noverview on how this works.\n\n602\n00:31:28.440 --> 00:31:33.340\nI ran another scan earlier back when I was\nbuilding this, to show you good people.\n\n603\n00:31:33.340 --> 00:31:37.012\nTo run a real scan against the network\ntakes a little bit of time,\n\n604\n00:31:37.012 --> 00:31:39.812\nespecially when you're\nlooking at the output.\n\n605\n00:31:39.812 --> 00:31:42.402\nYou can add this line\nto any of your scans,\n\n606\n00:31:42.402 --> 00:31:44.777\nas this one helps very specifically.\n\n607\n00:31:44.777 --> 00:31:47.798\nWe used Wire Shark in the past to\nshow you the data passing through and\n\n608\n00:31:47.798 --> 00:31:50.034\nthe packets and\nall the cool stuff inside of that.\n\n609\n00:31:50.034 --> 00:31:53.453\nSo you can actually do that\nwith nmap to an extent as well,\n\n610\n00:31:53.453 --> 00:31:56.070\nyou don't need Wireshark installed.\n\n611\n00:31:56.070 --> 00:32:02.825\nAll you have to do is add,\nI think I have to put it over here,\n\n612\n00:32:02.825 --> 00:32:08.690\n--packet-trace, if I'm not mistaken.\n\n613\n00:32:08.690 --> 00:32:11.410\nWhen you add that to it, look at\nall that data that's going through.\n\n614\n00:32:11.410 --> 00:32:13.640\nThese are all the actual packets\nthat are being passed and\n\n615\n00:32:13.640 --> 00:32:14.900\nit's doing it live at fire.\n\n616\n00:32:14.900 --> 00:32:17.634\nRight, so I'm just gonna kill that\ncuz it's giving me sea sickness.\n\n617\n00:32:17.634 --> 00:32:19.630\n>> [LAUGH]\n>> And\n\n618\n00:32:19.630 --> 00:32:22.720\nI've already captured all\nthe pertinent output for a scan, so\n\n619\n00:32:22.720 --> 00:32:26.900\nwe can walk through it really quickly and\nsee the detail of what's happening here.\n\n620\n00:32:26.900 --> 00:32:30.829\nSo I've got this little file,\nwhere did all the text file go?\n\n621\n00:32:30.829 --> 00:32:35.620\nThere we go, right here, I've even color\ncoded it for us to help with this.\n\n622\n00:32:35.620 --> 00:32:36.430\nLet me zoom in.\n\n623\n00:32:38.220 --> 00:32:42.778\nSo testing with the zombie,\nsix probes are sent.\n\n624\n00:32:42.778 --> 00:32:46.280\nSo initially and\nthat actually sent six probes.\n\n625\n00:32:46.280 --> 00:32:49.580\nRemember I was talking about earlier\nabout how nmap tries to be robust,\n\n626\n00:32:49.580 --> 00:32:50.470\nit tries to be consistent.\n\n627\n00:32:50.470 --> 00:32:54.300\nTries to make sure what it's telling you\nis what it's supposed to be telling you.\n\n628\n00:32:54.300 --> 00:32:55.690\nThat's why it sent six probes.\n\n629\n00:32:55.690 --> 00:32:59.290\nIt's verifying that this\nis an idle machine and\n\n630\n00:32:59.290 --> 00:33:02.110\nthat it is being incremented\nin the way that we need.\n\n631\n00:33:02.110 --> 00:33:07.058\nSo when we see these six probes,\nso here's a probe from\n\n632\n00:33:07.058 --> 00:33:12.080\n.1 to .138 our zombie, and\nthen it replied, a probe.\n\n633\n00:33:12.080 --> 00:33:13.450\nThen reply, a probe reply,\n\n634\n00:33:13.450 --> 00:33:17.510\nand you'll notice that each one\nof these increments by one.\n\n635\n00:33:17.510 --> 00:33:20.590\nLetting me know that's\nan actually an idle machine and\n\n636\n00:33:20.590 --> 00:33:24.130\nthe incrementation is as I need it.\n\n637\n00:33:24.130 --> 00:33:28.100\nSo, we know that the host\nis a good zombie.\n\n638\n00:33:28.100 --> 00:33:32.920\nThen it does the ID idle scan using\nthis zombie and the port that it uses.\n\n639\n00:33:32.920 --> 00:33:34.990\nSo in this scan, I use port 80.\n\n640\n00:33:34.990 --> 00:33:38.580\nAnd it says it's spoofs four packets.\n\n641\n00:33:38.580 --> 00:33:43.380\nThis is what you didn't get to see\ninside of my little diagram, right?\n\n642\n00:33:43.380 --> 00:33:45.980\nBecause it's a bit of too much\ninformation at that point in time.\n\n643\n00:33:45.980 --> 00:33:49.720\nActually spoofs four packets\nfrom the target to the zombie.\n\n644\n00:33:50.900 --> 00:33:51.730\nWhy is it do this?\n\n645\n00:33:51.730 --> 00:33:56.290\nTo verify that it will continue to\nincrement in the way that we want it to.\n\n646\n00:33:56.290 --> 00:34:00.190\nSo you'll notice it sends this four and\nthen it increments by four.\n\n647\n00:34:00.190 --> 00:34:04.270\nSo I think the last one was,\nyeah, there you go.\n\n648\n00:34:04.270 --> 00:34:04.940\nDing.\n\n649\n00:34:04.940 --> 00:34:07.000\nNow it did have this other\npacket that went in there,\n\n650\n00:34:07.000 --> 00:34:08.570\nso we actually solve by five.\n\n651\n00:34:08.570 --> 00:34:11.200\nBut it continued to increment\nin the way that we want, so\n\n652\n00:34:11.200 --> 00:34:14.070\nthere was a superfluous\npacket in this scan.\n\n653\n00:34:14.070 --> 00:34:16.750\nBut still incremented by one and\nthat's what we were looking for.\n\n654\n00:34:16.750 --> 00:34:18.570\nWe continued to be consistent.\n\n655\n00:34:18.570 --> 00:34:19.340\nWhere did it go?\n\n656\n00:34:19.340 --> 00:34:23.730\nSo now, we jump down to\nthe start of the idle scan.\n\n657\n00:34:23.730 --> 00:34:25.000\nHere it goes.\n\n658\n00:34:25.000 --> 00:34:30.208\nFrom 138, from port 80,\nto our target on port 80.\n\n659\n00:34:30.208 --> 00:34:32.999\nI was only targeting port 80,\nnot all ports here,\n\n660\n00:34:32.999 --> 00:34:36.690\nbecause that would increase the time\nphenomenally, it can anyway.\n\n661\n00:34:38.170 --> 00:34:43.470\nAnd then it sends another one on this port\nand there was a reply from this port.\n\n662\n00:34:43.470 --> 00:34:47.440\nAnd it increased by two, because\nthere were two probes, two sent back.\n\n663\n00:34:47.440 --> 00:34:48.090\nGood to go.\n\n664\n00:34:49.090 --> 00:34:49.920\nWe're all good.\n\n665\n00:34:49.920 --> 00:34:52.470\nAnd then we move down here,\nthe IP ID increased by two.\n\n666\n00:34:52.470 --> 00:34:54.530\nThe port is open or is it?\n\n667\n00:34:54.530 --> 00:34:58.370\nIt checks again,\nto make sure that it actually is open,\n\n668\n00:34:58.370 --> 00:35:01.470\nit wasn't just a flyer, right?\n\n669\n00:35:01.470 --> 00:35:04.550\nSome it just happened to happen and\nyou got lucky.\n\n670\n00:35:04.550 --> 00:35:06.370\nAnd you thought it was over and it's not.\n\n671\n00:35:06.370 --> 00:35:09.170\nIt wants consistent results,\nso it checks it again.\n\n672\n00:35:09.170 --> 00:35:14.072\nAnd as you can see,\nconsistent checking, right there.\n\n673\n00:35:14.072 --> 00:35:18.877\nFor every probe sent there\nis a proper response, so\n\n674\n00:35:18.877 --> 00:35:22.579\nthat's what we're looking for here.\n\n675\n00:35:22.579 --> 00:35:25.696\nAnd then it says that, here we go,\n\n676\n00:35:25.696 --> 00:35:30.337\ndiscovered port 80 is open and\nit runs very well.\n\n677\n00:35:30.337 --> 00:35:32.370\nSo there's a lot going\non behind the grasp.\n\n678\n00:35:32.370 --> 00:35:36.510\nEspecially when you send this\nout to multiple ports like what\n\n679\n00:35:36.510 --> 00:35:39.888\nwe did just a second ago,\nthere was a lot a ports that were open.\n\n680\n00:35:39.888 --> 00:35:43.210\nIt starts breaking them down to verify,\nbecause there's gonna be open ports,\n\n681\n00:35:43.210 --> 00:35:45.570\nthere's gonna be closed\nports in all of those.\n\n682\n00:35:45.570 --> 00:35:47.820\nSo it says okay, here's what I start with.\n\n683\n00:35:47.820 --> 00:35:49.050\nI got open ports and closed ports.\n\n684\n00:35:49.050 --> 00:35:51.070\nWell, lets brake it down into two chunks.\n\n685\n00:35:51.070 --> 00:35:54.770\nAnd then it gets open ports and closed\nports and breaks it down into four chunks.\n\n686\n00:35:54.770 --> 00:35:58.970\nAnd continues to filter it down for\nthat consistency sake until it\n\n687\n00:35:58.970 --> 00:36:02.950\nonly has open ports and\nclosed ports in a consistent manner.\n\n688\n00:36:02.950 --> 00:36:06.292\nThen it says these ports are filtered,\nthese ports are open and\n\n689\n00:36:06.292 --> 00:36:07.390\nhere is the output state.\n\n690\n00:36:07.390 --> 00:36:11.400\nAnd you get that consistency and\nwe never touch the machine.\n\n691\n00:36:11.400 --> 00:36:14.549\nWe are free and clear, clean as\na preacher's sheets, as they like to say.\n\n692\n00:36:14.549 --> 00:36:16.334\n>> [LAUGH]\n>> Right, we are good to go,\n\n693\n00:36:16.334 --> 00:36:18.203\n[INAUDIBLE] the driven snow.\n\n694\n00:36:18.203 --> 00:36:19.299\nNo one will ever suspect us.\n\n695\n00:36:19.299 --> 00:36:23.210\nSo Mike, that is an IP ID idle scan.\n\n696\n00:36:23.210 --> 00:36:24.860\nIn my opinion, very, very cool.\n\n697\n00:36:24.860 --> 00:36:25.520\n>> Absolutely.\n\n698\n00:36:25.520 --> 00:36:26.970\nIt's a really cool scan,\n\n699\n00:36:26.970 --> 00:36:30.840\nlike we used to talking about the fact\nthat you can be really stealthy.\n\n700\n00:36:30.840 --> 00:36:33.750\nTrying to scan that target machine and\nbouncing it off of that zombie.\n\n701\n00:36:33.750 --> 00:36:37.060\nAnd really cool explanation,\nDaniel, great diagrams and\n\n702\n00:36:37.060 --> 00:36:41.480\na great demonstration really breaking\nit down, it's a rather complex process.\n\n703\n00:36:41.480 --> 00:36:41.980\n>> It is.\n\n704\n00:36:43.510 --> 00:36:47.630\n>> Having a zombie, hitting that target,\ntrying to look at those, the IP IDs and\n\n705\n00:36:47.630 --> 00:36:51.750\ndetermine their incremental or\nhow they're going about incrementing.\n\n706\n00:36:51.750 --> 00:36:53.160\nA lot of pieces to it.\n\n707\n00:36:53.160 --> 00:36:54.520\nGreat explanation.\n\n708\n00:36:54.520 --> 00:36:55.460\nMade perfect sense.\n\n709\n00:36:55.460 --> 00:36:58.180\nI think we can all go out now and\ndo an IP idle scan and\n\n710\n00:36:58.180 --> 00:37:02.060\nunderstand what we're doing and what\nthe results are that we're getting back.\n\n711\n00:37:02.060 --> 00:37:03.390\nAnd stay stealthy about it.\n\n712\n00:37:03.390 --> 00:37:06.530\n>> That's right, just don't do it on other\npeople's systems without their permission.\n\n713\n00:37:06.530 --> 00:37:07.300\n>> That's right [LAUGH].\n\n714\n00:37:07.300 --> 00:37:08.611\n>> All right.\n>> Cuz in case you do get caught,\n\n715\n00:37:08.611 --> 00:37:09.980\nin some way shape or form.\n\n716\n00:37:09.980 --> 00:37:10.970\nThat could be bad for you.\n\n717\n00:37:10.970 --> 00:37:11.920\n>> This is Daniels.\n\n718\n00:37:11.920 --> 00:37:12.910\n>> Yeah, you telling me.\n\n719\n00:37:12.910 --> 00:37:13.760\n>> It looks so fun.\n\n720\n00:37:13.760 --> 00:37:15.670\nSo yes, always have permission.\n\n721\n00:37:15.670 --> 00:37:18.450\nAll right Daniel, we appreciate that,\nagain great demonstration there,\n\n722\n00:37:18.450 --> 00:37:20.410\nhope everybody out there enjoyed watching.\n\n723\n00:37:20.410 --> 00:37:23.400\nSigning off for ITProTV,\nI’ve been your host Mike Roderick.\n\n724\n00:37:23.400 --> 00:37:24.050\n>> I’m Daniel Lowry.\n\n725\n00:37:24.050 --> 00:37:26.151\n>> And we'll see you next time.\n\n726\n00:37:26.151 --> 00:37:30.987\n[SOUND]\n\n",
          "vimeoId": "179490426"
        },
        {
          "description": "In this episode, Wes and Dan continue their exploration of the different type of scans that can be performed on your networks with Nmap, specifically the FTP bounce scans.",
          "length": "2023",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-4-advanced_port_scanning_ftp_bounce-092116.00_33_32_05.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-4-advanced_port_scanning_ftp_bounce-092116.00_33_32_05.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-nmap/techskills-nmap-2-4-advanced_port_scanning_ftp_bounce-092116.00_33_32_05.Still001-sm.jpg",
          "title": "Advanced Port Scanning FTP Bounce",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.030 --> 00:00:14.997\nWelcome back to another exciting\nepisode here at ITPRO.TV.\n\n3\n00:00:14.997 --> 00:00:16.538\nI'm your host Wes Bryan and\n\n4\n00:00:16.538 --> 00:00:20.511\nwe're coming back at you with a very\nfun series continuing on in NMap.\n\n5\n00:00:20.511 --> 00:00:24.610\nThat's right and joining us back in the\nstudios is none other than Mr. Dan Lowrie.\n\n6\n00:00:24.610 --> 00:00:25.940\nDan how are you doing, sir?\n\n7\n00:00:25.940 --> 00:00:29.312\n&gt;&gt; I'm doing great, I'm so glad to be back\nbecause you know how much I love the NMap.\n\n8\n00:00:29.312 --> 00:00:33.014\nIt's so much fun to scan networks,\ntry to find machines and\n\n9\n00:00:33.014 --> 00:00:35.400\nmaybe some exploitable avenues.\n\n10\n00:00:35.400 --> 00:00:38.320\nThat being said we're back with\nanother one of our advanced\n\n11\n00:00:38.320 --> 00:00:41.520\nport scanning types of scans\nthat we have inside of NMap.\n\n12\n00:00:41.520 --> 00:00:44.830\nWe took a look at IP ID idle scan,\nvery, very cool.\n\n13\n00:00:44.830 --> 00:00:49.630\nThis kinda goes along with the same vein,\ntoday we're talking about the FTP bounce\n\n14\n00:00:49.630 --> 00:00:53.530\nscan, and you're thinking, wow, that does\nsound pretty cool, that's a little crazy\n\n15\n00:00:53.530 --> 00:00:56.020\nthere, we're gonna use FTP, we're gonna\nbounce it around, it's gonna be good?\n\n16\n00:00:56.020 --> 00:00:57.630\nYeah, that's exactly what we're gonna do.\n\n17\n00:00:57.630 --> 00:00:59.600\nSo, grab onto your hats and hold on for\n\n18\n00:00:59.600 --> 00:01:03.610\nthe ride because let's just jump right\nin and start talking about FTP bounce.\n\n19\n00:01:03.610 --> 00:01:07.990\nThe great thing is that I do have\na simple diagrams menu for you,\n\n20\n00:01:07.990 --> 00:01:10.883\na little illustration I created to help us\n\n21\n00:01:10.883 --> 00:01:15.778\nbetter understand what the heck is\ngoing on inside an FTP bounce scan.\n\n22\n00:01:15.778 --> 00:01:20.822\nAnd basically what we're gonna do is again\nmuch like than the way we used IPID idle\n\n23\n00:01:20.822 --> 00:01:26.163\nscan where we used an intermediary to scan\nmachines for us because we're either being\n\n24\n00:01:26.163 --> 00:01:31.527\nfirewalled or we don't want to have such\na fingerprints on that machine itself.\n\n25\n00:01:31.527 --> 00:01:33.437\nWe're gonna do the same\nthing with FTP bounce.\n\n26\n00:01:33.437 --> 00:01:39.587\nAnd it's gonna exploit a feature\nthat's found in some FTP servers.\n\n27\n00:01:39.587 --> 00:01:44.177\nAnd I say, a feature, very loosely\nbecause, well, it allows FTP bouncing.\n\n28\n00:01:44.177 --> 00:01:47.347\nAnd that's not something that you\ntypically want on your network.\n\n29\n00:01:47.347 --> 00:01:52.170\nSo it's good for us to be able to use\nNMap to find devices on our network\n\n30\n00:01:52.170 --> 00:01:56.810\nthat will allow for an FTP bounce,\nso we can stop that from happening.\n\n31\n00:01:56.810 --> 00:01:59.490\nAnd then if we're trying\nto do penetration testing,\n\n32\n00:01:59.490 --> 00:02:03.210\nsomething of that nature, we can use FTP\nbounce to do what is we're trying to do,\n\n33\n00:02:03.210 --> 00:02:06.260\nwhich is stay a little more\nhands-off on our target.\n\n34\n00:02:06.260 --> 00:02:07.950\nSo let's take a look at our diagram here.\n\n35\n00:02:07.950 --> 00:02:10.440\nWe have an attacker over here.\n\n36\n00:02:10.440 --> 00:02:12.915\nI just gave it some random\nIP addressing here.\n\n37\n00:02:12.915 --> 00:02:17.060\n192.168.0.115, I want to scan this server,\nright,\n\n38\n00:02:17.060 --> 00:02:20.875\n192.168.0.10.\n\n39\n00:02:20.875 --> 00:02:24.270\nSo I've made it somewhere, right,\ncuz I'm inside their network.\n\n40\n00:02:24.270 --> 00:02:26.550\nWe're on the same network.\n\n41\n00:02:26.550 --> 00:02:29.130\nBut this server, they're smart.\n\n42\n00:02:29.130 --> 00:02:30.370\nThey got a firewall up and running.\n\n43\n00:02:30.370 --> 00:02:32.372\nYou can see there's a firewall in between.\n\n44\n00:02:32.372 --> 00:02:37.010\nI throw my NMap scan and it's saying,\nyou don't come from a trusted IP source,\n\n45\n00:02:37.010 --> 00:02:39.370\nwe can see that because\nI sort of happily and\n\n46\n00:02:39.370 --> 00:02:44.320\nhandily put down here at\nthe bottom our full IP tables.\n\n47\n00:02:44.320 --> 00:02:47.670\nIt's cuz that's what I'm familiar with,\nthis could be a CISCO ASA or\n\n48\n00:02:47.670 --> 00:02:49.600\nany other type of firewall that you like.\n\n49\n00:02:49.600 --> 00:02:52.940\nBut as you can see it says,\ntables input TCP.\n\n50\n00:02:52.940 --> 00:02:56.930\nIt's blocking a range of\nIP addresses from 100-200,\n\n51\n00:02:56.930 --> 00:03:00.900\nof course, again, I chose that at random.\n\n52\n00:03:00.900 --> 00:03:05.550\nMaybe that's their DACP scope for,\nyou know, a guest computer or\n\n53\n00:03:05.550 --> 00:03:06.690\nsomething like that.\n\n54\n00:03:06.690 --> 00:03:07.780\nAnd that's what we're plugged into.\n\n55\n00:03:07.780 --> 00:03:10.120\nSo, we're starting to set\nthe stage a little more.\n\n56\n00:03:10.120 --> 00:03:13.340\nSo we see that and it's dropping on us so\nit's basically saying I'm dropping all\n\n57\n00:03:13.340 --> 00:03:18.620\nthe TCP packets from this untrusted\nportion of my network because I might have\n\n58\n00:03:18.620 --> 00:03:21.100\nsomebody that's trying to do\nsomething they shouldn't do.\n\n59\n00:03:21.100 --> 00:03:23.270\nI don't need that traffic\ngoing toward here.\n\n60\n00:03:23.270 --> 00:03:26.180\nI only have certain machines that\nI'm gonna trust because I'm at\n\n61\n00:03:26.180 --> 00:03:26.900\na certain server.\n\n62\n00:03:26.900 --> 00:03:28.691\nBut that's the certain server I want,\n\n63\n00:03:28.691 --> 00:03:31.890\nthat's the one I wanna know what\nservices are running on that.\n\n64\n00:03:31.890 --> 00:03:33.840\nMaybe I'll want to exploit that later.\n\n65\n00:03:33.840 --> 00:03:36.420\nBut I can't do that because as we can see,\n\n66\n00:03:36.420 --> 00:03:41.760\nthe firewall is giving us 100%\norganic failure of that scan.\n\n67\n00:03:41.760 --> 00:03:43.020\nSo what do we do?\n\n68\n00:03:43.020 --> 00:03:44.580\nWe've scanned the network, right?\n\n69\n00:03:44.580 --> 00:03:45.760\nHopefully, that's what we're doing.\n\n70\n00:03:45.760 --> 00:03:49.550\nWe're scanning looking for machines that\nare both alive to our host discovery.\n\n71\n00:03:49.550 --> 00:03:51.850\nAnd then we start looking for\nservices that are open.\n\n72\n00:03:51.850 --> 00:03:54.290\nOf course we're gonna get\nblocked by our server\n\n73\n00:03:54.290 --> 00:03:55.604\nbecause it's filtering everything out.\n\n74\n00:03:55.604 --> 00:04:00.240\nWe'll see 1,000 port scan 1,000 ports\nare being filtered, that kind of output,\n\n75\n00:04:00.240 --> 00:04:04.770\nbut our network printer over\nhere maybe it's not so secure.\n\n76\n00:04:04.770 --> 00:04:06.980\nMaybe somebody just thought,\nhey, it's a network printer.\n\n77\n00:04:06.980 --> 00:04:08.070\nEverybody can print to this.\n\n78\n00:04:08.070 --> 00:04:10.280\nThat's a nice little feature, I like that.\n\n79\n00:04:10.280 --> 00:04:12.440\nPeople like to print,\nI'll tell that on my network.\n\n80\n00:04:12.440 --> 00:04:13.620\nI've had it laid down forever.\n\n81\n00:04:13.620 --> 00:04:14.700\nThat's a great job you know.\n\n82\n00:04:14.700 --> 00:04:16.790\nIt's cheap on ink and\nall that other good stuff.\n\n83\n00:04:16.790 --> 00:04:18.210\nAnd has network capabilities.\n\n84\n00:04:18.210 --> 00:04:20.370\nSo there it is, it gets an IP address.\n\n85\n00:04:20.370 --> 00:04:22.280\nWell, maybe that server\nwants to print to that.\n\n86\n00:04:22.280 --> 00:04:24.860\nSo it has to be in that trusted IP range.\n\n87\n00:04:24.860 --> 00:04:26.530\nSo it does, it puts it in there.\n\n88\n00:04:26.530 --> 00:04:33.610\nSo we got 192.168 0.12 sitting nicely\nwith inside that trusted little range.\n\n89\n00:04:33.610 --> 00:04:37.650\nBut what they didn't realize because they\ndidn't do any kind of enumeration or\n\n90\n00:04:37.650 --> 00:04:40.210\nscanning of their own systems maybe.\n\n91\n00:04:40.210 --> 00:04:42.930\nThey didn't realize it's running\nFTP with anonymous login.\n\n92\n00:04:42.930 --> 00:04:45.770\nIt's a very common thing FTP,\nmost people don't care.\n\n93\n00:04:45.770 --> 00:04:47.030\nYou can login anonymously,\n\n94\n00:04:47.030 --> 00:04:52.308\nit's not that big of a deal unless you\nstart thinking like a malfeasance right.\n\n95\n00:04:52.308 --> 00:04:55.470\n[LAUGH] You don't want people logging\nin to anything that they shouldn't\n\n96\n00:04:55.470 --> 00:04:56.130\nhave access to.\n\n97\n00:04:56.130 --> 00:04:59.830\nRemember that whole lease\nprivileges thing is a good idea.\n\n98\n00:04:59.830 --> 00:05:03.143\nBut here they didn't do that because\nthey realize that it's running FTP.\n\n99\n00:05:03.143 --> 00:05:04.893\nIf they had just run a simple m map scan,\n\n100\n00:05:04.893 --> 00:05:08.291\nthey would have realized that guy's\ngot FTP with anonymous login going on,\n\n101\n00:05:08.291 --> 00:05:11.670\nyou might want to go in and\nreconfigure that or shut that FTP down.\n\n102\n00:05:11.670 --> 00:05:14.630\nBut it is up and running so\nthat's going to be my intermediary and\n\n103\n00:05:14.630 --> 00:05:18.290\nit doesn't have any firewall blocking me,\nso I can use that guy.\n\n104\n00:05:18.290 --> 00:05:20.530\nSo let's move on to our second slide here.\n\n105\n00:05:20.530 --> 00:05:26.065\nAnd now, I can throw the commands using\nthe FTP bounce feature built into\n\n106\n00:05:26.065 --> 00:05:32.310\nNMap to actually use that printer scan\nmy target, my actual intended target.\n\n107\n00:05:32.310 --> 00:05:36.600\nAnd, again, keeps my fingerprints\noff of the gun a little better, and\n\n108\n00:05:36.600 --> 00:05:38.050\nkeeps me out of the loop.\n\n109\n00:05:38.050 --> 00:05:39.960\nAnd that's a nice feature of that.\n\n110\n00:05:39.960 --> 00:05:41.910\nSo, if we see here we have pseudo,\n\n111\n00:05:41.910 --> 00:05:45.030\ndon't forget your pseudo in\nmap dash pn no need to ping.\n\n112\n00:05:45.030 --> 00:05:47.970\nI'd probably even throw in a dash N cause\nI don't need name resolution on this.\n\n113\n00:05:47.970 --> 00:05:52.050\nI've got an IP address,\nthat's good enough in this instance.\n\n114\n00:05:52.050 --> 00:05:56.810\nThen the dash b option,\nthat's what implements that bounce scan,\n\n115\n00:05:56.810 --> 00:06:00.440\nthat FTP bounce scan,\nis using dash b, that lower case b.\n\n116\n00:06:00.440 --> 00:06:03.670\nNot uppercase b,\nno you know some Arabic b, or\n\n117\n00:06:03.670 --> 00:06:06.960\nsome other that Unless you're using\nan Arabic keyboard and then, of course,\n\n118\n00:06:06.960 --> 00:06:09.260\nit would be whatever that character is,\nI don't know.\n\n119\n00:06:09.260 --> 00:06:12.330\nBut in English for us viewers in here\nit is, let's speak the kings and\n\n120\n00:06:12.330 --> 00:06:14.330\nqueens, it is a dash B.\n\n121\n00:06:14.330 --> 00:06:17.750\nWe also have some parameters\nwe can throw at this thing.\n\n122\n00:06:17.750 --> 00:06:20.770\nNow, by default,\nit does a lot of stuff for you.\n\n123\n00:06:21.940 --> 00:06:26.160\nThe developers at IMAP of done a great job\nof trying to make it easy for you to use\n\n124\n00:06:26.160 --> 00:06:30.720\nthis but I want to show you every nuance\nof it so that you kind of understand when\n\n125\n00:06:30.720 --> 00:06:34.340\nyou run a default bounce scan,\nkind of what's going on in the background.\n\n126\n00:06:34.340 --> 00:06:39.450\nIf throws a user name and a password at it\ncuz remember, this is anonymous log in.\n\n127\n00:06:39.450 --> 00:06:43.480\nWe like that, with anonymous log in\nusually the user name is anonymous.\n\n128\n00:06:43.480 --> 00:06:46.400\nAnd then the password is\ngoing to be whatever.\n\n129\n00:06:46.400 --> 00:06:49.240\nA lot of people will use their\nemail address to let them know hey\n\n130\n00:06:49.240 --> 00:06:53.310\nI logged into your anonymous FTP server\nand this was the person that logged in.\n\n131\n00:06:53.310 --> 00:06:55.970\nThanks for allowing me to download and\nupload files.\n\n132\n00:06:55.970 --> 00:06:57.900\nI appreciated the service, it's awesome.\n\n133\n00:06:57.900 --> 00:07:01.200\nSo that's why we see\nanonymous log ins a lot.\n\n134\n00:07:01.200 --> 00:07:02.920\nWhen this printer,\nit's not really doing that.\n\n135\n00:07:02.920 --> 00:07:04.370\nBut it still allows anonymous login.\n\n136\n00:07:04.370 --> 00:07:05.030\nThat's what we need.\n\n137\n00:07:05.030 --> 00:07:07.710\nRemember, that's a key for\nus to be doing the bounce scan.\n\n138\n00:07:07.710 --> 00:07:10.580\nWe have to be able to log\nin to the stinking thing so\n\n139\n00:07:10.580 --> 00:07:12.370\nthat we can work with it, right?\n\n140\n00:07:12.370 --> 00:07:16.060\nSo it's a very important part\nof this little procedure here.\n\n141\n00:07:16.060 --> 00:07:19.550\nSo that's what I'm gonna do, I'm gonna\nuse the anonymous this is the password\n\n142\n00:07:19.550 --> 00:07:23.970\nportion, I'm sorry the username portion\nand the password is the password portion.\n\n143\n00:07:23.970 --> 00:07:26.670\nSo username colon password.\n\n144\n00:07:26.670 --> 00:07:31.280\nIf I'm remembering by default Nmap\nuses anonymous as the username and,\n\n145\n00:07:31.280 --> 00:07:37.490\nthen I wrote it down so I don't forget,\nit's wwwuser@ as the password.\n\n146\n00:07:37.490 --> 00:07:41.127\nSo, this little at sign here that's so\nthat we can separate\n\n147\n00:07:41.127 --> 00:07:45.445\nit from the actual IP address of\nthe machine, it's allowing the FTP.\n\n148\n00:07:45.445 --> 00:07:49.965\nSo, there we go, we see that we do our\nat sign, we give it the IP address of\n\n149\n00:07:49.965 --> 00:07:54.067\nthe printer, and we also have\nthe column at the end and I put 21.\n\n150\n00:07:54.067 --> 00:07:58.687\nWell, typically,\nthat's what FTP is running on is port 21.\n\n151\n00:07:58.687 --> 00:08:01.969\nYou don't have to put the 21, just like\nwe don't have to put the username and\n\n152\n00:08:01.969 --> 00:08:02.840\npassword portion.\n\n153\n00:08:02.840 --> 00:08:05.240\nWe can just put the IP address again.\n\n154\n00:08:05.240 --> 00:08:07.800\nBut I put 21 here to let you know.\n\n155\n00:08:07.800 --> 00:08:11.740\nIf you find FTP running on\na port that's not 21, and\n\n156\n00:08:11.740 --> 00:08:15.380\nyou need to change that default, just\nadd a colon and whatever that port is.\n\n157\n00:08:15.380 --> 00:08:19.910\nSo as you've done your host discovery,\nand you've done your services scanning,\n\n158\n00:08:19.910 --> 00:08:23.550\nit was all the others scans that we've\nlooked up before, and you found FTP.\n\n159\n00:08:23.550 --> 00:08:28.523\nAnd it's running on port 8021 for\nwhatever reason.\n\n160\n00:08:28.523 --> 00:08:31.800\nThey changed it to that, trying to\nbe a little more ofiscating, right?\n\n161\n00:08:31.800 --> 00:08:35.400\nThat's a good practice for\npeople to do that.\n\n162\n00:08:35.400 --> 00:08:37.210\nNow we can change that to :8021,\n\n163\n00:08:37.210 --> 00:08:40.880\nand now it knows to use that\nport instead of the default.\n\n164\n00:08:40.880 --> 00:08:43.300\nAnd then the last but\nnot least is our target.\n\n165\n00:08:44.690 --> 00:08:50.434\nOnce we fire that off, it will go into\nthe network printer itself and say log in.\n\n166\n00:08:50.434 --> 00:08:55.727\nIt will log in and then it will craft\na lot of voodoo in the background,\n\n167\n00:08:55.727 --> 00:09:00.310\nso that it can bounce over to\nthe actually intended target.\n\n168\n00:09:00.310 --> 00:09:02.140\nNow how does it do that, right?\n\n169\n00:09:02.140 --> 00:09:06.660\nAnd basically without getting into a lot\nof scripting and programming, FTP,\n\n170\n00:09:06.660 --> 00:09:14.950\nif it's set up incorrectly, will allow\nyou to set it up to act as a proxy.\n\n171\n00:09:14.950 --> 00:09:18.189\nBack when the Internet was a safer world,\nthis was a nice feature, right?\n\n172\n00:09:18.189 --> 00:09:21.433\nThis was a very cool thing,\nto say hey, you know what?\n\n173\n00:09:21.433 --> 00:09:25.068\nIf you need to get over here and you don't\nhave access to that area of the Internet,\n\n174\n00:09:25.068 --> 00:09:27.646\nor the network, or whatever,\nI can act as a proxy for you,\n\n175\n00:09:27.646 --> 00:09:28.929\nbecause I have access to it.\n\n176\n00:09:28.929 --> 00:09:31.250\nAnd you're like, thanks a lot,\nwe appreciate that.\n\n177\n00:09:31.250 --> 00:09:33.950\nThat's what I said this\nfeature is being exploited.\n\n178\n00:09:33.950 --> 00:09:37.345\nI like to throw the double air quotes\nover it because it's no longer a feature,\n\n179\n00:09:37.345 --> 00:09:39.115\nnow it's just a vulnerability.\n\n180\n00:09:39.115 --> 00:09:44.255\nSo if I find something that will\nwork well with this and I used this\n\n181\n00:09:44.255 --> 00:09:48.605\nthen I'm gonna get to use that feature and\nsomebody needs to turn that on.\n\n182\n00:09:48.605 --> 00:09:51.392\nThis is not a good thing to have running,\nthis allows us to do that, and\n\n183\n00:09:51.392 --> 00:09:54.438\nthat's why we do our nmap scans, right,\nthat's what it all goes back to.\n\n184\n00:09:54.438 --> 00:09:59.523\nSo it proxies that stuff over and starts\nlooking at the replies and how that works,\n\n185\n00:09:59.523 --> 00:10:03.591\nand what we'll get into a little\nbit of that just here in a second.\n\n186\n00:10:03.591 --> 00:10:04.621\nAnd then, what does it do?\n\n187\n00:10:04.621 --> 00:10:08.618\nOf course it replies to that and\nthe network printer, the FTP server,\n\n188\n00:10:08.618 --> 00:10:11.736\nwill interpret that data,\nwell it won't interpret,\n\n189\n00:10:11.736 --> 00:10:16.180\nactually it'll shovel it back to\nyou because it's acting as a proxy.\n\n190\n00:10:16.180 --> 00:10:18.080\nHere's what you were asking for, right?\n\n191\n00:10:18.080 --> 00:10:22.777\nGoes right back to and then nmap takes\nthat data that's been returned and\n\n192\n00:10:22.777 --> 00:10:28.170\nit understands what that means and turns\nit into open closed filter-type of idea.\n\n193\n00:10:28.170 --> 00:10:34.130\nAnd you get your standard nmap output,\nthe scanning done for you by a proxy.\n\n194\n00:10:34.130 --> 00:10:36.490\nAnd you didn't really have to\nget your fingers dirty on it.\n\n195\n00:10:36.490 --> 00:10:38.990\nAll you had to do was\nfind that FTP server.\n\n196\n00:10:38.990 --> 00:10:42.269\nSo let's see here,\nwhat do we wanna show you guys on this?\n\n197\n00:10:43.480 --> 00:10:45.290\nLet's actually fire off a scan.\n\n198\n00:10:45.290 --> 00:10:49.590\nLet's do this, not just show you a\ndiagram, though, let's do the scan itself.\n\n199\n00:10:49.590 --> 00:10:55.690\nSo I'll say sudo nmap -Pn, I'll actually\nthrow in that -n for no name resolution.\n\n200\n00:10:55.690 --> 00:10:59.363\nI'm going to pick a few choice\nIP addresses here, or not IP but\n\n201\n00:10:59.363 --> 00:11:01.846\nI'm sorry, ports, that we want to use.\n\n202\n00:11:01.846 --> 00:11:06.718\nI'll use 21, 22, 23, and\nwhat else do I got here?\n\n203\n00:11:06.718 --> 00:11:10.979\n80, that's always fun and,\n3389 cuz we love all these.\n\n204\n00:11:12.540 --> 00:11:14.270\nAnd we're going to fire that off.\n\n205\n00:11:15.520 --> 00:11:19.267\nA -v, I like verbosity,\nI tend to throw that -v in there for\n\n206\n00:11:19.267 --> 00:11:23.250\na little more information cuz we\nlike to see that stuff, right?\n\n207\n00:11:24.530 --> 00:11:26.640\nAnd then, of course, our -b option.\n\n208\n00:11:26.640 --> 00:11:32.710\nThis is the beginning of the bounce\ncommand itself inside of our nmap scan.\n\n209\n00:11:32.710 --> 00:11:36.845\nSo -b and I will anonymous.\n\n210\n00:11:36.845 --> 00:11:44.764\nAnd then password@192.168.219.135:21.\n\n211\n00:11:44.764 --> 00:11:50.619\nAgain, I'm showing these in its total for\nyour education, right?\n\n212\n00:11:51.630 --> 00:11:52.510\nDon't need the 21.\n\n213\n00:11:52.510 --> 00:11:56.670\nI didn't even have to throw that\nanonymous and password stuff on there.\n\n214\n00:11:56.670 --> 00:12:03.440\nAnd then my actual target,\n192.168.219.138.\n\n215\n00:12:03.440 --> 00:12:07.184\nAll right, let's see what happens.\n\n216\n00:12:07.184 --> 00:12:10.589\nNeed to elevate my privileges.\n\n217\n00:12:10.589 --> 00:12:12.297\nAnd it's cranking away,\nit's cranking away.\n\n218\n00:12:12.297 --> 00:12:14.370\nHopefully this runs quickly.\n\n219\n00:12:14.370 --> 00:12:16.680\nTypically these things can be.\n\n220\n00:12:16.680 --> 00:12:18.650\nIt just depends on your network and\nwhat's going on.\n\n221\n00:12:18.650 --> 00:12:19.590\nI'm running on a virtual network.\n\n222\n00:12:19.590 --> 00:12:21.549\nSo again, it shouldn't take too long.\n\n223\n00:12:21.549 --> 00:12:23.500\nWow, what's going on here.\n\n224\n00:12:23.500 --> 00:12:24.840\nThat's a interesting output.\n\n225\n00:12:24.840 --> 00:12:27.313\nWe didn't get any output, Wes.\n\n226\n00:12:27.313 --> 00:12:31.310\nIt didn't scan correctly.\n\n227\n00:12:31.310 --> 00:12:32.110\nThat's gonna be a problem.\n\n228\n00:12:32.110 --> 00:12:34.170\nBut it kind of like lets us\nknow what's going on here.\n\n229\n00:12:34.170 --> 00:12:37.074\nThat's why I like that verbosity because\nit gives us a little more information\n\n230\n00:12:37.074 --> 00:12:39.412\nother than, hey, that didn't work,\nsorry about your luck.\n\n231\n00:12:39.412 --> 00:12:41.347\nEnjoy your next scan, right?\n\n232\n00:12:41.347 --> 00:12:42.070\nThat's what we want.\n\n233\n00:12:42.070 --> 00:12:44.644\nSo let's take a look at the output and\nsee what happened.\n\n234\n00:12:44.644 --> 00:12:49.500\nIt resolved the FTP balance attacks\nproxy to the 135, that's what we like.\n\n235\n00:12:49.500 --> 00:12:56.180\nThat's right, attempting to connect\nusing ftp://anonymous:password.\n\n236\n00:12:56.180 --> 00:12:58.730\nAnd it did connect,\nit says connected, right?\n\n237\n00:12:58.730 --> 00:13:02.438\nWe even got the version of FTP.\n\n238\n00:13:02.438 --> 00:13:06.900\nThere's the login credentials\nare accepted by the FTP server.\n\n239\n00:13:06.900 --> 00:13:10.930\nWe like that and logging in was good,\nwe got that far.\n\n240\n00:13:10.930 --> 00:13:13.070\nThen when it initiated the bounce scan,\n\n241\n00:13:13.070 --> 00:13:16.710\nit says your bounce server\ndoesn't allow privileged ports.\n\n242\n00:13:16.710 --> 00:13:20.010\nSkipping them, did that,\ntried it again and this says, hey,\n\n243\n00:13:20.010 --> 00:13:24.380\nyou didn't want to scan any unprivileged\nports, giving up, quitting.\n\n244\n00:13:24.380 --> 00:13:26.595\nSo we weren't able to do\nwhat we wanted to do.\n\n245\n00:13:26.595 --> 00:13:29.334\nI got a bad FTP server here.\n\n246\n00:13:29.334 --> 00:13:30.614\nI knew this was going to happen.\n\n247\n00:13:30.614 --> 00:13:35.058\n[LAUGH] Believe it or not, I actually\nknew what's going to occur before we get\n\n248\n00:13:35.058 --> 00:13:39.780\nstarted and I wanted to show you this\noutput so that you can see what happens.\n\n249\n00:13:39.780 --> 00:13:43.850\nJust because you found a device on\na network, it's running FTP and\n\n250\n00:13:43.850 --> 00:13:48.580\nallows anonymous login, doesn't\nnecessarily mean you have a good proxy for\n\n251\n00:13:48.580 --> 00:13:50.700\ndoing an FTP bounce scan, all right?\n\n252\n00:13:50.700 --> 00:13:52.350\nSo you might run into this.\n\n253\n00:13:52.350 --> 00:13:55.550\nEvery now and then you're gonna log,\nyou're gonna try and it's gonna not work.\n\n254\n00:13:55.550 --> 00:13:58.230\nSo you've got to be prepared\nto see results like this, and\n\n255\n00:13:58.230 --> 00:14:01.120\ntypically this is probably what\nyou're going to encounter.\n\n256\n00:14:02.600 --> 00:14:03.896\nSo what do you do, right?\n\n257\n00:14:03.896 --> 00:14:05.880\nWell, you scan, you scan around and\n\n258\n00:14:05.880 --> 00:14:08.865\nyou try to find more stuff\nrunning FTP services.\n\n259\n00:14:08.865 --> 00:14:11.917\nNow I know that that's running FTP\nbecause that's a server I have,\n\n260\n00:14:11.917 --> 00:14:15.414\nthat's actually our Metasploitable\nmachine is that 135 guy right here.\n\n261\n00:14:15.414 --> 00:14:19.115\nThis guy right here, that's the one we we\nwere trying to use as an intermediary.\n\n262\n00:14:19.115 --> 00:14:23.568\nThis is a Windows XP,\nI'm sorry not that one.\n\n263\n00:14:23.568 --> 00:14:27.267\nThis 138, that's a Windows XP machine\nthat I just threw up really quickly so\n\n264\n00:14:27.267 --> 00:14:29.300\nthat we have something to scan.\n\n265\n00:14:29.300 --> 00:14:32.070\nAnd without having for\nme to install a bunch of FTP stuff.\n\n266\n00:14:32.070 --> 00:14:34.780\nI know Metasploitable already\nhas that stuff running.\n\n267\n00:14:34.780 --> 00:14:37.053\nAnd I know it's a little exploitable,\nright?\n\n268\n00:14:37.053 --> 00:14:40.980\nHence the Metasploitable\ntitle in its name there.\n\n269\n00:14:40.980 --> 00:14:42.920\nSo now we see that that's not good.\n\n270\n00:14:42.920 --> 00:14:44.070\nSo I continue to scan.\n\n271\n00:14:44.070 --> 00:14:49.039\nNow our studio's in a little disarray\nright now so I won't be able to show\n\n272\n00:14:49.039 --> 00:14:54.171\nyou Live 5 but cuz I'm a forward thinker,\nI did manage to capture the scans\n\n273\n00:14:54.171 --> 00:14:58.998\nthat I did do that were successful so\nI could show you guys the outputs.\n\n274\n00:14:58.998 --> 00:15:03.363\nSo basically, identical, we're gonna\nthrow in the exact same command,\n\n275\n00:15:03.363 --> 00:15:05.940\nwe're just doing at a different machines.\n\n276\n00:15:05.940 --> 00:15:09.620\nAnd what I did was I scanned\nour ITProTV network to look for\n\n277\n00:15:09.620 --> 00:15:12.319\nother servers that might be running FTP.\n\n278\n00:15:12.319 --> 00:15:13.810\nAnd you know what, I found some.\n\n279\n00:15:13.810 --> 00:15:16.822\nI actually found one specifically\nthat allowed for anonymous login.\n\n280\n00:15:16.822 --> 00:15:19.560\nI though great,\nI wonder if this one will work.\n\n281\n00:15:19.560 --> 00:15:23.890\nAnd I tried the bounce scan and\nviola, I gave my XP machine\n\n282\n00:15:23.890 --> 00:15:29.550\nan ITProTV accessible IP address,\nallowed it on that network,\n\n283\n00:15:29.550 --> 00:15:32.150\nand I was able to do a bounce scan and\nyou know what it was?\n\n284\n00:15:32.150 --> 00:15:33.970\nIt was a stinking network printer.\n\n285\n00:15:33.970 --> 00:15:35.275\nThat's exactly what it was.\n\n286\n00:15:35.275 --> 00:15:39.397\nWe have a little HP printer that\nwe print our show notes out on,\n\n287\n00:15:39.397 --> 00:15:44.495\nsitting on a desk, and it's an old\nHP Set Jetdirect or something like that.\n\n288\n00:15:44.495 --> 00:15:48.833\nAnd when I found FTP running port 21,\nanonymous login, and I cranked away and\n\n289\n00:15:48.833 --> 00:15:53.002\nlow and behold, I got exactly what I was\nlooking for, it was able to do that.\n\n290\n00:15:53.002 --> 00:15:55.941\nSo let me show you what that looked like.\n\n291\n00:15:55.941 --> 00:15:58.189\nLet me clear the screen here,\njust a little bit here.\n\n292\n00:15:58.189 --> 00:16:00.841\nI think they're actually in my show notes.\n\n293\n00:16:00.841 --> 00:16:04.670\nLet me cat the FTP bounce scan.\n\n294\n00:16:04.670 --> 00:16:06.390\nSo here's what it'll look like.\n\n295\n00:16:06.390 --> 00:16:07.718\nSee, and really no difference.\n\n296\n00:16:07.718 --> 00:16:12.206\nSudo nmap, right,\nelevate my privileges, run nmap,\n\n297\n00:16:12.206 --> 00:16:16.033\nno ping, ports, 135 and 139, 445.\n\n298\n00:16:16.033 --> 00:16:21.003\nTrying to keep it simple, I could have\nscanned the entire range of either most\n\n299\n00:16:21.003 --> 00:16:24.918\ncommon 1,000 ports or\nevery port if I felt so inclined.\n\n300\n00:16:24.918 --> 00:16:29.203\nAnd then there it is,\n-b anonymous password@ and\n\n301\n00:16:29.203 --> 00:16:32.600\nthere is the ip address of our printer.\n\n302\n00:16:32.600 --> 00:16:35.060\nWes is probably looking at that going hey,\nthat looks familiar.\n\n303\n00:16:35.060 --> 00:16:38.242\nYep, cuz that's our little\nprinter over there,\n\n304\n00:16:38.242 --> 00:16:40.930\nand then this was my XP machine, right.\n\n305\n00:16:40.930 --> 00:16:45.490\nIdentical same kind of command\nthat I threw at in map, but\n\n306\n00:16:45.490 --> 00:16:46.970\nthe output was different, right.\n\n307\n00:16:46.970 --> 00:16:47.620\nWhat happened?\n\n308\n00:16:47.620 --> 00:16:52.370\nI should've thrown the -v on there to\ngive me a little bit more verbosity, but\n\n309\n00:16:52.370 --> 00:16:58.080\none thing that was being blocked is\nnow being scanned using the proxy ftp.\n\n310\n00:16:58.080 --> 00:17:02.910\nAnd there it is,it found, not showing\n996 closed ports because remember\n\n311\n00:17:02.910 --> 00:17:07.095\nNmap bunches things together if they're\nall closed why show you closed,\n\n312\n00:17:07.095 --> 00:17:10.990\nclosed,closed, closed, closed,\nclosed, closed, 996 times.\n\n313\n00:17:10.990 --> 00:17:12.470\nThank you Nmap developers for\n\n314\n00:17:12.470 --> 00:17:16.940\nnot making my output so\nunfathomable I can't rifle through it.\n\n315\n00:17:16.940 --> 00:17:23.410\nGave me only what I needed to know which,\nIt found, look at that,\n\n316\n00:17:23.410 --> 00:17:28.830\n22, 135,139 and\nthese all open on that machine.\n\n317\n00:17:28.830 --> 00:17:31.240\nSo very, very cool.\n\n318\n00:17:31.240 --> 00:17:32.830\nThat's how we use the bounce scan.\n\n319\n00:17:32.830 --> 00:17:36.680\nIt allows me to use that as that proxy.\n\n320\n00:17:36.680 --> 00:17:40.710\nSo again, this is something you're not\ngonna find happening all the time.\n\n321\n00:17:40.710 --> 00:17:44.210\nYou're gonna be like, I found FTP open,\nanonymous login, sweet.\n\n322\n00:17:44.210 --> 00:17:47.750\nI got my FTP bounce all ready and\nit's gonna rock.\n\n323\n00:17:47.750 --> 00:17:50.380\nProbably not,\nit's probably not going to rock.\n\n324\n00:17:50.380 --> 00:17:54.870\nBut as you can see, It doesn't\nmean you shouldn't try it, right?\n\n325\n00:17:54.870 --> 00:17:59.910\nBecause scan and use and try every,\nthrow the kitchen sink at these things.\n\n326\n00:17:59.910 --> 00:18:04.730\nI'm not talking script kiddy language\nhere, where I don't know what it does.\n\n327\n00:18:04.730 --> 00:18:08.650\nAnd I'm just trying every tool I have\nin the bag, every option it allows me.\n\n328\n00:18:08.650 --> 00:18:10.410\nI'm trying it for specific reasons.\n\n329\n00:18:10.410 --> 00:18:14.780\nI'm only trying bounce scans against\nservers that I find that allow anonymous\n\n330\n00:18:14.780 --> 00:18:18.810\nlogin, because I know that if it\nallows me to do a bounce scan, I can,\n\n331\n00:18:18.810 --> 00:18:21.840\nespecially if I'm trying to get\na target that's being firewall.\n\n332\n00:18:21.840 --> 00:18:23.390\nMaybe it's not firewall on that.\n\n333\n00:18:23.390 --> 00:18:24.900\nSee, it's all about pointedness.\n\n334\n00:18:24.900 --> 00:18:28.730\nIt's all about being very focused\nin your attacks, in your scans.\n\n335\n00:18:28.730 --> 00:18:33.960\nYou want them to be, like I said, like a\nlaser beam in exactly what you want to do.\n\n336\n00:18:33.960 --> 00:18:35.430\nAnd this will allow you to do that.\n\n337\n00:18:35.430 --> 00:18:38.970\nAnd then, every now and\nthen it will bring home the bacon right?\n\n338\n00:18:38.970 --> 00:18:44.050\nIt's really gonna haul the mail and\nallow you to get a hold of that machine,\n\n339\n00:18:44.050 --> 00:18:46.980\ndo the bow scan successfully,\nand if it doesn't do it,\n\n340\n00:18:46.980 --> 00:18:48.960\nif it doesn't work,\nno skin off your nose, right?\n\n341\n00:18:48.960 --> 00:18:52.350\nThis took a little while.\n\n342\n00:18:52.350 --> 00:18:54.000\nOkay, so 187 seconds.\n\n343\n00:18:55.300 --> 00:18:56.900\nCry me a river, that's forever.\n\n344\n00:18:56.900 --> 00:19:01.890\nI could have sped that up by\nchanging the timing, removing\n\n345\n00:19:01.890 --> 00:19:05.770\nsome of the default stuff that n-map does\nwhen its scanning, like name resolution.\n\n346\n00:19:05.770 --> 00:19:07.690\nBut not really that long and\n\n347\n00:19:07.690 --> 00:19:11.130\nit was worth my effort because I\nactually got to scan the target machine.\n\n348\n00:19:11.130 --> 00:19:14.690\n&gt;&gt; Now Dan when you're doing one of these\nFTP bounce attacks let's switch hats here.\n\n349\n00:19:14.690 --> 00:19:17.134\nLets take the black hat off just for\na second, let's go ahead and\n\n350\n00:19:17.134 --> 00:19:18.230\nlet's put the white hat on.\n\n351\n00:19:18.230 --> 00:19:23.640\nIf I'm running, if I'm trying to find out\nwhere is this coming from on my network?\n\n352\n00:19:23.640 --> 00:19:27.400\nI can almost think the proxy is\nwhere it's gonna point you to and\n\n353\n00:19:27.400 --> 00:19:30.120\neventually when you're looking or\nmaybe it's not.\n\n354\n00:19:30.120 --> 00:19:33.820\nIs this a way that you could hide the fact\nthat you're doing a scan on a network?\n\n355\n00:19:33.820 --> 00:19:36.630\nOr is this just a way that\ncould get into a network and\n\n356\n00:19:36.630 --> 00:19:39.690\nbypass, like you're saying,\nsomething around the firewall.\n\n357\n00:19:39.690 --> 00:19:43.150\n&gt;&gt; Yeah, it may be to where\nyou can bypass against it.\n\n358\n00:19:43.150 --> 00:19:47.620\nMaybe the device that G has that anonymous\nFTP has an internet access, right.\n\n359\n00:19:47.620 --> 00:19:49.840\nSo that you don't have to\nbe in the network per se,\n\n360\n00:19:49.840 --> 00:19:53.720\nyou can be coming form the outside,\nI found FTP anonymous login.\n\n361\n00:19:53.720 --> 00:19:57.500\nLet's try that bounce scan and\nthen scan their network using FTP bounce.\n\n362\n00:19:57.500 --> 00:20:01.634\nIf the bounce scan works, great,\nyou've got an in road and what does it do?\n\n363\n00:20:01.634 --> 00:20:06.679\nIt just looks like that FTP\nserver started sending crazy\n\n364\n00:20:06.679 --> 00:20:11.840\nrequests to ports on all\nthe computers in their network.\n\n365\n00:20:11.840 --> 00:20:14.060\nAnd that might show up on a log and\nIDS and\n\n366\n00:20:14.060 --> 00:20:17.070\nIPS is probably going to pick\nsomething like that up as a scan.\n\n367\n00:20:17.070 --> 00:20:20.480\nAnd then, they're gonna go over to that\nand go, what IP is this coming from?\n\n368\n00:20:20.480 --> 00:20:22.600\nIt's our network printer,\n\n369\n00:20:22.600 --> 00:20:24.400\nwhy is our network printer\nhave access to the internet?\n\n370\n00:20:24.400 --> 00:20:27.830\nI don't know, we setup something wrong and\nthey're gonna fix that, and so\n\n371\n00:20:27.830 --> 00:20:32.000\na lot of times you will expose the fact\nto someone if they're looking.\n\n372\n00:20:32.000 --> 00:20:33.620\nSo if you're a pin tester.\n\n373\n00:20:33.620 --> 00:20:36.590\nBut you only need it to work one time.\n\n374\n00:20:36.590 --> 00:20:40.080\nYou only need one time for\nthis to work for me to understand or\n\n375\n00:20:40.080 --> 00:20:43.260\nat least have a really good idea wha's\ngoing on inside of that network.\n\n376\n00:20:43.260 --> 00:20:46.562\nMaybe this is an HTTP server,\nis a web server sitting out there.\n\n377\n00:20:46.562 --> 00:20:49.578\nIt's also running FTP for\nfile upload and download, right?\n\n378\n00:20:49.578 --> 00:20:51.075\nVery, very, common.\n\n379\n00:20:51.075 --> 00:20:55.996\nAnd if I'm a bad admin, if I'm crappy\nat my job and I'm not updating things,\n\n380\n00:20:55.996 --> 00:20:59.178\nI'm not locking things down,\nI'm not doing NMAP\n\n381\n00:20:59.178 --> 00:21:04.970\nscans myself then this could possibly\nbe an inroad to the rest of my network.\n\n382\n00:21:04.970 --> 00:21:08.301\nYou know I've just got a bad FTP server so\nyeah Wes this totally,\n\n383\n00:21:08.301 --> 00:21:11.647\nand it will look like that server\ndid it and not necessarily you.\n\n384\n00:21:11.647 --> 00:21:15.479\nThey might be able to find you back\nas they continue to investigate but\n\n385\n00:21:15.479 --> 00:21:16.546\nnot immediately.\n\n386\n00:21:16.546 --> 00:21:19.749\n&gt;&gt; Well you know I was going to say if\nthis was white box testing you know we've\n\n387\n00:21:19.749 --> 00:21:21.630\nkind of already see what's going on here.\n\n388\n00:21:21.630 --> 00:21:23.538\nYou're explaining it and\nlaying out the attack for us.\n\n389\n00:21:23.538 --> 00:21:26.422\nNow I can imagine if you're black box,\nlet me go ahead and\n\n390\n00:21:26.422 --> 00:21:30.206\nput that black hat back on that in\nsomething like this, I'm looking at this\n\n391\n00:21:30.206 --> 00:21:34.200\nports and I'm seeing things like for\ninstance your Microsoft related ports.\n\n392\n00:21:34.200 --> 00:21:37.775\nAnd now we can start foot printing that\noperating system and say hey I've seen\n\n393\n00:21:37.775 --> 00:21:41.790\nthat bios running there, I see things like\nyour, I think it's a Microsoft DS protocol\n\n394\n00:21:41.790 --> 00:21:45.510\nthere that allows the communication and\nthen we also have things like SSH.\n\n395\n00:21:45.510 --> 00:21:48.170\nSo it's like well wait a second, now we\nknow that we've got traffic on there.\n\n396\n00:21:48.170 --> 00:21:50.060\nWe must have some kind of\nnetwork devices on there.\n\n397\n00:21:50.060 --> 00:21:55.170\nSo, like you said, now we're starting to\nfootprint what's going on in your network.\n\n398\n00:21:55.170 --> 00:21:58.180\nAnd we don't necessarily have to use\n\n399\n00:21:58.180 --> 00:22:00.610\nyour explanation as to white\nbox to know what's going on.\n\n400\n00:22:00.610 --> 00:22:02.170\nWe can actually kind of\nput the blinders on and\n\n401\n00:22:02.170 --> 00:22:05.340\nsay well now at this point I\nonly need those protocols.\n\n402\n00:22:05.340 --> 00:22:06.340\nAnd speaking of protocols,\n\n403\n00:22:06.340 --> 00:22:09.490\nthat's one of these reasons we want\nto close off FTP in general, right?\n\n404\n00:22:09.490 --> 00:22:11.720\nSo this is definitely\nexploiting that protocol and\n\n405\n00:22:11.720 --> 00:22:15.070\nspeaking about protocols are there any\nother kinds of protocols we can use on\n\n406\n00:22:15.070 --> 00:22:16.870\na network to do scanning and stuff?\n\n407\n00:22:16.870 --> 00:22:21.520\n&gt;&gt; Yeah, the cool thing is and this is\nWes leading me into my last scan for\n\n408\n00:22:21.520 --> 00:22:24.920\nour show here which is\nthe protocol scan itself.\n\n409\n00:22:24.920 --> 00:22:28.930\nAnd what we're talking about here, I was\nlike why would we scan for protocols?\n\n410\n00:22:28.930 --> 00:22:30.470\nNormally we're scanning for ports right?\n\n411\n00:22:30.470 --> 00:22:36.750\nThis is advanced port scanning with Nmap,\nI'm typically scanning for ports because\n\n412\n00:22:36.750 --> 00:22:41.280\nif the port is open, maybe I can exploit\nthe service that is being run there.\n\n413\n00:22:41.280 --> 00:22:43.090\nSo why are we scanning for protocols?\n\n414\n00:22:43.090 --> 00:22:48.090\nWell because every now and then a protocol\ncan at least give you some information.\n\n415\n00:22:48.090 --> 00:22:51.020\nThey can be very informational about\nthe network that you're working with.\n\n416\n00:22:51.020 --> 00:22:56.410\nThat information can be what type\nof device that you're scanning\n\n417\n00:22:56.410 --> 00:22:57.910\nbecause of the protocols\nthat it's running.\n\n418\n00:22:57.910 --> 00:23:01.950\nSo it can be beneficial for us and\nI'm just going to go quickly through\n\n419\n00:23:01.950 --> 00:23:07.980\nthe protocol scan because again it's\na very quick and dirty little thing to do.\n\n420\n00:23:07.980 --> 00:23:10.740\nIt's probably not going to\nenumerate a ton of information.\n\n421\n00:23:10.740 --> 00:23:12.630\nOn larger networks,\nyou're going to get better stuff.\n\n422\n00:23:12.630 --> 00:23:14.740\nBut it's nice to know what\nprotocols are being run.\n\n423\n00:23:14.740 --> 00:23:19.030\nAnd then as we get into os detection and\nversioning.\n\n424\n00:23:19.030 --> 00:23:21.290\nMaybe the version of that that's running.\n\n425\n00:23:21.290 --> 00:23:23.140\nMaybe that protocol is old.\n\n426\n00:23:23.140 --> 00:23:27.350\nOr is a previous version of a protocol or\nservice or whatever.\n\n427\n00:23:27.350 --> 00:23:32.350\nThat's happening and we'll get to exploit\nthat because it has known vulnerabilities.\n\n428\n00:23:32.350 --> 00:23:36.040\nBut let's look at how we do a protocol\nscan really really quickly.\n\n429\n00:23:36.040 --> 00:23:41.470\nSo all we have to do the -SO option so\nlet's run that really quickly.\n\n430\n00:23:41.470 --> 00:23:44.130\nLet me clear my screen,\nand we'll say, actually,\n\n431\n00:23:44.130 --> 00:23:46.890\nwe'll go to this one so this tail on it.\n\n432\n00:23:47.990 --> 00:23:53.386\nSudo, don't forget sudo, nmap -sO.\n\n433\n00:23:53.386 --> 00:23:56.671\nLike that remember it's always\nlowercase capital, usually anyway.\n\n434\n00:23:56.671 --> 00:23:59.911\nEspecially when it comes to the scans,\nthe port scans.\n\n435\n00:23:59.911 --> 00:24:01.231\nThat will fire that off.\n\n436\n00:24:01.231 --> 00:24:03.844\nAnd then pick your target,\njust like we do with any of our others.\n\n437\n00:24:03.844 --> 00:24:08.513\nSo I'll say, 192.168.219.135,\n\n438\n00:24:08.513 --> 00:24:11.914\nour trusty old meta support machine.\n\n439\n00:24:11.914 --> 00:24:18.078\nI will elevate to enumerate,\nif I can type my password correctly,\n\n440\n00:24:18.078 --> 00:24:20.973\nman, I'm fat fingering today.\n\n441\n00:24:20.973 --> 00:24:23.894\nI can do it, I can do it,\nthere it goes, there we go.\n\n442\n00:24:23.894 --> 00:24:26.383\n&gt;&gt; You've been doing too many episodes\nwith me, you know how I type,\n\n443\n00:24:26.383 --> 00:24:27.500\nI can't type to save my life.\n\n444\n00:24:27.500 --> 00:24:30.725\n&gt;&gt; [LAUGH]\n&gt;&gt; Wes is like I've got boxing gloves on,\n\n445\n00:24:30.725 --> 00:24:32.084\nhere we go, typity type.\n\n446\n00:24:32.084 --> 00:24:37.105\nBut let's crank a way, I do want to say\nthis is probably gonna take a few minutes.\n\n447\n00:24:37.105 --> 00:24:40.452\nThe protocol scan takes a little bit\nlonger, again, we can do our timing,\n\n448\n00:24:40.452 --> 00:24:41.531\nthings of that nature.\n\n449\n00:24:41.531 --> 00:24:47.070\nWe'll get to that one in those episodes\non how to most effectively work timing.\n\n450\n00:24:47.070 --> 00:24:49.390\nMake things work a little bit faster,\ndo whatever you can.\n\n451\n00:24:49.390 --> 00:24:52.090\nNmap is efficient,\nwe just have to know what we want to do.\n\n452\n00:24:52.090 --> 00:24:56.655\nI'm just sticking with defaults now\nbecause I don't want to overwhelm you\n\n453\n00:24:56.655 --> 00:25:00.792\nwith different options,\nwow that's command was nine lines long.\n\n454\n00:25:00.792 --> 00:25:03.490\nNo, no, let's keep it simple for\nthe moment, being here.\n\n455\n00:25:03.490 --> 00:25:05.309\n&gt;&gt; And while we're waiting with this Dan,\n\n456\n00:25:05.309 --> 00:25:08.960\nI can see why protocols do come important\nhere, because what does a protocol do?\n\n457\n00:25:08.960 --> 00:25:11.099\nWe know that it shakes hands\nwith those ports, right?\n\n458\n00:25:11.099 --> 00:25:14.800\nWith that session layer of the OSI model,\nthat's why we're using those ports.\n\n459\n00:25:14.800 --> 00:25:16.823\nWell the ports that\nare being used are again,\n\n460\n00:25:16.823 --> 00:25:19.230\nthey all connect back to\nthings like your protocols.\n\n461\n00:25:19.230 --> 00:25:24.671\nI know when I say, ports like port 3139,\nI say, port 445, right?\n\n462\n00:25:24.671 --> 00:25:26.215\nFor Microsoft, right?\n\n463\n00:25:26.215 --> 00:25:27.080\nWindows ports.\n\n464\n00:25:27.080 --> 00:25:29.970\nIf I say, port 51, I know it's\nprobably running the DNS protocol.\n\n465\n00:25:29.970 --> 00:25:33.060\nSo you can see how in the end,\nthey're all kinda shaking hands and\n\n466\n00:25:33.060 --> 00:25:34.448\nthey're really are just\nkind of bedfellows.\n\n467\n00:25:34.448 --> 00:25:35.121\n[LAUGH]\n&gt;&gt; Yeah, and\n\n468\n00:25:35.121 --> 00:25:39.018\nwhen we say protocol we're typically\nnot talking about services like DNS.\n\n469\n00:25:39.018 --> 00:25:42.487\nWe're talking ICMP, TCP, UDP.\n\n470\n00:25:42.487 --> 00:25:44.442\nThese are they types of\nprotocols we're looking for.\n\n471\n00:25:44.442 --> 00:25:47.464\nIPsec, GRE, right?\n\n472\n00:25:47.464 --> 00:25:49.526\nSo routers use that?\n\n473\n00:25:49.526 --> 00:25:50.586\nYeah, routers to use that.\n\n474\n00:25:50.586 --> 00:25:54.981\nVPN protocol, these are the types\nof protocols we're looking for,\n\n475\n00:25:54.981 --> 00:25:59.060\nnot necessarily a service all\nprotocol kind of like DNS.\n\n476\n00:25:59.060 --> 00:26:04.279\nSo that's what we're looking for now,\nwhat would normally going to find, right?\n\n477\n00:26:04.279 --> 00:26:10.160\nCuz 95% of the devices that network\nhost that you're gonna encounter,\n\n478\n00:26:10.160 --> 00:26:12.129\ngonna be some sort of PC.\n\n479\n00:26:12.129 --> 00:26:15.020\nThey're gonna be a Mac, they're gonna be a\nLinux box, they're gonna be a Windows box.\n\n480\n00:26:15.020 --> 00:26:18.800\nThey're gonna be running TCP,\nthey're gonna be running UDP,\n\n481\n00:26:18.800 --> 00:26:21.111\nand probably some sort of ICMP as well.\n\n482\n00:26:21.111 --> 00:26:24.413\nBecause we like to ping our stuff and\nmake sure that it's all talking and\n\n483\n00:26:24.413 --> 00:26:25.930\ndoing just fine.\n\n484\n00:26:25.930 --> 00:26:27.682\nSo what good does the scan do me?\n\n485\n00:26:27.682 --> 00:26:31.550\nIf that's what I'm gonna find, for\nthe most part woopa dee doo dah day.\n\n486\n00:26:31.550 --> 00:26:34.982\nBut it goes back to what I talked about,\n\n487\n00:26:34.982 --> 00:26:39.059\nwhat happens if I find IS lists or\nRIP or GRE.\n\n488\n00:26:39.059 --> 00:26:40.425\nMaybe this is a router.\n\n489\n00:26:40.425 --> 00:26:42.700\nBGP is on there, that's interesting.\n\n490\n00:26:42.700 --> 00:26:45.926\nThis is a really high end\nrouter most likely, or\n\n491\n00:26:45.926 --> 00:26:49.648\nat least a very important\nrouter if it's running BGP.\n\n492\n00:26:49.648 --> 00:26:52.140\nIf it's running OSPF,\nI know it's a router.\n\n493\n00:26:52.140 --> 00:26:55.450\nOkay, not maybe that,\nwhat version of OSPF is it running?\n\n494\n00:26:55.450 --> 00:26:57.560\nIs there any number of\nvulnerabilities to that?\n\n495\n00:26:57.560 --> 00:27:01.480\nAgain, information that could be useful,\nso we don't discount it.\n\n496\n00:27:01.480 --> 00:27:04.020\nWe do run these things to\nfind out what's going on.\n\n497\n00:27:04.020 --> 00:27:08.190\nIf I'm a pen tester,\nI'm gonna turn over every rock and\n\n498\n00:27:08.190 --> 00:27:12.780\nevery pebble, and find anything that\nwould be either information about\n\n499\n00:27:12.780 --> 00:27:17.430\nthe system that I could use in\na report to give back to my customer.\n\n500\n00:27:17.430 --> 00:27:22.382\nOr if I'm a black cat, I'm gonna use every\npiece of information that I'm gonna use\n\n501\n00:27:22.382 --> 00:27:23.884\nto get into that system.\n\n502\n00:27:23.884 --> 00:27:28.383\nMaybe there's a little known flaw in\nthis version of OSPF in this router that\n\n503\n00:27:28.383 --> 00:27:29.449\nthey're using.\n\n504\n00:27:29.449 --> 00:27:31.820\nI don't know, one way to find out, right?\n\n505\n00:27:31.820 --> 00:27:33.285\nIt's to scan, see what they're using.\n\n506\n00:27:33.285 --> 00:27:38.980\nSo as you can see, let's take a look\nat my screen again, it's still running.\n\n507\n00:27:38.980 --> 00:27:44.040\nThis takes a while, if you're waiting for\nan MNS scan, little quick aside.\n\n508\n00:27:44.040 --> 00:27:44.600\nIf you're waiting for\n\n509\n00:27:44.600 --> 00:27:48.740\nan MNS scan and you're wanna know about\nhow close are you to completion dude?\n\n510\n00:27:48.740 --> 00:27:54.250\nJust hit the Return or\nyour Enter key, and it'll tell you.\n\n511\n00:27:54.250 --> 00:27:58.051\nProtocol scan timing about 99.18% done.\n\n512\n00:27:58.051 --> 00:28:01.226\nIt says that there's two\nseconds remaining, but\n\n513\n00:28:01.226 --> 00:28:03.956\nI've noticed that it's not quite right.\n\n514\n00:28:03.956 --> 00:28:07.040\n[LAUGH] Accurate when it comes\nto how much time is remaining.\n\n515\n00:28:07.040 --> 00:28:10.289\nIt's close enough that you know okay,\nit's almost done.\n\n516\n00:28:10.289 --> 00:28:12.247\nThat's like every progress bar, right?\n\n517\n00:28:12.247 --> 00:28:15.400\n&gt;&gt; Yeah, you're talking about,\nwhat it would be?\n\n518\n00:28:15.400 --> 00:28:18.550\nIt would be 98% goes by just like that.\n\n519\n00:28:18.550 --> 00:28:21.100\nAnd of course, the last 2%,\ntwo seconds that we're waiting on here,\n\n520\n00:28:21.100 --> 00:28:23.400\nof course that takes\nlonger than the first 98%.\n\n521\n00:28:23.400 --> 00:28:24.740\n&gt;&gt; Yeah, that's exactly right.\n\n522\n00:28:24.740 --> 00:28:27.340\nSo I'm gonna go ahead and\njust kill the scan real quick.\n\n523\n00:28:27.340 --> 00:28:29.549\nI'll do a Ctrl+C to kill it.\n\n524\n00:28:29.549 --> 00:28:34.700\nAnd let's do a little more pointed\nof a scan, let's see here.\n\n525\n00:28:34.700 --> 00:28:39.461\nHow about we run, I kept one here just cuz\n\n526\n00:28:39.461 --> 00:28:43.944\nI know it'll run a little bit faster,\n\n527\n00:28:43.944 --> 00:28:48.424\nthe sudo nmap -so, like we like, and\n\n528\n00:28:48.424 --> 00:28:53.208\nthen I'll give it some specific ports.\n\n529\n00:28:53.208 --> 00:28:55.442\nNow when I say, ports, actually,\nit's not ports, I misspoke.\n\n530\n00:28:55.442 --> 00:28:57.120\nIt's easy to get those confused.\n\n531\n00:28:57.120 --> 00:28:59.120\nNormally, we use the -p it is ports.\n\n532\n00:28:59.120 --> 00:29:02.669\nBut when we're doing a protocol\nscan it becomes protocol, right.\n\n533\n00:29:02.669 --> 00:29:06.860\nWe're looking for the protocol,\nand what protocols do I want?\n\n534\n00:29:06.860 --> 00:29:09.850\nYou're saying,\nprotocols don't have numbers, right?\n\n535\n00:29:09.850 --> 00:29:11.272\nIf it's a port, yeah.\n\n536\n00:29:11.272 --> 00:29:13.100\nA port number there's port 21.\n\n537\n00:29:13.100 --> 00:29:15.060\nIt's FTP, there's port 22,\n\n538\n00:29:15.060 --> 00:29:20.110\nthat's SSH, but protocols don't\nhave protocol numbers do they?\n\n539\n00:29:20.110 --> 00:29:22.100\nNo, they don't, but they do in nmap.\n\n540\n00:29:22.100 --> 00:29:26.690\nNmap has a table of\ncommonly used protocols.\n\n541\n00:29:26.690 --> 00:29:31.140\nSo I can look at that table and\nsee which ones I want to scan for,\n\n542\n00:29:31.140 --> 00:29:35.870\nif I wanna be very distinct about,\nyeah, I'm looking for ISIS, so\n\n543\n00:29:35.870 --> 00:29:37.830\nI'm gonna use this protocol number.\n\n544\n00:29:37.830 --> 00:29:39.668\nAnd I'll show you that table\nhere in just a second.\n\n545\n00:29:39.668 --> 00:29:42.180\nBut I'll do -p,\nI'll give it some protocol numbers.\n\n546\n00:29:42.180 --> 00:29:46.830\nI'll say, 88.126,\nI wrote these down cuz I knew these\n\n547\n00:29:46.830 --> 00:29:50.506\nwould actually garnish\nus some attention here.\n\n548\n00:29:50.506 --> 00:29:57.607\nAnd 127, and then our target\n192.1 68.219.135, there we go.\n\n549\n00:29:57.607 --> 00:30:00.863\nElevate again, this time,\nI'll type it right the first time.\n\n550\n00:30:00.863 --> 00:30:03.125\nAnd there we go,\nmuch faster, as you can see,\n\n551\n00:30:03.125 --> 00:30:05.980\ncuz it's not iterating through\nevery single one of them.\n\n552\n00:30:05.980 --> 00:30:11.781\nAnd there we go, we see that it did\ncome back with a closed state for\n\n553\n00:30:11.781 --> 00:30:16.425\nthese, cuz 88s apparently\neigrp 126 is crtp,\n\n554\n00:30:16.425 --> 00:30:20.766\nwhatever the heck that is,\nand 127 is crudp.\n\n555\n00:30:20.766 --> 00:30:26.476\nAnd again, if you wanna know a little more\nabout what these protocol numbers are,\n\n556\n00:30:26.476 --> 00:30:27.819\nopen another tab.\n\n557\n00:30:27.819 --> 00:30:32.820\nYou go to user/local/share/nmap and\nyou do an ls.\n\n558\n00:30:32.820 --> 00:30:35.899\nYou'll see there are a few things here.\n\n559\n00:30:35.899 --> 00:30:42.110\nOne of them is nmap-protocols,\na little file here called nmap-protocols.\n\n560\n00:30:42.110 --> 00:30:45.980\nA cat, actually, I'll less it,\n\n561\n00:30:45.980 --> 00:30:51.857\nnmap-protocols, and\nnow we can see inside there.\n\n562\n00:30:51.857 --> 00:30:57.479\nThere we go, number 1,\nicmp, number 2, igmp.\n\n563\n00:30:57.479 --> 00:31:02.959\nSo if we reran this scan\nif I took all these out and\n\n564\n00:31:02.959 --> 00:31:10.494\njust said, port 1 or protocol 1,\nlook, icmp, it's open.\n\n565\n00:31:10.494 --> 00:31:13.885\nAnd notice that I didn't eigrp that would\nhave let me know if it did come back as\n\n566\n00:31:13.885 --> 00:31:15.410\nopen, that's a Cisco device.\n\n567\n00:31:15.410 --> 00:31:18.820\nThat's a Cisco router or\nmaybe it's a layer three switch.\n\n568\n00:31:18.820 --> 00:31:20.650\nI can start attacking that.\n\n569\n00:31:20.650 --> 00:31:22.270\nI know what it is, I know the device.\n\n570\n00:31:22.270 --> 00:31:24.550\nWe're starting to map\nthe network a little bit.\n\n571\n00:31:24.550 --> 00:31:27.512\nImagine that, with the network mapper,\nbut there you go.\n\n572\n00:31:27.512 --> 00:31:31.836\nLots of them through there, egp,\nyou name it, it's in there,\n\n573\n00:31:31.836 --> 00:31:34.570\na ton of stuff, and it kind of gives you.\n\n574\n00:31:34.570 --> 00:31:36.754\nIf you don't know what dcm-meas is,\n\n575\n00:31:36.754 --> 00:31:39.839\nyou can see that it is the dcn\nmeasurement subsystem.\n\n576\n00:31:39.839 --> 00:31:43.930\nAnd you can Internet search that out and\nfigure out what the heck that actually is.\n\n577\n00:31:43.930 --> 00:31:48.840\nBut it's a pretty easy thing for\nus to do, if you know where that file is,\n\n578\n00:31:48.840 --> 00:31:51.685\nso that you can tell what\nthe protocol numbers are.\n\n579\n00:31:51.685 --> 00:31:55.055\nOr you just wanna crank it off and\nlet it go, and see what comes back and\n\n580\n00:31:55.055 --> 00:31:58.384\nbe happy with that information\nthat's just fine and dandy as well.\n\n581\n00:31:58.384 --> 00:32:02.974\nI just wanted you guys to be aware,\nbecause for the sake of completion as\n\n582\n00:32:02.974 --> 00:32:06.877\nwell, that that protocol scan\nis part of the port scanning,\n\n583\n00:32:06.877 --> 00:32:08.884\nit's a protocol inside nmap.\n\n584\n00:32:08.884 --> 00:32:11.155\nBut Wes, that's about all I've got for\nus today.\n\n585\n00:32:11.155 --> 00:32:13.070\nThe bounce scan was really\nthe belle of the ball.\n\n586\n00:32:13.070 --> 00:32:14.576\nHopefully, you guys enjoyed that.\n\n587\n00:32:14.576 --> 00:32:16.250\n&gt;&gt; Absolutely, that was fun,\nI tell you what.\n\n588\n00:32:16.250 --> 00:32:18.730\nThis is a very,\nvery cool series to be a part of.\n\n589\n00:32:18.730 --> 00:32:22.910\nAnd if you aren't familiar with Nmap, like\nwe've said in past episodes, remember,\n\n590\n00:32:22.910 --> 00:32:24.470\nyou can get it out there for free.\n\n591\n00:32:24.470 --> 00:32:28.128\nSo go out, and\ncheck it out at ww www.nmap.org.\n\n592\n00:32:28.128 --> 00:32:30.690\nIt's a great piece of software.\n\n593\n00:32:30.690 --> 00:32:31.910\nBefore we wrap this one up Dan,\n\n594\n00:32:31.910 --> 00:32:33.810\nyou got anything else you'd like\nto throw out to the audience?\n\n595\n00:32:33.810 --> 00:32:37.080\n&gt;&gt; Just remember when you're scanning\nsystems to scan responsibly.\n\n596\n00:32:37.080 --> 00:32:40.510\nI always look to throw that\nlittle caveat in there.\n\n597\n00:32:40.510 --> 00:32:44.660\nI know Theodore, the guy, that\ncreates Nmap, he scans like Microsoft.\n\n598\n00:32:44.660 --> 00:32:46.450\nHe'll scan the entire network or\nthe Internet.\n\n599\n00:32:46.450 --> 00:32:49.910\nHe doesn't care, but that doesn't mean\nyou have the right to do that, okay?\n\n600\n00:32:49.910 --> 00:32:54.636\nOnly scan systems that you have access to,\nyou have permission to do.\n\n601\n00:32:54.636 --> 00:32:57.630\nI always like to leave you with that just\nso I can say, I did my due diligence.\n\n602\n00:32:57.630 --> 00:32:59.977\nSo when you're standing before a judge,\nyou can say,\n\n603\n00:32:59.977 --> 00:33:02.129\nwell Daniel [LAUGH] he told\nme [LAUGH] I could do this.\n\n604\n00:33:02.129 --> 00:33:02.758\nNo, I didn't.\n\n605\n00:33:02.758 --> 00:33:04.930\nI said, don't do that,\nyou scan your own systems in,\n\n606\n00:33:04.930 --> 00:33:06.406\nthat's just playing nice, right?\n\n607\n00:33:06.406 --> 00:33:07.757\nThat's what we like to do.\n\n608\n00:33:07.757 --> 00:33:11.399\nThis is great for understanding\nmapping our own networks out,\n\n609\n00:33:11.399 --> 00:33:16.290\ngetting inventories, things of that\nnature, see where the vulnerabilities lie.\n\n610\n00:33:16.290 --> 00:33:18.980\nSo that's really where I wanna press,\nand for\n\n611\n00:33:18.980 --> 00:33:21.560\nus to be more secure in our own networks.\n\n612\n00:33:21.560 --> 00:33:24.650\n&gt;&gt; Well thank you for those words of\nwisdom, and it does look like well,\n\n613\n00:33:24.650 --> 00:33:26.587\nwe've come to the end of another episode.\n\n614\n00:33:26.587 --> 00:33:30.408\nSo we're gonna go ahead and\ntake time to sign out here on ITPro.TV.\n\n615\n00:33:30.408 --> 00:33:31.940\nI've been your host, Wes Bryan.\n\n616\n00:33:31.940 --> 00:33:32.720\n&gt;&gt; I'm Daniel Lowry.\n\n617\n00:33:32.720 --> 00:33:34.579\n&gt;&gt; And we'll see you next time.\n\n618\n00:33:34.579 --> 00:33:42.640\n[MUSIC]\n\n",
          "vimeoId": "187998135"
        }
      ],
      "title": "NMAP"
    }
  ],
  "url": "nmap",
  "vLab": false
}
