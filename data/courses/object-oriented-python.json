{
  "description": "In this series, Vonne and Justin explore the intricate world of Object-Oriented Programming(OOP), particularly in the context of the Python programming language. Starting with the basics of OOP, Justin demonstrates the creation of classes and associated objects from those classes. Moreover, Justin demonstrates the use of Inheritance of classes to reduce code repetitiveness in an effort to adhere to the Don't Repeat Yourself (DRY) principle. Lastly, Justin builds a simple OOP centric text-based adventure. If you are ready to get into Object-Oriented Python, then join us!",
  "descriptionMD": "In this series, Vonne and Justin explore the intricate world of Object-Oriented Programming(OOP), particularly in the context of the Python programming language. Starting with the basics of OOP, Justin demonstrates the creation of classes and associated objects from those classes. Moreover, Justin demonstrates the use of Inheritance of classes to reduce code repetitiveness in an effort to adhere to the Don't Repeat Yourself (DRY) principle. Lastly, Justin builds a simple OOP centric text-based adventure. If you are ready to get into Object-Oriented Python, then join us!",
  "length": "16403",
  "name": "Object Oriented Python",
  "practiceExam": false,
  "subtitle": "Coding the way the cool kids do",
  "tagUrl": "developer",
  "topics": [
    {
      "episodes": [
        {
          "description": "In this series, Vonne and Justin explore the intricate world of Object-Oriented Programming(OOP), particularly in the context of the Python programming language. Starting with the basics of OOP, Justin demonstrates the creation of classes and associated objects from those classes. Moreover, Justin demonstrates the use of Inheritance of classes to reduce code repetitiveness in an effort to adhere to the Don't Repeat Yourself (DRY) principle. Lastly, Justin builds a simple OOP centric text-based adventure. If you are ready to get into Object-Oriented Python, then join us!",
          "length": "169",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-0-0-overview-031517-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-0-0-overview-031517-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-0-0-overview-031517-1-sm.jpg",
          "title": "Overview",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:07.433\n[SOUND] In this series, we're going to\nbe covering object-oriented Python.\n\n2\n00:00:07.433 --> 00:00:10.091\nSo Justin, what exactly is\nobject-oriented Python, and\n\n3\n00:00:10.091 --> 00:00:12.060\nwhat are are we gonna be covering?\n\n4\n00:00:12.060 --> 00:00:12.576\n&gt;&gt; So Yvonne,\n\n5\n00:00:12.576 --> 00:00:16.206\nobject-oriented Python is a particular\ntake on object-oriented programming.\n\n6\n00:00:16.206 --> 00:00:20.074\nSo we're gonna start by looking at\nobject-oriented programming from a very\n\n7\n00:00:20.074 --> 00:00:23.645\nhigh level, like abstraction,\nencapsulation, polymorphism, and\n\n8\n00:00:23.645 --> 00:00:24.730\ninheritance.\n\n9\n00:00:24.730 --> 00:00:27.240\nBut then we're gonna take\na look at how those ideas\n\n10\n00:00:27.240 --> 00:00:29.560\nplay into the Python language themselves.\n\n11\n00:00:29.560 --> 00:00:33.060\nAnd particularly, look at classes,\nmultiple inheritance,\n\n12\n00:00:33.060 --> 00:00:38.040\nsingle inheritance, how to use those\nclasses, and then what that all entails.\n\n13\n00:00:38.040 --> 00:00:40.670\n&gt;&gt; Okay, so that's a good big\npicture that we're going with.\n\n14\n00:00:40.670 --> 00:00:41.650\nWhat about the specifics?\n\n15\n00:00:41.650 --> 00:00:43.310\nWhat are we really gonna be diving into?\n\n16\n00:00:43.310 --> 00:00:47.350\n&gt;&gt; So as far as specifics for Python,\nafter we cover the object-oriented\n\n17\n00:00:47.350 --> 00:00:49.880\nprogramming principles,\nwe're gonna take a look at Python.\n\n18\n00:00:49.880 --> 00:00:51.860\nHow do I create a class, right?\n\n19\n00:00:51.860 --> 00:00:52.810\nHow do I start?\n\n20\n00:00:52.810 --> 00:00:53.690\nWhat are methods?\n\n21\n00:00:53.690 --> 00:00:55.780\nHow do I add methods to classes?\n\n22\n00:00:55.780 --> 00:00:59.470\nIn particular, we're gonna pay\nclose attention on being Pythonic.\n\n23\n00:00:59.470 --> 00:01:03.420\nSo if we give our class to someone else\nthat writes Python, they'll go, yeah,\n\n24\n00:01:03.420 --> 00:01:06.360\nthis is Python code,\nand it looks Pythonic.\n\n25\n00:01:06.360 --> 00:01:10.394\nAnd then we're gonna illustrate the\nnuanced differences between the difference\n\n26\n00:01:10.394 --> 00:01:12.391\ninheritance models of Python, right?\n\n27\n00:01:12.391 --> 00:01:14.043\nWhat about single inheritance,\n\n28\n00:01:14.043 --> 00:01:17.660\nwhich is available in a great deal\nof object-oriented languages?\n\n29\n00:01:17.660 --> 00:01:20.143\nBut also,\nPython provides multiple inheritance.\n\n30\n00:01:20.143 --> 00:01:25.112\nAnd as kind of a juxtaposition to that,\nhow can we not use multiple inheritance,\n\n31\n00:01:25.112 --> 00:01:29.200\ncuz it does have its issues,\nand use composition instead?\n\n32\n00:01:29.200 --> 00:01:32.620\nAnd in the grand finale,\nwe're gonna start building\n\n33\n00:01:32.620 --> 00:01:36.960\na text-based adventure game employing\nthese object-oriented principles.\n\n34\n00:01:36.960 --> 00:01:41.730\nAnd building these Python classes to,\nwell, play a game and\n\n35\n00:01:41.730 --> 00:01:43.800\nsee how that kind of burgeons forth.\n\n36\n00:01:43.800 --> 00:01:47.370\n&gt;&gt; All right, so what should we\nknow before starting this series?\n\n37\n00:01:47.370 --> 00:01:51.490\nWhat do you assume people out there\nshould know before watching anything?\n\n38\n00:01:51.490 --> 00:01:53.460\nAnd what's our ultimate goal?\n\n39\n00:01:53.460 --> 00:01:57.630\n&gt;&gt; So Yvonne, as far as who's this course,\nthis series concerned, right?\n\n40\n00:01:57.630 --> 00:01:59.790\nWho's actually going to benefit most?\n\n41\n00:01:59.790 --> 00:02:01.500\nIf you've been programming\nin Python before,\n\n42\n00:02:01.500 --> 00:02:03.380\nyou know a little bit about the language.\n\n43\n00:02:03.380 --> 00:02:05.800\nYou know how a for loop and\na while loop works.\n\n44\n00:02:05.800 --> 00:02:11.270\nYou know how to construct integers and\nfloats and various object strings.\n\n45\n00:02:11.270 --> 00:02:14.490\nThis is probably gonna be a good\nway to level up your skills.\n\n46\n00:02:14.490 --> 00:02:19.830\nHowever, if you've never programmed in\nPython before, or maybe you've touched on\n\n47\n00:02:19.830 --> 00:02:24.320\nit, you've seen it, this may be a little\nbeyond what you're comfortable with.\n\n48\n00:02:24.320 --> 00:02:27.170\nWith that said,\nit never hurts to check things out.\n\n49\n00:02:27.170 --> 00:02:31.500\nSo the ultimate goal is to\nlevel up your Python skills.\n\n50\n00:02:31.500 --> 00:02:33.810\nBut unfortunately,\nthere is not a certification at the end,\n\n51\n00:02:33.810 --> 00:02:37.860\nas some of our other\ntechnology avenues take us.\n\n52\n00:02:37.860 --> 00:02:39.500\nIt's just about getting better.\n\n53\n00:02:39.500 --> 00:02:43.403\nSo if that sounds like something you're\ninterested in, definitely check this out,\n\n54\n00:02:43.403 --> 00:02:44.607\nand we'll see you there.\n\n55\n00:02:46.171 --> 00:02:48.610\n[SOUND]\n\n",
          "vimeoId": "208844363"
        },
        {
          "description": "In this episode, Vonne and Justin cover the basics of getting started in Object-Oriented Python. They cover topics such as the current version of Python, types of text editors and IDEs to edit code, and testing in the REPL.",
          "length": "1545",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-1-1-installation_and_setup-030817-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-1-1-installation_and_setup-030817-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-1-1-installation_and_setup-030817-1-sm.jpg",
          "title": "Installation and Setup",
          "transcript": "WEBVTT\n\n1\n00:00:00.006 --> 00:00:05.560\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:05.560 --> 00:00:06.685\n[CROSSTALK]\n\n3\n00:00:06.685 --> 00:00:08.303\n[MUSIC]\n\n4\n00:00:08.303 --> 00:00:12.649\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:12.649 --> 00:00:17.240\n&gt;&gt; Hello everyone, and welcome to\nanother exciting episode of ITProTV.\n\n6\n00:00:17.240 --> 00:00:18.853\nI'm your host Vonne Smith and\n\n7\n00:00:18.853 --> 00:00:23.381\ntoday we're going to be exploring the\nwonderful world of object oriented Python.\n\n8\n00:00:23.381 --> 00:00:27.008\nAnd in this episode, we're going to\nbe going over the installation and\n\n9\n00:00:27.008 --> 00:00:27.672\nthe setup and\n\n10\n00:00:27.672 --> 00:00:31.880\neverything we need to know to get started\ncoding with this fantastic language.\n\n11\n00:00:31.880 --> 00:00:36.030\nAnd here to help us on this fantastic\njourney, is Mr. Justin Dennis.\n\n12\n00:00:36.030 --> 00:00:37.360\nAnd hello Justin, how are you doing?\n\n13\n00:00:37.360 --> 00:00:38.910\n&gt;&gt; I'm doing well Vonne,\nhow are you today?\n\n14\n00:00:38.910 --> 00:00:40.266\n&gt;&gt; I'm super excited to be here and\n\n15\n00:00:40.266 --> 00:00:42.940\nlearn all about this Python\nthing we're talking about today.\n\n16\n00:00:42.940 --> 00:00:44.430\n&gt;&gt; Yeah Python, not talking about a snake.\n\n17\n00:00:44.430 --> 00:00:45.819\nI'm scared of snakes actually.\n\n18\n00:00:45.819 --> 00:00:46.970\n&gt;&gt; Me too,\nI'm glad we're not doing snakes.\n\n19\n00:00:46.970 --> 00:00:49.850\n&gt;&gt; Yeah, if there's a snake here,\nI'm running away.\n\n20\n00:00:49.850 --> 00:00:54.320\nSo yeah, Python, we've covered some\nother things in the course library.\n\n21\n00:00:54.320 --> 00:00:57.160\nIf you haven't checked out our Intro to\nPython series, definitely check that out.\n\n22\n00:00:57.160 --> 00:00:59.490\nCuz there's some\nassumptive knowledge here.\n\n23\n00:00:59.490 --> 00:01:03.600\nBut we are gonna make sure they're set up,\nbecause a couple things may have changed.\n\n24\n00:01:03.600 --> 00:01:04.980\nSome of the environment may have changed.\n\n25\n00:01:04.980 --> 00:01:08.910\nSo that's kind of where we're gonna start\nis just the installation and setup, so.\n\n26\n00:01:08.910 --> 00:01:11.720\n&gt;&gt; All right, cool, well before we\nactually get started with that, I've heard\n\n27\n00:01:11.720 --> 00:01:16.150\nsome things about Python and numbers,\nthere's like a one, two, five, eight.\n\n28\n00:01:16.150 --> 00:01:17.620\nWhere are we at, where are we starting?\n\n29\n00:01:17.620 --> 00:01:20.090\n&gt;&gt; So that is a great question, Vonne.\n\n30\n00:01:20.090 --> 00:01:24.860\nSo we started out in Python 1 came around,\nit was early edition.\n\n31\n00:01:24.860 --> 00:01:27.190\nAnd then slowly we moved to Python 2, and\n\n32\n00:01:27.190 --> 00:01:30.780\npeople really gravitated\nto the Python 2 version.\n\n33\n00:01:30.780 --> 00:01:33.170\nIt had some nuanced\ndifferences from Python 3,\n\n34\n00:01:33.170 --> 00:01:35.910\nwhich is now the preferred version.\n\n35\n00:01:35.910 --> 00:01:39.220\nSo we have Python 2 and Python 3,\nand they're still both distributed.\n\n36\n00:01:39.220 --> 00:01:42.510\nAnd that's what's really confusing for\na lot of people who are just starting.\n\n37\n00:01:42.510 --> 00:01:44.797\nOr maybe you're like I know\na little bit of Python, but\n\n38\n00:01:44.797 --> 00:01:46.307\nit's always been available to me.\n\n39\n00:01:46.307 --> 00:01:49.950\nLike the environment is set up for me,\nI haven't really had to worry about that.\n\n40\n00:01:49.950 --> 00:01:52.177\nSo we're going to focus on Python 3,\n\n41\n00:01:52.177 --> 00:01:55.430\nand in particular anything that is 3.5 or\nhigher.\n\n42\n00:01:55.430 --> 00:01:59.120\nSo, if you're watching this\nvideo at a later time.\n\n43\n00:01:59.120 --> 00:02:05.220\nThen if it's above 3.5, assuming that\nit's not version 4 by that time,\n\n44\n00:02:05.220 --> 00:02:08.430\nthat shouldn't be for a while now.\n\n45\n00:02:08.430 --> 00:02:11.930\nThen you should be okay with everything\nwe're gonna use in this series.\n\n46\n00:02:11.930 --> 00:02:18.300\nBut just remember, if you somehow\nget Python 2, 2.7 is the last one.\n\n47\n00:02:18.300 --> 00:02:23.130\nYou need to be aware, if you get used to\nthat, in 2020, the Python organization\n\n48\n00:02:23.130 --> 00:02:26.820\nlike the main Python consortium,\nthey're gonna sunset it.\n\n49\n00:02:26.820 --> 00:02:30.388\nNo more updates, no more security updates,\nit is no longer supported after 2020.\n\n50\n00:02:30.388 --> 00:02:35.356\nSo you should definitely,\neven if you started in Python 2, or\n\n51\n00:02:35.356 --> 00:02:39.215\nyou have,\nyou should start moving to Python 3.\n\n52\n00:02:39.215 --> 00:02:42.130\nSo, how are we gonna get\nPython 3 on our system, right?\n\n53\n00:02:42.130 --> 00:02:47.210\nLet's assume I have a system that's brand\nnew, if you have a Linux system, or\n\n54\n00:02:47.210 --> 00:02:52.980\nan OSX, a Mac system, then a lot of\ntimes you already have Python installed.\n\n55\n00:02:52.980 --> 00:02:57.600\nBut be wary, a lot of that has\nto do with system tools that\n\n56\n00:02:57.600 --> 00:03:02.830\nuse Python behind the scenes and\nthat may be a Python 2 distribution.\n\n57\n00:03:02.830 --> 00:03:07.180\nBut, if you do not have it,\nthen we gotta install it.\n\n58\n00:03:07.180 --> 00:03:10.360\nThere's several ways to install\nit on a Windows, Mac, Linux,\n\n59\n00:03:10.360 --> 00:03:13.000\nand various other operating systems.\n\n60\n00:03:13.000 --> 00:03:14.440\nBut what I find to be helpful,\n\n61\n00:03:14.440 --> 00:03:19.790\njust to get everybody all together\nis to use the official distribution.\n\n62\n00:03:19.790 --> 00:03:22.740\nSo, if we hop down into my screen here.\n\n63\n00:03:22.740 --> 00:03:27.018\nSo, I'm on Python.org,\nwhich is the official distribution,\n\n64\n00:03:27.018 --> 00:03:28.720\nthe organizing body.\n\n65\n00:03:28.720 --> 00:03:31.420\nZoom that in a little bit,\nit's a little hard to read.\n\n66\n00:03:31.420 --> 00:03:35.230\nSo, this tells you all about Python,\nincluding documentation.\n\n67\n00:03:35.230 --> 00:03:41.140\nBut notice, if I go to documentation,\nit has a 3.x Docs and a 2.x Docs, right?\n\n68\n00:03:41.140 --> 00:03:43.740\nAnything that is version 3 is listed here.\n\n69\n00:03:43.740 --> 00:03:46.900\nAnything that is version 2,\nand, typically,\n\n70\n00:03:46.900 --> 00:03:52.000\nit's the most recent minor version,\nso it would be 2.7 and then, 3.6.\n\n71\n00:03:52.000 --> 00:03:57.892\nIf I'm not mistaken, may have to double\ncheck on that, but we also have downloads.\n\n72\n00:03:57.892 --> 00:04:02.680\nAnd notice it has detected\nthat I'm using Mac, but\n\n73\n00:04:02.680 --> 00:04:05.690\nall of these other platforms\nare available to us.\n\n74\n00:04:05.690 --> 00:04:09.370\nWe have Windows, OS X,\nlet's look at other platforms.\n\n75\n00:04:09.370 --> 00:04:11.420\nLet's just see what's available to us.\n\n76\n00:04:11.420 --> 00:04:15.890\nAS/400, BeOS,\nI don't even know some of these.\n\n77\n00:04:15.890 --> 00:04:18.213\nSo Python is very well supported, and\n\n78\n00:04:18.213 --> 00:04:23.295\nthat's good to know because it's kind\nof a level playing field for all of us.\n\n79\n00:04:23.295 --> 00:04:27.525\nBut, the first thing we need to do\nis just grab this binary installer,\n\n80\n00:04:27.525 --> 00:04:30.334\nif I click it, then it starts installing.\n\n81\n00:04:30.334 --> 00:04:34.940\nNow, we're using the CPython\ndistribution for this course.\n\n82\n00:04:34.940 --> 00:04:38.421\nThat's the standard one that's\navailable from Python.org.\n\n83\n00:04:38.421 --> 00:04:42.540\nWhen people think of Python, that's,\na lot of times, what they normally go to.\n\n84\n00:04:42.540 --> 00:04:45.850\nBut that is not the only\ndistribution that is available.\n\n85\n00:04:45.850 --> 00:04:50.690\nYou may hear of alternative distributions\nlike Anaconda or Enthought Canopy.\n\n86\n00:04:50.690 --> 00:04:53.964\nThose are actually CPython\ndistributions that\n\n87\n00:04:53.964 --> 00:04:57.409\nprovide tools to help\nmanage external packages.\n\n88\n00:04:57.409 --> 00:05:01.882\nOr come pre-bundled with\nall of these extra helper\n\n89\n00:05:01.882 --> 00:05:04.700\npieces of software for Python.\n\n90\n00:05:05.770 --> 00:05:08.921\nBut also, there's other versions\nof Python, like Jython.\n\n91\n00:05:08.921 --> 00:05:11.669\nSo, if we take a look here\nwhile that's downloading.\n\n92\n00:05:12.870 --> 00:05:14.670\nSo, we have the Jython project.\n\n93\n00:05:14.670 --> 00:05:17.960\nAnd it's kind of been dormant for a while,\nbut I still hear people talk about it,\n\n94\n00:05:17.960 --> 00:05:18.520\nask about it.\n\n95\n00:05:18.520 --> 00:05:23.110\nAnd what Jython is,\nis Python written kind of on top of Java,\n\n96\n00:05:23.110 --> 00:05:24.498\nwhich is another programming language.\n\n97\n00:05:24.498 --> 00:05:30.100\nAnd that's kinda weird, you can actually\nuse Java stuff from within Python.\n\n98\n00:05:30.100 --> 00:05:32.340\nBut, we're not using this one,\n\n99\n00:05:32.340 --> 00:05:35.090\nbecause it has kind of a special use case,\nso be aware.\n\n100\n00:05:35.090 --> 00:05:38.812\nThere's also IronPython,\nwhich is Python for\n\n101\n00:05:38.812 --> 00:05:43.760\nthe .NET platform, or\nthat's the C# Visual Basic to .NET.\n\n102\n00:05:43.760 --> 00:05:45.610\nThose type of programming languages.\n\n103\n00:05:45.610 --> 00:05:50.490\nIt then uses that kind of\nruntime under the covers.\n\n104\n00:05:50.490 --> 00:05:54.960\nWe are focused on CPython,\nand why is it called CPython?\n\n105\n00:05:54.960 --> 00:05:58.150\nWell, that's because the underlying\ninterpreter is written in C,\n\n106\n00:05:58.150 --> 00:06:04.690\nit's just the C programming language, kind\nof abstracted away for you to use Python.\n\n107\n00:06:04.690 --> 00:06:10.090\nSo be careful, different distributions,\nwe're using Python.org.\n\n108\n00:06:10.090 --> 00:06:13.650\nBut I do see that my installer,\nit's done, it's actually fairly small.\n\n109\n00:06:13.650 --> 00:06:18.482\nAnd if I click it,\nyou may have a little bit different kind\n\n110\n00:06:18.482 --> 00:06:21.816\nof screen other than I do, I'm on OS X.\n\n111\n00:06:21.816 --> 00:06:25.380\nYou'll see something similar to this,\nif you are also on OS X.\n\n112\n00:06:25.380 --> 00:06:28.132\nIf you're on Windows,\nyou'll see something a little different.\n\n113\n00:06:28.132 --> 00:06:33.500\nBut if I hit Continue, Continue,\nContinue, do I agree, I do agree.\n\n114\n00:06:33.500 --> 00:06:36.500\nWhere do I wanna install it,\non the only hard drive I have.\n\n115\n00:06:36.500 --> 00:06:38.920\nAnd then I'm gonna click install, and\n\n116\n00:06:40.790 --> 00:06:45.270\nyou will have to give elevated\npermissions in order to install Python.\n\n117\n00:06:45.270 --> 00:06:49.909\nIt writes out a few files, and in just\na moment, we should be up and ready to go.\n\n118\n00:06:49.909 --> 00:06:54.400\nNow, we will test this shortly, but\nthis, I just wanted to show you.\n\n119\n00:06:54.400 --> 00:06:59.430\nIt's fairly simple to get this installed,\nup and going.\n\n120\n00:07:00.750 --> 00:07:05.503\nSo, we're gonna be programming in Python,\nwhich involves writing code, but\n\n121\n00:07:05.503 --> 00:07:08.280\nit's kinda weird.\n\n122\n00:07:08.280 --> 00:07:12.010\n&gt;&gt; Okay, so great, so, the first step for\nus to do is to install\n\n123\n00:07:12.010 --> 00:07:15.980\nPython on whatever operating system\nthat we're using on our computer.\n\n124\n00:07:15.980 --> 00:07:19.860\nAll right, so the next step is, we're\ngonna start actually typing in the code or\n\n125\n00:07:19.860 --> 00:07:22.090\nthe programming language that we're using,\ncorrect?\n\n126\n00:07:22.090 --> 00:07:23.230\nSo, where we do that?\n\n127\n00:07:23.230 --> 00:07:25.595\n&gt;&gt; So, that's a great question Vonne, and\n\n128\n00:07:25.595 --> 00:07:29.525\nthere's several places that I can\ngo to to manipulate text, right?\n\n129\n00:07:29.525 --> 00:07:32.645\nI will forewarn you,\nyou don't want to open Microsoft Word or\n\n130\n00:07:32.645 --> 00:07:36.610\nanything like that and try to type,\nyou will have a very bad experience.\n\n131\n00:07:36.610 --> 00:07:39.890\nIt involves lots of crying and\nkind of being frustrated.\n\n132\n00:07:39.890 --> 00:07:42.310\nSo, we can't have that,\nbut if we hop down.\n\n133\n00:07:42.310 --> 00:07:45.977\nI'm just gonna review a few text\neditors that are available.\n\n134\n00:07:45.977 --> 00:07:50.850\nThere is the Atom text editor, so\natom.io, this is a rich text editor.\n\n135\n00:07:50.850 --> 00:07:55.988\nIt doesn't provide anything else then some\nmanagement tools, a plugin ecosystem.\n\n136\n00:07:55.988 --> 00:07:59.839\nSo I can kind of give it upgrades and\nsyntax highlighting for Python.\n\n137\n00:07:59.839 --> 00:08:01.663\nThis will actually be the one that we use,\nand\n\n138\n00:08:01.663 --> 00:08:03.295\nwe'll take a look at it in just a moment.\n\n139\n00:08:03.295 --> 00:08:08.990\nIn the same vein,\na very popular one is Sublime Text.\n\n140\n00:08:08.990 --> 00:08:12.200\nThis is available, it works well,\nit's very similar to Atom, and\n\n141\n00:08:12.200 --> 00:08:16.680\nit was kinda the first to the game\nwith this rich text editor paradigm.\n\n142\n00:08:16.680 --> 00:08:18.280\nWell, not first to the game.\n\n143\n00:08:18.280 --> 00:08:21.810\nLet me,\nit's one of the first ones that I used.\n\n144\n00:08:21.810 --> 00:08:25.680\nThere were some others that came before,\nbut it has some wonderful features.\n\n145\n00:08:25.680 --> 00:08:28.470\nDefinitely check it out, and then also\n\n146\n00:08:28.470 --> 00:08:33.050\nMicrosoft has started putting out Visual\nStudio code which is similar to Atom, but\n\n147\n00:08:33.050 --> 00:08:38.040\nuses some of their own code\ncompletion syntax highlighting tools.\n\n148\n00:08:38.040 --> 00:08:39.210\nVery wonderful.\n\n149\n00:08:39.210 --> 00:08:43.180\nOn top of just these plain text editors\nwhere you have to do some additional set\n\n150\n00:08:43.180 --> 00:08:46.890\nup and how much you have to do of\nthat depends on the text editor.\n\n151\n00:08:48.500 --> 00:08:50.470\nWe have IDEs.\n\n152\n00:08:50.470 --> 00:08:52.580\nSo I have an IDE called Spyder.\n\n153\n00:08:52.580 --> 00:08:54.750\nThis is for scientific Python.\n\n154\n00:08:54.750 --> 00:09:00.350\nYou'll notice, it gives you a giant\nlist here of installing on Windows,\n\n155\n00:09:00.350 --> 00:09:04.390\ninstalling on Mac, installing on Linux,\nrunning directly from source.\n\n156\n00:09:04.390 --> 00:09:07.310\nWell, this one could be a little iffy.\n\n157\n00:09:07.310 --> 00:09:09.800\nBut there's not a lot of pictures.\n\n158\n00:09:09.800 --> 00:09:13.750\nI don't know, it seems to have\na very particular use case.\n\n159\n00:09:13.750 --> 00:09:16.930\nI've used it for some scientific\nprogramming that I've done, but\n\n160\n00:09:16.930 --> 00:09:19.480\nI don't use it all of the time.\n\n161\n00:09:19.480 --> 00:09:21.734\nBut there's also PyCharm,\nwhich is from JetBrains.\n\n162\n00:09:21.734 --> 00:09:24.640\nIt's kind of an all-inclusive IDE.\n\n163\n00:09:26.380 --> 00:09:29.520\nAnd you can see, Python IDE for\nprofessional developers.\n\n164\n00:09:29.520 --> 00:09:33.080\nThere are two version of PyCharm,\nthere's community edition and\n\n165\n00:09:33.080 --> 00:09:34.290\nprofessional edition.\n\n166\n00:09:34.290 --> 00:09:35.680\nCommunity edition is free.\n\n167\n00:09:35.680 --> 00:09:39.030\nIt is not as feature rich as\nthe professional edition.\n\n168\n00:09:39.030 --> 00:09:43.481\nProfessional edition does have a cost but\nthis will have everything bundled together\n\n169\n00:09:43.481 --> 00:09:47.436\nthat you would need to manipulate your\nPython code, syntax highlighting,\n\n170\n00:09:47.436 --> 00:09:48.570\ncode reformatting.\n\n171\n00:09:48.570 --> 00:09:52.750\nActually being able to run by\njust clicking a play button.\n\n172\n00:09:54.130 --> 00:09:57.150\nAnd along those same lines, there is Wing,\n\n173\n00:09:57.150 --> 00:10:02.340\nwhich was kind of a good competitor\nto PyCharm in the IDE space.\n\n174\n00:10:02.340 --> 00:10:05.080\nBut if you've ever messed around\nwith other programming languages,\n\n175\n00:10:05.080 --> 00:10:09.110\nEclipse, NetBeans, some of those,\nas well as Visual Studio,\n\n176\n00:10:09.110 --> 00:10:11.980\nthe full-featured one which\nis only available on Windows.\n\n177\n00:10:11.980 --> 00:10:17.430\nAlso have Python plugins that you\ncan use to develop your Python code.\n\n178\n00:10:17.430 --> 00:10:19.920\nBut those are kind of heavyweight so\n\n179\n00:10:19.920 --> 00:10:23.328\nwe may not get in to using\nthose during this time.\n\n180\n00:10:23.328 --> 00:10:28.385\n&gt;&gt; So Justin, if you don't mind me asking,\nwhat does IDE stand for?\n\n181\n00:10:28.385 --> 00:10:30.245\n&gt;&gt; Yvonne, sometimes I get so\n\n182\n00:10:30.245 --> 00:10:34.105\nexcited about this I forget that I'm\njust throwing out jargon and lingo.\n\n183\n00:10:34.105 --> 00:10:37.615\nSo IDE is\nan Integrated Development Environment.\n\n184\n00:10:37.615 --> 00:10:41.855\nSo that means everything that I need for\ndevelopment including the runtime\n\n185\n00:10:41.855 --> 00:10:45.515\nenvironment, the text editor,\nall the other tools for debugging and\n\n186\n00:10:45.515 --> 00:10:49.960\nthings are kind of just packaged all\ntogether in this nice, neat bundle.\n\n187\n00:10:49.960 --> 00:10:51.430\nBut you caught me, Yvonne.\n\n188\n00:10:51.430 --> 00:10:53.870\nThanks for getting me on that.\n\n189\n00:10:53.870 --> 00:10:58.550\n&gt;&gt; So it's really just a text editor on\nsteroids a little, so it has a lot more.\n\n190\n00:10:58.550 --> 00:11:00.271\n&gt;&gt; Yeah, it's a text editor up to 11.\n\n191\n00:11:00.271 --> 00:11:03.910\n&gt;&gt; Okay, and it doesn't matter\nwhich one you choose to use.\n\n192\n00:11:03.910 --> 00:11:08.100\nYou could use just a plain text editor or\nthe IDE.\n\n193\n00:11:08.100 --> 00:11:12.580\nIt's really whatever you prefer, whatever\nenvironment that you prefer to work in.\n\n194\n00:11:12.580 --> 00:11:17.050\n&gt;&gt; That is, a wonderful kind of\nsynopsis of where we've come from.\n\n195\n00:11:17.050 --> 00:11:18.190\nI've shown you some choices.\n\n196\n00:11:18.190 --> 00:11:19.570\nThese are not exhaustive choices.\n\n197\n00:11:20.930 --> 00:11:22.750\nBut you said something very important,\n\n198\n00:11:22.750 --> 00:11:26.640\na plain text editor,\nthat's where it gets you.\n\n199\n00:11:26.640 --> 00:11:29.990\nA plain text editor means I'm not\nadding any additional formatting.\n\n200\n00:11:29.990 --> 00:11:34.107\nIf you have custom file\nextensions like .doc or\n\n201\n00:11:34.107 --> 00:11:38.600\n.docx or .odt, those are kind of\n\n202\n00:11:38.600 --> 00:11:44.430\nencoding some formatting in all of\nthese nice styles in that text file.\n\n203\n00:11:44.430 --> 00:11:46.580\nIf you try to write Python code,\nor any code for\n\n204\n00:11:46.580 --> 00:11:50.600\nthat matter, in those,\nyou will not have a good time.\n\n205\n00:11:50.600 --> 00:11:53.190\nWhenever you try to compile or\nrun it, it'll just go, no,\n\n206\n00:11:53.190 --> 00:11:55.280\nI don't know what you're saying.\n\n207\n00:11:55.280 --> 00:11:57.760\nBut, we're gonna use a plain text editor.\n\n208\n00:11:57.760 --> 00:12:00.410\nAnd we're gonna learn a little\nbit about the command line,\n\n209\n00:12:00.410 --> 00:12:02.610\njust enough to be dangerous.\n\n210\n00:12:02.610 --> 00:12:03.450\n&gt;&gt; Okay, great.\n\n211\n00:12:03.450 --> 00:12:04.600\nSounds wonderful.\n\n212\n00:12:04.600 --> 00:12:07.520\n&gt;&gt; So, [COUGH] we have out text editor.\n\n213\n00:12:07.520 --> 00:12:09.298\nLet's take a look at which\none we're gonna use here.\n\n214\n00:12:09.298 --> 00:12:14.280\nIf you wanna download Adam,\nthen you can click Download For.\n\n215\n00:12:14.280 --> 00:12:19.060\nIt will auto-recognize what\noperating system you're on.\n\n216\n00:12:19.060 --> 00:12:20.120\nI'm on Mac.\n\n217\n00:12:20.120 --> 00:12:24.620\nIt's fairly, it's not huge but\nit's about 90 megabytes.\n\n218\n00:12:24.620 --> 00:12:26.490\nSo it may take a little while,\ndepending on your system,\n\n219\n00:12:26.490 --> 00:12:30.940\nto download, but\nit's a simple one-click install.\n\n220\n00:12:30.940 --> 00:12:35.500\nOn Windows, you click Install, and\nit kinda does its thing and you're done.\n\n221\n00:12:35.500 --> 00:12:38.380\nOn Mac you just open it up and\ndrop it in the applications folder.\n\n222\n00:12:38.380 --> 00:12:41.541\nSo I'm not going to take you through that,\nbut when you open it up,\n\n223\n00:12:41.541 --> 00:12:44.420\nyou will have something\nthat looks like this.\n\n224\n00:12:44.420 --> 00:12:47.460\nSo, not much going on here, right?\n\n225\n00:12:47.460 --> 00:12:53.450\nBut if I say File &gt; New File,\nit will open up an editor.\n\n226\n00:12:54.650 --> 00:12:55.830\nAnd it's just a simple cursor.\n\n227\n00:12:57.180 --> 00:12:58.270\nAnd let's zoom that it.\n\n228\n00:12:58.270 --> 00:13:00.650\nI like my text really\nlarge on my text editor.\n\n229\n00:13:00.650 --> 00:13:02.190\nSome people make fun of me.\n\n230\n00:13:02.190 --> 00:13:04.360\nThey're like,\ndo you have a hard time seeing?\n\n231\n00:13:04.360 --> 00:13:09.240\nWell actually, if you program a lot,\nas I have, you don't like tiny text.\n\n232\n00:13:09.240 --> 00:13:10.550\nIt just puts strain on your eyes.\n\n233\n00:13:10.550 --> 00:13:13.710\nMy default text setting is 24 point font.\n\n234\n00:13:13.710 --> 00:13:14.927\nSo, it's in your face big.\n\n235\n00:13:14.927 --> 00:13:19.380\nBut I can just type it as plain text.\n\n236\n00:13:19.380 --> 00:13:22.750\nWith this file, though,\nit is not a Python file.\n\n237\n00:13:22.750 --> 00:13:24.050\nSo how do we get that?\n\n238\n00:13:24.050 --> 00:13:24.722\nWell we actually have to save it.\n\n239\n00:13:24.722 --> 00:13:30.000\nAnd what I like about these rich text\neditors, even though they're saving\n\n240\n00:13:30.000 --> 00:13:35.027\nsimple, just plain text,\nwell they're able to recognize what syntax\n\n241\n00:13:35.027 --> 00:13:40.240\nhighlighting, what kind of file it\nshould be by the file extension.\n\n242\n00:13:40.240 --> 00:13:44.155\nSo let's just go ahead and\nsave a test.pui, and that's important.\n\n243\n00:13:44.155 --> 00:13:46.035\nLet's zoom in here.\n\n244\n00:13:46.035 --> 00:13:50.190\nIf I can get it to zoom in, there we go.\n\n245\n00:13:50.190 --> 00:13:55.640\nNotice I put .py in these\neditors like Sublime and Atom.\n\n246\n00:13:55.640 --> 00:13:57.070\nYou have to put the file extension.\n\n247\n00:13:57.070 --> 00:13:59.160\nIt does not assume a file extension for\n\n248\n00:13:59.160 --> 00:14:04.440\nyou like some of those other text editors\nthat are made for Office applications.\n\n249\n00:14:04.440 --> 00:14:08.200\nSo if I type test.py, and\nI'm just gonna save this on my desktop.\n\n250\n00:14:09.850 --> 00:14:12.469\nYou will notice I have some\nplug-ins that automatically detect.\n\n251\n00:14:12.469 --> 00:14:14.827\nAnd they go you need to do this, and\n\n252\n00:14:14.827 --> 00:14:19.272\nalso it opened up the folder that\ncontains that file over here on the left.\n\n253\n00:14:19.272 --> 00:14:22.130\nAnd I have some I have some\nfolders on my desktop.\n\n254\n00:14:22.130 --> 00:14:23.980\nThere's some hidden files\nthere that it will show.\n\n255\n00:14:23.980 --> 00:14:29.520\nIt does not ignore hidden files like your\nnormal compute solution would, right?\n\n256\n00:14:29.520 --> 00:14:33.045\nBut if you go in the finder,\nI don't see this .DS store,\n\n257\n00:14:33.045 --> 00:14:35.551\nthis .localize in the desktop folder.\n\n258\n00:14:35.551 --> 00:14:40.874\nBut in Atom, it will show you everything\nunless you work around on the settings and\n\n259\n00:14:40.874 --> 00:14:43.202\npreferences to get that to change.\n\n260\n00:14:43.202 --> 00:14:48.390\nSo, we're actually ready\nto write some Python code.\n\n261\n00:14:48.390 --> 00:14:51.710\nBut I feel like we're getting\nahead of ourselves a little bit.\n\n262\n00:14:51.710 --> 00:14:53.550\nHow are we gonna run this?\n\n263\n00:14:53.550 --> 00:14:57.170\nWell, we're going to use the command line\nin conjunction with this text editor.\n\n264\n00:14:58.670 --> 00:15:01.980\nSo where can I find\na command line on my system?\n\n265\n00:15:03.670 --> 00:15:05.820\nWell, all available.\n\n266\n00:15:05.820 --> 00:15:06.990\nKind of well, let me rephrase that.\n\n267\n00:15:06.990 --> 00:15:08.775\nLet me back up just a little bit.\n\n268\n00:15:08.775 --> 00:15:10.670\nI'm making a pretty\nstrong assertion there.\n\n269\n00:15:12.140 --> 00:15:14.570\nWhen I say all I am saying most.\n\n270\n00:15:14.570 --> 00:15:16.010\nI have to be careful there.\n\n271\n00:15:17.050 --> 00:15:20.988\nMost current OSs, operating systems,\nhave something like this.\n\n272\n00:15:20.988 --> 00:15:24.540\nFor Windows it's Power Shell or\nCommand Prompt.\n\n273\n00:15:24.540 --> 00:15:28.800\nFor OSX,\nyou have the terminal application.\n\n274\n00:15:28.800 --> 00:15:30.180\nSo if I search for\n\n275\n00:15:30.180 --> 00:15:35.020\nterminal in spotlight, I will\nactually get a terminal application.\n\n276\n00:15:35.020 --> 00:15:38.390\nNow, I use a replacement one,\nso I'm gonna close this out.\n\n277\n00:15:38.390 --> 00:15:43.170\nAnd all it is is I'm a little bit nerdy,\nI like to have some custom styling and\n\n278\n00:15:43.170 --> 00:15:43.770\nthings like that.\n\n279\n00:15:43.770 --> 00:15:45.990\nSo, I use another called iTerm.\n\n280\n00:15:45.990 --> 00:15:48.350\nIt is the exact same environment.\n\n281\n00:15:48.350 --> 00:15:51.490\nOther than I can do some\ncustomization that's not available.\n\n282\n00:15:51.490 --> 00:15:54.710\nSo terminal and the one I'm using,\nthe same thing.\n\n283\n00:15:54.710 --> 00:15:57.496\nSo if you're on a Mac, just search for\nterminal and it opens up.\n\n284\n00:15:57.496 --> 00:16:01.360\nAnd you see kind of old\nschool computing going on.\n\n285\n00:16:01.360 --> 00:16:02.608\nWe've removed the gooey.\n\n286\n00:16:02.608 --> 00:16:03.904\nIt's all good to go.\n\n287\n00:16:03.904 --> 00:16:11.590\nSo, I'm gonna zoom that in,\nopen that up that's on a Mac.\n\n288\n00:16:11.590 --> 00:16:12.990\nWhat about Linux?\n\n289\n00:16:12.990 --> 00:16:17.460\nWell, depending on your flavor of Linux,\nit will have different names.\n\n290\n00:16:17.460 --> 00:16:20.265\nSometimes, it's named Terminal,\nTerminal Emulator,\n\n291\n00:16:20.265 --> 00:16:25.300\nEx-Term Emulator Command prompt,\ncommand line.\n\n292\n00:16:25.300 --> 00:16:27.300\nSo, you have to do\na little poking around but\n\n293\n00:16:27.300 --> 00:16:31.670\nthe icon will be very similar\nto what I have down here.\n\n294\n00:16:31.670 --> 00:16:34.480\nAnd I can't get that to zoom\nquite like I want it to.\n\n295\n00:16:34.480 --> 00:16:35.660\nThere we go.\n\n296\n00:16:35.660 --> 00:16:40.050\nSo, it'll look kinda just like a box,\nlike an old school computer prompt.\n\n297\n00:16:41.200 --> 00:16:44.660\nSo, let me see if I can\nget that over here.\n\n298\n00:16:44.660 --> 00:16:47.990\nI can't get that to move.\n\n299\n00:16:49.490 --> 00:16:50.550\nI cannot get it to move.\n\n300\n00:16:50.550 --> 00:16:53.040\n&gt;&gt; So that's where it's at.\n\n301\n00:16:53.040 --> 00:16:53.840\n&gt;&gt; Yep.\n&gt;&gt; [LAUGH]\n\n302\n00:16:53.840 --> 00:16:54.460\n&gt;&gt; All right, here we\n\n303\n00:16:54.460 --> 00:16:55.040\ngo, here we go, [LAUGH].\n\n304\n00:16:55.040 --> 00:16:55.740\n&gt;&gt; There we go.\n\n305\n00:16:55.740 --> 00:16:56.300\n&gt;&gt; There we go.\n\n306\n00:16:57.310 --> 00:17:00.750\nSo, it'll look just a regular\nkind of computer box.\n\n307\n00:17:00.750 --> 00:17:04.900\nAnd a lot of times it has\nthe cursor actually in the icon.\n\n308\n00:17:06.330 --> 00:17:08.240\nSo, you have to find that on your machine.\n\n309\n00:17:08.240 --> 00:17:09.260\nYou open it up.\n\n310\n00:17:09.260 --> 00:17:12.300\nAnd then, you will either have\na blinking icon or a non blinking icon.\n\n311\n00:17:12.300 --> 00:17:13.920\nIt depends on the setting.\n\n312\n00:17:13.920 --> 00:17:15.800\nAnd we should be ready to go.\n\n313\n00:17:15.800 --> 00:17:16.710\nWe've installed Python.\n\n314\n00:17:18.420 --> 00:17:21.900\nAnd we should be able to test\nto see if Python is installed.\n\n315\n00:17:21.900 --> 00:17:27.650\nSo, we installed it earlier in the episode\nbut we never actually tested it.\n\n316\n00:17:29.470 --> 00:17:30.650\nHow do we test it?\n\n317\n00:17:30.650 --> 00:17:35.210\nOnce you've gotten to the command line,\nI can type Python,\n\n318\n00:17:35.210 --> 00:17:37.360\nand here's where it has to be tricky.\n\n319\n00:17:37.360 --> 00:17:41.810\nI know on my machine, I have an OS X\nmachine, and on Linux based machines\n\n320\n00:17:41.810 --> 00:17:46.218\nif you type Python, a lot of times\nthere will be a system level Python.\n\n321\n00:17:46.218 --> 00:17:50.368\n2.7, so Python 2 is still there.\n\n322\n00:17:50.368 --> 00:17:54.443\nWell,that's not the one we wanna use but\n\n323\n00:17:54.443 --> 00:17:59.343\nnow we are in this,ah how\ndo you get out of this?\n\n324\n00:17:59.343 --> 00:18:03.220\nWell, control c,right.\n\n325\n00:18:03.220 --> 00:18:05.198\nWhen in doubt Ctrl+C, okay.\n\n326\n00:18:05.198 --> 00:18:08.207\nThat doesn't work if Ctrl+C doesn't work.\n\n327\n00:18:08.207 --> 00:18:10.880\nThen Ctrl+D typically brings you out.\n\n328\n00:18:10.880 --> 00:18:16.580\nSo, those are command line\nthings that we should know.\n\n329\n00:18:16.580 --> 00:18:19.150\nI'm not gonna ask you to\ndo a whole lot with these.\n\n330\n00:18:19.150 --> 00:18:24.770\nBut we will need to know a little bit\naround this terminal environment.\n\n331\n00:18:24.770 --> 00:18:30.510\nSo, I typed Python I was expecting that\n3.6 that I installed but it's not there.\n\n332\n00:18:30.510 --> 00:18:32.020\nWell, that's kind of weird.\n\n333\n00:18:33.150 --> 00:18:38.070\nIf you have a system where Python,\ntyping the normal Python phrase, or\n\n334\n00:18:38.070 --> 00:18:39.170\nword not phrase.\n\n335\n00:18:39.170 --> 00:18:40.959\nPhrase would be multiple words.\n\n336\n00:18:42.880 --> 00:18:46.990\nAnd hit enter and you see a version\nnumber that you're not expecting.\n\n337\n00:18:46.990 --> 00:18:49.350\nThat means there's one residing\nthere that your system's using.\n\n338\n00:18:50.550 --> 00:18:54.270\nYou may need to try adding a 3 to this.\n\n339\n00:18:54.270 --> 00:18:56.320\nLet's zoom in a little bit more here.\n\n340\n00:18:58.520 --> 00:19:06.010\nAnd if I type Python 3, I now have the\n3.6.0 installation that I just installed.\n\n341\n00:19:06.010 --> 00:19:10.549\nSo, if you have two versions a lot of\ntimes it will be Python and Python3.\n\n342\n00:19:10.549 --> 00:19:13.180\nNow this varies depending on your system.\n\n343\n00:19:16.020 --> 00:19:17.653\nHow do I know which one it is?\n\n344\n00:19:17.653 --> 00:19:19.860\nSadly you're gonna have\nto explore a little bit.\n\n345\n00:19:21.370 --> 00:19:24.060\nUse the old search engines\n\n346\n00:19:24.060 --> 00:19:28.100\nincantations to see if you can\nfigure out which one is what.\n\n347\n00:19:28.100 --> 00:19:29.310\nAnd usually people are really helpful,\n\n348\n00:19:29.310 --> 00:19:31.210\nthat's what I like about\nthe Python community.\n\n349\n00:19:31.210 --> 00:19:34.350\nIncredibly helpful community,\nthey will not leave you hanging.\n\n350\n00:19:34.350 --> 00:19:38.770\nSo, there is typically something there,\nbut now where are we at?\n\n351\n00:19:38.770 --> 00:19:39.830\nWe're in the repel.\n\n352\n00:19:39.830 --> 00:19:42.250\nAround in the repel,\nsee how this works out.\n\n353\n00:19:42.250 --> 00:19:46.200\nSo, I'm gonna type, print, hello, and\n\n354\n00:19:46.200 --> 00:19:52.150\nnotice there are quotes there,\nand boom, my Python has executed.\n\n355\n00:19:52.150 --> 00:19:54.220\nWell, that's good to know.\n\n356\n00:19:55.560 --> 00:19:58.780\n&gt;&gt; So Justin, I heard another acronym.\n\n357\n00:19:58.780 --> 00:20:01.635\n&gt;&gt; [LAUGH]\n&gt;&gt; REPL, or what, REEPL, what?\n\n358\n00:20:01.635 --> 00:20:04.000\n[LAUGH]\n&gt;&gt; Vonne,\n\n359\n00:20:04.000 --> 00:20:06.670\nyou keep catching me with\nthrowing that jargon around.\n\n360\n00:20:06.670 --> 00:20:09.860\nI'm gonna learn one day,\nI'm gonna learn one day.\n\n361\n00:20:09.860 --> 00:20:12.059\nREPL-\n&gt;&gt; I'll keep you in check [LAUGH].\n\n362\n00:20:12.059 --> 00:20:13.672\n&gt;&gt; I appreciate that.\n\n363\n00:20:13.672 --> 00:20:15.070\n&gt;&gt; [LAUGH]\n&gt;&gt; REPL,\n\n364\n00:20:15.070 --> 00:20:17.930\nread, evaluate, print, and loop back.\n\n365\n00:20:19.030 --> 00:20:25.090\nSo, it reads in whatever I type, it\nevaluates it if it is a valid expression.\n\n366\n00:20:25.090 --> 00:20:28.120\n&gt;&gt; If it's valid Python, in this case,\n\n367\n00:20:28.120 --> 00:20:33.140\nit will print out the result and\nthen it will loop back to the read.\n\n368\n00:20:33.140 --> 00:20:37.810\nOkay, so it reads, it evaluates,\nit prints the results, and\n\n369\n00:20:37.810 --> 00:20:38.860\nthen it goes back to the beginning.\n\n370\n00:20:38.860 --> 00:20:41.940\n&gt;&gt; And that's exactly what we\njust did in this command line.\n\n371\n00:20:41.940 --> 00:20:45.760\nWe were testing it, we were seeing if\nit's It sees it and it prints it out,\n\n372\n00:20:45.760 --> 00:20:49.610\nhello, and so\nnow we know that we're in business.\n\n373\n00:20:49.610 --> 00:20:53.610\n&gt;&gt; We're ready to go, we've gotta\nbe careful, we're dangerous now.\n\n374\n00:20:53.610 --> 00:20:57.790\nSo, we have our command lin\nenvironment up and going,\n\n375\n00:20:57.790 --> 00:20:59.610\nhopefully you've been able to find it.\n\n376\n00:20:59.610 --> 00:21:03.680\nWe've bene able to print\nout a very simple command.\n\n377\n00:21:03.680 --> 00:21:08.820\nIf you wanted to you could use this as\njust a calculator two plus two is four,\n\n378\n00:21:08.820 --> 00:21:09.980\nthat's valid.\n\n379\n00:21:09.980 --> 00:21:14.320\nBut do keep in mind if you type something\ncrazy right, that and you hit enter\n\n380\n00:21:15.390 --> 00:21:20.480\nyou'll get a printout of an error that's\nnot valid, so things will go awry.\n\n381\n00:21:20.480 --> 00:21:23.330\nBut notice it doesn't die that\ndoesn't get you out of the ripple.\n\n382\n00:21:23.330 --> 00:21:25.640\nRemember, how do I get out of this?\n\n383\n00:21:27.130 --> 00:21:28.174\nThat's a good question.\n\n384\n00:21:28.174 --> 00:21:32.320\nWhen in doubt, CTRL + C.\n\n385\n00:21:32.320 --> 00:21:35.650\nWell, CTRL + C, nope.\n\n386\n00:21:35.650 --> 00:21:40.540\nBack up plan, CTRL + D, and that will\nget you out of the Python ripple.\n\n387\n00:21:40.540 --> 00:21:42.080\nSo that's how you can play around, and\n\n388\n00:21:42.080 --> 00:21:45.630\nthis is something I do a great deal in\nPython as I'll just hop into the ripple.\n\n389\n00:21:45.630 --> 00:21:48.740\nTry out some things, see if it works and\nthen, I go and code it.\n\n390\n00:21:48.740 --> 00:21:51.760\nSo, this experimentation code,\n\n391\n00:21:51.760 --> 00:21:54.680\nexperimentation cycle is\nsomething I employ a great deal.\n\n392\n00:21:55.770 --> 00:22:01.020\nBut, there's a second thing\nthat we need to know.\n\n393\n00:22:01.020 --> 00:22:05.630\nHow we actually, we have this Python\nwith file, how do I get that to run?\n\n394\n00:22:07.050 --> 00:22:09.480\nThat's different than\nplaying around in the Repple.\n\n395\n00:22:09.480 --> 00:22:16.725\nSo, I'm going to print, In the file, okay?\n\n396\n00:22:16.725 --> 00:22:19.180\nI do wanna highlight a common difference.\n\n397\n00:22:19.180 --> 00:22:23.010\nIn Python 2,\nprint did not have parentheses and\n\n398\n00:22:23.010 --> 00:22:25.858\nwas actually handled\nin a very special way.\n\n399\n00:22:25.858 --> 00:22:31.510\nIn Python 3, it is technically a function,\nand you have to have the parentheses.\n\n400\n00:22:31.510 --> 00:22:34.370\nSo, we're in Python 3,\nyou will see all Python 3 stuff.\n\n401\n00:22:34.370 --> 00:22:36.540\nIf you are not getting this to work,\n\n402\n00:22:37.580 --> 00:22:41.990\nthen things will go horribly awry for\nyou, and you'll have to,\n\n403\n00:22:41.990 --> 00:22:45.340\nagain, search engine incantation as\nto go figure out what's going on.\n\n404\n00:22:45.340 --> 00:22:48.550\nBut that's an important skill to have,\nso don't be afraid,\n\n405\n00:22:48.550 --> 00:22:49.680\ndon't get frustrated, don't quit.\n\n406\n00:22:49.680 --> 00:22:52.080\nI have valid Python,\n\n407\n00:22:52.080 --> 00:22:55.930\nI just tested something out very\nsimilar to this in the rebel.\n\n408\n00:22:55.930 --> 00:22:57.340\nHow do I make this run now?\n\n409\n00:22:59.130 --> 00:23:02.430\nWell, when we have that file I have saved.\n\n410\n00:23:02.430 --> 00:23:03.380\nBe careful that you saved.\n\n411\n00:23:03.380 --> 00:23:06.940\nIf you see a little blue dot here in atom\nor in sublime, or I think in sublime,\n\n412\n00:23:06.940 --> 00:23:09.080\nit's a white dot, but you have it saved.\n\n413\n00:23:09.080 --> 00:23:12.140\nI can run this file all I want if\nI haven't saved the updates, it\n\n414\n00:23:12.140 --> 00:23:16.350\nwill run the old version that has not been\nsaved yet, so you'll get weird output.\n\n415\n00:23:16.350 --> 00:23:19.920\nBe careful about that.\n\n416\n00:23:19.920 --> 00:23:21.450\nSo, how do I run this?\n\n417\n00:23:21.450 --> 00:23:26.250\nWell, I need to get to that\nfile within the command line.\n\n418\n00:23:26.250 --> 00:23:27.730\nSo, where am I?\n\n419\n00:23:27.730 --> 00:23:32.710\nWell, if I type LS that is something\nthat I do a great deal, I'm\n\n420\n00:23:32.710 --> 00:23:37.680\nin my home directory, which most, whether\nits on Windows, Linux, or OS X, you\n\n421\n00:23:37.680 --> 00:23:41.530\nstart in a directory for your user account\nwhich you've logged on the computer.\n\n422\n00:23:43.250 --> 00:23:48.350\nI remember that I've saved that\ntest.py file on the desktop, so\n\n423\n00:23:48.350 --> 00:23:50.890\nI need to hop into the desktop folder,\n\n424\n00:23:50.890 --> 00:23:54.020\njust like I would click by opening\nFinder or Windows Explorer.\n\n425\n00:23:57.020 --> 00:23:58.010\nAnd how do I get there?\n\n426\n00:23:58.010 --> 00:24:03.860\nWell, let's see if we can CD,\nwhich means Change Directory.\n\n427\n00:24:03.860 --> 00:24:08.090\nChange Directory will allow me to\ndouble click a file essentially and\n\n428\n00:24:08.090 --> 00:24:09.560\ngo into that file.\n\n429\n00:24:09.560 --> 00:24:15.400\nAnd if I type ls now, I have this test.py.\n\n430\n00:24:15.400 --> 00:24:17.560\nHow do I run that file?\n\n431\n00:24:17.560 --> 00:24:22.500\nWell, if we type just python or\nPython 3 in this class, so\n\n432\n00:24:22.500 --> 00:24:23.340\nwe're gonna have to be careful.\n\n433\n00:24:23.340 --> 00:24:26.046\nWe will get weird results\nif we forget that 3,\n\n434\n00:24:28.273 --> 00:24:30.870\nI'll go into the but\nhow do I run this file?\n\n435\n00:24:32.370 --> 00:24:36.850\nWell, Python 3 enter the name\nof the file that you wanna run,\n\n436\n00:24:36.850 --> 00:24:41.370\nit will slurp that file in and\nexecute from top to bottom.\n\n437\n00:24:41.370 --> 00:24:46.170\nAnd notice that it prints out in the file\nand that's exactly what I had in the file,\n\n438\n00:24:46.170 --> 00:24:49.064\nso we've seen how to.\n\n439\n00:24:49.064 --> 00:24:51.580\nWe've seen how execute a file.\n\n440\n00:24:51.580 --> 00:24:54.510\nWe've learned a little bit about\nthe command line and we'll learn a few\n\n441\n00:24:54.510 --> 00:24:59.270\nother things to navigate through this\ncommand line interface as we need them.\n\n442\n00:25:00.980 --> 00:25:03.880\nBut, I think we have\nour text editor set up.\n\n443\n00:25:03.880 --> 00:25:06.840\nWith Python install, we can run Python,\nwe have the right version.\n\n444\n00:25:08.170 --> 00:25:10.960\nWe're in the command line,\nI think we're good to go.\n\n445\n00:25:10.960 --> 00:25:15.547\nWe should be all set to start down\nthis object oriented Python path,\n\n446\n00:25:15.547 --> 00:25:17.805\nthat we've set up before as fun.\n\n447\n00:25:17.805 --> 00:25:20.662\n&gt;&gt; Thank you Justin for all of that\ngreat information, and thank you for\n\n448\n00:25:20.662 --> 00:25:21.900\nclearing up those acronyms.\n\n449\n00:25:21.900 --> 00:25:24.546\nI know I always like to know\nwhat those acronyms stand for,\n\n450\n00:25:24.546 --> 00:25:27.463\neven if I don't remember them,\nat least I've heard them once.\n\n451\n00:25:27.463 --> 00:25:30.813\nSo that's it for now, thank you so\nmuch for tuning in, and signing off for\n\n452\n00:25:30.813 --> 00:25:33.160\nITProTV, I'm Vonne Smith\n&gt;&gt; And, I'm Justin Dennison.\n\n453\n00:25:33.160 --> 00:25:35.248\n&gt;&gt; See you next time.\n\n454\n00:25:35.248 --> 00:25:41.119\n[MUSIC]\n\n455\n00:25:41.119 --> 00:25:42.960\nThank you for watching ITProTV.\n\n",
          "vimeoId": "208132275"
        },
        {
          "description": "In this episode, Vonne and Justin review the basic principles of Object-Oriented Programming: encapsulation, abstraction, inheritance, and polymorphism.  These principles will be demonstrated and referred to throughout the series.",
          "length": "936",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-2-1-what_is_object_oriented_programmin-030817-high.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-2-1-what_is_object_oriented_programmin-030817-high-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-2-1-what_is_object_oriented_programmin-030817-high-sm.jpg",
          "title": "What is Object Oriented Programming",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:02.685\n[MUSIC]\n\n2\n00:00:02.685 --> 00:00:06.110\n&gt;&gt; [CROSSTALK]\n\n3\n00:00:06.110 --> 00:00:08.362\n[MUSIC]\n\n4\n00:00:08.362 --> 00:00:12.046\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:12.046 --> 00:00:16.510\n&gt;&gt; Hello everyone, and welcome to\nanother exciting episode of ITProTV.\n\n6\n00:00:16.510 --> 00:00:18.400\nI'm your host Vonne Smith, and\n\n7\n00:00:18.400 --> 00:00:23.170\nwe are going to be continuing on with\nour Object-Oriented Python series.\n\n8\n00:00:23.170 --> 00:00:25.330\nAnd in this episode we're\ngoing to talk about, well,\n\n9\n00:00:25.330 --> 00:00:28.630\nwhat exactly is object\noriented programing?\n\n10\n00:00:28.630 --> 00:00:31.560\nAnd here to help us is Mr.\nJustin Dennis and hello Justin.\n\n11\n00:00:31.560 --> 00:00:32.780\n&gt;&gt; Hi Vonne how are you today?\n\n12\n00:00:32.780 --> 00:00:33.510\n&gt;&gt; I'm great.\n\n13\n00:00:33.510 --> 00:00:37.570\nI am glad that you're here to help us\ndefine what we're gonna be talking about\n\n14\n00:00:37.570 --> 00:00:39.390\noverall and then define some terms for us.\n\n15\n00:00:39.390 --> 00:00:41.960\n&gt;&gt; Well Vonne I am excited\nto be back in the studio.\n\n16\n00:00:41.960 --> 00:00:44.350\nThis is a topic that we\nhave to be careful with.\n\n17\n00:00:44.350 --> 00:00:45.550\nYou brought up a great question.\n\n18\n00:00:45.550 --> 00:00:47.870\nWhat is object oriented programing?\n\n19\n00:00:47.870 --> 00:00:51.723\nAnd sometimes I feel\nlike I don't know myself.\n\n20\n00:00:51.723 --> 00:00:55.328\nBut in fact we're gonna hit on what\nis object oriented programming?\n\n21\n00:00:55.328 --> 00:01:00.460\nParticularly it's a set of vocabulary,\nbut it's also a process.\n\n22\n00:01:00.460 --> 00:01:03.485\nHow do I approach these\nprogramming problems?\n\n23\n00:01:03.485 --> 00:01:07.970\nAnd we won't have a lot of programming,\nper se, in this episode.\n\n24\n00:01:07.970 --> 00:01:09.850\nBut we will be thinking about programming.\n\n25\n00:01:09.850 --> 00:01:11.370\nHow do I design these systems?\n\n26\n00:01:11.370 --> 00:01:12.640\nHow do I build these systems?\n\n27\n00:01:12.640 --> 00:01:18.730\nHow do I follow these sets of\nideas to help us abstract a way to\n\n28\n00:01:18.730 --> 00:01:23.870\ncreate these systems of software?\n\n29\n00:01:23.870 --> 00:01:27.910\nParticularly in object oriented\nprogramming, there are four principles.\n\n30\n00:01:27.910 --> 00:01:29.872\nNow this may vary depending\non who you talk to.\n\n31\n00:01:29.872 --> 00:01:32.279\nSome people add a fifth one,\nsome people take away one.\n\n32\n00:01:32.279 --> 00:01:37.187\nBut there are kind of this root four,\nand that is encapsulation, abstraction,\n\n33\n00:01:37.187 --> 00:01:40.190\nand inheritance, and polymorphism.\n\n34\n00:01:40.190 --> 00:01:42.300\nSo those are our four principles of\n\n35\n00:01:43.320 --> 00:01:47.340\nobject oriented programming that we\nhave to figure out, what do they mean?\n\n36\n00:01:47.340 --> 00:01:48.290\nWhat's going on?\n\n37\n00:01:48.290 --> 00:01:50.680\n&gt;&gt; All right, so those sound\nlike some kind of complex words.\n\n38\n00:01:50.680 --> 00:01:52.250\nSo we're gonna go through\neach one of them.\n\n39\n00:01:52.250 --> 00:01:54.070\nSo let's start with encapsulation.\n\n40\n00:01:54.070 --> 00:01:55.150\nWhat are we talking about here?\n\n41\n00:01:55.150 --> 00:02:01.761\n&gt;&gt; So encapsulation, that's, [SOUND] man,\nnumber one, that's a weird word.\n\n42\n00:02:01.761 --> 00:02:03.730\nI think it doesn't roll\noff the tongue that well.\n\n43\n00:02:03.730 --> 00:02:07.310\nBut ultimately, what is means is,\neverything about an object.\n\n44\n00:02:07.310 --> 00:02:08.550\nAnd what do I mean by an object?\n\n45\n00:02:08.550 --> 00:02:11.120\nA thing, and actually,\nlet's use some graphics here,\n\n46\n00:02:11.120 --> 00:02:16.700\nso let's look at this nice little\ngraphic I have to help us route this in.\n\n47\n00:02:16.700 --> 00:02:18.708\nHere's, what is this Vonne,\ndo you know what this is?\n\n48\n00:02:18.708 --> 00:02:20.222\n&gt;&gt; That looks like an engine.\n\n49\n00:02:20.222 --> 00:02:21.347\n&gt;&gt; That is an engine.\n\n50\n00:02:21.347 --> 00:02:24.906\nAnd encapsulation means that all\nthe inner workings, all of the data,\n\n51\n00:02:24.906 --> 00:02:27.480\nall of the states kind of bundle together,\nright?\n\n52\n00:02:27.480 --> 00:02:29.280\nAn engine can be running or not running.\n\n53\n00:02:29.280 --> 00:02:32.640\nAnd we don't think about it when we\nwalk out to our cars in the morning.\n\n54\n00:02:32.640 --> 00:02:35.108\nTurn it on, an engine fires.\n\n55\n00:02:35.108 --> 00:02:36.560\nBut there are all these things,\n\n56\n00:02:36.560 --> 00:02:41.650\nall these changes that have occurred and\nthat is effectively encapsulation.\n\n57\n00:02:41.650 --> 00:02:44.770\nI don't know how the engine comes on.\n\n58\n00:02:44.770 --> 00:02:47.500\nI just know that it comes\non when I turn the key.\n\n59\n00:02:47.500 --> 00:02:49.600\nSo that state, those methods,\n\n60\n00:02:49.600 --> 00:02:53.600\nthe implementation of how that\nworks is hidden away from me.\n\n61\n00:02:53.600 --> 00:02:58.590\nAnd when I turn on the engine,\nI actually end up, this is a hard one,\n\n62\n00:02:58.590 --> 00:03:01.740\nthis is a nice little wheel\nrolling down the road.\n\n63\n00:03:01.740 --> 00:03:04.000\nMy engine turns on, and my car goes.\n\n64\n00:03:04.000 --> 00:03:07.700\nSo, I don't know how that works,\nbut it actually works.\n\n65\n00:03:07.700 --> 00:03:09.830\nSo encapsulation is\nthe hiding of that state\n\n66\n00:03:11.660 --> 00:03:15.600\nto where we don't have to worry\nabout how it works, it just works.\n\n67\n00:03:15.600 --> 00:03:19.560\nNow along with that is the level\nof Abstraction, right.\n\n68\n00:03:19.560 --> 00:03:21.230\nSo these are tied closely together.\n\n69\n00:03:22.270 --> 00:03:26.310\nAnd what Abstraction is, in a technical\nsense, is a consistent set of properties\n\n70\n00:03:27.330 --> 00:03:31.990\nand behavior that are bundled\ntogether inside of an object.\n\n71\n00:03:31.990 --> 00:03:34.300\nNow let's take this object for\na car, right?\n\n72\n00:03:34.300 --> 00:03:40.430\nSo Vonne, what would you say are some\nproperties or attributes about this car?\n\n73\n00:03:40.430 --> 00:03:45.340\n&gt;&gt; Well, it's red, it has two wheels,\nit's got some windows.\n\n74\n00:03:45.340 --> 00:03:48.667\n&gt;&gt; So Vonne has made a very\naccurate description.\n\n75\n00:03:48.667 --> 00:03:52.470\nIt's a red car,\nit's got a couple of wheels, some doors.\n\n76\n00:03:52.470 --> 00:03:56.212\nAnd that's important because\nthere's a lot more to this car.\n\n77\n00:03:56.212 --> 00:03:59.250\nIf we really wanted to get into\nthe nitty gritty details, right.\n\n78\n00:03:59.250 --> 00:04:02.780\nIf I wanted to dig inside, well is it\na five speed or is it an automatic?\n\n79\n00:04:02.780 --> 00:04:04.070\nIs it a six speed?\n\n80\n00:04:04.070 --> 00:04:08.010\nDoes it have all-wheel drive,\ntwo-wheel drive, front-wheel drive?\n\n81\n00:04:08.010 --> 00:04:09.849\nDoes it have a full trunk space?\n\n82\n00:04:09.849 --> 00:04:11.270\nIs the engine in the front or the rear?\n\n83\n00:04:11.270 --> 00:04:13.762\nIs it a V8, a four cylinder?\n\n84\n00:04:13.762 --> 00:04:15.805\nThere are a lot of questions\nthat can be asked.\n\n85\n00:04:15.805 --> 00:04:17.899\nAnd what I find with abstraction,\n\n86\n00:04:17.899 --> 00:04:20.940\nthe whole purpose of\nabstraction is to pull away.\n\n87\n00:04:20.940 --> 00:04:25.600\nAnd look at only what you care about\nin the context, the set of interfaces.\n\n88\n00:04:25.600 --> 00:04:27.400\nWhat do I mean by interfaces?\n\n89\n00:04:27.400 --> 00:04:28.720\nHow do you interact with it?\n\n90\n00:04:28.720 --> 00:04:30.200\nHow do I interact with a car?\n\n91\n00:04:30.200 --> 00:04:32.590\nWell, I get in,\nI put my key in the ignition,\n\n92\n00:04:32.590 --> 00:04:35.570\nI turn it on and I drive it to work.\n\n93\n00:04:35.570 --> 00:04:38.020\nAnd what's important in that context?\n\n94\n00:04:38.020 --> 00:04:39.790\nThe ability to get in the car,\nso the doors.\n\n95\n00:04:40.830 --> 00:04:45.380\nThe ability to turn it on, so the key and\nthe fuel tank and the engine.\n\n96\n00:04:45.380 --> 00:04:46.461\nThose work.\n\n97\n00:04:46.461 --> 00:04:48.653\nBut those are hidden away from me.\n\n98\n00:04:48.653 --> 00:04:50.982\nBut at that moment I\ndon't care what it is.\n\n99\n00:04:50.982 --> 00:04:53.410\nAnd that's what is important\nabout abstraction.\n\n100\n00:04:53.410 --> 00:04:58.732\nSo if we look at it, if I'm\ndesigning a car, some car simulator.\n\n101\n00:04:58.732 --> 00:05:03.569\nMaybe the only pieces of information that\nI need about the car in that context\n\n102\n00:05:03.569 --> 00:05:06.130\nare the number of wheels.\n\n103\n00:05:06.130 --> 00:05:08.270\nWhat color is it?\n\n104\n00:05:08.270 --> 00:05:09.940\nHow many doors does it have?\n\n105\n00:05:09.940 --> 00:05:14.800\nAnd if I'm building, let's say, either\na simulator or maybe an inventory system.\n\n106\n00:05:14.800 --> 00:05:17.050\nMaybe that's all I need\nto know about the car.\n\n107\n00:05:17.050 --> 00:05:20.603\nI don't need to know what is its\ntop speed in those contexts.\n\n108\n00:05:20.603 --> 00:05:21.980\nFor the simulator, I might.\n\n109\n00:05:21.980 --> 00:05:25.420\nBut for the inventory system,\nI would not, right.\n\n110\n00:05:25.420 --> 00:05:27.030\nSo that's for a car.\n\n111\n00:05:27.030 --> 00:05:28.710\nLet's look at a little different example.\n\n112\n00:05:30.510 --> 00:05:35.650\nSo Vonne, do you have a lock\nto some portion of your house,\n\n113\n00:05:35.650 --> 00:05:38.105\nor a keepsake box, or anything like that?\n\n114\n00:05:38.105 --> 00:05:39.570\n&gt;&gt; Mm-hm.\n\n115\n00:05:39.570 --> 00:05:42.370\n&gt;&gt; Do you have a key to that?\n\n116\n00:05:42.370 --> 00:05:45.580\n&gt;&gt; Yes, I have a key on my key ring\nthat I use and I put it in the lock and\n\n117\n00:05:45.580 --> 00:05:47.130\nI turn it and I go in my house.\n\n118\n00:05:47.130 --> 00:05:50.310\n&gt;&gt; Do you know how that lock actually\nworks, how your key opens the lock?\n\n119\n00:05:50.310 --> 00:05:50.890\n&gt;&gt; No.\n\n120\n00:05:50.890 --> 00:05:52.070\n&gt;&gt; Yeah, yeah.\n\n121\n00:05:52.070 --> 00:05:55.640\nMost people don't know,\nhow does a lock work, right?\n\n122\n00:05:55.640 --> 00:05:57.660\nIs it important in the context?\n\n123\n00:05:57.660 --> 00:05:58.850\nNo, I know I have a key,\n\n124\n00:05:58.850 --> 00:06:03.710\nI know that I put the key in the slot and\nI turn the key, and it comes unlocked.\n\n125\n00:06:03.710 --> 00:06:06.152\nSo, that's the whole\npurpose of abstraction,\n\n126\n00:06:06.152 --> 00:06:08.661\nthat it's tightly coupled\nwith encapsulation.\n\n127\n00:06:08.661 --> 00:06:11.440\nBecause j ust like the car,\nit's on or off.\n\n128\n00:06:11.440 --> 00:06:15.010\nOr, just like the lock,\nit's locked or unlocked, right?\n\n129\n00:06:15.010 --> 00:06:20.167\nSo we have that data hidden from us,\nand how that's manipulated.\n\n130\n00:06:20.167 --> 00:06:23.237\nBut for abstraction we only care\nabout certain interfaces or\n\n131\n00:06:23.237 --> 00:06:25.110\nproperties that we care about.\n\n132\n00:06:25.110 --> 00:06:29.760\nSo those are tightly coupled but\nkind of heady topics.\n\n133\n00:06:29.760 --> 00:06:32.408\n&gt;&gt; Yeah, I can see how they're\nvery similar, like you're saying.\n\n134\n00:06:32.408 --> 00:06:35.480\nAnd so\nencapsulation is just turn it on and go.\n\n135\n00:06:35.480 --> 00:06:37.000\nWe don't need to know\nwhat's under the hood.\n\n136\n00:06:37.000 --> 00:06:40.790\nWe just turn the button on and\nwe go along and everything's fine.\n\n137\n00:06:40.790 --> 00:06:45.154\nAnd abstraction is where we're just\npicking out the pieces that we need when\n\n138\n00:06:45.154 --> 00:06:48.508\nwe need it, just within\nthe context of what we're doing.\n\n139\n00:06:48.508 --> 00:06:54.304\n&gt;&gt; Right, and even then, we try to\ntalk about this to convey the idea.\n\n140\n00:06:54.304 --> 00:06:56.164\nIt's still very heady, right,\n\n141\n00:06:56.164 --> 00:06:59.620\nit's still kind of abstract\ntalking about abstraction.\n\n142\n00:06:59.620 --> 00:07:01.350\nWow that was a meta comment.\n\n143\n00:07:01.350 --> 00:07:05.380\nSo 10,000 foot view,\nthat's the important concept.\n\n144\n00:07:05.380 --> 00:07:09.335\nNow I tell you about these because\nit's hard to contextualize what is\n\n145\n00:07:09.335 --> 00:07:11.321\nencapsulation and abstraction.\n\n146\n00:07:11.321 --> 00:07:16.256\nBut these will come up as we start\nbuilding object oriented projects using\n\n147\n00:07:16.256 --> 00:07:17.430\nPython.\n\n148\n00:07:17.430 --> 00:07:18.390\nSo that's important.\n\n149\n00:07:18.390 --> 00:07:21.056\n&gt;&gt; Yeah, so these examples that we're\ngoing to be going through later in\n\n150\n00:07:21.056 --> 00:07:21.742\nother episodes.\n\n151\n00:07:21.742 --> 00:07:25.372\nWill really kind of drive home\nthe points of these topics and\n\n152\n00:07:25.372 --> 00:07:28.653\nthese heady words that\nwe're describing right now.\n\n153\n00:07:28.653 --> 00:07:30.900\nAnd then we'll really kind of say,\nokay, I get it now.\n\n154\n00:07:30.900 --> 00:07:35.730\n&gt;&gt; Yep, yeah so a little bit of vocabulary\nand then we're gonna go to implementation.\n\n155\n00:07:35.730 --> 00:07:38.980\n&gt;&gt; All right, great, so I heard another\nword in there with our four vocabulary\n\n156\n00:07:38.980 --> 00:07:41.390\nwords that we're going over, inheritance.\n\n157\n00:07:42.390 --> 00:07:45.130\nNow I'm thinking,\nis that some money I'm gonna be getting?\n\n158\n00:07:45.130 --> 00:07:46.020\nWhere are we going with this?\n\n159\n00:07:46.020 --> 00:07:52.424\nOr is this, where did I inherit my\nblue eyes, from my dad or my mom?\n\n160\n00:07:52.424 --> 00:07:57.427\n&gt;&gt; You know what, the first time I heard\ninheritance I was like, I'm redheaded,\n\n161\n00:07:57.427 --> 00:07:59.905\nthere are some redheaded genes in there.\n\n162\n00:07:59.905 --> 00:08:03.760\nPeople give me, how do you have\na red beard, that's kinda odd.\n\n163\n00:08:03.760 --> 00:08:06.552\nSo, we are talking kinda like that.\n\n164\n00:08:06.552 --> 00:08:10.540\nNow, I say its kinda like that\nbecause we have to be careful.\n\n165\n00:08:10.540 --> 00:08:14.117\nWhen we think of a biological inheritance,\nright,\n\n166\n00:08:14.117 --> 00:08:18.680\npassing traits along,\nthose are from two other sources, right?\n\n167\n00:08:18.680 --> 00:08:22.090\nYour mom and\nyour dad passed down a series of traits.\n\n168\n00:08:22.090 --> 00:08:25.240\nAnd those traits can be physical traits,\nlike how you look.\n\n169\n00:08:25.240 --> 00:08:29.840\nBut they can also be somewhat, some\nthings can be behavioral traits, right?\n\n170\n00:08:29.840 --> 00:08:30.650\nHow you behave.\n\n171\n00:08:30.650 --> 00:08:34.370\nHow you manage stress,\nthings of those natures.\n\n172\n00:08:34.370 --> 00:08:39.310\nIn Python,\nthat multiple inheritance is possible.\n\n173\n00:08:39.310 --> 00:08:40.830\nBut in object oriented programming,\n\n174\n00:08:40.830 --> 00:08:44.810\ntypically what it means is I have some\nparent and it is passing down a trait.\n\n175\n00:08:44.810 --> 00:08:48.830\nSo you would look at only the traits\nthat come from your dad, right, or\n\n176\n00:08:48.830 --> 00:08:51.020\nfrom your mom, but not necessarily both.\n\n177\n00:08:51.020 --> 00:08:53.390\nBecause that's not available\nin all programming languages.\n\n178\n00:08:53.390 --> 00:08:56.770\nSo in the context of object oriented\nprogramming we have to be careful\n\n179\n00:08:56.770 --> 00:08:58.460\nof it's not a combination.\n\n180\n00:08:58.460 --> 00:09:00.600\nIt's just an actual pull-down.\n\n181\n00:09:00.600 --> 00:09:02.790\nAnd let's look at this in the context.\n\n182\n00:09:02.790 --> 00:09:04.025\nLet's throw back to the lock.\n\n183\n00:09:04.025 --> 00:09:09.420\n[COUGH] So if we take a look here,\nwe have this lock, right?\n\n184\n00:09:09.420 --> 00:09:11.430\nAnd I have a key.\n\n185\n00:09:11.430 --> 00:09:12.440\nI turn the key.\n\n186\n00:09:12.440 --> 00:09:13.420\nIt opens.\n\n187\n00:09:13.420 --> 00:09:14.450\nThat's great.\n\n188\n00:09:14.450 --> 00:09:16.570\nThis is a very generic lock.\n\n189\n00:09:16.570 --> 00:09:18.050\nIt has a set of properties.\n\n190\n00:09:18.050 --> 00:09:21.580\nIt is open or closed,\nor locked or unlocked.\n\n191\n00:09:21.580 --> 00:09:22.590\nIt has a key.\n\n192\n00:09:24.050 --> 00:09:26.160\nIt maybe has some other proc, right?\n\n193\n00:09:26.160 --> 00:09:27.610\nIts color's black.\n\n194\n00:09:27.610 --> 00:09:28.500\nAnd that's it.\n\n195\n00:09:28.500 --> 00:09:30.260\nIt is very generic.\n\n196\n00:09:30.260 --> 00:09:35.800\nHowever, this is a poor\nrendition of a combination lock.\n\n197\n00:09:35.800 --> 00:09:38.230\nBut notice that's a more\nspecific type of lock.\n\n198\n00:09:39.630 --> 00:09:44.780\nAnything that the combination\nlock is able to do, well,\n\n199\n00:09:44.780 --> 00:09:47.970\nthat is not always available\nin the standard lock, right?\n\n200\n00:09:49.210 --> 00:09:52.960\nBut anything that the standard\nlock is capable of,\n\n201\n00:09:52.960 --> 00:09:56.110\nall of the traits should be\navailable in the combination lock.\n\n202\n00:09:56.110 --> 00:09:57.650\nIs it locked or unlocked?\n\n203\n00:09:57.650 --> 00:10:00.760\nWell yeah, the combination\nlock is locked or unlocked.\n\n204\n00:10:00.760 --> 00:10:05.030\nIs that also a property\nof the standard lock?\n\n205\n00:10:05.030 --> 00:10:06.490\nSure, right?\n\n206\n00:10:06.490 --> 00:10:10.480\nSo, we would say that a combination\nlock inherits those traits and\n\n207\n00:10:10.480 --> 00:10:12.960\nbehaviors, from the lock.\n\n208\n00:10:12.960 --> 00:10:16.903\nNow, I use a lock and not something\nbiological because we have to think in\n\n209\n00:10:16.903 --> 00:10:19.112\nterms of software systems, of design.\n\n210\n00:10:19.112 --> 00:10:20.790\nAnd how do we think about these?\n\n211\n00:10:20.790 --> 00:10:22.680\nWhat traits are common?\n\n212\n00:10:22.680 --> 00:10:24.540\nWhat behaviors are common?\n\n213\n00:10:24.540 --> 00:10:26.750\nAnd here's where it\nreally gets interesting.\n\n214\n00:10:26.750 --> 00:10:29.650\nPeople like to plan this out,\nand I like to plan as well, but\n\n215\n00:10:29.650 --> 00:10:32.420\nsometimes you'll start to\nsee these patterns emerge.\n\n216\n00:10:32.420 --> 00:10:36.347\nWhen we're actually programming, and\nnot just talking about these concepts.\n\n217\n00:10:36.347 --> 00:10:40.768\nAnd then you can apply this\nidea during some code changes.\n\n218\n00:10:40.768 --> 00:10:44.390\nOr what is called refactoring,\nwhere you take your current state of code.\n\n219\n00:10:44.390 --> 00:10:46.678\nAnd you move it around so\nit's a little bit cleaner,\n\n220\n00:10:46.678 --> 00:10:48.292\nyou don't have as much repetition.\n\n221\n00:10:48.292 --> 00:10:51.612\nBecause I could just say these\nare two totally different things.\n\n222\n00:10:51.612 --> 00:10:53.120\nI have a combination lock and a lock.\n\n223\n00:10:54.220 --> 00:10:57.180\nBut then someone goes, well,\na combination lock and\n\n224\n00:10:57.180 --> 00:10:58.650\na lock, they're both locks, right?\n\n225\n00:10:59.820 --> 00:11:00.803\nWell, yeah.\n\n226\n00:11:00.803 --> 00:11:04.530\nAnd can't you open a combination\nlock just like you can a lock?\n\n227\n00:11:04.530 --> 00:11:05.220\nWell, yeah.\n\n228\n00:11:06.400 --> 00:11:10.780\nWell, since those are shared, in\nprogramming we're able to utilize that to\n\n229\n00:11:10.780 --> 00:11:13.910\nkind of not repeat ourselves\nthroughout our code.\n\n230\n00:11:13.910 --> 00:11:15.210\nAnd that's very important.\n\n231\n00:11:16.260 --> 00:11:19.160\nBecause it requires less work,\nand programmers are lazy.\n\n232\n00:11:20.450 --> 00:11:24.580\n&gt;&gt; So we're just pointing out, like in\nthe combination lock, it's still a lock.\n\n233\n00:11:24.580 --> 00:11:26.060\nWe don't have to state that again.\n\n234\n00:11:26.060 --> 00:11:28.970\nWe are just saying what's new,\nwhat is different from this?\n\n235\n00:11:28.970 --> 00:11:30.990\n&gt;&gt; Exactly, and that's a key point.\n\n236\n00:11:30.990 --> 00:11:32.440\nWhat is different, what is new,\n\n237\n00:11:32.440 --> 00:11:36.130\nwhat do I need to add to a lock to\nmake it a combination lock, right?\n\n238\n00:11:36.130 --> 00:11:39.800\nSo a combination lock has a combination.\n\n239\n00:11:39.800 --> 00:11:42.570\nA combination of numbers that\nyou could put to unlock it.\n\n240\n00:11:42.570 --> 00:11:46.680\nThat is a new behavior, but everything\nelse with the lock is still there.\n\n241\n00:11:46.680 --> 00:11:47.760\n&gt;&gt; So the combination,\n\n242\n00:11:47.760 --> 00:11:51.730\nyou spin it instead of clicking\ndown with the actual hoop on top.\n\n243\n00:11:51.730 --> 00:11:57.350\n&gt;&gt; Right, so you're catching on, Vonne,\nit's making me happy, I like it.\n\n244\n00:11:57.350 --> 00:12:00.318\n&gt;&gt; I think I'm getting all these terms,\nso I'm glad we're going on this.\n\n245\n00:12:00.318 --> 00:12:00.924\n&gt;&gt; All right.\n\n246\n00:12:00.924 --> 00:12:03.530\n&gt;&gt; All right, so\nI think we have another one that you said.\n\n247\n00:12:03.530 --> 00:12:05.554\nAnd it sounded a little scary to me,\nhonestly.\n\n248\n00:12:05.554 --> 00:12:07.398\nI heard polymorphism.\n\n249\n00:12:07.398 --> 00:12:12.110\nOkay, poly, multiple morphism I'm\nthinking some crazy sci-fi movie,\n\n250\n00:12:12.110 --> 00:12:14.069\nI'm getting a little scared.\n\n251\n00:12:14.069 --> 00:12:16.400\nSo help me with this one.\n\n252\n00:12:16.400 --> 00:12:19.020\n&gt;&gt; So Vonne, polymorphism, I've always\nsaid that people like to use big\n\n253\n00:12:19.020 --> 00:12:21.020\nwords because it makes them feel good,\nright.\n\n254\n00:12:21.020 --> 00:12:24.480\nif you just walk out onto a crowd and\njust start saying, polymorphism.\n\n255\n00:12:24.480 --> 00:12:26.070\nYou might get some weird looks.\n\n256\n00:12:26.070 --> 00:12:28.790\nBut then there'll be someone to\nstrike up a conversation and\n\n257\n00:12:28.790 --> 00:12:30.320\nit may be in a different context.\n\n258\n00:12:30.320 --> 00:12:33.020\nSo polymorphism,\nlet's pull apart that word.\n\n259\n00:12:33.020 --> 00:12:34.350\nPoly does mean many.\n\n260\n00:12:34.350 --> 00:12:37.138\nMorphisms means forms.\n\n261\n00:12:37.138 --> 00:12:41.908\nAnd what that entails is,\ndepending on the context,\n\n262\n00:12:41.908 --> 00:12:45.110\nright, something may change.\n\n263\n00:12:45.110 --> 00:12:47.320\nA behavior or a trait may change.\n\n264\n00:12:49.000 --> 00:12:51.490\nSo let's think about this.\n\n265\n00:12:51.490 --> 00:12:56.082\nIn a running shoe, right, you put on your\nrunning shoes and you start running.\n\n266\n00:12:56.082 --> 00:12:57.210\nNow I don't know about you.\n\n267\n00:12:57.210 --> 00:13:01.241\nI still run very poorly in running shoes.\n\n268\n00:13:01.241 --> 00:13:07.834\nBut I would say if I were to put on ice\nskates and try to run I'm still running,\n\n269\n00:13:07.834 --> 00:13:12.080\nbut the context of how\nI'm running has changed.\n\n270\n00:13:12.080 --> 00:13:14.587\nAnd that means that that\nbehavior has changed.\n\n271\n00:13:14.587 --> 00:13:18.441\nNot because something intrinsically\nabout me has changed but\n\n272\n00:13:18.441 --> 00:13:20.310\nmy environment has changed.\n\n273\n00:13:20.310 --> 00:13:22.850\nOr some kind of run time\n\n274\n00:13:24.110 --> 00:13:27.430\nchange has occurred that has\ninfluenced how the running occur.\n\n275\n00:13:27.430 --> 00:13:32.789\nSo polymorphism means depending\non how things are going.\n\n276\n00:13:32.789 --> 00:13:37.565\nHow your environment's set up or maybe\ngot hot or cold, or whatever it may be.\n\n277\n00:13:37.565 --> 00:13:41.070\nThe behavior or\na set of properties may change to adapt.\n\n278\n00:13:41.070 --> 00:13:43.964\nIt's almost like adaptability.\n\n279\n00:13:43.964 --> 00:13:48.817\nAnd we'll see more about this\nas we actually implement some\n\n280\n00:13:48.817 --> 00:13:50.970\npolymorphic behaviors.\n\n281\n00:13:50.970 --> 00:13:52.900\nSo, we've hit on these four ideas.\n\n282\n00:13:52.900 --> 00:13:56.280\nAgain, this is kind of a filler,\nright, a backload of\n\n283\n00:13:56.280 --> 00:13:59.950\nthese four ideas that are important when\nwe talk about object oriented programming.\n\n284\n00:13:59.950 --> 00:14:05.466\nNow, keep in mind, I will highlight\nas Python, we're using this.\n\n285\n00:14:05.466 --> 00:14:09.260\nBut Python doesn't always\nabide by every rule.\n\n286\n00:14:09.260 --> 00:14:14.105\nFor instance, in encapsulation,\nthe idea is to hide away data and\n\n287\n00:14:14.105 --> 00:14:17.232\nimplementation details from your users.\n\n288\n00:14:17.232 --> 00:14:19.070\nSo they don't have to worry about it,\nit just works, right.\n\n289\n00:14:19.070 --> 00:14:21.220\nYou turn on the car, you unlock the lock.\n\n290\n00:14:21.220 --> 00:14:23.930\nPython doesn't have a true private.\n\n291\n00:14:23.930 --> 00:14:25.130\nThere are ways to simulate it.\n\n292\n00:14:25.130 --> 00:14:29.198\nThere are ways to discourage people\nkind of poking around it and\n\n293\n00:14:29.198 --> 00:14:31.509\nthe lock being unlocked or locked.\n\n294\n00:14:31.509 --> 00:14:35.010\nBut Python have no way of\nhiding information for people.\n\n295\n00:14:35.010 --> 00:14:39.720\nSo it doesn't truly have\nfull encapsulation but\n\n296\n00:14:39.720 --> 00:14:43.190\nwe will still abide by that principle\nbecause it helps with design.\n\n297\n00:14:43.190 --> 00:14:47.399\nSo we have these four pillars again,\nencapsulation, abstraction, inheritance,\n\n298\n00:14:47.399 --> 00:14:48.398\nand polymorphism.\n\n299\n00:14:48.398 --> 00:14:52.420\nAnd we're gonna use these a thought\nprocess, as a way to build systems.\n\n300\n00:14:52.420 --> 00:14:57.169\nTo think about systems as we go on\ninto object-oriented programming.\n\n301\n00:14:57.169 --> 00:14:57.927\n&gt;&gt; Okay, well,\n\n302\n00:14:57.927 --> 00:15:01.795\nI can see that this is a really important\nfoundation that we need to know.\n\n303\n00:15:01.795 --> 00:15:05.583\nTo be able to define these words that,\nI feel, you're gonna be using them a lot,\n\n304\n00:15:05.583 --> 00:15:06.270\naren't you?\n\n305\n00:15:06.270 --> 00:15:10.357\nSo [LAUGH] we're gonna be able to\nunderstand what he's talking about from\n\n306\n00:15:10.357 --> 00:15:11.637\na basic perspective.\n\n307\n00:15:11.637 --> 00:15:15.241\nAnd then see how this is going to actually\nplay out when it get into that code and\n\n308\n00:15:15.241 --> 00:15:16.580\nstart actually using this.\n\n309\n00:15:16.580 --> 00:15:18.930\nSo, great, well,\nthank you so much, Justin.\n\n310\n00:15:18.930 --> 00:15:20.200\nAnd I hope you all enjoyed that.\n\n311\n00:15:20.200 --> 00:15:23.068\nAnd so signing off for\nITProTV, I'm Vonne Smith.\n\n312\n00:15:23.068 --> 00:15:24.010\n&gt;&gt; And I'm Justin Dennison.\n\n313\n00:15:24.010 --> 00:15:25.513\n&gt;&gt; See you next time.\n\n314\n00:15:25.513 --> 00:15:31.446\n[MUSIC]\n\n315\n00:15:31.446 --> 00:15:35.759\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "208132567"
        },
        {
          "description": "In this episode, Vonne and Justin discuss creating classes and objects. In addition, they cover adding methods to those objects as well as things to consider when using these features in Object-Oriented Python.",
          "length": "1897",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-3-1-creating_classes_and_objects_in_python-030917-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-3-1-creating_classes_and_objects_in_python-030917-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-3-1-creating_classes_and_objects_in_python-030917-1-sm.jpg",
          "title": "Creating Classes and Objects in Python",
          "transcript": "WEBVTT\n\n1\n00:00:00.003 --> 00:00:06.047\nWelcome to ITPRO.TV, [CROSSTALK]\n\n2\n00:00:06.047 --> 00:00:08.387\n[MUSIC]\n\n3\n00:00:08.387 --> 00:00:10.923\n&gt;&gt; You're watching ITPRO.TV.\n\n4\n00:00:12.690 --> 00:00:16.310\n&gt;&gt; Hello everyone, and\nwelcome to another episode of ITProTV.\n\n5\n00:00:16.310 --> 00:00:17.660\nI'm your host Vonne Smith, and\n\n6\n00:00:17.660 --> 00:00:22.280\ntoday we're continuing on with our\nseries of Object Oriented Python.\n\n7\n00:00:22.280 --> 00:00:26.760\nAnd today we're gonna be talking about\ncreating classes and objects in Python.\n\n8\n00:00:26.760 --> 00:00:29.870\nAnd here to help us with that is Mr.\nJustin Dennison, how you doing?\n\n9\n00:00:29.870 --> 00:00:31.540\nI am doing well Vonne, how are you today?\n\n10\n00:00:31.540 --> 00:00:35.090\n&gt;&gt; Doing really great, I'm ready to\ntalk to you about classes and objects.\n\n11\n00:00:35.090 --> 00:00:36.070\nSo tell me all about this.\n\n12\n00:00:36.070 --> 00:00:40.910\n&gt;&gt; Well,, that is, it's a pretty,\nit's one of those heady topics.\n\n13\n00:00:40.910 --> 00:00:44.275\nBut I think as we dive into code later\ntoday, we'll definitely see that.\n\n14\n00:00:44.275 --> 00:00:46.815\nSo, what is a class, right?\n\n15\n00:00:46.815 --> 00:00:50.052\nWe say these words, people are like,\nwell, that's thing I sat through for\n\n16\n00:00:50.052 --> 00:00:53.715\n50 minutes and then I kinda took a nap,\nand then I just went on about my business.\n\n17\n00:00:53.715 --> 00:00:57.325\nThat is a class, but\nnot the class that we're talking about.\n\n18\n00:00:57.325 --> 00:01:01.310\nI like to think of a class more\nas like the cookie cutter right?\n\n19\n00:01:01.310 --> 00:01:06.560\nI have this template or\neven the original that I use to photocopy.\n\n20\n00:01:06.560 --> 00:01:09.310\nI got all my setup done and\n\n21\n00:01:09.310 --> 00:01:12.650\nthat tells me the structure of\neverything that is produced from there.\n\n22\n00:01:12.650 --> 00:01:18.230\nWe talk about mass production of vehicles,\nand toys, and all these other things.\n\n23\n00:01:18.230 --> 00:01:24.090\nThe dyes of the machine are the class,\nthey help us create objects reproducibly.\n\n24\n00:01:24.090 --> 00:01:28.270\n&gt;&gt; So I heard the word object in there,\nso what is an object then?\n\n25\n00:01:28.270 --> 00:01:30.710\n&gt;&gt; Well Yvonne,\nI like how you always keep me honest.\n\n26\n00:01:30.710 --> 00:01:34.330\nI'm using terminology and\njargon again, so what is an object?\n\n27\n00:01:34.330 --> 00:01:36.130\nGoing back to that cookie\ncutter idea again,\n\n28\n00:01:36.130 --> 00:01:40.022\nright, a class is the cookie cutter,\nwhat do I do with the cookie cutter?\n\n29\n00:01:40.022 --> 00:01:40.920\nI actually,\n\n30\n00:01:40.920 --> 00:01:45.340\nI roll out my cookie dough, I'm getting\nhungry just talking about this one.\n\n31\n00:01:45.340 --> 00:01:47.480\nAnd I stamp out individual cookies,\n\n32\n00:01:47.480 --> 00:01:51.560\nnow the shape of those cookies is\ndictated by the cookie cutter, right?\n\n33\n00:01:51.560 --> 00:01:54.600\nSo, the shape is a property\nof the cookie cutter, and\n\n34\n00:01:54.600 --> 00:01:57.640\nI reproduced that property\nthroughout the objects.\n\n35\n00:01:57.640 --> 00:02:00.850\nRight, you have the little\ngingerbread men cookies, and\n\n36\n00:02:00.850 --> 00:02:04.510\nthose are produced by a gingerbread\nman shaped cookie cutter.\n\n37\n00:02:04.510 --> 00:02:06.800\nThat was a long sentence.\n\n38\n00:02:06.800 --> 00:02:10.580\nBut, boom, boom, boom, and\nI have a lot of objects.\n\n39\n00:02:10.580 --> 00:02:13.320\nObjects in this case\nare the actual cookies.\n\n40\n00:02:13.320 --> 00:02:17.380\nSo, I've talked about classes and\nobjects in Python.\n\n41\n00:02:17.380 --> 00:02:20.390\nBut what does that look like,\nreally, right?\n\n42\n00:02:20.390 --> 00:02:22.750\nWhen we write these, how do we use them?\n\n43\n00:02:22.750 --> 00:02:23.770\nHow do they work?\n\n44\n00:02:23.770 --> 00:02:25.150\nWhat good are they for?\n\n45\n00:02:25.150 --> 00:02:27.950\nAnd I think the best thing to do\nis probably just to go ahead and\n\n46\n00:02:27.950 --> 00:02:29.390\njump right in.\n\n47\n00:02:29.390 --> 00:02:34.350\nStart coding a little bit and then see\nhow they help us with abstraction,\n\n48\n00:02:34.350 --> 00:02:35.500\nencapsulation.\n\n49\n00:02:35.500 --> 00:02:39.360\nAnd then, eventually we'll get to some\ninheritance and polymorphic behavior.\n\n50\n00:02:39.360 --> 00:02:42.280\nSo, let's go ahead and\nhop down to our system here.\n\n51\n00:02:42.280 --> 00:02:45.160\nWe do have to do a little\nbit of project set up first.\n\n52\n00:02:45.160 --> 00:02:50.350\nSo, the first things I'm gonna do is\nopen up terminal, not terminal, iTerm.\n\n53\n00:02:50.350 --> 00:02:55.910\nSorry, I have very particular tastes,\nso there we go.\n\n54\n00:02:55.910 --> 00:02:59.860\nAnd I'm just gonna make this full screen,\nso we can flip back and forth.\n\n55\n00:02:59.860 --> 00:03:01.980\nNow you don't have to know\na lot about terminal,\n\n56\n00:03:01.980 --> 00:03:05.520\nbut we are going to work around\nin the command line a little bit.\n\n57\n00:03:05.520 --> 00:03:07.313\nAnd the first thing I'm gonna do is ls.\n\n58\n00:03:07.313 --> 00:03:09.580\nAnd that's gonna list out my folders.\n\n59\n00:03:09.580 --> 00:03:11.460\nAnd I'm just gonna start on the desktop.\n\n60\n00:03:11.460 --> 00:03:14.090\nI'm not building a project folder,\na fully fledged project folder,\n\n61\n00:03:14.090 --> 00:03:14.960\nwe're just playing around.\n\n62\n00:03:14.960 --> 00:03:18.320\nSo I'm gonna start on the desktop, and\nthat's just so I can find the file later.\n\n63\n00:03:19.350 --> 00:03:20.860\nSo how do I get tot he desktop?\n\n64\n00:03:20.860 --> 00:03:22.440\nAnd that's through the cd command.\n\n65\n00:03:22.440 --> 00:03:24.350\nLet me make this just a little bit bigger.\n\n66\n00:03:24.350 --> 00:03:27.120\nThere's cd and then desktop.\n\n67\n00:03:27.120 --> 00:03:29.960\nAnd notice that autocompleted,\nhow did that autocomplete?\n\n68\n00:03:29.960 --> 00:03:31.020\nWell if you type,\n\n69\n00:03:31.020 --> 00:03:35.210\nif you start typing letters once you\nget to a unique portion of the word and\n\n70\n00:03:35.210 --> 00:03:40.700\nyou hit tab most terminals or\ncommand lines will auto complete for you.\n\n71\n00:03:40.700 --> 00:03:45.770\nSo if I move back to d and hit Tab\n\n72\n00:03:45.770 --> 00:03:50.330\nmine would give me a list of options, not\nall command line interfaces provide that.\n\n73\n00:03:50.330 --> 00:03:52.610\nThat's a customization that I've built in.\n\n74\n00:03:52.610 --> 00:03:56.640\nBut if I type D-E-S-K and\nI hit Tab, it goes,\n\n75\n00:03:56.640 --> 00:03:59.620\nthe only thing that starts with D-E-S-K,\nis desktop.\n\n76\n00:03:59.620 --> 00:04:02.980\nAnd I implore you,\nplease take advantage of that.\n\n77\n00:04:02.980 --> 00:04:04.850\nSo I'm gonna hop into the desktop.\n\n78\n00:04:04.850 --> 00:04:05.600\nYes Vonne?\n\n79\n00:04:05.600 --> 00:04:08.960\n&gt;&gt; Did you create those preferences\nyourself within here or\n\n80\n00:04:08.960 --> 00:04:13.225\nis that part of the program that the\niTerm, or the iTerminal that you're using?\n\n81\n00:04:13.225 --> 00:04:14.350\n&gt;&gt; Vonne that is a great question.\n\n82\n00:04:14.350 --> 00:04:16.720\nIs this part of iTerm,\nthis custom terminal?\n\n83\n00:04:16.720 --> 00:04:17.990\nAnd it is, in fact, not.\n\n84\n00:04:17.990 --> 00:04:22.410\nI'm running a custom shell, so I've done\nother behind the scenes customization.\n\n85\n00:04:22.410 --> 00:04:27.160\nSo if you don't see those options, that's\nfine, just know that tab typically works.\n\n86\n00:04:27.160 --> 00:04:31.835\nNot always, but typically does work once\nyou get to this character of uniqueness.\n\n87\n00:04:31.835 --> 00:04:35.770\nD-E-S-K, nothing else starts with\nthose four characters, I hit tab and\n\n88\n00:04:35.770 --> 00:04:39.030\nboom, capitalization does matter,\nso be careful on that.\n\n89\n00:04:39.030 --> 00:04:42.810\nSo I'm on the desktop And,\nI'm just gonna create a file.\n\n90\n00:04:42.810 --> 00:04:46.410\nAnd, I'm gonna say touch,\nwhich is gonna allow me to create a file.\n\n91\n00:04:46.410 --> 00:04:48.060\nAnd this is a work flow that I use,\n\n92\n00:04:48.060 --> 00:04:51.210\nbecause I find that as I'm programming\na great deal during the day.\n\n93\n00:04:51.210 --> 00:04:54.490\nMoving my hand from the keyboard and\nto the mouse and\n\n94\n00:04:54.490 --> 00:04:58.150\nback, well, that actually causes\nme some right shoulder pain, so\n\n95\n00:04:58.150 --> 00:05:02.760\nyou'll have to keep me honest Vonne,\nI may get a little fast.\n\n96\n00:05:02.760 --> 00:05:06.500\nSo if I'm doing that please be like,\nhey, I'm gonna need you to calm down.\n\n97\n00:05:06.500 --> 00:05:10.110\nSo touch is gonna give me\nthe ability to create a file.\n\n98\n00:05:10.110 --> 00:05:11.640\nI don't know why it's called touch.\n\n99\n00:05:11.640 --> 00:05:14.070\nI think think of it as going boop,\nthere's a file.\n\n100\n00:05:14.070 --> 00:05:18.920\nSo I'm gonna touch, and\nlet's call it account.py.\n\n101\n00:05:18.920 --> 00:05:19.448\nOkay.\n\n102\n00:05:19.448 --> 00:05:23.965\nSo I've chosen that name because we\nare going to write a class that simulates\n\n103\n00:05:23.965 --> 00:05:24.960\nan account.\n\n104\n00:05:24.960 --> 00:05:26.100\nNow what do I mean about an account?\n\n105\n00:05:26.100 --> 00:05:30.160\nWell I am thinking very abstractly,\nit could be a savings account,\n\n106\n00:05:30.160 --> 00:05:31.560\nit could be a checking account.\n\n107\n00:05:31.560 --> 00:05:35.040\nIt could be a money market account,\nan investment account, but\n\n108\n00:05:35.040 --> 00:05:38.280\nall of those things have\ncommon patterns right?\n\n109\n00:05:38.280 --> 00:05:41.640\nThey have a balance and\na set of transactions.\n\n110\n00:05:41.640 --> 00:05:44.870\nAnd we'll explore that idea\nas we write this class.\n\n111\n00:05:44.870 --> 00:05:48.690\nSo if I ls on the desktop,\nI have some folders here, but notice,\n\n112\n00:05:48.690 --> 00:05:52.460\nI have this account.py file now,\nand that's good.\n\n113\n00:05:52.460 --> 00:05:56.050\nSo I can open that in Atom,\nI can hang out on the desktop, and\n\n114\n00:05:56.050 --> 00:05:57.860\nI'll be able to switch back and forth.\n\n115\n00:05:57.860 --> 00:05:59.360\nNow, how do I get to Atom?\n\n116\n00:05:59.360 --> 00:06:02.100\nThere's a couple of ways I'm\ngonna do the old school way.\n\n117\n00:06:02.100 --> 00:06:07.660\nUsually I use command line, a very simple\ncommand line interface to get to Atom,\n\n118\n00:06:07.660 --> 00:06:10.520\nbut I'm gonna open Atom\nlike everyone else would.\n\n119\n00:06:10.520 --> 00:06:12.250\nThis will work on every system.\n\n120\n00:06:12.250 --> 00:06:18.770\nSo I'm gonna switch over, not to Google\nChrome, and I'm going to look for Atom.\n\n121\n00:06:18.770 --> 00:06:23.380\nSo I'm opening the Atom text editor,\nand here we go.\n\n122\n00:06:23.380 --> 00:06:28.260\nAs soon as it opens,\nlet me get rid of all of this here and\n\n123\n00:06:28.260 --> 00:06:32.270\nthere we go and I'm going to remove this.\n\n124\n00:06:32.270 --> 00:06:34.290\nI'm actually just gonna\nopen up a new window\n\n125\n00:06:35.790 --> 00:06:38.270\nbecause Atom saved some preferences.\n\n126\n00:06:38.270 --> 00:06:42.280\nSo if you ever open it up and you're like,\nwell there's a bunch of stuff I was\n\n127\n00:06:42.280 --> 00:06:46.720\nalready working on, that's to be helpful\nbut sometimes this can be annoying.\n\n128\n00:06:46.720 --> 00:06:50.810\nSo I have Atom open, there's nothing\nthere, I'm going to file -&gt; open and\n\n129\n00:06:50.810 --> 00:06:52.580\nnavigate to that file.\n\n130\n00:06:52.580 --> 00:06:55.460\nAnd I have,\neverything's already on my desktop.\n\n131\n00:06:55.460 --> 00:06:58.800\nI've looked at something on my\ndesktop before so it's there.\n\n132\n00:06:58.800 --> 00:07:02.884\nSo there it is,\nthis opening account.py,, open.\n\n133\n00:07:02.884 --> 00:07:04.390\nAnd I have a plug-in and\n\n134\n00:07:04.390 --> 00:07:07.760\nI'm not gonna start that because,\nwell that would be cheating.\n\n135\n00:07:07.760 --> 00:07:12.480\nSo here we go, I'm in account.py,\nnow, what does this mean?\n\n136\n00:07:12.480 --> 00:07:14.540\nHow do I make a class?\n\n137\n00:07:14.540 --> 00:07:19.600\nWell, there's a keyword in Python called,\n\n138\n00:07:19.600 --> 00:07:24.408\nyou guessed it, class, that allows\nme to make a class just like this.\n\n139\n00:07:24.408 --> 00:07:28.230\nSo class Account: pass.\n\n140\n00:07:28.230 --> 00:07:31.770\nNow, I'm gonna talk about this\npass keyword in just a moment.\n\n141\n00:07:31.770 --> 00:07:35.460\nBut also, I want to warn you,\nwe're using class and\n\n142\n00:07:35.460 --> 00:07:37.520\ntext that works very well for Python 3.\n\n143\n00:07:37.520 --> 00:07:44.540\nIf you're in Python 2 or before, you may\nget some weird behavior because there was\n\n144\n00:07:44.540 --> 00:07:48.860\nan old style class that kinda came along\nand then they eventually got rid of it.\n\n145\n00:07:48.860 --> 00:07:51.672\nSo make sure you're in Python 3,\nyou shouldn't have any trouble.\n\n146\n00:07:51.672 --> 00:07:56.713\nBut I have this class keyword now\nthat says I am now defining a class.\n\n147\n00:07:56.713 --> 00:08:00.394\nAll right and I'm giving the class a name.\n\n148\n00:08:00.394 --> 00:08:01.446\nAccount.\n\n149\n00:08:01.446 --> 00:08:02.872\nNotice this is capitalized.\n\n150\n00:08:02.872 --> 00:08:06.550\nIt is capitalized by convention.\n\n151\n00:08:06.550 --> 00:08:11.510\nSo this is a class casing, and\nthis means it's something special.\n\n152\n00:08:11.510 --> 00:08:14.880\nIt actually means from the name,\nit is a cookie cuter.\n\n153\n00:08:14.880 --> 00:08:18.480\nIt is gonna be the template that\nI create other things from.\n\n154\n00:08:18.480 --> 00:08:19.970\nAnd in the end of that line is a colon.\n\n155\n00:08:21.440 --> 00:08:23.330\nHit enter, hit tab once and hit pass.\n\n156\n00:08:23.330 --> 00:08:27.750\nNow what pass means is,\nI don't want to define the body of this.\n\n157\n00:08:27.750 --> 00:08:29.820\nInstead, I just want to pass across it,\n\n158\n00:08:29.820 --> 00:08:32.540\nit's still gonna create\nthe class in a sense.\n\n159\n00:08:32.540 --> 00:08:36.410\nIt's gonna make the account\nname available, but\n\n160\n00:08:36.410 --> 00:08:40.290\npass would just mean I don't have\nto put anything in there to use it.\n\n161\n00:08:40.290 --> 00:08:42.890\nNow instead of working in this\ntext file I'm actually going\n\n162\n00:08:42.890 --> 00:08:47.240\nto hop into the repl and pull this in,\nand show you a few things,\n\n163\n00:08:47.240 --> 00:08:52.070\nlike I'm going to create this class,\nmanipulate it and see how these work.\n\n164\n00:08:52.070 --> 00:08:53.920\nSo I'm going to rearrange\nmy desktops here.\n\n165\n00:08:53.920 --> 00:08:54.420\nMaybe.\n\n166\n00:08:55.910 --> 00:08:56.940\nNope, I'm not.\n\n167\n00:08:56.940 --> 00:08:58.390\nSo here we go, back here.\n\n168\n00:08:58.390 --> 00:09:00.610\nI'm going to say Python three,\n\n169\n00:09:00.610 --> 00:09:03.500\nand that's because I want to\nmake sure I'm in Python three.\n\n170\n00:09:03.500 --> 00:09:04.930\nI have three point six.\n\n171\n00:09:04.930 --> 00:09:10.870\nAnd I'm going to,\nfrom account import Account.\n\n172\n00:09:10.870 --> 00:09:12.050\nNow why does that work?\n\n173\n00:09:13.660 --> 00:09:16.277\nWell if I hop over here\nthis is account.py.\n\n174\n00:09:16.277 --> 00:09:19.212\nPython does look ups by file names, so\n\n175\n00:09:19.212 --> 00:09:23.930\nfrom account means I'm\nlooking in the account file.\n\n176\n00:09:23.930 --> 00:09:28.296\nThat assumes that I'm in the same\ndirectory that the account.py file\n\n177\n00:09:28.296 --> 00:09:32.910\nexits in, and I'm importing\nsomething with the name Account.\n\n178\n00:09:34.070 --> 00:09:38.130\nSo, what this is going to allow me to do\nis bring in the Account class that I've\n\n179\n00:09:38.130 --> 00:09:43.170\nwritten in that text file,\nin that .py file, into the repl.\n\n180\n00:09:43.170 --> 00:09:45.950\nAnd notice I did not get any errors.\n\n181\n00:09:45.950 --> 00:09:46.970\nWell, that's good.\n\n182\n00:09:46.970 --> 00:09:47.968\nSo, how do I make this?\n\n183\n00:09:47.968 --> 00:09:54.500\nSo, a equals, and in some other languages,\nyou have to use a special word called new.\n\n184\n00:09:55.540 --> 00:09:58.168\nWell, in Python,\nyou don't need the new keyword,\n\n185\n00:09:58.168 --> 00:10:00.637\ninstead you just call it\nlike a normal function.\n\n186\n00:10:00.637 --> 00:10:03.420\nAnd well, there's no errors again.\n\n187\n00:10:03.420 --> 00:10:04.840\nSo what do we have?\n\n188\n00:10:04.840 --> 00:10:11.000\nIt says we have an account object, and\nthen here's this weird bunch of numbers.\n\n189\n00:10:11.000 --> 00:10:14.771\nThis is a representation of the memory\naddress that it is stored in.\n\n190\n00:10:14.771 --> 00:10:18.934\nWell, this isn't nice to look at,\nand we'll deal with that later, but\n\n191\n00:10:18.934 --> 00:10:23.459\nwe have now created our first object from\nthe first class that we have written.\n\n192\n00:10:24.970 --> 00:10:26.210\nI have an object.\n\n193\n00:10:26.210 --> 00:10:32.700\nWell, if I say b equals Account,\nI now have two objects a and b.\n\n194\n00:10:32.700 --> 00:10:36.770\nBut notice these two\nnumbers are different, and\n\n195\n00:10:36.770 --> 00:10:40.050\nthat's how it tells is a equal to b?\n\n196\n00:10:40.050 --> 00:10:41.560\nThey're not at the same memory address,\n\n197\n00:10:41.560 --> 00:10:44.621\nso they are different\nobjects within the repl.\n\n198\n00:10:46.220 --> 00:10:51.350\nSo if I look here, if I say a.balance = 0,\n\n199\n00:10:51.350 --> 00:10:54.720\nand I say a.\n\n200\n00:10:54.720 --> 00:10:58.741\nWell, it doesn't look any different,\nbut if I say a.balance, that's 0.\n\n201\n00:10:58.741 --> 00:11:02.440\nBut if I say b.balance!\n\n202\n00:11:02.440 --> 00:11:03.056\nAttribute error.\n\n203\n00:11:03.056 --> 00:11:06.240\nSo I've now added a property on the fly,\n\n204\n00:11:06.240 --> 00:11:10.710\nbecause Python is dynamic,\ncalled balance, and set it equal to zero.\n\n205\n00:11:10.710 --> 00:11:13.797\nWhen I open a new account at your bank,\nwell,\n\n206\n00:11:13.797 --> 00:11:16.496\nit has nothing in it until you deposit.\n\n207\n00:11:16.496 --> 00:11:17.693\nNow, usually banks so\n\n208\n00:11:17.693 --> 00:11:22.000\nI ask you I need money to put in\nthis account before you can open it.\n\n209\n00:11:22.000 --> 00:11:26.860\nBut a.balance now has a zero\nbalance attached to it.\n\n210\n00:11:26.860 --> 00:11:30.420\nBut notice that b.balance,\nthere's nothing there.\n\n211\n00:11:30.420 --> 00:11:32.310\nIt's not defined.\n\n212\n00:11:32.310 --> 00:11:33.030\nWell, why is it?\n\n213\n00:11:33.030 --> 00:11:36.300\nThat's because the class\ndoes not account for\n\n214\n00:11:37.490 --> 00:11:39.690\nbalance being an initialization, right?\n\n215\n00:11:39.690 --> 00:11:43.297\nHow do I make this work upon creation?\n\n216\n00:11:43.297 --> 00:11:47.570\nAnd that's where we start\nthat pass phrase, right?\n\n217\n00:11:47.570 --> 00:11:51.594\nThat pass thing we're\ndoing in that account.py.\n\n218\n00:11:51.594 --> 00:11:53.210\nWell, that's not gonna work for us.\n\n219\n00:11:53.210 --> 00:11:55.590\nWe need some way to create the object and\n\n220\n00:11:55.590 --> 00:11:59.720\nset some attributes, or\nproperties upon creation.\n\n221\n00:11:59.720 --> 00:12:02.689\nSo let's hop back over there,\nand see how that goes.\n\n222\n00:12:04.260 --> 00:12:09.963\nSo let's say def, and we're defining a,\nthis is called a method on the class,\n\n223\n00:12:09.963 --> 00:12:13.369\nand method means that it\nis attached to a class,\n\n224\n00:12:13.369 --> 00:12:16.371\nso each object will get this same method.\n\n225\n00:12:16.371 --> 00:12:21.301\nAnd __init__, this is a magic method or\n\n226\n00:12:21.301 --> 00:12:24.507\na special method In Python.\n\n227\n00:12:24.507 --> 00:12:26.065\nSo behind the scenes,\n\n228\n00:12:26.065 --> 00:12:31.004\nPython is calling this method when I\ncreate a new object with the class.\n\n229\n00:12:31.004 --> 00:12:35.760\nParentheses self, and\nlet's say that for now,\n\n230\n00:12:35.760 --> 00:12:40.748\nwhen I open an account or\ncreate an account object,\n\n231\n00:12:40.748 --> 00:12:44.462\nI'm going to set the balance to zero.\n\n232\n00:12:44.462 --> 00:12:45.580\nNow that's kind of weird.\n\n233\n00:12:45.580 --> 00:12:47.660\nWhy, what am I doing here?.\n\n234\n00:12:47.660 --> 00:12:48.920\nWhat I'm saying is,\n\n235\n00:12:48.920 --> 00:12:53.490\nwhen I create a new object,\nthis init method is going to be run.\n\n236\n00:12:53.490 --> 00:12:59.300\nAnd set, dot the balance, just like\nI did over here in the repl, right?\n\n237\n00:12:59.300 --> 00:13:01.020\na.balance equals zero.\n\n238\n00:13:01.020 --> 00:13:04.270\nThat's effectively what this does.\n\n239\n00:13:04.270 --> 00:13:05.910\nSo how does this work now?\n\n240\n00:13:05.910 --> 00:13:08.288\nWell I killed the repl originally.\n\n241\n00:13:08.288 --> 00:13:10.142\n[SOUND], a lot of scrolling there, Vonne.\n\n242\n00:13:10.142 --> 00:13:12.730\nWell I gotta be careful,\nI about got sea sick.\n\n243\n00:13:12.730 --> 00:13:17.820\nSo from account import Account,\n\n244\n00:13:17.820 --> 00:13:22.193\nand if I say now a = account.\n\n245\n00:13:22.193 --> 00:13:27.097\na.balance, I have a 0 balance on that one.\n\n246\n00:13:27.097 --> 00:13:30.350\nAnd what about b.balance?\n\n247\n00:13:30.350 --> 00:13:35.130\nWell, b's not defined, so I have to\ncreate the object, whoopsie daisy.\n\n248\n00:13:35.130 --> 00:13:38.620\nBut if I have b.balance now,\nit is also zero.\n\n249\n00:13:38.620 --> 00:13:42.160\nSo I know have a method that allows me to\n\n250\n00:13:42.160 --> 00:13:45.360\nset properties as\nthe object is constructed.\n\n251\n00:13:45.360 --> 00:13:46.910\nSo that's incredibly helpful.\n\n252\n00:13:47.940 --> 00:13:50.360\n&gt;&gt; And Justin, does that have\nsomething to do with the self?\n\n253\n00:13:50.360 --> 00:13:51.990\nI saw self in there.\n\n254\n00:13:51.990 --> 00:13:54.432\nI wasn't totally seeing\nwhere that was coming in.\n\n255\n00:13:54.432 --> 00:13:59.100\n&gt;&gt; Well, Vonne, yeah, that self thing,\nit looks like a magic keyword.\n\n256\n00:13:59.100 --> 00:14:02.660\nIt looks like, that's special to Python,\nI have to do that.\n\n257\n00:14:02.660 --> 00:14:06.890\nSelf is actually a convention\nused by other Pythonistas.\n\n258\n00:14:06.890 --> 00:14:08.590\nThat's a funny word to me.\n\n259\n00:14:09.630 --> 00:14:11.860\nThat's what's accepted when\nyou are creating a class.\n\n260\n00:14:11.860 --> 00:14:13.350\nThere's nothing special about it.\n\n261\n00:14:13.350 --> 00:14:17.813\nI can actually say this,\nif you are from other languages, well,\n\n262\n00:14:17.813 --> 00:14:19.690\nlet's see how that works.\n\n263\n00:14:19.690 --> 00:14:22.764\nLet's see if I am telling a fib.\n\n264\n00:14:22.764 --> 00:14:28.806\nSo I am going to kill the repl,\nClear, start the repl up again,\n\n265\n00:14:28.806 --> 00:14:32.809\nand then from account, import Account.\n\n266\n00:14:32.809 --> 00:14:36.460\nAnd then a = Account(),\n\n267\n00:14:36.460 --> 00:14:40.599\na.balance, it still works.\n\n268\n00:14:40.599 --> 00:14:44.521\nThere's nothing special about\nthat self keyword, except for\n\n269\n00:14:44.521 --> 00:14:46.690\nthis one particular thing.\n\n270\n00:14:46.690 --> 00:14:50.030\nThis is the accepted convention\nwhen creating classes.\n\n271\n00:14:50.030 --> 00:14:54.030\nWhen you write Python code,\nit should by Pythonic.\n\n272\n00:14:54.030 --> 00:14:57.110\nWhen other people read it,\nthey should be able to reason about it.\n\n273\n00:14:57.110 --> 00:15:00.720\nSo the common convention\nInvention is to use self here.\n\n274\n00:15:01.920 --> 00:15:05.190\nNow, what does self actually represent?\n\n275\n00:15:05.190 --> 00:15:09.879\nWhat Python does is grab this emit\nmethod from the class, create an object,\n\n276\n00:15:09.879 --> 00:15:15.460\njust like we did a little while ago, and\nthen run this function on that object.\n\n277\n00:15:15.460 --> 00:15:20.810\nAnd the first argument, if we were in\nthe repl, would actually be a, right?\n\n278\n00:15:20.810 --> 00:15:25.040\nSo when I did create a, it created an\nobject and it passed it back through here,\n\n279\n00:15:25.040 --> 00:15:28.690\nand then that's what created\nall of those properties.\n\n280\n00:15:29.830 --> 00:15:35.052\nBut if we use self, it's more of a general\nterm, so I can create a bunch of them.\n\n281\n00:15:35.052 --> 00:15:38.678\n&gt;&gt; And we're speaking Python right now,so\nwe should always, we're doing Python,\n\n282\n00:15:38.678 --> 00:15:39.520\nspeaking Python.\n\n283\n00:15:39.520 --> 00:15:41.990\n&gt;&gt; Right.\nSo we're being Pythonic, so\n\n284\n00:15:41.990 --> 00:15:46.850\neverybody that reads our code can say,\nhey, that looks Pythonic to me.\n\n285\n00:15:46.850 --> 00:15:54.877\nNow in this class, I don't always want\nto set the balance equal to zero.\n\n286\n00:15:54.877 --> 00:15:57.420\nWhat if I want, upon construction,\n\n287\n00:15:57.420 --> 00:16:00.627\nto create a class that\nhas an initial balance.\n\n288\n00:16:00.627 --> 00:16:04.678\nWell, I can do that because this dunder,\nthat's a special keyword,\n\n289\n00:16:04.678 --> 00:16:07.230\ndouble underscore is pronounced dunder.\n\n290\n00:16:07.230 --> 00:16:11.050\nDunder init,\nI can actually give it other arguments.\n\n291\n00:16:11.050 --> 00:16:15.650\nSelf, the first one,\nis always the object itself, okay?\n\n292\n00:16:15.650 --> 00:16:18.760\nSo the thing that you're\ncreating from the class is being\n\n293\n00:16:18.760 --> 00:16:20.650\npassed back into this function.\n\n294\n00:16:20.650 --> 00:16:24.080\nBut I can give it other arguments and\nthese are initialization, right?\n\n295\n00:16:24.080 --> 00:16:26.600\nInit, these are initialization arguments.\n\n296\n00:16:26.600 --> 00:16:32.150\nAnd if I want to give it a balance well\nI can say balance=0 inside the function.\n\n297\n00:16:32.150 --> 00:16:34.540\nThat's a default value.\n\n298\n00:16:36.170 --> 00:16:39.920\nAnd now I can say balance\nself.balance=balance.\n\n299\n00:16:39.920 --> 00:16:42.480\nAnd that's kinda weird,\nthat seems repetitive, right?\n\n300\n00:16:42.480 --> 00:16:45.330\nBut what it's saying is,\nwhatever's passed into balance\n\n301\n00:16:45.330 --> 00:16:51.090\nwill be set as the balance\nproperty on the object, okay?\n\n302\n00:16:51.090 --> 00:16:54.120\nIf I call it, just like I have been,\nit will still be zero,\n\n303\n00:16:54.120 --> 00:16:56.960\nbecause I've added a default argument.\n\n304\n00:16:56.960 --> 00:17:01.410\nBut it now gives me the ability to,\nwell I don't want it to be zero.\n\n305\n00:17:01.410 --> 00:17:03.400\nI have $5,000 in my pocket right now.\n\n306\n00:17:03.400 --> 00:17:06.540\nI'm going to the bank to open an account.\n\n307\n00:17:06.540 --> 00:17:07.830\nI want to deposit that.\n\n308\n00:17:07.830 --> 00:17:11.850\nThat's going to happen when\nthe account is opened and ready to go.\n\n309\n00:17:11.850 --> 00:17:14.210\nSo let's see how that differs, but\n\n310\n00:17:14.210 --> 00:17:17.188\nhave we broken that functionality\nthat we originally had?\n\n311\n00:17:17.188 --> 00:17:19.532\nSo I hop back over into the ripple.\n\n312\n00:17:19.532 --> 00:17:23.000\nI gotta kill the ripple, and restart, and\n\n313\n00:17:23.000 --> 00:17:25.490\neventually it won't be\nin the ripple as much.\n\n314\n00:17:25.490 --> 00:17:31.246\nWe'll actually be running python files so\nit will be quick iteration.\n\n315\n00:17:31.246 --> 00:17:38.581\nSo from account, import,\nI have to make sure that is a capital A.\n\n316\n00:17:38.581 --> 00:17:43.000\nSo if I say a = Account ()\nexactly like we had before,\n\n317\n00:17:43.000 --> 00:17:45.700\nmake that a little bigger there.\n\n318\n00:17:47.600 --> 00:17:48.390\nIt looks fine.\n\n319\n00:17:48.390 --> 00:17:53.000\nIf I say Account.balance,\nwell there we go, it still works.\n\n320\n00:17:53.000 --> 00:17:58.073\nBut what if I want to open\nthat $5,000 savings account?\n\n321\n00:17:58.073 --> 00:18:03.473\nI can say balance equals $5,000.\n\n322\n00:18:03.473 --> 00:18:04.477\nHey, I didn't get an error.\n\n323\n00:18:04.477 --> 00:18:10.462\nThat means I'm doing something right,\nand then b.balance.\n\n324\n00:18:10.462 --> 00:18:15.565\n[SOUND] Well now I can initialize\nthese properties upon construction and\n\n325\n00:18:15.565 --> 00:18:19.985\nit's mainly have a little easier\ntime in having to set those,\n\n326\n00:18:19.985 --> 00:18:22.976\ncreate the account, that and modify it.\n\n327\n00:18:22.976 --> 00:18:24.000\nWe're all good to go.\n\n328\n00:18:25.190 --> 00:18:30.790\nSo I now have kind of the simplest\nclass that I can have, Yvonne.\n\n329\n00:18:30.790 --> 00:18:34.475\nAnd we only have other things to do but\ngo up.\n\n330\n00:18:34.475 --> 00:18:35.650\n&gt;&gt; [LAUGH] That sounds like fun.\n\n331\n00:18:35.650 --> 00:18:37.870\nSo we have an object, right?\n\n332\n00:18:37.870 --> 00:18:39.280\nThat's what we've made.\n\n333\n00:18:39.280 --> 00:18:43.196\nBut aren't objects\nsupposed to do something?\n\n334\n00:18:43.196 --> 00:18:45.960\nLike a car, a car is an object, right?\n\n335\n00:18:45.960 --> 00:18:47.861\nSo, a car moves forward.\n\n336\n00:18:47.861 --> 00:18:50.490\nIs that something that we\ncan do with our objects?\n\n337\n00:18:50.490 --> 00:18:52.098\n&gt;&gt; Well,\nYvonne you brought up a great point.\n\n338\n00:18:52.098 --> 00:18:55.700\nRight now this account it does nothing,\nI can open it and then it does nothing.\n\n339\n00:18:57.320 --> 00:18:58.686\nOkay, well that's a problem.\n\n340\n00:18:58.686 --> 00:19:00.699\nIn addition to, it's really hard to read.\n\n341\n00:19:00.699 --> 00:19:03.254\nIf I just print it out it's a problem,\nright?\n\n342\n00:19:03.254 --> 00:19:07.610\nIt says account object at zero x blah,\nblah, blah, blah, blah.\n\n343\n00:19:07.610 --> 00:19:12.910\nWe can add additional methods\non this class in order to\n\n344\n00:19:12.910 --> 00:19:15.650\nadd that functionality,\nto add some niceties.\n\n345\n00:19:15.650 --> 00:19:17.520\nBut let's see how that goes.\n\n346\n00:19:17.520 --> 00:19:21.460\nSo let's start with one,\njust to make it a little more readable.\n\n347\n00:19:21.460 --> 00:19:23.430\nOkay, this is another special method.\n\n348\n00:19:23.430 --> 00:19:29.130\nAnd, let's say def and repr, reaper.\n\n349\n00:19:29.130 --> 00:19:31.980\nThis is the formal representation, and\n\n350\n00:19:31.980 --> 00:19:36.230\nyou'll see what that means,\nof the object itself.\n\n351\n00:19:36.230 --> 00:19:40.680\nIt is part of a class, so\nI'm going to put self there.\n\n352\n00:19:40.680 --> 00:19:41.180\nOkay.\n\n353\n00:19:42.780 --> 00:19:43.809\nAnd what do I want to do.\n\n354\n00:19:43.809 --> 00:19:48.311\nI need to return what I want to\nbe printed out in the reaper.\n\n355\n00:19:48.311 --> 00:19:51.993\nOkay, so that account at zero,\nzero, blah, blah, blah,\n\n356\n00:19:51.993 --> 00:19:56.350\nwell that was the reaper that was\nprovided by Python by default.\n\n357\n00:19:56.350 --> 00:19:57.070\nWell what do I want?\n\n358\n00:19:57.070 --> 00:20:04.240\nI just want to say account and\nthen the balance.\n\n359\n00:20:04.240 --> 00:20:09.878\nThere we go, dot format and\nthen balance, self.balance.\n\n360\n00:20:09.878 --> 00:20:15.960\nSo notice I'm using self in here that will\ngrab this current instance's balance.\n\n361\n00:20:17.460 --> 00:20:22.831\nThe instance being the object itself and\nfeed that in to the string templating.\n\n362\n00:20:22.831 --> 00:20:26.740\nSo here's the dunder reaper method\nwhich is a formal representation.\n\n363\n00:20:26.740 --> 00:20:29.570\nLet's see how this has changed\nour behavior a little bit.\n\n364\n00:20:29.570 --> 00:20:33.931\nSo here we go, we hop back over to\nthe ripple, we kill the ripple.\n\n365\n00:20:33.931 --> 00:20:41.183\nClear and then python3, and\nthen from account import account.\n\n366\n00:20:41.183 --> 00:20:43.870\nAnd then a = account.\n\n367\n00:20:43.870 --> 00:20:49.410\nAnd lets just balance equals $4,000 and\nthen a.\n\n368\n00:20:49.410 --> 00:20:54.809\nNow instead of getting that weird account\ndot account at zero x nine, seven,\n\n369\n00:20:54.809 --> 00:21:00.390\neight, four, b, zero, it runs the reaper\nmethod which is special to Python.\n\n370\n00:21:00.390 --> 00:21:03.980\nIt is a special method\nthat we'll print out.\n\n371\n00:21:03.980 --> 00:21:04.850\nWhat is it?\n\n372\n00:21:04.850 --> 00:21:05.940\nAnd what is the balance?\n\n373\n00:21:05.940 --> 00:21:09.040\nNow, can you make this anything you want?\n\n374\n00:21:09.040 --> 00:21:09.740\nSure.\n\n375\n00:21:09.740 --> 00:21:12.489\nYour reaper method can be\na giant print out, but\n\n376\n00:21:12.489 --> 00:21:15.590\nit should be meaningful\nto you in the context.\n\n377\n00:21:15.590 --> 00:21:17.947\nWe only care about the things\nthat are important to us.\n\n378\n00:21:17.947 --> 00:21:22.140\nAgain, that's coming back to that\nabstraction that we care about.\n\n379\n00:21:22.140 --> 00:21:23.310\nSo keep that in mind.\n\n380\n00:21:24.790 --> 00:21:26.460\nSo we have that method, but\n\n381\n00:21:26.460 --> 00:21:30.030\nyou know this account it's not\nreally gonna be helpful to us.\n\n382\n00:21:30.030 --> 00:21:33.430\nWe have a balance, but we have no\nway of modifying the class itself.\n\n383\n00:21:34.540 --> 00:21:36.770\nOkay, well how do we do that?\n\n384\n00:21:36.770 --> 00:21:38.670\nWell I'm gonna change this a little bit.\n\n385\n00:21:38.670 --> 00:21:43.280\nI'm gonna get rid of\nthe balance because the balance\n\n386\n00:21:43.280 --> 00:21:46.870\nis actually going to be based on\na series of transactions, right?\n\n387\n00:21:46.870 --> 00:21:51.430\nI'm gonna deposit and withdrawal and\nthen I can calculate those at the end.\n\n388\n00:21:51.430 --> 00:21:59.250\nSo I'm gonna change this to\ntransactions and an empty list.\n\n389\n00:21:59.250 --> 00:22:02.040\nSo I'm just gonna keep a running\ntotal of how many withdrawals and\n\n390\n00:22:02.040 --> 00:22:06.710\nhow many deposits that I have made.\n\n391\n00:22:06.710 --> 00:22:12.410\nAnd now we need the ability to deposit and\nwithdraw from this said account.\n\n392\n00:22:12.410 --> 00:22:13.860\nSo how do I do that?\n\n393\n00:22:13.860 --> 00:22:15.122\nWell, I have a deposit method.\n\n394\n00:22:17.037 --> 00:22:20.770\nAnd that takes self, because it's\na method on the actual object.\n\n395\n00:22:20.770 --> 00:22:23.230\nI get a copy of this method each time.\n\n396\n00:22:23.230 --> 00:22:28.560\nAnd then I want, well, the amount\nthat I'm going to deposit, okay?\n\n397\n00:22:28.560 --> 00:22:31.211\nNow when I do this,\nI'm gonna create a transaction.\n\n398\n00:22:33.864 --> 00:22:39.940\nAnd all this is gonna say it is of deposit\ntype and it's going to hold the amount.\n\n399\n00:22:39.940 --> 00:22:43.670\nThis is a tuple and\nI'm using this to record the type and\n\n400\n00:22:43.670 --> 00:22:47.080\nthe amount and kinda bundling those\ntogether so I can keep those paired up.\n\n401\n00:22:47.080 --> 00:22:55.920\nSo I'm gonna say\nself.transactions.append(transaction),\n\n402\n00:22:55.920 --> 00:22:56.853\nokay?\n\n403\n00:22:56.853 --> 00:23:01.004\nSo now if I deposit, it's gonna say\nthere's a deposit and here is the amount.\n\n404\n00:23:01.004 --> 00:23:04.945\nIf you go look at your bank statement\nthis is kind of how your bank statement\n\n405\n00:23:04.945 --> 00:23:05.785\nruns, right?\n\n406\n00:23:05.785 --> 00:23:09.605\nThere is a deposit for this amount,\nhere is the withdrawal for this amount,\n\n407\n00:23:09.605 --> 00:23:11.050\nso okay we are getting this.\n\n408\n00:23:11.050 --> 00:23:15.587\nBut along with deposits we\nneed to be able to withdraw.\n\n409\n00:23:15.587 --> 00:23:19.032\nI hope I spelled that right,\nis that right Yvonne, withdrawl?\n\n410\n00:23:19.032 --> 00:23:20.140\n&gt;&gt; Looks right to me.\n\n411\n00:23:20.140 --> 00:23:22.662\n&gt;&gt; All right, well, we're doing well.\n\n412\n00:23:22.662 --> 00:23:24.763\nI'm happy.\n\n413\n00:23:24.763 --> 00:23:28.310\nSo, very similarly,\nI have a transaction and\n\n414\n00:23:28.310 --> 00:23:32.200\nthis is going to be\na withdrawal of the amount and\n\n415\n00:23:32.200 --> 00:23:36.990\nthis is going to be self, I'm going to\nadd this to the list of transactions.\n\n416\n00:23:39.430 --> 00:23:44.080\nAnd notice, because I have the instance,\nright, the self argument,\n\n417\n00:23:44.080 --> 00:23:47.890\nI can access the transactions log for\n\n418\n00:23:47.890 --> 00:23:52.720\neach particular account and then,\nmodify it within this method.\n\n419\n00:23:52.720 --> 00:23:55.716\nSo, okay that's good to know.\n\n420\n00:23:55.716 --> 00:23:59.069\nAnd then I'm actually,\nI think we're gonna stop there.\n\n421\n00:23:59.069 --> 00:24:00.604\nWe'll see how this plays out for\nthis balance.\n\n422\n00:24:00.604 --> 00:24:02.338\nSo let's save.\n\n423\n00:24:02.338 --> 00:24:03.335\nLet's hop over.\n\n424\n00:24:03.335 --> 00:24:10.445\nKill our repr here, and actually I need\nto go fix something, because I was gonna,\n\n425\n00:24:10.445 --> 00:24:16.510\nas a self.balance,\nif my repr method would actually mess up.\n\n426\n00:24:16.510 --> 00:24:18.850\nThat's no good.\n\n427\n00:24:18.850 --> 00:24:19.889\nSo what am I gonna do?\n\n428\n00:24:19.889 --> 00:24:26.900\nI'm just gonna say account,\nand to say transactions.\n\n429\n00:24:26.900 --> 00:24:29.450\nI'm just gonna look at how\nmany transactions I have.\n\n430\n00:24:31.610 --> 00:24:40.030\nAnd this is not a robust definition,\nwe will change this at some point.\n\n431\n00:24:40.030 --> 00:24:47.624\nSo, my repr method's good to go and\nI'm gonna clear python3.\n\n432\n00:24:47.624 --> 00:24:53.061\nAnd then from account, import Account.\n\n433\n00:24:53.061 --> 00:24:56.657\nSo a = Account, okay.\n\n434\n00:24:56.657 --> 00:24:59.637\nSo a, there's 0 transactions there.\n\n435\n00:24:59.637 --> 00:25:04.616\nIf I look at transactions as a property,\ntransactions,\n\n436\n00:25:04.616 --> 00:25:11.170\nit's still an empty array, but\nwhat if I say a.deposit(10), okay.\n\n437\n00:25:11.170 --> 00:25:13.760\nIf I do a.transactions,\n\n438\n00:25:13.760 --> 00:25:17.510\nnotice I now have changed what is\ncalled the state of the object.\n\n439\n00:25:18.670 --> 00:25:21.945\nIf I was using this in a project\nthis was provided to me.\n\n440\n00:25:21.945 --> 00:25:24.950\nI wouldn't care about the implementation\nabout how this works.\n\n441\n00:25:24.950 --> 00:25:27.680\nI just need to know\noutwardly how it works.\n\n442\n00:25:27.680 --> 00:25:30.181\nThat is part of that encapsulation term.\n\n443\n00:25:30.181 --> 00:25:34.663\nI'm encapsulating that behavior,\nabstracting it away from the user, but\n\n444\n00:25:34.663 --> 00:25:36.270\nit still works.\n\n445\n00:25:36.270 --> 00:25:42.550\nIf I withdrawal,\nthen I can get the exact same.\n\n446\n00:25:42.550 --> 00:25:47.510\nNow, one you'll notice I withdrew 30\nbucks and now I have 10 in there.\n\n447\n00:25:47.510 --> 00:25:50.150\nSo could there be\na little bit of an issue.\n\n448\n00:25:50.150 --> 00:25:54.510\nBut this is a fake account and not real\nbank account so we should be fine.\n\n449\n00:25:54.510 --> 00:25:58.105\nSo if I look at transactions now, So\n\n450\n00:25:58.105 --> 00:26:02.000\nI have a deposit transaction and\na withdraw transaction.\n\n451\n00:26:02.000 --> 00:26:03.880\nI'm not getting full encapsulation,\n\n452\n00:26:03.880 --> 00:26:06.610\nbecause I can actually go look at those,\nright?\n\n453\n00:26:06.610 --> 00:26:10.560\nBut I shouldn't be looking at them,\nbut I can't, right?\n\n454\n00:26:10.560 --> 00:26:12.716\nSo be careful of that,\nbe aware of that in Python.\n\n455\n00:26:12.716 --> 00:26:17.136\nI don't give this true privatization of\nall the information in the internal state.\n\n456\n00:26:17.136 --> 00:26:21.542\nSo here's transactions,\nwell how can I find the balance now.\n\n457\n00:26:21.542 --> 00:26:26.415\nWell, I have all my objects created and\n\n458\n00:26:26.415 --> 00:26:31.000\nI need to go back and create my class.\n\n459\n00:26:31.000 --> 00:26:36.270\nWell as long as I don't mess with\nthe withdrawal and the deposit.\n\n460\n00:26:36.270 --> 00:26:40.700\nAs well as the repr, I'm not changing\nthose, then I can add a method and\n\n461\n00:26:40.700 --> 00:26:41.900\nI should still be fine.\n\n462\n00:26:43.600 --> 00:26:47.460\nSo I'm gonna kill this because I know\nwe're gonna make a change here and\n\n463\n00:26:47.460 --> 00:26:48.280\nlet's look at the balance.\n\n464\n00:26:50.380 --> 00:26:54.660\nSo def balance and\noriginally balance was like property, but\n\n465\n00:26:54.660 --> 00:26:59.860\nI know that the balance was gonna be\ndynamic based on withdrawals and deposits.\n\n466\n00:26:59.860 --> 00:27:04.360\nAnd really I should have an opening\nbalance, so to start there.\n\n467\n00:27:04.360 --> 00:27:10.707\nSo for self and then when I ask for\nthe balance, I'm gonna say for\n\n468\n00:27:10.707 --> 00:27:17.220\nthe kind, amount in self.transactions.\n\n469\n00:27:17.220 --> 00:27:21.955\nAnd that's gonna allow me to grab this\nkind, we'll talk about either deposit or\n\n470\n00:27:21.955 --> 00:27:26.335\nwithdrawal, and then the amount will\nbe the second portion of the tube role.\n\n471\n00:27:26.335 --> 00:27:34.460\nSo if kind == 'deposit'\nthen what do I wanna do?\n\n472\n00:27:34.460 --> 00:27:39.340\nWell, right now I'm\njust gonna say Deposit.\n\n473\n00:27:39.340 --> 00:27:44.240\nLet me get some overscroll going here,\nthere we go.\n\n474\n00:27:47.560 --> 00:27:52.272\nOtherwise, if the kind == 'withdraw',\n\n475\n00:27:52.272 --> 00:27:56.739\nthen I'm just gonna say withdraw, okay.\n\n476\n00:27:56.739 --> 00:28:03.850\nNow, I'm doing this just because I\nwanna see how this method works.\n\n477\n00:28:03.850 --> 00:28:07.720\nConvention is also to have one\nspace between methods and classes.\n\n478\n00:28:07.720 --> 00:28:09.600\nSo make sure you have\nappropriate spacing here.\n\n479\n00:28:10.700 --> 00:28:12.570\nAll right, so\nlet's look at this real quick.\n\n480\n00:28:14.420 --> 00:28:20.484\nSo, from account import Account,\n\n481\n00:28:20.484 --> 00:28:27.764\na = Account(), a.deposit(10),\n\n482\n00:28:27.764 --> 00:28:35.053\na.withdraw(5) and then a.balance.\n\n483\n00:28:37.050 --> 00:28:39.530\nAnd it does list out the deposit and\nwithdrawal.\n\n484\n00:28:39.530 --> 00:28:42.660\nOkay, well that's good, but\nit doesn't actually give me the balance.\n\n485\n00:28:42.660 --> 00:28:43.660\nI need to make a change.\n\n486\n00:28:43.660 --> 00:28:45.560\nBut I did a quick little\nbit of testing there.\n\n487\n00:28:47.220 --> 00:28:49.400\nSo let's actually make this do something.\n\n488\n00:28:49.400 --> 00:28:51.520\nSo the total is 0.\n\n489\n00:28:51.520 --> 00:28:56.930\nRight I am starting with a zero amount,\nand if it's a deposit type.\n\n490\n00:28:56.930 --> 00:28:59.146\nAnd what do I wanna do?\n\n491\n00:28:59.146 --> 00:29:01.134\nI wanna say total +=,\n\n492\n00:29:01.134 --> 00:29:06.310\nwhich is going to increase total\nby the amount of the deposit.\n\n493\n00:29:07.440 --> 00:29:12.904\nAnd if it's a withdrawal type, I wanna do\n-=, which will decrease by the amount.\n\n494\n00:29:12.904 --> 00:29:15.530\nAnd then finally, what do I wanna do?\n\n495\n00:29:15.530 --> 00:29:19.110\nI wanna return total here.\n\n496\n00:29:19.110 --> 00:29:20.850\nSo okay, let's see if this works.\n\n497\n00:29:20.850 --> 00:29:24.000\nAnd I think this'll give us\na good first look at classes, and\n\n498\n00:29:24.000 --> 00:29:26.140\nbeing able to create these\nreproducible objects.\n\n499\n00:29:27.820 --> 00:29:29.040\nSo I'm gonna kill the REPL.\n\n500\n00:29:30.778 --> 00:29:36.911\nSo from account import Account,\nand a = Account\n\n501\n00:29:41.936 --> 00:29:48.450\na.deposit(10) a.withdraw(5).\n\n502\n00:29:48.450 --> 00:29:51.200\nAnd then,\nwhat is the balance of that account?\n\n503\n00:29:51.200 --> 00:29:54.980\nWell, it is $5 and\nthat dynamically calculates that.\n\n504\n00:29:56.280 --> 00:29:59.560\nBut the wonderful thing about classes is\nif I make another class without making\n\n505\n00:29:59.560 --> 00:30:08.440\nan error, and I say b.deposit(500),\nwhat is the balance?\n\n506\n00:30:10.720 --> 00:30:11.300\nWell, it is 500.\n\n507\n00:30:11.300 --> 00:30:12.150\nThey are separate now.\n\n508\n00:30:12.150 --> 00:30:15.070\nI have separate instances.\n\n509\n00:30:15.070 --> 00:30:18.511\nAnd that's good because you don't\nwant your bank account going,\n\n510\n00:30:18.511 --> 00:30:22.026\nwell we're gonna keep one account and\nwhenever you deposit money.\n\n511\n00:30:22.026 --> 00:30:25.464\nEverybody's gonna put it in a pool\ntogether and when people withdraw,\n\n512\n00:30:25.464 --> 00:30:27.710\nit's gonna come out of the same pool,\nright?\n\n513\n00:30:27.710 --> 00:30:31.880\nI wanna keep those separate so\nI need this reproducibility to help me.\n\n514\n00:30:31.880 --> 00:30:38.400\nSo a few things to consider we had\nthis nice introduction to the classes.\n\n515\n00:30:38.400 --> 00:30:42.810\nMake sure that you're using Python 3.5 or\nhigher.\n\n516\n00:30:42.810 --> 00:30:46.670\nBecause this class syntax changes a little\nbit, some of the behaviors will be\n\n517\n00:30:46.670 --> 00:30:53.610\ndifferent and then also just\ntry some of these out, right?\n\n518\n00:30:53.610 --> 00:30:54.660\nJust try to make things up.\n\n519\n00:30:54.660 --> 00:30:55.580\nMake a class for dog.\n\n520\n00:30:55.580 --> 00:30:58.910\nMake a class for cat and\nthe design is totally up to you.\n\n521\n00:30:58.910 --> 00:31:02.520\nBut keep in mind,\nare we abstracting away behavior?\n\n522\n00:31:02.520 --> 00:31:07.870\nWhat properties are being encapsulated\ntrying to hide from our user and\n\n523\n00:31:07.870 --> 00:31:09.478\njust play around with it.\n\n524\n00:31:09.478 --> 00:31:12.620\n&gt;&gt; Fantastic Jess and we've been defining\nour classes and creating our objects.\n\n525\n00:31:12.620 --> 00:31:16.060\nAnd it sounds like this is gonna be\na reoccurring theme throughout our coding\n\n526\n00:31:16.060 --> 00:31:16.604\nin Python.\n\n527\n00:31:16.604 --> 00:31:18.470\nSo thank you for that.\n\n528\n00:31:18.470 --> 00:31:20.500\nI know I learned a lot and\nI hope you all did too.\n\n529\n00:31:20.500 --> 00:31:23.344\nBut for now signing off for\nITProTV, I'm Von Smith\n\n530\n00:31:23.344 --> 00:31:24.727\n&gt;&gt; And I'm Justin Dennison.\n\n531\n00:31:24.727 --> 00:31:25.842\n&gt;&gt; See you next time.\n\n532\n00:31:25.842 --> 00:31:32.622\n[MUSIC]\n\n533\n00:31:32.622 --> 00:31:36.829\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "208838008"
        },
        {
          "description": "In this episode, Vonne and Justin discuss extending classes and demonstrate both single and multiple inheritance.",
          "length": "1429",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-4-1-1-extending_classes-030917-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-4-1-1-extending_classes-030917-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-4-1-1-extending_classes-030917-1-sm.jpg",
          "title": "Extending Classes",
          "transcript": "WEBVTT\n\n1\n00:00:00.090 --> 00:00:04.258\nWelcome to ITProTV,\nI'm your host, Don Pezet.\n\n2\n00:00:04.258 --> 00:00:05.072\n[CROSSTALK]\n\n3\n00:00:05.072 --> 00:00:08.181\n[MUSIC]\n\n4\n00:00:08.181 --> 00:00:12.280\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:12.280 --> 00:00:15.975\n&gt;&gt; Hello everyone and welcome to\nanother exciting episode of ITProTV.\n\n6\n00:00:15.975 --> 00:00:17.025\nI'm your host,\n\n7\n00:00:17.025 --> 00:00:22.315\nVonne Smith, and we're continuing on\nwith our Object-Oriented Python Series.\n\n8\n00:00:22.315 --> 00:00:25.965\nAnd in this episode, we're going to\nbe talking about extending classes.\n\n9\n00:00:25.965 --> 00:00:29.150\nAnd here to help us with that is Mr.\nJustin Dennison, hello Justin.\n\n10\n00:00:29.150 --> 00:00:30.500\n&gt;&gt; Hello Vonne, how are you today?\n\n11\n00:00:30.500 --> 00:00:34.840\n&gt;&gt; I'm great, I'm excited to hear\nabout this extending of our classes.\n\n12\n00:00:34.840 --> 00:00:39.170\nSo, what is the actual purpose of\nextending classes, why would we do this?\n\n13\n00:00:39.170 --> 00:00:41.116\n&gt;&gt; So Vonne, that's a great question.\n\n14\n00:00:41.116 --> 00:00:44.099\nSo in a previous episode, if you haven't\nlooked at some of those object-oriented\n\n15\n00:00:44.099 --> 00:00:46.499\nprogramming principles,\ndefinitely go back and check that out.\n\n16\n00:00:46.499 --> 00:00:50.250\nBut extending classes helps\nus with a few of those but\n\n17\n00:00:50.250 --> 00:00:54.740\nalso helps us keep more\nmaintainable code bases.\n\n18\n00:00:54.740 --> 00:00:58.110\nSo when we extend classes it\nis a form of inheritance.\n\n19\n00:00:58.110 --> 00:01:02.470\nI can create a relationship between\nclasses that allow me to share code.\n\n20\n00:01:02.470 --> 00:01:04.560\nNow why would I want to share code?\n\n21\n00:01:04.560 --> 00:01:08.600\nWell, I have found myself,\nin my early days as a programmer,\n\n22\n00:01:08.600 --> 00:01:11.340\nparticularly I was more\nscientific programming.\n\n23\n00:01:11.340 --> 00:01:14.930\nI would just rewrite the same function and\nsame methods,\n\n24\n00:01:14.930 --> 00:01:19.110\nover and over and over again, did a lot\nof copy and pasting, shame on me.\n\n25\n00:01:19.110 --> 00:01:24.040\nDefinitely don't do that, if I'd have been\nable to use this inheritance scheme and\n\n26\n00:01:24.040 --> 00:01:26.860\nthought about it just a little\nbit to abstract out, well,\n\n27\n00:01:26.860 --> 00:01:29.030\nI could've shared that code.\n\n28\n00:01:29.030 --> 00:01:32.950\nI could have made a parent class and\nthen had all of these children classes.\n\n29\n00:01:32.950 --> 00:01:35.790\nNotice the parent child relationship\ntalking about inheritance.\n\n30\n00:01:35.790 --> 00:01:39.700\nThen I can share all of the parent's\ncode within those children, but\n\n31\n00:01:39.700 --> 00:01:44.670\nI can also modify whatever code's\nthere kind of in run time.\n\n32\n00:01:44.670 --> 00:01:47.849\nAnd that's to adhere to a principle\ncalled do not repeat yourself or\n\n33\n00:01:47.849 --> 00:01:49.460\ndon't repeat yourself.\n\n34\n00:01:49.460 --> 00:01:54.980\nThe dry principle, I wanna write as little\ncode as possible that achieves my goals.\n\n35\n00:01:54.980 --> 00:01:58.750\nBut sometimes we don't always get there,\neven if you see that you can\n\n36\n00:01:58.750 --> 00:02:01.410\ncreate this structure later,\ndefinitely take time to do that.\n\n37\n00:02:01.410 --> 00:02:06.890\nAnd that's kinda how we'll explore today,\nso in addition too,\n\n38\n00:02:06.890 --> 00:02:11.070\nby using parent classes, I can\nestablish the interface relationship.\n\n39\n00:02:11.070 --> 00:02:13.120\nNow, what do I mean by\nthe interface relationship?\n\n40\n00:02:13.120 --> 00:02:17.110\nWell if I walk up to a door knob or\ndoor handle, I have an idea of\n\n41\n00:02:17.110 --> 00:02:20.700\nhow I'm supposed to interact with\nthat door knob or door handle, right.\n\n42\n00:02:20.700 --> 00:02:22.670\nI grab it, I either turn it or\n\n43\n00:02:22.670 --> 00:02:26.350\nmaybe I push it, and those interfaces\nare kind of ingrained in us.\n\n44\n00:02:26.350 --> 00:02:30.360\nWe don't even think about them anymore,\nthe worst thing that can happen is,\n\n45\n00:02:30.360 --> 00:02:32.760\nhave you ever been to a store\nVonne where you walk up and\n\n46\n00:02:32.760 --> 00:02:36.990\nit looks like a pull handle but\nit's actually a push door?\n\n47\n00:02:36.990 --> 00:02:40.280\nAnd you look like a crazy\nperson just yanking on it, and\n\n48\n00:02:40.280 --> 00:02:42.320\nyou're like I gotta push it.\n\n49\n00:02:42.320 --> 00:02:46.180\nThat's because they have not\nadhered to that interface that,\n\n50\n00:02:47.250 --> 00:02:49.740\nwell this is a pull handle,\nI'm supposed to pull.\n\n51\n00:02:49.740 --> 00:02:51.360\nBut it was actually a push door.\n\n52\n00:02:51.360 --> 00:02:55.850\nSo that's important to know,\nwe wanna inherit to reuse code,\n\n53\n00:02:55.850 --> 00:03:00.230\nbut also establish the interactions\nwith our individual components.\n\n54\n00:03:00.230 --> 00:03:01.770\n&gt;&gt; Great, so we wanna stay dry.\n\n55\n00:03:01.770 --> 00:03:03.840\n&gt;&gt; Yeah, we wanna stay dry.\n\n56\n00:03:03.840 --> 00:03:05.100\n&gt;&gt; So, how do we stay dry?\n\n57\n00:03:05.100 --> 00:03:07.190\nHow do we actually extend our classes?\n\n58\n00:03:07.190 --> 00:03:08.572\n&gt;&gt; So, that's a great question,\n\n59\n00:03:08.572 --> 00:03:11.141\nI think the best thing to do is\nactually look at two classes.\n\n60\n00:03:11.141 --> 00:03:13.479\nWe're gonna develop a couple of classes,\njust as a reminder,\n\n61\n00:03:13.479 --> 00:03:14.679\nhow do we create these classes.\n\n62\n00:03:14.679 --> 00:03:19.186\nThey'll be very simple, but then what is\nthe thought process that allows me to go\n\n63\n00:03:19.186 --> 00:03:22.890\nwell this might actually be\na good parent child relationship.\n\n64\n00:03:22.890 --> 00:03:26.590\nSo let's go ahead and dig into some code,\nand see how that works out.\n\n65\n00:03:26.590 --> 00:03:30.820\nNow, we're gonna hop down, I'm already\nin my command line interface, so\n\n66\n00:03:30.820 --> 00:03:32.250\ndefinitely get there.\n\n67\n00:03:32.250 --> 00:03:35.720\nAnd I'm gonna move over to the desktop,\njust to make things easy,\n\n68\n00:03:35.720 --> 00:03:37.940\nI hit ls, that lists.\n\n69\n00:03:37.940 --> 00:03:44.070\nSo I'm gonna create a directory,\nlet's just call it extending.\n\n70\n00:03:44.070 --> 00:03:48.010\nOkay, I'm gonna hop inside that directory,\nand we're good to go,\n\n71\n00:03:48.010 --> 00:03:52.700\nI'm gonna say, touch books.py.\n\n72\n00:03:52.700 --> 00:03:55.860\nAnd we're gonna use something\nfairly common, this is maybe\n\n73\n00:03:55.860 --> 00:03:59.920\nnot necessarily you will, something\nyou will use in an actual project.\n\n74\n00:03:59.920 --> 00:04:03.048\nMaybe if you're building a bookstore\ninventory system you might do this.\n\n75\n00:04:03.048 --> 00:04:07.902\nBut this is to help us use something\nconcrete to see the power in this.\n\n76\n00:04:07.902 --> 00:04:11.005\nSo I have books and\nI'm gonna open up this in atom and\n\n77\n00:04:11.005 --> 00:04:14.125\nI'm using the shortcut this time,\nif I type atom.\n\n78\n00:04:14.125 --> 00:04:19.038\nIf you're on Mac,\nyou'll have to install this under the atom\n\n79\n00:04:19.038 --> 00:04:24.140\ndrop down, on a Windows you get,\nit's kind of your mileage may vary.\n\n80\n00:04:24.140 --> 00:04:26.240\nMight work for you, it might not,\n\n81\n00:04:26.240 --> 00:04:30.020\notherwise, just go find this file,\nopen it up if you're following along.\n\n82\n00:04:30.020 --> 00:04:33.850\nSo, I'm gonna open this up and\nit opens up an ATOM for me.\n\n83\n00:04:33.850 --> 00:04:36.450\nBeautiful, I'm not going\nto have this autocomplete,\n\n84\n00:04:36.450 --> 00:04:39.840\nI don't wanna bring in too much right now,\nso\n\n85\n00:04:40.850 --> 00:04:46.170\nthat is, whoa, there we go, I was\nholding Ctrl when I shouldn't have been.\n\n86\n00:04:46.170 --> 00:04:48.620\nBe careful there, so what do I wanna do?\n\n87\n00:04:48.620 --> 00:04:50.946\nWell, I'm gonna create\na class called Book.\n\n88\n00:04:50.946 --> 00:04:56.160\nAnd I'm gonna create\nan initialization method, and\n\n89\n00:04:56.160 --> 00:05:03.410\nit's going to take a name, better yet\nlet's call it a title, and an author.\n\n90\n00:05:03.410 --> 00:05:08.540\nOkay, so I have a title and\nan author, all right, good.\n\n91\n00:05:08.540 --> 00:05:15.730\nAll that's going to do is set the title\n= title, and the author = author.\n\n92\n00:05:15.730 --> 00:05:19.750\nSo let's see this actually work, I'm\ngonna type all of the rest of my code and\n\n93\n00:05:19.750 --> 00:05:22.040\njust run it in the command line interface.\n\n94\n00:05:22.040 --> 00:05:24.990\nInstead of messing around with\na reaper because you'll be able to see\n\n95\n00:05:24.990 --> 00:05:26.800\nhow those changes occur.\n\n96\n00:05:26.800 --> 00:05:31.930\nSo let's create a book, and Vonne,\nI'm gonna pick on you a little bit.\n\n97\n00:05:31.930 --> 00:05:32.950\nYou got a favorite book?\n\n98\n00:05:34.090 --> 00:05:34.700\n&gt;&gt; Right now I do.\n\n99\n00:05:34.700 --> 00:05:37.570\n&gt;&gt; What is it?\n&gt;&gt; It's All the Light We Cannot See.\n\n100\n00:05:37.570 --> 00:05:42.750\n&gt;&gt; I'm going to simplify that [LAUGH]\nbecause that's a very, All the light.\n\n101\n00:05:42.750 --> 00:05:47.830\nAll right, and the author is some person.\n\n102\n00:05:47.830 --> 00:05:49.508\n&gt;&gt; I'm glad you didn't ask\nme cuz I can't remember.\n\n103\n00:05:49.508 --> 00:05:53.171\n&gt;&gt; [LAUGH] That'll get us every time,\nand let's go ahead and\n\n104\n00:05:53.171 --> 00:05:54.860\nadd a reaper method here.\n\n105\n00:05:55.990 --> 00:05:58.710\nJust for nice print outs,\n\n106\n00:05:58.710 --> 00:06:03.540\nactually, we need to add the double\nunderscore stringing method.\n\n107\n00:06:03.540 --> 00:06:05.280\nHow is this different\nthan the reaper method?\n\n108\n00:06:05.280 --> 00:06:09.060\nWell if I call print on this,\nthen it's not gonna return the reaper,\n\n109\n00:06:09.060 --> 00:06:11.210\nit's actually gonna give me\nthe double underscore string.\n\n110\n00:06:11.210 --> 00:06:13.690\nThis is a informal representation, so\n\n111\n00:06:13.690 --> 00:06:17.920\nyou can have two different ways to print\nout objects within the same class.\n\n112\n00:06:17.920 --> 00:06:19.230\nThe formal one, and\n\n113\n00:06:19.230 --> 00:06:23.960\nthen the informal one, so double\nunderscore string is the informal one.\n\n114\n00:06:23.960 --> 00:06:28.140\nBut it's gonna be very similar to the\nreaper method from the previous episode.\n\n115\n00:06:29.500 --> 00:06:30.902\nSo what is that gonna look like?\n\n116\n00:06:30.902 --> 00:06:34.938\nBook, and then I'm going to say\n\n117\n00:06:34.938 --> 00:06:42.272\nby{}&gt;'-format(self.title, self.author).\n\n118\n00:06:42.272 --> 00:06:46.180\nAll right, so let's print out\nthis book and see how it works.\n\n119\n00:06:47.318 --> 00:06:51.079\nSo I'm gonna hop over to\nthe command line interface,\n\n120\n00:06:51.079 --> 00:06:55.353\npython3 books, so\nthe book is All the light by some person.\n\n121\n00:06:55.353 --> 00:07:01.016\nSo okay, we have this book class, but\nI also during building this inventory\n\n122\n00:07:01.016 --> 00:07:07.520\nsystem, this hypothetical inventory\nsystem, I need to have a textbook.\n\n123\n00:07:07.520 --> 00:07:13.530\nSo the old me, what I would do,\nis I would say class TextBook and\n\n124\n00:07:13.530 --> 00:07:19.115\nsay okay, well, def __init__ it\nstill has a title and an author.\n\n125\n00:07:19.115 --> 00:07:22.535\nBut those textbooks, they have an edition,\n\n126\n00:07:22.535 --> 00:07:26.950\nyou have to buy new ones every\ntime a new edition comes out.\n\n127\n00:07:26.950 --> 00:07:32.487\nSo it's an edition, so within this class,\nwhoa, I about had a typo there.\n\n128\n00:07:34.397 --> 00:07:41.028\nI have the author, Self.title = title and\n\n129\n00:07:41.028 --> 00:07:44.322\nthen self.edition = edition, and\n\n130\n00:07:44.322 --> 00:07:50.166\nyou know what I want a string\nmethod that's very similar to book,\n\n131\n00:07:50.166 --> 00:07:54.855\nso I'm actually just going\nto grab this and copy it.\n\n132\n00:07:54.855 --> 00:07:59.175\nThis should be an alert to you if\nyou're using If you're actually\n\n133\n00:07:59.175 --> 00:08:02.718\nprogramming you're doing a lot of copy and\npasting.\n\n134\n00:08:02.718 --> 00:08:03.763\n&gt;&gt; We're not staying dry, are we?\n\n135\n00:08:03.763 --> 00:08:05.710\n&gt;&gt; Yeah, we are not staying dry.\n\n136\n00:08:05.710 --> 00:08:06.940\nRon, you're catching on?\n\n137\n00:08:06.940 --> 00:08:10.572\nIt's making me happy, it's a good day.\n\n138\n00:08:10.572 --> 00:08:14.630\nSo I have this TextBook and it's {} by {}.\n\n139\n00:08:14.630 --> 00:08:20.519\nAnd I would say ({} edition).\n\n140\n00:08:20.519 --> 00:08:24.980\nAnd I hop over here, self.edition.\n\n141\n00:08:24.980 --> 00:08:28.480\nNow, I really shouldn't be typing out\nin a single line this long in Python.\n\n142\n00:08:28.480 --> 00:08:30.030\nThat's not very pythonic.\n\n143\n00:08:30.030 --> 00:08:37.590\nI can, instead, start to line these up\nby not doing a shortcut for spotlight.\n\n144\n00:08:39.010 --> 00:08:39.910\nAnd there we go.\n\n145\n00:08:39.910 --> 00:08:42.300\nSo I can actually do that as long\nas they're within parentheses,\n\n146\n00:08:42.300 --> 00:08:44.090\nas the call of the format function.\n\n147\n00:08:44.090 --> 00:08:45.140\nI don't have the overrun.\n\n148\n00:08:45.140 --> 00:08:48.650\nI can see everything on one screen,\nwe're good to go.\n\n149\n00:08:48.650 --> 00:08:53.880\nSo, if I want a textbook,\nI can now create a textbook.\n\n150\n00:08:57.820 --> 00:09:02.420\nAnd it also has a title, and the the title\nis, I don't know, let's say Physics,\n\n151\n00:09:02.420 --> 00:09:05.650\na subject near and dear to my heart.\n\n152\n00:09:05.650 --> 00:09:12.142\nAnd it's by, A Physics author,\n\n153\n00:09:12.142 --> 00:09:16.155\nand edition is five.\n\n154\n00:09:16.155 --> 00:09:20.307\nSo I print(textbook).\n\n155\n00:09:20.307 --> 00:09:23.187\nLet's go see what that does, python3.\n\n156\n00:09:23.187 --> 00:09:25.739\nNow, notice in the command line interface\nit didn't look like I typed that.\n\n157\n00:09:25.739 --> 00:09:26.827\nThat's because I didn't.\n\n158\n00:09:26.827 --> 00:09:30.740\nI just wanna rerun the previous command so\nI hit up on my keyboard.\n\n159\n00:09:30.740 --> 00:09:32.410\nAnd then I actual cycle through.\n\n160\n00:09:32.410 --> 00:09:36.730\nAnd most everything, Windows, Linux,\nOSX, has kind of this history.\n\n161\n00:09:36.730 --> 00:09:38.590\nYou may not get as many as I do,\n\n162\n00:09:38.590 --> 00:09:41.940\nbut you will have probably\nthe last hundred at least.\n\n163\n00:09:41.940 --> 00:09:43.085\nSo if I hit it, good.\n\n164\n00:09:43.085 --> 00:09:47.090\nTextBook: Physics by\nPhysics author(5 edition).\n\n165\n00:09:47.090 --> 00:09:50.240\nThe formatting's not great,\nbut, that's not the point here.\n\n166\n00:09:51.440 --> 00:09:52.100\nWhat is the point?\n\n167\n00:09:52.100 --> 00:09:57.620\nIf I look at these two classes,\ndo these look very similar to you, Van?\n\n168\n00:09:57.620 --> 00:10:01.330\n&gt;&gt; They do, it seems because\nthe textbook it is a book, right?\n\n169\n00:10:01.330 --> 00:10:05.280\nIt just has some extra\nstuff like the edition.\n\n170\n00:10:05.280 --> 00:10:10.430\nSo why redo the title and author when\na book already has a title and author?\n\n171\n00:10:10.430 --> 00:10:13.141\nI think we're getting on to\nthe extending of the class.\n\n172\n00:10:13.141 --> 00:10:18.680\n&gt;&gt; Yeah, and you actually said something\nvery important, a textbook is a book.\n\n173\n00:10:18.680 --> 00:10:25.020\nIf you can say that, and it makes sense in\nthe context a textbook is a type of book,\n\n174\n00:10:25.020 --> 00:10:31.800\nthen now you may an appropriate time for\ninheritance, for class extension, right.\n\n175\n00:10:31.800 --> 00:10:33.480\nSomething is a something.\n\n176\n00:10:33.480 --> 00:10:36.910\nA is a B and how do we refactor this code?\n\n177\n00:10:36.910 --> 00:10:39.450\nHow do we change this\ncode to utilize that?\n\n178\n00:10:39.450 --> 00:10:42.432\nBecause I have self.title = title,\nit's right there.\n\n179\n00:10:42.432 --> 00:10:45.450\nself.author = author right there.\n\n180\n00:10:45.450 --> 00:10:47.740\nAll I need to do is add the addition part.\n\n181\n00:10:47.740 --> 00:10:52.040\nAnd then really, I can rewrite the string\nto be a little more generic and\n\n182\n00:10:52.040 --> 00:10:54.790\nit can just be available everywhere, okay.\n\n183\n00:10:54.790 --> 00:10:57.340\nSo let's take a look at that,\nhow do we do that?\n\n184\n00:10:57.340 --> 00:11:00.960\nWell the book for now,\nI'm not gonna change that.\n\n185\n00:11:02.430 --> 00:11:05.110\nBut the text book, how can I change that?\n\n186\n00:11:05.110 --> 00:11:09.590\nWell in Python by adding a set\nof parentheses afterwards.\n\n187\n00:11:09.590 --> 00:11:12.040\nAnd typing another class name.\n\n188\n00:11:12.040 --> 00:11:15.623\nI get the ability to inherit\neverything from book and\n\n189\n00:11:15.623 --> 00:11:20.113\njust to show you, I'm gonna\ntemporarily just comment this out.\n\n190\n00:11:21.815 --> 00:11:26.710\nAnd okay I think this\nmight actually break.\n\n191\n00:11:26.710 --> 00:11:31.589\nLet's see here, I wanna make\nthese as simple as possible so\n\n192\n00:11:31.589 --> 00:11:33.840\nI have addition right now.\n\n193\n00:11:35.880 --> 00:11:40.260\nIf I take out this edition portion,\nI'll be fine because a textbook is a book.\n\n194\n00:11:40.260 --> 00:11:43.290\nNotice I'm using book and textbook here.\n\n195\n00:11:43.290 --> 00:11:47.350\nSo if I rerun this book,\nPhysics by Physics author.\n\n196\n00:11:47.350 --> 00:11:49.950\nBook, all the light by some person.\n\n197\n00:11:49.950 --> 00:11:53.950\nOkay, whoa, I used two different classes.\n\n198\n00:11:53.950 --> 00:11:58.190\nBut I was able to construct and\nit actually printed out, well,\n\n199\n00:11:58.190 --> 00:11:59.020\nit printed out Book.\n\n200\n00:12:00.420 --> 00:12:03.980\nThat's because TextBook\nsince it inherits from Book,\n\n201\n00:12:03.980 --> 00:12:09.690\nit is extended from the base Book class,\nit inherits these methods.\n\n202\n00:12:09.690 --> 00:12:10.810\nThey're all ready there.\n\n203\n00:12:10.810 --> 00:12:14.630\nTextBook has double underscore\nstring method, dunder stream.\n\n204\n00:12:14.630 --> 00:12:17.720\nIt uses the same dunder init method\n\n205\n00:12:17.720 --> 00:12:20.870\nbecause I was able to pass a title and\nauthor.\n\n206\n00:12:20.870 --> 00:12:23.290\nBut now what do I wanna do?\n\n207\n00:12:23.290 --> 00:12:28.380\nI actually want to change that behavior\na little bit on the fly in particular\n\n208\n00:12:29.460 --> 00:12:31.580\ninstead of doing all of this.\n\n209\n00:12:31.580 --> 00:12:34.987\nI'm gonna say def _init.\n\n210\n00:12:34.987 --> 00:12:39.120\nAnd this is assuming that I have\ninherited and I want an author.\n\n211\n00:12:40.820 --> 00:12:44.360\nI actually put title first,\nyes, there we go.\n\n212\n00:12:44.360 --> 00:12:46.500\nTitle and author and addition.\n\n213\n00:12:47.640 --> 00:12:51.300\nAnd now, I can make a call to my parent.\n\n214\n00:12:52.530 --> 00:12:55.190\nFrom textbook,\nby using this keyword, super.\n\n215\n00:12:56.715 --> 00:12:58.760\nsuper() says, go look at the parent.\n\n216\n00:13:00.360 --> 00:13:05.110\nAnd now I can directly access\nthose methods from the parent.\n\n217\n00:13:05.110 --> 00:13:06.514\nSo what am I gonna do?\n\n218\n00:13:06.514 --> 00:13:12.530\nI'm gonna say,\nsuper()._init_(title, author).\n\n219\n00:13:12.530 --> 00:13:17.480\nI'm passing those through, and\nthat's actually gonna run this right here.\n\n220\n00:13:17.480 --> 00:13:20.790\nself.title equals title.\n\n221\n00:13:20.790 --> 00:13:23.085\nSelf dot author equals author.\n\n222\n00:13:23.085 --> 00:13:25.355\nAnd what else am I gonna do?\n\n223\n00:13:25.355 --> 00:13:32.225\nWell, I'm just gonna say\nself.edition = edition.\n\n224\n00:13:32.225 --> 00:13:34.445\nSo I have reused this.\n\n225\n00:13:34.445 --> 00:13:39.695\nNotice I did not do the dander string or\ndander str method again.\n\n226\n00:13:41.110 --> 00:13:42.690\nThis is a little simpler.\n\n227\n00:13:42.690 --> 00:13:47.370\nI have utilized the fact that self.title\nequals title and self.author equals author\n\n228\n00:13:47.370 --> 00:13:51.220\nwas already available in the parent,\nwhich is right here.\n\n229\n00:13:51.220 --> 00:13:54.880\nSo let's see if this runs and\nmissing one keyword argument,\n\n230\n00:13:54.880 --> 00:13:56.660\nthat's because I added edition here.\n\n231\n00:13:56.660 --> 00:13:59.001\nTextbook is a book, but\nit's a special type of book.\n\n232\n00:14:02.201 --> 00:14:08.088\nSo there is edition = 5 and boom,\nbook Physics by Physics author,\n\n233\n00:14:08.088 --> 00:14:11.100\nbook All the light by some person.\n\n234\n00:14:12.160 --> 00:14:15.520\nOkay, well everything works.\n\n235\n00:14:15.520 --> 00:14:18.540\nWe have actually reduced the amount\nof code that we had to write to get\n\n236\n00:14:18.540 --> 00:14:21.960\na textbook which is a special\nimplementation of a book.\n\n237\n00:14:24.440 --> 00:14:27.270\nAnd I got some arrant code here,\nthere we go.\n\n238\n00:14:28.320 --> 00:14:30.430\nNow, how does that help us?\n\n239\n00:14:30.430 --> 00:14:34.510\nWell not only is this inheritance,\nthis is polymorphic behavior.\n\n240\n00:14:35.870 --> 00:14:37.480\nA textbook is a type of book, but\n\n241\n00:14:37.480 --> 00:14:42.080\nI've changed how a textbook kinda\nconstructs itself from its parent.\n\n242\n00:14:43.130 --> 00:14:48.330\nOn runtime, a textbook behaves a little\nbit differently than the book itself.\n\n243\n00:14:48.330 --> 00:14:51.700\nIt still has the Dunder String Method,\nand that's good to do.\n\n244\n00:14:51.700 --> 00:14:56.920\nNow, I can take the time to make\nthis a little more general, so\n\n245\n00:14:56.920 --> 00:15:01.830\nthat anytime something out of a book,\nit will look for the class, but\n\n246\n00:15:01.830 --> 00:15:04.080\nI think that's a little\nbeyond the scope for now.\n\n247\n00:15:04.080 --> 00:15:07.640\nBut this allows inheritance\nto reduce the amount of, or\n\n248\n00:15:07.640 --> 00:15:11.420\nexcuse me, inheritance allows for\nthe reduction in writing code over and\n\n249\n00:15:11.420 --> 00:15:15.860\nover and over again and\nthat's very, very helpful.\n\n250\n00:15:15.860 --> 00:15:17.110\n&gt;&gt; Well, this is super handy.\n\n251\n00:15:17.110 --> 00:15:21.330\nLooks like this is a way that we can be\nmuch more efficient in how we're coding\n\n252\n00:15:21.330 --> 00:15:22.280\nin Python.\n\n253\n00:15:22.280 --> 00:15:25.860\nAnd it seems we're gonna be using this\na lot of extending those classes out to\n\n254\n00:15:25.860 --> 00:15:27.740\nour different objects and everything.\n\n255\n00:15:27.740 --> 00:15:32.950\nSo, within Python, I know that you can\ndo extending classes in other languages.\n\n256\n00:15:32.950 --> 00:15:37.670\nIs there anything that we need to be\naware of within Python specifically,\n\n257\n00:15:37.670 --> 00:15:38.660\nwhen we're doing this?\n\n258\n00:15:38.660 --> 00:15:40.530\n&gt;&gt; So Yvonne, that's a great question.\n\n259\n00:15:40.530 --> 00:15:45.540\nBecause Python offers us the ability\nto do multiple inheritance,\n\n260\n00:15:45.540 --> 00:15:48.360\nwhich is different than\nsome other languages.\n\n261\n00:15:48.360 --> 00:15:49.875\nLet's take Java, for instance.\n\n262\n00:15:49.875 --> 00:15:52.103\nJava says you have one parent.\n\n263\n00:15:52.103 --> 00:15:57.294\nYou can inherit from a single base class\nor a parent class and that's all you get.\n\n264\n00:15:57.294 --> 00:16:01.127\nNow I can continue inheriting down\nthe tree, and I forewarn you,\n\n265\n00:16:01.127 --> 00:16:03.438\npeople go wild with this inheritance.\n\n266\n00:16:03.438 --> 00:16:07.060\nI think the general rule of thumb\nis two to three levels deep, right?\n\n267\n00:16:07.060 --> 00:16:10.240\nI have a parent, it has a child,\nthat child has a child.\n\n268\n00:16:10.240 --> 00:16:14.510\nAnd then it gets a little mocky,\nso be very, very careful there.\n\n269\n00:16:14.510 --> 00:16:17.630\nBut Java gives you one class\nthat you can inherit from.\n\n270\n00:16:17.630 --> 00:16:20.959\nIn Python, and\nI think C++ offers this as well,\n\n271\n00:16:20.959 --> 00:16:23.670\nyou can inherit from multiple parents.\n\n272\n00:16:23.670 --> 00:16:27.163\nAnd that makes more sense when we talk\nabout inheritance in a humanistic\n\n273\n00:16:27.163 --> 00:16:28.750\napproach, right?\n\n274\n00:16:28.750 --> 00:16:30.884\nI have two parents,\nI inherit from both of them.\n\n275\n00:16:30.884 --> 00:16:32.389\nI'm a mix of the traits and\n\n276\n00:16:32.389 --> 00:16:36.298\nwe'll talk about multiple inheritance\nin Python in that context.\n\n277\n00:16:36.298 --> 00:16:37.946\nA little bit later, but\n\n278\n00:16:37.946 --> 00:16:43.069\nwhy do we have to worry ourselves with\nthis multiple inheritance scheme?\n\n279\n00:16:43.069 --> 00:16:47.862\nAnd well it can lead to an issue\ncalled the deadly diamond of death or\n\n280\n00:16:47.862 --> 00:16:49.494\nthe diamond of death.\n\n281\n00:16:49.494 --> 00:16:52.492\nThe deadly diamond of death,\nI like that repetition there.\n\n282\n00:16:52.492 --> 00:16:57.713\nBecause it's kind of wierd and I think the\nbest way is to just see how it plays out.\n\n283\n00:16:57.713 --> 00:17:01.908\nNow we're gonna comment out some of that\ntextbook and book code that we just had.\n\n284\n00:17:01.908 --> 00:17:06.908\nJust to look at some interesting\neasy peasy classes that set\n\n285\n00:17:06.908 --> 00:17:10.210\nup this multiple inherent structure.\n\n286\n00:17:10.210 --> 00:17:13.482\nWe're actually gonna set up\nthe deadly diamond of death and\n\n287\n00:17:13.482 --> 00:17:15.800\nsee what is the problem that can cause?\n\n288\n00:17:15.800 --> 00:17:18.644\nSo let's go ahead and\nhop back in here real quick.\n\n289\n00:17:18.644 --> 00:17:21.530\nAnd what I'm gonna do,\nis I'm just gonna comment out all of this.\n\n290\n00:17:21.530 --> 00:17:23.390\nI'm gonna leave it just for\nreference for later.\n\n291\n00:17:23.390 --> 00:17:25.587\nLet's get down here.\n\n292\n00:17:25.587 --> 00:17:27.819\nAnd we're gonna set up some classes.\n\n293\n00:17:27.819 --> 00:17:32.042\nSo I'm gonna create a class A.\n\n294\n00:17:32.042 --> 00:17:35.602\nThese are not real classes,\nthis is just for a demonstration here.\n\n295\n00:17:35.602 --> 00:17:40.801\nSo the class A is going to\nhave say_my_name method and\n\n296\n00:17:40.801 --> 00:17:44.427\nnotice I'm not making a dunder init.\n\n297\n00:17:44.427 --> 00:17:47.230\nI don't have to because I'm not\nsetting any properties here.\n\n298\n00:17:47.230 --> 00:17:50.775\nAnd all that's gonna say is print('A').\n\n299\n00:17:50.775 --> 00:17:55.920\nOkay, so whoa, careful now Justin.\n\n300\n00:17:55.920 --> 00:18:01.820\nI'm gonna grab this exact same class and\nI'm gonna duplicate it three more times.\n\n301\n00:18:01.820 --> 00:18:06.399\nBut I'm gonna have class B,\nnut B is going to inherit from A.\n\n302\n00:18:06.399 --> 00:18:10.604\nBut it is going to override\nthe say_my_name method and\n\n303\n00:18:10.604 --> 00:18:12.490\nis actually gonna say B.\n\n304\n00:18:14.470 --> 00:18:16.360\nAnd I'm gonna create\na third class called C.\n\n305\n00:18:16.360 --> 00:18:21.266\nIt is going to inherit from A as well,\nbut it is going to override say_my_name,\n\n306\n00:18:21.266 --> 00:18:23.297\nand just say print out C, right?\n\n307\n00:18:23.297 --> 00:18:26.306\nAnd so the class is just gonna say,\nhey, I'm C, hey I'm A,\n\n308\n00:18:26.306 --> 00:18:27.730\nwhenever I create objects.\n\n309\n00:18:29.410 --> 00:18:34.198\nBut then D is actually\ngonna utilize multiple\n\n310\n00:18:34.198 --> 00:18:38.612\ninheritance, and that is gonna be B,C.\n\n311\n00:18:38.612 --> 00:18:44.555\nThat's saying that D, the class of D,\nis inheriting from both B and C.\n\n312\n00:18:44.555 --> 00:18:48.301\nWell you should already start\nto see the issue here, and\n\n313\n00:18:48.301 --> 00:18:51.120\nI'm actually gonna get rid of this.\n\n314\n00:18:51.120 --> 00:18:56.992\nLet's say that when we inherit from D or\nexcuse me, inherit from B and\n\n315\n00:18:56.992 --> 00:19:02.069\nC, D doesn't need to override\nthe say_my_name method.\n\n316\n00:19:02.069 --> 00:19:04.198\nWell let's just take a look\nat a couple of these here.\n\n317\n00:19:05.909 --> 00:19:09.268\nSo I have a = A(), b = B(),\n\n318\n00:19:09.268 --> 00:19:15.371\nthat is a bunch of stuff that\nI did not mean to type, Vonne.\n\n319\n00:19:15.371 --> 00:19:20.869\nAnd then c = C() and\n\n320\n00:19:20.869 --> 00:19:25.151\nthen d = D().\n\n321\n00:19:25.151 --> 00:19:26.087\n&gt;&gt; I really lost to help you.\n\n322\n00:19:26.087 --> 00:19:28.786\n&gt;&gt; Wow, I'm gonna have to cut\nthat off cuz that's a little\n\n323\n00:19:28.786 --> 00:19:29.868\nagitating in this-\n&gt;&gt; [LAUGH]\n\n324\n00:19:29.868 --> 00:19:30.703\n&gt;&gt; Context.\n\n325\n00:19:30.703 --> 00:19:33.370\nIt's helpful when I'm actually\ntrying to get things done.\n\n326\n00:19:33.370 --> 00:19:37.484\nBut with very simple ones, it's like\ndo you mean, so be aware of that.\n\n327\n00:19:37.484 --> 00:19:41.280\nSo I have a = A90,\n[COUGH] b = B(), c = C().\n\n328\n00:19:41.280 --> 00:19:44.933\nAnd let's just say a.say_my_name(),\n\n329\n00:19:44.933 --> 00:19:49.464\nb.say_my_name(), and c.say_my_name().\n\n330\n00:19:49.464 --> 00:19:51.294\nAll right, so we have this set up.\n\n331\n00:19:51.294 --> 00:19:54.492\nI'm not gonna do D yet, because\nwe're gonna see how this works out.\n\n332\n00:19:54.492 --> 00:19:57.471\nIf I look here, and I clear.\n\n333\n00:19:57.471 --> 00:20:02.408\nAnd I rerun python3 books.py,\nit's not really books anymore,\n\n334\n00:20:02.408 --> 00:20:04.310\nit just says A, B, C.\n\n335\n00:20:04.310 --> 00:20:07.973\nWell that makes sense because\na said say_my_name(), that's A,\n\n336\n00:20:07.973 --> 00:20:12.810\nb said say_my_name(), that's B,\nc said, say_my_name(), that's C.\n\n337\n00:20:12.810 --> 00:20:15.447\nBut what happens if,\nlet's say in B, I take out.\n\n338\n00:20:15.447 --> 00:20:19.192\nAnd I just comment this out at\na past statement that says,\n\n339\n00:20:19.192 --> 00:20:23.338\nI'm not gonna fill in anything,\nI'm just inheriting from A.\n\n340\n00:20:23.338 --> 00:20:29.592\nWell it says A A C now, and\nthat's because B inherits from A.\n\n341\n00:20:29.592 --> 00:20:33.150\nSo say_my_name comes down from A,\nand it's still available there.\n\n342\n00:20:34.600 --> 00:20:39.282\nThat's good, if I do not need\nto re-implement say_my_name or\n\n343\n00:20:39.282 --> 00:20:41.590\nany other method from parents.\n\n344\n00:20:41.590 --> 00:20:45.936\nBut how does that play\nout from this D class?\n\n345\n00:20:45.936 --> 00:20:50.270\nWell let's see here.\n\n346\n00:20:50.270 --> 00:20:55.394\nSo there we go, and\nthen finally d.say_my_name().\n\n347\n00:20:55.394 --> 00:20:58.230\nSo Vonne,\nI'm gonna pick on you a little bit.\n\n348\n00:20:58.230 --> 00:21:01.731\nWhat do you think is gonna be\nprinted out for d.say_my_name()?\n\n349\n00:21:01.731 --> 00:21:03.132\n&gt;&gt; I'm gonna say A.\n\n350\n00:21:03.132 --> 00:21:07.040\n&gt;&gt; Well Vonne,\nI can see that is a reasonable answer.\n\n351\n00:21:07.040 --> 00:21:09.384\nI think there's no better\nway than just test it out.\n\n352\n00:21:09.384 --> 00:21:10.368\nLet's see what happens.\n\n353\n00:21:10.368 --> 00:21:13.957\nSo if we run, it's actually B.\n\n354\n00:21:13.957 --> 00:21:15.207\nWell why is it B?\n\n355\n00:21:15.207 --> 00:21:19.722\nI start thinking to myself, why is it B?\n\n356\n00:21:19.722 --> 00:21:21.852\nI would say that might be right,\nit's inheriting from both.\n\n357\n00:21:21.852 --> 00:21:26.918\nSo maybe A is super powered,\nit's available everywhere, right?\n\n358\n00:21:26.918 --> 00:21:33.347\nSo both of these inherit from A, so\nmaybe D takes A and super charges it.\n\n359\n00:21:33.347 --> 00:21:35.917\nOkay, that would be\na reasonable assertion.\n\n360\n00:21:35.917 --> 00:21:40.799\nBut I wonder, I have B and C,\nif I go back and look, that's B.\n\n361\n00:21:40.799 --> 00:21:46.594\nWhen I said d.say_my_name(), I wonder\nwhat happens if I switch the order here?\n\n362\n00:21:46.594 --> 00:21:50.220\nAnd it changes to C.\n\n363\n00:21:51.700 --> 00:21:56.820\nSo order matters when we're inheriting\nwith multiple inheritance, and\n\n364\n00:21:56.820 --> 00:21:58.050\nthat's the tricky part.\n\n365\n00:21:59.140 --> 00:22:00.570\nI end up with A gives all\nof it's methods to B.\n\n366\n00:22:00.570 --> 00:22:03.740\nA gives all of it's methods to C,\nbut then C and\n\n367\n00:22:03.740 --> 00:22:07.414\nB give both of their methods\nwich were already from A.\n\n368\n00:22:07.414 --> 00:22:12.704\nBut might have been overridden in B and\nC into D.\n\n369\n00:22:12.704 --> 00:22:17.138\nAnd it's really hard to reason about and\nif we're not careful,\n\n370\n00:22:17.138 --> 00:22:21.174\nI may assume that B is going to\nbe the method that is called.\n\n371\n00:22:21.174 --> 00:22:23.570\nBecause I didn't define say_my_name in D,\nright?\n\n372\n00:22:23.570 --> 00:22:28.722\nI was expecting say_my_name here to\n\n373\n00:22:28.722 --> 00:22:33.556\ncome back, but instead, it's C.\n\n374\n00:22:33.556 --> 00:22:35.616\nThat's kind of weird, right?\n\n375\n00:22:35.616 --> 00:22:40.251\nSo how do I reconcile that?\n\n376\n00:22:40.251 --> 00:22:44.091\nPython uses something called\nmethod resolution order.\n\n377\n00:22:44.091 --> 00:22:47.735\nIt's an algorithm to determine\nwhich method to call and\n\n378\n00:22:47.735 --> 00:22:51.000\nbehind the scenes,\nI don't know how that works.\n\n379\n00:22:51.000 --> 00:22:53.510\nMaybe you don't I can\ndefinitely go read about it.\n\n380\n00:22:53.510 --> 00:22:56.146\nBut what it boils down\nto is order matters, and\n\n381\n00:22:56.146 --> 00:22:59.876\nif order matters then it's hard\nto reason about, to be careful.\n\n382\n00:22:59.876 --> 00:23:04.764\nThis is error prone, and we can kind\nof end up in this circular dependency.\n\n383\n00:23:04.764 --> 00:23:09.420\nSo the deadly diamond of death\nhas reared it's ugly head.\n\n384\n00:23:09.420 --> 00:23:11.746\nSo if you're using multiple\ninheritance be very careful.\n\n385\n00:23:11.746 --> 00:23:16.503\nNow, Vonne, I do know that we have,\nwe have some ways that we can use\n\n386\n00:23:16.503 --> 00:23:21.182\nthis multiple inheritance schemes\nas well as alternatives to it.\n\n387\n00:23:21.182 --> 00:23:24.456\nBut do we have enough\ntime in this episode?\n\n388\n00:23:24.456 --> 00:23:27.450\n&gt;&gt; Well unfortunately Justin,\nwe are out of time for this episode.\n\n389\n00:23:27.450 --> 00:23:30.893\nI think we're gonna need to\nextend this into a part two.\n\n390\n00:23:30.893 --> 00:23:32.602\nSo I hope you all will be joining us for\nthat.\n\n391\n00:23:32.602 --> 00:23:35.465\nFor now, signing off for\nITPro.TV, I'm Vonne Smith.\n\n392\n00:23:35.465 --> 00:23:36.770\n&gt;&gt; And I'm Justin Dennison.\n\n393\n00:23:36.770 --> 00:23:38.747\n&gt;&gt; See you next time.\n\n394\n00:23:38.747 --> 00:23:44.709\n[MUSIC]\n\n395\n00:23:44.709 --> 00:23:49.140\n&gt;&gt; Thank you for watching ITPro.TV.\n\n",
          "vimeoId": "208838657"
        },
        {
          "description": "In this episode, Vonne and Justin continue extending classes and multiple inheritance.  They also cover the topic of composition - demonstrating why this principle is favored as best practice.",
          "length": "1839",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/object-oriented-python-4-1-2-extending_classes_pt2-031017-high.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/object-oriented-python-4-1-2-extending_classes_pt2-031017-high-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/object-oriented-python-4-1-2-extending_classes_pt2-031017-high-sm.jpg",
          "title": "Extending Classes Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:01.661\nWelcome to ITPRO.TV,\n\n2\n00:00:01.661 --> 00:00:06.891\nI'm your host Don Pezet coming at you\nlive from San Francisco's [CROSSTALK]\n\n3\n00:00:06.891 --> 00:00:08.275\n[MUSIC]\n\n4\n00:00:08.275 --> 00:00:11.011\n&gt;&gt; You're watching ITPRO.TV.\n\n5\n00:00:11.011 --> 00:00:16.890\n&gt;&gt; Hello everyone and welcome back to\nanother exciting episode of ITPRO.TV.\n\n6\n00:00:16.890 --> 00:00:18.440\nI am your host Vonne Smith and\n\n7\n00:00:18.440 --> 00:00:24.050\ntoday we are doing part two of extending\nclasses in object oriented Python.\n\n8\n00:00:24.050 --> 00:00:27.380\nSo if you missed the first part of this\nconversation make sure you go back and\n\n9\n00:00:27.380 --> 00:00:28.260\ncheck that out.\n\n10\n00:00:28.260 --> 00:00:31.780\nBut here to extend this conversation\nwith us is Mr. Justin Dennison hello.\n\n11\n00:00:31.780 --> 00:00:33.010\n&gt;&gt; Hello Vonne how are you today?\n\n12\n00:00:33.010 --> 00:00:36.030\n&gt;&gt; I'm doing great I'm excited to\nhear more about these classes and\n\n13\n00:00:36.030 --> 00:00:37.960\nI hear we're gonna be\nmixing it up a little bit?\n\n14\n00:00:37.960 --> 00:00:42.740\n&gt;&gt; Yeah yeah Vonne it's interesting,\nbecause when we left off last time,\n\n15\n00:00:42.740 --> 00:00:46.490\nwe actually talked about the dangers\nof multiple inheritance, right?\n\n16\n00:00:46.490 --> 00:00:50.050\nWe had overriding, don't know what\nmethods are actually being called.\n\n17\n00:00:50.050 --> 00:00:54.380\nHowever there is a valid use case for\nmultiple inheritance and\n\n18\n00:00:54.380 --> 00:00:58.510\nwe'll talk more about who\nconsiders it valid or not later.\n\n19\n00:00:59.510 --> 00:01:03.900\n&gt;&gt; But it's the mix in pattern where\nI can take individual pieces and\n\n20\n00:01:03.900 --> 00:01:05.370\njust mix it up, right?\n\n21\n00:01:05.370 --> 00:01:08.190\nI like to think of it as in a shaker or\nsomething like that.\n\n22\n00:01:08.190 --> 00:01:10.640\nBut, I think to see how valid this is,\nlet's go ahead and\n\n23\n00:01:10.640 --> 00:01:13.490\njump in and see where this takes us.\n\n24\n00:01:13.490 --> 00:01:16.930\nSo, here I am, I already have my terminal\nopen, I'm open, I'm in my project.\n\n25\n00:01:16.930 --> 00:01:20.080\nIf you haven't checked out part one\ndefinitely check that out, cause we\n\n26\n00:01:20.080 --> 00:01:24.630\nstarted here, we made this project,\nbut now we're gonna continue using it.\n\n27\n00:01:24.630 --> 00:01:28.400\nAnd I only have a single file,\nthat's books.py.\n\n28\n00:01:28.400 --> 00:01:32.710\nAnd over in my Atom text editor,\nI have all of this code.\n\n29\n00:01:32.710 --> 00:01:35.410\nBut for now,\nI'm going to comment that out.\n\n30\n00:01:36.660 --> 00:01:38.480\nSo there we go.\n\n31\n00:01:38.480 --> 00:01:42.220\nAnd I'm gonna come down here and I'm\ngonna stay with the books example, right?\n\n32\n00:01:42.220 --> 00:01:43.460\nSo let's talk about a book.\n\n33\n00:01:43.460 --> 00:01:46.640\nWhat is, a book has a title and an author.\n\n34\n00:01:46.640 --> 00:01:48.465\nBut a book is also readable,\n\n35\n00:01:48.465 --> 00:01:53.490\nwritable and well there is a third\none that we would like to.\n\n36\n00:01:53.490 --> 00:01:57.960\nNow we could, we could just write\na book and have it a read-write method.\n\n37\n00:01:57.960 --> 00:02:02.860\nBut there's other types of things that\nare readable and writable like text files,\n\n38\n00:02:02.860 --> 00:02:05.990\nor possibly other documents\nthat are specific.\n\n39\n00:02:05.990 --> 00:02:11.930\nSo, we may reuse this code, so let's pull\nthat out into its own separate class\n\n40\n00:02:11.930 --> 00:02:17.730\nin order to, well, add that functionality\nback to the book and keep our code dry.\n\n41\n00:02:17.730 --> 00:02:23.728\nSo let's see, we have our book class\nhere and we need that init method.\n\n42\n00:02:26.200 --> 00:02:28.920\nAnd it has a title and an author.\n\n43\n00:02:28.920 --> 00:02:31.810\nNow in the previous episode\nI already had a book class.\n\n44\n00:02:31.810 --> 00:02:33.090\nI made some changes to it so\n\n45\n00:02:33.090 --> 00:02:36.189\nwe're just going to start fresh and\ntake a fresh look at this.\n\n46\n00:02:37.470 --> 00:02:39.030\nAnd what is in the book class?\n\n47\n00:02:39.030 --> 00:02:46.460\nAll we need to do is set the title\nto title and the author to author.\n\n48\n00:02:46.460 --> 00:02:49.150\nA book is readable and writable.\n\n49\n00:02:49.150 --> 00:02:54.380\nI could come down here and\nadd a write method and\n\n50\n00:02:54.380 --> 00:02:59.340\nthat would write the book out right, write\nto print or maybe I'm updating the book.\n\n51\n00:02:59.340 --> 00:03:00.920\nMaybe you're writing the book and\n\n52\n00:03:00.920 --> 00:03:02.890\nyou wanna be able to modify\nwhat's inside the book.\n\n53\n00:03:04.380 --> 00:03:09.600\nSo boom, I'm gonna take that out and\ninstead make a second class\n\n54\n00:03:09.600 --> 00:03:14.810\ncalled readable, not readable,\ninstead call it writable.\n\n55\n00:03:14.810 --> 00:03:17.600\nWe'll come back to that\nreadable thing later.\n\n56\n00:03:17.600 --> 00:03:19.630\nAnd then what do I want to do?\n\n57\n00:03:19.630 --> 00:03:22.246\nI'm gonna write a init method for\nthat, as well.\n\n58\n00:03:22.246 --> 00:03:25.640\nNo, not a [INAUDIBLE] init method,\na write method.\n\n59\n00:03:27.060 --> 00:03:29.950\nGot some crazies going on here live.\n\n60\n00:03:29.950 --> 00:03:35.460\nAnd that is going to take,\nwell, what is it gonna do?\n\n61\n00:03:36.950 --> 00:03:41.620\nIt's going to open the file and\nI'm going to assume\n\n62\n00:03:41.620 --> 00:03:44.830\nthat there's a file path for\nthe book and this is a digital book.\n\n63\n00:03:44.830 --> 00:03:47.240\nSo the book has to be stored somewhere.\n\n64\n00:03:47.240 --> 00:03:53.280\nSo that file path portion is\ngoing to be available to me and\n\n65\n00:03:53.280 --> 00:03:59.350\nthat's just going to be a write and\nI forgot the as f.\n\n66\n00:03:59.350 --> 00:04:00.710\nNow this is a context manager.\n\n67\n00:04:00.710 --> 00:04:04.460\nThis will make sure closes when we're\ndone, just as a quick reminder.\n\n68\n00:04:04.460 --> 00:04:05.620\nYou haven't used these a lot.\n\n69\n00:04:05.620 --> 00:04:08.750\nThey're very handy because I don't have to\nworry about accidentally keeping the file\n\n70\n00:04:08.750 --> 00:04:12.110\nopen once my program's doing other things.\n\n71\n00:04:12.110 --> 00:04:17.515\nAnd then all it's going to do is,\nwell, it needs some data.\n\n72\n00:04:17.515 --> 00:04:20.347\nInformation if I'm writing\nto the book I need text.\n\n73\n00:04:20.347 --> 00:04:26.330\nSo this is going to take data and\nit is going to write the data out.\n\n74\n00:04:26.330 --> 00:04:28.220\nOkay so we have this method now.\n\n75\n00:04:28.220 --> 00:04:30.572\nAll right well that looks good but\n\n76\n00:04:30.572 --> 00:04:36.740\nwhere's the self thought file path\nthere's no init in this writable.\n\n77\n00:04:36.740 --> 00:04:40.650\nWell, the book it actually needs\nwhere is it gonna be stored.\n\n78\n00:04:41.710 --> 00:04:48.250\nSo, I'm gonna add to the original\nbook class and give it a path.\n\n79\n00:04:48.250 --> 00:04:51.340\nBut now the book needs to be writable.\n\n80\n00:04:51.340 --> 00:04:52.243\nHow am I gonna make that writable?\n\n81\n00:04:53.936 --> 00:04:58.120\nWell, I'm just gonna say it\ninherits from the writable class.\n\n82\n00:04:58.120 --> 00:05:02.900\nAnd now having this,\nI should be able to write to the book.\n\n83\n00:05:02.900 --> 00:05:04.600\nSo let's test that out below.\n\n84\n00:05:04.600 --> 00:05:07.640\nI'm gonna say book = Book.\n\n85\n00:05:08.680 --> 00:05:12.680\nAnd the title is something.\n\n86\n00:05:13.830 --> 00:05:16.800\nAnd the author is someone.\n\n87\n00:05:18.610 --> 00:05:21.410\nAnd well I need to give it a file path.\n\n88\n00:05:21.410 --> 00:05:27.500\nBecause notice even though these are,\nthese are disjoined\n\n89\n00:05:27.500 --> 00:05:32.900\nI've assumed that whatever's inheriting\nfrom this has a file path property.\n\n90\n00:05:32.900 --> 00:05:34.300\nAnd that's important to note.\n\n91\n00:05:34.300 --> 00:05:38.260\nThis is on of those gotcha your moment but\nyou have to be careful about.\n\n92\n00:05:38.260 --> 00:05:39.810\nSo I have to give it a file path and\n\n93\n00:05:39.810 --> 00:05:42.100\nI'm just going to say that\nit's within the same folder.\n\n94\n00:05:43.140 --> 00:05:45.590\nAnd is going to be book.txt.\n\n95\n00:05:45.590 --> 00:05:50.700\nAll right now I have that book now what\nI wanna do I wanna say book.write.\n\n96\n00:05:50.700 --> 00:05:51.640\nHere's the first line.\n\n97\n00:05:53.650 --> 00:05:56.490\nAll right so I have that written book.\n\n98\n00:05:56.490 --> 00:05:57.400\nIt looks good.\n\n99\n00:05:57.400 --> 00:05:58.480\nWe're all good to go.\n\n100\n00:06:00.030 --> 00:06:07.920\nAnd if we come back in\npython3 books.py and I write.\n\n101\n00:06:07.920 --> 00:06:10.490\nBook object has not attribute filepath.\n\n102\n00:06:10.490 --> 00:06:14.570\nWell this is a,\nI woopsie daisied and that's okay.\n\n103\n00:06:14.570 --> 00:06:16.680\nNotice I passed in the file path but\n\n104\n00:06:16.680 --> 00:06:20.560\nI didn't actually set it as\na property on the book instance.\n\n105\n00:06:20.560 --> 00:06:22.400\nSo a common mistake.\n\n106\n00:06:22.400 --> 00:06:23.340\nYou'll do it.\n\n107\n00:06:23.340 --> 00:06:24.720\nI still do it.\n\n108\n00:06:24.720 --> 00:06:25.990\nNo worries.\n\n109\n00:06:25.990 --> 00:06:29.650\nIt's important to realize\nthough attribute error\n\n110\n00:06:29.650 --> 00:06:33.890\ntypically means you haven't\nset it to the object property.\n\n111\n00:06:33.890 --> 00:06:35.389\nSo keep that in mind.\n\n112\n00:06:35.389 --> 00:06:40.562\nLet's see if it works now,\npython3 and nope, not python3.\n\n113\n00:06:40.562 --> 00:06:48.090\nForgot to type books, And it looks,\nwell it didn't look like it did anything.\n\n114\n00:06:48.090 --> 00:06:53.000\nWell let's see here and notice over\nin here I actually have a book.txt,\n\n115\n00:06:53.000 --> 00:06:55.744\nlet's see what's in that book.txt.\n\n116\n00:06:56.970 --> 00:06:57.830\nHere's the first line.\n\n117\n00:06:57.830 --> 00:06:59.840\nSo I've now made a writable book.\n\n118\n00:07:01.740 --> 00:07:03.880\nI've written two classes.\n\n119\n00:07:03.880 --> 00:07:05.740\nThis class does not have an init method.\n\n120\n00:07:06.900 --> 00:07:10.360\nIt just has a single write method\nthat is inherited by a book,\n\n121\n00:07:10.360 --> 00:07:12.200\nbecause I want the book to be writable.\n\n122\n00:07:12.200 --> 00:07:14.740\nThat book is writable.\n\n123\n00:07:14.740 --> 00:07:16.240\nSo that's important to know.\n\n124\n00:07:18.190 --> 00:07:22.620\nSo, well this doesn't look new to us,\ndoes it?\n\n125\n00:07:22.620 --> 00:07:26.480\n&gt;&gt; I was going to say that this is\nright now this is just an example of\n\n126\n00:07:26.480 --> 00:07:27.630\nsingle inheritance.\n\n127\n00:07:27.630 --> 00:07:29.820\nIt's just a one parent, one child.\n\n128\n00:07:29.820 --> 00:07:31.640\nSo that's all we've got right now.\n\n129\n00:07:31.640 --> 00:07:33.340\n&gt;&gt; Exactly.\nSo this is single inheritance.\n\n130\n00:07:33.340 --> 00:07:35.480\nThere's nothing new at this point.\n\n131\n00:07:35.480 --> 00:07:37.420\nBut now comes the power.\n\n132\n00:07:37.420 --> 00:07:42.190\nNot only is a book readable, or excuse me,\nwritable, it should also be readable.\n\n133\n00:07:42.190 --> 00:07:44.120\nSo how do I make this readable?\n\n134\n00:07:44.120 --> 00:07:47.180\nWell, I'm gonna add\na class called readable.\n\n135\n00:07:48.180 --> 00:07:51.713\nAnd that is going to have a read method.\n\n136\n00:07:51.713 --> 00:07:57.526\nAnd it's going to be\nwith open (self.filepath,\n\n137\n00:07:57.526 --> 00:08:05.240\n'r') as f: And then return,\nwait a minute, wait a minute.\n\n138\n00:08:05.240 --> 00:08:06.440\nI'm just gonna print it.\n\n139\n00:08:06.440 --> 00:08:10.030\nJust, this is not a robust\nclass definition.\n\n140\n00:08:10.030 --> 00:08:11.130\nThis is just for examples.\n\n141\n00:08:11.130 --> 00:08:12.430\nSo do keep that in mind.\n\n142\n00:08:12.430 --> 00:08:15.928\nI'm going to read whatever's in the book.\n\n143\n00:08:15.928 --> 00:08:17.600\nAnd just print to the screen.\n\n144\n00:08:17.600 --> 00:08:22.680\nSo now I have this Readable class,\nso this is an extra piece, right?\n\n145\n00:08:22.680 --> 00:08:25.170\nThe Book is Readable and it is Writable.\n\n146\n00:08:25.170 --> 00:08:26.840\nSo, how do I do that?\n\n147\n00:08:26.840 --> 00:08:30.340\nWell, it is Readable and Writable now.\n\n148\n00:08:30.340 --> 00:08:34.200\nI've inherited both the write and\nthe read methods, but\n\n149\n00:08:34.200 --> 00:08:37.800\nI haven't had to re copy and\npaste or anything like that.\n\n150\n00:08:37.800 --> 00:08:39.360\nI've just added properties or\n\n151\n00:08:39.360 --> 00:08:44.100\nbehaviors through this, kind of putting\nthem in a blender and hitting puree.\n\n152\n00:08:44.100 --> 00:08:46.200\n&gt;&gt; We started to extend.\n\n153\n00:08:46.200 --> 00:08:47.570\n&gt;&gt; Exactly.\n&gt;&gt; And we're mixing it up.\n\n154\n00:08:47.570 --> 00:08:48.380\n&gt;&gt; We're mixing it up.\n\n155\n00:08:48.380 --> 00:08:50.410\nWe're adding some mix-ins.\n\n156\n00:08:50.410 --> 00:08:53.260\nSo I've got a little bit of Readable,\na little bit of Writable in here.\n\n157\n00:08:53.260 --> 00:08:54.880\nAnd now the book is both Readable and\n\n158\n00:08:54.880 --> 00:08:58.040\nWritable and\nlet's actually see if it works.\n\n159\n00:08:58.040 --> 00:09:00.050\nNow you'll notice this is f.read.\n\n160\n00:09:00.050 --> 00:09:02.120\nThat's not calling this read method.\n\n161\n00:09:02.120 --> 00:09:06.280\nBut instead the read method on the file\nobject, when you read in a file.\n\n162\n00:09:06.280 --> 00:09:08.143\nSo let's take a look here.\n\n163\n00:09:08.143 --> 00:09:14.090\nIf I write and then I say book.read, and\nlet's write another line, book.write.\n\n164\n00:09:15.970 --> 00:09:17.060\nSome more things.\n\n165\n00:09:18.300 --> 00:09:19.488\nThat is not how you spell more.\n\n166\n00:09:19.488 --> 00:09:24.464\nAnd then book.read.\n\n167\n00:09:24.464 --> 00:09:27.265\nNotice this isn't, I'm writing to\nthe book, I'm reading the book,\n\n168\n00:09:27.265 --> 00:09:29.670\nI'm writing to the book,\nI'm reading to the book.\n\n169\n00:09:29.670 --> 00:09:31.480\nThis is a nice description.\n\n170\n00:09:31.480 --> 00:09:33.260\nLet's see if it works, though.\n\n171\n00:09:33.260 --> 00:09:34.073\nThat's the test.\n\n172\n00:09:36.371 --> 00:09:39.290\nSo, here's the first line,\nand some more things.\n\n173\n00:09:40.520 --> 00:09:45.193\nIt looks like it worked,\nright, so we're good to go.\n\n174\n00:09:45.193 --> 00:09:49.120\nWe have the read and\nthe write portions added to our book.\n\n175\n00:09:49.120 --> 00:09:52.370\nBut now, I'm building an inventory system.\n\n176\n00:09:52.370 --> 00:09:58.260\nI need to able able to send this out to,\nacross the web, put it in a database.\n\n177\n00:09:58.260 --> 00:10:02.120\nI'm maybe using a NoSQL database,\nand it would be nice if I could\n\n178\n00:10:02.120 --> 00:10:05.580\nmake it a JSON format,\nwhich is JavaScript Object Notation.\n\n179\n00:10:05.580 --> 00:10:10.920\nNow if you haven't heard of that before\nit's okay, this is just a final example of\n\n180\n00:10:10.920 --> 00:10:16.940\nadding a mix in to add a method, or\na set of behaviors to an existing class.\n\n181\n00:10:16.940 --> 00:10:24.830\nSo, let's say we have a class\ncalled JSONSerializable.\n\n182\n00:10:24.830 --> 00:10:27.280\nSerializable.\n\n183\n00:10:27.280 --> 00:10:28.210\n&gt;&gt; That's a big word.\n\n184\n00:10:28.210 --> 00:10:30.580\n&gt;&gt; That is a big word, got to be careful.\n\n185\n00:10:30.580 --> 00:10:34.979\nAnd then I'm just going\nto add a to_json method.\n\n186\n00:10:34.979 --> 00:10:38.830\nAnd what is that going to do?\n\n187\n00:10:38.830 --> 00:10:41.040\nAll it's going to do is import.\n\n188\n00:10:41.040 --> 00:10:45.900\nYou should typically not import\nthings like this inside of a method.\n\n189\n00:10:45.900 --> 00:10:50.070\nAgain, just for example, I would pull\nthis out to the top of the file, and\n\n190\n00:10:50.070 --> 00:10:51.590\nI may do that in just a moment.\n\n191\n00:10:51.590 --> 00:10:52.839\nSo I'm gonna import json.\n\n192\n00:10:52.839 --> 00:10:57.157\nAnd then I'm going to print\n\n193\n00:10:57.157 --> 00:11:04.410\njson.dumps(self.__dict__)).\n\n194\n00:11:04.410 --> 00:11:08.650\nNow, what is this self dot\ndouble underscore dictionary?\n\n195\n00:11:08.650 --> 00:11:13.720\nWhat it actually does is it grabs all\nof the attributes on the object and\n\n196\n00:11:13.720 --> 00:11:16.290\njust returns them as\na dictionary in python.\n\n197\n00:11:16.290 --> 00:11:20.200\nSo this is a little extra for\nyour money, if you will.\n\n198\n00:11:20.200 --> 00:11:23.070\nLearn something new, if you've\nnever used that inside of a class,\n\n199\n00:11:23.070 --> 00:11:25.260\nit will just give you all\nof the class attributes,\n\n200\n00:11:25.260 --> 00:11:29.760\nwhere you'll have a label called title and\nthe appropriate value of title.\n\n201\n00:11:29.760 --> 00:11:34.790\nSo, let's see book.to_json().\n\n202\n00:11:34.790 --> 00:11:38.740\nWell, as it stands, I would like to be\nable to do that, but I can't do that.\n\n203\n00:11:39.900 --> 00:11:41.850\nBecause, a Book is Readable and Writable.\n\n204\n00:11:41.850 --> 00:11:44.010\nIt is not JSONSerializable.\n\n205\n00:11:44.010 --> 00:11:46.000\nWow, that rhymed and\nI wasn't expecting that.\n\n206\n00:11:46.000 --> 00:11:47.530\n&gt;&gt; You're a poet and\nyou didn't even know it.\n\n207\n00:11:47.530 --> 00:11:51.150\n&gt;&gt; I know.\nIt's crazy, so how do I do that?\n\n208\n00:11:51.150 --> 00:11:54.860\nWell, I'm just gonna mix in\nthe JSONSerializable class.\n\n209\n00:11:54.860 --> 00:11:58.610\nNotice I have three classes\nbeing inherited by Book.\n\n210\n00:12:00.320 --> 00:12:03.330\nWell, Justin you said that was bad.\n\n211\n00:12:03.330 --> 00:12:07.690\nCorrect, but this is a common pattern for\nmultiple inheritance.\n\n212\n00:12:07.690 --> 00:12:12.735\nAnd when I say common,\nsome people use it, some people do not.\n\n213\n00:12:12.735 --> 00:12:17.710\nAnd we'll talk more about that\njuxtaposition there in just a moment.\n\n214\n00:12:17.710 --> 00:12:22.799\nSo, let's take a look here, and\nif you'll notice that last one,\n\n215\n00:12:22.799 --> 00:12:25.870\nto_json, gives me a dictionary.\n\n216\n00:12:25.870 --> 00:12:30.520\nActually, it's a formatted JSON string\nwith title, with the actual title.\n\n217\n00:12:30.520 --> 00:12:32.741\nThe author, with the actual author, and\n\n218\n00:12:32.741 --> 00:12:35.890\nthen filepath with\nthe filepath of the book.\n\n219\n00:12:35.890 --> 00:12:37.850\nAnd, well there we go.\n\n220\n00:12:37.850 --> 00:12:42.760\nWe've added behavior by inheriting\nfrom multiple classes, and\n\n221\n00:12:42.760 --> 00:12:45.070\nthat's incredibly powerful.\n\n222\n00:12:45.070 --> 00:12:47.400\nNow, something to remember though.\n\n223\n00:12:47.400 --> 00:12:50.499\nWe need to be very, very careful.\n\n224\n00:12:50.499 --> 00:12:55.272\nIf Readable had a to_json method.\n\n225\n00:12:58.309 --> 00:13:02.160\nWell, we might get unknown behavior.\n\n226\n00:13:02.160 --> 00:13:06.800\nWe might be overriding new methods\nthat we didn't even know about.\n\n227\n00:13:06.800 --> 00:13:10.530\nAnd if you're inheriting from classes\nthat you didn't write, right, and\n\n228\n00:13:10.530 --> 00:13:15.140\nyou're continuing on,\nthen how do you know about that?\n\n229\n00:13:15.140 --> 00:13:16.820\nYou have to read documentation.\n\n230\n00:13:16.820 --> 00:13:19.290\nYou have to do your research.\n\n231\n00:13:19.290 --> 00:13:20.980\nSo that's important.\n\n232\n00:13:20.980 --> 00:13:24.450\nIn addition to,\nsome people say this is an anti-pattern.\n\n233\n00:13:24.450 --> 00:13:26.810\nSo keep that in mind,\ndepending on what circles you're in,\n\n234\n00:13:26.810 --> 00:13:31.470\nthe mixing pattern is not necessarily\nalways accepted as a valid construction.\n\n235\n00:13:31.470 --> 00:13:35.970\nHowever, there are other people who say,\nactually mix ins are valid.\n\n236\n00:13:35.970 --> 00:13:41.450\nAnd that's because, well write is\nthe only method on the Writeable class.\n\n237\n00:13:41.450 --> 00:13:45.880\nAnd I'm not overriding that\nanywhere else in my code, but\n\n238\n00:13:45.880 --> 00:13:50.240\nI'm allowing Writeable to be added\nto other classes for future use.\n\n239\n00:13:50.240 --> 00:13:54.540\nSo I'm pulling that apart, so\nI don't have code duplication.\n\n240\n00:13:54.540 --> 00:13:58.900\nAnd those are the things\nwe need to be aware of, but\n\n241\n00:13:58.900 --> 00:14:01.940\nit can cause problems, so\nyou have to be careful.\n\n242\n00:14:01.940 --> 00:14:07.040\n&gt;&gt; So it looks like we avoided that\ndiamond of death and we mixed properly.\n\n243\n00:14:07.040 --> 00:14:10.590\nWith this example, but\ndid we do too much mixing here?\n\n244\n00:14:10.590 --> 00:14:14.368\nIs there something that we need to be\naware of, or is there another way?\n\n245\n00:14:14.368 --> 00:14:17.780\n&gt;&gt; So it can be kinda scary, this mix in.\n\n246\n00:14:17.780 --> 00:14:21.040\nIf it's done improperly, you end up\nwith that deadly diamond of death,\n\n247\n00:14:21.040 --> 00:14:24.670\nunknown behavior and\nthings can go horribly awry.\n\n248\n00:14:24.670 --> 00:14:26.690\nSo what is the alternative?\n\n249\n00:14:26.690 --> 00:14:31.320\nAnd just in the sake of time,\nwe'll do a refactoring.\n\n250\n00:14:31.320 --> 00:14:33.700\nWe'll use something called composition.\n\n251\n00:14:33.700 --> 00:14:38.855\nNow, there may be a term if you do\na lot of reading about object-oriented\n\n252\n00:14:38.855 --> 00:14:43.030\nprogramming where composed objects,\nyou'll hear that.\n\n253\n00:14:43.030 --> 00:14:48.740\nMore specifically, you will hear you\nshould favor composition over inheritance.\n\n254\n00:14:48.740 --> 00:14:51.590\nRemember when I said from part one,\nif you haven't watched that,\n\n255\n00:14:51.590 --> 00:14:52.710\ndefinitely go back and watch that.\n\n256\n00:14:53.888 --> 00:14:57.890\nInheriting too much, and what I mean\nis level after level after level,\n\n257\n00:14:57.890 --> 00:15:04.020\nlike if a class has great, great, great,\ngreat grandchildren, then you might be\n\n258\n00:15:04.020 --> 00:15:08.280\ngetting into, it's hard to reason about,\nyou might be getting into an issue where.\n\n259\n00:15:08.280 --> 00:15:11.280\nI don't know where this\nread method came from.\n\n260\n00:15:11.280 --> 00:15:12.752\nIt's hard for me to understand.\n\n261\n00:15:12.752 --> 00:15:16.506\nSo you should\n\n262\n00:15:16.506 --> 00:15:22.810\ninstead use it at a minimum,\nand people will say you\n\n263\n00:15:22.810 --> 00:15:28.220\nshould favor composition of objects\nover inheritance of classes.\n\n264\n00:15:28.220 --> 00:15:29.530\nNow notice that's favor.\n\n265\n00:15:29.530 --> 00:15:32.360\nThat's not you have to do it this way.\n\n266\n00:15:32.360 --> 00:15:35.676\nAnd realistically, projects will\nhave a little bit of composition,\n\n267\n00:15:35.676 --> 00:15:39.230\na little bit of inheritance, and\nit's ultimately up to you to make sense.\n\n268\n00:15:39.230 --> 00:15:44.860\nYou should design this however\nis most sensible to you.\n\n269\n00:15:46.340 --> 00:15:50.290\nSo how can I take this exact same example,\nand instead use composition?\n\n270\n00:15:51.410 --> 00:15:55.838\nWell, I think it's just easier to show us.\n\n271\n00:15:55.838 --> 00:16:01.500\nSo this writable class, I'm actually gonna\ncomment this out just for comparison here.\n\n272\n00:16:01.500 --> 00:16:05.337\nWhoa gonna comment out all of that,\nall of that again.\n\n273\n00:16:05.337 --> 00:16:10.530\nThere we go, so I'm just gonna comment\nthis out, and I'm gonna comment this out.\n\n274\n00:16:10.530 --> 00:16:11.910\nBut I'm gonna leave the line,\n\n275\n00:16:11.910 --> 00:16:14.420\nbecause ultimately what we should\nget is the exact same behavior.\n\n276\n00:16:15.580 --> 00:16:19.390\nSo let's,\nwe're gonna keep all of these pieces here,\n\n277\n00:16:19.390 --> 00:16:22.200\nand I'm going to delete book dot text.\n\n278\n00:16:22.200 --> 00:16:26.055\nSo there's some more things there,\nand delete.\n\n279\n00:16:26.055 --> 00:16:27.870\nAll right?\n\n280\n00:16:27.870 --> 00:16:30.000\nMove to trash, and it's gone.\n\n281\n00:16:30.000 --> 00:16:32.300\nSo we should get the exact same behavior.\n\n282\n00:16:32.300 --> 00:16:34.030\nAnd let's see if we can do that.\n\n283\n00:16:34.030 --> 00:16:35.670\nSo I'm going to start with\nthe book class again.\n\n284\n00:16:36.760 --> 00:16:38.760\nYou're like,\nwe have written the book class so\n\n285\n00:16:38.760 --> 00:16:42.358\nmany times, I'm I'm getting sad about it.\n\n286\n00:16:42.358 --> 00:16:45.010\nSo here's __init__(self.\n\n287\n00:16:45.010 --> 00:16:47.100\nAnd what does the book need?\n\n288\n00:16:47.100 --> 00:16:51.290\nWell, it needs a title,\nan author, and a file path.\n\n289\n00:16:52.490 --> 00:16:54.125\nWell, it looks the same thus far.\n\n290\n00:16:54.125 --> 00:16:57.052\nAnd self.title = title.\n\n291\n00:16:57.052 --> 00:17:02.325\nself.filepath Equals\n\n292\n00:17:02.325 --> 00:17:07.370\nfilepath, and self.author equals author.\n\n293\n00:17:07.370 --> 00:17:08.484\nWell, it's the same.\n\n294\n00:17:08.484 --> 00:17:10.480\nNothing's changed.\n\n295\n00:17:10.480 --> 00:17:11.660\nYou're exactly right.\n\n296\n00:17:11.660 --> 00:17:13.720\nBut now, here comes the difference.\n\n297\n00:17:13.720 --> 00:17:20.890\nIf I wanted to make this readable,\nI would instead make a reader class\n\n298\n00:17:23.000 --> 00:17:29.370\nthat has its own Dunder init, and in order\nto read something, what do I need to know?\n\n299\n00:17:29.370 --> 00:17:32.300\nI need to know where it is.\n\n300\n00:17:32.300 --> 00:17:36.780\nSo self.filepath = filepath.\n\n301\n00:17:36.780 --> 00:17:40.040\nNow, keep in mind,\nI'm using the same variable names here.\n\n302\n00:17:40.040 --> 00:17:43.220\nThere is no guarantee that\nthese are the same value.\n\n303\n00:17:43.220 --> 00:17:45.350\nI can actually instantiate\na reader class and\n\n304\n00:17:45.350 --> 00:17:49.640\npoint to a different location on\nmy computer than the actual book.\n\n305\n00:17:49.640 --> 00:17:53.720\nSo, but we're gonna use the fact\nthat I have a filepath here and\n\n306\n00:17:53.720 --> 00:17:56.130\na filepath here to our advantage.\n\n307\n00:17:57.650 --> 00:18:00.875\nAnd now,\nI'm going to write the read method.\n\n308\n00:18:00.875 --> 00:18:08.491\nAnd so, with open self.filepath,\n\n309\n00:18:08.491 --> 00:18:15.720\nread as f, and print f.read.\n\n310\n00:18:15.720 --> 00:18:18.435\nSo again, not a robust read method,\n\n311\n00:18:18.435 --> 00:18:22.680\nit's just going to print it out on\nthe screen not always helpful to you.\n\n312\n00:18:22.680 --> 00:18:27.310\nBut this looks very similar\nto this mix in readable,\n\n313\n00:18:27.310 --> 00:18:33.460\ndef read with open self dot found path in\nread mode as f print f dot read, okay.\n\n314\n00:18:34.740 --> 00:18:37.670\nBut how are we gonna use this?\n\n315\n00:18:37.670 --> 00:18:41.097\nWell, instead of inheriting from reader,\n\n316\n00:18:41.097 --> 00:18:46.810\nthe book is gonna have\nits own reader instance.\n\n317\n00:18:48.950 --> 00:18:53.280\nI have created a reader object\nthat is part of the book.\n\n318\n00:18:54.330 --> 00:18:58.580\nAnd then, I'm going to, any time I need\nto read, I'm just going to hand that off\n\n319\n00:18:58.580 --> 00:19:02.400\nto the reader, and it's going to have\nits own set of responsibilities.\n\n320\n00:19:02.400 --> 00:19:04.840\nRight?\nIt will do all the reading for me for\n\n321\n00:19:04.840 --> 00:19:06.430\nthe book, in this case, and\n\n322\n00:19:06.430 --> 00:19:12.220\nI don't have to worry about the book\nalways having all of its methods in line.\n\n323\n00:19:12.220 --> 00:19:14.409\nSo, but, what that does mean is,\n\n324\n00:19:15.700 --> 00:19:18.370\nI have it looks like a little\nbit of code duplication here.\n\n325\n00:19:19.700 --> 00:19:28.300\nBut all I'm gonna do is proxy\nthat to the reader itself.\n\n326\n00:19:28.300 --> 00:19:33.850\nNow, notice I've written def read,\ndef read twice right.\n\n327\n00:19:33.850 --> 00:19:35.050\nIt's not quite as dry.\n\n328\n00:19:35.050 --> 00:19:37.410\nIt doesn't seem quite as dry.\n\n329\n00:19:37.410 --> 00:19:39.130\nBut even though I've named this the same,\n\n330\n00:19:39.130 --> 00:19:43.330\nthese two lines are the same,\nthe body of the method is not the same.\n\n331\n00:19:43.330 --> 00:19:48.130\nSo they aren't exactly the same method,\nso there's no way around this.\n\n332\n00:19:48.130 --> 00:19:52.440\nBut notice, I said for the reader that\nis part of the book I want you to read.\n\n333\n00:19:52.440 --> 00:19:54.750\nNow, because of the way\nthat I've written this,\n\n334\n00:19:54.750 --> 00:19:57.730\nI'm gonna comment out to JSON just for\na moment.\n\n335\n00:19:57.730 --> 00:19:59.030\nI need a writer.\n\n336\n00:19:59.030 --> 00:20:00.510\nAnd just along that same way,\n\n337\n00:20:01.750 --> 00:20:04.490\nI'm gonna mess up my read class first,\n&gt;&gt; [LAUGH]\n\n338\n00:20:04.490 --> 00:20:05.550\n&gt;&gt; And then write the writer.\n\n339\n00:20:06.700 --> 00:20:07.920\nSo, I'm gonna have a writer,\n\n340\n00:20:07.920 --> 00:20:11.940\nit's gonna have it under init,\nThis is gonna take a cell.\n\n341\n00:20:11.940 --> 00:20:14.536\nIt also needs a filepath,\nwhere am I gonna write this to.\n\n342\n00:20:14.536 --> 00:20:20.048\nSo self.filepath = filepath,\nand then def write(),\n\n343\n00:20:20.048 --> 00:20:25.230\nand I'm not following\nappropriate convention here.\n\n344\n00:20:26.250 --> 00:20:32.327\nThere we go, self, and it needs data.\n\n345\n00:20:32.327 --> 00:20:34.800\nAnd well, okay.\n\n346\n00:20:34.800 --> 00:20:39.981\nI'm gonna with open(self.filepath,\n\n347\n00:20:39.981 --> 00:20:45.614\n'w') and write as f: f.write(data).\n\n348\n00:20:45.614 --> 00:20:47.414\nAll right.\n\n349\n00:20:47.414 --> 00:20:52.240\nNow, again, this looks exactly the same\nas the write method from before.\n\n350\n00:20:53.580 --> 00:20:57.410\nWhy would I want to do it this way?\n\n351\n00:20:57.410 --> 00:21:02.190\nWell, this can be used as a standalone\nclass if I need to do some kind of\n\n352\n00:21:02.190 --> 00:21:04.710\nwriting other than in the book.\n\n353\n00:21:04.710 --> 00:21:09.340\nBut also, I don't have as tightly\na coupled portion, right,\n\n354\n00:21:09.340 --> 00:21:11.660\nif I change the writer class.\n\n355\n00:21:11.660 --> 00:21:15.000\nAs long as I keep up my end of\nthe deal with the write method,\n\n356\n00:21:15.000 --> 00:21:19.120\nwhich we will put in the book in just\na moment, the book will still work.\n\n357\n00:21:19.120 --> 00:21:23.240\nHowever, with the mix-in pattern\nif I change the writable,\n\n358\n00:21:23.240 --> 00:21:25.820\nanything then I may get\nunexpected behavior.\n\n359\n00:21:25.820 --> 00:21:28.590\nMaybe I accidentally get overwriting,\nmaybe someone went back and\n\n360\n00:21:28.590 --> 00:21:34.470\nadded a method called flip\npages in the writable,\n\n361\n00:21:34.470 --> 00:21:38.270\nand that was also a method I put in my\nbook class that I'm inheriting from.\n\n362\n00:21:38.270 --> 00:21:41.060\nAnd now I have unexpected\nbehavior that may occur.\n\n363\n00:21:42.280 --> 00:21:43.430\nThat's a problem.\n\n364\n00:21:45.110 --> 00:21:48.060\nBut here, I get transparency.\n\n365\n00:21:48.060 --> 00:21:49.624\nAnd how do I get that transparency?\n\n366\n00:21:49.624 --> 00:21:53.414\nBy saying self.writer = writer.\n\n367\n00:21:53.414 --> 00:21:54.820\nWriter.\n\n368\n00:21:54.820 --> 00:22:00.100\nAnd also giving it the file path.\n\n369\n00:22:00.100 --> 00:22:04.590\nAnd, I'm going to write\na write method on the book.\n\n370\n00:22:04.590 --> 00:22:07.133\nAgain, a little bit of duplication here,\nbut not too horrible.\n\n371\n00:22:11.037 --> 00:22:12.990\nAnd just write the data out.\n\n372\n00:22:12.990 --> 00:22:14.440\nAnd all I've done is say,\n\n373\n00:22:14.440 --> 00:22:17.540\nhey writer, you're taking care of\nall of my write responsibilities.\n\n374\n00:22:17.540 --> 00:22:23.450\nReader, you're handling all of my reader\nresponsibilities, and it looks good to go.\n\n375\n00:22:23.450 --> 00:22:25.600\nWell, lets see if we get\nthe exact same behavior.\n\n376\n00:22:25.600 --> 00:22:27.770\nWe should get write, read, write, read.\n\n377\n00:22:27.770 --> 00:22:29.880\nLet's see if it works.\n\n378\n00:22:29.880 --> 00:22:30.970\nThere's the previous one.\n\n379\n00:22:30.970 --> 00:22:32.670\nWe'll ignore the Json thing.\n\n380\n00:22:34.580 --> 00:22:38.220\nAnd we'll say python3 books.py.\n\n381\n00:22:38.220 --> 00:22:42.900\nWriter object is not callable, and wait,\n&gt;&gt; I think I see it.\n\n382\n00:22:42.900 --> 00:22:43.820\n&gt;&gt; Where it it, Lana?\n\n383\n00:22:43.820 --> 00:22:48.100\n&gt;&gt; Is that in line,\nyou have self.write = Writer.\n\n384\n00:22:48.100 --> 00:22:49.830\nShouldn't that be writer?\n\n385\n00:22:49.830 --> 00:22:50.860\n&gt;&gt; Yep.\n\n386\n00:22:50.860 --> 00:22:51.380\n&gt;&gt; Yay!\n\n387\n00:22:51.380 --> 00:22:53.220\n&gt;&gt; Pair programming is important.\n\n388\n00:22:53.220 --> 00:22:55.050\nThat's good to know.\n\n389\n00:22:55.050 --> 00:22:55.890\nSee, I could have been here for\n\n390\n00:22:55.890 --> 00:22:58.620\nthe rest of the day if it wasn't-\n&gt;&gt; I was just going to let you keep going\n\n391\n00:22:58.620 --> 00:23:01.170\nto see if you caught it\nbefore I stepped in.\n\n392\n00:23:01.170 --> 00:23:03.050\n&gt;&gt; Vaughn's like I'm going\nto let you crash and\n\n393\n00:23:03.050 --> 00:23:05.600\nburn before I swoop in to save the day.\n\n394\n00:23:05.600 --> 00:23:07.110\n&gt;&gt; Well, I've got to have my moment.\n\n395\n00:23:07.110 --> 00:23:07.610\nCome on.\n&gt;&gt; Yeah.\n\n396\n00:23:07.610 --> 00:23:08.690\nExactly, exactly.\n\n397\n00:23:08.690 --> 00:23:10.140\nSo thanks for that Vaughn,\n\n398\n00:23:10.140 --> 00:23:13.340\nbecause ultimately what we would\nhave is a property named write and\n\n399\n00:23:13.340 --> 00:23:14.980\nalso a method named write.\n\n400\n00:23:14.980 --> 00:23:19.520\nAnd that's bad.\nSo boom and\n\n401\n00:23:19.520 --> 00:23:22.650\nI get the exact same output,\nnothing's changed.\n\n402\n00:23:22.650 --> 00:23:25.230\nIt doesn't look like anything changed.\n\n403\n00:23:25.230 --> 00:23:27.680\nAnd if someone was reading\nthe book class and\n\n404\n00:23:27.680 --> 00:23:30.590\nI made this change,\nthey would be none the wiser.\n\n405\n00:23:30.590 --> 00:23:33.760\nBut one of the really nice things\n\n406\n00:23:33.760 --> 00:23:36.780\nis I can test the writer class\nindependently of the book.\n\n407\n00:23:36.780 --> 00:23:39.810\nI don't have to test the book to\nsee if the writer works anymore.\n\n408\n00:23:39.810 --> 00:23:47.060\nI can look at the writer class, and I can\nuse it in other instances, even by itself.\n\n409\n00:23:47.060 --> 00:23:52.820\nPreviously, I might have been able to\ndo that, but there was no guarantee.\n\n410\n00:23:52.820 --> 00:23:55.029\nLet's uncomment this, this writable.\n\n411\n00:23:57.912 --> 00:24:02.895\nI made the assumption that\nself.file path would be available.\n\n412\n00:24:02.895 --> 00:24:03.860\nRight, well,\n\n413\n00:24:03.860 --> 00:24:08.630\nthere's nothing in the Writeable class\nthat sets the filepath attribute.\n\n414\n00:24:10.130 --> 00:24:15.550\nThat's a problem, if it doesn't exist then\nwrite fails and write will always fail.\n\n415\n00:24:15.550 --> 00:24:22.650\nHowever, now that I have it as\na separate class, down here as Writer.\n\n416\n00:24:22.650 --> 00:24:27.210\nIf I don't provide a file path,\nit will stop at that point and\n\n417\n00:24:27.210 --> 00:24:31.180\nsay, hey, there's no file path provided,\nyou should go fix that.\n\n418\n00:24:31.180 --> 00:24:36.540\nSo it's a little clear in addition to\nmy code is a little more transparent,\n\n419\n00:24:36.540 --> 00:24:41.250\nI think, about where things are going,\nhow it's being used.\n\n420\n00:24:41.250 --> 00:24:46.350\nA little more code for transparency and\nbeing explicit, that's okay.\n\n421\n00:24:46.350 --> 00:24:50.450\nWe just don't want to be copying and\npasting a great deal of code everywhere.\n\n422\n00:24:50.450 --> 00:24:52.920\nNow, what about that JSON thing?\n\n423\n00:24:52.920 --> 00:24:54.269\nWell, we got that last one,\n\n424\n00:24:54.269 --> 00:24:56.810\nwe can actually write\nan object that will do that.\n\n425\n00:24:56.810 --> 00:25:01.440\nSo JSONSerializer, there we go.\n\n426\n00:25:01.440 --> 00:25:05.324\nPhew, it was getting iffy.\n\n427\n00:25:05.324 --> 00:25:07.375\n&gt;&gt; [LAUGH]\n&gt;&gt; And actually,\n\n428\n00:25:07.375 --> 00:25:11.950\nthe JSONSerializer it\ndoesn't need a file path.\n\n429\n00:25:11.950 --> 00:25:14.430\nIt's just looking at\nthe intrinsic object itself.\n\n430\n00:25:14.430 --> 00:25:18.623\nIt's looking at whatever it is it needs a,\nlet's say,\n\n431\n00:25:18.623 --> 00:25:23.900\nto_json method.\n\n432\n00:25:23.900 --> 00:25:25.840\nAnd what is it gonna do?\n\n433\n00:25:25.840 --> 00:25:31.103\nWell, it is going to take an object and\n\n434\n00:25:31.103 --> 00:25:36.041\nprint out json.dumps of the object\n\n435\n00:25:38.571 --> 00:25:43.550\nYeah, there we go, we should be good.\n\n436\n00:25:43.550 --> 00:25:45.360\nI was getting ahead of\nmyself there a little bit.\n\n437\n00:25:46.520 --> 00:25:52.788\nSo if I wanted to add\na to_json method on the Book,\n\n438\n00:25:52.788 --> 00:26:00.270\nwell, I need to say\nself.serializer = JSONSerializer.\n\n439\n00:26:03.180 --> 00:26:06.960\nAnd then say to_json(self) and\n\n440\n00:26:08.870 --> 00:26:18.340\nthen I'm gonna say\nself.serializer.to_json(self.__di__).\n\n441\n00:26:18.340 --> 00:26:22.580\nSo I'm just passing those properties in\nan object, particularly a dictionary.\n\n442\n00:26:22.580 --> 00:26:25.950\nI'm using a dictionary here because I\nknow this is gonna play well with JSON,\n\n443\n00:26:27.290 --> 00:26:29.180\nhowever, there is one problem.\n\n444\n00:26:29.180 --> 00:26:33.160\nI don't have the JSON module\nbecause I commented it out up here.\n\n445\n00:26:33.160 --> 00:26:36.430\nSo I'm gonna come to the top and\nimport it appropriately.\n\n446\n00:26:36.430 --> 00:26:38.218\nIf I need it in this file,\n\n447\n00:26:38.218 --> 00:26:42.413\nI should import it at the top\ninstead of within the method.\n\n448\n00:26:42.413 --> 00:26:47.416\nThat's just common convention,\nand I do need a space here.\n\n449\n00:26:47.416 --> 00:26:51.501\nAnd let's see if to_json\nworks as it did before.\n\n450\n00:26:53.911 --> 00:26:58.945\nUh-uh, to_json missing one\nrequired positional argument,\n\n451\n00:26:58.945 --> 00:27:03.430\nhm, obj, so let's go do\na little bit of debugging here.\n\n452\n00:27:04.760 --> 00:27:08.670\nSerializer, you actually have\nto construct the object.\n\n453\n00:27:08.670 --> 00:27:12.860\nDon't forget the parentheses there,\nbecause otherwise things won't work.\n\n454\n00:27:12.860 --> 00:27:17.345\nSo here we go, Object of type\nReader is not JSON serializable.\n\n455\n00:27:17.345 --> 00:27:21.715\nUh-oh, what happened?\n\n456\n00:27:21.715 --> 00:27:25.540\nMm, we ran into a problem and\nwhat problem is that?\n\n457\n00:27:27.160 --> 00:27:31.000\nSee this reader and\nwriter and JSON serializer?\n\n458\n00:27:31.000 --> 00:27:34.760\nIt's actually gonna try to send all\nof that information over as well.\n\n459\n00:27:34.760 --> 00:27:40.278\nSo we can't quite do that,\nbut what could we do instead?\n\n460\n00:27:40.278 --> 00:27:44.921\nLet's just say we send over,\n\n461\n00:27:44.921 --> 00:27:48.264\njust to be explicit,\n\n462\n00:27:48.264 --> 00:27:54.395\na dictionary of title=self.title,\n\n463\n00:27:54.395 --> 00:27:59.784\nfilepath=self.filepath, and\n\n464\n00:27:59.784 --> 00:28:03.886\nauthor=self.author.\n\n465\n00:28:05.608 --> 00:28:09.510\nAnd that's a long line so\nlet me bring that back here.\n\n466\n00:28:09.510 --> 00:28:14.421\nI'm doing all of this in line, you could\ndefinitely pull this out into the data.\n\n467\n00:28:14.421 --> 00:28:19.210\nSo I'm sending over a dictionary with just\nthose three elements because I know it is\n\n468\n00:28:19.210 --> 00:28:23.570\nnot JSON serializable for reader,\nwriter and JSONSerializer.\n\n469\n00:28:24.900 --> 00:28:29.082\nSo notice the to_json, I was able to make\nthat change without actually affecting\n\n470\n00:28:29.082 --> 00:28:32.210\nthe to_json that's happening\nin the JSONSerializer.\n\n471\n00:28:32.210 --> 00:28:38.710\nSo I have that decoupling which is nice,\nit helps me keep maintainable code.\n\n472\n00:28:38.710 --> 00:28:43.490\nAlso, if I have to make this change,\npeople are none the wiser, it still works.\n\n473\n00:28:43.490 --> 00:28:46.498\nThat's that extraction,\nthat encapsulation of behavior.\n\n474\n00:28:46.498 --> 00:28:51.110\nI know to_json is a method and\nit works, that's all I needed to know.\n\n475\n00:28:51.110 --> 00:28:55.470\nWell, I'm assuming it works,\nlet's see if it actually does work.\n\n476\n00:28:55.470 --> 00:28:57.230\nCross your fingers, Vaughn.\n\n477\n00:28:57.230 --> 00:28:58.690\n&gt;&gt; I'm waiting.\n\n478\n00:28:58.690 --> 00:29:02.540\n&gt;&gt; And it is in fact behaving\nexactly the same now.\n\n479\n00:29:02.540 --> 00:29:05.070\nBut instead of inheriting,\n\n480\n00:29:05.070 --> 00:29:10.760\nI have you use objects inside of the Book\nobject, to proxy out those behaviors.\n\n481\n00:29:10.760 --> 00:29:15.524\nThe Book has now become like a supervisor\nthat is delegating responsibilities\n\n482\n00:29:15.524 --> 00:29:19.491\ninstead of taking on all of\nthe responsibilities for itself, and\n\n483\n00:29:19.491 --> 00:29:21.675\nthat's an important note to make.\n\n484\n00:29:21.675 --> 00:29:26.590\nSo composition is an alternative to\ninheritance, and in real Projects.\n\n485\n00:29:26.590 --> 00:29:30.060\nYou'll have a little bit of inheritance,\na little bit of composition, and\n\n486\n00:29:30.060 --> 00:29:34.410\nsometimes inheritance for\nsimple things fulfills all your needs.\n\n487\n00:29:34.410 --> 00:29:36.300\nYou don't really need composition or\n\n488\n00:29:36.300 --> 00:29:38.810\nmaybe you find out that you're\nusing inheritance too much.\n\n489\n00:29:38.810 --> 00:29:43.380\nYou can go back and change it to be\na composition of different objects,\n\n490\n00:29:43.380 --> 00:29:47.230\njust like we did here, so\ndon't worry if you're like no,\n\n491\n00:29:47.230 --> 00:29:50.350\nI've done something bad,\nit's always fixable.\n\n492\n00:29:50.350 --> 00:29:55.051\nBut I think that kind of sums it up for\nour extending and alternative to extending\n\n493\n00:29:55.051 --> 00:29:58.573\nvine but I do know what we're\ngonna be using this coming up.\n\n494\n00:29:58.573 --> 00:29:59.403\n&gt;&gt; Yeah, I definitely can see that.\n\n495\n00:29:59.403 --> 00:30:03.999\nSo we saw a lot of great examples about\nsingle inheritance, multiple inheritance.\n\n496\n00:30:03.999 --> 00:30:08.052\nWe did some proper mixing,\nwe avoided some death-y diamonds.\n\n497\n00:30:08.052 --> 00:30:08.577\n&gt;&gt; Yeah.\n\n498\n00:30:08.577 --> 00:30:11.600\n&gt;&gt; [LAUGH] And\nwe made sure that we always stayed DRY.\n\n499\n00:30:11.600 --> 00:30:15.758\nAnd I'm actually pretty proud of myself\nthat I caught a mistake in your code.\n\n500\n00:30:15.758 --> 00:30:18.087\nYeah.\n&gt;&gt; I got to correct it properly, so\n\n501\n00:30:18.087 --> 00:30:19.660\nI know I'm catching on.\n\n502\n00:30:19.660 --> 00:30:22.560\nI hope y'all are catching on too so\nplease stay tuned.\n\n503\n00:30:22.560 --> 00:30:25.710\nAnd signing off for\nITProTV, I'm Vaughan Smith.\n\n504\n00:30:25.710 --> 00:30:26.574\n&gt;&gt; And I'm Justin Dennison.\n\n505\n00:30:26.574 --> 00:30:28.086\n&gt;&gt; See you next time.\n\n506\n00:30:28.086 --> 00:30:34.944\n[MUSIC]\n\n507\n00:30:34.944 --> 00:30:36.715\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "208839105"
        },
        {
          "description": "In this episode, Vonne and Justin build a simple text based game called MonsterSlash using Object-Oriented Python. They cover the game design and establish the actors in the game – the player and the enemy.",
          "length": "1329",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-5-1-lets_build_it_monterslash_v.1-031017-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-5-1-lets_build_it_monterslash_v.1-031017-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-5-1-lets_build_it_monterslash_v.1-031017-1-sm.jpg",
          "title": "Lets Build It MonsterSlash v.1",
          "transcript": "WEBVTT\n\n1\n00:00:01.630 --> 00:00:06.387\n&gt;&gt; [CROSSTALK]\n\n2\n00:00:06.387 --> 00:00:08.428\n[MUSIC]\n\n3\n00:00:08.428 --> 00:00:10.892\nYou're watching ITProTV.\n\n4\n00:00:12.950 --> 00:00:15.406\nHello, and\nwelcome to another episode of ITProTV.\n\n5\n00:00:15.406 --> 00:00:18.235\nI'm your host Vonne Smith,\nand today we going to\n\n6\n00:00:18.235 --> 00:00:23.073\nbe applying everything we've been learning\nabout in our object oriented python.\n\n7\n00:00:23.073 --> 00:00:26.105\nWe're gonna be building something,\nwe're gonna be building a game, and\n\n8\n00:00:26.105 --> 00:00:28.260\nhere to help us with that is Justin,\nhow are you?\n\n9\n00:00:28.260 --> 00:00:28.881\n&gt;&gt; I am doing well, Vonne.\n\n10\n00:00:28.881 --> 00:00:30.280\nHow are you today?\n\n11\n00:00:30.280 --> 00:00:33.140\n&gt;&gt; I'm good, I'm ready to build this\n&gt;&gt; This thing we're,\n\n12\n00:00:33.140 --> 00:00:35.030\nmonster slash, what is this?\n\n13\n00:00:35.030 --> 00:00:36.310\nI'm little scared.\n\n14\n00:00:36.310 --> 00:00:40.730\n&gt;&gt; Yeah, yeah I, titling is hard, that's\nthe first thing that you should know.\n\n15\n00:00:40.730 --> 00:00:42.720\nBut what are we actually gonna build,\nright?\n\n16\n00:00:42.720 --> 00:00:43.873\nSo what are worried about?\n\n17\n00:00:43.873 --> 00:00:47.229\nWell, first off, we're gonna apply some\nof those object oriented principles, and\n\n18\n00:00:47.229 --> 00:00:49.100\nactually build an object oriented game.\n\n19\n00:00:49.100 --> 00:00:52.693\nTo reinforce some of those things\nthat we've seen in previous episodes.\n\n20\n00:00:52.693 --> 00:00:57.130\nIf you haven't taken a watch of those,\nthen definitely go back and do that.\n\n21\n00:00:57.130 --> 00:00:59.480\nWe're gonna build essentially a hack and\nslash.\n\n22\n00:00:59.480 --> 00:01:01.610\nIt's a very simple game engine.\n\n23\n00:01:01.610 --> 00:01:04.000\nIt's no graphics, nothing.\n\n24\n00:01:04.000 --> 00:01:09.550\nIt's a reduced, turn based, figure it out,\nyou get one turn, it's done.\n\n25\n00:01:10.820 --> 00:01:13.240\nAnd then, we're going to be going\nthrough a couple iterations.\n\n26\n00:01:13.240 --> 00:01:14.685\nSo this is our first iteration.\n\n27\n00:01:14.685 --> 00:01:19.110\nWe'll add complexity, but I want to\nillustrate how the design process works,\n\n28\n00:01:19.110 --> 00:01:20.760\nhow the thought process works.\n\n29\n00:01:20.760 --> 00:01:23.240\nHow we go through building\nsomething like this,\n\n30\n00:01:23.240 --> 00:01:27.340\nbecause a lot of times when I see\nlarge projects, I get intimidated.\n\n31\n00:01:28.670 --> 00:01:32.970\nYou may very well get intimidated if you\nlook at a lot of code all at once, but\n\n32\n00:01:32.970 --> 00:01:34.290\nthat's not how it started out.\n\n33\n00:01:34.290 --> 00:01:40.100\nThat's how it is now, and originally\nit was probably something very similar.\n\n34\n00:01:40.100 --> 00:01:44.284\nSo we're gonna go through that iterative\nprocess that a lot of developers will go\n\n35\n00:01:44.284 --> 00:01:48.108\nthrough, and, well, we'll just see\nhow it changes over time, right?\n\n36\n00:01:48.108 --> 00:01:51.331\nCuz it may be that we decide to\nadd a lot to the game logic,\n\n37\n00:01:51.331 --> 00:01:54.430\nor maybe we add a bunch of characters,\nor maybe both.\n\n38\n00:01:54.430 --> 00:01:56.420\nSo we'll just have to see how it goes.\n\n39\n00:01:56.420 --> 00:02:00.761\n&gt;&gt; Okay, so, it doesn't sound as scary as\nI might've thought with a monster slash.\n\n40\n00:02:00.761 --> 00:02:04.090\nThere's no gore,\nwe're just gonna be just typing away.\n\n41\n00:02:04.090 --> 00:02:06.140\n&gt;&gt; Yeah, yeah.\n&gt;&gt; And I mean, yeah, code can be scary,\n\n42\n00:02:06.140 --> 00:02:08.493\nand I'm sure we're going to\nend up with a lot of code, but\n\n43\n00:02:08.493 --> 00:02:12.050\nyou're gonna walk us through it, and we\nwon't be scared, and it's gonna be great.\n\n44\n00:02:12.050 --> 00:02:15.460\nSo we should probably talk about\nwhat is this game going to do.\n\n45\n00:02:15.460 --> 00:02:20.790\nLike the storyboard, who is the character,\nwho is the monster, what are we doing?\n\n46\n00:02:20.790 --> 00:02:23.640\n&gt;&gt; So Vonne, we're working on version one.\n\n47\n00:02:23.640 --> 00:02:28.809\nReally we should probably call it Version\n0.001, or something of that nature.\n\n48\n00:02:28.809 --> 00:02:30.230\nIt's very simple.\n\n49\n00:02:30.230 --> 00:02:34.180\nBut there's some things that I sat down,\nand I was like what would I want?\n\n50\n00:02:34.180 --> 00:02:39.245\nWhat is the simplest thing that I could\nmake that would achieve object-oriented\n\n51\n00:02:39.245 --> 00:02:43.576\nprogramming principles, and\nI would be able to just make it happen?\n\n52\n00:02:43.576 --> 00:02:45.984\nWell, I want a player that\ncan attack an enemy, and\n\n53\n00:02:45.984 --> 00:02:49.290\nthat enemy is going to be a monster,\nbut I'm going to keep it generic.\n\n54\n00:02:50.380 --> 00:02:52.230\nI wanna have a player that has a name and\na level.\n\n55\n00:02:52.230 --> 00:02:54.970\nThat's the only thing that I care\nabout for the player, right?\n\n56\n00:02:54.970 --> 00:02:57.654\nBut if you notice there,\nI'm already thinking about the design.\n\n57\n00:02:57.654 --> 00:03:04.208\nSo I'm using video games that I played\nin the past to lead my design choices.\n\n58\n00:03:04.208 --> 00:03:08.321\nSo I've attacked an enemy,\nI have a name and a level, and\n\n59\n00:03:08.321 --> 00:03:12.160\nI want that attack power\nwhenever I attack an enemy.\n\n60\n00:03:12.160 --> 00:03:14.450\nI want it to be based on a level, right?\n\n61\n00:03:14.450 --> 00:03:19.904\nLevels should change, and then when I\nstart the game, I should have an intro.\n\n62\n00:03:19.904 --> 00:03:22.070\nRight, it's gonna be a text-based game, so\n\n63\n00:03:22.070 --> 00:03:25.410\nI need something to let me know that\nI'm getting ready to play, right.\n\n64\n00:03:25.410 --> 00:03:29.030\nThere's the ready Player 1,\nsomething of that nature.\n\n65\n00:03:29.030 --> 00:03:34.780\nAnd then when I encounter an enemy, I can\nhave a list of options of what I wanna do.\n\n66\n00:03:34.780 --> 00:03:38.110\nAnd there may be other things that\ncome up that I wanna get done.\n\n67\n00:03:38.110 --> 00:03:42.961\nBut that list of options, I wanna attack,\nrun, and then be able to pass, right?\n\n68\n00:03:42.961 --> 00:03:45.040\nI wanna pass my turn away.\n\n69\n00:03:45.040 --> 00:03:49.400\nAnd then, when I run,\nI do want the game to delay a little bit.\n\n70\n00:03:49.400 --> 00:03:53.251\nAnd finally, when I pass,\nif there are multiple enemies,\n\n71\n00:03:53.251 --> 00:03:55.570\nI may encounter a different enemy.\n\n72\n00:03:55.570 --> 00:03:59.160\nBut, I like to have that pass and\nthat run a little different,\n\n73\n00:03:59.160 --> 00:04:02.710\nbecause maybe the pass morphs\ninto something else, right?\n\n74\n00:04:02.710 --> 00:04:06.000\nBut if you pass,\nyou still have a chance of being attacked.\n\n75\n00:04:06.000 --> 00:04:07.180\nWe won't start there.\n\n76\n00:04:07.180 --> 00:04:08.410\nThat's just the ultimate goal.\n\n77\n00:04:08.410 --> 00:04:13.120\nIt's kinda minimal, and that's where\nwe're gonna take it from here.\n\n78\n00:04:13.120 --> 00:04:14.150\n&gt;&gt; This actually sounds like fun.\n\n79\n00:04:14.150 --> 00:04:18.230\nI can actually see games that I've played\nin the past, from what you're saying.\n\n80\n00:04:18.230 --> 00:04:21.280\nSo I've got a visual in my head,\nand now let's just jump in.\n\n81\n00:04:21.280 --> 00:04:22.220\nI'm excited.\nLet's go.\n\n82\n00:04:22.220 --> 00:04:25.220\n&gt;&gt; Yep, so the very first thing we got to\ndo is we got to get our project set up,\n\n83\n00:04:25.220 --> 00:04:28.750\nwe gotta start our planning, and we're\ngonna use some of this Python interplay.\n\n84\n00:04:28.750 --> 00:04:29.780\nWe won't have just one file.\n\n85\n00:04:29.780 --> 00:04:31.940\nWe'll have a couple of files, and\n\n86\n00:04:31.940 --> 00:04:34.490\nwe'll have a couple of things\nin each of those files.\n\n87\n00:04:34.490 --> 00:04:36.362\nBut we're gonna do this interatively, so\n\n88\n00:04:36.362 --> 00:04:38.755\nit's not gonna be me typing\na bunch of code all at once.\n\n89\n00:04:38.755 --> 00:04:41.625\nIt's gonna be a little bit of code,\na little bit of testing,\n\n90\n00:04:41.625 --> 00:04:45.790\nsee how things work out, reason about it,\nand see if we're achieving our goals.\n\n91\n00:04:45.790 --> 00:04:47.560\nSo, let's go ahead and dive in here.\n\n92\n00:04:47.560 --> 00:04:49.790\nI have my command line open.\n\n93\n00:04:49.790 --> 00:04:54.260\nAgain, that's command prompt,\nterminal, terminal emulator,\n\n94\n00:04:54.260 --> 00:04:57.130\nsomething of that nature, and\nI am in my home directory.\n\n95\n00:04:57.130 --> 00:04:59.780\nI wanna go to the desktop,\nI'm just gonna keep this on my desktop.\n\n96\n00:04:59.780 --> 00:05:03.370\nEasy to find,\neverybody has a desktop of some sort, and\n\n97\n00:05:03.370 --> 00:05:04.970\nthen what do I have on the desktop?\n\n98\n00:05:04.970 --> 00:05:07.910\nWell, I have a few folders, but\nI'm gonna make a new folder and\n\n99\n00:05:07.910 --> 00:05:12.830\nI'm gonna cal it monster_slash,\nmonster underscore slash.\n\n100\n00:05:12.830 --> 00:05:13.821\nAnd there we go.\n\n101\n00:05:13.821 --> 00:05:18.483\nAnd I'm going to hop inside that folder,\nand for now all I want to do is I,\n\n102\n00:05:18.483 --> 00:05:21.935\nI want to work on the players for\na little bit, right?\n\n103\n00:05:21.935 --> 00:05:25.673\nI want to work on the enemy and\nthe player, start developing those out,\n\n104\n00:05:25.673 --> 00:05:28.303\nbecause it's really hard to code a game,\nright?\n\n105\n00:05:28.303 --> 00:05:32.060\nThe actual mechanics of the game\nif I don't have the players.\n\n106\n00:05:32.060 --> 00:05:34.330\nImagine booting up one of\nyour favorite games, and\n\n107\n00:05:34.330 --> 00:05:36.670\nthen all of the characters are gone.\n\n108\n00:05:36.670 --> 00:05:40.410\nWell it's just a bunch of scenery\n[LAUGH] that plays for a long time.\n\n109\n00:05:40.410 --> 00:05:41.900\nSo we're gonna start there.\n\n110\n00:05:41.900 --> 00:05:43.557\nSo what am I gonna call those?\n\n111\n00:05:43.557 --> 00:05:46.740\nI'm gonna say,\nwell those are actors, right?\n\n112\n00:05:46.740 --> 00:05:51.830\nThey are playing into this overall story.\n\n113\n00:05:51.830 --> 00:05:54.340\nIt's not a very deep story, mind you.\n\n114\n00:05:54.340 --> 00:05:55.830\nBut, we're going to start with actors.\n\n115\n00:05:55.830 --> 00:05:58.230\nAnd then from there I'm going\nto open this up in Adam.\n\n116\n00:05:58.230 --> 00:06:01.670\nSo Adam dot and\nthat will open up the current directory.\n\n117\n00:06:01.670 --> 00:06:07.620\nAnd hopefully it opens in the right,\nI don't know why OS X does this sometimes.\n\n118\n00:06:07.620 --> 00:06:11.260\nIt actually sends me to the opposite\ndesktop of where Adam is.\n\n119\n00:06:11.260 --> 00:06:11.960\nWho knows?\n\n120\n00:06:11.960 --> 00:06:15.690\nBut it's there, so here's actors.py.\n\n121\n00:06:15.690 --> 00:06:16.800\nThere's nothing in it.\n\n122\n00:06:16.800 --> 00:06:20.168\nWe're good to go, and\nall I have is an empty, or\n\n123\n00:06:20.168 --> 00:06:23.390\nexcuse me a folder with\na single actors.py.\n\n124\n00:06:23.390 --> 00:06:25.054\nAnd what are we gonna do?\n\n125\n00:06:25.054 --> 00:06:29.880\nWell, I want a player that has a level and\na name, and\n\n126\n00:06:29.880 --> 00:06:32.340\nI want to be able to interact\nwith that player, right?\n\n127\n00:06:32.340 --> 00:06:33.980\nI have this player object.\n\n128\n00:06:33.980 --> 00:06:36.530\nSo, that's probably a good place to start.\n\n129\n00:06:36.530 --> 00:06:39.510\nIs it possible that I\nneed a bunch of players?\n\n130\n00:06:39.510 --> 00:06:40.330\nSure, right?\n\n131\n00:06:40.330 --> 00:06:44.010\nMaybe I expand this game later on, and\nI need to be able to create a bunch of\n\n132\n00:06:44.010 --> 00:06:47.870\nplayers that have names and levels,\nbut they need to be independent.\n\n133\n00:06:47.870 --> 00:06:52.180\nWell, that's a good place for\na bunch of objects, right?\n\n134\n00:06:52.180 --> 00:06:54.890\nAnd in order to reproduce,\nwe create objects that have\n\n135\n00:06:54.890 --> 00:06:58.320\nsimilar sets of behavior,\nI encapsulate that in a class.\n\n136\n00:06:58.320 --> 00:07:00.920\nSo I'm gonna create a player class.\n\n137\n00:07:02.030 --> 00:07:07.140\nSo player, and well,\nif I know that it needs a name and\n\n138\n00:07:07.140 --> 00:07:11.620\na level, then well,\nthe double underscore init or\n\n139\n00:07:11.620 --> 00:07:14.560\nthe dunder init method,\nwill be setting those up for me.\n\n140\n00:07:14.560 --> 00:07:18.464\nSo, self.name equals name, and\n\n141\n00:07:18.464 --> 00:07:22.265\nthen self.level equals level.\n\n142\n00:07:22.265 --> 00:07:26.720\nAll right, well, I know I'm going to be\ntesting this, so it's probably good to go\n\n143\n00:07:26.720 --> 00:07:31.550\nahead and add a dunder repr method,\nand maybe even a dunder string method.\n\n144\n00:07:31.550 --> 00:07:34.520\nBut we'll start with dunder repr,\n\n145\n00:07:34.520 --> 00:07:36.870\ncuz I'm gonna play around\nin the repr a little bit.\n\n146\n00:07:36.870 --> 00:07:40.090\nSo repr stands for representation.\n\n147\n00:07:40.090 --> 00:07:42.370\nI just think repr is fun to say.\n\n148\n00:07:42.370 --> 00:07:47.090\nSo what is the representation that\nI wanna see printed to the screen?\n\n149\n00:07:47.090 --> 00:07:51.091\nWell, I'm gonna return, and\nI'm gonna say it is a player.\n\n150\n00:07:51.091 --> 00:07:57.474\nAnd I'm just gonna say\nthe name at level blank.\n\n151\n00:07:57.474 --> 00:07:59.512\nAnd boom.\n\n152\n00:07:59.512 --> 00:08:05.759\n.format Self.name, self.level.\n\n153\n00:08:05.759 --> 00:08:07.665\nAnd I've kind of run off the screen\nhere a little bit, Vonne.\n\n154\n00:08:07.665 --> 00:08:08.370\n&gt;&gt; Mm-hm.\n\n155\n00:08:08.370 --> 00:08:10.720\n&gt;&gt; But I'm gonna break that around.\n\n156\n00:08:10.720 --> 00:08:16.890\nAnd actually, if you want to, you can\ndo continuations by adding parentheses.\n\n157\n00:08:16.890 --> 00:08:19.470\nSo I'm gonna-\n&gt;&gt; I'm gonna stop you really quick cuz\n\n158\n00:08:19.470 --> 00:08:20.755\nI think you misspelled level.\n\n159\n00:08:20.755 --> 00:08:25.400\n&gt;&gt; [SOUND]\n&gt;&gt; Where, I have, I have.\n\n160\n00:08:25.400 --> 00:08:26.200\n&gt;&gt; There you go.\n\n161\n00:08:26.200 --> 00:08:27.230\n&gt;&gt; There you go, I found it.\n\n162\n00:08:27.230 --> 00:08:29.320\nI woulda found it eventually Von,\nI woulda found it.\n\n163\n00:08:29.320 --> 00:08:31.570\n&gt;&gt; I'm just here to help,\nto keep you in check.\n\n164\n00:08:31.570 --> 00:08:34.628\n&gt;&gt; Yeah well pair programming\nis a valid use case.\n\n165\n00:08:34.628 --> 00:08:39.586\nSo here we go, I know have this\nnested between parentheses, so\n\n166\n00:08:39.586 --> 00:08:42.670\nI can all see it at once\n&gt;&gt; Now this isn't something you\n\n167\n00:08:42.670 --> 00:08:46.750\nnecessarily have to do or it's more for\nvisual presentation, right?\n\n168\n00:08:46.750 --> 00:08:49.260\nI have very large text on my screen.\n\n169\n00:08:49.260 --> 00:08:51.550\nSo I wanna keep it all kind of compact,\nso I can read it at once.\n\n170\n00:08:51.550 --> 00:08:53.290\nI don't have to scroll left and right.\n\n171\n00:08:53.290 --> 00:08:55.840\nSo there's our player class.\n\n172\n00:08:55.840 --> 00:08:57.000\nThat's a good start.\n\n173\n00:08:57.000 --> 00:09:01.430\nNow I do know that players are gonna\ninteract with different enemies.\n\n174\n00:09:01.430 --> 00:09:05.180\nNow I'm saying enemy Because\nmaybe it's monsters, but\n\n175\n00:09:05.180 --> 00:09:07.390\nmaybe later on I want to\nadd other enemies right.\n\n176\n00:09:07.390 --> 00:09:10.590\nLike robots, or, so I'm trying to think.\n\n177\n00:09:10.590 --> 00:09:14.923\nWhat are,\nwhat's something that all enemies can do?\n\n178\n00:09:14.923 --> 00:09:16.142\nHow would they behave?\n\n179\n00:09:16.142 --> 00:09:20.606\nWell my enemy is gonna be a kind right,\nis it an ogre, an imp,\n\n180\n00:09:20.606 --> 00:09:23.540\na troll, things of that nature.\n\n181\n00:09:23.540 --> 00:09:25.440\nBut it will also have a level, right.\n\n182\n00:09:25.440 --> 00:09:28.780\nIf you've ever played anything\nthat has a battle system, right,\n\n183\n00:09:28.780 --> 00:09:32.610\nthis is a level 10 ogre and\nI'm a level 9 human.\n\n184\n00:09:32.610 --> 00:09:36.000\nI hope I have a weapon,\nwe're not having weapons yet.\n\n185\n00:09:36.000 --> 00:09:41.900\nThen well, otherwise things are bad for\nme, cuz level 10 ogre's bad.\n\n186\n00:09:41.900 --> 00:09:44.030\nSo I'm gonna scroll and\nsay I have an enemy.\n\n187\n00:09:44.030 --> 00:09:46.050\nAnd what is the enemy?\n\n188\n00:09:47.210 --> 00:09:54.602\nWell, when I construct an enemy,\nI wanna know its kind and its level.\n\n189\n00:09:54.602 --> 00:09:59.170\nWell, I'm just gonna set\nthat up self.kind=kind.\n\n190\n00:09:59.170 --> 00:10:01.654\nAnd let me add some over scroll here.\n\n191\n00:10:04.378 --> 00:10:05.720\nThere we go.\n\n192\n00:10:05.720 --> 00:10:09.890\nJust so I don't have things tucked\nat the bottom of the screen.\n\n193\n00:10:09.890 --> 00:10:14.690\nAnd then I also want to\nsay self.level = level.\n\n194\n00:10:14.690 --> 00:10:15.470\nAnd there's our enemy.\n\n195\n00:10:15.470 --> 00:10:19.520\nI'm going to go ahead and add a def repr\nmethod, just so I know it will print out.\n\n196\n00:10:21.990 --> 00:10:22.800\nThere's repr.\n\n197\n00:10:24.360 --> 00:10:28.190\nAnd it's gonna take the self argument and\nreturn.\n\n198\n00:10:28.190 --> 00:10:31.845\nBut instead of returning player,\nI'm gonna say &lt;Enemy&gt;.\n\n199\n00:10:36.210 --> 00:10:37.490\nAnd just, you know what?\n\n200\n00:10:37.490 --> 00:10:41.090\nI'm not gonna put the level,\nwe'll keep it a secret.\n\n201\n00:10:42.280 --> 00:10:47.080\nI'm just gonna say the kind, right,\nso this would be enemy, troll, and\n\n202\n00:10:47.080 --> 00:10:48.020\nthat would be it.\n\n203\n00:10:48.020 --> 00:10:53.200\nWell, I'm now at a point that I can start\ndoing a little bit of testing, right.\n\n204\n00:10:53.200 --> 00:10:58.150\nSo let's do some tests, let's see if I can\nconstruct an enemy, construct a player,\n\n205\n00:10:58.150 --> 00:11:01.030\nand things are behaving like I expect.\n\n206\n00:11:01.030 --> 00:11:04.430\nSo just at the bottom of this file,\nlet's do a little bit of testing here.\n\n207\n00:11:06.520 --> 00:11:08.730\nAnd we're almost ready.\n\n208\n00:11:08.730 --> 00:11:14.250\nSo, I want to player, and\nwhat is the name of my player.\n\n209\n00:11:14.250 --> 00:11:16.370\nWell name is Hercule.\n\n210\n00:11:17.830 --> 00:11:18.330\nHercule.\n\n211\n00:11:21.320 --> 00:11:22.260\nHercules.\n\n212\n00:11:22.260 --> 00:11:23.670\nThere we go.\n\n213\n00:11:23.670 --> 00:11:25.530\nAnd what is the level?\n\n214\n00:11:25.530 --> 00:11:29.260\nWell, typically in games levels\nare always gonna start at one,\n\n215\n00:11:29.260 --> 00:11:33.140\nbut we will change that just to make\nsure that's all wired up correctly.\n\n216\n00:11:34.370 --> 00:11:35.530\nAnd I'm just gonna print out the player.\n\n217\n00:11:37.810 --> 00:11:42.508\nSo if we hop over back into\nthe terminal and I say python3,\n\n218\n00:11:44.978 --> 00:11:49.660\nactors.py, I have Hercules, player one.\n\n219\n00:11:49.660 --> 00:11:51.280\nSo there we go.\n\n220\n00:11:51.280 --> 00:11:52.300\nWe're good to go.\n\n221\n00:11:53.460 --> 00:11:55.440\n&gt;&gt; So Justin, if you don't mind\nme stopping you for a second,\n\n222\n00:11:55.440 --> 00:12:00.300\nI haven't seen you use that name before,\nthe dunder name.\n\n223\n00:12:00.300 --> 00:12:01.710\nIs that something new?\n\n224\n00:12:01.710 --> 00:12:02.680\nWhat is that?\n\n225\n00:12:02.680 --> 00:12:05.830\n&gt;&gt; So in previous episodes and\n\n226\n00:12:05.830 --> 00:12:08.470\nvarious other times, I just started coding\n&gt;&gt; All right,\n\n227\n00:12:08.470 --> 00:12:12.514\nthey started writing it was all good and\nit runs.\n\n228\n00:12:12.514 --> 00:12:17.120\nHowever, l know that\nam gonna use enemy and\n\n229\n00:12:17.120 --> 00:12:20.440\nplayer in other places,\nright in another file.\n\n230\n00:12:20.440 --> 00:12:25.270\nSo when l go to input those, if l don't do\nthis double underscore name equals double\n\n231\n00:12:25.270 --> 00:12:31.150\nunderscore main Then this code\nwould run every time I import it.\n\n232\n00:12:31.150 --> 00:12:35.698\nSo I would actually be creating\na player and printing out the player.\n\n233\n00:12:35.698 --> 00:12:41.220\nWell, why would I not want that to happen?\n\n234\n00:12:41.220 --> 00:12:45.600\nWell, that would be a weird side-effect\nof importing the enemy class and\n\n235\n00:12:45.600 --> 00:12:47.250\nthe player class in another file and\n\n236\n00:12:47.250 --> 00:12:51.360\nusing them Is I would have code running\nthat was unexpectedly running, that's bad.\n\n237\n00:12:53.270 --> 00:13:00.850\nSo this allows me to say only execute this\ncode if the file that's being executed,\n\n238\n00:13:00.850 --> 00:13:06.860\nright python3 actors.py,\nif that's actually being run by itself.\n\n239\n00:13:06.860 --> 00:13:11.290\nSo if I type this then\nthis code will execute.\n\n240\n00:13:11.290 --> 00:13:17.100\nHowever, if I were to hop into the REPL,\nlike so,\n\n241\n00:13:17.100 --> 00:13:21.513\nand I say, from actors import player,\n\n242\n00:13:21.513 --> 00:13:26.570\nnotice that it doesn't print out anything.\n\n243\n00:13:26.570 --> 00:13:31.910\nAnd that's because this is in the main\nmethod, or the main portion of the file.\n\n244\n00:13:31.910 --> 00:13:33.210\nSo it doesn't run when I import.\n\n245\n00:13:33.210 --> 00:13:35.010\nBut that's a good catch!\n\n246\n00:13:35.010 --> 00:13:36.870\nYou've got to keep me honest, Von.\n\n247\n00:13:36.870 --> 00:13:39.770\n&gt;&gt; So Jess it looks like we have\nour player and it works, but\n\n248\n00:13:39.770 --> 00:13:43.420\nwe need an antagonist to this story and\ncontinue our character building.\n\n249\n00:13:43.420 --> 00:13:45.220\nSo is that the next step?\n\n250\n00:13:45.220 --> 00:13:46.490\n&gt;&gt; Von, you're in my mind.\n\n251\n00:13:46.490 --> 00:13:48.520\nSo we've tested our player.\n\n252\n00:13:48.520 --> 00:13:51.720\nWe now need to make sure\nthat our enemy works.\n\n253\n00:13:51.720 --> 00:13:56.560\nSo while you were saying that I actually\ncleared out everything, got ready, so\n\n254\n00:13:56.560 --> 00:13:59.140\nwe can have all this nice\npretty space to print out.\n\n255\n00:13:59.140 --> 00:14:01.500\nSo let's go ahead and\nstart that testing process.\n\n256\n00:14:01.500 --> 00:14:03.760\nSo right below player I'm\ngonna create an enemy, and\n\n257\n00:14:03.760 --> 00:14:06.580\nwhat kind of enemy am I gonna make?\n\n258\n00:14:06.580 --> 00:14:11.320\nLet's see,\nI got let's just make an ogre, and\n\n259\n00:14:11.320 --> 00:14:17.090\nit is also of level 1 and\nI need to use my key word arguments.\n\n260\n00:14:17.090 --> 00:14:21.300\nQuick aside I could use this as positional\narguments the first thing being the kind\n\n261\n00:14:21.300 --> 00:14:23.140\nand second thing being the level.\n\n262\n00:14:23.140 --> 00:14:26.130\nI like using this key word\narguments where as a kind equals.\n\n263\n00:14:26.130 --> 00:14:28.300\nBecause the clarity is better.\n\n264\n00:14:28.300 --> 00:14:30.340\nAnd that's something I do and\na personal practice.\n\n265\n00:14:30.340 --> 00:14:34.900\nSo if you see other code it\nmay not always look like that.\n\n266\n00:14:34.900 --> 00:14:38.860\nSo the enemy, well I can print the enemy\nout and my repr method should cover that.\n\n267\n00:14:39.930 --> 00:14:45.613\nBut I also want to make sure that\nthe enemy's level prints out.\n\n268\n00:14:45.613 --> 00:14:48.220\nAnd well let's just\nsorta see what happens.\n\n269\n00:14:48.220 --> 00:14:50.130\nSo I have this cleared out.\n\n270\n00:14:50.130 --> 00:14:52.810\nJust to have a little\nmore real estate here.\n\n271\n00:14:52.810 --> 00:14:58.540\nAnd python3 actors and there we go I\nhave Hercules at level 1, Enemy: Ogre.\n\n272\n00:14:58.540 --> 00:15:01.730\nAnd then notice that level\n1 is printed out below.\n\n273\n00:15:01.730 --> 00:15:03.679\nSo our enemy class is working.\n\n274\n00:15:04.830 --> 00:15:07.620\n&gt;&gt; Well,\nwe've hit some of our goals, right?\n\n275\n00:15:07.620 --> 00:15:09.860\nI have a player that has a name and\na level.\n\n276\n00:15:09.860 --> 00:15:12.230\nI also have enemy that has kind and\na level.\n\n277\n00:15:13.440 --> 00:15:14.530\nWell, in order for\n\n278\n00:15:14.530 --> 00:15:18.680\nhem to be able to attack,\nwe're gonna compare those attach powers.\n\n279\n00:15:18.680 --> 00:15:23.990\nAnd I'm gonna make that pseudo random,\njust for a little spice.\n\n280\n00:15:23.990 --> 00:15:28.140\nSo let's go see if we can get that method\nworking for these individual pieces.\n\n281\n00:15:29.470 --> 00:15:33.850\nSo I'm gonna keep enemy and player,\neverything is gonna be good,\n\n282\n00:15:33.850 --> 00:15:35.010\nI may comment this out later.\n\n283\n00:15:36.250 --> 00:15:43.625\nBut for player what I want is to be\nable to find out the attack power\n\n284\n00:15:45.958 --> 00:15:51.301\nBy using the level of the player,\nbut randomly get either something\n\n285\n00:15:51.301 --> 00:15:56.752\nbetween a very small portion,\nall the way up to a very large portion.\n\n286\n00:15:56.752 --> 00:15:59.646\nSo I'm gonna simulate\nthat by saying return.\n\n287\n00:15:59.646 --> 00:16:05.470\nAnd well, I need somebody to get random So\nI'm gonna use the Python\n\n288\n00:16:05.470 --> 00:16:10.980\nstandard library and\nsay from random, import randint.\n\n289\n00:16:10.980 --> 00:16:12.800\nSo I want an integer value.\n\n290\n00:16:12.800 --> 00:16:15.840\nI want some number to some number, right?\n\n291\n00:16:15.840 --> 00:16:17.810\nSo if I say randint 1 comma 100,\n\n292\n00:16:17.810 --> 00:16:21.660\nI will get some random number between\n1 and 100 that is an integer.\n\n293\n00:16:21.660 --> 00:16:25.690\nSo it's a whole number, and\nthen I can multiply the level by that, and\n\n294\n00:16:25.690 --> 00:16:29.000\nthen get something between 1 and\n100 at level 1.\n\n295\n00:16:29.000 --> 00:16:32.767\nOr from level 50 to 5000 for level 50.\n\n296\n00:16:32.767 --> 00:16:34.838\nSo that gives me some variability, and\n\n297\n00:16:34.838 --> 00:16:38.310\nthat would actually more accurately\nsimulate a battle, right.\n\n298\n00:16:38.310 --> 00:16:39.340\nYou're not always at 100%.\n\n299\n00:16:39.340 --> 00:16:42.549\nSo let's see how that's gonna work out for\nus.\n\n300\n00:16:43.980 --> 00:16:48.472\nSo I'm going to randint 1 to\n\n301\n00:16:48.472 --> 00:16:52.980\n100 times self.level.\n\n302\n00:16:52.980 --> 00:16:55.000\nThat looks like it should work.\n\n303\n00:16:55.000 --> 00:16:59.400\nWe should probably test it before we go\non though because I'm trying something\n\n304\n00:17:00.560 --> 00:17:04.405\nnew and it may go horribly awry.\n\n305\n00:17:04.405 --> 00:17:08.314\nSo let's go down here and say,\nprint(player.get_attack_power()) and\n\n306\n00:17:08.314 --> 00:17:12.222\nnotice it is just like column, I'm gonna\nremove this print statement, just for\n\n307\n00:17:12.222 --> 00:17:14.042\na moment for clarity.\n\n308\n00:17:14.042 --> 00:17:19.120\nSo player.get_attack_power, it's just\ngonna return a number based on the level.\n\n309\n00:17:19.120 --> 00:17:23.100\nAnd now we're gonna start testing to\nsee if that level thing works out for\n\n310\n00:17:23.100 --> 00:17:24.250\nus a little bit.\n\n311\n00:17:24.250 --> 00:17:26.960\nSo I'm gonna print here.\n\n312\n00:17:26.960 --> 00:17:33.040\nAnd just to remove the noise,\nI'm gonna comment out this monsters.\n\n313\n00:17:33.040 --> 00:17:35.630\nOr excuse me, this enemy class here.\n\n314\n00:17:35.630 --> 00:17:39.410\nSo let's go take a look, and\nif I wrote it again well there's 5.\n\n315\n00:17:39.410 --> 00:17:43.226\nIf I run it again I should get\nsomething different than 3.\n\n316\n00:17:43.226 --> 00:17:47.987\n76, 73, 39, so I'm getting a random power\n\n317\n00:17:47.987 --> 00:17:51.990\nlevel based on kinda the fitness, right?\n\n318\n00:17:51.990 --> 00:17:57.640\nThis adds a nice spice to the game cuz\nthen you can't just level boost and\n\n319\n00:17:57.640 --> 00:17:59.520\nthen always win, right?\n\n320\n00:17:59.520 --> 00:18:05.300\nSo I think it works,\nlooks like the randomness works,\n\n321\n00:18:05.300 --> 00:18:09.110\nbut what happens if I change\nthe level part to three.\n\n322\n00:18:10.320 --> 00:18:12.060\nIs that going to give me\nthe expected behavior?\n\n323\n00:18:12.060 --> 00:18:15.385\nI should have three times\nsome number from one to 100.\n\n324\n00:18:15.385 --> 00:18:20.041\nSo there's 114, 12, 276.\n\n325\n00:18:20.041 --> 00:18:22.350\nOkay, so it's actually working.\n\n326\n00:18:22.350 --> 00:18:23.300\nIt's linked up.\n\n327\n00:18:23.300 --> 00:18:23.870\nThat's good to go.\n\n328\n00:18:23.870 --> 00:18:29.410\nNow I know the player has\na get attack power, but\n\n329\n00:18:29.410 --> 00:18:32.410\nif the enemy doesn't have any\nattack power, I would always win.\n\n330\n00:18:32.410 --> 00:18:33.700\nThat's no fun.\n\n331\n00:18:35.230 --> 00:18:36.260\nHow are we going to?\n\n332\n00:18:37.980 --> 00:18:43.650\nI bet I could do something very similar\nto get attack power in the enemy class.\n\n333\n00:18:43.650 --> 00:18:46.310\nSo let's actually try that out,\nsee if I can get that to work.\n\n334\n00:18:47.340 --> 00:18:54.410\nSo get attack power, and\nreturn randint(1, 100) times self.level.\n\n335\n00:18:54.410 --> 00:18:57.340\nSo again, it's based on the level.\n\n336\n00:18:57.340 --> 00:18:58.868\nThat's good to know.\n\n337\n00:18:58.868 --> 00:19:03.590\nAnd I'm gonna comment it out.\n\n338\n00:19:03.590 --> 00:19:07.140\nThe player this time will\nbring back the enemy.\n\n339\n00:19:09.370 --> 00:19:16.613\nJust remove this enemy level, and\nthen print enemy.get_attack_power.\n\n340\n00:19:18.391 --> 00:19:19.841\nLet's see if that works.\n\n341\n00:19:19.841 --> 00:19:22.082\nI'm gonna clear the screen here.\n\n342\n00:19:22.082 --> 00:19:23.532\nRerun Python3.\n\n343\n00:19:23.532 --> 00:19:26.818\nEnemy Ogre is 39, 3,\n\n344\n00:19:26.818 --> 00:19:31.910\n94 13, so that's working.\n\n345\n00:19:31.910 --> 00:19:37.130\nSo now, I can compare the player and\nan enemy and their respective\n\n346\n00:19:37.130 --> 00:19:42.430\nattack power and start making decisions\nwithin the simplified battle system,\n\n347\n00:19:42.430 --> 00:19:47.319\ngot to be careful, I get a little fast\nin my talking, get out of sync there.\n\n348\n00:19:48.390 --> 00:19:50.040\nAnd then I can decide who wins, right?\n\n349\n00:19:50.040 --> 00:19:52.920\nSo all I'm gonna do,\nI've been thinking about this.\n\n350\n00:19:54.040 --> 00:19:56.240\nWhoever has the highest attack power wins.\n\n351\n00:19:56.240 --> 00:20:00.150\nThere's no HP at this point or\nmultiple turns.\n\n352\n00:20:00.150 --> 00:20:03.810\nIt's almost like a flip of\nthe coin a little bit, so yeah.\n\n353\n00:20:05.610 --> 00:20:09.924\nSo I have my enemy and my player and\nI'm looking back over this and Vonne,\n\n354\n00:20:09.924 --> 00:20:12.200\ndo you see anything weird about this?\n\n355\n00:20:12.200 --> 00:20:15.780\n&gt;&gt; I feel like you are repeating\nyourself a little bit.\n\n356\n00:20:15.780 --> 00:20:17.420\nDo I see some repetition in there?\n\n357\n00:20:17.420 --> 00:20:21.201\n&gt;&gt; Yeah Vonne well.\n\n358\n00:20:21.201 --> 00:20:23.260\nVonne, you have to be careful.\n\n359\n00:20:23.260 --> 00:20:26.010\nI'm focused on getting things working,\njust making it work,\n\n360\n00:20:26.010 --> 00:20:28.720\nmake sure all the pieces are there.\n\n361\n00:20:28.720 --> 00:20:32.890\nBut I do see repetitions just like\nyou do and that's no good, right?\n\n362\n00:20:32.890 --> 00:20:36.010\nI wanna use OOP-\n&gt;&gt; Yeah, but just you're setting us up for\n\n363\n00:20:36.010 --> 00:20:37.770\nlater aren't you?\n\n364\n00:20:37.770 --> 00:20:41.160\n&gt;&gt; Aha, now she is catching on,\nshe is catching on, she is in my head.\n\n365\n00:20:41.160 --> 00:20:43.770\nIts kinda freaking me out a little bit.\n\n366\n00:20:43.770 --> 00:20:44.700\nI am setting us up for\n\n367\n00:20:44.700 --> 00:20:47.240\nlater, because we're actually gonna do\nsomething that you would probably do.\n\n368\n00:20:47.240 --> 00:20:49.210\nI'm gonna get it to work, and\n\n369\n00:20:49.210 --> 00:20:53.070\nnow I see these patterns, and\nnow I'm gonna refactor and pull that out.\n\n370\n00:20:53.070 --> 00:20:58.540\nAnd maybe build some other class, that is\nthe parent class to these two classes.\n\n371\n00:20:58.540 --> 00:21:01.400\nBecause if this,\nI could have just copied and pasted this.\n\n372\n00:21:01.400 --> 00:21:05.540\nBut I was in the thought process,\nI didn't I just made it work, okay?\n\n373\n00:21:05.540 --> 00:21:08.330\nSo that's something that you don't see\nbehind the scenes when people write\n\n374\n00:21:08.330 --> 00:21:08.860\nsoftware.\n\n375\n00:21:08.860 --> 00:21:10.610\nEspecially through just exploring for\nthe first time.\n\n376\n00:21:10.610 --> 00:21:14.580\nNow if they've been doing this for 10\nyears they might actually sit down, write\n\n377\n00:21:14.580 --> 00:21:18.570\nout the entire design, figure everything\nout and then just bang through it.\n\n378\n00:21:18.570 --> 00:21:22.750\nBut as you're learning that's not\nalways the easiest way to go about it.\n\n379\n00:21:22.750 --> 00:21:26.350\nI wanna add this piece and\nfigure this out and\n\n380\n00:21:26.350 --> 00:21:28.290\nit's an incremental thing and that's okay.\n\n381\n00:21:28.290 --> 00:21:31.360\nAnd that's what I wanna emphasize here.\n\n382\n00:21:31.360 --> 00:21:36.710\nWe will come back and change this but for\nnow it works and we have our characters.\n\n383\n00:21:36.710 --> 00:21:41.020\nBut Vonne we have a long way to go\nto actually get this game working,\n\n384\n00:21:41.020 --> 00:21:42.880\nI just don't know if we\nhave time in this episode.\n\n385\n00:21:42.880 --> 00:21:45.040\n&gt;&gt; Unfortunately, Justin,\nwe are out of time for this episode.\n\n386\n00:21:45.040 --> 00:21:46.410\nBut, just like any good game or\n\n387\n00:21:46.410 --> 00:21:49.710\nany good TV series,\nyou've left us with a good cliffhanger.\n\n388\n00:21:49.710 --> 00:21:51.780\nSo, please stay tuned for\nour next episode.\n\n389\n00:21:51.780 --> 00:21:55.080\nBut for signing off for\nITProTV, I'm Vonne Smith.\n\n390\n00:21:55.080 --> 00:21:55.950\n&gt;&gt; And I'm Justin Dennison.\n\n391\n00:21:55.950 --> 00:21:56.620\n&gt;&gt; See you next time.\n\n392\n00:21:58.302 --> 00:22:04.377\n[MUSIC]\n\n393\n00:22:04.377 --> 00:22:06.998\nThank you for watching ITProTV.\n\n",
          "vimeoId": "208839682"
        },
        {
          "description": "In this episode, Vonne and Justin jump back in to building their MonsterSlash game using Object-Oriented Python. They cover how the player can engage the enemy and win!",
          "length": "1775",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-5-1-2-lets_build_it_monster_slash_v1-031317-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-5-1-2-lets_build_it_monster_slash_v1-031317-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-5-1-2-lets_build_it_monster_slash_v1-031317-1-sm.jpg",
          "title": "Lets Build It MonsterSlash v.1 Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.290 --> 00:00:03.539\nWelcome to ITProTV, I'm your host Dom.\n\n2\n00:00:03.539 --> 00:00:08.289\n[MUSIC]\n\n3\n00:00:08.289 --> 00:00:11.888\n&gt;&gt; You're watching ITProTV.\n\n4\n00:00:11.888 --> 00:00:15.359\n&gt;&gt; Hello, and\nwelcome to another episode of ITProTV.\n\n5\n00:00:15.359 --> 00:00:20.276\nI'm your host Vonne Smith and today we're\ncontinuing on building our monster slash\n\n6\n00:00:20.276 --> 00:00:22.845\ngame, an object oriented python.\n\n7\n00:00:22.845 --> 00:00:24.915\nSo if you missed part one\nyou should go back and\n\n8\n00:00:24.915 --> 00:00:27.385\ncheck that out before\nwatching this episode.\n\n9\n00:00:27.385 --> 00:00:29.725\nBut here to help us with this is Mr.\nJustin Dennison.\n\n10\n00:00:29.725 --> 00:00:30.565\nHow are you doing today?\n\n11\n00:00:30.565 --> 00:00:32.065\n&gt;&gt; I'm doing well Vonne how are you today?\n\n12\n00:00:32.065 --> 00:00:35.710\n&gt;&gt; I'm great, I'm ready to learn\nmore about fighting our aliens.\n\n13\n00:00:35.710 --> 00:00:37.725\n&gt;&gt; We're not doing aliens,\nwe're doing monsters aren't we?\n\n14\n00:00:37.725 --> 00:00:40.840\n&gt;&gt; [LAUGH]\n&gt;&gt; I know there's some enemies out there.\n\n15\n00:00:40.840 --> 00:00:42.170\nAnd we're gonna fight them.\n\n16\n00:00:42.170 --> 00:00:45.290\nWe're gonna slash and\ndash them, aren't we?\n\n17\n00:00:45.290 --> 00:00:45.940\n&gt;&gt; We are.\n\n18\n00:00:45.940 --> 00:00:50.080\nSo Von yeah the last time we\nfinished up our player and\n\n19\n00:00:50.080 --> 00:00:53.710\nour enemy, but you know,\nthey don't actually do anything.\n\n20\n00:00:53.710 --> 00:00:55.150\nWe just did a lot of testing.\n\n21\n00:00:55.150 --> 00:00:57.900\nWe need to worry about creating the game.\n\n22\n00:00:57.900 --> 00:01:01.470\nActually making things happen\nwith these two entities.\n\n23\n00:01:01.470 --> 00:01:03.430\nSo that's what we're gonna do today, and\n\n24\n00:01:03.430 --> 00:01:05.840\nhopefully it'll start\nto come together here.\n\n25\n00:01:05.840 --> 00:01:09.900\nSo there's no better time than the present\nto hop in and actually get started.\n\n26\n00:01:09.900 --> 00:01:14.360\nSo if we hop down into my computer here,\nI'm in the monster slash directory,\n\n27\n00:01:14.360 --> 00:01:17.390\nI also have this open right here.\n\n28\n00:01:17.390 --> 00:01:20.738\nSo, what am I going to do?\n\n29\n00:01:20.738 --> 00:01:23.300\nI am going to create a game.py.\n\n30\n00:01:24.440 --> 00:01:28.140\nThat game.py is going to be\nthe entry point for our game.\n\n31\n00:01:28.140 --> 00:01:30.410\nIt's actually what we\nare going to run to start up.\n\n32\n00:01:30.410 --> 00:01:33.010\nAnd we are going to test independently\n\n33\n00:01:33.010 --> 00:01:37.160\noutside of everything else\nLet's just see what happens.\n\n34\n00:01:37.160 --> 00:01:40.810\nSo first thing I'm gonna do is\nI'm gonna create a main here.\n\n35\n00:01:40.810 --> 00:01:44.130\nJust a little bit of setup,\na little bit of planning on my part.\n\n36\n00:01:44.130 --> 00:01:46.479\nAnd the main is actually\nthe main part of the game.\n\n37\n00:01:46.479 --> 00:01:49.918\nWhat's actually gonna run\nwhen I say pythongame.py?\n\n38\n00:01:49.918 --> 00:01:55.680\nSo what I'm going to print the intro.\n\n39\n00:01:57.260 --> 00:01:58.980\nAnd well, that's not written yet.\n\n40\n00:01:58.980 --> 00:02:01.130\nAnd then I'm going to play.\n\n41\n00:02:01.130 --> 00:02:05.060\nBut notice,\nthe main is just a thought process for me.\n\n42\n00:02:05.060 --> 00:02:07.230\nIt's just how is this gonna work out.\n\n43\n00:02:08.390 --> 00:02:14.160\nWell, in order to make that happen, I\nactually need to program these two pieces.\n\n44\n00:02:14.160 --> 00:02:17.810\nBut I'm going to write pass for now,\nbecause I don't want to implement these.\n\n45\n00:02:17.810 --> 00:02:21.570\nWe're going to incrementally\nimplement these as we test.\n\n46\n00:02:21.570 --> 00:02:23.512\nAnd then, I'm also going to.\n\n47\n00:02:23.512 --> 00:02:29.200\nStub out the play function rather.\n\n48\n00:02:30.320 --> 00:02:33.450\nNot part of an object yet, so\ncan't really call it a method.\n\n49\n00:02:33.450 --> 00:02:38.492\nAnd then, just for\na little bit of testing, If dunder\n\n50\n00:02:38.492 --> 00:02:43.440\nname equals dunder main,\nthen what am I gonna do?\n\n51\n00:02:43.440 --> 00:02:45.730\nWell, I'm gonna run the main function.\n\n52\n00:02:45.730 --> 00:02:50.320\nAnd there's nothing magic\nabout the main name,\n\n53\n00:02:50.320 --> 00:02:51.750\nthat's kinda hard to say, the main name.\n\n54\n00:02:51.750 --> 00:02:56.170\nThere is nothing magic about\nthe function name main, its just\n\n55\n00:02:56.170 --> 00:02:59.660\nits what I chose to do because it allows\nme to zero in when I open those file.\n\n56\n00:02:59.660 --> 00:03:01.770\nThis is the main part that's gonna run.\n\n57\n00:03:01.770 --> 00:03:05.020\nSo don't get worried that,\nhey is main special?\n\n58\n00:03:05.020 --> 00:03:08.170\nBecause in some other programming\nlanguages it is, its not here,\n\n59\n00:03:08.170 --> 00:03:10.550\nits just It's just a way for\nme to think about it.\n\n60\n00:03:10.550 --> 00:03:14.050\nYou could call this, you know,\ncheeseburger if you wanted to.\n\n61\n00:03:14.050 --> 00:03:17.910\nBut that would be hard to reason about\nit at a later time so keep that in mind.\n\n62\n00:03:17.910 --> 00:03:20.060\nSo the print intro, this should work.\n\n63\n00:03:20.060 --> 00:03:20.750\nThis should run.\n\n64\n00:03:20.750 --> 00:03:25.210\nLet's see if it runs, python3 game.py.\n\n65\n00:03:25.210 --> 00:03:29.430\nAnd it doesn't look like it runs,\nbut I didn't get any errors so\n\n66\n00:03:29.430 --> 00:03:32.080\nI'm going to assume that\nit ran accordingly.\n\n67\n00:03:33.510 --> 00:03:35.360\nNow what do I want to do here?\n\n68\n00:03:35.360 --> 00:03:37.590\nWell, let's start with the intro first.\n\n69\n00:03:37.590 --> 00:03:42.300\nWhen I start up a game usually there's a\nnice little intro that says press start or\n\n70\n00:03:42.300 --> 00:03:45.220\npress any key to play,\nthings of that nature.\n\n71\n00:03:45.220 --> 00:03:47.620\nSo let's get this print intro first.\n\n72\n00:03:48.980 --> 00:03:54.950\nAnd print And\nhere we go I got monster slash.\n\n73\n00:03:58.607 --> 00:04:00.440\nReady player one.\n\n74\n00:04:00.440 --> 00:04:04.810\nIt's a nice throw back to some\nvery interesting times in my life.\n\n75\n00:04:04.810 --> 00:04:08.300\nAnd then press any key to continue.\n\n76\n00:04:10.360 --> 00:04:10.950\nSo.\n\n77\n00:04:10.950 --> 00:04:11.970\nThere we are.\n\n78\n00:04:11.970 --> 00:04:16.900\nBut not quite, if we run this we're\ngoing to see something interesting and\n\n79\n00:04:16.900 --> 00:04:18.740\nso let's hit up.\n\n80\n00:04:18.740 --> 00:04:20.650\nIt immediately starts.\n\n81\n00:04:20.650 --> 00:04:24.572\nWell, I actually want someone\nto press a key to further on.\n\n82\n00:04:24.572 --> 00:04:29.720\nI want the execution of this\ncode to block or to stop.\n\n83\n00:04:29.720 --> 00:04:32.640\nAnd then when a key is\npressed it actually runs.\n\n84\n00:04:32.640 --> 00:04:38.020\nBecause what's happening is this runs and\nthen play immediately runs after this.\n\n85\n00:04:38.020 --> 00:04:39.610\nSo how am I gonna do that?\n\n86\n00:04:41.510 --> 00:04:43.880\nI'm gonna use this special function now.\n\n87\n00:04:43.880 --> 00:04:47.320\nThis is one of those key differences\nbetween Python 2 and Python 3.\n\n88\n00:04:47.320 --> 00:04:50.840\nIn Python 2 this was called\nraw underscore input.\n\n89\n00:04:50.840 --> 00:04:53.460\nAnd in Python 3, it is simply input.\n\n90\n00:04:53.460 --> 00:04:58.730\nIt's a function that will stop the cursor,\nprint out a prompt, and\n\n91\n00:04:58.730 --> 00:05:00.650\nwait for user input.\n\n92\n00:05:00.650 --> 00:05:02.670\nNotice, there's nothing in here.\n\n93\n00:05:02.670 --> 00:05:04.120\nSo it's just gonna stop.\n\n94\n00:05:04.120 --> 00:05:06.030\nAnd then the user input\nisn't gonna be stored,\n\n95\n00:05:06.030 --> 00:05:10.360\nbecause I'll I'm using this to do, is to\ncapture that pressing a key to continue.\n\n96\n00:05:10.360 --> 00:05:13.260\nIt will stop until someone presses a key.\n\n97\n00:05:13.260 --> 00:05:17.240\nSo let's see how that works and\nnotice the cursor just stops.\n\n98\n00:05:19.030 --> 00:05:19.630\nAnd then, boop.\n\n99\n00:05:20.740 --> 00:05:22.590\nAnd I got to get that any key.\n\n100\n00:05:22.590 --> 00:05:25.520\nMaybe I need to change that,\nbecause I had to hit enter there.\n\n101\n00:05:25.520 --> 00:05:28.480\nSo maybe a better thing is, not any key,\n\n102\n00:05:28.480 --> 00:05:32.940\nbut instead press enter to continue,\nright.\n\n103\n00:05:32.940 --> 00:05:36.960\nWe could spend some time getting logic\nto where anytime I hit a key then\n\n104\n00:05:36.960 --> 00:05:37.900\nin would continue.\n\n105\n00:05:37.900 --> 00:05:42.360\nBut right now that would kinda get\nus lost in our ultimate endeavor.\n\n106\n00:05:42.360 --> 00:05:45.650\nSo we're gonna change that to Enter,\nand notice that's just on the fly.\n\n107\n00:05:45.650 --> 00:05:47.650\nAnd because I'm taking this incrementally,\n\n108\n00:05:47.650 --> 00:05:50.500\nI don't have to go back and\nfigure out why that's happening.\n\n109\n00:05:50.500 --> 00:05:52.080\nIt just happens at this very moment,\n\n110\n00:05:52.080 --> 00:05:54.940\nso test a lot,\nwrite a little code, test a lot.\n\n111\n00:05:54.940 --> 00:05:55.820\nThat's important.\n\n112\n00:05:55.820 --> 00:06:00.130\n&gt;&gt; So Justin, I'm seeing that you put\nthose triple quotes in the beginning and\n\n113\n00:06:00.130 --> 00:06:01.840\nthe end of that code block.\n\n114\n00:06:01.840 --> 00:06:03.510\nDoes that indicate something special?\n\n115\n00:06:03.510 --> 00:06:04.510\nWhat are those?\n\n116\n00:06:04.510 --> 00:06:06.240\n&gt;&gt; That's a great question, Von.\n\n117\n00:06:06.240 --> 00:06:09.640\nSo this is something we I make\nuse of from time to time.\n\n118\n00:06:09.640 --> 00:06:13.080\nSo if I have triple quotes, whether it's\nsingle quotes or not at the beginning and\n\n119\n00:06:13.080 --> 00:06:17.310\nend, and\njust to show you I can change these two.\n\n120\n00:06:17.310 --> 00:06:18.760\nA bunch of them apparently.\n\n121\n00:06:18.760 --> 00:06:19.510\nThere you go.\n\n122\n00:06:19.510 --> 00:06:21.240\nThere's double quote.\n\n123\n00:06:21.240 --> 00:06:25.640\nThis allows me to create a double or\na multiline string.\n\n124\n00:06:25.640 --> 00:06:30.490\nAnd so if I kept this to your single\nquotes, notice how that changed colors and\n\n125\n00:06:30.490 --> 00:06:32.860\nI get weird stuff going on.\n\n126\n00:06:32.860 --> 00:06:36.030\nWell, if I put triple quotes and\nthen triple quotes again,\n\n127\n00:06:36.030 --> 00:06:40.880\nI can just type paragraphs and\nit will be stored as a Python string.\n\n128\n00:06:40.880 --> 00:06:44.430\nAnd I don't have to worry about\nescaping to the next line or\n\n129\n00:06:44.430 --> 00:06:47.160\nputting new line characters\nin there by hand.\n\n130\n00:06:47.160 --> 00:06:50.940\nSo that's a nice little feature of Python,\nbut good catch there.\n\n131\n00:06:50.940 --> 00:06:54.230\n&gt;&gt; So it's actually going to\ndisplay exactly how you type it in.\n\n132\n00:06:54.230 --> 00:06:58.670\nIf you make two extra enters after that\nmonster slash it would then actually\n\n133\n00:06:58.670 --> 00:07:00.950\ndisplay that way when we run the game.\n\n134\n00:07:00.950 --> 00:07:01.550\n&gt;&gt; Exactly.\n\n135\n00:07:01.550 --> 00:07:06.810\nAnd just to clarify, just to make\nsure that is in case the behavior.\n\n136\n00:07:06.810 --> 00:07:09.510\nLet's put those two extra\nenter's in there, monster slash.\n\n137\n00:07:09.510 --> 00:07:10.780\nReady player one, enter to continue.\n\n138\n00:07:10.780 --> 00:07:13.780\nAnd then boom, it does.\n\n139\n00:07:13.780 --> 00:07:18.570\nSo it preserves the formatting, including\nmultiple lines, spaces, and such.\n\n140\n00:07:18.570 --> 00:07:21.840\nNotice this is pushed over from the left,\nit's indented.\n\n141\n00:07:21.840 --> 00:07:25.960\nAnd that's because over here it's\nalso indented within the code block.\n\n142\n00:07:25.960 --> 00:07:28.990\nSo that may be something that\nyou don't want to happen.\n\n143\n00:07:28.990 --> 00:07:30.540\nSo you have to finagle with that.\n\n144\n00:07:30.540 --> 00:07:32.000\nBut it's a lot easier than adding\n\n145\n00:07:33.380 --> 00:07:36.480\nnewline characters inside\nof a single quoted string.\n\n146\n00:07:36.480 --> 00:07:39.770\nSo man, that's really handy.\n\n147\n00:07:39.770 --> 00:07:40.610\nIt makes me excited.\n\n148\n00:07:42.080 --> 00:07:43.560\nSo we have this piece.\n\n149\n00:07:43.560 --> 00:07:45.590\nWe have our print_intro, it's done.\n\n150\n00:07:45.590 --> 00:07:49.160\nWell, I'm actually going to add a little\nbit of over scroll here just so\n\n151\n00:07:49.160 --> 00:07:53.220\nwe can keep things in perspective.\n\n152\n00:07:53.220 --> 00:07:55.810\nSo this print_intro is ready.\n\n153\n00:07:55.810 --> 00:07:56.423\nIt goes.\n\n154\n00:07:56.423 --> 00:07:58.837\nPrints out the title, Ready Player One?\n\n155\n00:07:58.837 --> 00:08:01.972\nI hit Enter and\nI'm off to the races, so to speak.\n\n156\n00:08:01.972 --> 00:08:06.040\nBut now play, what does play going to do?\n\n157\n00:08:07.160 --> 00:08:11.140\nWell play ends up being\na little more complex.\n\n158\n00:08:11.140 --> 00:08:14.200\nSo we're going to take\nthis in small chunks,\n\n159\n00:08:14.200 --> 00:08:18.740\nsee how it plays out, and one of\nthe first things that I want to do is\n\n160\n00:08:18.740 --> 00:08:22.220\nif I'm going to play I need to\ncreate a character Or a player.\n\n161\n00:08:23.220 --> 00:08:25.730\nAnd enemies that the player's\ngoing to fight against.\n\n162\n00:08:25.730 --> 00:08:28.530\nWell those are in the actors.py file.\n\n163\n00:08:30.150 --> 00:08:31.580\nThere over here.\n\n164\n00:08:31.580 --> 00:08:32.770\nI need a player and an enemy.\n\n165\n00:08:33.880 --> 00:08:35.120\nHow do I get those into the game?\n\n166\n00:08:37.020 --> 00:08:42.020\nAt the top here I'm going\nto import Excuse me,\n\n167\n00:08:42.020 --> 00:08:48.070\nnot import,\nfrom actors import player, enemy.\n\n168\n00:08:48.070 --> 00:08:50.150\nNow this isn't the only\nway you can import.\n\n169\n00:08:50.150 --> 00:08:55.550\ni could have also done\nthis: import actors.\n\n170\n00:08:55.550 --> 00:08:59.710\nBut to get access to the player I\nwould have to say actors.player.\n\n171\n00:08:59.710 --> 00:09:02.820\nAnd don't wanna time that all the time,\nI know that there's not gonna be any other\n\n172\n00:09:02.820 --> 00:09:07.878\nthing named Player in this file, so I'm\nnot gonna keep what's called a name space,\n\n173\n00:09:07.878 --> 00:09:11.650\nlike the actors.Player, so\nI'm just gonna remove that,\n\n174\n00:09:12.720 --> 00:09:17.120\nremove this and then uncomment here,\nso from actors import Player, Enemy.\n\n175\n00:09:17.120 --> 00:09:19.920\nNow I have an access to\nthe Player class and\n\n176\n00:09:19.920 --> 00:09:22.820\nthe Enemy class and\nI can make Player and Enemy objects.\n\n177\n00:09:22.820 --> 00:09:26.900\nWell that’s the first\nthing I'm going to do.\n\n178\n00:09:26.900 --> 00:09:29.740\nSo, let’s see here I need enemies and\n\n179\n00:09:29.740 --> 00:09:32.700\nI don't want just one enemy I\nwant a couple of enemies, right.\n\n180\n00:09:33.830 --> 00:09:35.250\nSo, what enemies do I want.\n\n181\n00:09:35.250 --> 00:09:41.960\nI want enemy and\nof type Ogre and at level one.\n\n182\n00:09:41.960 --> 00:09:44.050\nRight excuse me of kind, kind.\n\n183\n00:09:44.050 --> 00:09:45.660\nLet's keep this consistent.\n\n184\n00:09:45.660 --> 00:09:52.540\nAnd then our other enemy is an Imp and\nit's also at level 1.\n\n185\n00:09:52.540 --> 00:09:53.550\nNow I need a player.\n\n186\n00:09:56.540 --> 00:09:59.700\nAnd that's going to be the player and\nI need a name and a level.\n\n187\n00:09:59.700 --> 00:10:00.979\nWell, let's just keep this.\n\n188\n00:10:03.220 --> 00:10:08.280\nPlayer of your Hercules, and\nhe's going to fight an ogre and an imp.\n\n189\n00:10:08.280 --> 00:10:09.800\nWell, let's see if this runs.\n\n190\n00:10:09.800 --> 00:10:13.130\nI'd like to test this incrementally to\nmake sure I don't have any syntax errors,\n\n191\n00:10:13.130 --> 00:10:17.770\nthat everything's good, and\nlet's just print out enemies.\n\n192\n00:10:18.960 --> 00:10:21.410\nAnd now this is a list of enemies.\n\n193\n00:10:21.410 --> 00:10:23.360\nAnd I'm gonna print out the player.\n\n194\n00:10:25.060 --> 00:10:27.360\nSo here we go, let's run.\n\n195\n00:10:27.360 --> 00:10:30.350\nAnd nothing's gonna\nprint until I hit Enter.\n\n196\n00:10:30.350 --> 00:10:32.117\nAnd notice it's [&lt;enemy: ogre=\"\"&gt;,\n\n197\n00:10:32.117 --> 00:10:36.230\n&lt;enemy: imp=\"\"&gt;] and\nthe the player of Hercules at Level 1.\n\n198\n00:10:36.230 --> 00:10:39.680\nOkay, so that construction's good.\n\n199\n00:10:39.680 --> 00:10:43.160\nNow what's gonna happen\nduring this playthrough?\n\n200\n00:10:43.160 --> 00:10:45.650\nI want several commands\n&lt;/enemy:&gt;&lt;/enemy:&gt; And\n\n201\n00:10:45.650 --> 00:10:49.978\nI just want this to tap in until\nsomeone decides to quit or wins.\n\n202\n00:10:49.978 --> 00:10:59.440\nOkay, so,\nWhile true I'm going to take a command,\n\n203\n00:10:59.440 --> 00:11:03.390\nI'm actually gonna grab an enemy that\nI'm going to face from the list.\n\n204\n00:11:03.390 --> 00:11:08.250\nSo the next enemy is\nrandom.choice Well random.choice\n\n205\n00:11:08.250 --> 00:11:12.680\nis gonna give me a random entry\nfrom the list or from a collection.\n\n206\n00:11:12.680 --> 00:11:13.720\nIt could even be a string.\n\n207\n00:11:14.730 --> 00:11:17.460\nBut right now,\nI don't have a random in here.\n\n208\n00:11:17.460 --> 00:11:20.130\nSo I gotta hop back up here and\nimport random.\n\n209\n00:11:21.940 --> 00:11:25.170\nNow, you may be asking yourself,\nhow do you know that it's random?\n\n210\n00:11:25.170 --> 00:11:28.310\nWell, I use my.\n\n211\n00:11:28.310 --> 00:11:32.100\nSearch engine incantations to figure out,\nI need a random selection from a list in\n\n212\n00:11:32.100 --> 00:11:35.380\nPython, and\nthen that leads me to documentation.\n\n213\n00:11:35.380 --> 00:11:39.500\nSo, I don't have everything memorized,\nand you probably won't either.\n\n214\n00:11:39.500 --> 00:11:42.960\nJust be resourceful, and\nalways consult the Python docs, and\n\n215\n00:11:42.960 --> 00:11:46.380\nas you do this more, you'll go,\nthat's something random.\n\n216\n00:11:46.380 --> 00:11:50.350\nThat's probably in the random module, and\nyou'll go directly to the Python docs And\n\n217\n00:11:50.350 --> 00:11:53.550\nit'll, it'll just kind of fall out to you.\n\n218\n00:11:53.550 --> 00:11:56.120\nSo I'm going to grab the enemy\nthat's going to be chosen.\n\n219\n00:11:56.120 --> 00:11:58.190\nAnd then I need a command from the player.\n\n220\n00:11:58.190 --> 00:12:02.280\nSo the person that is playing\nis going to input a command,\n\n221\n00:12:03.780 --> 00:12:09.360\nYou see a blank and\n\n222\n00:12:09.360 --> 00:12:15.536\nare you going to run Attack or pass.\n\n223\n00:12:20.936 --> 00:12:22.790\nPass, there we go.\n\n224\n00:12:22.790 --> 00:12:26.500\nAnd then, add a quote there .format.\n\n225\n00:12:26.500 --> 00:12:28.360\nWhat am I gonna see?\n\n226\n00:12:28.360 --> 00:12:32.750\nWell, I'm gonna see the enemy.kind And\n\n227\n00:12:32.750 --> 00:12:37.230\nthat's going to let me know, Hey,\nyou're getting ready to fight an ogre, and\n\n228\n00:12:37.230 --> 00:12:41.220\nas the game mechanics change that\nmight tell me something about it.\n\n229\n00:12:41.220 --> 00:12:42.820\nAn imp I'm not worried about.\n\n230\n00:12:42.820 --> 00:12:46.330\nBut an ogre, but maybe an ogre ends\nup being a very powerful creature.\n\n231\n00:12:46.330 --> 00:12:48.610\nThen my choices change.\n\n232\n00:12:48.610 --> 00:12:49.840\nSo, what is this going to do?\n\n233\n00:12:49.840 --> 00:12:56.250\nWell this input will what for\nthat A, r or p and then Enter.\n\n234\n00:12:56.250 --> 00:12:58.800\nAnd then it will store that in command.\n\n235\n00:12:59.900 --> 00:13:03.260\nSo we should handle those accordingly.\n\n236\n00:13:03.260 --> 00:13:10.940\nIf the command is r, I want to well\nwe'll just gonna say run away.\n\n237\n00:13:10.940 --> 00:13:11.520\nJust for now.\n\n238\n00:13:11.520 --> 00:13:13.750\nI'm just stubbing this in.\n\n239\n00:13:13.750 --> 00:13:19.624\nOtherwise If it is attack, I'm going\n\n240\n00:13:19.624 --> 00:13:25.230\nto just type in attack.\n\n241\n00:13:25.230 --> 00:13:33.020\nAnd then if I have a pass,\nI'm gonna print pass.\n\n242\n00:13:33.020 --> 00:13:35.870\nAnd I'm gonna keep it as such, okay?\n\n243\n00:13:35.870 --> 00:13:40.860\nNow, let's go ahead and\nsee how this behaves on us.\n\n244\n00:13:40.860 --> 00:13:43.920\nWell, I'm gonna clear this out and run.\n\n245\n00:13:43.920 --> 00:13:48.670\nAnd then I'm ready,\nname enemy is not defined.\n\n246\n00:13:50.160 --> 00:13:53.130\nWell, I have an error, NameError.\n\n247\n00:13:53.130 --> 00:13:57.640\nWhat NameError typically means in\nPython is You mistyped a variable name.\n\n248\n00:13:57.640 --> 00:13:58.980\nSo, if I come back,\n\n249\n00:13:58.980 --> 00:14:04.160\nover here I put enemy dot kind,\nright here I called it next enemy.\n\n250\n00:14:04.160 --> 00:14:11.370\nSo, I should change this to next,\nnext enemy dot kind.\n\n251\n00:14:11.370 --> 00:14:14.150\nLet’s see if that runs.\n\n252\n00:14:14.150 --> 00:14:16.400\nEnter, I'm going to attack.\n\n253\n00:14:16.400 --> 00:14:16.980\nI'm going to run.\n\n254\n00:14:18.110 --> 00:14:20.280\nI'm going to pass.\n\n255\n00:14:20.280 --> 00:14:25.190\nSo, this is working, but\nhow do I get out of this.\n\n256\n00:14:25.190 --> 00:14:29.360\nI'm going to control C and\nthat'll just let me exit the game for now.\n\n257\n00:14:30.460 --> 00:14:36.230\nNow what happens if I instead\ndo something like this.\n\n258\n00:14:36.230 --> 00:14:41.470\nI'm not going to type r, a or p but\ninstead I'm gonna type w and hit Enter.\n\n259\n00:14:42.680 --> 00:14:43.980\nWell that's kinda weird.\n\n260\n00:14:45.230 --> 00:14:51.380\nIt let me kinda pass\nwithout giving me a prompt.\n\n261\n00:14:51.380 --> 00:14:57.220\nSo, hm, I should have a catch\nall clause Inside of this,\n\n262\n00:14:57.220 --> 00:15:01.730\nwhere if r, a, and p are not in\nthe command, then I just give a prompt.\n\n263\n00:15:02.970 --> 00:15:07.110\nAnd we're gonna keep this simple, really\nwhat would be nice is if the next enemy\n\n264\n00:15:07.110 --> 00:15:10.340\ndidn't change, right, so\nyou couldn't get a free pass.\n\n265\n00:15:10.340 --> 00:15:12.480\nBut we'll hold that off for now.\n\n266\n00:15:12.480 --> 00:15:18.698\nOtherwise, I'm gonna say print/g('Please\n\n267\n00:15:18.698 --> 00:15:23.910\nchoose a valid option').\n\n268\n00:15:23.910 --> 00:15:26.760\nNo semicolon there, don't put\na semicolons, it'll wreck your day.\n\n269\n00:15:28.330 --> 00:15:33.270\nSo now, if I come back and\nI run my game, looks good.\n\n270\n00:15:33.270 --> 00:15:35.580\na still works, r still works,\np still works.\n\n271\n00:15:35.580 --> 00:15:39.150\nBut then, if I type h,\nplease choose a valid option.\n\n272\n00:15:39.150 --> 00:15:40.890\nNow, it shows ogre again.\n\n273\n00:15:40.890 --> 00:15:42.270\nThat's only because I have two enemies.\n\n274\n00:15:42.270 --> 00:15:45.100\nSo the random choice, well,\n\n275\n00:15:45.100 --> 00:15:49.760\nthere it's likely that ogre\nwould've come up again anyway.\n\n276\n00:15:49.760 --> 00:15:50.701\nSo that's good to know.\n\n277\n00:15:50.701 --> 00:15:52.535\nAnd then, I'm gonna Ctrl+C.\n\n278\n00:15:52.535 --> 00:15:59.222\n&gt;&gt; So Jess I saw something back in your\ncode that the wild, Pat what was that?\n\n279\n00:15:59.222 --> 00:16:00.117\nYes, wild shrew.\n\n280\n00:16:00.117 --> 00:16:01.823\nIsn't that like a loop?\n\n281\n00:16:01.823 --> 00:16:02.949\nI thought those were bad.\n\n282\n00:16:02.949 --> 00:16:05.360\nI thought there was an infinite loop you\nwere supposed to stay away from those.\n\n283\n00:16:05.360 --> 00:16:08.150\n&gt;&gt; Yeah, so\nnormally in typical programming,\n\n284\n00:16:08.150 --> 00:16:09.940\nwe don't like infinite loops, right?\n\n285\n00:16:09.940 --> 00:16:14.200\nIf I had no way of blocking this,\nthis would actually just run and run and\n\n286\n00:16:14.200 --> 00:16:16.710\nrun just as fast as it can.\n\n287\n00:16:16.710 --> 00:16:19.230\nAnd typically, infinite loops are bad.\n\n288\n00:16:19.230 --> 00:16:23.931\nBut in games, what will happen is\nthis will become the game loop.\n\n289\n00:16:23.931 --> 00:16:28.478\nSo I run a loop, I take input,\nI process the input, I render.\n\n290\n00:16:28.478 --> 00:16:31.051\nAnd render here is just\ngonna be putting out text.\n\n291\n00:16:31.051 --> 00:16:33.140\nAnd then I'm gonna start the loop over.\n\n292\n00:16:33.140 --> 00:16:38.130\nAnd I'm gonna do that until I\neither lose or I win, right?\n\n293\n00:16:38.130 --> 00:16:41.220\nSo here we're actually gonna make\nit to where we always win just to\n\n294\n00:16:41.220 --> 00:16:42.940\nkeep things simple.\n\n295\n00:16:42.940 --> 00:16:47.330\nBut when I finally do win, the loop\nwill exit print out, hey, good job.\n\n296\n00:16:48.340 --> 00:16:52.460\nAnd then the loops ends but typically\nin most cases, Von, you're correct.\n\n297\n00:16:52.460 --> 00:16:54.000\nInfinite loops are bad and\n\n298\n00:16:54.000 --> 00:16:56.850\nyou should stay away from them cuz\nthey can lock up your computer.\n\n299\n00:16:56.850 --> 00:16:58.950\nNot that I've ever done that before.\n\n300\n00:16:58.950 --> 00:17:01.000\nBut I have done that before and\nit's not a good day.\n\n301\n00:17:01.000 --> 00:17:04.180\nSo good catch, that's important to know.\n\n302\n00:17:04.180 --> 00:17:06.450\n&gt;&gt; And we want the game to keep going.\n\n303\n00:17:06.450 --> 00:17:07.860\nWe wanna keep fighting.\n\n304\n00:17:07.860 --> 00:17:11.530\n&gt;&gt; Right, you don't wanna have\nto restart the game every time\n\n305\n00:17:11.530 --> 00:17:12.630\nyou're like, I'm ready.\n\n306\n00:17:12.630 --> 00:17:15.055\nBecause number one,\nit would respawn the enemies.\n\n307\n00:17:15.055 --> 00:17:17.852\nRespawn, spawn being used loosely here.\n\n308\n00:17:17.852 --> 00:17:21.818\nAnd well, you would never win and\nthe enemies would never win.\n\n309\n00:17:21.818 --> 00:17:24.846\nBecause after each turn,\nyou would essentially just hit reset.\n\n310\n00:17:24.846 --> 00:17:29.410\nSo we wanna keep that state until\nyou either quit or you win.\n\n311\n00:17:29.410 --> 00:17:34.022\nSo, we have this initial\npiece set up here, right?\n\n312\n00:17:34.022 --> 00:17:38.893\nWe have the ability to attack,\nto pass, things of that nature.\n\n313\n00:17:38.893 --> 00:17:43.453\nBut I also notice here when I attack or\npass,\n\n314\n00:17:43.453 --> 00:17:48.830\nI kinda want something\nto print out after that.\n\n315\n00:17:48.830 --> 00:17:52.702\nWell, what do I want to do?\n\n316\n00:17:52.702 --> 00:17:58.126\nInside the loop, I'm gonna print and\nall this is gonna do is print a new line.\n\n317\n00:17:58.126 --> 00:18:03.897\nAnd then I'm gonna print\nan asterisk times 30.\n\n318\n00:18:03.897 --> 00:18:07.773\nNow on Python,\nwhenever I multiply an integer and\n\n319\n00:18:07.773 --> 00:18:11.197\na string, I just get that string repeated.\n\n320\n00:18:11.197 --> 00:18:15.719\nSo this is a nice way of making\nasterisk across the screen.\n\n321\n00:18:15.719 --> 00:18:17.584\nAnd is it always gonna be 30?\n\n322\n00:18:17.584 --> 00:18:20.430\nNo, it could be a bunch of other things.\n\n323\n00:18:20.430 --> 00:18:23.228\nYou'll juts have to play with it and\nsee how it works out for you.\n\n324\n00:18:23.228 --> 00:18:26.270\nSo python3 game.py, Enter, all right.\n\n325\n00:18:26.270 --> 00:18:28.240\nI'm going to run away, and\n\n326\n00:18:28.240 --> 00:18:32.960\nthen run away, and then this kinda\ndenotes your next turn, right?\n\n327\n00:18:32.960 --> 00:18:35.000\nSo it breaks it up a little bit.\n\n328\n00:18:35.000 --> 00:18:36.470\nNow, I'm gonna keep this simple.\n\n329\n00:18:36.470 --> 00:18:39.710\nYou could have a bunch\nof ASCII art here and\n\n330\n00:18:39.710 --> 00:18:43.750\nactually make this game kind\nof more graphical in nature.\n\n331\n00:18:43.750 --> 00:18:46.410\nBut I think that's outside the scope\nof what we're trying to learn here.\n\n332\n00:18:48.010 --> 00:18:49.590\nSo I have this game loop.\n\n333\n00:18:49.590 --> 00:18:50.850\nIt's running.\n\n334\n00:18:50.850 --> 00:18:52.270\nAnd what do I need to do?\n\n335\n00:18:52.270 --> 00:18:55.160\nReally, the run away, all I'm gonna do for\n\n336\n00:18:55.160 --> 00:18:59.310\nrun away is, well ,when you run,\nit's just gonna say you run away.\n\n337\n00:19:00.630 --> 00:19:02.372\nSo let's change this prompt a little bit.\n\n338\n00:19:02.372 --> 00:19:06.728\nAnd blank runs away,\n\n339\n00:19:06.728 --> 00:19:11.084\nand then .format and\n\n340\n00:19:11.084 --> 00:19:15.471\nthen player.name.\n\n341\n00:19:15.471 --> 00:19:19.879\nNow okay, well,\nthat's not very interesting.\n\n342\n00:19:19.879 --> 00:19:22.109\nWell, right now,\nwe're keeping this game very simple.\n\n343\n00:19:22.109 --> 00:19:25.200\nI'm keeping this kind of open for\nexpandability.\n\n344\n00:19:25.200 --> 00:19:29.149\nBut there's nothing special that's gonna\nhappen when you run, so we'll keep that.\n\n345\n00:19:29.149 --> 00:19:37.118\nAnd then for pass, I'll just say, you\nare still thinking, About your next move.\n\n346\n00:19:40.164 --> 00:19:44.970\nNow these seem very similar,\nand they are at current time.\n\n347\n00:19:44.970 --> 00:19:50.260\nBut I'm thinking in the future maybe\nthe game dynamic is if you run away,\n\n348\n00:19:50.260 --> 00:19:52.640\nwell, what will that do?\n\n349\n00:19:52.640 --> 00:19:55.010\nThat will maybe pause the game.\n\n350\n00:19:55.010 --> 00:19:59.965\nMaybe give you some energy back, or\nHP if I decide to go that route.\n\n351\n00:19:59.965 --> 00:20:04.023\nAnd then if you pass, it's kinda like\npassing some other battle system,\n\n352\n00:20:04.023 --> 00:20:06.653\nyou run the risk of\nactually getting attacked.\n\n353\n00:20:06.653 --> 00:20:10.074\nSo you gotta be careful there and\n\n354\n00:20:10.074 --> 00:20:15.910\nwell the only other part we\nhave is the attack, right?\n\n355\n00:20:15.910 --> 00:20:18.253\nWhat do you wanna do when you attack?\n\n356\n00:20:18.253 --> 00:20:21.417\nWell, that's where\nthe interesting part comes in.\n\n357\n00:20:21.417 --> 00:20:26.336\nAnd right as I highlight\nall of my code to delete\n\n358\n00:20:26.336 --> 00:20:31.142\nit apparently, so blank attacks the blank.\n\n359\n00:20:31.142 --> 00:20:37.017\nAnd that's just gonna be player.name and\n\n360\n00:20:37.017 --> 00:20:41.620\nthen enemy or next enemy.kind.\n\n361\n00:20:41.620 --> 00:20:45.593\nSo it's just a declaration,\nit's a nice feedback for the user.\n\n362\n00:20:45.593 --> 00:20:52.196\nAnd then if player.attacks\nthe next enemy and,\n\n363\n00:20:52.196 --> 00:20:58.164\nwell, we're gonna have to deal with that.\n\n364\n00:20:58.164 --> 00:21:02.675\nBecause player doesn't have an attack\nmethod right now but we'll get there.\n\n365\n00:21:02.675 --> 00:21:04.192\nWhat do I want to happen?\n\n366\n00:21:04.192 --> 00:21:08.667\nI'm thinking if the player\nattacks the next enemy,\n\n367\n00:21:08.667 --> 00:21:13.130\nthis attacks is gonna return\ntrue if you defeat it.\n\n368\n00:21:13.130 --> 00:21:18.765\nIt's gonna be a one round thing or\nfalse if you lose, all right?\n\n369\n00:21:18.765 --> 00:21:25.124\nIf you win, then I'm gonna say\nenemies.remove the next enemy.\n\n370\n00:21:25.124 --> 00:21:30.099\nAnd that'll remove whatever enemy\nyou just defeated from this list of\n\n371\n00:21:30.099 --> 00:21:31.879\nenemies to then take on.\n\n372\n00:21:31.879 --> 00:21:34.923\nAnd then actually what else\ndo you want to happen?\n\n373\n00:21:34.923 --> 00:21:37.866\nIf you do not win,\n\n374\n00:21:37.866 --> 00:21:43.371\nthen let's see, what do you do?\n\n375\n00:21:43.371 --> 00:21:49.508\nYou hides to plan the next move.\n\n376\n00:21:49.508 --> 00:21:53.880\nAnd then format.player.name.\n\n377\n00:21:53.880 --> 00:21:57.621\nAll right, well, so\nlet's take a look at this.\n\n378\n00:21:57.621 --> 00:22:02.209\nIt looks like our game loop's more or\nless finished here.\n\n379\n00:22:02.209 --> 00:22:05.740\nI attack whatever the enemy is,\nlet's say the ogre.\n\n380\n00:22:05.740 --> 00:22:07.230\nIf the player attacks the ogre, and\n\n381\n00:22:07.230 --> 00:22:10.590\nthen this attacks is gonna\nreturn true if I win.\n\n382\n00:22:10.590 --> 00:22:13.500\nIf I win, I'm gonna remove that\nfrom the game field, right?\n\n383\n00:22:13.500 --> 00:22:18.094\nI'm gonna remove that from the list\nof enemies that I still have to fight\n\n384\n00:22:18.094 --> 00:22:21.610\nagainst, otherwise,\nI just kinda skip a turn.\n\n385\n00:22:21.610 --> 00:22:24.900\nAnd how can I make sure I skip a turn?\n\n386\n00:22:24.900 --> 00:22:29.678\nWell, since I've used this l if,\nonce I get to here,\n\n387\n00:22:29.678 --> 00:22:33.514\nall of these other l statements will skip.\n\n388\n00:22:33.514 --> 00:22:38.447\nAnd then I'll print this break line and\nit will start over again.\n\n389\n00:22:38.447 --> 00:22:42.430\nOkay, well, let's think about this.\n\n390\n00:22:43.430 --> 00:22:48.500\nOnce I finish beating all of the enemies,\nwhat's gonna happen?\n\n391\n00:22:48.500 --> 00:22:49.926\nWell, I should win, right?\n\n392\n00:22:49.926 --> 00:22:56.675\nSo if not enemies: You have won!\n\n393\n00:22:56.675 --> 00:23:00.050\nCongratulations.\n\n394\n00:23:02.100 --> 00:23:07.270\nAnd I'm going to break out this\ninfinite game loop because,\n\n395\n00:23:07.270 --> 00:23:09.950\nwell, I've won,\nthere's nothing more to play.\n\n396\n00:23:09.950 --> 00:23:14.610\nNow, I could take user input and\nsee if I actually start over again,\n\n397\n00:23:14.610 --> 00:23:16.650\nbut let's keep it simple at first.\n\n398\n00:23:16.650 --> 00:23:21.250\nI like simple and working instead of\novercomplicated and then frustrated.\n\n399\n00:23:21.250 --> 00:23:23.100\nSo, that's important to know.\n\n400\n00:23:23.100 --> 00:23:27.460\n&gt;&gt; That last line you just typed, the if\nnot enemies, that seems a little weird.\n\n401\n00:23:27.460 --> 00:23:28.876\nThat's a list, right?\n\n402\n00:23:28.876 --> 00:23:30.126\nThat's not a boolean.\n\n403\n00:23:30.126 --> 00:23:30.741\nShouldn't it be?\n\n404\n00:23:30.741 --> 00:23:36.235\n&gt;&gt; Right, so I'm making use of\nsome of this Python dynamism.\n\n405\n00:23:36.235 --> 00:23:39.440\nYou'll see this in some\nother dynamic languages.\n\n406\n00:23:39.440 --> 00:23:44.790\nWhat'll happen is if I use a conditional\noperator or a boolean operator on a data\n\n407\n00:23:44.790 --> 00:23:50.370\nstructure, behind the scenes this will\nreturn a truthy falsey type thing.\n\n408\n00:23:50.370 --> 00:23:54.734\nSo what I'm saying is if the list\nis empty, then this will run.\n\n409\n00:23:54.734 --> 00:23:58.460\nIf it is not empty, then keep going.\n\n410\n00:23:58.460 --> 00:23:59.902\nSo I like to read this.\n\n411\n00:23:59.902 --> 00:24:03.698\nIf there are not any enemies left,\nkeep moving.\n\n412\n00:24:03.698 --> 00:24:08.611\nNow, I think this reads nicer\nthan the comparative of,\n\n413\n00:24:08.611 --> 00:24:15.130\nif len(enemies) ==0, and\nthat's just a personal preference.\n\n414\n00:24:15.130 --> 00:24:18.800\nSo if the length of the list is zero,\nthat means there's nothing in it.\n\n415\n00:24:20.140 --> 00:24:21.670\nThese are equivalent statements.\n\n416\n00:24:21.670 --> 00:24:24.450\n&gt;&gt; Okay, it's basically if\nit's empty like you're saying.\n\n417\n00:24:24.450 --> 00:24:28.300\nEither way you can get to the same place,\nbut that does look a little nicer.\n\n418\n00:24:28.300 --> 00:24:33.180\n&gt;&gt; Yeah, it's a little more\nPython-ic in nature, or so I'm told.\n\n419\n00:24:33.180 --> 00:24:35.440\nSome people may have a differing opinion.\n\n420\n00:24:35.440 --> 00:24:38.010\nNow, there's one final thing\nthat we need to get done in\n\n421\n00:24:38.010 --> 00:24:40.450\norder to make this game work.\n\n422\n00:24:40.450 --> 00:24:46.140\nAnd that involves going back to our player\nclass, because right now the player\n\n423\n00:24:46.140 --> 00:24:51.520\ndoes not have the ability to attack\nan enemy or anything else for that matter.\n\n424\n00:24:51.520 --> 00:24:55.100\nSo let's hop over into actors,\nactually before we do that,\n\n425\n00:24:55.100 --> 00:24:59.070\nmaybe we should test this to make sure we\ndon't have any whoopsie daisy errors here.\n\n426\n00:24:59.070 --> 00:25:01.170\nSo I'm gonna kill that, clear.\n\n427\n00:25:02.440 --> 00:25:03.530\nAnd looks good.\n\n428\n00:25:03.530 --> 00:25:05.385\nI'm going to run, attack.\n\n429\n00:25:05.385 --> 00:25:08.430\nUh-oh, player has no attribute attacks.\n\n430\n00:25:08.430 --> 00:25:11.630\nWell we already knew that,\nso we have to go fix that.\n\n431\n00:25:11.630 --> 00:25:13.300\nLet's make sure everything else works.\n\n432\n00:25:14.980 --> 00:25:18.360\nAnd Enter, I've already tried run, pass.\n\n433\n00:25:18.360 --> 00:25:19.540\nIt looks good.\n\n434\n00:25:19.540 --> 00:25:22.220\nSo we need to finish that attacks part\n\n435\n00:25:22.220 --> 00:25:25.700\nbefore our game will be\nfully functional hopefully.\n\n436\n00:25:27.610 --> 00:25:29.643\nSo, let's hop over into actors and\n\n437\n00:25:29.643 --> 00:25:36.380\nwe'll get_attack_power,\nwe just need to add an attacks method.\n\n438\n00:25:36.380 --> 00:25:41.950\nAttacks, and then that is a method on\nthis class, so we'll keep that there.\n\n439\n00:25:41.950 --> 00:25:46.415\nNow this method, if I look back over here,\n\n440\n00:25:46.415 --> 00:25:50.030\nI said player.attacks an enemy.\n\n441\n00:25:50.030 --> 00:25:56.120\nWell, player is this argument,\nthe enemy should be this argument.\n\n442\n00:25:56.120 --> 00:25:57.730\nAnd what are we gonna do?\n\n443\n00:25:57.730 --> 00:26:03.241\nWell, the first is we're gonna get\nour power level, so get_attack_power.\n\n444\n00:26:03.241 --> 00:26:07.680\nBecause this is always gonna\nbe random from 1 to 100.\n\n445\n00:26:07.680 --> 00:26:10.519\nAnd then I'm gonna give\nthe enemies power level.\n\n446\n00:26:15.366 --> 00:26:18.700\nEnemy, enemy.get_attack_power.\n\n447\n00:26:19.740 --> 00:26:22.790\nAnd then I have a little\nbit of decision to make.\n\n448\n00:26:24.700 --> 00:26:28.390\nWell, I'm going to first just\ngive an output to the user.\n\n449\n00:26:29.640 --> 00:26:34.000\n'You summon {} power units.\n\n450\n00:26:34.000 --> 00:26:38.596\nShould probably figure out a better name\nfor that than power units, and then power.\n\n451\n00:26:38.596 --> 00:26:43.937\nAnd likewise, the {}\n\n452\n00:26:43.937 --> 00:26:50.085\nsummons {} power units.\n\n453\n00:26:53.171 --> 00:26:57.878\nAnd then I need two arguments here,\nand that is, well the enemy.kind,\n\n454\n00:26:57.878 --> 00:27:02.450\nso it would be an ogre or an imp or\nsomething, and then the enemy power.\n\n455\n00:27:04.080 --> 00:27:09.150\nAll right, so we're good there,\nif our power is greater than\n\n456\n00:27:10.470 --> 00:27:12.410\nor we need a tie breaker.\n\n457\n00:27:12.410 --> 00:27:18.417\nWell I'm gonna make this easy mode, so\nif our units of power are greater than or\n\n458\n00:27:18.417 --> 00:27:22.930\nequal to right if we hit even,\nwe're still gonna win.\n\n459\n00:27:22.930 --> 00:27:24.206\nThen the enemy power.\n\n460\n00:27:26.596 --> 00:27:28.100\nThen what am I gonna do?\n\n461\n00:27:28.100 --> 00:27:30.388\nWell, I'm just gonna give a prompt.\n\n462\n00:27:33.861 --> 00:27:40.216\nYou slay the {}'.format (enemy.kind) and\n\n463\n00:27:40.216 --> 00:27:46.570\nI'm gonna return True,\nbecause I have a one.\n\n464\n00:27:46.570 --> 00:27:50.170\nSo, if we go back to the game,\nwe use that as if the player attacks.\n\n465\n00:27:50.170 --> 00:27:56.997\nIf the player attacks and wins,\nwhich this returns True dictates,\n\n466\n00:27:56.997 --> 00:28:01.325\nthen the enemy is gone and we're all done.\n\n467\n00:28:01.325 --> 00:28:06.329\nIf however, The power\n\n468\n00:28:06.329 --> 00:28:11.570\nis less than the enemy power,\nthan what would you were defeated?\n\n469\n00:28:11.570 --> 00:28:13.154\nNow, we're not gonna remove\nourselves from the game,\n\n470\n00:28:13.154 --> 00:28:14.310\nwe're just trying to play around here.\n\n471\n00:28:17.522 --> 00:28:20.226\nAnd we're gonna return, False.\n\n472\n00:28:20.226 --> 00:28:24.980\nAll right, so now let's go play our game.\n\n473\n00:28:24.980 --> 00:28:29.690\nLet's see how it works out, moment of\ntruth Vonne, keep your fingers crossed.\n\n474\n00:28:31.230 --> 00:28:35.800\nSo we're gonna clear and\nwe're gonna python3 game.py.\n\n475\n00:28:35.800 --> 00:28:39.460\nI'm ready, I'm going to attack,\nyou slay the ogre.\n\n476\n00:28:39.460 --> 00:28:42.690\nOoh, I'm gonna attack again and\nI have won.\n\n477\n00:28:42.690 --> 00:28:47.300\nNow, sadly because of that randomness,\na lot of times if you just keep playing,\n\n478\n00:28:47.300 --> 00:28:50.520\nyou'll win pretty quickly,\nhow you combat that?\n\n479\n00:28:50.520 --> 00:28:52.240\nHave a bunch of enemies\nof different types.\n\n480\n00:28:53.280 --> 00:28:57.470\nYou know we're just trying to get this\nstarted, the simple battle system.\n\n481\n00:28:57.470 --> 00:28:59.390\nSo I think our games done, Vonne.\n\n482\n00:28:59.390 --> 00:29:05.220\nI'm pretty happy with it, it's simple but\nit works and that's what's important.\n\n483\n00:29:05.220 --> 00:29:06.460\n&gt;&gt; Well that was a lot of fun Justin.\n\n484\n00:29:06.460 --> 00:29:10.517\nI can see how a lot of video games that\nI've played throughout my life are built\n\n485\n00:29:10.517 --> 00:29:14.338\neven on this simple concept, so\nI'm really excited to be able see that.\n\n486\n00:29:14.338 --> 00:29:18.343\nI know I learned a lot I hope\ny'all did too out there, but for\n\n487\n00:29:18.343 --> 00:29:21.620\nsigning off for ITPro.TV I'm Vonne Smith.\n\n488\n00:29:21.620 --> 00:29:22.610\n&gt;&gt; And I'm Justin Dennison.\n\n489\n00:29:22.610 --> 00:29:30.827\n&gt;&gt; See you next time.\n[MUSIC]\n\n490\n00:29:30.827 --> 00:29:32.750\n&gt;&gt; Thank you for watching ITPROTV.\n\n",
          "vimeoId": "208840899"
        },
        {
          "description": "In this episode, Vonne and Justin refine the game code in the MonsterSlash game using Object-Oriented Python. They cover making the code cleaner and more efficient as well as extending some of the aspects of the game.",
          "length": "1081",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-6-1-monster_slash_v1_game_refactor-031317-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-6-1-monster_slash_v1_game_refactor-031317-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-6-1-monster_slash_v1_game_refactor-031317-1-sm.jpg",
          "title": "MonsterSlash v.1 Game Refactor",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:01.224\nWelcome to ITPRO.TV.\n\n2\n00:00:01.224 --> 00:00:01.975\nI'm your host.\n\n3\n00:00:01.975 --> 00:00:08.214\n[CROSSTALK]\n&gt;&gt; You're watching\n\n4\n00:00:08.214 --> 00:00:11.982\nITPRO.TV.\n\n5\n00:00:11.982 --> 00:00:15.510\n&gt;&gt; Hello, everyone and\nwelcome to another episode of ITPROTV.\n\n6\n00:00:15.510 --> 00:00:17.172\nI'm your host Vonne Smith, and\n\n7\n00:00:17.172 --> 00:00:20.199\nin this episode we're back\nwith our Monster Splash game.\n\n8\n00:00:20.199 --> 00:00:23.723\nAnd we're gonna take our coat and\nmake it a little nicer and refine it,\n\n9\n00:00:23.723 --> 00:00:25.295\nmake it a little prettier.\n\n10\n00:00:25.295 --> 00:00:27.351\nSo here to help us with that is Mr.\nJustin Dennison.\n\n11\n00:00:27.351 --> 00:00:28.240\nHello, Justin.\n\n12\n00:00:28.240 --> 00:00:29.170\n&gt;&gt; Hello, Vonne, how are you today?\n\n13\n00:00:29.170 --> 00:00:29.913\n&gt;&gt; I'm good.\n\n14\n00:00:29.913 --> 00:00:32.268\nI like to make things pretty.\n\n15\n00:00:32.268 --> 00:00:35.550\nSo, I'm ready to go with this\nrefining we're gonna do.\n\n16\n00:00:35.550 --> 00:00:37.760\n&gt;&gt; Yeah,\nI also like to make things pretty.\n\n17\n00:00:37.760 --> 00:00:41.740\nBut along with this pretty,\nis gonna come with some nice features.\n\n18\n00:00:41.740 --> 00:00:45.100\nSo, I put this in front of some other\ndevelopers, and they were like, you know,\n\n19\n00:00:45.100 --> 00:00:48.300\nthe actors, they look pretty nice, right?\n\n20\n00:00:48.300 --> 00:00:50.890\nThey're encapsulated,\nthey're an abstraction.\n\n21\n00:00:50.890 --> 00:00:54.730\nMaybe there's some other things you can do\nthere and they're still doing some review.\n\n22\n00:00:54.730 --> 00:00:56.790\nBut the game, it's very imperative.\n\n23\n00:00:56.790 --> 00:00:58.300\nIt's just this file that's running.\n\n24\n00:00:58.300 --> 00:01:03.990\nIt would be nice if we could create a\nbunch of games based on some input, right?\n\n25\n00:01:03.990 --> 00:01:05.750\nSome dependencies?\n\n26\n00:01:05.750 --> 00:01:07.390\nWell, that's what we're gonna do.\n\n27\n00:01:07.390 --> 00:01:11.920\nIt would be nice if the game was\nactually a class that had a player and\n\n28\n00:01:11.920 --> 00:01:14.250\na set of enemies and\nthen everything ran there.\n\n29\n00:01:14.250 --> 00:01:15.657\nAnd where does this come in?\n\n30\n00:01:15.657 --> 00:01:16.980\nWhere does this help us?\n\n31\n00:01:16.980 --> 00:01:20.210\nWell, if I wanna change\nthe game difficulty level,\n\n32\n00:01:20.210 --> 00:01:23.010\nthen I can change the game that started.\n\n33\n00:01:23.010 --> 00:01:27.842\nFor instance,\nlet's say easy is you have three enemies.\n\n34\n00:01:27.842 --> 00:01:29.668\nMedium is you have ten enemies.\n\n35\n00:01:29.668 --> 00:01:32.067\nAnd then hard, you have 100 enemies.\n\n36\n00:01:32.067 --> 00:01:35.947\nNow that might be a little crazy to do,\nbut as it stands now,\n\n37\n00:01:35.947 --> 00:01:39.040\nwe have to go in and\nchange the code each time.\n\n38\n00:01:39.040 --> 00:01:41.899\nAnd we can't automate this process.\n\n39\n00:01:41.899 --> 00:01:46.113\nIt would be better if our game\ncould just be constructed and\n\n40\n00:01:46.113 --> 00:01:50.980\nstarted based on an input of player and\na list of the enemies.\n\n41\n00:01:50.980 --> 00:01:53.845\nAnd then it was all just running\nin its own little world.\n\n42\n00:01:53.845 --> 00:01:56.511\nAnd that's what we're gonna do, and\n\n43\n00:01:56.511 --> 00:02:01.940\nwe're gonna add some nice OOP flavor to\nour game and actually make it a class.\n\n44\n00:02:01.940 --> 00:02:02.974\nSo we're gonna do that incrementally.\n\n45\n00:02:02.974 --> 00:02:07.890\nBut I think it's best just to jump down\nin and see how this is gonna play out.\n\n46\n00:02:07.890 --> 00:02:08.563\nSo, here we are.\n\n47\n00:02:08.563 --> 00:02:10.086\nWe're in game.py.\n\n48\n00:02:10.086 --> 00:02:13.999\nAnd what I'm gonna do,\nis I'm gonna start with a class here.\n\n49\n00:02:13.999 --> 00:02:16.564\nAnd I'm gonna have that dunder init.\n\n50\n00:02:16.564 --> 00:02:19.080\nNow that's our initialization.\n\n51\n00:02:19.080 --> 00:02:22.380\nAnd I know the game is gonna take\nplayers and enemies, as I just said.\n\n52\n00:02:23.400 --> 00:02:28.388\n&gt;&gt; And I'm just gonna say\nself.player = player and\n\n53\n00:02:28.388 --> 00:02:31.244\nself.enemies = enemies.\n\n54\n00:02:31.244 --> 00:02:36.103\nNow using that, I should be able to\nconstruct a new game object based\n\n55\n00:02:36.103 --> 00:02:39.440\non an input player and\na input list of enemies.\n\n56\n00:02:40.740 --> 00:02:46.790\nIn Python I have no way of denoting\nthat a player is a player type object or\n\n57\n00:02:46.790 --> 00:02:49.350\nenemies is a list of enemies type object.\n\n58\n00:02:49.350 --> 00:02:50.820\nSo I have to keep that in mind.\n\n59\n00:02:50.820 --> 00:02:53.590\nThat's one of the downsides\nof dynamic languages.\n\n60\n00:02:53.590 --> 00:02:56.640\nOr maybe it's a upside\ndepending on your viewpoint.\n\n61\n00:02:56.640 --> 00:03:00.260\nBut as it stands,\nI should be able to construct this game.\n\n62\n00:03:00.260 --> 00:03:02.780\nWell, let's see if we can\ncome down here in Main.\n\n63\n00:03:02.780 --> 00:03:05.840\nI'm gonna comment this out just for\na moment.\n\n64\n00:03:05.840 --> 00:03:09.820\nAnd actually,\nI'm gonna grab these enemies and\n\n65\n00:03:09.820 --> 00:03:13.560\nplayer right here and\nI'm just gonna copy them.\n\n66\n00:03:15.390 --> 00:03:18.520\nAnd I'm gonna put them in the main,\nso I've constructed enemies.\n\n67\n00:03:18.520 --> 00:03:19.960\nI've constructed player.\n\n68\n00:03:19.960 --> 00:03:26.172\nAnd then I should be able\nto say game = Game object,\n\n69\n00:03:26.172 --> 00:03:30.365\nand it takes a player and enemies.\n\n70\n00:03:30.365 --> 00:03:32.810\nEnemies, is that spelled right?\n\n71\n00:03:32.810 --> 00:03:33.600\nYeah, I think that is.\n\n72\n00:03:33.600 --> 00:03:34.990\nAll right, looks good.\n\n73\n00:03:34.990 --> 00:03:36.820\nAnd then, let's just print out game.\n\n74\n00:03:38.420 --> 00:03:41.360\nSo it's not actually gonna run our\ngame yet but we're in the process.\n\n75\n00:03:41.360 --> 00:03:45.330\nOkay, I need this game to depend on\nthe injected player and enemies.\n\n76\n00:03:46.380 --> 00:03:49.540\nAnd well, this is my first approximation.\n\n77\n00:03:49.540 --> 00:03:51.360\nLet's see how this works out.\n\n78\n00:03:51.360 --> 00:03:56.090\nSo python3 game.py and it's a game object.\n\n79\n00:03:56.090 --> 00:03:59.114\nNow that's because we don't have a dunder\nstring or a dunder reaper method.\n\n80\n00:03:59.114 --> 00:04:02.640\nIt's not gonna print out, but typically\nwe're not gonna print out the game state.\n\n81\n00:04:02.640 --> 00:04:04.830\nWe're gonna have the game run.\n\n82\n00:04:04.830 --> 00:04:06.760\nWe don't need a string representation.\n\n83\n00:04:06.760 --> 00:04:09.948\nBut it does show that it is constructed,\nand that's good to know.\n\n84\n00:04:09.948 --> 00:04:16.763\nLet's see if I can say game.player,\nand game.enemies.\n\n85\n00:04:16.763 --> 00:04:18.823\nAnd these are just temporary here.\n\n86\n00:04:18.823 --> 00:04:22.440\nWe'll get rid of these and there we go.\n\n87\n00:04:22.440 --> 00:04:27.580\nOkay, well, we now have the ability\nto change the player and enemies and\n\n88\n00:04:27.580 --> 00:04:31.888\nthe game is not intrinsically\ntied to that particular list.\n\n89\n00:04:31.888 --> 00:04:35.050\nDoes is depend on a player and\na set of enemies?\n\n90\n00:04:35.050 --> 00:04:40.330\nSure, but does it depend on a specific\nplayer and a specific set of enemies?\n\n91\n00:04:40.330 --> 00:04:45.670\nWell, this game object doesn't, but\nour play method right here does, right?\n\n92\n00:04:45.670 --> 00:04:47.193\nWe would have to come\nchange this every time.\n\n93\n00:04:47.193 --> 00:04:52.151\nIt would be nice if these could be\ninjected as a dependency into our game\n\n94\n00:04:52.151 --> 00:04:52.830\nobject.\n\n95\n00:04:52.830 --> 00:04:54.754\nSo, I think that's where we need to start.\n\n96\n00:04:54.754 --> 00:04:58.013\nAnd part of this is just\ntracking things down and\n\n97\n00:04:58.013 --> 00:05:01.225\nkind of going through\nlike we did originally.\n\n98\n00:05:01.225 --> 00:05:06.840\nI'm gonna take this main method and I'm\ngonna make this part of the game object.\n\n99\n00:05:06.840 --> 00:05:08.457\nBoom, just like that.\n\n100\n00:05:08.457 --> 00:05:12.048\nBut since this a method on the game,\n\n101\n00:05:12.048 --> 00:05:16.740\nit has to take a game self-argument,\nright?\n\n102\n00:05:16.740 --> 00:05:18.622\nIt a method on the game so there's self.\n\n103\n00:05:18.622 --> 00:05:21.427\nLikewise, I know that print intro and\n\n104\n00:05:21.427 --> 00:05:26.130\nplay are going to be methods\non the game object itself.\n\n105\n00:05:26.130 --> 00:05:27.160\nIt's all encapsulated.\n\n106\n00:05:27.160 --> 00:05:29.800\nThis is where we get back\nto the encapsulation.\n\n107\n00:05:29.800 --> 00:05:34.120\nWe want it all bundled together, all that\nbehavior and data kinda bundled together,\n\n108\n00:05:34.120 --> 00:05:36.770\nand just working instead\nof strewn out everywhere.\n\n109\n00:05:37.990 --> 00:05:43.453\nSo I'm gonna say self.print_intro().\n\n110\n00:05:43.453 --> 00:05:45.202\nAnd I'm gonna comment out play() just for\n\n111\n00:05:45.202 --> 00:05:47.930\na moment because we have some other\nthings we have to do in play().\n\n112\n00:05:47.930 --> 00:05:51.660\nWe may just rewrite that and\nthen move things accordingly.\n\n113\n00:05:51.660 --> 00:05:56.510\nSo if I take this print_intro and I tab,\n\n114\n00:05:56.510 --> 00:06:01.030\nwell, that is now a method of game also,\nright.\n\n115\n00:06:01.030 --> 00:06:03.531\nNow, I'm using part of my\ntext editor as a helper here.\n\n116\n00:06:03.531 --> 00:06:05.564\nWhen I highlight a block and hit Tab,\n\n117\n00:06:05.564 --> 00:06:09.090\nit will actually tab the entire\nblock of code for me.\n\n118\n00:06:09.090 --> 00:06:12.490\nIf you're using another text editor,\nyou'll have to do this a line at a time.\n\n119\n00:06:12.490 --> 00:06:15.364\nSo keep in mind indentation and\nwhite space does matter in Python.\n\n120\n00:06:15.364 --> 00:06:17.099\nYou may end up with weird errors here.\n\n121\n00:06:17.099 --> 00:06:19.820\nBut this is all I'm gonna\ndo up until this point.\n\n122\n00:06:19.820 --> 00:06:21.250\nI'm gonna test this.\n\n123\n00:06:21.250 --> 00:06:25.597\nSo I'm gonna keep everything as it is,\nbut I'm gonna remove this print and\n\n124\n00:06:25.597 --> 00:06:27.468\nnow I'm gonna say game.main.\n\n125\n00:06:27.468 --> 00:06:30.201\nAnd maybe main is not the best\nmethod name as it stands right now.\n\n126\n00:06:30.201 --> 00:06:33.886\nWe're gonna keep it because\nthat's what we've done already.\n\n127\n00:06:33.886 --> 00:06:38.828\nBut really this would be like game.run or\ngame.start, something like that.\n\n128\n00:06:38.828 --> 00:06:41.233\nBut let's see how it plays out.\n\n129\n00:06:41.233 --> 00:06:48.870\nPython3 game, and we're getting similar\nbehavior here and that's good to know.\n\n130\n00:06:48.870 --> 00:06:50.355\nAnd if I hit Enter, it just ends.\n\n131\n00:06:50.355 --> 00:06:51.349\nWhy does it end?\n\n132\n00:06:51.349 --> 00:06:56.310\nWell, that's because the only part of\nthe main right now is the print_intro.\n\n133\n00:06:56.310 --> 00:06:57.400\nNow we need the play.\n\n134\n00:06:58.420 --> 00:07:04.382\nSo if I go back and I play,\nI'm gonna self.play.\n\n135\n00:07:04.382 --> 00:07:09.480\nAll right, currently the game\nobject does not have a play method.\n\n136\n00:07:09.480 --> 00:07:13.280\nThere is a play function\nthat's standing out here, but\n\n137\n00:07:13.280 --> 00:07:15.730\nit is not part of the game object.\n\n138\n00:07:15.730 --> 00:07:18.710\nI'm gonna move parts of\nthis a chunk at a time\n\n139\n00:07:18.710 --> 00:07:21.690\nbecause I know there are some\nthings that I need to reference.\n\n140\n00:07:21.690 --> 00:07:27.140\nSo I'm gonna actually instead of\nindenting them, get that out of there.\n\n141\n00:07:27.140 --> 00:07:28.670\nTrying to talk a little fast there,\nhold on.\n\n142\n00:07:30.470 --> 00:07:33.440\nIs I'm just gonna have a pass here and\n\n143\n00:07:33.440 --> 00:07:37.670\nthen I'm gonna slowly start moving that\ncode for that encapsulation, okay?\n\n144\n00:07:39.150 --> 00:07:46.080\nMake sure I've saved here, and everything\nlooks to be working still, right?\n\n145\n00:07:46.080 --> 00:07:47.850\nI've uncommented play.\n\n146\n00:07:47.850 --> 00:07:51.620\nThere's play, but\nnow these enemies and player,\n\n147\n00:07:51.620 --> 00:07:56.180\ndo I need to make those\nin the play function?\n\n148\n00:07:56.180 --> 00:07:59.321\nThose are actually part of the\nconstruction of this game object, right?\n\n149\n00:07:59.321 --> 00:08:05.180\nSo self.player, because this is a method,\nis available inside of play.\n\n150\n00:08:05.180 --> 00:08:10.687\nAnd just to show you,\nI can say self.player and\n\n151\n00:08:10.687 --> 00:08:15.380\nprint(self.enemies), all right?\n\n152\n00:08:15.380 --> 00:08:19.470\nI have not constructed player\nenemies inside of the play method,\n\n153\n00:08:19.470 --> 00:08:20.840\nas I did on the function originally.\n\n154\n00:08:22.200 --> 00:08:27.740\nAnd there's Hercules at level one and\nenemy over and enemy in.\n\n155\n00:08:27.740 --> 00:08:31.610\nWell, if these are based on the construct,\nthe game is actually dependent\n\n156\n00:08:31.610 --> 00:08:34.550\non players and enemies, but\nI can test the game separately.\n\n157\n00:08:34.550 --> 00:08:36.200\nThey are decoupled.\n\n158\n00:08:36.200 --> 00:08:39.140\nNot on a particular set\nas this play method is.\n\n159\n00:08:40.140 --> 00:08:43.660\nNow I can take, well, not this part but\n\n160\n00:08:43.660 --> 00:08:48.390\nthis, while true,\nI can take that part and start moving it.\n\n161\n00:08:48.390 --> 00:08:49.340\nI'm not gonna move it all at once,\n\n162\n00:08:49.340 --> 00:08:51.150\nbecause there are some\nchanges that I need to make.\n\n163\n00:08:52.790 --> 00:08:54.366\nSo, what am I gonna do?\n\n164\n00:08:54.366 --> 00:08:59.160\nI'm gonna say while, true, and then well,\n\n165\n00:08:59.160 --> 00:09:03.330\nwhat is the next enemy that has to play?\n\n166\n00:09:03.330 --> 00:09:08.594\nThe next enemy = random.choice,\nstill the same here.\n\n167\n00:09:08.594 --> 00:09:12.721\nBut instead of enemies,\nit's gonna be self.enemies.\n\n168\n00:09:12.721 --> 00:09:18.800\nAnd then let's just print out, next enemy.\n\n169\n00:09:18.800 --> 00:09:20.300\nAnd I'm gonna go ahead and break.\n\n170\n00:09:20.300 --> 00:09:22.200\nNow we will remove these\nin just a moment here.\n\n171\n00:09:23.990 --> 00:09:27.240\nSo, boom, boom, and it's the ogre.\n\n172\n00:09:27.240 --> 00:09:28.840\nOkay, so that's working.\n\n173\n00:09:28.840 --> 00:09:31.685\nBut I had to change from\nenemies to self.enemies,\n\n174\n00:09:31.685 --> 00:09:36.780\nbecause it's the data that's stored on the\nobject now, instead of just these lists.\n\n175\n00:09:38.210 --> 00:09:39.620\nI also need that command.\n\n176\n00:09:40.748 --> 00:09:45.370\nThat part,\nI'm gonna grab this first little bit here\n\n177\n00:09:47.420 --> 00:09:52.250\nand I'm gonna copy that and\nbring it up here and paste.\n\n178\n00:09:52.250 --> 00:09:53.480\nAnd then I'm gonna look.\n\n179\n00:09:53.480 --> 00:09:55.620\nNotice this is a nextenemy.com.\n\n180\n00:09:55.620 --> 00:09:57.460\nWell, that's still okay.\n\n181\n00:09:57.460 --> 00:10:00.070\nBut player.name, well,\n\n182\n00:10:00.070 --> 00:10:05.300\nI don't have player available inside\nof play just as a regular variable.\n\n183\n00:10:05.300 --> 00:10:08.400\nIt's actually data attached to the object.\n\n184\n00:10:08.400 --> 00:10:12.080\nSo the games player.name.\n\n185\n00:10:12.080 --> 00:10:14.588\nAll right, so if we do that,\nwe should be good.\n\n186\n00:10:14.588 --> 00:10:17.760\nLet's see here.\n\n187\n00:10:17.760 --> 00:10:19.050\nLet's just try it out.\n\n188\n00:10:19.050 --> 00:10:24.495\nSo, I'm gonna clear, Enter,\nand I know that I've only\n\n189\n00:10:24.495 --> 00:10:30.400\ndone the r part, so\nI'm gonna hit r, and I run away.\n\n190\n00:10:30.400 --> 00:10:31.940\nBut now I'm just gonna have to kill it.\n\n191\n00:10:31.940 --> 00:10:36.250\nBecause I have no way of winning or\nlosing or getting out of there for now.\n\n192\n00:10:36.250 --> 00:10:39.537\nNow something in the future is you\nshould probably listen for q and\n\n193\n00:10:39.537 --> 00:10:41.169\nthen just break out of the loop.\n\n194\n00:10:41.169 --> 00:10:44.300\nBut we're gonna keep it this way just for\na little bit.\n\n195\n00:10:45.940 --> 00:10:52.500\nAll right, well,\nI'm gonna take this elif and\n\n196\n00:10:52.500 --> 00:10:57.759\ncopy and move that and paste, right?\n\n197\n00:10:57.759 --> 00:11:00.504\nI'm not a big fan of copy, paste but\nI'm trying to move things around and\n\n198\n00:11:00.504 --> 00:11:01.822\nI'm taking a chunks out of chunk.\n\n199\n00:11:01.822 --> 00:11:07.480\nIf I was really doing this,\nI may be prone to type all of this.\n\n200\n00:11:08.770 --> 00:11:11.240\nJust for individual look throughs.\n\n201\n00:11:11.240 --> 00:11:14.620\nBut I'm sure you don't want to sit\nhere and watch me type it again.\n\n202\n00:11:14.620 --> 00:11:17.670\nSo, we're trying to keep that in check.\n\n203\n00:11:17.670 --> 00:11:20.880\nSo the self.player.name,\nokay, this matches here.\n\n204\n00:11:20.880 --> 00:11:24.310\nAgain, this is the games player.\n\n205\n00:11:24.310 --> 00:11:27.362\nAlso, the games enemies.\n\n206\n00:11:27.362 --> 00:11:29.793\nSo self.enemies.remove(next_enemy).\n\n207\n00:11:29.793 --> 00:11:34.370\nAnd then the game's player.\n\n208\n00:11:34.370 --> 00:11:37.190\nSo I have the ability to attack now.\n\n209\n00:11:37.190 --> 00:11:39.800\nBut what if I came down here to p?\n\n210\n00:11:39.800 --> 00:11:45.190\nWell, if I grab this and this,\nthese have no reliance on player or\n\n211\n00:11:45.190 --> 00:11:48.020\nenemy so I can probably just go ahead and\nmove those.\n\n212\n00:11:49.740 --> 00:11:50.810\nAnd let's see here.\n\n213\n00:11:51.810 --> 00:11:55.961\nCome to the end, hit Enter,\nbackspace, pace.\n\n214\n00:11:55.961 --> 00:11:59.433\nIt's looking pretty good, all right?\n\n215\n00:11:59.433 --> 00:12:01.941\nAnd let's just test that out,\nsee if it works.\n\n216\n00:12:01.941 --> 00:12:07.720\nSo I'm gonna clear and\npython3 game.py and hit Enter.\n\n217\n00:12:07.720 --> 00:12:09.959\nWell, let's run away.\n\n218\n00:12:09.959 --> 00:12:11.995\nI run, let's pass.\n\n219\n00:12:11.995 --> 00:12:14.103\nYou're still thinking\nabout your next move.\n\n220\n00:12:14.103 --> 00:12:14.974\nThere's attack.\n\n221\n00:12:14.974 --> 00:12:16.591\nI was a defeated.\n\n222\n00:12:16.591 --> 00:12:20.646\nLet's attack again, I slay the ogre.\n\n223\n00:12:20.646 --> 00:12:22.502\nLet's attack, attack.\n\n224\n00:12:22.502 --> 00:12:27.009\nUh-oh, cannot choose\nfrom an empty sequence.\n\n225\n00:12:27.009 --> 00:12:28.173\nWhy is that the case?\n\n226\n00:12:28.173 --> 00:12:29.155\nAn index error,\n\n227\n00:12:29.155 --> 00:12:34.220\nthat usually means you're trying to access\na list that doesn't have anything in it.\n\n228\n00:12:34.220 --> 00:12:39.155\nOr you're trying to access the third\nelement when there's only two in it.\n\n229\n00:12:39.155 --> 00:12:42.778\nSo that makes me think that,\nwell, there's some craziness,\n\n230\n00:12:42.778 --> 00:12:46.120\nand it tells me right here,\nrandom.choiceSelf.enemies.\n\n231\n00:12:46.120 --> 00:12:50.112\nBut choice is depending on\nself.enemies to have something in it.\n\n232\n00:12:50.112 --> 00:12:55.071\nIf I go back to the old version of my\ngame, and not on three other desktops away\n\n233\n00:12:55.071 --> 00:12:59.940\ncuz I swiped too hard, I had this to\nhandle when there was no more enemies.\n\n234\n00:12:59.940 --> 00:13:04.766\nSo I need this last little bit of the game\nlogic so I'm gonna grab this entire piece.\n\n235\n00:13:04.766 --> 00:13:08.886\nAnd I can do this print and\nprint('*'*30) because,\n\n236\n00:13:08.886 --> 00:13:12.050\nwell, I know this has no\nreliance on the game.\n\n237\n00:13:12.050 --> 00:13:18.198\nBut this enemies does, so\nI'm gonna move this up and move this.\n\n238\n00:13:18.198 --> 00:13:20.391\nI'm still in the loop.\n\n239\n00:13:20.391 --> 00:13:24.500\nI'm gonna paste and then Enter.\n\n240\n00:13:24.500 --> 00:13:29.818\nAnd enemies is now self.enemies,\nso it's the game's actual enemies.\n\n241\n00:13:29.818 --> 00:13:33.176\nAll right, looks like I have all of it.\n\n242\n00:13:33.176 --> 00:13:34.540\nSo I should be able to play the game now.\n\n243\n00:13:34.540 --> 00:13:37.809\nSo let's see here.\n\n244\n00:13:37.809 --> 00:13:40.703\npython3 game.py, Enter.\n\n245\n00:13:40.703 --> 00:13:42.111\nI'm going to attack.\n\n246\n00:13:42.111 --> 00:13:44.878\nI'm going to attack again.\n\n247\n00:13:44.878 --> 00:13:47.031\nI'm gonna attack.\n\n248\n00:13:47.031 --> 00:13:51.158\nI slay the this ogre's rough.\n\n249\n00:13:51.158 --> 00:13:52.683\nBut I finally did win.\n\n250\n00:13:52.683 --> 00:13:55.744\nAll right, so\nthe game plays like it did originally.\n\n251\n00:13:55.744 --> 00:14:00.771\nThere's a couple of other things\nthat I'm gonna change, though.\n\n252\n00:14:00.771 --> 00:14:05.413\nI'm not even gonna store\nthis in a variable.\n\n253\n00:14:05.413 --> 00:14:09.576\nI am gonna say construct the object and\n\n254\n00:14:09.576 --> 00:14:13.876\nthen immediately call .main, okay?\n\n255\n00:14:13.876 --> 00:14:16.122\nSo I'm gonna move this out.\n\n256\n00:14:16.122 --> 00:14:17.493\nGet rid of this.\n\n257\n00:14:17.493 --> 00:14:20.762\nThis old play function,\nI'm also going to get rid of this.\n\n258\n00:14:20.762 --> 00:14:25.600\nCuz I don't need this anymore cuz it's now\nencapsulated inside of this game object.\n\n259\n00:14:27.000 --> 00:14:30.670\nAll right, now what else could I do?\n\n260\n00:14:30.670 --> 00:14:34.460\nOne final thing that I wanna do\nis this last little piece here.\n\n261\n00:14:34.460 --> 00:14:36.131\nWhat is this doing?\nThis is not descriptive.\n\n262\n00:14:36.131 --> 00:14:39.350\nI'm printing and then I'm printing\nsome asterisk and then I'm printing.\n\n263\n00:14:39.350 --> 00:14:41.530\nWell, I'm gonna pull this out.\n\n264\n00:14:41.530 --> 00:14:44.184\nAnd I'm gonna make that a method.\n\n265\n00:14:44.184 --> 00:14:47.204\nAnd what would this actually be?\n\n266\n00:14:47.204 --> 00:14:53.194\nHow about print, line break.\n\n267\n00:14:53.194 --> 00:14:54.320\nI think, yeah, line break.\n\n268\n00:14:57.650 --> 00:14:59.450\nAnd just gonna put that there.\n\n269\n00:14:59.450 --> 00:15:05.570\nNow I have a self argument just like I\nhave in print intro but it is not needed.\n\n270\n00:15:05.570 --> 00:15:08.391\nBut since this is a method on\nthis particular game object,\n\n271\n00:15:08.391 --> 00:15:09.780\nthat's important to know.\n\n272\n00:15:09.780 --> 00:15:13.242\nSo I'm gonna now come back and\n\n273\n00:15:13.242 --> 00:15:18.651\nsay self.print_linebreak and there we go.\n\n274\n00:15:18.651 --> 00:15:20.880\nIt looks like it should work.\n\n275\n00:15:22.250 --> 00:15:23.146\nLet's see if we can play.\n\n276\n00:15:23.146 --> 00:15:25.661\nI'm gonna run.\n\n277\n00:15:25.661 --> 00:15:27.153\nI'm gonna attack.\n\n278\n00:15:27.153 --> 00:15:28.014\nI'm gonna attack.\n\n279\n00:15:28.014 --> 00:15:29.007\nI'm going to pass.\n\n280\n00:15:29.007 --> 00:15:30.990\nI'm gonna run, attack, attack.\n\n281\n00:15:30.990 --> 00:15:32.898\nAnd I finally did win.\n\n282\n00:15:32.898 --> 00:15:35.050\nNow, what's nice about this?\n\n283\n00:15:36.090 --> 00:15:38.990\nWell, let's try something\nkind of interesting here.\n\n284\n00:15:40.780 --> 00:15:47.343\nLet's say Game(player),\nlet's just do the exact same thing here.\n\n285\n00:15:49.618 --> 00:15:54.830\nAnd I've created two game objects with\nthe .main, but they look exactly the same.\n\n286\n00:15:54.830 --> 00:15:56.128\nWell, let's see what happens.\n\n287\n00:15:56.128 --> 00:16:01.470\nSo clear.\n\n288\n00:16:01.470 --> 00:16:02.896\nSo looks good.\n\n289\n00:16:02.896 --> 00:16:04.305\nI'm gonna attack.\n\n290\n00:16:04.305 --> 00:16:05.168\nI'm gonna attack.\n\n291\n00:16:05.168 --> 00:16:06.576\nI'm gonna attack.\n\n292\n00:16:06.576 --> 00:16:09.807\nAnd notice the next game starts.\n\n293\n00:16:09.807 --> 00:16:13.151\nSo that game.main I've started over again.\n\n294\n00:16:13.151 --> 00:16:17.883\nSo what I can do is store this information\nin other places, maybe in text files,\n\n295\n00:16:17.883 --> 00:16:21.360\nmaybe the enemy's list can be\ngenerated from text files.\n\n296\n00:16:21.360 --> 00:16:27.029\nAnd I can start to build games\nbased on some external input.\n\n297\n00:16:27.029 --> 00:16:29.850\nAnd I don't have to always come back and\nchange this code.\n\n298\n00:16:29.850 --> 00:16:32.263\nAnd we're gonna leave it like this for\nnow.\n\n299\n00:16:32.263 --> 00:16:37.710\nBut at some point,\nit may be nice to have a save file, right?\n\n300\n00:16:37.710 --> 00:16:41.134\nMaybe the game's evolved to the point\nyou can't play it in one sitting.\n\n301\n00:16:41.134 --> 00:16:45.178\nOr if you have 100 enemies, you wanna\nbe able to save that, come back in and\n\n302\n00:16:45.178 --> 00:16:46.870\nstart the game from that state.\n\n303\n00:16:46.870 --> 00:16:50.394\nNow that this is an object that\ndepends on a player and enemies and\n\n304\n00:16:50.394 --> 00:16:51.837\nthis takes it from there.\n\n305\n00:16:51.837 --> 00:16:54.402\nAnd the game mechanics hasn't changed,\nright.\n\n306\n00:16:54.402 --> 00:16:56.272\nIt's not changing how it works.\n\n307\n00:16:56.272 --> 00:16:59.040\nIt's just the initial state changes.\n\n308\n00:16:59.040 --> 00:17:03.540\nI can just create the game right where\nI left off and nothing has changed.\n\n309\n00:17:03.540 --> 00:17:08.514\nNow, in more complex games,\nthat may not always be the case, but\n\n310\n00:17:08.514 --> 00:17:10.785\nthis is a good start, right?\n\n311\n00:17:10.785 --> 00:17:16.180\nNow, Vonne, I do wanna take a look\nat some of the other actors things.\n\n312\n00:17:16.180 --> 00:17:17.420\nAnd we haven't been here too long.\n\n313\n00:17:17.420 --> 00:17:21.838\nBut I do know the actors are gonna take\na little bit longer to sift through and\n\n314\n00:17:21.838 --> 00:17:22.760\nreason about.\n\n315\n00:17:22.760 --> 00:17:28.449\nBecause actors are changing in both\nplaces, so maybe we should hang out,\n\n316\n00:17:28.449 --> 00:17:32.415\ntail off here and come back for\nthe actor refactor.\n\n317\n00:17:32.415 --> 00:17:34.310\n&gt;&gt; All right, well,\nthat sounds like a plan, Justin.\n\n318\n00:17:34.310 --> 00:17:36.623\nI really liked watching\nyou change this code,\n\n319\n00:17:36.623 --> 00:17:40.252\nmake it a lot more efficient in\nextending the functionality of the game.\n\n320\n00:17:40.252 --> 00:17:43.777\nSo looking forward to making those\nactors a little more pretty as well.\n\n321\n00:17:43.777 --> 00:17:46.714\nSo signing off for\nITProTV, I'm Vonne Smith.\n\n322\n00:17:46.714 --> 00:17:48.154\n&gt;&gt; And I'm Justin Dennison.\n\n323\n00:17:48.154 --> 00:17:49.186\n&gt;&gt; See you next time.\n\n324\n00:17:49.186 --> 00:17:56.580\n[MUSIC]\n\n325\n00:17:56.580 --> 00:17:59.252\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "208841733"
        },
        {
          "description": "In this episode, Vonne and Justin refine the actor code in the MonsterSlash game using Object-Oriented Python. They cover making the code cleaner and more efficient as well as extending some of the aspects of the player and the enemy.",
          "length": "1587",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-7-1-monter_slash_v1_actor_refactor-031317-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-7-1-monter_slash_v1_actor_refactor-031317-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-7-1-monter_slash_v1_actor_refactor-031317-1-sm.jpg",
          "title": "MonsterSlash v.1 Actor Refactor",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:01.261\nWelcome to ITProTV.\n\n2\n00:00:01.261 --> 00:00:01.990\nI'm your host, Don Pezet.\n\n3\n00:00:01.990 --> 00:00:07.118\n[CROSSTALK]\nYou're\n\n4\n00:00:07.118 --> 00:00:12.569\nwatching ITProTV.\n\n5\n00:00:12.569 --> 00:00:15.823\n&gt;&gt; Hello, everyone, and\nwelcome to another episode of ITProTV.\n\n6\n00:00:15.823 --> 00:00:20.312\nI'm Vonne Smith, and in this episode\ntoday, we're going to be continuing\n\n7\n00:00:20.312 --> 00:00:23.341\non refactoring our code in\nour monster slash game.\n\n8\n00:00:23.341 --> 00:00:25.570\nSo here to help us with that is Mr.\nJustin Dennison.\n\n9\n00:00:25.570 --> 00:00:26.310\nHello, Justin.\n\n10\n00:00:26.310 --> 00:00:27.530\n&gt;&gt; Hello Vonne, how are you today?\n\n11\n00:00:27.530 --> 00:00:31.840\n&gt;&gt; I'm good, I'm ready to send our actors\nto hair and makeup, it sounds like.\n\n12\n00:00:31.840 --> 00:00:36.190\n&gt;&gt; Yeah, yeah, exactly, so I was looking\nthrough, we just refactored the game,\n\n13\n00:00:36.190 --> 00:00:39.290\nand I was looking through the actors and\nI noticed.\n\n14\n00:00:39.290 --> 00:00:43.030\nAnd I think you've made a mention of this,\nthere's some code duplication there.\n\n15\n00:00:43.030 --> 00:00:46.050\nThere's some repetitiveness and actually,\n\n16\n00:00:46.050 --> 00:00:48.890\nlet's take a look at that\nrepetitiveness in our actors.\n\n17\n00:00:50.170 --> 00:00:53.470\nSo here I have my Player, and\nthere's a name and a level.\n\n18\n00:00:53.470 --> 00:00:58.150\nAnd then if I come down to enemy,\nthere's a kind and a level, and, well,\n\n19\n00:00:58.150 --> 00:01:01.600\nthat's similar, right?\n\n20\n00:01:01.600 --> 00:01:06.767\nKind, name, it's almost, well,\nI have a repr, I get_attack_power.\n\n21\n00:01:06.767 --> 00:01:12.223\nNotice that get_attack_power is the same\nhere and the repr is almost exact, right.\n\n22\n00:01:12.223 --> 00:01:16.902\nThe player at level and then, well,\nenemy, I didn't put at level, but\n\n23\n00:01:16.902 --> 00:01:18.684\nthey're kind of the same.\n\n24\n00:01:18.684 --> 00:01:23.446\nIf I'm squinting my eyes a little bit,\nlooking around, it would almost be nice if\n\n25\n00:01:23.446 --> 00:01:28.070\nI could make kind of a parent class,\na super class, that would encapsulate, or\n\n26\n00:01:28.070 --> 00:01:32.900\nabstract away some of this behavior,\nand then I could extend from that.\n\n27\n00:01:32.900 --> 00:01:34.828\nNow, what is the purpose of that?\n\n28\n00:01:34.828 --> 00:01:37.210\nWell, it's to help enforce interfaces.\n\n29\n00:01:37.210 --> 00:01:42.000\nIt's to help say, I need these methods for\nall of these other job classes.\n\n30\n00:01:42.000 --> 00:01:45.580\nSo let's see if we can use that to\nreduce some of the repetitiveness, but\n\n31\n00:01:45.580 --> 00:01:48.650\nalso to help think about\nour design a little bit.\n\n32\n00:01:49.650 --> 00:01:53.300\nNow we have a player and an enemy,\nthey are kind of the same, right.\n\n33\n00:01:53.300 --> 00:01:57.500\nIf we would flip roles and you would\nbe the other you'd still the player and\n\n34\n00:01:57.500 --> 00:02:01.630\nit would be nice if I could pull\nthat out into a more abstract thing.\n\n35\n00:02:02.840 --> 00:02:04.686\nWell, what's a good abstract?\n\n36\n00:02:04.686 --> 00:02:07.530\nWell, in a game,\n\n37\n00:02:07.530 --> 00:02:12.680\nmaybe we can call it an actor, right, all\nof these are actors in the battle system.\n\n38\n00:02:12.680 --> 00:02:16.570\nThey have a particular set\nof things that they need.\n\n39\n00:02:16.570 --> 00:02:17.830\nAnd what does that mean?\n\n40\n00:02:17.830 --> 00:02:25.356\nWell, I'm going to say that the actor\nhas a self and a name and a level, okay.\n\n41\n00:02:25.356 --> 00:02:26.870\nWell, this looks a lot like player.\n\n42\n00:02:28.220 --> 00:02:32.367\nBut we're gonna see how this comes out,\nso self.name,\n\n43\n00:02:32.367 --> 00:02:35.940\nself.level equals level.\n\n44\n00:02:35.940 --> 00:02:39.168\nAnd also all the things\nlike get_attack_power,\n\n45\n00:02:39.168 --> 00:02:43.530\nthis get_attack_power and this\nget_attack_power are exactly the same.\n\n46\n00:02:44.920 --> 00:02:49.960\nWell, that would be nice if, well, I could\njust pull this out into this general class\n\n47\n00:02:51.210 --> 00:02:53.800\nand then use it,\nit's just inherited through there.\n\n48\n00:02:53.800 --> 00:02:59.000\nSo what do I have here,\nI have get_attack_power.\n\n49\n00:02:59.000 --> 00:03:01.500\nAnd what is get_attack_power gonna be?\n\n50\n00:03:01.500 --> 00:03:06.596\nThe same one that we had before,\nso I'm gonna return self.,\n\n51\n00:03:06.596 --> 00:03:12.785\nnope, nope, nope, nope,\nrandint(1, 100) times self.level.\n\n52\n00:03:12.785 --> 00:03:18.190\nAnd why is it nice to have\nget_attack_powerpower in the actor class?\n\n53\n00:03:18.190 --> 00:03:20.470\nWell, this is enforcing those interfaces,\n\n54\n00:03:20.470 --> 00:03:25.010\nI'm saying that everything that is gonna\nbe in my game needs this get attack power.\n\n55\n00:03:25.010 --> 00:03:29.420\nThis guarantees those are there and\nI can't change this.\n\n56\n00:03:29.420 --> 00:03:31.490\nBut at least it's always\nthere when I need it.\n\n57\n00:03:31.490 --> 00:03:34.208\nAnd I don't have to worry about\naccidentally implementing\n\n58\n00:03:34.208 --> 00:03:37.915\na character that doesn't have a\nget_attack_power and game mechanic breaks.\n\n59\n00:03:37.915 --> 00:03:39.193\nSo, that's good to know.\n\n60\n00:03:39.193 --> 00:03:43.737\nWhat about this __repr__ thing, well,\n\n61\n00:03:43.737 --> 00:03:48.878\na __repr__,\nI could make this more general and\n\n62\n00:03:48.878 --> 00:03:54.515\nmake a sacrifice here by\nsaying __repr__ and self.\n\n63\n00:03:54.515 --> 00:04:00.810\nWell, I'm going to say return actor,\nnope, not actor.\n\n64\n00:04:02.340 --> 00:04:06.492\nNo actor, I'm getting ahead\nof myself here, Vonne, and\n\n65\n00:04:06.492 --> 00:04:11.204\nthen level, and then format.\n\n66\n00:04:14.715 --> 00:04:20.329\nSelf.name, self.level, all right,\nso that's very similar.\n\n67\n00:04:20.329 --> 00:04:25.287\nNow we may have to come back and change\nthis because this is An actor right?\n\n68\n00:04:25.287 --> 00:04:27.150\nAnd it's not telling me the type.\n\n69\n00:04:28.820 --> 00:04:32.030\nBut then finally what have,\nwhat do I need to guarantee you?\n\n70\n00:04:32.030 --> 00:04:36.790\nWell, I know in the future I may want the\nenemies to be able to attack me as well.\n\n71\n00:04:36.790 --> 00:04:41.220\nSo I want attacks to always\nbe available everywhere.\n\n72\n00:04:41.220 --> 00:04:45.510\nBut that ends up being a specific\nimplementation, right.\n\n73\n00:04:45.510 --> 00:04:49.270\nA player may attack different than\nan ogre or an imp or a ghoul, or\n\n74\n00:04:49.270 --> 00:04:50.110\nwhatever it may be.\n\n75\n00:04:51.230 --> 00:04:54.280\nBut I wanna make sure that people know,\nright.\n\n76\n00:04:54.280 --> 00:04:55.880\nPeople that are using my code,\n\n77\n00:04:55.880 --> 00:04:58.580\nlooking in the code,\nthat there should be an attacks method.\n\n78\n00:05:00.410 --> 00:05:03.765\nAnd I'm gonna say, instead of enemy Other,\n\n79\n00:05:03.765 --> 00:05:07.045\nI am attacking another\nactor on the screen.\n\n80\n00:05:07.045 --> 00:05:12.128\nBut raise NotImplementedError here,\n\n81\n00:05:12.128 --> 00:05:18.540\nand there we go,\nwe have an attacks method.\n\n82\n00:05:18.540 --> 00:05:23.000\nNow we've written this actor class and\nit looks very similar, but\n\n83\n00:05:23.000 --> 00:05:24.680\nthere are a few differences here.\n\n84\n00:05:25.890 --> 00:05:28.670\n&gt;&gt; So Justin, why are we writing an error?\n\n85\n00:05:28.670 --> 00:05:29.620\nAre we forcing that?\n\n86\n00:05:29.620 --> 00:05:30.854\nWhat are we doing there?\n\n87\n00:05:30.854 --> 00:05:32.607\n&gt;&gt; So Vonne, you're absolutely correct,\n\n88\n00:05:32.607 --> 00:05:35.070\nthat's kind of weird that\nwe're raising an error there.\n\n89\n00:05:35.070 --> 00:05:36.450\nWhy would we wanna do that?\n\n90\n00:05:36.450 --> 00:05:40.350\nWell, Python doesn't have\nan actual interfaces, right?\n\n91\n00:05:40.350 --> 00:05:43.870\nI can't enforce a interface\nlike I can in other languages.\n\n92\n00:05:43.870 --> 00:05:47.920\nAnd what I mean by that is I want\nto ensure that the attacks method\n\n93\n00:05:47.920 --> 00:05:51.220\nis available to any actor on the field.\n\n94\n00:05:51.220 --> 00:05:57.200\nHowever, I want to, I know the attacks\nis going to be specific to the player,\n\n95\n00:05:57.200 --> 00:05:59.200\nright, or to either the player or\nthe enemy.\n\n96\n00:05:59.200 --> 00:06:03.610\nAnd maybe the enemy doesn't have one\nnow but it should have one later so\n\n97\n00:06:03.610 --> 00:06:06.700\nI'm trying to enforce that,\ntrying to plan ahead a little bit.\n\n98\n00:06:06.700 --> 00:06:10.620\nBut what I don't want someone\nto do is instantiate an actor.\n\n99\n00:06:10.620 --> 00:06:13.920\nOr not give an attacks method and\nthen try to use it, and\n\n100\n00:06:13.920 --> 00:06:15.630\nthen it just becomes the default.\n\n101\n00:06:15.630 --> 00:06:19.670\nSo this is a way of relaying to someone\nusing my code, hey, if you're using\n\n102\n00:06:19.670 --> 00:06:23.900\nthe attacks method and you haven't\nimplemented it in player, for instance.\n\n103\n00:06:23.900 --> 00:06:26.180\nThen it's gonna raise an error,\nand your code is gonna break,\n\n104\n00:06:26.180 --> 00:06:29.350\nthe game mechanics are gonna break down,\nso you need to plan for that.\n\n105\n00:06:29.350 --> 00:06:32.840\nAnd that's why I'm using that\nraise NotImplemented and\n\n106\n00:06:32.840 --> 00:06:35.940\nit's just trying to be transparent but\nenforce an interface.\n\n107\n00:06:37.350 --> 00:06:41.830\nSo good catch Vonne, I'm getting these\nrolls and you just gotta keep me on this,\n\n108\n00:06:41.830 --> 00:06:43.010\nthat's important.\n\n109\n00:06:43.010 --> 00:06:47.810\nSo I look at this, and this is very\nsimilar to the player, right, except for\n\n110\n00:06:47.810 --> 00:06:49.220\nattacks.\n\n111\n00:06:49.220 --> 00:06:53.810\nSo at this point what I'm gonna do\nis I'm gonna remove all of this.\n\n112\n00:06:53.810 --> 00:07:00.403\n[SOUND] I worked so hard for\nthat code and now it doesn't work,\n\n113\n00:07:00.403 --> 00:07:05.074\nbut what I can say is,\na Player is an Actor.\n\n114\n00:07:05.074 --> 00:07:09.530\nIt inherits from Actor, and\nnow get_attack_power is there.\n\n115\n00:07:09.530 --> 00:07:12.940\nThe __repr__ is there, and\nwe may change that __repr__ method, but\n\n116\n00:07:12.940 --> 00:07:14.450\nthe admit was exactly the same.\n\n117\n00:07:14.450 --> 00:07:17.920\nThere was no point in duplicating\nthat code, we're all good to go.\n\n118\n00:07:18.950 --> 00:07:22.360\nSo what I have here is this should work.\n\n119\n00:07:22.360 --> 00:07:24.000\nWe should test it out,\nand maybe it doesn't.\n\n120\n00:07:24.000 --> 00:07:26.210\nThis is important, test often.\n\n121\n00:07:26.210 --> 00:07:29.170\nSo I'm going to,\nI've got some running here.\n\n122\n00:07:29.170 --> 00:07:34.347\nLet's python3 game.py,\nI'm going to attack, attack,\n\n123\n00:07:34.347 --> 00:07:39.330\nattack, attack, attack, and\neverything still works.\n\n124\n00:07:40.940 --> 00:07:44.270\nWell, that's kinda handy\nbecause now this Player.\n\n125\n00:07:44.270 --> 00:07:48.170\nWell, it's very simple, and\nnow I can quickly make a bunch of players.\n\n126\n00:07:48.170 --> 00:07:51.710\nBut I will forewarn you, we shouldn't\ninherit, inherit, inherit, right.\n\n127\n00:07:51.710 --> 00:07:54.507\nI shouldn't have an Actor and\nthen a Player and\n\n128\n00:07:54.507 --> 00:07:58.466\nthen a Human Player and then\na Child Player that is a type of Human.\n\n129\n00:07:58.466 --> 00:07:59.453\nI shouldn't go super deep.\n\n130\n00:07:59.453 --> 00:08:01.174\nI should use this.\n\n131\n00:08:01.174 --> 00:08:04.526\nMore or less I use it after\nI've got things working and\n\n132\n00:08:04.526 --> 00:08:09.480\nI can see this patterns just to reorganize\nI don't have to reimplement these.\n\n133\n00:08:09.480 --> 00:08:14.080\nNow, as it stands, this is just\ngonna say actor and that's fine.\n\n134\n00:08:14.080 --> 00:08:16.750\nWe're gonna keep it there\nwhen I print it out.\n\n135\n00:08:16.750 --> 00:08:20.860\nCuz I'm not printing that out\na great deal but Player's fine.\n\n136\n00:08:20.860 --> 00:08:26.110\nBut if I come and look at Enemy, though,\nthis isn't quite the same, is it?\n\n137\n00:08:27.230 --> 00:08:31.940\nI need, in order to utilize the Actor\nclass, I need a name, a level.\n\n138\n00:08:33.230 --> 00:08:37.430\nBut if I look,\nmaybe I could change this to name, right?\n\n139\n00:08:37.430 --> 00:08:42.320\nMaybe it's Bob the ogre or\nAlice the imp right?\n\n140\n00:08:42.320 --> 00:08:46.120\nMaybe they have a name and\nthen finally a kind.\n\n141\n00:08:47.170 --> 00:08:52.570\nNow I will forewarn you, I would change\narguments this will break some stuff.\n\n142\n00:08:52.570 --> 00:08:54.100\nSo we're gonna have to fix this.\n\n143\n00:08:54.100 --> 00:08:58.516\nBut if I do that then I can\nsay self.name equals name but\n\n144\n00:08:58.516 --> 00:09:03.796\nif l look a self.name equals name and\nself.level equals level,\n\n145\n00:09:03.796 --> 00:09:07.162\nwell that's actually what's in Actor.\n\n146\n00:09:07.162 --> 00:09:11.260\nAnd then get attack power,\nwell get attach power's exactly the same,\n\n147\n00:09:13.760 --> 00:09:20.270\nso how can l utilize this Actor class and\nsimplify this repetitive core here?\n\n148\n00:09:20.270 --> 00:09:27.140\nWell, Enemies should inherit from Actor,\nbut I'm selecting a bunch of stuff.\n\n149\n00:09:29.820 --> 00:09:33.840\nI can remove this, but\nnow I can say hey Enemy,\n\n150\n00:09:33.840 --> 00:09:39.722\nwhen you're constructing yourself\ncall up to your parent class and\n\n151\n00:09:39.722 --> 00:09:43.348\nuse its innate method, _init, right?\n\n152\n00:09:43.348 --> 00:09:45.627\nWell I actually only said constructing and\nPython,\n\n153\n00:09:45.627 --> 00:09:48.631\ntechnically the object all ready\nexists when it runs dunderinit, so\n\n154\n00:09:48.631 --> 00:09:51.040\nit's not a true constructor\nlike in other languages.\n\n155\n00:09:52.920 --> 00:09:55.910\nCall up and run it's _init method,\nwell how do I do that?\n\n156\n00:09:55.910 --> 00:10:00.063\nI can say super to the superclass or\n\n157\n00:10:00.063 --> 00:10:06.460\nthe parent class._init and\nI'm gonna give the name and level.\n\n158\n00:10:06.460 --> 00:10:11.670\nAnd what this does is this calls up,\nand run this function.\n\n159\n00:10:11.670 --> 00:10:13.820\nAnd when it runs this function,\nthat sets the name and the level.\n\n160\n00:10:15.560 --> 00:10:20.462\nAnd then as an afterthought, I say,\nI also need a kind, right, like the ogre.\n\n161\n00:10:20.462 --> 00:10:25.740\nSo I'm using the shared portion of this,\nbut\n\n162\n00:10:25.740 --> 00:10:30.830\nthen extending it with just a little\ndusting of difference here.\n\n163\n00:10:30.830 --> 00:10:35.858\nBut what this also means is I can\njust get rid of this and there we go.\n\n164\n00:10:35.858 --> 00:10:38.080\nThat's very nice.\n\n165\n00:10:38.080 --> 00:10:40.950\nSo if l have that, okay?\n\n166\n00:10:42.500 --> 00:10:43.665\nLet's see what breaks.\n\n167\n00:10:43.665 --> 00:10:47.856\nWell, python3 game.py.\n\n168\n00:10:47.856 --> 00:10:53.360\nI'm missing a positional\nargument in line 55 of game.py.\n\n169\n00:10:53.360 --> 00:10:58.490\nSo, we need to open up game.py and\nif I scroll down here, I have an Ogre.\n\n170\n00:10:58.490 --> 00:11:01.430\nIf I go back and look,\nI have a name, a level, a kind.\n\n171\n00:11:02.670 --> 00:11:06.470\nSo this is no longer, it's kind of broke.\n\n172\n00:11:06.470 --> 00:11:07.600\nOkay?\n\n173\n00:11:07.600 --> 00:11:09.950\nWell, how can I change that?\n\n174\n00:11:09.950 --> 00:11:14.150\nWell let's say Bob, and then the name,\n\n175\n00:11:14.150 --> 00:11:18.742\nthe level, one, and it is an Ogre, and,\n\n176\n00:11:18.742 --> 00:11:25.330\nAlice level one, as an Imp.\n\n177\n00:11:26.370 --> 00:11:27.320\nThere we go, an Imp.\n\n178\n00:11:28.430 --> 00:11:32.460\nOkay?\nSo as it stands this should still run.\n\n179\n00:11:32.460 --> 00:11:34.390\nPython three, game.py.\n\n180\n00:11:34.390 --> 00:11:35.240\nIt looks good.\n\n181\n00:11:35.240 --> 00:11:37.670\nLet's attack.\n\n182\n00:11:37.670 --> 00:11:39.090\nI slay the Ogre.\n\n183\n00:11:39.090 --> 00:11:40.070\nLet's run.\n\n184\n00:11:41.190 --> 00:11:42.920\nLet's pass.\n\n185\n00:11:42.920 --> 00:11:44.350\nLet's attack.\n\n186\n00:11:44.350 --> 00:11:45.820\nAttack.\n\n187\n00:11:45.820 --> 00:11:50.340\nEverything is working as it was,\nbut notice I have an Enemy.\n\n188\n00:11:51.560 --> 00:11:56.500\nWell, it looks a lot cleaner, a lot nicer.\n\n189\n00:11:56.500 --> 00:12:01.850\nBut in this refactoring I\nnoticed that as it stands,\n\n190\n00:12:01.850 --> 00:12:07.400\nyes, an Ogre and an Imp are exactly\nthe same thing, right, they're an Enemy.\n\n191\n00:12:07.400 --> 00:12:09.400\nThey don't behave any differently.\n\n192\n00:12:09.400 --> 00:12:12.690\nWhat's the purpose if they\ndon't behave differently?\n\n193\n00:12:12.690 --> 00:12:16.020\nI know if I had an ogre with a club\nchasing after me that might be a little\n\n194\n00:12:16.020 --> 00:12:19.930\nbit different than a tiny\nimp type character.\n\n195\n00:12:19.930 --> 00:12:21.540\nSo how can I change that?\n\n196\n00:12:22.840 --> 00:12:27.490\nWell, this is a great time, this is\nprobably our final level of inheritance.\n\n197\n00:12:28.680 --> 00:12:34.250\nIf I look at an Ogre, right, and\nthen maybe it has a little extra to it,\n\n198\n00:12:34.250 --> 00:12:37.780\nmaybe it has a size\n\n199\n00:12:40.560 --> 00:12:45.260\nor maybe a club size or weight, something\nthat might change the game dynamic for\n\n200\n00:12:45.260 --> 00:12:50.440\nme and then the Imp well maybe its\ndynamic has changed a little bit.\n\n201\n00:12:50.440 --> 00:12:53.580\nSo let's take this enemy\nthat is an Actor and\n\n202\n00:12:53.580 --> 00:12:56.750\nthen extend it to more specific monsters.\n\n203\n00:12:56.750 --> 00:13:01.430\nBut because we have inherited from\nthe Actor, we get some of those things for\n\n204\n00:13:01.430 --> 00:13:04.220\nfree all ready, and we don't have\nto worry about reimplementing and\n\n205\n00:13:04.220 --> 00:13:06.390\nwe can focus on the fine details.\n\n206\n00:13:06.390 --> 00:13:10.000\nSo, if I look at a class Orge, all right,\n\n207\n00:13:11.350 --> 00:13:16.850\nI'm just gonna pass, just for a moment,\nand then the class Imp, and pass also.\n\n208\n00:13:16.850 --> 00:13:17.880\nSo let's think about the Ogre.\n\n209\n00:13:19.680 --> 00:13:24.585\nThe Ogre, well,\nit is an Enemy, like so, okay?\n\n210\n00:13:24.585 --> 00:13:31.410\nAnd particularly, what do we want?\n\n211\n00:13:31.410 --> 00:13:36.310\nWell, the Enemy has a kind, so we all\nready know what that's going to be, but\n\n212\n00:13:36.310 --> 00:13:43.030\nwe wanna use its parent's\nconstructor method to say _init.\n\n213\n00:13:43.030 --> 00:13:45.790\nAnd whoa, I was getting a little\nahead of myself, there we go.\n\n214\n00:13:47.710 --> 00:13:51.870\nAnd then here we are, I need a level or\n\n215\n00:13:51.870 --> 00:13:57.080\nname, a level and\nlet's just add a size, right?\n\n216\n00:13:57.080 --> 00:14:02.550\nSo a level could be, like I'm level one,\nbut a size could be a level\n\n217\n00:14:02.550 --> 00:14:08.630\none small Ogre, a level one giant Ogre or\na level one colossal Ogre.\n\n218\n00:14:08.630 --> 00:14:09.810\nSo they come in different sizes.\n\n219\n00:14:09.810 --> 00:14:13.430\nMaybe they're all the same level, but this\nadds a little bit different dynamic to it.\n\n220\n00:14:13.430 --> 00:14:15.066\nAnd then what do I want to do?\n\n221\n00:14:15.066 --> 00:14:22.650\nI wanna say super._init and\n\n222\n00:14:22.650 --> 00:14:27.510\nit takes a name, a level, and\nthis actually takes a kind, right?\n\n223\n00:14:27.510 --> 00:14:30.805\nSo, since I'm inheriting from Enemy,\nI'm calling this _init.\n\n224\n00:14:31.950 --> 00:14:32.980\nAnd it takes a kind.\n\n225\n00:14:32.980 --> 00:14:33.790\nWell, what is the kind?\n\n226\n00:14:35.300 --> 00:14:35.940\nIt is an Ogre.\nSo\n\n227\n00:14:35.940 --> 00:14:39.310\nI'm hard-coding that because in\nthe Ogre class, it's always an Ogre.\n\n228\n00:14:39.310 --> 00:14:46.970\nAnd then finally,\nI'm gonna say self.size equals size.\n\n229\n00:14:46.970 --> 00:14:47.520\nAll right?\n\n230\n00:14:47.520 --> 00:14:49.900\nSo my Ogre's gonna be constructed\na little differently.\n\n231\n00:14:49.900 --> 00:14:51.510\nNow why would I wanna do that?\n\n232\n00:14:51.510 --> 00:14:53.510\nWant to add a little flair here.\n\n233\n00:14:54.760 --> 00:14:59.290\nI'm going to override\nthe get_attack_power method to change\n\n234\n00:14:59.290 --> 00:15:02.030\nthe game dynamic a little bit.\n\n235\n00:15:02.030 --> 00:15:06.630\nAnd that Ogre, its attack power is now\ngonna be not only based on its level, but\n\n236\n00:15:06.630 --> 00:15:10.020\nalso its size,\nwhich may make these a little harder.\n\n237\n00:15:10.020 --> 00:15:11.770\nSo we'll have to be careful there.\n\n238\n00:15:11.770 --> 00:15:15.716\nBut let's see how this override.\n\n239\n00:15:15.716 --> 00:15:20.240\nI know get_attack_power is required for\nall Actors, so\n\n240\n00:15:20.240 --> 00:15:23.910\nI'm changing the definition,\nto change the behavior of the Ogre.\n\n241\n00:15:23.910 --> 00:15:27.100\nIt's still an Actor,\nit's still an Enemy, but\n\n242\n00:15:27.100 --> 00:15:29.000\nI'm changing its behavior a little bit.\n\n243\n00:15:29.000 --> 00:15:31.234\nSo I wanna return and randint and\n\n244\n00:15:31.234 --> 00:15:36.527\ninstead of one to a hundred cuz I know if\nI did one to one hundred and then change\n\n245\n00:15:36.527 --> 00:15:42.179\nsome other stuff I would essentially get\nan Enemy that I would never win against.\n\n246\n00:15:42.179 --> 00:15:47.364\nAnd then times self.size plus self.label,\nso\n\n247\n00:15:47.364 --> 00:15:54.860\nthe size is just gonna be kind\nof an additive incentive, right?\n\n248\n00:15:54.860 --> 00:15:59.750\nAnd when I say extra large,\nlet's say that size is three.\n\n249\n00:15:59.750 --> 00:16:05.730\nSmall is size one, which is our normal\nogre and then medium would be size two.\n\n250\n00:16:05.730 --> 00:16:10.440\nSo I\"m changing this dynamic a little\nbit and let's go see how this works.\n\n251\n00:16:12.770 --> 00:16:18.770\nSo let's change this first enemy to\nan ogre, it's still Bob the Ogre.\n\n252\n00:16:21.270 --> 00:16:24.650\nThe level is still one but\nits size, it's the normal size,\n\n253\n00:16:24.650 --> 00:16:26.796\nwe should get the same game dynamic here.\n\n254\n00:16:26.796 --> 00:16:32.360\nSo clear, python3 game.\n\n255\n00:16:32.360 --> 00:16:34.560\nOgre is not defined,\nwhy is ogre not defined?\n\n256\n00:16:38.760 --> 00:16:41.190\nName error, name ogre.\n\n257\n00:16:41.190 --> 00:16:45.090\nName errors are typically when\nI don't have a variable name.\n\n258\n00:16:45.090 --> 00:16:48.320\nIf I scroll to the top,\nI have imported player and enemy.\n\n259\n00:16:48.320 --> 00:16:50.600\nI have not imported ogre.\n\n260\n00:16:50.600 --> 00:16:55.280\nSo instead of just those,\nI need to import ogre.\n\n261\n00:16:55.280 --> 00:16:56.670\nIt's a common mistake.\n\n262\n00:16:56.670 --> 00:16:58.700\nI do it, I still do it a bunch.\n\n263\n00:16:58.700 --> 00:17:01.790\nDon't worry, just know what those\nerrors mean, that way you don't\n\n264\n00:17:01.790 --> 00:17:05.770\nspend the next three hours going,\nI'm pretty sure there's an overlay there.\n\n265\n00:17:05.770 --> 00:17:06.960\nSo be careful there.\n\n266\n00:17:07.970 --> 00:17:13.102\nSo let's try it again,\nbe careful also that we are,\n\n267\n00:17:13.102 --> 00:17:17.650\nin python3 because you\nmight get different pieces.\n\n268\n00:17:17.650 --> 00:17:22.470\nSo, descriptor under init requires\na super object but received a string.\n\n269\n00:17:24.370 --> 00:17:25.200\nWhat?\n\n270\n00:17:25.200 --> 00:17:26.790\nLet's go look at our actors.\n\n271\n00:17:27.910 --> 00:17:33.134\nVonne, can you tell me what\nthe difference between line 35 and\n\n272\n00:17:33.134 --> 00:17:38.180\nline 40 of the first few,\ndo you see that difference there?\n\n273\n00:17:39.370 --> 00:17:40.510\nIf you don't, that's fine.\n\n274\n00:17:41.800 --> 00:17:42.470\n&gt;&gt; These.\n\n275\n00:17:42.470 --> 00:17:43.630\n&gt;&gt; Yeah, parentheses.\n\n276\n00:17:43.630 --> 00:17:46.670\n&gt;&gt; Yes.\n&gt;&gt; Parentheses are important,\n\n277\n00:17:46.670 --> 00:17:48.220\nthey'll get you every time.\n\n278\n00:17:48.220 --> 00:17:49.260\nLet's try it one more time.\n\n279\n00:17:49.260 --> 00:17:52.856\nCross your fingers Vonne.\n\n280\n00:17:52.856 --> 00:17:54.084\n&gt;&gt; Crossing.\n\n281\n00:17:55.170 --> 00:17:56.960\n&gt;&gt; All right, so here we go.\n\n282\n00:17:56.960 --> 00:18:01.180\nI'm going to attack the Imp, I was\ndefeated, I'm going to attack the ogre.\n\n283\n00:18:02.210 --> 00:18:07.477\nEverything still plays the same,\nbut what if we now make Bob,\n\n284\n00:18:07.477 --> 00:18:14.480\nwell, instead of Bob being a small ogre,\nlet's say he's a big ogre, all right.\n\n285\n00:18:14.480 --> 00:18:18.883\nSo if we look at Bob,\nthe Ogre summons 30 power units.\n\n286\n00:18:18.883 --> 00:18:22.540\nAnd that's random between 1 and 100.\n\n287\n00:18:22.540 --> 00:18:26.040\nSo, if we go back and we play again,\n\n288\n00:18:26.040 --> 00:18:31.770\nI hit, and I'm gonna attack,\nattack, attack.\n\n289\n00:18:31.770 --> 00:18:32.320\nHere's the Ogre.\n\n290\n00:18:32.320 --> 00:18:35.380\nI'm going to attack and four power units.\n\n291\n00:18:35.380 --> 00:18:36.499\nWell, that's a little different.\n\n292\n00:18:37.880 --> 00:18:39.780\nI think I made him too easy.\n\n293\n00:18:40.780 --> 00:18:45.408\nSo now that we have this particular\nogre class that has a good attack power,\n\n294\n00:18:45.408 --> 00:18:47.105\nlet's crank it up a level.\n\n295\n00:18:47.105 --> 00:18:51.313\nLet's instead of adding the level and the\nsize together, we multiply them together.\n\n296\n00:18:51.313 --> 00:18:56.817\nSo this will actually be up to 150\nbecause if I have a level of one,and\n\n297\n00:18:56.817 --> 00:19:02.640\na size of three, that would be one\ntimes three times somewhere one to 50.\n\n298\n00:19:02.640 --> 00:19:06.024\nThis is going to make Bob\nharder to play against.\n\n299\n00:19:06.024 --> 00:19:10.802\nSo let's say python3 game.\n\n300\n00:19:10.802 --> 00:19:14.100\nI hit enter, I attack the Imp,\nI see an ogre.\n\n301\n00:19:16.090 --> 00:19:18.110\nHe won or I won very quickly.\n\n302\n00:19:18.110 --> 00:19:21.120\nLet's see if we can get I was defeated.\n\n303\n00:19:21.120 --> 00:19:23.413\nSo there's 87,\nthat's pretty high on the range.\n\n304\n00:19:26.331 --> 00:19:29.965\nThe Ogre summoned 144 power units.\n\n305\n00:19:29.965 --> 00:19:33.590\nThis is gonna make the game\na little more difficult.\n\n306\n00:19:33.590 --> 00:19:37.070\nAnd well, we've had these levels,\nit would be nice if we level but\n\n307\n00:19:37.070 --> 00:19:38.390\nwe're not quite there yet.\n\n308\n00:19:38.390 --> 00:19:42.160\nWe're worried about this refactoring so\nwe can make this nice and pretty.\n\n309\n00:19:42.160 --> 00:19:45.200\nAnd adding those features\nlater is going to be easier.\n\n310\n00:19:46.760 --> 00:19:52.248\nSo, if I hop out of here and\nI look at the Imp.\n\n311\n00:19:52.248 --> 00:19:56.297\nWell, the Imp should be really easy,\nright.\n\n312\n00:19:56.297 --> 00:20:01.330\nSo all I'm going to do,\nthe Imp is still an enemy.\n\n313\n00:20:01.330 --> 00:20:04.630\nIt doesn't require an extra, extra thing.\n\n314\n00:20:04.630 --> 00:20:10.825\nI'm just gonna say get_attack_power,\nit's gonna get overwritten.\n\n315\n00:20:10.825 --> 00:20:15.894\nAnd I'm gonna return randint(1,\n\n316\n00:20:15.894 --> 00:20:23.097\n100) * self.level and\nthen divide that by 4.\n\n317\n00:20:23.097 --> 00:20:31.250\nSo it's gonna be like a fourth\nas mean as it normally was.\n\n318\n00:20:31.250 --> 00:20:34.050\nAnd essentially what this, this is your\nlow level enemies you encounter at\n\n319\n00:20:34.050 --> 00:20:37.500\nthe beginning of games to help\nyou like level grind, right.\n\n320\n00:20:37.500 --> 00:20:42.160\nSo the imp should be very,\nvery easy to fight against.\n\n321\n00:20:42.160 --> 00:20:43.420\nSo let's see if that works.\n\n322\n00:20:45.380 --> 00:20:46.660\nIn order to do that though,\n\n323\n00:20:46.660 --> 00:20:50.440\nwe have to change this from\nan enemy to an Imp, right?\n\n324\n00:20:51.830 --> 00:20:58.630\nSo if I change this to Imp, well this\nis kind of repetitive again, isn't it?\n\n325\n00:20:58.630 --> 00:21:04.850\nIt's in the Imp class and I have to give\nit a kind, so maybe I should add dunder\n\n326\n00:21:04.850 --> 00:21:09.590\ninit here and say name, level and\n\n327\n00:21:09.590 --> 00:21:15.846\nthen this is super().__init__(name,\n\n328\n00:21:15.846 --> 00:21:18.880\nlevel, 'Imp\"), right?\n\n329\n00:21:18.880 --> 00:21:24.040\nIt's very simple, maybe it's not the best,\nbut this does allow us to\n\n330\n00:21:24.040 --> 00:21:28.820\ncontinue to extend the Imp's behavior if\nwe so decide to add something like size.\n\n331\n00:21:28.820 --> 00:21:32.270\nMaybe the Imp is really fast,\nand it's hard to hit.\n\n332\n00:21:32.270 --> 00:21:34.540\nSo that would be a nice game dynamic.\n\n333\n00:21:36.010 --> 00:21:42.160\nBut as it stands, we're just fighting,\nwell, let's go back and change this here.\n\n334\n00:21:43.660 --> 00:21:49.330\nGot to remember, got to bring in the Imp,\nbecause I will get a name error here.\n\n335\n00:21:49.330 --> 00:21:50.740\nAnd I think I have everything figured out.\n\n336\n00:21:50.740 --> 00:21:56.313\nIt's all good to go, so\nlet's see here, python3 game.py,\n\n337\n00:21:56.313 --> 00:22:00.007\nobject.__init takes no parameters.\n\n338\n00:22:03.827 --> 00:22:05.719\nSo let's go back and look here.\n\n339\n00:22:10.244 --> 00:22:15.258\nWell as it stands, an Imp is not\nan enemy and has not inherited,\n\n340\n00:22:15.258 --> 00:22:19.712\nso it's like I have no idea\nwhat you're talking about.\n\n341\n00:22:19.712 --> 00:22:22.780\nThe super class is the one it always is.\n\n342\n00:22:22.780 --> 00:22:23.560\nBehind the scenes,\n\n343\n00:22:23.560 --> 00:22:28.290\nPython kind of inherits from this\nabstract base class that everything has.\n\n344\n00:22:28.290 --> 00:22:30.830\nBut we want it to be an enemy, and\n\n345\n00:22:30.830 --> 00:22:35.650\nwe're using the enemy constructor,\nas such, and there we go.\n\n346\n00:22:35.650 --> 00:22:41.120\nNow notice, I've kind of chained these\ntogether, and is this the cleanest?\n\n347\n00:22:41.120 --> 00:22:43.800\nNo, but it's about the thought process.\n\n348\n00:22:43.800 --> 00:22:45.038\nAre there better ways or\ndifferent ways to do this?\n\n349\n00:22:45.038 --> 00:22:49.272\nSure, but again it's about the thought\nprocess, about the design,\n\n350\n00:22:49.272 --> 00:22:53.863\nabout how can I extend this, make this\na little easier to mess around with and\n\n351\n00:22:53.863 --> 00:22:56.323\nless about, I'm making this perfect.\n\n352\n00:22:56.323 --> 00:22:59.480\nAll right, so this should work.\n\n353\n00:23:00.620 --> 00:23:04.080\nThe famous last words of a programmer,\nthis should work.\n\n354\n00:23:05.180 --> 00:23:07.040\nAnd here's monster slash, I see an ogre,\n\n355\n00:23:07.040 --> 00:23:12.290\nI attack, the ogre is mean,\nI got defeated, I attack.\n\n356\n00:23:12.290 --> 00:23:14.410\nI see an Imp though, I attack and\n\n357\n00:23:14.410 --> 00:23:19.319\nnotice the Imp has 11.25 power units and\nthat's because I divided by 4.\n\n358\n00:23:20.540 --> 00:23:24.430\nI'm probably always gonna beat the Imp\nnow, any time there's an Imp there.\n\n359\n00:23:24.430 --> 00:23:31.860\nBut, in contrast, the ogre is mean,\nsuper mean, especially large ogres.\n\n360\n00:23:31.860 --> 00:23:36.820\nAnd eventually, I got lucky, just kind of\nluck of the draw, and I beat the ogre.\n\n361\n00:23:38.390 --> 00:23:43.240\nSo, as it stands, right,\nI have, yeah have I,\n\n362\n00:23:43.240 --> 00:23:48.370\ndo I have a dunder init and\nsome other things that are repetitive but\n\n363\n00:23:48.370 --> 00:23:51.920\nthese are special implementations,\nthey're not copy and paste.\n\n364\n00:23:51.920 --> 00:23:56.120\nThere is one thing left\nthat I notice though.\n\n365\n00:23:56.120 --> 00:24:01.666\nSo if I look back up here this randint (1,\n100) x self.level.\n\n366\n00:24:03.335 --> 00:24:07.780\nThat's exactly the same as this line,\nright.\n\n367\n00:24:07.780 --> 00:24:13.300\nSo if I ever wanna change\nhow the get_attack_power\n\n368\n00:24:13.300 --> 00:24:18.860\nis being made, for the Imp,\nit comes from the Actor.\n\n369\n00:24:18.860 --> 00:24:21.450\nWell, I would like to just be able\nto change the base class Actor and\n\n370\n00:24:21.450 --> 00:24:25.800\nthat kind of propagate through everything\nelse that uses something similar.\n\n371\n00:24:25.800 --> 00:24:29.050\nCould I come back and change this\nto be like the ogre, 1 to a 50?\n\n372\n00:24:29.050 --> 00:24:34.218\nSure, but if I say,\nsuper().get_attack_power(), I'm calling\n\n373\n00:24:34.218 --> 00:24:40.130\nto the super class, forget attack power,\nwhat is it's super class or it's parent?\n\n374\n00:24:40.130 --> 00:24:42.575\nIt's the enemy, it does not have one.\n\n375\n00:24:42.575 --> 00:24:47.847\nSo, then it looks to it's parent actor,\nwhich does have one and\n\n376\n00:24:47.847 --> 00:24:51.380\nthen this is what's called and returned.\n\n377\n00:24:51.380 --> 00:24:56.341\nAnd because of that, if l ever wanna\nchange the Imp, all right, other\n\n378\n00:24:56.341 --> 00:25:00.900\nthan the divide by four, if I wanna change\nthe implementation to get attack power,\n\n379\n00:25:02.240 --> 00:25:05.270\nI just change it in the actor class and\neverywhere they choose, they propagate.\n\n380\n00:25:05.270 --> 00:25:07.730\nSo don't have to get find\nevery instance of it.\n\n381\n00:25:07.730 --> 00:25:08.790\nNow, that's a design choice.\n\n382\n00:25:09.830 --> 00:25:13.720\nI'm saying that the Imp will always be\na modification of the original method.\n\n383\n00:25:14.730 --> 00:25:18.980\nI'm saying that the ogre will not be,\nI could change this\n\n384\n00:25:18.980 --> 00:25:22.610\nto super().get_attack_power, but\nthat would, at current time,\n\n385\n00:25:22.610 --> 00:25:27.449\nthat would make them so ridiculously\ndifficult to defeat that it would,\n\n386\n00:25:27.449 --> 00:25:30.850\nyou would kind of just be\nhitting attack a bunch.\n\n387\n00:25:30.850 --> 00:25:32.156\nBut on the flip side,\n\n388\n00:25:32.156 --> 00:25:35.920\nwe are more less invincible in this\ngame and we can play until we win.\n\n389\n00:25:37.040 --> 00:25:40.360\nHowever Vonne,\nthat is some nice rearranging there.\n\n390\n00:25:40.360 --> 00:25:42.200\nIt looks like,\nour refactor's actually complete.\n\n391\n00:25:42.200 --> 00:25:44.587\nI don't know if we're done yet, but\n\n392\n00:25:44.587 --> 00:25:48.058\nwe are definitely finished\nwith our actor refactor.\n\n393\n00:25:48.058 --> 00:25:51.190\n&gt;&gt; Yeah, well we've got some good\ncharacter development going right now.\n\n394\n00:25:51.190 --> 00:25:56.925\nWe've got a strong ogre and we probably\nwant to encounter the imps so I can win.\n\n395\n00:25:56.925 --> 00:25:59.080\n&gt;&gt; [LAUGH]\n&gt;&gt; I would like that,\n\n396\n00:25:59.080 --> 00:26:01.100\nso [LAUGH] saving those ogres.\n\n397\n00:26:01.100 --> 00:26:04.050\nSo we'll keep going and\nwe'll do another part here?\n\n398\n00:26:04.050 --> 00:26:04.760\n&gt;&gt; Yeah, yeah.\n\n399\n00:26:04.760 --> 00:26:05.670\n&gt;&gt; Okay, well great.\n\n400\n00:26:05.670 --> 00:26:07.137\nI look forward to that.\nI learned a lot already and\n\n401\n00:26:07.137 --> 00:26:09.717\nI'm excited to learn some more,\nI hope you all are too,.\n\n402\n00:26:09.717 --> 00:26:13.290\nBut for now we're signing off for\nITProTV, I'm Vonne Smith.\n\n403\n00:26:13.290 --> 00:26:14.670\n&gt;&gt; And I'm Justin Dennison.\n\n404\n00:26:14.670 --> 00:26:22.704\n&gt;&gt; See you next time.\n[MUSIC]\n\n405\n00:26:22.704 --> 00:26:25.670\nThank you for watching ITProTV.\n\n",
          "vimeoId": "208842202"
        },
        {
          "description": "In this episode, Vonne and Justin are back with version 2 of the MonsterSlash game using Object-Oriented Python by expanding the characteristics of the actors and the game.",
          "length": "1497",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-8-1-1-monsterslaash_v.2_enemies_attack-031517-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-8-1-1-monsterslaash_v.2_enemies_attack-031517-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-8-1-1-monsterslaash_v.2_enemies_attack-031517-1-sm.jpg",
          "title": "MonsterSlash v.2 Enemies Attack",
          "transcript": "WEBVTT\n\n1\n00:00:00.590 --> 00:00:04.060\nWelcome of ITProTV.\n\n2\n00:00:04.060 --> 00:00:05.555\nI'm Don Pezet.\n\n3\n00:00:05.555 --> 00:00:09.970\n[CROSSTALK]\n&gt;&gt; You're watching ITProTV.\n\n4\n00:00:09.970 --> 00:00:15.370\n&gt;&gt; Hello, and\nwelcome to another episode of ITProTV.\n\n5\n00:00:15.370 --> 00:00:20.540\nI'm your host Vonne Smith and today we're\nback with our MonsterSlash game and\n\n6\n00:00:20.540 --> 00:00:23.110\nwe're going to be creating\na Second version and\n\n7\n00:00:23.110 --> 00:00:25.140\nhere to help us with that is Mr.\nJustin Dennison.\n\n8\n00:00:25.140 --> 00:00:25.940\nHello, Justin.\n\n9\n00:00:25.940 --> 00:00:27.280\n&gt;&gt; Hello, Vonne.\nHow are you today?\n\n10\n00:00:27.280 --> 00:00:28.010\n&gt;&gt; I'm good.\n\n11\n00:00:28.010 --> 00:00:31.190\nI'm ready to see what we're\ngoing to go with this Version 2.\n\n12\n00:00:31.190 --> 00:00:33.670\nI know in our first version,\n\n13\n00:00:33.670 --> 00:00:38.370\nwe created a really simple game but\nwe had some well organized code.\n\n14\n00:00:38.370 --> 00:00:39.900\nSo where we're going next?\n\n15\n00:00:39.900 --> 00:00:41.430\n&gt;&gt; Well, that's a great question, Vonne.\n\n16\n00:00:42.460 --> 00:00:44.500\nFirst off, I wanna talk about versioning.\n\n17\n00:00:44.500 --> 00:00:47.100\nI'm calling it a version two\nbecause I'm adding new features.\n\n18\n00:00:47.100 --> 00:00:50.470\nAm I following an appropriate\nversioning convention?\n\n19\n00:00:50.470 --> 00:00:51.470\nMaybe not.\n\n20\n00:00:51.470 --> 00:00:54.110\nBut this is a nice little\npersonal project for me.\n\n21\n00:00:54.110 --> 00:00:58.710\nAnd it helps me keep things separate\nin my mind kind of what am I employing.\n\n22\n00:00:58.710 --> 00:01:00.240\nSo where we're gonna go?\n\n23\n00:01:00.240 --> 00:01:04.030\nWell In version one when\nwe kinda finish that up,\n\n24\n00:01:05.330 --> 00:01:10.120\nour attack system was we get, essentially\na random number based on level.\n\n25\n00:01:10.120 --> 00:01:13.940\nWe compare those and then we either win or\nwe go to the next term, right?\n\n26\n00:01:13.940 --> 00:01:15.520\nThe enemy could never kill us,\nwe couldn't lose.\n\n27\n00:01:15.520 --> 00:01:20.940\nWell, that's kind of a weird dynamic,\nactually It's kind of a bad game to play.\n\n28\n00:01:20.940 --> 00:01:23.580\nThere are some games that do\nthat successfully but for\n\n29\n00:01:23.580 --> 00:01:28.200\nthe most part you have a chance of losing\nand that's what makes it interesting.\n\n30\n00:01:28.200 --> 00:01:33.490\nSo let's think about this, we want\nthe enemy to be able to attack us right.\n\n31\n00:01:33.490 --> 00:01:35.350\nAnd we're gonna keep that very simple.\n\n32\n00:01:35.350 --> 00:01:38.520\nWe're gonna keep that as\nwe're gonna attack the enemy.\n\n33\n00:01:38.520 --> 00:01:41.410\nIf the enemy's still alive\nThey're going to attack us and\n\n34\n00:01:41.410 --> 00:01:43.630\nif we're still alive then\nwe're going to continue on.\n\n35\n00:01:43.630 --> 00:01:47.950\nWe're still going to stay with\nrandomly attacking enemies.\n\n36\n00:01:47.950 --> 00:01:49.450\nThat's not going to change but\n\n37\n00:01:49.450 --> 00:01:54.220\nin those other two options that we didn't\nall we did was pron out you ran away or\n\n38\n00:01:54.220 --> 00:01:58.240\nyou pass your turn we're going to add\na little bit different dynamic there\n\n39\n00:01:58.240 --> 00:02:01.780\nbecause right it's essentially the same\nthing there's nothing different.\n\n40\n00:02:01.780 --> 00:02:03.680\nWhy would I ever choose run.\n\n41\n00:02:03.680 --> 00:02:09.920\nOr pass, right, so keep that in mind and\nwe'll see how that goes.\n\n42\n00:02:09.920 --> 00:02:12.750\nNow, the very first\nthing we're gonna do is\n\n43\n00:02:12.750 --> 00:02:16.890\nstart modifying our actors because\nuntil we've added some methods and\n\n44\n00:02:16.890 --> 00:02:21.200\nsome new attributes we don't have\nthe ability to have enemies attack us,\n\n45\n00:02:21.200 --> 00:02:25.590\nwe don't have any way to keep\ntrack of when we win or not.\n\n46\n00:02:25.590 --> 00:02:27.370\nAnd how are we gonna do that?\n\n47\n00:02:27.370 --> 00:02:32.600\nWell, all the actors on the stage in our\ngame, so to speak, if they had hit points\n\n48\n00:02:32.600 --> 00:02:38.220\nor some kind of HP, or health, then we\ncould keep track and we can modify that.\n\n49\n00:02:38.220 --> 00:02:44.540\nAnd once we get to zero or some predefined\nset, right, Then the game would end,\n\n50\n00:02:44.540 --> 00:02:48.400\neither for us or the enemy would\nbe removed from the playing field.\n\n51\n00:02:48.400 --> 00:02:51.400\nSo as it stands we don't\nhave that ability, so\n\n52\n00:02:51.400 --> 00:02:54.990\nwe need to modify our actors and\nour derive classes.\n\n53\n00:02:54.990 --> 00:02:59.440\nAnd by derive classes I mean anything that\ninherits from actor either directly Or\n\n54\n00:02:59.440 --> 00:03:01.400\nindirectly through some other class.\n\n55\n00:03:01.400 --> 00:03:06.350\nSo let's go ahead and get started and see\nwhere we were when we last left of here.\n\n56\n00:03:06.350 --> 00:03:09.690\nSo I'm in monster_slash,\nI'm just in my command line.\n\n57\n00:03:09.690 --> 00:03:11.090\nAnd I'm going to play the game.\n\n58\n00:03:12.470 --> 00:03:16.740\nAnd I'm read, and I'm gonna attack,\nand I'm gonna attack, and I've won.\n\n59\n00:03:16.740 --> 00:03:18.440\nThat's kind of where we are.\n\n60\n00:03:18.440 --> 00:03:24.510\nLet's play the game one more time, just to\nremind ourselves If l run, you run a way.\n\n61\n00:03:24.510 --> 00:03:26.560\nI run, l can run forever.\n\n62\n00:03:26.560 --> 00:03:31.510\nLet's really extinguish it will be nice\nof that played a better dynamic role\n\n63\n00:03:31.510 --> 00:03:35.790\nright if running a way provided\nus with kind of incentive or\n\n64\n00:03:37.550 --> 00:03:40.520\ndecentive is does not even\nknow that a more advance.\n\n65\n00:03:40.520 --> 00:03:42.040\nI made it up we gonna go with it.\n\n66\n00:03:42.040 --> 00:03:42.620\n&gt;&gt; That's right.\n\n67\n00:03:42.620 --> 00:03:44.090\n&gt;&gt; It sounds right.\n\n68\n00:03:44.090 --> 00:03:49.240\nOr I could pass and well there's currently\nno difference between these two.\n\n69\n00:03:49.240 --> 00:03:53.110\nAnd, as it stands, the monster is\njust waiting for us to attack, right?\n\n70\n00:03:53.110 --> 00:03:54.430\nOur enemies are just waiting for\n\n71\n00:03:54.430 --> 00:03:59.030\nus to attack and\nwell I think we can make this better.\n\n72\n00:03:59.030 --> 00:04:01.940\nBut here's what I really\nwant to emphasize.\n\n73\n00:04:01.940 --> 00:04:03.550\nWe started with something basic.\n\n74\n00:04:03.550 --> 00:04:06.630\nAnd once we got that working,\nnow we can add features.\n\n75\n00:04:06.630 --> 00:04:11.430\nAnd since we've spent some time to\nreorganize and refactor earlier versions\n\n76\n00:04:11.430 --> 00:04:14.920\nthese feature additions are going\nto be easier to implement.\n\n77\n00:04:14.920 --> 00:04:17.550\nSo, let’s go ahead and hop in,\nI'm going to kill the game here.\n\n78\n00:04:17.550 --> 00:04:21.770\nI'm going to hop in to my actors and\nlet’s think about this.\n\n79\n00:04:21.770 --> 00:04:26.730\nWell the actor, every actor on the field\nanything that I want all enemies,\n\n80\n00:04:26.730 --> 00:04:32.260\nall players everything to have they should\ngo on actor class because player and\n\n81\n00:04:32.260 --> 00:04:34.580\nenemy both inherit directly from actors.\n\n82\n00:04:34.580 --> 00:04:37.890\nSo, if I want that to sponsor out\n\n83\n00:04:37.890 --> 00:04:41.420\nI can then just modify the actor\nclass Well that's handy.\n\n84\n00:04:41.420 --> 00:04:45.620\nBecause of my organization,\nI just have to worry about one place.\n\n85\n00:04:45.620 --> 00:04:49.250\nIf I left it how it was originally\nwhen we first started making this,\n\n86\n00:04:49.250 --> 00:04:52.130\nI would have to go find\nget_attack_power if I changed that.\n\n87\n00:04:52.130 --> 00:04:56.060\nAnd also all the other constructors and\nget those there.\n\n88\n00:04:56.060 --> 00:05:00.860\nSo okay, now I start to see\nthe power of this object\n\n89\n00:05:00.860 --> 00:05:05.550\noriented paradigm and well,\nLet's see it actually, in action.\n\n90\n00:05:06.770 --> 00:05:10.540\nActually, in action, that was from\nthe Department of Redundancy Department.\n\n91\n00:05:10.540 --> 00:05:13.530\nA little bit, but not quite, a little bit.\n\n92\n00:05:13.530 --> 00:05:15.840\nSo what I'm going to do is\nevery actor is going to have,\n\n93\n00:05:15.840 --> 00:05:17.380\nI'm just going to call it hp.\n\n94\n00:05:17.380 --> 00:05:24.240\nAnd it's going to be,\nlet's just say, 100 times the level.\n\n95\n00:05:24.240 --> 00:05:28.090\nSo if you construct an actor of level two,\nyou'll have 200 head points.\n\n96\n00:05:28.090 --> 00:05:29.490\nLevel 3, 300 and so one.\n\n97\n00:05:29.490 --> 00:05:34.900\nCould I create a more dynamic\nscheme of generating these?\n\n98\n00:05:34.900 --> 00:05:37.030\nSure, I could even write a function or\n\n99\n00:05:37.030 --> 00:05:40.120\na method inside of Actor that\nis pseudo private, right.\n\n100\n00:05:40.120 --> 00:05:43.090\nSomeone shouldn't be using it or\nyou wouldn't use it at other places.\n\n101\n00:05:43.090 --> 00:05:48.120\nAnd it would create Well, a hit point\nbased on some formula that you predefine.\n\n102\n00:05:48.120 --> 00:05:50.230\nThis is completely up to you.\n\n103\n00:05:50.230 --> 00:05:53.890\nThis is part of the game decision,\nor the game dynamic decision, or\n\n104\n00:05:53.890 --> 00:05:56.920\nthe game mechanics,\nthat you want to employ.\n\n105\n00:05:56.920 --> 00:06:00.260\n&gt;&gt; And Justin,\nI see that you're using just level.\n\n106\n00:06:00.260 --> 00:06:01.910\nCould we use self.level?\n\n107\n00:06:01.910 --> 00:06:03.780\nWhy did you choose one over the other?\n\n108\n00:06:03.780 --> 00:06:07.450\n&gt;&gt; So, that's a great question, Yvonne\n&gt;&gt; And I've seen this a couple of ways.\n\n109\n00:06:07.450 --> 00:06:10.180\nSo I have self.level = level here.\n\n110\n00:06:10.180 --> 00:06:13.410\nI could have easily put self.level as\n\n111\n00:06:13.410 --> 00:06:17.560\nlong as this line comes after self.level,\nright.\n\n112\n00:06:17.560 --> 00:06:19.820\nSo there is some order matters there.\n\n113\n00:06:19.820 --> 00:06:22.210\nSo this is gonna run\nwhen this done init runs\n\n114\n00:06:22.210 --> 00:06:23.610\n&gt;&gt; It's going to set the name,\n\n115\n00:06:23.610 --> 00:06:25.900\nthen the level, then the hp.\n\n116\n00:06:25.900 --> 00:06:30.020\nAs long as I set the level before the hp,\nI could say set.level.\n\n117\n00:06:30.020 --> 00:06:33.490\nHowever, even though I've seen\nthis as a personal preference and\n\n118\n00:06:33.490 --> 00:06:37.310\nsomething that makes sense to me,\nI have level here.\n\n119\n00:06:37.310 --> 00:06:39.800\nLevel in this case is\ngoing to be some number.\n\n120\n00:06:39.800 --> 00:06:41.830\nIt's available everywhere\nin this function and\n\n121\n00:06:41.830 --> 00:06:44.100\nI don't have to worry about order as much.\n\n122\n00:06:44.100 --> 00:06:48.850\nSo I tend to just grab the value from the\npast end parameters, but that is a great\n\n123\n00:06:48.850 --> 00:06:52.840\nquestion, because I've seen it both ways\nand that may be confusing for some people.\n\n124\n00:06:52.840 --> 00:06:55.510\nI know it was,\nwhy would you use self here?\n\n125\n00:06:55.510 --> 00:06:58.200\nNow in this case, I don't have to.\n\n126\n00:06:58.200 --> 00:07:03.600\nThere are times where maybe self is more\nimportant where I have to self reference\n\n127\n00:07:03.600 --> 00:07:05.690\nSome computed value, right.\n\n128\n00:07:05.690 --> 00:07:12.010\nIf this was a function of\nget level that was part of\n\n129\n00:07:12.010 --> 00:07:17.100\nactor and this function ran to compute\nthe level that you're starting at,\n\n130\n00:07:17.100 --> 00:07:22.130\nit's some randomized thing, then I\nwould need to use self dot level here.\n\n131\n00:07:22.130 --> 00:07:26.330\nAnd that's only because, well if I call\nGit level again, maybe it's different.\n\n132\n00:07:26.330 --> 00:07:28.880\nOr maybe it's not, so\nyou have to keep those in mind.\n\n133\n00:07:28.880 --> 00:07:29.880\nYou have to make decisions.\n\n134\n00:07:29.880 --> 00:07:33.560\nAnd the best way I find to figure\nthat out is to just play with it.\n\n135\n00:07:33.560 --> 00:07:34.860\nSee what breaks.\n\n136\n00:07:34.860 --> 00:07:36.350\nSee if you can fix it.\n\n137\n00:07:36.350 --> 00:07:41.000\nBut I'm gonna use just\nthe plain old Just level here.\n\n138\n00:07:41.000 --> 00:07:43.930\nSo self.level = level,\nself.hp = 100 times the level.\n\n139\n00:07:43.930 --> 00:07:48.480\nSo that's going to give me\nthe ability to keep track of health.\n\n140\n00:07:49.790 --> 00:07:51.383\nNow what else do I need?\n\n141\n00:07:51.383 --> 00:07:56.317\nWell, you know during our discussion\nearlier on about game mechanics\n\n142\n00:07:56.317 --> 00:08:01.540\nI need some way to determine whether\nthe character is alive, right?\n\n143\n00:08:01.540 --> 00:08:05.300\nAnd what I mean by alive is should they be\nremoved from the board if they're an enemy\n\n144\n00:08:05.300 --> 00:08:07.820\nor did you lose if you're the player.\n\n145\n00:08:07.820 --> 00:08:09.810\nWell, I know that both\nof those need that so\n\n146\n00:08:09.810 --> 00:08:13.390\nI'm going to put that in actor because\nit should be available everywhere.\n\n147\n00:08:14.460 --> 00:08:17.939\nSo I'm gonna jump right here and\nsay is alive.\n\n148\n00:08:20.130 --> 00:08:23.010\nAnd that is a method on the actual object.\n\n149\n00:08:24.570 --> 00:08:27.144\nAnd I wanna return self.hp\nis greater than zero.\n\n150\n00:08:27.144 --> 00:08:32.060\nAnd I think that should give us an is\n\n151\n00:08:32.060 --> 00:08:37.620\nalive function that we can call it\na test of whether we're alive or not.\n\n152\n00:08:37.620 --> 00:08:41.410\nSo I have this, right and I have my hp.\n\n153\n00:08:41.410 --> 00:08:43.370\nI have the ability to test if I'm alive.\n\n154\n00:08:44.520 --> 00:08:45.830\n&gt;&gt; Justin, can I jump in really quick?\n\n155\n00:08:45.830 --> 00:08:51.500\nYou have that last line of the self\nthat the hp of greater than zero.\n\n156\n00:08:51.500 --> 00:08:53.290\nBecause we want it to be greater than.\n\n157\n00:08:53.290 --> 00:08:57.130\nWe don't want it to be greater or\nequal than because if we're zero,\n\n158\n00:08:57.130 --> 00:09:00.720\nwe have to be alive, and\nif we're zero, we're not alive.\n\n159\n00:09:00.720 --> 00:09:04.200\n&gt;&gt; Right and\nthat's a common whoopsy-daisy,\n\n160\n00:09:04.200 --> 00:09:08.170\nbecause if I write that,\nthis code will still run.\n\n161\n00:09:08.170 --> 00:09:10.000\nThis is a valid expression.\n\n162\n00:09:10.000 --> 00:09:11.840\nI'm completely okay with this.\n\n163\n00:09:11.840 --> 00:09:17.480\nHowever, you have to think in the\nmechanics of the game, once I get to zero,\n\n164\n00:09:17.480 --> 00:09:23.470\nas my HP,\nwell do I wanna still be considered alive?\n\n165\n00:09:23.470 --> 00:09:27.630\nI know in the games that I've played,\nonce I hit zero, it's game over.\n\n166\n00:09:27.630 --> 00:09:29.620\nIt's no, we get one last chance.\n\n167\n00:09:29.620 --> 00:09:31.970\nIf it's one, you're fine.\n\n168\n00:09:31.970 --> 00:09:34.650\nIf it's zero, no go.\n\n169\n00:09:34.650 --> 00:09:36.740\nSo that's a key point to make, Von.\n\n170\n00:09:36.740 --> 00:09:38.070\nNow that's completely up to you.\n\n171\n00:09:38.070 --> 00:09:41.140\nMaybe you want that\nlittle added difference.\n\n172\n00:09:41.140 --> 00:09:44.390\nYou can do that but for\nme I think it makes most sense if\n\n173\n00:09:44.390 --> 00:09:47.970\nas long as my HP is positive and\nthat's what this expression means,\n\n174\n00:09:50.280 --> 00:09:54.170\nI should be able continue playing or\nthe enemy should stay on the field.\n\n175\n00:09:54.170 --> 00:09:55.290\n&gt;&gt; So you're not actually writing.\n\n176\n00:09:55.290 --> 00:09:57.120\nYou're not gonna have anything\nthat's gonna break your code.\n\n177\n00:09:57.120 --> 00:09:58.590\nYou're not gonna get any error.\n\n178\n00:09:58.590 --> 00:10:01.540\nYou have to think of it more within\nthe big picture of what you're trying to\n\n179\n00:10:01.540 --> 00:10:03.440\naccomplish in the game itself.\n\n180\n00:10:03.440 --> 00:10:04.280\n&gt;&gt; Exactly.\n\n181\n00:10:04.280 --> 00:10:07.400\nAnd these kind of run time\nerrors as they're called.\n\n182\n00:10:07.400 --> 00:10:11.240\nWell, they're not quite, they're\nnot always going to throw an error.\n\n183\n00:10:11.240 --> 00:10:13.392\nThey're not going to break your game.\n\n184\n00:10:13.392 --> 00:10:16.020\nThey may just break how you thought\nthe game was going to work.\n\n185\n00:10:17.020 --> 00:10:18.750\nWell that's weird.\n\n186\n00:10:18.750 --> 00:10:21.360\nThat doesn't work how I\nthought it was going to.\n\n187\n00:10:21.360 --> 00:10:28.390\nAnd then, I find these type of errors,\nif things don't happen as I expect them.\n\n188\n00:10:28.390 --> 00:10:32.010\nThose are for me, one of the most\ndifficult things to track down.\n\n189\n00:10:32.010 --> 00:10:33.730\nSo take some time and,\n\n190\n00:10:33.730 --> 00:10:37.090\nbecause it's organized it\nwouldn't be as bad to track down.\n\n191\n00:10:37.090 --> 00:10:39.270\nBut it's still maybe hard to reason about.\n\n192\n00:10:39.270 --> 00:10:41.370\nSo a little bit of planning beforehand.\n\n193\n00:10:41.370 --> 00:10:46.450\nAnd I have shown that I have done that,\nall right, here's the things that I want.\n\n194\n00:10:46.450 --> 00:10:49.070\nA little bit of planning before\nhand does go a long way in that.\n\n195\n00:10:49.070 --> 00:10:51.350\n&gt;&gt; It's a different\nlevel of mind-breaking.\n\n196\n00:10:51.350 --> 00:10:52.060\n&gt;&gt; Yeah.\n\n197\n00:10:53.210 --> 00:10:55.570\nSometimes it is not easy.\n\n198\n00:10:55.570 --> 00:10:57.270\nSo as it stands,\n\n199\n00:10:57.270 --> 00:11:01.120\nI think those are the only two things\nI need to add to the actor class.\n\n200\n00:11:01.120 --> 00:11:04.190\nHowever, let's talk about the player.\n\n201\n00:11:04.190 --> 00:11:08.257\nWell in a player,\nI wanna add an extra dynamic here.\n\n202\n00:11:10.127 --> 00:11:13.130\nI want to be able to have like, a heal.\n\n203\n00:11:13.130 --> 00:11:16.360\nWhen I run away, I wanna be able to heal.\n\n204\n00:11:16.360 --> 00:11:18.000\nWell how am I going to heal?\n\n205\n00:11:20.010 --> 00:11:22.860\nWell it would be nice if\nthe player could heal themselves.\n\n206\n00:11:22.860 --> 00:11:25.290\nBecause as it stands,\nsince this inherits from actor.\n\n207\n00:11:25.290 --> 00:11:29.930\nIt will have an hp so\nlet's just add a heal method\n\n208\n00:11:31.470 --> 00:11:34.050\nand that is a method only instance.\n\n209\n00:11:34.050 --> 00:11:38.910\nAnd I'm gonna say self.hp equals,\nactually plus equals 10.\n\n210\n00:11:38.910 --> 00:11:43.290\nNow this plus equals is gonna take hp,\nadd 10 to it and\n\n211\n00:11:43.290 --> 00:11:45.990\nthen set that value to self.hp.\n\n212\n00:11:45.990 --> 00:11:52.750\nSo it is equivalent to This right here.\n\n213\n00:11:52.750 --> 00:11:56.410\nSo take whatever hp was,\nadd 10 to it and then add that or\n\n214\n00:11:56.410 --> 00:11:59.520\nset that equal to or\nassign that to the variable hp.\n\n215\n00:11:59.520 --> 00:12:03.410\nI like the shorthand syntax,\nthat's just a personal preference,\n\n216\n00:12:03.410 --> 00:12:04.900\nyou can usually write it like this.\n\n217\n00:12:04.900 --> 00:12:07.990\n&gt;&gt; And Justin,\nthat goes back to what we're going on like\n\n218\n00:12:07.990 --> 00:12:09.170\nwhat we want the game to do.\n\n219\n00:12:09.170 --> 00:12:12.730\nI mean, you just picked ten,\nbecause you just felt like picking ten.\n\n220\n00:12:12.730 --> 00:12:13.650\nWe can change that and\n\n221\n00:12:13.650 --> 00:12:16.920\nmake the game harder or easier depending\non whatever number we set there.\n\n222\n00:12:16.920 --> 00:12:19.750\n&gt;&gt; And that's a great observation,\nRon, this may be,\n\n223\n00:12:19.750 --> 00:12:21.440\nmaybe this is your difficulty setting.\n\n224\n00:12:21.440 --> 00:12:22.060\nRight?\n\n225\n00:12:22.060 --> 00:12:23.870\nMaybe this is part of\nyour difficulty setting,\n\n226\n00:12:23.870 --> 00:12:28.590\nif you wanted to add, kind of have an easy\nmode, hard mode or medium mode, right?\n\n227\n00:12:28.590 --> 00:12:30.170\nOr whatever you wanna call those.\n\n228\n00:12:30.170 --> 00:12:34.170\nI can change that number and\nhave that set dynamically.\n\n229\n00:12:34.170 --> 00:12:36.420\nFor me, I'm just choosing a number.\n\n230\n00:12:36.420 --> 00:12:38.780\nAnd maybe it's right, maybe it's not.\n\n231\n00:12:38.780 --> 00:12:43.390\nBecause, I can plan,\nI can get abstract plan in order.\n\n232\n00:12:43.390 --> 00:12:48.910\nBut until I actually see this in play,\nI don't always, I don't have the ability.\n\n233\n00:12:48.910 --> 00:12:52.590\nMe personally, maybe you do,\nto see how it's all gonna play out.\n\n234\n00:12:52.590 --> 00:12:56.250\nSo I may have to come back and change\nthis number, very real possibility, so\n\n235\n00:12:56.250 --> 00:12:58.340\nI just picked something out of the air.\n\n236\n00:12:58.340 --> 00:13:03.370\nI do know that picking something like one,\nthat typically doesn't work because you're\n\n237\n00:13:03.370 --> 00:13:09.370\nlike well one, that's kinda small in\nregards to other things that are going on.\n\n238\n00:13:09.370 --> 00:13:13.145\nSo I have the ability\nto heal as a player so\n\n239\n00:13:13.145 --> 00:13:15.080\nthat's how I'm gonna add to the player for\nnow.\n\n240\n00:13:16.190 --> 00:13:21.480\nBut as it stands, if I come down to\nthe enemy, the enemy's kinda bland, right?\n\n241\n00:13:21.480 --> 00:13:27.170\nAnd there are some individuals as\nit stands this is not a good class.\n\n242\n00:13:27.170 --> 00:13:29.672\nIt has a method and that's it.\n\n243\n00:13:31.350 --> 00:13:33.270\nIt should probably have some other things.\n\n244\n00:13:33.270 --> 00:13:38.590\nThere are maybe other ways to\naccomplish a similar constraint.\n\n245\n00:13:38.590 --> 00:13:45.350\nBut, I did this because I knew I was\ngoing to continue to build this game up.\n\n246\n00:13:45.350 --> 00:13:47.270\nSo I put it in a class so\nI can encapsulate,\n\n247\n00:13:47.270 --> 00:13:49.470\nkind of put all of that stuff together.\n\n248\n00:13:49.470 --> 00:13:53.980\nAll enemies should be\nable to attack a player.\n\n249\n00:13:55.030 --> 00:13:56.500\nAn ogre should be able to attack.\n\n250\n00:13:56.500 --> 00:13:57.740\nIt is an enemy.\n\n251\n00:13:57.740 --> 00:13:59.300\nAn imp should be able to attack.\n\n252\n00:13:59.300 --> 00:14:00.760\nIt is also an enemy.\n\n253\n00:14:00.760 --> 00:14:04.520\nI could put attacks in both of these but\n\n254\n00:14:04.520 --> 00:14:07.410\nthen I'm repeating myself,\nwell I wanna stay dry.\n\n255\n00:14:07.410 --> 00:14:09.070\nI don't wanna repeat myself.\n\n256\n00:14:09.070 --> 00:14:12.970\nSo I'm gonna come to the super class or\nthe parent class of Ogre and Imp.\n\n257\n00:14:12.970 --> 00:14:15.140\nAnd put the attacks method there.\n\n258\n00:14:15.140 --> 00:14:19.760\nSo, let's see how that plays out.\n\n259\n00:14:19.760 --> 00:14:23.030\nSo attacks and that's gonna be self.\n\n260\n00:14:23.030 --> 00:14:24.450\nAnd I'm gonna say other.\n\n261\n00:14:24.450 --> 00:14:27.310\nActually, let's be more specific.\n\n262\n00:14:27.310 --> 00:14:31.120\nLet's say I'm going to attack the player.\n\n263\n00:14:31.120 --> 00:14:32.530\nRight?\n\n264\n00:14:32.530 --> 00:14:33.390\nSo what is that going to do?\n\n265\n00:14:33.390 --> 00:14:36.526\nWell first,\nthis is gonna print out a prompt.\n\n266\n00:14:36.526 --> 00:14:43.000\nSo, attacks, and\nthen what is that going to do?\n\n267\n00:14:43.000 --> 00:14:50.680\nThat is gonna format, and so notice\nthat the enemy has a name and a kind.\n\n268\n00:14:50.680 --> 00:14:56.596\nSo I'm gonna say name, kind,\nand then the player name.\n\n269\n00:14:56.596 --> 00:15:01.023\nSo self.name, self.kind, and\n\n270\n00:15:01.023 --> 00:15:06.540\nnot self, but instead player.name.\n\n271\n00:15:06.540 --> 00:15:12.780\nSo I should be able to see like Bob\nthe Ogre, or if I have an enemy.\n\n272\n00:15:12.780 --> 00:15:14.040\nI'm gonna have a name and\n\n273\n00:15:14.040 --> 00:15:19.430\na kind also, like I can then just\nplay around with, maybe it's a troll.\n\n274\n00:15:19.430 --> 00:15:22.660\nOr maybe it's a wandering rabid squirrel.\n\n275\n00:15:22.660 --> 00:15:23.790\nOr something like that.\n\n276\n00:15:23.790 --> 00:15:28.350\nThat would actually be a little more\nterrifying to me than maybe an ogre.\n\n277\n00:15:28.350 --> 00:15:33.250\nBut it's just a quick prompt\nas a good user feedback.\n\n278\n00:15:33.250 --> 00:15:34.550\nAnd then, what am I gonna do?\n\n279\n00:15:34.550 --> 00:15:38.650\nWell, I need the enemy's power, and\n\n280\n00:15:38.650 --> 00:15:44.097\nthat's gonna be self.get attack power.\n\n281\n00:15:44.097 --> 00:15:44.803\nOkay?\n\n282\n00:15:44.803 --> 00:15:47.036\nWell, this is where it gets weird.\n\n283\n00:15:47.036 --> 00:15:50.571\nEnemy, where is this get attack\npower going to come from?\n\n284\n00:15:52.252 --> 00:15:56.524\nGet attack power is actually\ndefined In the Actor class.\n\n285\n00:15:56.524 --> 00:15:59.910\nSo, it's going to look\ninto Actor to do that.\n\n286\n00:15:59.910 --> 00:16:06.040\nHowever, we're gonna see that maybe,\nmaybe that changes.\n\n287\n00:16:06.040 --> 00:16:08.530\nAnd in fact,\nit will because I've overridden\n\n288\n00:16:08.530 --> 00:16:10.690\nthose in the subclasses of Enemy.\n\n289\n00:16:10.690 --> 00:16:12.550\nSo, I'm keeping this general, and\n\n290\n00:16:12.550 --> 00:16:17.550\nknowing that I can change that behavior by\noverriding, or changing the definition.\n\n291\n00:16:17.550 --> 00:16:19.300\nOf the method with the same name.\n\n292\n00:16:19.300 --> 00:16:25.030\nSo, I need the enemy's power,\nI need the player power.\n\n293\n00:16:25.030 --> 00:16:26.950\nPower, here we go.\n\n294\n00:16:26.950 --> 00:16:29.890\nAnd then I say,\nplayer dot get attack power.\n\n295\n00:16:29.890 --> 00:16:34.670\nAnd I know that the player can get an\nattack power, because it is also an actor.\n\n296\n00:16:34.670 --> 00:16:35.880\nSo, I inherit that ability.\n\n297\n00:16:37.640 --> 00:16:43.590\nSo, at that point, well, I messed up.\n\n298\n00:16:43.590 --> 00:16:46.430\nI'm getting ready to re-implement this,\nI don't need this.\n\n299\n00:16:46.430 --> 00:16:49.030\nWhen I attack,\nI'm going to change the dynamic,\n\n300\n00:16:49.030 --> 00:16:52.850\nI was back in my old mind set there,\nI am going to change the dynamic.\n\n301\n00:16:52.850 --> 00:16:55.370\nI'm going to take the attack power.\n\n302\n00:16:55.370 --> 00:16:58.013\nThat I just summoned, some random number.\n\n303\n00:16:58.013 --> 00:17:02.400\nAnd I'm going to subtract that\nfrom the HP of the player.\n\n304\n00:17:02.400 --> 00:17:07.680\nSo, you can go back and\nforth until someone gets to zero, okay?\n\n305\n00:17:07.680 --> 00:17:08.866\nJust a quick prompt here.\n\n306\n00:17:08.866 --> 00:17:14.020\nHas blank attack power?\n\n307\n00:17:14.020 --> 00:17:14.910\nAnd I'm gonna format.\n\n308\n00:17:16.740 --> 00:17:21.167\nAnd just say name and self.kind.\n\n309\n00:17:21.167 --> 00:17:22.182\nNope.\n\n310\n00:17:22.182 --> 00:17:27.000\nNot self.kind, e_power.\n\n311\n00:17:27.000 --> 00:17:28.410\nThere we go.\n\n312\n00:17:28.410 --> 00:17:29.710\nGot ahead of myself again.\n\n313\n00:17:29.710 --> 00:17:33.800\nAnd then the last thing I\nwant to do is mice equal,\n\n314\n00:17:33.800 --> 00:17:36.970\nwhich is going to access the players hp,\nand\n\n315\n00:17:36.970 --> 00:17:42.350\nremove whatever the amount of\nattack power that I get, okay?\n\n316\n00:17:42.350 --> 00:17:47.770\nNow, that reminds me, if this is how\nthe attacks is gonna work in enemy,\n\n317\n00:17:47.770 --> 00:17:52.180\nif I come back up here to\nattacks in player, well,\n\n318\n00:17:52.180 --> 00:17:55.850\nthis is not gonna follow\nthe same dynamic anymore, right?\n\n319\n00:17:55.850 --> 00:18:00.450\nI've changed drastically\nhow attacks behaves,\n\n320\n00:18:00.450 --> 00:18:05.320\nin addition to attacks as I've used\nit with the player, returns true or\n\n321\n00:18:05.320 --> 00:18:06.820\nfalse that I've won or not.\n\n322\n00:18:06.820 --> 00:18:09.270\nWell, I'm not necessarily\ngonna win on a single turn.\n\n323\n00:18:10.740 --> 00:18:14.920\nSo, I'm going to remove this,\nand change the player one, and,\n\n324\n00:18:14.920 --> 00:18:18.600\nwell, you may see some\ninteresting parts here.\n\n325\n00:18:18.600 --> 00:18:24.080\nSo, I'm going to now,\nwe worked really hard on this code line,\n\n326\n00:18:24.080 --> 00:18:27.160\nbut sometimes you just gotta delete code.\n\n327\n00:18:27.160 --> 00:18:30.010\nAnd shed a little tear and move on.\n\n328\n00:18:30.010 --> 00:18:31.880\n&gt;&gt; I do feel a little sad right now.\n\n329\n00:18:31.880 --> 00:18:32.780\n&gt;&gt; You should.\n\n330\n00:18:32.780 --> 00:18:33.650\nYou should.\n\n331\n00:18:33.650 --> 00:18:35.370\nSo, I'm gonna print.\n\n332\n00:18:36.570 --> 00:18:37.315\nMaybe not that set.\n\n333\n00:18:37.315 --> 00:18:40.860\n&gt;&gt; [LAUGH] I know you're gonna fix it.\n\n334\n00:18:40.860 --> 00:18:41.550\n&gt;&gt; I hope so.\n&gt;&gt; [LAUGH]\n\n335\n00:18:41.550 --> 00:18:45.575\n&gt;&gt; I'm gonna say, attacks and then blank,\n\n336\n00:18:45.575 --> 00:18:46.550\nright?\n\n337\n00:18:46.550 --> 00:18:49.510\nAnd then what is that\ngoing to convey to us?\n\n338\n00:18:49.510 --> 00:18:50.648\nWell, I'm gonna say.\n\n339\n00:18:53.321 --> 00:18:57.439\nSelf.name, attacks, and the enemy.kind, so\n\n340\n00:18:57.439 --> 00:19:03.515\nI wanna know what kind of enemy I am\nattacking, cuz that may give me a hint,\n\n341\n00:19:03.515 --> 00:19:08.200\nmore than the name of the enemy\nif it's Bob the ogre.\n\n342\n00:19:08.200 --> 00:19:11.820\nWell, the ogre has a little bit\ndifferent manner in which it attacks,\n\n343\n00:19:11.820 --> 00:19:16.187\nso it would help me make decisions, so\nI'm going to keep the enemy.kind here.\n\n344\n00:19:17.950 --> 00:19:21.100\nAnd then, I'm going to say, print.\n\n345\n00:19:24.230 --> 00:19:26.580\nBlink has blink attack power.\n\n346\n00:19:28.920 --> 00:19:29.942\nAnd then, .format.\n\n347\n00:19:29.942 --> 00:19:34.983\nself.name, power.\n\n348\n00:19:34.983 --> 00:19:40.925\nAnd then finally enemy.hp -=power.\n\n349\n00:19:40.925 --> 00:19:44.630\nSo, I think, this falls in line more so\n\n350\n00:19:44.630 --> 00:19:48.830\nwith how the enemies are gonna do attack,\nand how I'm gonna change the game dynamic.\n\n351\n00:19:50.040 --> 00:19:51.884\nSo, okay.\n\n352\n00:19:51.884 --> 00:19:54.290\nI think, we're good.\n\n353\n00:19:54.290 --> 00:19:55.630\nThe ogre is an enemy.\n\n354\n00:19:55.630 --> 00:19:57.640\nIt should be able to attack.\n\n355\n00:19:57.640 --> 00:19:58.850\nThe imp is an enemy.\n\n356\n00:19:58.850 --> 00:20:01.329\nIt should be able to attack also.\n\n357\n00:20:01.329 --> 00:20:05.660\nI think maybe we need to do a little bit\nof testing before we change the game.\n\n358\n00:20:05.660 --> 00:20:10.280\nLet's test these, this player and\nthis ogre, maybe.\n\n359\n00:20:10.280 --> 00:20:13.560\nIn isolation, before we worry about\ntrying to get these in the game.\n\n360\n00:20:13.560 --> 00:20:14.820\nSo, I'm gonna come down here.\n\n361\n00:20:14.820 --> 00:20:16.850\nAnd I have some old code here.\n\n362\n00:20:16.850 --> 00:20:17.901\nWell, that's no good.\n\n363\n00:20:19.362 --> 00:20:22.790\nI'm going to uncomment that.\n\n364\n00:20:22.790 --> 00:20:24.170\nTake that out.\n\n365\n00:20:24.170 --> 00:20:26.150\nAnd actually take that out.\n\n366\n00:20:26.150 --> 00:20:28.580\nAnd, I'm just gonna say, oger.\n\n367\n00:20:28.580 --> 00:20:30.350\nI gotta spell ogre, right?\n\n368\n00:20:30.350 --> 00:20:34.680\nAnd I'm gonna create an Ogre and I forget\nwhat they, what the Ogre requires,\n\n369\n00:20:34.680 --> 00:20:36.270\nit needs a name, level and self.\n\n370\n00:20:37.990 --> 00:20:41.860\nSo, or size, name, level, and size.\n\n371\n00:20:41.860 --> 00:20:45.930\nSo, it's Bob and let me be specific here,\n\n372\n00:20:45.930 --> 00:20:50.957\nthe name is Bob, it is a level=1 Ogre.\n\n373\n00:20:53.150 --> 00:20:56.220\nBut the size= 2, right?\n\n374\n00:20:56.220 --> 00:20:59.800\nSo, that's gonna change how its\nattack power is calculated.\n\n375\n00:20:59.800 --> 00:21:03.790\nBecause it is going to take the size,\nand the level and multiply those.\n\n376\n00:21:03.790 --> 00:21:06.930\nAnd then randomize that\nvalue from 1 to 50.\n\n377\n00:21:06.930 --> 00:21:15.111\nSo, let's see if player.attacks(ogre).\n\n378\n00:21:15.111 --> 00:21:17.510\nLet's test that to see if it works.\n\n379\n00:21:17.510 --> 00:21:20.580\nSo, python not game, but\n\n380\n00:21:20.580 --> 00:21:26.800\ninstead actors.py super()\ntakes at least 1 argument.\n\n381\n00:21:28.130 --> 00:21:30.650\nSo we ran into some issues here.\n\n382\n00:21:30.650 --> 00:21:34.939\n(0 given).\n\n383\n00:21:34.939 --> 00:21:36.248\nLet's go back and look.\n\n384\n00:21:38.472 --> 00:21:42.151\nSo, super takes at least one argument,\n(0 given).\n\n385\n00:21:44.419 --> 00:21:47.906\nAnd, whoops, I'm using python too,\n\n386\n00:21:47.906 --> 00:21:53.070\nPython 2 super works\na little bit differently.\n\n387\n00:21:53.070 --> 00:21:55.040\nGotta make sure you're\nusing the right Python.\n\n388\n00:21:55.040 --> 00:21:59.018\nI'm using old stuff.\n\n389\n00:21:59.018 --> 00:22:01.080\nSo, there we go.\n\n390\n00:22:01.080 --> 00:22:03.210\nSo, Hercules attacks Ogre.\n\n391\n00:22:03.210 --> 00:22:05.500\nHercules has 255 attack power.\n\n392\n00:22:06.960 --> 00:22:12.383\nAnd just for reference, we need to\nmake sure that the ogre is losing HP.\n\n393\n00:22:12.383 --> 00:22:16.842\nSo, let's print(ogre.hp) and\n\n394\n00:22:16.842 --> 00:22:22.200\nlet's print(orgre.hp) afterwards.\n\n395\n00:22:22.200 --> 00:22:23.590\nThere we go.\n\n396\n00:22:23.590 --> 00:22:28.110\nAnd rerun this, and\nthat ogre is done with.\n\n397\n00:22:28.110 --> 00:22:29.740\nIt's all over.\n\n398\n00:22:29.740 --> 00:22:34.910\nSo, they had 100 hp and\nthen Hercules attacks the ogre,\n\n399\n00:22:34.910 --> 00:22:39.600\nand Hercules has a lot of attack power,\nand the ogre has negative.\n\n400\n00:22:39.600 --> 00:22:43.513\nSo, if I call, is alive, well,\nthat should be a no, they're not.\n\n401\n00:22:43.513 --> 00:22:44.390\nIt's all over.\n\n402\n00:22:45.530 --> 00:22:46.570\nAnd that's fine.\n\n403\n00:22:47.720 --> 00:22:51.350\nNow, we need to test the opposite,\ncan the ogre attack the player?\n\n404\n00:22:51.350 --> 00:22:57.512\nWell, let's get rid of this and\nsay, print(player.hp).\n\n405\n00:22:57.512 --> 00:23:02.469\nAnd then ogre.attacks(player) and\n\n406\n00:23:02.469 --> 00:23:06.229\nthen print(player.hp).\n\n407\n00:23:06.229 --> 00:23:07.929\nAnd let's see how that goes.\n\n408\n00:23:09.080 --> 00:23:12.930\nSo, 300 Bob the ogre attacks Hercules.\n\n409\n00:23:12.930 --> 00:23:14.780\nBob has 26 attack power.\n\n410\n00:23:14.780 --> 00:23:17.690\nHercules has 274 hp remaining.\n\n411\n00:23:18.900 --> 00:23:20.390\nOkay, so that works.\n\n412\n00:23:20.390 --> 00:23:22.700\nSo, these dynamics\nare starting to come together.\n\n413\n00:23:22.700 --> 00:23:26.210\nThere's one final thing that I\nneed to test, to see if it works,\n\n414\n00:23:26.210 --> 00:23:28.850\nbecause we've added some new stuff here.\n\n415\n00:23:28.850 --> 00:23:32.335\nAnd that's in the player,\nI have this heal method.\n\n416\n00:23:32.335 --> 00:23:36.218\nI need to be able to heal,\nbecause when I run away in the game,\n\n417\n00:23:36.218 --> 00:23:38.130\nI want some healing to occur.\n\n418\n00:23:39.960 --> 00:23:47.576\nSo, if I player.heal(), and\nthen I print(player.hp),\n\n419\n00:23:47.576 --> 00:23:52.940\nI should see apparently, another desktop.\n\n420\n00:23:54.380 --> 00:23:57.300\nPython3, I was getting\nready to mess up again,\n\n421\n00:23:57.300 --> 00:24:02.210\nbut 300, Bob the ogre attacks Hercules.\n\n422\n00:24:02.210 --> 00:24:08.850\nBob has 8 attack power, 292,\nand then in there, I heal,\n\n423\n00:24:08.850 --> 00:24:13.680\nand then I'm back to 302 HP,\nwell that’s a little weird,\n\n424\n00:24:13.680 --> 00:24:17.300\nbut maybe we'll just brush that\noff its and unexpected thing,\n\n425\n00:24:17.300 --> 00:24:20.830\nthere’s some other things that we have to\ndo so maybe that will not be a problem.\n\n426\n00:24:22.690 --> 00:24:26.670\nWe've changed our actors a little bit\nit seems like we have things in place\n\n427\n00:24:26.670 --> 00:24:31.240\nto change our game, but I'm just not\nsure we have time in this episode.\n\n428\n00:24:31.240 --> 00:24:33.900\n&gt;&gt; Unfortunately, just looking at\nthat clock, we are out of time.\n\n429\n00:24:33.900 --> 00:24:36.650\nBut you've left us with\nanother cliff hanger, so\n\n430\n00:24:36.650 --> 00:24:39.750\nwe are going to come back and\nsee how this is all going to wrap up.\n\n431\n00:24:39.750 --> 00:24:43.120\nBut for now, signing off ITV pro TV,\nI'm Von Smith.\n\n432\n00:24:43.120 --> 00:24:43.879\n&gt;&gt; And I'm Justin Nelson.\n\n433\n00:24:43.879 --> 00:24:46.309\n&gt;&gt; See you next time.\n\n434\n00:24:46.309 --> 00:24:52.266\n[MUSIC]\n\n435\n00:24:52.266 --> 00:24:54.200\n&gt;&gt; Thank you for watching, ITProTV.\n\n",
          "vimeoId": "208843338"
        },
        {
          "description": "In this episode, Vonne and Justin finish up with some final touches of version 2 of the MonsterSlash game using Object-Oriented Python.",
          "length": "1319",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-8-1-2-monsterslaash_v.2_enemies_attack_pt._2-031517-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-8-1-2-monsterslaash_v.2_enemies_attack_pt._2-031517-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-objectorientedpython/techskills-objectorientedpython-8-1-2-monsterslaash_v.2_enemies_attack_pt._2-031517-1-sm.jpg",
          "title": "MonsterSlash v.2 Enemies Attack Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.045 --> 00:00:02.299\nWelcome to ITProTV,\nI'm your host, Don Pezet.\n\n2\n00:00:02.299 --> 00:00:06.073\n[CROSSTALK]\n\n3\n00:00:06.073 --> 00:00:08.278\n[MUSIC]\n\n4\n00:00:08.278 --> 00:00:11.494\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:11.494 --> 00:00:15.430\n&gt;&gt; Hello, everyone, and\nwelcome to another episode of ITProTV.\n\n6\n00:00:15.430 --> 00:00:18.075\nI'm your host, Vonne Smith, and\n\n7\n00:00:18.075 --> 00:00:22.920\nwe are back with part 2 of version\n2 of our MonsterSlash game.\n\n8\n00:00:22.920 --> 00:00:26.290\nAnd here to help us again is Mr.\nJustin Dennison, hello again.\n\n9\n00:00:26.290 --> 00:00:27.640\n&gt;&gt; Hello Vonne, how are you today?\n\n10\n00:00:27.640 --> 00:00:30.672\n&gt;&gt; I'm good, I'm ready to see where\nwe're going in the game, right,\n\n11\n00:00:30.672 --> 00:00:33.303\nbecause I think we finished\nup our character development.\n\n12\n00:00:33.303 --> 00:00:36.650\nAnd now we're going into putting\nthose characters in the game.\n\n13\n00:00:36.650 --> 00:00:41.260\n&gt;&gt; Exactly, so, we left off adding the\nlittle bit of attributes, the features,\n\n14\n00:00:41.260 --> 00:00:44.260\nthe methods that we needed\na little bit of changes to.\n\n15\n00:00:44.260 --> 00:00:45.320\nThe actor, the player,\n\n16\n00:00:45.320 --> 00:00:50.340\nand the respective enemies,\nin order to change the game mechanics.\n\n17\n00:00:50.340 --> 00:00:53.594\nAnd I kinda ran out of time last episode,\nso definitely check that out if you\n\n18\n00:00:53.594 --> 00:00:56.140\nhaven't seen the changes that\nwe've made to the actors.\n\n19\n00:00:56.140 --> 00:01:00.460\nBut we haven't changed how\nthe game actually operates.\n\n20\n00:01:00.460 --> 00:01:06.090\nAnd we changed how the player behaves,\nso the game's kind of not gonna work.\n\n21\n00:01:06.090 --> 00:01:08.280\nSo we need to dig right into that.\n\n22\n00:01:08.280 --> 00:01:11.608\nBut the part 2 version 2, that was\nkinda hard to say, good job on that,\n\n23\n00:01:11.608 --> 00:01:12.650\nthat was great.\n\n24\n00:01:12.650 --> 00:01:15.970\nSo let's go ahead and\nhop down into here and see where we are.\n\n25\n00:01:15.970 --> 00:01:19.770\nSo I'm back in my MonsterSlash game.\n\n26\n00:01:19.770 --> 00:01:26.610\nIf I try to run, if I can actually type,\nour game.py, it looks fine.\n\n27\n00:01:26.610 --> 00:01:30.905\nBut if I try to attack,\nokay, that's weird.\n\n28\n00:01:30.905 --> 00:01:33.900\nAttacks, Hercules hides\nto plan the next move.\n\n29\n00:01:33.900 --> 00:01:39.110\nOkay, I'm never going to win.\n\n30\n00:01:42.616 --> 00:01:43.870\n&gt;&gt; That's a lot of winning.\n\n31\n00:01:43.870 --> 00:01:46.310\n&gt;&gt; Yeah, l'm never gonna win.\n\n32\n00:01:46.310 --> 00:01:51.043\nSo, we need to change how this behaves\nin order to get this game account\n\n33\n00:01:51.043 --> 00:01:53.383\nkind of working as we anticipate.\n\n34\n00:01:53.383 --> 00:01:57.704\nSo let's hop over into the game and\nsee how this works out.\n\n35\n00:01:57.704 --> 00:02:01.763\nI have Bob the ogre and Alice the imp,\nand they're all good in Hercules, and\n\n36\n00:02:01.763 --> 00:02:05.780\nthere's my game, but now let's come\nup here and look through this.\n\n37\n00:02:05.780 --> 00:02:10.618\nI still want a random enemy,\nI still wanna take user input, but here,\n\n38\n00:02:10.618 --> 00:02:16.204\nthis first one, if l run away, l wanna\nchange how this behaves, and let's see.\n\n39\n00:02:16.204 --> 00:02:20.114\nSo I'm gonna run away, but\n\n40\n00:02:20.114 --> 00:02:26.740\nI'm also going to say, heals thyself.\n\n41\n00:02:26.740 --> 00:02:28.954\nI just feel that's appropriate for\nthe game.\n\n42\n00:02:28.954 --> 00:02:33.131\nAnd then self.player.name, and well,\n\n43\n00:02:33.131 --> 00:02:40.239\nI'm gonna say self.player, .heal.\n\n44\n00:02:40.239 --> 00:02:43.401\nAnd just out of curiosity,\n\n45\n00:02:43.401 --> 00:02:48.494\nI'm going to print out self.player.hp.\n\n46\n00:02:48.494 --> 00:02:49.481\nNow, this isn't gonna stay.\n\n47\n00:02:49.481 --> 00:02:50.840\nI'm gonna take that away.\n\n48\n00:02:50.840 --> 00:02:54.990\nThis is for a little bit of testing\npurposes, so, I'm gonna rerun the game.\n\n49\n00:02:54.990 --> 00:02:59.936\nSee if this is taking effect, because now\nif I run away, I can regain some of my HP,\n\n50\n00:02:59.936 --> 00:03:00.455\nright?\n\n51\n00:03:00.455 --> 00:03:03.816\nWe need some, typically there's\nmagic potions and stuff, and\n\n52\n00:03:03.816 --> 00:03:05.630\nnow that's an inventory system.\n\n53\n00:03:05.630 --> 00:03:07.740\nThat's a whole other level of complexity.\n\n54\n00:03:07.740 --> 00:03:10.080\nBut if I run away,\nmaybe I get to rest a little bit.\n\n55\n00:03:10.080 --> 00:03:14.229\nI regain some of my health, and\nthen I can continue to attack.\n\n56\n00:03:15.380 --> 00:03:20.910\nSo I'm gonna clear out the screen here,\npython3, and game, all right?\n\n57\n00:03:20.910 --> 00:03:24.460\nI'm going to run, run, run.\n\n58\n00:03:24.460 --> 00:03:28.810\nAnd notice I am healing, and\nthat's the behavior that I anticipate.\n\n59\n00:03:28.810 --> 00:03:30.684\nThat's good to know.\n\n60\n00:03:30.684 --> 00:03:36.270\nNow, it's nice to have some output.\n\n61\n00:03:36.270 --> 00:03:40.210\nWhen I'm changing the stats,\nI noticed I had to put that in there,\n\n62\n00:03:40.210 --> 00:03:41.770\nand that reminds me.\n\n63\n00:03:41.770 --> 00:03:45.871\nAll the actors should have some\nway to output the actor and\n\n64\n00:03:45.871 --> 00:03:48.100\nwhat their health is, right?\n\n65\n00:03:48.100 --> 00:03:51.200\nTypically, you have a health\nbar in more graphical games.\n\n66\n00:03:51.200 --> 00:03:54.490\nI need something similar,\nand where would that happen?\n\n67\n00:03:54.490 --> 00:03:58.010\nWhat would happen right here\nbefore this line break, and\n\n68\n00:03:58.010 --> 00:04:01.760\nmaybe there's another line break\nthere that blocks these up.\n\n69\n00:04:01.760 --> 00:04:03.110\nBut I have no way of printing that out.\n\n70\n00:04:04.570 --> 00:04:07.710\nI know that all actors need that ability.\n\n71\n00:04:07.710 --> 00:04:12.573\nSo if I come back, I can change the actor\nclass, add that ability, and now all of\n\n72\n00:04:12.573 --> 00:04:17.382\nmy players, all of my enemies, will be\nable to self-report on their health.\n\n73\n00:04:17.382 --> 00:04:21.320\nAnd this would work also for\ninventory readings and things like that.\n\n74\n00:04:21.320 --> 00:04:24.096\nSo, well, what are we gonna call it?\n\n75\n00:04:24.096 --> 00:04:27.250\nI like to call it something\nof the nature of stats.\n\n76\n00:04:29.030 --> 00:04:32.350\nSo, stats, and what is it going to report?\n\n77\n00:04:32.350 --> 00:04:38.268\nSo if I call player.stats or enemy.stats,\n\n78\n00:04:38.268 --> 00:04:44.360\nthat's going to say {} has {} hp, right?\n\n79\n00:04:44.360 --> 00:04:47.000\nSo I'm saying blump cuz it's just a blob.\n\n80\n00:04:47.000 --> 00:04:52.338\nSo format and then self.name and\n\n81\n00:04:52.338 --> 00:04:56.160\nself.hp, all right?\n\n82\n00:04:56.160 --> 00:04:57.921\nNow the name and the hp,\n\n83\n00:04:57.921 --> 00:05:03.840\nthis is the one time where I'm not going\nto get Bob the ogre, I'm gonna get Bob.\n\n84\n00:05:04.860 --> 00:05:06.280\nSo I have to keep that in mind.\n\n85\n00:05:06.280 --> 00:05:07.350\nYou should know your player's name.\n\n86\n00:05:07.350 --> 00:05:10.130\nIf you're playing a game and\nyou forget your own player's name,\n\n87\n00:05:10.130 --> 00:05:12.670\nit's probably not gonna\nwork out too well for you.\n\n88\n00:05:12.670 --> 00:05:13.530\nI've done that before.\n\n89\n00:05:13.530 --> 00:05:16.899\nAnd I split screen, think I'm winning,\nand I'm actually losing horribly and\n\n90\n00:05:16.899 --> 00:05:18.317\nthat's because I got confused.\n\n91\n00:05:18.317 --> 00:05:20.010\nSo keep that in mind.\n\n92\n00:05:20.010 --> 00:05:23.400\nThis is not a robust one,\nbut it is available.\n\n93\n00:05:23.400 --> 00:05:27.180\nI've had to write it in one place, and\nit's available for all of my characters.\n\n94\n00:05:27.180 --> 00:05:28.760\nSo where am I gonna put that?\n\n95\n00:05:28.760 --> 00:05:32.621\nRight after this print_linebreak(),\n\n96\n00:05:32.621 --> 00:05:37.447\nI'm gonna create another\nprint_linebreak() and\n\n97\n00:05:37.447 --> 00:05:42.807\nin between them, I'm gonna say,\nself.player.stats,\n\n98\n00:05:42.807 --> 00:05:46.470\nand for e in self.enemies: e.stats.\n\n99\n00:05:46.470 --> 00:05:51.350\nSo for the player,\nI'm going to print out the stats, and for\n\n100\n00:05:51.350 --> 00:05:55.710\nevery enemy that's still in the enemies\nlist, I'm gonna print out their stats.\n\n101\n00:05:55.710 --> 00:05:58.100\nLet's see if that plays out for us, and\n\n102\n00:05:58.100 --> 00:06:01.630\nthen it should turn around and\ngo back through.\n\n103\n00:06:01.630 --> 00:06:06.487\nI have to quit, so python3 game.py,\n\n104\n00:06:06.487 --> 00:06:10.320\nEnter, and I'm going to run.\n\n105\n00:06:11.530 --> 00:06:15.390\nAnd notice, I get what happens,\nheals thyself.\n\n106\n00:06:15.390 --> 00:06:19.421\nHercules has 110 hp,\nBob has 100, Alice has 100.\n\n107\n00:06:19.421 --> 00:06:23.300\nAfter each turn, this is a quick check-in.\n\n108\n00:06:23.300 --> 00:06:23.830\nAm I winning?\n\n109\n00:06:24.910 --> 00:06:28.661\nThis should inform your player, what\nare the next actions that you should or\n\n110\n00:06:28.661 --> 00:06:29.725\ncould take, right?\n\n111\n00:06:29.725 --> 00:06:36.430\nIf Bob and Alice have 100 hp, and you have\n7, you should probably run, all right?\n\n112\n00:06:36.430 --> 00:06:38.530\nSo it changes the dynamic a little bit.\n\n113\n00:06:38.530 --> 00:06:43.070\nBut this information is important for\nyour player to make appropriate decisions.\n\n114\n00:06:43.070 --> 00:06:45.202\nOtherwise, you just attack,\nattack, attack.\n\n115\n00:06:45.202 --> 00:06:49.920\nWe wantedto change that dynamic, so\nwe're changing it to incorporate health.\n\n116\n00:06:49.920 --> 00:06:56.710\nAll right, so as it stands, it looks\nlike the running away is helpful to us.\n\n117\n00:06:57.750 --> 00:06:59.079\nBut what about a?\n\n118\n00:06:59.079 --> 00:07:02.795\nWell, we'll handle a cuz there's\na lot of logic that changes there.\n\n119\n00:07:02.795 --> 00:07:04.640\nBut what about pass?\n\n120\n00:07:05.930 --> 00:07:08.914\nHm, I want it to be,\nif you pass your turn, and\n\n121\n00:07:08.914 --> 00:07:12.830\nI would have to make this more\nrobust in some other capacity.\n\n122\n00:07:12.830 --> 00:07:17.880\nBut just to see how this works,\nif you pass your turn, well, periodically,\n\n123\n00:07:17.880 --> 00:07:21.158\nyou're gonna get attacked or\nsomething of that nature.\n\n124\n00:07:21.158 --> 00:07:25.814\nSo, Let's keep that.\n\n125\n00:07:25.814 --> 00:07:27.903\nYou're thinking about your next move.\n\n126\n00:07:27.903 --> 00:07:34.320\nAnd randint(1,11) &lt; 5,\nand what is that gonna do?\n\n127\n00:07:34.320 --> 00:07:39.640\nprint, blank,\nactually that is part of our attack,\n\n128\n00:07:39.640 --> 00:07:47.961\nso I'm gonna say\nnext_enemy.attacks(self.player).\n\n129\n00:07:47.961 --> 00:07:51.367\nAnd we're gonna see how that plays out.\n\n130\n00:07:51.367 --> 00:07:54.989\n&gt;&gt; So, Justin, I'm following along, and\nI'm getting this, but that last line with\n\n131\n00:07:54.989 --> 00:07:58.626\nall those numbers, the 1, 11, can you\nexplain that a little bit more, please?\n\n132\n00:07:58.626 --> 00:08:00.703\n&gt;&gt; Yeah, Vonne,\nyou're gut checking me again.\n\n133\n00:08:00.703 --> 00:08:02.038\nYou're keeping me in check.\n\n134\n00:08:02.038 --> 00:08:04.026\nSo this is a way for me to test.\n\n135\n00:08:04.026 --> 00:08:08.940\nSo rand m is going to give me some\nrandom number from one up to ten,\n\n136\n00:08:08.940 --> 00:08:12.310\n11 is not included, I over shot it by one.\n\n137\n00:08:12.310 --> 00:08:14.930\nSo I am going to get 1, 2,\n3, 4, 5, 6, 7, 8, 9, 10.\n\n138\n00:08:14.930 --> 00:08:19.430\nIf that number is less than five,\nthen the enemy is going to attack you.\n\n139\n00:08:19.430 --> 00:08:24.370\nIf it is not less than five or\nis equal to five, it will not attack you.\n\n140\n00:08:24.370 --> 00:08:29.010\nSo there's some non-zero chance\nthat you're gonna get attacked, but\n\n141\n00:08:29.010 --> 00:08:30.690\nit's not always gonna happen.\n\n142\n00:08:30.690 --> 00:08:32.870\nAnd this changes, that game of chance.\n\n143\n00:08:32.870 --> 00:08:35.860\nYou ever had that time where\nyou're like game's cheating?\n\n144\n00:08:35.860 --> 00:08:39.420\nWell, we're introducing that\ngame cheating ability here\n\n145\n00:08:39.420 --> 00:08:42.470\nbecause maybe you passed the first three\ntimes and well you don't get attacked.\n\n146\n00:08:42.470 --> 00:08:44.470\nAnd you're like, I'm gonna pass again.\n\n147\n00:08:44.470 --> 00:08:48.439\nYou pass and then you get attacked and\nmaybe it's by an extra large ogre and\n\n148\n00:08:48.439 --> 00:08:49.798\nit just wrecks your day.\n\n149\n00:08:49.798 --> 00:08:53.140\nSo that changes how you decide.\n\n150\n00:08:53.140 --> 00:08:55.490\nNow, this is not completely deterministic.\n\n151\n00:08:55.490 --> 00:08:57.540\nYou would probably wanna make\nthis a little more robust,\n\n152\n00:08:57.540 --> 00:09:00.350\nhave a little bit different\ndecision making ability.\n\n153\n00:09:00.350 --> 00:09:03.040\nIn the long term, so\nyour players can reason about it.\n\n154\n00:09:03.040 --> 00:09:07.120\nBut maybe you just say hey,\nthere's gonna be like a dice roll.\n\n155\n00:09:07.120 --> 00:09:11.070\nAnd based on the dice, you're either gonna\ninflict, incur damage, or you're not.\n\n156\n00:09:11.070 --> 00:09:12.440\nSo, changes that a little bit.\n\n157\n00:09:12.440 --> 00:09:13.720\nLet's see how this works.\n\n158\n00:09:15.140 --> 00:09:15.967\nSo I'm gonna clear.\n\n159\n00:09:19.093 --> 00:09:20.830\nAnd Enter, all right.\n\n160\n00:09:20.830 --> 00:09:21.880\nSo I'm gonna pass.\n\n161\n00:09:22.970 --> 00:09:24.800\nRandint is not defined.\n\n162\n00:09:24.800 --> 00:09:27.655\nNameError, NameError.\n\n163\n00:09:27.655 --> 00:09:30.410\nWell, let's see here.\n\n164\n00:09:30.410 --> 00:09:34.180\nSo if I come up here, you know what?\n\n165\n00:09:34.180 --> 00:09:39.280\nI imported randint in actors but\nI didn't import it inside the game.\n\n166\n00:09:39.280 --> 00:09:41.570\nI actually just imported\nall of the random modules.\n\n167\n00:09:42.600 --> 00:09:45.550\nSo, I have to come down here and\n\n168\n00:09:45.550 --> 00:09:49.970\nsay not randint because I'm not\nimporting just that function.\n\n169\n00:09:49.970 --> 00:09:55.480\nI have to say,\nfrom the random module, run randint.\n\n170\n00:09:55.480 --> 00:09:59.990\nSo I was gonna get attacked there,\nbut it thought it was a variable or\n\n171\n00:09:59.990 --> 00:10:04.450\na function I had to find that didn't\nexist so I had that quit on me.\n\n172\n00:10:04.450 --> 00:10:08.025\nAll right whoops, debugging is an\nimportant skill, let's see if we fixed it.\n\n173\n00:10:10.319 --> 00:10:14.200\nAnd I'm gonna pass, and\nI didn't get attacked.\n\n174\n00:10:15.770 --> 00:10:18.100\nI didn't get attacked,\nI didn't get attacked, I got attacked.\n\n175\n00:10:19.810 --> 00:10:22.890\nAnd there we go,\nsee how Alice the imp attacked me.\n\n176\n00:10:23.970 --> 00:10:26.050\nAnd that happened at random.\n\n177\n00:10:26.050 --> 00:10:28.280\nWell, pseudo random, right?\n\n178\n00:10:28.280 --> 00:10:29.660\nIts not completely at random.\n\n179\n00:10:29.660 --> 00:10:33.740\nAnd I can change those numbers,\nthis 1 to 11 and\n\n180\n00:10:33.740 --> 00:10:40.440\nthis 5 to determine with what frequency\nI want and that's completely up to you.\n\n181\n00:10:40.440 --> 00:10:45.080\nI've just chosen, if I get 1, 2, 3 or\n4 from my random Then I'm going to get\n\n182\n00:10:45.080 --> 00:10:49.590\nattacked, otherwise I'm good to go,\nbut it's a nice little surprise.\n\n183\n00:10:49.590 --> 00:10:51.860\nWell, maybe not so nice a surprise.\n\n184\n00:10:51.860 --> 00:10:57.960\nSo I've changed the pass dynamic, we have\none final thing to try to figure out.\n\n185\n00:10:59.150 --> 00:11:01.010\nThis attack is not gonna work anymore.\n\n186\n00:11:01.010 --> 00:11:06.270\nSo just like we did in a previous episode,\nI'm just gonna\n\n187\n00:11:06.270 --> 00:11:09.980\nget rid of all of all I'm going to start\nover try to reason back through it here.\n\n188\n00:11:09.980 --> 00:11:12.240\nSo, what do I want to do if I attack?\n\n189\n00:11:12.240 --> 00:11:17.496\nWell,as the player I want to\n\n190\n00:11:17.496 --> 00:11:24.070\nattack the next enemy, all right.\n\n191\n00:11:24.070 --> 00:11:25.910\nNow, that should be different order,\nright?\n\n192\n00:11:25.910 --> 00:11:30.030\nIn a true, more complex battle system,\nthe enemy might be going cursed,\n\n193\n00:11:30.030 --> 00:11:31.340\nversus the player.\n\n194\n00:11:31.340 --> 00:11:33.490\nWell, you know how to randomize that.\n\n195\n00:11:33.490 --> 00:11:36.590\nMaybe you can change that to where\nsometimes the player goes first,\n\n196\n00:11:36.590 --> 00:11:38.350\nsometimes the enemy goes first.\n\n197\n00:11:38.350 --> 00:11:41.410\nBut I'll leave that up to you,\nif you wanna play around in there.\n\n198\n00:11:41.410 --> 00:11:44.290\nSo right now,\nmy player's always gonna attack first.\n\n199\n00:11:44.290 --> 00:11:51.900\nAnd then I want to see,\nif the enemy is alive.\n\n200\n00:11:53.300 --> 00:11:54.730\nIf it is not alive,\n\n201\n00:11:54.730 --> 00:11:58.670\nso this reads if the enemy is not alive,\nwhat do you want to do?\n\n202\n00:12:00.210 --> 00:12:06.011\nI want to take self.enemies and\nremove next_enemy.\n\n203\n00:12:06.011 --> 00:12:08.458\nAnd then I also want to,\n\n204\n00:12:08.458 --> 00:12:13.076\nwell actually I don't need to continue\nhere because this is an else if.\n\n205\n00:12:13.076 --> 00:12:17.557\nIt will actually just break out and\nprint the line break,should be good to go.\n\n206\n00:12:17.557 --> 00:12:22.120\nHowever, the other option is\nthe enemy is still alive.\n\n207\n00:12:23.190 --> 00:12:26.637\nSo at that point,\nthe enemy's gonna retaliate and\n\n208\n00:12:26.637 --> 00:12:31.830\nattack the player.\n\n209\n00:12:31.830 --> 00:12:34.570\nAll right, well, let's see here.\n\n210\n00:12:34.570 --> 00:12:36.620\nIs that all we need?\n\n211\n00:12:36.620 --> 00:12:39.110\nWell, no, right?\n\n212\n00:12:39.110 --> 00:12:41.560\nWhat happens if the enemy attacks me?\n\n213\n00:12:41.560 --> 00:12:44.600\nAnd it has an attack power of 5,000 and\nI have a 100 hp.\n\n214\n00:12:44.600 --> 00:12:49.450\nWell, I'm not live anymore and I lose.\n\n215\n00:12:49.450 --> 00:12:54.113\nSo now, the next check is,\nif not player is alive,\n\n216\n00:12:54.113 --> 00:12:59.654\nalmost forget the self there,\nself.player.is_alive.\n\n217\n00:13:00.960 --> 00:13:07.578\nThen, well,\nI want to say something of, No!\n\n218\n00:13:07.578 --> 00:13:11.210\nYou lose!\n\n219\n00:13:11.210 --> 00:13:13.350\nAnd then I'm going to break.\n\n220\n00:13:13.350 --> 00:13:14.585\nWhy am breaking here?\n\n221\n00:13:14.585 --> 00:13:17.500\nAnd that's because the for\nloop, or excuse me,\n\n222\n00:13:17.500 --> 00:13:21.290\nthe while loop is running for\never and ever and ever and ever.\n\n223\n00:13:21.290 --> 00:13:26.570\nAnd if I break out, then it's going to\nbreak out and say, whoops, you lost.\n\n224\n00:13:26.570 --> 00:13:32.530\nSo the last thing they'll see is, no, you\nlost, and then just quit the game, right?\n\n225\n00:13:32.530 --> 00:13:33.040\nIt's over.\nNow,\n\n226\n00:13:33.040 --> 00:13:37.170\nit would be nice to have\na little more complex ending.\n\n227\n00:13:37.170 --> 00:13:39.140\nBut for now, this is our general logic.\n\n228\n00:13:40.200 --> 00:13:45.040\nIf the player's gonna attack the enemy,\nif the enemy is not alive well then\n\n229\n00:13:45.040 --> 00:13:50.990\nself.enemy is, I'm gonna remove\nthat enemy from the board.\n\n230\n00:13:50.990 --> 00:13:54.240\nAnd then the next enemy is\ngoing to attack the player.\n\n231\n00:13:54.240 --> 00:13:57.490\nIf the player's not alive,\nthen you lost and\n\n232\n00:13:57.490 --> 00:13:59.980\nwe break out the game and the game ends.\n\n233\n00:13:59.980 --> 00:14:01.273\nSo let's see if that works.\n\n234\n00:14:01.273 --> 00:14:04.553\nAll I'm gonna do is attack, attack,\nattack, attack, attack, attack,\n\n235\n00:14:04.553 --> 00:14:05.810\nsee if these works.\n\n236\n00:14:05.810 --> 00:14:09.992\nAll right, so let's go ahead and\nclear this out real quick and\n\n237\n00:14:09.992 --> 00:14:11.611\nget back started here.\n\n238\n00:14:11.611 --> 00:14:17.640\nSo python3game.py and I'm gonna get hit\nand play and then let's start attacking.\n\n239\n00:14:17.640 --> 00:14:22.119\nAnd notice that, well I have\nbeaten Alice the Imp, that's good.\n\n240\n00:14:22.119 --> 00:14:24.891\nAnd then I just beat Bobby over, no.\n\n241\n00:14:24.891 --> 00:14:26.455\nI lied, I lost, right?\n\n242\n00:14:26.455 --> 00:14:28.517\nSo, that's what I anticipate.\n\n243\n00:14:28.517 --> 00:14:31.936\nLet's play one more time and\nsee if I can win.\n\n244\n00:14:31.936 --> 00:14:33.422\nBob messed up there.\n\n245\n00:14:33.422 --> 00:14:35.489\n&gt;&gt; Make sure you get that three.\n\n246\n00:14:35.489 --> 00:14:39.011\n&gt;&gt; Yup that's important.\nSo I'm gonna attack attack attack.\n\n247\n00:14:39.011 --> 00:14:42.240\nI have very little hp left.\n\n248\n00:14:42.240 --> 00:14:44.533\n&gt;&gt; This is where we should run?\n\n249\n00:14:44.533 --> 00:14:47.269\n&gt;&gt; We gonna run,we gonna run,we gonna run.\n\n250\n00:14:47.269 --> 00:14:49.532\nAnd I'm just kinda cheesy right?\n\n251\n00:14:49.532 --> 00:14:50.217\nIt's some cheese moves there.\n\n252\n00:14:50.217 --> 00:14:55.489\nAnd then attack attack,\nI'm gonna run and run attack attack and\n\n253\n00:14:55.489 --> 00:14:59.011\nI won so\nboth outcomes are available to me.\n\n254\n00:14:59.011 --> 00:14:59.785\nThat's good.\n\n255\n00:14:59.785 --> 00:15:04.790\nNow, you know, I notice that I don't\nknow if the dynamic's quite what I want.\n\n256\n00:15:04.790 --> 00:15:07.790\nLet me just review this.\n\n257\n00:15:09.630 --> 00:15:13.897\nIf I'm getting attacked in the pass right?\n\n258\n00:15:13.897 --> 00:15:18.772\nIf I'm getting attacked in the pass field,\n\n259\n00:15:18.772 --> 00:15:22.461\nI might run into some problems but\n\n260\n00:15:22.461 --> 00:15:28.938\nalso in the actors this is 1 to 100,\nhm, 1 to 100.\n\n261\n00:15:28.938 --> 00:15:34.770\nMaybe it would be better if I changed that\ninstead of 1 to 100, maybe it's 1 to 10,\n\n262\n00:15:34.770 --> 00:15:39.220\nand that way I can get\na little more run on this.\n\n263\n00:15:39.220 --> 00:15:40.610\nSo I'm gonna change this to 10.\n\n264\n00:15:40.610 --> 00:15:43.040\nAnd if I changed that to 10,\n\n265\n00:15:43.040 --> 00:15:48.840\nI know in the ogre I changed this to 5 so\nthat should change.\n\n266\n00:15:48.840 --> 00:15:53.220\nSo right now as it stands a large ogre\ncould actually kill me in one hit.\n\n267\n00:15:53.220 --> 00:15:59.609\nSo, I should probably change this\na little bit so it's not an, oops I died.\n\n268\n00:15:59.609 --> 00:16:05.684\nSo let's go see how this works if that\nchanges that dynamic a little bit.\n\n269\n00:16:05.684 --> 00:16:11.325\nAnd if I attack, okay,\nBob has three attack power, I have nine.\n\n270\n00:16:11.325 --> 00:16:16.290\nOkay, I think this is a better feeling for\nme.\n\n271\n00:16:16.290 --> 00:16:18.440\nAnd also the ten makes\na little more sense.\n\n272\n00:16:18.440 --> 00:16:21.430\nMaybe I change that heal power of ten.\n\n273\n00:16:21.430 --> 00:16:25.479\nInstead of, whoops, Bob got a critical\nstrike and he died in one turn.\n\n274\n00:16:25.479 --> 00:16:27.680\nThat would be a horrible battle system.\n\n275\n00:16:27.680 --> 00:16:33.380\nI know there are some games I\nplayed where it's kind of a very,\n\n276\n00:16:33.380 --> 00:16:37.060\nyou clench your teeth and\nyou hit, let's start again.\n\n277\n00:16:37.060 --> 00:16:40.800\nSo I like that, but\nwhat if I just pass a great deal.\n\n278\n00:16:43.170 --> 00:16:44.820\nWell, it is possible!\n\n279\n00:16:47.010 --> 00:16:48.410\nAnd I got to pass a bunch.\n\n280\n00:16:50.140 --> 00:16:51.180\nI wasn't actually passing.\n\n281\n00:16:54.150 --> 00:16:59.330\nThis is probably the most\ninvigorating screen art [LAUGH],\n\n282\n00:16:59.330 --> 00:17:03.990\nlet me get my HP down a little bit.\n\n283\n00:17:07.520 --> 00:17:09.310\nBob ended up with a critical hit.\n\n284\n00:17:09.310 --> 00:17:13.645\nBut as I saw that, is this possible that\nI could get attacked during a past turn?\n\n285\n00:17:13.645 --> 00:17:16.480\nAnd that would kill me and I would lose.\n\n286\n00:17:16.480 --> 00:17:21.370\nSo this is kind of one of those edge\ncases that it just kind of cropped up.\n\n287\n00:17:21.370 --> 00:17:24.380\nAnd let's go see if why that is the case.\n\n288\n00:17:24.380 --> 00:17:27.370\nWhen I attack,\nI'm going to attack the enemy.\n\n289\n00:17:27.370 --> 00:17:29.543\nIf the enemy is not alive,\nI want to remove the enemy.\n\n290\n00:17:29.543 --> 00:17:35.706\nAnd then the enemy is going to attack me,\nif the enemy is still there.\n\n291\n00:17:35.706 --> 00:17:38.830\nOkay, well, there's a couple of things.\n\n292\n00:17:39.970 --> 00:17:43.230\nNotice that the enemy's always going\nto attack me even if I killed it.\n\n293\n00:17:44.590 --> 00:17:46.390\nSo I was right.\n\n294\n00:17:46.390 --> 00:17:48.030\nI do need a continue.\n\n295\n00:17:48.030 --> 00:17:49.740\nWhy do I need a continue?\n\n296\n00:17:49.740 --> 00:17:54.255\nCuz I want to hop back over here or\n\n297\n00:17:54.255 --> 00:17:59.780\nbetter yet, that's a good question.\n\n298\n00:17:59.780 --> 00:18:01.040\nLet's just continue.\n\n299\n00:18:01.040 --> 00:18:04.820\nThat means we're gonna skip the turn,\nright, the printout stats.\n\n300\n00:18:06.160 --> 00:18:09.560\nAnd then here,\nthat way the enemy will not attack me.\n\n301\n00:18:09.560 --> 00:18:16.900\nBut also I'm gonna pull this out and\nmake this check outside of the loop.\n\n302\n00:18:18.070 --> 00:18:23.567\nSo I'm actually going to pull or excuse\nme, outside of all of those if statements,\n\n303\n00:18:23.567 --> 00:18:28.289\nbecause there's two places that I\ncould get attacked and end up dying.\n\n304\n00:18:28.289 --> 00:18:33.980\nI could get attacked here or\nhere and I could no longer be alive.\n\n305\n00:18:33.980 --> 00:18:37.420\nSo I have to pull that out\nof this attack feature.\n\n306\n00:18:37.420 --> 00:18:41.570\nBecause well, there's two places.\n\n307\n00:18:41.570 --> 00:18:45.480\nSo I got to check two places and it's\nbetter just to check at the very end and\n\n308\n00:18:45.480 --> 00:18:47.410\nthat covers both cases.\n\n309\n00:18:47.410 --> 00:18:53.050\nSo I fixed that,\nnow let's see if I can fix this.\n\n310\n00:18:53.050 --> 00:18:56.920\nIf not, next enemy is alive,\nif enemy is not alive, then remove it.\n\n311\n00:18:56.920 --> 00:18:59.170\nExcept I'm removing it from the list.\n\n312\n00:18:59.170 --> 00:19:02.520\nThe next enemy as it stands, well, it's\n\n313\n00:19:04.560 --> 00:19:10.750\nstill gonna attack me,\nso how can I do this?\n\n314\n00:19:10.750 --> 00:19:16.658\nI have an idea,\nlet's instead of saying continue,\n\n315\n00:19:16.658 --> 00:19:21.238\nI say next_enemy equals none, right?\n\n316\n00:19:21.238 --> 00:19:25.690\nAnd then I've removed it from the board,\nso the actual next enemy variable is none.\n\n317\n00:19:25.690 --> 00:19:32.160\nSo if the next enemy,\nthen the enemy attacks me.\n\n318\n00:19:33.500 --> 00:19:34.920\nOtherwise, it will not attack me.\n\n319\n00:19:34.920 --> 00:19:37.460\nSo I've fixed that,\nit can continue through the loop and\n\n320\n00:19:37.460 --> 00:19:41.280\nI don't have to figure out how to\nget this nonlinear control flow.\n\n321\n00:19:41.280 --> 00:19:46.770\nSo I attack the enemy, if the enemy is not\nalive I remove it and I set an variable\n\n322\n00:19:46.770 --> 00:19:51.610\nnext enemy to none because then that\nallows me to see if the enemy died or not.\n\n323\n00:19:54.230 --> 00:19:57.800\nIf the next enemy is still there,\n\n324\n00:19:57.800 --> 00:20:01.970\nthe next enemy.attack.self player.\n\n325\n00:20:01.970 --> 00:20:02.760\nThis should work.\n\n326\n00:20:02.760 --> 00:20:04.720\nLet's play one more time.\n\n327\n00:20:04.720 --> 00:20:07.810\nJust a final field here.\n\n328\n00:20:07.810 --> 00:20:12.240\nSo I can attack, okay, and I can pass.\n\n329\n00:20:13.340 --> 00:20:14.810\nI got attacked there.\n\n330\n00:20:14.810 --> 00:20:16.430\nI can run.\n\n331\n00:20:16.430 --> 00:20:17.460\nI can pass.\n\n332\n00:20:17.460 --> 00:20:22.240\nI can attack, I can pass and\npass and attack and\n\n333\n00:20:22.240 --> 00:20:25.250\npass and\neverything seems to be working well.\n\n334\n00:20:26.390 --> 00:20:29.554\nLet's get down and actually get\none of the enemies out of here,\n\n335\n00:20:29.554 --> 00:20:31.896\nlooks like I'm gonna\nhave to run a little bit.\n\n336\n00:20:34.247 --> 00:20:35.182\nI'm cheesing it up again.\n\n337\n00:20:39.750 --> 00:20:44.233\nSo Hercules has an attack\npower of nine and\n\n338\n00:20:44.233 --> 00:20:49.110\nnotice that I actually beat Alice,\nthe Imp.\n\n339\n00:20:50.570 --> 00:20:55.010\nSo I attack, get rid of her,\nand my hp stays the same.\n\n340\n00:20:55.010 --> 00:20:57.030\nSo that's good, we're all good to go.\n\n341\n00:20:58.190 --> 00:21:02.957\nThere is another way to do this, however I\nthink that's a good place to leave off for\n\n342\n00:21:02.957 --> 00:21:04.741\nthings that maybe you can try.\n\n343\n00:21:04.741 --> 00:21:06.820\nWhat are some thing that you could do?\n\n344\n00:21:06.820 --> 00:21:08.780\nYou could add a inventory system.\n\n345\n00:21:08.780 --> 00:21:13.950\nYou could figure out a better way to\ntest if the enemy is still alive or not.\n\n346\n00:21:13.950 --> 00:21:15.220\nThere's a hint.\n\n347\n00:21:15.220 --> 00:21:16.310\nWhat else could you do?\n\n348\n00:21:16.310 --> 00:21:19.010\nWell, you could add more enemies.\n\n349\n00:21:19.010 --> 00:21:21.980\nSo there's a whole thing,\nthis is just a jumping off point,\n\n350\n00:21:21.980 --> 00:21:24.960\nit is not a full featured\ngame at this point.\n\n351\n00:21:24.960 --> 00:21:26.720\nSo definitely try some loads out and\n\n352\n00:21:26.720 --> 00:21:29.602\nrun, I think this gets us to\na really good staffing point.\n\n353\n00:21:29.602 --> 00:21:32.170\n&gt;&gt; Well, that sounds great, Justin.\n\n354\n00:21:32.170 --> 00:21:33.724\nI feel we've learned a lot here and\n\n355\n00:21:33.724 --> 00:21:36.469\nwe got a good solid foundation\nin object-oriented Python.\n\n356\n00:21:36.469 --> 00:21:41.220\nAnd that game really demonstrated\nwhat we can do in this language.\n\n357\n00:21:41.220 --> 00:21:42.430\nSo thank you for that.\n\n358\n00:21:42.430 --> 00:21:45.028\nBut for now, signing off for\nITProTV, I'm Vonne Smith.\n\n359\n00:21:45.028 --> 00:21:46.620\n&gt;&gt; And I'm Justin Dennison.\n\n360\n00:21:46.620 --> 00:21:47.183\n&gt;&gt; See you next time.\n\n361\n00:21:47.183 --> 00:21:54.938\n[MUSIC]\n\n362\n00:21:54.938 --> 00:21:57.570\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "208843848"
        }
      ],
      "title": "Object Oriented Python"
    }
  ],
  "url": "object-oriented-python",
  "vLab": false
}
