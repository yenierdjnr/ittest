{
  "description": "Built on the .NET Framework, Windows PowerShell is a task-based command-line shell and scripting language. In this series, you will learn how to get started using PowerShell, mastering the basic skills, in preparation for more advanced topics.",
  "descriptionMD": "Built on the .NET Framework, Windows PowerShell is a task-based command-line shell and scripting language. In this series, you will learn how to get started using PowerShell, mastering the basic skills, in preparation for more advanced topics.",
  "length": "28200",
  "name": "PowerShell Basics",
  "practiceExam": false,
  "subtitle": "for Administrators",
  "tagUrl": "microsoft",
  "topics": [
    {
      "episodes": [
        {
          "description": "In this episode, Mike and Cherokee introduce PowerShell. They look at the various consoles for working with PowerShell.",
          "length": "1702",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-1-1-getting_started-100917-PGM.00_28_09_10.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-1-1-getting_started-100917-PGM.00_28_09_10.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-1-1-getting_started-100917-PGM.00_28_09_10.Still002-sm.jpg",
          "title": "Getting Started",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:02.623\nWelcome to ITProTV,\nI'm your host, Don Pezet.\n\n2\n00:00:02.623 --> 00:00:06.416\n[CROSSTALK]\n\n3\n00:00:06.416 --> 00:00:08.319\n[MUSIC]\n\n4\n00:00:08.319 --> 00:00:11.988\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:11.988 --> 00:00:13.870\n&gt;&gt; Welcome to your PowerShell series.\n\n6\n00:00:13.870 --> 00:00:15.810\nI'm your show host, Cherokee Boose.\n\n7\n00:00:15.810 --> 00:00:19.140\nIn this episode, we'll be taking a look\nat getting started with PowerShell.\n\n8\n00:00:19.140 --> 00:00:22.290\nAnd of course, we have Mr.\nMike Rodrick with us today in studios.\n\n9\n00:00:22.290 --> 00:00:23.406\nHow is going today, Mike?\n\n10\n00:00:23.406 --> 00:00:24.966\n&gt;&gt; It's going great, Cherokee,\nand thanks for having me.\n\n11\n00:00:24.966 --> 00:00:29.480\nAnd yet you are right, we are gonna\nbe talking about good old PowerShell.\n\n12\n00:00:29.480 --> 00:00:32.740\nFun stuff, hope everybody is excited.\n\n13\n00:00:32.740 --> 00:00:36.081\nWhen we get started with PowerShell,\nI guess the first thing we need to do,\n\n14\n00:00:36.081 --> 00:00:39.120\nlike with any technology,\nis kinda understand where we came from.\n\n15\n00:00:39.120 --> 00:00:42.200\nI think it always helps us\nto know where we've been, so\n\n16\n00:00:42.200 --> 00:00:43.798\nwe kinda see where we're going.\n\n17\n00:00:43.798 --> 00:00:47.740\nAnd PowerShell is one of those things,\nit's been around for a long time.\n\n18\n00:00:47.740 --> 00:00:49.940\nAnd I think over the years more and\n\n19\n00:00:49.940 --> 00:00:53.660\nmore people have gotten kind of\naccustomed to it and started using it.\n\n20\n00:00:53.660 --> 00:00:54.680\nSo I'm just gonna take a minute and\n\n21\n00:00:54.680 --> 00:00:59.090\ntalk about the history of PowerShell\nbefore we dive in and start using it.\n\n22\n00:00:59.090 --> 00:01:00.490\n&gt;&gt; So a history lesson?\n\n23\n00:01:00.490 --> 00:01:01.310\n&gt;&gt; Yeah, exactly.\n\n24\n00:01:01.310 --> 00:01:02.669\n&gt;&gt; Right.\n&gt;&gt; I gotta do that, right?\n\n25\n00:01:02.669 --> 00:01:04.730\n&gt;&gt; [LAUGH]\n&gt;&gt; All right, so let's take a look.\n\n26\n00:01:04.730 --> 00:01:07.390\nI've got a little document\nup here on my screen,\n\n27\n00:01:07.390 --> 00:01:11.780\ncuz a lot of us don't realize PowerShell\nhas been around for a little while.\n\n28\n00:01:11.780 --> 00:01:16.020\nYou can see here that PowerShell\nhas introduced back in 2006, so\n\n29\n00:01:16.020 --> 00:01:17.770\nover a decade ago.\n\n30\n00:01:17.770 --> 00:01:21.437\nAt the time of this shooting,\nwe've had PowerShell v1.0.\n\n31\n00:01:21.437 --> 00:01:23.520\nAnd at the time it was an add-on.\n\n32\n00:01:23.520 --> 00:01:26.780\nIt wasn't something that came\nas part of the operating system.\n\n33\n00:01:26.780 --> 00:01:28.440\nIt was something we would download.\n\n34\n00:01:28.440 --> 00:01:32.910\nMicrosoft's first foray, if you will,\ninto the world of PowerShell.\n\n35\n00:01:32.910 --> 00:01:36.700\nBefore that, we had our command-line\ninterpreter, the good old black and\n\n36\n00:01:36.700 --> 00:01:39.313\nwhite command prompt,\nthat a lot of us were used to using.\n\n37\n00:01:39.313 --> 00:01:43.660\nAnd PowerShell was new and\nthe idea was this was a new\n\n38\n00:01:43.660 --> 00:01:49.080\nmanagement interface that Microsoft wanted\nto push out, give us the ability to\n\n39\n00:01:49.080 --> 00:01:53.330\nmanage from a command line like interface.\n\n40\n00:01:53.330 --> 00:01:57.240\nAnd the ability to script things\nwhich meant we could start\n\n41\n00:01:57.240 --> 00:01:58.700\nautomating things, right?\n\n42\n00:01:58.700 --> 00:02:01.206\nAnd you might be saying, well,\nwe can do that in the command prompt.\n\n43\n00:02:01.206 --> 00:02:06.190\nOr we could, but the command prompt\nwas a command line interpreter.\n\n44\n00:02:06.190 --> 00:02:11.530\nAnd it used lots of different commands\nthat were in from different places like\n\n45\n00:02:11.530 --> 00:02:16.208\nnetsh had its own set of commands that\nwe could use in that command-line\n\n46\n00:02:16.208 --> 00:02:20.300\ninterpreter, firewall settings,\nor IP address settings.\n\n47\n00:02:20.300 --> 00:02:23.030\nWe had different sets of\ncommands that we can use but\n\n48\n00:02:23.030 --> 00:02:25.180\nthey were really from all over the place.\n\n49\n00:02:25.180 --> 00:02:28.686\n&gt;&gt; And Mike, it seems like a lot of\ndifferent administrators maybe coming from\n\n50\n00:02:28.686 --> 00:02:31.917\nmaybe like a mixed-base background,\nthey were kind of used to that,\n\n51\n00:02:31.917 --> 00:02:33.804\nhaving that command-line interface.\n\n52\n00:02:33.804 --> 00:02:38.770\nAnd with Microsoft, you didn't really\nget as much a functionality out of that.\n\n53\n00:02:38.770 --> 00:02:42.960\nSo really, they were hearing that request,\nthat need, and\n\n54\n00:02:42.960 --> 00:02:47.744\nthen kind of conformed and\nthen had the little baby PowerShell.\n\n55\n00:02:47.744 --> 00:02:48.993\n&gt;&gt; [LAUGH] Little baby PowerShell,\nI like it.\n\n56\n00:02:48.993 --> 00:02:50.844\n&gt;&gt; [LAUGH]\n&gt;&gt; It was hatched or born or\n\n57\n00:02:50.844 --> 00:02:51.620\nwhat have you.\n\n58\n00:02:51.620 --> 00:02:56.050\nIt came out, and at first,\nit was kinda had mixed reviews, right?\n\n59\n00:02:56.050 --> 00:02:58.920\nPeople were a little unsure about it.\n\n60\n00:02:58.920 --> 00:03:01.370\nThose people that were used\nto their command-line like,\n\n61\n00:03:01.370 --> 00:03:02.680\nwhy do I need PowerShell?\n\n62\n00:03:02.680 --> 00:03:04.549\nI've already got my\ncommand-line interface.\n\n63\n00:03:05.780 --> 00:03:08.540\nSo it was something new,\nsomething different.\n\n64\n00:03:08.540 --> 00:03:14.050\nBut it really did, it began this, I'm\ntrying to think of a good way to say it.\n\n65\n00:03:14.050 --> 00:03:18.990\nMicrosoft really started putting a lot\nof energy into developing PowerShell.\n\n66\n00:03:18.990 --> 00:03:22.380\nAnd it got to the point where at Microsoft\nthey were developing commands for\n\n67\n00:03:22.380 --> 00:03:24.830\nPowerShell before they were\ndeveloping commands or\n\n68\n00:03:24.830 --> 00:03:27.590\nthat same capability in the interface.\n\n69\n00:03:27.590 --> 00:03:31.158\nIf you remember, there were some versions\nof PowerShell, like managing exchange.\n\n70\n00:03:31.158 --> 00:03:34.854\nThere were things I could do in PowerShell\nthat I could not do in the GUI, so\n\n71\n00:03:34.854 --> 00:03:37.325\nwe saw this-\n&gt;&gt; I can see that now.\n\n72\n00:03:37.325 --> 00:03:40.470\n&gt;&gt; Yeah, exactly,\nwe saw that shift in Microsoft where, hey,\n\n73\n00:03:40.470 --> 00:03:44.800\nwe are gonna really focus\non developing a good\n\n74\n00:03:44.800 --> 00:03:48.750\nscriptable interface that we\ncan use to manage machines.\n\n75\n00:03:48.750 --> 00:03:53.921\nAll right, so again, back to my document\nhere, 2006 we had PowerShell v1.0.\n\n76\n00:03:53.921 --> 00:03:59.510\nIt was available for download for\nXP, Windows Vista, and Server 2003.\n\n77\n00:03:59.510 --> 00:04:04.480\nAnd then in 2009, we got PowerShell v2.0.\n\n78\n00:04:04.480 --> 00:04:06.757\nSo big improvement here.\n\n79\n00:04:06.757 --> 00:04:09.508\nIt was pre-installed in\nour operating system.\n\n80\n00:04:09.508 --> 00:04:14.613\nWhen you loaded up Windows 7 or Server\n2008 it was part of the installation.\n\n81\n00:04:14.613 --> 00:04:16.140\nThere wasn't anything extra to download.\n\n82\n00:04:16.140 --> 00:04:19.665\nAnd this really shows you,\nas Microsoft was shifting gears, and\n\n83\n00:04:19.665 --> 00:04:24.615\nI won't say forcing PowerShell on us but-\n&gt;&gt; Integrating it into\n\n84\n00:04:24.615 --> 00:04:27.115\ntheir off-the-shelf solution.\n\n85\n00:04:27.115 --> 00:04:29.035\n&gt;&gt; Yes, and\nall of a sudden people were thinking wow,\n\n86\n00:04:29.035 --> 00:04:34.700\nthis wasn't just a fly-by-night idea or\nlet's see if this works.\n\n87\n00:04:34.700 --> 00:04:36.680\nThis is now part of the operating system.\n\n88\n00:04:36.680 --> 00:04:39.760\nIt's going to be here for\na while, so we can start using it.\n\n89\n00:04:39.760 --> 00:04:41.210\nWe can start developing with it and\n\n90\n00:04:41.210 --> 00:04:44.688\nnot afraid that it's gonna disappear\nin the next version of Windows.\n\n91\n00:04:44.688 --> 00:04:49.419\nSo again, pre-installed in 2008 Server and\nWindows 7,\n\n92\n00:04:49.419 --> 00:04:53.269\nyou can still download for\nXP, Vista, 2003.\n\n93\n00:04:53.269 --> 00:04:56.795\nIf you wanted to update to PowerShell 2.0,\nyou just had to download it and\n\n94\n00:04:56.795 --> 00:04:57.910\ninstall it.\n\n95\n00:04:57.910 --> 00:05:00.960\nAnd the big thing it brought for\nus was the remoting,\n\n96\n00:05:00.960 --> 00:05:04.980\nthe ability to remotely\ncontrol other machines.\n\n97\n00:05:04.980 --> 00:05:07.330\nAnd this is a very, very powerful feature.\n\n98\n00:05:07.330 --> 00:05:10.148\nWe're gonna look at depth\nat the PS sessions and\n\n99\n00:05:10.148 --> 00:05:12.970\nhow we can manage machines\nremotely as we go on.\n\n100\n00:05:12.970 --> 00:05:14.900\nRemoting was introduced in PowerShell 2.0,\n\n101\n00:05:14.900 --> 00:05:18.918\nas well as something known\nas the PowerShell ISE.\n\n102\n00:05:18.918 --> 00:05:24.302\nBefore version 2.0, with just PowerShell\n1.0, all we had was what looked like\n\n103\n00:05:24.302 --> 00:05:29.443\na command-line interpreter, the PowerShell\n&gt;&gt; Window?\n\n104\n00:05:29.443 --> 00:05:30.275\n&gt;&gt; Host or window if you will.\n\n105\n00:05:30.275 --> 00:05:32.048\n&gt;&gt; [LAUGH]\n&gt;&gt; [COUGH] Yeah, and\n\n106\n00:05:32.048 --> 00:05:34.360\nthat's really all we had.\n\n107\n00:05:34.360 --> 00:05:38.350\nWith the PowerShell 2.0, they brought\nus something known as the ISE,\n\n108\n00:05:38.350 --> 00:05:40.720\nthe integrated scripting environment.\n\n109\n00:05:40.720 --> 00:05:45.610\nAnd this was really nice, cuz now all of\na sudden I've got a PowerShell interface,\n\n110\n00:05:45.610 --> 00:05:50.660\nbut I also have the ability to write\nscripts right in that same interface.\n\n111\n00:05:50.660 --> 00:05:53.980\nTake advantage of the search\ncapabilities for commands.\n\n112\n00:05:53.980 --> 00:05:55.990\nWe'll take a look at the ISE, but\n\n113\n00:05:55.990 --> 00:05:58.820\nit's a great place to get\nstarted with Windows PowerShell.\n\n114\n00:05:58.820 --> 00:06:00.590\nI love the ISE.\n\n115\n00:06:00.590 --> 00:06:04.093\nI spent a lot of time there, but\nif you're going to write scripts,\n\n116\n00:06:04.093 --> 00:06:06.170\nthis is where you'll spend some time.\n\n117\n00:06:06.170 --> 00:06:08.170\nSo we'll take a look at the ISE as well.\n\n118\n00:06:09.610 --> 00:06:13.664\nThen in 2012, we got PowerShell 3.0.\n\n119\n00:06:13.664 --> 00:06:16.945\n3.0 came out with 2012 Windows 8.\n\n120\n00:06:16.945 --> 00:06:18.730\nIt was pre-installed.\n\n121\n00:06:18.730 --> 00:06:22.100\nAnd again, we could download that for\nour older operating system.\n\n122\n00:06:22.100 --> 00:06:26.460\nSo if we wanted to get up to\nPowerShell 3.0 on Windows 7, 2008,\n\n123\n00:06:26.460 --> 00:06:28.570\nwe could download those.\n\n124\n00:06:28.570 --> 00:06:31.847\nAnd you notice I don't have Windows XP,\nWindows Vista or\n\n125\n00:06:31.847 --> 00:06:36.778\nServer 2003 on there because at this point\nwe didn't have that support anymore.\n\n126\n00:06:36.778 --> 00:06:39.800\nSo it was only available for 7 in 2008.\n\n127\n00:06:39.800 --> 00:06:45.225\nBut 3.0 brought us online updates for\nhelp, and this was big.\n\n128\n00:06:45.225 --> 00:06:49.475\nThey were constantly adding new commands,\nnew modules,\n\n129\n00:06:49.475 --> 00:06:53.760\nimproving or\nexpanding the capabilities of PowerShell.\n\n130\n00:06:53.760 --> 00:06:58.090\nAnd trying to get information on\nthose commands, that could be tricky.\n\n131\n00:06:58.090 --> 00:07:01.645\nSo having an online help system,\nor at least the ability to update\n\n132\n00:07:01.645 --> 00:07:05.150\nmy help online, meant we could\nkeep that help current, right?\n\n133\n00:07:05.150 --> 00:07:07.787\nIt wasn't like I was still\nusing the help file for\n\n134\n00:07:07.787 --> 00:07:10.051\nwhen my operating system got installed.\n\n135\n00:07:10.051 --> 00:07:13.590\nI was able to go get new help files,\nand update those help files.\n\n136\n00:07:13.590 --> 00:07:15.100\nSo very, very big.\n\n137\n00:07:15.100 --> 00:07:16.083\nAnd I tell you,\n\n138\n00:07:16.083 --> 00:07:20.699\nMicrosoft really took a lesson from\nsome our other operating systems and\n\n139\n00:07:20.699 --> 00:07:25.480\nmanual pages and they got help right\nwhen it comes to PowerShell, I think.\n\n140\n00:07:25.480 --> 00:07:26.680\nAnd a lot of great information.\n\n141\n00:07:26.680 --> 00:07:30.820\nWe'll take a detailed look at all of\nthe help that we can get within PowerShell\n\n142\n00:07:30.820 --> 00:07:36.440\nbecause honestly, it's great because\nit shows you what the command is,\n\n143\n00:07:36.440 --> 00:07:40.556\nwhat the options are, what the parameters\nare, examples, detailed help.\n\n144\n00:07:40.556 --> 00:07:43.290\nWe'll take a look at that as well.\n\n145\n00:07:43.290 --> 00:07:48.440\nAnd one of my favorites,\nIntelliSense for PowerShell ISE, right?\n\n146\n00:07:48.440 --> 00:07:51.597\nAgain, ISE was that scripting environment,\nor\n\n147\n00:07:51.597 --> 00:07:56.757\nthe Integrated Scripting Environment and\nIntelliSense is the ability to start\n\n148\n00:07:56.757 --> 00:08:02.162\ntyping a command, and as you type it shows\nyou a list Of possible commands, right?\n\n149\n00:08:02.162 --> 00:08:05.403\nSo as I'm typing it out,\nit's looking at what I'm typing, and\n\n150\n00:08:05.403 --> 00:08:09.261\nit's showing me all the things that\nstart with whatever I've typed so far.\n\n151\n00:08:09.261 --> 00:08:13.662\nAnd as you type additional characters,\nthe list gets filtered down to fewer and\n\n152\n00:08:13.662 --> 00:08:14.587\nfewer choices.\n\n153\n00:08:14.587 --> 00:08:19.430\nAnd so if you're not exactly sure what\na command is, or exactly how it's spelled,\n\n154\n00:08:19.430 --> 00:08:22.971\nas you type the few letters there\nyou'll get a list of those.\n\n155\n00:08:22.971 --> 00:08:27.742\nSo I really like that feature and it's not\njust the command, it's the parameters and\n\n156\n00:08:27.742 --> 00:08:31.186\neven the values for\nsome of those parameters as well, which,\n\n157\n00:08:31.186 --> 00:08:33.327\nagain I'll show you as we go through.\n\n158\n00:08:33.327 --> 00:08:38.200\nSo, we got the IntelliSense for\nISE in version 3.0.\n\n159\n00:08:38.200 --> 00:08:42.447\n&gt;&gt; Which is great if you can't remember\nevery single cmdlt and parameter there,\n\n160\n00:08:42.447 --> 00:08:44.933\nwhich I definitely can't, so [LAUGH]\n&gt;&gt; Yeah, and\n\n161\n00:08:44.933 --> 00:08:47.905\nI don't know too many people that can,\nand there's thousands and\n\n162\n00:08:47.905 --> 00:08:51.849\nthousands of commands So it's fantastic,\nespecially when you're getting started.\n\n163\n00:08:51.849 --> 00:08:55.211\nLike eventually, you'll have\ncertain commands that you know and\n\n164\n00:08:55.211 --> 00:08:56.118\nuse all the time.\n\n165\n00:08:56.118 --> 00:08:59.811\nBut when you're looking for a particular\ncommand, or you're not sure what\n\n166\n00:08:59.811 --> 00:09:04.100\nparameters are available for that command,\nthe IntelliSense really can help you out.\n\n167\n00:09:05.380 --> 00:09:11.062\nAnd then in 2013 or\n2013 we got PowerShell 4.0.\n\n168\n00:09:11.062 --> 00:09:14.724\nThis came pre-installed in Windows 8.1 and\nServer 2012 R2.\n\n169\n00:09:14.724 --> 00:09:19.354\nWe could download it all the way back\nto Windows 7 2008 which would include\n\n170\n00:09:19.354 --> 00:09:20.486\nServer 2012.\n\n171\n00:09:20.486 --> 00:09:25.005\nAnd with 3., sorry 4.0 we've\ngot enhanced script security,\n\n172\n00:09:25.005 --> 00:09:29.205\nbecause now all of a sudden,\nmore and more people are using it,\n\n173\n00:09:29.205 --> 00:09:32.316\nwe're using it script, to automate things.\n\n174\n00:09:32.316 --> 00:09:36.543\nAnd so the ability to control those\nscripts, make sure they're trusted,\n\n175\n00:09:36.543 --> 00:09:37.761\nwas added in 4.0.\n\n176\n00:09:37.761 --> 00:09:42.009\nAnd enhanced debugging, the ability to,\nagain, more and more people were starting\n\n177\n00:09:42.009 --> 00:09:45.760\nto use this to automate processes,\nso the ability to debug scripts.\n\n178\n00:09:45.760 --> 00:09:49.595\nSet break points, for example,\nand work through the code and\n\n179\n00:09:49.595 --> 00:09:52.102\ntry to figure out where the problem was,\n\n180\n00:09:52.102 --> 00:09:56.180\nwhich is a big help as we're\nwriting those more complex scripts.\n\n181\n00:09:56.180 --> 00:10:00.612\nAnd then in 2016 we got PowerShell 5.0.\n\n182\n00:10:00.612 --> 00:10:04.096\n5.0 pre-installed on Windows 10 and\nServer 2016.\n\n183\n00:10:04.096 --> 00:10:09.727\nWe could download that for 2012 R2\nall the way back to 2008 R2 SP1 and\n\n184\n00:10:09.727 --> 00:10:12.810\nall the way back to back to Windows 7 SP1.\n\n185\n00:10:12.810 --> 00:10:17.825\nThat's PowerShell 5.0 and\nsome of the new features that Windows,\n\n186\n00:10:17.825 --> 00:10:21.650\nsorry that PowerShell 5.0 brings us,\nsupport for\n\n187\n00:10:21.650 --> 00:10:25.830\nChocolatey's repository-based\npackage management.\n\n188\n00:10:25.830 --> 00:10:26.424\n&gt;&gt; Sounds delicious.\n\n189\n00:10:26.424 --> 00:10:28.359\n&gt;&gt; It does,\ndoesn't it make you hungry, right?\n\n190\n00:10:28.359 --> 00:10:31.328\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] But this is getting, for\n\n191\n00:10:31.328 --> 00:10:36.042\nthose coming from the Linux world, you'll\nunderstand package-based management,\n\n192\n00:10:36.042 --> 00:10:37.890\nthe ability to go out.\n\n193\n00:10:37.890 --> 00:10:42.379\nThey can store packages out there\nin that Chocolatey's repository.\n\n194\n00:10:42.379 --> 00:10:47.179\nPowershell now has the ability to go out,\nsearch, find, download and\n\n195\n00:10:47.179 --> 00:10:50.850\ninstall packages from\ntheir repository there.\n\n196\n00:10:50.850 --> 00:10:54.875\nAnd they've extended support for switch\nmanagement to layer two network switches.\n\n197\n00:10:54.875 --> 00:10:58.936\nSo again always increasing\nthe functionality of PowerShell.\n\n198\n00:10:58.936 --> 00:11:01.246\nSo it's a fantastic journey we've been on.\n\n199\n00:11:01.246 --> 00:11:05.288\nAll the way back from 2006\ntill now with version 5.\n\n200\n00:11:05.288 --> 00:11:09.635\nNow, also I forgot to tell you\nthey've got new cmdlts for PowerShell,\n\n201\n00:11:09.635 --> 00:11:12.610\ndesired state configuration or DSC.\n\n202\n00:11:12.610 --> 00:11:16.376\nWhich is something we'll spend a lot\nof time on because this is an area that\n\n203\n00:11:16.376 --> 00:11:20.147\nPowerShell really shines at it's\nsomething that a lot of administrators\n\n204\n00:11:20.147 --> 00:11:20.958\nare now using.\n\n205\n00:11:20.958 --> 00:11:25.204\n&gt;&gt; All right so you've just showed us\nover a decade's worth transition there so\n\n206\n00:11:25.204 --> 00:11:29.447\nthat gives us a little bit of confidence\nin hey, I'm not going to waste my time\n\n207\n00:11:29.447 --> 00:11:33.261\nlearning a technology or\nlanguage that may vanish intermittently.\n\n208\n00:11:33.261 --> 00:11:37.120\nBut it seems like it's not\nreally going anywhere.\n\n209\n00:11:37.120 --> 00:11:38.634\n&gt;&gt; Well, that's true and\n\n210\n00:11:38.634 --> 00:11:42.429\nnow that I'm telling you here\nis that it's not going away.\n\n211\n00:11:42.429 --> 00:11:46.429\n[LAUGH] No,\nI did kind of lead us down that road and\n\n212\n00:11:46.429 --> 00:11:51.443\nthe funny thing is,\nis we're on version 5.1 right now.\n\n213\n00:11:51.443 --> 00:11:54.790\nAt the time of this shooting,\nwe're on version 5.1.\n\n214\n00:11:54.790 --> 00:11:57.635\nSo I'm running Windows 10,\nAnniversary update, or\n\n215\n00:11:57.635 --> 00:11:59.883\nactually the creator's update, I think.\n\n216\n00:11:59.883 --> 00:12:04.090\nWindows 2016 with the latest build.\n\n217\n00:12:04.090 --> 00:12:08.198\nAnd when you install,\nyou will see you have version 5.1.\n\n218\n00:12:08.198 --> 00:12:12.770\nAnd 5.1,\nagain it's kind of a subset of 5.0, right?\n\n219\n00:12:12.770 --> 00:12:15.170\nIt brought in a couple of new things.\n\n220\n00:12:15.170 --> 00:12:19.240\nIt brought in the fact we have new,\nnow we have additions.\n\n221\n00:12:19.240 --> 00:12:21.285\nSo we have PowerShell desktop.\n\n222\n00:12:21.285 --> 00:12:25.491\nWe have also have something\nknown as PowerShell Core.\n\n223\n00:12:25.491 --> 00:12:29.131\nAnd we have, what's the other one,\nI guess it's just those two.\n\n224\n00:12:29.131 --> 00:12:30.604\nDesktop corner Linux,\n\n225\n00:12:30.604 --> 00:12:34.370\nsorry there's a Linux edition\nas well which is kind of cool.\n\n226\n00:12:34.370 --> 00:12:35.943\nThat means I can actually run PowerShell.\n\n227\n00:12:35.943 --> 00:12:40.584\nThere is an open source\nPowerShell Core for Linux.\n\n228\n00:12:40.584 --> 00:12:42.750\nNow it's a little confusing.\n\n229\n00:12:42.750 --> 00:12:46.049\nAs I said go through this, if you go out\nthere at the time of this shooting I'm\n\n230\n00:12:46.049 --> 00:12:49.832\ngiving you the information I have, it very\nwell could change tomorrow, or next week.\n\n231\n00:12:49.832 --> 00:12:54.790\nThis is all very much influx,\nyou know how Microsoft is.\n\n232\n00:12:54.790 --> 00:12:59.359\nBut at the time of this shooting,\n5.1 gave us those additions,\n\n233\n00:12:59.359 --> 00:13:02.876\nbut they're now coming\nout with PowerShell Core.\n\n234\n00:13:02.876 --> 00:13:09.547\nAnd it's PowerShell Core 6.0, but\nit's not Windows PowerShell 6.0.\n\n235\n00:13:09.547 --> 00:13:13.541\nSo we have Windows PowerShell 5.1 and\n\n236\n00:13:13.541 --> 00:13:18.710\nthen we have PowerShell Core 6.0,\nwhich again is\n\n237\n00:13:18.710 --> 00:13:23.481\na little bit confusing, but the idea is-\n&gt;&gt; We are just\n\n238\n00:13:23.481 --> 00:13:27.492\ngetting the shell there and then you can-\n&gt;&gt; It's a limited set\n\n239\n00:13:27.492 --> 00:13:31.474\nof functionality as far as\nwhat it's built off of.\n\n240\n00:13:31.474 --> 00:13:33.840\nIt's built off instead\nof the complete .NET,\n\n241\n00:13:33.840 --> 00:13:37.670\nit's built off of .NET Core which\ndoes have reduced functionality.\n\n242\n00:13:37.670 --> 00:13:41.603\nI believe it's also because they're trying\nto make a cross platform, an open source.\n\n243\n00:13:41.603 --> 00:13:44.426\nSo probably-\n&gt;&gt; You may see some changes there.\n\n244\n00:13:44.426 --> 00:13:45.112\n&gt;&gt; Yes.\n\n245\n00:13:45.112 --> 00:13:48.861\nAnd so this is just me trying to put\nsense to what you read from Microsoft and\n\n246\n00:13:48.861 --> 00:13:51.534\ntheir updates and their blogs and\nthings like that.\n\n247\n00:13:51.534 --> 00:13:56.332\nIt kinda looks like 5.1 might be\ntowards the end of Windows PowerShell.\n\n248\n00:13:56.332 --> 00:14:02.004\nAnd it's just gonna be, PowerShell Core\n6.0 might very well take over.\n\n249\n00:14:02.004 --> 00:14:06.519\nAnd that's just me, we could end\nup with Windows PowerShell 6.0 and\n\n250\n00:14:06.519 --> 00:14:08.185\nPowerShell Core 6.0.\n\n251\n00:14:08.185 --> 00:14:12.326\nI don't know how that's going to play\nout but we're gonna be focusing in on\n\n252\n00:14:12.326 --> 00:14:16.406\nWindows PowerShell 5.1 because\nthat's what we're gonna be using and\n\n253\n00:14:16.406 --> 00:14:18.988\nadministering our Windows\nsystems as of now.\n\n254\n00:14:18.988 --> 00:14:23.678\nJust wanted to make you guys aware and\nmake sure that could keep up to date.\n\n255\n00:14:23.678 --> 00:14:27.522\nYou might start seeing PowerShell Core and\nthat's open source and\n\n256\n00:14:27.522 --> 00:14:29.590\nit'll run on multiple platforms.\n\n257\n00:14:29.590 --> 00:14:32.390\nIt's supposed to be platform independent,\nit's the idea.\n\n258\n00:14:32.390 --> 00:14:36.696\nIt might not have all the functionality\nthat we get in Windows PowerShell 5.1 but\n\n259\n00:14:36.696 --> 00:14:38.370\nit will most likely be added in.\n\n260\n00:14:38.370 --> 00:14:41.320\nI will tell you I've\nread a couple blog posts.\n\n261\n00:14:41.320 --> 00:14:47.061\nSometimes I don't like saying these on our\nshows because they could change, right?\n\n262\n00:14:47.061 --> 00:14:49.833\nIt's a person at Microsoft\nthat's in development, but\n\n263\n00:14:49.833 --> 00:14:53.194\nthings could change tomorrow and\nit completely goes out the window.\n\n264\n00:14:53.194 --> 00:14:56.315\nBut, according to the I was reading,\n\n265\n00:14:56.315 --> 00:15:01.118\nthey´re slowing down the development\nof Windows PowerShell 5.1,\n\n266\n00:15:01.118 --> 00:15:05.213\nand focusing all of their\nenergy on PowerShell Core 6.0.\n\n267\n00:15:05.213 --> 00:15:07.152\nSo that is probably what we´re\ngonna see coming out next.\n\n268\n00:15:07.152 --> 00:15:08.906\n&gt;&gt; Okay.\n\n269\n00:15:08.906 --> 00:15:09.551\n&gt;&gt; We'll see.\n\n270\n00:15:09.551 --> 00:15:10.763\nAnd then again that's just me guessing.\n\n271\n00:15:10.763 --> 00:15:11.362\n&gt;&gt; [LAUGH]\n&gt;&gt; And\n\n272\n00:15:11.362 --> 00:15:13.552\nyou can point your finger\ninto six months from now.\n\n273\n00:15:13.552 --> 00:15:14.290\nMike, you were completely wrong.\n\n274\n00:15:14.290 --> 00:15:18.029\n&gt;&gt; But I can imagine that a lot of this\ninformation that we would be learning\n\n275\n00:15:18.029 --> 00:15:20.848\nin this show can go ahead and\nbe carried into that new.\n\n276\n00:15:20.848 --> 00:15:24.981\nBecause the syntax and the fundamentals\nbehind it are gonna be carried through.\n\n277\n00:15:24.981 --> 00:15:28.014\n&gt;&gt; Absolutely,\nit's still going to play a big part.\n\n278\n00:15:28.014 --> 00:15:30.710\nAnd as you said,\nthat the syntax is gonna be the same.\n\n279\n00:15:30.710 --> 00:15:34.236\nIt might not have all the commands\ninitially but they'll be added and so\n\n280\n00:15:34.236 --> 00:15:36.760\nwe won't have any issues there.\n\n281\n00:15:36.760 --> 00:15:38.764\nAll right, so I am going to,\n\n282\n00:15:38.764 --> 00:15:42.781\nI shall save that list in case\nanybody wants it out there.\n\n283\n00:15:42.781 --> 00:15:45.077\nSo we took a look at our history.\n\n284\n00:15:45.077 --> 00:15:48.620\nNow let's take a look\nat PowerShell itself.\n\n285\n00:15:48.620 --> 00:15:52.225\nAnd so what I want to do is we've just got\na little bit of time left here in this\n\n286\n00:15:52.225 --> 00:15:52.758\nepisode.\n\n287\n00:15:52.758 --> 00:15:54.654\nI want to talk about the different, or\n\n288\n00:15:54.654 --> 00:15:58.283\nshow you the different interfaces\nthat we have for Windows PowerShell.\n\n289\n00:15:58.283 --> 00:16:01.615\nAnd the first one I'll show you\nis just good old PowerShell.\n\n290\n00:16:01.615 --> 00:16:05.220\nI've Clicked on my icon\ndown here on my task bar.\n\n291\n00:16:05.220 --> 00:16:07.589\nIf that's not,\nI'd believe I pinned that there myself, so\n\n292\n00:16:07.589 --> 00:16:09.500\nit's probably not there by default.\n\n293\n00:16:09.500 --> 00:16:13.756\nYou can always go to your Windows menu and\ntype in PowerShell and\n\n294\n00:16:13.756 --> 00:16:16.985\nyou'll see a Windows PowerShell\ndesktop app.\n\n295\n00:16:16.985 --> 00:16:21.195\nAnd I just choose to pin that to\nmy task bar cuz I use it a lot.\n\n296\n00:16:21.195 --> 00:16:22.805\nAll right, and there we have it.\n\n297\n00:16:22.805 --> 00:16:24.905\nThis is our PowerShell interface.\n\n298\n00:16:24.905 --> 00:16:28.325\n&gt;&gt; And Mike something I learned from you\na long time ago, even if you are working\n\n299\n00:16:28.325 --> 00:16:33.307\nwith core and you don't have a PowerShell\nwindow open, you can actually launch that\n\n300\n00:16:33.307 --> 00:16:37.437\ndirectly from commands line,\nfrom your regular command prompt as well.\n\n301\n00:16:37.437 --> 00:16:38.587\n&gt;&gt; You can, let's go take a look at that.\n\n302\n00:16:38.587 --> 00:16:43.103\nI happen to have a core install sitting\nhere, which has locked itself, so\n\n303\n00:16:43.103 --> 00:16:44.743\nlet me log back in.\n\n304\n00:16:44.743 --> 00:16:47.443\nAnd I know that font is small,\nbut this is core, so\n\n305\n00:16:47.443 --> 00:16:49.503\nthere's not a whole lot\nthat I can do about it.\n\n306\n00:16:49.503 --> 00:16:51.803\nBut here as Cherokee was saying,\nwhen you log into core,\n\n307\n00:16:51.803 --> 00:16:53.733\nyou're sitting at a cmd.exe.\n\n308\n00:16:53.733 --> 00:16:57.593\nSo I'm at a normal command line\ninterpreter, CLI window, and\n\n309\n00:16:57.593 --> 00:17:02.920\nall I'm going to do is type in\nPowerShell and hit Enter and\n\n310\n00:17:02.920 --> 00:17:07.860\ngive it just a second, and\nwe'll see it start to fire up.\n\n311\n00:17:10.290 --> 00:17:11.160\nAnd there we go.\n\n312\n00:17:11.160 --> 00:17:16.410\nNow if you look at my prompt out here,\nyou'll see a little PS out in front of it.\n\n313\n00:17:16.410 --> 00:17:19.870\nThat's my indicator that I'm\nno longer at a command line.\n\n314\n00:17:19.870 --> 00:17:21.480\nI am at a PowerShell prop.\n\n315\n00:17:21.480 --> 00:17:26.050\nSo I can start typing in my\nPowerShell commands, all right?\n\n316\n00:17:26.050 --> 00:17:30.080\nSo it's definitely available on core.\n\n317\n00:17:30.080 --> 00:17:33.910\nWe could remote into it as well, but\nwe'll take a look at that in a little bit.\n\n318\n00:17:33.910 --> 00:17:35.414\n&gt;&gt; And\nthen we have the regular permissions,\n\n319\n00:17:35.414 --> 00:17:38.990\nand then also the administrative\naspect of it just like we\n\n320\n00:17:38.990 --> 00:17:40.650\nsee with our command prompt as well.\n\n321\n00:17:40.650 --> 00:17:41.430\n&gt;&gt; Exactly right.\n\n322\n00:17:41.430 --> 00:17:42.820\nLet me flip back over the client.\n\n323\n00:17:42.820 --> 00:17:46.830\nNow when I launched\nthis I just clicked it.\n\n324\n00:17:46.830 --> 00:17:51.250\nIf I wanted to give this administrative\nrights, I would right-click on that icon.\n\n325\n00:17:51.250 --> 00:17:52.900\nAnd I could do the same\nthing from the Start menu.\n\n326\n00:17:52.900 --> 00:17:56.660\nWe could do PowerShell and\nI could right-click it here and choose-\n\n327\n00:17:56.660 --> 00:17:57.920\n&gt;&gt; But pinning is really a good idea,\n\n328\n00:17:57.920 --> 00:18:00.930\nespecially for this show and\nwith practicing and working with it,\n\n329\n00:18:00.930 --> 00:18:02.865\nyou're gonna be in and out all the time.\n\n330\n00:18:02.865 --> 00:18:03.475\n&gt;&gt; Absolutely.\n\n331\n00:18:03.475 --> 00:18:04.135\n&gt;&gt; Smart.\n\n332\n00:18:04.135 --> 00:18:05.010\n&gt;&gt; I'm still.\n\n333\n00:18:05.010 --> 00:18:06.805\n&gt;&gt; [LAUGH]\n&gt;&gt; I know the new window.\n\n334\n00:18:06.805 --> 00:18:09.345\nAll I have to do is hit\nthe Windows key and start typing.\n\n335\n00:18:09.345 --> 00:18:10.965\nI love having my little icons down.\n\n336\n00:18:10.965 --> 00:18:11.485\n&gt;&gt; I'm with you, yeah.\n\n337\n00:18:11.485 --> 00:18:12.700\n&gt;&gt; I don't know why, but that's just me.\n\n338\n00:18:12.700 --> 00:18:14.685\n&gt;&gt; [LAUGH]\n&gt;&gt; But I can definitely right-click on it.\n\n339\n00:18:14.685 --> 00:18:16.205\nChoose Run as Administrator.\n\n340\n00:18:16.205 --> 00:18:19.345\nAnother handy little trick that's\nnot really PowerShell-specific, but\n\n341\n00:18:19.345 --> 00:18:23.515\nI'll show you while we're here,\nis the whole Ctrl+Shift+Enter.\n\n342\n00:18:23.515 --> 00:18:24.825\nAnything that you have highlighted.\n\n343\n00:18:24.825 --> 00:18:29.230\nSo as you start typing,\nI don't have Word on here, I have WordPad.\n\n344\n00:18:29.230 --> 00:18:33.130\nAs you start typing you'll see that\nit highlights something in your menu.\n\n345\n00:18:33.130 --> 00:18:36.800\nSo when I start typing PowerShell,\nit finds PowerShell.\n\n346\n00:18:36.800 --> 00:18:40.710\nIf I do Ctrl+Shift+Enter while that's\nhighlighted it's the same thing as right\n\n347\n00:18:40.710 --> 00:18:42.250\nclicking on it and choosing-\n&gt;&gt; Fancy.\n\n348\n00:18:42.250 --> 00:18:43.205\n&gt;&gt; Run as administrator.\n\n349\n00:18:43.205 --> 00:18:43.960\n&gt;&gt; [LAUGH]\n&gt;&gt; So for\n\n350\n00:18:43.960 --> 00:18:45.650\nthose of you who like to\nstay in your keyboard and\n\n351\n00:18:45.650 --> 00:18:47.840\navoid the mouse, there you go.\n\n352\n00:18:47.840 --> 00:18:52.810\nAnd so there is, Mike, you can see up at\nthe top, it says administrator, oops.\n\n353\n00:18:52.810 --> 00:18:56.880\nAnd my path is a little bit different\nfrom when I launched normal PowerShell.\n\n354\n00:18:56.880 --> 00:18:59.090\nBut we'll take a look at that as we go.\n\n355\n00:18:59.090 --> 00:19:03.720\nSo, we've seen the PowerShell interface,\nwe saw it on Core as well.\n\n356\n00:19:03.720 --> 00:19:06.270\nAgain, it's by default on 10, 2016 and\n\n357\n00:19:06.270 --> 00:19:11.150\nalso we'll take a look at the integrated\nscripting environment all right.\n\n358\n00:19:11.150 --> 00:19:12.832\nSo, let's take at look at PowerShell ICSM.\n\n359\n00:19:12.832 --> 00:19:16.620\nI'm just gonna go to my Startup Menu,\ntype in PowerShell and\n\n360\n00:19:16.620 --> 00:19:20.600\nthere I can see PowerShell ISE again,\nI figured to show you if I right click\n\n361\n00:19:20.600 --> 00:19:24.970\non it you can also launch ISE from here,\nor that integrated scripting environment.\n\n362\n00:19:24.970 --> 00:19:26.310\nSo I'll launch it up and let it load up.\n\n363\n00:19:26.310 --> 00:19:27.820\nAnd I haven't adjusted my fonts in here.\n\n364\n00:19:27.820 --> 00:19:31.230\nWe'll do that in a little bit,\nand do that from my options.\n\n365\n00:19:31.230 --> 00:19:33.450\nBut this is the integrated\nscripting environment.\n\n366\n00:19:33.450 --> 00:19:36.450\nAnd at first glance it doesn't look\na lot different from PowerShell.\n\n367\n00:19:36.450 --> 00:19:37.790\nI've got this blue background.\n\n368\n00:19:37.790 --> 00:19:40.870\nI got my little PowerShell\nprompt sitting here.\n\n369\n00:19:40.870 --> 00:19:44.150\nBut it's all the other stuff that we get.\n\n370\n00:19:44.150 --> 00:19:49.040\nFirst of all I got this commands pane\nrunning down the right-hand side.\n\n371\n00:19:49.040 --> 00:19:53.090\nAnd this gives me access to,\nyou guessed it, all of the commands.\n\n372\n00:19:53.090 --> 00:19:57.420\nAnd so if I'm trying to find the command,\nI can simply search through here.\n\n373\n00:19:57.420 --> 00:20:00.280\nI've got a dropdown list where I\ncan go to a particular module and\n\n374\n00:20:00.280 --> 00:20:03.600\nwe're gonna talk about modules and\nwhat that means in a little bit,\n\n375\n00:20:03.600 --> 00:20:06.600\nbut I've got this handy\nreference to all of my commands.\n\n376\n00:20:06.600 --> 00:20:09.800\nWe'll see how I can use that\nin an upcoming episode.\n\n377\n00:20:09.800 --> 00:20:13.810\nIf I don't like that I can always turn\nthat off with this button right up here,\n\n378\n00:20:13.810 --> 00:20:18.180\nallows me to bring that commands\nwindow back or hide it.\n\n379\n00:20:18.180 --> 00:20:23.090\nThe real power of the ISE, however, is\nthis button right here that says script.\n\n380\n00:20:23.090 --> 00:20:26.260\nRight click on this little down arrow.\n\n381\n00:20:26.260 --> 00:20:30.700\nYou see it splits my pane and\nI now have this area up at the top\n\n382\n00:20:30.700 --> 00:20:34.485\nthat's a little different from my\nPowerShell area down at the bottom.\n\n383\n00:20:34.485 --> 00:20:38.660\nNow I'm going to run a command and I know\nwe haven't really gone over commands and\n\n384\n00:20:38.660 --> 00:20:42.470\nwhat they are yet so\njust bear with me, just go, Cool and\n\n385\n00:20:42.470 --> 00:20:44.370\nI'll make sure we go back and explain it.\n\n386\n00:20:44.370 --> 00:20:49.030\nI'm just going to do a get-netipaddress.\n\n387\n00:20:49.030 --> 00:20:49.875\n&gt;&gt; Cool.\n&gt;&gt; All right.\n\n388\n00:20:49.875 --> 00:20:52.040\n&gt;&gt; [LAUGH]\n&gt;&gt; And, when I hit Enter,\n\n389\n00:20:52.040 --> 00:20:56.450\nwe can see the results show up\nin my pane right down here.\n\n390\n00:20:56.450 --> 00:20:59.805\nAnd if I do this from PowerShell,\nno difference,\n\n391\n00:20:59.805 --> 00:21:06.610\nget-netipaddress and\nI get this information back again.\n\n392\n00:21:06.610 --> 00:21:10.780\nWe'll come back and look at how we\nmanage and specific commands coming up.\n\n393\n00:21:10.780 --> 00:21:13.250\nRight now, just kinda get our\nfeet wet with PowerShell.\n\n394\n00:21:14.830 --> 00:21:18.160\nSo I can type the command here,\nas well as in normal PowerShell and\n\n395\n00:21:18.160 --> 00:21:18.950\nI get the same results.\n\n396\n00:21:18.950 --> 00:21:21.390\nSo what is this area up here?\n\n397\n00:21:21.390 --> 00:21:23.240\nWell this is my script pane.\n\n398\n00:21:23.240 --> 00:21:25.630\nWhen you type in something\nin PowerShell or\n\n399\n00:21:25.630 --> 00:21:30.750\nthe bottom pane of this PowerShell ISE,\nand you hit enter, that command executes.\n\n400\n00:21:30.750 --> 00:21:34.900\nYou saw me type in a command,\nhit enter, and it returned information.\n\n401\n00:21:34.900 --> 00:21:42.160\nIn the script pane up here,\nI do get-netipaddress and\n\n402\n00:21:42.160 --> 00:21:44.402\nI hit Enter, noting happens.\n\n403\n00:21:44.402 --> 00:21:45.500\nAll right?\n\n404\n00:21:45.500 --> 00:21:47.600\nThis is where I start writing scripts.\n\n405\n00:21:47.600 --> 00:21:50.350\nWhen we write scripts,\nscripts are collections\n\n406\n00:21:50.350 --> 00:21:55.350\nof commands that together are gonna\nperform some kind of function.\n\n407\n00:21:55.350 --> 00:21:58.150\nAnd so\nI can write my script up in the top and\n\n408\n00:21:58.150 --> 00:22:01.470\nnot have to worry about\nthe commands executing.\n\n409\n00:22:01.470 --> 00:22:02.930\nAnd could I do this in Notepad?\n\n410\n00:22:02.930 --> 00:22:07.010\nAbsolutely, I could write a script\nin Notepad if I know my commands.\n\n411\n00:22:07.010 --> 00:22:09.110\nBut that's the problem,\nI don't know the commands,\n\n412\n00:22:09.110 --> 00:22:12.010\nand all the required parameters and\noptional parameters.\n\n413\n00:22:12.010 --> 00:22:15.740\nBy doing it in here,\nI can take advantage of Intellisense, and\n\n414\n00:22:15.740 --> 00:22:18.640\nI can have it help me\ntype my commands out.\n\n415\n00:22:18.640 --> 00:22:21.340\nAnd show me the parameters\nthat are possible, and\n\n416\n00:22:21.340 --> 00:22:26.010\nthe possible values, without having\nto execute as soon as I type.\n\n417\n00:22:26.010 --> 00:22:29.190\nSo also a great way to store commands.\n\n418\n00:22:29.190 --> 00:22:31.470\nI'll show you guys that later.\n\n419\n00:22:31.470 --> 00:22:33.510\nYou'll see me use that\ntechnique in my show,\n\n420\n00:22:33.510 --> 00:22:36.670\nbecause I can have a script\nthat includes commands.\n\n421\n00:22:36.670 --> 00:22:41.130\nAnd I can execute one line at\na time within the PowerShell ISE.\n\n422\n00:22:41.130 --> 00:22:47.571\nFor example, let's do a get-netadapter,\n\n423\n00:22:47.571 --> 00:22:54.060\nget-command, no that's not a good\n\n424\n00:22:54.060 --> 00:22:58.680\none to show you just yet, get-alias,\nthat'll be a good one to show you.\n\n425\n00:22:58.680 --> 00:23:02.210\nSo there's three different commands,\nnone of which have executed.\n\n426\n00:23:02.210 --> 00:23:05.890\nNow if I click the play button up here, or\n\n427\n00:23:05.890 --> 00:23:09.180\nF5, all three of those\ncommands are going to execute.\n\n428\n00:23:09.180 --> 00:23:11.970\nYou see it going crazy down below?\n\n429\n00:23:11.970 --> 00:23:12.490\nAll right.\n\n430\n00:23:12.490 --> 00:23:15.390\n&gt;&gt; But what if I only wanted to see\nthe adapter, is that an option?\n\n431\n00:23:15.390 --> 00:23:16.450\n&gt;&gt; Yeah, exactly.\n\n432\n00:23:16.450 --> 00:23:18.980\nSo what I could do, is I could just\nhighlight, I don't even have to highlight,\n\n433\n00:23:18.980 --> 00:23:21.540\nI can just click on that line and\nhit F8 or\n\n434\n00:23:21.540 --> 00:23:25.660\nrun selected and\nit will do just that one command.\n\n435\n00:23:25.660 --> 00:23:28.250\nNotice down here in my\noutput it didn't scroll for\n\n436\n00:23:28.250 --> 00:23:31.330\na minute, it just did that one command.\n\n437\n00:23:31.330 --> 00:23:34.490\nSo you might have a file, and\nwe'll take about what this file is,\n\n438\n00:23:34.490 --> 00:23:37.240\nthe extension and\nthings like that as we go.\n\n439\n00:23:37.240 --> 00:23:41.708\nBut I might have a file that has big\nlong complex commands in there, and\n\n440\n00:23:41.708 --> 00:23:46.404\nI can simply open that file up,\nhighlight that command and then hit F8 and\n\n441\n00:23:46.404 --> 00:23:48.171\nrun just that one command.\n\n442\n00:23:48.171 --> 00:23:52.167\nSo the ISE, the integrated scripting\nenvironment, fantastic place to get\n\n443\n00:23:52.167 --> 00:23:55.798\nstarted because it's gonna help me\nwith what we call IntelliSense.\n\n444\n00:23:55.798 --> 00:23:58.880\nIt's gonna help me find my commands and\ntype my commands.\n\n445\n00:23:58.880 --> 00:24:02.157\nIt's also where we're going\nto begin automating things.\n\n446\n00:24:02.157 --> 00:24:05.200\nWhere we're gonna start writing scripts,\nthat don't execute.\n\n447\n00:24:05.200 --> 00:24:08.350\nThey execute later on and we'll take a\nlook at how we can write those scripts and\n\n448\n00:24:08.350 --> 00:24:11.000\nrun those scripts as we progress.\n\n449\n00:24:11.000 --> 00:24:12.500\nLast thing I want to show you.\n\n450\n00:24:12.500 --> 00:24:15.700\nOne more place we'll end\nup seeing PowerShell.\n\n451\n00:24:15.700 --> 00:24:19.400\nI'm actually going to flip on\nover to my domain controller and\n\n452\n00:24:19.400 --> 00:24:22.960\nopen up the Active Directory\nAdministrative Center.\n\n453\n00:24:22.960 --> 00:24:26.740\nThis was new back in 2008, I believe.\n\n454\n00:24:26.740 --> 00:24:28.035\nI don't know if you remember.\n\n455\n00:24:28.035 --> 00:24:29.600\n&gt;&gt; Back at the.\n&gt;&gt; I wanna say\n\n456\n00:24:29.600 --> 00:24:32.190\nthe Administrative Center was 2008.\n\n457\n00:24:32.190 --> 00:24:34.930\nBut this is when we really started\nseeing PowerShell take over in\n\n458\n00:24:34.930 --> 00:24:38.310\nthe background in a lot\nof our Windows products.\n\n459\n00:24:38.310 --> 00:24:40.900\nAnd the administrative center,\nyou know we had a tool.\n\n460\n00:24:40.900 --> 00:24:42.090\nI know.\nI don't know about you,\n\n461\n00:24:42.090 --> 00:24:44.770\nCherokee, I know as a system admin,\nlike why do I need this?\n\n462\n00:24:44.770 --> 00:24:47.610\n&gt;&gt; Active directors and users in computers\nare probably already familiar with it,\n\n463\n00:24:47.610 --> 00:24:49.860\nand you got to learn it and like it.\n\n464\n00:24:49.860 --> 00:24:50.660\n&gt;&gt; I loved it.\n&gt;&gt; [LAUGH]\n\n465\n00:24:50.660 --> 00:24:52.230\n&gt;&gt; And I still use it to this day.\n\n466\n00:24:52.230 --> 00:24:54.800\nI find myself rarely going to\nthe Administrative Center.\n\n467\n00:24:54.800 --> 00:24:58.350\nBut is is the new and improved\nActive Directory users and computers.\n\n468\n00:24:58.350 --> 00:25:00.720\nAnd the big difference,\neverything you did in users and\n\n469\n00:25:00.720 --> 00:25:04.420\ncomputers, we did in the Administrative\nCenter, you could do it in either one.\n\n470\n00:25:04.420 --> 00:25:08.310\nThe difference was that the Administrative\nCenter is actually firing Powershell\n\n471\n00:25:08.310 --> 00:25:14.740\ncommands in the background,\nrather than using old CLI-based commands.\n\n472\n00:25:14.740 --> 00:25:21.700\nFor example, if I go into lab here, and\nI'm going to find my users container.\n\n473\n00:25:21.700 --> 00:25:26.671\nAnd, I'm just gonna make a new user, so\n\n474\n00:25:26.671 --> 00:25:31.798\nI'll go new, user and let's do, oops.\n\n475\n00:25:31.798 --> 00:25:32.616\nDid I spell that right?\n\n476\n00:25:32.616 --> 00:25:34.539\n&gt;&gt; I don't know I can't see that far.\n\n477\n00:25:34.539 --> 00:25:35.679\n&gt;&gt; Definitely not two Os.\n\n478\n00:25:35.679 --> 00:25:39.750\n&gt;&gt; [LAUGH]\n&gt;&gt; Okay, that's better.\n\n479\n00:25:39.750 --> 00:25:42.203\n&gt;&gt; I'm just going to\nmake a user real quick.\n\n480\n00:25:42.203 --> 00:25:46.134\nI got his log on name,\nI'll put in his password here and\n\n481\n00:25:46.134 --> 00:25:51.194\nI think I've got all the requirements,\noop I need a SAM account name.\n\n482\n00:25:51.194 --> 00:25:53.480\nNate and I'm gonna click Okay.\n\n483\n00:25:53.480 --> 00:25:55.970\nAnd it should create that account.\n\n484\n00:25:55.970 --> 00:25:56.620\nRight?\n\n485\n00:25:56.620 --> 00:25:58.500\nSo, nothing new, nothing fancy there.\n\n486\n00:25:58.500 --> 00:26:00.010\nYou use the GUI Mike to do that.\n\n487\n00:26:00.010 --> 00:26:01.360\nI thought this was a Power Shell show.\n\n488\n00:26:01.360 --> 00:26:05.110\nBut down at the bottom of this active\ndirectory administrative center,\n\n489\n00:26:05.110 --> 00:26:08.070\nyou see this Windows PowerShell history?\n\n490\n00:26:08.070 --> 00:26:10.810\nThe little chevron over\nhere that I can click on.\n\n491\n00:26:10.810 --> 00:26:14.090\nAnd when I do that, I'm gonna slide this\nup so we can see it a little better.\n\n492\n00:26:14.090 --> 00:26:18.140\nHere I can see all the commands\nthat got executed.\n\n493\n00:26:18.140 --> 00:26:23.170\nNew Dash AD user, and\nthe attributes, and the values\n\n494\n00:26:23.170 --> 00:26:27.700\nthat they got set to,and then a separate\ncommand, set dash AD account password.\n\n495\n00:26:27.700 --> 00:26:31.360\nBecause in the GUI I created\nthe account and set the password and\n\n496\n00:26:31.360 --> 00:26:32.870\nit was enabled automatically, right?\n\n497\n00:26:32.870 --> 00:26:36.850\n&gt;&gt; So, here we can just see how that the\ncommands are broken down, see the syntax,\n\n498\n00:26:36.850 --> 00:26:40.270\nand like at least maybe\nsee that relationship is\n\n499\n00:26:40.270 --> 00:26:44.680\ncoming together here between a graphical\nuser interface and those commands there.\n\n500\n00:26:44.680 --> 00:26:45.490\n&gt;&gt; Exactly right.\n\n501\n00:26:45.490 --> 00:26:50.450\nSo, if you want to learn how to create\na new user in Powershell, go create\n\n502\n00:26:50.450 --> 00:26:53.260\none in the Administrative Center, and\nthen come in here and look at the command.\n\n503\n00:26:53.260 --> 00:26:57.880\nAnd I can copy this out,\nit gives us the ability to copy from here.\n\n504\n00:26:57.880 --> 00:27:00.880\nSo I can copy this command,\nI can take it over to the ISE,\n\n505\n00:27:00.880 --> 00:27:03.690\nI don't have the ISE\nfired up on this machine.\n\n506\n00:27:03.690 --> 00:27:05.600\nI'll fire it up real quick.\n\n507\n00:27:05.600 --> 00:27:06.560\nI can copy that out.\n\n508\n00:27:07.990 --> 00:27:10.688\nAnd I could come over here and\nstart pasting that in.\n\n509\n00:27:10.688 --> 00:27:12.517\nWhoops, where'd my script go?\n\n510\n00:27:12.517 --> 00:27:13.160\nThere it is.\n\n511\n00:27:13.160 --> 00:27:14.290\nI'm clicking too fast for it.\n\n512\n00:27:15.610 --> 00:27:18.120\nAnd there's my command, right?\n\n513\n00:27:18.120 --> 00:27:19.250\nAll ready to go.\n\n514\n00:27:19.250 --> 00:27:20.510\nSo now I can save that.\n\n515\n00:27:20.510 --> 00:27:22.020\nI can start adding parameters.\n\n516\n00:27:22.020 --> 00:27:25.810\nTake out the name Nate, for example and\nstart making that parameter base and\n\n517\n00:27:25.810 --> 00:27:28.710\nstart automating the creation\nof user accounts.\n\n518\n00:27:28.710 --> 00:27:31.480\nSo, I just wanted you to see that because\nI think some people don't realize\n\n519\n00:27:31.480 --> 00:27:32.080\nthat's there.\n\n520\n00:27:32.080 --> 00:27:33.480\nWe see PowerShell.\n\n521\n00:27:33.480 --> 00:27:38.460\nWe see a PowerShell ISE, but don't\nrealize that I can also see PowerShell\n\n522\n00:27:38.460 --> 00:27:40.490\nhere in the active directory\nof Administrative Center.\n\n523\n00:27:40.490 --> 00:27:41.170\nLike I said,\n\n524\n00:27:41.170 --> 00:27:45.340\nit's a great way to kind of get started\nwith administration with PowerShell.\n\n525\n00:27:45.340 --> 00:27:48.530\n&gt;&gt; Well, it sounds like there's a lot that\nwe have to learn here, especially if we\n\n526\n00:27:48.530 --> 00:27:52.430\nhaven't worked with PowerShell before, but\nwe really gonna be setting our self up for\n\n527\n00:27:52.430 --> 00:27:56.330\nsuccess by getting familiar with it and\nworking smarter and\n\n528\n00:27:56.330 --> 00:27:59.790\nnot harder being a little more efficient\nby taking advantage this tool.\n\n529\n00:27:59.790 --> 00:28:03.480\nSo I'm excited about that's, thank you for\njoining us today Mike and thank you for\n\n530\n00:28:03.480 --> 00:28:06.341\njoining us as well, but for\nthis show will go ahead and sign out.\n\n531\n00:28:06.341 --> 00:28:07.781\nI've been your host Cherokee Boose.\n\n532\n00:28:07.781 --> 00:28:08.825\n&gt;&gt; And I'm Mike Rodrick.\n\n533\n00:28:08.825 --> 00:28:12.006\n&gt;&gt; See you next time on ITProTV.\n\n534\n00:28:12.006 --> 00:28:18.011\n[MUSIC]\n\n535\n00:28:18.011 --> 00:28:19.910\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "url": "2017",
          "vimeoId": "237912534"
        },
        {
          "description": "In this episode, Mike and Cherokee explain the basic syntax of PowerShell. They look at listing installed and available modules, and how to import new modules. They also show how to search for cmdlets.",
          "length": "1828",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-1-basic_syntax_and_help-100917-PGM.00_30_14_00.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-1-basic_syntax_and_help-100917-PGM.00_30_14_00.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-1-basic_syntax_and_help-100917-PGM.00_30_14_00.Still002-sm.jpg",
          "title": "Basic Syntax and Help",
          "transcript": "",
          "url": "2017-basic-syntaxhelp",
          "vimeoId": "238051481"
        },
        {
          "description": "In this episode, Mike and Cherokee demonstrate how to get cmdlet help in PowerShell. They also discuss how to interpret cmdlet syntax found in the help files.",
          "length": "2427",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-2-basic_syntax_and_help_pt_2-100917.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-2-basic_syntax_and_help_pt_2-100917-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-2-basic_syntax_and_help_pt_2-100917-sm.jpg",
          "title": "Basic Syntax and Help Part 2",
          "transcript": "",
          "url": "2017-basic-syntaxhelp2",
          "vimeoId": "237911723"
        },
        {
          "description": "In this episode, Mike and Cherokee demonstrate using cmdlet history in PowerShell. They also work with aliases, showing how to use them and create your own.",
          "length": "1707",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002-sm.jpg",
          "title": "Command History and Aliases",
          "transcript": "",
          "url": "2017-command-historyaliases",
          "vimeoId": "237943902"
        },
        {
          "description": "In this episode, Mike and Cherokee continue to analyze and demonstrate cmdlet history in PowerShell.",
          "length": "1519",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002-sm.jpg",
          "title": "Command History and Aliases Part 2",
          "transcript": "",
          "url": "2017-command-historyaliases2",
          "vimeoId": "237943481"
        },
        {
          "description": "In this episode, Mike and Cherokee look at using command piping in PowerShell. They also look at formatting cmdlet output.",
          "length": "1569",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-1-piping_and_formatting-101017-PGM.00_25_54_22.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-1-piping_and_formatting-101017-PGM.00_25_54_22.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-1-piping_and_formatting-101017-PGM.00_25_54_22.Still002-sm.jpg",
          "title": "Piping and Formatting",
          "transcript": "",
          "url": "2017-pipingformatting",
          "vimeoId": "237942912"
        },
        {
          "description": "In this episode, Mike and Cherokee look at using command piping in PowerShell. They also look at formatting cmdlet output.",
          "length": "1812",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-2-piping_and_formatting_pt_2-101017-PGM.00_29_56_08.Still008.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-2-piping_and_formatting_pt_2-101017-PGM.00_29_56_08.Still008-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-2-piping_and_formatting_pt_2-101017-PGM.00_29_56_08.Still008-sm.jpg",
          "title": "Piping and Formatting Part 2",
          "transcript": "",
          "url": "2017-pipingformatting2",
          "vimeoId": "237944153"
        },
        {
          "description": "In this episode, Mike and Cherokee look at setting the script execution policy in PowerShell. They discuss the various policies available and explain what they mean. They also look at script execution policy scope.",
          "length": "1668",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-1-script_execution_policy-101117-PGM.00_27_32_21.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-1-script_execution_policy-101117-PGM.00_27_32_21.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-1-script_execution_policy-101117-PGM.00_27_32_21.Still001-sm.jpg",
          "title": "Script Execution Policy",
          "transcript": "",
          "url": "script-execution-policy",
          "vimeoId": "238062141"
        },
        {
          "description": "In this episode, Mike and Cherokee look at setting the script execution policy in PowerShell. They discuss the various policies available and explain what they mean. They also look at script execution policy scope.",
          "length": "1657",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-2-script_execution_policy_pt_2-101117-PGM.00_31_00_19.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-2-script_execution_policy_pt_2-101117-PGM.00_31_00_19.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-2-script_execution_policy_pt_2-101117-PGM.00_31_00_19.Still001-sm.jpg",
          "title": "Script Execution Policy Part 2",
          "transcript": "",
          "url": "script-execution-policy2",
          "vimeoId": "237996963"
        },
        {
          "description": "In this episode, Mike and Wes discuss PowerShell drives. They look at the different PSProviders for creating drives, and demonstrate adding a drive.",
          "length": "1146",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-6-1-powershell_drives-101117-PGM.00_22_36_07.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-6-1-powershell_drives-101117-PGM.00_22_36_07.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-6-1-powershell_drives-101117-PGM.00_22_36_07.Still001-sm.jpg",
          "title": "PowerShell Drives",
          "transcript": "",
          "url": "power-shell-drives",
          "vimeoId": "237985169"
        },
        {
          "description": "In this episode, Mike and Cherokee look at PowerShell profiles. They explain the different profiles that PowerShell uses, and demonstrate creating a profile.",
          "length": "1762",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-1-powershell_profiles-101217-PGM.00_29_07_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-1-powershell_profiles-101217-PGM.00_29_07_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-1-powershell_profiles-101217-PGM.00_29_07_18.Still001-sm.jpg",
          "title": "Profiles",
          "transcript": "",
          "url": "profiles",
          "vimeoId": "238055791"
        },
        {
          "description": "In this episode, Mike and Cherokee look at PowerShell profiles. They explain the different profiles that PowerShell uses, and demonstrate creating a profile.",
          "length": "2307",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-2-powershell_profiles_pt_2-101217-PGM.00_41_05_21.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-2-powershell_profiles_pt_2-101217-PGM.00_41_05_21.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-2-powershell_profiles_pt_2-101217-PGM.00_41_05_21.Still001-sm.jpg",
          "title": "Profiles Part 2",
          "transcript": "",
          "url": "profiles2",
          "vimeoId": "238055975"
        },
        {
          "description": "In this episode, Mike and Cherokee take a look at basic functions in PowerShell. They discuss the components of a function, the format of a function, and adding function statements.",
          "length": "1961",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-1-basic_functions-101317-PGM.00_32_26_00.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-1-basic_functions-101317-PGM.00_32_26_00.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-1-basic_functions-101317-PGM.00_32_26_00.Still001-sm.jpg",
          "title": "Basic Functions",
          "transcript": "",
          "url": "basic-functions-powershell2017",
          "vimeoId": "238441946"
        },
        {
          "description": "In this episode, Mike and Cherokee take a look at basic functions in PowerShell. They discuss the components of a function, the format of a function, and adding function statements.",
          "length": "1836",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-2-basic_functions_pt_2-101317-PGM.00_30_40_27.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-2-basic_functions_pt_2-101317-PGM.00_30_40_27.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-2-basic_functions_pt_2-101317-PGM.00_30_40_27.Still001-sm.jpg",
          "title": "Basic Functions Part 2",
          "transcript": "",
          "url": "basic-functions-pt2-powershell2017",
          "vimeoId": "238442327"
        },
        {
          "description": "In this episode, Mike and Cherokee discuss the concept of modules in PowerShell. They look at the default locations where modules are stored, and the components that make up a module.",
          "length": "1628",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-1-module_basics-101317-PGM.00_26_53_09.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-1-module_basics-101317-PGM.00_26_53_09.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-1-module_basics-101317-PGM.00_26_53_09.Still001-sm.jpg",
          "title": "Module Basics",
          "transcript": "",
          "url": "module-basics-powershell2017",
          "vimeoId": "238607093"
        },
        {
          "description": "In this episode, Mike and Cherokee discuss the concept of modules in PowerShell. They look at the default locations where modules are stored, and the components that make up a module.",
          "length": "1671",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-2-module_basics_pt_2-101317-PGM.00_29_30_06.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-2-module_basics_pt_2-101317-PGM.00_29_30_06.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-2-module_basics_pt_2-101317-PGM.00_29_30_06.Still001-sm.jpg",
          "title": "Module Basics Part 2",
          "transcript": "",
          "url": "module-basics-pt2-powershell2017",
          "vimeoId": "238584351"
        }
      ],
      "title": "Introduction"
    }
  ],
  "url": "powershell-2017",
  "vLab": false
}
