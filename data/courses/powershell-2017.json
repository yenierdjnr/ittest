{
  "description": "Built on the .NET Framework, Windows PowerShell is a task-based command-line shell and scripting language. In this series, you will learn how to get started using PowerShell, mastering the basic skills, in preparation for more advanced topics.",
  "descriptionMD": "Built on the .NET Framework, Windows PowerShell is a task-based command-line shell and scripting language. In this series, you will learn how to get started using PowerShell, mastering the basic skills, in preparation for more advanced topics.",
  "length": "28200",
  "name": "PowerShell Basics",
  "practiceExam": false,
  "subtitle": "for Administrators",
  "tagUrl": "help-desk",
  "topics": [
    {
      "episodes": [
        {
          "description": "In this episode, Mike and Cherokee introduce PowerShell. They look at the various consoles for working with PowerShell.",
          "length": "1702",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-1-1-getting_started-100917-PGM.00_28_09_10.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-1-1-getting_started-100917-PGM.00_28_09_10.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-1-1-getting_started-100917-PGM.00_28_09_10.Still002-sm.jpg",
          "title": "Getting Started",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:02.623\nWelcome to ITProTV,\nI'm your host, Don Pezet.\n\n2\n00:00:02.623 --> 00:00:06.416\n[CROSSTALK]\n\n3\n00:00:06.416 --> 00:00:08.319\n[MUSIC]\n\n4\n00:00:08.319 --> 00:00:11.988\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:11.988 --> 00:00:13.870\n&gt;&gt; Welcome to your PowerShell series.\n\n6\n00:00:13.870 --> 00:00:15.810\nI'm your show host, Cherokee Boose.\n\n7\n00:00:15.810 --> 00:00:19.140\nIn this episode, we'll be taking a look\nat getting started with PowerShell.\n\n8\n00:00:19.140 --> 00:00:22.290\nAnd of course, we have Mr.\nMike Rodrick with us today in studios.\n\n9\n00:00:22.290 --> 00:00:23.406\nHow is going today, Mike?\n\n10\n00:00:23.406 --> 00:00:24.966\n&gt;&gt; It's going great, Cherokee,\nand thanks for having me.\n\n11\n00:00:24.966 --> 00:00:29.480\nAnd yet you are right, we are gonna\nbe talking about good old PowerShell.\n\n12\n00:00:29.480 --> 00:00:32.740\nFun stuff, hope everybody is excited.\n\n13\n00:00:32.740 --> 00:00:36.081\nWhen we get started with PowerShell,\nI guess the first thing we need to do,\n\n14\n00:00:36.081 --> 00:00:39.120\nlike with any technology,\nis kinda understand where we came from.\n\n15\n00:00:39.120 --> 00:00:42.200\nI think it always helps us\nto know where we've been, so\n\n16\n00:00:42.200 --> 00:00:43.798\nwe kinda see where we're going.\n\n17\n00:00:43.798 --> 00:00:47.740\nAnd PowerShell is one of those things,\nit's been around for a long time.\n\n18\n00:00:47.740 --> 00:00:49.940\nAnd I think over the years more and\n\n19\n00:00:49.940 --> 00:00:53.660\nmore people have gotten kind of\naccustomed to it and started using it.\n\n20\n00:00:53.660 --> 00:00:54.680\nSo I'm just gonna take a minute and\n\n21\n00:00:54.680 --> 00:00:59.090\ntalk about the history of PowerShell\nbefore we dive in and start using it.\n\n22\n00:00:59.090 --> 00:01:00.490\n&gt;&gt; So a history lesson?\n\n23\n00:01:00.490 --> 00:01:01.310\n&gt;&gt; Yeah, exactly.\n\n24\n00:01:01.310 --> 00:01:02.669\n&gt;&gt; Right.\n&gt;&gt; I gotta do that, right?\n\n25\n00:01:02.669 --> 00:01:04.730\n&gt;&gt; [LAUGH]\n&gt;&gt; All right, so let's take a look.\n\n26\n00:01:04.730 --> 00:01:07.390\nI've got a little document\nup here on my screen,\n\n27\n00:01:07.390 --> 00:01:11.780\ncuz a lot of us don't realize PowerShell\nhas been around for a little while.\n\n28\n00:01:11.780 --> 00:01:16.020\nYou can see here that PowerShell\nhas introduced back in 2006, so\n\n29\n00:01:16.020 --> 00:01:17.770\nover a decade ago.\n\n30\n00:01:17.770 --> 00:01:21.437\nAt the time of this shooting,\nwe've had PowerShell v1.0.\n\n31\n00:01:21.437 --> 00:01:23.520\nAnd at the time it was an add-on.\n\n32\n00:01:23.520 --> 00:01:26.780\nIt wasn't something that came\nas part of the operating system.\n\n33\n00:01:26.780 --> 00:01:28.440\nIt was something we would download.\n\n34\n00:01:28.440 --> 00:01:32.910\nMicrosoft's first foray, if you will,\ninto the world of PowerShell.\n\n35\n00:01:32.910 --> 00:01:36.700\nBefore that, we had our command-line\ninterpreter, the good old black and\n\n36\n00:01:36.700 --> 00:01:39.313\nwhite command prompt,\nthat a lot of us were used to using.\n\n37\n00:01:39.313 --> 00:01:43.660\nAnd PowerShell was new and\nthe idea was this was a new\n\n38\n00:01:43.660 --> 00:01:49.080\nmanagement interface that Microsoft wanted\nto push out, give us the ability to\n\n39\n00:01:49.080 --> 00:01:53.330\nmanage from a command line like interface.\n\n40\n00:01:53.330 --> 00:01:57.240\nAnd the ability to script things\nwhich meant we could start\n\n41\n00:01:57.240 --> 00:01:58.700\nautomating things, right?\n\n42\n00:01:58.700 --> 00:02:01.206\nAnd you might be saying, well,\nwe can do that in the command prompt.\n\n43\n00:02:01.206 --> 00:02:06.190\nOr we could, but the command prompt\nwas a command line interpreter.\n\n44\n00:02:06.190 --> 00:02:11.530\nAnd it used lots of different commands\nthat were in from different places like\n\n45\n00:02:11.530 --> 00:02:16.208\nnetsh had its own set of commands that\nwe could use in that command-line\n\n46\n00:02:16.208 --> 00:02:20.300\ninterpreter, firewall settings,\nor IP address settings.\n\n47\n00:02:20.300 --> 00:02:23.030\nWe had different sets of\ncommands that we can use but\n\n48\n00:02:23.030 --> 00:02:25.180\nthey were really from all over the place.\n\n49\n00:02:25.180 --> 00:02:28.686\n&gt;&gt; And Mike, it seems like a lot of\ndifferent administrators maybe coming from\n\n50\n00:02:28.686 --> 00:02:31.917\nmaybe like a mixed-base background,\nthey were kind of used to that,\n\n51\n00:02:31.917 --> 00:02:33.804\nhaving that command-line interface.\n\n52\n00:02:33.804 --> 00:02:38.770\nAnd with Microsoft, you didn't really\nget as much a functionality out of that.\n\n53\n00:02:38.770 --> 00:02:42.960\nSo really, they were hearing that request,\nthat need, and\n\n54\n00:02:42.960 --> 00:02:47.744\nthen kind of conformed and\nthen had the little baby PowerShell.\n\n55\n00:02:47.744 --> 00:02:48.993\n&gt;&gt; [LAUGH] Little baby PowerShell,\nI like it.\n\n56\n00:02:48.993 --> 00:02:50.844\n&gt;&gt; [LAUGH]\n&gt;&gt; It was hatched or born or\n\n57\n00:02:50.844 --> 00:02:51.620\nwhat have you.\n\n58\n00:02:51.620 --> 00:02:56.050\nIt came out, and at first,\nit was kinda had mixed reviews, right?\n\n59\n00:02:56.050 --> 00:02:58.920\nPeople were a little unsure about it.\n\n60\n00:02:58.920 --> 00:03:01.370\nThose people that were used\nto their command-line like,\n\n61\n00:03:01.370 --> 00:03:02.680\nwhy do I need PowerShell?\n\n62\n00:03:02.680 --> 00:03:04.549\nI've already got my\ncommand-line interface.\n\n63\n00:03:05.780 --> 00:03:08.540\nSo it was something new,\nsomething different.\n\n64\n00:03:08.540 --> 00:03:14.050\nBut it really did, it began this, I'm\ntrying to think of a good way to say it.\n\n65\n00:03:14.050 --> 00:03:18.990\nMicrosoft really started putting a lot\nof energy into developing PowerShell.\n\n66\n00:03:18.990 --> 00:03:22.380\nAnd it got to the point where at Microsoft\nthey were developing commands for\n\n67\n00:03:22.380 --> 00:03:24.830\nPowerShell before they were\ndeveloping commands or\n\n68\n00:03:24.830 --> 00:03:27.590\nthat same capability in the interface.\n\n69\n00:03:27.590 --> 00:03:31.158\nIf you remember, there were some versions\nof PowerShell, like managing exchange.\n\n70\n00:03:31.158 --> 00:03:34.854\nThere were things I could do in PowerShell\nthat I could not do in the GUI, so\n\n71\n00:03:34.854 --> 00:03:37.325\nwe saw this-\n&gt;&gt; I can see that now.\n\n72\n00:03:37.325 --> 00:03:40.470\n&gt;&gt; Yeah, exactly,\nwe saw that shift in Microsoft where, hey,\n\n73\n00:03:40.470 --> 00:03:44.800\nwe are gonna really focus\non developing a good\n\n74\n00:03:44.800 --> 00:03:48.750\nscriptable interface that we\ncan use to manage machines.\n\n75\n00:03:48.750 --> 00:03:53.921\nAll right, so again, back to my document\nhere, 2006 we had PowerShell v1.0.\n\n76\n00:03:53.921 --> 00:03:59.510\nIt was available for download for\nXP, Windows Vista, and Server 2003.\n\n77\n00:03:59.510 --> 00:04:04.480\nAnd then in 2009, we got PowerShell v2.0.\n\n78\n00:04:04.480 --> 00:04:06.757\nSo big improvement here.\n\n79\n00:04:06.757 --> 00:04:09.508\nIt was pre-installed in\nour operating system.\n\n80\n00:04:09.508 --> 00:04:14.613\nWhen you loaded up Windows 7 or Server\n2008 it was part of the installation.\n\n81\n00:04:14.613 --> 00:04:16.140\nThere wasn't anything extra to download.\n\n82\n00:04:16.140 --> 00:04:19.665\nAnd this really shows you,\nas Microsoft was shifting gears, and\n\n83\n00:04:19.665 --> 00:04:24.615\nI won't say forcing PowerShell on us but-\n&gt;&gt; Integrating it into\n\n84\n00:04:24.615 --> 00:04:27.115\ntheir off-the-shelf solution.\n\n85\n00:04:27.115 --> 00:04:29.035\n&gt;&gt; Yes, and\nall of a sudden people were thinking wow,\n\n86\n00:04:29.035 --> 00:04:34.700\nthis wasn't just a fly-by-night idea or\nlet's see if this works.\n\n87\n00:04:34.700 --> 00:04:36.680\nThis is now part of the operating system.\n\n88\n00:04:36.680 --> 00:04:39.760\nIt's going to be here for\na while, so we can start using it.\n\n89\n00:04:39.760 --> 00:04:41.210\nWe can start developing with it and\n\n90\n00:04:41.210 --> 00:04:44.688\nnot afraid that it's gonna disappear\nin the next version of Windows.\n\n91\n00:04:44.688 --> 00:04:49.419\nSo again, pre-installed in 2008 Server and\nWindows 7,\n\n92\n00:04:49.419 --> 00:04:53.269\nyou can still download for\nXP, Vista, 2003.\n\n93\n00:04:53.269 --> 00:04:56.795\nIf you wanted to update to PowerShell 2.0,\nyou just had to download it and\n\n94\n00:04:56.795 --> 00:04:57.910\ninstall it.\n\n95\n00:04:57.910 --> 00:05:00.960\nAnd the big thing it brought for\nus was the remoting,\n\n96\n00:05:00.960 --> 00:05:04.980\nthe ability to remotely\ncontrol other machines.\n\n97\n00:05:04.980 --> 00:05:07.330\nAnd this is a very, very powerful feature.\n\n98\n00:05:07.330 --> 00:05:10.148\nWe're gonna look at depth\nat the PS sessions and\n\n99\n00:05:10.148 --> 00:05:12.970\nhow we can manage machines\nremotely as we go on.\n\n100\n00:05:12.970 --> 00:05:14.900\nRemoting was introduced in PowerShell 2.0,\n\n101\n00:05:14.900 --> 00:05:18.918\nas well as something known\nas the PowerShell ISE.\n\n102\n00:05:18.918 --> 00:05:24.302\nBefore version 2.0, with just PowerShell\n1.0, all we had was what looked like\n\n103\n00:05:24.302 --> 00:05:29.443\na command-line interpreter, the PowerShell\n&gt;&gt; Window?\n\n104\n00:05:29.443 --> 00:05:30.275\n&gt;&gt; Host or window if you will.\n\n105\n00:05:30.275 --> 00:05:32.048\n&gt;&gt; [LAUGH]\n&gt;&gt; [COUGH] Yeah, and\n\n106\n00:05:32.048 --> 00:05:34.360\nthat's really all we had.\n\n107\n00:05:34.360 --> 00:05:38.350\nWith the PowerShell 2.0, they brought\nus something known as the ISE,\n\n108\n00:05:38.350 --> 00:05:40.720\nthe integrated scripting environment.\n\n109\n00:05:40.720 --> 00:05:45.610\nAnd this was really nice, cuz now all of\na sudden I've got a PowerShell interface,\n\n110\n00:05:45.610 --> 00:05:50.660\nbut I also have the ability to write\nscripts right in that same interface.\n\n111\n00:05:50.660 --> 00:05:53.980\nTake advantage of the search\ncapabilities for commands.\n\n112\n00:05:53.980 --> 00:05:55.990\nWe'll take a look at the ISE, but\n\n113\n00:05:55.990 --> 00:05:58.820\nit's a great place to get\nstarted with Windows PowerShell.\n\n114\n00:05:58.820 --> 00:06:00.590\nI love the ISE.\n\n115\n00:06:00.590 --> 00:06:04.093\nI spent a lot of time there, but\nif you're going to write scripts,\n\n116\n00:06:04.093 --> 00:06:06.170\nthis is where you'll spend some time.\n\n117\n00:06:06.170 --> 00:06:08.170\nSo we'll take a look at the ISE as well.\n\n118\n00:06:09.610 --> 00:06:13.664\nThen in 2012, we got PowerShell 3.0.\n\n119\n00:06:13.664 --> 00:06:16.945\n3.0 came out with 2012 Windows 8.\n\n120\n00:06:16.945 --> 00:06:18.730\nIt was pre-installed.\n\n121\n00:06:18.730 --> 00:06:22.100\nAnd again, we could download that for\nour older operating system.\n\n122\n00:06:22.100 --> 00:06:26.460\nSo if we wanted to get up to\nPowerShell 3.0 on Windows 7, 2008,\n\n123\n00:06:26.460 --> 00:06:28.570\nwe could download those.\n\n124\n00:06:28.570 --> 00:06:31.847\nAnd you notice I don't have Windows XP,\nWindows Vista or\n\n125\n00:06:31.847 --> 00:06:36.778\nServer 2003 on there because at this point\nwe didn't have that support anymore.\n\n126\n00:06:36.778 --> 00:06:39.800\nSo it was only available for 7 in 2008.\n\n127\n00:06:39.800 --> 00:06:45.225\nBut 3.0 brought us online updates for\nhelp, and this was big.\n\n128\n00:06:45.225 --> 00:06:49.475\nThey were constantly adding new commands,\nnew modules,\n\n129\n00:06:49.475 --> 00:06:53.760\nimproving or\nexpanding the capabilities of PowerShell.\n\n130\n00:06:53.760 --> 00:06:58.090\nAnd trying to get information on\nthose commands, that could be tricky.\n\n131\n00:06:58.090 --> 00:07:01.645\nSo having an online help system,\nor at least the ability to update\n\n132\n00:07:01.645 --> 00:07:05.150\nmy help online, meant we could\nkeep that help current, right?\n\n133\n00:07:05.150 --> 00:07:07.787\nIt wasn't like I was still\nusing the help file for\n\n134\n00:07:07.787 --> 00:07:10.051\nwhen my operating system got installed.\n\n135\n00:07:10.051 --> 00:07:13.590\nI was able to go get new help files,\nand update those help files.\n\n136\n00:07:13.590 --> 00:07:15.100\nSo very, very big.\n\n137\n00:07:15.100 --> 00:07:16.083\nAnd I tell you,\n\n138\n00:07:16.083 --> 00:07:20.699\nMicrosoft really took a lesson from\nsome our other operating systems and\n\n139\n00:07:20.699 --> 00:07:25.480\nmanual pages and they got help right\nwhen it comes to PowerShell, I think.\n\n140\n00:07:25.480 --> 00:07:26.680\nAnd a lot of great information.\n\n141\n00:07:26.680 --> 00:07:30.820\nWe'll take a detailed look at all of\nthe help that we can get within PowerShell\n\n142\n00:07:30.820 --> 00:07:36.440\nbecause honestly, it's great because\nit shows you what the command is,\n\n143\n00:07:36.440 --> 00:07:40.556\nwhat the options are, what the parameters\nare, examples, detailed help.\n\n144\n00:07:40.556 --> 00:07:43.290\nWe'll take a look at that as well.\n\n145\n00:07:43.290 --> 00:07:48.440\nAnd one of my favorites,\nIntelliSense for PowerShell ISE, right?\n\n146\n00:07:48.440 --> 00:07:51.597\nAgain, ISE was that scripting environment,\nor\n\n147\n00:07:51.597 --> 00:07:56.757\nthe Integrated Scripting Environment and\nIntelliSense is the ability to start\n\n148\n00:07:56.757 --> 00:08:02.162\ntyping a command, and as you type it shows\nyou a list Of possible commands, right?\n\n149\n00:08:02.162 --> 00:08:05.403\nSo as I'm typing it out,\nit's looking at what I'm typing, and\n\n150\n00:08:05.403 --> 00:08:09.261\nit's showing me all the things that\nstart with whatever I've typed so far.\n\n151\n00:08:09.261 --> 00:08:13.662\nAnd as you type additional characters,\nthe list gets filtered down to fewer and\n\n152\n00:08:13.662 --> 00:08:14.587\nfewer choices.\n\n153\n00:08:14.587 --> 00:08:19.430\nAnd so if you're not exactly sure what\na command is, or exactly how it's spelled,\n\n154\n00:08:19.430 --> 00:08:22.971\nas you type the few letters there\nyou'll get a list of those.\n\n155\n00:08:22.971 --> 00:08:27.742\nSo I really like that feature and it's not\njust the command, it's the parameters and\n\n156\n00:08:27.742 --> 00:08:31.186\neven the values for\nsome of those parameters as well, which,\n\n157\n00:08:31.186 --> 00:08:33.327\nagain I'll show you as we go through.\n\n158\n00:08:33.327 --> 00:08:38.200\nSo, we got the IntelliSense for\nISE in version 3.0.\n\n159\n00:08:38.200 --> 00:08:42.447\n&gt;&gt; Which is great if you can't remember\nevery single cmdlt and parameter there,\n\n160\n00:08:42.447 --> 00:08:44.933\nwhich I definitely can't, so [LAUGH]\n&gt;&gt; Yeah, and\n\n161\n00:08:44.933 --> 00:08:47.905\nI don't know too many people that can,\nand there's thousands and\n\n162\n00:08:47.905 --> 00:08:51.849\nthousands of commands So it's fantastic,\nespecially when you're getting started.\n\n163\n00:08:51.849 --> 00:08:55.211\nLike eventually, you'll have\ncertain commands that you know and\n\n164\n00:08:55.211 --> 00:08:56.118\nuse all the time.\n\n165\n00:08:56.118 --> 00:08:59.811\nBut when you're looking for a particular\ncommand, or you're not sure what\n\n166\n00:08:59.811 --> 00:09:04.100\nparameters are available for that command,\nthe IntelliSense really can help you out.\n\n167\n00:09:05.380 --> 00:09:11.062\nAnd then in 2013 or\n2013 we got PowerShell 4.0.\n\n168\n00:09:11.062 --> 00:09:14.724\nThis came pre-installed in Windows 8.1 and\nServer 2012 R2.\n\n169\n00:09:14.724 --> 00:09:19.354\nWe could download it all the way back\nto Windows 7 2008 which would include\n\n170\n00:09:19.354 --> 00:09:20.486\nServer 2012.\n\n171\n00:09:20.486 --> 00:09:25.005\nAnd with 3., sorry 4.0 we've\ngot enhanced script security,\n\n172\n00:09:25.005 --> 00:09:29.205\nbecause now all of a sudden,\nmore and more people are using it,\n\n173\n00:09:29.205 --> 00:09:32.316\nwe're using it script, to automate things.\n\n174\n00:09:32.316 --> 00:09:36.543\nAnd so the ability to control those\nscripts, make sure they're trusted,\n\n175\n00:09:36.543 --> 00:09:37.761\nwas added in 4.0.\n\n176\n00:09:37.761 --> 00:09:42.009\nAnd enhanced debugging, the ability to,\nagain, more and more people were starting\n\n177\n00:09:42.009 --> 00:09:45.760\nto use this to automate processes,\nso the ability to debug scripts.\n\n178\n00:09:45.760 --> 00:09:49.595\nSet break points, for example,\nand work through the code and\n\n179\n00:09:49.595 --> 00:09:52.102\ntry to figure out where the problem was,\n\n180\n00:09:52.102 --> 00:09:56.180\nwhich is a big help as we're\nwriting those more complex scripts.\n\n181\n00:09:56.180 --> 00:10:00.612\nAnd then in 2016 we got PowerShell 5.0.\n\n182\n00:10:00.612 --> 00:10:04.096\n5.0 pre-installed on Windows 10 and\nServer 2016.\n\n183\n00:10:04.096 --> 00:10:09.727\nWe could download that for 2012 R2\nall the way back to 2008 R2 SP1 and\n\n184\n00:10:09.727 --> 00:10:12.810\nall the way back to back to Windows 7 SP1.\n\n185\n00:10:12.810 --> 00:10:17.825\nThat's PowerShell 5.0 and\nsome of the new features that Windows,\n\n186\n00:10:17.825 --> 00:10:21.650\nsorry that PowerShell 5.0 brings us,\nsupport for\n\n187\n00:10:21.650 --> 00:10:25.830\nChocolatey's repository-based\npackage management.\n\n188\n00:10:25.830 --> 00:10:26.424\n&gt;&gt; Sounds delicious.\n\n189\n00:10:26.424 --> 00:10:28.359\n&gt;&gt; It does,\ndoesn't it make you hungry, right?\n\n190\n00:10:28.359 --> 00:10:31.328\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] But this is getting, for\n\n191\n00:10:31.328 --> 00:10:36.042\nthose coming from the Linux world, you'll\nunderstand package-based management,\n\n192\n00:10:36.042 --> 00:10:37.890\nthe ability to go out.\n\n193\n00:10:37.890 --> 00:10:42.379\nThey can store packages out there\nin that Chocolatey's repository.\n\n194\n00:10:42.379 --> 00:10:47.179\nPowershell now has the ability to go out,\nsearch, find, download and\n\n195\n00:10:47.179 --> 00:10:50.850\ninstall packages from\ntheir repository there.\n\n196\n00:10:50.850 --> 00:10:54.875\nAnd they've extended support for switch\nmanagement to layer two network switches.\n\n197\n00:10:54.875 --> 00:10:58.936\nSo again always increasing\nthe functionality of PowerShell.\n\n198\n00:10:58.936 --> 00:11:01.246\nSo it's a fantastic journey we've been on.\n\n199\n00:11:01.246 --> 00:11:05.288\nAll the way back from 2006\ntill now with version 5.\n\n200\n00:11:05.288 --> 00:11:09.635\nNow, also I forgot to tell you\nthey've got new cmdlts for PowerShell,\n\n201\n00:11:09.635 --> 00:11:12.610\ndesired state configuration or DSC.\n\n202\n00:11:12.610 --> 00:11:16.376\nWhich is something we'll spend a lot\nof time on because this is an area that\n\n203\n00:11:16.376 --> 00:11:20.147\nPowerShell really shines at it's\nsomething that a lot of administrators\n\n204\n00:11:20.147 --> 00:11:20.958\nare now using.\n\n205\n00:11:20.958 --> 00:11:25.204\n&gt;&gt; All right so you've just showed us\nover a decade's worth transition there so\n\n206\n00:11:25.204 --> 00:11:29.447\nthat gives us a little bit of confidence\nin hey, I'm not going to waste my time\n\n207\n00:11:29.447 --> 00:11:33.261\nlearning a technology or\nlanguage that may vanish intermittently.\n\n208\n00:11:33.261 --> 00:11:37.120\nBut it seems like it's not\nreally going anywhere.\n\n209\n00:11:37.120 --> 00:11:38.634\n&gt;&gt; Well, that's true and\n\n210\n00:11:38.634 --> 00:11:42.429\nnow that I'm telling you here\nis that it's not going away.\n\n211\n00:11:42.429 --> 00:11:46.429\n[LAUGH] No,\nI did kind of lead us down that road and\n\n212\n00:11:46.429 --> 00:11:51.443\nthe funny thing is,\nis we're on version 5.1 right now.\n\n213\n00:11:51.443 --> 00:11:54.790\nAt the time of this shooting,\nwe're on version 5.1.\n\n214\n00:11:54.790 --> 00:11:57.635\nSo I'm running Windows 10,\nAnniversary update, or\n\n215\n00:11:57.635 --> 00:11:59.883\nactually the creator's update, I think.\n\n216\n00:11:59.883 --> 00:12:04.090\nWindows 2016 with the latest build.\n\n217\n00:12:04.090 --> 00:12:08.198\nAnd when you install,\nyou will see you have version 5.1.\n\n218\n00:12:08.198 --> 00:12:12.770\nAnd 5.1,\nagain it's kind of a subset of 5.0, right?\n\n219\n00:12:12.770 --> 00:12:15.170\nIt brought in a couple of new things.\n\n220\n00:12:15.170 --> 00:12:19.240\nIt brought in the fact we have new,\nnow we have additions.\n\n221\n00:12:19.240 --> 00:12:21.285\nSo we have PowerShell desktop.\n\n222\n00:12:21.285 --> 00:12:25.491\nWe have also have something\nknown as PowerShell Core.\n\n223\n00:12:25.491 --> 00:12:29.131\nAnd we have, what's the other one,\nI guess it's just those two.\n\n224\n00:12:29.131 --> 00:12:30.604\nDesktop corner Linux,\n\n225\n00:12:30.604 --> 00:12:34.370\nsorry there's a Linux edition\nas well which is kind of cool.\n\n226\n00:12:34.370 --> 00:12:35.943\nThat means I can actually run PowerShell.\n\n227\n00:12:35.943 --> 00:12:40.584\nThere is an open source\nPowerShell Core for Linux.\n\n228\n00:12:40.584 --> 00:12:42.750\nNow it's a little confusing.\n\n229\n00:12:42.750 --> 00:12:46.049\nAs I said go through this, if you go out\nthere at the time of this shooting I'm\n\n230\n00:12:46.049 --> 00:12:49.832\ngiving you the information I have, it very\nwell could change tomorrow, or next week.\n\n231\n00:12:49.832 --> 00:12:54.790\nThis is all very much influx,\nyou know how Microsoft is.\n\n232\n00:12:54.790 --> 00:12:59.359\nBut at the time of this shooting,\n5.1 gave us those additions,\n\n233\n00:12:59.359 --> 00:13:02.876\nbut they're now coming\nout with PowerShell Core.\n\n234\n00:13:02.876 --> 00:13:09.547\nAnd it's PowerShell Core 6.0, but\nit's not Windows PowerShell 6.0.\n\n235\n00:13:09.547 --> 00:13:13.541\nSo we have Windows PowerShell 5.1 and\n\n236\n00:13:13.541 --> 00:13:18.710\nthen we have PowerShell Core 6.0,\nwhich again is\n\n237\n00:13:18.710 --> 00:13:23.481\na little bit confusing, but the idea is-\n&gt;&gt; We are just\n\n238\n00:13:23.481 --> 00:13:27.492\ngetting the shell there and then you can-\n&gt;&gt; It's a limited set\n\n239\n00:13:27.492 --> 00:13:31.474\nof functionality as far as\nwhat it's built off of.\n\n240\n00:13:31.474 --> 00:13:33.840\nIt's built off instead\nof the complete .NET,\n\n241\n00:13:33.840 --> 00:13:37.670\nit's built off of .NET Core which\ndoes have reduced functionality.\n\n242\n00:13:37.670 --> 00:13:41.603\nI believe it's also because they're trying\nto make a cross platform, an open source.\n\n243\n00:13:41.603 --> 00:13:44.426\nSo probably-\n&gt;&gt; You may see some changes there.\n\n244\n00:13:44.426 --> 00:13:45.112\n&gt;&gt; Yes.\n\n245\n00:13:45.112 --> 00:13:48.861\nAnd so this is just me trying to put\nsense to what you read from Microsoft and\n\n246\n00:13:48.861 --> 00:13:51.534\ntheir updates and their blogs and\nthings like that.\n\n247\n00:13:51.534 --> 00:13:56.332\nIt kinda looks like 5.1 might be\ntowards the end of Windows PowerShell.\n\n248\n00:13:56.332 --> 00:14:02.004\nAnd it's just gonna be, PowerShell Core\n6.0 might very well take over.\n\n249\n00:14:02.004 --> 00:14:06.519\nAnd that's just me, we could end\nup with Windows PowerShell 6.0 and\n\n250\n00:14:06.519 --> 00:14:08.185\nPowerShell Core 6.0.\n\n251\n00:14:08.185 --> 00:14:12.326\nI don't know how that's going to play\nout but we're gonna be focusing in on\n\n252\n00:14:12.326 --> 00:14:16.406\nWindows PowerShell 5.1 because\nthat's what we're gonna be using and\n\n253\n00:14:16.406 --> 00:14:18.988\nadministering our Windows\nsystems as of now.\n\n254\n00:14:18.988 --> 00:14:23.678\nJust wanted to make you guys aware and\nmake sure that could keep up to date.\n\n255\n00:14:23.678 --> 00:14:27.522\nYou might start seeing PowerShell Core and\nthat's open source and\n\n256\n00:14:27.522 --> 00:14:29.590\nit'll run on multiple platforms.\n\n257\n00:14:29.590 --> 00:14:32.390\nIt's supposed to be platform independent,\nit's the idea.\n\n258\n00:14:32.390 --> 00:14:36.696\nIt might not have all the functionality\nthat we get in Windows PowerShell 5.1 but\n\n259\n00:14:36.696 --> 00:14:38.370\nit will most likely be added in.\n\n260\n00:14:38.370 --> 00:14:41.320\nI will tell you I've\nread a couple blog posts.\n\n261\n00:14:41.320 --> 00:14:47.061\nSometimes I don't like saying these on our\nshows because they could change, right?\n\n262\n00:14:47.061 --> 00:14:49.833\nIt's a person at Microsoft\nthat's in development, but\n\n263\n00:14:49.833 --> 00:14:53.194\nthings could change tomorrow and\nit completely goes out the window.\n\n264\n00:14:53.194 --> 00:14:56.315\nBut, according to the I was reading,\n\n265\n00:14:56.315 --> 00:15:01.118\nthey´re slowing down the development\nof Windows PowerShell 5.1,\n\n266\n00:15:01.118 --> 00:15:05.213\nand focusing all of their\nenergy on PowerShell Core 6.0.\n\n267\n00:15:05.213 --> 00:15:07.152\nSo that is probably what we´re\ngonna see coming out next.\n\n268\n00:15:07.152 --> 00:15:08.906\n&gt;&gt; Okay.\n\n269\n00:15:08.906 --> 00:15:09.551\n&gt;&gt; We'll see.\n\n270\n00:15:09.551 --> 00:15:10.763\nAnd then again that's just me guessing.\n\n271\n00:15:10.763 --> 00:15:11.362\n&gt;&gt; [LAUGH]\n&gt;&gt; And\n\n272\n00:15:11.362 --> 00:15:13.552\nyou can point your finger\ninto six months from now.\n\n273\n00:15:13.552 --> 00:15:14.290\nMike, you were completely wrong.\n\n274\n00:15:14.290 --> 00:15:18.029\n&gt;&gt; But I can imagine that a lot of this\ninformation that we would be learning\n\n275\n00:15:18.029 --> 00:15:20.848\nin this show can go ahead and\nbe carried into that new.\n\n276\n00:15:20.848 --> 00:15:24.981\nBecause the syntax and the fundamentals\nbehind it are gonna be carried through.\n\n277\n00:15:24.981 --> 00:15:28.014\n&gt;&gt; Absolutely,\nit's still going to play a big part.\n\n278\n00:15:28.014 --> 00:15:30.710\nAnd as you said,\nthat the syntax is gonna be the same.\n\n279\n00:15:30.710 --> 00:15:34.236\nIt might not have all the commands\ninitially but they'll be added and so\n\n280\n00:15:34.236 --> 00:15:36.760\nwe won't have any issues there.\n\n281\n00:15:36.760 --> 00:15:38.764\nAll right, so I am going to,\n\n282\n00:15:38.764 --> 00:15:42.781\nI shall save that list in case\nanybody wants it out there.\n\n283\n00:15:42.781 --> 00:15:45.077\nSo we took a look at our history.\n\n284\n00:15:45.077 --> 00:15:48.620\nNow let's take a look\nat PowerShell itself.\n\n285\n00:15:48.620 --> 00:15:52.225\nAnd so what I want to do is we've just got\na little bit of time left here in this\n\n286\n00:15:52.225 --> 00:15:52.758\nepisode.\n\n287\n00:15:52.758 --> 00:15:54.654\nI want to talk about the different, or\n\n288\n00:15:54.654 --> 00:15:58.283\nshow you the different interfaces\nthat we have for Windows PowerShell.\n\n289\n00:15:58.283 --> 00:16:01.615\nAnd the first one I'll show you\nis just good old PowerShell.\n\n290\n00:16:01.615 --> 00:16:05.220\nI've Clicked on my icon\ndown here on my task bar.\n\n291\n00:16:05.220 --> 00:16:07.589\nIf that's not,\nI'd believe I pinned that there myself, so\n\n292\n00:16:07.589 --> 00:16:09.500\nit's probably not there by default.\n\n293\n00:16:09.500 --> 00:16:13.756\nYou can always go to your Windows menu and\ntype in PowerShell and\n\n294\n00:16:13.756 --> 00:16:16.985\nyou'll see a Windows PowerShell\ndesktop app.\n\n295\n00:16:16.985 --> 00:16:21.195\nAnd I just choose to pin that to\nmy task bar cuz I use it a lot.\n\n296\n00:16:21.195 --> 00:16:22.805\nAll right, and there we have it.\n\n297\n00:16:22.805 --> 00:16:24.905\nThis is our PowerShell interface.\n\n298\n00:16:24.905 --> 00:16:28.325\n&gt;&gt; And Mike something I learned from you\na long time ago, even if you are working\n\n299\n00:16:28.325 --> 00:16:33.307\nwith core and you don't have a PowerShell\nwindow open, you can actually launch that\n\n300\n00:16:33.307 --> 00:16:37.437\ndirectly from commands line,\nfrom your regular command prompt as well.\n\n301\n00:16:37.437 --> 00:16:38.587\n&gt;&gt; You can, let's go take a look at that.\n\n302\n00:16:38.587 --> 00:16:43.103\nI happen to have a core install sitting\nhere, which has locked itself, so\n\n303\n00:16:43.103 --> 00:16:44.743\nlet me log back in.\n\n304\n00:16:44.743 --> 00:16:47.443\nAnd I know that font is small,\nbut this is core, so\n\n305\n00:16:47.443 --> 00:16:49.503\nthere's not a whole lot\nthat I can do about it.\n\n306\n00:16:49.503 --> 00:16:51.803\nBut here as Cherokee was saying,\nwhen you log into core,\n\n307\n00:16:51.803 --> 00:16:53.733\nyou're sitting at a cmd.exe.\n\n308\n00:16:53.733 --> 00:16:57.593\nSo I'm at a normal command line\ninterpreter, CLI window, and\n\n309\n00:16:57.593 --> 00:17:02.920\nall I'm going to do is type in\nPowerShell and hit Enter and\n\n310\n00:17:02.920 --> 00:17:07.860\ngive it just a second, and\nwe'll see it start to fire up.\n\n311\n00:17:10.290 --> 00:17:11.160\nAnd there we go.\n\n312\n00:17:11.160 --> 00:17:16.410\nNow if you look at my prompt out here,\nyou'll see a little PS out in front of it.\n\n313\n00:17:16.410 --> 00:17:19.870\nThat's my indicator that I'm\nno longer at a command line.\n\n314\n00:17:19.870 --> 00:17:21.480\nI am at a PowerShell prop.\n\n315\n00:17:21.480 --> 00:17:26.050\nSo I can start typing in my\nPowerShell commands, all right?\n\n316\n00:17:26.050 --> 00:17:30.080\nSo it's definitely available on core.\n\n317\n00:17:30.080 --> 00:17:33.910\nWe could remote into it as well, but\nwe'll take a look at that in a little bit.\n\n318\n00:17:33.910 --> 00:17:35.414\n&gt;&gt; And\nthen we have the regular permissions,\n\n319\n00:17:35.414 --> 00:17:38.990\nand then also the administrative\naspect of it just like we\n\n320\n00:17:38.990 --> 00:17:40.650\nsee with our command prompt as well.\n\n321\n00:17:40.650 --> 00:17:41.430\n&gt;&gt; Exactly right.\n\n322\n00:17:41.430 --> 00:17:42.820\nLet me flip back over the client.\n\n323\n00:17:42.820 --> 00:17:46.830\nNow when I launched\nthis I just clicked it.\n\n324\n00:17:46.830 --> 00:17:51.250\nIf I wanted to give this administrative\nrights, I would right-click on that icon.\n\n325\n00:17:51.250 --> 00:17:52.900\nAnd I could do the same\nthing from the Start menu.\n\n326\n00:17:52.900 --> 00:17:56.660\nWe could do PowerShell and\nI could right-click it here and choose-\n\n327\n00:17:56.660 --> 00:17:57.920\n&gt;&gt; But pinning is really a good idea,\n\n328\n00:17:57.920 --> 00:18:00.930\nespecially for this show and\nwith practicing and working with it,\n\n329\n00:18:00.930 --> 00:18:02.865\nyou're gonna be in and out all the time.\n\n330\n00:18:02.865 --> 00:18:03.475\n&gt;&gt; Absolutely.\n\n331\n00:18:03.475 --> 00:18:04.135\n&gt;&gt; Smart.\n\n332\n00:18:04.135 --> 00:18:05.010\n&gt;&gt; I'm still.\n\n333\n00:18:05.010 --> 00:18:06.805\n&gt;&gt; [LAUGH]\n&gt;&gt; I know the new window.\n\n334\n00:18:06.805 --> 00:18:09.345\nAll I have to do is hit\nthe Windows key and start typing.\n\n335\n00:18:09.345 --> 00:18:10.965\nI love having my little icons down.\n\n336\n00:18:10.965 --> 00:18:11.485\n&gt;&gt; I'm with you, yeah.\n\n337\n00:18:11.485 --> 00:18:12.700\n&gt;&gt; I don't know why, but that's just me.\n\n338\n00:18:12.700 --> 00:18:14.685\n&gt;&gt; [LAUGH]\n&gt;&gt; But I can definitely right-click on it.\n\n339\n00:18:14.685 --> 00:18:16.205\nChoose Run as Administrator.\n\n340\n00:18:16.205 --> 00:18:19.345\nAnother handy little trick that's\nnot really PowerShell-specific, but\n\n341\n00:18:19.345 --> 00:18:23.515\nI'll show you while we're here,\nis the whole Ctrl+Shift+Enter.\n\n342\n00:18:23.515 --> 00:18:24.825\nAnything that you have highlighted.\n\n343\n00:18:24.825 --> 00:18:29.230\nSo as you start typing,\nI don't have Word on here, I have WordPad.\n\n344\n00:18:29.230 --> 00:18:33.130\nAs you start typing you'll see that\nit highlights something in your menu.\n\n345\n00:18:33.130 --> 00:18:36.800\nSo when I start typing PowerShell,\nit finds PowerShell.\n\n346\n00:18:36.800 --> 00:18:40.710\nIf I do Ctrl+Shift+Enter while that's\nhighlighted it's the same thing as right\n\n347\n00:18:40.710 --> 00:18:42.250\nclicking on it and choosing-\n&gt;&gt; Fancy.\n\n348\n00:18:42.250 --> 00:18:43.205\n&gt;&gt; Run as administrator.\n\n349\n00:18:43.205 --> 00:18:43.960\n&gt;&gt; [LAUGH]\n&gt;&gt; So for\n\n350\n00:18:43.960 --> 00:18:45.650\nthose of you who like to\nstay in your keyboard and\n\n351\n00:18:45.650 --> 00:18:47.840\navoid the mouse, there you go.\n\n352\n00:18:47.840 --> 00:18:52.810\nAnd so there is, Mike, you can see up at\nthe top, it says administrator, oops.\n\n353\n00:18:52.810 --> 00:18:56.880\nAnd my path is a little bit different\nfrom when I launched normal PowerShell.\n\n354\n00:18:56.880 --> 00:18:59.090\nBut we'll take a look at that as we go.\n\n355\n00:18:59.090 --> 00:19:03.720\nSo, we've seen the PowerShell interface,\nwe saw it on Core as well.\n\n356\n00:19:03.720 --> 00:19:06.270\nAgain, it's by default on 10, 2016 and\n\n357\n00:19:06.270 --> 00:19:11.150\nalso we'll take a look at the integrated\nscripting environment all right.\n\n358\n00:19:11.150 --> 00:19:12.832\nSo, let's take at look at PowerShell ICSM.\n\n359\n00:19:12.832 --> 00:19:16.620\nI'm just gonna go to my Startup Menu,\ntype in PowerShell and\n\n360\n00:19:16.620 --> 00:19:20.600\nthere I can see PowerShell ISE again,\nI figured to show you if I right click\n\n361\n00:19:20.600 --> 00:19:24.970\non it you can also launch ISE from here,\nor that integrated scripting environment.\n\n362\n00:19:24.970 --> 00:19:26.310\nSo I'll launch it up and let it load up.\n\n363\n00:19:26.310 --> 00:19:27.820\nAnd I haven't adjusted my fonts in here.\n\n364\n00:19:27.820 --> 00:19:31.230\nWe'll do that in a little bit,\nand do that from my options.\n\n365\n00:19:31.230 --> 00:19:33.450\nBut this is the integrated\nscripting environment.\n\n366\n00:19:33.450 --> 00:19:36.450\nAnd at first glance it doesn't look\na lot different from PowerShell.\n\n367\n00:19:36.450 --> 00:19:37.790\nI've got this blue background.\n\n368\n00:19:37.790 --> 00:19:40.870\nI got my little PowerShell\nprompt sitting here.\n\n369\n00:19:40.870 --> 00:19:44.150\nBut it's all the other stuff that we get.\n\n370\n00:19:44.150 --> 00:19:49.040\nFirst of all I got this commands pane\nrunning down the right-hand side.\n\n371\n00:19:49.040 --> 00:19:53.090\nAnd this gives me access to,\nyou guessed it, all of the commands.\n\n372\n00:19:53.090 --> 00:19:57.420\nAnd so if I'm trying to find the command,\nI can simply search through here.\n\n373\n00:19:57.420 --> 00:20:00.280\nI've got a dropdown list where I\ncan go to a particular module and\n\n374\n00:20:00.280 --> 00:20:03.600\nwe're gonna talk about modules and\nwhat that means in a little bit,\n\n375\n00:20:03.600 --> 00:20:06.600\nbut I've got this handy\nreference to all of my commands.\n\n376\n00:20:06.600 --> 00:20:09.800\nWe'll see how I can use that\nin an upcoming episode.\n\n377\n00:20:09.800 --> 00:20:13.810\nIf I don't like that I can always turn\nthat off with this button right up here,\n\n378\n00:20:13.810 --> 00:20:18.180\nallows me to bring that commands\nwindow back or hide it.\n\n379\n00:20:18.180 --> 00:20:23.090\nThe real power of the ISE, however, is\nthis button right here that says script.\n\n380\n00:20:23.090 --> 00:20:26.260\nRight click on this little down arrow.\n\n381\n00:20:26.260 --> 00:20:30.700\nYou see it splits my pane and\nI now have this area up at the top\n\n382\n00:20:30.700 --> 00:20:34.485\nthat's a little different from my\nPowerShell area down at the bottom.\n\n383\n00:20:34.485 --> 00:20:38.660\nNow I'm going to run a command and I know\nwe haven't really gone over commands and\n\n384\n00:20:38.660 --> 00:20:42.470\nwhat they are yet so\njust bear with me, just go, Cool and\n\n385\n00:20:42.470 --> 00:20:44.370\nI'll make sure we go back and explain it.\n\n386\n00:20:44.370 --> 00:20:49.030\nI'm just going to do a get-netipaddress.\n\n387\n00:20:49.030 --> 00:20:49.875\n&gt;&gt; Cool.\n&gt;&gt; All right.\n\n388\n00:20:49.875 --> 00:20:52.040\n&gt;&gt; [LAUGH]\n&gt;&gt; And, when I hit Enter,\n\n389\n00:20:52.040 --> 00:20:56.450\nwe can see the results show up\nin my pane right down here.\n\n390\n00:20:56.450 --> 00:20:59.805\nAnd if I do this from PowerShell,\nno difference,\n\n391\n00:20:59.805 --> 00:21:06.610\nget-netipaddress and\nI get this information back again.\n\n392\n00:21:06.610 --> 00:21:10.780\nWe'll come back and look at how we\nmanage and specific commands coming up.\n\n393\n00:21:10.780 --> 00:21:13.250\nRight now, just kinda get our\nfeet wet with PowerShell.\n\n394\n00:21:14.830 --> 00:21:18.160\nSo I can type the command here,\nas well as in normal PowerShell and\n\n395\n00:21:18.160 --> 00:21:18.950\nI get the same results.\n\n396\n00:21:18.950 --> 00:21:21.390\nSo what is this area up here?\n\n397\n00:21:21.390 --> 00:21:23.240\nWell this is my script pane.\n\n398\n00:21:23.240 --> 00:21:25.630\nWhen you type in something\nin PowerShell or\n\n399\n00:21:25.630 --> 00:21:30.750\nthe bottom pane of this PowerShell ISE,\nand you hit enter, that command executes.\n\n400\n00:21:30.750 --> 00:21:34.900\nYou saw me type in a command,\nhit enter, and it returned information.\n\n401\n00:21:34.900 --> 00:21:42.160\nIn the script pane up here,\nI do get-netipaddress and\n\n402\n00:21:42.160 --> 00:21:44.402\nI hit Enter, noting happens.\n\n403\n00:21:44.402 --> 00:21:45.500\nAll right?\n\n404\n00:21:45.500 --> 00:21:47.600\nThis is where I start writing scripts.\n\n405\n00:21:47.600 --> 00:21:50.350\nWhen we write scripts,\nscripts are collections\n\n406\n00:21:50.350 --> 00:21:55.350\nof commands that together are gonna\nperform some kind of function.\n\n407\n00:21:55.350 --> 00:21:58.150\nAnd so\nI can write my script up in the top and\n\n408\n00:21:58.150 --> 00:22:01.470\nnot have to worry about\nthe commands executing.\n\n409\n00:22:01.470 --> 00:22:02.930\nAnd could I do this in Notepad?\n\n410\n00:22:02.930 --> 00:22:07.010\nAbsolutely, I could write a script\nin Notepad if I know my commands.\n\n411\n00:22:07.010 --> 00:22:09.110\nBut that's the problem,\nI don't know the commands,\n\n412\n00:22:09.110 --> 00:22:12.010\nand all the required parameters and\noptional parameters.\n\n413\n00:22:12.010 --> 00:22:15.740\nBy doing it in here,\nI can take advantage of Intellisense, and\n\n414\n00:22:15.740 --> 00:22:18.640\nI can have it help me\ntype my commands out.\n\n415\n00:22:18.640 --> 00:22:21.340\nAnd show me the parameters\nthat are possible, and\n\n416\n00:22:21.340 --> 00:22:26.010\nthe possible values, without having\nto execute as soon as I type.\n\n417\n00:22:26.010 --> 00:22:29.190\nSo also a great way to store commands.\n\n418\n00:22:29.190 --> 00:22:31.470\nI'll show you guys that later.\n\n419\n00:22:31.470 --> 00:22:33.510\nYou'll see me use that\ntechnique in my show,\n\n420\n00:22:33.510 --> 00:22:36.670\nbecause I can have a script\nthat includes commands.\n\n421\n00:22:36.670 --> 00:22:41.130\nAnd I can execute one line at\na time within the PowerShell ISE.\n\n422\n00:22:41.130 --> 00:22:47.571\nFor example, let's do a get-netadapter,\n\n423\n00:22:47.571 --> 00:22:54.060\nget-command, no that's not a good\n\n424\n00:22:54.060 --> 00:22:58.680\none to show you just yet, get-alias,\nthat'll be a good one to show you.\n\n425\n00:22:58.680 --> 00:23:02.210\nSo there's three different commands,\nnone of which have executed.\n\n426\n00:23:02.210 --> 00:23:05.890\nNow if I click the play button up here, or\n\n427\n00:23:05.890 --> 00:23:09.180\nF5, all three of those\ncommands are going to execute.\n\n428\n00:23:09.180 --> 00:23:11.970\nYou see it going crazy down below?\n\n429\n00:23:11.970 --> 00:23:12.490\nAll right.\n\n430\n00:23:12.490 --> 00:23:15.390\n&gt;&gt; But what if I only wanted to see\nthe adapter, is that an option?\n\n431\n00:23:15.390 --> 00:23:16.450\n&gt;&gt; Yeah, exactly.\n\n432\n00:23:16.450 --> 00:23:18.980\nSo what I could do, is I could just\nhighlight, I don't even have to highlight,\n\n433\n00:23:18.980 --> 00:23:21.540\nI can just click on that line and\nhit F8 or\n\n434\n00:23:21.540 --> 00:23:25.660\nrun selected and\nit will do just that one command.\n\n435\n00:23:25.660 --> 00:23:28.250\nNotice down here in my\noutput it didn't scroll for\n\n436\n00:23:28.250 --> 00:23:31.330\na minute, it just did that one command.\n\n437\n00:23:31.330 --> 00:23:34.490\nSo you might have a file, and\nwe'll take about what this file is,\n\n438\n00:23:34.490 --> 00:23:37.240\nthe extension and\nthings like that as we go.\n\n439\n00:23:37.240 --> 00:23:41.708\nBut I might have a file that has big\nlong complex commands in there, and\n\n440\n00:23:41.708 --> 00:23:46.404\nI can simply open that file up,\nhighlight that command and then hit F8 and\n\n441\n00:23:46.404 --> 00:23:48.171\nrun just that one command.\n\n442\n00:23:48.171 --> 00:23:52.167\nSo the ISE, the integrated scripting\nenvironment, fantastic place to get\n\n443\n00:23:52.167 --> 00:23:55.798\nstarted because it's gonna help me\nwith what we call IntelliSense.\n\n444\n00:23:55.798 --> 00:23:58.880\nIt's gonna help me find my commands and\ntype my commands.\n\n445\n00:23:58.880 --> 00:24:02.157\nIt's also where we're going\nto begin automating things.\n\n446\n00:24:02.157 --> 00:24:05.200\nWhere we're gonna start writing scripts,\nthat don't execute.\n\n447\n00:24:05.200 --> 00:24:08.350\nThey execute later on and we'll take a\nlook at how we can write those scripts and\n\n448\n00:24:08.350 --> 00:24:11.000\nrun those scripts as we progress.\n\n449\n00:24:11.000 --> 00:24:12.500\nLast thing I want to show you.\n\n450\n00:24:12.500 --> 00:24:15.700\nOne more place we'll end\nup seeing PowerShell.\n\n451\n00:24:15.700 --> 00:24:19.400\nI'm actually going to flip on\nover to my domain controller and\n\n452\n00:24:19.400 --> 00:24:22.960\nopen up the Active Directory\nAdministrative Center.\n\n453\n00:24:22.960 --> 00:24:26.740\nThis was new back in 2008, I believe.\n\n454\n00:24:26.740 --> 00:24:28.035\nI don't know if you remember.\n\n455\n00:24:28.035 --> 00:24:29.600\n&gt;&gt; Back at the.\n&gt;&gt; I wanna say\n\n456\n00:24:29.600 --> 00:24:32.190\nthe Administrative Center was 2008.\n\n457\n00:24:32.190 --> 00:24:34.930\nBut this is when we really started\nseeing PowerShell take over in\n\n458\n00:24:34.930 --> 00:24:38.310\nthe background in a lot\nof our Windows products.\n\n459\n00:24:38.310 --> 00:24:40.900\nAnd the administrative center,\nyou know we had a tool.\n\n460\n00:24:40.900 --> 00:24:42.090\nI know.\nI don't know about you,\n\n461\n00:24:42.090 --> 00:24:44.770\nCherokee, I know as a system admin,\nlike why do I need this?\n\n462\n00:24:44.770 --> 00:24:47.610\n&gt;&gt; Active directors and users in computers\nare probably already familiar with it,\n\n463\n00:24:47.610 --> 00:24:49.860\nand you got to learn it and like it.\n\n464\n00:24:49.860 --> 00:24:50.660\n&gt;&gt; I loved it.\n&gt;&gt; [LAUGH]\n\n465\n00:24:50.660 --> 00:24:52.230\n&gt;&gt; And I still use it to this day.\n\n466\n00:24:52.230 --> 00:24:54.800\nI find myself rarely going to\nthe Administrative Center.\n\n467\n00:24:54.800 --> 00:24:58.350\nBut is is the new and improved\nActive Directory users and computers.\n\n468\n00:24:58.350 --> 00:25:00.720\nAnd the big difference,\neverything you did in users and\n\n469\n00:25:00.720 --> 00:25:04.420\ncomputers, we did in the Administrative\nCenter, you could do it in either one.\n\n470\n00:25:04.420 --> 00:25:08.310\nThe difference was that the Administrative\nCenter is actually firing Powershell\n\n471\n00:25:08.310 --> 00:25:14.740\ncommands in the background,\nrather than using old CLI-based commands.\n\n472\n00:25:14.740 --> 00:25:21.700\nFor example, if I go into lab here, and\nI'm going to find my users container.\n\n473\n00:25:21.700 --> 00:25:26.671\nAnd, I'm just gonna make a new user, so\n\n474\n00:25:26.671 --> 00:25:31.798\nI'll go new, user and let's do, oops.\n\n475\n00:25:31.798 --> 00:25:32.616\nDid I spell that right?\n\n476\n00:25:32.616 --> 00:25:34.539\n&gt;&gt; I don't know I can't see that far.\n\n477\n00:25:34.539 --> 00:25:35.679\n&gt;&gt; Definitely not two Os.\n\n478\n00:25:35.679 --> 00:25:39.750\n&gt;&gt; [LAUGH]\n&gt;&gt; Okay, that's better.\n\n479\n00:25:39.750 --> 00:25:42.203\n&gt;&gt; I'm just going to\nmake a user real quick.\n\n480\n00:25:42.203 --> 00:25:46.134\nI got his log on name,\nI'll put in his password here and\n\n481\n00:25:46.134 --> 00:25:51.194\nI think I've got all the requirements,\noop I need a SAM account name.\n\n482\n00:25:51.194 --> 00:25:53.480\nNate and I'm gonna click Okay.\n\n483\n00:25:53.480 --> 00:25:55.970\nAnd it should create that account.\n\n484\n00:25:55.970 --> 00:25:56.620\nRight?\n\n485\n00:25:56.620 --> 00:25:58.500\nSo, nothing new, nothing fancy there.\n\n486\n00:25:58.500 --> 00:26:00.010\nYou use the GUI Mike to do that.\n\n487\n00:26:00.010 --> 00:26:01.360\nI thought this was a Power Shell show.\n\n488\n00:26:01.360 --> 00:26:05.110\nBut down at the bottom of this active\ndirectory administrative center,\n\n489\n00:26:05.110 --> 00:26:08.070\nyou see this Windows PowerShell history?\n\n490\n00:26:08.070 --> 00:26:10.810\nThe little chevron over\nhere that I can click on.\n\n491\n00:26:10.810 --> 00:26:14.090\nAnd when I do that, I'm gonna slide this\nup so we can see it a little better.\n\n492\n00:26:14.090 --> 00:26:18.140\nHere I can see all the commands\nthat got executed.\n\n493\n00:26:18.140 --> 00:26:23.170\nNew Dash AD user, and\nthe attributes, and the values\n\n494\n00:26:23.170 --> 00:26:27.700\nthat they got set to,and then a separate\ncommand, set dash AD account password.\n\n495\n00:26:27.700 --> 00:26:31.360\nBecause in the GUI I created\nthe account and set the password and\n\n496\n00:26:31.360 --> 00:26:32.870\nit was enabled automatically, right?\n\n497\n00:26:32.870 --> 00:26:36.850\n&gt;&gt; So, here we can just see how that the\ncommands are broken down, see the syntax,\n\n498\n00:26:36.850 --> 00:26:40.270\nand like at least maybe\nsee that relationship is\n\n499\n00:26:40.270 --> 00:26:44.680\ncoming together here between a graphical\nuser interface and those commands there.\n\n500\n00:26:44.680 --> 00:26:45.490\n&gt;&gt; Exactly right.\n\n501\n00:26:45.490 --> 00:26:50.450\nSo, if you want to learn how to create\na new user in Powershell, go create\n\n502\n00:26:50.450 --> 00:26:53.260\none in the Administrative Center, and\nthen come in here and look at the command.\n\n503\n00:26:53.260 --> 00:26:57.880\nAnd I can copy this out,\nit gives us the ability to copy from here.\n\n504\n00:26:57.880 --> 00:27:00.880\nSo I can copy this command,\nI can take it over to the ISE,\n\n505\n00:27:00.880 --> 00:27:03.690\nI don't have the ISE\nfired up on this machine.\n\n506\n00:27:03.690 --> 00:27:05.600\nI'll fire it up real quick.\n\n507\n00:27:05.600 --> 00:27:06.560\nI can copy that out.\n\n508\n00:27:07.990 --> 00:27:10.688\nAnd I could come over here and\nstart pasting that in.\n\n509\n00:27:10.688 --> 00:27:12.517\nWhoops, where'd my script go?\n\n510\n00:27:12.517 --> 00:27:13.160\nThere it is.\n\n511\n00:27:13.160 --> 00:27:14.290\nI'm clicking too fast for it.\n\n512\n00:27:15.610 --> 00:27:18.120\nAnd there's my command, right?\n\n513\n00:27:18.120 --> 00:27:19.250\nAll ready to go.\n\n514\n00:27:19.250 --> 00:27:20.510\nSo now I can save that.\n\n515\n00:27:20.510 --> 00:27:22.020\nI can start adding parameters.\n\n516\n00:27:22.020 --> 00:27:25.810\nTake out the name Nate, for example and\nstart making that parameter base and\n\n517\n00:27:25.810 --> 00:27:28.710\nstart automating the creation\nof user accounts.\n\n518\n00:27:28.710 --> 00:27:31.480\nSo, I just wanted you to see that because\nI think some people don't realize\n\n519\n00:27:31.480 --> 00:27:32.080\nthat's there.\n\n520\n00:27:32.080 --> 00:27:33.480\nWe see PowerShell.\n\n521\n00:27:33.480 --> 00:27:38.460\nWe see a PowerShell ISE, but don't\nrealize that I can also see PowerShell\n\n522\n00:27:38.460 --> 00:27:40.490\nhere in the active directory\nof Administrative Center.\n\n523\n00:27:40.490 --> 00:27:41.170\nLike I said,\n\n524\n00:27:41.170 --> 00:27:45.340\nit's a great way to kind of get started\nwith administration with PowerShell.\n\n525\n00:27:45.340 --> 00:27:48.530\n&gt;&gt; Well, it sounds like there's a lot that\nwe have to learn here, especially if we\n\n526\n00:27:48.530 --> 00:27:52.430\nhaven't worked with PowerShell before, but\nwe really gonna be setting our self up for\n\n527\n00:27:52.430 --> 00:27:56.330\nsuccess by getting familiar with it and\nworking smarter and\n\n528\n00:27:56.330 --> 00:27:59.790\nnot harder being a little more efficient\nby taking advantage this tool.\n\n529\n00:27:59.790 --> 00:28:03.480\nSo I'm excited about that's, thank you for\njoining us today Mike and thank you for\n\n530\n00:28:03.480 --> 00:28:06.341\njoining us as well, but for\nthis show will go ahead and sign out.\n\n531\n00:28:06.341 --> 00:28:07.781\nI've been your host Cherokee Boose.\n\n532\n00:28:07.781 --> 00:28:08.825\n&gt;&gt; And I'm Mike Rodrick.\n\n533\n00:28:08.825 --> 00:28:12.006\n&gt;&gt; See you next time on ITProTV.\n\n534\n00:28:12.006 --> 00:28:18.011\n[MUSIC]\n\n535\n00:28:18.011 --> 00:28:19.910\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "237912534"
        },
        {
          "description": "In this episode, Mike and Cherokee explain the basic syntax of PowerShell. They look at listing installed and available modules, and how to import new modules. They also show how to search for cmdlets.",
          "length": "1828",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-1-basic_syntax_and_help-100917-PGM.00_30_14_00.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-1-basic_syntax_and_help-100917-PGM.00_30_14_00.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-1-basic_syntax_and_help-100917-PGM.00_30_14_00.Still002-sm.jpg",
          "title": "Basic Syntax and Help",
          "transcript": "WEBVTT\n\n1\n00:00:00.200 --> 00:00:02.468\nWelcome to ITProTV, I'm your host Don.\n\n2\n00:00:02.468 --> 00:00:06.453\n[INAUDIBLE] [CROSSTALK]\n\n3\n00:00:06.453 --> 00:00:07.643\n[MUSIC]\n\n4\n00:00:07.643 --> 00:00:10.777\n&gt;&gt; You're watching ITPrO.TV.\n\n5\n00:00:10.777 --> 00:00:15.840\n&gt;&gt; Welcome back to your PowerShell series,\nI'm your show host Cherokee Boose.\n\n6\n00:00:15.840 --> 00:00:19.930\n&gt;&gt; In this episode, we'll be taking a look\nat the basics and also getting help.\n\n7\n00:00:19.930 --> 00:00:23.908\nAnd to help us with that today, we have\nMr. Mike Rodrick, how's it going Mike?\n\n8\n00:00:23.908 --> 00:00:26.061\n&gt;&gt; No not me,\nyou're gonna get help from PowerShell.\n\n9\n00:00:26.061 --> 00:00:28.290\n[LAUGH]\n&gt;&gt; I'm not here, no I'm teasing.\n\n10\n00:00:28.290 --> 00:00:30.200\nI'm doing great, Cherokee,\nthanks for having me back.\n\n11\n00:00:30.200 --> 00:00:34.970\nAnd yes, you're exactly right, today we're\ngonna take a look at some basic syntax,\n\n12\n00:00:34.970 --> 00:00:40.290\nhow we interact with PowerShell and\nwhere to get help, when needed.\n\n13\n00:00:40.290 --> 00:00:42.830\nBecause as we start out,\nwe're gonna need help.\n\n14\n00:00:42.830 --> 00:00:46.630\nAnd you've got us here ITPROTV,\nyou can come back and ask questions.\n\n15\n00:00:46.630 --> 00:00:49.900\nYou can email me cherokee@ITPRO.tv.\n\n16\n00:00:49.900 --> 00:00:54.010\n[LAUGH]\n&gt;&gt; Or you can rewatch all these videos.\n\n17\n00:00:54.010 --> 00:00:57.910\nBut yeah, that's what we're gonna\ntry to accomplish in this episode.\n\n18\n00:00:57.910 --> 00:01:01.037\nSo starting out,\nlet's get some terminology down.\n\n19\n00:01:01.037 --> 00:01:05.706\nWhen we talk about PowerShell,\nwhat we end up executing or\n\n20\n00:01:05.706 --> 00:01:08.580\nrunning are known as commandlets.\n\n21\n00:01:08.580 --> 00:01:13.798\nA commandlet is a command\nin Windows PowerShell,\n\n22\n00:01:13.798 --> 00:01:17.790\nsomething like Get-NetIPAddress.\n\n23\n00:01:17.790 --> 00:01:19.135\nThat would be a commandlet.\n\n24\n00:01:19.135 --> 00:01:23.430\nThat's something that I would type in and\nexecute in Windows PowerShell.\n\n25\n00:01:23.430 --> 00:01:26.900\nAnd there are literally\nthousands of commandlets.\n\n26\n00:01:26.900 --> 00:01:32.000\nThese commandlets, in order to keep it,\nwhat's a good way to say this,\n\n27\n00:01:32.000 --> 00:01:36.040\nif we just gave you PowerShell and\nevery possible command.\n\n28\n00:01:36.040 --> 00:01:37.065\n&gt;&gt; Maybe organize.\n\n29\n00:01:37.065 --> 00:01:38.381\n&gt;&gt; It's gonna be bloated, right,\n\n30\n00:01:38.381 --> 00:01:40.973\nthere's stuff in there that you\ndon't use everyday or use ever.\n\n31\n00:01:40.973 --> 00:01:42.462\n&gt;&gt; Streamlined.\n\n32\n00:01:42.462 --> 00:01:46.110\n&gt;&gt; Yes, to keep it streamlined, I like\nthat terminology there we'll use that,\n\n33\n00:01:46.110 --> 00:01:51.060\nto keep it streamlined our commandlets\nare organized in what we call modules.\n\n34\n00:01:51.060 --> 00:01:55.310\nAnd a module, is a collection\nof commandlets and other things.\n\n35\n00:01:55.310 --> 00:01:59.560\nThere's manifests, trying think of\nwhat else we can find in module.\n\n36\n00:01:59.560 --> 00:02:04.800\nThere's a, strips can be in modules,\nseveral things but a module contains\n\n37\n00:02:04.800 --> 00:02:10.040\na set of commandlets typically in\nsupporting files and resources.\n\n38\n00:02:10.040 --> 00:02:11.820\nThat are related, all right?\n\n39\n00:02:11.820 --> 00:02:15.190\nLike there's a module for DNS.\n\n40\n00:02:15.190 --> 00:02:18.120\nAll the commands I can\nuse to work with and\n\n41\n00:02:18.120 --> 00:02:21.810\nmanage DNS, are in a DNS server module.\n\n42\n00:02:21.810 --> 00:02:25.220\nThere's a DHCP server module,\nthere's an active directory module.\n\n43\n00:02:25.220 --> 00:02:28.920\nAnd so, I can get those modules\ndepending on what I need.\n\n44\n00:02:28.920 --> 00:02:30.310\n&gt;&gt; Well, Mike this all goes back to the,\n\n45\n00:02:30.310 --> 00:02:32.640\nI mean even if it's not at\nthe forefront of your mind.\n\n46\n00:02:32.640 --> 00:02:35.320\nIt kind of harkens back to\nsecurity if we think about it.\n\n47\n00:02:35.320 --> 00:02:37.030\nBecause we're still\nreducing our footprint, and\n\n48\n00:02:37.030 --> 00:02:38.110\nwe're hardening that system.\n\n49\n00:02:38.110 --> 00:02:40.290\nIf I'm not running DNS on a server,\n\n50\n00:02:40.290 --> 00:02:42.140\nthen I really don't need all\nthat additional coding there.\n\n51\n00:02:42.140 --> 00:02:43.300\n&gt;&gt; Don't need all those commands.\n\n52\n00:02:43.300 --> 00:02:44.030\nExactly right.\n\n53\n00:02:44.030 --> 00:02:46.560\nSo, it helps us stay a little more secure.\n\n54\n00:02:46.560 --> 00:02:48.620\nAnd again, it keeps things streamlined.\n\n55\n00:02:48.620 --> 00:02:52.400\nAnd we have access to the only\ncmdlets that we need.\n\n56\n00:02:52.400 --> 00:02:53.790\nBut importing new modules, right?\n\n57\n00:02:53.790 --> 00:02:57.720\nWhen I add new roles, or features,\nor need new capabilities,\n\n58\n00:02:57.720 --> 00:03:01.410\nadding additional modules\nis going to be very easy.\n\n59\n00:03:01.410 --> 00:03:04.670\nAnd we'll take a look at how we do that,\nand also we're talk about when\n\n60\n00:03:04.670 --> 00:03:09.019\nthey get imported, cuz that\nactually change in PowerShell 5.0.\n\n61\n00:03:10.120 --> 00:03:11.150\nSo, we got Syntax.\n\n62\n00:03:11.150 --> 00:03:17.740\nWe've got Cmndlets, which are inside\nmodules and we know what modules are.\n\n63\n00:03:17.740 --> 00:03:23.130\nNow, lets start by talking about\nthe Cmndlets and their structure.\n\n64\n00:03:23.130 --> 00:03:24.570\nAll right?\n\n65\n00:03:24.570 --> 00:03:26.450\nSo what I'm gonna do is I'm\non my Windows 10 machine,\n\n66\n00:03:26.450 --> 00:03:29.070\nand I'm gonna open up Powershell.\n\n67\n00:03:29.070 --> 00:03:31.320\nBy simply clicking on my icon down there.\n\n68\n00:03:31.320 --> 00:03:34.610\nAnd let's run a few cmdlets.\n\n69\n00:03:34.610 --> 00:03:42.390\nNow cmdlets are always going to\nfollow the format verb-noun.\n\n70\n00:03:42.390 --> 00:03:45.610\nSo verb, and no spaces in there,\nverb dash noun.\n\n71\n00:03:45.610 --> 00:03:48.190\nIt is not case sensitive.\n\n72\n00:03:48.190 --> 00:03:52.150\nSo, you can type this all lower case or\nyou can do your shift,\n\n73\n00:03:52.150 --> 00:03:53.720\nif you're good with your shift keys.\n\n74\n00:03:53.720 --> 00:03:57.110\nBut it's not case sensitive in PowerShell.\n\n75\n00:03:57.110 --> 00:03:59.050\n&gt;&gt; You know, Mike, something that I do.\n\n76\n00:03:59.050 --> 00:04:00.635\nI do this a lot, even on shows.\n\n77\n00:04:00.635 --> 00:04:06.376\nJust to try to keep that case sensitivity\naccurate, just for like memory retention,\n\n78\n00:04:06.376 --> 00:04:11.257\nwhile I'm learning and practicing,\nbut yeah, that's just my thing.\n\n79\n00:04:11.257 --> 00:04:13.520\n&gt;&gt; Yeah, definitely if that\nhelps you that's fantastic.\n\n80\n00:04:13.520 --> 00:04:16.220\nI will tell you,\nI kinda like typing all lower case.\n\n81\n00:04:16.220 --> 00:04:16.820\n&gt;&gt; Okay.\n&gt;&gt; And\n\n82\n00:04:16.820 --> 00:04:20.300\nthen using my tab auto fill which is\na feature we haven't talked about yet,\n\n83\n00:04:20.300 --> 00:04:23.176\nbecause what it fixes the case,\nI know that I've typed it correctly.\n\n84\n00:04:23.176 --> 00:04:24.656\n[LAUGH]\n&gt;&gt; And that it's not an unknown command.\n\n85\n00:04:24.656 --> 00:04:25.233\n&gt;&gt; Okay.\n\n86\n00:04:25.233 --> 00:04:27.169\n&gt;&gt; I use it to kind of watch myself.\n\n87\n00:04:27.169 --> 00:04:28.146\n[CROSSTALK]\n&gt;&gt; That's a good idea.\n\n88\n00:04:28.146 --> 00:04:28.712\nI never about that.\n\n89\n00:04:28.712 --> 00:04:29.427\n&gt;&gt; I might teach you something today.\n\n90\n00:04:29.427 --> 00:04:29.990\n&gt;&gt; Okay.\n[LAUGH]\n\n91\n00:04:29.990 --> 00:04:31.650\n&gt;&gt; All right, so let's take a look.\n\n92\n00:04:31.650 --> 00:04:35.500\nSo when I say it's verb-noun,\nthere's hundreds and\n\n93\n00:04:35.500 --> 00:04:37.455\nhundreds of nouns that we can use.\n\n94\n00:04:37.455 --> 00:04:41.900\nBut there's a limited\nnumber of verbs we can use.\n\n95\n00:04:41.900 --> 00:04:43.080\nThere's like get.\n\n96\n00:04:43.080 --> 00:04:46.260\nAnd get is going to be a read command.\n\n97\n00:04:46.260 --> 00:04:50.985\nGet me some information like what you\nsaw me run, get in previous episode,\n\n98\n00:04:50.985 --> 00:04:53.830\nget-netIPAddress.\n\n99\n00:04:53.830 --> 00:04:59.680\nSo the get is the verb, netIPAddress is\nthe noun, what is it that I want to get?\n\n100\n00:04:59.680 --> 00:05:02.860\nIn this particular command,\ndoesn't need any parameters.\n\n101\n00:05:02.860 --> 00:05:06.040\nSo I can just hit enter and it executes.\n\n102\n00:05:06.040 --> 00:05:07.194\nSo that's the format again.\n\n103\n00:05:07.194 --> 00:05:09.706\nI want you to pay attention not\nto the command just yet, but\n\n104\n00:05:09.706 --> 00:05:10.740\nmore about the format.\n\n105\n00:05:10.740 --> 00:05:13.590\nIt's verb-noun.\n\n106\n00:05:13.590 --> 00:05:17.513\nWhen I run those commands.\n\n107\n00:05:17.513 --> 00:05:19.013\nWhat's another one I\ncould show you here so.\n\n108\n00:05:19.013 --> 00:05:22.350\n&gt;&gt; Well maybe if that\nobject doesn't exist yet.\n\n109\n00:05:22.350 --> 00:05:25.850\n&gt;&gt; If I do a get-tool, let's talk\nabout the tab autofill real quick.\n\n110\n00:05:25.850 --> 00:05:29.330\nCuz you're gonna see me using\nthat I've already used it, and\n\n111\n00:05:29.330 --> 00:05:34.460\nas we type commands, it will\nautofill based on what you've typed,\n\n112\n00:05:34.460 --> 00:05:36.450\nI think I mentioned this\nin the first episode.\n\n113\n00:05:36.450 --> 00:05:37.050\nSo let's watch.\n\n114\n00:05:37.050 --> 00:05:38.870\nI'm gonna go do that\nget-netIPaddress again.\n\n115\n00:05:38.870 --> 00:05:40.527\nI'm gonna type in get.\n\n116\n00:05:40.527 --> 00:05:41.454\nAnd if I hit Tab,\n\n117\n00:05:41.454 --> 00:05:45.247\nit just starts out with the very\nfirst command that starts with get.\n\n118\n00:05:45.247 --> 00:05:47.390\nIn this case, ACL.\n\n119\n00:05:47.390 --> 00:05:50.970\nAnd I'm just hitting Tab again,\nand again, and again.\n\n120\n00:05:50.970 --> 00:05:55.400\nAnd technically, I could sit here and\nhold Tab down, and\n\n121\n00:05:55.400 --> 00:05:58.180\nI could eventually get to the ends.\n\n122\n00:05:58.180 --> 00:06:02.412\nThere's net adapter,we're getting close,\n\n123\n00:06:02.412 --> 00:06:06.904\nnet IP e, f, g ,h, i, op, there it was,-\n&gt;&gt; There's gotta be\n\n124\n00:06:06.904 --> 00:06:07.560\nan easier way to do that.\n\n125\n00:06:07.560 --> 00:06:09.599\n&gt;&gt; Then IP address,yeah exactly right?\n\n126\n00:06:09.599 --> 00:06:10.360\n[LAUGH]\n&gt;&gt; So\n\n127\n00:06:10.360 --> 00:06:12.100\nlet's find something a little bit easier,\n\n128\n00:06:12.100 --> 00:06:17.020\ncuz that's kind of crazy, get-,\nI know it starts with a net.\n\n129\n00:06:17.020 --> 00:06:20.400\nAnd now when I Tab those\nthat didn't start with ACL,\n\n130\n00:06:20.400 --> 00:06:22.410\nbecause you've already typed in n and\nan e,\n\n131\n00:06:22.410 --> 00:06:27.880\nit's showing me all the commands that\nstart with ne, still not too close though.\n\n132\n00:06:27.880 --> 00:06:31.993\nSo let's see if I can go\na little bit further,\n\n133\n00:06:31.993 --> 00:06:36.987\nGet-NetIP and look at there,\nthat's the one I want.\n\n134\n00:06:36.987 --> 00:06:38.096\nAnd watch what it's doing.\n\n135\n00:06:38.096 --> 00:06:42.995\nIf I do get-netIP tab,\nyou see how it finished\n\n136\n00:06:42.995 --> 00:06:48.655\nthe name of the command and\nit fixes the case on there.\n\n137\n00:06:48.655 --> 00:06:51.265\nAnd that's what I was telling\nCherokee a minute ago.\n\n138\n00:06:51.265 --> 00:06:55.135\nCuz I could type get-netIP address and\n\n139\n00:06:55.135 --> 00:06:59.009\nuse the proper case and just hit enter.\n\n140\n00:06:59.009 --> 00:07:02.322\nAnd, it's gonna work just find, all right?\n\n141\n00:07:02.322 --> 00:07:09.300\nBut if I do get-netIPAddress,\nnotice I stop at the A and I hit Tab.\n\n142\n00:07:09.300 --> 00:07:11.560\nIt finishes and fixes the case for me.\n\n143\n00:07:11.560 --> 00:07:14.110\nI hit enter and it executes.\n\n144\n00:07:14.110 --> 00:07:20.610\nAnd the reason I like to do is what\nif I typed in ge -NetIPAddress.\n\n145\n00:07:24.414 --> 00:07:26.421\nI-d-d-r-e-s-s, there we go and hit Enter.\n\n146\n00:07:26.421 --> 00:07:29.650\nWhat the heck,\nwhy didn't that command work?\n\n147\n00:07:29.650 --> 00:07:34.101\nNot realizing I had an extra E\nover there where it says Net.\n\n148\n00:07:34.101 --> 00:07:39.222\nRight, if I use my Tab autofill,\nso there's my typo.\n\n149\n00:07:39.222 --> 00:07:42.250\nIf I try to Tab autofill nothing happens.\n\n150\n00:07:42.250 --> 00:07:44.200\nHands off the keyboard\nnothing is happening there.\n\n151\n00:07:44.200 --> 00:07:48.146\nIt's not autofilling, and\nthat is my indicator wait a second,\n\n152\n00:07:48.146 --> 00:07:52.900\nsomething must be wrong if it's not\nautofilling the rest of my command.\n\n153\n00:07:52.900 --> 00:07:58.024\nLook there's an extra e in netIPAddress.\n\n154\n00:07:58.024 --> 00:08:00.620\nAnd now I can use my tab autofill,\nall right?\n\n155\n00:08:00.620 --> 00:08:04.617\nSo, one, love Tab autofill, because\nit makes my life a whole lot easier.\n\n156\n00:08:04.617 --> 00:08:05.991\nTwo, it actually helps me-\n&gt;&gt; [LAUGH]\n\n157\n00:08:05.991 --> 00:08:07.012\n&gt;&gt; With my typos.\n\n158\n00:08:07.012 --> 00:08:08.697\n&gt;&gt; Yeah, I was gonna say,\nmaybe that's why I get all these typos.\n\n159\n00:08:08.697 --> 00:08:10.708\n[LAUGH]\n&gt;&gt; [LAUGH] Yes, you just know,\n\n160\n00:08:10.708 --> 00:08:14.981\nif it doesn't tab autofill,\nyou've done something wrong, and\n\n161\n00:08:14.981 --> 00:08:17.790\nthat is the idea behind that tab autofill.\n\n162\n00:08:17.790 --> 00:08:22.210\nI mean I know the idea is that it [COUGH]\nmakes it easier for you to type, but\n\n163\n00:08:22.210 --> 00:08:26.790\nit can also help you fix errors,\nbefore they happen, all right.\n\n164\n00:08:26.790 --> 00:08:27.350\nAll right, so\n\n165\n00:08:27.350 --> 00:08:31.330\nthat's a little bit about the command\nstructure, again verb dash now.\n\n166\n00:08:31.330 --> 00:08:35.412\nNow, I don't know what\ncommands I have available.\n\n167\n00:08:35.412 --> 00:08:39.840\nI mean you've told me there are lots and\nlots of commands, how can I see them all?\n\n168\n00:08:39.840 --> 00:08:40.630\nWell, that's easy.\n\n169\n00:08:40.630 --> 00:08:44.227\nWe can do Get-Command.\n\n170\n00:08:44.227 --> 00:08:48.077\nOkay, and you see me typing in the first\nfew letters, and then hitting Tab, and\n\n171\n00:08:48.077 --> 00:08:49.530\nit's finishing that for me.\n\n172\n00:08:49.530 --> 00:08:51.621\nSo I'll do Get-Command, I'll hit Enter.\n\n173\n00:08:51.621 --> 00:08:55.775\n[SOUND] A lot of them.\n\n174\n00:08:55.775 --> 00:08:57.527\n&gt;&gt; That's a lot.\n&gt;&gt; That's a lot of commands.\n\n175\n00:08:57.527 --> 00:09:01.060\n&gt;&gt; And it's kinda funny how\nyou use the Get-Command.\n\n176\n00:09:01.060 --> 00:09:04.490\nAnd you can see there it\nrendered back commandlets.\n\n177\n00:09:04.490 --> 00:09:06.910\nAnd usually, Mike,\nwhen I hear that term commandlet,\n\n178\n00:09:06.910 --> 00:09:10.430\nI think about the little\nbaby verb noun options.\n\n179\n00:09:10.430 --> 00:09:13.639\nAnd then it's when I\ncouple those with two or\n\n180\n00:09:13.639 --> 00:09:17.737\nmore more commandlets,\nthat's when I get a command.\n\n181\n00:09:17.737 --> 00:09:19.810\nYeah, that's a good way to look at it,\nI like that.\n\n182\n00:09:19.810 --> 00:09:21.850\nSo commandlets are little baby commands.\n\n183\n00:09:21.850 --> 00:09:23.188\n&gt;&gt; Uh-huh.\n[LAUGH]\n\n184\n00:09:23.188 --> 00:09:25.833\n&gt;&gt; Now it does return functions as well.\n\n185\n00:09:25.833 --> 00:09:29.077\nSo we can see functions, and if I keep\nscrolling, it's just such a long list,\n\n186\n00:09:29.077 --> 00:09:30.514\nyou probably didn't see it go by.\n\n187\n00:09:30.514 --> 00:09:32.350\nIf [INAUDIBLE] somewhere-\n&gt;&gt; You didn't miss.\n\n188\n00:09:32.350 --> 00:09:35.035\n[LAUGH]\n&gt;&gt; Get to the top of these functions.\n\n189\n00:09:35.035 --> 00:09:41.440\nLet's just grab this guy and\ngo back up here.\n\n190\n00:09:41.440 --> 00:09:43.310\nThere's aliases, as well.\n\n191\n00:09:43.310 --> 00:09:48.420\nSo we got aliases, functions, and\nthen all the way down towards the bottom,\n\n192\n00:09:48.420 --> 00:09:51.770\nagain, we got the commandlets.\n\n193\n00:09:51.770 --> 00:09:52.812\nAnd I think that's where it is.\n\n194\n00:09:52.812 --> 00:09:57.104\nAnd you probably hear me, sorry, if that's\nreally annoying on a Microphone there\n\n195\n00:09:57.104 --> 00:10:00.740\nas I scroll my mouse feverishly to\nget back down, whoops, to the end.\n\n196\n00:10:02.200 --> 00:10:06.910\nAll right, so Get-Command is\na way to list those commands.\n\n197\n00:10:06.910 --> 00:10:08.704\nLet's take a look at how many there were.\n\n198\n00:10:08.704 --> 00:10:12.681\nWe can do a Get-Command, and\nI'm gonna do something, you know what,\n\n199\n00:10:12.681 --> 00:10:15.994\nwe'll wait on that,\nbecause we don't know about piping yet.\n\n200\n00:10:15.994 --> 00:10:17.610\nSo we'll hold off.\n\n201\n00:10:17.610 --> 00:10:18.899\nActually, we're gonna do it right now.\n\n202\n00:10:18.899 --> 00:10:22.447\n&gt;&gt; Okay,\n[LAUGH] I love it when it's on the fly.\n\n203\n00:10:22.447 --> 00:10:27.017\n&gt;&gt; Get-Command, I know, well,\nit's tough to teach this beginning part,\n\n204\n00:10:27.017 --> 00:10:31.675\ncuz there's so many things I wanna show\nyou, that we don't know about yet.\n\n205\n00:10:31.675 --> 00:10:35.110\nI don't know, you guys might have the same\nquestion, I just showed you a list of\n\n206\n00:10:35.110 --> 00:10:37.850\ncommandlets, and you might think,\nwow, how many are there?\n\n207\n00:10:39.030 --> 00:10:40.320\nWell, we count them, right?\n\n208\n00:10:40.320 --> 00:10:43.205\nBut I gotta do something that we haven't\nlearned about, in order to count them.\n\n209\n00:10:43.205 --> 00:10:45.642\nSo that's why I-\n&gt;&gt; Okay, so it's kind of like,\n\n210\n00:10:45.642 --> 00:10:49.603\nlet's say we're little kids, and\nI have little blocks and bricks.\n\n211\n00:10:49.603 --> 00:10:53.246\nSo you're showing me all the individual\nlittle bricks with the commandlets, but\n\n212\n00:10:53.246 --> 00:10:56.886\nthen you're gonna show me like how I can\nuse them together, to build something and\n\n213\n00:10:56.886 --> 00:10:57.816\ncreate something.\n\n214\n00:10:57.816 --> 00:10:58.336\n&gt;&gt; I like that.\n\n215\n00:10:58.336 --> 00:10:59.844\nAll right, and we'll come back-\n&gt;&gt; [LAUGH]\n\n216\n00:10:59.844 --> 00:11:00.724\n&gt;&gt; And we'll talk,\n\n217\n00:11:00.724 --> 00:11:05.100\ncuz this is an extremely powerful feature\nof PowerShell, no pun intended there.\n\n218\n00:11:05.100 --> 00:11:09.890\nThe pipe character, the ability to\ntake the output from one command and\n\n219\n00:11:09.890 --> 00:11:12.190\nfeed it into another command, right?\n\n220\n00:11:12.190 --> 00:11:15.201\nThat's known as piping and\nwe'll take an extensive look at this,\n\n221\n00:11:15.201 --> 00:11:17.364\ncuz it's something you're\ngonna use a lot of.\n\n222\n00:11:17.364 --> 00:11:18.627\n&gt;&gt; Are you good at math?\n\n223\n00:11:18.627 --> 00:11:19.522\n&gt;&gt; No, not really.\n\n224\n00:11:19.522 --> 00:11:20.415\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH]\n\n225\n00:11:20.415 --> 00:11:22.246\n&gt;&gt; Because I'm not, but in my mind,\n\n226\n00:11:22.246 --> 00:11:24.962\nI feel like this is like\npeople who are good in math,\n\n227\n00:11:24.962 --> 00:11:27.380\nthey will just have\nan easier time with this.\n\n228\n00:11:27.380 --> 00:11:31.682\nBecause it's like you get that output and\nyou kind of like plug it into an equation,\n\n229\n00:11:31.682 --> 00:11:32.675\nyeah, so, okay.\n\n230\n00:11:32.675 --> 00:11:34.250\n[LAUGH].\n&gt;&gt; Yeah, absolutely.\n\n231\n00:11:34.250 --> 00:11:37.751\nThere's actually a function called\nmeasure, which lets me count things.\n\n232\n00:11:37.751 --> 00:11:38.834\nSo I'm just gonna pipe.\n\n233\n00:11:38.834 --> 00:11:41.820\nI'm gonna take that Get-Command,\nwhich is gonna run.\n\n234\n00:11:41.820 --> 00:11:45.050\nBut the output instead of\nbeing displayed on screen,\n\n235\n00:11:45.050 --> 00:11:49.090\nlike we just saw that big old long list of\ncommands, it's gonna take that output and\n\n236\n00:11:49.090 --> 00:11:52.550\nnot display it on the screen,\nbut hand it to the next command.\n\n237\n00:11:52.550 --> 00:11:54.970\nAnd the next command is\na function called measure,\n\n238\n00:11:54.970 --> 00:11:58.380\nwhich counts the number of\nlines in a resultant set.\n\n239\n00:11:58.380 --> 00:12:01.901\nSo I'm taking Get-Command,\nwhich returns this list of commands,\n\n240\n00:12:01.901 --> 00:12:05.557\nI'm handing it over to measure,\npiping it into the measure function.\n\n241\n00:12:05.557 --> 00:12:09.300\nAnd then measure's gonna do its job, and\nthat's what I'll see the output from.\n\n242\n00:12:09.300 --> 00:12:09.901\nLet's try it.\n\n243\n00:12:09.901 --> 00:12:16.886\nIf I hit Get-Command pipe measure,\nyou can see 1,469 commands.\n\n244\n00:12:16.886 --> 00:12:18.020\nSo there's a lot of them.\n\n245\n00:12:18.020 --> 00:12:21.510\nWe weren't kidding when we said\nthere's over 1,000 commands in there.\n\n246\n00:12:21.510 --> 00:12:25.130\n&gt;&gt; And that's just your default without\nadding any additional modules that may\n\n247\n00:12:25.130 --> 00:12:27.270\ncome with like adding rules or features.\n\n248\n00:12:27.270 --> 00:12:30.920\n&gt;&gt; Absolutely, absolutely, so\nthat's just going to get us to start.\n\n249\n00:12:30.920 --> 00:12:32.880\nSo Let's take a look.\n\n250\n00:12:32.880 --> 00:12:37.792\nThat brings another great point\nthat Cherokee has made there is,\n\n251\n00:12:37.792 --> 00:12:39.944\nis that all of them, right?\n\n252\n00:12:39.944 --> 00:12:41.461\nIs that all the commands there are?\n\n253\n00:12:41.461 --> 00:12:42.534\nAnd absolutely not.\n\n254\n00:12:42.534 --> 00:12:45.929\nAs we said towards the beginning of\nthis episode, PowerShell is modular.\n\n255\n00:12:45.929 --> 00:12:47.910\nIt is designed that way intentionally.\n\n256\n00:12:47.910 --> 00:12:51.250\nWe add modules to increase\nthe functionality,\n\n257\n00:12:51.250 --> 00:12:56.400\nto add additional command capabilities\nto our PowerShell, all right?\n\n258\n00:12:56.400 --> 00:12:59.450\nSo let's take a look,\nlet's just see how many I've got.\n\n259\n00:12:59.450 --> 00:13:01.970\nList command actually shows a lot.\n\n260\n00:13:01.970 --> 00:13:03.099\nIf we do list command.\n\n261\n00:13:05.534 --> 00:13:12.202\nOr sorry Get-Command -Listavailable,\nall right?\n\n262\n00:13:12.202 --> 00:13:14.904\nIf I can get this to go [SOUND].\n\n263\n00:13:14.904 --> 00:13:17.040\nI'm sorry, not -Listavailable,\n-Listimported.\n\n264\n00:13:17.040 --> 00:13:22.508\nSee there is a great example,\nI'm sitting here typing in -Listavailable,\n\n265\n00:13:22.508 --> 00:13:26.580\nI hit the a, went to tab,\nand nothing happened.\n\n266\n00:13:26.580 --> 00:13:29.293\nBecause there is no -Listavailable\nparameter for this command.\n\n267\n00:13:29.293 --> 00:13:31.979\n&gt;&gt; Right, so if sometimes I'll be\nthinking, I need to delete this.\n\n268\n00:13:31.979 --> 00:13:35.140\nAnd then you go to type and delete,\nbut no it's remove or whatever.\n\n269\n00:13:35.140 --> 00:13:36.656\nThat's where that comes in really handy.\n\n270\n00:13:36.656 --> 00:13:42.643\n&gt;&gt; Exactly, so I know it's not list a,\nIt's actually I, ListImported, all right?\n\n271\n00:13:42.643 --> 00:13:43.933\nAnd then let's count that as well.\n\n272\n00:13:43.933 --> 00:13:48.995\nI'll pipe that out to a measure, and 336.\n\n273\n00:13:48.995 --> 00:13:52.009\nSo out of the 1,469 commands,\n\n274\n00:13:52.009 --> 00:13:57.137\nonly 336 of those are available\nin this session, right?\n\n275\n00:13:57.137 --> 00:14:02.280\nIn other words, when I fired up\nPowerShell, it loads up certain modules.\n\n276\n00:14:02.280 --> 00:14:06.520\nThose commands that are part of those\nmodules, are available for me to use.\n\n277\n00:14:06.520 --> 00:14:10.590\nThere are other commands in\nmodules that are installed but\n\n278\n00:14:10.590 --> 00:14:12.470\nnot imported in this session.\n\n279\n00:14:12.470 --> 00:14:14.370\nThose modules are just sitting there, and\n\n280\n00:14:14.370 --> 00:14:17.380\nI don't have access to them\nthrough PowerShell immediately.\n\n281\n00:14:17.380 --> 00:14:21.840\nI would need to import those\nmodules into my active session,\n\n282\n00:14:21.840 --> 00:14:23.610\nthen I can have access to those commands.\n\n283\n00:14:23.610 --> 00:14:27.448\nSo that's the difference there\nbetween the two numbers.\n\n284\n00:14:27.448 --> 00:14:31.251\nThe get command is showing me all\nthe commands that my system has,\n\n285\n00:14:31.251 --> 00:14:35.472\nversus Get -Command -ListImported\nis showing me all the commands that\n\n286\n00:14:35.472 --> 00:14:38.746\nare available in this\nparticular PowerShell session.\n\n287\n00:14:38.746 --> 00:14:41.212\nAll right, so\nthat means I'm short quite a few,\n\n288\n00:14:41.212 --> 00:14:44.600\nthat means there's a lot more\nmodules that I don't have.\n\n289\n00:14:44.600 --> 00:14:48.540\nHow do I see what modules\nI have in this session?\n\n290\n00:14:48.540 --> 00:14:51.575\nWe simply do a Get-module command, right?\n\n291\n00:14:51.575 --> 00:14:55.346\nStill using that get verb, so\nwe've only used one verb so far, get,\n\n292\n00:14:55.346 --> 00:14:56.950\nit's our read verb.\n\n293\n00:14:56.950 --> 00:14:58.880\nGet module and hit enter.\n\n294\n00:14:59.950 --> 00:15:03.434\nAnd here I can see the modules\nthat are part of this session, or\n\n295\n00:15:03.434 --> 00:15:07.664\nthat have been uploaded, not uploaded,\nbut imported into this session.\n\n296\n00:15:07.664 --> 00:15:12.160\nI can see I've got a management module,\nI've got a utility module.\n\n297\n00:15:12.160 --> 00:15:15.320\nNetTCPIP is actually only there\n\n298\n00:15:15.320 --> 00:15:18.330\nbecause I've used one of the commands\nthat's part of that module.\n\n299\n00:15:18.330 --> 00:15:20.410\nI'll come back to that\nthought in just a second.\n\n300\n00:15:20.410 --> 00:15:21.710\nAnd then PSReadline.\n\n301\n00:15:21.710 --> 00:15:26.080\nNormally, on Windows 10, when you're fired\nup, the three modules you're gonna see by\n\n302\n00:15:26.080 --> 00:15:29.890\ndefault, utility,\nmanagement, and PSReadLine.\n\n303\n00:15:29.890 --> 00:15:34.074\nSo management includes commands\nlike Add-Computer, Add-Content.\n\n304\n00:15:34.074 --> 00:15:38.200\nUtility has Add-Member,\nAdd-Type, and a bunch of more.\n\n305\n00:15:38.200 --> 00:15:42.880\nPSReadLine is really something that it\nuses more than anything in the background,\n\n306\n00:15:42.880 --> 00:15:44.490\nwhen we're accessing files.\n\n307\n00:15:44.490 --> 00:15:47.571\nAnd the ability to,\nI was gonna sary grep, but\n\n308\n00:15:47.571 --> 00:15:51.530\nto read lines out of a file,\nthen process them, all right.\n\n309\n00:15:51.530 --> 00:15:56.684\nThis one is there because I used\nthat command get-netipaddress,\n\n310\n00:15:56.684 --> 00:15:59.913\nwhich is part of this module, all right.\n\n311\n00:15:59.913 --> 00:16:04.506\nWhich, in fact, let's do list available.\n\n312\n00:16:04.506 --> 00:16:08.717\nI'm gonna add to\nget-module- listavailable.\n\n313\n00:16:12.495 --> 00:16:15.122\nAnd look at all those modules.\n\n314\n00:16:15.122 --> 00:16:20.724\nSo there's a lot more available\nthan I have installed,\n\n315\n00:16:20.724 --> 00:16:24.580\nor imported into this session.\n\n316\n00:16:24.580 --> 00:16:26.850\nSo this is showing me,\nit shows me where they're from.\n\n317\n00:16:26.850 --> 00:16:30.432\nLike in the PowerShell 1.0\ndirectory called Modules,\n\n318\n00:16:30.432 --> 00:16:32.850\nyou'll see all of these modules here.\n\n319\n00:16:32.850 --> 00:16:36.160\nThere is that NetTCPIP module\nthat I actually have installed.\n\n320\n00:16:37.200 --> 00:16:42.190\nThere's a SMBShare module, for\nworking with SMBs, which you can\n\n321\n00:16:42.190 --> 00:16:45.520\nkinda see from the name, you can kinda\ntell what these modules deal with.\n\n322\n00:16:45.520 --> 00:16:50.113\nLike if I need to work with printers, I'd\nbet you this Print management module has\n\n323\n00:16:50.113 --> 00:16:53.190\nPowerShell command that\ndeal with printing, right?\n\n324\n00:16:53.190 --> 00:16:57.199\nOr scheduled task, there's a module\nthat has all the cmdlets that\n\n325\n00:16:57.199 --> 00:17:02.290\nare related to working with scheduled\ntasks or Window's updates, right.\n\n326\n00:17:02.290 --> 00:17:05.520\nSo in order to have these\ncommands available for\n\n327\n00:17:05.520 --> 00:17:07.920\nme to use, I need to import them.\n\n328\n00:17:08.990 --> 00:17:11.970\nNow you might be thinking to yourself,\nyour lying to me, Mike.\n\n329\n00:17:11.970 --> 00:17:14.800\nI saw you use a command that\nyou said wasn't there, and\n\n330\n00:17:14.800 --> 00:17:17.590\nbecause you ran the command\nit's there now.\n\n331\n00:17:17.590 --> 00:17:19.390\nAnd you didn't import anything.\n\n332\n00:17:19.390 --> 00:17:21.540\nAnd you'd be right, I would be a liar.\n\n333\n00:17:21.540 --> 00:17:23.118\nI can't do it, no.\n\n334\n00:17:23.118 --> 00:17:24.250\nMy nose is growing.\n\n335\n00:17:24.250 --> 00:17:27.463\nNo, it's actually something\nnew with PowerShell 5.0.\n\n336\n00:17:27.463 --> 00:17:32.546\nIt used to be that we couldn't type\na command that wasn't part of my session.\n\n337\n00:17:32.546 --> 00:17:35.276\nI had to do one of two things.\n\n338\n00:17:35.276 --> 00:17:39.020\nI could, at the beginning of my session,\nmanually import a module.\n\n339\n00:17:39.020 --> 00:17:41.813\nUse the import-module cmdlet, and\n\n340\n00:17:41.813 --> 00:17:45.786\nthen the name of that module\nthat I wanted to import.\n\n341\n00:17:45.786 --> 00:17:47.736\nThat would load the module up, and\n\n342\n00:17:47.736 --> 00:17:51.870\nnow those cmdlets would be\navailable in my PowerShell session.\n\n343\n00:17:51.870 --> 00:17:55.520\nThis is what we did in previous\nversions of PowerShell.\n\n344\n00:17:55.520 --> 00:17:57.820\nNow we could also,\nI said there was two things we could do.\n\n345\n00:17:57.820 --> 00:18:00.220\nOne, manually import at\nthe beginning of your session.\n\n346\n00:18:00.220 --> 00:18:02.690\nWe could also modify our profile.\n\n347\n00:18:02.690 --> 00:18:06.600\nPowerShell has profiles that we're gonna\ntake a look at in future episodes.\n\n348\n00:18:06.600 --> 00:18:08.160\nAnd I could go into my profile.\n\n349\n00:18:08.160 --> 00:18:11.100\nThis contains settings for PowerShell.\n\n350\n00:18:11.100 --> 00:18:14.190\nAnd I could set certain settings that\nwould load up every time I fired up\n\n351\n00:18:14.190 --> 00:18:15.050\nPowerShell.\n\n352\n00:18:15.050 --> 00:18:18.557\nLike I want my font to be bigger,\nI want it to be bolder or\n\n353\n00:18:18.557 --> 00:18:22.240\na certain font family, or\ndifferent background color.\n\n354\n00:18:22.240 --> 00:18:24.610\nI don't like the blue with\nthe white background.\n\n355\n00:18:24.610 --> 00:18:27.800\nAnd we can change things\nlike this in our profile.\n\n356\n00:18:27.800 --> 00:18:32.340\nWe could also include modules\nto import in our profile.\n\n357\n00:18:32.340 --> 00:18:36.700\nSo if I know that on a daily basis,\nI'm working with PowerShell, and\n\n358\n00:18:36.700 --> 00:18:37.650\nI'm working with printers.\n\n359\n00:18:37.650 --> 00:18:40.104\nIt's my lot in life,\nI've gotta manage printers.\n\n360\n00:18:40.104 --> 00:18:42.609\nI could modify my PowerShell profile-\n&gt;&gt; That's horrible.\n\n361\n00:18:42.609 --> 00:18:43.747\n[LAUGH]\n&gt;&gt; I know.\n\n362\n00:18:43.747 --> 00:18:47.451\n[LAUGH] You guys know from other\nshows if you've watched them,\n\n363\n00:18:47.451 --> 00:18:49.340\nI am not a big fan of printers.\n\n364\n00:18:49.340 --> 00:18:51.240\nPrinters and me just don't get along.\n\n365\n00:18:51.240 --> 00:18:53.987\nI call Ronnie, typically,\nif I have a printer issue.\n\n366\n00:18:53.987 --> 00:18:55.227\n&gt;&gt; [LAUGH]\n&gt;&gt; But hey,\n\n367\n00:18:55.227 --> 00:18:56.420\nif that is my lot in life,\n&gt;&gt; [LAUGH]\n\n368\n00:18:56.420 --> 00:18:58.810\n&gt;&gt; I want those commands there every time\n\n369\n00:18:58.810 --> 00:18:59.900\nI open up PowerShell.\n\n370\n00:18:59.900 --> 00:19:04.470\nI don't wanna have to import module,\nprint management, right?\n\n371\n00:19:04.470 --> 00:19:06.060\nSo I can add it to my profile.\n\n372\n00:19:06.060 --> 00:19:07.980\nNow every time I fired up PowerShell,\n\n373\n00:19:07.980 --> 00:19:11.900\nit would automatically load up that module\nand those commands would be available.\n\n374\n00:19:13.040 --> 00:19:17.260\nWell, in PowerShell 5.0 they've\nchanged things up a little bit.\n\n375\n00:19:17.260 --> 00:19:21.630\nIf you use a command,\nit will actually find the module,\n\n376\n00:19:21.630 --> 00:19:24.400\nassuming that module's on your system.\n\n377\n00:19:24.400 --> 00:19:28.430\nIt'll find that module and import the\nmodule that that command is contained in,\n\n378\n00:19:28.430 --> 00:19:30.830\nand it'll load it up automatically.\n\n379\n00:19:30.830 --> 00:19:35.384\nWhich is why you saw\nwhen I ran get-module,\n\n380\n00:19:35.384 --> 00:19:38.840\nright, I can see that NetTCPIP.\n\n381\n00:19:38.840 --> 00:19:40.260\nLet's go to a different machine.\n\n382\n00:19:40.260 --> 00:19:43.420\n&gt;&gt; Now Mike, is this contingent\nupon having Internet access or?\n\n383\n00:19:44.450 --> 00:19:46.550\n&gt;&gt; As far as the modules, it depends.\n\n384\n00:19:46.550 --> 00:19:48.750\nIf the module is one that's installed but\n\n385\n00:19:48.750 --> 00:19:51.590\nnot imported,\nthen I don't need Internet access.\n\n386\n00:19:51.590 --> 00:19:55.780\nIf it is one that's not installed, like we\nsaw that list of modules that's installed\n\n387\n00:19:55.780 --> 00:19:59.160\nbut not imported, the 1400 modules there.\n\n388\n00:19:59.160 --> 00:20:01.935\nIf it's one other than that,\nbecause there's more than that 1400,\n\n389\n00:20:01.935 --> 00:20:04.880\nthen I would have to first get it,\nand then bring it in.\n\n390\n00:20:04.880 --> 00:20:07.470\nWe'll take a look at that,\nthat's a very good point.\n\n391\n00:20:07.470 --> 00:20:08.630\nWhat was I gonna do here?\n\n392\n00:20:08.630 --> 00:20:13.412\nSo here if I do, I'm on Core so\nit looks a little different,\n\n393\n00:20:13.412 --> 00:20:16.990\nright, but I'm gonna do the get-module.\n\n394\n00:20:16.990 --> 00:20:20.638\nAnd here, I can see management,\nutility, and PSReadline.\n\n395\n00:20:20.638 --> 00:20:25.155\nAt least there's no, which other\none did we have on that client?\n\n396\n00:20:25.155 --> 00:20:27.500\nWas the NetTCIP.\n\n397\n00:20:27.500 --> 00:20:31.800\nAll right,\nthat one is not present currently on Core.\n\n398\n00:20:31.800 --> 00:20:39.020\nBut if I do a get-netIPAddress,\n\n399\n00:20:39.020 --> 00:20:42.260\nnotice it takes a second that\nfirst time I ran it, right?\n\n400\n00:20:42.260 --> 00:20:44.220\nAnd then the command runs.\n\n401\n00:20:44.220 --> 00:20:45.580\nWell, that module wasn't there.\n\n402\n00:20:45.580 --> 00:20:46.210\nWait a second.\n\n403\n00:20:46.210 --> 00:20:53.580\nLet's do a Get-Module, and look,\nthat module now is imported and loaded up.\n\n404\n00:20:53.580 --> 00:20:59.120\nSo when you type a command, if\nthe module's available just not imported,\n\n405\n00:20:59.120 --> 00:21:02.220\nit will automatically import that and\nmake it available to you.\n\n406\n00:21:02.220 --> 00:21:05.180\nSo that's one way to get a module in.\n\n407\n00:21:05.180 --> 00:21:08.710\nAnother way is to actually,\none is use the command.\n\n408\n00:21:08.710 --> 00:21:10.580\nIt will import the module for you.\n\n409\n00:21:10.580 --> 00:21:12.480\nAnother one is if you do the get-help.\n\n410\n00:21:12.480 --> 00:21:13.890\nNow we haven't talked about help yet, so\n\n411\n00:21:13.890 --> 00:21:18.140\nI'll save that when it's another\nway we can get a module imported.\n\n412\n00:21:18.140 --> 00:21:20.900\nThe third way,\nis just import the module the old way.\n\n413\n00:21:20.900 --> 00:21:24.000\nAnd that is to use\nthe import module command.\n\n414\n00:21:24.000 --> 00:21:27.448\nSo let's find one,\nmaybe I wanna work with Smb, so,\n\n415\n00:21:27.448 --> 00:21:32.906\nthere's a module called SmbShare, which I\ncan see is not imported into my session.\n\n416\n00:21:32.906 --> 00:21:38.356\nSo if I do Import-Module, right,\n\n417\n00:21:38.356 --> 00:21:43.999\nImport-Module and then smbShare.\n\n418\n00:21:43.999 --> 00:21:46.820\nNotice I did a Tab autofill on that,\nI know it's hard to tell.\n\n419\n00:21:46.820 --> 00:21:48.730\nLet me back up and do that again.\n\n420\n00:21:48.730 --> 00:21:53.300\nI can do smbShare, and it fills it in.\n\n421\n00:21:53.300 --> 00:21:56.160\nEven with names and\nmodules I can use that Tab autofill.\n\n422\n00:21:56.160 --> 00:21:59.860\nI don't know exactly what it's called,\nbut I know the first few letters and\n\n423\n00:21:59.860 --> 00:22:02.100\nthen I can hit Tab and\nit's gonna help me out.\n\n424\n00:22:02.100 --> 00:22:04.130\nTake advantage of that Tab autofill.\n\n425\n00:22:04.130 --> 00:22:08.455\nIf I hit Enter,\nit doesn't look like it did anything, but\n\n426\n00:22:08.455 --> 00:22:13.990\nnow if I do another Get-Module,\nnotice that smbShare is loaded up.\n\n427\n00:22:13.990 --> 00:22:16.960\nAnd I will have access to those commands.\n\n428\n00:22:18.240 --> 00:22:21.350\nSo three ways I can get a module\nimported into my session.\n\n429\n00:22:21.350 --> 00:22:25.680\nWell, we saw how to see what modules\nare there, see what modules are available.\n\n430\n00:22:25.680 --> 00:22:30.250\nAnd then to import those modules, I can\ndo the import module, the old school way.\n\n431\n00:22:30.250 --> 00:22:31.820\nOr I can just use a command, and\n\n432\n00:22:31.820 --> 00:22:35.540\nit will automatically import it,\nassuming that the module is available.\n\n433\n00:22:37.190 --> 00:22:41.640\nOr I can do the get-help, which we're\ngonna come back to in just a minute.\n\n434\n00:22:41.640 --> 00:22:43.627\nI know we're getting\na little short on time.\n\n435\n00:22:43.627 --> 00:22:48.340\nAnd the next thing I wanna show you\nbefore we move out of modules is, okay,\n\n436\n00:22:48.340 --> 00:22:51.110\nMike, so you've imported this SmbShare.\n\n437\n00:22:51.110 --> 00:22:53.120\nWhat commands did that add?\n\n438\n00:22:53.120 --> 00:22:58.610\nWell, we could go and\nwe could do another get-command,\n\n439\n00:22:58.610 --> 00:23:00.050\nand we could even measure that.\n\n440\n00:23:01.900 --> 00:23:04.991\nWe could get a count, and I got 1469.\n\n441\n00:23:04.991 --> 00:23:06.657\nThat's actually the same, isn't it?\n\n442\n00:23:06.657 --> 00:23:11.220\nThe get-command, I did the one\nthat's available, not imported.\n\n443\n00:23:11.220 --> 00:23:14.620\nLet's do a -listofimported.\n\n444\n00:23:14.620 --> 00:23:16.170\nSo this is list imported.\n\n445\n00:23:16.170 --> 00:23:18.520\nWhat commands are available\nin this session?\n\n446\n00:23:18.520 --> 00:23:20.470\nNot on my computer, but in this session.\n\n447\n00:23:21.750 --> 00:23:27.070\nAnd it'll say 371,\nwhich if we go back, way back.\n\n448\n00:23:28.580 --> 00:23:33.040\nAnd my buffer's actually not gonna\ngo that far back, I don't think.\n\n449\n00:23:33.040 --> 00:23:34.411\n&gt;&gt; Don't expect me to remember.\n\n450\n00:23:34.411 --> 00:23:35.583\n&gt;&gt; There we go, 336, right?\n\n451\n00:23:35.583 --> 00:23:37.689\n[LAUGH]\n&gt;&gt; Yeah, I know.\n\n452\n00:23:37.689 --> 00:23:39.121\nCome on, Cherokee, what was that?\n\n453\n00:23:39.121 --> 00:23:42.848\nSo 336, and now,\n\n454\n00:23:42.848 --> 00:23:47.205\nwhoops, I am at 371.\n\n455\n00:23:47.205 --> 00:23:48.514\n&gt;&gt; 370, something.\n\n456\n00:23:48.514 --> 00:23:50.319\n[LAUGH]\n&gt;&gt; So we imported 40, 30, some, yeah,\n\n457\n00:23:50.319 --> 00:23:51.830\nagain, my math's not up the greatest.\n\n458\n00:23:51.830 --> 00:23:55.903\nWe've got over 30 new commands,\nbecause we imported that module, so\n\n459\n00:23:55.903 --> 00:23:59.307\nAgain hopefully,\nI know it gets a little bit confusing, but\n\n460\n00:23:59.307 --> 00:24:03.780\nwhen we talk about modules, modules are\na collection of cmdlets and scripts and\n\n461\n00:24:03.780 --> 00:24:06.748\nmanifests, and\nthat's how we add functionality.\n\n462\n00:24:06.748 --> 00:24:12.921\nThere's the modules that are installed in\nthis computer which we saw there was a,\n\n463\n00:24:12.921 --> 00:24:17.140\nlet's see if it [INAUDIBLE]\nIt doesn't matter how many.\n\n464\n00:24:17.140 --> 00:24:19.185\nThere's modules installed on the computer.\n\n465\n00:24:19.185 --> 00:24:22.593\nWhen I install Windows,\nthere's a bunch of modules there, but\n\n466\n00:24:22.593 --> 00:24:26.290\nthey're not immediately available for\nuse in my session.\n\n467\n00:24:26.290 --> 00:24:32.010\nSo, available means they on my computer\nbut they are not in my session yet.\n\n468\n00:24:33.110 --> 00:24:36.980\nImported means, I've imported\nthose modules and those cmdlets\n\n469\n00:24:36.980 --> 00:24:42.620\ninto my PowerShell session and I can now\nuse them in my scripts or in my commands.\n\n470\n00:24:42.620 --> 00:24:47.620\nWe can import a module manually\nwith the import-module command.\n\n471\n00:24:47.620 --> 00:24:53.690\nWe can import a module simply by using\na command that's located in that module.\n\n472\n00:24:53.690 --> 00:24:59.770\nWe can also import a module by\ngetting the help on the module.\n\n473\n00:25:01.220 --> 00:25:02.970\nNow let's see what else we wanna do.\n\n474\n00:25:02.970 --> 00:25:05.080\nSo sticking with the modules theme here.\n\n475\n00:25:05.080 --> 00:25:08.088\nWe've seen how to get them in.\n\n476\n00:25:08.088 --> 00:25:10.609\nAs I was saying earlier,\nthe modules, I've got so\n\n477\n00:25:10.609 --> 00:25:13.000\nmany modules installed on my computer.\n\n478\n00:25:13.000 --> 00:25:16.513\nWe do a get-module, all right.\n\n479\n00:25:16.513 --> 00:25:19.312\nI can see these are the ones\nthat are part of my session.\n\n480\n00:25:19.312 --> 00:25:22.479\nIf I do a -listavailable.\n\n481\n00:25:23.690 --> 00:25:27.610\nThese are the ones that are on my\ncomputer, but not imported in my session,\n\n482\n00:25:27.610 --> 00:25:28.790\nall right?\n\n483\n00:25:28.790 --> 00:25:33.830\nAnd what I want you to notice is there's\nno module for Active Directory, right?\n\n484\n00:25:33.830 --> 00:25:35.250\nI can see the a's right here,\n\n485\n00:25:35.250 --> 00:25:39.280\nnone of them have anything to\ndo with Active Directory, right?\n\n486\n00:25:39.280 --> 00:25:42.650\nLet's go over to one of my servers,\nso here's a server.\n\n487\n00:25:42.650 --> 00:25:46.602\nI'm gonna open up PowerShell, and\n\n488\n00:25:46.602 --> 00:25:52.536\nthen we're gonna do\nGet-Module -ListAvailable.\n\n489\n00:25:54.710 --> 00:25:59.886\nAnd again, I see no module for\nActive Directory.\n\n490\n00:25:59.886 --> 00:26:02.620\nAll right,\nlet's go over to my domain controller.\n\n491\n00:26:02.620 --> 00:26:03.690\nWe fire up PowerShell.\n\n492\n00:26:05.040 --> 00:26:11.291\nAnd we do a Get-module, list available.\n\n493\n00:26:14.543 --> 00:26:16.560\nAnd let's see what we got this time.\n\n494\n00:26:16.560 --> 00:26:19.669\nLook, there is an Active Directory module,\nright?\n\n495\n00:26:19.669 --> 00:26:22.580\n[COUGH] Excuse me.\n\n496\n00:26:22.580 --> 00:26:27.410\nThe reason this is there,\nis because this is the domain controller.\n\n497\n00:26:27.410 --> 00:26:30.190\nI've installed Active Directory\non this machine.\n\n498\n00:26:30.190 --> 00:26:33.810\nAnd, I know you guys have seen\nthis in Cherokee shows, and\n\n499\n00:26:33.810 --> 00:26:36.260\nthe server administration shows.\n\n500\n00:26:36.260 --> 00:26:40.150\nWhen you install a role, as you're\ngoing through that little wizard,\n\n501\n00:26:40.150 --> 00:26:43.210\nyou know that little pop up dialog box\nthat always happens, you choose your role,\n\n502\n00:26:43.210 --> 00:26:47.420\nActive Directory, you click Next and a\nlittle pop up dialogue comes up and says,\n\n503\n00:26:47.420 --> 00:26:49.550\nhey do you wanna include\nthe management tools.\n\n504\n00:26:49.550 --> 00:26:53.590\nAnd you always say, yes, or add these\nfeatures, and then you keep going.\n\n505\n00:26:53.590 --> 00:26:58.110\nThat is why, that, what that's doing\nis adding the GUI part, right?\n\n506\n00:26:58.110 --> 00:27:01.980\nThe Active Directory uses a computer's,\nsites and services, domains and\n\n507\n00:27:01.980 --> 00:27:06.940\ntrust as well as the Active Directory\nmodule for Windows PowerShell.\n\n508\n00:27:06.940 --> 00:27:10.530\nThat's why I have it on this server but\nnot my other servers and\n\n509\n00:27:10.530 --> 00:27:12.500\nnot my Windows 10 machine, all right.\n\n510\n00:27:14.270 --> 00:27:19.490\nSo as you add roles, you're going to\nalso add those modules for PowerShell.\n\n511\n00:27:19.490 --> 00:27:21.790\nDNS, for example, is another one.\n\n512\n00:27:21.790 --> 00:27:24.100\nThere is my DNS Server module.\n\n513\n00:27:24.100 --> 00:27:28.460\nThat's cuz my domain controllers\nare also running DNS.\n\n514\n00:27:28.460 --> 00:27:31.030\nNow, if I wanna add those modules,\nlet's say, and\n\n515\n00:27:31.030 --> 00:27:34.600\nnormally I'm managing from\nmy Windows 10 client.\n\n516\n00:27:34.600 --> 00:27:38.520\nI'm not logging in to the domain\ncontroller to do my administration.\n\n517\n00:27:38.520 --> 00:27:40.380\nI'm administering\nremotely from PowerShell.\n\n518\n00:27:40.380 --> 00:27:42.840\n&gt;&gt; Sure, save that CPU and\nprocessing power for\n\n519\n00:27:42.840 --> 00:27:46.340\nactually what that machine needs to be\ndoing, not for those management functions.\n\n520\n00:27:46.340 --> 00:27:48.930\n&gt;&gt; Yeah, so I need to get,\nI need those commands here.\n\n521\n00:27:48.930 --> 00:27:50.410\nHow do I get them here?\n\n522\n00:27:50.410 --> 00:27:52.590\nWell, because this is a client,\n\n523\n00:27:52.590 --> 00:27:56.340\nwhat I need to do is install\nthe remote server admin tools.\n\n524\n00:27:56.340 --> 00:28:00.000\nI've already downloaded them, so\nI'm just gonna quickly run this update.\n\n525\n00:28:00.000 --> 00:28:01.220\nShouldn't take us too long.\n\n526\n00:28:02.250 --> 00:28:03.510\nWe'll let it run.\n\n527\n00:28:03.510 --> 00:28:08.135\nAnd by installing the remote server admin\ntools, I am gonna get access to not only\n\n528\n00:28:08.135 --> 00:28:12.970\nthe GUI cuz you've done this before,\nright, you wanna remotely manage DNS.\n\n529\n00:28:12.970 --> 00:28:16.960\nSo you've installed the remote server\nadmin tools, you can now add that DNS\n\n530\n00:28:16.960 --> 00:28:22.020\nconsole to your snap in, to your MMC,\nand you can manage DNS remotely, right?\n\n531\n00:28:22.020 --> 00:28:23.700\nPoint it to that remote server.\n\n532\n00:28:23.700 --> 00:28:24.930\nIt's the same thing here.\n\n533\n00:28:24.930 --> 00:28:30.050\nWhen you do that, you're also adding\nthe PowerShell cmdlets, right?\n\n534\n00:28:30.050 --> 00:28:37.790\nSo this thing, might take it just a second\nto get installed, we'll let that run.\n\n535\n00:28:37.790 --> 00:28:41.130\nWhile that's installing though,\nthe last thing I want to show you,\n\n536\n00:28:41.130 --> 00:28:46.350\nwhile we're waiting for that,\nwe've added that SMB module, right?\n\n537\n00:28:46.350 --> 00:28:49.870\nNow I wanna know what commands\ncame with that module, right?\n\n538\n00:28:49.870 --> 00:28:51.890\nI added a module, what commands did I add?\n\n539\n00:28:51.890 --> 00:28:54.140\nAnd by running the Get-Command,\nI saw a list of everything,\n\n540\n00:28:54.140 --> 00:28:56.050\nthat really didn't help me.\n\n541\n00:28:56.050 --> 00:29:02.769\nSo, what you could do is you\ncan do a Get-Command -module.\n\n542\n00:29:02.769 --> 00:29:09.917\nA parameter, -module, and the name of that\nmodule, which was in my case smbshare.\n\n543\n00:29:09.917 --> 00:29:11.340\nAnd I hit Enter.\n\n544\n00:29:11.340 --> 00:29:15.600\nAnd now I'm getting just the cmdlets\nthat are part of that module, all right.\n\n545\n00:29:17.598 --> 00:29:21.380\nSo, Get-command -module, and\nthen the name of the module, and\n\n546\n00:29:21.380 --> 00:29:25.100\nyou can find the commands\nthat are part of that module.\n\n547\n00:29:25.100 --> 00:29:27.390\n&gt;&gt; Yeah.\nThat's really great thing to go ahead and\n\n548\n00:29:27.390 --> 00:29:29.500\ntake a look at there,\nan option there for us, Mike.\n\n549\n00:29:29.500 --> 00:29:32.681\nAnd also, if you wanted to\nfilter that down even more,\n\n550\n00:29:32.681 --> 00:29:35.875\nwe do have like the Out GridView\nto go ahead and filter.\n\n551\n00:29:35.875 --> 00:29:40.198\nAnd you still have the capability like you\nwould within a Command Prompt to go ahead\n\n552\n00:29:40.198 --> 00:29:42.215\nand save something out to a text file.\n\n553\n00:29:42.215 --> 00:29:45.703\nSo you could even save a particular\nmodule out to a text file and\n\n554\n00:29:45.703 --> 00:29:49.540\neven use it as like a study checklist,\nor something to that effect.\n\n555\n00:29:49.540 --> 00:29:50.350\n&gt;&gt; Absolutely.\n\n556\n00:29:50.350 --> 00:29:50.970\nAbsolutely.\n\n557\n00:29:50.970 --> 00:29:56.670\nAll right, Cherokee, my update is not\ngoing quite as fast as I thought it would.\n\n558\n00:29:56.670 --> 00:30:00.440\nSo we might have to just take a peak at\nthis and then we're running out of time.\n\n559\n00:30:00.440 --> 00:30:02.620\nWe're gonna come back for\nour part II and do our help.\n\n560\n00:30:02.620 --> 00:30:04.970\nSo we'll just check on\nthe results of this in part II.\n\n561\n00:30:04.970 --> 00:30:05.860\n&gt;&gt; Sounds like a plan.\n\n562\n00:30:05.860 --> 00:30:06.440\nAll right.\n\n563\n00:30:06.440 --> 00:30:09.240\nWell thank you for your time today Mike\nand thank you for joining us as well but\n\n564\n00:30:09.240 --> 00:30:11.385\nwe'll go ahead and sign out for this show.\n\n565\n00:30:11.385 --> 00:30:12.720\nI've been your host Cherokee Boose.\n\n566\n00:30:12.720 --> 00:30:13.470\n&gt;&gt; And I'm Mike Rodrick.\n\n567\n00:30:13.470 --> 00:30:16.647\n&gt;&gt; See you next time here at ITProTV.\n\n568\n00:30:16.647 --> 00:30:22.440\n[MUSIC]\n\n569\n00:30:22.440 --> 00:30:25.448\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "238051481"
        },
        {
          "description": "In this episode, Mike and Cherokee demonstrate how to get cmdlet help in PowerShell. They also discuss how to interpret cmdlet syntax found in the help files.",
          "length": "2427",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-2-basic_syntax_and_help_pt_2-100917.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-2-basic_syntax_and_help_pt_2-100917-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-2-2-basic_syntax_and_help_pt_2-100917-sm.jpg",
          "title": "Basic Syntax and Help Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.200 --> 00:00:01.208\nWelcome to ITProTV.\n\n2\n00:00:01.208 --> 00:00:02.580\nI'm your host, Don Pezet.\n\n3\n00:00:02.580 --> 00:00:06.045\n[CROSSTALK]\n\n4\n00:00:06.045 --> 00:00:07.863\n[MUSIC]\n\n5\n00:00:07.863 --> 00:00:11.799\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:11.799 --> 00:00:13.790\n&gt;&gt; Welcome back to your PowerShell series.\n\n7\n00:00:13.790 --> 00:00:15.590\nI'm your show host, Cherokee Boose.\n\n8\n00:00:15.590 --> 00:00:18.159\nIn this episode we'll\ncontinue on with part two,\n\n9\n00:00:18.159 --> 00:00:21.940\ntaking a look at our PowerShell\nbasic syntax and help features.\n\n10\n00:00:21.940 --> 00:00:24.300\nWith us today in studios we have Mr.\nMike Rodrick.\n\n11\n00:00:24.300 --> 00:00:25.570\nThank you for joining us today, Mike.\n\n12\n00:00:25.570 --> 00:00:26.560\n&gt;&gt; Well, absolutely, Cherokee.\n\n13\n00:00:26.560 --> 00:00:27.470\nThanks for having me back.\n\n14\n00:00:27.470 --> 00:00:28.267\nAnd yeah, it's a good thing you're\nhaving me back [INAUDIBLE].\n\n15\n00:00:28.267 --> 00:00:29.115\n&gt;&gt; We had to have you back.\n\n16\n00:00:29.115 --> 00:00:29.875\n&gt;&gt; [LAUGH]\n&gt;&gt; Yeah,\n\n17\n00:00:29.875 --> 00:00:31.459\nwe couldn't just let everyone straddle.\n\n18\n00:00:31.459 --> 00:00:32.563\n&gt;&gt; Kind of left off there, right?\n\n19\n00:00:32.563 --> 00:00:34.040\n&gt;&gt; Yeah.\n&gt;&gt; Absolutely, so\n\n20\n00:00:34.040 --> 00:00:38.650\nat the end of that previous episode,\nwe were talking about modules.\n\n21\n00:00:38.650 --> 00:00:42.710\nAnd I was showing you that on\na server when you install a role,\n\n22\n00:00:42.710 --> 00:00:45.340\nthe administrative tools,\nwhen you go through the wizard,\n\n23\n00:00:45.340 --> 00:00:49.260\nit says do you wanna include\nthe management tools, and you say yes.\n\n24\n00:00:49.260 --> 00:00:53.550\nThat includes the GUI, like the Active\nDirectory snap-ins or the DNS snap-ins.\n\n25\n00:00:53.550 --> 00:00:56.830\nBut it also includes the PowerShell\nmodules associated with.\n\n26\n00:00:58.520 --> 00:01:00.995\nSo by installing a role,\nyou're gonna get those.\n\n27\n00:01:00.995 --> 00:01:05.110\nNow most of the administration\nis gonna be done from a client.\n\n28\n00:01:05.110 --> 00:01:09.100\nAnd so how do I get those\nsame modules on my clients?\n\n29\n00:01:09.100 --> 00:01:12.990\nBecause when we did the list available\nthere was no Active Directory modules.\n\n30\n00:01:12.990 --> 00:01:17.040\nThere were no DNS modules available\non my Windows 10 machine.\n\n31\n00:01:17.040 --> 00:01:20.250\nSo what I did at the end of the previous\nepisode, was I downloaded the remote\n\n32\n00:01:20.250 --> 00:01:24.420\nserver administration tools for\nmy version, for Windows 10 in this case.\n\n33\n00:01:24.420 --> 00:01:25.780\nAnd I ran that update.\n\n34\n00:01:25.780 --> 00:01:28.645\nNow that update took a little longer, so\nwe went ahead and stopped the episode.\n\n35\n00:01:28.645 --> 00:01:31.540\nWe are now back, and it has finished.\n\n36\n00:01:31.540 --> 00:01:38.050\nSo let's take a look at what\nhas changed on my system.\n\n37\n00:01:38.050 --> 00:01:43.650\nAll right, we'll run that same command,\nget -module, then list is available.\n\n38\n00:01:43.650 --> 00:01:48.180\nRemember, list available is showing\nme not what's in the session, but\n\n39\n00:01:48.180 --> 00:01:51.870\nwhat's on my computer that I\ncould import into the session.\n\n40\n00:01:51.870 --> 00:01:53.672\nSo get -module, list available.\n\n41\n00:01:55.986 --> 00:01:56.760\nI hit Enter.\n\n42\n00:01:58.350 --> 00:02:00.630\nAnd if I scroll back up,\n\n43\n00:02:00.630 --> 00:02:05.140\nnow I can see the Active Directory\nmodule is available for import.\n\n44\n00:02:05.140 --> 00:02:12.380\nThings like DFSR, DHCP,\nDNS client and DNS server, so all\n\n45\n00:02:12.380 --> 00:02:16.810\nthe modules that are part of the remote\nserver admin tools are now available here.\n\n46\n00:02:16.810 --> 00:02:19.088\nSo I can get access to those commands and\n\n47\n00:02:19.088 --> 00:02:23.101\nI can remotely manage my different\nservices like Active Directory.\n\n48\n00:02:23.101 --> 00:02:26.400\nI could make a new user from right here.\n\n49\n00:02:28.400 --> 00:02:30.120\nSo we see how to get those modules in.\n\n50\n00:02:30.120 --> 00:02:30.950\nNow remember,\n\n51\n00:02:30.950 --> 00:02:34.350\nI showed you a lot of different ways\nto import the module into your session.\n\n52\n00:02:34.350 --> 00:02:37.280\nNow that we've got it downloaded,\nwe installed our SAT, and\n\n53\n00:02:37.280 --> 00:02:40.530\nit's showing it as available,\nbut it's not imported.\n\n54\n00:02:40.530 --> 00:02:44.160\nBut we did see that there are several\nways I can end up importing that module\n\n55\n00:02:44.160 --> 00:02:45.680\ninto my current session.\n\n56\n00:02:45.680 --> 00:02:50.000\nOne was do it the old school way,\nimport-module, and the name of the module.\n\n57\n00:02:50.000 --> 00:02:54.160\nIn this case maybe Active Directory,\nfor example, or DNS server.\n\n58\n00:02:54.160 --> 00:02:57.170\nThe other way was just to\nuse one of the commands.\n\n59\n00:02:57.170 --> 00:03:01.550\nBecause if the module's available and\nI type in one of those commands,\n\n60\n00:03:01.550 --> 00:03:04.940\nPowerShell's smart enough to go,\nthat command is part of this module.\n\n61\n00:03:04.940 --> 00:03:06.860\nLet me go ahead and load it up.\n\n62\n00:03:06.860 --> 00:03:08.640\nAnd so it will be available.\n\n63\n00:03:08.640 --> 00:03:13.290\nThe third way was to do a get\n-help on a particular command.\n\n64\n00:03:13.290 --> 00:03:14.190\nWhen you did that,\n\n65\n00:03:14.190 --> 00:03:19.100\nit would also load the module that\nincluded that particular command.\n\n66\n00:03:19.100 --> 00:03:22.977\nThe idea, according to Microsoft is,\nif you're gonna get help on a command,\n\n67\n00:03:22.977 --> 00:03:25.519\nthere's a good chance you\nwanna use that command.\n\n68\n00:03:25.519 --> 00:03:26.761\n&gt;&gt; [LAUGH]\n&gt;&gt; That's why you're getting\n\n69\n00:03:26.761 --> 00:03:27.650\nthe help on it, right?\n\n70\n00:03:27.650 --> 00:03:32.090\nSo it says, why make you go and\nget help and then import the module?\n\n71\n00:03:32.090 --> 00:03:35.010\nLet's just go ahead and import\nthe module when you do the get help.\n\n72\n00:03:35.010 --> 00:03:36.940\nThat way it'll be ready for use, okay?\n\n73\n00:03:36.940 --> 00:03:38.670\n&gt;&gt; So they're just taking\nit upon themselves saying,\n\n74\n00:03:38.670 --> 00:03:39.630\nhey, I know what you want.\n\n75\n00:03:39.630 --> 00:03:42.732\nWhen, because in all actuality I\ndon't know what I want half the time.\n\n76\n00:03:42.732 --> 00:03:43.663\n[LAUGH]\n&gt;&gt; Exactly right,\n\n77\n00:03:43.663 --> 00:03:44.990\nthey're trying to do us a favor.\n\n78\n00:03:44.990 --> 00:03:47.150\nAnd they did, it makes it real easy.\n\n79\n00:03:47.150 --> 00:03:51.210\nWhich is kind of funny, I spent that whole\nlast episode talking about getting these\n\n80\n00:03:51.210 --> 00:03:54.110\ncommands into PowerShell so\nthey're available.\n\n81\n00:03:54.110 --> 00:03:58.230\nThat really has, I don't want to say\ngone by the wayside, because you still\n\n82\n00:03:58.230 --> 00:04:01.260\nhave to like for remote server admin\nI had to download those tools.\n\n83\n00:04:01.260 --> 00:04:03.800\nThose modules weren't on my computer.\n\n84\n00:04:03.800 --> 00:04:08.450\nBut as far as importing modules that\nare on your computer into your session,\n\n85\n00:04:08.450 --> 00:04:10.680\nit's pretty much just use them now, right?\n\n86\n00:04:10.680 --> 00:04:12.980\nType the command and\nit's gonna import it for you.\n\n87\n00:04:12.980 --> 00:04:15.238\nSo all that talk about\nmanaging modules and\n\n88\n00:04:15.238 --> 00:04:17.630\nimporting them is really\nkind of going away.\n\n89\n00:04:17.630 --> 00:04:21.944\nIf you know the command, you just type\nit and it's gonna import it for you,\n\n90\n00:04:21.944 --> 00:04:24.560\nassuming it's available on your computer.\n\n91\n00:04:24.560 --> 00:04:27.495\nOn a Windows 10 machine,\ncommands like get- aUser,\n\n92\n00:04:27.495 --> 00:04:29.500\nthat module's not going to be there.\n\n93\n00:04:30.600 --> 00:04:32.710\nSo I did have to download and\ninstall something.\n\n94\n00:04:32.710 --> 00:04:34.610\nFor the most part,\nit's just use the command.\n\n95\n00:04:34.610 --> 00:04:38.110\nAnd now at this point I\ncould do a get-ADuser.\n\n96\n00:04:38.110 --> 00:04:39.790\nNotice I tab autofill?\n\n97\n00:04:39.790 --> 00:04:40.870\nAnd the command completed.\n\n98\n00:04:40.870 --> 00:04:44.478\nOr it autofixed the syntax for me.\n\n99\n00:04:44.478 --> 00:04:47.655\nNow we're not gonna go into\nthat command just yet.\n\n100\n00:04:47.655 --> 00:04:52.490\nWe've got a little more to learn before\nwe start using some of those commands.\n\n101\n00:04:53.590 --> 00:04:58.456\nSo now we know all about cmdlets and\ntheir structure, right, verb -noun.\n\n102\n00:04:58.456 --> 00:05:00.790\nWe know how to see a list\nof those commands.\n\n103\n00:05:00.790 --> 00:05:02.790\nWe can do a get -command.\n\n104\n00:05:02.790 --> 00:05:07.120\nWe saw that we can limit those commands to\nwhat we wanna see to a particular module,\n\n105\n00:05:07.120 --> 00:05:11.080\nget -command -module and\nthen the module name.\n\n106\n00:05:11.080 --> 00:05:14.730\nWe saw how to work with the modules,\nlist them, import them and\n\n107\n00:05:14.730 --> 00:05:17.580\nmake them available for our sessions.\n\n108\n00:05:17.580 --> 00:05:18.180\nAll right now.\n\n109\n00:05:18.180 --> 00:05:20.740\n&gt;&gt; But you can get a little bit\ncreative with that and kind of mix and\n\n110\n00:05:20.740 --> 00:05:25.680\nmatch things to really get this tool\nworking for us in the way that we\n\n111\n00:05:25.680 --> 00:05:31.050\nwant to achieve a desired function or\nlist or information, right?\n\n112\n00:05:31.050 --> 00:05:34.790\n&gt;&gt; Absolutely,\nthat's the idea is this tool\n\n113\n00:05:34.790 --> 00:05:39.300\nis very customizable to what you\ndo every day in your position.\n\n114\n00:05:39.300 --> 00:05:43.126\nWhether you're a help desk, whether you're\nadministration, tier two, tier three,\n\n115\n00:05:43.126 --> 00:05:44.610\nwhatever the case maybe.\n\n116\n00:05:44.610 --> 00:05:48.120\nYou can set it up so that it has\nthe commands that you need to do your job\n\n117\n00:05:48.120 --> 00:05:52.530\nevery day and\nstart automating repetitive type tasks.\n\n118\n00:05:52.530 --> 00:05:56.310\nAll right, so I also showed you again\nat the end of the last episode,\n\n119\n00:05:56.310 --> 00:05:59.620\nI showed you how to get commands\nthat are in a particular module.\n\n120\n00:05:59.620 --> 00:06:02.910\nIf we wanted to see that Active Directory\nmodule, now that it's available,\n\n121\n00:06:02.910 --> 00:06:08.960\nI could do get command-name.\n\n122\n00:06:08.960 --> 00:06:13.430\nNotice here that I did not tab autofill on\nthe get command and it's all lower case?\n\n123\n00:06:13.430 --> 00:06:15.810\nIt did that on purpose cuz I want\nyou to see that it still works,\n\n124\n00:06:15.810 --> 00:06:16.805\nit's not case sensitive.\n\n125\n00:06:16.805 --> 00:06:24.319\nget -command -module Active Directory,\n\n126\n00:06:24.319 --> 00:06:29.400\nand then it wears and grinds.\n\n127\n00:06:30.910 --> 00:06:32.870\nDid you see those little zeros run across?\n\n128\n00:06:32.870 --> 00:06:34.301\nYou see that green bar just for a second.\n\n129\n00:06:34.301 --> 00:06:35.479\n&gt;&gt; Yeah.\n\n130\n00:06:35.479 --> 00:06:39.060\n&gt;&gt; Because I hadn't loaded that\nmodule up into my current session,\n\n131\n00:06:39.060 --> 00:06:43.560\nand I'm using it, I'm calling that module,\nit had to import that module for me.\n\n132\n00:06:43.560 --> 00:06:44.640\nAnd this is what I'm saying.\n\n133\n00:06:44.640 --> 00:06:48.160\nA lot of the module management\nis now done behind the scenes.\n\n134\n00:06:48.160 --> 00:06:51.770\nYou can definitely be proactive and import\nmodules, you can still include them in\n\n135\n00:06:51.770 --> 00:06:56.100\nyour profile, but honestly you just run\na command and it will find the module and\n\n136\n00:06:56.100 --> 00:06:56.790\nit will load it up.\n\n137\n00:06:56.790 --> 00:06:59.940\nSo they've made it a whole\nlot easier to work with.\n\n138\n00:06:59.940 --> 00:07:04.960\nAnd here's all my commands that deal with\nActive Directory that are now available.\n\n139\n00:07:04.960 --> 00:07:07.624\nAnd if I do a get -module, remember,\n\n140\n00:07:07.624 --> 00:07:12.218\nthis shows me what modules\nare currently loaded in this session.\n\n141\n00:07:12.218 --> 00:07:16.946\nYou can see that Active Directory is now\nloaded up, because I tried to use it.\n\n142\n00:07:16.946 --> 00:07:19.476\nEven if I'm just listing\nthe commands from that module,\n\n143\n00:07:19.476 --> 00:07:20.907\nthat module has to be loaded up.\n\n144\n00:07:20.907 --> 00:07:25.490\nSo there is your module\nmanagement in PowerShell.\n\n145\n00:07:26.840 --> 00:07:31.110\nAll right, now, let's take a look at,\nwe wanna look at help.\n\n146\n00:07:31.110 --> 00:07:35.698\nI also wanna look at using wild cards,\nand we'll kinda combine these things.\n\n147\n00:07:35.698 --> 00:07:42.520\nEarlier, Cherokee, I did a get -command\nmodule or just an Active Directory.\n\n148\n00:07:42.520 --> 00:07:44.211\nWe also did SMB.\n\n149\n00:07:44.211 --> 00:07:48.457\nWhat if I don't know what module\nthe command I'm looking for is in,\n\n150\n00:07:48.457 --> 00:07:49.585\nor I'm not sure?\n\n151\n00:07:49.585 --> 00:07:54.661\nThere could be some commands in more than\none module related to a particular task,\n\n152\n00:07:54.661 --> 00:07:55.186\nright?\n\n153\n00:07:55.186 --> 00:07:59.710\nSo we can use wildcards when\nwe're looking for commands.\n\n154\n00:07:59.710 --> 00:08:04.266\nThe asterisk, or the splat or\nthe star, what do you call it?\n\n155\n00:08:04.266 --> 00:08:04.896\n&gt;&gt; Asterisk.\n\n156\n00:08:04.896 --> 00:08:07.589\n&gt;&gt; Asterisk okay,\nwhich is another one I had to look up.\n\n157\n00:08:07.589 --> 00:08:09.524\nThat does not look right\nwhen you spell it out.\n\n158\n00:08:09.524 --> 00:08:14.116\nAnyway, [LAUGH] my poor\nEnglish is no excuse.\n\n159\n00:08:14.116 --> 00:08:17.315\nWe can use wildcards and\nthe asterisk is the wildcard.\n\n160\n00:08:17.315 --> 00:08:20.635\nFor example, if I wanna see all\nthe commands that deal with SMB,\n\n161\n00:08:20.635 --> 00:08:21.878\nServer Message Block.\n\n162\n00:08:21.878 --> 00:08:23.348\nNot for one particular module,\n\n163\n00:08:23.348 --> 00:08:25.967\nfrom any module that has to\ndo with Server Message Block.\n\n164\n00:08:25.967 --> 00:08:29.621\nI can do a get command,\nyou've seen that, and\n\n165\n00:08:29.621 --> 00:08:35.542\nthen instead of just typing in SMB cuz\nif I just do SMB I get nothing, right?\n\n166\n00:08:35.542 --> 00:08:41.799\nIt says I don't know what\nthe heck you're talking about,\n\n167\n00:08:41.799 --> 00:08:46.535\nthere is no SMB, but if I do this, *SMB*.\n\n168\n00:08:46.535 --> 00:08:50.466\n&gt;&gt; Like I knew it had SMB something and\nsomething, [LAUGH]\n\n169\n00:08:50.466 --> 00:08:51.428\n&gt;&gt; Exactly.\n\n170\n00:08:51.428 --> 00:08:53.621\n&gt;&gt; I need someone to help\nme fill in the blanks here.\n\n171\n00:08:53.621 --> 00:08:55.679\n&gt;&gt; Yeah, and\nthat's what the wildcards do, right?\n\n172\n00:08:55.679 --> 00:08:59.822\nThey levy, put a blank and\nlet the computer fill those blanks in.\n\n173\n00:08:59.822 --> 00:09:03.621\nAnd so you can see I get a list\nof commands, aliases and\n\n174\n00:09:03.621 --> 00:09:06.252\nthere is this column called Source.\n\n175\n00:09:06.252 --> 00:09:11.140\nAnd I can see that most of these\nare coming from that SMB share module that\n\n176\n00:09:11.140 --> 00:09:12.128\nwe imported.\n\n177\n00:09:12.128 --> 00:09:16.952\nLook, here's some from SMB witness, I\nmight not have known about those commands.\n\n178\n00:09:16.952 --> 00:09:20.163\nMaybe I now need, that's exactly\nthe command I was looking for.\n\n179\n00:09:20.163 --> 00:09:22.254\nI need to import that module, right?\n\n180\n00:09:22.254 --> 00:09:25.329\nOr just use the command,\nwe know it´s gonna import it for you.\n\n181\n00:09:25.329 --> 00:09:29.101\nHere´s some for from SMB witness,\nhere´s one from BranchCache.\n\n182\n00:09:29.101 --> 00:09:31.799\nMaybe that´s something\nI need to work with.\n\n183\n00:09:31.799 --> 00:09:34.025\nSo, by using those wildcards,\n\n184\n00:09:34.025 --> 00:09:40.137\nI´m now not limiting my search to one\nparticular module I'm to find anything.\n\n185\n00:09:40.137 --> 00:09:41.450\nNow I use two wildcards.\n\n186\n00:09:41.450 --> 00:09:45.718\nI did a *smb*, and that's important.\n\n187\n00:09:45.718 --> 00:09:47.137\nUnderstand how wildcards work.\n\n188\n00:09:47.137 --> 00:09:50.929\nThat's anything, smb, anything, all right?\n\n189\n00:09:50.929 --> 00:09:56.312\nSpaces, characters, nothing,\nthe wildcard be any one of those, okay?\n\n190\n00:09:56.312 --> 00:09:57.579\nWhich is like what Cherokee was saying.\n\n191\n00:09:57.579 --> 00:10:00.129\nIt's got smb somewhere in the middle.\n\n192\n00:10:00.129 --> 00:10:03.043\nIt could be at the beginning,\nit could be at the end,\n\n193\n00:10:03.043 --> 00:10:05.375\nbecause it got wildcards at either side.\n\n194\n00:10:05.375 --> 00:10:09.019\nNow there is one, I think,\nthat ends with SMB.\n\n195\n00:10:09.019 --> 00:10:11.277\nLet´s see if I can find it here.\n\n196\n00:10:11.277 --> 00:10:15.991\nIf I take this all right?\n\n197\n00:10:15.991 --> 00:10:17.726\nLet´s see what happens.\n\n198\n00:10:17.726 --> 00:10:19.986\nI get nothing.\n\n199\n00:10:19.986 --> 00:10:22.199\nNot as a, which is expected, right?\n\n200\n00:10:22.199 --> 00:10:26.529\nBecause none of these commands end in SMB.\n\n201\n00:10:26.529 --> 00:10:30.374\nAll right, so you gotta pay attention\nto where you're putting the wild card.\n\n202\n00:10:30.374 --> 00:10:31.371\nLet's try another one.\n\n203\n00:10:31.371 --> 00:10:33.939\nI'm trying to think of\nsomething else I could use.\n\n204\n00:10:33.939 --> 00:10:39.648\nLet's do \"*dns*, I don't think I\nhave the DNS module added yet,\n\n205\n00:10:39.648 --> 00:10:43.004\nbut it'll import it for me, all right?\n\n206\n00:10:43.004 --> 00:10:46.980\nThere we go.\nSo here I did the same thing *dns* and\n\n207\n00:10:46.980 --> 00:10:48.903\nI can see commands.\n\n208\n00:10:48.903 --> 00:10:54.507\nAll these commands have DNS\nin it somewhere, all right?\n\n209\n00:10:54.507 --> 00:10:59.393\nIf I was looking for\na command that had DNS at the beginning,\n\n210\n00:10:59.393 --> 00:11:02.927\nwhich none of these are really gonna have.\n\n211\n00:11:02.927 --> 00:11:06.791\nWhat if I wanted to do just get commands\nthat have to do with DNS, right?\n\n212\n00:11:06.791 --> 00:11:11.035\nI could do a get-command.\n\n213\n00:11:11.035 --> 00:11:17.664\nGet-dns *, right?\n\n214\n00:11:17.664 --> 00:11:21.239\nSo now I'm telling it,\nthe first has to be get-dns,\n\n215\n00:11:21.239 --> 00:11:24.106\nbut then it could be followed by anything.\n\n216\n00:11:24.106 --> 00:11:25.052\nSee these commands up here?\n\n217\n00:11:25.052 --> 00:11:30.702\nset dns, show dns, dns cmv,\nthose are applications.\n\n218\n00:11:30.702 --> 00:11:33.310\nLet's see what happens in\nour results this time.\n\n219\n00:11:33.310 --> 00:11:37.731\nNotice all those are gone,\nand the only thing I have,\n\n220\n00:11:37.731 --> 00:11:41.177\nevery one of these starts with get-dns.\n\n221\n00:11:41.177 --> 00:11:44.733\nSo by using those wildcards I can find\ncommands, but understanding how to use\n\n222\n00:11:44.733 --> 00:11:47.538\nthem is gonna help you find\nthe command you're looking for.\n\n223\n00:11:47.538 --> 00:11:52.848\nIf you know it has DNS somewhere in there,\n*DNS*.\n\n224\n00:11:52.848 --> 00:11:57.543\nIf you know that it ends in DNS or\nlike, let's do an example.\n\n225\n00:11:57.543 --> 00:12:00.908\nLet's see what commands end in cache.\n\n226\n00:12:00.908 --> 00:12:05.603\nSo we could do a Get-Command\n\n227\n00:12:05.603 --> 00:12:11.285\n*cache*, if I can spell cache.\n\n228\n00:12:11.285 --> 00:12:16.089\nAnd there we go, every one of these\ncommands ends in the word cache.\n\n229\n00:12:16.089 --> 00:12:20.213\nBecause I don´t have an asterisk at\nthe end, it means I´m telling it,\n\n230\n00:12:20.213 --> 00:12:21.398\nit ends right here.\n\n231\n00:12:21.398 --> 00:12:22.214\nThat's not redundant.\n\n232\n00:12:22.214 --> 00:12:23.237\nAt the end I'm telling you at the end.\n\n233\n00:12:23.237 --> 00:12:23.987\n&gt;&gt; [LAUGH]\n&gt;&gt; But hopefully you get the idea.\n\n234\n00:12:23.987 --> 00:12:25.209\n&gt;&gt; But we get the point.\n\n235\n00:12:25.209 --> 00:12:28.173\nYou can see that you can really,\nlike you said, use this as a tool and\n\n236\n00:12:28.173 --> 00:12:30.214\nnot just knowing, hey, PowerShell exists.\n\n237\n00:12:30.214 --> 00:12:33.934\nBut really leveraging how to\nuse it to your environment,\n\n238\n00:12:33.934 --> 00:12:37.822\nlike if you wanted to monitor\nstatuses of virtual machine.\n\n239\n00:12:37.822 --> 00:12:41.056\nYou could use like Mike had showed\nus previously that measure tool and\n\n240\n00:12:41.056 --> 00:12:44.581\nyou could measure different metrics or\nstatistics about those machines.\n\n241\n00:12:44.581 --> 00:12:48.970\nSo you could be actively monitoring, or\nmaybe you're providing documentation and\n\n242\n00:12:48.970 --> 00:12:52.821\nyou're looking for configurations and\nyou format it in different ways.\n\n243\n00:12:52.821 --> 00:12:55.076\nSo whatever you wanna use it for\nit's there for you.\n\n244\n00:12:55.076 --> 00:12:56.059\n&gt;&gt; Very, very flexible.\n\n245\n00:12:56.059 --> 00:13:00.683\nJust get used to using those wildcards,\nit'll make your life a whole lot easier,\n\n246\n00:13:00.683 --> 00:13:04.252\nlooking for and trying to find\nthe command you are looking for.\n\n247\n00:13:04.252 --> 00:13:08.264\nSo let's say we find\nthe command that we wanted.\n\n248\n00:13:08.264 --> 00:13:14.275\nLet's do what's one that\nI want to use here.\n\n249\n00:13:14.275 --> 00:13:20.096\nLet's see what get-dnsclient involves.\n\n250\n00:13:20.096 --> 00:13:21.545\nThat ones probably not\na good one to show you.\n\n251\n00:13:21.545 --> 00:13:22.815\n&gt;&gt; What about records?\n\n252\n00:13:22.815 --> 00:13:24.739\nCMS records?\n\n253\n00:13:24.739 --> 00:13:30.866\n&gt;&gt; Before I get too far let's,\nLet's do this.\n\n254\n00:13:30.866 --> 00:13:32.950\nI need a complex one and\nthat's what I'm looking for.\n\n255\n00:13:32.950 --> 00:13:35.600\nLet's get-ad user.\n\n256\n00:13:35.600 --> 00:13:37.416\n&gt;&gt; Okay.\n&gt;&gt; All right?\n\n257\n00:13:37.416 --> 00:13:41.921\nAnd so when I hit Enter,\nI can see that it didn't work, right?\n\n258\n00:13:41.921 --> 00:13:46.651\nI get something weird, it's telling me,\nget user a command pipeline position one,\n\n259\n00:13:46.651 --> 00:13:49.225\nsupply values for\nthe following parameters.\n\n260\n00:13:49.225 --> 00:13:53.444\nType exclamation question mark for\nhelp, a filter colon, and\n\n261\n00:13:53.444 --> 00:13:55.364\na blinking cursor, right?\n\n262\n00:13:55.364 --> 00:13:56.137\nCrazy.\n\n263\n00:13:56.137 --> 00:13:58.568\nWhat the heck is all of this stuff?\n\n264\n00:13:58.568 --> 00:14:02.352\nAnd let me just, Ctrl+C and cls, oops.\n\n265\n00:14:04.799 --> 00:14:07.365\nCls, I'll show you guys\naliases a little bit, but\n\n266\n00:14:07.365 --> 00:14:10.363\nI know you probably see me typed\nthis a whole bunch of times.\n\n267\n00:14:10.363 --> 00:14:14.615\ncls is for clearing my host or my console.\n\n268\n00:14:14.615 --> 00:14:15.906\nSo it just lets me go back at the top.\n\n269\n00:14:15.906 --> 00:14:17.077\n&gt;&gt; Probably my favorite.\n\n270\n00:14:17.077 --> 00:14:20.227\nIt's just like wiping the slate clean,\nespecially if you have all that red error\n\n271\n00:14:20.227 --> 00:14:22.231\ntext and you're like,\nthat didn't just happen.\n\n272\n00:14:22.231 --> 00:14:23.573\n&gt;&gt; [LAUGH] Yeah, that's exciting.\n\n273\n00:14:23.573 --> 00:14:24.399\nI can ignore that.\n\n274\n00:14:24.399 --> 00:14:25.983\nIt ain't never happened.\n\n275\n00:14:25.983 --> 00:14:29.072\nIt's actually one of the things I'm\nalmost always alias when I'm working on\n\n276\n00:14:29.072 --> 00:14:29.605\na Linux box.\n\n277\n00:14:29.605 --> 00:14:31.169\nBecause it's just habit.\n\n278\n00:14:31.169 --> 00:14:34.258\nIt's so quick and easy to type and I know\nthere's a command on Linux to do it.\n\n279\n00:14:34.258 --> 00:14:35.332\n&gt;&gt; I know but it's what?\n\n280\n00:14:35.332 --> 00:14:36.738\nLike you have to type out clears?\n\n281\n00:14:36.738 --> 00:14:37.327\n&gt;&gt; Just have to type it out.\n\n282\n00:14:37.327 --> 00:14:38.479\n&gt;&gt; Yeah.\nWhy do they-\n\n283\n00:14:38.479 --> 00:14:39.505\n&gt;&gt; And just out of habit,\n\n284\n00:14:39.505 --> 00:14:43.026\ni've been working at Microsoft for so\nlong that cls comes out before I think.\n\n285\n00:14:43.026 --> 00:14:45.783\n&gt;&gt; Right?\n&gt;&gt; I'm on Linux, so we alias it.\n\n286\n00:14:45.783 --> 00:14:50.946\nBut, so cls has clear screen and\nit is what I've been using.\n\n287\n00:14:50.946 --> 00:14:54.119\nAll right, so we've got these commands and\n\n288\n00:14:54.119 --> 00:14:57.824\nas you saw the get-ad user\ndidn't work on its own.\n\n289\n00:14:57.824 --> 00:15:01.005\nAnd that is because commands,\na lot of commands,\n\n290\n00:15:01.005 --> 00:15:04.207\nmost commands require\nadditional information.\n\n291\n00:15:04.207 --> 00:15:08.453\nThey have what's called parameters\nthat are associated with them.\n\n292\n00:15:08.453 --> 00:15:12.065\nAnd that is how I can provide\nthat additional information.\n\n293\n00:15:12.065 --> 00:15:13.942\nThe question is, how do I know?\n\n294\n00:15:13.942 --> 00:15:18.719\nHow do I find out what parameters go with\na particular command to whether they're\n\n295\n00:15:18.719 --> 00:15:23.649\nrequired or optional, cuz some parameters\nare required and you have to have them.\n\n296\n00:15:23.649 --> 00:15:26.959\nAnd if you think about it, get-ad user.\n\n297\n00:15:26.959 --> 00:15:27.699\n&gt;&gt; What do you want me to get?\n\n298\n00:15:27.699 --> 00:15:30.670\n&gt;&gt; Yeah, you can kinda figure\nit out in your own head, right?\n\n299\n00:15:30.670 --> 00:15:34.127\nGet-aduser, short for\nActive Directory user,\n\n300\n00:15:34.127 --> 00:15:38.568\nget is a read command, so\nmost likely this command is gonna go and\n\n301\n00:15:38.568 --> 00:15:42.373\nread information about a user\nfrom Active Directory.\n\n302\n00:15:42.373 --> 00:15:43.520\nBut what user as Cherokee said?\n\n303\n00:15:43.520 --> 00:15:46.730\nWe didn't tell what user, so\nit doesn't know what to do and\n\n304\n00:15:46.730 --> 00:15:49.827\nthat's because that command\nhas a required parameter.\n\n305\n00:15:49.827 --> 00:15:52.759\nYou need to tell it what account AD\nuser account that you want to get from\n\n306\n00:15:52.759 --> 00:15:53.608\nActive Directory.\n\n307\n00:15:53.608 --> 00:15:55.637\nBut not all of them are so intuitive,\n\n308\n00:15:55.637 --> 00:15:59.382\nespecially when your configuring\nsomething or adding something.\n\n309\n00:15:59.382 --> 00:16:00.960\nWhat options do I have?\n\n310\n00:16:00.960 --> 00:16:04.628\nIs this going to be in a private or is\nthis going to, what kinds of like if your\n\n311\n00:16:04.628 --> 00:16:07.566\ncreating virtual network adaptors and\nvirtual machines.\n\n312\n00:16:07.566 --> 00:16:09.306\n&gt;&gt; Yeah.\n&gt;&gt; Is this gonna be isolated or\n\n313\n00:16:09.306 --> 00:16:12.500\nwhatever your parameters are,\nhow do I know if they're correct?\n\n314\n00:16:12.500 --> 00:16:13.369\n&gt;&gt; Talk about frustrating, right?\n\n315\n00:16:13.369 --> 00:16:15.718\nYou type in a command-\n&gt;&gt; [LAUGH]\n\n316\n00:16:15.718 --> 00:16:16.420\n&gt;&gt; You had one parameter, fail,\n\n317\n00:16:16.420 --> 00:16:17.287\ncuz you're missing this parameter.\n\n318\n00:16:17.287 --> 00:16:20.204\nOkay, so I add that parameter,\nEnter, fail.\n\n319\n00:16:20.204 --> 00:16:21.390\nYou're still missing this parameter.\n\n320\n00:16:21.390 --> 00:16:25.057\nSo knowing like Cherokee says\nwhat parameters are available,\n\n321\n00:16:25.057 --> 00:16:27.209\nwhich one's are required, right?\n\n322\n00:16:27.209 --> 00:16:29.775\nCuz some of them required,\nsome of the optional.\n\n323\n00:16:29.775 --> 00:16:30.843\nOptional, I can leave them off.\n\n324\n00:16:30.843 --> 00:16:34.412\nBut if they're required, the command\nis going to fail [LAUGH] without them.\n\n325\n00:16:34.412 --> 00:16:37.105\nSo the-\n&gt;&gt; You laugh at that.\n\n326\n00:16:37.105 --> 00:16:38.610\n&gt;&gt; [LAUGH]\n&gt;&gt; No, but it's true though,\n\n327\n00:16:38.610 --> 00:16:39.421\nif you don't think about it.\n\n328\n00:16:39.421 --> 00:16:43.786\nAnd of course, you do have the PowerShell\nitself to be able to help you.\n\n329\n00:16:43.786 --> 00:16:47.170\nBut Microsoft also on\njust about every cmdlets,\n\n330\n00:16:47.170 --> 00:16:50.477\nthey have documentation\non their site as well.\n\n331\n00:16:50.477 --> 00:16:53.287\nAnd they usually have hyperlinks\nto click on through, so\n\n332\n00:16:53.287 --> 00:16:55.480\nyou can see any kind of dependencies.\n\n333\n00:16:55.480 --> 00:16:58.244\nAnd then read what those mean and\nthen just kinda figure things out.\n\n334\n00:16:58.244 --> 00:17:01.791\n&gt;&gt; Fantastic resources out\nthere on TechNet and MSDN.\n\n335\n00:17:01.791 --> 00:17:02.533\nI love TechNet.\n\n336\n00:17:02.533 --> 00:17:06.261\nBut I'll tell you,\nyou can almost all of that, well you can,\n\n337\n00:17:06.261 --> 00:17:09.509\nyou can get all of that help\nright here in PowerShell.\n\n338\n00:17:09.509 --> 00:17:12.596\nI don't have to open up a browser,\nPowerShell will open up a browser for\n\n339\n00:17:12.596 --> 00:17:13.579\nme if I really need it.\n\n340\n00:17:13.579 --> 00:17:16.415\nThat's how powerful [LAUGH]-\n&gt;&gt; [LAUGH]\n\n341\n00:17:16.415 --> 00:17:16.982\n&gt;&gt; PowerShell is.\n\n342\n00:17:16.982 --> 00:17:20.265\nAll right, Ss let's talk about that, cuz\nthat's really where we're hinting at or\n\n343\n00:17:20.265 --> 00:17:23.056\nwhere we're leading towards is,\nhow do I get help within powerShell?\n\n344\n00:17:23.056 --> 00:17:25.710\nAnd I think I mentioned it in\none of our first episodes.\n\n345\n00:17:25.710 --> 00:17:29.736\nMicrosoft has really done a good job\nby providing help for PowerShell.\n\n346\n00:17:29.736 --> 00:17:34.030\nGiving us the resources we need\nto be successful with PowerShell.\n\n347\n00:17:34.030 --> 00:17:36.880\nIt's just the matter of knowing\nhow to access the information.\n\n348\n00:17:36.880 --> 00:17:39.797\nSo that is what we're going to do next,\nall right?\n\n349\n00:17:39.797 --> 00:17:46.904\nAnd the first thing we'll do\nis a command called get-help.\n\n350\n00:17:46.904 --> 00:17:48.416\nAnd I'll go ahead and hit Enter.\n\n351\n00:17:48.416 --> 00:17:53.558\nNow if you just type get help,\nwithout any additional parameters.\n\n352\n00:17:53.558 --> 00:17:56.462\nWhat you'll get help on is,\nhow to get help.\n\n353\n00:17:56.462 --> 00:17:57.534\nKinda cool, right?\n\n354\n00:17:57.534 --> 00:18:01.114\n&gt;&gt; [LAUGH]\n&gt;&gt; Windows Powershell Help System.\n\n355\n00:18:01.114 --> 00:18:01.834\n&gt;&gt; That's my kinda help.\n\n356\n00:18:01.834 --> 00:18:03.798\n[LAUGH]\n&gt;&gt; [LAUGH] I know right.\n\n357\n00:18:03.798 --> 00:18:05.113\nHelp me, help me-\n&gt;&gt; Help.\n\n358\n00:18:05.113 --> 00:18:06.229\n[LAUGH]\n&gt;&gt; All right.\n\n359\n00:18:06.229 --> 00:18:08.682\n&gt;&gt; Displays help about\nWindows PowerShell cmdlets and concepts.\n\n360\n00:18:08.682 --> 00:18:14.577\nNow, when we use the help system, right?\n\n361\n00:18:14.577 --> 00:18:18.321\nThere's several different ways, and\nI don't think we're gonna do it here,\n\n362\n00:18:18.321 --> 00:18:18.954\nlet's see.\n\n363\n00:18:18.954 --> 00:18:23.617\nWhat I wanna show us is how I update\nthe help because the first thing.\n\n364\n00:18:23.617 --> 00:18:27.683\nYou've probably should do when you're\ngetting start with the PowerShell\n\n365\n00:18:27.683 --> 00:18:29.270\nis update your help.\n\n366\n00:18:29.270 --> 00:18:33.236\nBecause the help that you get\nis only gonna source locally.\n\n367\n00:18:33.236 --> 00:18:38.020\nIt's gonna look at your computer and\nsee what help files are available.\n\n368\n00:18:38.020 --> 00:18:41.378\nAnd I can tell you that not\nvery many of them are there.\n\n369\n00:18:41.378 --> 00:18:45.674\nLet's do this,\nI'm gonna switch over to server two.\n\n370\n00:18:45.674 --> 00:18:50.661\nLet me log in, Cuz I left this\n\n371\n00:18:50.661 --> 00:18:55.138\nmachine intentionally unupdated,\nI'm gonna open up PowerShell.\n\n372\n00:18:58.140 --> 00:19:00.018\nAnd we let that kick in there,\n\n373\n00:19:00.018 --> 00:19:04.831\nand I'm gonna do a get-module just to\nsee what modules I have already on this\n\n374\n00:19:04.831 --> 00:19:09.402\nmachine, Was thinking about\ntab autofilling, there he is.\n\n375\n00:19:09.402 --> 00:19:11.598\nI would say with tab autofill,\n\n376\n00:19:11.598 --> 00:19:16.340\nthe first time you open up PowerShell\ngive it second tab autofill.\n\n377\n00:19:16.340 --> 00:19:18.489\nYou're like it's not working,\ngive it a second.\n\n378\n00:19:18.489 --> 00:19:21.923\nIt's loading everything up in\nthe background, so that it can index and\n\n379\n00:19:21.923 --> 00:19:23.077\nget access to all that.\n\n380\n00:19:23.077 --> 00:19:27.568\nI'm going to get-module, and I'll see\nthat I have the management utility or\n\n381\n00:19:27.568 --> 00:19:30.712\nmodule and\nthere's a command called add-computer.\n\n382\n00:19:30.712 --> 00:19:33.881\nSounds interesting,\nI wanna know how to use that command.\n\n383\n00:19:33.881 --> 00:19:40.658\nGet-help add-computer,\nit's as easy as that.\n\n384\n00:19:40.658 --> 00:19:45.350\nget-help, and then naming\nthe cmdlets that you want help with.\n\n385\n00:19:45.350 --> 00:19:47.609\nI hit Enter, and I'm gonna get some help.\n\n386\n00:19:47.609 --> 00:19:50.827\nWhich is very, very handy,\nkind of what we expected, right?\n\n387\n00:19:50.827 --> 00:19:55.772\nHere's the name of the command,\nhere's the syntax for that command, right?\n\n388\n00:19:55.772 --> 00:20:01.057\nIt gives me aliases, and then down\nbelow in the remarks, I've got this\n\n389\n00:20:01.057 --> 00:20:06.273\nget help cannot find the help files for\nthis cmdlets on this computer.\n\n390\n00:20:06.273 --> 00:20:10.980\nIt is displaying only partial help,\nyou need to download and\n\n391\n00:20:10.980 --> 00:20:13.400\ninstall the help files.\n\n392\n00:20:13.400 --> 00:20:17.317\nSo out of the box, PowerShell has\nsome basic auto generated help for\n\n393\n00:20:17.317 --> 00:20:18.907\neach one of those cmdlets.\n\n394\n00:20:18.907 --> 00:20:24.420\nBasic syntax on how you\nwould use that command.\n\n395\n00:20:24.420 --> 00:20:28.549\nBut I will tell you, we're gonna talk\nabout how to read this in just a minute.\n\n396\n00:20:28.549 --> 00:20:33.300\nBut to somebody that's starting out,\nthat can be a little intimidating, right?\n\n397\n00:20:33.300 --> 00:20:37.510\nLike wow I wanted to use this command,\nbut that doesn't look fun.\n\n398\n00:20:37.510 --> 00:20:39.959\nI think I'll just go right-click an\nActive Directory and choose new computer.\n\n399\n00:20:39.959 --> 00:20:41.213\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] Right?\n\n400\n00:20:41.213 --> 00:20:42.693\n&gt;&gt; [LAUGH]\n&gt;&gt; The heck with PowerShell,\n\n401\n00:20:42.693 --> 00:20:43.608\nI'm going back to the GUI.\n\n402\n00:20:43.608 --> 00:20:46.412\nAnd I wouldn't blame you,\nafter looking at this.\n\n403\n00:20:46.412 --> 00:20:49.531\nAnd you start looking at like new\n-aduser and things like that,\n\n404\n00:20:49.531 --> 00:20:53.186\nthe commands do get a little intimidating,\nthere's a lot of parameters.\n\n405\n00:20:53.186 --> 00:20:55.430\n&gt;&gt; Sometimes when it comes\nto Active Directory,\n\n406\n00:20:55.430 --> 00:20:58.779\nit's almost like if you're creating\njust one user or one computer.\n\n407\n00:20:58.779 --> 00:21:02.617\nIt might be more beneficial to use\nthe GUI, if you have that availability.\n\n408\n00:21:02.617 --> 00:21:06.778\nBut you really see the most benefit,\nif you have to create multiple users and\n\n409\n00:21:06.778 --> 00:21:08.805\nmultiple machines at the same time.\n\n410\n00:21:08.805 --> 00:21:11.845\nSo that's where you're really\nhelping yourself out here.\n\n411\n00:21:11.845 --> 00:21:13.295\n&gt;&gt; Yeah, many things are like that,\n\n412\n00:21:13.295 --> 00:21:15.351\nmost things I think are like\nthat in PowerShell.\n\n413\n00:21:15.351 --> 00:21:19.347\nThere are definitely some things that I'll\ngo in and use PowerShell, and it's just as\n\n414\n00:21:19.347 --> 00:21:22.644\nquick if not quicker to do from\nPowerShell than it would be from the GUI.\n\n415\n00:21:22.644 --> 00:21:25.626\nBut there are a lot of\nthings as Cherokee says,\n\n416\n00:21:25.626 --> 00:21:30.458\nthat are a lot of typing involved when\nyou get into running those commands.\n\n417\n00:21:30.458 --> 00:21:32.925\nSo if you're only creating as you said,\n\n418\n00:21:32.925 --> 00:21:37.583\none user most likely it's gonna be a lot\neasier to go into the GUI and do that.\n\n419\n00:21:37.583 --> 00:21:41.227\nBut if it's something you use everyday,\nthey're constantly calling you up.\n\n420\n00:21:41.227 --> 00:21:44.692\nHey, we are hiring five new people in\nsales, it would be really nice to have\n\n421\n00:21:44.692 --> 00:21:47.571\na script to run through that,\ncuz it can save you a lot of time.\n\n422\n00:21:47.571 --> 00:21:50.679\nEspecially if they,\nwell we will get to that, we will-\n\n423\n00:21:50.679 --> 00:21:51.458\n&gt;&gt; [LAUGH]\n\n424\n00:21:51.458 --> 00:21:52.365\n&gt;&gt; Talk about that automated,\n\n425\n00:21:52.365 --> 00:21:54.631\nthey give you a spreadsheet with here\nis all my names and departments and\n\n426\n00:21:54.631 --> 00:21:55.819\nphone numbers and things like that.\n\n427\n00:21:55.819 --> 00:21:57.374\n&gt;&gt; Right, plug and check.\n\n428\n00:21:57.374 --> 00:21:58.698\n&gt;&gt; And PowerShell makes it easy-\n&gt;&gt; Yeah.\n\n429\n00:21:58.698 --> 00:22:00.269\n&gt;&gt; All right?\nIt's a lot easier than trying\n\n430\n00:22:00.269 --> 00:22:01.895\nto do it one at a time by right-clicking.\n\n431\n00:22:01.895 --> 00:22:03.656\nAll right, so where where we?\n\n432\n00:22:03.656 --> 00:22:06.970\nTake a look at get-help and I was\nsaying that this a very limited help.\n\n433\n00:22:06.970 --> 00:22:10.533\nIt's just giving me the basic syntax for\nthe command.\n\n434\n00:22:10.533 --> 00:22:15.011\nBut it does tell me that I can update\nmy help files and it even tells me,\n\n435\n00:22:15.011 --> 00:22:15.873\nhow to do it.\n\n436\n00:22:15.873 --> 00:22:19.335\nUse update help, let's try it.\n\n437\n00:22:19.335 --> 00:22:26.905\nWe'll type in update-help, and I'll\nhit Enter, and we'll see what happens.\n\n438\n00:22:26.905 --> 00:22:28.629\nYou know what?\nIt's gonna fail actually.\n\n439\n00:22:28.629 --> 00:22:30.339\n[LAUGH] I know what's gonna happen.\n\n440\n00:22:30.339 --> 00:22:32.250\nSo I'm just gonna kill\nthat command real quick.\n\n441\n00:22:32.250 --> 00:22:35.296\nBecause I didn't launch this\nPowerShell window as administrator,\n\n442\n00:22:35.296 --> 00:22:36.298\nit would have failed.\n\n443\n00:22:36.298 --> 00:22:42.670\nSo let me relaunch that, And\ngive it some administrative access.\n\n444\n00:22:42.670 --> 00:22:45.689\nThat's the next thing we need Microsoft,\na pseudo-command, right?\n\n445\n00:22:45.689 --> 00:22:47.190\n&gt;&gt; [LAUGH]\n&gt;&gt; Doesn't have to\n\n446\n00:22:47.190 --> 00:22:48.137\nactually close and launch.\n\n447\n00:22:48.137 --> 00:22:51.428\nWhy can't I just type in\na keyword up there, and\n\n448\n00:22:51.428 --> 00:22:54.404\ntemporarily give my credentials access.\n\n449\n00:22:54.404 --> 00:22:55.102\n&gt;&gt; Yeah.\n\n450\n00:22:55.102 --> 00:22:56.378\n&gt;&gt; Right?\n&gt;&gt; It's only logical that it connects.\n\n451\n00:22:56.378 --> 00:22:57.608\n&gt;&gt; Linux has it, so we will have it.\n\n452\n00:22:57.608 --> 00:22:58.154\n&gt;&gt; Soon, yeah.\n\n453\n00:22:58.154 --> 00:23:02.999\n&gt;&gt; Soon, now that I do my update-help,\n\n454\n00:23:05.837 --> 00:23:09.610\nAnd we will give it just as second\nto reach out, and there it goes.\n\n455\n00:23:09.610 --> 00:23:11.165\nYou can actually watch this go through.\n\n456\n00:23:11.165 --> 00:23:15.221\nThere is the a's, so it's got a ways to\ngo, there's the b's, there's the c's.\n\n457\n00:23:15.221 --> 00:23:17.784\nIt's gonna go and update all of the help.\n\n458\n00:23:17.784 --> 00:23:20.785\nNow I've done this already\non my other machines,\n\n459\n00:23:20.785 --> 00:23:25.155\nI left that one intentionally unupdated,\nso that we could check it out.\n\n460\n00:23:25.155 --> 00:23:28.238\n&gt;&gt; Which is really cool that you just\nshowed us that Mike, because a lot of\n\n461\n00:23:28.238 --> 00:23:31.602\ntimes even with installations for\ndifferent types of rules or components.\n\n462\n00:23:31.602 --> 00:23:36.029\nYou can actually see line by line what's\nhappening whereas if you are just to use\n\n463\n00:23:36.029 --> 00:23:37.431\nlike a wizard in the GUI.\n\n464\n00:23:37.431 --> 00:23:40.150\nIt really doesn't go to\nthat level of detail there.\n\n465\n00:23:40.150 --> 00:23:42.578\nI mean I know it's fast and\nit you to be like really paying attention.\n\n466\n00:23:42.578 --> 00:23:44.159\n&gt;&gt; Right.\n[LAUGH]\n\n467\n00:23:44.159 --> 00:23:45.062\n&gt;&gt; [LAUGH] But at least you see\n\n468\n00:23:45.062 --> 00:23:46.653\nall the little bits and pieces there.\n\n469\n00:23:46.653 --> 00:23:47.288\n&gt;&gt; Absolutely.\n\n470\n00:23:47.288 --> 00:23:49.932\nI love that, that's something\nthat I think should be on all.\n\n471\n00:23:49.932 --> 00:23:52.368\nWhen you run those wizards, they do hide-\n&gt;&gt; Yeah.\n\n472\n00:23:52.368 --> 00:23:54.434\n&gt;&gt; A lot of background.\nA little of the ones that have the details\n\n473\n00:23:54.434 --> 00:23:57.203\nbuttons you can click on to,\nNow I can see what you're doing and\n\n474\n00:23:57.203 --> 00:23:59.046\nattempt to read it as fast as my computer.\n\n475\n00:23:59.046 --> 00:24:00.715\n&gt;&gt; [LAUGH]\n&gt;&gt; All right, so\n\n476\n00:24:00.715 --> 00:24:01.640\nI'll let that continue to update.\n\n477\n00:24:01.640 --> 00:24:06.890\nWe can flip back over to my client cuz on\nmy client I have already done the update.\n\n478\n00:24:06.890 --> 00:24:10.850\nIf I did the update help now, which you\nsay hey everything is up to date and\n\n479\n00:24:10.850 --> 00:24:12.350\nyou're good to go.\n\n480\n00:24:12.350 --> 00:24:12.867\nSo, that's number one.\n\n481\n00:24:12.867 --> 00:24:16.098\nWhen you start out with PowerShell,\nupdate your helps so\n\n482\n00:24:16.098 --> 00:24:19.360\nthat you will have access\nto these local help files.\n\n483\n00:24:19.360 --> 00:24:22.880\nBecause now, what was it that we did,\nadd computer, right?\n\n484\n00:24:22.880 --> 00:24:27.235\nLet's do a git dash help,\nadd computer again, and\n\n485\n00:24:27.235 --> 00:24:30.590\nsee what the difference is in the help.\n\n486\n00:24:32.000 --> 00:24:34.340\nAnd you can see there's\na little different.\n\n487\n00:24:34.340 --> 00:24:35.866\nSo, I still have the syntax,\n\n488\n00:24:35.866 --> 00:24:40.030\nthis was available when we run the other\ncommand without the updated help files.\n\n489\n00:24:40.030 --> 00:24:44.739\nBut now I've got this nice description\ndown here that gives me an English or\n\n490\n00:24:44.739 --> 00:24:46.620\nhuman readable definition.\n\n491\n00:24:46.620 --> 00:24:48.708\nEnglish speaking being my language,\nwhatever.\n\n492\n00:24:48.708 --> 00:24:49.804\n&gt;&gt; [LAUGH]\n&gt;&gt; You're in, so\n\n493\n00:24:49.804 --> 00:24:51.583\nI don't wanna say it's always in English.\n\n494\n00:24:51.583 --> 00:24:52.470\n&gt;&gt; Right.\n\n495\n00:24:52.470 --> 00:24:58.150\n&gt;&gt; But a human readable explanation of\nwhat this command actually does, right?\n\n496\n00:24:58.150 --> 00:25:01.958\nA little information you can use\nthe parameters to specify an OU and\n\n497\n00:25:01.958 --> 00:25:05.023\na domain controller or\nyou could do an unsecure join.\n\n498\n00:25:05.023 --> 00:25:07.088\nAnd then it gives me these related links,\n\n499\n00:25:07.088 --> 00:25:09.510\nCherokee Boose was talking\nabout going online.\n\n500\n00:25:09.510 --> 00:25:12.932\nSo here's a link right\nhere that I could take and\n\n501\n00:25:12.932 --> 00:25:16.540\nI could copy this, oops,\nlet's try that again.\n\n502\n00:25:16.540 --> 00:25:18.716\nWe highlight that, copy that.\n\n503\n00:25:18.716 --> 00:25:22.050\nOpen up my favorite browser.\n\n504\n00:25:22.050 --> 00:25:24.838\nWhich is not on this computer,\nso we'll use Edge.\n\n505\n00:25:24.838 --> 00:25:29.169\n&gt;&gt; [LAUGH] If we know what show\nyou're teaching her,e right?\n\n506\n00:25:29.169 --> 00:25:30.111\n&gt;&gt; [CROSSTALK]\n\n507\n00:25:30.111 --> 00:25:31.208\n&gt;&gt; [LAUGH]\n&gt;&gt; Hey,\n\n508\n00:25:31.208 --> 00:25:32.307\nI like Internet Explorer what can I say?\n\n509\n00:25:32.307 --> 00:25:33.514\n&gt;&gt; Okay.\n&gt;&gt; Yeah, that was what I was gonna say.\n\n510\n00:25:33.514 --> 00:25:37.792\n&gt;&gt; [LAUGH]\n&gt;&gt; Allright, and look there the link took\n\n511\n00:25:37.792 --> 00:25:43.583\nme, I pasted in there there is Microsoft's\nPowerShell 5.1 Add Computer, right?\n\n512\n00:25:43.583 --> 00:25:47.998\nRight out there on Microsoft is\nthe link over the description,\n\n513\n00:25:47.998 --> 00:25:53.410\nexamples, all of that wonderful\nthat Microsoft has done, all right?\n\n514\n00:25:53.410 --> 00:25:56.327\nSo let me close those couple\nextra tabs opened up,\n\n515\n00:25:56.327 --> 00:25:59.534\nthis is the first time I\nlaunched Edge on this machine.\n\n516\n00:25:59.534 --> 00:26:03.429\nSo update help gives me access\nto a lot more information and\n\n517\n00:26:03.429 --> 00:26:06.530\nit's not just the description\nthat it added,\n\n518\n00:26:06.530 --> 00:26:11.220\nit gave me the relevant links,\nrelated links we just looked at.\n\n519\n00:26:11.220 --> 00:26:16.024\nAnd then the down here in the, oops,that\nis not what I was trying to do, and\n\n520\n00:26:16.024 --> 00:26:20.322\ndown here in the remarks,\nyou notice I have other options I can do.\n\n521\n00:26:20.322 --> 00:26:25.597\nAnd it even, I love this, it's actually\ncontact sensitive it knows what command\n\n522\n00:26:25.597 --> 00:26:31.310\nI typed and in the examples, it actually\nuses the command I typed at computer.\n\n523\n00:26:31.310 --> 00:26:36.496\nIf I did a git-help, git-aduser for\n\n524\n00:26:36.496 --> 00:26:39.580\nexample, all right.\n\n525\n00:26:39.580 --> 00:26:46.290\nIt changes the, I don't have the help\nfiles on this machine for that one.\n\n526\n00:26:46.290 --> 00:26:48.780\nI haven't updated my help since\nI installed that module, right?\n\n527\n00:26:48.780 --> 00:26:52.149\nWe installed that module during the show,\nso\n\n528\n00:26:52.149 --> 00:26:55.703\nI don't have the help for\nthat particular one.\n\n529\n00:26:55.703 --> 00:26:58.304\n&gt;&gt; Online or go to, so\nit's still at least giving you an-\n\n530\n00:26:58.304 --> 00:27:00.127\n&gt;&gt; I need to do an update help for here.\n\n531\n00:27:00.127 --> 00:27:04.732\nSo let's go back to that,\ngit dash help, add dash computer.\n\n532\n00:27:06.824 --> 00:27:10.410\nAll right, and again,\nit gives me these other options.\n\n533\n00:27:10.410 --> 00:27:14.664\nSo if I wanna do git dash help\nadd computer, if I add dash,\n\n534\n00:27:14.664 --> 00:27:20.741\nexample, Now look what I get.\n\n535\n00:27:20.741 --> 00:27:23.299\nAll right,\nsame command add computer example one,\n\n536\n00:27:23.299 --> 00:27:26.510\nadd a local computer to the domain and\nthen restart the computer.\n\n537\n00:27:26.510 --> 00:27:27.907\nHere is the command,\n\n538\n00:27:27.907 --> 00:27:32.342\nadd computer dash domain name\nname of the domain dash restart.\n\n539\n00:27:32.342 --> 00:27:37.585\nIf you want to add a local computer to\na workgroup, here's the command to do it.\n\n540\n00:27:37.585 --> 00:27:40.138\nIf you wanna add a local\ncomputer to domain or\n\n541\n00:27:40.138 --> 00:27:43.665\nadd a local computer to a domain\nusing the OU path parameter.\n\n542\n00:27:43.665 --> 00:27:47.881\nOr wanna add into the domain but I wanna\nmake sure it's in the proper OU, so\n\n543\n00:27:47.881 --> 00:27:50.680\nit fix up the right group policy,\nthat's nice.\n\n544\n00:27:50.680 --> 00:27:52.910\nRight here is the command to do that.\n\n545\n00:27:52.910 --> 00:27:54.289\nSo dash examples,\n\n546\n00:27:54.289 --> 00:27:58.783\nshows me real world examples of\nhow to put this command to use.\n\n547\n00:27:58.783 --> 00:28:00.014\nFantastic.\n\n548\n00:28:00.014 --> 00:28:03.330\nWhat else can we do with the git help?\n\n549\n00:28:03.330 --> 00:28:04.927\nSo, that was examples.\n\n550\n00:28:04.927 --> 00:28:10.052\nWe can also change that to details or\ndetailed.\n\n551\n00:28:10.052 --> 00:28:13.603\nAnd if you saw that scroll by,\nthat gives me a lot of information.\n\n552\n00:28:13.603 --> 00:28:17.870\nIt really starts combining a few\nthings when we do the detailed.\n\n553\n00:28:17.870 --> 00:28:21.056\nSo when you do detailed, like I did here,\n\n554\n00:28:21.056 --> 00:28:25.620\nI get the same syntax that I did\nwith the first just git help.\n\n555\n00:28:25.620 --> 00:28:29.900\nI get the description,\nbecause I've updated my help files.\n\n556\n00:28:29.900 --> 00:28:34.301\nBut then each parameter is broken out,\nlike domain name.\n\n557\n00:28:34.301 --> 00:28:36.048\nI wonder what they mean by domain name?\n\n558\n00:28:36.048 --> 00:28:39.920\nWell let's go down here, domain name,\nit's expecting a string.\n\n559\n00:28:39.920 --> 00:28:43.009\nSpecifies the domain to which\nthe computers are added,\n\n560\n00:28:43.009 --> 00:28:46.700\nthis parameter is required when\nadding the computers to a domain.\n\n561\n00:28:46.700 --> 00:28:50.044\nSo now, I'm getting even more help,\nnot only do I see the parameter,\n\n562\n00:28:50.044 --> 00:28:52.720\nbut I get to understand what\nthat parameter is, right?\n\n563\n00:28:52.720 --> 00:28:56.840\nNow, domain name is probably\npreself explanatory one, but\n\n564\n00:28:56.840 --> 00:28:59.840\nnot all of them are gonna\nbe quite that easy.\n\n565\n00:28:59.840 --> 00:29:02.952\nWhat is defer SPN set?\n\n566\n00:29:02.952 --> 00:29:03.584\nI don't know.\n\n567\n00:29:03.584 --> 00:29:04.216\n&gt;&gt; [LAUGH]\n\n568\n00:29:04.216 --> 00:29:04.766\n&gt;&gt; [LAUGH]\n&gt;&gt; All right?\n\n569\n00:29:04.766 --> 00:29:09.407\nBut we will find that down here in our\n\n570\n00:29:09.407 --> 00:29:12.194\ncommands.\nAnd I have to scroll over,\n\n571\n00:29:12.194 --> 00:29:13.944\nwhere it is that section was that in?\n\n572\n00:29:15.920 --> 00:29:17.040\nThat was under upgrade.\n\n573\n00:29:17.040 --> 00:29:20.036\nThey might not have that particular one.\n\n574\n00:29:20.036 --> 00:29:23.417\nAnd of course,\nI picked one that's old as dirt here.\n\n575\n00:29:23.417 --> 00:29:25.700\nName of your string path options.\n\n576\n00:29:25.700 --> 00:29:26.350\nHere we go.\n\n577\n00:29:26.350 --> 00:29:32.160\nPassword pass, what did I say?\n\n578\n00:29:33.750 --> 00:29:35.561\n&gt;&gt; It's like deferring something.\n\n579\n00:29:35.561 --> 00:29:38.540\n&gt;&gt; Defer an spn pass.\n\n580\n00:29:38.540 --> 00:29:39.567\nOf course, that one I don't see.\n\n581\n00:29:39.567 --> 00:29:41.541\nBut I am sure it is in here somewhere.\n\n582\n00:29:41.541 --> 00:29:43.904\nAnd I would have to do a search.\n\n583\n00:29:43.904 --> 00:29:46.800\nBut the point is that\nyou are getting help-\n\n584\n00:29:46.800 --> 00:29:47.860\n&gt;&gt; More than enough information.\n\n585\n00:29:47.860 --> 00:29:49.470\n&gt;&gt; Yeah, absolutely.\n\n586\n00:29:49.470 --> 00:29:52.280\nAll of those parameters\nare gonna break them down.\n\n587\n00:29:52.280 --> 00:29:52.810\nI can give you information on that.\n\n588\n00:29:52.810 --> 00:29:55.865\nSo that was the detailed, same command.\n\n589\n00:29:55.865 --> 00:29:59.620\nGit dash help,\nadd dash computer dash detailed.\n\n590\n00:29:59.620 --> 00:30:02.980\nWe also have the online option.\n\n591\n00:30:02.980 --> 00:30:06.170\nSo let's change detailed to,\nactually, let's do full first.\n\n592\n00:30:06.170 --> 00:30:07.860\nI forgot about that one.\n\n593\n00:30:07.860 --> 00:30:10.532\nWe'll do full and\nfull just gives you everything.\n\n594\n00:30:10.532 --> 00:30:13.873\nEverything you would get from detailed,\neverything you would get from just running\n\n595\n00:30:13.873 --> 00:30:17.020\nthe git help and everything you would\nget from just running the dash examples.\n\n596\n00:30:17.020 --> 00:30:18.423\nSo you see here's my examples.\n\n597\n00:30:18.423 --> 00:30:22.810\nI go back up, there's all\nthe detailed parameter information.\n\n598\n00:30:22.810 --> 00:30:28.448\nSo full gives you everything you could\npossibly get on that particular command.\n\n599\n00:30:28.448 --> 00:30:30.160\nWe can also go online.\n\n600\n00:30:30.160 --> 00:30:34.788\nThere is a chance that something has\nbeen updated that I don't have yet\n\n601\n00:30:34.788 --> 00:30:35.970\nor I just prefer.\n\n602\n00:30:35.970 --> 00:30:39.150\nReading it here in PowerShell is\nmaybe not the easiest for you.\n\n603\n00:30:39.150 --> 00:30:43.428\nYou want to see that in\na more easy to read format.\n\n604\n00:30:43.428 --> 00:30:46.870\nYou can use get-help add\ndash computer dash online.\n\n605\n00:30:46.870 --> 00:30:54.370\nAnd you see that opens up our browser and\ntakes me right to that saying page, right?\n\n606\n00:30:54.370 --> 00:30:59.211\nSo that link that we were getting in the\ngeneral help, the dash online just says,\n\n607\n00:30:59.211 --> 00:31:04.280\nhey, I'll take you to that link and I'll\nshow you the information online, right?\n\n608\n00:31:05.300 --> 00:31:07.942\nOne more I gonna show you\nif that wasn't enough.\n\n609\n00:31:07.942 --> 00:31:12.570\nSo we've got git help,\nI'm gonna git help dash examples, okay?\n\n610\n00:31:12.570 --> 00:31:15.830\nGit help dash detaile,\nwe got git help dash full.\n\n611\n00:31:15.830 --> 00:31:18.890\nWe got git help dash online.\n\n612\n00:31:18.890 --> 00:31:27.160\nWe have one last one which is gonna\nbe git help dash show window.\n\n613\n00:31:27.160 --> 00:31:31.990\nAnd this one just opens up\nthis on a window right here.\n\n614\n00:31:31.990 --> 00:31:36.479\nWith all of that help and the syntax,\nit looks like it's actually giving\n\n615\n00:31:36.479 --> 00:31:40.913\nme full cuz I'm seeing each parameter,\ndefinition of the parameter.\n\n616\n00:31:40.913 --> 00:31:45.149\nWhether it's required,\nwhat the full values are,\n\n617\n00:31:45.149 --> 00:31:49.974\nwhat it's expecting as far as a data type,\nall right here.\n\n618\n00:31:49.974 --> 00:31:50.547\nAnd you might think.\n\n619\n00:31:50.547 --> 00:31:52.293\nWhy, what's the point?\n\n620\n00:31:52.293 --> 00:31:53.145\nIt's the same info.\n\n621\n00:31:53.145 --> 00:31:58.318\nWhen I'm on a multi-monitor setup,\nI love being able to pop this out,\n\n622\n00:31:58.318 --> 00:32:01.176\nset this on another window right here.\n\n623\n00:32:01.176 --> 00:32:05.597\nSo now instead of having to scroll back up\nin PowerShell to look at the syntax, I can\n\n624\n00:32:05.597 --> 00:32:09.711\nhave a separate window with my syntax,\nright next to my PowerShell window.\n\n625\n00:32:09.711 --> 00:32:11.680\nSo I can look over at that and\nkeep typing.\n\n626\n00:32:11.680 --> 00:32:13.270\nI don't have to scroll back and forth.\n\n627\n00:32:13.270 --> 00:32:15.588\nSo I really like that option,\n\n628\n00:32:15.588 --> 00:32:19.956\nthe whole show window when it\ncomes to getting the help.\n\n629\n00:32:19.956 --> 00:32:23.330\nAll right, last thing I want to\ntalk about with the getting help.\n\n630\n00:32:23.330 --> 00:32:25.270\nWe saw many different ways to get help.\n\n631\n00:32:25.270 --> 00:32:28.613\nWe also saw what I think is the most\nimportant is how to update your help,\n\n632\n00:32:28.613 --> 00:32:32.324\nto make sure you have the latest and\ngreatest version of the help information.\n\n633\n00:32:32.324 --> 00:32:34.300\nIt also gives you all those other options.\n\n634\n00:32:34.300 --> 00:32:38.177\nWithout the update help I don't\nget the examples, the detailed.\n\n635\n00:32:38.177 --> 00:32:40.656\nI have to manually follow the link.\n\n636\n00:32:40.656 --> 00:32:44.230\nOnce I do the update help, if I wanna go\nonline, or I wanna get detailed help or\n\n637\n00:32:44.230 --> 00:32:46.260\nexamples, I can do that\nright there from PowerShell.\n\n638\n00:32:46.260 --> 00:32:50.970\nAll right, last thing I wanna do is just\ntake a quick look at some of the syntax,\n\n639\n00:32:50.970 --> 00:32:54.400\nso I'm just gonna do a get help.\n\n640\n00:32:55.830 --> 00:32:56.330\nWhoa.\n\n641\n00:32:57.520 --> 00:33:00.980\nMy PowerShell is jumping\nall over the place here.\n\n642\n00:33:00.980 --> 00:33:03.460\nLets just clear that screen and\nget back up to the top.\n\n643\n00:33:05.150 --> 00:33:06.682\nI'm gonna touch my touchpad there.\n\n644\n00:33:06.682 --> 00:33:11.497\nSo get-help add-computer again,\n\n645\n00:33:11.497 --> 00:33:16.317\nand we're gonna look at the syntax.\n\n646\n00:33:16.317 --> 00:33:19.400\nSo here is my command add-computer, and\n\n647\n00:33:19.400 --> 00:33:23.987\nthen I've got this domain name,\nbut it's inside brackets.\n\n648\n00:33:23.987 --> 00:33:28.157\nYou see the bracket there,\nand the bracket there, and\n\n649\n00:33:28.157 --> 00:33:32.519\nthen I've got this caret or\nopen, what do you call that?\n\n650\n00:33:32.519 --> 00:33:33.509\nLess than symbol,-\n&gt;&gt; Greater, less than symbol.\n\n651\n00:33:33.509 --> 00:33:37.222\n&gt;&gt; And the greater than symbol here,\nfollowing that.\n\n652\n00:33:37.222 --> 00:33:41.310\nAnd then I've got one that,\nanother one there,\n\n653\n00:33:41.310 --> 00:33:45.410\nI've got confirm, so\nwhat the heck is going on?\n\n654\n00:33:45.410 --> 00:33:50.257\nHow do we read this actual syntax,\nand the way this works is,\n\n655\n00:33:50.257 --> 00:33:54.356\nit's telling me whether or\nnot they are optional.\n\n656\n00:33:54.356 --> 00:34:01.312\nLike when we, the brackets, if I can get\nmy tongue to do what I want it to do.\n\n657\n00:34:01.312 --> 00:34:05.339\nThe brackets indicate\nthat this is optional.\n\n658\n00:34:05.339 --> 00:34:10.136\nI don't have to use the -domain name,\nwhich makes senses.\n\n659\n00:34:10.136 --> 00:34:12.190\nWhat if I was adding this\ncomputer to a work group?\n\n660\n00:34:12.190 --> 00:34:13.890\nI wouldn't need the domain parameter.\n\n661\n00:34:13.890 --> 00:34:17.515\nSo the domain name is\noptional in this case.\n\n662\n00:34:17.515 --> 00:34:19.750\nWhat else?\n\n663\n00:34:19.750 --> 00:34:21.447\nThe -computer name.\n\n664\n00:34:21.447 --> 00:34:22.960\nIt is optional.\n\n665\n00:34:22.960 --> 00:34:26.172\nLet's find one that has\nsome required parameters.\n\n666\n00:34:26.172 --> 00:34:30.863\nAll right, so let's take a look at\ncommand, Get-ADUser, I think this one has\n\n667\n00:34:30.863 --> 00:34:35.565\nthe syntax that I'm looking for to\ndemonstrate what I've been talking about.\n\n668\n00:34:35.565 --> 00:34:41.542\nSo I'm gonna do a get-help Get-ADUser, and\nGet-ADUser is just a PowerShell command\n\n669\n00:34:41.542 --> 00:34:46.730\nto retrieve a user account from active\ndirectory and get information on it.\n\n670\n00:34:46.730 --> 00:34:49.940\nSo if I do a get-help,\nwhen we look at the syntax here,\n\n671\n00:34:49.940 --> 00:34:54.700\nI can see there's a couple of ways\nof going about using this command.\n\n672\n00:34:54.700 --> 00:34:57.046\nI can do an l.filter, a -identity, or\n\n673\n00:34:57.046 --> 00:35:01.263\na filter just depending on what it is\nI wanna use to find the user account.\n\n674\n00:35:01.263 --> 00:35:04.783\nWhat I'm trying to show you is, not so\nmuch how to use this command, but\n\n675\n00:35:04.783 --> 00:35:06.133\nhow to read the help files,\n\n676\n00:35:06.133 --> 00:35:10.340\nbecause sometimes reading these help\nfiles can be a little bit confusing.\n\n677\n00:35:10.340 --> 00:35:14.630\nAs I was saying earlier,\nthe brackets indicate optional.\n\n678\n00:35:15.720 --> 00:35:18.631\nAnything where you see\nsomething inside a bracket,\n\n679\n00:35:18.631 --> 00:35:23.273\nrealize that that means it's optional,\nit's not a requirement of this command.\n\n680\n00:35:23.273 --> 00:35:27.464\nSo the -identity is how I\ntell it what user account I\n\n681\n00:35:27.464 --> 00:35:32.080\nwant information about when\nI'm doing a Get-ADUser.\n\n682\n00:35:32.080 --> 00:35:33.990\nWe do a -identity, and\n\n683\n00:35:33.990 --> 00:35:37.730\nthen the name of the user account,\nwhich expecting you're gonna see the type,\n\n684\n00:35:37.730 --> 00:35:42.746\ndata type is hey I need a user to go get,\nbut notice the identity,\n\n685\n00:35:42.746 --> 00:35:48.080\n-identity, the parameter name itself\nis in brackets, but this part is not,\n\n686\n00:35:49.350 --> 00:35:54.710\nbecause the command has to know what\nuse you wanna retrieve information on.\n\n687\n00:35:54.710 --> 00:35:58.335\nWhat it's telling me is\nthe -identity part is optional.\n\n688\n00:35:58.335 --> 00:36:01.900\nLet me show you what I mean,\n\n689\n00:36:01.900 --> 00:36:06.398\nGet-ADUser -identity; Mike.\n\n690\n00:36:06.398 --> 00:36:10.030\nSo, I'm doing it just like the help\ntells me to do, here's the command,\n\n691\n00:36:10.030 --> 00:36:14.430\nhere's the parameter, here's the value\nthat I wanna supply for the parameter.\n\n692\n00:36:14.430 --> 00:36:17.720\nI hit enter, and it goes and\nit finds my account.\n\n693\n00:36:18.920 --> 00:36:22.431\nBut, Mike, you told me that\nthe -identity is optional.\n\n694\n00:36:22.431 --> 00:36:23.917\nAll right, let's try it.\n\n695\n00:36:23.917 --> 00:36:30.050\nGet-ADUser Mike, and\nnotice I get the same results.\n\n696\n00:36:31.120 --> 00:36:35.088\nThat's what I mean by sometimes\nthe parameter name itself is optional, but\n\n697\n00:36:35.088 --> 00:36:36.888\nyou still have to provide a value.\n\n698\n00:36:36.888 --> 00:36:41.715\nSo when you're reading the syntax,\nif we look at another one,\n\n699\n00:36:41.715 --> 00:36:46.100\nhere it's telling me that\nthis whole thing is optional.\n\n700\n00:36:46.100 --> 00:36:50.350\nNotice the brackets go around\nthe parameter and the value, whereas here,\n\n701\n00:36:50.350 --> 00:36:53.800\nthey just went around the parameter name,\nbut not the value.\n\n702\n00:36:53.800 --> 00:36:56.366\nSo this is telling me this\nparameter is optional and\n\n703\n00:36:56.366 --> 00:36:58.700\nyou don't even have to provide a value for\nit.\n\n704\n00:36:58.700 --> 00:37:00.888\nIf I'm going to get a user\nfrom Active Directory,\n\n705\n00:37:00.888 --> 00:37:04.274\nI have more than one domain controller,\nand I might wanna see what this domain\n\n706\n00:37:04.274 --> 00:37:06.480\ncontroller has versus\nthis domain controller.\n\n707\n00:37:06.480 --> 00:37:09.747\nVerify replication has occurred or\nsomething like that, so\n\n708\n00:37:09.747 --> 00:37:11.354\nI could specify what server.\n\n709\n00:37:11.354 --> 00:37:15.770\nBut I don't have to, and it'll just reach\nout and talk to any domain controller.\n\n710\n00:37:15.770 --> 00:37:18.428\nSo when you're reading the syntax,\nunderstand that\n\n711\n00:37:18.428 --> 00:37:21.677\nthe brackets mean optional,\nsometimes the entire parameter and\n\n712\n00:37:21.677 --> 00:37:25.294\nvalue are in brackets, which means\nyou don't have to provide it at all.\n\n713\n00:37:25.294 --> 00:37:29.181\nSometimes just the parameter\nname is in brackets, but\n\n714\n00:37:29.181 --> 00:37:31.480\nthe value is not in brackets.\n\n715\n00:37:31.480 --> 00:37:35.692\nThat means you've got to provide a value\nwhether you specify this or not.\n\n716\n00:37:35.692 --> 00:37:38.510\nNow you have to be careful\nwhen you're doing that.\n\n717\n00:37:38.510 --> 00:37:42.990\nIf I do this command here, where I\ndid not specify the parameter name,\n\n718\n00:37:42.990 --> 00:37:45.860\nthat means it's only going by position.\n\n719\n00:37:45.860 --> 00:37:51.890\nIt understand that the first value\nthat I pass is going to be my ADUser,\n\n720\n00:37:51.890 --> 00:37:55.380\nbecause that comes first in the syntax.\n\n721\n00:37:55.380 --> 00:37:58.390\nYou might have a command\nthat has several parameters,\n\n722\n00:37:58.390 --> 00:38:02.580\nthat are all listed as optional parameter\nnames, but you have to supply a value.\n\n723\n00:38:02.580 --> 00:38:06.679\nYou have to put the values in the right\norder because you're not supplying\n\n724\n00:38:06.679 --> 00:38:07.878\nthe parameter name.\n\n725\n00:38:07.878 --> 00:38:11.155\nIf I supply the parameter name-\n&gt;&gt; Takes the guess work out.\n\n726\n00:38:11.155 --> 00:38:15.537\n&gt;&gt; I can put them in any order, because\nnow I'm saying this is the user name,\n\n727\n00:38:15.537 --> 00:38:18.880\nthis is the gooit,\nthis is the interface index.\n\n728\n00:38:18.880 --> 00:38:22.913\nSo if you're specifying parameter name,\nyou can put them in order you want.\n\n729\n00:38:22.913 --> 00:38:27.743\nIf you're not specifying parameter name\nthen you've got to make sure you put it in\n\n730\n00:38:27.743 --> 00:38:30.720\nthe right position,\nif it is allowed at all.\n\n731\n00:38:30.720 --> 00:38:34.180\nMost commands you have to supply\nthe parameter name as well.\n\n732\n00:38:34.180 --> 00:38:38.430\nSome of them will, like this one,\nlet you drop the word -identity.\n\n733\n00:38:38.430 --> 00:38:41.907\nIt just knows you're gonna have to\nprovide that one way or the other, and\n\n734\n00:38:41.907 --> 00:38:44.130\nit better be the first\nthing that you provide.\n\n735\n00:38:44.130 --> 00:38:47.758\nOther things you'll run into\nhere are something like,\n\n736\n00:38:47.758 --> 00:38:50.238\nI know you're looking at that clock.\n\n737\n00:38:50.238 --> 00:38:51.240\n&gt;&gt; [LAUGH]\n&gt;&gt; Right here.\n\n738\n00:38:51.240 --> 00:38:53.430\n&gt;&gt; This is the last one I\nwanna show you I promise.\n\n739\n00:38:54.940 --> 00:38:58.631\nI see brackets, which indicate\nthis whole thing is optional,\n\n740\n00:38:58.631 --> 00:39:01.120\nso authentication type is optional.\n\n741\n00:39:01.120 --> 00:39:06.120\nBut then instead of just a datatype\nI've got this braces, and\n\n742\n00:39:06.120 --> 00:39:09.880\nI've got negotiate : basic.\n\n743\n00:39:09.880 --> 00:39:12.195\nSo what this telling me is\nthis something is optional.\n\n744\n00:39:12.195 --> 00:39:17.704\nBut authentication type has two possible\nvalues, it's either gonna be negotiate or\n\n745\n00:39:17.704 --> 00:39:22.613\nbasic, and that's what the pipe is\nindicating in this particular syntax.\n\n746\n00:39:22.613 --> 00:39:24.327\nIt's saying this or this.\n\n747\n00:39:24.327 --> 00:39:27.960\nHere's another one, -SearchBase.\n\n748\n00:39:27.960 --> 00:39:33.490\nIt can either be Base\n: OneLevel : Subtree.\n\n749\n00:39:33.490 --> 00:39:36.640\nAll right, so\nit's showing me the options and\n\n750\n00:39:36.640 --> 00:39:40.888\nsaying you gotta keep one of these, but\nhere's the three you can pick from.\n\n751\n00:39:40.888 --> 00:39:44.690\nSo hopefully that'll help you as\nyou read through the help syntax,\n\n752\n00:39:44.690 --> 00:39:47.840\nbecause that can be confusing, and\nI wanna make sure that we take advantage,\n\n753\n00:39:47.840 --> 00:39:50.540\ncuz they've done a great\njob with the help.\n\n754\n00:39:50.540 --> 00:39:54.294\nJust have to get use to the way that it's\nwritten there, so hopefully that helps.\n\n755\n00:39:54.294 --> 00:39:56.789\n&gt;&gt; I think so Mike, and\nthis isn't really like a game show.\n\n756\n00:39:56.789 --> 00:39:58.141\nThey don't give me a big buzzer.\n\n757\n00:39:58.141 --> 00:39:59.676\nSo it's okay if you have more to cover,\n\n758\n00:39:59.676 --> 00:40:02.292\nbecause I know we're just getting\nstarted here with PowerShell.\n\n759\n00:40:02.292 --> 00:40:04.394\nWe are out of time for this episode, but\n\n760\n00:40:04.394 --> 00:40:07.466\nI'm sure Mike has a lot more\nhelpful information for us.\n\n761\n00:40:07.466 --> 00:40:09.019\nFor this show we'll go ahead and sign out.\n\n762\n00:40:09.019 --> 00:40:10.386\nI've been your host Cherokee Boose.\n\n763\n00:40:10.386 --> 00:40:11.203\n&gt;&gt; And I'm Mike Rodrick.\n\n764\n00:40:11.203 --> 00:40:14.205\n&gt;&gt; See you next time here at ITProTV.\n\n765\n00:40:14.205 --> 00:40:20.352\n[MUSIC]\n\n766\n00:40:20.352 --> 00:40:23.043\n&gt;&gt; Thank you for watching ITPRO TV.\n\n",
          "vimeoId": "237911723"
        },
        {
          "description": "In this episode, Mike and Cherokee demonstrate using cmdlet history in PowerShell. They also work with aliases, showing how to use them and create your own.",
          "length": "1707",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002-sm.jpg",
          "title": "Command History and Aliases",
          "transcript": "WEBVTT\n\n1\n00:00:00.200 --> 00:00:02.762\nWelcome to ITProTV,\nI'm your host Don Pezet.\n\n2\n00:00:02.762 --> 00:00:05.585\n[CROSSTALK]\n&gt;&gt; Coming at you live from San Francisco,\n\n3\n00:00:05.585 --> 00:00:06.456\nCalifornia.\n\n4\n00:00:06.456 --> 00:00:07.681\n[CROSSTALK]\n\n5\n00:00:07.681 --> 00:00:11.855\n[MUSIC]\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:11.855 --> 00:00:13.840\n&gt;&gt; Welcome to your PowerShell series.\n\n7\n00:00:13.840 --> 00:00:15.710\nI'm your show host Cherokee Boose.\n\n8\n00:00:15.710 --> 00:00:20.660\nIn this episode, we'll be taking a look\nat command history as well as aliases and\n\n9\n00:00:20.660 --> 00:00:24.000\nknow you don't have to join the witness\nprotection program for this show.\n\n10\n00:00:24.000 --> 00:00:26.760\nBack in studio is with us today,\nwe have Mr. Mike Rodrick.\n\n11\n00:00:26.760 --> 00:00:27.621\nHow's it going today, Mike?\n\n12\n00:00:27.621 --> 00:00:29.553\nIt's going good as long as nobody tells.\n\n13\n00:00:29.553 --> 00:00:30.950\n&gt;&gt; If I stop telling bad jokes.\n\n14\n00:00:30.950 --> 00:00:34.470\n&gt;&gt; No, I like that, I like that,\nyou know, some of these aliases we can't,\n\n15\n00:00:34.470 --> 00:00:36.470\nwe've got to make sure we\ndon't give up their identity.\n\n16\n00:00:36.470 --> 00:00:37.155\n&gt;&gt; That's right.\n[LAUGH]\n\n17\n00:00:37.155 --> 00:00:38.379\n&gt;&gt; It could end up in trouble or\n\n18\n00:00:38.379 --> 00:00:39.131\nsix feet under.\n\n19\n00:00:39.131 --> 00:00:40.030\n&gt;&gt; It won't end well.\n\n20\n00:00:40.030 --> 00:00:42.320\n&gt;&gt; Yeah, all right, but\nyeah exactly right.\n\n21\n00:00:42.320 --> 00:00:43.990\nCherokee thank you for having me back.\n\n22\n00:00:43.990 --> 00:00:48.489\nAnd we do have to go over Command history\nand aliases, I know we kind of started\n\n23\n00:00:48.489 --> 00:00:52.438\na discussion on history in a previous\nepisode and in between shows,\n\n24\n00:00:52.438 --> 00:00:57.149\nI know with some of our viewers out there\nwe were talking about command history and\n\n25\n00:00:57.149 --> 00:00:58.359\nhow it's changed.\n\n26\n00:00:58.359 --> 00:01:02.178\nAnd that's what we are going to start\ntoday's episode is looking at how we can\n\n27\n00:01:02.178 --> 00:01:04.646\nget our command history,\nand what has changed and\n\n28\n00:01:04.646 --> 00:01:06.203\nhow it affects us in what we do.\n\n29\n00:01:06.203 --> 00:01:10.500\nSo let's talk about that, we ever\nreally fired a lot of commands yet.\n\n30\n00:01:10.500 --> 00:01:13.299\nWe've been learning some syntax,\nsome terminology and\n\n31\n00:01:13.299 --> 00:01:15.232\njust some concepts of the PowerShell.\n\n32\n00:01:15.232 --> 00:01:18.900\nWe're definitely gonna get to the point\nwhere we are executing a lot of commands.\n\n33\n00:01:18.900 --> 00:01:23.500\nIn fact today, we'll do some of that,\nbut one of the nice things about\n\n34\n00:01:23.500 --> 00:01:27.870\nPowerShell is that it keeps\nhistory of the commands you type.\n\n35\n00:01:27.870 --> 00:01:32.972\nBecause there's a lot of times I need to\nrerun commands that I just typed out.\n\n36\n00:01:32.972 --> 00:01:35.769\nYou might be running your command, and\n\n37\n00:01:35.769 --> 00:01:41.200\nthen changing a configuration somewhere or\na setting or what have you.\n\n38\n00:01:41.200 --> 00:01:43.940\nAnd then you wanna run the command again\nto see if it changed the results, right?\n\n39\n00:01:43.940 --> 00:01:49.990\nTo see if it took effect or fixed your\nproblem or whatever the case may be.\n\n40\n00:01:49.990 --> 00:01:53.890\nAnd sometimes these commands can\nbe long and I have to retype them,\n\n41\n00:01:53.890 --> 00:01:57.720\nI'm gonna make a typo the second the third\ntime what have you, with command history I\n\n42\n00:01:57.720 --> 00:02:02.120\ncan just go back and rerun those\ncommands that I've already executed.\n\n43\n00:02:02.120 --> 00:02:03.170\nAnd they've executed, so\n\n44\n00:02:03.170 --> 00:02:08.270\nI know that they're good commands that\nthey work, which is always a plus.\n\n45\n00:02:08.270 --> 00:02:11.350\n&gt;&gt; So mike, you didn't show us with\nan integrated scripting environment, and\n\n46\n00:02:11.350 --> 00:02:12.580\nyou looked at ADAC.\n\n47\n00:02:12.580 --> 00:02:15.662\nThose were a couple of things that you\nshowed us where we could save our history,\n\n48\n00:02:15.662 --> 00:02:20.251\nbut is there something else you're gonna-\n&gt;&gt; There is all of the different host,\n\n49\n00:02:20.251 --> 00:02:22.275\nwe'll call them hosts.\n\n50\n00:02:22.275 --> 00:02:24.462\nThe, PowerShell console, and\n\n51\n00:02:24.462 --> 00:02:29.950\nthe PowerShell ISC is really what we\ncall the host for running PowerShell.\n\n52\n00:02:29.950 --> 00:02:30.960\nAD users and\n\n53\n00:02:30.960 --> 00:02:35.112\ncomputer's website, Active Directory\nAdministrative Center is of different.\n\n54\n00:02:35.112 --> 00:02:39.780\nThat's just an active\ndirectory snap in that\n\n55\n00:02:39.780 --> 00:02:41.690\nhappens to use PowerShell\nin the background.\n\n56\n00:02:41.690 --> 00:02:43.160\nIt's a little bit\ndifferent there although,\n\n57\n00:02:43.160 --> 00:02:45.780\nit does keep history of your\ncommands which is pretty cool and\n\n58\n00:02:45.780 --> 00:02:48.960\nas we saw it's a pretty good way to learn.\n\n59\n00:02:48.960 --> 00:02:51.359\nBut once we close that console and\nwe go back to it,\n\n60\n00:02:51.359 --> 00:02:55.016\nwe lose access to that history, right,\nit's just showing me the history of\n\n61\n00:02:55.016 --> 00:02:57.960\ncommands that I've executed\nwhile that snap-in was open.\n\n62\n00:02:57.960 --> 00:03:02.160\nSo with PowerShell though, we can go and\nwe can rifle through our history.\n\n63\n00:03:02.160 --> 00:03:07.320\nNow, in the past we had a couple of\nways we would work with our history.\n\n64\n00:03:07.320 --> 00:03:13.513\nWe could use our up and down arrows to\ncycle through recently executed commands.\n\n65\n00:03:13.513 --> 00:03:17.615\nAnd we also had our F7 key which\nwould display our history and\n\n66\n00:03:17.615 --> 00:03:21.960\ngive us a line number next to each\none of those history items, and\n\n67\n00:03:21.960 --> 00:03:25.550\nthen we could execute one\nof those line numbers.\n\n68\n00:03:25.550 --> 00:03:29.920\nSo rather than cycling through one line at\na time, I was able to find the command I\n\n69\n00:03:29.920 --> 00:03:36.050\nwas looking for, see what line number it\nwas, or what ID it gave that history item,\n\n70\n00:03:36.050 --> 00:03:38.570\nand then execute that\nagain by typing a command.\n\n71\n00:03:39.700 --> 00:03:43.750\nWe can still do those same concepts, it's\njust the way we go about it is going to\n\n72\n00:03:43.750 --> 00:03:47.770\nbe different, so for those of you who\nare used to hitting your F7 key and\n\n73\n00:03:47.770 --> 00:03:52.230\nyou're on Windows 10 with version\nPowerShell version 5, and\n\n74\n00:03:52.230 --> 00:03:54.930\nyou're hitting that F7 key and\nyou're going, why is nothing working?\n\n75\n00:03:54.930 --> 00:03:57.140\nWhy is nothing happening when I hit this?\n\n76\n00:03:57.140 --> 00:04:00.086\nWell it's because they took\nit away from us, all right.\n\n77\n00:04:00.086 --> 00:04:03.670\nBut they've replaced it\nwith something better.\n\n78\n00:04:03.670 --> 00:04:08.170\nWe all know how that goes, better is\nrelative, you just have to get used to it.\n\n79\n00:04:08.170 --> 00:04:10.920\nIt is a very convenient way\nto search through history.\n\n80\n00:04:10.920 --> 00:04:13.270\nI'll show you what I mean here in\na second, but it is different.\n\n81\n00:04:13.270 --> 00:04:16.950\nSo I know a lot of us\nare resistant to change and\n\n82\n00:04:16.950 --> 00:04:20.910\nyou have habits and\nyou want to use that F7 key.\n\n83\n00:04:20.910 --> 00:04:22.930\nThere actually is a way\nwe could re-map that,\n\n84\n00:04:22.930 --> 00:04:24.410\nbut we're gonna show you the new way.\n\n85\n00:04:24.410 --> 00:04:28.450\nThe way we're supposed to be doing\nthings now in modern PowerShell, right.\n\n86\n00:04:28.450 --> 00:04:32.920\nAll right, so let's take a look at what\nthe heck all this is I am talking about.\n\n87\n00:04:32.920 --> 00:04:37.120\nFirst of all, let's see what commands we\nhave available for working with history.\n\n88\n00:04:37.120 --> 00:04:37.810\n&gt;&gt; All right.\n\n89\n00:04:37.810 --> 00:04:41.620\n&gt;&gt; And we'll use one of the techniques\nwe learned in a previous episode.\n\n90\n00:04:41.620 --> 00:04:47.261\nWe're gonna do Get Command *history*,\nright?\n\n91\n00:04:47.261 --> 00:04:49.830\nAnd if I spell that correctly,\n\n92\n00:04:49.830 --> 00:04:54.100\nwe'll get a list of cmdlets that we\ncan now use to manipulate our history.\n\n93\n00:04:54.100 --> 00:04:55.480\nAnd we can see a few cmdlets.\n\n94\n00:04:55.480 --> 00:05:01.130\nI can see Add-History, Clear-History,\nGet-History, Invoke-History.\n\n95\n00:05:01.130 --> 00:05:05.748\nThere's actually an application\ncalled filehistory.exe and\n\n96\n00:05:05.748 --> 00:05:09.263\nsomething called an alias\nhistory get history.\n\n97\n00:05:09.263 --> 00:05:12.930\nWe'll take a look at that in just\na minute when we get to aliases.\n\n98\n00:05:12.930 --> 00:05:14.330\nLet's continue on with history.\n\n99\n00:05:14.330 --> 00:05:17.870\nThe one I want to look at first,\nis this one right here.\n\n100\n00:05:17.870 --> 00:05:19.176\nGet History.\n\n101\n00:05:19.176 --> 00:05:21.522\n[CROSSTALK]\n&gt;&gt; Sort of self-explanatory, yeah.\n\n102\n00:05:21.522 --> 00:05:24.956\n&gt;&gt; Yeah, right, we learned the other\nday that in a previous episode\n\n103\n00:05:24.956 --> 00:05:28.750\nthat Get is a read command that's\ngoing to return information.\n\n104\n00:05:28.750 --> 00:05:32.638\nHistory is what I'm looking for,\nsounds perfect, let's try it.\n\n105\n00:05:32.638 --> 00:05:37.790\nGet-history and I hit enter,\nand look at there.\n\n106\n00:05:37.790 --> 00:05:44.852\nI get a list of recently typed commands\nand an ID number next to that, all right.\n\n107\n00:05:44.852 --> 00:05:50.250\nSo Get-history is the command I can\nuse to look at my command history or\n\n108\n00:05:50.250 --> 00:05:52.275\nthe existing session.\n\n109\n00:05:52.275 --> 00:05:55.255\nOkay, that's the key we want\nto remember right there.\n\n110\n00:05:55.255 --> 00:06:00.820\nGet-history, this history right here,\nis only good for this particular session.\n\n111\n00:06:00.820 --> 00:06:01.801\nI've got what?\n\n112\n00:06:01.801 --> 00:06:04.610\n12 items in there, if I close.\n\n113\n00:06:04.610 --> 00:06:06.452\n&gt;&gt; I wonder if it caps\noff at a certain amount.\n\n114\n00:06:06.452 --> 00:06:08.432\n&gt;&gt; It does and\nwe'll come back to that concept.\n\n115\n00:06:08.432 --> 00:06:09.121\n&gt;&gt; Okay.\n[LAUGH]\n\n116\n00:06:09.121 --> 00:06:10.554\n&gt;&gt; Here if I close PowerShell and\n\n117\n00:06:10.554 --> 00:06:13.240\nI open PowerShell up,\nit's been all of what?\n\n118\n00:06:13.240 --> 00:06:15.815\nThree seconds since I closed and\nopened it.\n\n119\n00:06:15.815 --> 00:06:20.970\nGet-History and my history is blank,\nI have no more history.\n\n120\n00:06:20.970 --> 00:06:25.020\nSo as far as the get history command goes,\nit's only good for that session.\n\n121\n00:06:25.020 --> 00:06:28.041\nYou can fire off commands,\nthey'll go into your history, but\n\n122\n00:06:28.041 --> 00:06:30.672\nas soon as you close that\nsession that history is gone.\n\n123\n00:06:30.672 --> 00:06:35.211\nLet me run a couple of commands\nreal quick just to get some\n\n124\n00:06:35.211 --> 00:06:38.470\ncommands back into my history.\n\n125\n00:06:38.470 --> 00:06:40.180\nLet's do a Get-Service and\n\n126\n00:06:40.180 --> 00:06:42.200\nwe'll talk about a lot of\nthese commands as we go here.\n\n127\n00:06:42.200 --> 00:06:45.751\nGet dash and that IP address,\n\n128\n00:06:45.751 --> 00:06:51.480\nwe'll do another Get-History, all right.\n\n129\n00:06:51.480 --> 00:06:56.021\nSo there I've repopulated my\nhistory by running a few commands.\n\n130\n00:06:56.021 --> 00:07:00.570\nSo Get-History shows you your history for\nthis particular session.\n\n131\n00:07:00.570 --> 00:07:04.910\nIf I want to run one of those history\ncommands, let's say I see that number two,\n\n132\n00:07:04.910 --> 00:07:06.250\nthat's the one I need to run again.\n\n133\n00:07:06.250 --> 00:07:08.765\nAnd imagine it was\na really long complex one,\n\n134\n00:07:08.765 --> 00:07:12.840\ncuz honestly I can just type get\nprocess again and I'd be fine, right?\n\n135\n00:07:12.840 --> 00:07:15.610\nBut imagine it was a more complex command.\n\n136\n00:07:15.610 --> 00:07:21.024\nWell that's when we need, if we go back\nand look at our, actually, you what?\n\n137\n00:07:21.024 --> 00:07:22.710\nI'll show you.\n[LAUGH] I'm using it I'm also show\n\n138\n00:07:22.710 --> 00:07:23.480\nyou right now.\n\n139\n00:07:23.480 --> 00:07:25.120\nRemember, I said we can go use our up and\n\n140\n00:07:25.120 --> 00:07:28.980\ndown arrows to cycle through\npreviously issued commands, all right?\n\n141\n00:07:28.980 --> 00:07:33.230\nThere I'm gonna go find that command\nwhere we looked for the history commands.\n\n142\n00:07:33.230 --> 00:07:37.580\nAnd I'm just using my up and\ndown arrows to cycle through my commands.\n\n143\n00:07:37.580 --> 00:07:40.155\nAnd there you can see\na command I issued previously,\n\n144\n00:07:40.155 --> 00:07:43.720\nGet-Command \"history\",\nright, and I'll hit that.\n\n145\n00:07:44.930 --> 00:07:49.626\nAnd if I wanted to run one of\nthese commands out of my history,\n\n146\n00:07:49.626 --> 00:07:53.044\nthen I'm gonna use this cmdlet right here.\n\n147\n00:07:53.044 --> 00:07:58.013\nInvoke-history, Invoke history,\n\n148\n00:07:58.013 --> 00:08:04.385\nby doing Get- help Invoke Whoops,\n-History.\n\n149\n00:08:04.385 --> 00:08:06.405\nI'll see that it's pretty simple.\n\n150\n00:08:06.405 --> 00:08:10.500\nInvoke-History and then an ID, or -Id for\n\n151\n00:08:10.500 --> 00:08:13.140\na parameter, and\nthen a string representing that ID.\n\n152\n00:08:13.140 --> 00:08:16.230\nAnd notice Id is actually optional.\n\n153\n00:08:17.470 --> 00:08:21.700\nSo I can do Invoke-History.\n\n154\n00:08:21.700 --> 00:08:22.990\nAnd let me get rid of that.\n\n155\n00:08:22.990 --> 00:08:28.950\nSo we do an Invoke-History, and I said\nnumber 3, I think, was the one I wanted?\n\n156\n00:08:28.950 --> 00:08:32.368\nSo I can do a -Id 3.\n\n157\n00:08:32.368 --> 00:08:35.260\nAnd notice it runs that command again.\n\n158\n00:08:35.260 --> 00:08:36.610\nLet me scroll back up to the top.\n\n159\n00:08:38.550 --> 00:08:41.966\nAnd I typed in Invoke-History -Id 3,, and\n\n160\n00:08:41.966 --> 00:08:47.280\nit said the third entry in your\nhistory list was Get -Service.\n\n161\n00:08:47.280 --> 00:08:50.260\nSo let me run that again, all right.\n\n162\n00:08:50.260 --> 00:08:53.546\nSo get -history allows you to\nretrieve a list of history items and\n\n163\n00:08:53.546 --> 00:08:55.875\nputs an ID up next to each one of them.\n\n164\n00:08:55.875 --> 00:08:59.450\nInvoke-History allows you to\nexecute one of those commands.\n\n165\n00:08:59.450 --> 00:09:03.870\nYou just need that ID number\nto execute that command.\n\n166\n00:09:03.870 --> 00:09:07.690\nBut as I said,\nthat get -history clears itself.\n\n167\n00:09:07.690 --> 00:09:11.370\nIt's temporary, and as soon as I\nclose this PowerShell session,\n\n168\n00:09:11.370 --> 00:09:13.700\nI'm gonna lose access to that history.\n\n169\n00:09:13.700 --> 00:09:15.460\nThis is not a good thing, all right?\n\n170\n00:09:15.460 --> 00:09:18.870\nSomething that Linux and\nother shells have had for a long time\n\n171\n00:09:18.870 --> 00:09:22.910\nthat we've lacked here in the Windows\nworld is some type of persistent history.\n\n172\n00:09:22.910 --> 00:09:23.740\nWhere I can go and\n\n173\n00:09:23.740 --> 00:09:28.360\nI can run commands that I ran yesterday,\nor last week, something like that.\n\n174\n00:09:28.360 --> 00:09:31.296\nCuz these complex commands I\nmight not run every day or\n\n175\n00:09:31.296 --> 00:09:33.261\nevery time I have PowerShell open.\n\n176\n00:09:33.261 --> 00:09:35.561\nBut I do wanna go back and run them again.\n\n177\n00:09:35.561 --> 00:09:40.201\nAnd so PowerShell now has a method for\ndoing that, and\n\n178\n00:09:40.201 --> 00:09:45.680\nit's all due to a particular\nmodel called PSReadline.\n\n179\n00:09:45.680 --> 00:09:50.103\nNow we saw this, Cherokee,\nyesterday when we did a Get -Module.\n\n180\n00:09:50.103 --> 00:09:52.791\nWe saw a module called PSReadline.\n\n181\n00:09:52.791 --> 00:09:54.587\nRemember, we were talking\nabout modules and\n\n182\n00:09:54.587 --> 00:09:57.840\nI said these are the ones that you get by\ndefault that are imported in the session.\n\n183\n00:09:57.840 --> 00:10:00.140\nIt was already there,\nwe didn't have to do anything.\n\n184\n00:10:00.140 --> 00:10:05.640\nThis NetTCPIP is there because I\nran that Get -NetIPAddress and\n\n185\n00:10:05.640 --> 00:10:07.010\nthat loaded up that module.\n\n186\n00:10:07.010 --> 00:10:11.685\nThis one, starting with Windows 10,\nis now included by default.\n\n187\n00:10:11.685 --> 00:10:15.664\nIn other words, it's in the list\nof modules to import automatically\n\n188\n00:10:15.664 --> 00:10:18.624\nright out of the box when\nyou install Windows 10.\n\n189\n00:10:18.624 --> 00:10:21.065\nSo I do wanna be careful\nwhen we talk about this.\n\n190\n00:10:21.065 --> 00:10:24.650\nPSReadline is not a PowerShell thing and\nthe features we're getting ready\n\n191\n00:10:24.650 --> 00:10:28.750\nto talk about are not, this is a good\nway to say it, not a PowerShell.\n\n192\n00:10:28.750 --> 00:10:31.780\nIt's not because I'm running\nPowerShell 5.1, all right?\n\n193\n00:10:31.780 --> 00:10:34.010\nIt's not because I'm running Windows 10.\n\n194\n00:10:34.010 --> 00:10:39.790\nIt's because Microsoft has included this\nthird-party module called PSReadline.\n\n195\n00:10:39.790 --> 00:10:42.820\nThat's what's giving me the ability\nto work with the history\n\n196\n00:10:42.820 --> 00:10:44.470\nin the way I'm getting ready to show you.\n\n197\n00:10:44.470 --> 00:10:46.410\nSo just understand that it's\nnot a PowerShell thing.\n\n198\n00:10:46.410 --> 00:10:50.557\nLike if you go and upgrade PowerShell\non Windows 7 to PowerShell 5.1,\n\n199\n00:10:50.557 --> 00:10:53.050\nyou're not gonna see this ability.\n\n200\n00:10:53.050 --> 00:10:56.010\nYou'll be like, well Mike showed me and\nit worked with PowerShell 5.\n\n201\n00:10:56.010 --> 00:10:59.240\nIt's not because I'm running PowerShell 5,\nit's because of this module.\n\n202\n00:10:59.240 --> 00:11:02.180\nWhich means, on your Windows 7 box or\ndown-level client,\n\n203\n00:11:02.180 --> 00:11:05.040\nif you wanted this functionality\nyou could definitely go out and\n\n204\n00:11:05.040 --> 00:11:08.880\nimport this module PSReadline and\nyou would have the same capability.\n\n205\n00:11:08.880 --> 00:11:12.046\nJust to understand it's not gonna be\nthere by default prior to Windows 10.\n\n206\n00:11:12.046 --> 00:11:16.830\nAll right, so\nPSReadline is what's giving me this\n\n207\n00:11:16.830 --> 00:11:21.740\ncapability to store history\nin a persistent fashion.\n\n208\n00:11:21.740 --> 00:11:26.860\nAnd Cherokee, you were asking earlier, you\nsaid is there some kind of cap or limit?\n\n209\n00:11:26.860 --> 00:11:27.639\nAnd there is.\n\n210\n00:11:27.639 --> 00:11:31.582\nBy default, it's gonna remember\nthe last 4,096 commands.\n\n211\n00:11:31.582 --> 00:11:32.102\n&gt;&gt; Good.\n\n212\n00:11:32.102 --> 00:11:32.875\n[LAUGH]\n&gt;&gt; So,\n\n213\n00:11:32.875 --> 00:11:36.910\n[LAUGH] depending on how much you use\nPowerShell that could be a lifetime worth\n\n214\n00:11:36.910 --> 00:11:39.760\nof commands or\nit could be a weeks worth of commands.\n\n215\n00:11:39.760 --> 00:11:42.153\nIt just depends on how\nmuch you use PowerShell.\n\n216\n00:11:42.153 --> 00:11:43.090\nBut let's do this.\n\n217\n00:11:43.090 --> 00:11:49.422\nLet's do a Get -PSReadlineOption.\n\n218\n00:11:49.422 --> 00:11:54.080\nGet -PSReadlineOption, and these are all\nthe options that are available in this\n\n219\n00:11:54.080 --> 00:11:55.900\nparticular module, and\nthere's a lot of them.\n\n220\n00:11:55.900 --> 00:11:58.390\nReally cool ways to\ncustomize your interface.\n\n221\n00:11:58.390 --> 00:12:03.130\nYou can see things like comment background\ncolor, operator background color, and\n\n222\n00:12:03.130 --> 00:12:07.020\nthat all that good stuff that's eye\ncandy for my PowerShell window.\n\n223\n00:12:07.020 --> 00:12:13.268\nWhat we wanna see though is,\nwhere are we at here?\n\n224\n00:12:13.268 --> 00:12:14.417\nI gotta find it.\n\n225\n00:12:14.417 --> 00:12:14.952\nHere it is.\n\n226\n00:12:14.952 --> 00:12:18.810\nMaximumHistoryCount, 4096.\n\n227\n00:12:18.810 --> 00:12:24.080\nSo that is what's determining how many\ncommands I'm receiving in my history file.\n\n228\n00:12:24.080 --> 00:12:26.280\nI can definitely change that.\n\n229\n00:12:26.280 --> 00:12:28.890\nIf that's too many, if I don't\nwant it to remember that many or\n\n230\n00:12:28.890 --> 00:12:32.630\nI want it to remember more,\nI can go and I could modify this value.\n\n231\n00:12:32.630 --> 00:12:34.850\nAnd it does FIFO,\nit's gonna be first in, first out.\n\n232\n00:12:34.850 --> 00:12:36.870\nSo if it ever does get to 4096 commands,\n\n233\n00:12:36.870 --> 00:12:41.280\nthe oldest ones are gonna get bumped out,\nreplaced with the newest ones.\n\n234\n00:12:41.280 --> 00:12:45.360\nWhere this is located is\nthis HistorySavePath.\n\n235\n00:12:45.360 --> 00:12:48.870\nAnd I can see this path right here.\n\n236\n00:12:48.870 --> 00:12:50.470\nNow, I've gone ahead and opened that up so\n\n237\n00:12:50.470 --> 00:12:53.430\nI don't have to navigate down\ninto these hidden folders.\n\n238\n00:12:53.430 --> 00:12:55.930\nSo here is that location.\n\n239\n00:12:55.930 --> 00:12:58.577\nAll right,\nUsers\\Michael\\AppData\\Roaming\\Microsoft\\W-\n\n240\n00:12:58.577 --> 00:13:00.495\nindows\\PowerShell\\PSReadline.\n\n241\n00:13:00.495 --> 00:13:03.645\nAnd here's ConsoleHost_History.txt.\n\n242\n00:13:03.645 --> 00:13:05.735\n&gt;&gt; This could even be used for\nlike troubleshooting.\n\n243\n00:13:05.735 --> 00:13:08.396\nGoing back, if you've had multiple\nadmin's working on a system, or\n\n244\n00:13:08.396 --> 00:13:10.437\nif you suspect any kind of\nlike foul play there maybe.\n\n245\n00:13:10.437 --> 00:13:12.033\n&gt;&gt; Yeah, you could definitely go and\n\n246\n00:13:12.033 --> 00:13:14.355\nsee a history of commands\nthat somebody else ran.\n\n247\n00:13:14.355 --> 00:13:17.765\n&gt;&gt; I mean, you'd think they would\nclear it or clean their tracks, but-\n\n248\n00:13:17.765 --> 00:13:18.425\n&gt;&gt; Maybe they don't know.\n\n249\n00:13:18.425 --> 00:13:19.225\n&gt;&gt; Yeah.\n&gt;&gt; Right, maybe,\n\n250\n00:13:19.225 --> 00:13:20.195\nthere's always that chance.\n\n251\n00:13:20.195 --> 00:13:23.820\nIt is on a per profile basis,\nso this one is specific to me.\n\n252\n00:13:23.820 --> 00:13:27.428\nYou would have one under your profiles,\nso I would have to know where to look.\n\n253\n00:13:27.428 --> 00:13:32.111\nAnd it's supposed to, now, you know when\nI say supposed to that it may not work.\n\n254\n00:13:32.111 --> 00:13:37.081\nBut ISE, PowerShell ISE is supposed\nto keep a separate history file,\n\n255\n00:13:37.081 --> 00:13:40.110\nseparate from the normal PowerShell.\n\n256\n00:13:40.110 --> 00:13:46.150\nIt would be in the same location and\nit would be ConsoleHostISE_History.txt.\n\n257\n00:13:46.150 --> 00:13:48.740\nI will tell you that it's\nnot working on my system.\n\n258\n00:13:48.740 --> 00:13:52.245\nWhen I open up ISE-\n&gt;&gt; It's writing to that text file?\n\n259\n00:13:52.245 --> 00:13:55.030\n&gt;&gt; No, it's not saving history at all,\nwhich is kinda odd.\n\n260\n00:13:55.030 --> 00:13:58.120\nSo that's just a glitch somewhere,\nmaybe in that module.\n\n261\n00:13:58.120 --> 00:14:03.916\nIf I come in here and\ndo a get -, I don't know,\n\n262\n00:14:03.916 --> 00:14:09.000\nService, I didn't do a get -process.\n\n263\n00:14:09.000 --> 00:14:11.830\nSo there, I've run a couple of commands.\n\n264\n00:14:11.830 --> 00:14:15.930\nIf I use my up and down arrow,\nI can get to those commands.\n\n265\n00:14:15.930 --> 00:14:19.600\nBut if I look in this directory,\na file did not get created.\n\n266\n00:14:19.600 --> 00:14:26.280\nAnd if I look in this file, those are not\ngonna be the last commands in this file,\n\n267\n00:14:26.280 --> 00:14:31.370\nPSReadlineOption which is the last command\nI ran from my standard PowerShell console.\n\n268\n00:14:31.370 --> 00:14:32.840\nSo something is up with that.\n\n269\n00:14:32.840 --> 00:14:34.240\nI just want to make you\nguys aware of that.\n\n270\n00:14:34.240 --> 00:14:36.270\nI'm sure they'll fix it at some point.\n\n271\n00:14:36.270 --> 00:14:37.830\nBut if you're studying,\nyou're trying to figure it out, or\n\n272\n00:14:37.830 --> 00:14:39.450\nyou're practicing with this stuff and\n\n273\n00:14:39.450 --> 00:14:43.280\nyou can't figure out why,\nit seems to be a glitch in the system.\n\n274\n00:14:43.280 --> 00:14:49.080\nBecause if I close ISE and\nI open up ISE again and\n\n275\n00:14:49.080 --> 00:14:52.620\nI try to use my up and down arrows,\nI got a whole lot of nothing.\n\n276\n00:14:52.620 --> 00:14:54.642\nSo it's not creating that persistent file.\n\n277\n00:14:54.642 --> 00:14:57.419\nIt's doing the temporary\nhistory during that session but\n\n278\n00:14:57.419 --> 00:14:59.013\nit's not working with the file.\n\n279\n00:14:59.013 --> 00:15:03.840\nSo who knows, maybe we'll put in a bug\nreport and they'll fix that for us.\n\n280\n00:15:03.840 --> 00:15:05.650\nI'm sure they're already aware.\n\n281\n00:15:05.650 --> 00:15:08.380\nAll right, so this is what, again,\n\n282\n00:15:08.380 --> 00:15:13.260\nthe PSReadline is what's giving me this\nability to have persistent history.\n\n283\n00:15:13.260 --> 00:15:17.600\nWe've seen how it can control how many\nentries are available in that list,\n\n284\n00:15:17.600 --> 00:15:18.690\nas well as where it stores it.\n\n285\n00:15:18.690 --> 00:15:20.630\nAnd I'll tell you it is just a text file.\n\n286\n00:15:20.630 --> 00:15:22.280\nYou saw me open this up.\n\n287\n00:15:22.280 --> 00:15:25.280\nI can come in here and\nI could get rid of some of these commands\n\n288\n00:15:25.280 --> 00:15:28.800\nif cycling through them or\nsearching through them is taking too long.\n\n289\n00:15:28.800 --> 00:15:30.870\nThere's a cld, that's not a command.\n\n290\n00:15:30.870 --> 00:15:33.230\n&gt;&gt; I wonder if that would\naffect the ID in any way.\n\n291\n00:15:33.230 --> 00:15:34.090\n&gt;&gt; That's a typo.\n\n292\n00:15:34.090 --> 00:15:35.860\nWhat's that?\n&gt;&gt; I wonder if it would affect that\n\n293\n00:15:35.860 --> 00:15:36.880\ncommand ID.\n\n294\n00:15:36.880 --> 00:15:38.895\n&gt;&gt; No, because that's only for\nyour session history,\n\n295\n00:15:38.895 --> 00:15:40.209\nits not even looking at this file.\n\n296\n00:15:40.209 --> 00:15:41.390\nYeah, that's completely separate.\n\n297\n00:15:41.390 --> 00:15:44.450\nSo I can come in here and\nI could actually take that out.\n\n298\n00:15:44.450 --> 00:15:46.810\nYou'll see that they're, and\ncl, that's not a command.\n\n299\n00:15:46.810 --> 00:15:47.870\nSo we can take that out, right.\n\n300\n00:15:47.870 --> 00:15:50.360\nI can come in here and\nmodify or clean up this file.\n\n301\n00:15:50.360 --> 00:15:52.675\nI can try to remove duplicates.\n\n302\n00:15:52.675 --> 00:15:56.823\nThere is an option in the PSReadline,\n\n303\n00:15:56.823 --> 00:16:00.462\nHistoryNoDuplicates, False.\n\n304\n00:16:00.462 --> 00:16:05.044\nIf I set that to true Well I can\nprevent the duplicates from being\n\n305\n00:16:05.044 --> 00:16:07.250\nadded to my history.\n\n306\n00:16:07.250 --> 00:16:11.210\nIt won't go back and clean up the history\nfile, but anything that it's going to add\n\n307\n00:16:11.210 --> 00:16:14.070\nthat was already in there,\nit wouldn't bother adding it.\n\n308\n00:16:14.070 --> 00:16:16.350\nThe downside of that,\nyou'd think well why wouldn't we do that?\n\n309\n00:16:16.350 --> 00:16:18.160\nWhy isn't that turned on already?\n\n310\n00:16:18.160 --> 00:16:21.200\nThe problem is let's say you\nissued a command two months ago,\n\n311\n00:16:21.200 --> 00:16:22.870\nit's way up there in the list.\n\n312\n00:16:22.870 --> 00:16:26.320\nAnd then you issued it this morning,\nand now you want to issue it again.\n\n313\n00:16:26.320 --> 00:16:28.240\nAnd you start cycling\nthrough your commands,\n\n314\n00:16:28.240 --> 00:16:31.220\nif there were no duplicates,\nit wouldn't of added it this morning.\n\n315\n00:16:31.220 --> 00:16:34.780\nSo the only copy of that command is way\nback two months ago in your history.\n\n316\n00:16:34.780 --> 00:16:38.730\nSo you have to go a long way if you\nwere just going line by line by line.\n\n317\n00:16:38.730 --> 00:16:40.430\nI think that's why they do that.\n\n318\n00:16:40.430 --> 00:16:42.880\nUnderstand that you could change that.\n\n319\n00:16:42.880 --> 00:16:50.220\nGet is a read command, so we can\ndefinitely get a Set-PSReadlineOption.\n\n320\n00:16:50.220 --> 00:16:54.936\nAnd I can say, what was that called,\n-HistoryNoDuplicates.\n\n321\n00:16:54.936 --> 00:16:56.394\nAnd this one is a little different.\n\n322\n00:16:56.394 --> 00:16:59.066\nThis one I want to say\nis gonna be :$false,\n\n323\n00:16:59.066 --> 00:17:02.990\nsome commands have different\nways of entering parameters.\n\n324\n00:17:02.990 --> 00:17:06.266\nThis is a third party module so\nthey've implemented a little differently.\n\n325\n00:17:06.266 --> 00:17:08.560\nInstead of doing like an equals,\nor just a space,\n\n326\n00:17:08.560 --> 00:17:13.280\noops, I actually wanted to set\nthat to true, not false, silly me.\n\n327\n00:17:13.280 --> 00:17:14.820\nWe'll do true.\n\n328\n00:17:14.820 --> 00:17:18.561\nAnd now, if I do a Get-PSReadlineOption,\n\n329\n00:17:20.265 --> 00:17:24.000\nI should see that\nHistoryNoDuplicates is set to true.\n\n330\n00:17:25.370 --> 00:17:30.210\nSo we see that because of PSReadline I do\nhave a persistent history that I can use.\n\n331\n00:17:30.210 --> 00:17:33.070\nI still haven't told you what\nthey've replaced the F7 with, and\n\n332\n00:17:33.070 --> 00:17:35.245\nI know that's what everybody\nis really dying to know.\n\n333\n00:17:35.245 --> 00:17:36.640\n&gt;&gt; [LAUGH]\n&gt;&gt; Where is that?\n\n334\n00:17:36.640 --> 00:17:38.760\nHow can I search through my history?\n\n335\n00:17:38.760 --> 00:17:41.040\nWell, we saw the get -history command,\nright?\n\n336\n00:17:41.040 --> 00:17:43.650\nSo, that's one way to\nretrieve your history.\n\n337\n00:17:43.650 --> 00:17:45.680\nAgain, it's just for that session, though.\n\n338\n00:17:47.050 --> 00:17:52.800\nTo work with this file,\nwith the persistent command history.\n\n339\n00:17:52.800 --> 00:17:54.988\nAnd let's get that out of the way there.\n\n340\n00:17:54.988 --> 00:17:57.693\nTo work with that,\nlet me clear up my screen,\n\n341\n00:17:57.693 --> 00:18:01.623\nwe're gonna be using, what else\ndid I want to show you with this?\n\n342\n00:18:01.623 --> 00:18:04.250\nF8 is still there.\n\n343\n00:18:04.250 --> 00:18:07.260\nRemember, in the past we\nhad F7 to display history,\n\n344\n00:18:07.260 --> 00:18:11.440\nF8 to search history,\nF9 to execute a history item.\n\n345\n00:18:11.440 --> 00:18:14.700\nWell F7 and F9 are gone,\nF8 is still there.\n\n346\n00:18:14.700 --> 00:18:18.120\nF8 allows me to search through\nthe history just like it did before.\n\n347\n00:18:18.120 --> 00:18:22.760\nSo if I type in a,\nif I hit the first couple letters,\n\n348\n00:18:22.760 --> 00:18:27.740\nlet's do net, and I hit F8,\nwell, I get nothing.\n\n349\n00:18:28.930 --> 00:18:30.910\nIf I do GE and I hit F8,\n\n350\n00:18:30.910 --> 00:18:35.760\nor else I Get -PSReadlineOption, and\nthe first two letters, the G and E,\n\n351\n00:18:35.760 --> 00:18:38.890\nwhich is what I typed,\nare highlighted in a different color.\n\n352\n00:18:38.890 --> 00:18:42.940\nIf I hit F8 again, you can see it's\ncycling through all of the things that\n\n353\n00:18:42.940 --> 00:18:48.430\nstart with a GE or\nwhatever letters I typed in.\n\n354\n00:18:48.430 --> 00:18:51.990\nSo I can actually, and notice it's going\nthrough commands you guys have not seen.\n\n355\n00:18:51.990 --> 00:18:56.800\nThis is not looking at my temporary\nhistory that we see with get -history,\n\n356\n00:18:56.800 --> 00:18:58.540\nthis is looking at that\npersistent history,\n\n357\n00:18:58.540 --> 00:19:02.270\nthat file that the PSReadline\nmodule creates.\n\n358\n00:19:02.270 --> 00:19:05.990\nSo I can cycle through commands all\nthe way back to the beginning of when I\n\n359\n00:19:05.990 --> 00:19:07.810\nlaunched PowerShell.\n\n360\n00:19:07.810 --> 00:19:12.424\nAnd then, of course, the more\nletters I type the closer I can get.\n\n361\n00:19:12.424 --> 00:19:15.677\nIf I do a get -p-\n&gt;&gt; Narrows those results.\n\n362\n00:19:15.677 --> 00:19:20.030\n&gt;&gt; Yeah, and I hit F8, well now it's\nthe only things that start with get -p.\n\n363\n00:19:20.030 --> 00:19:23.160\nSo you can see the list is\na little shorter, right?\n\n364\n00:19:23.160 --> 00:19:26.160\nI did a lot of get processes,\nbut you get the idea.\n\n365\n00:19:27.350 --> 00:19:30.680\nThe downside, or\nthe limiting factor of the F8\n\n366\n00:19:30.680 --> 00:19:33.620\nis it only searches from\nthe beginning of the command.\n\n367\n00:19:33.620 --> 00:19:36.930\nSo if I know I ran a command\nget -NetIPAddress ip address.\n\n368\n00:19:36.930 --> 00:19:42.130\nIf I type in ip and do F8,\nit finds ipconfig, but\n\n369\n00:19:42.130 --> 00:19:46.310\nit doesn't find my get -NetIPAddress,\nwhich is a command that I executed.\n\n370\n00:19:46.310 --> 00:19:47.640\nIt's in my history.\n\n371\n00:19:47.640 --> 00:19:53.070\nAnd that just because F8 only searches\nfrom the beginning of the command.\n\n372\n00:19:53.070 --> 00:19:54.460\n&gt;&gt; So no wild cards here?\n\n373\n00:19:54.460 --> 00:19:58.100\n&gt;&gt; Yeah, what if you remember\nthat you ran a command and\n\n374\n00:19:58.100 --> 00:20:02.610\nit had the word enable in it somewhere,\nbut that's all I remember, right?\n\n375\n00:20:02.610 --> 00:20:04.440\nWell F8 ain't gonna get it for you.\n\n376\n00:20:04.440 --> 00:20:09.546\nThat's when we use the Ctrl+R and Ctrl+S.\n\n377\n00:20:09.546 --> 00:20:14.145\nCtrl+R does a reverse search through\nhistory, from where we are now, back.\n\n378\n00:20:14.145 --> 00:20:18.070\nCtrl+S does a forward\nsearch through history.\n\n379\n00:20:19.200 --> 00:20:21.880\nWhich always puzzled me, because normally\nI'm at the end of the history, so\n\n380\n00:20:21.880 --> 00:20:24.090\nthere is nothing,\nit can't go into the future and\n\n381\n00:20:24.090 --> 00:20:26.980\nknow what commands that\nI'm going to execute.\n\n382\n00:20:26.980 --> 00:20:29.360\n&gt;&gt; Just the way,\nthe order in which it's listed.\n\n383\n00:20:29.360 --> 00:20:31.340\nIs that-\n&gt;&gt; Yeah if I end up going back and\n\n384\n00:20:31.340 --> 00:20:32.840\nthen I wanna search forward again.\n\n385\n00:20:32.840 --> 00:20:35.250\nI think that's where that\nactually comes into play.\n\n386\n00:20:35.250 --> 00:20:35.970\n&gt;&gt; I don't know.\n\n387\n00:20:35.970 --> 00:20:36.925\nBut let's try.\n\n388\n00:20:36.925 --> 00:20:40.812\n&gt;&gt; [LAUGH]\n&gt;&gt; Let's do a Ctrl+R.\n\n389\n00:20:40.812 --> 00:20:47.158\nAnd notice what it says on my screen here,\nbck back-i-search:.\n\n390\n00:20:47.158 --> 00:20:54.230\nAnd if I type ip, look what happens up\nhere, get -netIPAddress is showing up.\n\n391\n00:20:55.360 --> 00:20:58.490\nAnd I can change my search\nright in the middle of it.\n\n392\n00:20:58.490 --> 00:21:00.780\nI can look for the word enable.\n\n393\n00:21:00.780 --> 00:21:02.050\nAnd notice how the e and\n\n394\n00:21:02.050 --> 00:21:05.670\nthe N are lit up because that's\nwhat I've typed in my search.\n\n395\n00:21:08.060 --> 00:21:11.190\nSo unlike F8 where I'm limited to\nsearching from the beginning of\n\n396\n00:21:11.190 --> 00:21:14.480\nthe command, I have to know the first\ncharacters of the command I'm looking for.\n\n397\n00:21:14.480 --> 00:21:17.133\nWith the Ctrl+R and the Crtl+S,\n\n398\n00:21:17.133 --> 00:21:21.170\nany combination of characters\ncan be searched for.\n\n399\n00:21:22.540 --> 00:21:24.492\nSo let's see what else I could look for,\n\n400\n00:21:24.492 --> 00:21:28.610\nps or-\n&gt;&gt; So\n\n401\n00:21:28.610 --> 00:21:32.340\nessentially that Ctrl+R is\nkind of replacing the F7 key?\n\n402\n00:21:32.340 --> 00:21:33.060\n&gt;&gt; Yes.\n&gt;&gt; Okay.\n\n403\n00:21:33.060 --> 00:21:36.444\n&gt;&gt; It really is and\nthat's what we have to get used to,\n\n404\n00:21:36.444 --> 00:21:40.380\nis that our search is now\nmoved to Ctrl+R and Ctrl+S.\n\n405\n00:21:40.380 --> 00:21:45.780\nFunctionality is a little bit different,\nbut in the end it gives us the same idea.\n\n406\n00:21:45.780 --> 00:21:49.850\nAnd that module gives us so\nmuch more than just this.\n\n407\n00:21:49.850 --> 00:21:51.980\nSo I know, I've reading through forums.\n\n408\n00:21:51.980 --> 00:21:55.440\nA lot of people are like, where is my F7?\n\n409\n00:21:55.440 --> 00:21:56.460\nI miss it.\n\n410\n00:21:56.460 --> 00:21:57.468\nHow do I stop this.\n\n411\n00:21:57.468 --> 00:22:04.266\nAnd if you really wanted to,\nyou could disable that module.\n\n412\n00:22:04.266 --> 00:22:10.929\nYou could remove that module, remove\n-module -name or -module PSReadline.\n\n413\n00:22:10.929 --> 00:22:12.180\nYou take it out, not import it.\n\n414\n00:22:12.180 --> 00:22:14.740\nEvery time you start up PowerShell,\nif you really need to get\n\n415\n00:22:14.740 --> 00:22:18.370\nthat F7 functionality back,\nthat's probably the easiest way to do it.\n\n416\n00:22:18.370 --> 00:22:21.550\nBut you'd lose all the other cool\nstuff that that module gives us.\n\n417\n00:22:21.550 --> 00:22:24.220\nThere's a lot of color coding\nthat comes in from that module.\n\n418\n00:22:24.220 --> 00:22:31.025\nThat module's really geared to give us\na bash-like experience within PowerShell.\n\n419\n00:22:31.025 --> 00:22:36.725\nCompletely beyond the scope of this,\nlet's see if I can do this real quick.\n\n420\n00:22:36.725 --> 00:22:39.585\nActually, let's use my history command.\n\n421\n00:22:39.585 --> 00:22:40.545\nLet's see if I can find it.\n\n422\n00:22:40.545 --> 00:22:46.140\nWe'll do a Ctrl+R and look for emacs.\n\n423\n00:22:46.140 --> 00:22:47.040\nThere it is.\n\n424\n00:22:47.040 --> 00:22:53.470\nSo this command right here,\nSet -PSReadlineOption -EditMode Emacs.\n\n425\n00:22:53.470 --> 00:22:56.570\nNow some of you that are used to working\nin Linux environments will be familiar\n\n426\n00:22:56.570 --> 00:22:57.160\nwith this.\n\n427\n00:22:58.230 --> 00:23:00.500\nI was not, I'm a Windows guy.\n\n428\n00:23:00.500 --> 00:23:02.710\nBut I've worked a little\nbit with Linux and\n\n429\n00:23:02.710 --> 00:23:07.500\nit changes the way,\nlike the Tab auto-fill works.\n\n430\n00:23:07.500 --> 00:23:12.478\nNormally in Windows, and\nlet me get rid of this command,\n\n431\n00:23:12.478 --> 00:23:16.830\nas I type, if I do a get -p and\nI start hitting Tab,\n\n432\n00:23:16.830 --> 00:23:21.003\nit tabs through all of\nthe options one at a time.\n\n433\n00:23:21.003 --> 00:23:22.680\nLet's start with a get -p.\n\n434\n00:23:22.680 --> 00:23:24.565\nThis is what we're used to in Windows.\n\n435\n00:23:24.565 --> 00:23:28.371\nBut if I change that to Emacs mode,\nso let's change,\n\n436\n00:23:28.371 --> 00:23:31.597\nlet's do a Ctrl+R, look for that command.\n\n437\n00:23:31.597 --> 00:23:33.340\nNotice how I'm using that search history?\n\n438\n00:23:33.340 --> 00:23:36.550\nLooking for a command I know\ncontains the word Emacs in it?\n\n439\n00:23:36.550 --> 00:23:41.910\nI just type in emac in my back search, my\nCtrl+R, there is my command, I hit Enter.\n\n440\n00:23:43.380 --> 00:23:49.310\nAnd now, if I do a get -p and\nhit Tab, instead of showing me\n\n441\n00:23:49.310 --> 00:23:55.010\none command at a time, it's showing me\nall the things that start with a get -p.\n\n442\n00:23:55.010 --> 00:23:59.202\nAnd, then it's giving me a new prompt,\nand it already has typed out what I have.\n\n443\n00:23:59.202 --> 00:24:01.557\nSo I didn't lose anything,\nI don't have to type it all over.\n\n444\n00:24:01.557 --> 00:24:07.128\nI can do, okay, pnp And I can hit Tab.\n\n445\n00:24:07.128 --> 00:24:09.010\nAnd now there's only one command left,\n\n446\n00:24:09.010 --> 00:24:12.681\nthere's two commands left that start\nwith @, right, and it's showing me that.\n\n447\n00:24:12.681 --> 00:24:15.177\nNow again, that is Emacs mode.\n\n448\n00:24:15.177 --> 00:24:16.337\nSome of you might,\n\n449\n00:24:16.337 --> 00:24:20.795\nmaybe you wanna change your\nWindows PowerShell to be more Linux-like.\n\n450\n00:24:20.795 --> 00:24:22.057\n&gt;&gt; Well, that's kind of interesting, Mike.\n\n451\n00:24:22.057 --> 00:24:24.959\nAnd especially if you think\nabout this open source concept.\n\n452\n00:24:24.959 --> 00:24:28.576\nAnd someone, Jonathan in the chat had\nmentioned he had shared a GitHub link.\n\n453\n00:24:28.576 --> 00:24:31.080\nAnd there was actually\na recommendation for\n\n454\n00:24:31.080 --> 00:24:33.855\novercoming that persistent history in ISE,\nand\n\n455\n00:24:33.855 --> 00:24:38.265\nit was a module that someone had created\nand shared in that repository there.\n\n456\n00:24:38.265 --> 00:24:41.882\nThere is another suggestion for\na work-around to just go ahead and\n\n457\n00:24:41.882 --> 00:24:45.703\nsave it as a text file every time you\nexit, as like a script in that way.\n\n458\n00:24:45.703 --> 00:24:49.210\nBut it's kind of cool that you see\nthis like shift happening here.\n\n459\n00:24:49.210 --> 00:24:50.100\n&gt;&gt; Yeah, absolutely.\n\n460\n00:24:50.100 --> 00:24:54.330\nWe talked about Powershell Core\n6.0 coming out and\n\n461\n00:24:54.330 --> 00:25:00.030\nhow that is open source cross-platform,\nLinux, Mac, Windows.\n\n462\n00:25:00.030 --> 00:25:04.420\nIt's built on a subset,\nit's .NET Core instead of the full .NET.\n\n463\n00:25:04.420 --> 00:25:07.780\nBut it gives it that portability,\nthat cross-platform capability.\n\n464\n00:25:07.780 --> 00:25:11.630\nSo we're definitely seeing a shift where\neverything is starting to come together.\n\n465\n00:25:11.630 --> 00:25:14.540\nAll the big boys are starting\nto play nicely together.\n\n466\n00:25:14.540 --> 00:25:17.725\nThe big boys and the big girls out there,\nthese companies are like, hey,\n\n467\n00:25:17.725 --> 00:25:20.285\nlet's work together,\nwe can make it a much better world.\n\n468\n00:25:20.285 --> 00:25:23.315\nHey, yeah,\nI'm glad you finally figured that out.\n\n469\n00:25:23.315 --> 00:25:25.727\nBut, I'll get off my soap box there.\n\n470\n00:25:25.727 --> 00:25:28.005\nAll right, so, and thank you for\nthat tip out there.\n\n471\n00:25:28.005 --> 00:25:29.305\nI'll definitely take a look at that,\n\n472\n00:25:29.305 --> 00:25:34.533\nhow we can try to get that to save\nthe history for the ISE as well.\n\n473\n00:25:34.533 --> 00:25:39.003\nAnd let me change my option back cuz\nthat'll goof me up in the middle of\n\n474\n00:25:39.003 --> 00:25:39.990\na show.\n\n475\n00:25:39.990 --> 00:25:42.510\nSo I need my Emacs command again.\n\n476\n00:25:42.510 --> 00:25:47.600\nIf I wanna change that back I just change\nthe mode to Windows instead of Emacs.\n\n477\n00:25:47.600 --> 00:25:51.890\nAnd now I should be back to\nmy normal Tab one at a time.\n\n478\n00:25:51.890 --> 00:25:54.510\nBut here's something else.\n\n479\n00:25:54.510 --> 00:25:56.620\nLet's say I don't wanna\nchange to that mode, but\n\n480\n00:25:56.620 --> 00:25:59.300\noccasionally I kind of like using that.\n\n481\n00:25:59.300 --> 00:26:01.370\nI can still do it temporarily.\n\n482\n00:26:01.370 --> 00:26:06.045\nI can do a get-p Ctrl+Space,\nand look what I get.\n\n483\n00:26:06.045 --> 00:26:10.235\nIf you do a Ctrl+Space it kinda does\nthis Emac-like thing where it gives me\n\n484\n00:26:10.235 --> 00:26:11.850\na list of all the commands and\n\n485\n00:26:11.850 --> 00:26:17.120\nI can just use my arrow keys to\nfind the command I'm looking for.\n\n486\n00:26:17.120 --> 00:26:20.410\nAnd let's find one, there's get-process,\nthat's always an easy one.\n\n487\n00:26:20.410 --> 00:26:21.910\nAnd hit Enter, and I can run it.\n\n488\n00:26:21.910 --> 00:26:27.860\nSo that was Ctrl+Space to get that\nEmac-like output from your command.\n\n489\n00:26:27.860 --> 00:26:29.950\nJust type a few letters,\nCtrl+Space and hey,\n\n490\n00:26:29.950 --> 00:26:32.414\nhere's all the commands you\ncan do with those letters.\n\n491\n00:26:32.414 --> 00:26:37.351\nThe one I didn't show you was the,\nI showed you F8, showed you F7.\n\n492\n00:26:37.351 --> 00:26:38.217\nI'm sorry, not this.\n\n493\n00:26:38.217 --> 00:26:42.150\nI told you about the Ctrl+R\nthat replaces our F7.\n\n494\n00:26:42.150 --> 00:26:44.700\nCtrl+S goes forward,\nso it's the same thing.\n\n495\n00:26:44.700 --> 00:26:48.840\nIf I do Ctrl+S,\nyou'll see it now it says forward search.\n\n496\n00:26:48.840 --> 00:26:52.590\nSo if I start typing I\nget failed forward search\n\n497\n00:26:52.590 --> 00:26:56.140\nbecause there is nothing in front of\nme that has an en anywhere in it.\n\n498\n00:26:56.140 --> 00:26:59.820\nSo I'd have to be back through my\nhistory list and then it would change.\n\n499\n00:26:59.820 --> 00:27:01.400\nAnd it does it automatically, honestly.\n\n500\n00:27:01.400 --> 00:27:06.290\nI just do Ctrl+R, start typing,\nand then if I change my search\n\n501\n00:27:06.290 --> 00:27:10.000\nit'll go in the other direction\nif it finds commands in that way.\n\n502\n00:27:10.000 --> 00:27:12.020\nSo it's pretty smart in that respect.\n\n503\n00:27:12.020 --> 00:27:16.901\nSo hopefully you guys start\ngetting used to that Ctrl+S and\n\n504\n00:27:16.901 --> 00:27:19.858\nCtrl+R to replace your Ctrl+7.\n\n505\n00:27:19.858 --> 00:27:24.725\nAs far as the history goes, we can use\nthat get-history command to get that\n\n506\n00:27:24.725 --> 00:27:28.445\ntemporary list with the ID\nnumber like the way we used to.\n\n507\n00:27:28.445 --> 00:27:33.218\nThen you have to do an invoke-history with\nthat ID number to actually rerun that\n\n508\n00:27:33.218 --> 00:27:33.867\ncommand.\n\n509\n00:27:33.867 --> 00:27:39.756\nSo it's really it's more steps to do\nit the old way with the get-history and\n\n510\n00:27:39.756 --> 00:27:41.610\nthe invoke-history.\n\n511\n00:27:41.610 --> 00:27:46.260\nIt's much, much quicker, in my opinion,\njust to do the CTRL+R and look for\n\n512\n00:27:46.260 --> 00:27:48.430\nthe command that way.\n\n513\n00:27:48.430 --> 00:27:51.958\nSo that is history, and Cherokee I know\nyou're telling me we're out of time.\n\n514\n00:27:51.958 --> 00:27:56.890\nWe still get to do aliases, but I can't\ndo it in the time we've got left, so\n\n515\n00:27:56.890 --> 00:28:01.110\nwe can talk about something else or-\n&gt;&gt; We can do a part two or\n\n516\n00:28:01.110 --> 00:28:03.140\nadd it onto another,\nwhatever you wanna do Mike.\n\n517\n00:28:03.140 --> 00:28:04.660\nSo we're flexible here.\n\n518\n00:28:04.660 --> 00:28:05.540\n&gt;&gt; Sounds good.\n\n519\n00:28:05.540 --> 00:28:07.920\n&gt;&gt; But thank you for joining and\nexplaining today, and thank you for\n\n520\n00:28:07.920 --> 00:28:08.760\nbeing with us as well.\n\n521\n00:28:08.760 --> 00:28:10.750\nFor this show we'll go ahead and sign out.\n\n522\n00:28:10.750 --> 00:28:12.050\nI've been your host, Cherokee Boose.\n\n523\n00:28:12.050 --> 00:28:12.805\n&gt;&gt; And I'm Mike Rodrick.\n\n524\n00:28:12.805 --> 00:28:15.812\n&gt;&gt; See you next time here at ITProTV.\n\n525\n00:28:15.812 --> 00:28:21.793\n[MUSIC]\n\n526\n00:28:21.793 --> 00:28:25.094\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "237943902"
        },
        {
          "description": "In this episode, Mike and Cherokee continue to analyze and demonstrate cmdlet history in PowerShell.",
          "length": "1519",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-3-1-command_history_and_aliases-101017-PGM.00_28_12_21.Still002-sm.jpg",
          "title": "Command History and Aliases Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:02.576\nWelcome to ITProTV I'm\nyour host Don Pezet.\n\n2\n00:00:02.576 --> 00:00:06.505\n&gt;&gt; [CROSSTALK]\n\n3\n00:00:06.505 --> 00:00:08.274\n[MUSIC]\n\n4\n00:00:08.274 --> 00:00:11.768\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:11.768 --> 00:00:15.200\n&gt;&gt; Welcome back, ladies and\ngentlemen, to your PowerShell show.\n\n6\n00:00:15.200 --> 00:00:17.060\nI'm your host, Cherokee Boose.\n\n7\n00:00:17.060 --> 00:00:19.570\nThis is actually a part two,\na continuation.\n\n8\n00:00:19.570 --> 00:00:22.200\nIn the last show,\nwe looked at command history, and\n\n9\n00:00:22.200 --> 00:00:24.180\nwe didn't quite get to those aliases.\n\n10\n00:00:24.180 --> 00:00:27.770\nSo back in studios with us\ntoday we have Mr. Mike Rodrick.\n\n11\n00:00:27.770 --> 00:00:28.810\nHow's it going today, Mike?\n\n12\n00:00:28.810 --> 00:00:30.680\n&gt;&gt; I'm not Mike Rodrick, I'm actually AKA.\n\n13\n00:00:30.680 --> 00:00:31.566\nNo, I'm just teasing.\n\n14\n00:00:31.566 --> 00:00:32.471\n[LAUGH]\n&gt;&gt; [LAUGH] Your alias,\n\n15\n00:00:32.471 --> 00:00:33.397\nyou're about to divulge that information?\n\n16\n00:00:33.397 --> 00:00:35.632\n&gt;&gt; Yes,\nI was gonna give you my alias, yes.\n\n17\n00:00:35.632 --> 00:00:37.540\nI'm doing great, thanks for\nhaving me back, Cherokee.\n\n18\n00:00:37.540 --> 00:00:40.890\nAnd yeah, we talked a little bit long\non history, but I think good stuff.\n\n19\n00:00:40.890 --> 00:00:43.665\nGot to see all the different ways\nwe could use that history and\n\n20\n00:00:43.665 --> 00:00:45.359\nthe changes they've made, right?\n\n21\n00:00:45.359 --> 00:00:47.227\nWith that PS read line module and\n\n22\n00:00:47.227 --> 00:00:51.085\nwhat that has done to the way we\nused to work with our history.\n\n23\n00:00:51.085 --> 00:00:54.795\nBut we do need to talk about aliases,\naliases are fantastic.\n\n24\n00:00:54.795 --> 00:00:57.765\nThere's a lot of them pre-built in\nthe system, we can create our own.\n\n25\n00:00:57.765 --> 00:01:02.180\nBut I guess before we talk about that, we\nshould tell them what aliases are, right?\n\n26\n00:01:02.180 --> 00:01:03.560\n&gt;&gt; And-\n&gt;&gt; [LAUGH]\n\n27\n00:01:03.560 --> 00:01:04.953\n&gt;&gt; I think most of us out there probably\n\n28\n00:01:04.953 --> 00:01:05.561\nknow already.\n\n29\n00:01:05.561 --> 00:01:06.910\n&gt;&gt; Can figure it out.\n\n30\n00:01:06.910 --> 00:01:13.020\n&gt;&gt; Yeah, but just so we can leave no\nstone, if I can say, no stone unturned.\n\n31\n00:01:14.380 --> 00:01:19.330\nAn alias is an alternate name for\nsomething, an also known as,\n\n32\n00:01:19.330 --> 00:01:23.050\nan AKA, a nickname, a pet name.\n\n33\n00:01:23.050 --> 00:01:27.014\nWhatever you want to call it,\nthat's really what an alias is.\n\n34\n00:01:27.014 --> 00:01:30.494\nAnd we use these all over the place.\n\n35\n00:01:30.494 --> 00:01:34.339\nAnd you've probably used some,\nand don't even know it.\n\n36\n00:01:34.339 --> 00:01:40.187\nWe see it outside of PowerShell, for\nexample, like when we create DNS records,\n\n37\n00:01:40.187 --> 00:01:44.630\nright, we've got aliases in\nthere that we can create.\n\n38\n00:01:44.630 --> 00:01:49.290\nYour server's name is\nserver14.lab.itpro.tv, but\n\n39\n00:01:49.290 --> 00:01:51.570\nit has an alias as www, right?\n\n40\n00:01:51.570 --> 00:01:54.200\nSo it can respond to web traffic or\nwhat have you.\n\n41\n00:01:54.200 --> 00:01:55.968\nSo it's not a new concept, but\n\n42\n00:01:55.968 --> 00:02:00.830\naliases in PowerShell give me\nthe ability to do a few things.\n\n43\n00:02:00.830 --> 00:02:03.170\nThey give me the ability\nto shorten up commands,\n\n44\n00:02:03.170 --> 00:02:07.130\nmake them easier to type,\npossibly easier to remember.\n\n45\n00:02:07.130 --> 00:02:12.660\nThey allow me to run commands that\nare maybe not part of PowerShell.\n\n46\n00:02:12.660 --> 00:02:18.090\nOr I shouldn't say not part of PowerShell,\nbut use old terms that\n\n47\n00:02:18.090 --> 00:02:22.080\nused to work in the command line,\nthe black and white CLI interface.\n\n48\n00:02:22.080 --> 00:02:25.010\nIf that's not redundant,\ncommand line interface interface.\n\n49\n00:02:25.010 --> 00:02:26.750\nNo, command line interpreter interface,\nthat's not redundant.\n\n50\n00:02:26.750 --> 00:02:28.521\n&gt;&gt; There you go.\n\n51\n00:02:28.521 --> 00:02:30.746\n&gt;&gt; I thought for a second I was\nsaying something like PIN number, and\n\n52\n00:02:30.746 --> 00:02:32.904\nI was going to get all kinds of\ncomments in the forum about that.\n\n53\n00:02:32.904 --> 00:02:36.675\n&gt;&gt; [LAUGH]\n&gt;&gt; .But aliases, for example,\n\n54\n00:02:36.675 --> 00:02:39.672\nwhat's a good one I can show you?\n\n55\n00:02:39.672 --> 00:02:44.634\nWell, I've used cls in the show,\nlet's take a look at my screen here,\n\n56\n00:02:44.634 --> 00:02:45.805\nor join me here.\n\n57\n00:02:45.805 --> 00:02:51.920\nAnd if I type in little silly command,\nlet's do a Get-Process, right?\n\n58\n00:02:51.920 --> 00:02:53.570\nNow my screen's all full of this stuff.\n\n59\n00:02:53.570 --> 00:02:56.080\nAnd what ends up is I'm now\ntyping down at the bottom.\n\n60\n00:02:56.080 --> 00:02:59.920\nAnd I know I can scroll up, but\nsometimes you just wanna clear the screen,\n\n61\n00:02:59.920 --> 00:03:02.260\nit's kinda like clearing your mind.\n\n62\n00:03:02.260 --> 00:03:06.310\nOr, as Cherokee was saying the other day-\n&gt;&gt; [LAUGH]\n\n63\n00:03:06.310 --> 00:03:08.216\n&gt;&gt; See if we can do this, there we go.\n\n64\n00:03:08.216 --> 00:03:11.237\nYou get a lot of this red text all\nover there, and you don't want\n\n65\n00:03:11.237 --> 00:03:13.650\nsomebody walking by and going ha-ha-\n&gt;&gt; [LAUGH]\n\n66\n00:03:13.650 --> 00:03:15.410\n&gt;&gt; You stink at PowerShell.\n\n67\n00:03:15.410 --> 00:03:16.790\nSo I can quickly clear my screen.\n\n68\n00:03:16.790 --> 00:03:17.940\n&gt;&gt; Nope, never happened.\n\n69\n00:03:17.940 --> 00:03:19.773\n&gt;&gt; With that cls, right?\n\n70\n00:03:19.773 --> 00:03:22.480\nWell cls is not a PowerShell cmdlet,\nright?\n\n71\n00:03:22.480 --> 00:03:25.299\nWe talked about that in one\nof our very first episodes,\n\n72\n00:03:25.299 --> 00:03:28.133\nPowerShell cmdlets follow\nthe format verb dash noun.\n\n73\n00:03:28.133 --> 00:03:30.559\nWell, cls is not a verb dash noun.\n\n74\n00:03:30.559 --> 00:03:33.860\nSo what the heck is going on,\nhow am I able to use that?\n\n75\n00:03:33.860 --> 00:03:39.746\nThere is a command, let's see if\nI can make another error here,\n\n76\n00:03:39.746 --> 00:03:42.582\ncalled Clear-Host, right?\n\n77\n00:03:42.582 --> 00:03:48.760\nAnd that's actually what I'm\nexecuting when I type cls, okay?\n\n78\n00:03:48.760 --> 00:03:50.013\nLet's take a look,\n\n79\n00:03:50.013 --> 00:03:54.447\nwe can do a, let's use our techniques\nthat we, let's find commands.\n\n80\n00:03:54.447 --> 00:03:57.841\nSo Get-Command *alias,\n\n81\n00:03:57.841 --> 00:04:03.260\nif spelled that right, *, all right?\n\n82\n00:04:03.260 --> 00:04:06.805\nAnd I can see that I have several commands\nfor dealing with aliases, Export,\n\n83\n00:04:06.805 --> 00:04:10.710\nGet, Import, New, and Set, right?\n\n84\n00:04:10.710 --> 00:04:13.390\nSo let's try that first one, or\nnot the first one but the read.\n\n85\n00:04:13.390 --> 00:04:16.667\nLet's do it with a Get-Alias and\nhit Enter.\n\n86\n00:04:16.667 --> 00:04:21.570\nAnd what we'll see is a list of aliases\nthat already exist in PowerShell.\n\n87\n00:04:21.570 --> 00:04:25.060\nThese are not anything that I created,\nthese are part of PowerShell.\n\n88\n00:04:25.060 --> 00:04:31.560\nLike let's find it, cls, right here,\nis actually an alias for Clear-Host.\n\n89\n00:04:31.560 --> 00:04:34.420\nSo the way to read this,\nthis is what you would type.\n\n90\n00:04:34.420 --> 00:04:35.370\nAnd it's telling you that and\n\n91\n00:04:35.370 --> 00:04:38.970\nthat would actually be the same thing\nas running this Power Shell cmdlet.\n\n92\n00:04:38.970 --> 00:04:46.350\nSo for example, what's another one I could\nshow you, dir is a simple one, right?\n\n93\n00:04:46.350 --> 00:04:50.530\ndir, that's something we're used to\nusing in a command prompt, right,\n\n94\n00:04:50.530 --> 00:04:52.340\nto get a directory listing.\n\n95\n00:04:52.340 --> 00:04:56.210\nWell there is no dir in PowerShell,\nit's verb dash noun.\n\n96\n00:04:56.210 --> 00:05:01.702\nBut they've made an alias for it for\nthe PowerShell command Get-ChildItem.\n\n97\n00:05:01.702 --> 00:05:07.640\nCuz Get-ChildItem is what I would\nnormally do to get a directory.\n\n98\n00:05:07.640 --> 00:05:09.730\nThis is showing me my directory here,\n\n99\n00:05:09.730 --> 00:05:13.870\nand it's showing me all the files\nthat are located in that directory.\n\n100\n00:05:13.870 --> 00:05:17.450\nBut I can simply type dir,\nand get the same thing.\n\n101\n00:05:17.450 --> 00:05:18.690\nIt's something I'm familiar with,\n\n102\n00:05:18.690 --> 00:05:21.540\nit's something I remember\nfrom years of doing this.\n\n103\n00:05:21.540 --> 00:05:25.970\nAnd they've made an alias for it, so\nthat I can actually use it in PowerShell.\n\n104\n00:05:25.970 --> 00:05:29.940\n&gt;&gt; Before the show, you were asking\nme what my favorite alias was.\n\n105\n00:05:29.940 --> 00:05:33.474\nAnd I think if you look on that list,\nthere's one for Out-GridView, and\n\n106\n00:05:33.474 --> 00:05:36.495\nI just like it cuz you feel like\nthe real OG if you're typing it,\n\n107\n00:05:36.495 --> 00:05:38.719\nyou're like [INAUDIBLE]\n&gt;&gt; [LAUGH] Nice.\n\n108\n00:05:38.719 --> 00:05:41.989\n&gt;&gt; [LAUGH]\n&gt;&gt; The real OG, there we go, ogv for\n\n109\n00:05:41.989 --> 00:05:44.590\nOut-GridView, well done.\n\n110\n00:05:44.590 --> 00:05:46.230\nWe'll have to fire one of those up.\n\n111\n00:05:46.230 --> 00:05:48.650\nWhat's a command you\nnormally use with that?\n\n112\n00:05:48.650 --> 00:05:50.960\n&gt;&gt; I don't know,\nyou like to type in services a lot, so\n\n113\n00:05:50.960 --> 00:05:52.496\nyou could even use it with services here.\n\n114\n00:05:52.496 --> 00:05:55.705\n[LAUGH]\n&gt;&gt; Let's do Get-Services Get-Services, and\n\n115\n00:05:55.705 --> 00:05:57.677\nwe'll pipe that in to-\n&gt;&gt; Out-GridView.\n\n116\n00:05:57.677 --> 00:06:02.870\n&gt;&gt; Out-GridView, ogv, and\nlook at there, right?\n\n117\n00:06:02.870 --> 00:06:05.780\nAnd a lot easier than typing Out-GridView.\n\n118\n00:06:05.780 --> 00:06:06.580\n&gt;&gt; Most definitely.\n[LAUGH]\n\n119\n00:06:06.580 --> 00:06:07.644\n&gt;&gt; Right, just ogv, and\n\n120\n00:06:07.644 --> 00:06:10.447\nwe can remember that,\nnow we're down with ogv, I like it.\n\n121\n00:06:10.447 --> 00:06:12.059\n&gt;&gt; [LAUGH]\n&gt;&gt; All right, so\n\n122\n00:06:12.059 --> 00:06:16.530\nthere's another example of\nhow aliases can help me out.\n\n123\n00:06:16.530 --> 00:06:22.470\nIt's a lot easier to type, a lot shorter\nto type, and it gets me the same result.\n\n124\n00:06:22.470 --> 00:06:26.670\nSo I really like taking\nadvantage of these aliases.\n\n125\n00:06:26.670 --> 00:06:29.150\nAs you can see, there's several in here.\n\n126\n00:06:29.150 --> 00:06:33.850\nSo Get-Alias will allow you to\nreturn a list of existing aliases.\n\n127\n00:06:33.850 --> 00:06:35.940\nIf I'm looking to see\nif there's an alias for\n\n128\n00:06:35.940 --> 00:06:38.860\na particular command,\nI can do that as well.\n\n129\n00:06:38.860 --> 00:06:44.696\nWe could do a Get-Alias, which you've seen\nme do, that returns all aliases, okay?\n\n130\n00:06:44.696 --> 00:06:47.630\nNow if I wanna see if there's an alias for\na particular command,\n\n131\n00:06:47.630 --> 00:06:52.330\nI'm gonna add a -definition parameter,\nand then the name.\n\n132\n00:06:52.330 --> 00:06:57.850\nLet's do Get-ChildItem, and\nsee if there's any aliases for that.\n\n133\n00:06:57.850 --> 00:07:00.376\nAnd sure enough,\nthere's actually more than one,\n\n134\n00:07:00.376 --> 00:07:02.230\ndir, which I've already shown you.\n\n135\n00:07:02.230 --> 00:07:06.421\nBut gci, Get-ChildItem, right, the first\nletters of each one of those words,\n\n136\n00:07:06.421 --> 00:07:07.343\nwould also work.\n\n137\n00:07:07.343 --> 00:07:11.764\nls, if you're from a Linux world,\nls is very familiar to you, right?\n\n138\n00:07:11.764 --> 00:07:13.671\nYou can use ls in PowerShell,\n\n139\n00:07:13.671 --> 00:07:18.360\nnot because ls means anything to\nPowerShell per se, it's not a cmdlet.\n\n140\n00:07:18.360 --> 00:07:20.321\nBut we've aliased, or I say we,\n\n141\n00:07:20.321 --> 00:07:24.840\nMicrosoft has created an alias for\nthat that points to the Get-ChildItem.\n\n142\n00:07:24.840 --> 00:07:27.530\nSo fantastic,\nthere's lots of aliases builds in.\n\n143\n00:07:27.530 --> 00:07:30.450\nDo your Get-Alias to get\na list of those guys.\n\n144\n00:07:30.450 --> 00:07:33.710\nTake a look at which ones are available\nand ones that you'd might like.\n\n145\n00:07:33.710 --> 00:07:38.590\nNow, what if there's one that you want,\nbut it's not in that list already?\n\n146\n00:07:38.590 --> 00:07:42.800\nLike you see me typing\nGet-NetIPAddress all the time, right?\n\n147\n00:07:42.800 --> 00:07:48.770\nWell, here's that command Get-NetIPAddress\nto return all of my TCP/IP information.\n\n148\n00:07:48.770 --> 00:07:52.420\nIt's kinda like doing ipconfig all from\nthe command prompt in the old school\n\n149\n00:07:52.420 --> 00:07:53.170\ndays, right?\n\n150\n00:07:53.170 --> 00:07:57.464\nBut it's a long one, Get-NetIPAddress\nis kind of a pain to type.\n\n151\n00:07:57.464 --> 00:08:00.148\nSo what do you say, Cherokee,\nwe make an alias for that?\n\n152\n00:08:00.148 --> 00:08:00.738\n&gt;&gt; Let's do it.\n\n153\n00:08:00.738 --> 00:08:01.245\n&gt;&gt; All right.\n\n154\n00:08:01.245 --> 00:08:04.292\n&gt;&gt; [LAUGH]\n&gt;&gt; Let's do it, so The command for this is\n\n155\n00:08:04.292 --> 00:08:09.550\ngoing to be set, well actually, I'm sorry,\nlet's take a look at those command again.\n\n156\n00:08:09.550 --> 00:08:14.970\nNew dash alias, all right.\n\n157\n00:08:14.970 --> 00:08:18.340\nNew dash alias right here,\nyou can also use set alias,\n\n158\n00:08:18.340 --> 00:08:20.870\nthe difference there knew is\nan alias that doesn't exist.\n\n159\n00:08:20.870 --> 00:08:23.810\nSet would let you change the definition.\n\n160\n00:08:23.810 --> 00:08:28.240\nMaybe you want ls to do\na list services rather than\n\n161\n00:08:28.240 --> 00:08:30.150\na directory listing get child item.\n\n162\n00:08:30.150 --> 00:08:31.590\nYou'd rather do it to get service, right?\n\n163\n00:08:31.590 --> 00:08:35.200\nCuz ls to you in your\nmind says less service.\n\n164\n00:08:35.200 --> 00:08:37.810\nYou can definitely change an existing\nalias, you're not stuck with them,\n\n165\n00:08:37.810 --> 00:08:41.980\nyou can use the set alias to\nredefine what an alias is.\n\n166\n00:08:41.980 --> 00:08:45.098\n&gt;&gt; That could be one way to\nreally aggravate someone.\n\n167\n00:08:45.098 --> 00:08:46.471\n&gt;&gt; Absolutely [LAUGH].\n\n168\n00:08:46.471 --> 00:08:47.820\n&gt;&gt; [LAUGH]\n&gt;&gt; Absolutely, and\n\n169\n00:08:47.820 --> 00:08:49.990\naliases don't have to\npoint to just cmdlets.\n\n170\n00:08:49.990 --> 00:08:55.070\nWe haven't gotten, and I don't wanna start\nyet, but we could write functions, and\n\n171\n00:08:55.070 --> 00:08:57.942\nhave an alias that\npoints to that function.\n\n172\n00:08:57.942 --> 00:09:01.160\nRight, I have that function stored\nin a module that we've created,\n\n173\n00:09:01.160 --> 00:09:04.660\nimport that module,\nuse that alias to call that function.\n\n174\n00:09:04.660 --> 00:09:06.380\nOr during a session,\nI don't even have to go through that,\n\n175\n00:09:06.380 --> 00:09:09.690\nI could write a function right now and\ngive it an alias and\n\n176\n00:09:09.690 --> 00:09:12.330\nthen execute it as long\nas that session is open.\n\n177\n00:09:12.330 --> 00:09:17.100\nSo aliases is not just for cmdlets,\nwe can do entire script blocks and\n\n178\n00:09:17.100 --> 00:09:20.980\nfunctions and\nthen set an alias to that as well.\n\n179\n00:09:20.980 --> 00:09:26.870\nSo let's see, if we're going to do this,\nwe'll do a new- alias and\n\n180\n00:09:26.870 --> 00:09:29.390\nlet's get some help in\nthat before we run it.\n\n181\n00:09:29.390 --> 00:09:34.720\nSo let's do a get-help new-alias,\nand see what our syntax is, right?\n\n182\n00:09:34.720 --> 00:09:38.510\nI can see new-alias,\nI'm going to give it name.\n\n183\n00:09:38.510 --> 00:09:43.050\nWhat I want the alias to be like dir or\nls.\n\n184\n00:09:43.050 --> 00:09:46.295\nAnd then the value,\nwhat that is actually going to do.\n\n185\n00:09:46.295 --> 00:09:53.050\nGet-child item or get-service or\nwhatever the case may be.\n\n186\n00:09:53.050 --> 00:09:55.520\nBoth of these are optional, right?\n\n187\n00:09:56.710 --> 00:10:00.620\nSo we can leave off the dash name and\nthe dash value and\n\n188\n00:10:00.620 --> 00:10:05.190\njust provide the actual strings, or\nremember what I said the other day,\n\n189\n00:10:05.190 --> 00:10:09.197\nif you don't provide the parameter name,\nit's positional, right?.\n\n190\n00:10:10.390 --> 00:10:14.555\nSo if I do new alias and\nlet's say I wanna alias.\n\n191\n00:10:14.555 --> 00:10:17.370\nGet-child item and I wanna use ls.\n\n192\n00:10:17.370 --> 00:10:22.520\nIf I type in new alias get-child item ls,\n\n193\n00:10:22.520 --> 00:10:24.370\nit's gonna do the opposite\nof what I think.\n\n194\n00:10:24.370 --> 00:10:28.630\nIt's gonna assign the alias\nget-child item if I type that,\n\n195\n00:10:28.630 --> 00:10:32.520\nit would run ls,which is nothing\nwhich would fail, right.\n\n196\n00:10:32.520 --> 00:10:37.242\nIt's expecting name first and then value\nand I have to put them in that order.\n\n197\n00:10:37.242 --> 00:10:41.020\nUnless I type dash name and dash value,\nthen I can put them in any order\n\n198\n00:10:41.020 --> 00:10:44.790\nbecause I'm telling it what this is and\nwhat this is, all right..\n\n199\n00:10:44.790 --> 00:10:45.418\nSo let's try.\n\n200\n00:10:45.418 --> 00:10:50.650\nLet's do new-alias and the name,\nwhat did we say we're going to do.\n\n201\n00:10:50.650 --> 00:10:51.943\nI forgot now.\n&gt;&gt; Okay.\n\n202\n00:10:51.943 --> 00:10:52.783\n&gt;&gt; Okay, that's not an IP address.\n\n203\n00:10:52.783 --> 00:10:56.222\nRight, let's call it,\nwhat should we call it, ip?\n\n204\n00:10:56.222 --> 00:10:58.710\n&gt;&gt; Get or-\n&gt;&gt; Something really short.\n\n205\n00:10:58.710 --> 00:11:00.715\n&gt;&gt; Okay, ip.\n&gt;&gt; Ip, yeah, I like ip.\n\n206\n00:11:00.715 --> 00:11:02.091\n&gt;&gt; [LAUGH]\n&gt;&gt; So we initially-\n\n207\n00:11:02.091 --> 00:11:05.560\n&gt;&gt; I'm glad you asked for my advice there.\n\n208\n00:11:05.560 --> 00:11:06.350\nI like that.\n&gt;&gt; [LAUGH]\n\n209\n00:11:06.350 --> 00:11:06.850\n&gt;&gt; Yeah, well.\n\n210\n00:11:06.850 --> 00:11:07.421\nSorry,\n\n211\n00:11:07.421 --> 00:11:08.404\nyou too slow.\n\n212\n00:11:08.404 --> 00:11:08.924\nYou're too slow.\n&gt;&gt; [LAUGH]\n\n213\n00:11:08.924 --> 00:11:11.370\n&gt;&gt; We're gonna do this and\n\n214\n00:11:11.370 --> 00:11:17.920\nwe're gonna say get-net IP address and\nwe'll hit enter.\n\n215\n00:11:17.920 --> 00:11:20.990\nAll right, then it look like anything\nhappen, remember in PowerShell,\n\n216\n00:11:20.990 --> 00:11:23.030\nI don't think I've said this before but\nif you text,\n\n217\n00:11:23.030 --> 00:11:27.650\nif you're PowerShell isn't streaming\nright at you, you're probably okay.\n\n218\n00:11:27.650 --> 00:11:29.691\nWhen you see all the red text,\nthat's when you know you got problem.\n\n219\n00:11:29.691 --> 00:11:30.930\n&gt;&gt; I know it's so anticlimactic.\n\n220\n00:11:30.930 --> 00:11:34.170\nYou sometimes expect like this really\ngreat thing to let you know that you've\n\n221\n00:11:34.170 --> 00:11:35.010\naccomplished something.\n\n222\n00:11:35.010 --> 00:11:38.350\nAnd this is just like no, that's normal,\nyou shouldn't be proud of yourself.\n\n223\n00:11:38.350 --> 00:11:40.040\n&gt;&gt; Yeah, I did.\nI was like good job,\n\n224\n00:11:40.040 --> 00:11:41.350\nyou typed the command correctly.\n\n225\n00:11:41.350 --> 00:11:41.852\n&gt;&gt; Right?\n\n226\n00:11:41.852 --> 00:11:45.270\n&gt;&gt; [LAUGH]\n&gt;&gt; All right, I'll do ip and hit Enter.\n\n227\n00:11:45.270 --> 00:11:46.970\nAnd look at that, right?\n\n228\n00:11:46.970 --> 00:11:51.548\nAll I typed was ip, and\nI got the results of my\n\n229\n00:11:51.548 --> 00:11:55.670\nGet-NetIPAddress by\nusing that alias there.\n\n230\n00:11:56.890 --> 00:12:00.260\nSo that is how we can create aliases.\n\n231\n00:12:00.260 --> 00:12:05.500\nNow if I want to change that,\nI could do one of two things, right?\n\n232\n00:12:07.080 --> 00:12:11.120\nWhat would you use for get-net IP address?\n\n233\n00:12:11.120 --> 00:12:13.264\n&gt;&gt; I don't know,\nyou obviously know I have no clue.\n\n234\n00:12:13.264 --> 00:12:15.501\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] Maybe, I don't know,\n\n235\n00:12:15.501 --> 00:12:17.270\nmaybe net IP, how about that?\n\n236\n00:12:17.270 --> 00:12:18.640\n&gt;&gt; Okay, let's do netip.\n\n237\n00:12:18.640 --> 00:12:23.580\nSo if you do netip and hit Enter,\nwell let's try it, netip.\n\n238\n00:12:24.870 --> 00:12:25.860\nAnd sure enough.\n\n239\n00:12:25.860 --> 00:12:27.870\nCan I still use ip?\n\n240\n00:12:27.870 --> 00:12:28.880\nAbsolutely.\n\n241\n00:12:28.880 --> 00:12:32.117\nI now have two aliases pointing\nto the same definition.\n\n242\n00:12:32.117 --> 00:12:32.725\n&gt;&gt; Nice.\n\n243\n00:12:32.725 --> 00:12:34.510\n&gt;&gt; So\nyou can make as many aliases as you want.\n\n244\n00:12:34.510 --> 00:12:39.250\nJust like we saw with get child item,\ndir, ls, and\n\n245\n00:12:39.250 --> 00:12:41.680\nwhatever the other one was,\nI've now forgot it [LAUGH].\n\n246\n00:12:41.680 --> 00:12:42.450\n&gt;&gt; Ogv.\n\n247\n00:12:42.450 --> 00:12:43.167\n&gt;&gt; What's that?\n\n248\n00:12:43.167 --> 00:12:44.610\n&gt;&gt; Ogv.\n&gt;&gt; Ogv, yeah, there we go [LAUGH].\n\n249\n00:12:44.610 --> 00:12:46.160\n&gt;&gt; How could you forget?\n\n250\n00:12:46.160 --> 00:12:47.920\n&gt;&gt; How could I forget that?\n\n251\n00:12:47.920 --> 00:12:49.640\nAnd I can also change.\n\n252\n00:12:49.640 --> 00:12:55.370\nLet's say that I like Cherokee's netip for\nthe get-netip address.\n\n253\n00:12:55.370 --> 00:13:01.013\nI think I'd rather have IP point\nto get -netadapter, right?\n\n254\n00:13:01.013 --> 00:13:03.190\nGet-netadapter.\n\n255\n00:13:03.190 --> 00:13:08.560\nActually it's, what is it,\nnet, yeah, net adapter, right?\n\n256\n00:13:08.560 --> 00:13:12.700\nWhich gives me some information\nabout my different network adaptors.\n\n257\n00:13:12.700 --> 00:13:20.195\nSo I can change it, remember we had\nthe new but we also have set- aliasIP,\n\n258\n00:13:20.195 --> 00:13:26.590\nwe get -netAdaptor and now when I type\n\n259\n00:13:26.590 --> 00:13:32.190\nthe IP I don't get the net IP address,\nI get the results of getting that adapter.\n\n260\n00:13:32.190 --> 00:13:33.405\nBut Cherokee's is still there.\n\n261\n00:13:33.405 --> 00:13:35.550\nNetip, I think that's what we called it.\n\n262\n00:13:35.550 --> 00:13:37.100\nAnd that one still works.\n\n263\n00:13:37.100 --> 00:13:41.140\nSo you can change up if you decide\nhey I want to use this alias for\n\n264\n00:13:41.140 --> 00:13:43.910\nsomething else,\nsimply set it to something new.\n\n265\n00:13:43.910 --> 00:13:44.650\nIt's that easy.\n\n266\n00:13:44.650 --> 00:13:47.600\n&gt;&gt; You might want to be careful\nwith that a little bit to make sure\n\n267\n00:13:47.600 --> 00:13:48.780\nyou're not adding confusion.\n\n268\n00:13:48.780 --> 00:13:51.149\n&gt;&gt; Yes, yeah, you definitely got\nto keep it straight in the mind.\n\n269\n00:13:51.149 --> 00:13:53.542\n&gt;&gt; Right.\n&gt;&gt; You might want to document some of\n\n270\n00:13:53.542 --> 00:13:57.830\nthe things, but\nI can always do a get-alias, right?\n\n271\n00:13:57.830 --> 00:14:00.000\nAnd let's see if ours show up in here,\nCherokee.\n\n272\n00:14:01.060 --> 00:14:03.950\nSo there's ip, the one that we created.\n\n273\n00:14:03.950 --> 00:14:06.647\nAnd we should also see,\nwhat'd you call yours?\n\n274\n00:14:06.647 --> 00:14:07.309\nNetip.\n&gt;&gt; Mm-hm.\n\n275\n00:14:07.309 --> 00:14:09.577\n&gt;&gt; There is netip, so-\n&gt;&gt; Okay, so\n\n276\n00:14:09.577 --> 00:14:12.530\njust kind of integrates them\nwithout like separating, say?\n\n277\n00:14:12.530 --> 00:14:16.610\n&gt;&gt; It just adds it to the list\nof already existing aliases.\n\n278\n00:14:16.610 --> 00:14:19.220\nSo we can always come in here and\nsee what somebody has done,\n\n279\n00:14:19.220 --> 00:14:22.400\nwhether they created aliases,\nor make sure ours are there.\n\n280\n00:14:22.400 --> 00:14:26.860\nOr before I use man, I wanna see,\nhey, is that used for anything else.\n\n281\n00:14:26.860 --> 00:14:27.770\nSure enough.\n\n282\n00:14:27.770 --> 00:14:29.240\nAll right, I'd better not reassign that,\n\n283\n00:14:29.240 --> 00:14:35.100\nbecause then I'll lose the ability to\nget help pages by typing man, right?\n\n284\n00:14:35.100 --> 00:14:37.510\nSo I think that was it.\n\n285\n00:14:37.510 --> 00:14:43.050\nSo that's how we can create new ones,\nwe can modify existing ones.\n\n286\n00:14:43.050 --> 00:14:48.140\nSee if there were other commands we wanna\ntake a look at with that Earlier said,\n\n287\n00:14:48.140 --> 00:14:49.530\nI think we looked at all of them.\n\n288\n00:14:49.530 --> 00:14:52.420\nExport earlier said allows me to do just\n\n289\n00:14:52.420 --> 00:14:54.740\nwhat you think allows\nme to export them out.\n\n290\n00:14:54.740 --> 00:14:57.640\nI can also import them\nback in to my session.\n\n291\n00:14:59.000 --> 00:15:03.301\nNow something to keep in mind and\nthis is gonna be a gotcha here,\n\n292\n00:15:03.301 --> 00:15:05.180\nlet's export this first.\n\n293\n00:15:05.180 --> 00:15:10.146\nLet's do a get-help and\n\n294\n00:15:10.146 --> 00:15:14.180\nexport-aliases.\n\n295\n00:15:14.180 --> 00:15:15.546\nAnd let's check our syntax.\n\n296\n00:15:15.546 --> 00:15:21.240\nSo export alias-name string-append,\n\n297\n00:15:21.240 --> 00:15:25.590\nwhich is if I already had a file,\nI can add to it not overwrite it.\n\n298\n00:15:25.590 --> 00:15:30.370\nAs either CSV or script to what\ntype of file do I want to output.\n\n299\n00:15:30.370 --> 00:15:33.030\nWhat else do we want to say?\n\n300\n00:15:33.030 --> 00:15:39.220\nLiteral path, that's going to be the path\nto my, where I'm going to store this file.\n\n301\n00:15:39.220 --> 00:15:40.890\nLet's do a dash examples.\n\n302\n00:15:42.660 --> 00:15:44.730\nWe can see a couple of them.\n\n303\n00:15:44.730 --> 00:15:45.580\nHere's one right here.\n\n304\n00:15:45.580 --> 00:15:48.390\nExport alias-path, and the name.\n\n305\n00:15:48.390 --> 00:15:53.687\nAnd notice they've named it .ps1,\nand they said as script.\n\n306\n00:15:53.687 --> 00:15:58.190\nAnd so it would be a PS1 file.\n\n307\n00:15:58.190 --> 00:16:03.004\nThe one thing you have to remember\nwith aliases Is unless we add them to\n\n308\n00:16:03.004 --> 00:16:05.750\nour profile, they're gonna go away.\n\n309\n00:16:05.750 --> 00:16:09.418\nIf I close PowerShell,\nI'm not gonna have those aliases anymore.\n\n310\n00:16:09.418 --> 00:16:11.840\nLet me export them first.\n\n311\n00:16:11.840 --> 00:16:13.575\nClose PowerShell,\nI'll show you what I mean.\n\n312\n00:16:13.575 --> 00:16:15.019\nThen we can import these back in.\n\n313\n00:16:15.019 --> 00:16:20.297\nSo we're gonna do export-alias,\nand we'll do a -Path.\n\n314\n00:16:20.297 --> 00:16:25.474\nAnd I'll just put it in my directory\nwhere I'm at here, and we'll call\n\n315\n00:16:25.474 --> 00:16:31.795\nit like they do in the example, alias.ps1\nand we'll do an as script, that's fine.\n\n316\n00:16:31.795 --> 00:16:34.101\nWe'll hit Enter, right?\n\n317\n00:16:34.101 --> 00:16:40.674\nAnd then if we take a look at that,\nlet me close PowerShell.\n\n318\n00:16:40.674 --> 00:16:42.777\nAnd we'll take a look at that guy.\n\n319\n00:16:45.162 --> 00:16:49.892\nThere it is,\n\n320\n00:16:49.892 --> 00:16:55.485\nalias.ps1.\n\n321\n00:16:55.485 --> 00:17:01.015\nAnd there is the file that it exported,\nright?\n\n322\n00:17:01.015 --> 00:17:02.553\nAnd notice how it exported it.\n\n323\n00:17:02.553 --> 00:17:04.026\nThis is kind of the cool part.\n\n324\n00:17:04.026 --> 00:17:06.919\nIt doesn't export it as definitions,\n\n325\n00:17:06.919 --> 00:17:11.753\nlike dir is getting that child item,\nand ogv is output read view.\n\n326\n00:17:11.753 --> 00:17:13.233\nIt doesn't do it like that.\n\n327\n00:17:13.233 --> 00:17:18.982\nIt exports it as a command set alias and\nthen all the information about it.\n\n328\n00:17:18.982 --> 00:17:21.634\nWhich means when I turn around and\nimport this,\n\n329\n00:17:21.634 --> 00:17:25.627\nit's gonna be able to create these\naliases all over again, all right?\n\n330\n00:17:25.627 --> 00:17:28.935\nIt's not just a list where I\nhave to manually go through and\n\n331\n00:17:28.935 --> 00:17:30.768\nrecreate all of these aliases.\n\n332\n00:17:30.768 --> 00:17:32.786\nI can now turn around and import this.\n\n333\n00:17:32.786 --> 00:17:36.389\n&gt;&gt; Now that because you saved it\nwith the PowerShell extension?\n\n334\n00:17:36.389 --> 00:17:39.454\nIf I would have saved it with a text\nextension would it have just been\n\n335\n00:17:39.454 --> 00:17:40.073\na text file?\n\n336\n00:17:40.073 --> 00:17:42.671\n&gt;&gt; Yeah, let's take a look at aliases and\n\n337\n00:17:42.671 --> 00:17:47.730\nlet's verify that because I wanna say\nwith a csv it's not gonna be the same.\n\n338\n00:17:47.730 --> 00:17:50.313\nNotice I relaunched PowerShell.\n\n339\n00:17:50.313 --> 00:17:54.449\nRemember I don't have any history as\nfar as get history goes, but my up and\n\n340\n00:17:54.449 --> 00:17:56.732\ndown arrow keys work against that file.\n\n341\n00:17:56.732 --> 00:17:59.571\nThat persistent history,\nnot that temporary history.\n\n342\n00:17:59.571 --> 00:18:04.612\nSo I can use my up arrow\nto bring this back, and\n\n343\n00:18:04.612 --> 00:18:10.849\nlet's change this to a .csv and\nwe'll do this as a CSV,\n\n344\n00:18:10.849 --> 00:18:16.312\nand we'll go take a look\nin that same directory.\n\n345\n00:18:16.312 --> 00:18:19.638\nAnd there it is in Excel\nas my default CSV.\n\n346\n00:18:19.638 --> 00:18:24.260\nAnd, Yes, it's just definitions.\n\n347\n00:18:24.260 --> 00:18:26.295\nFT, format table.\n\n348\n00:18:26.295 --> 00:18:30.543\nI would have to change my options in here\nso that it sees it as comma delimited.\n\n349\n00:18:30.543 --> 00:18:32.167\nBut there's no commands-\n&gt;&gt; Right.\n\n350\n00:18:32.167 --> 00:18:37.311\n&gt;&gt; Right, it's just the actual definition\nthrough that particular alias.\n\n351\n00:18:37.311 --> 00:18:37.954\n&gt;&gt; Okay.\n\n352\n00:18:37.954 --> 00:18:42.288\n&gt;&gt; So, we couldn't use this easily,\nit would have to take a little more\n\n353\n00:18:42.288 --> 00:18:46.648\nprogrammatic skills to actually\nrecreate them from this, I think.\n\n354\n00:18:46.648 --> 00:18:49.635\nAlthough I would tell you I\nhave never done the import, so\n\n355\n00:18:49.635 --> 00:18:52.695\nimporting from the CSV,\nit might be smart enough to know.\n\n356\n00:18:52.695 --> 00:18:53.786\nShould we test it and see?\n\n357\n00:18:53.786 --> 00:18:55.371\n&gt;&gt; Sure.\n&gt;&gt; We should test it and see, right?\n\n358\n00:18:55.371 --> 00:18:56.685\nI mean that's what we're here for.\n\n359\n00:18:56.685 --> 00:18:57.414\n&gt;&gt; Yeah.\n\n360\n00:18:57.414 --> 00:18:59.381\n&gt;&gt; So let's do import alias, and\n\n361\n00:18:59.381 --> 00:19:04.009\nI'm going to show you how to use\ncommands that we've never used before.\n\n362\n00:19:04.009 --> 00:19:06.366\n&gt;&gt; [LAUGH]\n&gt;&gt; Imply while you're recorded.\n\n363\n00:19:06.366 --> 00:19:09.636\n&gt;&gt; Exactly, now I can go to\nget help import dash alias and\n\n364\n00:19:09.636 --> 00:19:10.953\nI can see the syntax.\n\n365\n00:19:10.953 --> 00:19:15.492\nBut remember, PowerShell has that\nwonderful thing called tab autofill.\n\n366\n00:19:15.492 --> 00:19:17.860\nSo, I don't know what\nswitches come with this.\n\n367\n00:19:17.860 --> 00:19:19.352\nI'm guessing probably a path.\n\n368\n00:19:19.352 --> 00:19:23.222\nI've gotta tell it where the file is, or\na name, or something like that, right?\n\n369\n00:19:23.222 --> 00:19:25.164\n&gt;&gt; Makes sense, yeah.\n&gt;&gt; So all I'm gonna do is hit the dash.\n\n370\n00:19:25.164 --> 00:19:28.522\nNothing else, and\nI'm just gonna start tabbing, and\n\n371\n00:19:28.522 --> 00:19:33.429\nyou can see that I can tab through all\nthe possible parameters for that command.\n\n372\n00:19:33.429 --> 00:19:36.471\nMost of which have to do with\nerror messages and warnings,\n\n373\n00:19:36.471 --> 00:19:37.847\nso they're not any good.\n\n374\n00:19:37.847 --> 00:19:42.884\nIt's just the first few that I saw,\npath, literal path, scope.\n\n375\n00:19:42.884 --> 00:19:47.503\nPast there just want to show the results\nforce if there's an error so that's it.\n\n376\n00:19:47.503 --> 00:19:50.088\nThen you can shift tab\nto go back through them,\n\n377\n00:19:50.088 --> 00:19:53.283\nso most likely path is really\nthe only one I need, right?\n\n378\n00:19:53.283 --> 00:19:54.063\nHow's that, right?\n\n379\n00:19:54.063 --> 00:19:55.662\nWe don't have to know the commands,\n\n380\n00:19:55.662 --> 00:19:57.837\nPowerShell will help us\nfill those commands out.\n\n381\n00:19:57.837 --> 00:20:00.532\nSo go find that alias,\nit's in the same directory so\n\n382\n00:20:00.532 --> 00:20:02.383\nit should find it there we go again.\n\n383\n00:20:02.383 --> 00:20:03.764\nTab autofill, did you see that?\n\n384\n00:20:05.896 --> 00:20:08.298\nA-L-I Tab, all right.\n\n385\n00:20:08.298 --> 00:20:10.460\nSave yourself the typing,\ndon't make typos.\n\n386\n00:20:10.460 --> 00:20:12.211\nLet it do the typing for you.\n\n387\n00:20:12.211 --> 00:20:14.512\nAll right, and\nI'll go ahead and hit Enter.\n\n388\n00:20:14.512 --> 00:20:15.081\nActually, you know what?\n\n389\n00:20:15.081 --> 00:20:19.109\nBefore we do this,\nI need to close PowerShell,\n\n390\n00:20:19.109 --> 00:20:24.666\nlaunch PowerShell again, and\nverify that our aliases are gone.\n\n391\n00:20:24.666 --> 00:20:26.188\n&gt;&gt; Okay.\n&gt;&gt; The ones we created in that show.\n\n392\n00:20:26.188 --> 00:20:27.425\nSo let's do a get -alias.\n\n393\n00:20:30.760 --> 00:20:34.479\nAnd let's see, we had an IP,\n&gt;&gt; IP, NET IP.\n\n394\n00:20:34.479 --> 00:20:35.776\n&gt;&gt; And IP is definitely gone.\n\n395\n00:20:35.776 --> 00:20:38.061\nAnd NET IP.\n\n396\n00:20:38.061 --> 00:20:41.804\nThere is no net IP either.\n\n397\n00:20:41.804 --> 00:20:43.856\nOGVs still there, but\nthat's a build in one.\n\n398\n00:20:43.856 --> 00:20:46.047\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] All right?\n\n399\n00:20:46.047 --> 00:20:48.798\nSo yep, they're definitely gone.\n\n400\n00:20:48.798 --> 00:20:54.068\nAll right, so\nlet's see if we can do an import\n\n401\n00:20:54.068 --> 00:20:58.243\nalias -path and then alias.csv.\n\n402\n00:20:58.243 --> 00:20:59.771\nAnd lots of errors.\n\n403\n00:20:59.771 --> 00:21:03.506\nThat's what we mean by if your\nPowerShell is screaming red at you,\n\n404\n00:21:03.506 --> 00:21:05.317\nyou've done something wrong.\n\n405\n00:21:05.317 --> 00:21:06.192\n&gt;&gt; No bueno.\n&gt;&gt; Exactly.\n\n406\n00:21:06.192 --> 00:21:09.038\nAlias is not allowed because an alis name,\n\n407\n00:21:09.038 --> 00:21:12.050\nyou know this is saying\nthey actually exist.\n\n408\n00:21:12.050 --> 00:21:15.234\nSo, it might have only aired\nout on the duplicates.\n\n409\n00:21:15.234 --> 00:21:21.003\nLet's check and\nsee if we have a git-alias or net ID.\n\n410\n00:21:21.003 --> 00:21:25.937\nAnd negative.\n\n411\n00:21:25.937 --> 00:21:27.541\n&gt;&gt; Okay,\n&gt;&gt; That IP is not there.\n\n412\n00:21:27.541 --> 00:21:29.339\nAnd IP is not there.\n\n413\n00:21:29.339 --> 00:21:30.264\n&gt;&gt; And now we know.\n\n414\n00:21:30.264 --> 00:21:31.501\n&gt;&gt; So, didn't work too well.\n\n415\n00:21:31.501 --> 00:21:36.338\nAnd I'm thinking that other one might\nhave an issue as well, but let's try it.\n\n416\n00:21:38.790 --> 00:21:43.332\nImport-alias, this time we'll do path and\n\n417\n00:21:43.332 --> 00:21:46.565\nwe'll set it to alias dot PS1.\n\n418\n00:21:50.376 --> 00:21:53.512\nIs not properly formatted comes\n[INAUDIBLE] for the alias.\n\n419\n00:21:53.512 --> 00:21:55.336\nInteresting.\n\n420\n00:21:55.336 --> 00:22:00.045\nYou know what, I bet you,\nlet's try something.\n\n421\n00:22:04.169 --> 00:22:05.305\nYep.\n\n422\n00:22:07.558 --> 00:22:08.278\nAll right, so\n\n423\n00:22:08.278 --> 00:22:11.643\ncouple things we learned there on\nthe fly in the middle of our show.\n\n424\n00:22:11.643 --> 00:22:12.842\n&gt;&gt; [LAUGH] This is gonna be good.\n\n425\n00:22:12.842 --> 00:22:14.619\n&gt;&gt; But that is always a good thing.\n\n426\n00:22:14.619 --> 00:22:16.060\nI'm just gonna clear that screen.\n\n427\n00:22:16.060 --> 00:22:18.662\nSo, what I was seeing\nthere was importing it,\n\n428\n00:22:18.662 --> 00:22:22.485\nwe exported successfully both the CSV\nfile ss well as the PS1 file.\n\n429\n00:22:22.485 --> 00:22:23.037\n&gt;&gt; Yes.\n\n430\n00:22:23.037 --> 00:22:25.459\n&gt;&gt; The CSV file,\nwhen I tried to import it,\n\n431\n00:22:25.459 --> 00:22:28.740\nthe errors I was getting were\nalias already exists, so\n\n432\n00:22:28.740 --> 00:22:33.547\nI would need to clean that up to be the\nonly aliases that don't exist by default.\n\n433\n00:22:33.547 --> 00:22:34.857\n&gt;&gt; Okay, so\nremoving all those pre-existing-\n\n434\n00:22:34.857 --> 00:22:37.123\n&gt;&gt; I think getting rid of those and\n\n435\n00:22:37.123 --> 00:22:41.928\nhaving a file with just my aliases\nwould be the best reason there.\n\n436\n00:22:41.928 --> 00:22:46.900\nRunning that script was giving\nme the same errors here.\n\n437\n00:22:46.900 --> 00:22:52.603\nI'm seeing alias is not writable\nbecause alias cnsn is read-only or\n\n438\n00:22:52.603 --> 00:22:55.760\nconstant, and cannot be written to.\n\n439\n00:22:55.760 --> 00:22:59.892\nSo again, same thing, I'm trying to\nupdate aliases that already exist, and\n\n440\n00:22:59.892 --> 00:23:01.407\nI'm getting errors there.\n\n441\n00:23:01.407 --> 00:23:03.032\nI'm getting write issues.\n\n442\n00:23:03.032 --> 00:23:08.206\nSo importing them back in is definitely\nnot as easy as exporting them.\n\n443\n00:23:08.206 --> 00:23:12.296\n&gt;&gt; And we have a question in chat, so that\nevery time we go to relaunch PowerShell,\n\n444\n00:23:12.296 --> 00:23:15.909\nwill we need to perform this import\nfunction if we wanted to use those?\n\n445\n00:23:15.909 --> 00:23:18.165\n&gt;&gt; If you did it the way we did it, yes.\n\n446\n00:23:18.165 --> 00:23:21.607\nAnd hopefully you'll be more successful\nthan I was at importing them back in.\n\n447\n00:23:21.607 --> 00:23:24.651\nWhat I would say to you\nJonathan is we would,\n\n448\n00:23:24.651 --> 00:23:29.850\nif it was aliases that we wanted to\npersist we wanna add them to our profile.\n\n449\n00:23:29.850 --> 00:23:32.054\nThat would be the easiest way to do it.\n\n450\n00:23:32.054 --> 00:23:35.722\nWe haven't come to profiles yet, we're\ndefinitely gonna take a look at how we can\n\n451\n00:23:35.722 --> 00:23:37.490\nuse those to customize our interface.\n\n452\n00:23:37.490 --> 00:23:43.475\nBut the profile is really where you wanna\nmake changes to your environment itself.\n\n453\n00:23:43.475 --> 00:23:47.515\nWhat your prompt looks like, what modules\nare loaded up by default when you open\n\n454\n00:23:47.515 --> 00:23:51.075\nPowerShell, what aliases are available,\nwhat functions, again,\n\n455\n00:23:51.075 --> 00:23:53.755\nwould be importing modules,\nand things like that.\n\n456\n00:23:53.755 --> 00:23:58.077\nSo I think a better alternative\nwould be to add it to your profile.\n\n457\n00:23:58.077 --> 00:24:01.080\nWhat I was thinking here was I\nmight be able to export them and\n\n458\n00:24:01.080 --> 00:24:02.896\nimport them into another machine.\n\n459\n00:24:02.896 --> 00:24:06.429\nLooks like I'll have to do a little more\nresearch to figure out what it's expecting\n\n460\n00:24:06.429 --> 00:24:08.763\non that import process because\nboth have them failed.\n\n461\n00:24:08.763 --> 00:24:13.101\nAnd it doesn't make sense that I would\nexport that entire list and then have to\n\n462\n00:24:13.101 --> 00:24:15.592\ndelete 90% of them just to [CROSSTALK]\n&gt;&gt; Right,\n\n463\n00:24:15.592 --> 00:24:18.557\nbecause you're trying to be more efficient\nby doing that, and that's just extra work.\n\n464\n00:24:18.557 --> 00:24:20.564\n&gt;&gt; Yeah, so\nI'll do a little bit of research in that.\n\n465\n00:24:20.564 --> 00:24:24.042\nThat's just something I thought\nwe'd try on the fly and\n\n466\n00:24:24.042 --> 00:24:26.930\ndefinitely need to take\na closer look at that.\n\n467\n00:24:26.930 --> 00:24:30.097\nBut as far as aliases go,\nyou know if you're in a session,\n\n468\n00:24:30.097 --> 00:24:33.785\none of the nice things you can do is\nquickly create an alias and you can\n\n469\n00:24:33.785 --> 00:24:37.825\nuse that for the rest of your session,\nit will make your life a lot easier.\n\n470\n00:24:37.825 --> 00:24:41.928\nAdding to a profile gives us\nthe persistence that we like,\n\n471\n00:24:41.928 --> 00:24:44.702\nthat we can carry on between sessions.\n\n472\n00:24:44.702 --> 00:24:49.126\nAnd take advantage, there's tons of built\nin aliases that we can use to make our\n\n473\n00:24:49.126 --> 00:24:51.382\nPowerShell experience a lot more easy.\n\n474\n00:24:51.382 --> 00:24:54.132\n&gt;&gt; All right, well thank you for taking\nthe time to share with us even though we\n\n475\n00:24:54.132 --> 00:24:55.757\nhad to break it up into two, that's great.\n\n476\n00:24:55.757 --> 00:24:59.509\nWe got a lot of good information there,\nand thank you for joining us as well, but\n\n477\n00:24:59.509 --> 00:25:01.642\nfor this show,\nwe'll go ahead and sign out.\n\n478\n00:25:01.642 --> 00:25:03.805\nI've been your host, Cherokee Boose\n&gt;&gt; And I'm Mike Rodrick.\n\n479\n00:25:03.805 --> 00:25:05.203\n&gt;&gt; See you next time here at ITProTV.\n\n480\n00:25:05.203 --> 00:25:13.235\n[MUSIC]\n\n481\n00:25:13.235 --> 00:25:15.776\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "237943481"
        },
        {
          "description": "In this episode, Mike and Cherokee look at using command piping in PowerShell. They also look at formatting cmdlet output.",
          "length": "1569",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-1-piping_and_formatting-101017-PGM.00_25_54_22.Still002.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-1-piping_and_formatting-101017-PGM.00_25_54_22.Still002-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-1-piping_and_formatting-101017-PGM.00_25_54_22.Still002-sm.jpg",
          "title": "Piping and Formatting",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:03.490\nWelcome to ITProTV,\n\n2\n00:00:03.490 --> 00:00:07.944\nI'm your host [CROSSTALK].\n\n3\n00:00:07.944 --> 00:00:10.486\n&gt;&gt; You're watching ITProTV.\n\n4\n00:00:10.486 --> 00:00:14.580\n&gt;&gt; Welcome back to your\nMicrosoft PowerShell series.\n\n5\n00:00:14.580 --> 00:00:16.490\nI'm your show host Cherokee Boose.\n\n6\n00:00:16.490 --> 00:00:20.600\nIn this episode, we'll be taking a look\nat piping and formatting and of course,\n\n7\n00:00:20.600 --> 00:00:23.400\nwith us today, in the studio,\nwe have Mr. Mike Rodrick.\n\n8\n00:00:23.400 --> 00:00:24.600\nThank you for joining us today, Mike.\n\n9\n00:00:24.600 --> 00:00:25.806\n&gt;&gt; So formal with the mister.\n\n10\n00:00:25.806 --> 00:00:27.268\n&gt;&gt; I know [LAUGH].\n\n11\n00:00:27.268 --> 00:00:29.165\n&gt;&gt; I feel old, I mean, I am, but still.\n\n12\n00:00:29.165 --> 00:00:31.560\n[LAUGH] Thanks for\nhaving me back, Cherokee.\n\n13\n00:00:31.560 --> 00:00:34.875\nExcited to be here as always and\nyou are correct,\n\n14\n00:00:34.875 --> 00:00:38.265\npiping and\nformatting is the topic of the day.\n\n15\n00:00:38.265 --> 00:00:38.995\nSo good stuff here.\n\n16\n00:00:38.995 --> 00:00:43.415\nThese are actually, well, not that the\nother stuff isn't but these are definitely\n\n17\n00:00:43.415 --> 00:00:47.465\nthings where we're be using a lot of\nin our journey through PowerShell.\n\n18\n00:00:47.465 --> 00:00:49.865\nAs well as when you get out\nthere in the real world and\n\n19\n00:00:49.865 --> 00:00:52.983\nyou start using or\nyou're already are using PowerShell.\n\n20\n00:00:52.983 --> 00:00:56.594\nThen you're probably familiar with how\nwe pipe commands and how we format that\n\n21\n00:00:56.594 --> 00:00:59.720\noutput, because it's something\nthat we always seem to have to do.\n\n22\n00:00:59.720 --> 00:01:03.423\n&gt;&gt; It's seems like we're just kind of,\nwe started at the beginning there learning\n\n23\n00:01:03.423 --> 00:01:06.900\nthose components and now we're building\nup and learning how to use them.\n\n24\n00:01:06.900 --> 00:01:07.760\n&gt;&gt; Exactly, right.\n\n25\n00:01:07.760 --> 00:01:10.130\nI've been trying, it's been tricky.\n\n26\n00:01:10.130 --> 00:01:13.500\nTrying not to use some of\nthe things that we don't know yet.\n\n27\n00:01:13.500 --> 00:01:17.040\nBecause there's several things in\nthe previous episodes where an alias would\n\n28\n00:01:17.040 --> 00:01:19.250\nhave been handy,\npiping would have been handy.\n\n29\n00:01:19.250 --> 00:01:22.320\nBut I couldn't do those yet\nbecause we hadn't learned about them yet.\n\n30\n00:01:22.320 --> 00:01:26.410\nSo we definitely had to get these under\nour belt before we go much further,\n\n31\n00:01:26.410 --> 00:01:29.040\nbecause we're going to\nhave to start using them.\n\n32\n00:01:29.040 --> 00:01:35.720\nSo well, let start with talking\nabout piping or command piping or\n\n33\n00:01:35.720 --> 00:01:39.450\nwhat's really known and in PowerShell and\nseveral programming languages.\n\n34\n00:01:39.450 --> 00:01:41.820\nWhat we call our command pipeline.\n\n35\n00:01:41.820 --> 00:01:46.390\nAll right, and it's really the name if you\nthink about it visually, I mean it really\n\n36\n00:01:46.390 --> 00:01:51.410\ndoes help us envision, let's see,\nthink about it visually, to envision.\n\n37\n00:01:51.410 --> 00:01:52.666\nYeah, that's not redundant.\n\n38\n00:01:52.666 --> 00:01:57.410\n&gt;&gt; [LAUGH] I see psychedelic and\ncolors and [LAUGH].\n\n39\n00:01:57.410 --> 00:02:00.480\n&gt;&gt; Just inside one,\ninside the other, yeah.\n\n40\n00:02:00.480 --> 00:02:05.470\nWhen we talk about command pipeline,\nwe're talking about being able to take\n\n41\n00:02:05.470 --> 00:02:08.050\none command,\nwhich is gonna output results, right?\n\n42\n00:02:08.050 --> 00:02:10.030\nA result and set of some kind, and\n\n43\n00:02:10.030 --> 00:02:13.060\ninstead of displaying that on\nscreen like we would normally do.\n\n44\n00:02:13.060 --> 00:02:17.880\nWhen I type in, let's look at my screen\nhere, if I do a get-process, right?\n\n45\n00:02:17.880 --> 00:02:20.590\nWell, all of that data just\ngets spit out onto my screen.\n\n46\n00:02:20.590 --> 00:02:24.270\nSingle command output comes\nright to my default out,\n\n47\n00:02:24.270 --> 00:02:27.050\nwhich in this case is my console view.\n\n48\n00:02:27.050 --> 00:02:30.710\nWhereas piping allows me to,\n\n49\n00:02:30.710 --> 00:02:34.990\ninstead of sending those results\nimmediately to my screen in this case,\n\n50\n00:02:34.990 --> 00:02:40.650\nsend the results into another command and\nmanipulate that data set further.\n\n51\n00:02:40.650 --> 00:02:44.350\nAnd we can do this actually over and\nover and over again.\n\n52\n00:02:44.350 --> 00:02:49.160\nWe can take the output from one\ncommand and use it as the input for\n\n53\n00:02:49.160 --> 00:02:50.350\nthe next command.\n\n54\n00:02:50.350 --> 00:02:53.740\nAnd we do that with what's\ncalled the pipe character and\n\n55\n00:02:53.740 --> 00:02:55.770\nthis is what we call our command pipeline.\n\n56\n00:02:55.770 --> 00:02:57.960\nSo again,\nyou can think of a pipeline, right?\n\n57\n00:02:57.960 --> 00:03:01.510\nWe're putting all this stuff into that\npipe and it's all flowing through\n\n58\n00:03:01.510 --> 00:03:04.230\neach one of those commands until we\nget to the other end of the pipe and\n\n59\n00:03:04.230 --> 00:03:06.420\nit comes out onto our screen.\n\n60\n00:03:06.420 --> 00:03:09.800\nAnd how many stages are in that\npipeline is up to us, right?\n\n61\n00:03:09.800 --> 00:03:15.070\nHow many different commands we\nneed to work with that data set.\n\n62\n00:03:15.070 --> 00:03:19.690\nFor example, here I've done a get service,\n\n63\n00:03:19.690 --> 00:03:21.680\nI think is what I did or\ndid I do get process?\n\n64\n00:03:21.680 --> 00:03:24.140\nI did get process, let's do a get service.\n\n65\n00:03:24.140 --> 00:03:28.960\nI think the results are a little bit\nprettier, we'll do a get service.\n\n66\n00:03:28.960 --> 00:03:33.550\nSo all I did was type get-service,\nI'll scroll back up.\n\n67\n00:03:33.550 --> 00:03:37.380\nThere we can see my command, and\nthis is just the default output for\n\n68\n00:03:37.380 --> 00:03:39.220\nthis particular commandlet.\n\n69\n00:03:39.220 --> 00:03:45.350\nIt's showing us the status, the name,\nand the display name, right?\n\n70\n00:03:45.350 --> 00:03:47.420\nAnd that's all it's doing.\n\n71\n00:03:47.420 --> 00:03:52.440\nWhat if I wanted to sort this for example?\n\n72\n00:03:52.440 --> 00:03:56.430\nAnd this is where we start getting into\nthings we haven't talked about yet.\n\n73\n00:03:56.430 --> 00:03:59.440\nSo I'm gonna go ahead and do sort,\nand we'll talk about it as we do it.\n\n74\n00:03:59.440 --> 00:04:01.810\nCuz we haven't really discussed that yet.\n\n75\n00:04:01.810 --> 00:04:05.750\nBut what I can do, and let's clear the\nscreen, so I can get back up to the top.\n\n76\n00:04:06.860 --> 00:04:08.160\nOops, that is not my command.\n\n77\n00:04:09.260 --> 00:04:10.520\nLet's try that again.\n\n78\n00:04:10.520 --> 00:04:14.760\nI got an extra tick in there,\nthere we go, all right,\n\n79\n00:04:14.760 --> 00:04:17.240\nwe're gonna do another get-service.\n\n80\n00:04:17.240 --> 00:04:20.220\nBut instead of hitting Enter,\nI'm going to do a space, and\n\n81\n00:04:20.220 --> 00:04:22.020\nthen I'm going to do a shift backslash.\n\n82\n00:04:22.020 --> 00:04:26.390\nOn most keyboards, just above your\nEnter key, you've got your backslash.\n\n83\n00:04:26.390 --> 00:04:30.625\nAnd if you do a shift back slash,\nyou'll have a straight up and down bar, or\n\n84\n00:04:30.625 --> 00:04:33.452\npossibly two dashes that\nlook like they're up and\n\n85\n00:04:33.452 --> 00:04:35.553\ndown like a dash dash going this way.\n\n86\n00:04:35.553 --> 00:04:37.750\n&gt;&gt; Usually in those older\nPowerShell versions.\n\n87\n00:04:37.750 --> 00:04:39.544\n&gt;&gt; Yeah, well,\nthis is more about the keyboard, and\n\n88\n00:04:39.544 --> 00:04:40.940\nwhat it actually looks like on the key.\n\n89\n00:04:40.940 --> 00:04:45.550\nSometimes it's not a solid line,\nit's two dashes going up and down.\n\n90\n00:04:45.550 --> 00:04:48.030\nBoth of those would represent\nwhat we called the pipe\n\n91\n00:04:48.030 --> 00:04:50.500\ncharacters that you can\nsee on my screen here.\n\n92\n00:04:50.500 --> 00:04:54.680\nThis is the pipe character, just that\nup and down line there, all right?\n\n93\n00:04:54.680 --> 00:04:56.750\nBut that's what allows me ,it\nsays instead of taking this,\n\n94\n00:04:56.750 --> 00:04:59.650\nI'm not done with the data,\nyou get service.\n\n95\n00:04:59.650 --> 00:05:04.620\nSo it's coming back with a list of all\nthese services, their name, their status,\n\n96\n00:05:04.620 --> 00:05:05.900\nand their display name.\n\n97\n00:05:05.900 --> 00:05:07.900\nBut instead of spitting\nout onto the screen,\n\n98\n00:05:07.900 --> 00:05:11.640\nit's gonna feed that\ninto the next command.\n\n99\n00:05:11.640 --> 00:05:16.866\nSo let's do a something\nlike a sort-object for\n\n100\n00:05:16.866 --> 00:05:20.410\nexample, -property status.\n\n101\n00:05:20.410 --> 00:05:21.500\nAnd I'll go ahead and hit Enter.\n\n102\n00:05:22.950 --> 00:05:29.110\nAnd now if we look at these results,\nthe first column is my status.\n\n103\n00:05:29.110 --> 00:05:34.000\nAnd I can see all of the stopped\nservices are grouped together,\n\n104\n00:05:34.000 --> 00:05:37.950\nit's sorted by that status.\n\n105\n00:05:37.950 --> 00:05:42.640\nAnd then I see my runnings all together,\nright?\n\n106\n00:05:42.640 --> 00:05:46.040\nSo same results, just sorted.\n\n107\n00:05:46.040 --> 00:05:48.710\nAnd what allows me to do\nthat is that pipe character.\n\n108\n00:05:48.710 --> 00:05:51.490\nBy taking the output from\nthat first command and\n\n109\n00:05:51.490 --> 00:05:54.040\ndumping it into the second command.\n\n110\n00:05:54.040 --> 00:05:56.550\nAnd we'll see much more that says\nwe go through the formatting.\n\n111\n00:05:56.550 --> 00:06:00.550\nWe're actually gonna be using this pipe\nquite often because most commands have\n\n112\n00:06:00.550 --> 00:06:02.330\na default output.\n\n113\n00:06:02.330 --> 00:06:04.750\nA way that they spit out\nthe information onto your screen,\n\n114\n00:06:04.750 --> 00:06:06.920\nand that's not always the way we want it.\n\n115\n00:06:06.920 --> 00:06:09.040\nIt might not be the easiest to read,\n\n116\n00:06:09.040 --> 00:06:11.320\nit might not be showing us\nthe information that we want.\n\n117\n00:06:11.320 --> 00:06:15.730\nBecause there's usually a default set of\nproperties that these commands return, but\n\n118\n00:06:15.730 --> 00:06:18.240\nit's not necessarily\nall of the properties.\n\n119\n00:06:18.240 --> 00:06:21.630\nSome properties are hidden,\nsome properties are not shown by default.\n\n120\n00:06:21.630 --> 00:06:25.410\nJust the most common ones, and we'll talk\nmuch more about that concept later on.\n\n121\n00:06:25.410 --> 00:06:29.085\nThat's gonna be a big concept when we\nstart realizing that everything in\n\n122\n00:06:29.085 --> 00:06:31.080\nPowerShell is an object.\n\n123\n00:06:31.080 --> 00:06:35.460\nAnd it has properties and methods, or\nit can have properties and methods and\n\n124\n00:06:35.460 --> 00:06:37.970\nfunctions, so\nwhat we'll come back to that concept.\n\n125\n00:06:37.970 --> 00:06:41.310\nBut for now, we see what a pipeline is.\n\n126\n00:06:41.310 --> 00:06:45.320\nSo it's that up and down character and\nit allows me to take the results of one\n\n127\n00:06:45.320 --> 00:06:49.230\ncommand and\nfeed them into another command, all right?\n\n128\n00:06:49.230 --> 00:06:53.890\nNow, when we do this,\nwe're actually creating a new variable.\n\n129\n00:06:53.890 --> 00:06:57.000\nIn this process in the background,\n\n130\n00:06:57.000 --> 00:07:02.180\nthere is a variable called dollar\nsign underscore that gets created.\n\n131\n00:07:02.180 --> 00:07:08.200\nAnd that $_ variable represents the entire\nresults from the previous command.\n\n132\n00:07:08.200 --> 00:07:12.310\nSo what is getting handed from the first\ncommand to the second command in this case\n\n133\n00:07:12.310 --> 00:07:15.230\nis represented by a $_.\n\n134\n00:07:15.230 --> 00:07:20.240\nAnd we need to know that because\nsometimes the second command\n\n135\n00:07:20.240 --> 00:07:23.270\ncan't handle a result set.\n\n136\n00:07:23.270 --> 00:07:26.840\nIt can only work on one piece of\ninformation at a time, all right?\n\n137\n00:07:26.840 --> 00:07:31.110\nWhereas the command that is used here,\nthe sort, it's expecting a list of things.\n\n138\n00:07:31.110 --> 00:07:34.830\nIt's sorts, that's what it does, I need\nmore than one thing to be able to sort.\n\n139\n00:07:34.830 --> 00:07:38.790\nI can't sort one thing, so the sort\ncommand is perfectly fine accepting\n\n140\n00:07:38.790 --> 00:07:42.970\na bulk of data from the first command and\ninputting it into that sort command,\n\n141\n00:07:42.970 --> 00:07:44.310\nthat's second command.\n\n142\n00:07:44.310 --> 00:07:46.630\nOther commands, however, can't do that.\n\n143\n00:07:46.630 --> 00:07:49.730\nThey can only work on one\npiece of data at a time.\n\n144\n00:07:49.730 --> 00:07:52.510\nThat's when the $_ becomes very handy for\nus.\n\n145\n00:07:52.510 --> 00:07:54.599\nLet me show you an example.\n\n146\n00:07:54.599 --> 00:08:01.600\nAll right, we'll use that get-service\nagain, so get-service, all right?\n\n147\n00:08:01.600 --> 00:08:03.562\nAnd I'm gonna pipe that out.\n\n148\n00:08:03.562 --> 00:08:08.881\nInto a write-host, write-host which\n\n149\n00:08:08.881 --> 00:08:14.410\nshould write to my output to my screen.\n\n150\n00:08:14.410 --> 00:08:18.680\nAll I want to see is\nthe name of the service, so\n\n151\n00:08:18.680 --> 00:08:23.830\nI'm going to do $_.name, right?\n\n152\n00:08:23.830 --> 00:08:26.676\nAnd I'm gonna go ahead and hit Enter.\n\n153\n00:08:26.676 --> 00:08:30.300\n[INAUDIBLE],\nThat's never a good day, right?\n\n154\n00:08:30.300 --> 00:08:30.906\n&gt;&gt; [INAUDIBLE].\n&gt;&gt; Yeah [LAUGH],\n\n155\n00:08:30.906 --> 00:08:32.880\nI'm bleeding all over the place here.\n\n156\n00:08:32.880 --> 00:08:37.059\nAnd the problem is this\ncommand write-host $_name,\n\n157\n00:08:37.059 --> 00:08:44.430\nwrite-host is expecting one input,\nget-service gave it a whole list of names.\n\n158\n00:08:44.430 --> 00:08:46.820\nSo it's like, wait,\nwhat name are you talking about?\n\n159\n00:08:46.820 --> 00:08:50.060\nThere's a whole bunch of them here,\nI only write one name, all right.\n\n160\n00:08:50.060 --> 00:08:53.450\nSo, what we can do is we can\nchange this up a little bit.\n\n161\n00:08:53.450 --> 00:09:01.400\nWe can use that $ to our advantage,\nwe're gonna say for each dash object.\n\n162\n00:09:03.070 --> 00:09:07.547\nAnd then within that write, oops,\n\n163\n00:09:07.547 --> 00:09:12.183\nwrite-host, if I could type here.\n\n164\n00:09:12.183 --> 00:09:14.822\nWow, I have some trouble typing,\nget my fingers back here on home row.\n\n165\n00:09:14.822 --> 00:09:19.470\nWrite-host $_.name, close curlies.\n\n166\n00:09:19.470 --> 00:09:22.720\nAnd notice those are curlies, they're\nnot parentheses, they're not brackets,\n\n167\n00:09:22.720 --> 00:09:27.880\nthey're braces I guess is the technical\nterm for my column curlies.\n\n168\n00:09:27.880 --> 00:09:35.210\nFor each, so now this, which can only\ntake one piece of input at a time.\n\n169\n00:09:35.210 --> 00:09:40.250\nI'm telling it hey, for each object\nwithin this variable, grab its name,\n\n170\n00:09:40.250 --> 00:09:44.160\nprint it out, and then go to the next\nobject in this result and set, right.\n\n171\n00:09:44.160 --> 00:09:48.100\nSo you're getting this big old list of\nthings, and I know you don't like that.\n\n172\n00:09:48.100 --> 00:09:49.760\nSo just take one at a time.\n\n173\n00:09:49.760 --> 00:09:53.340\nDo the first one, do your command,\ngo to the next one, do your command.\n\n174\n00:09:53.340 --> 00:09:55.200\nThere's many,\nmany commands that work like that,\n\n175\n00:09:55.200 --> 00:09:57.680\nI can only work with one\nset of data at a time.\n\n176\n00:09:57.680 --> 00:10:01.850\nAnd so we can just basically loop\nthrough each one of the objects\n\n177\n00:10:01.850 --> 00:10:06.250\nin that resultant set,\nbecause it's stored in that $_ and\n\n178\n00:10:06.250 --> 00:10:08.170\nI can use the four each\nto kind of loop through.\n\n179\n00:10:08.170 --> 00:10:13.310\nWe'll come back and\ntalk about loops in a little more detail\n\n180\n00:10:13.310 --> 00:10:15.680\nas we go through these episodes.\n\n181\n00:10:15.680 --> 00:10:20.420\nBut just want to give you an example\nof how this, oops, let me go ahead and\n\n182\n00:10:20.420 --> 00:10:21.250\nexecute it.\n\n183\n00:10:21.250 --> 00:10:24.640\nMake sure I'm not lying to you, that it\ndoesn't spit out a bunch of red text.\n\n184\n00:10:24.640 --> 00:10:30.060\nNotice it writes out the name, all right,\nfor each one of those services.\n\n185\n00:10:30.060 --> 00:10:33.340\nIt does AJ route, then it goes back\nto the list that gets the next one,\n\n186\n00:10:33.340 --> 00:10:38.140\nand the next one is ALG because\nit's not just ALG, right?\n\n187\n00:10:38.140 --> 00:10:39.660\nGosh, let's go way back up here.\n\n188\n00:10:42.370 --> 00:10:45.820\nIt's actually my buffer run out.\n\n189\n00:10:45.820 --> 00:10:52.008\nLet's do another get-service All right,\n\n190\n00:10:52.008 --> 00:10:55.820\nso we'll scroll back up, whoops.\n\n191\n00:10:55.820 --> 00:11:00.363\nAnd we'll see that, whoops,\nscrolled too far that time.\n\n192\n00:11:00.363 --> 00:11:02.870\nI know, now it's going to get confusing.\n\n193\n00:11:02.870 --> 00:11:07.460\nSo get-service, it just goes and\ngets all the services, ALG, remember,\n\n194\n00:11:07.460 --> 00:11:11.090\nit's not just the name that its returning,\nit's returning the name of the service but\n\n195\n00:11:11.090 --> 00:11:14.510\nalso the display name and\nthe status of the service.\n\n196\n00:11:14.510 --> 00:11:17.390\nSo when we run this loop,\nwe're saying hey,\n\n197\n00:11:17.390 --> 00:11:20.640\ngo through each one of those objects,\nwhich includes its status,\n\n198\n00:11:20.640 --> 00:11:23.540\nits name and its display name and\njust print out its name.\n\n199\n00:11:23.540 --> 00:11:25.950\nDon't worry about the status or\ndisplay name.\n\n200\n00:11:25.950 --> 00:11:28.690\nThen move to the next object and\njust give me its name.\n\n201\n00:11:28.690 --> 00:11:30.940\nDon't give me its status or display name.\n\n202\n00:11:30.940 --> 00:11:33.350\nFor that logic,\nwe could change this, right?\n\n203\n00:11:33.350 --> 00:11:36.300\nWe could go to status.\n\n204\n00:11:36.300 --> 00:11:39.320\nDoesn't do me a lot of good because I\ndon't know what service is stopped and\n\n205\n00:11:39.320 --> 00:11:40.500\nwhich one is running.\n\n206\n00:11:40.500 --> 00:11:42.450\nBut just to reiterate the point, right?\n\n207\n00:11:42.450 --> 00:11:44.660\nWe're looping through each\none of those objects,\n\n208\n00:11:44.660 --> 00:11:47.090\npulling back one of its properties and\ndisplaying it.\n\n209\n00:11:47.090 --> 00:11:50.590\nAnd then going to the next object, pulling\nback that same property and displaying it.\n\n210\n00:11:50.590 --> 00:11:54.430\nSo we're in effect executing that\none command against each and\n\n211\n00:11:54.430 --> 00:11:58.690\nevery object in that first set of\nresults from the first command.\n\n212\n00:11:58.690 --> 00:11:59.320\nMake sense?\n\n213\n00:11:59.320 --> 00:11:59.920\n&gt;&gt; Yes.\n\n214\n00:11:59.920 --> 00:12:03.105\n&gt;&gt; Okay, I like it, I know sometimes\nI can get a little twisty [LAUGH].\n\n215\n00:12:03.105 --> 00:12:06.800\n&gt;&gt; Yeah, because it's multiple steps\nthat you're going through, iterations.\n\n216\n00:12:06.800 --> 00:12:10.180\nBut it's kind of like, and I think we'll\nprobably see this a little bit later.\n\n217\n00:12:10.180 --> 00:12:13.918\nBut you remember in Mac when they used\nto tell you about the please excuse my\n\n218\n00:12:13.918 --> 00:12:17.495\nDear Aunt Sally when they were\ntalking about the order of operations.\n\n219\n00:12:17.495 --> 00:12:18.945\nI just kind of think about it like that,\nthat's how I do it.\n\n220\n00:12:18.945 --> 00:12:21.175\n&gt;&gt; Good, absolutely.\n\n221\n00:12:21.175 --> 00:12:23.655\nAll right, so that takes care of piping.\n\n222\n00:12:23.655 --> 00:12:26.155\nWe'll see that in\n\n223\n00:12:26.155 --> 00:12:29.175\nthe majority of the commands that we\nuse throughout the rest of the week.\n\n224\n00:12:29.175 --> 00:12:33.325\nBecause it's very common to me to\ntake the results of one command and\n\n225\n00:12:33.325 --> 00:12:34.950\nfeed it into the next command.\n\n226\n00:12:34.950 --> 00:12:39.520\nAnd that's what makes PowerShell so\npowerful if you'll excuse the pun.\n\n227\n00:12:39.520 --> 00:12:42.607\nMuch more powerful than my good old CLI,\nmy black and\n\n228\n00:12:42.607 --> 00:12:45.377\nwhite command prompt\ndidn't work like that.\n\n229\n00:12:45.377 --> 00:12:47.500\nWith PowerShell,\neverything is an object and\n\n230\n00:12:47.500 --> 00:12:51.030\nthey can pipe those results from one\ncommand to another, so it's fantastic.\n\n231\n00:12:52.540 --> 00:12:56.910\nAll right, next thing we're gonna\ntalk about Is formatting, right?\n\n232\n00:12:58.550 --> 00:13:01.416\nBecause we sometimes need to manipulate,\nas I said,\n\n233\n00:13:01.416 --> 00:13:03.272\nthe results that are coming back.\n\n234\n00:13:03.272 --> 00:13:05.330\nWe want to change the way\nit appears on our screen.\n\n235\n00:13:05.330 --> 00:13:09.469\nWe want to see information that's\nmaybe not being shown, and\n\n236\n00:13:09.469 --> 00:13:13.290\nthat's where my formatting\ntechniques come in.\n\n237\n00:13:13.290 --> 00:13:14.820\nAnd I'll keep it simple here first.\n\n238\n00:13:14.820 --> 00:13:19.090\nWe might go throw in some extra ones later\non throughout the week as we film these,\n\n239\n00:13:19.090 --> 00:13:25.430\nbut there's really three big\nones that we're gonna deal with.\n\n240\n00:13:25.430 --> 00:13:30.430\nThere's the format table,\nthe format list, and format wide.\n\n241\n00:13:30.430 --> 00:13:33.090\nThose are our three big format options.\n\n242\n00:13:33.090 --> 00:13:37.050\nSo let's start by just running\na simple command Get-Service,\n\n243\n00:13:37.050 --> 00:13:40.140\nwhich we've seen now several times,\none of my favorites.\n\n244\n00:13:40.140 --> 00:13:41.538\nEasy to type, nice easy results.\n\n245\n00:13:41.538 --> 00:13:44.188\n&gt;&gt; But there's a lot of information\nthere and it's the same each time, so\n\n246\n00:13:44.188 --> 00:13:47.079\nyou can see how it compares to different\nformats that will be looking at here.\n\n247\n00:13:47.079 --> 00:13:48.750\n&gt;&gt; Exactly.\n&gt;&gt; So it works, yeah.\n\n248\n00:13:48.750 --> 00:13:49.905\n&gt;&gt; Great logic, I like it.\n\n249\n00:13:49.905 --> 00:13:51.452\n&gt;&gt; [LAUGH]\n&gt;&gt; All right, so\n\n250\n00:13:51.452 --> 00:13:57.122\nGet-Service returns as we saw,\nstatus name and display name, right?\n\n251\n00:13:57.122 --> 00:14:00.174\nWell, every command has its default view,\n\n252\n00:14:00.174 --> 00:14:05.710\nits default way of spitting up data, or\npresenting I should say, spitting up.\n\n253\n00:14:05.710 --> 00:14:09.290\nPresenting the data, we'll sound\na little more professional here.\n\n254\n00:14:09.290 --> 00:14:10.140\n&gt;&gt; Column nerf.\n\n255\n00:14:10.140 --> 00:14:12.695\n&gt;&gt; Columnar format, yes.\n\n256\n00:14:12.695 --> 00:14:13.763\n&gt;&gt; [LAUGH] I can't even talk today.\n\n257\n00:14:13.763 --> 00:14:16.385\n&gt;&gt; [LAUGH] It has that default\nway of displaying data.\n\n258\n00:14:16.385 --> 00:14:21.570\nGet-Service uses, well, it's really\na table to show this information.\n\n259\n00:14:21.570 --> 00:14:25.020\nYou can think of this as three\ncolumns by several rows.\n\n260\n00:14:25.020 --> 00:14:28.030\nIf you draw the little spreadsheet,\nthe lines in there,\n\n261\n00:14:28.030 --> 00:14:30.520\nyou could really envision this as a table.\n\n262\n00:14:30.520 --> 00:14:32.730\nBut that's its default view.\n\n263\n00:14:32.730 --> 00:14:37.730\nWe can add to this a property switch,\nmost command lists we can add\n\n264\n00:14:37.730 --> 00:14:42.680\nproperty and\nwe can decide what we want to see.\n\n265\n00:14:42.680 --> 00:14:45.940\nWhat if I just want the display\nname of all the servers.\n\n266\n00:14:45.940 --> 00:14:49.030\nI don't care about the actual name or\nthe status at this point,\n\n267\n00:14:49.030 --> 00:14:50.820\nI just want the display name.\n\n268\n00:14:50.820 --> 00:14:52.410\nWell, we can do that.\n\n269\n00:14:52.410 --> 00:14:58.629\nWe can do a get and let's get up\nto the top of the screen here.\n\n270\n00:14:58.629 --> 00:15:01.332\nWe do a Get-Service-Property.\n\n271\n00:15:01.332 --> 00:15:06.387\nAll right, silly me, I jumped the gun\nthere, I was trying to use that property\n\n272\n00:15:06.387 --> 00:15:10.883\nbefore we actually got to that step,\nso let me back up one, I got excited.\n\n273\n00:15:10.883 --> 00:15:14.810\nI was really getting excited about\ndisplaying these different properties.\n\n274\n00:15:14.810 --> 00:15:17.990\nSo let's first talk about\nthe three options, format wide,\n\n275\n00:15:17.990 --> 00:15:21.350\nformat table, and format list.\n\n276\n00:15:21.350 --> 00:15:26.410\nLet's try doing a few of these,\nlet's do Get-Service.\n\n277\n00:15:26.410 --> 00:15:28.060\nSo same command,\nI'll run it one more time, right.\n\n278\n00:15:28.060 --> 00:15:30.510\nShows me the status, the name,\nand the display name.\n\n279\n00:15:30.510 --> 00:15:37.203\nAnd this time, I'm gonna add a pipe and\na format-wide,\n\n280\n00:15:37.203 --> 00:15:43.490\nif I can spell, format-wide,\nand I hit Enter.\n\n281\n00:15:43.490 --> 00:15:44.880\nAnd what, wait, what?\n\n282\n00:15:44.880 --> 00:15:51.400\nIf I look at these results, right,\nall I'm seeing is the name, right?\n\n283\n00:15:51.400 --> 00:15:54.770\nAJ router,\nwe'll go back up to the top of this one.\n\n284\n00:15:56.863 --> 00:16:00.095\nWas the name of that particular service.\n\n285\n00:16:00.095 --> 00:16:04.749\nI'm not seeing the display name And\nI'm not seeing the status, right?\n\n286\n00:16:04.749 --> 00:16:07.920\nAnd that's because, format-wide by the,\n\n287\n00:16:07.920 --> 00:16:11.710\nis only able to display one property,\nall right?\n\n288\n00:16:11.710 --> 00:16:16.150\nSo format-wide is a little different\nas far as the formatting options go.\n\n289\n00:16:16.150 --> 00:16:18.220\nIt only displays one property.\n\n290\n00:16:18.220 --> 00:16:21.400\nIt can't display multiple properties.\n\n291\n00:16:21.400 --> 00:16:26.118\nEvery command has a default property,\nand that's the one it shows.\n\n292\n00:16:26.118 --> 00:16:30.460\nAnd for get-service,\nthe default property is name, and so,\n\n293\n00:16:30.460 --> 00:16:33.690\nwhen I do a format-wide,\nit just shows me the name.\n\n294\n00:16:33.690 --> 00:16:36.337\nAnd it does it in columns,\nso it doesn't take up, so\n\n295\n00:16:36.337 --> 00:16:39.001\nit doesn't have to scroll quite as far,\nall right?\n\n296\n00:16:39.001 --> 00:16:40.850\nBut that's all it's gonna show me.\n\n297\n00:16:40.850 --> 00:16:42.250\nSometimes, that's all I need.\n\n298\n00:16:42.250 --> 00:16:47.696\nI can change the number of columns there\nwith a dash columns, and I can do 3.\n\n299\n00:16:47.696 --> 00:16:50.245\nAll right, so\nnow there's much less scrolling and\n\n300\n00:16:50.245 --> 00:16:52.500\nI have three columns of names on there.\n\n301\n00:16:52.500 --> 00:16:55.110\nBut the longer names are going\nto start getting chopped off.\n\n302\n00:16:55.110 --> 00:16:57.680\nWe could even do a column one, all right.\n\n303\n00:16:57.680 --> 00:17:00.750\nAnd just display them in a single column.\n\n304\n00:17:01.830 --> 00:17:02.842\nWhich is good.\n\n305\n00:17:02.842 --> 00:17:06.850\nSo format-wide, it will take the default\nproperty and show you just that.\n\n306\n00:17:06.850 --> 00:17:09.980\nWhat if the default property\nis not the one I want?\n\n307\n00:17:09.980 --> 00:17:12.960\nBecause I don't know what XBGM is.\n\n308\n00:17:12.960 --> 00:17:16.230\nBut I want a list of services\nthat are on this machine.\n\n309\n00:17:16.230 --> 00:17:19.132\nAll right, and\nI want them in this wide view.\n\n310\n00:17:19.132 --> 00:17:20.540\nWell, we can change the property.\n\n311\n00:17:20.540 --> 00:17:24.320\nIf you don't specify a property,\nit just uses the default property of that\n\n312\n00:17:24.320 --> 00:17:27.770\nparticular cmdlet,\nwhich in this case gets service's name.\n\n313\n00:17:27.770 --> 00:17:29.100\nWell, let's change that.\n\n314\n00:17:29.100 --> 00:17:36.530\nLet's go format-wide,\nProperty, DisplayName.\n\n315\n00:17:36.530 --> 00:17:39.847\nAnd notice all of those\nI was tab auto-filling.\n\n316\n00:17:39.847 --> 00:17:43.320\nI know it keep harping on that, but\nI want to drill that to everybody.\n\n317\n00:17:43.320 --> 00:17:47.480\nNot only cmndlets autofill,\nbut parameters.\n\n318\n00:17:47.480 --> 00:17:50.400\nI think it's property,\nPRO tab sure enough it's property.\n\n319\n00:17:50.400 --> 00:17:54.970\nAll right, I think the value\nI want display name, DNS tab,\n\n320\n00:17:54.970 --> 00:17:57.174\ndisplay name it is, right?\n\n321\n00:17:57.174 --> 00:18:02.240\nGreat way to make sure you're typing it\ncorrectly and you're using a correct term.\n\n322\n00:18:02.240 --> 00:18:06.040\nSo we've changed the property from\nname to DisplayName, we'll hit enter.\n\n323\n00:18:07.050 --> 00:18:12.350\nAnd now, I'm getting the DisplayName, so\nI can see, that was Xbox game monitoring.\n\n324\n00:18:12.350 --> 00:18:15.876\nNow I know what xbgm is, right?\n\n325\n00:18:15.876 --> 00:18:17.740\nSo, just another way to look at things.\n\n326\n00:18:17.740 --> 00:18:19.390\nYeah and\ndepending on what you're trying to do,\n\n327\n00:18:19.390 --> 00:18:22.920\nif you're trying to make this for\na report, or output this to a screen and\n\n328\n00:18:22.920 --> 00:18:26.990\nyou just need the display name\nformat might work for you.\n\n329\n00:18:26.990 --> 00:18:29.150\nRemember, it only spits out one property.\n\n330\n00:18:29.150 --> 00:18:32.960\nBy default, it uses whatever default\nproperty is for that particular cmdlet.\n\n331\n00:18:32.960 --> 00:18:37.062\nI can change that with\na -property parameter.\n\n332\n00:18:37.062 --> 00:18:38.280\nAll right, let's try the next one.\n\n333\n00:18:38.280 --> 00:18:43.024\nThe next one is going to be, Format-List.\n\n334\n00:18:43.024 --> 00:18:49.409\nOkay, so there Format-List and\nlet's see what that one does.\n\n335\n00:18:49.409 --> 00:18:50.838\nMm-hm.\n\n336\n00:18:50.838 --> 00:18:51.712\nAuto scrolling.\n\n337\n00:18:51.712 --> 00:18:57.860\n[LAUGH] All right, so now each service\nhas several properties being displayed.\n\n338\n00:18:57.860 --> 00:19:01.990\nDisplay name, status,\ndependent services, name.\n\n339\n00:19:01.990 --> 00:19:06.005\nAnd so the three that we were seeing in\nthe default output in the format table\n\n340\n00:19:06.005 --> 00:19:07.340\nare right there.\n\n341\n00:19:07.340 --> 00:19:08.960\nBut now we're seeing more.\n\n342\n00:19:08.960 --> 00:19:10.051\n&gt;&gt; And what was the syntax for that?\n\n343\n00:19:10.051 --> 00:19:12.190\nThat was with the?\n&gt;&gt; This is just a format list.\n\n344\n00:19:12.190 --> 00:19:12.790\n&gt;&gt; Okay.\n&gt;&gt; Yep.\n\n345\n00:19:12.790 --> 00:19:16.480\nSo all we did, and let me go back up to,\nwell I'll just show you my last command.\n\n346\n00:19:16.480 --> 00:19:18.287\nInstead of scrolling all the way back up.\n\n347\n00:19:18.287 --> 00:19:22.020\nGet-service, pipe that\nout into a Format-List.\n\n348\n00:19:22.020 --> 00:19:27.010\nSo in the list view, whereas format wide\njust shows you the default property.\n\n349\n00:19:27.010 --> 00:19:32.810\nFormat list gives you multiple\nproperties in a list view and\n\n350\n00:19:32.810 --> 00:19:37.170\neach property on it's own line and\neach service separated by a blank line.\n\n351\n00:19:38.310 --> 00:19:38.840\nAll right.\n\n352\n00:19:38.840 --> 00:19:41.960\nSo this is one service and\nits information.\n\n353\n00:19:41.960 --> 00:19:45.780\nThis is another service and\nits information, right.\n\n354\n00:19:45.780 --> 00:19:50.870\nSo that's the default view for\nformat list.\n\n355\n00:19:50.870 --> 00:19:53.550\nIt shows us several properties.\n\n356\n00:19:55.160 --> 00:19:59.430\nBut, we don't have, maybe I don't\nwant all of those properties.\n\n357\n00:19:59.430 --> 00:20:00.720\nWhat if there are other properties?\n\n358\n00:20:00.720 --> 00:20:02.370\nAre there any properties\nthat I'm not seeing?\n\n359\n00:20:02.370 --> 00:20:07.010\n&gt;&gt; Like if I wanted to maybe even\njust cherry pick a few into a view.\n\n360\n00:20:07.010 --> 00:20:12.260\n&gt;&gt; Absolutely, like let's say you\njust wanted the display name and\n\n361\n00:20:12.260 --> 00:20:14.170\nthe service type, right?\n\n362\n00:20:14.170 --> 00:20:18.810\nWe could do a format-list property and\n\n363\n00:20:18.810 --> 00:20:21.850\nthen display name, comma and what'd I say?\n\n364\n00:20:21.850 --> 00:20:23.058\nService type.\n\n365\n00:20:25.376 --> 00:20:28.391\nSo we're starting to notice how I was tab\nauto filling through all the different\n\n366\n00:20:28.391 --> 00:20:29.690\nservice options?\n\n367\n00:20:29.690 --> 00:20:30.940\nI hit enter.\n\n368\n00:20:30.940 --> 00:20:35.970\nSame list except now it's just showing\nme two properties that I asked for.\n\n369\n00:20:35.970 --> 00:20:39.145\nRight, display name and service type.\n\n370\n00:20:39.145 --> 00:20:39.960\nWhat if we did this?\n\n371\n00:20:39.960 --> 00:20:45.150\nWhat if we did, instead of leaving\nit without property, which\n\n372\n00:20:45.150 --> 00:20:49.140\nshows me the default properties it wants\nto show me which are about six of them.\n\n373\n00:20:49.140 --> 00:20:51.220\nOr, specifying a list like Cherokee said.\n\n374\n00:20:51.220 --> 00:20:52.900\nI just want those two properties.\n\n375\n00:20:52.900 --> 00:20:54.570\nWhat if I do an asterisk of property?\n\n376\n00:20:57.060 --> 00:20:59.670\nNow you'll see there's\neven more properties,\n\n377\n00:20:59.670 --> 00:21:02.980\nthings we weren't seeing\nin that default view.\n\n378\n00:21:02.980 --> 00:21:07.480\nSo, PowerShell was actually hiding\nsome of the properties from me,\n\n379\n00:21:07.480 --> 00:21:10.160\nwhich is very important for\nus to understand.\n\n380\n00:21:10.160 --> 00:21:12.690\nWhen you might expect that\nwhen you come in here and\n\n381\n00:21:12.690 --> 00:21:17.270\nyou do a get-service format-list,\nbut that's everything, right?\n\n382\n00:21:17.270 --> 00:21:20.150\nI said, get the service and\n\n383\n00:21:20.150 --> 00:21:23.740\nshow me in a list view why would\nyou hide anything from me?\n\n384\n00:21:23.740 --> 00:21:26.290\nWell it does [LAUGH] and\nI can't tell you why.\n\n385\n00:21:26.290 --> 00:21:28.660\nI'm not Microsoft,\nI didn't write these stuff.\n\n386\n00:21:28.660 --> 00:21:30.850\nNo, but\nthere's some properties that are hidden,\n\n387\n00:21:30.850 --> 00:21:34.810\nbecause they're maybe not use\nvery often keeps the view clean.\n\n388\n00:21:34.810 --> 00:21:37.580\nThey know the most common\nproperties that are needed.\n\n389\n00:21:37.580 --> 00:21:40.680\nBut I just wanted to show you\nthat there are properties that\n\n390\n00:21:40.680 --> 00:21:45.660\naren't shown in this default view that we\ndon't see until we do that property asker.\n\n391\n00:21:46.660 --> 00:21:50.320\nNow, just because they're hidden doesn't\nmean the only way I can get to them is\n\n392\n00:21:50.320 --> 00:21:51.570\nusing that asker.\n\n393\n00:21:51.570 --> 00:21:55.371\nIf we go back to Cherokee's\none pick the couple.\n\n394\n00:21:55.371 --> 00:21:59.020\nI could one of these hidden ones\nthat we didn't see before like\n\n395\n00:22:00.711 --> 00:22:04.110\n&gt;&gt; Was displayed?\n\n396\n00:22:04.110 --> 00:22:05.790\n&gt;&gt; What's that?\n&gt;&gt; The processor\n\n397\n00:22:06.940 --> 00:22:07.770\n&gt;&gt; It was not,\n\n398\n00:22:07.770 --> 00:22:10.490\nwhere you see that\n&gt;&gt; Display name.\n\n399\n00:22:10.490 --> 00:22:16.030\n&gt;&gt; Display name were shown that was\n&gt;&gt; Service name was not, right?\n\n400\n00:22:17.350 --> 00:22:18.290\nSo let's do that one.\n\n401\n00:22:18.290 --> 00:22:20.723\nLet's do service name.\n\n402\n00:22:20.723 --> 00:22:22.321\n[SOUND] All right, so\n\n403\n00:22:22.321 --> 00:22:26.739\nnow I can see service name\nreturn with each one of those.\n\n404\n00:22:26.739 --> 00:22:31.603\nIf we do go back to the original command\nwhere I didn't add any properties\n\n405\n00:22:31.603 --> 00:22:34.530\nService name is not one of them.\n\n406\n00:22:34.530 --> 00:22:37.490\nSo I can surely take\neven hidden properties.\n\n407\n00:22:37.490 --> 00:22:40.440\nAll right, I can choose what\nproperties I'm wanna display.\n\n408\n00:22:40.440 --> 00:22:44.580\nIt was just a comma separated list,\n-Property and then,\n\n409\n00:22:44.580 --> 00:22:47.570\nthe names of the properties\nthat I want to see.\n\n410\n00:22:47.570 --> 00:22:50.780\n&gt;&gt; It's so nice to be able to\nfilter through and know this,\n\n411\n00:22:50.780 --> 00:22:54.790\nbecause if you were, I don't know, trying\nto set firewall exclusions or set up\n\n412\n00:22:54.790 --> 00:22:58.380\nrules and use power shell to do that, and\nif you think about the actual name of\n\n413\n00:22:58.380 --> 00:23:03.150\nthe firewall rule and then looking at\nthe display name or something like that.\n\n414\n00:23:03.150 --> 00:23:06.050\nIt always doesn't drive and match up so\n\n415\n00:23:06.050 --> 00:23:09.510\nit's really important to be able\nto quickly, if you can't remember,\n\n416\n00:23:09.510 --> 00:23:13.040\njust to make sure you understand\nthe differences between those names.\n\n417\n00:23:13.040 --> 00:23:16.910\n&gt;&gt; Absolutely and it's a very good reason\nto kinda take a look at some of this.\n\n418\n00:23:16.910 --> 00:23:20.710\nI was going to go back,\nbut my get service,\n\n419\n00:23:21.810 --> 00:23:26.460\nstatus is running, can't stop it,\ndoesn't show my start type.\n\n420\n00:23:26.460 --> 00:23:28.840\nWhich is another on that I typically want.\n\n421\n00:23:28.840 --> 00:23:33.450\nSo if we do a property all,\nswear to start, there is start, okay.\n\n422\n00:23:33.450 --> 00:23:34.380\n&gt;&gt; Like automatic or manual?\n\n423\n00:23:34.380 --> 00:23:37.470\n&gt;&gt; Yea, see now that's one of those\nthings that if I'm looking at services,\n\n424\n00:23:37.470 --> 00:23:38.960\nthat's what I need to see.\n\n425\n00:23:38.960 --> 00:23:41.710\nI need to see how is it configured,\nwhat is the behavior going to do?\n\n426\n00:23:41.710 --> 00:23:42.630\n&gt;&gt; Is it currently running?\n\n427\n00:23:42.630 --> 00:23:44.080\nAnd what was it set to do?\n\n428\n00:23:44.080 --> 00:23:46.280\nWas it supposed to start automatically?\n\n429\n00:23:46.280 --> 00:23:51.190\nSo let's see if we can make it better,\nget-service, and\n\n430\n00:23:51.190 --> 00:23:54.660\nwe'll pipe that out into a Format-list.\n\n431\n00:23:54.660 --> 00:23:58.635\nNow remember we learned about aliases,\nlet's take peek here.\n\n432\n00:23:58.635 --> 00:23:59.800\nGet/alias.\n\n433\n00:23:59.800 --> 00:24:01.120\n&gt;&gt; I like this one too.\n\n434\n00:24:01.120 --> 00:24:02.810\nIt's like Florida.\n\n435\n00:24:02.810 --> 00:24:03.725\n&gt;&gt; Yes, I know right.\n\n436\n00:24:03.725 --> 00:24:05.980\nGet/dash alias was a dash definition.\n\n437\n00:24:05.980 --> 00:24:07.060\n&gt;&gt; So cheesy.\n\n438\n00:24:07.060 --> 00:24:12.860\n&gt;&gt; Of a Format-list,\nand look at there, FL.\n\n439\n00:24:12.860 --> 00:24:15.450\nThey all have that FL for format list.\n\n440\n00:24:15.450 --> 00:24:17.110\nFW for format wide.\n\n441\n00:24:17.110 --> 00:24:18.310\nFT for format table.\n\n442\n00:24:18.310 --> 00:24:20.310\nWhich we have not seen yet.\n\n443\n00:24:20.310 --> 00:24:25.960\nSo I can shorten up my command\nby running get dash service.\n\n444\n00:24:25.960 --> 00:24:30.780\nType that out into a format list\ninstead of typing format dash list,\n\n445\n00:24:30.780 --> 00:24:32.690\njust FL, all right?\n\n446\n00:24:32.690 --> 00:24:40.760\nAnd then dash properties and really what\nI want to see is the Current status.\n\n447\n00:24:40.760 --> 00:24:46.240\nWhether it's supposed to be running, so\nstart, type, and then the display name.\n\n448\n00:24:46.240 --> 00:24:48.560\nBecause I don't know those coded names,\nI want the display name.\n\n449\n00:24:48.560 --> 00:24:52.290\nAll right.\n\n450\n00:24:52.290 --> 00:24:53.730\nAnd that gives me a nice list.\n\n451\n00:24:53.730 --> 00:24:58.960\nI can see the status, what the start\ntype was, and what the display name is.\n\n452\n00:24:58.960 --> 00:24:59.628\nPretty cool, right?\n\n453\n00:24:59.628 --> 00:25:02.798\nAll right,\n\n454\n00:25:02.798 --> 00:25:07.320\nnow the next one I want to\nshow you is format a table\n\n455\n00:25:07.320 --> 00:25:12.100\nbecause this view, while we were able to\ncustomize it and get just what I want,\n\n456\n00:25:12.100 --> 00:25:17.050\nthe status, the start type, and the\ndisplay name, it's still a little awkward.\n\n457\n00:25:17.050 --> 00:25:18.970\nAt least for this particular scenario,\n\n458\n00:25:18.970 --> 00:25:23.100\nI might rather see these\nLike in a table view.\n\n459\n00:25:23.100 --> 00:25:25.670\nWhich is where format\ntable comes into play.\n\n460\n00:25:25.670 --> 00:25:29.010\nWell, unfortunately,\nCherokee is giving me that signal.\n\n461\n00:25:29.010 --> 00:25:30.710\nAnd, we've got the table to go through.\n\n462\n00:25:30.710 --> 00:25:32.975\nAnd, that's going to\ninclude auto size and.\n\n463\n00:25:32.975 --> 00:25:35.405\nAnd wrap and grouping and sorting.\n\n464\n00:25:35.405 --> 00:25:37.725\nWhich I'm not going to be able to do\nit justice in five minutes, Cherokee.\n\n465\n00:25:37.725 --> 00:25:41.435\n&gt;&gt; That's ok, we can come back with\na part, this is a new topic, so\n\n466\n00:25:41.435 --> 00:25:43.295\nthis will be our part two for\nthis one, right?\n\n467\n00:25:43.295 --> 00:25:44.595\n&gt;&gt; Yep.\n&gt;&gt; Yeah, ok, all right.\n\n468\n00:25:44.595 --> 00:25:45.705\nLet's do that then.\n\n469\n00:25:45.705 --> 00:25:48.695\nBut thank you for your time here, and\nthank you for joining us as well, but\n\n470\n00:25:48.695 --> 00:25:51.625\nwe are go ahead and\ncome back with a part two for you.\n\n471\n00:25:51.625 --> 00:25:53.045\nI've been your host, Cherokee Boose.\n\n472\n00:25:53.045 --> 00:25:53.745\n&gt;&gt; And I'm Mike Rodrick.\n\n473\n00:25:53.745 --> 00:25:56.842\n&gt;&gt; See you next time here at, ITProTV.\n\n474\n00:25:56.842 --> 00:26:02.773\n[MUSIC]\n\n475\n00:26:02.773 --> 00:26:04.790\n&gt;&gt; Thank you for watching TVPROTV\n\n",
          "vimeoId": "237942912"
        },
        {
          "description": "In this episode, Mike and Cherokee look at using command piping in PowerShell. They also look at formatting cmdlet output.",
          "length": "1812",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-2-piping_and_formatting_pt_2-101017-PGM.00_29_56_08.Still008.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-2-piping_and_formatting_pt_2-101017-PGM.00_29_56_08.Still008-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-4-2-piping_and_formatting_pt_2-101017-PGM.00_29_56_08.Still008-sm.jpg",
          "title": "Piping and Formatting Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.115 --> 00:00:05.065\nWelcome to ITPROTV,\nI'm your host Don Pezet.\n\n2\n00:00:05.065 --> 00:00:10.727\n&gt;&gt; [CROSSTALK]\n&gt;&gt; You're watching ITPRO.TV.\n\n3\n00:00:10.727 --> 00:00:13.953\n[SOUND] Welcome back to\nyour PowerShell Theories.\n\n4\n00:00:13.953 --> 00:00:15.800\nI'm your show host, Cherokee Boose.\n\n5\n00:00:15.800 --> 00:00:20.300\nThis is a continuation, in the last show,\nwe looked at piping and formatting.\n\n6\n00:00:20.300 --> 00:00:23.740\nBut, there were still a few formatting\noptions that we wanted to explore.\n\n7\n00:00:23.740 --> 00:00:26.910\nSo back with us today in studios,\nwe have Mr. Mike Rodrick.\n\n8\n00:00:26.910 --> 00:00:27.860\nHow's it going today Mike?\n\n9\n00:00:27.860 --> 00:00:30.240\n&gt;&gt; Fantastic, Cherokee,\nthanks for having me back.\n\n10\n00:00:30.240 --> 00:00:36.000\nAnd, yeah, we left off with hit\nFormat-List and Format-Wide, right?\n\n11\n00:00:36.000 --> 00:00:41.630\nWe left Format-Table as the cliffhanger,\nso we are back to do that.\n\n12\n00:00:41.630 --> 00:00:42.710\nAnd Format-Table actually,\n\n13\n00:00:42.710 --> 00:00:46.930\nhas a few more options that we can do\nwith it, which is pretty cool as well.\n\n14\n00:00:46.930 --> 00:00:49.400\nSo let's take a look at that one more,\njust jump right back in.\n\n15\n00:00:49.400 --> 00:00:51.650\nWe can take a look at my screen here, and\n\n16\n00:00:51.650 --> 00:00:55.950\njust like the other commands,\nthe Format-List and the Format-Wide,\n\n17\n00:00:55.950 --> 00:00:59.630\nwe'll stick with Git Service, so\nwe can keep the display output similar.\n\n18\n00:00:59.630 --> 00:01:02.350\nSo we can compare the results,\nright, apples to apples.\n\n19\n00:01:02.350 --> 00:01:08.590\nSo Git-Service and this time we'll do\npipe that into a Format-Table, right?\n\n20\n00:01:10.690 --> 00:01:12.900\nThe Format-Table, which we probably know.\n\n21\n00:01:12.900 --> 00:01:14.441\nThe alias would be?\n\n22\n00:01:14.441 --> 00:01:15.040\n&gt;&gt; FT.\n\n23\n00:01:15.040 --> 00:01:19.582\n&gt;&gt; FT, all right, as we see in our chat\nroom out there, our users are smart,\n\n24\n00:01:19.582 --> 00:01:20.325\nall right.\n\n25\n00:01:20.325 --> 00:01:21.191\n&gt;&gt; Super clever.\n\n26\n00:01:21.191 --> 00:01:22.017\n&gt;&gt; Very clever.\n\n27\n00:01:22.017 --> 00:01:25.205\n&gt;&gt; [LAUGH]\n&gt;&gt; So if we look at the results,\n\n28\n00:01:25.205 --> 00:01:29.100\nall right, as I scroll back up and\nfind the top.\n\n29\n00:01:29.100 --> 00:01:35.130\nWe see a status name and\ndisplay name, wait a second Michael.\n\n30\n00:01:35.130 --> 00:01:39.125\nThat looks a lawful lot\nlike if you just did\n\n31\n00:01:39.125 --> 00:01:45.110\nGet-Service and if you think they\nlook similar, you would be correct.\n\n32\n00:01:45.110 --> 00:01:48.590\nBecause the default output for\nGet-Service is\n\n33\n00:01:48.590 --> 00:01:52.580\ntable view because it makes the most\nsense for the data that's being spit out.\n\n34\n00:01:52.580 --> 00:01:57.395\nIn fact, a lot of the commandlets use\nformat table as their default output,\n\n35\n00:01:57.395 --> 00:02:01.698\nbecause it's got column headers and\nthen lists of values, right?\n\n36\n00:02:01.698 --> 00:02:03.892\nSo it makes sense as a view for\n\n37\n00:02:03.892 --> 00:02:09.050\na lot of the outputs that we're\nlooking at if we do a Get-Process.\n\n38\n00:02:09.050 --> 00:02:13.560\nSame thing, the default view for\nthat commandlet is a table.\n\n39\n00:02:13.560 --> 00:02:18.368\nBecause it's the best way to display,\nwell, one of the easiest and best ways.\n\n40\n00:02:18.368 --> 00:02:19.691\nEasily to read, right,\n\n41\n00:02:19.691 --> 00:02:24.300\neasy readability as far as the amount\nof information that's coming back.\n\n42\n00:02:24.300 --> 00:02:27.958\nBut just because that's the default\ndoes not mean we can't Tweak\n\n43\n00:02:27.958 --> 00:02:29.231\na little bit, right?\n\n44\n00:02:29.231 --> 00:02:32.290\nAnd customize it and make it look\nlike what we want it to look like.\n\n45\n00:02:32.290 --> 00:02:36.980\nSo let's go back, Format-Table, again is\njust gonna spit out the default view.\n\n46\n00:02:36.980 --> 00:02:40.980\nBut let's add a -Property\nbecause just like format list,\n\n47\n00:02:40.980 --> 00:02:44.672\nFormat-Table can accept\nore than one property.\n\n48\n00:02:44.672 --> 00:02:49.450\nRemember, Format-Wide is the only one that\naccepts a single property and you can only\n\n49\n00:02:49.450 --> 00:02:53.268\nput one property in there, you can't do\nmultiple properties in the Format-Wide.\n\n50\n00:02:53.268 --> 00:02:54.134\nFormat-List, and\n\n51\n00:02:54.134 --> 00:02:58.910\nFormat-Table both accept lists of\nproperties that we want to display.\n\n52\n00:02:58.910 --> 00:03:03.160\nSo we can do our asterisk, right,\nwhich says, hey, show me all properties,\n\n53\n00:03:03.160 --> 00:03:07.454\nnot just the ones you feel like showing\nme, I shouldn't say feel like show me,\n\n54\n00:03:07.454 --> 00:03:08.977\nthe default properties, right.\n\n55\n00:03:08.977 --> 00:03:11.950\nWe do an asterisk and we'll see\nall of the properties, all right.\n\n56\n00:03:13.120 --> 00:03:16.937\nSo if I scroll back up, We'll see, okay,\n\n57\n00:03:16.937 --> 00:03:18.830\nthings are starting to\nlook a little different.\n\n58\n00:03:18.830 --> 00:03:23.050\nNow, I've got Name,\nI've got RequiredServices,\n\n59\n00:03:23.050 --> 00:03:27.440\nI've got CanPa,\nuseAn something over there.\n\n60\n00:03:27.440 --> 00:03:28.670\n&gt;&gt; It's like so much together.\n\n61\n00:03:28.670 --> 00:03:31.127\n&gt;&gt; Yeah,\nnot exactly sure what that says, right?\n\n62\n00:03:31.127 --> 00:03:34.927\n&gt;&gt; [LAUGH]\n&gt;&gt; It CanPassAnd, I forget what it is,\n\n63\n00:03:34.927 --> 00:03:38.930\npass and continue or something, but\nI'll show you here in a minute.\n\n64\n00:03:38.930 --> 00:03:42.297\nSo what of the idea here though is that\nwe're not seeing everything, right.\n\n65\n00:03:43.310 --> 00:03:46.830\nWhere when we did\nthe Get-Service Format-Table without\n\n66\n00:03:46.830 --> 00:03:51.590\nlisting all the properties,\nI saw the three default properties for\n\n67\n00:03:51.590 --> 00:03:56.140\nthat particular commandlet Status,\nName and Displayname.\n\n68\n00:03:56.140 --> 00:03:59.850\nBut that's not all the properties\nthere are for a service.\n\n69\n00:03:59.850 --> 00:04:01.930\nA service has several properties.\n\n70\n00:04:01.930 --> 00:04:04.900\nWe saw that when we did the Format-List,\nright?\n\n71\n00:04:04.900 --> 00:04:10.290\nIf we do a Get-Service and\nlet's just do a particular one.\n\n72\n00:04:10.290 --> 00:04:14.509\nI'll do a xbgn, just for an example, and\n\n73\n00:04:14.509 --> 00:04:18.971\nwe'll pipe that out into a Format-List for\n\n74\n00:04:18.971 --> 00:04:23.324\nthe -Property call, asterisk, right?\n\n75\n00:04:23.324 --> 00:04:25.740\nAnd you can see services\nhave several properties.\n\n76\n00:04:25.740 --> 00:04:30.254\nNot just status name and display name,\nright, that one we couldn't was\n\n77\n00:04:30.254 --> 00:04:34.842\nactually can pause and continue,\nthat was I'm trying to say over there.\n\n78\n00:04:34.842 --> 00:04:39.735\nSo there are several more properties\nthat we're seeing when we\n\n79\n00:04:39.735 --> 00:04:41.590\nuse that default view.\n\n80\n00:04:41.590 --> 00:04:47.401\nRight, we're just seeing those three,\nbut when we do the asterisk Format-Table\n\n81\n00:04:47.401 --> 00:04:53.480\nwith the asterisk, there's too many\nproperties to show in a table view.\n\n82\n00:04:53.480 --> 00:04:56.180\nThat's why the default is to\njust pick those main three,\n\n83\n00:04:56.180 --> 00:05:00.120\nthe normal three that we need to see, and\nhide the rest of them from us, because it\n\n84\n00:05:00.120 --> 00:05:05.200\ndoesn't all fit on my screen, and\nif I try to do all it doesn't fit either.\n\n85\n00:05:05.200 --> 00:05:09.100\nThere are some ways we can help with that,\nbut before we get into there,\n\n86\n00:05:09.100 --> 00:05:10.798\nlet's do our cherry picking.\n\n87\n00:05:10.798 --> 00:05:15.185\nJust like what Cherokee said\nearlier with our other commandlets,\n\n88\n00:05:15.185 --> 00:05:17.784\nit'll list off possible properties.\n\n89\n00:05:17.784 --> 00:05:20.699\nLet's say we want for our table, but\n\n90\n00:05:20.699 --> 00:05:26.248\nwe'll do the same thing we did that\nfirst time with our Format-List,\n\n91\n00:05:26.248 --> 00:05:32.020\nwe'll do status, start-up type,\nand display name, all right.\n\n92\n00:05:32.020 --> 00:05:36.679\nSo instead of doing an asterisk,\nwe'll do a format table with status.\n\n93\n00:05:36.679 --> 00:05:42.579\nWhen I say start type and display name.\n\n94\n00:05:45.833 --> 00:05:46.980\nAnd there we go.\n\n95\n00:05:46.980 --> 00:05:52.340\nStill in the table view, all right,\nas I scroll back up to the top, still\n\n96\n00:05:52.340 --> 00:05:58.220\nin table view, but now I've changed what\ncolumns are being displayed in my table.\n\n97\n00:05:58.220 --> 00:06:00.682\nSo we can definitely cherry pick and\n\n98\n00:06:00.682 --> 00:06:05.041\nwe can list just the properties\nthat we want to see, all right.\n\n99\n00:06:05.041 --> 00:06:10.700\nAs we start adding more and more\nproperties, we run into a space issue.\n\n100\n00:06:10.700 --> 00:06:14.320\nAnd that's when we're gonna need\nthings like AutoSize and Wrap.\n\n101\n00:06:14.320 --> 00:06:17.540\nThese are two properties that\nI can add to these commands\n\n102\n00:06:17.540 --> 00:06:20.480\nto try to help fit it on the screen.\n\n103\n00:06:20.480 --> 00:06:23.370\nSo let's take a look, well,\nfirst let me tell you this,\n\n104\n00:06:23.370 --> 00:06:26.453\nwhen the way PowerShell will\nwork with this Format-Table.\n\n105\n00:06:26.453 --> 00:06:30.644\nIs it will try to fit\neverything on the screen,\n\n106\n00:06:30.644 --> 00:06:34.845\nit will truncate certain\ncolumns if it has to.\n\n107\n00:06:34.845 --> 00:06:39.071\nIn other words, it will show you\nlike part of the display name and\n\n108\n00:06:39.071 --> 00:06:44.082\nthen just the dot dot dot, the little\nellipsis dots cause any of those more,\n\n109\n00:06:44.082 --> 00:06:48.932\nI just can't fit it in this column,\nit will try to show you those, but it,\n\n110\n00:06:48.932 --> 00:06:54.101\nthe Format-Table command assumes that\nthe order you list the properties in,\n\n111\n00:06:54.101 --> 00:06:56.280\nis also the order of important.\n\n112\n00:06:56.280 --> 00:07:00.490\nSo in other words, the first one you list,\nlike in here, in my case,\n\n113\n00:07:00.490 --> 00:07:02.920\nstatus is what I listed first.\n\n114\n00:07:02.920 --> 00:07:05.530\nIt assumes that's the most\nimportant property, so,\n\n115\n00:07:05.530 --> 00:07:06.820\nit's gonna try to fit that one.\n\n116\n00:07:06.820 --> 00:07:10.930\nAnd what I'll do is it'll try to fit\neach one until it runs out of room and\n\n117\n00:07:10.930 --> 00:07:13.670\nthen it will truncate the last one.\n\n118\n00:07:13.670 --> 00:07:15.110\n&gt;&gt; I never even notice that.\n\n119\n00:07:15.110 --> 00:07:16.198\n&gt;&gt; Yeah.\n&gt;&gt; That is so cool.\n\n120\n00:07:16.198 --> 00:07:19.249\n&gt;&gt; It tries, it says they're\nprobably putting them in the order\n\n121\n00:07:19.249 --> 00:07:22.191\nthat they want and\nI won't truncate it until I just have to.\n\n122\n00:07:22.191 --> 00:07:26.522\nAnd then those last columns are the ones\nthat suffer from the lack of resolution or\n\n123\n00:07:26.522 --> 00:07:28.360\nthe lack of width in my show.\n\n124\n00:07:28.360 --> 00:07:30.888\nThey're gonna get truncated or\nthey'll get hidden all together.\n\n125\n00:07:30.888 --> 00:07:35.650\nIt will just say, it used to give me\nan error, I don't see that error anymore.\n\n126\n00:07:35.650 --> 00:07:37.350\nUsed to be when you did a Format-Table,\n\n127\n00:07:37.350 --> 00:07:40.980\nyou listed out seven properties,\nthey're not gonna fit on the screen.\n\n128\n00:07:40.980 --> 00:07:43.090\nWhat it would do is it'd show\nyou the first three or four,\n\n129\n00:07:43.090 --> 00:07:46.640\nwhatever could fit on the screen,\nand then it would tell you, hey,\n\n130\n00:07:46.640 --> 00:07:48.940\nhad to leave off some of the properties.\n\n131\n00:07:48.940 --> 00:07:50.941\nBut again,\nit starts from the back of the list.\n\n132\n00:07:50.941 --> 00:07:53.543\nBecause it says the ones you\ntyped first are important to you,\n\n133\n00:07:53.543 --> 00:07:55.444\nthe last one you type\nis the least important,\n\n134\n00:07:55.444 --> 00:07:58.164\nthat's the one I'm gonna drop off\nTo try to fit it on the screen.\n\n135\n00:07:58.164 --> 00:08:00.441\nSo just something to keep\nin the back of your mind,\n\n136\n00:08:00.441 --> 00:08:02.190\nyou might wanna rearrange the order.\n\n137\n00:08:02.190 --> 00:08:04.390\nIf you're doing a format table and\n\n138\n00:08:04.390 --> 00:08:07.060\nit's chopping off one of your columns-\n&gt;&gt; And\n\n139\n00:08:07.060 --> 00:08:08.686\nthat's the information\nyou need to know [LAUGH].\n\n140\n00:08:08.686 --> 00:08:10.330\n&gt;&gt; Yes, and\nyou're getting the dot dot dot,\n\n141\n00:08:10.330 --> 00:08:14.180\nyou can't see the rest of that darn\ndisplay name or dependent service.\n\n142\n00:08:14.180 --> 00:08:15.750\nPut that column in first of the list.\n\n143\n00:08:15.750 --> 00:08:19.720\nAnd it'll display that column fully and\nchop off one of the other columns.\n\n144\n00:08:19.720 --> 00:08:24.900\nNow we can use autosize and\nwrap along with this.\n\n145\n00:08:24.900 --> 00:08:30.365\nAutosize says I'm gonna make the column\nas wide as the data requires.\n\n146\n00:08:30.365 --> 00:08:33.090\nAnd it's kind of like doing, if you're\nfamiliar with a lot of spreadsheet\n\n147\n00:08:33.090 --> 00:08:36.050\nprograms where you\ndouble-click on the divider.\n\n148\n00:08:36.050 --> 00:08:37.277\n&gt;&gt; And just snap to that.\n\n149\n00:08:37.277 --> 00:08:39.999\n&gt;&gt; It'll automatically move based on the\nsize of the data that's in there to make\n\n150\n00:08:39.999 --> 00:08:41.680\nsure everything is being displayed.\n\n151\n00:08:41.680 --> 00:08:42.555\nSame concept here.\n\n152\n00:08:42.555 --> 00:08:45.870\nIt'll make the column as wide\nas the largest bit of data in\n\n153\n00:08:45.870 --> 00:08:47.690\nthat particular column.\n\n154\n00:08:47.690 --> 00:08:49.120\nThat's what autosize does.\n\n155\n00:08:50.520 --> 00:08:54.130\nWhich can be handy when you\nrun into a situation where\n\n156\n00:08:54.130 --> 00:08:58.290\nit's not displaying all of a column but\nthere's still room left for some reason.\n\n157\n00:08:58.290 --> 00:09:02.120\nLike if you put the biggest\nproperty first, or I'm sorry,\n\n158\n00:09:02.120 --> 00:09:06.653\nif you put the biggest property\ntowards the end and it gets truncated.\n\n159\n00:09:06.653 --> 00:09:10.490\nYou can do autosize and\nit can try to resize that.\n\n160\n00:09:10.490 --> 00:09:13.710\nWhat they'll tell you is\nthat you should try to put\n\n161\n00:09:13.710 --> 00:09:18.380\nthe smaller values towards\nthe front of the command.\n\n162\n00:09:18.380 --> 00:09:23.400\nBecause if I put the larger\nvalues first and\n\n163\n00:09:23.400 --> 00:09:27.210\nwe do autosize, then it'll take\nup as much room as it needs.\n\n164\n00:09:27.210 --> 00:09:30.490\nWhich could end up taking half to\nthree quarters of my screen and\n\n165\n00:09:30.490 --> 00:09:32.450\nnot leave room for anything else.\n\n166\n00:09:32.450 --> 00:09:36.343\nSo what Microsoft says is put your data,\nput your property list,\n\n167\n00:09:36.343 --> 00:09:37.840\ndo your smaller ones first.\n\n168\n00:09:37.840 --> 00:09:40.920\n&gt;&gt; Essentially you'll just get\nmore readable real estate if you\n\n169\n00:09:40.920 --> 00:09:41.710\nformat it that way.\n\n170\n00:09:41.710 --> 00:09:44.470\n&gt;&gt; You can get more information on that\nscreen cuz you can get a lot of smaller\n\n171\n00:09:44.470 --> 00:09:46.670\ncolumns in the place of where you\nwould get that one bigger column.\n\n172\n00:09:46.670 --> 00:09:49.520\nBut that one bigger column might\nbe your most important column.\n\n173\n00:09:49.520 --> 00:09:50.580\nSo now we gotta say, well,\n\n174\n00:09:50.580 --> 00:09:52.760\nwait, you told me to put the biggest\ncolumns towards the end.\n\n175\n00:09:52.760 --> 00:09:55.040\nBut the biggest column is my\nmost important column and\n\n176\n00:09:55.040 --> 00:09:57.270\nI need that to be in the front,\nso which one do I do?\n\n177\n00:09:57.270 --> 00:09:58.350\n&gt;&gt; So\nI'm just gonna do whatever I wanna do.\n\n178\n00:09:58.350 --> 00:09:59.123\n&gt;&gt; Yeah, pretty much.\n\n179\n00:09:59.123 --> 00:09:59.910\n&gt;&gt; [LAUGH]\n&gt;&gt; Right, that's pretty much\n\n180\n00:09:59.910 --> 00:10:00.540\nwhat you gotta do.\n\n181\n00:10:00.540 --> 00:10:02.160\nAnd that's why I even put it in my notes.\n\n182\n00:10:02.160 --> 00:10:05.310\nResults vary, experiment,\nis what I wrote down for\n\n183\n00:10:05.310 --> 00:10:08.115\nus because that's really\nwhat you have to do.\n\n184\n00:10:08.115 --> 00:10:11.480\nIs you have to kind of play around\nwith the options and see what happens.\n\n185\n00:10:11.480 --> 00:10:12.529\nLet me see if I can,\n\n186\n00:10:12.529 --> 00:10:16.310\nI brought out of command back that\nI think is gonna get truncated.\n\n187\n00:10:16.310 --> 00:10:19.840\nThere we go, all right.\n\n188\n00:10:19.840 --> 00:10:25.095\nSo this was a get-process --name\npowershell, format as a table.\n\n189\n00:10:25.095 --> 00:10:30.910\nAnd I'm asking for the displayname,\nthe Name, the Id, the Company,\n\n190\n00:10:30.910 --> 00:10:34.980\nthe path, the Name, and the fileversion.\n\n191\n00:10:34.980 --> 00:10:37.290\nIt's a lot of information I'm\ntrying to dump out there.\n\n192\n00:10:37.290 --> 00:10:39.600\nAnd what we'll see is,\nthere's actually no displayname?\n\n193\n00:10:39.600 --> 00:10:41.700\nI'm not sure why that is the case.\n\n194\n00:10:41.700 --> 00:10:45.089\nBut there's the Name, right?\n\n195\n00:10:45.089 --> 00:10:50.453\nThere's my Id, my Company,\nand then my Path.\n\n196\n00:10:50.453 --> 00:10:53.087\nBut then my Path is so long it\ntakes up the rest of the screen and\n\n197\n00:10:53.087 --> 00:10:55.680\nthere's my little ellipses dots,\nmy dot dot dot.\n\n198\n00:10:55.680 --> 00:10:58.070\nAnd I'm not seeing Name or Fileversion.\n\n199\n00:10:58.070 --> 00:11:00.780\nAnd yes, I know I doubled up\non name just to make it so\n\n200\n00:11:00.780 --> 00:11:02.760\nthat it would get truncated on here,\nright?\n\n201\n00:11:04.050 --> 00:11:04.840\nSo that's ugly.\n\n202\n00:11:04.840 --> 00:11:07.790\nSo let's try to see if we\ncan fix this up [LAUGH].\n\n203\n00:11:07.790 --> 00:11:14.750\nLet's see if we can add a -autosize,\nright.\n\n204\n00:11:14.750 --> 00:11:16.348\nAnd didn't make a bit of difference.\n\n205\n00:11:16.348 --> 00:11:17.285\n&gt;&gt; Not much.\n&gt;&gt; Did it?\n\n206\n00:11:17.285 --> 00:11:18.232\nNo.\n&gt;&gt; [LAUGH]\n\n207\n00:11:18.232 --> 00:11:20.890\n&gt;&gt; I do wanna try this without PowerShell\n\n208\n00:11:20.890 --> 00:11:24.302\njust because I want more\nprocesses in this list.\n\n209\n00:11:28.160 --> 00:11:29.620\nThere we go.\n\n210\n00:11:29.620 --> 00:11:34.660\nAnd so definitely displayname is actually,\nmy processes don't have a displayname?\n\n211\n00:11:34.660 --> 00:11:36.000\nIt's not liking that.\n\n212\n00:11:36.000 --> 00:11:37.050\nSo let's try to fix that.\n\n213\n00:11:38.750 --> 00:11:41.160\nYou know how we could tell, right?\n\n214\n00:11:41.160 --> 00:11:42.410\nYou guys know.\n\n215\n00:11:42.410 --> 00:11:45.953\nOops, we can do a get-process.\n\n216\n00:11:45.953 --> 00:11:48.470\n&gt;&gt; And look at that default column?\n\n217\n00:11:48.470 --> 00:11:53.253\n&gt;&gt; Well, yeah, and pipe it out to a format\nlist and then -property all, right?\n\n218\n00:11:56.589 --> 00:12:00.341\nAnd, What did I just do?\n\n219\n00:12:00.341 --> 00:12:02.038\nI didn't do that right.\n\n220\n00:12:02.038 --> 00:12:09.080\nGet-process for my list, property,\nthere's a lot of properties per process.\n\n221\n00:12:09.080 --> 00:12:10.220\nSo I stopped a bit.\n\n222\n00:12:10.220 --> 00:12:18.380\nFrom here all the way up to here\nis one particular process, right.\n\n223\n00:12:18.380 --> 00:12:20.440\nThere's a lot of output and-\n&gt;&gt; [LAUGH]\n\n224\n00:12:20.440 --> 00:12:24.510\n&gt;&gt; Displayname does not seem to be one\n\n225\n00:12:24.510 --> 00:12:26.460\nof them or a lot of these processes.\n\n226\n00:12:26.460 --> 00:12:29.110\nThat makes sense, a process probably\ndidn't have a display name.\n\n227\n00:12:29.110 --> 00:12:33.030\nIt's not like a service that shows in our\nservices console or anything like that.\n\n228\n00:12:33.030 --> 00:12:34.670\nSo that makes sense.\n\n229\n00:12:34.670 --> 00:12:42.850\nBut that does not reduce our,\nDoesn't change our exercise here.\n\n230\n00:12:42.850 --> 00:12:45.810\nEven though that display doesn't\nactually have anything displayed.\n\n231\n00:12:45.810 --> 00:12:48.346\nLet's take that out, just so we can.\n\n232\n00:12:50.779 --> 00:12:52.774\nAll right, and see.\n\n233\n00:12:52.774 --> 00:12:57.190\nAll right, so now we have Name,\nId, Company, Path.\n\n234\n00:12:57.190 --> 00:13:02.943\nAnd now I'm starting to see after Path\nshould be Name again and then Fileversion.\n\n235\n00:13:02.943 --> 00:13:04.120\nYou know what, let's take out Name.\n\n236\n00:13:04.120 --> 00:13:06.101\nAnd I duplicated that just\nto make it wide enough, and\n\n237\n00:13:06.101 --> 00:13:07.930\nI think it's wide enough already.\n\n238\n00:13:07.930 --> 00:13:08.550\nLet's take that out.\n\n239\n00:13:11.079 --> 00:13:13.400\nAll right, and there we go,\nthat's a good one.\n\n240\n00:13:13.400 --> 00:13:20.080\nHere we're seeing where it's trying to\nfit everything on the screen, all right.\n\n241\n00:13:20.080 --> 00:13:24.130\nBut the header for\nthis column is just getting stacked up.\n\n242\n00:13:24.130 --> 00:13:27.750\nAnd there is the actual Fileversion,\nthe number 10.\n\n243\n00:13:27.750 --> 00:13:30.310\nSo it's showing me, but\nit's kind of stacked it up there.\n\n244\n00:13:30.310 --> 00:13:36.554\nIf I did this without the autosize,\nWhich I really don't get any change.\n\n245\n00:13:36.554 --> 00:13:39.010\nSo it really didn't help me at all.\n\n246\n00:13:39.010 --> 00:13:43.010\nLet's try adding the wrap to this thing.\n\n247\n00:13:43.010 --> 00:13:47.539\nSo we'll do a -wrap, right.\n\n248\n00:13:47.539 --> 00:13:50.220\nNow, that's an odd looking output,\nisn't it?\n\n249\n00:13:50.220 --> 00:13:55.110\n&gt;&gt; Yeah.\n&gt;&gt; Same output Name, Id, Company, Path.\n\n250\n00:13:55.110 --> 00:13:58.790\nAnd then now because I said wrap,\nthe value,\n\n251\n00:13:58.790 --> 00:14:03.840\nwhat we were seeing earlier,\nthe 10 was not the full Fileversion.\n\n252\n00:14:03.840 --> 00:14:05.540\nIt was getting truncated off.\n\n253\n00:14:05.540 --> 00:14:08.311\nNow that I've added wrap,\nit's wrapping that text,\n\n254\n00:14:08.311 --> 00:14:10.370\nalmost like you would in a spreadsheet.\n\n255\n00:14:10.370 --> 00:14:14.380\nYou have to make that cell really tall\nto kinda wrap all the data in there.\n\n256\n00:14:14.380 --> 00:14:18.460\nSo that's what its doing,\nis it's wrapping that to try to fit it\n\n257\n00:14:18.460 --> 00:14:23.110\nin what little space it has left,\nall right.\n\n258\n00:14:23.110 --> 00:14:30.680\nIf we combine autosize and\nwrap, It doesn't help me.\n\n259\n00:14:30.680 --> 00:14:32.550\nIt still doesn't help me.\n\n260\n00:14:32.550 --> 00:14:36.092\nAnd this is the frustrating part about\nworking with these autosize and wraps.\n\n261\n00:14:36.092 --> 00:14:41.570\nTry autosize, try wrap, try them both and\nsee how they work together.\n\n262\n00:14:41.570 --> 00:14:43.480\nSometimes it'll get you what you need.\n\n263\n00:14:43.480 --> 00:14:45.450\nSometimes there's just no way.\n\n264\n00:14:45.450 --> 00:14:47.130\nWe're asking it to do a lot.\n\n265\n00:14:47.130 --> 00:14:50.460\nHow can it fit all of this\ninformation on the screen?\n\n266\n00:14:50.460 --> 00:14:53.550\nThere's just only so\nmuch real estate we have.\n\n267\n00:14:53.550 --> 00:14:55.620\nSo let's see if we can make\nit look a little better.\n\n268\n00:14:55.620 --> 00:14:59.880\nLet's try rearranging the orders\nto show you how that works.\n\n269\n00:14:59.880 --> 00:15:05.252\nLike if we take Fileversion out and\nwe put it in front of Path,\n\n270\n00:15:10.247 --> 00:15:13.498\nNow we'll see that Fileversion is\nno longer getting truncated, but\n\n271\n00:15:13.498 --> 00:15:14.347\nPath is, right.\n\n272\n00:15:15.640 --> 00:15:18.820\nSo there you see what I was talking\nabout there with the whole,\n\n273\n00:15:18.820 --> 00:15:21.570\nthe order of the properties.\n\n274\n00:15:21.570 --> 00:15:27.595\nIt'll fit as many as it can in there,\nbut it's gonna truncate the last one.\n\n275\n00:15:27.595 --> 00:15:30.120\nSo we put the most important\nones in the front and\n\n276\n00:15:30.120 --> 00:15:31.810\nwe put the less important\nones towards the end.\n\n277\n00:15:31.810 --> 00:15:35.830\nBecause we know those are gonna be\nthe ones that are gonna get truncated.\n\n278\n00:15:35.830 --> 00:15:37.820\nAnd even with the autosize and\n\n279\n00:15:37.820 --> 00:15:43.030\nthe wrap, there's still just no way\nit can fit that information on there.\n\n280\n00:15:43.030 --> 00:15:46.610\nAnd I will tell you, too, that I've seen\ndifferent results with different commands.\n\n281\n00:15:46.610 --> 00:15:48.050\nI can't think of any\noff the top of my head.\n\n282\n00:15:48.050 --> 00:15:55.380\nLike here it did wrap that Fileversion,\nbut here it did not wrap the Path, why?\n\n283\n00:15:55.380 --> 00:15:57.377\nYeah, your guess is as good as mine.\n\n284\n00:15:57.377 --> 00:16:01.525\nYou're just gonna have to do a little\ntrial and error with that Reduce\n\n285\n00:16:01.525 --> 00:16:05.101\nthe number of columns that\nyou're getting in your output,\n\n286\n00:16:05.101 --> 00:16:09.247\nif you don't necessarily need the file\nversion or you can run path and\n\n287\n00:16:09.247 --> 00:16:12.990\nget some parameters in one command,\nsome in another.\n\n288\n00:16:12.990 --> 00:16:14.330\nOr heck, go with a list, right.\n\n289\n00:16:14.330 --> 00:16:16.103\nIf we change this from table to list,\n\n290\n00:16:20.778 --> 00:16:24.302\nI need to take out wrap and\nauto size cuz those don't work with list.\n\n291\n00:16:28.925 --> 00:16:32.643\nAnd oops, I forgot my,\nI took out the format table but\n\n292\n00:16:32.643 --> 00:16:34.720\nforgot to put in format list.\n\n293\n00:16:37.360 --> 00:16:38.500\nAll right?\n\n294\n00:16:38.500 --> 00:16:40.628\nNow I can see all that data,\nwith no problem.\n\n295\n00:16:40.628 --> 00:16:43.994\nBecause I'm not trying to fit it in\ncolumns, I'm doing each property on it's\n\n296\n00:16:43.994 --> 00:16:46.912\nown line, and I got plenty of room for\neach one of those properties.\n\n297\n00:16:46.912 --> 00:16:49.741\n&gt;&gt; So just being flexible and\nbeing able to evolve with your output and\n\n298\n00:16:49.741 --> 00:16:51.890\nusing a little bit of common sense there,\nright?\n\n299\n00:16:51.890 --> 00:16:52.960\n&gt;&gt; Exactly right.\n\n300\n00:16:52.960 --> 00:16:54.700\nAnd it'll thin out\nthe properties you need.\n\n301\n00:16:54.700 --> 00:16:58.090\nIf you can't, rearrange the properties,\nmaybe that will help.\n\n302\n00:16:58.090 --> 00:17:01.920\nAdd the dash auto size,\nadd the dash wrap, that might help.\n\n303\n00:17:01.920 --> 00:17:06.670\nIf not, maybe think about doing it in\na list view instead of a table view.\n\n304\n00:17:06.670 --> 00:17:08.460\nSo, experiment around with that.\n\n305\n00:17:08.460 --> 00:17:10.950\nRemember, try to put\nthe smaller ones first.\n\n306\n00:17:10.950 --> 00:17:13.560\nBut also put the most\nimportant ones first,\n\n307\n00:17:13.560 --> 00:17:18.550\nwhich is not always synonymous\nwith working together.\n\n308\n00:17:18.550 --> 00:17:22.240\n&gt;&gt; So Mike what if we have a lot of\ninformation that's being output, and\n\n309\n00:17:22.240 --> 00:17:25.870\nwe want to organize or sort in some way.\n\n310\n00:17:25.870 --> 00:17:27.130\n&gt;&gt; Such a great question.\n\n311\n00:17:27.130 --> 00:17:27.880\nWe can do that.\n\n312\n00:17:27.880 --> 00:17:29.950\nWe saw some sorting earlier, right.\n\n313\n00:17:29.950 --> 00:17:35.510\nI did a sort object when we\ndid the first pipe example.\n\n314\n00:17:35.510 --> 00:17:37.010\nWe'll do it again.\n\n315\n00:17:37.010 --> 00:17:39.255\nAnd we're also gonna\ntake a look at grouping.\n\n316\n00:17:39.255 --> 00:17:43.210\nCuz grouping is something\nI can use with tables that\n\n317\n00:17:43.210 --> 00:17:45.850\nactually can put out\nsome pretty neat results.\n\n318\n00:17:45.850 --> 00:17:47.340\nLet's take a look at that one first.\n\n319\n00:17:47.340 --> 00:17:49.364\nSo let's do a get-service.\n\n320\n00:17:50.570 --> 00:17:55.280\nAll right, and we're gonna pipe\nthat out into a format table ft.\n\n321\n00:17:55.280 --> 00:17:57.330\nI'm gonna go and use the alias.\n\n322\n00:17:57.330 --> 00:17:59.810\nSo format table dash property.\n\n323\n00:17:59.810 --> 00:18:03.650\nI'm just gonna bring one of\nthose last commands back.\n\n324\n00:18:03.650 --> 00:18:05.680\nI'm sitting here typing all this out.\n\n325\n00:18:05.680 --> 00:18:08.950\nAnd let's just get for properties.\n\n326\n00:18:08.950 --> 00:18:14.754\nLet's go with, what did they say?\n\n327\n00:18:14.754 --> 00:18:17.145\nDisplay name. [CROSSTALK] &gt;&gt; Display name,\nstart type, status.\n\n328\n00:18:17.145 --> 00:18:19.206\n&gt;&gt; We determine, I'm sorry,\nI am gonna back,\n\n329\n00:18:19.206 --> 00:18:20.913\nI'm gonna change back to Get Service.\n\n330\n00:18:20.913 --> 00:18:22.113\nCuz I know Get Service doesn't\nhave that display name.\n\n331\n00:18:22.113 --> 00:18:24.705\n[CROSSTALK]\n&gt;&gt; Doesn't have that display name, got it.\n\n332\n00:18:24.705 --> 00:18:28.671\n&gt;&gt; All right, there we go, so\nnow we can jump to the end of the line.\n\n333\n00:18:28.671 --> 00:18:32.511\nThat's function right arrow just\nin case you guys didn't know that.\n\n334\n00:18:32.511 --> 00:18:37.350\nWe'll do DisplayName, startup type or\n\n335\n00:18:37.350 --> 00:18:40.820\nStartType, and Status.\n\n336\n00:18:40.820 --> 00:18:45.110\nAnd just to familiarize yourself with\nwhat this output looks like normally.\n\n337\n00:18:45.110 --> 00:18:47.150\nOops, there are no services PowerShell.\n\n338\n00:18:48.180 --> 00:18:49.791\nSometimes when you use your history,\n\n339\n00:18:49.791 --> 00:18:53.226\nyou really should read the command that\nyou're trying to repeat, it will help.\n\n340\n00:18:53.226 --> 00:18:56.420\n[LAUGH] All right there we go.\n\n341\n00:18:56.420 --> 00:18:58.960\nSo here I've done a format table.\n\n342\n00:18:58.960 --> 00:19:00.802\nI've changed the order a little bit on it.\n\n343\n00:19:00.802 --> 00:19:04.206\nDisplay name, and then start up type,\nand then status but\n\n344\n00:19:04.206 --> 00:19:08.664\nsame information as being displayed,\nit's just a Get-Service, right?\n\n345\n00:19:08.664 --> 00:19:13.739\nBut now, I wanna try to group\nthis together in some meaningful\n\n346\n00:19:13.739 --> 00:19:21.370\nway because if I wanna try to determine\nwhich one of these are currently running?\n\n347\n00:19:21.370 --> 00:19:22.780\nWell, this one's running.\n\n348\n00:19:22.780 --> 00:19:23.740\nThis one's running.\n\n349\n00:19:26.360 --> 00:19:27.590\nThis one's running, and\nthis one's running.\n\n350\n00:19:27.590 --> 00:19:29.030\nWe could do a sort.\n\n351\n00:19:29.030 --> 00:19:32.290\nIf we sorted it by status,\nthat would actually work.\n\n352\n00:19:32.290 --> 00:19:34.679\nBut let me show you\nthe grouping option first,\n\n353\n00:19:34.679 --> 00:19:36.707\ncause I just like the grouping option.\n\n354\n00:19:36.707 --> 00:19:37.657\nI think you will, too.\n\n355\n00:19:37.657 --> 00:19:38.850\n[LAUGH] So well, We'll do a-\n\n356\n00:19:38.850 --> 00:19:39.915\n&gt;&gt; [LAUGH]\n&gt;&gt; Dash.\n\n357\n00:19:39.915 --> 00:19:40.919\n&gt;&gt; Have you been talking to Adam?\n\n358\n00:19:40.919 --> 00:19:42.455\n&gt;&gt; Yeah\n&gt;&gt; [LAUGH]\n\n359\n00:19:42.455 --> 00:19:44.480\n&gt;&gt; We'll do a dash group by.\n\n360\n00:19:44.480 --> 00:19:46.080\nAnd then whatever we wanna group it by.\n\n361\n00:19:46.080 --> 00:19:49.318\nIn this case, status.\n\n362\n00:19:49.318 --> 00:19:55.960\nNow weird thing, of all the things,\nThis does not tab autofill.\n\n363\n00:19:55.960 --> 00:19:59.240\nWhen you do a group by,\nI start tab autofilling, and\n\n364\n00:19:59.240 --> 00:20:01.250\nI get some really strange things.\n\n365\n00:20:01.250 --> 00:20:03.450\nIt really starts going\nthrough the directories.\n\n366\n00:20:03.450 --> 00:20:04.230\n&gt;&gt; Yeah.\n\n367\n00:20:04.230 --> 00:20:05.530\n&gt;&gt; It's very odd.\n\n368\n00:20:05.530 --> 00:20:10.198\nIf I put the first two letters for\nstatus and tab autofill,\n\n369\n00:20:10.198 --> 00:20:13.970\nI'll get again strange options so\njust be aware that for\n\n370\n00:20:13.970 --> 00:20:19.730\nsome reason GroupBy does not use\nthe tab autofill the way we expect to.\n\n371\n00:20:19.730 --> 00:20:22.480\nSo, I'm just gonna type status and hit it.\n\n372\n00:20:23.922 --> 00:20:26.690\nAll right,\nagain when we look at the results,\n\n373\n00:20:26.690 --> 00:20:31.020\nlet me scroll back up to\nthe top of my command.\n\n374\n00:20:31.020 --> 00:20:33.490\nWe can make sense of this and\nsee what's going on.\n\n375\n00:20:36.070 --> 00:20:40.080\nScroll, scroll, scroll, scroll, scroll,\nscroll, scroll, when you group it it takes\n\n376\n00:20:40.080 --> 00:20:44.780\nup a lot more space cuz you get a lot of\nblank lines in here, all right here we go.\n\n377\n00:20:44.780 --> 00:20:46.120\nSo group by status.\n\n378\n00:20:46.120 --> 00:20:49.340\nSo here status stopped, and then I've got\n\n379\n00:20:49.340 --> 00:20:53.890\nthe information about those services that\nhave a stop status, that's pretty cool.\n\n380\n00:20:53.890 --> 00:20:55.430\nStatus running.\n\n381\n00:20:55.430 --> 00:20:58.100\nAnd here's the services that are running.\n\n382\n00:20:58.100 --> 00:21:02.230\nWell, I thought, wait,\nhere's another status stopped.\n\n383\n00:21:02.230 --> 00:21:03.980\nHere's another status running.\n\n384\n00:21:03.980 --> 00:21:06.110\nHere's a few more stopped.\n\n385\n00:21:06.110 --> 00:21:07.140\nHere's a couple running.\n\n386\n00:21:07.140 --> 00:21:10.420\nSo what the heck is this\nGroupBy actually doing?\n\n387\n00:21:11.430 --> 00:21:13.410\nIt's doing exactly what\nit's supposed to do.\n\n388\n00:21:13.410 --> 00:21:14.803\nIt is grouping them.\n\n389\n00:21:14.803 --> 00:21:16.362\n&gt;&gt; Stopped, running and stopped.\n\n390\n00:21:16.362 --> 00:21:20.300\n&gt;&gt; But well,\nno it's not sorting them first.\n\n391\n00:21:20.300 --> 00:21:22.700\nAll right?\nIf we go back to the original command\n\n392\n00:21:22.700 --> 00:21:26.040\nwithout the GroupBuy, here,\nlet's take a look at this.\n\n393\n00:21:26.040 --> 00:21:27.580\nI've got this kind of memorized,\n\n394\n00:21:27.580 --> 00:21:30.310\nyou can help me scroll back up and\nshow you guys here.\n\n395\n00:21:31.310 --> 00:21:33.590\nGo back up to the top of this command.\n\n396\n00:21:33.590 --> 00:21:34.860\nSomewhere, there we go.\n\n397\n00:21:34.860 --> 00:21:39.910\nAll right, first two records stopped,\nthey're grouped, and\n\n398\n00:21:39.910 --> 00:21:41.920\nthen there's a running\nrecord that's grouped.\n\n399\n00:21:41.920 --> 00:21:44.710\nAnd then there's a one stopped,\nand then one running, and\n\n400\n00:21:44.710 --> 00:21:46.430\nthen five stopped, all right?\n\n401\n00:21:46.430 --> 00:21:50.460\nSo two stopped running,\nstopped running, five stopped.\n\n402\n00:21:50.460 --> 00:21:55.560\nNow when we run that command\nwithout the group by, Well\n\n403\n00:21:55.560 --> 00:21:56.930\nlet's take a look at the results here.\n\n404\n00:21:58.630 --> 00:22:00.200\nSorry my scrolling is crazy.\n\n405\n00:22:00.200 --> 00:22:04.490\nTwo stopped, one running, one stopped,\none running, five stopped.\n\n406\n00:22:04.490 --> 00:22:08.710\nSo it is grouping them if they're\ntogether already in the list.\n\n407\n00:22:08.710 --> 00:22:10.960\nLike it's grouping these two but\n\n408\n00:22:10.960 --> 00:22:13.350\nit's not adding this one cuz\nit's running not stopped.\n\n409\n00:22:13.350 --> 00:22:15.400\nSo it's creating a separate group for\nthis one.\n\n410\n00:22:15.400 --> 00:22:18.730\nBut it's a group of one because there's\nnobody around it that's also running.\n\n411\n00:22:18.730 --> 00:22:20.663\n&gt;&gt; Strange, okay.\n&gt;&gt; And then this one is grouped, and\n\n412\n00:22:20.663 --> 00:22:23.359\nthen this one is grouped, and\nthen these guys are grouped.\n\n413\n00:22:23.359 --> 00:22:28.475\nSo, the key to remember here is with the\ngroup by is you've gotta sort if first.\n\n414\n00:22:28.475 --> 00:22:33.420\n&gt;&gt; Okay.\n&gt;&gt; Then you can do a group buy.\n\n415\n00:22:33.420 --> 00:22:36.130\nIf we don't sort it and\nget all the stops together and\n\n416\n00:22:36.130 --> 00:22:39.900\nget all the runnings together,\nit can't really do the group correctly or\n\n417\n00:22:39.900 --> 00:22:45.300\nthe way we expect it to do it,\nso let's add a sort object.\n\n418\n00:22:45.300 --> 00:22:51.850\nNow, I can't dump that sort object right\nhere with the group by unfortunately.\n\n419\n00:22:51.850 --> 00:22:56.760\nThe sort object has to come before\nI output and format the data.\n\n420\n00:22:56.760 --> 00:23:01.500\nSo what we're gonna do is I'm\ngonna go back over here and\n\n421\n00:23:01.500 --> 00:23:06.670\nI'm gonna add, all right,\na little sort object.\n\n422\n00:23:06.670 --> 00:23:11.220\nJust like we did in our previous episode,\nsort-object and\n\n423\n00:23:11.220 --> 00:23:16.974\nthen I want to sort it by the property,\n-Property of status.\n\n424\n00:23:16.974 --> 00:23:19.050\nAll right?\n\n425\n00:23:19.050 --> 00:23:23.310\nKnows I can tab autofill with\nthe property but not with that GroupBy.\n\n426\n00:23:23.310 --> 00:23:25.220\nAnd then another pipe.\n\n427\n00:23:25.220 --> 00:23:26.300\nSo read this command.\n\n428\n00:23:26.300 --> 00:23:27.740\nLet it go look at the command.\n\n429\n00:23:27.740 --> 00:23:31.300\nI'm doing get service which\nreturns a list of all services.\n\n430\n00:23:31.300 --> 00:23:35.240\nAnd then I'm sorting that\nlist by the property status.\n\n431\n00:23:35.240 --> 00:23:41.540\nSo running, stops and then once it's\nsorted, then I'm taking the list and\n\n432\n00:23:41.540 --> 00:23:46.560\nI'm formatting it as a table only showing\nthe display name, the start type and\n\n433\n00:23:46.560 --> 00:23:50.770\nthe status, and\nthen I'm grouping it by status.\n\n434\n00:23:50.770 --> 00:23:51.590\nAll right?\n\n435\n00:23:51.590 --> 00:23:53.920\nSo let's try that now and\nsee if our results are any better.\n\n436\n00:23:55.714 --> 00:23:56.736\nI'm liking it already.\n\n437\n00:23:56.736 --> 00:23:59.572\nNotice how all the runnings are together,\nand\n\n438\n00:23:59.572 --> 00:24:02.126\nI've got a group header status running.\n\n439\n00:24:02.126 --> 00:24:07.690\nAll of the stops are together, and\nI've a group heading status: Stopped.\n\n440\n00:24:08.980 --> 00:24:13.650\nSo the key with the group buy,\nis to make sure you sort it first.\n\n441\n00:24:13.650 --> 00:24:16.130\nNow, in this case there were only two.\n\n442\n00:24:16.130 --> 00:24:19.970\nThe other thing you wanna think about is,\nI don't really need this column anymore.\n\n443\n00:24:19.970 --> 00:24:20.750\nDo I?\n\n444\n00:24:20.750 --> 00:24:22.699\nBecause I've got the group here.\n\n445\n00:24:22.699 --> 00:24:24.990\nStatus: Stopped.\n&gt;&gt; You're already it's implied.\n\n446\n00:24:24.990 --> 00:24:25.940\n&gt;&gt; It's implied, right?\n\n447\n00:24:25.940 --> 00:24:27.320\nEverything in this group is stopped.\n\n448\n00:24:27.320 --> 00:24:29.290\nSo this is just a waste of space.\n\n449\n00:24:29.290 --> 00:24:33.390\nI could be putting other columns,\nother data in that place.\n\n450\n00:24:33.390 --> 00:24:37.720\nSo typically when I do a group by,\nin this case group by status,\n\n451\n00:24:37.720 --> 00:24:43.290\nI will take that same property\nout of my format table.\n\n452\n00:24:43.290 --> 00:24:44.970\nI don't need to see that\non the table anymore.\n\n453\n00:24:44.970 --> 00:24:47.980\nS now when I do this,\nit's a little cleaner.\n\n454\n00:24:47.980 --> 00:24:51.350\nHere's a list of all my running services,\nand\n\n455\n00:24:51.350 --> 00:24:53.450\nwhat their start-up types is and\ntheir name.\n\n456\n00:24:53.450 --> 00:24:57.470\nHere's a list of all my stop services,\nwhat their display name is and\n\n457\n00:24:57.470 --> 00:24:59.920\nwhat their start-up type is.\n\n458\n00:24:59.920 --> 00:25:05.720\nAnd we can do that by any property, and it\ndoesn't have to be just two possibilities,\n\n459\n00:25:05.720 --> 00:25:10.618\nwhat was the other one, the start\ntype could be automatic, manual or\n\n460\n00:25:10.618 --> 00:25:15.080\nthat's just automatic.\n\n461\n00:25:15.080 --> 00:25:17.560\nSo it would be the same\nthing if we group by that.\n\n462\n00:25:17.560 --> 00:25:19.840\nNow we couldn't group it by display name,\n\n463\n00:25:19.840 --> 00:25:22.960\nbecause there shouldn't be two services\nthat have the same display name.\n\n464\n00:25:22.960 --> 00:25:26.630\nIf I was doing processes,\npossibly there might be two\n\n465\n00:25:26.630 --> 00:25:29.510\ninstances of Windows Power show running,\nsomething like that.\n\n466\n00:25:29.510 --> 00:25:33.240\nSo, with the format table,\nwe get the ability to group.\n\n467\n00:25:33.240 --> 00:25:37.870\nJust keep in mind that you're gonna\nhave to sort it before you group it.\n\n468\n00:25:37.870 --> 00:25:42.190\nAnd you see this in a lot of things like,\nI think in Office in Excel or\n\n469\n00:25:42.190 --> 00:25:47.230\nin Word, there's some of the same issues\nthat you run into if you don't sort it or\n\n470\n00:25:47.230 --> 00:25:50.330\nno, I'm thinking of access when you or\nreport some things,\n\n471\n00:25:50.330 --> 00:25:54.710\nwhen you try to do a group buy, you\nhave to do an order buy clause as well.\n\n472\n00:25:54.710 --> 00:25:57.110\nOr your group buy is just not gonna work.\n\n473\n00:25:57.110 --> 00:26:02.270\nSo, it's an expected behavior\nonce you know about it.\n\n474\n00:26:02.270 --> 00:26:04.750\nBut the first time you try to do\na group by, you go out there and\n\n475\n00:26:04.750 --> 00:26:05.560\nyou read these blogs.\n\n476\n00:26:05.560 --> 00:26:09.150\nYou're like, group by this, and you end\nup with 15 different running groups.\n\n477\n00:26:09.150 --> 00:26:11.140\nIt's like,\nwhy aren't those all in one group?\n\n478\n00:26:11.140 --> 00:26:14.950\nBecause they're not together\nin the result set, all right?\n\n479\n00:26:14.950 --> 00:26:17.390\nAnd that is how we do grouping.\n\n480\n00:26:17.390 --> 00:26:20.756\nWe could add the, well we did,\nwe sorted the objects there as well.\n\n481\n00:26:22.653 --> 00:26:25.642\nWhen we get into doing some filters,\nwe'll take a look,\n\n482\n00:26:25.642 --> 00:26:27.960\nI know that we spent\na lot of time on sorting.\n\n483\n00:26:27.960 --> 00:26:34.140\nYou saw at the command here,\nSort-Object and then -Property Status.\n\n484\n00:26:34.140 --> 00:26:37.500\nRemember, everything is\nan object in PowerShell.\n\n485\n00:26:37.500 --> 00:26:42.160\nSo when I do a Get-Service, I'm\nreturning a list of services in my mind.\n\n486\n00:26:42.160 --> 00:26:46.710\nBut what I should be thinking is that,\nI'm returning a list of objects.\n\n487\n00:26:46.710 --> 00:26:50.500\nEach one of those service is an object,\nand it has lots of properties,\n\n488\n00:26:50.500 --> 00:26:53.460\nand possibly methods, and\nother things, associated with it.\n\n489\n00:26:53.460 --> 00:26:57.110\nIt's not just the name of the service,\nwhich is a big difference from\n\n490\n00:26:57.110 --> 00:27:01.000\nwhat we're used to work with in\ncommand line, where text is just text.\n\n491\n00:27:01.000 --> 00:27:03.080\nA name of a service is just that.\n\n492\n00:27:03.080 --> 00:27:07.022\nIn PowerShell, it's an object and\nI can work with that object.\n\n493\n00:27:07.022 --> 00:27:09.674\nAnd so that's why you see the Sort-Object.\n\n494\n00:27:09.674 --> 00:27:14.609\nI don't have to say Sort-Service,\nbecause it assumes what I'm passing from\n\n495\n00:27:14.609 --> 00:27:19.392\none command to the other is an object,\nwhether it's a service, a process,\n\n496\n00:27:19.392 --> 00:27:23.001\nuser account or whatever,\nit's coming in as an object.\n\n497\n00:27:23.001 --> 00:27:24.780\nSo you can just use Sort-Object.\n\n498\n00:27:24.780 --> 00:27:30.820\nYou don't have to say sort users, or\nsort services, or anything like that.\n\n499\n00:27:30.820 --> 00:27:33.800\nAnd then any property,\nwhether it's being displayed or\n\n500\n00:27:33.800 --> 00:27:37.685\nnot can be used to sort the results.\n\n501\n00:27:39.010 --> 00:27:40.538\nLet's test that theory out.\n\n502\n00:27:40.538 --> 00:27:48.980\nLet's do a sort by Status like we've got\nhere now, and I'm gonna group by status.\n\n503\n00:27:48.980 --> 00:27:51.438\nActually this is a perfect example,\nwe've already done it.\n\n504\n00:27:51.438 --> 00:27:56.132\nStatus is no longer being displayed, but\n\n505\n00:27:56.132 --> 00:28:00.565\nI'm still using it to sort the output.\n\n506\n00:28:00.565 --> 00:28:03.187\nJust because you're using it to sort,\njust because you're using it to group by,\n\n507\n00:28:03.187 --> 00:28:04.640\ndoes not mean you have to display it.\n\n508\n00:28:04.640 --> 00:28:08.010\nIt can just be used to help sort that.\n\n509\n00:28:08.010 --> 00:28:10.940\nYou can also sort ascending or descending.\n\n510\n00:28:10.940 --> 00:28:13.750\nAscending is gonna be the default.\n\n511\n00:28:13.750 --> 00:28:17.252\nWe could do a.\n\n512\n00:28:17.252 --> 00:28:18.432\nWell let's just do this real quick.\n\n513\n00:28:18.432 --> 00:28:20.240\nLet's take a look, I'll show you that.\n\n514\n00:28:20.240 --> 00:28:28.050\nLet's do a get-help sort-object.\n\n515\n00:28:28.050 --> 00:28:29.672\nAnd here we'll see our SYNTAX.\n\n516\n00:28:29.672 --> 00:28:34.231\nSort-Object -Property and\nthen the property we're trying to sort by.\n\n517\n00:28:34.231 --> 00:28:35.610\nYou can make it case sensitive.\n\n518\n00:28:35.610 --> 00:28:37.750\nBy default, it's case insensitive.\n\n519\n00:28:37.750 --> 00:28:39.800\nYou might be in some scenarios\nwhere that's important.\n\n520\n00:28:39.800 --> 00:28:43.400\nA capital A and\na lower a don't sort the same.\n\n521\n00:28:43.400 --> 00:28:45.505\nSo you can change that\nto case insensitive.\n\n522\n00:28:45.505 --> 00:28:48.980\n-Descending, the default is ascending,\n\n523\n00:28:50.070 --> 00:28:53.710\nif you wanna change it to\ndescending just do a -Descending.\n\n524\n00:28:53.710 --> 00:28:56.230\nYou can also sort by more than one object,\nor\n\n525\n00:28:56.230 --> 00:28:59.580\nmore than one property I should say of\nthat object, like we can do a multi,\n\n526\n00:28:59.580 --> 00:29:04.170\nwhat I would call a multikey sort\nif I was in a database world.\n\n527\n00:29:04.170 --> 00:29:10.092\nWhere I might wanna sort if first\nby startup type, then by name.\n\n528\n00:29:10.092 --> 00:29:12.570\nSo that within that first\ngroup of startup types,\n\n529\n00:29:12.570 --> 00:29:15.490\nthe services are all\nsorted alphabetically.\n\n530\n00:29:15.490 --> 00:29:16.536\nIt gets a little bit tricky.\n\n531\n00:29:16.536 --> 00:29:19.075\nWe have to use what's called\na hash table to do that,\n\n532\n00:29:19.075 --> 00:29:22.538\nand I want to save that until we get\ninto a little bit more complex stuff,\n\n533\n00:29:22.538 --> 00:29:26.315\nand start looking at filters, and\nhash tables, and we will talk about that.\n\n534\n00:29:26.315 --> 00:29:31.067\nSo we'll come back around to that fact but\njust keep that in mind, we can sort by\n\n535\n00:29:31.067 --> 00:29:35.615\nmore than one column in the output,\nwe don't have to just to a single sort.\n\n536\n00:29:35.615 --> 00:29:40.088\nBut we'll save that for another day and\nI I think that, Cherokee, wraps up\n\n537\n00:29:40.088 --> 00:29:45.295\nformat table, and using the sort object,\nand group by with that format table.\n\n538\n00:29:45.295 --> 00:29:48.295\n&gt;&gt; Alright Mike, thank you for taking\nthe time to show us everything here listed\n\n539\n00:29:48.295 --> 00:29:51.535\nwith the formatting and\nsorting of the use tables.\n\n540\n00:29:51.535 --> 00:29:53.395\nAnd we're going to go ahead and\nsign off for this show.\n\n541\n00:29:53.395 --> 00:29:54.882\nI've been your host Cherokee Boose.\n\n542\n00:29:54.882 --> 00:29:55.749\n&gt;&gt; And I'm Mike Rodrick.\n\n543\n00:29:55.749 --> 00:29:58.573\n&gt;&gt; See you next time here at ITPRO.TV.\n\n544\n00:29:58.573 --> 00:30:04.482\n[MUSIC]\n\n545\n00:30:04.482 --> 00:30:08.073\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "237944153"
        },
        {
          "description": "In this episode, Mike and Cherokee look at setting the script execution policy in PowerShell. They discuss the various policies available and explain what they mean. They also look at script execution policy scope.",
          "length": "1668",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-1-script_execution_policy-101117-PGM.00_27_32_21.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-1-script_execution_policy-101117-PGM.00_27_32_21.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-1-script_execution_policy-101117-PGM.00_27_32_21.Still001-sm.jpg",
          "title": "Script Execution Policy",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:01.540\nWelcome to ITPRO.TV.\n\n2\n00:00:01.540 --> 00:00:02.820\nI'm you host Don Pezet.\n\n3\n00:00:02.820 --> 00:00:08.416\n[CROSSTALK]\n\n4\n00:00:08.416 --> 00:00:12.122\n&gt;&gt; You're watching ITPRO.TV.\n\n5\n00:00:12.122 --> 00:00:13.500\n&gt;&gt; Hello to all of our viewers out there.\n\n6\n00:00:13.500 --> 00:00:14.550\nThanks for joining us today.\n\n7\n00:00:14.550 --> 00:00:16.490\nWe got a great show in store for you.\n\n8\n00:00:16.490 --> 00:00:17.890\nI'm your show host Wes Bryan.\n\n9\n00:00:17.890 --> 00:00:22.430\nAnd in today's episode, we are continuing\nalong in our series through PowerShell.\n\n10\n00:00:22.430 --> 00:00:25.303\nJoining us back in the studios is\nnone other than Mr. Mike Rodrick.\n\n11\n00:00:25.303 --> 00:00:26.240\nMike, how are you doing today, sir?\n\n12\n00:00:26.240 --> 00:00:27.270\n&gt;&gt; Doing fantastic, Wes.\n\n13\n00:00:27.270 --> 00:00:28.160\nThanks for having me back.\n\n14\n00:00:28.160 --> 00:00:30.410\nExcited to be here as always.\n\n15\n00:00:30.410 --> 00:00:33.930\nSo as we continue this journey\nthrough what is known as PowerShell,\n\n16\n00:00:33.930 --> 00:00:38.050\nour next stop is going to be\ndealing with execution policies.\n\n17\n00:00:38.050 --> 00:00:43.118\nRight, we're working our way up to where\nwe can use PowerShell for management.\n\n18\n00:00:43.118 --> 00:00:45.439\nAnd we wanna be able to automate things,\nand\n\n19\n00:00:45.439 --> 00:00:48.843\nwe wanna be able to run scripts is\nreally what that comes down to.\n\n20\n00:00:48.843 --> 00:00:53.678\nAnd so we've gotta understand how\nPowerShell's security system works and\n\n21\n00:00:53.678 --> 00:00:57.222\nhow we set it up, or\nconfigure it, to meet our needs.\n\n22\n00:00:57.222 --> 00:01:02.480\nRight, and when we talk about security\nwith PowerShell, we wanna control scripts.\n\n23\n00:01:02.480 --> 00:01:05.640\nJust like with any scripting language,\nscripts can be dangerous.\n\n24\n00:01:05.640 --> 00:01:07.980\nPowerShell has access to everything.\n\n25\n00:01:07.980 --> 00:01:10.840\nI mean, the file system,\nthe registry, WMI,\n\n26\n00:01:10.840 --> 00:01:14.250\neverything on my operating system\nPowerShell can get access to.\n\n27\n00:01:14.250 --> 00:01:18.190\nWhich means using a script,\nI can get access to all of that,\n\n28\n00:01:18.190 --> 00:01:22.050\nmake changes, do good things,\ndo bad things, right.\n\n29\n00:01:22.050 --> 00:01:26.220\nSo we wanna make sure we're\ncontrolling the script's behavior.\n\n30\n00:01:26.220 --> 00:01:28.830\nWhether we even wanna allow\nscripts to run in the first place.\n\n31\n00:01:28.830 --> 00:01:31.580\nWe might not have any need for scripts.\n\n32\n00:01:31.580 --> 00:01:34.774\nWe also wanna try to keep our\nend users secure because,\n\n33\n00:01:34.774 --> 00:01:38.941\nnot that they're writing scripts or\ncreating malicious scripts, but\n\n34\n00:01:38.941 --> 00:01:42.290\nthey might accidentally,\nright, click on something.\n\n35\n00:01:42.290 --> 00:01:46.850\nSomebody else that's being malicious\nmight send them a link to a photo, and\n\n36\n00:01:46.850 --> 00:01:49.490\nit turns out to be a PowerShell script,\nor something like that.\n\n37\n00:01:49.490 --> 00:01:52.640\nSo they might download something,\nrun it not knowing.\n\n38\n00:01:52.640 --> 00:01:54.860\nAnd if our policy's wide open,\n\n39\n00:01:54.860 --> 00:01:58.110\nthey could actually get a script\nwhich could do any number of things.\n\n40\n00:01:58.110 --> 00:01:59.800\nHarm their computer.\n\n41\n00:01:59.800 --> 00:02:01.190\nSet up back doors.\n\n42\n00:02:01.190 --> 00:02:03.480\nAccess other resources on the network.\n\n43\n00:02:03.480 --> 00:02:04.100\nWho knows what.\n\n44\n00:02:04.100 --> 00:02:06.980\nSo we really wanna make sure we\nhave a good understanding of\n\n45\n00:02:06.980 --> 00:02:11.080\nhow we control script behavior before\nwe really start messing with scripts.\n\n46\n00:02:11.080 --> 00:02:14.600\n&gt;&gt; All right, Mike, so when it comes to\npolicy, you talk about execution policy.\n\n47\n00:02:14.600 --> 00:02:16.520\nDo we have one policy to set the stage?\n\n48\n00:02:16.520 --> 00:02:17.870\nDo we have multiple policies?\n\n49\n00:02:17.870 --> 00:02:18.950\nHow do the policies work?\n\n50\n00:02:18.950 --> 00:02:22.018\n&gt;&gt; We actually have four policies\nthat we can put in place.\n\n51\n00:02:22.018 --> 00:02:26.620\nThere's four prebuilt policies\nthat we get to choose from\n\n52\n00:02:26.620 --> 00:02:28.245\nthat control script behavior.\n\n53\n00:02:28.245 --> 00:02:32.111\nAnd let's start with the, we'll go from\nthe most restrictive down to the least\n\n54\n00:02:32.111 --> 00:02:34.777\nrestrictive, I guess,\nwould be a good way to do this.\n\n55\n00:02:34.777 --> 00:02:38.263\nSo the first one we'll talk\nabout is restricted, all right.\n\n56\n00:02:38.263 --> 00:02:42.638\nAnd restricted is actually in Windows 8.1,\nServer 2012,\n\n57\n00:02:42.638 --> 00:02:45.460\nWindows 8, restricted was the default.\n\n58\n00:02:45.460 --> 00:02:48.550\nIt's also the default in Windows 10,\nsort of.\n\n59\n00:02:48.550 --> 00:02:50.850\nI'll explain that as we go.\n\n60\n00:02:50.850 --> 00:02:54.800\nBut it does end up being the default\nbehavior even in Windows 10.\n\n61\n00:02:54.800 --> 00:02:58.590\nAnd restricted says you can\nrun commands all day long.\n\n62\n00:02:58.590 --> 00:03:02.860\nYou can open up PowerShell and you can\ntype in commands to your heart's content.\n\n63\n00:03:02.860 --> 00:03:04.080\nYou will not run any scripts.\n\n64\n00:03:04.080 --> 00:03:07.185\nI don't care where they came from,\nyou wrote them, somebody wrote them,\n\n65\n00:03:07.185 --> 00:03:08.530\nyou're not gonna run scripts.\n\n66\n00:03:08.530 --> 00:03:10.420\nScripts will not execute.\n\n67\n00:03:10.420 --> 00:03:11.790\nThat is restricted.\n\n68\n00:03:11.790 --> 00:03:12.690\nKind of makes sense, right.\n\n69\n00:03:12.690 --> 00:03:15.455\nThe word restricted tells you\neverything you need to know.\n\n70\n00:03:15.455 --> 00:03:18.280\nAnd like I said,\nthat is the default behavior.\n\n71\n00:03:18.280 --> 00:03:22.170\nSo that's what keeps us safe, or\nour end users that don't use scripts, or\n\n72\n00:03:22.170 --> 00:03:24.160\ndon't understand scripts,\nor anything like that.\n\n73\n00:03:24.160 --> 00:03:28.680\nThat prevents these Powershell scripts\nfrom running in the background, all right.\n\n74\n00:03:28.680 --> 00:03:31.893\nAlso, another, not part of the policy,\nbut something I want to throw in,\n\n75\n00:03:31.893 --> 00:03:33.580\nyou can't double-click on scripts.\n\n76\n00:03:33.580 --> 00:03:36.051\nAnd we'll talk more about that\nwhen we get to writing scripts.\n\n77\n00:03:36.051 --> 00:03:39.442\nBut the default behavior, when you\ndouble-click on one in Windows Explorer,\n\n78\n00:03:39.442 --> 00:03:41.260\nfor example, it doesn't execute.\n\n79\n00:03:41.260 --> 00:03:44.150\nIt might open up in an editor,\nif you have one, and\n\n80\n00:03:44.150 --> 00:03:46.030\nyou have your file type associations set.\n\n81\n00:03:46.030 --> 00:03:48.590\nBut it won't execute just\nby double-clicking on it.\n\n82\n00:03:48.590 --> 00:03:50.120\nAnd that's my design.\n\n83\n00:03:50.120 --> 00:03:53.370\nI have several people,\nI've had this question several times,\n\n84\n00:03:53.370 --> 00:03:55.610\nhow can I make a PowerShell\nscript run automatically?\n\n85\n00:03:55.610 --> 00:03:57.703\nI just wanna double-click on it.\n\n86\n00:03:57.703 --> 00:03:58.458\nThere is a way.\n\n87\n00:03:58.458 --> 00:04:02.672\nYou could make a shortcut that pointed to\nthe script that executed the script, and\n\n88\n00:04:02.672 --> 00:04:04.699\ndouble-click on the shortcut maybe.\n\n89\n00:04:04.699 --> 00:04:07.580\nBut now you're just trying\nto bypass security.\n\n90\n00:04:07.580 --> 00:04:11.792\nThere's a reason they don't run or\nexecute when we double-click on them.\n\n91\n00:04:11.792 --> 00:04:13.568\nAnd that's to try to keep us safe,\nall right.\n\n92\n00:04:13.568 --> 00:04:15.114\nAnd we'll see how to run scripts.\n\n93\n00:04:15.114 --> 00:04:16.333\nIt's really not difficult.\n\n94\n00:04:16.333 --> 00:04:19.477\nSo when people ask me that I\nusually just tell them, yeah,\n\n95\n00:04:19.477 --> 00:04:21.090\nit's not designed that way.\n\n96\n00:04:21.090 --> 00:04:22.180\nYou're not supposed to.\n\n97\n00:04:22.180 --> 00:04:23.390\nAnd I usually leave it at that.\n\n98\n00:04:24.550 --> 00:04:27.440\nAll right, so that's restricted, that's\nprofile number one that we could use.\n\n99\n00:04:27.440 --> 00:04:31.730\nAnd when I say running all scripts,\nI mean configuration files,\n\n100\n00:04:31.730 --> 00:04:35.180\nmodules that contain scripts,\nnone of that is going to run.\n\n101\n00:04:35.180 --> 00:04:37.910\nOnly commands that you\ncan type in the console.\n\n102\n00:04:37.910 --> 00:04:39.460\nIt could be the console or the ISE.\n\n103\n00:04:39.460 --> 00:04:42.320\nRight, it doesn't matter\nwhat host you're using.\n\n104\n00:04:42.320 --> 00:04:46.010\nBut only locally executed\ncommands are going to be run.\n\n105\n00:04:46.010 --> 00:04:49.489\nThe next one down from that,\na little less restrictive,\n\n106\n00:04:49.489 --> 00:04:52.324\nis something known as AllSigned,\nall right.\n\n107\n00:04:52.324 --> 00:04:58.110\nAnd AllSigned says, okay, I'm gonna\nallow scripts to run on one condition.\n\n108\n00:04:58.110 --> 00:05:01.130\nThey have to be digitally signed,\nall right.\n\n109\n00:05:01.130 --> 00:05:03.660\nAnd we've learned, I'm sure,\nin other classes, or\n\n110\n00:05:03.660 --> 00:05:05.890\nother episodes, or other shows.\n\n111\n00:05:05.890 --> 00:05:08.610\nAnd if you don't, go back and\ncheck some of those out.\n\n112\n00:05:08.610 --> 00:05:11.540\nBut when we talk about\na digital signature,\n\n113\n00:05:11.540 --> 00:05:14.081\nit means somebody has a certificate.\n\n114\n00:05:14.081 --> 00:05:16.310\nThey've applied their\ndigital signature to it.\n\n115\n00:05:16.310 --> 00:05:21.010\nAnd when my computer accesses that file,\nit can verify that digital signature.\n\n116\n00:05:21.010 --> 00:05:25.390\nIt can look and see if the signature\nis from somebody that we trust.\n\n117\n00:05:25.390 --> 00:05:29.270\nIn other words, if I follow that chain\nof trust on that certificate back up to\n\n118\n00:05:29.270 --> 00:05:34.350\nthe root, or an intermediate on the way,\nis that listed in my trusted roots or\n\n119\n00:05:34.350 --> 00:05:37.380\ntrusted intermediates in\nmy certificate stores?\n\n120\n00:05:37.380 --> 00:05:40.320\nAnd if it is,\nI trust the person that signed this.\n\n121\n00:05:40.320 --> 00:05:44.270\nTherefore, I trust the script,\nand I will allow it to run.\n\n122\n00:05:44.270 --> 00:05:48.740\nIf it's not signed, then your computer is\nactually gonna prompt you, or actually,\n\n123\n00:05:48.740 --> 00:05:49.660\nlet me take that back.\n\n124\n00:05:49.660 --> 00:05:52.330\nIf it's not signed,\nit's not gonna run it at all.\n\n125\n00:05:52.330 --> 00:05:53.700\nIt's gonna say, nope, it's not signed.\n\n126\n00:05:53.700 --> 00:05:58.620\nWith the policy, AllSigned, it either has\nto be signed to run or it's not gonna run.\n\n127\n00:05:58.620 --> 00:06:00.280\nSo if it's signed, it'll run.\n\n128\n00:06:00.280 --> 00:06:01.950\nIf it's not assigned, it won't run.\n\n129\n00:06:01.950 --> 00:06:04.210\nAnd it don't matter where it came from.\n\n130\n00:06:04.210 --> 00:06:09.110\nEven scripts that you write yourself\non your computer have to be signed.\n\n131\n00:06:09.110 --> 00:06:13.540\nYou will have to have a certificate, and\napply a digital signature to that script,\n\n132\n00:06:13.540 --> 00:06:17.500\nin order to execute it on your own system,\nright.\n\n133\n00:06:17.500 --> 00:06:20.680\nSo it is very restrictive in that sense.\n\n134\n00:06:20.680 --> 00:06:23.784\nThere is one downside to this.\n\n135\n00:06:23.784 --> 00:06:27.590\nWell, I won't say downside, but\nthere's one issue we have with this.\n\n136\n00:06:27.590 --> 00:06:31.100\nAnd that is the fact that\nif a script is signed, but\n\n137\n00:06:31.100 --> 00:06:34.454\nit's not by somebody\nthat is already trusted.\n\n138\n00:06:34.454 --> 00:06:37.394\nIn other words, it looks at the script,\nit sees the signature.\n\n139\n00:06:37.394 --> 00:06:41.954\nIt goes to look in the cert store, and\ndoesn't see that in the trusted roots or\n\n140\n00:06:41.954 --> 00:06:43.480\nintermediaries.\n\n141\n00:06:43.480 --> 00:06:47.100\nIt doesn't just automatically not\nrun the script, it prompts you.\n\n142\n00:06:47.100 --> 00:06:49.550\nIt says, hey, do you trust this person?\n\n143\n00:06:49.550 --> 00:06:50.480\nAnd you can say yes or no.\n\n144\n00:06:50.480 --> 00:06:54.400\nAnd if you say yes, it'll add that\ncertificate to your trusted roots, and\n\n145\n00:06:54.400 --> 00:06:56.088\nthen it'll allow that script to run.\n\n146\n00:06:56.088 --> 00:06:58.790\n&gt;&gt; And I can see the issue,\nI think, where you might be going.\n\n147\n00:06:58.790 --> 00:07:01.069\nThis is where the user might get involved.\n\n148\n00:07:01.069 --> 00:07:03.429\nI've done this before and\nyou know who you are out there.\n\n149\n00:07:03.429 --> 00:07:06.350\nYou're probably guilty of just going all\nJiminy click-its and clicking through.\n\n150\n00:07:06.350 --> 00:07:08.970\nAnd you say, I clicked yes,\nbut I meant to click no.\n\n151\n00:07:08.970 --> 00:07:12.590\nAnd you potentially have run a script that\nmight cause some kind of malicious outcome\n\n152\n00:07:12.590 --> 00:07:13.580\non your computer, right.\n\n153\n00:07:13.580 --> 00:07:16.140\n&gt;&gt; Exactly right, so now, as you said,\n\n154\n00:07:16.140 --> 00:07:18.650\nwe're putting that decision\nin the end user's hand.\n\n155\n00:07:18.650 --> 00:07:23.185\nAnd just like you said, the old Jiminy\nclick-it, I love that saying, right.\n\n156\n00:07:23.185 --> 00:07:25.490\nThey're just yes, yes, yes,\nyes, yes, I want it to run.\n\n157\n00:07:25.490 --> 00:07:28.450\nAnd now you've installed a certificate for\nsomebody you don't know or\n\n158\n00:07:28.450 --> 00:07:30.160\npossibly shouldn't have trusted.\n\n159\n00:07:30.160 --> 00:07:31.340\nThat script could be bad.\n\n160\n00:07:31.340 --> 00:07:32.414\nOther things that they've put out.\n\n161\n00:07:32.414 --> 00:07:35.811\nThey might have used that just as a way\nto get the certificate installed on\n\n162\n00:07:35.811 --> 00:07:39.263\nyour machine, and now do other malicious\nthings because now you trust all\n\n163\n00:07:39.263 --> 00:07:41.731\ncertificates that are chained\nback up to that root.\n\n164\n00:07:41.731 --> 00:07:46.770\nSo it really is a bad scenario for\nend users because you're asking them.\n\n165\n00:07:46.770 --> 00:07:48.340\nWithout the proper education,\n\n166\n00:07:48.340 --> 00:07:51.470\nthey're not gonna know what the best\nchoice is most of the time.\n\n167\n00:07:51.470 --> 00:07:54.585\nAnd hopefully they'll pick right, but\nthere's that chance that they might not.\n\n168\n00:07:54.585 --> 00:07:57.764\nSo that's the risk with AllSigned is\nthat even though it's saying, look,\n\n169\n00:07:57.764 --> 00:07:59.960\neverything has to be signed or\nI'm not gonna run it.\n\n170\n00:07:59.960 --> 00:08:02.213\nSo it's keeping me safe in that respect.\n\n171\n00:08:02.213 --> 00:08:06.045\nThe downside is,\nif it is signed it could still run,\n\n172\n00:08:06.045 --> 00:08:09.650\nbecause I can add it,\nI can make it trusted.\n\n173\n00:08:09.650 --> 00:08:13.060\nAnd so you're almost better off if\nthe script isn't signed at all,\n\n174\n00:08:13.060 --> 00:08:15.600\nthat way it won't run it and\nit won't ask them, right?\n\n175\n00:08:15.600 --> 00:08:19.220\nBut if it's signed by somebody they\ndon't know, they can choose to trust it,\n\n176\n00:08:19.220 --> 00:08:21.210\nand then execute the script just fine.\n\n177\n00:08:21.210 --> 00:08:24.339\nSo something to keep in mind there,\nhave to educate our users, right,\n\n178\n00:08:24.339 --> 00:08:28.880\non what the best decisions are if\nwe're going to use that policy.\n\n179\n00:08:28.880 --> 00:08:32.570\nThe third one is known\nas remote signed and\n\n180\n00:08:32.570 --> 00:08:36.530\nremote signed,\na little less restrictive than all signed.\n\n181\n00:08:36.530 --> 00:08:41.790\nRemote signed says all right,\nI will let you run scripts and\n\n182\n00:08:41.790 --> 00:08:46.110\nscripts that you download from\nthe internet will have to be signed.\n\n183\n00:08:46.110 --> 00:08:51.250\nBut scripts that you write locally on\nyour machine won't have to be signed.\n\n184\n00:08:51.250 --> 00:08:53.880\nSo instead of saying all\nscripts have to be signed,\n\n185\n00:08:53.880 --> 00:08:55.630\nnow local scripts don't have to be signed.\n\n186\n00:08:55.630 --> 00:08:59.300\nSo I can write my own scripts all\nday long and run them no problem.\n\n187\n00:08:59.300 --> 00:09:02.570\nIf I go out to the PowerShell gallery and\n\n188\n00:09:02.570 --> 00:09:06.227\ndownload a script from Microsoft,\nthat one's gonna have to be signed, right.\n\n189\n00:09:07.560 --> 00:09:10.000\nFor those of you hackers out there,\n\n190\n00:09:10.000 --> 00:09:13.460\nthere is some meta data in\nthe alternate data stream.\n\n191\n00:09:13.460 --> 00:09:16.410\nHow does it know that I got\nthis script from the internet?\n\n192\n00:09:16.410 --> 00:09:19.810\nWell, in the alternate data stream,\nthere is a field, one of the values,\n\n193\n00:09:19.810 --> 00:09:22.840\nI want to say, is set to a three,\nI can't remember for sure.\n\n194\n00:09:22.840 --> 00:09:25.940\nAnd that designates that it\noriginated from the internet.\n\n195\n00:09:25.940 --> 00:09:28.760\nAnd so as PowerShell is\nopening that script up it can\n\n196\n00:09:28.760 --> 00:09:32.100\nlook at that metadata in that\nalternate data stream, or ADS.\n\n197\n00:09:32.100 --> 00:09:36.180\nAnd if it sees that value it's gonna say,\nall right, this has to be signed.\n\n198\n00:09:36.180 --> 00:09:37.530\nBut if it doesn't have that value,\n\n199\n00:09:37.530 --> 00:09:40.570\nif it's not from the internet,\nit doesn't have to be signed.\n\n200\n00:09:40.570 --> 00:09:45.290\nAnd depending on how your systems\nare working, it gets a little complex,\n\n201\n00:09:45.290 --> 00:09:46.830\nway beyond the scope of this.\n\n202\n00:09:46.830 --> 00:09:51.189\nBut even like UNC paths that can sometimes\nbe flagged as from the internet, so\n\n203\n00:09:51.189 --> 00:09:53.283\nmapped drives and things like that.\n\n204\n00:09:53.283 --> 00:09:57.949\nThat potentially, something you'll have\nto test out, can be mapped as this was\n\n205\n00:09:57.949 --> 00:10:02.780\ndownloaded, it wasn't local so I'm going\nto require it to be signed, all right.\n\n206\n00:10:02.780 --> 00:10:06.722\nSo remote sign says anything that\nyou download has to be signed,\n\n207\n00:10:06.722 --> 00:10:11.104\nanything that you write locally does\nnot have to be signed, all right?\n\n208\n00:10:11.104 --> 00:10:14.696\nAnd I have to say it includes my drives,\nalso email, right?\n\n209\n00:10:14.696 --> 00:10:19.073\nIf somebody emails you a script or if\nyou get one through some type of instant\n\n210\n00:10:19.073 --> 00:10:22.072\nmessaging, type, or\nshare something like that.\n\n211\n00:10:22.072 --> 00:10:26.656\nIt can be flagged as from the internet,\nand not executed either, all right?\n\n212\n00:10:26.656 --> 00:10:33.020\n[COUGH]\nNow the, where was I going with that?\n\n213\n00:10:33.020 --> 00:10:35.910\nThis is a very common policy to\nset especially if you are gonna\n\n214\n00:10:35.910 --> 00:10:37.170\nbe working with PowerShell,\n\n215\n00:10:37.170 --> 00:10:40.660\nthis is what I set my computer too,\nbecause I am writing scripts.\n\n216\n00:10:40.660 --> 00:10:43.790\nI had already applied for\na certificate and keep a certificate,\n\n217\n00:10:43.790 --> 00:10:46.920\nthese aren't going out of the production\nor anything like that so,\n\n218\n00:10:46.920 --> 00:10:50.230\nI am not worried about\ndigitally signing them.\n\n219\n00:10:50.230 --> 00:10:53.310\nSo, this is what I set my computer to,\nthe reason,\n\n220\n00:10:53.310 --> 00:10:58.760\nlike I said there is a, where is going.\n\n221\n00:10:58.760 --> 00:11:00.940\nYou can run into an issue\nsometimes with map drive,\n\n222\n00:11:00.940 --> 00:11:04.760\nso that's something that\nyou'll have to check out.\n\n223\n00:11:04.760 --> 00:11:08.030\nThird one down is known as unrestricted,\nand\n\n224\n00:11:08.030 --> 00:11:10.770\nyou can guess what this one does, right.\n\n225\n00:11:10.770 --> 00:11:15.080\nThis is hey scripts love them,\nrun them all day long,\n\n226\n00:11:15.080 --> 00:11:16.420\nI don't care where they came from.\n\n227\n00:11:16.420 --> 00:11:17.660\nDownload them from the internet,\n\n228\n00:11:17.660 --> 00:11:21.980\nwrite them yourself, get them from a map\ndrive, have somebody email it to you.\n\n229\n00:11:21.980 --> 00:11:26.645\nIt doesn't matter, I'm gonna execute\nthis script that is unrestricted,\n\n230\n00:11:26.645 --> 00:11:29.070\nall right, it will warn you.\n\n231\n00:11:29.070 --> 00:11:33.454\nIf you download the script from\nthe internet and try to execute it.\n\n232\n00:11:33.454 --> 00:11:36.314\nIt's gonna say hey, this thing\nwas downloaded from the internet,\n\n233\n00:11:36.314 --> 00:11:38.050\nare you sure you wanna run it?\n\n234\n00:11:38.050 --> 00:11:40.680\nAnd you say yes, and it runs, all right?\n\n235\n00:11:40.680 --> 00:11:43.700\nOr if it's something that's trying to run\nin the background or pop up on you, that's\n\n236\n00:11:43.700 --> 00:11:48.510\nyour chance to say no, I didn't intend to\nrun any PowerShell scripts, what the heck?\n\n237\n00:11:48.510 --> 00:11:52.040\nBut again, as Wes was saying,\nyour Jiminy Click-its,\n\n238\n00:11:52.040 --> 00:11:55.510\nthose just click Yes-Yes-Yes to all the\ndialog boxes that pop up, and that's why\n\n239\n00:11:55.510 --> 00:12:01.190\nthey have 1500 toolbars in their browser\nbut they will allow those scripts for us.\n\n240\n00:12:01.190 --> 00:12:03.090\nSo unrestricted, no restrictions,\n\n241\n00:12:03.090 --> 00:12:06.620\nall scripts can run even ones that\nare downloaded from the internet.\n\n242\n00:12:06.620 --> 00:12:10.830\nBut it does warn you and the reason that\nI stress that it does warn you is because\n\n243\n00:12:10.830 --> 00:12:13.480\nthe next option is known as bypass.\n\n244\n00:12:13.480 --> 00:12:15.930\nIt's the same as unrestricted,\nall scripts can run,\n\n245\n00:12:15.930 --> 00:12:19.800\nwhether they're from the Internet or\nwhether they're written locally.\n\n246\n00:12:19.800 --> 00:12:23.310\nBut it doesn't warn you, all right,\nit doesn't prompt you at all.\n\n247\n00:12:23.310 --> 00:12:26.230\n&gt;&gt; Mike where would you use something like\nthat when that one seems a little bit\n\n248\n00:12:26.230 --> 00:12:28.785\ndangerous if I'm thinking\nabout no warnings, no blogs,\n\n249\n00:12:28.785 --> 00:12:30.630\nwhere would we run something like that?\n\n250\n00:12:30.630 --> 00:12:34.045\n&gt;&gt; On my machine, nah, I'm kidding\n[LAUGH] you would see this, typically,\n\n251\n00:12:34.045 --> 00:12:38.695\nlike if scripts or configuration files\nare built into a larger application.\n\n252\n00:12:38.695 --> 00:12:42.406\nAnd maybe that application has its\nown way of dealing with security.\n\n253\n00:12:42.406 --> 00:12:44.160\nSo you don't need that extra layer or\n\n254\n00:12:44.160 --> 00:12:47.625\nthat prompt that comes up that's\ngonna cause your application to fail.\n\n255\n00:12:47.625 --> 00:12:50.790\nMaybe you've written a custom line or\nbusiness application in the background,\n\n256\n00:12:50.790 --> 00:12:52.900\nit calls a PowerShell script.\n\n257\n00:12:52.900 --> 00:12:57.020\nWell, I don't need it trying\nto prompt the user or stop or\n\n258\n00:12:57.020 --> 00:12:59.230\nbreak the application if it's\ntrying to throw up a prompt.\n\n259\n00:12:59.230 --> 00:13:02.010\nSo bypass, you'll see it used, and\n\n260\n00:13:02.010 --> 00:13:04.140\nwhen scripts are built\ninto larger applications.\n\n261\n00:13:04.140 --> 00:13:07.046\nOr you got configuration files for\na program and\n\n262\n00:13:07.046 --> 00:13:09.597\nthat program has its own security model.\n\n263\n00:13:09.597 --> 00:13:13.630\nAnd we don't need, we can turn off\nthe PowerShell Security model for that.\n\n264\n00:13:13.630 --> 00:13:19.730\nAnd then undefined is the last one,\nundefined says it all, right?\n\n265\n00:13:19.730 --> 00:13:23.950\nIt's undefined and you would think, well\nthat means anything can run it's the wild,\n\n266\n00:13:23.950 --> 00:13:25.170\nwild west.\n\n267\n00:13:25.170 --> 00:13:28.230\nNo, it's actually just the opposite,\nwhen it's undefined,\n\n268\n00:13:28.230 --> 00:13:33.470\nif there's no other policy set\nundefined says I'm gonna be restricted.\n\n269\n00:13:33.470 --> 00:13:38.090\nIt's gonna default back to restricted,\nall right.\n\n270\n00:13:38.090 --> 00:13:42.640\nSo I think I said four initially because\nI'm so used to the old way of doing this.\n\n271\n00:13:42.640 --> 00:13:47.110\nYou have restricted, all sign,\nremote sign, and then unrestricted.\n\n272\n00:13:47.110 --> 00:13:51.510\nThose were the four we've always had and\nnow the two new ones, bypass and\n\n273\n00:13:51.510 --> 00:13:52.090\nundefined.\n\n274\n00:13:52.090 --> 00:13:56.150\nSo really six different policies I\ncan apply although undefined's not\n\n275\n00:13:56.150 --> 00:13:59.120\nreally a policy it's just saying\nhey there is no policy to find.\n\n276\n00:13:59.120 --> 00:14:04.340\nSo technically five policies and\na blank if you will, all right?\n\n277\n00:14:04.340 --> 00:14:08.440\nAll right, so those are the five policies,\nlet me open up PowerShell and\n\n278\n00:14:08.440 --> 00:14:11.856\nin PowerShell to figure out what\nmy current policy is set to.\n\n279\n00:14:11.856 --> 00:14:16.380\nIt's gonna be get-executionpolicy,\n\n280\n00:14:16.380 --> 00:14:21.360\nI hit Enter and\nI can see mine is restricted.\n\n281\n00:14:21.360 --> 00:14:25.191\nLike I said, I rolled my PowerShell\nback to all the defaults so\n\n282\n00:14:25.191 --> 00:14:28.152\nthis is the default behavior for\nWindows 10.\n\n283\n00:14:28.152 --> 00:14:31.345\nRemember what I said a little bit ago,\nI said that it is the default but\n\n284\n00:14:31.345 --> 00:14:33.570\nit's kind of technically a trick.\n\n285\n00:14:33.570 --> 00:14:38.870\nWell, the next thing we are gonna talk\nabout is something known as scope.\n\n286\n00:14:38.870 --> 00:14:43.530\nNot only do we have these 5/6\npolicies we can put in place,\n\n287\n00:14:43.530 --> 00:14:48.170\nwe can apply them at different scopes or\ndifferent levels, all right?\n\n288\n00:14:48.170 --> 00:14:52.318\nAnd to see the different levels\nwe're gonna use that same command,\n\n289\n00:14:52.318 --> 00:14:59.080\nGet-ExecutionPolicy parameter -list,\nand I'll hit Enter.\n\n290\n00:14:59.080 --> 00:15:02.530\nAnd there's the five scopes\nthat we have available,\n\n291\n00:15:02.530 --> 00:15:06.220\nthese are all the places that I\ncan apply execution policies.\n\n292\n00:15:06.220 --> 00:15:09.450\n&gt;&gt; Now Mike, this seems like a little\nbit of a departure from the earlier\n\n293\n00:15:09.450 --> 00:15:10.360\nway that you would set these.\n\n294\n00:15:10.360 --> 00:15:13.480\nI remember setting these up for a machine\nin a lab environment that we had to\n\n295\n00:15:13.480 --> 00:15:18.490\nsupport some end users and\nit was basically just set that execution\n\n296\n00:15:18.490 --> 00:15:21.960\npolicy and then you just named what the\npolicy was, you hit Enter and that was it.\n\n297\n00:15:21.960 --> 00:15:24.670\nSo this does seem like it's a little\nbit different than the older way\n\n298\n00:15:24.670 --> 00:15:25.210\nwe used to do it.\n\n299\n00:15:25.210 --> 00:15:29.170\n&gt;&gt; It is and I'm sad to say that I\ndon't know exactly when this crept into\n\n300\n00:15:29.170 --> 00:15:32.050\nPowerShell because I'm like you.\n\n301\n00:15:32.050 --> 00:15:36.400\nI just typically set my execution policy\nfor my machine here the way I need it.\n\n302\n00:15:36.400 --> 00:15:40.140\nAnd I've never bothered looking\nat the other things you can do\n\n303\n00:15:40.140 --> 00:15:44.100\nwith execution policy and so\nit's relatively new to me as well.\n\n304\n00:15:44.100 --> 00:15:48.203\nAnd again I don't know what version,\nif this was version four or version five,\n\n305\n00:15:48.203 --> 00:15:50.480\nthat introduced this but\nwe do have scoped.\n\n306\n00:15:50.480 --> 00:15:54.767\nAnd what this means is I can apply\nthese policies to different scopes and\n\n307\n00:15:54.767 --> 00:15:58.854\ndepending on the scenario can\ndetermine which policy's in place.\n\n308\n00:15:58.854 --> 00:16:03.705\nWe also have to worry about precedents\nbecause I can policy defined at more\n\n309\n00:16:03.705 --> 00:16:04.812\nthan one scope.\n\n310\n00:16:04.812 --> 00:16:08.949\nAnd in that case, which one is\nactually going to take precedent?\n\n311\n00:16:08.949 --> 00:16:11.639\nSo, let's talk about\nthe scopes real quick.\n\n312\n00:16:11.639 --> 00:16:12.928\nLet me just define them for us.\n\n313\n00:16:12.928 --> 00:16:16.946\nAnd then we'll start setting some\npolicies, some execution policies,\n\n314\n00:16:16.946 --> 00:16:19.430\nand we'll see what the effects are.\n\n315\n00:16:19.430 --> 00:16:20.930\nSo, out of these we'll\nstart at the bottom,\n\n316\n00:16:20.930 --> 00:16:25.528\nthis one has the local machine\nas the lowest precedent, right.\n\n317\n00:16:25.528 --> 00:16:29.890\nSo it's gonna get overwritten by all\nof these other ones if they're set.\n\n318\n00:16:29.890 --> 00:16:32.730\nIf they're undefined,\nif everything above it is undefined,\n\n319\n00:16:32.730 --> 00:16:36.470\nthen the local machine execution\npolicy will be in effect.\n\n320\n00:16:36.470 --> 00:16:39.320\nBut anything above it can override it.\n\n321\n00:16:39.320 --> 00:16:42.400\nAnd the local machine is set locally,\nright.\n\n322\n00:16:42.400 --> 00:16:44.210\nWe would set that here on this machine.\n\n323\n00:16:44.210 --> 00:16:47.610\nIt would affect everybody\nthat logs on at this machine.\n\n324\n00:16:47.610 --> 00:16:49.620\nSo if I was logged in as one user and\n\n325\n00:16:49.620 --> 00:16:53.200\nI set the local machine\npolicy to remote sign.\n\n326\n00:16:53.200 --> 00:16:56.240\nSomebody else logs on to this computer and\nopens up PowerShell and\n\n327\n00:16:56.240 --> 00:16:59.190\nchecks their policy,\nit's going to be remote sign.\n\n328\n00:16:59.190 --> 00:17:04.140\nSo local machine applies to this machine,\nall users that logon to this machine.\n\n329\n00:17:05.190 --> 00:17:08.750\nCurrent user, which has a higher\npresence in a local machine,\n\n330\n00:17:08.750 --> 00:17:11.010\napplies to the current logged on user.\n\n331\n00:17:11.010 --> 00:17:13.660\nSo if I set it there it\nwould apply to my count, but\n\n332\n00:17:13.660 --> 00:17:18.690\nif Wes logs onto my laptop it wouldn't\napply to him because it's current users.\n\n333\n00:17:18.690 --> 00:17:21.725\nSo Wes would have to set\nit while he's logged on,\n\n334\n00:17:21.725 --> 00:17:25.440\nset his current user to whatever\nhe wanted it to be, right.\n\n335\n00:17:26.590 --> 00:17:31.260\nRight above that we have process and\nprocess is an interesting one.\n\n336\n00:17:31.260 --> 00:17:34.760\nProcess is for this particular session.\n\n337\n00:17:34.760 --> 00:17:39.850\nSo I can set the execution policy\njust while I have PowerShell open.\n\n338\n00:17:39.850 --> 00:17:45.710\nOnce I close PowerShell that\npolicy is no longer in place.\n\n339\n00:17:45.710 --> 00:17:46.940\nIt's kind of an odd one.\n\n340\n00:17:46.940 --> 00:17:50.900\nYou can do this from the command line,\nyou can launch PowerShell,\n\n341\n00:17:50.900 --> 00:17:52.420\nyou can go to the command line.\n\n342\n00:17:52.420 --> 00:17:57.800\nAnd let's try a layer,\nlet's go PowerShell, whoops.\n\n343\n00:17:58.820 --> 00:18:01.700\nGosh, I forget my syntax there,\nPowershell.exe,\n\n344\n00:18:01.700 --> 00:18:04.900\nswitch execution, policy, and\nyou see me try to do my tab,\n\n345\n00:18:04.900 --> 00:18:08.233\nwell you don't see me, but\nI'm trying to do my tab auto fill.\n\n346\n00:18:08.233 --> 00:18:09.127\nDoes not work in the command prompt.\n\n347\n00:18:09.127 --> 00:18:14.876\nAnd let's set that to,\nI don't know, remote signed.\n\n348\n00:18:17.979 --> 00:18:20.521\nAll right, and so now I'm in PowerShell,\n\n349\n00:18:20.521 --> 00:18:24.626\neven though the colors didn't\nchange I launched PowerShell.exe.\n\n350\n00:18:24.626 --> 00:18:29.140\nAnd I said, hey,\nset the execution policy to remote sign.\n\n351\n00:18:29.140 --> 00:18:31.440\nSo if I do a get- execution policy,\n\n352\n00:18:31.440 --> 00:18:37.650\nyou'll see that it's currently\nremote signed, right?\n\n353\n00:18:37.650 --> 00:18:43.070\nIf I close Power Shell, okay let's do\nit this way, we'll say exit, all right?\n\n354\n00:18:43.070 --> 00:18:44.700\nAnd then I launch Power Shell again.\n\n355\n00:18:46.950 --> 00:18:49.260\nAnd I do a get -execution,\nlet's see if carry over.\n\n356\n00:18:49.260 --> 00:18:52.358\nActually, this will be a good question\ncuz I didn't close the command prompt,\n\n357\n00:18:52.358 --> 00:18:54.264\nI closed PowerShell which\nshould be my session.\n\n358\n00:18:54.264 --> 00:18:55.670\nLet's see what happens here.\n\n359\n00:18:57.950 --> 00:19:03.310\nPolicy, and\nnow you notice it's back to restricted.\n\n360\n00:19:03.310 --> 00:19:09.210\nSo that remote sign was temporary,\nonly for that one session, right?\n\n361\n00:19:09.210 --> 00:19:12.620\nAnd you can do that when you\nneed to run a script, but\n\n362\n00:19:12.620 --> 00:19:15.230\nyou don't wanna change your\npolicy on your computer itself.\n\n363\n00:19:15.230 --> 00:19:19.230\nAnd you don't want scripts to be able to\nrun, you like leaving it on all signed.\n\n364\n00:19:19.230 --> 00:19:22.650\nBut you've got one that you wrote,\nand you want to test it real quick.\n\n365\n00:19:22.650 --> 00:19:25.280\nIt's not signed yet,\ncuz it's not ready for production.\n\n366\n00:19:25.280 --> 00:19:26.910\nWell I can fire up a PowerShell session,\n\n367\n00:19:26.910 --> 00:19:30.420\nthat'll allow me to run that,\njust temporarily to test that script up.\n\n368\n00:19:30.420 --> 00:19:32.480\n&gt;&gt; And we were talking before\nthe show started, there Mike,\n\n369\n00:19:32.480 --> 00:19:33.750\nthat this is a good thing.\n\n370\n00:19:33.750 --> 00:19:35.350\nCuz there's times out there when we say,\n\n371\n00:19:35.350 --> 00:19:37.170\nhey we gotta turn off the firewall for\na second.\n\n372\n00:19:37.170 --> 00:19:39.220\nJust to see if that's\ncausing this program to fail.\n\n373\n00:19:39.220 --> 00:19:41.788\nAnd then how many people may be\nforget to turn the firewall back on.\n\n374\n00:19:41.788 --> 00:19:45.290\nSo that seems like a good safe way,\nlike you said, to test your scripts.\n\n375\n00:19:45.290 --> 00:19:48.410\nAnd then you don't have to worry\nabout I set it to unrestricted, and\n\n376\n00:19:48.410 --> 00:19:50.230\nnow things can run and\nI'm not aware of it.\n\n377\n00:19:50.230 --> 00:19:52.400\n&gt;&gt; Absolutely,\nI've done that before with PowerShell.\n\n378\n00:19:52.400 --> 00:19:56.700\nI've set my policy to unrestricted,\ngoofed around for a while, and\n\n379\n00:19:56.700 --> 00:19:57.860\nthen forget to change it back.\n\n380\n00:19:57.860 --> 00:20:00.410\nAnd it's months later when\nyou realize wow, I forgot,\n\n381\n00:20:00.410 --> 00:20:01.590\nI never set that policy back.\n\n382\n00:20:01.590 --> 00:20:05.340\nSo I definitely like this ability.\n\n383\n00:20:05.340 --> 00:20:09.830\nAll right,\nabove process comes user policy.\n\n384\n00:20:09.830 --> 00:20:11.190\nThis is group policy.\n\n385\n00:20:11.190 --> 00:20:13.310\nThis is domain based GPOs.\n\n386\n00:20:13.310 --> 00:20:17.880\nI can go to my domain controller and\nI can use a group policy to control\n\n387\n00:20:17.880 --> 00:20:21.450\nall the nodes, or a subset of nodes,\nor a subset of users.\n\n388\n00:20:21.450 --> 00:20:26.862\nI can set their execution policy\nremotely using group policy.\n\n389\n00:20:26.862 --> 00:20:31.572\nI wanna set everybody's\ngroup policy to remote sign.\n\n390\n00:20:31.572 --> 00:20:33.330\nI'm not gonna go around and\ntouch every machine.\n\n391\n00:20:33.330 --> 00:20:37.950\nI'm not gonna send out an email\nsaying hey, open up PowerShell,\n\n392\n00:20:37.950 --> 00:20:40.475\ntype in set-executionpolicy-.\n\n393\n00:20:40.475 --> 00:20:42.800\nI can use group policy to do that.\n\n394\n00:20:42.800 --> 00:20:47.410\nI can ensure that it gets applied to\nwhatever I scope the policy to in my GPA.\n\n395\n00:20:47.410 --> 00:20:50.260\nWhatever OU I link it to or what have you.\n\n396\n00:20:50.260 --> 00:20:53.000\nThis would be under the user\nportion of the group policy.\n\n397\n00:20:53.000 --> 00:21:00.110\nSo it's gonna be user settings,\npolicies, administrative templates,\n\n398\n00:21:00.110 --> 00:21:04.040\nwindows components, windows power\nshell and then it's in there.\n\n399\n00:21:05.170 --> 00:21:07.391\nCan't believe I know that\noff the top of my head.\n\n400\n00:21:07.391 --> 00:21:07.924\n&gt;&gt; Good job.\n\n401\n00:21:07.924 --> 00:21:08.530\n&gt;&gt; [LAUGH] It's crazy.\n\n402\n00:21:08.530 --> 00:21:11.610\nAnd so that's under the user portion.\n\n403\n00:21:11.610 --> 00:21:13.520\nSo just, we're familiar with group policy.\n\n404\n00:21:13.520 --> 00:21:16.790\nIf you're not make sure you go check\nout some of our awesome shows on\n\n405\n00:21:16.790 --> 00:21:18.820\nActive Directory.\n\n406\n00:21:18.820 --> 00:21:20.620\nThe user portion applies to the user.\n\n407\n00:21:20.620 --> 00:21:25.830\nSo that means if it was scoped to my user\naccount, no matter what machine I sat at,\n\n408\n00:21:25.830 --> 00:21:27.960\nthat setting would follow me around.\n\n409\n00:21:27.960 --> 00:21:31.860\nBarring any other conflicts, I'm taking\nall other group policies out of play.\n\n410\n00:21:31.860 --> 00:21:35.680\nThat policy if in effect,\nwill follow me around.\n\n411\n00:21:35.680 --> 00:21:37.910\nWhich maybe I wanna do for\nmy helpdesk users.\n\n412\n00:21:37.910 --> 00:21:41.390\nBecause I know they need Power Shell\nto do their job even if they go and\n\n413\n00:21:41.390 --> 00:21:44.170\nsit down with somebody\nin marketing's computer\n\n414\n00:21:44.170 --> 00:21:46.740\nthat doesn't normally have\nscripts allowed to run.\n\n415\n00:21:46.740 --> 00:21:49.060\nWhen they log on I need scripts to run.\n\n416\n00:21:49.060 --> 00:21:51.266\nSo I can set these in\nthe user policy of my GPO.\n\n417\n00:21:51.266 --> 00:21:55.077\nThe one right above\nthat is machine policy.\n\n418\n00:21:55.077 --> 00:21:56.653\nWhich is the same setting but\n\n419\n00:21:56.653 --> 00:22:00.900\nit's in the computer portion of\nthe GPO instead of the user portion.\n\n420\n00:22:00.900 --> 00:22:04.950\nSame place, machine or\ncomputer configuration, policies,\n\n421\n00:22:04.950 --> 00:22:09.290\nWindows settings,\nWindows components or settings.\n\n422\n00:22:09.290 --> 00:22:10.000\nGood golly.\n\n423\n00:22:10.000 --> 00:22:10.990\nAdministrative templates for\n\n424\n00:22:10.990 --> 00:22:14.120\nthose components, Windows PowerShell,\nsame thing there.\n\n425\n00:22:14.120 --> 00:22:18.522\nAnd this would apply to the machine\nthat I scoped it to do in group policy.\n\n426\n00:22:18.522 --> 00:22:22.442\nSo if I applied it to this machine it\nwouldn't matter what user logged on,\n\n427\n00:22:22.442 --> 00:22:27.020\nwhen they log onto this particular laptop,\nwhatever policy I set would be in effect.\n\n428\n00:22:28.210 --> 00:22:29.740\nAnd again this is the precedent.\n\n429\n00:22:29.740 --> 00:22:32.790\nSo I might have it defined\nat the local machine.\n\n430\n00:22:32.790 --> 00:22:34.960\nI might have defined it current user.\n\n431\n00:22:34.960 --> 00:22:37.670\nI might have it defined at user and\nmachine policy.\n\n432\n00:22:38.970 --> 00:22:41.980\nBut it's the highest one will win out.\n\n433\n00:22:41.980 --> 00:22:47.130\nIn other words if local machine was set to\nrestricted a current user was set to all\n\n434\n00:22:47.130 --> 00:22:51.910\nto remote signed, but\nthe user policy was set to all signed.\n\n435\n00:22:51.910 --> 00:22:56.260\nIf I did a get dash execution policy\nall signed is going to be the policy.\n\n436\n00:22:56.260 --> 00:23:00.577\nThe higher up in the list gets to\n\n437\n00:23:00.577 --> 00:23:05.069\noverride anything below that.\n\n438\n00:23:05.069 --> 00:23:05.792\nBut there are some issues.\n\n439\n00:23:05.792 --> 00:23:08.508\nLet's just say some room for,\nwhat is it that Adam used to like to say?\n\n440\n00:23:08.508 --> 00:23:10.004\nSome room for improvement?\n\n441\n00:23:10.004 --> 00:23:11.119\nI forget what he says.\n\n442\n00:23:11.119 --> 00:23:15.850\nThere are some issues\nthat we have with this.\n\n443\n00:23:15.850 --> 00:23:21.272\nFirst of all the precedents\nis weird the way it works.\n\n444\n00:23:21.272 --> 00:23:24.870\nIt doesn't take into account\nwhich setting is more secure.\n\n445\n00:23:24.870 --> 00:23:28.070\nIt's just straight up,\nthis policy overrides these policies.\n\n446\n00:23:28.070 --> 00:23:30.730\nWhich is normal,\nI shouldn't say that that's odd.\n\n447\n00:23:30.730 --> 00:23:32.700\nWe know that is the way\ngroup policy works.\n\n448\n00:23:32.700 --> 00:23:34.070\nBut it does kind of throw you mentally.\n\n449\n00:23:34.070 --> 00:23:35.510\nYou do have to be aware of this.\n\n450\n00:23:35.510 --> 00:23:39.036\nIn other words, if at the current user,\n\n451\n00:23:39.036 --> 00:23:44.325\nI set my policy to all sign but\nthen at the group policy level,\n\n452\n00:23:44.325 --> 00:23:48.809\nthe administrator is set\nto we're unrestricted.\n\n453\n00:23:48.809 --> 00:23:54.225\nIn the end I'm unrestricted, even\nthough my setting is more restrictive.\n\n454\n00:23:54.225 --> 00:23:57.189\nBecause user policy is applied later,\nthat's what I end up with.\n\n455\n00:23:57.189 --> 00:24:00.080\nSo it's not the most restrictive wins.\n\n456\n00:24:00.080 --> 00:24:03.970\nIt's whichever one applies last wins,\nwhether that's stronger or less secure,\n\n457\n00:24:03.970 --> 00:24:06.550\nmore secure or\nless secure than the other policies.\n\n458\n00:24:06.550 --> 00:24:08.310\nSo just keep that in mind.\n\n459\n00:24:09.720 --> 00:24:16.270\nAll right, so let's see,\nI know we are just about out of time here.\n\n460\n00:24:16.270 --> 00:24:17.741\nLet's just keep going,\nWes, what do you think?\n\n461\n00:24:17.741 --> 00:24:19.076\nSure, absolutely.\n\n462\n00:24:19.076 --> 00:24:20.217\n&gt;&gt; Yeah, so let's take a look.\n\n463\n00:24:20.217 --> 00:24:26.210\nSo we did our get-ExecutionPolicy,\nand we saw that it's restricted.\n\n464\n00:24:26.210 --> 00:24:29.250\nAnd remember I said that it's restricted,\nkind of sort of?\n\n465\n00:24:29.250 --> 00:24:32.748\nI'm gonna do a get-ExecutionPolicy,\nbecause now that we know about scopes,\n\n466\n00:24:32.748 --> 00:24:34.640\nwe're gonna add a little to this command.\n\n467\n00:24:34.640 --> 00:24:39.220\nWe're going to say,\nget -ExecutionPolicy -list.\n\n468\n00:24:39.220 --> 00:24:42.670\nAnd there I can see the policies, and\nI think I just did this a minute ago, but\n\n469\n00:24:42.670 --> 00:24:43.585\nwe'll do it again.\n\n470\n00:24:43.585 --> 00:24:47.474\nThere I can see all of the policies,\nand what they are currently set to.\n\n471\n00:24:47.474 --> 00:24:52.000\nAnd here's what I meant by,\nit's the default, sort of.\n\n472\n00:24:52.000 --> 00:24:54.300\nNotice that none of these say restricted.\n\n473\n00:24:54.300 --> 00:24:56.550\nSo why is this coming up as restricted?\n\n474\n00:24:57.660 --> 00:25:03.050\nBecause the way this works,\nif there is no policies in play,\n\n475\n00:25:03.050 --> 00:25:09.300\nit rolls back to the effective\nresults of no polices is restricted.\n\n476\n00:25:09.300 --> 00:25:13.233\nSo that's why I'm saying in some\noperating systems, 8.1, prior,\n\n477\n00:25:13.233 --> 00:25:15.175\nit was actually set to restrict it.\n\n478\n00:25:15.175 --> 00:25:20.450\nIn this one, it's undefined,\nwhich turns out to be restrict, all right?\n\n479\n00:25:20.450 --> 00:25:21.950\nBut I could still set it to restricted,\n\n480\n00:25:21.950 --> 00:25:27.913\njust to ensure that maybe something\nlower didn't overwrite it, all right?\n\n481\n00:25:29.210 --> 00:25:32.360\nAll right, so let's see what's next here.\n\n482\n00:25:32.360 --> 00:25:35.605\nSo let's take a look at how\nwe can change our policies.\n\n483\n00:25:35.605 --> 00:25:36.480\nActually, you know what, Wes?\n\n484\n00:25:36.480 --> 00:25:39.410\nLet's save that because I do\nwanna do some examples too.\n\n485\n00:25:39.410 --> 00:25:43.070\nI've got some scripts that I've written,\nsome that I've downloaded, and\n\n486\n00:25:43.070 --> 00:25:45.370\nI want to just kinda go through it and\ntest it out, right.\n\n487\n00:25:45.370 --> 00:25:47.490\nWe've talked about it,\nlet's see if it really works.\n\n488\n00:25:47.490 --> 00:25:50.310\nSo let's not try to rush through it,\nmaybe we can do it in part two?\n\n489\n00:25:50.310 --> 00:25:52.557\n&gt;&gt; Absolutely, that sounds like\na great place to stop, Mike.\n\n490\n00:25:52.557 --> 00:25:57.570\nWe've been looking at a lot of things\nin PowerShell in this episode.\n\n491\n00:25:57.570 --> 00:26:01.580\nBefore we sign out, got any final words of\nwisdom that maybe you'd like to tell them\n\n492\n00:26:01.580 --> 00:26:03.660\nwhen it comes to\nthe different policy types?\n\n493\n00:26:03.660 --> 00:26:06.410\n&gt;&gt; I do see a question in\nthe chatroom out there from Doug.\n\n494\n00:26:06.410 --> 00:26:10.630\nDoes the GPO prevent a user\nto switch to unrestricted?\n\n495\n00:26:10.630 --> 00:26:12.530\nThat no, it does not.\n\n496\n00:26:12.530 --> 00:26:15.570\nBut what the user's gonna be setting,\n\n497\n00:26:15.570 --> 00:26:20.460\nwhen you set your execution policy\nfrom your console here, right?\n\n498\n00:26:20.460 --> 00:26:23.640\nYou can set your local machine policy,\nwhich was at the bottom of the list.\n\n499\n00:26:23.640 --> 00:26:26.950\nYou can set your current user policy,\nwhich was next up.\n\n500\n00:26:26.950 --> 00:26:29.062\nAnd you can set your process policy.\n\n501\n00:26:29.062 --> 00:26:32.328\nBut you can't change the user policy or\nmachine policy, right?\n\n502\n00:26:32.328 --> 00:26:34.310\nThose are coming from a GPO.\n\n503\n00:26:34.310 --> 00:26:36.700\nSo I can't change them.\n\n504\n00:26:36.700 --> 00:26:41.712\nAnd so your question, does a GPO prevent\na user to switch to unrestricted?\n\n505\n00:26:41.712 --> 00:26:46.659\nNo, we can set all sign to\n\n506\n00:26:46.659 --> 00:26:51.110\nrestrict it at the domain level.\n\n507\n00:26:51.110 --> 00:26:56.071\nThey could set those lower ones\nat unrestricted, for example.\n\n508\n00:26:56.071 --> 00:26:58.324\nBut in the end,\nbecause of the way they're applied,\n\n509\n00:26:58.324 --> 00:26:59.887\nthe group policy one will override.\n\n510\n00:26:59.887 --> 00:27:02.293\nSo they could still set\nit to unrestricted, but\n\n511\n00:27:02.293 --> 00:27:06.581\nthe GPO-based one has a higher precedent,\nso it will override, for the most part.\n\n512\n00:27:06.581 --> 00:27:09.400\nThere is an asterisk that I\nneed to put with that one.\n\n513\n00:27:09.400 --> 00:27:12.692\nBut I'm gonn make you come back and\nwatch part two to get the answer to that.\n\n514\n00:27:12.692 --> 00:27:15.085\n&gt;&gt; All right, Mike, great place\nto go ahead and wrap this one up.\n\n515\n00:27:15.085 --> 00:27:16.945\nWe appreciate, as always, having you here.\n\n516\n00:27:16.945 --> 00:27:20.600\nAnd we appreciate, you, the viewer,\nwatching, and the people that are in chat.\n\n517\n00:27:20.600 --> 00:27:22.200\nGreat questions, keep them coming.\n\n518\n00:27:22.200 --> 00:27:23.880\nRemember, you can check\nout this course and\n\n519\n00:27:23.880 --> 00:27:25.870\nthousands of hours of other great content.\n\n520\n00:27:25.870 --> 00:27:29.360\nMike's already referenced it in this show\nby jumping over to our content library.\n\n521\n00:27:29.360 --> 00:27:31.990\nBut until we see you again,\nI've been your show host, Wes Bryan.\n\n522\n00:27:31.990 --> 00:27:32.740\n&gt;&gt; And I'm Mike Rodrick.\n\n523\n00:27:32.740 --> 00:27:35.514\n&gt;&gt; And we'll see you next time.\n\n524\n00:27:35.514 --> 00:27:41.224\n[MUSIC]\n\n525\n00:27:41.224 --> 00:27:43.801\n&gt;&gt; Thank you for watching ITPRO.TV\n\n",
          "vimeoId": "238062141"
        },
        {
          "description": "In this episode, Mike and Cherokee look at setting the script execution policy in PowerShell. They discuss the various policies available and explain what they mean. They also look at script execution policy scope.",
          "length": "1657",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-2-script_execution_policy_pt_2-101117-PGM.00_31_00_19.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-2-script_execution_policy_pt_2-101117-PGM.00_31_00_19.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-5-2-script_execution_policy_pt_2-101117-PGM.00_31_00_19.Still001-sm.jpg",
          "title": "Script Execution Policy Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.190 --> 00:00:02.739\nWelcome to ITProTV,\nI'm your host, Don Pezet.\n\n2\n00:00:02.739 --> 00:00:06.522\n[CROSSTALK]\n\n3\n00:00:06.522 --> 00:00:08.177\n[MUSIC]\n\n4\n00:00:08.177 --> 00:00:11.934\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:11.934 --> 00:00:13.490\n&gt;&gt; Hello to all our viewers out there.\n\n6\n00:00:13.490 --> 00:00:14.415\nThanks for tuning in.\n\n7\n00:00:14.415 --> 00:00:15.994\nWe've got a great show in store for you.\n\n8\n00:00:15.994 --> 00:00:17.500\nI'm your show host, Wes Bryan.\n\n9\n00:00:17.500 --> 00:00:22.300\nAnd in today's episode, we're continuing\nthrough our series in PowerShell.\n\n10\n00:00:22.300 --> 00:00:25.604\nWere actually coming back with\na part two in execution polices.\n\n11\n00:00:25.604 --> 00:00:29.851\nThat's right, Michael Rodrick left you\nwith a cliff hanger in the last one.\n\n12\n00:00:29.851 --> 00:00:31.754\nAnd then he's in the studios\njoining us today.\n\n13\n00:00:31.754 --> 00:00:32.962\nMike, how are you doing today, sir?\n\n14\n00:00:32.962 --> 00:00:36.050\n&gt;&gt; I'm doing good, Wes,thanks for\nhaving me back, and yeah, you know me,\n\n15\n00:00:36.050 --> 00:00:37.184\nI'm a little long winded.\n\n16\n00:00:37.184 --> 00:00:39.769\nAnd I like part twos, I don't know,\nthere's something about them.\n\n17\n00:00:39.769 --> 00:00:42.410\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] All right, so, yeah,\n\n18\n00:00:42.410 --> 00:00:46.630\nwe were talking about execution\npolicies within PowerShell.\n\n19\n00:00:46.630 --> 00:00:51.236\nWe had talked about the four/six\ndifferent policies that we have in place.\n\n20\n00:00:51.236 --> 00:00:56.510\nWell, five plus the undefine,\nwhich is not really a policy.\n\n21\n00:00:56.510 --> 00:01:01.120\nWe also talked about the five different\nscope levels that we have now\n\n22\n00:01:01.120 --> 00:01:04.750\nwith setting our execution policy,\nlocal machine, current user,\n\n23\n00:01:04.750 --> 00:01:08.150\nprocess, user policy, and machine policy.\n\n24\n00:01:08.150 --> 00:01:12.800\nThose top two being GPOs from our domain\nenvironment that we can use within\n\n25\n00:01:12.800 --> 00:01:14.140\na domain environment.\n\n26\n00:01:14.140 --> 00:01:19.020\nSo we talked about that,\nand I was getting ready to\n\n27\n00:01:19.020 --> 00:01:23.100\nshow you how we can actually\nset these policies.\n\n28\n00:01:23.100 --> 00:01:27.808\nLet's take a look at that, let's start by\ngetting my current execution policy again.\n\n29\n00:01:27.808 --> 00:01:32.640\nWe'll refresh, but it says restricted,\nbut if I do a -list,\n\n30\n00:01:32.640 --> 00:01:37.040\nwhich gives me the different scopes,\nI can see they're all undefined.\n\n31\n00:01:37.040 --> 00:01:42.850\nSo, the resultant set, if you will, is\nrestricted cuz there's no policy defined.\n\n32\n00:01:42.850 --> 00:01:44.210\nSo, let's set one.\n\n33\n00:01:44.210 --> 00:01:48.120\nWes had said that he's used to\njust doing Set-ExecutionPolicy and\n\n34\n00:01:48.120 --> 00:01:49.160\nthen the name of the policy, right?\n\n35\n00:01:49.160 --> 00:01:49.810\n&gt;&gt; That's right.\n\n36\n00:01:49.810 --> 00:01:52.210\n&gt;&gt; So, let's just do RemoteSigned, maybe?\n\n37\n00:01:52.210 --> 00:01:53.812\n&gt;&gt; Might wanna put set on there.\n\n38\n00:01:53.812 --> 00:01:55.590\n&gt;&gt; Let's try that.\n\n39\n00:01:55.590 --> 00:01:58.950\nWe wanna write something,\nnot read something, correct?\n\n40\n00:01:58.950 --> 00:02:03.090\nAll right, ExecutionPolicy,\nand I'll type re Tab.\n\n41\n00:02:03.090 --> 00:02:06.176\nRemember, Tab autofill is your friend.\n\n42\n00:02:06.176 --> 00:02:09.927\nYou don't know what the names of\nthe policies are, Mike told me, but\n\n43\n00:02:09.927 --> 00:02:12.540\nI can't remember what my options are.\n\n44\n00:02:12.540 --> 00:02:17.440\nTab, Tab, Tab, Tab, Tab, Tab, Tab, right?\n\n45\n00:02:17.440 --> 00:02:19.380\nI can just Tab through the possibilities.\n\n46\n00:02:19.380 --> 00:02:21.230\nSo I don't even have to remember them.\n\n47\n00:02:21.230 --> 00:02:23.050\nWatching this whole show\nis a waste of time.\n\n48\n00:02:23.050 --> 00:02:23.671\nNah, I'm kidding.\n\n49\n00:02:23.671 --> 00:02:25.860\n[LAUGH] All you gotta do is use Tab.\n\n50\n00:02:25.860 --> 00:02:27.370\nYou don't need me.\n\n51\n00:02:27.370 --> 00:02:30.910\nLet's set this to RemoteSigned,\nwhich I think I just passed.\n\n52\n00:02:30.910 --> 00:02:33.222\nThere we go, RemoteSigned,\nand I'll hit Enter.\n\n53\n00:02:33.222 --> 00:02:35.870\nAll right, it's gonna say hey,\nare you sure you wanna do that?\n\n54\n00:02:35.870 --> 00:02:37.940\nBecause you're saying that some scripts,\nin this case,\n\n55\n00:02:37.940 --> 00:02:41.090\nlocal scripts can be run\nwithout being signed.\n\n56\n00:02:41.090 --> 00:02:45.711\nI'll hit a Y for yes and hit Enter, and\nit tells me eh, eh, eh, you can't do that,\n\n57\n00:02:45.711 --> 00:02:48.130\nyou're not an administrator.\n\n58\n00:02:48.130 --> 00:02:50.120\nSo we'll close down PowerShell.\n\n59\n00:02:50.120 --> 00:02:51.890\nWe'll launch it again as administrator.\n\n60\n00:02:52.970 --> 00:02:56.050\nAnd thanks to good old\nPS Read Line Module,\n\n61\n00:02:56.050 --> 00:03:01.200\nmy history comes right through\nto my different consoles, right?\n\n62\n00:03:01.200 --> 00:03:02.710\nSo set that to RemoteSigned.\n\n63\n00:03:02.710 --> 00:03:04.582\nYes, I wanna change that.\n\n64\n00:03:04.582 --> 00:03:09.510\nIt knows I get no red text, all seems to\nbe good, we'll do a Get-ExecutionPolicy.\n\n65\n00:03:09.510 --> 00:03:12.520\nFirst, we'll do just plain\nold Get-ExecutionPolicy.\n\n66\n00:03:12.520 --> 00:03:16.081\nAnd I can see, hopefully, you can\nsee that there, highlighted for us,\n\n67\n00:03:16.081 --> 00:03:21.490\nRemoteSigned, so it is indeed set to\nwhat I told it, which is a good thing.\n\n68\n00:03:21.490 --> 00:03:26.330\nIf we do a list,\nlet's see what scope that applied to.\n\n69\n00:03:27.900 --> 00:03:30.690\nAnd notices it says, LocalMachine.\n\n70\n00:03:30.690 --> 00:03:35.256\nSo, LocalMachine is the default\nwhen you do not specify any\n\n71\n00:03:35.256 --> 00:03:38.829\nparameters with the Set-ExecutionPolicy.\n\n72\n00:03:38.829 --> 00:03:43.510\nIt's gonna assume that you\nmean LocalMachine, all right?\n\n73\n00:03:43.510 --> 00:03:47.320\nUnderstand that is the default\nscope if we don't set.\n\n74\n00:03:47.320 --> 00:03:49.170\nHow do I work with these other ones then?\n\n75\n00:03:49.170 --> 00:03:53.810\nIf I'd used this Set-ExecutionPolicy and\nit goes to LocalMachine, what if I wanna\n\n76\n00:03:53.810 --> 00:03:59.340\nset the current user or the process,\nright, or something like that, right?\n\n77\n00:03:59.340 --> 00:04:01.340\nWe just have to add a scope.\n\n78\n00:04:01.340 --> 00:04:05.730\nSo let's do set, we'll just bring\nthat last one back, RemoteSigned.\n\n79\n00:04:05.730 --> 00:04:09.187\nNow, remember the other day,\nI talked about parameters.\n\n80\n00:04:09.187 --> 00:04:14.349\nAnd I said we either name the parameters\nwith a dash parameter name and\n\n81\n00:04:14.349 --> 00:04:18.280\nthen the value, or\nsometimes the name is optional.\n\n82\n00:04:18.280 --> 00:04:20.880\nBut then it becomes positional based.\n\n83\n00:04:20.880 --> 00:04:22.650\nLet's take a look at something real quick.\n\n84\n00:04:22.650 --> 00:04:26.640\nI always like reinforcing\nstuff we've already learned.\n\n85\n00:04:26.640 --> 00:04:29.904\nLet's do a get-help, Set ExecutionPolicy.\n\n86\n00:04:29.904 --> 00:04:34.634\nAnd if we look at the syntax here for\nthis policy, Set-ExecutionPolicy,\n\n87\n00:04:34.634 --> 00:04:38.400\n-ExecutionPolicy and\nthen one of these options, right?\n\n88\n00:04:38.400 --> 00:04:42.918\nAnything between those curly brackets\nis an option separated by pipes there.\n\n89\n00:04:42.918 --> 00:04:47.749\nAnd then -scope and\nthen my possibilities for scope,\n\n90\n00:04:47.749 --> 00:04:52.550\njust like we saw in our list up here,\nall right?\n\n91\n00:04:52.550 --> 00:04:57.940\nBut notice scope and ExecutionPolicy\nare in those square brackets,\n\n92\n00:04:57.940 --> 00:04:59.450\nwhich means they're optional.\n\n93\n00:04:59.450 --> 00:05:01.864\nBut I do have to follow the order\nif I'm not gonna specify.\n\n94\n00:05:01.864 --> 00:05:05.410\nIn other words,\nwe could do this a couple of ways.\n\n95\n00:05:05.410 --> 00:05:12.229\nLet's get back up to the top here and\ndo a Set-ExecutionPolicy and\n\n96\n00:05:12.229 --> 00:05:16.875\nI can do a -ExecutionPolicy RemoteSigned.\n\n97\n00:05:16.875 --> 00:05:19.817\nLet's do something different actually,\n\n98\n00:05:19.817 --> 00:05:24.100\nwe already did RemoteSigned,\nlet's do AllSigned -scope.\n\n99\n00:05:24.100 --> 00:05:26.370\nAnd then hey Mike,\nI don't remember what the scopes are.\n\n100\n00:05:26.370 --> 00:05:28.830\nTab, Tab, Tab, and\nI can get through them all, right?\n\n101\n00:05:28.830 --> 00:05:33.135\nWe'll go to CurrentUser,\nand I'll hit Enter.\n\n102\n00:05:33.135 --> 00:05:36.660\nAnd yes, and we should be good to go.\n\n103\n00:05:36.660 --> 00:05:41.990\nSo now let's take a look at\nGet-ExecutionPolicy -List,\n\n104\n00:05:41.990 --> 00:05:44.910\nand notice CurrentUser is now AllSigned.\n\n105\n00:05:44.910 --> 00:05:46.900\nAnd back to what I was saying\nthere about those parameters,\n\n106\n00:05:46.900 --> 00:05:51.540\nso here I specified the parameter and\nthe value.\n\n107\n00:05:51.540 --> 00:05:54.220\nI could've done this a little differently.\n\n108\n00:05:56.300 --> 00:05:58.009\nInstead of using the parameter values,\n\n109\n00:05:58.009 --> 00:06:00.180\nI could just make sure I put\nthem in the right order.\n\n110\n00:06:00.180 --> 00:06:08.720\nSo, let's set the Unrestricted\nto the Process.\n\n111\n00:06:09.840 --> 00:06:13.240\nAnd notice the Tab autofill\nworked just fine, right?\n\n112\n00:06:13.240 --> 00:06:17.450\nIt knows what position I'm at and\nwhat parameter it's expecting or\n\n113\n00:06:17.450 --> 00:06:19.120\nwhat value it's expecting.\n\n114\n00:06:19.120 --> 00:06:23.570\nI'll hit Enter, yes, and\nit seems to have worked.\n\n115\n00:06:23.570 --> 00:06:28.860\nIf we do a Get-ExecutionPolicy -List,\nnotice that process is now set to\n\n116\n00:06:28.860 --> 00:06:32.530\nUnrestricted, which is this window, and\nIf I close this window, that goes away.\n\n117\n00:06:32.530 --> 00:06:37.429\nThat particular setting gets\nwritten into my current config for\n\n118\n00:06:37.429 --> 00:06:39.159\nmy session in memory.\n\n119\n00:06:39.159 --> 00:06:42.734\nIt does not get written to the registry,\nwhich is why it's only persistent,\n\n120\n00:06:42.734 --> 00:06:47.082\nor it's not persistent, that as soon as I\nclose this shell, that setting goes away.\n\n121\n00:06:47.082 --> 00:06:51.330\nCurrentUser, LocalMachine, those, if I set\nthose, they're stored in the registry.\n\n122\n00:06:51.330 --> 00:06:54.860\nWhich is why the next time I open up\nPowerShell, they will be in effect.\n\n123\n00:06:54.860 --> 00:06:59.100\nProcess does not get written,\nit only gets stored in temporary config,\n\n124\n00:06:59.100 --> 00:07:02.380\nloaded up into memory, all right?\n\n125\n00:07:02.380 --> 00:07:05.540\nNow one more thing I wanna show\nyou with this parameter idea,\n\n126\n00:07:05.540 --> 00:07:06.780\nwhat if I did this the other way around?\n\n127\n00:07:07.940 --> 00:07:16.150\nWhat if I did, well, let's set\nCurrentUser to Restricted, all right?\n\n128\n00:07:16.150 --> 00:07:22.190\nSo I'm gonna say currentuser,\nand I can't Tab autofill.\n\n129\n00:07:22.190 --> 00:07:24.861\nThis is my first indicator\nthat something is wrong.\n\n130\n00:07:24.861 --> 00:07:28.065\nBut if I go currentuser, and\nlet's just say I ignore that, and\n\n131\n00:07:28.065 --> 00:07:31.408\nI just say PowerShell is hung up,\nI'm just gonna keep on typing.\n\n132\n00:07:31.408 --> 00:07:35.965\nAnd then I wanna apply the,\nwhat did I say, restricted.\n\n133\n00:07:35.965 --> 00:07:42.730\nAgain, can't Tab autofill, so now I gotta\nspell this, restricted, there we go.\n\n134\n00:07:42.730 --> 00:07:44.010\nI hit Enter.\n\n135\n00:07:44.010 --> 00:07:46.692\nAnd it says, cannot bind parameter scope,\n\n136\n00:07:46.692 --> 00:07:50.420\ncannot convert value restricted\nto a policy, all right?\n\n137\n00:07:50.420 --> 00:07:54.241\nBecause I've got these backwards,\nand so it doesn't know what to do.\n\n138\n00:07:54.241 --> 00:07:58.871\nIf I had defined them,\nthough, -scope Right, and\n\n139\n00:07:58.871 --> 00:08:04.250\nthen I should be able to actually\ntab autofill this, right?\n\n140\n00:08:04.250 --> 00:08:06.947\nSee how it fixed the case there?\n\n141\n00:08:06.947 --> 00:08:12.859\n- execution policy restricted,\neverything works just fine,\n\n142\n00:08:12.859 --> 00:08:17.596\neven though, What's this one saying?\n\n143\n00:08:17.596 --> 00:08:21.654\nThis one is just telling me that hey, your\npolicies are now not really lining up,\n\n144\n00:08:21.654 --> 00:08:24.826\nthere's one lower that's more\nrestrictive than one higher.\n\n145\n00:08:24.826 --> 00:08:26.686\nWe'll talk about that\nhere in just a second.\n\n146\n00:08:26.686 --> 00:08:28.613\nBut it did apply.\n\n147\n00:08:28.613 --> 00:08:32.381\nSo even though I put these in the reversal\norder, not the order that it called for\n\n148\n00:08:32.381 --> 00:08:35.882\nbecause I told it what to expect,\nthis is okay, I'll do them backwards.\n\n149\n00:08:35.882 --> 00:08:36.535\nI'm fine.\n\n150\n00:08:36.535 --> 00:08:40.712\nSo hopefully that reinforces what we\ntalked about yesterday with the whole,\n\n151\n00:08:40.712 --> 00:08:43.413\nsometimes the parameter\nnames are optional, but\n\n152\n00:08:43.413 --> 00:08:46.580\nthen I have to pay attention to\nwhat position I put them in.\n\n153\n00:08:46.580 --> 00:08:50.417\nAll right, let's do a little\nget-executionpolicy list, and\n\n154\n00:08:50.417 --> 00:08:51.703\nsee what we've got.\n\n155\n00:08:51.703 --> 00:08:57.006\nNow, that warning was for this back here,\nthis has the higher precedent.\n\n156\n00:08:57.006 --> 00:09:01.166\nSo it's going to be the one that\ntakes precedent, or is applied,\n\n157\n00:09:01.166 --> 00:09:04.434\neven though it's less\nrestrictive than this one.\n\n158\n00:09:04.434 --> 00:09:07.890\nThat was what the warning was telling me,\nhey, you're setting this, but it's not\n\n159\n00:09:07.890 --> 00:09:10.923\nreally going to do anything because\nright above it it says unrestricted.\n\n160\n00:09:10.923 --> 00:09:13.340\nAnd I'm going to let anything run anyway,\nso\n\n161\n00:09:13.340 --> 00:09:17.738\nthere's really no point in setting current\nuser to something more restrictive.\n\n162\n00:09:17.738 --> 00:09:21.507\nAll right, so\nthat takes care of setting these guys.\n\n163\n00:09:21.507 --> 00:09:26.132\nAgain, we can set it just blanket if\nyou don't specify any particular scope.\n\n164\n00:09:26.132 --> 00:09:29.675\nLocal machine is gonna be the assumed\nscope and it's gonna apply there.\n\n165\n00:09:29.675 --> 00:09:34.996\nWhich also tells how we can specify\nscope when we set that policy,\n\n166\n00:09:34.996 --> 00:09:38.015\nand we can set it a particular level.\n\n167\n00:09:38.015 --> 00:09:41.510\nAll right, before I get too much further,\nI'm gonna undo some of this, because I\n\n168\n00:09:41.510 --> 00:09:44.820\ndon't want it to goof up the, well I'll\ncome back and do that after the show.\n\n169\n00:09:44.820 --> 00:09:45.893\nI'll come back and clean these.\n\n170\n00:09:45.893 --> 00:09:47.518\nActually, you know what?\n\n171\n00:09:47.518 --> 00:09:49.288\nWe're gonna do some\nexecution of some scripts.\n\n172\n00:09:49.288 --> 00:09:52.818\nSo let me close PowerShell,\nand open PowerShell back up,\n\n173\n00:09:52.818 --> 00:09:57.010\nand I'll run as administrator so\nI don't run into any issues later.\n\n174\n00:09:57.010 --> 00:10:00.445\nLet's do a get-executionpolicy.\n\n175\n00:10:00.445 --> 00:10:03.343\nYou know what I could do?\n\n176\n00:10:03.343 --> 00:10:05.617\nRemember our little search techniques,\nright?\n\n177\n00:10:05.617 --> 00:10:08.765\nCtrl-r L-I, and look, there it is.\n\n178\n00:10:08.765 --> 00:10:11.234\nBecause I was actually looking for list.\n\n179\n00:10:11.234 --> 00:10:14.092\nI knew the word list was in\nthe command I wanted to run.\n\n180\n00:10:14.092 --> 00:10:16.272\nSo I didn't have to up\narrow till I get to it.\n\n181\n00:10:16.272 --> 00:10:21.040\nI just did a quick search, typed L-I,\nI found it, I hit Enter, and there we go,\n\n182\n00:10:21.040 --> 00:10:23.931\nreinforcing the skills\nthat we learned before.\n\n183\n00:10:23.931 --> 00:10:29.321\nAll right, and notice process went back\nto undefined because I closed my session,\n\n184\n00:10:29.321 --> 00:10:32.026\nopened it up again, it's no longer set.\n\n185\n00:10:32.026 --> 00:10:34.914\nI'm also gonna set,\n\n186\n00:10:34.914 --> 00:10:39.895\nlet's do a Set-ExecutionPolicy.\n\n187\n00:10:39.895 --> 00:10:44.944\nLet's do undefined, For the local machine.\n\n188\n00:10:47.695 --> 00:10:55.676\nAnd let's set current user,\nTo, what should we start with?\n\n189\n00:10:55.676 --> 00:10:58.335\nLet's say remote sign?\n\n190\n00:10:58.335 --> 00:11:00.207\nLet's do Restricted.\n\n191\n00:11:00.207 --> 00:11:00.762\nI'm so wishy washy Wes.\n\n192\n00:11:00.762 --> 00:11:06.006\n&gt;&gt; [LAUGH]\n&gt;&gt; All right,\n\n193\n00:11:06.006 --> 00:11:08.317\nlast typing there,\nwhat the heck did we end up with?\n\n194\n00:11:08.317 --> 00:11:12.513\nGet-ExecutionPolicy-List.\n\n195\n00:11:12.513 --> 00:11:14.469\nSo everything is Undefined except for\nCurrentUser,\n\n196\n00:11:14.469 --> 00:11:15.689\nwhich is currently restricted.\n\n197\n00:11:15.689 --> 00:11:19.583\nSo that should apply to me and\nonly my account on this system.\n\n198\n00:11:19.583 --> 00:11:21.820\nCould have done local\nmachine just as easily.\n\n199\n00:11:21.820 --> 00:11:24.774\nEither one would give us\nthe results we're looking for.\n\n200\n00:11:24.774 --> 00:11:27.206\nAll right, now let's take\na look at some scripts here.\n\n201\n00:11:27.206 --> 00:11:30.437\nLet me go and\nchange over to a directory that I have.\n\n202\n00:11:32.749 --> 00:11:35.025\nAnd in here I've got a few scripts.\n\n203\n00:11:35.025 --> 00:11:36.189\nAnd we're gonna try to run them.\n\n204\n00:11:36.189 --> 00:11:39.447\nCurrently, again,\nwe're set to restrict it, right?\n\n205\n00:11:39.447 --> 00:11:41.571\nSo, let's try this one.\n\n206\n00:11:41.571 --> 00:11:46.966\nMap drive is actually one that I wrote for\nsomebody.\n\n207\n00:11:46.966 --> 00:11:50.510\nIt's not gonna work cuz I don't\nhave the right subnets, but\n\n208\n00:11:50.510 --> 00:11:53.999\nit maps drives based on your\nthird octet in your IP address.\n\n209\n00:11:53.999 --> 00:11:57.743\nYou want a different drives map, depending\non what subnet the clients were on.\n\n210\n00:11:57.743 --> 00:12:00.143\nAnd we wrote a PowerShell\nscript that did it.\n\n211\n00:12:00.143 --> 00:12:03.677\nMy computer won't be on those so\nit won't actually map drives, but\n\n212\n00:12:03.677 --> 00:12:04.856\nwe'll see if it runs.\n\n213\n00:12:04.856 --> 00:12:09.624\n.\\mapdrive/ PS1.\n\n214\n00:12:09.624 --> 00:12:11.652\nAnd this is odd, wait a second.\n\n215\n00:12:11.652 --> 00:12:17.226\nCannot be loaded because running scripts\nis disabled on this system, all right?\n\n216\n00:12:17.226 --> 00:12:20.408\nSo local scripts, scripts that\nI wrote are not gonna execute.\n\n217\n00:12:20.408 --> 00:12:25.144\nThese export 80 users, it's the one I have\ngrabbed today from the PowerShell gallery\n\n218\n00:12:25.144 --> 00:12:27.900\njust to test some things out so\nlet's try that one.\n\n219\n00:12:27.900 --> 00:12:31.852\nExport 80 users.\n\n220\n00:12:31.852 --> 00:12:35.608\nAnd no surprise,\nlocal scripts won't run, remote or\n\n221\n00:12:35.608 --> 00:12:38.395\ndownloaded scripts won't run either.\n\n222\n00:12:38.395 --> 00:12:41.556\nAll right,\nlet's change our execution policy.\n\n223\n00:12:41.556 --> 00:12:46.508\nLet's do our Set-ExecutionPolicy, and\n\n224\n00:12:46.508 --> 00:12:49.265\nlet's change that up.\n\n225\n00:12:49.265 --> 00:12:57.270\nLet's say we now want, RemoteSigned.\n\n226\n00:12:57.270 --> 00:13:01.471\nAnd if we do our get-ExecutionPolicy,\nremote signed is,\n\n227\n00:13:01.471 --> 00:13:06.016\nnow remember, I've been doing\nthe list to show you all of them.\n\n228\n00:13:06.016 --> 00:13:11.169\nHere I just did get-ExecutionPolicy, it's\ntaking into account which is the highest\n\n229\n00:13:11.169 --> 00:13:15.983\none that's applied, and it's saying\nyour effective policy is remote signed.\n\n230\n00:13:15.983 --> 00:13:19.171\nIt doesn't tell me if it's\nset at the local level or\n\n231\n00:13:19.171 --> 00:13:22.370\nthe current user or\nthe process or by group policy.\n\n232\n00:13:22.370 --> 00:13:25.304\nIt just says this is your\neffective policy, remote signed.\n\n233\n00:13:25.304 --> 00:13:29.465\nIf I wanna see which one is actually\ncausing that effective policy,\n\n234\n00:13:29.465 --> 00:13:34.357\nI need to do the list and then go it's\nthe current user that set to remote site.\n\n235\n00:13:34.357 --> 00:13:37.911\nSo it's maybe a tip for the users that are\njust getting in to execution policies and\n\n236\n00:13:37.911 --> 00:13:41.777\ncan't remember the precedent order, just\nturn around and do a get-ExecutionPolicy,\n\n237\n00:13:41.777 --> 00:13:44.998\nand the one that's showing up,\nthat's your resultant set of policies.\n\n238\n00:13:44.998 --> 00:13:47.294\n&gt;&gt; Exactly right,\nit's a great way to do it.\n\n239\n00:13:47.294 --> 00:13:50.244\nAll right, so let's, what was I gonna do?\n\n240\n00:13:50.244 --> 00:13:52.500\nSo we've changed to remote signed.\n\n241\n00:13:52.500 --> 00:13:56.106\nAnd we've learned in our previous\nepisode that remote signed says local\n\n242\n00:13:56.106 --> 00:13:59.609\nscript should be able to run,\nno problem even if they're not signed.\n\n243\n00:13:59.609 --> 00:14:02.795\nBut anything you download from\nthe Internet needs to be signed by\n\n244\n00:14:02.795 --> 00:14:03.741\na trusted source.\n\n245\n00:14:03.741 --> 00:14:07.927\nSo let's see what happens,\nwe will try to run those scripts again,\n\n246\n00:14:07.927 --> 00:14:10.064\nwe'll start with a local script.\n\n247\n00:14:10.064 --> 00:14:12.473\nAnd notice no error, it ran, right?\n\n248\n00:14:12.473 --> 00:14:16.069\nNow again my script does not work in\nthis environment because I don't have\n\n249\n00:14:16.069 --> 00:14:19.259\nthe right subnets, but\nthe script executed and it just said hey,\n\n250\n00:14:19.259 --> 00:14:21.005\nthere's an If statement in there.\n\n251\n00:14:21.005 --> 00:14:25.129\nAnd the If statement didn't ring\ntrue through so the script ended.\n\n252\n00:14:25.129 --> 00:14:32.555\nLet's try our remote script,\nAnd it says no, no, no, right?\n\n253\n00:14:32.555 --> 00:14:38.811\nIt is not digitally signed, so\nI cannot run that script, okay?\n\n254\n00:14:38.811 --> 00:14:41.446\nNow shall we try the old unblock thing?\n\n255\n00:14:41.446 --> 00:14:41.984\n&gt;&gt; Definitely.\n\n256\n00:14:41.984 --> 00:14:43.038\n&gt;&gt; Let's do this.\n\n257\n00:14:43.038 --> 00:14:48.277\nI have not played around much with\nthis one yet, so let's do a get-help.\n\n258\n00:14:48.277 --> 00:14:55.455\nThe syntax is really easy for it,\nunblock-File, they can look at our syntax.\n\n259\n00:14:55.455 --> 00:15:01.171\nActually, let's do a -examples, so\nwe can see what we got going on here.\n\n260\n00:15:01.171 --> 00:15:04.418\nAnd this first one, unblock file path,\n\n261\n00:15:04.418 --> 00:15:08.437\nthis is unblocking\nthe PowerShell tips chm file.\n\n262\n00:15:08.437 --> 00:15:10.995\nThink it's this last one that I want.\n\n263\n00:15:10.995 --> 00:15:15.266\nGet item, and\nthen the name of the script and\n\n264\n00:15:15.266 --> 00:15:18.623\npipe that into an Unblock-File.\n\n265\n00:15:18.623 --> 00:15:21.663\nSeems pretty straightforward, so\nthat script that we just saw was blocked.\n\n266\n00:15:21.663 --> 00:15:31.063\nLet's try a Get-Item C:\\Scripts\\Export\nUsers yada yada yada,\n\n267\n00:15:31.063 --> 00:15:37.879\npipe that out into an Unblock-File,\nand it ran.\n\n268\n00:15:37.879 --> 00:15:40.005\nAgain, it failed,\nI don't have Active Directory,\n\n269\n00:15:40.005 --> 00:15:41.762\nthis is not even a domain-joined machine.\n\n270\n00:15:41.762 --> 00:15:46.643\nBut no red text, no hey, I can't run this\nscript because it's not digitally signed\n\n271\n00:15:46.643 --> 00:15:48.446\nand it came from the Internet.\n\n272\n00:15:48.446 --> 00:15:50.213\nIt just said, hey, ironic.\n\n273\n00:15:50.213 --> 00:15:52.047\n&gt;&gt; I gotta piggyback off for\none of our viewers.\n\n274\n00:15:52.047 --> 00:15:54.762\nOur viewer in the chat room\npicked up that up too, said well,\n\n275\n00:15:54.762 --> 00:15:58.241\nis this really a security feature if you\ncould just unblock the file anyways?\n\n276\n00:15:58.241 --> 00:15:59.552\n&gt;&gt; And absolutely not.\n\n277\n00:15:59.552 --> 00:16:03.509\nIt's not meant And in the end, and I think\nwe were talking about this between shows,\n\n278\n00:16:03.509 --> 00:16:06.320\nand we should definitely talk\nabout it during our show too.\n\n279\n00:16:07.320 --> 00:16:10.460\nEven Microsoft will tell you,\nall the stuff I've been talking about,\n\n280\n00:16:10.460 --> 00:16:12.430\nand execution policies.\n\n281\n00:16:12.430 --> 00:16:17.320\nIn the end, it's not really meant\nas a security measure [LAUGH].\n\n282\n00:16:17.320 --> 00:16:19.620\nYou think then why do we have it then?\n\n283\n00:16:19.620 --> 00:16:22.990\nTo keep us protected from\nourselves more than anything.\n\n284\n00:16:22.990 --> 00:16:26.630\nI don't need my end-users trying to\nrun a script that they downloaded from\n\n285\n00:16:26.630 --> 00:16:29.590\nthe Internet,\nthey don't really know what it does.\n\n286\n00:16:29.590 --> 00:16:34.000\nThe script might be called show\nme pretty pictures of cats, but\n\n287\n00:16:34.000 --> 00:16:35.300\nwho knows what it really does?\n\n288\n00:16:35.300 --> 00:16:37.470\nThey didn't open it up,\nthey didn't look at the code.\n\n289\n00:16:37.470 --> 00:16:38.700\nIt could be calling home,\n\n290\n00:16:38.700 --> 00:16:41.950\nit could be setting up back doors,\nany number of things.\n\n291\n00:16:41.950 --> 00:16:45.400\nSo this is really just meant for\nkeeping my end-users and\n\n292\n00:16:45.400 --> 00:16:50.850\npeople that are not PowerShell savvy from\naccidentally running malicious code.\n\n293\n00:16:50.850 --> 00:16:54.850\nSo if you're a PowerShell user you\ncan unblock anything you want.\n\n294\n00:16:54.850 --> 00:16:57.190\nSo you might as well just set\nthe darn thing to unrestricted.\n\n295\n00:16:57.190 --> 00:16:59.220\n&gt;&gt; So what you're saying is\nthe problem with computers, Mike,\n\n296\n00:16:59.220 --> 00:17:01.430\nis that they do what we tell them to do.\n\n297\n00:17:01.430 --> 00:17:02.820\n&gt;&gt; Yes, exactly right.\n\n298\n00:17:02.820 --> 00:17:04.830\nAnd at IT's,\nyou shouldn't set it to unrestricted.\n\n299\n00:17:04.830 --> 00:17:06.590\nRemote sign is a good one.\n\n300\n00:17:06.590 --> 00:17:09.820\nIn that way at least you kind\nof remind yourself that's right,\n\n301\n00:17:09.820 --> 00:17:11.060\nI got this script from the Internet.\n\n302\n00:17:11.060 --> 00:17:13.980\nLet me read it before I\njust blindly execute it.\n\n303\n00:17:13.980 --> 00:17:19.170\nI would recommend remote sign for\nmost scenarios if you use PowerShell.\n\n304\n00:17:19.170 --> 00:17:21.600\nIf my end user does not use PowerShell,\n\n305\n00:17:21.600 --> 00:17:25.680\nthen it's gonna be either all signed or\nrestricted, all right?\n\n306\n00:17:25.680 --> 00:17:29.040\nUnderstanding that if they do a little\nhomework, they can get around that,\n\n307\n00:17:29.040 --> 00:17:30.720\nno problem, but most of them aren't.\n\n308\n00:17:30.720 --> 00:17:31.610\nWhy do they care?\n\n309\n00:17:31.610 --> 00:17:34.310\nThey don't wanna know how\nto run PowerShell scripts.\n\n310\n00:17:34.310 --> 00:17:38.000\nThey want to do their job and\ngo home and be with their family, right?\n\n311\n00:17:38.000 --> 00:17:41.440\nSo, in most scenarios, we're safe.\n\n312\n00:17:41.440 --> 00:17:47.030\nJust understand that really not meant\nas a fool-proof security measure,\n\n313\n00:17:47.030 --> 00:17:51.440\nit's just another layer that we add\nto kinda try to keep ourselves safe.\n\n314\n00:17:51.440 --> 00:17:53.980\nAll right so\nwe have done just about everything,\n\n315\n00:17:53.980 --> 00:17:57.070\nwe've taken a look if I\ndid the unrestricted.\n\n316\n00:17:57.070 --> 00:18:00.636\nLet's see, we didn't actually execute,\nwell we did unblock it, and it executed.\n\n317\n00:18:00.636 --> 00:18:06.694\nIf I set my execution policy, for\n\n318\n00:18:06.694 --> 00:18:14.170\nthe current user to unrestricted, Right.\n\n319\n00:18:14.170 --> 00:18:17.260\nAnd now I just try to run that\nscript without the unblock.\n\n320\n00:18:21.177 --> 00:18:23.100\nNotice it whoops.\n\n321\n00:18:23.100 --> 00:18:25.370\nIt gives me the warning right?\n\n322\n00:18:25.370 --> 00:18:26.970\nBut it says hey I can run it anyway.\n\n323\n00:18:26.970 --> 00:18:30.740\nLook at, let's take a quick peek a this,\nRun only scripts that you trust.\n\n324\n00:18:30.740 --> 00:18:32.230\nWhile scripts from\nthe Internet can be useful,\n\n325\n00:18:32.230 --> 00:18:34.380\nthis script can potentially\nharm your computer.\n\n326\n00:18:34.380 --> 00:18:37.398\nIf you trust the script use\nthe unblocked file cmdlet.\n\n327\n00:18:37.398 --> 00:18:40.840\nAnd I think this is what Doug\nin the chatroom was mentioning.\n\n328\n00:18:40.840 --> 00:18:45.510\nIt's such not a security feature that it\neven tells you, after it's blocked you,\n\n329\n00:18:45.510 --> 00:18:47.590\nit'll tell you how to get around it.\n\n330\n00:18:47.590 --> 00:18:49.710\n[LAUGH] So it's really not\nmuch of a security feature.\n\n331\n00:18:49.710 --> 00:18:52.177\nHey, your car is locked but,\nif you want the key,\n\n332\n00:18:52.177 --> 00:18:54.500\nit's in the wheel well in\nthe little magnetic box.\n\n333\n00:18:54.500 --> 00:18:56.000\nJust grab it from down there.\n\n334\n00:18:56.000 --> 00:18:58.700\n&gt;&gt; You know, Mike, in the first part\nyou said that that was one of the big\n\n335\n00:18:58.700 --> 00:19:01.170\ndifferences between unrestricted and\nbypass.\n\n336\n00:19:01.170 --> 00:19:02.130\nBypass didn't warn you.\n\n337\n00:19:02.130 --> 00:19:03.472\nMaybe we can see bypass if it warns us or\nnot\n\n338\n00:19:03.472 --> 00:19:05.530\n&gt;&gt; Absolutely, yep, let's do it.\n\n339\n00:19:05.530 --> 00:19:08.000\nAnd notice my option is run one so\nI can run it anyway.\n\n340\n00:19:09.180 --> 00:19:12.740\nAn, it does look like\nit's needing credentials.\n\n341\n00:19:13.798 --> 00:19:17.060\nI don't have the Active Directory\nmodule loaded up.\n\n342\n00:19:17.060 --> 00:19:19.210\nSo I'm not gonna bother doing that.\n\n343\n00:19:19.210 --> 00:19:21.560\nIt's not gonna work in\nthis machine anyway.\n\n344\n00:19:21.560 --> 00:19:24.770\nBut we saw that the script was executing.\n\n345\n00:19:24.770 --> 00:19:26.840\nAnd, what did we say, bypass.\n\n346\n00:19:26.840 --> 00:19:32.279\nSo let's do the same thing,\nand then we'll do bypass.\n\n347\n00:19:36.295 --> 00:19:39.961\nRight, and\nnow we'll run that same script again, and\n\n348\n00:19:39.961 --> 00:19:42.280\nnotice I didn't get the warning.\n\n349\n00:19:42.280 --> 00:19:45.930\nIt does get to the error part,\nwhere I need the credentials, but\n\n350\n00:19:45.930 --> 00:19:49.560\nit didn't warn me about, hey,\nthis script could be untrusted,\n\n351\n00:19:49.560 --> 00:19:52.980\ncame from the Internet,\nhere's how you unblock it, or any of that.\n\n352\n00:19:52.980 --> 00:19:56.740\nSo bypass is definitely doing\nwhat it's supposed to do.\n\n353\n00:19:56.740 --> 00:19:59.418\nAll right, last thing I wanna\nshow you when it comes to\n\n354\n00:19:59.418 --> 00:20:01.989\nthese policies is the group\npolicy side of things.\n\n355\n00:20:01.989 --> 00:20:04.956\nSo I'm gonna jump over to\nmy virtual machines, and\n\n356\n00:20:04.956 --> 00:20:08.800\non my domain controller I'm\ngonna open up group policy.\n\n357\n00:20:08.800 --> 00:20:11.070\nActually I've already got it open.\n\n358\n00:20:11.070 --> 00:20:12.910\nOkay, group policy management open.\n\n359\n00:20:12.910 --> 00:20:17.940\nIn this policy here Lab Settings,\nI've made a couple configuration changes.\n\n360\n00:20:17.940 --> 00:20:23.060\nI've got the execution policy\nunder the computer configuration.\n\n361\n00:20:23.060 --> 00:20:26.659\nI got the execution policy set\nto allow only signed scripts.\n\n362\n00:20:27.770 --> 00:20:31.990\nOn the user portion, I said execution\npolicy allow local scripts and\n\n363\n00:20:31.990 --> 00:20:33.430\nremote signed scripts.\n\n364\n00:20:33.430 --> 00:20:36.830\nSo this is where you gotta\nunderstand your definitions, right?\n\n365\n00:20:36.830 --> 00:20:39.770\nBecause it's not saying all signed.\n\n366\n00:20:39.770 --> 00:20:41.610\nIt's saying allow only signed scripts,\n\n367\n00:20:41.610 --> 00:20:44.910\nwhich we have to know is all signed,\nright?\n\n368\n00:20:44.910 --> 00:20:47.260\nThis one is saying Locals scripts and\n\n369\n00:20:47.260 --> 00:20:51.492\nremote signed scripts which we\nknow is remote signed, right?\n\n370\n00:20:51.492 --> 00:20:54.796\nAllow, so it doesn't call it the actual,\nwhy would we do that,\n\n371\n00:20:54.796 --> 00:20:57.260\nwhy would we put it here,\nthe actual name of it.\n\n372\n00:20:57.260 --> 00:21:00.118\nWe're gonna make you think,\nthat's Microsoft's way.\n\n373\n00:21:00.118 --> 00:21:03.220\nIf I edit this policy let's go and\ntake a look at the actual setting,\n\n374\n00:21:03.220 --> 00:21:06.130\nit would be the same for user or computer.\n\n375\n00:21:06.130 --> 00:21:07.710\nJust depending on what node you're under.\n\n376\n00:21:07.710 --> 00:21:11.480\nSo I'm gonna go ahead and\njump down to Computer here, PowerShell.\n\n377\n00:21:11.480 --> 00:21:17.834\nAnd then the setting I'm looking for\nis, Where did it go?\n\n378\n00:21:21.285 --> 00:21:24.130\nRemote Shell Access, what the heck?\n\n379\n00:21:26.058 --> 00:21:32.273\n[LAUGH] I'm in Windows remote shell,\nnot Windows PowerShell.\n\n380\n00:21:32.273 --> 00:21:34.159\nI was trying to cheat and\nnot expand this out, and\n\n381\n00:21:34.159 --> 00:21:36.180\nI thought I clicked on the right one.\n\n382\n00:21:36.180 --> 00:21:38.330\nThere we go,\nthat's the one I'm looking for.\n\n383\n00:21:38.330 --> 00:21:41.970\nTurn on script execution,\ndouble-click on that, and\n\n384\n00:21:41.970 --> 00:21:45.570\nof course by default it's not configured\nwhen you come into your policy.\n\n385\n00:21:45.570 --> 00:21:47.550\nYou can choose disabled, all right.\n\n386\n00:21:47.550 --> 00:21:51.070\nBut if I disable this,\nno scripts are allowed to run.\n\n387\n00:21:51.070 --> 00:21:54.040\nSo there isn't a restricted option.\n\n388\n00:21:54.040 --> 00:21:55.940\nI'll show you what I mean\nhere in the drop down list.\n\n389\n00:21:55.940 --> 00:22:01.240\nIf you don't want scripts to run,\nyou disable turn on script execution.\n\n390\n00:22:01.240 --> 00:22:06.439\nWhen that policy applies, it will set\ntheir policy to restricted all right.\n\n391\n00:22:06.439 --> 00:22:09.978\nBut you don't see the word,\nrestricted, you choose disabled, and\n\n392\n00:22:09.978 --> 00:22:13.180\nwe just have to know that\nin the end is restricted.\n\n393\n00:22:13.180 --> 00:22:15.770\nIf I choose enabled, I get a few options,\n\n394\n00:22:15.770 --> 00:22:20.450\nallow only signed scripts, well that's\nthe same as saying, all signed.\n\n395\n00:22:20.450 --> 00:22:23.080\nAllow local scripts and\nremote sign scripts.\n\n396\n00:22:23.080 --> 00:22:26.110\nThis would be the same as saying,\nremote signed.\n\n397\n00:22:26.110 --> 00:22:29.320\nAllow all scripts,\nthat's unrestricted, right.\n\n398\n00:22:29.320 --> 00:22:30.640\nAllow everything.\n\n399\n00:22:30.640 --> 00:22:32.860\nAnd then disabled would be restricted.\n\n400\n00:22:32.860 --> 00:22:38.580\nAnd notice I can't send bypass or\nundefined using group policy, right.\n\n401\n00:22:38.580 --> 00:22:43.260\nThat would be done programmatically,\nthose applications we're developing.\n\n402\n00:22:43.260 --> 00:22:44.800\nAnd things like that.\n\n403\n00:22:44.800 --> 00:22:47.750\nSo I'm gonna just cancel this,\nbecause I had already set this.\n\n404\n00:22:47.750 --> 00:22:52.870\nAnd what I wanted to show you was the,\nand I haven't troubleshot this yet, but\n\n405\n00:22:54.080 --> 00:23:00.940\ncurrently as you saw, on the user portion,\nI have remote signed.\n\n406\n00:23:00.940 --> 00:23:05.210\nOn the computer portion I have all signed.\n\n407\n00:23:05.210 --> 00:23:10.330\nIf I go to my client and\nopen up PowerShell, and\n\n408\n00:23:10.330 --> 00:23:15.290\nI do a get-ExecutionPolicy,\nI can see all signed is set.\n\n409\n00:23:15.290 --> 00:23:20.000\nIf I do a get-ExecutionPolicy list, and\n\n410\n00:23:20.000 --> 00:23:24.044\nsee machine policy's all signed.\n\n411\n00:23:24.044 --> 00:23:28.013\nUser policy Is also set to all signed,\nwhich in my policy,\n\n412\n00:23:28.013 --> 00:23:31.830\nI actually chose remote\nsigned not all signed.\n\n413\n00:23:31.830 --> 00:23:37.570\nSo I'm not sure if it's a problem with the\ngroup policy, or it's because this one is\n\n414\n00:23:37.570 --> 00:23:41.556\nactually taking precedent, right, because\nmachine policy is higher than user policy.\n\n415\n00:23:41.556 --> 00:23:48.340\nSo it's taking precedent, so it doesn't\nwanna say this one, again, I don't know.\n\n416\n00:23:48.340 --> 00:23:53.277\nJust understand that when you're group\npolicy to set your execution policies,\n\n417\n00:23:53.277 --> 00:23:58.228\ndouble check them, make sure that it's\nworking out the way you think it should.\n\n418\n00:23:58.228 --> 00:24:01.762\nYou know what I could do, is I could\ntake away the machine setting and\n\n419\n00:24:01.762 --> 00:24:05.372\nsee if this goes back to remote signed,\nsince this would then be the.\n\n420\n00:24:05.372 --> 00:24:07.334\nHighest precedence, so let's do that.\n\n421\n00:24:07.334 --> 00:24:10.300\nI just don't know if it'll take\neffect while we're waiting here.\n\n422\n00:24:10.300 --> 00:24:16.060\nWhen I was setting this lab up,\neven though I did gpupdate twice and\n\n423\n00:24:16.060 --> 00:24:19.480\nrebooted the machine, I was having\ntrouble getting the policy to kick in.\n\n424\n00:24:21.310 --> 00:24:24.130\nI have just a time thing with\nthe PowerShell settings.\n\n425\n00:24:25.420 --> 00:24:32.690\nSo we'll go Windows Components &gt; Windows\nPowerShell &gt; Turn on Script Execution.\n\n426\n00:24:32.690 --> 00:24:37.338\nI'm gonna choose Not Configured and\nwe'll apply that.\n\n427\n00:24:37.338 --> 00:24:39.590\nClick OK.\n\n428\n00:24:39.590 --> 00:24:42.923\nWe'll check our settings.\n\n429\n00:24:42.923 --> 00:24:44.069\nI'll refresh this.\n\n430\n00:24:45.490 --> 00:24:50.870\nSo it's no longer being set under\nthe computer portion of GPO,\n\n431\n00:24:50.870 --> 00:24:53.000\nonly the sser portion.\n\n432\n00:24:53.000 --> 00:24:54.134\nSo now we go to the client.\n\n433\n00:24:56.236 --> 00:25:00.311\nAnd we'll do a gpupdate,\nif I could spell that.\n\n434\n00:25:00.311 --> 00:25:03.817\nSwitch force to go get the latest\npolicies and apply them.\n\n435\n00:25:03.817 --> 00:25:06.165\nAnd see if that affects\nour execution policy.\n\n436\n00:25:06.165 --> 00:25:09.340\nJust a little test I thought we'd\ntry out as we wrap this show up.\n\n437\n00:25:12.440 --> 00:25:15.065\nComputer Policy has updated successfully.\n\n438\n00:25:15.065 --> 00:25:17.229\nThere goes my user policy.\n\n439\n00:25:17.229 --> 00:25:21.131\nNow Get-ExecutionPolicy -List.\n\n440\n00:25:21.131 --> 00:25:23.525\nAnd still both of them\nare saying AllSigned,\n\n441\n00:25:23.525 --> 00:25:25.850\neven though this is no longer set.\n\n442\n00:25:25.850 --> 00:25:29.440\nSo it's probably a time\nthing with the GPO.\n\n443\n00:25:29.440 --> 00:25:34.417\nSo again, something to consider\nif you're gonna play around.\n\n444\n00:25:34.417 --> 00:25:35.691\nIt's worth taking a look at.\n\n445\n00:25:35.691 --> 00:25:39.461\nIf you're gonna use Group Policy to\ncontrol your execution policy of\n\n446\n00:25:39.461 --> 00:25:43.630\nPowerShell on your clients or your\nservers for that matter, double check.\n\n447\n00:25:43.630 --> 00:25:47.140\nMake sure it's applying the way you think\nit should be, because I've seen it act\n\n448\n00:25:47.140 --> 00:25:50.880\na little bit weird and I just wanna to\nmake sure you guys were aware of that.\n\n449\n00:25:50.880 --> 00:25:51.440\n&gt;&gt; Alright, Mike.\n\n450\n00:25:51.440 --> 00:25:53.190\nThat's been a lot of great information.\n\n451\n00:25:53.190 --> 00:25:54.540\nKeep in mine that this is a part two.\n\n452\n00:25:54.540 --> 00:25:57.280\nSo if you're just joining us,\nyou gotta go back to get part one where he\n\n453\n00:25:57.280 --> 00:25:59.420\nthoroughly defines each\none of those policies.\n\n454\n00:26:00.560 --> 00:26:03.163\nThis is a pretty important topic.\n\n455\n00:26:03.163 --> 00:26:05.430\nI could see where,\nfrom an administrator's standpoint,\n\n456\n00:26:05.430 --> 00:26:06.891\nscripts can be your bread and butter.\n\n457\n00:26:06.891 --> 00:26:08.873\nBut at the same time,\nfrom a hacker's standpoint,\n\n458\n00:26:08.873 --> 00:26:11.002\nI guess scripts could be their bread and\nbutter as well.\n\n459\n00:26:11.002 --> 00:26:15.722\nSo any final words of wisdom when it\ncomes to the execution policies and\n\n460\n00:26:15.722 --> 00:26:16.927\nhow to set those?\n\n461\n00:26:16.927 --> 00:26:20.227\n&gt;&gt; I wouldn't call this a word of wisdom,\nbut I would call it a, wow,\n\n462\n00:26:20.227 --> 00:26:22.491\nwhat the heck is [INAUDIBLE]\nsomething to call it.\n\n463\n00:26:22.491 --> 00:26:25.161\nSo just real quick,\nlet's take another look at my screen.\n\n464\n00:26:25.161 --> 00:26:28.494\nWhile Wes was wrapping things up,\nI though let me close my PowerShell and\n\n465\n00:26:28.494 --> 00:26:30.531\nopen it back up and\nmake sure it's going in.\n\n466\n00:26:30.531 --> 00:26:33.531\nCuz the setting,\nthe group policy might have applied, but\n\n467\n00:26:33.531 --> 00:26:35.460\nmaybe the policy wasn't kicking in.\n\n468\n00:26:35.460 --> 00:26:37.445\nThe restriction policy\nwasn't kicking in exactly,\n\n469\n00:26:37.445 --> 00:26:38.817\ncuz I hadn't closed my session yet.\n\n470\n00:26:38.817 --> 00:26:42.853\nSo I closed PowerShell, opened it back up,\ndid another Get-ExecutionPolicy -List.\n\n471\n00:26:42.853 --> 00:26:44.173\nAnd I'm on the same machine.\n\n472\n00:26:44.173 --> 00:26:47.225\nI am still in my client and\nnow look what it says.\n\n473\n00:26:49.501 --> 00:26:54.257\nSo even though I took this setting away\nbut this one is still configured and\n\n474\n00:26:54.257 --> 00:26:56.440\nit now says Undefined.\n\n475\n00:26:56.440 --> 00:26:59.623\nSo double check,\ntriple check your settings\n\n476\n00:26:59.623 --> 00:27:04.406\nif you're gonna use a GPO to apply\nPowerShell execution policies.\n\n477\n00:27:04.406 --> 00:27:08.222\n&gt;&gt; Mike I'm still gonna call those words\nof wisdom whether you want to or not.\n\n478\n00:27:08.222 --> 00:27:09.770\nAnd that's a great place\nto wrap this one up.\n\n479\n00:27:09.770 --> 00:27:11.480\nThanks for being here as always.\n\n480\n00:27:11.480 --> 00:27:13.380\nWe appreciate you, the viewer, watching.\n\n481\n00:27:13.380 --> 00:27:15.352\nRemember you can check\nthis episode out and\n\n482\n00:27:15.352 --> 00:27:19.040\nthousands of more hours of great content\nby jumping over to our course library.\n\n483\n00:27:19.040 --> 00:27:21.477\nUntil we see again,\nI've been your host, Wes Bryan.\n\n484\n00:27:21.477 --> 00:27:22.250\n&gt;&gt; And I'm Mike Rodrick.\n\n485\n00:27:22.250 --> 00:27:24.563\n&gt;&gt; And we'll see you next time.\n\n486\n00:27:24.563 --> 00:27:30.558\n[MUSIC]\n\n487\n00:27:30.558 --> 00:27:33.699\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "237996963"
        },
        {
          "description": "In this episode, Mike and Wes discuss PowerShell drives. They look at the different PSProviders for creating drives, and demonstrate adding a drive.",
          "length": "1146",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-6-1-powershell_drives-101117-PGM.00_22_36_07.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-6-1-powershell_drives-101117-PGM.00_22_36_07.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-6-1-powershell_drives-101117-PGM.00_22_36_07.Still001-sm.jpg",
          "title": "PowerShell Drives",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:05.996\nWelcome to ITProTV,\nI'm your host Don [CROSSTALK]\n\n2\n00:00:05.996 --> 00:00:07.805\n[MUSIC]\n\n3\n00:00:07.805 --> 00:00:11.778\n&gt;&gt; You're watching ITProTV.\n\n4\n00:00:11.778 --> 00:00:15.052\n&gt;&gt; Hello to all our viewers out there,\nthanks for tuning in today,\n\n5\n00:00:15.052 --> 00:00:17.125\nwe've got a great show for you in store.\n\n6\n00:00:17.125 --> 00:00:21.405\nThat's right, today we are continuing\nthrough our series in PowerShell.\n\n7\n00:00:21.405 --> 00:00:22.835\nI'm your show host Wes Bryan,\n\n8\n00:00:22.835 --> 00:00:26.742\nand bringing us back more of this great\nPowerShell goodness, is Mr. Mike Rodrick.\n\n9\n00:00:26.742 --> 00:00:27.812\nMike, how are you doing today, sir?\n\n10\n00:00:27.812 --> 00:00:30.592\n&gt;&gt; I'm doing fantastic, Wes,\nthanks for having me back.\n\n11\n00:00:30.592 --> 00:00:33.022\nExcited as always to be here.\n\n12\n00:00:33.022 --> 00:00:38.601\nAnd today's topic is going\nto be PowerShell drives.\n\n13\n00:00:38.601 --> 00:00:40.066\nThat's right, PowerShell drives.\n\n14\n00:00:40.066 --> 00:00:42.251\nNo, we're not taking it out for a spin but\n\n15\n00:00:42.251 --> 00:00:46.316\nwe are going to learn how we can use\nPowerShell drives to make our life easier.\n\n16\n00:00:46.316 --> 00:00:46.908\n&gt;&gt; Yeah.\n\n17\n00:00:46.908 --> 00:00:50.232\n&gt;&gt; And a PowerShell drive,\nmost of us at this point,\n\n18\n00:00:50.232 --> 00:00:54.596\nare going to be familiar with\nusing drives and Windows Explorer.\n\n19\n00:00:54.596 --> 00:00:59.996\nYou got your C drive, your D drive, your\nCD Rom drive, you plug in a USB drive.\n\n20\n00:00:59.996 --> 00:01:03.970\nThey get a drive letter and you can\naccess the file system that way, and\n\n21\n00:01:03.970 --> 00:01:06.780\nPowerShell drives\nare basically the same thing.\n\n22\n00:01:06.780 --> 00:01:12.310\nThere are pointers that we can\nset up to Datastore Locations.\n\n23\n00:01:12.310 --> 00:01:15.860\nBut notice, I said Datastore locations,\nnot file systems.\n\n24\n00:01:15.860 --> 00:01:19.610\nAnd that's because there's actually\nseveral providers that we can use\n\n25\n00:01:19.610 --> 00:01:21.900\nwhen creating PowerShell drives.\n\n26\n00:01:21.900 --> 00:01:25.790\nWe're not limited to\njust file system drives.\n\n27\n00:01:25.790 --> 00:01:26.670\nWe can still do that.\n\n28\n00:01:26.670 --> 00:01:30.550\nWere gonna have access to the C drive,\nand to the D drive,\n\n29\n00:01:30.550 --> 00:01:34.690\nto a Map drive,\nto a USB thumb drive, for example.\n\n30\n00:01:34.690 --> 00:01:36.670\nAll of that is still gonna\nbe available in Powershell.\n\n31\n00:01:36.670 --> 00:01:40.450\nWe create drives, for\nthose that are automatically created.\n\n32\n00:01:40.450 --> 00:01:44.492\nBut we can also create drives to\nthings like registries, right.\n\n33\n00:01:44.492 --> 00:01:46.850\nIt is another one of the providers and\n\n34\n00:01:46.850 --> 00:01:48.390\nI'll show you a couple of\nthe different providers.\n\n35\n00:01:48.390 --> 00:01:49.730\nBut those are the two big ones.\n\n36\n00:01:49.730 --> 00:01:51.650\nThe file system and the registry.\n\n37\n00:01:51.650 --> 00:01:55.526\nSo I can actually have\na PowerShell drive pointed to say,\n\n38\n00:01:55.526 --> 00:01:59.740\nHKEY local machine,\ncurrent user, so etc., etc., etc.\n\n39\n00:01:59.740 --> 00:02:00.720\nA particular key.\n\n40\n00:02:00.720 --> 00:02:03.090\nIn fact, there's a couple by default.\n\n41\n00:02:03.090 --> 00:02:04.990\nSo just when we talked\nabout PowerShell drives,\n\n42\n00:02:04.990 --> 00:02:10.150\nunderstand that there are pointers\nto data locations that we can\n\n43\n00:02:10.150 --> 00:02:15.340\nuse aliases or short names for\nto access from within PowerShell.\n\n44\n00:02:15.340 --> 00:02:17.430\nSo they don't have to be file-based.\n\n45\n00:02:17.430 --> 00:02:19.690\nIt does create a few for us by default.\n\n46\n00:02:19.690 --> 00:02:22.640\nSo let's take a look at\nwhat we get out of the box.\n\n47\n00:02:22.640 --> 00:02:25.169\nI've got my PowerShell window opened up.\n\n48\n00:02:26.200 --> 00:02:33.310\nAnd I'm simply gonna type in Get-PSDrive,\nand I'll hit Enter.\n\n49\n00:02:33.310 --> 00:02:37.180\nAnd these are all of the drives\nthat come out of the box.\n\n50\n00:02:37.180 --> 00:02:41.570\nAnd you'll see that it does a few,\nit creates one called Alias that points to\n\n51\n00:02:41.570 --> 00:02:46.760\naliases, and it's really an easy way to\nsee your aliases, we'll look at that.\n\n52\n00:02:46.760 --> 00:02:50.293\nThere's one for all of my drives\nthat finds in Windows Explorer.\n\n53\n00:02:50.293 --> 00:02:52.979\nSo anything here,\nany of my physical discs.\n\n54\n00:02:52.979 --> 00:02:58.140\nThere's one for C:,\nyou can see it's actually pointed to C:.\n\n55\n00:02:58.140 --> 00:03:00.710\nThere's one for my D drive.\n\n56\n00:03:00.710 --> 00:03:04.870\nIt also creates one going to\nmy Cert store, called Cert.\n\n57\n00:03:04.870 --> 00:03:07.960\nThese aliases, or the names over here,\nthis is what we're gonna\n\n58\n00:03:07.960 --> 00:03:11.200\nuse to access these drives,\nI'll show you how in just a minute.\n\n59\n00:03:11.200 --> 00:03:15.580\nBut there's one called Cert that\npoints to my Certificate store.\n\n60\n00:03:15.580 --> 00:03:20.190\nThere's one called ENV that points to my\nEnvironment variables for PowerShell.\n\n61\n00:03:20.190 --> 00:03:25.866\nThere's one for HKEY Current User,\nHKEY Local Machine, Variable, WSMan,\n\n62\n00:03:25.866 --> 00:03:31.210\nand oops, I thought I got rid of that but\nthere is one to a map drive as well.\n\n63\n00:03:31.210 --> 00:03:36.820\nI was actually gonna show you that in the\nshow but I forgot to unmap my drive and\n\n64\n00:03:36.820 --> 00:03:42.040\nso what you're seeing there is the fact\nthat because I have a mapped drive in\n\n65\n00:03:42.040 --> 00:03:47.780\nFile Explorer, it automatically added\nthat drive to my PowerShell session.\n\n66\n00:03:47.780 --> 00:03:49.120\nAnd that's kinda cool, right?\n\n67\n00:03:49.120 --> 00:03:53.140\nSo anything I've got mapped in\nFile Explorer is going to be automatically\n\n68\n00:03:53.140 --> 00:03:58.970\navailable within PowerShell\nusing my PS drive, right.\n\n69\n00:03:58.970 --> 00:04:04.800\nNow, we can get to these by simply using\ntheir name and then a colon behind it.\n\n70\n00:04:04.800 --> 00:04:10.358\nSo if I do, Set-Location,\nis actually the command.\n\n71\n00:04:10.358 --> 00:04:14.820\nSet-Location d:,\nyou'll see it takes me to d:.\n\n72\n00:04:14.820 --> 00:04:17.104\nAnd you might think, well Mike,\nthat's just a drive letter,\n\n73\n00:04:17.104 --> 00:04:18.150\nthat's not all that fancy.\n\n74\n00:04:18.150 --> 00:04:19.104\nIt's not.\n\n75\n00:04:19.104 --> 00:04:19.942\nSo, let's do another one.\n\n76\n00:04:19.942 --> 00:04:26.498\nSet-Location to env:,\n\n77\n00:04:29.053 --> 00:04:31.334\nAnd notice what my prompt says,\n\n78\n00:04:31.334 --> 00:04:36.080\nit says PS ENV:,\nthat's not a physical drive in my system.\n\n79\n00:04:36.080 --> 00:04:39.920\nLet's do a directory listing, and\nsee what we got in here, all right.\n\n80\n00:04:39.920 --> 00:04:44.150\nAnd notice I've got all of my\nenvironment variables, all right.\n\n81\n00:04:44.150 --> 00:04:47.330\nPath, path extension, OS,\n\n82\n00:04:47.330 --> 00:04:52.750\nall of my normal environment\nvariables show up, okay.\n\n83\n00:04:52.750 --> 00:04:57.090\nSo that's a PowerShell drive and\nhow we access them.\n\n84\n00:04:57.090 --> 00:05:01.602\nNow, I did Set-Location only\nbecause I wanted you to see\n\n85\n00:05:01.602 --> 00:05:06.490\nthe actual PowerShell command,\nbut we know about aliases and\n\n86\n00:05:06.490 --> 00:05:11.571\nlet's take a look,\nGet-Alias -Definition Set-Location.\n\n87\n00:05:11.571 --> 00:05:16.731\nAnd we'll see that they\nhave brought along the good\n\n88\n00:05:16.731 --> 00:05:23.950\nold school cd from our command line\ninterface or CLI Command prompt.\n\n89\n00:05:23.950 --> 00:05:26.760\nSo we can use that,\nthat's an alias for a set location.\n\n90\n00:05:26.760 --> 00:05:31.180\nSo is chdir,\nchange directory which is a Linux thing,\n\n91\n00:05:31.180 --> 00:05:33.690\nwe can use that, we can also use sl.\n\n92\n00:05:33.690 --> 00:05:38.637\nSo I can do just like I'm used\nto doing in the command prompt,\n\n93\n00:05:38.637 --> 00:05:43.002\nI can do cd hklm:, right,\nand that takes me out to and\n\n94\n00:05:43.002 --> 00:05:48.046\nI don't think I can actually get\na directory listing of that.\n\n95\n00:05:48.046 --> 00:05:52.157\nBut you can see, I'm in the hive:\nHKEY Local Machine, and I'm not\n\n96\n00:05:52.157 --> 00:05:57.370\nrunning this as a proper administrator,\nso I'm getting some access denied.\n\n97\n00:05:57.370 --> 00:05:58.630\nBut you see the idea, right?\n\n98\n00:05:58.630 --> 00:06:03.660\nSo you can use cd, just understand\nthat you're really using Set-Location.\n\n99\n00:06:03.660 --> 00:06:07.644\ncd is just an alias for that,\nbut it's a lot easier to type so\n\n100\n00:06:07.644 --> 00:06:09.497\nI still use it all day long.\n\n101\n00:06:09.497 --> 00:06:12.580\nAll right, so\nwe've got this that are built-in.\n\n102\n00:06:12.580 --> 00:06:16.784\nNow, let me change back to my C drive just\nbecause it kinda bothers me sitting there.\n\n103\n00:06:18.549 --> 00:06:22.206\nAll right, the other thing it'll\ndo is when you add drives, so\n\n104\n00:06:22.206 --> 00:06:26.680\nif I go map a new drive or I plug in\na thumb drive, let's see what happens.\n\n105\n00:06:26.680 --> 00:06:30.940\nI've got my thumb drive here, I'm gonna\nplug it into my system, give it just\n\n106\n00:06:30.940 --> 00:06:34.980\na second and we know that Windows will\npick it up, there it is right there.\n\n107\n00:06:34.980 --> 00:06:36.700\nBut what does PowerShell do?\n\n108\n00:06:36.700 --> 00:06:38.780\nSo, Get-PSDrive.\n\n109\n00:06:40.610 --> 00:06:46.340\nAnd we should see that I now have\nan E: representing that thumb drive.\n\n110\n00:06:46.340 --> 00:06:50.330\nSo drives that I map,\nexternal drives that I plug in,\n\n111\n00:06:50.330 --> 00:06:56.115\nwill automatically be made available\nthrough PowerShell using a Get-PSDrive.\n\n112\n00:06:58.220 --> 00:07:00.334\nNow, you can also create your own, right.\n\n113\n00:07:00.334 --> 00:07:03.690\nAnd this is what I find\nthe most useful with PSDrives.\n\n114\n00:07:03.690 --> 00:07:08.600\nI like having my physical disk map for\nme and any map drives that I have.\n\n115\n00:07:08.600 --> 00:07:11.275\nSo like this one's to a remote machine.\n\n116\n00:07:11.275 --> 00:07:16.000\nWell, that's very handy to have and I can\neven store some credentials in there.\n\n117\n00:07:16.000 --> 00:07:18.777\nAnd let's see if it will let me get to Z:.\n\n118\n00:07:18.777 --> 00:07:21.465\n[SOUND] Yeah, [SOUND] right.\n\n119\n00:07:21.465 --> 00:07:22.970\nSo there I'm doing,\n\n120\n00:07:22.970 --> 00:07:27.755\nand when I set up the map drive I\nactually stored those credentials.\n\n121\n00:07:27.755 --> 00:07:30.700\nBut we can also create our own drives,\n\n122\n00:07:30.700 --> 00:07:34.590\nand like I was saying,\nI do find this probably the most useful.\n\n123\n00:07:34.590 --> 00:07:36.050\nFor example I have a folder,\n\n124\n00:07:36.050 --> 00:07:40.040\nlet's change back to C: if I can\nget this to drop back to root here.\n\n125\n00:07:41.650 --> 00:07:45.920\nOn my C drive,\nI have a folder called Scripts, and\n\n126\n00:07:45.920 --> 00:07:48.100\nthis is where I keep all of my scripts.\n\n127\n00:07:48.100 --> 00:07:51.630\nI need to be able to access that so\nI can run scripts.\n\n128\n00:07:51.630 --> 00:07:55.670\nWell, instead of typing the path out,\nI can map a drive to that.\n\n129\n00:07:55.670 --> 00:08:03.322\nAnd to map a drive, instead of Get\nit's just going to be New-PSDrive.\n\n130\n00:08:03.322 --> 00:08:08.195\nAnd New-PSDrive and\nthen the syntax is going to be,\n\n131\n00:08:08.195 --> 00:08:11.313\nwhat the heck did I do in my notes.\n\n132\n00:08:11.313 --> 00:08:16.140\nWow, we're gonna call this one,\nwe'll give it a name.\n\n133\n00:08:16.140 --> 00:08:18.020\nI'm gonna call it scripts.\n\n134\n00:08:18.020 --> 00:08:20.730\nSo that'll be the actual alias for it.\n\n135\n00:08:20.730 --> 00:08:24.150\nWhat I wanna type in to\nget to this location?\n\n136\n00:08:24.150 --> 00:08:28.525\nAnd then we're gonna type in -PSProvider.\n\n137\n00:08:29.722 --> 00:08:34.000\nNow, PSProvider depends on what\nkind of drive you're trying to map.\n\n138\n00:08:34.000 --> 00:08:36.730\nRemember it doesn't have\nto be a file system.\n\n139\n00:08:36.730 --> 00:08:41.580\nSo as I tab, you can see that I\nhave registry, alias, environment,\n\n140\n00:08:41.580 --> 00:08:46.060\nfile system, function, variable,\nlists that we saw earlier.\n\n141\n00:08:46.060 --> 00:08:50.030\nSo I'm gonna get back to file system cuz\nthis is definitely a file system I wanna\n\n142\n00:08:50.030 --> 00:08:53.820\nuse the file system provider cuz I'm\naccessing a folder on a file system.\n\n143\n00:08:55.220 --> 00:08:58.190\nAnd then, -Root is what it points to.\n\n144\n00:08:58.190 --> 00:09:02.450\nWhat's the root that your trying\nto basically map for this drive?\n\n145\n00:09:02.450 --> 00:09:07.240\nAnd in my case that's going to be C:,\n\n146\n00:09:07.240 --> 00:09:11.310\nI'm gonna put it in quotes, but it has not\nspace so it should be fine without them.\n\n147\n00:09:11.310 --> 00:09:16.290\nScripts, end my quote, hit Enter,\nand I have a new drive.\n\n148\n00:09:16.290 --> 00:09:22.137\nSo if I type in scripts: [SOUND] oops,\nI forgot my cd there.\n\n149\n00:09:22.137 --> 00:09:29.460\ncd scripts:, it takes me right to that\nfolder that has all of my scripts.\n\n150\n00:09:29.460 --> 00:09:34.409\nRight, but I can, and you might think,\nwell, it's really more work typing than\n\n151\n00:09:34.409 --> 00:09:37.781\nmaybe just going to the C drive and\nnavigating down, but\n\n152\n00:09:37.781 --> 00:09:42.490\nI can start using that in scripts that\nI'm writing, right, and accessing.\n\n153\n00:09:42.490 --> 00:09:44.060\nI can use these map drives in there.\n\n154\n00:09:44.060 --> 00:09:46.340\nSo it works out really well.\n\n155\n00:09:46.340 --> 00:09:47.662\nSo creating new scripts, so\n\n156\n00:09:47.662 --> 00:09:50.544\njust New-PSDrive,\nif I want to do one to the registry.\n\n157\n00:09:50.544 --> 00:09:54.543\nRight, we could do a New-PSDrive,\n[SOUND] and\n\n158\n00:09:54.543 --> 00:09:59.874\nI'll give it a name of something like,\nlet's do cdkey,\n\n159\n00:09:59.874 --> 00:10:06.451\n[SOUND] I'm gonna go to the current\nversion in the registry, -PSProvider.\n\n160\n00:10:06.451 --> 00:10:09.489\nThis time it's gonna be registry\ninstead of file system,\n\n161\n00:10:09.489 --> 00:10:13.220\nlet me get it up to top of my screen and\nget that background out of the way.\n\n162\n00:10:13.220 --> 00:10:21.180\nThere's a New-PSDrive -Name cvkey\n-PSProvider Registry, and then -Root.\n\n163\n00:10:21.180 --> 00:10:25.492\nOkay, and this is where I'm gonna tell,\n\n164\n00:10:25.492 --> 00:10:29.210\nI wanna go into hklm\\software.\n\n165\n00:10:29.210 --> 00:10:30.450\nI got to remember this one.\n\n166\n00:10:30.450 --> 00:10:38.400\nMicrosoft\\windows\\current\n\n167\n00:10:38.400 --> 00:10:41.050\nversion.\n\n168\n00:10:41.050 --> 00:10:43.376\nAnd that does have a space,\nthat does not have a space.\n\n169\n00:10:43.376 --> 00:10:47.474\nCurrent version and the there we go.\n\n170\n00:10:47.474 --> 00:10:51.707\nSo I can do cd cvkey,\nand now I can a dir, and\n\n171\n00:10:51.707 --> 00:10:56.555\nthere's the entries out\nof my current version.\n\n172\n00:10:56.555 --> 00:11:01.018\nRight, so working with these\ndrives is pretty straightforward.\n\n173\n00:11:01.018 --> 00:11:04.933\n&gt;&gt; Now Mike, what would happen if you\nwere to close down the PowerShell and\n\n174\n00:11:04.933 --> 00:11:07.250\nthen let's say reopen your PowerShell?\n\n175\n00:11:07.250 --> 00:11:09.370\nWould these drives still remain behind?\n\n176\n00:11:09.370 --> 00:11:10.260\n&gt;&gt; That's a great question.\n\n177\n00:11:10.260 --> 00:11:11.280\nLet's find out.\n\n178\n00:11:11.280 --> 00:11:13.930\nLet's close PowerShell, open it back up.\n\n179\n00:11:15.870 --> 00:11:22.540\nAnd do a little Get-PSDrive,\nand see what we got.\n\n180\n00:11:24.040 --> 00:11:28.240\nAnd I have the E drive, right, that thumb\ndrive I plugged in still sitting there cuz\n\n181\n00:11:28.240 --> 00:11:30.460\nI haven't ejected that\nfrom my machine yet.\n\n182\n00:11:30.460 --> 00:11:35.230\nMy maps drive because that's persistent\nin Windows Explorer, that shows up.\n\n183\n00:11:35.230 --> 00:11:41.180\nBut notice my current version registry\nkey as well as my scripts folder,\n\n184\n00:11:41.180 --> 00:11:43.980\nthat mapping or that PS drive is gone.\n\n185\n00:11:43.980 --> 00:11:47.870\nSo to answer you question Wes,\nno, they're not persistent.\n\n186\n00:11:47.870 --> 00:11:52.370\nOkay, they're only good for that session\nand another thing, not only they're not\n\n187\n00:11:52.370 --> 00:11:56.630\npersistent, I can't access them\nanywhere other than in PowerShell.\n\n188\n00:11:56.630 --> 00:12:00.810\nSo like a mapped drive I can use\nprogramatically in other places,\n\n189\n00:12:00.810 --> 00:12:03.640\nwhen you create a PSDrive,\nit's only good for PowerShell.\n\n190\n00:12:03.640 --> 00:12:07.510\nI can't access that PSDrive from\nFile Explorer, for example.\n\n191\n00:12:07.510 --> 00:12:09.100\nOnly good within this session.\n\n192\n00:12:09.100 --> 00:12:12.240\n&gt;&gt; That begs the question, what would\nyou have to do to make it persistent,\n\n193\n00:12:12.240 --> 00:12:16.392\nto make it survive the shutting down\nof the PowerShell and then reopening?\n\n194\n00:12:16.392 --> 00:12:19.900\nSo good, another great question,\ncuz typically, that's what we want, right?\n\n195\n00:12:19.900 --> 00:12:23.400\nI mean, there might be sometimes where\nI temporarily need to access a bunch of\n\n196\n00:12:23.400 --> 00:12:28.500\nfiles in this folder, and\nI wanna go ahead and map a PS drive to it.\n\n197\n00:12:28.500 --> 00:12:31.972\nNone of it care if it's there the next\ntime, I just need it now, and\n\n198\n00:12:31.972 --> 00:12:36.030\nI'll just use my New-PSDrive commandlet,\nand we're good to go.\n\n199\n00:12:36.030 --> 00:12:41.670\nIf you want this to be persistent, then\nyou have to add it to your Profile, right?\n\n200\n00:12:41.670 --> 00:12:46.210\nBecause there's no switch, there's no\nparameter that I can add to the command,\n\n201\n00:12:46.210 --> 00:12:48.450\nthat says hey make this persistent.\n\n202\n00:12:48.450 --> 00:12:53.430\nBut what I can do is load it up in my\nProfile and every time I start PowerShell,\n\n203\n00:12:53.430 --> 00:12:57.260\nmy Profile gets read and\nit'll create those drives for me.\n\n204\n00:12:57.260 --> 00:12:58.640\nNow, we haven't talked about Profiles yet.\n\n205\n00:12:58.640 --> 00:13:02.060\nThey're actually coming up to the next\nepisode and I'll show you how to do that.\n\n206\n00:13:02.060 --> 00:13:04.051\nBut that's what you're gonna have to do,\nand\n\n207\n00:13:04.051 --> 00:13:06.290\nit's really a great\nreason to use Profiles.\n\n208\n00:13:06.290 --> 00:13:09.850\nBecause as a help desk person,\nright, or system admin.\n\n209\n00:13:09.850 --> 00:13:12.800\nYou're gonna have a folder scripts\nsomewhere that you can use\n\n210\n00:13:12.800 --> 00:13:17.140\non a regular basis and you're gonna\nwanna have easy access to those.\n\n211\n00:13:17.140 --> 00:13:21.012\nThat's a great reason\nto use this PS drive.\n\n212\n00:13:21.012 --> 00:13:25.579\nIt's also a great reason to add it to your\nProfile cuz I always want access to that\n\n213\n00:13:25.579 --> 00:13:26.820\nparticular folder.\n\n214\n00:13:26.820 --> 00:13:31.890\nSo to make it persistent,\nwe're gonna add it to our Profile.\n\n215\n00:13:33.280 --> 00:13:35.050\nAll right, let's see what else.\n\n216\n00:13:35.050 --> 00:13:36.700\nWe took a look at drives.\n\n217\n00:13:36.700 --> 00:13:38.130\nThe only other thing,\n\n218\n00:13:38.130 --> 00:13:43.670\nremoving a drive is relatively straight\nforward, you just remove -PSDrive.\n\n219\n00:13:43.670 --> 00:13:44.500\nBut let's add one,\n\n220\n00:13:44.500 --> 00:13:48.950\nbecause I've restarted my session, all\nthe ones I'd added are no longer there.\n\n221\n00:13:48.950 --> 00:13:50.151\nSo let's add a new one.\n\n222\n00:13:50.151 --> 00:13:53.433\nLet's do, New- you know what,\n\n223\n00:13:53.433 --> 00:13:58.620\nI'm sitting here,\nnot using my capabilities.\n\n224\n00:13:58.620 --> 00:14:03.540\nWhat did I map that to scripts,\nso lets see there\n\n225\n00:14:03.540 --> 00:14:08.310\nshould be another- I tried to use my fancy\nsearch and it did not work out for me.\n\n226\n00:14:08.310 --> 00:14:12.260\nLet's do control R and\nthen we'll go PSDrive, it has too many\n\n227\n00:14:14.290 --> 00:14:17.765\ncommands that start with that or have\nthat in it, so I'm just gonna up arrow.\n\n228\n00:14:17.765 --> 00:14:21.630\n&gt;&gt; [LAUGH]\n&gt;&gt; Sometimes, there we go.\n\n229\n00:14:23.270 --> 00:14:26.302\nAll right, so now,\nI should have Get-PSDrive.\n\n230\n00:14:26.302 --> 00:14:33.280\nI've got one that I just added for\nScripts, right there.\n\n231\n00:14:33.280 --> 00:14:40.720\nI'm gonna change over to a cd\nscripts: Enter, and now I'm at that.\n\n232\n00:14:40.720 --> 00:14:48.490\nTo remove a drive, is gonna be\nRemove-PSDrive and then the name.\n\n233\n00:14:48.490 --> 00:14:49.660\nThat's all it needs.\n\n234\n00:14:49.660 --> 00:14:54.090\nAnd I could leave out the name parameter,\njust type it, we'll just call it Scripts.\n\n235\n00:14:54.090 --> 00:14:56.995\nLet's hit Enter, and.\n\n236\n00:14:56.995 --> 00:14:58.570\nThere's some red text didn't we?\n\n237\n00:14:59.950 --> 00:15:01.330\nThere's a problem, right.\n\n238\n00:15:01.330 --> 00:15:04.520\nThat command is correct but yes.\n\n239\n00:15:04.520 --> 00:15:08.160\n&gt;&gt; I was gonna say, so that means that\nwhile you just can't remove them.\n\n240\n00:15:08.160 --> 00:15:10.542\nOnce they're there, they're there.\n\n241\n00:15:10.542 --> 00:15:11.290\n&gt;&gt; Nope.\n&gt;&gt; [LAUGH]\n\n242\n00:15:11.290 --> 00:15:13.100\n&gt;&gt; It's there until I get out of it.\n\n243\n00:15:13.100 --> 00:15:14.968\nAnd then I can remove it, right.\n\n244\n00:15:14.968 --> 00:15:15.491\n&gt;&gt; Aha.\n\n245\n00:15:15.491 --> 00:15:19.520\nYou see here, this one, cannot remove\ndrive scripts because it is in use.\n\n246\n00:15:19.520 --> 00:15:22.150\nCuz I'm currently in that drive.\n\n247\n00:15:22.150 --> 00:15:24.420\nI just wanted to show you,\nthat I did that intentionally.\n\n248\n00:15:24.420 --> 00:15:27.540\nYeah, you can't remove a drive\nthat's currently in use.\n\n249\n00:15:27.540 --> 00:15:33.340\nSo let's change over to C: and\nrerun that command and see what happens.\n\n250\n00:15:33.340 --> 00:15:34.990\nNow, I get no red text.\n\n251\n00:15:34.990 --> 00:15:40.520\nIf I do a Get-PSDrive,\nI'll see that scripts is gone.\n\n252\n00:15:40.520 --> 00:15:43.660\nSo removing them absolutely,\nwe can take them out of the session,\n\n253\n00:15:43.660 --> 00:15:48.570\nbut just remember you can't be,\nit can't be active while you're using it.\n\n254\n00:15:48.570 --> 00:15:50.490\nIt's funny cuz I wanted\nto show you that command,\n\n255\n00:15:50.490 --> 00:15:52.110\ncuz we need to know it's available.\n\n256\n00:15:52.110 --> 00:15:54.480\nAnd I'm sure there's gonna be\nsome times when you need it,\n\n257\n00:15:54.480 --> 00:15:57.206\nI couldn't think of any off the top of my\nhead when I was prepping the show like,\n\n258\n00:15:57.206 --> 00:15:59.250\nI don't want the drives anymore.\n\n259\n00:15:59.250 --> 00:16:00.360\nI just don't use them.\n\n260\n00:16:00.360 --> 00:16:03.180\nAnd when I close my session,\nI know they're gonna be gone anyway.\n\n261\n00:16:03.180 --> 00:16:06.880\nBut there might be a time when you need\nto remove a drive which you need if you\n\n262\n00:16:06.880 --> 00:16:08.390\nkeep that session open.\n\n263\n00:16:08.390 --> 00:16:11.850\nSo just so you know,\nthat is how you remove a drive.\n\n264\n00:16:11.850 --> 00:16:12.840\nAnd that's it.\n\n265\n00:16:12.840 --> 00:16:15.680\nThe other things like the-\n\n266\n00:16:15.680 --> 00:16:18.560\nI've never tried to remove a thumb drive,\nlet's try that.\n\n267\n00:16:18.560 --> 00:16:20.130\nLet's see what happens.\n\n268\n00:16:20.130 --> 00:16:21.410\nLet's get crazy.\n\n269\n00:16:21.410 --> 00:16:23.895\nLet's remove E.\n\n270\n00:16:23.895 --> 00:16:27.530\nAll right, so it's removed it.\n\n271\n00:16:27.530 --> 00:16:32.770\nIf I do a Get-PSDrive,\nyes, it's still there.\n\n272\n00:16:32.770 --> 00:16:33.800\nAll right?\n\n273\n00:16:33.800 --> 00:16:37.280\nBecause it's really, it's the operating,\nit's seeing it from the operating system.\n\n274\n00:16:37.280 --> 00:16:39.390\nSo it's still accessible, I think.\n\n275\n00:16:39.390 --> 00:16:42.650\nE:, yep.\n\n276\n00:16:42.650 --> 00:16:47.000\nI can get on there, and I can see\nall the information on that drive.\n\n277\n00:16:47.000 --> 00:16:50.850\nNow, if I try to eject it\nright now from Windows,\n\n278\n00:16:50.850 --> 00:16:53.810\nit should tell me that it's in use and\nnot allow me too.\n\n279\n00:16:53.810 --> 00:16:54.700\nLet's see what happens here.\n\n280\n00:16:56.610 --> 00:16:58.220\nWe'll test it out and make sure.\n\n281\n00:16:58.220 --> 00:16:59.680\nCan you go full screen?\n\n282\n00:17:01.080 --> 00:17:05.430\nI right clicked on it and\nsaid remove drive.\n\n283\n00:17:07.120 --> 00:17:09.740\nAlthough it does seem to have removed it,\ninteresting.\n\n284\n00:17:11.300 --> 00:17:13.030\nIt's gone from File Explorer.\n\n285\n00:17:13.030 --> 00:17:14.860\nI did not get my pop up message.\n\n286\n00:17:17.130 --> 00:17:19.070\nYeah, and\nPowerShell no longer has access to it.\n\n287\n00:17:19.070 --> 00:17:22.460\nSo Windows was actually able to pull\nthe rug out from under PowerShell and say,\n\n288\n00:17:22.460 --> 00:17:24.330\nhey, I don't care if you're in the drive.\n\n289\n00:17:24.330 --> 00:17:27.195\nI'm gonna remove it and\nyou can just deal with it.\n\n290\n00:17:27.195 --> 00:17:30.610\n[LAUGH] And so you can see PowerShell is\nnow giving me an issue because the drive I\n\n291\n00:17:30.610 --> 00:17:35.420\nam currently in is no longer there,\nall right?\n\n292\n00:17:35.420 --> 00:17:39.190\nSo PowerShell drives our\npointers to Datastore Locations,\n\n293\n00:17:39.190 --> 00:17:40.350\nnot just file systems.\n\n294\n00:17:40.350 --> 00:17:42.680\nIt could be the registry,\nit could be environment variables.\n\n295\n00:17:43.880 --> 00:17:48.408\nWe have several that are created by\ndefault, all of my drive letters,\n\n296\n00:17:48.408 --> 00:17:53.310\nmy environment variables,\nHKEY Local Machine, HKEY Current User.\n\n297\n00:17:53.310 --> 00:17:55.185\nAnd a few others that we saw there.\n\n298\n00:17:55.185 --> 00:17:58.000\nGet-PSDrive allows me to list those.\n\n299\n00:17:58.000 --> 00:18:02.787\nAny map drives that I have,\nany, Hard drive or volumes that\n\n300\n00:18:02.787 --> 00:18:06.670\nI have in my file system and the operating\nsystem, those are gonna be there.\n\n301\n00:18:06.670 --> 00:18:07.460\nWe can create new ones.\n\n302\n00:18:07.460 --> 00:18:09.620\nIf we plug a thumb drive in,\nit automatically picks it up.\n\n303\n00:18:09.620 --> 00:18:14.180\nWe can create new ones with that create,\nor I’m sorry, New-PSDrive.\n\n304\n00:18:14.180 --> 00:18:16.360\nJust remember that they're temporary.\n\n305\n00:18:16.360 --> 00:18:20.460\nAnd as soon as I close that session out,\nI lose access to those drives.\n\n306\n00:18:20.460 --> 00:18:21.870\nI can recreate them.\n\n307\n00:18:21.870 --> 00:18:26.765\nAnd I can remove them before I close\nthe session using a Remove-PSDrive.\n\n308\n00:18:26.765 --> 00:18:29.945\nIf I want them to be persistent,\nI need add them to my Profile,\n\n309\n00:18:29.945 --> 00:18:32.995\nwhich we are going to talk\nabout in our next episode.\n\n310\n00:18:32.995 --> 00:18:34.705\n&gt;&gt; Alright Mike,\nthat's a great place to wrap up.\n\n311\n00:18:34.705 --> 00:18:37.335\nI look forward to seeing you\nin the Profiles episode and\n\n312\n00:18:37.335 --> 00:18:39.852\nwe appreciate having you,\nthe viewer watching.\n\n313\n00:18:39.852 --> 00:18:41.362\nRemember you can check this episode and\n\n314\n00:18:41.362 --> 00:18:46.102\nthousands of hours of great content,\nby jumping over to our course library.\n\n315\n00:18:46.102 --> 00:18:48.912\nRemember, until we see you again,\nsigning out for ITProTV.\n\n316\n00:18:48.912 --> 00:18:50.422\nI've been your host Wes Bryan.\n\n317\n00:18:50.422 --> 00:18:51.342\n&gt;&gt; And I'm Mike Rodrick.\n\n318\n00:18:51.342 --> 00:18:52.404\n&gt;&gt; And we'll see you next time.\n\n319\n00:18:52.404 --> 00:18:59.386\n[MUSIC]\n\n320\n00:18:59.386 --> 00:19:02.079\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "237985169"
        },
        {
          "description": "In this episode, Mike and Cherokee look at PowerShell profiles. They explain the different profiles that PowerShell uses, and demonstrate creating a profile.",
          "length": "1762",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-1-powershell_profiles-101217-PGM.00_29_07_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-1-powershell_profiles-101217-PGM.00_29_07_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-1-powershell_profiles-101217-PGM.00_29_07_18.Still001-sm.jpg",
          "title": "Profiles",
          "transcript": "WEBVTT\n\n1\n00:00:00.008 --> 00:00:03.794\nWelcome to ITPro.TV,\nI'm your host Don Pizzete.\n\n2\n00:00:03.794 --> 00:00:08.424\n&gt;&gt; [CROSSTALK]\n\n3\n00:00:08.424 --> 00:00:12.022\n&gt;&gt; You're watching ITPro.TV.\n\n4\n00:00:12.022 --> 00:00:13.691\n&gt;&gt; Welcome to your PowerShell series.\n\n5\n00:00:13.691 --> 00:00:15.690\nI'm your show host Cherokee Boose.\n\n6\n00:00:15.690 --> 00:00:19.640\nIn this episode we'll be taking\na look at PowerShell profiles.\n\n7\n00:00:19.640 --> 00:00:23.050\nAnd with us today in studios,\nwe have Mr. Mike Rodrick.\n\n8\n00:00:23.050 --> 00:00:24.490\nThank you for joining us today, Mike.\n\n9\n00:00:24.490 --> 00:00:26.130\n&gt;&gt; Hey, Cherokee,\nthanks for having me back.\n\n10\n00:00:26.130 --> 00:00:30.290\nGlad to be here and excited cuz yeah,\ntoday we are talking about profiles.\n\n11\n00:00:30.290 --> 00:00:33.857\nAnd it is one of the things I know\na lot of people ask me about.\n\n12\n00:00:33.857 --> 00:00:36.835\nAnd it's what's a good way to say it?\n\n13\n00:00:36.835 --> 00:00:39.664\nWhen we're talking about, well I guess we\nshould just start by talking about what\n\n14\n00:00:39.664 --> 00:00:40.741\nthe heck a profile is, right?\n\n15\n00:00:40.741 --> 00:00:42.734\n&gt;&gt; Yeah, we're not talking about\nMySpace pages or anything like that.\n\n16\n00:00:42.734 --> 00:00:44.851\n&gt;&gt; No, no, no, although we could.\n\n17\n00:00:44.851 --> 00:00:46.675\n&gt;&gt; [LAUGH] If that's even still a thing.\n\n18\n00:00:46.675 --> 00:00:47.542\n&gt;&gt; Is it still, I don't know.\n\n19\n00:00:47.542 --> 00:00:48.731\n&gt;&gt; I don't think so, I don't know.\n\n20\n00:00:48.731 --> 00:00:49.310\n&gt;&gt; No?\n\n21\n00:00:49.310 --> 00:00:50.343\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH]\n\n22\n00:00:50.343 --> 00:00:52.441\n&gt;&gt; I know I'm such a social media,\n\n23\n00:00:52.441 --> 00:00:54.485\nno I'm just kidding.\n\n24\n00:00:54.485 --> 00:00:57.531\nBut yes, so not profiles like that.\n\n25\n00:00:57.531 --> 00:01:00.604\nNot a dating profiles as you\nwanna put in any of those sites.\n\n26\n00:01:00.604 --> 00:01:03.054\nBut the PowerShell profiles right?\n\n27\n00:01:03.054 --> 00:01:07.690\nSo when we launch PowerShell we get\ninterface it's pretty default, right?\n\n28\n00:01:07.690 --> 00:01:10.111\nIn fact let's just take\na look at my screen here.\n\n29\n00:01:10.111 --> 00:01:15.350\nThis actually isn't the default I've\nchanged it just a little bit so\n\n30\n00:01:15.350 --> 00:01:18.580\nthat I could present to y'all here.\n\n31\n00:01:18.580 --> 00:01:22.957\nBecause the font is normally a little\nbit smaller and it's not that color.\n\n32\n00:01:22.957 --> 00:01:24.294\nIt's not even the same font style.\n\n33\n00:01:24.294 --> 00:01:27.070\nSo there are a couple of\nthings that I have changed.\n\n34\n00:01:27.070 --> 00:01:32.425\nBut when we talk about a profile, we're\ntalking about a way to store settings and\n\n35\n00:01:32.425 --> 00:01:37.022\nother things, that I want to happen\nevery time I launch PowerShell.\n\n36\n00:01:37.022 --> 00:01:38.844\nThat's really the idea behind a profile.\n\n37\n00:01:38.844 --> 00:01:43.544\nIt's customizing the interface,\nIt's getting the tools or the modules or\n\n38\n00:01:43.544 --> 00:01:47.597\nwhatever I need that I normally\nuse ready for me at my fingertips.\n\n39\n00:01:47.597 --> 00:01:49.770\nAnd that's the idea behind profiles.\n\n40\n00:01:49.770 --> 00:01:52.780\nSounds really simple,\nand it is in one way but\n\n41\n00:01:52.780 --> 00:01:57.390\nit's also a little bit complex\nbecause of the way we have these.\n\n42\n00:01:57.390 --> 00:02:00.400\nWe have multiple profiles\nwhich is something\n\n43\n00:02:00.400 --> 00:02:02.828\nthat we're gonna have to talk about.\n\n44\n00:02:02.828 --> 00:02:06.330\n&gt;&gt; So it might not just be best\nto change my background to pink,\n\n45\n00:02:06.330 --> 00:02:10.090\nbut if I really were using it functionally\nit would probably be a good idea if I-\n\n46\n00:02:10.090 --> 00:02:11.770\n&gt;&gt; Yeah, absolutely, and\n\n47\n00:02:11.770 --> 00:02:13.845\nif pink makes you a better more efficient\n&gt;&gt; [LAUGH]\n\n48\n00:02:13.845 --> 00:02:15.818\n&gt;&gt; Worker, then by all means.\n\n49\n00:02:15.818 --> 00:02:17.245\nOr if it just makes you happy, right?\n\n50\n00:02:17.245 --> 00:02:20.725\nI mean, heck, it doesn't mean, you don't\nhave to stick with the blue background and\n\n51\n00:02:20.725 --> 00:02:21.225\nthe gray slacks.\n\n52\n00:02:21.225 --> 00:02:22.375\n&gt;&gt; But\nthen you'd have to get a pink shirt,\n\n53\n00:02:22.375 --> 00:02:24.123\nbecause we're all matching and\neverything here.\n\n54\n00:02:24.123 --> 00:02:25.095\n[LAUGH]\n&gt;&gt; That's true.\n\n55\n00:02:25.095 --> 00:02:27.327\nWe would both have to do the same thing.\n\n56\n00:02:27.327 --> 00:02:28.262\nBut, you know, that's the idea.\n\n57\n00:02:28.262 --> 00:02:29.746\nAdd a little personalization to it.\n\n58\n00:02:29.746 --> 00:02:32.231\nNot all of it has to be functional, and\n\n59\n00:02:32.231 --> 00:02:33.911\nhas to be something\n&gt;&gt; [LAUGH]\n\n60\n00:02:33.911 --> 00:02:35.519\n&gt;&gt; That's going to make my system run\n\n61\n00:02:35.519 --> 00:02:37.740\nbetter, or make my scripts run better.\n\n62\n00:02:37.740 --> 00:02:40.362\nWe can do some of it just because I\nhave to stare at this all day long, and\n\n63\n00:02:40.362 --> 00:02:42.326\nI want to be happy all right\nwhen I'm doing my job so.\n\n64\n00:02:42.326 --> 00:02:46.349\n&gt;&gt; [LAUGH] You make it sound so serious,\n\n65\n00:02:46.349 --> 00:02:49.856\nI should lighten up too and just\n&gt;&gt; Yeah\n\n66\n00:02:49.856 --> 00:02:50.642\n[LAUGH]\n&gt;&gt; Yeah.\n\n67\n00:02:50.642 --> 00:02:54.686\n[CROSSTALK] What if it had little\ncurly cue font and everything.\n\n68\n00:02:54.686 --> 00:02:55.937\n&gt;&gt; Well it might be heard a read though,\nif that floats your boat, right?\n\n69\n00:02:55.937 --> 00:02:57.372\n&gt;&gt; It would be hard to read.\n\n70\n00:02:57.372 --> 00:02:59.879\n[LAUGH]\n&gt;&gt; Why we change our back ground on\n\n71\n00:02:59.879 --> 00:03:04.441\nour computers and things like that and\nour lock screen pictures or whatever?\n\n72\n00:03:04.441 --> 00:03:06.980\nIt's just to give it a little\nbit personalization.\n\n73\n00:03:06.980 --> 00:03:09.780\nAnd that's what profiles,\nit does allow me to do that.\n\n74\n00:03:09.780 --> 00:03:11.737\nAgain it's not the purpose of the profile.\n\n75\n00:03:11.737 --> 00:03:16.296\nIt really is to add functionality and\ncustomization but\n\n76\n00:03:16.296 --> 00:03:21.352\nnothing wrong with making things\nfit your Style, all right?\n\n77\n00:03:21.352 --> 00:03:22.450\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] We're gonna\n\n78\n00:03:22.450 --> 00:03:25.090\nhave you hosting the Home and\nGarden channel.\n\n79\n00:03:25.090 --> 00:03:26.700\n&gt;&gt; I know.\n[LAUGH]\n\n80\n00:03:26.700 --> 00:03:28.623\n&gt;&gt; You gotta make sure that your color\n\n81\n00:03:28.623 --> 00:03:30.289\npalate goes with the season.\n\n82\n00:03:30.289 --> 00:03:31.703\n&gt;&gt; [LAUGH]\n&gt;&gt; I mean,\n\n83\n00:03:31.703 --> 00:03:35.254\nyou do not want to use blue\nfonts in the winter time,\n\n84\n00:03:35.254 --> 00:03:37.402\nit's just a no nom [LAUGH]\n&gt;&gt; Alright, so\n\n85\n00:03:37.402 --> 00:03:39.037\nhow do we go ahead\ncreating these profiles or\n\n86\n00:03:39.037 --> 00:03:42.070\nare there some more degraded that I have\nto select, and what's the deal here?\n\n87\n00:03:42.070 --> 00:03:44.340\n&gt;&gt; Great question, and\nI'm gonna answer that but\n\n88\n00:03:44.340 --> 00:03:47.080\nI do want to cover one other thing first,\nbut let's do this.\n\n89\n00:03:47.080 --> 00:03:50.400\nThe short answer for yours is yes,\nwe're going to create some.\n\n90\n00:03:50.400 --> 00:03:52.350\n&gt;&gt; Okay.\n&gt;&gt; No, there aren't any to start with.\n\n91\n00:03:52.350 --> 00:03:53.388\n&gt;&gt; Okay.\n&gt;&gt; All right, so\n\n92\n00:03:53.388 --> 00:03:56.370\nwe don't have anything yet and\nthat's what I've got, but.\n\n93\n00:03:56.370 --> 00:04:00.310\nSo you might ask yourself well I thought\nif you don't have any profiles how did you\n\n94\n00:04:00.310 --> 00:04:01.170\nmake these changes?\n\n95\n00:04:01.170 --> 00:04:04.420\nDidn't you say you changed the font,\nand the color and all of that?\n\n96\n00:04:04.420 --> 00:04:07.491\nAnd I did all right, but\nI didn't do it with a profile.\n\n97\n00:04:07.491 --> 00:04:11.335\nJust like in most applications\nPowerShell has settings right?\n\n98\n00:04:11.335 --> 00:04:16.340\nThere's registries where it keeps certain\nsettings and we can configure those.\n\n99\n00:04:16.340 --> 00:04:18.230\nIf I right click,\n\n100\n00:04:18.230 --> 00:04:20.780\nthis is actually something I\nlearned from Don the other day.\n\n101\n00:04:20.780 --> 00:04:23.300\nYou can right click on this title bar and\nyou get this menu.\n\n102\n00:04:23.300 --> 00:04:26.104\nAnd I tell you,\nit seems like one of those simple things.\n\n103\n00:04:26.104 --> 00:04:27.756\nI have always, for\nthe fifteen years I've been doing this,\n\n104\n00:04:27.756 --> 00:04:29.082\n&gt;&gt; Click the icon?\n\n105\n00:04:29.082 --> 00:04:31.030\n&gt;&gt; Me too.\n&gt;&gt; Just normal click,\n\n106\n00:04:31.030 --> 00:04:32.232\nleft click\n&gt;&gt; [LAUGH]\n\n107\n00:04:32.232 --> 00:04:34.940\n&gt;&gt; On the icon over here the upper corner.\n\n108\n00:04:34.940 --> 00:04:38.066\nAnd I've never realized you can actually\nright click anywhere on the title bar.\n\n109\n00:04:38.066 --> 00:04:40.326\nI don't think I've ever tried,\nyeah Too funny.\n\n110\n00:04:40.326 --> 00:04:41.072\n&gt;&gt; Crazy, right?\n\n111\n00:04:41.072 --> 00:04:43.122\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] Just one of those say just like\n\n112\n00:04:43.122 --> 00:04:44.460\ndidn't know that was there.\n\n113\n00:04:44.460 --> 00:04:45.185\n&gt;&gt; Mind blown.\n\n114\n00:04:45.185 --> 00:04:49.830\n&gt;&gt; [LAUGH] Yeah, anyway, whether you\nclick on the little PowerShell icon, or\n\n115\n00:04:49.830 --> 00:04:51.550\nyou right-click anywhere\non your title bar,\n\n116\n00:04:51.550 --> 00:04:54.650\nyou'll see the options for\nproperties, right?\n\n117\n00:04:54.650 --> 00:04:57.970\nAnd that opens up your\nWindows PowerShell Properties.\n\n118\n00:04:57.970 --> 00:05:02.690\nFour tabs, I've got my Options, in which\nI honestly don't change much of this.\n\n119\n00:05:02.690 --> 00:05:06.800\nBut it's where you can change\nyour insert mode sand edit modes.\n\n120\n00:05:06.800 --> 00:05:10.339\nWhere when you type, if you go and move\nyour cursor to the middle of the line and\n\n121\n00:05:10.339 --> 00:05:12.039\nyou start typing, does it cover up?\n\n122\n00:05:12.039 --> 00:05:14.130\nDoes it replace text as you type?\n\n123\n00:05:14.130 --> 00:05:17.169\nOr does it bump everything over and\nput new characters in there?\n\n124\n00:05:17.169 --> 00:05:19.390\nYeah, that's dealing with our insert mode.\n\n125\n00:05:19.390 --> 00:05:21.247\nEnable control key shortcuts.\n\n126\n00:05:21.247 --> 00:05:24.529\nThat's cuz now we can do our Ctrl+C and\nour Ctrl+V and\n\n127\n00:05:24.529 --> 00:05:27.250\nCtrl+X and things like that in PowerShell.\n\n128\n00:05:27.250 --> 00:05:31.280\nIf that causes problems with our other\napplications, maybe you turn that off.\n\n129\n00:05:31.280 --> 00:05:33.060\nFilter clipboard, things like that.\n\n130\n00:05:33.060 --> 00:05:36.830\nLike I said,\nI don't mess with this screen too much.\n\n131\n00:05:36.830 --> 00:05:40.015\nBut on the font tab,\nI definitely do because of what I do.\n\n132\n00:05:40.015 --> 00:05:44.384\nBecause of the fact that I present or you\npresent on screen the default is not quite\n\n133\n00:05:44.384 --> 00:05:46.945\nbig enough,\nit's a little bit hard to read.\n\n134\n00:05:46.945 --> 00:05:50.151\n&gt;&gt; Or if you're just blind like me and\nneed all the extra help you can get.\n\n135\n00:05:50.151 --> 00:05:51.385\n[LAUGH]\n&gt;&gt; Absolutely but\n\n136\n00:05:51.385 --> 00:05:54.900\nI do a lot of my studying and\nmy work at night on this.\n\n137\n00:05:54.900 --> 00:05:58.094\nSitting on the couch and\nyou've already been working all day so\n\n138\n00:05:58.094 --> 00:06:01.839\nyour eyes are tired and it's really\nhard to focus on that font sometimes.\n\n139\n00:06:01.839 --> 00:06:02.631\n[COUGH] Excuse me.\n\n140\n00:06:02.631 --> 00:06:05.160\nWell you can definitely come in here and\npretty straightforward right?\n\n141\n00:06:05.160 --> 00:06:08.268\nFont size I think we\nall grasp what that is.\n\n142\n00:06:08.268 --> 00:06:11.821\nFont family or down here you can pick one.\n\n143\n00:06:11.821 --> 00:06:15.139\nI love just to tell you\nwhat I use if you care,\n\n144\n00:06:15.139 --> 00:06:16.196\n&gt;&gt; [LAUGH]\n\n145\n00:06:16.196 --> 00:06:16.908\n&gt;&gt; Lucida Console,\n\n146\n00:06:16.908 --> 00:06:18.620\nI don't know if I say that right.\n\n147\n00:06:18.620 --> 00:06:22.680\nBut that one is a nice sans serif font,\nno little feet and\n\n148\n00:06:22.680 --> 00:06:25.240\nlegs and things like that,\nso it's nice and clean.\n\n149\n00:06:25.240 --> 00:06:28.870\nAnd I do it 18 font size.\n\n150\n00:06:28.870 --> 00:06:31.773\nBut choose what you want, if you wanna\nmake it bold, right, you can make it bold.\n\n151\n00:06:31.773 --> 00:06:34.230\nAnd of course,\nthere's all these fonts to choose from.\n\n152\n00:06:34.230 --> 00:06:36.010\nThey don't give you Comic Sans,\n\n153\n00:06:36.010 --> 00:06:36.660\nunfortunately\n&gt;&gt; [LAUGH]\n\n154\n00:06:36.660 --> 00:06:37.740\n&gt;&gt; As a choice.\n\n155\n00:06:37.740 --> 00:06:40.100\nSo we're out of luck there.\n\n156\n00:06:40.100 --> 00:06:45.090\nAll right, so I can change my font size,\nI can change the layout.\n\n157\n00:06:45.090 --> 00:06:49.480\nAnd I do this because I'm not a fan\nof the horizontal scroll bar.\n\n158\n00:06:49.480 --> 00:06:52.700\nI don't mind scrolling vertically and\nto do that and just about everything.\n\n159\n00:06:52.700 --> 00:06:55.504\nWe want pages that are longer\nthan my screen, that's fine.\n\n160\n00:06:55.504 --> 00:06:59.572\nI do not like having to\nscroll horizontally, and so\n\n161\n00:06:59.572 --> 00:07:01.468\nI will change my width.\n\n162\n00:07:01.468 --> 00:07:05.029\nNow, when you're working with the width\nin here you got two different ones.\n\n163\n00:07:05.029 --> 00:07:08.930\nI've got the screen buffer\nsize versus the window size.\n\n164\n00:07:08.930 --> 00:07:10.540\nWindow size is the easy when understand.\n\n165\n00:07:10.540 --> 00:07:14.600\nThat's telling me how big is the actual\nPowerShell window on my desktop and\n\n166\n00:07:14.600 --> 00:07:16.910\nI've got it a hundred pixels wide here,\n\n167\n00:07:16.910 --> 00:07:19.790\nwhatever their measuring\nthis in by 30 high.\n\n168\n00:07:19.790 --> 00:07:23.380\nSo that's the physical, that's\nthe actual dimensions of the window.\n\n169\n00:07:23.380 --> 00:07:27.980\nThe buffer is how much\ninfo PowerShell can store.\n\n170\n00:07:27.980 --> 00:07:30.992\nSo you see my buffer for\nthe height is 3,000.\n\n171\n00:07:30.992 --> 00:07:33.660\nThat's why I have this scroll bar here.\n\n172\n00:07:33.660 --> 00:07:39.771\nBecause even though my screen is only\nthirty high, it can actually store 3,000.\n\n173\n00:07:39.771 --> 00:07:41.335\nSo there's a lot more or could be.\n\n174\n00:07:41.335 --> 00:07:44.873\nNow when I list all the processes, and\nthings like that, and it scrolls off,\n\n175\n00:07:44.873 --> 00:07:46.462\nthat's why it can scroll back up.\n\n176\n00:07:46.462 --> 00:07:50.881\nBecause my buffer holds 3,000 I don't\nwant to call them lines, it's not lines.\n\n177\n00:07:50.881 --> 00:07:54.950\nBut we can just call it pixels for\nnow.I'm not exactly sure what it measures.\n\n178\n00:07:54.950 --> 00:07:55.883\n&gt;&gt; Units of measurement.\n\n179\n00:07:55.883 --> 00:07:56.671\n[LAUGH]\n&gt;&gt; Units of measurement.\n\n180\n00:07:56.671 --> 00:07:58.536\nYeah, all right.\n\n181\n00:07:58.536 --> 00:08:03.104\nSo the point of this was if my buffer\nis larger than my width Right.\n\n182\n00:08:03.104 --> 00:08:05.000\n&gt;&gt; Don't you want them to\nkind of jive up together?\n\n183\n00:08:05.000 --> 00:08:06.771\n&gt;&gt; I do.\n\n184\n00:08:06.771 --> 00:08:09.000\nI thought, some people might not\nif they don't mind scrolling.\n\n185\n00:08:09.000 --> 00:08:12.830\nLike if I change this to 150 and\nI click okay, you'll\n\n186\n00:08:12.830 --> 00:08:17.630\nsee now my window size didn't change but\nall the sudden I have this scroll bar.\n\n187\n00:08:17.630 --> 00:08:19.290\nSo now when I start typing.\n\n188\n00:08:21.580 --> 00:08:22.710\nIt's going to go right past there and\n\n189\n00:08:22.710 --> 00:08:25.570\nscroll over before it returns\ndown to the next line.\n\n190\n00:08:25.570 --> 00:08:28.710\nSo if I wanna see everything I\ngotta scroll back and forth.\n\n191\n00:08:28.710 --> 00:08:34.520\nSo what I suggest and what I like to\ndo is decide what physical size I want.\n\n192\n00:08:34.520 --> 00:08:35.710\nThat's what I did first.\n\n193\n00:08:35.710 --> 00:08:39.148\nDo you like 100, does that look good on\nyour screen, is that the way you want it?\n\n194\n00:08:39.148 --> 00:08:42.900\nIf you get a really high resolution,\nyou might go 150,\n\n195\n00:08:42.900 --> 00:08:45.700\n180, but figure out how big\nyou want your window, and\n\n196\n00:08:45.700 --> 00:08:50.550\nthen make your buffer match that,\nas far as the width goes, right?\n\n197\n00:08:50.550 --> 00:08:55.150\nSo, I'll set my window size and then\nI'll set my buffer size, to be the same.\n\n198\n00:08:55.150 --> 00:08:58.840\nHeight, I don't care, I want more buffer\nthan I have height, that's fine with me,\n\n199\n00:08:58.840 --> 00:09:02.370\ncuz I don't mind scrolling vertically,\nall right?\n\n200\n00:09:02.370 --> 00:09:05.590\nThe window position is just\nthe starting position.\n\n201\n00:09:05.590 --> 00:09:10.270\nLike it's set to 60 and\n33 right now, so if I click OK, and\n\n202\n00:09:10.270 --> 00:09:14.410\nI close this, and\nI open it back up, It's 60 over and\n\n203\n00:09:14.410 --> 00:09:18.850\n30 down from the top left\nhand corner of my desktop.\n\n204\n00:09:18.850 --> 00:09:23.540\nSo if I wanted to change that, you can\ngo back into those properties there.\n\n205\n00:09:23.540 --> 00:09:26.810\nAnd if I wanted to start out lower or\nhigher or\n\n206\n00:09:26.810 --> 00:09:29.290\nagain, if you have a larger monitor.\n\n207\n00:09:29.290 --> 00:09:31.080\nHigher resolution.\n\n208\n00:09:31.080 --> 00:09:35.024\nWe can move that instead of 60,\nwe do 100 just to make a big difference.\n\n209\n00:09:35.024 --> 00:09:38.750\n&gt;&gt; I don't know why I thought of this,\nbut have you ever seen people's browsers?\n\n210\n00:09:38.750 --> 00:09:42.310\nWhere they have all that additional\nadware slash malware installed and\n\n211\n00:09:42.310 --> 00:09:43.681\nthey have multiple lines.\n\n212\n00:09:43.681 --> 00:09:44.441\n&gt;&gt; Yes, yeah.\n\n213\n00:09:44.441 --> 00:09:45.406\n[LAUGH]\n&gt;&gt; It's like,\n\n214\n00:09:45.406 --> 00:09:47.800\nmaybe you still wanna see all of that so\nyou make your lines.\n\n215\n00:09:47.800 --> 00:09:52.410\nHopefully an admin doesn't cap all those.\n\n216\n00:09:52.410 --> 00:09:55.860\n&gt;&gt; You see it started out a little bit\nfurther over a little bit further down.\n\n217\n00:09:55.860 --> 00:09:59.010\nSo just play around with those\nnumbers until you get it to where\n\n218\n00:09:59.010 --> 00:10:00.920\nyou want it, right?\n\n219\n00:10:00.920 --> 00:10:04.180\nSo that was all done on that layout tab.\n\n220\n00:10:04.180 --> 00:10:10.160\nYou can do wrap text output on resize and\nwhat that's referring to is, if I,\n\n221\n00:10:10.160 --> 00:10:15.730\nI turn that on and right now it\nshould roll over, right, like that.\n\n222\n00:10:15.730 --> 00:10:17.630\nBut if I go and resize my window.\n\n223\n00:10:18.780 --> 00:10:21.760\nNotice how the screen,\nthe text isn't being hidden.\n\n224\n00:10:21.760 --> 00:10:23.470\nIt's actually wrapping, right?\n\n225\n00:10:23.470 --> 00:10:27.140\nIt's increasing that third line cuz\nsome of the a's are getting rolled down.\n\n226\n00:10:27.140 --> 00:10:28.604\nOnto that, if I uncheck that-\n&gt;&gt; To conform to that shape,\n\n227\n00:10:28.604 --> 00:10:29.363\nthat's pretty cool.\n\n228\n00:10:29.363 --> 00:10:30.811\n&gt;&gt; What's that?\n&gt;&gt; To conform to that shape.\n\n229\n00:10:30.811 --> 00:10:33.388\n&gt;&gt; Yeah, so\nI don't get a scroll bar, and again,\n\n230\n00:10:33.388 --> 00:10:35.545\nI don't like horizontal scroll bars.\n\n231\n00:10:35.545 --> 00:10:38.100\n&gt;&gt; [LAUGH]\n&gt;&gt; I don't get a scroll bar even if I try\n\n232\n00:10:38.100 --> 00:10:42.530\nto resize the window, right,\nI still don't get that scroll bar.\n\n233\n00:10:42.530 --> 00:10:46.409\nWhereas if I don't choose that option,\nwe'll go back to Layout, and\n\n234\n00:10:46.409 --> 00:10:47.830\nI uncheck that.\n\n235\n00:10:47.830 --> 00:10:51.490\nAnd now if I go to Resize,\nIt's not going to wrap the text.\n\n236\n00:10:51.490 --> 00:10:55.330\nIt's just gonna give me a scroll bar and\nsay, you're on your own.\n\n237\n00:10:55.330 --> 00:10:56.780\nSo, I don't like to horizontally scroll.\n\n238\n00:10:56.780 --> 00:10:58.957\nYou think I would keep that checked and\n\n239\n00:10:58.957 --> 00:11:02.427\nI typically don't because I\nrarely shrink my window down but\n\n240\n00:11:02.427 --> 00:11:06.459\nI probably should keep that checked\nto make myself happy, all right.\n\n241\n00:11:06.459 --> 00:11:10.379\nAnd now you can see that I've resized\nthe window manually, and notice my numbers\n\n242\n00:11:10.379 --> 00:11:14.543\nare off, and this is why I always uncheck\nthis, because I can't change that buffer.\n\n243\n00:11:14.543 --> 00:11:18.419\nIf you're wrapping the text, it doesn't\nmatter what the buffer is set to because\n\n244\n00:11:18.419 --> 00:11:21.171\nit's never gonna go to the edge\nof the PowerShell window,\n\n245\n00:11:21.171 --> 00:11:24.238\nit's just gonna roll it over, so\nthere's no need for a buffer.\n\n246\n00:11:24.238 --> 00:11:28.114\nSo I'm gonna uncheck this and\nset this back the way I wanted,\n\n247\n00:11:28.114 --> 00:11:31.839\nI'm gonna do 100 by 30,\nI got 100 by 3,000.\n\n248\n00:11:31.839 --> 00:11:36.010\nAnd I am good to go, I don't care about my\nwindows start position unless it bugs me.\n\n249\n00:11:37.262 --> 00:11:38.740\nAll right, and then last but\n\n250\n00:11:38.740 --> 00:11:42.610\nnot least is colors, pretty\nstraightforward here, do what you want.\n\n251\n00:11:42.610 --> 00:11:45.060\nI'm not gonna give you any\nadvice as to what color to use.\n\n252\n00:11:45.060 --> 00:11:46.830\n&gt;&gt; [LAUGH]\n&gt;&gt; But do be careful,\n\n253\n00:11:46.830 --> 00:11:50.801\nthis is the one thing I will tell\npeople Is that when you come in here,\n\n254\n00:11:50.801 --> 00:11:53.880\nit starts off onscreen background,\nall right?\n\n255\n00:11:53.880 --> 00:11:56.348\nAnd so what I see most of\nthe time is people doing this.\n\n256\n00:11:56.348 --> 00:11:59.110\nHey, I'm gonna open this up and\nI go to My Properties.\n\n257\n00:11:59.110 --> 00:12:00.571\n&gt;&gt; You know,\nI always keep on changing [CROSSTALK]\n\n258\n00:12:00.571 --> 00:12:03.380\n&gt;&gt; Font color to something like blue.\n\n259\n00:12:03.380 --> 00:12:05.204\nI like blue, all right?\n\n260\n00:12:05.204 --> 00:12:07.204\nI was like,\nthat did not change my font color.\n\n261\n00:12:07.204 --> 00:12:10.379\n&gt;&gt; [LAUGH]\n&gt;&gt; Right, that changed my background color\n\n262\n00:12:10.379 --> 00:12:13.369\nand that's not what I wanted,\nso let's go back and,\n\n263\n00:12:13.369 --> 00:12:15.666\nyou know the problem is [INAUDIBLE]\n&gt;&gt; I know,\n\n264\n00:12:15.666 --> 00:12:19.714\nit's hard to tell unless you've got\nlike really good depth of color, right?\n\n265\n00:12:19.714 --> 00:12:21.799\n&gt;&gt; Yeah [LAUGH]\n&gt;&gt; You're like, what blue was it?\n\n266\n00:12:21.799 --> 00:12:24.750\n&gt;&gt; What blue was that and\nthat's still not the actual blue.\n\n267\n00:12:24.750 --> 00:12:28.160\nThey don't give you\nthe actual blue as a choice.\n\n268\n00:12:28.160 --> 00:12:32.810\nWell, I'm sure it is somewhere,\nbut that's not it.\n\n269\n00:12:32.810 --> 00:12:33.800\nThat was it, actually.\n\n270\n00:12:33.800 --> 00:12:34.990\nThat's not it either.\n\n271\n00:12:34.990 --> 00:12:36.280\n&gt;&gt; I think that one's the closest.\n\n272\n00:12:36.280 --> 00:12:37.094\n&gt;&gt; But it is about the closest.\n\n273\n00:12:37.094 --> 00:12:38.712\n&gt;&gt; Yeah.\n&gt;&gt; And they don't give you a color\n\n274\n00:12:38.712 --> 00:12:39.550\npicker-\n&gt;&gt; I know [LAUGH]\n\n275\n00:12:39.550 --> 00:12:41.697\n&gt;&gt; Either, which is really annoying.\n\n276\n00:12:41.697 --> 00:12:44.150\n&gt;&gt; There you go.\n\n277\n00:12:44.150 --> 00:12:49.070\n&gt;&gt; The default background color for\nPowerShell is dark magenta.\n\n278\n00:12:49.070 --> 00:12:50.110\n&gt;&gt; Yeah?\n&gt;&gt; Yeah.\n\n279\n00:12:50.110 --> 00:12:53.690\nAnd I had to ask somebody,\nI went to our, Vaughn,\n\n280\n00:12:53.690 --> 00:12:58.060\nour in-house graphics guru,\nI was like, what is magenta?\n\n281\n00:12:58.060 --> 00:12:59.840\n&gt;&gt; Pink?\n&gt;&gt; [LAUGH] Just to make sure, right?\n\n282\n00:12:59.840 --> 00:13:04.500\nIt's pink, and dark magenta is kind\nof a purplish pink or a darker one.\n\n283\n00:13:04.500 --> 00:13:07.039\nBut yeah,\nthey actually call that blue background.\n\n284\n00:13:07.039 --> 00:13:07.615\n&gt;&gt; So i just.\n\n285\n00:13:07.615 --> 00:13:08.877\n&gt;&gt; Dark magenta.\n&gt;&gt; It's kinda strange,\n\n286\n00:13:08.877 --> 00:13:10.200\nI wonder with the whole color thing.\n\n287\n00:13:10.200 --> 00:13:11.395\nYou've got Azure.\n\n288\n00:13:11.395 --> 00:13:12.200\n&gt;&gt; Uh-huh.\n\n289\n00:13:12.200 --> 00:13:17.570\n&gt;&gt; Which is another blue, and then\nGoogle has a fuchsia operating system.\n\n290\n00:13:17.570 --> 00:13:19.116\n&gt;&gt; Really?\n&gt;&gt; So there must be something that we just\n\n291\n00:13:19.116 --> 00:13:19.830\ndon't know.\n\n292\n00:13:19.830 --> 00:13:21.126\n&gt;&gt; Yeah, could be, who knows?\n\n293\n00:13:21.126 --> 00:13:22.990\n&gt;&gt; [LAUGH]\n&gt;&gt; All right so.\n\n294\n00:13:22.990 --> 00:13:25.200\nProperties, you can\ndefinitely change these.\n\n295\n00:13:25.200 --> 00:13:26.830\nAnd you notice they are persistent, right?\n\n296\n00:13:26.830 --> 00:13:31.440\nBecause if I make it change, if we change\nmy background to that other blue, for\n\n297\n00:13:31.440 --> 00:13:32.280\nexample.\n\n298\n00:13:32.280 --> 00:13:37.230\nAnd I close PowerShell, and I open it\nback up, there we will see that color.\n\n299\n00:13:37.230 --> 00:13:41.980\nSo it definitely is persistent across\nsessions, and that's because it's actually\n\n300\n00:13:41.980 --> 00:13:47.360\ngetting stored in the editor or\nthe registry, I'm sorry.\n\n301\n00:13:47.360 --> 00:13:49.250\nI can't type and talk at the same time.\n\n302\n00:13:49.250 --> 00:13:53.080\nNow I gotta try and\nremember where that guy was.\n\n303\n00:13:53.080 --> 00:13:57.420\nThat is going to be h key local machine,\nsoftware,\n\n304\n00:13:57.420 --> 00:14:01.619\nMicrosoft Windows.\n\n305\n00:14:03.480 --> 00:14:06.820\nAll right, thank you, Doug, for\nreminding me where that key was.\n\n306\n00:14:06.820 --> 00:14:09.920\nI'm looking for it,\nit's h key current user console.\n\n307\n00:14:09.920 --> 00:14:11.650\nThat's where we needed to be.\n\n308\n00:14:11.650 --> 00:14:17.440\nAnd under console, you can see there's\ntwo registry entries here, keys.\n\n309\n00:14:17.440 --> 00:14:19.203\nThere's one for PowerShell and\n\n310\n00:14:19.203 --> 00:14:22.541\nthere's one for\nPowerShell running in a Windows on Window.\n\n311\n00:14:22.541 --> 00:14:27.090\nAnd in there, we have things\nlike font family, face name, and\n\n312\n00:14:27.090 --> 00:14:30.770\nthat's the font that I chose by going\nto the properties in my PowerShell,\n\n313\n00:14:30.770 --> 00:14:32.920\nclicking on the little icon and\nchanging it.\n\n314\n00:14:32.920 --> 00:14:36.030\nSo when you make changes there in the GUI,\n\n315\n00:14:36.030 --> 00:14:38.280\nin PowerShell,\nthis is where they're being stored.\n\n316\n00:14:38.280 --> 00:14:42.040\nIt's not saving them to a PowerShell\nprofile or anything like that.\n\n317\n00:14:42.040 --> 00:14:45.170\nSo we're just making changes\nthat are getting it written\n\n318\n00:14:45.170 --> 00:14:46.790\ninto the registry, right?\n\n319\n00:14:46.790 --> 00:14:48.080\nThere's my screen color.\n\n320\n00:14:48.080 --> 00:14:50.570\nI had to figure out what\nthe default was for\n\n321\n00:14:50.570 --> 00:14:54.630\nPowerShell to get that\nback to my favorite blue.\n\n322\n00:14:54.630 --> 00:15:01.810\nIt's not 56, but I was actually thinking\nit was, anyway, I'll deal with that later.\n\n323\n00:15:01.810 --> 00:15:03.524\nI'll reset all that\nstuff after we get back,\n\n324\n00:15:03.524 --> 00:15:06.015\nbecause I don't like that blue\nthat I've got it set to right now.\n\n325\n00:15:06.015 --> 00:15:06.869\n&gt;&gt; Does it make you happy?\n\n326\n00:15:06.869 --> 00:15:07.930\n&gt;&gt; No, it doesn't make me happy.\n\n327\n00:15:07.930 --> 00:15:09.150\n&gt;&gt; Yeah, whatever makes you happy.\n\n328\n00:15:09.150 --> 00:15:10.730\nBut apparently not 56.\n\n329\n00:15:10.730 --> 00:15:11.365\n&gt;&gt; It's not 56.\n\n330\n00:15:11.365 --> 00:15:14.000\n&gt;&gt; [LAUGH]\n&gt;&gt; All right, so in fact we're gonna\n\n331\n00:15:14.000 --> 00:15:18.309\nchange it a little bit right now\nbecause that is just too bright for me.\n\n332\n00:15:18.309 --> 00:15:19.010\nLet's try.\n\n333\n00:15:19.010 --> 00:15:22.410\nThat one's kind of\na muted blue-gray there.\n\n334\n00:15:22.410 --> 00:15:24.220\nThat's a little better on the screen.\n\n335\n00:15:24.220 --> 00:15:26.855\nAll right, so we see where those.\n\n336\n00:15:26.855 --> 00:15:30.441\nAgain, that was when you go here,\nor right-click here and\n\n337\n00:15:30.441 --> 00:15:32.680\nmake changes using the Properties.\n\n338\n00:15:32.680 --> 00:15:34.610\nThose get stored in the registry, right?\n\n339\n00:15:36.470 --> 00:15:39.510\nBut profiles,\nyeah we have profiles that we can\n\n340\n00:15:39.510 --> 00:15:42.220\nmake those kind of settings worth and\nthen so much more.\n\n341\n00:15:42.220 --> 00:15:45.770\nI mean that's just the tip of\nwhat we do with the profile.\n\n342\n00:15:45.770 --> 00:15:47.015\nYou know changing some colors and\n\n343\n00:15:47.015 --> 00:15:50.470\nthings like that but there's, there's\na lot more we're gonna do with them.\n\n344\n00:15:50.470 --> 00:15:52.023\nSo let's talk about profiles,\n\n345\n00:15:52.023 --> 00:15:55.483\nthe first thing we've gotta understand\nis that there's a lot of them.\n\n346\n00:15:55.483 --> 00:15:58.363\nThere's actually,\n\n347\n00:15:58.363 --> 00:16:03.327\nminimum four or six On your machine.\n\n348\n00:16:03.327 --> 00:16:07.850\nCrazy, or can be, or\nI guess is one way to say it.\n\n349\n00:16:07.850 --> 00:16:10.942\nHere’s the way Microsoft breaks\nthese profiles down, all right?\n\n350\n00:16:10.942 --> 00:16:14.926\nI'm gonna check my cheat sheet here,\nmake sure I get the names right.\n\n351\n00:16:14.926 --> 00:16:17.966\nThere's a profile called\nall users all hosts,\n\n352\n00:16:17.966 --> 00:16:21.235\nthere's a profile called\nall users current host.\n\n353\n00:16:21.235 --> 00:16:25.204\nThere's another one called current\nuser all hosts, and another one\n\n354\n00:16:25.204 --> 00:16:29.597\ncalled current user current host, so\nthere's four profiles right there.\n\n355\n00:16:31.165 --> 00:16:34.095\nAnd then if you have any other\napplications that use PowerShell,\n\n356\n00:16:34.095 --> 00:16:37.622\nwe can end up generating more profiles,\nso there can end up being a lot of them.\n\n357\n00:16:37.622 --> 00:16:41.615\nAnd let's make sense of those guys,\nall users all hosts, all right, well,\n\n358\n00:16:41.615 --> 00:16:44.040\nfirst of all, what the heck is a host?\n\n359\n00:16:44.040 --> 00:16:47.916\nA host, not the machine, we're not talking\nabout the laptop or the desktop that\n\n360\n00:16:47.916 --> 00:16:51.407\nyou're sitting at, the host is what\nyou're running PowerShell with.\n\n361\n00:16:51.407 --> 00:16:54.670\nI've got my console open, that's one host,\n\n362\n00:16:54.670 --> 00:16:57.940\nmy PowerShell window\nhere is called console.\n\n363\n00:16:57.940 --> 00:17:03.260\nIf I go $host, I can see the name of\nthis is actually Consolehost, all right?\n\n364\n00:17:03.260 --> 00:17:09.504\nISE is a separate host, all right,\nwe'll go ahead and run ISE.\n\n365\n00:17:09.504 --> 00:17:11.576\nAnd if I get $host here,\n\n366\n00:17:11.576 --> 00:17:17.515\nyou'll see this is actually\nWindows PowerShell ISE host, all right?\n\n367\n00:17:17.515 --> 00:17:21.987\nSo we say all users all hosts,\nthat profile would be for\n\n368\n00:17:21.987 --> 00:17:25.109\nany user on this machine, all users.\n\n369\n00:17:25.109 --> 00:17:29.031\nAnd any host, whether they'll launching\nISE, whether they're launching\n\n370\n00:17:29.031 --> 00:17:32.710\nthe console, or anything else\nthey might have on that system.\n\n371\n00:17:32.710 --> 00:17:35.970\nSo that's one profile that would go,\nall users, all hosts.\n\n372\n00:17:35.970 --> 00:17:40.192\nThere's also the all users, current host,\nwhich means I can set a profile\n\n373\n00:17:40.192 --> 00:17:43.208\nthat affects everybody that\nlogs on the machine, but\n\n374\n00:17:43.208 --> 00:17:45.637\nonly ISE, for example, or only console.\n\n375\n00:17:45.637 --> 00:17:49.212\nAnd you might think, why,\nwell, there might be\n\n376\n00:17:49.212 --> 00:17:54.440\nsome modules that make sense in ISE,\nbut not in your console host.\n\n377\n00:17:54.440 --> 00:17:58.568\nI forget, there's one that I was reading\nthis guy uses, I meant to check it out,\n\n378\n00:17:58.568 --> 00:18:02.011\ncalled like ISESteroids or\nSteroids ISE, or something like this.\n\n379\n00:18:02.011 --> 00:18:05.005\nAnd it adds a lot of\nfunctionality to the ISE console.\n\n380\n00:18:05.005 --> 00:18:08.311\nBut I don't need to load that module\nup when I'm running the standard\n\n381\n00:18:08.311 --> 00:18:09.660\nconsole, not ISE.\n\n382\n00:18:09.660 --> 00:18:15.150\nSo I might add an import module\nstatement to my current host for\n\n383\n00:18:15.150 --> 00:18:19.400\nmy ISE, right, so\nit wouldn't affect my normal console.\n\n384\n00:18:19.400 --> 00:18:21.290\nSo you've got all users all hosts,\nall users current host, and\n\n385\n00:18:21.290 --> 00:18:23.180\nnow you can probably\nfigure out the other two.\n\n386\n00:18:23.180 --> 00:18:27.583\nCurrent user current host,\nand current user all hosts.\n\n387\n00:18:27.583 --> 00:18:31.710\nIt's gonna be me, not anybody else that\nlogs on to the machine, current user.\n\n388\n00:18:31.710 --> 00:18:35.338\nAnd is it for all of my hosts,\nconsole, ISE, and anything else, or\n\n389\n00:18:35.338 --> 00:18:38.477\njust the current host,\nwhatever I have open, all right?\n\n390\n00:18:38.477 --> 00:18:43.610\nSo there's four different\nprofiles that we will deal with.\n\n391\n00:18:43.610 --> 00:18:47.620\nNow we need to know where\nthese guys are located, and\n\n392\n00:18:47.620 --> 00:18:49.700\nwe need to know how to create them.\n\n393\n00:18:49.700 --> 00:18:53.510\nAnd that will be what we talk about next,\nall right?\n\n394\n00:18:53.510 --> 00:18:56.140\nSo there's an easy way\nto find your profile,\n\n395\n00:18:56.140 --> 00:18:59.050\nthere's an environment\nvariable called profile.\n\n396\n00:19:01.420 --> 00:19:05.317\nAnd when I type in profile,\nwhat you'll see is, I get this\n\n397\n00:19:05.317 --> 00:19:09.389\nc:\\users\\michael\\documents\\windowsPowerSh-\nell.\n\n398\n00:19:09.389 --> 00:19:15.387\nSo it's in my documents folder,\nfolder called windowsPowerShell,\n\n399\n00:19:15.387 --> 00:19:20.991\nand then Microsoft.powershell_profile.ps1,\nall right?\n\n400\n00:19:20.991 --> 00:19:24.765\nSo this is going to be for\nthe current user, not all users,\n\n401\n00:19:24.765 --> 00:19:28.013\nbecause this is stored in\nmy personal directory.\n\n402\n00:19:28.013 --> 00:19:31.388\nSo anybody else that logs on\nthe machine is not gonna have access\n\n403\n00:19:31.388 --> 00:19:33.563\nto c:\\users\\michael\\documents.\n\n404\n00:19:33.563 --> 00:19:37.317\nSo $profile points to current user,\n\n405\n00:19:37.317 --> 00:19:42.490\ncurrent host,\nbecause this is the name of the host.\n\n406\n00:19:42.490 --> 00:19:46.530\nIt doesn't say PowerShell ISE,\nit says PowerShell, all right?\n\n407\n00:19:46.530 --> 00:19:51.525\nSo by default,\nprofile goes to current user current host.\n\n408\n00:19:51.525 --> 00:19:54.880\nSo profile goes to that one, what about\nthe others, how do I access them?\n\n409\n00:19:54.880 --> 00:19:56.590\nWe can actually use dot notation and\n\n410\n00:19:56.590 --> 00:19:59.340\nreference those names I\nwas just talking about.\n\n411\n00:19:59.340 --> 00:20:04.254\nLike we can do $profile, and let's\njust verify that Mike knows what he's\n\n412\n00:20:04.254 --> 00:20:08.600\ntalking about, let's do current user,\noops, current host.\n\n413\n00:20:08.600 --> 00:20:10.385\nThat's really throwing me off,\n\n414\n00:20:10.385 --> 00:20:13.263\ncan you guys see the ghosting\nof blue around the font?\n\n415\n00:20:13.263 --> 00:20:14.756\n&gt;&gt; Yeah, it looks like neon or something.\n\n416\n00:20:14.756 --> 00:20:20.559\n&gt;&gt; And that's because my,\nI'll fix that in just a little bit.\n\n417\n00:20:20.559 --> 00:20:22.669\n&gt;&gt; [LAUGH]\n&gt;&gt; And I can see the same path, right,\n\n418\n00:20:22.669 --> 00:20:23.860\nthere's that same path.\n\n419\n00:20:23.860 --> 00:20:26.065\nSo profile, by itself,\n\n420\n00:20:26.065 --> 00:20:32.057\nis the same as typing\nprofile.CurrentuserCurrenthost, right?\n\n421\n00:20:32.057 --> 00:20:34.940\nIt's gonna be my profile for\nthis particular host.\n\n422\n00:20:34.940 --> 00:20:39.927\nIf I go over to ISE and\ndo the same thing, $profile, right?\n\n423\n00:20:39.927 --> 00:20:44.514\nAnd actually, let's not do that\nas a script, let's do $profile.\n\n424\n00:20:48.087 --> 00:20:53.602\nAll right, notice the difference,\nsame location, because it's current user,\n\n425\n00:20:53.602 --> 00:20:59.090\nso it's in my documents, but now it\nsays Microsoft.PowerShellISE_profile.\n\n426\n00:20:59.090 --> 00:21:02.830\nSo things that I configure in that\nparticular file would only be apparent\n\n427\n00:21:02.830 --> 00:21:06.240\nwhen I launched ISE,\nnot when I launch console host.\n\n428\n00:21:06.240 --> 00:21:11.830\nSo two different profiles that are gonna\nexist in my documents\\windowsPowerShell\n\n429\n00:21:11.830 --> 00:21:15.413\nprofile, or could exist,\nI should say, all right?\n\n430\n00:21:15.413 --> 00:21:21.405\nThe others, $profile.all,\nlet's do all hosts,\n\n431\n00:21:21.405 --> 00:21:25.267\nlet's do CurrentUser all hosts,\n\n432\n00:21:25.267 --> 00:21:31.410\nknows it's the same location\ncuz it's current user.\n\n433\n00:21:31.410 --> 00:21:36.251\nSo it's gonna be in my profile, but\ninstead of saying Microsoft.PowerShell or\n\n434\n00:21:36.251 --> 00:21:40.401\nMicrosoft.PowerShellISE, it\njust says profile.ps1, right?\n\n435\n00:21:40.401 --> 00:21:42.280\nSo this is a generic profile for\n\n436\n00:21:42.280 --> 00:21:46.240\nmy user account that would\napply to all hosts that I use.\n\n437\n00:21:46.240 --> 00:21:49.780\nWhether it was the console, or\nwhether it was PowerShell ISE, right?\n\n438\n00:21:50.990 --> 00:21:54.861\nThen when we deal with the profiles for\nall users,\n\n439\n00:21:54.861 --> 00:22:00.400\nwe're talking about all users all hosts,\nand all users current host.\n\n440\n00:22:00.400 --> 00:22:04.979\nWe'll see those are actually located in\nthe Windows PowerShell directory under\n\n441\n00:22:04.979 --> 00:22:06.871\nWindows\\system32, right?\n\n442\n00:22:06.871 --> 00:22:12.332\nThere's a version 1.0/profile,\nso no shell name, right,\n\n443\n00:22:12.332 --> 00:22:17.409\nno console name,\nwhich means this is the all hosts profile.\n\n444\n00:22:17.409 --> 00:22:21.089\nDoesn't matter if you're using ISE or\nif you're using the console.\n\n445\n00:22:21.089 --> 00:22:23.311\nIf I do all users current host,\n\n446\n00:22:23.311 --> 00:22:28.200\nsame location C:\\windows\\system\n32\\windowsPowerShell.\n\n447\n00:22:28.200 --> 00:22:32.108\nBut now it has a console\nspecific title there, so\n\n448\n00:22:32.108 --> 00:22:36.314\nthat means it's only going\nto apply to PowerShell.\n\n449\n00:22:36.314 --> 00:22:38.686\nI could also make one for\nPowerShell ISE, and\n\n450\n00:22:38.686 --> 00:22:42.511\nthis is where I start saying we could\nend up with six different profiles.\n\n451\n00:22:42.511 --> 00:22:46.936\nIf we're talking about making one for\nmy user, for all users, for each one of\n\n452\n00:22:46.936 --> 00:22:52.778\nthe consoles that we're running, we could\nend up with a lot of different profiles.\n\n453\n00:22:52.778 --> 00:22:56.034\nSo now then, the question becomes,\nokay, great,\n\n454\n00:22:56.034 --> 00:22:59.147\nthere's all these profiles,\nwhich one do I use?\n\n455\n00:22:59.147 --> 00:23:05.174\nWhere do I put my stuff,\nright, it's up to you [LAUGH].\n\n456\n00:23:05.174 --> 00:23:06.300\n&gt;&gt; Thanks Mike [LAUGH].\n\n457\n00:23:06.300 --> 00:23:07.415\n&gt;&gt; Yeah, does that help you out Cherokee?\n\n458\n00:23:07.415 --> 00:23:11.410\n[LAUGH] No, it really depends on\nwhat you're trying to do, right?\n\n459\n00:23:11.410 --> 00:23:16.714\nIf I have a setting that I want to apply\nto just me, but to all of my consoles,\n\n460\n00:23:16.714 --> 00:23:22.127\nthen I'm going to use the current\nuser all host, just this profile.ps1.\n\n461\n00:23:22.127 --> 00:23:27.982\nIf I have something that I want to do\nspecific to ISE, or specific to console,\n\n462\n00:23:27.982 --> 00:23:34.246\nthat's when I can use my,\nMy host-specific profiles,\n\n463\n00:23:34.246 --> 00:23:39.010\nright, so\nthat's really what you gotta think about.\n\n464\n00:23:39.010 --> 00:23:41.830\nWhen you're adding\nsomething to your profile,\n\n465\n00:23:41.830 --> 00:23:46.573\nis this something that you wanna always\nsee, or only when you launch the console,\n\n466\n00:23:46.573 --> 00:23:50.165\nor only when you wanna launch\nthe PowerShell ISE, all right?\n\n467\n00:23:50.165 --> 00:23:54.700\nAll right, so hopefully that gives us\nan idea, now, I'll tell you that if you go\n\n468\n00:23:54.700 --> 00:23:59.102\nout there and do some research, or if you\nlook at Microsoft stores and stuff and\n\n469\n00:23:59.102 --> 00:24:03.506\nworking with these profiles We basically\nwanna think about it as, all right,\n\n470\n00:24:03.506 --> 00:24:06.600\nif I've got settings that I\nwanna apply to every user.\n\n471\n00:24:06.600 --> 00:24:08.780\nLet's say we have shared workstations.\n\n472\n00:24:08.780 --> 00:24:13.131\nAnd I want all of them to have\na particular setting, like a font size,\n\n473\n00:24:13.131 --> 00:24:17.495\nright, because our company uses\na certain font size or font family.\n\n474\n00:24:17.495 --> 00:24:20.470\nAnd I would use that all users, all hosts.\n\n475\n00:24:20.470 --> 00:24:23.510\nAnd then,\nas the settings get more specific,\n\n476\n00:24:23.510 --> 00:24:26.020\nthat's when we start using\nthose other profiles.\n\n477\n00:24:26.020 --> 00:24:26.544\nIt's a pain.\n\n478\n00:24:26.544 --> 00:24:30.070\nI will tell you it's\ncrazy to manage those.\n\n479\n00:24:30.070 --> 00:24:34.186\nSo what a lot of people will do,\nmyself included,\n\n480\n00:24:34.186 --> 00:24:39.194\nis just use the profile, right,\nthe [COUGH] profile.ps1.\n\n481\n00:24:39.194 --> 00:24:44.413\nI do current user, all hosts,\nwhich is this one right here, okay,\n\n482\n00:24:44.413 --> 00:24:51.260\nbecause I don't have too many things that\nare specific to ISE versus the console.\n\n483\n00:24:51.260 --> 00:24:56.797\nAnd there are actually ways I can\ndeal with it within my profile.\n\n484\n00:24:56.797 --> 00:25:00.565\nLet me show you an example here.\n\n485\n00:25:00.565 --> 00:25:03.833\nLet's see, I can show you over here.\n\n486\n00:25:03.833 --> 00:25:05.274\nNow, we could do something like this.\n\n487\n00:25:05.274 --> 00:25:09.909\nif $host.Name, right, is equal to, and\n\n488\n00:25:09.909 --> 00:25:14.670\nwe haven't done a lot\nof script writing yet,\n\n489\n00:25:14.670 --> 00:25:17.571\nor any script writing yet.\n\n490\n00:25:17.571 --> 00:25:20.280\nSo I might be jumping the gun with this,\nbut I just wanna show you.\n\n491\n00:25:20.280 --> 00:25:24.265\nEquals ConsoleHost,\n\n492\n00:25:24.265 --> 00:25:28.590\noops, ConsoleHost.\n\n493\n00:25:28.590 --> 00:25:31.370\nAnd then I can do open brackets.\n\n494\n00:25:31.370 --> 00:25:38.370\nAnd I can put some code in here,\nsome commands or what have you.\n\n495\n00:25:40.500 --> 00:25:46.317\nOops, and then I can do elseif\n\n496\n00:25:46.317 --> 00:25:52.608\n$host.Name is gonna be like,\n\n497\n00:25:56.235 --> 00:26:00.454\nLet's see, let's do an * ise.\n\n498\n00:26:00.454 --> 00:26:02.130\nUppercase, but it doesn't have to be.\n\n499\n00:26:02.130 --> 00:26:03.611\nIt's not case sensitive.\n\n500\n00:26:03.611 --> 00:26:10.579\nISE host, Then do this.\n\n501\n00:26:18.142 --> 00:26:22.598\nLet's change this up here to, do this,\n\n502\n00:26:22.598 --> 00:26:27.590\nall right, so something like this, right?\n\n503\n00:26:27.590 --> 00:26:30.949\nWe could say, and I'm missing a.\n\n504\n00:26:30.949 --> 00:26:31.752\nWhat am I missing there?\n\n505\n00:26:31.752 --> 00:26:33.610\nNo, that's it, all right?\n\n506\n00:26:33.610 --> 00:26:35.748\nSo this is just a if statement.\n\n507\n00:26:35.748 --> 00:26:36.480\nAnd we'll talk much, but\n\n508\n00:26:36.480 --> 00:26:38.670\ndon't worry about it if you don't\nunderstand the syntax of this.\n\n509\n00:26:38.670 --> 00:26:42.420\nI just wanna show you this as a proof\nof concept, really, at this point.\n\n510\n00:26:42.420 --> 00:26:44.370\nWe'll learn how to write\nthis in a little bit.\n\n511\n00:26:44.370 --> 00:26:48.204\nBut what this is doing is saying,\nlook, every time you start up,\n\n512\n00:26:48.204 --> 00:26:52.668\nif I put this in my profile, if the\nConsoleHost Name equals ConsoleHost, or\n\n513\n00:26:52.668 --> 00:26:56.059\nif Name equals ConsoleHost,\nwhich it did here, right?\n\n514\n00:26:56.059 --> 00:27:03.170\nWhen we did $host,\nthe name is ConsoleHost, right?\n\n515\n00:27:03.170 --> 00:27:06.220\nSo when you fire up PowerShell,\nif that equals ConsoleHost,\n\n516\n00:27:06.220 --> 00:27:10.530\nthen load up these modules or load up\nthese functions or set these colors or\n\n517\n00:27:10.530 --> 00:27:12.113\nwhatever it is you wanna do.\n\n518\n00:27:12.113 --> 00:27:18.190\nOr elseif it equals ISE host, all right,\ncuz when we look at that host name for\n\n519\n00:27:18.190 --> 00:27:21.865\nthis, oops-\n&gt;&gt; We could bring in that separate\n\n520\n00:27:21.865 --> 00:27:24.898\nps1 file or-\n&gt;&gt; Yeah, the ISESteroids or\n\n521\n00:27:24.898 --> 00:27:26.800\nwhatever the case may be.\n\n522\n00:27:26.800 --> 00:27:28.270\nThen do these.\n\n523\n00:27:28.270 --> 00:27:31.428\nSo this would be a way that I\ncan have different settings and\n\n524\n00:27:31.428 --> 00:27:34.651\ndifferent hosts but\nstill manage one profile, right, and\n\n525\n00:27:34.651 --> 00:27:38.731\nnot have to remember which profile to\nmake changes to and things like that.\n\n526\n00:27:38.731 --> 00:27:43.155\nSo just another way to go about\nmanaging these multiple profiles,\n\n527\n00:27:43.155 --> 00:27:46.870\nall right, is working with\nthat good old if statement.\n\n528\n00:27:48.240 --> 00:27:52.133\nAll right, now, so\nhopefully, that makes sense.\n\n529\n00:27:52.133 --> 00:27:53.450\nHow does that sound to you?\n\n530\n00:27:53.450 --> 00:27:54.020\n&gt;&gt; Yeah, it's good.\n\n531\n00:27:54.020 --> 00:27:55.430\nThe only thing I've been wondering so\n\n532\n00:27:55.430 --> 00:27:59.970\nfar, if we're working in one particular\nprofile, then, all of the sudden, for\n\n533\n00:27:59.970 --> 00:28:04.010\none reason,\nI wanna revert back to a previous one or\n\n534\n00:28:04.010 --> 00:28:07.360\npull in a different one, do I have\nthe ability to invoke that file easily?\n\n535\n00:28:07.360 --> 00:28:10.980\nJust say, hey, I'm gonna go ahead and\nswitch to my whatever profile, whatever-\n\n536\n00:28:10.980 --> 00:28:12.400\n&gt;&gt; Yes and no.\n\n537\n00:28:12.400 --> 00:28:14.198\nYou can just replace the file, right,\n\n538\n00:28:14.198 --> 00:28:16.552\nbecause I showed you where\nthat file location was.\n\n539\n00:28:16.552 --> 00:28:19.825\nAnd it's just a .ps1 file that\nyou can edit with PowerShell or\n\n540\n00:28:19.825 --> 00:28:22.126\neven Notepad or Word or\nanything like that.\n\n541\n00:28:22.126 --> 00:28:23.457\nYou save it as a .ps1 file.\n\n542\n00:28:23.457 --> 00:28:27.328\nAnd if you edit that file, or if you\nmake a copy of that file before you make\n\n543\n00:28:27.328 --> 00:28:28.364\nchanges-\n&gt;&gt; There you go.\n\n544\n00:28:28.364 --> 00:28:29.528\n&gt;&gt; And then put it back,\n\n545\n00:28:29.528 --> 00:28:33.020\nyou can definitely go back to\nwhatever it is you had before.\n\n546\n00:28:33.020 --> 00:28:35.508\nYou'll see me.\nI'm gonna do that here in our next part.\n\n547\n00:28:35.508 --> 00:28:38.452\nWe'll set up some profiles, we'll put them\nin place, and we'll swap profiles around.\n\n548\n00:28:38.452 --> 00:28:43.826\nAnd we'll see how it affects things\nwhen it's underneath the System32\n\n549\n00:28:43.826 --> 00:28:48.520\nversus whether it is in My Documents and\nthose locations there.\n\n550\n00:28:48.520 --> 00:28:51.990\nSo now we've got a good\nunderstanding of what profiles are.\n\n551\n00:28:51.990 --> 00:28:56.220\nWe'll get into creating them, but\nI do think we are out of time, aren't we?\n\n552\n00:28:56.220 --> 00:28:57.520\n&gt;&gt; Looks like it, Mike.\n\n553\n00:28:57.520 --> 00:29:00.820\nI'm usually the Debbie Downer here, but\nI'll let you take that role for today.\n\n554\n00:29:00.820 --> 00:29:02.166\n&gt;&gt; Okay.\n&gt;&gt; So according to Mike,\n\n555\n00:29:02.166 --> 00:29:03.749\nwe're out of time, so-\n&gt;&gt; [LAUGH]\n\n556\n00:29:03.749 --> 00:29:04.870\n&gt;&gt; I'll go ahead and sign out.\n\n557\n00:29:04.870 --> 00:29:06.296\nI've been your host, Cherokee Boose.\n\n558\n00:29:06.296 --> 00:29:07.160\n&gt;&gt; And I'm Mike Rodrick.\n\n559\n00:29:07.160 --> 00:29:10.348\n&gt;&gt; See you next time here on ITProTV.\n\n560\n00:29:10.348 --> 00:29:16.070\n[MUSIC]\n\n561\n00:29:16.070 --> 00:29:19.184\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "238055791"
        },
        {
          "description": "In this episode, Mike and Cherokee look at PowerShell profiles. They explain the different profiles that PowerShell uses, and demonstrate creating a profile.",
          "length": "2307",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-2-powershell_profiles_pt_2-101217-PGM.00_41_05_21.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-2-powershell_profiles_pt_2-101217-PGM.00_41_05_21.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-7-2-powershell_profiles_pt_2-101217-PGM.00_41_05_21.Still001-sm.jpg",
          "title": "Profiles Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:02.479\nWelcome to ITProTV.\n\n2\n00:00:02.479 --> 00:00:04.975\nI'm your host, Don Pezet.\n\n3\n00:00:04.975 --> 00:00:06.468\n&gt;&gt; [CROSSTALK]\n\n4\n00:00:06.468 --> 00:00:08.190\n[MUSIC]\n\n5\n00:00:08.190 --> 00:00:11.733\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:11.733 --> 00:00:14.190\n&gt;&gt; Welcome, ladies and gentlemen,\nto your PowerShell series.\n\n7\n00:00:14.190 --> 00:00:16.530\nI'm your host, Cherokee Boose.\n\n8\n00:00:16.530 --> 00:00:21.410\nIn this episode, we'll be taking a look at\nreading profiles here within PowerShell.\n\n9\n00:00:21.410 --> 00:00:24.320\nAnd back with us today in studios,\nwe have Mr Mike Rodrick.\n\n10\n00:00:24.320 --> 00:00:25.190\nHow's it going, Mike?\n\n11\n00:00:25.190 --> 00:00:26.100\n&gt;&gt; It's going great, Cherokee.\n\n12\n00:00:26.100 --> 00:00:29.250\nThanks for having me back,\nexcited to be here as always.\n\n13\n00:00:29.250 --> 00:00:32.420\nSo continuing on with good old profiles,\nright?\n\n14\n00:00:32.420 --> 00:00:36.570\nWe got to see in our previous\nepisode where they were stored.\n\n15\n00:00:36.570 --> 00:00:40.180\nWe talked about the different profiles\nthat exist, lots of them, right?\n\n16\n00:00:40.180 --> 00:00:41.841\nIt wasn't just one single profile.\n\n17\n00:00:41.841 --> 00:00:43.270\nAnd we looked at where they were stored.\n\n18\n00:00:43.270 --> 00:00:47.875\nAnd so now we'll take a look at actually\nmaking changes to it, creating them, and\n\n19\n00:00:47.875 --> 00:00:50.570\nthen seeing what they do for us.\n\n20\n00:00:50.570 --> 00:00:52.300\nSo, let's just dive right in.\n\n21\n00:00:52.300 --> 00:00:53.395\nLet's take a look at my screen here.\n\n22\n00:00:53.395 --> 00:00:57.385\nAnd if you remember from that last one,\nI said there's a variable,\n\n23\n00:00:57.385 --> 00:01:01.515\nan environment variable from $profile,\nwhich is very convenient,\n\n24\n00:01:01.515 --> 00:01:04.880\nbecause that'll show me\nthe path to my profile.\n\n25\n00:01:04.880 --> 00:01:08.248\nNotice this one is C:\nusers Michael documents.\n\n26\n00:01:08.248 --> 00:01:12.910\nSo that means this is a current user\nprofile, not an all user profile.\n\n27\n00:01:12.910 --> 00:01:15.950\nAnd it's got us a host name, right?\n\n28\n00:01:15.950 --> 00:01:19.590\nPowershell, or Powershell ISE,\nif I was using the ISE.\n\n29\n00:01:19.590 --> 00:01:24.560\nSo this is a host specific, so\nthis is current user, current host.\n\n30\n00:01:24.560 --> 00:01:26.980\nThat is going to be the default profile.\n\n31\n00:01:26.980 --> 00:01:31.700\nBut I also showed you that we could, if\nwe wanted to, pull up the other profiles.\n\n32\n00:01:31.700 --> 00:01:36.836\nIf I wanted to do current user, me,\nbut all of host, both console and\n\n33\n00:01:36.836 --> 00:01:42.430\nISE, I could definitely just add\ncurrent user, all hosts to the profile.\n\n34\n00:01:42.430 --> 00:01:46.550\nSo $ sign profile.current user all hosts.\n\n35\n00:01:46.550 --> 00:01:49.890\nAnd there is my profile that's just for\nme,\n\n36\n00:01:49.890 --> 00:01:55.380\nnot any other users, but all consoles or\nall hosts that I use on this machine.\n\n37\n00:01:55.380 --> 00:01:57.474\nAll right, so\ngood to know what the default is.\n\n38\n00:01:57.474 --> 00:02:00.613\nIf I do $profile in a script or\nanything like that,\n\n39\n00:02:00.613 --> 00:02:05.530\nit is gonna be working with current user,\ncurrent host by default.\n\n40\n00:02:05.530 --> 00:02:06.970\nAll right, so\nlet's make some changes on these.\n\n41\n00:02:06.970 --> 00:02:11.468\nSo I've got these profiles, I just ran\nthese command and in my documents, there\n\n42\n00:02:11.468 --> 00:02:15.980\nshould be a Windows PowerShell folder,\nand in there, I should see my profiles.\n\n43\n00:02:15.980 --> 00:02:21.830\nIt looks like one for PowerShell console,\nand one that's post independent.\n\n44\n00:02:21.830 --> 00:02:26.920\nSo we'll open up File Explorer,\nwe'll navigate into Documents, and,\n\n45\n00:02:26.920 --> 00:02:31.920\nhm, no folder,\nno Windows PowerShell folder.\n\n46\n00:02:31.920 --> 00:02:38.320\nSo when we do this $ profile, what it's\nstoring is not your actual profile.\n\n47\n00:02:38.320 --> 00:02:40.650\nIt's storing the path to\nwhere the profile should be,\n\n48\n00:02:40.650 --> 00:02:42.980\nbut it doesn't guarantee that it's there.\n\n49\n00:02:42.980 --> 00:02:44.002\nHow's that for odd, right.\n&gt;&gt; Look good.\n\n50\n00:02:44.002 --> 00:02:46.316\n[LAUGH]\n&gt;&gt; You would think it would fail\n\n51\n00:02:46.316 --> 00:02:48.600\nif the file didn't exist but it does not.\n\n52\n00:02:48.600 --> 00:02:53.060\nIt's just storing the actual path\nwhether the file's there or not and\n\n53\n00:02:53.060 --> 00:02:54.202\nwe can test that.\n\n54\n00:02:54.202 --> 00:02:57.070\nAs you saw I can just navigate to it.\n\n55\n00:02:57.070 --> 00:02:59.692\nWhat I can do is do a test-path.\n\n56\n00:02:59.692 --> 00:03:04.660\nAnd then, well, my font looks\na little bit small, does it not?\n\n57\n00:03:04.660 --> 00:03:05.740\nLet's bump that up a wee bit.\n\n58\n00:03:05.740 --> 00:03:10.080\nI think I changed it in the other show and\nthen didn't change it back.\n\n59\n00:03:10.080 --> 00:03:13.183\nLet's go with 18,\nthat's a lot better than 16, right?\n\n60\n00:03:13.183 --> 00:03:14.607\nLet's do this.\n\n61\n00:03:14.607 --> 00:03:20.019\nWell, you can do a test-path,\n\n62\n00:03:20.019 --> 00:03:25.838\nI can say that and then $profile.\n\n63\n00:03:27.543 --> 00:03:32.242\nAnd notice what it returns, it's false,\nbecause that file doesn't exist,\n\n64\n00:03:32.242 --> 00:03:34.660\nthat's what it's doing.\n\n65\n00:03:34.660 --> 00:03:41.403\nIt's looking to see if there is anything\nthere, we could do the other one,\n\n66\n00:03:41.403 --> 00:03:45.911\ntest-path $profile.Currentuserallhosts.\n\n67\n00:03:45.911 --> 00:03:48.244\nAnd again, it's also false,\n\n68\n00:03:48.244 --> 00:03:53.045\nbecause it doesn't actually exist,\njust the path does.\n\n69\n00:03:53.045 --> 00:03:55.955\nSo in order to start using our profiles,\nwe first need to create one.\n\n70\n00:03:55.955 --> 00:03:56.609\nAll right,\n\n71\n00:03:56.609 --> 00:04:01.585\nwe need to create the physical file that\nwe're going to store this information in.\n\n72\n00:04:01.585 --> 00:04:02.524\nI can do that in many different ways.\n\n73\n00:04:02.524 --> 00:04:04.550\nI could open up this directory,\n\n74\n00:04:04.550 --> 00:04:09.000\nI can go make a folder called\nWindows PowerShell in my documents.\n\n75\n00:04:09.000 --> 00:04:11.595\nI could use Notepad to create a file,\n\n76\n00:04:11.595 --> 00:04:15.626\ngive it this name.ps1, and\nI'd be good to go, right?\n\n77\n00:04:15.626 --> 00:04:20.170\nCould actually do that from here,\nI could do Notepad, and\n\n78\n00:04:20.170 --> 00:04:23.527\nlet's do, let's do this, $ sign.\n\n79\n00:04:23.527 --> 00:04:25.216\n&gt;&gt; And that's what you had said\nbefore when it's just taking-\n\n80\n00:04:25.216 --> 00:04:26.190\n&gt;&gt; PROFILE.\n\n81\n00:04:26.190 --> 00:04:30.220\n&gt;&gt; The syntax here, you can have that\nsyntax thing there in a Notepad file, and\n\n82\n00:04:30.220 --> 00:04:31.280\nit would still be working.\n\n83\n00:04:31.280 --> 00:04:36.280\n&gt;&gt; Yep, so since that file doesn't exist,\nwhen I try to open it up with Notepad, and\n\n84\n00:04:36.280 --> 00:04:38.860\nI'm gonna do\nthe Currentuserallhosts first,\n\n85\n00:04:38.860 --> 00:04:43.190\nthat would be this dot, or just profile.\n\n86\n00:04:43.190 --> 00:04:46.940\nNotepad says, hey, I can't find the path,\ndidn't know if it created.\n\n87\n00:04:46.940 --> 00:04:49.520\nUsually it'll offer to create it but\nit did not that time.\n\n88\n00:04:49.520 --> 00:04:50.850\nSo it can't find it.\n\n89\n00:04:50.850 --> 00:04:53.150\nSo what we need to do is this.\n\n90\n00:04:53.150 --> 00:04:56.430\nWe're gonna do a new,\nlet's clear the screen up a little bit.\n\n91\n00:04:57.450 --> 00:05:00.372\nSo since they don't exist, new-item.\n\n92\n00:05:00.372 --> 00:05:02.023\nA new command now,\nwe haven't used this one yet.\n\n93\n00:05:02.023 --> 00:05:09.388\nNew-item, -type, and\nI wanna make a new file.\n\n94\n00:05:09.388 --> 00:05:15.840\nAll right, and then it's going to be\n-path, where do I wanna create this file,\n\n95\n00:05:15.840 --> 00:05:19.810\nwell, $profile, right,\nwhere you expect to find it.\n\n96\n00:05:19.810 --> 00:05:21.980\nKinda handy, I don't need to type it in.\n\n97\n00:05:21.980 --> 00:05:23.519\nSo path is $profile.\n\n98\n00:05:23.519 --> 00:05:28.400\nNow if I hit this and hit Enter,\nit says it can't find part of the path.\n\n99\n00:05:28.400 --> 00:05:33.230\nBecause I'm trying to make a file inside\nthis folder that doesn't exist yet,\n\n100\n00:05:33.230 --> 00:05:38.330\nright, the Windows PowerShell folder\ndoesn't exist inside my documents.\n\n101\n00:05:38.330 --> 00:05:42.517\nSo what I need to do is add a -force\nto the end of this command, right.\n\n102\n00:05:43.740 --> 00:05:48.339\nWhich is anything that's not there that\nyou've specified, I'm just gonna make.\n\n103\n00:05:48.339 --> 00:05:51.760\nAnd that way, the command can succeed.\n\n104\n00:05:51.760 --> 00:05:54.290\nSo you can see now there\nis a folder there, and\n\n105\n00:05:54.290 --> 00:06:00.290\nthere is a file inside there\ncalled Powershell_profile.ps1.\n\n106\n00:06:00.290 --> 00:06:02.330\nSo since it's in my documents,\nit's current user.\n\n107\n00:06:02.330 --> 00:06:05.203\nAnd since it has the name of the host,\n\n108\n00:06:05.203 --> 00:06:11.100\nthat means it's going to be only for\nthe console, not for ISE, right?\n\n109\n00:06:11.100 --> 00:06:16.187\nIf I wanted to make\nthe current user all hosts,\n\n110\n00:06:16.187 --> 00:06:23.510\nI could simply change this to\n.current user all host, all right?\n\n111\n00:06:23.510 --> 00:06:28.223\nAnd now I've got a file that doesn't\nhave the name of the host in it,\n\n112\n00:06:28.223 --> 00:06:30.220\nit's just profile.ps1.\n\n113\n00:06:30.220 --> 00:06:36.559\nAnd if we look, I should be able to\ndo a CD into Windows PowerShell,\n\n114\n00:06:36.559 --> 00:06:39.642\nit's in my documents, sorry.\n\n115\n00:06:39.642 --> 00:06:45.038\nDocument/WindowsPowerShell, And\n\n116\n00:06:45.038 --> 00:06:49.588\nthere are those two files sitting\nthere in my PowerShell folder,\n\n117\n00:06:49.588 --> 00:06:52.510\nso it did, indeed, create those.\n\n118\n00:06:52.510 --> 00:06:55.170\nNow if I do a Notepad,\nif I open up one of those.\n\n119\n00:06:56.740 --> 00:06:59.221\nNow let's just do profile\ncuz it's easier to type.\n\n120\n00:06:59.221 --> 00:07:02.180\nYou see it's just a blank file,\nthere's nothing in it yet.\n\n121\n00:07:02.180 --> 00:07:03.330\nWe have to add stuff to it.\n\n122\n00:07:03.330 --> 00:07:06.440\nSo if the profile's there,\nit will use it but\n\n123\n00:07:06.440 --> 00:07:10.500\nthere's nothing in the profile for\nit to do, but we have created them.\n\n124\n00:07:10.500 --> 00:07:15.190\nAnd of course, the same thing goes if I\nwanted to do profile.all users, all hosts,\n\n125\n00:07:15.190 --> 00:07:18.320\nor profile.all users current host.\n\n126\n00:07:18.320 --> 00:07:20.660\nWe can definitely do those as well, right?\n\n127\n00:07:21.990 --> 00:07:24.800\nOkay, so now we've got the actual file.\n\n128\n00:07:24.800 --> 00:07:29.310\nWe just need to add it, but\nhere's a got you, right.\n\n129\n00:07:29.310 --> 00:07:30.609\nHere's what I see it'll\nhappen to a lot of people.\n\n130\n00:07:30.609 --> 00:07:35.550\nAs they go through this, they do\nthe new item, they create the profile.\n\n131\n00:07:35.550 --> 00:07:39.160\nThey go add some really cool stuff to\ntheir profile, they close PowerShell.\n\n132\n00:07:39.160 --> 00:07:43.110\nThey open up PowerShell, and\nnothing happens, they get no changes.\n\n133\n00:07:43.110 --> 00:07:45.940\nNothing they're doing\nis actually showing up.\n\n134\n00:07:45.940 --> 00:07:49.800\nAnd that's because your\nprofile is a script.\n\n135\n00:07:49.800 --> 00:07:52.440\nIt's a .ps1 file, that's a script.\n\n136\n00:07:52.440 --> 00:07:55.670\nWe learned in a previous episode,\nwhat is the default setting?\n\n137\n00:07:55.670 --> 00:07:56.914\nCherokee, do you remember\nwhat is the default?\n\n138\n00:07:56.914 --> 00:08:00.143\nYou weren't with me, actually, wes was\nwith me, so I can't pop quiz you on that,\n\n139\n00:08:00.143 --> 00:08:00.711\ngosh darn it.\n\n140\n00:08:00.711 --> 00:08:03.672\n&gt;&gt; [LAUGH] But maybe next time.\n\n141\n00:08:03.672 --> 00:08:07.601\n&gt;&gt; Yeah, all of my viewers out there,\nwhat was the default for\n\n142\n00:08:07.601 --> 00:08:10.130\nexecution policies in Windows 10?\n\n143\n00:08:10.130 --> 00:08:14.080\nAnd if you remember pause it,\nanswer it yourself and come back and\n\n144\n00:08:14.080 --> 00:08:16.015\nlisten to my answer,\nit's restricted right?\n\n145\n00:08:16.015 --> 00:08:19.960\nThey're all undefined, all five scopes\nwere undefined, so the result and\n\n146\n00:08:19.960 --> 00:08:23.420\npolicy is restrictive which\nmeans no scripts run.\n\n147\n00:08:23.420 --> 00:08:27.799\nSince my profile is a .ps1 file,\nit is a script, it won't work,\n\n148\n00:08:27.799 --> 00:08:30.474\nit's not gonna allow that scrip to run.\n\n149\n00:08:30.474 --> 00:08:35.160\nRemember we said restrictive, we said\nno scripts, remote, downloaded scripts,\n\n150\n00:08:35.160 --> 00:08:39.522\nlocal scripts, configuration files,\nnon of that is actually going to work.\n\n151\n00:08:39.522 --> 00:08:44.744\nSo we need to make sure we\nchange our execution policy.\n\n152\n00:08:44.744 --> 00:08:49.990\nNow let's check mine,\nremember we got our get-executionpolicy.\n\n153\n00:08:49.990 --> 00:08:54.390\nAnd I am currently set to remote sign,\nwhich means\n\n154\n00:08:54.390 --> 00:08:58.890\nlocal scripts that I write run, anything\nI download has to be digitally signed.\n\n155\n00:08:58.890 --> 00:09:02.420\nSo I can write my own scripts, don't have\nto worry about digitally signing them,\n\n156\n00:09:02.420 --> 00:09:05.610\nwhich is what we're gonna be\ndoing here with our profile.\n\n157\n00:09:05.610 --> 00:09:08.520\nAll right, let's jump back out to,\n\n158\n00:09:08.520 --> 00:09:11.550\nlet's go out a couple of levels here,\nshorten that path up.\n\n159\n00:09:13.600 --> 00:09:18.340\nAll right, so,\nlet's take a look at a profile.\n\n160\n00:09:18.340 --> 00:09:22.530\nLet's say, we're gonna start with Don's,\nI know I've got his loaded up, I'm gonna\n\n161\n00:09:22.530 --> 00:09:29.150\nfire ISE cuz it might be a little bit\neasier to work with some of this in ISE.\n\n162\n00:09:29.150 --> 00:09:32.100\n&gt;&gt; Yeah, he's got a little\nplethora of funky colors going on.\n\n163\n00:09:32.100 --> 00:09:33.115\nSo let's take a look at that one.\n\n164\n00:09:33.115 --> 00:09:37.774\n&gt;&gt; Let's take a look at this, so\nDon Pezet, offer up his profile for\n\n165\n00:09:37.774 --> 00:09:40.540\nus and wow, look how great that is.\n\n166\n00:09:40.540 --> 00:09:41.610\nWhat did I do wrong there?\n\n167\n00:09:41.610 --> 00:09:44.353\n&gt;&gt; Did you lose it?\n\n168\n00:09:44.353 --> 00:09:45.711\n&gt;&gt; Evidently.\n\n169\n00:09:45.711 --> 00:09:47.107\n&gt;&gt; [LAUGH] Good times.\n\n170\n00:09:47.107 --> 00:09:50.030\n&gt;&gt; Wow, that's a great profile isn't it?\n\n171\n00:09:50.030 --> 00:09:52.698\nAnd that is not it all right well,\ngoodness gracious,\n\n172\n00:09:52.698 --> 00:09:54.880\nI know I've got his somewhere here.\n\n173\n00:09:54.880 --> 00:10:00.370\nI'll go grab it real quick,\nthere it is right there,\n\n174\n00:10:00.370 --> 00:10:03.120\nsomehow I did not successfully copy that.\n\n175\n00:10:04.690 --> 00:10:07.220\nAnd paste that in, so\nwe'll try this again.\n\n176\n00:10:09.890 --> 00:10:14.160\nThere it is, okay, get rid of that down\nthere, we don't need that for right now.\n\n177\n00:10:15.900 --> 00:10:18.690\nAll right, so this is Don's profile, and\n\n178\n00:10:18.690 --> 00:10:21.190\nlet's just take a look at\nwhat he's got in here.\n\n179\n00:10:21.190 --> 00:10:26.340\nHe's got a Set-Location, all right,\nwhich allows me to decide,\n\n180\n00:10:26.340 --> 00:10:34.710\nwhen you start PowerShell, I'm at my\nC:\\users\\michael, right, my profile.\n\n181\n00:10:34.710 --> 00:10:39.030\nHe wants them to start out C:, and\nthen he's doing a few things here.\n\n182\n00:10:39.030 --> 00:10:44.250\nIn order to change settings like\nyour colors and things like that,\n\n183\n00:10:44.250 --> 00:10:48.926\nwe're gonna be using this UI.RawUI.\n\n184\n00:10:48.926 --> 00:10:54.014\nIt's $host,\nwhich is your console or your ISE,\n\n185\n00:10:54.014 --> 00:10:59.840\n.UI, user interface,\n.RawUI, raw User Interface.\n\n186\n00:10:59.840 --> 00:11:04.803\nHe's setting that into\na variable called console, okay.\n\n187\n00:11:04.803 --> 00:11:08.239\nSo it's really just a shorthand,\ninstead of typing all of this,\n\n188\n00:11:08.239 --> 00:11:09.770\nI can now just type console.\n\n189\n00:11:09.770 --> 00:11:13.745\nAnd then console.foregroundColor.\n\n190\n00:11:13.745 --> 00:11:15.950\n&gt;&gt; He's got like the made for TV colors.\n\n191\n00:11:15.950 --> 00:11:16.778\n[LAUGH]\n&gt;&gt; Yes, he does,\n\n192\n00:11:16.778 --> 00:11:19.040\nhe's got the matrix going on here.\n\n193\n00:11:19.040 --> 00:11:24.890\nHe's got green,\nConsole.backgroundColor is black.\n\n194\n00:11:24.890 --> 00:11:28.760\nHe's got some different stroll back sizes,\nheight and width, he changes\n\n195\n00:11:28.760 --> 00:11:33.740\nchanges history count, window size,\nlooks like he's altered that a little bit.\n\n196\n00:11:33.740 --> 00:11:39.320\nAnd then he has this function prompt,\nnow this is an interesting one.\n\n197\n00:11:39.320 --> 00:11:42.631\nYour prompt, right,\nwhat you see sitting there,\n\n198\n00:11:42.631 --> 00:11:45.946\nlike when I open up PowerShell,\nthis is my prompt.\n\n199\n00:11:45.946 --> 00:11:49.826\nps and then the path like pwd,\nmy current working directory or\n\n200\n00:11:49.826 --> 00:11:54.377\nmy present working directory,\nI guess would be a better way to say that,\n\n201\n00:11:54.377 --> 00:11:56.483\nis showing up there as my prompt.\n\n202\n00:11:56.483 --> 00:12:01.070\nHe has changed that,\nthere's a special function called prompt.\n\n203\n00:12:01.070 --> 00:12:06.062\nAnd we haven't learned about functions\nyet, but a real short definition of\n\n204\n00:12:06.062 --> 00:12:10.898\nfunction, is just a group of lines of\ncode that I've assigned a name to but\n\n205\n00:12:10.898 --> 00:12:13.115\nI can then call and have execute.\n\n206\n00:12:13.115 --> 00:12:16.330\nThere's a special one called prompt, and\n\n207\n00:12:16.330 --> 00:12:19.790\nthat function gets called\nevery time you hit Enter.\n\n208\n00:12:19.790 --> 00:12:24.500\nSo you write some code in there and\nyou hit Enter, your code executes, right.\n\n209\n00:12:24.500 --> 00:12:26.540\nWe see it on screen or\nwhatever we're doing.\n\n210\n00:12:26.540 --> 00:12:29.280\nBut then once its done\nwe're back to our prompt.\n\n211\n00:12:29.280 --> 00:12:32.080\nAnd that's because it calls this function,\nevery time you hit Enter,\n\n212\n00:12:32.080 --> 00:12:34.510\nwhenever it's done doing what it's doing,\n\n213\n00:12:34.510 --> 00:12:39.350\nit calls function and\ndoes whatever you say to do inside here.\n\n214\n00:12:39.350 --> 00:12:42.140\nSo he's changed his\nprompt up a little bit.\n\n215\n00:12:42.140 --> 00:12:45.156\nAnd we'll talk a little bit more\nabout what he's done here and\n\n216\n00:12:45.156 --> 00:12:46.840\nhow he's done it in just a minute.\n\n217\n00:12:46.840 --> 00:12:48.947\nWe'll look at customizing our prompt.\n\n218\n00:12:48.947 --> 00:12:52.262\nBut that's what that's for,\nI actually added this to his,\n\n219\n00:12:52.262 --> 00:12:54.734\nthis is one of my favorite\nlittle functions.\n\n220\n00:12:54.734 --> 00:12:59.495\nIt's just a function w, we'll talk about\nthis when we get into functions but\n\n221\n00:12:59.495 --> 00:13:03.023\nit opens up Windows Explorer\nin your current directory.\n\n222\n00:13:03.023 --> 00:13:08.226\nSo I find that extremely handy, I don't\nthink his edit function is gonna work,\n\n223\n00:13:08.226 --> 00:13:13.213\ncuz in one of his episodes he actually\ndefined, actually no function edit.\n\n224\n00:13:13.213 --> 00:13:14.849\nSo he's got a function that's going to\ncall notepad plus plus with whatever file\n\n225\n00:13:14.849 --> 00:13:16.595\nyou have and I'm pretty sure I installed\nNotepad ++, with whatever file you have.\n\n226\n00:13:16.595 --> 00:13:17.389\n&gt;&gt; As long as you have that.\n\n227\n00:13:17.389 --> 00:13:20.991\n&gt;&gt; I'm pretty sure I installed Notepad ++.\n\n228\n00:13:23.288 --> 00:13:25.582\nYeah I've got Notepad ++,\nwe'll have to try it out.\n\n229\n00:13:25.582 --> 00:13:29.710\nAll right, so\nanyway we'll go back through here.\n\n230\n00:13:29.710 --> 00:13:32.116\nAnd we'll look at creating a profile and\nthe syntax but\n\n231\n00:13:32.116 --> 00:13:34.900\nI just wanted to show you\nkinda what was in here first.\n\n232\n00:13:34.900 --> 00:13:38.005\nSo what I'm gonna do is I'm\ngoing to copy all of this, and\n\n233\n00:13:38.005 --> 00:13:44.280\nI am going to go back over to PowerShell\nand I'm gonna open up my profile.\n\n234\n00:13:44.280 --> 00:13:50.409\nSo notepad, And $profile, all right, and\n\n235\n00:13:50.409 --> 00:13:56.849\nthis is my console specific or my host\nspecific, this is for PowerShell console.\n\n236\n00:13:56.849 --> 00:14:01.125\nGonna right click, Paste,\nI'm gonna paste that all in there and\n\n237\n00:14:01.125 --> 00:14:03.550\nthen I'm gonna close it and Save it.\n\n238\n00:14:03.550 --> 00:14:08.580\nAll right, so now in that file\nI have all of that information.\n\n239\n00:14:08.580 --> 00:14:12.400\nNow I'm gonna close PowerShell and\nI'm gonna load PowerShell back up.\n\n240\n00:14:14.150 --> 00:14:14.755\nAnd there we go,\n\n241\n00:14:14.755 --> 00:14:18.320\nyou'll see there's a little bit of\ndifference in my PowerShell window now.\n\n242\n00:14:18.320 --> 00:14:22.140\nI have a black background with, I don't\neven know if you can see it out there.\n\n243\n00:14:22.140 --> 00:14:25.080\nThere's actually blue texts up there.\n\n244\n00:14:25.080 --> 00:14:26.890\n&gt;&gt; I thought it said green.\n\n245\n00:14:26.890 --> 00:14:27.650\n&gt;&gt; Did it say green?\n\n246\n00:14:27.650 --> 00:14:28.745\n&gt;&gt; I thought so.\n\n247\n00:14:28.745 --> 00:14:30.020\n&gt;&gt; It did say green, didn't it?\n\n248\n00:14:30.020 --> 00:14:33.840\nNow that I think about it, let's see\nhe's got a background color is black.\n\n249\n00:14:33.840 --> 00:14:38.700\nForeground color is green, it probably\nlooks blue on the black background maybe.\n\n250\n00:14:38.700 --> 00:14:40.600\nI don't know.\n\n251\n00:14:40.600 --> 00:14:42.400\n&gt;&gt; Anyway.\n&gt;&gt; It does look blue, but\n\n252\n00:14:42.400 --> 00:14:44.780\nit says green there, interesting.\n\n253\n00:14:45.800 --> 00:14:48.850\nBut what we're seeing is\nthe changes are there, right.\n\n254\n00:14:48.850 --> 00:14:50.780\n&gt;&gt; Maybe Don's colorblind.\n\n255\n00:14:50.780 --> 00:14:56.640\n&gt;&gt; Yeah, [LAUGH] the colors are there, the\nfact that my prompt is actually changed,\n\n256\n00:14:56.640 --> 00:14:58.490\nit's not the standard prompt any more.\n\n257\n00:14:58.490 --> 00:15:01.430\nLet's see what else he did in here.\n\n258\n00:15:01.430 --> 00:15:03.910\nNotice the location,\nwe're starting out at the C drive.\n\n259\n00:15:03.910 --> 00:15:09.900\nI'm not in my profile, right, C: end users\nMichael anymore, it starts out in C:.\n\n260\n00:15:09.900 --> 00:15:11.145\n&gt;&gt; Yeah, you might have to change that.\n\n261\n00:15:11.145 --> 00:15:12.120\n[LAUGH]\n&gt;&gt; Yeah, [LAUGH]\n\n262\n00:15:12.120 --> 00:15:16.040\nwe're gonna have to change that cuz\nnobody out there can see what I'm doing.\n\n263\n00:15:16.040 --> 00:15:20.657\nSo let's modify this, let's say\nthat background color of black is\n\n264\n00:15:20.657 --> 00:15:24.960\nmaybe okay,but the font,\nthe foreground color is horrible.\n\n265\n00:15:24.960 --> 00:15:27.550\nI honestly thought green\nwas an allowed color.\n\n266\n00:15:27.550 --> 00:15:30.120\n&gt;&gt; How about white.\n\n267\n00:15:30.120 --> 00:15:31.120\n&gt;&gt; You wanna do white?\n\n268\n00:15:31.120 --> 00:15:33.670\n&gt;&gt; Yeah, high contrast.\n\n269\n00:15:33.670 --> 00:15:38.390\n&gt;&gt; Let's say, actually I need to\nmodify my profile not the script here.\n\n270\n00:15:38.390 --> 00:15:43.759\nSo let's do this, let's go back over here,\nrerun Notepad profile,\n\n271\n00:15:43.759 --> 00:15:48.596\nlet's change that to white,\nI took out my quotes, didn't I.\n\n272\n00:15:52.587 --> 00:15:58.550\nLet's Save it, close it, launch it again.\n\n273\n00:16:00.090 --> 00:16:02.364\nStill getting.\n&gt;&gt; I'm seeing Doug says here that\n\n274\n00:16:02.364 --> 00:16:05.750\nthe prompt function has a blue\nbackground so let's see.\n\n275\n00:16:05.750 --> 00:16:08.706\n&gt;&gt; Did I not notice that\nhe had a central prompt?\n\n276\n00:16:08.706 --> 00:16:11.498\nPoor guy colored blue for his prompt.\n\n277\n00:16:11.498 --> 00:16:13.300\nGood eye there, Doug, good eye.\n\n278\n00:16:13.300 --> 00:16:14.292\n&gt;&gt; Thanks Doug.\n\n279\n00:16:14.292 --> 00:16:18.690\n&gt;&gt; All right,\nwe'll change that back to his green here.\n\n280\n00:16:18.690 --> 00:16:23.790\nAnd we'll change this one to white,\nI should be able to cycle now.\n\n281\n00:16:23.790 --> 00:16:25.880\nI can finally cycle through\nthe colors here actually.\n\n282\n00:16:27.430 --> 00:16:31.720\nBlack, blue, cyan, dark blue,\ndark cyan, dark grey, dark green,\n\n283\n00:16:31.720 --> 00:16:35.220\ndark magenta, dark red,\ndark yellow, grey, green.\n\n284\n00:16:36.880 --> 00:16:39.200\nLots of choices,\nwhich one do you want, Cherokee?\n\n285\n00:16:39.200 --> 00:16:42.581\n&gt;&gt; How about cyan which might\nbe different from kyan?\n\n286\n00:16:42.581 --> 00:16:46.236\n[LAUGHING]\n&gt;&gt; Yeah, I don't know how to say these,\n\n287\n00:16:46.236 --> 00:16:47.710\nisn't that blue, right?\n\n288\n00:16:47.710 --> 00:16:48.220\n&gt;&gt; Yeah.\n\n289\n00:16:48.220 --> 00:16:49.906\n&gt;&gt; Okay, we'll do that.\n\n290\n00:16:49.906 --> 00:16:53.147\n&gt;&gt; Which might not be too awfully\ndifferent from the blue that it was\n\n291\n00:16:53.147 --> 00:16:54.380\nbefore [LAUGHING].\n\n292\n00:16:54.380 --> 00:16:56.259\nNow that I think about it.\n\n293\n00:16:56.259 --> 00:16:58.560\n&gt;&gt; Let's modify this profile.\n\n294\n00:16:58.560 --> 00:17:00.530\n&gt;&gt; White.\n&gt;&gt; And let's make that white.\n\n295\n00:17:00.530 --> 00:17:02.509\nI think white's gonna\nbe our simplest choice.\n\n296\n00:17:02.509 --> 00:17:04.168\n&gt;&gt; A smart aleck here.\n\n297\n00:17:04.168 --> 00:17:09.120\n[LAUGH] All right, we'll close that\ndown and we'll open that back up.\n\n298\n00:17:09.120 --> 00:17:12.882\nAnd now we can see that\na little bit better.\n\n299\n00:17:12.882 --> 00:17:18.360\nAll right, and again what I'm noticing\nis one that the path has changed.\n\n300\n00:17:18.360 --> 00:17:21.490\nBecause he set that with\nthe set dash location.\n\n301\n00:17:21.490 --> 00:17:26.760\nSo anything that I do in my profile\ngets executed as I open up PowerShell.\n\n302\n00:17:26.760 --> 00:17:31.390\nThat's the cool thing about these profiles\nlike when we looked, I closed that again,\n\n303\n00:17:31.390 --> 00:17:32.410\ndidn't I?\n\n304\n00:17:32.410 --> 00:17:34.115\nLet's open that back up.\n\n305\n00:17:34.115 --> 00:17:38.875\nYou know, for example this function right\nhere where I have named a function w and\n\n306\n00:17:38.875 --> 00:17:43.230\nit is going to launch Windows Explorer\nin the current working directory.\n\n307\n00:17:43.230 --> 00:17:44.293\n&gt;&gt; Yeah, what does that mean?\n\n308\n00:17:44.293 --> 00:17:45.300\n&gt;&gt; Well, let's see.\n\n309\n00:17:45.300 --> 00:17:49.558\nSo here's my PowerShell window,\nI'm going to hit w and hit Enter and look.\n\n310\n00:17:49.558 --> 00:17:53.173\nIt opened up File Explorer at C:,\n\n311\n00:17:53.173 --> 00:17:57.297\nif I change my directories C D, C:\\.\n\n312\n00:17:57.297 --> 00:18:02.728\nI don't know, users Michael downloads.\n\n313\n00:18:02.728 --> 00:18:04.580\n&gt;&gt; Are you sure?\n\n314\n00:18:04.580 --> 00:18:07.710\n&gt;&gt; Right and then I hit w and Enter.\n\n315\n00:18:07.710 --> 00:18:09.250\nIt opens up Windows Explorer.\n\n316\n00:18:09.250 --> 00:18:10.248\n&gt;&gt; Okay.\n&gt;&gt; In downloads.\n\n317\n00:18:10.248 --> 00:18:10.830\n&gt;&gt; Cool.\n\n318\n00:18:10.830 --> 00:18:13.374\n&gt;&gt; Right?\n&gt;&gt; [LAUGH]\n\n319\n00:18:13.374 --> 00:18:14.102\n&gt;&gt; And then again,\n\n320\n00:18:14.102 --> 00:18:17.014\nthis is not how I'm trying to teach\nyou that particular function,\n\n321\n00:18:17.014 --> 00:18:20.090\nI'm just trying to show you what\nyou can do with your profile.\n\n322\n00:18:20.090 --> 00:18:24.490\nYou can put all this stuff in your\nprofile, and have it available.\n\n323\n00:18:24.490 --> 00:18:27.360\nLet's do this.\n\n324\n00:18:27.360 --> 00:18:28.835\nLet me clean up a little bit.\n\n325\n00:18:28.835 --> 00:18:33.420\nI got too many things opened up,\nI'm just gonna tidy up here.\n\n326\n00:18:33.420 --> 00:18:35.070\nAnd I'm gonna go back to ISE.\n\n327\n00:18:38.550 --> 00:18:42.770\n&gt;&gt; And I'm gonna open up another one,\nso let's get,\n\n328\n00:18:42.770 --> 00:18:48.200\nlet's see what this one is, and\nthis one actually, all right.\n\n329\n00:18:48.200 --> 00:18:55.480\nSo we got this one, is one that\nI created and I don't like that.\n\n330\n00:18:55.480 --> 00:18:58.360\nThat's my old one that I used to use.\n\n331\n00:18:58.360 --> 00:19:01.154\nAll right, let's take a look\nat some other profiles and\n\n332\n00:19:01.154 --> 00:19:02.949\nthings we can do with our profiles.\n\n333\n00:19:02.949 --> 00:19:06.463\nAnd I also wanna take a look at\nusing the different profiles and\n\n334\n00:19:06.463 --> 00:19:08.165\nsee how that affects us here.\n\n335\n00:19:08.165 --> 00:19:09.340\nSo here's another one that I wrote.\n\n336\n00:19:09.340 --> 00:19:12.600\nI'm just gonna copy all\nof this information, and\n\n337\n00:19:12.600 --> 00:19:15.590\nI'm gonna go find my profile.\n\n338\n00:19:15.590 --> 00:19:18.668\nAll right, and\nI'm gonna remove all of this.\n\n339\n00:19:18.668 --> 00:19:23.000\nThis was all the stuff we got from Don,\nand I'm gonna paste that in there.\n\n340\n00:19:23.000 --> 00:19:27.279\nI'm gonna close it, save it, and\n\n341\n00:19:27.279 --> 00:19:32.895\nI'm gonna relaunch my console, all right?\n\n342\n00:19:32.895 --> 00:19:35.729\nGive it just a second and\nwe'll see a few things,\n\n343\n00:19:35.729 --> 00:19:39.600\none, my color is a little bit\ndifferent than what Don had chosen but\n\n344\n00:19:39.600 --> 00:19:42.527\nI get this message profile\nloaded successfully.\n\n345\n00:19:42.527 --> 00:19:46.126\nAnd then I get this message,\nloading personal and\n\n346\n00:19:46.126 --> 00:19:52.370\nsystem profiles took 4,197 milliseconds or\njust over four seconds there.\n\n347\n00:19:52.370 --> 00:19:53.630\nMy prompt are very similar,\n\n348\n00:19:53.630 --> 00:19:58.630\nthey can actually install that one\nfrom Don in this case, all right.\n\n349\n00:19:58.630 --> 00:20:05.410\nSo you see, by changing my profile, it\nchanges what happens when I open up ISE.\n\n350\n00:20:05.410 --> 00:20:08.711\nNow in that profile, let's take a look\nat what was in there, all right.\n\n351\n00:20:08.711 --> 00:20:09.805\nWe've got a few things.\n\n352\n00:20:09.805 --> 00:20:13.360\nOne, it set my location to the C drive,\nso that's where we start.\n\n353\n00:20:13.360 --> 00:20:16.710\nAnd also, remember this we\nlearned that in another episode.\n\n354\n00:20:16.710 --> 00:20:20.140\nI have mapped a drive\nto my scripts folder.\n\n355\n00:20:20.140 --> 00:20:24.240\nSo that when I come into PowerShell,\nwithout doing anything else,\n\n356\n00:20:24.240 --> 00:20:29.480\nI could change directories to s:,\nand there we are.\n\n357\n00:20:29.480 --> 00:20:30.496\nThere's all of my scripts.\n\n358\n00:20:30.496 --> 00:20:31.678\nI didn't have to map the drive.\n\n359\n00:20:31.678 --> 00:20:35.570\nI didn't have to New-PSDrive or\nanything like that.\n\n360\n00:20:35.570 --> 00:20:39.130\nIt's already done,\nbecause I put it in my profile.\n\n361\n00:20:39.130 --> 00:20:41.270\nQuick easy access to my scripts folder.\n\n362\n00:20:41.270 --> 00:20:44.610\nI then put a command\ncalled clear dash host,\n\n363\n00:20:44.610 --> 00:20:49.180\nbecause without this,\nI would see the output of this command.\n\n364\n00:20:49.180 --> 00:20:52.780\nWhen you run new dash PS drive,\nonce it finishes it gives you this\n\n365\n00:20:52.780 --> 00:20:56.900\ntable view of the drive and\nthe space available and things like that.\n\n366\n00:20:56.900 --> 00:20:59.140\nAnd I don't need that when\nI load up PowerShell.\n\n367\n00:20:59.140 --> 00:21:02.300\nSo I do clear host,\nwhich wipes the screen,\n\n368\n00:21:02.300 --> 00:21:06.440\nit's the same thing as doing CLS or\nclear on Linux.\n\n369\n00:21:06.440 --> 00:21:11.540\nSo clear dash host, below that\n\n370\n00:21:11.540 --> 00:21:14.510\nI'm assigning a brand new\nenvironment variable.\n\n371\n00:21:14.510 --> 00:21:17.780\nI find that I always need to\nfigure out what my IP address is.\n\n372\n00:21:17.780 --> 00:21:21.760\nI want a quick,\neasy way to get my IPv4 address.\n\n373\n00:21:21.760 --> 00:21:28.750\nSo I've written a little miniscript kind\nof thing that uses get-netIPConfiguration.\n\n374\n00:21:28.750 --> 00:21:32.986\nAnd then it looks between, in Windows 10\nnow, when you open up IP config all or\n\n375\n00:21:32.986 --> 00:21:36.478\nsomething, you have about 20\ndifferent adaptors depending.\n\n376\n00:21:36.478 --> 00:21:39.852\nI've got my wired, my wireless,\nall the tredo and 64 and and all those\n\n377\n00:21:39.852 --> 00:21:44.076\nnetwork adaptors, my virtualization-\n&gt;&gt; You want the status with info on?\n\n378\n00:21:44.076 --> 00:21:48.284\n&gt;&gt; Yeah, this is the only way I figured\nout how to get my physical network adapter\n\n379\n00:21:48.284 --> 00:21:49.460\nthat I'm using.\n\n380\n00:21:49.460 --> 00:21:52.330\nLook to see which one\nhas a default gateway\n\n381\n00:21:52.330 --> 00:21:55.580\nbecause all of my other network\nadapters do not have a default gateway.\n\n382\n00:21:55.580 --> 00:21:58.870\nSo I am saying where not equals null for\n\n383\n00:21:58.870 --> 00:22:02.840\nthe default gateway and\nnot equals disconnected.\n\n384\n00:22:02.840 --> 00:22:06.090\nSo if you can find the network\nadapter that's connected and\n\n385\n00:22:06.090 --> 00:22:10.780\nhas a gateway, that's most likely my\nactive network adapter that I'm using, and\n\n386\n00:22:10.780 --> 00:22:13.120\nI wanna get the IPv4 address.\n\n387\n00:22:13.120 --> 00:22:17.214\nAnd I'm storing that in\nan environment variable called HOSTIP.\n\n388\n00:22:17.214 --> 00:22:22.056\nWhich means now I should be able\nto go over here and go $ Hostip.\n\n389\n00:22:22.056 --> 00:22:26.958\nOops, that's not what I wanna do, $env:\n\n390\n00:22:30.039 --> 00:22:34.720\nHostIP and\nthere is my IPv4 address, right?\n\n391\n00:22:34.720 --> 00:22:37.720\nJust to verify, I could do an IPconfig and\n\n392\n00:22:37.720 --> 00:22:41.750\nthere is my IPv4 address for\nmy WiFi adapter, right?\n\n393\n00:22:41.750 --> 00:22:46.650\nSo now within PowerShell, I can grab\nthat really quick with that variable.\n\n394\n00:22:46.650 --> 00:22:49.020\nOr I use that in script or anything else,\n\n395\n00:22:49.020 --> 00:22:50.310\nI don't have to go\nthrough the extra steps.\n\n396\n00:22:50.310 --> 00:22:54.050\nI've already got the IPv4\naddress stored in a variable\n\n397\n00:22:54.050 --> 00:22:57.320\nthat I can use in my PowerShell sessions.\n\n398\n00:22:57.320 --> 00:22:58.022\n&gt;&gt; Pretty convenient.\n\n399\n00:22:58.022 --> 00:23:02.880\nI also saw you have a nice message there\nlike you could put have a great day, Mike.\n\n400\n00:23:02.880 --> 00:23:05.039\n&gt;&gt; Yes.\nTo kind, one of those self help-\n\n401\n00:23:05.039 --> 00:23:06.431\n&gt;&gt; Positive reinforcement or\n\n402\n00:23:06.431 --> 00:23:07.400\nwhatever, yeah.\n\n403\n00:23:07.400 --> 00:23:09.990\n&gt;&gt; You'd look in the mirror and\ntalk about yourself.\n\n404\n00:23:09.990 --> 00:23:11.820\nYeah, affirmations, I like that.\n\n405\n00:23:11.820 --> 00:23:14.950\nTo me when I was first learning\nto play around with profiles,\n\n406\n00:23:14.950 --> 00:23:17.810\nI wanted to verify that\nmy profile loaded up.\n\n407\n00:23:17.810 --> 00:23:22.541\nAnd so I've got that message when I\nopen up PowerShell, you'll see one,\n\n408\n00:23:22.541 --> 00:23:25.148\nI don't see anything about map and dry.\n\n409\n00:23:25.148 --> 00:23:28.436\nCuz I cleared the host, and then I get\nthis, profile loaded successfully.\n\n410\n00:23:28.436 --> 00:23:30.407\nSo it was just a kind of a thing for\n\n411\n00:23:30.407 --> 00:23:34.800\nmyself to verify that it was\nworking the way I expected it to.\n\n412\n00:23:34.800 --> 00:23:37.174\nThis message here is interesting.\n\n413\n00:23:37.174 --> 00:23:42.009\nI haven't figured out how to stop it yet,\nbut what it's telling me is Microsoft,\n\n414\n00:23:42.009 --> 00:23:46.260\npeople were complaining PowerShell\ntakes a long time to load up.\n\n415\n00:23:46.260 --> 00:23:50.130\nAnd so by default if it takes more\nthan 500 milliseconds to load up,\n\n416\n00:23:50.130 --> 00:23:54.148\nit's gonna give you this message and\ntell you, hey it's not our fault.\n\n417\n00:23:54.148 --> 00:23:59.348\n&gt;&gt; Yeah, so they were just kind\nof throwing it out there like,\n\n418\n00:23:59.348 --> 00:24:02.583\nokay [CROSSTALK]\n&gt;&gt; Yes, they're saying your profile and\n\n419\n00:24:02.583 --> 00:24:06.060\nyour personal settings are why PowerShell\nis talking so long to open up.\n\n420\n00:24:06.060 --> 00:24:06.736\nSo don't call us and complain.\n\n421\n00:24:06.736 --> 00:24:07.712\n&gt;&gt; That's great.\n\n422\n00:24:07.712 --> 00:24:08.492\n[LAUGH]\n&gt;&gt; It's what they're going.\n\n423\n00:24:08.492 --> 00:24:12.118\nBut it's telling me, because of my\nsettings, it took an extra three and\n\n424\n00:24:12.118 --> 00:24:15.389\na half seconds to open up my PowerShell,\nand I'm okay with that,\n\n425\n00:24:15.389 --> 00:24:17.520\ncuz I like what I've got here.\n\n426\n00:24:17.520 --> 00:24:20.480\nLet's see what else I\ndid with this profile.\n\n427\n00:24:20.480 --> 00:24:22.240\nBelow that I've got some functions.\n\n428\n00:24:22.240 --> 00:24:24.570\nNow, we haven't learned\nabout functions yet.\n\n429\n00:24:24.570 --> 00:24:26.370\nWe'll learn how to write these.\n\n430\n00:24:26.370 --> 00:24:29.180\nBut these are things that I have\nfound myself doing a lot and\n\n431\n00:24:29.180 --> 00:24:32.230\nwished they were already there,\nlike built in.\n\n432\n00:24:32.230 --> 00:24:33.082\nNow they are, for me.\n\n433\n00:24:33.082 --> 00:24:37.760\nI've got a function called Pro that\nlaunches Notepad with my profile.\n\n434\n00:24:37.760 --> 00:24:41.668\nSo if I want to edit my profile,\nI can just type pro and hit Enter.\n\n435\n00:24:41.668 --> 00:24:45.206\nAnd look, there is notepad with\nmy current profile opened up so\n\n436\n00:24:45.206 --> 00:24:48.161\nthat I can edit, save it,\nand close it, all right?\n\n437\n00:24:48.161 --> 00:24:50.299\nAnd all I did was type pro.\n\n438\n00:24:50.299 --> 00:24:55.737\nI have another one called SC that\nchanges to that directory scripts,\n\n439\n00:24:55.737 --> 00:25:00.624\nwhich doesn't look like it saves\nme a lot of typing, does it?\n\n440\n00:25:00.624 --> 00:25:02.275\n&gt;&gt; [LAUGH]\n&gt;&gt; I can type SC, or\n\n441\n00:25:02.275 --> 00:25:07.290\nI can do CD space S colon, but again,\nit's personal preference, right?\n\n442\n00:25:07.290 --> 00:25:12.627\nI can now type in SC,\nand it actually failed.\n\n443\n00:25:12.627 --> 00:25:14.050\nInteresting.\n\n444\n00:25:16.862 --> 00:25:17.630\nYou know what?\n\n445\n00:25:17.630 --> 00:25:22.310\nI think I remember now, I tried using SE,\nand SE is used already for\n\n446\n00:25:22.310 --> 00:25:24.480\nsomething else, and\nthat's why that one's failing.\n\n447\n00:25:24.480 --> 00:25:26.009\nIn my other profile I fixed that.\n\n448\n00:25:27.220 --> 00:25:31.990\nThis was like an experimental profile\nI was playing with a while ago.\n\n449\n00:25:31.990 --> 00:25:32.930\nWhat else did I do?\n\n450\n00:25:32.930 --> 00:25:35.050\nI changed my prompt a little bit.\n\n451\n00:25:35.050 --> 00:25:37.090\nNow, let's talk about this.\n\n452\n00:25:37.090 --> 00:25:41.490\nWhen we look at this prompt here, I've\ngot $current folder which is a variable.\n\n453\n00:25:41.490 --> 00:25:45.220\nAgain, we'll go over all of this\nin more detail in another episode.\n\n454\n00:25:45.220 --> 00:25:47.365\nAnd I'm splitting the path.\n\n455\n00:25:47.365 --> 00:25:49.360\nThat's a function, or\n\n456\n00:25:49.360 --> 00:25:54.300\na commandlet, in PowerShell that takes any\npath and splits it into it's components.\n\n457\n00:25:54.300 --> 00:25:58.270\nAnd then i'm doing -leaf,\n\n458\n00:25:58.270 --> 00:26:03.150\nwhich gets the last piece of the path,\nokay?\n\n459\n00:26:03.150 --> 00:26:09.298\nAnd then the path is set to Get Location,\nso wherever I am currently.\n\n460\n00:26:09.298 --> 00:26:14.390\nAnd then write-host PS space, open\nbracket, concatenate that with current\n\n461\n00:26:14.390 --> 00:26:20.340\nfolder, close bracket,\ncolon, greater than symbol.\n\n462\n00:26:20.340 --> 00:26:23.790\nNo new line, don't return,\ndon't hit carriage return.\n\n463\n00:26:23.790 --> 00:26:26.650\nAnd then return nothing, or return blank.\n\n464\n00:26:26.650 --> 00:26:31.190\nAnd that's why my prompt\nlooks the way it does, right?\n\n465\n00:26:31.190 --> 00:26:33.200\nPS space open bracket.\n\n466\n00:26:33.200 --> 00:26:35.780\nThe last part of my path,\nwell, I'm in C colon, so\n\n467\n00:26:35.780 --> 00:26:38.540\nC colon is the last part of my path.\n\n468\n00:26:38.540 --> 00:26:40.070\nColon, greater than.\n\n469\n00:26:40.070 --> 00:26:44.760\nSo if I change directory,\nCD C colon backslash, windows,\n\n470\n00:26:44.760 --> 00:26:51.850\nsystem 32, drivers etc,\nsomething like that,\n\n471\n00:26:51.850 --> 00:26:56.630\nnotice instead of seeing the full path,\nI only see the last part of that path,\n\n472\n00:26:56.630 --> 00:27:00.220\nbecause it was something that bothered me,\npersonally.\n\n473\n00:27:00.220 --> 00:27:02.220\nIf I'm deep into a folder structure,\n\n474\n00:27:02.220 --> 00:27:05.240\nthat would take up half of my window\njust displaying that path there.\n\n475\n00:27:05.240 --> 00:27:07.990\n&gt;&gt; And then by the time you type\nthe actual command or function.\n\n476\n00:27:07.990 --> 00:27:09.335\n&gt;&gt; Yeah.\n&gt;&gt; Or whatever it is you're typing,\n\n477\n00:27:09.335 --> 00:27:13.520\nyou're all the way wrapping and having to\nchange your window size, or who knows.\n\n478\n00:27:13.520 --> 00:27:14.184\n&gt;&gt; Exactly, and that annoyed me.\n\n479\n00:27:14.184 --> 00:27:15.740\n&gt;&gt; [LAUGH]\n&gt;&gt; So I said, you know what?\n\n480\n00:27:15.740 --> 00:27:17.480\nI just need to see\nthe last part of the path.\n\n481\n00:27:17.480 --> 00:27:20.564\n&gt;&gt; I may steal that from you,\nbecause I would always just type in, for\n\n482\n00:27:20.564 --> 00:27:23.170\nthe directory, manually,\nbut I like your way better.\n\n483\n00:27:23.170 --> 00:27:24.378\n&gt;&gt; Yep, because it's still current, right?\n\n484\n00:27:24.378 --> 00:27:25.383\n&gt;&gt; [LAUGH]\n&gt;&gt; If I change,\n\n485\n00:27:25.383 --> 00:27:26.814\nit still shows me where I'm at.\n\n486\n00:27:26.814 --> 00:27:34.350\nIf I go CD;/ SQL/Users,\nMichael, Documents, right?\n\n487\n00:27:34.350 --> 00:27:35.002\nIt changes.\n\n488\n00:27:35.002 --> 00:27:35.595\n&gt;&gt; Still shows me.\n\n489\n00:27:35.595 --> 00:27:36.974\n&gt;&gt; It shows me the last part of that path.\n\n490\n00:27:36.974 --> 00:27:37.830\n&gt;&gt; You're still in documents, yeah.\n\n491\n00:27:37.830 --> 00:27:40.340\n&gt;&gt; So yeah,\nthat's just a personal thing that I like.\n\n492\n00:27:40.340 --> 00:27:42.160\nIf I go back, and\nlet's see what else we've got.\n\n493\n00:27:42.160 --> 00:27:48.230\nI also have a function called IP,\nwhich does a git-net IP address.\n\n494\n00:27:48.230 --> 00:27:54.450\nI found myself typing this command a lot,\nand this is a lot easier to type.\n\n495\n00:27:54.450 --> 00:27:57.954\nSo now, when I open up PowerShell,\nand I just type in IP,\n\n496\n00:27:57.954 --> 00:28:01.020\nits the same thing as doing\na git-net IP address.\n\n497\n00:28:01.020 --> 00:28:02.820\nIt shows me all of that data.\n\n498\n00:28:02.820 --> 00:28:05.882\nAnd now you can see why it was difficult\nto get just the IPv4 address of my\n\n499\n00:28:05.882 --> 00:28:06.710\ncurrent adaptor?\n\n500\n00:28:06.710 --> 00:28:07.210\n&gt;&gt; Yeah.\n&gt;&gt; [LAUGH]\n\n501\n00:28:07.210 --> 00:28:09.122\n&gt;&gt; Cuz you see how many network adaptors I\n\n502\n00:28:09.122 --> 00:28:12.299\nhave in my machine.\nI have a lot of virtual networks and\n\n503\n00:28:12.299 --> 00:28:13.624\nthings like that.\nSo\n\n504\n00:28:13.624 --> 00:28:17.620\nthat particular output is not\nthat beneficial sometimes.\n\n505\n00:28:17.620 --> 00:28:19.930\nAll right, so that is a profile.\n\n506\n00:28:19.930 --> 00:28:21.367\nLet's take a look, and\nlet's change profile stuff.\n\n507\n00:28:21.367 --> 00:28:22.171\nActually, before.\n\n508\n00:28:22.171 --> 00:28:24.190\nYeah, let's do one more profile.\n\n509\n00:28:24.190 --> 00:28:25.420\nSo here's another profile.\n\n510\n00:28:25.420 --> 00:28:27.540\nThis is what I've been using currently.\n\n511\n00:28:27.540 --> 00:28:28.679\nI kinda like this one.\n\n512\n00:28:28.679 --> 00:28:29.870\nI've gotten used to it.\n\n513\n00:28:29.870 --> 00:28:34.730\nLet me copy it out, and get it into\nour use, and then we'll talk about it.\n\n514\n00:28:34.730 --> 00:28:39.594\nSo let me copy that and go back into here.\n\n515\n00:28:39.594 --> 00:28:41.370\nGet rid of all of this.\n\n516\n00:28:44.720 --> 00:28:48.864\nPaste that in there, save it, close it.\n\n517\n00:28:48.864 --> 00:28:52.064\nAnd you do have to relaunch PowerShell,\nright,\n\n518\n00:28:52.064 --> 00:28:55.037\ncuz it reads that profile\nwhen you launch it.\n\n519\n00:28:55.037 --> 00:28:56.545\n&gt;&gt; Retains that.\n&gt;&gt; So we'll open it up, and\n\n520\n00:28:56.545 --> 00:28:59.022\nI didn't change colors or\nanything like that.\n\n521\n00:28:59.022 --> 00:29:01.605\nBut now, I got rid of my little\nwelcome message that says,\n\n522\n00:29:01.605 --> 00:29:03.252\nyour profile loaded successfully.\n\n523\n00:29:03.252 --> 00:29:04.931\n&gt;&gt; [LAUGH]\n&gt;&gt; Successfully loaded, yeah.\n\n524\n00:29:04.931 --> 00:29:06.180\n&gt;&gt; Yeah.\nSo that's gone.\n\n525\n00:29:06.180 --> 00:29:09.630\nIt still tells me that my profile\ntook 3.7 seconds to open up.\n\n526\n00:29:09.630 --> 00:29:11.610\nMy prompt is little different though.\n\n527\n00:29:11.610 --> 00:29:13.740\nI've got some static data over here.\n\n528\n00:29:13.740 --> 00:29:16.372\nMike@itpro.tv.\n\n529\n00:29:16.372 --> 00:29:20.347\nAnd this is where I, me,\nI geek up on this stuff sometimes,\n\n530\n00:29:20.347 --> 00:29:22.820\nbut look at my title bar, Cherokee.\n\n531\n00:29:22.820 --> 00:29:25.140\nI don't know if you can see that or not.\n\n532\n00:29:25.140 --> 00:29:28.200\nIt has my path and the date and time.\n\n533\n00:29:28.200 --> 00:29:32.235\nAnd if I hit Enter,\nnotice that time updates.\n\n534\n00:29:32.235 --> 00:29:37.635\nAll right, if I change my path,\n\n535\n00:29:37.635 --> 00:29:44.440\nCD;/windows System 32, drivers.\n\n536\n00:29:44.440 --> 00:29:46.431\nThat's a nice long path to use.\n\n537\n00:29:46.431 --> 00:29:48.351\nEtc, all right?\n\n538\n00:29:48.351 --> 00:29:50.391\nYou'll see that path up here.\n\n539\n00:29:50.391 --> 00:29:51.356\nWhoops,I can't select it.\n\n540\n00:29:51.356 --> 00:29:53.739\nBut you see the path up\nthere in my title bar.\n\n541\n00:29:53.739 --> 00:29:56.689\nSo now, I finally said, you know what?\n\n542\n00:29:56.689 --> 00:29:57.960\nI don't want the path at all in my prompt.\n\n543\n00:29:57.960 --> 00:29:58.474\n&gt;&gt; That's pretty cool, yeah.\n\n544\n00:29:58.474 --> 00:29:59.332\n&gt;&gt; I'm just gonna move it.\n\n545\n00:29:59.332 --> 00:30:02.779\nSo now I can still see the whole path,\nbut I don't have to truncate it,\n\n546\n00:30:02.779 --> 00:30:05.072\nbut it's up in the title bar and\nout of the way.\n\n547\n00:30:05.072 --> 00:30:05.820\nI don't know.\n\n548\n00:30:05.820 --> 00:30:06.809\nI thought that was kind of geeky cool.\n\n549\n00:30:06.809 --> 00:30:09.788\n&gt;&gt; And then the time just reminds you how\nmuch you've been spending in PowerShell.\n\n550\n00:30:09.788 --> 00:30:11.051\n&gt;&gt; [LAUGH]\n&gt;&gt; Yes.\n\n551\n00:30:11.051 --> 00:30:13.102\n&gt;&gt; [LAUGH]\n&gt;&gt; If I need the date or time,\n\n552\n00:30:13.102 --> 00:30:14.800\nit's right up there.\n\n553\n00:30:14.800 --> 00:30:18.310\nOr if I need to know time of recently\nissued commands, or I'm like, okay,\n\n554\n00:30:18.310 --> 00:30:21.232\nI see I issued that command at 3:22 or\nright around there.\n\n555\n00:30:21.232 --> 00:30:22.730\nI'm looking at log files.\n\n556\n00:30:22.730 --> 00:30:25.330\nI can look for entries about that\nsame time, things like that.\n\n557\n00:30:25.330 --> 00:30:29.390\nSo I like having the the time handy for\nme, not that my clock down here in my\n\n558\n00:30:29.390 --> 00:30:31.011\nsystem tray is all-\n&gt;&gt; Bad\n\n559\n00:30:31.011 --> 00:30:31.625\n&gt;&gt; [LAUGH]\n\n560\n00:30:31.625 --> 00:30:32.528\n&gt;&gt; Yeah.\n\n561\n00:30:32.528 --> 00:30:34.000\nAnd it is right there.\n\n562\n00:30:34.000 --> 00:30:40.560\nBut again, just geeky coolness that we\ncan have with our PowerShell prompt.\n\n563\n00:30:40.560 --> 00:30:43.310\nAll right, so let's see if I\ndid anything else cool in here.\n\n564\n00:30:43.310 --> 00:30:45.382\nI did change things up\na little bit in this one.\n\n565\n00:30:45.382 --> 00:30:49.580\nRemember, I mapped that drive,\n\n566\n00:30:49.580 --> 00:30:54.280\nI call it S, to go to my scripts folder,\nand then I fixed my function.\n\n567\n00:30:54.280 --> 00:30:59.030\nI now call it CDS, so it doesn't\nconflict with the other aliases.\n\n568\n00:30:59.030 --> 00:31:05.240\nSo now in PowerShell, if I do CDS,\nyou'll see my path is now S colon.\n\n569\n00:31:05.240 --> 00:31:08.725\nI do a DIR, I'm in my scripts folder.\n\n570\n00:31:08.725 --> 00:31:13.459\nSo I can change to my scripts\nfolder just by typing CDS, or\n\n571\n00:31:13.459 --> 00:31:17.306\nI could even use that in\na script as a variable,\n\n572\n00:31:17.306 --> 00:31:21.076\ncuz CDS is basically storing C:/scripts.\n\n573\n00:31:21.076 --> 00:31:24.860\nAnd that's a mapped drive there.\n\n574\n00:31:24.860 --> 00:31:26.036\nLet´s see, what else?\n\n575\n00:31:26.036 --> 00:31:27.552\nI've still got my IP.\n\n576\n00:31:27.552 --> 00:31:28.906\nI changed that up, though.\n\n577\n00:31:28.906 --> 00:31:32.662\nInstead of doing the complete\nGet-Net IP Address, it's now,\n\n578\n00:31:32.662 --> 00:31:37.753\nremember how I have this setting a host to\nan environment variable, my IPv4 address?\n\n579\n00:31:37.753 --> 00:31:38.331\n&gt;&gt; Mm-hm.\n\n580\n00:31:38.331 --> 00:31:41.071\n&gt;&gt; So now I have a function,\nwhich is calling a variable.\n\n581\n00:31:41.071 --> 00:31:41.910\n&gt;&gt; And\nyou're just calling upon that, okay.\n\n582\n00:31:41.910 --> 00:31:43.820\n&gt;&gt; Yeah, and that was a lot easier.\n\n583\n00:31:43.820 --> 00:31:47.503\nSo now I can type in IP, and\nI can get my IPv4 address.\n\n584\n00:31:47.503 --> 00:31:53.729\nI don't have to type in $env:hostIP.\n\n585\n00:31:53.729 --> 00:31:55.353\nI can just type IP, and I get it.\n\n586\n00:31:55.353 --> 00:31:56.190\n&gt;&gt; Super fast, yeah.\n\n587\n00:31:56.190 --> 00:31:58.266\n&gt;&gt; Right, yeah, absolutely.\n\n588\n00:31:58.266 --> 00:31:59.600\nAnd that's what it's all about.\n\n589\n00:31:59.600 --> 00:32:00.346\nW is still there.\n\n590\n00:32:00.346 --> 00:32:06.758\nSo If I want to open up a Windows Explorer\nin my current directory,\n\n591\n00:32:06.758 --> 00:32:11.538\nIt gets me right to that,\nand that's just the tip\n\n592\n00:32:11.538 --> 00:32:15.989\nof what we can really\ndo with these profiles.\n\n593\n00:32:15.989 --> 00:32:19.824\nAll right, now, last thing,\nI know we're getting short on time.\n\n594\n00:32:19.824 --> 00:32:24.149\nBut I wanna take a look at one more\nconcept here, or verify something, right?\n\n595\n00:32:24.149 --> 00:32:28.501\nI've made all these changes\nin this profile right here.\n\n596\n00:32:28.501 --> 00:32:34.374\nWhich is microsoft.powershell_profile.ps1,\nand that's in my Documents.\n\n597\n00:32:34.374 --> 00:32:37.883\nThat means this is current user,\ncurrent host, right?\n\n598\n00:32:37.883 --> 00:32:41.503\nThis is specific to PowerShell,\nlet's verify that.\n\n599\n00:32:41.503 --> 00:32:45.117\nIf I open up ISE again,\nlet's close it, and\n\n600\n00:32:45.117 --> 00:32:51.792\nthen open up the Integrated Scripting\nEnvironment, and open up my Script Pane.\n\n601\n00:32:51.792 --> 00:32:55.909\nNotice that I don't have the fancy\nprompt that says Mike@itpro.tv.\n\n602\n00:32:55.909 --> 00:32:57.989\n&gt;&gt; You don't have\nthe extra time at the top.\n\n603\n00:32:57.989 --> 00:33:00.720\n&gt;&gt; I don't have the time at the top,\nwhat if I type w?\n\n604\n00:33:00.720 --> 00:33:04.912\nIt just says, what the heck are you trying\nto do, because w means nothing to me.\n\n605\n00:33:04.912 --> 00:33:09.029\nIf I do IP, it says, that's nothing,\nI don't know what you're talking about.\n\n606\n00:33:09.029 --> 00:33:14.213\nSo you see how that profile is loaded\nup for the console, but not for ISE.\n\n607\n00:33:14.213 --> 00:33:16.699\nLet's change that,\nlet's see if we can fix that.\n\n608\n00:33:16.699 --> 00:33:22.107\nLet's close my console, and PowerShell,\nand all this other stuff Mike has open.\n\n609\n00:33:22.107 --> 00:33:25.489\nAnd let's take, we can do it one\nof two ways, I can copy and paste.\n\n610\n00:33:25.489 --> 00:33:30.222\nOr I can just rename this to profile.ps1,\nif I didn't want to maintain\n\n611\n00:33:30.222 --> 00:33:34.662\nindependent profiles,\nI'll maintain the independence for now.\n\n612\n00:33:34.662 --> 00:33:39.659\nDo a Ctrl + A, Ctrl + C, and\nI'm gonna open up profile.ps1.\n\n613\n00:33:41.483 --> 00:33:48.532\nAnd we'll paste all of that in there and\nwe'll save it, and close it, right?\n\n614\n00:33:48.532 --> 00:33:53.097\nAnd then I'm actually gonna delete\nthis one, just for giggles.\n\n615\n00:33:53.097 --> 00:33:54.879\nAnd now,\nwhat do you think is gonna happen?\n\n616\n00:33:54.879 --> 00:33:59.115\nThis is your chance in your mind to go,\nhm, all right, what he's got left,\n\n617\n00:33:59.115 --> 00:34:00.385\nwhat profile is that?\n\n618\n00:34:00.385 --> 00:34:01.974\nAnd that's what you should be thinking.\n\n619\n00:34:01.974 --> 00:34:04.941\nIt's in my document, so\nthis is current user, but\n\n620\n00:34:04.941 --> 00:34:08.469\nit doesn't have the name of a host\nin the name of the profile.\n\n621\n00:34:08.469 --> 00:34:12.123\nIt doesn't say PowerShell ISE,\nor PowerShell,\n\n622\n00:34:12.123 --> 00:34:14.912\nwhich means its current user or host.\n\n623\n00:34:14.912 --> 00:34:17.505\nSo let's see, I open up PowerShell, and\n\n624\n00:34:17.505 --> 00:34:20.332\nyou can already tell\nit's mapping my drive.\n\n625\n00:34:20.332 --> 00:34:25.573\nThat takes a minute, and\nif I type in IP, does it work?\n\n626\n00:34:25.573 --> 00:34:29.488\nAbsolutely, I get my IP address,\nif I go over to ISE.\n\n627\n00:34:32.176 --> 00:34:37.004\nAnd notice it's taking a little bit\nlonger, notice my date and time and\n\n628\n00:34:37.004 --> 00:34:39.112\npath showed up in my title bar.\n\n629\n00:34:39.112 --> 00:34:44.243\nAnd if I type in IP, I get my IP address.\n\n630\n00:34:44.243 --> 00:34:47.413\nSo now,\nif I make a change to that profile,\n\n631\n00:34:47.413 --> 00:34:52.800\nthat affects both environments,\nmy console as well as PowerShell ISE.\n\n632\n00:34:52.800 --> 00:34:56.299\nBut it would only affect me, if somebody\nelse was logging onto this system,\n\n633\n00:34:56.299 --> 00:34:57.839\nit wouldn't bother them at all.\n\n634\n00:34:57.839 --> 00:35:00.389\nMy profile wouldn't change,\nthey could have their own profile,\n\n635\n00:35:00.389 --> 00:35:01.215\ntheir own settings.\n\n636\n00:35:01.215 --> 00:35:07.958\nBecause that wasn't in that SQL\nin Windows PowerShell directory.\n\n637\n00:35:07.958 --> 00:35:12.398\nThe install directory for\nPowerShell is where that store,\n\n638\n00:35:12.398 --> 00:35:16.942\nthe all users profile,\nSystem 32, Windows PowerShell.\n\n639\n00:35:16.942 --> 00:35:21.209\n&gt;&gt; PowerShell, yep, and\nthen whatever version, backslash, profile.\n\n640\n00:35:21.209 --> 00:35:23.289\n&gt;&gt; Backslash, profile.\n\n641\n00:35:23.289 --> 00:35:26.900\nSo if I did it there,\nthat would apply to even other users,\n\n642\n00:35:26.900 --> 00:35:29.873\nlike I have two log ons\nthat I use on this system.\n\n643\n00:35:29.873 --> 00:35:33.320\nIf I switched users and logged on to\nthe other one, I wouldn't be able to use\n\n644\n00:35:33.320 --> 00:35:36.359\nthose functions, because they\nwouldn't be part of my profile.\n\n645\n00:35:36.359 --> 00:35:41.629\nBecause I did them in the current\nuser instead of the all users.\n\n646\n00:35:41.629 --> 00:35:45.015\nSo that's a little bit about, well,\na lot of it, hopefully, about profiles.\n\n647\n00:35:45.015 --> 00:35:48.645\n&gt;&gt; [LAUGH] I know, I'm ready to go like,\nfor us to finish here,\n\n648\n00:35:48.645 --> 00:35:50.347\nI'm gonna go change mine now.\n\n649\n00:35:50.347 --> 00:35:52.747\n&gt;&gt; Hey, so I know,\nhopefully you guys are as excited as well.\n\n650\n00:35:52.747 --> 00:35:55.527\nYeah, go make your custom prompts and\nstart loading up.\n\n651\n00:35:55.527 --> 00:35:58.918\nNow we are gonna talk about some other\nthings when it comes to profiles.\n\n652\n00:35:58.918 --> 00:36:02.485\nCuz at some point, we can get so\nmuch information in that profile.\n\n653\n00:36:02.485 --> 00:36:04.395\n&gt;&gt; To bog it down when it launches up.\n\n654\n00:36:04.395 --> 00:36:07.211\n&gt;&gt; Yeah it starts taking\na long time to launch up.\n\n655\n00:36:07.211 --> 00:36:10.432\nI'll say that with a new PS reline module.\n\n656\n00:36:10.432 --> 00:36:15.001\nAnd some of the other changes\nthey've made to Windows PowerShell,\n\n657\n00:36:15.001 --> 00:36:17.817\nI don't have as much to put in my profile.\n\n658\n00:36:17.817 --> 00:36:20.820\nLike one of the things I would\nalways do is import modules,\n\n659\n00:36:20.820 --> 00:36:22.859\nmodules that I want there all the time.\n\n660\n00:36:22.859 --> 00:36:25.921\nThe Active Directory module,\nthe DNS module, and things like that.\n\n661\n00:36:25.921 --> 00:36:28.940\nNow, if I just use those commands,\nit automatically goes and\n\n662\n00:36:28.940 --> 00:36:31.098\nlooks in the default location for modules.\n\n663\n00:36:31.098 --> 00:36:34.153\nAnd if it's there, it will load it\nup automatically in the background.\n\n664\n00:36:34.153 --> 00:36:37.643\nSo, I really don't need to do that\nanymore, unless I just choose,\n\n665\n00:36:37.643 --> 00:36:40.411\nunless I want to,\nit can speed things up a little bit.\n\n666\n00:36:40.411 --> 00:36:44.582\nBut I can leave that stuff out of my\nprofile, but like customizing your prompt,\n\n667\n00:36:44.582 --> 00:36:45.652\ncustom functions.\n\n668\n00:36:45.652 --> 00:36:47.883\nWhen we get into the more advanced stuff,\n\n669\n00:36:47.883 --> 00:36:51.792\nI'm gonna show you how to make a module\nto store all of your functions in.\n\n670\n00:36:51.792 --> 00:36:54.928\nSo I don't have to put all\nthose functions in my profile.\n\n671\n00:36:54.928 --> 00:36:58.832\nAnd as long as I put that module where\nthe default location for the modules is-\n\n672\n00:36:58.832 --> 00:37:00.881\n&gt;&gt; So you're like organizing, basically.\n\n673\n00:37:00.881 --> 00:37:03.404\n&gt;&gt; Yes.\n&gt;&gt; You call them in on as needed basis.\n\n674\n00:37:03.404 --> 00:37:07.447\n&gt;&gt; Exactly, and then I don't have to load\nup everything with my profile every time I\n\n675\n00:37:07.447 --> 00:37:10.845\nstart that console or start ISE,\nand that can just speed things up.\n\n676\n00:37:10.845 --> 00:37:15.781\nAnd it makes it more efficient, because\nthose modules are easy to move around,\n\n677\n00:37:15.781 --> 00:37:17.707\nwhich I can do with my profile.\n\n678\n00:37:17.707 --> 00:37:21.646\nYou can export your profile, it's just a\ntext file, you can save it or a .PS1 file,\n\n679\n00:37:21.646 --> 00:37:23.471\nyou can save it up to a shared location.\n\n680\n00:37:23.471 --> 00:37:26.893\nAnd if you go to another machine,\nand you want that profile,\n\n681\n00:37:26.893 --> 00:37:31.207\nyou can copy it into that location,\nand fire it up, and you'll have those.\n\n682\n00:37:31.207 --> 00:37:35.197\nAnother thing I should probably point out\ntoo is you can launch PowerShell from\n\n683\n00:37:35.197 --> 00:37:37.630\na command prompt with\na dash no profile option.\n\n684\n00:37:37.630 --> 00:37:42.100\nAnd it won't load your profile,\nsometimes I need that to troubleshoot,\n\n685\n00:37:42.100 --> 00:37:44.782\nto see if my profile is\ncausing the problem.\n\n686\n00:37:44.782 --> 00:37:48.042\nOr if I want to emulate\nsomebody else's environment.\n\n687\n00:37:48.042 --> 00:37:50.692\nI might use that dash no\nprofile option that'll launch\n\n688\n00:37:50.692 --> 00:37:53.410\nPowerShell without reading\nany of my custom profiles.\n\n689\n00:37:53.410 --> 00:37:57.330\nSo, a lot of fun we can have with our\nprofiles as long as we know where\n\n690\n00:37:57.330 --> 00:37:57.966\nthey are.\n\n691\n00:37:57.966 --> 00:38:00.501\n&gt;&gt; All right, well,\nI'm looking forward to some more fun here.\n\n692\n00:38:00.501 --> 00:38:03.519\nThank you for joining us today, Mike,\nand thank you for joining us as well.\n\n693\n00:38:03.519 --> 00:38:05.966\nYou don't want to miss what we've\ngot headed your way, stay tuned.\n\n694\n00:38:05.966 --> 00:38:08.089\nFor this show, though,\nwe'll go ahead and sign out.\n\n695\n00:38:08.089 --> 00:38:09.433\nI've been your host, Cherokee Boose.\n\n696\n00:38:09.433 --> 00:38:10.361\n&gt;&gt; And I'm Mike Rodrick.\n\n697\n00:38:10.361 --> 00:38:12.366\n&gt;&gt; See you next time here at ITPro.TV.\n\n698\n00:38:13.625 --> 00:38:19.502\n[MUSIC]\n\n699\n00:38:19.502 --> 00:38:22.723\n&gt;&gt; Thank you for watching ITPro.TV.\n\n",
          "vimeoId": "238055975"
        },
        {
          "description": "In this episode, Mike and Cherokee take a look at basic functions in PowerShell. They discuss the components of a function, the format of a function, and adding function statements.",
          "length": "1961",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-1-basic_functions-101317-PGM.00_32_26_00.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-1-basic_functions-101317-PGM.00_32_26_00.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-1-basic_functions-101317-PGM.00_32_26_00.Still001-sm.jpg",
          "title": "Basic Functions",
          "transcript": "WEBVTT\n\n1\n00:00:00.003 --> 00:00:06.677\nWelcome to ITPRO.TV [CROSSTALK] Coming at\nyou live from San Francisco, California.\n\n2\n00:00:06.677 --> 00:00:08.442\n[MUSIC]\n\n3\n00:00:08.442 --> 00:00:13.865\n&gt;&gt; You're watching ITPRO.TV\n&gt;&gt; Welcome back to your PowerShell series.\n\n4\n00:00:13.865 --> 00:00:15.614\nI'm you show host Cherokee Boose.\n\n5\n00:00:15.614 --> 00:00:19.210\nIn this episode,\nwe'll be taking a look at basic functions.\n\n6\n00:00:19.210 --> 00:00:22.815\nAnd with us today in studios we have Mr.\nMike Roderick.\n\n7\n00:00:22.815 --> 00:00:23.950\nHow's it going today, Mike?\n\n8\n00:00:23.950 --> 00:00:24.940\n&gt;&gt; It's going great, Cherokee.\n\n9\n00:00:24.940 --> 00:00:25.810\nThanks for having me back.\n\n10\n00:00:25.810 --> 00:00:28.040\nExcited to be here as always.\n\n11\n00:00:28.040 --> 00:00:30.200\nAnd yes,\nwhat did we say we were doing today?\n\n12\n00:00:30.200 --> 00:00:34.065\n&gt;&gt; Basic functions, and\nyou mentioned it in a prior episode.\n\n13\n00:00:34.065 --> 00:00:36.776\nSo would you mind just explaining\nto me again what a function is so\n\n14\n00:00:36.776 --> 00:00:37.840\nwe can start there?\n\n15\n00:00:37.840 --> 00:00:40.560\n&gt;&gt; Absolutely, and if we're gonna\ndefine a function, let's see,\n\n16\n00:00:40.560 --> 00:00:42.246\nMicrosoft has their own definition here.\n\n17\n00:00:42.246 --> 00:00:46.410\nA list of Windows PowerShell statements\nthat has a name that you assign.\n\n18\n00:00:47.480 --> 00:00:48.340\nMake sense?\n\n19\n00:00:48.340 --> 00:00:49.640\n&gt;&gt; Not really.\n&gt;&gt; Okay, let's fix it.\n\n20\n00:00:49.640 --> 00:00:51.200\n&gt;&gt; [LAUGH]\n&gt;&gt; Let's clarify that, then.\n\n21\n00:00:51.200 --> 00:00:53.720\nSo really,\nwe've learned about cmdlets, and\n\n22\n00:00:53.720 --> 00:00:57.260\nhow we can use these\ncmdlets to perform actions.\n\n23\n00:00:57.260 --> 00:01:00.380\nAnd all a function is,\nis a way to take one or\n\n24\n00:01:00.380 --> 00:01:06.590\nmore of those cmdlets and kind of group\nthem together and assign a name to them.\n\n25\n00:01:06.590 --> 00:01:08.190\nAnd then that is our function.\n\n26\n00:01:08.190 --> 00:01:10.290\nAnd then we can run that\nfunction whenever we want.\n\n27\n00:01:10.290 --> 00:01:15.070\nSimply by calling the name of the\nfunction, we can execute all the code or\n\n28\n00:01:15.070 --> 00:01:18.080\nthe cmdlets that are found\ninside that function.\n\n29\n00:01:18.080 --> 00:01:19.810\nSo that's your basic\ndefinition of a function.\n\n30\n00:01:19.810 --> 00:01:22.058\n&gt;&gt; Okay, can I call it a baby script?\n\n31\n00:01:22.058 --> 00:01:24.104\n&gt;&gt; Sort of.\n\n32\n00:01:24.104 --> 00:01:27.060\n[LAUGH] Sorta kinda.\n\n33\n00:01:27.060 --> 00:01:28.860\n&gt;&gt; Okay.\n&gt;&gt; But the function really,\n\n34\n00:01:28.860 --> 00:01:31.330\nI do wanna make sure, we have to\nput that function somewhere, and\n\n35\n00:01:31.330 --> 00:01:32.260\nthat could be in a script.\n\n36\n00:01:32.260 --> 00:01:35.450\nSo-\n&gt;&gt; Okay, a component.\n\n37\n00:01:35.450 --> 00:01:36.962\n&gt;&gt; A component of a script, there you go.\n\n38\n00:01:36.962 --> 00:01:37.462\n&gt;&gt; Okay.\n\n39\n00:01:37.462 --> 00:01:38.730\n&gt;&gt; Exactly, that would work.\n\n40\n00:01:38.730 --> 00:01:44.040\nSo really, the idea behind a function\nis the ability to create reusability,\n\n41\n00:01:45.220 --> 00:01:46.740\neven exportability.\n\n42\n00:01:46.740 --> 00:01:49.570\nMove it from one to another\nmachine if I need it.\n\n43\n00:01:49.570 --> 00:01:53.040\nBut the idea is to take things that\nI had to do and group them up,\n\n44\n00:01:53.040 --> 00:01:55.680\ngive them a name, and\nthen I can call that anytime I want.\n\n45\n00:01:55.680 --> 00:02:00.430\nTo hide complex or tedious things, to do\nrepetitive things like, I don't know,\n\n46\n00:02:00.430 --> 00:02:05.460\ncalculating a price after tax,\nor a sales commission, right?\n\n47\n00:02:05.460 --> 00:02:08.018\nWe could put all the math\ninside the function.\n\n48\n00:02:08.018 --> 00:02:12.090\nAnd then whenever we needed to do that\ninstead of writing out these big commands\n\n49\n00:02:12.090 --> 00:02:15.030\nto do those calculations,\nI can just call that function and\n\n50\n00:02:15.030 --> 00:02:18.250\nprovide some information to it,\nwhat numbers I need to crunch.\n\n51\n00:02:18.250 --> 00:02:20.810\nAnd then inside the function\nis all the code.\n\n52\n00:02:20.810 --> 00:02:23.740\nAnd it will do its job and\nspit out its answer for me,\n\n53\n00:02:23.740 --> 00:02:26.860\nand then I don't have to write that\nstuff over and over and over again.\n\n54\n00:02:26.860 --> 00:02:30.670\n&gt;&gt; Nice, so it's almost like it can take\nbits and pieces and create something, and\n\n55\n00:02:30.670 --> 00:02:32.565\nuse it in a very modular design.\n\n56\n00:02:32.565 --> 00:02:33.860\n&gt;&gt; Mm-hm, exactly right, so\n\n57\n00:02:33.860 --> 00:02:38.350\nlet's take a look at how we can go\nabout writing our own functions.\n\n58\n00:02:38.350 --> 00:02:41.730\nAnd now there are basic functions\nwhich we're gonna cover here.\n\n59\n00:02:41.730 --> 00:02:45.215\nThere's also advanced functions where we\nstart binding, do cmdlet binding, and\n\n60\n00:02:45.215 --> 00:02:46.020\nthings like this.\n\n61\n00:02:46.020 --> 00:02:49.210\nAnd we'll cover that in another series\nwhen we start getting a little more\n\n62\n00:02:49.210 --> 00:02:49.810\nhigh level.\n\n63\n00:02:50.840 --> 00:02:53.680\nSo there are different types\nof functions and, like I say,\n\n64\n00:02:53.680 --> 00:02:57.780\nwe're gonna be sticking with what\nwe call basic functions for now.\n\n65\n00:02:57.780 --> 00:03:01.730\nSo let's look at my screen here and\nI've got, I called it Simple here.\n\n66\n00:03:01.730 --> 00:03:04.940\nI really should call it Basic since\nthat's what we're talking about,\n\n67\n00:03:04.940 --> 00:03:06.420\nwith a lower case a.\n\n68\n00:03:06.420 --> 00:03:09.430\nBut a function structure, all right?\n\n69\n00:03:09.430 --> 00:03:12.150\nIs going to be, just a little FYI for\n\n70\n00:03:12.150 --> 00:03:15.490\nyou I jumped into ISE,\nmy integrating scripting environment.\n\n71\n00:03:15.490 --> 00:03:19.170\nCuz it's a lot easier to work with\nfunctions in this environment.\n\n72\n00:03:19.170 --> 00:03:22.270\nWell, rather than trying to\ntype them all out on one line,\n\n73\n00:03:22.270 --> 00:03:24.740\nif I was in my normal console.\n\n74\n00:03:24.740 --> 00:03:26.950\nI would need to try to write\nthem out all in one line or\n\n75\n00:03:26.950 --> 00:03:29.220\nuse my line continuation characters.\n\n76\n00:03:29.220 --> 00:03:31.370\nWhich is that backtick, if you're curious.\n\n77\n00:03:31.370 --> 00:03:32.990\n&gt;&gt; Yes.\n&gt;&gt; I don't know what people call that.\n\n78\n00:03:32.990 --> 00:03:37.257\n&gt;&gt; If you got like a really\nlong It's either an or.\n\n79\n00:03:37.257 --> 00:03:39.080\n&gt;&gt; No, it's not the curly one.\n\n80\n00:03:39.080 --> 00:03:39.800\n&gt;&gt; No?\n&gt;&gt; It's the-\n\n81\n00:03:39.800 --> 00:03:41.650\n&gt;&gt; Just the little tiny, tilde.\n\n82\n00:03:41.650 --> 00:03:42.761\n&gt;&gt; Tilde, there we go.\n\n83\n00:03:42.761 --> 00:03:43.915\nThat's the word I was looking for.\n\n84\n00:03:43.915 --> 00:03:45.990\n&gt;&gt; [LAUGH]\n&gt;&gt; The apostrophe that goes the wrong way.\n\n85\n00:03:45.990 --> 00:03:46.510\n&gt;&gt; Yeah.\n\n86\n00:03:46.510 --> 00:03:47.796\nI had to think about it too.\n\n87\n00:03:47.796 --> 00:03:51.384\n&gt;&gt; That's what they call the line\ncontinuation character, and\n\n88\n00:03:51.384 --> 00:03:55.250\nso if you ever in the console and\nyou want your code is gonna be long.\n\n89\n00:03:55.250 --> 00:03:59.389\nRather than scrolling across the screen,\nwhich it will do,\n\n90\n00:03:59.389 --> 00:04:03.540\nyou can use that tilde to continue\nyour code on the next line.\n\n91\n00:04:03.540 --> 00:04:06.810\nAnd it won't treat it as a normal\ncarriage return in separate lines.\n\n92\n00:04:06.810 --> 00:04:08.240\nIt will see it as one line.\n\n93\n00:04:08.240 --> 00:04:11.790\nBut anyway, so I've switched over to ISE\ncuz it's a little bit easier to work with,\n\n94\n00:04:11.790 --> 00:04:14.850\nand plus, I was able to type a lot\nof this stuff out ahead of time.\n\n95\n00:04:14.850 --> 00:04:18.840\nSo that we don't have to watch me\ntry to type, it'll slow things down.\n\n96\n00:04:18.840 --> 00:04:21.890\nOther thing I'll point out in\nhere is a comment, all right?\n\n97\n00:04:21.890 --> 00:04:27.080\nWhen we are working with scripts\nwhich we haven't really done yet,\n\n98\n00:04:27.080 --> 00:04:29.040\nwe can put comments in there.\n\n99\n00:04:29.040 --> 00:04:34.490\nComments allow me to markup my code, make\nit a lot easier for me to read later on.\n\n100\n00:04:34.490 --> 00:04:38.250\nRemember what the heck I did, or\nsomebody else that's working with my stuff\n\n101\n00:04:38.250 --> 00:04:40.790\nafter the fact can\nunderstand what I was doing.\n\n102\n00:04:40.790 --> 00:04:45.540\nAlso a way to make certain lines of\ncode not execute for test reasons.\n\n103\n00:04:45.540 --> 00:04:48.490\nBut for PowerShell,\nthe common character is the pound symbol.\n\n104\n00:04:48.490 --> 00:04:49.950\nWe'll know that.\n\n105\n00:04:49.950 --> 00:04:51.786\nWe call that now the Yu Yung [INAUDIBLE]?\n\n106\n00:04:51.786 --> 00:04:53.010\n&gt;&gt; Hashtag.\n&gt;&gt; The hashtag, yeah.\n\n107\n00:04:53.010 --> 00:04:55.760\n&gt;&gt; I'm not young kid, but I do know that.\n\n108\n00:04:55.760 --> 00:04:58.178\n[LAUGH]\n&gt;&gt; A lot younger than I am.\n\n109\n00:04:58.178 --> 00:05:01.725\nSo the hashtag is the single\nline comment character and\n\n110\n00:05:01.725 --> 00:05:05.640\nI could just put a hashtag in\nfront of each in every line.\n\n111\n00:05:05.640 --> 00:05:09.130\nSometimes if you have blocks of code that\nyou wanna comment out it's a little bit\n\n112\n00:05:09.130 --> 00:05:13.690\neasier to use this less than\nhashtag at the beginning And\n\n113\n00:05:13.690 --> 00:05:17.460\nthen hashtag greater than at the end, and\nthat comments out everything in between.\n\n114\n00:05:17.460 --> 00:05:22.380\nYou'll see the color turns green in here,\nwhich just means the interpreter,\n\n115\n00:05:22.380 --> 00:05:27.686\nwhen PowerShell reads this it will not try\nto interpret anything that's a comment.\n\n116\n00:05:27.686 --> 00:05:29.585\nIt's gonna ignore that completely.\n\n117\n00:05:29.585 --> 00:05:33.245\n&gt;&gt; So it might just be like additional\nnotes, supplemental for you and it's not\n\n118\n00:05:33.245 --> 00:05:37.325\ngonna be running in line with whatever\nyour functions are, or your scripts are.\n\n119\n00:05:37.325 --> 00:05:39.085\n&gt;&gt; Exactly, and I love comments.\n\n120\n00:05:39.085 --> 00:05:41.495\nI think everybody should\nlearn to use comments.\n\n121\n00:05:42.815 --> 00:05:47.990\nIt helps you tremendously in the future\nbecause I've worked on projects and\n\n122\n00:05:47.990 --> 00:05:50.380\nyou'll spend hours and\ndays and days on this stuff.\n\n123\n00:05:50.380 --> 00:05:52.520\nAnd you get done and\nthen two months later you go back and\n\n124\n00:05:52.520 --> 00:05:56.230\nlook at it and\nyou're like why did I do it that way?\n\n125\n00:05:56.230 --> 00:05:58.040\nWhat does this even mean?\n\n126\n00:05:58.040 --> 00:06:02.210\nCuz you found in some forum some obscure\nway to do things and it worked for you.\n\n127\n00:06:02.210 --> 00:06:03.570\nAnd you tweaked it a little bit.\n\n128\n00:06:03.570 --> 00:06:06.890\nAnd you look at it two months later and\nyou have no idea what you did or\n\n129\n00:06:06.890 --> 00:06:07.530\nwhy you did it.\n\n130\n00:06:07.530 --> 00:06:09.130\n&gt;&gt; So, that's the story of my life but\n\n131\n00:06:09.130 --> 00:06:11.478\ninstead of like two months it could\nbe like two hours though, right?\n\n132\n00:06:11.478 --> 00:06:12.510\n[LAUGH]\n&gt;&gt; [LAUGH] Yeah.\n\n133\n00:06:12.510 --> 00:06:13.970\nSo then you should defiantly use comments.\n\n134\n00:06:13.970 --> 00:06:14.870\n&gt;&gt; Okay, cool I will.\n\n135\n00:06:14.870 --> 00:06:16.700\n&gt;&gt; So we're defiantly gonna comment that.\n\n136\n00:06:16.700 --> 00:06:18.700\nAll right, so, back to functions then.\n\n137\n00:06:18.700 --> 00:06:22.510\nAnd I wanted to point that out cuz\nthis hashtag and this guy down here,\n\n138\n00:06:22.510 --> 00:06:26.270\nthat's not part of my function, in fact I\ncould take him out just so we can see for\n\n139\n00:06:26.270 --> 00:06:28.910\nnow what we've got here, all right?\n\n140\n00:06:28.910 --> 00:06:32.410\nSo this is the basic layout of a function.\n\n141\n00:06:32.410 --> 00:06:34.490\nThis is a keyword, function.\n\n142\n00:06:34.490 --> 00:06:37.260\nThat lets PowerShell know that hey,\nI'm writing a function.\n\n143\n00:06:37.260 --> 00:06:41.980\nI wanna define a new\nfunction in my system.\n\n144\n00:06:41.980 --> 00:06:44.380\nAnd then after that comes, oops.\n\n145\n00:06:45.970 --> 00:06:50.625\nThe function name, so whatever you wanna\ncall it without the little greater than\n\n146\n00:06:50.625 --> 00:06:52.548\nless than symbols on either end.\n\n147\n00:06:52.548 --> 00:06:56.550\nI just put those in there because\nI thought it'd look cool.\n\n148\n00:06:56.550 --> 00:06:59.760\n&gt;&gt; And FYI Doug from the chat\nhe was clarifying and\n\n149\n00:06:59.760 --> 00:07:03.546\ncorrecting our little tilde and\ngrav debacle here.\n\n150\n00:07:03.546 --> 00:07:05.130\n&gt;&gt; The grave.\n&gt;&gt; It's actually, yes.\n\n151\n00:07:05.130 --> 00:07:07.120\n&gt;&gt; That's right cuz the tilde is the one-\n&gt;&gt; Grav.\n\n152\n00:07:07.120 --> 00:07:08.455\n&gt;&gt; -that does the-\n&gt;&gt; Squiggle.\n\n153\n00:07:08.455 --> 00:07:10.241\n&gt;&gt; -like the approximation type symbol.\n\n154\n00:07:10.241 --> 00:07:11.290\n&gt;&gt; Yeah.\n&gt;&gt; Yeah, okay, so it's the grav.\n\n155\n00:07:11.290 --> 00:07:12.302\n&gt;&gt; So we have those.\n&gt;&gt; There we go or the grave.\n\n156\n00:07:12.302 --> 00:07:13.094\n&gt;&gt; Thank you done.\n\n157\n00:07:13.094 --> 00:07:15.052\n&gt;&gt; Or however that's pronounced.\n\n158\n00:07:15.052 --> 00:07:16.490\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] All right so\n\n159\n00:07:16.490 --> 00:07:18.630\nthat is my line continuation character.\n\n160\n00:07:20.230 --> 00:07:24.190\nSo function name, and the function name\ncan be whatever you wanna call it.\n\n161\n00:07:24.190 --> 00:07:27.060\nYou can call it Bob, if you want to.\n\n162\n00:07:27.060 --> 00:07:30.860\nMicrosoft and most of the places that you\nwill go out and if you're reading up on\n\n163\n00:07:30.860 --> 00:07:35.045\nthis will recommend that you follow\nnormal PowerShell convention.\n\n164\n00:07:35.045 --> 00:07:37.125\nVerb dash noun.\n\n165\n00:07:37.125 --> 00:07:42.675\nWhat it is, what the action is going\nto be dash what it's gonna act upon or\n\n166\n00:07:42.675 --> 00:07:44.045\nwhatever your noun is.\n\n167\n00:07:44.045 --> 00:07:45.952\nAnd that's a good idea.\n\n168\n00:07:45.952 --> 00:07:47.342\nI have tried to switch over.\n\n169\n00:07:47.342 --> 00:07:52.942\nI'm so used to naming functions in little\nbit different method that it's tough for\n\n170\n00:07:52.942 --> 00:07:55.103\nme sometimes to remember that.\n\n171\n00:07:55.103 --> 00:07:57.877\n&gt;&gt; Okay.\n&gt;&gt; But that is the way we should do it,\n\n172\n00:07:57.877 --> 00:08:00.774\nbut it won't hurt anything if it's not.\n\n173\n00:08:00.774 --> 00:08:03.780\nIt doesn't matter at all,\nlike I said you call it Bob or Cherokee or\n\n174\n00:08:03.780 --> 00:08:05.083\nwhatever you wanna call it.\n\n175\n00:08:05.083 --> 00:08:12.280\nAnd then we've got this open brace and\nthen a close brace, right?\n\n176\n00:08:12.280 --> 00:08:17.050\nSo if I take out statements for\nexample that is the body of the function,\n\n177\n00:08:17.050 --> 00:08:20.120\nthe calling keyword function.\n\n178\n00:08:20.120 --> 00:08:23.710\nThe name of that you're\ngonna name that function and\n\n179\n00:08:23.710 --> 00:08:27.450\nthen an open brace and\na close brace and that's my function.\n\n180\n00:08:27.450 --> 00:08:30.830\nAnd then within that we're\ngonna put whatever code or\n\n181\n00:08:30.830 --> 00:08:35.010\nI could say statements here or commandlets\nor whatever it is we want this function to\n\n182\n00:08:35.010 --> 00:08:40.370\ndo within those two braces and\nthat is my function.\n\n183\n00:08:40.370 --> 00:08:43.030\nNow we could do this\nagain all in one line.\n\n184\n00:08:43.030 --> 00:08:47.420\nI could make it look more\nlike this if I wanted too.\n\n185\n00:08:47.420 --> 00:08:51.930\nI am a big proponent of doing it this way.\n\n186\n00:08:51.930 --> 00:08:54.170\nI like a pretty code.\n\n187\n00:08:55.580 --> 00:08:56.670\nIt's readable.\n\n188\n00:08:56.670 --> 00:08:59.110\nIt makes it easy to go back and look at.\n\n189\n00:08:59.110 --> 00:09:02.530\nSo I think If I take the time\nto make everything look neat and\n\n190\n00:09:02.530 --> 00:09:04.300\npretty, it's gonna make it easier for me.\n\n191\n00:09:04.300 --> 00:09:06.770\nIt's gonna make it easier for\nother people to work with.\n\n192\n00:09:06.770 --> 00:09:11.030\nSo you see, I like to put my opening brace\nup on the line where I named the function.\n\n193\n00:09:11.030 --> 00:09:18.220\nAnd then my closing brace lines up with\nthe word function there all right?\n\n194\n00:09:18.220 --> 00:09:20.980\nAnd then indented are all\nof my statements.\n\n195\n00:09:20.980 --> 00:09:23.110\nSo you'll see I do that throughout here.\n\n196\n00:09:23.110 --> 00:09:27.090\nAnd it makes it really easy to tell where\none function starts and another one ends.\n\n197\n00:09:28.220 --> 00:09:31.110\nWhat's included in the function and\nthings like that.\n\n198\n00:09:31.110 --> 00:09:33.970\n&gt;&gt; Now is this something that\nyou just kind of created, or\n\n199\n00:09:33.970 --> 00:09:35.030\nis this pretty standard?\n\n200\n00:09:35.030 --> 00:09:36.520\n&gt;&gt; It's pretty standard.\n\n201\n00:09:36.520 --> 00:09:37.890\n&gt;&gt; Okay.\n&gt;&gt; I picked it up from somewhere and\n\n202\n00:09:37.890 --> 00:09:41.310\nI really liked it and\nsaid we'll stick with that but\n\n203\n00:09:41.310 --> 00:09:43.080\nin the end white space and programming.\n\n204\n00:09:43.080 --> 00:09:47.780\nWhite space doesn't matter it's only for\nhumans to look at where that is important.\n\n205\n00:09:47.780 --> 00:09:50.910\nSo if you don't want to do that\nway by all means don't do that.\n\n206\n00:09:50.910 --> 00:09:54.760\nAll right so\nthat is our basic function layout.\n\n207\n00:09:54.760 --> 00:09:58.530\nSo for example here is a very,\nvery simple function.\n\n208\n00:09:58.530 --> 00:10:00.670\nSo you got the keyword function and\n\n209\n00:10:00.670 --> 00:10:05.489\nthen I've got my verb- now that I\nwanna name it Start-PSAdmin, Start- or\n\n210\n00:10:05.489 --> 00:10:11.010\nStart-PSAdmin cuz I wanna launch\nPowerShell in administrative mode.\n\n211\n00:10:11.010 --> 00:10:12.794\nSo I'm gonna write a function to do that.\n\n212\n00:10:12.794 --> 00:10:16.620\n[COUGH] How many times you get in\nPowerShell and try to do something and\n\n213\n00:10:16.620 --> 00:10:19.270\nit tells you,\nyou need administrative command prompt or\n\n214\n00:10:19.270 --> 00:10:21.200\nadministrative PowerShell for\nthat and you're like, yeah.\n\n215\n00:10:21.200 --> 00:10:22.990\n&gt;&gt; So this one would be super handy for\nthat.\n\n216\n00:10:22.990 --> 00:10:24.520\n&gt;&gt; Yeah, so I can go, that's right and\n\n217\n00:10:24.520 --> 00:10:29.180\nI can launch my administrative PowerShell\nfrom right here and then keep on tracking.\n\n218\n00:10:29.180 --> 00:10:33.840\nSo there is my outline, the keyword,\nthe name that I wanna call it.\n\n219\n00:10:33.840 --> 00:10:35.680\nMy opening brace and\n\n220\n00:10:35.680 --> 00:10:40.640\nthen within there the code that I want\nto execute and then my closing brace.\n\n221\n00:10:40.640 --> 00:10:44.330\nAnd inside there it's\njust a normal command.\n\n222\n00:10:44.330 --> 00:10:47.720\nLike I said we're gonna do\nvery simple functions here.\n\n223\n00:10:47.720 --> 00:10:52.935\nAnd so if I took this code out of there\nand paste it it down here, right?\n\n224\n00:10:52.935 --> 00:10:56.950\nStart-Process, that's\na PowerShell commandlet.\n\n225\n00:10:56.950 --> 00:11:01.980\nPowerShell is the application I\nwanna run and then -verb RunAs.\n\n226\n00:11:01.980 --> 00:11:05.150\nSo if you didn't get\nhelp on start-Process,\n\n227\n00:11:05.150 --> 00:11:06.310\nyou'd see the syntax for it.\n\n228\n00:11:06.310 --> 00:11:10.760\nIf I can hit that, and\nsure enough it launches my\n\n229\n00:11:10.760 --> 00:11:16.400\nPowerShell Administrator,\nwith administrator credentials, right?\n\n230\n00:11:16.400 --> 00:11:20.760\nAnd the font is really small,\nbut you see my prompt is red?\n\n231\n00:11:20.760 --> 00:11:21.680\nThat's part of my profile.\n\n232\n00:11:21.680 --> 00:11:23.200\nI don't know if you guys can see that.\n\n233\n00:11:23.200 --> 00:11:24.460\nlet's bump that up.\n\n234\n00:11:24.460 --> 00:11:27.050\nI don't know why that's so small.\n\n235\n00:11:29.190 --> 00:11:33.390\n&gt;&gt; So those credentials, I'm sorry,\nI did say administrative mode.\n\n236\n00:11:33.390 --> 00:11:37.750\nBut I meant to say that the credentials\nare already, they're put into that\n\n237\n00:11:37.750 --> 00:11:41.270\nparticular, you're not gonna be prompted\nevery time you go and perform some kind of\n\n238\n00:11:41.270 --> 00:11:45.350\nadministrative task that normally would\nrequire that elevated permission.\n\n239\n00:11:45.350 --> 00:11:47.890\n&gt;&gt; It depends on who's running the script.\n\n240\n00:11:47.890 --> 00:11:52.260\nIn this case,\nthe run SCs that I am an administrator.\n\n241\n00:11:52.260 --> 00:11:55.600\nSo it's not prompting me for credentials\nit's just giving me the yes, no.\n\n242\n00:11:55.600 --> 00:11:57.740\nThat has a lot to do with my UAC mode.\n\n243\n00:11:57.740 --> 00:11:58.540\n&gt;&gt; Okay.\n\n244\n00:11:58.540 --> 00:12:00.800\n&gt;&gt; Being in administrator approval mode.\n\n245\n00:12:00.800 --> 00:12:03.650\nThat would change depending on who\nwas running the script, like if\n\n246\n00:12:03.650 --> 00:12:08.130\na nonadministrator tried to run that, it's\nnot gonna let them just type that command\n\n247\n00:12:08.130 --> 00:12:09.460\nin, and give them an administrative-\n&gt;&gt; Nice.\n\n248\n00:12:09.460 --> 00:12:11.730\n&gt;&gt; Command prompt if they don't\nhave administrative credentials.\n\n249\n00:12:11.730 --> 00:12:15.370\nSo instead it would prompt them to\nthe dialog box and they'd have to type in\n\n250\n00:12:15.370 --> 00:12:17.270\na username and password,\nthe head of administrative rights.\n\n251\n00:12:17.270 --> 00:12:20.730\nSo you're not gonna get around\nsecurity anyway doing that.\n\n252\n00:12:20.730 --> 00:12:24.840\nI changed my profile so that my prompt\nis read, easy way to tell that I'm in\n\n253\n00:12:24.840 --> 00:12:26.580\nadministrative-\n&gt;&gt; It match your shirt today.\n\n254\n00:12:26.580 --> 00:12:27.325\n&gt;&gt; Yes, exactly.\n\n255\n00:12:27.325 --> 00:12:28.370\n&gt;&gt; [LAUGH]\n&gt;&gt; But I can tell this is\n\n256\n00:12:28.370 --> 00:12:31.590\nmy administrative prompt versus a normal\n\n257\n00:12:31.590 --> 00:12:34.560\nPowerShell window that doesn't\nhave the red text over there.\n\n258\n00:12:34.560 --> 00:12:36.150\n&gt;&gt; Okay.\n&gt;&gt; Instead of doing a dollar sign and\n\n259\n00:12:36.150 --> 00:12:38.070\na pound, like they do in Bash.\n\n260\n00:12:38.070 --> 00:12:40.550\nSomething similar.\n\n261\n00:12:40.550 --> 00:12:44.080\nAnyway, so back to our function, so again,\nthis is just a normal command that I could\n\n262\n00:12:44.080 --> 00:12:48.280\ntype out any time I want from my\nPowerShell console or, as you see here,\n\n263\n00:12:48.280 --> 00:12:52.220\nfrom PowerShell ISE but\nI decided to create a function out of it.\n\n264\n00:12:52.220 --> 00:12:56.750\nSo let me execute this function,\nI do have to run this function, right?\n\n265\n00:12:56.750 --> 00:12:59.340\nBecause right now Windows or\n\n266\n00:12:59.340 --> 00:13:02.730\nPowerShell has no idea about\nthis function Start-PSAdmin.\n\n267\n00:13:02.730 --> 00:13:05.640\nSo what I'm gonna do is I'm\ngonna execute this code.\n\n268\n00:13:05.640 --> 00:13:09.680\nNow we haven't played around a lot\nwith ISE, so let's talk about it for\n\n269\n00:13:09.680 --> 00:13:11.080\njust a second.\n\n270\n00:13:11.080 --> 00:13:12.550\nI've got two buttons up here.\n\n271\n00:13:12.550 --> 00:13:15.720\nI've got run script and\nI've got run selection.\n\n272\n00:13:15.720 --> 00:13:20.110\nF5 for run script,\nF8 for run selection and\n\n273\n00:13:20.110 --> 00:13:22.980\nit's one of the things I love\nabout working in the ISE.\n\n274\n00:13:22.980 --> 00:13:27.420\nIf I do F5 or the little green play\nbutton, it will run this entire script.\n\n275\n00:13:27.420 --> 00:13:31.230\nEverything in it but in my case,\nthat wouldn't make sense I have random\n\n276\n00:13:31.230 --> 00:13:34.500\nfunctions in here for\nwhat we're doing in our show.\n\n277\n00:13:34.500 --> 00:13:37.980\nSo I need to be able to run just\nthese few lines in this case.\n\n278\n00:13:37.980 --> 00:13:41.750\nThat's where run selection\nof F8 comes in handy.\n\n279\n00:13:41.750 --> 00:13:46.450\nI can highlight what I want to run and\nexecute just those lines of code.\n\n280\n00:13:46.450 --> 00:13:50.370\nSo that's what I'm doing here,\nF8 would be the normal keystroke or\n\n281\n00:13:50.370 --> 00:13:51.310\nthe keyboard shortcut.\n\n282\n00:13:51.310 --> 00:13:56.190\nAll right, and when I run that, you'll\nnotice it spits the code out, right?\n\n283\n00:13:56.190 --> 00:14:00.230\nIt spits out the function itself and\nthen comes back to my prompt, and\n\n284\n00:14:00.230 --> 00:14:04.850\nI don't get a run as, no other PowerShell\nwindow opened up or anything like that.\n\n285\n00:14:04.850 --> 00:14:08.330\nBecause the function I\ndidn't run the function.\n\n286\n00:14:08.330 --> 00:14:10.710\nAll I've done so\nfar is create the function.\n\n287\n00:14:10.710 --> 00:14:15.315\nIt's now loaded up in my session and\nnow PowerShell knows about\n\n288\n00:14:15.315 --> 00:14:21.090\nstart-PSAdmin because I ran that\ndefinition of that function.\n\n289\n00:14:21.090 --> 00:14:26.880\nSo if I type in start- PS, look it\n\n290\n00:14:26.880 --> 00:14:32.979\neven shows up on my drop down list as\na auto fill, right or Intellisense.\n\n291\n00:14:32.979 --> 00:14:36.199\nSo I can just tab over, start-psadmin and\n\n292\n00:14:36.199 --> 00:14:42.190\nsure enough I get my administrative\nPower Shell window to open up, right?\n\n293\n00:14:42.190 --> 00:14:46.340\nSo now I've got that function,\nAnd I can use it any time I want.\n\n294\n00:14:46.340 --> 00:14:49.930\nNow let's see what happens if I open\nup PowerShell, not the ISE, but\n\n295\n00:14:49.930 --> 00:14:50.600\njust the console.\n\n296\n00:14:51.727 --> 00:14:55.700\nAnd I type it in,\nI try typing in, if I slow down.\n\n297\n00:14:55.700 --> 00:14:56.560\nPS admin.\n\n298\n00:14:56.560 --> 00:14:59.860\nIt looks like I got\nnothing here all right.\n\n299\n00:14:59.860 --> 00:15:04.270\nI can not use that function because\ncurrently that function is only\n\n300\n00:15:04.270 --> 00:15:09.300\ndefined in the session that I\nhave with my IS ehost, all right.\n\n301\n00:15:09.300 --> 00:15:10.390\nNow my console host here.\n\n302\n00:15:10.390 --> 00:15:12.440\nSo ISE knows about the function.\n\n303\n00:15:12.440 --> 00:15:16.870\nIt's loaded up in the it's memory space\nbut it's not in my PowerShell console.\n\n304\n00:15:16.870 --> 00:15:20.320\nSeparate application, separate process,\nseparate memory space right?\n\n305\n00:15:20.320 --> 00:15:22.690\nIt is not gonna have access to that.\n\n306\n00:15:22.690 --> 00:15:25.980\nWe'll talk about how we\ncan set it up that way,\n\n307\n00:15:25.980 --> 00:15:30.130\ncuz eventually that's really what I want.\n\n308\n00:15:30.130 --> 00:15:32.560\nIn this case it's kind of silly, right?\n\n309\n00:15:32.560 --> 00:15:36.520\nThis is actually more work writing this\nfunction, executing the function, and\n\n310\n00:15:36.520 --> 00:15:37.250\nthen calling it.\n\n311\n00:15:37.250 --> 00:15:40.450\nI could have just typed in\nStart-Process PowerShell, run as admin.\n\n312\n00:15:40.450 --> 00:15:41.750\nAll right,\nthat would've been a lot easier,\n\n313\n00:15:41.750 --> 00:15:47.020\nso, most of the time we don't write\nfunctions and use them within a session.\n\n314\n00:15:47.020 --> 00:15:49.088\nWe want to put those functions somewhere,\n\n315\n00:15:49.088 --> 00:15:51.620\nthat we're gonna have access\nto them in the future.\n\n316\n00:15:51.620 --> 00:15:55.449\nAnd we'll talk about how we do that\nonce we learn all about these wonderful\n\n317\n00:15:55.449 --> 00:15:56.144\nfunctions.\n\n318\n00:15:56.144 --> 00:15:57.476\nSo, so far, so good.\n\n319\n00:15:57.476 --> 00:15:59.124\nWe've got a very basic, Function.\n\n320\n00:15:59.124 --> 00:16:03.623\nJust the function keyword, the name of\nthe function, open and close braces and\n\n321\n00:16:03.623 --> 00:16:07.338\nwithin there we are going to have\nour code that we want to execute.\n\n322\n00:16:07.338 --> 00:16:12.720\nNow, this is the most basic\nfunction that you can get,\n\n323\n00:16:12.720 --> 00:16:17.360\nbecause there's nothing I have to do other\nthan calling the name of the function.\n\n324\n00:16:17.360 --> 00:16:19.890\nAgain just start oops, not there Mike.\n\n325\n00:16:20.970 --> 00:16:23.147\nGot to make sure you\nknow where your focus is.\n\n326\n00:16:24.982 --> 00:16:26.590\nWhat did I goof up there?\n\n327\n00:16:26.590 --> 00:16:28.050\nI took out the word function didn't I?\n\n328\n00:16:28.050 --> 00:16:30.690\nYeah, I had that highlighted\nwhen I started typing.\n\n329\n00:16:30.690 --> 00:16:34.370\nThere we go.\nSo you know the most basic function that\n\n330\n00:16:34.370 --> 00:16:40.470\nyou can possibly have is just one command\nin here, no parameters being passed to it.\n\n331\n00:16:40.470 --> 00:16:41.520\nAll you need is the name.\n\n332\n00:16:42.590 --> 00:16:44.630\nBut we are going to\ntake it a step further.\n\n333\n00:16:44.630 --> 00:16:48.820\nThe next thing I want to talk about\nis how we start using parameters\n\n334\n00:16:48.820 --> 00:16:50.570\nwith functions, right?\n\n335\n00:16:50.570 --> 00:16:56.990\nParameters are ways that I can\nprovide information to the function.\n\n336\n00:16:56.990 --> 00:17:00.930\nLike if I had a function that was gonna\nadd two numbers and I wanted to be able to\n\n337\n00:17:00.930 --> 00:17:04.950\nrun that anytime, I would require\ntwo parameters to pass into that.\n\n338\n00:17:04.950 --> 00:17:08.630\nIt needs the two numbers that\nI'm going to add together.\n\n339\n00:17:08.630 --> 00:17:14.250\nSo, somehow I wanna be able to pass data\ninto that function that it can manipulate.\n\n340\n00:17:14.250 --> 00:17:16.500\nThat is our parameters come into play.\n\n341\n00:17:17.500 --> 00:17:23.615\nTrying to think,\nif I do a get-service -name and\n\n342\n00:17:23.615 --> 00:17:28.855\nthen, I don't know, let's do appinfo or\n\n343\n00:17:28.855 --> 00:17:32.890\nsomething like that, right?\n\n344\n00:17:32.890 --> 00:17:34.917\nThat -name is the parameter and\n\n345\n00:17:34.917 --> 00:17:39.796\nwe're passing in the name of the service\nthat we want to get information about\n\n346\n00:17:39.796 --> 00:17:44.090\nrather than getting all services\nin get-service -Name appinfo.\n\n347\n00:17:44.090 --> 00:17:47.986\nSo if I hit enter, right, I get\ninformation about that particular app.\n\n348\n00:17:47.986 --> 00:17:52.990\nWell, how did get-service know what\nservice I wanted information about?\n\n349\n00:17:52.990 --> 00:17:55.700\nBecause of the name parameter\n\n350\n00:17:55.700 --> 00:17:59.250\nthat we used to pass in the name of\nthe service that I wanted to get.\n\n351\n00:17:59.250 --> 00:17:59.770\n&gt;&gt; All right, so\n\n352\n00:17:59.770 --> 00:18:05.710\nI wonder would it be the same if I were\nusing something like -verbose or -confirm.\n\n353\n00:18:05.710 --> 00:18:08.320\nWould those also be considered parameters?\n\n354\n00:18:08.320 --> 00:18:12.120\n&gt;&gt; Yes, but they're not really,\nwhat's a good way to say it?\n\n355\n00:18:12.120 --> 00:18:14.380\nThey are parameters, but\nthey don't accept any values.\n\n356\n00:18:14.380 --> 00:18:16.330\n&gt;&gt; Okay, so that's why I was trying\nto think about the difference there,\n\n357\n00:18:16.330 --> 00:18:18.210\nbecause you don't have to put\nanything else with verbose.\n\n358\n00:18:18.210 --> 00:18:20.510\n&gt;&gt; Yes.\n&gt;&gt; It's just a parameter by itself.\n\n359\n00:18:20.510 --> 00:18:21.030\n&gt;&gt; Yeah.\n&gt;&gt; Okay.\n\n360\n00:18:21.030 --> 00:18:22.780\n&gt;&gt; In fact, you could probably,\n\n361\n00:18:22.780 --> 00:18:27.380\nif we talked to some actual programmers\nout there, which I'm not, the dev guy.\n\n362\n00:18:27.380 --> 00:18:28.340\n&gt;&gt; Yeah.\n\n363\n00:18:28.340 --> 00:18:34.105\n&gt;&gt; Those might be more considered methods,\nbut I'm not positive on that,\n\n364\n00:18:34.105 --> 00:18:37.695\ncuz they don't take anything, or\nthey make the function do something.\n\n365\n00:18:37.695 --> 00:18:39.635\n&gt;&gt; I always call them parameters.\n\n366\n00:18:39.635 --> 00:18:40.465\n&gt;&gt; I call them parameters too.\n\n367\n00:18:40.465 --> 00:18:41.676\n&gt;&gt; So that's why was just curious, okay.\n\n368\n00:18:41.676 --> 00:18:44.179\n[LAUGH]\n&gt;&gt; I'm gonna call them parameters too.\n\n369\n00:18:44.179 --> 00:18:46.939\nAnybody out there wants to\ncorrect our terminology,\n\n370\n00:18:46.939 --> 00:18:49.175\nplease do so, we would appreciate that.\n\n371\n00:18:49.175 --> 00:18:51.305\nAll right, so\nlet's talk about these parameters.\n\n372\n00:18:51.305 --> 00:18:55.453\nSo if I'm gonna pass a parameter into a\nfunction, I need to let that function know\n\n373\n00:18:55.453 --> 00:19:00.330\nor should probably let that function know,\nright, that we're gonna have parameters.\n\n374\n00:19:00.330 --> 00:19:05.740\nThere's a couple of different ways that we\ncan define parameters for our functions.\n\n375\n00:19:05.740 --> 00:19:11.740\nWe can either do it inside\nthe function itself or we can do it in\n\n376\n00:19:11.740 --> 00:19:17.060\nline with the function declaration, where\nwe're actually creating the function.\n\n377\n00:19:17.060 --> 00:19:20.500\nFor example,\nlet me get rid of my comments so\n\n378\n00:19:20.500 --> 00:19:23.300\nthat we can actually see the color coding.\n\n379\n00:19:23.300 --> 00:19:26.980\nThey're not gonna like my little greater\nthan or less than around my name.\n\n380\n00:19:26.980 --> 00:19:30.310\nSo you'll see little arrows all over\nthe place because it's like, wait,\n\n381\n00:19:30.310 --> 00:19:31.530\nyou can't do that.\n\n382\n00:19:31.530 --> 00:19:34.600\nAgain this is more of a definition,\nit's not meant to be run.\n\n383\n00:19:34.600 --> 00:19:36.990\n&gt;&gt; Right, and you'll see that\nlike if you go out to technet or\n\n384\n00:19:36.990 --> 00:19:41.290\nwhatever where they have those carets,\nthat means insert information here.\n\n385\n00:19:41.290 --> 00:19:43.000\nDon't type in name.\n\n386\n00:19:43.000 --> 00:19:43.870\n&gt;&gt; Just a place holder.\n\n387\n00:19:43.870 --> 00:19:44.470\n&gt;&gt; Right.\n&gt;&gt; And\n\n388\n00:19:44.470 --> 00:19:46.540\nhere I'm showing that this is optional.\n\n389\n00:19:46.540 --> 00:19:49.740\nIt's trying to interpret\nthe bracket angling.\n\n390\n00:19:49.740 --> 00:19:50.640\nWhat the heck are you doing?\n\n391\n00:19:50.640 --> 00:19:53.292\nBracket, comma, bracket type,\nthat would makes sense.\n\n392\n00:19:53.292 --> 00:19:56.520\nSo PowerShell's throwing up some\nerrors there, but that's okay.\n\n393\n00:19:56.520 --> 00:19:58.280\nSo here, I've got the function, right?\n\n394\n00:19:58.280 --> 00:20:00.880\nThe keyword function we're gonna call it,\nor call that keyword.\n\n395\n00:20:00.880 --> 00:20:04.450\nWe're gonna give our function a name,\nwe're gonna do an open brace,\n\n396\n00:20:04.450 --> 00:20:06.480\njust like we did before.\n\n397\n00:20:06.480 --> 00:20:08.160\nThen I've got the keyword param,\n\n398\n00:20:08.160 --> 00:20:13.100\nand this is how I'm gonna define\nmy parameters, all right?\n\n399\n00:20:13.100 --> 00:20:18.120\nAnd then open parentheses,\nand then possibly a type,\n\n400\n00:20:18.120 --> 00:20:21.730\nyou don't have to, I'll come back\nto that concept in a minute.\n\n401\n00:20:21.730 --> 00:20:27.670\nThey type is like what type of value do\nyou plan on putting in this parameter.\n\n402\n00:20:27.670 --> 00:20:30.310\nI can define that explicitly in my code so\n\n403\n00:20:30.310 --> 00:20:34.920\nthat it doesn't accidentally get\nloaded up with the wrong type of data.\n\n404\n00:20:34.920 --> 00:20:38.820\nFor example if we were doing that math\nfunction, and I was gonna add two numbers.\n\n405\n00:20:38.820 --> 00:20:40.780\nWell if somebody tried\nto call my function and\n\n406\n00:20:40.780 --> 00:20:45.790\nthey passed in 24 and blue,\nmy function's gonna fail right?\n\n407\n00:20:45.790 --> 00:20:47.060\nWhen it tries to add 24 and blue,\n\n408\n00:20:47.060 --> 00:20:50.820\nblue's not a number it's not gonna work,\nwe're gonna crash that function.\n\n409\n00:20:51.900 --> 00:20:56.880\nIf I type out the parameter and\nsay, hey this has to be an integer,\n\n410\n00:20:56.880 --> 00:21:00.790\nthey wouldn't be able to call the function\npassingBlue cuz it's gonna say,\n\n411\n00:21:00.790 --> 00:21:03.100\nhey before we even take that,\nthat's not gonna work.\n\n412\n00:21:03.100 --> 00:21:04.750\nYou're gonna have to fix that.\n\n413\n00:21:04.750 --> 00:21:06.850\nSo it prevents the function\nfrom crashing and\n\n414\n00:21:06.850 --> 00:21:08.880\nwould throw the error back at the user.\n\n415\n00:21:08.880 --> 00:21:12.940\n&gt;&gt; And then one o ther way we could\ninput those units of measurement,\n\n416\n00:21:12.940 --> 00:21:17.370\nor I don't know if it would still be\nconsidered a type, but if we just put GB\n\n417\n00:21:17.370 --> 00:21:21.220\nor NB at the end of the number, would that\nbe acceptable in that type of situation?\n\n418\n00:21:21.220 --> 00:21:23.558\n&gt;&gt; You can use those in PowerShell,\nnot really a type,\n\n419\n00:21:23.558 --> 00:21:27.458\nthat's something different but you can use\nthose in PowerShell, very, very handy.\n\n420\n00:21:27.458 --> 00:21:29.950\n&gt;&gt; Yeah, I have used those, okay.\n\n421\n00:21:29.950 --> 00:21:30.640\nAll right.\n&gt;&gt; But\n\n422\n00:21:30.640 --> 00:21:35.630\nthat's just a more of a, let's say\na qualification of the integer itself,\n\n423\n00:21:35.630 --> 00:21:38.880\nso instead of having to type out 20,000,\nI can do 20k.\n\n424\n00:21:38.880 --> 00:21:40.160\n&gt;&gt; Okay.\n\n425\n00:21:40.160 --> 00:21:42.750\n&gt;&gt; Or KB I should say,\nor something like that.\n\n426\n00:21:42.750 --> 00:21:46.970\nAnd PowerShell has its built in\nfunctions that can deal with that.\n\n427\n00:21:46.970 --> 00:21:49.570\nIt knows how to convert that\ninto bytes which is what it's\n\n428\n00:21:49.570 --> 00:21:50.970\nactually gonna do the math with.\n\n429\n00:21:50.970 --> 00:21:52.070\nSo it just makes it easier on us.\n\n430\n00:21:52.070 --> 00:21:54.120\nSo that's just a function there.\n\n431\n00:21:54.120 --> 00:21:55.070\nAll right, so type, though.\n\n432\n00:21:55.070 --> 00:22:00.750\nType's gonna be like string, integer,\nwhat else do we have in here?\n\n433\n00:22:00.750 --> 00:22:03.750\nThere's a few different ones,\nI can't think off the top of my head,\n\n434\n00:22:03.750 --> 00:22:09.850\nof data types that we can pass\ninto our functions in PowerShell.\n\n435\n00:22:09.850 --> 00:22:11.910\nAll right, and then $parameter1.\n\n436\n00:22:11.910 --> 00:22:15.900\nSo whatever I wanna call this parameter,\n\n437\n00:22:15.900 --> 00:22:21.210\nlike first number or Bob or Nae,\ncomputer name, whatever the case may be.\n\n438\n00:22:21.210 --> 00:22:27.450\nAgain, we're just naming it something that\nwe can recognize and use in our code.\n\n439\n00:22:27.450 --> 00:22:30.780\nAnd then possibly more than one parameter,\n\n440\n00:22:30.780 --> 00:22:35.810\nyou can see this is optional,\nright, my open, bracket, comma.\n\n441\n00:22:35.810 --> 00:22:37.860\nI might have more than one parameter,\nso if I do,\n\n442\n00:22:37.860 --> 00:22:41.980\nit's simply a comma separated list,\nall right?\n\n443\n00:22:41.980 --> 00:22:46.020\nParameter one, parameter two, and then dot\ndot dot if you needed three, four, five,\n\n444\n00:22:46.020 --> 00:22:47.070\nseven, whatever you needed.\n\n445\n00:22:47.070 --> 00:22:49.240\nIt would just keep on going out, right?\n\n446\n00:22:49.240 --> 00:22:52.070\nAnd then we're gonna\nclose our parentheses.\n\n447\n00:22:52.070 --> 00:22:56.090\nAnd then we've got our statement list or\nthe code that we want to execute.\n\n448\n00:22:56.090 --> 00:22:59.280\nAnd then our close brace, right?\n\n449\n00:22:59.280 --> 00:23:00.630\nSo, this is the function.\n\n450\n00:23:00.630 --> 00:23:04.230\nIn this case,\nit would accept two parameters.\n\n451\n00:23:04.230 --> 00:23:10.170\nSo if I was calling, this I would\ntype in name, space, first parameter\n\n452\n00:23:10.170 --> 00:23:15.230\non the pass in, space, second parameter\nthat I wanted to pass in, all right?\n\n453\n00:23:17.310 --> 00:23:20.170\nBelow that,\nI have it done a different way.\n\n454\n00:23:20.170 --> 00:23:26.630\nAnd this one, exact same thing,\nbut I'm declaring the parameters\n\n455\n00:23:26.630 --> 00:23:32.230\nup here in the declaration of the function\nitself but before the opening brace\n\n456\n00:23:32.230 --> 00:23:36.900\nof the function, and then the only thing\ninside those braces is my statement list.\n\n457\n00:23:38.210 --> 00:23:41.210\nAnd again, either one of these methods,\n\n458\n00:23:41.210 --> 00:23:43.610\nthey both produced the same\nexact same results.\n\n459\n00:23:43.610 --> 00:23:48.257\nThere's really no difference\nin what you're doing.\n\n460\n00:23:48.257 --> 00:23:52.269\nThe only difference is gonna be,\nto me, readability, right?\n\n461\n00:23:52.269 --> 00:23:55.897\nAnd I was talking to Jess and you guys\nhave probably seen Jess on DevPro,\n\n462\n00:23:55.897 --> 00:23:57.662\nWhat do you like, what do you use?\n\n463\n00:23:57.662 --> 00:24:00.197\nLet's get your opinion here.\n\n464\n00:24:00.197 --> 00:24:04.426\nAnd now I can't remember, I wanna say,\nI can't remember what he said.\n\n465\n00:24:04.426 --> 00:24:06.786\n&gt;&gt; [LAUGH] Yeah, you were gonna tell us.\n\n466\n00:24:06.786 --> 00:24:08.638\nAnd then you're just like, just kidding.\n\n467\n00:24:08.638 --> 00:24:09.985\n[LAUGH]\n&gt;&gt; But when I was talking to him about it,\n\n468\n00:24:09.985 --> 00:24:11.840\nhe was like, yeah,\nit really didn't make a difference.\n\n469\n00:24:11.840 --> 00:24:13.886\nI think he said,\nsometimes you use [INAUDIBLE],\n\n470\n00:24:13.886 --> 00:24:15.770\nsometimes the other just depends.\n\n471\n00:24:15.770 --> 00:24:16.910\nI like this one.\n\n472\n00:24:16.910 --> 00:24:20.344\nBecause I just think it makes\nit a little bit neater and\n\n473\n00:24:20.344 --> 00:24:24.542\neasier to read where all the parameters\nsit inside the function,\n\n474\n00:24:24.542 --> 00:24:27.614\nnice and indented,\neasy to see, easy to find.\n\n475\n00:24:27.614 --> 00:24:29.473\nThat's what it was, and\nhe said he liked this one.\n\n476\n00:24:29.473 --> 00:24:30.016\nI think he said he used this one the most.\n\n477\n00:24:30.016 --> 00:24:32.841\n&gt;&gt; Well, that's why when I\nasked you earlier about hey,\n\n478\n00:24:32.841 --> 00:24:35.300\nis this something you came up with or\nwhatever,\n\n479\n00:24:35.300 --> 00:24:39.741\nbecause I've never really thought about\nformatting or indenting anything before.\n\n480\n00:24:39.741 --> 00:24:42.088\nI always typed my knot in one long line.\n\n481\n00:24:42.088 --> 00:24:42.792\n&gt;&gt; Yeah?\n\n482\n00:24:42.792 --> 00:24:45.704\n&gt;&gt; And that's because I never\nthought to do it any other way.\n\n483\n00:24:45.704 --> 00:24:46.595\n&gt;&gt; All right?\n&gt;&gt; That's why, yeah.\n\n484\n00:24:46.595 --> 00:24:48.973\n[LAUGH]\n&gt;&gt; Okay, yeah, yeah, yeah, no,\n\n485\n00:24:48.973 --> 00:24:50.897\nI love formatting my code.\n\n486\n00:24:50.897 --> 00:24:54.006\nI mean, I don't want it just cuz it\nlooks good, but because, like I say,\n\n487\n00:24:54.006 --> 00:24:56.380\ngoing back and reading it later,\nit's so much easier.\n\n488\n00:24:56.380 --> 00:24:57.630\n&gt;&gt; Which makes sense, yeah.\n\n489\n00:24:57.630 --> 00:25:01.463\nI just haven't had any formal coding\ntraining, it's just whatever, yeah.\n\n490\n00:25:01.463 --> 00:25:02.154\n[LAUGH]\n&gt;&gt; Now you have to go back and\n\n491\n00:25:02.154 --> 00:25:02.973\nrun all of your scripts again.\n\n492\n00:25:02.973 --> 00:25:05.117\n&gt;&gt; I should go watch all\nof Justin's shows now.\n\n493\n00:25:05.117 --> 00:25:07.932\n[LAUGH]\n&gt;&gt; All right,\n\n494\n00:25:07.932 --> 00:25:11.927\nso passing these parameters in this way.\n\n495\n00:25:11.927 --> 00:25:14.236\nWhat else,\nI wanted to say something else about this.\n\n496\n00:25:14.236 --> 00:25:16.581\nWell, in this case,\nwell, we'll keep going,\n\n497\n00:25:16.581 --> 00:25:19.000\nwe'll come back to that\nconcept in just a minute.\n\n498\n00:25:19.000 --> 00:25:23.402\nSo here's a couple of examples,\nwhere I've written a couple functions and\n\n499\n00:25:23.402 --> 00:25:25.620\nthen used the parameter in both ways.\n\n500\n00:25:25.620 --> 00:25:29.219\nSo in this case, I've got a function,\nand I've got the keyword function.\n\n501\n00:25:29.219 --> 00:25:31.965\nAnd then I've got one that's called\nGet-LargeFiles, all right, so\n\n502\n00:25:31.965 --> 00:25:33.910\nthat's the name I wanna give it.\n\n503\n00:25:33.910 --> 00:25:39.246\nOpen brace, and then I've got a parameter,\n\n504\n00:25:39.246 --> 00:25:42.336\nso param ($size), and\n\n505\n00:25:42.336 --> 00:25:47.960\nthen my actual script,\nor my code, all right?\n\n506\n00:25:47.960 --> 00:25:51.970\nI Get-ChildItem C:\\Users\\ yada,\nyada, yada.\n\n507\n00:25:51.970 --> 00:25:56.923\nPipe that out to a where clause,\nwhere, and we talked about this,\n\n508\n00:25:56.923 --> 00:25:59.141\nI think we talked about this.\n\n509\n00:25:59.141 --> 00:26:00.890\nHave we talked about the dollar sign and\nunderscore yet?\n\n510\n00:26:00.890 --> 00:26:01.661\n&gt;&gt; Yes, we did.\n\n511\n00:26:01.661 --> 00:26:05.245\n&gt;&gt; Okay, so the dollar sign\nunderscore representing an object,\n\n512\n00:26:05.245 --> 00:26:06.945\na single object within this.\n\n513\n00:26:06.945 --> 00:26:09.292\nBecause we know Get-ChildItem for\n\n514\n00:26:09.292 --> 00:26:14.070\nthis directory is gonna spit out most\nlikely more than one item, right?\n\n515\n00:26:14.070 --> 00:26:16.120\nI probably have a lot of\nfiles in my My Documents.\n\n516\n00:26:16.120 --> 00:26:21.570\nAnd this is saying, for each one of\nthose objects, I get the .length\n\n517\n00:26:21.570 --> 00:26:26.430\nif it's greater than size, and\nit's not a folder or a directory.\n\n518\n00:26:26.430 --> 00:26:34.120\nThat's what this does, the knot is just\nsaying .PSIsContainer is a property.\n\n519\n00:26:34.120 --> 00:26:38.384\nAnd I can check that, and\nif it's a folder, it would be true.\n\n520\n00:26:38.384 --> 00:26:40.570\nPSIsContainer would be true.\n\n521\n00:26:40.570 --> 00:26:42.330\n&gt;&gt; Okay, I'm kind of thinking-\n&gt;&gt; If it's not a folder.\n\n522\n00:26:42.330 --> 00:26:44.616\n&gt;&gt; Maybe we didn't cover this,\nI'm not sure.\n\n523\n00:26:44.616 --> 00:26:45.280\nSo we might want-\n&gt;&gt; Yeah?\n\n524\n00:26:45.280 --> 00:26:46.250\n&gt;&gt; Yeah, cuz I was thinking about it.\n\n525\n00:26:46.250 --> 00:26:47.668\nI'm like, let's just be safe here, so.\n\n526\n00:26:47.668 --> 00:26:48.665\n&gt;&gt; Okay, well, let's be safe then.\n\n527\n00:26:48.665 --> 00:26:49.382\n&gt;&gt; Okay.\n\n528\n00:26:49.382 --> 00:26:51.010\n[LAUGH]\n&gt;&gt; So, [LAUGH] yes,\n\n529\n00:26:51.010 --> 00:26:55.850\nwhen we're working with arrays or\nmultiple objects like Get-ChildItem or\n\n530\n00:26:55.850 --> 00:26:57.270\nGetService for that matter, right?\n\n531\n00:26:57.270 --> 00:27:01.260\nGetService is gonna return a whole\nlist of services that we have running.\n\n532\n00:27:01.260 --> 00:27:05.690\nAnd if I try to work with that,\nit's not an object in itself.\n\n533\n00:27:05.690 --> 00:27:07.630\nIt's a collection of objects, right?\n\n534\n00:27:07.630 --> 00:27:11.770\nAnd so what I wanna do is cycle through\neach one of those objects one at\n\n535\n00:27:11.770 --> 00:27:16.480\na time and get the name or the automatic\nstartup type or whatever the case may be.\n\n536\n00:27:16.480 --> 00:27:21.813\nSo any time we create something like that,\na special variable gets created called $_.\n\n537\n00:27:21.813 --> 00:27:26.210\nAnd that allows me to work with\none object at a time in that list.\n\n538\n00:27:26.210 --> 00:27:27.660\nSo it allows me to basically do a for\n\n539\n00:27:27.660 --> 00:27:31.310\nloop or any kind of loop\nthrough all of those items.\n\n540\n00:27:31.310 --> 00:27:33.608\nSo the first time, like imagine looking-\n&gt;&gt; And\n\n541\n00:27:33.608 --> 00:27:38.340\nthen the exclamation point is just saying\nthe transverse or the opposite of that?\n\n542\n00:27:38.340 --> 00:27:39.060\n&gt;&gt; Yes.\n&gt;&gt; Okay.\n\n543\n00:27:39.060 --> 00:27:43.130\n&gt;&gt; Yep, so this returns either true or\nfalse, all right?\n\n544\n00:27:43.130 --> 00:27:46.220\nIf it's a folder, true,\nit's not a folder, false.\n\n545\n00:27:46.220 --> 00:27:49.141\nAnd I wanna say my condition is and.\n\n546\n00:27:49.141 --> 00:27:52.289\nRemember, for the and statement,\nboth sides have to be true.\n\n547\n00:27:52.289 --> 00:27:53.730\nSo this has to ring true.\n\n548\n00:27:53.730 --> 00:27:58.560\nSo if it's a folder,\nit's not gonna ring true, right?\n\n549\n00:27:58.560 --> 00:28:02.367\nPSIsContainer would be true for\nfolder, not true,\n\n550\n00:28:02.367 --> 00:28:06.013\nI want it be false would only be for\nfiles, right?\n\n551\n00:28:06.013 --> 00:28:10.039\nAll right, and then $size is\nthe parameter I'm passing through.\n\n552\n00:28:10.039 --> 00:28:12.202\nSo let's see if it works.\n\n553\n00:28:12.202 --> 00:28:14.530\nI think I added a sort to it.\n\n554\n00:28:14.530 --> 00:28:17.947\nI pipe that into a Sort-Object Length.\n\n555\n00:28:17.947 --> 00:28:20.406\nSo I'm gonna base it on the length,\nwhich, in this case,\n\n556\n00:28:20.406 --> 00:28:21.974\nis the number of bytes in the object.\n\n557\n00:28:21.974 --> 00:28:24.810\nAnd then I'm gonna sort it to sending,\nall right?\n\n558\n00:28:24.810 --> 00:28:27.280\nSo all of that is within my function.\n\n559\n00:28:27.280 --> 00:28:29.237\nNow let's just talk about this for\n\n560\n00:28:29.237 --> 00:28:33.298\na second cuz you notice this one does\nscroll off my screen way over here.\n\n561\n00:28:33.298 --> 00:28:35.828\nI've done it all in one line.\n\n562\n00:28:35.828 --> 00:28:39.410\nIf I wanna make this a little bit\neasier to read on my resolution,\n\n563\n00:28:39.410 --> 00:28:40.990\nI can only put this on multiple lines.\n\n564\n00:28:40.990 --> 00:28:41.840\nWe were talking about that.\n\n565\n00:28:41.840 --> 00:28:44.500\nThat's that little grave, right?\n\n566\n00:28:44.500 --> 00:28:48.540\nBut because I'm using a pipe,\nI actually get a cheat.\n\n567\n00:28:48.540 --> 00:28:53.265\nI can hit Enter here and\nI could hit Enter here because I'm not\n\n568\n00:28:53.265 --> 00:28:58.283\nreally breaking a line in the middle\nof a code, this is [CROSSTALK]\n\n569\n00:28:58.283 --> 00:28:59.885\n&gt;&gt; Yeah, like problems like that.\n\n570\n00:28:59.885 --> 00:29:02.130\n&gt;&gt; Yep, it's a natural break in the code.\n\n571\n00:29:02.130 --> 00:29:06.987\nSo it allows me to do that, I can run\nthis statement, get my results, and\n\n572\n00:29:06.987 --> 00:29:09.388\npipe them into the next statement.\n\n573\n00:29:09.388 --> 00:29:10.930\nSo this would read just fine.\n\n574\n00:29:10.930 --> 00:29:12.105\n&gt;&gt; Maybe even a comma.\n\n575\n00:29:12.105 --> 00:29:12.649\n&gt;&gt; Yes.\n\n576\n00:29:12.649 --> 00:29:15.243\n&gt;&gt; [LAUGH]\n&gt;&gt; Now if I wanted to break it here,\n\n577\n00:29:15.243 --> 00:29:17.693\nall right, like that, well,\n\n578\n00:29:17.693 --> 00:29:23.731\nthat's gonna cause a problem because\nit's right in the middle of the code,\n\n579\n00:29:23.731 --> 00:29:27.074\nwhere $length is greater than-\n&gt;&gt; What?\n\n580\n00:29:27.074 --> 00:29:29.298\n[LAUGH]\n&gt;&gt; What, right?\n\n581\n00:29:29.298 --> 00:29:32.170\nThat would be the same question\nPowerShell would be asking.\n\n582\n00:29:32.170 --> 00:29:36.502\nBecause if it sees this as one line and\nit thinks okay, that is a line of code,\n\n583\n00:29:36.502 --> 00:29:37.267\nexecute it.\n\n584\n00:29:37.267 --> 00:29:38.573\nThe line has an error.\n\n585\n00:29:38.573 --> 00:29:41.948\nBut if I do this,\nput this little grave right there,\n\n586\n00:29:41.948 --> 00:29:44.188\nnow it would actually cheat okay.\n\n587\n00:29:44.188 --> 00:29:48.430\nBecause there's more to it, let me\nlook and see what's on the next line.\n\n588\n00:29:48.430 --> 00:29:54.204\nThat's what we mean by that line\ncontinuation character, all right?\n\n589\n00:29:54.204 --> 00:29:57.470\nI gotta get it back to the way it was,\nkeep everything tidy.\n\n590\n00:29:57.470 --> 00:29:58.560\nAll right, so let's try it.\n\n591\n00:29:58.560 --> 00:30:02.930\nLet's take this function, and\nI'm going to execute it, right?\n\n592\n00:30:04.150 --> 00:30:09.104\nAnd now we're going to call it,\nso Get-LargeFiles,\n\n593\n00:30:09.104 --> 00:30:13.422\nand you need a size, so let's say 2,000.\n\n594\n00:30:13.422 --> 00:30:15.095\nAnd that's gonna be in bytes.\n\n595\n00:30:15.095 --> 00:30:16.959\nAnd so what we should get back,\n\n596\n00:30:16.959 --> 00:30:21.417\nis a list of files in my documents\nthat are greater than 2,000 bytes.\n\n597\n00:30:21.417 --> 00:30:26.360\nSo I can see all of these guys, The\nHacker Playbook is well over 2,000 bytes.\n\n598\n00:30:26.360 --> 00:30:29.950\nAll the way down to the smallest one,\nit's just over 2,000.\n\n599\n00:30:29.950 --> 00:30:32.346\nI see nothing smaller than that,\nall right?\n\n600\n00:30:32.346 --> 00:30:34.279\nAnd again,\nthe function about getting the leg,\n\n601\n00:30:34.279 --> 00:30:36.760\nthat's really not what\nwe're here to learn, right?\n\n602\n00:30:36.760 --> 00:30:39.651\nAlthough it's cool, it's great to\nbe able to find large files, so\n\n603\n00:30:39.651 --> 00:30:41.131\nI can delete them to free up space.\n\n604\n00:30:41.131 --> 00:30:45.488\nMore about learning about\nthe function itself, all right?\n\n605\n00:30:45.488 --> 00:30:48.656\nSo with this one when I called it,\n\n606\n00:30:48.656 --> 00:30:54.830\nnotice I just gave the name and\nI gave the size, right?\n\n607\n00:30:54.830 --> 00:30:56.810\nI could do, let's try this.\n\n608\n00:30:58.270 --> 00:31:03.110\nNotice when I hit a -s,\nI see size as an option.\n\n609\n00:31:03.110 --> 00:31:08.860\nBecause remember when we talked about\npositional versus naming my parameters,\n\n610\n00:31:08.860 --> 00:31:13.184\nthe other day,\nwe were talking about commandlets, right?\n\n611\n00:31:13.184 --> 00:31:17.428\nAnd we talked about how\nsometimes they're optional.\n\n612\n00:31:17.428 --> 00:31:20.611\nWe did-\n&gt;&gt; Yes.\n\n613\n00:31:20.611 --> 00:31:23.620\n&gt;&gt; What was it, set execution policy,\nI think I was with Wes then.\n\n614\n00:31:23.620 --> 00:31:30.730\nAnd I didn't say set-execution\npolicy-execution policy restricted.\n\n615\n00:31:30.730 --> 00:31:34.183\nI just did set-execution\npolicy restricted.\n\n616\n00:31:34.183 --> 00:31:35.589\nAnd it knew what I was\ntalking about because it\n\n617\n00:31:35.589 --> 00:31:37.460\nknew that parameter was\nsupposed to come first.\n\n618\n00:31:37.460 --> 00:31:38.550\nAnd that's what I did here.\n\n619\n00:31:38.550 --> 00:31:42.600\nI cheated, right, by just typing in 2,000.\n\n620\n00:31:42.600 --> 00:31:47.143\nStill in parameter, so the function\nreally can't get confused, but\n\n621\n00:31:47.143 --> 00:31:49.745\nwhat I should do is -size-\n&gt;&gt; Gotcha.\n\n622\n00:31:49.745 --> 00:31:51.540\n&gt;&gt; 2000, all right?\n\n623\n00:31:51.540 --> 00:31:53.575\nI should specify the name\nof the parameter,\n\n624\n00:31:53.575 --> 00:31:56.165\nespecially when we have more\nthan one parameter, yes.\n\n625\n00:31:56.165 --> 00:31:59.852\n[CROSSTALK] It is expecting,\nexactly right, all right?\n\n626\n00:31:59.852 --> 00:32:04.580\nBut notice I get the same results if I\nuse that size, the name of the parameter.\n\n627\n00:32:05.660 --> 00:32:09.502\nAll right, now, the next one, actually,\nwe are over, you're giving me that signal.\n\n628\n00:32:09.502 --> 00:32:13.405\n&gt;&gt; I know, I'm looking at the time, and\nI'm like, the next one, can it wait?\n\n629\n00:32:13.405 --> 00:32:14.550\n&gt;&gt; [LAUGH] It can.\n\n630\n00:32:14.550 --> 00:32:15.660\nOf course it can.\n\n631\n00:32:15.660 --> 00:32:16.980\n&gt;&gt; All right, then Mike, how about that?\n\n632\n00:32:16.980 --> 00:32:19.980\nLet's just go ahead and come back with\na part two, so you don't wanna miss that.\n\n633\n00:32:19.980 --> 00:32:21.720\nYou definitely wanna stay around.\n\n634\n00:32:21.720 --> 00:32:23.670\nBut for this show,\nwe'll go ahead and sign out.\n\n635\n00:32:23.670 --> 00:32:25.000\nI've been your host, Cherokee Boose.\n\n636\n00:32:25.000 --> 00:32:25.780\n&gt;&gt; And I'm Mike Rodrick.\n\n637\n00:32:25.780 --> 00:32:27.539\n&gt;&gt; See you next time here at ITPRO.TV.\n\n638\n00:32:27.539 --> 00:32:34.540\n[MUSIC]\n\n639\n00:32:34.540 --> 00:32:37.515\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "238441946"
        },
        {
          "description": "In this episode, Mike and Cherokee take a look at basic functions in PowerShell. They discuss the components of a function, the format of a function, and adding function statements.",
          "length": "1836",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-2-basic_functions_pt_2-101317-PGM.00_30_40_27.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-2-basic_functions_pt_2-101317-PGM.00_30_40_27.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-8-2-basic_functions_pt_2-101317-PGM.00_30_40_27.Still001-sm.jpg",
          "title": "Basic Functions Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.310 --> 00:00:01.190\nWelcome to ITProTV.\n\n2\n00:00:01.190 --> 00:00:05.961\nI am your host Don- [CROSSTALK]\n\n3\n00:00:05.961 --> 00:00:08.202\n[MUSIC]\n\n4\n00:00:08.202 --> 00:00:11.629\nYou are watching ITProTV.\n\n5\n00:00:11.629 --> 00:00:13.527\n&gt;&gt; Welcome to your PowerShell series.\n\n6\n00:00:13.527 --> 00:00:15.442\nI am your show host Cherokee Boose.\n\n7\n00:00:15.442 --> 00:00:19.165\nSo this is actually a part two, a\ncontinuation where Mike was taking a look,\n\n8\n00:00:19.165 --> 00:00:23.179\nacting different types of basic functions\nand, well, how they're composed and\n\n9\n00:00:23.179 --> 00:00:23.950\nhow they work.\n\n10\n00:00:23.950 --> 00:00:26.647\nSo back with us today,\nwe have him in studio to go ahead and\n\n11\n00:00:26.647 --> 00:00:28.234\njust pick right back up, right?\n\n12\n00:00:28.234 --> 00:00:29.268\n&gt;&gt; Sounds like a plan.\n\n13\n00:00:29.268 --> 00:00:30.289\n&gt;&gt; All right.\n&gt;&gt; All right.\n\n14\n00:00:30.289 --> 00:00:32.762\n[LAUGH]\n&gt;&gt; So continuing on with functions,\n\n15\n00:00:32.762 --> 00:00:36.215\nyou're right, we had talked about\nhow we can define functions and\n\n16\n00:00:36.215 --> 00:00:39.809\nwe can define parameters that we\ncan pass data into those functions.\n\n17\n00:00:39.809 --> 00:00:41.411\nAnd we could do it one of two ways.\n\n18\n00:00:41.411 --> 00:00:44.583\nWe could either do it inline\nwith the declaration or\n\n19\n00:00:44.583 --> 00:00:49.177\nwe could do it inside the braces,\ninside the definition of the function.\n\n20\n00:00:49.177 --> 00:00:51.406\nAnd I said either way will work.\n\n21\n00:00:51.406 --> 00:00:54.437\nIt's just a matter of personal preference,\nreally.\n\n22\n00:00:54.437 --> 00:00:57.095\nAlthough I will say I like them inside.\n\n23\n00:00:57.095 --> 00:00:58.256\nI think it makes it easier to function.\n\n24\n00:00:58.256 --> 00:01:02.812\nI also think when it comes time to doing\na little bit more with those parameters,\n\n25\n00:01:02.812 --> 00:01:06.290\nwhich we'll get to,\nit makes it a lot easier inside as well.\n\n26\n00:01:06.290 --> 00:01:09.903\nBut I know several people that much\nprefer to put them in the declaration.\n\n27\n00:01:09.903 --> 00:01:12.214\nAll right, so let's try we ran this,\n\n28\n00:01:12.214 --> 00:01:15.766\nif we take a look at my screen\nwe ran this function, right?\n\n29\n00:01:15.766 --> 00:01:20.828\nWe did the function, we did,\nwhere did I do it at, there it is.\n\n30\n00:01:20.828 --> 00:01:24.380\nLarge files, size 2,000, so\nwe're running this function here.\n\n31\n00:01:24.380 --> 00:01:28.630\nWe executed that and\nit did what it was supposed to do.\n\n32\n00:01:28.630 --> 00:01:32.409\nNow the second function\nis exact same function,\n\n33\n00:01:32.409 --> 00:01:37.112\nexcept that I defined the parameter\ninline with declaration\n\n34\n00:01:37.112 --> 00:01:41.183\nrather than inside\nthe definition of the function.\n\n35\n00:01:41.183 --> 00:01:43.040\nSo let's see if it works any differently.\n\n36\n00:01:43.040 --> 00:01:46.321\nI will highlight it,\nI will execute it to define it.\n\n37\n00:01:46.321 --> 00:01:51.079\nAnd then we will run get\ndash large files two and\n\n38\n00:01:51.079 --> 00:01:54.741\nwe can do the same size, 2000.\n\n39\n00:01:54.741 --> 00:02:01.830\nLet's do it the right way dash\nsize equals 2000, and there we go.\n\n40\n00:02:01.830 --> 00:02:06.636\nNo difference in my results,\nso either way works just fine.\n\n41\n00:02:08.159 --> 00:02:11.589\nAll right, so\nlet's keep on trucking down here.\n\n42\n00:02:11.589 --> 00:02:17.010\nThis third one is the same function,\nright?\n\n43\n00:02:17.010 --> 00:02:19.551\nIt's going to go look in my documents and\n\n44\n00:02:19.551 --> 00:02:24.431\nsee what if it finds files that are larger\nthan whatever value I pass in there.\n\n45\n00:02:24.431 --> 00:02:27.077\nHelp me find my large file so\nI can free up some space.\n\n46\n00:02:27.077 --> 00:02:32.029\nBut notice I did not define any\nparameters In the declaration,\n\n47\n00:02:32.029 --> 00:02:36.888\nnor did I define any parameters\nwithin the function block, or\n\n48\n00:02:36.888 --> 00:02:38.954\nwithin the braces there.\n\n49\n00:02:38.954 --> 00:02:41.893\nSo let's just see real quick what happens.\n\n50\n00:02:41.893 --> 00:02:47.151\nI'm gonna execute that,\nand we're gonna call\n\n51\n00:02:47.151 --> 00:02:52.681\nGet-Largefiles3 and I'm gonna say 2000.\n\n52\n00:02:52.681 --> 00:02:55.711\nAnd it worked, but\nhow the heck is that happening,\n\n53\n00:02:55.711 --> 00:03:00.097\nwhat is going on here,what kind of\ncrazy black magic do you have going on?\n\n54\n00:03:00.097 --> 00:03:04.387\n&gt;&gt; Magic, yeah [LAUGH] All right,\nlet's look at my line of code, and\n\n55\n00:03:04.387 --> 00:03:09.145\nsome of you might have seen it already\nRight, normally I had where length\n\n56\n00:03:09.145 --> 00:03:13.374\nis greater than and\nthat's one of those comparison operators.\n\n57\n00:03:13.374 --> 00:03:17.301\nNever really defined all of them but\n-gt greater than size or\n\n58\n00:03:17.301 --> 00:03:22.244\n$size which is what is getting passed\nthrough when they call the function.\n\n59\n00:03:22.244 --> 00:03:27.152\nAll right, but in this third one,\nin Get-LargeFiles3,\n\n60\n00:03:27.152 --> 00:03:32.259\nI have something different it\nsays dollar sign underscore dot\n\n61\n00:03:32.259 --> 00:03:38.370\nlength is greater than dollar sign\nargs open bracket zero close bracket.\n\n62\n00:03:38.370 --> 00:03:44.013\nSo instead of size I've got this arg\nthing going on, what the heck is that?\n\n63\n00:03:44.013 --> 00:03:46.266\nWell, let's tell you what that is.\n\n64\n00:03:46.266 --> 00:03:50.782\nArguments are the parameters\nthat we can pass through there.\n\n65\n00:03:50.782 --> 00:03:55.673\nAnd if we don't specify, we can\nstill pass values into the function.\n\n66\n00:03:55.673 --> 00:04:00.527\nAnd what it's gonna do is\nit's gonna create an array\n\n67\n00:04:00.527 --> 00:04:03.844\ncalled args or $args, all right?\n\n68\n00:04:03.844 --> 00:04:08.546\nAnd it just takes each one of those values\nwe pass in and puts them in an array.\n\n69\n00:04:08.546 --> 00:04:12.301\nAnd if you're not familiar with an array,\nan array is another data type or\n\n70\n00:04:12.301 --> 00:04:16.073\nwe know like a variable stores a value\nis like a box, I could put a value in.\n\n71\n00:04:16.073 --> 00:04:19.868\nAn array is more like an eggcart\nan endless eggcart that I can put\n\n72\n00:04:19.868 --> 00:04:24.736\nmultiple values in and I can just call the\ndifferent positions in that array when I\n\n73\n00:04:24.736 --> 00:04:26.544\nwant to get those values out.\n\n74\n00:04:26.544 --> 00:04:31.038\nAnd so, each parameter that I pass\nthrough just get to put into this array.\n\n75\n00:04:31.038 --> 00:04:36.621\nNow arrays are zero-indexed that means\nposition one is actually known as zero,\n\n76\n00:04:36.621 --> 00:04:37.450\nall right?\n\n77\n00:04:37.450 --> 00:04:41.525\nSo if you have an eight position array,\nthen you actually have zero through seven,\n\n78\n00:04:41.525 --> 00:04:44.100\nis how you would denote each\none of those positions.\n\n79\n00:04:44.100 --> 00:04:46.584\nIf I want the last one, it's args seven.\n\n80\n00:04:46.584 --> 00:04:48.454\nIf I want the first one, it's args zero.\n\n81\n00:04:48.454 --> 00:04:51.902\nIf I want the second\none Is actually args 1.\n\n82\n00:04:51.902 --> 00:04:55.536\nIt gets a little bit confusing when\nyou're working with arrays like that.\n\n83\n00:04:55.536 --> 00:05:02.554\nAll right but, that's what's happening\nhere is I am able to call this functions,\n\n84\n00:05:02.554 --> 00:05:06.884\npass a parameter into it and\nthen just call args 0.\n\n85\n00:05:06.884 --> 00:05:09.321\nGive me the first parameter\nthat they passed in.\n\n86\n00:05:09.321 --> 00:05:11.630\nRight, don't know what it is but\n\n87\n00:05:11.630 --> 00:05:15.591\ngive me the first one that they\npassed in and use that one.\n\n88\n00:05:15.591 --> 00:05:16.926\nDoes that make sense?\n\n89\n00:05:16.926 --> 00:05:18.864\n&gt;&gt; [LAUGH]\n&gt;&gt; I see the look.\n\n90\n00:05:18.864 --> 00:05:20.812\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] That means that aint\n\n91\n00:05:20.812 --> 00:05:21.384\nno good job.\n\n92\n00:05:21.384 --> 00:05:23.069\n[LAUGH]\n&gt;&gt; [LAUGH]\n\n93\n00:05:23.069 --> 00:05:24.380\n&gt;&gt; All right, let's try another example.\n\n94\n00:05:24.380 --> 00:05:25.424\n&gt;&gt; [LAUGH] Okay.\n\n95\n00:05:25.424 --> 00:05:26.321\nI'm sorry Mike.\n\n96\n00:05:26.321 --> 00:05:28.583\n&gt;&gt; [LAUGH] No,\nthat's what we need to know right?\n\n97\n00:05:28.583 --> 00:05:29.755\n&gt;&gt; Okay.\n&gt;&gt; If you got questions,\n\n98\n00:05:29.755 --> 00:05:31.198\nthey've got questions, right?\n\n99\n00:05:31.198 --> 00:05:32.102\n&gt;&gt; [LAUGH] Okay.\n\n100\n00:05:32.102 --> 00:05:33.123\n&gt;&gt; So that's a good thing.\n\n101\n00:05:33.123 --> 00:05:36.943\nAll right, so let's do another one and\nhopefully make it a little clearer.\n\n102\n00:05:36.943 --> 00:05:39.740\nSo here I've got the name,\nI'm calling the function, right?\n\n103\n00:05:39.740 --> 00:05:40.945\nI've got my declaration there.\n\n104\n00:05:40.945 --> 00:05:46.389\nI'm gonna call and get dash arguments and\nthen I'm doing a four loop and\n\n105\n00:05:46.389 --> 00:05:50.937\nwhat I'm gonna have to do is go\nthrough args and just print.\n\n106\n00:05:50.937 --> 00:05:52.435\nFirst position, show me what it is.\n\n107\n00:05:52.435 --> 00:05:54.432\nSecond position, show me what it is.\n\n108\n00:05:54.432 --> 00:05:57.578\nSo let's try it and\nthen I will go back and explain it.\n\n109\n00:05:57.578 --> 00:06:02.096\nI'm gonna define it, oops, execute that.\n\n110\n00:06:02.096 --> 00:06:06.920\nAll right and I'm gonna call\n\n111\n00:06:06.920 --> 00:06:11.141\nit get dash arguments and\n\n112\n00:06:11.141 --> 00:06:16.773\nI'm gonna say blue, Cherokee.\n\n113\n00:06:16.773 --> 00:06:19.980\n&gt;&gt; [LAUGH] You learn and spelled my name.\n\n114\n00:06:19.980 --> 00:06:25.412\n&gt;&gt; Dog, rain, 45, summer,\nwhatever we wanna put in there.\n\n115\n00:06:25.412 --> 00:06:28.264\nEach one of these would be\na parameter that I'm passing in,\n\n116\n00:06:28.264 --> 00:06:30.102\nI'm passing in multiple ones right?\n\n117\n00:06:30.102 --> 00:06:34.304\n&gt;&gt; Blue would be the one that it's gonna\nbe using because you didn't specify.\n\n118\n00:06:34.304 --> 00:06:36.941\n&gt;&gt; Well, correct in this first one.\n\n119\n00:06:36.941 --> 00:06:37.477\n&gt;&gt; Okay.\n\n120\n00:06:37.477 --> 00:06:39.137\n&gt;&gt; It would've used blue, yeah,\nbut you're exactly right.\n\n121\n00:06:39.137 --> 00:06:39.960\nSo see you do understand.\n\n122\n00:06:39.960 --> 00:06:41.040\n&gt;&gt; I just wanna make sure.\n\n123\n00:06:41.040 --> 00:06:45.905\n&gt;&gt; Right, args zero would reference\nthe first value that was passed in,\n\n124\n00:06:45.905 --> 00:06:47.647\nyou're exactly right.\n\n125\n00:06:47.647 --> 00:06:52.279\nSo let's see what happens when I run\nthis and it's just showing you that hey,\n\n126\n00:06:52.279 --> 00:06:55.356\nlook blue is in spot zero,\nCherokee is in spot one.\n\n127\n00:06:55.356 --> 00:06:59.477\nDog is in two, ran three, 45s on four.\n\n128\n00:06:59.477 --> 00:07:00.871\n&gt;&gt; Definitely, the visual helps.\n\n129\n00:07:00.871 --> 00:07:01.533\n&gt;&gt; Okay, good.\n\n130\n00:07:01.533 --> 00:07:06.133\nSo I just wrote a real quick\nloop to loop through each one\n\n131\n00:07:06.133 --> 00:07:08.836\nof the places in that egg crate.\n\n132\n00:07:08.836 --> 00:07:13.979\nIn that arms array, and to spit it out and\nshow me what you got stored in there.\n\n133\n00:07:13.979 --> 00:07:17.645\nIf I had call that same function and\njust pass,\n\n134\n00:07:17.645 --> 00:07:22.818\nif I can get some focus down here,\nand I just pass three values in.\n\n135\n00:07:22.818 --> 00:07:26.507\nThen I just have three\nresponse in that args array.\n\n136\n00:07:26.507 --> 00:07:32.026\nSo this is another way,\nI can get that data into my commands,\n\n137\n00:07:32.026 --> 00:07:34.634\nor to my functions, right?\n\n138\n00:07:34.634 --> 00:07:35.551\nDid we define this?\n\n139\n00:07:35.551 --> 00:07:36.492\nI think we did.\n\n140\n00:07:36.492 --> 00:07:37.481\nLet me do it again.\n\n141\n00:07:37.481 --> 00:07:39.023\nSo large files three.\n\n142\n00:07:42.804 --> 00:07:48.150\nGet-LargeFiles3 2000,\n\n143\n00:07:48.150 --> 00:07:53.301\nand it runs just fine, right?\n\n144\n00:07:53.301 --> 00:07:55.483\nSo why not use that one?\n\n145\n00:07:55.483 --> 00:07:56.675\nThat one seems easy.\n\n146\n00:07:56.675 --> 00:07:59.647\nMan, I don't have to define anything,\nI don't have to name anything.\n\n147\n00:07:59.647 --> 00:08:02.387\nI'm just gonna accept it, all right?\n\n148\n00:08:02.387 --> 00:08:07.080\nAnd the problem with doing something\nlike this is, if it's just one argument,\n\n149\n00:08:07.080 --> 00:08:09.180\nit might not be too bad.\n\n150\n00:08:09.180 --> 00:08:12.936\nOr if everything that you're getting\npassed in is of the same type and\n\n151\n00:08:12.936 --> 00:08:15.998\nthe order doesn't matter,\nthen this might work fine.\n\n152\n00:08:15.998 --> 00:08:20.808\nIf I've got a function that doesn't\naverage, and that's all it is,\n\n153\n00:08:20.808 --> 00:08:21.959\nget-average.\n\n154\n00:08:21.959 --> 00:08:24.549\nAnd you can pump in as many\nnumbers as you want, and\n\n155\n00:08:24.549 --> 00:08:27.530\nyou wanna get the average of the numbers,\nright?\n\n156\n00:08:27.530 --> 00:08:31.540\nSo you can put in all your numbers and\nrun it, and that's fine.\n\n157\n00:08:31.540 --> 00:08:32.640\nIf you put in five, I don't care.\n\n158\n00:08:32.640 --> 00:08:35.127\nIf you put in 25,\nthe function doesn't care.\n\n159\n00:08:35.127 --> 00:08:37.949\nIt's just gonna sum it all up and\nthen make an average out of them.\n\n160\n00:08:37.949 --> 00:08:41.296\nAnd so in that case there's no point in\ndefining parameters saying number one that\n\n161\n00:08:41.296 --> 00:08:43.673\nyou wanna average,\nthe second number you wanna average,\n\n162\n00:08:43.673 --> 00:08:45.191\nthe third number you wanna average.\n\n163\n00:08:45.191 --> 00:08:49.410\nI would ever make named parameters for\nall of those.\n\n164\n00:08:49.410 --> 00:08:52.490\n&gt;&gt; So it's kind of like but if it did\nhave to go sort of in order in math,\n\n165\n00:08:52.490 --> 00:08:54.640\nyou would use those order\nof operations here.\n\n166\n00:08:54.640 --> 00:09:00.212\n&gt;&gt; Yeah, if I'm gonna ask them for\nthe size of the file they're looking for,\n\n167\n00:09:00.212 --> 00:09:03.840\nand what letter it starts with,\nwell in my code,\n\n168\n00:09:03.840 --> 00:09:08.810\nthose are different values that I\ngotta do different things with.\n\n169\n00:09:08.810 --> 00:09:13.510\nSo I need to know which is the one\nyou specified the size for and\n\n170\n00:09:13.510 --> 00:09:15.870\nwhich is the first letter\nthat you wanna use.\n\n171\n00:09:15.870 --> 00:09:20.600\nAnd that's when you're gonna\nuse your parameters, right,\n\n172\n00:09:20.600 --> 00:09:21.660\nrather than just the args.\n\n173\n00:09:21.660 --> 00:09:27.250\nSo args is not used that often,\nonly when it's very simple like that.\n\n174\n00:09:27.250 --> 00:09:31.944\nLike I say, maybe doing an average or\nthere's only one parameter coming through,\n\n175\n00:09:31.944 --> 00:09:34.302\nthen args would be just fine, all right?\n\n176\n00:09:34.302 --> 00:09:37.678\nAll right,\nthe next thing I wanna talk about,\n\n177\n00:09:37.678 --> 00:09:41.240\nwith these parameters so\nfar, let's try this.\n\n178\n00:09:41.240 --> 00:09:45.050\nWhat if I ran that first one we did,\nGet-LargeFiles.\n\n179\n00:09:45.050 --> 00:09:46.635\nI just hit Enter.\n\n180\n00:09:49.241 --> 00:09:52.200\nWait, you did not specify a value.\n\n181\n00:09:52.200 --> 00:09:53.850\nThere was no size, right?\n\n182\n00:09:53.850 --> 00:09:57.567\nI didn't tell it what size I was\nlooking for, and so it just ran.\n\n183\n00:09:57.567 --> 00:10:00.550\nIt didn't fail, it ran.\n\n184\n00:10:00.550 --> 00:10:01.622\nBut it gave me everything,\n\n185\n00:10:01.622 --> 00:10:04.381\nall the way down to this open VPN.txt\nwhich is only 12 bytes in size.\n\n186\n00:10:04.381 --> 00:10:05.288\n&gt;&gt; Less than that 2,000.\n\n187\n00:10:05.288 --> 00:10:05.825\n&gt;&gt; What's that?\n\n188\n00:10:05.825 --> 00:10:08.057\n&gt;&gt; Less than that 2,000 than\nthe originally specified.\n\n189\n00:10:08.057 --> 00:10:08.968\n&gt;&gt; Definitely less than 2,000, exactly.\n\n190\n00:10:08.968 --> 00:10:13.428\nIn fact, if we wanted to write that out,\nlet's do something.\n\n191\n00:10:13.428 --> 00:10:16.151\nLet's go up to our first function.\n\n192\n00:10:16.151 --> 00:10:16.909\nWhere did it go?\n\n193\n00:10:16.909 --> 00:10:21.279\nGet-LargeFiles and\n\n194\n00:10:21.279 --> 00:10:25.648\nI'm gonna add to this\n\n195\n00:10:25.648 --> 00:10:31.963\nwrite-Host $size, right?\n\n196\n00:10:31.963 --> 00:10:36.620\nSo maybe you wanna verify what number\ngot passed in or something like that.\n\n197\n00:10:36.620 --> 00:10:37.370\nSo let's redefine this.\n\n198\n00:10:37.370 --> 00:10:42.230\nAnd this is how we can\ntell what is happening.\n\n199\n00:10:42.230 --> 00:10:44.360\nLet's do the same thing,\ncall that function but\n\n200\n00:10:44.360 --> 00:10:47.340\nwith no value and see what we get.\n\n201\n00:10:48.930 --> 00:10:49.508\nDidn't I write my host?\n\n202\n00:10:53.256 --> 00:10:56.590\nBecause it's a zero,\nI don't think it wrote it.\n\n203\n00:10:56.590 --> 00:10:57.550\nI actually left it off.\n\n204\n00:10:57.550 --> 00:10:59.880\nLet's try that again just\nto verify I'm correct.\n\n205\n00:10:59.880 --> 00:11:00.520\nLet's try something.\n\n206\n00:11:01.690 --> 00:11:05.217\nYeah, so see how I put 2,000 down there?\n\n207\n00:11:05.217 --> 00:11:11.860\nBut when I ran it without providing\na value, I got nothing down here.\n\n208\n00:11:11.860 --> 00:11:13.569\nSo really in this case size\ndoesn't equal anything.\n\n209\n00:11:13.569 --> 00:11:16.180\nIt's a null value at this point.\n\n210\n00:11:16.180 --> 00:11:18.460\nWhich every file is gonna\nbe larger than that.\n\n211\n00:11:18.460 --> 00:11:19.945\nSo it just returns all of them.\n\n212\n00:11:19.945 --> 00:11:23.670\nAnd in this case,\nit's not the end of the world.\n\n213\n00:11:23.670 --> 00:11:26.590\nNotice the function operates\njust fine even if they don't\n\n214\n00:11:26.590 --> 00:11:28.480\nprovide a size parameter.\n\n215\n00:11:28.480 --> 00:11:30.100\nIf they don't tell me what\nsize they're looking for,\n\n216\n00:11:30.100 --> 00:11:33.120\nI'm just gonna spit all the files out,\nthat's great.\n\n217\n00:11:33.120 --> 00:11:35.580\nBut if I was doing a math function,\nfor example,\n\n218\n00:11:35.580 --> 00:11:38.830\nif I was trying to add two numbers,\nand you passed in one number, but\n\n219\n00:11:38.830 --> 00:11:41.950\nnot the other one,\nit's not gonna work, right?\n\n220\n00:11:41.950 --> 00:11:45.303\nThis is gonna fail because you\ncan't add a number plus null,\n\n221\n00:11:45.303 --> 00:11:46.829\nit's just not gonna work.\n\n222\n00:11:46.829 --> 00:11:51.250\nOr if you were trying to make a remote\ndesktop connection with your function, and\n\n223\n00:11:51.250 --> 00:11:55.448\nyou needed the computer name that\nwas attempting to connect to, right?\n\n224\n00:11:55.448 --> 00:11:58.420\nIf they don't pass in the computer name,\nthe function's not gonna work.\n\n225\n00:11:58.420 --> 00:12:00.310\n&gt;&gt; Yeah, we're not just gonna\nrandomly guess and try to connect.\n\n226\n00:12:00.310 --> 00:12:03.720\n&gt;&gt; Yeah, let's just pick a computer name,\nright, or random letters and\n\n227\n00:12:03.720 --> 00:12:05.430\nhope it's a computer name.\n\n228\n00:12:05.430 --> 00:12:10.380\nSo there are times when I need to make\nsure that there are values passed in.\n\n229\n00:12:10.380 --> 00:12:14.500\nThat's when we can use\nour required parameter.\n\n230\n00:12:14.500 --> 00:12:18.540\nSo let's go down here a little bit\nfurther, and that's this one right here.\n\n231\n00:12:18.540 --> 00:12:24.610\nSo same idea, I define my parameter with\na parameter block inside my function.\n\n232\n00:12:24.610 --> 00:12:27.160\nSo I've got my function call,\n\n233\n00:12:27.160 --> 00:12:31.950\nI've got the name that I wanna call\nthe function, I've got my open brace.\n\n234\n00:12:31.950 --> 00:12:37.430\nAnd I've got my parameter block,\nif I can say that, param open parentheses.\n\n235\n00:12:37.430 --> 00:12:43.720\nAnd then I'm going to actually\ndo a couple of things here.\n\n236\n00:12:45.080 --> 00:12:46.150\nI got ahead of myself.\n\n237\n00:12:46.150 --> 00:12:47.250\nLet's do this.\n\n238\n00:12:47.250 --> 00:12:50.670\nHold off on the mandatory so\nI don't have to rewrite my code.\n\n239\n00:12:50.670 --> 00:12:55.800\nLet's talk about default values,\ncuz one way I could solve the problem\n\n240\n00:12:55.800 --> 00:13:01.290\nof them not passing a value would\nbe to assign default values, right?\n\n241\n00:13:01.290 --> 00:13:04.950\nThat way if they don't give anything\nI'm gonna say, then use this.\n\n242\n00:13:04.950 --> 00:13:06.740\nThere is a default value set.\n\n243\n00:13:06.740 --> 00:13:09.280\nYou guys get the idea\nbehind default value.\n\n244\n00:13:09.280 --> 00:13:12.480\nSo let's go back up to\nthis first function and\n\n245\n00:13:12.480 --> 00:13:18.300\nthe way you would define a default\nvalue is simply tell it, right?\n\n246\n00:13:18.300 --> 00:13:24.665\nSo I just added to my $size,\nI put it equals 2000, right?\n\n247\n00:13:24.665 --> 00:13:27.160\nSo now let's try calling large files.\n\n248\n00:13:27.160 --> 00:13:29.030\nLet's redefine this.\n\n249\n00:13:29.030 --> 00:13:33.884\nNeed to update my definition and\nlet's try calling it with no\n\n250\n00:13:33.884 --> 00:13:39.047\nparameter again and\nnotice it used the value 2000, right?\n\n251\n00:13:39.047 --> 00:13:41.290\nThat doesn't mean I\ncan't use anything else.\n\n252\n00:13:41.290 --> 00:13:45.095\nIf I wanna call it with 4000, right?\n\n253\n00:13:45.095 --> 00:13:46.294\nIt used 4000.\n\n254\n00:13:46.294 --> 00:13:48.540\nIt said, okay, you passed a value.\n\n255\n00:13:48.540 --> 00:13:49.410\nI'll use that value.\n\n256\n00:13:49.410 --> 00:13:50.910\nThat's what you want me to use.\n\n257\n00:13:50.910 --> 00:13:54.140\nBut if you don't pass\na value I know what to use.\n\n258\n00:13:54.140 --> 00:13:56.400\n2000 is sitting here and\nthe bag is waiting for me.\n\n259\n00:13:56.400 --> 00:13:59.050\nThat is the default value\nif you don't provide one.\n\n260\n00:13:59.050 --> 00:14:04.430\nSo if you've got a function that will fail\nif they don't pass in the parameters,\n\n261\n00:14:04.430 --> 00:14:07.730\none option would be to provide\ndefault values, right?\n\n262\n00:14:07.730 --> 00:14:10.440\nAnd that's what you do, and\nyou could do it either place.\n\n263\n00:14:10.440 --> 00:14:14.920\nHere I did it where we defined\nit inside the function block.\n\n264\n00:14:14.920 --> 00:14:16.210\nI can do it in line as well.\n\n265\n00:14:16.210 --> 00:14:18.041\nI can say equals 3,000.\n\n266\n00:14:18.041 --> 00:14:20.190\nI could define this function.\n\n267\n00:14:21.880 --> 00:14:26.820\nAnd I could call Get- LargeFiles2\nwithout any values\n\n268\n00:14:27.980 --> 00:14:31.160\nand oops, it did not like that actually.\n\n269\n00:14:32.360 --> 00:14:34.640\nIt did, I didn't write the host size.\n\n270\n00:14:34.640 --> 00:14:36.540\nI was like,\nwhy didn't it put the size down there?\n\n271\n00:14:36.540 --> 00:14:38.440\nI forgot to add that\nline to this function.\n\n272\n00:14:39.630 --> 00:14:43.263\nYou can see the last one in there is 4500,\nso it's definitely working.\n\n273\n00:14:43.263 --> 00:14:49.450\nBut let's verify that\nwith a little write-Host.\n\n274\n00:14:49.450 --> 00:14:51.200\nAll right, we'll redefine that.\n\n275\n00:14:53.250 --> 00:14:54.610\nWe'll run that one more time.\n\n276\n00:14:54.610 --> 00:14:57.360\nSo no parameters being provided,\n\n277\n00:14:57.360 --> 00:15:02.020\nwe'll use the value 3000\nbecause I set it as a default.\n\n278\n00:15:02.020 --> 00:15:04.140\nSo default values, and\nI can do that for every parameter,\n\n279\n00:15:04.140 --> 00:15:08.185\nif there was five parameters,\neach one could have its own default value.\n\n280\n00:15:08.185 --> 00:15:10.835\nJust equals, and then whatever\nyou want to set that value to.\n\n281\n00:15:10.835 --> 00:15:14.585\n&gt;&gt; And then if you did specify,\nwhich one would overrule?\n\n282\n00:15:14.585 --> 00:15:15.805\n&gt;&gt; Whichever one you specify.\n\n283\n00:15:15.805 --> 00:15:17.985\nSo in this case we had\nthe default of 3000.\n\n284\n00:15:17.985 --> 00:15:22.681\nBut if I felt like it,\nI could do 30000, right?\n\n285\n00:15:22.681 --> 00:15:25.150\nAnd I only get my really big files.\n\n286\n00:15:25.150 --> 00:15:29.470\nAll right, it ignores the default\nif the user provides a value.\n\n287\n00:15:29.470 --> 00:15:33.097\nOnly if they don't provide anything\nis it gonna use that default.\n\n288\n00:15:33.097 --> 00:15:37.543\nAll right, so that's one way to deal\nwith a parameter that needs a value for\n\n289\n00:15:37.543 --> 00:15:40.168\nthe function to run is\nto provide a default.\n\n290\n00:15:40.168 --> 00:15:43.303\nThere might be times though that\nyou don't wanna use a default,\n\n291\n00:15:43.303 --> 00:15:45.990\nthere really isn't anything to default to.\n\n292\n00:15:45.990 --> 00:15:50.131\nLike I was trying to give an example,\nthe computer name.\n\n293\n00:15:50.131 --> 00:15:54.020\nIf I was doing a remote desktop or\na PS session, and I had a script and\n\n294\n00:15:54.020 --> 00:15:58.694\nthey just had to pass in a computer name,\nthere wouldn't be a default for that.\n\n295\n00:15:58.694 --> 00:16:01.375\nHow do I say Cherokee\nwants a remote desktop?\n\n296\n00:16:01.375 --> 00:16:03.232\nShe didn't tell me what computer.\n\n297\n00:16:03.232 --> 00:16:07.794\nI'll just use server one as the default,\nright, that's not gonna work out too well.\n\n298\n00:16:07.794 --> 00:16:09.623\nOr if I had something for my sales people,\n\n299\n00:16:09.623 --> 00:16:11.663\na little script that returned customers,\nbut\n\n300\n00:16:11.663 --> 00:16:15.740\nthey needed to provide the first letter\nof the last name they were looking for.\n\n301\n00:16:15.740 --> 00:16:18.427\nI probably wouldn't provide\na default value for that,\n\n302\n00:16:18.427 --> 00:16:22.555\nbecause I don't know what they're looking\nfor, and there's 26 possibilities.\n\n303\n00:16:22.555 --> 00:16:24.447\nOr maybe I just spit out the a's,\nI don't know.\n\n304\n00:16:24.447 --> 00:16:25.189\n&gt;&gt; [LAUGH]\n&gt;&gt; That's up to you,\n\n305\n00:16:25.189 --> 00:16:25.906\nthat's something that you\nwould have to decide.\n\n306\n00:16:25.906 --> 00:16:27.248\n&gt;&gt; This is what you want, here you go.\n\n307\n00:16:27.248 --> 00:16:31.150\n&gt;&gt; Yeah, right, [LAUGH] so\nthat's one way to deal with it.\n\n308\n00:16:31.150 --> 00:16:36.110\nAnother way is to define\nthe parameter as mandatory, right?\n\n309\n00:16:36.110 --> 00:16:40.950\nWe can actually tell the function, look,\nif they don't pass a value, don't run, and\n\n310\n00:16:40.950 --> 00:16:42.150\nit's not gonna work.\n\n311\n00:16:42.150 --> 00:16:44.715\nAnd that's what I've done here,\n\n312\n00:16:44.715 --> 00:16:50.029\nI commented it out because I wanted\nto show you the size equals default.\n\n313\n00:16:50.029 --> 00:16:52.364\nBut I went ahead and\ndid that with the other functions, but\n\n314\n00:16:52.364 --> 00:16:53.564\nwe can go ahead and do it here.\n\n315\n00:16:53.564 --> 00:16:59.176\nI actually changed, LargeFiles4 is\na little bit different from LargeFiles3,\n\n316\n00:16:59.176 --> 00:17:01.300\nI added some more code in here.\n\n317\n00:17:03.030 --> 00:17:08.000\nCuz I wanted to show you a couple things,\nso let's talk about it and\n\n318\n00:17:08.000 --> 00:17:11.657\nthen we'll run it, all right, so it-\n&gt;&gt; Looks like you're giving some kind of\n\n319\n00:17:11.657 --> 00:17:13.119\nsubordinate object here.\n\n320\n00:17:13.119 --> 00:17:17.631\n&gt;&gt; Yeah, what I did, what I added, yeah,\nthis first line is exactly what we've been\n\n321\n00:17:17.631 --> 00:17:21.190\nrunning with LargeFiles1, 2,\nand 3, it's the same thing.\n\n322\n00:17:21.190 --> 00:17:26.410\nNothing is changed there, but\nthen I got a variable called $cmt and\n\n323\n00:17:26.410 --> 00:17:28.890\nGet-ChildItem, right.\n\n324\n00:17:28.890 --> 00:17:32.479\nIt's gonna basically do the same thing,\nbut I passed it into,\n\n325\n00:17:32.479 --> 00:17:37.101\nI don't need the Sort-Object for this one,\nI just copied and pasted in my code.\n\n326\n00:17:37.101 --> 00:17:42.220\nI passed it into something called measure,\nand measure is a really cool thing.\n\n327\n00:17:42.220 --> 00:17:45.730\nIt returns a lot of information,\none of them is the count, so\n\n328\n00:17:45.730 --> 00:17:47.450\nI want a count of lines.\n\n329\n00:17:47.450 --> 00:17:51.060\nLike when I run Get-Service,\nI get this whole list of services.\n\n330\n00:17:51.060 --> 00:17:53.852\nWhat if I wanted to know how\nmany services were on that list?\n\n331\n00:17:53.852 --> 00:17:58.970\nMeasure is one of the things I can do,\nI store that in this variable.\n\n332\n00:17:58.970 --> 00:18:02.810\nAnd then I'm just writing a message\nout to the console, found,\n\n333\n00:18:02.810 --> 00:18:07.647\nand then show me the count,\nfiles larger than, and\n\n334\n00:18:07.647 --> 00:18:11.300\nthen the parameter, the size that\nI passed in and then by itself.\n\n335\n00:18:11.300 --> 00:18:14.150\nI just thought it'd be fun to add a little\nmessage to the bottom of my script.\n\n336\n00:18:14.150 --> 00:18:17.200\nSo just having a little fun there,\nall right, but let's try it out,\n\n337\n00:18:17.200 --> 00:18:18.470\nlet's try it the way it is.\n\n338\n00:18:18.470 --> 00:18:24.040\nSo I've got a default value of 2,000,\nsomething else I've done with this one is,\n\n339\n00:18:24.040 --> 00:18:29.220\nI have defined the type, remember I said\nyou could do that inline or in the body.\n\n340\n00:18:29.220 --> 00:18:34.046\nI does have a set of brackets around it,\nso (int) or\n\n341\n00:18:34.046 --> 00:18:38.290\n(string), whatever you're\ntrying to declare.\n\n342\n00:18:38.290 --> 00:18:42.450\nAnd what that's gonna do is,\nit's gonna force a data type,\n\n343\n00:18:42.450 --> 00:18:47.180\nwhereas with this one,\nlike if we ran this guy here, right?\n\n344\n00:18:47.180 --> 00:18:49.530\nThere's a default value,\nlet's get rid of the default value,\n\n345\n00:18:49.530 --> 00:18:50.880\nit really doesn't matter.\n\n346\n00:18:50.880 --> 00:18:55.075\nLet's provide a bad value, let's go\n\n347\n00:18:55.075 --> 00:19:00.450\nGet-LargeFiles blue, yeah.\n\n348\n00:19:00.450 --> 00:19:04.870\nYou see a lot of red text go by on my\nscreen, because blue is not an integer and\n\n349\n00:19:04.870 --> 00:19:08.530\nI can't determine if the length of\nthis file is greater than blue.\n\n350\n00:19:08.530 --> 00:19:12.850\nThat makes sense, and\nthat's what I'm trying to do there.\n\n351\n00:19:12.850 --> 00:19:17.381\nAnd with the function like it is, there's\nnothing to prevent a user from providing\n\n352\n00:19:17.381 --> 00:19:20.870\nthat, right,\nfrom typing in blue instead of a number.\n\n353\n00:19:20.870 --> 00:19:22.710\nYou would think they would know, but\n\n354\n00:19:22.710 --> 00:19:26.700\nthey might be new to it,\nnot used to it and didn't know.\n\n355\n00:19:26.700 --> 00:19:31.070\nOr they could be doing it intentionally,\ntrying to break your program,\n\n356\n00:19:31.070 --> 00:19:32.400\nright, crash the server, who knows?\n\n357\n00:19:32.400 --> 00:19:35.810\n&gt;&gt; That's exactly where my mind went\nwhen you first were talking and\n\n358\n00:19:35.810 --> 00:19:36.560\nexplaining this.\n\n359\n00:19:36.560 --> 00:19:39.811\nBecause I'm thinking, this almost\nsounds like an integer overflow,\n\n360\n00:19:39.811 --> 00:19:41.976\nlike if I were to try to,\nfor input validation,\n\n361\n00:19:41.976 --> 00:19:46.036\nif I were to put incorrect values here-\n&gt;&gt; Absolutely, we call it fuzzing, yeah,\n\n362\n00:19:46.036 --> 00:19:48.619\nwhere look for\nthis kinda thing specifically.\n\n363\n00:19:48.619 --> 00:19:53.802\nCuz it could lead to potentially a buffer\noverflow issue if not handled right,\n\n364\n00:19:53.802 --> 00:19:56.010\nand depending on how my code was.\n\n365\n00:19:56.010 --> 00:20:00.150\nIn this case, I think we'd be safe,\nbut, so where was I going with that?\n\n366\n00:20:00.150 --> 00:20:05.640\nSo there's no declaration of data\ntype of that particular variable.\n\n367\n00:20:05.640 --> 00:20:09.783\nI can fix that simply by doing this,\nall right,\n\n368\n00:20:09.783 --> 00:20:13.212\ninside my brackets, put the word int.\n\n369\n00:20:13.212 --> 00:20:17.510\nLet's change that, let's update my\ndefinition and see what happens now.\n\n370\n00:20:19.553 --> 00:20:22.619\nAll right, so\ninstead of giving me an error and\n\n371\n00:20:22.619 --> 00:20:27.180\nwe have gonna go through here and\nfigure out what happened, right?\n\n372\n00:20:27.180 --> 00:20:31.600\nIt actually tells me there, input string\nwas not a correct format, so that's good.\n\n373\n00:20:31.600 --> 00:20:36.190\nBut here I just get a very straightforward\nanswer, it says, hey look,\n\n374\n00:20:36.190 --> 00:20:43.880\nI cannot transform the parameter\nSize into an integer, right.\n\n375\n00:20:43.880 --> 00:20:47.440\nOne of the reasons we like\ndeclaring the stuff is\n\n376\n00:20:47.440 --> 00:20:48.800\nbecause it helps the troubleshooting.\n\n377\n00:20:48.800 --> 00:20:51.670\nIt makes the errors make more sense,\n\n378\n00:20:51.670 --> 00:20:56.230\nbecause PowerShell knows what is wrong,\nbecause we said it should be an integer.\n\n379\n00:20:56.230 --> 00:20:59.600\nIt didn't pass an integer, and\nit can help me troubleshoot that,\n\n380\n00:20:59.600 --> 00:21:01.650\nby speeding up that information out.\n\n381\n00:21:01.650 --> 00:21:06.520\nAll right, which is what I've done\ndown here in LargeFiles4, and\n\n382\n00:21:06.520 --> 00:21:09.150\nlet's talk about best practices just for\na second.\n\n383\n00:21:09.150 --> 00:21:10.560\nAs we go through this and\n\n384\n00:21:10.560 --> 00:21:14.740\nI'm showing you guys how to write these\nfunctions, the whole indenting and\n\n385\n00:21:14.740 --> 00:21:17.560\nmaking things look good, I said,\nthat's the way I like to do things.\n\n386\n00:21:17.560 --> 00:21:20.810\nI think it helps with readability,\nand for other people to work with it,\n\n387\n00:21:20.810 --> 00:21:23.730\nI think it's important,\nbut it's not a necessity.\n\n388\n00:21:23.730 --> 00:21:28.237\nBut if we were gonna be writing functions\nthat are going to go into production, or\n\n389\n00:21:28.237 --> 00:21:30.359\nthat other people are gonna be using,\n\n390\n00:21:30.359 --> 00:21:33.430\nwe really wanna try to make\nthem as robust as possible.\n\n391\n00:21:33.430 --> 00:21:35.621\nAnd so one of the things we should, or\n\n392\n00:21:35.621 --> 00:21:39.460\na couple of things we should do\nis use named parameters, right?\n\n393\n00:21:39.460 --> 00:21:43.320\nWe really need to name our parameters,\nbecause that way,\n\n394\n00:21:43.320 --> 00:21:47.235\npeople know that you've given them\nan idea of what is expected in there.\n\n395\n00:21:47.235 --> 00:21:50.811\nAnd if they get out of order,\nI don't have to worry about it,\n\n396\n00:21:50.811 --> 00:21:55.315\nbecause I'm using the name, so\nit doesn't matter what order they come in.\n\n397\n00:21:55.315 --> 00:21:59.854\nWe should also declare our data types,\ntalking to Justin again,\n\n398\n00:21:59.854 --> 00:22:03.335\nI was like,\ndo you declare all of your data types?\n\n399\n00:22:03.335 --> 00:22:08.390\nHe says, so here's what I do, as I'm\ndeveloping my code, I might not declare\n\n400\n00:22:08.390 --> 00:22:12.930\nthe data types as I'm working with it,\nand it's just me and I'm developing it.\n\n401\n00:22:12.930 --> 00:22:15.170\nBut once I polish and get it ready to go,\n\n402\n00:22:15.170 --> 00:22:18.730\nand get ready to hand it off,\nI'd definitely go back in.\n\n403\n00:22:18.730 --> 00:22:23.320\nBecause I need it to be robust,\nI need it to not break, and\n\n404\n00:22:23.320 --> 00:22:25.620\nif it does break, break in a way\nthat's easy to troubleshoot.\n\n405\n00:22:25.620 --> 00:22:28.220\nSo keep that in mind, best practices say,\n\n406\n00:22:28.220 --> 00:22:31.790\ndefinitely declare your data types,\nbecause it can lead to problems.\n\n407\n00:22:31.790 --> 00:22:33.470\nAnd as Cherokee pointed out,\n\n408\n00:22:33.470 --> 00:22:37.510\nit can actually lead to security\nissues if we're not careful.\n\n409\n00:22:37.510 --> 00:22:38.800\n&gt;&gt; Yeah, and just keeping things straight,\n\n410\n00:22:38.800 --> 00:22:41.380\nlike hey,\nI'm handing this over to someone else.\n\n411\n00:22:41.380 --> 00:22:43.010\nTo go ahead and finish up, or\n\n412\n00:22:43.010 --> 00:22:48.030\neven, a lot of companies have a different\nteam actually try to break that code.\n\n413\n00:22:48.030 --> 00:22:49.654\nWhenever, before they launch\nit out into production, so-\n\n414\n00:22:49.654 --> 00:22:50.730\n&gt;&gt; Yes, absolutely,\n\n415\n00:22:50.730 --> 00:22:54.010\nwe wanna find it before the bad guys do,\nright?\n\n416\n00:22:54.010 --> 00:22:55.730\nAll right, so now let's take this one,\n\n417\n00:22:55.730 --> 00:23:00.650\nwhat we were talking about, I defined int,\nbut we did that in the large files, so\n\n418\n00:23:00.650 --> 00:23:03.880\nthe next thing I wanna\ntalk about is mandatory.\n\n419\n00:23:03.880 --> 00:23:08.213\nI said one of the things you could do to\nhelp make your code robust is to make sure\n\n420\n00:23:08.213 --> 00:23:12.091\nthat if there's a value, we give it\na default value for a parameter.\n\n421\n00:23:12.091 --> 00:23:16.370\nOr we can make it mandatory,\nif the function won't work without it, but\n\n422\n00:23:16.370 --> 00:23:18.830\nthere's no default value to set.\n\n423\n00:23:18.830 --> 00:23:24.374\nAnd that's as easy as,\nlet me uncomment this,\n\n424\n00:23:24.374 --> 00:23:29.086\nin my parameter block again, param (,\n\n425\n00:23:29.086 --> 00:23:32.413\nI put another open bracket,\n\n426\n00:23:32.413 --> 00:23:37.144\nParameter(Mandatory=$true)].\n\n427\n00:23:37.144 --> 00:23:41.207\nAll right, Mandatory=$true, of course,\n\n428\n00:23:41.207 --> 00:23:47.470\nthat could be Mandatory=$false,\nwhich means it's not mandatory.\n\n429\n00:23:47.470 --> 00:23:50.964\nOr just leave it off altogether, [LAUGH]\nright, then it wouldn't be mandatory.\n\n430\n00:23:50.964 --> 00:23:54.328\nSo we could run this, but I will tell you,\n\n431\n00:23:54.328 --> 00:23:59.233\nI wanna point something out,\nI have mandatory equals true,\n\n432\n00:23:59.233 --> 00:24:04.063\nand a default value, all right,\nlet's see if this works.\n\n433\n00:24:04.063 --> 00:24:05.214\nWhat do you guys think?\n\n434\n00:24:05.214 --> 00:24:07.023\nYou guess while I'm getting it ready.\n\n435\n00:24:07.023 --> 00:24:07.815\nI'm gonna define it.\n\n436\n00:24:07.815 --> 00:24:09.896\nIn your head, is it gonna work?\n\n437\n00:24:09.896 --> 00:24:10.834\nIs it not gonna work?\n\n438\n00:24:10.834 --> 00:24:11.466\nIs it gonna work?\n\n439\n00:24:11.466 --> 00:24:12.657\nIs it not gonna work?\n\n440\n00:24:12.657 --> 00:24:15.568\nWe're gonna go Get-LargeFiles4.\n\n441\n00:24:15.568 --> 00:24:18.070\nWe're not gonna provide a value.\n\n442\n00:24:18.070 --> 00:24:21.010\nIt's mandatory, but\nthere's a default value.\n\n443\n00:24:21.010 --> 00:24:22.182\nHm, what's gonna happen?\n\n444\n00:24:22.182 --> 00:24:23.318\n&gt;&gt; It's gonna work with the defaults.\n\n445\n00:24:23.318 --> 00:24:24.471\n&gt;&gt; Drum roll, please?\n\n446\n00:24:24.471 --> 00:24:27.295\n&gt;&gt; [LAUGH] I don't know if I was\nsupposed to say that or not.\n\n447\n00:24:27.295 --> 00:24:29.480\n&gt;&gt; [LAUGH] Well, no,\neverybody's allowed to guess, it's okay,\n\n448\n00:24:29.480 --> 00:24:30.415\nyou were allowed to guess.\n\n449\n00:24:30.415 --> 00:24:31.881\nAnd it didn't work.\n\n450\n00:24:31.881 --> 00:24:32.470\n&gt;&gt; No.\n\n451\n00:24:32.470 --> 00:24:37.120\n&gt;&gt; It's asking me for a size,\nit did not use that 2,000.\n\n452\n00:24:37.120 --> 00:24:38.380\nSo let's put a size in there.\n\n453\n00:24:39.720 --> 00:24:44.980\nAll right, and now it ran, it said it\nfound 49 files larger than 30,000 bytes.\n\n454\n00:24:44.980 --> 00:24:47.065\nAll right-\n&gt;&gt; So what happened?\n\n455\n00:24:47.065 --> 00:24:49.460\n&gt;&gt; So what happened,\nthat's a great question.\n\n456\n00:24:49.460 --> 00:24:51.388\nLet's break out our search engine and\nfind out.\n\n457\n00:24:51.388 --> 00:24:56.609\nI'm kidding, here's the thing, and\nonce you think about it, you go, duh.\n\n458\n00:24:56.609 --> 00:24:57.644\nThat makes sense why, right?\n\n459\n00:24:57.644 --> 00:25:01.219\n&gt;&gt; [LAUGH]\n&gt;&gt; Here we're telling them,\n\n460\n00:25:01.219 --> 00:25:04.270\nthey have to provide a value, right?\n\n461\n00:25:04.270 --> 00:25:08.268\nThe value is mandatory,\nyou must provide it.\n\n462\n00:25:08.268 --> 00:25:10.690\nWhen do we use the default value?\n\n463\n00:25:10.690 --> 00:25:12.200\n&gt;&gt; When one is not provided.\n\n464\n00:25:12.200 --> 00:25:14.172\n&gt;&gt; But they have to provide one.\n\n465\n00:25:14.172 --> 00:25:16.790\n&gt;&gt; Okay, so that's gonna just be the law.\n\n466\n00:25:16.790 --> 00:25:18.340\n&gt;&gt; Yes, exactly.\n\n467\n00:25:18.340 --> 00:25:22.720\nI can't say you have to provide a value,\nbut if you don't, here's one to use.\n\n468\n00:25:22.720 --> 00:25:23.301\n&gt;&gt; We'll use it anyway, yeah.\n\n469\n00:25:23.301 --> 00:25:25.060\n&gt;&gt; Yeah, that wouldn't make sense, right?\n\n470\n00:25:25.060 --> 00:25:30.670\nSo if you say it's mandatory,\ndefault values no longer work.\n\n471\n00:25:30.670 --> 00:25:33.840\nBecause you're saying the user\nhas to provide a value.\n\n472\n00:25:33.840 --> 00:25:35.340\nI'm not gonna provide one for them,\n\n473\n00:25:35.340 --> 00:25:37.610\nI've already told them\nthey have to provide one.\n\n474\n00:25:37.610 --> 00:25:38.953\nI don't know what you're gonna provide.\n\n475\n00:25:38.953 --> 00:25:40.760\n&gt;&gt; Makes sense.\n&gt;&gt; I don't have a default value to give\n\n476\n00:25:40.760 --> 00:25:42.440\nyou, you have to provide it.\n\n477\n00:25:42.440 --> 00:25:47.820\nSo yeah, once you think about the logic,\nlike, yeah, that kinda makes sense.\n\n478\n00:25:47.820 --> 00:25:50.830\nSo, I'll just get rid of default value,\nor I could leave the default value,\n\n479\n00:25:50.830 --> 00:25:52.680\nit's not hurting anything in there.\n\n480\n00:25:52.680 --> 00:25:54.380\nIt's just making my code ugly.\n\n481\n00:25:54.380 --> 00:25:57.370\nCuz some other admin is gonna go,\nwhy do you have default value there?\n\n482\n00:25:57.370 --> 00:25:58.149\nIt's mandatory, you can't do that.\n\n483\n00:25:58.149 --> 00:25:59.609\n&gt;&gt; Unnecessary.\n\n484\n00:25:59.609 --> 00:26:02.598\n&gt;&gt; He's gonna point at me and make fun of\nme or something, or she's gonna laugh and\n\n485\n00:26:02.598 --> 00:26:03.145\nI'll be sad.\n\n486\n00:26:03.145 --> 00:26:06.265\n&gt;&gt; [LAUGH]\n&gt;&gt; All right, so [LAUGH] let's see,\n\n487\n00:26:06.265 --> 00:26:09.317\nI'll run that again with\nthis new definition.\n\n488\n00:26:09.317 --> 00:26:13.579\nAnd again, if I try to use\nGet-LargeFiles4 without a value,\n\n489\n00:26:13.579 --> 00:26:17.880\nit says nope, nope, nope,\nyou have to provide a value.\n\n490\n00:26:17.880 --> 00:26:22.180\nSo we provide a value,\nand it runs, all right?\n\n491\n00:26:22.180 --> 00:26:24.880\nOr if we would have just done what we were\nsupposed to do and provided a value in\n\n492\n00:26:24.880 --> 00:26:30.300\nthe first place, we wouldn't get that\nprompt for, hey, what is the size?\n\n493\n00:26:30.300 --> 00:26:35.630\nSo, that's how you can\ncreate mandatory variables\n\n494\n00:26:35.630 --> 00:26:40.114\nwithin that parameter block, parameter,\n\n495\n00:26:40.114 --> 00:26:45.932\nopen parentheses,\nmandatory equals dollar sign true,\n\n496\n00:26:45.932 --> 00:26:51.038\nclose parentheses,\nclose bracket, all right?\n\n497\n00:26:51.038 --> 00:26:55.080\nAll right,\nlet's see what else we got in here.\n\n498\n00:26:55.080 --> 00:26:59.636\nThe last one I have written in my\nfunctions is function Edit-File,\n\n499\n00:26:59.636 --> 00:27:04.380\nthis is why, I think I stole part\nof this from Don, I liked his idea.\n\n500\n00:27:04.380 --> 00:27:09.590\nLittle function Edit-File,\nit has a parameter that is mandatory.\n\n501\n00:27:09.590 --> 00:27:11.160\nMandatory equals true.\n\n502\n00:27:11.160 --> 00:27:13.423\nWell now, I got my extra spaces in there.\n\n503\n00:27:13.423 --> 00:27:17.954\nAnd I am asking for\na parameter called file, and\n\n504\n00:27:17.954 --> 00:27:22.290\nthen after that, I've got notepad $file.\n\n505\n00:27:22.290 --> 00:27:26.620\nSo the idea is, you call this function,\nyou provide the file name,\n\n506\n00:27:26.620 --> 00:27:30.060\nand then it's gonna execute\nthe commandlet notepad.\n\n507\n00:27:30.060 --> 00:27:30.650\n&gt;&gt; So you can edit it.\n\n508\n00:27:30.650 --> 00:27:31.950\n&gt;&gt; The file, exactly.\n\n509\n00:27:31.950 --> 00:27:32.700\n&gt;&gt; Okay.\n\n510\n00:27:32.700 --> 00:27:33.750\n&gt;&gt; Well, let's see if that works.\n\n511\n00:27:33.750 --> 00:27:34.413\n&gt;&gt; Let's do it.\n&gt;&gt; All right?\n\n512\n00:27:34.413 --> 00:27:35.718\n&gt;&gt; [LAUGH]\n&gt;&gt; Let's define it.\n\n513\n00:27:35.718 --> 00:27:38.405\n&gt;&gt; There's gonna be something strange and\nodd happening, I have a feeling.\n\n514\n00:27:38.405 --> 00:27:40.899\n[LAUGH]\n&gt;&gt; I think I'm setting myself up for\n\n515\n00:27:40.899 --> 00:27:41.697\nfailure like that.\n\n516\n00:27:41.697 --> 00:27:43.057\nLet's do edit-\n&gt;&gt; You're setting me up for failure.\n\n517\n00:27:43.057 --> 00:27:46.949\n[LAUGH]\n&gt;&gt; [LAUGH] If I don't provide a value,\n\n518\n00:27:46.949 --> 00:27:50.442\nit says it's mandatory, you have to.\n\n519\n00:27:50.442 --> 00:27:53.461\nSo I just Ctrl+C and say never mind,\nI don't wanna use you then.\n\n520\n00:27:53.461 --> 00:27:58.336\nNo, I'm kidding, I do need to make sure\nI've got the name of the file handy,\n\n521\n00:27:58.336 --> 00:28:02.000\nlet's see what directory I am in,\nsystem 32.\n\n522\n00:28:02.000 --> 00:28:05.900\nLet me switch over to scripts,\nand in there,\n\n523\n00:28:05.900 --> 00:28:11.450\nyou should have, yeah,\nthere's a few things in there.\n\n524\n00:28:11.450 --> 00:28:12.906\nSo look, did I define that yet, Cherokee?\n\n525\n00:28:12.906 --> 00:28:14.820\nI can't remember.\n\n526\n00:28:14.820 --> 00:28:16.975\nRun it one more time,\nit won't hurt it to define it again.\n\n527\n00:28:16.975 --> 00:28:19.890\nI'm gonna say, Edit-File.\n\n528\n00:28:22.930 --> 00:28:23.490\nWhat was in there?\n\n529\n00:28:23.490 --> 00:28:26.348\nDon's profile's in there,\nI know that's empty.\n\n530\n00:28:26.348 --> 00:28:27.980\nWhat else is there?\n\n531\n00:28:27.980 --> 00:28:29.720\nProfile is in there.\n\n532\n00:28:29.720 --> 00:28:31.020\nYeah, profile.ps1's in there.\n\n533\n00:28:32.220 --> 00:28:36.839\nAnd there we go, Notepad opens up with\nmy profile right there, so quick edit.\n\n534\n00:28:36.839 --> 00:28:38.920\nI don't know,\nI find that handy because I'm forever-\n\n535\n00:28:38.920 --> 00:28:39.478\n&gt;&gt; So, no tricks?\n\n536\n00:28:39.478 --> 00:28:43.240\n&gt;&gt; Either outputting stuff to a file,\nor a log, or something like that.\n\n537\n00:28:43.240 --> 00:28:44.936\nAnd I wanna open it up with\nNotepad real quick and-\n\n538\n00:28:44.936 --> 00:28:45.729\n&gt;&gt; Yeah, I like that.\n\n539\n00:28:45.729 --> 00:28:47.232\n&gt;&gt; Whatever the case may be, yep.\n\n540\n00:28:47.232 --> 00:28:48.271\n&gt;&gt; Well, that is pretty cool.\n\n541\n00:28:48.271 --> 00:28:51.940\nI mean, that's definitely something\nthat I'm working with all the time in\n\n542\n00:28:51.940 --> 00:28:52.810\nediting things.\n\n543\n00:28:52.810 --> 00:28:56.920\nSo anything to help us save time and\nbe more efficient is fine by me.\n\n544\n00:28:56.920 --> 00:28:58.173\n&gt;&gt; Absolutely.\n&gt;&gt; [LAUGH]\n\n545\n00:28:58.173 --> 00:28:59.295\n&gt;&gt; All right, well Cherokee,\n\n546\n00:28:59.295 --> 00:29:00.050\nthat's all I got.\n\n547\n00:29:00.050 --> 00:29:04.687\nI know I wanna show everybody how we can\nuse these because I know one of the things\n\n548\n00:29:04.687 --> 00:29:08.482\nwe've done here at ISE is I was\nhighlighting those functions and\n\n549\n00:29:08.482 --> 00:29:09.545\nexecuting them.\n\n550\n00:29:09.545 --> 00:29:12.610\nSo that loaded them up into memory,\nand then we were able to use them.\n\n551\n00:29:12.610 --> 00:29:14.820\nBut you saw when I went\nover to my console,\n\n552\n00:29:14.820 --> 00:29:16.740\nI didn't have access to those functions.\n\n553\n00:29:16.740 --> 00:29:19.579\nAnd once I shut my ISE down,\nI'm gonna lose them all.\n\n554\n00:29:19.579 --> 00:29:24.310\nAnd if I wanna use them again, I'm gonna\nhave to highlight them and run them again.\n\n555\n00:29:24.310 --> 00:29:25.392\nSo in our next show,\n\n556\n00:29:25.392 --> 00:29:29.426\nwe'll take a look at how we can make\nthose a little more reuseable, right?\n\n557\n00:29:29.426 --> 00:29:31.798\nBecause that's really the whole\nidea behind functions is,\n\n558\n00:29:31.798 --> 00:29:34.318\nI need to write this stuff out so\nI don't have to do it every time.\n\n559\n00:29:34.318 --> 00:29:36.872\nI just wanna be able to\nuse them when I need them.\n\n560\n00:29:36.872 --> 00:29:39.760\n&gt;&gt; Okay, and I'm actually starting\nto see we're progressing,\n\n561\n00:29:39.760 --> 00:29:41.590\nwe're learning a little bit more.\n\n562\n00:29:41.590 --> 00:29:45.482\nAnd it seems like I've always felt\nlike this about PowerShell and\n\n563\n00:29:45.482 --> 00:29:49.800\njust what you had just shown us there,\nit's something that, yeah, you might\n\n564\n00:29:49.800 --> 00:29:53.230\nhave a learning curve getting started\nhere and require getting used to it.\n\n565\n00:29:53.230 --> 00:29:55.660\nBut then when once you've got it,\nyou're ready to rock and roll.\n\n566\n00:29:55.660 --> 00:29:58.790\nAnd you just, by using it,\nyou're simply becoming more effective.\n\n567\n00:29:58.790 --> 00:30:05.675\nIt's like one of those pieces\nof software or tools here.\n\n568\n00:30:05.675 --> 00:30:08.361\nWe're accidentally becoming more\nefficient, is what I should say.\n\n569\n00:30:08.361 --> 00:30:09.251\n&gt;&gt; Uh-huh, there we go, I like that.\n\n570\n00:30:09.251 --> 00:30:10.651\n&gt;&gt; [LAUGH]\n&gt;&gt; And it's fun.\n\n571\n00:30:10.651 --> 00:30:12.900\nI mean, what is not fun about PowerShell?\n\n572\n00:30:12.900 --> 00:30:13.470\n&gt;&gt; That's right.\n\n573\n00:30:13.470 --> 00:30:15.900\nAll right, so you don't wanna miss more\nfun, ladies and gentlemen, but for\n\n574\n00:30:15.900 --> 00:30:17.930\nthis show, we definitely are out of time.\n\n575\n00:30:17.930 --> 00:30:19.500\nSo we'll go ahead and sign out.\n\n576\n00:30:19.500 --> 00:30:20.920\nI've been your host, Cherokee Boose.\n\n577\n00:30:20.920 --> 00:30:21.750\n&gt;&gt; And I'm Mike Rodrick.\n\n578\n00:30:21.750 --> 00:30:23.803\n&gt;&gt; See you next time.\n\n579\n00:30:23.803 --> 00:30:29.902\n[MUSIC]\n\n580\n00:30:29.902 --> 00:30:32.867\n&gt;&gt; Thank you for watching ITProTV.\n\n",
          "vimeoId": "238442327"
        },
        {
          "description": "In this episode, Mike and Cherokee discuss the concept of modules in PowerShell. They look at the default locations where modules are stored, and the components that make up a module.",
          "length": "1628",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-1-module_basics-101317-PGM.00_26_53_09.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-1-module_basics-101317-PGM.00_26_53_09.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-1-module_basics-101317-PGM.00_26_53_09.Still001-sm.jpg",
          "title": "Module Basics",
          "transcript": "WEBVTT\n\n1\n00:00:00.430 --> 00:00:03.104\nWelcome to ITProTV.\n\n2\n00:00:03.104 --> 00:00:05.395\nI'm your host, Don Pezet.\n\n3\n00:00:05.395 --> 00:00:06.924\n[CROSSTALK]\n\n4\n00:00:06.924 --> 00:00:08.361\n[MUSIC]\n\n5\n00:00:08.361 --> 00:00:11.030\n&gt;&gt; You're watching ITProTV.\n\n6\n00:00:11.030 --> 00:00:14.510\n&gt;&gt; Welcome, ladies and gentlemen,\nto your PowerShell show.\n\n7\n00:00:14.510 --> 00:00:16.560\nI'm your host, Cherokee Boose.\n\n8\n00:00:16.560 --> 00:00:20.190\nIn this episode,\nwe'll be taking a look at module basics.\n\n9\n00:00:20.190 --> 00:00:23.320\nAnd with us today, in studios,\nwe have Mr. Mike Rodrick.\n\n10\n00:00:23.320 --> 00:00:24.330\nHow's it going today, Mike?\n\n11\n00:00:24.330 --> 00:00:25.230\n&gt;&gt; It's going great, Cherokee.\n\n12\n00:00:25.230 --> 00:00:26.110\nThanks for having me back.\n\n13\n00:00:26.110 --> 00:00:28.250\nExcited to be here as always.\n\n14\n00:00:28.250 --> 00:00:31.340\nAnd, yeah,\nwe're going to be talking about modules.\n\n15\n00:00:31.340 --> 00:00:34.380\nIn our previous episode we were\nworking with basic functions and\n\n16\n00:00:34.380 --> 00:00:36.980\nwe were writing a couple little functions.\n\n17\n00:00:36.980 --> 00:00:39.740\nAnd I was basically\nhighlighting each function,\n\n18\n00:00:39.740 --> 00:00:43.800\none at a time executing the function and\nthen calling the function.\n\n19\n00:00:43.800 --> 00:00:48.090\nAnd that works as we're learning,\nand it's a great way to start.\n\n20\n00:00:48.090 --> 00:00:50.937\nBut the idea when we define functions,\n\n21\n00:00:50.937 --> 00:00:56.730\nwe talked about how the reason we want\nthese is to hide complex calculations.\n\n22\n00:00:56.730 --> 00:01:01.370\nTo give us that re-usability of complex\ncode, right, cuz call the function,\n\n23\n00:01:01.370 --> 00:01:05.520\npossibly pass parameters into it and\nget some kind of return out of it,\n\n24\n00:01:05.520 --> 00:01:07.773\nnot have to rewrite that code every time,\nall right?\n\n25\n00:01:08.900 --> 00:01:12.440\n&gt;&gt; Now, I recall you had mentioned,\nor at least introduced the topic\n\n26\n00:01:12.440 --> 00:01:15.770\nof the concept of a module briefly\nto us in our previous episode.\n\n27\n00:01:15.770 --> 00:01:19.200\nAnd it almost sounded like\na way that we could organize.\n\n28\n00:01:19.200 --> 00:01:23.650\nAnd keep those functions or\nscripts in separate,\n\n29\n00:01:23.650 --> 00:01:26.885\nnot necessarily containers, but\nis it something along those lines?\n\n30\n00:01:26.885 --> 00:01:29.884\n&gt;&gt; Yeah, you could really\nlook at it like a container,\n\n31\n00:01:29.884 --> 00:01:32.417\nthat's really what\na module is going to be.\n\n32\n00:01:32.417 --> 00:01:34.277\nBut I think you're referring back,\n\n33\n00:01:34.277 --> 00:01:36.977\nway back to the beginning of this,\nwe had talked about\n\n34\n00:01:36.977 --> 00:01:41.310\nthe default modules that get imported into\nour session like PSReadline for example.\n\n35\n00:01:41.310 --> 00:01:44.040\nWe also saw how we can add cmdlets.\n\n36\n00:01:44.040 --> 00:01:47.750\nWe went and we got the remote server\nadmin tools, we installed those and\n\n37\n00:01:47.750 --> 00:01:51.180\nall of a sudden I had that Active\nDirectory module which gave me a whole\n\n38\n00:01:51.180 --> 00:01:55.790\nbunch of new cmdlets that I didn't have\naccess to before that I could start using.\n\n39\n00:01:55.790 --> 00:01:59.280\nAnd that's exactly what we would want\nto do here is we'd wanna create our own\n\n40\n00:01:59.280 --> 00:02:04.500\nmodule for those functions that we create\nor that's one of the ways we can do it.\n\n41\n00:02:04.500 --> 00:02:07.350\nSo let's take a look at a couple\nof different things that we can do\n\n42\n00:02:07.350 --> 00:02:10.590\nbecause there are different\nmethods that people will use and\n\n43\n00:02:10.590 --> 00:02:14.390\na lot of it depends on\nreally what your needs are.\n\n44\n00:02:14.390 --> 00:02:19.900\nSo let's start with a very simple way\nto reuse those functions, all right?\n\n45\n00:02:19.900 --> 00:02:21.960\nSo let's take a look at my screen here.\n\n46\n00:02:21.960 --> 00:02:25.090\nAnd I'm going to simply launch PowerShell.\n\n47\n00:02:26.770 --> 00:02:33.290\nAnd I am going to switch over\nto my Scripts directory.\n\n48\n00:02:33.290 --> 00:02:38.630\nIn here I've got that .ps1 file that we\nwere working with in the previous episode.\n\n49\n00:02:38.630 --> 00:02:41.326\nI named it MyFunctions-.ps1.\n\n50\n00:02:41.326 --> 00:02:43.083\nNow we haven't gone into scripting.\n\n51\n00:02:43.083 --> 00:02:48.659\nThat's gonna be another series of videos,\nbut a .ps1 file is a PowerShell script.\n\n52\n00:02:48.659 --> 00:02:53.301\nAnd that's how I can save information\nlike what we did in ISE in the previous\n\n53\n00:02:53.301 --> 00:02:54.046\nepisodes.\n\n54\n00:02:54.046 --> 00:02:58.546\nSo in fact, if we open that up,\nlet's see, edit-,\n\n55\n00:02:58.546 --> 00:03:05.280\nI don't have that one yet, so\nlet's just do notepad .\\MyFunctions.ps1.\n\n56\n00:03:05.280 --> 00:03:07.170\nRight here is that file again,\n\n57\n00:03:07.170 --> 00:03:12.550\nthe same one we're using in that previous\nepisode with all of our large file one,\n\n58\n00:03:12.550 --> 00:03:16.140\ntwo, three, four and edit dash file and\nall that good stuff.\n\n59\n00:03:16.140 --> 00:03:17.990\nI saved it as a .ps1 file.\n\n60\n00:03:17.990 --> 00:03:20.510\nSo at this point, it's just a script.\n\n61\n00:03:20.510 --> 00:03:22.350\nAnd this is one way you can do it.\n\n62\n00:03:22.350 --> 00:03:26.150\nAnd this is a common way, it's a way\nthat I've done it for a long time.\n\n63\n00:03:26.150 --> 00:03:30.935\nIf you have a bunch of functions that you\nwanna use and it's really just for you,\n\n64\n00:03:30.935 --> 00:03:35.292\nbut you've developed them and\nnobody else really needs them.\n\n65\n00:03:35.292 --> 00:03:38.270\nOr maybe you just don't wanna go through\nthe trouble of developing a module,\n\n66\n00:03:38.270 --> 00:03:40.860\nyou can just leave them in a script file.\n\n67\n00:03:40.860 --> 00:03:43.497\nThat's definitely one way to do it, right?\n\n68\n00:03:43.497 --> 00:03:47.455\nNow if I try to run one of those\nfunctions, like you just saw me,\n\n69\n00:03:47.455 --> 00:03:50.090\nedit-file, right, it doesn't work.\n\n70\n00:03:50.090 --> 00:03:51.834\nI'm doing my tab autofill.\n\n71\n00:03:51.834 --> 00:03:56.730\nIf I try to do that, it says there\nis no cmdlet named edit-file.\n\n72\n00:03:56.730 --> 00:03:58.806\nSo we're gonna notice\na couple of things here.\n\n73\n00:03:58.806 --> 00:04:03.000\nOne, didn't work,\n[LAUGH] which is pretty obvious.\n\n74\n00:04:03.000 --> 00:04:04.680\nAnd two, it didn't go find it.\n\n75\n00:04:04.680 --> 00:04:09.130\nRemember with our modules in PowerShell 5,\nreally starting since PowerShell 3,\n\n76\n00:04:09.130 --> 00:04:14.130\nif I type a command and the module\nthat stores that command is not loaded\n\n77\n00:04:14.130 --> 00:04:18.730\nup already, it can actually search through\nthe modules, find the module that contains\n\n78\n00:04:18.730 --> 00:04:22.870\nthat command and\nautomatically load that module up for me.\n\n79\n00:04:22.870 --> 00:04:24.060\nAnd that's great.\n\n80\n00:04:24.060 --> 00:04:28.460\nI no longer have to have a whole list of\nimport dash modules at the beginning of my\n\n81\n00:04:28.460 --> 00:04:31.660\nprofile, when I don't need all\nthose commands all the time.\n\n82\n00:04:31.660 --> 00:04:33.450\nIt'll just load up the ones that I need.\n\n83\n00:04:33.450 --> 00:04:39.083\nFor example, if I look at my modules,\nget-module, all right?\n\n84\n00:04:39.083 --> 00:04:45.303\nNope, they're already loaded up there, so\nI have run those recently it looks like.\n\n85\n00:04:45.303 --> 00:04:49.460\nI was gonna see if I\ncould get one to load up.\n\n86\n00:04:49.460 --> 00:04:54.119\nI don't have the,\nlet's do get-module-listavailable.\n\n87\n00:04:57.205 --> 00:04:59.737\nAll right, shows me all the modules\nthat I don't have installed but\n\n88\n00:04:59.737 --> 00:05:01.100\nthat I could install.\n\n89\n00:05:01.100 --> 00:05:03.472\nAnd let me find one like SMBShare.\n\n90\n00:05:03.472 --> 00:05:09.490\nSo get-SmbShare is a part\nof that SMBShare module,\n\n91\n00:05:09.490 --> 00:05:12.370\nwhich is not in my list of modules,\nif you recall.\n\n92\n00:05:12.370 --> 00:05:14.460\nThat one is not loaded up.\n\n93\n00:05:14.460 --> 00:05:19.450\nBut if I run get-smbshare,\nthose are tab auto filled\n\n94\n00:05:19.450 --> 00:05:24.520\nalmost like it was loaded up, and\nif I run it, it'll list my shares.\n\n95\n00:05:24.520 --> 00:05:29.870\nAnd if we do a Get-Module now,\nSmbShare is loaded up, right?\n\n96\n00:05:31.220 --> 00:05:34.230\nSo I forget where I was\nactually headed with that.\n\n97\n00:05:34.230 --> 00:05:36.830\nSo you'll notice how we can\nget those modules to load up.\n\n98\n00:05:36.830 --> 00:05:43.738\nBut my command, edit-file, is not working,\nlike that did with the smbshare.\n\n99\n00:05:43.738 --> 00:05:48.192\nIt didn't find that command and\nautomatically load up that script so\n\n100\n00:05:48.192 --> 00:05:50.900\nthat I have access to that command.\n\n101\n00:05:50.900 --> 00:05:54.640\nSo we need to figure out a way\nthat we can deal with that.\n\n102\n00:05:54.640 --> 00:05:55.596\nA couple of ways we can do it.\n\n103\n00:05:55.596 --> 00:05:59.898\nIf I want to leave it in a script like it\nis now, what we do is something known as\n\n104\n00:05:59.898 --> 00:06:03.390\ndot-sourcing, basically\njust run the script.\n\n105\n00:06:03.390 --> 00:06:10.090\nAll right, so I'm going to do\n..\\myfunctions.ps1, all right.\n\n106\n00:06:10.090 --> 00:06:11.805\nThat is saying, hey look,\n\n107\n00:06:11.805 --> 00:06:15.794\nwe're gonna dot source in\nthe current directory that I'm in.\n\n108\n00:06:15.794 --> 00:06:19.170\nCuz I remember I changed\ninto the script's directory.\n\n109\n00:06:19.170 --> 00:06:21.020\nI've got that as part of my profile.\n\n110\n00:06:21.020 --> 00:06:23.740\nAnd then the name of that script, and\n\n111\n00:06:23.740 --> 00:06:28.250\nI hit Enter, it doesn't look\nlike anything happened, right?\n\n112\n00:06:28.250 --> 00:06:33.810\nAnd if I do get-module, well,\nwe're not gonna see my script listed here,\n\n113\n00:06:33.810 --> 00:06:39.780\nmy functions or anything like that, but\nif I try to do edit-file, notice it works.\n\n114\n00:06:39.780 --> 00:06:44.640\nAnd I can edit profile.ps1, for example.\n\n115\n00:06:44.640 --> 00:06:50.520\nSo by running that script, I loaded all\nof those functions up into memory and\n\n116\n00:06:50.520 --> 00:06:52.440\nthey're now available, just great.\n\n117\n00:06:53.740 --> 00:06:57.770\nAnd like I said, so this is just for\nyou to make your life easier.\n\n118\n00:06:57.770 --> 00:06:59.570\nThis is a really easy way to do it.\n\n119\n00:06:59.570 --> 00:07:04.940\nIf I had a new function I wanted to write,\nI would just add it to MyFunctions.ps1 and\n\n120\n00:07:04.940 --> 00:07:07.680\nthen load that script up\nwhenever I needed it.\n\n121\n00:07:07.680 --> 00:07:11.620\nOr even make this part of my profile.\n\n122\n00:07:11.620 --> 00:07:13.260\nSo I did that at the very beginning.\n\n123\n00:07:13.260 --> 00:07:16.760\nI'd have to put a full path in there\ndepending on where my shell started.\n\n124\n00:07:16.760 --> 00:07:21.860\nBut I could, in my profile, load this\nscript up every time I open up PowerShell\n\n125\n00:07:21.860 --> 00:07:23.330\nand those commands would be available.\n\n126\n00:07:23.330 --> 00:07:25.770\nSo I could do it this way,\nand it's simple.\n\n127\n00:07:25.770 --> 00:07:31.160\nI just modify that file to add a new\nfunction and we're all good to go.\n\n128\n00:07:31.160 --> 00:07:34.665\nIf I close PowerShell, and\nI launch PowerShell again,\n\n129\n00:07:34.665 --> 00:07:40.055\nand we wait for my three and\na half second profile to load up.\n\n130\n00:07:40.055 --> 00:07:45.320\nAnd I do edit-file,\nnotice no more tab auto fill.\n\n131\n00:07:45.320 --> 00:07:46.730\nAnd it tells me it's not found.\n\n132\n00:07:46.730 --> 00:07:50.894\nBecause I need to load it up every time.\n\n133\n00:07:50.894 --> 00:07:53.727\nOops, what did I do there?\n\n134\n00:07:53.727 --> 00:07:57.237\nMy function's not recognizing\nthe name of cmdlet.\n\n135\n00:07:57.237 --> 00:08:00.184\nI didn't change over my directory,\nso it's not finding that file.\n\n136\n00:08:00.184 --> 00:08:03.418\nCds to get in my scripts directory, and\n\n137\n00:08:03.418 --> 00:08:09.112\nthen I can run that command again,\nand now edit-file is available.\n\n138\n00:08:09.112 --> 00:08:14.007\nSo I can do again, profile.ps1,\nor what have you, all right?\n\n139\n00:08:14.007 --> 00:08:17.060\nSo sorry about that error,\nI was in the wrong directory.\n\n140\n00:08:17.060 --> 00:08:21.225\nThis dot backslash says,\nlook in the current working directory, and\n\n141\n00:08:21.225 --> 00:08:24.552\nI wasn't in there, pwd,\npresent working directory.\n\n142\n00:08:24.552 --> 00:08:31.786\nNow I'm in the scripts directory,\nwhich does have my MyFunctions.ps1.\n\n143\n00:08:31.786 --> 00:08:33.788\nSo you do have to pay attention,\nmake sure you're in the right directory.\n\n144\n00:08:33.788 --> 00:08:38.150\nOr just give it the full path,\nI definitely could have done that, too,\n\n145\n00:08:38.150 --> 00:08:42.819\ndot, space, C:/scripts, and\nthat would have worked just fine as well.\n\n146\n00:08:42.819 --> 00:08:44.180\nAll right, so that's one way to do it,\nbut the persistance can be an issue.\n\n147\n00:08:44.180 --> 00:08:48.976\nBecause every time I open up my\nPowerShell, I've got a new session and\n\n148\n00:08:48.976 --> 00:08:51.427\nI'm gonna have to run that script.\n\n149\n00:08:51.427 --> 00:08:56.284\nAgain, I could add it to my\nprofile to help with that issue.\n\n150\n00:08:56.284 --> 00:09:03.561\nBut as our skills get greater and greater,\nwe get more proficient with PowerShell.\n\n151\n00:09:03.561 --> 00:09:08.917\nWe might want to move beyond\nstoring everything in a script and\n\n152\n00:09:08.917 --> 00:09:15.312\nstart creating modules, because\nmodules give us a portability factor.\n\n153\n00:09:15.312 --> 00:09:19.066\nThere's a lot more that we\ncan do with modules other\n\n154\n00:09:19.066 --> 00:09:22.220\nthan storing just our functions in there.\n\n155\n00:09:22.220 --> 00:09:24.675\nPlus it's cool to say that\nI write a module, right?\n\n156\n00:09:24.675 --> 00:09:26.946\n&gt;&gt; [LAUGH]\n&gt;&gt; I've written a module [LAUGH].\n\n157\n00:09:26.946 --> 00:09:27.804\n&gt;&gt; Have you?\n\n158\n00:09:27.804 --> 00:09:30.727\n[LAUGH]\n&gt;&gt; All right, so, yes, yes, I have.\n\n159\n00:09:30.727 --> 00:09:34.238\nSo that is what we\nare going to look at next,\n\n160\n00:09:34.238 --> 00:09:40.009\nis how do I move from the storing it\nas a script to storing it as a module?\n\n161\n00:09:40.009 --> 00:09:43.651\nAnd then I can load the module up\njust like I do other modules, but\n\n162\n00:09:43.651 --> 00:09:47.240\nwhere it's really cool,\nremember what PowerShell does now.\n\n163\n00:09:47.240 --> 00:09:50.658\nIf I start typing in a command,\nand that module's not loaded up,\n\n164\n00:09:50.658 --> 00:09:53.843\nit'll actually find the module and\nload that module for me.\n\n165\n00:09:53.843 --> 00:09:57.127\nSo I don't even have to add it to\nmy profile anymore, how about that?\n\n166\n00:09:57.127 --> 00:09:59.526\nThat is cool, and\nthat's what we're gonna do.\n\n167\n00:09:59.526 --> 00:10:02.694\nSo the first thing we need to know is,\nwhere do we store the modules?\n\n168\n00:10:02.694 --> 00:10:06.981\nBecause PowerShell's not gonna look across\nyour entire hard drive for that module.\n\n169\n00:10:06.981 --> 00:10:09.060\nIf you want to start typing a command and\n\n170\n00:10:09.060 --> 00:10:12.656\nhave it automatically load the module\nthat contains that command.\n\n171\n00:10:12.656 --> 00:10:15.525\nThere's just a few places\nPowerShell is gonna look, and\n\n172\n00:10:15.525 --> 00:10:17.629\nthat's what we need to know, all right?\n\n173\n00:10:17.629 --> 00:10:22.525\n&gt;&gt; So Mike, if we do specify that\nfull path, could we use a UNC path?\n\n174\n00:10:22.525 --> 00:10:24.486\nAnd not just a local path,\n\n175\n00:10:24.486 --> 00:10:28.774\nif I wanted to pull a module\nfrom somewhere on my network?\n\n176\n00:10:28.774 --> 00:10:31.053\n&gt;&gt; Yes, if you want to import a module,\nit can be on a network share,\n\n177\n00:10:31.053 --> 00:10:32.222\nif that's what you're asking.\n\n178\n00:10:32.222 --> 00:10:32.982\n&gt;&gt; Okay, yes.\n\n179\n00:10:32.982 --> 00:10:37.354\n&gt;&gt; It doesn't have to be in this place,\nthis is really just about wanting to kind\n\n180\n00:10:37.354 --> 00:10:39.995\nof search and\nfind the module automatically.\n\n181\n00:10:39.995 --> 00:10:43.615\nSo we have an environment\nvariable called PSModulePath, and\n\n182\n00:10:43.615 --> 00:10:47.313\nit spits out some weird stuff,\nit's not formatted very well.\n\n183\n00:10:47.313 --> 00:10:51.841\nSo, what I'm going to do is I'm going\nto add a -split to the end of this,\n\n184\n00:10:51.841 --> 00:10:56.099\njust a parameter, and then tell it\nI want to split on the semicolon.\n\n185\n00:10:56.099 --> 00:10:58.052\nI've got it surrounded by single quotes,\n\n186\n00:10:58.052 --> 00:11:00.667\nit's a really light blue when\nI do the strings like that.\n\n187\n00:11:00.667 --> 00:11:04.678\nI know that might be difficult for\nyou to see, but that's a single quote,\n\n188\n00:11:04.678 --> 00:11:06.244\nsemicolon, single quote.\n\n189\n00:11:06.244 --> 00:11:08.534\nBecause I can see here's one path, and\n\n190\n00:11:08.534 --> 00:11:12.991\nthen it ends right there at that\nsemicolon, and then here's the next path.\n\n191\n00:11:12.991 --> 00:11:14.832\nIt's just not formatted very well.\n\n192\n00:11:14.832 --> 00:11:16.503\n&gt;&gt; So Mike, what's the difference,\n\n193\n00:11:16.503 --> 00:11:20.190\nwhy wouldn't you put just like a regular\nquotation, a double quote for that?\n\n194\n00:11:20.190 --> 00:11:23.056\n&gt;&gt; In this case, I think I could\nget away with a double quote,\n\n195\n00:11:23.056 --> 00:11:24.527\nit wouldn't hurt anything.\n\n196\n00:11:24.527 --> 00:11:27.757\n&gt;&gt; In certain strings, they have the\nsingle quote versus the double quote, and\n\n197\n00:11:27.757 --> 00:11:29.808\nI didn't know if there\nwas really a difference.\n\n198\n00:11:29.808 --> 00:11:32.072\n&gt;&gt; Yeah, I want to say with PowerShell,\nyou can go either way.\n\n199\n00:11:32.072 --> 00:11:35.393\nDouble quotes are typically for\nstrings, but\n\n200\n00:11:35.393 --> 00:11:39.922\nsingle quotes seems to be way\nPowerShell likes to deal with it.\n\n201\n00:11:39.922 --> 00:11:43.445\nAnd the only time we use double\nquotes is if I have a situation\n\n202\n00:11:43.445 --> 00:11:46.138\nwhere I've gotta put quotes inside quotes.\n\n203\n00:11:46.138 --> 00:11:48.863\nAnd so, we'll put single quotes inside and\n\n204\n00:11:48.863 --> 00:11:53.513\nthen double quotes around the whole thing,\nif within there I need quotes.\n\n205\n00:11:53.513 --> 00:11:56.481\nSo, it does get a little\nconfusing with that.\n\n206\n00:11:56.481 --> 00:12:00.116\nIn my case, either one should work,\nit works just fine, so\n\n207\n00:12:00.116 --> 00:12:02.828\nsometimes it's something you have to try.\n\n208\n00:12:02.828 --> 00:12:04.728\nSometimes you have to escape your quotes,\n\n209\n00:12:04.728 --> 00:12:06.800\nbecause you don't want\nit to see it as a quote.\n\n210\n00:12:06.800 --> 00:12:10.989\nIt should be an apostrophe S right,\nnot a quote S, or something like that, so\n\n211\n00:12:10.989 --> 00:12:14.092\nthere are times when you have\nto kind of manipulate that.\n\n212\n00:12:14.092 --> 00:12:16.003\nBut here I just ran the same command.\n\n213\n00:12:16.003 --> 00:12:20.683\nAnd I just split it on the semicolon so\nnow I can see all four paths individually\n\n214\n00:12:20.683 --> 00:12:23.420\nrather than the output,\nlike it did up here.\n\n215\n00:12:23.420 --> 00:12:28.101\nAnd so similar to what we had with our\nprofiles, same thing with modules.\n\n216\n00:12:28.101 --> 00:12:32.671\nNotice there's a path that's in My\nDocuments and then Windows PowerShell, and\n\n217\n00:12:32.671 --> 00:12:33.554\nthen modules.\n\n218\n00:12:33.554 --> 00:12:37.469\nSame place that my user\nspecific profiles were stored,\n\n219\n00:12:37.469 --> 00:12:41.819\nexcept not modules,\nit was just in this Windows PowerShell.\n\n220\n00:12:41.819 --> 00:12:46.381\nThere's also one under Program Files,\nthere's one in the install directory for\n\n221\n00:12:46.381 --> 00:12:47.581\nPowerShell itself.\n\n222\n00:12:47.581 --> 00:12:51.150\nAnd there's actually one for\nMicrosoft Message Analyzer, and\n\n223\n00:12:51.150 --> 00:12:54.928\nthat's because I've installed\nthe Microsoft Message Analyzer.\n\n224\n00:12:54.928 --> 00:12:57.886\nIt has a PowerShell module\nthat goes with it, and\n\n225\n00:12:57.886 --> 00:13:00.999\nit added to my environment\nvariable its location.\n\n226\n00:13:00.999 --> 00:13:03.269\nSo that PowerShell can\nautomatically search there.\n\n227\n00:13:03.269 --> 00:13:06.814\nSo as you add other applications,\nyou might find other paths.\n\n228\n00:13:06.814 --> 00:13:11.584\nBut by default, you will have,\nyou should have at least those\n\n229\n00:13:11.584 --> 00:13:16.372\nthree paths on your system if you\ntry to run that same command.\n\n230\n00:13:16.372 --> 00:13:17.705\nSo that's where I want to put the modules.\n\n231\n00:13:17.705 --> 00:13:20.594\nThat's where PowerShell knows to look for\nthe modules, so\n\n232\n00:13:20.594 --> 00:13:22.228\nthat's where I want to put them.\n\n233\n00:13:22.228 --> 00:13:24.006\nNow, which one do I put them in?\n\n234\n00:13:24.006 --> 00:13:26.455\nWell, that's kind of up to you, but\n\n235\n00:13:26.455 --> 00:13:29.938\nI will tell you that these\ntwo are system locations.\n\n236\n00:13:29.938 --> 00:13:33.654\nAnd one of the issues you will\nrun into with system locations,\n\n237\n00:13:33.654 --> 00:13:37.526\nif I can successfully highlight those,\nis write permissions.\n\n238\n00:13:37.526 --> 00:13:41.909\nAnd it becomes a hassle sometimes\nwriting to those locations,\n\n239\n00:13:41.909 --> 00:13:44.482\ncreating new directories so I find.\n\n240\n00:13:44.482 --> 00:13:49.975\nAnd to me, etiquette wise,\nit makes more sense to leave, this is for\n\n241\n00:13:49.975 --> 00:13:54.931\nthe active directory,\nmodules that Microsoft has written.\n\n242\n00:13:54.931 --> 00:13:56.779\nAnd maybe some third party\nvendors have written.\n\n243\n00:13:56.779 --> 00:14:01.794\nPS read line and things like that,\nthis is where I should put my user\n\n244\n00:14:01.794 --> 00:14:06.739\nspecific modules, but,\nif I have a module that I want to load up.\n\n245\n00:14:06.739 --> 00:14:11.599\nBut if Cherokee logs on to this machine,\nand I don't want her to have access to it.\n\n246\n00:14:11.599 --> 00:14:14.691\nIf I put it in My Documents,\nshe will not have access to it.\n\n247\n00:14:14.691 --> 00:14:18.297\nSo, there are times when I do\nwant to put things in the System\n\n248\n00:14:18.297 --> 00:14:20.403\n32 Windows PowerShell folder.\n\n249\n00:14:20.403 --> 00:14:23.524\nBut normally, if it's just me,\nI'm gonna put them in my\n\n250\n00:14:23.524 --> 00:14:27.569\nusers/michael/documents/WindowsPowerShell-\nModules directory.\n\n251\n00:14:27.569 --> 00:14:32.519\nSo that is where I want\nto put my new module.\n\n252\n00:14:32.519 --> 00:14:38.459\nNow the module is simply,\nthis is where it gets really complex,\n\n253\n00:14:38.459 --> 00:14:45.503\nwe're gonna take that .ps1 file and\nwe are going to rename it to a .psm1.\n\n254\n00:14:45.503 --> 00:14:46.443\n&gt;&gt; Okay.\n\n255\n00:14:46.443 --> 00:14:46.992\n&gt;&gt; And that's it.\n\n256\n00:14:46.992 --> 00:14:48.587\n&gt;&gt; I'm following, okay,\nall right, I thought.\n\n257\n00:14:48.587 --> 00:14:52.580\n&gt;&gt; [LAUGH] That was it, it's really\nnot that bad to create a module.\n\n258\n00:14:52.580 --> 00:14:55.038\nNow there's a little bit more\nto it than that, I tease.\n\n259\n00:14:55.038 --> 00:15:00.672\nBut for the most part,\nwe changed the extension from a .ps1,\n\n260\n00:15:00.672 --> 00:15:08.242\nwhich is our script file, to a .psm1,\nwhich is a PowerShell module file, right?\n\n261\n00:15:08.242 --> 00:15:12.339\nThat is what we're going to do,\nso we'll change the extension,\n\n262\n00:15:12.339 --> 00:15:13.986\ncreate a module out of it.\n\n263\n00:15:13.986 --> 00:15:18.965\nWe're also going to put it in a folder,\nwithin this module's directory,\n\n264\n00:15:18.965 --> 00:15:21.664\neach module should be in its own folder.\n\n265\n00:15:21.664 --> 00:15:25.445\nAnd that's because sometimes modules\nhave supporting files and config files.\n\n266\n00:15:25.445 --> 00:15:28.711\nAnd we keep them organized in sub folders,\nand\n\n267\n00:15:28.711 --> 00:15:32.330\nthe folder that you put it\nin should share the name.\n\n268\n00:15:32.330 --> 00:15:35.968\nSo whatever your .psm1 file is,\nthe folder should be named that as well,\n\n269\n00:15:35.968 --> 00:15:37.601\nwithout the extension, right?\n\n270\n00:15:37.601 --> 00:15:41.765\nBut if I've got a module\ncalled MyFunctions.psm1,\n\n271\n00:15:41.765 --> 00:15:44.944\nthen my folder should be, MyFunctions.\n\n272\n00:15:44.944 --> 00:15:46.011\n&gt;&gt; Okay.\n&gt;&gt; Make sense?\n\n273\n00:15:46.011 --> 00:15:46.655\n&gt;&gt; Yes.\n&gt;&gt; So\n\n274\n00:15:46.655 --> 00:15:49.812\nname the folder the same as the module.\n\n275\n00:15:49.812 --> 00:15:53.366\nAll right, let's see what we can do,\n\n276\n00:15:53.366 --> 00:15:59.096\nif we tried to change over to that,\nlet's do a This guy here.\n\n277\n00:15:59.096 --> 00:16:05.370\nAnd do a DIR.\n\n278\n00:16:05.370 --> 00:16:06.970\nI did already create that directory,\ndidn't I?\n\n279\n00:16:06.970 --> 00:16:09.900\nI was going to show you how\nto create that folder, but\n\n280\n00:16:09.900 --> 00:16:11.730\nI think I did it when I\nwas testing things out.\n\n281\n00:16:11.730 --> 00:16:12.859\nShould I delete it and show you guys?\n\n282\n00:16:14.110 --> 00:16:16.618\n&gt;&gt; Yes.\n&gt;&gt; Yeah, I probably should.\n\n283\n00:16:16.618 --> 00:16:18.060\nAll right, let's get rid of.\n\n284\n00:16:18.060 --> 00:16:20.500\n&gt;&gt; Now, Mike,\nearlier you mentioned that modules,\n\n285\n00:16:20.500 --> 00:16:23.110\none of the benefits of using\nthem would be portability.\n\n286\n00:16:23.110 --> 00:16:25.710\nSo I'm just trying to wrap\nmy brain around this here.\n\n287\n00:16:25.710 --> 00:16:28.310\nWhat makes them more portable\nthan something else?\n\n288\n00:16:28.310 --> 00:16:34.190\n&gt;&gt; Because if I had a module full of\na bunch of cool scripts or functions,\n\n289\n00:16:34.190 --> 00:16:39.230\nand you said, man, I'd like to have those,\nI simply take that folder and\n\n290\n00:16:39.230 --> 00:16:43.550\ngive it to you, put it in a shared\ne-mail to you, what have you.\n\n291\n00:16:43.550 --> 00:16:47.890\nYou put that folder with the PSM\n1 file into your modules folder,\n\n292\n00:16:47.890 --> 00:16:49.590\nnow you ahve all that.\n\n293\n00:16:49.590 --> 00:16:52.038\nIt makes it very easy to share.\n\n294\n00:16:52.038 --> 00:16:53.846\nNow, could I share the script file?\n\n295\n00:16:53.846 --> 00:16:55.521\n&gt;&gt; Yeah, that's what I was wondering.\n\n296\n00:16:55.521 --> 00:16:57.922\n&gt;&gt; Absolutely.\n&gt;&gt; Okay, just making sure I understood.\n\n297\n00:16:57.922 --> 00:17:02.260\n&gt;&gt; All right, but\na module has other stuff that it can do.\n\n298\n00:17:02.260 --> 00:17:06.744\nLike the fact that it auto imports\nif you use a command out of it.\n\n299\n00:17:06.744 --> 00:17:08.460\nHas a manifest that goes with it.\n\n300\n00:17:08.460 --> 00:17:09.491\nA lot of metadata.\n\n301\n00:17:09.491 --> 00:17:13.230\nSo it is the more\nprofessional way to do it.\n\n302\n00:17:13.230 --> 00:17:14.380\n&gt;&gt; Okay.\n&gt;&gt; I guess.\n\n303\n00:17:14.380 --> 00:17:16.060\nWhen we're talking about\nsharing code like that.\n\n304\n00:17:17.270 --> 00:17:18.715\nAll right, let's see.\n\n305\n00:17:18.715 --> 00:17:21.155\nSo now-\n&gt;&gt; We're all about professionalism here\n\n306\n00:17:21.155 --> 00:17:22.407\n[LAUGH].\n\n307\n00:17:22.407 --> 00:17:23.424\n&gt;&gt; I know.\n\n308\n00:17:23.424 --> 00:17:26.460\nLet me see, did I delete that directory?\n\n309\n00:17:26.460 --> 00:17:28.791\nSo if we try to change\nover to that directory,\n\n310\n00:17:28.791 --> 00:17:31.040\nyeah, now it can no longer find that.\n\n311\n00:17:31.040 --> 00:17:32.130\nSo I removed that.\n\n312\n00:17:32.130 --> 00:17:35.210\nThis is what you would normally see\nif you haven't done this before.\n\n313\n00:17:35.210 --> 00:17:39.210\nYou try to go to that directory and\nit's not there.\n\n314\n00:17:39.210 --> 00:17:40.926\nAll right, so we need to make that.\n\n315\n00:17:40.926 --> 00:17:43.343\nSo let's do New-Item.\n\n316\n00:17:43.343 --> 00:17:46.530\nWe could go to Windows Explorer, but\nhey, this is a PowerShell class, right?\n\n317\n00:17:46.530 --> 00:17:48.830\nYou want to make a directory\nfrom PowerShell?\n\n318\n00:17:48.830 --> 00:17:49.440\n&gt;&gt; Yeah.\n\n319\n00:17:49.440 --> 00:17:51.350\n&gt;&gt; Okay.\nNew-item.\n\n320\n00:17:51.350 --> 00:17:53.920\n&gt;&gt; Maybe that will be like the goal for\nthe rest of the show.\n\n321\n00:17:53.920 --> 00:17:54.830\n&gt;&gt; Yeah.\n&gt;&gt; No GUI.\n\n322\n00:17:54.830 --> 00:17:56.120\n&gt;&gt; No GUI.\n\n323\n00:17:56.120 --> 00:17:57.120\nPressure's on now.\n\n324\n00:17:58.120 --> 00:18:01.200\nType, remember we did this when\nwe were making our new profile?\n\n325\n00:18:01.200 --> 00:18:03.295\nWe said hey, there's no profile,\nwe need to make one.\n\n326\n00:18:03.295 --> 00:18:07.690\nExcept this time, type is going\nto be directory instead of file.\n\n327\n00:18:07.690 --> 00:18:09.720\nAnd then dash path.\n\n328\n00:18:09.720 --> 00:18:11.050\nWhoops.\n\n329\n00:18:11.050 --> 00:18:12.366\nDash path.\n\n330\n00:18:12.366 --> 00:18:17.890\nI could actually do a dollar sign e-n-v.\n\n331\n00:18:17.890 --> 00:18:20.260\nOops, that's not a dollar sign.\n\n332\n00:18:20.260 --> 00:18:25.357\nDollar sign e-n-v colon ps module path.\n\n333\n00:18:25.357 --> 00:18:27.498\nActually, I would have to\ninclude all those paths.\n\n334\n00:18:27.498 --> 00:18:32.110\nI don't wanna do that.\nSo we'll do pash, I just can't talk.\n\n335\n00:18:32.110 --> 00:18:36.710\n&gt;&gt; That's interesting, it's like talking\nto yourself, but here in PowerShell,\n\n336\n00:18:36.710 --> 00:18:38.730\nyou're thinking about it,\nyou're talking out loud.\n\n337\n00:18:38.730 --> 00:18:40.450\nI'm like okay, where's he going with this?\n\n338\n00:18:40.450 --> 00:18:41.973\n&gt;&gt; Right.\n&gt;&gt; Cuz I do it, too.\n\n339\n00:18:41.973 --> 00:18:45.629\nI talk to myself and I always wonder,\nthe people sitting around me,\n\n340\n00:18:45.629 --> 00:18:47.046\nwhat are they thinking?\n\n341\n00:18:47.046 --> 00:18:47.703\n&gt;&gt; She's insane, yeah.\n\n342\n00:18:47.703 --> 00:18:48.880\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH]\n\n343\n00:18:48.880 --> 00:18:50.650\n&gt;&gt; All right, so new item,\n\n344\n00:18:50.650 --> 00:18:57.875\nType Directory- Path\nC:\\users\\Micheal\\Documents\\WindowsPowerSh-\n\n345\n00:18:57.875 --> 00:18:59.560\nell\\Modules.\n\n346\n00:18:59.560 --> 00:19:03.590\nNow, if I do this, what's gonna happen?\n\n347\n00:19:03.590 --> 00:19:06.560\nIt's gonna create that for me, all right?\n\n348\n00:19:06.560 --> 00:19:07.230\nSo there we go.\n\n349\n00:19:07.230 --> 00:19:10.850\nI was actually expecting a failure\npossibly there, but there we go.\n\n350\n00:19:10.850 --> 00:19:12.550\nI created that directory called module.\n\n351\n00:19:12.550 --> 00:19:15.915\nSo now, I should be able to\nchange directories into that.\n\n352\n00:19:15.915 --> 00:19:20.494\nAnd if I do an LS,\nthere's nothing in there, right?\n\n353\n00:19:20.494 --> 00:19:23.712\nOr if I do my DIR, there's nothing in\nthere yet because we just created it.\n\n354\n00:19:23.712 --> 00:19:27.565\nBut there you go, that's how you create\na directory, a type directory, and\n\n355\n00:19:27.565 --> 00:19:29.000\nthen path from PowerShell.\n\n356\n00:19:29.000 --> 00:19:33.450\nAll right, so\nnow we've got a place to put our modules.\n\n357\n00:19:34.580 --> 00:19:39.301\nNow we need to create a folder,\nand we're gonna choose.\n\n358\n00:19:39.301 --> 00:19:44.080\nI mean, you guys, if you really wanted\nme to, we could make the folder and\n\n359\n00:19:44.080 --> 00:19:47.014\nthen we'd use our move\nitem command to move that.\n\n360\n00:19:47.014 --> 00:19:50.045\nBut it's going to take me a long time\nto type all of those paths out, so\n\n361\n00:19:50.045 --> 00:19:53.460\nI am going to cheat and I am going to\nuse the GUI just a little bit here.\n\n362\n00:19:53.460 --> 00:19:58.230\nSo, once we get that module's\ndirectory created in there,\n\n363\n00:19:58.230 --> 00:20:05.140\nI said we want to create a directory for\neach one of our modules.\n\n364\n00:20:05.140 --> 00:20:10.400\nAnd I want to name it\nthe same as the module.\n\n365\n00:20:12.410 --> 00:20:14.340\nMy functions I think is what I called it.\n\n366\n00:20:14.340 --> 00:20:16.800\nSo we'll call it my functions.\n\n367\n00:20:16.800 --> 00:20:21.540\nThen I'm gonna go back out to scripts and\n\n368\n00:20:21.540 --> 00:20:27.800\ngrab my functions and copy and\npaste that guy in here.\n\n369\n00:20:31.436 --> 00:20:36.182\nAll right, so inside my functions\nis a file called my functions.\n\n370\n00:20:36.182 --> 00:20:42.470\nAll right, next we are going to\nchange the extension on here, right?\n\n371\n00:20:42.470 --> 00:20:48.900\nInstead of PS1, it should be a PSM1,\na PowerShell Module.\n\n372\n00:20:48.900 --> 00:20:50.030\nI should do this.\n\n373\n00:20:52.490 --> 00:20:54.178\nLet's just leave it as a PS1 for now.\n\n374\n00:20:54.178 --> 00:20:56.550\nLets see what happens,\ncuz this is interesting.\n\n375\n00:20:56.550 --> 00:20:57.240\n&gt;&gt; Okay.\n&gt;&gt; All right, so\n\n376\n00:20:57.240 --> 00:21:01.179\nin modules I've got my my functions,\nand I've got my myfunctions.ps1.\n\n377\n00:21:01.179 --> 00:21:03.600\nAll right, I'm gonna relaunch PowerShell.\n\n378\n00:21:07.028 --> 00:21:11.816\nWait for\nmy monster profile to load up, and\n\n379\n00:21:11.816 --> 00:21:16.080\nthen we are going to do a get-module.\n\n380\n00:21:16.080 --> 00:21:19.010\nAnd we do not see my functions.\n\n381\n00:21:19.010 --> 00:21:23.278\n&gt;&gt; Well, what if you were to try to pull\nsomething from that module and run it?\n\n382\n00:21:23.278 --> 00:21:24.633\n&gt;&gt; Let's try.\n\n383\n00:21:24.633 --> 00:21:26.130\nEdit-file.\n\n384\n00:21:26.130 --> 00:21:28.790\nAnd I got a whole lot of nothing, right?\n\n385\n00:21:28.790 --> 00:21:31.060\nNo tab autofill, it's not working.\n\n386\n00:21:31.060 --> 00:21:34.940\nSo it's definitely not going through\nthere and finding the command and\n\n387\n00:21:34.940 --> 00:21:37.930\ngoing you must want this,\nlet me load it up.\n\n388\n00:21:37.930 --> 00:21:39.035\nSee if we can figure out why.\n\n389\n00:21:39.035 --> 00:21:43.880\nLet's do get dash module,\ndash list available.\n\n390\n00:21:48.079 --> 00:21:54.557\nAll right, and\nit doesn't show up under here either.\n\n391\n00:21:54.557 --> 00:21:59.790\nAll right, so it's not gonna show up\nautomatically in that list either.\n\n392\n00:22:00.990 --> 00:22:04.070\nAnd that's because it's not a module,\nit's a script, right?\n\n393\n00:22:04.070 --> 00:22:07.090\nEven though it's in that directory,\nit doesn't have the right extension,\n\n394\n00:22:07.090 --> 00:22:09.142\nit doesn't see it as module,\nit sees it as a script.\n\n395\n00:22:09.142 --> 00:22:11.420\nAnd we did get module, not get script.\n\n396\n00:22:11.420 --> 00:22:13.540\nDon't even think there\nis a get script command.\n\n397\n00:22:13.540 --> 00:22:16.879\nSo, definitely not gonna work like that.\n\n398\n00:22:16.879 --> 00:22:19.590\nBut we can import it.\n\n399\n00:22:19.590 --> 00:22:22.300\nLet's do import-module.\n\n400\n00:22:22.300 --> 00:22:29.152\nAnd then my,\nI'm not in the right directory, am I.\n\n401\n00:22:29.152 --> 00:22:30.941\nNo.\nLet's see.\n\n402\n00:22:30.941 --> 00:22:33.522\nImport-module.\n\n403\n00:22:35.667 --> 00:22:38.876\nMyFunctions.ps1.\n\n404\n00:22:38.876 --> 00:22:41.430\nAnd notice I did not get an error.\n\n405\n00:22:41.430 --> 00:22:42.650\nI did change directories, so\n\n406\n00:22:42.650 --> 00:22:45.820\nI was in the right directory instead\nof having to type out the whole path.\n\n407\n00:22:45.820 --> 00:22:50.093\nYou saw me change directories into my,\nremember that's my alias for\n\n408\n00:22:50.093 --> 00:22:52.900\nchange directories to my script directory.\n\n409\n00:22:52.900 --> 00:22:56.107\n&gt;&gt; So that's kind of nice, you're\ntelling PowerShell it's a module and\n\n410\n00:22:56.107 --> 00:22:59.750\nit's accepting you for what you say,\nI'm not trying to argue with you, right?\n\n411\n00:22:59.750 --> 00:23:03.093\nIt's like sure, Mike, you know what\nyou're talking about, here you go.\n\n412\n00:23:03.093 --> 00:23:04.830\n&gt;&gt; Well, in the end there's\nnot much difference, right?\n\n413\n00:23:04.830 --> 00:23:07.730\nThe extension is different, but\nI'm not gonna change any of the content so\n\n414\n00:23:07.730 --> 00:23:11.370\nit says okay, it's called PS1 but\nyou're telling me it's a module.\n\n415\n00:23:11.370 --> 00:23:15.396\nIt reads like a module, I don't see any\nproblem with using it like a module, so\n\n416\n00:23:15.396 --> 00:23:18.700\nPowerShell says okay, we'll do it,\nwe'll go ahead and do it.\n\n417\n00:23:18.700 --> 00:23:22.470\nAll right, so now,\nlet's see if I got that edit -file.\n\n418\n00:23:22.470 --> 00:23:24.382\nAnd notice it tab autofilled.\n\n419\n00:23:24.382 --> 00:23:29.078\nAnd if I do profile.ps1, or\nsomething that's in that folder, right,\n\n420\n00:23:29.078 --> 00:23:30.510\nit's working.\n\n421\n00:23:30.510 --> 00:23:34.854\nSo by importing module name of the script,\n\n422\n00:23:34.854 --> 00:23:38.362\nit definitely works, all right?\n\n423\n00:23:38.362 --> 00:23:42.743\nIf we do a get-module, we should see it.\n\n424\n00:23:42.743 --> 00:23:46.036\nAnd there it is, all right?\n\n425\n00:23:46.036 --> 00:23:51.620\nBut it looks a little different\nfrom everybody else, right?\n\n426\n00:23:51.620 --> 00:23:53.980\nIt looks like Readline, but\nReadline has a version number.\n\n427\n00:23:53.980 --> 00:23:54.631\n&gt;&gt; There's no version history.\n\n428\n00:23:54.631 --> 00:23:55.963\n&gt;&gt; There's no version.\n\n429\n00:23:55.963 --> 00:23:56.989\n&gt;&gt; Or information, I should say.\n\n430\n00:23:56.989 --> 00:23:59.697\n&gt;&gt; It's not called a Manifest,\nit's called Script, right?\n\n431\n00:23:59.697 --> 00:24:00.976\n&gt;&gt; And there's no Exported commands.\n\n432\n00:24:00.976 --> 00:24:07.611\n&gt;&gt; No exported commands, so\nit's almost a module at this point.\n\n433\n00:24:07.611 --> 00:24:10.195\nAnd this might be as\nfar as you need to go.\n\n434\n00:24:10.195 --> 00:24:14.144\nAgain, we saw that I can store\nthe script just as a PS1 file,\n\n435\n00:24:14.144 --> 00:24:18.027\nin a random folder on my computer,\nlike I do, C:scripts.\n\n436\n00:24:18.027 --> 00:24:22.164\nAnd I can import it anytime I wanna\nuse it I just, import, I'm sorry,\n\n437\n00:24:22.164 --> 00:24:24.570\nimported, I just .source the script.\n\n438\n00:24:24.570 --> 00:24:25.382\nAnd I was able to use it.\n\n439\n00:24:25.382 --> 00:24:27.100\nSo that's method one.\n\n440\n00:24:27.100 --> 00:24:31.438\nIs save your PS one file somewhere\non your computer and then .source it\n\n441\n00:24:31.438 --> 00:24:35.791\nevery time you wanna use it, but\nyou have to do that for every session.\n\n442\n00:24:35.791 --> 00:24:40.111\nMethod two that we've seen so far, is to\ngo ahead and treat it like a module even\n\n443\n00:24:40.111 --> 00:24:44.180\nthough it's still a script at this point,\ntreat it like a module.\n\n444\n00:24:44.180 --> 00:24:47.575\nPut it in one of the default locations for\nmodules for PowerShell.\n\n445\n00:24:47.575 --> 00:24:52.340\nMake its own folder that's got\nthe same name as the file.\n\n446\n00:24:52.340 --> 00:24:56.184\nIn this case, my functions, and\nthen I can treat it just like a module.\n\n447\n00:24:56.184 --> 00:24:59.400\nI can go and\nimport it just like it was a module.\n\n448\n00:24:59.400 --> 00:25:02.513\nI will see it in the list\nof modules that I import.\n\n449\n00:25:02.513 --> 00:25:04.940\nAnd I definitely have access to it.\n\n450\n00:25:04.940 --> 00:25:06.809\nWe saw me run the edit file, but again,\n\n451\n00:25:06.809 --> 00:25:10.048\nit's going to be another one of\nthose persistence things, right?\n\n452\n00:25:10.048 --> 00:25:15.304\nIf I close PowerShell,\nopen PowerShell up and\n\n453\n00:25:15.304 --> 00:25:21.300\nI try to do edit-file,\nit's not going to work.\n\n454\n00:25:21.300 --> 00:25:21.836\nIt didn't search.\n\n455\n00:25:21.836 --> 00:25:25.566\nEven though it's in the location that we\nknow PowerShell's going to look to see if\n\n456\n00:25:25.566 --> 00:25:28.773\nthere's a module that contains\nthose commands, it's not working.\n\n457\n00:25:28.773 --> 00:25:30.810\n&gt;&gt; We don't have 100% functionality there.\n\n458\n00:25:30.810 --> 00:25:33.767\n&gt;&gt; Exactly, and\nthis is what I was trying to say earlier,\n\n459\n00:25:33.767 --> 00:25:36.466\nusing it as a script instead\nof module is fine, but\n\n460\n00:25:36.466 --> 00:25:40.475\nmodules do give me a little extra\nfunctionality, this being one of them.\n\n461\n00:25:40.475 --> 00:25:43.715\nBut I can definitely import it again.\n\n462\n00:25:43.715 --> 00:25:49.681\nImport-module, that's\nway too much tabbing.\n\n463\n00:25:49.681 --> 00:25:52.231\nAll right, do I change directories yet?\n\n464\n00:25:52.231 --> 00:25:59.014\n.\\Myfunctions, all right and\nnow I have access to edit-file and\n\n465\n00:25:59.014 --> 00:26:03.780\nwe could do profile or\nwhatever the case may be.\n\n466\n00:26:08.101 --> 00:26:09.910\nRight and it's gonna work just fine.\n\n467\n00:26:09.910 --> 00:26:14.169\nSo method two,\nmake it a pseudo-module, if you will.\n\n468\n00:26:14.169 --> 00:26:17.630\nIt's still a script file, but I put it in\na folder, I put it in a modules directory.\n\n469\n00:26:17.630 --> 00:26:21.267\nAnd I can almost treat it like a module,\nI can import it when I need it.\n\n470\n00:26:21.267 --> 00:26:25.010\nBut it doesn't search\nautomatically like we'd like it to.\n\n471\n00:26:25.010 --> 00:26:29.527\nSo when we come back we're\ngonna go the final step and\n\n472\n00:26:29.527 --> 00:26:35.392\nturn it into a module and\nthen we'll have our first fledged module.\n\n473\n00:26:35.392 --> 00:26:36.376\n&gt;&gt; Awe, so cute.\n\n474\n00:26:36.376 --> 00:26:39.765\nWe'll send out the invitations and\nwe'll invite all the family.\n\n475\n00:26:39.765 --> 00:26:41.098\n[LAUGH] Our little\nfunctions are growing up.\n\n476\n00:26:41.098 --> 00:26:43.157\n[LAUGH]\n&gt;&gt; They're getting so old.\n\n477\n00:26:43.157 --> 00:26:43.947\nRight before your eyes.\n\n478\n00:26:43.947 --> 00:26:46.509\n[LAUGH]\n&gt;&gt; All right, thank you Mike and\n\n479\n00:26:46.509 --> 00:26:48.126\nthank you for joining us as well.\n\n480\n00:26:48.126 --> 00:26:50.600\nBut we are out of time for\nthis show, so I'll sign out.\n\n481\n00:26:50.600 --> 00:26:51.870\nI've been your host, Cherokee Boose.\n\n482\n00:26:51.870 --> 00:26:52.619\n&gt;&gt; And I'm Mike Rodrick.\n\n483\n00:26:52.619 --> 00:26:56.046\n&gt;&gt; See you next time here at ITPro.TV.\n\n484\n00:26:56.046 --> 00:27:02.211\n[MUSIC]\n\n485\n00:27:02.211 --> 00:27:08.429\n&gt;&gt; Thank you for watching ITPro.TV.\n\n",
          "vimeoId": "238607093"
        },
        {
          "description": "In this episode, Mike and Cherokee discuss the concept of modules in PowerShell. They look at the default locations where modules are stored, and the components that make up a module.",
          "length": "1671",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-2-module_basics_pt_2-101317-PGM.00_29_30_06.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-2-module_basics_pt_2-101317-PGM.00_29_30_06.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-powershell/techskills-powershell-1-9-2-module_basics_pt_2-101317-PGM.00_29_30_06.Still001-sm.jpg",
          "title": "Module Basics Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.214 --> 00:00:02.728\nWelcome to ITProTV,\nI'm your host, Don Pezet.\n\n2\n00:00:02.728 --> 00:00:07.257\n&gt;&gt; [CROSSTALK]\n\n3\n00:00:07.257 --> 00:00:08.387\n[MUSIC]\n\n4\n00:00:08.387 --> 00:00:12.059\n&gt;&gt; You're watching ITProTV.\n\n5\n00:00:12.059 --> 00:00:14.596\n&gt;&gt; Welcome, ladies and\ngentlemen to your PowerShell show.\n\n6\n00:00:14.596 --> 00:00:16.480\nI'm your host, Cherokee Boose.\n\n7\n00:00:16.480 --> 00:00:20.810\nThis is a part two, a continuation,\nwhere we're looking at module basics.\n\n8\n00:00:20.810 --> 00:00:23.940\nAnd with us today back in studios,\nwe have Mr Mike Rodrick.\n\n9\n00:00:23.940 --> 00:00:25.010\nHow's it going today, Mike?\n\n10\n00:00:25.010 --> 00:00:25.880\n&gt;&gt; It's going great, Cherokee.\n\n11\n00:00:25.880 --> 00:00:28.530\nThanks for having me back,\nexcited to be here as always.\n\n12\n00:00:28.530 --> 00:00:31.120\nAnd yeah, part two with good old modules.\n\n13\n00:00:31.120 --> 00:00:32.010\n&gt;&gt; I know, I'm glad you're back.\n\n14\n00:00:32.010 --> 00:00:32.810\nI don't think I could-\n&gt;&gt; [LAUGH]\n\n15\n00:00:32.810 --> 00:00:34.029\n&gt;&gt; Show us how to do this here,\n\n16\n00:00:34.029 --> 00:00:35.415\nbecause I'm not really sure.\n\n17\n00:00:35.415 --> 00:00:37.490\n[LAUGH]\n&gt;&gt; Well, let's hope I can show you.\n\n18\n00:00:37.490 --> 00:00:39.780\nWe're gonna give it a try anyway.\n\n19\n00:00:39.780 --> 00:00:43.360\nSo, in our previous episode, we looked\nat the beginnings of creating a module.\n\n20\n00:00:43.360 --> 00:00:46.828\nWe really, we took a script, right?\n\n21\n00:00:46.828 --> 00:00:50.380\nIn an episode before that,\nwe're learning how to write functions.\n\n22\n00:00:50.380 --> 00:00:55.250\nAnd we were using ISE, and we were\nputting all those functions in a file.\n\n23\n00:00:55.250 --> 00:00:59.830\nAnd then we name that file .ps1 and\nsaved it, and that's a PowerShell script.\n\n24\n00:00:59.830 --> 00:01:02.930\nNow, granted, it's not a script that\nI just run and it does something.\n\n25\n00:01:02.930 --> 00:01:06.934\nWhen you guys think of scripts, you're\nthinking, it's a script that's gonna go\n\n26\n00:01:06.934 --> 00:01:09.763\nout and ping all computers, or\nmap, or something like that.\n\n27\n00:01:09.763 --> 00:01:12.270\nIt's a script cuz it's a .ps1 file.\n\n28\n00:01:13.920 --> 00:01:17.562\nBut we had that with all those\nfunctions in it, and we saw how we get\n\n29\n00:01:17.562 --> 00:01:23.050\n.source.script file, load it up,\nalmost like we would import a module.\n\n30\n00:01:23.050 --> 00:01:26.400\nAnd then, all of a sudden, all of\nthose functions became available, but\n\n31\n00:01:26.400 --> 00:01:27.530\nit was only for that session.\n\n32\n00:01:27.530 --> 00:01:30.220\nAnd it was not persistent and\nit was only for that host.\n\n33\n00:01:30.220 --> 00:01:32.665\nIf we had gone to a different host,\nthose commands or\n\n34\n00:01:32.665 --> 00:01:34.677\nthose functions wouldn't be available.\n\n35\n00:01:34.677 --> 00:01:37.656\nSo that was that .sourcing\nof a script file.\n\n36\n00:01:37.656 --> 00:01:42.513\nIt could have been stored anywhere\non my computer that PowerShell has\n\n37\n00:01:42.513 --> 00:01:43.694\nread access to.\n\n38\n00:01:43.694 --> 00:01:46.250\nAnd I could .source it and\nuse it that way.\n\n39\n00:01:46.250 --> 00:01:49.110\nThen we took that same file, and\n\n40\n00:01:49.110 --> 00:01:53.400\nwe went to one of the default locations\nthat PowerShell looks for modules.\n\n41\n00:01:53.400 --> 00:01:55.790\nIn this case,\nwe use the user specific one,\n\n42\n00:01:55.790 --> 00:02:00.020\nC colon Users Michael Documents\nWindowsPowershell Modules, right?\n\n43\n00:02:00.020 --> 00:02:02.338\nWe created that directory\nbecause it didn't exists.\n\n44\n00:02:02.338 --> 00:02:07.189\nAnd then we created a folder inside that\nmodule's directory and we gave it a name,\n\n45\n00:02:07.189 --> 00:02:09.528\nthe same as the file name for my script.\n\n46\n00:02:09.528 --> 00:02:11.993\nIt was called myfunctions.ps1, so\n\n47\n00:02:11.993 --> 00:02:15.464\nwe made a folder called my\nfunctions inside modules.\n\n48\n00:02:15.464 --> 00:02:20.734\nThen when we went and we looked inside\nPowerShell, it didn't see it as a module,\n\n49\n00:02:20.734 --> 00:02:25.810\nbut I was able to, what did we\nend up doing with that, I forgot?\n\n50\n00:02:25.810 --> 00:02:26.840\nWe imported it, right, yeah.\n\n51\n00:02:28.060 --> 00:02:29.170\n&gt;&gt; You're looking at me.\n\n52\n00:02:29.170 --> 00:02:29.800\n&gt;&gt; [LAUGH]\n&gt;&gt; What we did,\n\n53\n00:02:29.800 --> 00:02:35.780\nwe just kept it within an extension, and\nthen we specified that it was a module.\n\n54\n00:02:35.780 --> 00:02:39.800\nBut then we just left it with that path,\nand we were able to pull it in, and\n\n55\n00:02:39.800 --> 00:02:43.106\nit used it as a module,\nalthough technically, wasn't one.\n\n56\n00:02:43.106 --> 00:02:43.905\n&gt;&gt; Exactly right.\n\n57\n00:02:43.905 --> 00:02:45.357\nSo she was paying attention.\n\n58\n00:02:45.357 --> 00:02:47.985\n&gt;&gt; [LAUGH]\n&gt;&gt; We treat it like a module\n\n59\n00:02:47.985 --> 00:02:49.285\neven though it was a .ps1 file.\n\n60\n00:02:49.285 --> 00:02:52.085\nBut now that it's in the module's folder,\ndirectory, and\n\n61\n00:02:52.085 --> 00:02:55.935\nit has its own folder,\nwe're able to use the import-module\n\n62\n00:02:55.935 --> 00:02:59.335\nwhich we couldn't do when it was just a\nscript anywhere in our hard drive, right?\n\n63\n00:02:59.335 --> 00:03:03.260\nWe had to do that .notation or\nthe .sourcing of the script file.\n\n64\n00:03:03.260 --> 00:03:04.860\nOnce we've moved it into\nthe module's folder,\n\n65\n00:03:04.860 --> 00:03:08.490\nwe could use the import module,\nand it did import it.\n\n66\n00:03:08.490 --> 00:03:13.630\nBut again, it's not going to be\npersistent and it didn't show up.\n\n67\n00:03:13.630 --> 00:03:18.641\nLet's double check on that cuz right now,\nif we take a look in\n\n68\n00:03:18.641 --> 00:03:25.423\nDocuments &gt; Windows PowerShell &gt; Modules,\nthere's the folder My Functions,\n\n69\n00:03:25.423 --> 00:03:30.950\ninside is MyFunctions.ps1,\nnotice it's a .ps1 file.\n\n70\n00:03:30.950 --> 00:03:35.520\nAnd if I try to use a command that I know\nis in there, it doesn't automatically find\n\n71\n00:03:35.520 --> 00:03:39.390\nthat module and import it like\nit does other modules, right?\n\n72\n00:03:40.830 --> 00:03:45.120\nIf I do a get-module,\nSMB is not loaded up.\n\n73\n00:03:45.120 --> 00:03:51.740\nBut if I do a new-smbshare or\n\n74\n00:03:51.740 --> 00:03:56.550\nmapping, it'll probably fail [INAUDIBLE]\nyou with the right parameters.\n\n75\n00:03:56.550 --> 00:04:01.480\nBut if I do a get-module,\nit loaded that up.\n\n76\n00:04:02.550 --> 00:04:05.230\nSo that's a cool thing about\nmodules versus scripts,\n\n77\n00:04:05.230 --> 00:04:09.220\nis it'll automatically load those modules\nup if you use a command that's in\n\n78\n00:04:09.220 --> 00:04:12.400\nthe module and it's not already loaded,\nbut it is available.\n\n79\n00:04:12.400 --> 00:04:15.822\nBut ours is a script, so\nit doesn't see it as a module.\n\n80\n00:04:15.822 --> 00:04:18.740\nWe've kinda treated it, but\nit doesn't see it as a module.\n\n81\n00:04:20.050 --> 00:04:21.630\nBut we were able to import it.\n\n82\n00:04:21.630 --> 00:04:26.150\nIf we do import -module, and\nI'm not in the right directory and\n\n83\n00:04:26.150 --> 00:04:29.660\nI won't type out that whole path,\nso let's change over.\n\n84\n00:04:29.660 --> 00:04:32.880\nAnd there is the MyFunctions.ps1.\n\n85\n00:04:32.880 --> 00:04:38.055\nActually, I want to go to\nthe one that's in modules, so\n\n86\n00:04:38.055 --> 00:04:46.778\nlet's do cd C:\\Users\\Michael\\Documents\\\n\n87\n00:04:46.778 --> 00:04:52.070\nWindows PowerShell modules.\n\n88\n00:04:52.070 --> 00:04:57.340\nAll right, inside there,\nI've got that directory, cd \\MyFunctions.\n\n89\n00:04:57.340 --> 00:05:02.355\nInside there, I've got my script, and\n\n90\n00:05:02.355 --> 00:05:08.710\nso we do import-module .\\MyFunctions.ps1.\n\n91\n00:05:08.710 --> 00:05:13.176\nAnd now, if I do a get-module,\n\n92\n00:05:13.176 --> 00:05:19.140\nI can see that MyFunctions did import.\n\n93\n00:05:19.140 --> 00:05:23.080\nSo there's no automatically importing of\nit because it's not technically a module,\n\n94\n00:05:23.080 --> 00:05:26.620\nbut we can use our import\nmodule to bring that in.\n\n95\n00:05:26.620 --> 00:05:29.530\nAnd now it is indeed loaded up.\n\n96\n00:05:29.530 --> 00:05:33.240\nAnd that was because we put it in the\nright location, put it inside a folder.\n\n97\n00:05:33.240 --> 00:05:36.100\nIt sees it as a module, sort of, right?\n\n98\n00:05:36.100 --> 00:05:40.970\nAnd now Edit-File is available,\nand we can use it.\n\n99\n00:05:42.220 --> 00:05:45.020\nAll right, but now we wanna\ntake it a step further, right?\n\n100\n00:05:45.020 --> 00:05:48.770\nWe wanna turn it into\na full fledged module.\n\n101\n00:05:48.770 --> 00:05:51.450\nAnd that's what we are going to do next.\n\n102\n00:05:51.450 --> 00:05:56.963\nSo, let's close PowerShell, let's open\nup file explorer, and navigate back\n\n103\n00:05:56.963 --> 00:06:03.270\ninto Windows PowerShell &gt; Modules &gt;\nMyFunctions, and let's rename this guy.\n\n104\n00:06:03.270 --> 00:06:07.090\nWe're going to call it psm1, right?\n\n105\n00:06:07.090 --> 00:06:11.720\nPapa's here, Mike one, and yes,\nI want to change that extension.\n\n106\n00:06:11.720 --> 00:06:15.130\nAnd now, it's a PowerShell module, right?\n\n107\n00:06:15.130 --> 00:06:18.542\nIt's a PowerShell script module there,\npsm1.\n\n108\n00:06:18.542 --> 00:06:21.700\nAll right, lets fire up PowerShell again.\n\n109\n00:06:21.700 --> 00:06:24.120\nAnd I closed PowerShell because\nI didn't want the persistence,\n\n110\n00:06:24.120 --> 00:06:25.559\nI wanted to do this again.\n\n111\n00:06:25.559 --> 00:06:32.860\nSo if we take a look at get-module, I do\nnot have my functions listed as a module.\n\n112\n00:06:32.860 --> 00:06:40.050\nBut if I do a Get-Module -ListAvailable,\nlet's see what we get.\n\n113\n00:06:41.190 --> 00:06:44.752\nPatience is a virtue of\nwhich I do not have.\n\n114\n00:06:44.752 --> 00:06:50.560\nAnd MyFunctions is not listed in there yet\neither, right?\n\n115\n00:06:50.560 --> 00:06:51.880\nSo it's not listed there.\n\n116\n00:06:53.350 --> 00:06:58.610\nLet's double check and\nmake sure cuz it should have, there it is.\n\n117\n00:06:58.610 --> 00:07:00.810\nI know,\nI was gonna say it should be in there.\n\n118\n00:07:00.810 --> 00:07:01.730\nThere it is, right?\n\n119\n00:07:01.730 --> 00:07:06.990\nWe now see that it is,\nwhat's a good way to say this, it is.\n\n120\n00:07:08.660 --> 00:07:10.220\n&gt;&gt; Know that it is being present?\n\n121\n00:07:10.220 --> 00:07:11.310\n&gt;&gt; Yes, wow.\n\n122\n00:07:11.310 --> 00:07:12.255\nTrouble talking today.\n\n123\n00:07:12.255 --> 00:07:12.950\n&gt;&gt; [LAUGH]\n&gt;&gt; No, seriously.\n\n124\n00:07:12.950 --> 00:07:15.305\nBut they do help me out with that.\n\n125\n00:07:15.305 --> 00:07:18.778\n[LAUGH] Yes, it is a script or\nit's a module that is available.\n\n126\n00:07:18.778 --> 00:07:20.260\nWe did list available,\n\n127\n00:07:20.260 --> 00:07:23.150\nthat is one of the default locations\nthat power search is gonna look.\n\n128\n00:07:23.150 --> 00:07:28.600\nIt sees it and it's already starting to\nlook a little bit different, isn't it?\n\n129\n00:07:28.600 --> 00:07:30.930\nIt still says script over here.\n\n130\n00:07:30.930 --> 00:07:33.000\n&gt;&gt; But\nthere's a version that list placeholders.\n\n131\n00:07:33.000 --> 00:07:37.630\n&gt;&gt; There's a version placeholder and-\n&gt;&gt; We have our exported commands.\n\n132\n00:07:37.630 --> 00:07:42.720\n&gt;&gt; Yes, so starting to look like a real\nmodule now, which is kind of cool.\n\n133\n00:07:42.720 --> 00:07:45.480\nAlright, so let's see,\n\n134\n00:07:45.480 --> 00:07:48.460\nwe see that list of available modules,\nlet's see if we can import it.\n\n135\n00:07:48.460 --> 00:07:49.680\nActually, let's do this.\n\n136\n00:07:49.680 --> 00:07:52.880\nAll right,\nsince it's now seeing it like a module,\n\n137\n00:07:52.880 --> 00:07:57.080\nyou think we can use a command and\nhave it automatically load that module up?\n\n138\n00:07:57.080 --> 00:07:57.600\n&gt;&gt; Yes.\n\n139\n00:07:57.600 --> 00:07:58.622\n&gt;&gt; Well, let's find out.\n\n140\n00:07:58.622 --> 00:08:01.951\nedit-, look it there.\n\n141\n00:08:01.951 --> 00:08:03.373\nNow, let's double check that.\n\n142\n00:08:03.373 --> 00:08:05.080\nIf I do get-module.\n\n143\n00:08:05.080 --> 00:08:09.956\nThat module is not loaded up, right,\nit is not in my list of modules.\n\n144\n00:08:09.956 --> 00:08:13.650\nSo there shouldn't be\nan edit-file command available.\n\n145\n00:08:13.650 --> 00:08:19.030\nBut if I type edit-f and\nhit Tab, it found it, right.\n\n146\n00:08:19.030 --> 00:08:22.520\nIf I do edit file, what directory am I in?\n\n147\n00:08:22.520 --> 00:08:25.580\nUser is Michael, I don't know what files\nare in there, let's find something.\n\n148\n00:08:27.555 --> 00:08:29.960\nAnything good that I can use in there?\n\n149\n00:08:31.090 --> 00:08:32.430\nAll these dots.\n\n150\n00:08:32.430 --> 00:08:36.140\nThere was a text file, test.txt,\nwho knows what's in that, could be.\n\n151\n00:08:37.280 --> 00:08:40.110\nThere we go.\nHello world, I am your father.\n\n152\n00:08:40.110 --> 00:08:42.700\nYou guys probably saw that\nin one of my other shows.\n\n153\n00:08:42.700 --> 00:08:43.880\nA little test file.\n\n154\n00:08:43.880 --> 00:08:45.935\nAnd so my function worked, or\n\n155\n00:08:45.935 --> 00:08:50.551\nmy function is available even though\nthat module is not loaded up.\n\n156\n00:08:50.551 --> 00:08:52.790\nWell let's check and\nsee if it's loaded up now, right.\n\n157\n00:08:52.790 --> 00:08:59.320\nWe'll do a get-module, and\nsure enough there it is, right.\n\n158\n00:08:59.320 --> 00:09:03.910\nSo now that we've changed it to a .psm1\nfile, right, that's all we did.\n\n159\n00:09:03.910 --> 00:09:06.530\nWe didn't modify the file\nitself in any way.\n\n160\n00:09:06.530 --> 00:09:07.790\nWe didn't open it up.\n\n161\n00:09:07.790 --> 00:09:10.490\nWe didn't add any header information or\nanything like that.\n\n162\n00:09:10.490 --> 00:09:12.950\nAll we did was change the extension.\n\n163\n00:09:12.950 --> 00:09:16.400\nAnd we made sure it was in a folder with\nthe same name, and that it was in one of\n\n164\n00:09:16.400 --> 00:09:21.270\nthe default three locations that\nPowerShell is gonna look for modules.\n\n165\n00:09:21.270 --> 00:09:22.770\nAnd it's working like a champ, right.\n\n166\n00:09:22.770 --> 00:09:23.400\n&gt;&gt; That's pretty cool.\n\n167\n00:09:23.400 --> 00:09:24.290\nPretty easy.\n\n168\n00:09:24.290 --> 00:09:25.350\n&gt;&gt; Yeah.\n&gt;&gt; And now we can use it,\n\n169\n00:09:25.350 --> 00:09:28.968\nbefore we saw that limited functionality\nand we got full fledged functionality.\n\n170\n00:09:28.968 --> 00:09:33.304\n&gt;&gt; Yeah, so now when you sit down and\nyou know, I've got that custom function,\n\n171\n00:09:33.304 --> 00:09:34.410\nit's so cool.\n\n172\n00:09:34.410 --> 00:09:37.030\nAnd you type edit-f and\nyou hit Tab and it doesn't work.\n\n173\n00:09:37.030 --> 00:09:40.740\nYou're like, yeah,\nI forgot to grab that script.\n\n174\n00:09:40.740 --> 00:09:43.330\nNow that it's a module,\nI don't have to do that anymore.\n\n175\n00:09:43.330 --> 00:09:45.270\nI can just use my function.\n\n176\n00:09:45.270 --> 00:09:49.910\nSame thing with those get-large,\nright, they're all available.\n\n177\n00:09:49.910 --> 00:09:52.960\nAll one, two, three,\nfour, all right there.\n\n178\n00:09:52.960 --> 00:09:58.015\nSo, we really do at this point,\nwe have a module.\n\n179\n00:09:58.015 --> 00:10:00.270\nBut we're not quite done.\n\n180\n00:10:00.270 --> 00:10:01.620\n&gt;&gt; Okay, that's what I was going to ask.\n\n181\n00:10:01.620 --> 00:10:03.870\nI heard you say something\nabout a manifest.\n\n182\n00:10:03.870 --> 00:10:07.240\nI'm not really sure what\nthat entails though.\n\n183\n00:10:07.240 --> 00:10:13.060\n&gt;&gt; We could stop here but technically to\nbe a module I need a manifest, right.\n\n184\n00:10:13.060 --> 00:10:17.120\nAnd a manifest is simply\nmetadata about the module.\n\n185\n00:10:17.120 --> 00:10:23.060\nAnd a true or properly formed\nmodule is gonna have a manifest,\n\n186\n00:10:23.060 --> 00:10:25.160\nright, it's gonna have that metadata.\n\n187\n00:10:25.160 --> 00:10:30.610\nSo if we wanna be correct,\nthen we should not stop here.\n\n188\n00:10:30.610 --> 00:10:34.500\nWe should go on and\nwe should create a manifest for\n\n189\n00:10:34.500 --> 00:10:36.380\nit, which is what we're gonna do.\n\n190\n00:10:36.380 --> 00:10:40.200\nSo I'm gonna open up, hey,\ndid I run that as an administrator?\n\n191\n00:10:40.200 --> 00:10:41.150\nI'm not even sure.\n\n192\n00:10:41.150 --> 00:10:43.300\nAccess, I want ISE, there we go.\n\n193\n00:10:43.300 --> 00:10:45.230\nI want ISE.\nI've gotta create a little hash table, and\n\n194\n00:10:45.230 --> 00:10:49.900\nit's much easier to create here\nthen do it as a one-liner or\n\n195\n00:10:49.900 --> 00:10:52.706\nuse my line continuations in my console.\n\n196\n00:10:52.706 --> 00:10:56.920\nSo a manifest is simply\nmetadata about the module\n\n197\n00:10:56.920 --> 00:10:59.750\nstored as a little hash table, all right.\n\n198\n00:10:59.750 --> 00:11:03.610\n&gt;&gt; Now is this gonna be placed into that\nfolder that we created in the last show?\n\n199\n00:11:03.610 --> 00:11:06.280\n&gt;&gt; Yes, great question and\nit is absolutely is.\n\n200\n00:11:06.280 --> 00:11:10.995\nI need to make sure I put it in there, and\nit's going to have the same name, right.\n\n201\n00:11:10.995 --> 00:11:13.855\nMyfunctions.psm1 was\nthe name of our module,\n\n202\n00:11:13.855 --> 00:11:18.399\nMyfunctions is the name of the folder\nin that same directory, Myfunctions.\n\n203\n00:11:18.399 --> 00:11:25.949\nI'm also going to put myfunctions.psd1 so\nit manifest as a .psd1 file.\n\n204\n00:11:25.949 --> 00:11:32.640\nModule is a .psm1 file,\na script is a .ps1 file, right.\n\n205\n00:11:32.640 --> 00:11:37.140\nSo let's make our new module manifest,\nyou can actually,\n\n206\n00:11:37.140 --> 00:11:40.750\nI don't have to,\nlet's see if this will work.\n\n207\n00:11:40.750 --> 00:11:45.340\nIf I do New-ModuleManifest and\n\n208\n00:11:45.340 --> 00:11:49.470\njust no parameters, yeah,\nit's gonna make me spit those out.\n\n209\n00:11:49.470 --> 00:11:54.490\nSo I'm gonna stop right there and\nwe'll go ahead and do this the right way.\n\n210\n00:11:54.490 --> 00:11:56.610\nYou could make it generic.\n\n211\n00:11:56.610 --> 00:11:57.986\n&gt;&gt; That's what I was gonna ask.\nIf you try and create,\n\n212\n00:11:57.986 --> 00:12:00.560\nuse a template there,\nis what you're trying to do?\n\n213\n00:12:00.560 --> 00:12:02.919\n&gt;&gt; Exactly, and then you could\nactually make a template out of them.\n\n214\n00:12:02.919 --> 00:12:03.773\nIn fact we can probably do it.\n\n215\n00:12:03.773 --> 00:12:09.790\nIf we do New-ManifestModule, oops,\nModuleManifest not ManifestModule.\n\n216\n00:12:10.880 --> 00:12:15.433\nModuleManifest, right, the things\nI'm gonna need are path, so if I do\n\n217\n00:12:15.433 --> 00:12:21.220\na .path and I just put, I can probably\njust do a dot for the current location.\n\n218\n00:12:21.220 --> 00:12:24.955\nAnd I need to call something,\nlet's just do\n\n219\n00:12:24.955 --> 00:12:33.790\n.\\ManifestTemplate.psd1.\n\n220\n00:12:33.790 --> 00:12:36.660\nWe'll see if this is gonna work for me.\n\n221\n00:12:37.681 --> 00:12:41.420\nWhat else do I absolutely have to have?\n\n222\n00:12:41.420 --> 00:12:43.330\nI think that might be it, so let's try it.\n\n223\n00:12:44.440 --> 00:12:45.660\nNope, it's not going to like that.\n\n224\n00:12:45.660 --> 00:12:48.000\nYeah, cuz I'm in my location.\n\n225\n00:12:50.040 --> 00:12:55.211\nLet's try that one more time with a better\n\n226\n00:12:55.211 --> 00:12:59.804\nlocation, c:\\users\\Michael.\n\n227\n00:13:03.753 --> 00:13:04.395\nThere we go.\n\n228\n00:13:04.395 --> 00:13:11.740\n\\Documents and then we'll call it\nManifestTemplate.psd1, there we go.\n\n229\n00:13:11.740 --> 00:13:13.480\nAnd then let's Note Pad that guy.\n\n230\n00:13:13.480 --> 00:13:18.580\nNotepad c:\\Users\\Michael documents,\nand yeah,\n\n231\n00:13:18.580 --> 00:13:24.290\nI could use some environment variables\nhere to make this a lot faster possibly,\n\n232\n00:13:24.290 --> 00:13:27.980\nlike home and\nps home can get into these locations.\n\n233\n00:13:27.980 --> 00:13:30.300\nJust out of habit,\nI'm just going to type it out here.\n\n234\n00:13:33.459 --> 00:13:38.940\nAll right, there we go,\nthere is our manifest template, all right.\n\n235\n00:13:38.940 --> 00:13:42.080\nGenerated by me, whoo, I'm famous, and\n\n236\n00:13:42.080 --> 00:13:45.180\nthere is my date, and\nthen here is my hash table, right.\n\n237\n00:13:45.180 --> 00:13:49.350\nA hash table starts with an @ symbol and\nthen an open brace, and\n\n238\n00:13:49.350 --> 00:13:52.530\nthen everything is commented out for\nthe most part.\n\n239\n00:13:52.530 --> 00:13:56.170\nIt gives you a set of instructions,\nscript module or\n\n240\n00:13:56.170 --> 00:13:58.450\nbinary module file associated\nwith this manifest.\n\n241\n00:13:58.450 --> 00:14:01.210\nWell that's looking for the module, right.\n\n242\n00:14:01.210 --> 00:14:04.300\nWhat module does this manifest-\n&gt;&gt; Represent?\n\n243\n00:14:04.300 --> 00:14:05.343\n&gt;&gt; Represent, right.\n\n244\n00:14:05.343 --> 00:14:07.520\nWhat module is this metadata about?\n\n245\n00:14:07.520 --> 00:14:09.630\nSo that's what the root module would be.\n\n246\n00:14:09.630 --> 00:14:13.250\nYou get your module version,\nif you want to track versions.\n\n247\n00:14:13.250 --> 00:14:17.653\nCompatible PS Editions if you want\nto specify that this only works\n\n248\n00:14:17.653 --> 00:14:22.230\nin 5.0 because it uses a command\nthat wasn't unavailable in 4.\n\n249\n00:14:22.230 --> 00:14:22.770\n&gt;&gt; Nice.\n\n250\n00:14:22.770 --> 00:14:26.220\n&gt;&gt; It does generate a unique GUID for\nthe module, and but\n\n251\n00:14:26.220 --> 00:14:29.611\nall of this stuff,\nnotice it's all commented out.\n\n252\n00:14:29.611 --> 00:14:33.340\nSo remember I said the pound symbol,\nthe hashtag, is a comment and\n\n253\n00:14:33.340 --> 00:14:38.700\nthis is instructions, and then this is\na comment, and this is the actual value.\n\n254\n00:14:38.700 --> 00:14:43.682\nSo if I want to use one of these,\nI simply un-comment the value and\n\n255\n00:14:43.682 --> 00:14:46.863\nthen put the proper information in here.\n\n256\n00:14:46.863 --> 00:14:51.710\nI don't know, 4.0 or, oops,\nmy number lock was off there.\n\n257\n00:14:51.710 --> 00:14:52.548\n&gt;&gt; So strange.\n\n258\n00:14:52.548 --> 00:14:56.083\nSo does that technically, I mean you're\nnot applying for a copyright here, so\n\n259\n00:14:56.083 --> 00:14:59.040\nwhy does it say copyrighted\nwith your name up there?\n\n260\n00:14:59.040 --> 00:15:01.040\nBut you can put that, you might.\n\n261\n00:15:01.040 --> 00:15:01.700\nWhat if I did?\n\n262\n00:15:01.700 --> 00:15:04.440\n&gt;&gt; If you create a module,\nit's not automatically copywritten.\n\n263\n00:15:04.440 --> 00:15:06.760\n&gt;&gt; Sure, it's intellectual property.\n\n264\n00:15:06.760 --> 00:15:07.990\nI created it, it is mine.\n\n265\n00:15:07.990 --> 00:15:08.760\nYou can't have it.\n\n266\n00:15:08.760 --> 00:15:10.677\n&gt;&gt; Okay, I'm gonna have to check on that.\n\n267\n00:15:10.677 --> 00:15:11.853\n[LAUGH]\n&gt;&gt; But yeah,\n\n268\n00:15:11.853 --> 00:15:13.880\nthat would be intellectual property.\n\n269\n00:15:13.880 --> 00:15:16.650\nLike if an artist writes a song, you\ndon't have to go and get it copyrighted.\n\n270\n00:15:16.650 --> 00:15:19.008\nI'm not a copyright lawyer, so if you'll\nlook this stuff up, don't trust me.\n\n271\n00:15:19.008 --> 00:15:20.320\n&gt;&gt; [LAUGH] I just thought\nit was interesting.\n\n272\n00:15:20.320 --> 00:15:22.560\nI see that sitting there and\nI'm like, wait a second, hm.\n\n273\n00:15:22.560 --> 00:15:25.450\n&gt;&gt; But yeah,\nanything that's intellectual property,\n\n274\n00:15:25.450 --> 00:15:28.270\nsomething that you create,\nyou have the rights to it.\n\n275\n00:15:28.270 --> 00:15:29.440\n&gt;&gt; Okay.\n\n276\n00:15:29.440 --> 00:15:32.680\n&gt;&gt; Like if you wrote a song and\nI tried to steal it before you went and\n\n277\n00:15:32.680 --> 00:15:34.800\nofficially copyrighted it or\nsomething, yeah that wouldn't work.\n\n278\n00:15:34.800 --> 00:15:36.090\nOkay.\n&gt;&gt; Or something, I think.\n\n279\n00:15:36.090 --> 00:15:36.990\n&gt;&gt; Don't get any ideas.\n\n280\n00:15:36.990 --> 00:15:39.990\n&gt;&gt; Yeah, and I'm not a contract lawyer or\na copyright lawyer,\n\n281\n00:15:39.990 --> 00:15:44.310\nso do not take anything that I say\nthat has to do with copyright for\n\n282\n00:15:44.310 --> 00:15:49.200\nthis with more than a grain of So\ngo look that up for yourself.\n\n283\n00:15:49.200 --> 00:15:51.411\nBut yes, I do believe there's something\nabout intellectual property and\n\n284\n00:15:51.411 --> 00:15:51.944\nthat it is yours.\n\n285\n00:15:51.944 --> 00:15:53.692\n&gt;&gt; Okay.\n\n286\n00:15:53.692 --> 00:15:55.310\n&gt;&gt; All right, but\nof course if you work for\n\n287\n00:15:55.310 --> 00:15:57.959\na company, they're gonna tell\nyou that it's the company's,\n\n288\n00:15:57.959 --> 00:16:00.676\ncuz you're on their dime and\ntheir computer and the other stuff.\n\n289\n00:16:00.676 --> 00:16:05.792\n&gt;&gt; I actually worked for\nan organization for the new hire process.\n\n290\n00:16:05.792 --> 00:16:10.376\nWe had to sign a documentation so\nany thoughts or ideas that I had during my\n\n291\n00:16:10.376 --> 00:16:15.060\nrelationship with that organization,\nand six months thereafter.\n\n292\n00:16:15.060 --> 00:16:15.710\n&gt;&gt; Wow\n&gt;&gt; Yeah.\n\n293\n00:16:15.710 --> 00:16:16.490\n&gt;&gt; Six months after?\n\n294\n00:16:16.490 --> 00:16:18.750\n&gt;&gt; Yeah.\n&gt;&gt; Holy cat, that's crazy.\n\n295\n00:16:18.750 --> 00:16:20.200\nAll right, let's see.\n\n296\n00:16:20.200 --> 00:16:24.920\nSo this is again, this is the blank\nmanifest, that's all it is.\n\n297\n00:16:24.920 --> 00:16:27.680\nSo I can save this and\njust edit it in Notepad and\n\n298\n00:16:27.680 --> 00:16:30.089\nrename it each time I\ngenerated a new module.\n\n299\n00:16:31.160 --> 00:16:32.420\nThere's nothing wrong with that, right?\n\n300\n00:16:32.420 --> 00:16:36.020\nI could have a lot of this already\nfilled in, like company name, and\n\n301\n00:16:36.020 --> 00:16:40.250\ncopyright information, and\nwhatever else I wanted to use.\n\n302\n00:16:40.250 --> 00:16:44.890\nI just uncomment, fill it in,\nand we're good to go, all right?\n\n303\n00:16:44.890 --> 00:16:48.060\nSo that is our, and\nI'm not gonna save my changes to that.\n\n304\n00:16:48.060 --> 00:16:48.870\nThat is how we made it.\n\n305\n00:16:48.870 --> 00:16:54.252\nThat was new module manifest and\nthen that path where I wanna to put that?\n\n306\n00:16:54.252 --> 00:16:57.850\nLet's create, another way to do this,\nwe can do dollar sign,\n\n307\n00:16:57.850 --> 00:17:02.690\nwe'll just using variable manifest\nmaybe something like that.\n\n308\n00:17:02.690 --> 00:17:05.210\nEquals and will at,\n\n309\n00:17:07.220 --> 00:17:11.870\nsame thing I was doing where,\nwhere I do that?\n\n310\n00:17:11.870 --> 00:17:17.990\nAll right, I'm sorry and\nthen we'll do path equals\n\n311\n00:17:20.410 --> 00:17:25.615\nI don't want to have to type all\n\n312\n00:17:25.615 --> 00:17:29.995\nthat again where do we put that.\n\n313\n00:17:29.995 --> 00:17:36.140\nc:\\Users\\Michael\\Documents\\windowsPowerSh-\nell\\Modules\\MyFunctions.\n\n314\n00:17:36.140 --> 00:17:39.980\nAll right so that is where I want to place\n\n315\n00:17:41.900 --> 00:17:48.380\nthis manifest- sorry, typing and\ntalking is a challenge for me sometimes.\n\n316\n00:17:48.380 --> 00:17:50.618\n&gt;&gt; I'm going to bring you some bubble gum,\ntoo.\n\n317\n00:17:50.618 --> 00:17:51.400\n&gt;&gt; [LAUGH] Yeah.\n\n318\n00:17:51.400 --> 00:17:56.057\n&gt;&gt; Let's hit enter for that, you know\nwhat- is it going to let me do this\n\n319\n00:17:56.057 --> 00:18:00.469\nwithout And\n\n320\n00:18:00.469 --> 00:18:05.006\nit's gonna make me do that, isn't it?\n\n321\n00:18:07.997 --> 00:18:09.550\nYou need a continuation character?\n\n322\n00:18:09.550 --> 00:18:12.510\nIt should not need a continuation for\nthat.\n\n323\n00:18:12.510 --> 00:18:15.750\n&gt;&gt; You might have to explain to\nme what you're testing there.\n\n324\n00:18:15.750 --> 00:18:18.290\n&gt;&gt; Yeah, let me figure it out\nmyself here first [LAUGH].\n\n325\n00:18:18.290 --> 00:18:22.350\nSo we're just basically creating a hash\ntable with the values that we're gonna\n\n326\n00:18:22.350 --> 00:18:25.860\nprovide to the new\nmodule manifest command.\n\n327\n00:18:25.860 --> 00:18:28.850\nI could simply type them all out like\nI did a minute ago with that path.\n\n328\n00:18:28.850 --> 00:18:30.560\nIn fact, that would probably be easier.\n\n329\n00:18:30.560 --> 00:18:34.890\nI thought it was gonna show you a hash\ntable, but I might be doing this wrong.\n\n330\n00:18:34.890 --> 00:18:43.150\nLet's see root module equals.\n\n331\n00:18:43.150 --> 00:18:45.180\n&gt;&gt; Single quote.\n&gt;&gt; C colon backslash, again.\n\n332\n00:18:45.180 --> 00:18:52.410\nAnd this is where my location\nof that module folder.\n\n333\n00:18:52.410 --> 00:18:57.634\nThank you, because I can type it and\n\n334\n00:18:57.634 --> 00:19:03.567\nget this done while I'm talking there.\n\n335\n00:19:03.567 --> 00:19:07.790\n/Modules, /Myfunctions, Myfunctions.psm1.\n\n336\n00:19:07.790 --> 00:19:13.040\nSo I'm telling it where\nthat root module is.\n\n337\n00:19:13.040 --> 00:19:14.240\nAnd then let's do author.\n\n338\n00:19:14.240 --> 00:19:16.050\n&gt;&gt; That would be you.\n\n339\n00:19:16.050 --> 00:19:17.230\n&gt;&gt; That would be me, right?\n\n340\n00:19:17.230 --> 00:19:19.060\n&gt;&gt; And I can't pretend that it was mine.\n\n341\n00:19:19.060 --> 00:19:22.565\n&gt;&gt; That's right.\n&gt;&gt; You might take me to court.\n\n342\n00:19:22.565 --> 00:19:27.570\n&gt;&gt; [LAUGH] All right, and\nthen let's end our hash table.\n\n343\n00:19:27.570 --> 00:19:30.976\nAnd let's see if I can execute that\nwithout causing a problem, there we go.\n\n344\n00:19:30.976 --> 00:19:31.800\n&gt;&gt; Looks good.\n\n345\n00:19:31.800 --> 00:19:33.670\n&gt;&gt; So I got my hash table in there.\n\n346\n00:19:33.670 --> 00:19:38.090\nNow we're going to run\nthe command new dash module\n\n347\n00:19:38.090 --> 00:19:42.740\nmanifest and I will just use that\nhash table to provide those values.\n\n348\n00:19:42.740 --> 00:19:44.140\nAt, what did I call it?\n\n349\n00:19:44.140 --> 00:19:44.641\nManifest.\n\n350\n00:19:49.111 --> 00:19:49.730\nRight?\n\n351\n00:19:49.730 --> 00:19:51.860\nDo you see what I'm doing there?\n\n352\n00:19:51.860 --> 00:19:57.590\nBasically a hash table is just\na set of variables, right?\n\n353\n00:19:57.590 --> 00:20:01.240\nPath equals this, rootModule equals this,\nauthor equals this and\n\n354\n00:20:01.240 --> 00:20:05.070\nwhen I call this command, it's lurking for\ncertain input information, right?\n\n355\n00:20:05.070 --> 00:20:09.560\nBut its parameters that I should\nprovide when I call that new dash\n\n356\n00:20:09.560 --> 00:20:10.940\nmodule manifest command.\n\n357\n00:20:10.940 --> 00:20:13.640\nAnd so now I've given it a table and\n\n358\n00:20:13.640 --> 00:20:16.970\nwhen it say hey you didn't\nprovide me a path yes you did.\n\n359\n00:20:16.970 --> 00:20:19.820\nWait you didn't tell me what\nthe module yes you did.\n\n360\n00:20:19.820 --> 00:20:23.000\nWhat's the author it's right there so\nyou can just look at this table for\n\n361\n00:20:23.000 --> 00:20:25.790\nall this information And\nthat's one way to do it.\n\n362\n00:20:25.790 --> 00:20:29.650\nOtherwise I would have to provide\nall this same information.\n\n363\n00:20:29.650 --> 00:20:32.783\nEnd the command on one line.\n\n364\n00:20:32.783 --> 00:20:35.180\nYou know, it would be one\nreally long command, right?\n\n365\n00:20:35.180 --> 00:20:36.080\n&gt;&gt; Got ya yep.\n\n366\n00:20:36.080 --> 00:20:39.540\n&gt;&gt; This way it's easier to kind of\nmake sure you got everything right.\n\n367\n00:20:39.540 --> 00:20:40.130\nChange things.\n\n368\n00:20:40.130 --> 00:20:44.360\n&gt;&gt; And if you were working with another\nmodule then that same commandlet there\n\n369\n00:20:44.360 --> 00:20:47.520\nwould be just pulling that specific\ninformation for the other module.\n\n370\n00:20:47.520 --> 00:20:50.380\n&gt;&gt; Exactly, if this was not specific,\nbut there are some things in here that\n\n371\n00:20:50.380 --> 00:20:54.030\nare specific to this module\nlike the path in the root.\n\n372\n00:20:54.030 --> 00:20:55.570\nSo some of that would have to change.\n\n373\n00:20:55.570 --> 00:21:00.390\nBut if I let root module out, there is\ndefinitely like I could store in this\n\n374\n00:21:00.390 --> 00:21:06.003\nmanifest things like author copyright,\ncompany versions.\n\n375\n00:21:06.003 --> 00:21:10.040\nWe could do all that in there and\nthen make that reusable, absolutely.\n\n376\n00:21:10.040 --> 00:21:11.320\nAll right, let's see if we got it right.\n\n377\n00:21:11.320 --> 00:21:16.690\nWe're going to hit enter,\nand I did not, let's see,\n\n378\n00:21:16.690 --> 00:21:21.340\nname is not valid, I got a wrong path?\n\n379\n00:21:22.920 --> 00:21:23.920\nAn invalid path.\n\n380\n00:21:23.920 --> 00:21:26.974\nModules\\MyFunctions\\Myfunctions.psml.\n\n381\n00:21:26.974 --> 00:21:29.811\nSo let's see.\n\n382\n00:21:29.811 --> 00:21:32.660\n[INAUDIBLE] Silly me.\n\n383\n00:21:32.660 --> 00:21:34.700\n&gt;&gt; Did we not change the extension?\n\n384\n00:21:34.700 --> 00:21:41.080\n&gt;&gt; No up here in my path, the path is\ntelling it where to put the manifest.\n\n385\n00:21:41.080 --> 00:21:43.800\nSo you actually have to name the file.\n\n386\n00:21:43.800 --> 00:21:45.980\nI stopped just a little bit short there.\n\n387\n00:21:45.980 --> 00:21:52.007\nI've told it's in modules,\nin a folder called my functions but\n\n388\n00:21:52.007 --> 00:21:56.146\nI need to add my functions.psd1, right?\n\n389\n00:21:56.146 --> 00:21:59.883\nFor the manifest, right?\n\n390\n00:21:59.883 --> 00:22:00.597\nSo that way my bad.\n\n391\n00:22:00.597 --> 00:22:03.540\nOn my path I did not include-\n&gt;&gt; Because you weren't specific enough\n\n392\n00:22:03.540 --> 00:22:05.437\n&gt;&gt; Yes, exactly.\n\n393\n00:22:05.437 --> 00:22:08.240\nI was telling it where to put it, but\nI didn't tell it what to call it.\n\n394\n00:22:08.240 --> 00:22:11.475\nSo it needs that, and\nit needs to end in a .psd1.\n\n395\n00:22:13.050 --> 00:22:16.250\nIsn't PowerShell wonderful for\ngiving us good errors?\n\n396\n00:22:16.250 --> 00:22:18.760\n&gt;&gt; I think so,\nI really try to figure it out.\n\n397\n00:22:18.760 --> 00:22:21.600\nSometimes I just look at it, I'm like,\nI have no clue what that means.\n\n398\n00:22:21.600 --> 00:22:24.968\nAnd then that's when I'll ask Mike,\nI mean.\n\n399\n00:22:24.968 --> 00:22:27.900\n&gt;&gt; But 90% of the time they\nreally do give you good errors.\n\n400\n00:22:27.900 --> 00:22:31.960\nAnd that's something Windows\nhas been harped upon for years.\n\n401\n00:22:31.960 --> 00:22:32.729\nBut I tell you what,\n\n402\n00:22:32.729 --> 00:22:35.587\nPowerShell, when you get that red text\ndon't just look away and go [SOUND].\n\n403\n00:22:35.587 --> 00:22:38.720\nRead it, it will typically tell\nyou exactly what the problem is.\n\n404\n00:22:38.720 --> 00:22:41.780\nSometimes it'll take a minute to\ninterpret it, but it should tell you.\n\n405\n00:22:41.780 --> 00:22:43.180\nAll right, so anyway let's try that again.\n\n406\n00:22:44.340 --> 00:22:45.530\nAnd then I got another error.\n\n407\n00:22:45.530 --> 00:22:47.010\nAll right, so\nlet's see what this one says.\n\n408\n00:22:47.010 --> 00:22:50.220\nThis is not valid change the value\nof the path [INAUDIBLE] single files\n\n409\n00:22:50.220 --> 00:22:51.050\nif you want extension.\n\n410\n00:22:51.050 --> 00:22:51.740\nI did that.\n\n411\n00:22:51.740 --> 00:22:56.444\nI changed the value of\nthe path argument to point to\n\n412\n00:22:56.444 --> 00:22:59.693\na valid PSD 1 file then try again.\n\n413\n00:22:59.693 --> 00:23:00.702\nAll right\n&gt;&gt; Let's see if it's\n\n414\n00:23:00.702 --> 00:23:01.700\nactually sitting there.\n\n415\n00:23:01.700 --> 00:23:08.320\n&gt;&gt; It might have maybe, mo.\n\n416\n00:23:08.320 --> 00:23:12.800\nAll right well, in that case,\nI'll just double check.\n\n417\n00:23:12.800 --> 00:23:18.340\nPath sequel users [INAUDIBLE]\nthis PowerShell module,\n\n418\n00:23:18.340 --> 00:23:22.170\nmy function, is my function,\nit's not PSD 1 it's got the same.\n\n419\n00:23:22.170 --> 00:23:24.630\nEverything looks good.\n\n420\n00:23:24.630 --> 00:23:26.530\nDuh you know what we did, Cherokee?\n\n421\n00:23:26.530 --> 00:23:30.060\nSilly me remember when\nI first got the error,\n\n422\n00:23:30.060 --> 00:23:33.700\nI had not put the name of the file,\nonly the location.\n\n423\n00:23:33.700 --> 00:23:34.580\nSo we fixed it, right?\n\n424\n00:23:34.580 --> 00:23:39.920\nWe read the error and said, yeah, I didn't\npoint it to a file that ends in .psd1.\n\n425\n00:23:39.920 --> 00:23:42.810\nSo we fixed it, run it again.\n\n426\n00:23:44.000 --> 00:23:46.810\nWith the error again,\nguess what I forgot to do.\n\n427\n00:23:48.210 --> 00:23:52.150\nOnce I changed this, I never ran\nit again to update my definition.\n\n428\n00:23:52.150 --> 00:23:52.717\nSo, let's do that.\n\n429\n00:23:52.717 --> 00:23:53.357\n&gt;&gt; Let's run it.\n\n430\n00:23:53.357 --> 00:23:56.975\n&gt;&gt; Yeah, it doesn't do you any good\nto fix the script if you don't\n\n431\n00:23:56.975 --> 00:23:59.330\nrun the script after you fixed it.\n\n432\n00:23:59.330 --> 00:24:00.478\nSo, my bad.\n\n433\n00:24:00.478 --> 00:24:03.490\nNow that we've fixed this, let's run this.\n\n434\n00:24:03.490 --> 00:24:06.537\nBecause manifest still includes the error,\nright?\n\n435\n00:24:06.537 --> 00:24:12.420\nIf we look, $manifest,\nnow it still has the wrong path.\n\n436\n00:24:12.420 --> 00:24:14.400\nIt doesn't point to a file.\n\n437\n00:24:14.400 --> 00:24:17.610\nSo even though I've fixed it here,\nPowerShell doesn't know that.\n\n438\n00:24:17.610 --> 00:24:21.330\nSo let's update our definition for\nour variable dollar sign manifest.\n\n439\n00:24:22.830 --> 00:24:29.100\nAnd now if we try to run our command\nagain, new module manifest at manifest.\n\n440\n00:24:30.510 --> 00:24:32.660\nWe don't get any red text, how about that?\n\n441\n00:24:32.660 --> 00:24:33.330\n&gt;&gt; Sounds good.\n\n442\n00:24:33.330 --> 00:24:34.020\n&gt;&gt; Alright.\n\n443\n00:24:34.020 --> 00:24:35.170\nI like it.\n\n444\n00:24:35.170 --> 00:24:37.460\nSo now let's check and see what's there.\n\n445\n00:24:37.460 --> 00:24:39.160\nAnd sure enough, there it is.\n\n446\n00:24:39.160 --> 00:24:40.760\n&gt;&gt; Our little metadata.\n&gt;&gt; There's my esz1.\n\n447\n00:24:40.760 --> 00:24:41.837\nNice.\n\n448\n00:24:41.837 --> 00:24:43.069\nOur little manifesto.\n\n449\n00:24:43.069 --> 00:24:47.270\nAnd if we take a look at that,\nwe see created by, yada, yada.\n\n450\n00:24:47.270 --> 00:24:48.660\nWhat else do we put in here?\n\n451\n00:24:48.660 --> 00:24:50.460\nWe put the author in there.\n\n452\n00:24:50.460 --> 00:24:51.917\nMy copyright.\n\n453\n00:24:51.917 --> 00:24:55.899\nWhether it's valid or not we don't know,\nbut I have a copyright.\n\n454\n00:24:55.899 --> 00:24:57.354\n&gt;&gt; The name of that root module.\n\n455\n00:24:57.354 --> 00:25:00.010\n&gt;&gt; And yeah,\nroot module was in there somewhere, right?\n\n456\n00:25:00.010 --> 00:25:03.101\nI have to do a little search for it, but.\n\n457\n00:25:05.972 --> 00:25:08.730\nLet's see if I can find it real quick.\n\n458\n00:25:08.730 --> 00:25:11.570\nNested modules is just\nabove this somewhere.\n\n459\n00:25:11.570 --> 00:25:14.200\n&gt;&gt; So we've taken the beginnings.\n\n460\n00:25:14.200 --> 00:25:17.080\nWe start at the very beginning, and\nwe looked at components individually.\n\n461\n00:25:17.080 --> 00:25:19.720\nWe grouped them together\nto create functions.\n\n462\n00:25:19.720 --> 00:25:22.660\nWe even grew up to, I guess,\n\n463\n00:25:22.660 --> 00:25:26.830\ntransition into a script from\nthere transition into a module and\n\n464\n00:25:26.830 --> 00:25:31.650\nnow I've added this manifesto to our\nmodule so we are legitimate now.\n\n465\n00:25:31.650 --> 00:25:33.720\n&gt;&gt; We are and\nI'll see what that changed for us.\n\n466\n00:25:33.720 --> 00:25:35.220\nThere's one thing I was gonna do here.\n\n467\n00:25:35.220 --> 00:25:40.160\nLet's see, we got version information.\n\n468\n00:25:40.160 --> 00:25:43.180\nAll right we already got a version\n1.0 I think we added that already.\n\n469\n00:25:43.180 --> 00:25:44.570\nAll right, so let's close that.\n\n470\n00:25:44.570 --> 00:25:48.560\nLet's see what, how it behaves,\nif it behaves differently.\n\n471\n00:25:48.560 --> 00:25:52.060\nTo where earlier, it was working,\nbut it was still listed as a script-\n\n472\n00:25:52.060 --> 00:25:53.130\n&gt;&gt; A couple things were missing.\n\n473\n00:25:53.130 --> 00:25:53.720\n&gt;&gt; Yeah.\nAnd\n\n474\n00:25:53.720 --> 00:25:58.290\nit didn't do the automatically bring\nit in when I typed it kind of stuff.\n\n475\n00:25:58.290 --> 00:25:59.780\nSo let's see, I'm gonna close PowerShell.\n\n476\n00:26:01.230 --> 00:26:08.693\nI'm gonna open PowerShell back up And\nthen we're going to do get-module.\n\n477\n00:26:08.693 --> 00:26:11.949\nAnd we'll see that it is not listed yet,\nright?\n\n478\n00:26:11.949 --> 00:26:17.741\nBut if I do edit-file,\n\n479\n00:26:17.741 --> 00:26:20.940\nall right.\n\n480\n00:26:20.940 --> 00:26:21.850\nThere it is.\n\n481\n00:26:21.850 --> 00:26:23.690\nAnd what did I have?\n\n482\n00:26:23.690 --> 00:26:24.360\nTest.\n\n483\n00:26:24.360 --> 00:26:25.780\nThat was the one we pulled up last time.\n\n484\n00:26:26.780 --> 00:26:30.030\nYeah, hello world I am your father.\n\n485\n00:26:30.030 --> 00:26:31.220\nSo it's working.\n\n486\n00:26:31.220 --> 00:26:32.783\nRight?\nJust like any other module, and\n\n487\n00:26:32.783 --> 00:26:35.315\nit did that when we had it as\na script treated like a module, but\n\n488\n00:26:35.315 --> 00:26:37.388\nlet's see if there's\nanything different here.\n\n489\n00:26:37.388 --> 00:26:42.990\nLet's do a get-module,\nit is now loaded up.\n\n490\n00:26:42.990 --> 00:26:44.410\n&gt;&gt; Cool I see that version number.\n\n491\n00:26:44.410 --> 00:26:46.330\n&gt;&gt; And here we get our version number.\n\n492\n00:26:46.330 --> 00:26:48.920\nWe've got our exported commands.\n\n493\n00:26:48.920 --> 00:26:50.990\nWe are good to go.\n\n494\n00:26:50.990 --> 00:26:55.430\nSo, now that we'll get that module,\nI'm sorry that manifest,\n\n495\n00:26:55.430 --> 00:26:59.710\nwe can store that metadata in there and\nwe can describe.\n\n496\n00:26:59.710 --> 00:27:01.860\nAnd we can start getting\nreally fancy with this.\n\n497\n00:27:01.860 --> 00:27:03.320\nWe can do help files and things like that.\n\n498\n00:27:03.320 --> 00:27:05.950\nThere's a lot more that we\ncould include with our module.\n\n499\n00:27:05.950 --> 00:27:09.830\nBut for now I think we've got\nthe basics of creating a module.\n\n500\n00:27:09.830 --> 00:27:13.520\nAnd we see how as long as we put it in\nthe right place, give it the right names.\n\n501\n00:27:13.520 --> 00:27:18.053\nIt'll treat it like any other module, like\na third party or a Microsoft module and\n\n502\n00:27:18.053 --> 00:27:20.980\nwe can get that auto-import\non using a command.\n\n503\n00:27:20.980 --> 00:27:22.057\nWonderful, wonderful stuff.\n\n504\n00:27:22.057 --> 00:27:26.039\n&gt;&gt; Perfect, Mike, thank you for that time\nthat you spent with us today because now I\n\n505\n00:27:26.039 --> 00:27:27.504\nknow how to create a module and\n\n506\n00:27:27.504 --> 00:27:30.742\nall the components to support\nit to make it 100% functional.\n\n507\n00:27:30.742 --> 00:27:33.171\nAnd thank you for joining us as well,\nbut for this show,\n\n508\n00:27:33.171 --> 00:27:34.475\nwe'll go ahead and sign out.\n\n509\n00:27:34.475 --> 00:27:36.145\nI've been your host, Cherokee Boose.\n\n510\n00:27:36.145 --> 00:27:36.760\n&gt;&gt; And I'm Mike Rodrick.\n\n511\n00:27:36.760 --> 00:27:39.795\n&gt;&gt; See you next time here at ITPRO.TV.\n\n512\n00:27:39.795 --> 00:27:45.773\n[MUSIC]\n\n513\n00:27:45.773 --> 00:27:49.255\n&gt;&gt; Thank you for watching ITPRO.TV.\n\n",
          "vimeoId": "238584351"
        }
      ],
      "title": "Introduction"
    }
  ],
  "url": "powershell-2017",
  "vLab": false
}
