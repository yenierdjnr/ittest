{
  "description": "In this series, Daniel and Justin walk you through an in-depth primer on the Python programming language. Whether you have some other programming experience or you are completely new to coding, you will be given the tools necessary to get started writing programs with Python. They cover topics like printing output to the screen, assigning and utilizing variables, getting input from the user, decision making, iteration/loops, creating lists, dictionaries, and tuples, using and creating functions, slicing, and more. If you're looking for an easy programming language to get started, or you want to add another language to your repertoire, Python is a great choice.",
  "descriptionMD": "",
  "length": "22748",
  "name": "Python Programming",
  "practiceExam": false,
  "subtitle": "Programming Language",
  "tagUrl": "developer",
  "topics": [
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Justin give a general overview of what to expect in the upcoming Python programming series. They cover topics like who is the intended audience, what the scope of the series will cover, and what are some specific topics that will be addressed.",
          "length": "166",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-0-0-overview-030616-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-0-0-overview-030616-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-0-0-overview-030616-1-sm.jpg",
          "title": "Overview",
          "transcript": "WEBVTT\n\n1\n00:00:00.005 --> 00:00:04.383\n[SOUND]\n\n2\n00:00:04.383 --> 00:00:09.383\n[MUSIC]\n\n3\n00:00:09.383 --> 00:00:13.016\nIn this segment we're gonna give you a\ngeneral overview of what to expect in our\n\n4\n00:00:13.016 --> 00:00:16.484\nupcoming Python Programming series,\nstarring my good friend here, Mr.\n\n5\n00:00:16.484 --> 00:00:17.760\nJustin Dennison.\n\n6\n00:00:17.760 --> 00:00:22.540\nJustin, Python programming, you've had a\nlittle experience with that in your past,\n\n7\n00:00:22.540 --> 00:00:23.929\nso we're glad to have you onboard.\n\n8\n00:00:25.050 --> 00:00:26.580\nFirst let's start here.\n\n9\n00:00:26.580 --> 00:00:29.620\nWhat is the intended audience for\nthis Python series?\n\n10\n00:00:29.620 --> 00:00:34.575\n>> I think Python is a great language for\nall beginners, but I've kind of tried\n\n11\n00:00:34.575 --> 00:00:39.618\nto think about what would help me the most\nif I had a diversity of backgrounds.\n\n12\n00:00:39.618 --> 00:00:44.778\nSo say I'm a sys admin, but I don't really\nknow a lot about hardcore programming.\n\n13\n00:00:44.778 --> 00:00:46.417\nThat audience would benefit,\n\n14\n00:00:46.417 --> 00:00:50.998\nas well as someone who just wants to get\nstarted with Python to play around with.\n\n15\n00:00:50.998 --> 00:00:55.287\nSo I've tried to make it practical\nwhile teaching beginner-level concepts,\n\n16\n00:00:55.287 --> 00:00:57.310\nintroductory-level concepts.\n\n17\n00:00:57.310 --> 00:00:58.120\n>> Excellent.\n\n18\n00:00:58.120 --> 00:01:03.880\nSo what would you say is a good overview\nof what to expect in our Python series?\n\n19\n00:01:03.880 --> 00:01:08.370\n>> So in Python, really,\nwe gotta get started, we gotta get set up.\n\n20\n00:01:08.370 --> 00:01:09.760\nHow do we get set up?\n\n21\n00:01:09.760 --> 00:01:13.060\nHow do we run these reliably and\nkind of reproducibly?\n\n22\n00:01:13.060 --> 00:01:19.040\nAnd then we're gonna spend some time\naddressing some of this basic fundamental\n\n23\n00:01:19.040 --> 00:01:23.430\nunderstanding of Python,\nlike what are lists, what are strings?\n\n24\n00:01:23.430 --> 00:01:25.748\nWhat are all of these words\nyou're saying that I don't know?\n\n25\n00:01:25.748 --> 00:01:30.368\nAnd then finally we're gonna culminate\nin putting all of these new concepts,\n\n26\n00:01:30.368 --> 00:01:32.468\nlike functions and data types, and\n\n27\n00:01:32.468 --> 00:01:35.980\nwrite something that I'm pretty\nsure will blow your mind.\n\n28\n00:01:35.980 --> 00:01:36.970\n>> Sounds awesome.\n\n29\n00:01:36.970 --> 00:01:40.058\nNow what are some specific topics\nthat we're gonna dive into,\n\n30\n00:01:40.058 --> 00:01:43.850\njust to whet the appetite of someone\nthat might be interested in this?\n\n31\n00:01:43.850 --> 00:01:48.390\n>> So how do I import new functionality\nfrom the standard library?\n\n32\n00:01:48.390 --> 00:01:50.328\nWell, there's very\nspecific ways to do that.\n\n33\n00:01:50.328 --> 00:01:53.510\nOr how do I write my\nown functions if I want\n\n34\n00:01:53.510 --> 00:01:58.530\nto encapsulate all of these\nnew things I've learned?\n\n35\n00:01:58.530 --> 00:02:00.280\nHow do I write my own functions?\n\n36\n00:02:00.280 --> 00:02:04.810\nIn particular, how do I write those\nfunctions to make use of lists,\n\n37\n00:02:04.810 --> 00:02:10.580\nwhich are collections of whatever you want\nthem to be, so I can stream through those?\n\n38\n00:02:10.580 --> 00:02:11.735\nDoes that answer your question?\n\n39\n00:02:11.735 --> 00:02:15.085\n>> Yeah,\nthat's exactly what we're looking for.\n\n40\n00:02:15.085 --> 00:02:19.950\nWe just wanted to know some of the details\nof our Python course for our viewers out\n\n41\n00:02:19.950 --> 00:02:24.450\nthere that might be going, hm, this looks\ninteresting, but tell me more about that.\n\n42\n00:02:24.450 --> 00:02:27.060\nSo thank you so much for\njoining us today and\n\n43\n00:02:27.060 --> 00:02:31.080\nexplaining some of what our viewers out\nthere might expect from this course.\n\n44\n00:02:31.080 --> 00:02:34.777\nIf it sounds like something that you might\nbe interested in, that might be helpful\n\n45\n00:02:34.777 --> 00:02:38.058\nfor you, then we look forward to\nseeing you in those upcoming episodes.\n\n46\n00:02:38.058 --> 00:02:42.316\n[MUSIC]\n\n",
          "url": "overview70717",
          "vimeoId": "158179580"
        },
        {
          "description": "In this episode, Daniel and Justin kick things off by explaining what Python is and giving a little history of the language. They also talk about what a program is and why Python is so powerful. Then they show you how to acquire Python if it's not already installed on your system. Finally, they show you how to write your first simple Python program.",
          "length": "1874",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-1-setting_up_python-030516-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-1-setting_up_python-030516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-1-setting_up_python-030516-1-sm.jpg",
          "title": "Setting up Python",
          "transcript": "",
          "url": "setting-python",
          "vimeoId": "158181979"
        },
        {
          "description": "In this episode, Daniel and Justin start building your foundational Python vocabulary. They explain Python objects like Variables and Values (which are stored in variables) as well as logical operators/operands. They also cover what to do when things go awry and you have to \"debug\" your code, and how to keep your code descriptive by employing comments.",
          "length": "2492",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-2-using_python_for_simple_tasks-030516-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-2-using_python_for_simple_tasks-030516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-2-using_python_for_simple_tasks-030516-1-sm.jpg",
          "title": "Using Python for Simple Tasks",
          "transcript": "",
          "url": "using-python-simple-tasks",
          "vimeoId": "158182503"
        },
        {
          "description": "In this episode, Daniel and Justin take you to the next level with Python by showing you how to create more intelligent programs through the use of decision making. They start by looking at boolean expressions and logical operators and then using those values to make a decision through the employ of If, Else, and Elif statements.",
          "length": "2177",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-3-decision_making_in_python-030516-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-3-decision_making_in_python-030516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-3-decision_making_in_python-030516-1-sm.jpg",
          "title": "Decision Making in Python",
          "transcript": "",
          "url": "decision-python",
          "vimeoId": "158183521"
        },
        {
          "description": "In this episode, Daniel and Justin explore how to make your Python code more modular by introducing Functions. They begin by explaining what a function is and how to create one or many, and even use functions nested inside other functions to create a more structured program/script.",
          "length": "1849",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-4-functions-030516-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-4-functions-030516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-4-functions-030516-1-sm.jpg",
          "title": "Functions",
          "transcript": "",
          "url": "functions",
          "vimeoId": "158184257"
        },
        {
          "description": "In this episode, Daniel and Justin take a look at how to use Python to perform repetitive tasks, a process known as iteration or loops. They begin by explaining the structure and use of While loops and then show you some examples to demonstrate how while loops iterate. They also explain how to avoid infinite loops by breaking the loop through decision statements.",
          "length": "1981",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-5-iterations-030516-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-5-iterations-030516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-5-iterations-030516-1-sm.jpg",
          "title": "Iterations",
          "transcript": "",
          "url": "iterations",
          "vimeoId": "158186427"
        },
        {
          "description": "In this episode, Daniel and Justin take a closer look at Strings in Python. They explain the structure of Strings through which they are able to introduce you to the concept and practice of Slicing. They also cover another useful concept known as Zero Based Indexing, which leads them to their final topic of another iteration process called For loops.",
          "length": "1604",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-6-strings_and_more_iteration-030516-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-6-strings_and_more_iteration-030516-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-6-strings_and_more_iteration-030516-1-sm.jpg",
          "title": "Strings and more Iteration",
          "transcript": "",
          "url": "strings-iteration",
          "vimeoId": "158186027"
        },
        {
          "description": "In this episode, Daniel and Justin explain how to use Lists in Python. They start off by defining what lists are and what they can be comprised of. Then they compare the similarities and differences of Lists with Strings. Next, they show you how to access the elements in a list as well as how to use List Operations, Slicing with Lists, and modifying Lists.",
          "length": "1831",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-7-lists-030616-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-7-lists-030616-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-7-lists-030616-1-sm.jpg",
          "title": "Lists",
          "transcript": "",
          "url": "lists",
          "vimeoId": "158189658"
        },
        {
          "description": "In this episode, Daniel and Justin acquaint you with yet another invaluable Python container, that container being Dictionaries. They explain exactly what a Dictionary is; contrasting it against Lists. They show you how to use all the standard operations that we've learned, as well as how to iterate through elements in the Dictionary.",
          "length": "1749",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-8-dictionaries-030616-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-8-dictionaries-030616-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-8-dictionaries-030616-1-sm.jpg",
          "title": "Dictionaries",
          "transcript": "",
          "url": "dictionaries",
          "vimeoId": "158188688"
        },
        {
          "description": "In this episode, Daniel and Justin familiarize you with Tuples in Python. Though it may have an unusual name, Tuples are very similar to Lists, but with some important differences. Here, Justin describes exactly what Tuples are and gives some great examples of how and where one might use them. They also show you how to use the standard operating methods and slicing techniques applied to Tuples. Finally, they show you how you can use Tuples as input to Functions.",
          "length": "1942",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-9-tuples-030616-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-9-tuples-030616-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-9-tuples-030616-1-sm.jpg",
          "title": "Tuples",
          "transcript": "",
          "url": "tuples",
          "vimeoId": "158203868"
        },
        {
          "description": "In this episode, Daniel and Justin show you how to use Python to manipulate text files. They begin by showing you open files and read the content out to Python. Then they introduce you to the With statement as an easy way to close files once your program is done with them. They also show you how to write to files, which adds useful functions to your programs.",
          "length": "1665",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-10-manipulating_files-030616-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-10-manipulating_files-030616-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-10-manipulating_files-030616-1-sm.jpg",
          "title": "Manipulating Files",
          "transcript": "",
          "url": "manipulating-files",
          "vimeoId": "158203647"
        },
        {
          "description": "In this episode, Daniel and Justin jump back to Functions for a more in-depth look at the Standard Library. In the previous episode on Python Functions you learned how to create your own custom function. Here, the guys show you how to take advantage of the myriad of built-in Functions found in any Python install.",
          "length": "1700",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-11-standard_library_functions-030616-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-11-standard_library_functions-030616-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-11-standard_library_functions-030616-1-sm.jpg",
          "title": "Standard Library Functions",
          "transcript": "",
          "url": "standard-library-functions",
          "vimeoId": "158190683"
        },
        {
          "description": "In this episode, Daniel and Justin show you how to take all they've taught you so far and put it to use in one program. They use variables, lists, dictionaries, file manipulation, etc. to create a program that parses through text files, looks for desired text, and outputs to a comma separated value(CSV) file for further analysis. This is a culmination of all your new Python skills!",
          "length": "1718",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-12-putting_it_all_together-030616-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-12-putting_it_all_together-030616-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/pythonprogramming/pythonprogramming-1-12-putting_it_all_together-030616-1-sm.jpg",
          "title": "Putting it all Together",
          "transcript": "",
          "url": "putting",
          "vimeoId": "158190495"
        }
      ],
      "title": "Python Programming"
    }
  ],
  "url": "python-programming",
  "vLab": false
}
