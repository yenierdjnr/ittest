{
  "description": "The Working with SSH show aims to remove the intimidation of using the Secure Shell protocol on your network. SSH allows for encrypting network communications to protect from eavesdropping and man-in-the-middle attacks. This series demonstrates how to configure and use SSH to securely manage your systems.",
  "descriptionMD": "",
  "length": "1997",
  "name": "Working with SSH",
  "practiceExam": false,
  "subtitle": "SSH Tools and Tips",
  "tagUrl": "security-admin",
  "topics": [
    {
      "episodes": [
        {
          "description": null,
          "length": "80",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-0-0-overview-060415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-0-0-overview-060415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-0-0-overview-060415-1-sm.jpg",
          "title": "Working with SSH",
          "transcript": "WEBVTT\n\n1\n00:00:00.025 --> 00:00:03.013\n[SOUND] All right,\n\n2\n00:00:03.013 --> 00:00:07.994\nwelcome to Working With SSH,\n\n3\n00:00:07.994 --> 00:00:12.186\na new series on ITProTV.\n\n4\n00:00:12.186 --> 00:00:16.014\nIn this series of segments, we're gonna\nbe taking a look at the SSH protocol,\n\n5\n00:00:16.014 --> 00:00:19.496\nhow we can use it and some of the\ndifferent ways we can tweak and configure\n\n6\n00:00:19.496 --> 00:00:23.820\nit to ensure that we're connecting to our\nservers in the most secure of manners.\n\n7\n00:00:23.820 --> 00:00:26.290\nSSH is a really robust protocol.\n\n8\n00:00:26.290 --> 00:00:27.290\nA lot of people use it for\n\n9\n00:00:27.290 --> 00:00:30.730\na number of things, from the basic\nencrypted shell type connection,\n\n10\n00:00:30.730 --> 00:00:35.110\nto doing secure file transfers,\nto even tunneling, like a VPN tunnel.\n\n11\n00:00:35.110 --> 00:00:38.350\nYou can use it as a SSH for that,\ntoo,it's really, really powerful.\n\n12\n00:00:38.350 --> 00:00:42.670\nThere's a few basic configuration steps\nthat need to be done to enable it and\n\n13\n00:00:42.670 --> 00:00:46.420\nsome additional steps to make sure\nthat it's nice and secure and\n\n14\n00:00:46.420 --> 00:00:48.790\nthat you get the biggest\nbenefit out of it.\n\n15\n00:00:48.790 --> 00:00:52.720\nA lot of people are intimidated by SSH cuz\nthey don't wanna deal with encryption and\n\n16\n00:00:52.720 --> 00:00:54.020\nall the advanced settings.\n\n17\n00:00:54.020 --> 00:00:57.160\nBut at the end of the day,\nit's really not very difficult.\n\n18\n00:00:57.160 --> 00:01:00.836\nSo we've created this series of\nepisodes to help walk you through some\n\n19\n00:01:00.836 --> 00:01:05.072\nof the common things you need to do to get\nSSH deployed properly on your network and\n\n20\n00:01:05.072 --> 00:01:09.594\nget the most out of that protocol that you\ncan, to take advantage of what you've got.\n\n21\n00:01:09.594 --> 00:01:13.531\nSo stay tuned,\nwe've got more SSH coming up.\n\n22\n00:01:13.531 --> 00:01:19.569\n[SOUND]\n\n",
          "vimeoId": "131436490"
        },
        {
          "description": null,
          "length": "378",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-1-1-enabling_ssh-060415.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-1-1-enabling_ssh-060415-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-1-1-enabling_ssh-060415-sm.jpg",
          "title": "Enabling SSH",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:05.044\n[MUSIC]\nIn this segment, we're gonna take a look\n\n2\n00:00:05.044 --> 00:00:10.067\nat installing and\nenabling the SSH service on\n\n3\n00:00:10.067 --> 00:00:15.850\na Starnix right, a Linux or\nUnix based system.\n\n4\n00:00:15.850 --> 00:00:17.254\nNow on most modern Linux and\n\n5\n00:00:17.254 --> 00:00:20.622\nUnix based operating systems SSH\nis already enabled by default.\n\n6\n00:00:20.622 --> 00:00:22.780\nIt's a very important protocol.\n\n7\n00:00:22.780 --> 00:00:25.830\nSo we don't typically have\nto do much to it at all.\n\n8\n00:00:25.830 --> 00:00:29.510\nWell, let's assume for a moment that you\nfind a system where it's not enabled,\n\n9\n00:00:29.510 --> 00:00:31.940\ninstalling it is pretty simple, all right?\n\n10\n00:00:31.940 --> 00:00:34.430\nFirst off, we should see whether it's\nalready installed on our system.\n\n11\n00:00:34.430 --> 00:00:36.400\nI've got a CentOS machine here.\n\n12\n00:00:36.400 --> 00:00:39.160\nAnd it's based on Red Hat Linux,\nso it's pretty common.\n\n13\n00:00:39.160 --> 00:00:41.750\nThis is what you're normally going\nto see out there in businesses.\n\n14\n00:00:41.750 --> 00:00:45.970\nAnd I might wanna determine whether or\nnot SSH is already installed.\n\n15\n00:00:45.970 --> 00:00:50.260\nSo one of the easiest ways to do that is\nto use my package manager to just pull up\n\n16\n00:00:50.260 --> 00:00:55.640\na list of packages, and\nSSH is part of the OpenSSH suite.\n\n17\n00:00:55.640 --> 00:00:58.800\nSo I'm just gonna look at\na list of SSH packages here.\n\n18\n00:00:58.800 --> 00:01:00.440\nAnd I'm gonna get a return on this.\n\n19\n00:01:00.440 --> 00:01:03.293\nI'm just running sudo yum list openssh*.\n\n20\n00:01:03.293 --> 00:01:06.930\nAnd there's two packages\nthat I'm looking for.\n\n21\n00:01:06.930 --> 00:01:11.130\nThe main package is openssh,\nfollowed by an architecture, and\n\n22\n00:01:11.130 --> 00:01:13.880\nthe other package is openssh-server.\n\n23\n00:01:13.880 --> 00:01:18.340\nAnd I can see on my system,\nboth them are already installed packages.\n\n24\n00:01:18.340 --> 00:01:20.190\nIf you look at yours and\nthey're not installed packages,\n\n25\n00:01:20.190 --> 00:01:23.220\nif they're listed down here under\navailable, you just need to install them.\n\n26\n00:01:23.220 --> 00:01:29.519\nSo you would say, sudo yum install and\nthen specify openssh-server.\n\n27\n00:01:29.519 --> 00:01:33.561\nIf you hadn't installed OpenSSH itself,\nthat would be a dependency here so\n\n28\n00:01:33.561 --> 00:01:35.720\nit would come in at the same time.\n\n29\n00:01:35.720 --> 00:01:38.040\nWe could run that, and\nit would go and get it installed.\n\n30\n00:01:38.040 --> 00:01:40.600\nIn my case, nothing to do,\nit's already installed by default.\n\n31\n00:01:41.960 --> 00:01:46.450\nOnce it's installed, you need to tell\nyour system to run it at boot time, so\n\n32\n00:01:46.450 --> 00:01:51.320\nthat it knows to go ahead and start up the\nSSH service and get that up and running.\n\n33\n00:01:51.320 --> 00:01:53.365\nNow, this used to be one simple command.\n\n34\n00:01:53.365 --> 00:01:56.702\nBut in today's world there's actually\ntwo systems that can be used, or\n\n35\n00:01:56.702 --> 00:02:01.035\ntwo different systems that can be used as\nthe backend of your Linux distribution.\n\n36\n00:02:01.035 --> 00:02:05.555\nSo you might be running on\na traditional System V Unix system, or\n\n37\n00:02:05.555 --> 00:02:08.945\nyou might be running on\na newer System D based system.\n\n38\n00:02:08.945 --> 00:02:11.595\nSo now we have to remember two\ndifferent sets of commands depending on\n\n39\n00:02:11.595 --> 00:02:12.830\nwhat we're on.\n\n40\n00:02:12.830 --> 00:02:16.830\nIf we're on a traditional system five\nsystem, then the first thing you need to\n\n41\n00:02:16.830 --> 00:02:22.540\ndo is just run service sshd start.\n\n42\n00:02:22.540 --> 00:02:26.310\nThat's gonna start up the ssh daemon and\nget that running in the background.\n\n43\n00:02:26.310 --> 00:02:29.410\nNow notice how mine says redirecting.\n\n44\n00:02:29.410 --> 00:02:31.930\nIt's redirecting because\nI'm on a system D system.\n\n45\n00:02:31.930 --> 00:02:36.683\nSo instead, what I should have run was,\nwell I need to sudo it so\n\n46\n00:02:36.683 --> 00:02:40.922\nI have permission, but\nsystemctl start and then sshd.\n\n47\n00:02:40.922 --> 00:02:46.320\nSo it'll fire that up and get that\nrunning on a System D system, all right.\n\n48\n00:02:46.320 --> 00:02:48.170\nNow, that's gonna start it right now, but\n\n49\n00:02:48.170 --> 00:02:52.170\nif I reboot my computer,\nit's gonna be stopped again.\n\n50\n00:02:52.170 --> 00:02:56.310\nI have to make sure the system knows\nto start it every time I boot up.\n\n51\n00:02:56.310 --> 00:03:02.497\nOn a System V system, what you would\ndo is you would say check config, or\n\n52\n00:03:02.497 --> 00:03:08.300\nchkconfig, and then the name of\nthe service, sshd, and then on.\n\n53\n00:03:08.300 --> 00:03:11.660\nAnd that says every time I boot up\ngo ahead and start that service.\n\n54\n00:03:11.660 --> 00:03:16.220\nBut again, I get that forwarding message\nbecause on a System D system you would do,\n\n55\n00:03:16.220 --> 00:03:19.480\nsystemctl enable.\n\n56\n00:03:19.480 --> 00:03:20.250\nYou'd spell it right.\n\n57\n00:03:20.250 --> 00:03:21.640\nThat's gonna help us a little bit.\n\n58\n00:03:21.640 --> 00:03:24.491\nAnd then sshd.\nAnd that's gonna make sure that it starts\n\n59\n00:03:24.491 --> 00:03:26.030\nevery time you boot up.\n\n60\n00:03:26.030 --> 00:03:28.565\nNow I got an access denied\nbecause I forgot to do a sudo.\n\n61\n00:03:28.565 --> 00:03:30.955\nYou have to be a system\nadministrator to do this.\n\n62\n00:03:30.955 --> 00:03:32.470\nYou have to have root access.\n\n63\n00:03:32.470 --> 00:03:33.535\nSo if I provide that,\n\n64\n00:03:33.535 --> 00:03:36.451\nnow it knows to start the service\nup every time that I boot.\n\n65\n00:03:36.451 --> 00:03:40.650\nAll right, now for most systems,\nthat's all we have to do.\n\n66\n00:03:40.650 --> 00:03:43.183\nSSH is installed, it's running.\n\n67\n00:03:43.183 --> 00:03:46.950\nI can now remote in and\nconnect to the system.\n\n68\n00:03:46.950 --> 00:03:50.790\nIf I have a firewall in place,\nthen I'll need to go to my firewall and\n\n69\n00:03:50.790 --> 00:03:53.500\nopen up port 22 so that people can get in.\n\n70\n00:03:53.500 --> 00:03:58.230\nSSH runs on port 22 by default so\nthat's a pretty standard thing.\n\n71\n00:03:58.230 --> 00:04:01.740\nBut if it's not open on your firewall,\nyou'll just need to add that in to make\n\n72\n00:04:01.740 --> 00:04:04.970\nsure that people can get in and\nconnect to the system.\n\n73\n00:04:04.970 --> 00:04:07.490\nIf SSH was already enabled on your system,\nthen you should be good to go.\n\n74\n00:04:07.490 --> 00:04:08.296\nYou shouldn't have to mess\nwith the firewall at all.\n\n75\n00:04:08.296 --> 00:04:12.607\nBut if you don't, then you might\nhave to go into IP tables or\n\n76\n00:04:12.607 --> 00:04:17.971\nwhatever firewall it is that your\nsystem has and add TCP port 22 to that.\n\n77\n00:04:17.971 --> 00:04:23.780\nOnce that's enabled, people will be\nable to SSH in and get connected.\n\n78\n00:04:23.780 --> 00:04:25.190\nWe can test that out.\n\n79\n00:04:25.190 --> 00:04:28.210\nWe can test it from our own system or\nanother one.\n\n80\n00:04:28.210 --> 00:04:32.726\nIf I look at my IP address,\nI can find the IP of my system.\n\n81\n00:04:32.726 --> 00:04:36.590\nSo I am .118, and I'm just going to\nswitch over to another machine here.\n\n82\n00:04:36.590 --> 00:04:39.400\nAnd I will try and connect to that.\n\n83\n00:04:39.400 --> 00:04:42.002\nSo I'm gonna SSH.\nLet me just make this a little bigger so\n\n84\n00:04:42.002 --> 00:04:43.450\nwe can all see.\n\n85\n00:04:43.450 --> 00:04:45.460\nI'm gonna SSH into that system.\n\n86\n00:04:46.950 --> 00:04:48.012\nAnd I'll log in as me.\n\n87\n00:04:48.012 --> 00:04:53.958\nAll right, it's gonna reach out, and since\nthis is the first time I'm connecting,\n\n88\n00:04:53.958 --> 00:04:57.590\nit's presenting me with a certificate.\n\n89\n00:04:57.590 --> 00:05:00.320\nAnd I need to know if that's\na trustworthy certificate.\n\n90\n00:05:00.320 --> 00:05:03.910\nWell, the server automatically\ngenerated that certificate for me,\n\n91\n00:05:03.910 --> 00:05:06.660\nso this is the very first time\nthat I'm being presented with it.\n\n92\n00:05:06.660 --> 00:05:11.170\nBut if I record this fingerprint,\nfrom now on when I connect I can verify\n\n93\n00:05:11.170 --> 00:05:13.220\nthat I am actually\nconnecting to the same one.\n\n94\n00:05:13.220 --> 00:05:16.690\nNow fortunately, I don't have to do\nthat because it's going to say that.\n\n95\n00:05:16.690 --> 00:05:20.090\nSee how it says permanently added,\nit's saving it to my list of known hosts.\n\n96\n00:05:20.090 --> 00:05:23.770\nAnd so in the future if that key ever\ndoesn't match, it will let me know and\n\n97\n00:05:23.770 --> 00:05:24.539\nit'll throw a warning.\n\n98\n00:05:25.610 --> 00:05:26.210\nBut otherwise,\n\n99\n00:05:26.210 --> 00:05:30.790\nI authenticate, I connect, and\nnow I'm logged into that system using SSH.\n\n100\n00:05:30.790 --> 00:05:34.490\nSo I know that SSH is working,\nand it's up, and it's running.\n\n101\n00:05:34.490 --> 00:05:35.620\nSo we're done, right?\n\n102\n00:05:35.620 --> 00:05:38.010\nWell, if all you wanted\nto do was enable SSH and\n\n103\n00:05:38.010 --> 00:05:40.310\nget in there, then yes, you're done.\n\n104\n00:05:40.310 --> 00:05:44.150\nBut there's a number of neat little things\nthat we can do to kind of manipulate\n\n105\n00:05:44.150 --> 00:05:47.500\nthe way that SSH works to\nsecure it from attack.\n\n106\n00:05:47.500 --> 00:05:51.240\nAnd there's some great things that you can\ndo like changing that default port number.\n\n107\n00:05:51.240 --> 00:05:55.840\nWe can change the way we authenticate\nfrom a password to a certificate.\n\n108\n00:05:55.840 --> 00:05:58.810\nAnd so if those are things that interest\nyou, stay tuned cuz we've got more\n\n109\n00:05:58.810 --> 00:06:01.770\nsegments coming up that are gonna\nshow how to do each of those.\n\n110\n00:06:01.770 --> 00:06:05.290\nBut if all you were looking\nwas to enable SSH, it's done.\n\n111\n00:06:05.290 --> 00:06:07.030\nYou're in business and off you go.\n\n112\n00:06:07.030 --> 00:06:08.770\nEnjoy your secure shell.\n\n113\n00:06:08.770 --> 00:06:09.870\nAll right, well stayed tuned.\n\n114\n00:06:09.870 --> 00:06:12.011\nWe've got more segments coming up.\n\n115\n00:06:12.011 --> 00:06:17.629\n[SOUND]\n\n",
          "vimeoId": "131436514"
        },
        {
          "description": null,
          "length": "873",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-2-1-using_certificates_with_ssh-060415.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-2-1-using_certificates_with_ssh-060415-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-2-1-using_certificates_with_ssh-060415-sm.jpg",
          "title": "Using Certificates with SSH",
          "transcript": "WEBVTT\n\n1\n00:00:00.144 --> 00:00:07.574\n[MUSIC]\n\n2\n00:00:07.574 --> 00:00:11.683\nIn this segment we're gonna take\na look at using certificates with SSH.\n\n3\n00:00:11.683 --> 00:00:15.566\nNow, if you just enabled your SSH service,\none thing you'll notice is that when you\n\n4\n00:00:15.566 --> 00:00:19.137\nauthenticate against it, you authenticate\nwith a user name and a password.\n\n5\n00:00:19.137 --> 00:00:23.007\nAnd that's tried and true authentication\nthat's been around for a long time, and\n\n6\n00:00:23.007 --> 00:00:25.768\nI think we all know the weakness\nof passwords at this point,\n\n7\n00:00:25.768 --> 00:00:28.690\nis they can be guessed and\nthey can be keylogged.\n\n8\n00:00:28.690 --> 00:00:31.880\nSo a better way to authenticate\nagainst our servers\n\n9\n00:00:31.880 --> 00:00:34.580\nis to use certificate-based\nauthentication.\n\n10\n00:00:34.580 --> 00:00:39.920\nYou still provide a username, but instead\nof a password, you send a certificate.\n\n11\n00:00:39.920 --> 00:00:41.330\nBy passing that certificate,\n\n12\n00:00:41.330 --> 00:00:46.060\nyou say that you are who you say\nyou are via a very secure file.\n\n13\n00:00:46.060 --> 00:00:47.410\nThe other side knows that you're\n\n14\n00:00:48.450 --> 00:00:51.935\nthe right person to connect thanks\nto that certificate identifying you.\n\n15\n00:00:51.935 --> 00:00:53.905\nThen you connect and you can work.\n\n16\n00:00:53.905 --> 00:00:57.165\nVery difficult to keylog something\nyou don't even type on a keyboard,\n\n17\n00:00:57.165 --> 00:01:00.265\nand guessing one of these certificates\nis very difficult because they're\n\n18\n00:01:00.265 --> 00:01:04.485\nusually in excess of a thousand\nbits of security in them.\n\n19\n00:01:04.485 --> 00:01:07.685\nSo that is a very, very secure password.\n\n20\n00:01:07.685 --> 00:01:10.445\nNow, a lot of people don't like to do\nthis, and they do it because they think\n\n21\n00:01:10.445 --> 00:01:13.280\nit's difficult to set up, and\nit's actually pretty easy.\n\n22\n00:01:13.280 --> 00:01:15.240\nLet me show you the process, all right?\n\n23\n00:01:15.240 --> 00:01:19.500\nIf we want to authenticate with\na certificate, what we have to do is for\n\n24\n00:01:19.500 --> 00:01:24.510\nourselves, we have to generate\na private and a public key.\n\n25\n00:01:24.510 --> 00:01:25.850\nThat private key, that's for us.\n\n26\n00:01:25.850 --> 00:01:28.630\nWe hold on to that,\nwe don't give it to anybody, right?\n\n27\n00:01:28.630 --> 00:01:29.680\nThat's us.\n\n28\n00:01:30.680 --> 00:01:32.390\nAnd then we generate a public key,\n\n29\n00:01:32.390 --> 00:01:36.090\nand we put that public key on any\nserver that we want to connect to.\n\n30\n00:01:36.090 --> 00:01:38.200\nYou can put it on one server or\n1,000 servers.\n\n31\n00:01:38.200 --> 00:01:40.590\nYou put that public key on\nas many servers as you want.\n\n32\n00:01:40.590 --> 00:01:43.290\nYou could post the public key\non the Internet and say here,\n\n33\n00:01:43.290 --> 00:01:44.380\nshare it with people.\n\n34\n00:01:44.380 --> 00:01:45.370\nIt's the public key.\n\n35\n00:01:45.370 --> 00:01:46.460\nIt's safe.\n\n36\n00:01:46.460 --> 00:01:50.800\nThe public key allows the system to\nencrypt data and send it to you, and\n\n37\n00:01:50.800 --> 00:01:54.310\nyou can decrypt that data cuz you're\nthe one that has the private key.\n\n38\n00:01:54.310 --> 00:01:55.970\nBut you're the only one that decrypt.\n\n39\n00:01:55.970 --> 00:01:57.020\nYou're the only one that's got it.\n\n40\n00:01:57.020 --> 00:01:58.770\nSo that's kind of a little safety net.\n\n41\n00:01:58.770 --> 00:02:02.600\nSo the first step in using SSH\nauthentication with a certificate\n\n42\n00:02:02.600 --> 00:02:04.350\nis to get those keys generated.\n\n43\n00:02:04.350 --> 00:02:05.630\nSo I'm gonna start here on my machine.\n\n44\n00:02:05.630 --> 00:02:10.770\nNow, this is my client machine, my laptop,\nnot the server that I wanna get into.\n\n45\n00:02:10.770 --> 00:02:15.350\nHere on my laptop,\nI need to generate a certificate to use.\n\n46\n00:02:15.350 --> 00:02:21.100\nAnd so I'm gonna say ssh-keygen -t rsa.\n\n47\n00:02:21.100 --> 00:02:24.890\nI'm telling it to generate a key, and for\nthe type, I'm gonna make it an RSA key,\n\n48\n00:02:24.890 --> 00:02:26.000\nall right?\n\n49\n00:02:26.000 --> 00:02:28.320\nIt's gonna generate that key pair.\n\n50\n00:02:28.320 --> 00:02:32.350\nNow, the default location to put it\nis in your user profile in a folder,\n\n51\n00:02:32.350 --> 00:02:36.760\na hidden folder, .ssh, and\nit's just calling it id_rsa.\n\n52\n00:02:36.760 --> 00:02:37.870\nI'm gonna go with that default.\n\n53\n00:02:39.340 --> 00:02:42.282\nThen we can put a passphrase on the file.\n\n54\n00:02:42.282 --> 00:02:45.100\nThe passphrase is gonna secure that\nfile so that if anybody wanted to\n\n55\n00:02:45.100 --> 00:02:48.660\nopen that passkey and look at it,\nthey'd need the passphrase.\n\n56\n00:02:48.660 --> 00:02:50.840\nNow, you could provide that here,\nbut when you use the key,\n\n57\n00:02:50.840 --> 00:02:52.550\nyou're gonna have to\nprovide the password again.\n\n58\n00:02:52.550 --> 00:02:54.415\nI'm gonna leave it blank for my example.\n\n59\n00:02:54.415 --> 00:02:57.840\nBut you can populate that\nwith whatever you want.\n\n60\n00:02:57.840 --> 00:03:00.290\nOnce that's done, I get a key fingerprint.\n\n61\n00:03:00.290 --> 00:03:03.230\nSo I can see that right here, this is\nthe fingerprint assigned to my key.\n\n62\n00:03:03.230 --> 00:03:06.205\nIt's tied to donpezet@DPLAPTOP.local, and\n\n63\n00:03:06.205 --> 00:03:11.015\nI see some random art here of the key,\nwhich is somewhat useless.\n\n64\n00:03:11.015 --> 00:03:13.865\nAll right, so I've got that,\nand now I'm in business.\n\n65\n00:03:13.865 --> 00:03:17.315\nAnd notice it was an RSA 2,048 bit key,\nso that's pretty strong.\n\n66\n00:03:19.425 --> 00:03:24.295\nNow, I need to tell the server to\ntrust me based on the certificate.\n\n67\n00:03:24.295 --> 00:03:28.555\nWell, if I go into that .ssh directory and\nI look at what's in there,\n\n68\n00:03:28.555 --> 00:03:30.373\nsee how it created two files?\n\n69\n00:03:30.373 --> 00:03:35.122\nThere's this id_rsa,\nthat's my private key, all right,\n\n70\n00:03:35.122 --> 00:03:39.336\nthat's the one that I need\nto keep private just for me.\n\n71\n00:03:39.336 --> 00:03:42.934\nAnd there's id_rsa.pub.\n\n72\n00:03:42.934 --> 00:03:45.060\nThat's my public key.\n\n73\n00:03:45.060 --> 00:03:48.270\nThe public key is the one that I need to\ndistribute to anybody I want to connect\n\n74\n00:03:48.270 --> 00:03:51.140\nto, any server, and\nif it gets out there, if people get it,\n\n75\n00:03:51.140 --> 00:03:53.260\nit's no big deal,\nit's just the public key, right?\n\n76\n00:03:53.260 --> 00:03:55.030\nThat means that they can encrypt data and\nsend it to you,\n\n77\n00:03:55.030 --> 00:03:57.220\nit doesn't mean they can decrypt anything.\n\n78\n00:03:57.220 --> 00:03:59.375\nSo the public key is\nthe one we distribute.\n\n79\n00:04:00.645 --> 00:04:02.465\nNow, I need to get that\nloaded on the server,\n\n80\n00:04:02.465 --> 00:04:05.715\nand there's a few different\nways to go about it, right?\n\n81\n00:04:05.715 --> 00:04:08.345\nThere's some neat, handy utilities that\nare out there that you might have.\n\n82\n00:04:08.345 --> 00:04:12.780\nLike you might have\nthe ssh-copy-id command.\n\n83\n00:04:12.780 --> 00:04:16.970\nAnd if you've got that, you can use that\ncommand to copy your ID up to a server,\n\n84\n00:04:16.970 --> 00:04:18.600\nand this time you'll\nauthenticate with a user and\n\n85\n00:04:18.600 --> 00:04:22.670\npassword, and then it copies the ID and\nthen you're fine from there, all right?\n\n86\n00:04:22.670 --> 00:04:23.900\nBut not everybody has that,\n\n87\n00:04:23.900 --> 00:04:28.320\nnotice I don't have that here on my\nsystem, I guess I can get it real quick.\n\n88\n00:04:28.320 --> 00:04:33.030\nI'm sure it's in one of the repositories,\nand yeah, there it is.\n\n89\n00:04:33.030 --> 00:04:35.240\nSo now I've got it.\n\n90\n00:04:35.240 --> 00:04:37.730\nAnd if I wanted to use\nthat command I could.\n\n91\n00:04:37.730 --> 00:04:42.190\nYou just specify where the key is coming\nfrom, what server you're gonna connect\n\n92\n00:04:42.190 --> 00:04:45.705\nto and where you want it to go and then\nyou provide your username and password.\n\n93\n00:04:45.705 --> 00:04:48.510\nBut, you really don't\nneed a client to do this.\n\n94\n00:04:48.510 --> 00:04:51.450\nThe key, it's just text.\n\n95\n00:04:51.450 --> 00:04:59.930\nIf we take a look at the key itself,\nif I pull my id_rsa.pub file,\n\n96\n00:04:59.930 --> 00:05:04.280\nI'm just gonna do a little more of it, and\nwe'll pull that up here in the listing.\n\n97\n00:05:04.280 --> 00:05:09.150\nAnd the key starts right up here\nwith this line that says ssh-rsa.\n\n98\n00:05:09.150 --> 00:05:12.180\nAnd then after that,\nyou see the key, right?\n\n99\n00:05:12.180 --> 00:05:13.700\nThat's my public key.\n\n100\n00:05:13.700 --> 00:05:17.500\nI'm just gonna highlight that and\ncopy that into my clipboard.\n\n101\n00:05:17.500 --> 00:05:21.700\nAnd once I've got that copied,\nI can connect to the server and\n\n102\n00:05:21.700 --> 00:05:24.830\nI can paste that into the authorized\nhostfile on the server, right?\n\n103\n00:05:24.830 --> 00:05:27.650\nI don't need a crazy special command for\nthat.\n\n104\n00:05:27.650 --> 00:05:28.780\nI can just remote in.\n\n105\n00:05:28.780 --> 00:05:30.320\nSo I'm gonna remote to that server.\n\n106\n00:05:32.575 --> 00:05:35.495\nWhoops, and when I authenticate I'm\nauthenticating with a username and\n\n107\n00:05:35.495 --> 00:05:36.965\na password, cuz that's the default, right?\n\n108\n00:05:36.965 --> 00:05:38.755\nThat's how this stuff is set up right now.\n\n109\n00:05:39.765 --> 00:05:42.365\nAnd when I'm on the server\n\n110\n00:05:42.365 --> 00:05:46.375\nI just need to tell it that there's\nthis key that's authorized for me.\n\n111\n00:05:46.375 --> 00:05:51.185\nSo here in my home directory on\nthe server, if I don't have a .ssh folder\n\n112\n00:05:51.185 --> 00:05:53.675\nI'll need to create one, and\nit looks like I don't have one, so\n\n113\n00:05:53.675 --> 00:05:59.990\nI'm gonna make a folder called .ssh and\nI'm gonna change into that folder.\n\n114\n00:05:59.990 --> 00:06:06.339\nAnd I'm just gonna make a file in here\ncalled authorized_keys, all right?\n\n115\n00:06:06.339 --> 00:06:11.680\nAnd in this file you\njust list any public key\n\n116\n00:06:11.680 --> 00:06:14.830\nthat's allowed to be authorized as you,\nto serve as your password.\n\n117\n00:06:14.830 --> 00:06:17.460\nAnd you can paste in one or more keys.\n\n118\n00:06:17.460 --> 00:06:18.665\nIt's just one key per line.\n\n119\n00:06:18.665 --> 00:06:19.873\nYou put in a key, you press Enter.\n\n120\n00:06:19.873 --> 00:06:21.336\nYou put in another key, you press Enter.\n\n121\n00:06:21.336 --> 00:06:23.720\nSo you could have two keys,\nyou could have 200 keys.\n\n122\n00:06:23.720 --> 00:06:24.320\nIt doesn't matter.\n\n123\n00:06:24.320 --> 00:06:25.920\nYou just throw those in here.\n\n124\n00:06:25.920 --> 00:06:27.470\nThere's my first key.\n\n125\n00:06:27.470 --> 00:06:32.260\nIf somebody were to connect,\nthis key is the public key\n\n126\n00:06:32.260 --> 00:06:36.130\ntied to my private key that would allow\nthem to represent that it was me.\n\n127\n00:06:39.000 --> 00:06:41.400\nAll right, so I'll go ahead and\njust save that.\n\n128\n00:06:41.400 --> 00:06:43.160\nAnd now I've got that key up there.\n\n129\n00:06:43.160 --> 00:06:46.970\nIf I had used that ssh-copy-id command,\nthat's exactly what it would've done.\n\n130\n00:06:46.970 --> 00:06:50.510\nIt SSHs in, creates the file,\nloads the key, and then gets out, right?\n\n131\n00:06:50.510 --> 00:06:51.790\nSo pretty straightforward there.\n\n132\n00:06:53.160 --> 00:06:56.420\nAll right, so at this stage,\nI've got my key up there.\n\n133\n00:06:56.420 --> 00:06:58.780\nIt knows that's valid for me.\n\n134\n00:06:58.780 --> 00:07:01.830\nBut, I'm still doing\npassword authentication.\n\n135\n00:07:01.830 --> 00:07:04.550\nSo at this stage I could actually\nauthenticate with both password\n\n136\n00:07:04.550 --> 00:07:08.140\nauthentication or\ncertificate authentication, it's up to me.\n\n137\n00:07:08.140 --> 00:07:12.420\nWell, if we want, we could disable\npassword authentication, but\n\n138\n00:07:12.420 --> 00:07:15.288\nit's always a good idea to\ntest before you do that.\n\n139\n00:07:15.288 --> 00:07:20.020\nSo I'm gonna get out of the server,\nall right, so I'm out of the server now.\n\n140\n00:07:20.020 --> 00:07:23.130\nAnd I'm gonna connect with my key and\n\n141\n00:07:23.130 --> 00:07:27.080\nmake sure that I actually get\nconnected and that things work right.\n\n142\n00:07:27.080 --> 00:07:29.840\nSo I'm gonna reach out here and\nget into the system.\n\n143\n00:07:29.840 --> 00:07:31.980\nSo I'll do a little SSH.\n\n144\n00:07:33.710 --> 00:07:38.670\nAnd normally, I would just specify\nmy username at the server name, but\n\n145\n00:07:38.670 --> 00:07:43.040\nhere I'm going to say -i, and\nI'm gonna point to my private key.\n\n146\n00:07:43.040 --> 00:07:45.970\nSo my private key is right here\nin the folder that I'm in, so\n\n147\n00:07:45.970 --> 00:07:48.520\nI'm gonna point to that id_rsa file.\n\n148\n00:07:48.520 --> 00:07:50.700\nThis is the private key,\nthe one I wanna keep safe, right,\n\n149\n00:07:50.700 --> 00:07:53.430\nso I don't wanna distribute\nthis to other people.\n\n150\n00:07:53.430 --> 00:07:55.690\nAnd then I'm gonna be\nconnecting to this server.\n\n151\n00:07:57.010 --> 00:07:58.980\nAnd I'll punch in its IP address.\n\n152\n00:07:58.980 --> 00:08:02.940\nNow when I go to connect,\nit's gonna ask for a password.\n\n153\n00:08:02.940 --> 00:08:04.010\nWhy is it asking for a password?\n\n154\n00:08:04.010 --> 00:08:07.332\nOh, it's asking for a password because I\nstill left password authentication on.\n\n155\n00:08:07.332 --> 00:08:09.970\nI'm actually doing both forms\nof authentication right now.\n\n156\n00:08:09.970 --> 00:08:14.580\nSo when I get connected I'm gonna be\ndoubly secure and so it's gonna log in.\n\n157\n00:08:14.580 --> 00:08:16.894\nSo I do need to go in and\ndisable the password authentication and\n\n158\n00:08:16.894 --> 00:08:19.080\nmake sure that certificate\nauthentication is enabled.\n\n159\n00:08:19.080 --> 00:08:21.337\nSo let's go double check that,\nwell, I'm on the server,\n\n160\n00:08:21.337 --> 00:08:22.384\nwhich is where I need to be.\n\n161\n00:08:22.384 --> 00:08:27.366\nOn the server we have some settings stored\naway in SSHD's config, the SSHDaemon,\n\n162\n00:08:27.366 --> 00:08:32.438\nits config file defines whether or not it\ncan do certificate authentication or not.\n\n163\n00:08:32.438 --> 00:08:34.759\nSo I need to go and double-check that.\n\n164\n00:08:34.759 --> 00:08:37.174\nSo I'm gonna go and edit that file.\n\n165\n00:08:37.174 --> 00:08:40.909\nAnd you do need to be an administrator for\nthis, so I'm gonna do sudo, and\n\n166\n00:08:40.909 --> 00:08:42.150\nI'll edit the file.\n\n167\n00:08:42.150 --> 00:08:48.470\nIt's in /etc/ssh/sshd_config.\n\n168\n00:08:48.470 --> 00:08:51.460\nI'm gonna edit that file, and\nyou'll see a lot of stuff in here.\n\n169\n00:08:51.460 --> 00:08:52.940\nThere's a ton of information.\n\n170\n00:08:52.940 --> 00:08:53.930\nBut as you scroll through,\n\n171\n00:08:53.930 --> 00:08:58.170\nwhat I'm looking for is the section that\ntalks about public key authorization, and\n\n172\n00:08:58.170 --> 00:09:01.230\nit should be in here, and\nmaybe just commented out.\n\n173\n00:09:01.230 --> 00:09:03.850\nIf it's not in here,\nwe'll just need to enable it.\n\n174\n00:09:03.850 --> 00:09:04.350\nThere it is.\n\n175\n00:09:05.540 --> 00:09:08.050\nPubkeyAuthentication yes.\n\n176\n00:09:08.050 --> 00:09:10.750\nBut notice how it's got that\npound symbol at the beginning, so\n\n177\n00:09:10.750 --> 00:09:13.610\ncertificate authentication is\nactually disabled right now.\n\n178\n00:09:13.610 --> 00:09:16.820\nSo if I want to use that I'm\ngonna need to turn it on.\n\n179\n00:09:16.820 --> 00:09:21.900\nAnd so I'm gonna turn that on,\nall right, so there's that, and then\n\n180\n00:09:21.900 --> 00:09:25.420\nafter that we'll see a few other settings\nthat I may or may not need to turn on.\n\n181\n00:09:25.420 --> 00:09:28.270\nThis one, AuthorizedKeysForFile.\n\n182\n00:09:28.270 --> 00:09:31.430\nSo when it goes to look for\na user's keys, where does it look?\n\n183\n00:09:31.430 --> 00:09:35.650\nWell, the default is it looks in their\nprofile at .ssh/authorized_keys.\n\n184\n00:09:35.650 --> 00:09:38.650\nThat's why I named that file that way,\ncuz that's the default.\n\n185\n00:09:38.650 --> 00:09:41.440\nYou could change it if you wanted, but\nthat's the default, I'm good there.\n\n186\n00:09:42.650 --> 00:09:45.700\nNow there'll be another\nline in here somewhere\n\n187\n00:09:45.700 --> 00:09:48.100\nwhich says PasswordAuthentication.\n\n188\n00:09:48.100 --> 00:09:52.010\nAnd you can set that, here it is,\nright now it's set to yes.\n\n189\n00:09:52.010 --> 00:09:53.310\nWe can change that to no.\n\n190\n00:09:53.310 --> 00:09:57.460\nAnd at that point, we will only do\ncertificate-based authentication.\n\n191\n00:09:58.710 --> 00:10:02.450\nOnly do that if you've tested certificate\nauthentication first, though, right?\n\n192\n00:10:02.450 --> 00:10:06.150\nI haven't tested mine yet, so\nI'm kinda worried about it, but\n\n193\n00:10:06.150 --> 00:10:10.920\nif you know you've got it right, then you\ncan go in here and just change that to no.\n\n194\n00:10:10.920 --> 00:10:14.310\nAnd now, you won't allow\npassword-based authentication.\n\n195\n00:10:14.310 --> 00:10:16.890\nNow remember, if you lock yourself out,\nyou could always just go to the other\n\n196\n00:10:16.890 --> 00:10:19.940\nmachine, and fix it,\nif you physically go to it.\n\n197\n00:10:19.940 --> 00:10:24.790\nBut if this machine is 1,000 miles away,\nmake sure you test first, all right?\n\n198\n00:10:24.790 --> 00:10:26.928\nThe only other thing I need to\nworry about is right down here,\n\n199\n00:10:26.928 --> 00:10:29.980\nChallengeResponseAuthentication, all\nright?\n\n200\n00:10:29.980 --> 00:10:32.770\nNotice how it's set to no right now and\n\n201\n00:10:32.770 --> 00:10:36.250\nit's telling me change to no\nto disable s/key passwords.\n\n202\n00:10:36.250 --> 00:10:39.310\nWell, that's already turned off,\nso I'm good to go there.\n\n203\n00:10:39.310 --> 00:10:43.430\nSo at this point, we really should\njust be using certificates.\n\n204\n00:10:43.430 --> 00:10:48.990\nI'm gonna save that file, and\nI'm gonna restart that service real quick.\n\n205\n00:10:48.990 --> 00:10:55.600\nSo let me just give a quick\nrestart to SSHD, there we go.\n\n206\n00:10:55.600 --> 00:10:56.780\nSo that one's gonna restart.\n\n207\n00:10:56.780 --> 00:10:58.774\nSo now I know it's gonna\nbe using that certificate.\n\n208\n00:10:58.774 --> 00:10:59.594\nAnd, oh, you know what?\n\n209\n00:10:59.594 --> 00:11:02.450\nActually, it probably won't\nrestart while I'm in it.\n\n210\n00:11:02.450 --> 00:11:05.470\nLet me jump over to this server and\ndo it from there.\n\n211\n00:11:06.710 --> 00:11:10.340\nSo now I'm ready to test and see whether\nI can log in with my certificate, right?\n\n212\n00:11:10.340 --> 00:11:13.710\nSo I jump back down to my command line and\nI'm gonna do ssh.\n\n213\n00:11:13.710 --> 00:11:18.325\nAnd normally I would do dpezet at and\nthe server I'm connecting to.\n\n214\n00:11:18.325 --> 00:11:22.735\nThis time I'm gonna add a little -i, cuz I\nneed to import what key I'm gonna use, so\n\n215\n00:11:22.735 --> 00:11:28.156\nI'm gonna give it the key,\nwhich would be ~/.ssh/,\n\n216\n00:11:28.156 --> 00:11:33.210\nand then my id_rsa file, right?\n\n217\n00:11:33.210 --> 00:11:37.050\nNow, notice I'm providing the private key,\nnot the public one.\n\n218\n00:11:37.050 --> 00:11:40.590\nWell, I'm not actually gonna send the\nprivate key up to the other server, right?\n\n219\n00:11:40.590 --> 00:11:43.250\nI'm gonna connect to the other server,\nthey're gonna present a key to me,\n\n220\n00:11:43.250 --> 00:11:46.000\nI'm gonna be able to decrypt the data\nthey send to me and send it back.\n\n221\n00:11:46.000 --> 00:11:48.330\nThat's how they'll know\nthat I am who I am.\n\n222\n00:11:48.330 --> 00:11:51.730\nSo, I'm just telling SSH to\nuse that when it connects.\n\n223\n00:11:52.930 --> 00:11:56.690\nAnd then I'll specify the server\nthat I'm connecting to, all right?\n\n224\n00:11:56.690 --> 00:12:01.220\nNow when it reaches out, it authenticates,\nand notice it didn't ask me for\n\n225\n00:12:01.220 --> 00:12:02.380\na password, right?\n\n226\n00:12:02.380 --> 00:12:03.480\nNo password prompt.\n\n227\n00:12:03.480 --> 00:12:07.000\nAnd that's because the certificate\nis what was used to authenticate.\n\n228\n00:12:07.000 --> 00:12:10.940\nMy public key is on the server, and\nmy user's authorized to use it.\n\n229\n00:12:10.940 --> 00:12:14.050\nMy private key is right\nhere on my own client.\n\n230\n00:12:14.050 --> 00:12:18.050\nAnd I use that to be able to connect up,\nand now I'm logged into the server.\n\n231\n00:12:18.050 --> 00:12:19.850\nIf somebody was running a keylogger, well,\n\n232\n00:12:19.850 --> 00:12:22.020\nthey would've captured what\nthe name of my file was, but\n\n233\n00:12:22.020 --> 00:12:24.810\nI just used the default anyways, so\nthey would've already known that.\n\n234\n00:12:24.810 --> 00:12:26.830\nThey don't have access to it.\n\n235\n00:12:26.830 --> 00:12:28.550\nIf they intercepted\ntraffic over the network,\n\n236\n00:12:28.550 --> 00:12:31.200\nthey would have seen my public key.\n\n237\n00:12:31.200 --> 00:12:32.830\nBut that's the public key,\nI don't care about that.\n\n238\n00:12:32.830 --> 00:12:35.960\nIt's the private key that's needed to\ndecrypt the information to actually build\n\n239\n00:12:35.960 --> 00:12:37.130\nup the session.\n\n240\n00:12:37.130 --> 00:12:39.380\nBut now I'm in,\nI'm connected to that server.\n\n241\n00:12:39.380 --> 00:12:40.850\nI can start to work.\n\n242\n00:12:40.850 --> 00:12:42.260\nAnd off we go, right?\n\n243\n00:12:42.260 --> 00:12:46.360\nI'm on Linux server now, if I do a uname\n-a, you can see I'm on a Linux host.\n\n244\n00:12:46.360 --> 00:12:47.650\nIf I get out of the session and\n\n245\n00:12:47.650 --> 00:12:52.010\ndo a uname -a, we can see that I'm\nback on my Mac here so I see Darwin.\n\n246\n00:12:52.010 --> 00:12:55.930\nSo I know that I'm connected,\nI know that I used that certificate.\n\n247\n00:12:55.930 --> 00:12:59.830\nNow I can safely disable that password\nauthentication by just saying password\n\n248\n00:12:59.830 --> 00:13:01.080\nauthentication no.\n\n249\n00:13:01.080 --> 00:13:02.460\nAnd that's the end of it, right?\n\n250\n00:13:02.460 --> 00:13:04.790\nNow I just authenticate with certificates.\n\n251\n00:13:04.790 --> 00:13:07.180\nAny other users that need to connect,\n\n252\n00:13:07.180 --> 00:13:11.530\nall I need to do is get them to generate a\nkey and to give me a copy of their public\n\n253\n00:13:11.530 --> 00:13:14.690\nkey and then we can add that to their\nuser account, just like we did here.\n\n254\n00:13:14.690 --> 00:13:16.740\nAdd it to each of the users,\nnow they can log in and\n\n255\n00:13:16.740 --> 00:13:18.820\nuse their own certificate authentication.\n\n256\n00:13:18.820 --> 00:13:23.020\nIt's really important, we see this with\na lot of systems like Amazon EC2, where\n\n257\n00:13:23.020 --> 00:13:26.620\nthey give you a Linux server and they do\ncertificate authentication by default.\n\n258\n00:13:26.620 --> 00:13:27.935\nThey don't do password authentication.\n\n259\n00:13:27.935 --> 00:13:31.200\nYou could turn it on, but\ncertificate's really the way to go, right?\n\n260\n00:13:31.200 --> 00:13:33.500\nOnce this is set up, we're in business.\n\n261\n00:13:33.500 --> 00:13:35.080\nAnd now, off we go.\n\n262\n00:13:35.080 --> 00:13:37.120\nNow, I used a command line here.\n\n263\n00:13:37.120 --> 00:13:39.570\nIf you're on a Windows system,\nit's not much different,\n\n264\n00:13:39.570 --> 00:13:41.940\nexcept you can use various GUI utilities.\n\n265\n00:13:41.940 --> 00:13:44.770\nLike in Windows you might\nuse something like PuTTY.\n\n266\n00:13:44.770 --> 00:13:49.410\nAnd when PuTTY connects to a SSH host,\nsomething like this guy right here, well,\n\n267\n00:13:49.410 --> 00:13:51.830\nby default it does username and\npassword, but\n\n268\n00:13:51.830 --> 00:13:56.380\nif you dig down in its settings\nunder Connections and SSH,\n\n269\n00:13:56.380 --> 00:14:01.740\ninside of SSH there's an off section and\nyou can provide a certificate right there.\n\n270\n00:14:01.740 --> 00:14:04.650\nSo you would put your private key,\nbrowse and pick your private key,\n\n271\n00:14:04.650 --> 00:14:08.040\nand when you connect up to the server,\nit'll do certificate based authentication.\n\n272\n00:14:08.040 --> 00:14:11.712\nSo PuTTY will do it too,\njust right there, in the GUI.\n\n273\n00:14:11.712 --> 00:14:14.870\nAll right, so getting that configured,\nnot that big of a deal.\n\n274\n00:14:14.870 --> 00:14:17.700\nTypos in the key are probably\nthe easiest mistake that you can make on\n\n275\n00:14:17.700 --> 00:14:18.430\nsomething like this.\n\n276\n00:14:18.430 --> 00:14:21.290\nBut otherwise, now we're up and\nrunning and we're using certificates.\n\n277\n00:14:22.370 --> 00:14:23.530\nAll right, well,\nI hope you guys enjoyed that one.\n\n278\n00:14:23.530 --> 00:14:27.788\nStay tuned, we've got more\nSSH configuration coming up.\n\n279\n00:14:27.788 --> 00:14:28.330\n[SOUND]\n\n",
          "vimeoId": "131436528"
        },
        {
          "description": null,
          "length": "666",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-3-1-hardening_ssh-060415-1.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-3-1-hardening_ssh-060415-1-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-ssh/techskills-ssh-3-1-hardening_ssh-060415-1-sm.jpg",
          "title": "Hardening SSH",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:07.543\n[MUSIC]\n\n2\n00:00:07.543 --> 00:00:10.960\nIn this segment,\nwe're gonna take a look at hardening SSH.\n\n3\n00:00:10.960 --> 00:00:11.902\nNow I know what you're thinking,\n\n4\n00:00:11.902 --> 00:00:15.900\nSSH is already an encrypted protocol,\nwhat's there to harden?\n\n5\n00:00:15.900 --> 00:00:19.990\nWell there are certain steps that we\ncan take to make it a more secure,\n\n6\n00:00:19.990 --> 00:00:22.020\nsecure protocol if we want to.\n\n7\n00:00:22.020 --> 00:00:26.480\nA lot of Linux distros out there have\nalready taken steps to make SSHD and\n\n8\n00:00:26.480 --> 00:00:30.020\nreally SSH connections in general, really\nsecure, but some of them haven't and\n\n9\n00:00:30.020 --> 00:00:33.820\nit's a good idea to follow up and\njust double check on it.\n\n10\n00:00:33.820 --> 00:00:38.020\nMany systems still support SSA\nversion one and version two.\n\n11\n00:00:38.020 --> 00:00:40.440\nWell version one is pretty weak.\n\n12\n00:00:40.440 --> 00:00:44.605\nSo, if you have some of your end users\nconnecting and they're using SSH version\n\n13\n00:00:44.605 --> 00:00:48.630\none, in theory someone can intercept\nthat traffic and break it.\n\n14\n00:00:48.630 --> 00:00:52.270\nSo we probably want to make sure\nour servers require version two.\n\n15\n00:00:52.270 --> 00:00:53.890\nYour distribution might already do that,\nbut\n\n16\n00:00:53.890 --> 00:00:56.140\nif it doesn't,\nwe can check it and change it.\n\n17\n00:00:56.140 --> 00:00:58.410\nAnd if you're just not sure,\nit's a good idea to look.\n\n18\n00:00:58.410 --> 00:00:59.710\nSo let's start with that.\n\n19\n00:00:59.710 --> 00:01:01.400\nI'm gonna jump over to my server.\n\n20\n00:01:01.400 --> 00:01:03.380\nAnd this is my server that's up and\nrunning.\n\n21\n00:01:03.380 --> 00:01:04.618\nI'm running Cent OS seven and\n\n22\n00:01:04.618 --> 00:01:07.940\nI just wanna double check that\nit's only supporting version two.\n\n23\n00:01:07.940 --> 00:01:16.220\nSo I'm going to edit\nthe /etc/ssh/sshd_configfiles.\n\n24\n00:01:16.220 --> 00:01:18.850\nWe want to jump in there and\nlook at that config file.\n\n25\n00:01:18.850 --> 00:01:22.450\nAnd you'll see a lot of settings in\nthere that pertain to different things.\n\n26\n00:01:22.450 --> 00:01:26.290\nThe one that I'm looking for\nis where it defines the protocol.\n\n27\n00:01:26.290 --> 00:01:29.210\nAnd as I scroll down,\nI'll find it right here towards the top.\n\n28\n00:01:29.210 --> 00:01:33.670\nNotice it says the default requires\nexplicit activation of protocol 1.\n\n29\n00:01:33.670 --> 00:01:38.680\nOn this system the Cent OS guys and\nreally the red hat guys have decided to\n\n30\n00:01:38.680 --> 00:01:43.850\ndisable version one entirely and\nI've only got version two by default.\n\n31\n00:01:43.850 --> 00:01:48.670\nSome of the other things that you might\nsee in here if your system supports it,\n\n32\n00:01:48.670 --> 00:01:52.230\nyou might see something like protocol one.\n\n33\n00:01:52.230 --> 00:01:55.820\nThat would mean that you just\nhave SSH version one enabled.\n\n34\n00:01:55.820 --> 00:02:00.620\nYou might see protocol one,\ntwo or even protocol two, one.\n\n35\n00:02:00.620 --> 00:02:03.200\nNow, I'm sorry there\nshould be commas there.\n\n36\n00:02:03.200 --> 00:02:05.860\nLet's put those in,\nfollowing proper syntax.\n\n37\n00:02:06.900 --> 00:02:08.800\nIf you see multiple numbers like that,\n\n38\n00:02:08.800 --> 00:02:12.160\nthat mean's it supports both\nversion one and version two.\n\n39\n00:02:12.160 --> 00:02:15.660\nAnd it's the order that\nthey're going to be tried.\n\n40\n00:02:15.660 --> 00:02:17.790\nIf you see one comma two that's the worst.\n\n41\n00:02:17.790 --> 00:02:20.780\nIt's going to try one first and\nthen only if that fails will it go to two.\n\n42\n00:02:20.780 --> 00:02:23.930\nIf you see two comma one that's better,\nit'll try two first and\n\n43\n00:02:23.930 --> 00:02:25.880\nif that fails it'll go to one.\n\n44\n00:02:25.880 --> 00:02:29.410\nBut it would still be even better\nif we just had protocol two.\n\n45\n00:02:29.410 --> 00:02:32.430\nAnd we can see on my\nsystem that's the default.\n\n46\n00:02:32.430 --> 00:02:37.030\nBut if I wanted to absolutely be sure\nI could come in and uncomment that.\n\n47\n00:02:37.030 --> 00:02:39.645\nAnd stick some old pound symbols\nbefore the other ones here.\n\n48\n00:02:39.645 --> 00:02:42.395\nAnd we'll just make sure that\nprotocol two is defined.\n\n49\n00:02:42.395 --> 00:02:44.475\nNow, I'm only running SSH version two.\n\n50\n00:02:44.475 --> 00:02:48.055\nIf somebody tries to connect with version\none, it'll just refuse the connection.\n\n51\n00:02:48.055 --> 00:02:51.795\nSo, that's one way that we\ncan help to ensure security.\n\n52\n00:02:51.795 --> 00:02:56.815\nAnother thing that we might want to do\nis restrict who's allowed to SSH in.\n\n53\n00:02:56.815 --> 00:02:57.385\nRight?\n\n54\n00:02:57.385 --> 00:02:59.655\nThere's some users we might\nwant to allow to connect.\n\n55\n00:02:59.655 --> 00:03:01.430\nThere's some that we might not.\n\n56\n00:03:01.430 --> 00:03:07.400\nMost Linux distributions will prohibit\nthe root user from SSHing in.\n\n57\n00:03:07.400 --> 00:03:11.040\nAnd that's a good thing because if a\nhacker figures out your root password you\n\n58\n00:03:11.040 --> 00:03:13.825\ndon't want them remotely getting\nin on the server, so the root.\n\n59\n00:03:13.825 --> 00:03:16.115\nRoot user's normally explicitly banned.\n\n60\n00:03:16.115 --> 00:03:20.535\nBut after that every other\nuser is allowed to SSH in.\n\n61\n00:03:20.535 --> 00:03:22.235\nYou might want to restrict that.\n\n62\n00:03:22.235 --> 00:03:25.525\nSo, we can go through and\nfilter which users we want to allow and\n\n63\n00:03:25.525 --> 00:03:27.135\nwhich users we don't.\n\n64\n00:03:27.135 --> 00:03:29.165\nYou may already have some\nusers being filtered out.\n\n65\n00:03:29.165 --> 00:03:31.080\nIt's right here in this same file.\n\n66\n00:03:31.080 --> 00:03:32.840\nWe're looking for a few things.\n\n67\n00:03:32.840 --> 00:03:36.030\nThe root user,\nthat's gonna be defined specifically.\n\n68\n00:03:36.030 --> 00:03:37.310\nSo I'm just gonna search in here.\n\n69\n00:03:37.310 --> 00:03:41.820\nI'm looking for a line that mentions root,\nand there it is.\n\n70\n00:03:41.820 --> 00:03:45.840\nPermitRootLogin, and\nsee how it says PermitRootLogin yes, and\n\n71\n00:03:45.840 --> 00:03:46.830\nit's commented out?\n\n72\n00:03:46.830 --> 00:03:48.760\nOn my system it's the default.\n\n73\n00:03:48.760 --> 00:03:50.490\nOn yours it may or may not be.\n\n74\n00:03:50.490 --> 00:03:52.850\nYou can change that to say\npermit root law again no,\n\n75\n00:03:52.850 --> 00:03:57.830\nand that will explicitly deny that so\nthe root user cannot log in.\n\n76\n00:03:57.830 --> 00:04:01.700\nYou can change it to permit root log\nin yes, if you want users to log in.\n\n77\n00:04:01.700 --> 00:04:06.440\nI don't want that, mine's already secure\nso I appreciate that from my system.\n\n78\n00:04:06.440 --> 00:04:10.210\nAnother thing we can do is\nthe allow users option.\n\n79\n00:04:10.210 --> 00:04:14.540\nAllow users lets us define who it\nis that's allowed to connect in.\n\n80\n00:04:14.540 --> 00:04:19.330\nBy default, everybody will be, and so\nthat may or may not be set on our system,\n\n81\n00:04:19.330 --> 00:04:20.650\non our config file.\n\n82\n00:04:20.650 --> 00:04:24.540\nYou can, you can kind of do a quick search\nhere to see if anybody's been authorized\n\n83\n00:04:24.540 --> 00:04:28.320\nand you'll see I've got,\nauthorized key commands and that's it,\n\n84\n00:04:28.320 --> 00:04:32.170\nI don't have any other any other\nentries defined here for that.\n\n85\n00:04:32.170 --> 00:04:36.120\nSo, what I want to do is, I want to\nfilter that, I want to change it so\n\n86\n00:04:36.120 --> 00:04:39.380\nthat only certain users can get in, right?\n\n87\n00:04:39.380 --> 00:04:41.310\nSo that maybe just, maybe just me.\n\n88\n00:04:41.310 --> 00:04:43.340\nI'm the only person that\nneeds to be able to get in.\n\n89\n00:04:43.340 --> 00:04:46.390\nSo, I can come in and I can add a new\nline, and you can add it pretty much\n\n90\n00:04:46.390 --> 00:04:48.830\nanywhere in here, but I'm going to put\nit under this authentication section,\n\n91\n00:04:48.830 --> 00:04:50.590\nbecause that kind of makes sense.\n\n92\n00:04:50.590 --> 00:04:55.620\nAnd what I'm going to do, is I'm going to\nsay, AllowUsers, and then I'm just gonna\n\n93\n00:04:55.620 --> 00:04:59.600\nfollow that up with a list of users, and\nyou just put spaces before their names.\n\n94\n00:04:59.600 --> 00:05:04.340\nSo dpezet, that's my account, and\nthen I might have a John Doe and\n\n95\n00:05:04.340 --> 00:05:09.300\na Tom Smith or whatever and\nI just start listing the users.\n\n96\n00:05:09.300 --> 00:05:12.290\nAnybody in this list\nwill be allowed to SSH.\n\n97\n00:05:12.290 --> 00:05:15.260\nAnybody not in this list\nwon't be able to use it.\n\n98\n00:05:15.260 --> 00:05:18.370\nNow this isn't the only way to filter\nthis, there are a few other technologies\n\n99\n00:05:18.370 --> 00:05:22.830\nin different distros, but this is the way\nwe do it from within the SSH demon itself,\n\n100\n00:05:22.830 --> 00:05:25.080\nso this should work on\npretty much every system.\n\n101\n00:05:25.080 --> 00:05:28.870\nWe put those limits in place,\nnow only those users will have access.\n\n102\n00:05:31.260 --> 00:05:35.610\nAll right now those are two examples of\nhow we can harden SSH and limit it down.\n\n103\n00:05:35.610 --> 00:05:39.680\nAnother great thing we can do\nis change the port number.\n\n104\n00:05:39.680 --> 00:05:42.860\nBy default, SSH uses port number 22.\n\n105\n00:05:42.860 --> 00:05:44.780\nWell, everybody knows that.\n\n106\n00:05:44.780 --> 00:05:48.140\nIf you a run a scanner across\na network and you find live hosts and\n\n107\n00:05:48.140 --> 00:05:50.880\nyou look to see USB 22 open,\nyou'll know whose running SSH.\n\n108\n00:05:50.880 --> 00:05:55.060\nIt's a great way to spot a server\nversus a desktop, that kind of thing.\n\n109\n00:05:55.060 --> 00:05:58.950\nWe might want to change that port\nnumber to something different.\n\n110\n00:05:58.950 --> 00:06:02.060\nWell that's defined right\nhere in the same file,\n\n111\n00:06:02.060 --> 00:06:04.660\nif we do kind of a search through it.\n\n112\n00:06:04.660 --> 00:06:06.280\nWe can try and\nfind that port number in here.\n\n113\n00:06:06.280 --> 00:06:08.250\nIt's way down here at the bottom.\n\n114\n00:06:08.250 --> 00:06:11.480\nI've got where it says port 22, all right.\n\n115\n00:06:11.480 --> 00:06:16.140\nWe can also tailor other things like\nwhat IP addresses it listens on, but\n\n116\n00:06:16.140 --> 00:06:18.430\nI'm concerned about this guy right here,\nport 22.\n\n117\n00:06:18.430 --> 00:06:22.690\nSo if I want to change that I\ncan uncomment that line and\n\n118\n00:06:22.690 --> 00:06:25.400\nI can put a different port number in,\nright?\n\n119\n00:06:25.400 --> 00:06:27.770\nOr what I like to do is I kinda\nlike to leave that line there and\n\n120\n00:06:27.770 --> 00:06:28.960\nthen just add my own.\n\n121\n00:06:28.960 --> 00:06:30.710\nThat way I always remember\nwhat the default is.\n\n122\n00:06:30.710 --> 00:06:34.730\nI'm gonna move mine to port 60,000,\nI'll pick a nice big port.\n\n123\n00:06:34.730 --> 00:06:37.260\nSo I'm gonna change my\ndefault port to port 60,000.\n\n124\n00:06:37.260 --> 00:06:41.300\nNow there's two warnings that we get here,\nand they're kinda right above.\n\n125\n00:06:41.300 --> 00:06:45.290\nFirst off, if you've got a firewall\nturned on, you'll need to open up that\n\n126\n00:06:45.290 --> 00:06:48.850\nport in the firewall, so\nthat people connect on 60,000.\n\n127\n00:06:48.850 --> 00:06:53.180\nThe other thing is if you're on a Red Hat\nbased system, you might be using SE Linux,\n\n128\n00:06:53.180 --> 00:06:57.700\nand SE Linux is a security sublayer\nthat runs on top of Linux that controls\n\n129\n00:06:57.700 --> 00:07:00.170\nwhat ports software is\nallowed to connect to and\n\n130\n00:07:00.170 --> 00:07:02.820\nwhat files software is allowed\nto connect to, and all that.\n\n131\n00:07:02.820 --> 00:07:06.630\nSo I'll need to enable this port for\nthe SSH daemon to connect to.\n\n132\n00:07:06.630 --> 00:07:08.410\nAnd they're just kinda\nwarning us right here and\n\n133\n00:07:08.410 --> 00:07:13.590\ngiving us that syntax Semanage\nport-a to add in the port and\n\n134\n00:07:13.590 --> 00:07:16.480\nthen we're adding in whatever\ntcp port number we want.\n\n135\n00:07:16.480 --> 00:07:22.180\nSo I'm gonna copy that line, because\nI am running SE Linux on the system.\n\n136\n00:07:22.180 --> 00:07:25.460\nSo I'm gonna copy that line so\nI can run that here in a minute.\n\n137\n00:07:25.460 --> 00:07:28.300\nBut otherwise I've got\nthat port 60,000 defined.\n\n138\n00:07:28.300 --> 00:07:31.500\nI'm gonna get out of this file and\nI'm gonna save it.\n\n139\n00:07:31.500 --> 00:07:35.770\nAnd then I'm gonna go ahead and\npaste in that line.\n\n140\n00:07:35.770 --> 00:07:42.370\nSo I'm using se manage to add that port,\nand I'm gonna add port 60000 to SSH.\n\n141\n00:07:42.370 --> 00:07:44.450\nAnd it's just warning me\nhere that's already defined.\n\n142\n00:07:44.450 --> 00:07:47.130\nApparently it's already grabbed it or\nit's tied to something else.\n\n143\n00:07:47.130 --> 00:07:49.070\nSo I might have picked a bad port number.\n\n144\n00:07:49.070 --> 00:07:50.940\nLet's try to pick a lower port number.\n\n145\n00:07:50.940 --> 00:07:53.550\nSomething in the more of a regular range.\n\n146\n00:07:53.550 --> 00:07:55.660\nLet's do like four twos.\n\n147\n00:07:55.660 --> 00:07:58.350\nAnd is it gonna take that one for me?\n\n148\n00:07:59.490 --> 00:08:02.080\nIt's thinking about it, so\nthat means it's probably working.\n\n149\n00:08:02.080 --> 00:08:05.290\nSo I must have picked one in the dynamic\nrange that it's already using for\n\n150\n00:08:05.290 --> 00:08:06.600\nsomething else, so I'll pick 2222.\n\n151\n00:08:06.600 --> 00:08:07.520\nThere we go.\n\n152\n00:08:07.520 --> 00:08:12.490\nI'll need to go back and edit my file\nto use this other port number instead.\n\n153\n00:08:12.490 --> 00:08:15.440\nAnd make sure that I'm\nconsistent across the board.\n\n154\n00:08:15.440 --> 00:08:18.120\nNow, two two two two,\n\n155\n00:08:18.120 --> 00:08:21.120\nwell that's kind of like twenty two\npeople might guess what it is, but\n\n156\n00:08:21.120 --> 00:08:24.140\nat least it's a little bit different\nit gets me into a different range.\n\n157\n00:08:24.140 --> 00:08:26.930\nWhen people do port scans they normally\nscan from ports one through 1,024,\n\n158\n00:08:26.930 --> 00:08:29.050\nbecause those are the registered ports.\n\n159\n00:08:29.050 --> 00:08:31.160\nSo, that'll get me around\nsome of the scans.\n\n160\n00:08:32.380 --> 00:08:34.850\nAll right, now if I stop here,\nI might be done.\n\n161\n00:08:34.850 --> 00:08:38.110\nBut if I have a software firewall\nit might be blocking things too.\n\n162\n00:08:38.110 --> 00:08:42.510\nSo if you're running IP tables, I am, so\nwe'll need to add an exception to that.\n\n163\n00:08:42.510 --> 00:08:46.520\nSo we could go and edit our firewall\nconfiguration, or if you've got it,\n\n164\n00:08:46.520 --> 00:08:50.790\nyou might have the firewall-cmd installed,\nlet me see if I do.\n\n165\n00:08:50.790 --> 00:08:51.960\nAnd, yep, I've got it.\n\n166\n00:08:51.960 --> 00:08:58.010\nSo I can use the firewall-cmd to come\nin and add the exclusions that I need.\n\n167\n00:08:58.010 --> 00:09:04.773\nSo I'm gonna use firewall CMD and\nI'll just do add port 2222/tcp.\n\n168\n00:09:04.773 --> 00:09:07.980\nSo I'm gonna run that.\n\n169\n00:09:07.980 --> 00:09:08.490\nOops.\n\n170\n00:09:08.490 --> 00:09:11.430\nI probably need to add\na little --permanent, or\n\n171\n00:09:11.430 --> 00:09:14.615\nI'll be really sad the next time\nthe server reboots and that is gone.\n\n172\n00:09:14.615 --> 00:09:16.040\n[LAUGH] So there we go.\n\n173\n00:09:16.040 --> 00:09:19.760\nSo now I've got that exclusion put in\nthe firewall, I've got SE Linux happy, so\n\n174\n00:09:19.760 --> 00:09:24.230\neverybody knows about this alternate\nport I do need to restart the SSH daemon\n\n175\n00:09:24.230 --> 00:09:30.700\nthough, it probably hasn't flipped over so\nI'll do a little systemctl restart sshd.\n\n176\n00:09:31.920 --> 00:09:34.320\nAnd that will give it\nthe restart that it needs,\n\n177\n00:09:34.320 --> 00:09:37.170\nnow SSH should be running on port two,\ntwo, two, two.\n\n178\n00:09:37.170 --> 00:09:42.550\nFirewall's open, SE Linux is happening,\nit's happy we'll see if this works.\n\n179\n00:09:42.550 --> 00:09:47.050\nIf I jump back over to my client, I should\nbe able to connect up just like normal.\n\n180\n00:09:47.050 --> 00:09:51.750\nNormally I would specify SSH, my name,\nthe server I wanted to connect to.\n\n181\n00:09:51.750 --> 00:09:54.360\nBut I'm going to add a dash\np to the end of this so\n\n182\n00:09:54.360 --> 00:09:57.380\nit knows to connect on\na different port number.\n\n183\n00:09:57.380 --> 00:10:02.150\nAnd when I run that it's going to reach\nout to the server on the alternate port,\n\n184\n00:10:02.150 --> 00:10:02.970\nand there we are.\n\n185\n00:10:02.970 --> 00:10:05.250\nI'm on the server on\na different port number.\n\n186\n00:10:05.250 --> 00:10:07.720\nNow if somebody is running a port\nscanner and they hit my server,\n\n187\n00:10:07.720 --> 00:10:09.610\nthey're not going to see port 22 at all.\n\n188\n00:10:09.610 --> 00:10:12.300\nIt's going to look closed,\nbecause it is closed.\n\n189\n00:10:12.300 --> 00:10:15.730\nI actually should go and edit my\nfirewall config to remove that port so\n\n190\n00:10:15.730 --> 00:10:17.420\nthey won't even be able to hit that.\n\n191\n00:10:17.420 --> 00:10:19.470\nAnd they'll just move on to other hosts,\nand\n\n192\n00:10:19.470 --> 00:10:20.930\nnot necessarily know that I'm running SSH.\n\n193\n00:10:22.680 --> 00:10:25.670\nSo, this segment we got\na chance to see a couple of\n\n194\n00:10:25.670 --> 00:10:28.260\ndifferent ways to harden SSH, right?\n\n195\n00:10:28.260 --> 00:10:34.640\nWe started just by taking a look at\nhow we could disable the root log in.\n\n196\n00:10:34.640 --> 00:10:38.720\nWe saw how to restrict it to individual\nusers being able to connect in,\n\n197\n00:10:38.720 --> 00:10:43.260\nwe saw how to disable version one of SSH,\nand then we also got a chance\n\n198\n00:10:43.260 --> 00:10:46.960\nright there to see changing\nthe default port number of SSH.\n\n199\n00:10:46.960 --> 00:10:50.360\nAll things that help make\nthe protocol even more secure\n\n200\n00:10:50.360 --> 00:10:51.710\nthan what it already is, right?\n\n201\n00:10:51.710 --> 00:10:54.090\nIt's a great protocol but\nwe always have to take precautions.\n\n202\n00:10:54.090 --> 00:10:57.110\nAll right,\nwell I hope you guys enjoyed that segment.\n\n203\n00:10:57.110 --> 00:10:59.964\nStay tuned.\nWe've go more SSH content coming up.\n\n204\n00:10:59.964 --> 00:11:06.039\n[MUSIC].\n\n",
          "vimeoId": "131436536"
        }
      ],
      "title": "Working with SSH"
    }
  ],
  "url": "ssh",
  "vLab": false
}
