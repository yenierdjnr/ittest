{
  "description": "In this series, Justin is going to combine the powers of the Express web framework with the power of AngularJS on the front end to create a weather forecast web application. Express will be used to proxy the request from the front end to the DarkSky API that is being consumed as a measure of hiding the credentials that are necessary for making the request. Moreover, Angular will interact with the proxy in order to obtain the information needed to render the application. If you want to see how this application comes together, then join us!",
  "descriptionMD": "In this series, Justin is going to combine the powers of the Express web framework with the power of AngularJS on the front end to create a weather forecast web application. Express will be used to proxy the request from the front end to the DarkSky API that is being consumed as a measure of hiding the credentials that are necessary for making the request. Moreover, Angular will interact with the proxy in order to obtain the information needed to render the application. If you want to see how this application comes together, then join us!",
  "length": "34415",
  "name": "Weather Application with Angular Express",
  "practiceExam": false,
  "subtitle": "Angular and Express... Putting it together!",
  "tagUrl": "developer",
  "topics": [
    {
      "episodes": [
        {
          "description": "In this episode, Daniel and Justin give a general overview of what to expect in the upcoming Weather App with AngularJS and Express series. They cover topics like who is the intended audience, what the scope of the series will cover, and what are some specific topics that will be addressed.",
          "length": "161",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-0-0-overview-080117-PGM.00_00_00_00.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-0-0-overview-080117-PGM.00_00_00_00.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-0-0-overview-080117-PGM.00_00_00_00.Still001-sm.jpg",
          "title": "Overview",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:05.986\n[MUSIC]\n\n2\n00:00:05.986 --> 00:00:09.931\nIn this segment, we're gonna take a look\nat what you can expect from our upcoming\n\n3\n00:00:09.931 --> 00:00:14.270\nweather app using AngularJS and Express\nseries that we've got coming up for you.\n\n4\n00:00:14.270 --> 00:00:17.340\nAnd Justin, if you could,\nwould you very much do that for us?\n\n5\n00:00:17.340 --> 00:00:20.520\nTell us what is some of the general ideas\nthat we're gonna take a look at and\n\n6\n00:00:20.520 --> 00:00:21.830\ntopics we're gonna cover in that series.\n\n7\n00:00:21.830 --> 00:00:25.556\n&gt;&gt; So in this series we're actually gonna\ntake a look at a more advanced view of,\n\n8\n00:00:25.556 --> 00:00:27.260\nwell, AngularJS and Express.\n\n9\n00:00:27.260 --> 00:00:29.730\nIn particular,\nwe're gonna be building a proxy service\n\n10\n00:00:29.730 --> 00:00:33.740\nthat consumes an external API,\nnot one, but in facts two APIs.\n\n11\n00:00:33.740 --> 00:00:38.190\nThat would be for weather information\nas well as Google Geocode,\n\n12\n00:00:38.190 --> 00:00:43.390\nwhich is like geolocation but for\naddresses and latitude and longitudes.\n\n13\n00:00:43.390 --> 00:00:46.470\nSo we're gonna be building that service\nin addition to we're gonna be building\n\n14\n00:00:46.470 --> 00:00:50.360\na front end web application that\nconsumes that proxy service.\n\n15\n00:00:50.360 --> 00:00:54.515\nAnd by consumes, I mean, actually uses\nthose end points that we have built to,\n\n16\n00:00:54.515 --> 00:00:58.640\nwell, get the data that it needs\nin order to render an application.\n\n17\n00:00:58.640 --> 00:01:02.480\nWhile building this front end application,\nwe're gonna see a more\n\n18\n00:01:02.480 --> 00:01:05.770\nstructured approach to AngularJS\nthan you may have encountered.\n\n19\n00:01:05.770 --> 00:01:09.770\nAnd that includes using web pack to\nmanage our bundling and deployment and\n\n20\n00:01:09.770 --> 00:01:10.810\nthings of that nature.\n\n21\n00:01:10.810 --> 00:01:14.580\n&gt;&gt; All right, could you also tell us who\nthe intended audience is for this show?\n\n22\n00:01:14.580 --> 00:01:18.550\n&gt;&gt; So the audience for this show should be\npeople who are, you know some JavaScript,\n\n23\n00:01:18.550 --> 00:01:23.320\nyou know HTML, you know CSS, and to\nsome extent you know about web services.\n\n24\n00:01:23.320 --> 00:01:26.130\nSo you've done a few things, right?\n\n25\n00:01:26.130 --> 00:01:29.240\nI would not recommend this if you're\njust trying to get into web development.\n\n26\n00:01:29.240 --> 00:01:31.950\nThere's a lot of more complex topics,\n\n27\n00:01:31.950 --> 00:01:35.060\na lot of assumed knowledge\nas far as the processes.\n\n28\n00:01:35.060 --> 00:01:38.570\nLike using MPM, and Node,\nand things of that nature.\n\n29\n00:01:38.570 --> 00:01:39.550\nSo you should be,\n\n30\n00:01:39.550 --> 00:01:44.260\nI would say, intermediate would be\na best approximation to skill level.\n\n31\n00:01:44.260 --> 00:01:47.800\n&gt;&gt; All right, Justin,\nalso here at DevPro, and ITPro and\n\n32\n00:01:47.800 --> 00:01:50.840\nall the other Pros that we have,\nwe tend to gear\n\n33\n00:01:50.840 --> 00:01:55.360\neither toward a technical type skill that\nyou need to learn, or a certification.\n\n34\n00:01:55.360 --> 00:01:57.510\nWhich one of those categories\ndo we fall under here?\n\n35\n00:01:57.510 --> 00:01:59.460\n&gt;&gt; This is definitely a skill.\n\n36\n00:01:59.460 --> 00:02:01.020\nI wanna get better at what I do.\n\n37\n00:02:01.020 --> 00:02:02.930\nI wanna learn a little\nbit about Webpack and\n\n38\n00:02:02.930 --> 00:02:05.180\nhow that integrates into\nthe front end development.\n\n39\n00:02:05.180 --> 00:02:09.900\nI wanna learn how to use Express and\nother MPM modules to go and\n\n40\n00:02:09.900 --> 00:02:15.200\ngrab data and kind of collectively bundle\nan HTTP response that I can then consume.\n\n41\n00:02:15.200 --> 00:02:19.520\nI wanna know how to deploy those\nin their respective rights.\n\n42\n00:02:19.520 --> 00:02:24.393\nSo this is definitely about powering up,\nand does not have a certification.\n\n43\n00:02:24.393 --> 00:02:28.049\n&gt;&gt; All right, well, if that sounds like\nsomething that might be interesting\n\n44\n00:02:28.049 --> 00:02:31.140\nto you, we look forward to seeing\nyou in the upcoming S series.\n\n45\n00:02:31.140 --> 00:02:37.288\n[MUSIC]\n\n",
          "vimeoId": "228215886"
        },
        {
          "description": "Justin and Zach discuss the purpose of the Weather App with Angular JS & Express, what is going to be built in the series, interacting with an API, creating the API, what technologies we will use, what the DarkSky API is, overview of the DarkSky documentation, how to create a DarkSky account, looking at data through a JSON Viewer plugin through Chrome, DarkSky protocol including non-pay vs. pay for service, protecting your API key, and additional setup needed.",
          "length": "1423",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-1-1-setup-and-introduction-071817-PGM.00_28_17_07.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-1-1-setup-and-introduction-071817-PGM.00_28_17_07.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-1-1-setup-and-introduction-071817-PGM.00_28_17_07.Still001-sm.jpg",
          "title": "Setup and Introduction",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:05.663\n[MUSIC]\n\n2\n00:00:05.663 --> 00:00:06.786\nHello and thank you for\n\n3\n00:00:06.786 --> 00:00:09.751\nwatching DEVPRO.TV,\nhelping you learn wherever you go.\n\n4\n00:00:09.751 --> 00:00:11.380\nI'm Zach Memos, your host.\n\n5\n00:00:11.380 --> 00:00:16.710\nAs we begin a brand new series,\nweather app with AngularJS and Express.\n\n6\n00:00:16.710 --> 00:00:19.710\nAnd right now will be our setup and\nintroduction.\n\n7\n00:00:19.710 --> 00:00:23.400\nAnd bringing us all the information\nwe need is the man with the plan,\n\n8\n00:00:23.400 --> 00:00:24.960\nJustin Dennison, right here.\n\n9\n00:00:24.960 --> 00:00:26.560\n&gt;&gt; Well, hopefully I have a plan.\n\n10\n00:00:26.560 --> 00:00:29.000\nBut before we get started,\na really important question.\n\n11\n00:00:29.000 --> 00:00:29.900\nHow are you today, Zach?\n\n12\n00:00:29.900 --> 00:00:31.800\n&gt;&gt; I am wonderful, and\nI'm really excited about this.\n\n13\n00:00:31.800 --> 00:00:33.390\nCuz this is a brand new series for us.\n\n14\n00:00:33.390 --> 00:00:35.920\nAnd what are we going to be\nbuilding in this series anyway?\n\n15\n00:00:35.920 --> 00:00:39.560\n&gt;&gt; Well, let's give a rundown\nof what our ultimate goal is\n\n16\n00:00:39.560 --> 00:00:41.460\nas these next few episodes.\n\n17\n00:00:41.460 --> 00:00:45.778\nAnd when I say few, where I'm from, a few\ncan mean somewhere between seven and 43.\n\n18\n00:00:45.778 --> 00:00:46.737\n&gt;&gt; [LAUGH]\n&gt;&gt; So\n\n19\n00:00:46.737 --> 00:00:49.480\njust stay tuned and\nwe'll have to find out.\n\n20\n00:00:49.480 --> 00:00:52.040\nNow I do wanna make a quick\nmention about the title,\n\n21\n00:00:52.040 --> 00:00:55.270\nit's on the lower thirds,\nis how the title of these episodes are.\n\n22\n00:00:55.270 --> 00:00:59.873\nWe tend to have a little bit of limited\nreal estate, I do want to assure you we\n\n23\n00:00:59.873 --> 00:01:04.787\nare building the weather app, we are not\njust observing the end result, okay?\n\n24\n00:01:04.787 --> 00:01:09.773\nSo this is going to be an exploratory\nthing for you and me and everything else,\n\n25\n00:01:09.773 --> 00:01:10.760\nall right?\n\n26\n00:01:10.760 --> 00:01:15.010\nSo, ultimately, what we want to do\nis build an AngularJS front end.\n\n27\n00:01:15.010 --> 00:01:19.080\nThat's Angular, preferably,\nwe're gonna use 1.5 and higher.\n\n28\n00:01:19.080 --> 00:01:22.960\nIf you don't know Angular, we have\nwonderful course videos in the library for\n\n29\n00:01:22.960 --> 00:01:25.260\nyou to check out to at\nleast get up to speed.\n\n30\n00:01:25.260 --> 00:01:28.890\nAnd well,\nwe are going to interact with an API, but\n\n31\n00:01:28.890 --> 00:01:31.410\nthere's some limitations to that API.\n\n32\n00:01:31.410 --> 00:01:34.440\nAnd, particularly, it's a very simple API.\n\n33\n00:01:34.440 --> 00:01:35.590\nWhat do I mean by API?\n\n34\n00:01:35.590 --> 00:01:38.140\nApplication programming interface.\n\n35\n00:01:38.140 --> 00:01:39.670\nThis one is going to be web based.\n\n36\n00:01:39.670 --> 00:01:42.620\nWe're gonna make HTTP\nrequests to an HTTP endpoint.\n\n37\n00:01:42.620 --> 00:01:44.210\nAnd we're gonna get information back.\n\n38\n00:01:44.210 --> 00:01:46.330\nThat's where we're gonna\nget our weather data.\n\n39\n00:01:46.330 --> 00:01:47.560\nBut there's a limitation.\n\n40\n00:01:47.560 --> 00:01:49.850\nWe can't do that directly from Angular.\n\n41\n00:01:49.850 --> 00:01:54.460\nIt actually recommends creating well,\nwhat's called a proxy.\n\n42\n00:01:54.460 --> 00:01:59.380\nSo in order to do that, we're going to\nuse Express to build our proxy service.\n\n43\n00:01:59.380 --> 00:02:02.050\nNow, this is not the only\nway that we could do that,\n\n44\n00:02:02.050 --> 00:02:04.940\nbut that's how we're\ngoing to work with it.\n\n45\n00:02:04.940 --> 00:02:07.080\nNow I mentioned we're gonna use an API.\n\n46\n00:02:07.080 --> 00:02:11.750\nThere's a bunch of weather APIs our there,\nwe're going to be using the Dark Sky API.\n\n47\n00:02:11.750 --> 00:02:14.990\nBecause I think it's\na good balance between,\n\n48\n00:02:14.990 --> 00:02:20.010\nwell, it provides a wealth of information,\nbut it's fairly easy to interact with.\n\n49\n00:02:20.010 --> 00:02:26.370\nIt does require you to have credentialing,\nbecause it's not always free.\n\n50\n00:02:26.370 --> 00:02:29.500\nBut what we're gonna do with it will\nbe free, so that's where we are.\n\n51\n00:02:29.500 --> 00:02:33.770\n&gt;&gt; Well can you tell us a little\nbit more about this Dark Sky API?\n\n52\n00:02:33.770 --> 00:02:34.890\nIt rhymes too you know.\n\n53\n00:02:34.890 --> 00:02:35.850\n&gt;&gt; Yeah, Dark Sky API.\n\n54\n00:02:35.850 --> 00:02:36.697\n&gt;&gt; Yeah, yeah.\n\n55\n00:02:36.697 --> 00:02:39.260\n[CROSSTALK]\n&gt;&gt; Can't go wrong with that, right?\n\n56\n00:02:39.260 --> 00:02:40.823\nRon, you're a poet and\ndidn't know it, right?\n\n57\n00:02:40.823 --> 00:02:41.388\n&gt;&gt; Right.\n\n58\n00:02:41.388 --> 00:02:44.796\n&gt;&gt; So let's go ahead and\ntake a look a the Dark Sky API.\n\n59\n00:02:44.796 --> 00:02:49.033\nLet's peruse some of the documentation and\nwe'll get a feel for\n\n60\n00:02:49.033 --> 00:02:50.530\nwhat we need to set up.\n\n61\n00:02:50.530 --> 00:02:56.040\nNow we're gonna have to create\na Dark Sky API, an account for\n\n62\n00:02:56.040 --> 00:03:00.310\nthis because we have to have credentials\nissued to us in order to gain access to\n\n63\n00:03:00.310 --> 00:03:03.290\nthis information, but\nI will show you all of that in good time.\n\n64\n00:03:03.290 --> 00:03:04.090\nSo let's go ahead and\n\n65\n00:03:04.090 --> 00:03:07.980\ntake a look at my screen here and\nwell, where do we want to go?\n\n66\n00:03:07.980 --> 00:03:10.350\nWell, let's just look up Dark Sky.\n\n67\n00:03:10.350 --> 00:03:13.379\nNow interestingly enough, whew,\nI got that super zoomed in.\n\n68\n00:03:14.680 --> 00:03:18.210\nInterestingly enough, Dark Sky,\nif we got to darksky.net,\n\n69\n00:03:18.210 --> 00:03:19.630\nthis is already a weather app.\n\n70\n00:03:19.630 --> 00:03:21.830\nYou're like, hold on,\nwhy do they have a weather app?\n\n71\n00:03:21.830 --> 00:03:25.570\nWell, if they have an API they can\nprobably easily build a weather app.\n\n72\n00:03:25.570 --> 00:03:30.620\nI will also forewarn you we're probably\nnot going to get quite to this extent.\n\n73\n00:03:30.620 --> 00:03:34.680\nNotice all the radar, and\nthe vector based on wind,\n\n74\n00:03:34.680 --> 00:03:39.310\nand low pressure vectors, and\nactually is that, yeah that's high to low.\n\n75\n00:03:39.310 --> 00:03:42.100\nSo you have wind and all this fun stuff.\n\n76\n00:03:42.100 --> 00:03:43.887\nWe're gonna do our own\nlittle flavor of it.\n\n77\n00:03:43.887 --> 00:03:45.904\n&gt;&gt; [SOUND]\n&gt;&gt; On this page though,\n\n78\n00:03:45.904 --> 00:03:48.500\nyou'll notice a few things up here.\n\n79\n00:03:48.500 --> 00:03:51.690\nThere's an app, there's some maps,\nbut then developers.\n\n80\n00:03:51.690 --> 00:03:53.872\nWell goodness gracious,\nthat's what we are.\n\n81\n00:03:53.872 --> 00:03:55.020\n&gt;&gt; Goodness, gracious.\n\n82\n00:03:55.020 --> 00:03:59.910\n&gt;&gt; So we're gonna go to the developer's\nportion and here is the Dark Sky API.\n\n83\n00:03:59.910 --> 00:04:05.770\nNow before we sign up for this account,\nwe kinda take a look at that, we want\n\n84\n00:04:05.770 --> 00:04:11.050\nto go through and look, the first\n1,000 forecasts per day are free.\n\n85\n00:04:11.050 --> 00:04:14.230\nWoo, that's a thousand per day,\nso let's think about it.\n\n86\n00:04:14.230 --> 00:04:17.120\nIf I wanted to use a thousand per day,\nthere's 24 hours in a day,\n\n87\n00:04:18.930 --> 00:04:23.061\nthat's like 20 check-ins,\nno that's more than that.\n\n88\n00:04:23.061 --> 00:04:24.470\n&gt;&gt; [LAUGH]\n&gt;&gt; That's around 50.\n\n89\n00:04:24.470 --> 00:04:27.700\nMan my math was bad there for a moment.\n\n90\n00:04:27.700 --> 00:04:29.426\nThat's around 50 per hour, right?\n\n91\n00:04:29.426 --> 00:04:31.780\n&gt;&gt; Yeah.\n&gt;&gt; That's, that's a lot.\n\n92\n00:04:31.780 --> 00:04:33.920\n&gt;&gt; And for\nsomebody who's really weather conscious.\n\n93\n00:04:33.920 --> 00:04:36.130\n&gt;&gt; Now why would you need the thousand?\n\n94\n00:04:36.130 --> 00:04:38.380\nWell, let's say you\nbuild this application.\n\n95\n00:04:38.380 --> 00:04:39.420\nIt becomes very popular.\n\n96\n00:04:40.560 --> 00:04:42.846\nNow it's not just you doing\ncheck-ins on the weather,\n\n97\n00:04:42.846 --> 00:04:44.847\nit's a bunch of people\nusing your application.\n\n98\n00:04:44.847 --> 00:04:45.469\n&gt;&gt; Right.\n&gt;&gt; And\n\n99\n00:04:45.469 --> 00:04:48.100\nthat 1,000 per hour doesn't seem as crazy.\n\n100\n00:04:48.100 --> 00:04:50.970\nNow I'm not guaranteeing\nthat's what's gonna happen for\n\n101\n00:04:50.970 --> 00:04:52.520\nthe application we're gonna build.\n\n102\n00:04:52.520 --> 00:04:54.880\nBut maybe this'll help you move along and\n\n103\n00:04:54.880 --> 00:05:00.370\nlearn a little more to maybe you'll\nfind something that really catches fire.\n\n104\n00:05:00.370 --> 00:05:06.735\nSo, we got a thousand per day and then\nthey are, well, let's just zoom in here.\n\n105\n00:05:06.735 --> 00:05:12.362\n$0.0001, so\nthat's one one-hundreth of a cent.\n\n106\n00:05:12.362 --> 00:05:14.461\n&gt;&gt; [LAUGHS]\n&gt;&gt; So, one ten-thousandth,\n\n107\n00:05:14.461 --> 00:05:16.014\nis that ten-thousandth?\n\n108\n00:05:16.014 --> 00:05:19.158\nTenths, hundredths, thousandths,\n\n109\n00:05:19.158 --> 00:05:23.277\none ten-thousandths of a dollar per call,\nokay?\n\n110\n00:05:23.277 --> 00:05:26.780\nI know that doesn't seem like a lot,\nbut what if you have a million users?\n\n111\n00:05:26.780 --> 00:05:28.850\nThat could end up being fairly pricey.\n\n112\n00:05:28.850 --> 00:05:33.880\nBut since we get the first 1,000 for\nfree, we have no commitment.\n\n113\n00:05:33.880 --> 00:05:36.350\nNow, what's gonna happen here, right?\n\n114\n00:05:36.350 --> 00:05:41.960\nWhat is going to happen if we go over our\ncall limit and we're not paying for it?\n\n115\n00:05:41.960 --> 00:05:43.061\nThey just shut us down.\n\n116\n00:05:43.061 --> 00:05:46.618\nIt just stops working, and your app will\nkinda go in this weird limbo state, but\n\n117\n00:05:46.618 --> 00:05:47.319\nthat's okay.\n\n118\n00:05:47.319 --> 00:05:49.380\nAnd we don't have to worry about that,\nright?\n\n119\n00:05:50.440 --> 00:05:52.426\nSo, let's go ahead and take a look.\n\n120\n00:05:52.426 --> 00:05:57.790\nI'm not gonna go through the sign-up\nprocess because I've already signed up.\n\n121\n00:05:57.790 --> 00:05:58.510\n&gt;&gt; What?\n\n122\n00:05:58.510 --> 00:06:02.625\n&gt;&gt; I know, I know, I'm a horrible person.\n\n123\n00:06:02.625 --> 00:06:04.942\n&gt;&gt; [LAUGH]\n&gt;&gt; It's okay though.\n\n124\n00:06:04.942 --> 00:06:06.874\nI have, all you need is an email\naddress and a password, and\n\n125\n00:06:06.874 --> 00:06:08.470\na confirmed password\nthen you're registered.\n\n126\n00:06:08.470 --> 00:06:12.672\nNow, what I'm not gonna show you, is they\nwill send you an email to confirm and\n\n127\n00:06:12.672 --> 00:06:16.175\nthis is to keep people from building\nbots that will sign up for a lot\n\n128\n00:06:16.175 --> 00:06:18.843\nof accounts and then just proxy through-\n&gt;&gt; Right, right, right.\n\n129\n00:06:18.843 --> 00:06:20.330\n&gt;&gt; - a great deal of accounts.\n\n130\n00:06:20.330 --> 00:06:24.470\nSo you do have to click on the email and\nverify that.\n\n131\n00:06:24.470 --> 00:06:28.480\nThere is no commitment as\nfar as pay when you sign up.\n\n132\n00:06:28.480 --> 00:06:31.280\nYou don't have to enter a credit\ncard information up front, or\n\n133\n00:06:31.280 --> 00:06:32.020\nat least I didn't.\n\n134\n00:06:32.020 --> 00:06:36.280\nNow, at the time on the recording that\nyou've watching this that may have changed\n\n135\n00:06:36.280 --> 00:06:40.470\njust because that's one way to verify\nyou are actually a human being and\n\n136\n00:06:40.470 --> 00:06:42.230\nyou're not trying to screw the system.\n\n137\n00:06:42.230 --> 00:06:47.060\nSo let's go ahead and login, and\nI'm gonna log in and take a look.\n\n138\n00:06:47.060 --> 00:06:51.223\nI never want to do this and well you\nactually have this nice little analytics\n\n139\n00:06:51.223 --> 00:06:54.014\ndashboard as well as\nbilling history dashboard.\n\n140\n00:06:54.014 --> 00:06:59.350\nYou'll notice I really hammered\naway at it here the last few days.\n\n141\n00:06:59.350 --> 00:07:02.500\nJust testing some things out and\nplaying around.\n\n142\n00:07:02.500 --> 00:07:05.180\nBut notice, I'm gonna show you this.\n\n143\n00:07:05.180 --> 00:07:09.714\nAt the end of this series and\nmaybe at the end of every day,\n\n144\n00:07:09.714 --> 00:07:12.561\nyou never know, this is my API key.\n\n145\n00:07:12.561 --> 00:07:17.800\nNotice it says this is a secret,\nwell you got my secrets, I'm very sorry,\n\n146\n00:07:17.800 --> 00:07:22.230\nand because it is a secret I'm\nprobably gonna just hit reset.\n\n147\n00:07:22.230 --> 00:07:23.640\n&gt;&gt; Just a well known secret.\n\n148\n00:07:23.640 --> 00:07:26.640\n&gt;&gt; Once we kinda hide that\naway I'll reset that.\n\n149\n00:07:26.640 --> 00:07:30.390\nBut notice this URL, and\nwe'll take a look at that URL,\n\n150\n00:07:30.390 --> 00:07:32.610\nand then we'll hop into the documentation.\n\n151\n00:07:32.610 --> 00:07:37.320\nSo that URL is, you click on it,\n\n152\n00:07:37.320 --> 00:07:40.100\nthis is actually the weather forecast for\nAlcatraz.\n\n153\n00:07:40.100 --> 00:07:44.360\nUnless they've changed the latitude and\nlongitude, this is Alcatraz Island.\n\n154\n00:07:44.360 --> 00:07:45.173\nYeah, that Alcatraz.\n\n155\n00:07:45.173 --> 00:07:46.155\n&gt;&gt; Wow, yeah.\n\n156\n00:07:46.155 --> 00:07:47.265\n&gt;&gt; But it's hard to read.\n\n157\n00:07:47.265 --> 00:07:48.457\nCan't really read it, right?\n\n158\n00:07:48.457 --> 00:07:50.495\nSo one of the first tools that we need,\n\n159\n00:07:50.495 --> 00:07:54.382\njust to kinda interact with the JSON\ndata that we get back from this API and\n\n160\n00:07:54.382 --> 00:07:58.289\nmake our lives a little bit easier,\nis well a nice little Chrome plugin.\n\n161\n00:07:58.289 --> 00:08:02.571\nIf we come over to The little three dots,\nright?\n\n162\n00:08:02.571 --> 00:08:05.620\nAnd we'll go to More Tools and\nwe go to Extensions.\n\n163\n00:08:06.860 --> 00:08:09.480\nNow what extensions do I have?\n\n164\n00:08:09.480 --> 00:08:12.850\nWell I have these, but\nI actually need to get more extensions.\n\n165\n00:08:12.850 --> 00:08:20.000\nAnd we're gonna look up json viewer,\njust right like that, so json viewer.\n\n166\n00:08:20.000 --> 00:08:21.570\nNow what is json?\n\n167\n00:08:21.570 --> 00:08:25.450\nWell, if you haven't\ninteracted with JSON before,\n\n168\n00:08:25.450 --> 00:08:28.810\nthis series may be a little\nmind blowing to you.\n\n169\n00:08:28.810 --> 00:08:33.030\nYou should definitely go check out some of\nthe other things that we have built using\n\n170\n00:08:33.030 --> 00:08:38.129\nExpress, and Node, and Angular,\nand some other just raw JavaScript\n\n171\n00:08:39.910 --> 00:08:44.710\nkind of web applications where we interact\nwith APIs in a different capacity.\n\n172\n00:08:44.710 --> 00:08:47.030\nSo to know what JSON is.\n\n173\n00:08:47.030 --> 00:08:49.090\nSo there is some\nassumptive knowledge here.\n\n174\n00:08:49.090 --> 00:08:53.190\nThis very first one under\nextensions called JSON Viewer,\n\n175\n00:08:53.190 --> 00:08:55.810\nyou'll notice developer tools.\n\n176\n00:08:55.810 --> 00:08:56.915\nThat's what we are.\n\n177\n00:08:56.915 --> 00:08:58.240\n&gt;&gt; Mm-hm.\n&gt;&gt; And it's got four and\n\n178\n00:08:58.240 --> 00:09:00.030\nhalf stars at 455 ratings.\n\n179\n00:09:00.030 --> 00:09:02.150\nWhew, I'm gonna go with it.\n\n180\n00:09:02.150 --> 00:09:06.840\nNow I'm not saying these other ones\nare bad, I've just used JSON Viewer for\n\n181\n00:09:06.840 --> 00:09:10.470\na while and that's something that I'm\nfamiliar with in the interface so\n\n182\n00:09:10.470 --> 00:09:11.860\nI'm gonna go with it, all right.\n\n183\n00:09:12.910 --> 00:09:17.970\nSo we're gonna close out of those\nwindows and I'm gonna refresh, and\n\n184\n00:09:17.970 --> 00:09:22.787\nnow I have a nice, pretty print\npreview and this is what I get back.\n\n185\n00:09:22.787 --> 00:09:27.109\nThis entire object is what I get\nback when I visit this URL, okay?\n\n186\n00:09:27.109 --> 00:09:33.330\nSo that's a get request to my special\nprivate key that you shouldn't know.\n\n187\n00:09:33.330 --> 00:09:37.550\nBut I'm gonna get rid of this right\nafter we're done with this episode.\n\n188\n00:09:37.550 --> 00:09:41.570\nAnd then the last part is this pattern.\n\n189\n00:09:41.570 --> 00:09:46.500\nThis says latitude, longitude, okay?\n\n190\n00:09:46.500 --> 00:09:52.140\nNow you do have to know a little bit about\ngeo coordinates in order to use this API.\n\n191\n00:09:52.140 --> 00:09:56.090\nBut, interestingly enough,\nas long as you ask for\n\n192\n00:09:56.090 --> 00:10:00.450\npermission, your browser can get latitude\nand longitude but it's on geo location.\n\n193\n00:10:00.450 --> 00:10:04.030\nOr, there may be better ways to where,\nhey, maybe I call to another API,\n\n194\n00:10:04.030 --> 00:10:06.750\nget the latitude and\nlongitude for a place.\n\n195\n00:10:06.750 --> 00:10:10.100\nA human readable place,\nlike New York, New York.\n\n196\n00:10:10.100 --> 00:10:14.360\nAnd then, I grab those values and then\nsend it over here to get that information.\n\n197\n00:10:14.360 --> 00:10:16.110\nSo it may be a multiple step process.\n\n198\n00:10:16.110 --> 00:10:17.150\nThat's not where we're gonna start.\n\n199\n00:10:17.150 --> 00:10:21.070\nWe're gonna start with, well latitude and\nlongitude right out of the box.\n\n200\n00:10:21.070 --> 00:10:22.900\nNot going to be a friendly weather ad.\n\n201\n00:10:22.900 --> 00:10:25.410\nBut we'll make it better as we go.\n\n202\n00:10:25.410 --> 00:10:28.920\nSo I have all of this information, right.\n\n203\n00:10:28.920 --> 00:10:30.900\nCurrently, what does currently mean?\n\n204\n00:10:30.900 --> 00:10:33.480\nWell it says here's the current time.\n\n205\n00:10:33.480 --> 00:10:35.925\nI don't even know what that means,\nthat's a lot of numbers.\n\n206\n00:10:35.925 --> 00:10:37.580\nZack, do you know how\nmany numbers that is?\n\n207\n00:10:37.580 --> 00:10:39.200\n&gt;&gt; Well I don't know how\nmany numbers there is,\n\n208\n00:10:39.200 --> 00:10:43.560\nbut it kind of looks like an upside down\nsquirrel that is all laid out like that.\n\n209\n00:10:43.560 --> 00:10:47.360\n&gt;&gt; It may be like that, it definitely does\nhave this kind of squirrel feel, right.\n\n210\n00:10:47.360 --> 00:10:48.159\n&gt;&gt; An upside down one.\n\n211\n00:10:48.159 --> 00:10:52.341\n&gt;&gt; Yeah, you turn your head sideways and\nyeah, it's a backbone and a tail,\n\n212\n00:10:52.341 --> 00:10:53.762\nwho knows, craziness.\n\n213\n00:10:53.762 --> 00:10:59.330\nWell now after that little,\nkind of detour into squirrel text land.\n\n214\n00:10:59.330 --> 00:11:00.400\nLet's come on back.\n\n215\n00:11:00.400 --> 00:11:02.330\nThat is a very large number, right?\n\n216\n00:11:02.330 --> 00:11:04.890\n&gt;&gt; Big number.\n&gt;&gt; I don't know what that is, Zach doesn't\n\n217\n00:11:04.890 --> 00:11:09.050\nknow what that is, he was distracted by\nthe squirrel shape of the JSON response.\n\n218\n00:11:09.050 --> 00:11:12.940\nBut we do see summary and icon,\nwell those are kind of self explanatory.\n\n219\n00:11:12.940 --> 00:11:14.690\nNearest storm distance.\n\n220\n00:11:14.690 --> 00:11:16.790\nThere's some more numbers that\nI don't know what they are.\n\n221\n00:11:16.790 --> 00:11:20.150\nNow, I know I'm gonna go\non a little bit of a math,\n\n222\n00:11:20.150 --> 00:11:22.750\nkinda on my soapbox a little bit.\n\n223\n00:11:22.750 --> 00:11:27.020\nYou've probably heard,\nnumbers without units are meaningless.\n\n224\n00:11:27.020 --> 00:11:28.500\nThis is a perfect example.\n\n225\n00:11:28.500 --> 00:11:30.474\n\"precipintensity\": 0.\n\n226\n00:11:30.474 --> 00:11:32.636\n\"precipprobability\": 0.\n\n227\n00:11:32.636 --> 00:11:34.480\n\"temperature\": 57.\n\n228\n00:11:34.480 --> 00:11:37.635\nHm, I wonder what that is.\n\n229\n00:11:37.635 --> 00:11:40.784\nNow, most of you if you're in\nthe United States probably assume that\n\n230\n00:11:40.784 --> 00:11:41.775\nthat's Farenheit.\n\n231\n00:11:41.775 --> 00:11:47.489\nWell, you would be right because 57\ndegrees Celsius is wicked hot, [LAUGH] so\n\n232\n00:11:47.489 --> 00:11:53.476\nit's about 130 degrees or something like\nthat so I doubt Alcatraz is that hot.\n\n233\n00:11:53.476 --> 00:11:57.717\nI could be wrong in my calculation\n[CROSSTALK] I'm just going off on\n\n234\n00:11:57.717 --> 00:11:58.881\na tangent there.\n\n235\n00:11:58.881 --> 00:12:02.439\nBut there's a lot of things that we\ndon't know about this JSON response but\n\n236\n00:12:02.439 --> 00:12:05.850\nwe can see the structure through this,\nkind of hitting this end point.\n\n237\n00:12:05.850 --> 00:12:07.280\nPerfectly okay, right?\n\n238\n00:12:08.400 --> 00:12:12.420\nSo, where could we go find\nout more information?\n\n239\n00:12:12.420 --> 00:12:17.620\nWell, if we come back to this portal,\nI'm gonna go to the docs.\n\n240\n00:12:17.620 --> 00:12:21.540\nTo the docs and\nI'm not talking about my boats' docks.\n\n241\n00:12:21.540 --> 00:12:23.170\nI'm talking about documentation docs.\n\n242\n00:12:24.170 --> 00:12:25.660\n&gt;&gt; I like seagulls.\n\n243\n00:12:25.660 --> 00:12:27.220\n&gt;&gt; Well, that is wonderful.\n\n244\n00:12:27.220 --> 00:12:28.320\nDo you like flocks of them?\n\n245\n00:12:28.320 --> 00:12:28.900\n&gt;&gt; Yes, I do.\n\n246\n00:12:28.900 --> 00:12:32.050\n&gt;&gt; Flock of seagulls and\nhe runs and runs everywhere.\n\n247\n00:12:32.050 --> 00:12:38.200\nAnyway, sorry, so we're gonna go to\nthis for cache request portion here.\n\n248\n00:12:38.200 --> 00:12:41.230\nAll right, and what is this telling us?\n\n249\n00:12:41.230 --> 00:12:45.250\nWell, it's giving us pretty much the exact\nsame information that we just saw.\n\n250\n00:12:45.250 --> 00:12:48.310\nI went through all that\nwork to get a plugin,\n\n251\n00:12:48.310 --> 00:12:51.190\nto get a pretty print and\nI could have just come to the docs.\n\n252\n00:12:51.190 --> 00:12:57.570\nBut if I scroll down, you will actually\nsee that it gives you some information.\n\n253\n00:12:57.570 --> 00:13:00.149\nKey, you're secret key\nmust be kept secret.\n\n254\n00:13:01.400 --> 00:13:02.570\n&gt;&gt; There you go.\n\n255\n00:13:02.570 --> 00:13:05.747\n&gt;&gt; Well, you should not put it\nin Java script source code,\n\n256\n00:13:05.747 --> 00:13:07.720\nit transmits the clients.\n\n257\n00:13:07.720 --> 00:13:09.634\nOkay, a latitude required,\n\n258\n00:13:09.634 --> 00:13:14.716\na longitude required in decimal degrees\npositive east, negative is west.\n\n259\n00:13:14.716 --> 00:13:16.670\nThat actually tells us a little\nbit about the latitude.\n\n260\n00:13:16.670 --> 00:13:18.720\nWho knew that reading could be so\ninformative.\n\n261\n00:13:19.800 --> 00:13:22.163\nPositive fundamental,\n[CROSSTALK], it is, it is.\n\n262\n00:13:22.163 --> 00:13:23.750\nSo, exclude.\n\n263\n00:13:23.750 --> 00:13:25.212\nI typically don't use these.\n\n264\n00:13:25.212 --> 00:13:29.710\nThis is an additional parameter that you\ncan use to help pair down the requests.\n\n265\n00:13:31.100 --> 00:13:32.420\nAnd then, we can get language.\n\n266\n00:13:33.480 --> 00:13:34.000\nThere you go.\n\n267\n00:13:34.000 --> 00:13:36.240\nThe summary can come back\nin different languages.\n\n268\n00:13:36.240 --> 00:13:39.100\nAgain, it defaults to English.\n\n269\n00:13:39.100 --> 00:13:40.520\nThat's what I'm gonna go for.\n\n270\n00:13:40.520 --> 00:13:44.300\nUnits, return of weather\nconditions in the requested units,\n\n271\n00:13:44.300 --> 00:13:46.210\nshould be one of the following.\n\n272\n00:13:46.210 --> 00:13:50.030\nAuto, automatically selects units\nbased on geographic location.\n\n273\n00:13:50.030 --> 00:13:50.775\nThat's handy.\n\n274\n00:13:50.775 --> 00:13:53.439\n&gt;&gt; [SOUND]\n&gt;&gt; Now it's making an assumption based on\n\n275\n00:13:53.439 --> 00:13:58.640\nthe geographic location of who's making\nthe request, if I'm not mistaken.\n\n276\n00:13:58.640 --> 00:14:03.360\nBecause, well, you'll see,\nI don't think that always occurs.\n\n277\n00:14:03.360 --> 00:14:07.480\nCA same as SI, except windspeed and\nwindgusts are kilometers per hour.\n\n278\n00:14:07.480 --> 00:14:10.590\nSo we can get, essentially the metric,\nthe imperial units,\n\n279\n00:14:10.590 --> 00:14:14.750\nwhich are predominantly in the United\nStates and some other ancillary places.\n\n280\n00:14:14.750 --> 00:14:16.789\nBut if I zoom out,\n\n281\n00:14:17.930 --> 00:14:23.300\nit'll give me the SI units in the United\nStates, well that's imperial units so\n\n282\n00:14:23.300 --> 00:14:27.000\nyou're gonna get like miles per hour and\nthings like that, okay?\n\n283\n00:14:27.000 --> 00:14:30.670\nWell that doesn't quite tell\nme all the information, but\n\n284\n00:14:30.670 --> 00:14:33.020\nif I come in here to this response format.\n\n285\n00:14:34.596 --> 00:14:39.230\nResponse is consistent and\nwe get some similar information, but\n\n286\n00:14:39.230 --> 00:14:43.170\nit tells you a little more about this.\n\n287\n00:14:43.170 --> 00:14:45.470\nData point contains various properties.\n\n288\n00:14:45.470 --> 00:14:49.000\nCurrently as a data point,\nthe minute it leaves the data point.\n\n289\n00:14:49.000 --> 00:14:53.340\nIf you look back up here,\nit'll tell you a data block, excuse me.\n\n290\n00:14:53.340 --> 00:14:57.330\nSo each one of those points\ncontained within the block,\n\n291\n00:14:57.330 --> 00:14:59.790\nyou might have an apparent temperature,\nright?\n\n292\n00:14:59.790 --> 00:15:03.991\nIf you're in a climate that has high\nhumidity, this is probably more applicable\n\n293\n00:15:03.991 --> 00:15:06.709\nto you than what the actual\ntemperature is, because\n\n294\n00:15:06.709 --> 00:15:11.540\nhigh humidity can make it feel a lot\nhotter than the actual air temperature.\n\n295\n00:15:11.540 --> 00:15:14.260\nCloud cover du point icon.\n\n296\n00:15:14.260 --> 00:15:16.100\nThis is important information.\n\n297\n00:15:16.100 --> 00:15:20.690\nThe following values, clear day,\nclear night, rain, snow, sleet, wind, fog.\n\n298\n00:15:20.690 --> 00:15:23.400\nThese are all of the possible\nnames that can come back for icon.\n\n299\n00:15:23.400 --> 00:15:25.040\nWell, why would I use this?\n\n300\n00:15:25.040 --> 00:15:29.690\nWell you can use this to select\na particular icon by name\n\n301\n00:15:29.690 --> 00:15:33.950\nif you employ some tricky kind\nof problem solving, right?\n\n302\n00:15:33.950 --> 00:15:37.860\nIt does tell you, you should have things\nsuch as hail, thunderstorm, or tornado for\n\n303\n00:15:37.860 --> 00:15:39.060\npossible future values.\n\n304\n00:15:40.830 --> 00:15:45.620\nBut I did want to maybe come\ndown here to precip intensity.\n\n305\n00:15:45.620 --> 00:15:49.140\nIntensity in inches of\nliquid water per hour.\n\n306\n00:15:51.430 --> 00:15:52.320\nIt's inches per hour.\n\n307\n00:15:53.360 --> 00:15:54.118\nThat's what it gives us.\n\n308\n00:15:54.118 --> 00:15:57.356\nThis value is conditional on probability.\n\n309\n00:15:57.356 --> 00:16:01.034\nOkay, so\nif it rains this might be the intensity.\n\n310\n00:16:01.034 --> 00:16:04.986\nBut if I go to perceived probability,\nbetween zero and one, right?\n\n311\n00:16:04.986 --> 00:16:08.730\nThere's a 0% chance up to 100% chance.\n\n312\n00:16:08.730 --> 00:16:10.120\nSo that's how this is reported.\n\n313\n00:16:10.120 --> 00:16:14.290\nSo having units, because we're dealing\nto some extent with scientific data,\n\n314\n00:16:14.290 --> 00:16:15.840\nwe have to understand the units.\n\n315\n00:16:15.840 --> 00:16:18.318\nNow, I'm showing you this because this\nis where you would come to figure\n\n316\n00:16:18.318 --> 00:16:18.910\nthese things out.\n\n317\n00:16:20.370 --> 00:16:23.140\nUltimately, I start planning and building.\n\n318\n00:16:23.140 --> 00:16:27.076\nAnd if I run into a snag,\nas long as I know where to go look,\n\n319\n00:16:27.076 --> 00:16:28.640\nit's not a huge snag.\n\n320\n00:16:29.650 --> 00:16:32.880\nIf I don't know where to go look then\nI have to waste a bunch of time.\n\n321\n00:16:32.880 --> 00:16:34.120\nSo let's scroll down.\n\n322\n00:16:34.120 --> 00:16:41.710\nAnd one last thing, as far as the Dark Sky\nAPI, Frequently Asked Questions, okay?\n\n323\n00:16:41.710 --> 00:16:42.675\nHow much does it cost?\n\n324\n00:16:42.675 --> 00:16:46.458\nMm, [SOUND] I don't like\ntalking about money.\n\n325\n00:16:46.458 --> 00:16:48.280\nWe'll just go over this way.\n\n326\n00:16:49.520 --> 00:16:53.660\nSo can I require my users to sign up for\na developer API key?\n\n327\n00:16:53.660 --> 00:16:55.000\nNo.\n\n328\n00:16:55.000 --> 00:16:56.850\nCan I put powered by Dark Sky?\n\n329\n00:16:56.850 --> 00:17:00.129\nYes, and\nthat's some free marketing for them.\n\n330\n00:17:00.129 --> 00:17:04.090\nAnd that maybe something you wanna\ndo specially if your app takes off.\n\n331\n00:17:04.090 --> 00:17:08.488\nIf you scroll down there is\none thing that gives us some\n\n332\n00:17:08.488 --> 00:17:12.113\ninsight about why we're building a proxy.\n\n333\n00:17:12.113 --> 00:17:15.386\nWhy do I get the error,\nno access control allow origin\n\n334\n00:17:15.386 --> 00:17:19.708\nheader is present on the requester\nresponse when I try to call the API?\n\n335\n00:17:19.708 --> 00:17:22.020\nIf you try to do this programmatically,\nand\n\n336\n00:17:22.020 --> 00:17:27.560\nit does not originate from\nthe Dark Sky URL, right?\n\n337\n00:17:27.560 --> 00:17:33.450\nNotice, this URL is still at\nthe domain of darksky.net.\n\n338\n00:17:33.450 --> 00:17:35.460\nWell, you'll run into this problem.\n\n339\n00:17:35.460 --> 00:17:39.708\nI will forewarn you, the first time I\nhad this problem it was like a four hour\n\n340\n00:17:39.708 --> 00:17:41.472\nescapade to try to figure out.\n\n341\n00:17:41.472 --> 00:17:46.850\nIt was incredibly agitating so\nto speak, all right?\n\n342\n00:17:46.850 --> 00:17:48.580\nSo, we take security very seriously.\n\n343\n00:17:48.580 --> 00:17:53.116\nAs a security precaution we\nhave disabled cross origin\n\n344\n00:17:53.116 --> 00:17:56.873\nresource sharing on our\nservers as a result.\n\n345\n00:17:56.873 --> 00:17:59.939\nSo if its on a client-side\nbrowser application,\n\n346\n00:17:59.939 --> 00:18:02.932\nif the domain name does\nnot match darksky.net,\n\n347\n00:18:02.932 --> 00:18:08.500\nyou can't make a request to it directly\nfrom a browser-side application.\n\n348\n00:18:08.500 --> 00:18:13.150\nSo they do that because you have a secret\nkey, and they don't want to expose that\n\n349\n00:18:13.150 --> 00:18:17.480\nsecret key to other people, because\nit could be a billable thing, right?\n\n350\n00:18:17.480 --> 00:18:21.360\nYou can have people scrape your key and\nthen bill you a bunch of money for\n\n351\n00:18:21.360 --> 00:18:23.959\nan app that they wrote, and\nthen that's all kinds of bad.\n\n352\n00:18:25.680 --> 00:18:28.090\nAll right to prevent API key abuse,\n\n353\n00:18:28.090 --> 00:18:32.940\nyou should set up a proxy server to\nmake calls to our API behind the scenes.\n\n354\n00:18:32.940 --> 00:18:36.580\nYou can then provide forecasts to your\nclients without exposing your key.\n\n355\n00:18:36.580 --> 00:18:39.110\nSo it's kind of a, you have a server,\n\n356\n00:18:39.110 --> 00:18:43.240\nit makes a request based\non incoming requests to it.\n\n357\n00:18:43.240 --> 00:18:47.440\nAnd then when it gets it back, it sends\nit to the respective client of that.\n\n358\n00:18:47.440 --> 00:18:51.700\nNow we're gonna build the application that\ndoes that, our AngularJS application.\n\n359\n00:18:51.700 --> 00:18:53.020\nThat's why we need a proxy.\n\n360\n00:18:53.020 --> 00:18:58.170\nBecause well,\ncores is disabled on their servers,\n\n361\n00:18:58.170 --> 00:19:02.820\nso I can't make cross origin requests\nfrom the browser, all right?\n\n362\n00:19:02.820 --> 00:19:06.456\nSo, yeah that's a lot, but\nthat's a little bit about our API.\n\n363\n00:19:06.456 --> 00:19:10.010\n&gt;&gt; Well is there any other setup we\nneed to do before we begin building?\n\n364\n00:19:10.010 --> 00:19:11.510\n&gt;&gt; Well a little more setup,\n\n365\n00:19:11.510 --> 00:19:15.680\nI will tell you I'm gonna keep this very,\nkind of quick.\n\n366\n00:19:15.680 --> 00:19:20.720\nMainly because you should have some\nfamiliarity with the Node.js ecosystem,\n\n367\n00:19:20.720 --> 00:19:23.280\nyou should know a little\nbit about Express.\n\n368\n00:19:23.280 --> 00:19:25.620\nNow I'm not saying you have to\nbe an expert in these things.\n\n369\n00:19:25.620 --> 00:19:27.430\nBut you should know your way around.\n\n370\n00:19:27.430 --> 00:19:29.740\nYou should know a little\nbit about AngularJS.\n\n371\n00:19:29.740 --> 00:19:33.484\nAnd, well,\nwe're gonna add a few new things, but\n\n372\n00:19:33.484 --> 00:19:37.327\nwe're gonna only add\ntechnologies as we need them.\n\n373\n00:19:37.327 --> 00:19:39.500\nI had a real hard time\ngetting that out of my mouth.\n\n374\n00:19:39.500 --> 00:19:40.200\n&gt;&gt; But you did.\n\n375\n00:19:40.200 --> 00:19:41.430\n&gt;&gt; But we made it, all right?\n\n376\n00:19:41.430 --> 00:19:45.880\nSo what are the things that we need\nto have available to us, okay?\n\n377\n00:19:45.880 --> 00:19:49.679\nAnd I'm gonna go through a few\nquick checklists for you.\n\n378\n00:19:49.679 --> 00:19:51.770\nSo let's take a look at my screen here.\n\n379\n00:19:51.770 --> 00:19:53.950\nNumber one Chrome browser.\n\n380\n00:19:53.950 --> 00:19:57.408\nNow, I'm not saying it has\nto be your default browser,\n\n381\n00:19:57.408 --> 00:20:01.010\nit just makes a lot of sense\nas a web developer to me.\n\n382\n00:20:01.010 --> 00:20:03.770\nChrome dev tools are great,\nthe plugins are great, and\n\n383\n00:20:03.770 --> 00:20:06.340\nsome plugins only exist for Chrome.\n\n384\n00:20:06.340 --> 00:20:09.430\nLikewise can be said about Firefox and\npossibly Safari.\n\n385\n00:20:09.430 --> 00:20:11.640\nThey all have wonderful ecosystems.\n\n386\n00:20:11.640 --> 00:20:13.745\nOr even IE edge, okay?\n\n387\n00:20:13.745 --> 00:20:16.840\nOr not IE edge, Microsoft Edge, excuse me.\n\n388\n00:20:16.840 --> 00:20:20.460\nIf it says IE on it, you should get\na different browser, just for this course.\n\n389\n00:20:20.460 --> 00:20:24.927\nAgain, I'm not saying anything about\nyour browser of choice, but for\n\n390\n00:20:24.927 --> 00:20:27.540\nthis course it would make the most sense.\n\n391\n00:20:27.540 --> 00:20:30.090\nSo, Chrome is gonna make it easy.\n\n392\n00:20:30.090 --> 00:20:34.858\nIf we hop over, and we are on\na terminal you should know a little\n\n393\n00:20:34.858 --> 00:20:39.010\nbit about terminal if you\nknow something about Node.\n\n394\n00:20:39.010 --> 00:20:42.973\nTo make sure we have the appropriate\nversion, type node --version.\n\n395\n00:20:42.973 --> 00:20:47.230\nNow I have version 6.10.3 at\nthe time of this recording.\n\n396\n00:20:47.230 --> 00:20:49.240\nI really should probably go ahead and\n\n397\n00:20:49.240 --> 00:20:53.480\nupdate fairly soon because\nthere's a new release coming out.\n\n398\n00:20:53.480 --> 00:20:55.420\nYou may have something beyond this.\n\n399\n00:20:55.420 --> 00:21:00.770\nAs long as you have 6.3,\n6.10, I think it's 7.11,\n\n400\n00:21:00.770 --> 00:21:05.620\nI could be wrong about that,\nor 8.something, you're good.\n\n401\n00:21:05.620 --> 00:21:07.840\nOr maybe even 10.something, right?\n\n402\n00:21:07.840 --> 00:21:11.080\nSo 6 is kind of the minimum.\n\n403\n00:21:11.080 --> 00:21:13.350\nAnything above that should be fine.\n\n404\n00:21:13.350 --> 00:21:16.558\nNow that's assuming that there's\nno crazy breaking API changes.\n\n405\n00:21:16.558 --> 00:21:21.938\nSo we may have to deal with that when and\nif it occurs, right?\n\n406\n00:21:21.938 --> 00:21:25.420\nIn addition to,\nyou need to have the npm tool.\n\n407\n00:21:25.420 --> 00:21:30.320\nSo if I type npm --version I have npm 5.3.\n\n408\n00:21:30.320 --> 00:21:33.330\nNow up until recently I was still using,\nI think,\n\n409\n00:21:33.330 --> 00:21:39.130\nversion 3.6 or something like,\nI don't know the minor version exactly.\n\n410\n00:21:40.370 --> 00:21:46.130\nnpm, I updated because it's a little\nbit faster in the version 5 series.\n\n411\n00:21:46.130 --> 00:21:51.611\nBut, essentially, we're just gonna\nuse it to manage our dependencies and\n\n412\n00:21:51.611 --> 00:21:54.275\nmanage some of our build processes.\n\n413\n00:21:54.275 --> 00:21:58.185\nThe last thing we need,\nyou could use Vim, you could use Emacs,\n\n414\n00:21:58.185 --> 00:22:01.150\nif that's your poison of choice.\n\n415\n00:22:01.150 --> 00:22:02.780\nYou do need an editor though, right?\n\n416\n00:22:04.050 --> 00:22:06.450\nSo you have a command line,\nyou got Node installed,\n\n417\n00:22:06.450 --> 00:22:08.680\nyou got Chrome,\nyou finally need an editor.\n\n418\n00:22:08.680 --> 00:22:10.520\nNow what editor do I use?\n\n419\n00:22:10.520 --> 00:22:15.080\nAnd that is in fact, Atom,\nwhich is a fairly nice editor.\n\n420\n00:22:15.080 --> 00:22:17.090\nYou can use Sublime Text.\n\n421\n00:22:17.090 --> 00:22:20.766\nYou could use TextMate again, Vim or\n\n422\n00:22:20.766 --> 00:22:23.750\nEmacs, but\nyou do want a plain text editor.\n\n423\n00:22:23.750 --> 00:22:26.299\nOr you may even go for a full blown IDE or\n\n424\n00:22:26.299 --> 00:22:30.306\nintegrated development environment,\nsuch as WebStorm.\n\n425\n00:22:30.306 --> 00:22:32.542\nBut these are all web-based technologies.\n\n426\n00:22:32.542 --> 00:22:37.347\nSo you're gonna want something that allows\nyou syntax highlighting code completion.\n\n427\n00:22:37.347 --> 00:22:41.290\nI'm gonna use as little of that as\npossible, but there are some things just\n\n428\n00:22:41.290 --> 00:22:45.260\nto be expeditious, and so you don't\nhave to watch me do some crazy typing.\n\n429\n00:22:45.260 --> 00:22:47.760\nAnd go that's wrong, that's wrong.\n\n430\n00:22:47.760 --> 00:22:51.520\nI will use a few of those features and\nI will highlight those as we come to them.\n\n431\n00:22:51.520 --> 00:22:54.330\nSo just a real quick\noverview of the checklist.\n\n432\n00:22:54.330 --> 00:22:57.086\nChrome, Node at least version 6 or higher.\n\n433\n00:22:57.086 --> 00:22:58.090\nHigher is okay.\n\n434\n00:22:58.090 --> 00:23:05.120\nnpm, Atom and\nwell an account to the Dark Sky API.\n\n435\n00:23:05.120 --> 00:23:09.120\nWhich we took a nice little\ngander at earlier and\n\n436\n00:23:09.120 --> 00:23:12.140\nas long as you have those\nwe're ready to start building.\n\n437\n00:23:12.140 --> 00:23:13.560\n&gt;&gt; My goodness well that's it then.\n\n438\n00:23:13.560 --> 00:23:17.330\nThis is the very beginning of set up and\nintroduction for\n\n439\n00:23:17.330 --> 00:23:21.660\nweather app with Angular and JS Express\nthey will be more in the series.\n\n440\n00:23:21.660 --> 00:23:23.170\nMake sure you watch every single video.\n\n441\n00:23:23.170 --> 00:23:24.990\nYou'll be very glad you did.\n\n442\n00:23:24.990 --> 00:23:27.470\nGreat job Justin and thank you for\nwatching the DevProTV.\n\n443\n00:23:27.470 --> 00:23:29.570\nRemember a good dev pro\nis always learning.\n\n444\n00:23:29.570 --> 00:23:30.560\nI'm Zach Memos.\n\n445\n00:23:30.560 --> 00:23:31.710\n&gt;&gt; And I'm Justin Dennison.\n\n446\n00:23:31.710 --> 00:23:33.310\n&gt;&gt; And we'll see you soon.\n\n447\n00:23:33.310 --> 00:23:38.632\n[MUSIC]\n\n",
          "vimeoId": "226355577"
        },
        {
          "description": "Justin and Zach cover what a Proxy is, CORS disabling on Darksky, hiding credentials during deployment, building a simple Express Server, testing the server, creating our own HTTP based API, and building the first weather route using a router.",
          "length": "1143",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-2-1-1-building_the_proxy-071817-PGM.00_25_28_05.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-2-1-1-building_the_proxy-071817-PGM.00_25_28_05.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-2-1-1-building_the_proxy-071817-PGM.00_25_28_05.Still001-sm.jpg",
          "title": "Building the Proxy",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:05.941\n[MUSIC]\n\n2\n00:00:05.941 --> 00:00:08.300\nHello and thank you for\nchoosing DevPro TV,\n\n3\n00:00:08.300 --> 00:00:10.480\nwhere we help you learn wherever you go.\n\n4\n00:00:10.480 --> 00:00:11.650\nI'm Zach Memos.\n\n5\n00:00:11.650 --> 00:00:15.640\nAs we continue on with this exciting new\nseries, weather app with AngularJS and\n\n6\n00:00:15.640 --> 00:00:16.620\nExpress.\n\n7\n00:00:16.620 --> 00:00:19.440\nAnd this episode, building the proxy and\n\n8\n00:00:19.440 --> 00:00:22.130\nbringing this information we need is\nthe one and only, Justin Dennison.\n\n9\n00:00:22.130 --> 00:00:23.640\nJustin, good to see you again, sir.\n\n10\n00:00:23.640 --> 00:00:24.960\n&gt;&gt; It is good to see you as well, Zach.\n\n11\n00:00:24.960 --> 00:00:26.040\nAnd how are you today?\n\n12\n00:00:26.040 --> 00:00:26.720\n&gt;&gt; I'm doing great.\n\n13\n00:00:26.720 --> 00:00:29.010\nI'm in a wonderful mood and\nthis is very exciting for me.\n\n14\n00:00:29.010 --> 00:00:32.800\nThis weather app, it looks to be like an\nexciting building we're going forward with\n\n15\n00:00:32.800 --> 00:00:36.210\nit but I know that we're doing we're\ngoing to build with the proxy.\n\n16\n00:00:36.210 --> 00:00:37.220\nSo what is that?\n\n17\n00:00:37.220 --> 00:00:38.360\nWhat's building a proxy?\n\n18\n00:00:38.360 --> 00:00:40.170\nWhat is a proxy?\n\n19\n00:00:40.170 --> 00:00:41.290\n&gt;&gt; I've been using that term.\n\n20\n00:00:41.290 --> 00:00:44.540\nWell I think I used it in\nthe previous episode and\n\n21\n00:00:44.540 --> 00:00:46.120\nI just assumed that everybody knew it.\n\n22\n00:00:46.120 --> 00:00:50.300\nSo it's probably best if we talked about\nwhat is the proxy it's thrown about but\n\n23\n00:00:50.300 --> 00:00:55.240\nlet's actually talk about proxies\noutside the context of technology, okay?\n\n24\n00:00:55.240 --> 00:00:58.420\nSo, if you've ever hired a lawyer,\nnow I'm not here to judge you so,\n\n25\n00:00:58.420 --> 00:00:59.540\nwhatever reason may be.\n\n26\n00:00:59.540 --> 00:01:03.750\nI've had a lawyer, it maybe on\na real-estate deal, whatever it may be,\n\n27\n00:01:03.750 --> 00:01:08.140\nif they stand in for you,\nwell they're kinda your proxy, right?\n\n28\n00:01:08.140 --> 00:01:11.440\nYou can think of the proxy\nas the middleman or\n\n29\n00:01:11.440 --> 00:01:16.245\nwoman, however you want to\nanthropomorphize this piece of thing.\n\n30\n00:01:16.245 --> 00:01:18.525\n&gt;&gt; [LAUGH]\n&gt;&gt; That stands between you and\n\n31\n00:01:18.525 --> 00:01:20.189\nsome other entity, okay.\n\n32\n00:01:20.189 --> 00:01:20.990\n&gt;&gt; There you go.\n\n33\n00:01:20.990 --> 00:01:23.080\n&gt;&gt; And\nthen they are the pass-through, okay.\n\n34\n00:01:24.200 --> 00:01:28.530\nSo in order to do,\nlet's go back a little bit.\n\n35\n00:01:28.530 --> 00:01:31.870\nWhat are we building that\nis going to provide that?\n\n36\n00:01:31.870 --> 00:01:37.440\nUltimately we have to get data to\nour front-end AngularJS application.\n\n37\n00:01:37.440 --> 00:01:41.560\nWe can't make a call directly\nto the Dark Sky API, right,\n\n38\n00:01:41.560 --> 00:01:44.610\nthrough HTTP because they\nhave disallowed that to keep\n\n39\n00:01:44.610 --> 00:01:46.976\npeople from exposing their API queues\n&gt;&gt; Mm-hm.\n\n40\n00:01:46.976 --> 00:01:51.270\n&gt;&gt; Which is as tied to possibly your\ncredit card or at the very least,\n\n41\n00:01:51.270 --> 00:01:53.530\nyour thousand calls per\nday they afford you free.\n\n42\n00:01:54.680 --> 00:01:57.090\nNow why would they do that?\n\n43\n00:01:57.090 --> 00:02:01.220\nIt's to keep people from grabbing your\nkey out of your front end application and\n\n44\n00:02:01.220 --> 00:02:04.000\nthen making calls on your behalf and\nmaybe running up a crazy bill.\n\n45\n00:02:04.000 --> 00:02:08.310\nI've heard some crazy stories where\ncertain cloud providers called up and\n\n46\n00:02:08.310 --> 00:02:10.280\nsaid, hey you owe us $25,000.\n\n47\n00:02:10.280 --> 00:02:14.710\nAnd it's because someone's\naccidentally exposed their credentials\n\n48\n00:02:14.710 --> 00:02:19.620\nwhich allow people to set up you\nknow new servers or just hammer away\n\n49\n00:02:19.620 --> 00:02:23.685\nat these database services, things of that\nnature and we don't wanna do that so.\n\n50\n00:02:23.685 --> 00:02:24.550\n&gt;&gt; Mm-mm.\n&gt;&gt; To try and\n\n51\n00:02:24.550 --> 00:02:27.840\nkeep people away from accidentally\nexposing information that they shouldn't,\n\n52\n00:02:27.840 --> 00:02:32.980\nwell they've made it to where\nyou have to use a server, right.\n\n53\n00:02:32.980 --> 00:02:35.730\nSomething server side to make the call for\nyou.\n\n54\n00:02:35.730 --> 00:02:37.710\nAll right, so\nwe kind of this three-pronged approach.\n\n55\n00:02:37.710 --> 00:02:40.910\nWe have AngularJS,\nwe have the Dark Sky, and\n\n56\n00:02:40.910 --> 00:02:43.620\nthen sitting in the middle is\ngoing to be our proxy service.\n\n57\n00:02:43.620 --> 00:02:45.390\nWe're gonna make a request to the proxy,\n\n58\n00:02:45.390 --> 00:02:47.830\nthe proxy is gonna make\nthe request to Dark Sky.\n\n59\n00:02:47.830 --> 00:02:50.730\nThat response is gonna come back\nto the proxy and then we're just\n\n60\n00:02:50.730 --> 00:02:56.070\ngonna forward that response back to\nAngularJS and then it handles all that.\n\n61\n00:02:56.070 --> 00:02:59.540\nThat will keep our key from being exposed,\nand\n\n62\n00:02:59.540 --> 00:03:04.100\nwell we've kind of got\naround that CORS issues.\n\n63\n00:03:04.100 --> 00:03:08.380\nThey've disabled CORS, which is cross\norigin resource sharing, by default.\n\n64\n00:03:08.380 --> 00:03:11.480\nNow some of you may be asking, CORS?\n\n65\n00:03:11.480 --> 00:03:15.680\nWell if the origins don't match,\nright, your proxy service in\n\n66\n00:03:15.680 --> 00:03:20.758\nthe Dark Sky API,\nthey won't match in domain name either.\n\n67\n00:03:20.758 --> 00:03:27.000\nThat's true, however,\nthe course, you get a little\n\n68\n00:03:27.000 --> 00:03:31.610\nmore leeway if say server side application\nand it's not coming from my browser, okay?\n\n69\n00:03:31.610 --> 00:03:37.480\nNow, that can be detected from a great\ndeal of, essentially, http headers.\n\n70\n00:03:37.480 --> 00:03:40.060\nBut it's pretty easy,\nI've done it before and\n\n71\n00:03:40.060 --> 00:03:41.710\nthis is a common pattern that I've used.\n\n72\n00:03:41.710 --> 00:03:45.910\nIf I need to hide credentials and\nthen how do I keep\n\n73\n00:03:45.910 --> 00:03:50.250\nmy app from getting hammered away and\ngoing through my proxy?\n\n74\n00:03:50.250 --> 00:03:53.250\nI will white list my proxy in my app.\n\n75\n00:03:53.250 --> 00:03:58.090\nNow what I mean is my Angular JS app is\nthe only thing that can make a request to\n\n76\n00:03:58.090 --> 00:04:02.540\nmy proxy service so I don't accidentally\nexpose it to other people as well.\n\n77\n00:04:02.540 --> 00:04:06.330\nAnd we'll hold off on that, that's not\nultimately what we're gonna do today,\n\n78\n00:04:06.330 --> 00:04:09.170\nour goal is to get up and\nrunning, with building our proxy.\n\n79\n00:04:09.170 --> 00:04:11.810\n&gt;&gt; So\nwhat do we need to build to get started?\n\n80\n00:04:11.810 --> 00:04:16.190\n&gt;&gt; Well what we're gonna start with is\njust a simple express JS application, but\n\n81\n00:04:16.190 --> 00:04:20.440\nwe're gonna talk about architecture as far\nas how we're going to lay out our app and\n\n82\n00:04:20.440 --> 00:04:22.440\nfile structure and things like that.\n\n83\n00:04:22.440 --> 00:04:26.320\nNow I said architecture there,\nthat might have been an over sell.\n\n84\n00:04:26.320 --> 00:04:29.130\nWe're going to talk about how we're\ngoing to arrange our project and\n\n85\n00:04:29.130 --> 00:04:32.263\nhow we're going to arrange\nour respective pieces, right?\n\n86\n00:04:32.263 --> 00:04:37.630\nBecause we do have a proxy service and we\nhave a front end Angular JS application.\n\n87\n00:04:37.630 --> 00:04:41.840\nThey only work in unison,\nhowever because of some of the tools and\n\n88\n00:04:41.840 --> 00:04:44.650\nthings It's hard to\nmanage them all together.\n\n89\n00:04:44.650 --> 00:04:48.740\nAnd it's also gonna be hard for you to\nsee the distinction between the two.\n\n90\n00:04:48.740 --> 00:04:50.260\nSo I've made a few decisions.\n\n91\n00:04:50.260 --> 00:04:53.190\nAnd I think the best way to\nshow those decisions is, well,\n\n92\n00:04:53.190 --> 00:04:54.670\njust to show you, right?\n\n93\n00:04:54.670 --> 00:04:58.440\nSo let's go ahead and\ntake a look at my computer here.\n\n94\n00:04:58.440 --> 00:05:01.400\n&gt;&gt; Wonderful.\n&gt;&gt; And I named it angcaster,\n\n95\n00:05:01.400 --> 00:05:02.860\nI'm not entirely sold on that name.\n\n96\n00:05:02.860 --> 00:05:07.610\nWe might have to change that, but I went\nwith it and it was kind of hard to say,\n\n97\n00:05:07.610 --> 00:05:09.600\na forecast app built into the JS.\n\n98\n00:05:09.600 --> 00:05:12.440\nThat's a predominant,\nI like that, it makes sense.\n\n99\n00:05:12.440 --> 00:05:16.180\nSo, if I look in here,\nI have nothing, okay?\n\n100\n00:05:16.180 --> 00:05:22.560\nIf I look in my atom text editor, there's\nnothing in this folder, however, I could\n\n101\n00:05:22.560 --> 00:05:27.460\npopulate this with both client and server\nside code all kind of mangled together and\n\n102\n00:05:27.460 --> 00:05:31.060\nwhat I mean is my proxy service is\nwhat I'm calling my server side code.\n\n103\n00:05:31.060 --> 00:05:35.350\nAnd then my Angular JS code would\nbe in the client side portion.\n\n104\n00:05:35.350 --> 00:05:38.410\nHowever, just to make sure we\nhave them completely separated so\n\n105\n00:05:38.410 --> 00:05:42.440\nyou can see the two pieces, and\nthis is more for a learning experience.\n\n106\n00:05:42.440 --> 00:05:45.660\nIt's also to some extent\na management issue for me.\n\n107\n00:05:45.660 --> 00:05:50.200\nWe're gonna create two folders called,\nwell, let's actually call it proxy\n\n108\n00:05:51.630 --> 00:05:55.330\nand then let's create the other\none called client, okay.\n\n109\n00:05:55.330 --> 00:05:58.050\nSo we know have two folders.\n\n110\n00:05:59.340 --> 00:06:04.340\nToday, when I say today, that's kind\nof a wierd time anachronism there.\n\n111\n00:06:04.340 --> 00:06:06.610\nIn this episode,\nwe're going to be dealing with the proxy,\n\n112\n00:06:06.610 --> 00:06:09.790\nmaybe even for a couple of other episodes.\n\n113\n00:06:09.790 --> 00:06:14.340\nWe're not gonna get every feature\nthat we ever wanted for our proxy.\n\n114\n00:06:14.340 --> 00:06:16.240\nWe're gonna get kind of our\nminimal viable product, and\n\n115\n00:06:16.240 --> 00:06:19.720\nI implore you to think about\nyour projects in this way.\n\n116\n00:06:19.720 --> 00:06:25.040\nGet the minimum up and going that\nyou need, and then add features.\n\n117\n00:06:25.040 --> 00:06:28.530\nDon't say I want this, and this, and this,\nand this, and this, and this, and this,\n\n118\n00:06:28.530 --> 00:06:29.890\nand then start trying to build that.\n\n119\n00:06:29.890 --> 00:06:34.940\nCuz essentially, you have a bunch\nof nothing that works, never right.\n\n120\n00:06:34.940 --> 00:06:36.221\nThat was a bunch of negatives in there.\n\n121\n00:06:36.221 --> 00:06:40.120\n&gt;&gt; [LAUGH]\n&gt;&gt; But, keep it simple right.\n\n122\n00:06:40.120 --> 00:06:41.509\nSo, we're gonna go into our proxy.\n\n123\n00:06:42.770 --> 00:06:48.830\nNow, in my Atom text editor, I actually\nhave the entire angcaster directory open,\n\n124\n00:06:48.830 --> 00:06:51.310\nso I can look, and this is for comparison.\n\n125\n00:06:51.310 --> 00:06:55.850\nMost of the time we'll be working in one\nor two, one of these folders only, and\n\n126\n00:06:55.850 --> 00:06:56.940\nnot in both of them.\n\n127\n00:06:56.940 --> 00:06:58.820\nThere may be times where we\nhave to deviate from that,\n\n128\n00:06:58.820 --> 00:07:00.750\nand that's perfectly okay.\n\n129\n00:07:00.750 --> 00:07:04.200\nAll right, so let's create our proxy.\n\n130\n00:07:04.200 --> 00:07:05.170\nNow, what do we need to do?\n\n131\n00:07:05.170 --> 00:07:09.870\nWe're gonna use our node\nenvironment to run this project.\n\n132\n00:07:09.870 --> 00:07:15.370\nSo, the very first thing is npm init, and\nI kinda just lean on the keyboard, right?\n\n133\n00:07:15.370 --> 00:07:17.200\nYou really should read about licensing.\n\n134\n00:07:17.200 --> 00:07:19.700\nYou really should think about versioning.\n\n135\n00:07:19.700 --> 00:07:24.100\nYou really should think about main entry\npoints, as well as filling in authors.\n\n136\n00:07:24.100 --> 00:07:26.250\nEspecially if your gonna publish this.\n\n137\n00:07:26.250 --> 00:07:27.960\nWe're not gonna publish\nthis as a node module,\n\n138\n00:07:27.960 --> 00:07:30.830\nwe're not necessarily gonna\npublish this on [INAUDIBLE].\n\n139\n00:07:30.830 --> 00:07:33.310\nThis is for us,\nwe're kinda thinking about this.\n\n140\n00:07:34.680 --> 00:07:36.410\nIf you're building something though,\nyou should come back and\n\n141\n00:07:36.410 --> 00:07:38.150\nthink about this, okay.\n\n142\n00:07:38.150 --> 00:07:41.540\nBuilding something to sale,\nyou're building a platform,\n\n143\n00:07:41.540 --> 00:07:44.582\nmaybe you're hosting this as\nan open source kind of thing.\n\n144\n00:07:44.582 --> 00:07:47.440\nAll right, so what does that get us?\n\n145\n00:07:47.440 --> 00:07:48.894\nThat gets us a package.json,\n\n146\n00:07:48.894 --> 00:07:52.480\nnow the package.json is gonna keep\ntrack of out dependencies or our proxy.\n\n147\n00:07:53.900 --> 00:07:55.240\nWhat dependency do we need right now?\n\n148\n00:07:55.240 --> 00:08:00.815\nWell I'm going to install Express,\nwhich is a lightweight web framework.\n\n149\n00:08:00.815 --> 00:08:04.985\nNow, we do have some videos in our\nlibrary about using Express, so\n\n150\n00:08:04.985 --> 00:08:06.735\ndefinitely go check those out.\n\n151\n00:08:06.735 --> 00:08:09.685\nIt's kind of a something\nyou've seen this before.\n\n152\n00:08:09.685 --> 00:08:13.885\nWe're not gonna get crazy with express,\nbut it is necessary.\n\n153\n00:08:13.885 --> 00:08:15.698\nNow that we have this.\n\n154\n00:08:15.698 --> 00:08:17.710\nWe have node_modules.\n\n155\n00:08:17.710 --> 00:08:20.800\nAnd you'll also notice if you\nhave a newer version of npm,\n\n156\n00:08:20.800 --> 00:08:24.160\nif you have an older version\nyou will not see this.\n\n157\n00:08:24.160 --> 00:08:27.957\nNewer versions of npm create\nthis package-lock.json,\n\n158\n00:08:27.957 --> 00:08:33.303\nwhich is essentially not a human readable\nform of a package.json with everything\n\n159\n00:08:33.303 --> 00:08:38.666\nyou could possibly need to know about\nevery module that you've ever downloaded.\n\n160\n00:08:38.666 --> 00:08:44.029\nThis is nice, about verbosity and making\nsure you know what versions you're using,\n\n161\n00:08:44.029 --> 00:08:48.942\nbut after this little bulk here we're\nnever gonna worry about it every again,\n\n162\n00:08:48.942 --> 00:08:49.900\nalright?\n\n163\n00:08:49.900 --> 00:08:54.443\nSo now that I have node modules and\npackage.log.json and\n\n164\n00:08:54.443 --> 00:08:58.428\nif I look at package.json,\nwhich we will look at,\n\n165\n00:08:58.428 --> 00:09:03.175\nI have this dependencies layer,\nexpress, 4.15.3.\n\n166\n00:09:03.175 --> 00:09:06.295\nAs long as it's 4 and\nabove you should be fine,\n\n167\n00:09:06.295 --> 00:09:10.900\nI know it's on the of pulling out with 5,\nyou should be fine.\n\n168\n00:09:10.900 --> 00:09:15.838\nWe're not using any crazy edge case or\natypical usage pattern,\n\n169\n00:09:15.838 --> 00:09:17.672\nso we'll be all right.\n\n170\n00:09:17.672 --> 00:09:19.763\nNow let's create our index.js.\n\n171\n00:09:19.763 --> 00:09:23.260\nThis is kind of our entry point\nto our project for our proxy.\n\n172\n00:09:23.260 --> 00:09:24.770\nAnd now we're gonna fill that out,\n\n173\n00:09:24.770 --> 00:09:29.320\nand this is kinda the bare\nminimum that we would need, okay?\n\n174\n00:09:29.320 --> 00:09:32.702\nSo I'm gonna say const, and yeah,\nthat's some new JavaScript there.\n\n175\n00:09:32.702 --> 00:09:37.500\nSo express = require express so\nI'm going to\n\n176\n00:09:37.500 --> 00:09:42.350\nrequire that information and I'm going to\ncreate this little server application.\n\n177\n00:09:45.800 --> 00:09:51.250\nAgain there are some assumptions that\nyou know about the packing pattern and\n\n178\n00:09:51.250 --> 00:09:53.180\nnote and things of that nature.\n\n179\n00:09:53.180 --> 00:09:55.280\nSo I'm going to say server.get and for\n\n180\n00:09:55.280 --> 00:10:01.260\nthe root url I'm going to have a request\nthen a response, and then a handler.\n\n181\n00:10:01.260 --> 00:10:03.060\nNow technically I could have a next there.\n\n182\n00:10:03.060 --> 00:10:05.750\nBut, ultimately this\nwill go to the way side.\n\n183\n00:10:05.750 --> 00:10:09.200\nThis will not even work anymore\nwhen we're ultimately finished.\n\n184\n00:10:09.200 --> 00:10:11.140\nSo what do I want to do?\n\n185\n00:10:11.140 --> 00:10:12.360\nIt works.\n\n186\n00:10:12.360 --> 00:10:17.020\nSo I'm just setting up things\npretty straightforward here,\n\n187\n00:10:17.020 --> 00:10:19.120\njust to make sure everything's up and\ngoing.\n\n188\n00:10:20.320 --> 00:10:23.330\nNow, I'm gonna create\na constant here called Port.\n\n189\n00:10:23.330 --> 00:10:24.732\nAnd that's gonna be equal to 88.\n\n190\n00:10:24.732 --> 00:10:29.480\nIf you find that this doesn't work for\nyou because 88 is already being used\n\n191\n00:10:29.480 --> 00:10:32.500\nby some other process,\nthen definitely change that.\n\n192\n00:10:32.500 --> 00:10:33.650\nI've stored it in the variables, so\n\n193\n00:10:33.650 --> 00:10:37.420\nit's easy to change wherever\nwe may use it, all right?\n\n194\n00:10:37.420 --> 00:10:38.610\nAnd then server.listen.\n\n195\n00:10:40.830 --> 00:10:45.020\nWell this is port 8080 and\nI like to add a little call back here.\n\n196\n00:10:45.020 --> 00:10:46.660\nI'm going to use an arrow flashing.\n\n197\n00:10:46.660 --> 00:10:53.180\nSay, console log and then back ticks,\nnow listening on port.\n\n198\n00:10:54.810 --> 00:10:58.680\nAnd then well, there we go, port.\n\n199\n00:10:58.680 --> 00:11:03.750\nThat back tick is going to allow me to\ndo interpolation of this string and\n\n200\n00:11:03.750 --> 00:11:04.760\nthat is our server.\n\n201\n00:11:04.760 --> 00:11:06.870\nWe should probably make\nsure that it works.\n\n202\n00:11:06.870 --> 00:11:09.080\nSo I'm gonna say node index.js.\n\n203\n00:11:09.080 --> 00:11:12.650\nNow listening on port 8080,\nwe're gonna hop over to the browser.\n\n204\n00:11:12.650 --> 00:11:15.810\nAnd let me close out some of these tabs.\n\n205\n00:11:15.810 --> 00:11:23.380\nAnd local host 8080 and you should see it\nworks, and that is the basis of our proxy.\n\n206\n00:11:23.380 --> 00:11:26.890\nThat's all it takes to get our\nExpress server up and running.\n\n207\n00:11:26.890 --> 00:11:30.235\n&gt;&gt; Now, are we finished after\nbuilding that small Express server?\n\n208\n00:11:30.235 --> 00:11:32.715\n&gt;&gt; We are not finished with this, right?\n\n209\n00:11:32.715 --> 00:11:35.475\nWe still have a few other things to do.\n\n210\n00:11:35.475 --> 00:11:38.215\nAnd we can get a few of them done,\n\n211\n00:11:38.215 --> 00:11:41.605\nbut this will probably have to\nbleed over an additional episode.\n\n212\n00:11:41.605 --> 00:11:44.975\nBut there a few things that we\ncan go ahead and set up, okay?\n\n213\n00:11:44.975 --> 00:11:50.980\nKinda just set up in preparation for\nbuilding the other parts.\n\n214\n00:11:50.980 --> 00:11:58.130\nOkay so now that we have this working\nlet's think about this index.js file.\n\n215\n00:11:58.130 --> 00:12:01.170\nI could write every bit of code\nthat I'm ever gonna write for\n\n216\n00:12:01.170 --> 00:12:02.820\nthis server in this file.\n\n217\n00:12:04.140 --> 00:12:07.360\nI like to think of this file as setup and\nstart, right.\n\n218\n00:12:07.360 --> 00:12:10.520\nYou get in your car, you put on your\nseat belt, you close your door,\n\n219\n00:12:10.520 --> 00:12:13.370\nyou lock your door\n&gt;&gt; You make sure it's out gear you\n\n220\n00:12:13.370 --> 00:12:17.370\nturn it on,\nthat's essentially what this file is.\n\n221\n00:12:17.370 --> 00:12:19.980\nThis file should not be get a new car,\n\n222\n00:12:19.980 --> 00:12:23.210\nsomeone paints your car, puts the engine\non, or puts the wheels on, right?\n\n223\n00:12:24.530 --> 00:12:28.960\nIt gets a little muddy so let's build\nout kind of a project structure and\n\n224\n00:12:28.960 --> 00:12:31.940\nthink about now it might be a little\nover kill for what we are doing, but\n\n225\n00:12:31.940 --> 00:12:35.612\nit helps just in case you want to come and\nadd some features cuz, who knows?\n\n226\n00:12:35.612 --> 00:12:38.980\nWe might want to come back and\nadd features to our proxy service.\n\n227\n00:12:38.980 --> 00:12:39.812\n&gt;&gt; Who knows?\n\n228\n00:12:39.812 --> 00:12:40.900\n&gt;&gt; Who knows, all right!\n\n229\n00:12:41.900 --> 00:12:44.520\nSo here's our proxy and\nwe're gonna come and\n\n230\n00:12:44.520 --> 00:12:49.520\nkill our application that's Ctrl+C and\nCtrl+C couple of\n\n231\n00:12:49.520 --> 00:12:54.120\ntime should kill the act of process cuz\nit hangs standard in and standard out.\n\n232\n00:12:54.120 --> 00:12:58.970\nThis kinda hijacks, and\nnow let's do some additional setup just so\n\n233\n00:12:58.970 --> 00:13:02.480\nwe have some maybe some logging,\nsome appropriate project structure.\n\n234\n00:13:02.480 --> 00:13:06.350\nSo I'm going to create a few directories\nhere, and this is just you know,\n\n235\n00:13:06.350 --> 00:13:07.620\nwe might need these.\n\n236\n00:13:07.620 --> 00:13:12.602\nMiddlewares, middleware,\nand then routers, okay?\n\n237\n00:13:12.602 --> 00:13:17.530\nNow again, I haven't done a lot of\nExpress work, we'll touch on these, but\n\n238\n00:13:17.530 --> 00:13:21.910\nyou should definitely go check\nour other videos on Express on\n\n239\n00:13:21.910 --> 00:13:23.480\nwhat these pieces mean, all right!\n\n240\n00:13:23.480 --> 00:13:29.050\nSo middleware and routers and then inside\nof that what router am I going to build?\n\n241\n00:13:29.050 --> 00:13:31.950\nI'm proxying a weather request, right?\n\n242\n00:13:33.570 --> 00:13:43.470\nSo I can touch\nrouters/weather.router.js okay.\n\n243\n00:13:43.470 --> 00:13:45.670\nNow what are some other\nmiddleware that I need?\n\n244\n00:13:45.670 --> 00:13:51.300\nWell we'regonna leave that empty for\nnow, but I am going to install one, that\n\n245\n00:13:51.300 --> 00:13:56.800\nwe could write ourselves, but I'd like a\nmore full featured and it's called Morgan.\n\n246\n00:13:56.800 --> 00:14:01.550\n&gt;&gt; It's actually named after a show\nif you've ever watched it, Dexter.\n\n247\n00:14:02.910 --> 00:14:04.254\n&gt;&gt; Yeah.\n&gt;&gt; It's actually named after\n\n248\n00:14:04.254 --> 00:14:06.730\nDexter Morgan, well that was\nwhat was in the read me before.\n\n249\n00:14:06.730 --> 00:14:10.920\nSo let's go to npmjs.\n\n250\n00:14:10.920 --> 00:14:15.730\nSo let's look at Morgan,\nand Morgan there we go,\n\n251\n00:14:17.140 --> 00:14:22.720\nit is named after Dexter, a show that\nyou should not watch until completion.\n\n252\n00:14:22.720 --> 00:14:25.500\nSo Morgan is this middleware.\n\n253\n00:14:25.500 --> 00:14:26.700\nNow this has been around for a while.\n\n254\n00:14:26.700 --> 00:14:29.340\nThis is not the only\none that provides this.\n\n255\n00:14:29.340 --> 00:14:34.010\nUse a predefined format string,\nuse a format string of predefined tokens.\n\n256\n00:14:34.010 --> 00:14:35.610\nYou can actually give it a pattern.\n\n257\n00:14:35.610 --> 00:14:38.490\nThere's a lot that we can do,\nwe're gonna use this for development.\n\n258\n00:14:38.490 --> 00:14:40.550\nSo I'm gonna get kind of\nan intermediate here.\n\n259\n00:14:40.550 --> 00:14:46.090\nI could write this myself but Morgan's\ngonna over the ability to change this\n\n260\n00:14:46.090 --> 00:14:50.390\nbased on, well, our production needs and\nour development needs.\n\n261\n00:14:50.390 --> 00:14:53.430\nAnd ultimately, most of what we're gonna\nbe in this series is development needs.\n\n262\n00:14:53.430 --> 00:14:55.160\n&gt;&gt; Is there a splatter pattern?\n\n263\n00:14:55.160 --> 00:14:56.210\n&gt;&gt; Splatter pattern.\n\n264\n00:14:56.210 --> 00:15:00.745\nWell, actually I guess technically we\ncould say there's splatter pattern.\n\n265\n00:15:00.745 --> 00:15:02.570\n&gt;&gt; [LAUGH]\n&gt;&gt; We're gonna go with no.\n\n266\n00:15:02.570 --> 00:15:04.360\n&gt;&gt; No, okay [LAUGH].\n\n267\n00:15:04.360 --> 00:15:07.550\n&gt;&gt; So, let's npm install and\n\n268\n00:15:07.550 --> 00:15:10.990\nI'm gonna keep this in production because\nI like to have these logs outputted.\n\n269\n00:15:10.990 --> 00:15:14.530\nSo, I'm gonna say --save.\n\n270\n00:15:14.530 --> 00:15:19.460\nJust like we did with express,\nand now morgan's in our project.\n\n271\n00:15:20.660 --> 00:15:26.470\nAnd now if that's the case, well,\nI'm going to get rid of this, okay.\n\n272\n00:15:26.470 --> 00:15:28.732\nNo excuse me,\nI'm not going to get rid of that just yet.\n\n273\n00:15:28.732 --> 00:15:32.190\n[LAUGH] We're going to come back,\nI am going to get rid of siri though.\n\n274\n00:15:33.490 --> 00:15:37.540\nAnd I'm going to require Morgan,\nand I'm just going to say,\n\n275\n00:15:37.540 --> 00:15:42.100\nthis is middleware imports, okay.\n\n276\n00:15:42.100 --> 00:15:47.126\nNow I pull these apart just because we\nmay need these in different places.\n\n277\n00:15:47.126 --> 00:15:54.700\nSo const logger, actually wait for\n\n278\n00:15:54.700 --> 00:15:59.430\nit, there we go I'm going to call it\nlogger, even though its called morgan,\n\n279\n00:15:59.430 --> 00:16:02.480\njust because I think that description\nis a little more applicable.\n\n280\n00:16:04.406 --> 00:16:09.460\nAnd now, what's really weird about this\nis this returns an additional function,\n\n281\n00:16:09.460 --> 00:16:10.930\nthat you have to pass arguments to.\n\n282\n00:16:10.930 --> 00:16:13.340\nIf you kind of read the documentation,\n\n283\n00:16:13.340 --> 00:16:18.150\nyou can see that once you\nrequire Morgan like you do here.\n\n284\n00:16:18.150 --> 00:16:20.990\nYou have to call it again\nto actually get the logger.\n\n285\n00:16:20.990 --> 00:16:22.900\nThat's because it takes a string or\n\n286\n00:16:22.900 --> 00:16:27.570\nsome setup parameters, creates the logger\nfor you, the actual logging middleware.\n\n287\n00:16:27.570 --> 00:16:31.200\nAnd gives that back to\nyou in order to wire up.\n\n288\n00:16:31.200 --> 00:16:33.800\nThe one that I typically use and\n\n289\n00:16:33.800 --> 00:16:36.840\nit's almost a little bit of\na habit I'm not gonna lie to you.\n\n290\n00:16:36.840 --> 00:16:43.560\nI'm going to use the dev logger.\n\n291\n00:16:43.560 --> 00:16:48.010\nOkay so notice I call logger as\na function with dev in there.\n\n292\n00:16:48.010 --> 00:16:52.642\nNow let's go see if it works and\nthat might be a good stopping point\n\n293\n00:16:52.642 --> 00:16:57.548\nbefore we come back and worry about\nthe routers and things like that.\n\n294\n00:16:57.548 --> 00:17:03.864\nSo node index.JS, everything looks\nthe same but if I come back to my browser,\n\n295\n00:17:03.864 --> 00:17:09.796\nand I refresh, it looks the same,\nit still worked right, if I come back,\n\n296\n00:17:09.796 --> 00:17:15.565\nnotice that I have a GET request,\nwhat URL did I make the GET request to?\n\n297\n00:17:17.291 --> 00:17:18.533\nWhat is the status code,\n\n298\n00:17:18.533 --> 00:17:22.820\n304 that means that was already there\nthere is not really anything new.\n\n299\n00:17:22.820 --> 00:17:27.610\nAnd that's based on some of\nthe browser request cycles and\n\n300\n00:17:27.610 --> 00:17:29.990\nthings and\n3.55 milliseconds to make that request.\n\n301\n00:17:29.990 --> 00:17:35.380\nNow there's these two dashes and we'll see\nthose kind of come up as need be but this\n\n302\n00:17:35.380 --> 00:17:38.230\nis nice because if your using a service\nwhere you can actually keep the logs.\n\n303\n00:17:38.230 --> 00:17:43.570\nYou can get a usage pattern a little\nbit like make GET request and\n\n304\n00:17:43.570 --> 00:17:45.140\nit's three or four.\n\n305\n00:17:45.140 --> 00:17:47.850\nEspecially if maybe your app breaks,\n\n306\n00:17:47.850 --> 00:17:50.400\nmaybe your front end app\nstarts doing weird things.\n\n307\n00:17:50.400 --> 00:17:55.320\nAnd you go and look at the logs on your\nproxy and you find that one of your routes\n\n308\n00:17:55.320 --> 00:18:01.650\nstarted 404ing or 500ing a lot,\ngiving you 500 statuses, or 404 statuses.\n\n309\n00:18:01.650 --> 00:18:03.190\nThat means something's\nbroke about that and\n\n310\n00:18:03.190 --> 00:18:05.030\nit's not actually in your\nfront end application.\n\n311\n00:18:05.030 --> 00:18:08.440\nSo it's good for debugging and kind of\nfiguring out what problems are wrong.\n\n312\n00:18:08.440 --> 00:18:12.440\nNow we are nowhere close to being\nfinished with the proxy, but\n\n313\n00:18:12.440 --> 00:18:16.090\nthis might be a good time to go ahead and\ntake a step out.\n\n314\n00:18:16.090 --> 00:18:20.040\nAnd come back with a part 2, well,\nto hopefully finish up that proxy.\n\n315\n00:18:20.040 --> 00:18:23.172\nYou never know, we might even have\nto go a little bit longer than that.\n\n316\n00:18:23.172 --> 00:18:26.110\n&gt;&gt; Where there at with AngularJS and\nExpress,\n\n317\n00:18:26.110 --> 00:18:28.910\nbuilding the proxy,\nany last words on this right now?\n\n318\n00:18:28.910 --> 00:18:30.530\n&gt;&gt; Well, you should definitely stay tuned,\n\n319\n00:18:30.530 --> 00:18:33.910\nbecause well we're just getting started\nwith this proxy, it's gonna be a little\n\n320\n00:18:33.910 --> 00:18:39.641\nmore in depth than sometimes I even\ngive credit for so stay tuned.\n\n321\n00:18:39.641 --> 00:18:43.640\n&gt;&gt; App with Angular JS Express, there\nwill be several videos in this series,\n\n322\n00:18:43.640 --> 00:18:45.720\nmake sure you watch every one\nof them you'll be glad you did.\n\n323\n00:18:45.720 --> 00:18:47.240\nAnd thank you for watching Dev Pro TV,\n\n324\n00:18:47.240 --> 00:18:49.550\nremember a good dev pro\nis always learning.\n\n325\n00:18:49.550 --> 00:18:50.363\nI'm Zach Memos.\n\n326\n00:18:50.363 --> 00:18:51.110\n&gt;&gt; And I'm Justin.\n\n327\n00:18:51.110 --> 00:18:53.239\n&gt;&gt; And we'll see you next time.\n\n328\n00:18:53.239 --> 00:18:57.316\n[MUSIC]\n\n",
          "vimeoId": "226356253"
        },
        {
          "description": "Justin an Zach continue discussing Building The Proxy, adding additional elements to the Proxy, making a request to DarkSky, and what we would want to hide to keep from exposing our secrets.",
          "length": "1554",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-2-1-2-building_the_proxy_pt2-071817-PGM.00_38_46_02.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-2-1-2-building_the_proxy_pt2-071817-PGM.00_38_46_02.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-2-1-2-building_the_proxy_pt2-071817-PGM.00_38_46_02.Still001-sm.jpg",
          "title": "Building the Proxy Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:05.746\n[MUSIC]\n\n2\n00:00:05.746 --> 00:00:07.899\n&gt;&gt; Hello and thank you for\nchoosing DevProTV,\n\n3\n00:00:07.899 --> 00:00:09.771\nhelping you to learn wherever you go.\n\n4\n00:00:09.771 --> 00:00:11.808\nI'm your host, Zach Memos,\n\n5\n00:00:11.808 --> 00:00:16.212\nas we continue on with weather\napps with AngularJS and Express.\n\n6\n00:00:16.212 --> 00:00:19.279\nAnd this is part two of\nbuilding the proxy, and\n\n7\n00:00:19.279 --> 00:00:23.618\ngetting us the information we need\nis our IT Pro Justin Dennison.\n\n8\n00:00:23.618 --> 00:00:24.825\nJustin good to see you again, sir.\n\n9\n00:00:24.825 --> 00:00:28.050\n&gt;&gt; It is good to see you as well Zach and\nhow are you today?\n\n10\n00:00:28.050 --> 00:00:29.101\n&gt;&gt; Well I'm good [LAUGH],\n\n11\n00:00:29.101 --> 00:00:32.240\nI'm ready for part two,\nI want to find out what's going on.\n\n12\n00:00:32.240 --> 00:00:35.710\nAnd part one,\nwe've started to build a proxy, right?\n\n13\n00:00:35.710 --> 00:00:39.250\nYou said you that had some other things\nyou wanted to do or build or whatever.\n\n14\n00:00:39.250 --> 00:00:39.822\nWhat's next?\n\n15\n00:00:39.822 --> 00:00:44.412\n&gt;&gt; All right, well, in part one,\nit was kind of a cliffhanger.\n\n16\n00:00:44.412 --> 00:00:46.760\nYou know, it wasn't crazy dramatic but\n\n17\n00:00:46.760 --> 00:00:49.380\nit's definitely not\na full functioning proxy.\n\n18\n00:00:49.380 --> 00:00:54.790\nNow, there is a little more that we have\nto work on in order to get that going.\n\n19\n00:00:54.790 --> 00:00:57.133\nSo let's go ahead and\ntake a look at my screen here and\n\n20\n00:00:57.133 --> 00:00:58.854\ndo a quick review of where we left off.\n\n21\n00:00:58.854 --> 00:01:00.921\nNumber one, I'm gonna go ahead and\nkill this service.\n\n22\n00:01:00.921 --> 00:01:04.902\nI left it running, I just wanted to\nsee could I battle test it, right?\n\n23\n00:01:04.902 --> 00:01:06.122\nIs it gonna run forever?\n\n24\n00:01:06.122 --> 00:01:08.130\nAnd it in fact did.\n\n25\n00:01:08.130 --> 00:01:12.433\nThe first thing I'm going to do is\nif I LS, I'm gonna fix a typo that I\n\n26\n00:01:12.433 --> 00:01:16.831\nhad in there [LAUGH] In episode one,\nwhere middleware is misspelled.\n\n27\n00:01:16.831 --> 00:01:22.345\nSo I'm gonna say mv middlware to\nactually the word middleware, all right?\n\n28\n00:01:22.345 --> 00:01:24.687\nSo we did that,\nthat's not really necessary but\n\n29\n00:01:24.687 --> 00:01:27.773\nI don't think you wanna watch me\nin this episode grit my teeth and\n\n30\n00:01:27.773 --> 00:01:31.109\nkind of wring my hands together,\nbecause something is misspelled.\n\n31\n00:01:31.109 --> 00:01:35.173\nI know, I know, it's a personal thing,\nbut it's fixed, all right?\n\n32\n00:01:35.173 --> 00:01:39.070\nSo, we have middleware,\nwe have our installed loan modules,\n\n33\n00:01:39.070 --> 00:01:42.240\nwe have Express and Morgan,\nas part of our logger.\n\n34\n00:01:42.240 --> 00:01:43.780\nWe could have written that logger for us,\n\n35\n00:01:43.780 --> 00:01:47.950\nbut when it's used a community based\none and then, we had our router.\n\n36\n00:01:47.950 --> 00:01:51.690\nSo I think the best thing to do is we're\ngonna start wiring up our router and\n\n37\n00:01:51.690 --> 00:01:52.940\nget that working.\n\n38\n00:01:52.940 --> 00:01:55.848\nBut in order to do that we\nhave to talk about something.\n\n39\n00:01:55.848 --> 00:01:58.762\nAnd what do we need to talk about?\n\n40\n00:01:58.762 --> 00:02:03.950\nWell, what API are we going to adopt for\nour proxy service?\n\n41\n00:02:03.950 --> 00:02:08.590\nWe're building an HTTP proxy effectively.\n\n42\n00:02:08.590 --> 00:02:12.980\nI want to make a request to it and\nthen it make the request for\n\n43\n00:02:12.980 --> 00:02:15.170\nme on my behalf, right?\n\n44\n00:02:15.170 --> 00:02:17.810\nHowever, how is that gonna happen?\n\n45\n00:02:17.810 --> 00:02:20.110\nHow are we going to design that?\n\n46\n00:02:20.110 --> 00:02:22.611\nMy recommendation is if\nyou ever have to do this,\n\n47\n00:02:22.611 --> 00:02:25.606\nyou should almost mirror the API\nthat is available to you.\n\n48\n00:02:25.606 --> 00:02:28.090\nPick and choose the parts that you need.\n\n49\n00:02:28.090 --> 00:02:36.180\nSo with that said,\ninside of my weather app here,\n\n50\n00:02:37.640 --> 00:02:45.650\nwe could go to /forecast/(apiKey)/\njust like so /lat,lon.\n\n51\n00:02:45.650 --> 00:02:51.050\nNow, these are parameters So these\nare gonna be things that are changing.\n\n52\n00:02:51.050 --> 00:02:52.978\nBut what does that mean?\n\n53\n00:02:52.978 --> 00:02:57.080\nAnd that's kinda hard to see so I'm gonna\nuncomment that just for a moment here.\n\n54\n00:02:57.080 --> 00:02:59.140\nBut I'll comment it back out.\n\n55\n00:02:59.140 --> 00:03:01.850\nThis was the end of that URL.\n\n56\n00:03:01.850 --> 00:03:06.839\nThat's the part that we care about because\nthis is going to be kinda running on\n\n57\n00:03:06.839 --> 00:03:08.160\na variety of hosts.\n\n58\n00:03:08.160 --> 00:03:10.340\nA variety of domains.\n\n59\n00:03:10.340 --> 00:03:13.852\nThose endpoints, what we see\nafter the .com that's important.\n\n60\n00:03:13.852 --> 00:03:16.581\nThis is what we had in Dark Sky,\neffectively.\n\n61\n00:03:16.581 --> 00:03:19.327\nNow we had a lot of other things\nthat we could put on there,\n\n62\n00:03:19.327 --> 00:03:20.654\nlike additional queries.\n\n63\n00:03:20.654 --> 00:03:22.090\nWe could do other things.\n\n64\n00:03:22.090 --> 00:03:24.920\nBut ultimately what I want is\nI wanna take a latitude and\n\n65\n00:03:24.920 --> 00:03:29.850\na longitude, I wanna put it in the URL\njust like we did in our previous episode,\n\n66\n00:03:29.850 --> 00:03:33.420\ndefinitely go check that out if\nyou haven't watched our setup and\n\n67\n00:03:33.420 --> 00:03:35.820\nintroduction episode,\nyou may actually take a look there.\n\n68\n00:03:37.170 --> 00:03:38.170\nI want a similar API.\n\n69\n00:03:38.170 --> 00:03:43.930\nNow, in order to differentiate,\nwell first up, I don't\n\n70\n00:03:43.930 --> 00:03:48.700\nwant to put the apiKey because the entire\npurpose of this is to hide that away.\n\n71\n00:03:48.700 --> 00:03:49.680\nIn our proxy service.\n\n72\n00:03:51.580 --> 00:03:57.210\nIn addition to, just to keep things\nstraight, I know it's forecast.\n\n73\n00:03:57.210 --> 00:04:00.550\nI know it's technically forecast,\nI'm going to do something like this.\n\n74\n00:04:01.950 --> 00:04:04.700\nI'm gonna say, /weather/:lat,:lon.\n\n75\n00:04:04.700 --> 00:04:07.490\nNow, what do I mean by colon?\n\n76\n00:04:07.490 --> 00:04:10.150\nThose are replaceable parameters, right?\n\n77\n00:04:10.150 --> 00:04:14.270\nEffectively, what I'm gonna\nhave Is instead like I\n\n78\n00:04:15.550 --> 00:04:19.210\ndon't know, 10 negative 122.\n\n79\n00:04:19.210 --> 00:04:23.400\nSomething like that where I have 10\ndegrees north, 122 degrees west.\n\n80\n00:04:23.400 --> 00:04:28.860\nOr to reproduce I should get 23,\nright 23 north, negative 122 degrees.\n\n81\n00:04:30.220 --> 00:04:32.530\nWhich is 122 degrees west.\n\n82\n00:04:32.530 --> 00:04:35.610\nSo, I want something like this so\nin order to\n\n83\n00:04:35.610 --> 00:04:39.030\nreproduce that I'm going to build\nan external what's called a router and\n\n84\n00:04:39.030 --> 00:04:41.350\nexpress thing of them\nas many applications.\n\n85\n00:04:41.350 --> 00:04:45.540\nAnd I'm doing it this way because\nto keep our index.js file clean.\n\n86\n00:04:45.540 --> 00:04:48.439\nI wanna keep every thing clean and\nhave things single purposed.\n\n87\n00:04:50.110 --> 00:04:53.910\nSo that's our next course of action,\nand well I guess there's no better\n\n88\n00:04:53.910 --> 00:04:57.150\ntime than now to actually see\nhow that comes to fruition.\n\n89\n00:04:57.150 --> 00:04:57.890\n&gt;&gt; Do it!\n\n90\n00:04:57.890 --> 00:05:00.610\n&gt;&gt; So, let's bring an express, and\n\n91\n00:05:00.610 --> 00:05:03.150\nthe reason we need that is that\nwe need that router constructor.\n\n92\n00:05:05.400 --> 00:05:10.930\nSo the router constructor is going to\nallow us to create a router and again,\n\n93\n00:05:10.930 --> 00:05:16.090\nit's not quite a full-fledged application,\nbut it allows us to build these individual\n\n94\n00:05:16.090 --> 00:05:21.650\npieces that we bring together and\nput in our other applications, okay?\n\n95\n00:05:21.650 --> 00:05:23.500\nNow there's several ways to wire these up.\n\n96\n00:05:23.500 --> 00:05:28.270\nTo provide some explicitness, I'm going\nto make sure that the route's here\n\n97\n00:05:28.270 --> 00:05:32.470\nReflect what I'm anticipating,\nfor people to visit, all right.\n\n98\n00:05:33.640 --> 00:05:38.435\nBefore I forget, we are going to import\nthis and wire it up inside of our\n\n99\n00:05:38.435 --> 00:05:43.268\nindex.js so I'm gonna module.exports,\nsend that out, boom, it's ready to go.\n\n100\n00:05:43.268 --> 00:05:47.040\nOkay so now All I want,\n\n101\n00:05:47.040 --> 00:05:50.959\nis if there is a get request,\n\n102\n00:05:50.959 --> 00:05:55.880\nto /weather/:lat,:lon',\n\n103\n00:05:55.880 --> 00:06:00.310\nthen I want to run this handler function,\nokay?\n\n104\n00:06:00.310 --> 00:06:01.720\nNow.\n\n105\n00:06:01.720 --> 00:06:06.160\nThis handler function, it's probably\nbest if we give that third parameter,\n\n106\n00:06:06.160 --> 00:06:10.750\nwhich allows us to call the next route,\nand we'll handle that shortly.\n\n107\n00:06:10.750 --> 00:06:13.790\nJust in case we need to\npass on some information\n\n108\n00:06:13.790 --> 00:06:18.670\nto the next handler that could\npossibly run for an incoming request.\n\n109\n00:06:18.670 --> 00:06:20.880\nSo, what do I want?\n\n110\n00:06:20.880 --> 00:06:24.830\nYou know,\nI am gonna get a JSON response back.\n\n111\n00:06:24.830 --> 00:06:29.990\nSo I'm going to more or\nless mock that up for now okay?\n\n112\n00:06:29.990 --> 00:06:32.457\nSo I'm gonna say res.status(200).\n\n113\n00:06:32.457 --> 00:06:36.170\nIt's always good to give\nan HTTP status code.\n\n114\n00:06:36.170 --> 00:06:40.930\nJust because Well, number one,\nI think it defaults to 200.\n\n115\n00:06:40.930 --> 00:06:44.690\nBut being explicit like this,\nas you know, if it hits this line,\n\n116\n00:06:44.690 --> 00:06:47.960\nwe have been successful, and\nwe're returning a response.\n\n117\n00:06:47.960 --> 00:06:49.130\nBut what is the JSON?\n\n118\n00:06:50.190 --> 00:06:57.460\nWell, the JSON that I'm sending in,\nlet's just say, latitude Is 20.\n\n119\n00:06:57.460 --> 00:07:00.210\nWe're just putting something in there.\n\n120\n00:07:00.210 --> 00:07:02.310\nLongitude is 30.\n\n121\n00:07:02.310 --> 00:07:07.410\nAll right, so\nnow we have this router kinda built\n\n122\n00:07:08.640 --> 00:07:11.080\nwe need to include it\nin our index such as.\n\n123\n00:07:11.080 --> 00:07:12.250\nKinda wired up.\n\n124\n00:07:12.250 --> 00:07:13.890\nGet it ready to use.\n\n125\n00:07:13.890 --> 00:07:14.870\nSo how do I do that?\n\n126\n00:07:14.870 --> 00:07:19.040\nBecause I had this module.exports\nI can come over to index.js and\n\n127\n00:07:19.040 --> 00:07:21.240\nbring in, well my routers.\n\n128\n00:07:21.240 --> 00:07:26.410\nSo let's just say router imports and\n\n129\n00:07:26.410 --> 00:07:29.800\nyou know to some extent there's some\nleeway of how these are arranged.\n\n130\n00:07:29.800 --> 00:07:32.740\nMiddleware and routers the order\ndoes matter how you wire them up\n\n131\n00:07:32.740 --> 00:07:35.520\ncuz that's how the request\nkind of cascades through.\n\n132\n00:07:35.520 --> 00:07:39.776\nSo I'm gonna say const weatherRouter =\n\n133\n00:07:39.776 --> 00:07:45.417\nrequire('./routers/weather.router').\n\n134\n00:07:45.417 --> 00:07:50.551\nNow the naming convention here is my own\npersonal thing just because I know what it\n\n135\n00:07:50.551 --> 00:07:55.926\nis, especially if I'm in a folder that\ndoesn't allow me to prepend the /routers.\n\n136\n00:07:55.926 --> 00:08:00.373\nI'm in the same folder for some reason or\nI need to come out of folder.\n\n137\n00:08:00.373 --> 00:08:03.606\nThen sometimes it's nice, right?\n\n138\n00:08:03.606 --> 00:08:07.100\nIt's not necessary, I could just say,\nrouters/weather.js.\n\n139\n00:08:07.100 --> 00:08:08.920\nSo this is kinda my own little thing.\n\n140\n00:08:10.030 --> 00:08:12.300\nNow, where am I gonna wire this up?\n\n141\n00:08:12.300 --> 00:08:14.770\nUltimately, I'm going to get rid of this.\n\n142\n00:08:14.770 --> 00:08:16.317\nAnd because I'm ultimately\ngonna get rid of it,\n\n143\n00:08:16.317 --> 00:08:17.534\nlet's just go ahead and get rid of it.\n\n144\n00:08:17.534 --> 00:08:18.300\n&gt;&gt; Yeah.\n\n145\n00:08:18.300 --> 00:08:20.472\n&gt;&gt; And it's all gone, right?\n\n146\n00:08:20.472 --> 00:08:26.850\nSo server.use, and\nI'm just gonna say use the weather router.\n\n147\n00:08:26.850 --> 00:08:30.460\nIt almost looks like a middle ware,\nbut now I have essentially\n\n148\n00:08:30.460 --> 00:08:35.630\na station where things drop off,\nand actually get processed, right?\n\n149\n00:08:35.630 --> 00:08:38.950\nSo go through the logger,\nnow come to the weather router.\n\n150\n00:08:38.950 --> 00:08:40.630\nOnly if the route matches,\n\n151\n00:08:40.630 --> 00:08:44.580\nonly if the URL matches,\nis the weather router going to respond.\n\n152\n00:08:44.580 --> 00:08:48.770\nI've got all this up and going, and, well,\n\n153\n00:08:48.770 --> 00:08:52.610\nlet's start up our,\nyou gotta spell things correctly.\n\n154\n00:08:53.620 --> 00:08:57.130\nIt's express not expess.\n\n155\n00:08:57.130 --> 00:08:58.464\nThat's important.\n\n156\n00:08:58.464 --> 00:09:00.580\nSo I have things up and running.\n\n157\n00:09:00.580 --> 00:09:07.079\nAnd now I can come over and\ngo to localhost/weather/,\n\n158\n00:09:07.079 --> 00:09:10.543\nand it can be whatever I want.\n\n159\n00:09:10.543 --> 00:09:14.080\nI want 10,120.\n\n160\n00:09:14.080 --> 00:09:15.680\nAnd there we go.\n\n161\n00:09:16.940 --> 00:09:21.260\nNotice that I have it really zoomed in,\nnumber one.\n\n162\n00:09:21.260 --> 00:09:23.620\nBut notice, there's our JSON information.\n\n163\n00:09:23.620 --> 00:09:28.020\nSo I sent JSON information, but\nI have latitude and longitude.\n\n164\n00:09:28.020 --> 00:09:31.360\nIt's hard coded, it's not quite there yet.\n\n165\n00:09:31.360 --> 00:09:35.793\nIn addition to, it would be nice\nif I could ensure whatever I'm\n\n166\n00:09:35.793 --> 00:09:40.479\nsending through as part of the URL,\nthis latitude and longitude,\n\n167\n00:09:40.479 --> 00:09:43.171\nwas actually being received as such.\n\n168\n00:09:43.171 --> 00:09:48.435\nNow, in express on the request,\nI have this dot params object,\n\n169\n00:09:48.435 --> 00:09:53.409\nthat if anything is marked as :lat :lon or\ncolon anything,\n\n170\n00:09:53.409 --> 00:09:58.478\nas part of the actual pattern,\nit will put them as a variable or\n\n171\n00:09:58.478 --> 00:10:01.130\nas a property on a reg.params.\n\n172\n00:10:01.130 --> 00:10:05.977\nSo, to make sure there's req.params.lat,\nand\n\n173\n00:10:05.977 --> 00:10:10.834\nthe only reason it's .lat\nis because this is lat.\n\n174\n00:10:10.834 --> 00:10:15.890\nAnd then here I'm gonna say\nreq.params.lon as such.\n\n175\n00:10:15.890 --> 00:10:18.290\nNow, kill this.\n\n176\n00:10:18.290 --> 00:10:20.330\nClear, let's restart.\n\n177\n00:10:20.330 --> 00:10:23.703\nNow, you have to kill it because\nwe changed something about it.\n\n178\n00:10:23.703 --> 00:10:26.194\nWe'll probably remedy that soon.\n\n179\n00:10:26.194 --> 00:10:29.880\nAnd I refresh, and notice it's 10, 120.\n\n180\n00:10:29.880 --> 00:10:33.691\nWell, if I go up here and\nI look, that's 10 and 120.\n\n181\n00:10:33.691 --> 00:10:38.480\nDo notice, though, these are strings,\nbecause by default these URL\n\n182\n00:10:38.480 --> 00:10:43.531\npatterns are strings and, well,\nour Weather Router is kind of in place.\n\n183\n00:10:43.531 --> 00:10:48.751\n&gt;&gt; That's nice, but that doesn't actually\nmake a request to Dark Sky, right?\n\n184\n00:10:48.751 --> 00:10:53.960\n&gt;&gt; Well, it doesn't, you caught me, right?\n\n185\n00:10:53.960 --> 00:10:55.580\nWe have our weather router in place.\n\n186\n00:10:55.580 --> 00:10:57.510\nWe've done this kind of testing.\n\n187\n00:10:57.510 --> 00:11:03.050\nBut ultimately you're right, we need\nto make a request based on our API key\n\n188\n00:11:03.050 --> 00:11:05.520\nto Dark Sky based on these latitude and\n\n189\n00:11:05.520 --> 00:11:08.640\nlongitude that are passed in through\nthis API that we've developed.\n\n190\n00:11:08.640 --> 00:11:10.380\nAnd then get that response back.\n\n191\n00:11:10.380 --> 00:11:15.363\nUltimately, what I should get is,\nif I come here and\n\n192\n00:11:15.363 --> 00:11:19.797\nI look, I should get 37, negative 122.\n\n193\n00:11:19.797 --> 00:11:23.170\nIf I come to this exact one, I should\nget the same request on either window.\n\n194\n00:11:23.170 --> 00:11:25.170\nNow, this is directly from Dark Sky.\n\n195\n00:11:25.170 --> 00:11:26.740\nThis has my API key.\n\n196\n00:11:26.740 --> 00:11:29.390\nI should keep that away from people,\nright?\n\n197\n00:11:29.390 --> 00:11:31.680\nNot necessarily because they're\nalways gonna be malicious.\n\n198\n00:11:31.680 --> 00:11:33.240\nMaybe they even don't even know.\n\n199\n00:11:33.240 --> 00:11:34.680\nBut I should protect this secret.\n\n200\n00:11:34.680 --> 00:11:38.520\nNow, you can see it, but\nI will reissue it after this episode so\n\n201\n00:11:38.520 --> 00:11:40.440\nit's not associated with me.\n\n202\n00:11:40.440 --> 00:11:43.960\nBut this is the part we wanna keep away.\n\n203\n00:11:43.960 --> 00:11:48.363\nWe do want the same information though,\nokay?\n\n204\n00:11:48.363 --> 00:11:50.460\nNow, how do I go about doing that?\n\n205\n00:11:50.460 --> 00:11:51.150\nWell, first off,\n\n206\n00:11:51.150 --> 00:11:55.500\nif we need information that we don't\nwant to be explicitly in our code.\n\n207\n00:11:58.619 --> 00:11:59.792\nWe need to figure that out, right?\n\n208\n00:11:59.792 --> 00:12:04.050\nOur API key,\nwe need to create credentials.\n\n209\n00:12:04.050 --> 00:12:08.084\nSo let's create another\nfile called credentials.js.\n\n210\n00:12:08.084 --> 00:12:10.830\nAnd there's a multitude\nof ways to do this.\n\n211\n00:12:10.830 --> 00:12:15.713\nI'm putting this at the top level of\nmy project, my proxy in particular.\n\n212\n00:12:15.713 --> 00:12:19.494\nSo I'm gonna say credentials.js and\n\n213\n00:12:19.494 --> 00:12:23.755\nnow I'm just gonna say module.exports.\n\n214\n00:12:23.755 --> 00:12:28.080\nmodule.exports = and\njust create an object.\n\n215\n00:12:28.080 --> 00:12:29.452\nAnd what is this object going to have?\n\n216\n00:12:29.452 --> 00:12:32.350\nIt's gonna have our API key.\n\n217\n00:12:32.350 --> 00:12:35.900\nAnd inside of that is going\nto be a copy of our API key.\n\n218\n00:12:37.690 --> 00:12:38.731\nSo here we go.\n\n219\n00:12:38.731 --> 00:12:43.470\nI'm gonna grab my API key and\njust paste it right there.\n\n220\n00:12:43.470 --> 00:12:47.142\nAnd this is kind of a,\nnot necessarily the best pattern, but\n\n221\n00:12:47.142 --> 00:12:50.024\nyou'll see how this plays\nout in the long term.\n\n222\n00:12:50.024 --> 00:12:53.490\nI'm not saying it's the absolute best.\n\n223\n00:12:53.490 --> 00:12:57.720\nI think it's a pretty good one, but\nit's not necessarily the absolute best.\n\n224\n00:12:57.720 --> 00:13:01.910\nBut now, I have this as a module.exports.\n\n225\n00:13:01.910 --> 00:13:05.070\nIt's in credentials.js,\nit's all good to go.\n\n226\n00:13:05.070 --> 00:13:07.060\nHow do I use that to make a request?\n\n227\n00:13:07.060 --> 00:13:12.163\nWell, number one, we could use the HTTP\nmodule inside of node to make the request.\n\n228\n00:13:12.163 --> 00:13:15.545\n[SOUND] It's not the greatest.\n\n229\n00:13:15.545 --> 00:13:17.020\nLet me rephrase that.\n\n230\n00:13:17.020 --> 00:13:19.740\nIt's really powerful and\ngood at what it does, but\n\n231\n00:13:19.740 --> 00:13:23.760\nI tend to like a higher level\nAPI in order to do this.\n\n232\n00:13:23.760 --> 00:13:26.309\nIn addition to,\nbecause I know I'm gonna be making\n\n233\n00:13:26.309 --> 00:13:28.741\nrequests like this from\nmy AngularJS front end,\n\n234\n00:13:28.741 --> 00:13:32.263\nit would be nice if I don't have to\nknow two different things,right?\n\n235\n00:13:32.263 --> 00:13:36.943\nIf I could make the same HTTP request with\nAngular in the same manner that I do on\n\n236\n00:13:36.943 --> 00:13:42.002\nthe backend, or through my proxy service,\nthat would be handy dandy, all right?\n\n237\n00:13:42.002 --> 00:13:43.710\nSo how does that work?\n\n238\n00:13:44.850 --> 00:13:49.592\nWell, if we come over to npm, and\nI look for this package called axios.\n\n239\n00:13:49.592 --> 00:13:53.210\nThis is actually a very commonly used one.\n\n240\n00:13:53.210 --> 00:13:54.480\nIt can be used in the browser.\n\n241\n00:13:54.480 --> 00:13:57.270\nWe don't need it for the browser because,\n\n242\n00:13:57.270 --> 00:14:01.450\nwell, AngularJS has\nHTTP requests built in.\n\n243\n00:14:01.450 --> 00:14:04.355\nBut if I look, it is promised based.\n\n244\n00:14:04.355 --> 00:14:06.980\naxios.get.\n\n245\n00:14:06.980 --> 00:14:09.191\nWell, if you know anything about Angular,\n\n246\n00:14:09.191 --> 00:14:12.372\nyou're like,\nthat kinda looks like the $http service.\n\n247\n00:14:12.372 --> 00:14:15.700\nAnd we'll see more of that when we\nactually build the Angular front in.\n\n248\n00:14:15.700 --> 00:14:20.777\nBut I get promise based HTTP\nrequests that are fairly simple.\n\n249\n00:14:20.777 --> 00:14:23.805\nAwesome, well, let's go and use that.\n\n250\n00:14:23.805 --> 00:14:29.319\nBut I have to kill my server and\ninstall axios -- save.\n\n251\n00:14:29.319 --> 00:14:35.772\nNow, this is required for my deployment,\nso it's a standard dependency.\n\n252\n00:14:37.098 --> 00:14:40.910\nSo let's go ahead and\nget that all ready to go.\n\n253\n00:14:40.910 --> 00:14:46.661\nConst axios = require (\"axios\").\n\n254\n00:14:46.661 --> 00:14:49.355\nAnd then, you know I need that API key.\n\n255\n00:14:49.355 --> 00:14:54.687\nSo const, and\nI'm gonna do some de-structuring here.\n\n256\n00:14:54.687 --> 00:14:59.106\n(apiKey) = require.\n\n257\n00:14:59.106 --> 00:15:02.615\nCome out of that folder,\ncredentials, all right?\n\n258\n00:15:02.615 --> 00:15:05.600\nSo pull the API key off the credentials.\n\n259\n00:15:05.600 --> 00:15:07.470\nNow it's in this module.\n\n260\n00:15:07.470 --> 00:15:10.834\nWell, I can get rid of this,\nand now I need the latitude and\n\n261\n00:15:10.834 --> 00:15:12.291\nthe longitude, right?\n\n262\n00:15:12.291 --> 00:15:13.979\nSo let's think about\nwhat I need to provide.\n\n263\n00:15:13.979 --> 00:15:15.380\nI need to provide my apiKey, I got it.\n\n264\n00:15:15.380 --> 00:15:18.670\nI need to provide the latitude and\nlongitude.\n\n265\n00:15:18.670 --> 00:15:19.810\nWell, that's coming in through the URL.\n\n266\n00:15:19.810 --> 00:15:23.082\nBut it's actually coming as\npart of the request.params.\n\n267\n00:15:23.082 --> 00:15:29.289\nSo let's peal that off as {lat,\nlon} = req.params.\n\n268\n00:15:31.193 --> 00:15:33.140\nAll right.\nSo now I'm destructuring that object,\n\n269\n00:15:33.140 --> 00:15:34.560\ngrabbing just those two properties.\n\n270\n00:15:34.560 --> 00:15:42.909\nI really should check, I really should\ncheck to see if both of these are defined.\n\n271\n00:15:42.909 --> 00:15:44.507\nWe're gonna leave it be for now.\n\n272\n00:15:44.507 --> 00:15:46.419\nWe'll come back and tidy this up and\n\n273\n00:15:46.419 --> 00:15:50.610\nkinda pull it together as our\napplication grows in complexity.\n\n274\n00:15:50.610 --> 00:15:54.548\nBut now that I have Axios,\nI want to build the URL.\n\n275\n00:15:54.548 --> 00:15:56.661\nWhat URL am I gonna make a request to?\n\n276\n00:15:56.661 --> 00:15:58.434\nWell, what is the pattern?\n\n277\n00:15:58.434 --> 00:15:59.762\nHm.\n\n278\n00:15:59.762 --> 00:16:04.406\nWell, if I come over here and\n\n279\n00:16:04.406 --> 00:16:08.083\nI look and well just for\n\n280\n00:16:08.083 --> 00:16:13.520\nnow let's say base equals that.\n\n281\n00:16:13.520 --> 00:16:19.150\nI need this front portion then my API key.\n\n282\n00:16:19.150 --> 00:16:21.470\nAnd then the latitude and logitude.\n\n283\n00:16:21.470 --> 00:16:23.020\nSo that's the pattern that I need.\n\n284\n00:16:23.020 --> 00:16:25.402\nOkay, so that's the case.\n\n285\n00:16:25.402 --> 00:16:31.730\nI'm gonna get rid of this part, keep just\nthis base part in a variable called base,\n\n286\n00:16:31.730 --> 00:16:35.480\nand then I'm gonna use some\nstring interpolation here.\n\n287\n00:16:35.480 --> 00:16:40.170\nSo after the base,\nI want to add the API key.\n\n288\n00:16:42.210 --> 00:16:50.990\nAnd then, well, I want to add the lat,\nlon, just like so.\n\n289\n00:16:50.990 --> 00:16:52.280\nSo that's our URL.\n\n290\n00:16:52.280 --> 00:16:57.330\nAnd just to play around with it,\nlet's just say, rez.sendurl.\n\n291\n00:16:57.330 --> 00:16:58.480\nJust to see if it works.\n\n292\n00:16:58.480 --> 00:16:59.970\nSo, boom.\n\n293\n00:16:59.970 --> 00:17:05.220\nAnd now, if I come back over here and\nI click, there it is.\n\n294\n00:17:05.220 --> 00:17:09.390\nNotice I have double slashes.\n\n295\n00:17:09.390 --> 00:17:13.590\nThis is actually a common error when\npeople attempt to build these URLs,\n\n296\n00:17:13.590 --> 00:17:15.240\nthey'll forget an extra slash here and\nthere.\n\n297\n00:17:15.240 --> 00:17:16.230\nThis would actually fail.\n\n298\n00:17:16.230 --> 00:17:19.620\nIt would always fail and\nit's really hard to figure out.\n\n299\n00:17:19.620 --> 00:17:23.700\nSo I recommend testing this out,\nso what I'm gonna\n\n300\n00:17:23.700 --> 00:17:27.810\ndo just to keep this pattern going, I am\nactually gonna remove this slash here.\n\n301\n00:17:27.810 --> 00:17:30.878\nYou could keep it there and\nremove it down here in this url.\n\n302\n00:17:30.878 --> 00:17:34.556\nLet's restart.\n\n303\n00:17:34.556 --> 00:17:37.560\nYou cannot type res dot sen there.\n\n304\n00:17:37.560 --> 00:17:38.380\nSo let's restart.\n\n305\n00:17:39.760 --> 00:17:44.445\nAnd now, if you actually go to\n\n306\n00:17:44.445 --> 00:17:50.750\nweather/10,120, now I have\nthe full URL that I expect.\n\n307\n00:17:50.750 --> 00:17:55.900\nSince I have this URL, I can make\nAxios go get information for me.\n\n308\n00:17:55.900 --> 00:18:02.078\nBut what I'm gonna do is I'm gonna grab\nthis exact latitude and longitude.\n\n309\n00:18:05.310 --> 00:18:06.690\nThis is the exact sample one.\n\n310\n00:18:06.690 --> 00:18:10.060\nSo I want to compare those, right?\n\n311\n00:18:10.060 --> 00:18:13.071\nJust for kind of ease of thought.\n\n312\n00:18:13.071 --> 00:18:19.860\nSo I'm gonna say hey axios, I want\nyou to go get whatever's at this URL.\n\n313\n00:18:19.860 --> 00:18:23.800\nThis URL is based on what\npassed into our URL, right.\n\n314\n00:18:23.800 --> 00:18:26.370\nIt's kinda speaking on our behalf.\n\n315\n00:18:26.370 --> 00:18:30.060\nSo when you come back,\nwhatever response you get,\n\n316\n00:18:31.260 --> 00:18:37.949\nI want you to say\nres.status(200).json response\n\n317\n00:18:39.710 --> 00:18:42.940\nand I'll clean this up .data.\n\n318\n00:18:42.940 --> 00:18:44.660\nSo that's how long.\n\n319\n00:18:44.660 --> 00:18:50.000\nSo what I do is if I'm\nusing arrow functions.\n\n320\n00:18:50.000 --> 00:18:52.150\nI'll go ahead and\nput that on its own line.\n\n321\n00:18:52.150 --> 00:18:58.440\nAnd just for use I'll go ahead and\nreturn to make this stops at this point.\n\n322\n00:18:58.440 --> 00:19:01.930\nNow, here's a word of warning,\nthis is promise based.\n\n323\n00:19:01.930 --> 00:19:05.111\nSo this can't actually send a response\nuntil this promise resolves.\n\n324\n00:19:05.111 --> 00:19:06.986\nIt should happen pretty quickly.\n\n325\n00:19:06.986 --> 00:19:11.035\nIf you do not catch any errors, right,\n\n326\n00:19:11.035 --> 00:19:17.539\nif you do not catch the promises\nerrors this may time out on you,\n\n327\n00:19:17.539 --> 00:19:21.770\nit may start causing time out issues.\n\n328\n00:19:21.770 --> 00:19:30.500\nSo I would always say res.status 500 and\n.json.\n\n329\n00:19:30.500 --> 00:19:32.620\nNow it's probably better\nto have an error handler,\n\n330\n00:19:32.620 --> 00:19:37.490\nwe'll worry about that as we\nbuild this out a little more.\n\n331\n00:19:37.490 --> 00:19:41.690\nSo, I'm just going to\nres.status 500.json error.\n\n332\n00:19:41.690 --> 00:19:42.840\nSo send the error back.\n\n333\n00:19:42.840 --> 00:19:44.660\nSo if there's an error, send it back.\n\n334\n00:19:44.660 --> 00:19:49.450\nIf there's an actual response,\nthen give me the data back and\n\n335\n00:19:49.450 --> 00:19:51.860\nsend me as a 200, okay?\n\n336\n00:19:51.860 --> 00:19:54.070\nNow, this is an implicit return.\n\n337\n00:19:54.070 --> 00:19:55.330\nThis is an explicit return.\n\n338\n00:19:55.330 --> 00:19:57.190\nThat's how functions work.\n\n339\n00:19:57.190 --> 00:19:58.528\nWe should be good to go.\n\n340\n00:19:58.528 --> 00:20:05.540\nNode index.js and here we go.\n\n341\n00:20:05.540 --> 00:20:07.740\nAnd boom, there we are.\n\n342\n00:20:08.880 --> 00:20:10.780\nOne, five, so it's partly cloudy.\n\n343\n00:20:10.780 --> 00:20:12.100\nLet's come over here and refresh.\n\n344\n00:20:13.650 --> 00:20:15.990\nAnd it's one, five, zero, partly cloudy.\n\n345\n00:20:15.990 --> 00:20:17.300\nThese are exactly the same.\n\n346\n00:20:17.300 --> 00:20:21.880\nHowever, notice our API key is\nnot exposed as part of the URL.\n\n347\n00:20:21.880 --> 00:20:26.200\nAnd at last our proxy actually proxies and\n\n348\n00:20:26.200 --> 00:20:29.390\nforwards back the request\nas we anticipated.\n\n349\n00:20:29.390 --> 00:20:32.970\n&gt;&gt; So Justin, the proxy's great, but it's\na little annoying that you have to keep\n\n350\n00:20:32.970 --> 00:20:35.460\nstarting it and stopping it and\ngoing back and forth.\n\n351\n00:20:35.460 --> 00:20:37.580\nIs there any way that we could fix that?\n\n352\n00:20:37.580 --> 00:20:42.200\nThere is a way to fix that and well,\nlet's just go ahead and do that now so\n\n353\n00:20:42.200 --> 00:20:44.530\nwe don't have to worry\nabout that ever again.\n\n354\n00:20:44.530 --> 00:20:45.030\n&gt;&gt; Yeah.\n\n355\n00:20:45.030 --> 00:20:46.420\n&gt;&gt; I say ever again.\n\n356\n00:20:46.420 --> 00:20:49.100\nWe may have to worry about\nit from time to time.\n\n357\n00:20:49.100 --> 00:20:50.620\nSo let's take a look at my screen here.\n\n358\n00:20:50.620 --> 00:20:55.260\nAnd this whole starting and stopping to\nget the newest version, that's annoying.\n\n359\n00:20:55.260 --> 00:21:00.071\nSo let's go ahead and\nnpm install nodemon -- save- dev.\n\n360\n00:21:00.071 --> 00:21:02.400\nNow, this is kinda a process management.\n\n361\n00:21:02.400 --> 00:21:06.870\nIt watches your application code in node.\n\n362\n00:21:06.870 --> 00:21:09.750\nAnd anytime it detects a change,\n\n363\n00:21:09.750 --> 00:21:13.680\nit will restart in order to\nforce an update, all right?\n\n364\n00:21:13.680 --> 00:21:20.440\nSo, if that's the case, I could say\nnodemon, but I installed it locally only.\n\n365\n00:21:20.440 --> 00:21:23.180\nTypically, people will recommend\nthat you install this globally.\n\n366\n00:21:24.950 --> 00:21:27.910\nSometimes managing global version\nnumbers is a little bit of an issue.\n\n367\n00:21:27.910 --> 00:21:30.410\nAnd that's not saying that\nwe will never do that.\n\n368\n00:21:30.410 --> 00:21:34.770\nBut with nodemon, I installed it,\njust managing it's an issue.\n\n369\n00:21:34.770 --> 00:21:38.910\nIf I come to my package.json, notice,\nit's now part of devDependencies.\n\n370\n00:21:38.910 --> 00:21:43.440\nJust to review, I used a --save-dev.\n\n371\n00:21:43.440 --> 00:21:46.640\nWell that doesn't mean that\nit's not available to me.\n\n372\n00:21:46.640 --> 00:21:50.110\nIf I look in node modules\nin this .bin directory,\n\n373\n00:21:51.250 --> 00:21:56.730\nI have some executables, namely nodemon,\nbut I have to type out that whole path.\n\n374\n00:21:56.730 --> 00:22:01.960\nUnless, unless I come\nhere to the scripts and\n\n375\n00:22:01.960 --> 00:22:05.630\nsay double quotes cuz it's .json.\n\n376\n00:22:05.630 --> 00:22:07.700\nLet's make a dev task.\n\n377\n00:22:07.700 --> 00:22:11.040\nAnd now I'm just gonna\nsay nodemon index.js.\n\n378\n00:22:11.040 --> 00:22:12.250\nSo this is what I want to run.\n\n379\n00:22:12.250 --> 00:22:14.760\nI'm gonna use npm to run that.\n\n380\n00:22:14.760 --> 00:22:19.820\nAnd as a result, it's going to\nlook in this .bin directory for\n\n381\n00:22:19.820 --> 00:22:22.710\nanything that it can't\nfind kind of globally.\n\n382\n00:22:22.710 --> 00:22:26.891\nSo I forget how it look up, I think\nit actually looks in .bin first, and\n\n383\n00:22:26.891 --> 00:22:30.070\nthen looks globally, and\nthen will fail otherwise.\n\n384\n00:22:30.070 --> 00:22:35.530\nSo by doing that, I get this nice\nlittle task that says npm run dev,\n\n385\n00:22:35.530 --> 00:22:37.660\nand now it's running nodemon.\n\n386\n00:22:37.660 --> 00:22:41.860\nIf I come and make a change,\nlet's say I make a change to index.js.\n\n387\n00:22:41.860 --> 00:22:45.680\nI'm just gonna put some\nextra spaces there,\n\n388\n00:22:45.680 --> 00:22:49.130\nsave, notice that it\nrestarted automatically.\n\n389\n00:22:49.130 --> 00:22:53.280\nAnd now we can just code to our heart's\ncontent on our proxy service and\n\n390\n00:22:53.280 --> 00:22:54.080\nit runs all the time.\n\n391\n00:22:54.080 --> 00:22:57.810\nSo this is very handy, and I'm glad you\npointed that out and went ahead and\n\n392\n00:22:57.810 --> 00:23:00.980\nmade me fix that,\ncuz it'll save us some time up front.\n\n393\n00:23:00.980 --> 00:23:05.130\n&gt;&gt; Wonderful, so weather app\nwith Angular JS and Express, and\n\n394\n00:23:05.130 --> 00:23:07.610\nthis was part two of building a proxy.\n\n395\n00:23:07.610 --> 00:23:12.050\nThere is other video content in weather\napp with Angular JS and Express.\n\n396\n00:23:12.050 --> 00:23:15.130\nYou're gonna be wanting to see\nevery one of those videos.\n\n397\n00:23:15.130 --> 00:23:16.330\nAnything else you want to add?\n\n398\n00:23:16.330 --> 00:23:19.180\n&gt;&gt; Well just a final few thing,\nlet's go ahead and do that over.\n\n399\n00:23:19.180 --> 00:23:19.880\nSorry that was my bad.\n\n400\n00:23:19.880 --> 00:23:21.567\nI thought of something and\nI had to say it.\n\n401\n00:23:21.567 --> 00:23:22.461\n&gt;&gt; [SOUND] What happened?\n\n402\n00:23:22.461 --> 00:23:24.170\n&gt;&gt; No you didn't do anything wrong,\nit was me.\n\n403\n00:23:24.170 --> 00:23:24.670\n&gt;&gt; I did?\n\n404\n00:23:24.670 --> 00:23:26.140\nWhat I do?\n\n405\n00:23:27.270 --> 00:23:28.580\n&gt;&gt; You said is there anything else and\n\n406\n00:23:28.580 --> 00:23:30.990\nthen she cut because she thought\nwe were cut, like leaving.\n\n407\n00:23:32.810 --> 00:23:35.154\n&gt;&gt; Okay.\n&gt;&gt; [COUGH]\n\n408\n00:23:38.430 --> 00:23:40.931\n&gt;&gt; We can go back to Zack.\n\n409\n00:23:40.931 --> 00:23:44.380\nWe can just do that part over.\n\n410\n00:23:44.380 --> 00:23:46.360\n&gt;&gt; Yeah just begin the game.\n\n411\n00:23:46.360 --> 00:23:49.800\n&gt;&gt; Yeah, so you've definitely got\nour proxy servers working here.\n\n412\n00:23:49.800 --> 00:23:50.330\n&gt;&gt; Right, right, right.\n\n413\n00:23:50.330 --> 00:23:51.430\n&gt;&gt; Any final thoughts?\n\n414\n00:23:51.430 --> 00:23:51.930\n&gt;&gt; Okay.\n\n415\n00:23:55.410 --> 00:23:57.680\nWeather app with AngularJS and\nExpress part two.\n\n416\n00:23:57.680 --> 00:24:01.040\nThere was a part one, building the proxy,\nthat's where we're at right now.\n\n417\n00:24:01.040 --> 00:24:02.380\nAny final thoughts on that?\n\n418\n00:24:02.380 --> 00:24:07.220\n&gt;&gt; Well, there are a few final things,\nand maybe I wasn't exactly clear, right.\n\n419\n00:24:07.220 --> 00:24:10.800\nThere are obviously some assumptive\nknowledge in the node ecosystem,\n\n420\n00:24:10.800 --> 00:24:13.170\nhow to build these things\n&gt;&gt; But one final thing,\n\n421\n00:24:13.170 --> 00:24:16.325\nif we take a look back at my screen,\nand then I'll let you have it Zack.\n\n422\n00:24:16.325 --> 00:24:19.170\n&gt;&gt; [LAUGH]\n&gt;&gt; If we take a look back at my screen,\n\n423\n00:24:19.170 --> 00:24:23.010\nI built this credentials .js here, right?\n\n424\n00:24:23.010 --> 00:24:26.130\nAnd I put my API key and\nyou said, wait a minute,\n\n425\n00:24:26.130 --> 00:24:30.210\nI thought you would never want to\nexpose your API key, you're right.\n\n426\n00:24:30.210 --> 00:24:33.730\nIf I used a version control system,\nI would ignore this file.\n\n427\n00:24:33.730 --> 00:24:36.790\nI would never actually keep this\nfile except for local development.\n\n428\n00:24:38.580 --> 00:24:39.880\nAnytime I deploy or\n\n429\n00:24:39.880 --> 00:24:44.400\nput this code base somewhere,\nI would never have this file available.\n\n430\n00:24:44.400 --> 00:24:47.150\nThat way my apiKey is still hidden,\n\n431\n00:24:47.150 --> 00:24:51.915\nexcept there isn't kind of\nan explicit requirement here.\n\n432\n00:24:51.915 --> 00:24:58.100\nWeather.router.js has this credentials\nreference in the require statement,\n\n433\n00:24:58.100 --> 00:24:59.880\nand it pulls off the API key.\n\n434\n00:24:59.880 --> 00:25:02.670\nSo I would write instructions,\nhey you need to go get an API key.\n\n435\n00:25:02.670 --> 00:25:05.800\nMine's not there because, well,\nI don't wanna expose my secrets.\n\n436\n00:25:05.800 --> 00:25:11.540\nNow ultimately when we deploy this, how to\nhandle that is a little bit differently.\n\n437\n00:25:11.540 --> 00:25:14.510\nBut I did wanna emphasize, credentials.JS.\n\n438\n00:25:14.510 --> 00:25:17.930\nEven though you can see it and\nI'm showing you where I'm putting it,\n\n439\n00:25:17.930 --> 00:25:22.350\nif I was using GIt or I wanna make\nsure to keep it out of control.\n\n440\n00:25:22.350 --> 00:25:26.050\nI would only keep a copy for myself,\nand not let anybody else see it.\n\n441\n00:25:26.050 --> 00:25:29.570\n&gt;&gt; Fantastic,\nWeather App with AngularJS and Express.\n\n442\n00:25:29.570 --> 00:25:30.970\nThis is building the proxy part two.\n\n443\n00:25:30.970 --> 00:25:31.860\nThere was a part one.\n\n444\n00:25:31.860 --> 00:25:36.180\nThere's other video content in\nWeather App with AngularJS and Express,\n\n445\n00:25:36.180 --> 00:25:37.850\nmake sure you watch all that.\n\n446\n00:25:37.850 --> 00:25:39.540\nAnd thank you for watching Dev Pro TV.\n\n447\n00:25:39.540 --> 00:25:41.650\nRemember a good Dev Pro\nis always learning.\n\n448\n00:25:41.650 --> 00:25:42.366\nI'm Zack Mennis.\n\n449\n00:25:42.366 --> 00:25:43.600\n&gt;&gt; And I'm Justin Dennison.\n\n450\n00:25:43.600 --> 00:25:45.084\n&gt;&gt; And we'll see you soon.\n\n451\n00:25:45.084 --> 00:25:50.013\n[MUSIC]\n\n",
          "vimeoId": "226355880"
        },
        {
          "description": "Justin and Zach cover using Webpack for our Weather App, what a Webpack is, transforming newer JS code to a more compatible code, managing assets such as images, allowing for common syntax using module system, using Webpack to allow us to use module system with front end code, using NPM to manage our dependencies, front end and back end code in separate folders, webpack-cli, webpack-cli init, running with node, plugins for webpack, loaders for webpack, HtmlWebpackPlugin, wire up the webpack plugin, inject the JavaScript, and inject some CSS.",
          "length": "1648",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-3-1-up_and_going_with_webpack-0720117-PGM.00_28_59_28.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-3-1-up_and_going_with_webpack-0720117-PGM.00_28_59_28.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-3-1-up_and_going_with_webpack-0720117-PGM.00_28_59_28.Still001-sm.jpg",
          "title": "Up and Going with Webpack",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:04.688\n[MUSIC]\n\n2\n00:00:05.902 --> 00:00:08.050\nHello, and thank you for\nchoosing DevProTV,\n\n3\n00:00:08.050 --> 00:00:09.711\nhelping you learn wherever you go.\n\n4\n00:00:09.711 --> 00:00:15.042\nI'm Zack Memos, your host as we continue\non with weather app with angularJS and\n\n5\n00:00:15.042 --> 00:00:19.040\nExpress, and we are going to get up and\ngoing with Webpack.\n\n6\n00:00:19.040 --> 00:00:19.819\nWhat's that all about?\n\n7\n00:00:19.819 --> 00:00:22.907\nWell, the man bringing us all\nthe information we need is Justin Denison\n\n8\n00:00:22.907 --> 00:00:23.481\nright here.\n\n9\n00:00:23.481 --> 00:00:24.957\nGood afternoon, sir.\n\n10\n00:00:24.957 --> 00:00:25.636\n&gt;&gt; Good afternoon,\n\n11\n00:00:25.636 --> 00:00:28.226\nZack, and it is good to be back in\nthe studio, and how are you today?\n\n12\n00:00:28.226 --> 00:00:31.149\n&gt;&gt; Well, after that big lunch I\nhad I feel great, [LAUGH] but\n\n13\n00:00:31.149 --> 00:00:33.275\nI'm excited to find out about Webpack.\n\n14\n00:00:33.275 --> 00:00:37.776\n&gt;&gt; Well, you're in the right spot,\nZach, we are ready for Webpack.\n\n15\n00:00:37.776 --> 00:00:39.755\nNow before we get started, right, and\n\n16\n00:00:39.755 --> 00:00:43.645\nI'm sure you have a question for\nme and that would be, what is Webpack?\n\n17\n00:00:43.645 --> 00:00:44.865\nAm I reading your mind?\n\n18\n00:00:44.865 --> 00:00:47.415\n&gt;&gt; Yeah, well no, what is Webpack and\nhow do we use it?\n\n19\n00:00:47.415 --> 00:00:48.290\nWhat is it?\n\n20\n00:00:48.290 --> 00:00:51.240\n&gt;&gt; Well,\nWebpack is a module bundler system.\n\n21\n00:00:51.240 --> 00:00:54.650\nNow I just said a lot of big words that\nmade me feel smart and good about myself,\n\n22\n00:00:54.650 --> 00:00:57.930\nbut that doesn't necessarily\nhelp you understand what it is.\n\n23\n00:00:57.930 --> 00:01:00.172\nBut if you build any\ntype of web application,\n\n24\n00:01:00.172 --> 00:01:03.715\nyou've probably run into this pattern\nwhere you copy and paste to CDN.\n\n25\n00:01:03.715 --> 00:01:07.427\nAnd I'll be completely honest,\na lot things that I teach with,\n\n26\n00:01:07.427 --> 00:01:11.297\nI'll use a CDN just to bring them in,\njust for ease of use, right?\n\n27\n00:01:11.297 --> 00:01:15.033\nWell, eventually we have maybe 10, 15, 20,\n\n28\n00:01:15.033 --> 00:01:19.940\n30 Javascript files at the bottom and\nthat becomes unsustainable.\n\n29\n00:01:19.940 --> 00:01:23.588\nKinda hard to maintain, but\nit's nice to have them split up just for\n\n30\n00:01:23.588 --> 00:01:24.740\ncoding practices and\n\n31\n00:01:24.740 --> 00:01:28.709\norganization, and some thought processes,\ndesign and architecture.\n\n32\n00:01:28.709 --> 00:01:33.029\nWebpack helps us eliminate\nthat by providing us\n\n33\n00:01:33.029 --> 00:01:37.781\nthe ability to take all of\nthose Javascript files and\n\n34\n00:01:37.781 --> 00:01:42.000\nkinda bundle them up into a single bundle.\n\n35\n00:01:42.000 --> 00:01:46.840\nNow we're gonna use Webpack in a very\nsimplistic way, so again, this is not\n\n36\n00:01:46.840 --> 00:01:52.360\nthe end all be all, but it's gonna bundle\nthem up and hand them back to you.\n\n37\n00:01:52.360 --> 00:01:55.000\nThat's ultimately what Webpack\nis gonna do for us, but\n\n38\n00:01:55.000 --> 00:01:57.760\nthat's not all that it's limited to.\n\n39\n00:01:57.760 --> 00:02:00.540\nIt allows us to use some\nof those common import and\n\n40\n00:02:00.540 --> 00:02:03.990\nexport that you may be familiar\nfrom the node js community.\n\n41\n00:02:03.990 --> 00:02:07.740\nIt also allows for transformations for\n\n42\n00:02:07.740 --> 00:02:12.830\ncss less and things and\nThat's a whole lot more than that.\n\n43\n00:02:12.830 --> 00:02:14.750\n&gt;&gt; Okay, well, let's dive into it!\n\n44\n00:02:14.750 --> 00:02:16.740\nCan you show us how we get started?\n\n45\n00:02:16.740 --> 00:02:19.980\n&gt;&gt; Well, before we get started,\nI just remembered something.\n\n46\n00:02:19.980 --> 00:02:22.630\nWhat you said just made me\nremember something that I wanted\n\n47\n00:02:22.630 --> 00:02:26.770\nto emphasize ultimately.We're going to\nuse this in a very simplistic form.\n\n48\n00:02:26.770 --> 00:02:29.670\nWe're not gonna touch on all the advanced\nfeatures if you read about webpack,\n\n49\n00:02:29.670 --> 00:02:35.730\nused webpack before, like tree shaking,\ncode splitting not gonna do all that.\n\n50\n00:02:35.730 --> 00:02:40.670\nAlso we're not going to use some of\nthe import/exports that are available\n\n51\n00:02:40.670 --> 00:02:42.080\nin the new version of JavaScript,\n\n52\n00:02:42.080 --> 00:02:46.410\nES2015 or ES6, depending on where\nyou read your source material.\n\n53\n00:02:46.410 --> 00:02:47.820\nWe're not gonna use that.\n\n54\n00:02:47.820 --> 00:02:52.450\nWe're gonna stay with the node required\nand module that exports And this is for\n\n55\n00:02:52.450 --> 00:02:54.630\nfront end code so\nwe're gonna be able to do that.\n\n56\n00:02:54.630 --> 00:02:59.880\nOur main goal is to use MPM to\nmanage all of our dependencies and\n\n57\n00:02:59.880 --> 00:03:03.900\nto make our build process pretty\neasy because we can manage\n\n58\n00:03:03.900 --> 00:03:07.620\nnot only JavaScript or CSS like I said but\n\n59\n00:03:07.620 --> 00:03:12.030\nimages, audio files, anything that\nends up being a static asset.\n\n60\n00:03:12.030 --> 00:03:15.450\nOn the front end and allows us to\nuse some of the coding practices\n\n61\n00:03:15.450 --> 00:03:20.030\nthat we've adopted in the node ecosystem\nand use them in front end code.\n\n62\n00:03:20.030 --> 00:03:22.670\nAnd not having these crazy\nglobal variables and things.\n\n63\n00:03:22.670 --> 00:03:25.550\nBut you ask, how do we get started and\n\n64\n00:03:25.550 --> 00:03:29.380\nwell I guess I'm gonna have to\nsate your Your curiosity, Zach.\n\n65\n00:03:29.380 --> 00:03:31.590\n&gt;&gt; Yes, my curiosity needs to be sated.\n\n66\n00:03:31.590 --> 00:03:33.640\n&gt;&gt; Your curiosity does need to be sated.\n\n67\n00:03:33.640 --> 00:03:38.267\nWe all love to [SOUND] taste\nthe wonderful juice of knowledge.\n\n68\n00:03:38.267 --> 00:03:41.250\n&gt;&gt; [LAUGH]\n&gt;&gt; So wow, let's go ahead and\n\n69\n00:03:41.250 --> 00:03:47.180\ntake a look at my screen here and do\na quick review of where did we leave off.\n\n70\n00:03:47.180 --> 00:03:50.760\nWe got Our proxy service up and running.\n\n71\n00:03:50.760 --> 00:03:55.400\nWe can make a request, get some weather\nback and that was a little bit of work.\n\n72\n00:03:55.400 --> 00:03:57.060\nAnd it may not be super robust.\n\n73\n00:03:57.060 --> 00:03:58.340\nWe may have to come back to that.\n\n74\n00:03:58.340 --> 00:04:00.950\nBut I think now is a good time to switch,\n\n75\n00:04:00.950 --> 00:04:05.660\nnot to our proxy service but\nmore to our client.\n\n76\n00:04:05.660 --> 00:04:09.700\nSo inside of angcaster, we have\nthe client and proxy folders, all right?\n\n77\n00:04:09.700 --> 00:04:13.010\nSo if I put those in a list form,\nI have client and proxy.\n\n78\n00:04:13.010 --> 00:04:13.890\nAs folders.\n\n79\n00:04:13.890 --> 00:04:19.360\nI'm gonna hop into client and\nthere's nothing in there by ls.\n\n80\n00:04:19.360 --> 00:04:20.630\nWe are a clean project.\n\n81\n00:04:20.630 --> 00:04:22.640\nThis is like we're building\nit completely separately.\n\n82\n00:04:22.640 --> 00:04:25.710\nWe have a front end dev team and\na back end dev team.\n\n83\n00:04:25.710 --> 00:04:27.990\nNow the front end team,\nthey're envious of the back end team so\n\n84\n00:04:27.990 --> 00:04:33.280\nthey wanna use some of that That import\nand export and sometimes new ES6,\n\n85\n00:04:33.280 --> 00:04:37.880\nES 2015 features and well that's kind\nof hard with just having a browser.\n\n86\n00:04:37.880 --> 00:04:42.580\nSo were going to use Web Pack to setup our\nproject and were going to touch on it.\n\n87\n00:04:42.580 --> 00:04:44.490\nAgain this is not a deep dive.\n\n88\n00:04:44.490 --> 00:04:47.200\nBut we're definitely gonna\nget things up and running.\n\n89\n00:04:47.200 --> 00:04:51.020\nWho knows we may add a little more\nmagic as we go as we need it.\n\n90\n00:04:51.020 --> 00:04:53.750\nSo, what's the best way to get started?\n\n91\n00:04:53.750 --> 00:04:57.290\nYou could write a webpack\nconfig file from scratch.\n\n92\n00:04:57.290 --> 00:05:01.480\nThat is something necessary for\nwebpack to know how to build Things up.\n\n93\n00:05:01.480 --> 00:05:05.130\nI'm a big proponent of when you need to\nget things up and moving quickly maybe use\n\n94\n00:05:05.130 --> 00:05:08.770\na tool to help you get started, and then\ngo back and learn how that tool works.\n\n95\n00:05:08.770 --> 00:05:10.510\n&gt;&gt; Maybe modify it after that.\n\n96\n00:05:10.510 --> 00:05:11.160\n&gt;&gt; Exactly.\n\n97\n00:05:11.160 --> 00:05:14.270\nMaybe modify it after that,\nand start tweaking things.\n\n98\n00:05:14.270 --> 00:05:15.450\nSo, we're going to do just that.\n\n99\n00:05:15.450 --> 00:05:17.990\nThere's a tool called Webpack CLI.\n\n100\n00:05:17.990 --> 00:05:22.240\nThis is an MPM installable module.\n\n101\n00:05:22.240 --> 00:05:24.280\nA program, more or less.\n\n102\n00:05:24.280 --> 00:05:28.100\nIt is a command line interface for\ngenerating a web pack project.\n\n103\n00:05:28.100 --> 00:05:33.182\nIt's crazy right we're using node\nto generate a webpack project that\n\n104\n00:05:33.182 --> 00:05:38.345\nwill then use node in mpm to maintain\nour projects that it I'm getting so\n\n105\n00:05:38.345 --> 00:05:42.564\nmeta thinking about it, and\nI don't mean crazy right, so\n\n106\n00:05:42.564 --> 00:05:47.385\n[CROSSTALK] exactly so let's go ahead and\ninstall the Web Pack CLI,\n\n107\n00:05:47.385 --> 00:05:52.292\nnow I'm not entirely sure whether\nI have it completely installed,\n\n108\n00:05:52.292 --> 00:05:56.639\nuninstalled, We're just going\nto have to find out right?\n\n109\n00:05:56.639 --> 00:05:58.210\nSo how do we install it?\n\n110\n00:05:58.210 --> 00:06:02.090\nTypically people you will see individuals\nrecommend that you install it with\n\n111\n00:06:02.090 --> 00:06:03.400\nthe dash g flag.\n\n112\n00:06:03.400 --> 00:06:05.070\nNow that's a global install and\n\n113\n00:06:05.070 --> 00:06:11.060\nnotice I type mpm install-g webpeg-\nThis does take a little bit of time.\n\n114\n00:06:11.060 --> 00:06:15.140\nIt grabs a whole bunch of modules, you\nmay give a few deprecation warnings but\n\n115\n00:06:15.140 --> 00:06:17.630\nthose will kinda update as we need them.\n\n116\n00:06:17.630 --> 00:06:21.390\nThis is gonna make it a globally\naccessible command line interface.\n\n117\n00:06:21.390 --> 00:06:25.880\nSo now once I install this, I'll be\nable to use webpack cli to generate\n\n118\n00:06:25.880 --> 00:06:30.020\nprojects wherever I want them, okay?\n\n119\n00:06:30.020 --> 00:06:32.760\nSo we have it installed.\n\n120\n00:06:32.760 --> 00:06:35.910\nIf you try to install it globally and\nyou run into some weird errors,\n\n121\n00:06:35.910 --> 00:06:38.670\nespecially if you're on Linux or\nOS X, you may not have\n\n122\n00:06:38.670 --> 00:06:43.860\npermissions to install globally and\nyou'll have to use sudo, super user do.\n\n123\n00:06:43.860 --> 00:06:47.480\nNow if you're unsure about that, you're\nprobably gonna have to do a little bit of\n\n124\n00:06:47.480 --> 00:06:52.860\nresearch Because that's a little beyond\nthe scope of fixing for this course.\n\n125\n00:06:52.860 --> 00:06:54.760\nSo definitely go check that out.\n\n126\n00:06:54.760 --> 00:06:56.490\nIt's probably gonna be easiest way,\n\n127\n00:06:56.490 --> 00:07:00.301\nthere's some wonderful documentation\non the nodejs.org, I think it's .org.\n\n128\n00:07:00.301 --> 00:07:06.050\nI always get.org and .com mixed up on\nthose for fixing that very problem, okay?\n\n129\n00:07:06.050 --> 00:07:10.680\nSo we have this installed now all\nwe're gonna say is webpack-cli Init.\n\n130\n00:07:10.680 --> 00:07:12.570\nAnd what does init stand for?\n\n131\n00:07:12.570 --> 00:07:13.650\nInitialize.\n\n132\n00:07:13.650 --> 00:07:17.940\nSo I'm going to init, and it's going\nto ask me a series of questions.\n\n133\n00:07:17.940 --> 00:07:21.290\nWill your application\nhave multiple bundles?\n\n134\n00:07:21.290 --> 00:07:25.100\nFor us, we're going to use it in its\nsimplest form, so I'm gonna answer no.\n\n135\n00:07:26.860 --> 00:07:29.630\nWhich module will be the first\nto enter the application.\n\n136\n00:07:29.630 --> 00:07:30.810\nNow if you,\n\n137\n00:07:30.810 --> 00:07:35.690\nlet me see if I can, this is kind of\nbehind my head and I can't raise it up.\n\n138\n00:07:35.690 --> 00:07:36.740\nIt's unfortunate.\n\n139\n00:07:36.740 --> 00:07:39.045\nThere we go, we got it fixed now.\n\n140\n00:07:39.045 --> 00:07:41.405\nSo which module would be the first\nto enter the application?\n\n141\n00:07:41.405 --> 00:07:43.975\nThis is one where we have to\nknow a little bit about our\n\n142\n00:07:43.975 --> 00:07:45.915\napplication project structure.\n\n143\n00:07:45.915 --> 00:07:48.855\nOr application project structure,\n\n144\n00:07:48.855 --> 00:07:51.355\nour project structure in order to\nbe able to answer this question.\n\n145\n00:07:51.355 --> 00:07:55.954\nWe can always go back I can change this,\nbut I know that I'm gonna have an src\n\n146\n00:07:55.954 --> 00:07:59.247\nfolder and\nI'm gonna have an app.js inside of that.\n\n147\n00:07:59.247 --> 00:08:03.047\nSo we may end up changing that,\nbut for now that's my plan.\n\n148\n00:08:03.047 --> 00:08:04.474\nSo what do I want?\n\n149\n00:08:04.474 --> 00:08:07.195\nI want src app.js.\n\n150\n00:08:07.195 --> 00:08:09.359\nNow that's from the root of this project.\n\n151\n00:08:09.359 --> 00:08:11.070\nI'm right inside the client folder.\n\n152\n00:08:11.070 --> 00:08:12.600\nI'm gonna hit enter.\n\n153\n00:08:12.600 --> 00:08:14.820\nWhich folder will your\ngenerated bundles be in?\n\n154\n00:08:14.820 --> 00:08:17.984\nSo what webpack does is it\ngenerates all this information and\n\n155\n00:08:17.984 --> 00:08:19.541\nit puts it in a folder for you.\n\n156\n00:08:19.541 --> 00:08:21.510\nIt's asking you,\nwhat is that folder's name?\n\n157\n00:08:21.510 --> 00:08:26.190\nBy default, it's dist, for distribution,\nI'm gonna leave that as it goes.\n\n158\n00:08:26.190 --> 00:08:28.320\nNow, are you gonna use this in production?\n\n159\n00:08:28.320 --> 00:08:30.020\nYeah, sure, why not?\n\n160\n00:08:30.020 --> 00:08:32.754\nAnd there's just a couple of\ntweaks that it makes for that.\n\n161\n00:08:32.754 --> 00:08:34.740\nWill you be using ES2015?\n\n162\n00:08:34.740 --> 00:08:37.990\nAbsolutely, I do love\nthe new JavaScript features.\n\n163\n00:08:37.990 --> 00:08:41.316\nWill you be using one of\nthe below CSS solutions?\n\n164\n00:08:41.316 --> 00:08:45.820\nWell, we may not have\na whole lot of CSS up front.\n\n165\n00:08:45.820 --> 00:08:50.536\nBut if we do, we're probably just gonna\nuse plain CSS, so I'm gonna pick 3.\n\n166\n00:08:50.536 --> 00:08:55.380\nI'm not gonna use one of those\npreprocessors like Sass or LESS or SCSS or\n\n167\n00:08:55.380 --> 00:08:58.138\nyeah, I think it's still called Sass.\n\n168\n00:08:58.138 --> 00:08:59.718\nI'm really bad about that, I'm very sorry.\n\n169\n00:08:59.718 --> 00:09:00.750\n&gt;&gt; It's sassy.\n\n170\n00:09:00.750 --> 00:09:03.720\n&gt;&gt; I'm very sorry if Sass is near and\ndear to your heart.\n\n171\n00:09:03.720 --> 00:09:07.130\nIf you want to bundle your CSS files,\nwhat will you name your bundle?\n\n172\n00:09:07.130 --> 00:09:11.410\nI actually just skip this and let it pick\none for me and we'll see how that goes.\n\n173\n00:09:11.410 --> 00:09:16.080\nName your webpack, and\nnotice then those square brackets [name].\n\n174\n00:09:16.080 --> 00:09:19.540\nThis right here, right there, so [name],\n\n175\n00:09:19.540 --> 00:09:23.680\nby default it's going\nto put prod right here.\n\n176\n00:09:23.680 --> 00:09:27.900\nBut webpack actually looks for\nwebpack.config.js.\n\n177\n00:09:27.900 --> 00:09:34.812\nNow I can have a commandline flag that\ntells it to look for webpack.prod.js.\n\n178\n00:09:34.812 --> 00:09:37.674\nBut I'm gonna change this to config\njust to make my life a little\n\n179\n00:09:37.674 --> 00:09:39.080\nbit easier right now.\n\n180\n00:09:39.080 --> 00:09:42.251\nAnd now it's going to set\nup my webpack config.\n\n181\n00:09:42.251 --> 00:09:48.850\nIt's going to create my node package or\nmy package.json.\n\n182\n00:09:48.850 --> 00:09:53.050\nInstall all of these plug-ins,\nthese dependencies that I need.\n\n183\n00:09:53.050 --> 00:09:57.489\ncss-loader, babel-preset-es2015 loader,\nbabel-core,\n\n184\n00:09:57.489 --> 00:10:02.030\nwebpack, uglifyjs, extract,\nstyle and more babel stuff.\n\n185\n00:10:02.030 --> 00:10:05.712\nNow, we're gonna take a look at\nthat in the configuration file and\n\n186\n00:10:05.712 --> 00:10:07.570\nsee what each one of those means.\n\n187\n00:10:07.570 --> 00:10:09.120\nBut for now, it's all good.\n\n188\n00:10:09.120 --> 00:10:12.627\nIf we hit ls now,\nnotice have node modules and,\n\n189\n00:10:12.627 --> 00:10:16.060\nwell, let's just clear\nthat out there in ls.\n\n190\n00:10:16.060 --> 00:10:17.779\nI have node modules.\n\n191\n00:10:17.779 --> 00:10:22.195\nI have a newer, excuse me, NPM, so\n\n192\n00:10:22.195 --> 00:10:28.246\nit actually generated a package-lock.json.\n\n193\n00:10:28.246 --> 00:10:31.968\nAnd we're gonna have to fix that cuz\nI like the old style package.json so\n\n194\n00:10:31.968 --> 00:10:32.705\nI can read it.\n\n195\n00:10:32.705 --> 00:10:34.238\nIt's more of a human readable to me.\n\n196\n00:10:34.238 --> 00:10:35.820\nAnd then we have webpack.config.\n\n197\n00:10:35.820 --> 00:10:39.200\nNow if I get to this point,\nwhat am I gonna do?\n\n198\n00:10:39.200 --> 00:10:42.530\nWell, I'm actually gonna say npm init and\n\n199\n00:10:42.530 --> 00:10:47.950\nI'm gonna keep it as client and\nI'm kinda just gonna lean on the keyboard.\n\n200\n00:10:47.950 --> 00:10:50.159\nNow I'm gonna have to change something,\n\n201\n00:10:50.159 --> 00:10:53.705\nbecause it said that my entry\npoint was the webpack.config.js.\n\n202\n00:10:53.705 --> 00:10:58.870\nThat's not actually true, because I don't\nreally have an entry point for this.\n\n203\n00:10:58.870 --> 00:11:01.430\nBut I wanna keep these in a package.json.\n\n204\n00:11:01.430 --> 00:11:03.430\nNow if I was gonna\npublish this as a module,\n\n205\n00:11:03.430 --> 00:11:08.580\nI would have to fill this out [LAUGH]\na great deal better than I have here.\n\n206\n00:11:08.580 --> 00:11:13.870\nBut notice when I hit npm init, it already\nsaid, hey, these are dependencies.\n\n207\n00:11:13.870 --> 00:11:18.070\nThat's interesting, because these\nare technically dev dependencies.\n\n208\n00:11:18.070 --> 00:11:19.860\nThey are only used for\nthe development portion,\n\n209\n00:11:19.860 --> 00:11:21.139\nwe don't need them for deployment.\n\n210\n00:11:22.220 --> 00:11:27.100\nSo that is a problem we're gonna run\ninto from time to time using this tool.\n\n211\n00:11:27.100 --> 00:11:31.120\nAnd we'll rearrange that,\nwe gotta fix a few things, right?\n\n212\n00:11:31.120 --> 00:11:32.580\nNot all tools are perfect.\n\n213\n00:11:33.800 --> 00:11:37.249\nSo this should be up and\nkind of ready, except,\n\n214\n00:11:37.249 --> 00:11:40.540\nwe don't have anything actually fixed yet.\n\n215\n00:11:40.540 --> 00:11:43.676\nSo let's take a look,\nperuse through webpack.config.\n\n216\n00:11:43.676 --> 00:11:48.690\nThere are packets.json, go ahead and\nmake those fixes as we see fit.\n\n217\n00:11:48.690 --> 00:11:53.785\nSo I'm gonna hop over into atom, look into\nmy client and open packets.json first.\n\n218\n00:11:53.785 --> 00:11:57.024\nSo first off, the main,\nI'm just gonna take that out.\n\n219\n00:11:57.024 --> 00:11:59.159\nI'm gonna leave that as an empty string,\n\n220\n00:11:59.159 --> 00:12:01.920\ncuz technically it is not\nour webpack.config.js.\n\n221\n00:12:01.920 --> 00:12:06.770\nThese dependencies, no, my dependencies,\nthese are only for development.\n\n222\n00:12:06.770 --> 00:12:11.900\nSo I'm gonna cut those, come inside of\ndevDependencies, and then paste those.\n\n223\n00:12:11.900 --> 00:12:16.001\nNow be very careful about trailing\ncommas inside these blocks.\n\n224\n00:12:16.001 --> 00:12:18.394\nWell, because they'll\nkinda mess up your day.\n\n225\n00:12:18.394 --> 00:12:20.690\nYour package.json will mess up.\n\n226\n00:12:20.690 --> 00:12:24.238\nNow every once in a while\nthis gets this right.\n\n227\n00:12:24.238 --> 00:12:26.790\nThere's a magic order that if you\nrun it in that particular order,\n\n228\n00:12:26.790 --> 00:12:27.570\nit'll get this right.\n\n229\n00:12:28.605 --> 00:12:30.765\nYou can always just fix it for yourself.\n\n230\n00:12:30.765 --> 00:12:32.126\nThere's nothing wrong with that.\n\n231\n00:12:32.126 --> 00:12:34.687\nI did that to make sure you're aware, hey,\n\n232\n00:12:34.687 --> 00:12:37.538\nthis is kinda off-kilter\nfrom what I expected.\n\n233\n00:12:37.538 --> 00:12:39.155\nAnd that's perfectly okay.\n\n234\n00:12:39.155 --> 00:12:41.595\nSo, we fixed our package.json.\n\n235\n00:12:41.595 --> 00:12:44.475\nThere's nothing else to put here.\n\n236\n00:12:44.475 --> 00:12:48.375\nAnd then, let's come inside of webpack\nconfig and see what was generated for\n\n237\n00:12:48.375 --> 00:12:50.765\nus that we would've to\nhave written by hand.\n\n238\n00:12:50.765 --> 00:12:52.550\nAnd hide this little side here.\n\n239\n00:12:52.550 --> 00:12:54.550\nIt's gonna require webpack.\n\n240\n00:12:54.550 --> 00:12:58.038\nIt's going to require a path,\nwhich is a built-in node module.\n\n241\n00:12:58.038 --> 00:13:02.490\nAnd then UglifyJS, this is actually\ngoing to minify and rename and\n\n242\n00:13:02.490 --> 00:13:05.400\nremove all the white space,\nall of our JavaScript files.\n\n243\n00:13:05.400 --> 00:13:07.930\nSo they're as small as\nthey possibly can be.\n\n244\n00:13:07.930 --> 00:13:12.637\nThis is gonna help with load times\nwhen a browser opens, that's good.\n\n245\n00:13:12.637 --> 00:13:17.723\nAnd then the ExtractTextPlugin,\nit actually extracts CSS\n\n246\n00:13:17.723 --> 00:13:24.490\ntext in this particular case, so\nyou can use it in a very interesting way.\n\n247\n00:13:24.490 --> 00:13:29.968\nSo I can actually use the Extract CSS\nplugin to pull CSS out of the file and\n\n248\n00:13:29.968 --> 00:13:35.009\nuse it kind of programmatically,\nwhich is handy, kinda weird.\n\n249\n00:13:35.009 --> 00:13:37.829\nAnd did I say extract CSS?\n\n250\n00:13:37.829 --> 00:13:40.830\nExtractTextPlugin is going\nto pull your CSS out.\n\n251\n00:13:40.830 --> 00:13:45.060\nI think I might've switched those and the\nlast thing I said, don't mess up, right?\n\n252\n00:13:45.060 --> 00:13:46.645\n&gt;&gt; ExtractTextPlugin.\n\n253\n00:13:46.645 --> 00:13:49.380\n&gt;&gt; ExtractTextPlugin,\nthat's exactly what it is.\n\n254\n00:13:49.380 --> 00:13:50.650\nZach is gonna get it right.\n\n255\n00:13:50.650 --> 00:13:56.170\nSo, module.exports, right,\nwe have an entry point.\n\n256\n00:13:56.170 --> 00:14:00.010\nWell, that's the definition\nof our application.\n\n257\n00:14:00.010 --> 00:14:01.630\nWhat is our application, right?\n\n258\n00:14:03.280 --> 00:14:07.320\nAnd then our output, where are we\ngoing to put the resulting build?\n\n259\n00:14:07.320 --> 00:14:11.235\nWell, we're gonna name that file,\nnotice the square brackets.\n\n260\n00:14:11.235 --> 00:14:17.380\nWebpack's gonna essentially assign you\na name to it, it's main in this case.\n\n261\n00:14:17.380 --> 00:14:18.858\nAnd then where is it gonna go?\n\n262\n00:14:18.858 --> 00:14:22.963\nIt's gonna go in a folder that is\na subfolder of where this file,\n\n263\n00:14:22.963 --> 00:14:24.806\nwebpack.config, lives.\n\n264\n00:14:24.806 --> 00:14:28.610\nAnd then we have a set of\nthings called module rules.\n\n265\n00:14:28.610 --> 00:14:33.423\nThese rules are what to do with\nrespect to files for JavaScript files,\n\n266\n00:14:33.423 --> 00:14:38.900\nexcept those in node modules use\nthe babel loader with the presets es2015.\n\n267\n00:14:38.900 --> 00:14:43.688\nDon't compile node modules, but\nanything else that ends in .JS,\n\n268\n00:14:43.688 --> 00:14:48.904\nuse babel to take it from new JavaScript\nto the old style JavaScript ES5.\n\n269\n00:14:49.950 --> 00:14:54.496\nNow when I say new to old,\nI'm saying newer now to older now.\n\n270\n00:14:54.496 --> 00:14:58.080\nSo depending on when you're watching this,\nthat may be a different context.\n\n271\n00:14:58.080 --> 00:15:03.680\nSo we're talking like const, let,\nfat arrow functions, turn that into\n\n272\n00:15:03.680 --> 00:15:09.500\nvar, right, and regular functions,\nso it'll work in more browsers.\n\n273\n00:15:09.500 --> 00:15:15.880\nAnd here for CSS, use the css-loader and\nthen as a fallback, use style-loader.\n\n274\n00:15:15.880 --> 00:15:18.990\nNow we had done a great deal of research\nto figure that out for ourselves, but\n\n275\n00:15:18.990 --> 00:15:20.510\nit was generated for us.\n\n276\n00:15:20.510 --> 00:15:21.010\nThat's handy.\n\n277\n00:15:22.060 --> 00:15:25.600\nNow ultimately, what this is gonna do is,\nnothing right now, but\n\n278\n00:15:25.600 --> 00:15:28.870\nwe will see this comes in handy later\non and we're just gonna leave it there.\n\n279\n00:15:30.320 --> 00:15:32.090\nAnd then here are plugins.\n\n280\n00:15:32.090 --> 00:15:32.950\nWhat are plugins?\n\n281\n00:15:32.950 --> 00:15:37.381\nThese are kind of what to do\nas you're bundling these up.\n\n282\n00:15:37.381 --> 00:15:40.920\nSo loaders load information.\n\n283\n00:15:40.920 --> 00:15:44.921\nPlugins I think of as transformations,\nokay?\n\n284\n00:15:44.921 --> 00:15:49.175\nThat's not strictly always true, but\nthink of them as transformations.\n\n285\n00:15:49.175 --> 00:15:52.923\nUglify the JS, so minify and\nrename and obfuscate, or\n\n286\n00:15:52.923 --> 00:15:56.029\nwhatever variety of\nwords you wanna call it.\n\n287\n00:15:56.029 --> 00:15:59.335\nAnd then the Extract\nplugin with style.css.\n\n288\n00:15:59.335 --> 00:16:01.577\nThat's the default name that we skipped,\nso\n\n289\n00:16:01.577 --> 00:16:04.670\nthat's what's gonna name\nall of our bundled styles.\n\n290\n00:16:04.670 --> 00:16:08.760\nAnd, our project is set up Zach.\n\n291\n00:16:08.760 --> 00:16:10.980\nThat is all there is to\nit using those tools.\n\n292\n00:16:10.980 --> 00:16:14.570\n&gt;&gt; It seems pretty powerful, but\nwhat are we going to use the web pack for?\n\n293\n00:16:14.570 --> 00:16:15.070\nWhat?\n\n294\n00:16:16.200 --> 00:16:19.570\n&gt;&gt; Well, how are we going, we actually\nneed to build a project, right?\n\n295\n00:16:19.570 --> 00:16:22.322\n&gt;&gt; [LAUGH]\n&gt;&gt; We need to build something to see if it\n\n296\n00:16:22.322 --> 00:16:27.375\nworks and try to track down any errors to\nsee if well even though it's generated,\n\n297\n00:16:27.375 --> 00:16:29.400\nis it actually usable, right?\n\n298\n00:16:30.410 --> 00:16:35.000\nSo let's go ahead and\ndo that and what am I gonna do?\n\n299\n00:16:35.000 --> 00:16:41.185\nI know I need an SRC folder so\nI'm gonna make a folder called SRC and\n\n300\n00:16:41.185 --> 00:16:44.515\nthen I'm gonna create\na file called app.js.\n\n301\n00:16:44.515 --> 00:16:49.475\nNow I said that in my Web Pack config\nthat's the entry point of this project,\n\n302\n00:16:49.475 --> 00:16:53.560\nthis is what's going to define\nhow to build my code out right?\n\n303\n00:16:53.560 --> 00:16:56.385\nSo I now have app.js,\n\n304\n00:16:56.385 --> 00:17:01.070\nwell, let's just see if I can just write\nanything in there, let's see if it works.\n\n305\n00:17:01.070 --> 00:17:06.775\nSo console.log('hello').\n\n306\n00:17:06.775 --> 00:17:09.380\nAnd well, I think that'll be it.\n\n307\n00:17:10.710 --> 00:17:15.207\nTechnically, I have a JavaScript file\nwith app.js in it and it works, right?\n\n308\n00:17:15.207 --> 00:17:20.074\nIt has valid JavaScript in it,\nI should be good to go.\n\n309\n00:17:20.074 --> 00:17:22.714\nNow, the real tricky part,\nis I'm gonna show you the hard way and\n\n310\n00:17:22.714 --> 00:17:25.504\nthen we're gonna make it the easy\nway on how to run this build system.\n\n311\n00:17:25.504 --> 00:17:27.210\n&gt;&gt; [LAUGH]\n&gt;&gt; Okay?\n\n312\n00:17:27.210 --> 00:17:28.030\n&gt;&gt; Options.\n\n313\n00:17:28.030 --> 00:17:33.220\n&gt;&gt; So, the hard way is, I want to now tell\nwebpack hey, I want you to build this.\n\n314\n00:17:33.220 --> 00:17:37.190\nI want you to grab all this information\nand put it in the disk folder.\n\n315\n00:17:37.190 --> 00:17:39.750\nAll the information that\nI've told you about.\n\n316\n00:17:39.750 --> 00:17:43.280\nSo, there's this .bin\ndirectory in node_modules,\n\n317\n00:17:43.280 --> 00:17:48.780\nthat will give you executable portions to\na lot of these mpm installable portions.\n\n318\n00:17:48.780 --> 00:17:50.160\nNotice webpack is one of them.\n\n319\n00:17:50.160 --> 00:17:51.760\nSo, I'm gonna say webpack.\n\n320\n00:17:51.760 --> 00:17:54.330\nSo, node_modules.bin/webpack.\n\n321\n00:17:54.330 --> 00:18:01.357\nSo I'm gonna run it, and Entry module not\nfound, Error, Can't resolve src/app.js.\n\n322\n00:18:01.357 --> 00:18:07.580\nIt doesn't work, all that hard work, and\nit doesn't even build the first time.\n\n323\n00:18:09.120 --> 00:18:12.757\nWell, I will admit to you\nthat if you're not careful,\n\n324\n00:18:12.757 --> 00:18:16.314\nwhen you run this configuration tool,\nand how you put\n\n325\n00:18:16.314 --> 00:18:20.846\nin well your project definition,\nyou can end up with this problem.\n\n326\n00:18:20.846 --> 00:18:25.875\nSo, by default all node modules\nneed either dot slash or\n\n327\n00:18:25.875 --> 00:18:29.299\nessentially Unix Linux style paths,\n\n328\n00:18:29.299 --> 00:18:34.221\nso dot slash says start\nsearching in the directory that\n\n329\n00:18:34.221 --> 00:18:38.513\nthis webpack.config.js file is located in.\n\n330\n00:18:38.513 --> 00:18:43.330\nGo inside the source folder and\nthen look for app.js, okay?\n\n331\n00:18:44.330 --> 00:18:48.990\nNow, if we rerun that ugly,\nnode_modules/.bin/webpack.\n\n332\n00:18:48.990 --> 00:18:51.910\nWe run it and there we go.\n\n333\n00:18:51.910 --> 00:18:53.728\nIt actually succeeded right?\n\n334\n00:18:53.728 --> 00:19:02.370\nSo well it succeeded, how do we know\nthat it truly succeeded though?\n\n335\n00:19:02.370 --> 00:19:04.560\n&gt;&gt; Because you're gonna show us?\n\n336\n00:19:04.560 --> 00:19:07.561\n&gt;&gt; Well, you know Zach,\nI think you're reading my mind.\n\n337\n00:19:07.561 --> 00:19:11.060\n&gt;&gt; [LAUGH]\n&gt;&gt; It's kind of messing with me there Zach\n\n338\n00:19:11.060 --> 00:19:15.070\nbut hopefully I'm gonna show you,\nmaybe I'm not.\n\n339\n00:19:15.070 --> 00:19:17.260\nBut if I hit LS here and\nactually let me clear and\n\n340\n00:19:17.260 --> 00:19:19.460\nhit LS notice there's this disk folder.\n\n341\n00:19:19.460 --> 00:19:20.520\nI didn't make that.\n\n342\n00:19:20.520 --> 00:19:21.680\nWeb pack did.\n\n343\n00:19:21.680 --> 00:19:25.450\nAnd if I come into this disk\nfolder there's a main.bundle.js.\n\n344\n00:19:25.450 --> 00:19:29.450\nThat is all of our\nproject code there okay.\n\n345\n00:19:29.450 --> 00:19:36.570\nNow let's go look at main.bundle.js and\nnotice you can't really read most of it.\n\n346\n00:19:36.570 --> 00:19:37.760\nI can just scroll for days.\n\n347\n00:19:37.760 --> 00:19:42.650\nThat is the minified version as well\nas some boilerplate code that webpack\n\n348\n00:19:42.650 --> 00:19:46.870\nuses to kind of mimic the module system\nand make sure all of it's bundled up.\n\n349\n00:19:46.870 --> 00:19:49.304\nBut you do notice that\nthere's this console.log.\n\n350\n00:19:50.490 --> 00:19:52.205\nHello?\n\n351\n00:19:52.205 --> 00:19:53.706\nThere it is, that's the code we wrote.\n\n352\n00:19:53.706 --> 00:19:55.356\n&gt;&gt; Right.\n&gt;&gt; So it should run.\n\n353\n00:19:55.356 --> 00:19:59.731\nAnd because I'm not using anything\nthat is browser specific,\n\n354\n00:19:59.731 --> 00:20:04.929\nI can test this with node main.bundle.js\nand it in fact prints out hello so\n\n355\n00:20:04.929 --> 00:20:08.910\nwe know that the webpack build\nsystem in fact is working.\n\n356\n00:20:08.910 --> 00:20:11.490\nIt's actually bundling all\nof our stuff together.\n\n357\n00:20:11.490 --> 00:20:16.760\nOur project's set up, but\nZach you may have a question for me there.\n\n358\n00:20:16.760 --> 00:20:19.910\n&gt;&gt; Well we know the JavaScript works,\nbut what about the CSS?\n\n359\n00:20:19.910 --> 00:20:23.380\n&gt;&gt; Well that is actually\na really good question there.\n\n360\n00:20:23.380 --> 00:20:28.034\nWe don't know that the CSS portion that\nwe may rely on later, in fact works.\n\n361\n00:20:28.034 --> 00:20:29.700\nSo we should probably go ahead and\ntest that out,\n\n362\n00:20:29.700 --> 00:20:32.270\neven though we may not use this up front,\nit's good to\n\n363\n00:20:32.270 --> 00:20:36.700\ntest these as we're configuring them, that\nway we don't run into problems later and\n\n364\n00:20:36.700 --> 00:20:40.260\nhave to track down giant numbers of\nerrors or we do a lot of backtracking.\n\n365\n00:20:40.260 --> 00:20:46.700\nSo let's go ahead and take a look at my\nscreen there and well, how do we, hm.\n\n366\n00:20:46.700 --> 00:20:52.400\nThe question is, how do we tell\nWeb Pack that we're going to use CSS?\n\n367\n00:20:54.610 --> 00:20:56.680\nWell, see this entry point?\n\n368\n00:20:56.680 --> 00:21:00.990\nThat is, as I've said several times,\nthe definition of our application.\n\n369\n00:21:00.990 --> 00:21:03.250\nThat's what is describing our application.\n\n370\n00:21:04.320 --> 00:21:07.260\nIn conjunction with this CSS loader and\n\n371\n00:21:07.260 --> 00:21:11.730\nExtractTextPlugin I can\nactually require CSS files.\n\n372\n00:21:12.850 --> 00:21:15.190\nAnd you may have never seen that before.\n\n373\n00:21:15.190 --> 00:21:18.491\nYou may have seen things like this, right?\n\n374\n00:21:18.491 --> 00:21:25.416\nConst let's just say\nEventEmitter = require events.\n\n375\n00:21:25.416 --> 00:21:30.410\nAnd I could do that, but\nthose are all JavaScript files.\n\n376\n00:21:30.410 --> 00:21:34.450\nBut I'm actually telling you that\nbecause this is the describing\n\n377\n00:21:34.450 --> 00:21:39.380\nportion of our application, we're\ngoing to also have CSS styles in here.\n\n378\n00:21:39.380 --> 00:21:41.860\nNow this is assuming we're\ngonna load these globally and\n\n379\n00:21:41.860 --> 00:21:43.770\nhave those just available everywhere.\n\n380\n00:21:43.770 --> 00:21:48.150\nWe may tweak that in the future to\nin fact only load portions of CSS\n\n381\n00:21:48.150 --> 00:21:49.070\nwhere we need them.\n\n382\n00:21:50.490 --> 00:21:54.610\nI know that sounds crazy, and it well,\nsometimes it is a little crazy to me,\n\n383\n00:21:54.610 --> 00:21:57.510\nI'm like that's weird, right?\n\n384\n00:21:57.510 --> 00:22:01.080\nBut what that does mean is\nwe have to write some CSS.\n\n385\n00:22:01.080 --> 00:22:06.170\nSo let's come over here to the SRC folder,\nand create app.css.\n\n386\n00:22:06.170 --> 00:22:11.550\nAnd let's just say, not background color.\n\n387\n00:22:11.550 --> 00:22:18.079\nThe body and background color and\nlet's just say salmon.\n\n388\n00:22:18.079 --> 00:22:19.894\nOne of my favorite colors.\n\n389\n00:22:19.894 --> 00:22:20.615\n&gt;&gt; Yes.\n\n390\n00:22:20.615 --> 00:22:21.130\n&gt;&gt; Salmon.\n\n391\n00:22:21.130 --> 00:22:21.830\nAll right?\n\n392\n00:22:21.830 --> 00:22:26.012\nSo there's our app.css, that would be\nthe css that I use for everything.\n\n393\n00:22:26.012 --> 00:22:30.244\nThat means all of my app is going to\nbe kind of a salmon color, which,\n\n394\n00:22:30.244 --> 00:22:33.307\ndepending on the accent colors,\nmay be usable.\n\n395\n00:22:33.307 --> 00:22:36.889\n&gt;&gt; [LAUGH]\n&gt;&gt; But how do I make this available?\n\n396\n00:22:36.889 --> 00:22:44.504\nWell if I come in here and\nI just require ./app.css.\n\n397\n00:22:44.504 --> 00:22:50.490\nNotice the file extension, if it's a .js\nfile we don't have to that's implied but\n\n398\n00:22:50.490 --> 00:22:55.804\nbecause I use the .css when Webpack\nbuilds our project it's gonna go hey,\n\n399\n00:22:55.804 --> 00:22:57.262\nthat ends in .css.\n\n400\n00:22:57.262 --> 00:23:00.548\nI should probably use this\nrule to manage that file and\n\n401\n00:23:00.548 --> 00:23:04.070\nthat becomes an incredibly\npowerful process.\n\n402\n00:23:04.070 --> 00:23:06.620\nWell, I told you that.\n\n403\n00:23:06.620 --> 00:23:11.294\nLet's see if it works, and then, well,\nI'm kind of done building the hard way.\n\n404\n00:23:11.294 --> 00:23:14.559\nWe're gonna make it the easy way,\nand then we'll be ready to go.\n\n405\n00:23:14.559 --> 00:23:17.173\n&gt;&gt; All right.\n&gt;&gt; So let's go ahead and\n\n406\n00:23:17.173 --> 00:23:20.030\nre-run our build here.\n\n407\n00:23:20.030 --> 00:23:23.140\nYou actually have to get\nout of the dist folder.\n\n408\n00:23:23.140 --> 00:23:24.152\nThat's important.\n\n409\n00:23:24.152 --> 00:23:30.703\nSo this is node modules,\nnode_modules/.bin/webpack.\n\n410\n00:23:30.703 --> 00:23:35.230\nNow I can type that because\nit's webpack.config.js.\n\n411\n00:23:35.230 --> 00:23:36.271\nI'm following a convention.\n\n412\n00:23:36.271 --> 00:23:40.428\nIf I had used that .prod I would\nhave had to have done a flag.\n\n413\n00:23:40.428 --> 00:23:44.400\nI think it's dash dash\nf if I'm not mistaken.\n\n414\n00:23:44.400 --> 00:23:48.618\nAnd pointed it to that production\nweb pack configuration.\n\n415\n00:23:48.618 --> 00:23:55.242\nSo there we go, notice it actually\nlists app.css right there.\n\n416\n00:23:55.242 --> 00:23:58.736\nOkay, and if we come to the dist folder.\n\n417\n00:23:58.736 --> 00:24:05.280\nI'll be, there's now a style.css, and\nif we open that there is our CSS file.\n\n418\n00:24:06.290 --> 00:24:07.680\n&gt;&gt; With some salmon.\n\n419\n00:24:07.680 --> 00:24:10.384\n&gt;&gt; Well that's very handy.\n\n420\n00:24:10.384 --> 00:24:13.973\nYou know what, I'm thinking if I'm\nrequiring it, it's not unusual that I\n\n421\n00:24:13.973 --> 00:24:17.468\nrequire and not assign it to a variable,\nwhat if I do something like this.\n\n422\n00:24:17.468 --> 00:24:22.213\nStyles, we should probably just check\nthis out console.log styles because\n\n423\n00:24:22.213 --> 00:24:27.250\nanything I require in the Node ecosystem\ntypically returns at least a structure,\n\n424\n00:24:27.250 --> 00:24:28.970\nat least one thing.\n\n425\n00:24:28.970 --> 00:24:34.190\nSo let's see what styles are in here,\nand while we're at it let's go ahead and\n\n426\n00:24:34.190 --> 00:24:40.800\nmake our life a little bit easier, I'm\ntired of typing Node_modules/.bin/webpack.\n\n427\n00:24:40.800 --> 00:24:43.620\nI could do that,\nI could install webpack globally so\n\n428\n00:24:43.620 --> 00:24:46.960\nI could use it everywhere,\nhowever I like to manage it by project,\n\n429\n00:24:46.960 --> 00:24:49.490\nthat way I can keep up\nwith the versioning.\n\n430\n00:24:49.490 --> 00:24:55.123\nAnd if I come here to the scripts portion\nof my package.json and I say build,\n\n431\n00:24:55.123 --> 00:24:59.890\nbecause that's what we're doing,\nI can now just say webpack.\n\n432\n00:25:01.090 --> 00:25:05.875\nAnd because it's in my scripts on\nmy package.json it'll look in that\n\n433\n00:25:05.875 --> 00:25:11.480\nNode_modules.bin folder for this command\nand then it'll run it if it's there.\n\n434\n00:25:11.480 --> 00:25:15.800\nSo I don't have to tie up that long phrase\nwhat is build doing it's running webpack.\n\n435\n00:25:15.800 --> 00:25:22.120\nWell now that I have that in the scripts\nfolder I can just clear out npm run build.\n\n436\n00:25:22.120 --> 00:25:26.280\nAnd well it's in fact running webpack and\nbuilding and\n\n437\n00:25:26.280 --> 00:25:31.485\nbecause I have that main.bundle.js\nas a reflection of what is in\n\n438\n00:25:31.485 --> 00:25:38.010\napp.js I can now see is there something\nstored in this styles variable, right.\n\n439\n00:25:38.010 --> 00:25:40.849\nSo let's hop over into our dist folder and\n\n440\n00:25:40.849 --> 00:25:48.930\nnode main.bundle.js and no,\nit didn't send us anything back.\n\n441\n00:25:48.930 --> 00:25:51.330\nWe were hoping but there's nothing there,\n\n442\n00:25:51.330 --> 00:25:55.330\nso that is not always the case\nthere are ways to make that happen.\n\n443\n00:25:55.330 --> 00:25:58.650\nBut with plain CSS this is what we got,\nbut it does build it for\n\n444\n00:25:58.650 --> 00:26:01.700\nus and put it all together and\nthat's handy enough for me.\n\n445\n00:26:01.700 --> 00:26:05.250\nAnd our project it's already set up,\nit's using webpack and\n\n446\n00:26:05.250 --> 00:26:08.500\nnow we can actually start\nbuilding our front end.\n\n447\n00:26:08.500 --> 00:26:13.103\n&gt;&gt; So this has been up and going with\nwebpack, any last words before we move on?\n\n448\n00:26:13.103 --> 00:26:15.625\n&gt;&gt; Well I will tell you webpack\ncan be a crazy ecosystem,\n\n449\n00:26:15.625 --> 00:26:19.101\nthey just recently migrated at the time\nof this recording to version two,\n\n450\n00:26:19.101 --> 00:26:22.373\nthere's some old version one,\nthey work a little bit differently.\n\n451\n00:26:22.373 --> 00:26:26.699\nThere's a massive amount of plug-ins and\nloaders, you can do a lot,\n\n452\n00:26:26.699 --> 00:26:31.391\nyou can actually replace, if you don't\nhave too complex of a build system,\n\n453\n00:26:31.391 --> 00:26:35.785\nsome of the tools like Gulp, and\nGrunt, and things like that.\n\n454\n00:26:35.785 --> 00:26:42.010\nIt's main focus is a modular bundler,\nI like to think of it as transform,\n\n455\n00:26:42.010 --> 00:26:45.265\nbring it together, spit it out,\nright, those are the three phases.\n\n456\n00:26:45.265 --> 00:26:49.240\nNow that's an over simplification\nbecause they can do a whole lot more,\n\n457\n00:26:49.240 --> 00:26:53.520\nwe're going to use it only in the capacity\nthat we need it for those project.\n\n458\n00:26:53.520 --> 00:26:55.998\nSo again, if you wanna know\nmore about webpack, well,\n\n459\n00:26:55.998 --> 00:26:59.320\nyou're gonna have to do a little\nbit of digging for now.\n\n460\n00:26:59.320 --> 00:27:01.430\n&gt;&gt; Excellent job as always, Justin.\n\n461\n00:27:01.430 --> 00:27:04.730\nSo this is Weather App with AngularJS and\nExpress.\n\n462\n00:27:04.730 --> 00:27:06.670\nThere's a lot video\ncontent in this series,\n\n463\n00:27:06.670 --> 00:27:10.340\nmake sure you watch all the videos and\nyou'll be very glad that you did.\n\n464\n00:27:10.340 --> 00:27:12.610\nAnd thank you for watching DevProTV.\n\n465\n00:27:12.610 --> 00:27:14.910\nRemember, a good DevPro\nis always learning.\n\n466\n00:27:14.910 --> 00:27:15.900\nI'm Zach Memos.\n\n467\n00:27:15.900 --> 00:27:16.950\n&gt;&gt; And I'm Justin Dennison.\n\n468\n00:27:16.950 --> 00:27:19.345\n&gt;&gt; And we will see you very soon.\n\n469\n00:27:19.345 --> 00:27:24.160\n[MUSIC]\n\n",
          "vimeoId": "226733184"
        },
        {
          "description": "Justin and Zach discuss next steps after setting up the initial Webpack, application architecture for App Component, using App Component to manage other components, App Component as Stateful Component, and App as our Container.",
          "length": "1575",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-4-1-1-building_the_app_component-0720117-PGM.00_27_05_21.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-4-1-1-building_the_app_component-0720117-PGM.00_27_05_21.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-4-1-1-building_the_app_component-0720117-PGM.00_27_05_21.Still001-sm.jpg",
          "title": "Building the App Component",
          "transcript": "WEBVTT\n\n1\n00:00:06.320 --> 00:00:08.530\nHello and thank you for\nchoosing DevPro.TV,\n\n2\n00:00:08.530 --> 00:00:10.236\nhelping you learn wherever you go.\n\n3\n00:00:10.236 --> 00:00:14.273\nI'm your host Zach Memos,\nas we continue on with weather app,\n\n4\n00:00:14.273 --> 00:00:19.313\nwith AngularJS and Express, and\nwe're gonna be building the app component.\n\n5\n00:00:19.313 --> 00:00:21.988\nAnd bringing us all the information\nwe need is our IT pro,\n\n6\n00:00:21.988 --> 00:00:23.400\nJustin Dennison right here.\n\n7\n00:00:23.400 --> 00:00:25.000\nJustin, hello there.\n\n8\n00:00:25.000 --> 00:00:26.657\n&gt;&gt; Hello Zach and how are you today?\n\n9\n00:00:26.657 --> 00:00:30.950\n&gt;&gt; Well, I'm very excited because\nthe last episode we left off,\n\n10\n00:00:30.950 --> 00:00:33.610\nwe had the initial webpack, right?\n\n11\n00:00:33.610 --> 00:00:35.870\n&gt;&gt; Yep, our webpack is up and running.\n\n12\n00:00:35.870 --> 00:00:37.670\n&gt;&gt; Yes, so what is next then?\n\n13\n00:00:37.670 --> 00:00:42.230\n&gt;&gt; Well that is the question of the hour,\nwhat is next and well, sadly,\n\n14\n00:00:42.230 --> 00:00:46.900\nwe kind of set this up in an interesting,\nright, that's the pressing question.\n\n15\n00:00:46.900 --> 00:00:50.210\nBut you kinda already know what's\nnext cuz he already told you.\n\n16\n00:00:50.210 --> 00:00:51.602\nBut I am gonna tell you again.\n\n17\n00:00:51.602 --> 00:00:54.110\n&gt;&gt; [LAUGH]\n&gt;&gt; We're gonna build the app component.\n\n18\n00:00:54.110 --> 00:00:56.929\nNow, before we worry about that,\nlet's step back and\n\n19\n00:00:56.929 --> 00:01:01.378\ntalk about application architecture,\nBecause even though we're using AngularJS,\n\n20\n00:01:01.378 --> 00:01:04.521\nwe're gonna use what is called\na component-driven design.\n\n21\n00:01:04.521 --> 00:01:07.192\nAnd you haven't checked out\nthe AngularJS series in our library,\n\n22\n00:01:07.192 --> 00:01:08.442\ndefinitely go check that out.\n\n23\n00:01:08.442 --> 00:01:11.935\nI talk about components at a decent\nlength, a nice little touch so\n\n24\n00:01:11.935 --> 00:01:13.980\nyou can understand what's going on.\n\n25\n00:01:15.150 --> 00:01:20.280\nBut ultimately, we wanna think about\nthe apps as individual pieces, right,\n\n26\n00:01:20.280 --> 00:01:24.800\nthese kind of Legos or Mega Bloks or\npuzzle pieces, that we put together.\n\n27\n00:01:24.800 --> 00:01:28.550\nNow, these are not strictly 2D\nthat we lay side by side, but\n\n28\n00:01:28.550 --> 00:01:31.700\nsometimes they plug in to each other and\nthey power each other up.\n\n29\n00:01:31.700 --> 00:01:35.430\nSo there are actually two types of\ncomponents in this architecture\n\n30\n00:01:35.430 --> 00:01:39.310\nthat are stateful components,\nthings that understand and\n\n31\n00:01:39.310 --> 00:01:42.080\nknow about the data, and manage the data.\n\n32\n00:01:42.080 --> 00:01:45.770\nAnd to some extent,\nmanage the other components.\n\n33\n00:01:45.770 --> 00:01:50.390\nAnd then, there's also presentational aka\n\n34\n00:01:50.390 --> 00:01:55.770\ndumb components, and by that definition,\nthe stateful ones are smart.\n\n35\n00:01:55.770 --> 00:01:59.375\nWell, the dumb components are more or\nless purely presentational and\n\n36\n00:01:59.375 --> 00:02:03.960\ninteraction-driven, And\nall they do is run back to the staple, or\n\n37\n00:02:03.960 --> 00:02:06.715\nsmart component, and\ngo hey, something happened.\n\n38\n00:02:06.715 --> 00:02:08.510\n&gt;&gt; [LAUGH]\n&gt;&gt; I'm gonna need you to figure this out.\n\n39\n00:02:08.510 --> 00:02:10.340\nI don't know what to do, please help.\n\n40\n00:02:10.340 --> 00:02:11.570\n&gt;&gt; And they have that voice, too.\n\n41\n00:02:11.570 --> 00:02:13.510\n&gt;&gt; They do.\nThey're like, I'm sorry.\n\n42\n00:02:13.510 --> 00:02:16.360\nSomething happened,\nI'm letting you know about it.\n\n43\n00:02:16.360 --> 00:02:19.825\nBut ultimately, that's where our app\narchitecture is going to take us and\n\n44\n00:02:19.825 --> 00:02:21.610\nthat's what we're gonna do today.\n\n45\n00:02:21.610 --> 00:02:22.560\n&gt;&gt; That's fantastic.\n\n46\n00:02:22.560 --> 00:02:24.910\nSo we're gonna use his app component, and\n\n47\n00:02:24.910 --> 00:02:28.340\nthat's gonna help us manage\nthe other components?\n\n48\n00:02:28.340 --> 00:02:30.070\n&gt;&gt; Actually,\nyou're right on track with that.\n\n49\n00:02:30.070 --> 00:02:33.646\nOur app component is gonna be\none of those smart components.\n\n50\n00:02:33.646 --> 00:02:38.340\nAnd it is the foreman of the show,\nright, the big boss so\n\n51\n00:02:38.340 --> 00:02:40.460\nto speak, of our overall application.\n\n52\n00:02:40.460 --> 00:02:44.400\nNow, I know that the naming's a little\nweird, but I like to think of\n\n53\n00:02:44.400 --> 00:02:49.420\nour app component actually being,\nWell, a proxy for what\n\n54\n00:02:49.420 --> 00:02:54.152\nwe would normally do on an application,\nlike the entire web application.\n\n55\n00:02:54.152 --> 00:02:58.470\nAnd I know that can be a little iffy, so\nit's probably just best to go ahead and\n\n56\n00:02:58.470 --> 00:03:01.550\nstart building that so we can talk\nabout it a little more in depth.\n\n57\n00:03:01.550 --> 00:03:03.400\nSo, let's take a look at my screen here,\n\n58\n00:03:03.400 --> 00:03:07.840\nand we'll talk about folder structure and\nthings of that nature.\n\n59\n00:03:07.840 --> 00:03:11.730\nI'm inside of my client application and\nour webpack is up and running,\n\n60\n00:03:11.730 --> 00:03:13.170\nwe're all good to go.\n\n61\n00:03:13.170 --> 00:03:16.810\nAnd here's the web pack, okay.\n\n62\n00:03:16.810 --> 00:03:20.450\nHere's our source, let's go into\nsource and see what's in there.\n\n63\n00:03:20.450 --> 00:03:24.330\nAs it stands, we have app.css and app.js.\n\n64\n00:03:24.330 --> 00:03:27.793\nOkay, so we're gonna leave those.\n\n65\n00:03:27.793 --> 00:03:32.300\nWe may not have apps.css for a while,\nbut it's gonna be a reminder.\n\n66\n00:03:32.300 --> 00:03:37.530\nOur app.js, it's going to be,\nwell, our descriptor.\n\n67\n00:03:37.530 --> 00:03:42.403\nSo having an app component and\nan app.js, that's a little confusing.\n\n68\n00:03:42.403 --> 00:03:47.400\nSo, we're gonna change\nour app.js more to main,\n\n69\n00:03:47.400 --> 00:03:50.420\nlike it's our main entry point, okay?\n\n70\n00:03:50.420 --> 00:03:54.060\nSo, we are going to alter that\na little bit and naming is hard.\n\n71\n00:03:54.060 --> 00:03:55.280\nI'm not gonna lie to you.\n\n72\n00:03:55.280 --> 00:03:58.930\nSometimes, I'm like, I've already used\nthat name or that variable name and\n\n73\n00:03:58.930 --> 00:03:59.500\nI have to change it.\n\n74\n00:03:59.500 --> 00:04:01.820\nThis is a very realistic thing\nthat you may have to do.\n\n75\n00:04:01.820 --> 00:04:06.610\nSo, I just left it in here to let you\nknow, it's not all rainbows, butterflies,\n\n76\n00:04:06.610 --> 00:04:07.340\nand unicorns.\n\n77\n00:04:07.340 --> 00:04:09.050\nSometimes you-\n&gt;&gt; And puppies.\n\n78\n00:04:09.050 --> 00:04:09.930\n&gt;&gt; Yeah and puppies.\n\n79\n00:04:09.930 --> 00:04:12.603\nPuppies are important,\nalong with unicorns.\n\n80\n00:04:12.603 --> 00:04:17.360\nSo we're gonna change this, and\nthat makes a little more sense, right?\n\n81\n00:04:17.360 --> 00:04:21.950\nSo here's our main entry point that's\ngonna lead to our main bundle, and\n\n82\n00:04:21.950 --> 00:04:23.970\nthat's gonna describe\nall of our other things.\n\n83\n00:04:23.970 --> 00:04:27.530\nNow in addition to that, I'm gonna make\nanother directory called components, and\n\n84\n00:04:27.530 --> 00:04:30.650\nthat is going to house all\nof our components within it.\n\n85\n00:04:31.880 --> 00:04:34.240\nWell, what is the first\ncomponent that we're gonna make?\n\n86\n00:04:34.240 --> 00:04:35.105\nOur app component.\n\n87\n00:04:35.105 --> 00:04:36.040\n&gt;&gt; Mm-hm.\n\n88\n00:04:36.040 --> 00:04:42.060\n&gt;&gt; So inside of components,\nwell if I can get some craziness there.\n\n89\n00:04:42.060 --> 00:04:45.780\nWe're going to build the app component,\nso I'm making another directory that will\n\n90\n00:04:45.780 --> 00:04:49.330\nhouse all of the files that\ndefine the app component.\n\n91\n00:04:49.330 --> 00:04:53.715\nNow, this is a little bit different\nstructure than AngularJS projects,\n\n92\n00:04:53.715 --> 00:04:56.769\ntake in using different\narchitectural patterns.\n\n93\n00:04:56.769 --> 00:04:59.796\nI like this pattern because\nit offers some flexibility,\n\n94\n00:04:59.796 --> 00:05:03.640\nit offers some kind of segregation\nbetween the individual pieces,\n\n95\n00:05:03.640 --> 00:05:06.270\nOther than the app that\nkind of runs the show.\n\n96\n00:05:06.270 --> 00:05:10.730\nAnd it's a little easier to reason\nabout to me, you may find it different.\n\n97\n00:05:10.730 --> 00:05:12.700\nBut it provides some flexibility.\n\n98\n00:05:12.700 --> 00:05:15.230\nSo if you want to upgrade to the newest,\n\n99\n00:05:15.230 --> 00:05:20.120\ngreatest Angular, they use a very similar\npattern when they talk about components.\n\n100\n00:05:20.120 --> 00:05:24.260\nThis will help and\nthis is suggested, okay?\n\n101\n00:05:24.260 --> 00:05:27.120\nNow we have these two folders made,\n\n102\n00:05:27.120 --> 00:05:30.890\nwhat do we need to do\ninside of this app folder?\n\n103\n00:05:30.890 --> 00:05:35.544\nWell I'm going to create, well let's see,\n\n104\n00:05:35.544 --> 00:05:41.422\nApp.component.js and\nI'm gonna create app.html and\n\n105\n00:05:41.422 --> 00:05:47.980\nI'm also going to create\napp.controller.js, all right?\n\n106\n00:05:47.980 --> 00:05:52.550\nSo the three files together\nwill define our component and\n\n107\n00:05:52.550 --> 00:05:59.120\nthen we'll bring those in and\nuse those inside of our main.js.\n\n108\n00:05:59.120 --> 00:06:05.360\nNow, that reminds me as we stand,\nwe are inside of Source.\n\n109\n00:06:05.360 --> 00:06:09.600\nWe still have app.js and app.css.\n\n110\n00:06:09.600 --> 00:06:12.770\nWe wanna rename those to main,\nrespectively, so\n\n111\n00:06:12.770 --> 00:06:15.570\nwe can kinda keep our terminology correct.\n\n112\n00:06:15.570 --> 00:06:20.902\nSo I'm gonna go ahead and\nsay app.css is now called main.css.\n\n113\n00:06:20.902 --> 00:06:24.692\nAnd app.js is main.js, okay?\n\n114\n00:06:24.692 --> 00:06:27.948\nAnd now, our main entry point\nsince we've changed that name,\n\n115\n00:06:27.948 --> 00:06:32.440\nthere is one final thing we need to change\nbefore we worry about anything else.\n\n116\n00:06:32.440 --> 00:06:38.603\nAnd that's our webpack config and\nhere we go, let's change this to main.js.\n\n117\n00:06:38.603 --> 00:06:43.189\nLet's quickly do a rebuild and\nmake sure it still works, right?\n\n118\n00:06:43.189 --> 00:06:48.724\nSo, npm run build and\nwebpack is gonna rebuild that,\n\n119\n00:06:48.724 --> 00:06:53.520\nand cannot find app.css and why is that?\n\n120\n00:06:53.520 --> 00:06:57.380\nThat's because I forgot to\nchange this to main.css.\n\n121\n00:06:57.380 --> 00:07:01.930\nI do love that webpack is fairly verbose,\nyou have to scroll up sometimes.\n\n122\n00:07:01.930 --> 00:07:06.696\nIt rebuilt and now the questions is,\n\n123\n00:07:06.696 --> 00:07:10.861\ndoes the dist folder still run?\n\n124\n00:07:10.861 --> 00:07:13.576\nAnd then in fact does,\nnotice there's nothing there, but\n\n125\n00:07:13.576 --> 00:07:15.006\nit still runs it has no errors.\n\n126\n00:07:15.006 --> 00:07:19.180\nSo we should be good to go, we might have\nto iron out some issues as we go along.\n\n127\n00:07:19.180 --> 00:07:21.300\nSo now that we've done that rename,\nwe're good to go,\n\n128\n00:07:21.300 --> 00:07:23.620\nlet's start building that app component.\n\n129\n00:07:23.620 --> 00:07:29.024\nIt's going to be a first approximation,\nI'm not promising the world,\n\n130\n00:07:29.024 --> 00:07:33.180\nI'm promising just something that works,\nright?\n\n131\n00:07:33.180 --> 00:07:34.250\n&gt;&gt; Just Cleveland.\n\n132\n00:07:34.250 --> 00:07:37.540\n&gt;&gt; Yeah, just Cleveland, yeah,\nI'm not promising Cleveland neither.\n\n133\n00:07:37.540 --> 00:07:38.951\n&gt;&gt; [LAUGH]\n&gt;&gt; Just to clarify,\n\n134\n00:07:38.951 --> 00:07:43.623\nI'm not promising any state and/or city,\nor and/or township, county,\n\n135\n00:07:43.623 --> 00:07:48.368\nnothing, all right, so Let's go ahead and\nclose out of some of these files,\n\n136\n00:07:48.368 --> 00:07:52.181\njust to clear our mind, and\nthen open our components folder.\n\n137\n00:07:52.181 --> 00:07:56.481\nAnd I'm gonna open up app.component,\napp.controller, and app.HTML.\n\n138\n00:07:56.481 --> 00:08:00.663\nNow We're going to use\nnew ES 25 syntax because\n\n139\n00:08:00.663 --> 00:08:04.539\ntypically some of these\nnewer frameworks and\n\n140\n00:08:04.539 --> 00:08:09.640\nJavaScript is going to kind\nof push toward using these.\n\n141\n00:08:09.640 --> 00:08:11.630\nWeb Pack's gonna build those for us.\n\n142\n00:08:11.630 --> 00:08:16.239\nBut we're bringing in some of the old and\nadding in some of the new and\n\n143\n00:08:17.320 --> 00:08:21.568\nyou're gonna learn some thing and\nthis will help future prove what we know.\n\n144\n00:08:21.568 --> 00:08:26.650\nSo our add.html,\nlet's just start with something simple\n\n145\n00:08:26.650 --> 00:08:31.830\nlet's say that our app\nit sends components,\n\n146\n00:08:31.830 --> 00:08:36.890\nit's going to have a controller as default\nand let's just send a message, okay?\n\n147\n00:08:36.890 --> 00:08:39.510\nAnd then in my controller,\nhere is where it gets a little weird.\n\n148\n00:08:39.510 --> 00:08:42.990\nI am gonna write a JavaScript class.\n\n149\n00:08:42.990 --> 00:08:45.940\nI know, I know it's kind of weird.\n\n150\n00:08:45.940 --> 00:08:49.310\nI didn't think JavaScript was class-based\nbut there's something new if you haven't\n\n151\n00:08:49.310 --> 00:08:52.370\nchecked out our ES 6 series in the library\ndefinitely get to check that out.\n\n152\n00:08:52.370 --> 00:08:58.440\nI talked about ES 6 classes at fair length\nto help you kind of see what those are.\n\n153\n00:08:58.440 --> 00:09:00.940\nBut we're gonna write\na controller as a class.\n\n154\n00:09:00.940 --> 00:09:03.420\nWhich means,\nif you've watched our AngularJS series,\n\n155\n00:09:03.420 --> 00:09:06.315\nthis is gonna be a little bit of\nan upgrade in our skill level.\n\n156\n00:09:06.315 --> 00:09:07.310\n&gt;&gt; Mm-hm.\n&gt;&gt; Okay?\n\n157\n00:09:07.310 --> 00:09:10.392\nSo before I forget,\nI'm gonna go ahead and say modules,\n\n158\n00:09:10.392 --> 00:09:16.900\nmodule.exports =, well, what is it?\n\n159\n00:09:16.900 --> 00:09:20.170\nIt's the AppController, okay?\n\n160\n00:09:20.170 --> 00:09:21.640\nSo that's what I'm going to export.\n\n161\n00:09:22.710 --> 00:09:25.120\nAnd I'm gonna create the class\ncalled AppController.\n\n162\n00:09:26.360 --> 00:09:29.340\nAnd that class is going\nto have a constructor.\n\n163\n00:09:31.130 --> 00:09:36.170\nConstructor, and well that's all I need.\n\n164\n00:09:36.170 --> 00:09:41.910\nI want to say this.message equals\nhello from the app component,\n\n165\n00:09:43.400 --> 00:09:49.360\njust like so, and lastly to make sure\nour dependency injection still works and\n\n166\n00:09:49.360 --> 00:09:51.460\nour minification doesn't mess that up.\n\n167\n00:09:51.460 --> 00:09:54.620\nI'm going to attach a static field here.\n\n168\n00:09:56.500 --> 00:09:58.460\nRight after,\nyou have to define the class for R2.\n\n169\n00:09:58.460 --> 00:10:01.830\nSo it's a little bit\ndifferent than functions.\n\n170\n00:10:01.830 --> 00:10:05.580\nI'm gonna have this dollar sign inject and\nthat's gonna be our list of dependencies.\n\n171\n00:10:05.580 --> 00:10:08.900\nYeah, this is gonna be\na little more work but for\n\n172\n00:10:08.900 --> 00:10:10.570\nclarity I think this is the best way.\n\n173\n00:10:10.570 --> 00:10:17.450\nAnd I really I was a deep inner turmoil\nabout how to best approximate this.\n\n174\n00:10:17.450 --> 00:10:18.890\nThis is not wrong.\n\n175\n00:10:18.890 --> 00:10:22.450\nThere are ways of creating annotations and\nadditional build tools but I didn't wanna\n\n176\n00:10:22.450 --> 00:10:26.460\nbring in new build tools since we just got\nour original build tools up and running.\n\n177\n00:10:26.460 --> 00:10:28.410\nAll right, so there is a app controller.\n\n178\n00:10:28.410 --> 00:10:29.670\nIt is exported.\n\n179\n00:10:29.670 --> 00:10:33.060\nWe're using old style exports and\nwhat I mean by old style,\n\n180\n00:10:33.060 --> 00:10:36.650\nwe're still using module.exports and\nrequire mainly because I don't want\n\n181\n00:10:36.650 --> 00:10:40.370\na context switch between our proxy and\nour fronting code.\n\n182\n00:10:40.370 --> 00:10:45.290\nEF2015, EF6 does have\nan import-export convention,\n\n183\n00:10:45.290 --> 00:10:50.230\nbut I'm gonna keep this consistency just\nto kinda meld these two together, okay.\n\n184\n00:10:51.760 --> 00:10:53.240\nSo in our app component what do we need?\n\n185\n00:10:54.630 --> 00:10:58.900\nWell we need our template, no, no,\nno, no, let's get our controller.\n\n186\n00:10:58.900 --> 00:11:03.309\nThere we go.\nSo our controller is our\n\n187\n00:11:03.309 --> 00:11:07.250\napp.controller, okay.\n\n188\n00:11:07.250 --> 00:11:15.600\nAnd then our template,\nhow am I gonna get the app.html into here.\n\n189\n00:11:15.600 --> 00:11:16.750\nWe'll worry about that.\n\n190\n00:11:16.750 --> 00:11:18.850\nWe'll get that in just a little bit.\n\n191\n00:11:18.850 --> 00:11:23.720\nBut you know as our first approximation,\n\n192\n00:11:23.720 --> 00:11:29.101\nlet's go here and\njust write that inline as such, okay.\n\n193\n00:11:29.101 --> 00:11:34.630\nNot the best way but it is a way.\n\n194\n00:11:36.450 --> 00:11:39.079\nAnd then, well we are just gonna\nsay here is our component.\n\n195\n00:11:40.240 --> 00:11:42.380\nNow I'm gonna reuse these variable\nnames over, and over, and\n\n196\n00:11:42.380 --> 00:11:44.660\nover again in these\ncomponent definition files.\n\n197\n00:11:44.660 --> 00:11:48.070\nBecause where I import them\nultimately is what matters.\n\n198\n00:11:48.070 --> 00:11:51.510\nSo our template is going to be template,\nand\n\n199\n00:11:51.510 --> 00:11:57.165\nour controller It's going to be\ncontroller and well, that's it.\n\n200\n00:11:57.165 --> 00:12:01.525\nAnd well with our new ES 2015,\nES6 transforms.\n\n201\n00:12:01.525 --> 00:12:06.690\nIf I have these exactly the same,\nI can instead just take those out and\n\n202\n00:12:06.690 --> 00:12:10.510\njust write the variable name and\nit will do all of the other work for me.\n\n203\n00:12:10.510 --> 00:12:17.460\nSo its pretty nice and then don't\nforget modules.export, module.exports.\n\n204\n00:12:17.460 --> 00:12:21.320\nI always mix up that s,\nthe component, okay?\n\n205\n00:12:21.320 --> 00:12:25.460\nSo as it stands,\nwe have our app component.\n\n206\n00:12:25.460 --> 00:12:27.220\nNow how do we actually use this?\n\n207\n00:12:28.920 --> 00:12:32.590\nIf I come into main.js,\nwe're just gonna see if it builds.\n\n208\n00:12:32.590 --> 00:12:34.845\nSee if we can see what it does.\n\n209\n00:12:34.845 --> 00:12:42.379\nM.js we're going to say\nAppComponent = component,\n\n210\n00:12:42.379 --> 00:12:51.728\nthere we go require('./components/app/app\ncomponent).\n\n211\n00:12:51.728 --> 00:12:59.160\nNow that's a little bit\nof redundancy there.\n\n212\n00:12:59.160 --> 00:13:01.410\nThere's a better way to\nkinda pull that out.\n\n213\n00:13:01.410 --> 00:13:03.790\nBut for now we'll just be super specific.\n\n214\n00:13:03.790 --> 00:13:08.430\nAnd then, well,\nthat's all we would have in this file.\n\n215\n00:13:08.430 --> 00:13:13.166\nIt's just console.log AppComponent\nto see if that comes in.\n\n216\n00:13:13.166 --> 00:13:19.690\nSo npm run build, Webpack is\ngonna rebuild it says it rebuild.\n\n217\n00:13:20.850 --> 00:13:25.970\nLet's come out of here and\ninto our dist folder, so clear\n\n218\n00:13:27.820 --> 00:13:33.100\ndist, node, main and\nthat's exactly what we expect, right?\n\n219\n00:13:33.100 --> 00:13:36.220\nTemplate and controller it's\na function with an inject field\n\n220\n00:13:36.220 --> 00:13:38.210\nBeautiful actually it's a class excuse me.\n\n221\n00:13:39.690 --> 00:13:40.450\nNow we have a problem.\n\n222\n00:13:40.450 --> 00:13:41.710\nDo we know what our problem is Zach?\n\n223\n00:13:43.630 --> 00:13:48.560\n&gt;&gt; I know that we have the app\ncontroller but it's not finished.\n\n224\n00:13:48.560 --> 00:13:50.190\nRight?\nSo is that gonna change as we continue to\n\n225\n00:13:50.190 --> 00:13:51.300\nwork on the app?\n\n226\n00:13:51.300 --> 00:13:54.000\n&gt;&gt; We do have to make\nadditional changes to this.\n\n227\n00:13:54.000 --> 00:13:56.310\n&gt;&gt; Yeah.\nAnd I guess the most notable change,\n\n228\n00:13:56.310 --> 00:13:58.440\nit's not part of Angular yet.\n\n229\n00:13:58.440 --> 00:14:01.520\nWe haven't even brought Angular on a page,\nwe don't have that.\n\n230\n00:14:01.520 --> 00:14:02.720\n&gt;&gt; Really.\n&gt;&gt; So\n\n231\n00:14:02.720 --> 00:14:06.680\nwe actually have a lot of work to\ndo just to get our fist hello.\n\n232\n00:14:06.680 --> 00:14:07.600\n&gt;&gt; Hello.\n\n233\n00:14:07.600 --> 00:14:08.630\n&gt;&gt; On the page.\n\n234\n00:14:08.630 --> 00:14:12.330\nNow that is typical for most all these\nprojects, there's a lot of bootstrapping,\n\n235\n00:14:12.330 --> 00:14:13.490\nkind of bolder plate up front,\n\n236\n00:14:13.490 --> 00:14:17.220\nand then after that it gets\na little bit faster as you go on.\n\n237\n00:14:17.220 --> 00:14:18.590\nOkay?\n\n238\n00:14:18.590 --> 00:14:19.970\nSo, we know that it runs.\n\n239\n00:14:19.970 --> 00:14:21.150\nWe know that it builds.\n\n240\n00:14:22.590 --> 00:14:23.230\nWhat do we gotta do next?\n\n241\n00:14:24.390 --> 00:14:25.480\nLet's get angular.\n\n242\n00:14:25.480 --> 00:14:26.690\nLet's get at the build and\n\n243\n00:14:26.690 --> 00:14:30.060\ninclude angular,\nget our angular module stuff set up.\n\n244\n00:14:30.060 --> 00:14:32.580\nAnd, we should be good to go.\n\n245\n00:14:32.580 --> 00:14:35.120\nAnd, so, how are we gonna get angular?\n\n246\n00:14:35.120 --> 00:14:37.200\nWell, if you watch my angular Gs series.\n\n247\n00:14:37.200 --> 00:14:42.020\nWe used the CDN, but\nnow we have a build system, we have MPM.\n\n248\n00:14:42.020 --> 00:14:46.020\nMPM actually allow you to\npull down Angular locally and\n\n249\n00:14:46.020 --> 00:14:47.000\nmake it part of your build.\n\n250\n00:14:47.000 --> 00:14:51.810\nSo let's use MPM to manage our\nangular dependencies and that's handy.\n\n251\n00:14:51.810 --> 00:14:56.760\nMPM in a stall angular --save and now we\nare going to wire that component up and\n\n252\n00:14:56.760 --> 00:15:00.390\nactually make it part of an angular\napplication and we should be good to go.\n\n253\n00:15:00.390 --> 00:15:03.730\nNotice add 1 package, its Angular 1.6.5.\n\n254\n00:15:03.730 --> 00:15:07.310\nSounds we'll have 1, 5 and\nabove we should be good to go.\n\n255\n00:15:08.810 --> 00:15:09.470\nOkay?\n\n256\n00:15:09.470 --> 00:15:11.720\nSo if we come back over here and\n\n257\n00:15:11.720 --> 00:15:15.836\nlook at in package.json,\nAngular is now a dependency, awesome.\n\n258\n00:15:15.836 --> 00:15:20.440\nThis is Angular.js eventhough its\nlisted as Angular, eventhough\n\n259\n00:15:20.440 --> 00:15:25.500\nthat Angular without the js in most\nother capacities is the new one I know\n\n260\n00:15:25.500 --> 00:15:30.480\nI don't make the convection that's kind of\nconfusing but it's 1.6 we are good to go.\n\n261\n00:15:30.480 --> 00:15:31.170\nOkay.\n\n262\n00:15:31.170 --> 00:15:34.614\nSo, how do I use that in this main.js?\n\n263\n00:15:34.614 --> 00:15:39.574\nWell, angular=require('angular');\nThat's it, it's part of node\n\n264\n00:15:39.574 --> 00:15:44.470\nmodule I'm gonna import it just like\nthis Angular is part of my project now.\n\n265\n00:15:44.470 --> 00:15:47.272\nAnd then I want to say angular.module.\n\n266\n00:15:47.272 --> 00:15:50.035\nAnd let's just call it angcaster.\n\n267\n00:15:50.035 --> 00:15:52.856\nLet's call it the client.\n\n268\n00:15:52.856 --> 00:15:56.777\nAnd we're gonna create a new module here.\n\n269\n00:15:59.272 --> 00:16:02.933\nAnd wire up a new component called app and\n\n270\n00:16:02.933 --> 00:16:07.679\nthat corresponds to the AppComponent,\nall right.\n\n271\n00:16:07.679 --> 00:16:11.890\nSo this file is the description of\nour application, what do we need?\n\n272\n00:16:11.890 --> 00:16:16.650\nWe need Angular, we need our AppComponent,\nwe need to create an Angular module and\n\n273\n00:16:16.650 --> 00:16:21.212\nwe called in cache to client, and we\ncreate a component called app, all right?\n\n274\n00:16:21.212 --> 00:16:25.140\nSo we're real close, real, real close.\n\n275\n00:16:25.140 --> 00:16:28.440\nIf we had an index.html\n\n276\n00:16:28.440 --> 00:16:33.110\nthat would use this main bundle\n.js that would be real handy.\n\n277\n00:16:34.190 --> 00:16:37.410\nNow there is a way to hand webpack through\nthis forest and we'll eventually set\n\n278\n00:16:37.410 --> 00:16:41.860\nthat up, but I think a good first\napproximation, just to see if we have some\n\n279\n00:16:41.860 --> 00:16:46.870\nsuccess, is to make that by hand in our\ndist folder and just observe, right?\n\n280\n00:16:46.870 --> 00:16:49.830\nLet's make sure that this part\nworks before we start changing\n\n281\n00:16:49.830 --> 00:16:50.670\nour configuration.\n\n282\n00:16:52.110 --> 00:16:55.479\nSo, I’m gonna come into my\ndist folder like so and\n\n283\n00:16:55.479 --> 00:17:00.632\nI’m gonna create a new file, and\nthat file is gonna be index.html, okay.\n\n284\n00:17:00.632 --> 00:17:06.381\nNow this index.html is just\na plain html file, and\n\n285\n00:17:06.381 --> 00:17:13.618\nthen I'm gonna say\nng-app='angcaster-client', okay?\n\n286\n00:17:13.618 --> 00:17:17.220\nAnd those that went further,\nthat's not what we want.\n\n287\n00:17:17.220 --> 00:17:22.387\nAngcaster and\nthen here I'm just gonna say app, like so,\n\n288\n00:17:22.387 --> 00:17:29.147\nand then this script tag is going to\npoint to main.bundle.js, all right?\n\n289\n00:17:29.147 --> 00:17:34.050\nThis index.html is going\nto stay in the dist folder.\n\n290\n00:17:34.050 --> 00:17:38.600\nEvery time we rebuild we should be able to\nrefresh if it's open in our browser and\n\n291\n00:17:38.600 --> 00:17:40.630\nthen see the results.\n\n292\n00:17:40.630 --> 00:17:44.920\nIt's not ideal, but we'll further\nrefine that as we need to all right.\n\n293\n00:17:44.920 --> 00:17:49.850\nSo I use this as a component because I\nknow since it's in my main JS is gonna\n\n294\n00:17:49.850 --> 00:17:53.070\nbe my main bundle,\nthis app is going to be working.\n\n295\n00:17:53.070 --> 00:17:56.112\nNow hopefully we don't have to\ndo any on the fly debugging but\n\n296\n00:17:56.112 --> 00:17:57.313\nyou never know, Zach.\n\n297\n00:17:57.313 --> 00:17:59.190\n&gt;&gt; You never know.\n\n298\n00:17:59.190 --> 00:18:06.940\n&gt;&gt; So let's go ahead and rebuild nmp run\nbuild, and we're waiting, we're waiting,\n\n299\n00:18:06.940 --> 00:18:13.470\nand this is bringing in everything, and\nnotice that it looks fine, good deal.\n\n300\n00:18:13.470 --> 00:18:18.432\nWe're about to find out if Angular\nbecame part of our application, so\n\n301\n00:18:18.432 --> 00:18:22.313\nI'm gonna go in the dist folder and\nopen index.html.\n\n302\n00:18:22.313 --> 00:18:26.807\nNow, if you are on a Windows machine or\na Linux machine,\n\n303\n00:18:26.807 --> 00:18:31.080\nthat open command may be\na little bit different.\n\n304\n00:18:31.080 --> 00:18:35.200\nI know on a Mac if I hit open, it'll open\nwith whatever the default browser is, but\n\n305\n00:18:35.200 --> 00:18:37.340\nZach it does look like we have success.\n\n306\n00:18:37.340 --> 00:18:38.160\n&gt;&gt; Success.\n\n307\n00:18:38.160 --> 00:18:40.680\n&gt;&gt; Because look,\nhello from the app component,\n\n308\n00:18:40.680 --> 00:18:44.170\nthat's what we wrote as the message,\nthat's part of our template.\n\n309\n00:18:44.170 --> 00:18:47.290\nThat's incredibly handy, it's good to go,\n\n310\n00:18:47.290 --> 00:18:50.190\nwe have Angular on the page, it's part\nof our build system, it's awesome.\n\n311\n00:18:51.860 --> 00:18:57.720\nLikewise, if we look at\nthis network request, well,\n\n312\n00:18:57.720 --> 00:19:02.330\nif I refresh there's main bundle and\nit didn't update it.\n\n313\n00:19:02.330 --> 00:19:04.448\nI'm just gonna click on it so\nI can see it.\n\n314\n00:19:04.448 --> 00:19:10.540\nIt has mini-fied every bit of code\nthat we need it's on a single line and\n\n315\n00:19:10.540 --> 00:19:14.460\nas little white spaces as possible, so\n\n316\n00:19:14.460 --> 00:19:19.170\nthat's good that's gonna\nmake our app faster.\n\n317\n00:19:19.170 --> 00:19:22.810\nI was gonna say more faster and\nthat doesn't make any sense.\n\n318\n00:19:22.810 --> 00:19:26.170\nBut we do have our first app\ncomponent up and running.\n\n319\n00:19:28.150 --> 00:19:31.220\nThat Zach,\nI don't know if we're quite done yet.\n\n320\n00:19:31.220 --> 00:19:32.140\n&gt;&gt; Well the components up and\n\n321\n00:19:32.140 --> 00:19:34.516\nrunning, but how do we know we\ncan interact with the proxy?\n\n322\n00:19:34.516 --> 00:19:38.978\n&gt;&gt; Well that is a very,\nthat is a very loaded question.\n\n323\n00:19:38.978 --> 00:19:42.640\nThat is a very loaded question.\n\n324\n00:19:42.640 --> 00:19:47.300\nAnd I'm not sure we could even\ndo that quite yet, right.\n\n325\n00:19:48.550 --> 00:19:52.447\nBut that is something we need to do,\nright.\n\n326\n00:19:52.447 --> 00:19:53.658\n&gt;&gt; Mm-hm.\n\n327\n00:19:53.658 --> 00:19:56.800\n&gt;&gt; So what do we need to do first\nin order to get that accomplished?\n\n328\n00:19:56.800 --> 00:20:01.430\nIf I want to interact with a proxy I\ncan't open it from a file like this,\n\n329\n00:20:01.430 --> 00:20:02.820\nthat's number one.\n\n330\n00:20:02.820 --> 00:20:10.910\nNumber two, we are in-lining this template\ninside of my ab.component.js like this.\n\n331\n00:20:10.910 --> 00:20:11.770\nI would like to fix that.\n\n332\n00:20:13.300 --> 00:20:16.160\nNumber three, it would be nice if this,\n\n333\n00:20:18.570 --> 00:20:24.540\nI don't know if I wanna in-line this or\nmaybe I wanna change this name.\n\n334\n00:20:24.540 --> 00:20:27.080\nRight, there's still\nsome things I don't like.\n\n335\n00:20:27.080 --> 00:20:30.310\nThe best thing to do is to start\npicking them off one at a time.\n\n336\n00:20:30.310 --> 00:20:33.890\nSo before we can interact with the proxy,\nwhich is our ultimate goal.\n\n337\n00:20:33.890 --> 00:20:35.870\n&gt;&gt; Now this is the proxy\nthat we already built right?\n\n338\n00:20:35.870 --> 00:20:36.680\n&gt;&gt; Exactly so.\n\n339\n00:20:36.680 --> 00:20:38.140\n&gt;&gt; Yeah.\nThe proxy that we built for\n\n340\n00:20:38.140 --> 00:20:39.770\nour weather data right?\n\n341\n00:20:39.770 --> 00:20:41.920\n&gt;&gt; A previous episode you need to see.\n\n342\n00:20:41.920 --> 00:20:44.356\n&gt;&gt; Then we wanna get the data from that so\nwe can start rendering.\n\n343\n00:20:44.356 --> 00:20:45.590\n&gt;&gt; Yes.\n\n344\n00:20:45.590 --> 00:20:48.250\n&gt;&gt; But\nlet's fix these few issues first and\n\n345\n00:20:48.250 --> 00:20:51.030\nwe'll see how the time allows us right?\n\n346\n00:20:51.030 --> 00:20:51.760\n&gt;&gt; Okay.\n\n347\n00:20:51.760 --> 00:20:56.470\n&gt;&gt; So if I come back here, let's fix this\napp.component thing first, all right?\n\n348\n00:20:56.470 --> 00:21:00.170\nSo, I was explicit about this,\nbut in the note ecosystem,\n\n349\n00:21:00.170 --> 00:21:04.990\na lot of times if you have a folder,\nand there's an index.js in it,\n\n350\n00:21:04.990 --> 00:21:08.800\nit will import that file if you\njust point it to the folder.\n\n351\n00:21:08.800 --> 00:21:13.885\nSo instead of having this app.component\nlike such, I'm going to rename this to\n\n352\n00:21:13.885 --> 00:21:19.450\nindex.js and by using that convention and\nthis main.js,\n\n353\n00:21:19.450 --> 00:21:24.100\nI can just point this to\ncomponents app like this.\n\n354\n00:21:24.100 --> 00:21:27.185\nNotice I didn't have to have\nthat redundant name there.\n\n355\n00:21:27.185 --> 00:21:28.440\n&gt;&gt; Mm-hm.\n\n356\n00:21:28.440 --> 00:21:35.690\n&gt;&gt; Secondly, this app controller, but\ninside wait for it, where'd you go?\n\n357\n00:21:38.040 --> 00:21:40.080\nI renamed it and then I lost it.\n\n358\n00:21:40.080 --> 00:21:43.940\nThis template, this in-line template,\nI I don't like in-lining this.\n\n359\n00:21:43.940 --> 00:21:47.979\nI don't want to use this index.,\nnot that index.html but this app.html.\n\n360\n00:21:47.979 --> 00:21:51.040\nI wanna use whatever html that's here.\n\n361\n00:21:51.040 --> 00:21:54.480\nWell, I remember saying something about\nJavaScript files can be loaded when\n\n362\n00:21:54.480 --> 00:22:00.120\nrequired, we've seen the CSS files, the\nnext logical step is can we do HTML files?\n\n363\n00:22:01.430 --> 00:22:02.220\nHmm.\n&gt;&gt; Hmm.\n\n364\n00:22:02.220 --> 00:22:04.300\n&gt;&gt; That is a good question.\n\n365\n00:22:04.300 --> 00:22:09.720\nAnd in fact we can using the HTML loader.\n\n366\n00:22:09.720 --> 00:22:14.590\nSo if you need to address new files types,\nright we had CSS and\n\n367\n00:22:14.590 --> 00:22:20.000\nJavaScript in our webpack config but\nI need HTML or .png.\n\n368\n00:22:20.000 --> 00:22:22.630\nWell there's typically a loader\nthat will allow you to do that.\n\n369\n00:22:22.630 --> 00:22:28.890\nSo if I look up webpack HTML loader and\n\n370\n00:22:28.890 --> 00:22:32.630\nwell, there we go it tells\nme exactly what to do.\n\n371\n00:22:34.170 --> 00:22:37.750\nWhat to install and\na sample test all right.\n\n372\n00:22:37.750 --> 00:22:40.870\nSo we're gonna use that,\nset up our webpack config,\n\n373\n00:22:40.870 --> 00:22:44.220\nchange that in-line template\nto be required, and\n\n374\n00:22:44.220 --> 00:22:48.360\nthen I think we're able to move on to\nactually communicating with the proxy.\n\n375\n00:22:48.360 --> 00:22:49.030\n&gt;&gt; Awesome.\n\n376\n00:22:49.030 --> 00:22:53.014\n&gt;&gt; Other than that server thing,\nwhich we may just approximate for now.\n\n377\n00:22:53.014 --> 00:22:54.480\n&gt;&gt; Mm-hm.\n\n378\n00:22:54.480 --> 00:22:56.515\n&gt;&gt; So I need to npm install.\n\n379\n00:22:56.515 --> 00:23:02.759\nYou should probably get back into your\ntop-level folder here, npm install.\n\n380\n00:23:03.843 --> 00:23:08.606\nHtml-loader --save-dev.\n\n381\n00:23:08.606 --> 00:23:10.000\nIts because we only need this for\n\n382\n00:23:10.000 --> 00:23:12.770\ndevelopment, once it's built we're done,\nokay?\n\n383\n00:23:14.350 --> 00:23:19.334\nSo there we go, HTML loader, and\nnow we need to come over and\n\n384\n00:23:19.334 --> 00:23:21.643\nalter our webpack config.\n\n385\n00:23:21.643 --> 00:23:25.370\nAnd I accidentally hit some keys there,\nand had that.\n\n386\n00:23:25.370 --> 00:23:29.300\nSo our webpack config,\nloaders are not typically required,\n\n387\n00:23:29.300 --> 00:23:32.120\nthey're just referenced by\nnames inside these rules.\n\n388\n00:23:32.120 --> 00:23:36.268\nSo let's just follow these rules,\nset up rules, there's a comma, and\n\n389\n00:23:36.268 --> 00:23:37.631\nthen what's our test?\n\n390\n00:23:37.631 --> 00:23:42.520\nNow, we are not gonna be talking\nabout regular expressions but I just\n\n391\n00:23:42.520 --> 00:23:48.070\nkinda copy this and you can actually\nlook at the documentation as well.\n\n392\n00:23:48.070 --> 00:23:52.990\nAnd then the loader for\nthis is, well, html-loader.\n\n393\n00:23:52.990 --> 00:23:55.804\nAnd, well,\nlet's go see the recommended options.\n\n394\n00:23:55.804 --> 00:24:01.020\nI don't think I want those options,\nthose options, I'm all good.\n\n395\n00:24:01.020 --> 00:24:04.900\nI could do minimize true, but\nI'm gonna leave that alone.\n\n396\n00:24:04.900 --> 00:24:09.915\nSo I'm gonna leave that as HTML loader and\nthat should be all there is,\n\n397\n00:24:09.915 --> 00:24:14.846\nwe're about to find out if it still\nworks by coming to index.js which\n\n398\n00:24:14.846 --> 00:24:18.758\nis our component that's\ninside of our app folder, and\n\n399\n00:24:18.758 --> 00:24:24.740\ninstead of having this in-line template,\nI should be able to require app.html.\n\n400\n00:24:24.740 --> 00:24:28.180\nAnd because this ends in .html,\nand we use the html loader,\n\n401\n00:24:28.180 --> 00:24:31.554\nI will grab that HTML as part\nof this template variable, and\n\n402\n00:24:31.554 --> 00:24:35.950\nthen that will be put inside of my\ncomponent, and my definition is complete.\n\n403\n00:24:35.950 --> 00:24:40.130\nI'm using the build system to manage\nmy assets instead of in-lining it and\n\n404\n00:24:40.130 --> 00:24:41.230\ntrying to manage that.\n\n405\n00:24:41.230 --> 00:24:42.660\nSo I can pull those pieces apart,\n\n406\n00:24:42.660 --> 00:24:46.240\nlet the build system squish them back\ntogether, it's great for organization.\n\n407\n00:24:46.240 --> 00:24:50.730\nNow I've told you all these great things,\nI may be a dirty liar.\n\n408\n00:24:50.730 --> 00:24:55.730\nSo let's go ahead and npm run build,\nsee if we have any errors and\n\n409\n00:24:55.730 --> 00:24:59.420\nwe cross our fingers,\nwe did not have any errors.\n\n410\n00:24:59.420 --> 00:25:04.980\nThat probably means we did something\nalright, we come over here to Ancaster and\n\n411\n00:25:04.980 --> 00:25:10.870\nwe refresh and no errors here, this\nstill renders, that means my HTML loader\n\n412\n00:25:10.870 --> 00:25:16.240\nworks and now I can require .html files,\nbring them in we're good to go.\n\n413\n00:25:16.240 --> 00:25:21.600\nNow Zach, I know you asked about\ninteracting with the proxy service.\n\n414\n00:25:21.600 --> 00:25:27.670\nI really wanted to get that in his\nepisode, but I'm not sure we have time to\n\n415\n00:25:27.670 --> 00:25:33.770\ntake the full depth that we need to get\nour component wired up, use that proxy or\n\n416\n00:25:33.770 --> 00:25:36.810\ninteract with that proxy because we're\ngonna have to start up our proxy too.\n\n417\n00:25:36.810 --> 00:25:38.459\nSo maybe we're best to come\nback in another episode.\n\n418\n00:25:38.459 --> 00:25:39.670\n&gt;&gt; Do a part two?\n\n419\n00:25:39.670 --> 00:25:40.680\n&gt;&gt; Do a part two.\n\n420\n00:25:40.680 --> 00:25:44.150\n&gt;&gt; Okay well building\nthe app component and\n\n421\n00:25:44.150 --> 00:25:47.150\nthat is with our app with AngularJS and\nExpress.\n\n422\n00:25:47.150 --> 00:25:50.040\nAnd we're gonna have a part two\nof Building the App Component.\n\n423\n00:25:50.040 --> 00:25:54.210\nAnd make sure you watch all\nthe other videos in the Weather App\n\n424\n00:25:54.210 --> 00:25:57.000\nwith AngularJS and Express series,\nyou'll be really glad you did.\n\n425\n00:25:57.000 --> 00:25:58.210\nGreat job, Justin.\n\n426\n00:25:58.210 --> 00:26:00.150\nAnd thank you for watching DevProTV.\n\n427\n00:26:00.150 --> 00:26:03.030\nRemember, a good dev\npro is always learning.\n\n428\n00:26:03.030 --> 00:26:04.380\nI'm Zach Memos, your host.\n\n429\n00:26:04.380 --> 00:26:05.520\n&gt;&gt; And I'm Justin Dennison.\n\n430\n00:26:05.520 --> 00:26:06.093\n&gt;&gt; And we'll see you soon.\n\n431\n00:26:06.093 --> 00:26:11.391\n[MUSIC]\n\n",
          "vimeoId": "226733388"
        },
        {
          "description": "Justin and Zach continue to discuss Building the App Component, getting the App Component o interact with the Proxy, building a simple call using $http, $Inject, and managing code in the Controller.",
          "length": "1244",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-4-1-2-building_the_app_component_pt2-0720117-PGM.00_21_15_07.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-4-1-2-building_the_app_component_pt2-0720117-PGM.00_21_15_07.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-4-1-2-building_the_app_component_pt2-0720117-PGM.00_21_15_07.Still001-sm.jpg",
          "title": "Building the App Component Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:06.395\n[SOUND]\nHello,\n\n2\n00:00:06.395 --> 00:00:09.659\nand thank you for choosing DevPro.TV,\nhelping you learn wherever you go.\n\n3\n00:00:09.659 --> 00:00:15.020\nI'm your host, Zach Memos, as we continue\non with Weather App with AngularJS and\n\n4\n00:00:15.020 --> 00:00:18.374\nExpress, part two of\nbuilding the app component.\n\n5\n00:00:18.374 --> 00:00:21.166\nAnd bringing us the information\nwe need is the one, the only,\n\n6\n00:00:21.166 --> 00:00:23.923\nyou know him, you love him,\nJustin Dennison, right here.\n\n7\n00:00:23.923 --> 00:00:27.070\n&gt;&gt; Well I was hoping for\na marching band to start playing, but\n\n8\n00:00:27.070 --> 00:00:28.621\nthere was a little let down.\n\n9\n00:00:28.621 --> 00:00:31.140\nBut besides that,\nhow are you doing today, Zach?\n\n10\n00:00:31.140 --> 00:00:35.210\n&gt;&gt; I'm doing great, Adam, excited that\nwe're continuing on with building\n\n11\n00:00:35.210 --> 00:00:38.790\nthe app component, because when we left\noff last time, we had build the component.\n\n12\n00:00:38.790 --> 00:00:41.320\nBut how do we know that\nit can talk to the proxy?\n\n13\n00:00:41.320 --> 00:00:43.000\nOr do we need it to talk to the proxy?\n\n14\n00:00:43.000 --> 00:00:45.330\n&gt;&gt; We should probably make sure\nthat it can get data, right?\n\n15\n00:00:45.330 --> 00:00:48.640\nBecause our app component is gonna be our\nsmart component and if it doesn't know\n\n16\n00:00:48.640 --> 00:00:52.310\nanything or connect to our server,\nright, our little proxy service.\n\n17\n00:00:52.310 --> 00:00:52.885\n&gt;&gt; Mm-hm.\n\n18\n00:00:52.885 --> 00:00:56.095\n&gt;&gt; Well, there's no way those\nare actually gonna be smart\n\n19\n00:00:56.095 --> 00:00:57.735\nunless we hard code some data in there.\n\n20\n00:00:57.735 --> 00:01:00.635\nAnd that's not really applicable,\ncuz then I'm just gonna hard code that\n\n21\n00:01:00.635 --> 00:01:03.805\nit's sunny all the time and\nthat's a horrible weather app, right?\n\n22\n00:01:03.805 --> 00:01:06.845\nSo we don't want that,\nwe do want that communication.\n\n23\n00:01:06.845 --> 00:01:09.555\n&gt;&gt; Right.\n&gt;&gt; And, well, you asked that question and\n\n24\n00:01:09.555 --> 00:01:10.505\nwe really need to answer it.\n\n25\n00:01:10.505 --> 00:01:12.355\nBut we had to fix a couple\nof problems last time.\n\n26\n00:01:12.355 --> 00:01:13.115\n&gt;&gt; Right, right, right.\n\n27\n00:01:13.115 --> 00:01:15.545\n&gt;&gt; Right at the end,\nwe had to do some tweaks.\n\n28\n00:01:15.545 --> 00:01:20.120\nSo now we are into part two and\nwell we have got to get that up and going.\n\n29\n00:01:20.120 --> 00:01:23.150\nLet's see if we can do just\nthat very thing, all right?\n\n30\n00:01:23.150 --> 00:01:28.100\nSo let's take a look at\nthe application code here and well,\n\n31\n00:01:28.100 --> 00:01:30.085\nwhere did we leave off?\n\n32\n00:01:30.085 --> 00:01:32.672\nWe have got every up and\nrunning let's look at this app controller.\n\n33\n00:01:32.672 --> 00:01:35.329\nHere is our controller and\nwe know it works because we open it.\n\n34\n00:01:35.329 --> 00:01:40.723\nWe still will have to address\na problem but we should probably\n\n35\n00:01:40.723 --> 00:01:46.558\nmake sure that we can use some way\nto connect to the proxy service.\n\n36\n00:01:46.558 --> 00:01:52.690\nNow if I remember correctly,\nAngular provides a $http service.\n\n37\n00:01:52.690 --> 00:01:56.540\nWell I'm using this new class based\nsyntax, so how do I get that?\n\n38\n00:01:57.810 --> 00:02:04.830\nWell, lets say $http, that's how I\ninject this, through Angular, all right?\n\n39\n00:02:04.830 --> 00:02:09.560\nSo it's part of the constructor and now\nI'm going to attach it to the controller\n\n40\n00:02:09.560 --> 00:02:14.620\nas $http, the actual property, okay?\n\n41\n00:02:14.620 --> 00:02:21.070\nAnd just to show you, we're gonna\nconsole.log this, okay and this in\n\n42\n00:02:21.070 --> 00:02:26.970\nthis context should be this AppController\nobject that's constructed for us.\n\n43\n00:02:26.970 --> 00:02:31.730\nSo let's go ahead and\nrebuild npm run build, and\n\n44\n00:02:31.730 --> 00:02:36.780\nthat's gonna rebuild our application and\nupdate those changes, that's good to go.\n\n45\n00:02:36.780 --> 00:02:41.295\nAnd now we're going to refresh,\nand notice there we go,\n\n46\n00:02:41.295 --> 00:02:45.366\nuh-oh, that's not what we expected.\n\n47\n00:02:45.366 --> 00:02:52.110\n$http undefined, but I remember if we\nuse a CDN, and use normal functions,\n\n48\n00:02:52.110 --> 00:02:57.430\nand we just build an application with\nall the script tags, this would work.\n\n49\n00:02:57.430 --> 00:03:02.840\nHm, well, I remember telling,\n\n50\n00:03:02.840 --> 00:03:07.310\nif you actually go watch the AngularJS\nseries, I explicitly say this that we need\n\n51\n00:03:07.310 --> 00:03:12.830\nto notate the dependencies that we need in\norder for Angular to know what to inject.\n\n52\n00:03:14.980 --> 00:03:17.488\nSo, if we come back, how do we do that?\n\n53\n00:03:17.488 --> 00:03:21.280\nThis right here, $inject.\n\n54\n00:03:21.280 --> 00:03:28.331\nAnd hm, npm run build.\n\n55\n00:03:28.331 --> 00:03:32.289\nAnd we're waiting,\nwe're waiting, is it building?\n\n56\n00:03:32.289 --> 00:03:38.024\nAnd if I refresh, ah-ha, there we go.\n\n57\n00:03:38.024 --> 00:03:43.614\nAnd hey, we got $http, so\nwe have both of these properties,\n\n58\n00:03:43.614 --> 00:03:47.170\nright, $inject = ['$http'].\n\n59\n00:03:47.170 --> 00:03:50.723\nWe put that on the class and\nthat's part of the constructor,\n\n60\n00:03:50.723 --> 00:03:55.403\nthat's how we establish dependency\ninjection with class based controllers.\n\n61\n00:03:55.403 --> 00:03:57.602\n&gt;&gt; But shouldn't this be\nsomething web pack can do?\n\n62\n00:03:57.602 --> 00:03:59.711\n&gt;&gt; Well, you're on the right track Zach,\n\n63\n00:03:59.711 --> 00:04:02.620\nthis should be something\nthat web pack can do.\n\n64\n00:04:02.620 --> 00:04:05.220\nHowever, there is a great\ndeal of setup and\n\n65\n00:04:05.220 --> 00:04:08.190\nsome other build tools like Gulp and\nGrunt.\n\n66\n00:04:08.190 --> 00:04:13.760\nThey have plugins and add-ons and web pack\nprobably does as well, but I like this\n\n67\n00:04:13.760 --> 00:04:18.850\nas explicitness and I don't wanna add too\nmuch tooling overhead to try to manage.\n\n68\n00:04:18.850 --> 00:04:21.340\nBecause there's still gonna\nbe a little more probably.\n\n69\n00:04:21.340 --> 00:04:24.490\nSo let's just hold off,\nkeep this list of dependencies but\n\n70\n00:04:24.490 --> 00:04:27.130\nyou're absolutely correct,\nZach I'm so proud.\n\n71\n00:04:27.130 --> 00:04:29.625\nYou've been listening,\nyou've been learning.\n\n72\n00:04:29.625 --> 00:04:33.270\n&gt;&gt; [LAUGH]\n&gt;&gt; It's a good day, I'm almost tearing up.\n\n73\n00:04:33.270 --> 00:04:35.330\n&gt;&gt; Don't get teary, it's okay.\n\n74\n00:04:35.330 --> 00:04:39.080\n&gt;&gt; Okay, we should probably get\nback to our application right.\n\n75\n00:04:39.080 --> 00:04:42.970\nLet's take a look at the screen here and\nis in fact right.\n\n76\n00:04:42.970 --> 00:04:46.240\nThis is probably something that we\ncould automate in our transformations.\n\n77\n00:04:46.240 --> 00:04:47.670\nWhy do I need to notate this?\n\n78\n00:04:47.670 --> 00:04:51.080\nBecause we actually\nare minifying our code now.\n\n79\n00:04:51.080 --> 00:04:55.200\nBecause we're minifying our code this\nname gets changed in our output so\n\n80\n00:04:55.200 --> 00:04:57.630\nAngular is like I can't look\nthat up by variable name.\n\n81\n00:04:57.630 --> 00:04:59.130\nI don't know what that is.\n\n82\n00:04:59.130 --> 00:05:04.240\nBut it doesn't change strings, so\nthen it will say, the first one is this.\n\n83\n00:05:04.240 --> 00:05:06.860\nAnd then it all works out, so\nthat's why I need that there.\n\n84\n00:05:06.860 --> 00:05:11.937\nSo, we have the $http service,\nthat's great.\n\n85\n00:05:11.937 --> 00:05:17.125\nUgh, but now we do have\nan additional problem, all right?\n\n86\n00:05:17.125 --> 00:05:21.360\nHm, we need this to be\nrunning in a server.\n\n87\n00:05:23.010 --> 00:05:25.880\nWe need our proxy server to be up and\nrunning.\n\n88\n00:05:28.200 --> 00:05:29.960\nLet's go ahead and get that started.\n\n89\n00:05:29.960 --> 00:05:34.766\nSee if can wire all\nthese pieces up because\n\n90\n00:05:34.766 --> 00:05:38.896\nwe're going to say this.$http.\n\n91\n00:05:41.124 --> 00:05:45.479\n.get something, that's what we want.\n\n92\n00:05:45.479 --> 00:05:48.774\nAnd when we get that something we should\nbe able to get that information back,\n\n93\n00:05:48.774 --> 00:05:49.290\nall right?\n\n94\n00:05:49.290 --> 00:05:52.980\nSo we're gonna comment that out for now,\nwe gotta do a little bit of a set up here.\n\n95\n00:05:54.470 --> 00:05:58.460\nAnd so, I'm gonna open another browser or\nexcuse me, a terminal tab and\n\n96\n00:05:58.460 --> 00:06:02.440\njust to show I'm gonna flip back and\nforth, this is just for convenience.\n\n97\n00:06:02.440 --> 00:06:05.060\nI'm gonna hop into my desktop and\n\n98\n00:06:05.060 --> 00:06:10.290\nthen there's angcaster and\nI'm gonna hop into the proxy.\n\n99\n00:06:10.290 --> 00:06:15.920\nSo I'm gonna mpm excuse me node index.js\nI don't have any build scripts there and\n\n100\n00:06:15.920 --> 00:06:17.220\nit's listening on port 80.80.\n\n101\n00:06:17.220 --> 00:06:19.760\nSo that local host port 80.80.\n\n102\n00:06:19.760 --> 00:06:21.280\nAll right, we're good to go there.\n\n103\n00:06:22.320 --> 00:06:28.800\nSo now our proxies up and running and just\nto show you that it is, I'm going to come\n\n104\n00:06:28.800 --> 00:06:35.260\nover here and hopefully go to\nlocalhost8080/weather/10,120.\n\n105\n00:06:35.260 --> 00:06:39.280\nAll right, just like that, and\nnotice we now have the weather.\n\n106\n00:06:39.280 --> 00:06:41.680\nNow if you're like,\nwhat is this proxy thing he's building?\n\n107\n00:06:41.680 --> 00:06:43.270\nDefinitely go and\ncheck those episodes out.\n\n108\n00:06:43.270 --> 00:06:44.830\n&gt;&gt; Yes.\n&gt;&gt; Because we built this first-\n\n109\n00:06:44.830 --> 00:06:45.590\n&gt;&gt; We built the proxy-\n\n110\n00:06:45.590 --> 00:06:47.660\n&gt;&gt; In order to get our information\n\n111\n00:06:47.660 --> 00:06:50.260\nto our front-end web application\nwhere now we can present it.\n\n112\n00:06:50.260 --> 00:06:52.660\nAll right, so that's up and running.\n\n113\n00:06:52.660 --> 00:06:54.199\nNow we have to address the second problem.\n\n114\n00:06:55.260 --> 00:06:57.590\nThat's this file and\n\n115\n00:06:57.590 --> 00:07:02.000\nthat may not play nice with\nmaking HTTP requests from a file.\n\n116\n00:07:02.000 --> 00:07:04.040\nSo what do I mean by a file?\n\n117\n00:07:04.040 --> 00:07:08.410\nI've opened this using what I would\nlike to say the file protocol.\n\n118\n00:07:08.410 --> 00:07:11.700\nIt's just a file path on my\ncomputer to that index.html.\n\n119\n00:07:11.700 --> 00:07:15.210\nIt still renders because the java\nscripts pulled in, file-based.\n\n120\n00:07:15.210 --> 00:07:19.800\nBut now I wanna start making AJAX\nrequests, it gets a little iffy.\n\n121\n00:07:19.800 --> 00:07:22.320\nSometimes it work, sometimes it won't.\n\n122\n00:07:22.320 --> 00:07:26.770\nMy recommendation is always to serve\nup this in HTML through a local server\n\n123\n00:07:26.770 --> 00:07:29.350\nto test it,\nbecause now you're gonna get a more\n\n124\n00:07:29.350 --> 00:07:34.560\nrealistic expectation of how it's gonna\nbehave when you deploy said application.\n\n125\n00:07:34.560 --> 00:07:36.207\nSo how are we gonna get that done?\n\n126\n00:07:36.207 --> 00:07:39.572\nWell, let's just make sure this works and\n\n127\n00:07:39.572 --> 00:07:43.037\nthen I've got a little\ntrick up my sleeves.\n\n128\n00:07:43.037 --> 00:07:44.059\n&gt;&gt; Uh-oh.\n\n129\n00:07:44.059 --> 00:07:46.636\n&gt;&gt; It might make your day, you never know.\n\n130\n00:07:46.636 --> 00:07:49.570\n&gt;&gt; [LAUGH]\n&gt;&gt; So this $http.get,\n\n131\n00:07:49.570 --> 00:07:53.591\nlet's see if we can get this up and\nrunning in a server.\n\n132\n00:07:53.591 --> 00:08:00.973\nI'm gonna hop into my dist folder,\nand I can use, well, python3.\n\n133\n00:08:00.973 --> 00:08:05.585\npython3 -m http.server and\nthen I can't serve it on 8080 because\n\n134\n00:08:05.585 --> 00:08:10.190\n8080 is already taken up by\nour currently running process.\n\n135\n00:08:10.190 --> 00:08:14.110\nSo I have to serve it on 8081 or some\nother port, I could do 5000, or 3000 or\n\n136\n00:08:14.110 --> 00:08:15.930\nwhatever it may be.\n\n137\n00:08:15.930 --> 00:08:19.960\nAnd here it is, it's up and running,\nit says there's an index site\n\n138\n00:08:19.960 --> 00:08:24.160\nthat will automatically move forward,\nokay and so that's good.\n\n139\n00:08:24.160 --> 00:08:29.400\nAnd so let's go to local host 8081 and\n\n140\n00:08:29.400 --> 00:08:34.880\nthere we go, it's going well,\nit actually prints out the HTTP function,\n\n141\n00:08:34.880 --> 00:08:39.250\nthe actual controller context,\nthe app renders, that's good.\n\n142\n00:08:40.590 --> 00:08:47.850\nWell okay, but\nnow if I use this every time I want\n\n143\n00:08:47.850 --> 00:08:51.710\nto rebuild I'm gonna have to kill this\nserver, rebuild, start the server back up,\n\n144\n00:08:51.710 --> 00:08:58.060\nI feel like there should be some\neasy way to manage that process.\n\n145\n00:08:58.060 --> 00:09:01.660\nHm, hm, I'm feigning this by the way.\n\n146\n00:09:01.660 --> 00:09:03.607\n&gt;&gt; Of course you are.\n&gt;&gt; Just to draw you in, right,\n\n147\n00:09:03.607 --> 00:09:05.833\ndid you kinda lean in\ncloser to the screen?\n\n148\n00:09:05.833 --> 00:09:07.379\n&gt;&gt; That's the Columbo approach.\n\n149\n00:09:07.379 --> 00:09:11.260\n&gt;&gt; Hm, right, I don't wanna do that.\n\n150\n00:09:11.260 --> 00:09:15.707\nWell there is a project called webpack\ndevelopment server, or webpack-dev-server,\n\n151\n00:09:15.707 --> 00:09:20.740\nexcuse me, that will do just that, it will\ncontinuously rebuild your assets as they\n\n152\n00:09:20.740 --> 00:09:26.210\nchange but it will also run a server and\nallow you to access those assets.\n\n153\n00:09:28.160 --> 00:09:31.577\nWe're gonna try to use that, we may\nhave to do some additional tweaks, and\n\n154\n00:09:31.577 --> 00:09:32.661\nthen I promise, Zach,\n\n155\n00:09:32.661 --> 00:09:35.550\nI promise we will eventually\ninteract with this proxy server.\n\n156\n00:09:35.550 --> 00:09:38.117\n&gt;&gt; [LAUGH]\n&gt;&gt; We will get there.\n\n157\n00:09:38.117 --> 00:09:39.638\n&gt;&gt; One day.\n\n158\n00:09:39.638 --> 00:09:43.113\n&gt;&gt; He's looking at me off-camera like,\nlisten,\n\n159\n00:09:43.113 --> 00:09:46.030\nI really wanna know how\nto do this [LAUGH].\n\n160\n00:09:46.030 --> 00:09:48.110\nWe'll get there, I promise, just trust me.\n\n161\n00:09:48.110 --> 00:09:53.569\nSo I'm gonna say npm install --save-dev,\nbecause I don't need this in production,\n\n162\n00:09:53.569 --> 00:09:59.120\nthis is not something I'm gonna deploy\nwith, webpack-dev server, all right.\n\n163\n00:09:59.120 --> 00:10:02.350\nSo there's my save-dev and\nit's gonna download, and\n\n164\n00:10:02.350 --> 00:10:04.710\nnow I have to add a package.json script.\n\n165\n00:10:04.710 --> 00:10:08.630\nNow this is kind of a realistic\nprocess that I would go through\n\n166\n00:10:08.630 --> 00:10:11.960\nif I was learning something new\ntrying to build something like this.\n\n167\n00:10:11.960 --> 00:10:15.140\nHey I have this problem, let me solve it,\nI have this problem, let me solve it.\n\n168\n00:10:15.140 --> 00:10:18.800\nThat means I have to take a few detours,\nbut now I have context for\n\n169\n00:10:18.800 --> 00:10:21.794\nwhat I'm installing instead of\njust blindly installing it, right.\n\n170\n00:10:21.794 --> 00:10:24.191\nSo let's add a package.json,\n\n171\n00:10:24.191 --> 00:10:29.338\nwell this is now part of our dev\ndependencies so let's add a script and\n\n172\n00:10:29.338 --> 00:10:34.131\nlet's call that dev, right, so\nwe're in development mode and\n\n173\n00:10:34.131 --> 00:10:39.580\nthis is just webpack-dev-server and\nI'm just gonna run it like this.\n\n174\n00:10:39.580 --> 00:10:44.126\nNow that will rebundle using\nyour web pack config and\n\n175\n00:10:44.126 --> 00:10:48.473\nit will serve up\nthe information as index.html.\n\n176\n00:10:48.473 --> 00:10:53.751\nAnd we may run into some problems though\nbecause didn't we kinda hack this a little\n\n177\n00:10:53.751 --> 00:10:58.877\nbit, if we come into our dist folder we\nhard coded this index.html right here,\n\n178\n00:10:58.877 --> 00:11:03.335\nI suspect Zach, that we're probably\ngonna have to fix that as well.\n\n179\n00:11:04.605 --> 00:11:08.385\nWith more tooling comes more problems\nsometimes, but ultimately once you get it\n\n180\n00:11:08.385 --> 00:11:11.456\nironed out it makes you very fast\nin your development processes.\n\n181\n00:11:11.456 --> 00:11:14.765\nSo there's only one way to find out,\nand that's to test it out.\n\n182\n00:11:14.765 --> 00:11:18.297\nnpm run dev so I run, we're good to go,\n\n183\n00:11:18.297 --> 00:11:24.307\nit says it's serving on local host 8081,\nlet's go find out.\n\n184\n00:11:24.307 --> 00:11:29.036\nRefresh, okay it is serving and\nthere we go,\n\n185\n00:11:29.036 --> 00:11:33.393\nit's rebuilding also, let's go look,\n\n186\n00:11:33.393 --> 00:11:37.007\nit actually rebuilt all of these.\n\n187\n00:11:38.168 --> 00:11:42.253\n&gt;&gt; And we can just go to 8081\ninto the dist folder, and\n\n188\n00:11:42.253 --> 00:11:47.406\nsince our assets are being rebuilt\nthis index.html can still stay there,\n\n189\n00:11:47.406 --> 00:11:52.558\nwe can use the webpack-dev-server and\nnow we have two servers running and\n\n190\n00:11:52.558 --> 00:11:56.517\nthen we can communicate with\nthem to make sure they work.\n\n191\n00:11:56.517 --> 00:12:01.147\nI was worried we were gonna have to kinda\nfigure out that statically coded one but\n\n192\n00:12:01.147 --> 00:12:04.737\nwe figured out a way around it,\nwe may come back and fix that but\n\n193\n00:12:04.737 --> 00:12:06.211\nwe'll leave it for now.\n\n194\n00:12:06.211 --> 00:12:10.950\nAll right, so it works, I'll allow it.\n\n195\n00:12:10.950 --> 00:12:15.640\nSo we got both these servers running,\nthey have to be because one, the front end\n\n196\n00:12:15.640 --> 00:12:19.910\nclient on one is going to talk to\nthe back-end proxy on the other server,\n\n197\n00:12:19.910 --> 00:12:23.561\nthese are all running on my machine,\nnot on the Internet yet.\n\n198\n00:12:23.561 --> 00:12:30.370\nSo let's come to our app controller here\nand in this file let's just create a URL,\n\n199\n00:12:30.370 --> 00:12:35.800\nthis is temporary because ultimately\nwe're not going to look for\n\n200\n00:12:35.800 --> 00:12:38.580\nlocal host 8080/weather.\n\n201\n00:12:38.580 --> 00:12:40.565\nAnd let's do 0 comma 0,\n\n202\n00:12:40.565 --> 00:12:45.633\nwe're just gonna hard code that to\nmake sure that it in fact works.\n\n203\n00:12:45.633 --> 00:12:50.025\nSo $http.get(url) this is promise based so\n\n204\n00:12:50.025 --> 00:12:56.828\nthen if I get a response back,\nwhat do I want, let's just console.log,\n\n205\n00:12:56.828 --> 00:13:01.791\nthe response.data,\nI do love fat arrow functions.\n\n206\n00:13:01.791 --> 00:13:06.674\nAnd then catch, well that means\nI'm gonna have an error and\n\n207\n00:13:06.674 --> 00:13:11.947\nthen console.error, wow,\nthat duplicated a bunch of stuff,\n\n208\n00:13:11.947 --> 00:13:15.290\nconsole.error, the err, all right?\n\n209\n00:13:15.290 --> 00:13:19.990\nSo there we go,\nthat's kind of my chain here and, well,\n\n210\n00:13:19.990 --> 00:13:24.970\nit should of rebuilt and\nif I come over here notice that it\n\n211\n00:13:24.970 --> 00:13:30.100\ntold me I had a problem until I fixed it,\nand now it's rebuilding my assets.\n\n212\n00:13:30.100 --> 00:13:33.360\nAs the dev server's running it\ndoes incremental rebuilds, so\n\n213\n00:13:33.360 --> 00:13:36.210\nit's actually gonna be faster\nthan running full scale builds.\n\n214\n00:13:36.210 --> 00:13:40.410\nThere's some additional options with this\nthat we may employ later called the hot\n\n215\n00:13:40.410 --> 00:13:45.730\nreloading, and refreshing, and\nthings of that nature that may help us.\n\n216\n00:13:45.730 --> 00:13:50.030\nBut let's go ahead and\nrefresh and does it work?\n\n217\n00:13:51.490 --> 00:13:55.795\nI'm not entirely sure that\nit's working for us, so\n\n218\n00:13:55.795 --> 00:14:01.690\nthis.$http.get(url), hm,\n\n219\n00:14:01.690 --> 00:14:07.600\nif we refresh, I don't see it\nconsole.logging this new thing.\n\n220\n00:14:07.600 --> 00:14:11.490\nSo this incremental rebuild\nlooks like we had a hiccup, and\n\n221\n00:14:11.490 --> 00:14:13.990\nthis is something that\nhappens from time to time.\n\n222\n00:14:13.990 --> 00:14:19.731\nSo I'm going to force a full\nscale rebuild npm run build and\n\n223\n00:14:19.731 --> 00:14:22.319\nwait for it, wait for it.\n\n224\n00:14:22.319 --> 00:14:27.105\nAnd then npm run dev, so\nit does look like we're eventually gonna\n\n225\n00:14:27.105 --> 00:14:31.643\nhave to fix that just to get\nthings working again, all right.\n\n226\n00:14:31.643 --> 00:14:36.979\nSo boom, cross origin requests\nare only supported for\n\n227\n00:14:36.979 --> 00:14:42.640\nprotocol schemes ACDP local data chrome,\nsilly me.\n\n228\n00:14:42.640 --> 00:14:43.350\n&gt;&gt; Silly you.\n\n229\n00:14:43.350 --> 00:14:48.220\n&gt;&gt; I did not put HTTP there, so\nit doesn't know how to make said request.\n\n230\n00:14:48.220 --> 00:14:51.500\nDon't forget the HTTP,\neven though it's not shown in the browser\n\n231\n00:14:51.500 --> 00:14:53.930\nit's kind of implicit\nthat you can use that.\n\n232\n00:14:53.930 --> 00:14:58.860\nAnd if I'm not mistaken you can also add\nHTTPS and it kinda fakes it, all right.\n\n233\n00:14:58.860 --> 00:15:04.379\nSo that means we've gotta rebuild run dev,\nnot run dev excuse me,\n\n234\n00:15:04.379 --> 00:15:09.430\nnpm run build, wait for\n\n235\n00:15:09.430 --> 00:15:14.480\nit, wait for it, it's building, it's up,\ngood, and I'm gonna go ahead and run dev.\n\n236\n00:15:14.480 --> 00:15:19.317\nAnd I should be able to refresh,\nand it's still building so\n\n237\n00:15:19.317 --> 00:15:23.672\nanytime you refresh beforehand\nit takes a while and,\n\n238\n00:15:23.672 --> 00:15:29.703\nno access control allow origin header\nis present on requested resource.\n\n239\n00:15:31.817 --> 00:15:38.010\nWe built that proxy to get away from that\nand that's a problem, what happened?\n\n240\n00:15:38.010 --> 00:15:39.440\n&gt;&gt; What happened?\n\n241\n00:15:39.440 --> 00:15:43.806\n&gt;&gt; Well you know what,\nby default CORS is kinda\n\n242\n00:15:43.806 --> 00:15:48.292\nturned off in express\napplications as well.\n\n243\n00:15:48.292 --> 00:15:52.359\nSo our proxy is not quite\nwhere we need it to be and\n\n244\n00:15:52.359 --> 00:15:56.652\nwe wouldn't know that until\nwe got to this point.\n\n245\n00:15:56.652 --> 00:16:01.854\nSo Zach, we're gonna have to take a quick\ndetour back over to our proxy to just\n\n246\n00:16:01.854 --> 00:16:07.396\nmake sure that our app component works and\nthat is an unfortunate name of the game.\n\n247\n00:16:07.396 --> 00:16:14.080\nSo if I kill this and if I look, and I'm\njust gonna hop into VIM here real quick.\n\n248\n00:16:14.080 --> 00:16:14.620\nIf I look,\n\n249\n00:16:14.620 --> 00:16:18.480\nI have this server.use(logger('dev'))\nthat's the only middleware.\n\n250\n00:16:18.480 --> 00:16:23.558\nIf I were to come and inspect, there's\nactually a middleware called cors and\n\n251\n00:16:23.558 --> 00:16:28.270\nwhat it allows you to do is\nI can wire up the ability to\n\n252\n00:16:28.270 --> 00:16:31.690\nprovide access to cross\norigin resource sharing.\n\n253\n00:16:31.690 --> 00:16:34.850\nThat means if my domain names do not match\n\n254\n00:16:34.850 --> 00:16:36.960\nthen I should be able\nto interact with them.\n\n255\n00:16:38.320 --> 00:16:40.960\nWhere you wire this up is important.\n\n256\n00:16:40.960 --> 00:16:43.680\nNot that I've done this before,\nbut I have.\n\n257\n00:16:44.740 --> 00:16:51.020\nSo, if I look at index.js,\nif you were to put server.use that core's\n\n258\n00:16:51.020 --> 00:16:56.390\nmiddleware below weatherRouter, then,\nwell, you're gonna get weird behavior.\n\n259\n00:16:56.390 --> 00:16:59.760\nWe want to enable this globally\ninside of our application.\n\n260\n00:16:59.760 --> 00:17:06.936\nSo we're gonna say const\ncors = require( 'cors') and\n\n261\n00:17:06.936 --> 00:17:11.300\nthen server.use(cors()).\n\n262\n00:17:11.300 --> 00:17:13.540\nNow notice, it's a function call and\n\n263\n00:17:13.540 --> 00:17:17.320\nthat's because it's very similar\nto this logger middleware.\n\n264\n00:17:17.320 --> 00:17:20.640\nWhen I call the function, it actually\nreturns the middleware function.\n\n265\n00:17:20.640 --> 00:17:25.100\nAnd that's because, I can add\nadditional configuration options here,\n\n266\n00:17:25.100 --> 00:17:28.640\nlike who to white list,\nwho to allow access.\n\n267\n00:17:28.640 --> 00:17:32.840\nI can set particular heading types and\nthings of that nature.\n\n268\n00:17:32.840 --> 00:17:34.920\nSo I can do additional settings.\n\n269\n00:17:34.920 --> 00:17:37.030\nSo I've installed cors, I've got it up.\n\n270\n00:17:37.030 --> 00:17:39.440\nLet's see if that fixes my problem.\n\n271\n00:17:39.440 --> 00:17:42.140\nI'm really crossing my fingers,\nand hoping that it does.\n\n272\n00:17:42.140 --> 00:17:43.190\n&gt;&gt; I'm crossing my toes.\n\n273\n00:17:43.190 --> 00:17:47.560\n&gt;&gt; If I go back, this is still running so\nwe should be good.\n\n274\n00:17:47.560 --> 00:17:48.430\nHere we go.\n\n275\n00:17:48.430 --> 00:17:51.080\nRefresh and there we go.\n\n276\n00:17:51.080 --> 00:17:56.840\nWe now have weather information\ninside of our app component.\n\n277\n00:17:56.840 --> 00:18:00.400\nOur app component is now smart,\nready to go.\n\n278\n00:18:00.400 --> 00:18:01.810\nWhat do you think about that, Zach?\n\n279\n00:18:01.810 --> 00:18:03.211\n&gt;&gt; Seems like a lot.\n\n280\n00:18:03.211 --> 00:18:06.517\n[LAUGH] Is there another way to do that?\n\n281\n00:18:06.517 --> 00:18:10.528\n&gt;&gt; That does seem like a lot, and I think\nZach is in fact referencing the fact that\n\n282\n00:18:10.528 --> 00:18:14.250\nthere's a lot of information,\na lot of code just in this constructor.\n\n283\n00:18:14.250 --> 00:18:17.850\nI can tell off camera he's just like,\nI don't like,\n\n284\n00:18:17.850 --> 00:18:20.420\nleaves a bad taste in my mouth.\n\n285\n00:18:20.420 --> 00:18:23.290\nIt's like burnt asparagus, right?\n\n286\n00:18:23.290 --> 00:18:24.450\n&gt;&gt; Eating burnt linguine.\n\n287\n00:18:24.450 --> 00:18:26.360\n&gt;&gt; Yeah, ew, ew, yeah.\n\n288\n00:18:26.360 --> 00:18:28.420\nSo you're absolutely correct Zach but\n\n289\n00:18:29.700 --> 00:18:32.240\nthis should not all be inside\nthe controller constructor.\n\n290\n00:18:33.610 --> 00:18:36.470\nThis constructor should be\nconstructing the object.\n\n291\n00:18:36.470 --> 00:18:39.780\nAnd then the data getting part\n\n292\n00:18:39.780 --> 00:18:43.790\nin the Angular JS world could\nbe offset by a service.\n\n293\n00:18:43.790 --> 00:18:48.240\nBecause the service should be all about\nthis delegation of responsibilities.\n\n294\n00:18:48.240 --> 00:18:51.659\nIt would be nice if maybe we\nhad like a weather service.\n\n295\n00:18:51.659 --> 00:18:54.088\nBecause then if we wanted\nto add functionality,\n\n296\n00:18:54.088 --> 00:18:57.464\nwe don't have to come back and\ntrack it down in all the controllers,\n\n297\n00:18:57.464 --> 00:19:01.035\nwe'd just add it to the service then\nit becomes available everywhere.\n\n298\n00:19:01.035 --> 00:19:04.251\nBut I know we're not quite to\nthe limit on this episode but\n\n299\n00:19:04.251 --> 00:19:07.980\nbuilding that weather service\nmay take a little bit of time.\n\n300\n00:19:07.980 --> 00:19:11.790\nSo, maybe we should come back for\nanother episode to do that very thing.\n\n301\n00:19:11.790 --> 00:19:13.870\n&gt;&gt; Awesome.\nWell, building the app component,\n\n302\n00:19:13.870 --> 00:19:14.830\nthis has been part two.\n\n303\n00:19:14.830 --> 00:19:16.630\nThere was a part one,\nmake sure you see that.\n\n304\n00:19:16.630 --> 00:19:18.750\nAny last words before we move on?\n\n305\n00:19:18.750 --> 00:19:21.670\n&gt;&gt; Well, we have learned a few new\nsyntax for the AngularJS world.\n\n306\n00:19:21.670 --> 00:19:25.600\nWe are using some build tools to\nactually manage all of these and\n\n307\n00:19:25.600 --> 00:19:27.940\nwe did have to switch\ncontext to our back-end.\n\n308\n00:19:27.940 --> 00:19:32.178\nNow typically if you are on a team,\nthat maybe an interaction between\n\n309\n00:19:32.178 --> 00:19:36.943\nco-workers to have them fix it but\nknowing both areas is going to be helpful.\n\n310\n00:19:36.943 --> 00:19:40.160\nAnd if you're building it on your own,\nyou're gonna have to know both areas in\n\n311\n00:19:40.160 --> 00:19:43.280\norder to, what are we doing,\nyeah, I've gotta figure that out.\n\n312\n00:19:43.280 --> 00:19:46.110\nNow this application is\ngoing to grow in complexity,\n\n313\n00:19:46.110 --> 00:19:47.620\nparticularly on the Angular side.\n\n314\n00:19:48.750 --> 00:19:52.650\nThe proxy side is gonna hang out just for\na little while.\n\n315\n00:19:52.650 --> 00:19:55.300\nWe may come back and\nadd some additional features.\n\n316\n00:19:55.300 --> 00:19:56.872\nI don't know,\nmaybe we'll add some styling.\n\n317\n00:19:56.872 --> 00:20:02.890\nMaybe we'll add some additional\nshowy offy component type things and\n\n318\n00:20:02.890 --> 00:20:06.310\nmaybe we even offer the ability\ninstead of looking at by latitude and\n\n319\n00:20:06.310 --> 00:20:11.280\nlongitude, maybe we look up by location or\nwe try to auto detect your location.\n\n320\n00:20:11.280 --> 00:20:14.760\nSo I got a lot of plans in store, you\nshould definitely stay tuned to see, well,\n\n321\n00:20:14.760 --> 00:20:16.650\nwhere this ends up going.\n\n322\n00:20:16.650 --> 00:20:18.830\n&gt;&gt; Weather app with angular JS and\nExpress,\n\n323\n00:20:18.830 --> 00:20:21.490\nthere is a lot of video\ncontent in this series.\n\n324\n00:20:21.490 --> 00:20:24.550\nYou wanna make sure you watch every video,\nyou'll be glad you did.\n\n325\n00:20:24.550 --> 00:20:27.200\nAnd great job as usual Justin, awesome.\n\n326\n00:20:27.200 --> 00:20:28.750\nAnd thank you for watching DevProTV and\n\n327\n00:20:28.750 --> 00:20:31.710\nremember a good dev pro\nis always learning.\n\n328\n00:20:31.710 --> 00:20:32.690\nI'm Zach Memmis.\n\n329\n00:20:32.690 --> 00:20:33.590\n&gt;&gt; And I'm Justin Dennison.\n\n330\n00:20:33.590 --> 00:20:35.708\n&gt;&gt; And we will see you soon.\n\n331\n00:20:35.708 --> 00:20:40.330\n[MUSIC]\n\n",
          "vimeoId": "226733630"
        },
        {
          "description": "Justin and Zach discuss code in our App Component, Service vs. Not, use of Angular service, building the weather service, dependency injection portion, newer JavaScript vs. older Angular JS code, App Contoller, creating the ability to search, and styling.",
          "length": "1764",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-5-1-building_our_weather_service-072117-PGM.00_31_30_26.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-5-1-building_our_weather_service-072117-PGM.00_31_30_26.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-5-1-building_our_weather_service-072117-PGM.00_31_30_26.Still001-sm.jpg",
          "title": "Building our Weather Service",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.774 --> 00:00:15.479\nHello, and thank you for\nchoosing DevProTV,\n\n3\n00:00:15.479 --> 00:00:17.567\nhelping you learn wherever you go.\n\n4\n00:00:17.567 --> 00:00:19.442\nI'm your host, Zach Memos,\n\n5\n00:00:19.442 --> 00:00:23.428\nas we continue on with Weather App\nwith AngularJS and Express.\n\n6\n00:00:23.428 --> 00:00:26.540\nAnd we are gonna be building\nour weather service right now.\n\n7\n00:00:26.540 --> 00:00:30.240\nAnd the person who's gonna help us do that\nis the person who knows all about it,\n\n8\n00:00:30.240 --> 00:00:31.990\nJustin Dennison right here.\n\n9\n00:00:31.990 --> 00:00:33.620\nNice to see you Justin, how's it going?\n\n10\n00:00:33.620 --> 00:00:36.800\n&gt;&gt; It is going fantastic and\nit's good to see you as well.\n\n11\n00:00:36.800 --> 00:00:37.521\nHow are you today?\n\n12\n00:00:37.521 --> 00:00:38.735\n&gt;&gt; I'm doing wonderful, and\n\n13\n00:00:38.735 --> 00:00:42.238\nI'm very excited cuz we're gonna continue\non with building our weather app.\n\n14\n00:00:42.238 --> 00:00:47.050\nAnd in the last episodes, we realized that\na great deal of codes are app component,\n\n15\n00:00:47.050 --> 00:00:47.880\nright?\n\n16\n00:00:47.880 --> 00:00:52.802\nAnd you said that we needed to fix that,\nso what are we gonna do about that, eh?\n\n17\n00:00:52.802 --> 00:00:57.381\n&gt;&gt; We now need to address the fact\nthat we do have a fair amount of code.\n\n18\n00:00:57.381 --> 00:01:01.099\nAnd at this scale it's\nobviously not a whole lot.\n\n19\n00:01:01.099 --> 00:01:03.857\nBut it's almost nice to,\nI'm a big proponent of,\n\n20\n00:01:03.857 --> 00:01:05.945\ndon't build it if you don't need it.\n\n21\n00:01:05.945 --> 00:01:06.480\n&gt;&gt; Mm-hm.\n\n22\n00:01:06.480 --> 00:01:11.730\n&gt;&gt; But with the Angular ecosystem,\na lot of times this data management,\n\n23\n00:01:11.730 --> 00:01:16.670\nthis data getting and handling that\nis delegated to a service, okay?\n\n24\n00:01:18.420 --> 00:01:20.710\nRight now,\nit lives in our app component controller.\n\n25\n00:01:22.550 --> 00:01:23.090\nThat's not great.\n\n26\n00:01:23.090 --> 00:01:25.411\nIt would really be nice to\nhave it in a weather service.\n\n27\n00:01:25.411 --> 00:01:29.965\nAnd the main reason being is if we ever\nneeded to use it anywhere else in our app,\n\n28\n00:01:29.965 --> 00:01:33.760\nright, our app kinda grows,\nif we keep all of that information,\n\n29\n00:01:33.760 --> 00:01:38.383\nall of that code that actually reaches out\nto our proxy grabs the information and\n\n30\n00:01:38.383 --> 00:01:42.260\nbrings it back, well,\nit's gonna be hard to reuse that.\n\n31\n00:01:42.260 --> 00:01:45.718\nSo if we extract it to a service,\nwe should be good to go.\n\n32\n00:01:45.718 --> 00:01:52.928\nAnd well, by saying that, let's go ahead\nand take a look at what we had last time.\n\n33\n00:01:52.928 --> 00:01:55.413\n&gt;&gt; Yes.\n&gt;&gt; So let's take look at my screen here.\n\n34\n00:01:55.413 --> 00:02:01.630\nWell, I have my AppController open and\nhere's all that code I'm talking about.\n\n35\n00:02:01.630 --> 00:02:05.800\nI grab the http service,\nI assign it to the controller instance.\n\n36\n00:02:05.800 --> 00:02:10.736\nNow that is a little bit different\nthan when you used a function and\n\n37\n00:02:10.736 --> 00:02:15.135\nmainly because this is now\nneeded in order to be accessible\n\n38\n00:02:15.135 --> 00:02:19.740\nthrough other methods on this\nobject created by this class.\n\n39\n00:02:19.740 --> 00:02:24.371\nSo this $http.get, it grabs this\nURL which we've hardcoded for now.\n\n40\n00:02:24.371 --> 00:02:26.690\nIt's not necessarily the greatest thing.\n\n41\n00:02:26.690 --> 00:02:30.150\nAnd then we either\nconsole.log(reponse.data) or\n\n42\n00:02:30.150 --> 00:02:31.790\nwe catch the error.\n\n43\n00:02:32.850 --> 00:02:35.540\nIt doesn't look like a lot.\n\n44\n00:02:35.540 --> 00:02:37.570\nBut this only works in this controller.\n\n45\n00:02:37.570 --> 00:02:39.853\nWhat if I needed it in some\nother part of my application?\n\n46\n00:02:39.853 --> 00:02:41.233\nIt's here.\n\n47\n00:02:41.233 --> 00:02:43.371\n&gt;&gt; Mm-hm.\n&gt;&gt; And I either am forced to copy and\n\n48\n00:02:43.371 --> 00:02:45.960\npaste it,\nwhich I've seen a bunch of people do.\n\n49\n00:02:45.960 --> 00:02:49.810\nAnd I'm not saying that I haven't done it,\nand I have.\n\n50\n00:02:49.810 --> 00:02:51.010\nBut it's not recommended.\n\n51\n00:02:51.010 --> 00:02:53.518\nIt's hard to maintain, and\nnow you have multiple copies.\n\n52\n00:02:53.518 --> 00:02:59.483\nActually copying and pasting, the reason\nI'm such kind of an advisory of it is,\n\n53\n00:02:59.483 --> 00:03:02.481\nwell, it can propagate errors, okay?\n\n54\n00:03:02.481 --> 00:03:06.612\nSo if you copy and paste a lot and now you\nfound out that the original code had some\n\n55\n00:03:06.612 --> 00:03:09.439\nkind of logic error,\nyou gotta go fix it everywhere.\n\n56\n00:03:09.439 --> 00:03:12.200\nAnd maybe those have changed and\nit just becomes a mess.\n\n57\n00:03:12.200 --> 00:03:15.900\nSo it's almost like,\ndelegate this data getting,\n\n58\n00:03:15.900 --> 00:03:19.864\nthe data setting and\ndata manipulation, to a service.\n\n59\n00:03:19.864 --> 00:03:23.092\nAnd services can serve other,\nservices can serve.\n\n60\n00:03:23.092 --> 00:03:23.702\n&gt;&gt; Yeah.\n\n61\n00:03:23.702 --> 00:03:27.204\n&gt;&gt; Services can serve other purposes,\nbut typically I think of it as,\n\n62\n00:03:27.204 --> 00:03:29.114\nit's managing my data state for me.\n\n63\n00:03:29.114 --> 00:03:30.763\nI like to delegate it to those.\n\n64\n00:03:30.763 --> 00:03:33.062\nAnd that way,\nI can reuse that code everywhere, and\n\n65\n00:03:33.062 --> 00:03:35.056\nthat's just part of the architecture here.\n\n66\n00:03:35.056 --> 00:03:40.753\nAnd so we have that, and\nif we didn't use a service,\n\n67\n00:03:40.753 --> 00:03:45.040\nnow we could make this global, right?\n\n68\n00:03:45.040 --> 00:03:48.080\nWe could build a function or\nwe can inject another library or\n\n69\n00:03:48.080 --> 00:03:51.450\nwe could do something\ncrazy like use root scope.\n\n70\n00:03:51.450 --> 00:03:53.540\nWhich is like the global scope variable,\n\n71\n00:03:53.540 --> 00:03:57.150\nwhich actually I don't talk about that and\nanything else.\n\n72\n00:03:57.150 --> 00:03:59.220\nThis is the first time I've\never said anything about it.\n\n73\n00:04:00.680 --> 00:04:02.991\nAnd that's the reason being is, eh,\n\n74\n00:04:02.991 --> 00:04:07.990\nthere are very limited use cases for using\nthis kind of global Angular root scope.\n\n75\n00:04:07.990 --> 00:04:12.500\nNow I say that in quotes because it's in\nthe context of the Angular application or\n\n76\n00:04:12.500 --> 00:04:14.169\nthe Angular module, per se.\n\n77\n00:04:14.169 --> 00:04:15.800\nYou shouldn't use that.\n\n78\n00:04:15.800 --> 00:04:17.331\nYou shouldn't be trying\nto do those hacky things.\n\n79\n00:04:17.331 --> 00:04:21.507\nThere are better patterns that are more\nsustainable, more usable, and, well,\n\n80\n00:04:21.507 --> 00:04:23.700\nthat's ultimately what we're gonna do.\n\n81\n00:04:23.700 --> 00:04:25.930\n&gt;&gt; So we're gonna be a service.\n\n82\n00:04:25.930 --> 00:04:27.460\nSo what is next?\n\n83\n00:04:27.460 --> 00:04:32.720\n&gt;&gt; Well, I think the next part is let's\njust go ahead and build our service.\n\n84\n00:04:32.720 --> 00:04:35.830\nOne thing that I do\nwanna remind you of is,\n\n85\n00:04:35.830 --> 00:04:40.370\nif you've watched our intro to AngularJS\nseries in the library, and you really\n\n86\n00:04:40.370 --> 00:04:46.100\nshould if you have no idea what Angular\nis, I build services using functions.\n\n87\n00:04:46.100 --> 00:04:49.288\nI'm actually going to adapt\nthat to ES6/ES 2015 and\n\n88\n00:04:49.288 --> 00:04:52.672\nbuild the service a little bit\ndifferently to keep these newer\n\n89\n00:04:52.672 --> 00:04:56.660\nJavaScript features a little more\nconsistent throughout this series.\n\n90\n00:04:56.660 --> 00:05:01.091\nAnd that will help you migrate,\nif you so choose, from AngularJS,\n\n91\n00:05:01.091 --> 00:05:03.600\nor it's a nice learning experience.\n\n92\n00:05:03.600 --> 00:05:06.480\nI think it makes sense\nto me a little more.\n\n93\n00:05:06.480 --> 00:05:11.620\nI'm not saying it's idiomatic JavaScript,\nI'm not making any assertions about that.\n\n94\n00:05:11.620 --> 00:05:14.590\nBut that's what we're gonna do, okay?\n\n95\n00:05:14.590 --> 00:05:16.720\nAnd, well, now once we build that service,\n\n96\n00:05:16.720 --> 00:05:20.326\nwe can just dependency inject it into\nour other places and we're good to go.\n\n97\n00:05:20.326 --> 00:05:22.623\nSo let's go ahead and build that service.\n\n98\n00:05:22.623 --> 00:05:24.608\nYou're like,\nthat's enough yammering on, Justin.\n\n99\n00:05:24.608 --> 00:05:26.805\n&gt;&gt; Yammer, yammer.\n&gt;&gt; Let's go ahead and build that.\n\n100\n00:05:26.805 --> 00:05:30.085\nNow, the one thing that I do wanna\ntalk about as far as these services\n\n101\n00:05:30.085 --> 00:05:34.880\nare concerned, well, we have our\nsource file, we have a component,\n\n102\n00:05:34.880 --> 00:05:36.360\nand we have our app component.\n\n103\n00:05:37.580 --> 00:05:42.310\nI don't think this service actually\nmake sense to be anywhere else, right?\n\n104\n00:05:42.310 --> 00:05:45.280\nIt doesn't make sense to have it\nas part of the app component or\n\n105\n00:05:45.280 --> 00:05:49.750\npossibly any future components,\ncuz I might use it several places.\n\n106\n00:05:49.750 --> 00:05:55.430\nThis is where I deviate from some of the,\nthere are a lot of ways to do this.\n\n107\n00:05:55.430 --> 00:06:01.660\nWhat I typically do is build an external\nfolder outside of components called,\n\n108\n00:06:01.660 --> 00:06:03.550\nwait for it, services.\n\n109\n00:06:03.550 --> 00:06:06.520\nYeah, services and those are for\n\n110\n00:06:06.520 --> 00:06:10.050\nthe general services that I\nuse all over the application.\n\n111\n00:06:10.050 --> 00:06:15.850\nNot necessarily services that are meant\nto help a particular component, okay?\n\n112\n00:06:15.850 --> 00:06:18.879\nSo these are more app-level services.\n\n113\n00:06:18.879 --> 00:06:21.260\nSo I'm gonna come into source and\nI'm gonna create a new folder.\n\n114\n00:06:22.460 --> 00:06:26.204\nAnd we're gonna call it,\nwell, services and\n\n115\n00:06:26.204 --> 00:06:29.477\ninside of there, what is it going to be?\n\n116\n00:06:29.477 --> 00:06:33.381\nIt's actually gonna be wired\nup as a service in main.js.\n\n117\n00:06:33.381 --> 00:06:39.380\nHowever, I'm gonna create a file\ncalled weather.service.js.\n\n118\n00:06:39.380 --> 00:06:41.530\nNow again, that is a little bit redundant.\n\n119\n00:06:41.530 --> 00:06:43.600\nYou don't have to that.\n\n120\n00:06:43.600 --> 00:06:45.020\nI find it clearer to me.\n\n121\n00:06:45.020 --> 00:06:46.400\nIf it's not clearer to you,\n\n122\n00:06:46.400 --> 00:06:49.820\nthen definitely remove that service\nbecause it's in the Services folder.\n\n123\n00:06:49.820 --> 00:06:54.350\nBut I like that little bit of\nredundancy in that capacity,\n\n124\n00:06:54.350 --> 00:06:56.410\ncuz it reminds, hey, this is a service.\n\n125\n00:06:56.410 --> 00:07:02.872\nAlso, being part of the file name,\nif I'm ever in a situation where I have to\n\n126\n00:07:02.872 --> 00:07:08.028\nimport it, require it, and\nI don't see the folder name, right?\n\n127\n00:07:08.028 --> 00:07:12.400\nThen having weather.service,\nyou're like, that's the weather service.\n\n128\n00:07:12.400 --> 00:07:17.490\nNot the weather controller, the whatever\nit might be, the weather who knows, right?\n\n129\n00:07:17.490 --> 00:07:19.110\nSo I like being clear about that.\n\n130\n00:07:20.310 --> 00:07:22.300\nSo how are we gonna build this?\n\n131\n00:07:22.300 --> 00:07:26.940\nWell, it's actually gonna be a class,\nand we're just gonna say WeatherService.\n\n132\n00:07:26.940 --> 00:07:30.550\nNow there are some individuals,\nand I'm not saying they're wrong,\n\n133\n00:07:30.550 --> 00:07:34.400\nthat say, hey,\njust leave off the Service part.\n\n134\n00:07:34.400 --> 00:07:35.401\nThat's perfectly fine.\n\n135\n00:07:35.401 --> 00:07:40.080\nI'm gonna write it just for\nclarity in this capacity.\n\n136\n00:07:40.080 --> 00:07:43.716\nYou don't have to say Service here,\nand you're more than welcome to.\n\n137\n00:07:43.716 --> 00:07:50.900\nWaetherService as the class, we can\nadd a static attribute called inject.\n\n138\n00:07:50.900 --> 00:07:54.989\nAnd, well, that's our set up dependencies\nbecause we are minifying this information.\n\n139\n00:07:54.989 --> 00:07:59.829\nAnd I know that I'm gonna use\nthe $http Angular service in order to\n\n140\n00:07:59.829 --> 00:08:02.000\nbuild said weather service.\n\n141\n00:08:02.000 --> 00:08:10.060\nSo module.exports =\nWeatherService; like so.\n\n142\n00:08:10.060 --> 00:08:15.471\nSo there we go, and now,\nwell what do I need?\n\n143\n00:08:15.471 --> 00:08:16.570\nLet's create a constructor.\n\n144\n00:08:18.170 --> 00:08:22.780\nOur constructor is gonna be how\nthese services is generated, right?\n\n145\n00:08:22.780 --> 00:08:25.790\nAnd, all of this is gonna\nbe the $http service.\n\n146\n00:08:25.790 --> 00:08:29.785\nAnd on our construction,\nall we're gonna do is say,\n\n147\n00:08:29.785 --> 00:08:34.660\nthis.$http = $http, okay?\n\n148\n00:08:34.660 --> 00:08:36.320\nSo that's a construction.\n\n149\n00:08:36.320 --> 00:08:38.999\nWe're essentially setting\nproperties up here.\n\n150\n00:08:38.999 --> 00:08:42.190\nNow we're gonna write additional\nmethods in order to get this working.\n\n151\n00:08:42.190 --> 00:08:45.867\nBefore we do, we just want to make sure\nthat it constructs, it works before we\n\n152\n00:08:45.867 --> 00:08:48.981\nworry about any of the other methods\nbecause if we just go ahead and\n\n153\n00:08:48.981 --> 00:08:51.699\ntry to fill everything out and\nthere's other problems,\n\n154\n00:08:51.699 --> 00:08:53.367\nthen that's going to be an issue.\n\n155\n00:08:53.367 --> 00:08:55.250\nSo I like to check it just\nwith the bare minimum.\n\n156\n00:08:56.510 --> 00:08:58.200\nSo I have module.exports.\n\n157\n00:08:58.200 --> 00:09:01.600\nThere's my dependency injection,\nthere's my constructor, and\n\n158\n00:09:01.600 --> 00:09:05.130\nnow I'm going to come back to main.js and\nI'm going to bring in that service.\n\n159\n00:09:05.130 --> 00:09:07.370\nSo now I'm gonna do some comments here.\n\n160\n00:09:07.370 --> 00:09:12.496\nHere's my components imports and\nhere's my services.\n\n161\n00:09:12.496 --> 00:09:15.517\nOkay, so services.\n\n162\n00:09:15.517 --> 00:09:21.180\nconst WeatherService = require.\n\n163\n00:09:21.180 --> 00:09:25.310\nAnd then the question is,\nhow do I get there from here?\n\n164\n00:09:25.310 --> 00:09:31.299\nWell, it's inside the services folder and\nit is called Weather service.\n\n165\n00:09:31.299 --> 00:09:32.950\nKeep wanting to type server for\n\n166\n00:09:32.950 --> 00:09:36.170\nsome reason,\nI really want to type the word server.\n\n167\n00:09:36.170 --> 00:09:37.320\nSo there it is.\n\n168\n00:09:37.320 --> 00:09:40.940\nAnd then I do get some leeway\non how I wire these up.\n\n169\n00:09:42.120 --> 00:09:47.430\nBut my recommendation is if I'm\nusing this linear chained approach,\n\n170\n00:09:47.430 --> 00:09:50.240\nall of your services should\nbe wired up together.\n\n171\n00:09:50.240 --> 00:09:53.070\nAll of your components should be\nwired up together and anything else,\n\n172\n00:09:53.070 --> 00:09:56.910\nyou should group them by what they are,\nand not have like service component,\n\n173\n00:09:56.910 --> 00:10:00.990\nservice component, service component,\ncontroller, things like that, okay?\n\n174\n00:10:00.990 --> 00:10:06.747\nAnd you'll see me do that and you don't\nhave to, I do recommend it though.\n\n175\n00:10:06.747 --> 00:10:10.290\nNow there are a couple of\nways of building a service.\n\n176\n00:10:10.290 --> 00:10:14.742\nAnd I'm gonna call this weather\nnot WeatherService the name.\n\n177\n00:10:14.742 --> 00:10:18.740\nThe actual thing is the class\nis weather service.\n\n178\n00:10:18.740 --> 00:10:23.820\nBut I'm gonna use the service keyword, or\nexcuse me service method to register this,\n\n179\n00:10:23.820 --> 00:10:28.480\nbecause since I've built a class it is\ngoing to be used with the new keyword.\n\n180\n00:10:28.480 --> 00:10:32.200\nNow in our intro to Angular JS\nseries we talked about factories and\n\n181\n00:10:32.200 --> 00:10:33.570\nservices, those are not [INAUDIBLE],\n\n182\n00:10:33.570 --> 00:10:36.660\nthere's actually a couple of other\nways but those are two common ways.\n\n183\n00:10:36.660 --> 00:10:41.460\nIf you write an ES6, ES2015 class,\nyou need to use the service because\n\n184\n00:10:41.460 --> 00:10:46.740\nbehind the scenes Angular calls the new\nkeyword to construct the service object.\n\n185\n00:10:46.740 --> 00:10:49.950\nSo, necessary if I use factory and\ngets weird.\n\n186\n00:10:49.950 --> 00:10:51.740\nI could do some crazy stuff and\n\n187\n00:10:51.740 --> 00:10:55.620\nmake it work with that factory\nuse the dot service method.\n\n188\n00:10:55.620 --> 00:10:56.710\nSo this is all wired up.\n\n189\n00:10:56.710 --> 00:11:00.941\nAnd now if I'm come back\nto my app controller,\n\n190\n00:11:00.941 --> 00:11:06.160\nlet's just list this is\ndependency right after $http.\n\n191\n00:11:06.160 --> 00:11:08.422\nAnd we're gonna leave there,\nwe're not trying to break anything else.\n\n192\n00:11:08.422 --> 00:11:10.770\nWe're not doing any changes yet.\n\n193\n00:11:10.770 --> 00:11:15.080\nWe just want to see if it gets\ninjected as we anticipate it to.\n\n194\n00:11:15.080 --> 00:11:18.540\nSo console.log, weather.\n\n195\n00:11:19.720 --> 00:11:21.850\nSo I'm just calling it weather.\n\n196\n00:11:21.850 --> 00:11:22.930\nYou can call it whatever you want.\n\n197\n00:11:22.930 --> 00:11:23.860\nYou can call it.\n\n198\n00:11:23.860 --> 00:11:24.690\n&gt;&gt; Bob.\n\n199\n00:11:24.690 --> 00:11:25.393\n&gt;&gt; Bob, yeah.\n\n200\n00:11:25.393 --> 00:11:28.125\nYou can definitely call it Bob,\nyou can give all your services name.\n\n201\n00:11:28.125 --> 00:11:32.200\nHowever, I know that if it's injected\ninto a controller, it's a service.\n\n202\n00:11:32.200 --> 00:11:34.394\nIf it says weather,\nI wonder what it's gonna do.\n\n203\n00:11:34.394 --> 00:11:37.073\nIt's probably managing\nthings about the weather.\n\n204\n00:11:37.073 --> 00:11:39.720\nAnd in the context of this app,\nthat makes sense.\n\n205\n00:11:39.720 --> 00:11:44.280\nSo let's go check out, I haven't\nactually touched any of the servers\n\n206\n00:11:44.280 --> 00:11:48.279\nthat we're running since\nour last foray into this.\n\n207\n00:11:49.700 --> 00:11:53.360\nSo, if we come over here,\nhere is our proxy server.\n\n208\n00:11:53.360 --> 00:11:54.720\nIt's still running.\n\n209\n00:11:54.720 --> 00:11:57.840\nAnd then here, I lied, it actually died.\n\n210\n00:11:58.920 --> 00:12:04.960\nSo npm run dev, and\nthat's going to rebuild my webpack\n\n211\n00:12:06.140 --> 00:12:10.280\nexport and\ncreate a server at local host 8081.\n\n212\n00:12:10.280 --> 00:12:14.055\nSo let's come over here\nlocal host 8081 and\n\n213\n00:12:14.055 --> 00:12:19.160\nthere's this and\nthere's our log and we're getting\n\n214\n00:12:19.160 --> 00:12:23.590\ninto some weirdness where we have some\ncache-ing so I'm gonna have to run build.\n\n215\n00:12:25.730 --> 00:12:29.170\nAnd then, go ahead and rerun dev.\n\n216\n00:12:29.170 --> 00:12:31.580\nNow, that's something we're\nultimately gonna fix,\n\n217\n00:12:31.580 --> 00:12:34.270\nwe're just working with it for now.\n\n218\n00:12:34.270 --> 00:12:38.610\nAnd then let's go ahead and run dev,\nand that's gonna start our server,\n\n219\n00:12:38.610 --> 00:12:44.890\nbecause it was doing some weird caching\nand now it's trying to recompile again.\n\n220\n00:12:44.890 --> 00:12:45.684\nThere we go.\n\n221\n00:12:45.684 --> 00:12:50.640\nAnd notice that says $http, why is that?\n\n222\n00:12:50.640 --> 00:12:53.100\nThat's because that was injected\ninto the weather service.\n\n223\n00:12:53.100 --> 00:12:54.794\nNotice this says t.\n\n224\n00:12:54.794 --> 00:12:56.320\nWhy does that say t?\n\n225\n00:12:56.320 --> 00:12:59.390\nWell, this is the minified\nversion of our service code.\n\n226\n00:12:59.390 --> 00:13:01.860\nSo it doesn't have\nthe weather service name.\n\n227\n00:13:01.860 --> 00:13:03.389\nIt's not a weather service object.\n\n228\n00:13:03.389 --> 00:13:06.680\nIt's a t object because\nit has been minified.\n\n229\n00:13:06.680 --> 00:13:08.680\nThat's why use that dollar sign inject.\n\n230\n00:13:08.680 --> 00:13:13.720\nBut now that we know it's in there, well,\nwe've technically written our service.\n\n231\n00:13:13.720 --> 00:13:16.700\n&gt;&gt; So you said that we were\nusing the newer JavaScript.\n\n232\n00:13:16.700 --> 00:13:22.340\nWill that cause issues if I'm\nreading older AngularJS code?\n\n233\n00:13:22.340 --> 00:13:23.699\nI mean is that gonna be a problem?\n\n234\n00:13:23.699 --> 00:13:27.119\n&gt;&gt; So that would not necessarily be\na problem in building this project, but\n\n235\n00:13:27.119 --> 00:13:28.980\nthat is a very good point.\n\n236\n00:13:28.980 --> 00:13:32.060\nThis is kind of a quick aside before\nwe come back to our application.\n\n237\n00:13:32.060 --> 00:13:32.680\n&gt;&gt; Quick aside!\n\n238\n00:13:32.680 --> 00:13:35.020\n&gt;&gt; That is something that\nwe do need to realize.\n\n239\n00:13:35.020 --> 00:13:39.270\nThe older code or\nsome even people who are writing code now,\n\n240\n00:13:39.270 --> 00:13:42.030\nyou'll learning that's fine and\nI've taught it that way.\n\n241\n00:13:42.030 --> 00:13:45.530\nI still write code that way if I\nneed to create something quickly.\n\n242\n00:13:45.530 --> 00:13:48.572\nKeep in mind that those are typically\nfunction driven, right?\n\n243\n00:13:48.572 --> 00:13:51.159\nAnd building a function that\nconstructs an object or\n\n244\n00:13:51.159 --> 00:13:53.629\nreturns an object are controllers or\nfunctions,\n\n245\n00:13:53.629 --> 00:13:57.640\neverything is a function essentially,\nnot everything but essentially.\n\n246\n00:13:57.640 --> 00:14:01.952\nAnd then I attach functions inside\nof that function because most,\n\n247\n00:14:01.952 --> 00:14:04.571\nmy controller and service and factory,\n\n248\n00:14:04.571 --> 00:14:09.052\nthey're either gonna be creating\na new object with the new keyword.\n\n249\n00:14:09.052 --> 00:14:13.301\nOr they're gonna be returning an object\nthat exposes that public API.\n\n250\n00:14:13.301 --> 00:14:18.340\nNow, what that means is you're not\ngoing to see the class portion as much.\n\n251\n00:14:18.340 --> 00:14:23.470\nIn addition to you, you may see this\nkind of global state everywhere.\n\n252\n00:14:23.470 --> 00:14:27.230\nAnd you're wiring up your application\na little bit differently using the Angular\n\n253\n00:14:27.230 --> 00:14:31.490\nmodule system instead of the NPM,\nor common JS module system,\n\n254\n00:14:31.490 --> 00:14:36.200\nexcuse me the common JS module system that\nwe're using here in addition to webpack.\n\n255\n00:14:36.200 --> 00:14:41.520\nSo it won't cause any issues with\nbeing able to write code like this.\n\n256\n00:14:41.520 --> 00:14:44.950\nBut it may just be aware of that if you go\nto read code, you're trying to figure out\n\n257\n00:14:44.950 --> 00:14:48.180\nsomething, somethings broken,\nyou may just see something different.\n\n258\n00:14:48.180 --> 00:14:53.350\nIf it's a service, a factory function or a\ncontroller, if it's written as a factory,\n\n259\n00:14:53.350 --> 00:14:57.330\nyou can make it work as a class\nwith these new features.\n\n260\n00:14:58.670 --> 00:15:02.037\nThere essentially equivalent, by the way.\n\n261\n00:15:02.037 --> 00:15:04.748\nJust be aware that you're gonna have\nto make the translation for yourself.\n\n262\n00:15:04.748 --> 00:15:07.118\nWhy don't we someone ask someone that can?\n\n263\n00:15:07.118 --> 00:15:08.340\n&gt;&gt; Well, very cool.\n\n264\n00:15:08.340 --> 00:15:10.895\nSo we have a Windows service, right?\n\n265\n00:15:10.895 --> 00:15:11.948\n&gt;&gt; Mm-hm.\n\n266\n00:15:11.948 --> 00:15:14.526\n&gt;&gt; Does that mean that our app is back\nto where it was when we started this\n\n267\n00:15:14.526 --> 00:15:15.420\nwhole thing?\n\n268\n00:15:15.420 --> 00:15:17.600\n&gt;&gt; Well, to some extent it is, right?\n\n269\n00:15:17.600 --> 00:15:19.180\nWe haven't touched any of the other code.\n\n270\n00:15:19.180 --> 00:15:19.690\n&gt;&gt; It is.\n\n271\n00:15:19.690 --> 00:15:22.238\n&gt;&gt; We haven't touched\nany of the other code.\n\n272\n00:15:22.238 --> 00:15:25.610\n&gt;&gt; [LAUGH]\n&gt;&gt; [LAUGH] You are a silly man, Zach.\n\n273\n00:15:25.610 --> 00:15:26.903\n&gt;&gt; I'm sorry.\n\n274\n00:15:26.903 --> 00:15:28.070\n&gt;&gt; We haven't touched\nany of the other code.\n\n275\n00:15:28.070 --> 00:15:32.120\nWhich means that we need to fix that.\n\n276\n00:15:32.120 --> 00:15:34.270\nWe still have a lot of code\nin our app controller.\n\n277\n00:15:34.270 --> 00:15:36.166\nSo we should probably fix that.\n\n278\n00:15:36.166 --> 00:15:40.164\nAnd then I think that might\nbring our app back to.\n\n279\n00:15:40.164 --> 00:15:42.418\nWell, it still technically works.\n\n280\n00:15:42.418 --> 00:15:44.474\nIt's still getting information.\n\n281\n00:15:44.474 --> 00:15:49.010\nBut bring it back to, I state, and\nmaybe a little bit beyond that.\n\n282\n00:15:49.010 --> 00:15:52.140\nBut take out that dollar sign\nHTTP code from the controller and\n\n283\n00:15:52.140 --> 00:15:53.410\ndelegate that to the service.\n\n284\n00:15:53.410 --> 00:15:57.023\nSo let's go ahead and\ntake a look at my screen here.\n\n285\n00:15:57.023 --> 00:16:00.780\nAnd here we go, here's our AppController.\n\n286\n00:16:00.780 --> 00:16:02.651\nLet's get rid of this console.log, And\n\n287\n00:16:02.651 --> 00:16:04.850\nas a matter of fact let's\nget rid of this $http.\n\n288\n00:16:04.850 --> 00:16:09.354\nNow because we have this two lists of\ndependencies we have to keep track of both\n\n289\n00:16:09.354 --> 00:16:13.999\nof those, I know that's not ideal and\nwe could automate that but again I didn't\n\n290\n00:16:13.999 --> 00:16:18.960\nwanna innovate you with tooling that is\nkinda hard to maintain in and of itself.\n\n291\n00:16:18.960 --> 00:16:22.580\nAs you can see our tooling's\nbeing a little iffy and\n\n292\n00:16:22.580 --> 00:16:24.705\nwe might have some time here to fix that.\n\n293\n00:16:24.705 --> 00:16:26.120\n&gt;&gt; Mm-hm.\n&gt;&gt; And hopefully try to fix that.\n\n294\n00:16:26.120 --> 00:16:29.860\n&gt;&gt; Live action debugging coming up\n&gt;&gt; Don't jinx me Zach!\n\n295\n00:16:29.860 --> 00:16:32.080\n&gt;&gt; No!\n&gt;&gt; Zach is like, you're gonna break it,\n\n296\n00:16:32.080 --> 00:16:33.950\nyou're gonna break it good.\n\n297\n00:16:33.950 --> 00:16:35.360\n&gt;&gt; No, no, hopefully we don't break it.\n\n298\n00:16:35.360 --> 00:16:36.220\n&gt;&gt; No.\n&gt;&gt; But we might.\n\n299\n00:16:36.220 --> 00:16:37.140\n&gt;&gt; We won't.\n&gt;&gt; And\n\n300\n00:16:37.140 --> 00:16:40.570\nif we do then we'll just do some live\naction debugging, as we always do.\n\n301\n00:16:40.570 --> 00:16:41.470\n&gt;&gt; Right.\n&gt;&gt; So\n\n302\n00:16:41.470 --> 00:16:43.510\nif we're back here in our AppController.\n\n303\n00:16:44.530 --> 00:16:45.050\nI do get the $http.\n\n304\n00:16:45.050 --> 00:16:50.410\nAnd if that's the case,\nthen none of this works any more, okay?\n\n305\n00:16:50.410 --> 00:16:55.240\nNow, the question is,\nsince I have this controller and\n\n306\n00:16:55.240 --> 00:16:57.810\nI have this weather service right?\n\n307\n00:16:59.470 --> 00:17:03.270\nShould I attach it as\nthis.weather equals weather,\n\n308\n00:17:03.270 --> 00:17:08.870\njust like I did with the $http method, or\nshould I just use it in the constructor,\n\n309\n00:17:08.870 --> 00:17:11.930\nand well that's a very\nvalid question to ask.\n\n310\n00:17:11.930 --> 00:17:15.970\nWe're gonna keep it fairly close\nto what it was originally.\n\n311\n00:17:15.970 --> 00:17:19.190\nWe're just gonna say\nthis.weather equals weather.\n\n312\n00:17:19.190 --> 00:17:23.200\nAnd then just like we did\nwith dollar sign HTTP.\n\n313\n00:17:23.200 --> 00:17:27.550\nNow, we kind of got off topic there and\nI lost my train of thought.\n\n314\n00:17:27.550 --> 00:17:29.130\nThe two things of dependencies.\n\n315\n00:17:29.130 --> 00:17:30.320\nWe removed it here.\n\n316\n00:17:30.320 --> 00:17:34.420\nYou also have to remove it from this\ndollar sign inject dependency list so\n\n317\n00:17:34.420 --> 00:17:38.380\nwe remove that, we're good to go and\nthis should work.\n\n318\n00:17:38.380 --> 00:17:42.980\nNow, since I don't have $http anymore,\nI'm just gonna change this to weather.\n\n319\n00:17:44.820 --> 00:17:47.120\nThis actually makes a little\nmore sense now right.\n\n320\n00:17:48.970 --> 00:17:52.820\nThis.weather equals\nwhether this.weather.get.\n\n321\n00:17:52.820 --> 00:17:53.860\nWhat does that mean?\n\n322\n00:17:53.860 --> 00:17:55.402\nWell, you're getting the weather.\n\n323\n00:17:57.405 --> 00:17:58.900\nLet's see if it works though.\n\n324\n00:17:58.900 --> 00:18:03.760\nLet's go ahead and build this and\nsee if we're back to that portion.\n\n325\n00:18:03.760 --> 00:18:08.100\nI'm gonna refresh and\nsee how we're getting that.\n\n326\n00:18:08.100 --> 00:18:11.030\nIt's not quite rebundling everything.\n\n327\n00:18:11.030 --> 00:18:15.930\nSo, we're gonna rebuild and wait for\nit, wait for it, wait for it,\n\n328\n00:18:15.930 --> 00:18:20.310\nand then we're going to run dev again and\nwe're forcing that rebuild that's because\n\n329\n00:18:20.310 --> 00:18:24.800\nit's not watching appropriately because\nof some craziness but we'll fix that.\n\n330\n00:18:24.800 --> 00:18:26.140\n&gt;&gt; Shenanigans.\n\n331\n00:18:26.140 --> 00:18:28.010\n&gt;&gt; Soon.\nYour like you keep promising that but\n\n332\n00:18:28.010 --> 00:18:30.060\nI don't know if your going to deliver.\n\n333\n00:18:30.060 --> 00:18:32.200\nNotice my ad broke, no Zach, no.\n\n334\n00:18:33.230 --> 00:18:34.610\nYou jinxed me.\n\n335\n00:18:34.610 --> 00:18:37.320\nI'm joking I knew this\nwas going to happen.\n\n336\n00:18:37.320 --> 00:18:38.300\n&gt;&gt; You said that.\n\n337\n00:18:38.300 --> 00:18:42.020\n&gt;&gt; So how are we going to fix this?\n\n338\n00:18:42.020 --> 00:18:44.570\n&gt;&gt; Columbo.\n&gt;&gt; I am Columbo, I need a pipe and\n\n339\n00:18:44.570 --> 00:18:45.840\nan overjacket.\n\n340\n00:18:45.840 --> 00:18:46.930\n&gt;&gt; You do.\n\n341\n00:18:46.930 --> 00:18:51.170\n&gt;&gt; Well this happened because\nI just used this $HTTP but\n\n342\n00:18:51.170 --> 00:18:54.440\nit is not the $HTTP Service.\n\n343\n00:18:54.440 --> 00:18:57.880\nThe Weather Service actually\ndoesn't have any methods on it.\n\n344\n00:18:57.880 --> 00:19:00.690\nSo when I call .get it\nsays it's not a function.\n\n345\n00:19:01.730 --> 00:19:02.860\nYour absolutely correct.\n\n346\n00:19:02.860 --> 00:19:04.920\nI am sorry did I mess that up.\n\n347\n00:19:04.920 --> 00:19:06.250\nIt's not a function.\n\n348\n00:19:06.250 --> 00:19:09.030\nAnd the reason it's not\na function is because that method\n\n349\n00:19:09.030 --> 00:19:10.750\ndoes not exist in our weather service.\n\n350\n00:19:10.750 --> 00:19:12.340\nSo we have to write that method.\n\n351\n00:19:12.340 --> 00:19:16.020\nWhat that means is we do have to do\na little bit of refactoring here.\n\n352\n00:19:16.020 --> 00:19:21.070\nNotice this URL,\nthis URL needs to come out and\n\n353\n00:19:21.070 --> 00:19:23.800\ngo into the service because it's\napplicable just to the service.\n\n354\n00:19:24.820 --> 00:19:26.720\nSo let's go ahead and grab that.\n\n355\n00:19:26.720 --> 00:19:31.160\nAnd coming over to our weather service,\nand I'm gonna put this internalus module,\n\n356\n00:19:31.160 --> 00:19:35.410\nnotice it's not necessarily in the class,\nI wanna put this internalus module,\n\n357\n00:19:35.410 --> 00:19:39.080\ncuz I don't need this URL anywhere else,\nokay.\n\n358\n00:19:39.080 --> 00:19:45.460\nAnd then I may have to rename that\nlikewise when I get the weather.\n\n359\n00:19:47.250 --> 00:19:51.420\nAm I going to be passing the URL or\n\n360\n00:19:51.420 --> 00:19:55.770\ndo I really wanna say get me the weather\nfor this latitude and longitude?\n\n361\n00:19:55.770 --> 00:19:56.830\nI think that's more applicable.\n\n362\n00:19:56.830 --> 00:19:59.800\nThat's probably more of a use\ncase that you would have.\n\n363\n00:20:01.170 --> 00:20:05.900\nIn regards to how you interact with the\nservice, here's a latitude and longitude.\n\n364\n00:20:05.900 --> 00:20:09.960\nThat's actually the only information\nI need to find the weather for\n\n365\n00:20:09.960 --> 00:20:12.820\ndifferent locations on the planet.\n\n366\n00:20:12.820 --> 00:20:16.450\nAs a result, our get method\nis not gonna take the URL but\n\n367\n00:20:16.450 --> 00:20:19.710\ninstead a latitude and\nlongitude that is requested and\n\n368\n00:20:19.710 --> 00:20:22.290\nthen go look up the weather for\nthat and return that.\n\n369\n00:20:22.290 --> 00:20:23.850\nSo we need to write that method,\n\n370\n00:20:23.850 --> 00:20:27.420\nand there was a little more work\nhere than I anticipated, Zach.\n\n371\n00:20:27.420 --> 00:20:30.020\nAnd he's enjoying every minute of it.\n\n372\n00:20:30.020 --> 00:20:30.870\n&gt;&gt; I am.\n\n373\n00:20:30.870 --> 00:20:34.310\n&gt;&gt; So here let's just go ahead and\nbuild this API like I want to so\n\n374\n00:20:34.310 --> 00:20:37.880\nlat, lon and let's just say\n\n375\n00:20:38.980 --> 00:20:43.450\ninternally these will not be available\nthroughout all of the app controller.\n\n376\n00:20:43.450 --> 00:20:46.210\nThese are just scoped locally.\n\n377\n00:20:46.210 --> 00:20:50.710\nSo, that lon 0 just to be explicit,\nI'm gonna pass in 00 I should\n\n378\n00:20:50.710 --> 00:20:55.680\nget the same exact same answer as I\nwould originally but now I'm saying give\n\n379\n00:20:55.680 --> 00:21:01.010\nme the latitude and longitude weather,\njust give me some weather somewhere.\n\n380\n00:21:01.010 --> 00:21:03.340\nAnd then there's,\nit's kind of ambiguous for\n\n381\n00:21:03.340 --> 00:21:06.350\nas your giving your URL you\nalways have to mess with the URL.\n\n382\n00:21:06.350 --> 00:21:09.670\nThis is a nicer API so\nI'm gonna stick with this.\n\n383\n00:21:09.670 --> 00:21:12.880\nAll right, so we're gonna come over\nto weather service and as result,\n\n384\n00:21:12.880 --> 00:21:17.770\nI think this should not be called url but\ninstead base.\n\n385\n00:21:17.770 --> 00:21:21.710\nCuz I'm gonna removed the latitude and\nlongitude portion of this.\n\n386\n00:21:21.710 --> 00:21:22.210\nJust like that.\n\n387\n00:21:23.450 --> 00:21:28.340\nOkay, so I remove that and\nnow that is bare minimum and\n\n388\n00:21:28.340 --> 00:21:32.410\nI'm going to construct the other\nURLs based on this one.\n\n389\n00:21:32.410 --> 00:21:37.280\nSo it's gonna be latitude, longitude and,\nsince we have new JavaScript features,\n\n390\n00:21:37.280 --> 00:21:40.090\nwe can use templating\nstrings to do that easily and\n\n391\n00:21:40.090 --> 00:21:42.500\nreflect the pattern more appropriately.\n\n392\n00:21:42.500 --> 00:21:46.160\nLastly, I do want to remove this slash.\n\n393\n00:21:46.160 --> 00:21:49.520\nAnd that is just kind of a personal\npreference at this time because it's gonna\n\n394\n00:21:49.520 --> 00:21:52.300\nbe a little clearer when we\nconstruct the other URLs.\n\n395\n00:21:52.300 --> 00:21:54.210\nYou don't have to,\nyou just have to account for it.\n\n396\n00:21:55.990 --> 00:21:59.850\nWith that said, let's go ahead and\nI'm gonna create a get method.\n\n397\n00:21:59.850 --> 00:22:04.600\nIt's gonna take a lat and a lon,\nand what is it going to do?\n\n398\n00:22:04.600 --> 00:22:09.720\nWell, it's actually going to construct\nthe url that we need which is composed,\n\n399\n00:22:09.720 --> 00:22:16.353\nand I'm gonna zoom in to\napparently really far, is composed\n\n400\n00:22:16.353 --> 00:22:22.840\nof base/ ${lat},${lon}.\n\n401\n00:22:22.840 --> 00:22:25.390\nNot I like these templating string, and\n\n402\n00:22:25.390 --> 00:22:30.060\nnotice I took out that / there so\nI can say, hey.\n\n403\n00:22:30.060 --> 00:22:32.120\nI'm / and then ${lat},${lon}.\n\n404\n00:22:32.120 --> 00:22:32.860\nI like this pattern.\n\n405\n00:22:32.860 --> 00:22:35.650\nSo when I paste this in this will be zero,\n\n406\n00:22:35.650 --> 00:22:38.270\nzero coming from the app\ncomponent controller.\n\n407\n00:22:38.270 --> 00:22:40.960\nThe URL would be constructed based\non the latitude and longitude,\n\n408\n00:22:40.960 --> 00:22:44.420\nand that's actually what should happen,\nright?\n\n409\n00:22:44.420 --> 00:22:47.500\nLikewise, this is serving a local host.\n\n410\n00:22:47.500 --> 00:22:50.030\nIf we ever needed to fix this,\nwe don't have to come and\n\n411\n00:22:50.030 --> 00:22:52.950\nfix it in a bunch of places and\nall this other stuff.\n\n412\n00:22:52.950 --> 00:22:55.000\nWe have a single point and really,\n\n413\n00:22:55.000 --> 00:22:58.060\nwe could probably even make\nthis a little more general.\n\n414\n00:22:58.060 --> 00:22:58.590\nBut for now,\n\n415\n00:22:58.590 --> 00:23:00.840\nthe weather service is the only one\nthat needs to know about this URL.\n\n416\n00:23:02.530 --> 00:23:05.400\nSo now that's the case I'm gonna say and\n\n417\n00:23:05.400 --> 00:23:09.627\nthis is gonna be where it\ngets a little interesting.\n\n418\n00:23:09.627 --> 00:23:13.660\nThe $http library is promise based.\n\n419\n00:23:13.660 --> 00:23:18.530\nSo as a result this is going to\nbe kind of interesting thing.\n\n420\n00:23:18.530 --> 00:23:24.380\nSo Im gonna get a response\nback that has the data on it,\n\n421\n00:23:24.380 --> 00:23:28.198\nand as a result I'm gonna\nuse service to go ahead and\n\n422\n00:23:28.198 --> 00:23:31.120\njust scrub off the rest of the headers and\nthings.\n\n423\n00:23:31.120 --> 00:23:34.070\nI don't want to return that to controller,\nI just want weather data.\n\n424\n00:23:34.070 --> 00:23:36.928\nThat's my expectation\nfrom the WeatherService.\n\n425\n00:23:36.928 --> 00:23:41.708\nSo, by doing that,\nI can say this.$http.get and then,\n\n426\n00:23:41.708 --> 00:23:45.245\nwhen you get the response back,\ngo ahead and\n\n427\n00:23:45.245 --> 00:23:49.358\nreturn the data which\nreturns another promise, so\n\n428\n00:23:49.358 --> 00:23:55.187\nnow if I come over to my AppController,\nwhen I call git the response that I\n\n429\n00:23:55.187 --> 00:24:00.189\nget here is actually the weather\ndata as such, weatherData.\n\n430\n00:24:00.189 --> 00:24:07.704\nAnd As a result, I'm just gonna\nsay console.log(weatherData).\n\n431\n00:24:07.704 --> 00:24:10.440\nAnd it's gonna strip all of those\nheaders and things off of it.\n\n432\n00:24:10.440 --> 00:24:13.120\nAnd we're gonna see the exact same output.\n\n433\n00:24:13.120 --> 00:24:17.100\nBut I think to me this is a little\nclearer about the intentions\n\n434\n00:24:17.100 --> 00:24:18.350\nof the weather service.\n\n435\n00:24:18.350 --> 00:24:19.790\nIt's a nicer API.\n\n436\n00:24:19.790 --> 00:24:22.240\nAnd well,\nif you come to read this code you're like,\n\n437\n00:24:22.240 --> 00:24:27.770\nwhen I call this .weather.get latitude and\nlongitude, I get weather data back,\n\n438\n00:24:27.770 --> 00:24:33.570\nnot an object that has a data property,\nthat is the data.\n\n439\n00:24:33.570 --> 00:24:36.485\nSee, just saying that out loud,\nI'm looking at Zack and\n\n440\n00:24:36.485 --> 00:24:40.700\nZack's like what, your talking about what?\n\n441\n00:24:40.700 --> 00:24:42.260\nSo I think it's a little nicer.\n\n442\n00:24:42.260 --> 00:24:43.960\nNow, right now we're just console.logging.\n\n443\n00:24:43.960 --> 00:24:45.000\nThat's not ideal.\n\n444\n00:24:45.000 --> 00:24:47.110\nBut we'll fix that in due time.\n\n445\n00:24:48.230 --> 00:24:53.270\nSo if we CTRL+C and npm run build.\n\n446\n00:24:54.360 --> 00:24:57.680\nAnd yes, this is giving a little\nannoying that webpack dev server was\n\n447\n00:24:57.680 --> 00:24:59.250\nsupposed to fix that.\n\n448\n00:24:59.250 --> 00:25:02.600\n&gt;&gt; Yeah.\n&gt;&gt; We'll have to do some tweaking on that.\n\n449\n00:25:02.600 --> 00:25:06.516\nAnd then, well,\nwe're gonna use it to serve up our app.\n\n450\n00:25:06.516 --> 00:25:10.860\nThere we go, cool deal.\n\n451\n00:25:10.860 --> 00:25:15.744\nAnd let's come over here and refresh,\nand there we go, we get the data again,\n\n452\n00:25:15.744 --> 00:25:18.047\neverything looks exactly the same.\n\n453\n00:25:18.047 --> 00:25:21.152\nCool, now we have a service\nthat's the responsibility for\n\n454\n00:25:21.152 --> 00:25:24.620\ngrabbing the data has been\ndelegated to set service.\n\n455\n00:25:24.620 --> 00:25:25.720\n&gt;&gt; Awesome.\n\n456\n00:25:25.720 --> 00:25:26.841\nOne final thing,\n\n457\n00:25:26.841 --> 00:25:31.788\nconsole.logging is probably not the best\nthing to do when you get a response.\n\n458\n00:25:31.788 --> 00:25:35.710\nconsole.error, you should probably\ntry to handle it a little better.\n\n459\n00:25:35.710 --> 00:25:38.450\nHowever, we're gonna leave that for\nnow because that might\n\n460\n00:25:39.460 --> 00:25:42.454\nbe something we do shortly\n&gt;&gt; In another episode.\n\n461\n00:25:42.454 --> 00:25:44.735\n&gt;&gt; Right, after our app has\nkinda come into fruition.\n\n462\n00:25:44.735 --> 00:25:45.260\n&gt;&gt; Yes.\n\n463\n00:25:45.260 --> 00:25:50.750\n&gt;&gt; Ultimately what I want Is\ninside of this AppController.\n\n464\n00:25:50.750 --> 00:25:55.522\nI want the property called this.weather,\nactually,\n\n465\n00:25:55.522 --> 00:26:00.180\nthis.data, excuse me,\nset equal to the weatherData.\n\n466\n00:26:00.180 --> 00:26:04.320\nI could call this this.weatherData\nequals weatherData.\n\n467\n00:26:04.320 --> 00:26:07.040\nI'm making a distinction\nbetween those two for now.\n\n468\n00:26:07.040 --> 00:26:08.180\nWe may come back and change that.\n\n469\n00:26:09.890 --> 00:26:14.002\nLastly, to show that,\ninstead of console logging, let's just\n\n470\n00:26:14.002 --> 00:26:19.100\noutput it on our view, our actual\ncomponent, and have that render out.\n\n471\n00:26:19.100 --> 00:26:21.150\nSo I'm going to come\ninto components app and\n\n472\n00:26:21.150 --> 00:26:26.007\ncome to app.html, instead of just\nthe message I'm going to create a pre-tag.\n\n473\n00:26:26.007 --> 00:26:30.570\nAnd, well, Ctrl.data and\n\n474\n00:26:30.570 --> 00:26:35.280\nthen pipe that through the json filter so\nit actually filters out and\n\n475\n00:26:35.280 --> 00:26:37.380\nmakes it nice and pretty print.\n\n476\n00:26:37.380 --> 00:26:40.360\nSo if this works,\nwe're gonna rebuild this and refresh.\n\n477\n00:26:40.360 --> 00:26:44.490\nWe should see all that data in our view,\nit's gonna be just json, but\n\n478\n00:26:44.490 --> 00:26:49.530\nnow we have it on app component using\nthe weather service, and now we've started\n\n479\n00:26:49.530 --> 00:26:55.400\nto build our infrastructure for\na little nicer use case, all right.\n\n480\n00:26:55.400 --> 00:26:58.290\nSo not run dev,\nlet's go ahead and run build.\n\n481\n00:26:59.700 --> 00:27:01.580\nAnd yes this does take\na little bit longer,\n\n482\n00:27:01.580 --> 00:27:05.610\nso probably in the next\nepisode we'll try to fix that.\n\n483\n00:27:05.610 --> 00:27:07.765\nI make no promises though.\n\n484\n00:27:07.765 --> 00:27:10.840\n[LAUGH] Can't hold me to it,\nI said I don't make any promises.\n\n485\n00:27:10.840 --> 00:27:15.830\nSo if I refresh and wait for it,\nit's still compiling, and boom.\n\n486\n00:27:15.830 --> 00:27:16.800\nHere we go.\n\n487\n00:27:16.800 --> 00:27:20.748\nIt is now attached to the controller,\nit is now part of our staple component,\n\n488\n00:27:20.748 --> 00:27:23.342\nour app component and\nnow we're off to the races.\n\n489\n00:27:23.342 --> 00:27:27.220\nWe have our weather service, it's being\nuse in the app component to actually get\n\n490\n00:27:27.220 --> 00:27:31.150\ninformation, and we're starting to\nbring our application to fruition.\n\n491\n00:27:31.150 --> 00:27:34.330\n&gt;&gt; But Justin, what's next for\nour Angular application?\n\n492\n00:27:34.330 --> 00:27:35.480\n&gt;&gt; Well, what is next?\n\n493\n00:27:35.480 --> 00:27:37.970\nNow, we could do a few different ways,\nright.\n\n494\n00:27:37.970 --> 00:27:39.540\nWe could go ahead and start styling.\n\n495\n00:27:39.540 --> 00:27:43.592\nWe could build out everything in the app\ncomponent view and just have that,\n\n496\n00:27:43.592 --> 00:27:45.410\nthat's not really nice.\n\n497\n00:27:45.410 --> 00:27:48.110\nBut we need a way to search.\n\n498\n00:27:48.110 --> 00:27:49.820\nThat's kind of upfront.\n\n499\n00:27:49.820 --> 00:27:53.200\nAs it stands this is always zero zero.\n\n500\n00:27:53.200 --> 00:27:54.910\nThat's not great, right?\n\n501\n00:27:54.910 --> 00:27:57.410\nIt would be nice if, instead of zero zero,\n\n502\n00:27:57.410 --> 00:28:01.610\nI could have someone type in a latitude\nand longitude and hit search.\n\n503\n00:28:02.760 --> 00:28:06.030\nNow we're gonna start by putting\nthat in the app component but\n\n504\n00:28:06.030 --> 00:28:09.160\nthat almost sound like its own component,\nright?\n\n505\n00:28:09.160 --> 00:28:11.360\nSo that's kind of up front.\n\n506\n00:28:11.360 --> 00:28:14.530\nIn addition to we need to\nbuild other ways to display.\n\n507\n00:28:14.530 --> 00:28:19.360\nCome and look, hourly weather,\nwell that's gonna give me the weather for\n\n508\n00:28:19.360 --> 00:28:23.050\nthe next,\nI think it's 48 hours plus or minus.\n\n509\n00:28:23.050 --> 00:28:27.055\nAnd I can get the time, summary,\npreset, temperature, and so on.\n\n510\n00:28:27.055 --> 00:28:31.574\nBut here currently,\nthat's what the weather is right now.\n\n511\n00:28:31.574 --> 00:28:35.381\nSo those are a little bit different\ndisplays, and we could have some fun\n\n512\n00:28:35.381 --> 00:28:38.870\nthere, and you never know,\nyou might even do a little styling.\n\n513\n00:28:38.870 --> 00:28:43.600\nI'm not known for my styling prowess,\nso I might take a risk on this one and\n\n514\n00:28:43.600 --> 00:28:44.150\nsee how it goes.\n\n515\n00:28:45.380 --> 00:28:49.180\nWeather app with AngularJS in Express\nbuilding our weather service.\n\n516\n00:28:49.180 --> 00:28:52.750\nBefore we say goodbye, any further\nthings you'd like to share with us?\n\n517\n00:28:52.750 --> 00:28:56.620\n&gt;&gt; Well you should definitely stay tuned\nbecause now we're getting to the fun part.\n\n518\n00:28:56.620 --> 00:28:57.160\n&gt;&gt; That's right.\n\n519\n00:28:57.160 --> 00:29:00.360\nSo once again,\nweather app with AngularJS in Express.\n\n520\n00:29:00.360 --> 00:29:02.550\nThere's a lot of video in this series,\n\n521\n00:29:02.550 --> 00:29:04.900\nmake sure you watch them all\nbecause you'll be glad you did.\n\n522\n00:29:04.900 --> 00:29:07.990\nAnd thank you for watching DevProTV.\n\n523\n00:29:07.990 --> 00:29:10.820\nA good devpro is always learning.\n\n524\n00:29:10.820 --> 00:29:12.030\nI'm Zach Memos.\n\n525\n00:29:12.030 --> 00:29:13.080\n&gt;&gt; And I'm Justin Dennison.\n\n526\n00:29:13.080 --> 00:29:15.368\n&gt;&gt; And we will see you very soon.\n\n527\n00:29:15.368 --> 00:29:20.080\n[MUSIC]\n\n",
          "vimeoId": "227256592"
        },
        {
          "description": "Justin and Zach discuss fixes for hardcoding latitude & longitude, how a Search Component may be useful, Stateful vs. Stateless, building the adding the Search Component, and adding the Search Component.",
          "length": "1745",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-6-1-1-building_the_search_component-072117-PGM.00_32_34_13.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-6-1-1-building_the_search_component-072117-PGM.00_32_34_13.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-6-1-1-building_the_search_component-072117-PGM.00_32_34_13.Still001-sm.jpg",
          "title": "Building the Search Component",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:13.144 --> 00:00:17.330\nThank you for watching DevProTV,\nhelping you learn wherever you go.\n\n3\n00:00:17.330 --> 00:00:23.555\nI'm your host, Zack Memos, as we continue\non Weather app with AngularJS and Express.\n\n4\n00:00:23.555 --> 00:00:27.529\nIn this particular episode,\nwe're building the search component.\n\n5\n00:00:27.529 --> 00:00:31.003\nAnd the person bringing us all\nthe info that we need is the marvelous\n\n6\n00:00:31.003 --> 00:00:33.840\nJustin Dennison, who's right over here.\n\n7\n00:00:33.840 --> 00:00:35.490\nHe knows this stuff, he knows it.\n\n8\n00:00:35.490 --> 00:00:40.385\n&gt;&gt; That was like a hype man,\nand here he comes, yeah.\n\n9\n00:00:40.385 --> 00:00:42.250\n&gt;&gt; [LAUGH]\n&gt;&gt; But before we get off track too much,\n\n10\n00:00:42.250 --> 00:00:44.650\nhow are you doing today, Zach?\n\n11\n00:00:44.650 --> 00:00:47.370\n&gt;&gt; I'm doing very well, and I'm really\nexcited because we're moving on with\n\n12\n00:00:47.370 --> 00:00:50.680\nconstructing the weather app and\nworking with Angular, of course.\n\n13\n00:00:50.680 --> 00:00:52.060\nAnd we have the weather service,\n\n14\n00:00:52.060 --> 00:00:55.780\nwe have the app component and\nwe're making great ahead with our hover.\n\n15\n00:00:55.780 --> 00:01:01.040\nWith hard coding the latitude and\nlongitude, how are we gonna fix all that?\n\n16\n00:01:01.040 --> 00:01:03.730\n&gt;&gt; Yes that's a problem we're\nto the point now to where\n\n17\n00:01:04.900 --> 00:01:06.920\nwe really need some\nuser interaction right.\n\n18\n00:01:06.920 --> 00:01:08.420\n&gt;&gt; Yeah.\n&gt;&gt; We have this app component,\n\n19\n00:01:08.420 --> 00:01:12.290\nwe have our weather service and\nthat's weird I will for\n\n20\n00:01:12.290 --> 00:01:16.420\none year as we start building this out,\nwe're gonna have trouble with some naming.\n\n21\n00:01:16.420 --> 00:01:21.410\nBut ultimately,\nwhat I want is the ability to keep all of\n\n22\n00:01:21.410 --> 00:01:26.370\nmy state in the app component,\nhave people type in a latitude and\n\n23\n00:01:26.370 --> 00:01:31.120\nlongitude, click a button, and\nthen it goes and grabs the weather.\n\n24\n00:01:31.120 --> 00:01:35.640\nSo then it updates the app component and\nthat's our ultimate goal.\n\n25\n00:01:35.640 --> 00:01:39.146\nFuture wise,\nthat app component is gonna moderate\n\n26\n00:01:39.146 --> 00:01:43.640\nthe state the actual weather data\nin all the other places, okay.\n\n27\n00:01:43.640 --> 00:01:48.112\nSo it will kinda it will be\nthe foreman the construction foreman.\n\n28\n00:01:48.112 --> 00:01:48.821\n&gt;&gt; Yes.\n\n29\n00:01:48.821 --> 00:01:52.386\n&gt;&gt; So that's what we gonna do in\norder to start doing that we gonna\n\n30\n00:01:52.386 --> 00:01:54.116\nbuild the search component.\n\n31\n00:01:54.116 --> 00:01:57.790\nNow forewarning,\nwe're gonna start by building this just\n\n32\n00:01:57.790 --> 00:02:01.260\nright in the app component,\njust so we can get a feel for it,\n\n33\n00:02:01.260 --> 00:02:05.980\nand then we're gonna extract that\nout into its very own, okay?\n\n34\n00:02:05.980 --> 00:02:08.270\nSo we're just gonna do a quick\ncheck to make sure it works,\n\n35\n00:02:08.270 --> 00:02:11.100\nand then we're gonna\npull that right back out.\n\n36\n00:02:11.100 --> 00:02:17.700\nSo before we worry about building it,\nlet's actually talk about design.\n\n37\n00:02:19.900 --> 00:02:21.420\nI could do a bunch of things, right\\?\n\n38\n00:02:21.420 --> 00:02:25.710\nI could have click up, down, you can't\nselect beyond certain latitude and\n\n39\n00:02:25.710 --> 00:02:27.100\nlongitudes.\n\n40\n00:02:27.100 --> 00:02:31.430\nI could make it a button, I could\nhave it an enter, it could be a form.\n\n41\n00:02:31.430 --> 00:02:34.570\nThere's a lot of decision to make as\nwell as how it is arrange on a form,\n\n42\n00:02:34.570 --> 00:02:36.200\non the actual screen.\n\n43\n00:02:36.200 --> 00:02:38.560\nIs it top bottom, right?\n\n44\n00:02:38.560 --> 00:02:41.700\nLat lon button, or is it side by side.\n\n45\n00:02:41.700 --> 00:02:43.950\nOr is it something else?\n\n46\n00:02:43.950 --> 00:02:46.990\nMaybe I don't even want latitude and\nlongitude in the long term.\n\n47\n00:02:46.990 --> 00:02:50.720\nI want to be able to search for\nlike Tokyo, Japan and\n\n48\n00:02:50.720 --> 00:02:53.890\nget that by name instead of\nby latitude and longitude.\n\n49\n00:02:53.890 --> 00:02:57.130\nNow that would be very helpful,\nso I want that,\n\n50\n00:02:57.130 --> 00:02:59.660\nI want them to be able to search by name.\n\n51\n00:03:01.960 --> 00:03:05.000\nThat way, I don't have to worry so\nmuch about the styling or\n\n52\n00:03:05.000 --> 00:03:09.650\nthe representation now,\nwhen I'm worrying about just latitude and\n\n53\n00:03:09.650 --> 00:03:13.250\nlongitude, cuz I know I'm gonna\nchange the searching part.\n\n54\n00:03:13.250 --> 00:03:17.150\nBut in order for appropriate testing and\nkind of this user interaction testing,\n\n55\n00:03:17.150 --> 00:03:20.720\nwe do want some way to search and\nthis is our first start.\n\n56\n00:03:20.720 --> 00:03:24.179\n&gt;&gt; Okay so do we need anything\nspecial before we start building?\n\n57\n00:03:24.179 --> 00:03:27.580\n&gt;&gt; Well we will kind of build\nthis in the app component but\n\n58\n00:03:27.580 --> 00:03:30.920\nit won't necessarily be\ntied to the app component.\n\n59\n00:03:30.920 --> 00:03:34.730\nWe're just testing so\nI don't have to do all this other set up.\n\n60\n00:03:34.730 --> 00:03:36.430\nAnd then we'll extract that.\n\n61\n00:03:36.430 --> 00:03:40.210\nWe already know everything we need,\nit's just how to wire it up.\n\n62\n00:03:40.210 --> 00:03:44.680\nThere is one little edge case that's\na little freaky that's coming up.\n\n63\n00:03:44.680 --> 00:03:46.830\nAnd well, that may take some time.\n\n64\n00:03:46.830 --> 00:03:49.290\nSo we'll see how the time goes, okay?\n\n65\n00:03:49.290 --> 00:03:52.180\nSo I guess we should probably go ahead and\nget started.\n\n66\n00:03:52.180 --> 00:03:56.040\nAnd so let's take a look at my screen and\nsee where we left off, where are we going.\n\n67\n00:03:56.040 --> 00:03:59.600\nSo we were able to get the hello\nfrom app component and information.\n\n68\n00:03:59.600 --> 00:04:04.360\nI'm going to leave that for now, mainly\nbecause I want to see if this updates, and\n\n69\n00:04:04.360 --> 00:04:07.800\nI don't necessarily want to have to\nlook at all those console logging things\n\n70\n00:04:07.800 --> 00:04:08.490\nout, okay?\n\n71\n00:04:09.830 --> 00:04:15.530\nSo, hello from app component,\nthere's our information, we hop over here.\n\n72\n00:04:15.530 --> 00:04:20.940\nThis is our app component as it stands,\nthe HTML rather and here's the controller.\n\n73\n00:04:20.940 --> 00:04:24.280\nIt calls get weather immediately.\n\n74\n00:04:24.280 --> 00:04:26.410\nI don't particularly like that.\n\n75\n00:04:26.410 --> 00:04:31.280\nI would rather have this being\nactually go get the weather,\n\n76\n00:04:31.280 --> 00:04:34.870\nor update, or maybe even search.\n\n77\n00:04:34.870 --> 00:04:41.270\nI want that to happen when, well,\nwhen a button's clicked, not on page load.\n\n78\n00:04:41.270 --> 00:04:45.290\nThe only time I would want it on page load\nis if someone gave me permission to use\n\n79\n00:04:45.290 --> 00:04:47.810\nthe geo location services\nas part of the browser.\n\n80\n00:04:47.810 --> 00:04:50.470\nAnd then I could look up their latitude\nand longitude for that particular area,\n\n81\n00:04:50.470 --> 00:04:52.300\nand then allow them to search.\n\n82\n00:04:52.300 --> 00:04:53.750\nWe're not quite there yet, so\n\n83\n00:04:53.750 --> 00:04:57.330\nI don't wanna pre-load information,\nI want to [SOUND] click, click, click.\n\n84\n00:04:59.060 --> 00:05:04.876\nSo as that happens, I'm gonna pull\nthis out into a separate method,\n\n85\n00:05:04.876 --> 00:05:06.995\nbecause this is a class.\n\n86\n00:05:06.995 --> 00:05:10.520\nAnd that's gonna help extract\nit a little bit later on.\n\n87\n00:05:10.520 --> 00:05:15.820\nSo, let's go ahead and remove this,\n\n88\n00:05:15.820 --> 00:05:20.410\nremove this, and we're gonna\nleave that for now just to make\n\n89\n00:05:20.410 --> 00:05:24.160\nsure we don't break anything and\nbuild out our actual search component.\n\n90\n00:05:24.160 --> 00:05:28.480\nSo I'm gonna remove this message,\nwe're doing a little bit of clean up here.\n\n91\n00:05:28.480 --> 00:05:33.139\nAnd remove the message from here, and\n\n92\n00:05:33.139 --> 00:05:36.929\nthere we go, we are now ready.\n\n93\n00:05:36.929 --> 00:05:40.020\nI'm gonna create a little comment here and\nsay, the Search.\n\n94\n00:05:41.240 --> 00:05:44.998\nAnd then I'm gonna create another\nlittle comment and say, End of Search,\n\n95\n00:05:44.998 --> 00:05:48.150\nlike so, okay?\n\n96\n00:05:48.150 --> 00:05:53.810\nSo we're just gonna have an input\nlatitude, longitude and a button.\n\n97\n00:05:53.810 --> 00:05:59.516\nAnd I'm actually gonna build then as\na form, so I'm gonna say form and\n\n98\n00:05:59.516 --> 00:06:04.461\nI don't want an action, but\nI want an ng-submit, like so.\n\n99\n00:06:04.461 --> 00:06:11.300\nAnd let's just call it,\non search, like so.\n\n100\n00:06:11.300 --> 00:06:14.030\nOkay, so this, not this, excuse me.\n\n101\n00:06:14.030 --> 00:06:16.810\nI was trying controller onSearch.\n\n102\n00:06:16.810 --> 00:06:19.480\nSo it's gonna run on submission\nof the form the onSearch.\n\n103\n00:06:20.980 --> 00:06:21.980\nAnd what do we want in there?\n\n104\n00:06:21.980 --> 00:06:24.390\nWe want a div and we want an input field.\n\n105\n00:06:24.390 --> 00:06:27.398\nAnd let's make that a number, because\nlatitudes and longitudes are numbers.\n\n106\n00:06:27.398 --> 00:06:33.160\nAn ng-model $ctrl.lat and\n\n107\n00:06:33.160 --> 00:06:37.600\ninstead of putting a label, let's just\ncreate a placeholder called Latitude.\n\n108\n00:06:37.600 --> 00:06:41.570\nNow this placeholder's kind of\nthose little grayed out areas that\n\n109\n00:06:41.570 --> 00:06:46.220\nyou see before things get typed in and\nI don't think I've set anything default.\n\n110\n00:06:46.220 --> 00:06:50.100\nSo you'll actually be able to read\nthe placeholder until you type in there,\n\n111\n00:06:50.100 --> 00:06:51.320\nwhich is good.\n\n112\n00:06:51.320 --> 00:06:56.777\nAnd with the same thing I'm gonna create\n\n113\n00:06:56.777 --> 00:07:03.688\nanother div input of type number and\nng-model =.\n\n114\n00:07:03.688 --> 00:07:06.760\nI gotta leave that blank cuz that\ndoes weird things, placeholder.\n\n115\n00:07:08.000 --> 00:07:12.057\nAnd this is the longitude,\nlike so, boom, all right.\n\n116\n00:07:12.057 --> 00:07:18.320\nSo \"$ctrl.lon\" and\nthat file you need my button.\n\n117\n00:07:19.930 --> 00:07:23.960\nAnd I'm gonna put that into div as well,\nnope I'm gonna leave that put of div,\n\n118\n00:07:23.960 --> 00:07:26.680\nI'm sorry, misspoke there.\n\n119\n00:07:26.680 --> 00:07:30.140\nAnd this is a submit button and\nI'm just going to say, get the weather.\n\n120\n00:07:32.180 --> 00:07:35.500\nSo essentially,\nthis is the search portion.\n\n121\n00:07:35.500 --> 00:07:40.840\nWe now have to rebuild, and we're still\nhaving issues that build system, and\n\n122\n00:07:40.840 --> 00:07:45.798\nI think we might actually have a little\nbit of an attempt to figure that out.\n\n123\n00:07:45.798 --> 00:07:50.530\nMaybe in this episode and\nI never say I promised anything.\n\n124\n00:07:50.530 --> 00:07:54.459\nIf not we'll definitely fix\nthat coming up very soon.\n\n125\n00:07:54.459 --> 00:07:56.224\nSo I'm going to come over here and\n\n126\n00:07:56.224 --> 00:07:59.010\nthis has been running since\nyou've last joined us.\n\n127\n00:08:00.170 --> 00:08:03.161\nIt recompiles, but\nit's not quite what I want.\n\n128\n00:08:03.161 --> 00:08:08.750\nI'm gonna go ahead and kill it and\ngo ahead force build, npm run build.\n\n129\n00:08:10.480 --> 00:08:12.350\nAnd it's going to rebuild for us.\n\n130\n00:08:12.350 --> 00:08:15.430\nAnd then I'm gonna npm run dev just for\n\n131\n00:08:15.430 --> 00:08:19.150\nthe server portion which is not ideal,\nbut it's all right for now.\n\n132\n00:08:19.150 --> 00:08:20.820\nSo I'm gonna refresh.\n\n133\n00:08:20.820 --> 00:08:23.370\nAnd then I don't like the part\nthat it has to rebuild.\n\n134\n00:08:23.370 --> 00:08:26.000\nLat is not defined, okay.\n\n135\n00:08:27.090 --> 00:08:30.085\nSo lat is not defined, why is that?\n\n136\n00:08:30.085 --> 00:08:35.830\nwell, if I come over to here, I am still\nrunning this inside of the constructor.\n\n137\n00:08:35.830 --> 00:08:37.160\nThat's not great.\n\n138\n00:08:37.160 --> 00:08:41.594\nActually wanna pull this\nout into another function.\n\n139\n00:08:41.594 --> 00:08:44.350\nAnd notice that constructor got really\nsmall because this is essentially\n\n140\n00:08:44.350 --> 00:08:45.420\nour dependencies.\n\n141\n00:08:45.420 --> 00:08:48.220\nWhat do we need for this controller?\n\n142\n00:08:48.220 --> 00:08:50.250\nAnd let's say onSearch.\n\n143\n00:08:50.250 --> 00:08:51.840\nI think that's called that onSearch.\n\n144\n00:08:51.840 --> 00:08:52.930\nYeah, onSearch.\n\n145\n00:08:56.010 --> 00:08:57.510\nThen we want to run that.\n\n146\n00:08:58.780 --> 00:09:01.080\nHowever, what do we want to do?\n\n147\n00:09:01.080 --> 00:09:03.378\nWe wanna say this.lat.\n\n148\n00:09:03.378 --> 00:09:06.470\nAnd this.lon, just like that.\n\n149\n00:09:06.470 --> 00:09:10.900\nSo I'm gonna grab the ng model\nkind of bound attributes,\n\n150\n00:09:10.900 --> 00:09:12.528\nput them in there, and we're good to go.\n\n151\n00:09:12.528 --> 00:09:16.020\nSo cool deal.\n\n152\n00:09:16.020 --> 00:09:19.400\nLet's come over here, and\nwe gotta rebuild, rerun.\n\n153\n00:09:21.110 --> 00:09:24.730\nAnd if we can get this working,\nmaybe we'll take a quick little aside and\n\n154\n00:09:24.730 --> 00:09:27.270\nfix this build stuff.\n\n155\n00:09:27.270 --> 00:09:30.346\nAnd then we'll come back and\nfinish our search component.\n\n156\n00:09:30.346 --> 00:09:33.469\nnpm run dev.\n\n157\n00:09:33.469 --> 00:09:35.140\nAnd there we go.\n\n158\n00:09:35.140 --> 00:09:40.497\nAnd then it still has to [SOUND] so\nit'll rebuild, rebuild, and there we go.\n\n159\n00:09:40.497 --> 00:09:41.890\nAnd it's good.\n\n160\n00:09:41.890 --> 00:09:44.500\nAll right, here's the moment of truth.\n\n161\n00:09:44.500 --> 00:09:47.870\nZero, zero, get the weather.\n\n162\n00:09:47.870 --> 00:09:48.440\nAnd there we are.\n\n163\n00:09:48.440 --> 00:09:53.210\nIt is now threw user interaction that\nwe actually get this information.\n\n164\n00:09:53.210 --> 00:09:54.590\nAnd now it's not on page load.\n\n165\n00:09:54.590 --> 00:09:56.870\nAnd luckily every time\nI have been refreshing,\n\n166\n00:09:56.870 --> 00:10:00.640\nwe have a thousand calls per day, but it's\njust being hammering our proxy which has\n\n167\n00:10:00.640 --> 00:10:02.770\nactually been hitting the dark sky API.\n\n168\n00:10:02.770 --> 00:10:05.986\nSo I don't think you're gonna do it a\nthousand times over a development cycle in\n\n169\n00:10:05.986 --> 00:10:07.430\na day, but you never know, right?\n\n170\n00:10:08.800 --> 00:10:12.260\nSo now,\nessentially our search is finished.\n\n171\n00:10:12.260 --> 00:10:14.370\nBut this is just simple,\nthis is just to get things working,\n\n172\n00:10:14.370 --> 00:10:17.300\nto think it out, to figure out\nhow this interaction is gonna go.\n\n173\n00:10:17.300 --> 00:10:19.500\nI wanna make sure that I can update,\nright?\n\n174\n00:10:19.500 --> 00:10:22.590\nLet's go 09, and it does update.\n\n175\n00:10:22.590 --> 00:10:29.069\nSo that's what I want, but I don't\nparticularly like having this on search,\n\n176\n00:10:29.069 --> 00:10:34.579\nand this, excuse me, this giant\nform inside of my app component.\n\n177\n00:10:34.579 --> 00:10:38.160\nMy app component should manage state, and\nthen be composed of other components.\n\n178\n00:10:38.160 --> 00:10:41.170\nNow that's just,\nit's kind of a biased on my part.\n\n179\n00:10:41.170 --> 00:10:44.300\nYou don't have to do that, you could\nactually just leave it like this, and\n\n180\n00:10:44.300 --> 00:10:45.120\nit's perfectly fine.\n\n181\n00:10:45.120 --> 00:10:49.460\nI find it to be a little cleaner,\na little more readable, and\n\n182\n00:10:49.460 --> 00:10:55.060\neasier to maintain if we\ndo it a different way.\n\n183\n00:10:55.060 --> 00:10:58.292\nBut Zach, what does it sound,\nhow do you feel about going ahead and\n\n184\n00:10:58.292 --> 00:11:01.614\nfixing this build process before\nwe continue on with the search?\n\n185\n00:11:01.614 --> 00:11:04.500\n&gt;&gt; Yeah, that's bugging me too,\nso I'd love to do that.\n\n186\n00:11:04.500 --> 00:11:05.080\nThat'd be great.\n\n187\n00:11:05.080 --> 00:11:06.870\n&gt;&gt; Well, I'm hoping that we can do that.\n\n188\n00:11:06.870 --> 00:11:09.490\nI got a couple of ideas,\nwe'll see if they work.\n\n189\n00:11:09.490 --> 00:11:13.440\nAnd it's one of those things that don't\nspend too much time trying to fix your\n\n190\n00:11:13.440 --> 00:11:16.980\ntooling if you're having trouble,\njust keep moving forward.\n\n191\n00:11:16.980 --> 00:11:19.030\nSo got a couple of things\nthat we could try.\n\n192\n00:11:19.030 --> 00:11:21.280\nAnd yeah,\nwe're switching gears a little bit.\n\n193\n00:11:21.280 --> 00:11:22.970\nThis is an important.\n\n194\n00:11:22.970 --> 00:11:26.636\nSo if we hop over here,\nI'm gonna kill this webpack dev server.\n\n195\n00:11:26.636 --> 00:11:29.768\nAnd I need to change my\nwebpack config because I think\n\n196\n00:11:29.768 --> 00:11:34.479\npart of the problem is the fact that in\nthis dis folder I have this index.html.\n\n197\n00:11:34.479 --> 00:11:39.710\nIn addition to, I would almost like to\nwipe out this dist folder every time,\n\n198\n00:11:39.710 --> 00:11:43.000\nand put it in a new,\nthat way it kind of reloads.\n\n199\n00:11:44.860 --> 00:11:47.190\nI would like to do that\nbefore actually building.\n\n200\n00:11:47.190 --> 00:11:50.910\nBut during the dev server, I would like\nfor the dev server just to update and\n\n201\n00:11:50.910 --> 00:11:54.720\nrefresh automatically for\nme, and handle that.\n\n202\n00:11:54.720 --> 00:12:01.740\nAnd I can't do that if I'm relying on\nthis HTML file that's in line here, okay?\n\n203\n00:12:01.740 --> 00:12:07.180\nLuckily, if I open up my webpack config,\nwe have these plugins\n\n204\n00:12:07.180 --> 00:12:11.270\nthat help us do some of these other tasks,\nother than like reading files, right?\n\n205\n00:12:11.270 --> 00:12:15.050\nReading NCSS or JS files and\ntransforming them.\n\n206\n00:12:15.050 --> 00:12:16.660\nLike this UglifyJSPlugin.\n\n207\n00:12:16.660 --> 00:12:23.260\nIt actually transforms,\nit minifies the files, and puts them out.\n\n208\n00:12:23.260 --> 00:12:28.810\nSo, what I'm gonna do is I want something\ncalled the HTML Web Pack plugin.\n\n209\n00:12:28.810 --> 00:12:33.260\nIt is not the html-loader that we're\nusing, but the html Web Pack plugin\n\n210\n00:12:33.260 --> 00:12:38.350\nthat will generate that index.html for\nyou, so you don't have to have it.\n\n211\n00:12:38.350 --> 00:12:44.480\nWe are still gonna use a template\nto kinda give a feel for it.\n\n212\n00:12:44.480 --> 00:12:48.923\nBut that way we don't have to rely on that\nindex.html always being part of the build\n\n213\n00:12:48.923 --> 00:12:53.770\nor the dist folder, and we could wipe\nit out and nothing would be broken.\n\n214\n00:12:53.770 --> 00:13:01.170\nSo let's got over here and\nlook up webpack html plugin, okay?\n\n215\n00:13:01.170 --> 00:13:02.160\nSo here's our plugin.\n\n216\n00:13:03.628 --> 00:13:08.640\nAnd simplifies the creation of HTML\nfiles to serve your web pack bundles.\n\n217\n00:13:08.640 --> 00:13:12.230\nOkay, well, that's actually what I wanted.\n\n218\n00:13:12.230 --> 00:13:13.290\nHTML web pack plugins.\n\n219\n00:13:13.290 --> 00:13:18.970\nSave div, and then we just bring it in,\nand we put it in the plugin portion.\n\n220\n00:13:18.970 --> 00:13:20.020\nAwesome.\n\n221\n00:13:20.020 --> 00:13:23.670\nNow we're gonna have to tweak this\na little bit because Angular requires\n\n222\n00:13:23.670 --> 00:13:26.730\na little bit inside of the HTML.\n\n223\n00:13:26.730 --> 00:13:28.850\nDoesn't technically require it,\nbut it's a little nicer,\n\n224\n00:13:28.850 --> 00:13:30.650\nit's a little more declarative and\nI like it that way.\n\n225\n00:13:31.760 --> 00:13:33.870\nSo let's go ahead and install.\n\n226\n00:13:33.870 --> 00:13:34.710\nnpm install.\n\n227\n00:13:34.710 --> 00:13:37.990\nAnd actually let's clear this so\neverybody's on the same page.\n\n228\n00:13:37.990 --> 00:13:40.110\nAnd npm install.\n\n229\n00:13:40.110 --> 00:13:43.270\nI'm inside of client,\n\n230\n00:13:43.270 --> 00:13:48.962\nhtml-webpack-plugin --save-dev.\n\n231\n00:13:48.962 --> 00:13:51.049\nAnd now we're going to get that plugin.\n\n232\n00:13:51.049 --> 00:13:52.514\nWe gotta change our webpack config.\n\n233\n00:13:52.514 --> 00:13:54.957\nNow, this is the downside of tooling.\n\n234\n00:13:54.957 --> 00:14:00.009\nIt is automating some of our processes,\nbut now we have to maintain that tooling.\n\n235\n00:14:00.009 --> 00:14:05.890\nSo that's a trade-off that you have to\nmake as you're building these projects.\n\n236\n00:14:05.890 --> 00:14:10.220\nWe have this plugin, it's installed,\nlet's go ahead and wire it up for me.\n\n237\n00:14:10.220 --> 00:14:13.170\nOr wire it up for you,\nnot only just for me, right?\n\n238\n00:14:13.170 --> 00:14:15.230\n&gt;&gt; For us.\n&gt;&gt; For us, for everyone.\n\n239\n00:14:15.230 --> 00:14:17.633\nI'm gonna come to the top and\njust keep it at the top.\n\n240\n00:14:17.633 --> 00:14:23.911\nHtmlWebpackPlugin.\n\n241\n00:14:23.911 --> 00:14:31.917\nAnd I'm gonna say\nrequire('html-webpack-plugin').\n\n242\n00:14:31.917 --> 00:14:35.000\nWhew, that's a lot of typing.\n\n243\n00:14:35.000 --> 00:14:39.160\nSo let's hide this off to\nthe side here and scroll down.\n\n244\n00:14:39.160 --> 00:14:41.310\nAnd I'm gonna move these\nplugins a little bit, and\n\n245\n00:14:41.310 --> 00:14:44.020\nlet's get a little bit of overscroll here.\n\n246\n00:14:44.020 --> 00:14:44.660\nThere's a comment.\n\n247\n00:14:44.660 --> 00:14:45.997\nI'm gonna move these plugins.\n\n248\n00:14:45.997 --> 00:14:49.080\nSee how these are left\nto right just in a line?\n\n249\n00:14:49.080 --> 00:14:55.100\nI find them to be more readable if\nI go ahead and break this array up.\n\n250\n00:14:55.100 --> 00:14:57.980\nAnd like this, so\nnow it's more like a list.\n\n251\n00:14:57.980 --> 00:15:03.658\nSo comma, I'm gonna create\na new HtmlWebpackPlugin().\n\n252\n00:15:03.658 --> 00:15:06.150\nAnd I'm just interested\nif this would work.\n\n253\n00:15:07.350 --> 00:15:11.840\nNo, no it's not,\nbecause of this very reason.\n\n254\n00:15:11.840 --> 00:15:16.284\nIn this index.html,\nthis ng-app= 'angcaster-client' and\n\n255\n00:15:16.284 --> 00:15:20.270\nthis app component here,\nwe need both of those.\n\n256\n00:15:20.270 --> 00:15:24.143\nSo we're gonna have to do\nsomething a little special here.\n\n257\n00:15:24.143 --> 00:15:27.750\nI am going to delete this index.html here.\n\n258\n00:15:29.360 --> 00:15:31.440\nDeleted, it's done, move to trash.\n\n259\n00:15:31.440 --> 00:15:35.710\nAnd that's because I'm gonna rely\non the plugin to produce it for me.\n\n260\n00:15:35.710 --> 00:15:39.010\nWhat that does mean is inside of my source\n\n261\n00:15:39.010 --> 00:15:41.590\nI need to create a new\nfile inside of source.\n\n262\n00:15:41.590 --> 00:15:44.480\nOkay, so here's our source.\n\n263\n00:15:44.480 --> 00:15:47.210\nAnd I'm gonna call it index.html.\n\n264\n00:15:47.210 --> 00:15:48.620\nAnd that's because, well,\n\n265\n00:15:48.620 --> 00:15:52.275\nthat's where I'm gonna write anything\nthat I want to be in index.html.\n\n266\n00:15:52.275 --> 00:15:54.450\nBut the actual bundling, and creation,\n\n267\n00:15:54.450 --> 00:15:58.189\nand distribution is gonna be handled\nby webpack and in the dist folder.\n\n268\n00:15:58.189 --> 00:16:00.051\nLet's create a little stub here.\n\n269\n00:16:00.051 --> 00:16:03.886\nAnd I'm gonna get rid of these\nmeta tags just for readability.\n\n270\n00:16:03.886 --> 00:16:09.190\nDon't necessarily Want to do\nthat on your distributing end,\n\n271\n00:16:09.190 --> 00:16:12.049\nbut just for learning purposes.\n\n272\n00:16:12.049 --> 00:16:17.310\nI'm going to put that ng-app\nangcaster client and app.\n\n273\n00:16:17.310 --> 00:16:21.575\nAll right, now this html webpack plug-in\nis gonna read this as the template.\n\n274\n00:16:21.575 --> 00:16:25.923\nAnd then it's gonna create a file that\nhas the script tag at the bottom, or\n\n275\n00:16:25.923 --> 00:16:28.537\nany styles that I want\nat the top in the head.\n\n276\n00:16:28.537 --> 00:16:31.790\nSo I'm gonna go ahead and\nmake this angcaster as well.\n\n277\n00:16:33.860 --> 00:16:37.580\nHopefully this all works out,\nI've used it several times before.\n\n278\n00:16:37.580 --> 00:16:40.210\nI think this will help\nalleviate some of our problems.\n\n279\n00:16:40.210 --> 00:16:42.100\nBut it requires some options.\n\n280\n00:16:42.100 --> 00:16:43.140\nAnd what are those options?\n\n281\n00:16:43.140 --> 00:16:49.320\nWell, the filename that I wanna\nput out is, well, not that.\n\n282\n00:16:49.320 --> 00:16:52.814\nFilename is just index.html.\n\n283\n00:16:52.814 --> 00:16:59.542\nThe template is source index.html, okay?\n\n284\n00:16:59.542 --> 00:17:05.558\nSo from the one that I'm writing in\nsource to the output called index.html.\n\n285\n00:17:05.558 --> 00:17:09.518\nLet's go ahead and see if this built\ncorrectly because there might be some more\n\n286\n00:17:09.518 --> 00:17:13.790\nlive action debugging cuz we're trying\nto maintain some of our tooling.\n\n287\n00:17:13.790 --> 00:17:17.107\nSo let's npm, run, build, okay?\n\n288\n00:17:17.107 --> 00:17:21.550\nSo we're running our build, here we go.\n\n289\n00:17:21.550 --> 00:17:25.990\nIt's moving, moving, and\nit actually output the index.html.\n\n290\n00:17:25.990 --> 00:17:27.590\nYou can see it right here.\n\n291\n00:17:27.590 --> 00:17:30.700\nAnd if I come over here, there it is.\n\n292\n00:17:30.700 --> 00:17:31.450\nAnd look at there.\n\n293\n00:17:31.450 --> 00:17:34.180\nIt set it up for us, it outputs it.\n\n294\n00:17:34.180 --> 00:17:38.800\nWe're all good to go, and now webpack is\ngoing to be building our index.html file\n\n295\n00:17:38.800 --> 00:17:40.980\nbased on the one that we're writing.\n\n296\n00:17:40.980 --> 00:17:42.647\nSo it's gonna take that template and\n\n297\n00:17:42.647 --> 00:17:45.189\nadd the things that we need\nas part of the build process.\n\n298\n00:17:45.189 --> 00:17:47.269\nWell, it's nice that we\nhave that extra automation.\n\n299\n00:17:47.269 --> 00:17:52.534\nBut because we have that, we can actually\nchange our webpack dev server to,\n\n300\n00:17:52.534 --> 00:17:58.230\nwell, let's go look at a couple of options\nwhere it might be a little more robust.\n\n301\n00:18:00.500 --> 00:18:02.800\nSo let's see here.\n\n302\n00:18:02.800 --> 00:18:05.645\nLet's open up package.json.\n\n303\n00:18:05.645 --> 00:18:08.560\nWe're just using web pack dev server.\n\n304\n00:18:08.560 --> 00:18:10.960\nI'm gonna come over and\nlook up webpack dev server.\n\n305\n00:18:13.648 --> 00:18:16.470\nAnd here we go.\n\n306\n00:18:16.470 --> 00:18:20.008\nWhat are some of the options that I have?\n\n307\n00:18:20.008 --> 00:18:24.150\nDocumentation, there we go.\n\n308\n00:18:24.150 --> 00:18:26.605\nThat's not what I wanted.\n\n309\n00:18:30.274 --> 00:18:32.239\nThe documentation is not always great.\n\n310\n00:18:33.260 --> 00:18:34.620\nFor some of these tools.\n\n311\n00:18:34.620 --> 00:18:39.190\nBut if you go and look, and\nI don't wanna spend a whole bunch of time\n\n312\n00:18:39.190 --> 00:18:43.610\nshowing you these, there's a dash\ndash inline, and a dash dash hot.\n\n313\n00:18:43.610 --> 00:18:45.760\nAnd part of that is\nthe reloading behavior.\n\n314\n00:18:45.760 --> 00:18:49.839\nSo we're gonna try that and\nsee if that will help\n\n315\n00:18:51.570 --> 00:18:55.640\nwith our weirdness where things\naren't updating like they should be.\n\n316\n00:18:55.640 --> 00:18:58.930\nAnd then so I'm gonna just\ndo the dash dash in line and\n\n317\n00:18:58.930 --> 00:19:03.810\nthen that should, well,\nit should do as it's supposed to.\n\n318\n00:19:03.810 --> 00:19:07.280\nAt this point we should be able\nto start our dev server and\n\n319\n00:19:07.280 --> 00:19:10.500\nnever, kind of set it and\nforget it, if you will, okay?\n\n320\n00:19:10.500 --> 00:19:13.970\nSo when it starts the server, you still\nhave to wait for that initial build.\n\n321\n00:19:13.970 --> 00:19:16.460\nSo we're gonna hang out here,\nmake sure it does.\n\n322\n00:19:16.460 --> 00:19:17.700\nAnd there we go.\n\n323\n00:19:17.700 --> 00:19:24.170\nAnd if I go to localhost 8080 now,\nwell, let's see if it's there.\n\n324\n00:19:24.170 --> 00:19:27.190\nThere's dist, but let's go to 8081.\n\n325\n00:19:27.190 --> 00:19:30.950\nAnd notice it's serving without the /dist.\n\n326\n00:19:30.950 --> 00:19:36.250\nThat means that we're actually\nusing the dev server portion, and\n\n327\n00:19:36.250 --> 00:19:41.670\nwe're now relying on that static file that\nwe built and was kind of leaving there.\n\n328\n00:19:41.670 --> 00:19:44.305\nLet's make sure that it still works.\n\n329\n00:19:44.305 --> 00:19:45.540\nGet Weather.\n\n330\n00:19:45.540 --> 00:19:46.890\nAnd it does still work.\n\n331\n00:19:46.890 --> 00:19:49.389\nSo I think we fixed that\nweird out of sync thing.\n\n332\n00:19:49.389 --> 00:19:51.460\n&gt;&gt; All right.\n&gt;&gt; It may crop it's ugly head up again.\n\n333\n00:19:52.570 --> 00:19:57.920\nAnd just to check that it does,\nlet's actually pull that form out and\n\n334\n00:19:57.920 --> 00:19:59.490\nput it in its own separate component.\n\n335\n00:19:59.490 --> 00:20:01.050\nDoes that sound like a great idea to you?\n\n336\n00:20:01.050 --> 00:20:02.184\n&gt;&gt; I think we should do that!\n\n337\n00:20:02.184 --> 00:20:03.251\n&gt;&gt; Zach's excited.\n&gt;&gt; Right now!\n\n338\n00:20:03.251 --> 00:20:04.179\n&gt;&gt; I'm excited.\n\n339\n00:20:04.179 --> 00:20:05.140\nYou should be excited.\n\n340\n00:20:05.140 --> 00:20:07.370\nLet's actually do that very thing.\n\n341\n00:20:07.370 --> 00:20:11.260\n&gt;&gt; So I'm gonna leave that running, right?\n\n342\n00:20:11.260 --> 00:20:12.760\nOur webpack-dev-server is running.\n\n343\n00:20:12.760 --> 00:20:15.250\nOr I guess I did some weird click there.\n\n344\n00:20:15.250 --> 00:20:19.310\nI'm gonna close package.json,\nour webpack config.\n\n345\n00:20:19.310 --> 00:20:24.990\nAnd this portion, I'm just gonna\ngrab it and I'm gonna cut it.\n\n346\n00:20:24.990 --> 00:20:30.870\nAnd what I want is just\na search component like this.\n\n347\n00:20:30.870 --> 00:20:33.300\nWell, this reads a little\nbit better to me.\n\n348\n00:20:33.300 --> 00:20:37.620\nThe app component is composed of other\ncomponents that have a particular job.\n\n349\n00:20:37.620 --> 00:20:39.470\nSo if I look at the app, search.\n\n350\n00:20:39.470 --> 00:20:40.480\nI wonder what it does?\n\n351\n00:20:40.480 --> 00:20:41.690\nIt probably searches.\n\n352\n00:20:41.690 --> 00:20:42.700\n&gt;&gt; I bet you it searches.\n\n353\n00:20:42.700 --> 00:20:46.040\n&gt;&gt; Now if it doesn't search,\nthat is bad design.\n\n354\n00:20:46.040 --> 00:20:48.540\nBut this is very declarative, readable.\n\n355\n00:20:48.540 --> 00:20:53.200\nBut what that means is now we have\nto create a new component definition\n\n356\n00:20:53.200 --> 00:20:55.420\nin our component's components folder.\n\n357\n00:20:55.420 --> 00:20:59.670\nSo I'm going to create a new\nfolder called search, okay?\n\n358\n00:20:59.670 --> 00:21:03.752\nAnd then inside of there,\nI'm wanna create a new file called\n\n359\n00:21:03.752 --> 00:21:09.414\nsearch.controller.js.\n\n360\n00:21:09.414 --> 00:21:15.240\nI'm gonna create an additional\nnew file called search.html.\n\n361\n00:21:15.240 --> 00:21:21.560\nAnd then a final one, and\nthat's index.js, and that's convention.\n\n362\n00:21:21.560 --> 00:21:26.370\nAnd that way I can import that\neasily inside of main.js.\n\n363\n00:21:26.370 --> 00:21:29.422\nSo what are we gonna put\ninside of search.html?\n\n364\n00:21:29.422 --> 00:21:31.260\nWell, we're just gonna\npaste that right there.\n\n365\n00:21:32.620 --> 00:21:39.450\nBut this assumes that I have lat and\nlon inside of here, and that onSearch.\n\n366\n00:21:39.450 --> 00:21:40.984\nBut we don't have a controller yet, and\n\n367\n00:21:40.984 --> 00:21:42.890\nwe actually don't have\na component definition.\n\n368\n00:21:42.890 --> 00:21:44.500\nSo this isn't working.\n\n369\n00:21:44.500 --> 00:21:49.300\nSo ultimately we need to build\nthis search controller, okay?\n\n370\n00:21:49.300 --> 00:21:50.870\nSo let's build our search controller.\n\n371\n00:21:51.880 --> 00:21:53.630\nSearchController.\n\n372\n00:21:53.630 --> 00:21:58.690\nAnd we're gonna create a constructor here.\n\n373\n00:21:58.690 --> 00:22:02.823\nAnd onSearch, that's our other method.\n\n374\n00:22:02.823 --> 00:22:11.262\nAnd then, SearchController./$inject\n= []; there we go,\n\n375\n00:22:11.262 --> 00:22:17.600\nand then module.exports\n= SearchController.\n\n376\n00:22:18.970 --> 00:22:20.520\nOkay, so we have our controller set up.\n\n377\n00:22:20.520 --> 00:22:22.264\nNow let's build our actual component.\n\n378\n00:22:22.264 --> 00:22:30.168\nconst controller =\nrequire('./search.controller').\n\n379\n00:22:30.168 --> 00:22:36.681\nconst template = require('./search.html').\n\n380\n00:22:38.473 --> 00:22:43.372\nAnd then The component definition is just\n\n381\n00:22:43.372 --> 00:22:46.569\nan object with the template and\nthe controller.\n\n382\n00:22:49.097 --> 00:22:51.870\nModule.exports = component.\n\n383\n00:22:51.870 --> 00:22:54.860\nAll right, so this is very\nrepetitious from the app component,\n\n384\n00:22:54.860 --> 00:22:57.490\nbut you're gonna see the same\npattern over and over again.\n\n385\n00:22:57.490 --> 00:23:00.730\nNow the argument could be made that I\ncould put all of these in one file and\n\n386\n00:23:00.730 --> 00:23:02.680\nthen instead of having sub folders.\n\n387\n00:23:02.680 --> 00:23:05.979\nBut having these file singly focused,\nif things go wrong and\n\n388\n00:23:05.979 --> 00:23:10.119\nit tells you it's in that file, I have\nto debug a lot less code, hopefully,\n\n389\n00:23:10.119 --> 00:23:12.272\nunless the problem kind of bubbles up.\n\n390\n00:23:13.979 --> 00:23:16.581\nSo let's actually wire this\nup to our application.\n\n391\n00:23:16.581 --> 00:23:18.800\nAnd I think we should be good to go.\n\n392\n00:23:18.800 --> 00:23:23.772\nSo let's grab our search component.\n\n393\n00:23:23.772 --> 00:23:28.732\n= require('./components/search).\n\n394\n00:23:28.732 --> 00:23:30.273\nNow I can leave off,\n\n395\n00:23:30.273 --> 00:23:35.120\nI can just point it to the folder\nbecause I have that index.js.\n\n396\n00:23:35.120 --> 00:23:40.317\nI'm going to pair this with my app\ncomponent, and I'm gonna call it search.\n\n397\n00:23:40.317 --> 00:23:45.270\nThat name is important because I'm using\nthat in the main app component html.\n\n398\n00:23:45.270 --> 00:23:46.380\nAnd so SearchComponent.\n\n399\n00:23:47.610 --> 00:23:50.099\nAnd I think I spelled\ncomponent horribly wrong.\n\n400\n00:23:50.099 --> 00:23:50.629\nAnd I did.\n\n401\n00:23:51.830 --> 00:23:53.024\n&gt;&gt; There's a c in it.\n\n402\n00:23:53.024 --> 00:23:58.423\n&gt;&gt; There is, and\nthere's this weird O-N-E-N-T.\n\n403\n00:23:58.423 --> 00:24:00.313\n&gt;&gt; [LAUGH]\n&gt;&gt; Yeah, I don't know,\n\n404\n00:24:00.313 --> 00:24:02.023\nit always looks weird to me.\n\n405\n00:24:02.023 --> 00:24:02.676\nSo there we go.\n\n406\n00:24:02.676 --> 00:24:04.091\nNot components, component.\n\n407\n00:24:04.091 --> 00:24:06.076\nSo we have our search component.\n\n408\n00:24:06.076 --> 00:24:07.701\nIt's in our app.html.\n\n409\n00:24:07.701 --> 00:24:11.260\nThe one final thing that\nI know is this onSearch.\n\n410\n00:24:12.340 --> 00:24:17.550\nI'm gonna grab this onSearch, and\nI'm just gonna copy it for now.\n\n411\n00:24:17.550 --> 00:24:21.220\nI'm gonna bring it over\nto SearchController.\n\n412\n00:24:21.220 --> 00:24:23.910\nAnd I'm actually gonna\npaste it over right here.\n\n413\n00:24:23.910 --> 00:24:27.265\nAnd notice we have\na dependency called weather.\n\n414\n00:24:27.265 --> 00:24:28.461\nWell that's the case.\n\n415\n00:24:30.505 --> 00:24:35.280\nThen we need to inject said dependency,\nthat is our weather service, so\n\n416\n00:24:35.280 --> 00:24:37.820\nwe're gonna keep that as it is.\n\n417\n00:24:37.820 --> 00:24:40.897\nOkay.\nAnd then this.lat, this.lon,\n\n418\n00:24:40.897 --> 00:24:43.642\nthat's part of our search HTML.\n\n419\n00:24:43.642 --> 00:24:50.190\nLet's go see if our webpack rebuilt and\nit looked like it kinda overran on it.\n\n420\n00:24:50.190 --> 00:24:53.090\nWell, it might help if I zoom out.\n\n421\n00:24:53.090 --> 00:24:58.710\nThat's probably important, and now,\nhere we go, cross your fingers.\n\n422\n00:25:00.900 --> 00:25:02.010\nIs it rebuilding?\n\n423\n00:25:02.010 --> 00:25:03.255\nIs it rebuilding?\n\n424\n00:25:03.255 --> 00:25:08.170\nNo errors, zero, zero, Get The Weather.\n\n425\n00:25:08.170 --> 00:25:13.570\nAnd, something's not quite right.\n\n426\n00:25:13.570 --> 00:25:16.140\nSo how do I figure out what's not right?\n\n427\n00:25:18.260 --> 00:25:24.090\nControl, onSearch, submit,\nlongitude, latitude.\n\n428\n00:25:24.090 --> 00:25:26.340\nIf I look for control it looks good.\n\n429\n00:25:28.200 --> 00:25:32.006\nWe should probably to see if\nthis onSearch method runs.\n\n430\n00:25:32.006 --> 00:25:34.221\nSo console.log.\n\n431\n00:25:37.991 --> 00:25:39.820\nSearching.\n\n432\n00:25:39.820 --> 00:25:42.770\nIf I save, that should recompile.\n\n433\n00:25:42.770 --> 00:25:43.890\nLet's check.\n\n434\n00:25:43.890 --> 00:25:44.500\nMake sure.\n\n435\n00:25:44.500 --> 00:25:45.700\nAnd it did.\n\n436\n00:25:45.700 --> 00:25:47.780\nIt recompiled that search controller.\n\n437\n00:25:47.780 --> 00:25:52.380\nAnd notice it output a new index.html and\nhere we go.\n\n438\n00:25:52.380 --> 00:25:55.410\nLet's see if this button\nactually is clickable.\n\n439\n00:25:55.410 --> 00:25:57.210\nAnd it does click.\n\n440\n00:25:58.450 --> 00:26:01.050\nSo why am I not getting\ninformation back here?\n\n441\n00:26:03.550 --> 00:26:05.680\nSo I've checked back.\n\n442\n00:26:05.680 --> 00:26:08.497\nWhere you finally got your wish Zach.\n\n443\n00:26:08.497 --> 00:26:09.233\nA little live action.\n\n444\n00:26:09.233 --> 00:26:10.100\n&gt;&gt; Live action debugging.\n\n445\n00:26:10.100 --> 00:26:11.530\n&gt;&gt; Live action debugging, right here.\n\n446\n00:26:11.530 --> 00:26:12.360\n&gt;&gt; Always is helpful.\n\n447\n00:26:12.360 --> 00:26:18.140\n&gt;&gt; So Search, Submit,\nOnSearch, button type submit.\n\n448\n00:26:18.140 --> 00:26:20.320\nWe knew it worked in the other one.\n\n449\n00:26:20.320 --> 00:26:22.960\nOur app.\n\n450\n00:26:22.960 --> 00:26:25.120\n&gt;&gt; So Justin it looks like\nit's running and all but\n\n451\n00:26:25.120 --> 00:26:27.330\nit looks like the weather data\nis in a different component.\n\n452\n00:26:27.330 --> 00:26:28.380\nDoes that matter?\n\n453\n00:26:28.380 --> 00:26:31.267\n&gt;&gt; You know what Zach I think\nyou're absolutely correct.\n\n454\n00:26:31.267 --> 00:26:31.951\n&gt;&gt; Ooh.\n\n455\n00:26:31.951 --> 00:26:35.010\n&gt;&gt; I think you're on to something here.\n\n456\n00:26:35.010 --> 00:26:39.570\nLet’s go investigate right sometimes\nwe need alternative perspectives\n\n457\n00:26:39.570 --> 00:26:40.925\nto help us figure out problems.\n\n458\n00:26:40.925 --> 00:26:41.680\n&gt;&gt; Yes.\n\n459\n00:26:41.680 --> 00:26:45.160\n&gt;&gt; So search controller we\nknow this is running and\n\n460\n00:26:45.160 --> 00:26:47.940\nI'm setting the web,\nthe actual data attribute.\n\n461\n00:26:50.700 --> 00:26:55.350\nInside of this component,\nhowever all of my display\n\n462\n00:26:55.350 --> 00:26:59.788\nlogic is over here in the app\ncomponent [SOUND] and so\n\n463\n00:26:59.788 --> 00:27:06.991\nnow that that data's in a different place\nit's not actually gonna render here.\n\n464\n00:27:06.991 --> 00:27:09.140\nIt's actually gonna be part of search.\n\n465\n00:27:09.140 --> 00:27:13.000\nWell, let's just check that out and\n\n466\n00:27:13.000 --> 00:27:17.330\nsee if your hunch is in\nthe right place here.\n\n467\n00:27:17.330 --> 00:27:21.450\nSo we're gonna Save, we're gonna see if\nthat recompiles, and it looks like it is.\n\n468\n00:27:21.450 --> 00:27:23.310\nAnd notice, here, we missed it.\n\n469\n00:27:23.310 --> 00:27:28.470\nThere's a little sidebar there that\nsays WDS and then it refreshed.\n\n470\n00:27:29.500 --> 00:27:32.280\nWebpack Dev Server now, the way we\nhave it set up, it will actually\n\n471\n00:27:32.280 --> 00:27:36.390\nrefresh the browser for you once it's\ndone and you're ready to move on.\n\n472\n00:27:36.390 --> 00:27:39.850\nSo if we go 0, 0, Get The Weather,\n\n473\n00:27:39.850 --> 00:27:44.104\nhey you were right Zach and\nwe've now extracted that logic,\n\n474\n00:27:44.104 --> 00:27:47.950\nthat little bit of logic,\nthat little bit of view into a component.\n\n475\n00:27:47.950 --> 00:27:52.910\nAnd the only thing that is our\napp is we don't even need this\n\n476\n00:27:52.910 --> 00:27:56.740\nanymore because well as it stands\nour app isn't gonna have that.\n\n477\n00:27:56.740 --> 00:27:58.270\nI'm gonna leave it there and\n\n478\n00:27:58.270 --> 00:28:01.920\ncomment it out just as a reminder\nthat we don't technically need it.\n\n479\n00:28:01.920 --> 00:28:03.820\nWhat is our app component composed of?\n\n480\n00:28:03.820 --> 00:28:06.950\nWell it's the search component,\nand that's all you have right now.\n\n481\n00:28:06.950 --> 00:28:14.010\nThere is our component but\nI there's still a few things to do.\n\n482\n00:28:14.010 --> 00:28:19.290\n&gt;&gt; Well it sounds like building the surge\ncomponent part two is in order.\n\n483\n00:28:19.290 --> 00:28:22.410\n&gt;&gt; It absolutely is because\nwe still have some problems.\n\n484\n00:28:22.410 --> 00:28:24.440\nWe now have moved the data,\n\n485\n00:28:24.440 --> 00:28:29.120\nwhich is not ideal because we've\nmade that surge component stateful.\n\n486\n00:28:29.120 --> 00:28:29.990\nAnd we don't want it.\n\n487\n00:28:29.990 --> 00:28:32.740\nWe want it to be presentational and\ninteraction based, and\n\n488\n00:28:32.740 --> 00:28:35.840\nall of the state be in\nthe app component itself.\n\n489\n00:28:35.840 --> 00:28:37.630\n&gt;&gt; So Weather App with Angular JS and\n\n490\n00:28:37.630 --> 00:28:40.580\nExpress, building the search\ncomponent part two will be coming up.\n\n491\n00:28:40.580 --> 00:28:45.170\nThis has been part one, make sure you\nwatch everything in the Weather App with\n\n492\n00:28:45.170 --> 00:28:46.610\nAngularJS and Express series.\n\n493\n00:28:46.610 --> 00:28:49.920\nYou'll be very glad that you did, and\nthank you for watching DevPro.TV.\n\n494\n00:28:49.920 --> 00:28:53.640\nRemember, a good DevPro is\nalways learning, I'm Zach Memos.\n\n495\n00:28:53.640 --> 00:28:54.560\n&gt;&gt; And I'm Justin Dennison.\n\n496\n00:28:54.560 --> 00:28:56.769\n&gt;&gt; And we'll see you very soon.\n\n497\n00:28:56.769 --> 00:29:01.112\n[MUSIC]\n\n",
          "vimeoId": "227069477"
        },
        {
          "description": "Justin and Zach conclude the discussion about building the Search Component, getting the Search to work, communication between the App Component & the Search Component, updating the App, and the Search Component telling the App Component what to search for.",
          "length": "1639",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-6-1-2-building_the_search_component_pt2-072417-PGM.00_27_10_14.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-6-1-2-building_the_search_component_pt2-072417-PGM.00_27_10_14.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-6-1-2-building_the_search_component_pt2-072417-PGM.00_27_10_14.Still001-sm.jpg",
          "title": "Building the Search Component Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.012 --> 00:00:10.012\n[MUSIC]\n\n2\n00:00:13.025 --> 00:00:17.345\nHello, and than you for choosing DevProTV,\nhelping you learn wherever you go.\n\n3\n00:00:17.345 --> 00:00:21.865\nI'm your host, Zach Memos, as we continue\non with Weather App with AngularJS and\n\n4\n00:00:21.865 --> 00:00:24.759\nExpress, building the search\ncomponent part two.\n\n5\n00:00:24.759 --> 00:00:27.415\nThere was a part one and if you missed\nthat please go back and see that.\n\n6\n00:00:27.415 --> 00:00:31.050\nAnyway the person bringing us all the\ninformation we need is the one, the only,\n\n7\n00:00:31.050 --> 00:00:31.927\nJustin Dennison.\n\n8\n00:00:31.927 --> 00:00:33.111\nThe man is right here.\n\n9\n00:00:33.111 --> 00:00:34.444\nHe's right here, he's here.\n\n10\n00:00:34.444 --> 00:00:35.800\n&gt;&gt; I'm here, it's amazing, isn't it?\n\n11\n00:00:35.800 --> 00:00:37.371\n&gt;&gt; It's amazing, it is.\n&gt;&gt; Its the craziest thing,\n\n12\n00:00:37.371 --> 00:00:40.406\nI'm glad that I made it here,\nI was kinda wandering around the halls,\n\n13\n00:00:40.406 --> 00:00:42.733\ngetting lost but\nwe gave him a sandwich and he came in.\n\n14\n00:00:42.733 --> 00:00:46.467\n&gt;&gt; Luckily, you brought me on in here,\nand well, here we are.\n\n15\n00:00:46.467 --> 00:00:50.986\nBut yeah, we're back with a part two,\nand well, Zach, I think it's probably\n\n16\n00:00:50.986 --> 00:00:54.575\nbest if we just do a quick review\nof where we left off in part one.\n\n17\n00:00:54.575 --> 00:00:55.165\n&gt;&gt; Sure it brings us up to speed.\n\n18\n00:00:55.165 --> 00:00:55.815\n&gt;&gt; Does that sound like a good idea?\n\n19\n00:00:55.815 --> 00:00:57.735\n&gt;&gt; Yeah, let's bring this up to speed,\nand then I have a question for you.\n\n20\n00:00:57.735 --> 00:01:01.431\n&gt;&gt; All right, all right, so\nlet's take a look at my screen here and\n\n21\n00:01:01.431 --> 00:01:03.634\nthat way we can see where have we gone.\n\n22\n00:01:03.634 --> 00:01:06.151\nWe have an app controller which\nis part of our app component.\n\n23\n00:01:06.151 --> 00:01:09.554\nWell this is still running,\nI haven't really mess with that,\n\n24\n00:01:09.554 --> 00:01:12.711\nour proxy is running,\nour web pack dev server is running.\n\n25\n00:01:12.711 --> 00:01:15.788\nSo it's recompiling every time\nwe make a change, beautiful,\n\n26\n00:01:15.788 --> 00:01:17.074\neverything is good to go.\n\n27\n00:01:17.074 --> 00:01:21.287\nBut, really we didn't\nmess with this too much.\n\n28\n00:01:21.287 --> 00:01:23.454\nWhat we built is the search component.\n\n29\n00:01:23.454 --> 00:01:26.670\nOur search component has a controller and\ntemplate just like every other component.\n\n30\n00:01:26.670 --> 00:01:27.314\n&gt;&gt; Yes.\n\n31\n00:01:27.314 --> 00:01:29.550\n&gt;&gt; Not necessary that we\nhave a controller, right?\n\n32\n00:01:29.550 --> 00:01:32.445\nWe could actually just\nhave these be templated.\n\n33\n00:01:32.445 --> 00:01:36.666\nI tend to have more controllers more\noften than not just because there may be\n\n34\n00:01:36.666 --> 00:01:38.749\ninteractions, you don't have to.\n\n35\n00:01:38.749 --> 00:01:42.584\nLikewise, you don't really technically\nI guess, have to have a template,\n\n36\n00:01:42.584 --> 00:01:44.951\nyou're not really gonna\nsee anything though.\n\n37\n00:01:44.951 --> 00:01:48.560\nAnd then if we look at the controller,\nwell we get the weather service, and\n\n38\n00:01:48.560 --> 00:01:49.605\nwe have it on search.\n\n39\n00:01:49.605 --> 00:01:53.103\nAnd you'll notice this looks very\nsimilar to what we have in the app.\n\n40\n00:01:53.103 --> 00:01:56.773\nAnd when I click, well, this button right?\n\n41\n00:01:56.773 --> 00:02:00.660\nIt submits this form and it gets the\nweather based on latitude and longitude.\n\n42\n00:02:00.660 --> 00:02:02.893\nSo if we look, it should search for\n\n43\n00:02:02.893 --> 00:02:06.747\nthe weather using the internal latitude,\nand longitude.\n\n44\n00:02:06.747 --> 00:02:10.162\nNow let's go see if\nthat in fact does work.\n\n45\n00:02:10.162 --> 00:02:15.860\nSo if we refresh, and I look up, I don't\nknow, 23 and 23, and I get the weather.\n\n46\n00:02:15.860 --> 00:02:18.228\nNotice it's searching, and it does render.\n\n47\n00:02:18.228 --> 00:02:22.550\nNow, ultimately, in part one,\nwhat we did is we extracted some of that\n\n48\n00:02:22.550 --> 00:02:26.871\nout of the app component, changed\nits template, and just to show you,\n\n49\n00:02:26.871 --> 00:02:31.481\nall the app component is composed of\nnow is the actual search component, and\n\n50\n00:02:31.481 --> 00:02:33.155\nthat's where we ended up.\n\n51\n00:02:33.155 --> 00:02:36.292\nBut Zach you kinda had some questions for\nme.\n\n52\n00:02:36.292 --> 00:02:36.856\n&gt;&gt; Yes.\n\n53\n00:02:36.856 --> 00:02:38.232\n&gt;&gt; So let's go ahead and hear them.\n\n54\n00:02:38.232 --> 00:02:40.600\n&gt;&gt; So we have the search working, right?\n\n55\n00:02:40.600 --> 00:02:44.482\nSo how do we get the app component and\nthe search component to communicate?\n\n56\n00:02:44.482 --> 00:02:48.148\n&gt;&gt; You've definitely nailed on\nsomething that is a problem, right?\n\n57\n00:02:48.148 --> 00:02:50.455\nWe could run into problems\nbecause as it stands,\n\n58\n00:02:50.455 --> 00:02:53.282\nour search component ends up\nbeing a state full component.\n\n59\n00:02:53.282 --> 00:02:55.799\nIt has the weather data internal to it.\n\n60\n00:02:55.799 --> 00:02:59.826\nWell that's gonna be problematic if we\nwanna write other components that compose\n\n61\n00:02:59.826 --> 00:03:00.944\nour web application.\n\n62\n00:03:00.944 --> 00:03:05.627\nBecause we want all of that information\nto be pushed up into the app component.\n\n63\n00:03:05.627 --> 00:03:08.476\nWell we gonna have to do\nsome modification here,\n\n64\n00:03:08.476 --> 00:03:13.064\nwe're gonna have to rethink this a little\nbit and a little bit work backwards.\n\n65\n00:03:13.064 --> 00:03:16.340\nNow the reason I did it this way is\nbecause this might be something you\n\n66\n00:03:16.340 --> 00:03:17.387\nencounter, right?\n\n67\n00:03:17.387 --> 00:03:20.499\nThis is kind of a design process,\na thought process where we go,\n\n68\n00:03:20.499 --> 00:03:23.152\nwe'll have the search it's\nhappening in this place,\n\n69\n00:03:23.152 --> 00:03:26.517\nhow do I get the weather data that's\ninternal to the search, right?\n\n70\n00:03:26.517 --> 00:03:28.825\nIf we come over here to\nthe search controller.\n\n71\n00:03:28.825 --> 00:03:33.600\nThis.weather.get(this.lat, this.long),\n\n72\n00:03:33.600 --> 00:03:38.592\nand then I set the weather\ndata to the search component.\n\n73\n00:03:38.592 --> 00:03:43.968\nHow do I get that back up, and\nis this even the best idea, right?\n\n74\n00:03:43.968 --> 00:03:47.382\nSo how do we communicate effectively?\n\n75\n00:03:47.382 --> 00:03:51.805\nWell, here's what I recommend,\nwe could figure out a way to\n\n76\n00:03:51.805 --> 00:03:56.425\ntake this information and\npush it back into the AppComponent.\n\n77\n00:03:56.425 --> 00:04:00.015\nBut it would almost be best if\nwe just said, hey AppComponent,\n\n78\n00:04:00.015 --> 00:04:02.882\nI need you to search for\nadditional information.\n\n79\n00:04:02.882 --> 00:04:06.994\nHey, go make a search, and so the search\nis telling the AppComponent through some\n\n80\n00:04:06.994 --> 00:04:08.674\nkind of a event process, right?\n\n81\n00:04:08.674 --> 00:04:12.300\nI gonna say event,\nwe're gonna model it as an event.\n\n82\n00:04:12.300 --> 00:04:16.663\nAnd for all intents and purposes it's\ngoing to bubble up into the parent.\n\n83\n00:04:16.663 --> 00:04:19.756\nBut keep in mind this is not necessarily\nlike DOM events or anything.\n\n84\n00:04:19.756 --> 00:04:23.426\nThis is more of a synthetic\nevent that we are using, okay?\n\n85\n00:04:23.426 --> 00:04:27.458\nSo we're gonna bubble that up\ninto the parent component.\n\n86\n00:04:27.458 --> 00:04:30.567\nThe parent component is then\ngoing to do the search for\n\n87\n00:04:30.567 --> 00:04:32.994\nus and then propagate the data back down.\n\n88\n00:04:32.994 --> 00:04:36.503\nSo, bubble up events,\nand then push data down.\n\n89\n00:04:36.503 --> 00:04:41.119\nAnd that will allow us, well, to keep\nall of our state in our app component so\n\n90\n00:04:41.119 --> 00:04:41.854\nit speaks.\n\n91\n00:04:41.854 --> 00:04:45.751\nBut, I've done a lot of talk and,\nZach, are you ready to build?\n\n92\n00:04:45.751 --> 00:04:48.066\n&gt;&gt; I want you to build,\nI want you to build, yes.\n\n93\n00:04:48.066 --> 00:04:51.202\n&gt;&gt; All right, well Zach,\nlet's go ahead and get to building then.\n\n94\n00:04:51.202 --> 00:04:54.509\nI'm gonna pull some of that\ninformation back out of the search,\n\n95\n00:04:54.509 --> 00:04:57.890\nput it into the app component,\nactually it already lives there.\n\n96\n00:04:57.890 --> 00:05:01.931\nI'm gonna simplify it, kinda change\nthe search component to where it is just\n\n97\n00:05:01.931 --> 00:05:04.866\ndelegating that process back\nto the parent component.\n\n98\n00:05:04.866 --> 00:05:09.708\nSo all of our information, our state so to\nspeak, lives inside of a parent component.\n\n99\n00:05:09.708 --> 00:05:13.452\n&gt;&gt; So is the search component gonna tell\nthe app component what to search for?\n\n100\n00:05:13.452 --> 00:05:14.157\n&gt;&gt; Exactly.\n\n101\n00:05:14.157 --> 00:05:15.370\n&gt;&gt; Okay.\n&gt;&gt; That is exactly what\n\n102\n00:05:15.370 --> 00:05:16.386\nwe're gonna be doing.\n\n103\n00:05:16.386 --> 00:05:18.950\nAnd well, I guess there's no better\ntime than now, let's go ahead and\n\n104\n00:05:18.950 --> 00:05:20.589\ntake a look at my screen and\nget that started.\n\n105\n00:05:20.589 --> 00:05:23.437\nNow stay with us,\nthis is gonna be a little bit of a ride.\n\n106\n00:05:23.437 --> 00:05:25.194\nIt may not take a huge amount of time, but\n\n107\n00:05:25.194 --> 00:05:28.266\nthere is some restructuring kind of\nrefactoring that needs to occur.\n\n108\n00:05:28.266 --> 00:05:29.561\n&gt;&gt; We need some banjo music for this.\n\n109\n00:05:29.561 --> 00:05:31.235\n&gt;&gt; We do, we do.\n\n110\n00:05:31.235 --> 00:05:34.158\nWell, you gotta be careful because\nsometimes banjo music means,\n\n111\n00:05:34.158 --> 00:05:36.206\nyou are like I am getting kinda leery,\nright?\n\n112\n00:05:36.206 --> 00:05:39.830\n&gt;&gt; [LAUGH]\n&gt;&gt; You start looking around but not today,\n\n113\n00:05:39.830 --> 00:05:43.446\nnot today, it would be,\nor some Benny Hill music.\n\n114\n00:05:43.446 --> 00:05:46.509\nSo let's go ahead and\nlook at this we have this on search.\n\n115\n00:05:46.509 --> 00:05:48.995\nAnd really I don't need\nthis on search here.\n\n116\n00:05:48.995 --> 00:05:52.707\nI don't even need the weather in here,\nright?\n\n117\n00:05:52.707 --> 00:05:55.470\nI don't need the weather service\ninside the search component.\n\n118\n00:05:55.470 --> 00:06:01.379\nWhat I really want is I want\nthe AppController, right?\n\n119\n00:06:01.379 --> 00:06:04.711\nWhich is part of our AppComponent to,\nwell,\n\n120\n00:06:04.711 --> 00:06:08.142\nkind of hand off a reference\nto this on search.\n\n121\n00:06:08.142 --> 00:06:11.566\nAnd then this on search\ndoes the search for us.\n\n122\n00:06:11.566 --> 00:06:15.138\nSo it's kind of like I'm gonna\nlet you borrow a function and\n\n123\n00:06:15.138 --> 00:06:17.002\nthen you tell me when to run it.\n\n124\n00:06:17.002 --> 00:06:20.726\nAnd it gets kinda weird so\ndo stay with me and in AngularJS,\n\n125\n00:06:20.726 --> 00:06:25.365\nthis requires a little bit of,\nit's kind of weird how we have to do this.\n\n126\n00:06:25.365 --> 00:06:29.486\nAnd part of it is behind the scenes,\nAngularJS is doing some parsing and\n\n127\n00:06:29.486 --> 00:06:33.349\nrearranging from the HTML in order\nto construct these functions.\n\n128\n00:06:33.349 --> 00:06:35.152\nSo we have to keep that in mind.\n\n129\n00:06:35.152 --> 00:06:37.835\nSo I'm gonna leave this here for now, and\n\n130\n00:06:37.835 --> 00:06:41.601\nI'm gonna take this SearchController and\nyou know what?\n\n131\n00:06:41.601 --> 00:06:43.824\nI'm just gonna go ahead and\nget rid of this.\n\n132\n00:06:43.824 --> 00:06:47.813\nI'm going to get rid of weather,\nI'm gonna get rid of this dependency.\n\n133\n00:06:47.813 --> 00:06:51.480\nAnd I'm even going to get\nrid of this onSearch, but\n\n134\n00:06:51.480 --> 00:06:54.052\nI am going to make an update, okay?\n\n135\n00:06:54.052 --> 00:06:58.820\nNow this update is going to be,\nwell what is it going to be?\n\n136\n00:06:58.820 --> 00:07:02.631\nThe update is going to allow us\nto put all of our information,\n\n137\n00:07:02.631 --> 00:07:06.665\nkind of all of our logic in how to\nupdate or call the external one,\n\n138\n00:07:06.665 --> 00:07:09.319\nbecause we have a little\nbit of work to do.\n\n139\n00:07:09.319 --> 00:07:12.842\nTechnically, I could name these\nthe same thing and then make it work.\n\n140\n00:07:12.842 --> 00:07:17.384\nBut I'm trying to separate the fact\nthat we're lending a function from\n\n141\n00:07:17.384 --> 00:07:20.875\nthe AppComponent into\nthe searchComponent to be run.\n\n142\n00:07:20.875 --> 00:07:25.857\nBut then that itself is going to be\ncalled from inside of another function.\n\n143\n00:07:25.857 --> 00:07:29.399\nBy doing that,\nI'm gonna come in my search.html and\n\n144\n00:07:29.399 --> 00:07:32.161\nI'm gonna change this to update, okay?\n\n145\n00:07:32.161 --> 00:07:35.554\nSo there's update, good deal, and okay,\n\n146\n00:07:35.554 --> 00:07:40.152\nwe have our SearchController,\nit's going to run update.\n\n147\n00:07:40.152 --> 00:07:44.099\nLet's just have it console.log this, okay?\n\n148\n00:07:44.099 --> 00:07:46.342\nSo for now we're gonna backtrack,\n\n149\n00:07:46.342 --> 00:07:50.322\nour SearchController is actually\nnot as useful as it once was.\n\n150\n00:07:50.322 --> 00:07:54.938\nCuz all it's gonna do on button click is\nactually log the reference to its own\n\n151\n00:07:54.938 --> 00:07:55.669\ninstance.\n\n152\n00:07:55.669 --> 00:07:56.790\nKinda crazy, but\n\n153\n00:07:56.790 --> 00:08:01.213\nit's gonna allow us to inspect what's\navailable to us in the search.\n\n154\n00:08:01.213 --> 00:08:03.902\nComponent, okay,\nas far as a controller is concerned.\n\n155\n00:08:03.902 --> 00:08:08.096\nSo, let's go ahead and see if I refresh,\nand I click Get The Weather,\n\n156\n00:08:08.096 --> 00:08:13.040\nit actually minifies it, but notice,\nthere's nothing there, right.\n\n157\n00:08:13.040 --> 00:08:19.320\nThis T is the minified version, but it is\nthe search controller for this component.\n\n158\n00:08:19.320 --> 00:08:21.188\nSo it's the instance of\nthe search controller.\n\n159\n00:08:21.188 --> 00:08:26.910\nAll right, now, what information do we\nneed in order to be able to search.\n\n160\n00:08:26.910 --> 00:08:31.240\nWell, if I wanna keep all of my\ngrand state in the app component,\n\n161\n00:08:31.240 --> 00:08:34.530\nI want to pipe down,\nnot only how to change that state.\n\n162\n00:08:34.530 --> 00:08:36.750\nThe function,\nthe delegation of the function.\n\n163\n00:08:36.750 --> 00:08:38.640\nBut also latitude and longitude.\n\n164\n00:08:38.640 --> 00:08:42.780\nBecause latitude and\nlongitude, they may change and\n\n165\n00:08:42.780 --> 00:08:44.540\nI made this one to search again, right?\n\n166\n00:08:44.540 --> 00:08:46.240\nI wanna update, correct?\n\n167\n00:08:46.240 --> 00:08:47.870\nSo when I think of this,\n\n168\n00:08:47.870 --> 00:08:52.430\nI think of this is updating the weather\ninformation and part of that is searching.\n\n169\n00:08:52.430 --> 00:08:57.070\nMaybe I search in initial time but\nthen this application has been open for\n\n170\n00:08:57.070 --> 00:08:59.410\na few hours and I click get weather again.\n\n171\n00:08:59.410 --> 00:09:02.930\nWell that's just going to use\nthe same latitude and longitude, and\n\n172\n00:09:02.930 --> 00:09:05.260\nthen just pipe it back through, okay?\n\n173\n00:09:05.260 --> 00:09:10.600\nSo I have this logging, now I'm\ngonna come into a couple of places.\n\n174\n00:09:10.600 --> 00:09:15.370\nNumber one, is the index.js for\nthe search component.\n\n175\n00:09:15.370 --> 00:09:19.270\nThis is our search component,\ncomponent definition.\n\n176\n00:09:19.270 --> 00:09:23.960\nI'm gonna add a couple of fields here and\nwell, I'm gonna put those under bindings.\n\n177\n00:09:23.960 --> 00:09:27.000\nNow these bindings are going to be how I\n\n178\n00:09:27.000 --> 00:09:31.190\ninject information as well as\nfunctionality from the app component.\n\n179\n00:09:31.190 --> 00:09:36.950\nSo I'm going to say lat is, well, it's\na one way binding, that less than sign.\n\n180\n00:09:36.950 --> 00:09:39.250\nThis is relatively new to AngularJS.\n\n181\n00:09:39.250 --> 00:09:43.100\nBut if we're going to use this\narchitecture should be one way,\n\n182\n00:09:43.100 --> 00:09:47.780\nbecause if I use anything else other than\none way, I may get some weird mutation.\n\n183\n00:09:47.780 --> 00:09:51.430\nAnd sometimes that still happens,\nbut I like one way bindings so\n\n184\n00:09:51.430 --> 00:09:54.140\nthat it automatically breaks those.\n\n185\n00:09:54.140 --> 00:09:57.730\nNow it gets a little iffy if\nI'm passing entire objects and\n\n186\n00:09:57.730 --> 00:10:00.900\nnot just single values, like primitive\nvalues like strings and numbers.\n\n187\n00:10:00.900 --> 00:10:04.300\nSo definitely be careful of that,\nthough we won't have that issue here.\n\n188\n00:10:04.300 --> 00:10:07.380\nSo I'm gonna say lon and\nthen that's less than.\n\n189\n00:10:07.380 --> 00:10:13.510\nAnd then an additional\nbinding here called onSearch,\n\n190\n00:10:13.510 --> 00:10:16.450\nand that's going to be an ampersand,\nall right.\n\n191\n00:10:16.450 --> 00:10:19.000\nNow this onSearch\n\n192\n00:10:19.000 --> 00:10:22.720\nWell that's kind of like that function\nwe have in the app component.\n\n193\n00:10:23.780 --> 00:10:29.080\nBut this is based on how we\ncall the search component\n\n194\n00:10:29.080 --> 00:10:30.340\nfrom a template point of view.\n\n195\n00:10:30.340 --> 00:10:33.050\nAnd you'll see what I\nmean in just a moment.\n\n196\n00:10:34.120 --> 00:10:37.980\nSo we have lat, lon and\nonSearch, all right?\n\n197\n00:10:37.980 --> 00:10:41.990\nSo now if we come back and we refresh,\nand I click Get The Weather,\n\n198\n00:10:41.990 --> 00:10:46.100\nyou will notice that on\nsearch it says is a function.\n\n199\n00:10:47.700 --> 00:10:49.500\nBut what function is it?\n\n200\n00:10:50.680 --> 00:10:52.160\nIt's a little iffy.\n\n201\n00:10:52.160 --> 00:10:58.090\nOkay, so on search,\nwe got this Let's go and\n\n202\n00:10:58.090 --> 00:11:02.070\nlook at app.html.\n\n203\n00:11:02.070 --> 00:11:07.510\nI really want to send this through and\ncall onSearch.\n\n204\n00:11:07.510 --> 00:11:09.320\nNow see this onSearch?\n\n205\n00:11:09.320 --> 00:11:11.930\nSince it's a function on this instance,\nI'm gonna update.\n\n206\n00:11:13.060 --> 00:11:14.240\nPoor choice of words.\n\n207\n00:11:14.240 --> 00:11:15.800\nNaming's hard, by the way.\n\n208\n00:11:15.800 --> 00:11:18.020\nI'm gonna come into the search controller.\n\n209\n00:11:18.020 --> 00:11:21.162\nAnd I'm also gonna call this.onSearch.\n\n210\n00:11:21.162 --> 00:11:24.180\nI'm just gonna call it with no arguments.\n\n211\n00:11:24.180 --> 00:11:25.270\nJust like this.\n\n212\n00:11:25.270 --> 00:11:28.760\nAnd then if I refresh, and there we go.\n\n213\n00:11:28.760 --> 00:11:33.290\nI ran, but\nit didn't actually run anything, right?\n\n214\n00:11:33.290 --> 00:11:35.110\nAnd why is that or did it?\n\n215\n00:11:35.110 --> 00:11:35.610\nWho knows?\n\n216\n00:11:36.850 --> 00:11:40.210\nIt's kinda hard to tell until we got\nsome of this wiring put together.\n\n217\n00:11:40.210 --> 00:11:43.100\nSo keep that in mind if you're like,\nI don't really know what this does.\n\n218\n00:11:44.120 --> 00:11:47.990\nYou'll see in just a moment because these\nare some special naming conventions in\n\n219\n00:11:47.990 --> 00:11:49.110\nAngular JS.\n\n220\n00:11:49.110 --> 00:11:50.820\nThen well if you abide by them,\n\n221\n00:11:50.820 --> 00:11:55.980\nmake sure app fairly fluid If you try to\nwork against them, it gets a little iffy.\n\n222\n00:11:55.980 --> 00:12:00.260\nYou could possibly make them work, but it\nmight be a whole lot of work on your end.\n\n223\n00:12:00.260 --> 00:12:05.470\nSo this onSearch is going to be\nthe function that we call internally.\n\n224\n00:12:05.470 --> 00:12:07.310\nHow do we get a reference to that?\n\n225\n00:12:07.310 --> 00:12:09.330\nIt has to come from somewhere, and\n\n226\n00:12:09.330 --> 00:12:13.510\ninside this component definition, we are\nsaying that it is an expression binding.\n\n227\n00:12:13.510 --> 00:12:15.580\nWhat does that mean?\n\n228\n00:12:15.580 --> 00:12:20.390\nWell, an expression binding says\nthat when I call the search,\n\n229\n00:12:20.390 --> 00:12:25.330\nthere's going to be\na reference to an expression or\n\n230\n00:12:25.330 --> 00:12:27.780\na function passed in\nthrough that attribute.\n\n231\n00:12:29.020 --> 00:12:35.490\nDo notice though, this is, wait for\nit, hold on, this is camel casing\n\n232\n00:12:35.490 --> 00:12:40.070\nby default though, Angular provides\nsome interesting things there.\n\n233\n00:12:40.070 --> 00:12:42.180\nSo let's just start with the latitude and\nthe longitude first,\n\n234\n00:12:42.180 --> 00:12:46.440\nand I'm gonna say ctrl.lat and\nthen I'm gonna say,\n\n235\n00:12:46.440 --> 00:12:52.319\nlon is ctrl.lon and not this wow,\nthat is not what I put there.\n\n236\n00:12:52.319 --> 00:12:55.215\n&gt;&gt; [LAUGH]\n&gt;&gt; So let's try that one more time.\n\n237\n00:12:55.215 --> 00:12:56.840\n.lon.\n\n238\n00:12:56.840 --> 00:13:00.170\nNow, if I come to the app controller,\nI don't have a latitude and\n\n239\n00:13:00.170 --> 00:13:02.270\nlongitude to find yet.\n\n240\n00:13:02.270 --> 00:13:09.090\nJust for this point, I'm gonna say\nthis.lat = 0 and this.lon = 0.\n\n241\n00:13:09.090 --> 00:13:13.330\nSo I'm gonna say the amp\ndefaults to 0,0 on construction\n\n242\n00:13:13.330 --> 00:13:15.050\nof this controller instance.\n\n243\n00:13:15.050 --> 00:13:20.290\nCool, what that means is\nI should see zero zero\n\n244\n00:13:20.290 --> 00:13:24.130\nkind of piped down through\nby these attributes.\n\n245\n00:13:24.130 --> 00:13:27.040\nLatitude, which is\na binding in the component,\n\n246\n00:13:27.040 --> 00:13:31.130\nis going to be equal to whatever\nlatitude is on the controller\n\n247\n00:13:31.130 --> 00:13:35.320\nthat has this entire kind\nof view under its purview.\n\n248\n00:13:35.320 --> 00:13:38.803\nOkay so\nin this case it's the app component.\n\n249\n00:13:38.803 --> 00:13:41.720\nWell, let's see what happens, all right?\n\n250\n00:13:41.720 --> 00:13:45.070\nSo if we refresh and notice it's already\nrefreshed while I've been off screen.\n\n251\n00:13:45.070 --> 00:13:47.380\nThat's because we're using\nthe webpack web server.\n\n252\n00:13:47.380 --> 00:13:51.738\nSo zero zero, if I click get, notice\n\n253\n00:13:51.738 --> 00:13:57.030\nthis the console about log\nproduces the object that you see.\n\n254\n00:13:57.030 --> 00:14:00.030\nIs actually nothing to do with\nthat screen that just came up.\n\n255\n00:14:00.030 --> 00:14:05.630\nBut instead it has to do\nwith these bindings and\n\n256\n00:14:05.630 --> 00:14:08.850\nwhen I click that button I'm logging this.\n\n257\n00:14:08.850 --> 00:14:11.520\nNotice that information\nhas been piped down.\n\n258\n00:14:11.520 --> 00:14:13.936\nThat data's been pushed into the.\n\n259\n00:14:13.936 --> 00:14:18.984\nAll right, likewise, if we come here,\n\n260\n00:14:18.984 --> 00:14:23.490\nand we say, on search, right?\n\n261\n00:14:23.490 --> 00:14:26.750\nWe want to pass that down, and\n\n262\n00:14:26.750 --> 00:14:30.770\nI'm just gonna put a console.log\nhere that says, from the app.\n\n263\n00:14:33.380 --> 00:14:36.270\nOkay, well, how do I pass this through?\n\n264\n00:14:36.270 --> 00:14:42.000\nWell I'm gonna break this up a little bit\njust to make it a little nicer to read and\n\n265\n00:14:42.000 --> 00:14:44.130\nnot go off the screen here.\n\n266\n00:14:44.130 --> 00:14:50.320\nSo I'm gonna say on-search and\nit's important that I on-search.\n\n267\n00:14:50.320 --> 00:14:55.190\nCuz in the bindings if I use camel case in\nthe template, right, anywhere I use it I\n\n268\n00:14:55.190 --> 00:14:58.330\nhave to use the hyphenated version,\nlowercase and hyphenated.\n\n269\n00:14:58.330 --> 00:15:01.590\nThat's just a convention\nthat AngularJS uses to\n\n270\n00:15:01.590 --> 00:15:04.040\nmaintain appropriate naming conventions.\n\n271\n00:15:04.040 --> 00:15:11.010\nAnd naming conventions in the context of\nHTML okay and CSS, those type of things.\n\n272\n00:15:11.010 --> 00:15:15.690\nAnd I'm just gonna say on-search\nNow what is this on-search?\n\n273\n00:15:15.690 --> 00:15:17.980\nThis is the app component search.\n\n274\n00:15:17.980 --> 00:15:21.710\nThis on-search is in fact, well\n\n275\n00:15:21.710 --> 00:15:25.290\nthat's the attribute that's getting passed\ndown through that expression binding.\n\n276\n00:15:25.290 --> 00:15:26.150\nLet's go check it out,\n\n277\n00:15:26.150 --> 00:15:30.030\nlet's see if it works and\nif I click get, hey look at that.\n\n278\n00:15:30.030 --> 00:15:34.600\nIt says, from the app, well there you go.\n\n279\n00:15:34.600 --> 00:15:37.350\nNotice this is from the app.\n\n280\n00:15:37.350 --> 00:15:41.260\nIt ran not only this function, right.\n\n281\n00:15:41.260 --> 00:15:46.847\nConsole.log and though this context,\nso it prints out that object.\n\n282\n00:15:46.847 --> 00:15:52.447\nBut then this.onSearch is actually\na reference to onSearch here, and\n\n283\n00:15:52.447 --> 00:15:58.808\nthat's because we've passed the ability,\nto call that function to the child.\n\n284\n00:15:58.808 --> 00:16:04.169\nNow, this is all great and\nwonderful and that's awesome, right,\n\n285\n00:16:04.169 --> 00:16:09.450\nexcept we don't know if it's\nactually working, correct?\n\n286\n00:16:09.450 --> 00:16:14.590\nSo let's go check it out,\nI'm going to uncomment this to\n\n287\n00:16:14.590 --> 00:16:19.520\nsee if that data comes back, as a result,\nI'm gonna come to the search component.\n\n288\n00:16:19.520 --> 00:16:24.325\nI don't actually want to show this in the\nsearch per se, get rid of that here, and\n\n289\n00:16:24.325 --> 00:16:28.340\nnow it's recompiling, wait for\nit to refresh, and there we go.\n\n290\n00:16:28.340 --> 00:16:32.910\nLet's go ahead and get the app and\nboom, it does search all right, so\n\n291\n00:16:32.910 --> 00:16:37.489\nwe've pushed that functionality in\nthat data back into the app component.\n\n292\n00:16:37.489 --> 00:16:42.130\nBut we should always check,\nget the weather.\n\n293\n00:16:44.410 --> 00:16:48.731\nIt's always 00, that is a problem,\n\n294\n00:16:48.731 --> 00:16:52.140\nthe one final problem for communication,\n\n295\n00:16:52.140 --> 00:16:57.290\nwe need to be able to search\nbased on user input, right?\n\n296\n00:16:57.290 --> 00:16:59.570\n&gt;&gt; We need a final solution for\nthat problem.\n\n297\n00:16:59.570 --> 00:17:02.918\n&gt;&gt; We do, so if we come over here,\nwhy does that occur?\n\n298\n00:17:02.918 --> 00:17:06.403\nWell, in search.html, latitude and\n\n299\n00:17:06.403 --> 00:17:11.580\nlongitude are passed down\nfrom the app component.\n\n300\n00:17:11.580 --> 00:17:17.161\nWhen I call update, all it does is\ncall the onSearch binding which\n\n301\n00:17:17.161 --> 00:17:23.510\ngoes back to this onSearch which\nis this app controller's onSearch.\n\n302\n00:17:23.510 --> 00:17:27.190\nThere is nothing here that\nallows it to take latitude and\n\n303\n00:17:27.190 --> 00:17:30.200\nlongitudes that are input into that form.\n\n304\n00:17:30.200 --> 00:17:35.650\nIt's always going to be the default\nlatitude and longitude that is here.\n\n305\n00:17:35.650 --> 00:17:40.470\nWell, that's problematic because really\nwhat we want is a search component to say,\n\n306\n00:17:40.470 --> 00:17:41.740\nhey, someone search.\n\n307\n00:17:41.740 --> 00:17:46.820\nI'm gonna notify you of new latitude and\nnew longitude and new weather data, right.\n\n308\n00:17:46.820 --> 00:17:48.810\nOr actually, new latitude and\n\n309\n00:17:48.810 --> 00:17:52.500\nlongitude, but also I want you\nto search for new weather data.\n\n310\n00:17:52.500 --> 00:17:56.993\nSo we're pushing that responsibility back\nup to the app component that it then\n\n311\n00:17:56.993 --> 00:17:59.047\ndelegates to the weather service.\n\n312\n00:17:59.047 --> 00:18:04.178\nAll right, so how do we accomplish this,\nwell this onSearch, it would almost\n\n313\n00:18:04.178 --> 00:18:09.862\nbe nice if I could do lat and long,\nexcept here is where the weird part goes.\n\n314\n00:18:09.862 --> 00:18:13.240\nIn AngularJS, passing this latitude and\n\n315\n00:18:13.240 --> 00:18:17.140\nlongitude becomes a little problematic\nbecause it is expecting an object.\n\n316\n00:18:18.430 --> 00:18:21.248\nAnd the reason it's expecting\nan object is due to behind the scenes\n\n317\n00:18:21.248 --> 00:18:22.419\nimplementation details.\n\n318\n00:18:22.419 --> 00:18:26.200\nWhere it does some parsing of arguments\nand what you have to pass through.\n\n319\n00:18:26.200 --> 00:18:30.040\nSo we're gonna use some new ES6\ndestructuring syntax to be able to pass\n\n320\n00:18:30.040 --> 00:18:35.080\nthat object but still have,\nwell this kind of look.\n\n321\n00:18:35.080 --> 00:18:38.040\nSo I'm gonna surround these\nwith curly braces and\n\n322\n00:18:38.040 --> 00:18:41.550\nnow this is gonna pull lat and\nlon off of the object.\n\n323\n00:18:43.270 --> 00:18:48.367\nAnd then instead of using\nthis.lat it's going to say,\n\n324\n00:18:48.367 --> 00:18:53.572\nlat and this.lon is gonna say lon and\nas a matter of fact,\n\n325\n00:18:53.572 --> 00:18:58.687\nI'm gonna say, this.lat = lat and\nthis.lon = lon.\n\n326\n00:18:58.687 --> 00:19:03.438\nAnd the reason being is now I'm\nbubbling that event that communicates\n\n327\n00:19:03.438 --> 00:19:05.370\nwith the app component.\n\n328\n00:19:05.370 --> 00:19:09.880\nTo let it know to update Search for\nnew weather and then it updates itself.\n\n329\n00:19:09.880 --> 00:19:13.320\nSo none of that responsibility is in\nthe search, the search is more or\n\n330\n00:19:13.320 --> 00:19:17.810\nless a UI that has some\ninteraction based logic, right?\n\n331\n00:19:17.810 --> 00:19:19.050\nWhen you click this button, do this,\n\n332\n00:19:19.050 --> 00:19:22.759\nbut the app component is still\nrunning the show, so to speak.\n\n333\n00:19:24.070 --> 00:19:29.450\nSo, it's not quite there, it's not\nquite gonna work, if we come to app,\n\n334\n00:19:29.450 --> 00:19:37.660\nwhen I call on search, I'm going to tell\nit, it's looking for an event, okay?\n\n335\n00:19:37.660 --> 00:19:42.080\nNow this event is not\nnecessarily like a dom event,\n\n336\n00:19:42.080 --> 00:19:45.050\nit's a custom event that is more or\nless just an object.\n\n337\n00:19:45.050 --> 00:19:48.880\nBut we like to think of bubbling\nup events into parents and\n\n338\n00:19:48.880 --> 00:19:52.470\nthen pushing data back down into children,\nokay?\n\n339\n00:19:52.470 --> 00:19:58.660\nWell, how do we get that, if we come\nover here to search, that calls update?\n\n340\n00:19:59.750 --> 00:20:04.890\nIf we come to our search controller\nwhat event do we want to\n\n341\n00:20:04.890 --> 00:20:09.070\nplace there,\nwhat information do we need for the event?\n\n342\n00:20:10.590 --> 00:20:14.700\nWell, we just need to get the new latitude\nand longitude that was passed down, right?\n\n343\n00:20:14.700 --> 00:20:16.840\nWe passed the initial values and\n\n344\n00:20:16.840 --> 00:20:20.470\nthen we updated them in the UI and\nthen we click search.\n\n345\n00:20:20.470 --> 00:20:24.520\nThat tells the app component, hey, someone\ninteracted, I need you to change these\n\n346\n00:20:24.520 --> 00:20:29.750\nvalues and get new weather data,\nall right, so, how do I build that object?\n\n347\n00:20:29.750 --> 00:20:33.540\nWell, I'm gonna create an event,\nand it's gonna be an object,\n\n348\n00:20:35.770 --> 00:20:39.515\nand this object is going\nto be composed of lat,\n\n349\n00:20:39.515 --> 00:20:44.160\nand it's gonna be this.lat and\nlon, it's gonna be this.lon.\n\n350\n00:20:44.160 --> 00:20:46.800\nAnd the reason I'm doing this is so\n\n351\n00:20:46.800 --> 00:20:51.630\nI can now pass this event\nthrough onSearch just like this.\n\n352\n00:20:51.630 --> 00:20:56.970\nSo now I compose the event and\nthen call onSearch with the event object.\n\n353\n00:20:56.970 --> 00:20:59.830\nThat destructuring that we've\nput in the app controller\n\n354\n00:20:59.830 --> 00:21:01.140\nshould destructure lat and long.\n\n355\n00:21:01.140 --> 00:21:05.990\nThose have to match what we've put as\nthe event keys, so these key value pairs.\n\n356\n00:21:08.030 --> 00:21:15.170\nFingers crossed,\nthis should create the highway,\n\n357\n00:21:15.170 --> 00:21:20.260\nthe one way in, one way out highway,\nit's a little easier to reason about.\n\n358\n00:21:21.940 --> 00:21:23.465\nThis is up until recently,\n\n359\n00:21:23.465 --> 00:21:27.430\nAngularJS didn't necessarily have\nthe ability to do all of what we're doing.\n\n360\n00:21:27.430 --> 00:21:30.630\nHowever, this is going to allow\nyou flexibility to migrate\n\n361\n00:21:30.630 --> 00:21:33.510\nfrom AngularJS if you want to.\n\n362\n00:21:33.510 --> 00:21:37.100\nBut also, I think it's a whole lot easier\nto reason about it if you're like,\n\n363\n00:21:37.100 --> 00:21:39.830\nall of my data is in my app component.\n\n364\n00:21:39.830 --> 00:21:42.960\nEverything else is presentational and\ninteractions.\n\n365\n00:21:42.960 --> 00:21:47.476\nAnd then I just inform my app component\nand then it does all of its jobs and\n\n366\n00:21:47.476 --> 00:21:50.874\nthen it propagates back out\nif there's any changes.\n\n367\n00:21:50.874 --> 00:21:54.339\nIt's a whole lot easier to manage than,\nwell this changed over here, so\n\n368\n00:21:54.339 --> 00:21:57.370\nnow I need to update this,\nwhich also needs to update this.\n\n369\n00:21:57.370 --> 00:22:01.740\nIf you have data in all of those places,\nit becomes problematic, well\n\n370\n00:22:01.740 --> 00:22:06.240\nwe're gonna keep our fingers crossed and\nmake sure hopefully that this still works.\n\n371\n00:22:06.240 --> 00:22:11.343\nSo we should see from the app and\nit's recompiling and there it is,\n\n372\n00:22:11.343 --> 00:22:15.555\nif I click,\ncannot read property lat of undefined.\n\n373\n00:22:18.125 --> 00:22:23.355\nSo of at t.value, well this is\nproblematic, we're real close but\n\n374\n00:22:23.355 --> 00:22:29.532\nwe're about to enter some of your favorite\ntime Zach, live action debugging.\n\n375\n00:22:29.532 --> 00:22:33.124\n&gt;&gt; [LAUGH]\n&gt;&gt; And for the problem here is it cannot\n\n376\n00:22:33.124 --> 00:22:37.836\nread property lat of undefined,\nwhat does that mean?\n\n377\n00:22:37.836 --> 00:22:42.842\nHm, well if I come in here and\nI look, where does that lat\n\n378\n00:22:42.842 --> 00:22:47.700\nof undefined,\nwhere's the undefined coming from?\n\n379\n00:22:47.700 --> 00:22:53.867\nThe only place that I can think of is\nthis actual piece here, all right.\n\n380\n00:22:53.867 --> 00:22:59.139\nOkay, well let's make sure,\nthat this works.\n\n381\n00:23:02.273 --> 00:23:06.754\nAnd refresh, and we gotta wait for\nit to compile, and\n\n382\n00:23:06.754 --> 00:23:11.235\nit's still refreshing,\nthere we go, and if we run,\n\n383\n00:23:11.235 --> 00:23:15.034\nthere's lat and lon, okay, that's good.\n\n384\n00:23:15.034 --> 00:23:18.740\nAnd now this.onSearch(event), so\n\n385\n00:23:18.740 --> 00:23:23.229\nthat calls up here, and\nyou know what, just for\n\n386\n00:23:23.229 --> 00:23:28.840\nthe time being,\nlet's just say the event comes in like so,\n\n387\n00:23:28.840 --> 00:23:32.449\nconsole.log('app' event').\n\n388\n00:23:32.449 --> 00:23:37.303\nNow there are better ways to debug this\nbut this is one way that deliberately\n\n389\n00:23:37.303 --> 00:23:42.230\nplaced console.logs help us think\nabout the actual application.\n\n390\n00:23:42.230 --> 00:23:46.524\nSo if I come and I refresh and I run, so\n\n391\n00:23:46.524 --> 00:23:51.375\nsomething's a little weird about that,\n\n392\n00:23:51.375 --> 00:23:56.794\nright, app undefined, why is it undefined?\n\n393\n00:23:56.794 --> 00:24:00.417\nWell, I think I know what's going on here.\n\n394\n00:24:03.404 --> 00:24:09.288\nHopefully so, I kind of messed up here,\nthis is not the event,\n\n395\n00:24:09.288 --> 00:24:16.610\nwe'll call this payload okay,\nI misspoke here, I'm not infallible.\n\n396\n00:24:16.610 --> 00:24:18.410\n&gt;&gt; No you're not, nor is anyone.\n\n397\n00:24:18.410 --> 00:24:20.509\n&gt;&gt; This should actually be,\n\n398\n00:24:21.770 --> 00:24:25.880\nI had nested objects like this which\nis you know that weird part I said?\n\n399\n00:24:25.880 --> 00:24:28.440\nThis is one of those weird parts so\nthis payload.\n\n400\n00:24:29.710 --> 00:24:33.780\nSo if I say payload and payload.\n\n401\n00:24:33.780 --> 00:24:36.850\nSo the payload is actually\ngonna be kind of teased apart.\n\n402\n00:24:36.850 --> 00:24:42.893\nAll right so then has to match this\nevent and then it's going to look for\n\n403\n00:24:42.893 --> 00:24:47.502\nevent the key inside of\nthe payload that you send it and\n\n404\n00:24:47.502 --> 00:24:51.203\nif you come over here, there we go, okay?\n\n405\n00:24:51.203 --> 00:24:58.570\nSo let's make sure that,\nwell I'm not a dirty liar,\n\n406\n00:24:58.570 --> 00:25:03.780\nit is possible I'm a dirty liar.\n\n407\n00:25:03.780 --> 00:25:07.863\nSo if I come and refresh, and\nI click go, [NOISE] there we go.\n\n408\n00:25:07.863 --> 00:25:10.914\nSo the event is latitude and\nlongitude, and\n\n409\n00:25:10.914 --> 00:25:14.140\nyou have to do this double\nnesting of objects.\n\n410\n00:25:14.140 --> 00:25:15.740\nAnd that's just one of\nthe weirdnesses here.\n\n411\n00:25:17.060 --> 00:25:21.550\nNow that that's said, we can actually\ngo back, get rid of this part,\n\n412\n00:25:23.010 --> 00:25:27.390\ndo the destructuring like we\noriginally wanted to lat, lon.\n\n413\n00:25:28.390 --> 00:25:34.160\nRefresh, wait for\nit to refresh and get the weather.\n\n414\n00:25:34.160 --> 00:25:35.840\nThere it is for 0, 0.\n\n415\n00:25:35.840 --> 00:25:40.880\nNow if I go up to 0, 6 and notice\nthat it does in fact update and I've\n\n416\n00:25:40.880 --> 00:25:45.530\nbubbled up an event and then all of the\ndata manipulation is in the app component.\n\n417\n00:25:45.530 --> 00:25:51.250\nNotice, my search controller,\nall it has is this update function.\n\n418\n00:25:51.250 --> 00:25:53.540\nI'm gonna remove this console.log.\n\n419\n00:25:53.540 --> 00:25:56.950\nYeah it's a little complicated because I\nhave to do this double nested object and\n\n420\n00:25:56.950 --> 00:26:02.230\nthat has to do with background\nimplementation details of Angular JS.\n\n421\n00:26:02.230 --> 00:26:05.170\nThere's no easy way around this,\nI know it's a little weird.\n\n422\n00:26:05.170 --> 00:26:07.650\nWe could have done two way data binding.\n\n423\n00:26:07.650 --> 00:26:11.550\nI like this better because it's all\nan easier way to think about it\n\n424\n00:26:11.550 --> 00:26:14.120\nonce you kind of wrap your head around it.\n\n425\n00:26:14.120 --> 00:26:17.290\nUltimately this surge controller\nhas a single update function\n\n426\n00:26:17.290 --> 00:26:18.910\nthat keeps this all in check for you.\n\n427\n00:26:18.910 --> 00:26:23.700\nThere is a way to even make this simpler,\nbut it's for,\n\n428\n00:26:23.700 --> 00:26:27.060\nwe kinda sacrifice some readability,\nso I don't particularly like that.\n\n429\n00:26:27.060 --> 00:26:30.530\nBut our search component,\nwell all it does is search, and\n\n430\n00:26:30.530 --> 00:26:33.080\nit tells the app component\nwhat to search for.\n\n431\n00:26:33.080 --> 00:26:35.120\nAnd the app component\ntakes care of the rest.\n\n432\n00:26:35.120 --> 00:26:36.890\n&gt;&gt; Fantastic job as usual Justin,\n\n433\n00:26:36.890 --> 00:26:40.940\nwhether app with Angular JS at express,\nbuilding the search component part two.\n\n434\n00:26:40.940 --> 00:26:43.750\nThere was a part one,\nmake sure you watch both parts,\n\n435\n00:26:43.750 --> 00:26:49.840\nin fact watch every video in the series of\nwhether app with Angular JS at express.\n\n436\n00:26:49.840 --> 00:26:52.190\nJustin do you have anything you would\nlike to add before we say good by.\n\n437\n00:26:52.190 --> 00:26:55.988\n&gt;&gt; Well, we're just getting started so you\ndefinitely need to stay tuned because I\n\n438\n00:26:55.988 --> 00:27:00.550\nhave a few things planned to,\nwe'll expand out on what we're doing.\n\n439\n00:27:00.550 --> 00:27:01.605\n&gt;&gt; A tease.\n\n440\n00:27:01.605 --> 00:27:04.615\n[LAUGH] Weather App with Angular JS and\nExpress.\n\n441\n00:27:04.615 --> 00:27:06.970\nHey, thank you for watching DevProTV.\n\n442\n00:27:06.970 --> 00:27:08.840\nRemember a good DevPro's always learning.\n\n443\n00:27:08.840 --> 00:27:09.780\nI'm Zach Memos.\n\n444\n00:27:09.780 --> 00:27:10.620\n&gt;&gt; And I'm Justin Dennison.\n\n445\n00:27:10.620 --> 00:27:11.376\n&gt;&gt; And we will see you very soon.\n\n446\n00:27:11.376 --> 00:27:16.782\n[MUSIC]\n\n",
          "vimeoId": "227070209"
        },
        {
          "description": "Justin and zach discuss next steps after getting the Search Component working, how to present the weather data to the user, building some Dumb Components, one-way Data Bindings, two-way Data Bindings, and changing the code as needed.",
          "length": "1454",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-7-1-current_weather_component-072417-PGM.00_24_04_16.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-7-1-current_weather_component-072417-PGM.00_24_04_16.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-7-1-current_weather_component-072417-PGM.00_24_04_16.Still001-sm.jpg",
          "title": "Current Weather Component",
          "transcript": "WEBVTT\n\n1\n00:00:00.005 --> 00:00:10.005\n[MUSIC]\n\n2\n00:00:12.393 --> 00:00:16.875\nThank you for choosing DevPro TV,\nhelping you learn wherever you go.\n\n3\n00:00:16.875 --> 00:00:21.671\nI'm Zach Memos, your host, as we continue\non with Weather App with AngularJS and\n\n4\n00:00:21.671 --> 00:00:22.305\nExpress.\n\n5\n00:00:22.305 --> 00:00:26.482\nAnd we're gonna be looking at current\nweather components right now,\n\n6\n00:00:26.482 --> 00:00:28.264\ncurrent weather component.\n\n7\n00:00:28.264 --> 00:00:31.080\nAnd the person bringing us all the\ninformation we need is the one, the only,\n\n8\n00:00:31.080 --> 00:00:31.788\nJustin Dennison.\n\n9\n00:00:31.788 --> 00:00:32.933\nHey Justin, good to see you.\n\n10\n00:00:32.933 --> 00:00:37.399\n&gt;&gt; Well Zach, it is great to see you as\nwell, and I do like that little intro.\n\n11\n00:00:37.399 --> 00:00:40.293\nWeather App, with AngularJS and Express.\n\n12\n00:00:40.293 --> 00:00:41.014\nI do enjoy that.\n\n13\n00:00:41.014 --> 00:00:43.206\n&gt;&gt; [LAUGH]\n&gt;&gt; I'm like, wow, what are we doing?\n\n14\n00:00:43.206 --> 00:00:44.015\nThat's-\n&gt;&gt; It's dramatic.\n\n15\n00:00:44.015 --> 00:00:45.350\n&gt;&gt; That's me-\n&gt;&gt; It's got power.\n\n16\n00:00:45.350 --> 00:00:46.460\n&gt;&gt; So yeah, how are you today?\n\n17\n00:00:46.460 --> 00:00:46.999\n&gt;&gt; Well, I'm doing great.\n\n18\n00:00:46.999 --> 00:00:47.730\nI'm doing great.\n\n19\n00:00:47.730 --> 00:00:51.216\nAnd I'm very excited that we're continuing\non with Weather App with AngularJS\n\n20\n00:00:51.216 --> 00:00:51.849\nand Express.\n\n21\n00:00:51.849 --> 00:00:55.168\nAnd as we move forward, and\nwe have the search working, right?\n\n22\n00:00:55.168 --> 00:00:58.528\nWe need to figure out some way to present\nthe weather data to the user, right?\n\n23\n00:00:58.528 --> 00:01:00.879\n&gt;&gt; Mm-hm.\n&gt;&gt; So, how are we gonna do that?\n\n24\n00:01:00.879 --> 00:01:05.635\n&gt;&gt; Well we've seen a little snippet of\nabout how we're going to accomplish this\n\n25\n00:01:05.635 --> 00:01:09.671\nin the search, actually,\nbeing able to push data down, right?\n\n26\n00:01:09.671 --> 00:01:14.067\nBut in addition to that,\nwe have to make a few decisions, right?\n\n27\n00:01:14.067 --> 00:01:18.298\nSo we're gonna build, well, this is a dumb\ncomponent because it actually only knows\n\n28\n00:01:18.298 --> 00:01:20.260\nabout the information that we tell it.\n\n29\n00:01:20.260 --> 00:01:23.478\nNow, it can be dumb or\nit can be presentational.\n\n30\n00:01:23.478 --> 00:01:25.858\nSo maybe we'll stick with presentational,\n\n31\n00:01:25.858 --> 00:01:28.936\nit doesn't have quite a negative\nof a connotation there.\n\n32\n00:01:28.936 --> 00:01:31.729\nSo this is a presentational component,\nand ultimately,\n\n33\n00:01:31.729 --> 00:01:35.668\nit might have some UI interactions, maybe\npoint and clicks or some other things.\n\n34\n00:01:35.668 --> 00:01:39.262\nSo, we will build a controller,\nbut most of the time,\n\n35\n00:01:39.262 --> 00:01:43.260\nit's just going to get some data\nthat is pushed down into it.\n\n36\n00:01:43.260 --> 00:01:46.623\nNow, sadly, the naming here,\nbecause of some conventions in HTML,\n\n37\n00:01:46.623 --> 00:01:49.080\nI'm not necessarily gonna\nbe able to call it data.\n\n38\n00:01:49.080 --> 00:01:52.072\nI'm gonna have to call it\na couple other things.\n\n39\n00:01:52.072 --> 00:01:56.945\nBut we're gonna push data in and then let\nthe current weather component just more or\n\n40\n00:01:56.945 --> 00:01:58.209\nless render itself.\n\n41\n00:01:58.209 --> 00:02:00.300\n&gt;&gt; Now since you brought\nup the topic of data.\n\n42\n00:02:00.300 --> 00:02:04.375\nHow are we gonna get the data from the app\ncomponent into this component that we're\n\n43\n00:02:04.375 --> 00:02:04.978\nbuilding?\n\n44\n00:02:04.978 --> 00:02:08.670\n&gt;&gt; Well, we're actually gonna utilize\nsome of those bindings that we saw with\n\n45\n00:02:08.670 --> 00:02:09.310\nthe search.\n\n46\n00:02:09.310 --> 00:02:12.588\nWe won't need it to be quite\nas complex with the search.\n\n47\n00:02:12.588 --> 00:02:15.799\nAnd we're going to not send\njust primitive values, but\n\n48\n00:02:15.799 --> 00:02:18.820\ninstead we're gonna send an object,\nmore or less.\n\n49\n00:02:18.820 --> 00:02:21.581\nSo I think the best thing to do\nis first take a look at the data,\n\n50\n00:02:21.581 --> 00:02:23.380\nwhat kind of data are we talking about?\n\n51\n00:02:23.380 --> 00:02:27.089\nTo allow that to drive the design,\nand then we'll actually build it.\n\n52\n00:02:27.089 --> 00:02:29.717\nSo let's go ahead and\ntake a look at my screen here, and\n\n53\n00:02:29.717 --> 00:02:32.071\nsee where we are as far as\nhow things are running.\n\n54\n00:02:32.071 --> 00:02:34.564\nI still have the proxy running.\n\n55\n00:02:34.564 --> 00:02:37.134\nI haven't touched that, that's all good.\n\n56\n00:02:37.134 --> 00:02:40.791\nAnd all I'm doing is getting that up and\nrunning in a separate tab.\n\n57\n00:02:40.791 --> 00:02:43.585\nAnd then in this other tab,\nI still have webpack running, and\n\n58\n00:02:43.585 --> 00:02:45.701\nthat's constantly rebuilding our project.\n\n59\n00:02:45.701 --> 00:02:50.181\nBut now, ultimately what I want is I'm\ngonna come to the AppComponent and\n\n60\n00:02:50.181 --> 00:02:51.925\nlook in the AppController.\n\n61\n00:02:51.925 --> 00:02:54.812\nAnd this search,\nI'm gonna remove this console.log.\n\n62\n00:02:54.812 --> 00:02:58.222\nAnd this search, I want to, well,\n\n63\n00:02:58.222 --> 00:03:02.886\nwhen it comes back,\nI'm going to temporarily,\n\n64\n00:03:02.886 --> 00:03:08.142\nthis console.log, well,\nthe weather data, okay?\n\n65\n00:03:08.142 --> 00:03:11.604\nSo I'm going to add a .then\nstatement that I know\n\n66\n00:03:11.604 --> 00:03:14.398\nwill run after this .then statement.\n\n67\n00:03:14.398 --> 00:03:15.670\nAnd I'll come back and remove this.\n\n68\n00:03:15.670 --> 00:03:18.789\nNow, I could change this\nto some curly braces.\n\n69\n00:03:18.789 --> 00:03:22.220\nBut it's whatever it is.\n\n70\n00:03:22.220 --> 00:03:25.227\nI'm gonna put an empty array here, or\nexcuse me, empty set of parentheses.\n\n71\n00:03:25.227 --> 00:03:28.731\nThat says that there are no parameters\ncoming in to this fat arrow function, and\n\n72\n00:03:28.731 --> 00:03:30.313\nI'm just gonna say console.log.\n\n73\n00:03:30.313 --> 00:03:35.101\nNow there's definitely side effects\nas far as the type of operation\n\n74\n00:03:35.101 --> 00:03:36.782\nthat I'm completing.\n\n75\n00:03:36.782 --> 00:03:41.520\nBut I wanna see what is stored\nin this.data once we get\n\n76\n00:03:41.520 --> 00:03:44.692\npast this.weather.get, okay?\n\n77\n00:03:44.692 --> 00:03:49.149\nSo I'm gonna come over here, I'm gonna\nrefresh, and I'm gonna get the weather.\n\n78\n00:03:49.149 --> 00:03:50.490\nNow, what is stored?\n\n79\n00:03:50.490 --> 00:03:53.567\nNow, I know I have it right here.\n\n80\n00:03:53.567 --> 00:03:57.449\nHowever, I want it to be able to fold and\nunfold,\n\n81\n00:03:57.449 --> 00:04:00.777\njust for context of what are we building.\n\n82\n00:04:00.777 --> 00:04:04.910\nWe will always store the latitude and\nlongitude, all right?\n\n83\n00:04:04.910 --> 00:04:10.190\nAnd that's based on the user\ninteraction when we search.\n\n84\n00:04:10.190 --> 00:04:15.148\nBut then also, we have these main\ntypes of weather data, all right?\n\n85\n00:04:15.148 --> 00:04:16.844\nExcuse me, there are three here.\n\n86\n00:04:16.844 --> 00:04:21.249\nThere's actually a fourth one called\nminutely that doesn't always exist.\n\n87\n00:04:21.249 --> 00:04:22.916\nIt depends on the part of the world.\n\n88\n00:04:22.916 --> 00:04:24.116\nWe're at zero zero,\n\n89\n00:04:24.116 --> 00:04:28.262\nwhich I'm pretty sure is in the middle\nof the ocean off of western Africa.\n\n90\n00:04:28.262 --> 00:04:31.718\nSo I don't know if\nminutely is a good metric.\n\n91\n00:04:31.718 --> 00:04:34.282\nBut if you're over land,\nright, where minutely,\n\n92\n00:04:34.282 --> 00:04:36.041\nthings can change fairly quickly.\n\n93\n00:04:36.041 --> 00:04:39.970\nThe ocean is kinda more\nsteady state than land.\n\n94\n00:04:39.970 --> 00:04:42.520\nYou know about those\nafternoon thunderstorms that,\n\n95\n00:04:42.520 --> 00:04:45.220\njust torrential downpour and\nthen there's sun, right?\n\n96\n00:04:45.220 --> 00:04:48.547\nSo minutely, you might get the next\ncouple of hours and go, okay,\n\n97\n00:04:48.547 --> 00:04:50.051\nI see that this is gonna happen.\n\n98\n00:04:50.051 --> 00:04:53.330\nSo minutely is not always defined,\nso we always have to plan for that.\n\n99\n00:04:53.330 --> 00:04:57.432\nBut we have currently, daily,\nand hourly, and most of the time,\n\n100\n00:04:57.432 --> 00:05:02.362\nmost of the time, I make no guarantees\nbecause I didn't write the Dark Sky API.\n\n101\n00:05:02.362 --> 00:05:05.110\nMost of the time,\nthese are available, all right?\n\n102\n00:05:05.110 --> 00:05:08.780\nWhat we're messing with is\nthis currently portion.\n\n103\n00:05:08.780 --> 00:05:13.872\nNow, I dropped this currently because\nthis.data has a currently attribute.\n\n104\n00:05:13.872 --> 00:05:19.369\nSo this.data.currently is just this block,\nit's an object.\n\n105\n00:05:19.369 --> 00:05:21.400\nAnd what does it contain in it?\n\n106\n00:05:21.400 --> 00:05:25.161\nAn apparentTemperature, cloudCover,\ndewPoint, humidity, icon.\n\n107\n00:05:25.161 --> 00:05:27.340\nHm, I'll have to come\nback to that icon thing.\n\n108\n00:05:27.340 --> 00:05:33.540\nozone, precipIntensity, precipProbability,\npressure, summary, temperature.\n\n109\n00:05:33.540 --> 00:05:35.932\nSo we have a few, and\nmy personal favorite, uvIndex.\n\n110\n00:05:35.932 --> 00:05:37.810\nIt's very near and\ndear to my heart, right?\n\n111\n00:05:37.810 --> 00:05:42.560\nIt keeps me from going outside and\ngoing, the sun is burning me!\n\n112\n00:05:42.560 --> 00:05:46.089\nOr whether I use SPF 50 or SPF 1000.\n\n113\n00:05:46.089 --> 00:05:48.990\nSo we have all of these things here.\n\n114\n00:05:48.990 --> 00:05:51.746\nThey're just numbers, for the most part,\nwe have a couple of strings.\n\n115\n00:05:51.746 --> 00:05:54.666\nI like this summary, it's clear outside.\n\n116\n00:05:54.666 --> 00:05:57.803\nAnd the icon \"clear-night,\" well,\n\n117\n00:05:57.803 --> 00:06:02.170\nthis is zero zero, so\nit's actually nighttime there.\n\n118\n00:06:02.170 --> 00:06:04.783\nThese two strings, well summary,\nwe could just display.\n\n119\n00:06:04.783 --> 00:06:08.440\nBut this \"clear-night,\" we may end up\n\n120\n00:06:08.440 --> 00:06:12.640\ndoing some interesting\nthings with that icon.\n\n121\n00:06:12.640 --> 00:06:15.657\nUltimately, what we're gonna do is just\nmock out some of these components that we\n\n122\n00:06:15.657 --> 00:06:16.190\nwanna build.\n\n123\n00:06:16.190 --> 00:06:19.811\nSo if I'm thinking correctly,\nnotice that temperature and\n\n124\n00:06:19.811 --> 00:06:22.770\napparentTemperature are different.\n\n125\n00:06:22.770 --> 00:06:27.103\nThat's because one accounts for\nhumidity, if the heat index is an issue.\n\n126\n00:06:27.103 --> 00:06:30.421\nAnd then this is the feels-like,\nand this is the actual temperature.\n\n127\n00:06:30.421 --> 00:06:35.550\nWe have a time, right,\nwhen is the current time.\n\n128\n00:06:35.550 --> 00:06:39.676\nAnd then we have some uvIndex and\nprecipitation.\n\n129\n00:06:39.676 --> 00:06:42.243\nUltimately, in the context\nof our application,\n\n130\n00:06:42.243 --> 00:06:44.267\nwe get to pick what's important to us.\n\n131\n00:06:44.267 --> 00:06:49.449\nI'm gonna pick apparentTemperature,\ntemperature, time,\n\n132\n00:06:49.449 --> 00:06:54.151\nprobably summary, and\nthen some precipitation stuff.\n\n133\n00:06:54.151 --> 00:06:58.623\nYou may want to know more about\nwindBearing, windGust, windSpeed, right?\n\n134\n00:06:58.623 --> 00:07:01.556\nThat may be applicable to you,\nespecially if you're like, look,\n\n135\n00:07:01.556 --> 00:07:04.608\nI would like to go out and fly my drone or\nfly a kite or something like that.\n\n136\n00:07:04.608 --> 00:07:10.581\nSo that's context-based data for\nyour particular application.\n\n137\n00:07:10.581 --> 00:07:14.762\nWe're gonna try to keep this fairly\nsmall for now, but we may come back and\n\n138\n00:07:14.762 --> 00:07:15.780\nchange this out.\n\n139\n00:07:15.780 --> 00:07:18.331\nSo we have that data.\n\n140\n00:07:18.331 --> 00:07:22.714\nWell, I think the best thing to do\nis just get it into a component,\n\n141\n00:07:22.714 --> 00:07:24.250\nbuild the component.\n\n142\n00:07:24.250 --> 00:07:27.939\nAnd then we'll worry about some\nlayout when it comes in, okay?\n\n143\n00:07:27.939 --> 00:07:29.836\nSo let's go ahead and build our component.\n\n144\n00:07:29.836 --> 00:07:32.459\nAnd part of that is I'm gonna\nopen up this app.html and\n\n145\n00:07:32.459 --> 00:07:34.238\nI'm gonna comment this pretag out.\n\n146\n00:07:34.238 --> 00:07:37.466\nBecause I don't want that to\nbe the noise that we see.\n\n147\n00:07:37.466 --> 00:07:41.501\nCuz currently, that renders every time\nthat there's data comes back, and\n\n148\n00:07:41.501 --> 00:07:44.200\nit might,\nit just seems kinda noisy for now.\n\n149\n00:07:44.200 --> 00:07:47.889\nSo I'm gonna leave it there, though,\njust in case I need to uncomment it for\n\n150\n00:07:47.889 --> 00:07:50.209\ndebugging purposes and\nthings of that nature.\n\n151\n00:07:50.209 --> 00:07:52.242\nDo not forget to come back and\njust [SOUND] get rid of it.\n\n152\n00:07:52.242 --> 00:07:59.557\nBut what I want is something\nlike current-weather And\n\n153\n00:07:59.557 --> 00:08:06.879\nthen weather data equals\n$ctrl.data.currently.\n\n154\n00:08:06.879 --> 00:08:11.704\nNow notice I went ahead and\nselected the currently portion because\n\n155\n00:08:11.704 --> 00:08:16.370\nI'm just piping that in to\nthe component that I created.\n\n156\n00:08:16.370 --> 00:08:18.460\nI totally made that up just now.\n\n157\n00:08:18.460 --> 00:08:19.450\nIt will not work.\n\n158\n00:08:19.450 --> 00:08:22.420\nAnd just to show you,\nI'm gonna say get the weather.\n\n159\n00:08:22.420 --> 00:08:24.020\nAnd nothing happens, right?\n\n160\n00:08:24.020 --> 00:08:28.560\nNow I still have this console.log, so\nfor now I'm gonna leave that there.\n\n161\n00:08:28.560 --> 00:08:31.884\nI will come back and [SOUND] just\nkinda mop that up so to speak.\n\n162\n00:08:31.884 --> 00:08:35.103\nSo in order to create this component,\n\n163\n00:08:35.103 --> 00:08:40.340\nlet's come over here and\ncreate a new folder called Current.\n\n164\n00:08:41.830 --> 00:08:44.178\nLet's just call it Current, okay?\n\n165\n00:08:44.178 --> 00:08:51.143\nAnd then inside of that,\nI'm gonna create three files,\n\n166\n00:08:51.143 --> 00:08:55.931\nindex.js, and also current.html,\n\n167\n00:08:55.931 --> 00:08:59.715\nand also current controller.\n\n168\n00:08:59.715 --> 00:09:04.092\nSo currentcontroller.js.\n\n169\n00:09:04.092 --> 00:09:06.260\nAll right, so there's our three files.\n\n170\n00:09:06.260 --> 00:09:09.890\nAnd now let's actually build our component\njust so it's up and running, good to go.\n\n171\n00:09:09.890 --> 00:09:13.825\nSo the controller, let's create\na class called CurrentController.\n\n172\n00:09:16.460 --> 00:09:17.632\nAnd here's our class.\n\n173\n00:09:17.632 --> 00:09:18.410\nAnd we have an constructor.\n\n174\n00:09:21.835 --> 00:09:23.790\nA constructor, there we go.\n\n175\n00:09:23.790 --> 00:09:27.348\nAnd, well,\nlet's just console.log to make sure that\n\n176\n00:09:27.348 --> 00:09:32.130\nit's actually been constructed like\nwe anticipated that it's going to.\n\n177\n00:09:34.917 --> 00:09:35.637\nThis.\n\n178\n00:09:35.637 --> 00:09:37.270\nAll right, so there it is.\n\n179\n00:09:37.270 --> 00:09:39.089\nAnd then I need my list of dependencies.\n\n180\n00:09:40.120 --> 00:09:45.780\nCurrentController.$inject = and\nthere's nothing there.\n\n181\n00:09:45.780 --> 00:09:53.982\nAnd then,\nmodule.exports = CurrentController.\n\n182\n00:09:53.982 --> 00:09:56.960\nAll right, so have that exported,\nwe're good to go.\n\n183\n00:09:56.960 --> 00:10:00.859\nFor now I'm gonna into this current.html,\n\n184\n00:10:00.859 --> 00:10:04.560\nI just create a pre tag for\nour actual data.\n\n185\n00:10:05.630 --> 00:10:09.080\nNow the way that I've decided\nto use this is in my app.html.\n\n186\n00:10:09.080 --> 00:10:10.010\nI have weather-data.\n\n187\n00:10:11.070 --> 00:10:15.520\nOkay, that means that I'm gonna\nhave an attribute, right?\n\n188\n00:10:15.520 --> 00:10:18.660\nA binding so to speak, that reflects this.\n\n189\n00:10:18.660 --> 00:10:22.070\nSo before I can worry\nabout my current.html,\n\n190\n00:10:22.070 --> 00:10:25.140\nI kinda need to know some of\nthe bindings that I'm gonna build.\n\n191\n00:10:25.140 --> 00:10:26.275\nSo let's bring in the controller.\n\n192\n00:10:29.247 --> 00:10:32.556\nAnd that is going to\nbe current.controller.\n\n193\n00:10:32.556 --> 00:10:37.884\nAnd then the template\nis going to be current\n\n194\n00:10:42.062 --> 00:10:43.524\n.html.\n\n195\n00:10:43.524 --> 00:10:46.655\nExtensions needed there for\nthat special loader and webpack.\n\n196\n00:10:48.080 --> 00:10:50.230\nAnd then let's create the component.\n\n197\n00:10:52.050 --> 00:10:53.050\nMaybe if I can spell.\n\n198\n00:10:54.660 --> 00:10:56.760\nAnd I'm using the same variables\ninternally because, well,\n\n199\n00:10:57.770 --> 00:11:00.960\nI don't have to think of new variables\nbecause this is scoped to the module.\n\n200\n00:11:00.960 --> 00:11:02.359\nBut I do want some bindings.\n\n201\n00:11:03.640 --> 00:11:05.190\nAnd what bindings do I want?\n\n202\n00:11:05.190 --> 00:11:10.110\nI want weatherData, just like so.\n\n203\n00:11:10.110 --> 00:11:11.970\nAnd what kind of binding is that?\n\n204\n00:11:11.970 --> 00:11:13.620\nIt is a one-way data binding.\n\n205\n00:11:13.620 --> 00:11:17.890\nI don't actually want this to mess with\nit, mutate it, anything like that.\n\n206\n00:11:17.890 --> 00:11:19.050\nI just want it to know,\n\n207\n00:11:19.050 --> 00:11:23.476\nhey, your parent is going to send\nyou an attribute called weatherData.\n\n208\n00:11:23.476 --> 00:11:27.280\nThis is camel cased, and\n\n209\n00:11:27.280 --> 00:11:31.500\nit reflects the usage in\napp.html of weather-data.\n\n210\n00:11:31.500 --> 00:11:35.120\nSo I'm sending the weather in,\nthe currently one, right?\n\n211\n00:11:35.120 --> 00:11:36.123\nSo, I have to be aware of that.\n\n212\n00:11:37.998 --> 00:11:41.214\nAnd it's part of a binding, all right?\n\n213\n00:11:41.214 --> 00:11:42.734\nSo what does that mean?\n\n214\n00:11:42.734 --> 00:11:48.838\nOn $Ctrl I have weather data as,\n\n215\n00:11:48.838 --> 00:11:54.509\nlet's try that one last time.\n\n216\n00:11:54.509 --> 00:11:56.420\nAs an attribute on a controller, right?\n\n217\n00:11:56.420 --> 00:11:57.460\nSo it's bound to the controller.\n\n218\n00:11:59.060 --> 00:12:02.720\nI think our components built so to speak.\n\n219\n00:12:02.720 --> 00:12:06.440\nBut if we go and try it,\nit's not actually going to work.\n\n220\n00:12:06.440 --> 00:12:10.600\nAnd, well, you can never forget to\nactually wire up your components\n\n221\n00:12:10.600 --> 00:12:12.240\nin your app description or main.js.\n\n222\n00:12:12.240 --> 00:12:15.480\nSo let's go ahead and\nbring in that component.\n\n223\n00:12:15.480 --> 00:12:19.614\nThis is the CurrentWeatherComponent.\n\n224\n00:12:22.681 --> 00:12:29.180\nAnd that's\nrequire['./components/current'], right?\n\n225\n00:12:29.180 --> 00:12:32.090\nBecause I'm using index.js,\nI can use this convention.\n\n226\n00:12:32.090 --> 00:12:34.647\nAnd then, well,\nlet's add another component,\n\n227\n00:12:37.083 --> 00:12:41.300\nOf currentweather.\n\n228\n00:12:41.300 --> 00:12:47.050\nAnd notice the camel casing there\nbecause I've used a dash in app.html.\n\n229\n00:12:47.050 --> 00:12:56.840\nSo this is current weather component,\nCurrentWeatherComponent, there we go.\n\n230\n00:12:56.840 --> 00:12:59.720\nSo now that's it's wired up,\nwhen I get information,\n\n231\n00:12:59.720 --> 00:13:01.890\nit should display on the screen.\n\n232\n00:13:01.890 --> 00:13:03.635\nKey word is should.\n\n233\n00:13:03.635 --> 00:13:05.110\nShould.\n\n234\n00:13:05.110 --> 00:13:08.330\nSo let's see if it in fact\ndoes display on the screen.\n\n235\n00:13:08.330 --> 00:13:15.030\nLooks like everything is rebuilt, good\nto go, get the weather, and it didn't.\n\n236\n00:13:15.030 --> 00:13:16.790\nSomething is a little weird.\n\n237\n00:13:16.790 --> 00:13:20.620\nWe need to make sure that it\nrebuilt appropriately, okay?\n\n238\n00:13:20.620 --> 00:13:23.379\nSo, this is changed, we saved everything.\n\n239\n00:13:24.920 --> 00:13:26.956\nWe have current whether, that's good.\n\n240\n00:13:26.956 --> 00:13:29.521\nIndex.js, good.\n\n241\n00:13:29.521 --> 00:13:32.780\nAnd then it's still console logging this,\nbut\n\n242\n00:13:32.780 --> 00:13:38.193\nthere should be another console.log\nwhen I have this app.html.\n\n243\n00:13:38.193 --> 00:13:40.490\nAnd notice whether-data.\n\n244\n00:13:40.490 --> 00:13:42.420\nSo we have to do a little\nbit of debugging.\n\n245\n00:13:43.540 --> 00:13:46.190\n&gt;&gt; Is this intentional debugging or\nis this live action debugging?\n\n246\n00:13:46.190 --> 00:13:48.874\n&gt;&gt; This is live action,\nit’s always live action.\n\n247\n00:13:48.874 --> 00:13:50.827\nI never intentionally mess things up.\n\n248\n00:13:50.827 --> 00:13:52.148\n&gt;&gt; No.\n\n249\n00:13:52.148 --> 00:13:53.986\n&gt;&gt; So, I do.\n\n250\n00:13:53.986 --> 00:13:54.816\n&gt;&gt; [LAUGH]\n&gt;&gt; But\n\n251\n00:13:54.816 --> 00:13:57.630\nI also unintentionally\nmess things up as well.\n\n252\n00:13:57.630 --> 00:14:00.820\nSo how, this is one of the weird\nthings about components.\n\n253\n00:14:00.820 --> 00:14:05.930\nNotice there’s not really any,\nhey, your stuff's broke.\n\n254\n00:14:05.930 --> 00:14:07.050\nSo we click Get The Weather.\n\n255\n00:14:08.060 --> 00:14:11.130\nWhen I refresh this page,\nif that component is being mounted,\n\n256\n00:14:12.340 --> 00:14:17.432\nI should see a bunch of controller log,\nokay?\n\n257\n00:14:17.432 --> 00:14:22.047\nSo here's current weather,\nand there's weather data.\n\n258\n00:14:22.047 --> 00:14:28.440\nIt's showing it, but\nsomething's not working just right.\n\n259\n00:14:28.440 --> 00:14:29.490\nAll right, so current weather.\n\n260\n00:14:29.490 --> 00:14:35.840\nSo now, if I work backwards,\nso this is on the page, cool.\n\n261\n00:14:35.840 --> 00:14:38.557\nIt should be in main.js, and it is.\n\n262\n00:14:38.557 --> 00:14:41.630\nCurrent weather, and\nit's the current weather component.\n\n263\n00:14:43.950 --> 00:14:49.116\nAnd if I go back to index.js,\nI am registering nothing for\n\n264\n00:14:49.116 --> 00:14:55.270\ncurrent weather because I\nforgot to export my component.\n\n265\n00:14:55.270 --> 00:14:57.709\nI am silly.\n\n266\n00:14:57.709 --> 00:15:00.445\nSo that should fix everything.\n\n267\n00:15:00.445 --> 00:15:01.131\nShould.\n\n268\n00:15:01.131 --> 00:15:02.400\n&gt;&gt; Silly as a fox.\n\n269\n00:15:02.400 --> 00:15:03.558\n&gt;&gt; SIlly as a fox.\n\n270\n00:15:03.558 --> 00:15:04.716\n&gt;&gt; Silly as a fox.\n\n271\n00:15:04.716 --> 00:15:07.760\nI thought it was cunning as a fox.\n\n272\n00:15:07.760 --> 00:15:08.880\n&gt;&gt; Yeah, what'd I say?\n\n273\n00:15:08.880 --> 00:15:10.195\n&gt;&gt; We'll go with whatever.\n\n274\n00:15:10.195 --> 00:15:12.693\n&gt;&gt; [LAUGH]\n&gt;&gt; Silly, cunning, amazing.\n\n275\n00:15:12.693 --> 00:15:17.720\nSo notice this gets printed out now\nupon refresh, and that's why I expect.\n\n276\n00:15:17.720 --> 00:15:21.679\nEven though this says the lowercase letter\nt, well, that's because it's minified but\n\n277\n00:15:21.679 --> 00:15:23.331\nI am getting a printout of an object.\n\n278\n00:15:23.331 --> 00:15:26.840\nAnd if I look,\nthere is a weather data piece on it.\n\n279\n00:15:26.840 --> 00:15:28.760\nNow that's kinda weird.\n\n280\n00:15:28.760 --> 00:15:29.852\nWhy is it undefined?\n\n281\n00:15:29.852 --> 00:15:33.670\nWell, that's because weather\ndata is not available yet.\n\n282\n00:15:33.670 --> 00:15:38.270\nIf I click Get the Weather, it actually\nshows the current weather component.\n\n283\n00:15:38.270 --> 00:15:41.539\nAnd, well,\nwe now have our component kinda wired up.\n\n284\n00:15:42.690 --> 00:15:45.010\nBecause we built this component-wise,\n\n285\n00:15:45.010 --> 00:15:48.210\nif I ever wanna change the layout of this,\nguess what?\n\n286\n00:15:48.210 --> 00:15:50.750\nI just go change that component's layout.\n\n287\n00:15:50.750 --> 00:15:52.195\nEverything else still works.\n\n288\n00:15:52.195 --> 00:15:56.974\nAnd I don't have to worry about syncing\neverything together because we've\n\n289\n00:15:56.974 --> 00:15:59.447\npulled these individual pieces, so.\n\n290\n00:15:59.447 --> 00:16:05.330\nYeah our current weather\ncomponent is well it's working.\n\n291\n00:16:05.330 --> 00:16:08.300\n&gt;&gt; So what if we wanted to change\nthe name of these data bindings.\n\n292\n00:16:08.300 --> 00:16:10.710\nWe'd have to change the code\nin some places right?\n\n293\n00:16:10.710 --> 00:16:12.450\n&gt;&gt; And we would right?\n\n294\n00:16:12.450 --> 00:16:17.066\nIf we wanted to come back and\nif we wanted to change this binding,\n\n295\n00:16:17.066 --> 00:16:18.590\nlet's say weather data.\n\n296\n00:16:18.590 --> 00:16:23.150\nIf we changed it here we would also have\nto change it anywhere else that it's used.\n\n297\n00:16:23.150 --> 00:16:27.560\nAnd that's just kind of the nature of\nthis thing, there's no way around that,\n\n298\n00:16:27.560 --> 00:16:29.230\nbut it is a good observation.\n\n299\n00:16:29.230 --> 00:16:31.620\nAnd just to show you what would\nhappen I'm gonna come and\n\n300\n00:16:31.620 --> 00:16:35.960\nchange this to weatherDatum,\nright, singular.\n\n301\n00:16:35.960 --> 00:16:40.450\nAll right, let's go see does it in fact\nwork, and we gotta let it rebuild.\n\n302\n00:16:40.450 --> 00:16:44.930\nIt still prints that out it says\ndatum if I click get weather and\n\n303\n00:16:44.930 --> 00:16:50.320\nnow I have unintentional consequences\nbecause it's bound to weather\n\n304\n00:16:50.320 --> 00:16:55.998\ndata but weather datum was the binding,\nit's just a mess.\n\n305\n00:16:55.998 --> 00:17:00.880\nSo you gotta be careful about that and\nthere's no real way around that.\n\n306\n00:17:00.880 --> 00:17:04.660\nNotice also it doesn't give me an error,\nthat is problematic so\n\n307\n00:17:04.660 --> 00:17:06.690\nwe're going to stay with the weather data.\n\n308\n00:17:06.690 --> 00:17:08.760\nAnd that way we can keep it consistent.\n\n309\n00:17:08.760 --> 00:17:11.310\nNow since we have it bound we\nshould probably go ahead and\n\n310\n00:17:11.310 --> 00:17:13.910\ndo some layout as it stands, right?\n\n311\n00:17:13.910 --> 00:17:16.955\nSo if we come over here and\nget the weather.\n\n312\n00:17:16.955 --> 00:17:18.343\n&gt;&gt; Styling.\n&gt;&gt; Let's get some time,\n\n313\n00:17:18.343 --> 00:17:20.200\nno we're not getting to styling yet.\n\n314\n00:17:20.200 --> 00:17:20.956\n&gt;&gt; We're not there yet.\n&gt;&gt; Okay,\n\n315\n00:17:20.956 --> 00:17:22.887\nZach's over here like\nplease make it pretty.\n\n316\n00:17:22.887 --> 00:17:24.381\n&gt;&gt; Put mountains and trees.\n\n317\n00:17:24.381 --> 00:17:26.940\n&gt;&gt; It looks horrible as\nit stands right now.\n\n318\n00:17:26.940 --> 00:17:29.128\nYou should see him off camera.\n\n319\n00:17:29.128 --> 00:17:30.083\nIt's bad.\n\n320\n00:17:30.083 --> 00:17:32.910\n&gt;&gt; [LAUGH]\n&gt;&gt; He's not really saying that, but\n\n321\n00:17:32.910 --> 00:17:34.230\nI think it's fun to say that.\n\n322\n00:17:35.270 --> 00:17:36.785\nWe will get to some styling.\n\n323\n00:17:36.785 --> 00:17:38.020\n&gt;&gt; Sure.\n&gt;&gt; We'll try to make it a little nicer.\n\n324\n00:17:38.020 --> 00:17:39.750\nThat is not my forte, necessarily.\n\n325\n00:17:39.750 --> 00:17:44.730\nI'm all about a function over form\nkind of person, but it works.\n\n326\n00:17:44.730 --> 00:17:47.100\nWe're gonna keep going with it works,\nand then we're gonna come back and\n\n327\n00:17:47.100 --> 00:17:48.370\ntry to make it a little nicer\n&gt;&gt; Wonderful.\n\n328\n00:17:49.370 --> 00:17:54.635\n&gt;&gt; But I want to include this\ntime I want to include a summary\n\n329\n00:17:54.635 --> 00:17:59.030\nand let's just go with temperature and\napparent temperature for now.\n\n330\n00:17:59.030 --> 00:18:02.660\nWe may come back and\nchange that as we see fit, right?\n\n331\n00:18:02.660 --> 00:18:05.780\nBut that's what we're gonna\nput on the page for now.\n\n332\n00:18:07.250 --> 00:18:08.320\nSo were do I change that?\n\n333\n00:18:08.320 --> 00:18:10.617\nI change that in currentweather.html\nbecause that's my template.\n\n334\n00:18:10.617 --> 00:18:13.840\n&gt;&gt; Okay, and you'll have to bare with me,\n\n335\n00:18:13.840 --> 00:18:15.940\nthis is not necessarily\ngonna be the prettiest.\n\n336\n00:18:15.940 --> 00:18:19.488\nSo I'm gonna create a section here and\nwithin that section,\n\n337\n00:18:19.488 --> 00:18:23.820\nlet's just create a paragraph.\n\n338\n00:18:23.820 --> 00:18:27.140\nI'm gonna keep these mostly in\nparagraphs and things like that because\n\n339\n00:18:27.140 --> 00:18:31.480\nI'm not really committed to this layout\n&gt;&gt; I'm still waiting on some\n\n340\n00:18:31.480 --> 00:18:35.280\ncustomer verification about\nwhat they want to be laid out.\n\n341\n00:18:35.280 --> 00:18:38.095\nSo, If I want this I could say\n\n342\n00:18:38.095 --> 00:18:48.350\n$ctrlweatherdata.time well let's just\nsay that, that should be available.\n\n343\n00:18:48.350 --> 00:18:51.410\nShould look all good to go,\nif I refresh and\n\n344\n00:18:51.410 --> 00:18:55.420\nI click there's the time,\nbut it's a giant number.\n\n345\n00:18:55.420 --> 00:19:01.502\nNow this number is the seconds\nsince January 1, 1970 at 12:00 am.\n\n346\n00:19:01.502 --> 00:19:05.152\nThat's the eunuch's epoch, eepoch.\n\n347\n00:19:05.152 --> 00:19:05.882\n&gt;&gt; Eepoch.\n\n348\n00:19:05.882 --> 00:19:06.612\n&gt;&gt; Eepoch.\n\n349\n00:19:06.612 --> 00:19:12.088\nWhat Javascript is expecting is\nthe milliseconds since then.\n\n350\n00:19:12.088 --> 00:19:15.960\nOkay, also it's still a number, and\nthat's not really relatable to you or I,\n\n351\n00:19:15.960 --> 00:19:20.020\nluckily with angularjs filters,\nwe can make that a little nicer.\n\n352\n00:19:21.630 --> 00:19:26.543\n&gt;&gt; We can say pipe to date,\nI know I said time but date and\n\n353\n00:19:26.543 --> 00:19:30.910\ntime are intrinsically\nkind of put together.\n\n354\n00:19:30.910 --> 00:19:32.592\nAnd I just want the short date and,\n\n355\n00:19:32.592 --> 00:19:35.786\nwell if you don't know about\nAngularjs filters definitely go and\n\n356\n00:19:35.786 --> 00:19:39.970\ncheck out our series on Angularjs,\nI talk about about those at some length.\n\n357\n00:19:39.970 --> 00:19:41.580\nAnd because it's in seconds but\n\n358\n00:19:41.580 --> 00:19:43.990\nI want milliseconds I'm\ngonna multiply by a 1,000.\n\n359\n00:19:43.990 --> 00:19:48.660\nYes I can do that I can technically\nwrite expressions internally,\n\n360\n00:19:48.660 --> 00:19:51.400\njust like that and it all works.\n\n361\n00:19:51.400 --> 00:19:58.049\nSo if I come back, and I click Get,\nnotice it's 7/24/17 2:56 pm.\n\n362\n00:19:58.049 --> 00:20:03.065\nAll right, well,\nthe one thing that I don't like\n\n363\n00:20:03.065 --> 00:20:09.760\nis this section shows if it actually\nsays null if there's no data.\n\n364\n00:20:09.760 --> 00:20:14.495\nSo I'm gonna put a quick NGF here\ncuz I don't really want this to show\n\n365\n00:20:14.495 --> 00:20:20.220\nunless there is weather data kind of\npiped down through from the parent.\n\n366\n00:20:20.220 --> 00:20:23.450\nSo only if there is weather\ndata do I want to show this.\n\n367\n00:20:23.450 --> 00:20:25.340\nAnd now if we come back that null is gone.\n\n368\n00:20:25.340 --> 00:20:27.050\nSo that's nice.\n\n369\n00:20:27.050 --> 00:20:30.640\nIn addition to we wanted\na couple of other things and\n\n370\n00:20:30.640 --> 00:20:33.408\nthat was temperature and\napparent temperature.\n\n371\n00:20:33.408 --> 00:20:40.949\nSo I'm gonna put this also in\na paragraph just for presentation here.\n\n372\n00:20:40.949 --> 00:20:48.350\nSo weatherdata.temperature and\nwait for it.\n\n373\n00:20:48.350 --> 00:20:53.340\nSo temperature, what temperature?\n\n374\n00:20:54.650 --> 00:20:57.490\nWhat is that, I have to give a unit.\n\n375\n00:20:57.490 --> 00:21:02.180\nBecause if I have to say it's 56 outside,\nand you're like, is that hot or\n\n376\n00:21:02.180 --> 00:21:05.320\ncold or what is it?\n\n377\n00:21:05.320 --> 00:21:07.780\nThis does come back as degrees.\n\n378\n00:21:09.100 --> 00:21:15.330\nSo ampersand dg some are calling F,\ndegrees fahrenheit.\n\n379\n00:21:15.330 --> 00:21:22.082\nAnd then I'm just also going to say,\nfeels like, and apparentTemperature.\n\n380\n00:21:22.082 --> 00:21:25.980\nApparentTemperature, okay.\n\n381\n00:21:25.980 --> 00:21:27.040\nTempeature.\n\n382\n00:21:27.040 --> 00:21:28.060\n&gt;&gt; Temperature.\n\n383\n00:21:28.060 --> 00:21:29.260\n&gt;&gt; Temperature.\n\n384\n00:21:29.260 --> 00:21:30.480\n&gt;&gt; That's it.\n&gt;&gt; Temperature.\n\n385\n00:21:30.480 --> 00:21:31.540\n&gt;&gt; Temperature.\n\n386\n00:21:31.540 --> 00:21:34.910\n&gt;&gt; So if we go and search, there we go.\n\n387\n00:21:34.910 --> 00:21:35.640\nIt refreshed on me.\n\n388\n00:21:35.640 --> 00:21:39.730\nIt is this time, and\nhere are the two temperature.\n\n389\n00:21:39.730 --> 00:21:41.080\nThat's nice.\n\n390\n00:21:41.080 --> 00:21:44.080\nMaybe we put, you know what?\n\n391\n00:21:44.080 --> 00:21:47.350\nI think we'll just leave it here because I\ndo know that I'm gonna change this one so\n\n392\n00:21:47.350 --> 00:21:50.050\nI get all my components\nkind of put together and\n\n393\n00:21:50.050 --> 00:21:51.892\nI have some further verification.\n\n394\n00:21:51.892 --> 00:21:56.182\nBut that's how we are going to pipe\ninformation into these components.\n\n395\n00:21:56.182 --> 00:21:56.922\n&gt;&gt; Very good.\n\n396\n00:21:56.922 --> 00:22:00.620\n&gt;&gt; Is through creating a component and\nthen the app.\n\n397\n00:22:00.620 --> 00:22:03.240\nThe app manages all of the data itself.\n\n398\n00:22:03.240 --> 00:22:07.049\nAnd then I just let the component know\nabout its respective pieces that allows\n\n399\n00:22:07.049 --> 00:22:10.540\nthe component to update when\nthere's updates in the application.\n\n400\n00:22:10.540 --> 00:22:14.882\nAnd just to show you that let's\nchange this to 90 degrees north and\n\n401\n00:22:14.882 --> 00:22:17.970\n0 degrees, that should be really cold.\n\n402\n00:22:17.970 --> 00:22:20.470\nAnd notice it's 34 degrees farenheit,\nfeels like 25.\n\n403\n00:22:20.470 --> 00:22:23.260\nThat's the North Pole, very cold.\n\n404\n00:22:23.260 --> 00:22:24.540\nShould be very cold there.\n\n405\n00:22:24.540 --> 00:22:27.630\nBut it does update, but\nall of that interaction\n\n406\n00:22:27.630 --> 00:22:30.810\ncomes from the fact that the parent\ncomponent is pushing data back down.\n\n407\n00:22:30.810 --> 00:22:34.330\n&gt;&gt; Yeah, it makes sense, marvelous\nepisode, great information, as usual.\n\n408\n00:22:34.330 --> 00:22:37.500\nCurrent weather component,\nany last words before we move on?\n\n409\n00:22:37.500 --> 00:22:40.070\n&gt;&gt; Well, we have a few other\ncomponents that I wanna build out,\n\n410\n00:22:40.070 --> 00:22:45.000\nand then we may come back and\nmake this a little nicer,\n\n411\n00:22:45.000 --> 00:22:50.290\nas far as using your interactions Maybe\na little bit nicer from a UI standpoint,\n\n412\n00:22:50.290 --> 00:22:54.235\nright, a nicer, it looks ugly,\nI'll admit that.\n\n413\n00:22:54.235 --> 00:22:56.720\n&gt;&gt; [LAUGH]\n&gt;&gt; I see you kinda giving me this kinda,\n\n414\n00:22:56.720 --> 00:22:58.275\nit's kinda ugly, Justin.\n\n415\n00:22:58.275 --> 00:23:00.500\n&gt;&gt; [LAUGH]\n&gt;&gt; We'll try to make it a little prettier,\n\n416\n00:23:00.500 --> 00:23:03.280\na little nicer to look at,\nbut you know, maybe some\n\n417\n00:23:03.280 --> 00:23:06.590\nthings that we're thinking about Do\nyou know your latitude and longitude?\n\n418\n00:23:06.590 --> 00:23:08.660\n&gt;&gt; I do not, I wish I did though.\n\n419\n00:23:08.660 --> 00:23:10.850\n&gt;&gt; Well, if you don't know your\nlongitude and longitude, as it stands,\n\n420\n00:23:10.850 --> 00:23:13.410\nwe have no way of checking the weather for\nourselves.\n\n421\n00:23:13.410 --> 00:23:16.788\nAlso, it would almost be nice\nif when someone visits the page,\n\n422\n00:23:16.788 --> 00:23:19.849\nif they give us permissions to\nlook up their longitude and\n\n423\n00:23:19.849 --> 00:23:23.899\nlongitude through the geolocation API\nof our browser, you could do that.\n\n424\n00:23:23.899 --> 00:23:24.543\n&gt;&gt; Sure.\n\n425\n00:23:24.543 --> 00:23:29.690\n&gt;&gt; Or if not, then typically people\nwanna search for city and state.\n\n426\n00:23:30.750 --> 00:23:34.280\nSo we may end up doing those before we\nmake it pretty, and then make it pretty.\n\n427\n00:23:34.280 --> 00:23:36.960\nBecause some of that may\naffect the UI layout\n\n428\n00:23:36.960 --> 00:23:39.240\nas well as how the data's presented.\n\n429\n00:23:39.240 --> 00:23:43.080\nSo we're gonna get that kinda nailed down,\nand then we're gonna come back and\n\n430\n00:23:43.080 --> 00:23:46.490\nadd some well layers of paint,\nsome wallpaper, maybe some border.\n\n431\n00:23:46.490 --> 00:23:48.410\nI don't know, who knows.\n\n432\n00:23:48.410 --> 00:23:52.245\nWeather app with AngularJS Express,\nthere's a whole lot of video content in\n\n433\n00:23:52.245 --> 00:23:55.290\nthis series and it's exciting\nas we build that weather app.\n\n434\n00:23:55.290 --> 00:23:58.160\nSo stay with us and watch everything,\nyou'll be very glad that you did.\n\n435\n00:23:58.160 --> 00:24:00.610\nAnd thank you for watching DevPro TV.\n\n436\n00:24:00.610 --> 00:24:02.650\nRemember, a good DevPro\nis always learning.\n\n437\n00:24:02.650 --> 00:24:03.620\nI'm Zach Memos.\n\n438\n00:24:03.620 --> 00:24:04.550\n&gt;&gt; And I'm Justin Dennison.\n\n439\n00:24:04.550 --> 00:24:06.436\n&gt;&gt; And we'll see you very soon.\n\n440\n00:24:06.436 --> 00:24:11.583\n[SOUND]\n\n",
          "vimeoId": "227071065"
        },
        {
          "description": "Justin and Zach cover Hourly Weather Component presentation, 'mocking' the set up, building the Hourly Component, Minutely Weather Component presentation, building the Minutely Component, and passing along data from the App Component.",
          "length": "1814",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-8-1-hourly_and_minutely_weather_component-072417-PGM.00_30_37_12.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-8-1-hourly_and_minutely_weather_component-072417-PGM.00_30_37_12.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-8-1-hourly_and_minutely_weather_component-072417-PGM.00_30_37_12.Still001-sm.jpg",
          "title": "Hourly and Minutely Weather Component",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.951 --> 00:00:17.453\nHello, and thanking for choosing DevPro\nTV, helping you learn wherever you go.\n\n3\n00:00:17.453 --> 00:00:18.789\nMy name's Zach Memos and\n\n4\n00:00:18.789 --> 00:00:22.872\nI am your host as we continue on with\nWeather App with AngularJS and Express.\n\n5\n00:00:22.872 --> 00:00:28.088\nAnd right now, this topic, this show is\nhourly and minutely weather component.\n\n6\n00:00:28.088 --> 00:00:31.406\nAnd the person bringing us all\nthe information we need is the one and\n\n7\n00:00:31.406 --> 00:00:33.371\nonly Justin Dennison right over here.\n\n8\n00:00:33.371 --> 00:00:34.532\nJustin, how you doing?\n\n9\n00:00:34.532 --> 00:00:37.320\n&gt;&gt; I am doing fantastic, and\nI do have an admission of guilt.\n\n10\n00:00:37.320 --> 00:00:39.780\nI just continually make\nthe titles longer and\n\n11\n00:00:39.780 --> 00:00:44.570\nlonger to see how well you can say\nsaid titles, and that was great.\n\n12\n00:00:44.570 --> 00:00:46.828\nSo as a follow-up question, how are you?\n\n13\n00:00:46.828 --> 00:00:47.733\n&gt;&gt; I'm doing great.\n\n14\n00:00:47.733 --> 00:00:50.197\nHourly and minutely weather component?\n\n15\n00:00:50.197 --> 00:00:52.330\n&gt;&gt; You're catching up, you're catching up.\n\n16\n00:00:52.330 --> 00:00:54.518\n&gt;&gt; That's right.\n&gt;&gt; Okay, so minutely's real term, yeah,\n\n17\n00:00:54.518 --> 00:00:56.975\nand we're gonna find out more\nabout that as we go on here.\n\n18\n00:00:56.975 --> 00:01:00.770\nBut as we're continuing to work\non the presentation of the data,\n\n19\n00:01:00.770 --> 00:01:04.160\nright, what component\nare we working on next?\n\n20\n00:01:04.160 --> 00:01:06.830\nWell, ultimately,\nwe're kinda gonna flip a coin.\n\n21\n00:01:06.830 --> 00:01:11.530\nNow I will tell you in the Dark Sky API,\nminutely is not always available.\n\n22\n00:01:11.530 --> 00:01:13.450\nSo we have to be cognizant of that.\n\n23\n00:01:13.450 --> 00:01:16.991\nIt may be that minutely data is not,\nwell, it's just not there.\n\n24\n00:01:16.991 --> 00:01:20.193\nAnd it depends on what part of the world,\nthe latitude and the longitude.\n\n25\n00:01:20.193 --> 00:01:23.770\nIt typically makes sense over land or\npopulated areas.\n\n26\n00:01:23.770 --> 00:01:26.760\nBut if you're checking the weather\nout in the middle of the ocean or\n\n27\n00:01:26.760 --> 00:01:31.450\nvery not populated areas,\nthen it becomes a little bit of an issue.\n\n28\n00:01:31.450 --> 00:01:33.340\nSo with that in mind,\n\n29\n00:01:33.340 --> 00:01:38.080\nI say we tackle the hourly component\nfirst and then the minutely,\n\n30\n00:01:38.080 --> 00:01:42.610\nwe'll have to be sure it only renders\nif there’s actually minutely data.\n\n31\n00:01:42.610 --> 00:01:44.498\nNow, I will be up front with you.\n\n32\n00:01:44.498 --> 00:01:46.180\nWe are kinda just mocking these in,\n\n33\n00:01:46.180 --> 00:01:48.982\nthese three components that I\nultimately want to render out.\n\n34\n00:01:48.982 --> 00:01:53.948\nWell, we're getting these in place because\nthen we have this kind of separation that,\n\n35\n00:01:53.948 --> 00:01:55.487\nI need to change the hourly.\n\n36\n00:01:55.487 --> 00:01:58.714\nI just come in and change the hourly\ncomponent and everything's still in place.\n\n37\n00:01:58.714 --> 00:02:02.411\nSo I don't have to worry about actually\ngetting things together as I start to\n\n38\n00:02:02.411 --> 00:02:05.030\nimplement new views,\nnew user interactions.\n\n39\n00:02:05.030 --> 00:02:09.450\nOr possibly maybe a chart or\nsomething like that.\n\n40\n00:02:09.450 --> 00:02:10.445\nIn addition to,\n\n41\n00:02:10.445 --> 00:02:14.717\nstyling will be easier if things\nare already segmented in components.\n\n42\n00:02:14.717 --> 00:02:19.698\nSo not necessarily gonna be\nwowed by these two components.\n\n43\n00:02:19.698 --> 00:02:22.503\nThey're more or less just, well,\nthey're mock-ups, so to speak,\n\n44\n00:02:22.503 --> 00:02:24.510\nthat we can start wrapping\nour minds around.\n\n45\n00:02:24.510 --> 00:02:28.190\n&gt;&gt; So once, again, minutely, though,\nthat would be for a highly populated area,\n\n46\n00:02:28.190 --> 00:02:29.338\nis that what you're saying?\n\n47\n00:02:29.338 --> 00:02:33.903\n&gt;&gt; Yeah, typically minutely is, now when I\nsay highly populated, that's in comparison\n\n48\n00:02:33.903 --> 00:02:37.802\nto like Antarctica [LAUGH] or the middle\nof the ocean where there's nobody.\n\n49\n00:02:37.802 --> 00:02:38.976\n&gt;&gt; Right.\n\n50\n00:02:38.976 --> 00:02:42.500\n&gt;&gt; And it's kinda hit and miss, because\nminutely it doesn't make a lot of sense in\n\n51\n00:02:42.500 --> 00:02:45.530\nplaces where weather\ndoesn't change quickly.\n\n52\n00:02:45.530 --> 00:02:49.170\nSo out in the middle of the ocean, it's\nmitigated by a large mass of water that\n\n53\n00:02:49.170 --> 00:02:54.250\ndoesn't heat and cool at a ridiculous\npace like land would or colliding.\n\n54\n00:02:54.250 --> 00:02:57.778\nThere's a lot more to it than that,\nbut that's not what we're here for.\n\n55\n00:02:57.778 --> 00:03:00.541\nSo minutely is sometimes\nnot defined in those areas.\n\n56\n00:03:00.541 --> 00:03:04.037\nBut over land or where you or\nI might walk outside and\n\n57\n00:03:04.037 --> 00:03:07.813\nit might rain 30 minutes from now,\nlike downpour.\n\n58\n00:03:07.813 --> 00:03:09.273\nLook, it's clear outside now.\n\n59\n00:03:09.273 --> 00:03:10.700\nIf I look at the minutely and\n\n60\n00:03:10.700 --> 00:03:15.340\nI see a giant spike in precipitation\nprobability, I might need an umbrella.\n\n61\n00:03:15.340 --> 00:03:19.740\nAs a matter of fact, that's all\nthe minutely data that we get is time and\n\n62\n00:03:19.740 --> 00:03:22.030\nprecip probability/intensity.\n\n63\n00:03:22.030 --> 00:03:25.450\nWe don't get minutely temperature changes,\ncuz that doesn't really matter.\n\n64\n00:03:27.660 --> 00:03:30.040\nThey're not large enough for us to feel.\n\n65\n00:03:30.040 --> 00:03:34.214\nBut we've had a nice little\nclimatological/weather discussion here.\n\n66\n00:03:34.214 --> 00:03:39.142\nBut it's probably best if we go ahead and\ntackle that hourly component and,\n\n67\n00:03:39.142 --> 00:03:41.841\nwell, see, it's not really a lot to do.\n\n68\n00:03:41.841 --> 00:03:43.470\nAnd we're just trying to\nget things in place here.\n\n69\n00:03:43.470 --> 00:03:44.750\nSo let's go ahead and\ntake a look at my screen.\n\n70\n00:03:44.750 --> 00:03:45.920\nJust a quick review.\n\n71\n00:03:45.920 --> 00:03:47.527\nI still got webpack-dev-server running.\n\n72\n00:03:47.527 --> 00:03:48.853\nI still got my proxy running.\n\n73\n00:03:48.853 --> 00:03:53.078\nAnd if I click Get Weather, well,\nit's going to update, and this is for\n\n74\n00:03:53.078 --> 00:03:54.880\nthe North Pole.\n\n75\n00:03:54.880 --> 00:04:00.455\nThis is actually being printed out for\nthe current weather component.\n\n76\n00:04:00.455 --> 00:04:05.650\nI might actually adapt currently,\n\n77\n00:04:05.650 --> 00:04:10.850\ninstead of currently, hourly and minutely,\nI might just say current weather and\n\n78\n00:04:10.850 --> 00:04:14.380\nthen hourly weather, minutely weather,\nbecause those actually make sense.\n\n79\n00:04:14.380 --> 00:04:17.421\nIf I said currently weather,\nI think that sounds a little weird.\n\n80\n00:04:17.421 --> 00:04:21.649\nSo just as a reminder, the naming\nconvention is gonna be a little different.\n\n81\n00:04:21.649 --> 00:04:27.469\nBecause you ever say something, you're\nlike, that just tastes bad in my mouth?\n\n82\n00:04:27.469 --> 00:04:30.293\n&gt;&gt; [LAUGH]\n&gt;&gt; So, that's why we're gonna do [LAUGH]\n\n83\n00:04:30.293 --> 00:04:31.140\nthat as is.\n\n84\n00:04:31.140 --> 00:04:33.327\nSo, if I come over here,\nI have current-weather.\n\n85\n00:04:33.327 --> 00:04:36.138\nAnd ultimately, what I want is, well,\n\n86\n00:04:36.138 --> 00:04:40.500\nI want hourly weather as\na component in this top level app.\n\n87\n00:04:40.500 --> 00:04:45.470\nNow, notice, this app is more or less,\nthis HTML is just a description,\n\n88\n00:04:45.470 --> 00:04:48.240\na declarative description,\nof what I want on the page.\n\n89\n00:04:48.240 --> 00:04:50.270\nNow ultimately, this does seem complex.\n\n90\n00:04:50.270 --> 00:04:51.660\nBut in the grand scheme of things,\n\n91\n00:04:51.660 --> 00:04:56.290\nthis is a pretty simplistic app, as far\nas layout and arrangement and things.\n\n92\n00:04:56.290 --> 00:05:01.858\nEspecially since I have not done any\nstyling or anything of the such, yet.\n\n93\n00:05:01.858 --> 00:05:02.756\n&gt;&gt; The styling.\n\n94\n00:05:02.756 --> 00:05:05.273\n&gt;&gt; Yeah, I'm like, you want some styling?\n\n95\n00:05:05.273 --> 00:05:06.095\nWell, not today, not today.\n\n96\n00:05:06.095 --> 00:05:08.460\n&gt;&gt; [LAUGH]\n&gt;&gt; That's how I roll.\n\n97\n00:05:08.460 --> 00:05:13.151\nSo let's go ahead and make our hourly\nweather our reference right here.\n\n98\n00:05:13.151 --> 00:05:17.304\nSo hourly-weather, and what I want\nis it's going to have weather data.\n\n99\n00:05:17.304 --> 00:05:24.931\nAnd that weather data is going to be\ndata.hourly, just like that, okay?\n\n100\n00:05:24.931 --> 00:05:28.770\nSo we have that component, but we don't\nactually have it registered with angular.\n\n101\n00:05:28.770 --> 00:05:29.940\nIt's not gonna render anything.\n\n102\n00:05:29.940 --> 00:05:31.140\nIt's not actually gonna do anything.\n\n103\n00:05:31.140 --> 00:05:34.390\nSo we have to build that component, okay?\n\n104\n00:05:34.390 --> 00:05:39.910\nSo let's build a component,\nlet's create a new folder, call it hourly.\n\n105\n00:05:41.050 --> 00:05:45.462\nAnd then I also want to create a new\nfile in there called index.js.\n\n106\n00:05:45.462 --> 00:05:50.305\nAnd then I also want to create\nanother file called hourly.html.\n\n107\n00:05:50.305 --> 00:05:57.290\nAnd then my final file called guess,\nyes, hourlycontroller.js.\n\n108\n00:05:57.290 --> 00:05:58.256\nThat was a great guess.\n\n109\n00:05:58.256 --> 00:06:02.498\nNow, as a matter of fact,\nI'm actually going to get rid\n\n110\n00:06:02.498 --> 00:06:06.847\nof all the references to\nthe current weather component.\n\n111\n00:06:06.847 --> 00:06:11.480\nSo now I just have app, my main, and\nthen my hourly controller and such.\n\n112\n00:06:12.510 --> 00:06:16.800\nSo if I look inside of this component,\nthere we go, all right?\n\n113\n00:06:16.800 --> 00:06:21.200\nSo as it stands, in hourly weather,\nI'm just gonna create a pre, just for\n\n114\n00:06:21.200 --> 00:06:25.930\ntesting purposes that, well,\nit shows this weather data.\n\n115\n00:06:27.620 --> 00:06:30.880\nAnd it's just going to pipe\nit through JSON, all right?\n\n116\n00:06:30.880 --> 00:06:33.450\nSo just like it would in the currently.\n\n117\n00:06:33.450 --> 00:06:34.460\nAs a matter of fact,\n\n118\n00:06:35.760 --> 00:06:40.520\nlet me make sure that I have that turned\noff in the current weather component.\n\n119\n00:06:40.520 --> 00:06:44.210\nSo I come here, I'm actually gonna\ntake this away just for now.\n\n120\n00:06:44.210 --> 00:06:46.240\nNot delete it, but instead comment it out.\n\n121\n00:06:46.240 --> 00:06:48.080\nNow I'll come back at\nthe end of the project and\n\n122\n00:06:48.080 --> 00:06:49.460\ntypically clean all of this up.\n\n123\n00:06:49.460 --> 00:06:51.222\nAll the household logs and\nthings like that.\n\n124\n00:06:51.222 --> 00:06:54.070\nI don't really want those,\nI should handle errors appropriately.\n\n125\n00:06:54.070 --> 00:06:58.520\nI shouldn't have a console log of\nstate and data to the console.\n\n126\n00:06:58.520 --> 00:07:00.490\nThat's not a real good practice.\n\n127\n00:07:00.490 --> 00:07:04.300\nIn addition to large amounts of commented\nout code that you're not actually using\n\n128\n00:07:04.300 --> 00:07:07.180\nthat were there for testing purposes or\ndoing the development process,\n\n129\n00:07:07.180 --> 00:07:10.870\ntime to clean those up before\nyou actually try to deploy this.\n\n130\n00:07:11.880 --> 00:07:14.510\nSo, we have that commented out.\n\n131\n00:07:14.510 --> 00:07:19.800\nAnd I'm gonna come in here and\njust we'll leave this as the hourly.html.\n\n132\n00:07:19.800 --> 00:07:25.944\nAnd then let's create a controller, so\nwe're gonna say HourlyWeatherController.\n\n133\n00:07:25.944 --> 00:07:30.264\nWe're building this as class and\nit has a constructor.\n\n134\n00:07:30.264 --> 00:07:33.550\nAnd likewise, if I ever find out\nthat I have empty constructors,\n\n135\n00:07:33.550 --> 00:07:36.460\nI'll probably just kinda\ntake those out as well.\n\n136\n00:07:36.460 --> 00:07:38.180\nBecause I don't really\nneed an empty constructor.\n\n137\n00:07:38.180 --> 00:07:42.100\nI put these in when I'm developing,\nbecause now if I need to come back,\n\n138\n00:07:42.100 --> 00:07:43.420\nI just type a few things.\n\n139\n00:07:43.420 --> 00:07:47.200\nAnd it just makes it more expeditious\nto put it up front, for me.\n\n140\n00:07:47.200 --> 00:07:48.597\nYou may find that that's different for\nyou.\n\n141\n00:07:48.597 --> 00:07:55.623\nAnd then, well, that's all we need other\nthan HourlyWeatherController.$inject.\n\n142\n00:07:55.623 --> 00:07:57.588\nYes, this is empty but that's okay.\n\n143\n00:07:57.588 --> 00:08:02.250\nModule.exports Exports.\n\n144\n00:08:02.250 --> 00:08:03.457\nHourlyWeatherController.\n\n145\n00:08:03.457 --> 00:08:05.420\nAnd there we go.\n\n146\n00:08:05.420 --> 00:08:09.799\nSo, remember HourlyWeatherController,\nwe have our HourLead.html.\n\n147\n00:08:09.799 --> 00:08:15.950\nAnd then what do we want in our index.js,\nwhich is the definition of our component.\n\n148\n00:08:15.950 --> 00:08:24.810\nSo let's get our controller =\nrequire('./hourly.controller').\n\n149\n00:08:24.810 --> 00:08:34.171\nAnd our template =\nrequire('./hourly.html').\n\n150\n00:08:34.171 --> 00:08:38.529\nAnd const component.\n\n151\n00:08:38.529 --> 00:08:45.561\nComponent =, there we go,\nI forgot an equals sign.\n\n152\n00:08:45.561 --> 00:08:49.870\nSo I just want controller,\nand the template, all right?\n\n153\n00:08:49.870 --> 00:08:54.540\nSo let's make sure we module.exports =\ncomponent that, because if you don't,\n\n154\n00:08:54.540 --> 00:08:58.150\nWhen you try to import this,\nnothing's going to happen.\n\n155\n00:08:59.550 --> 00:09:02.270\nWhen you try to wire it up in Main.js,\nit's just gonna go yeah,\n\n156\n00:09:02.270 --> 00:09:04.880\nI'll let you do that, but\nit's not actually gonna do anything.\n\n157\n00:09:04.880 --> 00:09:06.560\nSo I have my component here, and\n\n158\n00:09:06.560 --> 00:09:11.740\nthen I'm gonna come to main.js and let's\nbring in our hourly weather component.\n\n159\n00:09:11.740 --> 00:09:17.277\nSo const HourlyWeatherComponent =,\n\n160\n00:09:17.277 --> 00:09:26.345\nand that's require('./components.'),\nthere we go.\n\n161\n00:09:26.345 --> 00:09:30.300\nAnd then hourly.\n\n162\n00:09:30.300 --> 00:09:32.105\nJust like so.\n\n163\n00:09:32.105 --> 00:09:34.410\nAnd then we're gonna wire\nthat up to hourly weather.\n\n164\n00:09:35.560 --> 00:09:39.620\nDon't forget the little semicolon there.\n\n165\n00:09:40.810 --> 00:09:44.030\nWe can't have a semicolon\nthat breaks this chain.\n\n166\n00:09:44.030 --> 00:09:45.180\nNever break the chain.\n\n167\n00:09:45.180 --> 00:09:46.320\nI feel like there's a song in there.\n\n168\n00:09:46.320 --> 00:09:48.670\n&gt;&gt; Never break the, never break-\n&gt;&gt; See, there is a song there.\n\n169\n00:09:48.670 --> 00:09:50.910\n&gt;&gt; See, you gotta be careful around Zach.\n\n170\n00:09:50.910 --> 00:09:53.300\nYou say song lyrics and it's all over.\n\n171\n00:09:53.300 --> 00:09:54.470\n&gt;&gt; It's all musical, isn't it?\n\n172\n00:09:54.470 --> 00:09:57.500\n&gt;&gt; The band plays and then we're just\ngetting nothing done the rest of the day.\n\n173\n00:09:57.500 --> 00:09:58.770\n&gt;&gt; They never break the chain.\n\n174\n00:09:58.770 --> 00:10:01.581\n&gt;&gt; So what-\n&gt;&gt; I'm done.\n\n175\n00:10:01.581 --> 00:10:02.174\n&gt;&gt; And we broke the chain.\n\n176\n00:10:02.174 --> 00:10:03.390\n&gt;&gt; I'm done.\n&gt;&gt; And we broke the chain..\n\n177\n00:10:03.390 --> 00:10:05.004\n&gt;&gt; I'm done.\n&gt;&gt; Okay, we broke the chain.\n\n178\n00:10:05.004 --> 00:10:08.620\nAll right, [LAUGH] so we wire up our\nHourlyWeatherComponent, and there we go.\n\n179\n00:10:08.620 --> 00:10:10.790\nIt's kind of behind my head,\nlet me do some over scroll here.\n\n180\n00:10:10.790 --> 00:10:13.523\n[SOUND] And there we go.\n\n181\n00:10:13.523 --> 00:10:17.220\nSo HourlyWeatherComponent I've\nadded that semicolon there.\n\n182\n00:10:17.220 --> 00:10:21.886\nI removed it here, and notice,\nI am Well I'm going by my own advice,\n\n183\n00:10:21.886 --> 00:10:25.030\nI'm keeping all the components collected\ntogether, all my services together.\n\n184\n00:10:25.030 --> 00:10:27.240\nI only have one service but\nif I had multiple services,\n\n185\n00:10:27.240 --> 00:10:29.950\nI assure you they'll be right\nthere with that other service.\n\n186\n00:10:29.950 --> 00:10:33.510\nSo let's see if the hourly\nweather component\n\n187\n00:10:33.510 --> 00:10:36.850\nactually renders on the page\nbecause we just wired this up.\n\n188\n00:10:38.020 --> 00:10:40.992\nSo it looks like we're good to go and\n\n189\n00:10:40.992 --> 00:10:43.030\nwe got some more counsel laws\nthat we gotta get rid of.\n\n190\n00:10:43.030 --> 00:10:46.212\nBut get the weather and\nthat one renders, right?\n\n191\n00:10:46.212 --> 00:10:48.524\nThat's actually our\ncurrent weather component.\n\n192\n00:10:48.524 --> 00:10:55.587\nBut we don't have anything rendering and\nthat's a problem, and why is that?\n\n193\n00:10:55.587 --> 00:11:00.940\nWell silly me, I forgot a piece and\nI just realized that.\n\n194\n00:11:00.940 --> 00:11:03.740\nIf you're going to send things\nthrough html attributes,\n\n195\n00:11:03.740 --> 00:11:06.970\nthese attributes are what\nsome would call props or\n\n196\n00:11:06.970 --> 00:11:11.068\nproperties, Actually have to\nlist them as a binding, right?\n\n197\n00:11:11.068 --> 00:11:15.526\nAnd your components, so bindings and\n\n198\n00:11:15.526 --> 00:11:21.710\nthat is weatherData, and\nit is a one way binding.\n\n199\n00:11:21.710 --> 00:11:22.780\nJust like so.\n\n200\n00:11:22.780 --> 00:11:28.200\nAnd I do then, weatherData,\nbecause this is weather-data in HTML.\n\n201\n00:11:28.200 --> 00:11:31.506\nIt's just a convention of angular uses,\nits to abide by HTML and\n\n202\n00:11:31.506 --> 00:11:35.688\nJavaScript naming conventions for\nproperties and tags, and things like that.\n\n203\n00:11:35.688 --> 00:11:40.128\nI think there's another standard called\nweb component standard that is for,\n\n204\n00:11:40.128 --> 00:11:41.710\nActually this very thing,\n\n205\n00:11:41.710 --> 00:11:46.750\nbuilding custom HTML attributes that have\ncertain behaviors, and those are dashes.\n\n206\n00:11:46.750 --> 00:11:49.670\nDon't quote me on that, but\nI'm pretty sure that's the case.\n\n207\n00:11:49.670 --> 00:11:52.205\nSo if we refresh, we're good to go.\n\n208\n00:11:52.205 --> 00:11:54.918\nAnd I click Get Weather and there we go.\n\n209\n00:11:54.918 --> 00:11:59.040\nBut I didn't want to mock this up just\nto draw our attention to something.\n\n210\n00:12:00.360 --> 00:12:07.285\nSo this hourly and minutely for this fact,\nif minutely is available, we have summary,\n\n211\n00:12:07.285 --> 00:12:12.351\nicon, and then within that hourly,\nthere's another .data.\n\n212\n00:12:12.351 --> 00:12:16.130\nIt is an array of objects and\nhow many are there?\n\n213\n00:12:16.130 --> 00:12:17.208\nThere's about 48.\n\n214\n00:12:17.208 --> 00:12:21.340\nIt gives you about the next 48\nhours worth of information.\n\n215\n00:12:21.340 --> 00:12:26.304\nTime, summary, icon, precip, temperature,\nso on and so forth, which looks\n\n216\n00:12:26.304 --> 00:12:31.344\na lot like the current weather object,\nexcept that I get 48 of them, all right?\n\n217\n00:12:31.344 --> 00:12:36.078\nAnd as it stands if I scroll and I just\nprinted those one errand after the other,\n\n218\n00:12:36.078 --> 00:12:40.120\nand didn't provide some way to\narrange those in a concise manner,\n\n219\n00:12:41.610 --> 00:12:44.770\nThat's a lot of information,\njust kind of bleh on the screen.\n\n220\n00:12:46.200 --> 00:12:48.710\nThat's not quite what I want.\n\n221\n00:12:48.710 --> 00:12:52.360\nSo just to make sure it's all there,\n&gt;&gt; It would be a messy cornucopia.\n\n222\n00:12:52.360 --> 00:12:58.105\n&gt;&gt; Yeah, it would be a messy cornucopia,\na veritable plethora of mess, right?\n\n223\n00:12:58.105 --> 00:13:02.100\n&gt;&gt; [LAUGH]\n&gt;&gt; So I do like words, words are fun.\n\n224\n00:13:02.100 --> 00:13:03.260\n&gt;&gt; Yeah, they are.\n\n225\n00:13:03.260 --> 00:13:04.730\n&gt;&gt; So, if I come here, and\n\n226\n00:13:04.730 --> 00:13:09.900\nlet's just make sure that I have time and\ntemperature, all right?\n\n227\n00:13:09.900 --> 00:13:13.410\nSo let's pick those two and\npicking those two,\n\n228\n00:13:13.410 --> 00:13:17.510\nI'm just gonna print those out,\njust so they're always there.\n\n229\n00:13:17.510 --> 00:13:18.200\nOkay?\n\n230\n00:13:18.200 --> 00:13:20.695\nNow I'm gonna put these on a table,\nfor now.\n\n231\n00:13:20.695 --> 00:13:24.150\nI don't guarantee you that they\nwill be on a table, long term.\n\n232\n00:13:24.150 --> 00:13:26.520\nAs a matter of fact, you know what?\n\n233\n00:13:26.520 --> 00:13:29.970\nLet's make it even easier,\nlet's just make them list items.\n\n234\n00:13:29.970 --> 00:13:34.070\nThey won't necessarily be that way, long\nterm, but it is nice to just to see that\n\n235\n00:13:34.070 --> 00:13:37.390\nthey populate, they're always there,\nwe're good to go.\n\n236\n00:13:37.390 --> 00:13:41.675\nIn addition to I'm going to\nactually put a title on hourly, so\n\n237\n00:13:41.675 --> 00:13:44.540\nthat we can see that it's separated.\n\n238\n00:13:44.540 --> 00:13:49.020\nSo again, not long term,\nhow we're going to do this, but\n\n239\n00:13:49.020 --> 00:13:52.690\nin the short term,\nwell this is how we're going to do this.\n\n240\n00:13:52.690 --> 00:13:55.730\n&gt;&gt; [LAUGH]\n&gt;&gt; So hourly.\n\n241\n00:13:55.730 --> 00:13:57.180\n&gt;&gt; Wait, stop, don't.\n\n242\n00:13:57.180 --> 00:13:59.387\n&gt;&gt; No, no, all right?\n\n243\n00:13:59.387 --> 00:14:03.420\nSo let's just put a summary here, and\nI'm gonna create a paragraph, and\n\n244\n00:14:03.420 --> 00:14:09.504\nthat's going to be\n$ctrl.weatherData.summary.\n\n245\n00:14:09.504 --> 00:14:11.380\nJust like so.\n\n246\n00:14:11.380 --> 00:14:15.043\nAnd well, from here I'm gonna create\nan unordered list and a list item.\n\n247\n00:14:15.043 --> 00:14:20.419\nAnd then ng-repeat = 'point\n\n248\n00:14:20.419 --> 00:14:26.450\nin $ctrl .weatherData.data.\n\n249\n00:14:26.450 --> 00:14:28.766\nNow, why is it weatherData.data?\n\n250\n00:14:28.766 --> 00:14:32.144\nThat's because in the app.html,\nI actually piped in.\n\n251\n00:14:32.144 --> 00:14:34.195\nI kind of forced in the hourly portion,\n\n252\n00:14:34.195 --> 00:14:37.910\njust the hourly portion which\nhas that data attribute.\n\n253\n00:14:37.910 --> 00:14:38.880\nSo, I'm gonna loop over,\n\n254\n00:14:38.880 --> 00:14:42.810\njust the data attribute, and\ncreate in an ordered list as such.\n\n255\n00:14:44.410 --> 00:14:47.697\nOkay, so\nI'm building this hourly component and\n\n256\n00:14:47.697 --> 00:14:51.013\nthen for each one of these For each point,\n\n257\n00:14:51.013 --> 00:14:56.090\nI just wanna say,\ntemperature, temperature.\n\n258\n00:14:56.090 --> 00:15:01.750\nI don't know why I want to spell\nthat incorrectly, but I do insist.\n\n259\n00:15:01.750 --> 00:15:03.120\nSo point.\n\n260\n00:15:03.120 --> 00:15:09.490\nFor each one of these points,\nI want the temperature just like so,\n\n261\n00:15:09.490 --> 00:15:13.791\nand this is the degrees Fahrenheit.\n\n262\n00:15:17.400 --> 00:15:18.820\nLike so.\n\n263\n00:15:18.820 --> 00:15:23.870\nAnd also, let's just put a dash here and\nthen the time.\n\n264\n00:15:23.870 --> 00:15:28.062\nSo time, and then times 1000,\n\n265\n00:15:28.062 --> 00:15:32.409\nthat'll give me the milliseconds.\n\n266\n00:15:32.409 --> 00:15:36.080\nI have seconds, I want milliseconds,\nbecause of JavaScript dates.\n\n267\n00:15:36.080 --> 00:15:41.243\nOne milliseconds, so and then I'm\ngonna pipe that through the date and\n\n268\n00:15:41.243 --> 00:15:43.750\nI'm gonna put this short format.\n\n269\n00:15:43.750 --> 00:15:48.243\nNow we may come back, we will\ndefinitely come back and change those.\n\n270\n00:15:48.243 --> 00:15:50.343\nBut we have a dash here and\n\n271\n00:15:50.343 --> 00:15:56.452\nI'm just gonna add this as such just\nto show you that's not a minus sign.\n\n272\n00:15:56.452 --> 00:15:59.663\nAll right, so let's see if that works,\nrefresh, and, well,\n\n273\n00:15:59.663 --> 00:16:01.039\nthere's hourly weather.\n\n274\n00:16:01.039 --> 00:16:03.531\nAnd boom, there we go.\n\n275\n00:16:03.531 --> 00:16:09.219\nBut still a giant list, but\nit's not quite as giant as it was.\n\n276\n00:16:09.219 --> 00:16:12.160\nIt would almost be nice if they were\nnestled right next to each other.\n\n277\n00:16:12.160 --> 00:16:14.470\nSo maybe a little individual pieces.\n\n278\n00:16:14.470 --> 00:16:16.630\nBut we can talk about that in due time.\n\n279\n00:16:16.630 --> 00:16:21.420\nBut there is one thing that I need to fix\nbecause I did it in the other one and\n\n280\n00:16:21.420 --> 00:16:23.810\nit's helpful,\nis I'm gonna put this in a section.\n\n281\n00:16:25.690 --> 00:16:28.341\nAnd I'm gonna say ng-if,\n\n282\n00:16:28.341 --> 00:16:35.160\nonly render this if there is\na weather data available, okay?\n\n283\n00:16:35.160 --> 00:16:39.813\nSo I'm gonna grab this, and\nthen boom, just like so.\n\n284\n00:16:39.813 --> 00:16:44.330\nSo the refresh, wait for\nit to rebuild, and\n\n285\n00:16:44.330 --> 00:16:49.070\nthen get the weather,\nnow it actually renders just those pieces.\n\n286\n00:16:49.070 --> 00:16:51.850\nSo that's our hourly component.\n\n287\n00:16:53.060 --> 00:16:56.890\nNot quite what we wanted, but\nit is a pretty good start.\n\n288\n00:16:56.890 --> 00:16:59.570\n&gt;&gt; Time keeps on ticking into the future.\n\n289\n00:17:01.140 --> 00:17:04.122\nTime keeps on ticking, ticking,\nticking into the future.\n\n290\n00:17:04.122 --> 00:17:05.659\n&gt;&gt; Into the future, yeah.\n\n291\n00:17:05.659 --> 00:17:08.095\n&gt;&gt; Well, listen, can you show us\nhow these components come together?\n\n292\n00:17:08.095 --> 00:17:11.766\n&gt;&gt; So we have our hourly and in order\nto bring all these things together,\n\n293\n00:17:11.766 --> 00:17:15.230\nwe should probably go ahead and\nmake our minutely one, right?\n\n294\n00:17:15.230 --> 00:17:15.748\n&gt;&gt; Yes, minutely.\n&gt;&gt; So\n\n295\n00:17:15.748 --> 00:17:19.713\nthe tricky part of this is we have to\nmake sure that we have minutely data,\n\n296\n00:17:19.713 --> 00:17:23.010\notherwise, we're gonna be like,\nit's not working.\n\n297\n00:17:23.010 --> 00:17:27.064\nAnd then what we find out is the minutely\ndata part is not defined for\n\n298\n00:17:27.064 --> 00:17:29.441\nthe particular latitude and longitude.\n\n299\n00:17:29.441 --> 00:17:33.097\nNow I'm gonna pick a latitude and\nlongitude pair that I know is like\n\n300\n00:17:33.097 --> 00:17:36.310\nsmack dab in the United States,\nlike right in the middle.\n\n301\n00:17:36.310 --> 00:17:37.830\nI'm not even sure where it is but\n\n302\n00:17:37.830 --> 00:17:41.270\nI know it's pretty close\nto like a large land area.\n\n303\n00:17:41.270 --> 00:17:44.360\n&gt;&gt; Ohio.\n&gt;&gt; It may be Ohio, it may be Illinois.\n\n304\n00:17:44.360 --> 00:17:46.700\n&gt;&gt; It may be Iowa, who knows?\n\n305\n00:17:46.700 --> 00:17:50.213\nBut we're getting close to there so let's\ngo ahead and get that minutely component.\n\n306\n00:17:50.213 --> 00:17:55.060\nAnd then we'll take a look at how all\nof these things kind of coalesce into\n\n307\n00:17:55.060 --> 00:17:56.630\nour application.\n\n308\n00:17:56.630 --> 00:17:58.530\n&gt;&gt; Good.\n&gt;&gt; So let's take a look at my screen here.\n\n309\n00:17:58.530 --> 00:18:01.990\nAnd I don't particularly like this.\n\n310\n00:18:01.990 --> 00:18:04.460\nWe will definitely fix this, hopefully.\n\n311\n00:18:04.460 --> 00:18:09.690\nAnd by definitely, I mean likely,\nno guarantees about anything.\n\n312\n00:18:09.690 --> 00:18:15.636\nAnyway, so, we have that, right,\nand so our hourly weather's done.\n\n313\n00:18:15.636 --> 00:18:17.727\nSo now let's build our minutely,\n\n314\n00:18:17.727 --> 00:18:22.238\nwhich means I can just get rid of\nall of the hourly stuff for now.\n\n315\n00:18:22.238 --> 00:18:26.970\nBut I am gonna keep open,\nnot the current, I've got my main,\n\n316\n00:18:26.970 --> 00:18:29.709\nmy app controller, my app.html.\n\n317\n00:18:29.709 --> 00:18:31.140\nAnd I don't even need my app controller.\n\n318\n00:18:31.140 --> 00:18:34.120\nI need my main.js and my app.html.\n\n319\n00:18:34.120 --> 00:18:36.563\nHow am I going to make minutely?\n\n320\n00:18:36.563 --> 00:18:43.257\nWell, I'm gonna create a minutely\nweather component, and\n\n321\n00:18:43.257 --> 00:18:49.460\nthe weather data is going\nto be ctrl.data.minutely.\n\n322\n00:18:49.460 --> 00:18:50.010\nThere we go.\n\n323\n00:18:52.350 --> 00:18:56.732\nAnd hopefully I have not forgotten\nhow to spell certain things,\n\n324\n00:18:56.732 --> 00:19:00.394\nbecause I'm hoping that's\nhow you spell minutely.\n\n325\n00:19:00.394 --> 00:19:03.002\nBecause that's how I have spelled\nit everywhere else in my notes and\n\n326\n00:19:03.002 --> 00:19:03.560\neverything.\n\n327\n00:19:03.560 --> 00:19:05.263\nSo-\n&gt;&gt; Minute-l-y.\n\n328\n00:19:05.263 --> 00:19:06.840\n&gt;&gt; Minut-l-y, we'll hope.\n\n329\n00:19:06.840 --> 00:19:10.000\nSo lets create a new folder and\nlets call it minutely.\n\n330\n00:19:10.000 --> 00:19:13.800\nOr, yeah, minutely, and\nthen within that, it's kind of par for\n\n331\n00:19:13.800 --> 00:19:16.470\nthe course, we need an index.js.\n\n332\n00:19:16.470 --> 00:19:24.870\nAnd we need well, minutely.html, and\nwe also need a minutely controller.\n\n333\n00:19:24.870 --> 00:19:28.511\nNow, do we ultimately need these\ncontrollers and things like that?\n\n334\n00:19:28.511 --> 00:19:31.880\nNo, it's all right if\nthere's not a lot of.\n\n335\n00:19:31.880 --> 00:19:35.360\nBut we don't have any interactions, there\nmay be additional like click interactions,\n\n336\n00:19:35.360 --> 00:19:36.510\nhover interactions.\n\n337\n00:19:36.510 --> 00:19:38.440\nMaybe some data manipulation that occurs.\n\n338\n00:19:38.440 --> 00:19:40.940\nSo I always put them in there\neven if they're empty for now.\n\n339\n00:19:40.940 --> 00:19:44.440\nIf I end up not using them and\nit's just purely template, right,\n\n340\n00:19:44.440 --> 00:19:47.960\nit's just purely presentational,\nI may come back and sweep them back out.\n\n341\n00:19:47.960 --> 00:19:49.060\nJust get rid of them.\n\n342\n00:19:49.060 --> 00:19:52.080\nIt just depends on the context\nof the project per se.\n\n343\n00:19:52.080 --> 00:19:55.700\nSo minutely.controller.js,\nand there we go.\n\n344\n00:19:55.700 --> 00:19:57.540\nSo let's go ahead and\ncreate our controller.\n\n345\n00:19:57.540 --> 00:20:01.521\nSo MinutelyController and\n\n346\n00:20:01.521 --> 00:20:06.890\nconstructor as such, it's empty.\n\n347\n00:20:06.890 --> 00:20:10.852\nAnd that's our controller for\nnow other than the dependencies.\n\n348\n00:20:10.852 --> 00:20:14.223\nSo .$inject and boom, and\n\n349\n00:20:14.223 --> 00:20:21.430\nthen module.exports = MinutelyController,\nboom, cool.\n\n350\n00:20:21.430 --> 00:20:27.130\nAnd then we're gonna do a very similar\nthing for minutely that we did for hourly.\n\n351\n00:20:27.130 --> 00:20:31.040\nAnd that's create a pre tag, and\n\n352\n00:20:31.040 --> 00:20:35.400\nits going to be ctrl.weatherData.\n\n353\n00:20:35.400 --> 00:20:37.821\n&gt;&gt; And then pipe it to the json.\n\n354\n00:20:37.821 --> 00:20:41.457\nAnd that's to make sure we have\nan appropriate latitude and\n\n355\n00:20:41.457 --> 00:20:44.594\nlongitude combination\nthat actually shows this.\n\n356\n00:20:44.594 --> 00:20:47.400\nAnd then for here,\nI'm going to bring in the controller.\n\n357\n00:20:47.400 --> 00:20:53.430\nYou're like, wow,\nyou're doing a lot of the same thing.\n\n358\n00:20:53.430 --> 00:20:58.024\nWell, that's just because angular needs\nus to define these things appropriately.\n\n359\n00:21:00.703 --> 00:21:07.414\nAnd then minutely.html, and\nthen here's our component.\n\n360\n00:21:07.414 --> 00:21:13.400\nAnd then controller, template, and\nthen don't forget our bindings.\n\n361\n00:21:13.400 --> 00:21:19.186\nAll right, that could be\nwhole bunch of bad, bindings.\n\n362\n00:21:19.186 --> 00:21:25.299\nAnd then that's gonna be weatherData,\nand that's a one-way binding.\n\n363\n00:21:25.299 --> 00:21:31.414\nAnd then module.exports, And component.\n\n364\n00:21:31.414 --> 00:21:35.130\nNow, we have all of our component set up,\nwe should be good to go.\n\n365\n00:21:35.130 --> 00:21:39.690\nExcept we need to make sure that we wire\nit up in our main application description.\n\n366\n00:21:39.690 --> 00:21:46.866\nSo Minutely, MinutelyWeatherComponent,\n\n367\n00:21:46.866 --> 00:21:49.231\njust to keep naming\nconventions consistent.\n\n368\n00:21:51.973 --> 00:21:57.544\nAnd then ./components/minutely,\n\n369\n00:21:57.544 --> 00:22:00.755\nas such, semicolon.\n\n370\n00:22:00.755 --> 00:22:07.029\nLet's hide that sidebar there, and boom.\n\n371\n00:22:07.029 --> 00:22:09.694\nMinutelyWeather.\n\n372\n00:22:09.694 --> 00:22:11.950\nMinutelyWeatherComponent, all right.\n\n373\n00:22:11.950 --> 00:22:16.915\nSo this is all wired up,\nthis should work, assuming that we have,\n\n374\n00:22:16.915 --> 00:22:18.965\nwell, minutelyWeather.\n\n375\n00:22:18.965 --> 00:22:21.400\nI know it's not a 0,0 as I said before.\n\n376\n00:22:21.400 --> 00:22:24.870\nThat's western Africa,\noff in the Atlantic.\n\n377\n00:22:24.870 --> 00:22:27.026\nI don't think minutely\nmakes a lot of sense.\n\n378\n00:22:27.026 --> 00:22:32.031\nHowever, if I go for\nsomething around 30, and\n\n379\n00:22:32.031 --> 00:22:38.270\nthen -100,\nthat's about middle of the United States.\n\n380\n00:22:40.350 --> 00:22:45.252\nAnd then, if we run, there's hourly,\nand look at there, there's minutely.\n\n381\n00:22:45.252 --> 00:22:46.022\n&gt;&gt; Ooh!\n&gt;&gt; I got lucky.\n\n382\n00:22:46.022 --> 00:22:47.021\nWhoo!\n\n383\n00:22:47.021 --> 00:22:47.943\n&gt;&gt; Ooh!\n\n384\n00:22:47.943 --> 00:22:50.501\n&gt;&gt; Ooh, he's excited, I'm excited.\n\n385\n00:22:50.501 --> 00:22:51.830\nHopefully, you are as well.\n\n386\n00:22:51.830 --> 00:22:57.610\nNow, if we look at minutely, we have\na structure very similar to hourly.\n\n387\n00:22:57.610 --> 00:23:03.211\nWe have summary and an icon,\nand then, I think it's funny.\n\n388\n00:23:03.211 --> 00:23:05.319\nWhat's the summary,\npossible light rain for one hour?\n\n389\n00:23:05.319 --> 00:23:06.420\nWhat's the icon for rain?\n\n390\n00:23:07.430 --> 00:23:09.850\nI wonder if we go and\nread these individual pieces?\n\n391\n00:23:11.240 --> 00:23:14.762\nI wonder what they're\ngoing to let us know?\n\n392\n00:23:14.762 --> 00:23:16.330\nThey're going to let us\nknow about the rain.\n\n393\n00:23:16.330 --> 00:23:17.290\n&gt;&gt; Yep.\n\n394\n00:23:17.290 --> 00:23:21.430\n&gt;&gt; And you'll notice in minutely, this\ndata attribute that we can repeat over.\n\n395\n00:23:21.430 --> 00:23:22.760\nWe can kind of duplicate.\n\n396\n00:23:24.040 --> 00:23:27.670\nWe get time precip intensity error.\n\n397\n00:23:27.670 --> 00:23:32.680\nThat's interesting, so\nthis API sometimes does change over time.\n\n398\n00:23:32.680 --> 00:23:34.731\nAnd I've used it before.\n\n399\n00:23:34.731 --> 00:23:36.940\nThis used to be a lot more simplified.\n\n400\n00:23:36.940 --> 00:23:40.020\nI'm pretty sure you got precip intensity,\nand precip probability, but\n\n401\n00:23:40.020 --> 00:23:42.890\nin newer additions they're\nadding information.\n\n402\n00:23:42.890 --> 00:23:44.330\nWhat is the error, right?\n\n403\n00:23:44.330 --> 00:23:50.763\nIf I have a .003% of\nchance of precipitation,\n\n404\n00:23:50.763 --> 00:23:54.811\nand the error is 0.001%.\n\n405\n00:23:58.091 --> 00:24:00.881\nExcuse me this is intensity,\nI'm sorry, I'm sorry.\n\n406\n00:24:00.881 --> 00:24:05.641\nSo this is very light Give or take,\nand it's still very light, but\n\n407\n00:24:05.641 --> 00:24:08.958\nprecip probability is 0.03, all right?\n\n408\n00:24:08.958 --> 00:24:12.252\nNow, we have to look,\nbecause it may be these are percentages,\n\n409\n00:24:12.252 --> 00:24:15.364\nor these are just decimal\nrepresentations of percentages.\n\n410\n00:24:15.364 --> 00:24:18.022\nWe'll get to that when we finally nail\n\n411\n00:24:18.022 --> 00:24:21.357\ndown what our component\nis going to render out.\n\n412\n00:24:21.357 --> 00:24:24.682\nBut this gives you, roughly, the next,\n\n413\n00:24:24.682 --> 00:24:29.442\nif I'm not mistaken,\nabout 60 minutes, plus or minus.\n\n414\n00:24:29.442 --> 00:24:34.155\nThey may have changed it to add\nadditional times of precipitation,\n\n415\n00:24:34.155 --> 00:24:35.899\nthat's all you can get.\n\n416\n00:24:35.899 --> 00:24:39.676\nBecause that's what's likely to change\nin a pretty quick minute, right?\n\n417\n00:24:39.676 --> 00:24:42.703\nAgain, just a throw back, you walk\noutside, it wasn't gonna rain, hey,\n\n418\n00:24:42.703 --> 00:24:43.783\nit's raining everywhere.\n\n419\n00:24:43.783 --> 00:24:47.047\nSo, that's all we get, we don't get\ntemperature, doesn't really make sense.\n\n420\n00:24:47.047 --> 00:24:50.875\nWe don't get any of that finer grain\ndetail, all we get is for precipitation,\n\n421\n00:24:50.875 --> 00:24:52.562\nand that's perfectly okay by me.\n\n422\n00:24:52.562 --> 00:24:56.610\nWe're gonna render this out very\nsimilarly that we did to hourly, but\n\n423\n00:24:56.610 --> 00:25:01.224\nI don't think that makes sense in the\ngrand scheme of things over the long term.\n\n424\n00:25:01.224 --> 00:25:07.013\nThis kind of lends itself to\nalmost like a time series graph,\n\n425\n00:25:07.013 --> 00:25:10.426\nbut who knows, who knows, right?\n\n426\n00:25:10.426 --> 00:25:13.170\nI'm teasing again a little bit Zach,\nwho knows?\n\n427\n00:25:13.170 --> 00:25:17.472\nSo let's just get that rendered out,\nso we don't have that pretag there.\n\n428\n00:25:17.472 --> 00:25:18.777\nI come to Minutely, and\n\n429\n00:25:18.777 --> 00:25:22.638\nlet's create that section that we've\nseen in some of the other ones.\n\n430\n00:25:22.638 --> 00:25:27.687\nAnd so ng-if, there is weatherData,\n\n431\n00:25:27.687 --> 00:25:32.894\nonly render it if there is weatherData.\n\n432\n00:25:32.894 --> 00:25:39.151\nAnd well, let's create a summary,\nand that's a paragraph,\n\n433\n00:25:39.151 --> 00:25:43.882\nand ctrl.summary, weatherData.summary.\n\n434\n00:25:48.346 --> 00:25:52.399\nAnd, let's actually create\na heading of Minutely.\n\n435\n00:25:55.890 --> 00:26:00.505\nAnd ul, and ng-repeat, again, this is for\n\n436\n00:26:00.505 --> 00:26:05.008\neach data point in the weatherData.data.\n\n437\n00:26:05.008 --> 00:26:08.119\nSadly, sometimes when\nyou use external APIs,\n\n438\n00:26:08.119 --> 00:26:12.099\nnaming gets a little interesting,\nso weatherData.data.\n\n439\n00:26:12.099 --> 00:26:18.478\nAnd then for each one of those points,\nlet's just say,\n\n440\n00:26:18.478 --> 00:26:24.452\npoint, you actually have\nto write the expression,\n\n441\n00:26:24.452 --> 00:26:28.663\npoint in this weatherData.data for\n\n442\n00:26:28.663 --> 00:26:32.219\npoint.precipProbability.\n\n443\n00:26:34.781 --> 00:26:38.578\nLet's just say Prob, and\n\n444\n00:26:38.578 --> 00:26:42.719\nthen dash, and the time, so\n\n445\n00:26:42.719 --> 00:26:47.897\npoint.time times 1000 type,\n\n446\n00:26:47.897 --> 00:26:51.533\ndate, short, as such.\n\n447\n00:26:51.533 --> 00:26:58.144\nAll right, so there we go, there we go,\nwe've got our nice little refresh,\n\n448\n00:26:58.144 --> 00:27:02.639\nand we're going to go\nback to 30 negative 100.\n\n449\n00:27:02.639 --> 00:27:05.678\nAnd boom, we have hourly and\nwe have minutely.\n\n450\n00:27:05.678 --> 00:27:08.944\nAnd notice if we look here,\n\n451\n00:27:08.944 --> 00:27:13.781\nprobability of rain starts fairly low.\n\n452\n00:27:13.781 --> 00:27:20.188\nAnd over what appears to be the next hour,\nwe get a spike of about 50%,\n\n453\n00:27:20.188 --> 00:27:25.352\nand then it tails off, and\nthen, yup, it goes back down.\n\n454\n00:27:25.352 --> 00:27:29.651\nSo when you read this in a line by line,\nit's not as easy to read, so this\n\n455\n00:27:29.651 --> 00:27:34.106\nis probably a better place to represent\nthe data in a different capacity.\n\n456\n00:27:34.106 --> 00:27:38.283\nBut now we have all of our components\nput together, they're all kind of\n\n457\n00:27:38.283 --> 00:27:42.263\nthere ready to go and we can make\ndecisions component by component.\n\n458\n00:27:42.263 --> 00:27:46.465\n&gt;&gt; Justin, I'm starting to see a pattern\nhere, is this why we leave all the data in\n\n459\n00:27:46.465 --> 00:27:50.134\nthe app component and then just pass\nit along, is that why we do that?\n\n460\n00:27:50.134 --> 00:27:53.051\n&gt;&gt; That is, and\nyou're alluding to this pattern, and\n\n461\n00:27:53.051 --> 00:27:55.185\nI'm gonna zoom out just a little bit.\n\n462\n00:27:55.185 --> 00:27:58.336\nNotice we have a search,\nwhich is an interaction component,\n\n463\n00:27:58.336 --> 00:28:03.005\nit tells the app component to search, but\nthen current-weather, hourly-weather, and\n\n464\n00:28:03.005 --> 00:28:06.535\nminutely-weather, I wonder what\neach one of those components do.\n\n465\n00:28:06.535 --> 00:28:10.541\nYeah, it's a little repetitive,\nand we can probably abstract this,\n\n466\n00:28:10.541 --> 00:28:14.772\nnow I'm not necessarily gonna do that\nhere, we could do some crazy stuff.\n\n467\n00:28:14.772 --> 00:28:18.567\nI like declarative, understandable more so\nthan trying to abstract and\n\n468\n00:28:18.567 --> 00:28:19.508\nmake it the best.\n\n469\n00:28:19.508 --> 00:28:23.306\nSo get it working first, so\ncurrent-weather, I wonder what it does.\n\n470\n00:28:23.306 --> 00:28:26.501\nWell, it needs some weather data,\nit needs the current-weather data,\n\n471\n00:28:26.501 --> 00:28:28.724\nand then it probably renders\nthe current weather.\n\n472\n00:28:28.724 --> 00:28:32.560\nIf I wanted to change that,\nI just go fix that part,\n\n473\n00:28:32.560 --> 00:28:36.115\nhourly-weather, minutely-weather.\n\n474\n00:28:36.115 --> 00:28:40.128\nWell, that makes sense,\nthey're just to those pieces.\n\n475\n00:28:40.128 --> 00:28:44.369\nSo this pattern kind of propagates\nout of the fact that we\n\n476\n00:28:44.369 --> 00:28:47.527\nhave made the decision, or when I say we,\n\n477\n00:28:47.527 --> 00:28:53.416\nI have made the decision that all of\nthe information is in the app controller.\n\n478\n00:28:53.416 --> 00:28:57.225\nAnd all the information getting and\nmaintaining and stuff,\n\n479\n00:28:57.225 --> 00:29:00.369\nall of the stable portion\nis in the app component.\n\n480\n00:29:00.369 --> 00:29:06.301\nAll of the presentation aspects are then\ndelegated out to rid other components.\n\n481\n00:29:06.301 --> 00:29:09.497\nAnd then the search component\ndoes have some interactions, but\n\n482\n00:29:09.497 --> 00:29:12.869\nsome of our other ones might as well,\nbut they're still not going to\n\n483\n00:29:12.869 --> 00:29:15.910\nkeep internal state that we have\nto keep track of ourselves.\n\n484\n00:29:15.910 --> 00:29:17.263\nWe're gonna leave that to the app,\n\n485\n00:29:17.263 --> 00:29:19.077\nit makes it a little bit\neasier to reason about.\n\n486\n00:29:19.077 --> 00:29:22.673\nAnd especially when we look at this HTML,\nif I were to hand you this and\n\n487\n00:29:22.673 --> 00:29:24.905\nyou didn't know a lot about programming,\n\n488\n00:29:24.905 --> 00:29:28.440\nyou could probably make a pretty\ngood guess about what's going on.\n\n489\n00:29:28.440 --> 00:29:32.091\n&gt;&gt; Hourly and minutely-weather component,\nthis is what you've been watching,\n\n490\n00:29:32.091 --> 00:29:33.278\nJustin, any last words?\n\n491\n00:29:33.278 --> 00:29:38.454\n&gt;&gt; Well, we're just touching the very\ntip of what we hope to get done.\n\n492\n00:29:38.454 --> 00:29:42.389\nBecause there's some parts about this that\nI don't particularly like and then, well,\n\n493\n00:29:42.389 --> 00:29:45.438\nthere's some parts that I think we\ncould just make better outright.\n\n494\n00:29:45.438 --> 00:29:48.932\nSo definitely stay tuned,\nyou never know what we're gonna get into.\n\n495\n00:29:48.932 --> 00:29:52.792\n&gt;&gt; Awesome, more great episodes of\nWeather App with Angular JS and Express,\n\n496\n00:29:52.792 --> 00:29:53.722\ncoming your way.\n\n497\n00:29:53.722 --> 00:29:56.250\nAnd there is an awful lot\nof content already, so\n\n498\n00:29:56.250 --> 00:29:58.983\nmake sure you watch all of\nthe videos in the series.\n\n499\n00:29:58.983 --> 00:30:01.408\nAnd thank you for\nwatching DevPro.TV, remember,\n\n500\n00:30:01.408 --> 00:30:03.844\na good Dev Pro is always learning,\nI'm Zack Memos.\n\n501\n00:30:03.844 --> 00:30:04.659\n&gt;&gt; And I'm Justin Dennison.\n\n502\n00:30:04.659 --> 00:30:06.856\n&gt;&gt; And we will see you very soon.\n\n503\n00:30:06.856 --> 00:30:12.150\n[MUSIC]\n\n",
          "vimeoId": "227071918"
        },
        {
          "description": "Justin and Zach continue building the Weather App, discuss Unfriendly Search, look at Google for APIS, searching for city/state instead of latitude & longitude, adding to the Proxy, adding to the Weather Service, and building a new route.",
          "length": "1891",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-9-1-1-adding_google_location_search-072517.00_31_23_03.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-9-1-1-adding_google_location_search-072517.00_31_23_03.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-9-1-1-adding_google_location_search-072517.00_31_23_03.Still001-sm.jpg",
          "title": "Adding Google Location Search",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.763 --> 00:00:14.719\nHello and thank you for\nchoosing DEVPRO.TV,\n\n3\n00:00:14.719 --> 00:00:16.230\nhelping you learn wherever you go.\n\n4\n00:00:16.230 --> 00:00:18.300\nI'm your host Zach Memos.\n\n5\n00:00:18.300 --> 00:00:22.488\nAs we continue with the series\nWeather App with Angular JS and Express.\n\n6\n00:00:22.488 --> 00:00:26.440\nAnd we're gonna be adding Google\nlocation search in this episode.\n\n7\n00:00:26.440 --> 00:00:29.610\nThe person bringing us all\nthe information we need is IT expert, and\n\n8\n00:00:29.610 --> 00:00:32.485\nall around good guy,\nJustin Dennison, right over here.\n\n9\n00:00:32.485 --> 00:00:33.315\nHow you doing?\nSo good to see you.\n\n10\n00:00:33.315 --> 00:00:36.667\n&gt;&gt; Well, I'll go with the expert, but I\ndon't know if I'm necessarily a good guy.\n\n11\n00:00:36.667 --> 00:00:38.474\n&gt;&gt; You are.\n&gt;&gt; But in order to show good faith in\n\n12\n00:00:38.474 --> 00:00:40.765\nthat assertion,\nis how are you today, Zach?\n\n13\n00:00:40.765 --> 00:00:41.808\n&gt;&gt; Well, I'm doing great, and\n\n14\n00:00:41.808 --> 00:00:44.328\nI'm excited that we're continuing\non with building the Weather App.\n\n15\n00:00:44.328 --> 00:00:47.705\nAnd it looks like we've got\nthe application working and so forth.\n\n16\n00:00:47.705 --> 00:00:50.265\nBut we can do more with that, right?\n\n17\n00:00:50.265 --> 00:00:50.765\nI mean, can't we?\n\n18\n00:00:52.005 --> 00:00:56.606\n&gt;&gt; Yeah, and typically when people see\nthis first iteration, they're like, hey,\n\n19\n00:00:56.606 --> 00:01:00.024\nso this latitude,\nlongitude search is not really friendly,\n\n20\n00:01:00.024 --> 00:01:02.804\nbecause I don't know my latitude and\nlongitude.\n\n21\n00:01:02.804 --> 00:01:06.689\nI have to go actively seek out my latitude\nand longitude in order to search for\n\n22\n00:01:06.689 --> 00:01:07.430\nthe weather.\n\n23\n00:01:07.430 --> 00:01:10.610\nWell, if we were actually putting\nthis up there as a product,\n\n24\n00:01:10.610 --> 00:01:15.250\nit's probably not gonna go over too,\nwell because of that exact reason.\n\n25\n00:01:15.250 --> 00:01:19.700\nSo, it would almost be nice if I mean\nyou could search for city-state or\n\n26\n00:01:19.700 --> 00:01:24.190\nmaybe zip code or something of that nature\nand hopefully that's what we're gonna do.\n\n27\n00:01:24.190 --> 00:01:27.320\n&gt;&gt; Well so, how do we go about\nwith the ability to search for\n\n28\n00:01:27.320 --> 00:01:28.290\na location and so forth.\n\n29\n00:01:28.290 --> 00:01:29.010\nI mean how do we do it?\n\n30\n00:01:29.010 --> 00:01:32.700\n&gt;&gt; So, there's several ways and\nthe approach that we're gonna take in this\n\n31\n00:01:32.700 --> 00:01:36.850\nepisode is,\nactually using the Google Geo code API.\n\n32\n00:01:36.850 --> 00:01:40.748\nNow, geocoding is,\nI always get these reversed.\n\n33\n00:01:40.748 --> 00:01:44.120\nWe're actually gonna take a location and\nlook up the latitude and\n\n34\n00:01:44.120 --> 00:01:47.210\nlongitude in order to\nthen look up the weather.\n\n35\n00:01:47.210 --> 00:01:50.270\nThere's an addition one where I can\ngive the latitude and longitude and\n\n36\n00:01:50.270 --> 00:01:53.790\nit will give me back well\nthe location pretty close.\n\n37\n00:01:53.790 --> 00:01:58.410\nNow, what it ends up being is\na location has a fairly precise, right,\n\n38\n00:01:58.410 --> 00:02:02.270\na fairly up to the hundredths, or\n\n39\n00:02:02.270 --> 00:02:05.940\nmaybe even thousandths or ten thousandths\nof a degree of latitude and longitude.\n\n40\n00:02:05.940 --> 00:02:11.530\nBut if I say I want 30 degrees north and\nnegative 120, and\n\n41\n00:02:11.530 --> 00:02:17.130\nthat would be west, then it's gonna say,\nyeah here some close places.\n\n42\n00:02:17.130 --> 00:02:21.010\nSo this is geocode and reverse geocode,\nI always mix those up.\n\n43\n00:02:21.010 --> 00:02:25.020\nI'm pretty sure geocode is like, I give\nit a location and it gives me the lat, no\n\n44\n00:02:25.020 --> 00:02:28.571\nexcuse me, geocode, I give it a latitude\nand longitude, it gives me a location.\n\n45\n00:02:28.571 --> 00:02:30.961\n&gt;&gt; Right.\n&gt;&gt; Reverse geocode, I give it a Location,\n\n46\n00:02:30.961 --> 00:02:33.081\nand it gives me a latitude and longitude.\n\n47\n00:02:33.081 --> 00:02:37.141\nAnd hopefully, and that's what we're\ngonna do, and in order to do that,\n\n48\n00:02:37.141 --> 00:02:41.467\nthere's a few steps that we have to take\nin order to get this kind of to coalesce.\n\n49\n00:02:41.467 --> 00:02:46.270\nAnd well, we have to change our proxy,\nthat's probably gonna be the easiest way,\n\n50\n00:02:46.270 --> 00:02:50.180\nbecause this API is a RESTful endpoint,\nwell, It's an endpoint,\n\n51\n00:02:50.180 --> 00:02:51.640\nit's an HTTP endpoint.\n\n52\n00:02:51.640 --> 00:02:58.170\nI make no strong assertions about\nhow strong it conforms to RESTful.\n\n53\n00:02:58.170 --> 00:03:02.620\nI realize I said strong like four times in\nthat sentence, but that is for emphasis.\n\n54\n00:03:02.620 --> 00:03:03.630\n&gt;&gt; That's right.\n\n55\n00:03:03.630 --> 00:03:07.410\n&gt;&gt; So, we're gonna use Google to look at\nthe location, and then when we get that\n\n56\n00:03:07.410 --> 00:03:11.700\ninformation back, we're then gonna to\ncall to Dark Sky to give us the weather.\n\n57\n00:03:11.700 --> 00:03:16.220\nAnd a lot of people ask me, well,\nwhy doesn't Dark Sky just offer that?\n\n58\n00:03:16.220 --> 00:03:21.330\nAnd to some extent, it's probably because\nGoogle already has the infrastructure.\n\n59\n00:03:21.330 --> 00:03:25.990\nThey have Google Maps, it's in Google's\nbest interest to be able to support\n\n60\n00:03:25.990 --> 00:03:30.390\nthis type of operation, especially when\nit comes to searching for restaurants,\n\n61\n00:03:30.390 --> 00:03:32.780\nsearching for places,\nsearching for car dealerships.\n\n62\n00:03:32.780 --> 00:03:37.110\nRight, all of the things that Google does,\nit's kind of just ancillary to their basic\n\n63\n00:03:37.110 --> 00:03:41.680\noperations and they've exposed this\nas a service to, well, you, me,\n\n64\n00:03:41.680 --> 00:03:44.520\nand whoever can figure out how\nto actually make use of it.\n\n65\n00:03:44.520 --> 00:03:45.140\n&gt;&gt; That's right, and\n\n66\n00:03:45.140 --> 00:03:48.170\nthe Google can even see the freckles\non your arm from outer space.\n\n67\n00:03:48.170 --> 00:03:48.700\nThat's right.\n\n68\n00:03:48.700 --> 00:03:49.810\n&gt;&gt; That they can, that they can.\n\n69\n00:03:49.810 --> 00:03:51.530\nSo-\n&gt;&gt; [LAUGH]\n\n70\n00:03:51.530 --> 00:03:52.093\n&gt;&gt; That they can.\n\n71\n00:03:52.093 --> 00:03:54.450\nWe're gonna go with it,\nwe're gonna go with it.\n\n72\n00:03:54.450 --> 00:03:59.130\nFreckles from outer space, please\ndon't let that be the only thing that\n\n73\n00:03:59.130 --> 00:04:00.920\nyou kind of sink in from this episode.\n\n74\n00:04:00.920 --> 00:04:02.090\nSo-\n&gt;&gt; No, don't do that.\n\n75\n00:04:02.090 --> 00:04:03.550\n&gt;&gt; Well, are you ready?\n\n76\n00:04:03.550 --> 00:04:04.514\n&gt;&gt; Yeah, what's first?\n\n77\n00:04:04.514 --> 00:04:05.750\nWhat are we going to do first?\n\n78\n00:04:05.750 --> 00:04:09.750\n&gt;&gt; Well, let's go ahead and\ntake a look at our proxy, and\n\n79\n00:04:09.750 --> 00:04:14.790\nfrom there that'll allow us to make\nan appropriate plan, all right?\n\n80\n00:04:14.790 --> 00:04:18.980\nSo, if we take a look at my screen here,\nI have Atom open, and\n\n81\n00:04:18.980 --> 00:04:24.000\neverything's still running\nin these two windows,\n\n82\n00:04:24.000 --> 00:04:28.430\nright, and I have my webpack compiling,\nand I have my proxy service running.\n\n83\n00:04:28.430 --> 00:04:32.110\nAnd this proxy service is\nrunning using NodeIndex.js.\n\n84\n00:04:32.110 --> 00:04:37.060\nSo that's something that we need to be\naware of when we're making these changes.\n\n85\n00:04:37.060 --> 00:04:42.045\nSo we may have to adjust that, and\nif we look at proxy, well, let's just make\n\n86\n00:04:42.045 --> 00:04:46.380\nsure that all our packages.json is here,\nall right, cool deal.\n\n87\n00:04:46.380 --> 00:04:51.320\nSo that's still there and if we look at\nindex.js we have this weather router and\n\n88\n00:04:51.320 --> 00:04:55.060\nwe wire it up and\nultimately that is our proxy service.\n\n89\n00:04:55.060 --> 00:04:58.430\nThis weather router has\na single route in it.\n\n90\n00:04:58.430 --> 00:05:03.350\nAnd it's to /weather/:lat,:lon,\nthat's what we had initially.\n\n91\n00:05:03.350 --> 00:05:06.190\nAnd this uses credentials that\nwere kind of hiding away, right?\n\n92\n00:05:07.620 --> 00:05:13.780\nNow, what we want is the ability\nto look up a weather by location.\n\n93\n00:05:13.780 --> 00:05:17.350\nAnd what I mean by location is\nlike you give me a zip code or\n\n94\n00:05:17.350 --> 00:05:21.350\nyou give me a city,\nstate like New York, New York.\n\n95\n00:05:21.350 --> 00:05:27.180\nWell, I'm gonna use Google to go get that\nand then wire up another route here and\n\n96\n00:05:27.180 --> 00:05:29.060\nI'm just gonna go ahead and\ndummy in this route.\n\n97\n00:05:29.060 --> 00:05:32.470\nIt's not going to do anything\nother than just echo back for now.\n\n98\n00:05:32.470 --> 00:05:35.430\nSo let's go ahead and, let's get\na little bit of over scroll here,\n\n99\n00:05:35.430 --> 00:05:40.818\ncuz I never understood why it insists on\nnot giving me a little bit of length.\n\n100\n00:05:40.818 --> 00:05:43.520\nI know programmingwise there\nare some languages that say, hey,\n\n101\n00:05:43.520 --> 00:05:45.490\nyou should not have extra\ncharacters at the end,\n\n102\n00:05:45.490 --> 00:05:48.840\nbut I like to keep my eyes\nat the top of the screen.\n\n103\n00:05:48.840 --> 00:05:50.510\nI don't know, maybe that's just me.\n\n104\n00:05:50.510 --> 00:05:53.430\nSo, we're gonna create a get request, and\n\n105\n00:05:53.430 --> 00:05:56.880\nit's going to go weather,\nif you spell weather correctly.\n\n106\n00:05:56.880 --> 00:06:00.090\nAnd location, and then location.\n\n107\n00:06:00.090 --> 00:06:03.199\nNow, this is something that\nI do that makes sense to me.\n\n108\n00:06:03.199 --> 00:06:06.570\nYou're more than welcome to\nchange this variable name.\n\n109\n00:06:06.570 --> 00:06:10.540\nWhen I go to weather/location and\nthen :location,\n\n110\n00:06:10.540 --> 00:06:15.520\nthis is going to be replaced by some\nparameter, by something that I pass in\n\n111\n00:06:15.520 --> 00:06:19.930\nthrough the request to the API,\nor to the the proxy in this case.\n\n112\n00:06:19.930 --> 00:06:24.080\nNow, we are establishing\nan API that is HTTP based,\n\n113\n00:06:24.080 --> 00:06:27.270\nso I use those terms interchangeably,\nwell,\n\n114\n00:06:27.270 --> 00:06:32.630\nyou just have to go with it because I you\nknow sometimes I get a little interesting.\n\n115\n00:06:32.630 --> 00:06:37.910\nSo, let's get that request for response\nobject and their little fat arrow here.\n\n116\n00:06:39.070 --> 00:06:47.654\nAnd break this up and all I'm going to\ndo is send back the req.params.location.\n\n117\n00:06:47.654 --> 00:06:53.054\nNow the only reason params has a .location\nis because of this :location right here,\n\n118\n00:06:53.054 --> 00:06:57.300\nand well, if that’s the case\nlet’s see if it actually works.\n\n119\n00:06:57.300 --> 00:07:00.490\nIn the meantime, I'm going to\nhave to restart my proxy server.\n\n120\n00:07:00.490 --> 00:07:05.030\nBut since we're now working on our proxy\nserver and we need it to kind of update\n\n121\n00:07:05.030 --> 00:07:10.093\nas things occur, we're gonna put it in\nDevMode instead of that Node index.js.\n\n122\n00:07:10.093 --> 00:07:15.861\nSo let’s hoop over here and just kill\nit and then npm run dev, just like so.\n\n123\n00:07:15.861 --> 00:07:17.670\nAnd it’s going to use nodemon.\n\n124\n00:07:17.670 --> 00:07:19.812\nAnd if you haven't check out\nthe previous episodes in the series,\n\n125\n00:07:19.812 --> 00:07:21.200\ndefinitely go get check those out.\n\n126\n00:07:21.200 --> 00:07:24.925\nCuz I talked about, why we're using\nnodemon for our development purposes.\n\n127\n00:07:24.925 --> 00:07:29.447\nNodemons are running this and we'll watch\nfor changes in the server files, in that\n\n128\n00:07:29.447 --> 00:07:34.108\nway, things will restart for themselves\nand we don't have to handle that manually.\n\n129\n00:07:34.108 --> 00:07:38.861\nSo if I come over here and\nwell this is for later, this is for\n\n130\n00:07:38.861 --> 00:07:42.450\nlater, that page just solve for later, and\n\n131\n00:07:42.450 --> 00:07:47.301\nI look at\nlocalhosts:8080/weather/location:,\n\n132\n00:07:47.301 --> 00:07:52.151\nwell, a lot of people wanna put\nthe colon there but really,\n\n133\n00:07:52.151 --> 00:07:57.103\nwhat if I said New York New York,\njust like that, all right?\n\n134\n00:07:57.103 --> 00:08:00.630\nNotice it gives me exactly back New York,\nNew York.\n\n135\n00:08:00.630 --> 00:08:04.508\nWhat if I said, Palo Alto, California?\n\n136\n00:08:04.508 --> 00:08:10.241\nPalo Alto, CA, and\nthat's Palo Alto, California.\n\n137\n00:08:10.241 --> 00:08:14.910\nNow, a lot of people get really\nscared about spaces in URLs.\n\n138\n00:08:14.910 --> 00:08:18.430\nAnytime you see this %20\nin a URL that you visited,\n\n139\n00:08:18.430 --> 00:08:22.130\nthat's the escape character for a space.\n\n140\n00:08:22.130 --> 00:08:23.446\nSo don't be afraid of spaces.\n\n141\n00:08:23.446 --> 00:08:28.755\nBrowsers tend to take that,\nthey manage that for you.\n\n142\n00:08:28.755 --> 00:08:32.262\nNow, we are going to be a little hand\nwavey about some of that encoding,\n\n143\n00:08:32.262 --> 00:08:35.910\njust because I know that the underlying\nservices take care of that for us.\n\n144\n00:08:35.910 --> 00:08:37.390\nIf you're using something more primitive,\n\n145\n00:08:38.570 --> 00:08:44.400\nbe careful you may have to encode the URL\nby hand, so something to remember.\n\n146\n00:08:44.400 --> 00:08:49.400\nAnd then lastly, what if this location\nis not a city, state combination, but\n\n147\n00:08:49.400 --> 00:08:52.610\ninstead like a zip code, right?\n\n148\n00:08:52.610 --> 00:08:57.530\nLet's go 99801,\nI think that's in the Washington area,\n\n149\n00:08:57.530 --> 00:09:00.440\nright, Pacific Northwest somewhere.\n\n150\n00:09:00.440 --> 00:09:02.420\nSo that would also come back.\n\n151\n00:09:02.420 --> 00:09:05.570\nNow, that's kinda weird\nthat I can pass anything.\n\n152\n00:09:05.570 --> 00:09:10.665\nWell, anything that is\nafter /weather/location/.\n\n153\n00:09:10.665 --> 00:09:13.711\nThat's what it's going to be parsing\nas that location until it comes to\n\n154\n00:09:13.711 --> 00:09:14.430\nanother slash.\n\n155\n00:09:14.430 --> 00:09:18.550\nNow it's looking for a pattern,\njust like the pattern here.\n\n156\n00:09:18.550 --> 00:09:20.496\nThere were :lat,:lon.\n\n157\n00:09:20.496 --> 00:09:23.980\nIt was looking for\nsomething comma something.\n\n158\n00:09:23.980 --> 00:09:26.740\nHere it is looking for\njust whatever's after that.\n\n159\n00:09:26.740 --> 00:09:30.637\nI could just rake my hands across\nthe keyboard and as long as I don't hit\n\n160\n00:09:30.637 --> 00:09:37.790\na slash, Then it will just\nkind of echo that back to me.\n\n161\n00:09:37.790 --> 00:09:42.910\nAnd we're gonna make use of that fact and\nwell now, we kinda have our route set up.\n\n162\n00:09:42.910 --> 00:09:48.640\nAnd since we have our route setup,\nright, /weather/location/:location.\n\n163\n00:09:48.640 --> 00:09:50.960\nWell, now comes the hard part.\n\n164\n00:09:50.960 --> 00:09:56.060\nHow do we get that information\nfrom the Google Maps geocode API?\n\n165\n00:09:56.060 --> 00:09:56.900\n&gt;&gt; How do we?\n\n166\n00:09:56.900 --> 00:09:59.280\n&gt;&gt; Well, that is the question of the hour.\n\n167\n00:09:59.280 --> 00:10:02.870\nAnd thanks for\nreiterating that because that is, right?\n\n168\n00:10:02.870 --> 00:10:07.020\nIf we can't do that,\nall of our plans are for naught.\n\n169\n00:10:07.020 --> 00:10:10.000\nSo I actually have something already\npulled up in this other tab,\n\n170\n00:10:10.000 --> 00:10:11.870\nI gave you a little bit of a preview.\n\n171\n00:10:11.870 --> 00:10:16.040\nAnd part of it is it's a fairly long\nURL so I didn't want to type it in.\n\n172\n00:10:16.040 --> 00:10:18.960\nAnd you can just look\nup Google Maps geocode.\n\n173\n00:10:20.220 --> 00:10:25.420\nAnd you'll go to the developers'\nmaps/documentation/geocode/start.\n\n174\n00:10:25.420 --> 00:10:30.775\nNow, following our examples of\ngeocoding and reverse geocoding, okay?\n\n175\n00:10:30.775 --> 00:10:32.595\nGeocoding, you'd give it a location and\n\n176\n00:10:32.595 --> 00:10:35.680\nif I said this backwards earlier\nI'm very sorry about that.\n\n177\n00:10:35.680 --> 00:10:41.081\nGive it a location and\nit gives you this giant response.\n\n178\n00:10:41.081 --> 00:10:45.068\nNow I brought you to the documentation\nbecause the documentation at Google\n\n179\n00:10:45.068 --> 00:10:47.039\nsometimes is a little iffy, right?\n\n180\n00:10:47.039 --> 00:10:48.860\nIt's kinda hard to read, it's dense.\n\n181\n00:10:48.860 --> 00:10:54.388\nHowever, I find this documentation\nonce you learn to read it is very,\n\n182\n00:10:54.388 --> 00:11:00.027\nwell, informational, it gives you\neverything that you need, okay?\n\n183\n00:11:00.027 --> 00:11:03.118\nSo if I go to Results\n&gt; Address Components,\n\n184\n00:11:03.118 --> 00:11:08.220\nwe may get all of these things back,\nand then I have a formatted address.\n\n185\n00:11:08.220 --> 00:11:10.835\nAnd it actually just\nreturns the address to you.\n\n186\n00:11:10.835 --> 00:11:15.958\nIt also gives you a geometry\nkey that has a location key and\n\n187\n00:11:15.958 --> 00:11:19.275\nthen the latitude and longitude.\n\n188\n00:11:19.275 --> 00:11:21.550\nThat's exactly what we want.\n\n189\n00:11:21.550 --> 00:11:26.550\nBut be very aware that you may\nhave to drill down because\n\n190\n00:11:26.550 --> 00:11:29.800\nyou gonna get response.data.results.\n\n191\n00:11:29.800 --> 00:11:35.183\nAnd then, geometry, location,\nlatitude and longitude.\n\n192\n00:11:35.183 --> 00:11:39.479\nAnd notice it's lng instead of lon which\nis the convention that we've been using.\n\n193\n00:11:41.190 --> 00:11:45.550\nIn addition to, if you scroll down\nit will give you reverse geocoding\n\n194\n00:11:45.550 --> 00:11:50.320\nwhere you give it a lat long, and\nwell it'll give you back the exact,\n\n195\n00:11:50.320 --> 00:11:53.800\nwell not quite the exact,\na very similar response.\n\n196\n00:11:55.200 --> 00:11:58.420\nAnd that's looking up by latitude and\nlongitude.\n\n197\n00:11:58.420 --> 00:12:00.690\nSo this is kinda nice and\nactually if you go to Google Maps and\n\n198\n00:12:00.690 --> 00:12:03.975\nyou look, a lot of times it'll tell you\nthe latitude and longitude in the URL.\n\n199\n00:12:03.975 --> 00:12:07.110\nNot guaranteed,\nthey may have changed that recently, but\n\n200\n00:12:07.110 --> 00:12:10.410\nthat's actually how I looked up latitudes\nand longitudes when I was playing around\n\n201\n00:12:10.410 --> 00:12:14.220\nwith some of the stuff from time to\ntime was using the Google Maps API.\n\n202\n00:12:14.220 --> 00:12:15.570\nI do wanna forewarn you.\n\n203\n00:12:16.640 --> 00:12:20.060\nGoogle provides a series\nof what are called SDKs,\n\n204\n00:12:20.060 --> 00:12:24.930\nthat are wrappers in a specific\nlanguage around these endpoints.\n\n205\n00:12:26.100 --> 00:12:30.300\nSo let's just take a quick look at\nthose and let's go to the Node.js one.\n\n206\n00:12:30.300 --> 00:12:35.380\nAnd if I go over here and I go to\nClient Libraries, and I go to Node.js for\n\n207\n00:12:35.380 --> 00:12:39.760\nGoogle Map Services and\nscroll down, there we go.\n\n208\n00:12:39.760 --> 00:12:47.028\nWe have these APIs and I go to Geocoding,\nit’s kind of circular in nature.\n\n209\n00:12:47.028 --> 00:12:53.171\nBut if I come back and I look it'll say,\nhey, MPM installed this thing,\n\n210\n00:12:53.171 --> 00:12:59.060\nrequire it, create a client, and\nthen you can just call .geocode.\n\n211\n00:12:59.060 --> 00:13:00.850\nNow, we're not going to do that.\n\n212\n00:13:00.850 --> 00:13:03.330\nMainly because I don't want\nto take on a new dependency\n\n213\n00:13:03.330 --> 00:13:08.220\nbecause there's an HTTP endpoint that I\ncan format the URL and make a call to and\n\n214\n00:13:08.220 --> 00:13:11.390\nI only need a small\nportion of the Google API.\n\n215\n00:13:11.390 --> 00:13:16.690\nSo I don't need all of this library,\nand that's a decision that I've made.\n\n216\n00:13:16.690 --> 00:13:22.757\nHowever, this Google Maps client provides\n[LAUGH] a whole bunch of methods and\n\n217\n00:13:22.757 --> 00:13:25.836\nkind of takes care of calling the API and\n\n218\n00:13:25.836 --> 00:13:30.522\nconstructing the URLs, and\nthings of that nature for you.\n\n219\n00:13:30.522 --> 00:13:34.234\nNow, that does bring me to a final point.\n\n220\n00:13:34.234 --> 00:13:39.006\nI'm gonna show you something\nhere just shortly, and\n\n221\n00:13:39.006 --> 00:13:45.487\nlet you know then if I grab this URL\njust like this and it says your API Key.\n\n222\n00:13:45.487 --> 00:13:49.370\nI'm gonna copy it and\nI'm gonna come over to another tab.\n\n223\n00:13:50.530 --> 00:13:55.360\nAnd I'm gonna remove this and\nkey equals, and I hit Enter.\n\n224\n00:13:55.360 --> 00:14:01.344\nIt will actually return the response\nto me without an API key.\n\n225\n00:14:01.344 --> 00:14:06.040\nEver heard the phrase, Zach, that even\nthough you can doesn't mean you should?\n\n226\n00:14:06.040 --> 00:14:07.550\n&gt;&gt; Yes, I've heard that.\n\n227\n00:14:07.550 --> 00:14:11.435\n&gt;&gt; So here's a great example of that.\n\n228\n00:14:11.435 --> 00:14:14.317\nI use this from time to time\njust to test a quick theory so\n\n229\n00:14:14.317 --> 00:14:16.640\nI don't have to go get my API key.\n\n230\n00:14:16.640 --> 00:14:21.470\nI do recommend that you register with\nGoogle through their developer console,\n\n231\n00:14:21.470 --> 00:14:25.360\nwhich we're going to, and\nget an API key and use that.\n\n232\n00:14:25.360 --> 00:14:28.250\nWhich is a credential that we\nshould hide from version control\n\n233\n00:14:28.250 --> 00:14:31.110\njust like we already have\nour API key from Dark Sky.\n\n234\n00:14:32.240 --> 00:14:37.920\nThe reason I recommend that is if you ever\nwanna turn on additional services, maybe\n\n235\n00:14:37.920 --> 00:14:41.970\nthe Places API, where I can give it a\nplace and then it'll tell me other places\n\n236\n00:14:41.970 --> 00:14:45.930\naround it like restaurants and things\nlike that, that's how that search works.\n\n237\n00:14:45.930 --> 00:14:51.280\nWell, some of those actually require\nAPIs and you have to go back and\n\n238\n00:14:51.280 --> 00:14:52.620\nchange a bunch of stuff in your apps.\n\n239\n00:14:52.620 --> 00:14:55.360\nSo if you just plan for\nit upfront, that's good.\n\n240\n00:14:55.360 --> 00:15:00.380\nNumber two, Google offers a great\ndeal of free calls to these APIs,\n\n241\n00:15:00.380 --> 00:15:01.450\nmost of the time.\n\n242\n00:15:01.450 --> 00:15:05.950\nBut after a certain limit,\nthey will start charging you, and\n\n243\n00:15:05.950 --> 00:15:10.190\nit's not astronomical in the grand scheme\nof things, but you want to go ahead and\n\n244\n00:15:10.190 --> 00:15:12.690\nbe set up for\nthat just in case things take off.\n\n245\n00:15:12.690 --> 00:15:17.010\nAnd well, everybody should pay it\nforward and definitely be on the up and\n\n246\n00:15:17.010 --> 00:15:19.020\nup when you go through these things.\n\n247\n00:15:19.020 --> 00:15:22.940\nSo that's kind of my little\nsoapbox moment if you will.\n\n248\n00:15:22.940 --> 00:15:23.660\n&gt;&gt; Very nice.\n\n249\n00:15:23.660 --> 00:15:27.150\n&gt;&gt; So this will work, and\nwe're gonna use this URL.\n\n250\n00:15:27.150 --> 00:15:31.440\nSo we'll come back to that, but\nnow we have another dilemma.\n\n251\n00:15:31.440 --> 00:15:32.720\nWe have to take a quick detour.\n\n252\n00:15:34.280 --> 00:15:40.810\nAnd so it says, be sure to replace\nyour API key with the actual API key.\n\n253\n00:15:40.810 --> 00:15:45.680\nView the developer's guide about building\ngeocode blah, blah, blah, that's nice.\n\n254\n00:15:45.680 --> 00:15:50.833\nIf I scroll down,\nhow do I get this API key, right?\n\n255\n00:15:50.833 --> 00:15:56.850\nSo if I go to the developer's, so\nif I click on this actual API key,\n\n256\n00:15:56.850 --> 00:16:02.989\nit'll open this window and\nsays activate the API and get an API key.\n\n257\n00:16:02.989 --> 00:16:07.082\nOkay, so create or select a project.\n\n258\n00:16:07.082 --> 00:16:09.136\nSo I'm gonna go ahead and click Get a Key.\n\n259\n00:16:09.136 --> 00:16:13.468\nAnd it's going to ask me\nto sign in with an email\n\n260\n00:16:13.468 --> 00:16:17.811\naddress that is associated with this,\nokay?\n\n261\n00:16:17.811 --> 00:16:22.763\nNow, that's kinda iffy, right?\n\n262\n00:16:22.763 --> 00:16:24.536\nBecause what if you don't have a Gmail?\n\n263\n00:16:24.536 --> 00:16:28.554\nWell, to some extent you kinda have\nto have one in order to sign up for\n\n264\n00:16:28.554 --> 00:16:30.400\nGoogle developers platform.\n\n265\n00:16:31.540 --> 00:16:35.853\nSo what we're gonna do as\na way of mitigating then and\n\n266\n00:16:35.853 --> 00:16:41.049\nthat's because I have to get a Gmail and\nI don't wanna do that,\n\n267\n00:16:41.049 --> 00:16:45.183\nwe're going to proceed\nlike there's an API key.\n\n268\n00:16:45.183 --> 00:16:48.976\nAnd then now well, after the show\nI'm actually gonna go back and\n\n269\n00:16:48.976 --> 00:16:52.500\nput in my API key and\nI'll show you that in future episodes.\n\n270\n00:16:52.500 --> 00:16:56.988\nSo it helps in this case but\ndo trust me, I'm gonna go back and\n\n271\n00:16:56.988 --> 00:16:58.664\nput it in that API key.\n\n272\n00:16:58.664 --> 00:17:01.452\nOnce you click Next here\nif you're signed in,\n\n273\n00:17:01.452 --> 00:17:04.676\nit'll actually go through\nthe API key on the screen.\n\n274\n00:17:04.676 --> 00:17:11.670\nAnd now I'll go back and\nshow you what that API key looks like.\n\n275\n00:17:11.670 --> 00:17:17.232\nSo now that we have that, all right?\n\n276\n00:17:17.232 --> 00:17:21.560\nLet's think about how this\nis going to work out for us.\n\n277\n00:17:21.560 --> 00:17:23.456\nWell, if we come over here,\n\n278\n00:17:23.456 --> 00:17:27.415\nin this credentials file it would\nbe nice if I had a googAPI.\n\n279\n00:17:27.415 --> 00:17:32.297\nSo I'm gonna mock everything other than\njust copying and pasting that API key in.\n\n280\n00:17:32.297 --> 00:17:35.882\nSo I'm going to mock googApiKey, and\n\n281\n00:17:35.882 --> 00:17:41.660\nI'm assuming that that is in\ncredentials just like this.\n\n282\n00:17:41.660 --> 00:17:47.522\nSo I'm gonna say googAPIKey, and\nI'm just gonna put an empty string for\n\n283\n00:17:47.522 --> 00:17:50.705\nnow, so it's gonna bring in nothing.\n\n284\n00:17:50.705 --> 00:17:54.730\nBut since I have that I can now\nconstruct my URLs as if I did.\n\n285\n00:17:56.010 --> 00:18:02.023\nOkay, so here's my base for my weather,\nbut what about for Google, right?\n\n286\n00:18:02.023 --> 00:18:03.646\nThe geo code.\n\n287\n00:18:03.646 --> 00:18:09.721\nSo if I baseGeo and\nnow I'm gonna hop back over here and\n\n288\n00:18:09.721 --> 00:18:14.182\ngrab the Google Maps, this giant URL.\n\n289\n00:18:14.182 --> 00:18:18.630\nAnd then we're gonna pair it down and\nI will show you what ultimately we need.\n\n290\n00:18:18.630 --> 00:18:22.321\nSo this address equals,\nwe're gonna get rid of that.\n\n291\n00:18:22.321 --> 00:18:24.620\nAnd I know that's a lot of scrolling.\n\n292\n00:18:24.620 --> 00:18:29.670\nAnd then I'm gonna zoom now just\na touch so we can see it all together.\n\n293\n00:18:29.670 --> 00:18:34.673\nAfter this question mark right here,\nthis question\n\n294\n00:18:34.673 --> 00:18:39.674\nmark that's after json,\nwe're gonna say key= and\n\n295\n00:18:39.674 --> 00:18:45.939\nthen do interpolated value,\ngoogApiKey and then an n%, okay?\n\n296\n00:18:45.939 --> 00:18:49.613\nNow as it stands in order to do that\ninterpolated value I need to put,\n\n297\n00:18:49.613 --> 00:18:56.870\nchange these to back ticks, And\nzoom out so I can actually see.\n\n298\n00:18:56.870 --> 00:19:01.740\nNow that these are back ticks and I have\nthis backwards, so this should be outside,\n\n299\n00:19:01.740 --> 00:19:03.420\nwoopsy daisy, there we go.\n\n300\n00:19:03.420 --> 00:19:05.723\nIf it doesn't turn in different color\nyou know you've done something wrong.\n\n301\n00:19:05.723 --> 00:19:06.785\n&gt;&gt; Wonderful.\n\n302\n00:19:06.785 --> 00:19:11.069\n&gt;&gt; So I have this address equals,\njust like that.\n\n303\n00:19:11.069 --> 00:19:13.140\nAccidentally I deleted that\nwhen I was zoomed in and\n\n304\n00:19:13.140 --> 00:19:14.592\ncouldn't see things conceiving.\n\n305\n00:19:14.592 --> 00:19:22.109\nSo I have this base URL with my key and\nthen &amp;Address=, okay?\n\n306\n00:19:22.109 --> 00:19:25.534\nNow, as it stands we still\nhave local credentials and\n\n307\n00:19:25.534 --> 00:19:30.120\nwe'll worry about this whole\ndeployment scheme later.\n\n308\n00:19:30.120 --> 00:19:34.986\nThis should send us back that information,\nokay?\n\n309\n00:19:34.986 --> 00:19:42.150\nAnd just to make sure well let's change\nthis route and actually build the URL.\n\n310\n00:19:42.150 --> 00:19:46.562\nSo this URL this is our\ngeoURL to differentiate from\n\n311\n00:19:46.562 --> 00:19:49.339\nthe URL we constructed up here.\n\n312\n00:19:49.339 --> 00:19:56.134\nThe geoUrl = '${baseGeo} and\n\n313\n00:19:56.134 --> 00:20:04.110\nthen it already has the address equals.\n\n314\n00:20:04.110 --> 00:20:07.638\nWell, I just wanna go ahead and\n\n315\n00:20:07.638 --> 00:20:13.626\nput req.params.location,\njust like so, okay?\n\n316\n00:20:13.626 --> 00:20:19.002\nAnd now I'm just gonna have that echo\nback the geoUrl, just like that.\n\n317\n00:20:19.002 --> 00:20:22.283\nNow the reason I'm doing that is\njust to check to make sure that it's\n\n318\n00:20:22.283 --> 00:20:23.270\nactually working.\n\n319\n00:20:24.410 --> 00:20:27.299\nSo I come back,\nI should have restarted, and\n\n320\n00:20:27.299 --> 00:20:30.120\nI'm actually gonna put a location in here.\n\n321\n00:20:30.120 --> 00:20:37.640\nAnd let's just say Los Angeles,\nCA, just like that.\n\n322\n00:20:38.660 --> 00:20:41.097\nNotice it has the base URL.\n\n323\n00:20:41.097 --> 00:20:44.820\nThe key, the key is empty here\nbecause I don't have it in there yet.\n\n324\n00:20:44.820 --> 00:20:46.449\nWe'll definitely get there.\n\n325\n00:20:46.449 --> 00:20:52.180\nAnd address=Los Angeles, CA, all right?\n\n326\n00:20:52.180 --> 00:20:58.091\nSo now we have that, the trick is,\ncan we now make a request and\n\n327\n00:20:58.091 --> 00:21:03.692\nget the exact same information\nas this screen for our API?\n\n328\n00:21:03.692 --> 00:21:08.780\nSo let's change this to Los Angeles,\nCalifornia.\n\n329\n00:21:08.780 --> 00:21:12.861\nLos Angeles, CA, just like so.\n\n330\n00:21:12.861 --> 00:21:16.014\nAnd notice that's what it looks like,\nokay?\n\n331\n00:21:16.014 --> 00:21:18.598\nWe'll come back and change it and\n\n332\n00:21:18.598 --> 00:21:24.418\nit's going to look a great deal like\nthis axios response, like so, okay?\n\n333\n00:21:24.418 --> 00:21:31.369\nSo we're going to say axios.get,\nthe geoUrl.\n\n334\n00:21:31.369 --> 00:21:36.607\nAnd then, when you get response back.\n\n335\n00:21:36.607 --> 00:21:42.922\nI like to spell response correctly.\n\n336\n00:21:42.922 --> 00:21:46.737\nAnd, I'm just gonna one line this,\nit's going to be the exact same here,\n\n337\n00:21:46.737 --> 00:21:50.083\nexcept if I don't put curly braces\nthere's no implicit return.\n\n338\n00:21:50.083 --> 00:21:55.408\nSo res.status(200).json\n\n339\n00:21:55.408 --> 00:21:59.449\nresponse.data, okay?\n\n340\n00:21:59.449 --> 00:22:03.439\nAnd then catch if there is an error,\n\n341\n00:22:03.439 --> 00:22:08.629\nres.status(500).json, error, and\n\n342\n00:22:08.629 --> 00:22:15.158\nthat way for debugging purposes\nwe know what the error is.\n\n343\n00:22:15.158 --> 00:22:18.368\nTypically in a real application I\nwould make my own error message and\n\n344\n00:22:18.368 --> 00:22:19.673\nnot necessarily forward.\n\n345\n00:22:19.673 --> 00:22:22.638\nCuz they're like,\nwell they're using the Google one.\n\n346\n00:22:22.638 --> 00:22:25.276\nAnd they may expose some things\nthat you don't necessarily want to,\n\n347\n00:22:25.276 --> 00:22:26.880\nespecially if this is a private project.\n\n348\n00:22:26.880 --> 00:22:34.076\nSo, we have that now, well,\nwe should be able to go back to hours,\n\n349\n00:22:34.076 --> 00:22:39.740\nhit Enter and\nnotice we get the exact same response.\n\n350\n00:22:39.740 --> 00:22:41.740\nSo long_name, short_name.\n\n351\n00:22:41.740 --> 00:22:46.028\nAnd if I go and zoom in here,\nlong_name, short_name.\n\n352\n00:22:46.028 --> 00:22:50.383\nAnd the real test is this latitude and\nlongitude.\n\n353\n00:22:50.383 --> 00:22:57.865\nSo geometry, location, lat,\nlong 34.05 and -118.24.\n\n354\n00:22:57.865 --> 00:23:00.533\nLet's scroll over here on\nthe one that we just wrote.\n\n355\n00:23:02.881 --> 00:23:05.946\n34.05 and -118.24, and\n\n356\n00:23:05.946 --> 00:23:10.840\nnow we've actually kind of\nlooked up the location, right?\n\n357\n00:23:11.960 --> 00:23:15.040\nWell, Zach,\ndo you see something wrong with this?\n\n358\n00:23:15.040 --> 00:23:17.469\nWe've got the location, but\nare we missing something?\n\n359\n00:23:17.469 --> 00:23:21.987\n&gt;&gt; Well you're right, Justin, we have\nthe location but what about the weather?\n\n360\n00:23:21.987 --> 00:23:23.994\n[LAUGH]\n&gt;&gt; Zach, you're absolutely correct,\n\n361\n00:23:23.994 --> 00:23:27.290\nthe entire purpose of this application\nwas to get weather by location.\n\n362\n00:23:27.290 --> 00:23:30.679\nWell adding this end point,\nnot necessarily the entire application,\n\n363\n00:23:30.679 --> 00:23:32.776\nthat would be a pretty boring application.\n\n364\n00:23:32.776 --> 00:23:35.730\nWell, it would be get\nthe weather by location.\n\n365\n00:23:35.730 --> 00:23:39.372\nWell we've got the latitude and\nlongitude kinda by location.\n\n366\n00:23:39.372 --> 00:23:43.590\nAnd now we need to go back and\nget the latitude and longitude and\n\n367\n00:23:43.590 --> 00:23:46.931\nmake a request to the weather,\nthe dark sky API.\n\n368\n00:23:46.931 --> 00:23:51.330\nAnd hopefully, hopefully we\nwill have exactly what we want.\n\n369\n00:23:51.330 --> 00:23:55.868\nSo let's go ahead and take a look at my\nscreen and actually try to get that done.\n\n370\n00:23:55.868 --> 00:23:57.121\nSo when come over here.\n\n371\n00:23:57.121 --> 00:23:58.947\nI have this response res.status.\n\n372\n00:23:58.947 --> 00:24:02.538\nI don't actually want to\nsend the response quite yet,\n\n373\n00:24:02.538 --> 00:24:08.810\nInstead I'm gonna use a transformation,\nand I'm going to utilize promise chaining.\n\n374\n00:24:08.810 --> 00:24:13.780\nSo now this is gonna return response.data,\nit's gonna come into the next one.\n\n375\n00:24:13.780 --> 00:24:18.330\nAnd hopefully we'll be able to pull\nout the latitude and longitude.\n\n376\n00:24:18.330 --> 00:24:24.100\nSo we'll have the location data,\nthat's actually what's gonna be here.\n\n377\n00:24:25.620 --> 00:24:30.340\nAnd now I do have to kinda open this up\njust because I have to do a few things.\n\n378\n00:24:30.340 --> 00:24:35.810\nIf I come back and I look, what I\nhave now is exactly what's on screen.\n\n379\n00:24:35.810 --> 00:24:38.890\nI have this giant object that has results.\n\n380\n00:24:38.890 --> 00:24:43.030\nBut if I fold this up,\neverything's inside of results, and\n\n381\n00:24:43.030 --> 00:24:45.420\nactually results is an array.\n\n382\n00:24:45.420 --> 00:24:46.990\nSo I have to get the first element.\n\n383\n00:24:46.990 --> 00:24:49.970\nNow, I'm making an assumption here that\nI'm always gonna get the first one.\n\n384\n00:24:49.970 --> 00:24:52.894\nIt's not necessarily\nthe most robust method, but\n\n385\n00:24:52.894 --> 00:24:55.889\nI think it's a reasonable approximation,\nright?\n\n386\n00:24:55.889 --> 00:25:00.810\nNow, the reason it's an array is because\nif you go really general, for instance,\n\n387\n00:25:00.810 --> 00:25:05.260\nif you say Marion, which is a city name,\nthere's six across the country.\n\n388\n00:25:05.260 --> 00:25:06.600\nIf you don't give a state,\nit's like, well,\n\n389\n00:25:06.600 --> 00:25:10.590\nI wanna give you all the Marions that\nI can, or anything similar like that.\n\n390\n00:25:12.090 --> 00:25:15.610\nOr if you say New York, maybe it\ngives you a bunch of state cities,\n\n391\n00:25:15.610 --> 00:25:18.550\nbut also gives you New York,\nNew York, so like New York City.\n\n392\n00:25:18.550 --> 00:25:21.340\nSo we're always gonna grab the first one.\n\n393\n00:25:21.340 --> 00:25:25.370\nIt's a good compromise because right\nnow we can't even search by location.\n\n394\n00:25:25.370 --> 00:25:28.770\nBut we're getting ready to be able to,\nthat's what we're doing.\n\n395\n00:25:28.770 --> 00:25:31.018\n&gt;&gt; Will we be able to find Poughkeepsie?\n\n396\n00:25:31.018 --> 00:25:31.760\n&gt;&gt; Who knows?\n\n397\n00:25:31.760 --> 00:25:32.400\nPossibly.\n\n398\n00:25:32.400 --> 00:25:35.770\nWe'll try Poughkeepsie once we,\nwhen we get the weather up and going.\n\n399\n00:25:35.770 --> 00:25:37.370\nSo, we're gonna grab the first one.\n\n400\n00:25:37.370 --> 00:25:40.777\nAnd then within that object,\nthere's address components and\n\n401\n00:25:40.777 --> 00:25:45.590\nformatted_address and geometry bounds.\n\n402\n00:25:45.590 --> 00:25:49.150\nBut we really want geometry location,\nall right?\n\n403\n00:25:49.150 --> 00:25:52.490\nSo I'm gonna kinda pull out an lat and\nlng,\n\n404\n00:25:52.490 --> 00:25:58.110\nlat and long, from this giant JSON object.\n\n405\n00:25:58.110 --> 00:26:00.050\nBecause that's the only\npieces that I need.\n\n406\n00:26:00.050 --> 00:26:01.420\nSo I'm gonna say, lat.\n\n407\n00:26:01.420 --> 00:26:03.620\nAnd I'm using some destructuring here.\n\n408\n00:26:03.620 --> 00:26:05.750\nAnd that's going to be locationData.\n\n409\n00:26:07.250 --> 00:26:08.650\nAnd grab the first one.\n\n410\n00:26:08.650 --> 00:26:16.020\n.geometry.location if I'm not mistaken.\n\n411\n00:26:16.020 --> 00:26:20.980\nLet's go ahead and just send that back for\n\n412\n00:26:20.980 --> 00:26:25.580\nnow, just to see if I\nactually have that correct.\n\n413\n00:26:25.580 --> 00:26:28.580\nSo lat, lon.\n\n414\n00:26:28.580 --> 00:26:32.006\nAnd here we come back to\nlocal host 8080 and run.\n\n415\n00:26:32.006 --> 00:26:34.000\nAnd not quite.\n\n416\n00:26:34.000 --> 00:26:38.590\nWe're real close, and this is one of those\nthings where it gets a little iffy, right?\n\n417\n00:26:39.980 --> 00:26:44.200\nSo I'm going to res.send.\n\n418\n00:26:44.200 --> 00:26:45.530\nExcuse me, I don't even have to do that.\n\n419\n00:26:45.530 --> 00:26:46.640\nWhy am I doing that?\n\n420\n00:26:46.640 --> 00:26:50.160\nSo I can make over here,\nand here's our results.\n\n421\n00:26:50.160 --> 00:26:52.510\nAnd then I want geometry.\n\n422\n00:26:52.510 --> 00:26:56.590\nAnd then inside of geometry,\nI want location.\n\n423\n00:26:56.590 --> 00:27:00.050\nThat should be right.\n\n424\n00:27:00.050 --> 00:27:02.506\nSo there's our first object.\n\n425\n00:27:02.506 --> 00:27:07.336\nAnd if I fold all of these up,\ngeometry and then location,\n\n426\n00:27:07.336 --> 00:27:11.740\nand then location is latitude and\nlongitude.\n\n427\n00:27:11.740 --> 00:27:16.416\nWe should probably make sure that\nthis actually sends back what\n\n428\n00:27:16.416 --> 00:27:19.507\nI expected to be just\nto see how things go.\n\n429\n00:27:19.507 --> 00:27:22.619\nSo could not get 500.\n\n430\n00:27:22.619 --> 00:27:24.925\nSo that's a problem.\n\n431\n00:27:24.925 --> 00:27:30.661\nLet see, res.json(locationData).\n\n432\n00:27:30.661 --> 00:27:38.270\nWe'll come back, refresh, and well,\nyeah, that's exactly what it should be.\n\n433\n00:27:38.270 --> 00:27:43.920\nI have to actually get results,\nlocationData.results.\n\n434\n00:27:43.920 --> 00:27:44.535\nShame on me.\n\n435\n00:27:44.535 --> 00:27:47.182\nSo location data.results.\n\n436\n00:27:47.182 --> 00:27:50.515\nSo now I wanted to show you this because\nthis is a kind of an issue with these\n\n437\n00:27:50.515 --> 00:27:51.290\nGoogle API's.\n\n438\n00:27:51.290 --> 00:27:54.390\nYou end up with these giant JSON\nresponses that you have to parse and\n\n439\n00:27:54.390 --> 00:27:57.460\nkind of figure out the structure\njust like we've done here.\n\n440\n00:27:57.460 --> 00:28:01.120\nLuckily, after you get that done,\nthat's the only time you have to do it.\n\n441\n00:28:01.120 --> 00:28:04.360\nI don't know why I'm deleting that,\nthat was the wrong one.\n\n442\n00:28:05.600 --> 00:28:07.730\nLets see if we can get that latitude and\nlongitude here.\n\n443\n00:28:08.730 --> 00:28:13.310\nAnd now we should be able to refresh.\n\n444\n00:28:13.310 --> 00:28:14.720\nAnd there's our latitude and longitude.\n\n445\n00:28:14.720 --> 00:28:20.300\nNow that we've pulled those out, we can\nmake a request to the Dark Sky API now\n\n446\n00:28:20.300 --> 00:28:21.820\nthat we have the latitude and longitude.\n\n447\n00:28:21.820 --> 00:28:24.657\nSo weather.\n\n448\n00:28:24.657 --> 00:28:25.867\nAnd I'm just gonna say URL.\n\n449\n00:28:25.867 --> 00:28:30.210\nAnd it's essentially going to\nbe this exact thing, okay?\n\n450\n00:28:30.210 --> 00:28:34.500\nSo I'm gonna actually copy this,\nnot a big proponent of copying\n\n451\n00:28:34.500 --> 00:28:37.818\njust because it can propagate errors,\nbut lat and then lng.\n\n452\n00:28:37.818 --> 00:28:44.940\nAnd finally,\nI'm going to return axios.get(url).\n\n453\n00:28:44.940 --> 00:28:48.530\nAnd the reason being is I'm\nmaking use of promise chaining\n\n454\n00:28:48.530 --> 00:28:53.240\nto go to the next .then and then grab\nthe weather and then send that back.\n\n455\n00:28:53.240 --> 00:28:56.320\nSo that's what I'm gonna do, .then.\n\n456\n00:28:56.320 --> 00:29:02.170\nI'm going to have the weather and, well,\nwhat am I going to do with the weather?\n\n457\n00:29:02.170 --> 00:29:04.850\nSo this is actually the weather response.\n\n458\n00:29:04.850 --> 00:29:12.406\nI'm going to\nres.status(200.json(weatherResponse.dat-\n\n459\n00:29:12.406 --> 00:29:14.600\na)), just like so.\n\n460\n00:29:14.600 --> 00:29:17.930\nSo there were several steps, but\nbecause we're using promises,\n\n461\n00:29:17.930 --> 00:29:20.680\nwe can just kinda chain all\nof those steps together.\n\n462\n00:29:20.680 --> 00:29:25.754\nLet's cross our fingers and see if we\nactually get weather for Los Angeles.\n\n463\n00:29:25.754 --> 00:29:27.160\nAnd we do, look at that.\n\n464\n00:29:27.160 --> 00:29:30.010\nWe have weather for\nthat exact latitude and\n\n465\n00:29:30.010 --> 00:29:32.700\nlongitude, which we know is Los Angeles.\n\n466\n00:29:32.700 --> 00:29:33.650\nAnd let's check it out.\n\n467\n00:29:33.650 --> 00:29:34.860\nPoughkeepsie, New York.\n\n468\n00:29:34.860 --> 00:29:35.869\nLet's try it.\n\n469\n00:29:35.869 --> 00:29:38.179\n&gt;&gt; [LAUGH]\n&gt;&gt; I told you we were gonna try it.\n\n470\n00:29:38.179 --> 00:29:43.190\n&gt;&gt; All right.\n&gt;&gt; P-O-U-G-H-K-E-E-P-S-I\n\n471\n00:29:43.190 --> 00:29:44.027\n&gt;&gt; Poughkeepsie.\n\n472\n00:29:44.027 --> 00:29:45.650\n&gt;&gt; Poughkeepsie.\n&gt;&gt; Poughkeepsie, Poughkeepsie.\n\n473\n00:29:45.650 --> 00:29:46.490\n&gt;&gt; Poughkeepsie, New York.\n\n474\n00:29:46.490 --> 00:29:48.840\nHit Enter, and boom, there it is.\n\n475\n00:29:48.840 --> 00:29:49.820\nPoughkeepsie, New York.\n\n476\n00:29:49.820 --> 00:29:50.780\nJust like that.\n\n477\n00:29:50.780 --> 00:29:54.720\nNow something to remember, notice it does\ntake a little bit longer cuz I'm actually\n\n478\n00:29:54.720 --> 00:29:57.690\nusing two services to fill a request.\n\n479\n00:29:57.690 --> 00:29:59.210\nSo you have to keep that in mind.\n\n480\n00:29:59.210 --> 00:30:03.770\nI'm making several round trips through\nthe network in order to fill this request.\n\n481\n00:30:03.770 --> 00:30:08.900\nBut I have the ability to search\nby location from an HTTP endpoint.\n\n482\n00:30:08.900 --> 00:30:13.650\n&gt;&gt; So, now that we have the location HTTP\nendpoint, do we need to add a new service,\n\n483\n00:30:13.650 --> 00:30:16.740\nor can we modify the existing\nweather application?\n\n484\n00:30:16.740 --> 00:30:19.610\n&gt;&gt; Well, that is a great question.\n\n485\n00:30:19.610 --> 00:30:22.800\nAnd actually, I don't know if we\nhave time to answer that question\n\n486\n00:30:22.800 --> 00:30:24.370\nbecause we have to make that decision.\n\n487\n00:30:24.370 --> 00:30:27.390\nDo we have a new service in\nour front-end application?\n\n488\n00:30:27.390 --> 00:30:31.420\nOr do we just modify the existing\nservice and add a new method?\n\n489\n00:30:31.420 --> 00:30:32.300\n&gt;&gt; We have a cliff hanger.\n\n490\n00:30:32.300 --> 00:30:35.160\n&gt;&gt; Well, it looks like we're\ngonna have to come to a part two\n\n491\n00:30:35.160 --> 00:30:36.240\nto actually find that out.\n\n492\n00:30:36.240 --> 00:30:40.650\n&gt;&gt; So there'll be a part two\nadding Google Location Service.\n\n493\n00:30:40.650 --> 00:30:42.854\nNow any last words before we move on?\n\n494\n00:30:42.854 --> 00:30:46.950\n&gt;&gt; Well,\nthis was a fairly in-depth episode, right?\n\n495\n00:30:46.950 --> 00:30:50.550\nIt was kind of an issue but\njust keep on going.\n\n496\n00:30:50.550 --> 00:30:53.710\nGoogle offers a great number of APIs,\nnot just this one.\n\n497\n00:30:53.710 --> 00:30:58.050\nAnd by taking a bunch of services\nlike this, right, APIs, and\n\n498\n00:30:58.050 --> 00:31:02.730\nkind of marrying them together, you can\nget a lot of power without actually having\n\n499\n00:31:02.730 --> 00:31:04.420\nto, well, do all of it yourself.\n\n500\n00:31:04.420 --> 00:31:05.182\n&gt;&gt; Awesome, and I misspoke,\n\n501\n00:31:05.182 --> 00:31:09.480\nit's adding Google Locations Search that\nwill be part two, this has been part one.\n\n502\n00:31:09.480 --> 00:31:10.940\nMake sure you watch both of those.\n\n503\n00:31:10.940 --> 00:31:14.940\nAnd make sure you watch everything in the\nseries of Weather App with Angular JS and\n\n504\n00:31:14.940 --> 00:31:15.515\nExpress.\n\n505\n00:31:15.515 --> 00:31:16.930\nYou'll be very glad that you did.\n\n506\n00:31:16.930 --> 00:31:19.320\nAnd thank you for watching DevPro TV.\n\n507\n00:31:19.320 --> 00:31:21.540\nRemember, a good dev\npro is always learning.\n\n508\n00:31:21.540 --> 00:31:22.480\nI'm Zach Memos.\n\n509\n00:31:22.480 --> 00:31:23.420\n&gt;&gt; And I'm Justin Dennison.\n\n510\n00:31:23.420 --> 00:31:25.253\n&gt;&gt; And we will see you soon.\n\n511\n00:31:25.253 --> 00:31:31.080\n[MUSIC]\n\n",
          "vimeoId": "227256198"
        },
        {
          "description": "Justin and Zach look at the location HTTP Endpoint, adding a new service vs. modifying the existing Weather App, adding 'GetByLocation,' build the Service Method, and 'gotchas' using the Search Component.",
          "length": "804",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-9-1-2-adding_google_location_search_pt2-072517-PGM.00_13_14_15.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-9-1-2-adding_google_location_search_pt2-072517-PGM.00_13_14_15.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-9-1-2-adding_google_location_search_pt2-072517-PGM.00_13_14_15.Still001-sm.jpg",
          "title": "Adding Google Location Search Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:13.280 --> 00:00:15.232\nHello and thank you for\nchoosing DEVPro.TV,\n\n3\n00:00:15.232 --> 00:00:16.739\nhelping you learn wherever you go.\n\n4\n00:00:16.739 --> 00:00:18.147\nI'm your host Zach Memos.\n\n5\n00:00:18.147 --> 00:00:22.980\nAs we continue on with the series weather\napp, with Angular JS and Express.\n\n6\n00:00:22.980 --> 00:00:25.623\nThis part two of adding\nGoogle locations search.\n\n7\n00:00:25.623 --> 00:00:28.931\nThere was a part one on\nGoogle locations search.\n\n8\n00:00:28.931 --> 00:00:32.566\nThis is part two, and bringing us all\nthe information we need is the one,\n\n9\n00:00:32.566 --> 00:00:33.970\nthe only Justin Dennison.\n\n10\n00:00:33.970 --> 00:00:35.128\nHey Justin, good to see you sir.\n\n11\n00:00:35.128 --> 00:00:38.303\n&gt;&gt; It's good to see as well Zach and\nI'm glad to be in the studio, well\n\n12\n00:00:38.303 --> 00:00:42.119\ntalking about one of my favorite things,\nprogramming, but how are you today?\n\n13\n00:00:42.119 --> 00:00:46.912\n&gt;&gt; I am excited that we are moving on with\nbuilding our weather app and right now as\n\n14\n00:00:46.912 --> 00:00:51.441\nI remember, we were in the middle of\nthe location HTP endpoint, right?\n\n15\n00:00:51.441 --> 00:00:53.750\nWe had the location HTTP endpoint.\n\n16\n00:00:53.750 --> 00:00:58.320\nI can say that again, I'm going to say\nthat again, the location HTTP endpoint.\n\n17\n00:00:58.320 --> 00:01:00.170\nSo do we add a new service?\n\n18\n00:01:00.170 --> 00:01:03.230\nOr do we just modify the existing\nweather application?\n\n19\n00:01:03.230 --> 00:01:06.320\n&gt;&gt; Well that is a decision\nthat we need to make\n\n20\n00:01:06.320 --> 00:01:09.202\nin regards to our Angular applications.\n\n21\n00:01:09.202 --> 00:01:12.280\nSo in episode one,\nwell in the previous episode,\n\n22\n00:01:12.280 --> 00:01:17.192\nwe actually built the HTTP endpoint that\nmakes a call to the Google geocode API,\n\n23\n00:01:17.192 --> 00:01:19.709\ngrabs the latitude and longitude back.\n\n24\n00:01:19.709 --> 00:01:24.767\nAnd this allows us to search using zip\ncodes and city/state combinations.\n\n25\n00:01:24.767 --> 00:01:29.455\nAnd once we got that back, we made\na call to Dark Sky, got the weather for\n\n26\n00:01:29.455 --> 00:01:34.791\nthat particular latitude and longitude and\nthen sent it back as an HTTP request.\n\n27\n00:01:34.791 --> 00:01:36.680\nWe got a JSON request back.\n\n28\n00:01:36.680 --> 00:01:37.455\nWe left off,\n\n29\n00:01:37.455 --> 00:01:42.940\ndo we modify the current weather service\nthat is in our Angular application?\n\n30\n00:01:42.940 --> 00:01:46.462\nOr do we build a whole new service\nthat is the location service.\n\n31\n00:01:46.462 --> 00:01:47.850\nNow, the-\n&gt;&gt; That is the question.\n\n32\n00:01:47.850 --> 00:01:52.022\n&gt;&gt; The argument could be made for either\none depending on the context of the app.\n\n33\n00:01:52.022 --> 00:01:56.442\nUltimately our application is\nconsuming weather data only.\n\n34\n00:01:56.442 --> 00:02:03.220\nAnd ultimately doesn't need to keep track\nof, now what I mean in the service layer.\n\n35\n00:02:03.220 --> 00:02:06.926\nKeep track of locations and have all these\nmethods for manipulating locations and\n\n36\n00:02:06.926 --> 00:02:08.007\nthings of that nature.\n\n37\n00:02:08.007 --> 00:02:11.680\nSo what I'm going to do and\nI've made an executive decision.\n\n38\n00:02:11.680 --> 00:02:15.230\nI'm going to just modify\nthe existing service because\n\n39\n00:02:15.230 --> 00:02:19.630\nas a stands were getting my latitude,\nlongitude it should be fairly easy to add.\n\n40\n00:02:19.630 --> 00:02:24.540\nWell, get by location, something of\nthat nature, it exposes a new method\n\n41\n00:02:24.540 --> 00:02:29.620\nthat has meaningful name, and\nnow we can search by location.\n\n42\n00:02:29.620 --> 00:02:32.220\n&gt;&gt; So let's get that working,\nand what do we need to do sir?\n\n43\n00:02:32.220 --> 00:02:34.540\n&gt;&gt; Well, in order to get that working,\nwell, we're just going to build it.\n\n44\n00:02:34.540 --> 00:02:39.079\nBut before we do, I do want to take\na quick aside, in the previous episode,\n\n45\n00:02:39.079 --> 00:02:44.140\nthere was some hidden magic in I'm going\nto come back and actually reveal, right?\n\n46\n00:02:44.140 --> 00:02:48.864\nOpen the curtain so to speak, about\nthat whole Google API key in order for\n\n47\n00:02:48.864 --> 00:02:50.890\nthe geocode services to work.\n\n48\n00:02:50.890 --> 00:02:54.760\nSo let's go ahead and\ntake a look at my screen and well,\n\n49\n00:02:54.760 --> 00:02:59.996\nthis is the get a key service and\nI'm logged in under well a Gmail account.\n\n50\n00:02:59.996 --> 00:03:02.440\nDo you have to have a Gmail account?\n\n51\n00:03:02.440 --> 00:03:04.280\nI've tried, and I've tried,\nand I've tried,\n\n52\n00:03:04.280 --> 00:03:09.340\nI can't figure out a way to just not\nhave to sign up for a Gmail account that\n\n53\n00:03:09.340 --> 00:03:13.760\nlinks to the existing email account if\nyou don't already have a Gmail account.\n\n54\n00:03:13.760 --> 00:03:19.990\nSo once you're logged in, right, so I'm\nlogged in and you just click get a key.\n\n55\n00:03:19.990 --> 00:03:22.110\nSo it's going to ask you some questions.\n\n56\n00:03:22.110 --> 00:03:25.270\nDo you agree to any services and\n\n57\n00:03:25.270 --> 00:03:29.780\nrelated APIs subject to compliance\nwith the applicable terms of service?\n\n58\n00:03:29.780 --> 00:03:34.021\nSure, you should definitely read\nthe terms of service because there may\n\n59\n00:03:34.021 --> 00:03:35.492\nbe some use cases there.\n\n60\n00:03:35.492 --> 00:03:39.301\nFor instance, case and point,\nthe YouTube API has a clause in it that\n\n61\n00:03:39.301 --> 00:03:44.113\nsays if you're using the YouTube API only\nto search for music, instrumental videos.\n\n62\n00:03:44.113 --> 00:03:47.650\nAnd using that to serve up music\nyou can actually get that shut off.\n\n63\n00:03:47.650 --> 00:03:51.250\nSo that's how I read it,\nit's a lot of jargon so\n\n64\n00:03:51.250 --> 00:03:55.986\nI may be interpreting that-\n&gt;&gt; Legalese.\n\n65\n00:03:55.986 --> 00:03:58.585\n&gt;&gt; Exactly, legalese,\na little bit differently, but\n\n66\n00:03:58.585 --> 00:04:02.920\nit's important to know about the terms and\nservices that you're agreeing to.\n\n67\n00:04:02.920 --> 00:04:06.910\nWith that said,\nI'm not gonna do that right here.\n\n68\n00:04:06.910 --> 00:04:08.695\nSo yes, create and enable API.\n\n69\n00:04:08.695 --> 00:04:13.090\nAnd this is for the geocoding API,\ncuz Google has a bunch of them.\n\n70\n00:04:13.090 --> 00:04:18.310\nNow sometimes this takes a little bit and,\nwell, you just have to wait.\n\n71\n00:04:19.730 --> 00:04:21.350\nSo there it is.\n\n72\n00:04:21.350 --> 00:04:24.460\nIt's all ready to go and\nit gives you an API key and\n\n73\n00:04:24.460 --> 00:04:26.995\nthe ability to copy it, all right.\n\n74\n00:04:26.995 --> 00:04:30.169\nSo once we copy it,\nwe're gonna hop back over to our code and\n\n75\n00:04:30.169 --> 00:04:33.232\nthat Google API key is actually\npart of our credentials.\n\n76\n00:04:33.232 --> 00:04:35.087\nSo I already had that.\n\n77\n00:04:35.087 --> 00:04:36.580\nLet's paste it and\n\n78\n00:04:36.580 --> 00:04:42.189\nit's a giant you know alphanumeric\ncombination that is unique to you.\n\n79\n00:04:42.189 --> 00:04:45.657\nNow the geocode,\nwe get a lot of calls for free, but\n\n80\n00:04:45.657 --> 00:04:48.590\nsome of the GUI APIs are chargeable.\n\n81\n00:04:48.590 --> 00:04:51.610\nSo this API key would be\nlinked to a credit card or\n\n82\n00:04:51.610 --> 00:04:53.760\nsome payment method that\nyou've established.\n\n83\n00:04:53.760 --> 00:04:57.830\nAnd once you just cross\na threshold then that's API, well,\n\n84\n00:04:57.830 --> 00:05:00.690\nyou'll start being billed for\nthose, so keep that in mind.\n\n85\n00:05:00.690 --> 00:05:04.760\nNow, since I put that in there\nmy server should restart.\n\n86\n00:05:04.760 --> 00:05:06.090\nIt looks like it did.\n\n87\n00:05:06.090 --> 00:05:08.830\nAnd I'm just gonna make\nsure that it still works.\n\n88\n00:05:08.830 --> 00:05:13.530\nSo we're going to refresh, and wait for\nit, and wait for it and there it is.\n\n89\n00:05:13.530 --> 00:05:15.740\nNow remember, we're making a lot of calls.\n\n90\n00:05:15.740 --> 00:05:17.074\nIn that server response, so\n\n91\n00:05:17.074 --> 00:05:19.753\nit may take a little bit of\ntime in order to fulfill those.\n\n92\n00:05:19.753 --> 00:05:24.376\nNow this is a local server, once we deploy\nthis, those speeds are going to speed up\n\n93\n00:05:24.376 --> 00:05:29.050\nsome just because of the network\nconnectivity that we have access to.\n\n94\n00:05:29.050 --> 00:05:30.940\nSo I wanted to take that little detour,\nbut\n\n95\n00:05:30.940 --> 00:05:33.740\nnow I'm ready to answer\nyour questions Zachar.\n\n96\n00:05:33.740 --> 00:05:36.838\nAre you ready to build this and\nget my location method on the service?\n\n97\n00:05:36.838 --> 00:05:40.900\n&gt;&gt; Yeah, let's get going and\nwhat we need to do and what can I do?\n\n98\n00:05:40.900 --> 00:05:44.145\n&gt;&gt; Well you just need to give\nme a thumbs up off camera,\n\n99\n00:05:44.145 --> 00:05:47.093\nreally like yeah,\nyou're doing a great job.\n\n100\n00:05:47.093 --> 00:05:48.741\nAnd I'll take care of it there.\n\n101\n00:05:48.741 --> 00:05:52.263\nSo let's go ahead and think about well,\n\n102\n00:05:52.263 --> 00:05:57.060\nwe're kind of finished\nwith the proxy portion.\n\n103\n00:05:57.060 --> 00:06:01.850\nNow, in the grand scheme of things this\nis still proxy to the Dark Sky API, but\n\n104\n00:06:01.850 --> 00:06:04.470\nwe've added some functionality to it.\n\n105\n00:06:04.470 --> 00:06:08.290\nIn addition to,\nwe could abstract this away.\n\n106\n00:06:08.290 --> 00:06:10.320\nI'm not worried about that.\n\n107\n00:06:10.320 --> 00:06:13.300\nWorking code to me is\nbetter than beautiful code.\n\n108\n00:06:13.300 --> 00:06:15.430\nSo that's my viewpoint.\n\n109\n00:06:15.430 --> 00:06:18.600\nThere are some things that I\ncould probably do better, but\n\n110\n00:06:18.600 --> 00:06:21.040\nthis is kind of a work in progress.\n\n111\n00:06:21.040 --> 00:06:25.630\nSo if I come over here,\nI'm actually gonna close out the proxy and\n\n112\n00:06:25.630 --> 00:06:31.020\ninstead come back into the client and\nlook for services.\n\n113\n00:06:31.020 --> 00:06:34.370\nAnd here's our service,\nour WeatherService, so to speak.\n\n114\n00:06:34.370 --> 00:06:39.191\nSo here's our base and\nI'm just gonna make a copy here.\n\n115\n00:06:39.191 --> 00:06:45.650\nAnd I'm just gonna call\nthis location base like so.\n\n116\n00:06:45.650 --> 00:06:47.894\nAnd again there are better ways or\n\n117\n00:06:47.894 --> 00:06:52.394\nat least different ways I'm making\na decision that we can do this.\n\n118\n00:06:52.394 --> 00:06:53.864\nI'm gonna call this location base.\n\n119\n00:06:53.864 --> 00:06:57.299\nNow this get,\nwell that's a method on the service.\n\n120\n00:06:57.299 --> 00:07:00.980\nI'm gonna add a new method\ncalled getByLocation\n\n121\n00:07:02.692 --> 00:07:05.422\ngetByLocation, just like that.\n\n122\n00:07:05.422 --> 00:07:08.514\nAnd then what is that going to do?\n\n123\n00:07:08.514 --> 00:07:15.582\nWell, it's gonna take the location base,\nconstruct in a new URL with that base.\n\n124\n00:07:15.582 --> 00:07:21.658\nSo this is gonna be\nlocationBase just like so.\n\n125\n00:07:21.658 --> 00:07:29.328\nAnd then /, well, it's actually just going\nto be whatever location is passed in.\n\n126\n00:07:29.328 --> 00:07:37.456\nAnd then I'm just gonna\nreturn this $http.get for\n\n127\n00:07:37.456 --> 00:07:43.010\nthis URL and then response.data.\n\n128\n00:07:43.010 --> 00:07:47.062\nNow I do that to strip off the headers and\nthings once it come from the surface.\n\n129\n00:07:47.062 --> 00:07:49.233\nTechnically you could skip that step,\n\n130\n00:07:49.233 --> 00:07:53.192\nyou're still gonna be handling\npromise where we'll use the service.\n\n131\n00:07:53.192 --> 00:07:56.841\nSo that was actually pretty easy,\nbut now comes the hard part.\n\n132\n00:07:56.841 --> 00:08:03.011\nWe actually have to test to make\nsure that this actually works.\n\n133\n00:08:03.011 --> 00:08:09.887\nSo if I come over here to the app,\nI'm gonna come into the app controller and\n\n134\n00:08:09.887 --> 00:08:14.157\nnow I have weather This.weather = weather.\n\n135\n00:08:14.157 --> 00:08:18.867\nThis.lat = okay so,\nwe're just gonna hard code this for now.\n\n136\n00:08:18.867 --> 00:08:22.590\nAnd the reason being is this latitude and\nlongitude,\n\n137\n00:08:22.590 --> 00:08:25.248\nit doesn't really fit in the scheme.\n\n138\n00:08:25.248 --> 00:08:30.810\nSo let's just create\na location as such and\n\n139\n00:08:30.810 --> 00:08:35.300\nlet's stick with Poughkeepsie.\n\n140\n00:08:35.300 --> 00:08:38.603\nPoughkeepsie, NY.\n\n141\n00:08:38.603 --> 00:08:39.874\n&gt;&gt; I know, no one lives there, right?\n\n142\n00:08:39.874 --> 00:08:40.602\nI just like the name.\n\n143\n00:08:40.602 --> 00:08:42.543\n&gt;&gt; So it is a very interesting name.\n\n144\n00:08:42.543 --> 00:08:47.927\nSo this.weather.getByLocation, and\n\n145\n00:08:47.927 --> 00:08:53.010\nwe're gonna pass in this.location.\n\n146\n00:08:53.010 --> 00:08:58.036\nAnd then well,\nlet's just take the response and\n\n147\n00:08:58.036 --> 00:09:02.220\nconsole.log it to well, the console.\n\n148\n00:09:02.220 --> 00:09:04.260\nThat makes sense,\nlet's just print it to the console.\n\n149\n00:09:04.260 --> 00:09:06.160\nAgain, this is just to get an idea.\n\n150\n00:09:06.160 --> 00:09:10.130\nSo this is gonna happen upon\ninstantiation of the app component.\n\n151\n00:09:10.130 --> 00:09:14.750\nNot necessarily the best thing, but\nI think we can get away with it for now.\n\n152\n00:09:16.270 --> 00:09:20.100\nSo if we come over here to end caster and\nwell,\n\n153\n00:09:20.100 --> 00:09:24.460\nwe need to make sure that our web packet's\nstill running and it looks like it is.\n\n154\n00:09:24.460 --> 00:09:29.820\nAnd we'll see if we can refresh and\nthere we go.\n\n155\n00:09:29.820 --> 00:09:31.974\nNotice it's printing out something.\n\n156\n00:09:31.974 --> 00:09:34.130\nWhat is it printing out?\n\n157\n00:09:34.130 --> 00:09:38.580\nIt's actually printing out the weather for\nPoughkeepsie, New York.\n\n158\n00:09:38.580 --> 00:09:43.890\nSo our weather service is now connecting\nour HTTP endpoint to our app component.\n\n159\n00:09:45.500 --> 00:09:47.984\nThat's great.\n\n160\n00:09:47.984 --> 00:09:49.456\nBut we still,\n\n161\n00:09:49.456 --> 00:09:54.373\nwe got some craziness here because-\n&gt;&gt; Shenanigans?\n\n162\n00:09:54.373 --> 00:09:56.310\n&gt;&gt; Shenanigans,\nwe're going with shenanigans.\n\n163\n00:09:57.740 --> 00:10:01.590\nThis is actually happening in the\nconstructor and that's not what I want.\n\n164\n00:10:03.060 --> 00:10:05.210\nAlso, I am hard coding for Poughkeepsie.\n\n165\n00:10:05.210 --> 00:10:08.895\nSo if I were to deploy this now, well,\nyou would always get the weather for\n\n166\n00:10:08.895 --> 00:10:13.008\nPoughkeepsie, in New York, and it is\ndefinitely not latitude and longitude 0.\n\n167\n00:10:13.008 --> 00:10:17.906\nSo seems a little weird, but, Zack,\nit looks like you got something on\n\n168\n00:10:17.906 --> 00:10:22.660\nthe tip of your tongue there, and\nI don't wanna rain on your parade.\n\n169\n00:10:22.660 --> 00:10:26.379\n&gt;&gt; It seems pretty handy, we're able to\nget information using the location, but\n\n170\n00:10:26.379 --> 00:10:27.109\nI see an issue.\n\n171\n00:10:27.109 --> 00:10:31.146\nI mean, we can't search using in\nthe search component with location, so\n\n172\n00:10:31.146 --> 00:10:32.588\nhow are we gonna fix that?\n\n173\n00:10:32.588 --> 00:10:35.302\n&gt;&gt; You're onto it.\n\n174\n00:10:35.302 --> 00:10:39.266\nYou're definitely seeing some issues\nthat have kind of cropped up.\n\n175\n00:10:39.266 --> 00:10:40.604\n&gt;&gt; Only you can answer this question.\n\n176\n00:10:40.604 --> 00:10:44.586\n&gt;&gt; Possibly, possibly, possibly.\n\n177\n00:10:44.586 --> 00:10:48.615\nSo let's think about that a little bit,\nand we might actually say that,\n\n178\n00:10:48.615 --> 00:10:52.314\nI know this a little on the short side,\nbut the search component and\n\n179\n00:10:52.314 --> 00:10:54.580\nthe re-factor may take a little while.\n\n180\n00:10:54.580 --> 00:10:58.541\nBut we can at least plan, talk about what\nour next plans, kinda course of action is.\n\n181\n00:10:58.541 --> 00:10:59.781\n&gt;&gt; Okay.\n\n182\n00:10:59.781 --> 00:11:01.711\n&gt;&gt; So here's what I'm envisioning.\n\n183\n00:11:01.711 --> 00:11:06.463\nThis app controller component it will have\na location and we can just put that as\n\n184\n00:11:06.463 --> 00:11:10.423\nan empty string and instead of\ngetting the location on page load.\n\n185\n00:11:10.423 --> 00:11:14.806\nInstead of getting it on page load\nwhat I would actually like to\n\n186\n00:11:14.806 --> 00:11:19.542\nhappen is instead for the search\ncomponent to search by location.\n\n187\n00:11:19.542 --> 00:11:24.255\nBut what means is in the search component,\nI'm no longer gonna be\n\n188\n00:11:24.255 --> 00:11:28.980\npassing by the latitude and\nlongitude that someone is typing in.\n\n189\n00:11:28.980 --> 00:11:31.369\nI need to be able to\nsearch just by location.\n\n190\n00:11:31.369 --> 00:11:36.517\nSo I'm actually going to change pretty\nmuch the search component altogether.\n\n191\n00:11:36.517 --> 00:11:40.340\nSo here's the update function\nthat is being run on Click.\n\n192\n00:11:40.340 --> 00:11:44.160\n&gt;&gt; And then if I come over to the HTML,\nyou can see there's the update, but\n\n193\n00:11:44.160 --> 00:11:46.988\nwe have latitude and\nlongitude and a submit button.\n\n194\n00:11:46.988 --> 00:11:50.590\nI would really like to have\nan input that is just location.\n\n195\n00:11:51.640 --> 00:11:57.807\nBuild this payload, so to speak, inside of\nthe search controller that has this event.\n\n196\n00:11:57.807 --> 00:12:02.107\nAnd then call on search and\nhave the search occur by, well,\n\n197\n00:12:02.107 --> 00:12:06.837\nlocation instead of latitude and\nlongitude because we built that\n\n198\n00:12:06.837 --> 00:12:10.537\nHTTP endpoint in order to\nwell search by location.\n\n199\n00:12:10.537 --> 00:12:14.333\nAnd then if we come over and\nwe look back at AppController,\n\n200\n00:12:14.333 --> 00:12:17.591\nwe don't want this to\nhappen in the constructor.\n\n201\n00:12:17.591 --> 00:12:21.850\nBut we're gonna have to\nchange this on search or\n\n202\n00:12:21.850 --> 00:12:27.070\nat least make an additional\nthat is on search by location.\n\n203\n00:12:27.070 --> 00:12:31.761\nSo we have some refactoring to do and\nsome other things like that.\n\n204\n00:12:31.761 --> 00:12:34.479\nAnd I think that's gonna\ntake a good while.\n\n205\n00:12:34.479 --> 00:12:38.571\nSo even though this this episode's\nbeen a little bit shorter in nature.\n\n206\n00:12:38.571 --> 00:12:40.950\nI think this is a good stopping point.\n\n207\n00:12:40.950 --> 00:12:44.929\nHold off here, come back, and\nactually work on the search component.\n\n208\n00:12:44.929 --> 00:12:50.310\n&gt;&gt; Awesome, adding Google location search,\nthis is part two, there is a part one.\n\n209\n00:12:50.310 --> 00:12:52.130\nAny last words before we move on?\n\n210\n00:12:52.130 --> 00:12:56.056\n&gt;&gt; Well, we were just starting to\ncrank up the complexity here, so\n\n211\n00:12:56.056 --> 00:13:00.288\ndefinitely stay tuned You never\nknow what features are coming next.\n\n212\n00:13:00.288 --> 00:13:01.843\n&gt;&gt; Weather app with AngularJS and\n\n213\n00:13:01.843 --> 00:13:04.950\nExpress, there's a whole lot\nof videos in this series.\n\n214\n00:13:04.950 --> 00:13:07.902\nMake sure you watch them all because\nyou'll be very glad you did.\n\n215\n00:13:07.902 --> 00:13:09.590\nThank you for watching DevPro TV.\n\n216\n00:13:09.590 --> 00:13:12.211\nRemember, a good devpro\nis always learning.\n\n217\n00:13:12.211 --> 00:13:12.819\nI'm Zach Memos.\n\n218\n00:13:12.819 --> 00:13:13.994\n&gt;&gt; And I'm Justin S.\n\n219\n00:13:13.994 --> 00:13:14.726\nAnd we will see you soon!\n\n220\n00:13:14.726 --> 00:13:19.573\n[MUSIC]\n\n",
          "vimeoId": "227254886"
        },
        {
          "description": "Justin and Zach discuss how we can search by location in the User Interface, App Controller & Component functionality, changing the UI of the Search Component, changing how the App Component delegated function is called, making the App call 'GetByLocation,' and why we are keeping the 'Get' method in the Weather Service that uses latitude and longitude.",
          "length": "1298",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-10-1-updating_the_search_component-072517-PGM.00_21_29_13.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-10-1-updating_the_search_component-072517-PGM.00_21_29_13.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-10-1-updating_the_search_component-072517-PGM.00_21_29_13.Still001-sm.jpg",
          "title": "Updating the Search Component",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.670 --> 00:00:17.230\nThank you for choosing DevProTV,\nhelping you learn wherever you go.\n\n3\n00:00:17.230 --> 00:00:19.247\nI'm your host, Zach Memos,\n\n4\n00:00:19.247 --> 00:00:23.860\nas we continue on with weather\napp with AngularJS and Express.\n\n5\n00:00:23.860 --> 00:00:26.770\nThis is updating the search component.\n\n6\n00:00:26.770 --> 00:00:29.530\nBrand new topic, brand new episode.\n\n7\n00:00:29.530 --> 00:00:33.260\nAnd bringing us all the information\nwe need is Justin Dennison.\n\n8\n00:00:33.260 --> 00:00:35.510\nWell, I feel like there needs\nto be some pyrotechnics or\n\n9\n00:00:35.510 --> 00:00:37.890\npossibly at least a fog machine for\nthat intro.\n\n10\n00:00:37.890 --> 00:00:39.780\nBut I'll allow it.\n\n11\n00:00:39.780 --> 00:00:40.790\nAnd how are you today, Zach?\n\n12\n00:00:40.790 --> 00:00:43.270\n&gt;&gt; Well, I'm great and,\nagain, still very excited.\n\n13\n00:00:43.270 --> 00:00:45.800\nBecause we're continuing\nto build this weather app.\n\n14\n00:00:45.800 --> 00:00:47.300\nAnd it's getting more and more exciting.\n\n15\n00:00:47.300 --> 00:00:50.160\nNow the last episode we were\nable to search by location.\n\n16\n00:00:50.160 --> 00:00:53.610\nBut that was not available\nin the user interface.\n\n17\n00:00:53.610 --> 00:00:55.950\nSo what are we gonna do about that,\nhow are we gonna fix that?\n\n18\n00:00:55.950 --> 00:00:59.780\n&gt;&gt; Well, we actually touched on this\na little bit at the end of the last\n\n19\n00:00:59.780 --> 00:01:01.650\nepisode, right?\n\n20\n00:01:01.650 --> 00:01:04.020\nBut let's just go over\nthat plan one more time.\n\n21\n00:01:04.020 --> 00:01:05.893\nWe need to change from latitude and\n\n22\n00:01:05.893 --> 00:01:10.720\nlongitude based searches in the search\ncomponent, to a location-based search.\n\n23\n00:01:10.720 --> 00:01:14.690\nIn addition to because the function\nthat is actually doing the searching\n\n24\n00:01:14.690 --> 00:01:19.890\nis delegated from the app component,\nit's essentially handed down.\n\n25\n00:01:19.890 --> 00:01:24.170\nWe need to change how that function\nbehaves, or at least write another one and\n\n26\n00:01:24.170 --> 00:01:26.110\nchange how it's delegated.\n\n27\n00:01:26.110 --> 00:01:30.680\nSo the app component can give us\nthe ability to call the weather service\n\n28\n00:01:30.680 --> 00:01:32.930\nin the component itself\nfrom the search component.\n\n29\n00:01:32.930 --> 00:01:36.186\nEssentially, that communication that\nwe've established in previous episodes.\n\n30\n00:01:36.186 --> 00:01:40.420\nAnd then,\nwell we can go search by location.\n\n31\n00:01:40.420 --> 00:01:44.010\nPoughkeepsie, New York, or San Francisco,\nCalifornia, and New York, New York,\n\n32\n00:01:44.010 --> 00:01:45.370\nwhatever it maybe.\n\n33\n00:01:45.370 --> 00:01:49.020\nAnd then we'd still get the weather\ndata that we anticipate, well,\n\n34\n00:01:49.020 --> 00:01:50.460\nas a return value.\n\n35\n00:01:50.460 --> 00:01:51.680\nEverything should still work.\n\n36\n00:01:51.680 --> 00:01:53.510\nAll of our other components\nshould still work.\n\n37\n00:01:53.510 --> 00:01:56.130\nBut we gotta do some refactoring,\nsome changing around.\n\n38\n00:01:56.130 --> 00:02:00.255\nAnd, well, this is one of those\ntimes where things can break.\n\n39\n00:02:00.255 --> 00:02:02.500\nAnd we might have some\nlive action debugging.\n\n40\n00:02:02.500 --> 00:02:06.000\nI make no promises that it is or\nis not going to happen.\n\n41\n00:02:06.000 --> 00:02:08.520\n&gt;&gt; So what all is involved\nin getting that working?\n\n42\n00:02:08.520 --> 00:02:11.520\n&gt;&gt; Well actually, let's just go ahead and\ntake a look at my screen here.\n\n43\n00:02:11.520 --> 00:02:13.730\nAnd let's just see what happens, right?\n\n44\n00:02:15.280 --> 00:02:16.640\nSo well,\n\n45\n00:02:16.640 --> 00:02:20.670\nthe first thing that I notice is in the\nAppController, which is the controller for\n\n46\n00:02:20.670 --> 00:02:23.810\nour app component, we have this\nhard coded Poughkeepsie, New York.\n\n47\n00:02:23.810 --> 00:02:25.732\nLet's just go ahead and take that out.\n\n48\n00:02:25.732 --> 00:02:30.371\nLet's take out this.weather.getByLocation.\n\n49\n00:02:30.371 --> 00:02:33.570\nWe're just gonna take that out, cuz I\ndon't want that to happen on page load.\n\n50\n00:02:33.570 --> 00:02:36.950\nI actually want people to search there,\nall right?\n\n51\n00:02:37.970 --> 00:02:40.380\nSo I'm just gonna take out\nall of that hard coded value.\n\n52\n00:02:40.380 --> 00:02:44.480\nAnd I made this an empty string because\nI want to know that it's a string that's\n\n53\n00:02:44.480 --> 00:02:45.420\nmy intention.\n\n54\n00:02:45.420 --> 00:02:47.180\nI'm being clear about that.\n\n55\n00:02:47.180 --> 00:02:51.190\nThe weather service, well, in a previous\nepisode we wrote this getByLocation.\n\n56\n00:02:51.190 --> 00:02:53.760\nSo now it's actually gonna\nmake a call to that end point.\n\n57\n00:02:53.760 --> 00:02:55.100\nSo this is kind of like our interface.\n\n58\n00:02:56.270 --> 00:02:57.170\nWe get by location,\n\n59\n00:02:57.170 --> 00:03:01.670\nthe app component is right now is the only\nplace that we use the weather service.\n\n60\n00:03:01.670 --> 00:03:05.710\nAnd that's to keep our app component\nthe only stateful component or\n\n61\n00:03:05.710 --> 00:03:07.768\nsmart component in our application.\n\n62\n00:03:07.768 --> 00:03:15.985\nthis.onSearch is actually passed\ndown to the search component.\n\n63\n00:03:15.985 --> 00:03:20.709\nAnd I'm gonna open up the HTML, and\nits controller, just right here,\n\n64\n00:03:20.709 --> 00:03:22.380\nso we can look.\n\n65\n00:03:22.380 --> 00:03:27.179\nThis update function is going to run,\ncreate a payload, and\n\n66\n00:03:27.179 --> 00:03:29.825\ncall onSearch, just like this.\n\n67\n00:03:29.825 --> 00:03:34.675\nThat onSearch is passed down through\nthe app component right here\n\n68\n00:03:34.675 --> 00:03:36.797\nas an event as the argument.\n\n69\n00:03:36.797 --> 00:03:41.339\nNow this whole event thing, this was like\na synthetic event that we're building.\n\n70\n00:03:41.339 --> 00:03:43.893\nBecause this is how the parsing and\n\n71\n00:03:43.893 --> 00:03:49.020\nargument passing works inside of\nthis component API for AngularJS.\n\n72\n00:03:49.020 --> 00:03:51.220\nSo, onSearch, so\n\n73\n00:03:51.220 --> 00:03:55.380\nthe first thing that I wanna do is\nactually change the search component.\n\n74\n00:03:55.380 --> 00:03:57.540\nNow there's a variety of\nways to go about this.\n\n75\n00:03:57.540 --> 00:04:01.140\nI wanna change the search component and\nmake sure that the update still runs\n\n76\n00:04:01.140 --> 00:04:03.830\nwhen I click and it's actually\ngrabbing a hold of the search.\n\n77\n00:04:03.830 --> 00:04:06.240\nCuz that's where the UI\nchange is gonna be.\n\n78\n00:04:06.240 --> 00:04:09.520\nNow, this component kind of driven design,\nyou're like,\n\n79\n00:04:09.520 --> 00:04:12.300\nwell I thought we could\nmodify individual components.\n\n80\n00:04:12.300 --> 00:04:16.719\nYes, but we also have to modify\nthe interfaces where they communicate.\n\n81\n00:04:16.719 --> 00:04:18.840\nAnd typically those are those functions.\n\n82\n00:04:18.840 --> 00:04:20.910\nThat's not always the case.\n\n83\n00:04:20.910 --> 00:04:24.392\nIt would have been nice if we were\nalready searching by location and\n\n84\n00:04:24.392 --> 00:04:26.764\nmaybe location had latitude and longitude.\n\n85\n00:04:26.764 --> 00:04:30.681\nAnd we could have organized this\na little bit differently from the start.\n\n86\n00:04:30.681 --> 00:04:32.392\nBut sometimes when you're building\nsomething you don't know.\n\n87\n00:04:32.392 --> 00:04:33.818\nAnd you're getting new features.\n\n88\n00:04:33.818 --> 00:04:37.090\nAnd someone says well, that's nice but\nI want you to build this way.\n\n89\n00:04:37.090 --> 00:04:38.380\nSo you have to make changes.\n\n90\n00:04:38.380 --> 00:04:40.579\nSo this is more an organic thing,\n\n91\n00:04:40.579 --> 00:04:44.044\nhow you may very well\nundertake a project like this.\n\n92\n00:04:44.044 --> 00:04:50.278\nSo let's go ahead into our search HTML and\nour actual markup, our template.\n\n93\n00:04:50.278 --> 00:04:51.310\nI'm gonna hide that there.\n\n94\n00:04:51.310 --> 00:04:53.560\nI'm gonna keep this submit button.\n\n95\n00:04:53.560 --> 00:04:56.661\nBut I no longer need latitude and\nlongitude.\n\n96\n00:04:56.661 --> 00:05:00.656\nIm actually gonna delete one of them.\n\n97\n00:05:00.656 --> 00:05:06.221\nAnd I'm going to change the type\nfrom number to instead text and\n\n98\n00:05:06.221 --> 00:05:08.745\nits ng-model to location.\n\n99\n00:05:08.745 --> 00:05:13.810\nAnd I'm gonna change this to,\nwell, location just like that.\n\n100\n00:05:13.810 --> 00:05:16.410\nNow that update's still gonna run.\n\n101\n00:05:16.410 --> 00:05:19.970\nBut if we go to the update\nthis payload's not gonna work.\n\n102\n00:05:19.970 --> 00:05:22.420\nSo all I'm gonna do is\ntemporarily comment this out.\n\n103\n00:05:22.420 --> 00:05:24.170\nSo I'm gonna do a little bit of testing.\n\n104\n00:05:24.170 --> 00:05:27.780\nI'm gonna console.log(this.location).\n\n105\n00:05:29.710 --> 00:05:31.560\nSo, now this should rebuild.\n\n106\n00:05:31.560 --> 00:05:34.770\nLet's see how that works out for us.\n\n107\n00:05:34.770 --> 00:05:39.092\nSo rebuilding, we're rebuilding and\nlet's just refresh.\n\n108\n00:05:39.092 --> 00:05:41.332\nThere we go,\nit was already refreshed for me.\n\n109\n00:05:41.332 --> 00:05:42.960\nI was not paying attention.\n\n110\n00:05:42.960 --> 00:05:46.800\nSo let's say that we say New York,\nNew York,\n\n111\n00:05:46.800 --> 00:05:51.200\njust like that, and\nI click Get the Weather.\n\n112\n00:05:51.200 --> 00:05:53.798\nSo I know that I'm\npassing that information.\n\n113\n00:05:53.798 --> 00:05:58.570\nI've changed the UI a little bit,\nthat's good.\n\n114\n00:05:58.570 --> 00:05:59.282\nThat's what I wanted.\n\n115\n00:05:59.282 --> 00:06:02.140\nThat update function is still running.\n\n116\n00:06:02.140 --> 00:06:05.260\nSo we should be able to build, instead,\n\n117\n00:06:05.260 --> 00:06:09.000\na payload that takes the location and\npasses it back.\n\n118\n00:06:09.000 --> 00:06:12.140\nNow, I'm always going to\nwork until I hit a problem.\n\n119\n00:06:12.140 --> 00:06:15.650\nAnd I'm gonna do that intentionally\nbecause admittedly so,\n\n120\n00:06:15.650 --> 00:06:17.310\nI've planned this out a great deal.\n\n121\n00:06:17.310 --> 00:06:19.620\nSo I know where all\nthe whoopsie daisy's are.\n\n122\n00:06:19.620 --> 00:06:23.150\nBut I'm gonna approach this like I'm\ntrying to get something to work and\n\n123\n00:06:23.150 --> 00:06:25.720\nI haven't had that experience\nof planning this out.\n\n124\n00:06:25.720 --> 00:06:28.650\nSo I'm gonna try to make the update\n\n125\n00:06:28.650 --> 00:06:31.790\nfunction run with the onSearch\nthat's already there.\n\n126\n00:06:31.790 --> 00:06:36.850\nAnd we're gonna see the error that occurs\njust for, well, understanding purposes.\n\n127\n00:06:36.850 --> 00:06:39.290\nSo, I'm going to get rid\nof this console.log.\n\n128\n00:06:39.290 --> 00:06:40.330\nActually, I take that back.\n\n129\n00:06:40.330 --> 00:06:42.520\nI'm gonna leave that there for now.\n\n130\n00:06:42.520 --> 00:06:45.080\nAnd I'm gonna uncomment this.\n\n131\n00:06:45.080 --> 00:06:51.019\nAnd all I'm gonna do is change\nthis payload from latitude and\n\n132\n00:06:51.019 --> 00:06:56.500\nlongitude to location just like so,\nthis.location.\n\n133\n00:06:56.500 --> 00:07:01.469\nSo okay,\nnow I've changed that to being onSearch\n\n134\n00:07:01.469 --> 00:07:05.739\nwith the event that has the data location.\n\n135\n00:07:05.739 --> 00:07:09.190\nAgain, this is a synthetic\nevent that we're building.\n\n136\n00:07:09.190 --> 00:07:12.742\nLikewise, I don't really need\nthis temporary variable.\n\n137\n00:07:12.742 --> 00:07:14.310\nI'm gonna leave it there for now.\n\n138\n00:07:14.310 --> 00:07:18.860\nWe may come back and clean that up\njust like this constructor later on.\n\n139\n00:07:18.860 --> 00:07:19.992\nSo we're gonna come back.\n\n140\n00:07:19.992 --> 00:07:26.882\nIt looks like its rerun,\nNew York, New York, just like so.\n\n141\n00:07:26.882 --> 00:07:29.525\nAnd I click and, well, it's still running.\n\n142\n00:07:29.525 --> 00:07:34.122\nAnd it should work, right, what happened?\n\n143\n00:07:34.122 --> 00:07:38.800\nthis.onSearch, it doesn't look\nlike anything's happening.\n\n144\n00:07:40.090 --> 00:07:41.660\nI wonder why that is.\n\n145\n00:07:41.660 --> 00:07:49.900\nWell, if we coming in and inspect,\nwell this update is calling onSearch.\n\n146\n00:07:49.900 --> 00:07:51.350\nWhere is the on search coming from?\n\n147\n00:07:51.350 --> 00:07:57.110\nFrom the app component's layout where\nI attach onSearch to ctrl.onSearch.\n\n148\n00:07:57.110 --> 00:07:58.896\nNow this is onSearch method.\n\n149\n00:07:58.896 --> 00:08:00.625\nOn the app controller.\n\n150\n00:08:02.606 --> 00:08:07.080\nSo that should work, so now I'm trying\nto think, did I break the connection?\n\n151\n00:08:07.080 --> 00:08:08.500\nIt's not running.\n\n152\n00:08:08.500 --> 00:08:09.750\nSo what do I do?\n\n153\n00:08:09.750 --> 00:08:13.270\nWell, deliberately placed console.logs.\n\n154\n00:08:13.270 --> 00:08:16.110\nAgain there are different ways\nof debugging solutions but\n\n155\n00:08:16.110 --> 00:08:19.970\nI think this helps convey the thought\nprocess that you go through when you're\n\n156\n00:08:19.970 --> 00:08:25.540\ntrying to get something to work and so\nI'm gonna come back to AppController and\n\n157\n00:08:25.540 --> 00:08:29.375\non search, I'm just gonna console.log.\n\n158\n00:08:29.375 --> 00:08:31.630\nSearching now.\n\n159\n00:08:31.630 --> 00:08:32.940\nAlright, so I'm gonna save that.\n\n160\n00:08:34.740 --> 00:08:36.280\nAnd we're running, we're running.\n\n161\n00:08:37.630 --> 00:08:39.060\nAnd ah-ha!\n\n162\n00:08:39.060 --> 00:08:39.770\nWhat happened?\n\n163\n00:08:39.770 --> 00:08:44.716\nWe have this object that's broke but\nlet's just go ahead and search.\n\n164\n00:08:44.716 --> 00:08:49.880\nNew York, New York.\n\n165\n00:08:49.880 --> 00:08:51.840\nGet the weather and it says searching now.\n\n166\n00:08:51.840 --> 00:08:54.610\nWell that's very interesting,\nso that's running.\n\n167\n00:08:55.880 --> 00:08:58.350\nBut it doesn't look like\nanything's happening so.\n\n168\n00:08:59.650 --> 00:09:02.540\nLat and lon, you know what?\n\n169\n00:09:02.540 --> 00:09:06.190\nSince that's running, what is being\npassed in is latitude and longitude here.\n\n170\n00:09:06.190 --> 00:09:09.930\nWell, because I'm using destructuring,\nthose are undefined\n\n171\n00:09:09.930 --> 00:09:14.430\nbecause the payload no longer has\nthose values as part of that event and\n\n172\n00:09:14.430 --> 00:09:18.140\nwhat I mean is I come over to the search\ncontroller and I built this payload.\n\n173\n00:09:18.140 --> 00:09:21.110\nThis event had a latitude and\nlongitude that was passed in and\n\n174\n00:09:21.110 --> 00:09:23.180\nwas modified internal to\nthe search component.\n\n175\n00:09:23.180 --> 00:09:26.300\nAnd then I bubbled that back up using\nessentially this synthetic event.\n\n176\n00:09:28.760 --> 00:09:32.709\nWell that is not what I expected and\nnow we have a decision to make.\n\n177\n00:09:34.000 --> 00:09:38.450\nDo I keep this on search and\nbuilding new on search by location?\n\n178\n00:09:39.640 --> 00:09:45.780\nOr do I just change this one,\nkeep on search and make it by a location?\n\n179\n00:09:45.780 --> 00:09:49.537\nSo if I think about this from a user\nperspective, I don't think a user,\n\n180\n00:09:49.537 --> 00:09:53.423\nsomeone who's interacting with a web\napplication is ever going to type in\n\n181\n00:09:53.423 --> 00:09:56.470\nlatitude and\nlongitude at least not a technical.\n\n182\n00:09:56.470 --> 00:09:58.500\nA non-technically savvy user,\n\n183\n00:09:58.500 --> 00:10:03.310\nor a non-weather nerd,\nfor lack of a better term.\n\n184\n00:10:03.310 --> 00:10:09.130\nI can say this because I tend to have a\nlittle bit of nerdiness toward weather and\n\n185\n00:10:09.130 --> 00:10:11.180\nscience and-\n&gt;&gt; How about weather junkie?\n\n186\n00:10:11.180 --> 00:10:14.436\n&gt;&gt; Weather junkie, I don't know if\nthat has any better connotations.\n\n187\n00:10:14.436 --> 00:10:15.340\n&gt;&gt; [LAUGH] [INAUDIBLE]\n&gt;&gt; I'm not,\n\n188\n00:10:15.340 --> 00:10:17.900\na weather you're a connoisseur.\n\n189\n00:10:17.900 --> 00:10:19.850\n&gt;&gt; Hey.\n&gt;&gt; Hey there we go.\n\n190\n00:10:19.850 --> 00:10:21.250\n&gt;&gt; Requisite.\n\n191\n00:10:21.250 --> 00:10:26.590\n&gt;&gt; Whatever he said [LAUGH] so\nI don't think that the user\n\n192\n00:10:26.590 --> 00:10:30.750\nis going to, well, that's gonna\nrequire the latitude and longitude.\n\n193\n00:10:30.750 --> 00:10:34.230\nSo, I'm making the decision,\nand if you were working for\n\n194\n00:10:34.230 --> 00:10:39.070\na client you would have kind of client\nsays, I want latitude, longitude, and\n\n195\n00:10:39.070 --> 00:10:43.350\nlocation, or one or the other, so\nyou would conform to the specifications.\n\n196\n00:10:43.350 --> 00:10:47.560\nHopefully, if you're building for\nsomeone else they have that idea in mind.\n\n197\n00:10:47.560 --> 00:10:50.770\nI don't wanna make the decision,\nthis is always location,\n\n198\n00:10:50.770 --> 00:10:53.220\nand that's what we're gonna do, all right?\n\n199\n00:10:53.220 --> 00:10:59.100\nSo, if we do that, I'm gonna come\nback over here to the app controller,\n\n200\n00:10:59.100 --> 00:11:05.290\nand change this distructuring argument\nto location, just like so, okay?\n\n201\n00:11:06.624 --> 00:11:10.957\nNow with that said, well,\n\n202\n00:11:10.957 --> 00:11:14.800\nI don't think I need to update\nlatitude and longitude anymore, so\n\n203\n00:11:14.800 --> 00:11:20.250\nI'm actually gonna just get rid of that\nand then the weather service is going to\n\n204\n00:11:20.250 --> 00:11:25.100\nget by location and\nis no longer going to be latitude and\n\n205\n00:11:25.100 --> 00:11:29.350\nlongitude driven but\ninstead location driven, just like that.\n\n206\n00:11:30.620 --> 00:11:33.540\nNow I need to double check the API\nthat I've exposed as part of\n\n207\n00:11:33.540 --> 00:11:34.380\nthe weather service.\n\n208\n00:11:34.380 --> 00:11:38.540\nI come over to weatherservice.js,\ngive a location, location.\n\n209\n00:11:38.540 --> 00:11:42.680\nYeah, that's the API that I expect for\nthis service so\n\n210\n00:11:42.680 --> 00:11:45.620\nI'm gonna keep that and\nthen it should update.\n\n211\n00:11:45.620 --> 00:11:49.140\nNow I'm gonna get rid of this comment\nhere just to clean things up.\n\n212\n00:11:49.140 --> 00:11:49.900\nSo what is it gonna do?\n\n213\n00:11:50.980 --> 00:11:53.640\nIt's gonna get my location for\nthis given location,\n\n214\n00:11:53.640 --> 00:11:58.360\nand then when the weather data gets back,\nit's going to update the app component.\n\n215\n00:11:58.360 --> 00:12:00.890\nAnd it should propagate through\nto the other components.\n\n216\n00:12:00.890 --> 00:12:03.570\nThat's what we should see, okay?\n\n217\n00:12:03.570 --> 00:12:06.510\nSo let's go figure that out.\n\n218\n00:12:06.510 --> 00:12:07.920\nWe refresh.\n\n219\n00:12:07.920 --> 00:12:13.340\nAnd, let's just say 999801.\n\n220\n00:12:13.340 --> 00:12:15.545\nThat is way too many for a ZIP code.\n\n221\n00:12:15.545 --> 00:12:18.240\n&gt;&gt; [LAUGH]\n&gt;&gt; There we go, too many for a ZIP code.\n\n222\n00:12:18.240 --> 00:12:23.580\nNow something's broke,\ninternal server error.\n\n223\n00:12:23.580 --> 00:12:30.400\nOkay, well let's go back to New York,\nNew York.\n\n224\n00:12:31.490 --> 00:12:34.120\nLike so.\nAnd we run it, and there we go.\n\n225\n00:12:34.120 --> 00:12:38.090\nNow, what this means, and\nI've actually done this before,\n\n226\n00:12:38.090 --> 00:12:40.680\nthere's probably a little flag or\nsomething that I'm missing.\n\n227\n00:12:40.680 --> 00:12:47.021\nBut the geocode API for Google usually\nallows you to search by zip code.\n\n228\n00:12:47.021 --> 00:12:54.690\nAnd I think what it is is if I search by\nzip code, then I have to change this.\n\n229\n00:12:54.690 --> 00:12:57.580\nIn previous episodes, I've made\nthe statement that it is fairly flexible.\n\n230\n00:12:57.580 --> 00:12:59.730\nYeah it is, but\nwe do have to do some things up.\n\n231\n00:12:59.730 --> 00:13:04.400\nI have to double check on that and\nmaybe we'll do that here shortly.\n\n232\n00:13:04.400 --> 00:13:07.980\nSo we can't search by zip code yet,\nbut we can search by location and\n\n233\n00:13:07.980 --> 00:13:09.170\nwe actually get weather.\n\n234\n00:13:09.170 --> 00:13:12.760\nAnd I don't even know where,\nthere we go We can get weather, but\n\n235\n00:13:12.760 --> 00:13:14.530\nwe did have a server error.\n\n236\n00:13:14.530 --> 00:13:16.320\nIt was actually pretty fast.\n\n237\n00:13:16.320 --> 00:13:22.760\nNow if I search for, so\nthis is 73 degrees today.\n\n238\n00:13:22.760 --> 00:13:29.700\nIf I look for San Francisco,\nCalifornia, get the weather,\n\n239\n00:13:29.700 --> 00:13:33.840\nAnd boom the weather does change so I can\nsearch by location I do have some console\n\n240\n00:13:33.840 --> 00:13:38.560\nlogs here that I need to remove but\nnow I've changed that on search.\n\n241\n00:13:38.560 --> 00:13:42.410\nSo at this point I do have the ability\nI've kind of built this out\n\n242\n00:13:44.540 --> 00:13:48.100\nbut I need to go back and\ndouble check a couple of things.\n\n243\n00:13:48.100 --> 00:13:51.910\nOnce I get things working I then work\nbackwards from where I just ended.\n\n244\n00:13:51.910 --> 00:13:53.740\nAnd double check,\ndo I have redundant code?\n\n245\n00:13:53.740 --> 00:13:56.860\nDo I have things that I don't need?\n\n246\n00:13:58.350 --> 00:14:02.080\nSo we'll go back through that process,\n\n247\n00:14:02.080 --> 00:14:06.280\nsee if we need to make any additional\nchanges to actually clean things up.\n\n248\n00:14:06.280 --> 00:14:08.040\nSo this is an intermittent clean.\n\n249\n00:14:09.080 --> 00:14:09.870\nThis looks fine,\n\n250\n00:14:09.870 --> 00:14:13.570\nit's onSearch is actually just using the\nweather service to get new weather data.\n\n251\n00:14:13.570 --> 00:14:17.260\nAnd I look here and\nI have location, lat long.\n\n252\n00:14:18.570 --> 00:14:24.740\nIf I go to the app component, I look\nat the search component that I'm using,\n\n253\n00:14:24.740 --> 00:14:27.050\nand I pass in latitude and longitude.\n\n254\n00:14:27.050 --> 00:14:32.090\nNow, I don't think I need\nthat anymore In all honesty,\n\n255\n00:14:33.180 --> 00:14:36.130\nand the reason being is, well\n\n256\n00:14:37.640 --> 00:14:41.890\nI'm no longer am searching by latitude and\nlongitude from the UI perspective.\n\n257\n00:14:41.890 --> 00:14:46.380\nNow, that's not to say that I may not\nuse it in some other capacity, but\n\n258\n00:14:46.380 --> 00:14:49.410\npeople are not entering latitude and\nlongitude.\n\n259\n00:14:49.410 --> 00:14:51.640\nSo I'm actually gonna remove this.\n\n260\n00:14:51.640 --> 00:14:55.170\nAnd clean up my search component and\nlikewise clean up my app component.\n\n261\n00:14:55.170 --> 00:14:58.430\nSo I'm gonna simplify this\na little bit just so well,\n\n262\n00:14:58.430 --> 00:15:03.140\nyou can see if we simplify it there's\nless to read, less to reason about.\n\n263\n00:15:03.140 --> 00:15:07.239\nAnd this is why I say work backwards and\nclean up well, after yourself, right?\n\n264\n00:15:08.680 --> 00:15:10.950\nSo with that said,\nI'm gonna come to the app controller.\n\n265\n00:15:10.950 --> 00:15:13.090\nI'm gonna remove this.\n\n266\n00:15:13.090 --> 00:15:15.610\nThat makes that controller\na little easier.\n\n267\n00:15:15.610 --> 00:15:21.820\nLikewise, I'm going to come to\nthe search components component\n\n268\n00:15:21.820 --> 00:15:27.880\ndeclaration and remove latitude and\nlongitude, like so.\n\n269\n00:15:29.030 --> 00:15:33.060\nAnd well, I think that should still work.\n\n270\n00:15:33.060 --> 00:15:34.310\nYeah, just refresh.\n\n271\n00:15:34.310 --> 00:15:40.240\nLet's look yep,\nI'm running out of places to took up.\n\n272\n00:15:40.240 --> 00:15:45.410\nPalo Alto, California and\nthen boom it's still working that's\n\n273\n00:15:45.410 --> 00:15:51.338\ngood Except there's one final problem\nthat I noticed after this clean up.\n\n274\n00:15:51.338 --> 00:15:56.316\nI removed these bindings,\nthe location is actually being,\n\n275\n00:15:56.316 --> 00:15:59.437\nit would also be nice if I could store so\n\n276\n00:15:59.437 --> 00:16:02.970\nI could keep track of\nwhat the most recent.\n\n277\n00:16:02.970 --> 00:16:06.038\nLike searches just in case\nsomething goes wrong.\n\n278\n00:16:06.038 --> 00:16:08.936\nLet's say that in this application,\nI may need to pull.\n\n279\n00:16:08.936 --> 00:16:15.680\nAnd that's violating my own principle of,\nif you ain't going to need it.\n\n280\n00:16:15.680 --> 00:16:20.605\nI'm not trying to plan for future things,\nbut I'm trying to think of I\n\n281\n00:16:20.605 --> 00:16:25.534\nhave state that maybe intrinsic to\na component that should actually be\n\n282\n00:16:25.534 --> 00:16:30.480\npushed up into the app component\nif I'm going to keep track of it.\n\n283\n00:16:30.480 --> 00:16:31.650\nSo I search by location.\n\n284\n00:16:31.650 --> 00:16:35.050\nThe location should probably be\ntracked in the app component.\n\n285\n00:16:35.050 --> 00:16:39.111\nAnd since I'm switching out latitude and\nlongitude, I'm actually going to do that.\n\n286\n00:16:39.111 --> 00:16:44.165\nAnd instead of keeping this location here,\nwhat I would really like to have is\n\n287\n00:16:44.165 --> 00:16:49.315\na binding for location and it is a one-way\nbinding into the search component.\n\n288\n00:16:49.315 --> 00:16:54.953\nAnd then it comes in through,\nwell the at components UI,\n\n289\n00:16:54.953 --> 00:17:01.179\nand I'm just gonna say\nlocation=$CTRL.location like so,\n\n290\n00:17:01.179 --> 00:17:04.819\nand it was gonna break this up just for\n\n291\n00:17:04.819 --> 00:17:09.560\nthe ability to look at\nit all in one screen.\n\n292\n00:17:09.560 --> 00:17:12.910\nSo if I look at this, yeah I traded out\nlatitude and longitude but I replaced it\n\n293\n00:17:12.910 --> 00:17:17.100\nwith location and I think this make\nsense in the context of the application.\n\n294\n00:17:17.100 --> 00:17:22.430\nBecause if this was already there, let's\nsay that you wanna keep track of this and\n\n295\n00:17:22.430 --> 00:17:23.970\nall that state is in the app component.\n\n296\n00:17:23.970 --> 00:17:27.560\nYou need some way to push\nthat down into the component.\n\n297\n00:17:27.560 --> 00:17:30.790\nSo now I'm gonna pass that as\nan attribute, as a binding so\n\n298\n00:17:30.790 --> 00:17:33.180\nto speak to the search component.\n\n299\n00:17:33.180 --> 00:17:38.270\nBy coming to the app controller,\nthere's the location, good,\n\n300\n00:17:38.270 --> 00:17:43.571\nand Palo Alto California,\n\n301\n00:17:43.571 --> 00:17:49.180\nwhat we should see is now my heart\ncode kinda propagates out through.\n\n302\n00:17:49.180 --> 00:17:51.960\nAnd that's a one way in bubble up events.\n\n303\n00:17:51.960 --> 00:17:55.798\nWe want to keep that as\nour way of thinking.\n\n304\n00:17:55.798 --> 00:17:58.444\nNow I actually have a typo in here.\n\n305\n00:17:58.444 --> 00:18:02.911\nAnd some of you are probably screaming\nat the feed or the screen or\n\n306\n00:18:02.911 --> 00:18:05.900\nthe recording, I forgot my comma there.\n\n307\n00:18:05.900 --> 00:18:07.620\nIt'll wreck your day.\n\n308\n00:18:07.620 --> 00:18:09.480\nSo go ahead and put that comma back.\n\n309\n00:18:09.480 --> 00:18:12.040\nLet's see if it refreshed, and it does.\n\n310\n00:18:12.040 --> 00:18:17.516\nAnd notice that Palo Alto, California,\nis in fact propagated down through\n\n311\n00:18:17.516 --> 00:18:23.179\nthe application that replace latitude and\nlongitude with location instead.\n\n312\n00:18:23.179 --> 00:18:27.361\nAnd as long as I can hit search,\nwell looks like I'm good to go.\n\n313\n00:18:27.361 --> 00:18:32.603\nAnd for testing purposes, I may leave\nthat I may not keep that all the time,.\n\n314\n00:18:32.603 --> 00:18:36.911\nThere is one further problem in my app\ncomponent though when I get past a new\n\n315\n00:18:36.911 --> 00:18:41.520\nlocation, I should probably get ahead and\nupdate that location internally.\n\n316\n00:18:43.600 --> 00:18:47.370\nThis reassignment that just\nkeeps my internal at state.\n\n317\n00:18:47.370 --> 00:18:50.692\nNow that is something you\nhad to count beans on.\n\n318\n00:18:50.692 --> 00:18:52.650\nThere is no way around it.\n\n319\n00:18:52.650 --> 00:18:56.857\n&gt;&gt; Just one final question though,\nwhy are we keeping that get method, right?\n\n320\n00:18:56.857 --> 00:18:59.640\nAnd the weather service\nthese latitude longitude?\n\n321\n00:19:00.900 --> 00:19:04.390\n&gt;&gt; Well, I didn't think you're\ngoing to catch on to that Zach but\n\n322\n00:19:04.390 --> 00:19:10.200\nyou've been listening, watching trying\nto see me slip up I'm just looking for\n\n323\n00:19:10.200 --> 00:19:13.090\na way to swoop in and no no.\n\n324\n00:19:13.090 --> 00:19:16.202\nI'm joking but\nthat is actually a great observation.\n\n325\n00:19:16.202 --> 00:19:18.880\nAnd let's go see what Zach's\nactually asking about.\n\n326\n00:19:20.050 --> 00:19:23.558\nSo I have these two methods,\ngive our location and get.\n\n327\n00:19:23.558 --> 00:19:30.770\nI've eliminated all references to\nlatitude and longitude in my application.\n\n328\n00:19:30.770 --> 00:19:31.948\nWhy would I keep this?\n\n329\n00:19:34.249 --> 00:19:37.489\nWell, if this was my done,\nright, if I was done, and\n\n330\n00:19:37.489 --> 00:19:42.645\nI was building this to customer specs,\nI would actually take that out, it's gone.\n\n331\n00:19:42.645 --> 00:19:45.222\nAs matter of fact, if I took that out,\n\n332\n00:19:45.222 --> 00:19:49.907\nI would likewise go to the proxy and\ngo ahead and take that out as well.\n\n333\n00:19:49.907 --> 00:19:54.806\nTake out that endpoint because you're\ngonna accumulate technical debt overtime\n\n334\n00:19:54.806 --> 00:19:57.299\nand at some point you gotta pay the piper.\n\n335\n00:19:57.299 --> 00:20:02.105\nSo, it's easier to pay small\npayments upfront instead of,\n\n336\n00:20:02.105 --> 00:20:04.340\nI got a lot of work to do.\n\n337\n00:20:04.340 --> 00:20:08.414\nHowever, you caught me and\nI'm gonna go ahead and\n\n338\n00:20:08.414 --> 00:20:12.302\ngive you a little glimmer\nof what's coming up.\n\n339\n00:20:12.302 --> 00:20:14.590\nWe have the ability to search by location.\n\n340\n00:20:14.590 --> 00:20:19.771\nIf you've ever been to any\nweather application, any of them.\n\n341\n00:20:19.771 --> 00:20:22.699\nI'm not gonna necessarily name them\nby name because I don't wanna leave\n\n342\n00:20:22.699 --> 00:20:23.280\nanybody out.\n\n343\n00:20:24.680 --> 00:20:28.390\nThey typically ask you, are we allowed to\nlook up your location using geolocation?\n\n344\n00:20:28.390 --> 00:20:29.820\n&gt;&gt; Right, they do.\n\n345\n00:20:29.820 --> 00:20:32.440\n&gt;&gt; Geolocation gives you the latitude and\nlongitude.\n\n346\n00:20:32.440 --> 00:20:35.040\nIf I can get latitude and\nlongitude, I can then,\n\n347\n00:20:35.040 --> 00:20:38.970\nping that, if you allow me to\nuse your location services.\n\n348\n00:20:38.970 --> 00:20:42.543\nAnd when I ping that,\nI can look up your weather by latitude and\n\n349\n00:20:42.543 --> 00:20:46.410\nlongitude, through the browser API and\nyou never have to search.\n\n350\n00:20:46.410 --> 00:20:49.710\nAnd then that's upfront and then give\nyou the ability to search later on.\n\n351\n00:20:49.710 --> 00:20:53.190\nSo, we're gonna leave that because\nits useful in the context of\n\n352\n00:20:53.190 --> 00:20:55.220\nusing those geolocation services.\n\n353\n00:20:55.220 --> 00:20:58.041\n&gt;&gt; Wow that's fantastic, so\nthat means that this episode is about it?\n\n354\n00:20:58.041 --> 00:20:59.510\nUpdating the search component.\n\n355\n00:20:59.510 --> 00:21:04.470\n&gt;&gt; This is it, we have updated the search\ncomponent and it actually uses locations\n\n356\n00:21:04.470 --> 00:21:08.920\nstill latitude and longitude, we've done\nsome refactoring, some changing around,\n\n357\n00:21:08.920 --> 00:21:12.730\nand kind of explored the thought process\nof why we would do such a thing.\n\n358\n00:21:12.730 --> 00:21:13.480\n&gt;&gt; Fantastic.\n\n359\n00:21:13.480 --> 00:21:15.981\nWell, weather app with AngularJS and\nexpress.\n\n360\n00:21:15.981 --> 00:21:18.051\nThere's a lot of video\ncontent in this series,\n\n361\n00:21:18.051 --> 00:21:21.170\nmake sure you watch every single video,\nyou'll be glad you did.\n\n362\n00:21:21.170 --> 00:21:23.130\nWonderful job, Justin, as usual.\n\n363\n00:21:23.130 --> 00:21:25.241\nAnd thank you for watching DevProTV.\n\n364\n00:21:25.241 --> 00:21:28.740\nRemember, a good dev pro is\nalways learning, I'm Zach Memos.\n\n365\n00:21:28.740 --> 00:21:29.610\n&gt;&gt; And I'm Justin Dennison.\n\n366\n00:21:29.610 --> 00:21:31.056\n&gt;&gt; We will see you soon.\n\n367\n00:21:31.056 --> 00:21:35.318\n[MUSIC]\n\n",
          "vimeoId": "227255203"
        },
        {
          "description": "Justin and Zach discuss using the latitude & longitude weather method with the geolocation services of the browser, show 'CANIUSE.COM' & how this site may help us, building the geolocation service, and injecting the service into the app controller.",
          "length": "1761",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-11-1-1-geolocation_service-072717-PGM.00_30_37_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-11-1-1-geolocation_service-072717-PGM.00_30_37_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-11-1-1-geolocation_service-072717-PGM.00_30_37_18.Still001-sm.jpg",
          "title": "Geolocation Service",
          "transcript": "WEBVTT\n\n1\n00:00:00.196 --> 00:00:10.196\n[MUSIC]\n\n2\n00:00:12.731 --> 00:00:15.948\nHello again, thank you for\nwatching us on DEVPRO.TV,\n\n3\n00:00:15.948 --> 00:00:18.300\nhelping you learn wherever you go.\n\n4\n00:00:18.300 --> 00:00:23.200\nI'm you host Zach Memos, as we continue on\nWeather App with Angular JS and Express.\n\n5\n00:00:23.200 --> 00:00:27.410\nThis episode, geolocation service,\nhm, what's that all about?\n\n6\n00:00:27.410 --> 00:00:29.880\nWell, Justin Dennison is the man\nwho's gonna tell us all about it.\n\n7\n00:00:29.880 --> 00:00:30.940\nJustin, hello.\n\n8\n00:00:30.940 --> 00:00:32.330\n&gt;&gt; Hello Zack, and how are you today?\n\n9\n00:00:32.330 --> 00:00:35.161\n&gt;&gt; I am excited, I can't believe we're\ndoing another one of these episodes.\n\n10\n00:00:35.161 --> 00:00:36.255\n[LAUGH]\n&gt;&gt; I know, I know,\n\n11\n00:00:36.255 --> 00:00:39.190\nit's like the Angular never stops, right?\n\n12\n00:00:39.190 --> 00:00:40.905\n&gt;&gt; But it's so exciting,\nit's a lot of fun, too.\n\n13\n00:00:40.905 --> 00:00:45.210\nAnd in the last episode, we were\ntalking about latitude and longitude.\n\n14\n00:00:45.210 --> 00:00:49.160\nAnd so how are we gonna wrap that\nall up and make that all work?\n\n15\n00:00:49.160 --> 00:00:52.730\n&gt;&gt; So we've done a few things as far\nas locations and getting the weather,\n\n16\n00:00:52.730 --> 00:00:55.750\nand it just seemed to me like man,\nI figured this app would be done.\n\n17\n00:00:55.750 --> 00:00:59.020\nBut I wanted to give you kind\nof a more thorough treatment\n\n18\n00:00:59.020 --> 00:01:01.810\nof how I would go about adding features,\nright?\n\n19\n00:01:01.810 --> 00:01:03.680\nThis is more of a development process,\n\n20\n00:01:03.680 --> 00:01:07.296\nespecially if you're learning,\nthat you would go through, okay?\n\n21\n00:01:07.296 --> 00:01:10.500\nSo we have geolocation, or excuse me,\n\n22\n00:01:10.500 --> 00:01:13.480\nnot geolocation, we have Google search\nwhere we can actually search for\n\n23\n00:01:13.480 --> 00:01:16.510\nlocations, get the longitude and\nlatitude and get the weather back.\n\n24\n00:01:16.510 --> 00:01:21.150\nWe also have the ability to get the\nweather just by latitude and longitude, so\n\n25\n00:01:21.150 --> 00:01:24.310\nwe have some niceties there.\n\n26\n00:01:24.310 --> 00:01:27.890\nBut along that way, Zach asked me, he was\nlike, why are you leaving that latitude\n\n27\n00:01:27.890 --> 00:01:32.330\nand and longitude portion in there if\nwe're just gonna search by location now?\n\n28\n00:01:32.330 --> 00:01:35.400\nWell, this is the answer\nto that very thing.\n\n29\n00:01:35.400 --> 00:01:39.090\nWell, we're actually gonna use\nthe geolocation services that\n\n30\n00:01:39.090 --> 00:01:39.939\nare part of a browser.\n\n31\n00:01:41.190 --> 00:01:43.850\nNow, you may have never noticed this,\nbut if you've actually ever went to\n\n32\n00:01:43.850 --> 00:01:47.010\na weather site or maybe even done a Google\nsearch or something of that nature,\n\n33\n00:01:47.010 --> 00:01:50.850\na lot times there'll be this pop-up box,\nunless you permanently disabled this.\n\n34\n00:01:50.850 --> 00:01:54.809\nAnd it'll say, such-and-such wants to\nknow your location, allow or block?\n\n35\n00:01:54.809 --> 00:01:55.360\n&gt;&gt; Very familiar.\n\n36\n00:01:55.360 --> 00:01:59.080\n&gt;&gt; And if you allow,\nit can actually get a latitude and\n\n37\n00:01:59.080 --> 00:02:04.330\nlongitude position, and do a variety\nof lookups about your location.\n\n38\n00:02:05.350 --> 00:02:07.610\nAnd that's through, now I'm not\ngonna go into the technical details.\n\n39\n00:02:07.610 --> 00:02:10.880\nYou're like well, I thought there's no\nglobal positioning system on my computer,\n\n40\n00:02:10.880 --> 00:02:12.540\nwell there might be.\n\n41\n00:02:12.540 --> 00:02:14.900\nBut even if there's not,\nwith WiFi and IP and\n\n42\n00:02:14.900 --> 00:02:18.960\nInternet connectivity,\nwe can get pretty close.\n\n43\n00:02:18.960 --> 00:02:22.460\nAnd actually it's kinda scary\nhow close it's going to to go.\n\n44\n00:02:22.460 --> 00:02:25.510\nBecause we can get latitude and longitude\nfrom these geolocation services that\n\n45\n00:02:25.510 --> 00:02:28.860\nare built into this browser,\nwell if we can get latitude and longitude,\n\n46\n00:02:28.860 --> 00:02:32.080\nwe can turn right around and\nget the weather by latitude and longitude.\n\n47\n00:02:32.080 --> 00:02:37.371\nAnd get you're weather by, well,\nwhere you're located, right?\n\n48\n00:02:37.371 --> 00:02:39.753\nNow, you're like well,\nthat's what we were doing before.\n\n49\n00:02:39.753 --> 00:02:41.660\nYeah, but it's on page load.\n\n50\n00:02:41.660 --> 00:02:44.100\nIt's gonna ask you,\nyou're gonna say allow.\n\n51\n00:02:44.100 --> 00:02:47.280\nAnd if it allows, you'll go ahead and\nhave that populated.\n\n52\n00:02:47.280 --> 00:02:50.070\nNow if you disallow,\nthings aren't gonna work.\n\n53\n00:02:51.190 --> 00:02:55.010\nSo that's our ultimate goal, that's\nthe service that we're gonna be building.\n\n54\n00:02:55.010 --> 00:02:57.450\n&gt;&gt; So we're gonna be doing\nsomething that's automatic?\n\n55\n00:02:57.450 --> 00:02:59.662\n&gt;&gt; It is very much so automatic.\n\n56\n00:02:59.662 --> 00:03:03.825\nAnd you navigate to the page,\nyou get that little pop up box, and\n\n57\n00:03:03.825 --> 00:03:05.921\nIf you allow, it just happens.\n\n58\n00:03:05.921 --> 00:03:09.130\n&gt;&gt; And this is gonna be something that's\ngonna be available in all the browsers?\n\n59\n00:03:09.130 --> 00:03:12.090\n&gt;&gt; So browser issues, well,\nthat could be a valid concern,\n\n60\n00:03:12.090 --> 00:03:15.320\nbecause unless you know about these,\nor you've interacted with these.\n\n61\n00:03:15.320 --> 00:03:22.270\nOr unless you've allowed this, you may not\nknow about browser compatibility, right?\n\n62\n00:03:22.270 --> 00:03:26.020\nBut luckily there's a handy\nsite that allows us to, well,\n\n63\n00:03:26.020 --> 00:03:28.350\ndo a quick lookup based\non version numbers.\n\n64\n00:03:28.350 --> 00:03:32.090\nSo if we take a look at my screen here,\nI usually have Atom open,\n\n65\n00:03:32.090 --> 00:03:36.842\nbut there's a site called caniuse.com,\n\n66\n00:03:36.842 --> 00:03:41.480\ncaniuse.com, and\nit offers you the ability to search.\n\n67\n00:03:41.480 --> 00:03:44.967\nNow you can search for\na variety of web technologies, CSS,\n\n68\n00:03:44.967 --> 00:03:49.031\ncertain HTML attributes, tags,\ncertain JavaScript attributes.\n\n69\n00:03:49.031 --> 00:03:53.240\nCertain browser APIs, because even\nthough some people think JavaScript and\n\n70\n00:03:53.240 --> 00:03:55.850\nthe browser environment are synonymous.\n\n71\n00:03:55.850 --> 00:04:00.581\nActually the browser has some built in\nthings that had a JavaScript API, you can\n\n72\n00:04:00.581 --> 00:04:05.819\ninteract with them in JavaScript, that\naren't necessarily JavaScript-specific.\n\n73\n00:04:05.819 --> 00:04:11.550\nThen let's do a quick\nlook up of geolocation.\n\n74\n00:04:11.550 --> 00:04:17.820\nGeo, you've gotta spell it correctly,\nand it'll propagate as you see here.\n\n75\n00:04:17.820 --> 00:04:22.150\nNow, this is the geolocational services,\nand we could really drill down.\n\n76\n00:04:22.150 --> 00:04:26.160\nBut what I like about this website is,\nit'll give you based on version number.\n\n77\n00:04:26.160 --> 00:04:29.460\nAnd you could go look this up\nin the Mozilla Developer Network\n\n78\n00:04:29.460 --> 00:04:32.320\ndocumentation most of the time.\n\n79\n00:04:32.320 --> 00:04:36.676\nBut it also gives you, well, what are some\nthings that you need to know about,\n\n80\n00:04:36.676 --> 00:04:37.544\nknown issues?\n\n81\n00:04:37.544 --> 00:04:40.455\nIt's searchable, and\nthis is all this website does,\n\n82\n00:04:40.455 --> 00:04:42.990\ncan I use X technology in the browser?\n\n83\n00:04:42.990 --> 00:04:43.850\nSo if we look, and\n\n84\n00:04:43.850 --> 00:04:49.610\nI'm gonna zoom in a little bit, it's in\nInternet Explorer 11, we can use it there.\n\n85\n00:04:49.610 --> 00:04:53.130\nEdge, all the recent version of Edge,\nwhich is like new Internet Explorer,\n\n86\n00:04:53.130 --> 00:04:55.020\nexcept I like it a little better.\n\n87\n00:04:55.020 --> 00:05:00.630\nFirefox, it's been around for\na while, Chrome, it's been around for\n\n88\n00:05:00.630 --> 00:05:07.040\na while, but notice,\nonly works on secure HTTPS servers.\n\n89\n00:05:07.040 --> 00:05:11.030\nSo that could be an issue, but so\nnotice any time you see this little 1,\n\n90\n00:05:11.030 --> 00:05:12.510\nthere's a footnote.\n\n91\n00:05:12.510 --> 00:05:17.395\nAnd part of that is to keep people\nfrom snooping internet traffic and\n\n92\n00:05:17.395 --> 00:05:19.542\nfinding out things and such.\n\n93\n00:05:19.542 --> 00:05:23.038\nOpera, iOS Safari, Opera Mini, all, but\n\n94\n00:05:23.038 --> 00:05:28.840\nit's actually not supported in any\nof them, so if you see red, mm-mm.\n\n95\n00:05:28.840 --> 00:05:32.060\nAndroid browser and Chrome for\nAndroid, now if I were to click\n\n96\n00:05:33.610 --> 00:05:37.832\nup here on Show All, it would\nactually give me the full listing.\n\n97\n00:05:37.832 --> 00:05:41.830\nAnd geolocation services have been\naround in Chrome since version 5.\n\n98\n00:05:41.830 --> 00:05:45.121\nI think I'm running version 54 or\nsomething like that.\n\n99\n00:05:45.121 --> 00:05:49.162\n&gt;&gt; [LAUGH]\n&gt;&gt; Firefox, it's been around since 3.5.\n\n100\n00:05:49.162 --> 00:05:54.526\nAnd if I scroll down, in Opera it's\nbeen around since version 11.5.\n\n101\n00:05:54.526 --> 00:05:59.550\nBut notice there was an issue in 15,\nso you have be aware of those.\n\n102\n00:05:59.550 --> 00:06:03.520\nThe final thing that I do wanna point\nout is, if I come to Chrome version 5,\n\n103\n00:06:03.520 --> 00:06:07.180\nit works but\nI can't actually move over to it.\n\n104\n00:06:07.180 --> 00:06:12.490\nYou'll notice over to the right of my\ncursor, there's this usage statistic,\n\n105\n00:06:12.490 --> 00:06:14.760\nglobal usage, 0%.\n\n106\n00:06:14.760 --> 00:06:19.390\nNow let's have some amount of rounding,\nit may still be out there somewhere.\n\n107\n00:06:19.390 --> 00:06:24.090\nBut it will tell you the relative\namount of computers that has access to,\n\n108\n00:06:24.090 --> 00:06:27.740\nwell, knowing that,\nthat still use this version.\n\n109\n00:06:27.740 --> 00:06:32.700\nSo if I come up and\nI look at Chrome 63, nope, 62,\n\n110\n00:06:32.700 --> 00:06:36.653\nnope, 61, 0.04%, 0.07.\n\n111\n00:06:36.653 --> 00:06:41.589\nAnd now at 58,\n18% of the computers that use Chrome,\n\n112\n00:06:41.589 --> 00:06:46.050\nI think that's how this\nstatistic is actually run.\n\n113\n00:06:46.050 --> 00:06:49.278\nI'd like to be able to click it and\ngive a little more information.\n\n114\n00:06:49.278 --> 00:06:53.240\nBut ultimately our take home is,\nif you look at those high numbers and\n\n115\n00:06:53.240 --> 00:06:55.660\nyou can say well,\nof all the browsers in the world,\n\n116\n00:06:55.660 --> 00:07:00.170\nI know this will work on 85% of them,\nthen you're probably okay with using this.\n\n117\n00:07:00.170 --> 00:07:04.490\nBut we still should plan,\njust in case things are, well, broken.\n\n118\n00:07:04.490 --> 00:07:04.990\nFor instance,\n\n119\n00:07:04.990 --> 00:07:10.200\nthis has to be on HTTPS servers, what\nif the connection is no longer secure?\n\n120\n00:07:10.200 --> 00:07:13.320\nSomething goes wrong, the certificate\nexpires, whatever it may be.\n\n121\n00:07:13.320 --> 00:07:16.720\nWe need to have a fallback and,\nwell, we have to plan for\n\n122\n00:07:16.720 --> 00:07:20.120\nthat, even though most of\nthe time we're gonna be okay.\n\n123\n00:07:20.120 --> 00:07:23.910\n&gt;&gt; That's amazing, well, let's get started\nwith this, let's build it, let's do it.\n\n124\n00:07:23.910 --> 00:07:25.990\n&gt;&gt; All right, well, let's go ahead and\nstart building that.\n\n125\n00:07:25.990 --> 00:07:29.070\nAnd let's review ultimately\nwhat we're gonna do.\n\n126\n00:07:29.070 --> 00:07:31.910\nFirst we're gonna build\nthe service in isolation.\n\n127\n00:07:31.910 --> 00:07:36.610\nBecause we have to do some interaction\nwith the JavaScript APIs, the browser,\n\n128\n00:07:36.610 --> 00:07:43.280\nbuild the service, test the service,\nsee how things are going, okay?\n\n129\n00:07:43.280 --> 00:07:47.740\nSo if we go ahead and\nhop back over here and I scroll out.\n\n130\n00:07:47.740 --> 00:07:50.340\nIf I look over here on the left,\nwe have our components,\n\n131\n00:07:50.340 --> 00:07:53.360\nand ultimately we'll probably be\nmessing around the app component.\n\n132\n00:07:53.360 --> 00:07:55.353\nWe have services and\nwe have weather service.\n\n133\n00:07:55.353 --> 00:08:00.155\nNow, one could argue, one could make the\nargument that since we're using this to\n\n134\n00:08:00.155 --> 00:08:02.393\nturn around and look up weather, Eh.\n\n135\n00:08:02.393 --> 00:08:03.452\n&gt;&gt; Eh?\n\n136\n00:08:03.452 --> 00:08:05.211\n&gt;&gt; We can blame it on the weather service.\n\n137\n00:08:05.211 --> 00:08:09.530\nHowever, maybe I wanna use geolocation for\nother things, right?\n\n138\n00:08:10.800 --> 00:08:14.040\nSo here we go to services.\n\n139\n00:08:14.040 --> 00:08:21.175\nI'm gonna create a new service called,\nwell, geolocation.service.js.\n\n140\n00:08:22.937 --> 00:08:24.772\nThat's it.\n\n141\n00:08:24.772 --> 00:08:25.831\nNow, how am I gonna write this?\n\n142\n00:08:25.831 --> 00:08:27.885\nWell, this is gonna be\na class-based service.\n\n143\n00:08:27.885 --> 00:08:33.981\nClass GeolocationService just like so\n\n144\n00:08:33.981 --> 00:08:41.380\nand module.exports = GeolocationService.\n\n145\n00:08:41.380 --> 00:08:44.565\nSo I have this kind of ready to go and\nwell,\n\n146\n00:08:44.565 --> 00:08:47.805\nyou shouldn't forget our\ninject statement here.\n\n147\n00:08:47.805 --> 00:08:53.458\nGeolocationService.$inject and\nwhat are we going to inject?\n\n148\n00:08:53.458 --> 00:08:59.040\nWell, this GeolocationService,\nthe actual pieces, right?\n\n149\n00:09:00.570 --> 00:09:02.450\nAre part of the window object.\n\n150\n00:09:02.450 --> 00:09:05.640\nWhich are then part of the navigator\nobject that's part of the window.\n\n151\n00:09:05.640 --> 00:09:11.171\nYeah, I could grab that globally but\nthere is an Angular wrapped window object.\n\n152\n00:09:12.380 --> 00:09:17.241\nSo knowing that we should\nbe able to use the angular\n\n153\n00:09:17.241 --> 00:09:22.520\nwindow service,\ngrab the navigator portion.\n\n154\n00:09:22.520 --> 00:09:25.310\nAnd then use the geolocation sub server.\n\n155\n00:09:25.310 --> 00:09:26.830\nIt's a weird hierarchy.\n\n156\n00:09:26.830 --> 00:09:29.082\nYou'll just have to trust me on this one.\n\n157\n00:09:29.082 --> 00:09:36.220\nSo $window and that means I have\nto write a constructor here.\n\n158\n00:09:36.220 --> 00:09:40.014\nConstructor, $window.\n\n159\n00:09:40.014 --> 00:09:46.318\nAnd so this.$window = $window.\n\n160\n00:09:46.318 --> 00:09:48.340\nAll right, so\nnow this is gonna be part of the service.\n\n161\n00:09:49.370 --> 00:09:53.340\nNow, I'm gonna take a quick detour\nto the browser just to look at what\n\n162\n00:09:53.340 --> 00:09:58.530\nwe're actually gonna be using before we\nwrite any more of, well, our Angular code.\n\n163\n00:09:58.530 --> 00:09:59.630\nSo if I come over here and\n\n164\n00:09:59.630 --> 00:10:04.540\nI open the dev tools, and\nnotice I have some weird errors here.\n\n165\n00:10:05.560 --> 00:10:07.710\nI'm just gonna move this over.\n\n166\n00:10:07.710 --> 00:10:09.670\nIf I look at the Window portion.\n\n167\n00:10:10.740 --> 00:10:16.150\nThis is essentially what we're going\nto have available to us in Angular,\n\n168\n00:10:16.150 --> 00:10:17.980\nusing that $WindowsService.\n\n169\n00:10:17.980 --> 00:10:22.260\nBut if I go down and\nI look at geolocation.\n\n170\n00:10:22.260 --> 00:10:25.130\nOr excuse me not geolocation, navigator.\n\n171\n00:10:25.130 --> 00:10:29.590\nThere's the navigator and inside of\nnavigator I have the ability to grab\n\n172\n00:10:29.590 --> 00:10:33.740\na variety of things like bluetooth and\ncredentials container.\n\n173\n00:10:33.740 --> 00:10:36.350\nBut we have this geolocation object and\n\n174\n00:10:36.350 --> 00:10:39.930\nif I look it looks like there's\nnot a lot to it, right?\n\n175\n00:10:39.930 --> 00:10:43.560\nIt says geolocation, that's fine,\nbut if I hit this dunderproto,\n\n176\n00:10:45.390 --> 00:10:48.830\nI have clearWatch,\ngetCurrentPosition and watchPosition.\n\n177\n00:10:48.830 --> 00:10:52.080\nNow this watchPosition and clearWatch,\nthose are actually to seeing\n\n178\n00:10:52.080 --> 00:10:55.245\nupdates in your current position, so\nit'll kind of run this query function.\n\n179\n00:10:55.245 --> 00:10:55.860\n&gt;&gt; Mm-hm.\n\n180\n00:10:55.860 --> 00:11:01.070\n&gt;&gt; But this getCurrentPosition,\nis a function that will query, and\n\n181\n00:11:01.070 --> 00:11:05.870\nhopefully get your current position and\nreturn it to the function in order to run.\n\n182\n00:11:05.870 --> 00:11:10.050\nSo it's this weird callback, it's like\nsuper nested callback type things, okay?\n\n183\n00:11:10.050 --> 00:11:11.500\n&gt;&gt; A lot to be said for querying.\n\n184\n00:11:11.500 --> 00:11:13.750\n&gt;&gt; Yeah, a lot to be said for querying.\n\n185\n00:11:13.750 --> 00:11:15.812\nThat's actually a kind\nof a hard word to say.\n\n186\n00:11:15.812 --> 00:11:17.151\n&gt;&gt; It is, it's difficult.\n\n187\n00:11:17.151 --> 00:11:20.440\n&gt;&gt; So, if I clear this.\n\n188\n00:11:20.440 --> 00:11:30.120\nWhat I mean is if I go\nwindow.navigator.geolocation.\n\n189\n00:11:30.120 --> 00:11:35.110\nI now have geolocation object which\nhas the get current position.\n\n190\n00:11:35.110 --> 00:11:39.460\nSo if I say get current position,\nthat is a function and\n\n191\n00:11:39.460 --> 00:11:40.710\nhere is where it get's a little iffy.\n\n192\n00:11:42.240 --> 00:11:46.310\n&gt;&gt; That function takes a function\nthat is fed the position.\n\n193\n00:11:46.310 --> 00:11:49.320\nSo it's a function that takes\nan immediate call back function and\n\n194\n00:11:49.320 --> 00:11:51.650\nit passes in the position.\n\n195\n00:11:51.650 --> 00:11:56.310\nNow I'm just gonna console.log\nthe position like so.\n\n196\n00:11:56.310 --> 00:11:58.290\nAnd so if I run!\n\n197\n00:11:58.290 --> 00:12:03.430\nNo longer work on insecure, notice we\njust had that exact same thing, right?\n\n198\n00:12:03.430 --> 00:12:08.210\nIt doesn't work on unsecure locations,\nso I'm gonna navigate to,\n\n199\n00:12:08.210 --> 00:12:11.300\nI'll just go to Google because it's https.\n\n200\n00:12:11.300 --> 00:12:14.829\nAnd I'm gonna run that exact same thing,\nand it's gonna take a little bit.\n\n201\n00:12:15.930 --> 00:12:20.220\nNow, it's going out looking, and\nthere is a couple of hiccups here.\n\n202\n00:12:21.910 --> 00:12:27.950\nIf I come up here to the drop-down,\nnotice this little drop-down.\n\n203\n00:12:27.950 --> 00:12:29.200\nNow this is in Chrome.\n\n204\n00:12:29.200 --> 00:12:33.450\nI'm not saying this is where it is on\neverything, but a lot of times it is.\n\n205\n00:12:33.450 --> 00:12:36.590\nThere's these secure connections\nin some of the settings.\n\n206\n00:12:36.590 --> 00:12:38.130\nI actually have location blocked,\n\n207\n00:12:38.130 --> 00:12:43.530\nwhich means Google should not be able to\nquery my location using the browser API.\n\n208\n00:12:43.530 --> 00:12:48.050\nBut for this I'm gonna go ahead and\nalways allow on this site.\n\n209\n00:12:48.050 --> 00:12:50.128\nSo I'm gonna turn it back on.\n\n210\n00:12:50.128 --> 00:12:53.670\nAnd it says I need to reload, so\nI'm gonna reload, that's fine.\n\n211\n00:12:53.670 --> 00:12:57.040\nNow if they have it turned up, people\nwill never be able to use this feature,\n\n212\n00:12:57.040 --> 00:12:57.790\nif they come to your site.\n\n213\n00:12:58.820 --> 00:13:02.700\nBut if they have this option called ask.\n\n214\n00:13:02.700 --> 00:13:04.880\nSee where it says ask?\n\n215\n00:13:05.940 --> 00:13:11.070\nThen, well, you actually see\nthis little pop-up box come up.\n\n216\n00:13:11.070 --> 00:13:16.040\nNow, hopefully this comes back, and\nthere we go, we have a position.\n\n217\n00:13:16.040 --> 00:13:19.960\nAnd the position is an object and it\ntells you, when did you get that, right?\n\n218\n00:13:19.960 --> 00:13:22.970\nSo you can actually check to see\nhow old that position is cuz\n\n219\n00:13:22.970 --> 00:13:25.060\npositions might change especially\nif you're on a mobile device.\n\n220\n00:13:25.060 --> 00:13:28.660\nAnd then we get coords which\nis a coordinance object but\n\n221\n00:13:28.660 --> 00:13:30.560\nthat has a latitude and longitude in it.\n\n222\n00:13:30.560 --> 00:13:34.130\nNow, if you're on a mobile device,\nsometimes the speed and heading and\n\n223\n00:13:34.130 --> 00:13:38.220\naltitude Things will also be populated\nbecause it has access to some other\n\n224\n00:13:38.220 --> 00:13:40.320\nsensors and things of that nature.\n\n225\n00:13:40.320 --> 00:13:42.580\nUltimately all we care about\nare the latitude and longitude.\n\n226\n00:13:44.290 --> 00:13:50.860\nSo if I do that I'm gonna head up\nagain and I'm gonna say coords., nope,\n\n227\n00:13:50.860 --> 00:13:55.570\njust coords excuse me, so I'm gonna print\nthe coords out of the position object.\n\n228\n00:13:55.570 --> 00:13:56.960\nNow notice it does take a little bit.\n\n229\n00:13:58.720 --> 00:14:01.530\nAnd now I have direct access\nto latitude and longitude.\n\n230\n00:14:01.530 --> 00:14:03.250\nNow that was a lot, right?\n\n231\n00:14:03.250 --> 00:14:06.510\nSo, the ultimate question is,\nwhy am I building a service?\n\n232\n00:14:06.510 --> 00:14:12.230\nI'm building a service because this is\na lot of logic just to get data, right?\n\n233\n00:14:12.230 --> 00:14:15.929\nWell I want to abstract\nthat away into services so\n\n234\n00:14:15.929 --> 00:14:19.008\nI can call geolocation.getposition.\n\n235\n00:14:19.008 --> 00:14:21.770\nAnd now if I can getpostition, right?\n\n236\n00:14:21.770 --> 00:14:26.980\nI'm writing my own API at this point,\nI can get the exact same response or\n\n237\n00:14:26.980 --> 00:14:30.860\nhandle the response in an according way\ninstead of saying, on the Window object\n\n238\n00:14:30.860 --> 00:14:35.750\nget the navigator, i the navigator exists,\nsee if the geolocation exists.\n\n239\n00:14:35.750 --> 00:14:37.750\nI don't wanna do that every\ntime I wanna use this.\n\n240\n00:14:37.750 --> 00:14:41.720\nI want to abstract that away to a service,\nto where the service does those checks for\n\n241\n00:14:41.720 --> 00:14:42.780\nus, right?\n\n242\n00:14:42.780 --> 00:14:43.528\nAnd then comes back.\n\n243\n00:14:43.528 --> 00:14:50.730\nSo, if we try to abstract that away,\nthat's where our service comes in.\n\n244\n00:14:50.730 --> 00:14:55.150\nSo, here's our constructor and\nwe have the $window and\n\n245\n00:14:55.150 --> 00:14:59.420\nnow I'm gonna write a method\non this called getPosition.\n\n246\n00:15:01.000 --> 00:15:05.080\nNow this position, it's just gonna\ngrab the position except notice,\n\n247\n00:15:05.080 --> 00:15:06.520\nI'm not sending a callback function.\n\n248\n00:15:06.520 --> 00:15:09.880\nInstead, I'm going to use a promise based\n\n249\n00:15:09.880 --> 00:15:11.988\napproach because we used\n$http with promises.\n\n250\n00:15:11.988 --> 00:15:14.965\nDot then.then, all right.\n\n251\n00:15:14.965 --> 00:15:18.790\nGet the position then get the weather\nthen set the weather data when you\n\n252\n00:15:18.790 --> 00:15:19.700\nget that information back.\n\n253\n00:15:20.950 --> 00:15:25.140\nNow that we have that then\nthat's gonna be hardy, right.\n\n254\n00:15:25.140 --> 00:15:26.766\nSo how are we gonna do this?\n\n255\n00:15:26.766 --> 00:15:34.270\nWe're gonna say $window.navigator.\n\n256\n00:15:34.270 --> 00:15:39.050\nSo we actually have to check\nif there's a navigator object.\n\n257\n00:15:40.070 --> 00:15:45.445\nSo if there's not a navigator,\nwe should probably just go ahead and\n\n258\n00:15:45.445 --> 00:15:49.043\nsay, hey that's not available, and fail.\n\n259\n00:15:49.043 --> 00:15:55.141\nIn addition to, if there is a navigator,\nwe still have to make the request.\n\n260\n00:15:55.141 --> 00:15:58.672\nSo this is gonna be a little messy, and\nI was about to get ahead of myself.\n\n261\n00:15:58.672 --> 00:16:04.647\nIn order to do premises there is this\nother angular service called $q,\n\n262\n00:16:04.647 --> 00:16:09.727\nwhich is premise implementation so\nI can construct premises\n\n263\n00:16:09.727 --> 00:16:15.222\nthat do this then catch behavior\nlike $HTTP, so I also need $q.\n\n264\n00:16:15.222 --> 00:16:22.650\nSo $q and .$q = $q, just like so.\n\n265\n00:16:22.650 --> 00:16:27.670\nAll right, so this $q and\nthis is a constructor\n\n266\n00:16:27.670 --> 00:16:32.850\nthat takes two arguments, resolve and\n\n267\n00:16:32.850 --> 00:16:37.120\nreject, and\nthis is going to construct our promise.\n\n268\n00:16:37.120 --> 00:16:40.030\nNow if we call resolve,\nit's immediately going to come back and\n\n269\n00:16:40.030 --> 00:16:42.050\nsay cool, there it is.\n\n270\n00:16:42.050 --> 00:16:45.412\nHere's your resolved value,\nwhatever it may be.\n\n271\n00:16:45.412 --> 00:16:49.909\nIf we call reject, that's gonna activate\nthe .catch clause of our promise handling.\n\n272\n00:16:51.540 --> 00:16:55.490\nBecause we want this to be promise based,\nwe should probably go ahead and\n\n273\n00:16:55.490 --> 00:16:56.608\nreturn this.$q.\n\n274\n00:16:56.608 --> 00:16:59.645\nSo return the promise that we're creating,\nand then inside,\n\n275\n00:16:59.645 --> 00:17:01.950\nwe're gonna write our functionality, okay?\n\n276\n00:17:03.000 --> 00:17:04.800\nSo what is this functionallity?\n\n277\n00:17:04.800 --> 00:17:11.368\nI'm going to grab the navigator\nobject off of $window,\n\n278\n00:17:15.711 --> 00:17:19.390\nAnd if there is not a navigator object.\n\n279\n00:17:19.390 --> 00:17:25.385\nSo, if navigator doesn't exist,\nit's undefined, whatever it may be,\n\n280\n00:17:25.385 --> 00:17:31.016\nthen I want to reject and say\nGeolocation services are not available.\n\n281\n00:17:37.274 --> 00:17:39.753\nOkay, so\nwhat that'll do is that'll fail and\n\n282\n00:17:39.753 --> 00:17:43.330\nthat's one of our tests is to handle\nsome of those older browsers.\n\n283\n00:17:44.730 --> 00:17:50.000\nOtherwise, We want to do what?\n\n284\n00:17:50.000 --> 00:17:52.770\nWell, we actually want to use\nthe navigator geolocation,\n\n285\n00:17:52.770 --> 00:17:55.720\nget current position, just like this.\n\n286\n00:17:58.025 --> 00:18:05.280\ngeolocation.getCurrentPosition, and\n\n287\n00:18:05.280 --> 00:18:08.740\nthat takes that call back function,\nwhich in this case is position.\n\n288\n00:18:08.740 --> 00:18:12.380\nAll right, we get the position there,\nand now we're gonna run this function.\n\n289\n00:18:12.380 --> 00:18:15.381\nI know there's a lot of functions and\nfunctions and functions and functions.\n\n290\n00:18:15.381 --> 00:18:16.100\n&gt;&gt; [LAUGH]\n&gt;&gt; And\n\n291\n00:18:16.100 --> 00:18:18.840\nI'm actually gonna break\nthis up just a little bit\n\n292\n00:18:18.840 --> 00:18:20.780\nto get some more real\nestate from side to side.\n\n293\n00:18:22.110 --> 00:18:24.390\nSo I'm just using method chaining here.\n\n294\n00:18:24.390 --> 00:18:27.370\nWell, actually chaining in general,\nthis isn't a method,\n\n295\n00:18:27.370 --> 00:18:32.110\nin order to keep these all kind of\nin line hopefully for readability.\n\n296\n00:18:32.110 --> 00:18:33.747\nSo what do I want?\n\n297\n00:18:33.747 --> 00:18:35.960\nI wanna grab the latitude and longitude.\n\n298\n00:18:35.960 --> 00:18:43.850\nSo I'm gonna peel off latitude and\nlongitude from the position.coords.\n\n299\n00:18:43.850 --> 00:18:48.490\nWe saw that in the browser console,\nright, we can grab those individuals.\n\n300\n00:18:48.490 --> 00:18:55.340\nNow, if we get that, hey, we have been\nsuccessful at querying the position.\n\n301\n00:18:57.160 --> 00:19:01.100\nSo we want to resolve And\nwhat do we want to resolve?\n\n302\n00:19:01.100 --> 00:19:04.605\nWell we want to resolve with a value.\n\n303\n00:19:04.605 --> 00:19:08.480\nAnd, what do we wanna\nresolve with the value?\n\n304\n00:19:08.480 --> 00:19:14.786\nOkay, well I'm just gonna create an object\nand type in latitude, longitude.\n\n305\n00:19:14.786 --> 00:19:16.470\nI'm just going to send the latitude and\nlongitude back.\n\n306\n00:19:16.470 --> 00:19:19.590\nSo I wrapped this in\na promise that can then be\n\n307\n00:19:19.590 --> 00:19:23.820\nused just like $HTTP in our other service.\n\n308\n00:19:23.820 --> 00:19:29.580\nSo I can say .then.then.then, and use a\nsimilar API that I would everywhere else.\n\n309\n00:19:29.580 --> 00:19:31.550\nNow, I wrote this from scratch.\n\n310\n00:19:31.550 --> 00:19:33.450\nThere are some existing modules out there.\n\n311\n00:19:33.450 --> 00:19:36.900\nI only need this one functionality,\nso I tend to write this myself.\n\n312\n00:19:36.900 --> 00:19:39.430\nIf I needed a lot more robust features,\n\n313\n00:19:39.430 --> 00:19:43.290\nright, as far as feature sets,\nthere we go.\n\n314\n00:19:43.290 --> 00:19:46.990\nSo, we'll come back and\n\n315\n00:19:46.990 --> 00:19:51.530\nuse this now in our app component,\njust to see if it works.\n\n316\n00:19:51.530 --> 00:19:56.340\nI make no guarantees that\nit's actually working fully.\n\n317\n00:19:56.340 --> 00:20:02.160\nNow, that mean I'm going to open up my app\ncontroller to use it in the component.\n\n318\n00:20:02.160 --> 00:20:05.790\nBut before I do,\nI have to remember to register this\n\n319\n00:20:07.090 --> 00:20:09.930\nas a service for\nmy angular application, okay?\n\n320\n00:20:09.930 --> 00:20:12.666\nSo I'm gonna import this\n\n321\n00:20:12.666 --> 00:20:18.932\nconst.geolocationservice=require./servi-\nces.\n\n322\n00:20:18.932 --> 00:20:21.090\nAnd geolocation.service.\n\n323\n00:20:21.090 --> 00:20:23.221\nJust like so.\n\n324\n00:20:23.221 --> 00:20:24.670\nAnd I'm gonna keep my services together.\n\n325\n00:20:24.670 --> 00:20:29.380\nSo service, and I'm just gonna call it\nGeolocation, just to make it simple.\n\n326\n00:20:30.600 --> 00:20:32.601\nGeolocation service, like so.\n\n327\n00:20:32.601 --> 00:20:36.370\nAnd now, this is injectable into\nmy app component so I can use it.\n\n328\n00:20:36.370 --> 00:20:38.430\nSo that was a little bit of\nhousekeeping that we had to do.\n\n329\n00:20:39.500 --> 00:20:43.730\nSo, if I come down here and\nadd that to my dependencies, geolocation,\n\n330\n00:20:45.620 --> 00:20:50.778\nand this as geolocation, and let's just do\n\n331\n00:20:50.778 --> 00:20:56.510\ngeolocation.getPosition, and\nthen what do we wanna do?\n\n332\n00:20:56.510 --> 00:20:59.330\nWell, .then, what are we gonna get back?\n\n333\n00:20:59.330 --> 00:21:04.837\nWe're gonna get the coordinates, And\n\n334\n00:21:04.837 --> 00:21:10.465\nlet's just say console.log\nthe coordinates.\n\n335\n00:21:12.305 --> 00:21:17.580\nOtherwise, What do we want?\n\n336\n00:21:17.580 --> 00:21:21.760\nWell, there's an error and\nthat's the reject statement,\n\n337\n00:21:21.760 --> 00:21:26.870\nI want this console.error(err),\nthere we go.\n\n338\n00:21:27.930 --> 00:21:31.321\nThat's a lot cleaner,\nnow it's messy in the service portion but\n\n339\n00:21:31.321 --> 00:21:35.819\nnow everywhere that I want the position,\nI just say geolocation.getPosition, then\n\n340\n00:21:35.819 --> 00:21:40.213\nwhen I get the coordinates, do something\nwith them otherwise, handle this error.\n\n341\n00:21:40.213 --> 00:21:44.470\nIt's a lot cleaner, now hopefully,\nhopefully it works.\n\n342\n00:21:44.470 --> 00:21:48.090\nNow, behind the scenes the whole time\nthis should had been rebuilding, and\n\n343\n00:21:48.090 --> 00:21:49.550\nit looks like it just rebuilt.\n\n344\n00:21:49.550 --> 00:21:51.610\nWe're about to find out, I guess.\n\n345\n00:21:51.610 --> 00:21:52.880\n&gt;&gt; Drumroll, please.\n\n346\n00:21:52.880 --> 00:21:54.280\n&gt;&gt; So look at that.\n\n347\n00:21:54.280 --> 00:21:59.330\nOn page load, this, I had not set\na permission, so it's asking me.\n\n348\n00:21:59.330 --> 00:22:02.540\nThis is the little box when someone\nnavigate to this application\n\n349\n00:22:02.540 --> 00:22:04.320\nthat they would see.\n\n350\n00:22:04.320 --> 00:22:06.880\nDo you want this site\nto know your location?\n\n351\n00:22:06.880 --> 00:22:11.130\nI could hit block, and what we're gonna\ndo is we're gonna try both of them so\n\n352\n00:22:11.130 --> 00:22:12.930\nwe can see what's going on.\n\n353\n00:22:12.930 --> 00:22:14.420\nBut I'm gonna go ahead and allow.\n\n354\n00:22:14.420 --> 00:22:17.540\nBut before,\nI'm gonna open up the dev tools.\n\n355\n00:22:17.540 --> 00:22:21.060\nSo I'm gonna allow, and\nnow that I've allowed, I should.\n\n356\n00:22:22.630 --> 00:22:24.120\nAha.\nThere we go.\n\n357\n00:22:24.120 --> 00:22:27.386\nThere are our coordinates,\nlatitude and longitude.\n\n358\n00:22:27.386 --> 00:22:31.296\nNow that we're getting those back in a\npromise based, and that was on page load,\n\n359\n00:22:31.296 --> 00:22:32.920\nwe can then do some other things.\n\n360\n00:22:32.920 --> 00:22:37.970\nSo we're not quite there yet, because I\nwanna see what happens if we change that,\n\n361\n00:22:37.970 --> 00:22:39.170\nright, if I refresh.\n\n362\n00:22:41.260 --> 00:22:45.695\nActually, I'm gonna say,\nuse global default And\n\n363\n00:22:45.695 --> 00:22:50.330\nnow this needs to reload, and\nit should ask me if I wanna block.\n\n364\n00:22:50.330 --> 00:22:52.420\nSo I'm gonna block this time.\n\n365\n00:22:52.420 --> 00:22:58.120\nSo I'm gonna block, and if I block,\nwait for it, wait for it.\n\n366\n00:22:59.820 --> 00:23:03.850\nWell, I thought it was going\nto have this error state.\n\n367\n00:23:03.850 --> 00:23:05.400\nDoesn't look like there's one.\n\n368\n00:23:05.400 --> 00:23:07.660\nMaybe it takes a while to come back,\nmaybe it doesn't.\n\n369\n00:23:10.480 --> 00:23:12.620\nWell, what does that mean?\n\n370\n00:23:14.240 --> 00:23:18.500\nWell, I said something\njust to further clarify.\n\n371\n00:23:19.990 --> 00:23:23.221\nWe're checking to see if\nthe navigator object exists and\n\n372\n00:23:23.221 --> 00:23:24.911\nonly rejecting then, okay?\n\n373\n00:23:27.634 --> 00:23:34.980\nHere, we are well we have this get current\nposition and we're only resolving.\n\n374\n00:23:34.980 --> 00:23:36.170\nThere's no other reject here.\n\n375\n00:23:37.275 --> 00:23:41.510\nGoelocation services are available because\nthe navigator object, well, it's there.\n\n376\n00:23:43.930 --> 00:23:45.904\nBut how I handle that otherwise, right.\n\n377\n00:23:45.904 --> 00:23:50.612\nIt would be nice if I could get\nthat to run that cash block.\n\n378\n00:23:50.612 --> 00:23:53.479\nSo that's something,\nif you read through the documentation and\n\n379\n00:23:53.479 --> 00:23:56.760\nyou see some examples A lot of people\nwill have something similar to this but\n\n380\n00:23:56.760 --> 00:24:00.310\nthere's that final little bit,\nwhat if someone's blocks, right?\n\n381\n00:24:00.310 --> 00:24:03.214\nSo let's go look to\nthe Mozilla Developer Network.\n\n382\n00:24:03.214 --> 00:24:08.284\nFor a little more in-depth\non navigator.geolocation.\n\n383\n00:24:10.248 --> 00:24:12.087\nOkay, so using Geolocation,\n\n384\n00:24:12.087 --> 00:24:17.810\nI'm actually gonna come to Web APIs\nbecause we're essentially wrapping that.\n\n385\n00:24:17.810 --> 00:24:20.577\nAnd if I come down,\nthere's the geolocation API.\n\n386\n00:24:20.577 --> 00:24:25.872\nOkay, so, that's not quite what I wanted.\n\n387\n00:24:25.872 --> 00:24:30.430\nUsing geolocation, okay, so I'm gonna\ncome here and then get current position.\n\n388\n00:24:31.520 --> 00:24:36.564\nI'm gonna follow this link\nto get current position\n\n389\n00:24:36.564 --> 00:24:42.673\nbecause I need to know the actual\nfunction signature, okay?\n\n390\n00:24:42.673 --> 00:24:47.087\nSo get current position takes\na success callback, and and\n\n391\n00:24:47.087 --> 00:24:50.430\nerror callback as its sole info parameter.\n\n392\n00:24:50.430 --> 00:24:57.899\nOptions, so\nI wonder if we can use error, right?\n\n393\n00:24:57.899 --> 00:25:02.321\nBecause if someone blocks, wouldn't that\npossibly be an error for our positioning?\n\n394\n00:25:02.321 --> 00:25:06.975\nWell, let's do a quick look to\nsee if that is the case, okay?\n\n395\n00:25:06.975 --> 00:25:09.459\nSo we're gonna hop back over here, and\n\n396\n00:25:09.459 --> 00:25:12.870\nwe have to figure out\nwhere we are a little bit.\n\n397\n00:25:12.870 --> 00:25:16.331\nThere's our end here, and\nI'm gonna pop this over.\n\n398\n00:25:17.957 --> 00:25:24.965\nAnd just say if there's an error,\nsay console.log error.\n\n399\n00:25:24.965 --> 00:25:25.978\nAll right, I just wanna check.\n\n400\n00:25:25.978 --> 00:25:29.912\nSo if I put a comma, and I'm gonna\ncut this out just for a moment, so\n\n401\n00:25:29.912 --> 00:25:30.696\nyou can see.\n\n402\n00:25:30.696 --> 00:25:34.330\nI put the initial function,\ncomma, the second function.\n\n403\n00:25:34.330 --> 00:25:36.451\nAnd that's typically how call backs work.\n\n404\n00:25:36.451 --> 00:25:40.609\nWe have some set of possible, if you\nhave multiple states, here's one path,\n\n405\n00:25:40.609 --> 00:25:42.820\nhere's the other path.\n\n406\n00:25:42.820 --> 00:25:45.034\nSo this should rebuild,\nlet's see if rebuilt.\n\n407\n00:25:45.034 --> 00:25:48.840\nIt says it rebuilt, should refresh.\n\n408\n00:25:48.840 --> 00:25:52.763\nAnd user denied geolocation, there we go.\n\n409\n00:25:52.763 --> 00:25:53.728\nSo now, now,\n\n410\n00:25:53.728 --> 00:25:59.765\nthis would actually hit that then block\nif we run the function it rejected here.\n\n411\n00:25:59.765 --> 00:26:04.216\nSo that's exactly what I'm gonna do,\nso we gonna take this error and\n\n412\n00:26:04.216 --> 00:26:05.992\nI'm gonna pull those out.\n\n413\n00:26:05.992 --> 00:26:13.050\nI'm gonna say success = position,\nand that's a function.\n\n414\n00:26:13.050 --> 00:26:18.177\nAnd then error,\nnow I'm putting these internal.\n\n415\n00:26:20.760 --> 00:26:22.182\nAnd that's going to do something else.\n\n416\n00:26:22.182 --> 00:26:26.926\nSo I'm gonna grab this, just like so.\n\n417\n00:26:26.926 --> 00:26:32.581\nNo, just the end part, insides,\nsorry, and I’m gonna put that there.\n\n418\n00:26:34.700 --> 00:26:38.801\nAnd now I’m gonna change that\nto success and then error,\n\n419\n00:26:38.801 --> 00:26:42.227\nwell I have to write the error part,\nall right?\n\n420\n00:26:42.227 --> 00:26:44.867\nSo I'll just move that function\nto a variable now because I’m\n\n421\n00:26:44.867 --> 00:26:47.320\nusing this function expression,\nI have to put it above.\n\n422\n00:26:48.530 --> 00:26:51.888\nInside of error,\nI just want to immediately reject and\n\n423\n00:26:51.888 --> 00:26:53.573\njust pass the error along.\n\n424\n00:26:53.573 --> 00:26:54.280\nThat's all I wanna do.\n\n425\n00:26:54.280 --> 00:26:59.851\nIt's very simple, but I wanted to provide\nsome clarity about how this is operating.\n\n426\n00:26:59.851 --> 00:27:02.908\nSo there's our error handler,\nthere's a success handler, and\n\n427\n00:27:02.908 --> 00:27:06.700\nultimately the real magic is navigator,\ngeolocation, get current position.\n\n428\n00:27:06.700 --> 00:27:08.882\nIf you're successful, run success.\n\n429\n00:27:08.882 --> 00:27:10.949\nIf it's an error, run error.\n\n430\n00:27:10.949 --> 00:27:14.038\nAnd that's where our resolve and\nour reject is.\n\n431\n00:27:14.038 --> 00:27:17.316\nSo that should, should.\n\n432\n00:27:17.316 --> 00:27:20.865\n&gt;&gt; [LAUGH]\n&gt;&gt; That should, uh-huh, so\n\n433\n00:27:20.865 --> 00:27:23.770\nuser denied, all right?\n\n434\n00:27:23.770 --> 00:27:27.415\nLet's make sure that that's\nrunning in the .thenBlock.\n\n435\n00:27:27.415 --> 00:27:31.030\nSo I'm gonna use the default ask, okay?\n\n436\n00:27:31.030 --> 00:27:34.618\nI need to reload and I'm going to block.\n\n437\n00:27:34.618 --> 00:27:38.140\nAnd it says void,\nit happened immediate, that was fast.\n\n438\n00:27:38.140 --> 00:27:41.906\nAll right, so just to make sure\nthat it actually was happening,\n\n439\n00:27:41.906 --> 00:27:44.717\nI'm gonna come over here\nto my app controller.\n\n440\n00:27:44.717 --> 00:27:49.781\nAnd I'm going to say, App,\n\n441\n00:27:49.781 --> 00:27:52.961\nerr, just like so.\n\n442\n00:27:52.961 --> 00:27:54.979\nSo it's going to recompile updates and\n\n443\n00:27:54.979 --> 00:27:58.810\nI think our service is gonna\nbe done after this fina test.\n\n444\n00:27:58.810 --> 00:28:04.838\nSo notice it says App and PositionError,\nthat's actually the catch that's running.\n\n445\n00:28:04.838 --> 00:28:08.757\nSo I've written my very own geolocation\nservice that will allow me to get\n\n446\n00:28:08.757 --> 00:28:12.178\nthe current position,\nget the position if someone allows me.\n\n447\n00:28:12.178 --> 00:28:15.800\nAnd, well, that was a lot of work, but\nI feel like I'm just getting started.\n\n448\n00:28:15.800 --> 00:28:17.184\n&gt;&gt; You are jus getting started.\n\n449\n00:28:17.184 --> 00:28:19.710\nSo now that we've got that service bill,\nhow are we gonna use it?\n\n450\n00:28:19.710 --> 00:28:21.180\nIt was what I was gonna ask you.\n\n451\n00:28:21.180 --> 00:28:23.640\nBut I think we're gonna have\nto ask you that in a part two.\n\n452\n00:28:23.640 --> 00:28:24.419\nWhat do you think?\n\n453\n00:28:24.419 --> 00:28:25.820\n&gt;&gt; I believe you're absolutely correct.\n\n454\n00:28:25.820 --> 00:28:26.992\nWe have the service ready.\n\n455\n00:28:26.992 --> 00:28:29.176\nNow we just need to integrate it in there.\n\n456\n00:28:29.176 --> 00:28:32.314\nAnd there's a few other things that\nI think maybe applicable this time to\n\n457\n00:28:32.314 --> 00:28:34.650\nintroduce as far as\nAngularJS is concerned.\n\n458\n00:28:34.650 --> 00:28:37.509\nSo yeah, I agree with it,\nlet's come back with a part two.\n\n459\n00:28:37.509 --> 00:28:40.893\nGive it its own time, that way we can\nwell it's nicer experience for you,\n\n460\n00:28:40.893 --> 00:28:43.920\nnicer experience for us,\neverybody is happy and we go home.\n\n461\n00:28:43.920 --> 00:28:46.736\n&gt;&gt; Well, it looks like we're making sure\nevery single rock is turned over and\n\n462\n00:28:46.736 --> 00:28:48.088\nthat's what you do so well Justin.\n\n463\n00:28:48.088 --> 00:28:52.229\nThanks for bringing us all that\ninformation, geolocation service Weather\n\n464\n00:28:52.229 --> 00:28:56.640\napp with AngularJS and Express, there's\na lot of video content in this series.\n\n465\n00:28:56.640 --> 00:28:59.437\nMake sure you watch each and everyone,\nyou'll be very glad you did.\n\n466\n00:28:59.437 --> 00:29:02.924\nAnd of course pay attention for\npart two of geolocation service.\n\n467\n00:29:02.924 --> 00:29:05.091\nAnd thankyou for watching DevProTV,\n\n468\n00:29:05.091 --> 00:29:07.599\nremember a good dev pro\nis always learning.\n\n469\n00:29:07.599 --> 00:29:08.590\nI'm Zach Memos.\n\n470\n00:29:08.590 --> 00:29:09.498\n&gt;&gt; And I'm Justin Dennison.\n\n471\n00:29:09.498 --> 00:29:11.230\n&gt;&gt; And we'll see you soon.\n\n472\n00:29:11.230 --> 00:29:16.203\n[MUSIC]\n\n",
          "vimeoId": "227421512"
        },
        {
          "description": "Justin and Zach cover using the geolocation service, grabbing the weather using latitude & longitude, adding the '$ONINIT' method to the app controller, looking at 'lifecycle' methods, and getting the app to where we have the latitude, longitude, plus the location more uniformly.",
          "length": "889",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-11-1-2-geolocation_service_pt2-072717-PGM.00_15_09_20.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-11-1-2-geolocation_service_pt2-072717-PGM.00_15_09_20.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-11-1-2-geolocation_service_pt2-072717-PGM.00_15_09_20.Still001-sm.jpg",
          "title": "Geolocation Service Part 2",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.983 --> 00:00:15.309\nHello and thank you for\nchoosing DevPro.TV,\n\n3\n00:00:15.309 --> 00:00:17.103\nhelping you learn wherever you go.\n\n4\n00:00:17.103 --> 00:00:18.966\nI'm your host Zack Memes,\n\n5\n00:00:18.966 --> 00:00:23.460\nas we continue on with Weather App\nwith AngularJS and Express.\n\n6\n00:00:23.460 --> 00:00:26.210\nThis is part two of Geolocation Service.\n\n7\n00:00:26.210 --> 00:00:28.800\nWe had a part one, make sure you\nwatch that, you'll be glad you did.\n\n8\n00:00:28.800 --> 00:00:31.540\nBringing us all the information\nwe need is Justin Dennison.\n\n9\n00:00:32.760 --> 00:00:36.820\n&gt;&gt; Well I will tell you what,\nthat was absolutely fantastical.\n\n10\n00:00:36.820 --> 00:00:39.390\nThat lean in when you said express,\nI was like I'm ready,\n\n11\n00:00:39.390 --> 00:00:40.960\nwhat are we gonna be doing?\n\n12\n00:00:40.960 --> 00:00:43.940\nI was almost concerned whether we're\ngonna be doing a different show, but\n\n13\n00:00:43.940 --> 00:00:48.640\nyou had me and in that wonderful\nintroduction, but what do you expect?\n\n14\n00:00:48.640 --> 00:00:51.080\n&gt;&gt; Well, I expect to find out more.\n\n15\n00:00:51.080 --> 00:00:54.438\nWe have actually built\na geolocation service, right?\n\n16\n00:00:54.438 --> 00:00:58.150\nWe have that service built, so\nhow are we going to use it?\n\n17\n00:00:58.150 --> 00:00:59.950\nCuz that was a cliffhanger\nfrom last episode-\n\n18\n00:00:59.950 --> 00:01:00.830\n&gt;&gt; The cliffhanger,\n\n19\n00:01:00.830 --> 00:01:03.010\nI do love a good cliffhanger.\n\n20\n00:01:03.010 --> 00:01:04.930\nNot rock climbing, mind you.\n\n21\n00:01:04.930 --> 00:01:09.240\n&gt;&gt; No.\n&gt;&gt; That's like the chunky redhead's\n\n22\n00:01:09.240 --> 00:01:09.825\nmortal enemy.\n\n23\n00:01:09.825 --> 00:01:11.950\n&gt;&gt; [LAUGH]\n&gt;&gt; Rocks, right,\n\n24\n00:01:11.950 --> 00:01:13.460\nthat you have to hang from.\n\n25\n00:01:13.460 --> 00:01:13.970\n&gt;&gt; Yeah.\n\n26\n00:01:13.970 --> 00:01:14.560\nWe have to.\n\n27\n00:01:14.560 --> 00:01:15.350\n&gt;&gt; It's craggy.\n\n28\n00:01:15.350 --> 00:01:17.101\n&gt;&gt; Yeah it is craggy,\n&gt;&gt; Very craggy.\n\n29\n00:01:17.101 --> 00:01:19.068\n&gt;&gt; We have to be more careful there, but\n\n30\n00:01:19.068 --> 00:01:22.120\nwe left off with actually\ngetting the position, right?\n\n31\n00:01:22.120 --> 00:01:26.100\nThe latitude and longitude from the built\nin geolocation services of our browser,\n\n32\n00:01:26.100 --> 00:01:29.190\nand our ultimate goal\nwas to get the weather.\n\n33\n00:01:29.190 --> 00:01:31.490\nRight, how are we going to do that?\n\n34\n00:01:31.490 --> 00:01:33.690\nWell, that sounds like a stateful thing,\n\n35\n00:01:33.690 --> 00:01:37.810\nand as a result we should probably\npull that up into the app component.\n\n36\n00:01:37.810 --> 00:01:41.650\nNow, let's just see how we're\ngoing to accomplish that, and\n\n37\n00:01:41.650 --> 00:01:49.160\nthen there's some other things that\na little things I wanna mess with, right?\n\n38\n00:01:49.160 --> 00:01:50.810\nSo, let's go ahead and\ntake a look at my screen.\n\n39\n00:01:50.810 --> 00:01:53.905\nThat was a very over\ndramatic lead in to this.\n\n40\n00:01:53.905 --> 00:01:54.530\n&gt;&gt; Dramatic is good.\n\n41\n00:01:54.530 --> 00:01:55.950\n&gt;&gt; But we'll go with it, we'll go with it.\n\n42\n00:01:55.950 --> 00:01:56.610\n&gt;&gt; It is, it works.\n\n43\n00:01:56.610 --> 00:01:58.940\n&gt;&gt; So we're looking at my screen here and\nthen we go back.\n\n44\n00:01:58.940 --> 00:02:03.030\nWe have this in the constructor and\nwe'll talk about that but\n\n45\n00:02:03.030 --> 00:02:06.720\nlet's just see if we can get this\ncoordinates thing, get the weather back.\n\n46\n00:02:08.290 --> 00:02:09.840\nThat's our ultimate goal, okay?\n\n47\n00:02:09.840 --> 00:02:11.580\nSo, we're gonna leave this\ncatch statement for now, and\n\n48\n00:02:11.580 --> 00:02:14.220\nwe should always catch it and\nlet things know.\n\n49\n00:02:14.220 --> 00:02:16.790\nMaybe we shouldn't cancel.log-in.\n\n50\n00:02:16.790 --> 00:02:20.780\nBut we're gonna leave that there for\nnow, and\n\n51\n00:02:20.780 --> 00:02:26.060\ninstead of these coordinates, what I\nwant is to have a function body like so.\n\n52\n00:02:26.060 --> 00:02:28.600\nSo this little fat arrow function.\n\n53\n00:02:28.600 --> 00:02:31.070\nAnd then that way I can get\na little more logic here.\n\n54\n00:02:31.070 --> 00:02:35.290\nSo I'm gonna pull out the latitude and\nlongitude.\n\n55\n00:02:35.290 --> 00:02:37.070\nI'm gonna pull those apart.\n\n56\n00:02:37.070 --> 00:02:38.690\nNow you may be asking yourself,\n\n57\n00:02:38.690 --> 00:02:41.880\nwhy'd you put them together in the first\nplace, in the geolocation service?\n\n58\n00:02:41.880 --> 00:02:45.280\nWell, that's how you bundle things and\nthrough objects and\n\n59\n00:02:45.280 --> 00:02:47.370\npass them along as key value payers.\n\n60\n00:02:47.370 --> 00:02:48.180\nIt makes it a little bit easier.\n\n61\n00:02:48.180 --> 00:02:52.640\nI could have returned it as an array and\nuse some destructuring.\n\n62\n00:02:52.640 --> 00:02:55.660\nI tend to like name things,\ncuz I don't have to remember well\n\n63\n00:02:55.660 --> 00:02:58.960\nposition one is latitude,\nposition two is longitude.\n\n64\n00:02:58.960 --> 00:03:02.210\nBy names, I'm like it's latitude and\nlongitude, that's all I need to do.\n\n65\n00:03:02.210 --> 00:03:05.650\nSo, I tend to favor objects\nthat's a personal bias of mine.\n\n66\n00:03:05.650 --> 00:03:06.505\n&gt;&gt; I think that's a very good one.\n\n67\n00:03:06.505 --> 00:03:10.620\n&gt;&gt; So, if I pull the coordinates\napart into these latitude and\n\n68\n00:03:10.620 --> 00:03:15.334\nlongitude payers, well,\nI can immediately call this.weather.\n\n69\n00:03:15.334 --> 00:03:20.544\nSo this.weather get by location,\nthere we go.\n\n70\n00:03:23.115 --> 00:03:28.230\nNot get by location,\njust get, sorry, longitude.\n\n71\n00:03:28.230 --> 00:03:30.140\nSo latitude and longitude.\n\n72\n00:03:30.140 --> 00:03:33.310\nSo, the reason I'm returning this is\nthat's gonna return a promise, and\n\n73\n00:03:33.310 --> 00:03:35.410\nthen it's going to resolve\nin the next .then.\n\n74\n00:03:35.410 --> 00:03:37.180\nI'm using promise chaining here.\n\n75\n00:03:37.180 --> 00:03:38.550\nSo get the position, then,\n\n76\n00:03:38.550 --> 00:03:42.070\nwhen you get the coordinates,\ngrab that latitude and longitude.\n\n77\n00:03:42.070 --> 00:03:45.440\nThen go ahead and hop over and try to\nget the latitude and, the, excuse me,\n\n78\n00:03:45.440 --> 00:03:46.709\nthe weather for\nthe latitude and longitude.\n\n79\n00:03:47.840 --> 00:03:52.910\nAnd then when you get that, well,\nyou're gonna get weather data back,\n\n80\n00:03:52.910 --> 00:03:55.660\nand if you don't believe me let's\njust see if that is the case.\n\n81\n00:03:57.350 --> 00:04:01.824\nSo here we go,\nwanna come over to my application,\n\n82\n00:04:01.824 --> 00:04:06.830\nit should rebuild and,\nyou should never put semicolons\n\n83\n00:04:06.830 --> 00:04:12.278\nat the end of these chain\nstatements cuz it breaks the chain.\n\n84\n00:04:12.278 --> 00:04:14.327\nAnd remember you should never break\nthe chain in the famous words of-\n\n85\n00:04:14.327 --> 00:04:16.739\n&gt;&gt; Never break the chain.\n\n86\n00:04:16.739 --> 00:04:20.577\n&gt;&gt; Right, never break the chain, so nice\nlittle Fleetwood Mac reference in there,\n\n87\n00:04:20.577 --> 00:04:22.840\nI think it was Fleetwood Mac-\n&gt;&gt; It was Fleetwood Mac.\n\n88\n00:04:22.840 --> 00:04:25.004\n&gt;&gt; It was, I can't remember-\n&gt;&gt; Fleetwood Mac!\n\n89\n00:04:25.004 --> 00:04:25.971\n&gt;&gt; Those things.\n&gt;&gt; Fleetwood Mac.\n\n90\n00:04:25.971 --> 00:04:31.540\n&gt;&gt; So, don't accidentally do that,\nconsole.log(weather.data), we're good.\n\n91\n00:04:31.540 --> 00:04:33.580\nBut we have to change our permissions.\n\n92\n00:04:33.580 --> 00:04:38.505\nSo I'm just going to allow,\ncuz we've checked that that error works.\n\n93\n00:04:38.505 --> 00:04:42.081\nSo I'm always going to allow now because\nultimately that's what we're testing\n\n94\n00:04:42.081 --> 00:04:43.868\nis if someone does give you permission,\n\n95\n00:04:43.868 --> 00:04:46.850\nhow are you going to use that\nto get information back?\n\n96\n00:04:46.850 --> 00:04:49.370\nSo boom, there it is.\n\n97\n00:04:49.370 --> 00:04:51.340\nThere is an exact latitude and longitude.\n\n98\n00:04:51.340 --> 00:04:57.209\nWell, exact is, it has some error in it,\nand it's not super exact.\n\n99\n00:04:57.209 --> 00:05:02.340\nAlerts, currently, daily, flags,\nhourly, latitude and longitude.\n\n100\n00:05:02.340 --> 00:05:06.420\nWe have all of the information\nthat we would with get by location\n\n101\n00:05:06.420 --> 00:05:09.020\nexcept the actual location, mind you.\n\n102\n00:05:09.020 --> 00:05:13.705\nBut we do have weather, and\nif we have weather data, well,\n\n103\n00:05:13.705 --> 00:05:16.256\nI wonder since that comes back.\n\n104\n00:05:16.256 --> 00:05:19.138\nI wonder if we can say this.data\n\n105\n00:05:19.138 --> 00:05:23.954\n= weatherData like we do down here for\nthe on search.\n\n106\n00:05:23.954 --> 00:05:28.450\nSo, this.data = weatherData.\n\n107\n00:05:28.450 --> 00:05:32.310\nSo I'm gonna refresh and\nwe should see this just kind of work.\n\n108\n00:05:32.310 --> 00:05:35.283\nAnd now it's gonna be\noff filter because well,\n\n109\n00:05:35.283 --> 00:05:39.680\nthis is going to be different from\nthe actual latitude and longitude.\n\n110\n00:05:40.790 --> 00:05:43.440\nSo, this is not powerf out to California.\n\n111\n00:05:43.440 --> 00:05:46.800\nBut if we scroll down, there's our\ntemperature, there's our times,\n\n112\n00:05:46.800 --> 00:05:48.030\neverything still works.\n\n113\n00:05:48.030 --> 00:05:50.420\nAnd it actually happens on page load.\n\n114\n00:05:50.420 --> 00:05:52.440\nIt's not the greatest user experience.\n\n115\n00:05:53.440 --> 00:05:56.053\nWe could fix that later on.\n\n116\n00:05:56.053 --> 00:06:00.980\nIt's not the greatest user experience but\nwe do have that kind of tied in,\n\n117\n00:06:00.980 --> 00:06:05.225\nright into our geolocation service,\nit happens on page load.\n\n118\n00:06:05.225 --> 00:06:09.450\nZack, if you look at this,\n\n119\n00:06:09.450 --> 00:06:14.210\nthis seems like a lot of logic\ncode in the constructor.\n\n120\n00:06:14.210 --> 00:06:14.800\n&gt;&gt; It is.\n\n121\n00:06:14.800 --> 00:06:18.790\n&gt;&gt; Also, it doesn't seem like\nthis should be in there.\n\n122\n00:06:18.790 --> 00:06:22.891\nNow we could put it in there technically,\nbut this is a good time to talk about\n\n123\n00:06:22.891 --> 00:06:26.435\nangular js 1.5 and above,\nif I'm not mistaken it's 1.5.\n\n124\n00:06:26.435 --> 00:06:28.890\nI could be wrong,\nit might have been a 1.6.\n\n125\n00:06:28.890 --> 00:06:32.280\nThey introduced these things\ncalled life cycle hooks.\n\n126\n00:06:32.280 --> 00:06:35.990\nAnd this is very similar to some\nother frameworks and these life cycle\n\n127\n00:06:35.990 --> 00:06:40.200\nhooks are specially named methods on\ncontrollers, particular controllers of\n\n128\n00:06:40.200 --> 00:06:46.350\ncomponents that get run during portions\nof kind of a start up every application.\n\n129\n00:06:46.350 --> 00:06:52.265\nCase and point,\nif we come over and we look up,\n\n130\n00:06:52.265 --> 00:06:58.335\nAngularJS, AngularJS lifestyle life cycle,\n\n131\n00:06:58.335 --> 00:07:01.720\nnot lifestyle hooks.\n\n132\n00:07:01.720 --> 00:07:04.990\nMy goodness,\nthis is a rough day from time to time.\n\n133\n00:07:04.990 --> 00:07:08.490\nLife cycle hooks and\nif I come to the AngularJS documentation,\n\n134\n00:07:08.490 --> 00:07:11.380\nnow there's a great deal\nof things to read on this.\n\n135\n00:07:11.380 --> 00:07:14.910\nIf I scroll down,\nwe will eventually get to life cycle.\n\n136\n00:07:17.880 --> 00:07:22.950\nHere are all of the possible\nhooks that you can use,\n\n137\n00:07:24.100 --> 00:07:27.860\nonInit, called on each controller after\nall the controllers on an element have\n\n138\n00:07:27.860 --> 00:07:29.640\nbeen constructed and initialized.\n\n139\n00:07:29.640 --> 00:07:32.590\nSo build a component,\nafter its initialized go back and\n\n140\n00:07:32.590 --> 00:07:33.448\ncall this function, okay.\n\n141\n00:07:35.080 --> 00:07:41.720\nOnChanges, when there is a change,\non one-way data bindings.\n\n142\n00:07:41.720 --> 00:07:44.450\nIt provides a level of re-activity.\n\n143\n00:07:44.450 --> 00:07:47.100\nDoCheck, call on each\nturn of the digest cycle.\n\n144\n00:07:47.100 --> 00:07:49.990\nSo when a digest circle runs,\nhere's some checks.\n\n145\n00:07:51.100 --> 00:07:53.334\nNow there is some more in-depth there.\n\n146\n00:07:53.334 --> 00:07:58.410\nOnDestroy, caught on controller when\nthe containing scope is destroyed.\n\n147\n00:07:58.410 --> 00:08:00.050\nSo if you like delete something or\n\n148\n00:08:00.050 --> 00:08:03.745\nremove something or\nphysically destroy the instance, boom.\n\n149\n00:08:03.745 --> 00:08:06.590\nPostLink, called after this\ncontrollers element and\n\n150\n00:08:06.590 --> 00:08:07.730\nit's children have been linked.\n\n151\n00:08:09.320 --> 00:08:12.390\nNow, this linking part, we typically\ndon't do a whole lot of that cuz\n\n152\n00:08:12.390 --> 00:08:16.480\nthat ends up being more directed\ndown driven type things.\n\n153\n00:08:16.480 --> 00:08:22.050\nHowever, I will tell you this onInit and\nonChanges, they're very handy.\n\n154\n00:08:22.050 --> 00:08:24.250\nDo notice that they're\nprepended by a dollar sign.\n\n155\n00:08:26.860 --> 00:08:29.140\nSo that dollar sign\nsays these are special.\n\n156\n00:08:29.140 --> 00:08:33.656\nThese special to angular and\nthey have a special name, so\n\n157\n00:08:33.656 --> 00:08:38.452\nwe're going to come over here,\nzoom out and Zach if you had to\n\n158\n00:08:38.452 --> 00:08:43.647\nguess about what I'm getting ready to do,\nwhat would you guess?\n\n159\n00:08:43.647 --> 00:08:46.232\n&gt;&gt; You're gonna have\na dollar sign on init.\n\n160\n00:08:46.232 --> 00:08:47.348\n&gt;&gt; My goodness.\n\n161\n00:08:47.348 --> 00:08:47.999\n&gt;&gt; Aren't you, arent you?\n\n162\n00:08:47.999 --> 00:08:50.110\n&gt;&gt; Zach had been paying attention.\n\n163\n00:08:50.110 --> 00:08:51.800\nAnd it makes me happy in my heart, Zack.\n\n164\n00:08:51.800 --> 00:08:53.480\nThat makes me happy in my heart.\n\n165\n00:08:53.480 --> 00:08:57.272\nSo, if we do dollar sign onInit and\nadd that as a method,\n\n166\n00:08:57.272 --> 00:09:02.522\nthat is now a part of this component's\ncontroller and since it's part of this\n\n167\n00:09:02.522 --> 00:09:08.218\ncomponent's controller, I'm actually\njust going to say console.log onInit.\n\n168\n00:09:08.218 --> 00:09:12.840\nWe're just gonna have it log out, just so\nyou can see that this actually runs.\n\n169\n00:09:12.840 --> 00:09:14.400\nSo, boom boom.\n\n170\n00:09:14.400 --> 00:09:19.340\nAnd I've saved too often, and\nthen it recompiled, there we go.\n\n171\n00:09:19.340 --> 00:09:21.635\nNotice it prints out on init.\n\n172\n00:09:23.011 --> 00:09:27.521\nSo, it would almost be best to have this\n\n173\n00:09:27.521 --> 00:09:32.050\ngeolocation get position run on init.\n\n174\n00:09:32.050 --> 00:09:34.650\nRight, when we know\neverything is kind of set up,\n\n175\n00:09:34.650 --> 00:09:36.260\nnot immediately when it's constructed.\n\n176\n00:09:37.890 --> 00:09:41.120\nNow the argument could be made that\nif this runs earlier in the setup of\n\n177\n00:09:41.120 --> 00:09:43.330\nthe application,\nwe may get that back sooner.\n\n178\n00:09:44.350 --> 00:09:48.130\nBut I think for clear division of,\nokay I want you to construct this,\n\n179\n00:09:48.130 --> 00:09:51.970\nyou're all good, and\nnow do some logic for initialization, and\n\n180\n00:09:51.970 --> 00:09:56.970\nnow respond using changes, that's\nprobably an easier thing to remember.\n\n181\n00:09:56.970 --> 00:10:01.205\nAnd it's useful to me,\n\n182\n00:10:01.205 --> 00:10:05.560\nit's one of those things where\nlogic is nice in the onInit and\n\n183\n00:10:05.560 --> 00:10:09.070\nthen only in strict setup inside\nof the constructor is handy.\n\n184\n00:10:09.070 --> 00:10:12.630\nNow, this is a normal JavaScript object\nand as it was not part of a framework and\n\n185\n00:10:12.630 --> 00:10:15.900\nyou had some initial\nsetup that you had to do.\n\n186\n00:10:15.900 --> 00:10:18.677\nEssentially what you would do\nis if you had onInit function,\n\n187\n00:10:18.677 --> 00:10:23.611\nyou would just say this, onInit and\ncall it at the bottom of the constructor.\n\n188\n00:10:23.611 --> 00:10:24.800\nAnd then that would do the remainder.\n\n189\n00:10:24.800 --> 00:10:26.510\nSo, that's effectively what we're doing,\nbut\n\n190\n00:10:26.510 --> 00:10:29.790\nwe're using angular to grab\na hold of that and do it.\n\n191\n00:10:29.790 --> 00:10:31.910\nSo I just copy and pasted that and\n\n192\n00:10:31.910 --> 00:10:35.730\nwell, that should be kinda\nthe final thing, right?\n\n193\n00:10:37.120 --> 00:10:41.879\nSo if I come over here and I, it's broke.\n\n194\n00:10:43.118 --> 00:10:46.860\n&gt;&gt; We may have to do a little bit\nof that live action debugging.\n\n195\n00:10:46.860 --> 00:10:48.050\n&gt;&gt; You know I love that.\n\n196\n00:10:48.050 --> 00:10:51.400\n&gt;&gt; And this is why I'm not a huge\nproponent of copy and paste or cut and\n\n197\n00:10:51.400 --> 00:10:54.180\npaste is this exact reason.\n\n198\n00:10:54.180 --> 00:10:57.200\nThings start to break and\nnow I have unnecessary debugging\n\n199\n00:10:57.200 --> 00:10:59.380\nthat I might've been able\nto caught as I typed it.\n\n200\n00:10:59.380 --> 00:11:01.880\nNow, that is my personal opinion.\n\n201\n00:11:01.880 --> 00:11:04.340\nSo you may find your\nmileage varies with that.\n\n202\n00:11:04.340 --> 00:11:05.723\nBut now I've got to go back and go.\n\n203\n00:11:05.723 --> 00:11:10.440\nIt says geolocation is not defined.\n\n204\n00:11:10.440 --> 00:11:12.930\nWell, it worked up here in\nthe constructor, okay so\n\n205\n00:11:12.930 --> 00:11:15.870\nI wonder why it was not being defined.\n\n206\n00:11:15.870 --> 00:11:19.465\nWell, let's make sure that I injected it,\nthere is the inject statement, so\n\n207\n00:11:19.465 --> 00:11:20.780\nit should inject.\n\n208\n00:11:20.780 --> 00:11:25.235\nIt is registered because it was\nworking before, there it is,\n\n209\n00:11:25.235 --> 00:11:27.903\nI wonder why it would not work there.\n\n210\n00:11:29.897 --> 00:11:31.400\nYou know what I bet it is?\n\n211\n00:11:31.400 --> 00:11:35.790\nOn construction, I have not\nattached it to the object instance,\n\n212\n00:11:35.790 --> 00:11:37.840\nto the controller instance itself.\n\n213\n00:11:37.840 --> 00:11:42.064\nSo I call geolocation, the only reason\nit worked here on the constructor is cuz\n\n214\n00:11:42.064 --> 00:11:44.250\ngeolocation was an injected variable.\n\n215\n00:11:44.250 --> 00:11:47.422\nSo it called the end of\nscope of that constructor.\n\n216\n00:11:47.422 --> 00:11:51.626\nIt is not available through the remainder\nof the controller instance.\n\n217\n00:11:51.626 --> 00:11:52.231\nOops.\n\n218\n00:11:52.231 --> 00:11:52.836\n&gt;&gt; Oops.\n\n219\n00:11:52.836 --> 00:11:57.210\n&gt;&gt; So,\nthis is what I mean about our set up,\n\n220\n00:11:57.210 --> 00:12:00.600\ngeolocation = geolocation.\n\n221\n00:12:00.600 --> 00:12:05.378\nAnd now, anywhere on methods of\nthe controller object I can call\n\n222\n00:12:05.378 --> 00:12:10.260\nthis.geolocation and\nhave access to it and that's very handy.\n\n223\n00:12:10.260 --> 00:12:13.930\nSo I can say this.geolocation and\nthen getPostion just like so, and\n\n224\n00:12:13.930 --> 00:12:17.170\nI'm actually going to chain\nthat a little bit differently.\n\n225\n00:12:17.170 --> 00:12:20.340\nIt just it feels nicer to me.\n\n226\n00:12:20.340 --> 00:12:24.850\nSo this.geolocation, getPosition,\nthen get the weather.\n\n227\n00:12:24.850 --> 00:12:26.935\nAll right, you have the latitude,\nlongitude, you get the weather.\n\n228\n00:12:26.935 --> 00:12:29.607\nAnd then when you get the weather\ndata bank, set the data and\n\n229\n00:12:29.607 --> 00:12:33.660\nthen that should propagate through\nall of the respective components.\n\n230\n00:12:33.660 --> 00:12:36.830\nSo, if something goes wrong,\nprint out the error.\n\n231\n00:12:36.830 --> 00:12:40.710\nAnd boom, it's already done by\nthe time I got back to the screen.\n\n232\n00:12:40.710 --> 00:12:44.470\nI do love that webpack dev\nserver because it recompiles,\n\n233\n00:12:44.470 --> 00:12:47.380\nit refreshes, and\nhandles that a lot for you.\n\n234\n00:12:47.380 --> 00:12:53.340\nBut you'll notice, that runs by and\nlarge by itself, right?\n\n235\n00:12:53.340 --> 00:12:56.620\nSo, there's some things that I wanted\nto give a little more time to,\n\n236\n00:12:56.620 --> 00:13:00.170\nwe probably could have\nrushed through this.\n\n237\n00:13:00.170 --> 00:13:04.870\nBut now we've learned a little bit about\nthose life cycle hooks, and also we were\n\n238\n00:13:04.870 --> 00:13:10.060\nable to test and use our new geolocation\nservice to use our weather service, to\n\n239\n00:13:10.060 --> 00:13:14.960\nget the weather for the current location\nfrom the browser geolocation object.\n\n240\n00:13:14.960 --> 00:13:16.180\nThat was a lot of talking.\n\n241\n00:13:16.180 --> 00:13:17.430\n&gt;&gt; It was a lot of talking.\n\n242\n00:13:17.430 --> 00:13:21.090\n&gt;&gt; But we are done with\ngeolocating as far as weather.\n\n243\n00:13:21.090 --> 00:13:22.100\n&gt;&gt; Well that's fantastic.\n\n244\n00:13:22.100 --> 00:13:25.725\nSo geolocation service,\nthis has been part two.\n\n245\n00:13:25.725 --> 00:13:28.080\nThere was a part one,\nmake sure you watch both parts.\n\n246\n00:13:28.080 --> 00:13:30.335\nRight before we leave though,\nany last words?\n\n247\n00:13:30.335 --> 00:13:31.539\nCuz you seem like you\nhave some last words.\n\n248\n00:13:31.539 --> 00:13:34.227\n&gt;&gt; I was thinking,\nyou started to say we're done and\n\n249\n00:13:34.227 --> 00:13:37.740\nthen I immediately realized,\nwe're not actually done.\n\n250\n00:13:37.740 --> 00:13:40.940\nBecause we've lost information\nif we go this route.\n\n251\n00:13:42.060 --> 00:13:46.880\nIf you search by location, we know what\nlocation you're looking for, right?\n\n252\n00:13:46.880 --> 00:13:48.448\nNow we've made some assumptions on\nthe Google search portion that we\n\n253\n00:13:48.448 --> 00:13:49.234\nalways get the first one.\n\n254\n00:13:49.234 --> 00:13:51.870\n&gt;&gt; You were playing Colombo with me.\n\n255\n00:13:51.870 --> 00:13:56.820\nCuz I was thinking we might be losing some\ninformation rather geolocation services.\n\n256\n00:13:56.820 --> 00:13:59.900\n&gt;&gt; Yeah, so if we use geolocation we\ndon't, we know the latitude and longitude,\n\n257\n00:13:59.900 --> 00:14:02.240\nbut we don't know the location per say,\nright?\n\n258\n00:14:02.240 --> 00:14:05.560\nWe don't know the New York, New York,\nNew York, whatever it may be.\n\n259\n00:14:05.560 --> 00:14:09.900\nAnd our stuff's out of sync, so our\ngeolocation's done, but we've probably,\n\n260\n00:14:09.900 --> 00:14:14.500\nwe're not completely done with\nthis aspect of our application.\n\n261\n00:14:14.500 --> 00:14:18.530\nSo, as soon as I say I'm finished,\nI realize I'm not actually finished.\n\n262\n00:14:18.530 --> 00:14:21.840\n&gt;&gt; That's right, so you're gonna have\nto pay attention to more weather app\n\n263\n00:14:21.840 --> 00:14:25.640\nwIth Angular JS and Express episodes\nas we go on with the series.\n\n264\n00:14:25.640 --> 00:14:29.800\nThis has been part two\nof geolocation service.\n\n265\n00:14:29.800 --> 00:14:34.617\nMake sure you watch part one as well,\nand thank you for watching DevPro.TV.\n\n266\n00:14:34.617 --> 00:14:36.440\nRemember a good devpro is always learning.\n\n267\n00:14:36.440 --> 00:14:37.470\nI'm Zach Memis.\n\n268\n00:14:37.470 --> 00:14:38.410\n&gt;&gt; And I'm Justin Nelson.\n\n269\n00:14:38.410 --> 00:14:40.425\n&gt;&gt; And we will see you soon.\n\n270\n00:14:40.425 --> 00:14:44.991\n[MUSIC]\n\n",
          "vimeoId": "227421232"
        },
        {
          "description": "Justin and Zach have a discussion about the location look-up to the proxy, adding the ability to look-up the location when using the latitude/longitude look-up, changing how the proxy works, making changes to the client application, using 'Google Geocode,' building the look-up using the Geocode API, and making changes to the Angular Application.",
          "length": "1495",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-12-1-adding_location_lookup_to_proxy-072717-PGM.00_30_07_27.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-12-1-adding_location_lookup_to_proxy-072717-PGM.00_30_07_27.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-12-1-adding_location_lookup_to_proxy-072717-PGM.00_30_07_27.Still001-sm.jpg",
          "title": "Adding Location Lookup to Proxy",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.980 --> 00:00:16.653\nHey, thank you for choosing DevProTV,\nhelping you learn wherever you go.\n\n3\n00:00:16.653 --> 00:00:18.508\nI'm your host, Zach Memos,\n\n4\n00:00:18.508 --> 00:00:22.453\nas we continue on with Weather App\nwith AngularJS and Express.\n\n5\n00:00:22.453 --> 00:00:25.910\nThis episode,\nwe're adding location lookup to proxy.\n\n6\n00:00:25.910 --> 00:00:27.631\nNow, who's gonna tell us how to do that?\n\n7\n00:00:27.631 --> 00:00:28.813\nOur very own Justin.\n\n8\n00:00:28.813 --> 00:00:30.062\nJustin, good to see you sir.\n\n9\n00:00:30.062 --> 00:00:32.385\n&gt;&gt; Well, I am so glad you introduced\nme because you were like,\n\n10\n00:00:32.385 --> 00:00:33.863\nwho is gonna tell us this-\n&gt;&gt; This guy-\n\n11\n00:00:33.863 --> 00:00:34.383\n&gt;&gt; And I was like-\n\n12\n00:00:34.383 --> 00:00:35.222\n&gt;&gt; Not me-\n\n13\n00:00:35.222 --> 00:00:36.280\n&gt;&gt; I'm in the wrong spot.\n\n14\n00:00:36.280 --> 00:00:37.810\nBut nah, I jest.\n\n15\n00:00:37.810 --> 00:00:38.930\nHow are you today, Zach?\n\n16\n00:00:38.930 --> 00:00:41.588\n&gt;&gt; I'm doing great, and\nI'm glad we're moving on with building our\n\n17\n00:00:41.588 --> 00:00:44.115\nweather app cuz this is getting more and\nmore exciting as we go.\n\n18\n00:00:44.115 --> 00:00:47.510\nNow, I know that we were talking\nbeforehand about adding the proxy, but\n\n19\n00:00:47.510 --> 00:00:49.022\nhaven't we already done that?\n\n20\n00:00:49.022 --> 00:00:51.125\nI mean, isn't this something\nthat we've already done?\n\n21\n00:00:51.125 --> 00:00:53.723\n&gt;&gt; Yeah, and to some extent,\nthis may be a little confusing.\n\n22\n00:00:53.723 --> 00:00:56.881\nWell, I'll just be up front\ntitling is hard, right?\n\n23\n00:00:56.881 --> 00:01:00.793\nComing up with descriptions that\nare concise to a few words is hard.\n\n24\n00:01:00.793 --> 00:01:06.602\nUltimately what we want to do is something\nthat was in the previous episode.\n\n25\n00:01:06.602 --> 00:01:09.395\nWe lost some information when\nwe look up by geolocation but\n\n26\n00:01:09.395 --> 00:01:11.853\nbecause that's based on latitude and\nlongitude.\n\n27\n00:01:11.853 --> 00:01:13.591\n&gt;&gt; Right.\n&gt;&gt; So we get the weather but\n\n28\n00:01:13.591 --> 00:01:16.136\nwe don't get to keep the location, right?\n\n29\n00:01:16.136 --> 00:01:20.148\nSo it would almost be nice if\ninstead we get to keep that and\n\n30\n00:01:20.148 --> 00:01:22.752\nwe're gonna try to normalize that.\n\n31\n00:01:22.752 --> 00:01:25.563\nThere may be some things that\nwe have to fix later on.\n\n32\n00:01:25.563 --> 00:01:29.085\nBut ultimately, we only wanna keep\nlocation and location, weather and\n\n33\n00:01:29.085 --> 00:01:31.292\nweather, not just latitude and longitude.\n\n34\n00:01:31.292 --> 00:01:36.550\nSo we wanna keep all of that state\nkind of uniform in nature, right?\n\n35\n00:01:36.550 --> 00:01:40.298\nSo our ultimate goal is to now,\nwhen you ask for latitude and longitude,\n\n36\n00:01:40.298 --> 00:01:42.890\nlet me just go ahead and\ntake a take a quick detour.\n\n37\n00:01:42.890 --> 00:01:46.892\nAnd we go over to the Google Geo-code,\nI think it's Geo-reverse Geo-coding,\n\n38\n00:01:46.892 --> 00:01:49.730\ncuz we're gonna give it latitude and\nlongitude.\n\n39\n00:01:49.730 --> 00:01:55.100\nI always get those mixed up, so sorry\nif you are a geography geo-sciences and\n\n40\n00:01:55.100 --> 00:01:57.341\nyou're like, that's wrong.\n\n41\n00:01:57.341 --> 00:01:58.921\nI realize there is a difference.\n\n42\n00:01:58.921 --> 00:02:02.902\nI have somehow betwixt\nthem from time to time.\n\n43\n00:02:02.902 --> 00:02:06.031\nBut we want to use the latitude and\nlongitude to get just the city name,\n\n44\n00:02:06.031 --> 00:02:07.780\nlike you would normally look up.\n\n45\n00:02:07.780 --> 00:02:11.509\nThat's what I'm going to default to\n&amp;nbsp;There's a lot of validation and\n\n46\n00:02:11.509 --> 00:02:14.966\nerror-checking we can do, and\nalso get the weather while we're at it.\n\n47\n00:02:14.966 --> 00:02:18.580\nBecause that's something we're ultimately\nrequesting and then merge those two.\n\n48\n00:02:18.580 --> 00:02:23.136\nNow, because of the nature of this, we're\ngonna kind of have two things going on\n\n49\n00:02:23.136 --> 00:02:27.237\nhere at once and I know you're like,\nI don't know how I feel about that.\n\n50\n00:02:27.237 --> 00:02:31.939\nWell, it's kinda the nature of the beast\nhere because we can't do one without\n\n51\n00:02:31.939 --> 00:02:32.662\nthe other.\n\n52\n00:02:32.662 --> 00:02:35.572\nBecause it's all gonna be\nhandled in a single request.\n\n53\n00:02:35.572 --> 00:02:38.451\n&gt;&gt; So we're gonna be adding\nlocation lookup to our proxy, so\n\n54\n00:02:38.451 --> 00:02:40.231\nhow much work is that going to take?\n\n55\n00:02:40.231 --> 00:02:42.960\n&gt;&gt; So\nultimately we got some weirdness going on.\n\n56\n00:02:42.960 --> 00:02:44.411\nWe are going to get the latitude and\nlongitude.\n\n57\n00:02:44.411 --> 00:02:47.006\nLet's set the story right, set the stage.\n\n58\n00:02:47.006 --> 00:02:50.864\nGeolocation on page load is going to\nsend over a latitude and longitude.\n\n59\n00:02:50.864 --> 00:02:55.632\nAnd when we get that, well the latitude\nand longitude is normally peeled off.\n\n60\n00:02:55.632 --> 00:02:58.606\nAnd as a matter of fact,\nif we can take a look at my screen here,\n\n61\n00:02:58.606 --> 00:03:00.803\njust as a review of how\nthis works currently.\n\n62\n00:03:00.803 --> 00:03:03.830\nWe get latitude and longitude as\nthe params, we build this URL,\n\n63\n00:03:03.830 --> 00:03:05.523\nwe go get the weather and it's fun.\n\n64\n00:03:05.523 --> 00:03:07.684\nGreat, works.\n\n65\n00:03:07.684 --> 00:03:14.291\nHowever, in order to get the weather and\nto get the location,\n\n66\n00:03:14.291 --> 00:03:18.620\nright, the city-state combination.\n\n67\n00:03:18.620 --> 00:03:22.290\nIf I do this,\nI send this request right here.\n\n68\n00:03:22.290 --> 00:03:23.970\nI could use promise chaining.\n\n69\n00:03:23.970 --> 00:03:26.182\nOr it looks like it could\ndo promise chaining.\n\n70\n00:03:26.182 --> 00:03:32.356\nBut let's say I get the weather and\nthen I come over here and then I get the,\n\n71\n00:03:32.356 --> 00:03:38.450\nI have to return the weather, or\nexcuse me, return to get the location.\n\n72\n00:03:38.450 --> 00:03:39.897\nAnd then I do to next thing, but\n\n73\n00:03:39.897 --> 00:03:43.253\nthen I lost the weather information\nbecause I'm returning a promise.\n\n74\n00:03:43.253 --> 00:03:47.271\nAnd just to show you what I mean,\nI'm kinda faking this.\n\n75\n00:03:47.271 --> 00:03:51.639\nIs instead of returning this response,\n\n76\n00:03:51.639 --> 00:03:57.682\nI'm going to return get the weather,\nlike so, right?\n\n77\n00:03:57.682 --> 00:04:02.701\nAnd then that's gonna return a promise and\nthen that's\n\n78\n00:04:02.701 --> 00:04:07.841\ngonna give me the weather data like so,\nif I could spell.\n\n79\n00:04:07.841 --> 00:04:10.410\nSo that will be the weather\ndata on the server side.\n\n80\n00:04:10.410 --> 00:04:15.947\nAnd then when that comes back,\nwell I would need to grab the latitude and\n\n81\n00:04:15.947 --> 00:04:20.767\nthe longitude from there and\nthen go get the actual location.\n\n82\n00:04:20.767 --> 00:04:23.724\nBut that means I'm gonna have to\ncall an axios.get and a .then.\n\n83\n00:04:23.724 --> 00:04:28.324\nAnd then I have this weird promise nesting\nbecause if I try to return it to another\n\n84\n00:04:28.324 --> 00:04:32.113\npromise chain it ends up being that\nthis is kinda hard to combine.\n\n85\n00:04:32.113 --> 00:04:34.140\nNow, you may find a very elegant method.\n\n86\n00:04:34.140 --> 00:04:39.865\nOne of the things that you may be\nthinking about and I thought about it and\n\n87\n00:04:39.865 --> 00:04:45.975\nit just bothers me for some reason is\nI could create this external variable,\n\n88\n00:04:45.975 --> 00:04:50.662\nlike an array or\nmaybe even an object of results, like so.\n\n89\n00:04:50.662 --> 00:04:54.166\nAnd then now that I have results,\nwhen I get to this promise,\n\n90\n00:04:54.166 --> 00:04:58.590\nI could modify this and then I get to\nthis promise I could modify that as well.\n\n91\n00:04:58.590 --> 00:05:01.539\nBut I'm also doing that sequentially.\n\n92\n00:05:01.539 --> 00:05:04.636\nI would really like to be able to go\ngrab both of those at the same time and\n\n93\n00:05:04.636 --> 00:05:05.970\nthen kinda resolve them.\n\n94\n00:05:05.970 --> 00:05:09.852\nSo I'm gonna add some complexity by\nsaying, all right, go get the weather.\n\n95\n00:05:09.852 --> 00:05:12.395\nAnd then I'm also gonna send off for\na request,\n\n96\n00:05:12.395 --> 00:05:14.505\nat the same time to go get the location.\n\n97\n00:05:14.505 --> 00:05:18.258\nAnd then when both of those come back,\nI'll then combine them.\n\n98\n00:05:18.258 --> 00:05:20.558\nBecause if I do this\npromise chaining too much,\n\n99\n00:05:20.558 --> 00:05:23.556\nmaybe I want a little bit of a speed up,\nlittle bit different.\n\n100\n00:05:23.556 --> 00:05:27.956\nBut I could do this, set an object\nas more of an outside scope, and\n\n101\n00:05:27.956 --> 00:05:30.364\nthen modify that object, as well.\n\n102\n00:05:30.364 --> 00:05:32.622\nBut I'm going to use some\nof the power promises,\n\n103\n00:05:32.622 --> 00:05:36.053\nsome of the power of axios in order to\ncombine those, do those all at once.\n\n104\n00:05:36.053 --> 00:05:40.832\nForewarning, forewarning, forewarning,\nsometimes there's some weird\n\n105\n00:05:40.832 --> 00:05:45.609\nfunction calls in order to get this done,\nbecause I have functions returning\n\n106\n00:05:45.609 --> 00:05:50.843\nfunctions that return functions that do\nsome re aggregations and things like that.\n\n107\n00:05:50.843 --> 00:05:55.113\nSo there is some complexity there, but\nif I had not just these two calls, but\n\n108\n00:05:55.113 --> 00:05:56.871\nlet's say I needed ten calls.\n\n109\n00:05:56.871 --> 00:05:58.785\nTo get the response that I needed,\n\n110\n00:05:58.785 --> 00:06:02.943\nI can actually using the method I'm gonna\nshow you you could shoot off all of\n\n111\n00:06:02.943 --> 00:06:06.245\nthose all ten at once and\nthen once all ten of them come back.\n\n112\n00:06:06.245 --> 00:06:08.612\nAnd since we sent concurrently,\n\n113\n00:06:08.612 --> 00:06:12.340\nall ten will take as long\nas the longest one ideally.\n\n114\n00:06:12.340 --> 00:06:16.783\nThere may be there may\nbe differences to that.\n\n115\n00:06:16.783 --> 00:06:18.811\nIf I did them sequentially,\nthen it would take.\n\n116\n00:06:18.811 --> 00:06:20.663\nLet's say each one took half a second.\n\n117\n00:06:20.663 --> 00:06:22.620\nThere was ten of them,\nit would take five seconds.\n\n118\n00:06:22.620 --> 00:06:26.980\nWell, if I send them all at once,\ntotal it would take half a second.\n\n119\n00:06:26.980 --> 00:06:29.832\nSo there's a significant time savings,\nespecially as it scales.\n\n120\n00:06:29.832 --> 00:06:33.261\nAnd if I continue adding services,\nthat may very well be the case.\n\n121\n00:06:33.261 --> 00:06:37.306\nSo there's kind of a, we're going to\nget it done because our app needs it,\n\n122\n00:06:37.306 --> 00:06:41.421\nbut also to show you a little bit\ndifferent way to handle a similar problem.\n\n123\n00:06:41.421 --> 00:06:45.574\n&gt;&gt; So it sounds like there's a few\nchanges there, so what are our next step.\n\n124\n00:06:45.574 --> 00:06:49.990\n&gt;&gt; Well, a few changes, that might be\na little understatement of the day, but\n\n125\n00:06:49.990 --> 00:06:53.910\nour next steps is, well,\nlet's just try to get started right?\n\n126\n00:06:53.910 --> 00:06:56.497\nNow we may have to change the client,\n\n127\n00:06:56.497 --> 00:07:00.851\ndepending on how our results come back,\nto get things going.\n\n128\n00:07:00.851 --> 00:07:06.447\nHowever, we're gonna try our best not to,\nas far as handling the weather data,\n\n129\n00:07:06.447 --> 00:07:10.580\nbut we may have to add some\nto the client even then.\n\n130\n00:07:10.580 --> 00:07:14.946\nAnd what I mean by change the client\nis if I come over here to the client,\n\n131\n00:07:14.946 --> 00:07:19.608\ntypically in the app component controller\nwhen I call this, this is pretty\n\n132\n00:07:19.608 --> 00:07:24.583\neasy cuz let's say this .data equals\nweatherdata that's easy, it's done.\n\n133\n00:07:24.583 --> 00:07:29.771\nI'm not trying not to say, well, do the\nweatherdata.data, I'm trying not to add\n\n134\n00:07:29.771 --> 00:07:34.980\nadditional complexity on the front end and\nkinda all off shooting that to the proxy.\n\n135\n00:07:34.980 --> 00:07:37.742\nBut you know sometimes you\njust can't get around it.\n\n136\n00:07:37.742 --> 00:07:41.162\nWe'll try our best, and\nyou'll never know what'll happen.\n\n137\n00:07:41.162 --> 00:07:44.931\nSo, if I look at this, our first step.\n\n138\n00:07:44.931 --> 00:07:47.866\nI'm gonna get rid of this results thing\ncuz I'm not actually gonna use this.\n\n139\n00:07:47.866 --> 00:07:52.520\nOur first step is to think about when\nsomeone sends over latitude and longitude,\n\n140\n00:07:52.520 --> 00:07:55.337\nI actually need that for\nboth of these requests.\n\n141\n00:07:55.337 --> 00:07:56.997\nAnd what do I mean by\nboth of the requests?\n\n142\n00:07:56.997 --> 00:08:03.108\nI'm going to make the request\nto Our Dark Sky API.\n\n143\n00:08:03.108 --> 00:08:08.960\nBut I'm also going to make\na request to the Geocode API, okay?\n\n144\n00:08:08.960 --> 00:08:13.720\nNow, as a result, there's going to\nbe a little bit of duplication here.\n\n145\n00:08:15.830 --> 00:08:19.820\nThe reason being is I've\nhad this ampersand address.\n\n146\n00:08:21.170 --> 00:08:23.340\nLooking back, I probably should\nhave just left that off and\n\n147\n00:08:23.340 --> 00:08:25.340\nthen added that when I needed it.\n\n148\n00:08:25.340 --> 00:08:28.200\nBut I don't want to go back and\nrefactor all of the application.\n\n149\n00:08:28.200 --> 00:08:29.940\nSo I'm going to have\na little bit of duplication.\n\n150\n00:08:29.940 --> 00:08:31.060\nHave a different variable.\n\n151\n00:08:31.060 --> 00:08:33.990\nThen instead of address, I'm gonna\nchange this to latitude and longitude.\n\n152\n00:08:33.990 --> 00:08:35.370\nSo I'm gonna go bing.\n\n153\n00:08:35.370 --> 00:08:36.100\nWhich is duplicate.\n\n154\n00:08:36.100 --> 00:08:39.550\nAnd I'm gonna say base rev geo.\n\n155\n00:08:39.550 --> 00:08:41.210\nReverse geocode.\n\n156\n00:08:41.210 --> 00:08:45.520\nAnd then I'm going to say lat and\nlng, all right?\n\n157\n00:08:45.520 --> 00:08:47.370\nThese are exactly\nthe same except that one.\n\n158\n00:08:48.720 --> 00:08:54.340\nYes, I could refactor these two\nfunctions to only use that one,\n\n159\n00:08:54.340 --> 00:08:55.620\nand then make some tweaks.\n\n160\n00:08:57.495 --> 00:08:58.950\nIn the sake of brevity and\n\n161\n00:08:58.950 --> 00:09:01.810\nfocusing on the important task at hand,\nI'm not going to do that.\n\n162\n00:09:03.380 --> 00:09:05.230\nSo we get the latitude and longitude.\n\n163\n00:09:05.230 --> 00:09:06.660\nIt comes in when the request comes in.\n\n164\n00:09:06.660 --> 00:09:10.330\nWe build this URL, and\nthis URL originally,\n\n165\n00:09:10.330 --> 00:09:13.749\nwe were just getting the weather,\nso this URL is the weather, okay?\n\n166\n00:09:13.749 --> 00:09:18.100\nSo the response.data,\nthat is the weather data.\n\n167\n00:09:19.610 --> 00:09:23.630\nWe, during this then block,\nmade an additional send back.\n\n168\n00:09:23.630 --> 00:09:25.319\nWe just sent it all the way back.\n\n169\n00:09:26.500 --> 00:09:29.290\nOkay, now a word of warning.\n\n170\n00:09:29.290 --> 00:09:32.780\nThe reverse geocode lookup\nhas to have certain amount of\n\n171\n00:09:32.780 --> 00:09:35.090\ndecimal points in order to do the lookup.\n\n172\n00:09:35.090 --> 00:09:37.150\nYou may have nothing there.\n\n173\n00:09:37.150 --> 00:09:39.670\nSo we may have to handle that.\n\n174\n00:09:39.670 --> 00:09:42.990\nSo if I say 30, negative 40,\n\n175\n00:09:42.990 --> 00:09:46.510\nit's very unlikely that you're\nexactly at 30, negative 40.\n\n176\n00:09:46.510 --> 00:09:51.057\nAnd then sometimes the Google will reverse\ngeocode look up kinda goes nothing,\n\n177\n00:09:51.057 --> 00:09:52.672\ngot nothing there.\n\n178\n00:09:52.672 --> 00:09:55.990\n&gt;&gt; [LAUGH]\n&gt;&gt; So, luckily, because we know that now\n\n179\n00:09:55.990 --> 00:10:00.121\nour latitude and longitude requests are\ngonna come from the geolocation services\n\n180\n00:10:00.121 --> 00:10:04.260\nin our browser, we're going to\nhave a lot of decimal points.\n\n181\n00:10:04.260 --> 00:10:09.220\nSo we're going to assume for now, until\nit becomes a problem, and I did forewarn\n\n182\n00:10:09.220 --> 00:10:14.020\nyou that several times there may be some\nthings that I've made sacrifices on for\n\n183\n00:10:14.020 --> 00:10:15.416\nthe purposes of learning.\n\n184\n00:10:15.416 --> 00:10:17.000\n&gt;&gt; Danger, danger Will Robinson.\n\n185\n00:10:17.000 --> 00:10:17.870\n&gt;&gt; Danger Will Robinson.\n\n186\n00:10:17.870 --> 00:10:19.630\nThat was an interesting show.\n\n187\n00:10:19.630 --> 00:10:20.510\n&gt;&gt; It was.\n\n188\n00:10:20.510 --> 00:10:21.970\n&gt;&gt; Yeah, it was very interesting.\n\n189\n00:10:21.970 --> 00:10:23.340\nKind of at times creepy.\n\n190\n00:10:23.340 --> 00:10:25.560\n&gt;&gt; They had an interesting\ngeolocation there.\n\n191\n00:10:25.560 --> 00:10:26.360\n&gt;&gt; They did.\n\n192\n00:10:26.360 --> 00:10:29.820\nSo I made it get to this app,\nor excuse me to this URL.\n\n193\n00:10:31.440 --> 00:10:37.000\nAnd I want to make it get\nto this base rev geo URL.\n\n194\n00:10:38.850 --> 00:10:41.968\nI wanna get both of them and\nkinda combine them.\n\n195\n00:10:41.968 --> 00:10:43.555\nSo, let's see here.\n\n196\n00:10:43.555 --> 00:10:47.988\nLocation URL is\n\n197\n00:10:47.988 --> 00:10:53.786\nthe baseRevgeo/,\n\n198\n00:10:53.786 --> 00:11:00.350\nand then what is this?\n\n199\n00:11:00.350 --> 00:11:05.690\nOkay, so I need, at the end here,\nso the way I've constructed this,\n\n200\n00:11:05.690 --> 00:11:11.600\nI need latitude, longitude.\n\n201\n00:11:11.600 --> 00:11:13.385\nOkay, so there's my two URLs.\n\n202\n00:11:14.710 --> 00:11:18.580\nOkay, so\nnow I've constructed both of those URLs.\n\n203\n00:11:18.580 --> 00:11:20.240\nBut I would have to do one\nright after the other, and\n\n204\n00:11:20.240 --> 00:11:22.304\nwe've already discussed that earlier\nin the episode, that that would come,\n\n205\n00:11:24.065 --> 00:11:28.105\nthere is a way to possibly get\nthat force in there to do it.\n\n206\n00:11:28.105 --> 00:11:32.695\nBut I'm going to comment this out for\nnow, just so we can reference it.\n\n207\n00:11:32.695 --> 00:11:39.590\nAnd what I want is to make kind of our,\nlet's just call it gets.\n\n208\n00:11:39.590 --> 00:11:44.814\nAnd I'm going to build an array that\nhas this URL, and this location URL.\n\n209\n00:11:44.814 --> 00:11:50.330\nAnd I'm going to map over\nit with axois.get, okay?\n\n210\n00:11:50.330 --> 00:11:54.928\nNow, I'm going to console.log these gets.\n\n211\n00:11:54.928 --> 00:11:59.510\nAnd what that means is that our proxy\nis now broken, just so we're clear.\n\n212\n00:11:59.510 --> 00:12:00.800\nBut I want you to see what that is.\n\n213\n00:12:00.800 --> 00:12:05.170\nSo I'm going to come over here, and I'm\njust going to hit this proxy end point.\n\n214\n00:12:05.170 --> 00:12:08.780\nBut really come over here to look, okay?\n\n215\n00:12:08.780 --> 00:12:11.400\nPromise pending, promise pending.\n\n216\n00:12:11.400 --> 00:12:13.070\nNow, the request failed.\n\n217\n00:12:14.780 --> 00:12:18.830\nLooks like I got some issues here,\nbut that might be for another reason.\n\n218\n00:12:18.830 --> 00:12:20.730\nSo we'll have to check that out.\n\n219\n00:12:20.730 --> 00:12:22.030\nSo there's our two GETs.\n\n220\n00:12:22.030 --> 00:12:23.630\nWe have two promises and an array.\n\n221\n00:12:25.310 --> 00:12:27.140\nWell, since I have two\npromises in an array,\n\n222\n00:12:27.140 --> 00:12:31.210\nit'd be nice if I can kinda pull these\ninto a single promise, call then,\n\n223\n00:12:31.210 --> 00:12:34.510\nand then extract the results back out,\nokay?\n\n224\n00:12:34.510 --> 00:12:36.850\nSo two promises, pull them in,\n\n225\n00:12:36.850 --> 00:12:41.758\nthen extract the results and\nhandle those accordingly, okay?\n\n226\n00:12:41.758 --> 00:12:46.805\nSo, with that, Axios has this\n\n227\n00:12:46.805 --> 00:12:53.050\naxios.all, and that takes a list or\nan array of promises,\n\n228\n00:12:53.050 --> 00:12:57.200\nand kind of does that reduction\ninto a single promise, okay?\n\n229\n00:12:57.200 --> 00:13:01.640\nAnd then we can call .then and\nget the results.\n\n230\n00:13:01.640 --> 00:13:03.960\nLet's see what the results are.\n\n231\n00:13:03.960 --> 00:13:06.866\nAnd that'll help us narrow\ndown what's going on.\n\n232\n00:13:09.691 --> 00:13:12.240\nSo there we go, it just restarted.\n\n233\n00:13:12.240 --> 00:13:13.860\nIt made that request.\n\n234\n00:13:16.160 --> 00:13:17.110\nRefresh.\n\n235\n00:13:17.110 --> 00:13:18.870\nNo, not refresh there.\n\n236\n00:13:18.870 --> 00:13:19.592\nRefresh here.\n\n237\n00:13:19.592 --> 00:13:25.180\nAnd when we come over here, and it says\nunhandled promise rejection warning.\n\n238\n00:13:25.180 --> 00:13:26.520\nRequest failed with status 400.\n\n239\n00:13:26.520 --> 00:13:28.710\nAll right, so we've kinda hit a,\n\n240\n00:13:28.710 --> 00:13:33.140\nwe've kinda hit a point where we gotta\nfigure out what's causing that 400.\n\n241\n00:13:33.140 --> 00:13:38.650\nAnd since I just added this location URL,\nI'm pretty sure it's the location URL.\n\n242\n00:13:40.480 --> 00:13:42.570\nThe request to it, okay?\n\n243\n00:13:42.570 --> 00:13:43.864\nSo, lat lon.\n\n244\n00:13:43.864 --> 00:13:46.332\nSo I'm gonna come back and\ndebug here a little bit.\n\n245\n00:13:49.529 --> 00:13:55.199\nWhen you add complexity,\nthings are not always just nice and tidy.\n\n246\n00:13:55.199 --> 00:13:57.080\nAnd there we go.\n\n247\n00:13:57.080 --> 00:13:58.250\nI figured it out.\n\n248\n00:13:58.250 --> 00:13:59.600\nIt's right there.\n\n249\n00:13:59.600 --> 00:14:02.770\n&gt;&gt; Awesome.\n&gt;&gt; So if I grab this and\n\n250\n00:14:02.770 --> 00:14:09.524\nI paste it over here, boom, invalid\nrequest, invalid lat long parameter.\n\n251\n00:14:09.524 --> 00:14:16.400\nSo if I look right up\nhere latlng equal slash.\n\n252\n00:14:16.400 --> 00:14:19.040\nAnd what I've done is during\nmy construction of the URL,\n\n253\n00:14:19.040 --> 00:14:21.240\nI accidentally added a slash there.\n\n254\n00:14:21.240 --> 00:14:24.580\nBut those are equals, so\nthat was my whoopsie daisy.\n\n255\n00:14:24.580 --> 00:14:28.770\nThat should fix it, and\nI should no longer get that bad request.\n\n256\n00:14:28.770 --> 00:14:31.810\nSo I should get all the gets and\nget results here.\n\n257\n00:14:31.810 --> 00:14:37.730\nSo if I come back over to my proxy,\nand I refresh, there we go.\n\n258\n00:14:37.730 --> 00:14:39.910\nThere are my two results.\n\n259\n00:14:39.910 --> 00:14:42.900\nAnd those are the resolved promises, okay?\n\n260\n00:14:44.750 --> 00:14:48.870\nSo what I can do is I can map\nover each one of those, and\n\n261\n00:14:48.870 --> 00:14:51.510\nthen send the data back, all right?\n\n262\n00:14:53.176 --> 00:14:54.650\nSo what do I mean?\n\n263\n00:14:54.650 --> 00:14:57.740\nI'm going to return results.map.\n\n264\n00:14:57.740 --> 00:15:02.125\nAnd this is not the easiest one.\n\n265\n00:15:02.125 --> 00:15:07.256\nResults.map, and for each result\n\n266\n00:15:07.256 --> 00:15:12.394\njust give me result.data, okay?\n\n267\n00:15:12.394 --> 00:15:14.190\nAnd since I'm returning there,\n\n268\n00:15:14.190 --> 00:15:19.011\nthis is an implicit return with these\narrow functions, I can do another .then.\n\n269\n00:15:19.011 --> 00:15:21.971\nAnd then finals,\nlet's just call them finals.\n\n270\n00:15:21.971 --> 00:15:22.786\nNaming's hard.\n\n271\n00:15:22.786 --> 00:15:25.692\nSo console.logfinals.\n\n272\n00:15:28.784 --> 00:15:31.727\nAll right, so if I hit it again,\nit's still broken.\n\n273\n00:15:31.727 --> 00:15:36.849\nBut if I scroll down,\nI now have just the data that, well,\n\n274\n00:15:36.849 --> 00:15:42.620\nthere's one piece of data, and\nthen there is, where did you go?\n\n275\n00:15:43.740 --> 00:15:47.890\nSo, wait for it,\nwe should probably forward it on back,\n\n276\n00:15:47.890 --> 00:15:51.060\nbecause it looks like there's\nsome shenanigans going on here.\n\n277\n00:15:51.060 --> 00:15:52.030\n&gt;&gt; Not shenanigans!\n\n278\n00:15:52.030 --> 00:15:53.341\n&gt;&gt; Yeah, shenanigans.\n\n279\n00:15:53.341 --> 00:15:55.622\n&gt;&gt; Dear.\n&gt;&gt; One of my favorite places to eat.\n\n280\n00:15:55.622 --> 00:15:57.623\nI'm joking,\nsome of you know what reference that is.\n\n281\n00:15:57.623 --> 00:15:59.093\n&gt;&gt; Yes, I do.\n\n282\n00:15:59.093 --> 00:16:04.080\nSo let's just go ahead and\nres.send that back.\n\n283\n00:16:04.080 --> 00:16:11.540\nres.finals so res.json finals.\n\n284\n00:16:11.540 --> 00:16:16.630\nSo I can look at it with easy formatting,\ninstead of console logging.\n\n285\n00:16:16.630 --> 00:16:19.480\nNow, I did forewarn you up front,\nI'm pretty sure I said this Zack.\n\n286\n00:16:19.480 --> 00:16:20.680\nYou can tell me if I didn't,\n\n287\n00:16:20.680 --> 00:16:22.950\nI said this is gonna be a fair\namount of complexity, did I not?\n\n288\n00:16:22.950 --> 00:16:25.120\n&gt;&gt; You indeed said they'd be\na fair amount of complexity.\n\n289\n00:16:25.120 --> 00:16:26.560\n&gt;&gt; Yeah, very well.\n&gt;&gt; You did.\n\n290\n00:16:26.560 --> 00:16:29.090\n&gt;&gt; So I did not lie and\nsince I did not lie-\n\n291\n00:16:29.090 --> 00:16:30.300\n&gt;&gt; You did not lie.\n\n292\n00:16:30.300 --> 00:16:31.480\n&gt;&gt; Well, we'll keep on going on here.\n\n293\n00:16:31.480 --> 00:16:34.550\nSo, there we go, aha,\nit actually comes back.\n\n294\n00:16:34.550 --> 00:16:36.540\nSo now notice I have these two objects,\n\n295\n00:16:36.540 --> 00:16:41.700\nthe first one is the weather,\nthe second one is the results, all right.\n\n296\n00:16:41.700 --> 00:16:46.109\nSo, on the weather I actually wanna\nsend all of that back ,but for\n\n297\n00:16:46.109 --> 00:16:50.597\nthe results, excuse me,\nthe results being the data or excuse me,\n\n298\n00:16:50.597 --> 00:16:52.940\nthe location lookup from Google.\n\n299\n00:16:54.100 --> 00:16:59.950\nWhat I really want to do\nis destructure this and\n\n300\n00:16:59.950 --> 00:17:04.303\nsay, weatherData and googData.\n\n301\n00:17:04.303 --> 00:17:07.270\nAnd I can do that through\nthe destructuring assignment.\n\n302\n00:17:07.270 --> 00:17:13.510\nAnd now I can run this function and\nhopefully this will all come to fruition.\n\n303\n00:17:15.020 --> 00:17:21.380\nSo grab the results, map over them, .then\nweather data goob data, split them apart.\n\n304\n00:17:21.380 --> 00:17:26.630\nAnd I'm just gonna res,\nexcuse me I'm gonna grab\n\n305\n00:17:26.630 --> 00:17:31.630\nthe weather data and\nadd a location parameter,\n\n306\n00:17:31.630 --> 00:17:41.000\nweatherData.location=googData.results(0),\nwhich is the first one.\n\n307\n00:17:41.000 --> 00:17:43.020\nSo there's the zero one.\n\n308\n00:17:44.210 --> 00:17:46.550\nAnd what do I want from results?\n\n309\n00:17:47.880 --> 00:17:50.170\nWell, I don't want address components.\n\n310\n00:17:50.170 --> 00:17:52.749\nI don't know if I want formatted address.\n\n311\n00:17:55.310 --> 00:18:01.050\nIs the, actually I do want\naddress component, I'm sorry.\n\n312\n00:18:01.050 --> 00:18:04.280\nI do, you know what?\n\n313\n00:18:04.280 --> 00:18:09.680\nI'll just send formated address and\nthen just leave it be.\n\n314\n00:18:09.680 --> 00:18:11.830\nYou'll get a little more\nthen you normally would.\n\n315\n00:18:11.830 --> 00:18:13.460\nSo there'll be some updating there.\n\n316\n00:18:13.460 --> 00:18:17.430\nSo there we go, Rock Springs, Texas.\n\n317\n00:18:17.430 --> 00:18:19.470\n30 negative 100.\n\n318\n00:18:19.470 --> 00:18:22.070\nSo this isn't always easy for these.\n\n319\n00:18:24.290 --> 00:18:28.447\nNotice the latitude and\nlongitude is not quite 30 by 100.\n\n320\n00:18:28.447 --> 00:18:33.322\nThere's some wiggle room there, so\nit's not perfectly round numbers, but\n\n321\n00:18:33.322 --> 00:18:35.430\nultimately you will not notice.\n\n322\n00:18:35.430 --> 00:18:40.185\nSo I'm gonna grab the results, and\nthen from the first one, I'm gonna grab\n\n323\n00:18:40.185 --> 00:18:45.181\nAddressComponent, not AddressComponent,\nexcuse me, formattedAddress.\n\n324\n00:18:48.552 --> 00:18:51.040\nGoing through these is\nrough going sometimes.\n\n325\n00:18:51.040 --> 00:18:53.340\n&gt;&gt; Justin, I think you need a V8.\n\n326\n00:18:53.340 --> 00:18:54.510\n&gt;&gt; I think I do as well.\n\n327\n00:18:54.510 --> 00:18:58.591\nSo res.status(200).json and\n\n328\n00:18:58.591 --> 00:19:07.180\nI'm gonna send back the weather data\nbecause I've mutated that weather data.\n\n329\n00:19:07.180 --> 00:19:09.430\nIt's not necessarily something I wanna do,\nbut\n\n330\n00:19:09.430 --> 00:19:14.000\nI've mutated the weather data to\ncontain this location parameter.\n\n331\n00:19:14.000 --> 00:19:17.140\nWhat we should see is the exact same\nthing we've normally been seeing,\n\n332\n00:19:17.140 --> 00:19:20.460\nexcept now there's a location field\nthat was not normally there and\n\n333\n00:19:20.460 --> 00:19:24.180\nI've combined these responses instead of\nhaving to handle that on the front end.\n\n334\n00:19:24.180 --> 00:19:29.270\nSo if I refresh,\nit looks like I broke my site here.\n\n335\n00:19:29.270 --> 00:19:33.790\nWaiting for, unexpected token.\n\n336\n00:19:33.790 --> 00:19:35.570\nIt will not let me destructure there.\n\n337\n00:19:38.110 --> 00:19:46.694\nAll right, so what we'll do is we'll\njust have to move that to finals and\n\n338\n00:19:46.694 --> 00:19:52.350\nthen constWeatherData, googData = finals.\n\n339\n00:19:52.350 --> 00:19:53.690\nNow it'll let me destructure.\n\n340\n00:19:53.690 --> 00:19:55.110\nI know it'll let me do it there,\n\n341\n00:19:55.110 --> 00:19:58.124\nI was pretty sure it would let me do\nthis during a fat arrow function.\n\n342\n00:19:58.124 --> 00:20:00.490\nAnd then I refresh and boom, there we go.\n\n343\n00:20:01.600 --> 00:20:07.080\nHowever, let's see if we\nin fact have a location.\n\n344\n00:20:07.080 --> 00:20:09.750\nAnd now we've modified that result and\n\n345\n00:20:09.750 --> 00:20:11.290\nit's kind of behind my\nhead a little bit but\n\n346\n00:20:11.290 --> 00:20:15.770\nnotice there's this location portion that\nis County Rd 230, Rocksprings, TX 788.\n\n347\n00:20:15.770 --> 00:20:18.050\nNot only do I have latitude and\n\n348\n00:20:18.050 --> 00:20:22.710\nlongitude returned to me, I also have\nlocation returned to me from the look up.\n\n349\n00:20:22.710 --> 00:20:25.280\nSo, it does not appear\nthat I have went and\n\n350\n00:20:25.280 --> 00:20:29.890\nlooked up through multiple services,\nbut now I've added this.\n\n351\n00:20:29.890 --> 00:20:31.630\nSo there's a little bit\nof tidying up to do,\n\n352\n00:20:31.630 --> 00:20:33.710\nand maybe a little bit of\ntweaking on the front end.\n\n353\n00:20:33.710 --> 00:20:37.130\nWe need to make sure that it still\nworks in our other application.\n\n354\n00:20:37.130 --> 00:20:38.325\nWhat is the tidying up?\n\n355\n00:20:38.325 --> 00:20:43.582\n.catch and\nif I have an error I'm just gonna\n\n356\n00:20:43.582 --> 00:20:50.556\nres.statust(500).json and\nthen send the error.\n\n357\n00:20:50.556 --> 00:20:54.142\nNow, ultimately I would probably send\nthat to an error handler middleware but\n\n358\n00:20:54.142 --> 00:20:56.480\nwe're gonna leave that there for now.\n\n359\n00:20:56.480 --> 00:21:02.410\nSo that was a lot of work, and\nyou could tell it was very difficult Zack.\n\n360\n00:21:02.410 --> 00:21:05.530\nBut we got it working\nas far the proxy side.\n\n361\n00:21:05.530 --> 00:21:10.240\n&gt;&gt; Now that's all working we do need\nto add some make some changes rather\n\n362\n00:21:10.240 --> 00:21:12.360\nto the Angular application though right.\n\n363\n00:21:12.360 --> 00:21:15.920\n&gt;&gt; Yeah we're gonna start those changes\njust to make sure it still works but,\n\n364\n00:21:15.920 --> 00:21:20.520\nyou never know those changes may\ncontinue to crop up ,as we see them,\n\n365\n00:21:20.520 --> 00:21:22.330\nas we continue to add\nfeatures to the front end.\n\n366\n00:21:22.330 --> 00:21:25.960\nBut ,I wanted to make sure I resolved\nthis first before moving on.\n\n367\n00:21:25.960 --> 00:21:26.590\n&gt;&gt; Aha.\n\n368\n00:21:26.590 --> 00:21:29.870\n&gt;&gt; So, if we come back to my screen, we're\ngoing to make sure the angular app still\n\n369\n00:21:29.870 --> 00:21:30.730\nworks\n&gt;&gt; Yes.\n\n370\n00:21:30.730 --> 00:21:32.491\n&gt;&gt; And where we left it off and\n\n371\n00:21:32.491 --> 00:21:38.870\nmaybe do a quick little tweak because\nultimately what I wanted, the problem was.\n\n372\n00:21:38.870 --> 00:21:42.970\nWhen I refreshed here,\nit would look up for\n\n373\n00:21:42.970 --> 00:21:45.950\nthis location, but\nit wouldn't update the location.\n\n374\n00:21:47.010 --> 00:21:48.170\n&gt;&gt; Right?\n\n375\n00:21:48.170 --> 00:21:50.610\nSo, Palo Alto, California.\n\n376\n00:21:50.610 --> 00:21:52.433\nThat is not this latitude and longitude,\n\n377\n00:21:52.433 --> 00:21:54.737\nbecause it's looking up\nby geolocation services.\n\n378\n00:21:54.737 --> 00:21:56.050\nt's actually something else.\n\n379\n00:21:56.050 --> 00:21:59.010\nSo I want that to update, so\nI want that to stay in sync.\n\n380\n00:22:00.280 --> 00:22:01.383\nSo we're gonna make that one little tweak.\n\n381\n00:22:01.383 --> 00:22:01.950\n&gt;&gt; Tweak!\n\n382\n00:22:01.950 --> 00:22:04.229\n&gt;&gt; And that is not actually in our proxy.\n\n383\n00:22:04.229 --> 00:22:07.910\nAnd that is in fact inside\nof our app controller.\n\n384\n00:22:07.910 --> 00:22:12.020\nSo our app controller,\nwe get the weather data here, but\n\n385\n00:22:12.020 --> 00:22:15.360\nwhen we get the weather data, the weather\ndata actually has a location on it.\n\n386\n00:22:15.360 --> 00:22:21.190\nSo we have to make this a little more\ncomplex than it normally was, like so.\n\n387\n00:22:22.800 --> 00:22:28.180\nAnd so the weather data is that but\nthis.location equals\n\n388\n00:22:28.180 --> 00:22:32.770\nweatherdata.location like so okay.\n\n389\n00:22:32.770 --> 00:22:38.310\nSo now if I come and refresh and\nit goes and get's it.\n\n390\n00:22:38.310 --> 00:22:41.600\nIt should update,\ncross your fingers, and there we go.\n\n391\n00:22:41.600 --> 00:22:45.720\nIt now updates the location in\nthe search field automatically\n\n392\n00:22:45.720 --> 00:22:49.960\nwhen it uses geolocation services\nwith the full formated address.\n\n393\n00:22:49.960 --> 00:22:52.440\nIt's not pretty yet, but\nit does in fact work.\n\n394\n00:22:52.440 --> 00:22:55.880\nAnd we've no longer lost that information\nwhen using geolocation services.\n\n395\n00:22:55.880 --> 00:22:58.300\n&gt;&gt; Adding location lookup to proxy.\n\n396\n00:22:58.300 --> 00:23:01.190\nGreat episode, Justin, any last words?\n\n397\n00:23:01.190 --> 00:23:04.568\nNo you can see, well,\nI said no then immediately started.\n\n398\n00:23:04.568 --> 00:23:06.830\n&gt;&gt; [LAUGH] No there's not.\n\n399\n00:23:06.830 --> 00:23:10.241\n&gt;&gt; [CROSSTALK] No but\nI'm gonna tell you some anyway.\n\n400\n00:23:10.241 --> 00:23:13.530\nThere's not a great deal\nother than it step by step.\n\n401\n00:23:13.530 --> 00:23:16.550\nNotice sometimes things don't go smoothly.\n\n402\n00:23:16.550 --> 00:23:20.760\n&gt;&gt; No.\n&gt;&gt; And I do want to just reiterate, right,\n\n403\n00:23:20.760 --> 00:23:21.505\nwe're learning.\n\n404\n00:23:21.505 --> 00:23:25.320\n&gt;&gt; Yes.\n&gt;&gt; Sometimes things are frustrating, and\n\n405\n00:23:25.320 --> 00:23:27.020\nyou may be watching me or\n\n406\n00:23:27.020 --> 00:23:30.110\nsomeone else and it always looks\nlike rainbows and unicorns.\n\n407\n00:23:30.110 --> 00:23:30.960\n&gt;&gt; And puppies.\n\n408\n00:23:30.960 --> 00:23:32.400\n&gt;&gt; But it's not.\n\n409\n00:23:32.400 --> 00:23:36.950\nAnd to some extent you saw that a little\nbit in this episode, where, that broke,\n\n410\n00:23:36.950 --> 00:23:38.510\nI need to go fix that.\n\n411\n00:23:38.510 --> 00:23:42.620\nSo, yeah there was some moving around, but\nthat's because when you add complexity\n\n412\n00:23:42.620 --> 00:23:47.370\nto try to solve a problem, I try to\nkeep it as simple as possible, but\n\n413\n00:23:47.370 --> 00:23:51.390\nI also try to get the result\nin a simple manner.\n\n414\n00:23:51.390 --> 00:23:55.626\nSometimes those aren't,\nyou can't do those at the same time.\n\n415\n00:23:55.626 --> 00:23:59.410\nYou have to do a solution that's a little\nmore complex in order to get the answer in\n\n416\n00:23:59.410 --> 00:24:00.830\na simplified form.\n\n417\n00:24:00.830 --> 00:24:05.080\nWhere I have just the weather data with\nthe location field instead of grab this,\n\n418\n00:24:05.080 --> 00:24:06.710\ngrab that, all of it.\n\n419\n00:24:06.710 --> 00:24:10.270\nSo, just keep in mind,\njust keep moving forward,\n\n420\n00:24:10.270 --> 00:24:12.370\nif you get frustrated, that's cool.\n\n421\n00:24:12.370 --> 00:24:14.960\nTake a step back, come revisit it, and\n\n422\n00:24:14.960 --> 00:24:17.500\njust keep solving problems,\nand ultimately,\n\n423\n00:24:17.500 --> 00:24:22.830\nyou'll find your solution, and it's just\nabout gritting your teeth and digging in.\n\n424\n00:24:22.830 --> 00:24:24.070\n&gt;&gt; Justin you do a wonderful job.\n\n425\n00:24:24.070 --> 00:24:25.720\nDoesn't he do a wonderful job?\n\n426\n00:24:25.720 --> 00:24:26.415\nRound of applause.\n\n427\n00:24:26.415 --> 00:24:29.024\nAnd like you said you can\nalways come back and revisit,\n\n428\n00:24:29.024 --> 00:24:32.212\nin fact you can revisit any video\nyou want as many times as you want.\n\n429\n00:24:32.212 --> 00:24:35.253\nAnd the weather app with angular JS and\nexpress series and\n\n430\n00:24:35.253 --> 00:24:37.320\nyou'll be glad you did too.\n\n431\n00:24:37.320 --> 00:24:41.180\nAnd thank you for watching DevPro.TV,\nremember a good DevPro is always learning.\n\n432\n00:24:41.180 --> 00:24:42.370\nI'm Zack Memos.\n\n433\n00:24:42.370 --> 00:24:43.200\n&gt;&gt; And I'm Justin Dennison.\n\n434\n00:24:43.200 --> 00:24:44.599\n&gt;&gt; And we will see you soon.\n\n435\n00:24:44.599 --> 00:24:49.113\n[MUSIC]\n\n",
          "vimeoId": "227421847"
        },
        {
          "description": "Justin and Zach discuss what Heroku is, what platforms are available on Heroku, using 'GIT' & 'GITHUB,\" prepping the project with requirements, adding the profile, adding the start script, credentials, adding a sample creds file, altering the port binding, linking 'GITHUB,' and deploying.",
          "length": "2007",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-13-1-deploying_our_proxy_on_heroku-072817-PGM.00_37_23_29.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-13-1-deploying_our_proxy_on_heroku-072817-PGM.00_37_23_29.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-13-1-deploying_our_proxy_on_heroku-072817-PGM.00_37_23_29.Still001-sm.jpg",
          "title": "Deploying Our Proxy on Heroku",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:12.575 --> 00:00:17.201\nHello and thank you for watching DevProTV,\nhelping you learn wherever you go.\n\n3\n00:00:17.201 --> 00:00:20.236\nMy name is Zach Memos and\nI'm your host as we continue on,\n\n4\n00:00:20.236 --> 00:00:22.719\nwith weather app with AngularJS and\nExpress.\n\n5\n00:00:22.719 --> 00:00:27.691\nThis episode we're deploying our\nproxy on Heroku, what does it mean?\n\n6\n00:00:27.691 --> 00:00:32.080\nWell, our Dev Pro expert Justin Dennison\nis gonna tell us, cuz he knows.\n\n7\n00:00:32.080 --> 00:00:32.779\nHe does, he knows these things.\n\n8\n00:00:32.779 --> 00:00:36.068\n&gt;&gt; Wait a minute,\nam I supposed to know how to do this?\n\n9\n00:00:36.068 --> 00:00:37.570\n&gt;&gt; Yes, you are.\n\n10\n00:00:37.570 --> 00:00:38.950\n&gt;&gt; I thought you knew.\n\n11\n00:00:38.950 --> 00:00:39.732\n&gt;&gt; No.\n\n12\n00:00:39.732 --> 00:00:41.676\n[LAUGH]\n&gt;&gt; Well, we might be in trouble for\n\n13\n00:00:41.676 --> 00:00:44.319\nthis episode, so we'll just go ahead and\nget the niceties out of the way.\n\n14\n00:00:44.319 --> 00:00:45.108\nHow are you Zach?\n\n15\n00:00:45.108 --> 00:00:46.390\n&gt;&gt; Keep the ball running.\n\n16\n00:00:46.390 --> 00:00:49.920\nI'm very excited, because I would like\nto see Heroku actually works, and\n\n17\n00:00:49.920 --> 00:00:51.720\nhow can bring that functionality in here.\n\n18\n00:00:51.720 --> 00:00:55.680\nWe've been working, and\nwe've been working locally, as it is.\n\n19\n00:00:55.680 --> 00:00:59.408\nSo what if I wanted, others, other people,\nothers, to see our application.\n\n20\n00:00:59.408 --> 00:01:01.010\nWhat would we do?\n\n21\n00:01:01.010 --> 00:01:04.130\n&gt;&gt; Well, that's kind of a sticking point\nwhenever you're building these web-based\n\n22\n00:01:04.130 --> 00:01:07.450\napplications, well actually\nany software product,\n\n23\n00:01:07.450 --> 00:01:10.500\nis how do I allow other\npeople to interact with it.\n\n24\n00:01:10.500 --> 00:01:13.000\nWell, if it's on the Web,\nthere's a deployment process.\n\n25\n00:01:13.000 --> 00:01:15.760\nNow, I'm using deployment in the sense\nthat we're gonna put it on the Web\n\n26\n00:01:15.760 --> 00:01:18.650\nsomewhere and I can go to a URL and\nit's available.\n\n27\n00:01:18.650 --> 00:01:22.260\nAs it stands, if you called\nup your grandma and was like,\n\n28\n00:01:22.260 --> 00:01:27.620\ngrandma type this into, maybe\nInternet Explorer, maybe Google Chrome,\n\n29\n00:01:27.620 --> 00:01:30.710\nit depends on how technologically\nsavvy your grandmother is I guess.\n\n30\n00:01:31.860 --> 00:01:35.143\nLocal host 8080 slash,\nor whatever it may be.\n\n31\n00:01:35.143 --> 00:01:38.917\nWell, she is not gonna see it\nbecause it is bound to her computer.\n\n32\n00:01:38.917 --> 00:01:40.754\nThat would be her loopback address.\n\n33\n00:01:40.754 --> 00:01:44.010\nThat's not gonna work.\n\n34\n00:01:44.010 --> 00:01:48.340\nWhat we really want is something like\nGoogle.com and it will point there.\n\n35\n00:01:48.340 --> 00:01:53.714\nNow we're not only going to register\na domain name and point to it.\n\n36\n00:01:53.714 --> 00:01:57.777\nWe're not worry about that part as when\nI get up into the clouds so to speak and\n\n37\n00:01:57.777 --> 00:02:02.031\nthe project that we're gonna do that are\nexcuse me the way we're going to do that\n\n38\n00:02:02.031 --> 00:02:03.670\nis through the use of Heroku.\n\n39\n00:02:03.670 --> 00:02:05.705\n&gt;&gt; I know they were using a Heroku.\n\n40\n00:02:06.910 --> 00:02:08.466\nWhat is Heroku?\n\n41\n00:02:08.466 --> 00:02:10.666\n[LAUGH]\n&gt;&gt; [LAUGH] Well, hopefully,\n\n42\n00:02:10.666 --> 00:02:12.352\nI'm just not making up words.\n\n43\n00:02:12.352 --> 00:02:13.211\n&gt;&gt; No.\n&gt;&gt; Heroku, now,\n\n44\n00:02:13.211 --> 00:02:17.762\nif you've heard it pronounced some other\nway and you're familiar with this service,\n\n45\n00:02:17.762 --> 00:02:20.310\nplease, I'm just the messenger upon this.\n\n46\n00:02:20.310 --> 00:02:21.830\nIt might be Heroku.\n\n47\n00:02:23.760 --> 00:02:25.740\nHeroku, I don't know.\n\n48\n00:02:25.740 --> 00:02:28.140\nHeroku, that's what I've heard\na great deal of the times.\n\n49\n00:02:28.140 --> 00:02:28.824\nThat's how I pronounce it.\nBut\n\n50\n00:02:28.824 --> 00:02:32.840\nthat doesn't really drive\nhome about what Heroku is.\n\n51\n00:02:32.840 --> 00:02:36.080\nAnd I think the best way to\nget a sense of Heroku is,\n\n52\n00:02:36.080 --> 00:02:38.840\nwell, just browse\nthe documentation a little bit.\n\n53\n00:02:38.840 --> 00:02:43.330\nAnd then allow that to inform us how\nwe're going to use this as far as,\n\n54\n00:02:43.330 --> 00:02:45.260\nwhat is it and why does it matter to us.\n\n55\n00:02:45.260 --> 00:02:47.880\nSo, let's go ahead and\ntake a look at my screen here.\n\n56\n00:02:47.880 --> 00:02:50.910\nAnd well, I'm actually on the wrong tab.\n\n57\n00:02:50.910 --> 00:02:51.881\nHeroku.\n\n58\n00:02:51.881 --> 00:02:53.500\nHeroku.com.\n\n59\n00:02:53.500 --> 00:02:54.700\nThat's all it is.\n\n60\n00:02:54.700 --> 00:03:00.840\nIt's fairly easy and you'll notice up\nhere the Cloud Application Platform.\n\n61\n00:03:00.840 --> 00:03:04.040\nIt is platform as a service and\nif scroll down a little bit,\n\n62\n00:03:04.040 --> 00:03:07.744\nyou actually see a great\ndeal of icons JS for\n\n63\n00:03:07.744 --> 00:03:14.300\nNode.js well that's like Ruby, Java, PHP,\n\n64\n00:03:14.300 --> 00:03:20.090\nPython, Go, Scala which is a JVN language\nand there are some several others.\n\n65\n00:03:20.090 --> 00:03:26.570\nAnd if we come out just a little bit,\nThere we go that's what I wanted to do.\n\n66\n00:03:28.140 --> 00:03:32.260\nIt compares itself to\nsome other providers so\n\n67\n00:03:32.260 --> 00:03:37.050\nit's no infrastructure, right is not\nabout setting up an ICT instance or\n\n68\n00:03:37.050 --> 00:03:40.800\nan Azure server instance or\nsomething like that, you configuring it.\n\n69\n00:03:40.800 --> 00:03:44.386\nGetting everything good,\nmanaging certificates, it's not about\n\n70\n00:03:44.386 --> 00:03:48.416\nthat putting thing into containers It's\nabout getting your app ready to go.\n\n71\n00:03:48.416 --> 00:03:52.096\nNow, this is my understanding,\nthe original bread and\n\n72\n00:03:52.096 --> 00:03:56.244\nbutter of Heroku was Ruby on Rails,\ncuz some times it was hard to\n\n73\n00:03:56.244 --> 00:04:00.490\ndeploy.and they were like,\nwell we're gonna make that easy.\n\n74\n00:04:00.490 --> 00:04:05.020\nWe're gonna say you do these few\nthings and then you send it to\n\n75\n00:04:05.020 --> 00:04:09.400\nthis particular end up, or\nmaybe on Github, or maybe in Dropbox.\n\n76\n00:04:09.400 --> 00:04:10.038\nAnd we'll take care of the rest.\n\n77\n00:04:10.038 --> 00:04:13.946\nSo it's a deployment service,\nplatform as a service,\n\n78\n00:04:13.946 --> 00:04:17.198\nin order to deploy\na web-based application.\n\n79\n00:04:17.198 --> 00:04:21.098\nSo when it shows all of these, these\nare not like command line applications,\n\n80\n00:04:21.098 --> 00:04:24.700\nthese are something that\nyou're running in the web.\n\n81\n00:04:24.700 --> 00:04:28.180\nNow it has kinda long way since then.\n\n82\n00:04:28.180 --> 00:04:31.165\nIt has well,\nit's made it to where you can scale,\n\n83\n00:04:31.165 --> 00:04:33.878\nyou can create multiple node applications.\n\n84\n00:04:33.878 --> 00:04:39.780\nYou can have add ons, you can have bunches\nof servers, you can have jobs that run.\n\n85\n00:04:39.780 --> 00:04:44.250\nAnd you can see,\nit's not quite just ruby on rails,\n\n86\n00:04:44.250 --> 00:04:47.360\nit's not just a single\nserver kind of set up.\n\n87\n00:04:47.360 --> 00:04:49.670\nIt offers a great deal.\n\n88\n00:04:49.670 --> 00:04:53.720\nNow Part of that is setting it for\norganizations.\n\n89\n00:04:53.720 --> 00:04:58.670\nWith that said, if you scroll up to,\n\n90\n00:04:58.670 --> 00:05:02.850\nhere's the most important part I think for\na lot of people, pricing.\n\n91\n00:05:02.850 --> 00:05:04.640\n&gt;&gt; I was just gonna say,\nwhat does it cost?\n\n92\n00:05:04.640 --> 00:05:05.740\n&gt;&gt; Yeah, pricing.\n\n93\n00:05:05.740 --> 00:05:07.500\nSo in Heroku land,\n\n94\n00:05:07.500 --> 00:05:11.330\ndynos are essentially the platforms\nthat you deployed your application to.\n\n95\n00:05:12.570 --> 00:05:16.750\nNow, underneath the covers I'm pretty\nsure they use some kinda containerization\n\n96\n00:05:16.750 --> 00:05:19.710\nmodel in order to make use of hardware.\n\n97\n00:05:19.710 --> 00:05:23.630\nBut, also as an app builder,\nI'm trying not to think of that,\n\n98\n00:05:23.630 --> 00:05:25.860\nI'm trying to make this\nas easy as possible.\n\n99\n00:05:25.860 --> 00:05:29.300\nSo there are several different ways to,\nwell, pay for this.\n\n100\n00:05:29.300 --> 00:05:31.420\nThere is the free version.\n\n101\n00:05:31.420 --> 00:05:32.800\nAnd there's some limitations to that.\n\n102\n00:05:32.800 --> 00:05:33.930\nSo you get some for free.\n\n103\n00:05:33.930 --> 00:05:35.220\nWell that works well for us.\n\n104\n00:05:35.220 --> 00:05:35.930\n&gt;&gt; I like free.\n\n105\n00:05:35.930 --> 00:05:38.340\n&gt;&gt; We need to do this for free.\n\n106\n00:05:38.340 --> 00:05:42.520\nBut it does tell you,\nyou get 512 megabytes of RAM.\n\n107\n00:05:42.520 --> 00:05:44.240\nAnd you get one web.\n\n108\n00:05:44.240 --> 00:05:47.210\nEssentially one web application and\none worker.\n\n109\n00:05:47.210 --> 00:05:48.540\nNow what is a worker?\n\n110\n00:05:48.540 --> 00:05:49.890\nWell ultimately,\nthat doesn't belong to us.\n\n111\n00:05:49.890 --> 00:05:53.810\nSo that might be asynchronous tasks\nthat may have initiated some kind of.\n\n112\n00:05:53.810 --> 00:05:56.360\nLarge batch job or maybe it's, hey,\n\n113\n00:05:56.360 --> 00:05:59.300\nI know I might need to go some number\ncrunching and it's gonna a little while.\n\n114\n00:05:59.300 --> 00:06:02.100\nAnd you submit a request from\nmaybe your web application.\n\n115\n00:06:02.100 --> 00:06:02.960\nThe worker runs.\n\n116\n00:06:02.960 --> 00:06:05.160\nAnd there's some other uses for workers.\n\n117\n00:06:07.030 --> 00:06:09.660\nSleeps after 30 minutes of inactivity.\n\n118\n00:06:09.660 --> 00:06:17.300\nSo if nothing hits that URL The server\njust kinda goes to sleep and disappears.\n\n119\n00:06:17.300 --> 00:06:21.360\nWhen you hit it again it will\nspin back up fairly quickly but\n\n120\n00:06:21.360 --> 00:06:26.280\nthere is a latency issue\non the initial time.\n\n121\n00:06:26.280 --> 00:06:29.840\nSo you get some free dynamic hours, okay.\n\n122\n00:06:29.840 --> 00:06:35.470\nYou get a 1,000 for verified accounts And\nthen you get 550 for unverified.\n\n123\n00:06:35.470 --> 00:06:37.970\nNow this is a little bit different\nmodel than it used to be.\n\n124\n00:06:37.970 --> 00:06:41.177\nIt used to be that you got so many\n\n125\n00:06:42.850 --> 00:06:48.040\nthey would go inactive at 30 minutes and\nthen you could only use them for\n\n126\n00:06:48.040 --> 00:06:51.270\na certain portion of the day so\nthere was like a per day limit.\n\n127\n00:06:51.270 --> 00:06:53.220\nI think it was 18 hours or\nsomething like that.\n\n128\n00:06:53.220 --> 00:06:54.840\nDon't quote me on that.\n\n129\n00:06:54.840 --> 00:06:56.120\nAnd then it would go away.\n\n130\n00:06:57.720 --> 00:07:02.970\nNow, and also you had kind of this\nsoft limit of five for unverified.\n\n131\n00:07:02.970 --> 00:07:05.660\nUnverified means you have\nno credit card information.\n\n132\n00:07:05.660 --> 00:07:10.080\nAnd then verified is, well, you had 100.\n\n133\n00:07:10.080 --> 00:07:11.890\nNow that's how they used to verify.\n\n134\n00:07:11.890 --> 00:07:14.110\nIn all honesty,\n\n135\n00:07:14.110 --> 00:07:18.290\nI don't use it as far as for large\napplications where it costs me a lot.\n\n136\n00:07:18.290 --> 00:07:20.450\nSo I don't I don't tend to dig into that,\n\n137\n00:07:20.450 --> 00:07:24.640\nI'm not building an enterprise\napplication on top of Roku.\n\n138\n00:07:24.640 --> 00:07:30.220\nSo, I'm probing that the best person\nto talk about the building intricacies,\n\n139\n00:07:30.220 --> 00:07:33.900\nthis hobby one though, it's free,\nit's not super robust but\n\n140\n00:07:33.900 --> 00:07:37.160\nit's nice to prototype and\nsee how things work.\n\n141\n00:07:37.160 --> 00:07:41.240\nOver here we have hobby and\nit's $7 per dyno per month.\n\n142\n00:07:41.240 --> 00:07:43.300\nIt never goes to sleep.\n\n143\n00:07:43.300 --> 00:07:47.038\nAnd you actually start to get metrics and\nyou can spin up more workers.\n\n144\n00:07:47.038 --> 00:07:51.820\nSo that $7 a month, that's not too bad.\n\n145\n00:07:51.820 --> 00:07:56.064\nNow that doesn't include custom domain\nnames and things like that or databases.\n\n146\n00:07:56.064 --> 00:08:00.282\nThose are separate.\nBut for deploying a web application, and,\n\n147\n00:08:00.282 --> 00:08:04.172\nwell, after this you'll\nsee how easy it is.\n\n148\n00:08:04.172 --> 00:08:09.435\nNow, if you keep going on over and\nyou look at standard and performance,\n\n149\n00:08:09.435 --> 00:08:14.070\nwhere you get lots of RAM and\nlots of CPU, if you so choose.\n\n150\n00:08:14.070 --> 00:08:18.581\nYou will notice this ranges from\n$25 to $500 per dino per month.\n\n151\n00:08:18.581 --> 00:08:21.540\nIf you click on that,\nwe are actually, can I click on that?\n\n152\n00:08:21.540 --> 00:08:22.750\nI used to be able to click on that.\n\n153\n00:08:22.750 --> 00:08:24.160\nIs it clickable?\n\n154\n00:08:24.160 --> 00:08:26.500\nAm I clicking, that's the question.\n\n155\n00:08:26.500 --> 00:08:28.320\nLooks like they've changed it down here.\n\n156\n00:08:28.320 --> 00:08:30.530\nI wanted to actually\nget to this calculator.\n\n157\n00:08:30.530 --> 00:08:35.319\nLet's say that I wanted a standard one and\nI had 6 of them, that's $150.\n\n158\n00:08:35.319 --> 00:08:39.792\nBut if I look at performance, let's say\nyou're building an application that needs\n\n159\n00:08:39.792 --> 00:08:44.260\na lot of power, a lot of memory in order\nto crunch numbers or process data.\n\n160\n00:08:44.260 --> 00:08:46.410\nWell, let's say you needed five of those.\n\n161\n00:08:47.690 --> 00:08:49.972\nWell, now you're getting\nup to $2,500 a month.\n\n162\n00:08:49.972 --> 00:08:54.240\n&gt;&gt; Woo hoo\n&gt;&gt; So that could eat up a chunk of change.\n\n163\n00:08:54.240 --> 00:08:58.490\nLuckily we're gonna go with the free one,\njust to get this up and going.\n\n164\n00:08:58.490 --> 00:09:03.210\nWell, that's ultimately what we're going\nto use for Heroku 4, what Heroku is,\n\n165\n00:09:03.210 --> 00:09:07.490\nit adds, it provides you a service\nto make application deployment and\n\n166\n00:09:07.490 --> 00:09:08.890\nmanagement fairly easy.\n\n167\n00:09:08.890 --> 00:09:13.620\nIt has add ons but\nthey typically do not always come free.\n\n168\n00:09:13.620 --> 00:09:15.180\nIf you, where did you go?\n\n169\n00:09:15.180 --> 00:09:16.020\nThere we go.\n\n170\n00:09:16.020 --> 00:09:20.690\nElements, add ons,\nyou can get a list of all these add ons,\n\n171\n00:09:20.690 --> 00:09:24.760\ndata stores, data store utilities,\nlogging, Email SMS.\n\n172\n00:09:24.760 --> 00:09:29.100\nSo if I come down here to Email SMS,\nthese are point and click add ons.\n\n173\n00:09:30.270 --> 00:09:31.970\nAnd Mailgun, there we go.\n\n174\n00:09:31.970 --> 00:09:35.330\nSo if I wanted Mailgun\nas an automation thing,\n\n175\n00:09:35.330 --> 00:09:37.970\nMailgun has a separate account system.\n\n176\n00:09:37.970 --> 00:09:40.850\nI can install this as an add on.\n\n177\n00:09:40.850 --> 00:09:47.050\nBut, it says $0, but it is also typically\nscaled like the dinos that we just saw.\n\n178\n00:09:47.050 --> 00:09:49.140\nSo, depending on what you use,\n\n179\n00:09:49.140 --> 00:09:53.780\nhow much you use, it may get\nfairly expensive fairly quickly.\n\n180\n00:09:53.780 --> 00:09:55.935\nBut it all depends on the context.\n\n181\n00:09:55.935 --> 00:09:57.890\n$2,500 might not be much.\n\n182\n00:09:57.890 --> 00:10:02.289\nIf your app is generating\n$15,000 a month in revenue.\n\n183\n00:10:02.289 --> 00:10:07.120\nSo, our app was not generating any money,\nthat's not ultimately our purpose.\n\n184\n00:10:07.120 --> 00:10:10.220\nNow, when I say app,\nit's ultimately our proxy service.\n\n185\n00:10:10.220 --> 00:10:13.900\nSo, we're just trying to get\nour head around the topic.\n\n186\n00:10:14.910 --> 00:10:18.270\n&gt;&gt; Okay, so, how do we get up and\nrunning on Heroku?\n\n187\n00:10:18.270 --> 00:10:20.582\n&gt;&gt; Well,\n&gt;&gt; It is actually fairly easy but\n\n188\n00:10:20.582 --> 00:10:24.638\nthere is a little bit that we have to do\nand well, there is some assumed knowledge.\n\n189\n00:10:24.638 --> 00:10:27.600\nFore warning, fore warning,\nI am going to assume\n\n190\n00:10:27.600 --> 00:10:31.070\nthat if you are part of this series you\nhave had some development experience so\n\n191\n00:10:31.070 --> 00:10:33.310\nyou know a little bit\nabout getting In GitHub.\n\n192\n00:10:33.310 --> 00:10:37.170\nWe're not gonna do it extensively cuz we\nhaven't been using it in this series, but\n\n193\n00:10:37.170 --> 00:10:41.650\nit makes the Heroku deployment\nfairly easy, and to some extent,\n\n194\n00:10:41.650 --> 00:10:43.640\nalmost automated in nature.\n\n195\n00:10:43.640 --> 00:10:48.800\nSo we have to change our project a little\nbit, set up our Heroku account, link them,\n\n196\n00:10:48.800 --> 00:10:54.980\nand then we just sit back and watch\nthe cool breeze, maybe sip some iced tea,\n\n197\n00:10:54.980 --> 00:10:59.560\nand well, hopefully it all works and\ndoesn't come crashing down.\n\n198\n00:10:59.560 --> 00:11:01.970\nSo We'll just come and\ncome back to my screen here.\n\n199\n00:11:01.970 --> 00:11:06.330\nAnd well, there's a couple of things,\nI'm gonna come over here, and\n\n200\n00:11:06.330 --> 00:11:09.440\nI'm actually gonna kill\nthe proxy service right now.\n\n201\n00:11:09.440 --> 00:11:13.670\nAnd if I ls, there's credentials,\nmiddleware, node modules,\n\n202\n00:11:13.670 --> 00:11:18.570\nrouters, Index.js, it is not a Git repo.\n\n203\n00:11:18.570 --> 00:11:20.740\nNow if you don't know what\nI'm talking about on Git, or\n\n204\n00:11:20.740 --> 00:11:23.380\nyou're uncomfortable with we\ndefinitely have some Git videos\n\n205\n00:11:23.380 --> 00:11:27.075\nvery like how to get up and running\nwith Git and GitHub in our library.\n\n206\n00:11:27.075 --> 00:11:28.555\nSo go check those out.\n\n207\n00:11:28.555 --> 00:11:30.755\nBut I'm going to deploy\nthese independently,\n\n208\n00:11:30.755 --> 00:11:34.245\nbecause I'm going to show you two\ndeployment methods for each one.\n\n209\n00:11:34.245 --> 00:11:36.895\nThe back end service and\nthe front end service.\n\n210\n00:11:36.895 --> 00:11:40.445\nAnd well, that just provides\na lot of options to you.\n\n211\n00:11:40.445 --> 00:11:43.125\nSo for our proxy,\nthat is the one that is going to Heroku.\n\n212\n00:11:43.125 --> 00:11:47.030\nWe need to make this a Git repo which\ndoes mean we have to add a little bit of\n\n213\n00:11:47.030 --> 00:11:50.040\nGit and Heroku goodness, so to speak.\n\n214\n00:11:50.040 --> 00:11:52.660\nLikewise, since we haven't been\nusing Git from the beginning,\n\n215\n00:11:52.660 --> 00:11:58.530\nwe don't have a history of our\ndevelopment, so that's gonna be a problem.\n\n216\n00:11:58.530 --> 00:12:01.420\nBut just to give you a review of what\nwe're doing, we're gonna have to create\n\n217\n00:12:01.420 --> 00:12:04.630\na Git repo, we're gonna have\nto put a gitignore in there,\n\n218\n00:12:04.630 --> 00:12:08.980\nbecause this credentials.js\nfile has some hidden stuff.\n\n219\n00:12:10.270 --> 00:12:13.120\nWe don't want our hidden stuff in our Git.\n\n220\n00:12:13.120 --> 00:12:16.870\nCuz that's gonna be public unless you\nwanna pay money for that as well.\n\n221\n00:12:16.870 --> 00:12:20.690\nYou probably still shouldn't keep it in\nversion control just in case someone gets\n\n222\n00:12:20.690 --> 00:12:23.250\nahold of your source code and\nyour history.\n\n223\n00:12:24.590 --> 00:12:26.260\nSo that's the Git part.\n\n224\n00:12:26.260 --> 00:12:28.230\nThen we need to sign up for Hiroku.\n\n225\n00:12:28.230 --> 00:12:33.010\nThen we have to put some\nthings inside of Hiroku, or\n\n226\n00:12:33.010 --> 00:12:36.800\ninside of our project that\nHiroku is wanting to see.\n\n227\n00:12:36.800 --> 00:12:38.743\nSomething called a proc file,\n\n228\n00:12:38.743 --> 00:12:43.480\nwe have to add an MPM script that\nkind of helps move things along.\n\n229\n00:12:43.480 --> 00:12:48.550\nAnd then, we also have to make some\nchanges to our code because, well,\n\n230\n00:12:48.550 --> 00:12:51.515\nif we're gonna hide away these credentials\nand that's not part of our Git repo,\n\n231\n00:12:51.515 --> 00:12:55.520\nHiroku doesn't know about them,\nand so we have to tell it.\n\n232\n00:12:55.520 --> 00:12:57.030\n&gt;&gt; My goodness, that sounds wonderful.\n\n233\n00:12:57.030 --> 00:12:59.450\nSo let's get going,\nlet's start doing all this.\n\n234\n00:12:59.450 --> 00:13:01.400\n&gt;&gt; All right, well, let's do it.\n\n235\n00:13:01.400 --> 00:13:04.770\nSo the first thing is I'm\ngonna say git init, and\n\n236\n00:13:04.770 --> 00:13:07.770\nI already have my account and\neverything set up.\n\n237\n00:13:07.770 --> 00:13:10.820\nSo, I'm now in the master branch and\nif I type git status.\n\n238\n00:13:10.820 --> 00:13:16.012\nWell, you notice I have credentials\nindex.js node_modules package-lock.js.\n\n239\n00:13:16.012 --> 00:13:17.390\nEverything, right?\n\n240\n00:13:17.390 --> 00:13:20.830\nAnd I wanna keep node_modules cuz\nthat's listed in my package.json,\n\n241\n00:13:20.830 --> 00:13:22.550\nI also don't want credentials there.\n\n242\n00:13:22.550 --> 00:13:29.350\nSo, I'm gonna create a gitignore file,\nand well I'm gonna hop over to Adam.\n\n243\n00:13:29.350 --> 00:13:32.180\nLook in my gitignore file and\n\n244\n00:13:32.180 --> 00:13:36.000\njust list those two things as\nthings that I want to ignore.\n\n245\n00:13:36.000 --> 00:13:39.550\nAnd that would be credentials.js,\njust like so.\n\n246\n00:13:39.550 --> 00:13:42.960\nAll right, so now, if I type get status.\n\n247\n00:13:42.960 --> 00:13:47.550\nI have a gitignore, index.js,\nthese two package.json, the lock included.\n\n248\n00:13:47.550 --> 00:13:52.185\nAnd then routers, well that's actually\nall I need to self describe my project.\n\n249\n00:13:52.185 --> 00:13:54.010\nI've written all the code,\n\n250\n00:13:54.010 --> 00:13:58.420\nall of the node modules that I need\nare in the index.js and actually,\n\n251\n00:13:58.420 --> 00:14:04.050\nonly the node modules that I need for\nrunning it, are listed as dependencies.\n\n252\n00:14:04.050 --> 00:14:07.800\nWhere as nodemon would not be installed\nbecause it is a dev dependency.\n\n253\n00:14:08.982 --> 00:14:13.010\nWell, if's a dev dependency,\nit is only for development purposes.\n\n254\n00:14:13.010 --> 00:14:15.370\nSo, that's the first\nthing we are gonna do.\n\n255\n00:14:15.370 --> 00:14:17.420\nAnd now, we are going to go ahead and\ndo a commit.\n\n256\n00:14:17.420 --> 00:14:23.360\nI am going to go ahead and\ngit add -A and git commit -m.\n\n257\n00:14:23.360 --> 00:14:25.520\nInitial commit is the message.\n\n258\n00:14:25.520 --> 00:14:29.240\nNow, I would typically start using Git\nfrom the very beginning of a project, but\n\n259\n00:14:29.240 --> 00:14:33.090\nI wanted to focus on actually building\na project, and only use it then.\n\n260\n00:14:33.090 --> 00:14:38.010\nSo, I'm on the master branch, this is my\nfirst commit, and it's a lot of code.\n\n261\n00:14:38.010 --> 00:14:40.840\nYou know maybe you didn't think\nyou were gonna keep a project,\n\n262\n00:14:40.840 --> 00:14:42.470\nyou can always come back and\nadd Git later.\n\n263\n00:14:42.470 --> 00:14:46.310\nSo, even though I would normally\nstart at the very beginning you know,\n\n264\n00:14:46.310 --> 00:14:49.970\nit's never too late to go ahead and\nstart taking snapshots.\n\n265\n00:14:49.970 --> 00:14:51.580\nNow I have that Git repo.\n\n266\n00:14:51.580 --> 00:14:54.380\nI have a commit.\n\n267\n00:14:54.380 --> 00:14:56.330\nI have it kind of updated.\n\n268\n00:14:56.330 --> 00:14:57.630\nI have a gitignore.\n\n269\n00:14:57.630 --> 00:15:01.070\nI need to link it with\na repository on GitHub.\n\n270\n00:15:01.070 --> 00:15:05.190\nBecause that's where all of our code's\ngonna stay, and Heroku's gonna look for.\n\n271\n00:15:05.190 --> 00:15:09.920\nSo if I come over here and I come to\nGitHub, I'm gonna create a new repository.\n\n272\n00:15:09.920 --> 00:15:14.090\nNow I'm logged in under my name,\nso you have to sign up and log in.\n\n273\n00:15:14.090 --> 00:15:20.790\nAnd I'm gonna call this,\nlet's say Ancaster proxy, just like so.\n\n274\n00:15:21.960 --> 00:15:23.765\nAnd it is public, if you click Private,\n\n275\n00:15:23.765 --> 00:15:26.770\nyou're gonna pay some money\nto keep things private.\n\n276\n00:15:26.770 --> 00:15:29.150\nSo we're going to keep it public and\nthen you get this URL.\n\n277\n00:15:30.820 --> 00:15:31.350\nRight there.\n\n278\n00:15:31.350 --> 00:15:37.940\nSo we're gonna copy that URL and then go\nahead and set it up with my local repo.\n\n279\n00:15:37.940 --> 00:15:40.020\nSo I'm essentially creating this link.\n\n280\n00:15:40.020 --> 00:15:43.910\nSo get remote, add origin and then Paste.\n\n281\n00:15:43.910 --> 00:15:50.220\nNow, these instructions\nare actually in this right here.\n\n282\n00:15:50.220 --> 00:15:53.658\nSo if you already have an existing repo,\ndo these two lines.\n\n283\n00:15:53.658 --> 00:15:56.960\nThat's essentially what I'm doing, okay?\n\n284\n00:15:56.960 --> 00:15:58.524\nSo this is very simplistic.\n\n285\n00:15:58.524 --> 00:16:00.420\nNot a problem, though.\n\n286\n00:16:00.420 --> 00:16:04.496\nWell.\nI'm gonna git push -u origin master.\n\n287\n00:16:04.496 --> 00:16:07.170\nI'm just following\ninstructions at this point.\n\n288\n00:16:07.170 --> 00:16:10.626\nNow, I already had my account set up,\nif you're just getting started,\n\n289\n00:16:10.626 --> 00:16:14.640\nit may ask for your username and password\nevery time, things of that nature.\n\n290\n00:16:14.640 --> 00:16:21.925\nMine just pushes it, if I come back to\nGitHub and I refresh, well, there we go.\n\n291\n00:16:21.925 --> 00:16:25.490\nIt's done, it's on GitHub now,\nit's that easy.\n\n292\n00:16:25.490 --> 00:16:26.058\n&gt;&gt; Wow.\n\n293\n00:16:26.058 --> 00:16:31.010\n&gt;&gt; Okay, now, that's not quite,\nwe're not quite done though.\n\n294\n00:16:31.010 --> 00:16:32.630\n&gt;&gt; [LAUGH]\n&gt;&gt; We're not quite done, though,\n\n295\n00:16:32.630 --> 00:16:34.090\nwe're not quite done.\n\n296\n00:16:34.090 --> 00:16:37.420\nWe need to add our, before we worry about\ngoing and setting up our account and\n\n297\n00:16:37.420 --> 00:16:38.210\nlinking them, right?\n\n298\n00:16:38.210 --> 00:16:40.820\nBecause that's just like point and\nclick kind of niceties.\n\n299\n00:16:40.820 --> 00:16:44.057\nWhile we're in the code,\nlet's go ahead and get ready for Heroku.\n\n300\n00:16:44.057 --> 00:16:47.390\nAnd I'm gonna illustrate some, well,\nI'm gonna highlight, not illustrate.\n\n301\n00:16:47.390 --> 00:16:51.130\nI'm gonna highlight some gotchas\nthat you should be aware of.\n\n302\n00:16:51.130 --> 00:16:54.930\nSo, in order to make things ready for\nHeroku, we need a Procfile.\n\n303\n00:16:56.880 --> 00:16:59.808\nAnd a Procfile is a specially named file,\nnotice there's no extension,\n\n304\n00:16:59.808 --> 00:17:04.020\nthat Heroku's gonna be using to\nstart up our application, all right.\n\n305\n00:17:04.020 --> 00:17:06.055\nNow this Procfile,\nwhat's gonna go in this Procfile?\n\n306\n00:17:06.055 --> 00:17:09.890\nProcfile is a describer\nof your application for\n\n307\n00:17:09.890 --> 00:17:11.640\nHeroku to read line by line.\n\n308\n00:17:11.640 --> 00:17:16.320\nFor ours, it's just gonna be\nfairly simple, npm start.\n\n309\n00:17:16.320 --> 00:17:20.110\nSo it's gonna say, hey, use npm,\nrun the start script, and\n\n310\n00:17:20.110 --> 00:17:22.890\nthen the application should be up and\ngoing.\n\n311\n00:17:22.890 --> 00:17:26.820\nBut if we use this in a Procfile, and this\nis kind of a common practice because maybe\n\n312\n00:17:26.820 --> 00:17:31.840\nyou need to start something, not just\na single file but a couple of processes.\n\n313\n00:17:31.840 --> 00:17:35.620\nYou need to have that in\nyour package.json, so\n\n314\n00:17:35.620 --> 00:17:40.474\nwe need to come over to package.json and\nadd the start script, just like this.\n\n315\n00:17:42.145 --> 00:17:47.445\nNow for us, ours is still fairly simple,\nit's just node index.js, the node runtime.\n\n316\n00:17:47.445 --> 00:17:53.195\nBut again, I always use the npm start, and\nthat way if I needed to do node.index.js\n\n317\n00:17:53.195 --> 00:17:59.350\nand something else, and something else,\nwell, then I could do that.\n\n318\n00:17:59.350 --> 00:18:03.630\nOr there are npm modules like\nconcurrently, that'll say concurrently and\n\n319\n00:18:03.630 --> 00:18:06.470\nthen you can start a bunch of\nprocesses at the same time.\n\n320\n00:18:06.470 --> 00:18:09.430\nNow, if you're doing that, and you should\nbe thinking about the architecture of your\n\n321\n00:18:09.430 --> 00:18:12.180\napplication, but\nthat's not our ultimate goal here.\n\n322\n00:18:12.180 --> 00:18:14.770\nSo we're just gonna,\nwe're gonna do some hand waving,\n\n323\n00:18:14.770 --> 00:18:16.970\nand act like that never happened.\n\n324\n00:18:16.970 --> 00:18:19.207\nThat was a little jazz-\n&gt;&gt; That was jazz hands.\n\n325\n00:18:19.207 --> 00:18:20.980\n&gt;&gt; Nothing to see here,\nmove along, move along.\n\n326\n00:18:20.980 --> 00:18:21.930\n&gt;&gt; Move along.\n\n327\n00:18:21.930 --> 00:18:22.970\n&gt;&gt; Nothing to see.\n\n328\n00:18:22.970 --> 00:18:25.900\n&gt;&gt; Do not look at the man\nbehind the curtain.\n\n329\n00:18:25.900 --> 00:18:28.876\nSo there's our star script and\nour Procfile,\n\n330\n00:18:28.876 --> 00:18:31.479\nwe're real close, we're real close.\n\n331\n00:18:32.570 --> 00:18:36.686\nThere's a few places where\nwe use this credentials,\n\n332\n00:18:36.686 --> 00:18:40.261\nall right, so the API key and\nthe Goog API key.\n\n333\n00:18:40.261 --> 00:18:44.665\nSo, weather router being one of them,\nright, here's credentials.\n\n334\n00:18:44.665 --> 00:18:49.277\nWell, how am I going to get\n\n335\n00:18:49.277 --> 00:18:53.902\nthis out of credentials?\n\n336\n00:18:56.329 --> 00:18:59.574\nWell, we're gonna have to change\nthis a little bit because I've used\n\n337\n00:18:59.574 --> 00:19:00.624\ndestructuring here.\n\n338\n00:19:00.624 --> 00:19:05.505\nBut I want to be explicit about some\nconventions for environment variables,\n\n339\n00:19:05.505 --> 00:19:09.220\nor environmental variables,\nthat we will use in Heroku.\n\n340\n00:19:09.220 --> 00:19:12.490\nSo, Heroku will know about these because\nthey will become part of the environment,\n\n341\n00:19:12.490 --> 00:19:14.080\nbecause we'll set them up.\n\n342\n00:19:14.080 --> 00:19:16.530\nSo, what we're gonna do is\nwe're gonna split these apart.\n\n343\n00:19:16.530 --> 00:19:20.317\nI'm just gonna comment that out for\nnow for a reference, make that go away.\n\n344\n00:19:20.317 --> 00:19:25.228\nAnd I'm gonna say, const apiKey =\n\n345\n00:19:25.228 --> 00:19:30.796\nrequire(' ../credentials') or\n\n346\n00:19:30.796 --> 00:19:35.388\nprocess.env.APIKEY, okay.\n\n347\n00:19:35.388 --> 00:19:38.589\nAnd put an underscore there,\nall right, now,\n\n348\n00:19:38.589 --> 00:19:43.310\ntypically environmental variables,\nthe ones that I've read.\n\n349\n00:19:43.310 --> 00:19:47.090\nNow, you may have different conventions\nfor your particular use case.\n\n350\n00:19:47.090 --> 00:19:50.139\nA lot of times they are all caps,\nand if there's multiple words,\n\n351\n00:19:50.139 --> 00:19:51.730\nthere's a underscore there.\n\n352\n00:19:51.730 --> 00:19:55.405\nOr sometimes I have seen like not\neven have the underscore there, so\n\n353\n00:19:55.405 --> 00:19:56.703\nthere's some leeway.\n\n354\n00:19:56.703 --> 00:19:59.781\nBut typically,\nthere everything's capital letters.\n\n355\n00:19:59.781 --> 00:20:06.690\nSo we're going to use that convention,\nI did forget something here.\n\n356\n00:20:06.690 --> 00:20:13.270\nI actually need to do apiKey, because I\ndon't wanna require all of credentials.\n\n357\n00:20:13.270 --> 00:20:18.360\nI want to get just the API key off of it,\nif it's there.\n\n358\n00:20:18.360 --> 00:20:21.020\nNow, what this'll do is\nthis'll try to get API key.\n\n359\n00:20:21.020 --> 00:20:25.828\nBut if it's undefined or it's kind of\nfalsey as far as JavaScript is concerned,\n\n360\n00:20:25.828 --> 00:20:27.182\nthis is the fallback.\n\n361\n00:20:27.182 --> 00:20:32.894\nThis was what the default will be to,\nall right.\n\n362\n00:20:32.894 --> 00:20:34.537\nNow, because of that,\n\n363\n00:20:34.537 --> 00:20:40.350\nwe should be good because we know in\nHeroku this is always gonna be available.\n\n364\n00:20:40.350 --> 00:20:43.910\nIf it's not, and we mess up,\nour app's just gonna repeatedly crash,\n\n365\n00:20:43.910 --> 00:20:45.880\nit's never going to work.\n\n366\n00:20:45.880 --> 00:20:47.600\nSo we're gonna have to keep that in mind.\n\n367\n00:20:47.600 --> 00:20:52.873\nNow, the same thing\nwith the goog ApiKey is\n\n368\n00:20:52.873 --> 00:20:59.331\nrequire(../credentials').googApiKey.\n\n369\n00:20:59.331 --> 00:21:06.470\nOr, and I'm gonna shorten this just for,\nI'm just gonna say GOOG.\n\n370\n00:21:06.470 --> 00:21:07.644\n&gt;&gt; I like goog.\n\n371\n00:21:07.644 --> 00:21:08.580\n&gt;&gt; Yeah, goog.\n&gt;&gt; I like it.\n\n372\n00:21:08.580 --> 00:21:10.040\n&gt;&gt; Goog, goog, goog.\n\n373\n00:21:10.040 --> 00:21:13.520\nJust for typing purposes, but\nnotice it's all capital letters.\n\n374\n00:21:13.520 --> 00:21:19.610\nNow this should all be good,\nI was just thinking about something.\n\n375\n00:21:19.610 --> 00:21:23.500\nYou are probably not gonna have\nthese as environment variables.\n\n376\n00:21:23.500 --> 00:21:27.000\nSo I would like for\nit to try this one first, so\n\n377\n00:21:27.000 --> 00:21:29.080\nI'm actually gonna switch\nthe order of these.\n\n378\n00:21:30.960 --> 00:21:32.128\nOn the fly decision.\n\n379\n00:21:32.128 --> 00:21:34.110\n&gt;&gt; Boy, this is exciting.\n\n380\n00:21:34.110 --> 00:21:37.361\n&gt;&gt; Boom, and just switch the order there.\n\n381\n00:21:37.361 --> 00:21:40.365\nAnd now,\nif the environment does not have that,\n\n382\n00:21:40.365 --> 00:21:43.236\nit will fall back to\na local credentials file.\n\n383\n00:21:43.236 --> 00:21:46.810\nAnd that way, we don't run the risk\nof something going awry or\n\n384\n00:21:46.810 --> 00:21:51.514\nsomething unplanned, or maybe we're\njust having a whoopsie-daisiy bad day.\n\n385\n00:21:51.514 --> 00:21:53.813\nIt's not trying to find\na file that's not there,\n\n386\n00:21:53.813 --> 00:21:56.330\nwhich may call some\nweird state in your app.\n\n387\n00:21:56.330 --> 00:22:01.590\nThis, this process.env, that will always\nbe defined in the node environment.\n\n388\n00:22:01.590 --> 00:22:03.378\nIt might be empty, but it's still there.\n\n389\n00:22:03.378 --> 00:22:06.223\nThis is node specific, so if I say .GOOG,\n\n390\n00:22:06.223 --> 00:22:10.661\nif it's not an environment variable,\nit'll just, [SOUND] gone.\n\n391\n00:22:10.661 --> 00:22:13.064\nSo there's those two places.\n\n392\n00:22:13.064 --> 00:22:19.588\nThere's one final thing that we use,\nwell, kind of just as default.\n\n393\n00:22:19.588 --> 00:22:20.401\n&gt;&gt; The port binding?\n\n394\n00:22:20.401 --> 00:22:26.461\n&gt;&gt; The port binding, you make me so\nhappy sometimes, Zach.\n\n395\n00:22:26.461 --> 00:22:29.061\n&gt;&gt; [LAUGH]\n&gt;&gt; Man, it's validating and\n\n396\n00:22:29.061 --> 00:22:32.990\nvindicating whenever someone's like,\nit's this.\n\n397\n00:22:32.990 --> 00:22:36.520\nAnd I'm like, yeah, so\nthis port binding, and\n\n398\n00:22:36.520 --> 00:22:39.450\nI've done something kind of bad\nhere when I was writing this.\n\n399\n00:22:39.450 --> 00:22:41.000\nNotice I made a variable for it, and\n\n400\n00:22:41.000 --> 00:22:43.900\nI never actually used\nthe variable as the port.\n\n401\n00:22:43.900 --> 00:22:46.090\nThat means I'm gonna have\nto change this every time.\n\n402\n00:22:46.090 --> 00:22:50.190\nShame on me, so,\nwe're gonna change that to port.\n\n403\n00:22:50.190 --> 00:22:52.700\nBut now, I want to say, process.env.PORT,\n\n404\n00:22:52.700 --> 00:22:57.620\nand then the exact same\nthing that we've done.\n\n405\n00:22:57.620 --> 00:22:59.790\nNow this is special to Heroku.\n\n406\n00:22:59.790 --> 00:23:03.978\nHeroku uses this run time variable,\nthis environmental variable,\n\n407\n00:23:03.978 --> 00:23:08.322\nto essentially inject the port that\nis going to be serving internally.\n\n408\n00:23:08.322 --> 00:23:12.350\nThat doesn't necessary mean that it's\ngoing to serve externally through your web\n\n409\n00:23:12.350 --> 00:23:12.873\nbrowser.\n\n410\n00:23:12.873 --> 00:23:18.030\nIt's gonna serve on port 80, but it\ndoes some proxying and containerization.\n\n411\n00:23:18.030 --> 00:23:21.726\nSo you have to give it this ability or\nyour app will start,\n\n412\n00:23:21.726 --> 00:23:26.000\npause, crash, start,\npause, crash, every time.\n\n413\n00:23:26.000 --> 00:23:30.039\nThis should set up our proxy to,\nwell, be a proxy.\n\n414\n00:23:30.039 --> 00:23:36.650\nSo, locally,\nI think we got it all together.\n\n415\n00:23:36.650 --> 00:23:38.990\nBut we do need to make another commit.\n\n416\n00:23:38.990 --> 00:23:47.170\nAnd this is a big gotcha, along with those\nenvironmental variables, for other people.\n\n417\n00:23:47.170 --> 00:23:48.500\nSo don't forget to commit.\n\n418\n00:23:48.500 --> 00:23:50.260\nBecause if you do all those changes and\n\n419\n00:23:50.260 --> 00:23:53.330\nthen you don't push to GitHub,\nthen it never ends up in Heroku.\n\n420\n00:23:53.330 --> 00:23:55.515\n&gt;&gt; So many people are afraid to commit.\n\n421\n00:23:55.515 --> 00:24:00.925\n&gt;&gt; Yeah, yeah, yeah, as far as software\ndevelopment, commit early and often.\n\n422\n00:24:00.925 --> 00:24:02.827\nI can't speak to other parts of your life.\n\n423\n00:24:02.827 --> 00:24:03.883\n&gt;&gt; Yeah, thank you.\n\n424\n00:24:03.883 --> 00:24:07.021\ngit comit -m heroku preparation.\n\n425\n00:24:07.021 --> 00:24:11.710\nMaybe not the best commit message but\nwe'll go with it.\n\n426\n00:24:11.710 --> 00:24:13.210\nAnd I'm just going to say origin master.\n\n427\n00:24:13.210 --> 00:24:16.120\nNow I don't need the dash u there\nbecause I've already set the upstream.\n\n428\n00:24:16.120 --> 00:24:20.240\nTechnically I don't even need the origin\nmaster, but I do like the specificity.\n\n429\n00:24:20.240 --> 00:24:24.820\nAnd I come back, and I refresh, you will\nsee that there's twelve seconds ago,\n\n430\n00:24:24.820 --> 00:24:29.125\nthere were some changes for\nthe HeroKu preparation.\n\n431\n00:24:29.125 --> 00:24:32.400\nSo luckily I'm done.\n\n432\n00:24:32.400 --> 00:24:33.800\nWas it too bad, Zach?\n\n433\n00:24:33.800 --> 00:24:36.400\n&gt;&gt; No, no.\nThis is exciting because now it's like\n\n434\n00:24:36.400 --> 00:24:37.300\nwhat's next?\n\n435\n00:24:37.300 --> 00:24:39.650\nBut I think we've run out of time,\nhaven't we?\n\n436\n00:24:39.650 --> 00:24:40.210\n&gt;&gt; You know what?\n\n437\n00:24:40.210 --> 00:24:42.967\nWe might have run out of\ntime except it's so easy,\n\n438\n00:24:42.967 --> 00:24:45.144\nthat it's only a couple more minutes.\n\n439\n00:24:45.144 --> 00:24:46.670\n&gt;&gt; Really?\nLet's do it.\n\n440\n00:24:46.670 --> 00:24:47.840\n&gt;&gt; It's gonna be crazy.\n\n441\n00:24:47.840 --> 00:24:48.858\n&gt;&gt; So what do we do next?\n\n442\n00:24:48.858 --> 00:24:51.250\n&gt;&gt; So if I come back to my screen here,\n\n443\n00:24:51.250 --> 00:24:56.640\nthere's a few things that, again,\nyou have to come and sign up.\n\n444\n00:24:56.640 --> 00:24:59.590\nThat's kind of a hand waving portion for\nme.\n\n445\n00:24:59.590 --> 00:25:03.160\nBecause you just put in your email and\nuser name and stuff and you hit Send.\n\n446\n00:25:03.160 --> 00:25:05.290\nIt'll send you an email, you verify.\n\n447\n00:25:05.290 --> 00:25:07.130\nThen come back and log in.\n\n448\n00:25:07.130 --> 00:25:10.820\nAnd once we log in,\nthere's my username and password.\n\n449\n00:25:10.820 --> 00:25:17.510\nOnce we log in,\nwe're going to go back to Heroku,\n\n450\n00:25:17.510 --> 00:25:21.070\ngo to the main page, because otherwise\nit'll take you to documentation.\n\n451\n00:25:22.350 --> 00:25:27.550\nEverything that I just said is part\nof the documentation for Node.js.\n\n452\n00:25:27.550 --> 00:25:30.760\nIt does tell you a whole lot more I'm kind\nof giving you the streamline version.\n\n453\n00:25:30.760 --> 00:25:33.120\n&gt;&gt; Yes\n&gt;&gt; From this point,\n\n454\n00:25:33.120 --> 00:25:34.710\nit's gonna ask you to create a new app.\n\n455\n00:25:34.710 --> 00:25:37.160\nThis only shows up the first time.\n\n456\n00:25:37.160 --> 00:25:39.240\nAny other time,\nyou would say Create New App.\n\n457\n00:25:39.240 --> 00:25:43.698\nNot a pipeline, cuz that's a lot of apps\nput together that have different stages.\n\n458\n00:25:43.698 --> 00:25:45.480\nSo I'm gonna create a new app, and\n\n459\n00:25:45.480 --> 00:25:49.240\nthen on the next screen it's going to say,\napp name and runtime selection.\n\n460\n00:25:49.240 --> 00:25:51.810\nTypically, I just go, Create App.\n\n461\n00:25:51.810 --> 00:25:54.720\nIt will generate a name for you, so\nyou don't have to think of them.\n\n462\n00:25:54.720 --> 00:25:56.630\nYou can always come and change that later.\n\n463\n00:25:56.630 --> 00:25:59.370\nSo I'm going to create app, and\n\n464\n00:25:59.370 --> 00:26:02.550\nthen it's going to take you\ndirectly to the pulley screen.\n\n465\n00:26:02.550 --> 00:26:06.500\nThere's a Heroku command line tool kit,\nthat you can use to do similar things.\n\n466\n00:26:06.500 --> 00:26:10.000\nBut since my stuff is hosted on GitHub,\nthat's pretty easy.\n\n467\n00:26:10.000 --> 00:26:11.470\nSo I'm just gonna say Connect to GitHub.\n\n468\n00:26:11.470 --> 00:26:18.020\nAnd then it's gonna ask you to authorize\nthrough OAuth 2 authorization.\n\n469\n00:26:18.020 --> 00:26:21.990\nSo I'm gonna do that, and boom,\nit is now connected to my GitHub.\n\n470\n00:26:21.990 --> 00:26:27.748\nAt that point you do search for\nthe repo, so there's the repo,\n\n471\n00:26:27.748 --> 00:26:32.840\nangcaster-proxy and connect.\n\n472\n00:26:32.840 --> 00:26:35.440\nWhat branch do you want to use for\ndeployments?\n\n473\n00:26:35.440 --> 00:26:39.680\nWell, I want to use the master branch\nbecause that's where I put all my code.\n\n474\n00:26:39.680 --> 00:26:41.220\nDo I want to wait for CI?\n\n475\n00:26:41.220 --> 00:26:42.430\nNope.\n\n476\n00:26:42.430 --> 00:26:45.020\nThe reason being is we don't\nhave any unit tests or\n\n477\n00:26:45.020 --> 00:26:48.740\nany testing, so CI would never pass.\n\n478\n00:26:48.740 --> 00:26:53.830\nSo essentially, this is, for us, the box\nsays do you want me to never deploy?\n\n479\n00:26:53.830 --> 00:26:56.580\nSo we're gonna keep that unchecked, and\n\n480\n00:26:56.580 --> 00:26:58.980\nthen I'm gonna enable\nautomatic deployments.\n\n481\n00:26:58.980 --> 00:27:03.080\nNow what that does, is now every time\nI push new code to the master branch,\n\n482\n00:27:03.080 --> 00:27:07.400\nevery time my master branch changes,\nHeroku will sense it after a little bit,\n\n483\n00:27:07.400 --> 00:27:10.060\npull the new version and\nredeploy it for you.\n\n484\n00:27:10.060 --> 00:27:16.200\nSo it just kind of set it and\nforget it ala Roku rotisserie, that ideal.\n\n485\n00:27:16.200 --> 00:27:21.580\nNow, I'm gonna go ahead and deploy the\nbranch just to show you that it's going\n\n486\n00:27:21.580 --> 00:27:25.190\nto fail because, I told you about those\ngotchas, those environmental variables.\n\n487\n00:27:26.830 --> 00:27:31.660\nIt's going to read out here, tell you,\nyep, it's going, it's working well.\n\n488\n00:27:32.720 --> 00:27:36.490\nAnd in the meantime, while it's deploying,\nI'm gonna go ahead and open the app.\n\n489\n00:27:37.750 --> 00:27:40.600\nSo, it says welcome to your new app, but\n\n490\n00:27:40.600 --> 00:27:45.790\nit's not quite done with actually\ndeploying my application.\n\n491\n00:27:45.790 --> 00:27:50.880\nSo until that happens, we get this nice\nlittle welcome screen in the meantime.\n\n492\n00:27:50.880 --> 00:27:54.450\nSo while we're waiting for that I just\nwanted to highlight some of these\n\n493\n00:27:54.450 --> 00:27:57.740\nthat because we're using the free ones,\nwe don't necessarily have access to.\n\n494\n00:27:57.740 --> 00:28:01.870\nLike metrics,\nwe would have to pay for the hobby or\n\n495\n00:28:01.870 --> 00:28:04.240\nprofessional level to get metrics.\n\n496\n00:28:04.240 --> 00:28:07.670\nIf you wanted to know activity,\nyou get some activity, and\n\n497\n00:28:07.670 --> 00:28:12.200\nactivity is about the actual\nprocess of your application,\n\n498\n00:28:12.200 --> 00:28:15.470\nlike getting pulled from GitHub and\nthings of that nature.\n\n499\n00:28:15.470 --> 00:28:20.530\nAccess, you can add collaborators, so if\nyou want multiple people to maintain this.\n\n500\n00:28:20.530 --> 00:28:25.930\nSettings, well I'm gonna leave it\non Settings because we need this.\n\n501\n00:28:25.930 --> 00:28:29.270\nThis tells you some information\nabout your particular project.\n\n502\n00:28:30.430 --> 00:28:35.500\nThis is also where you can,\nboom, there's the domain.\n\n503\n00:28:35.500 --> 00:28:39.289\nCustom domains are here,\nyou could add a domain but\n\n504\n00:28:39.289 --> 00:28:42.650\nyou do have to obviously\nown the domain name.\n\n505\n00:28:42.650 --> 00:28:45.235\nYou can transfer ownership,\nor you can delete app or\n\n506\n00:28:45.235 --> 00:28:47.368\nyou can take things offline temporarily.\n\n507\n00:28:47.368 --> 00:28:52.207\nWe're gonna stay here because I\nskipped over this config variables,\n\n508\n00:28:52.207 --> 00:28:56.340\nif I refresh,\nI should see application error.\n\n509\n00:28:56.340 --> 00:28:59.630\nAnd the reason being is,\nthose two environmental variables for\n\n510\n00:28:59.630 --> 00:29:02.420\ncredentials are not in Heroku.\n\n511\n00:29:02.420 --> 00:29:06.460\nSo, I have to set those, and\nthose are both in my credentials file.\n\n512\n00:29:06.460 --> 00:29:11.571\nSo, I'm going to say API key and I have\nto remind myself of what I name that,\n\n513\n00:29:11.571 --> 00:29:14.102\nso API_key is the one I just copied.\n\n514\n00:29:14.102 --> 00:29:18.252\nSo reveal configured variables and\n\n515\n00:29:18.252 --> 00:29:22.570\nAPI_key and then paste and add.\n\n516\n00:29:22.570 --> 00:29:25.342\nNow you may be saying, Hey isn't that\ngoing to be available to everybody?\n\n517\n00:29:25.342 --> 00:29:31.609\nWell, if they get into your server\nenvironment, your DINO environment,\n\n518\n00:29:31.609 --> 00:29:36.582\nyou'll probably have a lot\nmore headaches than just this,\n\n519\n00:29:36.582 --> 00:29:40.080\nso it's kind of a lose-lose situation.\n\n520\n00:29:40.080 --> 00:29:42.650\nAnd then Goog is the other credential.\n\n521\n00:29:42.650 --> 00:29:48.219\nAnd I'm gonna grab that credential,\nand Goog, paste,\n\n522\n00:29:49.700 --> 00:29:55.570\nadd, and that should, should is\nthe keyword, that should finish us up.\n\n523\n00:29:55.570 --> 00:29:58.470\nSo we're gonna come back to deploy,\nand I'm inpatient,\n\n524\n00:29:58.470 --> 00:30:02.690\nI'm gonna go ahead and redeploy manually.\n\n525\n00:30:02.690 --> 00:30:05.760\nNow, it's gonna pull back down the code,\ncheck it,\n\n526\n00:30:05.760 --> 00:30:10.290\nbuild the run time environment,\nget all of our stuff set up, and\n\n527\n00:30:10.290 --> 00:30:14.420\nthen bring in those new environmental\nvariables and we should,\n\n528\n00:30:14.420 --> 00:30:20.040\nkey word is should, see a successful\napp deployment for our proxy service.\n\n529\n00:30:21.130 --> 00:30:24.330\nAnd, well, I think that was what,\nabout four minutes or so?\n\n530\n00:30:24.330 --> 00:30:25.159\nFour, or five minutes?\n\n531\n00:30:25.159 --> 00:30:25.797\n&gt;&gt; Yeah, about four.\n\n532\n00:30:25.797 --> 00:30:29.600\n&gt;&gt; So we're just waiting for\nthis last little bit to happen.\n\n533\n00:30:29.600 --> 00:30:31.480\nAnd once that does, we should be good.\n\n534\n00:30:31.480 --> 00:30:32.710\nNow, I'm gonna stay on this screen,\n\n535\n00:30:32.710 --> 00:30:35.050\nbecause this changes\nwhen it says you're done.\n\n536\n00:30:35.050 --> 00:30:39.220\nYou can click view, and\nit will bring you to this application.\n\n537\n00:30:39.220 --> 00:30:40.740\nNow notice it's kinda spinning.\n\n538\n00:30:42.950 --> 00:30:46.600\nBut now, it actually says cannot get.\n\n539\n00:30:46.600 --> 00:30:47.710\nWell why can't it get?\n\n540\n00:30:47.710 --> 00:30:52.910\nWell in our proxy,\nWe don't actually have a route for slash.\n\n541\n00:30:52.910 --> 00:30:55.330\nWe do have a route for slash weather.\n\n542\n00:30:58.160 --> 00:31:01.230\nSlash, I don't know 100 negative.\n\n543\n00:31:02.630 --> 00:31:03.962\nNo, let's not do that.\n\n544\n00:31:03.962 --> 00:31:09.060\n30, because 100 is not an actual latitude.\n\n545\n00:31:09.060 --> 00:31:10.974\nAnd then negative 100.\n\n546\n00:31:10.974 --> 00:31:17.810\nSo I'm gonna hit that and boom, there is a\nrequest with a response from our request.\n\n547\n00:31:17.810 --> 00:31:22.162\nIt is now an https domain that\nHeroku has set up for you.\n\n548\n00:31:22.162 --> 00:31:26.962\nIt's a subdomain of Heroku but\nour proxy is now deployed and\n\n549\n00:31:26.962 --> 00:31:30.134\navailable to be used by everyone else.\n\n550\n00:31:30.134 --> 00:31:34.714\nNow I do want to remind you that a quick\nthing before we head down because I know\n\n551\n00:31:34.714 --> 00:31:38.740\nwe're really toeing the edge on time here,\nbut that's alright.\n\n552\n00:31:40.260 --> 00:31:40.830\nIt is HTTPS.\n\n553\n00:31:40.830 --> 00:31:46.270\nThis is now available for\nanybody to find and use.\n\n554\n00:31:46.270 --> 00:31:48.040\nSo if you wanted to like,\n\n555\n00:31:48.040 --> 00:31:53.430\nonly have your application,\nyou would either have to white list it.\n\n556\n00:31:53.430 --> 00:31:56.730\nWhich means you would have to set up\ncross origin resource sharing thing.\n\n557\n00:31:56.730 --> 00:32:02.040\nAs well as some other authentication and\nauthorization schemes.\n\n558\n00:32:02.040 --> 00:32:03.770\nThat's a little outside of the scope here.\n\n559\n00:32:03.770 --> 00:32:07.620\nSo if you don't want this\naccessible by everybody,\n\n560\n00:32:07.620 --> 00:32:10.250\nyou would have to add more to this.\n\n561\n00:32:10.250 --> 00:32:12.790\nI'm okay with that,\nthat was the original plan.\n\n562\n00:32:13.870 --> 00:32:16.080\nSo I'm just gonna leave it out there.\n\n563\n00:32:16.080 --> 00:32:21.170\nAnd this URL that we say safe pick 48064.\n\n564\n00:32:21.170 --> 00:32:23.340\nThat's fairly specific and long.\n\n565\n00:32:24.400 --> 00:32:28.150\nYou know it, but I could always go and\nchange it later.\n\n566\n00:32:28.150 --> 00:32:30.060\nSo I'm okay with that for now.\n\n567\n00:32:30.060 --> 00:32:33.090\nIt's not ideal, but I think, again,\n\n568\n00:32:33.090 --> 00:32:37.450\nwithin the scope of what we hope to\naccomplish, it's an acceptable compromise.\n\n569\n00:32:37.450 --> 00:32:40.000\nSo definitely was some\nwork involved there.\n\n570\n00:32:40.000 --> 00:32:41.770\nIs all that we have to do currently?\n\n571\n00:32:41.770 --> 00:32:44.950\n&gt;&gt; Well that's all we have to do for\nour proxy, but in order to get our\n\n572\n00:32:44.950 --> 00:32:49.010\nfull app up and going, we need to\ndeploy our AngularJS application.\n\n573\n00:32:50.160 --> 00:32:51.930\nSo I guess that's what we need to do next.\n\n574\n00:32:51.930 --> 00:32:52.900\n&gt;&gt; That's what we need to do.\n\n575\n00:32:52.900 --> 00:32:55.020\nFor deploying our proxy on Heroku.\n\n576\n00:32:55.020 --> 00:32:55.710\nAny last words?\n\n577\n00:32:56.800 --> 00:32:59.380\n&gt;&gt; Nope.\nWe are good to go.\n\n578\n00:32:59.380 --> 00:33:02.060\nI should have just went nope.\n\n579\n00:33:02.060 --> 00:33:05.170\nWe just need to get our other apps up and\ngoing, and we will be ready to go.\n\n580\n00:33:05.170 --> 00:33:07.730\n&gt;&gt; Weather app with AngularJS and Express.\n\n581\n00:33:07.730 --> 00:33:10.010\nThere is a whole lot of video\ncontent in this series.\n\n582\n00:33:10.010 --> 00:33:13.020\nMake sure you watch every single episode,\nyou will be so glad you did.\n\n583\n00:33:13.020 --> 00:33:15.310\nAnd thank you for watching DevPro TV.\n\n584\n00:33:15.310 --> 00:33:17.490\nRemember, a good DevPro\nis always learning.\n\n585\n00:33:17.490 --> 00:33:18.390\nI'm Zach Memos.\n\n586\n00:33:18.390 --> 00:33:19.230\n&gt;&gt; And I'm Justin Dennison.\n\n587\n00:33:19.230 --> 00:33:27.090\n&gt;&gt; We'll see you again.\n[MUSIC]\n\n",
          "vimeoId": "227900009"
        },
        {
          "description": "Justin and Zach cover deploying the web app without Heroku, using 'GITHUB Pages,' hosting our site through 'GIT REPO,' setting up 'GH-PAGES' as a node script, installing the package, setting up a 'GITHUB REPO,' installing the 'GH-PAGES' package, adding the Deploy script, and deployment.",
          "length": "1544",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-14-1-deploying_our_angular_app_on_github_pages-072817-PGM.00_30_36_08.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-14-1-deploying_our_angular_app_on_github_pages-072817-PGM.00_30_36_08.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-14-1-deploying_our_angular_app_on_github_pages-072817-PGM.00_30_36_08.Still001-sm.jpg",
          "title": "Deploying Our Angular App on GitHub Pages",
          "transcript": "WEBVTT\n\n1\n00:00:00.000 --> 00:00:10.000\n[MUSIC]\n\n2\n00:00:13.136 --> 00:00:17.136\nThank you for chosing DevProTV,\nhelping you learn wherever you go.\n\n3\n00:00:17.136 --> 00:00:17.876\nI'm Zach Memos,\n\n4\n00:00:17.876 --> 00:00:21.875\nyour host as we continue on with\nWeather App with AngularJS and Express.\n\n5\n00:00:21.875 --> 00:00:26.180\nThis episode we're gonna be deploying\nour Angular app on GitHub pages.\n\n6\n00:00:26.180 --> 00:00:26.743\nWhat does that mean?\n\n7\n00:00:26.743 --> 00:00:32.050\nWell, Justin Dennison, our DevPro\nresident expert is gonna tell us.\n\n8\n00:00:32.050 --> 00:00:33.861\n&gt;&gt; All right you\ndefinitely over sell that.\n\n9\n00:00:33.861 --> 00:00:35.100\n&gt;&gt; [LAUGH]\n&gt;&gt; But I'm gonna go with it.\n\n10\n00:00:35.100 --> 00:00:37.990\nEventually I'm gonna\nget that on t-shirt so\n\n11\n00:00:37.990 --> 00:00:40.810\nI just march around all puffy chested, so.\n\n12\n00:00:40.810 --> 00:00:42.720\n&gt;&gt; He knows, he knows how to do this.\n\n13\n00:00:42.720 --> 00:00:43.601\n&gt;&gt; So, how are you today, Zach?\n\n14\n00:00:43.601 --> 00:00:44.651\n&gt;&gt; I'm doing great and\n\n15\n00:00:44.651 --> 00:00:48.920\nagain I'm very excited because we're\ncontinuing on building our application.\n\n16\n00:00:50.170 --> 00:00:51.900\nWe're deploying the web app now, right?\n\n17\n00:00:51.900 --> 00:00:53.754\nSo we aren't using Heroku?\n\n18\n00:00:53.754 --> 00:00:58.948\n&gt;&gt; No, we are in fact not using Heroku and\nthe reason we're not using Heroku,\n\n19\n00:00:58.948 --> 00:01:03.333\nlet me just break that down for\nyou cuz that can be kind of crazy.\n\n20\n00:01:03.333 --> 00:01:06.280\nI will tell you we could use Heroku.\n\n21\n00:01:07.580 --> 00:01:11.770\nAnd just to review, what we would have\nto do is build an express server or some\n\n22\n00:01:11.770 --> 00:01:16.010\nserver or something of that nature that\nwould serve up the static assets for us.\n\n23\n00:01:16.010 --> 00:01:17.910\nSo we'd actually have to build that.\n\n24\n00:01:17.910 --> 00:01:19.639\nAnd then deploy it just\nlike we did the proxy.\n\n25\n00:01:19.639 --> 00:01:22.762\nIf you haven't seen the proxy episode,\ndefinitely go check that out,\n\n26\n00:01:22.762 --> 00:01:25.170\ncuz it ends up being really, really easy.\n\n27\n00:01:25.170 --> 00:01:27.652\nBut all we have is stuff\nthat lives in the browser.\n\n28\n00:01:27.652 --> 00:01:31.284\nAll of our real hard work as far as\ndata is hanging out at the proxy,\n\n29\n00:01:31.284 --> 00:01:32.617\nthat's already done.\n\n30\n00:01:32.617 --> 00:01:37.000\nOne could also make the argument that we\ncould've combined these two projects, and\n\n31\n00:01:37.000 --> 00:01:39.653\nwell just wrote a route that\nserves up the web app and\n\n32\n00:01:39.653 --> 00:01:41.830\nthen the proxy is the other set of routes.\n\n33\n00:01:41.830 --> 00:01:43.310\nThat's also valid.\n\n34\n00:01:43.310 --> 00:01:49.455\nNow, for me, I tend to like to keep things\nseparate, it helps with my cognitive load.\n\n35\n00:01:49.455 --> 00:01:52.260\nThose are all possibly three options,\nright?\n\n36\n00:01:52.260 --> 00:01:54.500\nWe could write a separate app.\n\n37\n00:01:54.500 --> 00:01:55.607\nWe could deploy it with it.\n\n38\n00:01:55.607 --> 00:01:59.934\nAnd the third option is\nwhat we're gonna do, and,\n\n39\n00:01:59.934 --> 00:02:03.469\nwell, we're going to use GitHub Pages.\n\n40\n00:02:03.469 --> 00:02:10.310\nSo GitHub Pages is essentially\njust a hosting site for GitHub.\n\n41\n00:02:10.310 --> 00:02:14.362\nAnytime you set up a repo and\nthen you get a site appropriated for\n\n42\n00:02:14.362 --> 00:02:18.356\nit, it looks for an index.html\nat the top level of your repo.\n\n43\n00:02:18.356 --> 00:02:23.742\nAnd when it sees that, it grabs it and\nwill serve it up to a custom\n\n44\n00:02:23.742 --> 00:02:29.650\ndomain that is part of your GitHub\nrepo name and the project name.\n\n45\n00:02:29.650 --> 00:02:33.024\nSo we're going to do that because\nall of our assets are static.\n\n46\n00:02:33.024 --> 00:02:37.092\nIt allows us to keep our source and\nour deployed site separately, but\n\n47\n00:02:37.092 --> 00:02:42.150\nalso keep it separately from, well,\nour proxy, which is living on Heroku.\n\n48\n00:02:42.150 --> 00:02:45.460\n&gt;&gt; It's a good thing we didn't pay for\nthe paid Heroku service then there!\n\n49\n00:02:45.460 --> 00:02:47.873\nSo how do we get this started,\nwhat do we need to do first?\n\n50\n00:02:47.873 --> 00:02:50.990\n&gt;&gt; So just to kinda give you a run\ndown of what we're gonna do.\n\n51\n00:02:50.990 --> 00:02:53.160\nWe could do some of\nthis portions manually,\n\n52\n00:02:53.160 --> 00:02:57.680\nbut we're gonna use some tools that\nare available on the NPM/Node ecosystem.\n\n53\n00:02:57.680 --> 00:03:01.431\nSo we're gonna install GH pages\nwhich stands for GetHub pages,\n\n54\n00:03:01.431 --> 00:03:06.168\nyou can write note scripts and JavaScript\nthat will do like automate processes.\n\n55\n00:03:06.168 --> 00:03:11.215\nBut there's also a command line version\nthat is just gonna take your project and\n\n56\n00:03:11.215 --> 00:03:17.020\nsend it to GitHub for you if it's a valid\nGitHub project or get project, excuse me.\n\n57\n00:03:17.020 --> 00:03:18.014\nSo we're gonna install that package.\n\n58\n00:03:18.014 --> 00:03:21.710\nWe're gonna set up our GitHub repo,\nmake sure that's all good.\n\n59\n00:03:21.710 --> 00:03:25.816\nGo ahead and do an initial push, and\nthen we're gonna do a build-to-deploy, and\n\n60\n00:03:25.816 --> 00:03:27.530\nwell, then we're gonna be done.\n\n61\n00:03:27.530 --> 00:03:29.565\n&gt;&gt; Well, fantastic so\nlet's get moving on that.\n\n62\n00:03:29.565 --> 00:03:32.645\nLet's find out how you do all that.\n\n63\n00:03:32.645 --> 00:03:35.861\n&gt;&gt; All right, well,\nlet's take a look at my screen here and\n\n64\n00:03:35.861 --> 00:03:38.635\nwell I have a webpack running as we stand.\n\n65\n00:03:38.635 --> 00:03:41.027\nThat has been running the whole time\nwe have been working on this project.\n\n66\n00:03:41.027 --> 00:03:44.815\nI'm gonna go ahead and kill that because I\nam inside a client, inside of this window.\n\n67\n00:03:46.135 --> 00:03:53.750\nSo, I'm gonna clear the screen and I'm\ngonna install as dev dependency, gh pages.\n\n68\n00:03:53.750 --> 00:03:58.810\nBecause all of my source code is\ngonna live on a branch in GitHub and\n\n69\n00:03:58.810 --> 00:04:00.310\nthen on my separate branch, and\n\n70\n00:04:00.310 --> 00:04:05.350\nwe'll talk more specifically\nhow this gets created shortly.\n\n71\n00:04:05.350 --> 00:04:11.985\nWe don't need GitHub pages to be sent to\nGitHub in order to have our app served up.\n\n72\n00:04:11.985 --> 00:04:16.380\nSo I'm just gonna say npm\ninstall --save-dev gh-pages.\n\n73\n00:04:16.380 --> 00:04:19.857\nNow, I'm doing this before the git\njust because I know I want this to\n\n74\n00:04:19.857 --> 00:04:22.380\nbe the initial part of the project.\n\n75\n00:04:22.380 --> 00:04:23.367\nSo that's it.\n\n76\n00:04:23.367 --> 00:04:24.580\nIt's done.\n\n77\n00:04:24.580 --> 00:04:25.660\nIt's part of my package.json now.\n\n78\n00:04:25.660 --> 00:04:29.029\nSo if I hop over here and\nlook at my client code and\n\n79\n00:04:29.029 --> 00:04:33.250\nopen my package.json we have\nall these dev dependencies.\n\n80\n00:04:33.250 --> 00:04:36.901\nBut GitHub pages is one of them, okay?\n\n81\n00:04:36.901 --> 00:04:40.480\nNow we're gonna take a quick aside and\ngo ahead and set up our GitHub repo.\n\n82\n00:04:40.480 --> 00:04:44.620\nLink them, do an initial commit push,\nwhich does take a little bit of setup.\n\n83\n00:04:44.620 --> 00:04:46.993\nBut we've already seen this,\nit's kind of like a rinse and repeat.\n\n84\n00:04:46.993 --> 00:04:51.990\nSo I'm gonna say git init and\nthere's our local repo.\n\n85\n00:04:51.990 --> 00:04:54.852\nIf I type git status,\nsorry I used the shortcut.\n\n86\n00:04:54.852 --> 00:04:58.020\nGit status, we have this known modules,\n\n87\n00:04:58.020 --> 00:05:02.555\nthe two package .JSONs,\nsource and then webpack config.\n\n88\n00:05:02.555 --> 00:05:04.718\nNow, if I think about this,\n\n89\n00:05:04.718 --> 00:05:10.940\nI do wanna keep the package.json cuz\nthose are descriptions of my project.\n\n90\n00:05:10.940 --> 00:05:14.020\nSource, well that's all the work I've\nbeen doing so I need to keep that.\n\n91\n00:05:14.020 --> 00:05:18.275\nWebpack config, well that was generated\nbut I also changed it a little bit so\n\n92\n00:05:18.275 --> 00:05:19.555\nI wanna keep that.\n\n93\n00:05:19.555 --> 00:05:23.655\nBut if I think about dist, dist is\nconstantly going to be changing, right?\n\n94\n00:05:23.655 --> 00:05:26.485\nEvery time we build and make an update,\nit's gonna be changing.\n\n95\n00:05:26.485 --> 00:05:27.515\nThat's what's being deployed.\n\n96\n00:05:27.515 --> 00:05:31.490\nYou can think of the dist folder\nas the actual folder we deploy.\n\n97\n00:05:31.490 --> 00:05:35.020\nSo I don't think we wanna\nkeep this in version control.\n\n98\n00:05:35.020 --> 00:05:36.920\nBecause we have the most\nup to date source.\n\n99\n00:05:36.920 --> 00:05:40.140\nWe can always pull and\nbuild just from that.\n\n100\n00:05:41.490 --> 00:05:42.115\nNode modules.\n\n101\n00:05:42.115 --> 00:05:45.892\nWell, we don't wanna keep node\nmodules in our repo either,\n\n102\n00:05:45.892 --> 00:05:48.940\nbecause they're listed\nin the package.json.\n\n103\n00:05:48.940 --> 00:05:53.910\nSo I need to make myself\na gitignore right quick.\n\n104\n00:05:53.910 --> 00:05:58.506\nAnd inside of that gitignore,\nI'm gonna list those two directories,\n\n105\n00:05:58.506 --> 00:06:02.040\nbecause I don't wanna keep\nthose in version control.\n\n106\n00:06:03.690 --> 00:06:04.870\nAnd where did my gitignore go?\n\n107\n00:06:04.870 --> 00:06:05.460\nThere we go.\n\n108\n00:06:05.460 --> 00:06:08.340\nSo this is node_modules.\n\n109\n00:06:08.340 --> 00:06:09.679\nAnd then the dist folder.\n\n110\n00:06:10.780 --> 00:06:15.970\nJust went into, had a lapse and forgot I\nwas in Atom and tried to do Vim stuff.\n\n111\n00:06:15.970 --> 00:06:18.923\nSo if you saw colons and\nshenanigans going on,\n\n112\n00:06:18.923 --> 00:06:22.419\nthat was because I thought I\nwas in a different editor.\n\n113\n00:06:22.419 --> 00:06:27.128\nSo if I look now and I type git status, I\nhave a .git ignore with those two folders\n\n114\n00:06:27.128 --> 00:06:31.760\nwith all that stuff that may be changing,\nand I already know about.\n\n115\n00:06:31.760 --> 00:06:33.920\nWell, I'm not gonna keep\nthose in version control,\n\n116\n00:06:33.920 --> 00:06:37.050\nbecause I can build those from\nwhat we have described here.\n\n117\n00:06:37.050 --> 00:06:39.730\nSmaller package,\ngonna be easier to maintain.\n\n118\n00:06:39.730 --> 00:06:41.520\nIt's just a good practice.\n\n119\n00:06:42.600 --> 00:06:48.180\nSo if I say git add -A,\ngit status just to make sure,\n\n120\n00:06:48.180 --> 00:06:50.180\nlook at all this stuff that we've done.\n\n121\n00:06:50.180 --> 00:06:51.450\nSo here we go.\n\n122\n00:06:51.450 --> 00:06:55.856\nNormally, again, just to re-emphasize,\nI would do this at the beginning and\n\n123\n00:06:55.856 --> 00:06:58.110\ndo small commits as we're going.\n\n124\n00:06:58.110 --> 00:07:00.910\nBut I didn't wanna muddy the waters\nwith all the other stuff that we were\n\n125\n00:07:00.910 --> 00:07:02.410\nlearning at the time.\n\n126\n00:07:02.410 --> 00:07:08.065\nSo as long as I don't see node modules or\ndist or any hidden stuff in this list,\n\n127\n00:07:08.065 --> 00:07:13.037\nI'm good to go, and I can say,\ngit commit -m 'initial commit'.\n\n128\n00:07:13.037 --> 00:07:16.620\nAll right, so there's our initial commit.\n\n129\n00:07:16.620 --> 00:07:22.510\nWe have it locally, let's create a GitHub\nrepo, link them, do our first push, and\n\n130\n00:07:22.510 --> 00:07:28.720\nwe're real, real close to going ahead and\ndeploying this and that being in.\n\n131\n00:07:28.720 --> 00:07:29.950\n&gt;&gt; Being alive in color.\n\n132\n00:07:29.950 --> 00:07:35.430\n&gt;&gt; Yup, so\nif I come over here to GitHub and\n\n133\n00:07:35.430 --> 00:07:39.940\nI, well I don't know why I'm scrolling\ndown there and I click new repository.\n\n134\n00:07:39.940 --> 00:07:44.700\nLet's just call this ang castor client.\n\n135\n00:07:44.700 --> 00:07:47.280\nI never renamed it and\nI'll just stay with that name.\n\n136\n00:07:47.280 --> 00:07:49.264\nSo I'm gonna create the repository.\n\n137\n00:07:49.264 --> 00:07:54.092\nI'm gonna grab this URL and\nthen git remote add, and\n\n138\n00:07:54.092 --> 00:08:00.805\nlet me actually clear that up there,\norigin and then paste, all right.\n\n139\n00:08:00.805 --> 00:08:04.083\nSo git push- u origin master.\n\n140\n00:08:04.083 --> 00:08:05.720\nI'm just following\nthe github instructions.\n\n141\n00:08:07.340 --> 00:08:08.910\nThat's all I'm doing, okay?\n\n142\n00:08:09.950 --> 00:08:13.960\nNow at this point I should have\nthe master branch over here.\n\n143\n00:08:15.070 --> 00:08:15.780\nThere it is.\n\n144\n00:08:17.170 --> 00:08:20.370\nWell, our github's linked,\neverything is good to go.\n\n145\n00:08:20.370 --> 00:08:23.064\nI'm wanna take a slight detour,\nbefore we get and\n\n146\n00:08:23.064 --> 00:08:25.320\nyou're like just deploy it already.\n\n147\n00:08:25.320 --> 00:08:28.161\nNah, nah, not quite, not quite.\n\n148\n00:08:28.161 --> 00:08:32.301\nIf I now, since I have that pushed,\nif I go to this first page under settings?\n\n149\n00:08:32.301 --> 00:08:34.090\nAnd I'm gonna zoom in just a little bit.\n\n150\n00:08:34.090 --> 00:08:36.400\nLet me make this a little bit bigger.\n\n151\n00:08:36.400 --> 00:08:40.010\nAnd if I scroll down,\nthere's all these things and\n\n152\n00:08:40.010 --> 00:08:44.960\nactually, GitHub pages is,\nwell, described as one of them.\n\n153\n00:08:44.960 --> 00:08:48.460\nAnd it asks you,\nwhat source do you want to use?\n\n154\n00:08:48.460 --> 00:08:50.250\nWell there are some\nconventions that you can use.\n\n155\n00:08:50.250 --> 00:08:53.760\nThe master branch which means your\nindex.html would have to be in the very\n\n156\n00:08:53.760 --> 00:08:56.420\ntop folder and\nit would have to reference everything.\n\n157\n00:08:56.420 --> 00:08:59.370\nSo if you're building like a static\nblog or something like that.\n\n158\n00:08:59.370 --> 00:09:03.190\nThat's fine, but we're using a build\nsystem to bundle all of this up.\n\n159\n00:09:03.190 --> 00:09:04.830\nSo that's a little iffy.\n\n160\n00:09:04.830 --> 00:09:09.470\nWe could technically do this\nmaster branch docs folder and\n\n161\n00:09:09.470 --> 00:09:11.960\nthen change that disk directory to docs.\n\n162\n00:09:11.960 --> 00:09:14.240\nAnd then just keep it in there,\nand we would have to.\n\n163\n00:09:14.240 --> 00:09:17.490\nEvery time we build,\nwe would have to commit and push.\n\n164\n00:09:17.490 --> 00:09:20.340\nAnd now we're kinda muddying build and\nsource.\n\n165\n00:09:20.340 --> 00:09:22.320\nI don't particularly like that.\n\n166\n00:09:22.320 --> 00:09:27.360\nAnd then there's a none, okay,\nwell there you go, that's all I have.\n\n167\n00:09:27.360 --> 00:09:31.120\nNow GitHub Pages is not just meant for\nwhat we're doing.\n\n168\n00:09:31.120 --> 00:09:35.370\nYou can actually use GitHub's own tool,\ncalled Jekyll,\n\n169\n00:09:35.370 --> 00:09:39.510\nto generate a static page blog and\nhost it on GitHub, and\n\n170\n00:09:39.510 --> 00:09:45.270\nthen the GitHub pages will show up nice,\nrendered, pretty, all of that fun stuff.\n\n171\n00:09:45.270 --> 00:09:50.010\nIf you click on this link it\nwill take you to GitHub Pages.\n\n172\n00:09:50.010 --> 00:09:55.727\nAnd GitHub Pages will describe essentially\nhow to get things up and going.\n\n173\n00:09:55.727 --> 00:10:00.864\nYou can set up your very own GitHub Pages,\nlike about me for my user or\n\n174\n00:10:00.864 --> 00:10:06.288\norganization or I can set it up per\nproject and ultimately I can do both.\n\n175\n00:10:06.288 --> 00:10:10.508\nSo I can set it up for my user, describe\nwho I am, my portfolio, what I've done,\n\n176\n00:10:10.508 --> 00:10:15.490\nand then for each project I can set up a\nsite that is associated with the project.\n\n177\n00:10:15.490 --> 00:10:17.555\nAnd then it starts\nasking you questions and\n\n178\n00:10:17.555 --> 00:10:22.190\nwill lead you through how to do this\nif you were editing it by hand.\n\n179\n00:10:23.300 --> 00:10:26.000\nThat's fine, but\nwe're using a build process.\n\n180\n00:10:26.000 --> 00:10:28.758\nWe have some complicated steps here.\n\n181\n00:10:28.758 --> 00:10:33.482\nManaging this by hand,\nthough we're capable of doing it,\n\n182\n00:10:33.482 --> 00:10:36.458\ncould be a little bit of an issue, okay?\n\n183\n00:10:36.458 --> 00:10:39.070\nSo maybe we won't do that.\n\n184\n00:10:41.430 --> 00:10:44.910\nBut you could do that and\nthis is a wonderful resource.\n\n185\n00:10:44.910 --> 00:10:49.830\nAgain, they recommend using a tool\ncalled Jekyll, which is Ruby based, and\n\n186\n00:10:49.830 --> 00:10:53.410\nis actually a blob platform\nthat deploys to GitHub Pages.\n\n187\n00:10:54.980 --> 00:10:59.460\nSo, I'm going to close out of this and\nthat begs the question.\n\n188\n00:10:59.460 --> 00:11:00.700\nHow are we going to deploy?\n\n189\n00:11:00.700 --> 00:11:04.900\nAre we going to do that part by hand\nbecause we're moving over to a branch?\n\n190\n00:11:04.900 --> 00:11:08.280\nAnd, no we're not.\n\n191\n00:11:08.280 --> 00:11:13.210\nAnd just to illustrate, or excuse me,\njust to provide some context.\n\n192\n00:11:13.210 --> 00:11:19.180\nThis is the only two options that we have\nbecause it does not detect anything else.\n\n193\n00:11:19.180 --> 00:11:23.140\nIf we had more branches,\nit would detect those.\n\n194\n00:11:23.140 --> 00:11:26.614\nBy default, or\nkind of a convention not by default,\n\n195\n00:11:26.614 --> 00:11:32.066\na convention is using gh-pages.\n\n196\n00:11:32.066 --> 00:11:37.164\nWhich if you open this site,\ngh-pages as the deployment branch,\n\n197\n00:11:37.164 --> 00:11:43.548\nand that's, because that's the convention,\nit will be looking for gh-pages.\n\n198\n00:11:43.548 --> 00:11:48.171\nWell, we could create a new\nbranch called gh-pages,\n\n199\n00:11:48.171 --> 00:11:54.301\ntake the dist folder out of our gitignore,\ncommit it after we built it and\n\n200\n00:11:54.301 --> 00:11:59.990\npush at the gh-pages along with\nall of our other source code.\n\n201\n00:11:59.990 --> 00:12:03.460\nBut again we're muddying the water there.\n\n202\n00:12:03.460 --> 00:12:05.892\nAnd that seems like a lot of work\nthat I have to remember to do.\n\n203\n00:12:05.892 --> 00:12:07.740\n&gt;&gt; [LAUGH]\n&gt;&gt; And make sure I don't mess up my repo.\n\n204\n00:12:09.400 --> 00:12:11.530\nSo we're gonna use that convention but\n\n205\n00:12:11.530 --> 00:12:16.630\nthe way we're gonna use that\nconvention is through gh-pages npm.\n\n206\n00:12:16.630 --> 00:12:22.350\nSo this is an npm module\nwe've installed it and\n\n207\n00:12:22.350 --> 00:12:25.500\nthis is one of those where\nyou have to read the docs\n\n208\n00:12:25.500 --> 00:12:30.030\nto the fullest extent in order to go,\nyeah, that's what I want.\n\n209\n00:12:30.030 --> 00:12:35.010\nBecause if you come to this node module,\nyou can actually require, and\n\n210\n00:12:35.010 --> 00:12:39.000\nuse it, and write scripts,\nlike gh-pages publish, the dist folder,\n\n211\n00:12:39.000 --> 00:12:41.020\nand then it runs a call back function.\n\n212\n00:12:41.020 --> 00:12:43.709\nSo, you can script all of this\nby writing more JavaScript.\n\n213\n00:12:45.150 --> 00:12:49.989\nWell I could do that and\nthere are all these additional options.\n\n214\n00:12:49.989 --> 00:12:54.661\nOne thing to know, note that any\nfiles in the gh-page is branch\n\n215\n00:12:54.661 --> 00:12:58.466\nthat are not in the source files,\nwill be removed.\n\n216\n00:12:58.466 --> 00:12:59.823\nNow what does it mean by source?\n\n217\n00:12:59.823 --> 00:13:02.898\nIt means the source directory\nthat you are publishing.\n\n218\n00:13:02.898 --> 00:13:06.012\nSee the add option if you want\nto keep any of the files.\n\n219\n00:13:06.012 --> 00:13:11.200\nSo there's all these options and I don't\nwanna write more code to deploy my code.\n\n220\n00:13:11.200 --> 00:13:13.950\nI really just want this one simple thing,\n\n221\n00:13:13.950 --> 00:13:17.250\nI could roll my own but, I feel like\nthis should be able to do what I want.\n\n222\n00:13:17.250 --> 00:13:20.880\nAnd if you scroll down and\nyou keep scrolling,\n\n223\n00:13:20.880 --> 00:13:25.500\nyou can last to the very\nend of the documentation.\n\n224\n00:13:25.500 --> 00:13:26.510\nCommand line utility.\n\n225\n00:13:28.290 --> 00:13:33.334\nWith a local install of gh-pages you can\nset a package script in our package.json\n\n226\n00:13:33.334 --> 00:13:37.013\ncalled deploy, and say gh-pages-d,\n\n227\n00:13:37.013 --> 00:13:41.650\nwhich stands for what directory, and\nyou can point it to the directory.\n\n228\n00:13:41.650 --> 00:13:45.260\nThis is exactly what we want,\nbecause we've used Webpack.\n\n229\n00:13:45.260 --> 00:13:47.770\nAnd it made a dist folder and\nwe didn't rename it.\n\n230\n00:13:49.850 --> 00:13:51.630\nWell we already have\nthe package installed.\n\n231\n00:13:51.630 --> 00:13:53.650\nWe just need to put it\nin our script stack, and\n\n232\n00:13:53.650 --> 00:13:58.300\nfingers crossed, hopefully we can\ndeploy and make sure everything works.\n\n233\n00:13:58.300 --> 00:13:59.720\nWell, everything works.\n\n234\n00:14:01.930 --> 00:14:04.320\nSo let's actually do just that.\n\n235\n00:14:04.320 --> 00:14:06.930\nI'm gonna open up package.json.\n\n236\n00:14:06.930 --> 00:14:07.990\nAnd I'm gonna add a script.\n\n237\n00:14:09.280 --> 00:14:12.760\nDown here after dev,\nI'm gonna make deploy.\n\n238\n00:14:14.420 --> 00:14:18.740\nAnd all that's gonna\nbe is gh-pages-d dist.\n\n239\n00:14:18.740 --> 00:14:22.810\nIt's exactly what was in the documentation\nbecause it fits the convention that\n\n240\n00:14:22.810 --> 00:14:26.050\nwe used.\n\n241\n00:14:26.050 --> 00:14:30.397\nSo we should be able to go npm\nrun build and then npm run dev.\n\n242\n00:14:30.397 --> 00:14:35.330\nNow, a lot of times,\nyou will see people try to combine those,\n\n243\n00:14:35.330 --> 00:14:38.789\nI would say webpack and gh-pages-d dist.\n\n244\n00:14:38.789 --> 00:14:41.590\nWhen I've tried that in the past,\nI've gotten mixed results.\n\n245\n00:14:41.590 --> 00:14:43.950\nSometimes it would fail and\ndo weird things.\n\n246\n00:14:43.950 --> 00:14:45.430\nSo I always do them separately.\n\n247\n00:14:46.450 --> 00:14:47.610\nIn the grand scheme of things,\n\n248\n00:14:47.610 --> 00:14:51.850\nthat's very little manual work compared\nto what we could have been doing.\n\n249\n00:14:51.850 --> 00:14:55.440\nSo I'm gonna say npm run build.\n\n250\n00:14:55.440 --> 00:14:58.452\nI'm gonna make sure I have\nthe most up to date build.\n\n251\n00:14:58.452 --> 00:15:01.670\nAnd Webpack's gonna build,\npull in all of our assets and\n\n252\n00:15:01.670 --> 00:15:04.470\nit's gonna spit them out\nto this dist folder.\n\n253\n00:15:04.470 --> 00:15:06.070\nNotice there's an index.html there.\n\n254\n00:15:07.680 --> 00:15:09.990\nI chose that name because\nthat's convention.\n\n255\n00:15:09.990 --> 00:15:12.880\nAgain, I'm a big convention\nover configuration person.\n\n256\n00:15:12.880 --> 00:15:19.650\nAnd if we say npm run deploy,\nwell, we should see a deployment.\n\n257\n00:15:19.650 --> 00:15:25.710\nHere's hoping, and notice it says\n\"Published.\" right there, is it published?\n\n258\n00:15:25.710 --> 00:15:30.346\nI don't know, let's come back to our repo,\n\n259\n00:15:30.346 --> 00:15:35.963\ndo a refresh and\nnow if you scroll down on the settings.\n\n260\n00:15:35.963 --> 00:15:43.721\nIt says your site is published at\nmyusername.github.io/angcaster-client.\n\n261\n00:15:43.721 --> 00:15:44.920\nSo it's the repo name.\n\n262\n00:15:44.920 --> 00:15:47.220\nThis is one of those side projects.\n\n263\n00:15:47.220 --> 00:15:50.165\nIf I click this and\nI open it in another window.\n\n264\n00:15:51.315 --> 00:15:52.434\nLook at that.\n\n265\n00:15:52.434 --> 00:15:55.450\nIt asks me, do you want your location now?\n\n266\n00:15:55.450 --> 00:16:04.036\nAnd if I allow, it'll try to go fetch\nthat information and I think I allowed.\n\n267\n00:16:04.036 --> 00:16:07.607\nI did allow, and let's zoom in\na little bit so we can see things.\n\n268\n00:16:07.607 --> 00:16:11.038\nAnd that is not what I wanted.\n\n269\n00:16:11.038 --> 00:16:16.890\n[BLANK AUDIO] A fail to load and\nmixed content.\n\n270\n00:16:16.890 --> 00:16:22.927\nThis page was loaded over HTTPS but\nrequested to local host 8080.\n\n271\n00:16:22.927 --> 00:16:29.480\nMan, we deployed and we totally forgot\nto switch out to our actual live proxy.\n\n272\n00:16:29.480 --> 00:16:33.810\n&gt;&gt; So it's trying to get\nlocal host 8080 as our URL.\n\n273\n00:16:35.600 --> 00:16:38.658\nSo this is one of the gotchas that if\nyou're doing this local development,\n\n274\n00:16:38.658 --> 00:16:41.485\nyou hard code some of these values and\nyou don't use configuration.\n\n275\n00:16:41.485 --> 00:16:45.570\nAnd it's fine if we have these\nsmall things here and there.\n\n276\n00:16:45.570 --> 00:16:49.737\nBut I didn't use any configuration,\nso now, I gotta go find all of those.\n\n277\n00:16:49.737 --> 00:16:52.130\nWell, shame on me.\n\n278\n00:16:52.130 --> 00:16:54.030\nWe'll just go with it, right?\n\n279\n00:16:54.030 --> 00:16:55.140\n&gt;&gt; It's a teachable moment.\n\n280\n00:16:55.140 --> 00:16:56.180\n&gt;&gt; It is a teachable moment.\n\n281\n00:16:56.180 --> 00:16:56.740\n&gt;&gt; It is.\n\n282\n00:16:56.740 --> 00:16:59.940\n&gt;&gt; And full disclosure,\nI knew this was gonna happen.\n\n283\n00:16:59.940 --> 00:17:01.690\n&gt;&gt; Yeah, he did actually.\n\n284\n00:17:01.690 --> 00:17:06.085\n&gt;&gt; So, If I come back over here and\nwhere would that be happening?\n\n285\n00:17:06.085 --> 00:17:08.915\nWell, if I go to geolocation service.\n\n286\n00:17:08.915 --> 00:17:11.975\nNo, no, that's not where it's happening.\n\n287\n00:17:11.975 --> 00:17:16.765\nIf I go to weather,\nhere's those local host things, right?\n\n288\n00:17:17.855 --> 00:17:19.095\nWell, what should that be replaced by?\n\n289\n00:17:20.835 --> 00:17:24.275\nIf I come over here, here's my proxy that\nwe deployed in the previous episode.\n\n290\n00:17:24.275 --> 00:17:26.945\nYou should check that out\nif you haven't seen that.\n\n291\n00:17:26.945 --> 00:17:32.723\nIt's essentially the base URL portion,\nthe main domain name,\n\n292\n00:17:32.723 --> 00:17:36.580\nit has changed to instead this Horoku one.\n\n293\n00:17:37.610 --> 00:17:43.475\nNow, yes am I deploying this to GitHub and\nit will now be publicly available.\n\n294\n00:17:43.475 --> 00:17:45.602\nYeah, so if you don't want this public,\nthat could be an issue.\n\n295\n00:17:45.602 --> 00:17:51.690\nI am okay with it, ultimately because\nI am going to take these down.\n\n296\n00:17:51.690 --> 00:17:54.570\nBut, you know, what if you didn't.\n\n297\n00:17:54.570 --> 00:17:58.012\nYou would need to white-list,\nprotect and authorize, and authenticate.\n\n298\n00:17:58.012 --> 00:18:00.920\nAgain, that's one of those things that\nis going to take a lot more work than we\n\n299\n00:18:00.920 --> 00:18:04.320\ncurrently have in this in\norder to make that happen.\n\n300\n00:18:04.320 --> 00:18:05.960\nSo I'm gonna grab this base URL.\n\n301\n00:18:07.430 --> 00:18:10.720\nAnd now, since I'm working alone,\n\n302\n00:18:10.720 --> 00:18:15.667\nI'm just gonna assume that whether\nwe're working locally or not,\n\n303\n00:18:15.667 --> 00:18:22.870\nI'm gonna paste that there and\npaste that there.\n\n304\n00:18:22.870 --> 00:18:25.860\nNotice there's no double slashes or\nanything.\n\n305\n00:18:25.860 --> 00:18:27.350\nI'm just gonna assume that we're good.\n\n306\n00:18:27.350 --> 00:18:29.830\nNow again,\nthis is going to break the other way.\n\n307\n00:18:29.830 --> 00:18:34.130\nOur local dev is now gonna be broken if we\ntry to use our local proxy that's running.\n\n308\n00:18:35.570 --> 00:18:39.455\nThere's a way to fix that, but\nI just want to get this up and running,\n\n309\n00:18:39.455 --> 00:18:44.975\nget it deployed, and then address that\nin a way well, when it comes back up.\n\n310\n00:18:44.975 --> 00:18:48.935\nAnd it will, but\ndeployment is our ultimate goal.\n\n311\n00:18:48.935 --> 00:18:51.605\nSo if I come back over here and\nI get status.\n\n312\n00:18:51.605 --> 00:18:52.885\nNotice I have two changes.\n\n313\n00:18:52.885 --> 00:18:58.608\nSo I'm gonna say git add -A.\n\n314\n00:18:58.608 --> 00:19:05.550\nAnd I'm gonna say prepare for\ngh-pages deployments,\n\n315\n00:19:05.550 --> 00:19:12.195\nlet me pop this up to the top,\ngh-pages deployment,\n\n316\n00:19:12.195 --> 00:19:17.820\nas well as removed\nreferences to local host.\n\n317\n00:19:19.970 --> 00:19:20.600\nAlright?\n\n318\n00:19:20.600 --> 00:19:24.070\nAgain, that's going to break when\nwe go back into development mode.\n\n319\n00:19:24.070 --> 00:19:27.530\nSo we got some, we got some things\nwe can't figure out, right?\n\n320\n00:19:27.530 --> 00:19:29.260\nSo localhost, good deal.\n\n321\n00:19:29.260 --> 00:19:29.815\nAnd then boom.\n\n322\n00:19:29.815 --> 00:19:34.329\nAll right, I'm gonna git push\norigin master to make sure it's\n\n323\n00:19:34.329 --> 00:19:37.490\nthe most up to date code\non my master branch.\n\n324\n00:19:38.890 --> 00:19:41.350\nAnd then I'm going to run build.\n\n325\n00:19:41.350 --> 00:19:43.980\nWhich is going to rebuild\nto my dist folder.\n\n326\n00:19:45.120 --> 00:19:50.670\nAnd then after my build,\nI'm going to rerun npm run deploy, and\n\n327\n00:19:50.670 --> 00:19:55.780\nafter that deploys, we should be able to\ngo back and check that when I refresh,\n\n328\n00:19:55.780 --> 00:20:00.960\nit can actually get weather data and\nrender something to the screen.\n\n329\n00:20:00.960 --> 00:20:07.000\nSo I'm gonna refresh, and wait for\nit, wait for it, wait for it.\n\n330\n00:20:08.470 --> 00:20:09.630\nSo what happened?\n\n331\n00:20:12.050 --> 00:20:13.520\nThis still says local host.\n\n332\n00:20:14.520 --> 00:20:15.800\nWhy does it say local host?\n\n333\n00:20:17.180 --> 00:20:21.860\nWell, GitHub pages are not always\ninstantaneous and neither is Horoku.\n\n334\n00:20:21.860 --> 00:20:26.230\nSo sometimes you have to give it a little\ntime in order to propagate the deployment\n\n335\n00:20:26.230 --> 00:20:27.420\nfeatures.\n\n336\n00:20:27.420 --> 00:20:31.650\nIf we come back, how could I\ncheck to see if it was deployed?\n\n337\n00:20:31.650 --> 00:20:35.420\nHopefully, it will propagate while\nI'm showing you how to check this.\n\n338\n00:20:35.420 --> 00:20:40.620\nIf you come back to your main code and\nyou see this gh-pages branch, this says,\n\n339\n00:20:40.620 --> 00:20:43.130\nfive minutes ago, but\nnotice this says a minute ago.\n\n340\n00:20:44.720 --> 00:20:45.310\nAll right?\n\n341\n00:20:45.310 --> 00:20:48.712\nOne minute ago.\nNow, if that deployed one minute ago,\n\n342\n00:20:48.712 --> 00:20:51.800\nwhy isn't that what's being served up?\n\n343\n00:20:51.800 --> 00:20:53.782\nWell, it's going through\na variety of processes.\n\n344\n00:20:53.782 --> 00:20:55.340\nTo some extent, this is magic.\n\n345\n00:20:55.340 --> 00:20:57.440\nSo we have to give it\na little bit of time.\n\n346\n00:20:57.440 --> 00:21:02.090\nBut you do wanna make sure that these are\nupdated and the very nature of gh-pages,\n\n347\n00:21:02.090 --> 00:21:05.150\nyou're just going to get\nwhatever has changed, updated.\n\n348\n00:21:05.150 --> 00:21:05.922\nIt's using Git to do that.\n\n349\n00:21:08.310 --> 00:21:10.718\nSo the only thing that\nchanged was the main bundle,\n\n350\n00:21:10.718 --> 00:21:12.739\ncuz that's what we changed in our source.\n\n351\n00:21:12.739 --> 00:21:15.248\n&gt;&gt; Yep.\n&gt;&gt; So if I come to settings, and\n\n352\n00:21:15.248 --> 00:21:21.850\nI'm going to try it one more time,\nand hopefully we're good to go here.\n\n353\n00:21:21.850 --> 00:21:23.260\nAnd let's see, we'll open this up.\n\n354\n00:21:25.490 --> 00:21:26.831\nIt's still saying local host.\n\n355\n00:21:26.831 --> 00:21:32.130\nWell, that is just\nthe nature of the beast.\n\n356\n00:21:32.130 --> 00:21:36.390\nWe may have to take a short break and let\nthis propagate, and then finish this up.\n\n357\n00:21:36.390 --> 00:21:37.910\n&gt;&gt; Shenanigans.\n\n358\n00:21:37.910 --> 00:21:40.720\nWelcome back, well,\nhas it finally propagated?\n\n359\n00:21:40.720 --> 00:21:41.490\n&gt;&gt; Well, it did.\n\n360\n00:21:41.490 --> 00:21:46.490\nIt took two or three minutes,\nbut for viewing pleasure,\n\n361\n00:21:46.490 --> 00:21:48.900\nI just didn't wanna be going,\nwe're just waiting.\n\n362\n00:21:48.900 --> 00:21:50.250\n&gt;&gt; TV magic.\n\n363\n00:21:50.250 --> 00:21:52.530\n&gt;&gt; So if we take a look at my screen.\n\n364\n00:21:52.530 --> 00:21:53.505\nWell there it is.\n\n365\n00:21:53.505 --> 00:21:57.090\nIt has propagated back and\nI will show you, I will refresh now.\n\n366\n00:21:57.090 --> 00:22:01.365\nThis is the dev pro GitHub.io\nencaster client and\n\n367\n00:22:01.365 --> 00:22:04.431\nthen it finally returns back to me.\n\n368\n00:22:04.431 --> 00:22:09.390\nIf I wanted to search for somewhere\nelse like Los Angeles, California.\n\n369\n00:22:10.630 --> 00:22:12.670\nDid I spell Los Angeles, right?\n\n370\n00:22:12.670 --> 00:22:14.370\nLos Angelos or Los.\n\n371\n00:22:14.370 --> 00:22:16.840\n&gt;&gt; ANGELES.\n\n372\n00:22:16.840 --> 00:22:17.896\n&gt;&gt; We'll see, it did.\n\n373\n00:22:17.896 --> 00:22:19.810\nNotice that it changed.\n\n374\n00:22:19.810 --> 00:22:21.990\nIt actually ticked the time difference.\n\n375\n00:22:21.990 --> 00:22:23.580\nSo it’s really fast\nafter that initial load,\n\n376\n00:22:23.580 --> 00:22:25.590\nbecause it’s doing some hardware things.\n\n377\n00:22:25.590 --> 00:22:27.140\nIt's pretty fast coming back.\n\n378\n00:22:27.140 --> 00:22:30.095\nIt's actually faster than you would think,\n\n379\n00:22:30.095 --> 00:22:33.770\nbecause it's calling to\nmultiple services and stuff.\n\n380\n00:22:33.770 --> 00:22:37.830\nJust to show you, I'm going to say,\nI don't know, Toronto.\n\n381\n00:22:39.530 --> 00:22:41.550\nToronto.\nAnd then boom.\n\n382\n00:22:41.550 --> 00:22:43.180\nAnd notice, boom.\n\n383\n00:22:43.180 --> 00:22:45.790\nIt's pretty fast and\nit's going to a bunch of places.\n\n384\n00:22:45.790 --> 00:22:49.530\nAnd that's because now, the internet\nconnection that exists between these two\n\n385\n00:22:49.530 --> 00:22:54.080\nis probably faster than the internet\nconnection that exists between my local\n\n386\n00:22:54.080 --> 00:22:58.660\ncomputer and the actual proxy\nwhen it was hanging out in space.\n\n387\n00:22:58.660 --> 00:23:03.010\nSo that's a plus, and well,\nwe actually have a deployment.\n\n388\n00:23:03.010 --> 00:23:07.346\nBut we can agree Zach, it doesn't look\nlike our app is quite finished, does it?\n\n389\n00:23:07.346 --> 00:23:10.230\n&gt;&gt; No, no, it looks like we need\nto do something a little bit more.\n\n390\n00:23:10.230 --> 00:23:13.000\nDo we have time to go ahead and\nlook at that or not?\n\n391\n00:23:13.000 --> 00:23:14.180\n&gt;&gt; Well, we're gonna do more.\n\n392\n00:23:14.180 --> 00:23:15.410\nI actually have more planned, but\n\n393\n00:23:15.410 --> 00:23:19.270\nI wanted to take a quick aside and\nset up these deployment procedures.\n\n394\n00:23:19.270 --> 00:23:21.310\nBecause now they're set up.\n\n395\n00:23:21.310 --> 00:23:24.330\nEvery time I hit a milestone,\nI can quickly re-deploy.\n\n396\n00:23:24.330 --> 00:23:28.640\nAnytime I change the proxy,\nI can do a get add, get commit, push.\n\n397\n00:23:28.640 --> 00:23:30.060\nHeroku will re-deploy for me.\n\n398\n00:23:30.060 --> 00:23:31.700\nI'll just have to make\nsure it doesn't go down.\n\n399\n00:23:31.700 --> 00:23:33.920\nAnd that's kind of on me for now.\n\n400\n00:23:33.920 --> 00:23:38.340\nAnd then for the client side application,\nif I make changes, and\n\n401\n00:23:38.340 --> 00:23:41.930\nonce I hit a milestone,\nget add, get commit get push.\n\n402\n00:23:41.930 --> 00:23:47.500\nAnd then MPM run bill, MPM run deploy,\nand then everything will be up-to-date.\n\n403\n00:23:47.500 --> 00:23:50.390\nSo I've automated a good portion of this,\nand\n\n404\n00:23:50.390 --> 00:23:54.050\nbefore we got too much deeper where there\nmight some other code, some other changes,\n\n405\n00:23:54.050 --> 00:23:58.390\nI wanted to illustrate that if you\nset these up pretty much any time and\n\n406\n00:23:58.390 --> 00:24:03.190\nyou've automated some of these\ndeployment procedures, they'll just\n\n407\n00:24:03.190 --> 00:24:08.260\nallow you to keep moving at a faster\npace than maybe they would otherwise.\n\n408\n00:24:08.260 --> 00:24:11.720\n&gt;&gt; Now deploying our Angular\napp on GitHub pages.\n\n409\n00:24:11.720 --> 00:24:14.390\nExcellent information as usual Justin,\ngood job,\n\n410\n00:24:14.390 --> 00:24:16.310\ndo you want to add anything\nelse before we move on?\n\n411\n00:24:16.310 --> 00:24:19.130\n&gt;&gt; Well,\nlet's talk about what I have planned.\n\n412\n00:24:19.130 --> 00:24:20.170\n&gt;&gt; Yes.\n\n413\n00:24:20.170 --> 00:24:21.650\n&gt;&gt; For us, right?\n\n414\n00:24:21.650 --> 00:24:23.170\nWe do need a little bit of styling,\n\n415\n00:24:23.170 --> 00:24:27.570\nI don't say that I wanna have\nthe greatest styling ever.\n\n416\n00:24:27.570 --> 00:24:29.080\nWe also need to take the data and\n\n417\n00:24:29.080 --> 00:24:33.500\nrepresent it in a little bit different way\nthan just list the items on the screen.\n\n418\n00:24:34.510 --> 00:24:36.810\nSo there's a few other things\nthat I want to get done.\n\n419\n00:24:36.810 --> 00:24:38.990\nA little bit of style, maybe add a chart.\n\n420\n00:24:38.990 --> 00:24:42.160\nBecause minutely,\nthat's probably the easiest way to see it.\n\n421\n00:24:42.160 --> 00:24:46.220\nIf it just goes up or down, it's gonna let\nyou know about the precipitation rate.\n\n422\n00:24:46.220 --> 00:24:47.760\nAnd then hourly.\n\n423\n00:24:47.760 --> 00:24:50.370\nAnd we need images, right?\n\n424\n00:24:50.370 --> 00:24:53.200\nBecause each one of these\nhas an icon name, and\n\n425\n00:24:53.200 --> 00:24:58.490\nwe can see how to use images as\nstatic assets, deploy those,\n\n426\n00:24:58.490 --> 00:25:02.420\nand now we actually start seeing\nimages in nice, pretty colors.\n\n427\n00:25:02.420 --> 00:25:06.130\nAgain, I do not say I'm\na wonderful designer.\n\n428\n00:25:06.130 --> 00:25:08.560\nSo whatever we get will well,\n\n429\n00:25:08.560 --> 00:25:12.550\nhopefully you're happy with it because it\nmakes me feel good just to give it a try.\n\n430\n00:25:12.550 --> 00:25:13.463\nSo that's that's were going.\n\n431\n00:25:13.463 --> 00:25:15.428\nPreferably do have a few\nmore things to do.\n\n432\n00:25:15.428 --> 00:25:19.230\n&gt;&gt; Function over form, so don't expect\nfluffy clouds of raining bunnies and\n\n433\n00:25:19.230 --> 00:25:19.870\nthings like that.\n\n434\n00:25:19.870 --> 00:25:22.290\nSo weather app with AngularJS and express.\n\n435\n00:25:22.290 --> 00:25:23.620\nLots of videos in this series.\n\n436\n00:25:23.620 --> 00:25:26.060\nMake sure you watch them all,\nyou'll be very glad you did.\n\n437\n00:25:26.060 --> 00:25:29.460\nAnd a good dev pro is always learning,\ndid you know that?\n\n438\n00:25:29.460 --> 00:25:30.550\nI'm Zach Memos.\n\n439\n00:25:30.550 --> 00:25:31.510\n&gt;&gt; And I'm Justin Dennison.\n\n440\n00:25:31.510 --> 00:25:32.586\n&gt;&gt; And thank you for\nwatching, we'll see you soon.\n\n441\n00:25:32.586 --> 00:25:37.573\n[MUSIC]\n\n",
          "vimeoId": "227899709"
        },
        {
          "description": "In this episode, Daniel and Justin they will make the Weather App more visually appealing by using the CSS framework Tachyons. Here they take you from installation of Tachyons, including it in the build, and using the examples from the Tachyons documentation as a template to improve the Weather App.",
          "length": "2020",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-15-1-adding_some_style-073117-PGM.00_37_28_11.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-15-1-adding_some_style-073117-PGM.00_37_28_11.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-15-1-adding_some_style-073117-PGM.00_37_28_11.Still001-sm.jpg",
          "title": "Adding Some Style",
          "transcript": "",
          "vimeoId": "228215264"
        },
        {
          "description": "In this episode, Daniel and Justin tackle the Hourly data in our Weather App. Here they use Tachyons to make the data more visually appealing as well as giving it a side-scrolling effect.",
          "length": "1200",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-16-1-scrollable_hourly_component-073117-PGM.00_32_18_18.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-16-1-scrollable_hourly_component-073117-PGM.00_32_18_18.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-16-1-scrollable_hourly_component-073117-PGM.00_32_18_18.Still001-sm.jpg",
          "title": "Scrollable Houly Component",
          "transcript": "",
          "vimeoId": "228215476"
        },
        {
          "description": "In this episode, Daniel and Justin finish up the Weather App by making the minutely data more readable through charting. They use NVD3 to chart the data, explaining each step. They also discuss why you would want to chart with this method instead of using HTML5.",
          "length": "2342",
          "thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-17-1-minutely_component_chart-073117-PGM.00_56_40_28.Still001.png",
          "thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-17-1-minutely_component_chart-073117-PGM.00_56_40_28.Still001-med.jpg",
          "thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-weatherappwithangularjsandexpress/techskills-weatherappwithangularjsandexpress-17-1-minutely_component_chart-073117-PGM.00_56_40_28.Still001-sm.jpg",
          "title": "Minutely Component Chart",
          "transcript": "",
          "vimeoId": "228215625"
        }
      ],
      "title": "Weather Application with Angular Express"
    }
  ],
  "url": "weather-applicationangular-express",
  "vLab": false
}
