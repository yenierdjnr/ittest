{
	"id": "58daafb74e91770b003c86d2",
	"name": "Dive into the Python Standard Library",
	"subtitle": "All the tools you didn't know you already had",
	"description": "Having the correct tool for the job is a great way to be productive. If you find yourself keeping writing similar bits of code over and over again when programming in Python, then Python may already have the tool that you need to make your code more readable, more maintainable, and possible faster or memory efficient. Python has an extensive set of modules that are part of the standard library. If you want to know more about the power built into the Python Standard Library, then stay tuned!",
	"descriptionMD": "Having the correct tool for the job is a great way to be productive. If you find yourself keeping writing similar bits of code over and over again when programming in Python, then Python may already have the tool that you need to make your code more readable, more maintainable, and possible faster or memory efficient. Python has an extensive set of modules that are part of the standard library. If you want to know more about the power built into the Python Standard Library, then stay tuned!",
	"length": 18712,
	"hidden": false,
	"url": "python",
	"productionStart": "2017-03-28T04:00:00Z",
	"productionEnd": "2017-04-07T23:00:00Z",
	"episodes": [
		{
			"title": "the glob Module",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the power of the glob module. This is part of the Python Standard Library. This module uses patterns to create a list, or iterator, of files and folders for iterating over providing a way to select files that satisfy a construct just like you would in Bash.",
			"vimeoId": "212583590",
			"length": 688,
			"hidden": false,
			"url": "glob-module",
			"order": 11,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-1-1-the_glob_module-032817-PGM.00_00_03_01.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-1-1-the_glob_module-032817-PGM.00_00_03_01.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-1-1-the_glob_module-032817-PGM.00_00_03_01.Still001-med.jpg"
		},
		{
			"title": "The itertools Module: Infinite Iterations",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the infinite iterators that are available in the itertools modules. These tools allow for the repeated consumption of values from it. Additionally, he outlines some potential 'gotchas' that you may experience.",
			"vimeoId": "212583880",
			"length": 669,
			"hidden": false,
			"url": "intertools-module-infinite-iterations",
			"order": 21,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-2-1-the_itertools_modules_infinite_iterators-032817-PGM.00_11_04_03.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-2-1-the_itertools_modules_combinatronics-032817-PGM.00_10_10_00.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-2-1-the_itertools_modules_combinatronics-032817-PGM.00_10_10_00.Still001-med.jpg"
		},
		{
			"title": "The itertools Module: Combinatorics",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates using combinatoric tools from the itertools module. These include product, permutations, combinations, and combinations_with_replacement. These tools are wonderful when you need to generate a relationship among the elements of an iterable or between the elements among multiple iterators.",
			"vimeoId": "212584163",
			"length": 615,
			"hidden": false,
			"url": "intertools-module-combinatorics",
			"order": 22,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-2-1-the_itertools_modules_combinatronics-032817-PGM.00_10_10_00.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-2-1-the_itertools_modules_combinatronics-032817-PGM.00_10_10_00.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-2-1-the_itertools_modules_combinatronics-032817-PGM.00_10_10_00.Still001-med.jpg"
		},
		{
			"title": "The itertools Module: Shortest Input",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates using iterators from the itertools modules that terminate on the shortest input such as tee, chain, chain.from_iterable, starmap, and compress. Though not exhaustive, Justin shows how to flatten iterables, make a selection of elements from an iterable, as well as how to manage iterables for function consumption.",
			"vimeoId": "212584401",
			"length": 1241,
			"hidden": false,
			"url": "intertools-module-shortest-input",
			"order": 23,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-2-2-the_itertools_modules_shortest_input-032817-PGM.00_20_35_16.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-2-2-the_itertools_modules_shortest_input-032817-PGM.00_20_35_16.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-2-2-the_itertools_modules_shortest_input-032817-PGM.00_20_35_16.Still001-med.jpg"
		},
		{
			"title": "The collections Module: namedtuple",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the use of the collections' module namedtuple. This factory function allows one to create lightweight tuples that have named field access as well as the zero-based index referencing that are available in tuples from the beginning. If you need a quick, lightweight replacement to a class, then stay tuned.",
			"vimeoId": "210978978",
			"length": 759,
			"hidden": false,
			"url": "collections-module-namedtuple",
			"order": 31,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-3-1-the_collections_module_namedtuple-032917-PGM.00_12_33_04.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-3-1-the_collections_module_namedtuple-032917-PGM.00_12_33_04.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-3-1-the_collections_module_namedtuple-032917-PGM.00_12_33_04.Still001-med.jpg"
		},
		{
			"title": "The collections Module: defaultdict",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin continues looking at the collections module with a special look into the defaultdict structure. The defaultdict allows you to create a default value when a key is addeded to the dictionary. Justin demonstrates how to use this structure to make partitioning of data more maintainable and readable.",
			"vimeoId": "210977670",
			"length": 925,
			"hidden": false,
			"url": "collections-module-defaultdict",
			"order": 32,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-3-2-the_collections_module_defaultdict-032917-PGM.00_15_19_27.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-3-2-the_collections_module_defaultdict-032917-PGM.00_15_19_27.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-3-2-the_collections_module_defaultdict-032917-PGM.00_15_19_27.Still001-med.jpg"
		},
		{
			"title": "The collections Module: Counter",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin takes a closer look at the Counter structure for creating a distribution of frequency of elements from an iterable. The Counter provides additional methods to find the most common elements as well as interacting with multiple Counter instances.",
			"vimeoId": "210978467",
			"length": 661,
			"hidden": false,
			"url": "collections-module-counter",
			"order": 33,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-3-3-the_collections_module_counter-032917-PGM.00_11_21_21.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-3-3-the_collections_module_counter-032917-PGM.00_11_21_21.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-3-3-the_collections_module_counter-032917-PGM.00_11_21_21.Still001-med.jpg"
		},
		{
			"title": "the functools Module: Iru_cache",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the lru_cache decorator function from the functools module. If you need speed up a time intensive operation that gives the same output repeatedly, then take a look.",
			"vimeoId": "212911391",
			"length": 448,
			"hidden": false,
			"url": "functools-module-irucache",
			"order": 41,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-4-1-the_functools_module_la_cache-040417-PGM.00_07_24_02.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-4-1-the_functools_module_la_cache-040417-PGM.00_07_24_02.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-4-1-the_functools_module_la_cache-040417-PGM.00_07_24_02.Still001-med.jpg"
		},
		{
			"title": "The functools Module: total_ordering",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the total_ordering decorator function from the functools module. Tired of spending time implementing all of the comparison special methods of a class just to prototype and idea? Join Justin as he wields the power of the Python Standard Library to overcome those slowdowns.",
			"vimeoId": "214173830",
			"length": 707,
			"hidden": false,
			"url": "functools-module-totalordering",
			"order": 42,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-4-2-the_functools_module_total_ordering-040417-PGM.00_11_43_06.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-4-2-the_functools_module_total_ordering-040417-PGM.00_11_43_06.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-4-2-the_functools_module_total_ordering-040417-PGM.00_11_43_06.Still001-med.jpg"
		},
		{
			"title": "The functools Module: partial",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the partial function from the the functools module. Tired of typing the same function arguments over and over only to change a one or two of the values? Join Justin as he overcomes those nuisances with the Python Standard Library?",
			"vimeoId": "214173980",
			"length": 674,
			"hidden": false,
			"url": "functools-module-partial",
			"order": 43,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-4-3-the_functools_module_partial-040417-PGM.00_11_25_13.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-4-3-the_functools_module_partial-040417-PGM.00_11_25_13.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-4-3-the_functools_module_partial-040417-PGM.00_11_25_13.Still001-med.jpg"
		},
		{
			"title": "The functools Module: reduce",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the reduce function from the the functools module. Whether you are interested in functional programming or need a way to write custom functions that combine the elements of a collection, reduce is an effective function to know.",
			"vimeoId": "243858417",
			"length": 704,
			"hidden": false,
			"url": "functools-module-reduce",
			"order": 44,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-4-4-the_functools_module_reduce-042117-high.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-4-4-the_functools_module_reduce-042117-high-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-4-4-the_functools_module_reduce-042117-high-med.jpg"
		},
		{
			"title": "The json Module: Reading \u0026 Writing",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the usage of the json module for converting between Python data structures and valid JSON strings.",
			"vimeoId": "243857818",
			"length": 663,
			"hidden": false,
			"url": "json-module-reading-writing",
			"order": 51,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-5-1-the_json_module_read_and_write-042017-PGM.00_10_57_18.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-5-1-the_json_module_read_and_write-042017-PGM.00_10_57_18.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-5-1-the_json_module_read_and_write-042017-PGM.00_10_57_18.Still001-med.jpg"
		},
		{
			"title": "The json Module: Function Encode \u0026 Decode",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates using custom serialization and deserialization functions with the json module to handle objects that are not by default handled by the json module.",
			"vimeoId": "243857334",
			"length": 679,
			"hidden": false,
			"url": "json-module-function-encode-decode",
			"order": 52,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-5-2-the_json_module_function_encoder_and_decode-PGM.00_11_14_01.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-5-2-the_json_module_function_encoder_and_decode-PGM.00_11_14_01.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-5-2-the_json_module_function_encoder_and_decode-PGM.00_11_14_01.Still001-med.jpg"
		},
		{
			"title": "The json Module: Class Encode \u0026 Decode",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates using class based encoding and decoding of JSON with the json module.",
			"vimeoId": "243858316",
			"length": 663,
			"hidden": false,
			"url": "json-module-class-encode-decode",
			"order": 53,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-5-3-the_json_module_class_encode_and_decode-042117-PGM.00_10_58_17.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-5-3-the_json_module_class_encode_and_decode-042117-PGM.00_10_58_17.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-5-3-the_json_module_class_encode_and_decode-042117-PGM.00_10_58_17.Still001-med.jpg"
		},
		{
			"title": "The csv Module: CSV Reading \u0026 Writing",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the power of the csv module in the standard library for reading and parsing data that is transmitted using csv file format.",
			"vimeoId": "243858172",
			"length": 852,
			"hidden": false,
			"url": "csv-module-csv-reading-writing",
			"order": 61,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-6-1-the_csv_module_csv_reading_and_writing-042117-PGM.00_14_06_27.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-6-1-the_csv_module_csv_reading_and_writing-042117-PGM.00_14_06_27.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-6-1-the_csv_module_csv_reading_and_writing-042117-PGM.00_14_06_27.Still001-med.jpg"
		},
		{
			"title": "The csv Module: DictReader and DictWriter",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the DictReader and DictWriter objects in the csv module to produce a different representation of the data found in a comma separated file.",
			"vimeoId": "243858057",
			"length": 873,
			"hidden": false,
			"url": "csv-module-dictreaderdictwriter",
			"order": 62,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-6-2-the_csv_module_csv_dictreader_and_dictwriter-042117-PGM.00_14_28_12.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-6-2-the_csv_module_csv_dictreader_and_dictwriter-042117-PGM.00_14_28_12.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-deveintothestandardlibrary-6-2-the_csv_module_csv_dictreader_and_dictwriter-042117-PGM.00_14_28_12.Still001-med.jpg"
		},
		{
			"title": "The os.path Module",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates some of the common actions that you use to create valid system level paths using the Python standard library.",
			"vimeoId": "243858516",
			"length": 714,
			"hidden": false,
			"url": "ospath-module",
			"order": 71,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-7-1-the_os_path_module-081117-PGM.00_00_43_17.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-7-1-the_os_path_module-081117-PGM.00_00_43_17.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-7-1-the_os_path_module-081117-PGM.00_00_43_17.Still001-med.jpg"
		},
		{
			"title": "The socket Module: TCP Server",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin explores building a tcp server using the standard libraries socket module primitives.",
			"vimeoId": "243858636",
			"length": 572,
			"hidden": false,
			"url": "socket-module-tcp-server",
			"order": 81,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-1-the_socket_module_tcp_server-081117.00_00_05_15.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-1-the_socket_module_tcp_server-081117.00_00_05_15.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-1-the_socket_module_tcp_server-081117.00_00_05_15.Still001-med.jpg"
		},
		{
			"title": "The socket Module: TCP Client",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin uses the Python Standard library to create a TCP client akin to netcat.",
			"vimeoId": "243858724",
			"length": 588,
			"hidden": false,
			"url": "socket-module-tcp-client",
			"order": 82,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-2-the_socket_module_tcp_client-081117.00_00_05_22.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-2-the_socket_module_tcp_client-081117.00_00_05_22.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-2-the_socket_module_tcp_client-081117.00_00_05_22.Still001-med.jpg"
		},
		{
			"title": "The socket Module: UDP Server",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin creates a UDP server using the socket module primitives from the Python standard library.",
			"vimeoId": "243858826",
			"length": 354,
			"hidden": false,
			"url": "socket-module-udp-server",
			"order": 83,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-3-the_socket_module_udp_server-081117.00_00_05_15.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-3-the_socket_module_udp_server-081117.00_00_05_15.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-3-the_socket_module_udp_server-081117.00_00_05_15.Still001-med.jpg"
		},
		{
			"title": "The socket Module: UDP Client",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the utilization of the socket module primitives to create a UDP client similar to the UDP version of netcat.",
			"vimeoId": "243856979",
			"length": 426,
			"hidden": false,
			"url": "socket-module-udp-client",
			"order": 84,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-4-the_socket_module_udp_client-081117.00_00_05_16.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-4-the_socket_module_udp_client-081117.00_00_05_16.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-8-4-the_socket_module_udp_client-081117.00_00_05_16.Still001-med.jpg"
		},
		{
			"title": "datetime strftime",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the use of a datetime object's strftime method to create a formatted string representation of a datetime.",
			"vimeoId": "244098903",
			"length": 566,
			"hidden": false,
			"url": "datetime-strftime",
			"order": 91,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-9-1-1-datetime_strftime-112117-PGM.00_09_23_16.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-9-1-1-datetime_strftime-112117-PGM.00_09_23_16.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-9-1-1-datetime_strftime-112117-PGM.00_09_23_16.Still001-med.jpg"
		},
		{
			"title": "datetime strptime",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the using the strptime function to parse datetimes from strings.",
			"vimeoId": "244098823",
			"length": 494,
			"hidden": false,
			"url": "datetime-strptime",
			"order": 92,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-9-2-1-datetime_strptime-112117_PGM.00_08_10_29.Still001.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-9-2-1-datetime_strptime-112117_PGM.00_08_10_29.Still001-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-9-2-1-datetime_strptime-112117_PGM.00_08_10_29.Still001-med.jpg"
		},
		{
			"title": "concurrent.futures ThreadPoolExecutor submit",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin demonstrates the use of the submit function using a ThreadPoolExecutor. Additionally, he highlights how the submit method compares to the map method on the executor.",
			"vimeoId": "245255173",
			"length": 1005,
			"hidden": false,
			"url": "concurrentfutures-threadpoolexecutor-submit",
			"order": 103,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-10-3-1-concurrent_futures_threadpool_executor_submit-112917-high.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-10-3-1-concurrent_futures_threadpool_executor_submit-112917-high-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-10-3-1-concurrent_futures_threadpool_executor_submit-112917-high-med.jpg"
		},
		{
			"title": "concurrent.futures ProcessPoolExecutor submit",
			"topic": "58e2a91066fd520b00cc238f",
			"description": "In this episode, Justin dives into using the ProcessPoolExecutor submit method to add the ability to perform concurrent work.",
			"vimeoId": "245255557",
			"length": 1029,
			"hidden": false,
			"url": "concurrentfutures-processpoolexecutor-submit",
			"order": 104,
			"thumbnail": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-10-4-1-concurrent_futures_processpool_executor_submit-112917-high.png",
			"thumbnailSm": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-10-4-1-concurrent_futures_processpool_executor_submit-112917-high-sm.jpg",
			"thumbnailMed": "https://itprotv-image-bucket.s3.amazonaws.com/techskills-diveintothestandardlibrary/techskills-diveintothestandardlibrary-10-4-1-concurrent_futures_processpool_executor_submit-112917-high-med.jpg"
		}
	],
	"topics": [
		{
			"title": "Dive into the Python Standard Library",
			"id": "58e2a91066fd520b00cc238f",
			"order": 1
		}
	]
}