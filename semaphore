#!/bin/sh

# This is the build script that semaphore calls.
# If you want to rename it, then you will need to
# need change the job on semaphore. This could end
# up with broken builds on branches and things.
# Good luck.

set -e
set -x

REGION=us-east-1
TASK=$1

case "$TASK" in
  "setup")
    docker network create itprotv_bridge
    ;;

  "build")
      case "$BRANCH_NAME" in
        "master")
          # Gatsby is broken and only supports two environments so we place this hack to "correctly"
          # have a staging environment
          mv .env.ugh_gatsby.staging .env.production
          MARKETING_ENV=staging docker-compose -f docker-compose.semaphore.yml up --exit-code-from marketing
           aws --region="$REGION" \
              s3 sync public s3://itprotv-marketing-staging --exclude ./*.map --delete
          ./tasks/build "$REVISION"
          ;;
        "production")
          # Gatsby is broken and only supports two environments so we place this hack to "correctly"
          # have a staging environment and production
          mv .env.ugh_gatsby.production .env.production
          MARKETING_ENV=production docker-compose -f docker-compose.semaphore.yml up --exit-code-from marketing
          aws --region="$REGION" \
              s3 sync public s3://itprotv-marketing-production --exclude ./*.map --delete
          ./tasks/build "$REVISION"
          ;;
      *)
          MARKETING_ENV=staging docker-compose -f docker-compose.semaphore.yml up --exit-code-from marketing
          ;;
      esac;
    ;;

  "deploy")
    case "$BRANCH_NAME" in
      "master")
          # Gatsby is broken and only supports two environments so we place this hack to "correctly"
          # have a staging environment and production
          mv .env.ugh_gatsby.staging .env.production
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> terraform/settings.env
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> terraform/settings.env
          ./tasks/deploy staging "$REVISION"
          ;;

      "production")
          # Gatsby is broken and only supports two environments so we place this hack to "correctly"
          # have a staging environment and production
          mv .env.ugh_gatsby.production .env.production
          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> terraform/settings.env
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> terraform/settings.env
          ./tasks/deploy production "$REVISION"
          ;;

      *) echo "Not a deployable branch, therefore not syncing."
        ;;
    esac;
    ;;

  *)
    echo "Unknown semaphore script task: $TASK"
    exit 1
esac;
